
foo_opt:     file format elf64-x86-64


Disassembly of section .init:

00000000000004b8 <_init>:
 4b8:	sub    rsp,0x8
 4bc:	mov    rax,QWORD PTR [rip+0x200b25]        # 200fe8 <__gmon_start__>
 4c3:	test   rax,rax
 4c6:	je     4ca <_init+0x12>
 4c8:	call   rax
 4ca:	add    rsp,0x8
 4ce:	ret    

Disassembly of section .plt:

00000000000004d0 <.plt>:
 4d0:	push   QWORD PTR [rip+0x200af2]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 4d6:	jmp    QWORD PTR [rip+0x200af4]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 4dc:	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

00000000000004e0 <__cxa_finalize@plt>:
 4e0:	jmp    QWORD PTR [rip+0x200b12]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 4e6:	xchg   ax,ax

Disassembly of section .text:

00000000000004f0 <main>:
 4f0:	mov    rdx,QWORD PTR [rsi+0x8]
 4f4:	movsxd rdi,edi
 4f7:	mov    rax,QWORD PTR [rsi+0x10]
 4fb:	test   rdi,rdi
 4fe:	mov    BYTE PTR [rdx],0x2a
 501:	je     506 <main+0x16>
 503:	add    BYTE PTR [rax],dil
 506:	mov    rax,QWORD PTR [rsi+0x8]
 50a:	mov    rdx,QWORD PTR [rsi+0x10]
 50e:	movsx  eax,BYTE PTR [rax]
 511:	movsx  edx,BYTE PTR [rdx]
 514:	add    eax,edx
 516:	ret    
 517:	nop    WORD PTR [rax+rax*1+0x0]

0000000000000520 <_start>:
 520:	xor    ebp,ebp
 522:	mov    r9,rdx
 525:	pop    rsi
 526:	mov    rdx,rsp
 529:	and    rsp,0xfffffffffffffff0
 52d:	push   rax
 52e:	push   rsp
 52f:	lea    r8,[rip+0x17a]        # 6b0 <__libc_csu_fini>
 536:	lea    rcx,[rip+0x103]        # 640 <__libc_csu_init>
 53d:	lea    rdi,[rip+0xffffffffffffffac]        # 4f0 <main>
 544:	call   QWORD PTR [rip+0x200a96]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 54a:	hlt    
 54b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000550 <deregister_tm_clones>:
 550:	lea    rdi,[rip+0x200ab9]        # 201010 <__TMC_END__>
 557:	push   rbp
 558:	lea    rax,[rip+0x200ab1]        # 201010 <__TMC_END__>
 55f:	cmp    rax,rdi
 562:	mov    rbp,rsp
 565:	je     580 <deregister_tm_clones+0x30>
 567:	mov    rax,QWORD PTR [rip+0x200a6a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 56e:	test   rax,rax
 571:	je     580 <deregister_tm_clones+0x30>
 573:	pop    rbp
 574:	jmp    rax
 576:	nop    WORD PTR cs:[rax+rax*1+0x0]
 580:	pop    rbp
 581:	ret    
 582:	nop    DWORD PTR [rax+0x0]
 586:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000000590 <register_tm_clones>:
 590:	lea    rdi,[rip+0x200a79]        # 201010 <__TMC_END__>
 597:	lea    rsi,[rip+0x200a72]        # 201010 <__TMC_END__>
 59e:	push   rbp
 59f:	sub    rsi,rdi
 5a2:	mov    rbp,rsp
 5a5:	sar    rsi,0x3
 5a9:	mov    rax,rsi
 5ac:	shr    rax,0x3f
 5b0:	add    rsi,rax
 5b3:	sar    rsi,1
 5b6:	je     5d0 <register_tm_clones+0x40>
 5b8:	mov    rax,QWORD PTR [rip+0x200a31]        # 200ff0 <_ITM_registerTMCloneTable>
 5bf:	test   rax,rax
 5c2:	je     5d0 <register_tm_clones+0x40>
 5c4:	pop    rbp
 5c5:	jmp    rax
 5c7:	nop    WORD PTR [rax+rax*1+0x0]
 5d0:	pop    rbp
 5d1:	ret    
 5d2:	nop    DWORD PTR [rax+0x0]
 5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000005e0 <__do_global_dtors_aux>:
 5e0:	cmp    BYTE PTR [rip+0x200a29],0x0        # 201010 <__TMC_END__>
 5e7:	jne    618 <__do_global_dtors_aux+0x38>
 5e9:	cmp    QWORD PTR [rip+0x200a07],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5f1:	push   rbp
 5f2:	mov    rbp,rsp
 5f5:	je     603 <__do_global_dtors_aux+0x23>
 5f7:	mov    rdi,QWORD PTR [rip+0x200a0a]        # 201008 <__dso_handle>
 5fe:	call   4e0 <__cxa_finalize@plt>
 603:	call   550 <deregister_tm_clones>
 608:	mov    BYTE PTR [rip+0x200a01],0x1        # 201010 <__TMC_END__>
 60f:	pop    rbp
 610:	ret    
 611:	nop    DWORD PTR [rax+0x0]
 618:	repz ret 
 61a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000000620 <frame_dummy>:
 620:	push   rbp
 621:	mov    rbp,rsp
 624:	pop    rbp
 625:	jmp    590 <register_tm_clones>
 62a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000000630 <foo>:
 630:	test   rdx,rdx
 633:	mov    BYTE PTR [rdi],0x2a
 636:	je     63a <foo+0xa>
 638:	add    BYTE PTR [rsi],dl
 63a:	repz ret 
 63c:	nop    DWORD PTR [rax+0x0]

0000000000000640 <__libc_csu_init>:
 640:	push   r15
 642:	push   r14
 644:	mov    r15,rdx
 647:	push   r13
 649:	push   r12
 64b:	lea    r12,[rip+0x20079e]        # 200df0 <__frame_dummy_init_array_entry>
 652:	push   rbp
 653:	lea    rbp,[rip+0x20079e]        # 200df8 <__init_array_end>
 65a:	push   rbx
 65b:	mov    r13d,edi
 65e:	mov    r14,rsi
 661:	sub    rbp,r12
 664:	sub    rsp,0x8
 668:	sar    rbp,0x3
 66c:	call   4b8 <_init>
 671:	test   rbp,rbp
 674:	je     696 <__libc_csu_init+0x56>
 676:	xor    ebx,ebx
 678:	nop    DWORD PTR [rax+rax*1+0x0]
 680:	mov    rdx,r15
 683:	mov    rsi,r14
 686:	mov    edi,r13d
 689:	call   QWORD PTR [r12+rbx*8]
 68d:	add    rbx,0x1
 691:	cmp    rbp,rbx
 694:	jne    680 <__libc_csu_init+0x40>
 696:	add    rsp,0x8
 69a:	pop    rbx
 69b:	pop    rbp
 69c:	pop    r12
 69e:	pop    r13
 6a0:	pop    r14
 6a2:	pop    r15
 6a4:	ret    
 6a5:	nop
 6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000006b0 <__libc_csu_fini>:
 6b0:	repz ret 

Disassembly of section .fini:

00000000000006b4 <_fini>:
 6b4:	sub    rsp,0x8
 6b8:	add    rsp,0x8
 6bc:	ret    
