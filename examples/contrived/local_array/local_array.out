Entry                = 1060
Size of TLS image    = Undefined
Start address of TLS = Undefined
FS                   = Undefined
Sections:
318: .interp (28)                       338: .note.gnu.property (32)            358: .note.gnu.build-id (36)            37c: .note.ABI-tag (32)                 
3a0: .gnu.hash (36)                     3c8: .dynsym (168)                      470: .dynstr (152)                      508: .gnu.version (14)                  
518: .gnu.version_r (48)                548: .rela.dyn (192)                    608: .rela.plt (24)                     1000: .init (27)                        
1020: .plt (32)                         1040: .plt.got (16)                     1050: .plt.sec (16)                     1060: .text (693)                       
1318: .fini (13)                        2000: .rodata (4)                       2004: .eh_frame_hdr (76)                2050: .eh_frame (304)                   
3db8: .init_array (8)                   3dc0: .fini_array (8)                   3dc8: .dynamic (496)                    3fb8: .got (72)                         
4000: .data (16)                        4010: .bss (8)                          0: .comment (36)                        0: .symtab (1584)                       
0: .strtab (543)                        0: .shstrtab (282)                      
Addresses mapped to symbols:
1000: _init                             1060: _start                            1090: deregister_tm_clones              10c0: register_tm_clones                
1100: __do_global_dtors_aux             1140: frame_dummy                       1149: local_array                       1276: main                              
12a0: __libc_csu_init                   1310: __libc_csu_fini                   1318: _fini                             2000: _IO_stdin_used                    
2004: __GNU_EH_FRAME_HDR                217c: __FRAME_END__                     3db8: __init_array_start                3dc0: __init_array_end                  
3dc8: _DYNAMIC                          3fb8: _GLOBAL_OFFSET_TABLE_             3fd0: __stack_chk_fail                  3fd8: _ITM_deregisterTMCloneTable       
3fe0: __libc_start_main                 3fe8: __gmon_start__                    3ff0: _ITM_registerTMCloneTable         3ff8: __cxa_finalize                    
4000: __data_start                      4008: __dso_handle                      4010: __TMC_END__                       4018: _end                              

-------------------------
0
1060: ENDBR64  4
Edge from 1060 to 1064 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4196,[RSP0,8] = 0_t]
-------------------------
0
1064: XOR Reg EBP, Reg EBP 2
Edge from 1064 to 1066 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4198,RBP = 0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,8] = 0_t]
-------------------------
0
1066: MOV Reg R9, Reg RDX 3
Edge from 1066 to 1069 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4201,RDX = RDX0,RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,8] = 0_t]
-------------------------
0
1069: POP Reg RSI 1
Edge from 1069 to 106a with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4202,RDX = RDX0,RSI = 0_t,RSP = (RSP0 + 8),RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,8] = 0_t]
-------------------------
0
106a: MOV Reg RDX, Reg RSP 3
Edge from 106a to 106d with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4205,RDX = (RSP0 + 8),RSI = 0_t,RSP = (RSP0 + 8),RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,8] = 0_t]
-------------------------
0
106d: AND Reg RSP, Immediate 18446744073709551600 4
Edge from 106d to 1071 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4209,RDX = (RSP0 + 8),RSI = 0_t,RSP = AND((RSP0 + 8),18446744073709551600),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t]
-------------------------
0
1071: PUSH Reg RAX 1
Edge from 1071 to 1072 with memory model: 
|
+- [RSP0, 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]

Postcondition = fromList [RIP = 4210,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 8),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0]
Edge from 1071 to 1072 with memory model: 
|
`- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]

Postcondition = fromList [RIP = 4210,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 8),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0]
-------------------------
1
1072: PUSH Reg RSP 1
Edge from 1072 to 1073 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4211,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1072: PUSH Reg RSP 1
Edge from 1072 to 1073 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4211,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1073: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 662)) 7
Edge from 1073 to 107a with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4218,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1073: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 662)) 7
Edge from 1073 to 107a with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4218,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
107a: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 543)) 7
Edge from 107a to 1081 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4225,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
107a: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 543)) 7
Edge from 107a to 1081 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4225,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1081: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 494)) 7
Edge from 1081 to 1088 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4232,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RDI = 4726,RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,8] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1081: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 494)) 7
Edge from 1081 to 1088 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4232,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RDI = 4726,RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),8] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),8] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1088: CALL __libc_start_main (external)
Executing __libc_start_main
Calling main function at address: 1276

Edge from 1088 to 1276 with memory model: 

Postcondition = fromList [RIP = 4726,[RSP0,8] = 0_t]
-------------------------
1
1088: CALL __libc_start_main (external)
Executing __libc_start_main
Calling main function at address: 1276

Edge from 1088 to 1276 with memory model: 

Postcondition = fromList [RIP = 4726,[RSP0,8] = 0_t]
-------------------------
0
1276: ENDBR64  4
Edge from 1276 to 127a with memory model: 

Postcondition = fromList [RIP = 4730,[RSP0,8] = 0_t]
-------------------------
0
127a: PUSH Reg RBP 1
Edge from 127a to 127b with memory model: 
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4731,RSP = (RSP0 - 8),RBP = RBP0,[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0]
-------------------------
0
127b: MOV Reg RBP, Reg RSP 3
Edge from 127b to 127e with memory model: 
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4734,RSP = (RSP0 - 8),RBP = (RSP0 - 8),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0]
-------------------------
0
127e: SUB Reg RSP, Immediate 16 4
Edge from 127e to 1282 with memory model: 
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4738,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0]
-------------------------
0
1282: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))), Reg EDI 3
Edge from 1282 to 1285 with memory model: 
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 12), 4]

Postcondition = fromList [RIP = 4741,RDI = RDI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 12),4] = <31,0>(RDI0)]
-------------------------
0
1285: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 16))), Reg RSI 4
Edge from 1285 to 1289 with memory model: 
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4745,RDI = RDI0,RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 12),4] = <31,0>(RDI0),[(RSP0 - 24),8] = RSI0]
-------------------------
0
1289: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))) 3
Edge from 1289 to 128c with memory model: 
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4748,RAX = <31,0>(RDI0),RDI = RDI0,RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 12),4] = <31,0>(RDI0),[(RSP0 - 24),8] = RSI0]
-------------------------
0
128c: MOV Reg EDI, Reg EAX 2
Edge from 128c to 128e with memory model: 
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4750,RAX = <31,0>(RDI0),RDI = <31,0>(RDI0),RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 12),4] = <31,0>(RDI0),[(RSP0 - 24),8] = RSI0]
-------------------------
0
128e: CALL local_array (internal)
Function starting at 1149 has not been called before. Start address = 1149, return address = 1293
Edge from 128e to 1149 with memory model: 

Postcondition = fromList [RIP = 4425,RSP = RSP0,[RSP0,8] = 4755_t]
-------------------------
1
1149: ENDBR64  4
Edge from 1149 to 114d with memory model: 

Postcondition = fromList [RIP = 4429,RSP = RSP0,[RSP0,8] = 4755_t]
-------------------------
1
114d: PUSH Reg RBP 1
Edge from 114d to 114e with memory model: 
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4430,RSP = (RSP0 - 8),RBP = RBP0,[RSP0,8] = 4755_t,[(RSP0 - 8),8] = RBP0]
-------------------------
1
114e: MOV Reg RBP, Reg RSP 3
Edge from 114e to 1151 with memory model: 
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4433,RSP = (RSP0 - 8),RBP = (RSP0 - 8),[RSP0,8] = 4755_t,[(RSP0 - 8),8] = RBP0]
-------------------------
1
1151: PUSH Reg RBX 1
Edge from 1151 to 1152 with memory model: 
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 16), 8]

Postcondition = fromList [RIP = 4434,RBX = RBX0,RSP = (RSP0 - 16),RBP = (RSP0 - 8),[RSP0,8] = 4755_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0]
-------------------------
1
1152: SUB Reg RSP, Immediate 56 4
Edge from 1152 to 1156 with memory model: 
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 16), 8]

Postcondition = fromList [RIP = 4438,RBX = RBX0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,8] = 4755_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0]
-------------------------
1
1156: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))), Reg EDI 3
Edge from 1156 to 1159 with memory model: 
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4441,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,8] = 4755_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1159: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Edge from 1159 to 1162 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4450,RAX = 64ADDvarFS0val40False0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1162: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))), Reg RAX 4
Edge from 1162 to 1166 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4454,RAX = 64ADDvarFS0val40False0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1166: XOR Reg EAX, Reg EAX 2
Edge from 1166 to 1168 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4456,RAX = 0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1168: MOV Reg RAX, Reg RSP 3
Edge from 1168 to 116b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4459,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
116b: MOV Reg RSI, Reg RAX 3
Edge from 116b to 116e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4462,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
116e: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 7
Edge from 116e to 1175 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4469,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1175: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1175 to 1178 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4472,RAX = <31,0>(RDI0),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1178: MOV Reg EDX, Reg EAX 2
Edge from 1178 to 117a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4474,RAX = <31,0>(RDI0),RBX = RBX0,RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
117a: SUB Reg RDX, Immediate 1 4
Edge from 117a to 117e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4478,RAX = <31,0>(RDI0),RBX = RBX0,RDX = (<31,0>(RDI0) - 1),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
117e: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 40))), Reg RDX 4
Edge from 117e to 1182 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4482,RAX = <31,0>(RDI0),RBX = RBX0,RDX = (<31,0>(RDI0) - 1),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1182: MOV Reg EDX, Reg EAX 2
Edge from 1182 to 1184 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4484,RAX = <31,0>(RDI0),RBX = RBX0,RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1184: MOV Reg R8, Reg RDX 3
Edge from 1184 to 1187 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4487,RAX = <31,0>(RDI0),RBX = RBX0,RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1187: MOV Reg R9D, Immediate 0 6
Edge from 1187 to 118d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4493,RAX = <31,0>(RDI0),RBX = RBX0,RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
118d: MOV Reg EDX, Reg EAX 2
Edge from 118d to 118f with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4495,RAX = <31,0>(RDI0),RBX = RBX0,RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
118f: MOV Reg RCX, Reg RDX 3
Edge from 118f to 1192 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4498,RAX = <31,0>(RDI0),RBX = RBX0,RCX = <31,0>(RDI0),RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1192: MOV Reg EBX, Immediate 0 5
Edge from 1192 to 1197 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4503,RAX = <31,0>(RDI0),RBX = 0,RCX = <31,0>(RDI0),RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1197: MOV Reg EAX, Reg EAX 2
Edge from 1197 to 1199 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4505,RAX = <31,0>(RDI0),RBX = 0,RCX = <31,0>(RDI0),RDX = <31,0>(RDI0),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
1199: LEA Reg RDX, Address (AddrPlus (AddrTimes (AddrImm 4) (FromReg RAX)) (AddrImm 0)) 8
Edge from 1199 to 11a1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4513,RAX = <31,0>(RDI0),RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>((<31,0>(RDI0) * 4)),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11a1: MOV Reg EAX, Immediate 16 5
Edge from 11a1 to 11a6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4518,RAX = 16,RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>((<31,0>(RDI0) * 4)),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (<31,0>(RDI0) - 2),CF = (<31,0>(RDI0) - 2),SF = (<31,0>(RDI0) - 2),OF = (<31,0>(RDI0) - 2),PF = (<31,0>(RDI0) - 2),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11a6: SUB Reg RAX, Immediate 1 4
Edge from 11a6 to 11aa with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4522,RAX = 15,RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>((<31,0>(RDI0) * 4)),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 14,CF = 14,SF = 14,OF = 14,PF = 14,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11aa: ADD Reg RAX, Reg RDX 3
Edge from 11aa to 11ad with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4525,RAX = (<63,0>((<31,0>(RDI0) * 4)) + 15),RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>((<31,0>(RDI0) * 4)),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),CF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),SF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),OF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),PF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11ad: MOV Reg EDI, Immediate 16 5
Edge from 11ad to 11b2 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4530,RAX = (<63,0>((<31,0>(RDI0) * 4)) + 15),RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>((<31,0>(RDI0) * 4)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),CF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),SF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),OF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),PF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11b2: MOV Reg EDX, Immediate 0 5
Edge from 11b2 to 11b7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4535,RAX = (<63,0>((<31,0>(RDI0) * 4)) + 15),RBX = 0,RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),CF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),SF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),OF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),PF = ((<63,0>((<31,0>(RDI0) * 4)) + <63,0>((<31,0>(RDI0) * 4))) + 15),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11b7: DIV Reg RDI 3
Edge from 11b7 to 11ba with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4538,RAX = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),RBX = 0,RCX = <31,0>(RDI0),RDX = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) mod zextend(16,64)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),CF = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),SF = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),OF = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),PF = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11ba: IMUL Reg RAX, Reg RAX, Immediate 16 4
Edge from 11ba to 11be with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4542,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = 0,RCX = <31,0>(RDI0),RDX = (zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) mod zextend(16,64)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),CF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),SF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),OF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),PF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11be: MOV Reg RDX, Reg RAX 3
Edge from 11be to 11c1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4545,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = 0,RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),CF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),SF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),OF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),PF = <127,64>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11c1: AND Reg RDX, Immediate 18446744073709547520 7
Edge from 11c1 to 11c8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4552,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = 0,RCX = <31,0>(RDI0),RDX = AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),CF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),SF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),OF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),PF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11c8: MOV Reg RBX, Reg RSP 3
Edge from 11c8 to 11cb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4555,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = (RSP0 - 72),RCX = <31,0>(RDI0),RDX = AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),CF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),SF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),OF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),PF = AND(AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),18446744073709547520),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11cb: SUB Reg RBX, Reg RDX 3
Edge from 11cb to 11ce with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4558,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),CF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),SF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),OF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),PF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11ce: MOV Reg RDX, Reg RBX 3
Edge from 11ce to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),CF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),SF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),OF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),PF = (((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
1
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
2
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 8264),CF = (RSP0 - 8264),SF = (RSP0 - 8264),OF = (RSP0 - 8264),PF = (RSP0 - 8264),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
2
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
2
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
2
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
2
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
2
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
2
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
2
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
2
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
3
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
3
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 12360),CF = (RSP0 - 12360),SF = (RSP0 - 12360),OF = (RSP0 - 12360),PF = (RSP0 - 12360),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
3
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 4168),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
3
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
3
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val4176False0,CF = 64SUBvarRSP0val4176False0,SF = 64SUBvarRSP0val4176False0,OF = 64SUBvarRSP0val4176False0,PF = 64SUBvarRSP0val4176False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
3
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
3
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
4
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val4176False0,CF = 64SUBvarRSP0val4176False0,SF = 64SUBvarRSP0val4176False0,OF = 64SUBvarRSP0val4176False0,PF = 64SUBvarRSP0val4176False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
4
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
4
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]
-------------------------
4
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
4
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
4
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
4
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]
-------------------------
4
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
4
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 152),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 152),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 152),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 152),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 152),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]
-------------------------
5
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
5
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 16456),CF = (RSP0 - 16456),SF = (RSP0 - 16456),OF = (RSP0 - 16456),PF = (RSP0 - 16456),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 8264),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]
-------------------------
5
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
5
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val8272False0,CF = 64SUBvarRSP0val8272False0,SF = 64SUBvarRSP0val8272False0,OF = 64SUBvarRSP0val8272False0,PF = 64SUBvarRSP0val8272False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
5
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
6
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
6
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val8272False0,CF = 64SUBvarRSP0val8272False0,SF = 64SUBvarRSP0val8272False0,OF = 64SUBvarRSP0val8272False0,PF = 64SUBvarRSP0val8272False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
6
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
6
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
6
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 4176),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8344),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8344),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8344),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8344),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8344),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
7
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
7
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 20552),CF = (RSP0 - 20552),SF = (RSP0 - 20552),OF = (RSP0 - 20552),PF = (RSP0 - 20552),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 12360),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 4176),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val4176False0,CF = 64SUBvarRSP0val4176False0,SF = 64SUBvarRSP0val4176False0,OF = 64SUBvarRSP0val4176False0,PF = 64SUBvarRSP0val4176False0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
7
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]
-------------------------
7
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val12368False0,CF = 64SUBvarRSP0val12368False0,SF = 64SUBvarRSP0val12368False0,OF = 64SUBvarRSP0val12368False0,PF = 64SUBvarRSP0val12368False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
7
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
8
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 4176),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val4176False0,CF = 64SUBvarRSP0val4176False0,SF = 64SUBvarRSP0val4176False0,OF = 64SUBvarRSP0val4176False0,PF = 64SUBvarRSP0val4176False0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
8
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
8
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
8
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
9
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val12368False0,CF = 64SUBvarRSP0val12368False0,SF = 64SUBvarRSP0val12368False0,OF = 64SUBvarRSP0val12368False0,PF = 64SUBvarRSP0val12368False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
9
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
9
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
9
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
9
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
9
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
9
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
9
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
9
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
9
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 8272),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16536),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16536),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16536),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16536),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16536),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
10
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
10
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
10
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
10
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 24648),CF = (RSP0 - 24648),SF = (RSP0 - 24648),OF = (RSP0 - 24648),PF = (RSP0 - 24648),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 16456),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 8272),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val8272False0,CF = 64SUBvarRSP0val8272False0,SF = 64SUBvarRSP0val8272False0,OF = 64SUBvarRSP0val8272False0,PF = 64SUBvarRSP0val8272False0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
10
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
10
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
11
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
11
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
11
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val16464False0,CF = 64SUBvarRSP0val16464False0,SF = 64SUBvarRSP0val16464False0,OF = 64SUBvarRSP0val16464False0,PF = 64SUBvarRSP0val16464False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
11
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
11
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
12
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 8272),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val8272False0,CF = 64SUBvarRSP0val8272False0,SF = 64SUBvarRSP0val8272False0,OF = 64SUBvarRSP0val8272False0,PF = 64SUBvarRSP0val8272False0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
12
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
12
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
12
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
13
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 56), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
13
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 56), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
13
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val16464False0,CF = 64SUBvarRSP0val16464False0,SF = 64SUBvarRSP0val16464False0,OF = 64SUBvarRSP0val16464False0,PF = 64SUBvarRSP0val16464False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
13
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
13
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),0 < <31,0>(RDI0)]
-------------------------
13
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
13
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
13
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
13
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
13
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
13
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
13
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Edge from 125c to 1260 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4704,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
13
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 12368),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24728),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24728),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24728),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24728),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24728),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 66),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
14
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Edge from 1260 to 1269 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4713,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
14
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 28744),CF = (RSP0 - 28744),SF = (RSP0 - 28744),OF = (RSP0 - 28744),PF = (RSP0 - 28744),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 20552),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 12368),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val12368False0,CF = 64SUBvarRSP0val12368False0,SF = 64SUBvarRSP0val12368False0,OF = 64SUBvarRSP0val12368False0,PF = 64SUBvarRSP0val12368False0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
16
1269: JZ 1270 (resolved immediate)
Edge from 1269 to 126b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4715,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1269 to 1270 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4720,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
17
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val20560False0,CF = 64SUBvarRSP0val20560False0,SF = 64SUBvarRSP0val20560False0,OF = 64SUBvarRSP0val20560False0,PF = 64SUBvarRSP0val20560False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 12368),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val12368False0,CF = 64SUBvarRSP0val12368False0,SF = 64SUBvarRSP0val12368False0,OF = 64SUBvarRSP0val12368False0,PF = 64SUBvarRSP0val12368False0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
19
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
19
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
19
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
19
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
19
126b: CALL anon_func_1050 (internal)
Function starting at 1050 has not been called before. Start address = 1050, return address = 1270
Edge from 126b to 1050 with memory model: 

Postcondition = fromList [RIP = 4176,RSP = RSP0,[RSP0,8] = 4720_t]
-------------------------
19
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val20560False0,CF = 64SUBvarRSP0val20560False0,SF = 64SUBvarRSP0val20560False0,OF = 64SUBvarRSP0val20560False0,PF = 64SUBvarRSP0val20560False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
19
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
19
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
19
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
17
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
17
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
17
1050: ENDBR64  4
Edge from 1050 to 1054 with memory model: 

Postcondition = fromList [RIP = 4180,RSP = RSP0,[RSP0,8] = 4720_t]
-------------------------
17
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Edge from 1270 to 1274 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4724,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
17
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
17
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
17
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
17
1054: JMP anon_func_plt_1026 (jmp to external function)
Jump to external function: anon_func_plt_1026
-------------------------
16
1274: LEAVE  1
Edge from 1274 to 1275 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4725,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,FS = FS0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
16
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 16464),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32920),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32920),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32920),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32920),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32920),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4162),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
17
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4704,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
17
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is replaced with the current memory model.
-------------------------
17
1275: RET  1
Address 1293 has become reachable.
-------------------------
16
1293: LEAVE  1
Edge from 1293 to 1294 with memory model: 
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
+- [(RSP0 - 24), 8]
|
`- [(RSP0 - 32), 8]

Postcondition = fromList [RIP = 4756,RDI = <31,0>(RDI0),RSI = RSI0,RSP = RSP0,RBP = RBP0,[RSP0,8] = 0_t,[(RSP0 - 8),8] = RBP0,[(RSP0 - 12),4] = <31,0>(RDI0),[(RSP0 - 24),8] = RSI0]
-------------------------
16
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 32840),CF = (RSP0 - 32840),SF = (RSP0 - 32840),OF = (RSP0 - 32840),PF = (RSP0 - 32840),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 24648),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 16464),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val16464False0,CF = 64SUBvarRSP0val16464False0,SF = 64SUBvarRSP0val16464False0,OF = 64SUBvarRSP0val16464False0,PF = 64SUBvarRSP0val16464False0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
18
1269: JZ 1270 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4713,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
19
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
19
1294: RET  1
-------------------------
18
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val24656False0,CF = 64SUBvarRSP0val24656False0,SF = 64SUBvarRSP0val24656False0,OF = 64SUBvarRSP0val24656False0,PF = 64SUBvarRSP0val24656False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 16464),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val16464False0,CF = 64SUBvarRSP0val16464False0,SF = 64SUBvarRSP0val16464False0,OF = 64SUBvarRSP0val16464False0,PF = 64SUBvarRSP0val16464False0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
19
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
20
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
20
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
20
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
20
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
20
126b: CALL anon_func_1050 (internal)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4715,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
Function starting at 1050 has been called before: returning = True
-------------------------
19
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),4] = SHL(zextend(1,32),1),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))),4] = <31,0>(Unknown_123e_RCX)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
19
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4697,RAX = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))),4] = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
18
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val24656False0,CF = 64SUBvarRSP0val24656False0,SF = 64SUBvarRSP0val24656False0,OF = 64SUBvarRSP0val24656False0,PF = 64SUBvarRSP0val24656False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
16
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
16
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
16
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
1274: LEAVE  1
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4724,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4724,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
15
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 20560),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41112),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41112),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41112),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41112),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41112),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
16
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8258),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = Unknown_1260_[(RSP0 - 32),8],RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4704,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
16
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
1275: RET  1
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4725,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,FS = FS0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 72) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval69Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 69),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4725,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 36936),CF = (RSP0 - 36936),SF = (RSP0 - 36936),OF = (RSP0 - 36936),PF = (RSP0 - 36936),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 28744),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 20560),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val20560False0,CF = 64SUBvarRSP0val20560False0,SF = 64SUBvarRSP0val20560False0,OF = 64SUBvarRSP0val20560False0,PF = 64SUBvarRSP0val20560False0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
16
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
17
1269: JZ 1270 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = XOR(XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),64ADDvarFS0val40False0),CF = XOR(XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),64ADDvarFS0val40False0),SF = XOR(XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),64ADDvarFS0val40False0),OF = XOR(XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),64ADDvarFS0val40False0),PF = XOR(XOR(64ADDvarFS0val40False0,Unknown_1269_RDI),64ADDvarFS0val40False0),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4713,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
18
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val28752False0,CF = 64SUBvarRSP0val28752False0,SF = 64SUBvarRSP0val28752False0,OF = 64SUBvarRSP0val28752False0,PF = 64SUBvarRSP0val28752False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 20560),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val20560False0,CF = 64SUBvarRSP0val20560False0,SF = 64SUBvarRSP0val20560False0,OF = 64SUBvarRSP0val20560False0,PF = 64SUBvarRSP0val20560False0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
19
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
19
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
19
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
20
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
20
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
20
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
20
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
20
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
20
126b: CALL anon_func_1050 (internal)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
Function starting at 1050 has been called before: returning = True
-------------------------
19
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))),4] = <31,0>(Unknown_123e_RCX),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
19
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval4165Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))),4] = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val28752False0,CF = 64SUBvarRSP0val28752False0,SF = 64SUBvarRSP0val28752False0,OF = 64SUBvarRSP0val28752False0,PF = 64SUBvarRSP0val28752False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
18
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
16
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4165),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
16
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
15
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1274: LEAVE  1
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4724,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4724,RBX = Unknown_1274_[(RSP0 - 16),8],RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4724,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
15
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 4168) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
14
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 24656),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 49304),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 49304),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 49304),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 49304),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 49304),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12354),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1275: RET  1
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4725,RBX = RBX0,RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4725,RSI = (RSP0 - 72),RSP = RSP0,RBP = Unknown_1275_[(RSP0 - 8),8],FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

The joined predicate becomes:
fromList [RIP = 4725,RSI = (RSP0 - 72),RSP = RSP0,FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]
The existing memory model is kept.
-------------------------
14
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 41032),CF = (RSP0 - 41032),SF = (RSP0 - 41032),OF = (RSP0 - 41032),PF = (RSP0 - 41032),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 32840),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 24656),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val24656False0,CF = 64SUBvarRSP0val24656False0,SF = 64SUBvarRSP0val24656False0,OF = 64SUBvarRSP0val24656False0,PF = 64SUBvarRSP0val24656False0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
16
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val32848False0,CF = 64SUBvarRSP0val32848False0,SF = 64SUBvarRSP0val32848False0,OF = 64SUBvarRSP0val32848False0,PF = 64SUBvarRSP0val32848False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 24656),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val24656False0,CF = 64SUBvarRSP0val24656False0,SF = 64SUBvarRSP0val24656False0,OF = 64SUBvarRSP0val24656False0,PF = 64SUBvarRSP0val24656False0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
18
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))),4] = <31,0>(Unknown_123e_RCX),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval8261Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))),4] = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val32848False0,CF = 64SUBvarRSP0val32848False0,SF = 64SUBvarRSP0val32848False0,OF = 64SUBvarRSP0val32848False0,PF = 64SUBvarRSP0val32848False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
17
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8261),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
`- [(RSP0 - 4176), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 8264),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 8264) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
13
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 28752),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 57496),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 57496),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 57496),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 57496),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 57496),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16450),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 45128),CF = (RSP0 - 45128),SF = (RSP0 - 45128),OF = (RSP0 - 45128),PF = (RSP0 - 45128),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 36936),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 28752),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val28752False0,CF = 64SUBvarRSP0val28752False0,SF = 64SUBvarRSP0val28752False0,OF = 64SUBvarRSP0val28752False0,PF = 64SUBvarRSP0val28752False0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
16
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val36944False0,CF = 64SUBvarRSP0val36944False0,SF = 64SUBvarRSP0val36944False0,OF = 64SUBvarRSP0val36944False0,PF = 64SUBvarRSP0val36944False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 28752),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val28752False0,CF = 64SUBvarRSP0val28752False0,SF = 64SUBvarRSP0val28752False0,OF = 64SUBvarRSP0val28752False0,PF = 64SUBvarRSP0val28752False0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
18
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))),4] = <31,0>(Unknown_123e_RCX),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval12357Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))),4] = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val36944False0,CF = 64SUBvarRSP0val36944False0,SF = 64SUBvarRSP0val36944False0,OF = 64SUBvarRSP0val36944False0,PF = 64SUBvarRSP0val36944False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
17
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12357),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
`- [(RSP0 - 8272), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 12360),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 12360) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
13
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 32848),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 65688),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 65688),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 65688),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 65688),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 65688),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20546),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 49224),CF = (RSP0 - 49224),SF = (RSP0 - 49224),OF = (RSP0 - 49224),PF = (RSP0 - 49224),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 41032),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 32848),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val32848False0,CF = 64SUBvarRSP0val32848False0,SF = 64SUBvarRSP0val32848False0,OF = 64SUBvarRSP0val32848False0,PF = 64SUBvarRSP0val32848False0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
16
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val41040False0,CF = 64SUBvarRSP0val41040False0,SF = 64SUBvarRSP0val41040False0,OF = 64SUBvarRSP0val41040False0,PF = 64SUBvarRSP0val41040False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 32848),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val32848False0,CF = 64SUBvarRSP0val32848False0,SF = 64SUBvarRSP0val32848False0,OF = 64SUBvarRSP0val32848False0,PF = 64SUBvarRSP0val32848False0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]
   |
   `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 8),8] = RBP0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
Edge from 123b to 123e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
18
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 52), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 56), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]:[(RSP0 - 60), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]
   |
   `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
Edge from 1256 to 1259 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|  |
|  `- [(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))), 4]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval20549Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
18
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4670,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),4] = SHL(zextend(1,32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + <63,0>((Unknown_123e_RDX * 4))),4] = <31,0>(Unknown_123e_RCX),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
18
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4697,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval16453Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4697,RAX = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + <63,0>((Unknown_1259_RDX * 4))),4] = 32ADDvarUnknown_1259_RAXtake63_0MULvarUnknown_1259_RDXval4False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4561,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val41040False0,CF = 64SUBvarRSP0val41040False0,SF = 64SUBvarRSP0val41040False0,OF = 64SUBvarRSP0val41040False0,PF = 64SUBvarRSP0val41040False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4596,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4615,RAX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4629,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4652,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
17
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
17
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
17
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Postcondition = fromList [RIP = 4700,RAX = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2) + <63,0>((<31,0>((<31,0>(RDI0) - 1)) * 4))),4] = 32ADDSHLF zextendSHRF zextendSUBSUBvarRSP0ANDtake31_0IMULDIVF zextendADDtake63_0MULtake31_0varRDI0val4Falseval15Falseval128FalseF zextendval16Falseval64Falseval16Falseval4095Falseval24645Falseval64Falseval2Falseval64Falseval2Falsetake63_0MULtake31_0SUBtake31_0varRDI0val1Falseval4False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
16
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,CF = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 52),4] = SHL(zextend(Unknown_1231_[(RSP0 - 52),4],32),1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4685,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4685,RAX = Unknown_124d_[(RSP0 - 60),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4685,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16453),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
15
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4564,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4599,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),CF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),SF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),OF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),PF = (((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4619,RAX = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 8),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),CF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),SF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),OF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),PF = (AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) - 16),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4633,RAX = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),4] + 2),CF = (Unknown_1242_[(RSP0 - 56),4] + 2),SF = (Unknown_1242_[(RSP0 - 56),4] + 2),OF = (Unknown_1242_[(RSP0 - 56),4] + 2),PF = (Unknown_1242_[(RSP0 - 56),4] + 2),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = (Unknown_1242_[(RSP0 - 56),4] + 1),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
15
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4661,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4688,RAX = <31,0>(RDI0),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = <31,0>((Unknown_1250_RAX - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4688,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
`- [(RSP0 - 12368), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 16456),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 16456) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
13
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4566,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,RSP != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 45128) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4584,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 45128) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4605,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 36944),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 73880),CF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 73880),SF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 73880),OF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 73880),PF = (((RSP0 + RSP0) - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 73880),(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4637,RAX = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28738),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
14
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24642),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4677,RAX = Unknown_1245_[(RSP0 - 56),4],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4664,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDX = Unknown_1238_[(RSP0 - 56),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
14
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4692,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),8],RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
14
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4573,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 49224),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = (RSP0 - 53320),CF = (RSP0 - 53320),SF = (RSP0 - 53320),OF = (RSP0 - 53320),PF = (RSP0 - 53320),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 45128) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4587,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),CF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),SF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),OF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),PF = CMP((RSP0 - 45128),((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)),(RSP0 - 45128) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4608,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 36944),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val36944False0,CF = 64SUBvarRSP0val36944False0,SF = 64SUBvarRSP0val36944False0,OF = 64SUBvarRSP0val36944False0,PF = 64SUBvarRSP0val36944False0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4641,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
14
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
14
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]
-------------------------
15
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Postcondition = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]
-------------------------
15
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
15
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24645),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
`- [(RSP0 - 20560), 8]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),CF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),SF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),OF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),PF = CMP(<31,0>(Unknown_1248_RAX),Unknown_1248_[(RSP0 - 60),4]),(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 24648),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 24648) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is replaced with the current memory model.
-------------------------
16
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4667,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = SHL(zextend(1,32),1),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(zextend(1,32),1),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = SHL(zextend(1,32),1),[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = Unknown_123b_[(RSP0 - 52),4],RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
16
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Existing predicate = fromList [RIP = 4694,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = <31,0>((<31,0>(RDI0) - 1)),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20549),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
`- [(RSP0 - 16464), 8]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 20552),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 20552) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
16
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
+- [(RSP0 - 41040), 8]
|
`- [(RSP0 - 45136), 8]

Postcondition = fromList [RIP = 4582,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 49224),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val45136False0,CF = 64SUBvarRSP0val45136False0,SF = 64SUBvarRSP0val45136False0,OF = 64SUBvarRSP0val45136False0,PF = 64SUBvarRSP0val45136False0,[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,[(RSP0 - 45136),8] = 64SUBvarRSP0val45136False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 45128) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
+- [(RSP0 - 36944), 8]
|
`- [(RSP0 - 41040), 8]

Postcondition = fromList [RIP = 4593,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 45128),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),CF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),SF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),OF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),PF = AND(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),4095),(RSP0 - 45128) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,[(RSP0 - 41040),8] = 64SUBvarRSP0val41040False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 41032) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
16
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4610,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
Edge from 1200 to 1212 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Postcondition = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 41032),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 41032) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 36936) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Existing predicate = fromList [RIP = 4626,RAX = <63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),CF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),SF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),OF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),PF = TEST(AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
+- [(RSP0 - 32848), 8]
|
`- [(RSP0 - 36944), 8]

Current predicate = fromList [RIP = 4626,RAX = (RSP0 - 36944),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = 64SUBvarRSP0val36944False0,CF = 64SUBvarRSP0val36944False0,SF = 64SUBvarRSP0val36944False0,OF = 64SUBvarRSP0val36944False0,PF = 64SUBvarRSP0val36944False0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,[(RSP0 - 36944),8] = 64SUBvarRSP0val36944False0,RDX != 0,AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) != 0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4626,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
The existing memory model is kept.
-------------------------
17
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
+- [(RSP0 - 28752), 8]
|
`- [(RSP0 - 32848), 8]

Postcondition = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36936),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36930),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 36936) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 36933),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,[(RSP0 - 32848),8] = 64SUBvarRSP0val32848False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 32840) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]
-------------------------
17
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Existing predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Current predicate = fromList [RIP = 4645,RAX = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),CF = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),SF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),OF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),PF = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32834),(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
17
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
+- [(RSP0 - 24656), 8]
|
`- [(RSP0 - 28752), 8]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32840),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 32840) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 32837),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,[(RSP0 - 28752),8] = 64SUBvarRSP0val28752False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 28744) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
18
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 20552) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 24648) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RAX < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
18
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
+- [(RSP0 - 60), 4]
|
+- [(RSP0 - 80), 8]
|
+- [(RSP0 - 4176), 8]
|
+- [(RSP0 - 8272), 8]
|
+- [(RSP0 - 12368), 8]
|
+- [(RSP0 - 16464), 8]
|
+- [(RSP0 - 20560), 8]
|
`- [(RSP0 - 24656), 8]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),RCX = <31,0>(RDI0),RDX = AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28744),RBP = (RSP0 - 8),R9 = 0,R8 = <31,0>(RDI0),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095) = 0,(RSP0 - 28744) = ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),[RSP0,8] = 4755_t,[(FS0 + 40),8] = 64ADDvarFS0val40False0,[(RSP0 - 8),8] = RBP0,[(RSP0 - 16),8] = RBX0,[(RSP0 - 32),8] = 64ADDvarFS0val40False0,[(RSP0 - 40),8] = SHL(zextend(SHR(zextend(((RSP0 - AND(<31,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),4095)) - 28741),64),2),64),2),[(RSP0 - 48),8] = (<31,0>(RDI0) - 1),[(RSP0 - 52),4] = 1,[(RSP0 - 56),4] = 0,[(RSP0 - 60),4] = <31,0>(RDI0),[(RSP0 - 80),8] = 64SUBvarRSP0val80False0,[(RSP0 - 4176),8] = 64SUBvarRSP0val4176False0,[(RSP0 - 8272),8] = 64SUBvarRSP0val8272False0,[(RSP0 - 12368),8] = 64SUBvarRSP0val12368False0,[(RSP0 - 16464),8] = 64SUBvarRSP0val16464False0,[(RSP0 - 20560),8] = 64SUBvarRSP0val20560False0,[(RSP0 - 24656),8] = 64SUBvarRSP0val24656False0,(RSP0 - 72) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 4168) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 8264) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 12360) != ((RSP0 - AND(<63,0>(IMUL((zextend((<63,0>((<31,0>(RDI0) * 4)) + 15),128) / zextend(16,64)),16)),18446744073709547520)) - 72),(RSP0 - 16456) != ((RSP0 - AND(<63,0>(IMUL((z