Entry                = 1060
Size of TLS image    = Undefined
Start address of TLS = Undefined
FS                   = Undefined
Sections:
318: .interp (28)                       338: .note.gnu.property (32)            358: .note.gnu.build-id (36)            37c: .note.ABI-tag (32)                 
3a0: .gnu.hash (36)                     3c8: .dynsym (168)                      470: .dynstr (152)                      508: .gnu.version (14)                  
518: .gnu.version_r (48)                548: .rela.dyn (192)                    608: .rela.plt (24)                     1000: .init (27)                        
1020: .plt (32)                         1040: .plt.got (16)                     1050: .plt.sec (16)                     1060: .text (693)                       
1318: .fini (13)                        2000: .rodata (4)                       2004: .eh_frame_hdr (76)                2050: .eh_frame (304)                   
3db8: .init_array (8)                   3dc0: .fini_array (8)                   3dc8: .dynamic (496)                    3fb8: .got (72)                         
4000: .data (16)                        4010: .bss (8)                          0: .comment (42)                        0: .symtab (1584)                       
0: .strtab (543)                        0: .shstrtab (282)                      
Addresses mapped to symbols:
1000: _init                             1060: _start                            1090: deregister_tm_clones              10c0: register_tm_clones                
1100: __do_global_dtors_aux             1140: frame_dummy                       1149: local_array                       1276: main                              
12a0: __libc_csu_init                   1310: __libc_csu_fini                   1318: _fini                             2000: _IO_stdin_used                    
2004: __GNU_EH_FRAME_HDR                217c: __FRAME_END__                     3db8: __init_array_start                3dc0: __init_array_end                  
3dc8: _DYNAMIC                          3fb8: _GLOBAL_OFFSET_TABLE_             3fd0: __stack_chk_fail                  3fd8: _ITM_deregisterTMCloneTable       
3fe0: __libc_start_main                 3fe8: __gmon_start__                    3ff0: _ITM_registerTMCloneTable         3ff8: __cxa_finalize                    
4000: __data_start                      4008: __dso_handle                      4010: __TMC_END__                       4018: _end                              

-------------------------
0
1060: ENDBR64  4
Edge from 1060 to 1064 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4196,[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
1064: XOR Reg EBP, Reg EBP 2
Edge from 1064 to 1066 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4198,RBP = 0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
1066: MOV Reg R9, Reg RDX 3
Edge from 1066 to 1069 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4201,RDX = RDX0,RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
1069: POP Reg RSI 1
Edge from 1069 to 106a with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4202,RDX = RDX0,RSI = 0_t,RSP = (RSP0 + 8),RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
106a: MOV Reg RDX, Reg RSP 3
Edge from 106a to 106d with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4205,RDX = (RSP0 + 8),RSI = 0_t,RSP = (RSP0 + 8),RBP = 0,R9 = RDX0,ZF = <31,0>(RBP0),CF = <31,0>(RBP0),SF = <31,0>(RBP0),OF = <31,0>(RBP0),PF = <31,0>(RBP0),[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
106d: AND Reg RSP, Immediate 18446744073709551600 4
Edge from 106d to 1071 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4209,RDX = (RSP0 + 8),RSI = 0_t,RSP = AND((RSP0 + 8),18446744073709551600),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
1071: PUSH Reg RAX 1
Edge from 1071 to 1072 with memory model: 
|
+- [RSP0, 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]

Postcondition = fromList [RIP = 4210,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 8),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0]
Edge from 1071 to 1072 with memory model: 
|
`- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]

Postcondition = fromList [RIP = 4210,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 8),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0]
-------------------------
1
1072: PUSH Reg RSP 1
Edge from 1072 to 1073 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4211,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1072: PUSH Reg RSP 1
Edge from 1072 to 1073 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4211,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1073: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 662)) 7
Edge from 1073 to 107a with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4218,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1073: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 662)) 7
Edge from 1073 to 107a with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4218,RAX = RAX0,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
107a: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 543)) 7
Edge from 107a to 1081 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4225,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
107a: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 543)) 7
Edge from 107a to 1081 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4225,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1081: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 494)) 7
Edge from 1081 to 1088 with memory model: 
|
+- [RSP0, 8]
|
+- [(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4232,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RDI = 4726,RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[RSP0,E_val 8 64 False] = 0_t,[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1081: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 494)) 7
Edge from 1081 to 1088 with memory model: 
|
+- [RSP0, 8]:[(AND((RSP0 + 8),18446744073709551600) - 8), 8]
|
`- [(AND((RSP0 + 8),18446744073709551600) - 16), 8]

Postcondition = fromList [RIP = 4232,RAX = RAX0,RCX = 4768,RDX = (RSP0 + 8),RDI = 4726,RSI = 0_t,RSP = (AND((RSP0 + 8),18446744073709551600) - 16),RBP = 0,R9 = RDX0,R8 = 4880,ZF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),CF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),SF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),OF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),PF = AND(AND((RSP0 + 8),18446744073709551600),18446744073709551600),[(AND((RSP0 + 8),18446744073709551600) - 8),E_val 8 64 False] = RAX0,[(AND((RSP0 + 8),18446744073709551600) - 16),E_val 8 64 False] = (AND((RSP0 + 8),18446744073709551600) - 16)]
-------------------------
1
1088: CALL __libc_start_main (external)
Executing __libc_start_main
Calling main function at address: 1276

Edge from 1088 to 1276 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4726,[RSP0,E_val 8 64 False] = 0_t]
-------------------------
1
1088: CALL __libc_start_main (external)
Executing __libc_start_main
Calling main function at address: 1276

Edge from 1088 to 1276 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4726,[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
1276: ENDBR64  4
Edge from 1276 to 127a with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4730,[RSP0,E_val 8 64 False] = 0_t]
-------------------------
0
127a: PUSH Reg RBP 1
Edge from 127a to 127b with memory model: 
|
+- [RSP0, 8]
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4731,RSP = (RSP0 - 8),RBP = RBP0,[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0]
-------------------------
0
127b: MOV Reg RBP, Reg RSP 3
Edge from 127b to 127e with memory model: 
|
+- [RSP0, 8]
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4734,RSP = (RSP0 - 8),RBP = (RSP0 - 8),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0]
-------------------------
0
127e: SUB Reg RSP, Immediate 16 4
Edge from 127e to 1282 with memory model: 
|
+- [RSP0, 8]
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4738,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0]
-------------------------
0
1282: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))), Reg EDI 3
Edge from 1282 to 1285 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 12), 4]

Postcondition = fromList [RIP = 4741,RDI = RDI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 12),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
0
1285: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 16))), Reg RSI 4
Edge from 1285 to 1289 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4745,RDI = RDI0,RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 12),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 24),E_val 8 64 False] = RSI0]
-------------------------
0
1289: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))) 3
Edge from 1289 to 128c with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4748,RAX = zextend(<31,0>(RDI0),64),RDI = RDI0,RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 12),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 24),E_val 8 64 False] = RSI0]
-------------------------
0
128c: MOV Reg EDI, Reg EAX 2
Edge from 128c to 128e with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
`- [(RSP0 - 24), 8]

Postcondition = fromList [RIP = 4750,RAX = zextend(<31,0>(RDI0),64),RDI = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RSI = RSI0,RSP = (RSP0 - 24),RBP = (RSP0 - 8),ZF = (RSP0 - 40),CF = (RSP0 - 40),SF = (RSP0 - 40),OF = (RSP0 - 40),PF = (RSP0 - 40),[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 12),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 24),E_val 8 64 False] = RSI0]
-------------------------
0
128e: CALL local_array (internal)
Function call with start address = 1149 and return address = 1293
Edge from 128e to 1149 with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4425,RSP = RSP0,[RSP0,E_val 8 64 False] = 4755_t]
-------------------------
1
1149: ENDBR64  4
Edge from 1149 to 114d with memory model: 
|
`- [RSP0, 8]

Postcondition = fromList [RIP = 4429,RSP = RSP0,[RSP0,E_val 8 64 False] = 4755_t]
-------------------------
1
114d: PUSH Reg RBP 1
Edge from 114d to 114e with memory model: 
|
+- [RSP0, 8]
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4430,RSP = (RSP0 - 8),RBP = RBP0,[RSP0,E_val 8 64 False] = 4755_t,[(RSP0 - 8),E_val 8 64 False] = RBP0]
-------------------------
1
114e: MOV Reg RBP, Reg RSP 3
Edge from 114e to 1151 with memory model: 
|
+- [RSP0, 8]
|
`- [(RSP0 - 8), 8]

Postcondition = fromList [RIP = 4433,RSP = (RSP0 - 8),RBP = (RSP0 - 8),[RSP0,E_val 8 64 False] = 4755_t,[(RSP0 - 8),E_val 8 64 False] = RBP0]
-------------------------
1
1151: PUSH Reg RBX 1
Edge from 1151 to 1152 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 16), 8]

Postcondition = fromList [RIP = 4434,RBX = RBX0,RSP = (RSP0 - 16),RBP = (RSP0 - 8),[RSP0,E_val 8 64 False] = 4755_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0]
-------------------------
1
1152: SUB Reg RSP, Immediate 56 4
Edge from 1152 to 1156 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
`- [(RSP0 - 16), 8]

Postcondition = fromList [RIP = 4438,RBX = RBX0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,E_val 8 64 False] = 4755_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0]
-------------------------
1
1156: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))), Reg EDI 3
Edge from 1156 to 1159 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4441,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,E_val 8 64 False] = 4755_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1159: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Edge from 1159 to 1162 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4450,RAX = 64ADDvarFS0val40False0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1162: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))), Reg RAX 4
Edge from 1162 to 1166 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4454,RAX = 64ADDvarFS0val40False0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (RSP0 - 128),CF = (RSP0 - 128),SF = (RSP0 - 128),OF = (RSP0 - 128),PF = (RSP0 - 128),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1166: XOR Reg EAX, Reg EAX 2
Edge from 1166 to 1168 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4456,RAX = 0,RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1168: MOV Reg RAX, Reg RSP 3
Edge from 1168 to 116b with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4459,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
116b: MOV Reg RSI, Reg RAX 3
Edge from 116b to 116e with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4462,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
116e: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 7
Edge from 116e to 1175 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4469,RAX = (RSP0 - 72),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1175: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1175 to 1178 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4472,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1178: MOV Reg EDX, Reg EAX 2
Edge from 1178 to 117a with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4474,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = <31,0>(64ADDvarFS0val40False0),CF = <31,0>(64ADDvarFS0val40False0),SF = <31,0>(64ADDvarFS0val40False0),OF = <31,0>(64ADDvarFS0val40False0),PF = <31,0>(64ADDvarFS0val40False0),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
117a: SUB Reg RDX, Immediate 1 4
Edge from 117a to 117e with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4478,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
117e: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 40))), Reg RDX 4
Edge from 117e to 1182 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4482,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1182: MOV Reg EDX, Reg EAX 2
Edge from 1182 to 1184 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4484,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1184: MOV Reg R8, Reg RDX 3
Edge from 1184 to 1187 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4487,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1187: MOV Reg R9D, Immediate 0 6
Edge from 1187 to 118d with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4493,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
118d: MOV Reg EDX, Reg EAX 2
Edge from 118d to 118f with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4495,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
118f: MOV Reg RCX, Reg RDX 3
Edge from 118f to 1192 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4498,RAX = zextend(<31,0>(RDI0),64),RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1192: MOV Reg EBX, Immediate 0 5
Edge from 1192 to 1197 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4503,RAX = zextend(<31,0>(RDI0),64),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1197: MOV Reg EAX, Reg EAX 2
Edge from 1197 to 1199 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4505,RAX = zextend(<31,0>(RDI0),64),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
1199: LEA Reg RDX, Address (AddrPlus (AddrTimes (AddrImm 4) (FromReg RAX)) (AddrImm 0)) 8
Edge from 1199 to 11a1 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4513,RAX = zextend(<31,0>(RDI0),64),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = (zextend(<31,0>(RDI0),64) * 4),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11a1: MOV Reg EAX, Immediate 16 5
Edge from 11a1 to 11a6 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4518,RAX = 16,RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = (zextend(<31,0>(RDI0),64) * 4),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),CF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),SF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),OF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),PF = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11a6: SUB Reg RAX, Immediate 1 4
Edge from 11a6 to 11aa with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4522,RAX = 15,RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = (zextend(<31,0>(RDI0),64) * 4),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 14,CF = 14,SF = 14,OF = 14,PF = 14,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11aa: ADD Reg RAX, Reg RDX 3
Edge from 11aa to 11ad with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4525,RAX = ((zextend(<31,0>(RDI0),64) * 4) + 15),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = (zextend(<31,0>(RDI0),64) * 4),RDI = RDI0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),CF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),SF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),OF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),PF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11ad: MOV Reg EDI, Immediate 16 5
Edge from 11ad to 11b2 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4530,RAX = ((zextend(<31,0>(RDI0),64) * 4) + 15),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = (zextend(<31,0>(RDI0),64) * 4),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),CF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),SF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),OF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),PF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11b2: MOV Reg EDX, Immediate 0 5
Edge from 11b2 to 11b7 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4535,RAX = ((zextend(<31,0>(RDI0),64) * 4) + 15),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),CF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),SF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),OF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),PF = (((zextend(<31,0>(RDI0),64) * 4) + (zextend(<31,0>(RDI0),64) * 4)) + 15),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11b7: DIV Reg RDI 3
Edge from 11b7 to 11ba with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4538,RAX = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) mod 16),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),CF = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),SF = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),OF = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),PF = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11ba: IMUL Reg RAX, Reg RAX, Immediate 16 4
Edge from 11ba to 11be with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4542,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) mod 16),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 0,CF = 0,SF = 0,OF = 0,PF = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11be: MOV Reg RDX, Reg RAX 3
Edge from 11be to 11c1 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4545,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 0,CF = 0,SF = 0,OF = 0,PF = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11c1: AND Reg RDX, Immediate 18446744073709547520 7
Edge from 11c1 to 11c8 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4552,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = 0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),CF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),SF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),OF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),PF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11c8: MOV Reg RBX, Reg RSP 3
Edge from 11c8 to 11cb with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4555,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = (RSP0 - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),CF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),SF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),OF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),PF = AND(AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),18446744073709547520),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11cb: SUB Reg RBX, Reg RDX 3
Edge from 11cb to 11ce with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4558,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),CF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),SF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),OF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),PF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11ce: MOV Reg RDX, Reg RBX 3
Edge from 11ce to 11d1 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),CF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),SF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),OF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),PF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11d1: CMP Reg RSP, Reg RDX 3
Edge from 11d1 to 11d4 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4564,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
1
11d4: JZ 11e8 (resolved immediate)
Edge from 11d4 to 11d6 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4566,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RSP != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]
Edge from 11d4 to 11e8 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4584,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
2
11d6: SUB Reg RSP, Immediate 4096 7
Edge from 11d6 to 11dd with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4573,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (RSP0 - 8264),CF = (RSP0 - 8264),SF = (RSP0 - 8264),OF = (RSP0 - 8264),PF = (RSP0 - 8264),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]
-------------------------
2
11e8: MOV Reg RDX, Reg RAX 3
Edge from 11e8 to 11eb with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4587,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
2
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Edge from 11dd to 11e6 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4582,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 80),E_val 8 64 False] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]
-------------------------
2
11eb: AND Reg EDX, Immediate 4095 6
Edge from 11eb to 11f1 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4593,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
2
11e6: JMP 11d1 (resolved immediate)
Edge from 11e6 to 11d1 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 80),E_val 8 64 False] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]
-------------------------
2
11f1: SUB Reg RSP, Reg RDX 3
Edge from 11f1 to 11f4 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4596,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),CF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),SF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),OF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),PF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
2
11d1: CMP Reg RSP, Reg RDX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),CF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),SF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),OF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),PF = (((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Current predicate = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 80),E_val 8 64 False] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]

The joined predicate becomes:
fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
2
11f4: MOV Reg RDX, Reg RAX 3
Edge from 11f4 to 11f7 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4599,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),CF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),SF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),OF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),PF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
2
11d4: JZ 11e8 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4564,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4564,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(Unknown_11d4_RSP,((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP(Unknown_11d4_RSP,((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP(Unknown_11d4_RSP,((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP(Unknown_11d4_RSP,((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP(Unknown_11d4_RSP,((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4564,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
11f7: AND Reg EDX, Immediate 4095 6
Edge from 11f7 to 11fd with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4605,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
11d6: SUB Reg RSP, Immediate 4096 7
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4566,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RSP != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4566,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
11e8: MOV Reg RDX, Reg RAX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4584,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4584,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
11fd: TEST Reg RDX, Reg RDX 3
Edge from 11fd to 1200 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4608,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4573,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (RSP0 - 8264),CF = (RSP0 - 8264),SF = (RSP0 - 8264),OF = (RSP0 - 8264),PF = (RSP0 - 8264),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4573,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (Unknown_11dd_RSP - 4096),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (Unknown_11dd_RSP - 8192),CF = (Unknown_11dd_RSP - 8192),SF = (Unknown_11dd_RSP - 8192),OF = (Unknown_11dd_RSP - 8192),PF = (Unknown_11dd_RSP - 8192),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4573,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
11eb: AND Reg EDX, Immediate 4095 6
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4587,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),CF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),SF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),OF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),PF = CMP((RSP0 - 72),((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4587,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1200: JZ 1212 (resolved immediate)
Edge from 1200 to 1202 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4610,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
Edge from 1200 to 1212 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4626,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
4
11e6: JMP 11d1 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Existing predicate = fromList [RIP = 4582,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 4168),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 80),E_val 8 64 False] = 64SUBvarRSP0val80False0,(RSP0 - 72) != ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_11e6_RSP + 4088), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4582,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarUnknown_11e6_RSPval4088False0,CF = 64ADDvarUnknown_11e6_RSPval4088False0,SF = 64ADDvarUnknown_11e6_RSPval4088False0,OF = 64ADDvarUnknown_11e6_RSPval4088False0,PF = 64ADDvarUnknown_11e6_RSPval4088False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(Unknown_11e6_RSP + 4088),E_val 8 64 False] = 64ADDvarUnknown_11e6_RSPval4088False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4582,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The joined memory model becomes:
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

-------------------------
4
11f1: SUB Reg RSP, Reg RDX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4593,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4593,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
1202: AND Reg EAX, Immediate 4095 5
Edge from 1202 to 1207 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4615,RAX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
-------------------------
4
1212: MOV Reg RAX, Reg RSP 3
Edge from 1212 to 1215 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4629,RAX = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
4
11d1: CMP Reg RSP, Reg RDX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4561,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
3
11f4: MOV Reg RDX, Reg RAX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4596,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),CF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),SF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),OF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),PF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4596,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = (Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = ((Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = ((Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = ((Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = ((Unknown_11f4_RSP - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4596,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
1207: SUB Reg RAX, Immediate 8 4
Edge from 1207 to 120b with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4619,RAX = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 8),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),CF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),SF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),OF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),PF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
-------------------------
3
1215: ADD Reg RAX, Immediate 3 4
Edge from 1215 to 1219 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4633,RAX = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
11f7: AND Reg EDX, Immediate 4095 6
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4599,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),CF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),SF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),OF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),PF = (((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4599,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
120b: ADD Reg RAX, Reg RSP 3
Edge from 120b to 120e with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4622,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),CF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),SF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),OF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),PF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
-------------------------
3
1219: SHR Reg RAX, Immediate 2 4
Edge from 1219 to 121d with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4637,RAX = SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
11fd: TEST Reg RDX, Reg RDX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4605,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4605,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Edge from 120e to 1212 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 60), 4]
|
`- [(RSP0 - 80), 8]

Postcondition = fromList [RIP = 4626,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64SUBvarRSP0val80False0,CF = 64SUBvarRSP0val80False0,SF = 64SUBvarRSP0val80False0,OF = 64SUBvarRSP0val80False0,PF = 64SUBvarRSP0val80False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 80),E_val 8 64 False] = 64SUBvarRSP0val80False0,RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
-------------------------
3
121d: SHL Reg RAX, Immediate 2 4
Edge from 121d to 1221 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4641,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
1200: JZ 1212 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4608,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4608,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Edge from 1221 to 1225 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4645,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
1202: AND Reg EAX, Immediate 4095 5
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4610,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4610,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4626,RAX = IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4626,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Edge from 1225 to 122c with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4652,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
1207: SUB Reg RAX, Immediate 8 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4615,RAX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4615,RAX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),CF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),SF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),OF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),PF = AND(<31,0>(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),4095),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1215: ADD Reg RAX, Immediate 3 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4629,RAX = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),CF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),SF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),OF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),PF = TEST(zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4629,RAX = Unknown_1215_RSP,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4629,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
122c: JMP 1242 (resolved immediate)
Edge from 122c to 1242 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4674,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
120b: ADD Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4619,RAX = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 8),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),CF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),SF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),OF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),PF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4619,RAX = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 8),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),CF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),SF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),OF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),PF = (zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) - 16),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1219: SHR Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4633,RAX = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4633,RAX = (Unknown_1219_RAX + 3),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (Unknown_1219_RAX + 6),CF = (Unknown_1219_RAX + 6),SF = (Unknown_1219_RAX + 6),OF = (Unknown_1219_RAX + 6),PF = (Unknown_1219_RAX + 6),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4633,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1242 to 1245 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4622,RAX = (RSP0 - 80),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),CF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),SF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),OF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),PF = (((RSP0 + RSP0) - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 152),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4622,RAX = ((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) - 8),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) + Unknown_120e_RSP) - 8),CF = (((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) + Unknown_120e_RSP) - 8),SF = (((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) + Unknown_120e_RSP) - 8),OF = (((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) + Unknown_120e_RSP) - 8),PF = (((zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) + Unknown_120e_RSP) + Unknown_120e_RSP) - 8),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

The joined predicate becomes:
fromList [RIP = 4622,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]
The existing memory model is kept.
-------------------------
3
121d: SHL Reg RAX, Immediate 2 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4637,RAX = SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4637,RAX = SHR(Unknown_121d_RAX,zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,CF = SHR(Unknown_121d_RAX,zextend(2,64)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4637,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 1245 to 1248 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
-------------------------
3
1212: MOV Reg RAX, Reg RSP 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4626,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [Unknown_1212_RAX, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4626,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64varUnknown_1212_RAX0,CF = 64varUnknown_1212_RAX0,SF = 64varUnknown_1212_RAX0,OF = 64varUnknown_1212_RAX0,PF = 64varUnknown_1212_RAX0,[RSP0,E_val 8 64 False] = 4755_t,[Unknown_1212_RAX,E_val 8 64 False] = 64varUnknown_1212_RAX0,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX != 0,zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) != 0]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
2
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4641,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4641,RAX = SHL(Unknown_1221_RAX,zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,CF = SHL(Unknown_1221_RAX,zextend(2,64)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4641,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
2
1248: JB 122e (resolved immediate)
Edge from 1248 to 122e with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
Edge from 1248 to 124a with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
3
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4645,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4645,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = Unknown_1225_RAX,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4645,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Edge from 122e to 1231 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
3
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Edge from 124a to 124d with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4685,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
3
122c: JMP 1242 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4652,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4652,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1231 to 1235 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4661,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
3
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Edge from 124d to 1250 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4688,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
3
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Edge from 1235 to 1238 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4664,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
3
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Edge from 1250 to 1254 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4692,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
3
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),CF = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),SF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),OF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),PF = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 66),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Edge from 1238 to 123b with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4667,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
3
1254: MOV Reg EDX, Reg EDX 2
Edge from 1254 to 1256 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4694,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
3
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Edge from 123b to 123e with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4670,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),E_val 4 64 False] = <31,0>(zextend(SHL(1,zextend(1,32)),64)),[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
4
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Edge from 1256 to 1259 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4697,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
4
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Edge from 123e to 1242 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4674,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 2,CF = 2,SF = 2,OF = 2,PF = 2,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),E_val 4 64 False] = <31,0>(zextend(SHL(1,zextend(1,32)),64)),[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
-------------------------
4
1259: MOV Reg RSP, Reg RSI 3
Edge from 1259 to 125c with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4700,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
4
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4685,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4685,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 2,CF = 2,SF = 2,OF = 2,PF = 2,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),E_val 4 64 False] = <31,0>(zextend(SHL(1,zextend(1,32)),64)),[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 52),E_val 4 64 False] < (SHL(1,zextend(1,32)) + 1),[(RSP0 - 56),E_val 4 64 False] < 2,RDX >= 0,[(RSP0 - 52),E_val 4 64 False] >= 1,[(RSP0 - 56),E_val 4 64 False] >= 0]
The existing memory model is kept.
-------------------------
4
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Edge from 125c to 1260 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4704,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
4
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4661,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),E_val 8 64 False],RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
4
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4688,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4688,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = zextend(Unknown_1245_[(RSP0 - 56),E_val 4 64 False],64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 52),E_val 4 64 False] < (SHL(1,zextend(1,32)) + 1),[(RSP0 - 56),E_val 4 64 False] < 2,RDX >= 0,[(RSP0 - 52),E_val 4 64 False] >= 1,[(RSP0 - 56),E_val 4 64 False] >= 0]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RAX < (zextend(Unknown_1245_[(RSP0 - 56),E_val 4 64 False],64) + 1)]
The existing memory model is kept.
-------------------------
4
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Edge from 1260 to 1269 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4713,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
4
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4664,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
4
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4692,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),E_val 8 64 False],RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
4
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4680,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),CF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),SF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),OF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),PF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RAX < (zextend(Unknown_1245_[(RSP0 - 56),E_val 4 64 False],64) + 1)]

The joined predicate becomes:
fromList [RIP = 4680,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
5
1269: JZ 1270 (resolved immediate)
Edge from 1269 to 126b with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4715,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
Edge from 1269 to 1270 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4720,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
6
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4667,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4694,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4654,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4654,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4682,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4682,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
6
126b: CALL __stack_chk_fail (external)
-------------------------
5
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Edge from 1270 to 1274 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4724,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
5
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4670,RAX = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),E_val 4 64 False] = <31,0>(zextend(SHL(1,zextend(1,32)),64)),[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [Unknown_123e_RAX, 4]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[Unknown_123e_RAX,E_val 4 64 False] = <31,0>(zextend(SHL(1,zextend(1,32)),64)),[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]
The joined memory model becomes:
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

-------------------------
5
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4697,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = ((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + (zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4697,RAX = zextend(32ADDvarUnknown_1259_RAXMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + (zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4)),E_val 4 64 False] = 32ADDvarUnknown_1259_RAXMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
The joined memory model becomes:
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

-------------------------
5
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4657,RAX = 0,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4657,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,CF = SHL(Unknown_1231_[(RSP0 - 52),E_val 4 64 False],zextend(1,32)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(Unknown_1231_[(RSP0 - 52),E_val 4 64 False],zextend(1,32)),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4657,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
5
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4685,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4685,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
5
1274: LEAVE  1
Edge from 1274 to 1275 with memory model: 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Postcondition = fromList [RIP = 4725,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]
-------------------------
5
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 52),E_val 4 64 False] < (SHL(1,zextend(1,32)) + 1),[(RSP0 - 56),E_val 4 64 False] < 2,RDX >= 0,[(RSP0 - 52),E_val 4 64 False] >= 1,[(RSP0 - 56),E_val 4 64 False] >= 0]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 2,CF = 2,SF = 2,OF = 2,PF = 2,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 1,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
5
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
5
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4661,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4661,RAX = Unknown_1235_[(RSP0 - 40),E_val 8 64 False],RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4661,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
5
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4688,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4688,RAX = zextend(<31,0>(RDI0),64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
5
1275: RET  1
Address 1293 has become reachable.
-------------------------
4
1293: LEAVE  1
Edge from 1293 to 1294 with memory model: 
|
+- [RSP0, 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 12), 4]
|
+- [(RSP0 - 24), 8]
|
`- [(RSP0 - 32), 8]

Postcondition = fromList [RIP = 4756,RDI = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RSI = RSI0,RSP = RSP0,RBP = RBP0,[RSP0,E_val 8 64 False] = 0_t,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 12),E_val 4 64 False] = <31,0>(RDI0),[(RSP0 - 24),E_val 8 64 False] = RSI0]
-------------------------
4
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4677,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RAX < (zextend(Unknown_1245_[(RSP0 - 56),E_val 4 64 False],64) + 1)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4677,RAX = zextend(Unknown_1245_[(RSP0 - 56),E_val 4 64 False],64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4677,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
4
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4704,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
4
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4664,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(Unknown_1238_[(RSP0 - 56),E_val 4 64 False],64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4664,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX < (zextend(Unknown_1238_[(RSP0 - 56),E_val 4 64 False],64) + 1)]
The existing memory model is kept.
-------------------------
4
1254: MOV Reg EDX, Reg EDX 2
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4692,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4692,RAX = Unknown_1254_[(RSP0 - 40),E_val 8 64 False],RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4692,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
4
1294: RET  1
-------------------------
3
1248: JB 122e (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4680,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),CF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),SF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),OF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),PF = CMP(<31,0>(Unknown_1248_RAX),<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
2
1269: JZ 1270 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4713,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
3
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4667,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(Unknown_123b_[(RSP0 - 52),E_val 4 64 False],64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),RDX < (zextend(Unknown_1238_[(RSP0 - 56),E_val 4 64 False],64) + 1)]

The joined predicate becomes:
fromList [RIP = 4667,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
3
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4694,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
3
126b: CALL __stack_chk_fail (external)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4715,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
2
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4720,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
2
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(SHL(1,zextend(1,32)),64),RDX = 0,RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = SHL(1,zextend(1,32)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = SHL(1,zextend(1,32)),[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) < <31,0>(RDI0),0 < <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_123e_RAX + (Unknown_123e_RDX * 4)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4670,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(Unknown_123e_RAX + (Unknown_123e_RDX * 4)),E_val 4 64 False] = <31,0>(Unknown_123e_RCX),[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4670,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
2
1259: MOV Reg RSP, Reg RSI 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4697,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(Unknown_1259_RAX + (zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4)), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4697,RAX = zextend(32ADDvarUnknown_1259_RAXMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4False0,64),RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(Unknown_1259_RAX + (zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4)),E_val 4 64 False] = 32ADDvarUnknown_1259_RAXMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The joined predicate becomes:
fromList [RIP = 4697,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]
The existing memory model is kept.
-------------------------
2
1274: LEAVE  1
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4724,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4724,RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
2
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4674,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDI = 16,RSI = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 2),CF = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 2),SF = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 2),OF = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 2),PF = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 2),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 56),E_val 4 64 False] = (Unknown_1242_[(RSP0 - 56),E_val 4 64 False] + 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The current predicate and memory model are equal to the joined predicate and joined memory model.
-------------------------
1
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4700,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 16,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
1
1275: RET  1
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))), 4]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4725,RAX = zextend(32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,64),RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,(RSP0 - 72) = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64) = 0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[((zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64) * 4) + SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64))),E_val 4 64 False] = 32ADDMULF zextendtake31_0SUBF zextendtake31_0varRDI0val64Falseval1Falseval64Falseval4FalseSHLSHRSUBSUBvarRSP0F zextendANDtake31_0IMULDIVConcatval0FalseADDMULF zextendtake31_0varRDI0val64Falseval4Falseval15Falseval16Falseval16Falseval4095Falseval64Falseval69FalseF zextendval2Falseval64FalseF zextendval2Falseval64False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 40),E_val 8 64 False] = SHL(SHR(((RSP0 - zextend(AND(<31,0>(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16)),4095),64)) - 69),zextend(2,64)),zextend(2,64)),[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4725,RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is replaced with the current memory model.
-------------------------
0
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = CMP(0,<31,0>(RDI0)),CF = CMP(0,<31,0>(RDI0)),SF = CMP(0,<31,0>(RDI0)),OF = CMP(0,<31,0>(RDI0)),PF = CMP(0,<31,0>(RDI0)),[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4704,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 64ADDvarFS0val40False0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
0
1269: JZ 1270 (resolved immediate)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4713,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
1
126b: CALL __stack_chk_fail (external)
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4715,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
0
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4720,RBX = ((RSP0 - AND(IMUL(((0 . ((zextend(<31,0>(RDI0),64) * 4) + 15)) / 16),16),18446744073709547520)) - 72),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
0
1274: LEAVE  1
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4724,RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4724,RBX = RBX0,RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = (RSP0 - 72),RBP = (RSP0 - 8),R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.
-------------------------
0
1275: RET  1
Existing memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Existing predicate = fromList [RIP = 4725,RBX = RBX0,RCX = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 52),E_val 4 64 False] = 1,[(RSP0 - 56),E_val 4 64 False] = 0,[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0),<31,0>(RAX) >= <31,0>(RDI0),0 >= <31,0>(RDI0)]

Current memory model = 
|
+- [RSP0, 8]
|
+- [(FS0 + 40), 8]
|
+- [(RSP0 - 8), 8]
|
+- [(RSP0 - 16), 8]
|
+- [(RSP0 - 32), 8]
|
+- [(RSP0 - 40), 8]
|
+- [(RSP0 - 48), 8]
|
+- [(RSP0 - 52), 4]
|
+- [(RSP0 - 56), 4]
|
`- [(RSP0 - 60), 4]

Current predicate = fromList [RIP = 4725,RBX = RBX0,RDX = zextend(<31,0>((zextend(<31,0>(RDI0),64) - 1)),64),RDI = 0,RSI = (RSP0 - 72),RSP = RSP0,RBP = RBP0,R9 = 0,R8 = zextend(<31,0>(zextend(<31,0>(RDI0),64)),64),FS = FS0,ZF = 64ADDvarFS0val40False0,CF = 64ADDvarFS0val40False0,SF = 64ADDvarFS0val40False0,OF = 64ADDvarFS0val40False0,PF = 64ADDvarFS0val40False0,[RSP0,E_val 8 64 False] = 4755_t,[(FS0 + 40),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 8),E_val 8 64 False] = RBP0,[(RSP0 - 16),E_val 8 64 False] = RBX0,[(RSP0 - 32),E_val 8 64 False] = 64ADDvarFS0val40False0,[(RSP0 - 48),E_val 8 64 False] = (zextend(<31,0>(zextend(<31,0>(RDI0),64)),64) - 1),[(RSP0 - 60),E_val 4 64 False] = <31,0>(RDI0)]

The existing predicate is replaced with the current predicate.
The existing memory model is kept.

Number of assembly instructions     = 104
Number of indirect branches         = 1
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 109
Number of edges: 119

1060 (False): 0
1149 (True): 1293

1060: ENDBR64  4
1064: XOR Reg EBP, Reg EBP 2
1066: MOV Reg R9, Reg RDX 3
1069: POP Reg RSI 1
106a: MOV Reg RDX, Reg RSP 3
106d: AND Reg RSP, Immediate 18446744073709551600 4
1071: PUSH Reg RAX 1
1072: PUSH Reg RSP 1
1073: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 662)) 7
107a: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 543)) 7
1081: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 494)) 7
1088: CALL __libc_start_main (external)
  |
  `- 1276
1149: ENDBR64  4
114d: PUSH Reg RBP 1
114e: MOV Reg RBP, Reg RSP 3
1151: PUSH Reg RBX 1
1152: SUB Reg RSP, Immediate 56 4
1156: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))), Reg EDI 3
1159: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
1162: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))), Reg RAX 4
1166: XOR Reg EAX, Reg EAX 2
1168: MOV Reg RAX, Reg RSP 3
116b: MOV Reg RSI, Reg RAX 3
116e: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 7
1175: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
1178: MOV Reg EDX, Reg EAX 2
117a: SUB Reg RDX, Immediate 1 4
117e: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 40))), Reg RDX 4
1182: MOV Reg EDX, Reg EAX 2
1184: MOV Reg R8, Reg RDX 3
1187: MOV Reg R9D, Immediate 0 6
118d: MOV Reg EDX, Reg EAX 2
118f: MOV Reg RCX, Reg RDX 3
1192: MOV Reg EBX, Immediate 0 5
1197: MOV Reg EAX, Reg EAX 2
1199: LEA Reg RDX, Address (AddrPlus (AddrTimes (AddrImm 4) (FromReg RAX)) (AddrImm 0)) 8
11a1: MOV Reg EAX, Immediate 16 5
11a6: SUB Reg RAX, Immediate 1 4
11aa: ADD Reg RAX, Reg RDX 3
11ad: MOV Reg EDI, Immediate 16 5
11b2: MOV Reg EDX, Immediate 0 5
11b7: DIV Reg RDI 3
11ba: IMUL Reg RAX, Reg RAX, Immediate 16 4
11be: MOV Reg RDX, Reg RAX 3
11c1: AND Reg RDX, Immediate 18446744073709547520 7
11c8: MOV Reg RBX, Reg RSP 3
11cb: SUB Reg RBX, Reg RDX 3
11ce: MOV Reg RDX, Reg RBX 3
11d1: CMP Reg RSP, Reg RDX 3
11d4: JZ 11e8 (resolved immediate)
  |
  `- 11d6,11e8
11d6: SUB Reg RSP, Immediate 4096 7
11dd: OR Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4088))), Immediate 0 9
11e6: JMP 11d1 (resolved immediate)
  |
  `- 11d1
11e8: MOV Reg RDX, Reg RAX 3
11eb: AND Reg EDX, Immediate 4095 6
11f1: SUB Reg RSP, Reg RDX 3
11f4: MOV Reg RDX, Reg RAX 3
11f7: AND Reg EDX, Immediate 4095 6
11fd: TEST Reg RDX, Reg RDX 3
1200: JZ 1212 (resolved immediate)
  |
  `- 1202,1212
1202: AND Reg EAX, Immediate 4095 5
1207: SUB Reg RAX, Immediate 8 4
120b: ADD Reg RAX, Reg RSP 3
120e: OR Address (SizeDir 64 (FromReg RAX)), Immediate 0 4
1212: MOV Reg RAX, Reg RSP 3
1215: ADD Reg RAX, Immediate 3 4
1219: SHR Reg RAX, Immediate 2 4
121d: SHL Reg RAX, Immediate 2 4
1221: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))), Reg RAX 4
1225: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 0 7
122c: JMP 1242 (resolved immediate)
  |
  `- 1242
122e: SHL Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))), Immediate 1 3
1231: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
1235: MOV Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
1238: MOV Reg ECX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 44))) 3
123b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))), Reg ECX 3
123e: ADD Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))), Immediate 1 4
1242: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 48))) 3
1245: CMP Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
1248: JB 122e (resolved immediate)
  |
  `- 122e,124a
124a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 52))) 3
124d: LEA Reg EDX, Address (AddrMinus (FromReg RAX) (AddrImm 1)) 3
1250: MOV Reg RAX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 32))) 4
1254: MOV Reg EDX, Reg EDX 2
1256: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX)))) 3
1259: MOV Reg RSP, Reg RSI 3
125c: MOV Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 24))) 4
1260: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
1269: JZ 1270 (resolved immediate)
  |
  `- 126b,1270
126b: CALL __stack_chk_fail (external)
  |
  `- 
1270: MOV Reg RBX, Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 8))) 4
1274: LEAVE  1
1275: RET  1
  |
  `- 
1276: ENDBR64  4
127a: PUSH Reg RBP 1
127b: MOV Reg RBP, Reg RSP 3
127e: SUB Reg RSP, Immediate 16 4
1282: MOV Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))), Reg EDI 3
1285: MOV Address (SizeDir 64 (AddrMinus (FromReg RBP) (AddrImm 16))), Reg RSI 4
1289: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 4))) 3
128c: MOV Reg EDI, Reg EAX 2
128e: CALL local_array (internal)
  |
  `- 1149
1293: LEAVE  1
1294: RET  1
  |
  `- 
