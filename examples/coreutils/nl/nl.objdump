
/usr/bin/nl:     file format elf64-x86-64


Disassembly of section .init:

00000000000019f8 <.init>:
    19f8:	sub    rsp,0x8
    19fc:	mov    rax,QWORD PTR [rip+0x2085e5]        # 209fe8 <__gmon_start__>
    1a03:	test   rax,rax
    1a06:	je     1a0a <__uflow@plt-0x16>
    1a08:	call   rax
    1a0a:	add    rsp,0x8
    1a0e:	ret    

Disassembly of section .plt:

0000000000001a10 <__uflow@plt-0x10>:
    1a10:	push   QWORD PTR [rip+0x2083da]        # 209df0 <quoting_style_args@@Base+0x250>
    1a16:	jmp    QWORD PTR [rip+0x2083dc]        # 209df8 <quoting_style_args@@Base+0x258>
    1a1c:	nop    DWORD PTR [rax+0x0]

0000000000001a20 <__uflow@plt>:
    1a20:	jmp    QWORD PTR [rip+0x2083da]        # 209e00 <__uflow@GLIBC_2.2.5>
    1a26:	push   0x0
    1a2b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a30 <getenv@plt>:
    1a30:	jmp    QWORD PTR [rip+0x2083d2]        # 209e08 <getenv@GLIBC_2.2.5>
    1a36:	push   0x1
    1a3b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a40 <free@plt>:
    1a40:	jmp    QWORD PTR [rip+0x2083ca]        # 209e10 <free@GLIBC_2.2.5>
    1a46:	push   0x2
    1a4b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a50 <abort@plt>:
    1a50:	jmp    QWORD PTR [rip+0x2083c2]        # 209e18 <abort@GLIBC_2.2.5>
    1a56:	push   0x3
    1a5b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a60 <__errno_location@plt>:
    1a60:	jmp    QWORD PTR [rip+0x2083ba]        # 209e20 <__errno_location@GLIBC_2.2.5>
    1a66:	push   0x4
    1a6b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a70 <strncmp@plt>:
    1a70:	jmp    QWORD PTR [rip+0x2083b2]        # 209e28 <strncmp@GLIBC_2.2.5>
    1a76:	push   0x5
    1a7b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a80 <_exit@plt>:
    1a80:	jmp    QWORD PTR [rip+0x2083aa]        # 209e30 <_exit@GLIBC_2.2.5>
    1a86:	push   0x6
    1a8b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001a90 <strcpy@plt>:
    1a90:	jmp    QWORD PTR [rip+0x2083a2]        # 209e38 <strcpy@GLIBC_2.2.5>
    1a96:	push   0x7
    1a9b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001aa0 <__fpending@plt>:
    1aa0:	jmp    QWORD PTR [rip+0x20839a]        # 209e40 <__fpending@GLIBC_2.2.5>
    1aa6:	push   0x8
    1aab:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ab0 <clearerr_unlocked@plt>:
    1ab0:	jmp    QWORD PTR [rip+0x208392]        # 209e48 <clearerr_unlocked@GLIBC_2.2.5>
    1ab6:	push   0x9
    1abb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ac0 <textdomain@plt>:
    1ac0:	jmp    QWORD PTR [rip+0x20838a]        # 209e50 <textdomain@GLIBC_2.2.5>
    1ac6:	push   0xa
    1acb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ad0 <__strtol_internal@plt>:
    1ad0:	jmp    QWORD PTR [rip+0x208382]        # 209e58 <__strtol_internal@GLIBC_2.2.5>
    1ad6:	push   0xb
    1adb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ae0 <fclose@plt>:
    1ae0:	jmp    QWORD PTR [rip+0x20837a]        # 209e60 <fclose@GLIBC_2.2.5>
    1ae6:	push   0xc
    1aeb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001af0 <bindtextdomain@plt>:
    1af0:	jmp    QWORD PTR [rip+0x208372]        # 209e68 <bindtextdomain@GLIBC_2.2.5>
    1af6:	push   0xd
    1afb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b00 <stpcpy@plt>:
    1b00:	jmp    QWORD PTR [rip+0x20836a]        # 209e70 <stpcpy@GLIBC_2.2.5>
    1b06:	push   0xe
    1b0b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b10 <dcgettext@plt>:
    1b10:	jmp    QWORD PTR [rip+0x208362]        # 209e78 <dcgettext@GLIBC_2.2.5>
    1b16:	push   0xf
    1b1b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b20 <__ctype_get_mb_cur_max@plt>:
    1b20:	jmp    QWORD PTR [rip+0x20835a]        # 209e80 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1b26:	push   0x10
    1b2b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b30 <strlen@plt>:
    1b30:	jmp    QWORD PTR [rip+0x208352]        # 209e88 <strlen@GLIBC_2.2.5>
    1b36:	push   0x11
    1b3b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b40 <__stack_chk_fail@plt>:
    1b40:	jmp    QWORD PTR [rip+0x20834a]        # 209e90 <__stack_chk_fail@GLIBC_2.4>
    1b46:	push   0x12
    1b4b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b50 <getopt_long@plt>:
    1b50:	jmp    QWORD PTR [rip+0x208342]        # 209e98 <getopt_long@GLIBC_2.2.5>
    1b56:	push   0x13
    1b5b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b60 <mbrtowc@plt>:
    1b60:	jmp    QWORD PTR [rip+0x20833a]        # 209ea0 <mbrtowc@GLIBC_2.2.5>
    1b66:	push   0x14
    1b6b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b70 <strchr@plt>:
    1b70:	jmp    QWORD PTR [rip+0x208332]        # 209ea8 <strchr@GLIBC_2.2.5>
    1b76:	push   0x15
    1b7b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b80 <__overflow@plt>:
    1b80:	jmp    QWORD PTR [rip+0x20832a]        # 209eb0 <__overflow@GLIBC_2.2.5>
    1b86:	push   0x16
    1b8b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001b90 <strrchr@plt>:
    1b90:	jmp    QWORD PTR [rip+0x208322]        # 209eb8 <strrchr@GLIBC_2.2.5>
    1b96:	push   0x17
    1b9b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ba0 <lseek@plt>:
    1ba0:	jmp    QWORD PTR [rip+0x20831a]        # 209ec0 <lseek@GLIBC_2.2.5>
    1ba6:	push   0x18
    1bab:	jmp    1a10 <__uflow@plt-0x10>

0000000000001bb0 <__assert_fail@plt>:
    1bb0:	jmp    QWORD PTR [rip+0x208312]        # 209ec8 <__assert_fail@GLIBC_2.2.5>
    1bb6:	push   0x19
    1bbb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001bc0 <memset@plt>:
    1bc0:	jmp    QWORD PTR [rip+0x20830a]        # 209ed0 <memset@GLIBC_2.2.5>
    1bc6:	push   0x1a
    1bcb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001bd0 <fscanf@plt>:
    1bd0:	jmp    QWORD PTR [rip+0x208302]        # 209ed8 <fscanf@GLIBC_2.2.5>
    1bd6:	push   0x1b
    1bdb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001be0 <close@plt>:
    1be0:	jmp    QWORD PTR [rip+0x2082fa]        # 209ee0 <close@GLIBC_2.2.5>
    1be6:	push   0x1c
    1beb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001bf0 <posix_fadvise@plt>:
    1bf0:	jmp    QWORD PTR [rip+0x2082f2]        # 209ee8 <posix_fadvise@GLIBC_2.2.5>
    1bf6:	push   0x1d
    1bfb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c00 <memcmp@plt>:
    1c00:	jmp    QWORD PTR [rip+0x2082ea]        # 209ef0 <memcmp@GLIBC_2.2.5>
    1c06:	push   0x1e
    1c0b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c10 <fputs_unlocked@plt>:
    1c10:	jmp    QWORD PTR [rip+0x2082e2]        # 209ef8 <fputs_unlocked@GLIBC_2.2.5>
    1c16:	push   0x1f
    1c1b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c20 <calloc@plt>:
    1c20:	jmp    QWORD PTR [rip+0x2082da]        # 209f00 <calloc@GLIBC_2.2.5>
    1c26:	push   0x20
    1c2b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c30 <strcmp@plt>:
    1c30:	jmp    QWORD PTR [rip+0x2082d2]        # 209f08 <strcmp@GLIBC_2.2.5>
    1c36:	push   0x21
    1c3b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c40 <memcpy@plt>:
    1c40:	jmp    QWORD PTR [rip+0x2082ca]        # 209f10 <memcpy@GLIBC_2.14>
    1c46:	push   0x22
    1c4b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c50 <fileno@plt>:
    1c50:	jmp    QWORD PTR [rip+0x2082c2]        # 209f18 <fileno@GLIBC_2.2.5>
    1c56:	push   0x23
    1c5b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c60 <malloc@plt>:
    1c60:	jmp    QWORD PTR [rip+0x2082ba]        # 209f20 <malloc@GLIBC_2.2.5>
    1c66:	push   0x24
    1c6b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c70 <fflush@plt>:
    1c70:	jmp    QWORD PTR [rip+0x2082b2]        # 209f28 <fflush@GLIBC_2.2.5>
    1c76:	push   0x25
    1c7b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c80 <nl_langinfo@plt>:
    1c80:	jmp    QWORD PTR [rip+0x2082aa]        # 209f30 <nl_langinfo@GLIBC_2.2.5>
    1c86:	push   0x26
    1c8b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001c90 <ungetc@plt>:
    1c90:	jmp    QWORD PTR [rip+0x2082a2]        # 209f38 <ungetc@GLIBC_2.2.5>
    1c96:	push   0x27
    1c9b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ca0 <re_search@plt>:
    1ca0:	jmp    QWORD PTR [rip+0x20829a]        # 209f40 <re_search@GLIBC_2.2.5>
    1ca6:	push   0x28
    1cab:	jmp    1a10 <__uflow@plt-0x10>

0000000000001cb0 <__freading@plt>:
    1cb0:	jmp    QWORD PTR [rip+0x208292]        # 209f48 <__freading@GLIBC_2.2.5>
    1cb6:	push   0x29
    1cbb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001cc0 <fwrite_unlocked@plt>:
    1cc0:	jmp    QWORD PTR [rip+0x20828a]        # 209f50 <fwrite_unlocked@GLIBC_2.2.5>
    1cc6:	push   0x2a
    1ccb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001cd0 <realloc@plt>:
    1cd0:	jmp    QWORD PTR [rip+0x208282]        # 209f58 <realloc@GLIBC_2.2.5>
    1cd6:	push   0x2b
    1cdb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001ce0 <fdopen@plt>:
    1ce0:	jmp    QWORD PTR [rip+0x20827a]        # 209f60 <fdopen@GLIBC_2.2.5>
    1ce6:	push   0x2c
    1ceb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001cf0 <setlocale@plt>:
    1cf0:	jmp    QWORD PTR [rip+0x208272]        # 209f68 <setlocale@GLIBC_2.2.5>
    1cf6:	push   0x2d
    1cfb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d00 <__printf_chk@plt>:
    1d00:	jmp    QWORD PTR [rip+0x20826a]        # 209f70 <__printf_chk@GLIBC_2.3.4>
    1d06:	push   0x2e
    1d0b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d10 <error@plt>:
    1d10:	jmp    QWORD PTR [rip+0x208262]        # 209f78 <error@GLIBC_2.2.5>
    1d16:	push   0x2f
    1d1b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d20 <open@plt>:
    1d20:	jmp    QWORD PTR [rip+0x20825a]        # 209f80 <open@GLIBC_2.2.5>
    1d26:	push   0x30
    1d2b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d30 <fseeko@plt>:
    1d30:	jmp    QWORD PTR [rip+0x208252]        # 209f88 <fseeko@GLIBC_2.2.5>
    1d36:	push   0x31
    1d3b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d40 <fopen@plt>:
    1d40:	jmp    QWORD PTR [rip+0x20824a]        # 209f90 <fopen@GLIBC_2.2.5>
    1d46:	push   0x32
    1d4b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d50 <__cxa_atexit@plt>:
    1d50:	jmp    QWORD PTR [rip+0x208242]        # 209f98 <__cxa_atexit@GLIBC_2.2.5>
    1d56:	push   0x33
    1d5b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d60 <exit@plt>:
    1d60:	jmp    QWORD PTR [rip+0x20823a]        # 209fa0 <exit@GLIBC_2.2.5>
    1d66:	push   0x34
    1d6b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d70 <fwrite@plt>:
    1d70:	jmp    QWORD PTR [rip+0x208232]        # 209fa8 <fwrite@GLIBC_2.2.5>
    1d76:	push   0x35
    1d7b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d80 <__fprintf_chk@plt>:
    1d80:	jmp    QWORD PTR [rip+0x20822a]        # 209fb0 <__fprintf_chk@GLIBC_2.3.4>
    1d86:	push   0x36
    1d8b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001d90 <re_compile_pattern@plt>:
    1d90:	jmp    QWORD PTR [rip+0x208222]        # 209fb8 <re_compile_pattern@GLIBC_2.2.5>
    1d96:	push   0x37
    1d9b:	jmp    1a10 <__uflow@plt-0x10>

0000000000001da0 <mbsinit@plt>:
    1da0:	jmp    QWORD PTR [rip+0x20821a]        # 209fc0 <mbsinit@GLIBC_2.2.5>
    1da6:	push   0x38
    1dab:	jmp    1a10 <__uflow@plt-0x10>

0000000000001db0 <iswprint@plt>:
    1db0:	jmp    QWORD PTR [rip+0x208212]        # 209fc8 <iswprint@GLIBC_2.2.5>
    1db6:	push   0x39
    1dbb:	jmp    1a10 <__uflow@plt-0x10>

0000000000001dc0 <__ctype_b_loc@plt>:
    1dc0:	jmp    QWORD PTR [rip+0x20820a]        # 209fd0 <__ctype_b_loc@GLIBC_2.3>
    1dc6:	push   0x3a
    1dcb:	jmp    1a10 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000001dd0 <__cxa_finalize@plt>:
    1dd0:	jmp    QWORD PTR [rip+0x208222]        # 209ff8 <__cxa_finalize@GLIBC_2.2.5>
    1dd6:	xchg   ax,ax

Disassembly of section .text:

0000000000001de0 <.text>:
    1de0:	push   r15
    1de2:	push   r14
    1de4:	lea    r15,[rip+0x538d]        # 7178 <_IO_stdin_used@@Base+0xab8>
    1deb:	push   r13
    1ded:	push   r12
    1def:	lea    r14,[rip+0x49bb]        # 67b1 <_IO_stdin_used@@Base+0xf1>
    1df6:	push   rbp
    1df7:	push   rbx
    1df8:	mov    ebp,edi
    1dfa:	mov    rbx,rsi
    1dfd:	lea    r12,[rip+0x207bdc]        # 2099e0 <version_etc_copyright@@Base+0x202000>
    1e04:	mov    r13d,0x1
    1e0a:	sub    rsp,0x18
    1e0e:	mov    rdi,QWORD PTR [rsi]
    1e11:	call   3130 <__cxa_finalize@plt+0x1360>
    1e16:	lea    rsi,[rip+0x4a8f]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    1e1d:	mov    edi,0x6
    1e22:	call   1cf0 <setlocale@plt>
    1e27:	lea    rsi,[rip+0x4936]        # 6764 <_IO_stdin_used@@Base+0xa4>
    1e2e:	lea    rdi,[rip+0x4921]        # 6756 <_IO_stdin_used@@Base+0x96>
    1e35:	call   1af0 <bindtextdomain@plt>
    1e3a:	lea    rdi,[rip+0x4915]        # 6756 <_IO_stdin_used@@Base+0x96>
    1e41:	call   1ac0 <textdomain@plt>
    1e46:	lea    rdi,[rip+0x10b3]        # 2f00 <__cxa_finalize@plt+0x1130>
    1e4d:	call   6670 <__cxa_finalize@plt+0x48a0>
    1e52:	mov    BYTE PTR [rip+0x2082ef],0x0        # 20a148 <stderr@@GLIBC_2.2.5+0x28>
    1e59:	nop    DWORD PTR [rax+0x0]
    1e60:	lea    rdx,[rip+0x4971]        # 67d8 <_IO_stdin_used@@Base+0x118>
    1e67:	xor    r8d,r8d
    1e6a:	mov    rcx,r12
    1e6d:	mov    rsi,rbx
    1e70:	mov    edi,ebp
    1e72:	call   1b50 <getopt_long@plt>
    1e77:	cmp    eax,0xffffffff
    1e7a:	je     2220 <__cxa_finalize@plt+0x450>
    1e80:	cmp    eax,0x69
    1e83:	je     20c0 <__cxa_finalize@plt+0x2f0>
    1e89:	jle    1ec0 <__cxa_finalize@plt+0xf0>
    1e8b:	cmp    eax,0x70
    1e8e:	je     1f88 <__cxa_finalize@plt+0x1b8>
    1e94:	jle    1ef8 <__cxa_finalize@plt+0x128>
    1e96:	cmp    eax,0x76
    1e99:	je     2070 <__cxa_finalize@plt+0x2a0>
    1e9f:	cmp    eax,0x77
    1ea2:	je     2028 <__cxa_finalize@plt+0x258>
    1ea8:	cmp    eax,0x73
    1eab:	je     2110 <__cxa_finalize@plt+0x340>
    1eb1:	xor    r13d,r13d
    1eb4:	jmp    1e60 <__cxa_finalize@plt+0x90>
    1eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1ec0:	cmp    eax,0x62
    1ec3:	je     2128 <__cxa_finalize@plt+0x358>
    1ec9:	jle    1f38 <__cxa_finalize@plt+0x168>
    1ecb:	cmp    eax,0x66
    1ece:	je     1fe0 <__cxa_finalize@plt+0x210>
    1ed4:	cmp    eax,0x68
    1ed7:	je     1f98 <__cxa_finalize@plt+0x1c8>
    1edd:	cmp    eax,0x64
    1ee0:	jne    1eb1 <__cxa_finalize@plt+0xe1>
    1ee2:	mov    rax,QWORD PTR [rip+0x208227]        # 20a110 <optarg@@GLIBC_2.2.5>
    1ee9:	mov    QWORD PTR [rip+0x208150],rax        # 20a040 <quoting_style_args@@Base+0x4a0>
    1ef0:	jmp    1e60 <__cxa_finalize@plt+0x90>
    1ef5:	nop    DWORD PTR [rax]
    1ef8:	cmp    eax,0x6c
    1efb:	je     2188 <__cxa_finalize@plt+0x3b8>
    1f01:	cmp    eax,0x6e
    1f04:	jne    1eb1 <__cxa_finalize@plt+0xe1>
    1f06:	mov    rdx,QWORD PTR [rip+0x208203]        # 20a110 <optarg@@GLIBC_2.2.5>
    1f0d:	mov    ecx,0x3
    1f12:	mov    rdi,r14
    1f15:	mov    rsi,rdx
    1f18:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1f1a:	jne    21cf <__cxa_finalize@plt+0x3ff>
    1f20:	lea    rax,[rip+0x5241]        # 7168 <_IO_stdin_used@@Base+0xaa8>
    1f27:	mov    QWORD PTR [rip+0x20810a],rax        # 20a038 <quoting_style_args@@Base+0x498>
    1f2e:	jmp    1e60 <__cxa_finalize@plt+0x90>
    1f33:	nop    DWORD PTR [rax+rax*1+0x0]
    1f38:	cmp    eax,0xffffff7d
    1f3d:	jne    23d1 <__cxa_finalize@plt+0x601>
    1f43:	sub    rsp,0x8
    1f47:	mov    rdi,QWORD PTR [rip+0x20819a]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    1f4e:	mov    rcx,QWORD PTR [rip+0x208113]        # 20a068 <Version@@Base>
    1f55:	push   0x0
    1f57:	lea    r9,[rip+0x485c]        # 67ba <_IO_stdin_used@@Base+0xfa>
    1f5e:	lea    r8,[rip+0x4865]        # 67ca <_IO_stdin_used@@Base+0x10a>
    1f65:	lea    rdx,[rip+0x47e6]        # 6752 <_IO_stdin_used@@Base+0x92>
    1f6c:	lea    rsi,[rip+0x4766]        # 66d9 <_IO_stdin_used@@Base+0x19>
    1f73:	xor    eax,eax
    1f75:	call   5310 <__cxa_finalize@plt+0x3540>
    1f7a:	xor    edi,edi
    1f7c:	call   1d60 <exit@plt>
    1f81:	nop    DWORD PTR [rax+0x0]
    1f88:	mov    BYTE PTR [rip+0x208091],0x0        # 20a020 <quoting_style_args@@Base+0x480>
    1f8f:	jmp    1e60 <__cxa_finalize@plt+0x90>
    1f94:	nop    DWORD PTR [rax+0x0]
    1f98:	lea    rdx,[rip+0x208321]        # 20a2c0 <stderr@@GLIBC_2.2.5+0x1a0>
    1f9f:	lea    rsi,[rip+0x20855a]        # 20a500 <stderr@@GLIBC_2.2.5+0x3e0>
    1fa6:	lea    rdi,[rip+0x2080ab]        # 20a058 <quoting_style_args@@Base+0x4b8>
    1fad:	call   2570 <__cxa_finalize@plt+0x7a0>
    1fb2:	test   al,al
    1fb4:	jne    1e60 <__cxa_finalize@plt+0x90>
    1fba:	mov    rdi,QWORD PTR [rip+0x20814f]        # 20a110 <optarg@@GLIBC_2.2.5>
    1fc1:	call   4e40 <__cxa_finalize@plt+0x3070>
    1fc6:	mov    edx,0x5
    1fcb:	mov    r13,rax
    1fce:	lea    rsi,[rip+0x50a3]        # 7078 <_IO_stdin_used@@Base+0x9b8>
    1fd5:	jmp    2165 <__cxa_finalize@plt+0x395>
    1fda:	nop    WORD PTR [rax+rax*1+0x0]
    1fe0:	lea    rdx,[rip+0x2081d9]        # 20a1c0 <stderr@@GLIBC_2.2.5+0xa0>
    1fe7:	lea    rsi,[rip+0x2084d2]        # 20a4c0 <stderr@@GLIBC_2.2.5+0x3a0>
    1fee:	lea    rdi,[rip+0x20805b]        # 20a050 <quoting_style_args@@Base+0x4b0>
    1ff5:	call   2570 <__cxa_finalize@plt+0x7a0>
    1ffa:	test   al,al
    1ffc:	jne    1e60 <__cxa_finalize@plt+0x90>
    2002:	mov    rdi,QWORD PTR [rip+0x208107]        # 20a110 <optarg@@GLIBC_2.2.5>
    2009:	call   4e40 <__cxa_finalize@plt+0x3070>
    200e:	mov    edx,0x5
    2013:	mov    r13,rax
    2016:	lea    rsi,[rip+0x50ab]        # 70c8 <_IO_stdin_used@@Base+0xa08>
    201d:	jmp    2165 <__cxa_finalize@plt+0x395>
    2022:	nop    WORD PTR [rax+rax*1+0x0]
    2028:	lea    rsi,[rip+0x50e9]        # 7118 <_IO_stdin_used@@Base+0xa58>
    202f:	mov    edx,0x5
    2034:	xor    edi,edi
    2036:	call   1b10 <dcgettext@plt>
    203b:	mov    rdi,QWORD PTR [rip+0x2080ce]        # 20a110 <optarg@@GLIBC_2.2.5>
    2042:	lea    rcx,[rip+0x4863]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    2049:	mov    r8,rax
    204c:	xor    r9d,r9d
    204f:	mov    edx,0x7fffffff
    2054:	mov    esi,0x1
    2059:	call   5820 <__cxa_finalize@plt+0x3a50>
    205e:	mov    DWORD PTR [rip+0x207fac],eax        # 20a010 <quoting_style_args@@Base+0x470>
    2064:	jmp    1e60 <__cxa_finalize@plt+0x90>
    2069:	nop    DWORD PTR [rax+0x0]
    2070:	lea    rsi,[rip+0x46ff]        # 6776 <_IO_stdin_used@@Base+0xb6>
    2077:	mov    edx,0x5
    207c:	xor    edi,edi
    207e:	call   1b10 <dcgettext@plt>
    2083:	mov    rdi,QWORD PTR [rip+0x208086]        # 20a110 <optarg@@GLIBC_2.2.5>
    208a:	lea    rcx,[rip+0x481b]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    2091:	mov    r8,rax
    2094:	xor    r9d,r9d
    2097:	movabs rdx,0x7fffffffffffffff
    20a1:	movabs rsi,0x8000000000000000
    20ab:	call   5820 <__cxa_finalize@plt+0x3a50>
    20b0:	mov    QWORD PTR [rip+0x207f79],rax        # 20a030 <quoting_style_args@@Base+0x490>
    20b7:	jmp    1e60 <__cxa_finalize@plt+0x90>
    20bc:	nop    DWORD PTR [rax+0x0]
    20c0:	lea    rsi,[rip+0x46cc]        # 6793 <_IO_stdin_used@@Base+0xd3>
    20c7:	mov    edx,0x5
    20cc:	xor    edi,edi
    20ce:	call   1b10 <dcgettext@plt>
    20d3:	mov    rdi,QWORD PTR [rip+0x208036]        # 20a110 <optarg@@GLIBC_2.2.5>
    20da:	lea    rcx,[rip+0x47cb]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    20e1:	mov    r8,rax
    20e4:	xor    r9d,r9d
    20e7:	movabs rdx,0x7fffffffffffffff
    20f1:	mov    esi,0x1
    20f6:	call   5820 <__cxa_finalize@plt+0x3a50>
    20fb:	mov    QWORD PTR [rip+0x207f26],rax        # 20a028 <quoting_style_args@@Base+0x488>
    2102:	jmp    1e60 <__cxa_finalize@plt+0x90>
    2107:	nop    WORD PTR [rax+rax*1+0x0]
    2110:	mov    rax,QWORD PTR [rip+0x207ff9]        # 20a110 <optarg@@GLIBC_2.2.5>
    2117:	mov    QWORD PTR [rip+0x207f2a],rax        # 20a048 <quoting_style_args@@Base+0x4a8>
    211e:	jmp    1e60 <__cxa_finalize@plt+0x90>
    2123:	nop    DWORD PTR [rax+rax*1+0x0]
    2128:	lea    rdx,[rip+0x208291]        # 20a3c0 <stderr@@GLIBC_2.2.5+0x2a0>
    212f:	lea    rsi,[rip+0x20840a]        # 20a540 <stderr@@GLIBC_2.2.5+0x420>
    2136:	lea    rdi,[rip+0x207f23]        # 20a060 <quoting_style_args@@Base+0x4c0>
    213d:	call   2570 <__cxa_finalize@plt+0x7a0>
    2142:	test   al,al
    2144:	jne    1e60 <__cxa_finalize@plt+0x90>
    214a:	mov    rdi,QWORD PTR [rip+0x207fbf]        # 20a110 <optarg@@GLIBC_2.2.5>
    2151:	call   4e40 <__cxa_finalize@plt+0x3070>
    2156:	lea    rsi,[rip+0x4f43]        # 70a0 <_IO_stdin_used@@Base+0x9e0>
    215d:	mov    r13,rax
    2160:	mov    edx,0x5
    2165:	xor    edi,edi
    2167:	call   1b10 <dcgettext@plt>
    216c:	mov    rcx,r13
    216f:	mov    rdx,rax
    2172:	xor    esi,esi
    2174:	xor    edi,edi
    2176:	xor    eax,eax
    2178:	xor    r13d,r13d
    217b:	call   1d10 <error@plt>
    2180:	jmp    1e60 <__cxa_finalize@plt+0x90>
    2185:	nop    DWORD PTR [rax]
    2188:	lea    rsi,[rip+0x4f61]        # 70f0 <_IO_stdin_used@@Base+0xa30>
    218f:	mov    edx,0x5
    2194:	xor    edi,edi
    2196:	call   1b10 <dcgettext@plt>
    219b:	mov    rdi,QWORD PTR [rip+0x207f6e]        # 20a110 <optarg@@GLIBC_2.2.5>
    21a2:	lea    rcx,[rip+0x4703]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    21a9:	mov    r8,rax
    21ac:	xor    r9d,r9d
    21af:	movabs rdx,0x7fffffffffffffff
    21b9:	mov    esi,0x1
    21be:	call   5820 <__cxa_finalize@plt+0x3a50>
    21c3:	mov    QWORD PTR [rip+0x207e4e],rax        # 20a018 <quoting_style_args@@Base+0x478>
    21ca:	jmp    1e60 <__cxa_finalize@plt+0x90>
    21cf:	lea    rsi,[rip+0x45de]        # 67b4 <_IO_stdin_used@@Base+0xf4>
    21d6:	mov    rdi,rdx
    21d9:	mov    QWORD PTR [rsp],rdx
    21dd:	call   1c30 <strcmp@plt>
    21e2:	test   eax,eax
    21e4:	mov    rdx,QWORD PTR [rsp]
    21e8:	je     23e3 <__cxa_finalize@plt+0x613>
    21ee:	lea    rsi,[rip+0x45c2]        # 67b7 <_IO_stdin_used@@Base+0xf7>
    21f5:	mov    rdi,rdx
    21f8:	mov    QWORD PTR [rsp],rdx
    21fc:	call   1c30 <strcmp@plt>
    2201:	test   eax,eax
    2203:	mov    rdx,QWORD PTR [rsp]
    2207:	jne    241a <__cxa_finalize@plt+0x64a>
    220d:	lea    rax,[rip+0x4f5c]        # 7170 <_IO_stdin_used@@Base+0xab0>
    2214:	mov    QWORD PTR [rip+0x207e1d],rax        # 20a038 <quoting_style_args@@Base+0x498>
    221b:	jmp    1e60 <__cxa_finalize@plt+0x90>
    2220:	test   r13b,r13b
    2223:	je     244a <__cxa_finalize@plt+0x67a>
    2229:	mov    rdi,QWORD PTR [rip+0x207e10]        # 20a040 <quoting_style_args@@Base+0x4a0>
    2230:	or     r8,0xffffffffffffffff
    2234:	xor    edx,edx
    2236:	mov    rcx,r8
    2239:	mov    QWORD PTR [rsp+0x8],r8
    223e:	mov    eax,edx
    2240:	mov    BYTE PTR [rsp],dl
    2243:	repnz scas al,BYTE PTR es:[rdi]
    2245:	not    rcx
    2248:	lea    r12,[rcx+r8*1]
    224c:	mov    r14,rcx
    224f:	lea    rdi,[r12+r12*2]
    2253:	mov    QWORD PTR [rip+0x207f3e],rdi        # 20a198 <stderr@@GLIBC_2.2.5+0x78>
    225a:	add    rdi,0x1
    225e:	call   5470 <__cxa_finalize@plt+0x36a0>
    2263:	mov    r15,QWORD PTR [rip+0x207dd6]        # 20a040 <quoting_style_args@@Base+0x4a0>
    226a:	mov    rdi,rax
    226d:	mov    QWORD PTR [rip+0x207f2c],rax        # 20a1a0 <stderr@@GLIBC_2.2.5+0x80>
    2274:	mov    rsi,r15
    2277:	call   1b00 <stpcpy@plt>
    227c:	mov    rsi,r15
    227f:	mov    rdi,rax
    2282:	call   1b00 <stpcpy@plt>
    2287:	mov    rsi,r15
    228a:	mov    rdi,rax
    228d:	call   1a90 <strcpy@plt>
    2292:	lea    rdi,[r12+r12*1]
    2296:	mov    QWORD PTR [rip+0x207eeb],rdi        # 20a188 <stderr@@GLIBC_2.2.5+0x68>
    229d:	add    rdi,0x1
    22a1:	call   5470 <__cxa_finalize@plt+0x36a0>
    22a6:	mov    r15,QWORD PTR [rip+0x207d93]        # 20a040 <quoting_style_args@@Base+0x4a0>
    22ad:	mov    rdi,rax
    22b0:	mov    QWORD PTR [rip+0x207ed9],rax        # 20a190 <stderr@@GLIBC_2.2.5+0x70>
    22b7:	mov    rsi,r15
    22ba:	call   1b00 <stpcpy@plt>
    22bf:	mov    rsi,r15
    22c2:	mov    rdi,rax
    22c5:	call   1a90 <strcpy@plt>
    22ca:	mov    rdi,r14
    22cd:	mov    QWORD PTR [rip+0x207ea4],r12        # 20a178 <stderr@@GLIBC_2.2.5+0x58>
    22d4:	call   5470 <__cxa_finalize@plt+0x36a0>
    22d9:	mov    rsi,QWORD PTR [rip+0x207d60]        # 20a040 <quoting_style_args@@Base+0x4a0>
    22e0:	mov    rdi,rax
    22e3:	mov    QWORD PTR [rip+0x207e96],rax        # 20a180 <stderr@@GLIBC_2.2.5+0x60>
    22ea:	call   1a90 <strcpy@plt>
    22ef:	lea    rdi,[rip+0x207e6a]        # 20a160 <stderr@@GLIBC_2.2.5+0x40>
    22f6:	call   2ff0 <__cxa_finalize@plt+0x1220>
    22fb:	movzx  edx,BYTE PTR [rsp]
    22ff:	mov    r8,QWORD PTR [rsp+0x8]
    2304:	mov    rdi,QWORD PTR [rip+0x207d3d]        # 20a048 <quoting_style_args@@Base+0x4a8>
    230b:	mov    rcx,r8
    230e:	mov    eax,edx
    2310:	repnz scas al,BYTE PTR es:[rdi]
    2312:	movsxd rax,DWORD PTR [rip+0x207cf7]        # 20a010 <quoting_style_args@@Base+0x470>
    2319:	mov    r12,rcx
    231c:	not    r12
    231f:	sub    r12,0x1
    2323:	lea    rdi,[r12+rax*1+0x1]
    2328:	call   5470 <__cxa_finalize@plt+0x36a0>
    232d:	mov    rcx,rax
    2330:	mov    QWORD PTR [rip+0x207e21],rax        # 20a158 <stderr@@GLIBC_2.2.5+0x38>
    2337:	movsxd rax,DWORD PTR [rip+0x207cd2]        # 20a010 <quoting_style_args@@Base+0x470>
    233e:	mov    esi,0x20
    2343:	mov    rdi,rcx
    2346:	add    r12,rax
    2349:	mov    rdx,r12
    234c:	call   1bc0 <memset@plt>
    2351:	mov    BYTE PTR [rax+r12*1],0x0
    2356:	mov    rax,QWORD PTR [rip+0x207cd3]        # 20a030 <quoting_style_args@@Base+0x490>
    235d:	mov    QWORD PTR [rip+0x207dec],rax        # 20a150 <stderr@@GLIBC_2.2.5+0x30>
    2364:	mov    rax,QWORD PTR [rip+0x207cf5]        # 20a060 <quoting_style_args@@Base+0x4c0>
    236b:	mov    QWORD PTR [rip+0x20820e],rax        # 20a580 <stderr@@GLIBC_2.2.5+0x460>
    2372:	lea    rax,[rip+0x2081c7]        # 20a540 <stderr@@GLIBC_2.2.5+0x420>
    2379:	mov    QWORD PTR [rip+0x207e28],rax        # 20a1a8 <stderr@@GLIBC_2.2.5+0x88>
    2380:	mov    eax,DWORD PTR [rip+0x207d72]        # 20a0f8 <optind@@GLIBC_2.2.5>
    2386:	cmp    eax,ebp
    2388:	je     2436 <__cxa_finalize@plt+0x666>
    238e:	jge    23b1 <__cxa_finalize@plt+0x5e1>
    2390:	cdqe   
    2392:	mov    rdi,QWORD PTR [rbx+rax*8]
    2396:	call   26b0 <__cxa_finalize@plt+0x8e0>
    239b:	and    r13d,eax
    239e:	mov    eax,DWORD PTR [rip+0x207d54]        # 20a0f8 <optind@@GLIBC_2.2.5>
    23a4:	add    eax,0x1
    23a7:	cmp    eax,ebp
    23a9:	mov    DWORD PTR [rip+0x207d49],eax        # 20a0f8 <optind@@GLIBC_2.2.5>
    23af:	jl     2390 <__cxa_finalize@plt+0x5c0>
    23b1:	cmp    BYTE PTR [rip+0x207d90],0x0        # 20a148 <stderr@@GLIBC_2.2.5+0x28>
    23b8:	jne    23ef <__cxa_finalize@plt+0x61f>
    23ba:	add    rsp,0x18
    23be:	xor    r13d,0x1
    23c2:	pop    rbx
    23c3:	movzx  eax,r13b
    23c7:	pop    rbp
    23c8:	pop    r12
    23ca:	pop    r13
    23cc:	pop    r14
    23ce:	pop    r15
    23d0:	ret    
    23d1:	cmp    eax,0xffffff7e
    23d6:	jne    1eb1 <__cxa_finalize@plt+0xe1>
    23dc:	xor    edi,edi
    23de:	call   2aa0 <__cxa_finalize@plt+0xcd0>
    23e3:	mov    QWORD PTR [rip+0x207c4e],r15        # 20a038 <quoting_style_args@@Base+0x498>
    23ea:	jmp    1e60 <__cxa_finalize@plt+0x90>
    23ef:	mov    rdi,QWORD PTR [rip+0x207cfa]        # 20a0f0 <stdin@@GLIBC_2.2.5>
    23f6:	call   5f10 <__cxa_finalize@plt+0x4140>
    23fb:	add    eax,0x1
    23fe:	jne    23ba <__cxa_finalize@plt+0x5ea>
    2400:	call   1a60 <__errno_location@plt>
    2405:	mov    esi,DWORD PTR [rax]
    2407:	lea    rdx,[rip+0x4dcc]        # 71da <_IO_stdin_used@@Base+0xb1a>
    240e:	mov    edi,0x1
    2413:	xor    eax,eax
    2415:	call   1d10 <error@plt>
    241a:	mov    rdi,rdx
    241d:	call   4e40 <__cxa_finalize@plt+0x3070>
    2422:	mov    edx,0x5
    2427:	mov    r13,rax
    242a:	lea    rsi,[rip+0x4d07]        # 7138 <_IO_stdin_used@@Base+0xa78>
    2431:	jmp    2165 <__cxa_finalize@plt+0x395>
    2436:	lea    rdi,[rip+0x4d9d]        # 71da <_IO_stdin_used@@Base+0xb1a>
    243d:	call   26b0 <__cxa_finalize@plt+0x8e0>
    2442:	mov    r13d,eax
    2445:	jmp    23b1 <__cxa_finalize@plt+0x5e1>
    244a:	mov    edi,0x1
    244f:	call   2aa0 <__cxa_finalize@plt+0xcd0>
    2454:	nop    WORD PTR cs:[rax+rax*1+0x0]
    245e:	xchg   ax,ax
    2460:	xor    ebp,ebp
    2462:	mov    r9,rdx
    2465:	pop    rsi
    2466:	mov    rdx,rsp
    2469:	and    rsp,0xfffffffffffffff0
    246d:	push   rax
    246e:	push   rsp
    246f:	lea    r8,[rip+0x41ea]        # 6660 <__cxa_finalize@plt+0x4890>
    2476:	lea    rcx,[rip+0x4173]        # 65f0 <__cxa_finalize@plt+0x4820>
    247d:	lea    rdi,[rip+0xfffffffffffff95c]        # 1de0 <__cxa_finalize@plt+0x10>
    2484:	call   QWORD PTR [rip+0x207b56]        # 209fe0 <__libc_start_main@GLIBC_2.2.5>
    248a:	hlt    
    248b:	nop    DWORD PTR [rax+rax*1+0x0]
    2490:	lea    rdi,[rip+0x207c49]        # 20a0e0 <__progname@@GLIBC_2.2.5>
    2497:	push   rbp
    2498:	lea    rax,[rip+0x207c41]        # 20a0e0 <__progname@@GLIBC_2.2.5>
    249f:	cmp    rax,rdi
    24a2:	mov    rbp,rsp
    24a5:	je     24c0 <__cxa_finalize@plt+0x6f0>
    24a7:	mov    rax,QWORD PTR [rip+0x207b2a]        # 209fd8 <_ITM_deregisterTMCloneTable>
    24ae:	test   rax,rax
    24b1:	je     24c0 <__cxa_finalize@plt+0x6f0>
    24b3:	pop    rbp
    24b4:	jmp    rax
    24b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    24c0:	pop    rbp
    24c1:	ret    
    24c2:	nop    DWORD PTR [rax+0x0]
    24c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    24d0:	lea    rdi,[rip+0x207c09]        # 20a0e0 <__progname@@GLIBC_2.2.5>
    24d7:	lea    rsi,[rip+0x207c02]        # 20a0e0 <__progname@@GLIBC_2.2.5>
    24de:	push   rbp
    24df:	sub    rsi,rdi
    24e2:	mov    rbp,rsp
    24e5:	sar    rsi,0x3
    24e9:	mov    rax,rsi
    24ec:	shr    rax,0x3f
    24f0:	add    rsi,rax
    24f3:	sar    rsi,1
    24f6:	je     2510 <__cxa_finalize@plt+0x740>
    24f8:	mov    rax,QWORD PTR [rip+0x207af1]        # 209ff0 <_ITM_registerTMCloneTable>
    24ff:	test   rax,rax
    2502:	je     2510 <__cxa_finalize@plt+0x740>
    2504:	pop    rbp
    2505:	jmp    rax
    2507:	nop    WORD PTR [rax+rax*1+0x0]
    2510:	pop    rbp
    2511:	ret    
    2512:	nop    DWORD PTR [rax+0x0]
    2516:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2520:	cmp    BYTE PTR [rip+0x207c01],0x0        # 20a128 <stderr@@GLIBC_2.2.5+0x8>
    2527:	jne    2558 <__cxa_finalize@plt+0x788>
    2529:	cmp    QWORD PTR [rip+0x207ac7],0x0        # 209ff8 <__cxa_finalize@GLIBC_2.2.5>
    2531:	push   rbp
    2532:	mov    rbp,rsp
    2535:	je     2543 <__cxa_finalize@plt+0x773>
    2537:	mov    rdi,QWORD PTR [rip+0x207aca]        # 20a008 <quoting_style_args@@Base+0x468>
    253e:	call   1dd0 <__cxa_finalize@plt>
    2543:	call   2490 <__cxa_finalize@plt+0x6c0>
    2548:	mov    BYTE PTR [rip+0x207bd9],0x1        # 20a128 <stderr@@GLIBC_2.2.5+0x8>
    254f:	pop    rbp
    2550:	ret    
    2551:	nop    DWORD PTR [rax+0x0]
    2558:	repz ret 
    255a:	nop    WORD PTR [rax+rax*1+0x0]
    2560:	push   rbp
    2561:	mov    rbp,rsp
    2564:	pop    rbp
    2565:	jmp    24d0 <__cxa_finalize@plt+0x700>
    256a:	nop    WORD PTR [rax+rax*1+0x0]
    2570:	mov    rcx,QWORD PTR [rip+0x207b99]        # 20a110 <optarg@@GLIBC_2.2.5>
    2577:	movzx  eax,BYTE PTR [rcx]
    257a:	cmp    al,0x6e
    257c:	je     2604 <__cxa_finalize@plt+0x834>
    2582:	jle    2600 <__cxa_finalize@plt+0x830>
    2584:	cmp    al,0x70
    2586:	jne    25f8 <__cxa_finalize@plt+0x828>
    2588:	push   rbp
    2589:	lea    rax,[rcx+0x1]
    258d:	push   rbx
    258e:	mov    rbx,rsi
    2591:	sub    rsp,0x8
    2595:	mov    QWORD PTR [rip+0x207b74],rax        # 20a110 <optarg@@GLIBC_2.2.5>
    259c:	mov    QWORD PTR [rdi],rcx
    259f:	mov    rbp,QWORD PTR [rip+0x207b6a]        # 20a110 <optarg@@GLIBC_2.2.5>
    25a6:	mov    QWORD PTR [rsi],0x0
    25ad:	mov    QWORD PTR [rsi+0x20],rdx
    25b1:	mov    QWORD PTR [rsi+0x8],0x0
    25b9:	mov    QWORD PTR [rsi+0x28],0x0
    25c1:	mov    QWORD PTR [rip+0x207b34],0x2c6        # 20a100 <re_syntax_options@@GLIBC_2.2.5>
    25cc:	mov    rdi,rbp
    25cf:	call   1b30 <strlen@plt>
    25d4:	mov    rdx,rbx
    25d7:	mov    rsi,rax
    25da:	mov    rdi,rbp
    25dd:	call   1d90 <re_compile_pattern@plt>
    25e2:	test   rax,rax
    25e5:	jne    260d <__cxa_finalize@plt+0x83d>
    25e7:	add    rsp,0x8
    25eb:	mov    eax,0x1
    25f0:	pop    rbx
    25f1:	pop    rbp
    25f2:	ret    
    25f3:	nop    DWORD PTR [rax+rax*1+0x0]
    25f8:	cmp    al,0x74
    25fa:	je     2604 <__cxa_finalize@plt+0x834>
    25fc:	xor    eax,eax
    25fe:	ret    
    25ff:	nop
    2600:	cmp    al,0x61
    2602:	jne    25fc <__cxa_finalize@plt+0x82c>
    2604:	mov    QWORD PTR [rdi],rcx
    2607:	mov    eax,0x1
    260c:	ret    
    260d:	lea    rdx,[rip+0x4b80]        # 7194 <_IO_stdin_used@@Base+0xad4>
    2614:	mov    rcx,rax
    2617:	xor    esi,esi
    2619:	mov    edi,0x1
    261e:	xor    eax,eax
    2620:	call   1d10 <error@plt>
    2625:	nop
    2626:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2630:	sub    rsp,0x8
    2634:	mov    edx,DWORD PTR [rip+0x2079d6]        # 20a010 <quoting_style_args@@Base+0x470>
    263a:	mov    r8,QWORD PTR [rip+0x207a07]        # 20a048 <quoting_style_args@@Base+0x4a8>
    2641:	mov    rcx,QWORD PTR [rip+0x207b08]        # 20a150 <stderr@@GLIBC_2.2.5+0x30>
    2648:	mov    rsi,QWORD PTR [rip+0x2079e9]        # 20a038 <quoting_style_args@@Base+0x498>
    264f:	xor    eax,eax
    2651:	mov    edi,0x1
    2656:	call   1d00 <__printf_chk@plt>
    265b:	mov    rax,QWORD PTR [rip+0x207aee]        # 20a150 <stderr@@GLIBC_2.2.5+0x30>
    2662:	mov    rdx,QWORD PTR [rip+0x2079bf]        # 20a028 <quoting_style_args@@Base+0x488>
    2669:	add    rdx,rax
    266c:	cmp    rax,rdx
    266f:	jg     267d <__cxa_finalize@plt+0x8ad>
    2671:	mov    QWORD PTR [rip+0x207ad8],rdx        # 20a150 <stderr@@GLIBC_2.2.5+0x30>
    2678:	add    rsp,0x8
    267c:	ret    
    267d:	lea    rsi,[rip+0x4040]        # 66c4 <_IO_stdin_used@@Base+0x4>
    2684:	mov    edx,0x5
    2689:	xor    edi,edi
    268b:	call   1b10 <dcgettext@plt>
    2690:	xor    esi,esi
    2692:	mov    rdx,rax
    2695:	mov    edi,0x1
    269a:	xor    eax,eax
    269c:	call   1d10 <error@plt>
    26a1:	nop    DWORD PTR [rax+rax*1+0x0]
    26a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    26b0:	push   r15
    26b2:	push   r14
    26b4:	mov    rsi,rdi
    26b7:	push   r13
    26b9:	push   r12
    26bb:	mov    ecx,0x2
    26c0:	push   rbp
    26c1:	push   rbx
    26c2:	sub    rsp,0x18
    26c6:	mov    QWORD PTR [rsp+0x8],rdi
    26cb:	lea    rdi,[rip+0x4b08]        # 71da <_IO_stdin_used@@Base+0xb1a>
    26d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    26d4:	jne    2a10 <__cxa_finalize@plt+0xc40>
    26da:	mov    rbx,QWORD PTR [rip+0x207a0f]        # 20a0f0 <stdin@@GLIBC_2.2.5>
    26e1:	mov    BYTE PTR [rip+0x207a60],0x1        # 20a148 <stderr@@GLIBC_2.2.5+0x28>
    26e8:	lea    rbp,[rip+0x207a71]        # 20a160 <stderr@@GLIBC_2.2.5+0x40>
    26ef:	lea    r12,[rip+0x207dca]        # 20a4c0 <stderr@@GLIBC_2.2.5+0x3a0>
    26f6:	mov    esi,0x2
    26fb:	mov    rdi,rbx
    26fe:	call   2fc0 <__cxa_finalize@plt+0x11f0>
    2703:	nop    DWORD PTR [rax+rax*1+0x0]
    2708:	mov    rsi,rbx
    270b:	mov    rdi,rbp
    270e:	call   3110 <__cxa_finalize@plt+0x1340>
    2713:	test   rax,rax
    2716:	je     27ed <__cxa_finalize@plt+0xa1d>
    271c:	mov    r14,QWORD PTR [rip+0x207a45]        # 20a168 <stderr@@GLIBC_2.2.5+0x48>
    2723:	lea    r13,[r14-0x1]
    2727:	cmp    r13,0x1
    272b:	jbe    2840 <__cxa_finalize@plt+0xa70>
    2731:	mov    rax,QWORD PTR [rip+0x207908]        # 20a040 <quoting_style_args@@Base+0x4a0>
    2738:	mov    r15,QWORD PTR [rip+0x207a31]        # 20a170 <stderr@@GLIBC_2.2.5+0x50>
    273f:	movzx  eax,WORD PTR [rax]
    2742:	cmp    WORD PTR [r15],ax
    2746:	jne    2840 <__cxa_finalize@plt+0xa70>
    274c:	cmp    r13,QWORD PTR [rip+0x207a45]        # 20a198 <stderr@@GLIBC_2.2.5+0x78>
    2753:	je     28a0 <__cxa_finalize@plt+0xad0>
    2759:	cmp    r13,QWORD PTR [rip+0x207a28]        # 20a188 <stderr@@GLIBC_2.2.5+0x68>
    2760:	je     28f0 <__cxa_finalize@plt+0xb20>
    2766:	cmp    r13,QWORD PTR [rip+0x207a0b]        # 20a178 <stderr@@GLIBC_2.2.5+0x58>
    276d:	jne    2840 <__cxa_finalize@plt+0xa70>
    2773:	mov    rsi,QWORD PTR [rip+0x207a06]        # 20a180 <stderr@@GLIBC_2.2.5+0x60>
    277a:	mov    rdx,r13
    277d:	mov    rdi,r15
    2780:	call   1c00 <memcmp@plt>
    2785:	test   eax,eax
    2787:	jne    2840 <__cxa_finalize@plt+0xa70>
    278d:	cmp    BYTE PTR [rip+0x20788c],0x0        # 20a020 <quoting_style_args@@Base+0x480>
    2794:	mov    rax,QWORD PTR [rip+0x2078b5]        # 20a050 <quoting_style_args@@Base+0x4b0>
    279b:	mov    QWORD PTR [rip+0x207a06],r12        # 20a1a8 <stderr@@GLIBC_2.2.5+0x88>
    27a2:	mov    QWORD PTR [rip+0x207dd7],rax        # 20a580 <stderr@@GLIBC_2.2.5+0x460>
    27a9:	je     27b9 <__cxa_finalize@plt+0x9e9>
    27ab:	mov    rax,QWORD PTR [rip+0x20787e]        # 20a030 <quoting_style_args@@Base+0x490>
    27b2:	mov    QWORD PTR [rip+0x207997],rax        # 20a150 <stderr@@GLIBC_2.2.5+0x30>
    27b9:	mov    rdi,QWORD PTR [rip+0x207928]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    27c0:	mov    rax,QWORD PTR [rdi+0x28]
    27c4:	cmp    rax,QWORD PTR [rdi+0x30]
    27c8:	jae    2990 <__cxa_finalize@plt+0xbc0>
    27ce:	lea    rdx,[rax+0x1]
    27d2:	mov    rsi,rbx
    27d5:	mov    QWORD PTR [rdi+0x28],rdx
    27d9:	mov    BYTE PTR [rax],0xa
    27dc:	mov    rdi,rbp
    27df:	call   3110 <__cxa_finalize@plt+0x1340>
    27e4:	test   rax,rax
    27e7:	jne    271c <__cxa_finalize@plt+0x94c>
    27ed:	test   BYTE PTR [rbx],0x20
    27f0:	jne    2a2d <__cxa_finalize@plt+0xc5d>
    27f6:	mov    rsi,QWORD PTR [rsp+0x8]
    27fb:	lea    rdi,[rip+0x49d8]        # 71da <_IO_stdin_used@@Base+0xb1a>
    2802:	mov    ecx,0x2
    2807:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2809:	mov    rdi,rbx
    280c:	seta   dl
    280f:	setb   al
    2812:	cmp    dl,al
    2814:	je     29f2 <__cxa_finalize@plt+0xc22>
    281a:	call   5f10 <__cxa_finalize@plt+0x4140>
    281f:	mov    edx,eax
    2821:	mov    eax,0x1
    2826:	cmp    edx,0xffffffff
    2829:	je     2a2d <__cxa_finalize@plt+0xc5d>
    282f:	add    rsp,0x18
    2833:	pop    rbx
    2834:	pop    rbp
    2835:	pop    r12
    2837:	pop    r13
    2839:	pop    r14
    283b:	pop    r15
    283d:	ret    
    283e:	xchg   ax,ax
    2840:	mov    rax,QWORD PTR [rip+0x207d39]        # 20a580 <stderr@@GLIBC_2.2.5+0x460>
    2847:	movzx  eax,BYTE PTR [rax]
    284a:	cmp    al,0x6e
    284c:	je     2971 <__cxa_finalize@plt+0xba1>
    2852:	jle    29a0 <__cxa_finalize@plt+0xbd0>
    2858:	cmp    al,0x70
    285a:	je     2940 <__cxa_finalize@plt+0xb70>
    2860:	cmp    al,0x74
    2862:	jne    287a <__cxa_finalize@plt+0xaaa>
    2864:	cmp    r14,0x1
    2868:	jbe    2971 <__cxa_finalize@plt+0xba1>
    286e:	call   2630 <__cxa_finalize@plt+0x860>
    2873:	mov    r14,QWORD PTR [rip+0x2078ee]        # 20a168 <stderr@@GLIBC_2.2.5+0x48>
    287a:	mov    rcx,QWORD PTR [rip+0x207867]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2881:	mov    rdi,QWORD PTR [rip+0x2078e8]        # 20a170 <stderr@@GLIBC_2.2.5+0x50>
    2888:	mov    rdx,r14
    288b:	mov    esi,0x1
    2890:	call   1cc0 <fwrite_unlocked@plt>
    2895:	jmp    2708 <__cxa_finalize@plt+0x938>
    289a:	nop    WORD PTR [rax+rax*1+0x0]
    28a0:	mov    rsi,QWORD PTR [rip+0x2078f9]        # 20a1a0 <stderr@@GLIBC_2.2.5+0x80>
    28a7:	mov    rdx,r13
    28aa:	mov    rdi,r15
    28ad:	call   1c00 <memcmp@plt>
    28b2:	test   eax,eax
    28b4:	jne    2759 <__cxa_finalize@plt+0x989>
    28ba:	mov    rax,QWORD PTR [rip+0x207797]        # 20a058 <quoting_style_args@@Base+0x4b8>
    28c1:	cmp    BYTE PTR [rip+0x207758],0x0        # 20a020 <quoting_style_args@@Base+0x480>
    28c8:	mov    QWORD PTR [rip+0x207cb1],rax        # 20a580 <stderr@@GLIBC_2.2.5+0x460>
    28cf:	lea    rax,[rip+0x207c2a]        # 20a500 <stderr@@GLIBC_2.2.5+0x3e0>
    28d6:	mov    QWORD PTR [rip+0x2078cb],rax        # 20a1a8 <stderr@@GLIBC_2.2.5+0x88>
    28dd:	je     27b9 <__cxa_finalize@plt+0x9e9>
    28e3:	jmp    27ab <__cxa_finalize@plt+0x9db>
    28e8:	nop    DWORD PTR [rax+rax*1+0x0]
    28f0:	mov    rsi,QWORD PTR [rip+0x207899]        # 20a190 <stderr@@GLIBC_2.2.5+0x70>
    28f7:	mov    rdx,r13
    28fa:	mov    rdi,r15
    28fd:	call   1c00 <memcmp@plt>
    2902:	test   eax,eax
    2904:	jne    2766 <__cxa_finalize@plt+0x996>
    290a:	mov    rax,QWORD PTR [rip+0x20774f]        # 20a060 <quoting_style_args@@Base+0x4c0>
    2911:	cmp    BYTE PTR [rip+0x207708],0x0        # 20a020 <quoting_style_args@@Base+0x480>
    2918:	mov    QWORD PTR [rip+0x207c61],rax        # 20a580 <stderr@@GLIBC_2.2.5+0x460>
    291f:	lea    rax,[rip+0x207c1a]        # 20a540 <stderr@@GLIBC_2.2.5+0x420>
    2926:	mov    QWORD PTR [rip+0x20787b],rax        # 20a1a8 <stderr@@GLIBC_2.2.5+0x88>
    292d:	jne    27ab <__cxa_finalize@plt+0x9db>
    2933:	jmp    27b9 <__cxa_finalize@plt+0x9e9>
    2938:	nop    DWORD PTR [rax+rax*1+0x0]
    2940:	lea    edx,[r14-0x1]
    2944:	mov    rsi,QWORD PTR [rip+0x207825]        # 20a170 <stderr@@GLIBC_2.2.5+0x50>
    294b:	mov    rdi,QWORD PTR [rip+0x207856]        # 20a1a8 <stderr@@GLIBC_2.2.5+0x88>
    2952:	xor    r9d,r9d
    2955:	xor    ecx,ecx
    2957:	mov    r8d,edx
    295a:	call   1ca0 <re_search@plt>
    295f:	cmp    eax,0xfffffffe
    2962:	je     2a6c <__cxa_finalize@plt+0xc9c>
    2968:	cmp    eax,0xffffffff
    296b:	jne    286e <__cxa_finalize@plt+0xa9e>
    2971:	mov    rsi,QWORD PTR [rip+0x207770]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2978:	mov    rdi,QWORD PTR [rip+0x2077d9]        # 20a158 <stderr@@GLIBC_2.2.5+0x38>
    297f:	call   1c10 <fputs_unlocked@plt>
    2984:	mov    r14,QWORD PTR [rip+0x2077dd]        # 20a168 <stderr@@GLIBC_2.2.5+0x48>
    298b:	jmp    287a <__cxa_finalize@plt+0xaaa>
    2990:	mov    esi,0xa
    2995:	call   1b80 <__overflow@plt>
    299a:	jmp    2708 <__cxa_finalize@plt+0x938>
    299f:	nop
    29a0:	cmp    al,0x61
    29a2:	jne    287a <__cxa_finalize@plt+0xaaa>
    29a8:	mov    rax,QWORD PTR [rip+0x207669]        # 20a018 <quoting_style_args@@Base+0x478>
    29af:	cmp    rax,0x1
    29b3:	jle    286e <__cxa_finalize@plt+0xa9e>
    29b9:	cmp    r14,0x1
    29bd:	ja     29d6 <__cxa_finalize@plt+0xc06>
    29bf:	mov    rcx,QWORD PTR [rip+0x20777a]        # 20a140 <stderr@@GLIBC_2.2.5+0x20>
    29c6:	lea    rdx,[rcx+0x1]
    29ca:	cmp    rax,rdx
    29cd:	mov    QWORD PTR [rip+0x20776c],rdx        # 20a140 <stderr@@GLIBC_2.2.5+0x20>
    29d4:	jne    2971 <__cxa_finalize@plt+0xba1>
    29d6:	call   2630 <__cxa_finalize@plt+0x860>
    29db:	mov    QWORD PTR [rip+0x20775a],0x0        # 20a140 <stderr@@GLIBC_2.2.5+0x20>
    29e6:	mov    r14,QWORD PTR [rip+0x20777b]        # 20a168 <stderr@@GLIBC_2.2.5+0x48>
    29ed:	jmp    287a <__cxa_finalize@plt+0xaaa>
    29f2:	call   1ab0 <clearerr_unlocked@plt>
    29f7:	add    rsp,0x18
    29fb:	mov    eax,0x1
    2a00:	pop    rbx
    2a01:	pop    rbp
    2a02:	pop    r12
    2a04:	pop    r13
    2a06:	pop    r14
    2a08:	pop    r15
    2a0a:	ret    
    2a0b:	nop    DWORD PTR [rax+rax*1+0x0]
    2a10:	mov    rdi,QWORD PTR [rsp+0x8]
    2a15:	lea    rsi,[rip+0x3d75]        # 6791 <_IO_stdin_used@@Base+0xd1>
    2a1c:	call   1d40 <fopen@plt>
    2a21:	test   rax,rax
    2a24:	mov    rbx,rax
    2a27:	jne    26e8 <__cxa_finalize@plt+0x918>
    2a2d:	mov    rdx,QWORD PTR [rsp+0x8]
    2a32:	mov    esi,0x3
    2a37:	xor    edi,edi
    2a39:	call   4c70 <__cxa_finalize@plt+0x2ea0>
    2a3e:	mov    rbx,rax
    2a41:	call   1a60 <__errno_location@plt>
    2a46:	mov    esi,DWORD PTR [rax]
    2a48:	lea    rdx,[rip+0x4745]        # 7194 <_IO_stdin_used@@Base+0xad4>
    2a4f:	mov    rcx,rbx
    2a52:	xor    eax,eax
    2a54:	xor    edi,edi
    2a56:	call   1d10 <error@plt>
    2a5b:	add    rsp,0x18
    2a5f:	xor    eax,eax
    2a61:	pop    rbx
    2a62:	pop    rbp
    2a63:	pop    r12
    2a65:	pop    r13
    2a67:	pop    r14
    2a69:	pop    r15
    2a6b:	ret    
    2a6c:	lea    rsi,[rip+0x3e3d]        # 68b0 <_IO_stdin_used@@Base+0x1f0>
    2a73:	mov    edx,0x5
    2a78:	xor    edi,edi
    2a7a:	call   1b10 <dcgettext@plt>
    2a7f:	mov    rbx,rax
    2a82:	call   1a60 <__errno_location@plt>
    2a87:	mov    esi,DWORD PTR [rax]
    2a89:	mov    rdx,rbx
    2a8c:	mov    edi,0x1
    2a91:	xor    eax,eax
    2a93:	call   1d10 <error@plt>
    2a98:	nop    DWORD PTR [rax+rax*1+0x0]
    2aa0:	push   r12
    2aa2:	push   rbp
    2aa3:	mov    edx,0x5
    2aa8:	push   rbx
    2aa9:	mov    ebp,edi
    2aab:	add    rsp,0xffffffffffffff80
    2aaf:	mov    rbx,QWORD PTR [rip+0x207ae2]        # 20a598 <program_name@@Base>
    2ab6:	mov    rax,QWORD PTR fs:0x28
    2abf:	mov    QWORD PTR [rsp+0x78],rax
    2ac4:	xor    eax,eax
    2ac6:	test   edi,edi
    2ac8:	je     2af8 <__cxa_finalize@plt+0xd28>
    2aca:	lea    rsi,[rip+0x3e07]        # 68d8 <_IO_stdin_used@@Base+0x218>
    2ad1:	xor    edi,edi
    2ad3:	call   1b10 <dcgettext@plt>
    2ad8:	mov    rdi,QWORD PTR [rip+0x207641]        # 20a120 <stderr@@GLIBC_2.2.5>
    2adf:	mov    rdx,rax
    2ae2:	mov    rcx,rbx
    2ae5:	mov    esi,0x1
    2aea:	xor    eax,eax
    2aec:	call   1d80 <__fprintf_chk@plt>
    2af1:	mov    edi,ebp
    2af3:	call   1d60 <exit@plt>
    2af8:	lea    rsi,[rip+0x3e01]        # 6900 <_IO_stdin_used@@Base+0x240>
    2aff:	xor    edi,edi
    2b01:	call   1b10 <dcgettext@plt>
    2b06:	mov    rdx,rbx
    2b09:	mov    rsi,rax
    2b0c:	mov    edi,0x1
    2b11:	xor    eax,eax
    2b13:	call   1d00 <__printf_chk@plt>
    2b18:	mov    rbx,QWORD PTR [rip+0x2075c9]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2b1f:	lea    rsi,[rip+0x3e02]        # 6928 <_IO_stdin_used@@Base+0x268>
    2b26:	mov    edx,0x5
    2b2b:	xor    edi,edi
    2b2d:	call   1b10 <dcgettext@plt>
    2b32:	mov    rsi,rbx
    2b35:	mov    rdi,rax
    2b38:	call   1c10 <fputs_unlocked@plt>
    2b3d:	mov    rbx,QWORD PTR [rip+0x2075a4]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2b44:	lea    rsi,[rip+0x3e1d]        # 6968 <_IO_stdin_used@@Base+0x2a8>
    2b4b:	mov    edx,0x5
    2b50:	xor    edi,edi
    2b52:	call   1b10 <dcgettext@plt>
    2b57:	mov    rsi,rbx
    2b5a:	mov    rdi,rax
    2b5d:	call   1c10 <fputs_unlocked@plt>
    2b62:	mov    rbx,QWORD PTR [rip+0x20757f]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2b69:	lea    rsi,[rip+0x3e30]        # 69a0 <_IO_stdin_used@@Base+0x2e0>
    2b70:	mov    edx,0x5
    2b75:	xor    edi,edi
    2b77:	call   1b10 <dcgettext@plt>
    2b7c:	mov    rsi,rbx
    2b7f:	mov    rdi,rax
    2b82:	call   1c10 <fputs_unlocked@plt>
    2b87:	mov    rbx,QWORD PTR [rip+0x20755a]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2b8e:	lea    rsi,[rip+0x3e5b]        # 69f0 <_IO_stdin_used@@Base+0x330>
    2b95:	mov    edx,0x5
    2b9a:	xor    edi,edi
    2b9c:	call   1b10 <dcgettext@plt>
    2ba1:	mov    rsi,rbx
    2ba4:	mov    rdi,rax
    2ba7:	call   1c10 <fputs_unlocked@plt>
    2bac:	mov    rbx,QWORD PTR [rip+0x207535]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2bb3:	lea    rsi,[rip+0x3f0e]        # 6ac8 <_IO_stdin_used@@Base+0x408>
    2bba:	mov    edx,0x5
    2bbf:	xor    edi,edi
    2bc1:	call   1b10 <dcgettext@plt>
    2bc6:	mov    rsi,rbx
    2bc9:	mov    rdi,rax
    2bcc:	call   1c10 <fputs_unlocked@plt>
    2bd1:	mov    rbx,QWORD PTR [rip+0x207510]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2bd8:	lea    rsi,[rip+0x40a9]        # 6c88 <_IO_stdin_used@@Base+0x5c8>
    2bdf:	mov    edx,0x5
    2be4:	xor    edi,edi
    2be6:	call   1b10 <dcgettext@plt>
    2beb:	mov    rsi,rbx
    2bee:	mov    rdi,rax
    2bf1:	call   1c10 <fputs_unlocked@plt>
    2bf6:	mov    rbx,QWORD PTR [rip+0x2074eb]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2bfd:	lea    rsi,[rip+0x4114]        # 6d18 <_IO_stdin_used@@Base+0x658>
    2c04:	mov    edx,0x5
    2c09:	xor    edi,edi
    2c0b:	call   1b10 <dcgettext@plt>
    2c10:	mov    rsi,rbx
    2c13:	mov    rdi,rax
    2c16:	call   1c10 <fputs_unlocked@plt>
    2c1b:	mov    rbx,QWORD PTR [rip+0x2074c6]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2c22:	lea    rsi,[rip+0x411f]        # 6d48 <_IO_stdin_used@@Base+0x688>
    2c29:	mov    edx,0x5
    2c2e:	xor    edi,edi
    2c30:	call   1b10 <dcgettext@plt>
    2c35:	mov    rsi,rbx
    2c38:	mov    rdi,rax
    2c3b:	call   1c10 <fputs_unlocked@plt>
    2c40:	mov    rbx,QWORD PTR [rip+0x2074a1]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2c47:	lea    rsi,[rip+0x4132]        # 6d80 <_IO_stdin_used@@Base+0x6c0>
    2c4e:	mov    edx,0x5
    2c53:	xor    edi,edi
    2c55:	call   1b10 <dcgettext@plt>
    2c5a:	mov    rsi,rbx
    2c5d:	mov    rdi,rax
    2c60:	call   1c10 <fputs_unlocked@plt>
    2c65:	mov    rbx,QWORD PTR [rip+0x20747c]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2c6c:	lea    rsi,[rip+0x41e5]        # 6e58 <_IO_stdin_used@@Base+0x798>
    2c73:	mov    edx,0x5
    2c78:	xor    edi,edi
    2c7a:	call   1b10 <dcgettext@plt>
    2c7f:	mov    rsi,rbx
    2c82:	mov    rdi,rax
    2c85:	lea    rbx,[rip+0x3a4d]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2c8c:	call   1c10 <fputs_unlocked@plt>
    2c91:	lea    rax,[rip+0x3a44]        # 66dc <_IO_stdin_used@@Base+0x1c>
    2c98:	lea    rcx,[rip+0x3a7e]        # 671d <_IO_stdin_used@@Base+0x5d>
    2c9f:	mov    QWORD PTR [rsp+0x60],0x0
    2ca8:	mov    QWORD PTR [rsp+0x68],0x0
    2cb1:	mov    QWORD PTR [rsp],rax
    2cb5:	lea    rax,[rip+0x3a22]        # 66de <_IO_stdin_used@@Base+0x1e>
    2cbc:	mov    QWORD PTR [rsp+0x30],rcx
    2cc1:	lea    rcx,[rip+0x3a5f]        # 6727 <_IO_stdin_used@@Base+0x67>
    2cc8:	mov    QWORD PTR [rsp+0x8],rax
    2ccd:	lea    rax,[rip+0x3a82]        # 6756 <_IO_stdin_used@@Base+0x96>
    2cd4:	mov    QWORD PTR [rsp+0x40],rcx
    2cd9:	lea    rcx,[rip+0x3a51]        # 6731 <_IO_stdin_used@@Base+0x71>
    2ce0:	mov    QWORD PTR [rsp+0x10],rax
    2ce5:	lea    rax,[rip+0x3a02]        # 66ee <_IO_stdin_used@@Base+0x2e>
    2cec:	mov    QWORD PTR [rsp+0x50],rcx
    2cf1:	mov    QWORD PTR [rsp+0x18],rax
    2cf6:	lea    rax,[rip+0x3a07]        # 6704 <_IO_stdin_used@@Base+0x44>
    2cfd:	mov    QWORD PTR [rsp+0x20],rax
    2d02:	lea    rax,[rip+0x3a05]        # 670e <_IO_stdin_used@@Base+0x4e>
    2d09:	mov    QWORD PTR [rsp+0x28],rax
    2d0e:	mov    QWORD PTR [rsp+0x38],rax
    2d13:	mov    QWORD PTR [rsp+0x48],rax
    2d18:	mov    QWORD PTR [rsp+0x58],rax
    2d1d:	mov    rax,rsp
    2d20:	add    rax,0x10
    2d24:	mov    rdi,QWORD PTR [rax]
    2d27:	test   rdi,rdi
    2d2a:	je     2d38 <__cxa_finalize@plt+0xf68>
    2d2c:	mov    ecx,0x3
    2d31:	mov    rsi,rbx
    2d34:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2d36:	jne    2d20 <__cxa_finalize@plt+0xf50>
    2d38:	mov    r12,QWORD PTR [rax+0x8]
    2d3c:	xor    edi,edi
    2d3e:	mov    edx,0x5
    2d43:	lea    rsi,[rip+0x39f1]        # 673b <_IO_stdin_used@@Base+0x7b>
    2d4a:	test   r12,r12
    2d4d:	je     2e14 <__cxa_finalize@plt+0x1044>
    2d53:	call   1b10 <dcgettext@plt>
    2d58:	lea    rcx,[rip+0x4251]        # 6fb0 <_IO_stdin_used@@Base+0x8f0>
    2d5f:	lea    rdx,[rip+0x39ec]        # 6752 <_IO_stdin_used@@Base+0x92>
    2d66:	mov    rsi,rax
    2d69:	mov    edi,0x1
    2d6e:	xor    eax,eax
    2d70:	call   1d00 <__printf_chk@plt>
    2d75:	xor    esi,esi
    2d77:	mov    edi,0x5
    2d7c:	call   1cf0 <setlocale@plt>
    2d81:	test   rax,rax
    2d84:	je     2da2 <__cxa_finalize@plt+0xfd2>
    2d86:	lea    rsi,[rip+0x39d3]        # 6760 <_IO_stdin_used@@Base+0xa0>
    2d8d:	mov    edx,0x3
    2d92:	mov    rdi,rax
    2d95:	call   1a70 <strncmp@plt>
    2d9a:	test   eax,eax
    2d9c:	jne    2ea9 <__cxa_finalize@plt+0x10d9>
    2da2:	lea    rsi,[rip+0x4277]        # 7020 <_IO_stdin_used@@Base+0x960>
    2da9:	xor    edi,edi
    2dab:	mov    edx,0x5
    2db0:	call   1b10 <dcgettext@plt>
    2db5:	lea    rcx,[rip+0x391d]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2dbc:	lea    rdx,[rip+0x41ed]        # 6fb0 <_IO_stdin_used@@Base+0x8f0>
    2dc3:	mov    rsi,rax
    2dc6:	mov    edi,0x1
    2dcb:	xor    eax,eax
    2dcd:	call   1d00 <__printf_chk@plt>
    2dd2:	cmp    r12,rbx
    2dd5:	lea    rcx,[rip+0x391c]        # 66f8 <_IO_stdin_used@@Base+0x38>
    2ddc:	lea    rbx,[rip+0x3ac9]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    2de3:	cmove  rbx,rcx
    2de7:	lea    rsi,[rip+0x4252]        # 7040 <_IO_stdin_used@@Base+0x980>
    2dee:	xor    edi,edi
    2df0:	mov    edx,0x5
    2df5:	call   1b10 <dcgettext@plt>
    2dfa:	mov    rcx,rbx
    2dfd:	mov    rsi,rax
    2e00:	mov    rdx,r12
    2e03:	mov    edi,0x1
    2e08:	xor    eax,eax
    2e0a:	call   1d00 <__printf_chk@plt>
    2e0f:	jmp    2af1 <__cxa_finalize@plt+0xd21>
    2e14:	call   1b10 <dcgettext@plt>
    2e19:	lea    rcx,[rip+0x4190]        # 6fb0 <_IO_stdin_used@@Base+0x8f0>
    2e20:	lea    rdx,[rip+0x392b]        # 6752 <_IO_stdin_used@@Base+0x92>
    2e27:	mov    rsi,rax
    2e2a:	mov    edi,0x1
    2e2f:	xor    eax,eax
    2e31:	call   1d00 <__printf_chk@plt>
    2e36:	xor    esi,esi
    2e38:	mov    edi,0x5
    2e3d:	call   1cf0 <setlocale@plt>
    2e42:	test   rax,rax
    2e45:	je     2e5f <__cxa_finalize@plt+0x108f>
    2e47:	lea    rsi,[rip+0x3912]        # 6760 <_IO_stdin_used@@Base+0xa0>
    2e4e:	mov    edx,0x3
    2e53:	mov    rdi,rax
    2e56:	call   1a70 <strncmp@plt>
    2e5b:	test   eax,eax
    2e5d:	jne    2ea2 <__cxa_finalize@plt+0x10d2>
    2e5f:	lea    rsi,[rip+0x41ba]        # 7020 <_IO_stdin_used@@Base+0x960>
    2e66:	mov    edx,0x5
    2e6b:	xor    edi,edi
    2e6d:	lea    r12,[rip+0x3865]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2e74:	lea    rbx,[rip+0x387d]        # 66f8 <_IO_stdin_used@@Base+0x38>
    2e7b:	call   1b10 <dcgettext@plt>
    2e80:	lea    rcx,[rip+0x3852]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2e87:	lea    rdx,[rip+0x4122]        # 6fb0 <_IO_stdin_used@@Base+0x8f0>
    2e8e:	mov    rsi,rax
    2e91:	mov    edi,0x1
    2e96:	xor    eax,eax
    2e98:	call   1d00 <__printf_chk@plt>
    2e9d:	jmp    2de7 <__cxa_finalize@plt+0x1017>
    2ea2:	lea    r12,[rip+0x3830]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2ea9:	lea    rsi,[rip+0x4128]        # 6fd8 <_IO_stdin_used@@Base+0x918>
    2eb0:	xor    edi,edi
    2eb2:	mov    edx,0x5
    2eb7:	call   1b10 <dcgettext@plt>
    2ebc:	lea    rdx,[rip+0x3816]        # 66d9 <_IO_stdin_used@@Base+0x19>
    2ec3:	mov    rsi,rax
    2ec6:	mov    edi,0x1
    2ecb:	xor    eax,eax
    2ecd:	call   1d00 <__printf_chk@plt>
    2ed2:	jmp    2da2 <__cxa_finalize@plt+0xfd2>
    2ed7:	nop    WORD PTR [rax+rax*1+0x0]
    2ee0:	mov    QWORD PTR [rip+0x2076a9],rdi        # 20a590 <stderr@@GLIBC_2.2.5+0x470>
    2ee7:	ret    
    2ee8:	nop    DWORD PTR [rax+rax*1+0x0]
    2ef0:	mov    BYTE PTR [rip+0x207691],dil        # 20a588 <stderr@@GLIBC_2.2.5+0x468>
    2ef7:	ret    
    2ef8:	nop    DWORD PTR [rax+rax*1+0x0]
    2f00:	push   rbp
    2f01:	push   rbx
    2f02:	sub    rsp,0x8
    2f06:	mov    rdi,QWORD PTR [rip+0x2071db]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    2f0d:	call   60c0 <__cxa_finalize@plt+0x42f0>
    2f12:	test   eax,eax
    2f14:	je     2f2c <__cxa_finalize@plt+0x115c>
    2f16:	call   1a60 <__errno_location@plt>
    2f1b:	cmp    BYTE PTR [rip+0x207666],0x0        # 20a588 <stderr@@GLIBC_2.2.5+0x468>
    2f22:	mov    rbx,rax
    2f25:	je     2f43 <__cxa_finalize@plt+0x1173>
    2f27:	cmp    DWORD PTR [rax],0x20
    2f2a:	jne    2f43 <__cxa_finalize@plt+0x1173>
    2f2c:	mov    rdi,QWORD PTR [rip+0x2071ed]        # 20a120 <stderr@@GLIBC_2.2.5>
    2f33:	call   60c0 <__cxa_finalize@plt+0x42f0>
    2f38:	test   eax,eax
    2f3a:	jne    2f82 <__cxa_finalize@plt+0x11b2>
    2f3c:	add    rsp,0x8
    2f40:	pop    rbx
    2f41:	pop    rbp
    2f42:	ret    
    2f43:	lea    rsi,[rip+0x423a]        # 7184 <_IO_stdin_used@@Base+0xac4>
    2f4a:	xor    edi,edi
    2f4c:	mov    edx,0x5
    2f51:	call   1b10 <dcgettext@plt>
    2f56:	mov    rdi,QWORD PTR [rip+0x207633]        # 20a590 <stderr@@GLIBC_2.2.5+0x470>
    2f5d:	mov    rbp,rax
    2f60:	test   rdi,rdi
    2f63:	je     2f8d <__cxa_finalize@plt+0x11bd>
    2f65:	call   4c40 <__cxa_finalize@plt+0x2e70>
    2f6a:	mov    esi,DWORD PTR [rbx]
    2f6c:	lea    rdx,[rip+0x421d]        # 7190 <_IO_stdin_used@@Base+0xad0>
    2f73:	mov    rcx,rax
    2f76:	mov    r8,rbp
    2f79:	xor    edi,edi
    2f7b:	xor    eax,eax
    2f7d:	call   1d10 <error@plt>
    2f82:	mov    edi,DWORD PTR [rip+0x2070e8]        # 20a070 <exit_failure@@Base>
    2f88:	call   1a80 <_exit@plt>
    2f8d:	mov    esi,DWORD PTR [rbx]
    2f8f:	lea    rdx,[rip+0x41fe]        # 7194 <_IO_stdin_used@@Base+0xad4>
    2f96:	mov    rcx,rax
    2f99:	xor    edi,edi
    2f9b:	xor    eax,eax
    2f9d:	call   1d10 <error@plt>
    2fa2:	jmp    2f82 <__cxa_finalize@plt+0x11b2>
    2fa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2fae:	xchg   ax,ax
    2fb0:	jmp    1bf0 <posix_fadvise@plt>
    2fb5:	nop
    2fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2fc0:	test   rdi,rdi
    2fc3:	je     2fe0 <__cxa_finalize@plt+0x1210>
    2fc5:	push   rbx
    2fc6:	mov    ebx,esi
    2fc8:	call   1c50 <fileno@plt>
    2fcd:	mov    ecx,ebx
    2fcf:	xor    edx,edx
    2fd1:	xor    esi,esi
    2fd3:	pop    rbx
    2fd4:	mov    edi,eax
    2fd6:	jmp    1bf0 <posix_fadvise@plt>
    2fdb:	nop    DWORD PTR [rax+rax*1+0x0]
    2fe0:	repz ret 
    2fe2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2fec:	nop    DWORD PTR [rax+0x0]
    2ff0:	pxor   xmm0,xmm0
    2ff4:	mov    QWORD PTR [rdi+0x10],0x0
    2ffc:	movups XMMWORD PTR [rdi],xmm0
    2fff:	ret    
    3000:	push   r15
    3002:	push   r14
    3004:	push   r13
    3006:	push   r12
    3008:	push   rbp
    3009:	push   rbx
    300a:	sub    rsp,0x18
    300e:	mov    r13,QWORD PTR [rdi+0x10]
    3012:	mov    r8,QWORD PTR [rdi]
    3015:	add    r8,r13
    3018:	test   BYTE PTR [rsi],0x10
    301b:	jne    30f0 <__cxa_finalize@plt+0x1320>
    3021:	mov    r14,rdi
    3024:	mov    rbp,rsi
    3027:	mov    rbx,r13
    302a:	movsx  r15d,dl
    302e:	jmp    303b <__cxa_finalize@plt+0x126b>
    3030:	cmp    r12d,r15d
    3033:	lea    rbx,[rsi+0x1]
    3037:	mov    BYTE PTR [rsi],cl
    3039:	je     3096 <__cxa_finalize@plt+0x12c6>
    303b:	mov    rcx,QWORD PTR [rbp+0x8]
    303f:	cmp    rcx,QWORD PTR [rbp+0x10]
    3043:	jae    30b0 <__cxa_finalize@plt+0x12e0>
    3045:	lea    rax,[rcx+0x1]
    3049:	mov    QWORD PTR [rbp+0x8],rax
    304d:	movzx  r12d,BYTE PTR [rcx]
    3051:	mov    ecx,r12d
    3054:	cmp    rbx,r8
    3057:	mov    rsi,rbx
    305a:	jne    3030 <__cxa_finalize@plt+0x1260>
    305c:	mov    rbx,QWORD PTR [r14]
    305f:	mov    rsi,r14
    3062:	mov    rdi,r13
    3065:	mov    BYTE PTR [rsp+0xf],dl
    3069:	mov    BYTE PTR [rsp],cl
    306c:	call   55d0 <__cxa_finalize@plt+0x3800>
    3071:	mov    r8,QWORD PTR [r14]
    3074:	movzx  ecx,BYTE PTR [rsp]
    3078:	lea    rsi,[rax+rbx*1]
    307c:	mov    QWORD PTR [r14+0x10],rax
    3080:	mov    r13,rax
    3083:	movzx  edx,BYTE PTR [rsp+0xf]
    3088:	lea    rbx,[rsi+0x1]
    308c:	add    r8,rax
    308f:	cmp    r12d,r15d
    3092:	mov    BYTE PTR [rsi],cl
    3094:	jne    303b <__cxa_finalize@plt+0x126b>
    3096:	sub    rbx,r13
    3099:	mov    rax,r14
    309c:	mov    QWORD PTR [r14+0x8],rbx
    30a0:	add    rsp,0x18
    30a4:	pop    rbx
    30a5:	pop    rbp
    30a6:	pop    r12
    30a8:	pop    r13
    30aa:	pop    r14
    30ac:	pop    r15
    30ae:	ret    
    30af:	nop
    30b0:	mov    rdi,rbp
    30b3:	mov    BYTE PTR [rsp+0xf],dl
    30b7:	mov    QWORD PTR [rsp],r8
    30bb:	call   1a20 <__uflow@plt>
    30c0:	cmp    eax,0xffffffff
    30c3:	mov    r12d,eax
    30c6:	mov    r8,QWORD PTR [rsp]
    30ca:	movzx  edx,BYTE PTR [rsp+0xf]
    30cf:	jne    3101 <__cxa_finalize@plt+0x1331>
    30d1:	cmp    r13,rbx
    30d4:	je     30f0 <__cxa_finalize@plt+0x1320>
    30d6:	test   BYTE PTR [rbp+0x0],0x20
    30da:	jne    30f0 <__cxa_finalize@plt+0x1320>
    30dc:	cmp    BYTE PTR [rbx-0x1],dl
    30df:	je     3096 <__cxa_finalize@plt+0x12c6>
    30e1:	mov    r12d,r15d
    30e4:	mov    ecx,edx
    30e6:	jmp    3054 <__cxa_finalize@plt+0x1284>
    30eb:	nop    DWORD PTR [rax+rax*1+0x0]
    30f0:	add    rsp,0x18
    30f4:	xor    eax,eax
    30f6:	pop    rbx
    30f7:	pop    rbp
    30f8:	pop    r12
    30fa:	pop    r13
    30fc:	pop    r14
    30fe:	pop    r15
    3100:	ret    
    3101:	mov    ecx,eax
    3103:	jmp    3054 <__cxa_finalize@plt+0x1284>
    3108:	nop    DWORD PTR [rax+rax*1+0x0]
    3110:	mov    edx,0xa
    3115:	jmp    3000 <__cxa_finalize@plt+0x1230>
    311a:	nop    WORD PTR [rax+rax*1+0x0]
    3120:	mov    rdi,QWORD PTR [rdi+0x10]
    3124:	jmp    1a40 <free@plt>
    3129:	nop    DWORD PTR [rax+0x0]
    3130:	test   rdi,rdi
    3133:	push   rbx
    3134:	je     31a7 <__cxa_finalize@plt+0x13d7>
    3136:	mov    esi,0x2f
    313b:	mov    rbx,rdi
    313e:	call   1b90 <strrchr@plt>
    3143:	test   rax,rax
    3146:	je     3197 <__cxa_finalize@plt+0x13c7>
    3148:	lea    rdx,[rax+0x1]
    314c:	mov    rcx,rdx
    314f:	sub    rcx,rbx
    3152:	cmp    rcx,0x6
    3156:	jle    3197 <__cxa_finalize@plt+0x13c7>
    3158:	lea    rsi,[rax-0x6]
    315c:	lea    rdi,[rip+0x406d]        # 71d0 <_IO_stdin_used@@Base+0xb10>
    3163:	mov    ecx,0x7
    3168:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    316a:	jne    3197 <__cxa_finalize@plt+0x13c7>
    316c:	lea    rdi,[rip+0x4065]        # 71d8 <_IO_stdin_used@@Base+0xb18>
    3173:	mov    ecx,0x3
    3178:	mov    rsi,rdx
    317b:	mov    rbx,rdx
    317e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3180:	seta   sil
    3184:	setb   cl
    3187:	cmp    sil,cl
    318a:	jne    3197 <__cxa_finalize@plt+0x13c7>
    318c:	lea    rbx,[rax+0x4]
    3190:	mov    QWORD PTR [rip+0x206f49],rbx        # 20a0e0 <__progname@@GLIBC_2.2.5>
    3197:	mov    QWORD PTR [rip+0x2073fa],rbx        # 20a598 <program_name@@Base>
    319e:	mov    QWORD PTR [rip+0x206f73],rbx        # 20a118 <__progname_full@@GLIBC_2.2.5>
    31a5:	pop    rbx
    31a6:	ret    
    31a7:	mov    rcx,QWORD PTR [rip+0x206f72]        # 20a120 <stderr@@GLIBC_2.2.5>
    31ae:	lea    rdi,[rip+0x3fe3]        # 7198 <_IO_stdin_used@@Base+0xad8>
    31b5:	mov    edx,0x37
    31ba:	mov    esi,0x1
    31bf:	call   1d70 <fwrite@plt>
    31c4:	call   1a50 <abort@plt>
    31c9:	nop    DWORD PTR [rax+0x0]
    31d0:	push   rbp
    31d1:	push   rbx
    31d2:	mov    rbp,rdi
    31d5:	mov    ebx,esi
    31d7:	sub    rsp,0x8
    31db:	call   61a0 <__cxa_finalize@plt+0x43d0>
    31e0:	movzx  edx,BYTE PTR [rax]
    31e3:	and    edx,0xffffffdf
    31e6:	cmp    dl,0x55
    31e9:	je     3260 <__cxa_finalize@plt+0x1490>
    31eb:	cmp    dl,0x47
    31ee:	je     3210 <__cxa_finalize@plt+0x1440>
    31f0:	lea    rax,[rip+0x3ff4]        # 71eb <_IO_stdin_used@@Base+0xb2b>
    31f7:	lea    rdx,[rip+0x3fef]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    31fe:	cmp    ebx,0x9
    3201:	cmovne rax,rdx
    3205:	add    rsp,0x8
    3209:	pop    rbx
    320a:	pop    rbp
    320b:	ret    
    320c:	nop    DWORD PTR [rax+0x0]
    3210:	movzx  edx,BYTE PTR [rax+0x1]
    3214:	and    edx,0xffffffdf
    3217:	cmp    dl,0x42
    321a:	jne    31f0 <__cxa_finalize@plt+0x1420>
    321c:	cmp    BYTE PTR [rax+0x2],0x31
    3220:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3222:	cmp    BYTE PTR [rax+0x3],0x38
    3226:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3228:	cmp    BYTE PTR [rax+0x4],0x30
    322c:	jne    31f0 <__cxa_finalize@plt+0x1420>
    322e:	cmp    BYTE PTR [rax+0x5],0x33
    3232:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3234:	cmp    BYTE PTR [rax+0x6],0x30
    3238:	jne    31f0 <__cxa_finalize@plt+0x1420>
    323a:	cmp    BYTE PTR [rax+0x7],0x0
    323e:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3240:	cmp    BYTE PTR [rbp+0x0],0x60
    3244:	lea    rax,[rip+0x3f99]        # 71e4 <_IO_stdin_used@@Base+0xb24>
    324b:	lea    rdx,[rip+0x3f96]        # 71e8 <_IO_stdin_used@@Base+0xb28>
    3252:	cmovne rax,rdx
    3256:	add    rsp,0x8
    325a:	pop    rbx
    325b:	pop    rbp
    325c:	ret    
    325d:	nop    DWORD PTR [rax]
    3260:	movzx  edx,BYTE PTR [rax+0x1]
    3264:	and    edx,0xffffffdf
    3267:	cmp    dl,0x54
    326a:	jne    31f0 <__cxa_finalize@plt+0x1420>
    326c:	movzx  edx,BYTE PTR [rax+0x2]
    3270:	and    edx,0xffffffdf
    3273:	cmp    dl,0x46
    3276:	jne    31f0 <__cxa_finalize@plt+0x1420>
    327c:	cmp    BYTE PTR [rax+0x3],0x2d
    3280:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3286:	cmp    BYTE PTR [rax+0x4],0x38
    328a:	jne    31f0 <__cxa_finalize@plt+0x1420>
    3290:	cmp    BYTE PTR [rax+0x5],0x0
    3294:	jne    31f0 <__cxa_finalize@plt+0x1420>
    329a:	cmp    BYTE PTR [rbp+0x0],0x60
    329e:	lea    rax,[rip+0x3f37]        # 71dc <_IO_stdin_used@@Base+0xb1c>
    32a5:	lea    rdx,[rip+0x3f34]        # 71e0 <_IO_stdin_used@@Base+0xb20>
    32ac:	cmovne rax,rdx
    32b0:	add    rsp,0x8
    32b4:	pop    rbx
    32b5:	pop    rbp
    32b6:	ret    
    32b7:	nop    WORD PTR [rax+rax*1+0x0]
    32c0:	push   r15
    32c2:	push   r14
    32c4:	mov    r15d,r8d
    32c7:	push   r13
    32c9:	push   r12
    32cb:	mov    r14,rdi
    32ce:	push   rbp
    32cf:	push   rbx
    32d0:	mov    ebx,r9d
    32d3:	mov    r13,rsi
    32d6:	mov    rbp,rcx
    32d9:	and    ebx,0x2
    32dc:	sub    rsp,0xb8
    32e3:	mov    rax,QWORD PTR [rsp+0xf0]
    32eb:	mov    QWORD PTR [rsp+0x10],rdx
    32f0:	mov    DWORD PTR [rsp+0x8],r8d
    32f5:	mov    DWORD PTR [rsp+0x78],r9d
    32fa:	mov    QWORD PTR [rsp+0x20],rax
    32ff:	mov    rax,QWORD PTR [rsp+0xf8]
    3307:	mov    QWORD PTR [rsp+0x68],rax
    330c:	mov    rax,QWORD PTR [rsp+0x100]
    3314:	mov    QWORD PTR [rsp+0x60],rax
    3319:	mov    rax,QWORD PTR fs:0x28
    3322:	mov    QWORD PTR [rsp+0xa8],rax
    332a:	xor    eax,eax
    332c:	call   1b20 <__ctype_get_mb_cur_max@plt>
    3331:	cmp    r15d,0xa
    3335:	mov    QWORD PTR [rsp+0x58],rax
    333a:	ja     44ef <__cxa_finalize@plt+0x271f>
    3340:	lea    rcx,[rip+0x3ef9]        # 7240 <_IO_stdin_used@@Base+0xb80>
    3347:	mov    edx,r15d
    334a:	movsxd rax,DWORD PTR [rcx+rdx*4]
    334e:	add    rax,rcx
    3351:	jmp    rax
    3353:	mov    BYTE PTR [rsp+0xe],0x1
    3358:	mov    BYTE PTR [rsp+0x7c],0x0
    335d:	xor    r12d,r12d
    3360:	mov    QWORD PTR [rsp+0x50],0x0
    3369:	mov    BYTE PTR [rsp+0xf],0x1
    336e:	mov    BYTE PTR [rsp+0xd],0x0
    3373:	lea    rax,[rip+0x3e73]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    337a:	mov    QWORD PTR [rsp+0x18],0x1
    3383:	xor    r15d,r15d
    3386:	mov    DWORD PTR [rsp+0x8],0x2
    338e:	mov    QWORD PTR [rsp+0x48],rax
    3393:	xor    r11d,r11d
    3396:	mov    rax,rbp
    3399:	mov    r8d,r12d
    339c:	mov    rbp,r11
    339f:	mov    r11,rax
    33a2:	nop    WORD PTR [rax+rax*1+0x0]
    33a8:	cmp    r11,rbp
    33ab:	setne  r12b
    33af:	cmp    r11,0xffffffffffffffff
    33b3:	jne    33c2 <__cxa_finalize@plt+0x15f2>
    33b5:	mov    rax,QWORD PTR [rsp+0x10]
    33ba:	cmp    BYTE PTR [rax+rbp*1],0x0
    33be:	setne  r12b
    33c2:	test   r12b,r12b
    33c5:	je     3a20 <__cxa_finalize@plt+0x1c50>
    33cb:	cmp    DWORD PTR [rsp+0x8],0x2
    33d0:	mov    rdi,QWORD PTR [rsp+0x10]
    33d5:	lea    r9,[rdi+rbp*1]
    33d9:	setne  al
    33dc:	and    al,BYTE PTR [rsp+0xd]
    33e0:	mov    r10d,eax
    33e3:	je     3490 <__cxa_finalize@plt+0x16c0>
    33e9:	mov    rax,QWORD PTR [rsp+0x18]
    33ee:	test   rax,rax
    33f1:	je     3820 <__cxa_finalize@plt+0x1a50>
    33f7:	cmp    r11,0xffffffffffffffff
    33fb:	lea    rbx,[rbp+rax*1+0x0]
    3400:	jne    3430 <__cxa_finalize@plt+0x1660>
    3402:	cmp    rax,0x1
    3406:	jbe    3430 <__cxa_finalize@plt+0x1660>
    3408:	mov    BYTE PTR [rsp+0x38],r8b
    340d:	mov    BYTE PTR [rsp+0x30],r10b
    3412:	mov    QWORD PTR [rsp+0x28],r9
    3417:	call   1b30 <strlen@plt>
    341c:	movzx  r8d,BYTE PTR [rsp+0x38]
    3422:	movzx  r10d,BYTE PTR [rsp+0x30]
    3428:	mov    r11,rax
    342b:	mov    r9,QWORD PTR [rsp+0x28]
    3430:	cmp    rbx,r11
    3433:	mov    BYTE PTR [rsp+0x28],r10b
    3438:	ja     39f0 <__cxa_finalize@plt+0x1c20>
    343e:	mov    rdx,QWORD PTR [rsp+0x18]
    3443:	mov    rsi,QWORD PTR [rsp+0x48]
    3448:	mov    rdi,r9
    344b:	mov    QWORD PTR [rsp+0x40],r11
    3450:	mov    BYTE PTR [rsp+0x38],r8b
    3455:	mov    QWORD PTR [rsp+0x30],r9
    345a:	call   1c00 <memcmp@plt>
    345f:	test   eax,eax
    3461:	mov    r9,QWORD PTR [rsp+0x30]
    3466:	movzx  r8d,BYTE PTR [rsp+0x38]
    346c:	mov    r11,QWORD PTR [rsp+0x40]
    3471:	jne    39f0 <__cxa_finalize@plt+0x1c20>
    3477:	cmp    BYTE PTR [rsp+0xf],0x0
    347c:	movzx  r10d,BYTE PTR [rsp+0x28]
    3482:	jne    4405 <__cxa_finalize@plt+0x2635>
    3488:	nop    DWORD PTR [rax+rax*1+0x0]
    3490:	movzx  ebx,BYTE PTR [r9]
    3494:	cmp    bl,0x7e
    3497:	ja     37b8 <__cxa_finalize@plt+0x19e8>
    349d:	lea    rcx,[rip+0x3dc8]        # 726c <_IO_stdin_used@@Base+0xbac>
    34a4:	movzx  edx,bl
    34a7:	movsxd rax,DWORD PTR [rcx+rdx*4]
    34ab:	add    rax,rcx
    34ae:	jmp    rax
    34b0:	xor    r10d,r10d
    34b3:	cmp    r11,0x1
    34b7:	setne  al
    34ba:	cmp    r11,0xffffffffffffffff
    34be:	jne    34cc <__cxa_finalize@plt+0x16fc>
    34c0:	mov    rax,QWORD PTR [rsp+0x10]
    34c5:	cmp    BYTE PTR [rax+0x1],0x0
    34c9:	setne  al
    34cc:	cmp    DWORD PTR [rsp+0x8],0x2
    34d1:	sete   dl
    34d4:	test   al,al
    34d6:	je     3728 <__cxa_finalize@plt+0x1958>
    34dc:	xor    r12d,r12d
    34df:	xor    eax,eax
    34e1:	nop    DWORD PTR [rax+0x0]
    34e8:	cmp    BYTE PTR [rsp+0xd],0x1
    34ed:	jne    3602 <__cxa_finalize@plt+0x1832>
    34f3:	test   dl,dl
    34f5:	jne    3602 <__cxa_finalize@plt+0x1832>
    34fb:	mov    rsi,QWORD PTR [rsp+0x20]
    3500:	test   rsi,rsi
    3503:	je     3519 <__cxa_finalize@plt+0x1749>
    3505:	mov    edx,ebx
    3507:	shr    dl,0x5
    350a:	movzx  edx,dl
    350d:	mov    edx,DWORD PTR [rsi+rdx*4]
    3510:	bt     edx,ebx
    3513:	jb     3663 <__cxa_finalize@plt+0x1893>
    3519:	test   r10b,r10b
    351c:	jne    3663 <__cxa_finalize@plt+0x1893>
    3522:	xor    eax,0x1
    3525:	add    rbp,0x1
    3529:	and    eax,r8d
    352c:	test   al,al
    352e:	je     3550 <__cxa_finalize@plt+0x1780>
    3530:	cmp    r13,r15
    3533:	jbe    353a <__cxa_finalize@plt+0x176a>
    3535:	mov    BYTE PTR [r14+r15*1],0x27
    353a:	lea    rax,[r15+0x1]
    353e:	cmp    r13,rax
    3541:	jbe    3549 <__cxa_finalize@plt+0x1779>
    3543:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    3549:	add    r15,0x2
    354d:	xor    r8d,r8d
    3550:	cmp    r15,r13
    3553:	jae    3559 <__cxa_finalize@plt+0x1789>
    3555:	mov    BYTE PTR [r14+r15*1],bl
    3559:	movzx  edi,BYTE PTR [rsp+0xe]
    355e:	add    r15,0x1
    3562:	mov    eax,0x0
    3567:	test   r12b,r12b
    356a:	cmove  edi,eax
    356d:	mov    BYTE PTR [rsp+0xe],dil
    3572:	jmp    33a8 <__cxa_finalize@plt+0x15d8>
    3577:	nop    WORD PTR [rax+rax*1+0x0]
    3580:	xor    r10d,r10d
    3583:	mov    eax,DWORD PTR [rsp+0x8]
    3587:	cmp    eax,0x2
    358a:	je     3b48 <__cxa_finalize@plt+0x1d78>
    3590:	cmp    eax,0x5
    3593:	je     3b08 <__cxa_finalize@plt+0x1d38>
    3599:	cmp    eax,0x2
    359c:	mov    ebx,0x3f
    35a1:	sete   dl
    35a4:	xor    r12d,r12d
    35a7:	xor    eax,eax
    35a9:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    35ae:	xchg   ax,ax
    35b0:	xor    r10d,r10d
    35b3:	cmp    DWORD PTR [rsp+0x8],0x2
    35b8:	je     3ac0 <__cxa_finalize@plt+0x1cf0>
    35be:	mov    BYTE PTR [rsp+0x7c],r12b
    35c3:	xor    edx,edx
    35c5:	xor    eax,eax
    35c7:	mov    ebx,0x27
    35cc:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    35d1:	nop    DWORD PTR [rax+0x0]
    35d8:	mov    edx,0x9
    35dd:	mov    ebx,0x74
    35e2:	cmp    DWORD PTR [rsp+0x8],0x2
    35e7:	sete   al
    35ea:	and    al,BYTE PTR [rsp+0xf]
    35ee:	jne    373e <__cxa_finalize@plt+0x196e>
    35f4:	cmp    BYTE PTR [rsp+0xd],0x0
    35f9:	jne    3660 <__cxa_finalize@plt+0x1890>
    35fb:	mov    ebx,edx
    35fd:	xor    r12d,r12d
    3600:	xor    eax,eax
    3602:	cmp    BYTE PTR [rsp+0xf],0x0
    3607:	jne    34fb <__cxa_finalize@plt+0x172b>
    360d:	jmp    3519 <__cxa_finalize@plt+0x1749>
    3612:	nop    WORD PTR [rax+rax*1+0x0]
    3618:	mov    edx,0x8
    361d:	mov    ebx,0x62
    3622:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    3624:	nop    DWORD PTR [rax+0x0]
    3628:	cmp    DWORD PTR [rsp+0x8],0x2
    362d:	je     3a00 <__cxa_finalize@plt+0x1c30>
    3633:	cmp    BYTE PTR [rsp+0xd],0x0
    3638:	je     3850 <__cxa_finalize@plt+0x1a80>
    363e:	cmp    BYTE PTR [rsp+0xf],0x0
    3643:	je     3850 <__cxa_finalize@plt+0x1a80>
    3649:	cmp    QWORD PTR [rsp+0x18],0x0
    364f:	jne    3a0b <__cxa_finalize@plt+0x1c3b>
    3655:	mov    ebx,0x5c
    365a:	nop    WORD PTR [rax+rax*1+0x0]
    3660:	xor    r12d,r12d
    3663:	cmp    DWORD PTR [rsp+0x8],0x2
    3668:	sete   dl
    366b:	cmp    BYTE PTR [rsp+0xf],0x0
    3670:	mov    eax,edx
    3672:	jne    3ec8 <__cxa_finalize@plt+0x20f8>
    3678:	mov    eax,r8d
    367b:	xor    eax,0x1
    367e:	and    al,dl
    3680:	je     36b1 <__cxa_finalize@plt+0x18e1>
    3682:	cmp    r13,r15
    3685:	jbe    368c <__cxa_finalize@plt+0x18bc>
    3687:	mov    BYTE PTR [r14+r15*1],0x27
    368c:	lea    rdx,[r15+0x1]
    3690:	cmp    r13,rdx
    3693:	jbe    369b <__cxa_finalize@plt+0x18cb>
    3695:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    369b:	lea    rdx,[r15+0x2]
    369f:	cmp    r13,rdx
    36a2:	jbe    36aa <__cxa_finalize@plt+0x18da>
    36a4:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    36aa:	add    r15,0x3
    36ae:	mov    r8d,eax
    36b1:	cmp    r13,r15
    36b4:	jbe    36bb <__cxa_finalize@plt+0x18eb>
    36b6:	mov    BYTE PTR [r14+r15*1],0x5c
    36bb:	add    r15,0x1
    36bf:	add    rbp,0x1
    36c3:	jmp    3550 <__cxa_finalize@plt+0x1780>
    36c8:	nop    DWORD PTR [rax+rax*1+0x0]
    36d0:	cmp    BYTE PTR [rsp+0xd],0x0
    36d5:	jne    38a3 <__cxa_finalize@plt+0x1ad3>
    36db:	xor    edx,edx
    36dd:	test   BYTE PTR [rsp+0x78],0x1
    36e2:	je     35fb <__cxa_finalize@plt+0x182b>
    36e8:	add    rbp,0x1
    36ec:	jmp    33a8 <__cxa_finalize@plt+0x15d8>
    36f1:	nop    DWORD PTR [rax+0x0]
    36f8:	cmp    DWORD PTR [rsp+0x8],0x2
    36fd:	sete   dl
    3700:	xor    eax,eax
    3702:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    3707:	nop    WORD PTR [rax+rax*1+0x0]
    3710:	mov    edx,0x7
    3715:	mov    ebx,0x61
    371a:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    371f:	nop
    3720:	cmp    DWORD PTR [rsp+0x8],0x2
    3725:	sete   dl
    3728:	test   rbp,rbp
    372b:	jne    34dc <__cxa_finalize@plt+0x170c>
    3731:	movzx  eax,BYTE PTR [rsp+0xf]
    3736:	and    al,dl
    3738:	je     34e8 <__cxa_finalize@plt+0x1718>
    373e:	mov    rbp,r11
    3741:	mov    DWORD PTR [rsp+0x8],0x2
    3749:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    374e:	xchg   ax,ax
    3750:	cmp    DWORD PTR [rsp+0x8],0x2
    3755:	sete   dl
    3758:	xor    r12d,r12d
    375b:	jmp    3731 <__cxa_finalize@plt+0x1961>
    375d:	nop    DWORD PTR [rax]
    3760:	cmp    DWORD PTR [rsp+0x8],0x2
    3765:	mov    ebx,0x20
    376a:	sete   dl
    376d:	jmp    3731 <__cxa_finalize@plt+0x1961>
    376f:	nop
    3770:	mov    edx,0xd
    3775:	mov    ebx,0x72
    377a:	jmp    35e2 <__cxa_finalize@plt+0x1812>
    377f:	nop
    3780:	mov    edx,0xc
    3785:	mov    ebx,0x66
    378a:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    378f:	nop
    3790:	mov    edx,0xb
    3795:	mov    ebx,0x76
    379a:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    379f:	nop
    37a0:	mov    edx,0xa
    37a5:	mov    ebx,0x6e
    37aa:	jmp    35e2 <__cxa_finalize@plt+0x1812>
    37af:	nop
    37b0:	xor    r10d,r10d
    37b3:	nop    DWORD PTR [rax+rax*1+0x0]
    37b8:	cmp    QWORD PTR [rsp+0x58],0x1
    37be:	jne    3b68 <__cxa_finalize@plt+0x1d98>
    37c4:	mov    QWORD PTR [rsp+0x38],r11
    37c9:	mov    BYTE PTR [rsp+0x30],r8b
    37ce:	mov    BYTE PTR [rsp+0x28],r10b
    37d3:	call   1dc0 <__ctype_b_loc@plt>
    37d8:	mov    rcx,QWORD PTR [rax]
    37db:	movzx  edx,bl
    37de:	movzx  r10d,BYTE PTR [rsp+0x28]
    37e4:	movzx  r8d,BYTE PTR [rsp+0x30]
    37ea:	mov    r11,QWORD PTR [rsp+0x38]
    37ef:	mov    edi,0x1
    37f4:	movzx  eax,WORD PTR [rcx+rdx*2]
    37f8:	and    ax,0x4000
    37fc:	setne  r12b
    3800:	sete   al
    3803:	and    al,BYTE PTR [rsp+0xd]
    3807:	test   al,al
    3809:	jne    41a1 <__cxa_finalize@plt+0x23d1>
    380f:	cmp    DWORD PTR [rsp+0x8],0x2
    3814:	sete   dl
    3817:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    381c:	nop    DWORD PTR [rax+0x0]
    3820:	movzx  ebx,BYTE PTR [r9]
    3824:	cmp    bl,0x7e
    3827:	ja     37b0 <__cxa_finalize@plt+0x19e0>
    3829:	lea    rcx,[rip+0x3c38]        # 7468 <_IO_stdin_used@@Base+0xda8>
    3830:	movzx  edx,bl
    3833:	movsxd rax,DWORD PTR [rcx+rdx*4]
    3837:	add    rax,rcx
    383a:	jmp    rax
    383c:	nop    DWORD PTR [rax+0x0]
    3840:	xor    r10d,r10d
    3843:	cmp    BYTE PTR [rsp+0xd],0x0
    3848:	jne    363e <__cxa_finalize@plt+0x186e>
    384e:	xchg   ax,ax
    3850:	mov    edx,0x5c
    3855:	mov    ebx,0x5c
    385a:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    385f:	nop
    3860:	mov    edx,0xc
    3865:	xor    r10d,r10d
    3868:	mov    ebx,0x66
    386d:	jmp    35f4 <__cxa_finalize@plt+0x1824>
    3872:	nop    WORD PTR [rax+rax*1+0x0]
    3878:	mov    edx,0xa
    387d:	xor    r10d,r10d
    3880:	mov    ebx,0x6e
    3885:	jmp    35e2 <__cxa_finalize@plt+0x1812>
    388a:	nop    WORD PTR [rax+rax*1+0x0]
    3890:	mov    ebx,0x61
    3895:	jmp    3660 <__cxa_finalize@plt+0x1890>
    389a:	nop    WORD PTR [rax+rax*1+0x0]
    38a0:	xor    r10d,r10d
    38a3:	cmp    DWORD PTR [rsp+0x8],0x2
    38a8:	sete   dl
    38ab:	cmp    BYTE PTR [rsp+0xf],0x0
    38b0:	jne    444a <__cxa_finalize@plt+0x267a>
    38b6:	mov    eax,r8d
    38b9:	mov    rcx,r15
    38bc:	xor    eax,0x1
    38bf:	and    al,dl
    38c1:	je     38f0 <__cxa_finalize@plt+0x1b20>
    38c3:	cmp    r13,r15
    38c6:	jbe    38cd <__cxa_finalize@plt+0x1afd>
    38c8:	mov    BYTE PTR [r14+r15*1],0x27
    38cd:	lea    rcx,[r15+0x1]
    38d1:	cmp    r13,rcx
    38d4:	jbe    38dc <__cxa_finalize@plt+0x1b0c>
    38d6:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    38dc:	lea    rcx,[r15+0x2]
    38e0:	cmp    r13,rcx
    38e3:	ja     3f19 <__cxa_finalize@plt+0x2149>
    38e9:	lea    rcx,[r15+0x3]
    38ed:	mov    r8d,eax
    38f0:	cmp    r13,rcx
    38f3:	jbe    38fa <__cxa_finalize@plt+0x1b2a>
    38f5:	mov    BYTE PTR [r14+rcx*1],0x5c
    38fa:	cmp    DWORD PTR [rsp+0x8],0x2
    38ff:	lea    r15,[rcx+0x1]
    3903:	je     3f09 <__cxa_finalize@plt+0x2139>
    3909:	lea    rax,[rbp+0x1]
    390d:	cmp    rax,r11
    3910:	jae    392b <__cxa_finalize@plt+0x1b5b>
    3912:	mov    rax,QWORD PTR [rsp+0x10]
    3917:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    391c:	mov    BYTE PTR [rsp+0x28],al
    3920:	sub    eax,0x30
    3923:	cmp    al,0x9
    3925:	jbe    4159 <__cxa_finalize@plt+0x2389>
    392b:	mov    eax,r12d
    392e:	mov    ebx,0x30
    3933:	xor    r12d,r12d
    3936:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    393b:	nop    DWORD PTR [rax+rax*1+0x0]
    3940:	cmp    DWORD PTR [rsp+0x8],0x2
    3945:	mov    r12d,r10d
    3948:	sete   dl
    394b:	xor    r10d,r10d
    394e:	xor    eax,eax
    3950:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    3955:	nop    DWORD PTR [rax]
    3958:	cmp    DWORD PTR [rsp+0x8],0x2
    395d:	sete   dl
    3960:	xor    r10d,r10d
    3963:	jmp    3728 <__cxa_finalize@plt+0x1958>
    3968:	nop    DWORD PTR [rax+rax*1+0x0]
    3970:	cmp    DWORD PTR [rsp+0x8],0x2
    3975:	sete   dl
    3978:	xor    r10d,r10d
    397b:	xor    r12d,r12d
    397e:	jmp    3731 <__cxa_finalize@plt+0x1961>
    3983:	nop    DWORD PTR [rax+rax*1+0x0]
    3988:	cmp    DWORD PTR [rsp+0x8],0x2
    398d:	mov    r12d,r10d
    3990:	mov    ebx,0x20
    3995:	sete   dl
    3998:	xor    r10d,r10d
    399b:	jmp    3731 <__cxa_finalize@plt+0x1961>
    39a0:	mov    edx,0xd
    39a5:	xor    r10d,r10d
    39a8:	mov    ebx,0x72
    39ad:	jmp    35e2 <__cxa_finalize@plt+0x1812>
    39b2:	nop    WORD PTR [rax+rax*1+0x0]
    39b8:	mov    ebx,0x76
    39bd:	jmp    3660 <__cxa_finalize@plt+0x1890>
    39c2:	nop    WORD PTR [rax+rax*1+0x0]
    39c8:	mov    edx,0x9
    39cd:	xor    r10d,r10d
    39d0:	mov    ebx,0x74
    39d5:	jmp    35e2 <__cxa_finalize@plt+0x1812>
    39da:	nop    WORD PTR [rax+rax*1+0x0]
    39e0:	mov    ebx,0x62
    39e5:	jmp    3660 <__cxa_finalize@plt+0x1890>
    39ea:	nop    WORD PTR [rax+rax*1+0x0]
    39f0:	xor    r10d,r10d
    39f3:	jmp    3490 <__cxa_finalize@plt+0x16c0>
    39f8:	nop    DWORD PTR [rax+rax*1+0x0]
    3a00:	cmp    BYTE PTR [rsp+0xf],0x0
    3a05:	jne    4370 <__cxa_finalize@plt+0x25a0>
    3a0b:	add    rbp,0x1
    3a0f:	mov    eax,r8d
    3a12:	xor    r12d,r12d
    3a15:	mov    ebx,0x5c
    3a1a:	jmp    352c <__cxa_finalize@plt+0x175c>
    3a1f:	nop
    3a20:	cmp    DWORD PTR [rsp+0x8],0x2
    3a25:	movzx  ebx,BYTE PTR [rsp+0xf]
    3a2a:	mov    r12d,r8d
    3a2d:	mov    rbp,r11
    3a30:	sete   dl
    3a33:	mov    eax,ebx
    3a35:	test   r15,r15
    3a38:	sete   cl
    3a3b:	and    eax,edx
    3a3d:	and    al,cl
    3a3f:	jne    44a6 <__cxa_finalize@plt+0x26d6>
    3a45:	mov    eax,ebx
    3a47:	xor    eax,0x1
    3a4a:	and    dl,al
    3a4c:	je     43bc <__cxa_finalize@plt+0x25ec>
    3a52:	cmp    BYTE PTR [rsp+0x7c],0x0
    3a57:	je     43ba <__cxa_finalize@plt+0x25ea>
    3a5d:	cmp    BYTE PTR [rsp+0xe],0x0
    3a62:	jne    445d <__cxa_finalize@plt+0x268d>
    3a68:	test   r13,r13
    3a6b:	sete   al
    3a6e:	cmp    QWORD PTR [rsp+0x50],0x0
    3a74:	setne  dl
    3a77:	and    al,dl
    3a79:	je     449c <__cxa_finalize@plt+0x26cc>
    3a7f:	mov    r13,QWORD PTR [rsp+0x50]
    3a84:	lea    rbx,[rip+0x3762]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    3a8b:	mov    BYTE PTR [r14],0x27
    3a8f:	mov    DWORD PTR [rsp+0x8],0x2
    3a97:	mov    r15d,0x1
    3a9d:	mov    QWORD PTR [rsp+0x18],0x1
    3aa6:	mov    BYTE PTR [rsp+0xf],0x0
    3aab:	mov    QWORD PTR [rsp+0x48],rbx
    3ab0:	mov    BYTE PTR [rsp+0x7c],al
    3ab4:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    3ab9:	nop    DWORD PTR [rax+0x0]
    3ac0:	cmp    BYTE PTR [rsp+0xf],0x0
    3ac5:	jne    4370 <__cxa_finalize@plt+0x25a0>
    3acb:	test   r13,r13
    3ace:	je     3ed0 <__cxa_finalize@plt+0x2100>
    3ad4:	xor    edx,edx
    3ad6:	cmp    QWORD PTR [rsp+0x50],0x0
    3adc:	jne    3ed0 <__cxa_finalize@plt+0x2100>
    3ae2:	mov    QWORD PTR [rsp+0x50],r13
    3ae7:	add    r15,0x3
    3aeb:	xor    eax,eax
    3aed:	mov    BYTE PTR [rsp+0x7c],r12b
    3af2:	xor    r8d,r8d
    3af5:	mov    r13,rdx
    3af8:	mov    ebx,0x27
    3afd:	jmp    3519 <__cxa_finalize@plt+0x1749>
    3b02:	nop    WORD PTR [rax+rax*1+0x0]
    3b08:	test   BYTE PTR [rsp+0x78],0x4
    3b0d:	je     3b30 <__cxa_finalize@plt+0x1d60>
    3b0f:	lea    rcx,[rbp+0x2]
    3b13:	cmp    rcx,r11
    3b16:	jae    3b30 <__cxa_finalize@plt+0x1d60>
    3b18:	mov    rax,QWORD PTR [rsp+0x10]
    3b1d:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    3b22:	je     42b2 <__cxa_finalize@plt+0x24e2>
    3b28:	nop    DWORD PTR [rax+rax*1+0x0]
    3b30:	xor    edx,edx
    3b32:	xor    r12d,r12d
    3b35:	xor    eax,eax
    3b37:	mov    ebx,0x3f
    3b3c:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    3b41:	nop    DWORD PTR [rax+0x0]
    3b48:	cmp    BYTE PTR [rsp+0xf],0x0
    3b4d:	jne    4370 <__cxa_finalize@plt+0x25a0>
    3b53:	xor    r12d,r12d
    3b56:	xor    eax,eax
    3b58:	mov    ebx,0x3f
    3b5d:	jmp    3519 <__cxa_finalize@plt+0x1749>
    3b62:	nop    WORD PTR [rax+rax*1+0x0]
    3b68:	lea    rax,[rsp+0xa0]
    3b70:	cmp    r11,0xffffffffffffffff
    3b74:	mov    QWORD PTR [rsp+0xa0],0x0
    3b80:	mov    QWORD PTR [rsp+0x28],rax
    3b85:	jne    3bb4 <__cxa_finalize@plt+0x1de4>
    3b87:	mov    rdi,QWORD PTR [rsp+0x10]
    3b8c:	mov    BYTE PTR [rsp+0x40],r8b
    3b91:	mov    BYTE PTR [rsp+0x38],r10b
    3b96:	mov    QWORD PTR [rsp+0x30],r9
    3b9b:	call   1b30 <strlen@plt>
    3ba0:	movzx  r8d,BYTE PTR [rsp+0x40]
    3ba6:	movzx  r10d,BYTE PTR [rsp+0x38]
    3bac:	mov    r11,rax
    3baf:	mov    r9,QWORD PTR [rsp+0x30]
    3bb4:	lea    rax,[rsp+0x9c]
    3bbc:	xor    ecx,ecx
    3bbe:	mov    BYTE PTR [rsp+0x7e],bl
    3bc2:	mov    BYTE PTR [rsp+0x7d],r8b
    3bc7:	mov    rbx,rcx
    3bca:	mov    QWORD PTR [rsp+0x88],r9
    3bd2:	mov    QWORD PTR [rsp+0x38],rax
    3bd7:	mov    BYTE PTR [rsp+0x7f],r10b
    3bdc:	mov    QWORD PTR [rsp+0x80],r15
    3be4:	mov    QWORD PTR [rsp+0x40],r14
    3be9:	mov    QWORD PTR [rsp+0x70],r13
    3bee:	mov    QWORD PTR [rsp+0x30],r11
    3bf3:	mov    rax,QWORD PTR [rsp+0x10]
    3bf8:	lea    r14,[rbp+rbx*1+0x0]
    3bfd:	mov    rdx,QWORD PTR [rsp+0x30]
    3c02:	mov    rcx,QWORD PTR [rsp+0x28]
    3c07:	mov    rdi,QWORD PTR [rsp+0x38]
    3c0c:	lea    r13,[rax+r14*1]
    3c10:	sub    rdx,r14
    3c13:	mov    rsi,r13
    3c16:	call   6030 <__cxa_finalize@plt+0x4260>
    3c1b:	test   rax,rax
    3c1e:	mov    r15,rax
    3c21:	je     3c71 <__cxa_finalize@plt+0x1ea1>
    3c23:	cmp    rax,0xffffffffffffffff
    3c27:	je     4245 <__cxa_finalize@plt+0x2475>
    3c2d:	cmp    rax,0xfffffffffffffffe
    3c31:	je     41d1 <__cxa_finalize@plt+0x2401>
    3c37:	cmp    DWORD PTR [rsp+0x8],0x2
    3c3c:	sete   al
    3c3f:	and    al,BYTE PTR [rsp+0xf]
    3c43:	jne    3de0 <__cxa_finalize@plt+0x2010>
    3c49:	mov    edi,DWORD PTR [rsp+0x9c]
    3c50:	call   1db0 <iswprint@plt>
    3c55:	mov    rdi,QWORD PTR [rsp+0x28]
    3c5a:	test   eax,eax
    3c5c:	mov    eax,0x0
    3c61:	cmove  r12d,eax
    3c65:	add    rbx,r15
    3c68:	call   1da0 <mbsinit@plt>
    3c6d:	test   eax,eax
    3c6f:	je     3bf3 <__cxa_finalize@plt+0x1e23>
    3c71:	mov    edx,r12d
    3c74:	mov    rdi,rbx
    3c77:	movzx  r8d,BYTE PTR [rsp+0x7d]
    3c7d:	xor    edx,0x1
    3c80:	movzx  ebx,BYTE PTR [rsp+0x7e]
    3c85:	movzx  r10d,BYTE PTR [rsp+0x7f]
    3c8b:	and    dl,BYTE PTR [rsp+0xd]
    3c8f:	mov    r15,QWORD PTR [rsp+0x80]
    3c97:	mov    r14,QWORD PTR [rsp+0x40]
    3c9c:	mov    r13,QWORD PTR [rsp+0x70]
    3ca1:	mov    r11,QWORD PTR [rsp+0x30]
    3ca6:	cmp    rdi,0x1
    3caa:	jbe    42ab <__cxa_finalize@plt+0x24db>
    3cb0:	mov    rcx,rdi
    3cb3:	xor    esi,esi
    3cb5:	movzx  r9d,BYTE PTR [rsp+0xf]
    3cbb:	add    rcx,rbp
    3cbe:	mov    rdi,QWORD PTR [rsp+0x10]
    3cc3:	jmp    3d7e <__cxa_finalize@plt+0x1fae>
    3cc8:	nop    DWORD PTR [rax+rax*1+0x0]
    3cd0:	cmp    DWORD PTR [rsp+0x8],0x2
    3cd5:	sete   al
    3cd8:	test   r9b,r9b
    3cdb:	jne    4190 <__cxa_finalize@plt+0x23c0>
    3ce1:	mov    esi,r8d
    3ce4:	xor    esi,0x1
    3ce7:	and    al,sil
    3cea:	je     3d1b <__cxa_finalize@plt+0x1f4b>
    3cec:	cmp    r13,r15
    3cef:	jbe    3cf6 <__cxa_finalize@plt+0x1f26>
    3cf1:	mov    BYTE PTR [r14+r15*1],0x27
    3cf6:	lea    rsi,[r15+0x1]
    3cfa:	cmp    r13,rsi
    3cfd:	jbe    3d05 <__cxa_finalize@plt+0x1f35>
    3cff:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    3d05:	lea    rsi,[r15+0x2]
    3d09:	cmp    r13,rsi
    3d0c:	jbe    3d14 <__cxa_finalize@plt+0x1f44>
    3d0e:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3d14:	add    r15,0x3
    3d18:	mov    r8d,eax
    3d1b:	cmp    r13,r15
    3d1e:	jbe    3d25 <__cxa_finalize@plt+0x1f55>
    3d20:	mov    BYTE PTR [r14+r15*1],0x5c
    3d25:	lea    rax,[r15+0x1]
    3d29:	cmp    r13,rax
    3d2c:	jbe    3d3b <__cxa_finalize@plt+0x1f6b>
    3d2e:	mov    eax,ebx
    3d30:	shr    al,0x6
    3d33:	add    eax,0x30
    3d36:	mov    BYTE PTR [r14+r15*1+0x1],al
    3d3b:	lea    rax,[r15+0x2]
    3d3f:	cmp    r13,rax
    3d42:	jbe    3d54 <__cxa_finalize@plt+0x1f84>
    3d44:	mov    eax,ebx
    3d46:	shr    al,0x3
    3d49:	and    eax,0x7
    3d4c:	add    eax,0x30
    3d4f:	mov    BYTE PTR [r14+r15*1+0x2],al
    3d54:	and    ebx,0x7
    3d57:	add    rbp,0x1
    3d5b:	add    r15,0x3
    3d5f:	add    ebx,0x30
    3d62:	cmp    rbp,rcx
    3d65:	jae    3550 <__cxa_finalize@plt+0x1780>
    3d6b:	mov    esi,edx
    3d6d:	cmp    r13,r15
    3d70:	jbe    3d76 <__cxa_finalize@plt+0x1fa6>
    3d72:	mov    BYTE PTR [r14+r15*1],bl
    3d76:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    3d7a:	add    r15,0x1
    3d7e:	test   dl,dl
    3d80:	jne    3cd0 <__cxa_finalize@plt+0x1f00>
    3d86:	mov    eax,esi
    3d88:	xor    eax,0x1
    3d8b:	and    eax,r8d
    3d8e:	test   r10b,r10b
    3d91:	je     3da1 <__cxa_finalize@plt+0x1fd1>
    3d93:	cmp    r13,r15
    3d96:	jbe    3d9d <__cxa_finalize@plt+0x1fcd>
    3d98:	mov    BYTE PTR [r14+r15*1],0x5c
    3d9d:	add    r15,0x1
    3da1:	add    rbp,0x1
    3da5:	cmp    rbp,rcx
    3da8:	jae    352c <__cxa_finalize@plt+0x175c>
    3dae:	test   al,al
    3db0:	je     41ae <__cxa_finalize@plt+0x23de>
    3db6:	cmp    r13,r15
    3db9:	jbe    3dc0 <__cxa_finalize@plt+0x1ff0>
    3dbb:	mov    BYTE PTR [r14+r15*1],0x27
    3dc0:	lea    rax,[r15+0x1]
    3dc4:	cmp    r13,rax
    3dc7:	jbe    3dcf <__cxa_finalize@plt+0x1fff>
    3dc9:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    3dcf:	add    r15,0x2
    3dd3:	xor    r10d,r10d
    3dd6:	xor    r8d,r8d
    3dd9:	jmp    3d6d <__cxa_finalize@plt+0x1f9d>
    3ddb:	nop    DWORD PTR [rax+rax*1+0x0]
    3de0:	cmp    r15,0x1
    3de4:	je     3c49 <__cxa_finalize@plt+0x1e79>
    3dea:	mov    rdi,QWORD PTR [rsp+0x10]
    3def:	lea    rcx,[rdi+r15*1]
    3df3:	lea    rdx,[rdi+r14*1+0x1]
    3df8:	lea    r8,[rcx+r14*1]
    3dfc:	jmp    3e0d <__cxa_finalize@plt+0x203d>
    3dfe:	xchg   ax,ax
    3e00:	add    rdx,0x1
    3e04:	cmp    r8,rdx
    3e07:	je     3c49 <__cxa_finalize@plt+0x1e79>
    3e0d:	movzx  ecx,BYTE PTR [rdx]
    3e10:	sub    ecx,0x5b
    3e13:	cmp    cl,0x21
    3e16:	ja     3e00 <__cxa_finalize@plt+0x2030>
    3e18:	mov    esi,0x1
    3e1d:	shl    rsi,cl
    3e20:	mov    rcx,rsi
    3e23:	movabs rsi,0x20000002b
    3e2d:	test   rcx,rsi
    3e30:	je     3e00 <__cxa_finalize@plt+0x2030>
    3e32:	mov    r14,QWORD PTR [rsp+0x40]
    3e37:	mov    r13,QWORD PTR [rsp+0x70]
    3e3c:	mov    rbp,QWORD PTR [rsp+0x30]
    3e41:	mov    DWORD PTR [rsp+0x8],0x2
    3e49:	cmp    BYTE PTR [rsp+0xd],0x0
    3e4e:	je     3e60 <__cxa_finalize@plt+0x2090>
    3e50:	test   al,al
    3e52:	mov    eax,0x4
    3e57:	cmove  eax,DWORD PTR [rsp+0x8]
    3e5c:	mov    DWORD PTR [rsp+0x8],eax
    3e60:	sub    rsp,0x8
    3e64:	mov    rcx,rbp
    3e67:	mov    rsi,r13
    3e6a:	push   QWORD PTR [rsp+0x68]
    3e6e:	push   QWORD PTR [rsp+0x78]
    3e72:	mov    rdi,r14
    3e75:	push   0x0
    3e77:	mov    r9d,DWORD PTR [rsp+0x98]
    3e7f:	mov    r8d,DWORD PTR [rsp+0x28]
    3e84:	mov    rdx,QWORD PTR [rsp+0x30]
    3e89:	and    r9d,0xfffffffd
    3e8d:	call   32c0 <__cxa_finalize@plt+0x14f0>
    3e92:	add    rsp,0x20
    3e96:	mov    r15,rax
    3e99:	mov    rbx,QWORD PTR [rsp+0xa8]
    3ea1:	xor    rbx,QWORD PTR fs:0x28
    3eaa:	mov    rax,r15
    3ead:	jne    44b3 <__cxa_finalize@plt+0x26e3>
    3eb3:	add    rsp,0xb8
    3eba:	pop    rbx
    3ebb:	pop    rbp
    3ebc:	pop    r12
    3ebe:	pop    r13
    3ec0:	pop    r14
    3ec2:	pop    r15
    3ec4:	ret    
    3ec5:	nop    DWORD PTR [rax]
    3ec8:	mov    rbp,r11
    3ecb:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    3ed0:	cmp    r13,r15
    3ed3:	jbe    3eda <__cxa_finalize@plt+0x210a>
    3ed5:	mov    BYTE PTR [r14+r15*1],0x27
    3eda:	lea    rax,[r15+0x1]
    3ede:	cmp    r13,rax
    3ee1:	jbe    3ee9 <__cxa_finalize@plt+0x2119>
    3ee3:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    3ee9:	lea    rax,[r15+0x2]
    3eed:	cmp    r13,rax
    3ef0:	jbe    44e2 <__cxa_finalize@plt+0x2712>
    3ef6:	mov    rdx,r13
    3ef9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3eff:	mov    r13,QWORD PTR [rsp+0x50]
    3f04:	jmp    3ae2 <__cxa_finalize@plt+0x1d12>
    3f09:	mov    eax,r12d
    3f0c:	mov    ebx,0x30
    3f11:	xor    r12d,r12d
    3f14:	jmp    3519 <__cxa_finalize@plt+0x1749>
    3f19:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3f1f:	jmp    38e9 <__cxa_finalize@plt+0x1b19>
    3f24:	test   ebx,ebx
    3f26:	jne    3353 <__cxa_finalize@plt+0x1583>
    3f2c:	mov    BYTE PTR [rsp+0xd],0x1
    3f31:	test   r13,r13
    3f34:	jne    44ca <__cxa_finalize@plt+0x26fa>
    3f3a:	lea    rax,[rip+0x32ac]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    3f41:	mov    QWORD PTR [rsp+0x50],0x0
    3f4a:	mov    BYTE PTR [rsp+0xe],0x1
    3f4f:	mov    BYTE PTR [rsp+0x7c],0x0
    3f54:	xor    r12d,r12d
    3f57:	mov    BYTE PTR [rsp+0xf],0x0
    3f5c:	mov    QWORD PTR [rsp+0x18],0x1
    3f65:	mov    QWORD PTR [rsp+0x48],rax
    3f6a:	mov    r15d,0x1
    3f70:	mov    DWORD PTR [rsp+0x8],0x2
    3f78:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    3f7d:	nop    DWORD PTR [rax]
    3f80:	test   ebx,ebx
    3f82:	jne    437d <__cxa_finalize@plt+0x25ad>
    3f88:	test   r13,r13
    3f8b:	je     41b6 <__cxa_finalize@plt+0x23e6>
    3f91:	mov    BYTE PTR [r14],0x22
    3f95:	mov    BYTE PTR [rsp+0xe],0x1
    3f9a:	xor    r12d,r12d
    3f9d:	mov    BYTE PTR [rsp+0x7c],0x0
    3fa2:	mov    QWORD PTR [rsp+0x50],0x0
    3fab:	lea    rax,[rip+0x3239]        # 71eb <_IO_stdin_used@@Base+0xb2b>
    3fb2:	mov    BYTE PTR [rsp+0xf],0x0
    3fb7:	mov    BYTE PTR [rsp+0xd],0x1
    3fbc:	mov    QWORD PTR [rsp+0x18],0x1
    3fc5:	mov    r15d,0x1
    3fcb:	mov    QWORD PTR [rsp+0x48],rax
    3fd0:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    3fd5:	lea    rax,[rip+0x320f]        # 71eb <_IO_stdin_used@@Base+0xb2b>
    3fdc:	mov    BYTE PTR [rsp+0xe],0x1
    3fe1:	mov    BYTE PTR [rsp+0x7c],0x0
    3fe6:	xor    r12d,r12d
    3fe9:	mov    QWORD PTR [rsp+0x50],0x0
    3ff2:	mov    BYTE PTR [rsp+0xf],0x1
    3ff7:	mov    BYTE PTR [rsp+0xd],0x1
    3ffc:	mov    QWORD PTR [rsp+0x18],0x1
    4005:	xor    r15d,r15d
    4008:	mov    QWORD PTR [rsp+0x48],rax
    400d:	mov    DWORD PTR [rsp+0x8],0x5
    4015:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    401a:	mov    BYTE PTR [rsp+0xe],0x1
    401f:	mov    BYTE PTR [rsp+0x7c],0x0
    4024:	xor    r12d,r12d
    4027:	mov    QWORD PTR [rsp+0x50],0x0
    4030:	mov    BYTE PTR [rsp+0xf],0x0
    4035:	xor    r15d,r15d
    4038:	mov    BYTE PTR [rsp+0xd],0x1
    403d:	mov    QWORD PTR [rsp+0x18],0x0
    4046:	mov    QWORD PTR [rsp+0x48],0x0
    404f:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    4054:	cmp    DWORD PTR [rsp+0x8],0xa
    4059:	je     40b1 <__cxa_finalize@plt+0x22e1>
    405b:	lea    rsi,[rip+0x318d]        # 71ef <_IO_stdin_used@@Base+0xb2f>
    4062:	xor    edi,edi
    4064:	mov    edx,0x5
    4069:	call   1b10 <dcgettext@plt>
    406e:	mov    rcx,rax
    4071:	mov    QWORD PTR [rsp+0x68],rax
    4076:	lea    rax,[rip+0x3172]        # 71ef <_IO_stdin_used@@Base+0xb2f>
    407d:	cmp    rcx,rax
    4080:	je     441e <__cxa_finalize@plt+0x264e>
    4086:	lea    rsi,[rip+0x3160]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    408d:	xor    edi,edi
    408f:	mov    edx,0x5
    4094:	call   1b10 <dcgettext@plt>
    4099:	mov    rcx,rax
    409c:	mov    QWORD PTR [rsp+0x60],rax
    40a1:	lea    rax,[rip+0x3145]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    40a8:	cmp    rcx,rax
    40ab:	je     4434 <__cxa_finalize@plt+0x2664>
    40b1:	xor    r15d,r15d
    40b4:	test   ebx,ebx
    40b6:	je     427d <__cxa_finalize@plt+0x24ad>
    40bc:	test   ebx,ebx
    40be:	mov    rbx,QWORD PTR [rsp+0x60]
    40c3:	setne  BYTE PTR [rsp+0xf]
    40c8:	xor    r12d,r12d
    40cb:	mov    rdi,rbx
    40ce:	call   1b30 <strlen@plt>
    40d3:	mov    QWORD PTR [rsp+0x48],rbx
    40d8:	mov    QWORD PTR [rsp+0x18],rax
    40dd:	mov    BYTE PTR [rsp+0xe],0x1
    40e2:	mov    BYTE PTR [rsp+0x7c],0x0
    40e7:	mov    QWORD PTR [rsp+0x50],0x0
    40f0:	mov    BYTE PTR [rsp+0xd],0x1
    40f5:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    40fa:	mov    BYTE PTR [rsp+0xe],0x1
    40ff:	mov    BYTE PTR [rsp+0x7c],0x0
    4104:	xor    r12d,r12d
    4107:	mov    QWORD PTR [rsp+0x50],0x0
    4110:	mov    BYTE PTR [rsp+0xf],0x0
    4115:	xor    r15d,r15d
    4118:	mov    BYTE PTR [rsp+0xd],0x0
    411d:	mov    QWORD PTR [rsp+0x18],0x0
    4126:	mov    QWORD PTR [rsp+0x48],0x0
    412f:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    4134:	mov    BYTE PTR [rsp+0xe],0x1
    4139:	mov    BYTE PTR [rsp+0x7c],0x0
    413e:	xor    r12d,r12d
    4141:	mov    QWORD PTR [rsp+0x50],0x0
    414a:	mov    BYTE PTR [rsp+0xf],0x1
    414f:	mov    BYTE PTR [rsp+0xd],0x1
    4154:	jmp    3373 <__cxa_finalize@plt+0x15a3>
    4159:	cmp    r13,r15
    415c:	jbe    4163 <__cxa_finalize@plt+0x2393>
    415e:	mov    BYTE PTR [r14+r15*1],0x30
    4163:	lea    rax,[rcx+0x2]
    4167:	cmp    r13,rax
    416a:	jbe    4172 <__cxa_finalize@plt+0x23a2>
    416c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    4172:	mov    eax,r12d
    4175:	lea    r15,[rcx+0x3]
    4179:	xor    r12d,r12d
    417c:	mov    ebx,0x30
    4181:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    4186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4190:	movzx  ebx,BYTE PTR [rsp+0xf]
    4195:	mov    rbp,r11
    4198:	mov    BYTE PTR [rsp+0xd],bl
    419c:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    41a1:	movzx  edx,BYTE PTR [rsp+0xd]
    41a6:	xor    r12d,r12d
    41a9:	jmp    3cb0 <__cxa_finalize@plt+0x1ee0>
    41ae:	xor    r10d,r10d
    41b1:	jmp    3d6d <__cxa_finalize@plt+0x1f9d>
    41b6:	mov    QWORD PTR [rsp+0x50],0x0
    41bf:	mov    BYTE PTR [rsp+0xe],0x1
    41c4:	xor    r12d,r12d
    41c7:	mov    BYTE PTR [rsp+0x7c],0x0
    41cc:	jmp    3fab <__cxa_finalize@plt+0x21db>
    41d1:	mov    r11,QWORD PTR [rsp+0x30]
    41d6:	mov    rsi,r14
    41d9:	mov    rcx,r13
    41dc:	mov    rax,rbx
    41df:	mov    rdi,rbx
    41e2:	movzx  r8d,BYTE PTR [rsp+0x7d]
    41e8:	movzx  ebx,BYTE PTR [rsp+0x7e]
    41ed:	mov    r9,QWORD PTR [rsp+0x88]
    41f5:	cmp    rsi,r11
    41f8:	movzx  r10d,BYTE PTR [rsp+0x7f]
    41fe:	mov    r15,QWORD PTR [rsp+0x80]
    4206:	mov    r14,QWORD PTR [rsp+0x40]
    420b:	mov    r13,QWORD PTR [rsp+0x70]
    4210:	jae    4238 <__cxa_finalize@plt+0x2468>
    4212:	cmp    BYTE PTR [rcx],0x0
    4215:	jne    4227 <__cxa_finalize@plt+0x2457>
    4217:	jmp    4238 <__cxa_finalize@plt+0x2468>
    4219:	nop    DWORD PTR [rax+0x0]
    4220:	cmp    BYTE PTR [r9+rax*1],0x0
    4225:	je     4235 <__cxa_finalize@plt+0x2465>
    4227:	add    rax,0x1
    422b:	lea    rdx,[rbp+rax*1+0x0]
    4230:	cmp    r11,rdx
    4233:	ja     4220 <__cxa_finalize@plt+0x2450>
    4235:	mov    rdi,rax
    4238:	movzx  edx,BYTE PTR [rsp+0xd]
    423d:	xor    r12d,r12d
    4240:	jmp    3ca6 <__cxa_finalize@plt+0x1ed6>
    4245:	mov    rdi,rbx
    4248:	movzx  r8d,BYTE PTR [rsp+0x7d]
    424e:	movzx  ebx,BYTE PTR [rsp+0x7e]
    4253:	movzx  r10d,BYTE PTR [rsp+0x7f]
    4259:	mov    r15,QWORD PTR [rsp+0x80]
    4261:	xor    r12d,r12d
    4264:	mov    r14,QWORD PTR [rsp+0x40]
    4269:	mov    r13,QWORD PTR [rsp+0x70]
    426e:	mov    r11,QWORD PTR [rsp+0x30]
    4273:	movzx  edx,BYTE PTR [rsp+0xd]
    4278:	jmp    3ca6 <__cxa_finalize@plt+0x1ed6>
    427d:	mov    rdx,QWORD PTR [rsp+0x68]
    4282:	movzx  eax,BYTE PTR [rdx]
    4285:	test   al,al
    4287:	je     40bc <__cxa_finalize@plt+0x22ec>
    428d:	nop    DWORD PTR [rax]
    4290:	cmp    r13,r15
    4293:	jbe    4299 <__cxa_finalize@plt+0x24c9>
    4295:	mov    BYTE PTR [r14+r15*1],al
    4299:	add    r15,0x1
    429d:	movzx  eax,BYTE PTR [rdx+r15*1]
    42a2:	test   al,al
    42a4:	jne    4290 <__cxa_finalize@plt+0x24c0>
    42a6:	jmp    40bc <__cxa_finalize@plt+0x22ec>
    42ab:	mov    eax,edx
    42ad:	jmp    3807 <__cxa_finalize@plt+0x1a37>
    42b2:	movzx  ebx,BYTE PTR [rax+rcx*1]
    42b6:	cmp    bl,0x3e
    42b9:	ja     3b30 <__cxa_finalize@plt+0x1d60>
    42bf:	movabs rax,0x7000a38200000000
    42c9:	bt     rax,rbx
    42cd:	jae    3b30 <__cxa_finalize@plt+0x1d60>
    42d3:	cmp    BYTE PTR [rsp+0xf],0x0
    42d8:	jne    44c2 <__cxa_finalize@plt+0x26f2>
    42de:	cmp    r13,r15
    42e1:	jbe    42e8 <__cxa_finalize@plt+0x2518>
    42e3:	mov    BYTE PTR [r14+r15*1],0x3f
    42e8:	lea    rax,[r15+0x1]
    42ec:	cmp    r13,rax
    42ef:	jbe    42f7 <__cxa_finalize@plt+0x2527>
    42f1:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    42f7:	lea    rax,[r15+0x2]
    42fb:	cmp    r13,rax
    42fe:	jbe    4306 <__cxa_finalize@plt+0x2536>
    4300:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    4306:	lea    rax,[r15+0x3]
    430a:	cmp    r13,rax
    430d:	jbe    4315 <__cxa_finalize@plt+0x2545>
    430f:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    4315:	add    r15,0x4
    4319:	xor    edx,edx
    431b:	xor    r12d,r12d
    431e:	xor    eax,eax
    4320:	mov    rbp,rcx
    4323:	jmp    34e8 <__cxa_finalize@plt+0x1718>
    4328:	test   ebx,ebx
    432a:	je     44b8 <__cxa_finalize@plt+0x26e8>
    4330:	lea    rax,[rip+0x2eb6]        # 71ed <_IO_stdin_used@@Base+0xb2d>
    4337:	mov    BYTE PTR [rsp+0xe],0x1
    433c:	mov    BYTE PTR [rsp+0x7c],0x0
    4341:	xor    r12d,r12d
    4344:	mov    QWORD PTR [rsp+0x50],0x0
    434d:	mov    BYTE PTR [rsp+0xf],0x1
    4352:	mov    BYTE PTR [rsp+0xd],0x0
    4357:	mov    QWORD PTR [rsp+0x18],0x1
    4360:	xor    r15d,r15d
    4363:	mov    QWORD PTR [rsp+0x48],rax
    4368:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    436d:	nop    DWORD PTR [rax]
    4370:	mov    rbp,r11
    4373:	movzx  eax,BYTE PTR [rsp+0xf]
    4378:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    437d:	lea    rax,[rip+0x2e67]        # 71eb <_IO_stdin_used@@Base+0xb2b>
    4384:	mov    BYTE PTR [rsp+0xe],0x1
    4389:	mov    BYTE PTR [rsp+0x7c],0x0
    438e:	xor    r12d,r12d
    4391:	mov    QWORD PTR [rsp+0x50],0x0
    439a:	mov    BYTE PTR [rsp+0xf],0x1
    439f:	mov    BYTE PTR [rsp+0xd],0x1
    43a4:	mov    QWORD PTR [rsp+0x18],0x1
    43ad:	xor    r15d,r15d
    43b0:	mov    QWORD PTR [rsp+0x48],rax
    43b5:	jmp    3393 <__cxa_finalize@plt+0x15c3>
    43ba:	mov    eax,edx
    43bc:	mov    rbx,QWORD PTR [rsp+0x48]
    43c1:	test   rbx,rbx
    43c4:	je     43f2 <__cxa_finalize@plt+0x2622>
    43c6:	test   al,al
    43c8:	je     43f2 <__cxa_finalize@plt+0x2622>
    43ca:	movzx  ecx,BYTE PTR [rbx]
    43cd:	mov    rax,rbx
    43d0:	test   cl,cl
    43d2:	je     43f2 <__cxa_finalize@plt+0x2622>
    43d4:	mov    rdx,r15
    43d7:	sub    rax,r15
    43da:	cmp    r13,rdx
    43dd:	jbe    43e3 <__cxa_finalize@plt+0x2613>
    43df:	mov    BYTE PTR [r14+rdx*1],cl
    43e3:	add    rdx,0x1
    43e7:	movzx  ecx,BYTE PTR [rax+rdx*1]
    43eb:	test   cl,cl
    43ed:	jne    43da <__cxa_finalize@plt+0x260a>
    43ef:	mov    r15,rdx
    43f2:	cmp    r13,r15
    43f5:	jbe    3e99 <__cxa_finalize@plt+0x20c9>
    43fb:	mov    BYTE PTR [r14+r15*1],0x0
    4400:	jmp    3e99 <__cxa_finalize@plt+0x20c9>
    4405:	cmp    DWORD PTR [rsp+0x8],0x2
    440a:	movzx  ebx,BYTE PTR [rsp+0xf]
    440f:	mov    rbp,r11
    4412:	sete   al
    4415:	mov    BYTE PTR [rsp+0xd],bl
    4419:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    441e:	mov    esi,DWORD PTR [rsp+0x8]
    4422:	mov    rdi,rcx
    4425:	call   31d0 <__cxa_finalize@plt+0x1400>
    442a:	mov    QWORD PTR [rsp+0x68],rax
    442f:	jmp    4086 <__cxa_finalize@plt+0x22b6>
    4434:	mov    esi,DWORD PTR [rsp+0x8]
    4438:	mov    rdi,rcx
    443b:	call   31d0 <__cxa_finalize@plt+0x1400>
    4440:	mov    QWORD PTR [rsp+0x60],rax
    4445:	jmp    40b1 <__cxa_finalize@plt+0x22e1>
    444a:	movzx  ebx,BYTE PTR [rsp+0xf]
    444f:	mov    rbp,r11
    4452:	mov    eax,edx
    4454:	mov    BYTE PTR [rsp+0xd],bl
    4458:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    445d:	sub    rsp,0x8
    4461:	mov    r8d,0x5
    4467:	mov    rcx,r11
    446a:	push   QWORD PTR [rsp+0x68]
    446e:	push   QWORD PTR [rsp+0x78]
    4472:	mov    rdi,r14
    4475:	push   QWORD PTR [rsp+0x38]
    4479:	mov    r9d,DWORD PTR [rsp+0x98]
    4481:	mov    rdx,QWORD PTR [rsp+0x30]
    4486:	mov    rsi,QWORD PTR [rsp+0x70]
    448b:	call   32c0 <__cxa_finalize@plt+0x14f0>
    4490:	add    rsp,0x20
    4494:	mov    r15,rax
    4497:	jmp    3e99 <__cxa_finalize@plt+0x20c9>
    449c:	movzx  eax,BYTE PTR [rsp+0x7c]
    44a1:	jmp    43bc <__cxa_finalize@plt+0x25ec>
    44a6:	mov    DWORD PTR [rsp+0x8],0x2
    44ae:	jmp    3e49 <__cxa_finalize@plt+0x2079>
    44b3:	call   1b40 <__stack_chk_fail@plt>
    44b8:	mov    BYTE PTR [rsp+0xd],0x0
    44bd:	jmp    3f31 <__cxa_finalize@plt+0x2161>
    44c2:	mov    rbp,r11
    44c5:	jmp    3e60 <__cxa_finalize@plt+0x2090>
    44ca:	mov    BYTE PTR [rsp+0xe],0x1
    44cf:	xor    eax,eax
    44d1:	xor    r12d,r12d
    44d4:	mov    QWORD PTR [rsp+0x50],0x0
    44dd:	jmp    3a84 <__cxa_finalize@plt+0x1cb4>
    44e2:	mov    rdx,r13
    44e5:	mov    r13,QWORD PTR [rsp+0x50]
    44ea:	jmp    3ae2 <__cxa_finalize@plt+0x1d12>
    44ef:	call   1a50 <abort@plt>
    44f4:	xchg   ax,ax
    44f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4500:	push   r15
    4502:	push   r14
    4504:	movsxd r15,edi
    4507:	push   r13
    4509:	push   r12
    450b:	mov    r14,rdx
    450e:	push   rbp
    450f:	push   rbx
    4510:	mov    rbp,rcx
    4513:	sub    rsp,0x28
    4517:	mov    QWORD PTR [rsp+0x8],rsi
    451c:	call   1a60 <__errno_location@plt>
    4521:	mov    r13,rax
    4524:	mov    eax,DWORD PTR [rax]
    4526:	test   r15d,r15d
    4529:	mov    rbx,QWORD PTR [rip+0x205b90]        # 20a0c0 <quote_quoting_options@@Base+0x40>
    4530:	mov    DWORD PTR [rsp+0x18],eax
    4534:	js     46a1 <__cxa_finalize@plt+0x28d1>
    453a:	cmp    DWORD PTR [rip+0x205b77],r15d        # 20a0b8 <quote_quoting_options@@Base+0x38>
    4541:	jg     45a5 <__cxa_finalize@plt+0x27d5>
    4543:	cmp    r15d,0x7ffffffe
    454a:	ja     46a6 <__cxa_finalize@plt+0x28d6>
    4550:	lea    r12d,[r15+0x1]
    4554:	lea    rax,[rip+0x205b75]        # 20a0d0 <quote_quoting_options@@Base+0x50>
    455b:	movsxd rsi,r12d
    455e:	shl    rsi,0x4
    4562:	cmp    rbx,rax
    4565:	je     4680 <__cxa_finalize@plt+0x28b0>
    456b:	mov    rdi,rbx
    456e:	call   54d0 <__cxa_finalize@plt+0x3700>
    4573:	mov    rbx,rax
    4576:	mov    QWORD PTR [rip+0x205b43],rax        # 20a0c0 <quote_quoting_options@@Base+0x40>
    457d:	movsxd rdi,DWORD PTR [rip+0x205b34]        # 20a0b8 <quote_quoting_options@@Base+0x38>
    4584:	mov    edx,r12d
    4587:	xor    esi,esi
    4589:	sub    edx,edi
    458b:	shl    rdi,0x4
    458f:	movsxd rdx,edx
    4592:	add    rdi,rbx
    4595:	shl    rdx,0x4
    4599:	call   1bc0 <memset@plt>
    459e:	mov    DWORD PTR [rip+0x205b13],r12d        # 20a0b8 <quote_quoting_options@@Base+0x38>
    45a5:	mov    eax,DWORD PTR [rbp+0x4]
    45a8:	shl    r15,0x4
    45ac:	sub    rsp,0x8
    45b0:	add    rbx,r15
    45b3:	lea    r15,[rbp+0x8]
    45b7:	mov    r8d,DWORD PTR [rbp+0x0]
    45bb:	mov    r11,QWORD PTR [rbx]
    45be:	mov    r12,QWORD PTR [rbx+0x8]
    45c2:	mov    rcx,r14
    45c5:	or     eax,0x1
    45c8:	mov    DWORD PTR [rsp+0x24],eax
    45cc:	push   QWORD PTR [rbp+0x30]
    45cf:	mov    r9d,eax
    45d2:	push   QWORD PTR [rbp+0x28]
    45d5:	push   r15
    45d7:	mov    rsi,r11
    45da:	mov    rdx,QWORD PTR [rsp+0x28]
    45df:	mov    rdi,r12
    45e2:	mov    QWORD PTR [rsp+0x30],r11
    45e7:	call   32c0 <__cxa_finalize@plt+0x14f0>
    45ec:	add    rsp,0x20
    45f0:	mov    r11,QWORD PTR [rsp+0x10]
    45f5:	cmp    r11,rax
    45f8:	ja     4661 <__cxa_finalize@plt+0x2891>
    45fa:	lea    rsi,[rax+0x1]
    45fe:	lea    rax,[rip+0x205f9b]        # 20a5a0 <program_name@@Base+0x8>
    4605:	cmp    r12,rax
    4608:	mov    QWORD PTR [rbx],rsi
    460b:	je     461f <__cxa_finalize@plt+0x284f>
    460d:	mov    rdi,r12
    4610:	mov    QWORD PTR [rsp+0x10],rsi
    4615:	call   1a40 <free@plt>
    461a:	mov    rsi,QWORD PTR [rsp+0x10]
    461f:	mov    rdi,rsi
    4622:	mov    QWORD PTR [rsp+0x10],rsi
    4627:	call   5470 <__cxa_finalize@plt+0x36a0>
    462c:	sub    rsp,0x8
    4630:	mov    QWORD PTR [rbx+0x8],rax
    4634:	mov    r8d,DWORD PTR [rbp+0x0]
    4638:	push   QWORD PTR [rbp+0x30]
    463b:	push   QWORD PTR [rbp+0x28]
    463e:	mov    rcx,r14
    4641:	push   r15
    4643:	mov    r9d,DWORD PTR [rsp+0x3c]
    4648:	mov    rdi,rax
    464b:	mov    rdx,QWORD PTR [rsp+0x28]
    4650:	mov    rsi,QWORD PTR [rsp+0x30]
    4655:	mov    r12,rax
    4658:	call   32c0 <__cxa_finalize@plt+0x14f0>
    465d:	add    rsp,0x20
    4661:	mov    eax,DWORD PTR [rsp+0x18]
    4665:	mov    DWORD PTR [r13+0x0],eax
    4669:	add    rsp,0x28
    466d:	mov    rax,r12
    4670:	pop    rbx
    4671:	pop    rbp
    4672:	pop    r12
    4674:	pop    r13
    4676:	pop    r14
    4678:	pop    r15
    467a:	ret    
    467b:	nop    DWORD PTR [rax+rax*1+0x0]
    4680:	xor    edi,edi
    4682:	call   54d0 <__cxa_finalize@plt+0x3700>
    4687:	movdqa xmm0,XMMWORD PTR [rip+0x205a41]        # 20a0d0 <quote_quoting_options@@Base+0x50>
    468f:	mov    rbx,rax
    4692:	mov    QWORD PTR [rip+0x205a27],rax        # 20a0c0 <quote_quoting_options@@Base+0x40>
    4699:	movups XMMWORD PTR [rax],xmm0
    469c:	jmp    457d <__cxa_finalize@plt+0x27ad>
    46a1:	call   1a50 <abort@plt>
    46a6:	call   56c0 <__cxa_finalize@plt+0x38f0>
    46ab:	nop    DWORD PTR [rax+rax*1+0x0]
    46b0:	push   r12
    46b2:	push   rbp
    46b3:	push   rbx
    46b4:	mov    rbx,rdi
    46b7:	call   1a60 <__errno_location@plt>
    46bc:	mov    r12d,DWORD PTR [rax]
    46bf:	mov    rbp,rax
    46c2:	lea    rax,[rip+0x205fd7]        # 20a6a0 <program_name@@Base+0x108>
    46c9:	test   rbx,rbx
    46cc:	mov    esi,0x38
    46d1:	cmove  rbx,rax
    46d5:	mov    rdi,rbx
    46d8:	call   5670 <__cxa_finalize@plt+0x38a0>
    46dd:	mov    DWORD PTR [rbp+0x0],r12d
    46e1:	pop    rbx
    46e2:	pop    rbp
    46e3:	pop    r12
    46e5:	ret    
    46e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46f0:	lea    rax,[rip+0x205fa9]        # 20a6a0 <program_name@@Base+0x108>
    46f7:	test   rdi,rdi
    46fa:	cmove  rdi,rax
    46fe:	mov    eax,DWORD PTR [rdi]
    4700:	ret    
    4701:	nop    DWORD PTR [rax+rax*1+0x0]
    4706:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4710:	lea    rax,[rip+0x205f89]        # 20a6a0 <program_name@@Base+0x108>
    4717:	test   rdi,rdi
    471a:	cmove  rdi,rax
    471e:	mov    DWORD PTR [rdi],esi
    4720:	ret    
    4721:	nop    DWORD PTR [rax+rax*1+0x0]
    4726:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4730:	lea    rax,[rip+0x205f69]        # 20a6a0 <program_name@@Base+0x108>
    4737:	test   rdi,rdi
    473a:	mov    ecx,esi
    473c:	cmove  rdi,rax
    4740:	mov    eax,esi
    4742:	and    ecx,0x1f
    4745:	shr    al,0x5
    4748:	movzx  eax,al
    474b:	lea    rdi,[rdi+rax*4+0x8]
    4750:	mov    esi,DWORD PTR [rdi]
    4752:	mov    eax,esi
    4754:	shr    eax,cl
    4756:	xor    edx,eax
    4758:	and    eax,0x1
    475b:	and    edx,0x1
    475e:	shl    edx,cl
    4760:	xor    edx,esi
    4762:	mov    DWORD PTR [rdi],edx
    4764:	ret    
    4765:	nop
    4766:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4770:	lea    rax,[rip+0x205f29]        # 20a6a0 <program_name@@Base+0x108>
    4777:	test   rdi,rdi
    477a:	cmove  rdi,rax
    477e:	mov    eax,DWORD PTR [rdi+0x4]
    4781:	mov    DWORD PTR [rdi+0x4],esi
    4784:	ret    
    4785:	nop
    4786:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4790:	lea    rax,[rip+0x205f09]        # 20a6a0 <program_name@@Base+0x108>
    4797:	test   rdi,rdi
    479a:	cmove  rdi,rax
    479e:	test   rsi,rsi
    47a1:	mov    DWORD PTR [rdi],0xa
    47a7:	je     47b7 <__cxa_finalize@plt+0x29e7>
    47a9:	test   rdx,rdx
    47ac:	je     47b7 <__cxa_finalize@plt+0x29e7>
    47ae:	mov    QWORD PTR [rdi+0x28],rsi
    47b2:	mov    QWORD PTR [rdi+0x30],rdx
    47b6:	ret    
    47b7:	sub    rsp,0x8
    47bb:	call   1a50 <abort@plt>
    47c0:	push   r15
    47c2:	push   r14
    47c4:	lea    rax,[rip+0x205ed5]        # 20a6a0 <program_name@@Base+0x108>
    47cb:	push   r13
    47cd:	push   r12
    47cf:	mov    r13,rdi
    47d2:	push   rbp
    47d3:	push   rbx
    47d4:	mov    rbx,r8
    47d7:	mov    r14,rsi
    47da:	mov    r15,rdx
    47dd:	sub    rsp,0x18
    47e1:	test   r8,r8
    47e4:	cmove  rbx,rax
    47e8:	mov    QWORD PTR [rsp+0x8],rcx
    47ed:	call   1a60 <__errno_location@plt>
    47f2:	mov    r12d,DWORD PTR [rax]
    47f5:	mov    rbp,rax
    47f8:	lea    rax,[rbx+0x8]
    47fc:	sub    rsp,0x8
    4800:	mov    r9d,DWORD PTR [rbx+0x4]
    4804:	push   QWORD PTR [rbx+0x30]
    4807:	mov    r8d,DWORD PTR [rbx]
    480a:	push   QWORD PTR [rbx+0x28]
    480d:	mov    rdx,r15
    4810:	push   rax
    4811:	mov    rcx,QWORD PTR [rsp+0x28]
    4816:	mov    rsi,r14
    4819:	mov    rdi,r13
    481c:	call   32c0 <__cxa_finalize@plt+0x14f0>
    4821:	mov    DWORD PTR [rbp+0x0],r12d
    4825:	add    rsp,0x38
    4829:	pop    rbx
    482a:	pop    rbp
    482b:	pop    r12
    482d:	pop    r13
    482f:	pop    r14
    4831:	pop    r15
    4833:	ret    
    4834:	xchg   ax,ax
    4836:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4840:	push   r15
    4842:	push   r14
    4844:	lea    rax,[rip+0x205e55]        # 20a6a0 <program_name@@Base+0x108>
    484b:	push   r13
    484d:	push   r12
    484f:	mov    r12,rdx
    4852:	push   rbp
    4853:	push   rbx
    4854:	mov    rbx,rcx
    4857:	mov    r14,rdi
    485a:	mov    r15,rsi
    485d:	sub    rsp,0x38
    4861:	test   rcx,rcx
    4864:	cmove  rbx,rax
    4868:	xor    ebp,ebp
    486a:	call   1a60 <__errno_location@plt>
    486f:	test   r12,r12
    4872:	mov    r13,rax
    4875:	mov    eax,DWORD PTR [rax]
    4877:	sete   bpl
    487b:	or     ebp,DWORD PTR [rbx+0x4]
    487e:	lea    r10,[rbx+0x8]
    4882:	sub    rsp,0x8
    4886:	mov    r8d,DWORD PTR [rbx]
    4889:	mov    rcx,r15
    488c:	mov    DWORD PTR [rsp+0x14],eax
    4890:	push   QWORD PTR [rbx+0x30]
    4893:	mov    rdx,r14
    4896:	push   QWORD PTR [rbx+0x28]
    4899:	push   r10
    489b:	xor    esi,esi
    489d:	mov    r9d,ebp
    48a0:	xor    edi,edi
    48a2:	mov    QWORD PTR [rsp+0x40],r10
    48a7:	call   32c0 <__cxa_finalize@plt+0x14f0>
    48ac:	lea    rsi,[rax+0x1]
    48b0:	mov    QWORD PTR [rsp+0x48],rax
    48b5:	add    rsp,0x20
    48b9:	mov    rdi,rsi
    48bc:	mov    QWORD PTR [rsp+0x18],rsi
    48c1:	call   5470 <__cxa_finalize@plt+0x36a0>
    48c6:	mov    QWORD PTR [rsp+0x10],rax
    48cb:	sub    rsp,0x8
    48cf:	push   QWORD PTR [rbx+0x30]
    48d2:	push   QWORD PTR [rbx+0x28]
    48d5:	mov    r10,QWORD PTR [rsp+0x38]
    48da:	mov    r9d,ebp
    48dd:	mov    r8d,DWORD PTR [rbx]
    48e0:	mov    rcx,r15
    48e3:	mov    rdx,r14
    48e6:	mov    rdi,rax
    48e9:	push   r10
    48eb:	mov    rsi,QWORD PTR [rsp+0x38]
    48f0:	call   32c0 <__cxa_finalize@plt+0x14f0>
    48f5:	mov    eax,DWORD PTR [rsp+0x2c]
    48f9:	add    rsp,0x20
    48fd:	test   r12,r12
    4900:	mov    DWORD PTR [r13+0x0],eax
    4904:	je     490f <__cxa_finalize@plt+0x2b3f>
    4906:	mov    r11,QWORD PTR [rsp+0x28]
    490b:	mov    QWORD PTR [r12],r11
    490f:	mov    rax,QWORD PTR [rsp+0x10]
    4914:	add    rsp,0x38
    4918:	pop    rbx
    4919:	pop    rbp
    491a:	pop    r12
    491c:	pop    r13
    491e:	pop    r14
    4920:	pop    r15
    4922:	ret    
    4923:	nop    DWORD PTR [rax]
    4926:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4930:	mov    rcx,rdx
    4933:	xor    edx,edx
    4935:	jmp    4840 <__cxa_finalize@plt+0x2a70>
    493a:	nop    WORD PTR [rax+rax*1+0x0]
    4940:	mov    eax,DWORD PTR [rip+0x205772]        # 20a0b8 <quote_quoting_options@@Base+0x38>
    4946:	push   r12
    4948:	mov    r12,QWORD PTR [rip+0x205771]        # 20a0c0 <quote_quoting_options@@Base+0x40>
    494f:	push   rbp
    4950:	push   rbx
    4951:	cmp    eax,0x1
    4954:	jle    4981 <__cxa_finalize@plt+0x2bb1>
    4956:	sub    eax,0x2
    4959:	lea    rbx,[r12+0x18]
    495e:	shl    rax,0x4
    4962:	lea    rbp,[r12+rax*1+0x28]
    4967:	nop    WORD PTR [rax+rax*1+0x0]
    4970:	mov    rdi,QWORD PTR [rbx]
    4973:	add    rbx,0x10
    4977:	call   1a40 <free@plt>
    497c:	cmp    rbx,rbp
    497f:	jne    4970 <__cxa_finalize@plt+0x2ba0>
    4981:	mov    rdi,QWORD PTR [r12+0x8]
    4986:	lea    rbx,[rip+0x205c13]        # 20a5a0 <program_name@@Base+0x8>
    498d:	cmp    rdi,rbx
    4990:	je     49a9 <__cxa_finalize@plt+0x2bd9>
    4992:	call   1a40 <free@plt>
    4997:	mov    QWORD PTR [rip+0x20572e],0x100        # 20a0d0 <quote_quoting_options@@Base+0x50>
    49a2:	mov    QWORD PTR [rip+0x20572f],rbx        # 20a0d8 <quote_quoting_options@@Base+0x58>
    49a9:	lea    rbx,[rip+0x205720]        # 20a0d0 <quote_quoting_options@@Base+0x50>
    49b0:	cmp    r12,rbx
    49b3:	je     49c4 <__cxa_finalize@plt+0x2bf4>
    49b5:	mov    rdi,r12
    49b8:	call   1a40 <free@plt>
    49bd:	mov    QWORD PTR [rip+0x2056fc],rbx        # 20a0c0 <quote_quoting_options@@Base+0x40>
    49c4:	pop    rbx
    49c5:	mov    DWORD PTR [rip+0x2056e9],0x1        # 20a0b8 <quote_quoting_options@@Base+0x38>
    49cf:	pop    rbp
    49d0:	pop    r12
    49d2:	ret    
    49d3:	nop    DWORD PTR [rax]
    49d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    49e0:	lea    rcx,[rip+0x205cb9]        # 20a6a0 <program_name@@Base+0x108>
    49e7:	mov    rdx,0xffffffffffffffff
    49ee:	jmp    4500 <__cxa_finalize@plt+0x2730>
    49f3:	nop    DWORD PTR [rax]
    49f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4a00:	lea    rcx,[rip+0x205c99]        # 20a6a0 <program_name@@Base+0x108>
    4a07:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4a0c:	nop    DWORD PTR [rax+0x0]
    4a10:	lea    rcx,[rip+0x205c89]        # 20a6a0 <program_name@@Base+0x108>
    4a17:	mov    rsi,rdi
    4a1a:	mov    rdx,0xffffffffffffffff
    4a21:	xor    edi,edi
    4a23:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4a28:	nop    DWORD PTR [rax+rax*1+0x0]
    4a30:	lea    rcx,[rip+0x205c69]        # 20a6a0 <program_name@@Base+0x108>
    4a37:	mov    rdx,rsi
    4a3a:	mov    rsi,rdi
    4a3d:	xor    edi,edi
    4a3f:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4a44:	xchg   ax,ax
    4a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4a50:	sub    rsp,0x48
    4a54:	mov    rax,rdx
    4a57:	mov    rdx,QWORD PTR fs:0x28
    4a60:	mov    QWORD PTR [rsp+0x38],rdx
    4a65:	xor    edx,edx
    4a67:	cmp    esi,0xa
    4a6a:	je     4ad4 <__cxa_finalize@plt+0x2d04>
    4a6c:	mov    DWORD PTR [rsp],esi
    4a6f:	mov    rcx,rsp
    4a72:	mov    rdx,0xffffffffffffffff
    4a79:	mov    rsi,rax
    4a7c:	mov    QWORD PTR [rsp+0x4],0x0
    4a85:	mov    QWORD PTR [rsp+0xc],0x0
    4a8e:	mov    QWORD PTR [rsp+0x14],0x0
    4a97:	mov    QWORD PTR [rsp+0x1c],0x0
    4aa0:	mov    QWORD PTR [rsp+0x24],0x0
    4aa9:	mov    QWORD PTR [rsp+0x2c],0x0
    4ab2:	mov    DWORD PTR [rsp+0x34],0x0
    4aba:	call   4500 <__cxa_finalize@plt+0x2730>
    4abf:	mov    rcx,QWORD PTR [rsp+0x38]
    4ac4:	xor    rcx,QWORD PTR fs:0x28
    4acd:	jne    4ad9 <__cxa_finalize@plt+0x2d09>
    4acf:	add    rsp,0x48
    4ad3:	ret    
    4ad4:	call   1a50 <abort@plt>
    4ad9:	call   1b40 <__stack_chk_fail@plt>
    4ade:	xchg   ax,ax
    4ae0:	sub    rsp,0x48
    4ae4:	mov    rax,rdx
    4ae7:	mov    rdx,rcx
    4aea:	mov    rcx,QWORD PTR fs:0x28
    4af3:	mov    QWORD PTR [rsp+0x38],rcx
    4af8:	xor    ecx,ecx
    4afa:	cmp    esi,0xa
    4afd:	je     4b60 <__cxa_finalize@plt+0x2d90>
    4aff:	mov    DWORD PTR [rsp],esi
    4b02:	mov    rcx,rsp
    4b05:	mov    rsi,rax
    4b08:	mov    QWORD PTR [rsp+0x4],0x0
    4b11:	mov    QWORD PTR [rsp+0xc],0x0
    4b1a:	mov    QWORD PTR [rsp+0x14],0x0
    4b23:	mov    QWORD PTR [rsp+0x1c],0x0
    4b2c:	mov    QWORD PTR [rsp+0x24],0x0
    4b35:	mov    QWORD PTR [rsp+0x2c],0x0
    4b3e:	mov    DWORD PTR [rsp+0x34],0x0
    4b46:	call   4500 <__cxa_finalize@plt+0x2730>
    4b4b:	mov    rdx,QWORD PTR [rsp+0x38]
    4b50:	xor    rdx,QWORD PTR fs:0x28
    4b59:	jne    4b65 <__cxa_finalize@plt+0x2d95>
    4b5b:	add    rsp,0x48
    4b5f:	ret    
    4b60:	call   1a50 <abort@plt>
    4b65:	call   1b40 <__stack_chk_fail@plt>
    4b6a:	nop    WORD PTR [rax+rax*1+0x0]
    4b70:	mov    rdx,rsi
    4b73:	mov    esi,edi
    4b75:	xor    edi,edi
    4b77:	jmp    4a50 <__cxa_finalize@plt+0x2c80>
    4b7c:	nop    DWORD PTR [rax+0x0]
    4b80:	mov    rcx,rdx
    4b83:	mov    rdx,rsi
    4b86:	mov    esi,edi
    4b88:	xor    edi,edi
    4b8a:	jmp    4ae0 <__cxa_finalize@plt+0x2d10>
    4b8f:	nop
    4b90:	sub    rsp,0x48
    4b94:	mov    ecx,edx
    4b96:	mov    rax,QWORD PTR fs:0x28
    4b9f:	mov    QWORD PTR [rsp+0x38],rax
    4ba4:	xor    eax,eax
    4ba6:	mov    rax,QWORD PTR [rip+0x205b23]        # 20a6d0 <program_name@@Base+0x138>
    4bad:	mov    r8,rsp
    4bb0:	and    ecx,0x1f
    4bb3:	movdqa xmm0,XMMWORD PTR [rip+0x205ae5]        # 20a6a0 <program_name@@Base+0x108>
    4bbb:	mov    QWORD PTR [rsp+0x30],rax
    4bc0:	mov    eax,edx
    4bc2:	movaps XMMWORD PTR [rsp],xmm0
    4bc6:	shr    al,0x5
    4bc9:	movzx  eax,al
    4bcc:	lea    r9,[r8+rax*4+0x8]
    4bd1:	movdqa xmm0,XMMWORD PTR [rip+0x205ad7]        # 20a6b0 <program_name@@Base+0x118>
    4bd9:	movaps XMMWORD PTR [rsp+0x10],xmm0
    4bde:	movdqa xmm0,XMMWORD PTR [rip+0x205ada]        # 20a6c0 <program_name@@Base+0x128>
    4be6:	movaps XMMWORD PTR [rsp+0x20],xmm0
    4beb:	mov    edx,DWORD PTR [r9]
    4bee:	mov    eax,edx
    4bf0:	shr    eax,cl
    4bf2:	not    eax
    4bf4:	and    eax,0x1
    4bf7:	shl    eax,cl
    4bf9:	mov    rcx,r8
    4bfc:	xor    eax,edx
    4bfe:	mov    rdx,rsi
    4c01:	mov    rsi,rdi
    4c04:	mov    DWORD PTR [r9],eax
    4c07:	xor    edi,edi
    4c09:	call   4500 <__cxa_finalize@plt+0x2730>
    4c0e:	mov    rsi,QWORD PTR [rsp+0x38]
    4c13:	xor    rsi,QWORD PTR fs:0x28
    4c1c:	jne    4c23 <__cxa_finalize@plt+0x2e53>
    4c1e:	add    rsp,0x48
    4c22:	ret    
    4c23:	call   1b40 <__stack_chk_fail@plt>
    4c28:	nop    DWORD PTR [rax+rax*1+0x0]
    4c30:	movsx  edx,sil
    4c34:	mov    rsi,0xffffffffffffffff
    4c3b:	jmp    4b90 <__cxa_finalize@plt+0x2dc0>
    4c40:	mov    edx,0x3a
    4c45:	mov    rsi,0xffffffffffffffff
    4c4c:	jmp    4b90 <__cxa_finalize@plt+0x2dc0>
    4c51:	nop    DWORD PTR [rax+rax*1+0x0]
    4c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4c60:	mov    edx,0x3a
    4c65:	jmp    4b90 <__cxa_finalize@plt+0x2dc0>
    4c6a:	nop    WORD PTR [rax+rax*1+0x0]
    4c70:	sub    rsp,0x48
    4c74:	mov    rax,rdx
    4c77:	mov    rdx,QWORD PTR fs:0x28
    4c80:	mov    QWORD PTR [rsp+0x38],rdx
    4c85:	xor    edx,edx
    4c87:	cmp    esi,0xa
    4c8a:	je     4cf4 <__cxa_finalize@plt+0x2f24>
    4c8c:	mov    DWORD PTR [rsp],esi
    4c8f:	mov    rcx,rsp
    4c92:	mov    rdx,0xffffffffffffffff
    4c99:	mov    rsi,rax
    4c9c:	mov    QWORD PTR [rsp+0x4],0x0
    4ca5:	mov    QWORD PTR [rsp+0xc],0x4000000
    4cae:	mov    QWORD PTR [rsp+0x14],0x0
    4cb7:	mov    QWORD PTR [rsp+0x1c],0x0
    4cc0:	mov    QWORD PTR [rsp+0x24],0x0
    4cc9:	mov    QWORD PTR [rsp+0x2c],0x0
    4cd2:	mov    DWORD PTR [rsp+0x34],0x0
    4cda:	call   4500 <__cxa_finalize@plt+0x2730>
    4cdf:	mov    rcx,QWORD PTR [rsp+0x38]
    4ce4:	xor    rcx,QWORD PTR fs:0x28
    4ced:	jne    4cf9 <__cxa_finalize@plt+0x2f29>
    4cef:	add    rsp,0x48
    4cf3:	ret    
    4cf4:	call   1a50 <abort@plt>
    4cf9:	call   1b40 <__stack_chk_fail@plt>
    4cfe:	xchg   ax,ax
    4d00:	sub    rsp,0x48
    4d04:	mov    r9,rcx
    4d07:	mov    rcx,QWORD PTR [rip+0x2059c2]        # 20a6d0 <program_name@@Base+0x138>
    4d0e:	movdqa xmm0,XMMWORD PTR [rip+0x20598a]        # 20a6a0 <program_name@@Base+0x108>
    4d16:	mov    rax,QWORD PTR fs:0x28
    4d1f:	mov    QWORD PTR [rsp+0x38],rax
    4d24:	xor    eax,eax
    4d26:	movaps XMMWORD PTR [rsp],xmm0
    4d2a:	test   rsi,rsi
    4d2d:	mov    QWORD PTR [rsp+0x30],rcx
    4d32:	mov    DWORD PTR [rsp],0xa
    4d39:	movdqa xmm0,XMMWORD PTR [rip+0x20596f]        # 20a6b0 <program_name@@Base+0x118>
    4d41:	movaps XMMWORD PTR [rsp+0x10],xmm0
    4d46:	movdqa xmm0,XMMWORD PTR [rip+0x205972]        # 20a6c0 <program_name@@Base+0x128>
    4d4e:	movaps XMMWORD PTR [rsp+0x20],xmm0
    4d53:	je     4d87 <__cxa_finalize@plt+0x2fb7>
    4d55:	test   rdx,rdx
    4d58:	je     4d87 <__cxa_finalize@plt+0x2fb7>
    4d5a:	mov    QWORD PTR [rsp+0x28],rsi
    4d5f:	mov    QWORD PTR [rsp+0x30],rdx
    4d64:	mov    rcx,rsp
    4d67:	mov    rdx,r8
    4d6a:	mov    rsi,r9
    4d6d:	call   4500 <__cxa_finalize@plt+0x2730>
    4d72:	mov    rdi,QWORD PTR [rsp+0x38]
    4d77:	xor    rdi,QWORD PTR fs:0x28
    4d80:	jne    4d8c <__cxa_finalize@plt+0x2fbc>
    4d82:	add    rsp,0x48
    4d86:	ret    
    4d87:	call   1a50 <abort@plt>
    4d8c:	call   1b40 <__stack_chk_fail@plt>
    4d91:	nop    DWORD PTR [rax+rax*1+0x0]
    4d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4da0:	mov    r8,0xffffffffffffffff
    4da7:	jmp    4d00 <__cxa_finalize@plt+0x2f30>
    4dac:	nop    DWORD PTR [rax+0x0]
    4db0:	mov    rcx,rdx
    4db3:	mov    r8,0xffffffffffffffff
    4dba:	mov    rdx,rsi
    4dbd:	mov    rsi,rdi
    4dc0:	xor    edi,edi
    4dc2:	jmp    4d00 <__cxa_finalize@plt+0x2f30>
    4dc7:	nop    WORD PTR [rax+rax*1+0x0]
    4dd0:	mov    r8,rcx
    4dd3:	mov    rcx,rdx
    4dd6:	mov    rdx,rsi
    4dd9:	mov    rsi,rdi
    4ddc:	xor    edi,edi
    4dde:	jmp    4d00 <__cxa_finalize@plt+0x2f30>
    4de3:	nop    DWORD PTR [rax]
    4de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4df0:	lea    rcx,[rip+0x205289]        # 20a080 <quote_quoting_options@@Base>
    4df7:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4dfc:	nop    DWORD PTR [rax+0x0]
    4e00:	lea    rcx,[rip+0x205279]        # 20a080 <quote_quoting_options@@Base>
    4e07:	mov    rdx,rsi
    4e0a:	mov    rsi,rdi
    4e0d:	xor    edi,edi
    4e0f:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4e14:	xchg   ax,ax
    4e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4e20:	lea    rcx,[rip+0x205259]        # 20a080 <quote_quoting_options@@Base>
    4e27:	mov    rdx,0xffffffffffffffff
    4e2e:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4e33:	nop    DWORD PTR [rax]
    4e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4e40:	lea    rcx,[rip+0x205239]        # 20a080 <quote_quoting_options@@Base>
    4e47:	mov    rsi,rdi
    4e4a:	mov    rdx,0xffffffffffffffff
    4e51:	xor    edi,edi
    4e53:	jmp    4500 <__cxa_finalize@plt+0x2730>
    4e58:	nop    DWORD PTR [rax+rax*1+0x0]
    4e60:	push   r15
    4e62:	push   r14
    4e64:	push   r13
    4e66:	push   r12
    4e68:	mov    r12,r9
    4e6b:	push   rbp
    4e6c:	push   rbx
    4e6d:	mov    rbp,rdi
    4e70:	mov    rbx,r8
    4e73:	sub    rsp,0x28
    4e77:	test   rsi,rsi
    4e7a:	je     4f10 <__cxa_finalize@plt+0x3140>
    4e80:	mov    r8,rdx
    4e83:	lea    rdx,[rip+0x281e]        # 76a8 <quoting_style_vals@@Base+0x28>
    4e8a:	mov    r9,rcx
    4e8d:	xor    eax,eax
    4e8f:	mov    rcx,rsi
    4e92:	mov    esi,0x1
    4e97:	call   1d80 <__fprintf_chk@plt>
    4e9c:	lea    rsi,[rip+0x2818]        # 76bb <quoting_style_vals@@Base+0x3b>
    4ea3:	xor    edi,edi
    4ea5:	mov    edx,0x5
    4eaa:	call   1b10 <dcgettext@plt>
    4eaf:	lea    rdx,[rip+0x2b2a]        # 79e0 <version_etc_copyright@@Base>
    4eb6:	mov    rcx,rax
    4eb9:	mov    r8d,0x7e1
    4ebf:	mov    esi,0x1
    4ec4:	mov    rdi,rbp
    4ec7:	xor    eax,eax
    4ec9:	call   1d80 <__fprintf_chk@plt>
    4ece:	lea    rsi,[rip+0x2873]        # 7748 <quoting_style_vals@@Base+0xc8>
    4ed5:	xor    edi,edi
    4ed7:	mov    edx,0x5
    4edc:	call   1b10 <dcgettext@plt>
    4ee1:	mov    rsi,rbp
    4ee4:	mov    rdi,rax
    4ee7:	call   1c10 <fputs_unlocked@plt>
    4eec:	cmp    r12,0x9
    4ef0:	ja     5220 <__cxa_finalize@plt+0x3450>
    4ef6:	lea    rdx,[rip+0x2aa3]        # 79a0 <quoting_style_vals@@Base+0x320>
    4efd:	movsxd rax,DWORD PTR [rdx+r12*4]
    4f01:	add    rax,rdx
    4f04:	jmp    rax
    4f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4f10:	mov    r8,rcx
    4f13:	mov    rcx,rdx
    4f16:	lea    rdx,[rip+0x2797]        # 76b4 <quoting_style_vals@@Base+0x34>
    4f1d:	mov    esi,0x1
    4f22:	xor    eax,eax
    4f24:	call   1d80 <__fprintf_chk@plt>
    4f29:	jmp    4e9c <__cxa_finalize@plt+0x30cc>
    4f2e:	xchg   ax,ax
    4f30:	mov    r9,QWORD PTR [rbx+0x38]
    4f34:	mov    rax,QWORD PTR [rbx+0x10]
    4f38:	lea    rsi,[rip+0x2979]        # 78b8 <quoting_style_vals@@Base+0x238>
    4f3f:	mov    r8,QWORD PTR [rbx+0x8]
    4f43:	mov    edx,0x5
    4f48:	xor    edi,edi
    4f4a:	mov    r13,QWORD PTR [rbx+0x30]
    4f4e:	mov    r12,QWORD PTR [rbx+0x28]
    4f52:	mov    QWORD PTR [rsp+0x10],r9
    4f57:	mov    r15,QWORD PTR [rbx+0x20]
    4f5b:	mov    r14,QWORD PTR [rbx+0x18]
    4f5f:	mov    QWORD PTR [rsp],rax
    4f63:	mov    QWORD PTR [rsp+0x8],r8
    4f68:	mov    rbx,QWORD PTR [rbx]
    4f6b:	call   1b10 <dcgettext@plt>
    4f70:	sub    rsp,0x8
    4f74:	mov    r9,QWORD PTR [rsp+0x18]
    4f79:	mov    rcx,rbx
    4f7c:	mov    rdx,rax
    4f7f:	mov    rdi,rbp
    4f82:	mov    esi,0x1
    4f87:	xor    eax,eax
    4f89:	push   r9
    4f8b:	push   r13
    4f8d:	push   r12
    4f8f:	push   r15
    4f91:	push   r14
    4f93:	mov    r9,QWORD PTR [rsp+0x30]
    4f98:	mov    r8,QWORD PTR [rsp+0x38]
    4f9d:	call   1d80 <__fprintf_chk@plt>
    4fa2:	add    rsp,0x30
    4fa6:	add    rsp,0x28
    4faa:	pop    rbx
    4fab:	pop    rbp
    4fac:	pop    r12
    4fae:	pop    r13
    4fb0:	pop    r14
    4fb2:	pop    r15
    4fb4:	ret    
    4fb5:	nop    DWORD PTR [rax]
    4fb8:	mov    r10,QWORD PTR [rbx+0x40]
    4fbc:	mov    r9,QWORD PTR [rbx+0x38]
    4fc0:	lea    rsi,[rip+0x2921]        # 78e8 <quoting_style_vals@@Base+0x268>
    4fc7:	mov    rax,QWORD PTR [rbx+0x10]
    4fcb:	mov    r8,QWORD PTR [rbx+0x8]
    4fcf:	mov    edx,0x5
    4fd4:	mov    r13,QWORD PTR [rbx+0x30]
    4fd8:	mov    r12,QWORD PTR [rbx+0x28]
    4fdc:	mov    r15,QWORD PTR [rbx+0x20]
    4fe0:	mov    r14,QWORD PTR [rbx+0x18]
    4fe4:	mov    rbx,QWORD PTR [rbx]
    4fe7:	mov    QWORD PTR [rsp+0x18],r10
    4fec:	mov    QWORD PTR [rsp+0x10],r9
    4ff1:	mov    QWORD PTR [rsp],rax
    4ff5:	mov    QWORD PTR [rsp+0x8],r8
    4ffa:	xor    edi,edi
    4ffc:	call   1b10 <dcgettext@plt>
    5001:	mov    r10,QWORD PTR [rsp+0x18]
    5006:	push   r10
    5008:	jmp    4f74 <__cxa_finalize@plt+0x31a4>
    500d:	nop    DWORD PTR [rax]
    5010:	mov    rbx,QWORD PTR [rbx]
    5013:	lea    rsi,[rip+0x26a5]        # 76bf <quoting_style_vals@@Base+0x3f>
    501a:	mov    edx,0x5
    501f:	xor    edi,edi
    5021:	call   1b10 <dcgettext@plt>
    5026:	add    rsp,0x28
    502a:	mov    rcx,rbx
    502d:	mov    rdi,rbp
    5030:	pop    rbx
    5031:	pop    rbp
    5032:	pop    r12
    5034:	pop    r13
    5036:	pop    r14
    5038:	pop    r15
    503a:	mov    rdx,rax
    503d:	mov    esi,0x1
    5042:	xor    eax,eax
    5044:	jmp    1d80 <__fprintf_chk@plt>
    5049:	nop    DWORD PTR [rax+0x0]
    5050:	mov    r12,QWORD PTR [rbx+0x8]
    5054:	lea    rsi,[rip+0x2674]        # 76cf <quoting_style_vals@@Base+0x4f>
    505b:	mov    rbx,QWORD PTR [rbx]
    505e:	mov    edx,0x5
    5063:	xor    edi,edi
    5065:	call   1b10 <dcgettext@plt>
    506a:	add    rsp,0x28
    506e:	mov    r8,r12
    5071:	mov    rcx,rbx
    5074:	mov    rdi,rbp
    5077:	mov    rdx,rax
    507a:	mov    esi,0x1
    507f:	pop    rbx
    5080:	pop    rbp
    5081:	pop    r12
    5083:	pop    r13
    5085:	pop    r14
    5087:	pop    r15
    5089:	xor    eax,eax
    508b:	jmp    1d80 <__fprintf_chk@plt>
    5090:	mov    r13,QWORD PTR [rbx+0x10]
    5094:	mov    r12,QWORD PTR [rbx+0x8]
    5098:	lea    rsi,[rip+0x2647]        # 76e6 <quoting_style_vals@@Base+0x66>
    509f:	mov    rbx,QWORD PTR [rbx]
    50a2:	mov    edx,0x5
    50a7:	xor    edi,edi
    50a9:	call   1b10 <dcgettext@plt>
    50ae:	add    rsp,0x28
    50b2:	mov    r9,r13
    50b5:	mov    r8,r12
    50b8:	mov    rcx,rbx
    50bb:	mov    rdi,rbp
    50be:	mov    rdx,rax
    50c1:	pop    rbx
    50c2:	pop    rbp
    50c3:	pop    r12
    50c5:	pop    r13
    50c7:	pop    r14
    50c9:	pop    r15
    50cb:	mov    esi,0x1
    50d0:	xor    eax,eax
    50d2:	jmp    1d80 <__fprintf_chk@plt>
    50d7:	nop    WORD PTR [rax+rax*1+0x0]
    50e0:	lea    rsi,[rip+0x2731]        # 7818 <quoting_style_vals@@Base+0x198>
    50e7:	mov    edx,0x5
    50ec:	xor    edi,edi
    50ee:	mov    r14,QWORD PTR [rbx+0x18]
    50f2:	mov    r13,QWORD PTR [rbx+0x10]
    50f6:	mov    r12,QWORD PTR [rbx+0x8]
    50fa:	mov    rbx,QWORD PTR [rbx]
    50fd:	call   1b10 <dcgettext@plt>
    5102:	sub    rsp,0x8
    5106:	push   r14
    5108:	mov    rdx,rax
    510b:	mov    r9,r13
    510e:	mov    r8,r12
    5111:	mov    rcx,rbx
    5114:	mov    rdi,rbp
    5117:	mov    esi,0x1
    511c:	xor    eax,eax
    511e:	call   1d80 <__fprintf_chk@plt>
    5123:	pop    rax
    5124:	pop    rdx
    5125:	add    rsp,0x28
    5129:	pop    rbx
    512a:	pop    rbp
    512b:	pop    r12
    512d:	pop    r13
    512f:	pop    r14
    5131:	pop    r15
    5133:	ret    
    5134:	nop    DWORD PTR [rax+0x0]
    5138:	mov    r15,QWORD PTR [rbx+0x20]
    513c:	lea    rsi,[rip+0x26f5]        # 7838 <quoting_style_vals@@Base+0x1b8>
    5143:	mov    edx,0x5
    5148:	xor    edi,edi
    514a:	mov    r14,QWORD PTR [rbx+0x18]
    514e:	mov    r13,QWORD PTR [rbx+0x10]
    5152:	mov    r12,QWORD PTR [rbx+0x8]
    5156:	mov    rbx,QWORD PTR [rbx]
    5159:	call   1b10 <dcgettext@plt>
    515e:	push   r15
    5160:	jmp    5106 <__cxa_finalize@plt+0x3336>
    5162:	nop    WORD PTR [rax+rax*1+0x0]
    5168:	mov    r8,QWORD PTR [rbx+0x8]
    516c:	mov    r12,QWORD PTR [rbx+0x28]
    5170:	lea    rsi,[rip+0x26e9]        # 7860 <quoting_style_vals@@Base+0x1e0>
    5177:	mov    r15,QWORD PTR [rbx+0x20]
    517b:	mov    r14,QWORD PTR [rbx+0x18]
    517f:	mov    edx,0x5
    5184:	mov    r13,QWORD PTR [rbx+0x10]
    5188:	xor    edi,edi
    518a:	mov    rbx,QWORD PTR [rbx]
    518d:	mov    QWORD PTR [rsp],r8
    5191:	call   1b10 <dcgettext@plt>
    5196:	sub    rsp,0x8
    519a:	mov    r9,r13
    519d:	push   r12
    519f:	push   r15
    51a1:	push   r14
    51a3:	mov    r8,QWORD PTR [rsp+0x20]
    51a8:	mov    rcx,rbx
    51ab:	mov    rdx,rax
    51ae:	mov    rdi,rbp
    51b1:	mov    esi,0x1
    51b6:	xor    eax,eax
    51b8:	call   1d80 <__fprintf_chk@plt>
    51bd:	add    rsp,0x20
    51c1:	add    rsp,0x28
    51c5:	pop    rbx
    51c6:	pop    rbp
    51c7:	pop    r12
    51c9:	pop    r13
    51cb:	pop    r14
    51cd:	pop    r15
    51cf:	ret    
    51d0:	mov    r9,QWORD PTR [rbx+0x10]
    51d4:	mov    r13,QWORD PTR [rbx+0x30]
    51d8:	lea    rsi,[rip+0x26a9]        # 7888 <quoting_style_vals@@Base+0x208>
    51df:	mov    r12,QWORD PTR [rbx+0x28]
    51e3:	mov    r15,QWORD PTR [rbx+0x20]
    51e7:	mov    edx,0x5
    51ec:	mov    r14,QWORD PTR [rbx+0x18]
    51f0:	mov    r8,QWORD PTR [rbx+0x8]
    51f4:	xor    edi,edi
    51f6:	mov    QWORD PTR [rsp+0x8],r9
    51fb:	mov    rbx,QWORD PTR [rbx]
    51fe:	mov    QWORD PTR [rsp],r8
    5202:	call   1b10 <dcgettext@plt>
    5207:	push   r13
    5209:	push   r12
    520b:	push   r15
    520d:	push   r14
    520f:	mov    r9,QWORD PTR [rsp+0x28]
    5214:	jmp    51a3 <__cxa_finalize@plt+0x33d3>
    5216:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5220:	mov    r10,QWORD PTR [rbx+0x40]
    5224:	mov    r9,QWORD PTR [rbx+0x38]
    5228:	mov    edx,0x5
    522d:	mov    rax,QWORD PTR [rbx+0x10]
    5231:	mov    r8,QWORD PTR [rbx+0x8]
    5235:	lea    rsi,[rip+0x26e4]        # 7920 <quoting_style_vals@@Base+0x2a0>
    523c:	mov    r13,QWORD PTR [rbx+0x30]
    5240:	mov    r12,QWORD PTR [rbx+0x28]
    5244:	mov    r15,QWORD PTR [rbx+0x20]
    5248:	mov    r14,QWORD PTR [rbx+0x18]
    524c:	mov    QWORD PTR [rsp+0x18],r10
    5251:	mov    QWORD PTR [rsp+0x10],r9
    5256:	mov    QWORD PTR [rsp],rax
    525a:	mov    QWORD PTR [rsp+0x8],r8
    525f:	mov    rbx,QWORD PTR [rbx]
    5262:	jmp    4ffa <__cxa_finalize@plt+0x322a>
    5267:	call   1a50 <abort@plt>
    526c:	nop    DWORD PTR [rax+0x0]
    5270:	xor    r9d,r9d
    5273:	cmp    QWORD PTR [r8],0x0
    5277:	je     528b <__cxa_finalize@plt+0x34bb>
    5279:	nop    DWORD PTR [rax+0x0]
    5280:	add    r9,0x1
    5284:	cmp    QWORD PTR [r8+r9*8],0x0
    5289:	jne    5280 <__cxa_finalize@plt+0x34b0>
    528b:	jmp    4e60 <__cxa_finalize@plt+0x3090>
    5290:	sub    rsp,0x68
    5294:	mov    r10,r8
    5297:	xor    r9d,r9d
    529a:	mov    rax,QWORD PTR fs:0x28
    52a3:	mov    QWORD PTR [rsp+0x58],rax
    52a8:	xor    eax,eax
    52aa:	mov    r8,rsp
    52ad:	nop    DWORD PTR [rax]
    52b0:	mov    eax,DWORD PTR [r10]
    52b3:	cmp    eax,0x2f
    52b6:	ja     52fa <__cxa_finalize@plt+0x352a>
    52b8:	mov    r11d,eax
    52bb:	add    r11,QWORD PTR [r10+0x10]
    52bf:	add    eax,0x8
    52c2:	mov    DWORD PTR [r10],eax
    52c5:	mov    rax,QWORD PTR [r11]
    52c8:	test   rax,rax
    52cb:	mov    QWORD PTR [r8+r9*8],rax
    52cf:	je     52db <__cxa_finalize@plt+0x350b>
    52d1:	add    r9,0x1
    52d5:	cmp    r9,0xa
    52d9:	jne    52b0 <__cxa_finalize@plt+0x34e0>
    52db:	call   4e60 <__cxa_finalize@plt+0x3090>
    52e0:	mov    rax,QWORD PTR [rsp+0x58]
    52e5:	xor    rax,QWORD PTR fs:0x28
    52ee:	jne    52f5 <__cxa_finalize@plt+0x3525>
    52f0:	add    rsp,0x68
    52f4:	ret    
    52f5:	call   1b40 <__stack_chk_fail@plt>
    52fa:	mov    r11,QWORD PTR [r10+0x8]
    52fe:	lea    rax,[r11+0x8]
    5302:	mov    QWORD PTR [r10+0x8],rax
    5306:	jmp    52c5 <__cxa_finalize@plt+0x34f5>
    5308:	nop    DWORD PTR [rax+rax*1+0x0]
    5310:	push   rbp
    5311:	push   rbx
    5312:	mov    r10d,0x20
    5318:	xor    r11d,r11d
    531b:	sub    rsp,0xb8
    5322:	mov    rax,QWORD PTR fs:0x28
    532b:	mov    QWORD PTR [rsp+0x78],rax
    5330:	xor    eax,eax
    5332:	lea    rax,[rsp+0xd0]
    533a:	mov    QWORD PTR [rsp+0xa0],r8
    5342:	lea    rbx,[rsp+0xd0]
    534a:	lea    r8,[rsp+0x20]
    534f:	mov    QWORD PTR [rsp+0xa8],r9
    5357:	mov    DWORD PTR [rsp+0x8],0x20
    535f:	mov    QWORD PTR [rsp+0x10],rax
    5364:	lea    rax,[rsp+0x80]
    536c:	xor    r9d,r9d
    536f:	mov    QWORD PTR [rsp+0x18],rax
    5374:	mov    rbp,rax
    5377:	nop    WORD PTR [rax+rax*1+0x0]
    5380:	cmp    r10d,0x2f
    5384:	ja     53dc <__cxa_finalize@plt+0x360c>
    5386:	mov    eax,r10d
    5389:	mov    r11d,0x1
    538f:	add    r10d,0x8
    5393:	add    rax,rbp
    5396:	mov    rax,QWORD PTR [rax]
    5399:	test   rax,rax
    539c:	mov    QWORD PTR [r8+r9*8],rax
    53a0:	je     53ac <__cxa_finalize@plt+0x35dc>
    53a2:	add    r9,0x1
    53a6:	cmp    r9,0xa
    53aa:	jne    5380 <__cxa_finalize@plt+0x35b0>
    53ac:	test   r11b,r11b
    53af:	jne    53d5 <__cxa_finalize@plt+0x3605>
    53b1:	call   4e60 <__cxa_finalize@plt+0x3090>
    53b6:	mov    rax,QWORD PTR [rsp+0x78]
    53bb:	xor    rax,QWORD PTR fs:0x28
    53c4:	jne    53d0 <__cxa_finalize@plt+0x3600>
    53c6:	add    rsp,0xb8
    53cd:	pop    rbx
    53ce:	pop    rbp
    53cf:	ret    
    53d0:	call   1b40 <__stack_chk_fail@plt>
    53d5:	mov    DWORD PTR [rsp+0x8],r10d
    53da:	jmp    53b1 <__cxa_finalize@plt+0x35e1>
    53dc:	mov    rax,rbx
    53df:	add    rbx,0x8
    53e3:	jmp    5396 <__cxa_finalize@plt+0x35c6>
    53e5:	nop
    53e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    53f0:	push   rbx
    53f1:	lea    rsi,[rip+0x230a]        # 7702 <quoting_style_vals@@Base+0x82>
    53f8:	mov    edx,0x5
    53fd:	xor    edi,edi
    53ff:	call   1b10 <dcgettext@plt>
    5404:	lea    rdx,[rip+0x230c]        # 7717 <quoting_style_vals@@Base+0x97>
    540b:	mov    rsi,rax
    540e:	mov    edi,0x1
    5413:	xor    eax,eax
    5415:	call   1d00 <__printf_chk@plt>
    541a:	lea    rsi,[rip+0x230c]        # 772d <quoting_style_vals@@Base+0xad>
    5421:	mov    edx,0x5
    5426:	xor    edi,edi
    5428:	call   1b10 <dcgettext@plt>
    542d:	lea    rcx,[rip+0x1b7c]        # 6fb0 <_IO_stdin_used@@Base+0x8f0>
    5434:	lea    rdx,[rip+0x1317]        # 6752 <_IO_stdin_used@@Base+0x92>
    543b:	mov    rsi,rax
    543e:	mov    edi,0x1
    5443:	xor    eax,eax
    5445:	call   1d00 <__printf_chk@plt>
    544a:	mov    rbx,QWORD PTR [rip+0x204c97]        # 20a0e8 <stdout@@GLIBC_2.2.5>
    5451:	lea    rsi,[rip+0x2508]        # 7960 <quoting_style_vals@@Base+0x2e0>
    5458:	xor    edi,edi
    545a:	mov    edx,0x5
    545f:	call   1b10 <dcgettext@plt>
    5464:	mov    rsi,rbx
    5467:	mov    rdi,rax
    546a:	pop    rbx
    546b:	jmp    1c10 <fputs_unlocked@plt>
    5470:	push   rbx
    5471:	mov    rbx,rdi
    5474:	call   1c60 <malloc@plt>
    5479:	test   rax,rax
    547c:	jne    5483 <__cxa_finalize@plt+0x36b3>
    547e:	test   rbx,rbx
    5481:	jne    5485 <__cxa_finalize@plt+0x36b5>
    5483:	pop    rbx
    5484:	ret    
    5485:	call   56c0 <__cxa_finalize@plt+0x38f0>
    548a:	nop    WORD PTR [rax+rax*1+0x0]
    5490:	mov    rax,rdi
    5493:	mul    rsi
    5496:	mov    rdi,rax
    5499:	seto   al
    549c:	test   rdi,rdi
    549f:	js     54ab <__cxa_finalize@plt+0x36db>
    54a1:	movzx  eax,al
    54a4:	test   rax,rax
    54a7:	jne    54ab <__cxa_finalize@plt+0x36db>
    54a9:	jmp    5470 <__cxa_finalize@plt+0x36a0>
    54ab:	sub    rsp,0x8
    54af:	call   56c0 <__cxa_finalize@plt+0x38f0>
    54b4:	xchg   ax,ax
    54b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    54c0:	jmp    5470 <__cxa_finalize@plt+0x36a0>
    54c2:	nop    DWORD PTR [rax+0x0]
    54c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    54d0:	test   rsi,rsi
    54d3:	push   rbx
    54d4:	mov    rbx,rsi
    54d7:	jne    54de <__cxa_finalize@plt+0x370e>
    54d9:	test   rdi,rdi
    54dc:	jne    54f8 <__cxa_finalize@plt+0x3728>
    54de:	mov    rsi,rbx
    54e1:	call   1cd0 <realloc@plt>
    54e6:	test   rax,rax
    54e9:	jne    54f0 <__cxa_finalize@plt+0x3720>
    54eb:	test   rbx,rbx
    54ee:	jne    5501 <__cxa_finalize@plt+0x3731>
    54f0:	pop    rbx
    54f1:	ret    
    54f2:	nop    WORD PTR [rax+rax*1+0x0]
    54f8:	call   1a40 <free@plt>
    54fd:	xor    eax,eax
    54ff:	pop    rbx
    5500:	ret    
    5501:	call   56c0 <__cxa_finalize@plt+0x38f0>
    5506:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5510:	mov    rax,rsi
    5513:	mul    rdx
    5516:	mov    rsi,rax
    5519:	seto   al
    551c:	test   rsi,rsi
    551f:	js     552b <__cxa_finalize@plt+0x375b>
    5521:	movzx  eax,al
    5524:	test   rax,rax
    5527:	jne    552b <__cxa_finalize@plt+0x375b>
    5529:	jmp    54d0 <__cxa_finalize@plt+0x3700>
    552b:	sub    rsp,0x8
    552f:	call   56c0 <__cxa_finalize@plt+0x38f0>
    5534:	xchg   ax,ax
    5536:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5540:	test   rdi,rdi
    5543:	mov    r9,rdx
    5546:	mov    rcx,QWORD PTR [rsi]
    5549:	je     5580 <__cxa_finalize@plt+0x37b0>
    554b:	xor    edx,edx
    554d:	movabs rax,0x5555555555555554
    5557:	div    r9
    555a:	cmp    rax,rcx
    555d:	jbe    559b <__cxa_finalize@plt+0x37cb>
    555f:	mov    rax,rcx
    5562:	shr    rax,1
    5565:	lea    rcx,[rax+rcx*1+0x1]
    556a:	mov    QWORD PTR [rsi],rcx
    556d:	imul   rcx,r9
    5571:	mov    rsi,rcx
    5574:	jmp    54d0 <__cxa_finalize@plt+0x3700>
    5579:	nop    DWORD PTR [rax+0x0]
    5580:	test   rcx,rcx
    5583:	je     55a8 <__cxa_finalize@plt+0x37d8>
    5585:	mov    rax,rcx
    5588:	mul    r9
    558b:	seto   dl
    558e:	test   rax,rax
    5591:	movzx  edx,dl
    5594:	js     559b <__cxa_finalize@plt+0x37cb>
    5596:	test   rdx,rdx
    5599:	je     556a <__cxa_finalize@plt+0x379a>
    559b:	sub    rsp,0x8
    559f:	call   56c0 <__cxa_finalize@plt+0x38f0>
    55a4:	nop    DWORD PTR [rax+0x0]
    55a8:	xor    edx,edx
    55aa:	mov    eax,0x80
    55af:	xor    r8d,r8d
    55b2:	div    r9
    55b5:	test   rax,rax
    55b8:	sete   r8b
    55bc:	lea    rcx,[r8+rax*1]
    55c0:	jmp    5585 <__cxa_finalize@plt+0x37b5>
    55c2:	nop    DWORD PTR [rax+0x0]
    55c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    55d0:	test   rdi,rdi
    55d3:	mov    rax,QWORD PTR [rsi]
    55d6:	je     5600 <__cxa_finalize@plt+0x3830>
    55d8:	movabs rdx,0x5555555555555553
    55e2:	cmp    rax,rdx
    55e5:	ja     5611 <__cxa_finalize@plt+0x3841>
    55e7:	mov    rdx,rax
    55ea:	shr    rdx,1
    55ed:	lea    rax,[rdx+rax*1+0x1]
    55f2:	mov    QWORD PTR [rsi],rax
    55f5:	mov    rsi,rax
    55f8:	jmp    54d0 <__cxa_finalize@plt+0x3700>
    55fd:	nop    DWORD PTR [rax]
    5600:	test   rax,rax
    5603:	mov    edx,0x80
    5608:	cmove  rax,rdx
    560c:	test   rax,rax
    560f:	jns    55f2 <__cxa_finalize@plt+0x3822>
    5611:	sub    rsp,0x8
    5615:	call   56c0 <__cxa_finalize@plt+0x38f0>
    561a:	nop    WORD PTR [rax+rax*1+0x0]
    5620:	push   rbx
    5621:	mov    rbx,rdi
    5624:	call   5470 <__cxa_finalize@plt+0x36a0>
    5629:	mov    rdx,rbx
    562c:	xor    esi,esi
    562e:	mov    rdi,rax
    5631:	pop    rbx
    5632:	jmp    1bc0 <memset@plt>
    5637:	nop    WORD PTR [rax+rax*1+0x0]
    5640:	mov    rax,rdi
    5643:	sub    rsp,0x8
    5647:	mul    rsi
    564a:	seto   dl
    564d:	test   rax,rax
    5650:	js     5669 <__cxa_finalize@plt+0x3899>
    5652:	movzx  edx,dl
    5655:	test   rdx,rdx
    5658:	jne    5669 <__cxa_finalize@plt+0x3899>
    565a:	call   1c20 <calloc@plt>
    565f:	test   rax,rax
    5662:	je     5669 <__cxa_finalize@plt+0x3899>
    5664:	add    rsp,0x8
    5668:	ret    
    5669:	call   56c0 <__cxa_finalize@plt+0x38f0>
    566e:	xchg   ax,ax
    5670:	push   rbp
    5671:	push   rbx
    5672:	mov    rbp,rdi
    5675:	mov    rdi,rsi
    5678:	mov    rbx,rsi
    567b:	sub    rsp,0x8
    567f:	call   5470 <__cxa_finalize@plt+0x36a0>
    5684:	add    rsp,0x8
    5688:	mov    rdx,rbx
    568b:	mov    rsi,rbp
    568e:	pop    rbx
    568f:	pop    rbp
    5690:	mov    rdi,rax
    5693:	jmp    1c40 <memcpy@plt>
    5698:	nop    DWORD PTR [rax+rax*1+0x0]
    56a0:	push   rbx
    56a1:	mov    rbx,rdi
    56a4:	call   1b30 <strlen@plt>
    56a9:	mov    rdi,rbx
    56ac:	lea    rsi,[rax+0x1]
    56b0:	pop    rbx
    56b1:	jmp    5670 <__cxa_finalize@plt+0x38a0>
    56b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56bd:	nop    DWORD PTR [rax]
    56c0:	lea    rsi,[rip+0x2348]        # 7a0f <version_etc_copyright@@Base+0x2f>
    56c7:	sub    rsp,0x8
    56cb:	mov    edx,0x5
    56d0:	xor    edi,edi
    56d2:	call   1b10 <dcgettext@plt>
    56d7:	mov    edi,DWORD PTR [rip+0x204993]        # 20a070 <exit_failure@@Base>
    56dd:	lea    rdx,[rip+0x1ab0]        # 7194 <_IO_stdin_used@@Base+0xad4>
    56e4:	mov    rcx,rax
    56e7:	xor    esi,esi
    56e9:	xor    eax,eax
    56eb:	call   1d10 <error@plt>
    56f0:	call   1a50 <abort@plt>
    56f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56ff:	nop
    5700:	push   r15
    5702:	push   r14
    5704:	mov    r15,rcx
    5707:	push   r13
    5709:	push   r12
    570b:	mov    r14,rdx
    570e:	push   rbp
    570f:	push   rbx
    5710:	mov    edx,esi
    5712:	xor    esi,esi
    5714:	mov    r12,rdi
    5717:	mov    r13,r9
    571a:	sub    rsp,0x18
    571e:	mov    rcx,rsp
    5721:	mov    ebx,DWORD PTR [rsp+0x50]
    5725:	mov    rax,QWORD PTR fs:0x28
    572e:	mov    QWORD PTR [rsp+0x8],rax
    5733:	xor    eax,eax
    5735:	call   5850 <__cxa_finalize@plt+0x3a80>
    573a:	test   eax,eax
    573c:	jne    57d0 <__cxa_finalize@plt+0x3a00>
    5742:	mov    rbp,QWORD PTR [rsp]
    5746:	cmp    rbp,r14
    5749:	jl     5750 <__cxa_finalize@plt+0x3980>
    574b:	cmp    rbp,r15
    574e:	jle    57a6 <__cxa_finalize@plt+0x39d6>
    5750:	call   1a60 <__errno_location@plt>
    5755:	cmp    rbp,0x3fffffff
    575c:	mov    r14,rax
    575f:	jle    57f0 <__cxa_finalize@plt+0x3a20>
    5765:	mov    DWORD PTR [r14],0x4b
    576c:	mov    rdi,r12
    576f:	call   4e40 <__cxa_finalize@plt+0x3070>
    5774:	mov    esi,DWORD PTR [r14]
    5777:	mov    r8,rax
    577a:	mov    eax,0x0
    577f:	lea    rdx,[rip+0x1a0a]        # 7190 <_IO_stdin_used@@Base+0xad0>
    5786:	mov    rcx,r13
    5789:	cmp    esi,0x16
    578c:	cmove  esi,eax
    578f:	test   ebx,ebx
    5791:	mov    eax,0x1
    5796:	cmove  ebx,eax
    5799:	xor    eax,eax
    579b:	mov    edi,ebx
    579d:	call   1d10 <error@plt>
    57a2:	mov    rbp,QWORD PTR [rsp]
    57a6:	mov    rdx,QWORD PTR [rsp+0x8]
    57ab:	xor    rdx,QWORD PTR fs:0x28
    57b4:	mov    rax,rbp
    57b7:	jne    580c <__cxa_finalize@plt+0x3a3c>
    57b9:	add    rsp,0x18
    57bd:	pop    rbx
    57be:	pop    rbp
    57bf:	pop    r12
    57c1:	pop    r13
    57c3:	pop    r14
    57c5:	pop    r15
    57c7:	ret    
    57c8:	nop    DWORD PTR [rax+rax*1+0x0]
    57d0:	mov    ebp,eax
    57d2:	call   1a60 <__errno_location@plt>
    57d7:	cmp    ebp,0x1
    57da:	mov    r14,rax
    57dd:	je     5765 <__cxa_finalize@plt+0x3995>
    57df:	cmp    ebp,0x3
    57e2:	jne    576c <__cxa_finalize@plt+0x399c>
    57e4:	mov    DWORD PTR [rax],0x0
    57ea:	jmp    576c <__cxa_finalize@plt+0x399c>
    57ec:	nop    DWORD PTR [rax+0x0]
    57f0:	cmp    rbp,0xffffffffbfffffff
    57f7:	mov    eax,0x22
    57fc:	mov    edx,0x4b
    5801:	cmovle eax,edx
    5804:	mov    DWORD PTR [r14],eax
    5807:	jmp    576c <__cxa_finalize@plt+0x399c>
    580c:	call   1b40 <__stack_chk_fail@plt>
    5811:	nop    DWORD PTR [rax+rax*1+0x0]
    5816:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5820:	sub    rsp,0x10
    5824:	push   r9
    5826:	mov    r9,r8
    5829:	mov    r8,rcx
    582c:	mov    rcx,rdx
    582f:	mov    rdx,rsi
    5832:	mov    esi,0xa
    5837:	call   5700 <__cxa_finalize@plt+0x3930>
    583c:	add    rsp,0x18
    5840:	ret    
    5841:	nop    WORD PTR cs:[rax+rax*1+0x0]
    584b:	nop    DWORD PTR [rax+rax*1+0x0]
    5850:	push   r15
    5852:	push   r14
    5854:	push   r13
    5856:	push   r12
    5858:	push   rbp
    5859:	push   rbx
    585a:	sub    rsp,0x28
    585e:	mov    rax,QWORD PTR fs:0x28
    5867:	mov    QWORD PTR [rsp+0x18],rax
    586c:	xor    eax,eax
    586e:	cmp    edx,0x24
    5871:	ja     5edf <__cxa_finalize@plt+0x410f>
    5877:	lea    rax,[rsp+0x10]
    587c:	test   rsi,rsi
    587f:	mov    rbx,rsi
    5882:	mov    r12,rdi
    5885:	mov    ebp,edx
    5887:	mov    r14,rcx
    588a:	cmove  rbx,rax
    588e:	mov    r15,r8
    5891:	call   1a60 <__errno_location@plt>
    5896:	xor    ecx,ecx
    5898:	mov    edx,ebp
    589a:	mov    DWORD PTR [rax],0x0
    58a0:	mov    rsi,rbx
    58a3:	mov    rdi,r12
    58a6:	mov    r13,rax
    58a9:	call   1ad0 <__strtol_internal@plt>
    58ae:	mov    rcx,QWORD PTR [rbx]
    58b1:	mov    rbp,rax
    58b4:	cmp    rcx,r12
    58b7:	je     5918 <__cxa_finalize@plt+0x3b48>
    58b9:	mov    eax,DWORD PTR [r13+0x0]
    58bd:	test   eax,eax
    58bf:	jne    5900 <__cxa_finalize@plt+0x3b30>
    58c1:	xor    r12d,r12d
    58c4:	test   r15,r15
    58c7:	je     58d6 <__cxa_finalize@plt+0x3b06>
    58c9:	movzx  r13d,BYTE PTR [rcx]
    58cd:	test   r13b,r13b
    58d0:	jne    5953 <__cxa_finalize@plt+0x3b83>
    58d6:	mov    QWORD PTR [r14],rbp
    58d9:	mov    rdi,QWORD PTR [rsp+0x18]
    58de:	xor    rdi,QWORD PTR fs:0x28
    58e7:	mov    eax,r12d
    58ea:	jne    5efe <__cxa_finalize@plt+0x412e>
    58f0:	add    rsp,0x28
    58f4:	pop    rbx
    58f5:	pop    rbp
    58f6:	pop    r12
    58f8:	pop    r13
    58fa:	pop    r14
    58fc:	pop    r15
    58fe:	ret    
    58ff:	nop
    5900:	cmp    eax,0x22
    5903:	mov    r12d,0x4
    5909:	jne    58d9 <__cxa_finalize@plt+0x3b09>
    590b:	mov    r12d,0x1
    5911:	jmp    58c4 <__cxa_finalize@plt+0x3af4>
    5913:	nop    DWORD PTR [rax+rax*1+0x0]
    5918:	test   r15,r15
    591b:	je     5db0 <__cxa_finalize@plt+0x3fe0>
    5921:	movzx  r13d,BYTE PTR [rcx]
    5925:	mov    QWORD PTR [rsp+0x8],rcx
    592a:	mov    r12d,0x4
    5930:	test   r13b,r13b
    5933:	je     58d9 <__cxa_finalize@plt+0x3b09>
    5935:	movsx  esi,r13b
    5939:	mov    rdi,r15
    593c:	call   1b70 <strchr@plt>
    5941:	test   rax,rax
    5944:	mov    rcx,QWORD PTR [rsp+0x8]
    5949:	je     58d9 <__cxa_finalize@plt+0x3b09>
    594b:	mov    ebp,0x1
    5950:	xor    r12d,r12d
    5953:	movsx  esi,r13b
    5957:	mov    rdi,r15
    595a:	mov    QWORD PTR [rsp+0x8],rcx
    595f:	call   1b70 <strchr@plt>
    5964:	test   rax,rax
    5967:	mov    rcx,QWORD PTR [rsp+0x8]
    596c:	je     59c8 <__cxa_finalize@plt+0x3bf8>
    596e:	lea    eax,[r13-0x45]
    5972:	cmp    al,0x2f
    5974:	ja     59d8 <__cxa_finalize@plt+0x3c08>
    5976:	movabs rdx,0x814400308945
    5980:	bt     rdx,rax
    5984:	jae    59d8 <__cxa_finalize@plt+0x3c08>
    5986:	mov    esi,0x30
    598b:	mov    rdi,r15
    598e:	mov    QWORD PTR [rsp+0x8],rcx
    5993:	call   1b70 <strchr@plt>
    5998:	test   rax,rax
    599b:	mov    rcx,QWORD PTR [rsp+0x8]
    59a0:	je     59d8 <__cxa_finalize@plt+0x3c08>
    59a2:	movzx  eax,BYTE PTR [rcx+0x1]
    59a6:	cmp    al,0x44
    59a8:	je     59b6 <__cxa_finalize@plt+0x3be6>
    59aa:	cmp    al,0x69
    59ac:	je     5e98 <__cxa_finalize@plt+0x40c8>
    59b2:	cmp    al,0x42
    59b4:	jne    59d8 <__cxa_finalize@plt+0x3c08>
    59b6:	mov    edi,0x2
    59bb:	mov    eax,0x3e8
    59c0:	jmp    59e2 <__cxa_finalize@plt+0x3c12>
    59c2:	nop    WORD PTR [rax+rax*1+0x0]
    59c8:	mov    QWORD PTR [r14],rbp
    59cb:	or     r12d,0x2
    59cf:	jmp    58d9 <__cxa_finalize@plt+0x3b09>
    59d4:	nop    DWORD PTR [rax+0x0]
    59d8:	mov    edi,0x1
    59dd:	mov    eax,0x400
    59e2:	sub    r13d,0x42
    59e6:	cmp    r13b,0x35
    59ea:	ja     59c8 <__cxa_finalize@plt+0x3bf8>
    59ec:	lea    rsi,[rip+0x2065]        # 7a58 <version_etc_copyright@@Base+0x78>
    59f3:	movzx  r13d,r13b
    59f7:	movsxd rdx,DWORD PTR [rsi+r13*4]
    59fb:	add    rdx,rsi
    59fe:	jmp    rdx
    5a00:	movabs r8,0x8000000000000000
    5a0a:	movsxd rsi,eax
    5a0d:	mov    rax,r8
    5a10:	cqo    
    5a12:	idiv   rsi
    5a15:	cmp    rbp,rax
    5a18:	mov    r9,rax
    5a1b:	jl     5ec5 <__cxa_finalize@plt+0x40f5>
    5a21:	movabs r10,0x7fffffffffffffff
    5a2b:	mov    rax,r10
    5a2e:	cqo    
    5a30:	idiv   rsi
    5a33:	cmp    rbp,rax
    5a36:	jg     5ed2 <__cxa_finalize@plt+0x4102>
    5a3c:	imul   rbp,rsi
    5a40:	cmp    r9,rbp
    5a43:	jg     5ec5 <__cxa_finalize@plt+0x40f5>
    5a49:	cmp    rax,rbp
    5a4c:	jl     5ed2 <__cxa_finalize@plt+0x4102>
    5a52:	imul   rbp,rsi
    5a56:	xor    eax,eax
    5a58:	or     r12d,eax
    5a5b:	nop    DWORD PTR [rax+rax*1+0x0]
    5a60:	movsxd rax,edi
    5a63:	add    rcx,rax
    5a66:	mov    eax,r12d
    5a69:	or     eax,0x2
    5a6c:	mov    QWORD PTR [rbx],rcx
    5a6f:	cmp    BYTE PTR [rcx],0x0
    5a72:	cmovne r12d,eax
    5a76:	jmp    58d6 <__cxa_finalize@plt+0x3b06>
    5a7b:	nop    DWORD PTR [rax+rax*1+0x0]
    5a80:	movabs rax,0xc000000000000000
    5a8a:	cmp    rbp,rax
    5a8d:	jl     5dc0 <__cxa_finalize@plt+0x3ff0>
    5a93:	movabs rax,0x3fffffffffffffff
    5a9d:	cmp    rbp,rax
    5aa0:	jg     5e80 <__cxa_finalize@plt+0x40b0>
    5aa6:	add    rbp,rbp
    5aa9:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5aab:	nop    DWORD PTR [rax+rax*1+0x0]
    5ab0:	movabs rax,0xffc0000000000000
    5aba:	cmp    rbp,rax
    5abd:	jl     5dc0 <__cxa_finalize@plt+0x3ff0>
    5ac3:	movabs rax,0x3fffffffffffff
    5acd:	cmp    rbp,rax
    5ad0:	jg     5e80 <__cxa_finalize@plt+0x40b0>
    5ad6:	shl    rbp,0x9
    5ada:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5adc:	nop    DWORD PTR [rax+0x0]
    5ae0:	movsxd rsi,eax
    5ae3:	movabs rax,0x8000000000000000
    5aed:	mov    r8d,0x7
    5af3:	cqo    
    5af5:	xor    r11d,r11d
    5af8:	movabs r9,0x7fffffffffffffff
    5b02:	idiv   rsi
    5b05:	mov    r10,rax
    5b08:	jmp    5b2f <__cxa_finalize@plt+0x3d5f>
    5b0a:	nop    WORD PTR [rax+rax*1+0x0]
    5b10:	mov    rax,r9
    5b13:	cqo    
    5b15:	idiv   rsi
    5b18:	cmp    rax,rbp
    5b1b:	jl     5e08 <__cxa_finalize@plt+0x4038>
    5b21:	imul   rbp,rsi
    5b25:	sub    r8d,0x1
    5b29:	je     5c50 <__cxa_finalize@plt+0x3e80>
    5b2f:	cmp    r10,rbp
    5b32:	jle    5b10 <__cxa_finalize@plt+0x3d40>
    5b34:	mov    r11d,0x1
    5b3a:	movabs rbp,0x8000000000000000
    5b44:	jmp    5b25 <__cxa_finalize@plt+0x3d55>
    5b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5b50:	movsxd rsi,eax
    5b53:	movabs rax,0x8000000000000000
    5b5d:	mov    r8d,0x8
    5b63:	cqo    
    5b65:	xor    r11d,r11d
    5b68:	movabs r9,0x7fffffffffffffff
    5b72:	idiv   rsi
    5b75:	mov    r10,rax
    5b78:	jmp    5b9f <__cxa_finalize@plt+0x3dcf>
    5b7a:	nop    WORD PTR [rax+rax*1+0x0]
    5b80:	mov    rax,r9
    5b83:	cqo    
    5b85:	idiv   rsi
    5b88:	cmp    rax,rbp
    5b8b:	jl     5dd8 <__cxa_finalize@plt+0x4008>
    5b91:	imul   rbp,rsi
    5b95:	sub    r8d,0x1
    5b99:	je     5c50 <__cxa_finalize@plt+0x3e80>
    5b9f:	cmp    r10,rbp
    5ba2:	jle    5b80 <__cxa_finalize@plt+0x3db0>
    5ba4:	mov    r11d,0x1
    5baa:	movabs rbp,0x8000000000000000
    5bb4:	jmp    5b95 <__cxa_finalize@plt+0x3dc5>
    5bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5bc0:	movabs r8,0x8000000000000000
    5bca:	movsxd rsi,eax
    5bcd:	mov    rax,r8
    5bd0:	cqo    
    5bd2:	idiv   rsi
    5bd5:	cmp    rbp,rax
    5bd8:	jl     5dc0 <__cxa_finalize@plt+0x3ff0>
    5bde:	sub    r8,0x1
    5be2:	mov    rax,r8
    5be5:	cqo    
    5be7:	idiv   rsi
    5bea:	cmp    rbp,rax
    5bed:	jg     5e80 <__cxa_finalize@plt+0x40b0>
    5bf3:	imul   rbp,rsi
    5bf7:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5bfc:	nop    DWORD PTR [rax+0x0]
    5c00:	movsxd rsi,eax
    5c03:	movabs rax,0x8000000000000000
    5c0d:	mov    r8d,0x3
    5c13:	cqo    
    5c15:	xor    r11d,r11d
    5c18:	movabs r9,0x7fffffffffffffff
    5c22:	idiv   rsi
    5c25:	mov    r10,rax
    5c28:	cmp    r10,rbp
    5c2b:	jg     5e20 <__cxa_finalize@plt+0x4050>
    5c31:	mov    rax,r9
    5c34:	cqo    
    5c36:	idiv   rsi
    5c39:	cmp    rax,rbp
    5c3c:	jl     5eb0 <__cxa_finalize@plt+0x40e0>
    5c42:	imul   rbp,rsi
    5c46:	sub    r8d,0x1
    5c4a:	jne    5c28 <__cxa_finalize@plt+0x3e58>
    5c4c:	nop    DWORD PTR [rax+0x0]
    5c50:	or     r12d,r11d
    5c53:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5c58:	nop    DWORD PTR [rax+rax*1+0x0]
    5c60:	movsxd rsi,eax
    5c63:	movabs rax,0x8000000000000000
    5c6d:	mov    r8d,0x6
    5c73:	cqo    
    5c75:	xor    r11d,r11d
    5c78:	movabs r9,0x7fffffffffffffff
    5c82:	idiv   rsi
    5c85:	mov    r10,rax
    5c88:	jmp    5cab <__cxa_finalize@plt+0x3edb>
    5c8a:	nop    WORD PTR [rax+rax*1+0x0]
    5c90:	mov    rax,r9
    5c93:	cqo    
    5c95:	idiv   rsi
    5c98:	cmp    rax,rbp
    5c9b:	jl     5e38 <__cxa_finalize@plt+0x4068>
    5ca1:	imul   rbp,rsi
    5ca5:	sub    r8d,0x1
    5ca9:	je     5c50 <__cxa_finalize@plt+0x3e80>
    5cab:	cmp    r10,rbp
    5cae:	jle    5c90 <__cxa_finalize@plt+0x3ec0>
    5cb0:	mov    r11d,0x1
    5cb6:	movabs rbp,0x8000000000000000
    5cc0:	jmp    5ca5 <__cxa_finalize@plt+0x3ed5>
    5cc2:	nop    WORD PTR [rax+rax*1+0x0]
    5cc8:	movsxd rsi,eax
    5ccb:	movabs rax,0x8000000000000000
    5cd5:	mov    r8d,0x5
    5cdb:	cqo    
    5cdd:	xor    r11d,r11d
    5ce0:	movabs r9,0x7fffffffffffffff
    5cea:	idiv   rsi
    5ced:	mov    r10,rax
    5cf0:	jmp    5d17 <__cxa_finalize@plt+0x3f47>
    5cf2:	nop    WORD PTR [rax+rax*1+0x0]
    5cf8:	mov    rax,r9
    5cfb:	cqo    
    5cfd:	idiv   rsi
    5d00:	cmp    rax,rbp
    5d03:	jl     5e50 <__cxa_finalize@plt+0x4080>
    5d09:	imul   rbp,rsi
    5d0d:	sub    r8d,0x1
    5d11:	je     5c50 <__cxa_finalize@plt+0x3e80>
    5d17:	cmp    r10,rbp
    5d1a:	jle    5cf8 <__cxa_finalize@plt+0x3f28>
    5d1c:	mov    r11d,0x1
    5d22:	movabs rbp,0x8000000000000000
    5d2c:	jmp    5d0d <__cxa_finalize@plt+0x3f3d>
    5d2e:	xchg   ax,ax
    5d30:	movabs rax,0xffe0000000000000
    5d3a:	cmp    rbp,rax
    5d3d:	jl     5dc0 <__cxa_finalize@plt+0x3ff0>
    5d43:	movabs rax,0x1fffffffffffff
    5d4d:	cmp    rbp,rax
    5d50:	jg     5e80 <__cxa_finalize@plt+0x40b0>
    5d56:	shl    rbp,0xa
    5d5a:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5d5f:	nop
    5d60:	movsxd rsi,eax
    5d63:	movabs rax,0x8000000000000000
    5d6d:	mov    r8d,0x4
    5d73:	cqo    
    5d75:	xor    r11d,r11d
    5d78:	movabs r9,0x7fffffffffffffff
    5d82:	idiv   rsi
    5d85:	mov    r10,rax
    5d88:	cmp    r10,rbp
    5d8b:	jg     5df0 <__cxa_finalize@plt+0x4020>
    5d8d:	mov    rax,r9
    5d90:	cqo    
    5d92:	idiv   rsi
    5d95:	cmp    rax,rbp
    5d98:	jl     5e68 <__cxa_finalize@plt+0x4098>
    5d9e:	imul   rbp,rsi
    5da2:	sub    r8d,0x1
    5da6:	jne    5d88 <__cxa_finalize@plt+0x3fb8>
    5da8:	jmp    5c50 <__cxa_finalize@plt+0x3e80>
    5dad:	nop    DWORD PTR [rax]
    5db0:	mov    r12d,0x4
    5db6:	jmp    58d9 <__cxa_finalize@plt+0x3b09>
    5dbb:	nop    DWORD PTR [rax+rax*1+0x0]
    5dc0:	mov    r12d,0x1
    5dc6:	movabs rbp,0x8000000000000000
    5dd0:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5dd5:	nop    DWORD PTR [rax]
    5dd8:	mov    r11d,0x1
    5dde:	movabs rbp,0x7fffffffffffffff
    5de8:	jmp    5b95 <__cxa_finalize@plt+0x3dc5>
    5ded:	nop    DWORD PTR [rax]
    5df0:	mov    r11d,0x1
    5df6:	movabs rbp,0x8000000000000000
    5e00:	jmp    5da2 <__cxa_finalize@plt+0x3fd2>
    5e02:	nop    WORD PTR [rax+rax*1+0x0]
    5e08:	mov    r11d,0x1
    5e0e:	movabs rbp,0x7fffffffffffffff
    5e18:	jmp    5b25 <__cxa_finalize@plt+0x3d55>
    5e1d:	nop    DWORD PTR [rax]
    5e20:	mov    r11d,0x1
    5e26:	movabs rbp,0x8000000000000000
    5e30:	jmp    5c46 <__cxa_finalize@plt+0x3e76>
    5e35:	nop    DWORD PTR [rax]
    5e38:	mov    r11d,0x1
    5e3e:	movabs rbp,0x7fffffffffffffff
    5e48:	jmp    5ca5 <__cxa_finalize@plt+0x3ed5>
    5e4d:	nop    DWORD PTR [rax]
    5e50:	mov    r11d,0x1
    5e56:	movabs rbp,0x7fffffffffffffff
    5e60:	jmp    5d0d <__cxa_finalize@plt+0x3f3d>
    5e65:	nop    DWORD PTR [rax]
    5e68:	mov    r11d,0x1
    5e6e:	movabs rbp,0x7fffffffffffffff
    5e78:	jmp    5da2 <__cxa_finalize@plt+0x3fd2>
    5e7d:	nop    DWORD PTR [rax]
    5e80:	mov    r12d,0x1
    5e86:	movabs rbp,0x7fffffffffffffff
    5e90:	jmp    5a60 <__cxa_finalize@plt+0x3c90>
    5e95:	nop    DWORD PTR [rax]
    5e98:	xor    edi,edi
    5e9a:	cmp    BYTE PTR [rcx+0x2],0x42
    5e9e:	mov    eax,0x400
    5ea3:	sete   dil
    5ea7:	lea    edi,[rdi+rdi*1+0x1]
    5eab:	jmp    59e2 <__cxa_finalize@plt+0x3c12>
    5eb0:	mov    r11d,0x1
    5eb6:	movabs rbp,0x7fffffffffffffff
    5ec0:	jmp    5c46 <__cxa_finalize@plt+0x3e76>
    5ec5:	mov    eax,0x1
    5eca:	mov    rbp,r8
    5ecd:	jmp    5a58 <__cxa_finalize@plt+0x3c88>
    5ed2:	mov    eax,0x1
    5ed7:	mov    rbp,r10
    5eda:	jmp    5a58 <__cxa_finalize@plt+0x3c88>
    5edf:	lea    rcx,[rip+0x1c4a]        # 7b30 <version_etc_copyright@@Base+0x150>
    5ee6:	lea    rsi,[rip+0x1b33]        # 7a20 <version_etc_copyright@@Base+0x40>
    5eed:	lea    rdi,[rip+0x1b3c]        # 7a30 <version_etc_copyright@@Base+0x50>
    5ef4:	mov    edx,0x60
    5ef9:	call   1bb0 <__assert_fail@plt>
    5efe:	call   1b40 <__stack_chk_fail@plt>
    5f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5f0d:	nop    DWORD PTR [rax]
    5f10:	push   r12
    5f12:	push   rbp
    5f13:	push   rbx
    5f14:	mov    rbx,rdi
    5f17:	call   1c50 <fileno@plt>
    5f1c:	test   eax,eax
    5f1e:	mov    rdi,rbx
    5f21:	js     5f77 <__cxa_finalize@plt+0x41a7>
    5f23:	call   1cb0 <__freading@plt>
    5f28:	test   eax,eax
    5f2a:	jne    5f58 <__cxa_finalize@plt+0x4188>
    5f2c:	mov    rdi,rbx
    5f2f:	call   5f90 <__cxa_finalize@plt+0x41c0>
    5f34:	test   eax,eax
    5f36:	je     5f74 <__cxa_finalize@plt+0x41a4>
    5f38:	call   1a60 <__errno_location@plt>
    5f3d:	mov    r12d,DWORD PTR [rax]
    5f40:	mov    rdi,rbx
    5f43:	mov    rbp,rax
    5f46:	call   1ae0 <fclose@plt>
    5f4b:	test   r12d,r12d
    5f4e:	jne    5f80 <__cxa_finalize@plt+0x41b0>
    5f50:	pop    rbx
    5f51:	pop    rbp
    5f52:	pop    r12
    5f54:	ret    
    5f55:	nop    DWORD PTR [rax]
    5f58:	mov    rdi,rbx
    5f5b:	call   1c50 <fileno@plt>
    5f60:	xor    esi,esi
    5f62:	mov    edx,0x1
    5f67:	mov    edi,eax
    5f69:	call   1ba0 <lseek@plt>
    5f6e:	cmp    rax,0xffffffffffffffff
    5f72:	jne    5f2c <__cxa_finalize@plt+0x415c>
    5f74:	mov    rdi,rbx
    5f77:	pop    rbx
    5f78:	pop    rbp
    5f79:	pop    r12
    5f7b:	jmp    1ae0 <fclose@plt>
    5f80:	mov    DWORD PTR [rbp+0x0],r12d
    5f84:	mov    eax,0xffffffff
    5f89:	jmp    5f50 <__cxa_finalize@plt+0x4180>
    5f8b:	nop    DWORD PTR [rax+rax*1+0x0]
    5f90:	test   rdi,rdi
    5f93:	push   rbx
    5f94:	mov    rbx,rdi
    5f97:	je     5faa <__cxa_finalize@plt+0x41da>
    5f99:	call   1cb0 <__freading@plt>
    5f9e:	test   eax,eax
    5fa0:	je     5faa <__cxa_finalize@plt+0x41da>
    5fa2:	test   DWORD PTR [rbx],0x100
    5fa8:	jne    5fb8 <__cxa_finalize@plt+0x41e8>
    5faa:	mov    rdi,rbx
    5fad:	pop    rbx
    5fae:	jmp    1c70 <fflush@plt>
    5fb3:	nop    DWORD PTR [rax+rax*1+0x0]
    5fb8:	mov    rdi,rbx
    5fbb:	mov    edx,0x1
    5fc0:	xor    esi,esi
    5fc2:	call   5fd0 <__cxa_finalize@plt+0x4200>
    5fc7:	mov    rdi,rbx
    5fca:	pop    rbx
    5fcb:	jmp    1c70 <fflush@plt>
    5fd0:	mov    rax,QWORD PTR [rdi+0x8]
    5fd4:	cmp    QWORD PTR [rdi+0x10],rax
    5fd8:	je     5fe0 <__cxa_finalize@plt+0x4210>
    5fda:	jmp    1d30 <fseeko@plt>
    5fdf:	nop
    5fe0:	mov    rax,QWORD PTR [rdi+0x20]
    5fe4:	cmp    QWORD PTR [rdi+0x28],rax
    5fe8:	jne    5fda <__cxa_finalize@plt+0x420a>
    5fea:	cmp    QWORD PTR [rdi+0x48],0x0
    5fef:	jne    5fda <__cxa_finalize@plt+0x420a>
    5ff1:	push   r12
    5ff3:	push   rbp
    5ff4:	mov    r12d,edx
    5ff7:	push   rbx
    5ff8:	mov    rbp,rsi
    5ffb:	mov    rbx,rdi
    5ffe:	call   1c50 <fileno@plt>
    6003:	mov    edx,r12d
    6006:	mov    rsi,rbp
    6009:	mov    edi,eax
    600b:	call   1ba0 <lseek@plt>
    6010:	cmp    rax,0xffffffffffffffff
    6014:	je     6022 <__cxa_finalize@plt+0x4252>
    6016:	and    DWORD PTR [rbx],0xffffffef
    6019:	mov    QWORD PTR [rbx+0x90],rax
    6020:	xor    eax,eax
    6022:	pop    rbx
    6023:	pop    rbp
    6024:	pop    r12
    6026:	ret    
    6027:	nop    WORD PTR [rax+rax*1+0x0]
    6030:	push   r13
    6032:	push   r12
    6034:	mov    r13,rsi
    6037:	push   rbp
    6038:	push   rbx
    6039:	mov    rbx,rdi
    603c:	mov    r12,rdx
    603f:	sub    rsp,0x18
    6043:	mov    rax,QWORD PTR fs:0x28
    604c:	mov    QWORD PTR [rsp+0x8],rax
    6051:	xor    eax,eax
    6053:	lea    rax,[rsp+0x4]
    6058:	test   rdi,rdi
    605b:	cmove  rbx,rax
    605f:	mov    rdi,rbx
    6062:	call   1b60 <mbrtowc@plt>
    6067:	cmp    rax,0xfffffffffffffffd
    606b:	mov    rbp,rax
    606e:	jbe    6090 <__cxa_finalize@plt+0x42c0>
    6070:	test   r12,r12
    6073:	je     6090 <__cxa_finalize@plt+0x42c0>
    6075:	xor    edi,edi
    6077:	call   6140 <__cxa_finalize@plt+0x4370>
    607c:	test   al,al
    607e:	jne    6090 <__cxa_finalize@plt+0x42c0>
    6080:	movzx  eax,BYTE PTR [r13+0x0]
    6085:	mov    ebp,0x1
    608a:	mov    DWORD PTR [rbx],eax
    608c:	nop    DWORD PTR [rax+0x0]
    6090:	mov    rdx,QWORD PTR [rsp+0x8]
    6095:	xor    rdx,QWORD PTR fs:0x28
    609e:	mov    rax,rbp
    60a1:	jne    60ae <__cxa_finalize@plt+0x42de>
    60a3:	add    rsp,0x18
    60a7:	pop    rbx
    60a8:	pop    rbp
    60a9:	pop    r12
    60ab:	pop    r13
    60ad:	ret    
    60ae:	call   1b40 <__stack_chk_fail@plt>
    60b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    60bd:	nop    DWORD PTR [rax]
    60c0:	push   r12
    60c2:	push   rbp
    60c3:	mov    rbp,rdi
    60c6:	push   rbx
    60c7:	call   1aa0 <__fpending@plt>
    60cc:	mov    ebx,DWORD PTR [rbp+0x0]
    60cf:	mov    rdi,rbp
    60d2:	mov    r12,rax
    60d5:	call   5f10 <__cxa_finalize@plt+0x4140>
    60da:	and    ebx,0x20
    60dd:	test   ebx,ebx
    60df:	jne    60f8 <__cxa_finalize@plt+0x4328>
    60e1:	test   eax,eax
    60e3:	je     60ef <__cxa_finalize@plt+0x431f>
    60e5:	test   r12,r12
    60e8:	mov    eax,0xffffffff
    60ed:	je     6128 <__cxa_finalize@plt+0x4358>
    60ef:	pop    rbx
    60f0:	pop    rbp
    60f1:	pop    r12
    60f3:	ret    
    60f4:	nop    DWORD PTR [rax+0x0]
    60f8:	test   eax,eax
    60fa:	jne    6118 <__cxa_finalize@plt+0x4348>
    60fc:	call   1a60 <__errno_location@plt>
    6101:	mov    DWORD PTR [rax],0x0
    6107:	mov    eax,0xffffffff
    610c:	pop    rbx
    610d:	pop    rbp
    610e:	pop    r12
    6110:	ret    
    6111:	nop    DWORD PTR [rax+0x0]
    6118:	pop    rbx
    6119:	mov    eax,0xffffffff
    611e:	pop    rbp
    611f:	pop    r12
    6121:	ret    
    6122:	nop    WORD PTR [rax+rax*1+0x0]
    6128:	call   1a60 <__errno_location@plt>
    612d:	cmp    DWORD PTR [rax],0x9
    6130:	pop    rbx
    6131:	pop    rbp
    6132:	pop    r12
    6134:	setne  al
    6137:	movzx  eax,al
    613a:	neg    eax
    613c:	ret    
    613d:	nop    DWORD PTR [rax]
    6140:	sub    rsp,0x8
    6144:	xor    esi,esi
    6146:	call   1cf0 <setlocale@plt>
    614b:	mov    rdx,rax
    614e:	mov    eax,0x1
    6153:	test   rdx,rdx
    6156:	je     6177 <__cxa_finalize@plt+0x43a7>
    6158:	lea    rdi,[rip+0x19dc]        # 7b3b <version_etc_copyright@@Base+0x15b>
    615f:	mov    ecx,0x2
    6164:	mov    rsi,rdx
    6167:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6169:	seta   sil
    616d:	setb   cl
    6170:	xor    eax,eax
    6172:	cmp    sil,cl
    6175:	jne    6180 <__cxa_finalize@plt+0x43b0>
    6177:	add    rsp,0x8
    617b:	ret    
    617c:	nop    DWORD PTR [rax+0x0]
    6180:	lea    rdi,[rip+0x19b6]        # 7b3d <version_etc_copyright@@Base+0x15d>
    6187:	mov    ecx,0x6
    618c:	mov    rsi,rdx
    618f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6191:	setne  al
    6194:	add    rsp,0x8
    6198:	ret    
    6199:	nop    DWORD PTR [rax+0x0]
    61a0:	push   r15
    61a2:	push   r14
    61a4:	mov    edi,0xe
    61a9:	push   r13
    61ab:	push   r12
    61ad:	push   rbp
    61ae:	push   rbx
    61af:	sub    rsp,0xa8
    61b6:	mov    rax,QWORD PTR fs:0x28
    61bf:	mov    QWORD PTR [rsp+0x98],rax
    61c7:	xor    eax,eax
    61c9:	call   1c80 <nl_langinfo@plt>
    61ce:	mov    r15,QWORD PTR [rip+0x204503]        # 20a6d8 <program_name@@Base+0x140>
    61d5:	test   rax,rax
    61d8:	mov    rbx,rax
    61db:	lea    rax,[rip+0x6ca]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    61e2:	cmove  rbx,rax
    61e6:	test   r15,r15
    61e9:	jne    620a <__cxa_finalize@plt+0x443a>
    61eb:	jmp    6280 <__cxa_finalize@plt+0x44b0>
    61f0:	mov    rdi,r15
    61f3:	call   1b30 <strlen@plt>
    61f8:	lea    rbp,[r15+rax*1+0x1]
    61fd:	mov    rdi,rbp
    6200:	call   1b30 <strlen@plt>
    6205:	lea    r15,[rbp+rax*1+0x1]
    620a:	movzx  ebp,BYTE PTR [r15]
    620e:	test   bpl,bpl
    6211:	je     623c <__cxa_finalize@plt+0x446c>
    6213:	mov    rsi,r15
    6216:	mov    rdi,rbx
    6219:	call   1c30 <strcmp@plt>
    621e:	test   eax,eax
    6220:	je     622f <__cxa_finalize@plt+0x445f>
    6222:	cmp    bpl,0x2a
    6226:	jne    61f0 <__cxa_finalize@plt+0x4420>
    6228:	cmp    BYTE PTR [r15+0x1],0x0
    622d:	jne    61f0 <__cxa_finalize@plt+0x4420>
    622f:	mov    rdi,r15
    6232:	call   1b30 <strlen@plt>
    6237:	lea    rbx,[r15+rax*1+0x1]
    623c:	cmp    BYTE PTR [rbx],0x0
    623f:	lea    rax,[rip+0x18fd]        # 7b43 <version_etc_copyright@@Base+0x163>
    6246:	cmove  rbx,rax
    624a:	mov    rcx,QWORD PTR [rsp+0x98]
    6252:	xor    rcx,QWORD PTR fs:0x28
    625b:	mov    rax,rbx
    625e:	jne    65dc <__cxa_finalize@plt+0x480c>
    6264:	add    rsp,0xa8
    626b:	pop    rbx
    626c:	pop    rbp
    626d:	pop    r12
    626f:	pop    r13
    6271:	pop    r14
    6273:	pop    r15
    6275:	ret    
    6276:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6280:	lea    rdi,[rip+0x18dc]        # 7b63 <version_etc_copyright@@Base+0x183>
    6287:	call   1a30 <getenv@plt>
    628c:	test   rax,rax
    628f:	mov    r13,rax
    6292:	je     62e0 <__cxa_finalize@plt+0x4510>
    6294:	cmp    BYTE PTR [rax],0x0
    6297:	je     62e0 <__cxa_finalize@plt+0x4510>
    6299:	mov    rdi,rax
    629c:	call   1b30 <strlen@plt>
    62a1:	test   rax,rax
    62a4:	mov    r12,rax
    62a7:	mov    r14,rax
    62aa:	jne    65cb <__cxa_finalize@plt+0x47fb>
    62b0:	mov    edi,0xe
    62b5:	call   1c60 <malloc@plt>
    62ba:	test   rax,rax
    62bd:	mov    rbp,rax
    62c0:	jne    6368 <__cxa_finalize@plt+0x4598>
    62c6:	lea    r15,[rip+0x5df]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    62cd:	mov    QWORD PTR [rip+0x204404],r15        # 20a6d8 <program_name@@Base+0x140>
    62d4:	jmp    620a <__cxa_finalize@plt+0x443a>
    62d9:	nop    DWORD PTR [rax+0x0]
    62e0:	lea    r13,[rip+0x1862]        # 7b49 <version_etc_copyright@@Base+0x169>
    62e7:	mov    edi,0x28
    62ec:	mov    r12d,0x1a
    62f2:	mov    r14d,0x19
    62f8:	call   1c60 <malloc@plt>
    62fd:	test   rax,rax
    6300:	mov    rbp,rax
    6303:	je     62c6 <__cxa_finalize@plt+0x44f6>
    6305:	mov    rdx,r14
    6308:	mov    rsi,r13
    630b:	mov    rdi,rbp
    630e:	call   1c40 <memcpy@plt>
    6313:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    6319:	add    r12,rbp
    631c:	movabs rax,0x2e74657372616863
    6326:	mov    esi,0x20000
    632b:	mov    QWORD PTR [r12],rax
    632f:	mov    eax,0x73
    6334:	mov    DWORD PTR [r12+0x8],0x61696c61
    633d:	mov    WORD PTR [r12+0xc],ax
    6343:	mov    rdi,rbp
    6346:	xor    eax,eax
    6348:	call   1d20 <open@plt>
    634d:	test   eax,eax
    634f:	mov    r12d,eax
    6352:	jns    6378 <__cxa_finalize@plt+0x45a8>
    6354:	lea    r15,[rip+0x551]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    635b:	mov    rdi,rbp
    635e:	call   1a40 <free@plt>
    6363:	jmp    62cd <__cxa_finalize@plt+0x44fd>
    6368:	mov    rdx,r14
    636b:	mov    rsi,r13
    636e:	mov    rdi,rbp
    6371:	call   1c40 <memcpy@plt>
    6376:	jmp    6319 <__cxa_finalize@plt+0x4549>
    6378:	lea    rsi,[rip+0x412]        # 6791 <_IO_stdin_used@@Base+0xd1>
    637f:	mov    edi,eax
    6381:	xor    r15d,r15d
    6384:	call   1ce0 <fdopen@plt>
    6389:	test   rax,rax
    638c:	mov    r14,rax
    638f:	mov    QWORD PTR [rsp],0x0
    6397:	je     6573 <__cxa_finalize@plt+0x47a3>
    639d:	lea    rax,[rsp+0x60]
    63a2:	mov    QWORD PTR [rsp+0x8],rax
    63a7:	lea    rax,[rsp+0x20]
    63ac:	mov    QWORD PTR [rsp+0x10],rax
    63b1:	mov    rax,QWORD PTR [r14+0x8]
    63b5:	cmp    rax,QWORD PTR [r14+0x10]
    63b9:	jae    650a <__cxa_finalize@plt+0x473a>
    63bf:	lea    rdx,[rax+0x1]
    63c3:	mov    QWORD PTR [r14+0x8],rdx
    63c7:	movzx  edi,BYTE PTR [rax]
    63ca:	lea    eax,[rdi-0x9]
    63cd:	cmp    eax,0x1
    63d0:	jbe    63b1 <__cxa_finalize@plt+0x45e1>
    63d2:	cmp    edi,0x20
    63d5:	je     63b1 <__cxa_finalize@plt+0x45e1>
    63d7:	cmp    edi,0x23
    63da:	je     6559 <__cxa_finalize@plt+0x4789>
    63e0:	mov    rsi,r14
    63e3:	call   1c90 <ungetc@plt>
    63e8:	mov    r13,QWORD PTR [rsp+0x10]
    63ed:	mov    rcx,QWORD PTR [rsp+0x8]
    63f2:	lea    rsi,[rip+0x177a]        # 7b73 <version_etc_copyright@@Base+0x193>
    63f9:	xor    eax,eax
    63fb:	mov    rdi,r14
    63fe:	mov    rdx,r13
    6401:	call   1bd0 <fscanf@plt>
    6406:	cmp    eax,0x1
    6409:	jle    651d <__cxa_finalize@plt+0x474d>
    640f:	mov    rdx,r13
    6412:	mov    ecx,DWORD PTR [rdx]
    6414:	add    rdx,0x4
    6418:	lea    eax,[rcx-0x1010101]
    641e:	not    ecx
    6420:	and    eax,ecx
    6422:	and    eax,0x80808080
    6427:	je     6412 <__cxa_finalize@plt+0x4642>
    6429:	mov    ecx,eax
    642b:	mov    r13,QWORD PTR [rsp+0x8]
    6430:	shr    ecx,0x10
    6433:	test   eax,0x8080
    6438:	cmove  eax,ecx
    643b:	lea    rcx,[rdx+0x2]
    643f:	cmove  rdx,rcx
    6443:	mov    ecx,eax
    6445:	add    cl,al
    6447:	sbb    rdx,0x3
    644b:	sub    rdx,QWORD PTR [rsp+0x10]
    6450:	mov    esi,DWORD PTR [r13+0x0]
    6454:	add    r13,0x4
    6458:	lea    eax,[rsi-0x1010101]
    645e:	not    esi
    6460:	and    eax,esi
    6462:	and    eax,0x80808080
    6467:	je     6450 <__cxa_finalize@plt+0x4680>
    6469:	mov    esi,eax
    646b:	mov    QWORD PTR [rsp+0x18],rdx
    6470:	shr    esi,0x10
    6473:	test   eax,0x8080
    6478:	cmove  eax,esi
    647b:	lea    rsi,[r13+0x2]
    647f:	mov    ecx,eax
    6481:	cmove  r13,rsi
    6485:	add    cl,al
    6487:	sbb    r13,0x3
    648b:	sub    r13,QWORD PTR [rsp+0x8]
    6490:	cmp    QWORD PTR [rsp],0x0
    6495:	lea    rax,[rdx+r13*1]
    6499:	jne    658a <__cxa_finalize@plt+0x47ba>
    649f:	lea    rcx,[rax+0x2]
    64a3:	lea    rdi,[rax+0x3]
    64a7:	mov    QWORD PTR [rsp],rcx
    64ab:	call   1c60 <malloc@plt>
    64b0:	mov    rdx,QWORD PTR [rsp+0x18]
    64b5:	mov    r12,rax
    64b8:	test   r12,r12
    64bb:	je     65af <__cxa_finalize@plt+0x47df>
    64c1:	mov    r15,QWORD PTR [rsp]
    64c5:	mov    rdi,0xfffffffffffffffe
    64cc:	mov    rsi,QWORD PTR [rsp+0x10]
    64d1:	sub    rdi,rdx
    64d4:	add    rdx,0x1
    64d8:	sub    r15,r13
    64db:	add    rdi,r15
    64de:	add    rdi,r12
    64e1:	call   1c40 <memcpy@plt>
    64e6:	mov    rsi,QWORD PTR [rsp+0x8]
    64eb:	lea    rdi,[r12+r15*1-0x1]
    64f0:	lea    rdx,[r13+0x1]
    64f4:	mov    r15,r12
    64f7:	call   1c40 <memcpy@plt>
    64fc:	mov    rax,QWORD PTR [r14+0x8]
    6500:	cmp    rax,QWORD PTR [r14+0x10]
    6504:	jb     63bf <__cxa_finalize@plt+0x45ef>
    650a:	mov    rdi,r14
    650d:	call   1a20 <__uflow@plt>
    6512:	cmp    eax,0xffffffff
    6515:	mov    edi,eax
    6517:	jne    63ca <__cxa_finalize@plt+0x45fa>
    651d:	mov    rdi,r14
    6520:	call   5f10 <__cxa_finalize@plt+0x4140>
    6525:	mov    rax,QWORD PTR [rsp]
    6529:	test   rax,rax
    652c:	je     6354 <__cxa_finalize@plt+0x4584>
    6532:	mov    BYTE PTR [r15+rax*1],0x0
    6537:	jmp    635b <__cxa_finalize@plt+0x458b>
    653c:	nop    DWORD PTR [rax+0x0]
    6540:	lea    rdx,[rax+0x1]
    6544:	mov    QWORD PTR [r14+0x8],rdx
    6548:	movzx  eax,BYTE PTR [rax]
    654b:	mov    edx,0x1
    6550:	cmp    eax,0xa
    6553:	je     6580 <__cxa_finalize@plt+0x47b0>
    6555:	test   dl,dl
    6557:	je     6580 <__cxa_finalize@plt+0x47b0>
    6559:	mov    rax,QWORD PTR [r14+0x8]
    655d:	cmp    rax,QWORD PTR [r14+0x10]
    6561:	jb     6540 <__cxa_finalize@plt+0x4770>
    6563:	mov    rdi,r14
    6566:	call   1a20 <__uflow@plt>
    656b:	cmp    eax,0xffffffff
    656e:	setne  dl
    6571:	jmp    6550 <__cxa_finalize@plt+0x4780>
    6573:	mov    edi,r12d
    6576:	call   1be0 <close@plt>
    657b:	jmp    6354 <__cxa_finalize@plt+0x4584>
    6580:	cmp    eax,0xffffffff
    6583:	je     651d <__cxa_finalize@plt+0x474d>
    6585:	jmp    63b1 <__cxa_finalize@plt+0x45e1>
    658a:	add    rax,QWORD PTR [rsp]
    658e:	mov    rdi,r15
    6591:	lea    rcx,[rax+0x2]
    6595:	lea    rsi,[rax+0x3]
    6599:	mov    QWORD PTR [rsp],rcx
    659d:	call   1cd0 <realloc@plt>
    65a2:	mov    rdx,QWORD PTR [rsp+0x18]
    65a7:	mov    r12,rax
    65aa:	jmp    64b8 <__cxa_finalize@plt+0x46e8>
    65af:	mov    rdi,r15
    65b2:	lea    r15,[rip+0x2f3]        # 68ac <_IO_stdin_used@@Base+0x1ec>
    65b9:	call   1a40 <free@plt>
    65be:	mov    rdi,r14
    65c1:	call   5f10 <__cxa_finalize@plt+0x4140>
    65c6:	jmp    635b <__cxa_finalize@plt+0x458b>
    65cb:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    65d1:	jne    65e1 <__cxa_finalize@plt+0x4811>
    65d3:	lea    rdi,[rax+0xe]
    65d7:	jmp    62b5 <__cxa_finalize@plt+0x44e5>
    65dc:	call   1b40 <__stack_chk_fail@plt>
    65e1:	lea    rdi,[rax+0xf]
    65e5:	add    r12,0x1
    65e9:	jmp    62f8 <__cxa_finalize@plt+0x4528>
    65ee:	xchg   ax,ax
    65f0:	push   r15
    65f2:	push   r14
    65f4:	mov    r15d,edi
    65f7:	push   r13
    65f9:	push   r12
    65fb:	lea    r12,[rip+0x2033ce]        # 2099d0 <version_etc_copyright@@Base+0x201ff0>
    6602:	push   rbp
    6603:	lea    rbp,[rip+0x2033ce]        # 2099d8 <version_etc_copyright@@Base+0x201ff8>
    660a:	push   rbx
    660b:	mov    r14,rsi
    660e:	mov    r13,rdx
    6611:	sub    rbp,r12
    6614:	sub    rsp,0x8
    6618:	sar    rbp,0x3
    661c:	call   19f8 <__uflow@plt-0x28>
    6621:	test   rbp,rbp
    6624:	je     6646 <__cxa_finalize@plt+0x4876>
    6626:	xor    ebx,ebx
    6628:	nop    DWORD PTR [rax+rax*1+0x0]
    6630:	mov    rdx,r13
    6633:	mov    rsi,r14
    6636:	mov    edi,r15d
    6639:	call   QWORD PTR [r12+rbx*8]
    663d:	add    rbx,0x1
    6641:	cmp    rbp,rbx
    6644:	jne    6630 <__cxa_finalize@plt+0x4860>
    6646:	add    rsp,0x8
    664a:	pop    rbx
    664b:	pop    rbp
    664c:	pop    r12
    664e:	pop    r13
    6650:	pop    r14
    6652:	pop    r15
    6654:	ret    
    6655:	nop
    6656:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6660:	repz ret 
    6662:	nop    WORD PTR cs:[rax+rax*1+0x0]
    666c:	nop    DWORD PTR [rax+0x0]
    6670:	lea    rax,[rip+0x203991]        # 20a008 <quoting_style_args@@Base+0x468>
    6677:	test   rax,rax
    667a:	je     6690 <__cxa_finalize@plt+0x48c0>
    667c:	mov    rdx,QWORD PTR [rax]
    667f:	xor    esi,esi
    6681:	jmp    1d50 <__cxa_atexit@plt>
    6686:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6690:	xor    edx,edx
    6692:	xor    esi,esi
    6694:	jmp    1d50 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000669c <.fini>:
    669c:	sub    rsp,0x8
    66a0:	add    rsp,0x8
    66a4:	ret    
