
/bin/cat:     file format elf64-x86-64


Disassembly of section .init:

0000000000001720 <.init>:
    1720:	sub    rsp,0x8
    1724:	mov    rax,QWORD PTR [rip+0x2068bd]        # 207fe8 <__gmon_start__>
    172b:	test   rax,rax
    172e:	je     1732 <__uflow@plt-0x1e>
    1730:	call   rax
    1732:	add    rsp,0x8
    1736:	ret    

Disassembly of section .plt:

0000000000001740 <__uflow@plt-0x10>:
    1740:	push   QWORD PTR [rip+0x2066ca]        # 207e10 <quoting_style_args@@Base+0x250>
    1746:	jmp    QWORD PTR [rip+0x2066cc]        # 207e18 <quoting_style_args@@Base+0x258>
    174c:	nop    DWORD PTR [rax+0x0]

0000000000001750 <__uflow@plt>:
    1750:	jmp    QWORD PTR [rip+0x2066ca]        # 207e20 <__uflow@GLIBC_2.2.5>
    1756:	push   0x0
    175b:	jmp    1740 <__uflow@plt-0x10>

0000000000001760 <getenv@plt>:
    1760:	jmp    QWORD PTR [rip+0x2066c2]        # 207e28 <getenv@GLIBC_2.2.5>
    1766:	push   0x1
    176b:	jmp    1740 <__uflow@plt-0x10>

0000000000001770 <free@plt>:
    1770:	jmp    QWORD PTR [rip+0x2066ba]        # 207e30 <free@GLIBC_2.2.5>
    1776:	push   0x2
    177b:	jmp    1740 <__uflow@plt-0x10>

0000000000001780 <abort@plt>:
    1780:	jmp    QWORD PTR [rip+0x2066b2]        # 207e38 <abort@GLIBC_2.2.5>
    1786:	push   0x3
    178b:	jmp    1740 <__uflow@plt-0x10>

0000000000001790 <__errno_location@plt>:
    1790:	jmp    QWORD PTR [rip+0x2066aa]        # 207e40 <__errno_location@GLIBC_2.2.5>
    1796:	push   0x4
    179b:	jmp    1740 <__uflow@plt-0x10>

00000000000017a0 <strncmp@plt>:
    17a0:	jmp    QWORD PTR [rip+0x2066a2]        # 207e48 <strncmp@GLIBC_2.2.5>
    17a6:	push   0x5
    17ab:	jmp    1740 <__uflow@plt-0x10>

00000000000017b0 <_exit@plt>:
    17b0:	jmp    QWORD PTR [rip+0x20669a]        # 207e50 <_exit@GLIBC_2.2.5>
    17b6:	push   0x6
    17bb:	jmp    1740 <__uflow@plt-0x10>

00000000000017c0 <__fpending@plt>:
    17c0:	jmp    QWORD PTR [rip+0x206692]        # 207e58 <__fpending@GLIBC_2.2.5>
    17c6:	push   0x7
    17cb:	jmp    1740 <__uflow@plt-0x10>

00000000000017d0 <write@plt>:
    17d0:	jmp    QWORD PTR [rip+0x20668a]        # 207e60 <write@GLIBC_2.2.5>
    17d6:	push   0x8
    17db:	jmp    1740 <__uflow@plt-0x10>

00000000000017e0 <textdomain@plt>:
    17e0:	jmp    QWORD PTR [rip+0x206682]        # 207e68 <textdomain@GLIBC_2.2.5>
    17e6:	push   0x9
    17eb:	jmp    1740 <__uflow@plt-0x10>

00000000000017f0 <fclose@plt>:
    17f0:	jmp    QWORD PTR [rip+0x20667a]        # 207e70 <fclose@GLIBC_2.2.5>
    17f6:	push   0xa
    17fb:	jmp    1740 <__uflow@plt-0x10>

0000000000001800 <bindtextdomain@plt>:
    1800:	jmp    QWORD PTR [rip+0x206672]        # 207e78 <bindtextdomain@GLIBC_2.2.5>
    1806:	push   0xb
    180b:	jmp    1740 <__uflow@plt-0x10>

0000000000001810 <stpcpy@plt>:
    1810:	jmp    QWORD PTR [rip+0x20666a]        # 207e80 <stpcpy@GLIBC_2.2.5>
    1816:	push   0xc
    181b:	jmp    1740 <__uflow@plt-0x10>

0000000000001820 <dcgettext@plt>:
    1820:	jmp    QWORD PTR [rip+0x206662]        # 207e88 <dcgettext@GLIBC_2.2.5>
    1826:	push   0xd
    182b:	jmp    1740 <__uflow@plt-0x10>

0000000000001830 <__ctype_get_mb_cur_max@plt>:
    1830:	jmp    QWORD PTR [rip+0x20665a]        # 207e90 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1836:	push   0xe
    183b:	jmp    1740 <__uflow@plt-0x10>

0000000000001840 <strlen@plt>:
    1840:	jmp    QWORD PTR [rip+0x206652]        # 207e98 <strlen@GLIBC_2.2.5>
    1846:	push   0xf
    184b:	jmp    1740 <__uflow@plt-0x10>

0000000000001850 <__stack_chk_fail@plt>:
    1850:	jmp    QWORD PTR [rip+0x20664a]        # 207ea0 <__stack_chk_fail@GLIBC_2.4>
    1856:	push   0x10
    185b:	jmp    1740 <__uflow@plt-0x10>

0000000000001860 <getopt_long@plt>:
    1860:	jmp    QWORD PTR [rip+0x206642]        # 207ea8 <getopt_long@GLIBC_2.2.5>
    1866:	push   0x11
    186b:	jmp    1740 <__uflow@plt-0x10>

0000000000001870 <mbrtowc@plt>:
    1870:	jmp    QWORD PTR [rip+0x20663a]        # 207eb0 <mbrtowc@GLIBC_2.2.5>
    1876:	push   0x12
    187b:	jmp    1740 <__uflow@plt-0x10>

0000000000001880 <strrchr@plt>:
    1880:	jmp    QWORD PTR [rip+0x206632]        # 207eb8 <strrchr@GLIBC_2.2.5>
    1886:	push   0x13
    188b:	jmp    1740 <__uflow@plt-0x10>

0000000000001890 <lseek@plt>:
    1890:	jmp    QWORD PTR [rip+0x20662a]        # 207ec0 <lseek@GLIBC_2.2.5>
    1896:	push   0x14
    189b:	jmp    1740 <__uflow@plt-0x10>

00000000000018a0 <memset@plt>:
    18a0:	jmp    QWORD PTR [rip+0x206622]        # 207ec8 <memset@GLIBC_2.2.5>
    18a6:	push   0x15
    18ab:	jmp    1740 <__uflow@plt-0x10>

00000000000018b0 <fscanf@plt>:
    18b0:	jmp    QWORD PTR [rip+0x20661a]        # 207ed0 <fscanf@GLIBC_2.2.5>
    18b6:	push   0x16
    18bb:	jmp    1740 <__uflow@plt-0x10>

00000000000018c0 <ioctl@plt>:
    18c0:	jmp    QWORD PTR [rip+0x206612]        # 207ed8 <ioctl@GLIBC_2.2.5>
    18c6:	push   0x17
    18cb:	jmp    1740 <__uflow@plt-0x10>

00000000000018d0 <close@plt>:
    18d0:	jmp    QWORD PTR [rip+0x20660a]        # 207ee0 <close@GLIBC_2.2.5>
    18d6:	push   0x18
    18db:	jmp    1740 <__uflow@plt-0x10>

00000000000018e0 <posix_fadvise@plt>:
    18e0:	jmp    QWORD PTR [rip+0x206602]        # 207ee8 <posix_fadvise@GLIBC_2.2.5>
    18e6:	push   0x19
    18eb:	jmp    1740 <__uflow@plt-0x10>

00000000000018f0 <read@plt>:
    18f0:	jmp    QWORD PTR [rip+0x2065fa]        # 207ef0 <read@GLIBC_2.2.5>
    18f6:	push   0x1a
    18fb:	jmp    1740 <__uflow@plt-0x10>

0000000000001900 <memcmp@plt>:
    1900:	jmp    QWORD PTR [rip+0x2065f2]        # 207ef8 <memcmp@GLIBC_2.2.5>
    1906:	push   0x1b
    190b:	jmp    1740 <__uflow@plt-0x10>

0000000000001910 <fputs_unlocked@plt>:
    1910:	jmp    QWORD PTR [rip+0x2065ea]        # 207f00 <fputs_unlocked@GLIBC_2.2.5>
    1916:	push   0x1c
    191b:	jmp    1740 <__uflow@plt-0x10>

0000000000001920 <calloc@plt>:
    1920:	jmp    QWORD PTR [rip+0x2065e2]        # 207f08 <calloc@GLIBC_2.2.5>
    1926:	push   0x1d
    192b:	jmp    1740 <__uflow@plt-0x10>

0000000000001930 <strcmp@plt>:
    1930:	jmp    QWORD PTR [rip+0x2065da]        # 207f10 <strcmp@GLIBC_2.2.5>
    1936:	push   0x1e
    193b:	jmp    1740 <__uflow@plt-0x10>

0000000000001940 <memcpy@plt>:
    1940:	jmp    QWORD PTR [rip+0x2065d2]        # 207f18 <memcpy@GLIBC_2.14>
    1946:	push   0x1f
    194b:	jmp    1740 <__uflow@plt-0x10>

0000000000001950 <fileno@plt>:
    1950:	jmp    QWORD PTR [rip+0x2065ca]        # 207f20 <fileno@GLIBC_2.2.5>
    1956:	push   0x20
    195b:	jmp    1740 <__uflow@plt-0x10>

0000000000001960 <malloc@plt>:
    1960:	jmp    QWORD PTR [rip+0x2065c2]        # 207f28 <malloc@GLIBC_2.2.5>
    1966:	push   0x21
    196b:	jmp    1740 <__uflow@plt-0x10>

0000000000001970 <fflush@plt>:
    1970:	jmp    QWORD PTR [rip+0x2065ba]        # 207f30 <fflush@GLIBC_2.2.5>
    1976:	push   0x22
    197b:	jmp    1740 <__uflow@plt-0x10>

0000000000001980 <nl_langinfo@plt>:
    1980:	jmp    QWORD PTR [rip+0x2065b2]        # 207f38 <nl_langinfo@GLIBC_2.2.5>
    1986:	push   0x23
    198b:	jmp    1740 <__uflow@plt-0x10>

0000000000001990 <ungetc@plt>:
    1990:	jmp    QWORD PTR [rip+0x2065aa]        # 207f40 <ungetc@GLIBC_2.2.5>
    1996:	push   0x24
    199b:	jmp    1740 <__uflow@plt-0x10>

00000000000019a0 <__fxstat@plt>:
    19a0:	jmp    QWORD PTR [rip+0x2065a2]        # 207f48 <__fxstat@GLIBC_2.2.5>
    19a6:	push   0x25
    19ab:	jmp    1740 <__uflow@plt-0x10>

00000000000019b0 <__freading@plt>:
    19b0:	jmp    QWORD PTR [rip+0x20659a]        # 207f50 <__freading@GLIBC_2.2.5>
    19b6:	push   0x26
    19bb:	jmp    1740 <__uflow@plt-0x10>

00000000000019c0 <realloc@plt>:
    19c0:	jmp    QWORD PTR [rip+0x206592]        # 207f58 <realloc@GLIBC_2.2.5>
    19c6:	push   0x27
    19cb:	jmp    1740 <__uflow@plt-0x10>

00000000000019d0 <fdopen@plt>:
    19d0:	jmp    QWORD PTR [rip+0x20658a]        # 207f60 <fdopen@GLIBC_2.2.5>
    19d6:	push   0x28
    19db:	jmp    1740 <__uflow@plt-0x10>

00000000000019e0 <setlocale@plt>:
    19e0:	jmp    QWORD PTR [rip+0x206582]        # 207f68 <setlocale@GLIBC_2.2.5>
    19e6:	push   0x29
    19eb:	jmp    1740 <__uflow@plt-0x10>

00000000000019f0 <__printf_chk@plt>:
    19f0:	jmp    QWORD PTR [rip+0x20657a]        # 207f70 <__printf_chk@GLIBC_2.3.4>
    19f6:	push   0x2a
    19fb:	jmp    1740 <__uflow@plt-0x10>

0000000000001a00 <memmove@plt>:
    1a00:	jmp    QWORD PTR [rip+0x206572]        # 207f78 <memmove@GLIBC_2.2.5>
    1a06:	push   0x2b
    1a0b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a10 <error@plt>:
    1a10:	jmp    QWORD PTR [rip+0x20656a]        # 207f80 <error@GLIBC_2.2.5>
    1a16:	push   0x2c
    1a1b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a20 <open@plt>:
    1a20:	jmp    QWORD PTR [rip+0x206562]        # 207f88 <open@GLIBC_2.2.5>
    1a26:	push   0x2d
    1a2b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a30 <fseeko@plt>:
    1a30:	jmp    QWORD PTR [rip+0x20655a]        # 207f90 <fseeko@GLIBC_2.2.5>
    1a36:	push   0x2e
    1a3b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a40 <__cxa_atexit@plt>:
    1a40:	jmp    QWORD PTR [rip+0x206552]        # 207f98 <__cxa_atexit@GLIBC_2.2.5>
    1a46:	push   0x2f
    1a4b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a50 <getpagesize@plt>:
    1a50:	jmp    QWORD PTR [rip+0x20654a]        # 207fa0 <getpagesize@GLIBC_2.2.5>
    1a56:	push   0x30
    1a5b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a60 <exit@plt>:
    1a60:	jmp    QWORD PTR [rip+0x206542]        # 207fa8 <exit@GLIBC_2.2.5>
    1a66:	push   0x31
    1a6b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a70 <fwrite@plt>:
    1a70:	jmp    QWORD PTR [rip+0x20653a]        # 207fb0 <fwrite@GLIBC_2.2.5>
    1a76:	push   0x32
    1a7b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a80 <__fprintf_chk@plt>:
    1a80:	jmp    QWORD PTR [rip+0x206532]        # 207fb8 <__fprintf_chk@GLIBC_2.3.4>
    1a86:	push   0x33
    1a8b:	jmp    1740 <__uflow@plt-0x10>

0000000000001a90 <mbsinit@plt>:
    1a90:	jmp    QWORD PTR [rip+0x20652a]        # 207fc0 <mbsinit@GLIBC_2.2.5>
    1a96:	push   0x34
    1a9b:	jmp    1740 <__uflow@plt-0x10>

0000000000001aa0 <iswprint@plt>:
    1aa0:	jmp    QWORD PTR [rip+0x206522]        # 207fc8 <iswprint@GLIBC_2.2.5>
    1aa6:	push   0x35
    1aab:	jmp    1740 <__uflow@plt-0x10>

0000000000001ab0 <__ctype_b_loc@plt>:
    1ab0:	jmp    QWORD PTR [rip+0x20651a]        # 207fd0 <__ctype_b_loc@GLIBC_2.3>
    1ab6:	push   0x36
    1abb:	jmp    1740 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000001ac0 <__cxa_finalize@plt>:
    1ac0:	jmp    QWORD PTR [rip+0x206532]        # 207ff8 <__cxa_finalize@GLIBC_2.2.5>
    1ac6:	xchg   ax,ax

Disassembly of section .text:

0000000000001ad0 <.text>:
    1ad0:	push   rbx
    1ad1:	lea    rsi,[rip+0x416c]        # 5c44 <_IO_stdin_used@@Base+0x4>
    1ad8:	mov    edx,0x5
    1add:	xor    edi,edi
    1adf:	call   1820 <dcgettext@plt>
    1ae4:	mov    rbx,rax
    1ae7:	call   1790 <__errno_location@plt>
    1aec:	mov    esi,DWORD PTR [rax]
    1aee:	mov    rdx,rbx
    1af1:	mov    edi,0x1
    1af6:	xor    eax,eax
    1af8:	call   1a10 <error@plt>
    1afd:	nop    DWORD PTR [rax]
    1b00:	push   r15
    1b02:	push   r14
    1b04:	mov    r14,rsi
    1b07:	push   r13
    1b09:	push   r12
    1b0b:	xor    r12d,r12d
    1b0e:	push   rbp
    1b0f:	push   rbx
    1b10:	sub    rsp,0x158
    1b17:	mov    QWORD PTR [rsp+0x48],rsi
    1b1c:	mov    DWORD PTR [rsp+0x50],edi
    1b20:	mov    rax,QWORD PTR fs:0x28
    1b29:	mov    QWORD PTR [rsp+0x148],rax
    1b31:	xor    eax,eax
    1b33:	call   1a50 <getpagesize@plt>
    1b38:	mov    rdi,QWORD PTR [r14]
    1b3b:	mov    ebx,eax
    1b3d:	call   2e10 <__cxa_finalize@plt+0x1350>
    1b42:	lea    rsi,[rip+0x4cb8]        # 6801 <quoting_style_vals@@Base+0x81>
    1b49:	mov    edi,0x6
    1b4e:	call   19e0 <setlocale@plt>
    1b53:	lea    rsi,[rip+0x4182]        # 5cdc <_IO_stdin_used@@Base+0x9c>
    1b5a:	lea    rdi,[rip+0x416d]        # 5cce <_IO_stdin_used@@Base+0x8e>
    1b61:	call   1800 <bindtextdomain@plt>
    1b66:	lea    rdi,[rip+0x4161]        # 5cce <_IO_stdin_used@@Base+0x8e>
    1b6d:	call   17e0 <textdomain@plt>
    1b72:	lea    rdi,[rip+0x1127]        # 2ca0 <__cxa_finalize@plt+0x11e0>
    1b79:	call   5c00 <__cxa_finalize@plt+0x4140>
    1b7e:	mov    BYTE PTR [rsp+0x36],0x0
    1b83:	mov    BYTE PTR [rsp+0x55],0x0
    1b88:	mov    BYTE PTR [rsp+0x56],0x0
    1b8d:	mov    BYTE PTR [rsp+0x8d],0x0
    1b95:	mov    BYTE PTR [rsp+0x37],0x0
    1b9a:	nop    WORD PTR [rax+rax*1+0x0]
    1ba0:	mov    rsi,QWORD PTR [rsp+0x48]
    1ba5:	mov    edi,DWORD PTR [rsp+0x50]
    1ba9:	lea    rcx,[rip+0x205ed0]        # 207a80 <version_etc_copyright@@Base+0x200fa0>
    1bb0:	lea    rdx,[rip+0x415d]        # 5d14 <_IO_stdin_used@@Base+0xd4>
    1bb7:	xor    r8d,r8d
    1bba:	call   1860 <getopt_long@plt>
    1bbf:	cmp    eax,0xffffffff
    1bc2:	je     1cb3 <__cxa_finalize@plt+0x1f3>
    1bc8:	cmp    eax,0x62
    1bcb:	je     1c99 <__cxa_finalize@plt+0x1d9>
    1bd1:	jle    1bf8 <__cxa_finalize@plt+0x138>
    1bd3:	cmp    eax,0x73
    1bd6:	je     1c42 <__cxa_finalize@plt+0x182>
    1bd8:	jle    1c2a <__cxa_finalize@plt+0x16a>
    1bda:	cmp    eax,0x75
    1bdd:	je     1ba0 <__cxa_finalize@plt+0xe0>
    1bdf:	jl     1ca3 <__cxa_finalize@plt+0x1e3>
    1be5:	cmp    eax,0x76
    1be8:	jne    26c9 <__cxa_finalize@plt+0xc09>
    1bee:	mov    BYTE PTR [rsp+0x36],0x1
    1bf3:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1bf5:	nop    DWORD PTR [rax]
    1bf8:	cmp    eax,0x41
    1bfb:	je     1c15 <__cxa_finalize@plt+0x155>
    1bfd:	jle    1c4c <__cxa_finalize@plt+0x18c>
    1bff:	cmp    eax,0x45
    1c02:	je     1c20 <__cxa_finalize@plt+0x160>
    1c04:	cmp    eax,0x54
    1c07:	jne    26c9 <__cxa_finalize@plt+0xc09>
    1c0d:	mov    r12d,0x1
    1c13:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1c15:	mov    r12d,0x1
    1c1b:	mov    BYTE PTR [rsp+0x36],0x1
    1c20:	mov    BYTE PTR [rsp+0x55],0x1
    1c25:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1c2a:	cmp    eax,0x65
    1c2d:	je     1c1b <__cxa_finalize@plt+0x15b>
    1c2f:	cmp    eax,0x6e
    1c32:	jne    26c9 <__cxa_finalize@plt+0xc09>
    1c38:	mov    BYTE PTR [rsp+0x37],0x1
    1c3d:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1c42:	mov    BYTE PTR [rsp+0x56],0x1
    1c47:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1c4c:	cmp    eax,0xffffff7d
    1c51:	mov    DWORD PTR [rsp+0x30],eax
    1c55:	jne    268f <__cxa_finalize@plt+0xbcf>
    1c5b:	sub    rsp,0x8
    1c5f:	mov    rdi,QWORD PTR [rip+0x206462]        # 2080c8 <stdout@@GLIBC_2.2.5>
    1c66:	mov    rcx,QWORD PTR [rip+0x2063cb]        # 208038 <Version@@Base>
    1c6d:	push   0x0
    1c6f:	lea    r9,[rip+0x4078]        # 5cee <_IO_stdin_used@@Base+0xae>
    1c76:	lea    r8,[rip+0x4085]        # 5d02 <_IO_stdin_used@@Base+0xc2>
    1c7d:	lea    rdx,[rip+0x4046]        # 5cca <_IO_stdin_used@@Base+0x8a>
    1c84:	lea    rsi,[rip+0x3fc5]        # 5c50 <_IO_stdin_used@@Base+0x10>
    1c8b:	xor    eax,eax
    1c8d:	call   50b0 <__cxa_finalize@plt+0x35f0>
    1c92:	xor    edi,edi
    1c94:	call   1a60 <exit@plt>
    1c99:	mov    BYTE PTR [rsp+0x8d],0x1
    1ca1:	jmp    1c38 <__cxa_finalize@plt+0x178>
    1ca3:	mov    r12d,0x1
    1ca9:	mov    BYTE PTR [rsp+0x36],0x1
    1cae:	jmp    1ba0 <__cxa_finalize@plt+0xe0>
    1cb3:	mov    DWORD PTR [rsp+0x30],eax
    1cb7:	lea    rax,[rsp+0xb0]
    1cbf:	mov    esi,0x1
    1cc4:	mov    edi,0x1
    1cc9:	mov    rdx,rax
    1ccc:	mov    QWORD PTR [rsp+0x80],rax
    1cd4:	call   19a0 <__fxstat@plt>
    1cd9:	test   eax,eax
    1cdb:	js     26d8 <__cxa_finalize@plt+0xc18>
    1ce1:	mov    r15,QWORD PTR [rsp+0xe8]
    1ce9:	movabs rax,0x1ffffffffffe0000
    1cf3:	movsxd rcx,DWORD PTR [rip+0x2063d6]        # 2080d0 <optind@@GLIBC_2.2.5>
    1cfa:	mov    BYTE PTR [rsp+0x8e],0x0
    1d02:	mov    BYTE PTR [rsp+0x8c],0x1
    1d0a:	lea    rdx,[r15-0x20000]
    1d11:	mov    QWORD PTR [rsp+0x58],rcx
    1d16:	cmp    rdx,rax
    1d19:	mov    eax,0x20000
    1d1e:	cmova  r15,rax
    1d22:	movsxd rax,ebx
    1d25:	mov    QWORD PTR [rsp+0x68],rax
    1d2a:	mov    rax,QWORD PTR [rsp+0xb0]
    1d32:	mov    QWORD PTR [rsp+0x90],rax
    1d3a:	mov    rax,QWORD PTR [rsp+0xb8]
    1d42:	mov    QWORD PTR [rsp+0x98],rax
    1d4a:	mov    eax,DWORD PTR [rsp+0xc8]
    1d51:	and    eax,0xf000
    1d56:	mov    DWORD PTR [rsp+0x88],eax
    1d5d:	movzx  eax,BYTE PTR [rsp+0x37]
    1d62:	or     al,BYTE PTR [rsp+0x55]
    1d66:	cmp    DWORD PTR [rsp+0x50],ecx
    1d6a:	mov    BYTE PTR [rsp+0x8f],al
    1d71:	lea    rax,[rip+0x4552]        # 62ca <_IO_stdin_used@@Base+0x68a>
    1d78:	mov    QWORD PTR [rip+0x206379],rax        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    1d7f:	jle    2623 <__cxa_finalize@plt+0xb63>
    1d85:	mov    rax,QWORD PTR [rsp+0x48]
    1d8a:	mov    rcx,QWORD PTR [rsp+0x58]
    1d8f:	mov    rax,QWORD PTR [rax+rcx*8]
    1d93:	mov    QWORD PTR [rip+0x20635e],rax        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    1d9a:	lea    rdi,[rip+0x4529]        # 62ca <_IO_stdin_used@@Base+0x68a>
    1da1:	mov    ecx,0x2
    1da6:	mov    rsi,rax
    1da9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1dab:	seta   bl
    1dae:	setb   dl
    1db1:	sub    ebx,edx
    1db3:	movsx  ebx,bl
    1db6:	test   ebx,ebx
    1db8:	jne    2289 <__cxa_finalize@plt+0x7c9>
    1dbe:	mov    DWORD PTR [rip+0x20632c],0x0        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    1dc8:	mov    BYTE PTR [rsp+0x8e],0x1
    1dd0:	mov    rdx,QWORD PTR [rsp+0x80]
    1dd8:	mov    esi,ebx
    1dda:	mov    edi,0x1
    1ddf:	call   19a0 <__fxstat@plt>
    1de4:	test   eax,eax
    1de6:	js     2490 <__cxa_finalize@plt+0x9d0>
    1dec:	mov    rcx,QWORD PTR [rsp+0xe8]
    1df4:	movabs rax,0x1ffffffffffe0000
    1dfe:	mov    edi,ebx
    1e00:	lea    rdx,[rcx-0x20000]
    1e07:	cmp    rdx,rax
    1e0a:	mov    eax,0x20000
    1e0f:	cmovbe rax,rcx
    1e13:	xor    edx,edx
    1e15:	xor    esi,esi
    1e17:	mov    ecx,0x2
    1e1c:	mov    QWORD PTR [rsp+0x38],rax
    1e21:	call   2d50 <__cxa_finalize@plt+0x1290>
    1e26:	cmp    DWORD PTR [rsp+0x88],0x8000
    1e31:	je     23fd <__cxa_finalize@plt+0x93d>
    1e37:	cmp    BYTE PTR [rsp+0x8f],0x0
    1e3f:	mov    rax,QWORD PTR [rsp+0x68]
    1e44:	lea    r14,[rax-0x1]
    1e48:	jne    1e5e <__cxa_finalize@plt+0x39e>
    1e4a:	movzx  r13d,BYTE PTR [rsp+0x36]
    1e50:	or     r13d,r12d
    1e53:	or     r13b,BYTE PTR [rsp+0x56]
    1e58:	je     2548 <__cxa_finalize@plt+0xa88>
    1e5e:	mov    rbx,QWORD PTR [rsp+0x68]
    1e63:	mov    rbp,QWORD PTR [rsp+0x38]
    1e68:	mov    rdi,rbx
    1e6b:	add    rdi,rbp
    1e6e:	call   5210 <__cxa_finalize@plt+0x3750>
    1e73:	mov    r13,rax
    1e76:	mov    QWORD PTR [rsp+0x70],rax
    1e7b:	lea    rax,[rbx+r15*1+0x12]
    1e80:	lea    rdi,[rax+rbp*4]
    1e84:	call   5210 <__cxa_finalize@plt+0x3750>
    1e89:	mov    rcx,rax
    1e8c:	mov    QWORD PTR [rsp+0x78],rax
    1e91:	xor    edx,edx
    1e93:	add    rcx,r14
    1e96:	add    r14,r13
    1e99:	mov    esi,DWORD PTR [rip+0x206251]        # 2080f0 <stderr@@GLIBC_2.2.5+0x10>
    1e9f:	mov    rax,rcx
    1ea2:	mov    r13d,r12d
    1ea5:	mov    BYTE PTR [rsp+0x54],0x1
    1eaa:	div    rbx
    1ead:	mov    rax,r14
    1eb0:	mov    DWORD PTR [rsp+0x4],esi
    1eb4:	xor    r13d,0x1
    1eb8:	sub    rcx,rdx
    1ebb:	xor    edx,edx
    1ebd:	div    rbx
    1ec0:	mov    rax,r14
    1ec3:	lea    rsi,[rcx+r15*1]
    1ec7:	mov    r14,r15
    1eca:	mov    QWORD PTR [rsp+0x20],rcx
    1ecf:	mov    r15,rcx
    1ed2:	mov    QWORD PTR [rsp+0x10],rsi
    1ed7:	sub    rax,rdx
    1eda:	lea    rbx,[rax+0x1]
    1ede:	mov    QWORD PTR [rsp+0x18],rax
    1ee3:	mov    QWORD PTR [rsp+0x8],rax
    1ee8:	movzx  eax,BYTE PTR [rsp+0x8d]
    1ef0:	mov    QWORD PTR [rsp+0x40],rbx
    1ef5:	xor    eax,0x1
    1ef8:	mov    BYTE PTR [rsp+0x57],al
    1efc:	lea    rax,[rsp+0xac]
    1f04:	mov    QWORD PTR [rsp+0x60],rax
    1f09:	nop    DWORD PTR [rax+0x0]
    1f10:	cmp    QWORD PTR [rsp+0x10],r15
    1f15:	jbe    20d3 <__cxa_finalize@plt+0x613>
    1f1b:	cmp    rbx,QWORD PTR [rsp+0x8]
    1f20:	jbe    2133 <__cxa_finalize@plt+0x673>
    1f26:	cmp    BYTE PTR [rsp+0x54],0x0
    1f2b:	mov    DWORD PTR [rsp+0xac],0x0
    1f36:	jne    21e0 <__cxa_finalize@plt+0x720>
    1f3c:	mov    rbx,r15
    1f3f:	sub    rbx,QWORD PTR [rsp+0x20]
    1f44:	jne    2223 <__cxa_finalize@plt+0x763>
    1f4a:	mov    ebx,DWORD PTR [rip+0x2061a4]        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    1f50:	mov    rdx,QWORD PTR [rsp+0x38]
    1f55:	mov    rsi,QWORD PTR [rsp+0x18]
    1f5a:	mov    edi,ebx
    1f5c:	call   4b40 <__cxa_finalize@plt+0x3080>
    1f61:	cmp    rax,0xffffffffffffffff
    1f65:	je     2337 <__cxa_finalize@plt+0x877>
    1f6b:	test   rax,rax
    1f6e:	je     23d7 <__cxa_finalize@plt+0x917>
    1f74:	mov    rdi,QWORD PTR [rsp+0x18]
    1f79:	mov    rbx,QWORD PTR [rsp+0x40]
    1f7e:	add    rax,rdi
    1f81:	mov    QWORD PTR [rsp+0x8],rax
    1f86:	mov    BYTE PTR [rax],0xa
    1f89:	mov    rax,rdi
    1f8c:	movzx  ebp,BYTE PTR [rax]
    1f8f:	cmp    bpl,0xa
    1f93:	je     1f10 <__cxa_finalize@plt+0x450>
    1f99:	mov    edi,DWORD PTR [rsp+0x4]
    1f9d:	test   edi,edi
    1f9f:	js     1fbf <__cxa_finalize@plt+0x4ff>
    1fa1:	cmp    BYTE PTR [rsp+0x37],0x0
    1fa6:	je     1fbf <__cxa_finalize@plt+0x4ff>
    1fa8:	call   2820 <__cxa_finalize@plt+0xd60>
    1fad:	mov    rsi,QWORD PTR [rip+0x20607c]        # 208030 <quoting_style_args@@Base+0x470>
    1fb4:	mov    rdi,r15
    1fb7:	call   1810 <stpcpy@plt>
    1fbc:	mov    r15,rax
    1fbf:	cmp    BYTE PTR [rsp+0x36],0x0
    1fc4:	je     1feb <__cxa_finalize@plt+0x52b>
    1fc6:	jmp    201d <__cxa_finalize@plt+0x55d>
    1fc8:	nop    DWORD PTR [rax+rax*1+0x0]
    1fd0:	test   r12b,r12b
    1fd3:	je     1ff1 <__cxa_finalize@plt+0x531>
    1fd5:	mov    eax,0x495e
    1fda:	add    r15,0x2
    1fde:	mov    WORD PTR [r15-0x2],ax
    1fe3:	add    rbx,0x1
    1fe7:	movzx  ebp,BYTE PTR [rbx-0x1]
    1feb:	cmp    bpl,0x9
    1fef:	je     1fd0 <__cxa_finalize@plt+0x510>
    1ff1:	cmp    bpl,0xa
    1ff5:	je     20c0 <__cxa_finalize@plt+0x600>
    1ffb:	mov    BYTE PTR [r15],bpl
    1ffe:	add    r15,0x1
    2002:	jmp    1fe3 <__cxa_finalize@plt+0x523>
    2004:	nop    DWORD PTR [rax+0x0]
    2008:	cmp    bpl,0x7e
    200c:	ja     2040 <__cxa_finalize@plt+0x580>
    200e:	mov    BYTE PTR [r15],bpl
    2011:	add    r15,0x1
    2015:	add    rbx,0x1
    2019:	movzx  ebp,BYTE PTR [rbx-0x1]
    201d:	cmp    bpl,0x1f
    2021:	ja     2008 <__cxa_finalize@plt+0x548>
    2023:	cmp    bpl,0x9
    2027:	jne    2070 <__cxa_finalize@plt+0x5b0>
    2029:	test   r13b,r13b
    202c:	je     2070 <__cxa_finalize@plt+0x5b0>
    202e:	mov    BYTE PTR [r15],0x9
    2032:	add    r15,0x1
    2036:	jmp    2015 <__cxa_finalize@plt+0x555>
    2038:	nop    DWORD PTR [rax+rax*1+0x0]
    2040:	cmp    bpl,0x7f
    2044:	je     2090 <__cxa_finalize@plt+0x5d0>
    2046:	mov    ecx,0x2d4d
    204b:	cmp    bpl,0x9f
    204f:	mov    WORD PTR [r15],cx
    2053:	jbe    20a8 <__cxa_finalize@plt+0x5e8>
    2055:	cmp    bpl,0xff
    2059:	je     21b8 <__cxa_finalize@plt+0x6f8>
    205f:	add    ebp,0xffffff80
    2062:	add    r15,0x3
    2066:	mov    BYTE PTR [r15-0x1],bpl
    206a:	jmp    2015 <__cxa_finalize@plt+0x555>
    206c:	nop    DWORD PTR [rax+0x0]
    2070:	cmp    bpl,0xa
    2074:	je     20c0 <__cxa_finalize@plt+0x600>
    2076:	add    ebp,0x40
    2079:	mov    BYTE PTR [r15],0x5e
    207d:	add    r15,0x2
    2081:	mov    BYTE PTR [r15-0x1],bpl
    2085:	jmp    2015 <__cxa_finalize@plt+0x555>
    2087:	nop    WORD PTR [rax+rax*1+0x0]
    2090:	mov    esi,0x3f5e
    2095:	add    r15,0x2
    2099:	mov    WORD PTR [r15-0x2],si
    209e:	jmp    2015 <__cxa_finalize@plt+0x555>
    20a3:	nop    DWORD PTR [rax+rax*1+0x0]
    20a8:	sub    ebp,0x40
    20ab:	mov    BYTE PTR [r15+0x2],0x5e
    20b0:	add    r15,0x4
    20b4:	mov    BYTE PTR [r15-0x1],bpl
    20b8:	jmp    2015 <__cxa_finalize@plt+0x555>
    20bd:	nop    DWORD PTR [rax]
    20c0:	cmp    QWORD PTR [rsp+0x10],r15
    20c5:	mov    eax,DWORD PTR [rsp+0x30]
    20c9:	mov    DWORD PTR [rsp+0x4],eax
    20cd:	ja     1f1b <__cxa_finalize@plt+0x45b>
    20d3:	mov    rbp,QWORD PTR [rsp+0x20]
    20d8:	nop    DWORD PTR [rax+rax*1+0x0]
    20e0:	mov    rdx,r14
    20e3:	mov    rsi,rbp
    20e6:	mov    edi,0x1
    20eb:	call   2d90 <__cxa_finalize@plt+0x12d0>
    20f0:	cmp    r14,rax
    20f3:	jne    25f7 <__cxa_finalize@plt+0xb37>
    20f9:	add    rbp,r14
    20fc:	mov    r9,r15
    20ff:	sub    r9,rbp
    2102:	cmp    r14,r9
    2105:	jbe    20e0 <__cxa_finalize@plt+0x620>
    2107:	mov    r15,QWORD PTR [rsp+0x20]
    210c:	mov    rdx,r9
    210f:	mov    rsi,rbp
    2112:	mov    QWORD PTR [rsp+0x28],r9
    2117:	mov    rdi,r15
    211a:	call   1a00 <memmove@plt>
    211f:	cmp    rbx,QWORD PTR [rsp+0x8]
    2124:	mov    r9,QWORD PTR [rsp+0x28]
    2129:	lea    r15,[r15+r9*1]
    212d:	ja     1f26 <__cxa_finalize@plt+0x466>
    2133:	add    DWORD PTR [rsp+0x4],0x1
    2138:	lea    rdx,[rbx+0x1]
    213c:	mov    eax,DWORD PTR [rsp+0x4]
    2140:	test   eax,eax
    2142:	jle    2190 <__cxa_finalize@plt+0x6d0>
    2144:	cmp    eax,0x1
    2147:	je     215c <__cxa_finalize@plt+0x69c>
    2149:	cmp    BYTE PTR [rsp+0x56],0x0
    214e:	mov    DWORD PTR [rsp+0x4],0x2
    2156:	jne    2218 <__cxa_finalize@plt+0x758>
    215c:	cmp    BYTE PTR [rsp+0x57],0x0
    2161:	je     2190 <__cxa_finalize@plt+0x6d0>
    2163:	cmp    BYTE PTR [rsp+0x37],0x0
    2168:	je     2190 <__cxa_finalize@plt+0x6d0>
    216a:	mov    QWORD PTR [rsp+0x28],rdx
    216f:	call   2820 <__cxa_finalize@plt+0xd60>
    2174:	mov    rsi,QWORD PTR [rip+0x205eb5]        # 208030 <quoting_style_args@@Base+0x470>
    217b:	mov    rdi,r15
    217e:	call   1810 <stpcpy@plt>
    2183:	mov    rdx,QWORD PTR [rsp+0x28]
    2188:	mov    r15,rax
    218b:	nop    DWORD PTR [rax+rax*1+0x0]
    2190:	cmp    BYTE PTR [rsp+0x55],0x0
    2195:	lea    rax,[r15+0x1]
    2199:	je     21d0 <__cxa_finalize@plt+0x710>
    219b:	mov    BYTE PTR [r15],0x24
    219f:	add    r15,0x2
    21a3:	mov    BYTE PTR [rax],0xa
    21a6:	mov    rax,rbx
    21a9:	mov    rbx,rdx
    21ac:	jmp    1f8c <__cxa_finalize@plt+0x4cc>
    21b1:	nop    DWORD PTR [rax+0x0]
    21b8:	mov    edx,0x3f5e
    21bd:	add    r15,0x4
    21c1:	mov    WORD PTR [r15-0x2],dx
    21c6:	jmp    2015 <__cxa_finalize@plt+0x555>
    21cb:	nop    DWORD PTR [rax+rax*1+0x0]
    21d0:	mov    rsi,rax
    21d3:	mov    rax,r15
    21d6:	mov    r15,rsi
    21d9:	jmp    21a3 <__cxa_finalize@plt+0x6e3>
    21db:	nop    DWORD PTR [rax+rax*1+0x0]
    21e0:	mov    ebx,DWORD PTR [rip+0x205f0e]        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    21e6:	mov    rdx,QWORD PTR [rsp+0x60]
    21eb:	xor    eax,eax
    21ed:	mov    esi,0x541b
    21f2:	mov    edi,ebx
    21f4:	call   18c0 <ioctl@plt>
    21f9:	test   eax,eax
    21fb:	js     2250 <__cxa_finalize@plt+0x790>
    21fd:	mov    r8d,DWORD PTR [rsp+0xac]
    2205:	test   r8d,r8d
    2208:	jne    1f50 <__cxa_finalize@plt+0x490>
    220e:	jmp    1f3c <__cxa_finalize@plt+0x47c>
    2213:	nop    DWORD PTR [rax+rax*1+0x0]
    2218:	movzx  ebp,BYTE PTR [rbx]
    221b:	mov    rbx,rdx
    221e:	jmp    1f8f <__cxa_finalize@plt+0x4cf>
    2223:	mov    r15,QWORD PTR [rsp+0x20]
    2228:	mov    rdx,rbx
    222b:	mov    edi,0x1
    2230:	mov    rsi,r15
    2233:	call   2d90 <__cxa_finalize@plt+0x12d0>
    2238:	cmp    rbx,rax
    223b:	je     1f4a <__cxa_finalize@plt+0x48a>
    2241:	call   1ad0 <__cxa_finalize@plt+0x10>
    2246:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2250:	call   1790 <__errno_location@plt>
    2255:	mov    ecx,DWORD PTR [rax]
    2257:	cmp    ecx,0x5f
    225a:	sete   r10b
    225e:	cmp    ecx,0x26
    2261:	ja     2276 <__cxa_finalize@plt+0x7b6>
    2263:	movabs rdx,0x4002480000
    226d:	shr    rdx,cl
    2270:	and    edx,0x1
    2273:	or     r10d,edx
    2276:	test   r10b,r10b
    2279:	je     262f <__cxa_finalize@plt+0xb6f>
    227f:	mov    BYTE PTR [rsp+0x54],0x0
    2284:	jmp    21fd <__cxa_finalize@plt+0x73d>
    2289:	xor    esi,esi
    228b:	mov    rdi,rax
    228e:	xor    eax,eax
    2290:	call   1a20 <open@plt>
    2295:	test   eax,eax
    2297:	mov    ebx,eax
    2299:	mov    DWORD PTR [rip+0x205e55],eax        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    229f:	jns    1dd0 <__cxa_finalize@plt+0x310>
    22a5:	mov    rdx,QWORD PTR [rip+0x205e4c]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    22ac:	mov    esi,0x3
    22b1:	xor    edi,edi
    22b3:	call   4950 <__cxa_finalize@plt+0x2e90>
    22b8:	mov    rbx,rax
    22bb:	call   1790 <__errno_location@plt>
    22c0:	mov    esi,DWORD PTR [rax]
    22c2:	lea    rdx,[rip+0x3fbb]        # 6284 <_IO_stdin_used@@Base+0x644>
    22c9:	mov    rcx,rbx
    22cc:	xor    edi,edi
    22ce:	xor    eax,eax
    22d0:	call   1a10 <error@plt>
    22d5:	mov    BYTE PTR [rsp+0x8c],0x0
    22dd:	add    QWORD PTR [rsp+0x58],0x1
    22e3:	mov    rax,QWORD PTR [rsp+0x58]
    22e8:	cmp    DWORD PTR [rsp+0x50],eax
    22ec:	jg     1d85 <__cxa_finalize@plt+0x2c5>
    22f2:	cmp    BYTE PTR [rsp+0x8e],0x0
    22fa:	jne    250d <__cxa_finalize@plt+0xa4d>
    2300:	movzx  eax,BYTE PTR [rsp+0x8c]
    2308:	xor    eax,0x1
    230b:	mov    rcx,QWORD PTR [rsp+0x148]
    2313:	xor    rcx,QWORD PTR fs:0x28
    231c:	movzx  eax,al
    231f:	jne    26d3 <__cxa_finalize@plt+0xc13>
    2325:	add    rsp,0x158
    232c:	pop    rbx
    232d:	pop    rbp
    232e:	pop    r12
    2330:	pop    r13
    2332:	pop    r14
    2334:	pop    r15
    2336:	ret    
    2337:	mov    rdx,QWORD PTR [rip+0x205dba]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    233e:	xor    edi,edi
    2340:	mov    rax,r15
    2343:	mov    esi,0x3
    2348:	mov    r15,r14
    234b:	mov    r14,rax
    234e:	call   4950 <__cxa_finalize@plt+0x2e90>
    2353:	mov    rbx,rax
    2356:	call   1790 <__errno_location@plt>
    235b:	mov    esi,DWORD PTR [rax]
    235d:	lea    rdx,[rip+0x3f20]        # 6284 <_IO_stdin_used@@Base+0x644>
    2364:	xor    edi,edi
    2366:	xor    eax,eax
    2368:	mov    rcx,rbx
    236b:	call   1a10 <error@plt>
    2370:	sub    r14,QWORD PTR [rsp+0x20]
    2375:	jne    24cd <__cxa_finalize@plt+0xa0d>
    237b:	mov    eax,DWORD PTR [rsp+0x4]
    237f:	xor    r10d,r10d
    2382:	mov    DWORD PTR [rip+0x205d68],eax        # 2080f0 <stderr@@GLIBC_2.2.5+0x10>
    2388:	mov    rdi,QWORD PTR [rsp+0x78]
    238d:	and    BYTE PTR [rsp+0x8c],r10b
    2395:	call   1770 <free@plt>
    239a:	mov    rdi,QWORD PTR [rsp+0x70]
    239f:	call   1770 <free@plt>
    23a4:	mov    rsi,QWORD PTR [rip+0x205d4d]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    23ab:	lea    rdi,[rip+0x3f18]        # 62ca <_IO_stdin_used@@Base+0x68a>
    23b2:	mov    ecx,0x2
    23b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    23b9:	je     22dd <__cxa_finalize@plt+0x81d>
    23bf:	mov    edi,DWORD PTR [rip+0x205d2f]        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    23c5:	call   18d0 <close@plt>
    23ca:	test   eax,eax
    23cc:	jns    22dd <__cxa_finalize@plt+0x81d>
    23d2:	jmp    22a5 <__cxa_finalize@plt+0x7e5>
    23d7:	mov    rax,r15
    23da:	mov    r15,r14
    23dd:	mov    rbx,rax
    23e0:	sub    rbx,QWORD PTR [rsp+0x20]
    23e5:	jne    24ed <__cxa_finalize@plt+0xa2d>
    23eb:	mov    eax,DWORD PTR [rsp+0x4]
    23ef:	mov    r10d,0x1
    23f5:	mov    DWORD PTR [rip+0x205cf5],eax        # 2080f0 <stderr@@GLIBC_2.2.5+0x10>
    23fb:	jmp    2388 <__cxa_finalize@plt+0x8c8>
    23fd:	mov    rax,QWORD PTR [rsp+0x90]
    2405:	cmp    QWORD PTR [rsp+0xb0],rax
    240d:	jne    1e37 <__cxa_finalize@plt+0x377>
    2413:	mov    rax,QWORD PTR [rsp+0x98]
    241b:	cmp    QWORD PTR [rsp+0xb8],rax
    2423:	jne    1e37 <__cxa_finalize@plt+0x377>
    2429:	mov    edi,DWORD PTR [rip+0x205cc5]        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    242f:	xor    esi,esi
    2431:	mov    edx,0x1
    2436:	call   1890 <lseek@plt>
    243b:	cmp    rax,QWORD PTR [rsp+0xe0]
    2443:	jge    1e37 <__cxa_finalize@plt+0x377>
    2449:	mov    rdx,QWORD PTR [rip+0x205ca8]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    2450:	mov    esi,0x3
    2455:	xor    edi,edi
    2457:	call   4950 <__cxa_finalize@plt+0x2e90>
    245c:	lea    rsi,[rip+0x38cc]        # 5d2f <_IO_stdin_used@@Base+0xef>
    2463:	mov    rbx,rax
    2466:	mov    edx,0x5
    246b:	xor    edi,edi
    246d:	call   1820 <dcgettext@plt>
    2472:	mov    rcx,rbx
    2475:	mov    rdx,rax
    2478:	xor    esi,esi
    247a:	xor    edi,edi
    247c:	xor    eax,eax
    247e:	call   1a10 <error@plt>
    2483:	mov    BYTE PTR [rsp+0x8c],0x0
    248b:	jmp    23a4 <__cxa_finalize@plt+0x8e4>
    2490:	mov    rdx,QWORD PTR [rip+0x205c61]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    2497:	mov    esi,0x3
    249c:	xor    edi,edi
    249e:	call   4950 <__cxa_finalize@plt+0x2e90>
    24a3:	mov    rbx,rax
    24a6:	call   1790 <__errno_location@plt>
    24ab:	mov    esi,DWORD PTR [rax]
    24ad:	lea    rdx,[rip+0x3dd0]        # 6284 <_IO_stdin_used@@Base+0x644>
    24b4:	mov    rcx,rbx
    24b7:	xor    edi,edi
    24b9:	xor    eax,eax
    24bb:	call   1a10 <error@plt>
    24c0:	mov    BYTE PTR [rsp+0x8c],0x0
    24c8:	jmp    23a4 <__cxa_finalize@plt+0x8e4>
    24cd:	mov    rsi,QWORD PTR [rsp+0x20]
    24d2:	mov    rdx,r14
    24d5:	mov    edi,0x1
    24da:	call   2d90 <__cxa_finalize@plt+0x12d0>
    24df:	cmp    r14,rax
    24e2:	je     237b <__cxa_finalize@plt+0x8bb>
    24e8:	jmp    2241 <__cxa_finalize@plt+0x781>
    24ed:	mov    rsi,QWORD PTR [rsp+0x20]
    24f2:	mov    rdx,rbx
    24f5:	mov    edi,0x1
    24fa:	call   2d90 <__cxa_finalize@plt+0x12d0>
    24ff:	cmp    rbx,rax
    2502:	je     23eb <__cxa_finalize@plt+0x92b>
    2508:	jmp    2241 <__cxa_finalize@plt+0x781>
    250d:	xor    edi,edi
    250f:	call   18d0 <close@plt>
    2514:	test   eax,eax
    2516:	jns    2300 <__cxa_finalize@plt+0x840>
    251c:	lea    rsi,[rip+0x3840]        # 5d63 <_IO_stdin_used@@Base+0x123>
    2523:	mov    edx,0x5
    2528:	xor    edi,edi
    252a:	call   1820 <dcgettext@plt>
    252f:	mov    rbx,rax
    2532:	call   1790 <__errno_location@plt>
    2537:	mov    esi,DWORD PTR [rax]
    2539:	mov    rdx,rbx
    253c:	mov    edi,0x1
    2541:	xor    eax,eax
    2543:	call   1a10 <error@plt>
    2548:	mov    rax,QWORD PTR [rsp+0x38]
    254d:	cmp    r15,rax
    2550:	cmovae rax,r15
    2554:	lea    rdi,[rax+r14*1]
    2558:	mov    rbp,rax
    255b:	call   5210 <__cxa_finalize@plt+0x3750>
    2560:	add    r14,rax
    2563:	mov    QWORD PTR [rsp+0x70],rax
    2568:	xor    edx,edx
    256a:	mov    rax,r14
    256d:	mov    rbx,r14
    2570:	div    QWORD PTR [rsp+0x68]
    2575:	sub    rbx,rdx
    2578:	jmp    2598 <__cxa_finalize@plt+0xad8>
    257a:	test   rax,rax
    257d:	je     25ef <__cxa_finalize@plt+0xb2f>
    257f:	mov    rdx,rax
    2582:	mov    rsi,rbx
    2585:	mov    edi,0x1
    258a:	call   2d90 <__cxa_finalize@plt+0x12d0>
    258f:	cmp    r14,rax
    2592:	jne    269d <__cxa_finalize@plt+0xbdd>
    2598:	mov    edi,DWORD PTR [rip+0x205b56]        # 2080f4 <stderr@@GLIBC_2.2.5+0x14>
    259e:	mov    rdx,rbp
    25a1:	mov    rsi,rbx
    25a4:	call   4b40 <__cxa_finalize@plt+0x3080>
    25a9:	cmp    rax,0xffffffffffffffff
    25ad:	mov    r14,rax
    25b0:	jne    257a <__cxa_finalize@plt+0xaba>
    25b2:	mov    rdx,QWORD PTR [rip+0x205b3f]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    25b9:	mov    esi,0x3
    25be:	xor    edi,edi
    25c0:	call   4950 <__cxa_finalize@plt+0x2e90>
    25c5:	mov    rbx,rax
    25c8:	call   1790 <__errno_location@plt>
    25cd:	mov    esi,DWORD PTR [rax]
    25cf:	lea    rdx,[rip+0x3cae]        # 6284 <_IO_stdin_used@@Base+0x644>
    25d6:	mov    rcx,rbx
    25d9:	xor    edi,edi
    25db:	xor    eax,eax
    25dd:	call   1a10 <error@plt>
    25e2:	and    BYTE PTR [rsp+0x8c],r13b
    25ea:	jmp    239a <__cxa_finalize@plt+0x8da>
    25ef:	mov    r13d,0x1
    25f5:	jmp    25e2 <__cxa_finalize@plt+0xb22>
    25f7:	lea    rsi,[rip+0x3646]        # 5c44 <_IO_stdin_used@@Base+0x4>
    25fe:	mov    edx,0x5
    2603:	xor    edi,edi
    2605:	call   1820 <dcgettext@plt>
    260a:	mov    rbx,rax
    260d:	call   1790 <__errno_location@plt>
    2612:	mov    esi,DWORD PTR [rax]
    2614:	mov    rdx,rbx
    2617:	mov    edi,0x1
    261c:	xor    eax,eax
    261e:	call   1a10 <error@plt>
    2623:	lea    rax,[rip+0x3ca0]        # 62ca <_IO_stdin_used@@Base+0x68a>
    262a:	jmp    1d9a <__cxa_finalize@plt+0x2da>
    262f:	mov    rsi,QWORD PTR [rip+0x205ac2]        # 2080f8 <stderr@@GLIBC_2.2.5+0x18>
    2636:	mov    edi,0x4
    263b:	mov    BYTE PTR [rsp+0x8],r10b
    2640:	mov    QWORD PTR [rsp+0x10],rax
    2645:	mov    r15,r14
    2648:	call   4850 <__cxa_finalize@plt+0x2d90>
    264d:	lea    rsi,[rip+0x36f9]        # 5d4d <_IO_stdin_used@@Base+0x10d>
    2654:	mov    edx,0x5
    2659:	xor    edi,edi
    265b:	mov    rbx,rax
    265e:	call   1820 <dcgettext@plt>
    2663:	mov    r11,QWORD PTR [rsp+0x10]
    2668:	mov    rdx,rax
    266b:	mov    rcx,rbx
    266e:	xor    eax,eax
    2670:	xor    edi,edi
    2672:	mov    esi,DWORD PTR [r11]
    2675:	call   1a10 <error@plt>
    267a:	mov    eax,DWORD PTR [rsp+0x4]
    267e:	movzx  r10d,BYTE PTR [rsp+0x8]
    2684:	mov    DWORD PTR [rip+0x205a66],eax        # 2080f0 <stderr@@GLIBC_2.2.5+0x10>
    268a:	jmp    2388 <__cxa_finalize@plt+0x8c8>
    268f:	cmp    eax,0xffffff7e
    2694:	jne    26c9 <__cxa_finalize@plt+0xc09>
    2696:	xor    edi,edi
    2698:	call   28a0 <__cxa_finalize@plt+0xde0>
    269d:	lea    rsi,[rip+0x35a0]        # 5c44 <_IO_stdin_used@@Base+0x4>
    26a4:	mov    edx,0x5
    26a9:	xor    edi,edi
    26ab:	call   1820 <dcgettext@plt>
    26b0:	mov    rbx,rax
    26b3:	call   1790 <__errno_location@plt>
    26b8:	mov    esi,DWORD PTR [rax]
    26ba:	mov    rdx,rbx
    26bd:	mov    edi,0x1
    26c2:	xor    eax,eax
    26c4:	call   1a10 <error@plt>
    26c9:	mov    edi,0x1
    26ce:	call   28a0 <__cxa_finalize@plt+0xde0>
    26d3:	call   1850 <__stack_chk_fail@plt>
    26d8:	lea    rsi,[rip+0x3640]        # 5d1f <_IO_stdin_used@@Base+0xdf>
    26df:	mov    edx,0x5
    26e4:	xor    edi,edi
    26e6:	call   1820 <dcgettext@plt>
    26eb:	mov    rbx,rax
    26ee:	call   1790 <__errno_location@plt>
    26f3:	mov    esi,DWORD PTR [rax]
    26f5:	mov    rdx,rbx
    26f8:	mov    edi,0x1
    26fd:	xor    eax,eax
    26ff:	call   1a10 <error@plt>
    2704:	nop    WORD PTR cs:[rax+rax*1+0x0]
    270e:	xchg   ax,ax
    2710:	xor    ebp,ebp
    2712:	mov    r9,rdx
    2715:	pop    rsi
    2716:	mov    rdx,rsp
    2719:	and    rsp,0xfffffffffffffff0
    271d:	push   rax
    271e:	push   rsp
    271f:	lea    r8,[rip+0x34ca]        # 5bf0 <__cxa_finalize@plt+0x4130>
    2726:	lea    rcx,[rip+0x3453]        # 5b80 <__cxa_finalize@plt+0x40c0>
    272d:	lea    rdi,[rip+0xfffffffffffff3cc]        # 1b00 <__cxa_finalize@plt+0x40>
    2734:	call   QWORD PTR [rip+0x2058a6]        # 207fe0 <__libc_start_main@GLIBC_2.2.5>
    273a:	hlt    
    273b:	nop    DWORD PTR [rax+rax*1+0x0]
    2740:	lea    rdi,[rip+0x205979]        # 2080c0 <__progname@@GLIBC_2.2.5>
    2747:	push   rbp
    2748:	lea    rax,[rip+0x205971]        # 2080c0 <__progname@@GLIBC_2.2.5>
    274f:	cmp    rax,rdi
    2752:	mov    rbp,rsp
    2755:	je     2770 <__cxa_finalize@plt+0xcb0>
    2757:	mov    rax,QWORD PTR [rip+0x20587a]        # 207fd8 <_ITM_deregisterTMCloneTable>
    275e:	test   rax,rax
    2761:	je     2770 <__cxa_finalize@plt+0xcb0>
    2763:	pop    rbp
    2764:	jmp    rax
    2766:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2770:	pop    rbp
    2771:	ret    
    2772:	nop    DWORD PTR [rax+0x0]
    2776:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2780:	lea    rdi,[rip+0x205939]        # 2080c0 <__progname@@GLIBC_2.2.5>
    2787:	lea    rsi,[rip+0x205932]        # 2080c0 <__progname@@GLIBC_2.2.5>
    278e:	push   rbp
    278f:	sub    rsi,rdi
    2792:	mov    rbp,rsp
    2795:	sar    rsi,0x3
    2799:	mov    rax,rsi
    279c:	shr    rax,0x3f
    27a0:	add    rsi,rax
    27a3:	sar    rsi,1
    27a6:	je     27c0 <__cxa_finalize@plt+0xd00>
    27a8:	mov    rax,QWORD PTR [rip+0x205841]        # 207ff0 <_ITM_registerTMCloneTable>
    27af:	test   rax,rax
    27b2:	je     27c0 <__cxa_finalize@plt+0xd00>
    27b4:	pop    rbp
    27b5:	jmp    rax
    27b7:	nop    WORD PTR [rax+rax*1+0x0]
    27c0:	pop    rbp
    27c1:	ret    
    27c2:	nop    DWORD PTR [rax+0x0]
    27c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    27d0:	cmp    BYTE PTR [rip+0x205911],0x0        # 2080e8 <stderr@@GLIBC_2.2.5+0x8>
    27d7:	jne    2808 <__cxa_finalize@plt+0xd48>
    27d9:	cmp    QWORD PTR [rip+0x205817],0x0        # 207ff8 <__cxa_finalize@GLIBC_2.2.5>
    27e1:	push   rbp
    27e2:	mov    rbp,rsp
    27e5:	je     27f3 <__cxa_finalize@plt+0xd33>
    27e7:	mov    rdi,QWORD PTR [rip+0x20581a]        # 208008 <quoting_style_args@@Base+0x448>
    27ee:	call   1ac0 <__cxa_finalize@plt>
    27f3:	call   2740 <__cxa_finalize@plt+0xc80>
    27f8:	mov    BYTE PTR [rip+0x2058e9],0x1        # 2080e8 <stderr@@GLIBC_2.2.5+0x8>
    27ff:	pop    rbp
    2800:	ret    
    2801:	nop    DWORD PTR [rax+0x0]
    2808:	repz ret 
    280a:	nop    WORD PTR [rax+rax*1+0x0]
    2810:	push   rbp
    2811:	mov    rbp,rsp
    2814:	pop    rbp
    2815:	jmp    2780 <__cxa_finalize@plt+0xcc0>
    281a:	nop    WORD PTR [rax+rax*1+0x0]
    2820:	mov    rcx,QWORD PTR [rip+0x205801]        # 208028 <quoting_style_args@@Base+0x468>
    2827:	lea    rax,[rip+0x2057f3]        # 208021 <quoting_style_args@@Base+0x461>
    282e:	jmp    283d <__cxa_finalize@plt+0xd7d>
    2830:	sub    rax,0x1
    2834:	mov    BYTE PTR [rax+0x1],0x30
    2838:	cmp    rcx,rax
    283b:	ja     2850 <__cxa_finalize@plt+0xd90>
    283d:	movzx  edx,BYTE PTR [rax]
    2840:	cmp    dl,0x38
    2843:	jg     2830 <__cxa_finalize@plt+0xd70>
    2845:	add    edx,0x1
    2848:	mov    BYTE PTR [rax],dl
    284a:	ret    
    284b:	nop    DWORD PTR [rax+rax*1+0x0]
    2850:	lea    rax,[rip+0x2057b9]        # 208010 <quoting_style_args@@Base+0x450>
    2857:	cmp    rcx,rax
    285a:	jbe    2888 <__cxa_finalize@plt+0xdc8>
    285c:	lea    rdx,[rcx-0x1]
    2860:	mov    BYTE PTR [rcx-0x1],0x31
    2864:	mov    QWORD PTR [rip+0x2057bd],rdx        # 208028 <quoting_style_args@@Base+0x468>
    286b:	mov    rax,QWORD PTR [rip+0x2057be]        # 208030 <quoting_style_args@@Base+0x470>
    2872:	cmp    rax,rdx
    2875:	jbe    2882 <__cxa_finalize@plt+0xdc2>
    2877:	sub    rax,0x1
    287b:	mov    QWORD PTR [rip+0x2057ae],rax        # 208030 <quoting_style_args@@Base+0x470>
    2882:	repz ret 
    2884:	nop    DWORD PTR [rax+0x0]
    2888:	mov    BYTE PTR [rip+0x205781],0x3e        # 208010 <quoting_style_args@@Base+0x450>
    288f:	mov    rdx,rcx
    2892:	jmp    286b <__cxa_finalize@plt+0xdab>
    2894:	xchg   ax,ax
    2896:	nop    WORD PTR cs:[rax+rax*1+0x0]
    28a0:	push   r12
    28a2:	push   rbp
    28a3:	mov    edx,0x5
    28a8:	push   rbx
    28a9:	mov    ebp,edi
    28ab:	add    rsp,0xffffffffffffff80
    28af:	mov    rbx,QWORD PTR [rip+0x20585a]        # 208110 <program_name@@Base>
    28b6:	mov    rax,QWORD PTR fs:0x28
    28bf:	mov    QWORD PTR [rsp+0x78],rax
    28c4:	xor    eax,eax
    28c6:	test   edi,edi
    28c8:	je     28f8 <__cxa_finalize@plt+0xe38>
    28ca:	lea    rsi,[rip+0x350f]        # 5de0 <_IO_stdin_used@@Base+0x1a0>
    28d1:	xor    edi,edi
    28d3:	call   1820 <dcgettext@plt>
    28d8:	mov    rdi,QWORD PTR [rip+0x205801]        # 2080e0 <stderr@@GLIBC_2.2.5>
    28df:	mov    rdx,rax
    28e2:	mov    rcx,rbx
    28e5:	mov    esi,0x1
    28ea:	xor    eax,eax
    28ec:	call   1a80 <__fprintf_chk@plt>
    28f1:	mov    edi,ebp
    28f3:	call   1a60 <exit@plt>
    28f8:	lea    rsi,[rip+0x3509]        # 5e08 <_IO_stdin_used@@Base+0x1c8>
    28ff:	xor    edi,edi
    2901:	call   1820 <dcgettext@plt>
    2906:	mov    rdx,rbx
    2909:	mov    rsi,rax
    290c:	mov    edi,0x1
    2911:	xor    eax,eax
    2913:	call   19f0 <__printf_chk@plt>
    2918:	mov    rbx,QWORD PTR [rip+0x2057a9]        # 2080c8 <stdout@@GLIBC_2.2.5>
    291f:	lea    rsi,[rip+0x350a]        # 5e30 <_IO_stdin_used@@Base+0x1f0>
    2926:	mov    edx,0x5
    292b:	xor    edi,edi
    292d:	call   1820 <dcgettext@plt>
    2932:	mov    rsi,rbx
    2935:	mov    rdi,rax
    2938:	call   1910 <fputs_unlocked@plt>
    293d:	mov    rbx,QWORD PTR [rip+0x205784]        # 2080c8 <stdout@@GLIBC_2.2.5>
    2944:	lea    rsi,[rip+0x3515]        # 5e60 <_IO_stdin_used@@Base+0x220>
    294b:	mov    edx,0x5
    2950:	xor    edi,edi
    2952:	call   1820 <dcgettext@plt>
    2957:	mov    rsi,rbx
    295a:	mov    rdi,rax
    295d:	call   1910 <fputs_unlocked@plt>
    2962:	mov    rbx,QWORD PTR [rip+0x20575f]        # 2080c8 <stdout@@GLIBC_2.2.5>
    2969:	lea    rsi,[rip+0x3528]        # 5e98 <_IO_stdin_used@@Base+0x258>
    2970:	mov    edx,0x5
    2975:	xor    edi,edi
    2977:	call   1820 <dcgettext@plt>
    297c:	mov    rsi,rbx
    297f:	mov    rdi,rax
    2982:	call   1910 <fputs_unlocked@plt>
    2987:	mov    rbx,QWORD PTR [rip+0x20573a]        # 2080c8 <stdout@@GLIBC_2.2.5>
    298e:	lea    rsi,[rip+0x3653]        # 5fe8 <_IO_stdin_used@@Base+0x3a8>
    2995:	mov    edx,0x5
    299a:	xor    edi,edi
    299c:	call   1820 <dcgettext@plt>
    29a1:	mov    rsi,rbx
    29a4:	mov    rdi,rax
    29a7:	call   1910 <fputs_unlocked@plt>
    29ac:	mov    rbx,QWORD PTR [rip+0x205715]        # 2080c8 <stdout@@GLIBC_2.2.5>
    29b3:	lea    rsi,[rip+0x3706]        # 60c0 <_IO_stdin_used@@Base+0x480>
    29ba:	mov    edx,0x5
    29bf:	xor    edi,edi
    29c1:	call   1820 <dcgettext@plt>
    29c6:	mov    rsi,rbx
    29c9:	mov    rdi,rax
    29cc:	call   1910 <fputs_unlocked@plt>
    29d1:	mov    rbx,QWORD PTR [rip+0x2056f0]        # 2080c8 <stdout@@GLIBC_2.2.5>
    29d8:	lea    rsi,[rip+0x3711]        # 60f0 <_IO_stdin_used@@Base+0x4b0>
    29df:	mov    edx,0x5
    29e4:	xor    edi,edi
    29e6:	call   1820 <dcgettext@plt>
    29eb:	mov    rsi,rbx
    29ee:	mov    rdi,rax
    29f1:	call   1910 <fputs_unlocked@plt>
    29f6:	mov    rbx,QWORD PTR [rip+0x205713]        # 208110 <program_name@@Base>
    29fd:	lea    rsi,[rip+0x3724]        # 6128 <_IO_stdin_used@@Base+0x4e8>
    2a04:	mov    edx,0x5
    2a09:	xor    edi,edi
    2a0b:	call   1820 <dcgettext@plt>
    2a10:	mov    rcx,rbx
    2a13:	mov    rdx,rbx
    2a16:	mov    rsi,rax
    2a19:	mov    edi,0x1
    2a1e:	xor    eax,eax
    2a20:	lea    rbx,[rip+0x3278]        # 5c9f <_IO_stdin_used@@Base+0x5f>
    2a27:	call   19f0 <__printf_chk@plt>
    2a2c:	lea    rax,[rip+0x3221]        # 5c54 <_IO_stdin_used@@Base+0x14>
    2a33:	lea    rcx,[rip+0x325b]        # 5c95 <_IO_stdin_used@@Base+0x55>
    2a3a:	lea    rdx,[rip+0x3268]        # 5ca9 <_IO_stdin_used@@Base+0x69>
    2a41:	mov    QWORD PTR [rsp+0x40],rbx
    2a46:	lea    rbx,[rip+0x3203]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2a4d:	mov    QWORD PTR [rsp+0x60],0x0
    2a56:	mov    QWORD PTR [rsp],rax
    2a5a:	lea    rax,[rip+0x31f5]        # 5c56 <_IO_stdin_used@@Base+0x16>
    2a61:	mov    QWORD PTR [rsp+0x30],rcx
    2a66:	mov    QWORD PTR [rsp+0x50],rdx
    2a6b:	mov    QWORD PTR [rsp+0x68],0x0
    2a74:	mov    QWORD PTR [rsp+0x8],rax
    2a79:	lea    rax,[rip+0x324e]        # 5cce <_IO_stdin_used@@Base+0x8e>
    2a80:	mov    QWORD PTR [rsp+0x10],rax
    2a85:	lea    rax,[rip+0x31da]        # 5c66 <_IO_stdin_used@@Base+0x26>
    2a8c:	mov    QWORD PTR [rsp+0x18],rax
    2a91:	lea    rax,[rip+0x31e4]        # 5c7c <_IO_stdin_used@@Base+0x3c>
    2a98:	mov    QWORD PTR [rsp+0x20],rax
    2a9d:	lea    rax,[rip+0x31e2]        # 5c86 <_IO_stdin_used@@Base+0x46>
    2aa4:	mov    QWORD PTR [rsp+0x28],rax
    2aa9:	mov    QWORD PTR [rsp+0x38],rax
    2aae:	mov    QWORD PTR [rsp+0x48],rax
    2ab3:	mov    QWORD PTR [rsp+0x58],rax
    2ab8:	mov    rax,rsp
    2abb:	nop    DWORD PTR [rax+rax*1+0x0]
    2ac0:	add    rax,0x10
    2ac4:	mov    rdi,QWORD PTR [rax]
    2ac7:	test   rdi,rdi
    2aca:	je     2ad8 <__cxa_finalize@plt+0x1018>
    2acc:	mov    ecx,0x4
    2ad1:	mov    rsi,rbx
    2ad4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2ad6:	jne    2ac0 <__cxa_finalize@plt+0x1000>
    2ad8:	mov    r12,QWORD PTR [rax+0x8]
    2adc:	xor    edi,edi
    2ade:	mov    edx,0x5
    2ae3:	lea    rsi,[rip+0x31c9]        # 5cb3 <_IO_stdin_used@@Base+0x73>
    2aea:	test   r12,r12
    2aed:	je     2bb4 <__cxa_finalize@plt+0x10f4>
    2af3:	call   1820 <dcgettext@plt>
    2af8:	lea    rcx,[rip+0x36b9]        # 61b8 <_IO_stdin_used@@Base+0x578>
    2aff:	lea    rdx,[rip+0x31c4]        # 5cca <_IO_stdin_used@@Base+0x8a>
    2b06:	mov    rsi,rax
    2b09:	mov    edi,0x1
    2b0e:	xor    eax,eax
    2b10:	call   19f0 <__printf_chk@plt>
    2b15:	xor    esi,esi
    2b17:	mov    edi,0x5
    2b1c:	call   19e0 <setlocale@plt>
    2b21:	test   rax,rax
    2b24:	je     2b42 <__cxa_finalize@plt+0x1082>
    2b26:	lea    rsi,[rip+0x31ab]        # 5cd8 <_IO_stdin_used@@Base+0x98>
    2b2d:	mov    edx,0x3
    2b32:	mov    rdi,rax
    2b35:	call   17a0 <strncmp@plt>
    2b3a:	test   eax,eax
    2b3c:	jne    2c49 <__cxa_finalize@plt+0x1189>
    2b42:	lea    rsi,[rip+0x36df]        # 6228 <_IO_stdin_used@@Base+0x5e8>
    2b49:	xor    edi,edi
    2b4b:	mov    edx,0x5
    2b50:	call   1820 <dcgettext@plt>
    2b55:	lea    rcx,[rip+0x30f4]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2b5c:	lea    rdx,[rip+0x3655]        # 61b8 <_IO_stdin_used@@Base+0x578>
    2b63:	mov    rsi,rax
    2b66:	mov    edi,0x1
    2b6b:	xor    eax,eax
    2b6d:	call   19f0 <__printf_chk@plt>
    2b72:	cmp    r12,rbx
    2b75:	lea    rcx,[rip+0x30f4]        # 5c70 <_IO_stdin_used@@Base+0x30>
    2b7c:	lea    rbx,[rip+0x3c7e]        # 6801 <quoting_style_vals@@Base+0x81>
    2b83:	cmove  rbx,rcx
    2b87:	lea    rsi,[rip+0x36ba]        # 6248 <_IO_stdin_used@@Base+0x608>
    2b8e:	xor    edi,edi
    2b90:	mov    edx,0x5
    2b95:	call   1820 <dcgettext@plt>
    2b9a:	mov    rcx,rbx
    2b9d:	mov    rsi,rax
    2ba0:	mov    rdx,r12
    2ba3:	mov    edi,0x1
    2ba8:	xor    eax,eax
    2baa:	call   19f0 <__printf_chk@plt>
    2baf:	jmp    28f1 <__cxa_finalize@plt+0xe31>
    2bb4:	call   1820 <dcgettext@plt>
    2bb9:	lea    rcx,[rip+0x35f8]        # 61b8 <_IO_stdin_used@@Base+0x578>
    2bc0:	lea    rdx,[rip+0x3103]        # 5cca <_IO_stdin_used@@Base+0x8a>
    2bc7:	mov    rsi,rax
    2bca:	mov    edi,0x1
    2bcf:	xor    eax,eax
    2bd1:	call   19f0 <__printf_chk@plt>
    2bd6:	xor    esi,esi
    2bd8:	mov    edi,0x5
    2bdd:	call   19e0 <setlocale@plt>
    2be2:	test   rax,rax
    2be5:	je     2bff <__cxa_finalize@plt+0x113f>
    2be7:	lea    rsi,[rip+0x30ea]        # 5cd8 <_IO_stdin_used@@Base+0x98>
    2bee:	mov    edx,0x3
    2bf3:	mov    rdi,rax
    2bf6:	call   17a0 <strncmp@plt>
    2bfb:	test   eax,eax
    2bfd:	jne    2c42 <__cxa_finalize@plt+0x1182>
    2bff:	lea    rsi,[rip+0x3622]        # 6228 <_IO_stdin_used@@Base+0x5e8>
    2c06:	mov    edx,0x5
    2c0b:	xor    edi,edi
    2c0d:	lea    r12,[rip+0x303c]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2c14:	lea    rbx,[rip+0x3055]        # 5c70 <_IO_stdin_used@@Base+0x30>
    2c1b:	call   1820 <dcgettext@plt>
    2c20:	lea    rcx,[rip+0x3029]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2c27:	lea    rdx,[rip+0x358a]        # 61b8 <_IO_stdin_used@@Base+0x578>
    2c2e:	mov    rsi,rax
    2c31:	mov    edi,0x1
    2c36:	xor    eax,eax
    2c38:	call   19f0 <__printf_chk@plt>
    2c3d:	jmp    2b87 <__cxa_finalize@plt+0x10c7>
    2c42:	lea    r12,[rip+0x3007]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2c49:	lea    rsi,[rip+0x3590]        # 61e0 <_IO_stdin_used@@Base+0x5a0>
    2c50:	xor    edi,edi
    2c52:	mov    edx,0x5
    2c57:	call   1820 <dcgettext@plt>
    2c5c:	lea    rdx,[rip+0x2fed]        # 5c50 <_IO_stdin_used@@Base+0x10>
    2c63:	mov    rsi,rax
    2c66:	mov    edi,0x1
    2c6b:	xor    eax,eax
    2c6d:	call   19f0 <__printf_chk@plt>
    2c72:	jmp    2b42 <__cxa_finalize@plt+0x1082>
    2c77:	nop    WORD PTR [rax+rax*1+0x0]
    2c80:	mov    QWORD PTR [rip+0x205481],rdi        # 208108 <stderr@@GLIBC_2.2.5+0x28>
    2c87:	ret    
    2c88:	nop    DWORD PTR [rax+rax*1+0x0]
    2c90:	mov    BYTE PTR [rip+0x205469],dil        # 208100 <stderr@@GLIBC_2.2.5+0x20>
    2c97:	ret    
    2c98:	nop    DWORD PTR [rax+rax*1+0x0]
    2ca0:	push   rbp
    2ca1:	push   rbx
    2ca2:	sub    rsp,0x8
    2ca6:	mov    rdi,QWORD PTR [rip+0x20541b]        # 2080c8 <stdout@@GLIBC_2.2.5>
    2cad:	call   5530 <__cxa_finalize@plt+0x3a70>
    2cb2:	test   eax,eax
    2cb4:	je     2ccc <__cxa_finalize@plt+0x120c>
    2cb6:	call   1790 <__errno_location@plt>
    2cbb:	cmp    BYTE PTR [rip+0x20543e],0x0        # 208100 <stderr@@GLIBC_2.2.5+0x20>
    2cc2:	mov    rbx,rax
    2cc5:	je     2ce3 <__cxa_finalize@plt+0x1223>
    2cc7:	cmp    DWORD PTR [rax],0x20
    2cca:	jne    2ce3 <__cxa_finalize@plt+0x1223>
    2ccc:	mov    rdi,QWORD PTR [rip+0x20540d]        # 2080e0 <stderr@@GLIBC_2.2.5>
    2cd3:	call   5530 <__cxa_finalize@plt+0x3a70>
    2cd8:	test   eax,eax
    2cda:	jne    2d22 <__cxa_finalize@plt+0x1262>
    2cdc:	add    rsp,0x8
    2ce0:	pop    rbx
    2ce1:	pop    rbp
    2ce2:	ret    
    2ce3:	lea    rsi,[rip+0x2f5a]        # 5c44 <_IO_stdin_used@@Base+0x4>
    2cea:	xor    edi,edi
    2cec:	mov    edx,0x5
    2cf1:	call   1820 <dcgettext@plt>
    2cf6:	mov    rdi,QWORD PTR [rip+0x20540b]        # 208108 <stderr@@GLIBC_2.2.5+0x28>
    2cfd:	mov    rbp,rax
    2d00:	test   rdi,rdi
    2d03:	je     2d2d <__cxa_finalize@plt+0x126d>
    2d05:	call   4920 <__cxa_finalize@plt+0x2e60>
    2d0a:	mov    esi,DWORD PTR [rbx]
    2d0c:	lea    rdx,[rip+0x356d]        # 6280 <_IO_stdin_used@@Base+0x640>
    2d13:	mov    rcx,rax
    2d16:	mov    r8,rbp
    2d19:	xor    edi,edi
    2d1b:	xor    eax,eax
    2d1d:	call   1a10 <error@plt>
    2d22:	mov    edi,DWORD PTR [rip+0x205318]        # 208040 <exit_failure@@Base>
    2d28:	call   17b0 <_exit@plt>
    2d2d:	mov    esi,DWORD PTR [rbx]
    2d2f:	lea    rdx,[rip+0x354e]        # 6284 <_IO_stdin_used@@Base+0x644>
    2d36:	mov    rcx,rax
    2d39:	xor    edi,edi
    2d3b:	xor    eax,eax
    2d3d:	call   1a10 <error@plt>
    2d42:	jmp    2d22 <__cxa_finalize@plt+0x1262>
    2d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2d4e:	xchg   ax,ax
    2d50:	jmp    18e0 <posix_fadvise@plt>
    2d55:	nop
    2d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2d60:	test   rdi,rdi
    2d63:	je     2d80 <__cxa_finalize@plt+0x12c0>
    2d65:	push   rbx
    2d66:	mov    ebx,esi
    2d68:	call   1950 <fileno@plt>
    2d6d:	mov    ecx,ebx
    2d6f:	xor    edx,edx
    2d71:	xor    esi,esi
    2d73:	pop    rbx
    2d74:	mov    edi,eax
    2d76:	jmp    18e0 <posix_fadvise@plt>
    2d7b:	nop    DWORD PTR [rax+rax*1+0x0]
    2d80:	repz ret 
    2d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2d8c:	nop    DWORD PTR [rax+0x0]
    2d90:	push   r13
    2d92:	push   r12
    2d94:	push   rbp
    2d95:	push   rbx
    2d96:	sub    rsp,0x8
    2d9a:	test   rdx,rdx
    2d9d:	je     2e01 <__cxa_finalize@plt+0x1341>
    2d9f:	mov    r13d,edi
    2da2:	mov    rbp,rsi
    2da5:	mov    rbx,rdx
    2da8:	xor    r12d,r12d
    2dab:	jmp    2dc0 <__cxa_finalize@plt+0x1300>
    2dad:	nop    DWORD PTR [rax]
    2db0:	test   rax,rax
    2db3:	je     2de8 <__cxa_finalize@plt+0x1328>
    2db5:	add    r12,rax
    2db8:	add    rbp,rax
    2dbb:	sub    rbx,rax
    2dbe:	je     2dd4 <__cxa_finalize@plt+0x1314>
    2dc0:	mov    rdx,rbx
    2dc3:	mov    rsi,rbp
    2dc6:	mov    edi,r13d
    2dc9:	call   4ba0 <__cxa_finalize@plt+0x30e0>
    2dce:	cmp    rax,0xffffffffffffffff
    2dd2:	jne    2db0 <__cxa_finalize@plt+0x12f0>
    2dd4:	add    rsp,0x8
    2dd8:	mov    rax,r12
    2ddb:	pop    rbx
    2ddc:	pop    rbp
    2ddd:	pop    r12
    2ddf:	pop    r13
    2de1:	ret    
    2de2:	nop    WORD PTR [rax+rax*1+0x0]
    2de8:	call   1790 <__errno_location@plt>
    2ded:	mov    DWORD PTR [rax],0x1c
    2df3:	add    rsp,0x8
    2df7:	mov    rax,r12
    2dfa:	pop    rbx
    2dfb:	pop    rbp
    2dfc:	pop    r12
    2dfe:	pop    r13
    2e00:	ret    
    2e01:	xor    r12d,r12d
    2e04:	jmp    2dd4 <__cxa_finalize@plt+0x1314>
    2e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2e10:	test   rdi,rdi
    2e13:	push   rbx
    2e14:	je     2e87 <__cxa_finalize@plt+0x13c7>
    2e16:	mov    esi,0x2f
    2e1b:	mov    rbx,rdi
    2e1e:	call   1880 <strrchr@plt>
    2e23:	test   rax,rax
    2e26:	je     2e77 <__cxa_finalize@plt+0x13b7>
    2e28:	lea    rdx,[rax+0x1]
    2e2c:	mov    rcx,rdx
    2e2f:	sub    rcx,rbx
    2e32:	cmp    rcx,0x6
    2e36:	jle    2e77 <__cxa_finalize@plt+0x13b7>
    2e38:	lea    rsi,[rax-0x6]
    2e3c:	lea    rdi,[rip+0x347d]        # 62c0 <_IO_stdin_used@@Base+0x680>
    2e43:	mov    ecx,0x7
    2e48:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2e4a:	jne    2e77 <__cxa_finalize@plt+0x13b7>
    2e4c:	lea    rdi,[rip+0x3475]        # 62c8 <_IO_stdin_used@@Base+0x688>
    2e53:	mov    ecx,0x3
    2e58:	mov    rsi,rdx
    2e5b:	mov    rbx,rdx
    2e5e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2e60:	seta   sil
    2e64:	setb   cl
    2e67:	cmp    sil,cl
    2e6a:	jne    2e77 <__cxa_finalize@plt+0x13b7>
    2e6c:	lea    rbx,[rax+0x4]
    2e70:	mov    QWORD PTR [rip+0x205249],rbx        # 2080c0 <__progname@@GLIBC_2.2.5>
    2e77:	mov    QWORD PTR [rip+0x205292],rbx        # 208110 <program_name@@Base>
    2e7e:	mov    QWORD PTR [rip+0x205253],rbx        # 2080d8 <__progname_full@@GLIBC_2.2.5>
    2e85:	pop    rbx
    2e86:	ret    
    2e87:	mov    rcx,QWORD PTR [rip+0x205252]        # 2080e0 <stderr@@GLIBC_2.2.5>
    2e8e:	lea    rdi,[rip+0x33f3]        # 6288 <_IO_stdin_used@@Base+0x648>
    2e95:	mov    edx,0x37
    2e9a:	mov    esi,0x1
    2e9f:	call   1a70 <fwrite@plt>
    2ea4:	call   1780 <abort@plt>
    2ea9:	nop    DWORD PTR [rax+0x0]
    2eb0:	push   rbp
    2eb1:	push   rbx
    2eb2:	mov    rbp,rdi
    2eb5:	mov    ebx,esi
    2eb7:	sub    rsp,0x8
    2ebb:	call   5610 <__cxa_finalize@plt+0x3b50>
    2ec0:	movzx  edx,BYTE PTR [rax]
    2ec3:	and    edx,0xffffffdf
    2ec6:	cmp    dl,0x55
    2ec9:	je     2f40 <__cxa_finalize@plt+0x1480>
    2ecb:	cmp    dl,0x47
    2ece:	je     2ef0 <__cxa_finalize@plt+0x1430>
    2ed0:	lea    rax,[rip+0x3404]        # 62db <_IO_stdin_used@@Base+0x69b>
    2ed7:	lea    rdx,[rip+0x33ff]        # 62dd <_IO_stdin_used@@Base+0x69d>
    2ede:	cmp    ebx,0x9
    2ee1:	cmovne rax,rdx
    2ee5:	add    rsp,0x8
    2ee9:	pop    rbx
    2eea:	pop    rbp
    2eeb:	ret    
    2eec:	nop    DWORD PTR [rax+0x0]
    2ef0:	movzx  edx,BYTE PTR [rax+0x1]
    2ef4:	and    edx,0xffffffdf
    2ef7:	cmp    dl,0x42
    2efa:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2efc:	cmp    BYTE PTR [rax+0x2],0x31
    2f00:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f02:	cmp    BYTE PTR [rax+0x3],0x38
    2f06:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f08:	cmp    BYTE PTR [rax+0x4],0x30
    2f0c:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f0e:	cmp    BYTE PTR [rax+0x5],0x33
    2f12:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f14:	cmp    BYTE PTR [rax+0x6],0x30
    2f18:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f1a:	cmp    BYTE PTR [rax+0x7],0x0
    2f1e:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f20:	cmp    BYTE PTR [rbp+0x0],0x60
    2f24:	lea    rax,[rip+0x33a9]        # 62d4 <_IO_stdin_used@@Base+0x694>
    2f2b:	lea    rdx,[rip+0x33a6]        # 62d8 <_IO_stdin_used@@Base+0x698>
    2f32:	cmovne rax,rdx
    2f36:	add    rsp,0x8
    2f3a:	pop    rbx
    2f3b:	pop    rbp
    2f3c:	ret    
    2f3d:	nop    DWORD PTR [rax]
    2f40:	movzx  edx,BYTE PTR [rax+0x1]
    2f44:	and    edx,0xffffffdf
    2f47:	cmp    dl,0x54
    2f4a:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f4c:	movzx  edx,BYTE PTR [rax+0x2]
    2f50:	and    edx,0xffffffdf
    2f53:	cmp    dl,0x46
    2f56:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f5c:	cmp    BYTE PTR [rax+0x3],0x2d
    2f60:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f66:	cmp    BYTE PTR [rax+0x4],0x38
    2f6a:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f70:	cmp    BYTE PTR [rax+0x5],0x0
    2f74:	jne    2ed0 <__cxa_finalize@plt+0x1410>
    2f7a:	cmp    BYTE PTR [rbp+0x0],0x60
    2f7e:	lea    rax,[rip+0x3347]        # 62cc <_IO_stdin_used@@Base+0x68c>
    2f85:	lea    rdx,[rip+0x3344]        # 62d0 <_IO_stdin_used@@Base+0x690>
    2f8c:	cmovne rax,rdx
    2f90:	add    rsp,0x8
    2f94:	pop    rbx
    2f95:	pop    rbp
    2f96:	ret    
    2f97:	nop    WORD PTR [rax+rax*1+0x0]
    2fa0:	push   r15
    2fa2:	push   r14
    2fa4:	mov    r15d,r8d
    2fa7:	push   r13
    2fa9:	push   r12
    2fab:	mov    r14,rdi
    2fae:	push   rbp
    2faf:	push   rbx
    2fb0:	mov    ebx,r9d
    2fb3:	mov    r13,rsi
    2fb6:	mov    rbp,rcx
    2fb9:	and    ebx,0x2
    2fbc:	sub    rsp,0xb8
    2fc3:	mov    rax,QWORD PTR [rsp+0xf0]
    2fcb:	mov    QWORD PTR [rsp+0x10],rdx
    2fd0:	mov    DWORD PTR [rsp+0x8],r8d
    2fd5:	mov    DWORD PTR [rsp+0x78],r9d
    2fda:	mov    QWORD PTR [rsp+0x20],rax
    2fdf:	mov    rax,QWORD PTR [rsp+0xf8]
    2fe7:	mov    QWORD PTR [rsp+0x68],rax
    2fec:	mov    rax,QWORD PTR [rsp+0x100]
    2ff4:	mov    QWORD PTR [rsp+0x60],rax
    2ff9:	mov    rax,QWORD PTR fs:0x28
    3002:	mov    QWORD PTR [rsp+0xa8],rax
    300a:	xor    eax,eax
    300c:	call   1830 <__ctype_get_mb_cur_max@plt>
    3011:	cmp    r15d,0xa
    3015:	mov    QWORD PTR [rsp+0x58],rax
    301a:	ja     41cf <__cxa_finalize@plt+0x270f>
    3020:	lea    rcx,[rip+0x3319]        # 6340 <_IO_stdin_used@@Base+0x700>
    3027:	mov    edx,r15d
    302a:	movsxd rax,DWORD PTR [rcx+rdx*4]
    302e:	add    rax,rcx
    3031:	jmp    rax
    3033:	mov    BYTE PTR [rsp+0xe],0x1
    3038:	mov    BYTE PTR [rsp+0x7c],0x0
    303d:	xor    r12d,r12d
    3040:	mov    QWORD PTR [rsp+0x50],0x0
    3049:	mov    BYTE PTR [rsp+0xf],0x1
    304e:	mov    BYTE PTR [rsp+0xd],0x0
    3053:	lea    rax,[rip+0x3283]        # 62dd <_IO_stdin_used@@Base+0x69d>
    305a:	mov    QWORD PTR [rsp+0x18],0x1
    3063:	xor    r15d,r15d
    3066:	mov    DWORD PTR [rsp+0x8],0x2
    306e:	mov    QWORD PTR [rsp+0x48],rax
    3073:	xor    r11d,r11d
    3076:	mov    rax,rbp
    3079:	mov    r8d,r12d
    307c:	mov    rbp,r11
    307f:	mov    r11,rax
    3082:	nop    WORD PTR [rax+rax*1+0x0]
    3088:	cmp    r11,rbp
    308b:	setne  r12b
    308f:	cmp    r11,0xffffffffffffffff
    3093:	jne    30a2 <__cxa_finalize@plt+0x15e2>
    3095:	mov    rax,QWORD PTR [rsp+0x10]
    309a:	cmp    BYTE PTR [rax+rbp*1],0x0
    309e:	setne  r12b
    30a2:	test   r12b,r12b
    30a5:	je     3700 <__cxa_finalize@plt+0x1c40>
    30ab:	cmp    DWORD PTR [rsp+0x8],0x2
    30b0:	mov    rdi,QWORD PTR [rsp+0x10]
    30b5:	lea    r9,[rdi+rbp*1]
    30b9:	setne  al
    30bc:	and    al,BYTE PTR [rsp+0xd]
    30c0:	mov    r10d,eax
    30c3:	je     3170 <__cxa_finalize@plt+0x16b0>
    30c9:	mov    rax,QWORD PTR [rsp+0x18]
    30ce:	test   rax,rax
    30d1:	je     3500 <__cxa_finalize@plt+0x1a40>
    30d7:	cmp    r11,0xffffffffffffffff
    30db:	lea    rbx,[rbp+rax*1+0x0]
    30e0:	jne    3110 <__cxa_finalize@plt+0x1650>
    30e2:	cmp    rax,0x1
    30e6:	jbe    3110 <__cxa_finalize@plt+0x1650>
    30e8:	mov    BYTE PTR [rsp+0x38],r8b
    30ed:	mov    BYTE PTR [rsp+0x30],r10b
    30f2:	mov    QWORD PTR [rsp+0x28],r9
    30f7:	call   1840 <strlen@plt>
    30fc:	movzx  r8d,BYTE PTR [rsp+0x38]
    3102:	movzx  r10d,BYTE PTR [rsp+0x30]
    3108:	mov    r11,rax
    310b:	mov    r9,QWORD PTR [rsp+0x28]
    3110:	cmp    rbx,r11
    3113:	mov    BYTE PTR [rsp+0x28],r10b
    3118:	ja     36d0 <__cxa_finalize@plt+0x1c10>
    311e:	mov    rdx,QWORD PTR [rsp+0x18]
    3123:	mov    rsi,QWORD PTR [rsp+0x48]
    3128:	mov    rdi,r9
    312b:	mov    QWORD PTR [rsp+0x40],r11
    3130:	mov    BYTE PTR [rsp+0x38],r8b
    3135:	mov    QWORD PTR [rsp+0x30],r9
    313a:	call   1900 <memcmp@plt>
    313f:	test   eax,eax
    3141:	mov    r9,QWORD PTR [rsp+0x30]
    3146:	movzx  r8d,BYTE PTR [rsp+0x38]
    314c:	mov    r11,QWORD PTR [rsp+0x40]
    3151:	jne    36d0 <__cxa_finalize@plt+0x1c10>
    3157:	cmp    BYTE PTR [rsp+0xf],0x0
    315c:	movzx  r10d,BYTE PTR [rsp+0x28]
    3162:	jne    40e5 <__cxa_finalize@plt+0x2625>
    3168:	nop    DWORD PTR [rax+rax*1+0x0]
    3170:	movzx  ebx,BYTE PTR [r9]
    3174:	cmp    bl,0x7e
    3177:	ja     3498 <__cxa_finalize@plt+0x19d8>
    317d:	lea    rcx,[rip+0x31e8]        # 636c <_IO_stdin_used@@Base+0x72c>
    3184:	movzx  edx,bl
    3187:	movsxd rax,DWORD PTR [rcx+rdx*4]
    318b:	add    rax,rcx
    318e:	jmp    rax
    3190:	xor    r10d,r10d
    3193:	cmp    r11,0x1
    3197:	setne  al
    319a:	cmp    r11,0xffffffffffffffff
    319e:	jne    31ac <__cxa_finalize@plt+0x16ec>
    31a0:	mov    rax,QWORD PTR [rsp+0x10]
    31a5:	cmp    BYTE PTR [rax+0x1],0x0
    31a9:	setne  al
    31ac:	cmp    DWORD PTR [rsp+0x8],0x2
    31b1:	sete   dl
    31b4:	test   al,al
    31b6:	je     3408 <__cxa_finalize@plt+0x1948>
    31bc:	xor    r12d,r12d
    31bf:	xor    eax,eax
    31c1:	nop    DWORD PTR [rax+0x0]
    31c8:	cmp    BYTE PTR [rsp+0xd],0x1
    31cd:	jne    32e2 <__cxa_finalize@plt+0x1822>
    31d3:	test   dl,dl
    31d5:	jne    32e2 <__cxa_finalize@plt+0x1822>
    31db:	mov    rsi,QWORD PTR [rsp+0x20]
    31e0:	test   rsi,rsi
    31e3:	je     31f9 <__cxa_finalize@plt+0x1739>
    31e5:	mov    edx,ebx
    31e7:	shr    dl,0x5
    31ea:	movzx  edx,dl
    31ed:	mov    edx,DWORD PTR [rsi+rdx*4]
    31f0:	bt     edx,ebx
    31f3:	jb     3343 <__cxa_finalize@plt+0x1883>
    31f9:	test   r10b,r10b
    31fc:	jne    3343 <__cxa_finalize@plt+0x1883>
    3202:	xor    eax,0x1
    3205:	add    rbp,0x1
    3209:	and    eax,r8d
    320c:	test   al,al
    320e:	je     3230 <__cxa_finalize@plt+0x1770>
    3210:	cmp    r13,r15
    3213:	jbe    321a <__cxa_finalize@plt+0x175a>
    3215:	mov    BYTE PTR [r14+r15*1],0x27
    321a:	lea    rax,[r15+0x1]
    321e:	cmp    r13,rax
    3221:	jbe    3229 <__cxa_finalize@plt+0x1769>
    3223:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    3229:	add    r15,0x2
    322d:	xor    r8d,r8d
    3230:	cmp    r15,r13
    3233:	jae    3239 <__cxa_finalize@plt+0x1779>
    3235:	mov    BYTE PTR [r14+r15*1],bl
    3239:	movzx  edi,BYTE PTR [rsp+0xe]
    323e:	add    r15,0x1
    3242:	mov    eax,0x0
    3247:	test   r12b,r12b
    324a:	cmove  edi,eax
    324d:	mov    BYTE PTR [rsp+0xe],dil
    3252:	jmp    3088 <__cxa_finalize@plt+0x15c8>
    3257:	nop    WORD PTR [rax+rax*1+0x0]
    3260:	xor    r10d,r10d
    3263:	mov    eax,DWORD PTR [rsp+0x8]
    3267:	cmp    eax,0x2
    326a:	je     3828 <__cxa_finalize@plt+0x1d68>
    3270:	cmp    eax,0x5
    3273:	je     37e8 <__cxa_finalize@plt+0x1d28>
    3279:	cmp    eax,0x2
    327c:	mov    ebx,0x3f
    3281:	sete   dl
    3284:	xor    r12d,r12d
    3287:	xor    eax,eax
    3289:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    328e:	xchg   ax,ax
    3290:	xor    r10d,r10d
    3293:	cmp    DWORD PTR [rsp+0x8],0x2
    3298:	je     37a0 <__cxa_finalize@plt+0x1ce0>
    329e:	mov    BYTE PTR [rsp+0x7c],r12b
    32a3:	xor    edx,edx
    32a5:	xor    eax,eax
    32a7:	mov    ebx,0x27
    32ac:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    32b1:	nop    DWORD PTR [rax+0x0]
    32b8:	mov    edx,0x9
    32bd:	mov    ebx,0x74
    32c2:	cmp    DWORD PTR [rsp+0x8],0x2
    32c7:	sete   al
    32ca:	and    al,BYTE PTR [rsp+0xf]
    32ce:	jne    341e <__cxa_finalize@plt+0x195e>
    32d4:	cmp    BYTE PTR [rsp+0xd],0x0
    32d9:	jne    3340 <__cxa_finalize@plt+0x1880>
    32db:	mov    ebx,edx
    32dd:	xor    r12d,r12d
    32e0:	xor    eax,eax
    32e2:	cmp    BYTE PTR [rsp+0xf],0x0
    32e7:	jne    31db <__cxa_finalize@plt+0x171b>
    32ed:	jmp    31f9 <__cxa_finalize@plt+0x1739>
    32f2:	nop    WORD PTR [rax+rax*1+0x0]
    32f8:	mov    edx,0x8
    32fd:	mov    ebx,0x62
    3302:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    3304:	nop    DWORD PTR [rax+0x0]
    3308:	cmp    DWORD PTR [rsp+0x8],0x2
    330d:	je     36e0 <__cxa_finalize@plt+0x1c20>
    3313:	cmp    BYTE PTR [rsp+0xd],0x0
    3318:	je     3530 <__cxa_finalize@plt+0x1a70>
    331e:	cmp    BYTE PTR [rsp+0xf],0x0
    3323:	je     3530 <__cxa_finalize@plt+0x1a70>
    3329:	cmp    QWORD PTR [rsp+0x18],0x0
    332f:	jne    36eb <__cxa_finalize@plt+0x1c2b>
    3335:	mov    ebx,0x5c
    333a:	nop    WORD PTR [rax+rax*1+0x0]
    3340:	xor    r12d,r12d
    3343:	cmp    DWORD PTR [rsp+0x8],0x2
    3348:	sete   dl
    334b:	cmp    BYTE PTR [rsp+0xf],0x0
    3350:	mov    eax,edx
    3352:	jne    3ba8 <__cxa_finalize@plt+0x20e8>
    3358:	mov    eax,r8d
    335b:	xor    eax,0x1
    335e:	and    al,dl
    3360:	je     3391 <__cxa_finalize@plt+0x18d1>
    3362:	cmp    r13,r15
    3365:	jbe    336c <__cxa_finalize@plt+0x18ac>
    3367:	mov    BYTE PTR [r14+r15*1],0x27
    336c:	lea    rdx,[r15+0x1]
    3370:	cmp    r13,rdx
    3373:	jbe    337b <__cxa_finalize@plt+0x18bb>
    3375:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    337b:	lea    rdx,[r15+0x2]
    337f:	cmp    r13,rdx
    3382:	jbe    338a <__cxa_finalize@plt+0x18ca>
    3384:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    338a:	add    r15,0x3
    338e:	mov    r8d,eax
    3391:	cmp    r13,r15
    3394:	jbe    339b <__cxa_finalize@plt+0x18db>
    3396:	mov    BYTE PTR [r14+r15*1],0x5c
    339b:	add    r15,0x1
    339f:	add    rbp,0x1
    33a3:	jmp    3230 <__cxa_finalize@plt+0x1770>
    33a8:	nop    DWORD PTR [rax+rax*1+0x0]
    33b0:	cmp    BYTE PTR [rsp+0xd],0x0
    33b5:	jne    3583 <__cxa_finalize@plt+0x1ac3>
    33bb:	xor    edx,edx
    33bd:	test   BYTE PTR [rsp+0x78],0x1
    33c2:	je     32db <__cxa_finalize@plt+0x181b>
    33c8:	add    rbp,0x1
    33cc:	jmp    3088 <__cxa_finalize@plt+0x15c8>
    33d1:	nop    DWORD PTR [rax+0x0]
    33d8:	cmp    DWORD PTR [rsp+0x8],0x2
    33dd:	sete   dl
    33e0:	xor    eax,eax
    33e2:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    33e7:	nop    WORD PTR [rax+rax*1+0x0]
    33f0:	mov    edx,0x7
    33f5:	mov    ebx,0x61
    33fa:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    33ff:	nop
    3400:	cmp    DWORD PTR [rsp+0x8],0x2
    3405:	sete   dl
    3408:	test   rbp,rbp
    340b:	jne    31bc <__cxa_finalize@plt+0x16fc>
    3411:	movzx  eax,BYTE PTR [rsp+0xf]
    3416:	and    al,dl
    3418:	je     31c8 <__cxa_finalize@plt+0x1708>
    341e:	mov    rbp,r11
    3421:	mov    DWORD PTR [rsp+0x8],0x2
    3429:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    342e:	xchg   ax,ax
    3430:	cmp    DWORD PTR [rsp+0x8],0x2
    3435:	sete   dl
    3438:	xor    r12d,r12d
    343b:	jmp    3411 <__cxa_finalize@plt+0x1951>
    343d:	nop    DWORD PTR [rax]
    3440:	cmp    DWORD PTR [rsp+0x8],0x2
    3445:	mov    ebx,0x20
    344a:	sete   dl
    344d:	jmp    3411 <__cxa_finalize@plt+0x1951>
    344f:	nop
    3450:	mov    edx,0xd
    3455:	mov    ebx,0x72
    345a:	jmp    32c2 <__cxa_finalize@plt+0x1802>
    345f:	nop
    3460:	mov    edx,0xc
    3465:	mov    ebx,0x66
    346a:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    346f:	nop
    3470:	mov    edx,0xb
    3475:	mov    ebx,0x76
    347a:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    347f:	nop
    3480:	mov    edx,0xa
    3485:	mov    ebx,0x6e
    348a:	jmp    32c2 <__cxa_finalize@plt+0x1802>
    348f:	nop
    3490:	xor    r10d,r10d
    3493:	nop    DWORD PTR [rax+rax*1+0x0]
    3498:	cmp    QWORD PTR [rsp+0x58],0x1
    349e:	jne    3848 <__cxa_finalize@plt+0x1d88>
    34a4:	mov    QWORD PTR [rsp+0x38],r11
    34a9:	mov    BYTE PTR [rsp+0x30],r8b
    34ae:	mov    BYTE PTR [rsp+0x28],r10b
    34b3:	call   1ab0 <__ctype_b_loc@plt>
    34b8:	mov    rcx,QWORD PTR [rax]
    34bb:	movzx  edx,bl
    34be:	movzx  r10d,BYTE PTR [rsp+0x28]
    34c4:	movzx  r8d,BYTE PTR [rsp+0x30]
    34ca:	mov    r11,QWORD PTR [rsp+0x38]
    34cf:	mov    edi,0x1
    34d4:	movzx  eax,WORD PTR [rcx+rdx*2]
    34d8:	and    ax,0x4000
    34dc:	setne  r12b
    34e0:	sete   al
    34e3:	and    al,BYTE PTR [rsp+0xd]
    34e7:	test   al,al
    34e9:	jne    3e81 <__cxa_finalize@plt+0x23c1>
    34ef:	cmp    DWORD PTR [rsp+0x8],0x2
    34f4:	sete   dl
    34f7:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    34fc:	nop    DWORD PTR [rax+0x0]
    3500:	movzx  ebx,BYTE PTR [r9]
    3504:	cmp    bl,0x7e
    3507:	ja     3490 <__cxa_finalize@plt+0x19d0>
    3509:	lea    rcx,[rip+0x3058]        # 6568 <_IO_stdin_used@@Base+0x928>
    3510:	movzx  edx,bl
    3513:	movsxd rax,DWORD PTR [rcx+rdx*4]
    3517:	add    rax,rcx
    351a:	jmp    rax
    351c:	nop    DWORD PTR [rax+0x0]
    3520:	xor    r10d,r10d
    3523:	cmp    BYTE PTR [rsp+0xd],0x0
    3528:	jne    331e <__cxa_finalize@plt+0x185e>
    352e:	xchg   ax,ax
    3530:	mov    edx,0x5c
    3535:	mov    ebx,0x5c
    353a:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    353f:	nop
    3540:	mov    edx,0xc
    3545:	xor    r10d,r10d
    3548:	mov    ebx,0x66
    354d:	jmp    32d4 <__cxa_finalize@plt+0x1814>
    3552:	nop    WORD PTR [rax+rax*1+0x0]
    3558:	mov    edx,0xa
    355d:	xor    r10d,r10d
    3560:	mov    ebx,0x6e
    3565:	jmp    32c2 <__cxa_finalize@plt+0x1802>
    356a:	nop    WORD PTR [rax+rax*1+0x0]
    3570:	mov    ebx,0x61
    3575:	jmp    3340 <__cxa_finalize@plt+0x1880>
    357a:	nop    WORD PTR [rax+rax*1+0x0]
    3580:	xor    r10d,r10d
    3583:	cmp    DWORD PTR [rsp+0x8],0x2
    3588:	sete   dl
    358b:	cmp    BYTE PTR [rsp+0xf],0x0
    3590:	jne    412a <__cxa_finalize@plt+0x266a>
    3596:	mov    eax,r8d
    3599:	mov    rcx,r15
    359c:	xor    eax,0x1
    359f:	and    al,dl
    35a1:	je     35d0 <__cxa_finalize@plt+0x1b10>
    35a3:	cmp    r13,r15
    35a6:	jbe    35ad <__cxa_finalize@plt+0x1aed>
    35a8:	mov    BYTE PTR [r14+r15*1],0x27
    35ad:	lea    rcx,[r15+0x1]
    35b1:	cmp    r13,rcx
    35b4:	jbe    35bc <__cxa_finalize@plt+0x1afc>
    35b6:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    35bc:	lea    rcx,[r15+0x2]
    35c0:	cmp    r13,rcx
    35c3:	ja     3bf9 <__cxa_finalize@plt+0x2139>
    35c9:	lea    rcx,[r15+0x3]
    35cd:	mov    r8d,eax
    35d0:	cmp    r13,rcx
    35d3:	jbe    35da <__cxa_finalize@plt+0x1b1a>
    35d5:	mov    BYTE PTR [r14+rcx*1],0x5c
    35da:	cmp    DWORD PTR [rsp+0x8],0x2
    35df:	lea    r15,[rcx+0x1]
    35e3:	je     3be9 <__cxa_finalize@plt+0x2129>
    35e9:	lea    rax,[rbp+0x1]
    35ed:	cmp    rax,r11
    35f0:	jae    360b <__cxa_finalize@plt+0x1b4b>
    35f2:	mov    rax,QWORD PTR [rsp+0x10]
    35f7:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    35fc:	mov    BYTE PTR [rsp+0x28],al
    3600:	sub    eax,0x30
    3603:	cmp    al,0x9
    3605:	jbe    3e39 <__cxa_finalize@plt+0x2379>
    360b:	mov    eax,r12d
    360e:	mov    ebx,0x30
    3613:	xor    r12d,r12d
    3616:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    361b:	nop    DWORD PTR [rax+rax*1+0x0]
    3620:	cmp    DWORD PTR [rsp+0x8],0x2
    3625:	mov    r12d,r10d
    3628:	sete   dl
    362b:	xor    r10d,r10d
    362e:	xor    eax,eax
    3630:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    3635:	nop    DWORD PTR [rax]
    3638:	cmp    DWORD PTR [rsp+0x8],0x2
    363d:	sete   dl
    3640:	xor    r10d,r10d
    3643:	jmp    3408 <__cxa_finalize@plt+0x1948>
    3648:	nop    DWORD PTR [rax+rax*1+0x0]
    3650:	cmp    DWORD PTR [rsp+0x8],0x2
    3655:	sete   dl
    3658:	xor    r10d,r10d
    365b:	xor    r12d,r12d
    365e:	jmp    3411 <__cxa_finalize@plt+0x1951>
    3663:	nop    DWORD PTR [rax+rax*1+0x0]
    3668:	cmp    DWORD PTR [rsp+0x8],0x2
    366d:	mov    r12d,r10d
    3670:	mov    ebx,0x20
    3675:	sete   dl
    3678:	xor    r10d,r10d
    367b:	jmp    3411 <__cxa_finalize@plt+0x1951>
    3680:	mov    edx,0xd
    3685:	xor    r10d,r10d
    3688:	mov    ebx,0x72
    368d:	jmp    32c2 <__cxa_finalize@plt+0x1802>
    3692:	nop    WORD PTR [rax+rax*1+0x0]
    3698:	mov    ebx,0x76
    369d:	jmp    3340 <__cxa_finalize@plt+0x1880>
    36a2:	nop    WORD PTR [rax+rax*1+0x0]
    36a8:	mov    edx,0x9
    36ad:	xor    r10d,r10d
    36b0:	mov    ebx,0x74
    36b5:	jmp    32c2 <__cxa_finalize@plt+0x1802>
    36ba:	nop    WORD PTR [rax+rax*1+0x0]
    36c0:	mov    ebx,0x62
    36c5:	jmp    3340 <__cxa_finalize@plt+0x1880>
    36ca:	nop    WORD PTR [rax+rax*1+0x0]
    36d0:	xor    r10d,r10d
    36d3:	jmp    3170 <__cxa_finalize@plt+0x16b0>
    36d8:	nop    DWORD PTR [rax+rax*1+0x0]
    36e0:	cmp    BYTE PTR [rsp+0xf],0x0
    36e5:	jne    4050 <__cxa_finalize@plt+0x2590>
    36eb:	add    rbp,0x1
    36ef:	mov    eax,r8d
    36f2:	xor    r12d,r12d
    36f5:	mov    ebx,0x5c
    36fa:	jmp    320c <__cxa_finalize@plt+0x174c>
    36ff:	nop
    3700:	cmp    DWORD PTR [rsp+0x8],0x2
    3705:	movzx  ebx,BYTE PTR [rsp+0xf]
    370a:	mov    r12d,r8d
    370d:	mov    rbp,r11
    3710:	sete   dl
    3713:	mov    eax,ebx
    3715:	test   r15,r15
    3718:	sete   cl
    371b:	and    eax,edx
    371d:	and    al,cl
    371f:	jne    4186 <__cxa_finalize@plt+0x26c6>
    3725:	mov    eax,ebx
    3727:	xor    eax,0x1
    372a:	and    dl,al
    372c:	je     409c <__cxa_finalize@plt+0x25dc>
    3732:	cmp    BYTE PTR [rsp+0x7c],0x0
    3737:	je     409a <__cxa_finalize@plt+0x25da>
    373d:	cmp    BYTE PTR [rsp+0xe],0x0
    3742:	jne    413d <__cxa_finalize@plt+0x267d>
    3748:	test   r13,r13
    374b:	sete   al
    374e:	cmp    QWORD PTR [rsp+0x50],0x0
    3754:	setne  dl
    3757:	and    al,dl
    3759:	je     417c <__cxa_finalize@plt+0x26bc>
    375f:	mov    r13,QWORD PTR [rsp+0x50]
    3764:	lea    rbx,[rip+0x2b72]        # 62dd <_IO_stdin_used@@Base+0x69d>
    376b:	mov    BYTE PTR [r14],0x27
    376f:	mov    DWORD PTR [rsp+0x8],0x2
    3777:	mov    r15d,0x1
    377d:	mov    QWORD PTR [rsp+0x18],0x1
    3786:	mov    BYTE PTR [rsp+0xf],0x0
    378b:	mov    QWORD PTR [rsp+0x48],rbx
    3790:	mov    BYTE PTR [rsp+0x7c],al
    3794:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3799:	nop    DWORD PTR [rax+0x0]
    37a0:	cmp    BYTE PTR [rsp+0xf],0x0
    37a5:	jne    4050 <__cxa_finalize@plt+0x2590>
    37ab:	test   r13,r13
    37ae:	je     3bb0 <__cxa_finalize@plt+0x20f0>
    37b4:	xor    edx,edx
    37b6:	cmp    QWORD PTR [rsp+0x50],0x0
    37bc:	jne    3bb0 <__cxa_finalize@plt+0x20f0>
    37c2:	mov    QWORD PTR [rsp+0x50],r13
    37c7:	add    r15,0x3
    37cb:	xor    eax,eax
    37cd:	mov    BYTE PTR [rsp+0x7c],r12b
    37d2:	xor    r8d,r8d
    37d5:	mov    r13,rdx
    37d8:	mov    ebx,0x27
    37dd:	jmp    31f9 <__cxa_finalize@plt+0x1739>
    37e2:	nop    WORD PTR [rax+rax*1+0x0]
    37e8:	test   BYTE PTR [rsp+0x78],0x4
    37ed:	je     3810 <__cxa_finalize@plt+0x1d50>
    37ef:	lea    rcx,[rbp+0x2]
    37f3:	cmp    rcx,r11
    37f6:	jae    3810 <__cxa_finalize@plt+0x1d50>
    37f8:	mov    rax,QWORD PTR [rsp+0x10]
    37fd:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    3802:	je     3f92 <__cxa_finalize@plt+0x24d2>
    3808:	nop    DWORD PTR [rax+rax*1+0x0]
    3810:	xor    edx,edx
    3812:	xor    r12d,r12d
    3815:	xor    eax,eax
    3817:	mov    ebx,0x3f
    381c:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    3821:	nop    DWORD PTR [rax+0x0]
    3828:	cmp    BYTE PTR [rsp+0xf],0x0
    382d:	jne    4050 <__cxa_finalize@plt+0x2590>
    3833:	xor    r12d,r12d
    3836:	xor    eax,eax
    3838:	mov    ebx,0x3f
    383d:	jmp    31f9 <__cxa_finalize@plt+0x1739>
    3842:	nop    WORD PTR [rax+rax*1+0x0]
    3848:	lea    rax,[rsp+0xa0]
    3850:	cmp    r11,0xffffffffffffffff
    3854:	mov    QWORD PTR [rsp+0xa0],0x0
    3860:	mov    QWORD PTR [rsp+0x28],rax
    3865:	jne    3894 <__cxa_finalize@plt+0x1dd4>
    3867:	mov    rdi,QWORD PTR [rsp+0x10]
    386c:	mov    BYTE PTR [rsp+0x40],r8b
    3871:	mov    BYTE PTR [rsp+0x38],r10b
    3876:	mov    QWORD PTR [rsp+0x30],r9
    387b:	call   1840 <strlen@plt>
    3880:	movzx  r8d,BYTE PTR [rsp+0x40]
    3886:	movzx  r10d,BYTE PTR [rsp+0x38]
    388c:	mov    r11,rax
    388f:	mov    r9,QWORD PTR [rsp+0x30]
    3894:	lea    rax,[rsp+0x9c]
    389c:	xor    ecx,ecx
    389e:	mov    BYTE PTR [rsp+0x7e],bl
    38a2:	mov    BYTE PTR [rsp+0x7d],r8b
    38a7:	mov    rbx,rcx
    38aa:	mov    QWORD PTR [rsp+0x88],r9
    38b2:	mov    QWORD PTR [rsp+0x38],rax
    38b7:	mov    BYTE PTR [rsp+0x7f],r10b
    38bc:	mov    QWORD PTR [rsp+0x80],r15
    38c4:	mov    QWORD PTR [rsp+0x40],r14
    38c9:	mov    QWORD PTR [rsp+0x70],r13
    38ce:	mov    QWORD PTR [rsp+0x30],r11
    38d3:	mov    rax,QWORD PTR [rsp+0x10]
    38d8:	lea    r14,[rbp+rbx*1+0x0]
    38dd:	mov    rdx,QWORD PTR [rsp+0x30]
    38e2:	mov    rcx,QWORD PTR [rsp+0x28]
    38e7:	mov    rdi,QWORD PTR [rsp+0x38]
    38ec:	lea    r13,[rax+r14*1]
    38f0:	sub    rdx,r14
    38f3:	mov    rsi,r13
    38f6:	call   54a0 <__cxa_finalize@plt+0x39e0>
    38fb:	test   rax,rax
    38fe:	mov    r15,rax
    3901:	je     3951 <__cxa_finalize@plt+0x1e91>
    3903:	cmp    rax,0xffffffffffffffff
    3907:	je     3f25 <__cxa_finalize@plt+0x2465>
    390d:	cmp    rax,0xfffffffffffffffe
    3911:	je     3eb1 <__cxa_finalize@plt+0x23f1>
    3917:	cmp    DWORD PTR [rsp+0x8],0x2
    391c:	sete   al
    391f:	and    al,BYTE PTR [rsp+0xf]
    3923:	jne    3ac0 <__cxa_finalize@plt+0x2000>
    3929:	mov    edi,DWORD PTR [rsp+0x9c]
    3930:	call   1aa0 <iswprint@plt>
    3935:	mov    rdi,QWORD PTR [rsp+0x28]
    393a:	test   eax,eax
    393c:	mov    eax,0x0
    3941:	cmove  r12d,eax
    3945:	add    rbx,r15
    3948:	call   1a90 <mbsinit@plt>
    394d:	test   eax,eax
    394f:	je     38d3 <__cxa_finalize@plt+0x1e13>
    3951:	mov    edx,r12d
    3954:	mov    rdi,rbx
    3957:	movzx  r8d,BYTE PTR [rsp+0x7d]
    395d:	xor    edx,0x1
    3960:	movzx  ebx,BYTE PTR [rsp+0x7e]
    3965:	movzx  r10d,BYTE PTR [rsp+0x7f]
    396b:	and    dl,BYTE PTR [rsp+0xd]
    396f:	mov    r15,QWORD PTR [rsp+0x80]
    3977:	mov    r14,QWORD PTR [rsp+0x40]
    397c:	mov    r13,QWORD PTR [rsp+0x70]
    3981:	mov    r11,QWORD PTR [rsp+0x30]
    3986:	cmp    rdi,0x1
    398a:	jbe    3f8b <__cxa_finalize@plt+0x24cb>
    3990:	mov    rcx,rdi
    3993:	xor    esi,esi
    3995:	movzx  r9d,BYTE PTR [rsp+0xf]
    399b:	add    rcx,rbp
    399e:	mov    rdi,QWORD PTR [rsp+0x10]
    39a3:	jmp    3a5e <__cxa_finalize@plt+0x1f9e>
    39a8:	nop    DWORD PTR [rax+rax*1+0x0]
    39b0:	cmp    DWORD PTR [rsp+0x8],0x2
    39b5:	sete   al
    39b8:	test   r9b,r9b
    39bb:	jne    3e70 <__cxa_finalize@plt+0x23b0>
    39c1:	mov    esi,r8d
    39c4:	xor    esi,0x1
    39c7:	and    al,sil
    39ca:	je     39fb <__cxa_finalize@plt+0x1f3b>
    39cc:	cmp    r13,r15
    39cf:	jbe    39d6 <__cxa_finalize@plt+0x1f16>
    39d1:	mov    BYTE PTR [r14+r15*1],0x27
    39d6:	lea    rsi,[r15+0x1]
    39da:	cmp    r13,rsi
    39dd:	jbe    39e5 <__cxa_finalize@plt+0x1f25>
    39df:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    39e5:	lea    rsi,[r15+0x2]
    39e9:	cmp    r13,rsi
    39ec:	jbe    39f4 <__cxa_finalize@plt+0x1f34>
    39ee:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    39f4:	add    r15,0x3
    39f8:	mov    r8d,eax
    39fb:	cmp    r13,r15
    39fe:	jbe    3a05 <__cxa_finalize@plt+0x1f45>
    3a00:	mov    BYTE PTR [r14+r15*1],0x5c
    3a05:	lea    rax,[r15+0x1]
    3a09:	cmp    r13,rax
    3a0c:	jbe    3a1b <__cxa_finalize@plt+0x1f5b>
    3a0e:	mov    eax,ebx
    3a10:	shr    al,0x6
    3a13:	add    eax,0x30
    3a16:	mov    BYTE PTR [r14+r15*1+0x1],al
    3a1b:	lea    rax,[r15+0x2]
    3a1f:	cmp    r13,rax
    3a22:	jbe    3a34 <__cxa_finalize@plt+0x1f74>
    3a24:	mov    eax,ebx
    3a26:	shr    al,0x3
    3a29:	and    eax,0x7
    3a2c:	add    eax,0x30
    3a2f:	mov    BYTE PTR [r14+r15*1+0x2],al
    3a34:	and    ebx,0x7
    3a37:	add    rbp,0x1
    3a3b:	add    r15,0x3
    3a3f:	add    ebx,0x30
    3a42:	cmp    rbp,rcx
    3a45:	jae    3230 <__cxa_finalize@plt+0x1770>
    3a4b:	mov    esi,edx
    3a4d:	cmp    r13,r15
    3a50:	jbe    3a56 <__cxa_finalize@plt+0x1f96>
    3a52:	mov    BYTE PTR [r14+r15*1],bl
    3a56:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    3a5a:	add    r15,0x1
    3a5e:	test   dl,dl
    3a60:	jne    39b0 <__cxa_finalize@plt+0x1ef0>
    3a66:	mov    eax,esi
    3a68:	xor    eax,0x1
    3a6b:	and    eax,r8d
    3a6e:	test   r10b,r10b
    3a71:	je     3a81 <__cxa_finalize@plt+0x1fc1>
    3a73:	cmp    r13,r15
    3a76:	jbe    3a7d <__cxa_finalize@plt+0x1fbd>
    3a78:	mov    BYTE PTR [r14+r15*1],0x5c
    3a7d:	add    r15,0x1
    3a81:	add    rbp,0x1
    3a85:	cmp    rbp,rcx
    3a88:	jae    320c <__cxa_finalize@plt+0x174c>
    3a8e:	test   al,al
    3a90:	je     3e8e <__cxa_finalize@plt+0x23ce>
    3a96:	cmp    r13,r15
    3a99:	jbe    3aa0 <__cxa_finalize@plt+0x1fe0>
    3a9b:	mov    BYTE PTR [r14+r15*1],0x27
    3aa0:	lea    rax,[r15+0x1]
    3aa4:	cmp    r13,rax
    3aa7:	jbe    3aaf <__cxa_finalize@plt+0x1fef>
    3aa9:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    3aaf:	add    r15,0x2
    3ab3:	xor    r10d,r10d
    3ab6:	xor    r8d,r8d
    3ab9:	jmp    3a4d <__cxa_finalize@plt+0x1f8d>
    3abb:	nop    DWORD PTR [rax+rax*1+0x0]
    3ac0:	cmp    r15,0x1
    3ac4:	je     3929 <__cxa_finalize@plt+0x1e69>
    3aca:	mov    rdi,QWORD PTR [rsp+0x10]
    3acf:	lea    rcx,[rdi+r15*1]
    3ad3:	lea    rdx,[rdi+r14*1+0x1]
    3ad8:	lea    r8,[rcx+r14*1]
    3adc:	jmp    3aed <__cxa_finalize@plt+0x202d>
    3ade:	xchg   ax,ax
    3ae0:	add    rdx,0x1
    3ae4:	cmp    r8,rdx
    3ae7:	je     3929 <__cxa_finalize@plt+0x1e69>
    3aed:	movzx  ecx,BYTE PTR [rdx]
    3af0:	sub    ecx,0x5b
    3af3:	cmp    cl,0x21
    3af6:	ja     3ae0 <__cxa_finalize@plt+0x2020>
    3af8:	mov    esi,0x1
    3afd:	shl    rsi,cl
    3b00:	mov    rcx,rsi
    3b03:	movabs rsi,0x20000002b
    3b0d:	test   rcx,rsi
    3b10:	je     3ae0 <__cxa_finalize@plt+0x2020>
    3b12:	mov    r14,QWORD PTR [rsp+0x40]
    3b17:	mov    r13,QWORD PTR [rsp+0x70]
    3b1c:	mov    rbp,QWORD PTR [rsp+0x30]
    3b21:	mov    DWORD PTR [rsp+0x8],0x2
    3b29:	cmp    BYTE PTR [rsp+0xd],0x0
    3b2e:	je     3b40 <__cxa_finalize@plt+0x2080>
    3b30:	test   al,al
    3b32:	mov    eax,0x4
    3b37:	cmove  eax,DWORD PTR [rsp+0x8]
    3b3c:	mov    DWORD PTR [rsp+0x8],eax
    3b40:	sub    rsp,0x8
    3b44:	mov    rcx,rbp
    3b47:	mov    rsi,r13
    3b4a:	push   QWORD PTR [rsp+0x68]
    3b4e:	push   QWORD PTR [rsp+0x78]
    3b52:	mov    rdi,r14
    3b55:	push   0x0
    3b57:	mov    r9d,DWORD PTR [rsp+0x98]
    3b5f:	mov    r8d,DWORD PTR [rsp+0x28]
    3b64:	mov    rdx,QWORD PTR [rsp+0x30]
    3b69:	and    r9d,0xfffffffd
    3b6d:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    3b72:	add    rsp,0x20
    3b76:	mov    r15,rax
    3b79:	mov    rbx,QWORD PTR [rsp+0xa8]
    3b81:	xor    rbx,QWORD PTR fs:0x28
    3b8a:	mov    rax,r15
    3b8d:	jne    4193 <__cxa_finalize@plt+0x26d3>
    3b93:	add    rsp,0xb8
    3b9a:	pop    rbx
    3b9b:	pop    rbp
    3b9c:	pop    r12
    3b9e:	pop    r13
    3ba0:	pop    r14
    3ba2:	pop    r15
    3ba4:	ret    
    3ba5:	nop    DWORD PTR [rax]
    3ba8:	mov    rbp,r11
    3bab:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    3bb0:	cmp    r13,r15
    3bb3:	jbe    3bba <__cxa_finalize@plt+0x20fa>
    3bb5:	mov    BYTE PTR [r14+r15*1],0x27
    3bba:	lea    rax,[r15+0x1]
    3bbe:	cmp    r13,rax
    3bc1:	jbe    3bc9 <__cxa_finalize@plt+0x2109>
    3bc3:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    3bc9:	lea    rax,[r15+0x2]
    3bcd:	cmp    r13,rax
    3bd0:	jbe    41c2 <__cxa_finalize@plt+0x2702>
    3bd6:	mov    rdx,r13
    3bd9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3bdf:	mov    r13,QWORD PTR [rsp+0x50]
    3be4:	jmp    37c2 <__cxa_finalize@plt+0x1d02>
    3be9:	mov    eax,r12d
    3bec:	mov    ebx,0x30
    3bf1:	xor    r12d,r12d
    3bf4:	jmp    31f9 <__cxa_finalize@plt+0x1739>
    3bf9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3bff:	jmp    35c9 <__cxa_finalize@plt+0x1b09>
    3c04:	test   ebx,ebx
    3c06:	jne    3033 <__cxa_finalize@plt+0x1573>
    3c0c:	mov    BYTE PTR [rsp+0xd],0x1
    3c11:	test   r13,r13
    3c14:	jne    41aa <__cxa_finalize@plt+0x26ea>
    3c1a:	lea    rax,[rip+0x26bc]        # 62dd <_IO_stdin_used@@Base+0x69d>
    3c21:	mov    QWORD PTR [rsp+0x50],0x0
    3c2a:	mov    BYTE PTR [rsp+0xe],0x1
    3c2f:	mov    BYTE PTR [rsp+0x7c],0x0
    3c34:	xor    r12d,r12d
    3c37:	mov    BYTE PTR [rsp+0xf],0x0
    3c3c:	mov    QWORD PTR [rsp+0x18],0x1
    3c45:	mov    QWORD PTR [rsp+0x48],rax
    3c4a:	mov    r15d,0x1
    3c50:	mov    DWORD PTR [rsp+0x8],0x2
    3c58:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3c5d:	nop    DWORD PTR [rax]
    3c60:	test   ebx,ebx
    3c62:	jne    405d <__cxa_finalize@plt+0x259d>
    3c68:	test   r13,r13
    3c6b:	je     3e96 <__cxa_finalize@plt+0x23d6>
    3c71:	mov    BYTE PTR [r14],0x22
    3c75:	mov    BYTE PTR [rsp+0xe],0x1
    3c7a:	xor    r12d,r12d
    3c7d:	mov    BYTE PTR [rsp+0x7c],0x0
    3c82:	mov    QWORD PTR [rsp+0x50],0x0
    3c8b:	lea    rax,[rip+0x2649]        # 62db <_IO_stdin_used@@Base+0x69b>
    3c92:	mov    BYTE PTR [rsp+0xf],0x0
    3c97:	mov    BYTE PTR [rsp+0xd],0x1
    3c9c:	mov    QWORD PTR [rsp+0x18],0x1
    3ca5:	mov    r15d,0x1
    3cab:	mov    QWORD PTR [rsp+0x48],rax
    3cb0:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3cb5:	lea    rax,[rip+0x261f]        # 62db <_IO_stdin_used@@Base+0x69b>
    3cbc:	mov    BYTE PTR [rsp+0xe],0x1
    3cc1:	mov    BYTE PTR [rsp+0x7c],0x0
    3cc6:	xor    r12d,r12d
    3cc9:	mov    QWORD PTR [rsp+0x50],0x0
    3cd2:	mov    BYTE PTR [rsp+0xf],0x1
    3cd7:	mov    BYTE PTR [rsp+0xd],0x1
    3cdc:	mov    QWORD PTR [rsp+0x18],0x1
    3ce5:	xor    r15d,r15d
    3ce8:	mov    QWORD PTR [rsp+0x48],rax
    3ced:	mov    DWORD PTR [rsp+0x8],0x5
    3cf5:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3cfa:	mov    BYTE PTR [rsp+0xe],0x1
    3cff:	mov    BYTE PTR [rsp+0x7c],0x0
    3d04:	xor    r12d,r12d
    3d07:	mov    QWORD PTR [rsp+0x50],0x0
    3d10:	mov    BYTE PTR [rsp+0xf],0x0
    3d15:	xor    r15d,r15d
    3d18:	mov    BYTE PTR [rsp+0xd],0x1
    3d1d:	mov    QWORD PTR [rsp+0x18],0x0
    3d26:	mov    QWORD PTR [rsp+0x48],0x0
    3d2f:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3d34:	cmp    DWORD PTR [rsp+0x8],0xa
    3d39:	je     3d91 <__cxa_finalize@plt+0x22d1>
    3d3b:	lea    rsi,[rip+0x259d]        # 62df <_IO_stdin_used@@Base+0x69f>
    3d42:	xor    edi,edi
    3d44:	mov    edx,0x5
    3d49:	call   1820 <dcgettext@plt>
    3d4e:	mov    rcx,rax
    3d51:	mov    QWORD PTR [rsp+0x68],rax
    3d56:	lea    rax,[rip+0x2582]        # 62df <_IO_stdin_used@@Base+0x69f>
    3d5d:	cmp    rcx,rax
    3d60:	je     40fe <__cxa_finalize@plt+0x263e>
    3d66:	lea    rsi,[rip+0x2570]        # 62dd <_IO_stdin_used@@Base+0x69d>
    3d6d:	xor    edi,edi
    3d6f:	mov    edx,0x5
    3d74:	call   1820 <dcgettext@plt>
    3d79:	mov    rcx,rax
    3d7c:	mov    QWORD PTR [rsp+0x60],rax
    3d81:	lea    rax,[rip+0x2555]        # 62dd <_IO_stdin_used@@Base+0x69d>
    3d88:	cmp    rcx,rax
    3d8b:	je     4114 <__cxa_finalize@plt+0x2654>
    3d91:	xor    r15d,r15d
    3d94:	test   ebx,ebx
    3d96:	je     3f5d <__cxa_finalize@plt+0x249d>
    3d9c:	test   ebx,ebx
    3d9e:	mov    rbx,QWORD PTR [rsp+0x60]
    3da3:	setne  BYTE PTR [rsp+0xf]
    3da8:	xor    r12d,r12d
    3dab:	mov    rdi,rbx
    3dae:	call   1840 <strlen@plt>
    3db3:	mov    QWORD PTR [rsp+0x48],rbx
    3db8:	mov    QWORD PTR [rsp+0x18],rax
    3dbd:	mov    BYTE PTR [rsp+0xe],0x1
    3dc2:	mov    BYTE PTR [rsp+0x7c],0x0
    3dc7:	mov    QWORD PTR [rsp+0x50],0x0
    3dd0:	mov    BYTE PTR [rsp+0xd],0x1
    3dd5:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3dda:	mov    BYTE PTR [rsp+0xe],0x1
    3ddf:	mov    BYTE PTR [rsp+0x7c],0x0
    3de4:	xor    r12d,r12d
    3de7:	mov    QWORD PTR [rsp+0x50],0x0
    3df0:	mov    BYTE PTR [rsp+0xf],0x0
    3df5:	xor    r15d,r15d
    3df8:	mov    BYTE PTR [rsp+0xd],0x0
    3dfd:	mov    QWORD PTR [rsp+0x18],0x0
    3e06:	mov    QWORD PTR [rsp+0x48],0x0
    3e0f:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    3e14:	mov    BYTE PTR [rsp+0xe],0x1
    3e19:	mov    BYTE PTR [rsp+0x7c],0x0
    3e1e:	xor    r12d,r12d
    3e21:	mov    QWORD PTR [rsp+0x50],0x0
    3e2a:	mov    BYTE PTR [rsp+0xf],0x1
    3e2f:	mov    BYTE PTR [rsp+0xd],0x1
    3e34:	jmp    3053 <__cxa_finalize@plt+0x1593>
    3e39:	cmp    r13,r15
    3e3c:	jbe    3e43 <__cxa_finalize@plt+0x2383>
    3e3e:	mov    BYTE PTR [r14+r15*1],0x30
    3e43:	lea    rax,[rcx+0x2]
    3e47:	cmp    r13,rax
    3e4a:	jbe    3e52 <__cxa_finalize@plt+0x2392>
    3e4c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    3e52:	mov    eax,r12d
    3e55:	lea    r15,[rcx+0x3]
    3e59:	xor    r12d,r12d
    3e5c:	mov    ebx,0x30
    3e61:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    3e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3e70:	movzx  ebx,BYTE PTR [rsp+0xf]
    3e75:	mov    rbp,r11
    3e78:	mov    BYTE PTR [rsp+0xd],bl
    3e7c:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    3e81:	movzx  edx,BYTE PTR [rsp+0xd]
    3e86:	xor    r12d,r12d
    3e89:	jmp    3990 <__cxa_finalize@plt+0x1ed0>
    3e8e:	xor    r10d,r10d
    3e91:	jmp    3a4d <__cxa_finalize@plt+0x1f8d>
    3e96:	mov    QWORD PTR [rsp+0x50],0x0
    3e9f:	mov    BYTE PTR [rsp+0xe],0x1
    3ea4:	xor    r12d,r12d
    3ea7:	mov    BYTE PTR [rsp+0x7c],0x0
    3eac:	jmp    3c8b <__cxa_finalize@plt+0x21cb>
    3eb1:	mov    r11,QWORD PTR [rsp+0x30]
    3eb6:	mov    rsi,r14
    3eb9:	mov    rcx,r13
    3ebc:	mov    rax,rbx
    3ebf:	mov    rdi,rbx
    3ec2:	movzx  r8d,BYTE PTR [rsp+0x7d]
    3ec8:	movzx  ebx,BYTE PTR [rsp+0x7e]
    3ecd:	mov    r9,QWORD PTR [rsp+0x88]
    3ed5:	cmp    rsi,r11
    3ed8:	movzx  r10d,BYTE PTR [rsp+0x7f]
    3ede:	mov    r15,QWORD PTR [rsp+0x80]
    3ee6:	mov    r14,QWORD PTR [rsp+0x40]
    3eeb:	mov    r13,QWORD PTR [rsp+0x70]
    3ef0:	jae    3f18 <__cxa_finalize@plt+0x2458>
    3ef2:	cmp    BYTE PTR [rcx],0x0
    3ef5:	jne    3f07 <__cxa_finalize@plt+0x2447>
    3ef7:	jmp    3f18 <__cxa_finalize@plt+0x2458>
    3ef9:	nop    DWORD PTR [rax+0x0]
    3f00:	cmp    BYTE PTR [r9+rax*1],0x0
    3f05:	je     3f15 <__cxa_finalize@plt+0x2455>
    3f07:	add    rax,0x1
    3f0b:	lea    rdx,[rbp+rax*1+0x0]
    3f10:	cmp    r11,rdx
    3f13:	ja     3f00 <__cxa_finalize@plt+0x2440>
    3f15:	mov    rdi,rax
    3f18:	movzx  edx,BYTE PTR [rsp+0xd]
    3f1d:	xor    r12d,r12d
    3f20:	jmp    3986 <__cxa_finalize@plt+0x1ec6>
    3f25:	mov    rdi,rbx
    3f28:	movzx  r8d,BYTE PTR [rsp+0x7d]
    3f2e:	movzx  ebx,BYTE PTR [rsp+0x7e]
    3f33:	movzx  r10d,BYTE PTR [rsp+0x7f]
    3f39:	mov    r15,QWORD PTR [rsp+0x80]
    3f41:	xor    r12d,r12d
    3f44:	mov    r14,QWORD PTR [rsp+0x40]
    3f49:	mov    r13,QWORD PTR [rsp+0x70]
    3f4e:	mov    r11,QWORD PTR [rsp+0x30]
    3f53:	movzx  edx,BYTE PTR [rsp+0xd]
    3f58:	jmp    3986 <__cxa_finalize@plt+0x1ec6>
    3f5d:	mov    rdx,QWORD PTR [rsp+0x68]
    3f62:	movzx  eax,BYTE PTR [rdx]
    3f65:	test   al,al
    3f67:	je     3d9c <__cxa_finalize@plt+0x22dc>
    3f6d:	nop    DWORD PTR [rax]
    3f70:	cmp    r13,r15
    3f73:	jbe    3f79 <__cxa_finalize@plt+0x24b9>
    3f75:	mov    BYTE PTR [r14+r15*1],al
    3f79:	add    r15,0x1
    3f7d:	movzx  eax,BYTE PTR [rdx+r15*1]
    3f82:	test   al,al
    3f84:	jne    3f70 <__cxa_finalize@plt+0x24b0>
    3f86:	jmp    3d9c <__cxa_finalize@plt+0x22dc>
    3f8b:	mov    eax,edx
    3f8d:	jmp    34e7 <__cxa_finalize@plt+0x1a27>
    3f92:	movzx  ebx,BYTE PTR [rax+rcx*1]
    3f96:	cmp    bl,0x3e
    3f99:	ja     3810 <__cxa_finalize@plt+0x1d50>
    3f9f:	movabs rax,0x7000a38200000000
    3fa9:	bt     rax,rbx
    3fad:	jae    3810 <__cxa_finalize@plt+0x1d50>
    3fb3:	cmp    BYTE PTR [rsp+0xf],0x0
    3fb8:	jne    41a2 <__cxa_finalize@plt+0x26e2>
    3fbe:	cmp    r13,r15
    3fc1:	jbe    3fc8 <__cxa_finalize@plt+0x2508>
    3fc3:	mov    BYTE PTR [r14+r15*1],0x3f
    3fc8:	lea    rax,[r15+0x1]
    3fcc:	cmp    r13,rax
    3fcf:	jbe    3fd7 <__cxa_finalize@plt+0x2517>
    3fd1:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    3fd7:	lea    rax,[r15+0x2]
    3fdb:	cmp    r13,rax
    3fde:	jbe    3fe6 <__cxa_finalize@plt+0x2526>
    3fe0:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    3fe6:	lea    rax,[r15+0x3]
    3fea:	cmp    r13,rax
    3fed:	jbe    3ff5 <__cxa_finalize@plt+0x2535>
    3fef:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    3ff5:	add    r15,0x4
    3ff9:	xor    edx,edx
    3ffb:	xor    r12d,r12d
    3ffe:	xor    eax,eax
    4000:	mov    rbp,rcx
    4003:	jmp    31c8 <__cxa_finalize@plt+0x1708>
    4008:	test   ebx,ebx
    400a:	je     4198 <__cxa_finalize@plt+0x26d8>
    4010:	lea    rax,[rip+0x22c6]        # 62dd <_IO_stdin_used@@Base+0x69d>
    4017:	mov    BYTE PTR [rsp+0xe],0x1
    401c:	mov    BYTE PTR [rsp+0x7c],0x0
    4021:	xor    r12d,r12d
    4024:	mov    QWORD PTR [rsp+0x50],0x0
    402d:	mov    BYTE PTR [rsp+0xf],0x1
    4032:	mov    BYTE PTR [rsp+0xd],0x0
    4037:	mov    QWORD PTR [rsp+0x18],0x1
    4040:	xor    r15d,r15d
    4043:	mov    QWORD PTR [rsp+0x48],rax
    4048:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    404d:	nop    DWORD PTR [rax]
    4050:	mov    rbp,r11
    4053:	movzx  eax,BYTE PTR [rsp+0xf]
    4058:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    405d:	lea    rax,[rip+0x2277]        # 62db <_IO_stdin_used@@Base+0x69b>
    4064:	mov    BYTE PTR [rsp+0xe],0x1
    4069:	mov    BYTE PTR [rsp+0x7c],0x0
    406e:	xor    r12d,r12d
    4071:	mov    QWORD PTR [rsp+0x50],0x0
    407a:	mov    BYTE PTR [rsp+0xf],0x1
    407f:	mov    BYTE PTR [rsp+0xd],0x1
    4084:	mov    QWORD PTR [rsp+0x18],0x1
    408d:	xor    r15d,r15d
    4090:	mov    QWORD PTR [rsp+0x48],rax
    4095:	jmp    3073 <__cxa_finalize@plt+0x15b3>
    409a:	mov    eax,edx
    409c:	mov    rbx,QWORD PTR [rsp+0x48]
    40a1:	test   rbx,rbx
    40a4:	je     40d2 <__cxa_finalize@plt+0x2612>
    40a6:	test   al,al
    40a8:	je     40d2 <__cxa_finalize@plt+0x2612>
    40aa:	movzx  ecx,BYTE PTR [rbx]
    40ad:	mov    rax,rbx
    40b0:	test   cl,cl
    40b2:	je     40d2 <__cxa_finalize@plt+0x2612>
    40b4:	mov    rdx,r15
    40b7:	sub    rax,r15
    40ba:	cmp    r13,rdx
    40bd:	jbe    40c3 <__cxa_finalize@plt+0x2603>
    40bf:	mov    BYTE PTR [r14+rdx*1],cl
    40c3:	add    rdx,0x1
    40c7:	movzx  ecx,BYTE PTR [rax+rdx*1]
    40cb:	test   cl,cl
    40cd:	jne    40ba <__cxa_finalize@plt+0x25fa>
    40cf:	mov    r15,rdx
    40d2:	cmp    r13,r15
    40d5:	jbe    3b79 <__cxa_finalize@plt+0x20b9>
    40db:	mov    BYTE PTR [r14+r15*1],0x0
    40e0:	jmp    3b79 <__cxa_finalize@plt+0x20b9>
    40e5:	cmp    DWORD PTR [rsp+0x8],0x2
    40ea:	movzx  ebx,BYTE PTR [rsp+0xf]
    40ef:	mov    rbp,r11
    40f2:	sete   al
    40f5:	mov    BYTE PTR [rsp+0xd],bl
    40f9:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    40fe:	mov    esi,DWORD PTR [rsp+0x8]
    4102:	mov    rdi,rcx
    4105:	call   2eb0 <__cxa_finalize@plt+0x13f0>
    410a:	mov    QWORD PTR [rsp+0x68],rax
    410f:	jmp    3d66 <__cxa_finalize@plt+0x22a6>
    4114:	mov    esi,DWORD PTR [rsp+0x8]
    4118:	mov    rdi,rcx
    411b:	call   2eb0 <__cxa_finalize@plt+0x13f0>
    4120:	mov    QWORD PTR [rsp+0x60],rax
    4125:	jmp    3d91 <__cxa_finalize@plt+0x22d1>
    412a:	movzx  ebx,BYTE PTR [rsp+0xf]
    412f:	mov    rbp,r11
    4132:	mov    eax,edx
    4134:	mov    BYTE PTR [rsp+0xd],bl
    4138:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    413d:	sub    rsp,0x8
    4141:	mov    r8d,0x5
    4147:	mov    rcx,r11
    414a:	push   QWORD PTR [rsp+0x68]
    414e:	push   QWORD PTR [rsp+0x78]
    4152:	mov    rdi,r14
    4155:	push   QWORD PTR [rsp+0x38]
    4159:	mov    r9d,DWORD PTR [rsp+0x98]
    4161:	mov    rdx,QWORD PTR [rsp+0x30]
    4166:	mov    rsi,QWORD PTR [rsp+0x70]
    416b:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    4170:	add    rsp,0x20
    4174:	mov    r15,rax
    4177:	jmp    3b79 <__cxa_finalize@plt+0x20b9>
    417c:	movzx  eax,BYTE PTR [rsp+0x7c]
    4181:	jmp    409c <__cxa_finalize@plt+0x25dc>
    4186:	mov    DWORD PTR [rsp+0x8],0x2
    418e:	jmp    3b29 <__cxa_finalize@plt+0x2069>
    4193:	call   1850 <__stack_chk_fail@plt>
    4198:	mov    BYTE PTR [rsp+0xd],0x0
    419d:	jmp    3c11 <__cxa_finalize@plt+0x2151>
    41a2:	mov    rbp,r11
    41a5:	jmp    3b40 <__cxa_finalize@plt+0x2080>
    41aa:	mov    BYTE PTR [rsp+0xe],0x1
    41af:	xor    eax,eax
    41b1:	xor    r12d,r12d
    41b4:	mov    QWORD PTR [rsp+0x50],0x0
    41bd:	jmp    3764 <__cxa_finalize@plt+0x1ca4>
    41c2:	mov    rdx,r13
    41c5:	mov    r13,QWORD PTR [rsp+0x50]
    41ca:	jmp    37c2 <__cxa_finalize@plt+0x1d02>
    41cf:	call   1780 <abort@plt>
    41d4:	xchg   ax,ax
    41d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    41e0:	push   r15
    41e2:	push   r14
    41e4:	movsxd r15,edi
    41e7:	push   r13
    41e9:	push   r12
    41eb:	mov    r14,rdx
    41ee:	push   rbp
    41ef:	push   rbx
    41f0:	mov    rbp,rcx
    41f3:	sub    rsp,0x28
    41f7:	mov    QWORD PTR [rsp+0x8],rsi
    41fc:	call   1790 <__errno_location@plt>
    4201:	mov    r13,rax
    4204:	mov    eax,DWORD PTR [rax]
    4206:	test   r15d,r15d
    4209:	mov    rbx,QWORD PTR [rip+0x203e90]        # 2080a0 <quote_quoting_options@@Base+0x40>
    4210:	mov    DWORD PTR [rsp+0x18],eax
    4214:	js     4381 <__cxa_finalize@plt+0x28c1>
    421a:	cmp    DWORD PTR [rip+0x203e77],r15d        # 208098 <quote_quoting_options@@Base+0x38>
    4221:	jg     4285 <__cxa_finalize@plt+0x27c5>
    4223:	cmp    r15d,0x7ffffffe
    422a:	ja     4386 <__cxa_finalize@plt+0x28c6>
    4230:	lea    r12d,[r15+0x1]
    4234:	lea    rax,[rip+0x203e75]        # 2080b0 <quote_quoting_options@@Base+0x50>
    423b:	movsxd rsi,r12d
    423e:	shl    rsi,0x4
    4242:	cmp    rbx,rax
    4245:	je     4360 <__cxa_finalize@plt+0x28a0>
    424b:	mov    rdi,rbx
    424e:	call   5270 <__cxa_finalize@plt+0x37b0>
    4253:	mov    rbx,rax
    4256:	mov    QWORD PTR [rip+0x203e43],rax        # 2080a0 <quote_quoting_options@@Base+0x40>
    425d:	movsxd rdi,DWORD PTR [rip+0x203e34]        # 208098 <quote_quoting_options@@Base+0x38>
    4264:	mov    edx,r12d
    4267:	xor    esi,esi
    4269:	sub    edx,edi
    426b:	shl    rdi,0x4
    426f:	movsxd rdx,edx
    4272:	add    rdi,rbx
    4275:	shl    rdx,0x4
    4279:	call   18a0 <memset@plt>
    427e:	mov    DWORD PTR [rip+0x203e13],r12d        # 208098 <quote_quoting_options@@Base+0x38>
    4285:	mov    eax,DWORD PTR [rbp+0x4]
    4288:	shl    r15,0x4
    428c:	sub    rsp,0x8
    4290:	add    rbx,r15
    4293:	lea    r15,[rbp+0x8]
    4297:	mov    r8d,DWORD PTR [rbp+0x0]
    429b:	mov    r11,QWORD PTR [rbx]
    429e:	mov    r12,QWORD PTR [rbx+0x8]
    42a2:	mov    rcx,r14
    42a5:	or     eax,0x1
    42a8:	mov    DWORD PTR [rsp+0x24],eax
    42ac:	push   QWORD PTR [rbp+0x30]
    42af:	mov    r9d,eax
    42b2:	push   QWORD PTR [rbp+0x28]
    42b5:	push   r15
    42b7:	mov    rsi,r11
    42ba:	mov    rdx,QWORD PTR [rsp+0x28]
    42bf:	mov    rdi,r12
    42c2:	mov    QWORD PTR [rsp+0x30],r11
    42c7:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    42cc:	add    rsp,0x20
    42d0:	mov    r11,QWORD PTR [rsp+0x10]
    42d5:	cmp    r11,rax
    42d8:	ja     4341 <__cxa_finalize@plt+0x2881>
    42da:	lea    rsi,[rax+0x1]
    42de:	lea    rax,[rip+0x203e3b]        # 208120 <program_name@@Base+0x10>
    42e5:	cmp    r12,rax
    42e8:	mov    QWORD PTR [rbx],rsi
    42eb:	je     42ff <__cxa_finalize@plt+0x283f>
    42ed:	mov    rdi,r12
    42f0:	mov    QWORD PTR [rsp+0x10],rsi
    42f5:	call   1770 <free@plt>
    42fa:	mov    rsi,QWORD PTR [rsp+0x10]
    42ff:	mov    rdi,rsi
    4302:	mov    QWORD PTR [rsp+0x10],rsi
    4307:	call   5210 <__cxa_finalize@plt+0x3750>
    430c:	sub    rsp,0x8
    4310:	mov    QWORD PTR [rbx+0x8],rax
    4314:	mov    r8d,DWORD PTR [rbp+0x0]
    4318:	push   QWORD PTR [rbp+0x30]
    431b:	push   QWORD PTR [rbp+0x28]
    431e:	mov    rcx,r14
    4321:	push   r15
    4323:	mov    r9d,DWORD PTR [rsp+0x3c]
    4328:	mov    rdi,rax
    432b:	mov    rdx,QWORD PTR [rsp+0x28]
    4330:	mov    rsi,QWORD PTR [rsp+0x30]
    4335:	mov    r12,rax
    4338:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    433d:	add    rsp,0x20
    4341:	mov    eax,DWORD PTR [rsp+0x18]
    4345:	mov    DWORD PTR [r13+0x0],eax
    4349:	add    rsp,0x28
    434d:	mov    rax,r12
    4350:	pop    rbx
    4351:	pop    rbp
    4352:	pop    r12
    4354:	pop    r13
    4356:	pop    r14
    4358:	pop    r15
    435a:	ret    
    435b:	nop    DWORD PTR [rax+rax*1+0x0]
    4360:	xor    edi,edi
    4362:	call   5270 <__cxa_finalize@plt+0x37b0>
    4367:	movdqa xmm0,XMMWORD PTR [rip+0x203d41]        # 2080b0 <quote_quoting_options@@Base+0x50>
    436f:	mov    rbx,rax
    4372:	mov    QWORD PTR [rip+0x203d27],rax        # 2080a0 <quote_quoting_options@@Base+0x40>
    4379:	movups XMMWORD PTR [rax],xmm0
    437c:	jmp    425d <__cxa_finalize@plt+0x279d>
    4381:	call   1780 <abort@plt>
    4386:	call   5460 <__cxa_finalize@plt+0x39a0>
    438b:	nop    DWORD PTR [rax+rax*1+0x0]
    4390:	push   r12
    4392:	push   rbp
    4393:	push   rbx
    4394:	mov    rbx,rdi
    4397:	call   1790 <__errno_location@plt>
    439c:	mov    r12d,DWORD PTR [rax]
    439f:	mov    rbp,rax
    43a2:	lea    rax,[rip+0x203e77]        # 208220 <program_name@@Base+0x110>
    43a9:	test   rbx,rbx
    43ac:	mov    esi,0x38
    43b1:	cmove  rbx,rax
    43b5:	mov    rdi,rbx
    43b8:	call   5410 <__cxa_finalize@plt+0x3950>
    43bd:	mov    DWORD PTR [rbp+0x0],r12d
    43c1:	pop    rbx
    43c2:	pop    rbp
    43c3:	pop    r12
    43c5:	ret    
    43c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    43d0:	lea    rax,[rip+0x203e49]        # 208220 <program_name@@Base+0x110>
    43d7:	test   rdi,rdi
    43da:	cmove  rdi,rax
    43de:	mov    eax,DWORD PTR [rdi]
    43e0:	ret    
    43e1:	nop    DWORD PTR [rax+rax*1+0x0]
    43e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    43f0:	lea    rax,[rip+0x203e29]        # 208220 <program_name@@Base+0x110>
    43f7:	test   rdi,rdi
    43fa:	cmove  rdi,rax
    43fe:	mov    DWORD PTR [rdi],esi
    4400:	ret    
    4401:	nop    DWORD PTR [rax+rax*1+0x0]
    4406:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4410:	lea    rax,[rip+0x203e09]        # 208220 <program_name@@Base+0x110>
    4417:	test   rdi,rdi
    441a:	mov    ecx,esi
    441c:	cmove  rdi,rax
    4420:	mov    eax,esi
    4422:	and    ecx,0x1f
    4425:	shr    al,0x5
    4428:	movzx  eax,al
    442b:	lea    rdi,[rdi+rax*4+0x8]
    4430:	mov    esi,DWORD PTR [rdi]
    4432:	mov    eax,esi
    4434:	shr    eax,cl
    4436:	xor    edx,eax
    4438:	and    eax,0x1
    443b:	and    edx,0x1
    443e:	shl    edx,cl
    4440:	xor    edx,esi
    4442:	mov    DWORD PTR [rdi],edx
    4444:	ret    
    4445:	nop
    4446:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4450:	lea    rax,[rip+0x203dc9]        # 208220 <program_name@@Base+0x110>
    4457:	test   rdi,rdi
    445a:	cmove  rdi,rax
    445e:	mov    eax,DWORD PTR [rdi+0x4]
    4461:	mov    DWORD PTR [rdi+0x4],esi
    4464:	ret    
    4465:	nop
    4466:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4470:	lea    rax,[rip+0x203da9]        # 208220 <program_name@@Base+0x110>
    4477:	test   rdi,rdi
    447a:	cmove  rdi,rax
    447e:	test   rsi,rsi
    4481:	mov    DWORD PTR [rdi],0xa
    4487:	je     4497 <__cxa_finalize@plt+0x29d7>
    4489:	test   rdx,rdx
    448c:	je     4497 <__cxa_finalize@plt+0x29d7>
    448e:	mov    QWORD PTR [rdi+0x28],rsi
    4492:	mov    QWORD PTR [rdi+0x30],rdx
    4496:	ret    
    4497:	sub    rsp,0x8
    449b:	call   1780 <abort@plt>
    44a0:	push   r15
    44a2:	push   r14
    44a4:	lea    rax,[rip+0x203d75]        # 208220 <program_name@@Base+0x110>
    44ab:	push   r13
    44ad:	push   r12
    44af:	mov    r13,rdi
    44b2:	push   rbp
    44b3:	push   rbx
    44b4:	mov    rbx,r8
    44b7:	mov    r14,rsi
    44ba:	mov    r15,rdx
    44bd:	sub    rsp,0x18
    44c1:	test   r8,r8
    44c4:	cmove  rbx,rax
    44c8:	mov    QWORD PTR [rsp+0x8],rcx
    44cd:	call   1790 <__errno_location@plt>
    44d2:	mov    r12d,DWORD PTR [rax]
    44d5:	mov    rbp,rax
    44d8:	lea    rax,[rbx+0x8]
    44dc:	sub    rsp,0x8
    44e0:	mov    r9d,DWORD PTR [rbx+0x4]
    44e4:	push   QWORD PTR [rbx+0x30]
    44e7:	mov    r8d,DWORD PTR [rbx]
    44ea:	push   QWORD PTR [rbx+0x28]
    44ed:	mov    rdx,r15
    44f0:	push   rax
    44f1:	mov    rcx,QWORD PTR [rsp+0x28]
    44f6:	mov    rsi,r14
    44f9:	mov    rdi,r13
    44fc:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    4501:	mov    DWORD PTR [rbp+0x0],r12d
    4505:	add    rsp,0x38
    4509:	pop    rbx
    450a:	pop    rbp
    450b:	pop    r12
    450d:	pop    r13
    450f:	pop    r14
    4511:	pop    r15
    4513:	ret    
    4514:	xchg   ax,ax
    4516:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4520:	push   r15
    4522:	push   r14
    4524:	lea    rax,[rip+0x203cf5]        # 208220 <program_name@@Base+0x110>
    452b:	push   r13
    452d:	push   r12
    452f:	mov    r12,rdx
    4532:	push   rbp
    4533:	push   rbx
    4534:	mov    rbx,rcx
    4537:	mov    r14,rdi
    453a:	mov    r15,rsi
    453d:	sub    rsp,0x38
    4541:	test   rcx,rcx
    4544:	cmove  rbx,rax
    4548:	xor    ebp,ebp
    454a:	call   1790 <__errno_location@plt>
    454f:	test   r12,r12
    4552:	mov    r13,rax
    4555:	mov    eax,DWORD PTR [rax]
    4557:	sete   bpl
    455b:	or     ebp,DWORD PTR [rbx+0x4]
    455e:	lea    r10,[rbx+0x8]
    4562:	sub    rsp,0x8
    4566:	mov    r8d,DWORD PTR [rbx]
    4569:	mov    rcx,r15
    456c:	mov    DWORD PTR [rsp+0x14],eax
    4570:	push   QWORD PTR [rbx+0x30]
    4573:	mov    rdx,r14
    4576:	push   QWORD PTR [rbx+0x28]
    4579:	push   r10
    457b:	xor    esi,esi
    457d:	mov    r9d,ebp
    4580:	xor    edi,edi
    4582:	mov    QWORD PTR [rsp+0x40],r10
    4587:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    458c:	lea    rsi,[rax+0x1]
    4590:	mov    QWORD PTR [rsp+0x48],rax
    4595:	add    rsp,0x20
    4599:	mov    rdi,rsi
    459c:	mov    QWORD PTR [rsp+0x18],rsi
    45a1:	call   5210 <__cxa_finalize@plt+0x3750>
    45a6:	mov    QWORD PTR [rsp+0x10],rax
    45ab:	sub    rsp,0x8
    45af:	push   QWORD PTR [rbx+0x30]
    45b2:	push   QWORD PTR [rbx+0x28]
    45b5:	mov    r10,QWORD PTR [rsp+0x38]
    45ba:	mov    r9d,ebp
    45bd:	mov    r8d,DWORD PTR [rbx]
    45c0:	mov    rcx,r15
    45c3:	mov    rdx,r14
    45c6:	mov    rdi,rax
    45c9:	push   r10
    45cb:	mov    rsi,QWORD PTR [rsp+0x38]
    45d0:	call   2fa0 <__cxa_finalize@plt+0x14e0>
    45d5:	mov    eax,DWORD PTR [rsp+0x2c]
    45d9:	add    rsp,0x20
    45dd:	test   r12,r12
    45e0:	mov    DWORD PTR [r13+0x0],eax
    45e4:	je     45ef <__cxa_finalize@plt+0x2b2f>
    45e6:	mov    r11,QWORD PTR [rsp+0x28]
    45eb:	mov    QWORD PTR [r12],r11
    45ef:	mov    rax,QWORD PTR [rsp+0x10]
    45f4:	add    rsp,0x38
    45f8:	pop    rbx
    45f9:	pop    rbp
    45fa:	pop    r12
    45fc:	pop    r13
    45fe:	pop    r14
    4600:	pop    r15
    4602:	ret    
    4603:	nop    DWORD PTR [rax]
    4606:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4610:	mov    rcx,rdx
    4613:	xor    edx,edx
    4615:	jmp    4520 <__cxa_finalize@plt+0x2a60>
    461a:	nop    WORD PTR [rax+rax*1+0x0]
    4620:	mov    eax,DWORD PTR [rip+0x203a72]        # 208098 <quote_quoting_options@@Base+0x38>
    4626:	push   r12
    4628:	mov    r12,QWORD PTR [rip+0x203a71]        # 2080a0 <quote_quoting_options@@Base+0x40>
    462f:	push   rbp
    4630:	push   rbx
    4631:	cmp    eax,0x1
    4634:	jle    4661 <__cxa_finalize@plt+0x2ba1>
    4636:	sub    eax,0x2
    4639:	lea    rbx,[r12+0x18]
    463e:	shl    rax,0x4
    4642:	lea    rbp,[r12+rax*1+0x28]
    4647:	nop    WORD PTR [rax+rax*1+0x0]
    4650:	mov    rdi,QWORD PTR [rbx]
    4653:	add    rbx,0x10
    4657:	call   1770 <free@plt>
    465c:	cmp    rbx,rbp
    465f:	jne    4650 <__cxa_finalize@plt+0x2b90>
    4661:	mov    rdi,QWORD PTR [r12+0x8]
    4666:	lea    rbx,[rip+0x203ab3]        # 208120 <program_name@@Base+0x10>
    466d:	cmp    rdi,rbx
    4670:	je     4689 <__cxa_finalize@plt+0x2bc9>
    4672:	call   1770 <free@plt>
    4677:	mov    QWORD PTR [rip+0x203a2e],0x100        # 2080b0 <quote_quoting_options@@Base+0x50>
    4682:	mov    QWORD PTR [rip+0x203a2f],rbx        # 2080b8 <quote_quoting_options@@Base+0x58>
    4689:	lea    rbx,[rip+0x203a20]        # 2080b0 <quote_quoting_options@@Base+0x50>
    4690:	cmp    r12,rbx
    4693:	je     46a4 <__cxa_finalize@plt+0x2be4>
    4695:	mov    rdi,r12
    4698:	call   1770 <free@plt>
    469d:	mov    QWORD PTR [rip+0x2039fc],rbx        # 2080a0 <quote_quoting_options@@Base+0x40>
    46a4:	pop    rbx
    46a5:	mov    DWORD PTR [rip+0x2039e9],0x1        # 208098 <quote_quoting_options@@Base+0x38>
    46af:	pop    rbp
    46b0:	pop    r12
    46b2:	ret    
    46b3:	nop    DWORD PTR [rax]
    46b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46c0:	lea    rcx,[rip+0x203b59]        # 208220 <program_name@@Base+0x110>
    46c7:	mov    rdx,0xffffffffffffffff
    46ce:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    46d3:	nop    DWORD PTR [rax]
    46d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46e0:	lea    rcx,[rip+0x203b39]        # 208220 <program_name@@Base+0x110>
    46e7:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    46ec:	nop    DWORD PTR [rax+0x0]
    46f0:	lea    rcx,[rip+0x203b29]        # 208220 <program_name@@Base+0x110>
    46f7:	mov    rsi,rdi
    46fa:	mov    rdx,0xffffffffffffffff
    4701:	xor    edi,edi
    4703:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4708:	nop    DWORD PTR [rax+rax*1+0x0]
    4710:	lea    rcx,[rip+0x203b09]        # 208220 <program_name@@Base+0x110>
    4717:	mov    rdx,rsi
    471a:	mov    rsi,rdi
    471d:	xor    edi,edi
    471f:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4724:	xchg   ax,ax
    4726:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4730:	sub    rsp,0x48
    4734:	mov    rax,rdx
    4737:	mov    rdx,QWORD PTR fs:0x28
    4740:	mov    QWORD PTR [rsp+0x38],rdx
    4745:	xor    edx,edx
    4747:	cmp    esi,0xa
    474a:	je     47b4 <__cxa_finalize@plt+0x2cf4>
    474c:	mov    DWORD PTR [rsp],esi
    474f:	mov    rcx,rsp
    4752:	mov    rdx,0xffffffffffffffff
    4759:	mov    rsi,rax
    475c:	mov    QWORD PTR [rsp+0x4],0x0
    4765:	mov    QWORD PTR [rsp+0xc],0x0
    476e:	mov    QWORD PTR [rsp+0x14],0x0
    4777:	mov    QWORD PTR [rsp+0x1c],0x0
    4780:	mov    QWORD PTR [rsp+0x24],0x0
    4789:	mov    QWORD PTR [rsp+0x2c],0x0
    4792:	mov    DWORD PTR [rsp+0x34],0x0
    479a:	call   41e0 <__cxa_finalize@plt+0x2720>
    479f:	mov    rcx,QWORD PTR [rsp+0x38]
    47a4:	xor    rcx,QWORD PTR fs:0x28
    47ad:	jne    47b9 <__cxa_finalize@plt+0x2cf9>
    47af:	add    rsp,0x48
    47b3:	ret    
    47b4:	call   1780 <abort@plt>
    47b9:	call   1850 <__stack_chk_fail@plt>
    47be:	xchg   ax,ax
    47c0:	sub    rsp,0x48
    47c4:	mov    rax,rdx
    47c7:	mov    rdx,rcx
    47ca:	mov    rcx,QWORD PTR fs:0x28
    47d3:	mov    QWORD PTR [rsp+0x38],rcx
    47d8:	xor    ecx,ecx
    47da:	cmp    esi,0xa
    47dd:	je     4840 <__cxa_finalize@plt+0x2d80>
    47df:	mov    DWORD PTR [rsp],esi
    47e2:	mov    rcx,rsp
    47e5:	mov    rsi,rax
    47e8:	mov    QWORD PTR [rsp+0x4],0x0
    47f1:	mov    QWORD PTR [rsp+0xc],0x0
    47fa:	mov    QWORD PTR [rsp+0x14],0x0
    4803:	mov    QWORD PTR [rsp+0x1c],0x0
    480c:	mov    QWORD PTR [rsp+0x24],0x0
    4815:	mov    QWORD PTR [rsp+0x2c],0x0
    481e:	mov    DWORD PTR [rsp+0x34],0x0
    4826:	call   41e0 <__cxa_finalize@plt+0x2720>
    482b:	mov    rdx,QWORD PTR [rsp+0x38]
    4830:	xor    rdx,QWORD PTR fs:0x28
    4839:	jne    4845 <__cxa_finalize@plt+0x2d85>
    483b:	add    rsp,0x48
    483f:	ret    
    4840:	call   1780 <abort@plt>
    4845:	call   1850 <__stack_chk_fail@plt>
    484a:	nop    WORD PTR [rax+rax*1+0x0]
    4850:	mov    rdx,rsi
    4853:	mov    esi,edi
    4855:	xor    edi,edi
    4857:	jmp    4730 <__cxa_finalize@plt+0x2c70>
    485c:	nop    DWORD PTR [rax+0x0]
    4860:	mov    rcx,rdx
    4863:	mov    rdx,rsi
    4866:	mov    esi,edi
    4868:	xor    edi,edi
    486a:	jmp    47c0 <__cxa_finalize@plt+0x2d00>
    486f:	nop
    4870:	sub    rsp,0x48
    4874:	mov    ecx,edx
    4876:	mov    rax,QWORD PTR fs:0x28
    487f:	mov    QWORD PTR [rsp+0x38],rax
    4884:	xor    eax,eax
    4886:	mov    rax,QWORD PTR [rip+0x2039c3]        # 208250 <program_name@@Base+0x140>
    488d:	mov    r8,rsp
    4890:	and    ecx,0x1f
    4893:	movdqa xmm0,XMMWORD PTR [rip+0x203985]        # 208220 <program_name@@Base+0x110>
    489b:	mov    QWORD PTR [rsp+0x30],rax
    48a0:	mov    eax,edx
    48a2:	movaps XMMWORD PTR [rsp],xmm0
    48a6:	shr    al,0x5
    48a9:	movzx  eax,al
    48ac:	lea    r9,[r8+rax*4+0x8]
    48b1:	movdqa xmm0,XMMWORD PTR [rip+0x203977]        # 208230 <program_name@@Base+0x120>
    48b9:	movaps XMMWORD PTR [rsp+0x10],xmm0
    48be:	movdqa xmm0,XMMWORD PTR [rip+0x20397a]        # 208240 <program_name@@Base+0x130>
    48c6:	movaps XMMWORD PTR [rsp+0x20],xmm0
    48cb:	mov    edx,DWORD PTR [r9]
    48ce:	mov    eax,edx
    48d0:	shr    eax,cl
    48d2:	not    eax
    48d4:	and    eax,0x1
    48d7:	shl    eax,cl
    48d9:	mov    rcx,r8
    48dc:	xor    eax,edx
    48de:	mov    rdx,rsi
    48e1:	mov    rsi,rdi
    48e4:	mov    DWORD PTR [r9],eax
    48e7:	xor    edi,edi
    48e9:	call   41e0 <__cxa_finalize@plt+0x2720>
    48ee:	mov    rsi,QWORD PTR [rsp+0x38]
    48f3:	xor    rsi,QWORD PTR fs:0x28
    48fc:	jne    4903 <__cxa_finalize@plt+0x2e43>
    48fe:	add    rsp,0x48
    4902:	ret    
    4903:	call   1850 <__stack_chk_fail@plt>
    4908:	nop    DWORD PTR [rax+rax*1+0x0]
    4910:	movsx  edx,sil
    4914:	mov    rsi,0xffffffffffffffff
    491b:	jmp    4870 <__cxa_finalize@plt+0x2db0>
    4920:	mov    edx,0x3a
    4925:	mov    rsi,0xffffffffffffffff
    492c:	jmp    4870 <__cxa_finalize@plt+0x2db0>
    4931:	nop    DWORD PTR [rax+rax*1+0x0]
    4936:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4940:	mov    edx,0x3a
    4945:	jmp    4870 <__cxa_finalize@plt+0x2db0>
    494a:	nop    WORD PTR [rax+rax*1+0x0]
    4950:	sub    rsp,0x48
    4954:	mov    rax,rdx
    4957:	mov    rdx,QWORD PTR fs:0x28
    4960:	mov    QWORD PTR [rsp+0x38],rdx
    4965:	xor    edx,edx
    4967:	cmp    esi,0xa
    496a:	je     49d4 <__cxa_finalize@plt+0x2f14>
    496c:	mov    DWORD PTR [rsp],esi
    496f:	mov    rcx,rsp
    4972:	mov    rdx,0xffffffffffffffff
    4979:	mov    rsi,rax
    497c:	mov    QWORD PTR [rsp+0x4],0x0
    4985:	mov    QWORD PTR [rsp+0xc],0x4000000
    498e:	mov    QWORD PTR [rsp+0x14],0x0
    4997:	mov    QWORD PTR [rsp+0x1c],0x0
    49a0:	mov    QWORD PTR [rsp+0x24],0x0
    49a9:	mov    QWORD PTR [rsp+0x2c],0x0
    49b2:	mov    DWORD PTR [rsp+0x34],0x0
    49ba:	call   41e0 <__cxa_finalize@plt+0x2720>
    49bf:	mov    rcx,QWORD PTR [rsp+0x38]
    49c4:	xor    rcx,QWORD PTR fs:0x28
    49cd:	jne    49d9 <__cxa_finalize@plt+0x2f19>
    49cf:	add    rsp,0x48
    49d3:	ret    
    49d4:	call   1780 <abort@plt>
    49d9:	call   1850 <__stack_chk_fail@plt>
    49de:	xchg   ax,ax
    49e0:	sub    rsp,0x48
    49e4:	mov    r9,rcx
    49e7:	mov    rcx,QWORD PTR [rip+0x203862]        # 208250 <program_name@@Base+0x140>
    49ee:	movdqa xmm0,XMMWORD PTR [rip+0x20382a]        # 208220 <program_name@@Base+0x110>
    49f6:	mov    rax,QWORD PTR fs:0x28
    49ff:	mov    QWORD PTR [rsp+0x38],rax
    4a04:	xor    eax,eax
    4a06:	movaps XMMWORD PTR [rsp],xmm0
    4a0a:	test   rsi,rsi
    4a0d:	mov    QWORD PTR [rsp+0x30],rcx
    4a12:	mov    DWORD PTR [rsp],0xa
    4a19:	movdqa xmm0,XMMWORD PTR [rip+0x20380f]        # 208230 <program_name@@Base+0x120>
    4a21:	movaps XMMWORD PTR [rsp+0x10],xmm0
    4a26:	movdqa xmm0,XMMWORD PTR [rip+0x203812]        # 208240 <program_name@@Base+0x130>
    4a2e:	movaps XMMWORD PTR [rsp+0x20],xmm0
    4a33:	je     4a67 <__cxa_finalize@plt+0x2fa7>
    4a35:	test   rdx,rdx
    4a38:	je     4a67 <__cxa_finalize@plt+0x2fa7>
    4a3a:	mov    QWORD PTR [rsp+0x28],rsi
    4a3f:	mov    QWORD PTR [rsp+0x30],rdx
    4a44:	mov    rcx,rsp
    4a47:	mov    rdx,r8
    4a4a:	mov    rsi,r9
    4a4d:	call   41e0 <__cxa_finalize@plt+0x2720>
    4a52:	mov    rdi,QWORD PTR [rsp+0x38]
    4a57:	xor    rdi,QWORD PTR fs:0x28
    4a60:	jne    4a6c <__cxa_finalize@plt+0x2fac>
    4a62:	add    rsp,0x48
    4a66:	ret    
    4a67:	call   1780 <abort@plt>
    4a6c:	call   1850 <__stack_chk_fail@plt>
    4a71:	nop    DWORD PTR [rax+rax*1+0x0]
    4a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4a80:	mov    r8,0xffffffffffffffff
    4a87:	jmp    49e0 <__cxa_finalize@plt+0x2f20>
    4a8c:	nop    DWORD PTR [rax+0x0]
    4a90:	mov    rcx,rdx
    4a93:	mov    r8,0xffffffffffffffff
    4a9a:	mov    rdx,rsi
    4a9d:	mov    rsi,rdi
    4aa0:	xor    edi,edi
    4aa2:	jmp    49e0 <__cxa_finalize@plt+0x2f20>
    4aa7:	nop    WORD PTR [rax+rax*1+0x0]
    4ab0:	mov    r8,rcx
    4ab3:	mov    rcx,rdx
    4ab6:	mov    rdx,rsi
    4ab9:	mov    rsi,rdi
    4abc:	xor    edi,edi
    4abe:	jmp    49e0 <__cxa_finalize@plt+0x2f20>
    4ac3:	nop    DWORD PTR [rax]
    4ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ad0:	lea    rcx,[rip+0x203589]        # 208060 <quote_quoting_options@@Base>
    4ad7:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4adc:	nop    DWORD PTR [rax+0x0]
    4ae0:	lea    rcx,[rip+0x203579]        # 208060 <quote_quoting_options@@Base>
    4ae7:	mov    rdx,rsi
    4aea:	mov    rsi,rdi
    4aed:	xor    edi,edi
    4aef:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4af4:	xchg   ax,ax
    4af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b00:	lea    rcx,[rip+0x203559]        # 208060 <quote_quoting_options@@Base>
    4b07:	mov    rdx,0xffffffffffffffff
    4b0e:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4b13:	nop    DWORD PTR [rax]
    4b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b20:	lea    rcx,[rip+0x203539]        # 208060 <quote_quoting_options@@Base>
    4b27:	mov    rsi,rdi
    4b2a:	mov    rdx,0xffffffffffffffff
    4b31:	xor    edi,edi
    4b33:	jmp    41e0 <__cxa_finalize@plt+0x2720>
    4b38:	nop    DWORD PTR [rax+rax*1+0x0]
    4b40:	push   r13
    4b42:	push   r12
    4b44:	mov    r13d,edi
    4b47:	push   rbp
    4b48:	push   rbx
    4b49:	mov    r12,rsi
    4b4c:	mov    rbx,rdx
    4b4f:	sub    rsp,0x8
    4b53:	nop    DWORD PTR [rax+rax*1+0x0]
    4b58:	mov    rdx,rbx
    4b5b:	mov    rsi,r12
    4b5e:	mov    edi,r13d
    4b61:	call   18f0 <read@plt>
    4b66:	test   rax,rax
    4b69:	mov    rbp,rax
    4b6c:	jns    4b90 <__cxa_finalize@plt+0x30d0>
    4b6e:	call   1790 <__errno_location@plt>
    4b73:	mov    eax,DWORD PTR [rax]
    4b75:	cmp    eax,0x4
    4b78:	je     4b58 <__cxa_finalize@plt+0x3098>
    4b7a:	cmp    rbx,0x7fffe000
    4b81:	jbe    4b90 <__cxa_finalize@plt+0x30d0>
    4b83:	cmp    eax,0x16
    4b86:	jne    4b90 <__cxa_finalize@plt+0x30d0>
    4b88:	mov    ebx,0x7fffe000
    4b8d:	jmp    4b58 <__cxa_finalize@plt+0x3098>
    4b8f:	nop
    4b90:	add    rsp,0x8
    4b94:	mov    rax,rbp
    4b97:	pop    rbx
    4b98:	pop    rbp
    4b99:	pop    r12
    4b9b:	pop    r13
    4b9d:	ret    
    4b9e:	xchg   ax,ax
    4ba0:	push   r13
    4ba2:	push   r12
    4ba4:	mov    r13d,edi
    4ba7:	push   rbp
    4ba8:	push   rbx
    4ba9:	mov    r12,rsi
    4bac:	mov    rbx,rdx
    4baf:	sub    rsp,0x8
    4bb3:	nop    DWORD PTR [rax+rax*1+0x0]
    4bb8:	mov    rdx,rbx
    4bbb:	mov    rsi,r12
    4bbe:	mov    edi,r13d
    4bc1:	call   17d0 <write@plt>
    4bc6:	test   rax,rax
    4bc9:	mov    rbp,rax
    4bcc:	jns    4bf0 <__cxa_finalize@plt+0x3130>
    4bce:	call   1790 <__errno_location@plt>
    4bd3:	mov    eax,DWORD PTR [rax]
    4bd5:	cmp    eax,0x4
    4bd8:	je     4bb8 <__cxa_finalize@plt+0x30f8>
    4bda:	cmp    eax,0x16
    4bdd:	jne    4bf0 <__cxa_finalize@plt+0x3130>
    4bdf:	cmp    rbx,0x7fffe000
    4be6:	jbe    4bf0 <__cxa_finalize@plt+0x3130>
    4be8:	mov    ebx,0x7fffe000
    4bed:	jmp    4bb8 <__cxa_finalize@plt+0x30f8>
    4bef:	nop
    4bf0:	add    rsp,0x8
    4bf4:	mov    rax,rbp
    4bf7:	pop    rbx
    4bf8:	pop    rbp
    4bf9:	pop    r12
    4bfb:	pop    r13
    4bfd:	ret    
    4bfe:	xchg   ax,ax
    4c00:	push   r15
    4c02:	push   r14
    4c04:	push   r13
    4c06:	push   r12
    4c08:	mov    r12,r9
    4c0b:	push   rbp
    4c0c:	push   rbx
    4c0d:	mov    rbp,rdi
    4c10:	mov    rbx,r8
    4c13:	sub    rsp,0x28
    4c17:	test   rsi,rsi
    4c1a:	je     4cb0 <__cxa_finalize@plt+0x31f0>
    4c20:	mov    r8,rdx
    4c23:	lea    rdx,[rip+0x1b7e]        # 67a8 <quoting_style_vals@@Base+0x28>
    4c2a:	mov    r9,rcx
    4c2d:	xor    eax,eax
    4c2f:	mov    rcx,rsi
    4c32:	mov    esi,0x1
    4c37:	call   1a80 <__fprintf_chk@plt>
    4c3c:	lea    rsi,[rip+0x1b78]        # 67bb <quoting_style_vals@@Base+0x3b>
    4c43:	xor    edi,edi
    4c45:	mov    edx,0x5
    4c4a:	call   1820 <dcgettext@plt>
    4c4f:	lea    rdx,[rip+0x1e8a]        # 6ae0 <version_etc_copyright@@Base>
    4c56:	mov    rcx,rax
    4c59:	mov    r8d,0x7e1
    4c5f:	mov    esi,0x1
    4c64:	mov    rdi,rbp
    4c67:	xor    eax,eax
    4c69:	call   1a80 <__fprintf_chk@plt>
    4c6e:	lea    rsi,[rip+0x1bd3]        # 6848 <quoting_style_vals@@Base+0xc8>
    4c75:	xor    edi,edi
    4c77:	mov    edx,0x5
    4c7c:	call   1820 <dcgettext@plt>
    4c81:	mov    rsi,rbp
    4c84:	mov    rdi,rax
    4c87:	call   1910 <fputs_unlocked@plt>
    4c8c:	cmp    r12,0x9
    4c90:	ja     4fc0 <__cxa_finalize@plt+0x3500>
    4c96:	lea    rdx,[rip+0x1e03]        # 6aa0 <quoting_style_vals@@Base+0x320>
    4c9d:	movsxd rax,DWORD PTR [rdx+r12*4]
    4ca1:	add    rax,rdx
    4ca4:	jmp    rax
    4ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4cb0:	mov    r8,rcx
    4cb3:	mov    rcx,rdx
    4cb6:	lea    rdx,[rip+0x1af7]        # 67b4 <quoting_style_vals@@Base+0x34>
    4cbd:	mov    esi,0x1
    4cc2:	xor    eax,eax
    4cc4:	call   1a80 <__fprintf_chk@plt>
    4cc9:	jmp    4c3c <__cxa_finalize@plt+0x317c>
    4cce:	xchg   ax,ax
    4cd0:	mov    r9,QWORD PTR [rbx+0x38]
    4cd4:	mov    rax,QWORD PTR [rbx+0x10]
    4cd8:	lea    rsi,[rip+0x1cd9]        # 69b8 <quoting_style_vals@@Base+0x238>
    4cdf:	mov    r8,QWORD PTR [rbx+0x8]
    4ce3:	mov    edx,0x5
    4ce8:	xor    edi,edi
    4cea:	mov    r13,QWORD PTR [rbx+0x30]
    4cee:	mov    r12,QWORD PTR [rbx+0x28]
    4cf2:	mov    QWORD PTR [rsp+0x10],r9
    4cf7:	mov    r15,QWORD PTR [rbx+0x20]
    4cfb:	mov    r14,QWORD PTR [rbx+0x18]
    4cff:	mov    QWORD PTR [rsp],rax
    4d03:	mov    QWORD PTR [rsp+0x8],r8
    4d08:	mov    rbx,QWORD PTR [rbx]
    4d0b:	call   1820 <dcgettext@plt>
    4d10:	sub    rsp,0x8
    4d14:	mov    r9,QWORD PTR [rsp+0x18]
    4d19:	mov    rcx,rbx
    4d1c:	mov    rdx,rax
    4d1f:	mov    rdi,rbp
    4d22:	mov    esi,0x1
    4d27:	xor    eax,eax
    4d29:	push   r9
    4d2b:	push   r13
    4d2d:	push   r12
    4d2f:	push   r15
    4d31:	push   r14
    4d33:	mov    r9,QWORD PTR [rsp+0x30]
    4d38:	mov    r8,QWORD PTR [rsp+0x38]
    4d3d:	call   1a80 <__fprintf_chk@plt>
    4d42:	add    rsp,0x30
    4d46:	add    rsp,0x28
    4d4a:	pop    rbx
    4d4b:	pop    rbp
    4d4c:	pop    r12
    4d4e:	pop    r13
    4d50:	pop    r14
    4d52:	pop    r15
    4d54:	ret    
    4d55:	nop    DWORD PTR [rax]
    4d58:	mov    r10,QWORD PTR [rbx+0x40]
    4d5c:	mov    r9,QWORD PTR [rbx+0x38]
    4d60:	lea    rsi,[rip+0x1c81]        # 69e8 <quoting_style_vals@@Base+0x268>
    4d67:	mov    rax,QWORD PTR [rbx+0x10]
    4d6b:	mov    r8,QWORD PTR [rbx+0x8]
    4d6f:	mov    edx,0x5
    4d74:	mov    r13,QWORD PTR [rbx+0x30]
    4d78:	mov    r12,QWORD PTR [rbx+0x28]
    4d7c:	mov    r15,QWORD PTR [rbx+0x20]
    4d80:	mov    r14,QWORD PTR [rbx+0x18]
    4d84:	mov    rbx,QWORD PTR [rbx]
    4d87:	mov    QWORD PTR [rsp+0x18],r10
    4d8c:	mov    QWORD PTR [rsp+0x10],r9
    4d91:	mov    QWORD PTR [rsp],rax
    4d95:	mov    QWORD PTR [rsp+0x8],r8
    4d9a:	xor    edi,edi
    4d9c:	call   1820 <dcgettext@plt>
    4da1:	mov    r10,QWORD PTR [rsp+0x18]
    4da6:	push   r10
    4da8:	jmp    4d14 <__cxa_finalize@plt+0x3254>
    4dad:	nop    DWORD PTR [rax]
    4db0:	mov    rbx,QWORD PTR [rbx]
    4db3:	lea    rsi,[rip+0x1a05]        # 67bf <quoting_style_vals@@Base+0x3f>
    4dba:	mov    edx,0x5
    4dbf:	xor    edi,edi
    4dc1:	call   1820 <dcgettext@plt>
    4dc6:	add    rsp,0x28
    4dca:	mov    rcx,rbx
    4dcd:	mov    rdi,rbp
    4dd0:	pop    rbx
    4dd1:	pop    rbp
    4dd2:	pop    r12
    4dd4:	pop    r13
    4dd6:	pop    r14
    4dd8:	pop    r15
    4dda:	mov    rdx,rax
    4ddd:	mov    esi,0x1
    4de2:	xor    eax,eax
    4de4:	jmp    1a80 <__fprintf_chk@plt>
    4de9:	nop    DWORD PTR [rax+0x0]
    4df0:	mov    r12,QWORD PTR [rbx+0x8]
    4df4:	lea    rsi,[rip+0x19d4]        # 67cf <quoting_style_vals@@Base+0x4f>
    4dfb:	mov    rbx,QWORD PTR [rbx]
    4dfe:	mov    edx,0x5
    4e03:	xor    edi,edi
    4e05:	call   1820 <dcgettext@plt>
    4e0a:	add    rsp,0x28
    4e0e:	mov    r8,r12
    4e11:	mov    rcx,rbx
    4e14:	mov    rdi,rbp
    4e17:	mov    rdx,rax
    4e1a:	mov    esi,0x1
    4e1f:	pop    rbx
    4e20:	pop    rbp
    4e21:	pop    r12
    4e23:	pop    r13
    4e25:	pop    r14
    4e27:	pop    r15
    4e29:	xor    eax,eax
    4e2b:	jmp    1a80 <__fprintf_chk@plt>
    4e30:	mov    r13,QWORD PTR [rbx+0x10]
    4e34:	mov    r12,QWORD PTR [rbx+0x8]
    4e38:	lea    rsi,[rip+0x19a7]        # 67e6 <quoting_style_vals@@Base+0x66>
    4e3f:	mov    rbx,QWORD PTR [rbx]
    4e42:	mov    edx,0x5
    4e47:	xor    edi,edi
    4e49:	call   1820 <dcgettext@plt>
    4e4e:	add    rsp,0x28
    4e52:	mov    r9,r13
    4e55:	mov    r8,r12
    4e58:	mov    rcx,rbx
    4e5b:	mov    rdi,rbp
    4e5e:	mov    rdx,rax
    4e61:	pop    rbx
    4e62:	pop    rbp
    4e63:	pop    r12
    4e65:	pop    r13
    4e67:	pop    r14
    4e69:	pop    r15
    4e6b:	mov    esi,0x1
    4e70:	xor    eax,eax
    4e72:	jmp    1a80 <__fprintf_chk@plt>
    4e77:	nop    WORD PTR [rax+rax*1+0x0]
    4e80:	lea    rsi,[rip+0x1a91]        # 6918 <quoting_style_vals@@Base+0x198>
    4e87:	mov    edx,0x5
    4e8c:	xor    edi,edi
    4e8e:	mov    r14,QWORD PTR [rbx+0x18]
    4e92:	mov    r13,QWORD PTR [rbx+0x10]
    4e96:	mov    r12,QWORD PTR [rbx+0x8]
    4e9a:	mov    rbx,QWORD PTR [rbx]
    4e9d:	call   1820 <dcgettext@plt>
    4ea2:	sub    rsp,0x8
    4ea6:	push   r14
    4ea8:	mov    rdx,rax
    4eab:	mov    r9,r13
    4eae:	mov    r8,r12
    4eb1:	mov    rcx,rbx
    4eb4:	mov    rdi,rbp
    4eb7:	mov    esi,0x1
    4ebc:	xor    eax,eax
    4ebe:	call   1a80 <__fprintf_chk@plt>
    4ec3:	pop    rax
    4ec4:	pop    rdx
    4ec5:	add    rsp,0x28
    4ec9:	pop    rbx
    4eca:	pop    rbp
    4ecb:	pop    r12
    4ecd:	pop    r13
    4ecf:	pop    r14
    4ed1:	pop    r15
    4ed3:	ret    
    4ed4:	nop    DWORD PTR [rax+0x0]
    4ed8:	mov    r15,QWORD PTR [rbx+0x20]
    4edc:	lea    rsi,[rip+0x1a55]        # 6938 <quoting_style_vals@@Base+0x1b8>
    4ee3:	mov    edx,0x5
    4ee8:	xor    edi,edi
    4eea:	mov    r14,QWORD PTR [rbx+0x18]
    4eee:	mov    r13,QWORD PTR [rbx+0x10]
    4ef2:	mov    r12,QWORD PTR [rbx+0x8]
    4ef6:	mov    rbx,QWORD PTR [rbx]
    4ef9:	call   1820 <dcgettext@plt>
    4efe:	push   r15
    4f00:	jmp    4ea6 <__cxa_finalize@plt+0x33e6>
    4f02:	nop    WORD PTR [rax+rax*1+0x0]
    4f08:	mov    r8,QWORD PTR [rbx+0x8]
    4f0c:	mov    r12,QWORD PTR [rbx+0x28]
    4f10:	lea    rsi,[rip+0x1a49]        # 6960 <quoting_style_vals@@Base+0x1e0>
    4f17:	mov    r15,QWORD PTR [rbx+0x20]
    4f1b:	mov    r14,QWORD PTR [rbx+0x18]
    4f1f:	mov    edx,0x5
    4f24:	mov    r13,QWORD PTR [rbx+0x10]
    4f28:	xor    edi,edi
    4f2a:	mov    rbx,QWORD PTR [rbx]
    4f2d:	mov    QWORD PTR [rsp],r8
    4f31:	call   1820 <dcgettext@plt>
    4f36:	sub    rsp,0x8
    4f3a:	mov    r9,r13
    4f3d:	push   r12
    4f3f:	push   r15
    4f41:	push   r14
    4f43:	mov    r8,QWORD PTR [rsp+0x20]
    4f48:	mov    rcx,rbx
    4f4b:	mov    rdx,rax
    4f4e:	mov    rdi,rbp
    4f51:	mov    esi,0x1
    4f56:	xor    eax,eax
    4f58:	call   1a80 <__fprintf_chk@plt>
    4f5d:	add    rsp,0x20
    4f61:	add    rsp,0x28
    4f65:	pop    rbx
    4f66:	pop    rbp
    4f67:	pop    r12
    4f69:	pop    r13
    4f6b:	pop    r14
    4f6d:	pop    r15
    4f6f:	ret    
    4f70:	mov    r9,QWORD PTR [rbx+0x10]
    4f74:	mov    r13,QWORD PTR [rbx+0x30]
    4f78:	lea    rsi,[rip+0x1a09]        # 6988 <quoting_style_vals@@Base+0x208>
    4f7f:	mov    r12,QWORD PTR [rbx+0x28]
    4f83:	mov    r15,QWORD PTR [rbx+0x20]
    4f87:	mov    edx,0x5
    4f8c:	mov    r14,QWORD PTR [rbx+0x18]
    4f90:	mov    r8,QWORD PTR [rbx+0x8]
    4f94:	xor    edi,edi
    4f96:	mov    QWORD PTR [rsp+0x8],r9
    4f9b:	mov    rbx,QWORD PTR [rbx]
    4f9e:	mov    QWORD PTR [rsp],r8
    4fa2:	call   1820 <dcgettext@plt>
    4fa7:	push   r13
    4fa9:	push   r12
    4fab:	push   r15
    4fad:	push   r14
    4faf:	mov    r9,QWORD PTR [rsp+0x28]
    4fb4:	jmp    4f43 <__cxa_finalize@plt+0x3483>
    4fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4fc0:	mov    r10,QWORD PTR [rbx+0x40]
    4fc4:	mov    r9,QWORD PTR [rbx+0x38]
    4fc8:	mov    edx,0x5
    4fcd:	mov    rax,QWORD PTR [rbx+0x10]
    4fd1:	mov    r8,QWORD PTR [rbx+0x8]
    4fd5:	lea    rsi,[rip+0x1a44]        # 6a20 <quoting_style_vals@@Base+0x2a0>
    4fdc:	mov    r13,QWORD PTR [rbx+0x30]
    4fe0:	mov    r12,QWORD PTR [rbx+0x28]
    4fe4:	mov    r15,QWORD PTR [rbx+0x20]
    4fe8:	mov    r14,QWORD PTR [rbx+0x18]
    4fec:	mov    QWORD PTR [rsp+0x18],r10
    4ff1:	mov    QWORD PTR [rsp+0x10],r9
    4ff6:	mov    QWORD PTR [rsp],rax
    4ffa:	mov    QWORD PTR [rsp+0x8],r8
    4fff:	mov    rbx,QWORD PTR [rbx]
    5002:	jmp    4d9a <__cxa_finalize@plt+0x32da>
    5007:	call   1780 <abort@plt>
    500c:	nop    DWORD PTR [rax+0x0]
    5010:	xor    r9d,r9d
    5013:	cmp    QWORD PTR [r8],0x0
    5017:	je     502b <__cxa_finalize@plt+0x356b>
    5019:	nop    DWORD PTR [rax+0x0]
    5020:	add    r9,0x1
    5024:	cmp    QWORD PTR [r8+r9*8],0x0
    5029:	jne    5020 <__cxa_finalize@plt+0x3560>
    502b:	jmp    4c00 <__cxa_finalize@plt+0x3140>
    5030:	sub    rsp,0x68
    5034:	mov    r10,r8
    5037:	xor    r9d,r9d
    503a:	mov    rax,QWORD PTR fs:0x28
    5043:	mov    QWORD PTR [rsp+0x58],rax
    5048:	xor    eax,eax
    504a:	mov    r8,rsp
    504d:	nop    DWORD PTR [rax]
    5050:	mov    eax,DWORD PTR [r10]
    5053:	cmp    eax,0x2f
    5056:	ja     509a <__cxa_finalize@plt+0x35da>
    5058:	mov    r11d,eax
    505b:	add    r11,QWORD PTR [r10+0x10]
    505f:	add    eax,0x8
    5062:	mov    DWORD PTR [r10],eax
    5065:	mov    rax,QWORD PTR [r11]
    5068:	test   rax,rax
    506b:	mov    QWORD PTR [r8+r9*8],rax
    506f:	je     507b <__cxa_finalize@plt+0x35bb>
    5071:	add    r9,0x1
    5075:	cmp    r9,0xa
    5079:	jne    5050 <__cxa_finalize@plt+0x3590>
    507b:	call   4c00 <__cxa_finalize@plt+0x3140>
    5080:	mov    rax,QWORD PTR [rsp+0x58]
    5085:	xor    rax,QWORD PTR fs:0x28
    508e:	jne    5095 <__cxa_finalize@plt+0x35d5>
    5090:	add    rsp,0x68
    5094:	ret    
    5095:	call   1850 <__stack_chk_fail@plt>
    509a:	mov    r11,QWORD PTR [r10+0x8]
    509e:	lea    rax,[r11+0x8]
    50a2:	mov    QWORD PTR [r10+0x8],rax
    50a6:	jmp    5065 <__cxa_finalize@plt+0x35a5>
    50a8:	nop    DWORD PTR [rax+rax*1+0x0]
    50b0:	push   rbp
    50b1:	push   rbx
    50b2:	mov    r10d,0x20
    50b8:	xor    r11d,r11d
    50bb:	sub    rsp,0xb8
    50c2:	mov    rax,QWORD PTR fs:0x28
    50cb:	mov    QWORD PTR [rsp+0x78],rax
    50d0:	xor    eax,eax
    50d2:	lea    rax,[rsp+0xd0]
    50da:	mov    QWORD PTR [rsp+0xa0],r8
    50e2:	lea    rbx,[rsp+0xd0]
    50ea:	lea    r8,[rsp+0x20]
    50ef:	mov    QWORD PTR [rsp+0xa8],r9
    50f7:	mov    DWORD PTR [rsp+0x8],0x20
    50ff:	mov    QWORD PTR [rsp+0x10],rax
    5104:	lea    rax,[rsp+0x80]
    510c:	xor    r9d,r9d
    510f:	mov    QWORD PTR [rsp+0x18],rax
    5114:	mov    rbp,rax
    5117:	nop    WORD PTR [rax+rax*1+0x0]
    5120:	cmp    r10d,0x2f
    5124:	ja     517c <__cxa_finalize@plt+0x36bc>
    5126:	mov    eax,r10d
    5129:	mov    r11d,0x1
    512f:	add    r10d,0x8
    5133:	add    rax,rbp
    5136:	mov    rax,QWORD PTR [rax]
    5139:	test   rax,rax
    513c:	mov    QWORD PTR [r8+r9*8],rax
    5140:	je     514c <__cxa_finalize@plt+0x368c>
    5142:	add    r9,0x1
    5146:	cmp    r9,0xa
    514a:	jne    5120 <__cxa_finalize@plt+0x3660>
    514c:	test   r11b,r11b
    514f:	jne    5175 <__cxa_finalize@plt+0x36b5>
    5151:	call   4c00 <__cxa_finalize@plt+0x3140>
    5156:	mov    rax,QWORD PTR [rsp+0x78]
    515b:	xor    rax,QWORD PTR fs:0x28
    5164:	jne    5170 <__cxa_finalize@plt+0x36b0>
    5166:	add    rsp,0xb8
    516d:	pop    rbx
    516e:	pop    rbp
    516f:	ret    
    5170:	call   1850 <__stack_chk_fail@plt>
    5175:	mov    DWORD PTR [rsp+0x8],r10d
    517a:	jmp    5151 <__cxa_finalize@plt+0x3691>
    517c:	mov    rax,rbx
    517f:	add    rbx,0x8
    5183:	jmp    5136 <__cxa_finalize@plt+0x3676>
    5185:	nop
    5186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5190:	push   rbx
    5191:	lea    rsi,[rip+0x166a]        # 6802 <quoting_style_vals@@Base+0x82>
    5198:	mov    edx,0x5
    519d:	xor    edi,edi
    519f:	call   1820 <dcgettext@plt>
    51a4:	lea    rdx,[rip+0x166c]        # 6817 <quoting_style_vals@@Base+0x97>
    51ab:	mov    rsi,rax
    51ae:	mov    edi,0x1
    51b3:	xor    eax,eax
    51b5:	call   19f0 <__printf_chk@plt>
    51ba:	lea    rsi,[rip+0x166c]        # 682d <quoting_style_vals@@Base+0xad>
    51c1:	mov    edx,0x5
    51c6:	xor    edi,edi
    51c8:	call   1820 <dcgettext@plt>
    51cd:	lea    rcx,[rip+0xfe4]        # 61b8 <_IO_stdin_used@@Base+0x578>
    51d4:	lea    rdx,[rip+0xaef]        # 5cca <_IO_stdin_used@@Base+0x8a>
    51db:	mov    rsi,rax
    51de:	mov    edi,0x1
    51e3:	xor    eax,eax
    51e5:	call   19f0 <__printf_chk@plt>
    51ea:	mov    rbx,QWORD PTR [rip+0x202ed7]        # 2080c8 <stdout@@GLIBC_2.2.5>
    51f1:	lea    rsi,[rip+0x1868]        # 6a60 <quoting_style_vals@@Base+0x2e0>
    51f8:	xor    edi,edi
    51fa:	mov    edx,0x5
    51ff:	call   1820 <dcgettext@plt>
    5204:	mov    rsi,rbx
    5207:	mov    rdi,rax
    520a:	pop    rbx
    520b:	jmp    1910 <fputs_unlocked@plt>
    5210:	push   rbx
    5211:	mov    rbx,rdi
    5214:	call   1960 <malloc@plt>
    5219:	test   rax,rax
    521c:	jne    5223 <__cxa_finalize@plt+0x3763>
    521e:	test   rbx,rbx
    5221:	jne    5225 <__cxa_finalize@plt+0x3765>
    5223:	pop    rbx
    5224:	ret    
    5225:	call   5460 <__cxa_finalize@plt+0x39a0>
    522a:	nop    WORD PTR [rax+rax*1+0x0]
    5230:	mov    rax,rdi
    5233:	mul    rsi
    5236:	mov    rdi,rax
    5239:	seto   al
    523c:	test   rdi,rdi
    523f:	js     524b <__cxa_finalize@plt+0x378b>
    5241:	movzx  eax,al
    5244:	test   rax,rax
    5247:	jne    524b <__cxa_finalize@plt+0x378b>
    5249:	jmp    5210 <__cxa_finalize@plt+0x3750>
    524b:	sub    rsp,0x8
    524f:	call   5460 <__cxa_finalize@plt+0x39a0>
    5254:	xchg   ax,ax
    5256:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5260:	jmp    5210 <__cxa_finalize@plt+0x3750>
    5262:	nop    DWORD PTR [rax+0x0]
    5266:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5270:	test   rsi,rsi
    5273:	push   rbx
    5274:	mov    rbx,rsi
    5277:	jne    527e <__cxa_finalize@plt+0x37be>
    5279:	test   rdi,rdi
    527c:	jne    5298 <__cxa_finalize@plt+0x37d8>
    527e:	mov    rsi,rbx
    5281:	call   19c0 <realloc@plt>
    5286:	test   rax,rax
    5289:	jne    5290 <__cxa_finalize@plt+0x37d0>
    528b:	test   rbx,rbx
    528e:	jne    52a1 <__cxa_finalize@plt+0x37e1>
    5290:	pop    rbx
    5291:	ret    
    5292:	nop    WORD PTR [rax+rax*1+0x0]
    5298:	call   1770 <free@plt>
    529d:	xor    eax,eax
    529f:	pop    rbx
    52a0:	ret    
    52a1:	call   5460 <__cxa_finalize@plt+0x39a0>
    52a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    52b0:	mov    rax,rsi
    52b3:	mul    rdx
    52b6:	mov    rsi,rax
    52b9:	seto   al
    52bc:	test   rsi,rsi
    52bf:	js     52cb <__cxa_finalize@plt+0x380b>
    52c1:	movzx  eax,al
    52c4:	test   rax,rax
    52c7:	jne    52cb <__cxa_finalize@plt+0x380b>
    52c9:	jmp    5270 <__cxa_finalize@plt+0x37b0>
    52cb:	sub    rsp,0x8
    52cf:	call   5460 <__cxa_finalize@plt+0x39a0>
    52d4:	xchg   ax,ax
    52d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    52e0:	test   rdi,rdi
    52e3:	mov    r9,rdx
    52e6:	mov    rcx,QWORD PTR [rsi]
    52e9:	je     5320 <__cxa_finalize@plt+0x3860>
    52eb:	xor    edx,edx
    52ed:	movabs rax,0x5555555555555554
    52f7:	div    r9
    52fa:	cmp    rax,rcx
    52fd:	jbe    533b <__cxa_finalize@plt+0x387b>
    52ff:	mov    rax,rcx
    5302:	shr    rax,1
    5305:	lea    rcx,[rax+rcx*1+0x1]
    530a:	mov    QWORD PTR [rsi],rcx
    530d:	imul   rcx,r9
    5311:	mov    rsi,rcx
    5314:	jmp    5270 <__cxa_finalize@plt+0x37b0>
    5319:	nop    DWORD PTR [rax+0x0]
    5320:	test   rcx,rcx
    5323:	je     5348 <__cxa_finalize@plt+0x3888>
    5325:	mov    rax,rcx
    5328:	mul    r9
    532b:	seto   dl
    532e:	test   rax,rax
    5331:	movzx  edx,dl
    5334:	js     533b <__cxa_finalize@plt+0x387b>
    5336:	test   rdx,rdx
    5339:	je     530a <__cxa_finalize@plt+0x384a>
    533b:	sub    rsp,0x8
    533f:	call   5460 <__cxa_finalize@plt+0x39a0>
    5344:	nop    DWORD PTR [rax+0x0]
    5348:	xor    edx,edx
    534a:	mov    eax,0x80
    534f:	xor    r8d,r8d
    5352:	div    r9
    5355:	test   rax,rax
    5358:	sete   r8b
    535c:	lea    rcx,[r8+rax*1]
    5360:	jmp    5325 <__cxa_finalize@plt+0x3865>
    5362:	nop    DWORD PTR [rax+0x0]
    5366:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5370:	test   rdi,rdi
    5373:	mov    rax,QWORD PTR [rsi]
    5376:	je     53a0 <__cxa_finalize@plt+0x38e0>
    5378:	movabs rdx,0x5555555555555553
    5382:	cmp    rax,rdx
    5385:	ja     53b1 <__cxa_finalize@plt+0x38f1>
    5387:	mov    rdx,rax
    538a:	shr    rdx,1
    538d:	lea    rax,[rdx+rax*1+0x1]
    5392:	mov    QWORD PTR [rsi],rax
    5395:	mov    rsi,rax
    5398:	jmp    5270 <__cxa_finalize@plt+0x37b0>
    539d:	nop    DWORD PTR [rax]
    53a0:	test   rax,rax
    53a3:	mov    edx,0x80
    53a8:	cmove  rax,rdx
    53ac:	test   rax,rax
    53af:	jns    5392 <__cxa_finalize@plt+0x38d2>
    53b1:	sub    rsp,0x8
    53b5:	call   5460 <__cxa_finalize@plt+0x39a0>
    53ba:	nop    WORD PTR [rax+rax*1+0x0]
    53c0:	push   rbx
    53c1:	mov    rbx,rdi
    53c4:	call   5210 <__cxa_finalize@plt+0x3750>
    53c9:	mov    rdx,rbx
    53cc:	xor    esi,esi
    53ce:	mov    rdi,rax
    53d1:	pop    rbx
    53d2:	jmp    18a0 <memset@plt>
    53d7:	nop    WORD PTR [rax+rax*1+0x0]
    53e0:	mov    rax,rdi
    53e3:	sub    rsp,0x8
    53e7:	mul    rsi
    53ea:	seto   dl
    53ed:	test   rax,rax
    53f0:	js     5409 <__cxa_finalize@plt+0x3949>
    53f2:	movzx  edx,dl
    53f5:	test   rdx,rdx
    53f8:	jne    5409 <__cxa_finalize@plt+0x3949>
    53fa:	call   1920 <calloc@plt>
    53ff:	test   rax,rax
    5402:	je     5409 <__cxa_finalize@plt+0x3949>
    5404:	add    rsp,0x8
    5408:	ret    
    5409:	call   5460 <__cxa_finalize@plt+0x39a0>
    540e:	xchg   ax,ax
    5410:	push   rbp
    5411:	push   rbx
    5412:	mov    rbp,rdi
    5415:	mov    rdi,rsi
    5418:	mov    rbx,rsi
    541b:	sub    rsp,0x8
    541f:	call   5210 <__cxa_finalize@plt+0x3750>
    5424:	add    rsp,0x8
    5428:	mov    rdx,rbx
    542b:	mov    rsi,rbp
    542e:	pop    rbx
    542f:	pop    rbp
    5430:	mov    rdi,rax
    5433:	jmp    1940 <memcpy@plt>
    5438:	nop    DWORD PTR [rax+rax*1+0x0]
    5440:	push   rbx
    5441:	mov    rbx,rdi
    5444:	call   1840 <strlen@plt>
    5449:	mov    rdi,rbx
    544c:	lea    rsi,[rax+0x1]
    5450:	pop    rbx
    5451:	jmp    5410 <__cxa_finalize@plt+0x3950>
    5453:	nop    WORD PTR cs:[rax+rax*1+0x0]
    545d:	nop    DWORD PTR [rax]
    5460:	lea    rsi,[rip+0x16a8]        # 6b0f <version_etc_copyright@@Base+0x2f>
    5467:	sub    rsp,0x8
    546b:	mov    edx,0x5
    5470:	xor    edi,edi
    5472:	call   1820 <dcgettext@plt>
    5477:	mov    edi,DWORD PTR [rip+0x202bc3]        # 208040 <exit_failure@@Base>
    547d:	lea    rdx,[rip+0xe00]        # 6284 <_IO_stdin_used@@Base+0x644>
    5484:	mov    rcx,rax
    5487:	xor    esi,esi
    5489:	xor    eax,eax
    548b:	call   1a10 <error@plt>
    5490:	call   1780 <abort@plt>
    5495:	nop    WORD PTR cs:[rax+rax*1+0x0]
    549f:	nop
    54a0:	push   r13
    54a2:	push   r12
    54a4:	mov    r13,rsi
    54a7:	push   rbp
    54a8:	push   rbx
    54a9:	mov    rbx,rdi
    54ac:	mov    r12,rdx
    54af:	sub    rsp,0x18
    54b3:	mov    rax,QWORD PTR fs:0x28
    54bc:	mov    QWORD PTR [rsp+0x8],rax
    54c1:	xor    eax,eax
    54c3:	lea    rax,[rsp+0x4]
    54c8:	test   rdi,rdi
    54cb:	cmove  rbx,rax
    54cf:	mov    rdi,rbx
    54d2:	call   1870 <mbrtowc@plt>
    54d7:	cmp    rax,0xfffffffffffffffd
    54db:	mov    rbp,rax
    54de:	jbe    5500 <__cxa_finalize@plt+0x3a40>
    54e0:	test   r12,r12
    54e3:	je     5500 <__cxa_finalize@plt+0x3a40>
    54e5:	xor    edi,edi
    54e7:	call   55b0 <__cxa_finalize@plt+0x3af0>
    54ec:	test   al,al
    54ee:	jne    5500 <__cxa_finalize@plt+0x3a40>
    54f0:	movzx  eax,BYTE PTR [r13+0x0]
    54f5:	mov    ebp,0x1
    54fa:	mov    DWORD PTR [rbx],eax
    54fc:	nop    DWORD PTR [rax+0x0]
    5500:	mov    rdx,QWORD PTR [rsp+0x8]
    5505:	xor    rdx,QWORD PTR fs:0x28
    550e:	mov    rax,rbp
    5511:	jne    551e <__cxa_finalize@plt+0x3a5e>
    5513:	add    rsp,0x18
    5517:	pop    rbx
    5518:	pop    rbp
    5519:	pop    r12
    551b:	pop    r13
    551d:	ret    
    551e:	call   1850 <__stack_chk_fail@plt>
    5523:	nop    WORD PTR cs:[rax+rax*1+0x0]
    552d:	nop    DWORD PTR [rax]
    5530:	push   r12
    5532:	push   rbp
    5533:	mov    rbp,rdi
    5536:	push   rbx
    5537:	call   17c0 <__fpending@plt>
    553c:	mov    ebx,DWORD PTR [rbp+0x0]
    553f:	mov    rdi,rbp
    5542:	mov    r12,rax
    5545:	call   5a60 <__cxa_finalize@plt+0x3fa0>
    554a:	and    ebx,0x20
    554d:	test   ebx,ebx
    554f:	jne    5568 <__cxa_finalize@plt+0x3aa8>
    5551:	test   eax,eax
    5553:	je     555f <__cxa_finalize@plt+0x3a9f>
    5555:	test   r12,r12
    5558:	mov    eax,0xffffffff
    555d:	je     5598 <__cxa_finalize@plt+0x3ad8>
    555f:	pop    rbx
    5560:	pop    rbp
    5561:	pop    r12
    5563:	ret    
    5564:	nop    DWORD PTR [rax+0x0]
    5568:	test   eax,eax
    556a:	jne    5588 <__cxa_finalize@plt+0x3ac8>
    556c:	call   1790 <__errno_location@plt>
    5571:	mov    DWORD PTR [rax],0x0
    5577:	mov    eax,0xffffffff
    557c:	pop    rbx
    557d:	pop    rbp
    557e:	pop    r12
    5580:	ret    
    5581:	nop    DWORD PTR [rax+0x0]
    5588:	pop    rbx
    5589:	mov    eax,0xffffffff
    558e:	pop    rbp
    558f:	pop    r12
    5591:	ret    
    5592:	nop    WORD PTR [rax+rax*1+0x0]
    5598:	call   1790 <__errno_location@plt>
    559d:	cmp    DWORD PTR [rax],0x9
    55a0:	pop    rbx
    55a1:	pop    rbp
    55a2:	pop    r12
    55a4:	setne  al
    55a7:	movzx  eax,al
    55aa:	neg    eax
    55ac:	ret    
    55ad:	nop    DWORD PTR [rax]
    55b0:	sub    rsp,0x8
    55b4:	xor    esi,esi
    55b6:	call   19e0 <setlocale@plt>
    55bb:	mov    rdx,rax
    55be:	mov    eax,0x1
    55c3:	test   rdx,rdx
    55c6:	je     55e7 <__cxa_finalize@plt+0x3b27>
    55c8:	lea    rdi,[rip+0x1551]        # 6b20 <version_etc_copyright@@Base+0x40>
    55cf:	mov    ecx,0x2
    55d4:	mov    rsi,rdx
    55d7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    55d9:	seta   sil
    55dd:	setb   cl
    55e0:	xor    eax,eax
    55e2:	cmp    sil,cl
    55e5:	jne    55f0 <__cxa_finalize@plt+0x3b30>
    55e7:	add    rsp,0x8
    55eb:	ret    
    55ec:	nop    DWORD PTR [rax+0x0]
    55f0:	lea    rdi,[rip+0x152b]        # 6b22 <version_etc_copyright@@Base+0x42>
    55f7:	mov    ecx,0x6
    55fc:	mov    rsi,rdx
    55ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5601:	setne  al
    5604:	add    rsp,0x8
    5608:	ret    
    5609:	nop    DWORD PTR [rax+0x0]
    5610:	push   r15
    5612:	push   r14
    5614:	mov    edi,0xe
    5619:	push   r13
    561b:	push   r12
    561d:	push   rbp
    561e:	push   rbx
    561f:	sub    rsp,0xa8
    5626:	mov    rax,QWORD PTR fs:0x28
    562f:	mov    QWORD PTR [rsp+0x98],rax
    5637:	xor    eax,eax
    5639:	call   1980 <nl_langinfo@plt>
    563e:	mov    r15,QWORD PTR [rip+0x202c13]        # 208258 <program_name@@Base+0x148>
    5645:	test   rax,rax
    5648:	mov    rbx,rax
    564b:	lea    rax,[rip+0x11af]        # 6801 <quoting_style_vals@@Base+0x81>
    5652:	cmove  rbx,rax
    5656:	test   r15,r15
    5659:	jne    567a <__cxa_finalize@plt+0x3bba>
    565b:	jmp    56f0 <__cxa_finalize@plt+0x3c30>
    5660:	mov    rdi,r15
    5663:	call   1840 <strlen@plt>
    5668:	lea    rbp,[r15+rax*1+0x1]
    566d:	mov    rdi,rbp
    5670:	call   1840 <strlen@plt>
    5675:	lea    r15,[rbp+rax*1+0x1]
    567a:	movzx  ebp,BYTE PTR [r15]
    567e:	test   bpl,bpl
    5681:	je     56ac <__cxa_finalize@plt+0x3bec>
    5683:	mov    rsi,r15
    5686:	mov    rdi,rbx
    5689:	call   1930 <strcmp@plt>
    568e:	test   eax,eax
    5690:	je     569f <__cxa_finalize@plt+0x3bdf>
    5692:	cmp    bpl,0x2a
    5696:	jne    5660 <__cxa_finalize@plt+0x3ba0>
    5698:	cmp    BYTE PTR [r15+0x1],0x0
    569d:	jne    5660 <__cxa_finalize@plt+0x3ba0>
    569f:	mov    rdi,r15
    56a2:	call   1840 <strlen@plt>
    56a7:	lea    rbx,[r15+rax*1+0x1]
    56ac:	cmp    BYTE PTR [rbx],0x0
    56af:	lea    rax,[rip+0x1472]        # 6b28 <version_etc_copyright@@Base+0x48>
    56b6:	cmove  rbx,rax
    56ba:	mov    rcx,QWORD PTR [rsp+0x98]
    56c2:	xor    rcx,QWORD PTR fs:0x28
    56cb:	mov    rax,rbx
    56ce:	jne    5a4c <__cxa_finalize@plt+0x3f8c>
    56d4:	add    rsp,0xa8
    56db:	pop    rbx
    56dc:	pop    rbp
    56dd:	pop    r12
    56df:	pop    r13
    56e1:	pop    r14
    56e3:	pop    r15
    56e5:	ret    
    56e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56f0:	lea    rdi,[rip+0x1451]        # 6b48 <version_etc_copyright@@Base+0x68>
    56f7:	call   1760 <getenv@plt>
    56fc:	test   rax,rax
    56ff:	mov    r13,rax
    5702:	je     5750 <__cxa_finalize@plt+0x3c90>
    5704:	cmp    BYTE PTR [rax],0x0
    5707:	je     5750 <__cxa_finalize@plt+0x3c90>
    5709:	mov    rdi,rax
    570c:	call   1840 <strlen@plt>
    5711:	test   rax,rax
    5714:	mov    r12,rax
    5717:	mov    r14,rax
    571a:	jne    5a3b <__cxa_finalize@plt+0x3f7b>
    5720:	mov    edi,0xe
    5725:	call   1960 <malloc@plt>
    572a:	test   rax,rax
    572d:	mov    rbp,rax
    5730:	jne    57d8 <__cxa_finalize@plt+0x3d18>
    5736:	lea    r15,[rip+0x10c4]        # 6801 <quoting_style_vals@@Base+0x81>
    573d:	mov    QWORD PTR [rip+0x202b14],r15        # 208258 <program_name@@Base+0x148>
    5744:	jmp    567a <__cxa_finalize@plt+0x3bba>
    5749:	nop    DWORD PTR [rax+0x0]
    5750:	lea    r13,[rip+0x13d7]        # 6b2e <version_etc_copyright@@Base+0x4e>
    5757:	mov    edi,0x28
    575c:	mov    r12d,0x1a
    5762:	mov    r14d,0x19
    5768:	call   1960 <malloc@plt>
    576d:	test   rax,rax
    5770:	mov    rbp,rax
    5773:	je     5736 <__cxa_finalize@plt+0x3c76>
    5775:	mov    rdx,r14
    5778:	mov    rsi,r13
    577b:	mov    rdi,rbp
    577e:	call   1940 <memcpy@plt>
    5783:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    5789:	add    r12,rbp
    578c:	movabs rax,0x2e74657372616863
    5796:	mov    esi,0x20000
    579b:	mov    QWORD PTR [r12],rax
    579f:	mov    eax,0x73
    57a4:	mov    DWORD PTR [r12+0x8],0x61696c61
    57ad:	mov    WORD PTR [r12+0xc],ax
    57b3:	mov    rdi,rbp
    57b6:	xor    eax,eax
    57b8:	call   1a20 <open@plt>
    57bd:	test   eax,eax
    57bf:	mov    r12d,eax
    57c2:	jns    57e8 <__cxa_finalize@plt+0x3d28>
    57c4:	lea    r15,[rip+0x1036]        # 6801 <quoting_style_vals@@Base+0x81>
    57cb:	mov    rdi,rbp
    57ce:	call   1770 <free@plt>
    57d3:	jmp    573d <__cxa_finalize@plt+0x3c7d>
    57d8:	mov    rdx,r14
    57db:	mov    rsi,r13
    57de:	mov    rdi,rbp
    57e1:	call   1940 <memcpy@plt>
    57e6:	jmp    5789 <__cxa_finalize@plt+0x3cc9>
    57e8:	lea    rsi,[rip+0x5a0]        # 5d8f <_IO_stdin_used@@Base+0x14f>
    57ef:	mov    edi,eax
    57f1:	xor    r15d,r15d
    57f4:	call   19d0 <fdopen@plt>
    57f9:	test   rax,rax
    57fc:	mov    r14,rax
    57ff:	mov    QWORD PTR [rsp],0x0
    5807:	je     59e3 <__cxa_finalize@plt+0x3f23>
    580d:	lea    rax,[rsp+0x60]
    5812:	mov    QWORD PTR [rsp+0x8],rax
    5817:	lea    rax,[rsp+0x20]
    581c:	mov    QWORD PTR [rsp+0x10],rax
    5821:	mov    rax,QWORD PTR [r14+0x8]
    5825:	cmp    rax,QWORD PTR [r14+0x10]
    5829:	jae    597a <__cxa_finalize@plt+0x3eba>
    582f:	lea    rdx,[rax+0x1]
    5833:	mov    QWORD PTR [r14+0x8],rdx
    5837:	movzx  edi,BYTE PTR [rax]
    583a:	lea    eax,[rdi-0x9]
    583d:	cmp    eax,0x1
    5840:	jbe    5821 <__cxa_finalize@plt+0x3d61>
    5842:	cmp    edi,0x20
    5845:	je     5821 <__cxa_finalize@plt+0x3d61>
    5847:	cmp    edi,0x23
    584a:	je     59c9 <__cxa_finalize@plt+0x3f09>
    5850:	mov    rsi,r14
    5853:	call   1990 <ungetc@plt>
    5858:	mov    r13,QWORD PTR [rsp+0x10]
    585d:	mov    rcx,QWORD PTR [rsp+0x8]
    5862:	lea    rsi,[rip+0x12ef]        # 6b58 <version_etc_copyright@@Base+0x78>
    5869:	xor    eax,eax
    586b:	mov    rdi,r14
    586e:	mov    rdx,r13
    5871:	call   18b0 <fscanf@plt>
    5876:	cmp    eax,0x1
    5879:	jle    598d <__cxa_finalize@plt+0x3ecd>
    587f:	mov    rdx,r13
    5882:	mov    ecx,DWORD PTR [rdx]
    5884:	add    rdx,0x4
    5888:	lea    eax,[rcx-0x1010101]
    588e:	not    ecx
    5890:	and    eax,ecx
    5892:	and    eax,0x80808080
    5897:	je     5882 <__cxa_finalize@plt+0x3dc2>
    5899:	mov    ecx,eax
    589b:	mov    r13,QWORD PTR [rsp+0x8]
    58a0:	shr    ecx,0x10
    58a3:	test   eax,0x8080
    58a8:	cmove  eax,ecx
    58ab:	lea    rcx,[rdx+0x2]
    58af:	cmove  rdx,rcx
    58b3:	mov    ecx,eax
    58b5:	add    cl,al
    58b7:	sbb    rdx,0x3
    58bb:	sub    rdx,QWORD PTR [rsp+0x10]
    58c0:	mov    esi,DWORD PTR [r13+0x0]
    58c4:	add    r13,0x4
    58c8:	lea    eax,[rsi-0x1010101]
    58ce:	not    esi
    58d0:	and    eax,esi
    58d2:	and    eax,0x80808080
    58d7:	je     58c0 <__cxa_finalize@plt+0x3e00>
    58d9:	mov    esi,eax
    58db:	mov    QWORD PTR [rsp+0x18],rdx
    58e0:	shr    esi,0x10
    58e3:	test   eax,0x8080
    58e8:	cmove  eax,esi
    58eb:	lea    rsi,[r13+0x2]
    58ef:	mov    ecx,eax
    58f1:	cmove  r13,rsi
    58f5:	add    cl,al
    58f7:	sbb    r13,0x3
    58fb:	sub    r13,QWORD PTR [rsp+0x8]
    5900:	cmp    QWORD PTR [rsp],0x0
    5905:	lea    rax,[rdx+r13*1]
    5909:	jne    59fa <__cxa_finalize@plt+0x3f3a>
    590f:	lea    rcx,[rax+0x2]
    5913:	lea    rdi,[rax+0x3]
    5917:	mov    QWORD PTR [rsp],rcx
    591b:	call   1960 <malloc@plt>
    5920:	mov    rdx,QWORD PTR [rsp+0x18]
    5925:	mov    r12,rax
    5928:	test   r12,r12
    592b:	je     5a1f <__cxa_finalize@plt+0x3f5f>
    5931:	mov    r15,QWORD PTR [rsp]
    5935:	mov    rdi,0xfffffffffffffffe
    593c:	mov    rsi,QWORD PTR [rsp+0x10]
    5941:	sub    rdi,rdx
    5944:	add    rdx,0x1
    5948:	sub    r15,r13
    594b:	add    rdi,r15
    594e:	add    rdi,r12
    5951:	call   1940 <memcpy@plt>
    5956:	mov    rsi,QWORD PTR [rsp+0x8]
    595b:	lea    rdi,[r12+r15*1-0x1]
    5960:	lea    rdx,[r13+0x1]
    5964:	mov    r15,r12
    5967:	call   1940 <memcpy@plt>
    596c:	mov    rax,QWORD PTR [r14+0x8]
    5970:	cmp    rax,QWORD PTR [r14+0x10]
    5974:	jb     582f <__cxa_finalize@plt+0x3d6f>
    597a:	mov    rdi,r14
    597d:	call   1750 <__uflow@plt>
    5982:	cmp    eax,0xffffffff
    5985:	mov    edi,eax
    5987:	jne    583a <__cxa_finalize@plt+0x3d7a>
    598d:	mov    rdi,r14
    5990:	call   5a60 <__cxa_finalize@plt+0x3fa0>
    5995:	mov    rax,QWORD PTR [rsp]
    5999:	test   rax,rax
    599c:	je     57c4 <__cxa_finalize@plt+0x3d04>
    59a2:	mov    BYTE PTR [r15+rax*1],0x0
    59a7:	jmp    57cb <__cxa_finalize@plt+0x3d0b>
    59ac:	nop    DWORD PTR [rax+0x0]
    59b0:	lea    rdx,[rax+0x1]
    59b4:	mov    QWORD PTR [r14+0x8],rdx
    59b8:	movzx  eax,BYTE PTR [rax]
    59bb:	mov    edx,0x1
    59c0:	cmp    eax,0xa
    59c3:	je     59f0 <__cxa_finalize@plt+0x3f30>
    59c5:	test   dl,dl
    59c7:	je     59f0 <__cxa_finalize@plt+0x3f30>
    59c9:	mov    rax,QWORD PTR [r14+0x8]
    59cd:	cmp    rax,QWORD PTR [r14+0x10]
    59d1:	jb     59b0 <__cxa_finalize@plt+0x3ef0>
    59d3:	mov    rdi,r14
    59d6:	call   1750 <__uflow@plt>
    59db:	cmp    eax,0xffffffff
    59de:	setne  dl
    59e1:	jmp    59c0 <__cxa_finalize@plt+0x3f00>
    59e3:	mov    edi,r12d
    59e6:	call   18d0 <close@plt>
    59eb:	jmp    57c4 <__cxa_finalize@plt+0x3d04>
    59f0:	cmp    eax,0xffffffff
    59f3:	je     598d <__cxa_finalize@plt+0x3ecd>
    59f5:	jmp    5821 <__cxa_finalize@plt+0x3d61>
    59fa:	add    rax,QWORD PTR [rsp]
    59fe:	mov    rdi,r15
    5a01:	lea    rcx,[rax+0x2]
    5a05:	lea    rsi,[rax+0x3]
    5a09:	mov    QWORD PTR [rsp],rcx
    5a0d:	call   19c0 <realloc@plt>
    5a12:	mov    rdx,QWORD PTR [rsp+0x18]
    5a17:	mov    r12,rax
    5a1a:	jmp    5928 <__cxa_finalize@plt+0x3e68>
    5a1f:	mov    rdi,r15
    5a22:	lea    r15,[rip+0xdd8]        # 6801 <quoting_style_vals@@Base+0x81>
    5a29:	call   1770 <free@plt>
    5a2e:	mov    rdi,r14
    5a31:	call   5a60 <__cxa_finalize@plt+0x3fa0>
    5a36:	jmp    57cb <__cxa_finalize@plt+0x3d0b>
    5a3b:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    5a41:	jne    5a51 <__cxa_finalize@plt+0x3f91>
    5a43:	lea    rdi,[rax+0xe]
    5a47:	jmp    5725 <__cxa_finalize@plt+0x3c65>
    5a4c:	call   1850 <__stack_chk_fail@plt>
    5a51:	lea    rdi,[rax+0xf]
    5a55:	add    r12,0x1
    5a59:	jmp    5768 <__cxa_finalize@plt+0x3ca8>
    5a5e:	xchg   ax,ax
    5a60:	push   r12
    5a62:	push   rbp
    5a63:	push   rbx
    5a64:	mov    rbx,rdi
    5a67:	call   1950 <fileno@plt>
    5a6c:	test   eax,eax
    5a6e:	mov    rdi,rbx
    5a71:	js     5ac7 <__cxa_finalize@plt+0x4007>
    5a73:	call   19b0 <__freading@plt>
    5a78:	test   eax,eax
    5a7a:	jne    5aa8 <__cxa_finalize@plt+0x3fe8>
    5a7c:	mov    rdi,rbx
    5a7f:	call   5ae0 <__cxa_finalize@plt+0x4020>
    5a84:	test   eax,eax
    5a86:	je     5ac4 <__cxa_finalize@plt+0x4004>
    5a88:	call   1790 <__errno_location@plt>
    5a8d:	mov    r12d,DWORD PTR [rax]
    5a90:	mov    rdi,rbx
    5a93:	mov    rbp,rax
    5a96:	call   17f0 <fclose@plt>
    5a9b:	test   r12d,r12d
    5a9e:	jne    5ad0 <__cxa_finalize@plt+0x4010>
    5aa0:	pop    rbx
    5aa1:	pop    rbp
    5aa2:	pop    r12
    5aa4:	ret    
    5aa5:	nop    DWORD PTR [rax]
    5aa8:	mov    rdi,rbx
    5aab:	call   1950 <fileno@plt>
    5ab0:	xor    esi,esi
    5ab2:	mov    edx,0x1
    5ab7:	mov    edi,eax
    5ab9:	call   1890 <lseek@plt>
    5abe:	cmp    rax,0xffffffffffffffff
    5ac2:	jne    5a7c <__cxa_finalize@plt+0x3fbc>
    5ac4:	mov    rdi,rbx
    5ac7:	pop    rbx
    5ac8:	pop    rbp
    5ac9:	pop    r12
    5acb:	jmp    17f0 <fclose@plt>
    5ad0:	mov    DWORD PTR [rbp+0x0],r12d
    5ad4:	mov    eax,0xffffffff
    5ad9:	jmp    5aa0 <__cxa_finalize@plt+0x3fe0>
    5adb:	nop    DWORD PTR [rax+rax*1+0x0]
    5ae0:	test   rdi,rdi
    5ae3:	push   rbx
    5ae4:	mov    rbx,rdi
    5ae7:	je     5afa <__cxa_finalize@plt+0x403a>
    5ae9:	call   19b0 <__freading@plt>
    5aee:	test   eax,eax
    5af0:	je     5afa <__cxa_finalize@plt+0x403a>
    5af2:	test   DWORD PTR [rbx],0x100
    5af8:	jne    5b08 <__cxa_finalize@plt+0x4048>
    5afa:	mov    rdi,rbx
    5afd:	pop    rbx
    5afe:	jmp    1970 <fflush@plt>
    5b03:	nop    DWORD PTR [rax+rax*1+0x0]
    5b08:	mov    rdi,rbx
    5b0b:	mov    edx,0x1
    5b10:	xor    esi,esi
    5b12:	call   5b20 <__cxa_finalize@plt+0x4060>
    5b17:	mov    rdi,rbx
    5b1a:	pop    rbx
    5b1b:	jmp    1970 <fflush@plt>
    5b20:	mov    rax,QWORD PTR [rdi+0x8]
    5b24:	cmp    QWORD PTR [rdi+0x10],rax
    5b28:	je     5b30 <__cxa_finalize@plt+0x4070>
    5b2a:	jmp    1a30 <fseeko@plt>
    5b2f:	nop
    5b30:	mov    rax,QWORD PTR [rdi+0x20]
    5b34:	cmp    QWORD PTR [rdi+0x28],rax
    5b38:	jne    5b2a <__cxa_finalize@plt+0x406a>
    5b3a:	cmp    QWORD PTR [rdi+0x48],0x0
    5b3f:	jne    5b2a <__cxa_finalize@plt+0x406a>
    5b41:	push   r12
    5b43:	push   rbp
    5b44:	mov    r12d,edx
    5b47:	push   rbx
    5b48:	mov    rbp,rsi
    5b4b:	mov    rbx,rdi
    5b4e:	call   1950 <fileno@plt>
    5b53:	mov    edx,r12d
    5b56:	mov    rsi,rbp
    5b59:	mov    edi,eax
    5b5b:	call   1890 <lseek@plt>
    5b60:	cmp    rax,0xffffffffffffffff
    5b64:	je     5b72 <__cxa_finalize@plt+0x40b2>
    5b66:	and    DWORD PTR [rbx],0xffffffef
    5b69:	mov    QWORD PTR [rbx+0x90],rax
    5b70:	xor    eax,eax
    5b72:	pop    rbx
    5b73:	pop    rbp
    5b74:	pop    r12
    5b76:	ret    
    5b77:	nop    WORD PTR [rax+rax*1+0x0]
    5b80:	push   r15
    5b82:	push   r14
    5b84:	mov    r15d,edi
    5b87:	push   r13
    5b89:	push   r12
    5b8b:	lea    r12,[rip+0x201ede]        # 207a70 <version_etc_copyright@@Base+0x200f90>
    5b92:	push   rbp
    5b93:	lea    rbp,[rip+0x201ede]        # 207a78 <version_etc_copyright@@Base+0x200f98>
    5b9a:	push   rbx
    5b9b:	mov    r14,rsi
    5b9e:	mov    r13,rdx
    5ba1:	sub    rbp,r12
    5ba4:	sub    rsp,0x8
    5ba8:	sar    rbp,0x3
    5bac:	call   1720 <__uflow@plt-0x30>
    5bb1:	test   rbp,rbp
    5bb4:	je     5bd6 <__cxa_finalize@plt+0x4116>
    5bb6:	xor    ebx,ebx
    5bb8:	nop    DWORD PTR [rax+rax*1+0x0]
    5bc0:	mov    rdx,r13
    5bc3:	mov    rsi,r14
    5bc6:	mov    edi,r15d
    5bc9:	call   QWORD PTR [r12+rbx*8]
    5bcd:	add    rbx,0x1
    5bd1:	cmp    rbp,rbx
    5bd4:	jne    5bc0 <__cxa_finalize@plt+0x4100>
    5bd6:	add    rsp,0x8
    5bda:	pop    rbx
    5bdb:	pop    rbp
    5bdc:	pop    r12
    5bde:	pop    r13
    5be0:	pop    r14
    5be2:	pop    r15
    5be4:	ret    
    5be5:	nop
    5be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5bf0:	repz ret 
    5bf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5bfc:	nop    DWORD PTR [rax+0x0]
    5c00:	lea    rax,[rip+0x202401]        # 208008 <quoting_style_args@@Base+0x448>
    5c07:	test   rax,rax
    5c0a:	je     5c20 <__cxa_finalize@plt+0x4160>
    5c0c:	mov    rdx,QWORD PTR [rax]
    5c0f:	xor    esi,esi
    5c11:	jmp    1a40 <__cxa_atexit@plt>
    5c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5c20:	xor    edx,edx
    5c22:	xor    esi,esi
    5c24:	jmp    1a40 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000005c2c <.fini>:
    5c2c:	sub    rsp,0x8
    5c30:	add    rsp,0x8
    5c34:	ret    
