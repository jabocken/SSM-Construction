
/usr/bin/mkfifo:     file format elf64-x86-64


Disassembly of section .init:

0000000000001ff8 <_init@@Base>:
    1ff8:	sub    rsp,0x8
    1ffc:	mov    rax,QWORD PTR [rip+0x20cfcd]        # 20efd0 <__gmon_start__>
    2003:	test   rax,rax
    2006:	je     200a <_init@@Base+0x12>
    2008:	call   rax
    200a:	add    rsp,0x8
    200e:	ret    

Disassembly of section .plt:

0000000000002010 <__uflow@plt-0x10>:
    2010:	push   QWORD PTR [rip+0x20ccea]        # 20ed00 <quoting_style_args@@Base+0x260>
    2016:	jmp    QWORD PTR [rip+0x20ccec]        # 20ed08 <quoting_style_args@@Base+0x268>
    201c:	nop    DWORD PTR [rax+0x0]

0000000000002020 <__uflow@plt>:
    2020:	jmp    QWORD PTR [rip+0x20ccea]        # 20ed10 <__uflow@GLIBC_2.2.5>
    2026:	push   0x0
    202b:	jmp    2010 <_init@@Base+0x18>

0000000000002030 <getenv@plt>:
    2030:	jmp    QWORD PTR [rip+0x20cce2]        # 20ed18 <getenv@GLIBC_2.2.5>
    2036:	push   0x1
    203b:	jmp    2010 <_init@@Base+0x18>

0000000000002040 <is_selinux_enabled@plt>:
    2040:	jmp    QWORD PTR [rip+0x20ccda]        # 20ed20 <is_selinux_enabled>
    2046:	push   0x2
    204b:	jmp    2010 <_init@@Base+0x18>

0000000000002050 <abort@plt>:
    2050:	jmp    QWORD PTR [rip+0x20ccd2]        # 20ed28 <abort@GLIBC_2.2.5>
    2056:	push   0x3
    205b:	jmp    2010 <_init@@Base+0x18>

0000000000002060 <__errno_location@plt>:
    2060:	jmp    QWORD PTR [rip+0x20ccca]        # 20ed30 <__errno_location@GLIBC_2.2.5>
    2066:	push   0x4
    206b:	jmp    2010 <_init@@Base+0x18>

0000000000002070 <strncmp@plt>:
    2070:	jmp    QWORD PTR [rip+0x20ccc2]        # 20ed38 <strncmp@GLIBC_2.2.5>
    2076:	push   0x5
    207b:	jmp    2010 <_init@@Base+0x18>

0000000000002080 <_exit@plt>:
    2080:	jmp    QWORD PTR [rip+0x20ccba]        # 20ed40 <_exit@GLIBC_2.2.5>
    2086:	push   0x6
    208b:	jmp    2010 <_init@@Base+0x18>

0000000000002090 <__fpending@plt>:
    2090:	jmp    QWORD PTR [rip+0x20ccb2]        # 20ed48 <__fpending@GLIBC_2.2.5>
    2096:	push   0x7
    209b:	jmp    2010 <_init@@Base+0x18>

00000000000020a0 <context_type_get@plt>:
    20a0:	jmp    QWORD PTR [rip+0x20ccaa]        # 20ed50 <context_type_get>
    20a6:	push   0x8
    20ab:	jmp    2010 <_init@@Base+0x18>

00000000000020b0 <lsetfilecon@plt>:
    20b0:	jmp    QWORD PTR [rip+0x20cca2]        # 20ed58 <lsetfilecon>
    20b6:	push   0x9
    20bb:	jmp    2010 <_init@@Base+0x18>

00000000000020c0 <qsort@plt>:
    20c0:	jmp    QWORD PTR [rip+0x20cc9a]        # 20ed60 <qsort@GLIBC_2.2.5>
    20c6:	push   0xa
    20cb:	jmp    2010 <_init@@Base+0x18>

00000000000020d0 <readlink@plt>:
    20d0:	jmp    QWORD PTR [rip+0x20cc92]        # 20ed68 <readlink@GLIBC_2.2.5>
    20d6:	push   0xb
    20db:	jmp    2010 <_init@@Base+0x18>

00000000000020e0 <fcntl@plt>:
    20e0:	jmp    QWORD PTR [rip+0x20cc8a]        # 20ed70 <fcntl@GLIBC_2.2.5>
    20e6:	push   0xc
    20eb:	jmp    2010 <_init@@Base+0x18>

00000000000020f0 <textdomain@plt>:
    20f0:	jmp    QWORD PTR [rip+0x20cc82]        # 20ed78 <textdomain@GLIBC_2.2.5>
    20f6:	push   0xd
    20fb:	jmp    2010 <_init@@Base+0x18>

0000000000002100 <context_new@plt>:
    2100:	jmp    QWORD PTR [rip+0x20cc7a]        # 20ed80 <context_new>
    2106:	push   0xe
    210b:	jmp    2010 <_init@@Base+0x18>

0000000000002110 <fclose@plt>:
    2110:	jmp    QWORD PTR [rip+0x20cc72]        # 20ed88 <fclose@GLIBC_2.2.5>
    2116:	push   0xf
    211b:	jmp    2010 <_init@@Base+0x18>

0000000000002120 <bindtextdomain@plt>:
    2120:	jmp    QWORD PTR [rip+0x20cc6a]        # 20ed90 <bindtextdomain@GLIBC_2.2.5>
    2126:	push   0x10
    212b:	jmp    2010 <_init@@Base+0x18>

0000000000002130 <dcgettext@plt>:
    2130:	jmp    QWORD PTR [rip+0x20cc62]        # 20ed98 <dcgettext@GLIBC_2.2.5>
    2136:	push   0x11
    213b:	jmp    2010 <_init@@Base+0x18>

0000000000002140 <__ctype_get_mb_cur_max@plt>:
    2140:	jmp    QWORD PTR [rip+0x20cc5a]        # 20eda0 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    2146:	push   0x12
    214b:	jmp    2010 <_init@@Base+0x18>

0000000000002150 <strlen@plt>:
    2150:	jmp    QWORD PTR [rip+0x20cc52]        # 20eda8 <strlen@GLIBC_2.2.5>
    2156:	push   0x13
    215b:	jmp    2010 <_init@@Base+0x18>

0000000000002160 <__lxstat@plt>:
    2160:	jmp    QWORD PTR [rip+0x20cc4a]        # 20edb0 <__lxstat@GLIBC_2.2.5>
    2166:	push   0x14
    216b:	jmp    2010 <_init@@Base+0x18>

0000000000002170 <openat@plt>:
    2170:	jmp    QWORD PTR [rip+0x20cc42]        # 20edb8 <openat@GLIBC_2.4>
    2176:	push   0x15
    217b:	jmp    2010 <_init@@Base+0x18>

0000000000002180 <__stack_chk_fail@plt>:
    2180:	jmp    QWORD PTR [rip+0x20cc3a]        # 20edc0 <__stack_chk_fail@GLIBC_2.4>
    2186:	push   0x16
    218b:	jmp    2010 <_init@@Base+0x18>

0000000000002190 <getopt_long@plt>:
    2190:	jmp    QWORD PTR [rip+0x20cc32]        # 20edc8 <getopt_long@GLIBC_2.2.5>
    2196:	push   0x17
    219b:	jmp    2010 <_init@@Base+0x18>

00000000000021a0 <mbrtowc@plt>:
    21a0:	jmp    QWORD PTR [rip+0x20cc2a]        # 20edd0 <mbrtowc@GLIBC_2.2.5>
    21a6:	push   0x18
    21ab:	jmp    2010 <_init@@Base+0x18>

00000000000021b0 <context_type_set@plt>:
    21b0:	jmp    QWORD PTR [rip+0x20cc22]        # 20edd8 <context_type_set>
    21b6:	push   0x19
    21bb:	jmp    2010 <_init@@Base+0x18>

00000000000021c0 <__fxstatat@plt>:
    21c0:	jmp    QWORD PTR [rip+0x20cc1a]        # 20ede0 <__fxstatat@GLIBC_2.4>
    21c6:	push   0x1a
    21cb:	jmp    2010 <_init@@Base+0x18>

00000000000021d0 <strrchr@plt>:
    21d0:	jmp    QWORD PTR [rip+0x20cc12]        # 20ede8 <strrchr@GLIBC_2.2.5>
    21d6:	push   0x1b
    21db:	jmp    2010 <_init@@Base+0x18>

00000000000021e0 <fgetfilecon@plt>:
    21e0:	jmp    QWORD PTR [rip+0x20cc0a]        # 20edf0 <fgetfilecon>
    21e6:	push   0x1c
    21eb:	jmp    2010 <_init@@Base+0x18>

00000000000021f0 <lseek@plt>:
    21f0:	jmp    QWORD PTR [rip+0x20cc02]        # 20edf8 <lseek@GLIBC_2.2.5>
    21f6:	push   0x1d
    21fb:	jmp    2010 <_init@@Base+0x18>

0000000000002200 <__assert_fail@plt>:
    2200:	jmp    QWORD PTR [rip+0x20cbfa]        # 20ee00 <__assert_fail@GLIBC_2.2.5>
    2206:	push   0x1e
    220b:	jmp    2010 <_init@@Base+0x18>

0000000000002210 <memset@plt>:
    2210:	jmp    QWORD PTR [rip+0x20cbf2]        # 20ee08 <memset@GLIBC_2.2.5>
    2216:	push   0x1f
    221b:	jmp    2010 <_init@@Base+0x18>

0000000000002220 <fscanf@plt>:
    2220:	jmp    QWORD PTR [rip+0x20cbea]        # 20ee10 <fscanf@GLIBC_2.2.5>
    2226:	push   0x20
    222b:	jmp    2010 <_init@@Base+0x18>

0000000000002230 <getcwd@plt>:
    2230:	jmp    QWORD PTR [rip+0x20cbe2]        # 20ee18 <getcwd@GLIBC_2.2.5>
    2236:	push   0x21
    223b:	jmp    2010 <_init@@Base+0x18>

0000000000002240 <close@plt>:
    2240:	jmp    QWORD PTR [rip+0x20cbda]        # 20ee20 <close@GLIBC_2.2.5>
    2246:	push   0x22
    224b:	jmp    2010 <_init@@Base+0x18>

0000000000002250 <strspn@plt>:
    2250:	jmp    QWORD PTR [rip+0x20cbd2]        # 20ee28 <strspn@GLIBC_2.2.5>
    2256:	push   0x23
    225b:	jmp    2010 <_init@@Base+0x18>

0000000000002260 <closedir@plt>:
    2260:	jmp    QWORD PTR [rip+0x20cbca]        # 20ee30 <closedir@GLIBC_2.2.5>
    2266:	push   0x24
    226b:	jmp    2010 <_init@@Base+0x18>

0000000000002270 <matchpathcon@plt>:
    2270:	jmp    QWORD PTR [rip+0x20cbc2]        # 20ee38 <matchpathcon>
    2276:	push   0x25
    227b:	jmp    2010 <_init@@Base+0x18>

0000000000002280 <getcon@plt>:
    2280:	jmp    QWORD PTR [rip+0x20cbba]        # 20ee40 <getcon>
    2286:	push   0x26
    228b:	jmp    2010 <_init@@Base+0x18>

0000000000002290 <memcmp@plt>:
    2290:	jmp    QWORD PTR [rip+0x20cbb2]        # 20ee48 <memcmp@GLIBC_2.2.5>
    2296:	push   0x27
    229b:	jmp    2010 <_init@@Base+0x18>

00000000000022a0 <fputs_unlocked@plt>:
    22a0:	jmp    QWORD PTR [rip+0x20cbaa]        # 20ee50 <fputs_unlocked@GLIBC_2.2.5>
    22a6:	push   0x28
    22ab:	jmp    2010 <_init@@Base+0x18>

00000000000022b0 <calloc@plt>:
    22b0:	jmp    QWORD PTR [rip+0x20cba2]        # 20ee58 <calloc@GLIBC_2.2.5>
    22b6:	push   0x29
    22bb:	jmp    2010 <_init@@Base+0x18>

00000000000022c0 <lgetfilecon@plt>:
    22c0:	jmp    QWORD PTR [rip+0x20cb9a]        # 20ee60 <lgetfilecon>
    22c6:	push   0x2a
    22cb:	jmp    2010 <_init@@Base+0x18>

00000000000022d0 <strcmp@plt>:
    22d0:	jmp    QWORD PTR [rip+0x20cb92]        # 20ee68 <strcmp@GLIBC_2.2.5>
    22d6:	push   0x2b
    22db:	jmp    2010 <_init@@Base+0x18>

00000000000022e0 <dirfd@plt>:
    22e0:	jmp    QWORD PTR [rip+0x20cb8a]        # 20ee70 <dirfd@GLIBC_2.2.5>
    22e6:	push   0x2c
    22eb:	jmp    2010 <_init@@Base+0x18>

00000000000022f0 <mkfifo@plt>:
    22f0:	jmp    QWORD PTR [rip+0x20cb82]        # 20ee78 <mkfifo@GLIBC_2.2.5>
    22f6:	push   0x2d
    22fb:	jmp    2010 <_init@@Base+0x18>

0000000000002300 <umask@plt>:
    2300:	jmp    QWORD PTR [rip+0x20cb7a]        # 20ee80 <umask@GLIBC_2.2.5>
    2306:	push   0x2e
    230b:	jmp    2010 <_init@@Base+0x18>

0000000000002310 <context_free@plt>:
    2310:	jmp    QWORD PTR [rip+0x20cb72]        # 20ee88 <context_free>
    2316:	push   0x2f
    231b:	jmp    2010 <_init@@Base+0x18>

0000000000002320 <memcpy@plt>:
    2320:	jmp    QWORD PTR [rip+0x20cb6a]        # 20ee90 <memcpy@GLIBC_2.14>
    2326:	push   0x30
    232b:	jmp    2010 <_init@@Base+0x18>

0000000000002330 <getfilecon@plt>:
    2330:	jmp    QWORD PTR [rip+0x20cb62]        # 20ee98 <getfilecon>
    2336:	push   0x31
    233b:	jmp    2010 <_init@@Base+0x18>

0000000000002340 <fileno@plt>:
    2340:	jmp    QWORD PTR [rip+0x20cb5a]        # 20eea0 <fileno@GLIBC_2.2.5>
    2346:	push   0x32
    234b:	jmp    2010 <_init@@Base+0x18>

0000000000002350 <__xstat@plt>:
    2350:	jmp    QWORD PTR [rip+0x20cb52]        # 20eea8 <__xstat@GLIBC_2.2.5>
    2356:	push   0x33
    235b:	jmp    2010 <_init@@Base+0x18>

0000000000002360 <readdir@plt>:
    2360:	jmp    QWORD PTR [rip+0x20cb4a]        # 20eeb0 <readdir@GLIBC_2.2.5>
    2366:	push   0x34
    236b:	jmp    2010 <_init@@Base+0x18>

0000000000002370 <setfscreatecon@plt>:
    2370:	jmp    QWORD PTR [rip+0x20cb42]        # 20eeb8 <setfscreatecon>
    2376:	push   0x35
    237b:	jmp    2010 <_init@@Base+0x18>

0000000000002380 <malloc@plt>:
    2380:	jmp    QWORD PTR [rip+0x20cb3a]        # 20eec0 <malloc@GLIBC_2.2.5>
    2386:	push   0x36
    238b:	jmp    2010 <_init@@Base+0x18>

0000000000002390 <fflush@plt>:
    2390:	jmp    QWORD PTR [rip+0x20cb32]        # 20eec8 <fflush@GLIBC_2.2.5>
    2396:	push   0x37
    239b:	jmp    2010 <_init@@Base+0x18>

00000000000023a0 <nl_langinfo@plt>:
    23a0:	jmp    QWORD PTR [rip+0x20cb2a]        # 20eed0 <nl_langinfo@GLIBC_2.2.5>
    23a6:	push   0x38
    23ab:	jmp    2010 <_init@@Base+0x18>

00000000000023b0 <ungetc@plt>:
    23b0:	jmp    QWORD PTR [rip+0x20cb22]        # 20eed8 <ungetc@GLIBC_2.2.5>
    23b6:	push   0x39
    23bb:	jmp    2010 <_init@@Base+0x18>

00000000000023c0 <__fxstat@plt>:
    23c0:	jmp    QWORD PTR [rip+0x20cb1a]        # 20eee0 <__fxstat@GLIBC_2.2.5>
    23c6:	push   0x3a
    23cb:	jmp    2010 <_init@@Base+0x18>

00000000000023d0 <__freading@plt>:
    23d0:	jmp    QWORD PTR [rip+0x20cb12]        # 20eee8 <__freading@GLIBC_2.2.5>
    23d6:	push   0x3b
    23db:	jmp    2010 <_init@@Base+0x18>

00000000000023e0 <fchdir@plt>:
    23e0:	jmp    QWORD PTR [rip+0x20cb0a]        # 20eef0 <fchdir@GLIBC_2.2.5>
    23e6:	push   0x3c
    23eb:	jmp    2010 <_init@@Base+0x18>

00000000000023f0 <realloc@plt>:
    23f0:	jmp    QWORD PTR [rip+0x20cb02]        # 20eef8 <realloc@GLIBC_2.2.5>
    23f6:	push   0x3d
    23fb:	jmp    2010 <_init@@Base+0x18>

0000000000002400 <fdopen@plt>:
    2400:	jmp    QWORD PTR [rip+0x20cafa]        # 20ef00 <fdopen@GLIBC_2.2.5>
    2406:	push   0x3e
    240b:	jmp    2010 <_init@@Base+0x18>

0000000000002410 <setlocale@plt>:
    2410:	jmp    QWORD PTR [rip+0x20caf2]        # 20ef08 <setlocale@GLIBC_2.2.5>
    2416:	push   0x3f
    241b:	jmp    2010 <_init@@Base+0x18>

0000000000002420 <__printf_chk@plt>:
    2420:	jmp    QWORD PTR [rip+0x20caea]        # 20ef10 <__printf_chk@GLIBC_2.3.4>
    2426:	push   0x40
    242b:	jmp    2010 <_init@@Base+0x18>

0000000000002430 <chmod@plt>:
    2430:	jmp    QWORD PTR [rip+0x20cae2]        # 20ef18 <chmod@GLIBC_2.2.5>
    2436:	push   0x41
    243b:	jmp    2010 <_init@@Base+0x18>

0000000000002440 <memmove@plt>:
    2440:	jmp    QWORD PTR [rip+0x20cada]        # 20ef20 <memmove@GLIBC_2.2.5>
    2446:	push   0x42
    244b:	jmp    2010 <_init@@Base+0x18>

0000000000002450 <error@plt>:
    2450:	jmp    QWORD PTR [rip+0x20cad2]        # 20ef28 <error@GLIBC_2.2.5>
    2456:	push   0x43
    245b:	jmp    2010 <_init@@Base+0x18>

0000000000002460 <fsetfilecon@plt>:
    2460:	jmp    QWORD PTR [rip+0x20caca]        # 20ef30 <fsetfilecon>
    2466:	push   0x44
    246b:	jmp    2010 <_init@@Base+0x18>

0000000000002470 <open@plt>:
    2470:	jmp    QWORD PTR [rip+0x20cac2]        # 20ef38 <open@GLIBC_2.2.5>
    2476:	push   0x45
    247b:	jmp    2010 <_init@@Base+0x18>

0000000000002480 <fseeko@plt>:
    2480:	jmp    QWORD PTR [rip+0x20caba]        # 20ef40 <fseeko@GLIBC_2.2.5>
    2486:	push   0x46
    248b:	jmp    2010 <_init@@Base+0x18>

0000000000002490 <fdopendir@plt>:
    2490:	jmp    QWORD PTR [rip+0x20cab2]        # 20ef48 <fdopendir@GLIBC_2.4>
    2496:	push   0x47
    249b:	jmp    2010 <_init@@Base+0x18>

00000000000024a0 <fstatfs@plt>:
    24a0:	jmp    QWORD PTR [rip+0x20caaa]        # 20ef50 <fstatfs@GLIBC_2.2.5>
    24a6:	push   0x48
    24ab:	jmp    2010 <_init@@Base+0x18>

00000000000024b0 <security_compute_create@plt>:
    24b0:	jmp    QWORD PTR [rip+0x20caa2]        # 20ef58 <security_compute_create>
    24b6:	push   0x49
    24bb:	jmp    2010 <_init@@Base+0x18>

00000000000024c0 <__cxa_atexit@plt>:
    24c0:	jmp    QWORD PTR [rip+0x20ca9a]        # 20ef60 <__cxa_atexit@GLIBC_2.2.5>
    24c6:	push   0x4a
    24cb:	jmp    2010 <_init@@Base+0x18>

00000000000024d0 <freecon@plt>:
    24d0:	jmp    QWORD PTR [rip+0x20ca92]        # 20ef68 <freecon>
    24d6:	push   0x4b
    24db:	jmp    2010 <_init@@Base+0x18>

00000000000024e0 <exit@plt>:
    24e0:	jmp    QWORD PTR [rip+0x20ca8a]        # 20ef70 <exit@GLIBC_2.2.5>
    24e6:	push   0x4c
    24eb:	jmp    2010 <_init@@Base+0x18>

00000000000024f0 <fwrite@plt>:
    24f0:	jmp    QWORD PTR [rip+0x20ca82]        # 20ef78 <fwrite@GLIBC_2.2.5>
    24f6:	push   0x4d
    24fb:	jmp    2010 <_init@@Base+0x18>

0000000000002500 <__fprintf_chk@plt>:
    2500:	jmp    QWORD PTR [rip+0x20ca7a]        # 20ef80 <__fprintf_chk@GLIBC_2.3.4>
    2506:	push   0x4e
    250b:	jmp    2010 <_init@@Base+0x18>

0000000000002510 <getfscreatecon@plt>:
    2510:	jmp    QWORD PTR [rip+0x20ca72]        # 20ef88 <getfscreatecon>
    2516:	push   0x4f
    251b:	jmp    2010 <_init@@Base+0x18>

0000000000002520 <mbsinit@plt>:
    2520:	jmp    QWORD PTR [rip+0x20ca6a]        # 20ef90 <mbsinit@GLIBC_2.2.5>
    2526:	push   0x50
    252b:	jmp    2010 <_init@@Base+0x18>

0000000000002530 <context_str@plt>:
    2530:	jmp    QWORD PTR [rip+0x20ca62]        # 20ef98 <context_str>
    2536:	push   0x51
    253b:	jmp    2010 <_init@@Base+0x18>

0000000000002540 <iswprint@plt>:
    2540:	jmp    QWORD PTR [rip+0x20ca5a]        # 20efa0 <iswprint@GLIBC_2.2.5>
    2546:	push   0x52
    254b:	jmp    2010 <_init@@Base+0x18>

0000000000002550 <mode_to_security_class@plt>:
    2550:	jmp    QWORD PTR [rip+0x20ca52]        # 20efa8 <mode_to_security_class>
    2556:	push   0x53
    255b:	jmp    2010 <_init@@Base+0x18>

0000000000002560 <__ctype_b_loc@plt>:
    2560:	jmp    QWORD PTR [rip+0x20ca4a]        # 20efb0 <__ctype_b_loc@GLIBC_2.3>
    2566:	push   0x54
    256b:	jmp    2010 <_init@@Base+0x18>

Disassembly of section .plt.got:

0000000000002570 <free@plt>:
    2570:	jmp    QWORD PTR [rip+0x20ca42]        # 20efb8 <free@GLIBC_2.2.5>
    2576:	xchg   ax,ax

0000000000002578 <__cxa_finalize@plt>:
    2578:	jmp    QWORD PTR [rip+0x20ca62]        # 20efe0 <__cxa_finalize@GLIBC_2.2.5>
    257e:	xchg   ax,ax

Disassembly of section .text:

0000000000002580 <fts_open@@Base-0x7020>:
    2580:	push   r15
    2582:	push   r14
    2584:	mov    r15d,0x1
    258a:	push   r13
    258c:	push   r12
    258e:	xor    r14d,r14d
    2591:	push   rbp
    2592:	push   rbx
    2593:	mov    ebp,edi
    2595:	mov    rbx,rsi
    2598:	xor    r12d,r12d
    259b:	xor    r13d,r13d
    259e:	sub    rsp,0x18
    25a2:	mov    rdi,QWORD PTR [rsi]
    25a5:	call   57e0 <__cxa_finalize@plt+0x3268>
    25aa:	lea    rsi,[rip+0x9790]        # bd41 <quoting_style_vals@@Base+0x81>
    25b1:	mov    edi,0x6
    25b6:	call   2410 <setlocale@plt>
    25bb:	lea    rsi,[rip+0x8c11]        # b1d3 <_IO_stdin_used@@Base+0x93>
    25c2:	lea    rdi,[rip+0x8bfc]        # b1c5 <_IO_stdin_used@@Base+0x85>
    25c9:	call   2120 <bindtextdomain@plt>
    25ce:	lea    rdi,[rip+0x8bf0]        # b1c5 <_IO_stdin_used@@Base+0x85>
    25d5:	call   20f0 <textdomain@plt>
    25da:	lea    rdi,[rip+0x156f]        # 3b50 <__cxa_finalize@plt+0x15d8>
    25e1:	call   b100 <fts_children@@Base+0xe80>
    25e6:	lea    rcx,[rip+0x20c413]        # 20ea00 <version_etc_copyright@@Base+0x2029e0>
    25ed:	lea    rdx,[rip+0x8c01]        # b1f5 <_IO_stdin_used@@Base+0xb5>
    25f4:	xor    r8d,r8d
    25f7:	mov    rsi,rbx
    25fa:	mov    edi,ebp
    25fc:	call   2190 <getopt_long@plt>
    2601:	cmp    eax,0xffffffff
    2604:	je     26c4 <__cxa_finalize@plt+0x14c>
    260a:	cmp    eax,0xffffff7e
    260f:	je     2873 <__cxa_finalize@plt+0x2fb>
    2615:	jle    2630 <__cxa_finalize@plt+0xb8>
    2617:	cmp    eax,0x5a
    261a:	je     2670 <__cxa_finalize@plt+0xf8>
    261c:	cmp    eax,0x6d
    261f:	jne    2869 <__cxa_finalize@plt+0x2f1>
    2625:	mov    r13,QWORD PTR [rip+0x20ca74]        # 20f0a0 <optarg@@GLIBC_2.2.5>
    262c:	jmp    25e6 <__cxa_finalize@plt+0x6e>
    262e:	xchg   ax,ax
    2630:	cmp    eax,0xffffff7d
    2635:	jne    2869 <__cxa_finalize@plt+0x2f1>
    263b:	mov    rdi,QWORD PTR [rip+0x20ca46]        # 20f088 <stdout@@GLIBC_2.2.5>
    2642:	mov    rcx,QWORD PTR [rip+0x20c9c7]        # 20f010 <Version@@Base>
    2649:	lea    r8,[rip+0x8b95]        # b1e5 <_IO_stdin_used@@Base+0xa5>
    2650:	lea    rdx,[rip+0x8b6a]        # b1c1 <_IO_stdin_used@@Base+0x81>
    2657:	lea    rsi,[rip+0x8ae6]        # b144 <_IO_stdin_used@@Base+0x4>
    265e:	xor    r9d,r9d
    2661:	xor    eax,eax
    2663:	call   7b30 <__cxa_finalize@plt+0x55b8>
    2668:	xor    edi,edi
    266a:	call   24e0 <exit@plt>
    266f:	nop
    2670:	call   2040 <is_selinux_enabled@plt>
    2675:	test   eax,eax
    2677:	jle    2690 <__cxa_finalize@plt+0x118>
    2679:	mov    rax,QWORD PTR [rip+0x20ca20]        # 20f0a0 <optarg@@GLIBC_2.2.5>
    2680:	test   rax,rax
    2683:	cmove  r12d,r15d
    2687:	cmovne r14,rax
    268b:	jmp    25e6 <__cxa_finalize@plt+0x6e>
    2690:	cmp    QWORD PTR [rip+0x20ca08],0x0        # 20f0a0 <optarg@@GLIBC_2.2.5>
    2698:	je     25e6 <__cxa_finalize@plt+0x6e>
    269e:	lea    rsi,[rip+0x8edb]        # b580 <_IO_stdin_used@@Base+0x440>
    26a5:	xor    edi,edi
    26a7:	mov    edx,0x5
    26ac:	call   2130 <dcgettext@plt>
    26b1:	xor    esi,esi
    26b3:	mov    rdx,rax
    26b6:	xor    edi,edi
    26b8:	xor    eax,eax
    26ba:	call   2450 <error@plt>
    26bf:	jmp    25e6 <__cxa_finalize@plt+0x6e>
    26c4:	cmp    DWORD PTR [rip+0x20c9c6],ebp        # 20f090 <optind@@GLIBC_2.2.5>
    26ca:	je     2848 <__cxa_finalize@plt+0x2d0>
    26d0:	test   r14,r14
    26d3:	je     26e5 <__cxa_finalize@plt+0x16d>
    26d5:	mov    rdi,r14
    26d8:	call   2370 <setfscreatecon@plt>
    26dd:	test   eax,eax
    26df:	js     287a <__cxa_finalize@plt+0x302>
    26e5:	test   r13,r13
    26e8:	je     283d <__cxa_finalize@plt+0x2c5>
    26ee:	mov    rdi,r13
    26f1:	call   5230 <__cxa_finalize@plt+0x2cb8>
    26f6:	test   rax,rax
    26f9:	mov    r15,rax
    26fc:	je     28d8 <__cxa_finalize@plt+0x360>
    2702:	xor    edi,edi
    2704:	call   2300 <umask@plt>
    2709:	mov    r14d,eax
    270c:	mov    edi,eax
    270e:	call   2300 <umask@plt>
    2713:	xor    r8d,r8d
    2716:	mov    edx,r14d
    2719:	xor    esi,esi
    271b:	mov    rcx,r15
    271e:	mov    edi,0x1b6
    2723:	call   5670 <__cxa_finalize@plt+0x30f8>
    2728:	mov    rdi,r15
    272b:	mov    r14d,eax
    272e:	call   2570 <free@plt>
    2733:	test   r14d,0xfffffe00
    273a:	jne    28b4 <__cxa_finalize@plt+0x33c>
    2740:	mov    eax,DWORD PTR [rip+0x20c94a]        # 20f090 <optind@@GLIBC_2.2.5>
    2746:	xor    r15d,r15d
    2749:	cmp    eax,ebp
    274b:	jl     279c <__cxa_finalize@plt+0x224>
    274d:	jmp    2803 <__cxa_finalize@plt+0x28b>
    2752:	movsxd rax,DWORD PTR [rip+0x20c937]        # 20f090 <optind@@GLIBC_2.2.5>
    2759:	mov    esi,r14d
    275c:	mov    rdi,QWORD PTR [rbx+rax*8]
    2760:	call   22f0 <mkfifo@plt>
    2765:	test   eax,eax
    2767:	jne    27b3 <__cxa_finalize@plt+0x23b>
    2769:	test   r13,r13
    276c:	je     2789 <__cxa_finalize@plt+0x211>
    276e:	movsxd rax,DWORD PTR [rip+0x20c91b]        # 20f090 <optind@@GLIBC_2.2.5>
    2775:	mov    esi,r14d
    2778:	mov    rdi,QWORD PTR [rbx+rax*8]
    277c:	call   2430 <chmod@plt>
    2781:	test   eax,eax
    2783:	jne    2815 <__cxa_finalize@plt+0x29d>
    2789:	mov    eax,DWORD PTR [rip+0x20c901]        # 20f090 <optind@@GLIBC_2.2.5>
    278f:	add    eax,0x1
    2792:	cmp    eax,ebp
    2794:	mov    DWORD PTR [rip+0x20c8f6],eax        # 20f090 <optind@@GLIBC_2.2.5>
    279a:	jge    2803 <__cxa_finalize@plt+0x28b>
    279c:	test   r12b,r12b
    279f:	je     2752 <__cxa_finalize@plt+0x1da>
    27a1:	cdqe   
    27a3:	mov    esi,0x1000
    27a8:	mov    rdi,QWORD PTR [rbx+rax*8]
    27ac:	call   30b0 <__cxa_finalize@plt+0xb38>
    27b1:	jmp    2752 <__cxa_finalize@plt+0x1da>
    27b3:	movsxd rax,DWORD PTR [rip+0x20c8d6]        # 20f090 <optind@@GLIBC_2.2.5>
    27ba:	mov    edi,0x4
    27bf:	mov    rsi,QWORD PTR [rbx+rax*8]
    27c3:	call   7220 <__cxa_finalize@plt+0x4ca8>
    27c8:	lea    rsi,[rip+0x8a47]        # b216 <_IO_stdin_used@@Base+0xd6>
    27cf:	mov    QWORD PTR [rsp+0x8],rax
    27d4:	mov    edx,0x5
    27d9:	xor    edi,edi
    27db:	call   2130 <dcgettext@plt>
    27e0:	mov    r15,rax
    27e3:	call   2060 <__errno_location@plt>
    27e8:	mov    rcx,QWORD PTR [rsp+0x8]
    27ed:	mov    esi,DWORD PTR [rax]
    27ef:	mov    rdx,r15
    27f2:	xor    edi,edi
    27f4:	xor    eax,eax
    27f6:	mov    r15d,0x1
    27fc:	call   2450 <error@plt>
    2801:	jmp    2789 <__cxa_finalize@plt+0x211>
    2803:	add    rsp,0x18
    2807:	mov    eax,r15d
    280a:	pop    rbx
    280b:	pop    rbp
    280c:	pop    r12
    280e:	pop    r13
    2810:	pop    r14
    2812:	pop    r15
    2814:	ret    
    2815:	movsxd rax,DWORD PTR [rip+0x20c874]        # 20f090 <optind@@GLIBC_2.2.5>
    281c:	mov    edi,0x4
    2821:	mov    rsi,QWORD PTR [rbx+rax*8]
    2825:	call   7220 <__cxa_finalize@plt+0x4ca8>
    282a:	mov    edx,0x5
    282f:	mov    QWORD PTR [rsp+0x8],rax
    2834:	lea    rsi,[rip+0x89f1]        # b22c <_IO_stdin_used@@Base+0xec>
    283b:	jmp    27d9 <__cxa_finalize@plt+0x261>
    283d:	mov    r14d,0x1b6
    2843:	jmp    2740 <__cxa_finalize@plt+0x1c8>
    2848:	lea    rsi,[rip+0x89aa]        # b1f9 <_IO_stdin_used@@Base+0xb9>
    284f:	mov    edx,0x5
    2854:	xor    edi,edi
    2856:	call   2130 <dcgettext@plt>
    285b:	xor    esi,esi
    285d:	mov    rdx,rax
    2860:	xor    edi,edi
    2862:	xor    eax,eax
    2864:	call   2450 <error@plt>
    2869:	mov    edi,0x1
    286e:	call   2a10 <__cxa_finalize@plt+0x498>
    2873:	xor    edi,edi
    2875:	call   2a10 <__cxa_finalize@plt+0x498>
    287a:	mov    rdi,r14
    287d:	call   74f0 <__cxa_finalize@plt+0x4f78>
    2882:	lea    rsi,[rip+0x8d47]        # b5d0 <_IO_stdin_used@@Base+0x490>
    2889:	mov    edx,0x5
    288e:	xor    edi,edi
    2890:	mov    rbp,rax
    2893:	call   2130 <dcgettext@plt>
    2898:	mov    rbx,rax
    289b:	call   2060 <__errno_location@plt>
    28a0:	mov    esi,DWORD PTR [rax]
    28a2:	mov    rcx,rbp
    28a5:	mov    rdx,rbx
    28a8:	mov    edi,0x1
    28ad:	xor    eax,eax
    28af:	call   2450 <error@plt>
    28b4:	lea    rsi,[rip+0x8d4d]        # b608 <_IO_stdin_used@@Base+0x4c8>
    28bb:	mov    edx,0x5
    28c0:	xor    edi,edi
    28c2:	call   2130 <dcgettext@plt>
    28c7:	xor    esi,esi
    28c9:	mov    rdx,rax
    28cc:	mov    edi,0x1
    28d1:	xor    eax,eax
    28d3:	call   2450 <error@plt>
    28d8:	lea    rsi,[rip+0x892a]        # b209 <_IO_stdin_used@@Base+0xc9>
    28df:	mov    edx,0x5
    28e4:	xor    edi,edi
    28e6:	call   2130 <dcgettext@plt>
    28eb:	xor    esi,esi
    28ed:	mov    rdx,rax
    28f0:	mov    edi,0x1
    28f5:	xor    eax,eax
    28f7:	call   2450 <error@plt>
    28fc:	nop    DWORD PTR [rax+0x0]
    2900:	xor    ebp,ebp
    2902:	mov    r9,rdx
    2905:	pop    rsi
    2906:	mov    rdx,rsp
    2909:	and    rsp,0xfffffffffffffff0
    290d:	push   rax
    290e:	push   rsp
    290f:	lea    r8,[rip+0x87da]        # b0f0 <fts_children@@Base+0xe70>
    2916:	lea    rcx,[rip+0x8763]        # b080 <fts_children@@Base+0xe00>
    291d:	lea    rdi,[rip+0xfffffffffffffc5c]        # 2580 <__cxa_finalize@plt+0x8>
    2924:	call   QWORD PTR [rip+0x20c69e]        # 20efc8 <__libc_start_main@GLIBC_2.2.5>
    292a:	hlt    
    292b:	nop    DWORD PTR [rax+rax*1+0x0]
    2930:	lea    rdi,[rip+0x20c749]        # 20f080 <__progname@@GLIBC_2.2.5>
    2937:	push   rbp
    2938:	lea    rax,[rip+0x20c741]        # 20f080 <__progname@@GLIBC_2.2.5>
    293f:	cmp    rax,rdi
    2942:	mov    rbp,rsp
    2945:	je     2960 <__cxa_finalize@plt+0x3e8>
    2947:	mov    rax,QWORD PTR [rip+0x20c672]        # 20efc0 <_ITM_deregisterTMCloneTable>
    294e:	test   rax,rax
    2951:	je     2960 <__cxa_finalize@plt+0x3e8>
    2953:	pop    rbp
    2954:	jmp    rax
    2956:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2960:	pop    rbp
    2961:	ret    
    2962:	nop    DWORD PTR [rax+0x0]
    2966:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2970:	lea    rdi,[rip+0x20c709]        # 20f080 <__progname@@GLIBC_2.2.5>
    2977:	lea    rsi,[rip+0x20c702]        # 20f080 <__progname@@GLIBC_2.2.5>
    297e:	push   rbp
    297f:	sub    rsi,rdi
    2982:	mov    rbp,rsp
    2985:	sar    rsi,0x3
    2989:	mov    rax,rsi
    298c:	shr    rax,0x3f
    2990:	add    rsi,rax
    2993:	sar    rsi,1
    2996:	je     29b0 <__cxa_finalize@plt+0x438>
    2998:	mov    rax,QWORD PTR [rip+0x20c639]        # 20efd8 <_ITM_registerTMCloneTable>
    299f:	test   rax,rax
    29a2:	je     29b0 <__cxa_finalize@plt+0x438>
    29a4:	pop    rbp
    29a5:	jmp    rax
    29a7:	nop    WORD PTR [rax+rax*1+0x0]
    29b0:	pop    rbp
    29b1:	ret    
    29b2:	nop    DWORD PTR [rax+0x0]
    29b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    29c0:	cmp    BYTE PTR [rip+0x20c701],0x0        # 20f0c8 <stderr@@GLIBC_2.2.5+0x8>
    29c7:	jne    29f8 <__cxa_finalize@plt+0x480>
    29c9:	cmp    QWORD PTR [rip+0x20c60f],0x0        # 20efe0 <__cxa_finalize@GLIBC_2.2.5>
    29d1:	push   rbp
    29d2:	mov    rbp,rsp
    29d5:	je     29e3 <__cxa_finalize@plt+0x46b>
    29d7:	mov    rdi,QWORD PTR [rip+0x20c62a]        # 20f008 <quoting_style_args@@Base+0x568>
    29de:	call   2578 <__cxa_finalize@plt>
    29e3:	call   2930 <__cxa_finalize@plt+0x3b8>
    29e8:	mov    BYTE PTR [rip+0x20c6d9],0x1        # 20f0c8 <stderr@@GLIBC_2.2.5+0x8>
    29ef:	pop    rbp
    29f0:	ret    
    29f1:	nop    DWORD PTR [rax+0x0]
    29f8:	repz ret 
    29fa:	nop    WORD PTR [rax+rax*1+0x0]
    2a00:	push   rbp
    2a01:	mov    rbp,rsp
    2a04:	pop    rbp
    2a05:	jmp    2970 <__cxa_finalize@plt+0x3f8>
    2a0a:	nop    WORD PTR [rax+rax*1+0x0]
    2a10:	push   r12
    2a12:	push   rbp
    2a13:	mov    edx,0x5
    2a18:	push   rbx
    2a19:	mov    ebp,edi
    2a1b:	add    rsp,0xffffffffffffff80
    2a1f:	mov    rbx,QWORD PTR [rip+0x20c6ba]        # 20f0e0 <program_name@@Base>
    2a26:	mov    rax,QWORD PTR fs:0x28
    2a2f:	mov    QWORD PTR [rsp+0x78],rax
    2a34:	xor    eax,eax
    2a36:	test   edi,edi
    2a38:	je     2a68 <__cxa_finalize@plt+0x4f0>
    2a3a:	lea    rsi,[rip+0x881f]        # b260 <_IO_stdin_used@@Base+0x120>
    2a41:	xor    edi,edi
    2a43:	call   2130 <dcgettext@plt>
    2a48:	mov    rdi,QWORD PTR [rip+0x20c671]        # 20f0c0 <stderr@@GLIBC_2.2.5>
    2a4f:	mov    rdx,rax
    2a52:	mov    rcx,rbx
    2a55:	mov    esi,0x1
    2a5a:	xor    eax,eax
    2a5c:	call   2500 <__fprintf_chk@plt>
    2a61:	mov    edi,ebp
    2a63:	call   24e0 <exit@plt>
    2a68:	lea    rsi,[rip+0x8819]        # b288 <_IO_stdin_used@@Base+0x148>
    2a6f:	xor    edi,edi
    2a71:	call   2130 <dcgettext@plt>
    2a76:	mov    rdx,rbx
    2a79:	mov    rsi,rax
    2a7c:	mov    edi,0x1
    2a81:	xor    eax,eax
    2a83:	call   2420 <__printf_chk@plt>
    2a88:	mov    rbx,QWORD PTR [rip+0x20c5f9]        # 20f088 <stdout@@GLIBC_2.2.5>
    2a8f:	lea    rsi,[rip+0x8812]        # b2a8 <_IO_stdin_used@@Base+0x168>
    2a96:	mov    edx,0x5
    2a9b:	xor    edi,edi
    2a9d:	call   2130 <dcgettext@plt>
    2aa2:	mov    rsi,rbx
    2aa5:	mov    rdi,rax
    2aa8:	call   22a0 <fputs_unlocked@plt>
    2aad:	mov    rbx,QWORD PTR [rip+0x20c5d4]        # 20f088 <stdout@@GLIBC_2.2.5>
    2ab4:	lea    rsi,[rip+0x8825]        # b2e0 <_IO_stdin_used@@Base+0x1a0>
    2abb:	mov    edx,0x5
    2ac0:	xor    edi,edi
    2ac2:	call   2130 <dcgettext@plt>
    2ac7:	mov    rsi,rbx
    2aca:	mov    rdi,rax
    2acd:	call   22a0 <fputs_unlocked@plt>
    2ad2:	mov    rbx,QWORD PTR [rip+0x20c5af]        # 20f088 <stdout@@GLIBC_2.2.5>
    2ad9:	lea    rsi,[rip+0x8850]        # b330 <_IO_stdin_used@@Base+0x1f0>
    2ae0:	mov    edx,0x5
    2ae5:	xor    edi,edi
    2ae7:	call   2130 <dcgettext@plt>
    2aec:	mov    rsi,rbx
    2aef:	mov    rdi,rax
    2af2:	call   22a0 <fputs_unlocked@plt>
    2af7:	mov    rbx,QWORD PTR [rip+0x20c58a]        # 20f088 <stdout@@GLIBC_2.2.5>
    2afe:	lea    rsi,[rip+0x887b]        # b380 <_IO_stdin_used@@Base+0x240>
    2b05:	mov    edx,0x5
    2b0a:	xor    edi,edi
    2b0c:	call   2130 <dcgettext@plt>
    2b11:	mov    rsi,rbx
    2b14:	mov    rdi,rax
    2b17:	call   22a0 <fputs_unlocked@plt>
    2b1c:	mov    rbx,QWORD PTR [rip+0x20c565]        # 20f088 <stdout@@GLIBC_2.2.5>
    2b23:	lea    rsi,[rip+0x8926]        # b450 <_IO_stdin_used@@Base+0x310>
    2b2a:	mov    edx,0x5
    2b2f:	xor    edi,edi
    2b31:	call   2130 <dcgettext@plt>
    2b36:	mov    rsi,rbx
    2b39:	mov    rdi,rax
    2b3c:	call   22a0 <fputs_unlocked@plt>
    2b41:	mov    rbx,QWORD PTR [rip+0x20c540]        # 20f088 <stdout@@GLIBC_2.2.5>
    2b48:	lea    rsi,[rip+0x8931]        # b480 <_IO_stdin_used@@Base+0x340>
    2b4f:	mov    edx,0x5
    2b54:	xor    edi,edi
    2b56:	call   2130 <dcgettext@plt>
    2b5b:	mov    rsi,rbx
    2b5e:	mov    rdi,rax
    2b61:	lea    rbx,[rip+0x8624]        # b18c <_IO_stdin_used@@Base+0x4c>
    2b68:	call   22a0 <fputs_unlocked@plt>
    2b6d:	lea    rax,[rip+0x85d7]        # b14b <_IO_stdin_used@@Base+0xb>
    2b74:	lea    rcx,[rip+0x861b]        # b196 <_IO_stdin_used@@Base+0x56>
    2b7b:	lea    rdx,[rip+0x861e]        # b1a0 <_IO_stdin_used@@Base+0x60>
    2b82:	mov    QWORD PTR [rsp+0x30],rbx
    2b87:	lea    rbx,[rip+0x85b6]        # b144 <_IO_stdin_used@@Base+0x4>
    2b8e:	mov    QWORD PTR [rsp+0x60],0x0
    2b97:	mov    QWORD PTR [rsp],rax
    2b9b:	lea    rax,[rip+0x85ab]        # b14d <_IO_stdin_used@@Base+0xd>
    2ba2:	mov    QWORD PTR [rsp+0x40],rcx
    2ba7:	mov    QWORD PTR [rsp+0x50],rdx
    2bac:	mov    QWORD PTR [rsp+0x68],0x0
    2bb5:	mov    QWORD PTR [rsp+0x8],rax
    2bba:	lea    rax,[rip+0x8604]        # b1c5 <_IO_stdin_used@@Base+0x85>
    2bc1:	mov    QWORD PTR [rsp+0x10],rax
    2bc6:	lea    rax,[rip+0x8590]        # b15d <_IO_stdin_used@@Base+0x1d>
    2bcd:	mov    QWORD PTR [rsp+0x18],rax
    2bd2:	lea    rax,[rip+0x859a]        # b173 <_IO_stdin_used@@Base+0x33>
    2bd9:	mov    QWORD PTR [rsp+0x20],rax
    2bde:	lea    rax,[rip+0x8598]        # b17d <_IO_stdin_used@@Base+0x3d>
    2be5:	mov    QWORD PTR [rsp+0x28],rax
    2bea:	mov    QWORD PTR [rsp+0x38],rax
    2bef:	mov    QWORD PTR [rsp+0x48],rax
    2bf4:	mov    QWORD PTR [rsp+0x58],rax
    2bf9:	mov    rax,rsp
    2bfc:	nop    DWORD PTR [rax+0x0]
    2c00:	add    rax,0x10
    2c04:	mov    rdi,QWORD PTR [rax]
    2c07:	test   rdi,rdi
    2c0a:	je     2c18 <__cxa_finalize@plt+0x6a0>
    2c0c:	mov    ecx,0x7
    2c11:	mov    rsi,rbx
    2c14:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2c16:	jne    2c00 <__cxa_finalize@plt+0x688>
    2c18:	mov    r12,QWORD PTR [rax+0x8]
    2c1c:	xor    edi,edi
    2c1e:	mov    edx,0x5
    2c23:	lea    rsi,[rip+0x8580]        # b1aa <_IO_stdin_used@@Base+0x6a>
    2c2a:	test   r12,r12
    2c2d:	je     2cf4 <__cxa_finalize@plt+0x77c>
    2c33:	call   2130 <dcgettext@plt>
    2c38:	lea    rcx,[rip+0x8879]        # b4b8 <_IO_stdin_used@@Base+0x378>
    2c3f:	lea    rdx,[rip+0x857b]        # b1c1 <_IO_stdin_used@@Base+0x81>
    2c46:	mov    rsi,rax
    2c49:	mov    edi,0x1
    2c4e:	xor    eax,eax
    2c50:	call   2420 <__printf_chk@plt>
    2c55:	xor    esi,esi
    2c57:	mov    edi,0x5
    2c5c:	call   2410 <setlocale@plt>
    2c61:	test   rax,rax
    2c64:	je     2c82 <__cxa_finalize@plt+0x70a>
    2c66:	lea    rsi,[rip+0x8562]        # b1cf <_IO_stdin_used@@Base+0x8f>
    2c6d:	mov    edx,0x3
    2c72:	mov    rdi,rax
    2c75:	call   2070 <strncmp@plt>
    2c7a:	test   eax,eax
    2c7c:	jne    2d89 <__cxa_finalize@plt+0x811>
    2c82:	lea    rsi,[rip+0x889f]        # b528 <_IO_stdin_used@@Base+0x3e8>
    2c89:	xor    edi,edi
    2c8b:	mov    edx,0x5
    2c90:	call   2130 <dcgettext@plt>
    2c95:	lea    rcx,[rip+0x84a8]        # b144 <_IO_stdin_used@@Base+0x4>
    2c9c:	lea    rdx,[rip+0x8815]        # b4b8 <_IO_stdin_used@@Base+0x378>
    2ca3:	mov    rsi,rax
    2ca6:	mov    edi,0x1
    2cab:	xor    eax,eax
    2cad:	call   2420 <__printf_chk@plt>
    2cb2:	cmp    r12,rbx
    2cb5:	lea    rcx,[rip+0x84ab]        # b167 <_IO_stdin_used@@Base+0x27>
    2cbc:	lea    rbx,[rip+0x907e]        # bd41 <quoting_style_vals@@Base+0x81>
    2cc3:	cmove  rbx,rcx
    2cc7:	lea    rsi,[rip+0x887a]        # b548 <_IO_stdin_used@@Base+0x408>
    2cce:	xor    edi,edi
    2cd0:	mov    edx,0x5
    2cd5:	call   2130 <dcgettext@plt>
    2cda:	mov    rcx,rbx
    2cdd:	mov    rsi,rax
    2ce0:	mov    rdx,r12
    2ce3:	mov    edi,0x1
    2ce8:	xor    eax,eax
    2cea:	call   2420 <__printf_chk@plt>
    2cef:	jmp    2a61 <__cxa_finalize@plt+0x4e9>
    2cf4:	call   2130 <dcgettext@plt>
    2cf9:	lea    rcx,[rip+0x87b8]        # b4b8 <_IO_stdin_used@@Base+0x378>
    2d00:	lea    rdx,[rip+0x84ba]        # b1c1 <_IO_stdin_used@@Base+0x81>
    2d07:	mov    rsi,rax
    2d0a:	mov    edi,0x1
    2d0f:	xor    eax,eax
    2d11:	call   2420 <__printf_chk@plt>
    2d16:	xor    esi,esi
    2d18:	mov    edi,0x5
    2d1d:	call   2410 <setlocale@plt>
    2d22:	test   rax,rax
    2d25:	je     2d3f <__cxa_finalize@plt+0x7c7>
    2d27:	lea    rsi,[rip+0x84a1]        # b1cf <_IO_stdin_used@@Base+0x8f>
    2d2e:	mov    edx,0x3
    2d33:	mov    rdi,rax
    2d36:	call   2070 <strncmp@plt>
    2d3b:	test   eax,eax
    2d3d:	jne    2d82 <__cxa_finalize@plt+0x80a>
    2d3f:	lea    rsi,[rip+0x87e2]        # b528 <_IO_stdin_used@@Base+0x3e8>
    2d46:	mov    edx,0x5
    2d4b:	xor    edi,edi
    2d4d:	lea    r12,[rip+0x83f0]        # b144 <_IO_stdin_used@@Base+0x4>
    2d54:	lea    rbx,[rip+0x840c]        # b167 <_IO_stdin_used@@Base+0x27>
    2d5b:	call   2130 <dcgettext@plt>
    2d60:	lea    rcx,[rip+0x83dd]        # b144 <_IO_stdin_used@@Base+0x4>
    2d67:	lea    rdx,[rip+0x874a]        # b4b8 <_IO_stdin_used@@Base+0x378>
    2d6e:	mov    rsi,rax
    2d71:	mov    edi,0x1
    2d76:	xor    eax,eax
    2d78:	call   2420 <__printf_chk@plt>
    2d7d:	jmp    2cc7 <__cxa_finalize@plt+0x74f>
    2d82:	lea    r12,[rip+0x83bb]        # b144 <_IO_stdin_used@@Base+0x4>
    2d89:	lea    rsi,[rip+0x8750]        # b4e0 <_IO_stdin_used@@Base+0x3a0>
    2d90:	xor    edi,edi
    2d92:	mov    edx,0x5
    2d97:	call   2130 <dcgettext@plt>
    2d9c:	lea    rdx,[rip+0x83a1]        # b144 <_IO_stdin_used@@Base+0x4>
    2da3:	mov    rsi,rax
    2da6:	mov    edi,0x1
    2dab:	xor    eax,eax
    2dad:	call   2420 <__printf_chk@plt>
    2db2:	jmp    2c82 <__cxa_finalize@plt+0x70a>
    2db7:	nop    WORD PTR [rax+rax*1+0x0]
    2dc0:	push   r14
    2dc2:	push   r13
    2dc4:	push   r12
    2dc6:	push   rbp
    2dc7:	mov    rbp,rdi
    2dca:	push   rbx
    2dcb:	sub    rsp,0xb0
    2dd2:	mov    rax,QWORD PTR fs:0x28
    2ddb:	mov    QWORD PTR [rsp+0xa8],rax
    2de3:	xor    eax,eax
    2de5:	test   sil,sil
    2de8:	mov    QWORD PTR [rsp],0x0
    2df0:	mov    QWORD PTR [rsp+0x8],0x0
    2df9:	je     2e60 <__cxa_finalize@plt+0x8e8>
    2dfb:	lea    rdi,[rsp+0x8]
    2e00:	call   2510 <getfscreatecon@plt>
    2e05:	test   eax,eax
    2e07:	js     2ffe <__cxa_finalize@plt+0xa86>
    2e0d:	mov    rsi,QWORD PTR [rsp+0x8]
    2e12:	test   rsi,rsi
    2e15:	je     3080 <__cxa_finalize@plt+0xb08>
    2e1b:	mov    rdi,rbp
    2e1e:	call   20b0 <lsetfilecon@plt>
    2e23:	mov    rdi,QWORD PTR [rsp+0x8]
    2e28:	mov    ebx,eax
    2e2a:	call   24d0 <freecon@plt>
    2e2f:	mov    rcx,QWORD PTR [rsp+0xa8]
    2e37:	xor    rcx,QWORD PTR fs:0x28
    2e40:	mov    eax,ebx
    2e42:	jne    30a4 <__cxa_finalize@plt+0xb2c>
    2e48:	add    rsp,0xb0
    2e4f:	pop    rbx
    2e50:	pop    rbp
    2e51:	pop    r12
    2e53:	pop    r13
    2e55:	pop    r14
    2e57:	ret    
    2e58:	nop    DWORD PTR [rax+rax*1+0x0]
    2e60:	xor    eax,eax
    2e62:	mov    esi,0x20000
    2e67:	call   2470 <open@plt>
    2e6c:	cmp    eax,0xffffffff
    2e6f:	mov    ebx,eax
    2e71:	je     2ed0 <__cxa_finalize@plt+0x958>
    2e73:	lea    rdx,[rsp+0x10]
    2e78:	mov    esi,eax
    2e7a:	mov    edi,0x1
    2e7f:	call   23c0 <__fxstat@plt>
    2e84:	test   eax,eax
    2e86:	js     2fb0 <__cxa_finalize@plt+0xa38>
    2e8c:	mov    esi,DWORD PTR [rsp+0x28]
    2e90:	mov    rdx,rsp
    2e93:	mov    rdi,rbp
    2e96:	call   2270 <matchpathcon@plt>
    2e9b:	test   eax,eax
    2e9d:	jns    2f10 <__cxa_finalize@plt+0x998>
    2e9f:	call   2060 <__errno_location@plt>
    2ea4:	cmp    DWORD PTR [rax],0x2
    2ea7:	je     3010 <__cxa_finalize@plt+0xa98>
    2ead:	xor    r13d,r13d
    2eb0:	xor    r12d,r12d
    2eb3:	cmp    ebx,0xffffffff
    2eb6:	je     2ee4 <__cxa_finalize@plt+0x96c>
    2eb8:	mov    r14d,0xffffffff
    2ebe:	mov    edi,ebx
    2ec0:	mov    ebx,r14d
    2ec3:	call   2240 <close@plt>
    2ec8:	jmp    2ee4 <__cxa_finalize@plt+0x96c>
    2eca:	nop    WORD PTR [rax+rax*1+0x0]
    2ed0:	call   2060 <__errno_location@plt>
    2ed5:	cmp    DWORD PTR [rax],0x28
    2ed8:	je     2fc8 <__cxa_finalize@plt+0xa50>
    2ede:	xor    r13d,r13d
    2ee1:	xor    r12d,r12d
    2ee4:	mov    rdi,r12
    2ee7:	call   2310 <context_free@plt>
    2eec:	mov    rdi,r13
    2eef:	call   2310 <context_free@plt>
    2ef4:	mov    rdi,QWORD PTR [rsp]
    2ef8:	call   24d0 <freecon@plt>
    2efd:	mov    rdi,QWORD PTR [rsp+0x8]
    2f02:	call   24d0 <freecon@plt>
    2f07:	jmp    2e2f <__cxa_finalize@plt+0x8b7>
    2f0c:	nop    DWORD PTR [rax+0x0]
    2f10:	mov    rdi,QWORD PTR [rsp]
    2f14:	call   2100 <context_new@plt>
    2f19:	test   rax,rax
    2f1c:	mov    r12,rax
    2f1f:	je     2ead <__cxa_finalize@plt+0x935>
    2f21:	cmp    ebx,0xffffffff
    2f24:	lea    rsi,[rsp+0x8]
    2f29:	je     3028 <__cxa_finalize@plt+0xab0>
    2f2f:	mov    edi,ebx
    2f31:	call   a480 <fts_children@@Base+0x200>
    2f36:	test   eax,eax
    2f38:	js     2ff0 <__cxa_finalize@plt+0xa78>
    2f3e:	mov    rdi,QWORD PTR [rsp+0x8]
    2f43:	call   2100 <context_new@plt>
    2f48:	test   rax,rax
    2f4b:	mov    r13,rax
    2f4e:	je     2eb8 <__cxa_finalize@plt+0x940>
    2f54:	mov    rdi,r12
    2f57:	call   20a0 <context_type_get@plt>
    2f5c:	test   rax,rax
    2f5f:	je     2eb8 <__cxa_finalize@plt+0x940>
    2f65:	mov    rsi,rax
    2f68:	mov    rdi,r13
    2f6b:	mov    r14d,0xffffffff
    2f71:	call   21b0 <context_type_set@plt>
    2f76:	test   eax,eax
    2f78:	jne    2ebe <__cxa_finalize@plt+0x946>
    2f7e:	mov    rdi,r13
    2f81:	call   2530 <context_str@plt>
    2f86:	test   rax,rax
    2f89:	je     2eb3 <__cxa_finalize@plt+0x93b>
    2f8f:	cmp    ebx,0xffffffff
    2f92:	mov    rsi,rax
    2f95:	je     3095 <__cxa_finalize@plt+0xb1d>
    2f9b:	mov    edi,ebx
    2f9d:	call   2460 <fsetfilecon@plt>
    2fa2:	mov    r14d,eax
    2fa5:	jmp    2ebe <__cxa_finalize@plt+0x946>
    2faa:	nop    WORD PTR [rax+rax*1+0x0]
    2fb0:	xor    r13d,r13d
    2fb3:	xor    r12d,r12d
    2fb6:	mov    r14d,0xffffffff
    2fbc:	jmp    2ebe <__cxa_finalize@plt+0x946>
    2fc1:	nop    DWORD PTR [rax+0x0]
    2fc8:	lea    rdx,[rsp+0x10]
    2fcd:	mov    rsi,rbp
    2fd0:	mov    edi,0x1
    2fd5:	call   2160 <__lxstat@plt>
    2fda:	test   eax,eax
    2fdc:	jns    2e8c <__cxa_finalize@plt+0x914>
    2fe2:	jmp    2ede <__cxa_finalize@plt+0x966>
    2fe7:	nop    WORD PTR [rax+rax*1+0x0]
    2ff0:	xor    r13d,r13d
    2ff3:	mov    r14d,0xffffffff
    2ff9:	jmp    2ebe <__cxa_finalize@plt+0x946>
    2ffe:	mov    ebx,0xffffffff
    3003:	jmp    2e2f <__cxa_finalize@plt+0x8b7>
    3008:	nop    DWORD PTR [rax+rax*1+0x0]
    3010:	mov    DWORD PTR [rax],0x3d
    3016:	xor    r13d,r13d
    3019:	xor    r12d,r12d
    301c:	jmp    2eb3 <__cxa_finalize@plt+0x93b>
    3021:	nop    DWORD PTR [rax+0x0]
    3028:	mov    rdi,rbp
    302b:	xor    r13d,r13d
    302e:	call   a460 <fts_children@@Base+0x1e0>
    3033:	test   eax,eax
    3035:	js     2ee4 <__cxa_finalize@plt+0x96c>
    303b:	mov    rdi,QWORD PTR [rsp+0x8]
    3040:	call   2100 <context_new@plt>
    3045:	test   rax,rax
    3048:	mov    r13,rax
    304b:	je     2ee4 <__cxa_finalize@plt+0x96c>
    3051:	mov    rdi,r12
    3054:	call   20a0 <context_type_get@plt>
    3059:	test   rax,rax
    305c:	je     2ee4 <__cxa_finalize@plt+0x96c>
    3062:	mov    rsi,rax
    3065:	mov    rdi,r13
    3068:	call   21b0 <context_type_set@plt>
    306d:	test   eax,eax
    306f:	jne    2ee4 <__cxa_finalize@plt+0x96c>
    3075:	jmp    2f7e <__cxa_finalize@plt+0xa06>
    307a:	nop    WORD PTR [rax+rax*1+0x0]
    3080:	call   2060 <__errno_location@plt>
    3085:	mov    ebx,0xffffffff
    308a:	mov    DWORD PTR [rax],0x3d
    3090:	jmp    2e2f <__cxa_finalize@plt+0x8b7>
    3095:	mov    rdi,rbp
    3098:	call   20b0 <lsetfilecon@plt>
    309d:	mov    ebx,eax
    309f:	jmp    2ee4 <__cxa_finalize@plt+0x96c>
    30a4:	call   2180 <__stack_chk_fail@plt>
    30a9:	nop    DWORD PTR [rax+0x0]
    30b0:	push   r13
    30b2:	push   r12
    30b4:	mov    r12d,esi
    30b7:	push   rbp
    30b8:	push   rbx
    30b9:	mov    rbp,rdi
    30bc:	sub    rsp,0x38
    30c0:	mov    rax,QWORD PTR fs:0x28
    30c9:	mov    QWORD PTR [rsp+0x28],rax
    30ce:	xor    eax,eax
    30d0:	cmp    BYTE PTR [rdi],0x2f
    30d3:	mov    QWORD PTR [rsp+0x8],0x0
    30dc:	mov    QWORD PTR [rsp+0x10],0x0
    30e5:	je     3280 <__cxa_finalize@plt+0xd08>
    30eb:	mov    esi,0x2
    30f0:	call   34f0 <__cxa_finalize@plt+0xf78>
    30f5:	test   rax,rax
    30f8:	mov    rbx,rax
    30fb:	je     32e0 <__cxa_finalize@plt+0xd68>
    3101:	mov    r13,rax
    3104:	lea    rdx,[rsp+0x8]
    3109:	mov    esi,r12d
    310c:	mov    rdi,rbx
    310f:	call   2270 <matchpathcon@plt>
    3114:	test   eax,eax
    3116:	jns    3180 <__cxa_finalize@plt+0xc08>
    3118:	call   2060 <__errno_location@plt>
    311d:	cmp    DWORD PTR [rax],0x2
    3120:	je     3290 <__cxa_finalize@plt+0xd18>
    3126:	xor    ebx,ebx
    3128:	xor    ebp,ebp
    312a:	mov    r12d,0xffffffff
    3130:	mov    rdi,rbp
    3133:	call   2310 <context_free@plt>
    3138:	mov    rdi,rbx
    313b:	call   2310 <context_free@plt>
    3140:	mov    rdi,QWORD PTR [rsp+0x8]
    3145:	call   24d0 <freecon@plt>
    314a:	mov    rdi,QWORD PTR [rsp+0x10]
    314f:	call   24d0 <freecon@plt>
    3154:	mov    rdi,r13
    3157:	call   2570 <free@plt>
    315c:	mov    rcx,QWORD PTR [rsp+0x28]
    3161:	xor    rcx,QWORD PTR fs:0x28
    316a:	mov    eax,r12d
    316d:	jne    32db <__cxa_finalize@plt+0xd63>
    3173:	add    rsp,0x38
    3177:	pop    rbx
    3178:	pop    rbp
    3179:	pop    r12
    317b:	pop    r13
    317d:	ret    
    317e:	xchg   ax,ax
    3180:	mov    rdi,rbx
    3183:	mov    QWORD PTR [rsp+0x18],0x0
    318c:	mov    QWORD PTR [rsp+0x20],0x0
    3195:	call   3c00 <__cxa_finalize@plt+0x1688>
    319a:	test   rax,rax
    319d:	mov    rbx,rax
    31a0:	je     32a0 <__cxa_finalize@plt+0xd28>
    31a6:	lea    rdi,[rsp+0x18]
    31ab:	call   2280 <getcon@plt>
    31b0:	test   eax,eax
    31b2:	js     32a0 <__cxa_finalize@plt+0xd28>
    31b8:	lea    rsi,[rsp+0x20]
    31bd:	mov    rdi,rbx
    31c0:	call   a440 <fts_children@@Base+0x1c0>
    31c5:	test   eax,eax
    31c7:	js     32a0 <__cxa_finalize@plt+0xd28>
    31cd:	mov    edi,r12d
    31d0:	call   2550 <mode_to_security_class@plt>
    31d5:	test   ax,ax
    31d8:	je     32a0 <__cxa_finalize@plt+0xd28>
    31de:	mov    rsi,QWORD PTR [rsp+0x20]
    31e3:	mov    rdi,QWORD PTR [rsp+0x18]
    31e8:	lea    rcx,[rsp+0x10]
    31ed:	movzx  edx,ax
    31f0:	call   24b0 <security_compute_create@plt>
    31f5:	mov    rdi,rbx
    31f8:	mov    ebp,eax
    31fa:	call   2570 <free@plt>
    31ff:	mov    rdi,QWORD PTR [rsp+0x18]
    3204:	call   24d0 <freecon@plt>
    3209:	mov    rdi,QWORD PTR [rsp+0x20]
    320e:	call   24d0 <freecon@plt>
    3213:	test   ebp,ebp
    3215:	js     3126 <__cxa_finalize@plt+0xbae>
    321b:	mov    rdi,QWORD PTR [rsp+0x8]
    3220:	call   2100 <context_new@plt>
    3225:	test   rax,rax
    3228:	mov    rbp,rax
    322b:	je     3126 <__cxa_finalize@plt+0xbae>
    3231:	mov    rdi,QWORD PTR [rsp+0x10]
    3236:	call   2100 <context_new@plt>
    323b:	test   rax,rax
    323e:	mov    rbx,rax
    3241:	je     32d0 <__cxa_finalize@plt+0xd58>
    3247:	mov    rdi,rbp
    324a:	call   20a0 <context_type_get@plt>
    324f:	test   rax,rax
    3252:	je     32d0 <__cxa_finalize@plt+0xd58>
    3254:	mov    rsi,rax
    3257:	mov    rdi,rbx
    325a:	call   21b0 <context_type_set@plt>
    325f:	test   eax,eax
    3261:	jne    32d0 <__cxa_finalize@plt+0xd58>
    3263:	mov    rdi,rbx
    3266:	call   2530 <context_str@plt>
    326b:	test   rax,rax
    326e:	je     32d0 <__cxa_finalize@plt+0xd58>
    3270:	mov    rdi,rax
    3273:	call   2370 <setfscreatecon@plt>
    3278:	mov    r12d,eax
    327b:	jmp    3130 <__cxa_finalize@plt+0xbb8>
    3280:	mov    rbx,rdi
    3283:	xor    r13d,r13d
    3286:	jmp    3104 <__cxa_finalize@plt+0xb8c>
    328b:	nop    DWORD PTR [rax+rax*1+0x0]
    3290:	mov    DWORD PTR [rax],0x3d
    3296:	jmp    3126 <__cxa_finalize@plt+0xbae>
    329b:	nop    DWORD PTR [rax+rax*1+0x0]
    32a0:	mov    rdi,rbx
    32a3:	xor    ebp,ebp
    32a5:	xor    ebx,ebx
    32a7:	call   2570 <free@plt>
    32ac:	mov    rdi,QWORD PTR [rsp+0x18]
    32b1:	mov    r12d,0xffffffff
    32b7:	call   24d0 <freecon@plt>
    32bc:	mov    rdi,QWORD PTR [rsp+0x20]
    32c1:	call   24d0 <freecon@plt>
    32c6:	jmp    3130 <__cxa_finalize@plt+0xbb8>
    32cb:	nop    DWORD PTR [rax+rax*1+0x0]
    32d0:	mov    r12d,0xffffffff
    32d6:	jmp    3130 <__cxa_finalize@plt+0xbb8>
    32db:	call   2180 <__stack_chk_fail@plt>
    32e0:	mov    rsi,rbp
    32e3:	mov    edi,0x4
    32e8:	call   7220 <__cxa_finalize@plt+0x4ca8>
    32ed:	lea    rsi,[rip+0x8340]        # b634 <_IO_stdin_used@@Base+0x4f4>
    32f4:	mov    edx,0x5
    32f9:	xor    edi,edi
    32fb:	mov    rbp,rax
    32fe:	call   2130 <dcgettext@plt>
    3303:	mov    rbx,rax
    3306:	call   2060 <__errno_location@plt>
    330b:	mov    esi,DWORD PTR [rax]
    330d:	mov    rcx,rbp
    3310:	mov    rdx,rbx
    3313:	mov    edi,0x1
    3318:	xor    eax,eax
    331a:	call   2450 <error@plt>
    331f:	nop
    3320:	push   r13
    3322:	push   r12
    3324:	movzx  r12d,dl
    3328:	push   rbp
    3329:	push   rbx
    332a:	mov    rbp,rdi
    332d:	mov    ebx,esi
    332f:	sub    rsp,0x38
    3333:	mov    rax,QWORD PTR fs:0x28
    333c:	mov    QWORD PTR [rsp+0x28],rax
    3341:	xor    eax,eax
    3343:	cmp    BYTE PTR [rdi],0x2f
    3346:	je     3350 <__cxa_finalize@plt+0xdd8>
    3348:	test   dl,dl
    334a:	je     33f0 <__cxa_finalize@plt+0xe78>
    3350:	xor    r13d,r13d
    3353:	test   bl,bl
    3355:	mov    QWORD PTR [rsp+0x10],rbp
    335a:	mov    QWORD PTR [rsp+0x18],0x0
    3363:	je     3420 <__cxa_finalize@plt+0xea8>
    3369:	lea    rdi,[rsp+0x10]
    336e:	xor    edx,edx
    3370:	mov    esi,0x10
    3375:	call   7f20 <__cxa_finalize@plt+0x59a8>
    337a:	mov    rbp,rax
    337d:	jmp    3394 <__cxa_finalize@plt+0xe1c>
    337f:	nop
    3380:	mov    rdi,QWORD PTR [rbp+0x20]
    3384:	mov    esi,r12d
    3387:	call   2dc0 <__cxa_finalize@plt+0x848>
    338c:	cmp    eax,0xffffffff
    338f:	setne  al
    3392:	and    ebx,eax
    3394:	mov    rdi,rbp
    3397:	call   9ad0 <fts_read@@Base>
    339c:	test   rax,rax
    339f:	jne    3380 <__cxa_finalize@plt+0xe08>
    33a1:	call   2060 <__errno_location@plt>
    33a6:	mov    r12,rax
    33a9:	mov    eax,DWORD PTR [rax]
    33ab:	test   eax,eax
    33ad:	jne    3470 <__cxa_finalize@plt+0xef8>
    33b3:	mov    rdi,rbp
    33b6:	call   9940 <fts_close@@Base>
    33bb:	test   eax,eax
    33bd:	jne    3440 <__cxa_finalize@plt+0xec8>
    33c3:	mov    rdi,r13
    33c6:	call   2570 <free@plt>
    33cb:	mov    rcx,QWORD PTR [rsp+0x28]
    33d0:	xor    rcx,QWORD PTR fs:0x28
    33d9:	mov    eax,ebx
    33db:	jne    34a7 <__cxa_finalize@plt+0xf2f>
    33e1:	add    rsp,0x38
    33e5:	pop    rbx
    33e6:	pop    rbp
    33e7:	pop    r12
    33e9:	pop    r13
    33eb:	ret    
    33ec:	nop    DWORD PTR [rax+0x0]
    33f0:	mov    esi,0x2
    33f5:	mov    DWORD PTR [rsp+0xc],edx
    33f9:	call   34f0 <__cxa_finalize@plt+0xf78>
    33fe:	test   rax,rax
    3401:	mov    r13,rax
    3404:	mov    edx,DWORD PTR [rsp+0xc]
    3408:	je     34ac <__cxa_finalize@plt+0xf34>
    340e:	mov    rbp,rax
    3411:	jmp    3353 <__cxa_finalize@plt+0xddb>
    3416:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3420:	mov    rdi,rbp
    3423:	movzx  esi,dl
    3426:	call   2dc0 <__cxa_finalize@plt+0x848>
    342b:	mov    rdi,r13
    342e:	cmp    eax,0xffffffff
    3431:	setne  bl
    3434:	call   2570 <free@plt>
    3439:	jmp    33cb <__cxa_finalize@plt+0xe53>
    343b:	nop    DWORD PTR [rax+rax*1+0x0]
    3440:	lea    rsi,[rip+0x8215]        # b65c <_IO_stdin_used@@Base+0x51c>
    3447:	mov    edx,0x5
    344c:	xor    edi,edi
    344e:	xor    ebx,ebx
    3450:	call   2130 <dcgettext@plt>
    3455:	mov    esi,DWORD PTR [r12]
    3459:	mov    rdx,rax
    345c:	xor    edi,edi
    345e:	xor    eax,eax
    3460:	call   2450 <error@plt>
    3465:	jmp    33c3 <__cxa_finalize@plt+0xe4b>
    346a:	nop    WORD PTR [rax+rax*1+0x0]
    3470:	lea    rsi,[rip+0x81d5]        # b64c <_IO_stdin_used@@Base+0x50c>
    3477:	xor    edi,edi
    3479:	mov    edx,0x5
    347e:	xor    ebx,ebx
    3480:	call   2130 <dcgettext@plt>
    3485:	mov    esi,DWORD PTR [r12]
    3489:	mov    rdx,rax
    348c:	xor    edi,edi
    348e:	xor    eax,eax
    3490:	call   2450 <error@plt>
    3495:	mov    rdi,rbp
    3498:	call   9940 <fts_close@@Base>
    349d:	test   eax,eax
    349f:	je     33c3 <__cxa_finalize@plt+0xe4b>
    34a5:	jmp    3440 <__cxa_finalize@plt+0xec8>
    34a7:	call   2180 <__stack_chk_fail@plt>
    34ac:	mov    rsi,rbp
    34af:	mov    edi,0x4
    34b4:	call   7220 <__cxa_finalize@plt+0x4ca8>
    34b9:	lea    rsi,[rip+0x8174]        # b634 <_IO_stdin_used@@Base+0x4f4>
    34c0:	mov    edx,0x5
    34c5:	xor    edi,edi
    34c7:	mov    rbp,rax
    34ca:	call   2130 <dcgettext@plt>
    34cf:	mov    rbx,rax
    34d2:	call   2060 <__errno_location@plt>
    34d7:	mov    esi,DWORD PTR [rax]
    34d9:	mov    rcx,rbp
    34dc:	mov    rdx,rbx
    34df:	mov    edi,0x1
    34e4:	xor    eax,eax
    34e6:	call   2450 <error@plt>
    34eb:	nop    DWORD PTR [rax+rax*1+0x0]
    34f0:	push   r15
    34f2:	push   r14
    34f4:	push   r13
    34f6:	push   r12
    34f8:	push   rbp
    34f9:	push   rbx
    34fa:	sub    rsp,0xe8
    3501:	mov    rax,QWORD PTR fs:0x28
    350a:	mov    QWORD PTR [rsp+0xd8],rax
    3512:	xor    eax,eax
    3514:	mov    eax,esi
    3516:	and    eax,0x4
    3519:	setne  BYTE PTR [rsp+0x1b]
    351e:	and    esi,0x3
    3521:	mov    DWORD PTR [rsp+0x1c],eax
    3525:	lea    eax,[rsi-0x1]
    3528:	mov    DWORD PTR [rsp+0x4],esi
    352c:	test   esi,eax
    352e:	jne    3a80 <__cxa_finalize@plt+0x1508>
    3534:	test   rdi,rdi
    3537:	mov    r14,rdi
    353a:	je     3a80 <__cxa_finalize@plt+0x1508>
    3540:	movzx  eax,BYTE PTR [rdi]
    3543:	test   al,al
    3545:	je     3ac0 <__cxa_finalize@plt+0x1548>
    354b:	cmp    al,0x2f
    354d:	je     3a10 <__cxa_finalize@plt+0x1498>
    3553:	call   7fa0 <__cxa_finalize@plt+0x5a28>
    3558:	test   rax,rax
    355b:	mov    rbp,rax
    355e:	je     3710 <__cxa_finalize@plt+0x1198>
    3564:	mov    rdi,rax
    3567:	call   2150 <strlen@plt>
    356c:	cmp    rax,0xfff
    3572:	mov    r15,rax
    3575:	jbe    3a30 <__cxa_finalize@plt+0x14b8>
    357b:	add    r15,rbp
    357e:	mov    rbx,r15
    3581:	lea    rax,[rsp+0x40]
    3586:	mov    QWORD PTR [rsp+0x20],r14
    358b:	mov    QWORD PTR [rsp+0x10],0x0
    3594:	mov    QWORD PTR [rsp+0x30],0x0
    359d:	mov    QWORD PTR [rsp+0x28],0x0
    35a6:	mov    QWORD PTR [rsp+0x8],rax
    35ab:	movzx  eax,BYTE PTR [r14]
    35af:	test   al,al
    35b1:	je     36bf <__cxa_finalize@plt+0x1147>
    35b7:	nop    WORD PTR [rax+rax*1+0x0]
    35c0:	cmp    al,0x2f
    35c2:	jne    35dc <__cxa_finalize@plt+0x1064>
    35c4:	nop    DWORD PTR [rax+0x0]
    35c8:	add    r14,0x1
    35cc:	movzx  eax,BYTE PTR [r14]
    35d0:	cmp    al,0x2f
    35d2:	je     35c8 <__cxa_finalize@plt+0x1050>
    35d4:	test   al,al
    35d6:	je     38a0 <__cxa_finalize@plt+0x1328>
    35dc:	mov    r13,r14
    35df:	jmp    35ed <__cxa_finalize@plt+0x1075>
    35e1:	nop    DWORD PTR [rax+0x0]
    35e8:	cmp    dl,0x2f
    35eb:	je     35fa <__cxa_finalize@plt+0x1082>
    35ed:	add    r13,0x1
    35f1:	movzx  edx,BYTE PTR [r13+0x0]
    35f6:	test   dl,dl
    35f8:	jne    35e8 <__cxa_finalize@plt+0x1070>
    35fa:	cmp    r13,r14
    35fd:	je     36bf <__cxa_finalize@plt+0x1147>
    3603:	mov    r12,r13
    3606:	sub    r12,r14
    3609:	cmp    r12,0x1
    360d:	je     37e0 <__cxa_finalize@plt+0x1268>
    3613:	cmp    r12,0x2
    3617:	jne    3621 <__cxa_finalize@plt+0x10a9>
    3619:	cmp    al,0x2e
    361b:	je     38b0 <__cxa_finalize@plt+0x1338>
    3621:	cmp    BYTE PTR [r15-0x1],0x2f
    3626:	je     3630 <__cxa_finalize@plt+0x10b8>
    3628:	mov    BYTE PTR [r15],0x2f
    362c:	add    r15,0x1
    3630:	lea    rax,[r15+r12*1]
    3634:	cmp    rbx,rax
    3637:	ja     366a <__cxa_finalize@plt+0x10f2>
    3639:	sub    rbx,rbp
    363c:	sub    r15,rbp
    363f:	mov    rdi,rbp
    3642:	lea    rax,[r12+rbx*1+0x1]
    3647:	add    rbx,0x1000
    364e:	cmp    r12,0x1000
    3655:	cmovge rbx,rax
    3659:	mov    rsi,rbx
    365c:	call   7cf0 <__cxa_finalize@plt+0x5778>
    3661:	mov    rbp,rax
    3664:	add    rbx,rax
    3667:	add    r15,rax
    366a:	mov    rdi,r15
    366d:	mov    rdx,r12
    3670:	mov    rsi,r14
    3673:	call   2320 <memcpy@plt>
    3678:	cmp    DWORD PTR [rsp+0x4],0x2
    367d:	lea    r15,[r15+r12*1]
    3681:	mov    BYTE PTR [r15],0x0
    3685:	jne    3740 <__cxa_finalize@plt+0x11c8>
    368b:	cmp    BYTE PTR [rsp+0x1b],0x0
    3690:	je     3740 <__cxa_finalize@plt+0x11c8>
    3696:	mov    DWORD PTR [rsp+0x58],0x0
    369e:	cmp    BYTE PTR [r13+0x0],0x0
    36a3:	je     36b0 <__cxa_finalize@plt+0x1138>
    36a5:	cmp    DWORD PTR [rsp+0x4],0x2
    36aa:	jne    3b07 <__cxa_finalize@plt+0x158f>
    36b0:	mov    r14,r13
    36b3:	movzx  eax,BYTE PTR [r14]
    36b7:	test   al,al
    36b9:	jne    35c0 <__cxa_finalize@plt+0x1048>
    36bf:	lea    rax,[rbp+0x1]
    36c3:	cmp    r15,rax
    36c6:	jbe    36d3 <__cxa_finalize@plt+0x115b>
    36c8:	cmp    BYTE PTR [r15-0x1],0x2f
    36cd:	jne    36d3 <__cxa_finalize@plt+0x115b>
    36cf:	sub    r15,0x1
    36d3:	lea    rax,[r15+0x1]
    36d7:	mov    BYTE PTR [r15],0x0
    36db:	cmp    rbx,rax
    36de:	je     36f2 <__cxa_finalize@plt+0x117a>
    36e0:	sub    r15,rbp
    36e3:	mov    rdi,rbp
    36e6:	lea    rsi,[r15+0x1]
    36ea:	call   7cf0 <__cxa_finalize@plt+0x5778>
    36ef:	mov    rbp,rax
    36f2:	mov    rdi,QWORD PTR [rsp+0x28]
    36f7:	call   2570 <free@plt>
    36fc:	mov    rax,QWORD PTR [rsp+0x10]
    3701:	test   rax,rax
    3704:	je     3710 <__cxa_finalize@plt+0x1198>
    3706:	mov    rdi,rax
    3709:	call   4940 <__cxa_finalize@plt+0x23c8>
    370e:	xchg   ax,ax
    3710:	mov    rcx,QWORD PTR [rsp+0xd8]
    3718:	xor    rcx,QWORD PTR fs:0x28
    3721:	mov    rax,rbp
    3724:	jne    3b21 <__cxa_finalize@plt+0x15a9>
    372a:	add    rsp,0xe8
    3731:	pop    rbx
    3732:	pop    rbp
    3733:	pop    r12
    3735:	pop    r13
    3737:	pop    r14
    3739:	pop    r15
    373b:	ret    
    373c:	nop    DWORD PTR [rax+0x0]
    3740:	mov    eax,DWORD PTR [rsp+0x1c]
    3744:	mov    rdx,QWORD PTR [rsp+0x8]
    3749:	mov    rsi,rbp
    374c:	mov    edi,0x1
    3751:	test   eax,eax
    3753:	je     3810 <__cxa_finalize@plt+0x1298>
    3759:	call   2350 <__xstat@plt>
    375e:	test   eax,eax
    3760:	setne  al
    3763:	test   al,al
    3765:	je     37f0 <__cxa_finalize@plt+0x1278>
    376b:	call   2060 <__errno_location@plt>
    3770:	mov    r14,rax
    3773:	mov    edx,DWORD PTR [rax]
    3775:	mov    eax,DWORD PTR [rsp+0x4]
    3779:	test   eax,eax
    377b:	je     37ae <__cxa_finalize@plt+0x1236>
    377d:	cmp    eax,0x1
    3780:	jne    3696 <__cxa_finalize@plt+0x111e>
    3786:	lea    rsi,[rip+0x8079]        # b806 <_IO_stdin_used@@Base+0x6c6>
    378d:	mov    rdi,r13
    3790:	mov    DWORD PTR [rsp+0x38],edx
    3794:	call   2250 <strspn@plt>
    3799:	cmp    BYTE PTR [r13+rax*1+0x0],0x0
    379f:	mov    edx,DWORD PTR [rsp+0x38]
    37a3:	jne    37ae <__cxa_finalize@plt+0x1236>
    37a5:	cmp    edx,0x2
    37a8:	je     36b0 <__cxa_finalize@plt+0x1138>
    37ae:	mov    r12,r14
    37b1:	mov    rdi,QWORD PTR [rsp+0x28]
    37b6:	mov    DWORD PTR [rsp+0x4],edx
    37ba:	call   2570 <free@plt>
    37bf:	mov    rdi,rbp
    37c2:	call   2570 <free@plt>
    37c7:	cmp    QWORD PTR [rsp+0x10],0x0
    37cd:	mov    edx,DWORD PTR [rsp+0x4]
    37d1:	je     388c <__cxa_finalize@plt+0x1314>
    37d7:	jmp    387a <__cxa_finalize@plt+0x1302>
    37dc:	nop    DWORD PTR [rax+0x0]
    37e0:	cmp    al,0x2e
    37e2:	jne    3621 <__cxa_finalize@plt+0x10a9>
    37e8:	jmp    36b0 <__cxa_finalize@plt+0x1138>
    37ed:	nop    DWORD PTR [rax]
    37f0:	mov    eax,DWORD PTR [rsp+0x58]
    37f4:	and    eax,0xf000
    37f9:	cmp    eax,0xa000
    37fe:	je     3820 <__cxa_finalize@plt+0x12a8>
    3800:	cmp    eax,0x4000
    3805:	je     36b0 <__cxa_finalize@plt+0x1138>
    380b:	jmp    369e <__cxa_finalize@plt+0x1126>
    3810:	call   2160 <__lxstat@plt>
    3815:	test   eax,eax
    3817:	setne  al
    381a:	jmp    3763 <__cxa_finalize@plt+0x11eb>
    381f:	nop
    3820:	cmp    QWORD PTR [rsp+0x10],0x0
    3826:	je     39d6 <__cxa_finalize@plt+0x145e>
    382c:	mov    rdx,QWORD PTR [rsp+0x8]
    3831:	mov    rsi,QWORD PTR [rsp+0x20]
    3836:	mov    rdi,QWORD PTR [rsp+0x10]
    383b:	call   3e20 <__cxa_finalize@plt+0x18a8>
    3840:	test   al,al
    3842:	je     3900 <__cxa_finalize@plt+0x1388>
    3848:	cmp    DWORD PTR [rsp+0x4],0x2
    384d:	je     36b0 <__cxa_finalize@plt+0x1138>
    3853:	call   2060 <__errno_location@plt>
    3858:	mov    edx,0x28
    385d:	mov    r12,rax
    3860:	mov    rdi,QWORD PTR [rsp+0x28]
    3865:	mov    DWORD PTR [rsp+0x4],edx
    3869:	call   2570 <free@plt>
    386e:	mov    rdi,rbp
    3871:	call   2570 <free@plt>
    3876:	mov    edx,DWORD PTR [rsp+0x4]
    387a:	mov    rdi,QWORD PTR [rsp+0x10]
    387f:	mov    DWORD PTR [rsp+0x4],edx
    3883:	call   4940 <__cxa_finalize@plt+0x23c8>
    3888:	mov    edx,DWORD PTR [rsp+0x4]
    388c:	mov    DWORD PTR [r12],edx
    3890:	xor    ebp,ebp
    3892:	jmp    3710 <__cxa_finalize@plt+0x1198>
    3897:	nop    WORD PTR [rax+rax*1+0x0]
    38a0:	mov    r13,r14
    38a3:	jmp    35fa <__cxa_finalize@plt+0x1082>
    38a8:	nop    DWORD PTR [rax+rax*1+0x0]
    38b0:	cmp    BYTE PTR [r14+0x1],0x2e
    38b5:	jne    3621 <__cxa_finalize@plt+0x10a9>
    38bb:	lea    rax,[rbp+0x1]
    38bf:	mov    r14,r13
    38c2:	cmp    r15,rax
    38c5:	jbe    35ab <__cxa_finalize@plt+0x1033>
    38cb:	lea    rax,[r15-0x1]
    38cf:	cmp    rbp,rax
    38d2:	jae    3b19 <__cxa_finalize@plt+0x15a1>
    38d8:	cmp    BYTE PTR [r15-0x2],0x2f
    38dd:	mov    r15,rax
    38e0:	je     35ab <__cxa_finalize@plt+0x1033>
    38e6:	sub    r15,0x1
    38ea:	cmp    rbp,r15
    38ed:	je     36b0 <__cxa_finalize@plt+0x1138>
    38f3:	cmp    BYTE PTR [r15-0x1],0x2f
    38f8:	je     36b0 <__cxa_finalize@plt+0x1138>
    38fe:	jmp    38e6 <__cxa_finalize@plt+0x136e>
    3900:	mov    rdx,QWORD PTR [rsp+0x8]
    3905:	mov    rsi,QWORD PTR [rsp+0x20]
    390a:	mov    rdi,QWORD PTR [rsp+0x10]
    390f:	call   3d90 <__cxa_finalize@plt+0x1818>
    3914:	mov    rsi,QWORD PTR [rsp+0x70]
    3919:	mov    rdi,rbp
    391c:	call   a530 <fts_children@@Base+0x2b0>
    3921:	test   rax,rax
    3924:	mov    r14,rax
    3927:	je     3a92 <__cxa_finalize@plt+0x151a>
    392d:	mov    rdi,rax
    3930:	call   2150 <strlen@plt>
    3935:	mov    rdi,r13
    3938:	mov    r12,rax
    393b:	mov    QWORD PTR [rsp+0x20],rax
    3940:	call   2150 <strlen@plt>
    3945:	cmp    QWORD PTR [rsp+0x30],0x0
    394b:	mov    rdx,rax
    394e:	lea    rcx,[r12+rdx*1+0x1]
    3953:	je     3a4f <__cxa_finalize@plt+0x14d7>
    3959:	cmp    QWORD PTR [rsp+0x30],rcx
    395e:	jae    3981 <__cxa_finalize@plt+0x1409>
    3960:	mov    rdi,QWORD PTR [rsp+0x28]
    3965:	mov    rsi,rcx
    3968:	mov    QWORD PTR [rsp+0x38],rdx
    396d:	mov    QWORD PTR [rsp+0x30],rcx
    3972:	call   7cf0 <__cxa_finalize@plt+0x5778>
    3977:	mov    rdx,QWORD PTR [rsp+0x38]
    397c:	mov    QWORD PTR [rsp+0x28],rax
    3981:	mov    r12,QWORD PTR [rsp+0x28]
    3986:	mov    rdi,QWORD PTR [rsp+0x20]
    398b:	add    rdx,0x1
    398f:	mov    rsi,r13
    3992:	add    rdi,r12
    3995:	mov    r13,r12
    3998:	call   2440 <memmove@plt>
    399d:	mov    rdx,QWORD PTR [rsp+0x20]
    39a2:	mov    rsi,r14
    39a5:	mov    rdi,r12
    39a8:	call   2320 <memcpy@plt>
    39ad:	cmp    BYTE PTR [r14],0x2f
    39b1:	mov    QWORD PTR [rsp+0x20],r12
    39b6:	lea    rax,[rbp+0x1]
    39ba:	je     3ab4 <__cxa_finalize@plt+0x153c>
    39c0:	cmp    r15,rax
    39c3:	ja     3ad2 <__cxa_finalize@plt+0x155a>
    39c9:	mov    rdi,r14
    39cc:	call   2570 <free@plt>
    39d1:	jmp    36b0 <__cxa_finalize@plt+0x1138>
    39d6:	lea    r8,[rip+0x1833]        # 5210 <__cxa_finalize@plt+0x2c98>
    39dd:	lea    rcx,[rip+0x17ec]        # 51d0 <__cxa_finalize@plt+0x2c58>
    39e4:	xor    esi,esi
    39e6:	lea    rdx,[rip+0x1773]        # 5160 <__cxa_finalize@plt+0x2be8>
    39ed:	mov    edi,0x7
    39f2:	call   46f0 <__cxa_finalize@plt+0x2178>
    39f7:	test   rax,rax
    39fa:	mov    QWORD PTR [rsp+0x10],rax
    39ff:	jne    382c <__cxa_finalize@plt+0x12b4>
    3a05:	call   7ee0 <__cxa_finalize@plt+0x5968>
    3a0a:	nop    WORD PTR [rax+rax*1+0x0]
    3a10:	mov    edi,0x1000
    3a15:	call   7c90 <__cxa_finalize@plt+0x5718>
    3a1a:	mov    rbp,rax
    3a1d:	lea    rbx,[rax+0x1000]
    3a24:	lea    r15,[rax+0x1]
    3a28:	mov    BYTE PTR [rax],0x2f
    3a2b:	jmp    3581 <__cxa_finalize@plt+0x1009>
    3a30:	mov    rdi,rbp
    3a33:	mov    esi,0x1000
    3a38:	call   7cf0 <__cxa_finalize@plt+0x5778>
    3a3d:	mov    rbp,rax
    3a40:	add    r15,rax
    3a43:	lea    rbx,[rax+0x1000]
    3a4a:	jmp    3581 <__cxa_finalize@plt+0x1009>
    3a4f:	cmp    rcx,0x1000
    3a56:	mov    eax,0x1000
    3a5b:	mov    QWORD PTR [rsp+0x38],rdx
    3a60:	cmovae rax,rcx
    3a64:	mov    rdi,rax
    3a67:	mov    QWORD PTR [rsp+0x30],rax
    3a6c:	call   7c90 <__cxa_finalize@plt+0x5718>
    3a71:	mov    rdx,QWORD PTR [rsp+0x38]
    3a76:	mov    QWORD PTR [rsp+0x28],rax
    3a7b:	jmp    3981 <__cxa_finalize@plt+0x1409>
    3a80:	call   2060 <__errno_location@plt>
    3a85:	xor    ebp,ebp
    3a87:	mov    DWORD PTR [rax],0x16
    3a8d:	jmp    3710 <__cxa_finalize@plt+0x1198>
    3a92:	call   2060 <__errno_location@plt>
    3a97:	cmp    DWORD PTR [rsp+0x4],0x2
    3a9c:	mov    r14,rax
    3a9f:	mov    edx,DWORD PTR [rax]
    3aa1:	jne    3aac <__cxa_finalize@plt+0x1534>
    3aa3:	cmp    edx,0xc
    3aa6:	jne    36b0 <__cxa_finalize@plt+0x1138>
    3aac:	mov    r12,r14
    3aaf:	jmp    3860 <__cxa_finalize@plt+0x12e8>
    3ab4:	mov    BYTE PTR [rbp+0x0],0x2f
    3ab8:	mov    r15,rax
    3abb:	jmp    39c9 <__cxa_finalize@plt+0x1451>
    3ac0:	call   2060 <__errno_location@plt>
    3ac5:	xor    ebp,ebp
    3ac7:	mov    DWORD PTR [rax],0x2
    3acd:	jmp    3710 <__cxa_finalize@plt+0x1198>
    3ad2:	lea    rax,[r15-0x1]
    3ad6:	cmp    rbp,rax
    3ad9:	jae    3ae2 <__cxa_finalize@plt+0x156a>
    3adb:	cmp    BYTE PTR [r15-0x2],0x2f
    3ae0:	jne    3aed <__cxa_finalize@plt+0x1575>
    3ae2:	mov    r15,rax
    3ae5:	jmp    39c9 <__cxa_finalize@plt+0x1451>
    3aea:	mov    rax,r15
    3aed:	lea    r15,[rax-0x1]
    3af1:	cmp    rbp,r15
    3af4:	je     39c9 <__cxa_finalize@plt+0x1451>
    3afa:	cmp    BYTE PTR [r15-0x1],0x2f
    3aff:	je     39c9 <__cxa_finalize@plt+0x1451>
    3b05:	jmp    3aea <__cxa_finalize@plt+0x1572>
    3b07:	call   2060 <__errno_location@plt>
    3b0c:	mov    edx,0x14
    3b11:	mov    r12,rax
    3b14:	jmp    37b1 <__cxa_finalize@plt+0x1239>
    3b19:	mov    r15,rax
    3b1c:	jmp    35ab <__cxa_finalize@plt+0x1033>
    3b21:	call   2180 <__stack_chk_fail@plt>
    3b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3b30:	mov    QWORD PTR [rip+0x20b5a1],rdi        # 20f0d8 <stderr@@GLIBC_2.2.5+0x18>
    3b37:	ret    
    3b38:	nop    DWORD PTR [rax+rax*1+0x0]
    3b40:	mov    BYTE PTR [rip+0x20b589],dil        # 20f0d0 <stderr@@GLIBC_2.2.5+0x10>
    3b47:	ret    
    3b48:	nop    DWORD PTR [rax+rax*1+0x0]
    3b50:	push   rbp
    3b51:	push   rbx
    3b52:	sub    rsp,0x8
    3b56:	mov    rdi,QWORD PTR [rip+0x20b52b]        # 20f088 <stdout@@GLIBC_2.2.5>
    3b5d:	call   a620 <fts_children@@Base+0x3a0>
    3b62:	test   eax,eax
    3b64:	je     3b7c <__cxa_finalize@plt+0x1604>
    3b66:	call   2060 <__errno_location@plt>
    3b6b:	cmp    BYTE PTR [rip+0x20b55e],0x0        # 20f0d0 <stderr@@GLIBC_2.2.5+0x10>
    3b72:	mov    rbx,rax
    3b75:	je     3b93 <__cxa_finalize@plt+0x161b>
    3b77:	cmp    DWORD PTR [rax],0x20
    3b7a:	jne    3b93 <__cxa_finalize@plt+0x161b>
    3b7c:	mov    rdi,QWORD PTR [rip+0x20b53d]        # 20f0c0 <stderr@@GLIBC_2.2.5>
    3b83:	call   a620 <fts_children@@Base+0x3a0>
    3b88:	test   eax,eax
    3b8a:	jne    3bd2 <__cxa_finalize@plt+0x165a>
    3b8c:	add    rsp,0x8
    3b90:	pop    rbx
    3b91:	pop    rbp
    3b92:	ret    
    3b93:	lea    rsi,[rip+0x7ad8]        # b672 <_IO_stdin_used@@Base+0x532>
    3b9a:	xor    edi,edi
    3b9c:	mov    edx,0x5
    3ba1:	call   2130 <dcgettext@plt>
    3ba6:	mov    rdi,QWORD PTR [rip+0x20b52b]        # 20f0d8 <stderr@@GLIBC_2.2.5+0x18>
    3bad:	mov    rbp,rax
    3bb0:	test   rdi,rdi
    3bb3:	je     3bdd <__cxa_finalize@plt+0x1665>
    3bb5:	call   72f0 <__cxa_finalize@plt+0x4d78>
    3bba:	mov    esi,DWORD PTR [rbx]
    3bbc:	lea    rdx,[rip+0x7abb]        # b67e <_IO_stdin_used@@Base+0x53e>
    3bc3:	mov    rcx,rax
    3bc6:	mov    r8,rbp
    3bc9:	xor    edi,edi
    3bcb:	xor    eax,eax
    3bcd:	call   2450 <error@plt>
    3bd2:	mov    edi,DWORD PTR [rip+0x20b440]        # 20f018 <exit_failure@@Base>
    3bd8:	call   2080 <_exit@plt>
    3bdd:	mov    esi,DWORD PTR [rbx]
    3bdf:	lea    rdx,[rip+0x7a9c]        # b682 <_IO_stdin_used@@Base+0x542>
    3be6:	mov    rcx,rax
    3be9:	xor    edi,edi
    3beb:	xor    eax,eax
    3bed:	call   2450 <error@plt>
    3bf2:	jmp    3bd2 <__cxa_finalize@plt+0x165a>
    3bf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3bfe:	xchg   ax,ax
    3c00:	sub    rsp,0x8
    3c04:	call   3c80 <__cxa_finalize@plt+0x1708>
    3c09:	test   rax,rax
    3c0c:	je     3c13 <__cxa_finalize@plt+0x169b>
    3c0e:	add    rsp,0x8
    3c12:	ret    
    3c13:	call   7ee0 <__cxa_finalize@plt+0x5968>
    3c18:	nop    DWORD PTR [rax+rax*1+0x0]
    3c20:	push   rbp
    3c21:	push   rbx
    3c22:	xor    ebp,ebp
    3c24:	mov    rbx,rdi
    3c27:	sub    rsp,0x8
    3c2b:	cmp    BYTE PTR [rdi],0x2f
    3c2e:	sete   bpl
    3c32:	call   3ce0 <__cxa_finalize@plt+0x1768>
    3c37:	mov    rcx,rax
    3c3a:	sub    rcx,rbx
    3c3d:	cmp    rcx,rbp
    3c40:	jbe    3c70 <__cxa_finalize@plt+0x16f8>
    3c42:	cmp    BYTE PTR [rax-0x1],0x2f
    3c46:	lea    rdx,[rcx-0x1]
    3c4a:	je     3c5e <__cxa_finalize@plt+0x16e6>
    3c4c:	jmp    3c70 <__cxa_finalize@plt+0x16f8>
    3c4e:	xchg   ax,ax
    3c50:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x2f
    3c55:	lea    rax,[rdx-0x1]
    3c59:	jne    3c63 <__cxa_finalize@plt+0x16eb>
    3c5b:	mov    rdx,rax
    3c5e:	cmp    rbp,rdx
    3c61:	jne    3c50 <__cxa_finalize@plt+0x16d8>
    3c63:	add    rsp,0x8
    3c67:	mov    rax,rdx
    3c6a:	pop    rbx
    3c6b:	pop    rbp
    3c6c:	ret    
    3c6d:	nop    DWORD PTR [rax]
    3c70:	add    rsp,0x8
    3c74:	mov    rdx,rcx
    3c77:	mov    rax,rdx
    3c7a:	pop    rbx
    3c7b:	pop    rbp
    3c7c:	ret    
    3c7d:	nop    DWORD PTR [rax]
    3c80:	push   rbp
    3c81:	push   rbx
    3c82:	mov    rbp,rdi
    3c85:	sub    rsp,0x8
    3c89:	call   3c20 <__cxa_finalize@plt+0x16a8>
    3c8e:	test   rax,rax
    3c91:	mov    rbx,rax
    3c94:	sete   al
    3c97:	movzx  eax,al
    3c9a:	lea    rdi,[rbx+rax*1+0x1]
    3c9f:	call   2380 <malloc@plt>
    3ca4:	test   rax,rax
    3ca7:	mov    rcx,rax
    3caa:	je     3cc6 <__cxa_finalize@plt+0x174e>
    3cac:	mov    rdx,rbx
    3caf:	mov    rsi,rbp
    3cb2:	mov    rdi,rax
    3cb5:	call   2320 <memcpy@plt>
    3cba:	test   rbx,rbx
    3cbd:	mov    rcx,rax
    3cc0:	je     3cd0 <__cxa_finalize@plt+0x1758>
    3cc2:	mov    BYTE PTR [rcx+rbx*1],0x0
    3cc6:	add    rsp,0x8
    3cca:	mov    rax,rcx
    3ccd:	pop    rbx
    3cce:	pop    rbp
    3ccf:	ret    
    3cd0:	mov    BYTE PTR [rax],0x2e
    3cd3:	mov    ebx,0x1
    3cd8:	jmp    3cc2 <__cxa_finalize@plt+0x174a>
    3cda:	nop    WORD PTR [rax+rax*1+0x0]
    3ce0:	movzx  edx,BYTE PTR [rdi]
    3ce3:	mov    rax,rdi
    3ce6:	cmp    dl,0x2f
    3ce9:	jne    3cfc <__cxa_finalize@plt+0x1784>
    3ceb:	nop    DWORD PTR [rax+rax*1+0x0]
    3cf0:	add    rax,0x1
    3cf4:	movzx  edx,BYTE PTR [rax]
    3cf7:	cmp    dl,0x2f
    3cfa:	je     3cf0 <__cxa_finalize@plt+0x1778>
    3cfc:	test   dl,dl
    3cfe:	je     3d3a <__cxa_finalize@plt+0x17c2>
    3d00:	mov    rcx,rax
    3d03:	xor    esi,esi
    3d05:	jmp    3d25 <__cxa_finalize@plt+0x17ad>
    3d07:	nop    WORD PTR [rax+rax*1+0x0]
    3d10:	test   sil,sil
    3d13:	je     3d1a <__cxa_finalize@plt+0x17a2>
    3d15:	mov    rax,rcx
    3d18:	xor    esi,esi
    3d1a:	add    rcx,0x1
    3d1e:	movzx  edx,BYTE PTR [rcx]
    3d21:	test   dl,dl
    3d23:	je     3d3a <__cxa_finalize@plt+0x17c2>
    3d25:	cmp    dl,0x2f
    3d28:	jne    3d10 <__cxa_finalize@plt+0x1798>
    3d2a:	add    rcx,0x1
    3d2e:	movzx  edx,BYTE PTR [rcx]
    3d31:	mov    esi,0x1
    3d36:	test   dl,dl
    3d38:	jne    3d25 <__cxa_finalize@plt+0x17ad>
    3d3a:	repz ret 
    3d3c:	nop    DWORD PTR [rax+0x0]
    3d40:	push   rbx
    3d41:	mov    rbx,rdi
    3d44:	call   2150 <strlen@plt>
    3d49:	cmp    rax,0x1
    3d4d:	jbe    3d5a <__cxa_finalize@plt+0x17e2>
    3d4f:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
    3d54:	lea    rdx,[rax-0x1]
    3d58:	je     3d68 <__cxa_finalize@plt+0x17f0>
    3d5a:	pop    rbx
    3d5b:	ret    
    3d5c:	nop    DWORD PTR [rax+0x0]
    3d60:	mov    rdx,rax
    3d63:	nop    DWORD PTR [rax+rax*1+0x0]
    3d68:	cmp    rdx,0x1
    3d6c:	je     3d80 <__cxa_finalize@plt+0x1808>
    3d6e:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x2f
    3d73:	lea    rax,[rdx-0x1]
    3d77:	je     3d60 <__cxa_finalize@plt+0x17e8>
    3d79:	mov    rax,rdx
    3d7c:	pop    rbx
    3d7d:	ret    
    3d7e:	xchg   ax,ax
    3d80:	mov    eax,0x1
    3d85:	pop    rbx
    3d86:	ret    
    3d87:	nop    WORD PTR [rax+rax*1+0x0]
    3d90:	test   rdi,rdi
    3d93:	je     3e10 <__cxa_finalize@plt+0x1898>
    3d95:	push   r13
    3d97:	push   r12
    3d99:	mov    r13,rdi
    3d9c:	push   rbp
    3d9d:	push   rbx
    3d9e:	mov    r12,rsi
    3da1:	mov    edi,0x18
    3da6:	mov    rbp,rdx
    3da9:	sub    rsp,0x8
    3dad:	call   7c90 <__cxa_finalize@plt+0x5718>
    3db2:	mov    rdi,r12
    3db5:	mov    rbx,rax
    3db8:	call   7ec0 <__cxa_finalize@plt+0x5948>
    3dbd:	mov    QWORD PTR [rbx],rax
    3dc0:	mov    rax,QWORD PTR [rbp+0x8]
    3dc4:	mov    rsi,rbx
    3dc7:	mov    rdi,r13
    3dca:	mov    QWORD PTR [rbx+0x8],rax
    3dce:	mov    rax,QWORD PTR [rbp+0x0]
    3dd2:	mov    QWORD PTR [rbx+0x10],rax
    3dd6:	call   4ef0 <__cxa_finalize@plt+0x2978>
    3ddb:	test   rax,rax
    3dde:	je     3e12 <__cxa_finalize@plt+0x189a>
    3de0:	cmp    rbx,rax
    3de3:	je     3e00 <__cxa_finalize@plt+0x1888>
    3de5:	add    rsp,0x8
    3de9:	mov    rdi,rbx
    3dec:	pop    rbx
    3ded:	pop    rbp
    3dee:	pop    r12
    3df0:	pop    r13
    3df2:	jmp    5210 <__cxa_finalize@plt+0x2c98>
    3df7:	nop    WORD PTR [rax+rax*1+0x0]
    3e00:	add    rsp,0x8
    3e04:	pop    rbx
    3e05:	pop    rbp
    3e06:	pop    r12
    3e08:	pop    r13
    3e0a:	ret    
    3e0b:	nop    DWORD PTR [rax+rax*1+0x0]
    3e10:	repz ret 
    3e12:	call   7ee0 <__cxa_finalize@plt+0x5968>
    3e17:	nop    WORD PTR [rax+rax*1+0x0]
    3e20:	sub    rsp,0x28
    3e24:	mov    rax,QWORD PTR fs:0x28
    3e2d:	mov    QWORD PTR [rsp+0x18],rax
    3e32:	xor    eax,eax
    3e34:	test   rdi,rdi
    3e37:	je     3e5c <__cxa_finalize@plt+0x18e4>
    3e39:	mov    rax,QWORD PTR [rdx+0x8]
    3e3d:	mov    QWORD PTR [rsp],rsi
    3e41:	mov    rsi,rsp
    3e44:	mov    QWORD PTR [rsp+0x8],rax
    3e49:	mov    rax,QWORD PTR [rdx]
    3e4c:	mov    QWORD PTR [rsp+0x10],rax
    3e51:	call   4480 <__cxa_finalize@plt+0x1f08>
    3e56:	test   rax,rax
    3e59:	setne  al
    3e5c:	mov    rcx,QWORD PTR [rsp+0x18]
    3e61:	xor    rcx,QWORD PTR fs:0x28
    3e6a:	jne    3e71 <__cxa_finalize@plt+0x18f9>
    3e6c:	add    rsp,0x28
    3e70:	ret    
    3e71:	call   2180 <__stack_chk_fail@plt>
    3e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3e80:	cmp    rdi,0xa
    3e84:	mov    eax,0xa
    3e89:	movabs r9,0xaaaaaaaaaaaaaaab
    3e93:	cmovb  rdi,rax
    3e97:	or     rdi,0x1
    3e9b:	cmp    rdi,0xffffffffffffffff
    3e9f:	je     3f0f <__cxa_finalize@plt+0x1997>
    3ea1:	nop    DWORD PTR [rax+0x0]
    3ea8:	mov    rax,rdi
    3eab:	mov    rcx,rdi
    3eae:	mul    r9
    3eb1:	mov    rax,rdx
    3eb4:	shr    rax,1
    3eb7:	lea    rax,[rax+rax*2]
    3ebb:	sub    rcx,rax
    3ebe:	cmp    rdi,0x9
    3ec2:	mov    rax,rcx
    3ec5:	jbe    3f00 <__cxa_finalize@plt+0x1988>
    3ec7:	test   rcx,rcx
    3eca:	je     3f05 <__cxa_finalize@plt+0x198d>
    3ecc:	mov    r8d,0x10
    3ed2:	mov    esi,0x9
    3ed7:	mov    ecx,0x3
    3edc:	jmp    3ee9 <__cxa_finalize@plt+0x1971>
    3ede:	xchg   ax,ax
    3ee0:	add    r8,0x8
    3ee4:	test   rdx,rdx
    3ee7:	je     3f05 <__cxa_finalize@plt+0x198d>
    3ee9:	add    rcx,0x2
    3eed:	xor    edx,edx
    3eef:	mov    rax,rdi
    3ef2:	div    rcx
    3ef5:	add    rsi,r8
    3ef8:	cmp    rsi,rdi
    3efb:	mov    rax,rdx
    3efe:	jb     3ee0 <__cxa_finalize@plt+0x1968>
    3f00:	test   rax,rax
    3f03:	jne    3f0f <__cxa_finalize@plt+0x1997>
    3f05:	add    rdi,0x2
    3f09:	cmp    rdi,0xffffffffffffffff
    3f0d:	jne    3ea8 <__cxa_finalize@plt+0x1930>
    3f0f:	mov    rax,rdi
    3f12:	ret    
    3f13:	nop    DWORD PTR [rax]
    3f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3f20:	mov    rax,rdi
    3f23:	xor    edx,edx
    3f25:	ror    rax,0x3
    3f29:	div    rsi
    3f2c:	mov    rax,rdx
    3f2f:	ret    
    3f30:	cmp    rdi,rsi
    3f33:	sete   al
    3f36:	ret    
    3f37:	nop    WORD PTR [rax+rax*1+0x0]
    3f40:	push   rbx
    3f41:	mov    rbx,rdi
    3f44:	mov    rdi,rsi
    3f47:	mov    rsi,QWORD PTR [rbx+0x10]
    3f4b:	call   QWORD PTR [rbx+0x30]
    3f4e:	cmp    QWORD PTR [rbx+0x10],rax
    3f52:	jbe    3f5d <__cxa_finalize@plt+0x19e5>
    3f54:	shl    rax,0x4
    3f58:	add    rax,QWORD PTR [rbx]
    3f5b:	pop    rbx
    3f5c:	ret    
    3f5d:	call   2050 <abort@plt>
    3f62:	nop    DWORD PTR [rax+0x0]
    3f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3f70:	push   r14
    3f72:	push   r13
    3f74:	mov    r14,rdx
    3f77:	push   r12
    3f79:	push   rbp
    3f7a:	mov    r12,rdi
    3f7d:	push   rbx
    3f7e:	mov    rbp,rsi
    3f81:	mov    r13d,ecx
    3f84:	call   3f40 <__cxa_finalize@plt+0x19c8>
    3f89:	mov    QWORD PTR [r14],rax
    3f8c:	mov    rsi,QWORD PTR [rax]
    3f8f:	test   rsi,rsi
    3f92:	je     4080 <__cxa_finalize@plt+0x1b08>
    3f98:	cmp    rsi,rbp
    3f9b:	mov    rbx,rax
    3f9e:	je     4033 <__cxa_finalize@plt+0x1abb>
    3fa4:	mov    rdi,rbp
    3fa7:	call   QWORD PTR [r12+0x38]
    3fac:	test   al,al
    3fae:	jne    4030 <__cxa_finalize@plt+0x1ab8>
    3fb4:	mov    rax,QWORD PTR [rbx+0x8]
    3fb8:	test   rax,rax
    3fbb:	je     4080 <__cxa_finalize@plt+0x1b08>
    3fc1:	mov    rsi,QWORD PTR [rax]
    3fc4:	cmp    rbp,rsi
    3fc7:	jne    3fe9 <__cxa_finalize@plt+0x1a71>
    3fc9:	jmp    3ffc <__cxa_finalize@plt+0x1a84>
    3fcb:	nop    DWORD PTR [rax+rax*1+0x0]
    3fd0:	mov    rbx,QWORD PTR [rbx+0x8]
    3fd4:	mov    rax,QWORD PTR [rbx+0x8]
    3fd8:	test   rax,rax
    3fdb:	je     4080 <__cxa_finalize@plt+0x1b08>
    3fe1:	mov    rsi,QWORD PTR [rax]
    3fe4:	cmp    rsi,rbp
    3fe7:	je     3ffc <__cxa_finalize@plt+0x1a84>
    3fe9:	mov    rdi,rbp
    3fec:	call   QWORD PTR [r12+0x38]
    3ff1:	test   al,al
    3ff3:	je     3fd0 <__cxa_finalize@plt+0x1a58>
    3ff5:	mov    rax,QWORD PTR [rbx+0x8]
    3ff9:	mov    rsi,QWORD PTR [rax]
    3ffc:	test   r13b,r13b
    3fff:	je     401e <__cxa_finalize@plt+0x1aa6>
    4001:	mov    rdx,QWORD PTR [rax+0x8]
    4005:	mov    QWORD PTR [rbx+0x8],rdx
    4009:	mov    QWORD PTR [rax],0x0
    4010:	mov    rdx,QWORD PTR [r12+0x48]
    4015:	mov    QWORD PTR [rax+0x8],rdx
    4019:	mov    QWORD PTR [r12+0x48],rax
    401e:	pop    rbx
    401f:	mov    rax,rsi
    4022:	pop    rbp
    4023:	pop    r12
    4025:	pop    r13
    4027:	pop    r14
    4029:	ret    
    402a:	nop    WORD PTR [rax+rax*1+0x0]
    4030:	mov    rsi,QWORD PTR [rbx]
    4033:	test   r13b,r13b
    4036:	je     401e <__cxa_finalize@plt+0x1aa6>
    4038:	mov    rax,QWORD PTR [rbx+0x8]
    403c:	test   rax,rax
    403f:	je     4070 <__cxa_finalize@plt+0x1af8>
    4041:	movdqu xmm0,XMMWORD PTR [rax]
    4045:	movups XMMWORD PTR [rbx],xmm0
    4048:	mov    QWORD PTR [rax],0x0
    404f:	mov    rdx,QWORD PTR [r12+0x48]
    4054:	mov    QWORD PTR [rax+0x8],rdx
    4058:	mov    QWORD PTR [r12+0x48],rax
    405d:	mov    rax,rsi
    4060:	pop    rbx
    4061:	pop    rbp
    4062:	pop    r12
    4064:	pop    r13
    4066:	pop    r14
    4068:	ret    
    4069:	nop    DWORD PTR [rax+0x0]
    4070:	mov    QWORD PTR [rbx],0x0
    4077:	jmp    401e <__cxa_finalize@plt+0x1aa6>
    4079:	nop    DWORD PTR [rax+0x0]
    4080:	xor    esi,esi
    4082:	pop    rbx
    4083:	mov    rax,rsi
    4086:	pop    rbp
    4087:	pop    r12
    4089:	pop    r13
    408b:	pop    r14
    408d:	ret    
    408e:	xchg   ax,ax
    4090:	mov    rdx,QWORD PTR [rdi]
    4093:	lea    rcx,[rip+0x7666]        # b700 <_IO_stdin_used@@Base+0x5c0>
    409a:	mov    eax,0x1
    409f:	cmp    rdx,rcx
    40a2:	je     4105 <__cxa_finalize@plt+0x1b8d>
    40a4:	movss  xmm0,DWORD PTR [rdx+0x8]
    40a9:	ucomiss xmm0,DWORD PTR [rip+0x7664]        # b714 <_IO_stdin_used@@Base+0x5d4>
    40b0:	jbe    4100 <__cxa_finalize@plt+0x1b88>
    40b2:	movss  xmm1,DWORD PTR [rip+0x765e]        # b718 <_IO_stdin_used@@Base+0x5d8>
    40ba:	ucomiss xmm1,xmm0
    40bd:	jbe    4100 <__cxa_finalize@plt+0x1b88>
    40bf:	movss  xmm1,DWORD PTR [rdx+0xc]
    40c4:	ucomiss xmm1,DWORD PTR [rip+0x7651]        # b71c <_IO_stdin_used@@Base+0x5dc>
    40cb:	jbe    4100 <__cxa_finalize@plt+0x1b88>
    40cd:	movss  xmm1,DWORD PTR [rdx]
    40d1:	ucomiss xmm1,DWORD PTR [rip+0x7648]        # b720 <_IO_stdin_used@@Base+0x5e0>
    40d8:	jb     4100 <__cxa_finalize@plt+0x1b88>
    40da:	addss  xmm1,DWORD PTR [rip+0x7632]        # b714 <_IO_stdin_used@@Base+0x5d4>
    40e2:	movss  xmm2,DWORD PTR [rdx+0x4]
    40e7:	ucomiss xmm2,xmm1
    40ea:	jbe    4100 <__cxa_finalize@plt+0x1b88>
    40ec:	movss  xmm3,DWORD PTR [rip+0x7630]        # b724 <_IO_stdin_used@@Base+0x5e4>
    40f4:	ucomiss xmm3,xmm2
    40f7:	jb     4100 <__cxa_finalize@plt+0x1b88>
    40f9:	ucomiss xmm0,xmm1
    40fc:	ja     4105 <__cxa_finalize@plt+0x1b8d>
    40fe:	xchg   ax,ax
    4100:	mov    QWORD PTR [rdi],rcx
    4103:	xor    eax,eax
    4105:	repz ret 
    4107:	nop    WORD PTR [rax+rax*1+0x0]
    4110:	push   r15
    4112:	push   r14
    4114:	push   r13
    4116:	push   r12
    4118:	push   rbp
    4119:	push   rbx
    411a:	sub    rsp,0x8
    411e:	mov    r12,QWORD PTR [rsi]
    4121:	cmp    r12,QWORD PTR [rsi+0x8]
    4125:	jae    4208 <__cxa_finalize@plt+0x1c90>
    412b:	mov    rbp,rdi
    412e:	mov    r13,rsi
    4131:	mov    r14d,edx
    4134:	nop    DWORD PTR [rax+0x0]
    4138:	mov    r15,QWORD PTR [r12]
    413c:	test   r15,r15
    413f:	je     41fa <__cxa_finalize@plt+0x1c82>
    4145:	mov    rbx,QWORD PTR [r12+0x8]
    414a:	test   rbx,rbx
    414d:	jne    416c <__cxa_finalize@plt+0x1bf4>
    414f:	jmp    41ab <__cxa_finalize@plt+0x1c33>
    4151:	nop    DWORD PTR [rax+0x0]
    4158:	mov    rcx,QWORD PTR [rax+0x8]
    415c:	test   rdx,rdx
    415f:	mov    QWORD PTR [rbx+0x8],rcx
    4163:	mov    QWORD PTR [rax+0x8],rbx
    4167:	mov    rbx,rdx
    416a:	je     41a7 <__cxa_finalize@plt+0x1c2f>
    416c:	mov    r15,QWORD PTR [rbx]
    416f:	mov    rdi,rbp
    4172:	mov    rsi,r15
    4175:	call   3f40 <__cxa_finalize@plt+0x19c8>
    417a:	cmp    QWORD PTR [rax],0x0
    417e:	mov    rdx,QWORD PTR [rbx+0x8]
    4182:	jne    4158 <__cxa_finalize@plt+0x1be0>
    4184:	mov    QWORD PTR [rax],r15
    4187:	add    QWORD PTR [rbp+0x18],0x1
    418c:	test   rdx,rdx
    418f:	mov    QWORD PTR [rbx],0x0
    4196:	mov    rax,QWORD PTR [rbp+0x48]
    419a:	mov    QWORD PTR [rbx+0x8],rax
    419e:	mov    QWORD PTR [rbp+0x48],rbx
    41a2:	mov    rbx,rdx
    41a5:	jne    416c <__cxa_finalize@plt+0x1bf4>
    41a7:	mov    r15,QWORD PTR [r12]
    41ab:	test   r14b,r14b
    41ae:	mov    QWORD PTR [r12+0x8],0x0
    41b7:	jne    41fa <__cxa_finalize@plt+0x1c82>
    41b9:	mov    rsi,r15
    41bc:	mov    rdi,rbp
    41bf:	call   3f40 <__cxa_finalize@plt+0x19c8>
    41c4:	cmp    QWORD PTR [rax],0x0
    41c8:	mov    rbx,rax
    41cb:	je     4220 <__cxa_finalize@plt+0x1ca8>
    41cd:	mov    rax,QWORD PTR [rbp+0x48]
    41d1:	test   rax,rax
    41d4:	je     4230 <__cxa_finalize@plt+0x1cb8>
    41d6:	mov    rdx,QWORD PTR [rax+0x8]
    41da:	mov    QWORD PTR [rbp+0x48],rdx
    41de:	mov    rdx,QWORD PTR [rbx+0x8]
    41e2:	mov    QWORD PTR [rax],r15
    41e5:	mov    QWORD PTR [rax+0x8],rdx
    41e9:	mov    QWORD PTR [rbx+0x8],rax
    41ed:	mov    QWORD PTR [r12],0x0
    41f5:	sub    QWORD PTR [r13+0x18],0x1
    41fa:	add    r12,0x10
    41fe:	cmp    QWORD PTR [r13+0x8],r12
    4202:	ja     4138 <__cxa_finalize@plt+0x1bc0>
    4208:	add    rsp,0x8
    420c:	mov    eax,0x1
    4211:	pop    rbx
    4212:	pop    rbp
    4213:	pop    r12
    4215:	pop    r13
    4217:	pop    r14
    4219:	pop    r15
    421b:	ret    
    421c:	nop    DWORD PTR [rax+0x0]
    4220:	mov    QWORD PTR [rax],r15
    4223:	add    QWORD PTR [rbp+0x18],0x1
    4228:	jmp    41ed <__cxa_finalize@plt+0x1c75>
    422a:	nop    WORD PTR [rax+rax*1+0x0]
    4230:	mov    edi,0x10
    4235:	call   2380 <malloc@plt>
    423a:	test   rax,rax
    423d:	jne    41de <__cxa_finalize@plt+0x1c66>
    423f:	add    rsp,0x8
    4243:	xor    eax,eax
    4245:	pop    rbx
    4246:	pop    rbp
    4247:	pop    r12
    4249:	pop    r13
    424b:	pop    r14
    424d:	pop    r15
    424f:	ret    
    4250:	mov    rax,QWORD PTR [rdi+0x10]
    4254:	ret    
    4255:	nop
    4256:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4260:	mov    rax,QWORD PTR [rdi+0x18]
    4264:	ret    
    4265:	nop
    4266:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4270:	mov    rax,QWORD PTR [rdi+0x20]
    4274:	ret    
    4275:	nop
    4276:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4280:	mov    rsi,QWORD PTR [rdi]
    4283:	mov    rdi,QWORD PTR [rdi+0x8]
    4287:	xor    eax,eax
    4289:	cmp    rsi,rdi
    428c:	jae    42c7 <__cxa_finalize@plt+0x1d4f>
    428e:	xchg   ax,ax
    4290:	cmp    QWORD PTR [rsi],0x0
    4294:	je     42bc <__cxa_finalize@plt+0x1d44>
    4296:	mov    rdx,QWORD PTR [rsi+0x8]
    429a:	mov    ecx,0x1
    429f:	test   rdx,rdx
    42a2:	je     42b5 <__cxa_finalize@plt+0x1d3d>
    42a4:	nop    DWORD PTR [rax+0x0]
    42a8:	mov    rdx,QWORD PTR [rdx+0x8]
    42ac:	add    rcx,0x1
    42b0:	test   rdx,rdx
    42b3:	jne    42a8 <__cxa_finalize@plt+0x1d30>
    42b5:	cmp    rax,rcx
    42b8:	cmovb  rax,rcx
    42bc:	add    rsi,0x10
    42c0:	cmp    rsi,rdi
    42c3:	jb     4290 <__cxa_finalize@plt+0x1d18>
    42c5:	repz ret 
    42c7:	repz ret 
    42c9:	nop    DWORD PTR [rax+0x0]
    42d0:	mov    rcx,QWORD PTR [rdi]
    42d3:	mov    r8,QWORD PTR [rdi+0x8]
    42d7:	xor    edx,edx
    42d9:	xor    esi,esi
    42db:	cmp    rcx,r8
    42de:	jae    4316 <__cxa_finalize@plt+0x1d9e>
    42e0:	cmp    QWORD PTR [rcx],0x0
    42e4:	je     430d <__cxa_finalize@plt+0x1d95>
    42e6:	mov    rax,QWORD PTR [rcx+0x8]
    42ea:	add    rsi,0x1
    42ee:	add    rdx,0x1
    42f2:	test   rax,rax
    42f5:	je     430d <__cxa_finalize@plt+0x1d95>
    42f7:	nop    WORD PTR [rax+rax*1+0x0]
    4300:	mov    rax,QWORD PTR [rax+0x8]
    4304:	add    rdx,0x1
    4308:	test   rax,rax
    430b:	jne    4300 <__cxa_finalize@plt+0x1d88>
    430d:	add    rcx,0x10
    4311:	cmp    rcx,r8
    4314:	jb     42e0 <__cxa_finalize@plt+0x1d68>
    4316:	xor    eax,eax
    4318:	cmp    QWORD PTR [rdi+0x18],rsi
    431c:	je     4320 <__cxa_finalize@plt+0x1da8>
    431e:	repz ret 
    4320:	cmp    QWORD PTR [rdi+0x20],rdx
    4324:	sete   al
    4327:	ret    
    4328:	nop    DWORD PTR [rax+rax*1+0x0]
    4330:	push   r13
    4332:	push   r12
    4334:	mov    r12,rsi
    4337:	push   rbp
    4338:	push   rbx
    4339:	xor    ebx,ebx
    433b:	sub    rsp,0x8
    433f:	mov    rsi,QWORD PTR [rdi]
    4342:	mov    rcx,QWORD PTR [rdi+0x20]
    4346:	mov    rbp,QWORD PTR [rdi+0x10]
    434a:	mov    r13,QWORD PTR [rdi+0x18]
    434e:	mov    rdi,QWORD PTR [rdi+0x8]
    4352:	cmp    rsi,rdi
    4355:	jae    4395 <__cxa_finalize@plt+0x1e1d>
    4357:	nop    WORD PTR [rax+rax*1+0x0]
    4360:	cmp    QWORD PTR [rsi],0x0
    4364:	je     438c <__cxa_finalize@plt+0x1e14>
    4366:	mov    rax,QWORD PTR [rsi+0x8]
    436a:	mov    edx,0x1
    436f:	test   rax,rax
    4372:	je     4385 <__cxa_finalize@plt+0x1e0d>
    4374:	nop    DWORD PTR [rax+0x0]
    4378:	mov    rax,QWORD PTR [rax+0x8]
    437c:	add    rdx,0x1
    4380:	test   rax,rax
    4383:	jne    4378 <__cxa_finalize@plt+0x1e00>
    4385:	cmp    rbx,rdx
    4388:	cmovb  rbx,rdx
    438c:	add    rsi,0x10
    4390:	cmp    rsi,rdi
    4393:	jb     4360 <__cxa_finalize@plt+0x1de8>
    4395:	lea    rdx,[rip+0x72e9]        # b685 <_IO_stdin_used@@Base+0x545>
    439c:	mov    esi,0x1
    43a1:	mov    rdi,r12
    43a4:	xor    eax,eax
    43a6:	call   2500 <__fprintf_chk@plt>
    43ab:	lea    rdx,[rip+0x72eb]        # b69d <_IO_stdin_used@@Base+0x55d>
    43b2:	xor    eax,eax
    43b4:	mov    rcx,rbp
    43b7:	mov    esi,0x1
    43bc:	mov    rdi,r12
    43bf:	call   2500 <__fprintf_chk@plt>
    43c4:	test   r13,r13
    43c7:	js     4430 <__cxa_finalize@plt+0x1eb8>
    43c9:	pxor   xmm0,xmm0
    43cd:	test   rbp,rbp
    43d0:	cvtsi2sd xmm0,r13
    43d5:	mulsd  xmm0,QWORD PTR [rip+0x735b]        # b738 <_IO_stdin_used@@Base+0x5f8>
    43dd:	js     4459 <__cxa_finalize@plt+0x1ee1>
    43df:	pxor   xmm1,xmm1
    43e3:	cvtsi2sd xmm1,rbp
    43e8:	divsd  xmm0,xmm1
    43ec:	lea    rdx,[rip+0x72dd]        # b6d0 <_IO_stdin_used@@Base+0x590>
    43f3:	mov    rcx,r13
    43f6:	mov    rdi,r12
    43f9:	mov    esi,0x1
    43fe:	mov    eax,0x1
    4403:	call   2500 <__fprintf_chk@plt>
    4408:	add    rsp,0x8
    440c:	mov    rcx,rbx
    440f:	mov    rdi,r12
    4412:	pop    rbx
    4413:	pop    rbp
    4414:	pop    r12
    4416:	pop    r13
    4418:	lea    rdx,[rip+0x7296]        # b6b5 <_IO_stdin_used@@Base+0x575>
    441f:	mov    esi,0x1
    4424:	xor    eax,eax
    4426:	jmp    2500 <__fprintf_chk@plt>
    442b:	nop    DWORD PTR [rax+rax*1+0x0]
    4430:	mov    rax,r13
    4433:	mov    rdx,r13
    4436:	pxor   xmm0,xmm0
    443a:	shr    rax,1
    443d:	and    edx,0x1
    4440:	or     rax,rdx
    4443:	test   rbp,rbp
    4446:	cvtsi2sd xmm0,rax
    444b:	addsd  xmm0,xmm0
    444f:	mulsd  xmm0,QWORD PTR [rip+0x72e1]        # b738 <_IO_stdin_used@@Base+0x5f8>
    4457:	jns    43df <__cxa_finalize@plt+0x1e67>
    4459:	mov    rax,rbp
    445c:	pxor   xmm1,xmm1
    4460:	shr    rax,1
    4463:	and    ebp,0x1
    4466:	or     rax,rbp
    4469:	cvtsi2sd xmm1,rax
    446e:	addsd  xmm1,xmm1
    4472:	jmp    43e8 <__cxa_finalize@plt+0x1e70>
    4477:	nop    WORD PTR [rax+rax*1+0x0]
    4480:	push   r12
    4482:	push   rbp
    4483:	mov    r12,rdi
    4486:	push   rbx
    4487:	mov    rbp,rsi
    448a:	call   3f40 <__cxa_finalize@plt+0x19c8>
    448f:	mov    rsi,QWORD PTR [rax]
    4492:	test   rsi,rsi
    4495:	je     44bd <__cxa_finalize@plt+0x1f45>
    4497:	mov    rbx,rax
    449a:	jmp    44a3 <__cxa_finalize@plt+0x1f2b>
    449c:	nop    DWORD PTR [rax+0x0]
    44a0:	mov    rsi,QWORD PTR [rbx]
    44a3:	cmp    rsi,rbp
    44a6:	je     44bf <__cxa_finalize@plt+0x1f47>
    44a8:	mov    rdi,rbp
    44ab:	call   QWORD PTR [r12+0x38]
    44b0:	test   al,al
    44b2:	jne    44d0 <__cxa_finalize@plt+0x1f58>
    44b4:	mov    rbx,QWORD PTR [rbx+0x8]
    44b8:	test   rbx,rbx
    44bb:	jne    44a0 <__cxa_finalize@plt+0x1f28>
    44bd:	xor    esi,esi
    44bf:	pop    rbx
    44c0:	mov    rax,rsi
    44c3:	pop    rbp
    44c4:	pop    r12
    44c6:	ret    
    44c7:	nop    WORD PTR [rax+rax*1+0x0]
    44d0:	mov    rsi,QWORD PTR [rbx]
    44d3:	pop    rbx
    44d4:	pop    rbp
    44d5:	mov    rax,rsi
    44d8:	pop    r12
    44da:	ret    
    44db:	nop    DWORD PTR [rax+rax*1+0x0]
    44e0:	cmp    QWORD PTR [rdi+0x20],0x0
    44e5:	je     4513 <__cxa_finalize@plt+0x1f9b>
    44e7:	mov    rdx,QWORD PTR [rdi]
    44ea:	mov    rcx,QWORD PTR [rdi+0x8]
    44ee:	cmp    rdx,rcx
    44f1:	jae    4518 <__cxa_finalize@plt+0x1fa0>
    44f3:	mov    rax,QWORD PTR [rdx]
    44f6:	test   rax,rax
    44f9:	jne    4516 <__cxa_finalize@plt+0x1f9e>
    44fb:	nop    DWORD PTR [rax+rax*1+0x0]
    4500:	add    rdx,0x10
    4504:	cmp    rdx,rcx
    4507:	jae    4518 <__cxa_finalize@plt+0x1fa0>
    4509:	mov    rax,QWORD PTR [rdx]
    450c:	test   rax,rax
    450f:	je     4500 <__cxa_finalize@plt+0x1f88>
    4511:	repz ret 
    4513:	xor    eax,eax
    4515:	ret    
    4516:	repz ret 
    4518:	sub    rsp,0x8
    451c:	call   2050 <abort@plt>
    4521:	nop    DWORD PTR [rax+rax*1+0x0]
    4526:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4530:	push   rbp
    4531:	push   rbx
    4532:	mov    rbp,rdi
    4535:	mov    rbx,rsi
    4538:	sub    rsp,0x8
    453c:	call   3f40 <__cxa_finalize@plt+0x19c8>
    4541:	mov    rdx,rax
    4544:	mov    rcx,rax
    4547:	mov    rax,QWORD PTR [rdx]
    454a:	mov    rdx,QWORD PTR [rdx+0x8]
    454e:	cmp    rax,rbx
    4551:	je     4569 <__cxa_finalize@plt+0x1ff1>
    4553:	nop    DWORD PTR [rax+rax*1+0x0]
    4558:	test   rdx,rdx
    455b:	je     456e <__cxa_finalize@plt+0x1ff6>
    455d:	mov    rax,QWORD PTR [rdx]
    4560:	mov    rdx,QWORD PTR [rdx+0x8]
    4564:	cmp    rax,rbx
    4567:	jne    4558 <__cxa_finalize@plt+0x1fe0>
    4569:	test   rdx,rdx
    456c:	jne    4598 <__cxa_finalize@plt+0x2020>
    456e:	mov    rdx,QWORD PTR [rbp+0x8]
    4572:	jmp    4580 <__cxa_finalize@plt+0x2008>
    4574:	nop    DWORD PTR [rax+0x0]
    4578:	mov    rax,QWORD PTR [rcx]
    457b:	test   rax,rax
    457e:	jne    458b <__cxa_finalize@plt+0x2013>
    4580:	add    rcx,0x10
    4584:	cmp    rdx,rcx
    4587:	ja     4578 <__cxa_finalize@plt+0x2000>
    4589:	xor    eax,eax
    458b:	add    rsp,0x8
    458f:	pop    rbx
    4590:	pop    rbp
    4591:	ret    
    4592:	nop    WORD PTR [rax+rax*1+0x0]
    4598:	mov    rax,QWORD PTR [rdx]
    459b:	add    rsp,0x8
    459f:	pop    rbx
    45a0:	pop    rbp
    45a1:	ret    
    45a2:	nop    DWORD PTR [rax+0x0]
    45a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    45b0:	mov    r9,QWORD PTR [rdi]
    45b3:	cmp    QWORD PTR [rdi+0x8],r9
    45b7:	jbe    4612 <__cxa_finalize@plt+0x209a>
    45b9:	xor    r8d,r8d
    45bc:	mov    rcx,QWORD PTR [r9]
    45bf:	test   rcx,rcx
    45c2:	je     45fd <__cxa_finalize@plt+0x2085>
    45c4:	cmp    rdx,r8
    45c7:	jbe    4607 <__cxa_finalize@plt+0x208f>
    45c9:	mov    QWORD PTR [rsi+r8*8],rcx
    45cd:	mov    rcx,QWORD PTR [r9+0x8]
    45d1:	lea    rax,[r8+0x1]
    45d5:	test   rcx,rcx
    45d8:	je     45fa <__cxa_finalize@plt+0x2082>
    45da:	nop    WORD PTR [rax+rax*1+0x0]
    45e0:	cmp    rdx,rax
    45e3:	je     4610 <__cxa_finalize@plt+0x2098>
    45e5:	mov    r8,QWORD PTR [rcx]
    45e8:	add    rax,0x1
    45ec:	mov    QWORD PTR [rsi+rax*8-0x8],r8
    45f1:	mov    rcx,QWORD PTR [rcx+0x8]
    45f5:	test   rcx,rcx
    45f8:	jne    45e0 <__cxa_finalize@plt+0x2068>
    45fa:	mov    r8,rax
    45fd:	add    r9,0x10
    4601:	cmp    QWORD PTR [rdi+0x8],r9
    4605:	ja     45bc <__cxa_finalize@plt+0x2044>
    4607:	mov    rax,r8
    460a:	ret    
    460b:	nop    DWORD PTR [rax+rax*1+0x0]
    4610:	repz ret 
    4612:	xor    eax,eax
    4614:	ret    
    4615:	nop
    4616:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4620:	push   r15
    4622:	push   r14
    4624:	push   r13
    4626:	push   r12
    4628:	push   rbp
    4629:	push   rbx
    462a:	sub    rsp,0x8
    462e:	mov    r14,QWORD PTR [rdi]
    4631:	cmp    QWORD PTR [rdi+0x8],r14
    4635:	jbe    4686 <__cxa_finalize@plt+0x210e>
    4637:	mov    r13,rdx
    463a:	mov    r12,rsi
    463d:	mov    r15,rdi
    4640:	xor    ebp,ebp
    4642:	mov    rdi,QWORD PTR [r14]
    4645:	test   rdi,rdi
    4648:	je     466a <__cxa_finalize@plt+0x20f2>
    464a:	mov    rbx,r14
    464d:	jmp    4653 <__cxa_finalize@plt+0x20db>
    464f:	nop
    4650:	mov    rdi,QWORD PTR [rbx]
    4653:	mov    rsi,r13
    4656:	call   r12
    4659:	test   al,al
    465b:	je     4674 <__cxa_finalize@plt+0x20fc>
    465d:	mov    rbx,QWORD PTR [rbx+0x8]
    4661:	add    rbp,0x1
    4665:	test   rbx,rbx
    4668:	jne    4650 <__cxa_finalize@plt+0x20d8>
    466a:	add    r14,0x10
    466e:	cmp    QWORD PTR [r15+0x8],r14
    4672:	ja     4642 <__cxa_finalize@plt+0x20ca>
    4674:	add    rsp,0x8
    4678:	mov    rax,rbp
    467b:	pop    rbx
    467c:	pop    rbp
    467d:	pop    r12
    467f:	pop    r13
    4681:	pop    r14
    4683:	pop    r15
    4685:	ret    
    4686:	xor    ebp,ebp
    4688:	jmp    4674 <__cxa_finalize@plt+0x20fc>
    468a:	nop    WORD PTR [rax+rax*1+0x0]
    4690:	movzx  ecx,BYTE PTR [rdi]
    4693:	xor    edx,edx
    4695:	test   cl,cl
    4697:	je     46bd <__cxa_finalize@plt+0x2145>
    4699:	nop    DWORD PTR [rax+0x0]
    46a0:	mov    rax,rdx
    46a3:	add    rdi,0x1
    46a7:	shl    rax,0x5
    46ab:	sub    rax,rdx
    46ae:	xor    edx,edx
    46b0:	add    rax,rcx
    46b3:	movzx  ecx,BYTE PTR [rdi]
    46b6:	div    rsi
    46b9:	test   cl,cl
    46bb:	jne    46a0 <__cxa_finalize@plt+0x2128>
    46bd:	mov    rax,rdx
    46c0:	ret    
    46c1:	nop    DWORD PTR [rax+rax*1+0x0]
    46c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46d0:	movabs rax,0x3f80000000000000
    46da:	mov    BYTE PTR [rdi+0x10],0x0
    46de:	mov    QWORD PTR [rdi],rax
    46e1:	movabs rax,0x3fb4fdf43f4ccccd
    46eb:	mov    QWORD PTR [rdi+0x8],rax
    46ef:	ret    
    46f0:	push   r15
    46f2:	push   r14
    46f4:	lea    rax,[rip+0xfffffffffffff825]        # 3f20 <__cxa_finalize@plt+0x19a8>
    46fb:	push   r13
    46fd:	push   r12
    46ff:	mov    r12,rdx
    4702:	push   rbp
    4703:	push   rbx
    4704:	mov    r13,rcx
    4707:	mov    rbp,rdi
    470a:	mov    edi,0x50
    470f:	mov    r15,rsi
    4712:	sub    rsp,0x8
    4716:	test   rdx,rdx
    4719:	mov    r14,r8
    471c:	cmove  r12,rax
    4720:	lea    rax,[rip+0xfffffffffffff809]        # 3f30 <__cxa_finalize@plt+0x19b8>
    4727:	test   rcx,rcx
    472a:	cmove  r13,rax
    472e:	call   2380 <malloc@plt>
    4733:	test   rax,rax
    4736:	mov    rbx,rax
    4739:	je     47ea <__cxa_finalize@plt+0x2272>
    473f:	test   r15,r15
    4742:	lea    rdi,[rax+0x28]
    4746:	je     4800 <__cxa_finalize@plt+0x2288>
    474c:	mov    QWORD PTR [rax+0x28],r15
    4750:	call   4090 <__cxa_finalize@plt+0x1b18>
    4755:	test   al,al
    4757:	je     47e0 <__cxa_finalize@plt+0x2268>
    475d:	cmp    BYTE PTR [r15+0x10],0x0
    4762:	je     4860 <__cxa_finalize@plt+0x22e8>
    4768:	mov    rdi,rbp
    476b:	call   3e80 <__cxa_finalize@plt+0x1908>
    4770:	mov    edx,0x8
    4775:	mov    rbp,rax
    4778:	xor    ecx,ecx
    477a:	mov    rax,rdx
    477d:	mul    rbp
    4780:	jo     489a <__cxa_finalize@plt+0x2322>
    4786:	test   rax,rax
    4789:	js     47e0 <__cxa_finalize@plt+0x2268>
    478b:	test   rcx,rcx
    478e:	jne    47e0 <__cxa_finalize@plt+0x2268>
    4790:	test   rbp,rbp
    4793:	mov    QWORD PTR [rbx+0x10],rbp
    4797:	je     47e0 <__cxa_finalize@plt+0x2268>
    4799:	mov    esi,0x10
    479e:	mov    rdi,rbp
    47a1:	call   22b0 <calloc@plt>
    47a6:	test   rax,rax
    47a9:	mov    QWORD PTR [rbx],rax
    47ac:	je     47e0 <__cxa_finalize@plt+0x2268>
    47ae:	shl    rbp,0x4
    47b2:	mov    QWORD PTR [rbx+0x18],0x0
    47ba:	mov    QWORD PTR [rbx+0x20],0x0
    47c2:	add    rbp,rax
    47c5:	mov    QWORD PTR [rbx+0x30],r12
    47c9:	mov    QWORD PTR [rbx+0x38],r13
    47cd:	mov    QWORD PTR [rbx+0x8],rbp
    47d1:	mov    QWORD PTR [rbx+0x40],r14
    47d5:	mov    QWORD PTR [rbx+0x48],0x0
    47dd:	jmp    47ea <__cxa_finalize@plt+0x2272>
    47df:	nop
    47e0:	mov    rdi,rbx
    47e3:	xor    ebx,ebx
    47e5:	call   2570 <free@plt>
    47ea:	add    rsp,0x8
    47ee:	mov    rax,rbx
    47f1:	pop    rbx
    47f2:	pop    rbp
    47f3:	pop    r12
    47f5:	pop    r13
    47f7:	pop    r14
    47f9:	pop    r15
    47fb:	ret    
    47fc:	nop    DWORD PTR [rax+0x0]
    4800:	lea    rax,[rip+0x6ef9]        # b700 <_IO_stdin_used@@Base+0x5c0>
    4807:	mov    QWORD PTR [rbx+0x28],rax
    480b:	call   4090 <__cxa_finalize@plt+0x1b18>
    4810:	test   al,al
    4812:	movss  xmm1,DWORD PTR [rip+0x6f0e]        # b728 <_IO_stdin_used@@Base+0x5e8>
    481a:	je     47e0 <__cxa_finalize@plt+0x2268>
    481c:	test   rbp,rbp
    481f:	js     486b <__cxa_finalize@plt+0x22f3>
    4821:	pxor   xmm0,xmm0
    4825:	cvtsi2ss xmm0,rbp
    482a:	divss  xmm0,xmm1
    482e:	ucomiss xmm0,DWORD PTR [rip+0x6ef7]        # b72c <_IO_stdin_used@@Base+0x5ec>
    4835:	jae    47e0 <__cxa_finalize@plt+0x2268>
    4837:	ucomiss xmm0,DWORD PTR [rip+0x6ef2]        # b730 <_IO_stdin_used@@Base+0x5f0>
    483e:	jb     4890 <__cxa_finalize@plt+0x2318>
    4840:	subss  xmm0,DWORD PTR [rip+0x6ee8]        # b730 <_IO_stdin_used@@Base+0x5f0>
    4848:	movabs rax,0x8000000000000000
    4852:	cvttss2si rbp,xmm0
    4857:	xor    rbp,rax
    485a:	jmp    4768 <__cxa_finalize@plt+0x21f0>
    485f:	nop
    4860:	test   rbp,rbp
    4863:	movss  xmm1,DWORD PTR [r15+0x8]
    4869:	jns    4821 <__cxa_finalize@plt+0x22a9>
    486b:	mov    rax,rbp
    486e:	pxor   xmm0,xmm0
    4872:	shr    rax,1
    4875:	and    ebp,0x1
    4878:	or     rax,rbp
    487b:	cvtsi2ss xmm0,rax
    4880:	addss  xmm0,xmm0
    4884:	jmp    482a <__cxa_finalize@plt+0x22b2>
    4886:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4890:	cvttss2si rbp,xmm0
    4895:	jmp    4768 <__cxa_finalize@plt+0x21f0>
    489a:	mov    ecx,0x1
    489f:	jmp    4786 <__cxa_finalize@plt+0x220e>
    48a4:	xchg   ax,ax
    48a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    48b0:	push   r12
    48b2:	push   rbp
    48b3:	mov    rbp,rdi
    48b6:	push   rbx
    48b7:	mov    r12,QWORD PTR [rdi]
    48ba:	cmp    r12,QWORD PTR [rdi+0x8]
    48be:	jae    492b <__cxa_finalize@plt+0x23b3>
    48c0:	cmp    QWORD PTR [r12],0x0
    48c5:	je     4921 <__cxa_finalize@plt+0x23a9>
    48c7:	mov    rbx,QWORD PTR [r12+0x8]
    48cc:	mov    rax,QWORD PTR [rbp+0x40]
    48d0:	test   rbx,rbx
    48d3:	je     4905 <__cxa_finalize@plt+0x238d>
    48d5:	nop    DWORD PTR [rax]
    48d8:	test   rax,rax
    48db:	je     48e6 <__cxa_finalize@plt+0x236e>
    48dd:	mov    rdi,QWORD PTR [rbx]
    48e0:	call   rax
    48e2:	mov    rax,QWORD PTR [rbp+0x40]
    48e6:	mov    rdx,QWORD PTR [rbx+0x8]
    48ea:	mov    rcx,QWORD PTR [rbp+0x48]
    48ee:	mov    QWORD PTR [rbx],0x0
    48f5:	test   rdx,rdx
    48f8:	mov    QWORD PTR [rbx+0x8],rcx
    48fc:	mov    QWORD PTR [rbp+0x48],rbx
    4900:	mov    rbx,rdx
    4903:	jne    48d8 <__cxa_finalize@plt+0x2360>
    4905:	test   rax,rax
    4908:	je     4910 <__cxa_finalize@plt+0x2398>
    490a:	mov    rdi,QWORD PTR [r12]
    490e:	call   rax
    4910:	mov    QWORD PTR [r12],0x0
    4918:	mov    QWORD PTR [r12+0x8],0x0
    4921:	add    r12,0x10
    4925:	cmp    QWORD PTR [rbp+0x8],r12
    4929:	ja     48c0 <__cxa_finalize@plt+0x2348>
    492b:	mov    QWORD PTR [rbp+0x18],0x0
    4933:	mov    QWORD PTR [rbp+0x20],0x0
    493b:	pop    rbx
    493c:	pop    rbp
    493d:	pop    r12
    493f:	ret    
    4940:	push   r12
    4942:	push   rbp
    4943:	mov    r12,rdi
    4946:	push   rbx
    4947:	cmp    QWORD PTR [rdi+0x40],0x0
    494c:	mov    rbp,QWORD PTR [rdi]
    494f:	mov    rax,QWORD PTR [rdi+0x8]
    4953:	je     49a3 <__cxa_finalize@plt+0x242b>
    4955:	cmp    QWORD PTR [rdi+0x20],0x0
    495a:	je     49a3 <__cxa_finalize@plt+0x242b>
    495c:	cmp    rbp,rax
    495f:	jae    49dc <__cxa_finalize@plt+0x2464>
    4961:	nop    DWORD PTR [rax+0x0]
    4968:	mov    rdi,QWORD PTR [rbp+0x0]
    496c:	test   rdi,rdi
    496f:	je     4996 <__cxa_finalize@plt+0x241e>
    4971:	mov    rbx,rbp
    4974:	jmp    4983 <__cxa_finalize@plt+0x240b>
    4976:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4980:	mov    rdi,QWORD PTR [rbx]
    4983:	call   QWORD PTR [r12+0x40]
    4988:	mov    rbx,QWORD PTR [rbx+0x8]
    498c:	test   rbx,rbx
    498f:	jne    4980 <__cxa_finalize@plt+0x2408>
    4991:	mov    rax,QWORD PTR [r12+0x8]
    4996:	add    rbp,0x10
    499a:	cmp    rax,rbp
    499d:	ja     4968 <__cxa_finalize@plt+0x23f0>
    499f:	mov    rbp,QWORD PTR [r12]
    49a3:	cmp    rbp,rax
    49a6:	jae    49dc <__cxa_finalize@plt+0x2464>
    49a8:	nop    DWORD PTR [rax+rax*1+0x0]
    49b0:	mov    rdi,QWORD PTR [rbp+0x8]
    49b4:	test   rdi,rdi
    49b7:	je     49d1 <__cxa_finalize@plt+0x2459>
    49b9:	nop    DWORD PTR [rax+0x0]
    49c0:	mov    rbx,QWORD PTR [rdi+0x8]
    49c4:	call   2570 <free@plt>
    49c9:	test   rbx,rbx
    49cc:	mov    rdi,rbx
    49cf:	jne    49c0 <__cxa_finalize@plt+0x2448>
    49d1:	add    rbp,0x10
    49d5:	cmp    QWORD PTR [r12+0x8],rbp
    49da:	ja     49b0 <__cxa_finalize@plt+0x2438>
    49dc:	mov    rdi,QWORD PTR [r12+0x48]
    49e1:	test   rdi,rdi
    49e4:	je     4a01 <__cxa_finalize@plt+0x2489>
    49e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    49f0:	mov    rbx,QWORD PTR [rdi+0x8]
    49f4:	call   2570 <free@plt>
    49f9:	test   rbx,rbx
    49fc:	mov    rdi,rbx
    49ff:	jne    49f0 <__cxa_finalize@plt+0x2478>
    4a01:	mov    rdi,QWORD PTR [r12]
    4a05:	call   2570 <free@plt>
    4a0a:	pop    rbx
    4a0b:	mov    rdi,r12
    4a0e:	pop    rbp
    4a0f:	pop    r12
    4a11:	jmp    2570 <free@plt>
    4a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4a20:	push   r12
    4a22:	push   rbp
    4a23:	mov    rbp,rdi
    4a26:	push   rbx
    4a27:	sub    rsp,0x60
    4a2b:	mov    r12,QWORD PTR [rdi+0x28]
    4a2f:	mov    rax,QWORD PTR fs:0x28
    4a38:	mov    QWORD PTR [rsp+0x58],rax
    4a3d:	xor    eax,eax
    4a3f:	cmp    BYTE PTR [r12+0x10],0x0
    4a45:	jne    4a98 <__cxa_finalize@plt+0x2520>
    4a47:	test   rsi,rsi
    4a4a:	js     4bc8 <__cxa_finalize@plt+0x2650>
    4a50:	pxor   xmm0,xmm0
    4a54:	cvtsi2ss xmm0,rsi
    4a59:	divss  xmm0,DWORD PTR [r12+0x8]
    4a60:	ucomiss xmm0,DWORD PTR [rip+0x6cc5]        # b72c <_IO_stdin_used@@Base+0x5ec>
    4a67:	jae    4ba0 <__cxa_finalize@plt+0x2628>
    4a6d:	ucomiss xmm0,DWORD PTR [rip+0x6cbc]        # b730 <_IO_stdin_used@@Base+0x5f0>
    4a74:	jb     4bf0 <__cxa_finalize@plt+0x2678>
    4a7a:	subss  xmm0,DWORD PTR [rip+0x6cae]        # b730 <_IO_stdin_used@@Base+0x5f0>
    4a82:	movabs rax,0x8000000000000000
    4a8c:	cvttss2si rsi,xmm0
    4a91:	xor    rsi,rax
    4a94:	nop    DWORD PTR [rax+0x0]
    4a98:	mov    rdi,rsi
    4a9b:	call   3e80 <__cxa_finalize@plt+0x1908>
    4aa0:	mov    edx,0x8
    4aa5:	mov    rbx,rax
    4aa8:	xor    ecx,ecx
    4aaa:	mov    rax,rdx
    4aad:	mul    rbx
    4ab0:	jo     4c4f <__cxa_finalize@plt+0x26d7>
    4ab6:	test   rax,rax
    4ab9:	mov    eax,0x1
    4abe:	cmovs  rcx,rax
    4ac2:	test   rbx,rbx
    4ac5:	je     4ba0 <__cxa_finalize@plt+0x2628>
    4acb:	and    ecx,0x1
    4ace:	jne    4ba0 <__cxa_finalize@plt+0x2628>
    4ad4:	cmp    QWORD PTR [rbp+0x10],rbx
    4ad8:	je     4c00 <__cxa_finalize@plt+0x2688>
    4ade:	mov    esi,0x10
    4ae3:	mov    rdi,rbx
    4ae6:	call   22b0 <calloc@plt>
    4aeb:	test   rax,rax
    4aee:	mov    QWORD PTR [rsp],rax
    4af2:	je     4ba0 <__cxa_finalize@plt+0x2628>
    4af8:	mov    QWORD PTR [rsp+0x10],rbx
    4afd:	shl    rbx,0x4
    4b01:	mov    QWORD PTR [rsp+0x28],r12
    4b06:	add    rbx,rax
    4b09:	mov    rax,QWORD PTR [rbp+0x30]
    4b0d:	mov    r12,rsp
    4b10:	xor    edx,edx
    4b12:	mov    rsi,rbp
    4b15:	mov    rdi,r12
    4b18:	mov    QWORD PTR [rsp+0x8],rbx
    4b1d:	mov    QWORD PTR [rsp+0x18],0x0
    4b26:	mov    QWORD PTR [rsp+0x30],rax
    4b2b:	mov    rax,QWORD PTR [rbp+0x38]
    4b2f:	mov    QWORD PTR [rsp+0x20],0x0
    4b38:	mov    QWORD PTR [rsp+0x38],rax
    4b3d:	mov    rax,QWORD PTR [rbp+0x40]
    4b41:	mov    QWORD PTR [rsp+0x40],rax
    4b46:	mov    rax,QWORD PTR [rbp+0x48]
    4b4a:	mov    QWORD PTR [rsp+0x48],rax
    4b4f:	call   4110 <__cxa_finalize@plt+0x1b98>
    4b54:	test   al,al
    4b56:	mov    ebx,eax
    4b58:	jne    4c10 <__cxa_finalize@plt+0x2698>
    4b5e:	mov    rax,QWORD PTR [rsp+0x48]
    4b63:	mov    edx,0x1
    4b68:	mov    rsi,r12
    4b6b:	mov    rdi,rbp
    4b6e:	mov    QWORD PTR [rbp+0x48],rax
    4b72:	call   4110 <__cxa_finalize@plt+0x1b98>
    4b77:	test   al,al
    4b79:	je     4c59 <__cxa_finalize@plt+0x26e1>
    4b7f:	xor    edx,edx
    4b81:	mov    rsi,r12
    4b84:	mov    rdi,rbp
    4b87:	call   4110 <__cxa_finalize@plt+0x1b98>
    4b8c:	test   al,al
    4b8e:	je     4c59 <__cxa_finalize@plt+0x26e1>
    4b94:	mov    rdi,QWORD PTR [rsp]
    4b98:	call   2570 <free@plt>
    4b9d:	jmp    4ba2 <__cxa_finalize@plt+0x262a>
    4b9f:	nop
    4ba0:	xor    ebx,ebx
    4ba2:	mov    rcx,QWORD PTR [rsp+0x58]
    4ba7:	xor    rcx,QWORD PTR fs:0x28
    4bb0:	mov    eax,ebx
    4bb2:	jne    4c4a <__cxa_finalize@plt+0x26d2>
    4bb8:	add    rsp,0x60
    4bbc:	pop    rbx
    4bbd:	pop    rbp
    4bbe:	pop    r12
    4bc0:	ret    
    4bc1:	nop    DWORD PTR [rax+0x0]
    4bc8:	mov    rax,rsi
    4bcb:	pxor   xmm0,xmm0
    4bcf:	shr    rax,1
    4bd2:	and    esi,0x1
    4bd5:	or     rax,rsi
    4bd8:	cvtsi2ss xmm0,rax
    4bdd:	addss  xmm0,xmm0
    4be1:	jmp    4a59 <__cxa_finalize@plt+0x24e1>
    4be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4bf0:	cvttss2si rsi,xmm0
    4bf5:	jmp    4a98 <__cxa_finalize@plt+0x2520>
    4bfa:	nop    WORD PTR [rax+rax*1+0x0]
    4c00:	mov    ebx,0x1
    4c05:	jmp    4ba2 <__cxa_finalize@plt+0x262a>
    4c07:	nop    WORD PTR [rax+rax*1+0x0]
    4c10:	mov    rdi,QWORD PTR [rbp+0x0]
    4c14:	call   2570 <free@plt>
    4c19:	mov    rax,QWORD PTR [rsp]
    4c1d:	mov    QWORD PTR [rbp+0x0],rax
    4c21:	mov    rax,QWORD PTR [rsp+0x8]
    4c26:	mov    QWORD PTR [rbp+0x8],rax
    4c2a:	mov    rax,QWORD PTR [rsp+0x10]
    4c2f:	mov    QWORD PTR [rbp+0x10],rax
    4c33:	mov    rax,QWORD PTR [rsp+0x18]
    4c38:	mov    QWORD PTR [rbp+0x18],rax
    4c3c:	mov    rax,QWORD PTR [rsp+0x48]
    4c41:	mov    QWORD PTR [rbp+0x48],rax
    4c45:	jmp    4ba2 <__cxa_finalize@plt+0x262a>
    4c4a:	call   2180 <__stack_chk_fail@plt>
    4c4f:	mov    ecx,0x1
    4c54:	jmp    4ab6 <__cxa_finalize@plt+0x253e>
    4c59:	call   2050 <abort@plt>
    4c5e:	xchg   ax,ax
    4c60:	push   r13
    4c62:	push   r12
    4c64:	push   rbp
    4c65:	push   rbx
    4c66:	sub    rsp,0x18
    4c6a:	mov    rax,QWORD PTR fs:0x28
    4c73:	mov    QWORD PTR [rsp+0x8],rax
    4c78:	xor    eax,eax
    4c7a:	test   rsi,rsi
    4c7d:	je     4e3d <__cxa_finalize@plt+0x28c5>
    4c83:	mov    r12,rsp
    4c86:	xor    ecx,ecx
    4c88:	mov    r13,rdx
    4c8b:	mov    rdx,r12
    4c8e:	mov    rbx,rdi
    4c91:	mov    rbp,rsi
    4c94:	call   3f70 <__cxa_finalize@plt+0x19f8>
    4c99:	test   rax,rax
    4c9c:	mov    rdx,rax
    4c9f:	je     4cd0 <__cxa_finalize@plt+0x2758>
    4ca1:	xor    eax,eax
    4ca3:	test   r13,r13
    4ca6:	je     4cac <__cxa_finalize@plt+0x2734>
    4ca8:	mov    QWORD PTR [r13+0x0],rdx
    4cac:	mov    rcx,QWORD PTR [rsp+0x8]
    4cb1:	xor    rcx,QWORD PTR fs:0x28
    4cba:	jne    4edf <__cxa_finalize@plt+0x2967>
    4cc0:	add    rsp,0x18
    4cc4:	pop    rbx
    4cc5:	pop    rbp
    4cc6:	pop    r12
    4cc8:	pop    r13
    4cca:	ret    
    4ccb:	nop    DWORD PTR [rax+rax*1+0x0]
    4cd0:	mov    rax,QWORD PTR [rbx+0x18]
    4cd4:	test   rax,rax
    4cd7:	js     4d50 <__cxa_finalize@plt+0x27d8>
    4cd9:	pxor   xmm1,xmm1
    4cdd:	mov    rdx,QWORD PTR [rbx+0x28]
    4ce1:	cvtsi2ss xmm1,rax
    4ce6:	mov    rax,QWORD PTR [rbx+0x10]
    4cea:	test   rax,rax
    4ced:	js     4d7a <__cxa_finalize@plt+0x2802>
    4cf3:	pxor   xmm0,xmm0
    4cf7:	cvtsi2ss xmm0,rax
    4cfc:	mulss  xmm0,DWORD PTR [rdx+0x8]
    4d01:	ucomiss xmm1,xmm0
    4d04:	ja     4da0 <__cxa_finalize@plt+0x2828>
    4d0a:	mov    r12,QWORD PTR [rsp]
    4d0e:	cmp    QWORD PTR [r12],0x0
    4d13:	je     4e48 <__cxa_finalize@plt+0x28d0>
    4d19:	mov    rax,QWORD PTR [rbx+0x48]
    4d1d:	test   rax,rax
    4d20:	je     4e60 <__cxa_finalize@plt+0x28e8>
    4d26:	mov    rdx,QWORD PTR [rax+0x8]
    4d2a:	mov    QWORD PTR [rbx+0x48],rdx
    4d2e:	mov    rdx,QWORD PTR [r12+0x8]
    4d33:	mov    QWORD PTR [rax],rbp
    4d36:	mov    QWORD PTR [rax+0x8],rdx
    4d3a:	mov    QWORD PTR [r12+0x8],rax
    4d3f:	mov    eax,0x1
    4d44:	add    QWORD PTR [rbx+0x20],0x1
    4d49:	jmp    4cac <__cxa_finalize@plt+0x2734>
    4d4e:	xchg   ax,ax
    4d50:	mov    rdx,rax
    4d53:	pxor   xmm1,xmm1
    4d57:	and    eax,0x1
    4d5a:	shr    rdx,1
    4d5d:	or     rdx,rax
    4d60:	mov    rax,QWORD PTR [rbx+0x10]
    4d64:	cvtsi2ss xmm1,rdx
    4d69:	mov    rdx,QWORD PTR [rbx+0x28]
    4d6d:	test   rax,rax
    4d70:	addss  xmm1,xmm1
    4d74:	jns    4cf3 <__cxa_finalize@plt+0x277b>
    4d7a:	mov    rcx,rax
    4d7d:	pxor   xmm0,xmm0
    4d81:	shr    rcx,1
    4d84:	and    eax,0x1
    4d87:	or     rcx,rax
    4d8a:	cvtsi2ss xmm0,rcx
    4d8f:	addss  xmm0,xmm0
    4d93:	jmp    4cfc <__cxa_finalize@plt+0x2784>
    4d98:	nop    DWORD PTR [rax+rax*1+0x0]
    4da0:	lea    rdi,[rbx+0x28]
    4da4:	call   4090 <__cxa_finalize@plt+0x1b18>
    4da9:	mov    rax,QWORD PTR [rbx+0x10]
    4dad:	mov    rdx,QWORD PTR [rbx+0x28]
    4db1:	test   rax,rax
    4db4:	movss  xmm2,DWORD PTR [rdx+0x8]
    4db9:	js     4e80 <__cxa_finalize@plt+0x2908>
    4dbf:	pxor   xmm0,xmm0
    4dc3:	cvtsi2ss xmm0,rax
    4dc8:	mov    rax,QWORD PTR [rbx+0x18]
    4dcc:	test   rax,rax
    4dcf:	js     4ea0 <__cxa_finalize@plt+0x2928>
    4dd5:	pxor   xmm1,xmm1
    4dd9:	cvtsi2ss xmm1,rax
    4dde:	movaps xmm3,xmm2
    4de1:	mulss  xmm3,xmm0
    4de5:	ucomiss xmm1,xmm3
    4de8:	jbe    4d0a <__cxa_finalize@plt+0x2792>
    4dee:	cmp    BYTE PTR [rdx+0x10],0x0
    4df2:	mulss  xmm0,DWORD PTR [rdx+0xc]
    4df7:	jne    4dfd <__cxa_finalize@plt+0x2885>
    4df9:	mulss  xmm0,xmm2
    4dfd:	ucomiss xmm0,DWORD PTR [rip+0x6928]        # b72c <_IO_stdin_used@@Base+0x5ec>
    4e04:	jae    4e73 <__cxa_finalize@plt+0x28fb>
    4e06:	ucomiss xmm0,DWORD PTR [rip+0x6923]        # b730 <_IO_stdin_used@@Base+0x5f0>
    4e0d:	jae    4ec0 <__cxa_finalize@plt+0x2948>
    4e13:	cvttss2si rsi,xmm0
    4e18:	mov    rdi,rbx
    4e1b:	call   4a20 <__cxa_finalize@plt+0x24a8>
    4e20:	test   al,al
    4e22:	je     4e73 <__cxa_finalize@plt+0x28fb>
    4e24:	xor    ecx,ecx
    4e26:	mov    rdx,r12
    4e29:	mov    rsi,rbp
    4e2c:	mov    rdi,rbx
    4e2f:	call   3f70 <__cxa_finalize@plt+0x19f8>
    4e34:	test   rax,rax
    4e37:	je     4d0a <__cxa_finalize@plt+0x2792>
    4e3d:	call   2050 <abort@plt>
    4e42:	nop    WORD PTR [rax+rax*1+0x0]
    4e48:	mov    QWORD PTR [r12],rbp
    4e4c:	mov    eax,0x1
    4e51:	add    QWORD PTR [rbx+0x20],0x1
    4e56:	add    QWORD PTR [rbx+0x18],0x1
    4e5b:	jmp    4cac <__cxa_finalize@plt+0x2734>
    4e60:	mov    edi,0x10
    4e65:	call   2380 <malloc@plt>
    4e6a:	test   rax,rax
    4e6d:	jne    4d2e <__cxa_finalize@plt+0x27b6>
    4e73:	mov    eax,0xffffffff
    4e78:	jmp    4cac <__cxa_finalize@plt+0x2734>
    4e7d:	nop    DWORD PTR [rax]
    4e80:	mov    rcx,rax
    4e83:	pxor   xmm0,xmm0
    4e87:	shr    rcx,1
    4e8a:	and    eax,0x1
    4e8d:	or     rcx,rax
    4e90:	cvtsi2ss xmm0,rcx
    4e95:	addss  xmm0,xmm0
    4e99:	jmp    4dc8 <__cxa_finalize@plt+0x2850>
    4e9e:	xchg   ax,ax
    4ea0:	mov    rcx,rax
    4ea3:	pxor   xmm1,xmm1
    4ea7:	shr    rcx,1
    4eaa:	and    eax,0x1
    4ead:	or     rcx,rax
    4eb0:	cvtsi2ss xmm1,rcx
    4eb5:	addss  xmm1,xmm1
    4eb9:	jmp    4dde <__cxa_finalize@plt+0x2866>
    4ebe:	xchg   ax,ax
    4ec0:	subss  xmm0,DWORD PTR [rip+0x6868]        # b730 <_IO_stdin_used@@Base+0x5f0>
    4ec8:	movabs rax,0x8000000000000000
    4ed2:	cvttss2si rsi,xmm0
    4ed7:	xor    rsi,rax
    4eda:	jmp    4e18 <__cxa_finalize@plt+0x28a0>
    4edf:	call   2180 <__stack_chk_fail@plt>
    4ee4:	xchg   ax,ax
    4ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ef0:	push   rbx
    4ef1:	mov    rbx,rsi
    4ef4:	sub    rsp,0x10
    4ef8:	mov    rdx,rsp
    4efb:	mov    rax,QWORD PTR fs:0x28
    4f04:	mov    QWORD PTR [rsp+0x8],rax
    4f09:	xor    eax,eax
    4f0b:	call   4c60 <__cxa_finalize@plt+0x26e8>
    4f10:	cmp    eax,0xffffffff
    4f13:	je     4f40 <__cxa_finalize@plt+0x29c8>
    4f15:	test   eax,eax
    4f17:	jne    4f1d <__cxa_finalize@plt+0x29a5>
    4f19:	mov    rbx,QWORD PTR [rsp]
    4f1d:	mov    rcx,QWORD PTR [rsp+0x8]
    4f22:	xor    rcx,QWORD PTR fs:0x28
    4f2b:	mov    rax,rbx
    4f2e:	jne    4f44 <__cxa_finalize@plt+0x29cc>
    4f30:	add    rsp,0x10
    4f34:	pop    rbx
    4f35:	ret    
    4f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4f40:	xor    ebx,ebx
    4f42:	jmp    4f1d <__cxa_finalize@plt+0x29a5>
    4f44:	call   2180 <__stack_chk_fail@plt>
    4f49:	nop    DWORD PTR [rax+0x0]
    4f50:	push   r12
    4f52:	push   rbp
    4f53:	mov    ecx,0x1
    4f58:	push   rbx
    4f59:	mov    rbx,rdi
    4f5c:	sub    rsp,0x10
    4f60:	mov    rdx,rsp
    4f63:	mov    rax,QWORD PTR fs:0x28
    4f6c:	mov    QWORD PTR [rsp+0x8],rax
    4f71:	xor    eax,eax
    4f73:	call   3f70 <__cxa_finalize@plt+0x19f8>
    4f78:	test   rax,rax
    4f7b:	mov    rbp,rax
    4f7e:	je     4f8f <__cxa_finalize@plt+0x2a17>
    4f80:	mov    rax,QWORD PTR [rsp]
    4f84:	sub    QWORD PTR [rbx+0x20],0x1
    4f89:	cmp    QWORD PTR [rax],0x0
    4f8d:	je     4fb0 <__cxa_finalize@plt+0x2a38>
    4f8f:	mov    rcx,QWORD PTR [rsp+0x8]
    4f94:	xor    rcx,QWORD PTR fs:0x28
    4f9d:	mov    rax,rbp
    4fa0:	jne    514e <__cxa_finalize@plt+0x2bd6>
    4fa6:	add    rsp,0x10
    4faa:	pop    rbx
    4fab:	pop    rbp
    4fac:	pop    r12
    4fae:	ret    
    4faf:	nop
    4fb0:	mov    rax,QWORD PTR [rbx+0x18]
    4fb4:	sub    rax,0x1
    4fb8:	test   rax,rax
    4fbb:	mov    QWORD PTR [rbx+0x18],rax
    4fbf:	js     50c0 <__cxa_finalize@plt+0x2b48>
    4fc5:	pxor   xmm0,xmm0
    4fc9:	cvtsi2ss xmm0,rax
    4fce:	mov    rax,QWORD PTR [rbx+0x10]
    4fd2:	mov    rdx,QWORD PTR [rbx+0x28]
    4fd6:	test   rax,rax
    4fd9:	js     50a0 <__cxa_finalize@plt+0x2b28>
    4fdf:	pxor   xmm1,xmm1
    4fe3:	cvtsi2ss xmm1,rax
    4fe8:	mulss  xmm1,DWORD PTR [rdx]
    4fec:	ucomiss xmm1,xmm0
    4fef:	jbe    4f8f <__cxa_finalize@plt+0x2a17>
    4ff1:	lea    rdi,[rbx+0x28]
    4ff5:	call   4090 <__cxa_finalize@plt+0x1b18>
    4ffa:	mov    rax,QWORD PTR [rbx+0x10]
    4ffe:	mov    rdx,QWORD PTR [rbx+0x28]
    5002:	test   rax,rax
    5005:	js     5130 <__cxa_finalize@plt+0x2bb8>
    500b:	pxor   xmm0,xmm0
    500f:	cvtsi2ss xmm0,rax
    5014:	mov    rax,QWORD PTR [rbx+0x18]
    5018:	test   rax,rax
    501b:	js     5110 <__cxa_finalize@plt+0x2b98>
    5021:	pxor   xmm1,xmm1
    5025:	cvtsi2ss xmm1,rax
    502a:	movss  xmm2,DWORD PTR [rdx]
    502e:	mulss  xmm2,xmm0
    5032:	ucomiss xmm2,xmm1
    5035:	jbe    4f8f <__cxa_finalize@plt+0x2a17>
    503b:	cmp    BYTE PTR [rdx+0x10],0x0
    503f:	mulss  xmm0,DWORD PTR [rdx+0x4]
    5044:	je     5100 <__cxa_finalize@plt+0x2b88>
    504a:	ucomiss xmm0,DWORD PTR [rip+0x66df]        # b730 <_IO_stdin_used@@Base+0x5f0>
    5051:	jae    50e0 <__cxa_finalize@plt+0x2b68>
    5057:	cvttss2si rsi,xmm0
    505c:	mov    rdi,rbx
    505f:	call   4a20 <__cxa_finalize@plt+0x24a8>
    5064:	test   al,al
    5066:	jne    4f8f <__cxa_finalize@plt+0x2a17>
    506c:	mov    rdi,QWORD PTR [rbx+0x48]
    5070:	test   rdi,rdi
    5073:	je     5089 <__cxa_finalize@plt+0x2b11>
    5075:	nop    DWORD PTR [rax]
    5078:	mov    r12,QWORD PTR [rdi+0x8]
    507c:	call   2570 <free@plt>
    5081:	test   r12,r12
    5084:	mov    rdi,r12
    5087:	jne    5078 <__cxa_finalize@plt+0x2b00>
    5089:	mov    QWORD PTR [rbx+0x48],0x0
    5091:	jmp    4f8f <__cxa_finalize@plt+0x2a17>
    5096:	nop    WORD PTR cs:[rax+rax*1+0x0]
    50a0:	mov    rcx,rax
    50a3:	pxor   xmm1,xmm1
    50a7:	shr    rcx,1
    50aa:	and    eax,0x1
    50ad:	or     rcx,rax
    50b0:	cvtsi2ss xmm1,rcx
    50b5:	addss  xmm1,xmm1
    50b9:	jmp    4fe8 <__cxa_finalize@plt+0x2a70>
    50be:	xchg   ax,ax
    50c0:	mov    rdx,rax
    50c3:	pxor   xmm0,xmm0
    50c7:	shr    rdx,1
    50ca:	and    eax,0x1
    50cd:	or     rdx,rax
    50d0:	cvtsi2ss xmm0,rdx
    50d5:	addss  xmm0,xmm0
    50d9:	jmp    4fce <__cxa_finalize@plt+0x2a56>
    50de:	xchg   ax,ax
    50e0:	subss  xmm0,DWORD PTR [rip+0x6648]        # b730 <_IO_stdin_used@@Base+0x5f0>
    50e8:	movabs rax,0x8000000000000000
    50f2:	cvttss2si rsi,xmm0
    50f7:	xor    rsi,rax
    50fa:	jmp    505c <__cxa_finalize@plt+0x2ae4>
    50ff:	nop
    5100:	mulss  xmm0,DWORD PTR [rdx+0x8]
    5105:	jmp    504a <__cxa_finalize@plt+0x2ad2>
    510a:	nop    WORD PTR [rax+rax*1+0x0]
    5110:	mov    rcx,rax
    5113:	pxor   xmm1,xmm1
    5117:	shr    rcx,1
    511a:	and    eax,0x1
    511d:	or     rcx,rax
    5120:	cvtsi2ss xmm1,rcx
    5125:	addss  xmm1,xmm1
    5129:	jmp    502a <__cxa_finalize@plt+0x2ab2>
    512e:	xchg   ax,ax
    5130:	mov    rcx,rax
    5133:	pxor   xmm0,xmm0
    5137:	shr    rcx,1
    513a:	and    eax,0x1
    513d:	or     rcx,rax
    5140:	cvtsi2ss xmm0,rcx
    5145:	addss  xmm0,xmm0
    5149:	jmp    5014 <__cxa_finalize@plt+0x2a9c>
    514e:	call   2180 <__stack_chk_fail@plt>
    5153:	nop    WORD PTR cs:[rax+rax*1+0x0]
    515d:	nop    DWORD PTR [rax]
    5160:	push   rbp
    5161:	push   rbx
    5162:	mov    rbp,rdi
    5165:	mov    rbx,rsi
    5168:	sub    rsp,0x8
    516c:	mov    rdi,QWORD PTR [rdi]
    516f:	call   a810 <fts_children@@Base+0x590>
    5174:	xor    rax,QWORD PTR [rbp+0x8]
    5178:	xor    edx,edx
    517a:	add    rsp,0x8
    517e:	div    rbx
    5181:	pop    rbx
    5182:	pop    rbp
    5183:	mov    rax,rdx
    5186:	ret    
    5187:	nop    WORD PTR [rax+rax*1+0x0]
    5190:	mov    rax,QWORD PTR [rdi+0x8]
    5194:	xor    edx,edx
    5196:	div    rsi
    5199:	mov    rax,rdx
    519c:	ret    
    519d:	nop    DWORD PTR [rax]
    51a0:	xor    eax,eax
    51a2:	mov    rdx,QWORD PTR [rsi+0x8]
    51a6:	cmp    QWORD PTR [rdi+0x8],rdx
    51aa:	je     51b0 <__cxa_finalize@plt+0x2c38>
    51ac:	repz ret 
    51ae:	xchg   ax,ax
    51b0:	mov    rcx,QWORD PTR [rsi+0x10]
    51b4:	cmp    QWORD PTR [rdi+0x10],rcx
    51b8:	jne    51ac <__cxa_finalize@plt+0x2c34>
    51ba:	sub    rsp,0x8
    51be:	mov    rsi,QWORD PTR [rsi]
    51c1:	mov    rdi,QWORD PTR [rdi]
    51c4:	call   7510 <__cxa_finalize@plt+0x4f98>
    51c9:	add    rsp,0x8
    51cd:	ret    
    51ce:	xchg   ax,ax
    51d0:	xor    eax,eax
    51d2:	mov    rdx,QWORD PTR [rsi+0x8]
    51d6:	cmp    QWORD PTR [rdi+0x8],rdx
    51da:	je     51e0 <__cxa_finalize@plt+0x2c68>
    51dc:	repz ret 
    51de:	xchg   ax,ax
    51e0:	mov    rcx,QWORD PTR [rsi+0x10]
    51e4:	cmp    QWORD PTR [rdi+0x10],rcx
    51e8:	jne    51dc <__cxa_finalize@plt+0x2c64>
    51ea:	sub    rsp,0x8
    51ee:	mov    rsi,QWORD PTR [rsi]
    51f1:	mov    rdi,QWORD PTR [rdi]
    51f4:	call   22d0 <strcmp@plt>
    51f9:	test   eax,eax
    51fb:	sete   al
    51fe:	add    rsp,0x8
    5202:	ret    
    5203:	nop    DWORD PTR [rax]
    5206:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5210:	push   rbx
    5211:	mov    rbx,rdi
    5214:	mov    rdi,QWORD PTR [rdi]
    5217:	call   2570 <free@plt>
    521c:	mov    rdi,rbx
    521f:	pop    rbx
    5220:	jmp    2570 <free@plt>
    5225:	nop    WORD PTR cs:[rax+rax*1+0x0]
    522f:	nop
    5230:	push   rbp
    5231:	push   rbx
    5232:	mov    rbx,rdi
    5235:	sub    rsp,0x8
    5239:	movsx  eax,BYTE PTR [rdi]
    523c:	lea    edx,[rax-0x30]
    523f:	cmp    dl,0x7
    5242:	jbe    52f8 <__cxa_finalize@plt+0x2d80>
    5248:	test   al,al
    524a:	mov    rcx,rdi
    524d:	mov    edi,0x1
    5252:	je     527b <__cxa_finalize@plt+0x2d03>
    5254:	nop    DWORD PTR [rax+0x0]
    5258:	mov    edx,eax
    525a:	and    edx,0xffffffef
    525d:	cmp    dl,0x2d
    5260:	sete   dl
    5263:	cmp    al,0x2b
    5265:	sete   al
    5268:	add    rcx,0x1
    526c:	or     eax,edx
    526e:	movzx  eax,al
    5271:	add    rdi,rax
    5274:	movzx  eax,BYTE PTR [rcx]
    5277:	test   al,al
    5279:	jne    5258 <__cxa_finalize@plt+0x2ce0>
    527b:	mov    edx,0x10
    5280:	xor    ecx,ecx
    5282:	mov    rax,rdx
    5285:	mul    rdi
    5288:	jo     559f <__cxa_finalize@plt+0x3027>
    528e:	test   rax,rax
    5291:	js     55a9 <__cxa_finalize@plt+0x3031>
    5297:	test   rcx,rcx
    529a:	jne    55a9 <__cxa_finalize@plt+0x3031>
    52a0:	shl    rdi,0x4
    52a4:	lea    rbp,[rip+0x6495]        # b740 <_IO_stdin_used@@Base+0x600>
    52ab:	call   7c90 <__cxa_finalize@plt+0x5718>
    52b0:	xor    esi,esi
    52b2:	xor    r11d,r11d
    52b5:	movzx  r9d,BYTE PTR [rbx]
    52b9:	cmp    r9b,0x61
    52bd:	je     5510 <__cxa_finalize@plt+0x2f98>
    52c3:	jle    5330 <__cxa_finalize@plt+0x2db8>
    52c5:	cmp    r9b,0x6f
    52c9:	je     5540 <__cxa_finalize@plt+0x2fc8>
    52cf:	cmp    r9b,0x75
    52d3:	je     5530 <__cxa_finalize@plt+0x2fb8>
    52d9:	cmp    r9b,0x67
    52dd:	je     5520 <__cxa_finalize@plt+0x2fa8>
    52e3:	mov    rdi,rax
    52e6:	call   2570 <free@plt>
    52eb:	xor    eax,eax
    52ed:	add    rsp,0x8
    52f1:	pop    rbx
    52f2:	pop    rbp
    52f3:	ret    
    52f4:	nop    DWORD PTR [rax+0x0]
    52f8:	mov    rdx,rdi
    52fb:	xor    ebp,ebp
    52fd:	jmp    530f <__cxa_finalize@plt+0x2d97>
    52ff:	nop
    5300:	movsx  eax,BYTE PTR [rdx]
    5303:	lea    ecx,[rax-0x30]
    5306:	cmp    cl,0x7
    5309:	ja     5550 <__cxa_finalize@plt+0x2fd8>
    530f:	lea    ebp,[rax+rbp*8-0x30]
    5313:	add    rdx,0x1
    5317:	cmp    ebp,0xfff
    531d:	jbe    5300 <__cxa_finalize@plt+0x2d88>
    531f:	add    rsp,0x8
    5323:	xor    eax,eax
    5325:	pop    rbx
    5326:	pop    rbp
    5327:	ret    
    5328:	nop    DWORD PTR [rax+rax*1+0x0]
    5330:	cmp    r9b,0x2d
    5334:	je     5342 <__cxa_finalize@plt+0x2dca>
    5336:	cmp    r9b,0x3d
    533a:	je     5342 <__cxa_finalize@plt+0x2dca>
    533c:	cmp    r9b,0x2b
    5340:	jne    52e3 <__cxa_finalize@plt+0x2d6b>
    5342:	lea    rdi,[rsi+0x1]
    5346:	shl    rsi,0x4
    534a:	add    rsi,rax
    534d:	jmp    53b4 <__cxa_finalize@plt+0x2e3c>
    534f:	nop
    5350:	cmp    dl,0x6f
    5353:	lea    r8,[rbx+0x2]
    5357:	je     54f0 <__cxa_finalize@plt+0x2f78>
    535d:	cmp    dl,0x75
    5360:	mov    r10d,0x1c0
    5366:	jne    5440 <__cxa_finalize@plt+0x2ec8>
    536c:	mov    BYTE PTR [rsi],r9b
    536f:	mov    BYTE PTR [rsi+0x1],0x3
    5373:	movzx  r9d,BYTE PTR [rbx+0x2]
    5378:	mov    DWORD PTR [rsi+0x4],r11d
    537c:	mov    rbx,r8
    537f:	mov    DWORD PTR [rsi+0x8],r10d
    5383:	mov    edx,r10d
    5386:	and    edx,r11d
    5389:	test   r11d,r11d
    538c:	cmovne r10d,edx
    5390:	mov    edx,r9d
    5393:	mov    DWORD PTR [rsi+0xc],r10d
    5397:	add    rsi,0x10
    539b:	and    edx,0xffffffef
    539e:	lea    rcx,[rdi+0x1]
    53a2:	cmp    dl,0x2d
    53a5:	je     53b1 <__cxa_finalize@plt+0x2e39>
    53a7:	cmp    r9b,0x2b
    53ab:	jne    55b0 <__cxa_finalize@plt+0x3038>
    53b1:	mov    rdi,rcx
    53b4:	movsx  edx,BYTE PTR [rbx+0x1]
    53b8:	lea    rcx,[rbx+0x1]
    53bc:	cmp    dl,0x67
    53bf:	je     5500 <__cxa_finalize@plt+0x2f88>
    53c5:	jg     5350 <__cxa_finalize@plt+0x2dd8>
    53c7:	lea    r8d,[rdx-0x30]
    53cb:	cmp    r8b,0x7
    53cf:	ja     5440 <__cxa_finalize@plt+0x2ec8>
    53d1:	xor    r8d,r8d
    53d4:	nop    DWORD PTR [rax+0x0]
    53d8:	lea    r8d,[rdx+r8*8-0x30]
    53dd:	add    rcx,0x1
    53e1:	cmp    r8d,0xfff
    53e8:	ja     52e3 <__cxa_finalize@plt+0x2d6b>
    53ee:	movsx  edx,BYTE PTR [rcx]
    53f1:	lea    r10d,[rdx-0x30]
    53f5:	cmp    r10b,0x7
    53f9:	jbe    53d8 <__cxa_finalize@plt+0x2e60>
    53fb:	test   r11d,r11d
    53fe:	jne    52e3 <__cxa_finalize@plt+0x2d6b>
    5404:	test   dl,dl
    5406:	je     5411 <__cxa_finalize@plt+0x2e99>
    5408:	cmp    dl,0x2c
    540b:	jne    52e3 <__cxa_finalize@plt+0x2d6b>
    5411:	mov    BYTE PTR [rsi],r9b
    5414:	mov    BYTE PTR [rsi+0x1],0x1
    5418:	mov    r9d,edx
    541b:	mov    DWORD PTR [rsi+0x4],0xfff
    5422:	mov    DWORD PTR [rsi+0x8],r8d
    5426:	mov    rbx,rcx
    5429:	mov    r11d,0xfff
    542f:	mov    r10d,0xfff
    5435:	jmp    5390 <__cxa_finalize@plt+0x2e18>
    543a:	nop    WORD PTR [rax+rax*1+0x0]
    5440:	lea    r8d,[rdx-0x58]
    5444:	xor    r10d,r10d
    5447:	mov    ebx,0x1
    544c:	cmp    r8b,0x20
    5450:	ja     5489 <__cxa_finalize@plt+0x2f11>
    5452:	nop    WORD PTR [rax+rax*1+0x0]
    5458:	movzx  r8d,r8b
    545c:	movsxd r8,DWORD PTR [rbp+r8*4+0x0]
    5461:	add    r8,rbp
    5464:	jmp    r8
    5467:	nop    WORD PTR [rax+rax*1+0x0]
    5470:	mov    ebx,0x2
    5475:	nop    DWORD PTR [rax]
    5478:	add    rcx,0x1
    547c:	movzx  edx,BYTE PTR [rcx]
    547f:	lea    r8d,[rdx-0x58]
    5483:	cmp    r8b,0x20
    5487:	jbe    5458 <__cxa_finalize@plt+0x2ee0>
    5489:	mov    BYTE PTR [rsi],r9b
    548c:	mov    BYTE PTR [rsi+0x1],bl
    548f:	mov    r9d,edx
    5492:	mov    DWORD PTR [rsi+0x4],r11d
    5496:	mov    DWORD PTR [rsi+0x8],r10d
    549a:	mov    rbx,rcx
    549d:	jmp    5383 <__cxa_finalize@plt+0x2e0b>
    54a2:	nop    WORD PTR [rax+rax*1+0x0]
    54a8:	or     r10d,0x49
    54ac:	jmp    5478 <__cxa_finalize@plt+0x2f00>
    54ae:	xchg   ax,ax
    54b0:	or     r10b,0x92
    54b4:	jmp    5478 <__cxa_finalize@plt+0x2f00>
    54b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    54c0:	or     r10d,0x200
    54c7:	jmp    5478 <__cxa_finalize@plt+0x2f00>
    54c9:	nop    DWORD PTR [rax+0x0]
    54d0:	or     r10d,0xc00
    54d7:	jmp    5478 <__cxa_finalize@plt+0x2f00>
    54d9:	nop    DWORD PTR [rax+0x0]
    54e0:	or     r10d,0x124
    54e7:	jmp    5478 <__cxa_finalize@plt+0x2f00>
    54e9:	nop    DWORD PTR [rax+0x0]
    54f0:	mov    r10d,0x7
    54f6:	jmp    536c <__cxa_finalize@plt+0x2df4>
    54fb:	nop    DWORD PTR [rax+rax*1+0x0]
    5500:	lea    r8,[rbx+0x2]
    5504:	mov    r10d,0x38
    550a:	jmp    536c <__cxa_finalize@plt+0x2df4>
    550f:	nop
    5510:	mov    r11d,0xfff
    5516:	add    rbx,0x1
    551a:	jmp    52b5 <__cxa_finalize@plt+0x2d3d>
    551f:	nop
    5520:	or     r11d,0x438
    5527:	jmp    5516 <__cxa_finalize@plt+0x2f9e>
    5529:	nop    DWORD PTR [rax+0x0]
    5530:	or     r11d,0x9c0
    5537:	jmp    5516 <__cxa_finalize@plt+0x2f9e>
    5539:	nop    DWORD PTR [rax+0x0]
    5540:	or     r11d,0x207
    5547:	jmp    5516 <__cxa_finalize@plt+0x2f9e>
    5549:	nop    DWORD PTR [rax+0x0]
    5550:	test   al,al
    5552:	jne    531f <__cxa_finalize@plt+0x2da7>
    5558:	sub    rdx,rbx
    555b:	mov    ebx,ebp
    555d:	mov    eax,0xfff
    5562:	and    ebx,0xc00
    5568:	mov    edi,0x20
    556d:	or     ebx,0x3ff
    5573:	cmp    rdx,0x5
    5577:	cmovge ebx,eax
    557a:	call   7c90 <__cxa_finalize@plt+0x5718>
    557f:	mov    edx,0x13d
    5584:	mov    DWORD PTR [rax+0x4],0xfff
    558b:	mov    DWORD PTR [rax+0x8],ebp
    558e:	mov    WORD PTR [rax],dx
    5591:	mov    DWORD PTR [rax+0xc],ebx
    5594:	mov    BYTE PTR [rax+0x11],0x0
    5598:	add    rsp,0x8
    559c:	pop    rbx
    559d:	pop    rbp
    559e:	ret    
    559f:	mov    ecx,0x1
    55a4:	jmp    528e <__cxa_finalize@plt+0x2d16>
    55a9:	call   7ee0 <__cxa_finalize@plt+0x5968>
    55ae:	xchg   ax,ax
    55b0:	cmp    r9b,0x2c
    55b4:	jne    55c2 <__cxa_finalize@plt+0x304a>
    55b6:	add    rbx,0x1
    55ba:	mov    rsi,rdi
    55bd:	jmp    52b2 <__cxa_finalize@plt+0x2d3a>
    55c2:	test   r9b,r9b
    55c5:	jne    52e3 <__cxa_finalize@plt+0x2d6b>
    55cb:	shl    rdi,0x4
    55cf:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
    55d4:	jmp    52ed <__cxa_finalize@plt+0x2d75>
    55d9:	nop    DWORD PTR [rax+0x0]
    55e0:	push   rbx
    55e1:	mov    rsi,rdi
    55e4:	mov    edi,0x1
    55e9:	sub    rsp,0xa0
    55f0:	mov    rdx,rsp
    55f3:	mov    rax,QWORD PTR fs:0x28
    55fc:	mov    QWORD PTR [rsp+0x98],rax
    5604:	xor    eax,eax
    5606:	call   2350 <__xstat@plt>
    560b:	test   eax,eax
    560d:	jne    5660 <__cxa_finalize@plt+0x30e8>
    560f:	mov    ebx,DWORD PTR [rsp+0x18]
    5613:	mov    edi,0x20
    5618:	call   7c90 <__cxa_finalize@plt+0x5718>
    561d:	mov    edx,0x13d
    5622:	mov    DWORD PTR [rax+0x4],0xfff
    5629:	mov    DWORD PTR [rax+0xc],0xfff
    5630:	mov    WORD PTR [rax],dx
    5633:	mov    DWORD PTR [rax+0x8],ebx
    5636:	mov    BYTE PTR [rax+0x11],0x0
    563a:	mov    rcx,QWORD PTR [rsp+0x98]
    5642:	xor    rcx,QWORD PTR fs:0x28
    564b:	jne    5664 <__cxa_finalize@plt+0x30ec>
    564d:	add    rsp,0xa0
    5654:	pop    rbx
    5655:	ret    
    5656:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5660:	xor    eax,eax
    5662:	jmp    563a <__cxa_finalize@plt+0x30c2>
    5664:	call   2180 <__stack_chk_fail@plt>
    5669:	nop    DWORD PTR [rax+0x0]
    5670:	movzx  r10d,BYTE PTR [rcx+0x1]
    5675:	mov    eax,edi
    5677:	and    eax,0xfff
    567c:	test   r10b,r10b
    567f:	je     57d0 <__cxa_finalize@plt+0x3258>
    5685:	cmp    sil,0x1
    5689:	push   r12
    568b:	push   rbp
    568c:	push   rbx
    568d:	sbb    ebx,ebx
    568f:	movzx  ebp,sil
    5693:	not    ebx
    5695:	xor    r11d,r11d
    5698:	and    ebx,0xc00
    569e:	jmp    56da <__cxa_finalize@plt+0x3162>
    56a0:	mov    edi,r9d
    56a3:	or     edi,edx
    56a5:	not    edi
    56a7:	and    esi,edi
    56a9:	cmp    r12b,0x2d
    56ad:	je     57c0 <__cxa_finalize@plt+0x3248>
    56b3:	cmp    r12b,0x3d
    56b7:	je     576b <__cxa_finalize@plt+0x31f3>
    56bd:	cmp    r12b,0x2b
    56c1:	jne    56c8 <__cxa_finalize@plt+0x3150>
    56c3:	or     r11d,esi
    56c6:	or     eax,esi
    56c8:	add    rcx,0x10
    56cc:	movzx  r10d,BYTE PTR [rcx+0x1]
    56d1:	test   r10b,r10b
    56d4:	je     578c <__cxa_finalize@plt+0x3214>
    56da:	mov    r9d,DWORD PTR [rcx+0xc]
    56de:	mov    edi,DWORD PTR [rcx+0x4]
    56e1:	mov    esi,DWORD PTR [rcx+0x8]
    56e4:	not    r9d
    56e7:	and    r9d,ebx
    56ea:	cmp    r10b,0x2
    56ee:	je     57a0 <__cxa_finalize@plt+0x3228>
    56f4:	cmp    r10b,0x3
    56f8:	jne    5738 <__cxa_finalize@plt+0x31c0>
    56fa:	and    esi,eax
    56fc:	mov    r10d,esi
    56ff:	and    r10d,0x124
    5706:	cmp    r10d,0x1
    570a:	sbb    r10d,r10d
    570d:	not    r10d
    5710:	and    r10d,0x124
    5717:	mov    r12d,r10d
    571a:	or     r12b,0x92
    571e:	test   sil,0x92
    5722:	cmovne r10d,r12d
    5726:	mov    r12d,r10d
    5729:	or     r12d,0x49
    572d:	test   sil,0x49
    5731:	cmovne r10d,r12d
    5735:	or     esi,r10d
    5738:	mov    r10d,r9d
    573b:	test   edi,edi
    573d:	movzx  r12d,BYTE PTR [rcx]
    5741:	not    r10d
    5744:	je     56a0 <__cxa_finalize@plt+0x3128>
    574a:	and    r10d,edi
    574d:	and    esi,r10d
    5750:	cmp    r12b,0x2d
    5754:	je     57c0 <__cxa_finalize@plt+0x3248>
    5756:	cmp    r12b,0x3d
    575a:	jne    56bd <__cxa_finalize@plt+0x3145>
    5760:	not    edi
    5762:	or     r9d,edi
    5765:	mov    r10d,r9d
    5768:	not    r10d
    576b:	and    r10d,0xfff
    5772:	add    rcx,0x10
    5776:	and    eax,r9d
    5779:	or     r11d,r10d
    577c:	movzx  r10d,BYTE PTR [rcx+0x1]
    5781:	or     eax,esi
    5783:	test   r10b,r10b
    5786:	jne    56da <__cxa_finalize@plt+0x3162>
    578c:	test   r8,r8
    578f:	je     5794 <__cxa_finalize@plt+0x321c>
    5791:	mov    DWORD PTR [r8],r11d
    5794:	pop    rbx
    5795:	pop    rbp
    5796:	pop    r12
    5798:	ret    
    5799:	nop    DWORD PTR [rax+0x0]
    57a0:	mov    r12d,eax
    57a3:	mov    r10d,esi
    57a6:	and    r12d,0x49
    57aa:	or     r10d,0x49
    57ae:	or     r12d,ebp
    57b1:	cmovne esi,r10d
    57b5:	jmp    5738 <__cxa_finalize@plt+0x31c0>
    57b7:	nop    WORD PTR [rax+rax*1+0x0]
    57c0:	or     r11d,esi
    57c3:	not    esi
    57c5:	and    eax,esi
    57c7:	jmp    56c8 <__cxa_finalize@plt+0x3150>
    57cc:	nop    DWORD PTR [rax+0x0]
    57d0:	xor    r11d,r11d
    57d3:	test   r8,r8
    57d6:	je     57db <__cxa_finalize@plt+0x3263>
    57d8:	mov    DWORD PTR [r8],r11d
    57db:	repz ret 
    57dd:	nop    DWORD PTR [rax]
    57e0:	test   rdi,rdi
    57e3:	push   rbx
    57e4:	je     5857 <__cxa_finalize@plt+0x32df>
    57e6:	mov    esi,0x2f
    57eb:	mov    rbx,rdi
    57ee:	call   21d0 <strrchr@plt>
    57f3:	test   rax,rax
    57f6:	je     5847 <__cxa_finalize@plt+0x32cf>
    57f8:	lea    rdx,[rax+0x1]
    57fc:	mov    rcx,rdx
    57ff:	sub    rcx,rbx
    5802:	cmp    rcx,0x6
    5806:	jle    5847 <__cxa_finalize@plt+0x32cf>
    5808:	lea    rsi,[rax-0x6]
    580c:	lea    rdi,[rip+0x5fed]        # b800 <_IO_stdin_used@@Base+0x6c0>
    5813:	mov    ecx,0x7
    5818:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    581a:	jne    5847 <__cxa_finalize@plt+0x32cf>
    581c:	lea    rdi,[rip+0x5fe5]        # b808 <_IO_stdin_used@@Base+0x6c8>
    5823:	mov    ecx,0x3
    5828:	mov    rsi,rdx
    582b:	mov    rbx,rdx
    582e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5830:	seta   sil
    5834:	setb   cl
    5837:	cmp    sil,cl
    583a:	jne    5847 <__cxa_finalize@plt+0x32cf>
    583c:	lea    rbx,[rax+0x4]
    5840:	mov    QWORD PTR [rip+0x209839],rbx        # 20f080 <__progname@@GLIBC_2.2.5>
    5847:	mov    QWORD PTR [rip+0x209892],rbx        # 20f0e0 <program_name@@Base>
    584e:	mov    QWORD PTR [rip+0x209853],rbx        # 20f0a8 <__progname_full@@GLIBC_2.2.5>
    5855:	pop    rbx
    5856:	ret    
    5857:	mov    rcx,QWORD PTR [rip+0x209862]        # 20f0c0 <stderr@@GLIBC_2.2.5>
    585e:	lea    rdi,[rip+0x5f63]        # b7c8 <_IO_stdin_used@@Base+0x688>
    5865:	mov    edx,0x37
    586a:	mov    esi,0x1
    586f:	call   24f0 <fwrite@plt>
    5874:	call   2050 <abort@plt>
    5879:	nop    DWORD PTR [rax+0x0]
    5880:	push   rbp
    5881:	push   rbx
    5882:	mov    rbp,rdi
    5885:	mov    ebx,esi
    5887:	sub    rsp,0x8
    588b:	call   a900 <fts_children@@Base+0x680>
    5890:	movzx  edx,BYTE PTR [rax]
    5893:	and    edx,0xffffffdf
    5896:	cmp    dl,0x55
    5899:	je     5910 <__cxa_finalize@plt+0x3398>
    589b:	cmp    dl,0x47
    589e:	je     58c0 <__cxa_finalize@plt+0x3348>
    58a0:	lea    rax,[rip+0x5f74]        # b81b <_IO_stdin_used@@Base+0x6db>
    58a7:	lea    rdx,[rip+0x5f6f]        # b81d <_IO_stdin_used@@Base+0x6dd>
    58ae:	cmp    ebx,0x9
    58b1:	cmovne rax,rdx
    58b5:	add    rsp,0x8
    58b9:	pop    rbx
    58ba:	pop    rbp
    58bb:	ret    
    58bc:	nop    DWORD PTR [rax+0x0]
    58c0:	movzx  edx,BYTE PTR [rax+0x1]
    58c4:	and    edx,0xffffffdf
    58c7:	cmp    dl,0x42
    58ca:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58cc:	cmp    BYTE PTR [rax+0x2],0x31
    58d0:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58d2:	cmp    BYTE PTR [rax+0x3],0x38
    58d6:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58d8:	cmp    BYTE PTR [rax+0x4],0x30
    58dc:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58de:	cmp    BYTE PTR [rax+0x5],0x33
    58e2:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58e4:	cmp    BYTE PTR [rax+0x6],0x30
    58e8:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58ea:	cmp    BYTE PTR [rax+0x7],0x0
    58ee:	jne    58a0 <__cxa_finalize@plt+0x3328>
    58f0:	cmp    BYTE PTR [rbp+0x0],0x60
    58f4:	lea    rax,[rip+0x5f19]        # b814 <_IO_stdin_used@@Base+0x6d4>
    58fb:	lea    rdx,[rip+0x5f16]        # b818 <_IO_stdin_used@@Base+0x6d8>
    5902:	cmovne rax,rdx
    5906:	add    rsp,0x8
    590a:	pop    rbx
    590b:	pop    rbp
    590c:	ret    
    590d:	nop    DWORD PTR [rax]
    5910:	movzx  edx,BYTE PTR [rax+0x1]
    5914:	and    edx,0xffffffdf
    5917:	cmp    dl,0x54
    591a:	jne    58a0 <__cxa_finalize@plt+0x3328>
    591c:	movzx  edx,BYTE PTR [rax+0x2]
    5920:	and    edx,0xffffffdf
    5923:	cmp    dl,0x46
    5926:	jne    58a0 <__cxa_finalize@plt+0x3328>
    592c:	cmp    BYTE PTR [rax+0x3],0x2d
    5930:	jne    58a0 <__cxa_finalize@plt+0x3328>
    5936:	cmp    BYTE PTR [rax+0x4],0x38
    593a:	jne    58a0 <__cxa_finalize@plt+0x3328>
    5940:	cmp    BYTE PTR [rax+0x5],0x0
    5944:	jne    58a0 <__cxa_finalize@plt+0x3328>
    594a:	cmp    BYTE PTR [rbp+0x0],0x60
    594e:	lea    rax,[rip+0x5eb7]        # b80c <_IO_stdin_used@@Base+0x6cc>
    5955:	lea    rdx,[rip+0x5eb4]        # b810 <_IO_stdin_used@@Base+0x6d0>
    595c:	cmovne rax,rdx
    5960:	add    rsp,0x8
    5964:	pop    rbx
    5965:	pop    rbp
    5966:	ret    
    5967:	nop    WORD PTR [rax+rax*1+0x0]
    5970:	push   r15
    5972:	push   r14
    5974:	mov    r15d,r8d
    5977:	push   r13
    5979:	push   r12
    597b:	mov    r14,rdi
    597e:	push   rbp
    597f:	push   rbx
    5980:	mov    ebx,r9d
    5983:	mov    r13,rsi
    5986:	mov    rbp,rcx
    5989:	and    ebx,0x2
    598c:	sub    rsp,0xb8
    5993:	mov    rax,QWORD PTR [rsp+0xf0]
    599b:	mov    QWORD PTR [rsp+0x10],rdx
    59a0:	mov    DWORD PTR [rsp+0x8],r8d
    59a5:	mov    DWORD PTR [rsp+0x78],r9d
    59aa:	mov    QWORD PTR [rsp+0x20],rax
    59af:	mov    rax,QWORD PTR [rsp+0xf8]
    59b7:	mov    QWORD PTR [rsp+0x68],rax
    59bc:	mov    rax,QWORD PTR [rsp+0x100]
    59c4:	mov    QWORD PTR [rsp+0x60],rax
    59c9:	mov    rax,QWORD PTR fs:0x28
    59d2:	mov    QWORD PTR [rsp+0xa8],rax
    59da:	xor    eax,eax
    59dc:	call   2140 <__ctype_get_mb_cur_max@plt>
    59e1:	cmp    r15d,0xa
    59e5:	mov    QWORD PTR [rsp+0x58],rax
    59ea:	ja     6b9f <__cxa_finalize@plt+0x4627>
    59f0:	lea    rcx,[rip+0x5e89]        # b880 <_IO_stdin_used@@Base+0x740>
    59f7:	mov    edx,r15d
    59fa:	movsxd rax,DWORD PTR [rcx+rdx*4]
    59fe:	add    rax,rcx
    5a01:	jmp    rax
    5a03:	mov    BYTE PTR [rsp+0xe],0x1
    5a08:	mov    BYTE PTR [rsp+0x7c],0x0
    5a0d:	xor    r12d,r12d
    5a10:	mov    QWORD PTR [rsp+0x50],0x0
    5a19:	mov    BYTE PTR [rsp+0xf],0x1
    5a1e:	mov    BYTE PTR [rsp+0xd],0x0
    5a23:	lea    rax,[rip+0x5df3]        # b81d <_IO_stdin_used@@Base+0x6dd>
    5a2a:	mov    QWORD PTR [rsp+0x18],0x1
    5a33:	xor    r15d,r15d
    5a36:	mov    DWORD PTR [rsp+0x8],0x2
    5a3e:	mov    QWORD PTR [rsp+0x48],rax
    5a43:	xor    r11d,r11d
    5a46:	mov    rax,rbp
    5a49:	mov    r8d,r12d
    5a4c:	mov    rbp,r11
    5a4f:	mov    r11,rax
    5a52:	nop    WORD PTR [rax+rax*1+0x0]
    5a58:	cmp    r11,rbp
    5a5b:	setne  r12b
    5a5f:	cmp    r11,0xffffffffffffffff
    5a63:	jne    5a72 <__cxa_finalize@plt+0x34fa>
    5a65:	mov    rax,QWORD PTR [rsp+0x10]
    5a6a:	cmp    BYTE PTR [rax+rbp*1],0x0
    5a6e:	setne  r12b
    5a72:	test   r12b,r12b
    5a75:	je     60d0 <__cxa_finalize@plt+0x3b58>
    5a7b:	cmp    DWORD PTR [rsp+0x8],0x2
    5a80:	mov    rdi,QWORD PTR [rsp+0x10]
    5a85:	lea    r9,[rdi+rbp*1]
    5a89:	setne  al
    5a8c:	and    al,BYTE PTR [rsp+0xd]
    5a90:	mov    r10d,eax
    5a93:	je     5b40 <__cxa_finalize@plt+0x35c8>
    5a99:	mov    rax,QWORD PTR [rsp+0x18]
    5a9e:	test   rax,rax
    5aa1:	je     5ed0 <__cxa_finalize@plt+0x3958>
    5aa7:	cmp    r11,0xffffffffffffffff
    5aab:	lea    rbx,[rbp+rax*1+0x0]
    5ab0:	jne    5ae0 <__cxa_finalize@plt+0x3568>
    5ab2:	cmp    rax,0x1
    5ab6:	jbe    5ae0 <__cxa_finalize@plt+0x3568>
    5ab8:	mov    BYTE PTR [rsp+0x38],r8b
    5abd:	mov    BYTE PTR [rsp+0x30],r10b
    5ac2:	mov    QWORD PTR [rsp+0x28],r9
    5ac7:	call   2150 <strlen@plt>
    5acc:	movzx  r8d,BYTE PTR [rsp+0x38]
    5ad2:	movzx  r10d,BYTE PTR [rsp+0x30]
    5ad8:	mov    r11,rax
    5adb:	mov    r9,QWORD PTR [rsp+0x28]
    5ae0:	cmp    rbx,r11
    5ae3:	mov    BYTE PTR [rsp+0x28],r10b
    5ae8:	ja     60a0 <__cxa_finalize@plt+0x3b28>
    5aee:	mov    rdx,QWORD PTR [rsp+0x18]
    5af3:	mov    rsi,QWORD PTR [rsp+0x48]
    5af8:	mov    rdi,r9
    5afb:	mov    QWORD PTR [rsp+0x40],r11
    5b00:	mov    BYTE PTR [rsp+0x38],r8b
    5b05:	mov    QWORD PTR [rsp+0x30],r9
    5b0a:	call   2290 <memcmp@plt>
    5b0f:	test   eax,eax
    5b11:	mov    r9,QWORD PTR [rsp+0x30]
    5b16:	movzx  r8d,BYTE PTR [rsp+0x38]
    5b1c:	mov    r11,QWORD PTR [rsp+0x40]
    5b21:	jne    60a0 <__cxa_finalize@plt+0x3b28>
    5b27:	cmp    BYTE PTR [rsp+0xf],0x0
    5b2c:	movzx  r10d,BYTE PTR [rsp+0x28]
    5b32:	jne    6ab5 <__cxa_finalize@plt+0x453d>
    5b38:	nop    DWORD PTR [rax+rax*1+0x0]
    5b40:	movzx  ebx,BYTE PTR [r9]
    5b44:	cmp    bl,0x7e
    5b47:	ja     5e68 <__cxa_finalize@plt+0x38f0>
    5b4d:	lea    rcx,[rip+0x5d58]        # b8ac <_IO_stdin_used@@Base+0x76c>
    5b54:	movzx  edx,bl
    5b57:	movsxd rax,DWORD PTR [rcx+rdx*4]
    5b5b:	add    rax,rcx
    5b5e:	jmp    rax
    5b60:	xor    r10d,r10d
    5b63:	cmp    r11,0x1
    5b67:	setne  al
    5b6a:	cmp    r11,0xffffffffffffffff
    5b6e:	jne    5b7c <__cxa_finalize@plt+0x3604>
    5b70:	mov    rax,QWORD PTR [rsp+0x10]
    5b75:	cmp    BYTE PTR [rax+0x1],0x0
    5b79:	setne  al
    5b7c:	cmp    DWORD PTR [rsp+0x8],0x2
    5b81:	sete   dl
    5b84:	test   al,al
    5b86:	je     5dd8 <__cxa_finalize@plt+0x3860>
    5b8c:	xor    r12d,r12d
    5b8f:	xor    eax,eax
    5b91:	nop    DWORD PTR [rax+0x0]
    5b98:	cmp    BYTE PTR [rsp+0xd],0x1
    5b9d:	jne    5cb2 <__cxa_finalize@plt+0x373a>
    5ba3:	test   dl,dl
    5ba5:	jne    5cb2 <__cxa_finalize@plt+0x373a>
    5bab:	mov    rsi,QWORD PTR [rsp+0x20]
    5bb0:	test   rsi,rsi
    5bb3:	je     5bc9 <__cxa_finalize@plt+0x3651>
    5bb5:	mov    edx,ebx
    5bb7:	shr    dl,0x5
    5bba:	movzx  edx,dl
    5bbd:	mov    edx,DWORD PTR [rsi+rdx*4]
    5bc0:	bt     edx,ebx
    5bc3:	jb     5d13 <__cxa_finalize@plt+0x379b>
    5bc9:	test   r10b,r10b
    5bcc:	jne    5d13 <__cxa_finalize@plt+0x379b>
    5bd2:	xor    eax,0x1
    5bd5:	add    rbp,0x1
    5bd9:	and    eax,r8d
    5bdc:	test   al,al
    5bde:	je     5c00 <__cxa_finalize@plt+0x3688>
    5be0:	cmp    r13,r15
    5be3:	jbe    5bea <__cxa_finalize@plt+0x3672>
    5be5:	mov    BYTE PTR [r14+r15*1],0x27
    5bea:	lea    rax,[r15+0x1]
    5bee:	cmp    r13,rax
    5bf1:	jbe    5bf9 <__cxa_finalize@plt+0x3681>
    5bf3:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    5bf9:	add    r15,0x2
    5bfd:	xor    r8d,r8d
    5c00:	cmp    r15,r13
    5c03:	jae    5c09 <__cxa_finalize@plt+0x3691>
    5c05:	mov    BYTE PTR [r14+r15*1],bl
    5c09:	movzx  edi,BYTE PTR [rsp+0xe]
    5c0e:	add    r15,0x1
    5c12:	mov    eax,0x0
    5c17:	test   r12b,r12b
    5c1a:	cmove  edi,eax
    5c1d:	mov    BYTE PTR [rsp+0xe],dil
    5c22:	jmp    5a58 <__cxa_finalize@plt+0x34e0>
    5c27:	nop    WORD PTR [rax+rax*1+0x0]
    5c30:	xor    r10d,r10d
    5c33:	mov    eax,DWORD PTR [rsp+0x8]
    5c37:	cmp    eax,0x2
    5c3a:	je     61f8 <__cxa_finalize@plt+0x3c80>
    5c40:	cmp    eax,0x5
    5c43:	je     61b8 <__cxa_finalize@plt+0x3c40>
    5c49:	cmp    eax,0x2
    5c4c:	mov    ebx,0x3f
    5c51:	sete   dl
    5c54:	xor    r12d,r12d
    5c57:	xor    eax,eax
    5c59:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    5c5e:	xchg   ax,ax
    5c60:	xor    r10d,r10d
    5c63:	cmp    DWORD PTR [rsp+0x8],0x2
    5c68:	je     6170 <__cxa_finalize@plt+0x3bf8>
    5c6e:	mov    BYTE PTR [rsp+0x7c],r12b
    5c73:	xor    edx,edx
    5c75:	xor    eax,eax
    5c77:	mov    ebx,0x27
    5c7c:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    5c81:	nop    DWORD PTR [rax+0x0]
    5c88:	mov    edx,0x9
    5c8d:	mov    ebx,0x74
    5c92:	cmp    DWORD PTR [rsp+0x8],0x2
    5c97:	sete   al
    5c9a:	and    al,BYTE PTR [rsp+0xf]
    5c9e:	jne    5dee <__cxa_finalize@plt+0x3876>
    5ca4:	cmp    BYTE PTR [rsp+0xd],0x0
    5ca9:	jne    5d10 <__cxa_finalize@plt+0x3798>
    5cab:	mov    ebx,edx
    5cad:	xor    r12d,r12d
    5cb0:	xor    eax,eax
    5cb2:	cmp    BYTE PTR [rsp+0xf],0x0
    5cb7:	jne    5bab <__cxa_finalize@plt+0x3633>
    5cbd:	jmp    5bc9 <__cxa_finalize@plt+0x3651>
    5cc2:	nop    WORD PTR [rax+rax*1+0x0]
    5cc8:	mov    edx,0x8
    5ccd:	mov    ebx,0x62
    5cd2:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5cd4:	nop    DWORD PTR [rax+0x0]
    5cd8:	cmp    DWORD PTR [rsp+0x8],0x2
    5cdd:	je     60b0 <__cxa_finalize@plt+0x3b38>
    5ce3:	cmp    BYTE PTR [rsp+0xd],0x0
    5ce8:	je     5f00 <__cxa_finalize@plt+0x3988>
    5cee:	cmp    BYTE PTR [rsp+0xf],0x0
    5cf3:	je     5f00 <__cxa_finalize@plt+0x3988>
    5cf9:	cmp    QWORD PTR [rsp+0x18],0x0
    5cff:	jne    60bb <__cxa_finalize@plt+0x3b43>
    5d05:	mov    ebx,0x5c
    5d0a:	nop    WORD PTR [rax+rax*1+0x0]
    5d10:	xor    r12d,r12d
    5d13:	cmp    DWORD PTR [rsp+0x8],0x2
    5d18:	sete   dl
    5d1b:	cmp    BYTE PTR [rsp+0xf],0x0
    5d20:	mov    eax,edx
    5d22:	jne    6578 <__cxa_finalize@plt+0x4000>
    5d28:	mov    eax,r8d
    5d2b:	xor    eax,0x1
    5d2e:	and    al,dl
    5d30:	je     5d61 <__cxa_finalize@plt+0x37e9>
    5d32:	cmp    r13,r15
    5d35:	jbe    5d3c <__cxa_finalize@plt+0x37c4>
    5d37:	mov    BYTE PTR [r14+r15*1],0x27
    5d3c:	lea    rdx,[r15+0x1]
    5d40:	cmp    r13,rdx
    5d43:	jbe    5d4b <__cxa_finalize@plt+0x37d3>
    5d45:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    5d4b:	lea    rdx,[r15+0x2]
    5d4f:	cmp    r13,rdx
    5d52:	jbe    5d5a <__cxa_finalize@plt+0x37e2>
    5d54:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    5d5a:	add    r15,0x3
    5d5e:	mov    r8d,eax
    5d61:	cmp    r13,r15
    5d64:	jbe    5d6b <__cxa_finalize@plt+0x37f3>
    5d66:	mov    BYTE PTR [r14+r15*1],0x5c
    5d6b:	add    r15,0x1
    5d6f:	add    rbp,0x1
    5d73:	jmp    5c00 <__cxa_finalize@plt+0x3688>
    5d78:	nop    DWORD PTR [rax+rax*1+0x0]
    5d80:	cmp    BYTE PTR [rsp+0xd],0x0
    5d85:	jne    5f53 <__cxa_finalize@plt+0x39db>
    5d8b:	xor    edx,edx
    5d8d:	test   BYTE PTR [rsp+0x78],0x1
    5d92:	je     5cab <__cxa_finalize@plt+0x3733>
    5d98:	add    rbp,0x1
    5d9c:	jmp    5a58 <__cxa_finalize@plt+0x34e0>
    5da1:	nop    DWORD PTR [rax+0x0]
    5da8:	cmp    DWORD PTR [rsp+0x8],0x2
    5dad:	sete   dl
    5db0:	xor    eax,eax
    5db2:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    5db7:	nop    WORD PTR [rax+rax*1+0x0]
    5dc0:	mov    edx,0x7
    5dc5:	mov    ebx,0x61
    5dca:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5dcf:	nop
    5dd0:	cmp    DWORD PTR [rsp+0x8],0x2
    5dd5:	sete   dl
    5dd8:	test   rbp,rbp
    5ddb:	jne    5b8c <__cxa_finalize@plt+0x3614>
    5de1:	movzx  eax,BYTE PTR [rsp+0xf]
    5de6:	and    al,dl
    5de8:	je     5b98 <__cxa_finalize@plt+0x3620>
    5dee:	mov    rbp,r11
    5df1:	mov    DWORD PTR [rsp+0x8],0x2
    5df9:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    5dfe:	xchg   ax,ax
    5e00:	cmp    DWORD PTR [rsp+0x8],0x2
    5e05:	sete   dl
    5e08:	xor    r12d,r12d
    5e0b:	jmp    5de1 <__cxa_finalize@plt+0x3869>
    5e0d:	nop    DWORD PTR [rax]
    5e10:	cmp    DWORD PTR [rsp+0x8],0x2
    5e15:	mov    ebx,0x20
    5e1a:	sete   dl
    5e1d:	jmp    5de1 <__cxa_finalize@plt+0x3869>
    5e1f:	nop
    5e20:	mov    edx,0xd
    5e25:	mov    ebx,0x72
    5e2a:	jmp    5c92 <__cxa_finalize@plt+0x371a>
    5e2f:	nop
    5e30:	mov    edx,0xc
    5e35:	mov    ebx,0x66
    5e3a:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5e3f:	nop
    5e40:	mov    edx,0xb
    5e45:	mov    ebx,0x76
    5e4a:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5e4f:	nop
    5e50:	mov    edx,0xa
    5e55:	mov    ebx,0x6e
    5e5a:	jmp    5c92 <__cxa_finalize@plt+0x371a>
    5e5f:	nop
    5e60:	xor    r10d,r10d
    5e63:	nop    DWORD PTR [rax+rax*1+0x0]
    5e68:	cmp    QWORD PTR [rsp+0x58],0x1
    5e6e:	jne    6218 <__cxa_finalize@plt+0x3ca0>
    5e74:	mov    QWORD PTR [rsp+0x38],r11
    5e79:	mov    BYTE PTR [rsp+0x30],r8b
    5e7e:	mov    BYTE PTR [rsp+0x28],r10b
    5e83:	call   2560 <__ctype_b_loc@plt>
    5e88:	mov    rcx,QWORD PTR [rax]
    5e8b:	movzx  edx,bl
    5e8e:	movzx  r10d,BYTE PTR [rsp+0x28]
    5e94:	movzx  r8d,BYTE PTR [rsp+0x30]
    5e9a:	mov    r11,QWORD PTR [rsp+0x38]
    5e9f:	mov    edi,0x1
    5ea4:	movzx  eax,WORD PTR [rcx+rdx*2]
    5ea8:	and    ax,0x4000
    5eac:	setne  r12b
    5eb0:	sete   al
    5eb3:	and    al,BYTE PTR [rsp+0xd]
    5eb7:	test   al,al
    5eb9:	jne    6851 <__cxa_finalize@plt+0x42d9>
    5ebf:	cmp    DWORD PTR [rsp+0x8],0x2
    5ec4:	sete   dl
    5ec7:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    5ecc:	nop    DWORD PTR [rax+0x0]
    5ed0:	movzx  ebx,BYTE PTR [r9]
    5ed4:	cmp    bl,0x7e
    5ed7:	ja     5e60 <__cxa_finalize@plt+0x38e8>
    5ed9:	lea    rcx,[rip+0x5bc8]        # baa8 <_IO_stdin_used@@Base+0x968>
    5ee0:	movzx  edx,bl
    5ee3:	movsxd rax,DWORD PTR [rcx+rdx*4]
    5ee7:	add    rax,rcx
    5eea:	jmp    rax
    5eec:	nop    DWORD PTR [rax+0x0]
    5ef0:	xor    r10d,r10d
    5ef3:	cmp    BYTE PTR [rsp+0xd],0x0
    5ef8:	jne    5cee <__cxa_finalize@plt+0x3776>
    5efe:	xchg   ax,ax
    5f00:	mov    edx,0x5c
    5f05:	mov    ebx,0x5c
    5f0a:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5f0f:	nop
    5f10:	mov    edx,0xc
    5f15:	xor    r10d,r10d
    5f18:	mov    ebx,0x66
    5f1d:	jmp    5ca4 <__cxa_finalize@plt+0x372c>
    5f22:	nop    WORD PTR [rax+rax*1+0x0]
    5f28:	mov    edx,0xa
    5f2d:	xor    r10d,r10d
    5f30:	mov    ebx,0x6e
    5f35:	jmp    5c92 <__cxa_finalize@plt+0x371a>
    5f3a:	nop    WORD PTR [rax+rax*1+0x0]
    5f40:	mov    ebx,0x61
    5f45:	jmp    5d10 <__cxa_finalize@plt+0x3798>
    5f4a:	nop    WORD PTR [rax+rax*1+0x0]
    5f50:	xor    r10d,r10d
    5f53:	cmp    DWORD PTR [rsp+0x8],0x2
    5f58:	sete   dl
    5f5b:	cmp    BYTE PTR [rsp+0xf],0x0
    5f60:	jne    6afa <__cxa_finalize@plt+0x4582>
    5f66:	mov    eax,r8d
    5f69:	mov    rcx,r15
    5f6c:	xor    eax,0x1
    5f6f:	and    al,dl
    5f71:	je     5fa0 <__cxa_finalize@plt+0x3a28>
    5f73:	cmp    r13,r15
    5f76:	jbe    5f7d <__cxa_finalize@plt+0x3a05>
    5f78:	mov    BYTE PTR [r14+r15*1],0x27
    5f7d:	lea    rcx,[r15+0x1]
    5f81:	cmp    r13,rcx
    5f84:	jbe    5f8c <__cxa_finalize@plt+0x3a14>
    5f86:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    5f8c:	lea    rcx,[r15+0x2]
    5f90:	cmp    r13,rcx
    5f93:	ja     65c9 <__cxa_finalize@plt+0x4051>
    5f99:	lea    rcx,[r15+0x3]
    5f9d:	mov    r8d,eax
    5fa0:	cmp    r13,rcx
    5fa3:	jbe    5faa <__cxa_finalize@plt+0x3a32>
    5fa5:	mov    BYTE PTR [r14+rcx*1],0x5c
    5faa:	cmp    DWORD PTR [rsp+0x8],0x2
    5faf:	lea    r15,[rcx+0x1]
    5fb3:	je     65b9 <__cxa_finalize@plt+0x4041>
    5fb9:	lea    rax,[rbp+0x1]
    5fbd:	cmp    rax,r11
    5fc0:	jae    5fdb <__cxa_finalize@plt+0x3a63>
    5fc2:	mov    rax,QWORD PTR [rsp+0x10]
    5fc7:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    5fcc:	mov    BYTE PTR [rsp+0x28],al
    5fd0:	sub    eax,0x30
    5fd3:	cmp    al,0x9
    5fd5:	jbe    6809 <__cxa_finalize@plt+0x4291>
    5fdb:	mov    eax,r12d
    5fde:	mov    ebx,0x30
    5fe3:	xor    r12d,r12d
    5fe6:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    5feb:	nop    DWORD PTR [rax+rax*1+0x0]
    5ff0:	cmp    DWORD PTR [rsp+0x8],0x2
    5ff5:	mov    r12d,r10d
    5ff8:	sete   dl
    5ffb:	xor    r10d,r10d
    5ffe:	xor    eax,eax
    6000:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    6005:	nop    DWORD PTR [rax]
    6008:	cmp    DWORD PTR [rsp+0x8],0x2
    600d:	sete   dl
    6010:	xor    r10d,r10d
    6013:	jmp    5dd8 <__cxa_finalize@plt+0x3860>
    6018:	nop    DWORD PTR [rax+rax*1+0x0]
    6020:	cmp    DWORD PTR [rsp+0x8],0x2
    6025:	sete   dl
    6028:	xor    r10d,r10d
    602b:	xor    r12d,r12d
    602e:	jmp    5de1 <__cxa_finalize@plt+0x3869>
    6033:	nop    DWORD PTR [rax+rax*1+0x0]
    6038:	cmp    DWORD PTR [rsp+0x8],0x2
    603d:	mov    r12d,r10d
    6040:	mov    ebx,0x20
    6045:	sete   dl
    6048:	xor    r10d,r10d
    604b:	jmp    5de1 <__cxa_finalize@plt+0x3869>
    6050:	mov    edx,0xd
    6055:	xor    r10d,r10d
    6058:	mov    ebx,0x72
    605d:	jmp    5c92 <__cxa_finalize@plt+0x371a>
    6062:	nop    WORD PTR [rax+rax*1+0x0]
    6068:	mov    ebx,0x76
    606d:	jmp    5d10 <__cxa_finalize@plt+0x3798>
    6072:	nop    WORD PTR [rax+rax*1+0x0]
    6078:	mov    edx,0x9
    607d:	xor    r10d,r10d
    6080:	mov    ebx,0x74
    6085:	jmp    5c92 <__cxa_finalize@plt+0x371a>
    608a:	nop    WORD PTR [rax+rax*1+0x0]
    6090:	mov    ebx,0x62
    6095:	jmp    5d10 <__cxa_finalize@plt+0x3798>
    609a:	nop    WORD PTR [rax+rax*1+0x0]
    60a0:	xor    r10d,r10d
    60a3:	jmp    5b40 <__cxa_finalize@plt+0x35c8>
    60a8:	nop    DWORD PTR [rax+rax*1+0x0]
    60b0:	cmp    BYTE PTR [rsp+0xf],0x0
    60b5:	jne    6a20 <__cxa_finalize@plt+0x44a8>
    60bb:	add    rbp,0x1
    60bf:	mov    eax,r8d
    60c2:	xor    r12d,r12d
    60c5:	mov    ebx,0x5c
    60ca:	jmp    5bdc <__cxa_finalize@plt+0x3664>
    60cf:	nop
    60d0:	cmp    DWORD PTR [rsp+0x8],0x2
    60d5:	movzx  ebx,BYTE PTR [rsp+0xf]
    60da:	mov    r12d,r8d
    60dd:	mov    rbp,r11
    60e0:	sete   dl
    60e3:	mov    eax,ebx
    60e5:	test   r15,r15
    60e8:	sete   cl
    60eb:	and    eax,edx
    60ed:	and    al,cl
    60ef:	jne    6b56 <__cxa_finalize@plt+0x45de>
    60f5:	mov    eax,ebx
    60f7:	xor    eax,0x1
    60fa:	and    dl,al
    60fc:	je     6a6c <__cxa_finalize@plt+0x44f4>
    6102:	cmp    BYTE PTR [rsp+0x7c],0x0
    6107:	je     6a6a <__cxa_finalize@plt+0x44f2>
    610d:	cmp    BYTE PTR [rsp+0xe],0x0
    6112:	jne    6b0d <__cxa_finalize@plt+0x4595>
    6118:	test   r13,r13
    611b:	sete   al
    611e:	cmp    QWORD PTR [rsp+0x50],0x0
    6124:	setne  dl
    6127:	and    al,dl
    6129:	je     6b4c <__cxa_finalize@plt+0x45d4>
    612f:	mov    r13,QWORD PTR [rsp+0x50]
    6134:	lea    rbx,[rip+0x56e2]        # b81d <_IO_stdin_used@@Base+0x6dd>
    613b:	mov    BYTE PTR [r14],0x27
    613f:	mov    DWORD PTR [rsp+0x8],0x2
    6147:	mov    r15d,0x1
    614d:	mov    QWORD PTR [rsp+0x18],0x1
    6156:	mov    BYTE PTR [rsp+0xf],0x0
    615b:	mov    QWORD PTR [rsp+0x48],rbx
    6160:	mov    BYTE PTR [rsp+0x7c],al
    6164:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    6169:	nop    DWORD PTR [rax+0x0]
    6170:	cmp    BYTE PTR [rsp+0xf],0x0
    6175:	jne    6a20 <__cxa_finalize@plt+0x44a8>
    617b:	test   r13,r13
    617e:	je     6580 <__cxa_finalize@plt+0x4008>
    6184:	xor    edx,edx
    6186:	cmp    QWORD PTR [rsp+0x50],0x0
    618c:	jne    6580 <__cxa_finalize@plt+0x4008>
    6192:	mov    QWORD PTR [rsp+0x50],r13
    6197:	add    r15,0x3
    619b:	xor    eax,eax
    619d:	mov    BYTE PTR [rsp+0x7c],r12b
    61a2:	xor    r8d,r8d
    61a5:	mov    r13,rdx
    61a8:	mov    ebx,0x27
    61ad:	jmp    5bc9 <__cxa_finalize@plt+0x3651>
    61b2:	nop    WORD PTR [rax+rax*1+0x0]
    61b8:	test   BYTE PTR [rsp+0x78],0x4
    61bd:	je     61e0 <__cxa_finalize@plt+0x3c68>
    61bf:	lea    rcx,[rbp+0x2]
    61c3:	cmp    rcx,r11
    61c6:	jae    61e0 <__cxa_finalize@plt+0x3c68>
    61c8:	mov    rax,QWORD PTR [rsp+0x10]
    61cd:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    61d2:	je     6962 <__cxa_finalize@plt+0x43ea>
    61d8:	nop    DWORD PTR [rax+rax*1+0x0]
    61e0:	xor    edx,edx
    61e2:	xor    r12d,r12d
    61e5:	xor    eax,eax
    61e7:	mov    ebx,0x3f
    61ec:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    61f1:	nop    DWORD PTR [rax+0x0]
    61f8:	cmp    BYTE PTR [rsp+0xf],0x0
    61fd:	jne    6a20 <__cxa_finalize@plt+0x44a8>
    6203:	xor    r12d,r12d
    6206:	xor    eax,eax
    6208:	mov    ebx,0x3f
    620d:	jmp    5bc9 <__cxa_finalize@plt+0x3651>
    6212:	nop    WORD PTR [rax+rax*1+0x0]
    6218:	lea    rax,[rsp+0xa0]
    6220:	cmp    r11,0xffffffffffffffff
    6224:	mov    QWORD PTR [rsp+0xa0],0x0
    6230:	mov    QWORD PTR [rsp+0x28],rax
    6235:	jne    6264 <__cxa_finalize@plt+0x3cec>
    6237:	mov    rdi,QWORD PTR [rsp+0x10]
    623c:	mov    BYTE PTR [rsp+0x40],r8b
    6241:	mov    BYTE PTR [rsp+0x38],r10b
    6246:	mov    QWORD PTR [rsp+0x30],r9
    624b:	call   2150 <strlen@plt>
    6250:	movzx  r8d,BYTE PTR [rsp+0x40]
    6256:	movzx  r10d,BYTE PTR [rsp+0x38]
    625c:	mov    r11,rax
    625f:	mov    r9,QWORD PTR [rsp+0x30]
    6264:	lea    rax,[rsp+0x9c]
    626c:	xor    ecx,ecx
    626e:	mov    BYTE PTR [rsp+0x7e],bl
    6272:	mov    BYTE PTR [rsp+0x7d],r8b
    6277:	mov    rbx,rcx
    627a:	mov    QWORD PTR [rsp+0x88],r9
    6282:	mov    QWORD PTR [rsp+0x38],rax
    6287:	mov    BYTE PTR [rsp+0x7f],r10b
    628c:	mov    QWORD PTR [rsp+0x80],r15
    6294:	mov    QWORD PTR [rsp+0x40],r14
    6299:	mov    QWORD PTR [rsp+0x70],r13
    629e:	mov    QWORD PTR [rsp+0x30],r11
    62a3:	mov    rax,QWORD PTR [rsp+0x10]
    62a8:	lea    r14,[rbp+rbx*1+0x0]
    62ad:	mov    rdx,QWORD PTR [rsp+0x30]
    62b2:	mov    rcx,QWORD PTR [rsp+0x28]
    62b7:	mov    rdi,QWORD PTR [rsp+0x38]
    62bc:	lea    r13,[rax+r14*1]
    62c0:	sub    rdx,r14
    62c3:	mov    rsi,r13
    62c6:	call   a4a0 <fts_children@@Base+0x220>
    62cb:	test   rax,rax
    62ce:	mov    r15,rax
    62d1:	je     6321 <__cxa_finalize@plt+0x3da9>
    62d3:	cmp    rax,0xffffffffffffffff
    62d7:	je     68f5 <__cxa_finalize@plt+0x437d>
    62dd:	cmp    rax,0xfffffffffffffffe
    62e1:	je     6881 <__cxa_finalize@plt+0x4309>
    62e7:	cmp    DWORD PTR [rsp+0x8],0x2
    62ec:	sete   al
    62ef:	and    al,BYTE PTR [rsp+0xf]
    62f3:	jne    6490 <__cxa_finalize@plt+0x3f18>
    62f9:	mov    edi,DWORD PTR [rsp+0x9c]
    6300:	call   2540 <iswprint@plt>
    6305:	mov    rdi,QWORD PTR [rsp+0x28]
    630a:	test   eax,eax
    630c:	mov    eax,0x0
    6311:	cmove  r12d,eax
    6315:	add    rbx,r15
    6318:	call   2520 <mbsinit@plt>
    631d:	test   eax,eax
    631f:	je     62a3 <__cxa_finalize@plt+0x3d2b>
    6321:	mov    edx,r12d
    6324:	mov    rdi,rbx
    6327:	movzx  r8d,BYTE PTR [rsp+0x7d]
    632d:	xor    edx,0x1
    6330:	movzx  ebx,BYTE PTR [rsp+0x7e]
    6335:	movzx  r10d,BYTE PTR [rsp+0x7f]
    633b:	and    dl,BYTE PTR [rsp+0xd]
    633f:	mov    r15,QWORD PTR [rsp+0x80]
    6347:	mov    r14,QWORD PTR [rsp+0x40]
    634c:	mov    r13,QWORD PTR [rsp+0x70]
    6351:	mov    r11,QWORD PTR [rsp+0x30]
    6356:	cmp    rdi,0x1
    635a:	jbe    695b <__cxa_finalize@plt+0x43e3>
    6360:	mov    rcx,rdi
    6363:	xor    esi,esi
    6365:	movzx  r9d,BYTE PTR [rsp+0xf]
    636b:	add    rcx,rbp
    636e:	mov    rdi,QWORD PTR [rsp+0x10]
    6373:	jmp    642e <__cxa_finalize@plt+0x3eb6>
    6378:	nop    DWORD PTR [rax+rax*1+0x0]
    6380:	cmp    DWORD PTR [rsp+0x8],0x2
    6385:	sete   al
    6388:	test   r9b,r9b
    638b:	jne    6840 <__cxa_finalize@plt+0x42c8>
    6391:	mov    esi,r8d
    6394:	xor    esi,0x1
    6397:	and    al,sil
    639a:	je     63cb <__cxa_finalize@plt+0x3e53>
    639c:	cmp    r13,r15
    639f:	jbe    63a6 <__cxa_finalize@plt+0x3e2e>
    63a1:	mov    BYTE PTR [r14+r15*1],0x27
    63a6:	lea    rsi,[r15+0x1]
    63aa:	cmp    r13,rsi
    63ad:	jbe    63b5 <__cxa_finalize@plt+0x3e3d>
    63af:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    63b5:	lea    rsi,[r15+0x2]
    63b9:	cmp    r13,rsi
    63bc:	jbe    63c4 <__cxa_finalize@plt+0x3e4c>
    63be:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    63c4:	add    r15,0x3
    63c8:	mov    r8d,eax
    63cb:	cmp    r13,r15
    63ce:	jbe    63d5 <__cxa_finalize@plt+0x3e5d>
    63d0:	mov    BYTE PTR [r14+r15*1],0x5c
    63d5:	lea    rax,[r15+0x1]
    63d9:	cmp    r13,rax
    63dc:	jbe    63eb <__cxa_finalize@plt+0x3e73>
    63de:	mov    eax,ebx
    63e0:	shr    al,0x6
    63e3:	add    eax,0x30
    63e6:	mov    BYTE PTR [r14+r15*1+0x1],al
    63eb:	lea    rax,[r15+0x2]
    63ef:	cmp    r13,rax
    63f2:	jbe    6404 <__cxa_finalize@plt+0x3e8c>
    63f4:	mov    eax,ebx
    63f6:	shr    al,0x3
    63f9:	and    eax,0x7
    63fc:	add    eax,0x30
    63ff:	mov    BYTE PTR [r14+r15*1+0x2],al
    6404:	and    ebx,0x7
    6407:	add    rbp,0x1
    640b:	add    r15,0x3
    640f:	add    ebx,0x30
    6412:	cmp    rbp,rcx
    6415:	jae    5c00 <__cxa_finalize@plt+0x3688>
    641b:	mov    esi,edx
    641d:	cmp    r13,r15
    6420:	jbe    6426 <__cxa_finalize@plt+0x3eae>
    6422:	mov    BYTE PTR [r14+r15*1],bl
    6426:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    642a:	add    r15,0x1
    642e:	test   dl,dl
    6430:	jne    6380 <__cxa_finalize@plt+0x3e08>
    6436:	mov    eax,esi
    6438:	xor    eax,0x1
    643b:	and    eax,r8d
    643e:	test   r10b,r10b
    6441:	je     6451 <__cxa_finalize@plt+0x3ed9>
    6443:	cmp    r13,r15
    6446:	jbe    644d <__cxa_finalize@plt+0x3ed5>
    6448:	mov    BYTE PTR [r14+r15*1],0x5c
    644d:	add    r15,0x1
    6451:	add    rbp,0x1
    6455:	cmp    rbp,rcx
    6458:	jae    5bdc <__cxa_finalize@plt+0x3664>
    645e:	test   al,al
    6460:	je     685e <__cxa_finalize@plt+0x42e6>
    6466:	cmp    r13,r15
    6469:	jbe    6470 <__cxa_finalize@plt+0x3ef8>
    646b:	mov    BYTE PTR [r14+r15*1],0x27
    6470:	lea    rax,[r15+0x1]
    6474:	cmp    r13,rax
    6477:	jbe    647f <__cxa_finalize@plt+0x3f07>
    6479:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    647f:	add    r15,0x2
    6483:	xor    r10d,r10d
    6486:	xor    r8d,r8d
    6489:	jmp    641d <__cxa_finalize@plt+0x3ea5>
    648b:	nop    DWORD PTR [rax+rax*1+0x0]
    6490:	cmp    r15,0x1
    6494:	je     62f9 <__cxa_finalize@plt+0x3d81>
    649a:	mov    rdi,QWORD PTR [rsp+0x10]
    649f:	lea    rcx,[rdi+r15*1]
    64a3:	lea    rdx,[rdi+r14*1+0x1]
    64a8:	lea    r8,[rcx+r14*1]
    64ac:	jmp    64bd <__cxa_finalize@plt+0x3f45>
    64ae:	xchg   ax,ax
    64b0:	add    rdx,0x1
    64b4:	cmp    r8,rdx
    64b7:	je     62f9 <__cxa_finalize@plt+0x3d81>
    64bd:	movzx  ecx,BYTE PTR [rdx]
    64c0:	sub    ecx,0x5b
    64c3:	cmp    cl,0x21
    64c6:	ja     64b0 <__cxa_finalize@plt+0x3f38>
    64c8:	mov    esi,0x1
    64cd:	shl    rsi,cl
    64d0:	mov    rcx,rsi
    64d3:	movabs rsi,0x20000002b
    64dd:	test   rcx,rsi
    64e0:	je     64b0 <__cxa_finalize@plt+0x3f38>
    64e2:	mov    r14,QWORD PTR [rsp+0x40]
    64e7:	mov    r13,QWORD PTR [rsp+0x70]
    64ec:	mov    rbp,QWORD PTR [rsp+0x30]
    64f1:	mov    DWORD PTR [rsp+0x8],0x2
    64f9:	cmp    BYTE PTR [rsp+0xd],0x0
    64fe:	je     6510 <__cxa_finalize@plt+0x3f98>
    6500:	test   al,al
    6502:	mov    eax,0x4
    6507:	cmove  eax,DWORD PTR [rsp+0x8]
    650c:	mov    DWORD PTR [rsp+0x8],eax
    6510:	sub    rsp,0x8
    6514:	mov    rcx,rbp
    6517:	mov    rsi,r13
    651a:	push   QWORD PTR [rsp+0x68]
    651e:	push   QWORD PTR [rsp+0x78]
    6522:	mov    rdi,r14
    6525:	push   0x0
    6527:	mov    r9d,DWORD PTR [rsp+0x98]
    652f:	mov    r8d,DWORD PTR [rsp+0x28]
    6534:	mov    rdx,QWORD PTR [rsp+0x30]
    6539:	and    r9d,0xfffffffd
    653d:	call   5970 <__cxa_finalize@plt+0x33f8>
    6542:	add    rsp,0x20
    6546:	mov    r15,rax
    6549:	mov    rbx,QWORD PTR [rsp+0xa8]
    6551:	xor    rbx,QWORD PTR fs:0x28
    655a:	mov    rax,r15
    655d:	jne    6b63 <__cxa_finalize@plt+0x45eb>
    6563:	add    rsp,0xb8
    656a:	pop    rbx
    656b:	pop    rbp
    656c:	pop    r12
    656e:	pop    r13
    6570:	pop    r14
    6572:	pop    r15
    6574:	ret    
    6575:	nop    DWORD PTR [rax]
    6578:	mov    rbp,r11
    657b:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6580:	cmp    r13,r15
    6583:	jbe    658a <__cxa_finalize@plt+0x4012>
    6585:	mov    BYTE PTR [r14+r15*1],0x27
    658a:	lea    rax,[r15+0x1]
    658e:	cmp    r13,rax
    6591:	jbe    6599 <__cxa_finalize@plt+0x4021>
    6593:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    6599:	lea    rax,[r15+0x2]
    659d:	cmp    r13,rax
    65a0:	jbe    6b92 <__cxa_finalize@plt+0x461a>
    65a6:	mov    rdx,r13
    65a9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    65af:	mov    r13,QWORD PTR [rsp+0x50]
    65b4:	jmp    6192 <__cxa_finalize@plt+0x3c1a>
    65b9:	mov    eax,r12d
    65bc:	mov    ebx,0x30
    65c1:	xor    r12d,r12d
    65c4:	jmp    5bc9 <__cxa_finalize@plt+0x3651>
    65c9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    65cf:	jmp    5f99 <__cxa_finalize@plt+0x3a21>
    65d4:	test   ebx,ebx
    65d6:	jne    5a03 <__cxa_finalize@plt+0x348b>
    65dc:	mov    BYTE PTR [rsp+0xd],0x1
    65e1:	test   r13,r13
    65e4:	jne    6b7a <__cxa_finalize@plt+0x4602>
    65ea:	lea    rax,[rip+0x522c]        # b81d <_IO_stdin_used@@Base+0x6dd>
    65f1:	mov    QWORD PTR [rsp+0x50],0x0
    65fa:	mov    BYTE PTR [rsp+0xe],0x1
    65ff:	mov    BYTE PTR [rsp+0x7c],0x0
    6604:	xor    r12d,r12d
    6607:	mov    BYTE PTR [rsp+0xf],0x0
    660c:	mov    QWORD PTR [rsp+0x18],0x1
    6615:	mov    QWORD PTR [rsp+0x48],rax
    661a:	mov    r15d,0x1
    6620:	mov    DWORD PTR [rsp+0x8],0x2
    6628:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    662d:	nop    DWORD PTR [rax]
    6630:	test   ebx,ebx
    6632:	jne    6a2d <__cxa_finalize@plt+0x44b5>
    6638:	test   r13,r13
    663b:	je     6866 <__cxa_finalize@plt+0x42ee>
    6641:	mov    BYTE PTR [r14],0x22
    6645:	mov    BYTE PTR [rsp+0xe],0x1
    664a:	xor    r12d,r12d
    664d:	mov    BYTE PTR [rsp+0x7c],0x0
    6652:	mov    QWORD PTR [rsp+0x50],0x0
    665b:	lea    rax,[rip+0x51b9]        # b81b <_IO_stdin_used@@Base+0x6db>
    6662:	mov    BYTE PTR [rsp+0xf],0x0
    6667:	mov    BYTE PTR [rsp+0xd],0x1
    666c:	mov    QWORD PTR [rsp+0x18],0x1
    6675:	mov    r15d,0x1
    667b:	mov    QWORD PTR [rsp+0x48],rax
    6680:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    6685:	lea    rax,[rip+0x518f]        # b81b <_IO_stdin_used@@Base+0x6db>
    668c:	mov    BYTE PTR [rsp+0xe],0x1
    6691:	mov    BYTE PTR [rsp+0x7c],0x0
    6696:	xor    r12d,r12d
    6699:	mov    QWORD PTR [rsp+0x50],0x0
    66a2:	mov    BYTE PTR [rsp+0xf],0x1
    66a7:	mov    BYTE PTR [rsp+0xd],0x1
    66ac:	mov    QWORD PTR [rsp+0x18],0x1
    66b5:	xor    r15d,r15d
    66b8:	mov    QWORD PTR [rsp+0x48],rax
    66bd:	mov    DWORD PTR [rsp+0x8],0x5
    66c5:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    66ca:	mov    BYTE PTR [rsp+0xe],0x1
    66cf:	mov    BYTE PTR [rsp+0x7c],0x0
    66d4:	xor    r12d,r12d
    66d7:	mov    QWORD PTR [rsp+0x50],0x0
    66e0:	mov    BYTE PTR [rsp+0xf],0x0
    66e5:	xor    r15d,r15d
    66e8:	mov    BYTE PTR [rsp+0xd],0x1
    66ed:	mov    QWORD PTR [rsp+0x18],0x0
    66f6:	mov    QWORD PTR [rsp+0x48],0x0
    66ff:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    6704:	cmp    DWORD PTR [rsp+0x8],0xa
    6709:	je     6761 <__cxa_finalize@plt+0x41e9>
    670b:	lea    rsi,[rip+0x510d]        # b81f <_IO_stdin_used@@Base+0x6df>
    6712:	xor    edi,edi
    6714:	mov    edx,0x5
    6719:	call   2130 <dcgettext@plt>
    671e:	mov    rcx,rax
    6721:	mov    QWORD PTR [rsp+0x68],rax
    6726:	lea    rax,[rip+0x50f2]        # b81f <_IO_stdin_used@@Base+0x6df>
    672d:	cmp    rcx,rax
    6730:	je     6ace <__cxa_finalize@plt+0x4556>
    6736:	lea    rsi,[rip+0x50e0]        # b81d <_IO_stdin_used@@Base+0x6dd>
    673d:	xor    edi,edi
    673f:	mov    edx,0x5
    6744:	call   2130 <dcgettext@plt>
    6749:	mov    rcx,rax
    674c:	mov    QWORD PTR [rsp+0x60],rax
    6751:	lea    rax,[rip+0x50c5]        # b81d <_IO_stdin_used@@Base+0x6dd>
    6758:	cmp    rcx,rax
    675b:	je     6ae4 <__cxa_finalize@plt+0x456c>
    6761:	xor    r15d,r15d
    6764:	test   ebx,ebx
    6766:	je     692d <__cxa_finalize@plt+0x43b5>
    676c:	test   ebx,ebx
    676e:	mov    rbx,QWORD PTR [rsp+0x60]
    6773:	setne  BYTE PTR [rsp+0xf]
    6778:	xor    r12d,r12d
    677b:	mov    rdi,rbx
    677e:	call   2150 <strlen@plt>
    6783:	mov    QWORD PTR [rsp+0x48],rbx
    6788:	mov    QWORD PTR [rsp+0x18],rax
    678d:	mov    BYTE PTR [rsp+0xe],0x1
    6792:	mov    BYTE PTR [rsp+0x7c],0x0
    6797:	mov    QWORD PTR [rsp+0x50],0x0
    67a0:	mov    BYTE PTR [rsp+0xd],0x1
    67a5:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    67aa:	mov    BYTE PTR [rsp+0xe],0x1
    67af:	mov    BYTE PTR [rsp+0x7c],0x0
    67b4:	xor    r12d,r12d
    67b7:	mov    QWORD PTR [rsp+0x50],0x0
    67c0:	mov    BYTE PTR [rsp+0xf],0x0
    67c5:	xor    r15d,r15d
    67c8:	mov    BYTE PTR [rsp+0xd],0x0
    67cd:	mov    QWORD PTR [rsp+0x18],0x0
    67d6:	mov    QWORD PTR [rsp+0x48],0x0
    67df:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    67e4:	mov    BYTE PTR [rsp+0xe],0x1
    67e9:	mov    BYTE PTR [rsp+0x7c],0x0
    67ee:	xor    r12d,r12d
    67f1:	mov    QWORD PTR [rsp+0x50],0x0
    67fa:	mov    BYTE PTR [rsp+0xf],0x1
    67ff:	mov    BYTE PTR [rsp+0xd],0x1
    6804:	jmp    5a23 <__cxa_finalize@plt+0x34ab>
    6809:	cmp    r13,r15
    680c:	jbe    6813 <__cxa_finalize@plt+0x429b>
    680e:	mov    BYTE PTR [r14+r15*1],0x30
    6813:	lea    rax,[rcx+0x2]
    6817:	cmp    r13,rax
    681a:	jbe    6822 <__cxa_finalize@plt+0x42aa>
    681c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    6822:	mov    eax,r12d
    6825:	lea    r15,[rcx+0x3]
    6829:	xor    r12d,r12d
    682c:	mov    ebx,0x30
    6831:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    6836:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6840:	movzx  ebx,BYTE PTR [rsp+0xf]
    6845:	mov    rbp,r11
    6848:	mov    BYTE PTR [rsp+0xd],bl
    684c:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6851:	movzx  edx,BYTE PTR [rsp+0xd]
    6856:	xor    r12d,r12d
    6859:	jmp    6360 <__cxa_finalize@plt+0x3de8>
    685e:	xor    r10d,r10d
    6861:	jmp    641d <__cxa_finalize@plt+0x3ea5>
    6866:	mov    QWORD PTR [rsp+0x50],0x0
    686f:	mov    BYTE PTR [rsp+0xe],0x1
    6874:	xor    r12d,r12d
    6877:	mov    BYTE PTR [rsp+0x7c],0x0
    687c:	jmp    665b <__cxa_finalize@plt+0x40e3>
    6881:	mov    r11,QWORD PTR [rsp+0x30]
    6886:	mov    rsi,r14
    6889:	mov    rcx,r13
    688c:	mov    rax,rbx
    688f:	mov    rdi,rbx
    6892:	movzx  r8d,BYTE PTR [rsp+0x7d]
    6898:	movzx  ebx,BYTE PTR [rsp+0x7e]
    689d:	mov    r9,QWORD PTR [rsp+0x88]
    68a5:	cmp    rsi,r11
    68a8:	movzx  r10d,BYTE PTR [rsp+0x7f]
    68ae:	mov    r15,QWORD PTR [rsp+0x80]
    68b6:	mov    r14,QWORD PTR [rsp+0x40]
    68bb:	mov    r13,QWORD PTR [rsp+0x70]
    68c0:	jae    68e8 <__cxa_finalize@plt+0x4370>
    68c2:	cmp    BYTE PTR [rcx],0x0
    68c5:	jne    68d7 <__cxa_finalize@plt+0x435f>
    68c7:	jmp    68e8 <__cxa_finalize@plt+0x4370>
    68c9:	nop    DWORD PTR [rax+0x0]
    68d0:	cmp    BYTE PTR [r9+rax*1],0x0
    68d5:	je     68e5 <__cxa_finalize@plt+0x436d>
    68d7:	add    rax,0x1
    68db:	lea    rdx,[rbp+rax*1+0x0]
    68e0:	cmp    r11,rdx
    68e3:	ja     68d0 <__cxa_finalize@plt+0x4358>
    68e5:	mov    rdi,rax
    68e8:	movzx  edx,BYTE PTR [rsp+0xd]
    68ed:	xor    r12d,r12d
    68f0:	jmp    6356 <__cxa_finalize@plt+0x3dde>
    68f5:	mov    rdi,rbx
    68f8:	movzx  r8d,BYTE PTR [rsp+0x7d]
    68fe:	movzx  ebx,BYTE PTR [rsp+0x7e]
    6903:	movzx  r10d,BYTE PTR [rsp+0x7f]
    6909:	mov    r15,QWORD PTR [rsp+0x80]
    6911:	xor    r12d,r12d
    6914:	mov    r14,QWORD PTR [rsp+0x40]
    6919:	mov    r13,QWORD PTR [rsp+0x70]
    691e:	mov    r11,QWORD PTR [rsp+0x30]
    6923:	movzx  edx,BYTE PTR [rsp+0xd]
    6928:	jmp    6356 <__cxa_finalize@plt+0x3dde>
    692d:	mov    rdx,QWORD PTR [rsp+0x68]
    6932:	movzx  eax,BYTE PTR [rdx]
    6935:	test   al,al
    6937:	je     676c <__cxa_finalize@plt+0x41f4>
    693d:	nop    DWORD PTR [rax]
    6940:	cmp    r13,r15
    6943:	jbe    6949 <__cxa_finalize@plt+0x43d1>
    6945:	mov    BYTE PTR [r14+r15*1],al
    6949:	add    r15,0x1
    694d:	movzx  eax,BYTE PTR [rdx+r15*1]
    6952:	test   al,al
    6954:	jne    6940 <__cxa_finalize@plt+0x43c8>
    6956:	jmp    676c <__cxa_finalize@plt+0x41f4>
    695b:	mov    eax,edx
    695d:	jmp    5eb7 <__cxa_finalize@plt+0x393f>
    6962:	movzx  ebx,BYTE PTR [rax+rcx*1]
    6966:	cmp    bl,0x3e
    6969:	ja     61e0 <__cxa_finalize@plt+0x3c68>
    696f:	movabs rax,0x7000a38200000000
    6979:	bt     rax,rbx
    697d:	jae    61e0 <__cxa_finalize@plt+0x3c68>
    6983:	cmp    BYTE PTR [rsp+0xf],0x0
    6988:	jne    6b72 <__cxa_finalize@plt+0x45fa>
    698e:	cmp    r13,r15
    6991:	jbe    6998 <__cxa_finalize@plt+0x4420>
    6993:	mov    BYTE PTR [r14+r15*1],0x3f
    6998:	lea    rax,[r15+0x1]
    699c:	cmp    r13,rax
    699f:	jbe    69a7 <__cxa_finalize@plt+0x442f>
    69a1:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    69a7:	lea    rax,[r15+0x2]
    69ab:	cmp    r13,rax
    69ae:	jbe    69b6 <__cxa_finalize@plt+0x443e>
    69b0:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    69b6:	lea    rax,[r15+0x3]
    69ba:	cmp    r13,rax
    69bd:	jbe    69c5 <__cxa_finalize@plt+0x444d>
    69bf:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    69c5:	add    r15,0x4
    69c9:	xor    edx,edx
    69cb:	xor    r12d,r12d
    69ce:	xor    eax,eax
    69d0:	mov    rbp,rcx
    69d3:	jmp    5b98 <__cxa_finalize@plt+0x3620>
    69d8:	test   ebx,ebx
    69da:	je     6b68 <__cxa_finalize@plt+0x45f0>
    69e0:	lea    rax,[rip+0x4e36]        # b81d <_IO_stdin_used@@Base+0x6dd>
    69e7:	mov    BYTE PTR [rsp+0xe],0x1
    69ec:	mov    BYTE PTR [rsp+0x7c],0x0
    69f1:	xor    r12d,r12d
    69f4:	mov    QWORD PTR [rsp+0x50],0x0
    69fd:	mov    BYTE PTR [rsp+0xf],0x1
    6a02:	mov    BYTE PTR [rsp+0xd],0x0
    6a07:	mov    QWORD PTR [rsp+0x18],0x1
    6a10:	xor    r15d,r15d
    6a13:	mov    QWORD PTR [rsp+0x48],rax
    6a18:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    6a1d:	nop    DWORD PTR [rax]
    6a20:	mov    rbp,r11
    6a23:	movzx  eax,BYTE PTR [rsp+0xf]
    6a28:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6a2d:	lea    rax,[rip+0x4de7]        # b81b <_IO_stdin_used@@Base+0x6db>
    6a34:	mov    BYTE PTR [rsp+0xe],0x1
    6a39:	mov    BYTE PTR [rsp+0x7c],0x0
    6a3e:	xor    r12d,r12d
    6a41:	mov    QWORD PTR [rsp+0x50],0x0
    6a4a:	mov    BYTE PTR [rsp+0xf],0x1
    6a4f:	mov    BYTE PTR [rsp+0xd],0x1
    6a54:	mov    QWORD PTR [rsp+0x18],0x1
    6a5d:	xor    r15d,r15d
    6a60:	mov    QWORD PTR [rsp+0x48],rax
    6a65:	jmp    5a43 <__cxa_finalize@plt+0x34cb>
    6a6a:	mov    eax,edx
    6a6c:	mov    rbx,QWORD PTR [rsp+0x48]
    6a71:	test   rbx,rbx
    6a74:	je     6aa2 <__cxa_finalize@plt+0x452a>
    6a76:	test   al,al
    6a78:	je     6aa2 <__cxa_finalize@plt+0x452a>
    6a7a:	movzx  ecx,BYTE PTR [rbx]
    6a7d:	mov    rax,rbx
    6a80:	test   cl,cl
    6a82:	je     6aa2 <__cxa_finalize@plt+0x452a>
    6a84:	mov    rdx,r15
    6a87:	sub    rax,r15
    6a8a:	cmp    r13,rdx
    6a8d:	jbe    6a93 <__cxa_finalize@plt+0x451b>
    6a8f:	mov    BYTE PTR [r14+rdx*1],cl
    6a93:	add    rdx,0x1
    6a97:	movzx  ecx,BYTE PTR [rax+rdx*1]
    6a9b:	test   cl,cl
    6a9d:	jne    6a8a <__cxa_finalize@plt+0x4512>
    6a9f:	mov    r15,rdx
    6aa2:	cmp    r13,r15
    6aa5:	jbe    6549 <__cxa_finalize@plt+0x3fd1>
    6aab:	mov    BYTE PTR [r14+r15*1],0x0
    6ab0:	jmp    6549 <__cxa_finalize@plt+0x3fd1>
    6ab5:	cmp    DWORD PTR [rsp+0x8],0x2
    6aba:	movzx  ebx,BYTE PTR [rsp+0xf]
    6abf:	mov    rbp,r11
    6ac2:	sete   al
    6ac5:	mov    BYTE PTR [rsp+0xd],bl
    6ac9:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6ace:	mov    esi,DWORD PTR [rsp+0x8]
    6ad2:	mov    rdi,rcx
    6ad5:	call   5880 <__cxa_finalize@plt+0x3308>
    6ada:	mov    QWORD PTR [rsp+0x68],rax
    6adf:	jmp    6736 <__cxa_finalize@plt+0x41be>
    6ae4:	mov    esi,DWORD PTR [rsp+0x8]
    6ae8:	mov    rdi,rcx
    6aeb:	call   5880 <__cxa_finalize@plt+0x3308>
    6af0:	mov    QWORD PTR [rsp+0x60],rax
    6af5:	jmp    6761 <__cxa_finalize@plt+0x41e9>
    6afa:	movzx  ebx,BYTE PTR [rsp+0xf]
    6aff:	mov    rbp,r11
    6b02:	mov    eax,edx
    6b04:	mov    BYTE PTR [rsp+0xd],bl
    6b08:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6b0d:	sub    rsp,0x8
    6b11:	mov    r8d,0x5
    6b17:	mov    rcx,r11
    6b1a:	push   QWORD PTR [rsp+0x68]
    6b1e:	push   QWORD PTR [rsp+0x78]
    6b22:	mov    rdi,r14
    6b25:	push   QWORD PTR [rsp+0x38]
    6b29:	mov    r9d,DWORD PTR [rsp+0x98]
    6b31:	mov    rdx,QWORD PTR [rsp+0x30]
    6b36:	mov    rsi,QWORD PTR [rsp+0x70]
    6b3b:	call   5970 <__cxa_finalize@plt+0x33f8>
    6b40:	add    rsp,0x20
    6b44:	mov    r15,rax
    6b47:	jmp    6549 <__cxa_finalize@plt+0x3fd1>
    6b4c:	movzx  eax,BYTE PTR [rsp+0x7c]
    6b51:	jmp    6a6c <__cxa_finalize@plt+0x44f4>
    6b56:	mov    DWORD PTR [rsp+0x8],0x2
    6b5e:	jmp    64f9 <__cxa_finalize@plt+0x3f81>
    6b63:	call   2180 <__stack_chk_fail@plt>
    6b68:	mov    BYTE PTR [rsp+0xd],0x0
    6b6d:	jmp    65e1 <__cxa_finalize@plt+0x4069>
    6b72:	mov    rbp,r11
    6b75:	jmp    6510 <__cxa_finalize@plt+0x3f98>
    6b7a:	mov    BYTE PTR [rsp+0xe],0x1
    6b7f:	xor    eax,eax
    6b81:	xor    r12d,r12d
    6b84:	mov    QWORD PTR [rsp+0x50],0x0
    6b8d:	jmp    6134 <__cxa_finalize@plt+0x3bbc>
    6b92:	mov    rdx,r13
    6b95:	mov    r13,QWORD PTR [rsp+0x50]
    6b9a:	jmp    6192 <__cxa_finalize@plt+0x3c1a>
    6b9f:	call   2050 <abort@plt>
    6ba4:	xchg   ax,ax
    6ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6bb0:	push   r15
    6bb2:	push   r14
    6bb4:	movsxd r15,edi
    6bb7:	push   r13
    6bb9:	push   r12
    6bbb:	mov    r14,rdx
    6bbe:	push   rbp
    6bbf:	push   rbx
    6bc0:	mov    rbp,rcx
    6bc3:	sub    rsp,0x28
    6bc7:	mov    QWORD PTR [rsp+0x8],rsi
    6bcc:	call   2060 <__errno_location@plt>
    6bd1:	mov    r13,rax
    6bd4:	mov    eax,DWORD PTR [rax]
    6bd6:	test   r15d,r15d
    6bd9:	mov    rbx,QWORD PTR [rip+0x208480]        # 20f060 <quote_quoting_options@@Base+0x40>
    6be0:	mov    DWORD PTR [rsp+0x18],eax
    6be4:	js     6d51 <__cxa_finalize@plt+0x47d9>
    6bea:	cmp    DWORD PTR [rip+0x208467],r15d        # 20f058 <quote_quoting_options@@Base+0x38>
    6bf1:	jg     6c55 <__cxa_finalize@plt+0x46dd>
    6bf3:	cmp    r15d,0x7ffffffe
    6bfa:	ja     6d56 <__cxa_finalize@plt+0x47de>
    6c00:	lea    r12d,[r15+0x1]
    6c04:	lea    rax,[rip+0x208465]        # 20f070 <quote_quoting_options@@Base+0x50>
    6c0b:	movsxd rsi,r12d
    6c0e:	shl    rsi,0x4
    6c12:	cmp    rbx,rax
    6c15:	je     6d30 <__cxa_finalize@plt+0x47b8>
    6c1b:	mov    rdi,rbx
    6c1e:	call   7cf0 <__cxa_finalize@plt+0x5778>
    6c23:	mov    rbx,rax
    6c26:	mov    QWORD PTR [rip+0x208433],rax        # 20f060 <quote_quoting_options@@Base+0x40>
    6c2d:	movsxd rdi,DWORD PTR [rip+0x208424]        # 20f058 <quote_quoting_options@@Base+0x38>
    6c34:	mov    edx,r12d
    6c37:	xor    esi,esi
    6c39:	sub    edx,edi
    6c3b:	shl    rdi,0x4
    6c3f:	movsxd rdx,edx
    6c42:	add    rdi,rbx
    6c45:	shl    rdx,0x4
    6c49:	call   2210 <memset@plt>
    6c4e:	mov    DWORD PTR [rip+0x208403],r12d        # 20f058 <quote_quoting_options@@Base+0x38>
    6c55:	mov    eax,DWORD PTR [rbp+0x4]
    6c58:	shl    r15,0x4
    6c5c:	sub    rsp,0x8
    6c60:	add    rbx,r15
    6c63:	lea    r15,[rbp+0x8]
    6c67:	mov    r8d,DWORD PTR [rbp+0x0]
    6c6b:	mov    r11,QWORD PTR [rbx]
    6c6e:	mov    r12,QWORD PTR [rbx+0x8]
    6c72:	mov    rcx,r14
    6c75:	or     eax,0x1
    6c78:	mov    DWORD PTR [rsp+0x24],eax
    6c7c:	push   QWORD PTR [rbp+0x30]
    6c7f:	mov    r9d,eax
    6c82:	push   QWORD PTR [rbp+0x28]
    6c85:	push   r15
    6c87:	mov    rsi,r11
    6c8a:	mov    rdx,QWORD PTR [rsp+0x28]
    6c8f:	mov    rdi,r12
    6c92:	mov    QWORD PTR [rsp+0x30],r11
    6c97:	call   5970 <__cxa_finalize@plt+0x33f8>
    6c9c:	add    rsp,0x20
    6ca0:	mov    r11,QWORD PTR [rsp+0x10]
    6ca5:	cmp    r11,rax
    6ca8:	ja     6d11 <__cxa_finalize@plt+0x4799>
    6caa:	lea    rsi,[rax+0x1]
    6cae:	lea    rax,[rip+0x20844b]        # 20f100 <program_name@@Base+0x20>
    6cb5:	cmp    r12,rax
    6cb8:	mov    QWORD PTR [rbx],rsi
    6cbb:	je     6ccf <__cxa_finalize@plt+0x4757>
    6cbd:	mov    rdi,r12
    6cc0:	mov    QWORD PTR [rsp+0x10],rsi
    6cc5:	call   2570 <free@plt>
    6cca:	mov    rsi,QWORD PTR [rsp+0x10]
    6ccf:	mov    rdi,rsi
    6cd2:	mov    QWORD PTR [rsp+0x10],rsi
    6cd7:	call   7c90 <__cxa_finalize@plt+0x5718>
    6cdc:	sub    rsp,0x8
    6ce0:	mov    QWORD PTR [rbx+0x8],rax
    6ce4:	mov    r8d,DWORD PTR [rbp+0x0]
    6ce8:	push   QWORD PTR [rbp+0x30]
    6ceb:	push   QWORD PTR [rbp+0x28]
    6cee:	mov    rcx,r14
    6cf1:	push   r15
    6cf3:	mov    r9d,DWORD PTR [rsp+0x3c]
    6cf8:	mov    rdi,rax
    6cfb:	mov    rdx,QWORD PTR [rsp+0x28]
    6d00:	mov    rsi,QWORD PTR [rsp+0x30]
    6d05:	mov    r12,rax
    6d08:	call   5970 <__cxa_finalize@plt+0x33f8>
    6d0d:	add    rsp,0x20
    6d11:	mov    eax,DWORD PTR [rsp+0x18]
    6d15:	mov    DWORD PTR [r13+0x0],eax
    6d19:	add    rsp,0x28
    6d1d:	mov    rax,r12
    6d20:	pop    rbx
    6d21:	pop    rbp
    6d22:	pop    r12
    6d24:	pop    r13
    6d26:	pop    r14
    6d28:	pop    r15
    6d2a:	ret    
    6d2b:	nop    DWORD PTR [rax+rax*1+0x0]
    6d30:	xor    edi,edi
    6d32:	call   7cf0 <__cxa_finalize@plt+0x5778>
    6d37:	movdqa xmm0,XMMWORD PTR [rip+0x208331]        # 20f070 <quote_quoting_options@@Base+0x50>
    6d3f:	mov    rbx,rax
    6d42:	mov    QWORD PTR [rip+0x208317],rax        # 20f060 <quote_quoting_options@@Base+0x40>
    6d49:	movups XMMWORD PTR [rax],xmm0
    6d4c:	jmp    6c2d <__cxa_finalize@plt+0x46b5>
    6d51:	call   2050 <abort@plt>
    6d56:	call   7ee0 <__cxa_finalize@plt+0x5968>
    6d5b:	nop    DWORD PTR [rax+rax*1+0x0]
    6d60:	push   r12
    6d62:	push   rbp
    6d63:	push   rbx
    6d64:	mov    rbx,rdi
    6d67:	call   2060 <__errno_location@plt>
    6d6c:	mov    r12d,DWORD PTR [rax]
    6d6f:	mov    rbp,rax
    6d72:	lea    rax,[rip+0x208487]        # 20f200 <program_name@@Base+0x120>
    6d79:	test   rbx,rbx
    6d7c:	mov    esi,0x38
    6d81:	cmove  rbx,rax
    6d85:	mov    rdi,rbx
    6d88:	call   7e90 <__cxa_finalize@plt+0x5918>
    6d8d:	mov    DWORD PTR [rbp+0x0],r12d
    6d91:	pop    rbx
    6d92:	pop    rbp
    6d93:	pop    r12
    6d95:	ret    
    6d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6da0:	lea    rax,[rip+0x208459]        # 20f200 <program_name@@Base+0x120>
    6da7:	test   rdi,rdi
    6daa:	cmove  rdi,rax
    6dae:	mov    eax,DWORD PTR [rdi]
    6db0:	ret    
    6db1:	nop    DWORD PTR [rax+rax*1+0x0]
    6db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6dc0:	lea    rax,[rip+0x208439]        # 20f200 <program_name@@Base+0x120>
    6dc7:	test   rdi,rdi
    6dca:	cmove  rdi,rax
    6dce:	mov    DWORD PTR [rdi],esi
    6dd0:	ret    
    6dd1:	nop    DWORD PTR [rax+rax*1+0x0]
    6dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6de0:	lea    rax,[rip+0x208419]        # 20f200 <program_name@@Base+0x120>
    6de7:	test   rdi,rdi
    6dea:	mov    ecx,esi
    6dec:	cmove  rdi,rax
    6df0:	mov    eax,esi
    6df2:	and    ecx,0x1f
    6df5:	shr    al,0x5
    6df8:	movzx  eax,al
    6dfb:	lea    rdi,[rdi+rax*4+0x8]
    6e00:	mov    esi,DWORD PTR [rdi]
    6e02:	mov    eax,esi
    6e04:	shr    eax,cl
    6e06:	xor    edx,eax
    6e08:	and    eax,0x1
    6e0b:	and    edx,0x1
    6e0e:	shl    edx,cl
    6e10:	xor    edx,esi
    6e12:	mov    DWORD PTR [rdi],edx
    6e14:	ret    
    6e15:	nop
    6e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6e20:	lea    rax,[rip+0x2083d9]        # 20f200 <program_name@@Base+0x120>
    6e27:	test   rdi,rdi
    6e2a:	cmove  rdi,rax
    6e2e:	mov    eax,DWORD PTR [rdi+0x4]
    6e31:	mov    DWORD PTR [rdi+0x4],esi
    6e34:	ret    
    6e35:	nop
    6e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6e40:	lea    rax,[rip+0x2083b9]        # 20f200 <program_name@@Base+0x120>
    6e47:	test   rdi,rdi
    6e4a:	cmove  rdi,rax
    6e4e:	test   rsi,rsi
    6e51:	mov    DWORD PTR [rdi],0xa
    6e57:	je     6e67 <__cxa_finalize@plt+0x48ef>
    6e59:	test   rdx,rdx
    6e5c:	je     6e67 <__cxa_finalize@plt+0x48ef>
    6e5e:	mov    QWORD PTR [rdi+0x28],rsi
    6e62:	mov    QWORD PTR [rdi+0x30],rdx
    6e66:	ret    
    6e67:	sub    rsp,0x8
    6e6b:	call   2050 <abort@plt>
    6e70:	push   r15
    6e72:	push   r14
    6e74:	lea    rax,[rip+0x208385]        # 20f200 <program_name@@Base+0x120>
    6e7b:	push   r13
    6e7d:	push   r12
    6e7f:	mov    r13,rdi
    6e82:	push   rbp
    6e83:	push   rbx
    6e84:	mov    rbx,r8
    6e87:	mov    r14,rsi
    6e8a:	mov    r15,rdx
    6e8d:	sub    rsp,0x18
    6e91:	test   r8,r8
    6e94:	cmove  rbx,rax
    6e98:	mov    QWORD PTR [rsp+0x8],rcx
    6e9d:	call   2060 <__errno_location@plt>
    6ea2:	mov    r12d,DWORD PTR [rax]
    6ea5:	mov    rbp,rax
    6ea8:	lea    rax,[rbx+0x8]
    6eac:	sub    rsp,0x8
    6eb0:	mov    r9d,DWORD PTR [rbx+0x4]
    6eb4:	push   QWORD PTR [rbx+0x30]
    6eb7:	mov    r8d,DWORD PTR [rbx]
    6eba:	push   QWORD PTR [rbx+0x28]
    6ebd:	mov    rdx,r15
    6ec0:	push   rax
    6ec1:	mov    rcx,QWORD PTR [rsp+0x28]
    6ec6:	mov    rsi,r14
    6ec9:	mov    rdi,r13
    6ecc:	call   5970 <__cxa_finalize@plt+0x33f8>
    6ed1:	mov    DWORD PTR [rbp+0x0],r12d
    6ed5:	add    rsp,0x38
    6ed9:	pop    rbx
    6eda:	pop    rbp
    6edb:	pop    r12
    6edd:	pop    r13
    6edf:	pop    r14
    6ee1:	pop    r15
    6ee3:	ret    
    6ee4:	xchg   ax,ax
    6ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6ef0:	push   r15
    6ef2:	push   r14
    6ef4:	lea    rax,[rip+0x208305]        # 20f200 <program_name@@Base+0x120>
    6efb:	push   r13
    6efd:	push   r12
    6eff:	mov    r12,rdx
    6f02:	push   rbp
    6f03:	push   rbx
    6f04:	mov    rbx,rcx
    6f07:	mov    r14,rdi
    6f0a:	mov    r15,rsi
    6f0d:	sub    rsp,0x38
    6f11:	test   rcx,rcx
    6f14:	cmove  rbx,rax
    6f18:	xor    ebp,ebp
    6f1a:	call   2060 <__errno_location@plt>
    6f1f:	test   r12,r12
    6f22:	mov    r13,rax
    6f25:	mov    eax,DWORD PTR [rax]
    6f27:	sete   bpl
    6f2b:	or     ebp,DWORD PTR [rbx+0x4]
    6f2e:	lea    r10,[rbx+0x8]
    6f32:	sub    rsp,0x8
    6f36:	mov    r8d,DWORD PTR [rbx]
    6f39:	mov    rcx,r15
    6f3c:	mov    DWORD PTR [rsp+0x14],eax
    6f40:	push   QWORD PTR [rbx+0x30]
    6f43:	mov    rdx,r14
    6f46:	push   QWORD PTR [rbx+0x28]
    6f49:	push   r10
    6f4b:	xor    esi,esi
    6f4d:	mov    r9d,ebp
    6f50:	xor    edi,edi
    6f52:	mov    QWORD PTR [rsp+0x40],r10
    6f57:	call   5970 <__cxa_finalize@plt+0x33f8>
    6f5c:	lea    rsi,[rax+0x1]
    6f60:	mov    QWORD PTR [rsp+0x48],rax
    6f65:	add    rsp,0x20
    6f69:	mov    rdi,rsi
    6f6c:	mov    QWORD PTR [rsp+0x18],rsi
    6f71:	call   7c90 <__cxa_finalize@plt+0x5718>
    6f76:	mov    QWORD PTR [rsp+0x10],rax
    6f7b:	sub    rsp,0x8
    6f7f:	push   QWORD PTR [rbx+0x30]
    6f82:	push   QWORD PTR [rbx+0x28]
    6f85:	mov    r10,QWORD PTR [rsp+0x38]
    6f8a:	mov    r9d,ebp
    6f8d:	mov    r8d,DWORD PTR [rbx]
    6f90:	mov    rcx,r15
    6f93:	mov    rdx,r14
    6f96:	mov    rdi,rax
    6f99:	push   r10
    6f9b:	mov    rsi,QWORD PTR [rsp+0x38]
    6fa0:	call   5970 <__cxa_finalize@plt+0x33f8>
    6fa5:	mov    eax,DWORD PTR [rsp+0x2c]
    6fa9:	add    rsp,0x20
    6fad:	test   r12,r12
    6fb0:	mov    DWORD PTR [r13+0x0],eax
    6fb4:	je     6fbf <__cxa_finalize@plt+0x4a47>
    6fb6:	mov    r11,QWORD PTR [rsp+0x28]
    6fbb:	mov    QWORD PTR [r12],r11
    6fbf:	mov    rax,QWORD PTR [rsp+0x10]
    6fc4:	add    rsp,0x38
    6fc8:	pop    rbx
    6fc9:	pop    rbp
    6fca:	pop    r12
    6fcc:	pop    r13
    6fce:	pop    r14
    6fd0:	pop    r15
    6fd2:	ret    
    6fd3:	nop    DWORD PTR [rax]
    6fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6fe0:	mov    rcx,rdx
    6fe3:	xor    edx,edx
    6fe5:	jmp    6ef0 <__cxa_finalize@plt+0x4978>
    6fea:	nop    WORD PTR [rax+rax*1+0x0]
    6ff0:	mov    eax,DWORD PTR [rip+0x208062]        # 20f058 <quote_quoting_options@@Base+0x38>
    6ff6:	push   r12
    6ff8:	mov    r12,QWORD PTR [rip+0x208061]        # 20f060 <quote_quoting_options@@Base+0x40>
    6fff:	push   rbp
    7000:	push   rbx
    7001:	cmp    eax,0x1
    7004:	jle    7031 <__cxa_finalize@plt+0x4ab9>
    7006:	sub    eax,0x2
    7009:	lea    rbx,[r12+0x18]
    700e:	shl    rax,0x4
    7012:	lea    rbp,[r12+rax*1+0x28]
    7017:	nop    WORD PTR [rax+rax*1+0x0]
    7020:	mov    rdi,QWORD PTR [rbx]
    7023:	add    rbx,0x10
    7027:	call   2570 <free@plt>
    702c:	cmp    rbx,rbp
    702f:	jne    7020 <__cxa_finalize@plt+0x4aa8>
    7031:	mov    rdi,QWORD PTR [r12+0x8]
    7036:	lea    rbx,[rip+0x2080c3]        # 20f100 <program_name@@Base+0x20>
    703d:	cmp    rdi,rbx
    7040:	je     7059 <__cxa_finalize@plt+0x4ae1>
    7042:	call   2570 <free@plt>
    7047:	mov    QWORD PTR [rip+0x20801e],0x100        # 20f070 <quote_quoting_options@@Base+0x50>
    7052:	mov    QWORD PTR [rip+0x20801f],rbx        # 20f078 <quote_quoting_options@@Base+0x58>
    7059:	lea    rbx,[rip+0x208010]        # 20f070 <quote_quoting_options@@Base+0x50>
    7060:	cmp    r12,rbx
    7063:	je     7074 <__cxa_finalize@plt+0x4afc>
    7065:	mov    rdi,r12
    7068:	call   2570 <free@plt>
    706d:	mov    QWORD PTR [rip+0x207fec],rbx        # 20f060 <quote_quoting_options@@Base+0x40>
    7074:	pop    rbx
    7075:	mov    DWORD PTR [rip+0x207fd9],0x1        # 20f058 <quote_quoting_options@@Base+0x38>
    707f:	pop    rbp
    7080:	pop    r12
    7082:	ret    
    7083:	nop    DWORD PTR [rax]
    7086:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7090:	lea    rcx,[rip+0x208169]        # 20f200 <program_name@@Base+0x120>
    7097:	mov    rdx,0xffffffffffffffff
    709e:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    70a3:	nop    DWORD PTR [rax]
    70a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    70b0:	lea    rcx,[rip+0x208149]        # 20f200 <program_name@@Base+0x120>
    70b7:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    70bc:	nop    DWORD PTR [rax+0x0]
    70c0:	lea    rcx,[rip+0x208139]        # 20f200 <program_name@@Base+0x120>
    70c7:	mov    rsi,rdi
    70ca:	mov    rdx,0xffffffffffffffff
    70d1:	xor    edi,edi
    70d3:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    70d8:	nop    DWORD PTR [rax+rax*1+0x0]
    70e0:	lea    rcx,[rip+0x208119]        # 20f200 <program_name@@Base+0x120>
    70e7:	mov    rdx,rsi
    70ea:	mov    rsi,rdi
    70ed:	xor    edi,edi
    70ef:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    70f4:	xchg   ax,ax
    70f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7100:	sub    rsp,0x48
    7104:	mov    rax,rdx
    7107:	mov    rdx,QWORD PTR fs:0x28
    7110:	mov    QWORD PTR [rsp+0x38],rdx
    7115:	xor    edx,edx
    7117:	cmp    esi,0xa
    711a:	je     7184 <__cxa_finalize@plt+0x4c0c>
    711c:	mov    DWORD PTR [rsp],esi
    711f:	mov    rcx,rsp
    7122:	mov    rdx,0xffffffffffffffff
    7129:	mov    rsi,rax
    712c:	mov    QWORD PTR [rsp+0x4],0x0
    7135:	mov    QWORD PTR [rsp+0xc],0x0
    713e:	mov    QWORD PTR [rsp+0x14],0x0
    7147:	mov    QWORD PTR [rsp+0x1c],0x0
    7150:	mov    QWORD PTR [rsp+0x24],0x0
    7159:	mov    QWORD PTR [rsp+0x2c],0x0
    7162:	mov    DWORD PTR [rsp+0x34],0x0
    716a:	call   6bb0 <__cxa_finalize@plt+0x4638>
    716f:	mov    rcx,QWORD PTR [rsp+0x38]
    7174:	xor    rcx,QWORD PTR fs:0x28
    717d:	jne    7189 <__cxa_finalize@plt+0x4c11>
    717f:	add    rsp,0x48
    7183:	ret    
    7184:	call   2050 <abort@plt>
    7189:	call   2180 <__stack_chk_fail@plt>
    718e:	xchg   ax,ax
    7190:	sub    rsp,0x48
    7194:	mov    rax,rdx
    7197:	mov    rdx,rcx
    719a:	mov    rcx,QWORD PTR fs:0x28
    71a3:	mov    QWORD PTR [rsp+0x38],rcx
    71a8:	xor    ecx,ecx
    71aa:	cmp    esi,0xa
    71ad:	je     7210 <__cxa_finalize@plt+0x4c98>
    71af:	mov    DWORD PTR [rsp],esi
    71b2:	mov    rcx,rsp
    71b5:	mov    rsi,rax
    71b8:	mov    QWORD PTR [rsp+0x4],0x0
    71c1:	mov    QWORD PTR [rsp+0xc],0x0
    71ca:	mov    QWORD PTR [rsp+0x14],0x0
    71d3:	mov    QWORD PTR [rsp+0x1c],0x0
    71dc:	mov    QWORD PTR [rsp+0x24],0x0
    71e5:	mov    QWORD PTR [rsp+0x2c],0x0
    71ee:	mov    DWORD PTR [rsp+0x34],0x0
    71f6:	call   6bb0 <__cxa_finalize@plt+0x4638>
    71fb:	mov    rdx,QWORD PTR [rsp+0x38]
    7200:	xor    rdx,QWORD PTR fs:0x28
    7209:	jne    7215 <__cxa_finalize@plt+0x4c9d>
    720b:	add    rsp,0x48
    720f:	ret    
    7210:	call   2050 <abort@plt>
    7215:	call   2180 <__stack_chk_fail@plt>
    721a:	nop    WORD PTR [rax+rax*1+0x0]
    7220:	mov    rdx,rsi
    7223:	mov    esi,edi
    7225:	xor    edi,edi
    7227:	jmp    7100 <__cxa_finalize@plt+0x4b88>
    722c:	nop    DWORD PTR [rax+0x0]
    7230:	mov    rcx,rdx
    7233:	mov    rdx,rsi
    7236:	mov    esi,edi
    7238:	xor    edi,edi
    723a:	jmp    7190 <__cxa_finalize@plt+0x4c18>
    723f:	nop
    7240:	sub    rsp,0x48
    7244:	mov    ecx,edx
    7246:	mov    rax,QWORD PTR fs:0x28
    724f:	mov    QWORD PTR [rsp+0x38],rax
    7254:	xor    eax,eax
    7256:	mov    rax,QWORD PTR [rip+0x207fd3]        # 20f230 <program_name@@Base+0x150>
    725d:	mov    r8,rsp
    7260:	and    ecx,0x1f
    7263:	movdqa xmm0,XMMWORD PTR [rip+0x207f95]        # 20f200 <program_name@@Base+0x120>
    726b:	mov    QWORD PTR [rsp+0x30],rax
    7270:	mov    eax,edx
    7272:	movaps XMMWORD PTR [rsp],xmm0
    7276:	shr    al,0x5
    7279:	movzx  eax,al
    727c:	lea    r9,[r8+rax*4+0x8]
    7281:	movdqa xmm0,XMMWORD PTR [rip+0x207f87]        # 20f210 <program_name@@Base+0x130>
    7289:	movaps XMMWORD PTR [rsp+0x10],xmm0
    728e:	movdqa xmm0,XMMWORD PTR [rip+0x207f8a]        # 20f220 <program_name@@Base+0x140>
    7296:	movaps XMMWORD PTR [rsp+0x20],xmm0
    729b:	mov    edx,DWORD PTR [r9]
    729e:	mov    eax,edx
    72a0:	shr    eax,cl
    72a2:	not    eax
    72a4:	and    eax,0x1
    72a7:	shl    eax,cl
    72a9:	mov    rcx,r8
    72ac:	xor    eax,edx
    72ae:	mov    rdx,rsi
    72b1:	mov    rsi,rdi
    72b4:	mov    DWORD PTR [r9],eax
    72b7:	xor    edi,edi
    72b9:	call   6bb0 <__cxa_finalize@plt+0x4638>
    72be:	mov    rsi,QWORD PTR [rsp+0x38]
    72c3:	xor    rsi,QWORD PTR fs:0x28
    72cc:	jne    72d3 <__cxa_finalize@plt+0x4d5b>
    72ce:	add    rsp,0x48
    72d2:	ret    
    72d3:	call   2180 <__stack_chk_fail@plt>
    72d8:	nop    DWORD PTR [rax+rax*1+0x0]
    72e0:	movsx  edx,sil
    72e4:	mov    rsi,0xffffffffffffffff
    72eb:	jmp    7240 <__cxa_finalize@plt+0x4cc8>
    72f0:	mov    edx,0x3a
    72f5:	mov    rsi,0xffffffffffffffff
    72fc:	jmp    7240 <__cxa_finalize@plt+0x4cc8>
    7301:	nop    DWORD PTR [rax+rax*1+0x0]
    7306:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7310:	mov    edx,0x3a
    7315:	jmp    7240 <__cxa_finalize@plt+0x4cc8>
    731a:	nop    WORD PTR [rax+rax*1+0x0]
    7320:	sub    rsp,0x48
    7324:	mov    rax,rdx
    7327:	mov    rdx,QWORD PTR fs:0x28
    7330:	mov    QWORD PTR [rsp+0x38],rdx
    7335:	xor    edx,edx
    7337:	cmp    esi,0xa
    733a:	je     73a4 <__cxa_finalize@plt+0x4e2c>
    733c:	mov    DWORD PTR [rsp],esi
    733f:	mov    rcx,rsp
    7342:	mov    rdx,0xffffffffffffffff
    7349:	mov    rsi,rax
    734c:	mov    QWORD PTR [rsp+0x4],0x0
    7355:	mov    QWORD PTR [rsp+0xc],0x4000000
    735e:	mov    QWORD PTR [rsp+0x14],0x0
    7367:	mov    QWORD PTR [rsp+0x1c],0x0
    7370:	mov    QWORD PTR [rsp+0x24],0x0
    7379:	mov    QWORD PTR [rsp+0x2c],0x0
    7382:	mov    DWORD PTR [rsp+0x34],0x0
    738a:	call   6bb0 <__cxa_finalize@plt+0x4638>
    738f:	mov    rcx,QWORD PTR [rsp+0x38]
    7394:	xor    rcx,QWORD PTR fs:0x28
    739d:	jne    73a9 <__cxa_finalize@plt+0x4e31>
    739f:	add    rsp,0x48
    73a3:	ret    
    73a4:	call   2050 <abort@plt>
    73a9:	call   2180 <__stack_chk_fail@plt>
    73ae:	xchg   ax,ax
    73b0:	sub    rsp,0x48
    73b4:	mov    r9,rcx
    73b7:	mov    rcx,QWORD PTR [rip+0x207e72]        # 20f230 <program_name@@Base+0x150>
    73be:	movdqa xmm0,XMMWORD PTR [rip+0x207e3a]        # 20f200 <program_name@@Base+0x120>
    73c6:	mov    rax,QWORD PTR fs:0x28
    73cf:	mov    QWORD PTR [rsp+0x38],rax
    73d4:	xor    eax,eax
    73d6:	movaps XMMWORD PTR [rsp],xmm0
    73da:	test   rsi,rsi
    73dd:	mov    QWORD PTR [rsp+0x30],rcx
    73e2:	mov    DWORD PTR [rsp],0xa
    73e9:	movdqa xmm0,XMMWORD PTR [rip+0x207e1f]        # 20f210 <program_name@@Base+0x130>
    73f1:	movaps XMMWORD PTR [rsp+0x10],xmm0
    73f6:	movdqa xmm0,XMMWORD PTR [rip+0x207e22]        # 20f220 <program_name@@Base+0x140>
    73fe:	movaps XMMWORD PTR [rsp+0x20],xmm0
    7403:	je     7437 <__cxa_finalize@plt+0x4ebf>
    7405:	test   rdx,rdx
    7408:	je     7437 <__cxa_finalize@plt+0x4ebf>
    740a:	mov    QWORD PTR [rsp+0x28],rsi
    740f:	mov    QWORD PTR [rsp+0x30],rdx
    7414:	mov    rcx,rsp
    7417:	mov    rdx,r8
    741a:	mov    rsi,r9
    741d:	call   6bb0 <__cxa_finalize@plt+0x4638>
    7422:	mov    rdi,QWORD PTR [rsp+0x38]
    7427:	xor    rdi,QWORD PTR fs:0x28
    7430:	jne    743c <__cxa_finalize@plt+0x4ec4>
    7432:	add    rsp,0x48
    7436:	ret    
    7437:	call   2050 <abort@plt>
    743c:	call   2180 <__stack_chk_fail@plt>
    7441:	nop    DWORD PTR [rax+rax*1+0x0]
    7446:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7450:	mov    r8,0xffffffffffffffff
    7457:	jmp    73b0 <__cxa_finalize@plt+0x4e38>
    745c:	nop    DWORD PTR [rax+0x0]
    7460:	mov    rcx,rdx
    7463:	mov    r8,0xffffffffffffffff
    746a:	mov    rdx,rsi
    746d:	mov    rsi,rdi
    7470:	xor    edi,edi
    7472:	jmp    73b0 <__cxa_finalize@plt+0x4e38>
    7477:	nop    WORD PTR [rax+rax*1+0x0]
    7480:	mov    r8,rcx
    7483:	mov    rcx,rdx
    7486:	mov    rdx,rsi
    7489:	mov    rsi,rdi
    748c:	xor    edi,edi
    748e:	jmp    73b0 <__cxa_finalize@plt+0x4e38>
    7493:	nop    DWORD PTR [rax]
    7496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74a0:	lea    rcx,[rip+0x207b79]        # 20f020 <quote_quoting_options@@Base>
    74a7:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    74ac:	nop    DWORD PTR [rax+0x0]
    74b0:	lea    rcx,[rip+0x207b69]        # 20f020 <quote_quoting_options@@Base>
    74b7:	mov    rdx,rsi
    74ba:	mov    rsi,rdi
    74bd:	xor    edi,edi
    74bf:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    74c4:	xchg   ax,ax
    74c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74d0:	lea    rcx,[rip+0x207b49]        # 20f020 <quote_quoting_options@@Base>
    74d7:	mov    rdx,0xffffffffffffffff
    74de:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    74e3:	nop    DWORD PTR [rax]
    74e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74f0:	lea    rcx,[rip+0x207b29]        # 20f020 <quote_quoting_options@@Base>
    74f7:	mov    rsi,rdi
    74fa:	mov    rdx,0xffffffffffffffff
    7501:	xor    edi,edi
    7503:	jmp    6bb0 <__cxa_finalize@plt+0x4638>
    7508:	nop    DWORD PTR [rax+rax*1+0x0]
    7510:	push   r15
    7512:	push   r14
    7514:	push   r13
    7516:	push   r12
    7518:	mov    r12,rdi
    751b:	push   rbp
    751c:	push   rbx
    751d:	mov    rbp,rsi
    7520:	xor    ebx,ebx
    7522:	sub    rsp,0x138
    7529:	mov    rax,QWORD PTR fs:0x28
    7532:	mov    QWORD PTR [rsp+0x128],rax
    753a:	xor    eax,eax
    753c:	call   3ce0 <__cxa_finalize@plt+0x1768>
    7541:	mov    rdi,rbp
    7544:	mov    r13,rax
    7547:	call   3ce0 <__cxa_finalize@plt+0x1768>
    754c:	mov    rdi,r13
    754f:	mov    r14,rax
    7552:	call   3d40 <__cxa_finalize@plt+0x17c8>
    7557:	mov    rdi,r14
    755a:	mov    r15,rax
    755d:	call   3d40 <__cxa_finalize@plt+0x17c8>
    7562:	cmp    r15,rax
    7565:	je     7598 <__cxa_finalize@plt+0x5020>
    7567:	mov    rcx,QWORD PTR [rsp+0x128]
    756f:	xor    rcx,QWORD PTR fs:0x28
    7578:	mov    eax,ebx
    757a:	jne    7672 <__cxa_finalize@plt+0x50fa>
    7580:	add    rsp,0x138
    7587:	pop    rbx
    7588:	pop    rbp
    7589:	pop    r12
    758b:	pop    r13
    758d:	pop    r14
    758f:	pop    r15
    7591:	ret    
    7592:	nop    WORD PTR [rax+rax*1+0x0]
    7598:	mov    rdx,r15
    759b:	mov    rsi,r14
    759e:	mov    rdi,r13
    75a1:	call   2290 <memcmp@plt>
    75a6:	test   eax,eax
    75a8:	jne    7567 <__cxa_finalize@plt+0x4fef>
    75aa:	mov    rdi,r12
    75ad:	call   3c00 <__cxa_finalize@plt+0x1688>
    75b2:	mov    rdi,rbp
    75b5:	mov    r12,rax
    75b8:	call   3c00 <__cxa_finalize@plt+0x1688>
    75bd:	mov    rdx,rsp
    75c0:	mov    rsi,r12
    75c3:	mov    edi,0x1
    75c8:	mov    rbp,rax
    75cb:	call   2350 <__xstat@plt>
    75d0:	test   eax,eax
    75d2:	jne    7650 <__cxa_finalize@plt+0x50d8>
    75d4:	lea    rdx,[rsp+0x90]
    75dc:	mov    rsi,rbp
    75df:	mov    edi,0x1
    75e4:	call   2350 <__xstat@plt>
    75e9:	test   eax,eax
    75eb:	jne    7628 <__cxa_finalize@plt+0x50b0>
    75ed:	xor    ebx,ebx
    75ef:	mov    rax,QWORD PTR [rsp+0x98]
    75f7:	cmp    QWORD PTR [rsp+0x8],rax
    75fc:	jne    760d <__cxa_finalize@plt+0x5095>
    75fe:	mov    rax,QWORD PTR [rsp+0x90]
    7606:	cmp    QWORD PTR [rsp],rax
    760a:	sete   bl
    760d:	mov    rdi,r12
    7610:	call   2570 <free@plt>
    7615:	mov    rdi,rbp
    7618:	call   2570 <free@plt>
    761d:	jmp    7567 <__cxa_finalize@plt+0x4fef>
    7622:	nop    WORD PTR [rax+rax*1+0x0]
    7628:	call   2060 <__errno_location@plt>
    762d:	mov    esi,DWORD PTR [rax]
    762f:	lea    rdx,[rip+0x404c]        # b682 <_IO_stdin_used@@Base+0x542>
    7636:	mov    rcx,rbp
    7639:	mov    edi,0x1
    763e:	xor    eax,eax
    7640:	call   2450 <error@plt>
    7645:	jmp    75ed <__cxa_finalize@plt+0x5075>
    7647:	nop    WORD PTR [rax+rax*1+0x0]
    7650:	call   2060 <__errno_location@plt>
    7655:	mov    esi,DWORD PTR [rax]
    7657:	lea    rdx,[rip+0x4024]        # b682 <_IO_stdin_used@@Base+0x542>
    765e:	mov    rcx,r12
    7661:	mov    edi,0x1
    7666:	xor    eax,eax
    7668:	call   2450 <error@plt>
    766d:	jmp    75d4 <__cxa_finalize@plt+0x505c>
    7672:	call   2180 <__stack_chk_fail@plt>
    7677:	nop    WORD PTR [rax+rax*1+0x0]
    7680:	push   r15
    7682:	push   r14
    7684:	push   r13
    7686:	push   r12
    7688:	mov    r12,r9
    768b:	push   rbp
    768c:	push   rbx
    768d:	mov    rbp,rdi
    7690:	mov    rbx,r8
    7693:	sub    rsp,0x28
    7697:	test   rsi,rsi
    769a:	je     7730 <__cxa_finalize@plt+0x51b8>
    76a0:	mov    r8,rdx
    76a3:	lea    rdx,[rip+0x463e]        # bce8 <quoting_style_vals@@Base+0x28>
    76aa:	mov    r9,rcx
    76ad:	xor    eax,eax
    76af:	mov    rcx,rsi
    76b2:	mov    esi,0x1
    76b7:	call   2500 <__fprintf_chk@plt>
    76bc:	lea    rsi,[rip+0x4638]        # bcfb <quoting_style_vals@@Base+0x3b>
    76c3:	xor    edi,edi
    76c5:	mov    edx,0x5
    76ca:	call   2130 <dcgettext@plt>
    76cf:	lea    rdx,[rip+0x494a]        # c020 <version_etc_copyright@@Base>
    76d6:	mov    rcx,rax
    76d9:	mov    r8d,0x7e1
    76df:	mov    esi,0x1
    76e4:	mov    rdi,rbp
    76e7:	xor    eax,eax
    76e9:	call   2500 <__fprintf_chk@plt>
    76ee:	lea    rsi,[rip+0x4693]        # bd88 <quoting_style_vals@@Base+0xc8>
    76f5:	xor    edi,edi
    76f7:	mov    edx,0x5
    76fc:	call   2130 <dcgettext@plt>
    7701:	mov    rsi,rbp
    7704:	mov    rdi,rax
    7707:	call   22a0 <fputs_unlocked@plt>
    770c:	cmp    r12,0x9
    7710:	ja     7a40 <__cxa_finalize@plt+0x54c8>
    7716:	lea    rdx,[rip+0x48c3]        # bfe0 <quoting_style_vals@@Base+0x320>
    771d:	movsxd rax,DWORD PTR [rdx+r12*4]
    7721:	add    rax,rdx
    7724:	jmp    rax
    7726:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7730:	mov    r8,rcx
    7733:	mov    rcx,rdx
    7736:	lea    rdx,[rip+0x45b7]        # bcf4 <quoting_style_vals@@Base+0x34>
    773d:	mov    esi,0x1
    7742:	xor    eax,eax
    7744:	call   2500 <__fprintf_chk@plt>
    7749:	jmp    76bc <__cxa_finalize@plt+0x5144>
    774e:	xchg   ax,ax
    7750:	mov    r9,QWORD PTR [rbx+0x38]
    7754:	mov    rax,QWORD PTR [rbx+0x10]
    7758:	lea    rsi,[rip+0x4799]        # bef8 <quoting_style_vals@@Base+0x238>
    775f:	mov    r8,QWORD PTR [rbx+0x8]
    7763:	mov    edx,0x5
    7768:	xor    edi,edi
    776a:	mov    r13,QWORD PTR [rbx+0x30]
    776e:	mov    r12,QWORD PTR [rbx+0x28]
    7772:	mov    QWORD PTR [rsp+0x10],r9
    7777:	mov    r15,QWORD PTR [rbx+0x20]
    777b:	mov    r14,QWORD PTR [rbx+0x18]
    777f:	mov    QWORD PTR [rsp],rax
    7783:	mov    QWORD PTR [rsp+0x8],r8
    7788:	mov    rbx,QWORD PTR [rbx]
    778b:	call   2130 <dcgettext@plt>
    7790:	sub    rsp,0x8
    7794:	mov    r9,QWORD PTR [rsp+0x18]
    7799:	mov    rcx,rbx
    779c:	mov    rdx,rax
    779f:	mov    rdi,rbp
    77a2:	mov    esi,0x1
    77a7:	xor    eax,eax
    77a9:	push   r9
    77ab:	push   r13
    77ad:	push   r12
    77af:	push   r15
    77b1:	push   r14
    77b3:	mov    r9,QWORD PTR [rsp+0x30]
    77b8:	mov    r8,QWORD PTR [rsp+0x38]
    77bd:	call   2500 <__fprintf_chk@plt>
    77c2:	add    rsp,0x30
    77c6:	add    rsp,0x28
    77ca:	pop    rbx
    77cb:	pop    rbp
    77cc:	pop    r12
    77ce:	pop    r13
    77d0:	pop    r14
    77d2:	pop    r15
    77d4:	ret    
    77d5:	nop    DWORD PTR [rax]
    77d8:	mov    r10,QWORD PTR [rbx+0x40]
    77dc:	mov    r9,QWORD PTR [rbx+0x38]
    77e0:	lea    rsi,[rip+0x4741]        # bf28 <quoting_style_vals@@Base+0x268>
    77e7:	mov    rax,QWORD PTR [rbx+0x10]
    77eb:	mov    r8,QWORD PTR [rbx+0x8]
    77ef:	mov    edx,0x5
    77f4:	mov    r13,QWORD PTR [rbx+0x30]
    77f8:	mov    r12,QWORD PTR [rbx+0x28]
    77fc:	mov    r15,QWORD PTR [rbx+0x20]
    7800:	mov    r14,QWORD PTR [rbx+0x18]
    7804:	mov    rbx,QWORD PTR [rbx]
    7807:	mov    QWORD PTR [rsp+0x18],r10
    780c:	mov    QWORD PTR [rsp+0x10],r9
    7811:	mov    QWORD PTR [rsp],rax
    7815:	mov    QWORD PTR [rsp+0x8],r8
    781a:	xor    edi,edi
    781c:	call   2130 <dcgettext@plt>
    7821:	mov    r10,QWORD PTR [rsp+0x18]
    7826:	push   r10
    7828:	jmp    7794 <__cxa_finalize@plt+0x521c>
    782d:	nop    DWORD PTR [rax]
    7830:	mov    rbx,QWORD PTR [rbx]
    7833:	lea    rsi,[rip+0x44c5]        # bcff <quoting_style_vals@@Base+0x3f>
    783a:	mov    edx,0x5
    783f:	xor    edi,edi
    7841:	call   2130 <dcgettext@plt>
    7846:	add    rsp,0x28
    784a:	mov    rcx,rbx
    784d:	mov    rdi,rbp
    7850:	pop    rbx
    7851:	pop    rbp
    7852:	pop    r12
    7854:	pop    r13
    7856:	pop    r14
    7858:	pop    r15
    785a:	mov    rdx,rax
    785d:	mov    esi,0x1
    7862:	xor    eax,eax
    7864:	jmp    2500 <__fprintf_chk@plt>
    7869:	nop    DWORD PTR [rax+0x0]
    7870:	mov    r12,QWORD PTR [rbx+0x8]
    7874:	lea    rsi,[rip+0x4494]        # bd0f <quoting_style_vals@@Base+0x4f>
    787b:	mov    rbx,QWORD PTR [rbx]
    787e:	mov    edx,0x5
    7883:	xor    edi,edi
    7885:	call   2130 <dcgettext@plt>
    788a:	add    rsp,0x28
    788e:	mov    r8,r12
    7891:	mov    rcx,rbx
    7894:	mov    rdi,rbp
    7897:	mov    rdx,rax
    789a:	mov    esi,0x1
    789f:	pop    rbx
    78a0:	pop    rbp
    78a1:	pop    r12
    78a3:	pop    r13
    78a5:	pop    r14
    78a7:	pop    r15
    78a9:	xor    eax,eax
    78ab:	jmp    2500 <__fprintf_chk@plt>
    78b0:	mov    r13,QWORD PTR [rbx+0x10]
    78b4:	mov    r12,QWORD PTR [rbx+0x8]
    78b8:	lea    rsi,[rip+0x4467]        # bd26 <quoting_style_vals@@Base+0x66>
    78bf:	mov    rbx,QWORD PTR [rbx]
    78c2:	mov    edx,0x5
    78c7:	xor    edi,edi
    78c9:	call   2130 <dcgettext@plt>
    78ce:	add    rsp,0x28
    78d2:	mov    r9,r13
    78d5:	mov    r8,r12
    78d8:	mov    rcx,rbx
    78db:	mov    rdi,rbp
    78de:	mov    rdx,rax
    78e1:	pop    rbx
    78e2:	pop    rbp
    78e3:	pop    r12
    78e5:	pop    r13
    78e7:	pop    r14
    78e9:	pop    r15
    78eb:	mov    esi,0x1
    78f0:	xor    eax,eax
    78f2:	jmp    2500 <__fprintf_chk@plt>
    78f7:	nop    WORD PTR [rax+rax*1+0x0]
    7900:	lea    rsi,[rip+0x4551]        # be58 <quoting_style_vals@@Base+0x198>
    7907:	mov    edx,0x5
    790c:	xor    edi,edi
    790e:	mov    r14,QWORD PTR [rbx+0x18]
    7912:	mov    r13,QWORD PTR [rbx+0x10]
    7916:	mov    r12,QWORD PTR [rbx+0x8]
    791a:	mov    rbx,QWORD PTR [rbx]
    791d:	call   2130 <dcgettext@plt>
    7922:	sub    rsp,0x8
    7926:	push   r14
    7928:	mov    rdx,rax
    792b:	mov    r9,r13
    792e:	mov    r8,r12
    7931:	mov    rcx,rbx
    7934:	mov    rdi,rbp
    7937:	mov    esi,0x1
    793c:	xor    eax,eax
    793e:	call   2500 <__fprintf_chk@plt>
    7943:	pop    rax
    7944:	pop    rdx
    7945:	add    rsp,0x28
    7949:	pop    rbx
    794a:	pop    rbp
    794b:	pop    r12
    794d:	pop    r13
    794f:	pop    r14
    7951:	pop    r15
    7953:	ret    
    7954:	nop    DWORD PTR [rax+0x0]
    7958:	mov    r15,QWORD PTR [rbx+0x20]
    795c:	lea    rsi,[rip+0x4515]        # be78 <quoting_style_vals@@Base+0x1b8>
    7963:	mov    edx,0x5
    7968:	xor    edi,edi
    796a:	mov    r14,QWORD PTR [rbx+0x18]
    796e:	mov    r13,QWORD PTR [rbx+0x10]
    7972:	mov    r12,QWORD PTR [rbx+0x8]
    7976:	mov    rbx,QWORD PTR [rbx]
    7979:	call   2130 <dcgettext@plt>
    797e:	push   r15
    7980:	jmp    7926 <__cxa_finalize@plt+0x53ae>
    7982:	nop    WORD PTR [rax+rax*1+0x0]
    7988:	mov    r8,QWORD PTR [rbx+0x8]
    798c:	mov    r12,QWORD PTR [rbx+0x28]
    7990:	lea    rsi,[rip+0x4509]        # bea0 <quoting_style_vals@@Base+0x1e0>
    7997:	mov    r15,QWORD PTR [rbx+0x20]
    799b:	mov    r14,QWORD PTR [rbx+0x18]
    799f:	mov    edx,0x5
    79a4:	mov    r13,QWORD PTR [rbx+0x10]
    79a8:	xor    edi,edi
    79aa:	mov    rbx,QWORD PTR [rbx]
    79ad:	mov    QWORD PTR [rsp],r8
    79b1:	call   2130 <dcgettext@plt>
    79b6:	sub    rsp,0x8
    79ba:	mov    r9,r13
    79bd:	push   r12
    79bf:	push   r15
    79c1:	push   r14
    79c3:	mov    r8,QWORD PTR [rsp+0x20]
    79c8:	mov    rcx,rbx
    79cb:	mov    rdx,rax
    79ce:	mov    rdi,rbp
    79d1:	mov    esi,0x1
    79d6:	xor    eax,eax
    79d8:	call   2500 <__fprintf_chk@plt>
    79dd:	add    rsp,0x20
    79e1:	add    rsp,0x28
    79e5:	pop    rbx
    79e6:	pop    rbp
    79e7:	pop    r12
    79e9:	pop    r13
    79eb:	pop    r14
    79ed:	pop    r15
    79ef:	ret    
    79f0:	mov    r9,QWORD PTR [rbx+0x10]
    79f4:	mov    r13,QWORD PTR [rbx+0x30]
    79f8:	lea    rsi,[rip+0x44c9]        # bec8 <quoting_style_vals@@Base+0x208>
    79ff:	mov    r12,QWORD PTR [rbx+0x28]
    7a03:	mov    r15,QWORD PTR [rbx+0x20]
    7a07:	mov    edx,0x5
    7a0c:	mov    r14,QWORD PTR [rbx+0x18]
    7a10:	mov    r8,QWORD PTR [rbx+0x8]
    7a14:	xor    edi,edi
    7a16:	mov    QWORD PTR [rsp+0x8],r9
    7a1b:	mov    rbx,QWORD PTR [rbx]
    7a1e:	mov    QWORD PTR [rsp],r8
    7a22:	call   2130 <dcgettext@plt>
    7a27:	push   r13
    7a29:	push   r12
    7a2b:	push   r15
    7a2d:	push   r14
    7a2f:	mov    r9,QWORD PTR [rsp+0x28]
    7a34:	jmp    79c3 <__cxa_finalize@plt+0x544b>
    7a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7a40:	mov    r10,QWORD PTR [rbx+0x40]
    7a44:	mov    r9,QWORD PTR [rbx+0x38]
    7a48:	mov    edx,0x5
    7a4d:	mov    rax,QWORD PTR [rbx+0x10]
    7a51:	mov    r8,QWORD PTR [rbx+0x8]
    7a55:	lea    rsi,[rip+0x4504]        # bf60 <quoting_style_vals@@Base+0x2a0>
    7a5c:	mov    r13,QWORD PTR [rbx+0x30]
    7a60:	mov    r12,QWORD PTR [rbx+0x28]
    7a64:	mov    r15,QWORD PTR [rbx+0x20]
    7a68:	mov    r14,QWORD PTR [rbx+0x18]
    7a6c:	mov    QWORD PTR [rsp+0x18],r10
    7a71:	mov    QWORD PTR [rsp+0x10],r9
    7a76:	mov    QWORD PTR [rsp],rax
    7a7a:	mov    QWORD PTR [rsp+0x8],r8
    7a7f:	mov    rbx,QWORD PTR [rbx]
    7a82:	jmp    781a <__cxa_finalize@plt+0x52a2>
    7a87:	call   2050 <abort@plt>
    7a8c:	nop    DWORD PTR [rax+0x0]
    7a90:	xor    r9d,r9d
    7a93:	cmp    QWORD PTR [r8],0x0
    7a97:	je     7aab <__cxa_finalize@plt+0x5533>
    7a99:	nop    DWORD PTR [rax+0x0]
    7aa0:	add    r9,0x1
    7aa4:	cmp    QWORD PTR [r8+r9*8],0x0
    7aa9:	jne    7aa0 <__cxa_finalize@plt+0x5528>
    7aab:	jmp    7680 <__cxa_finalize@plt+0x5108>
    7ab0:	sub    rsp,0x68
    7ab4:	mov    r10,r8
    7ab7:	xor    r9d,r9d
    7aba:	mov    rax,QWORD PTR fs:0x28
    7ac3:	mov    QWORD PTR [rsp+0x58],rax
    7ac8:	xor    eax,eax
    7aca:	mov    r8,rsp
    7acd:	nop    DWORD PTR [rax]
    7ad0:	mov    eax,DWORD PTR [r10]
    7ad3:	cmp    eax,0x2f
    7ad6:	ja     7b1a <__cxa_finalize@plt+0x55a2>
    7ad8:	mov    r11d,eax
    7adb:	add    r11,QWORD PTR [r10+0x10]
    7adf:	add    eax,0x8
    7ae2:	mov    DWORD PTR [r10],eax
    7ae5:	mov    rax,QWORD PTR [r11]
    7ae8:	test   rax,rax
    7aeb:	mov    QWORD PTR [r8+r9*8],rax
    7aef:	je     7afb <__cxa_finalize@plt+0x5583>
    7af1:	add    r9,0x1
    7af5:	cmp    r9,0xa
    7af9:	jne    7ad0 <__cxa_finalize@plt+0x5558>
    7afb:	call   7680 <__cxa_finalize@plt+0x5108>
    7b00:	mov    rax,QWORD PTR [rsp+0x58]
    7b05:	xor    rax,QWORD PTR fs:0x28
    7b0e:	jne    7b15 <__cxa_finalize@plt+0x559d>
    7b10:	add    rsp,0x68
    7b14:	ret    
    7b15:	call   2180 <__stack_chk_fail@plt>
    7b1a:	mov    r11,QWORD PTR [r10+0x8]
    7b1e:	lea    rax,[r11+0x8]
    7b22:	mov    QWORD PTR [r10+0x8],rax
    7b26:	jmp    7ae5 <__cxa_finalize@plt+0x556d>
    7b28:	nop    DWORD PTR [rax+rax*1+0x0]
    7b30:	push   rbp
    7b31:	push   rbx
    7b32:	mov    r10d,0x20
    7b38:	xor    r11d,r11d
    7b3b:	sub    rsp,0xb8
    7b42:	mov    rax,QWORD PTR fs:0x28
    7b4b:	mov    QWORD PTR [rsp+0x78],rax
    7b50:	xor    eax,eax
    7b52:	lea    rax,[rsp+0xd0]
    7b5a:	mov    QWORD PTR [rsp+0xa0],r8
    7b62:	lea    rbx,[rsp+0xd0]
    7b6a:	lea    r8,[rsp+0x20]
    7b6f:	mov    QWORD PTR [rsp+0xa8],r9
    7b77:	mov    DWORD PTR [rsp+0x8],0x20
    7b7f:	mov    QWORD PTR [rsp+0x10],rax
    7b84:	lea    rax,[rsp+0x80]
    7b8c:	xor    r9d,r9d
    7b8f:	mov    QWORD PTR [rsp+0x18],rax
    7b94:	mov    rbp,rax
    7b97:	nop    WORD PTR [rax+rax*1+0x0]
    7ba0:	cmp    r10d,0x2f
    7ba4:	ja     7bfc <__cxa_finalize@plt+0x5684>
    7ba6:	mov    eax,r10d
    7ba9:	mov    r11d,0x1
    7baf:	add    r10d,0x8
    7bb3:	add    rax,rbp
    7bb6:	mov    rax,QWORD PTR [rax]
    7bb9:	test   rax,rax
    7bbc:	mov    QWORD PTR [r8+r9*8],rax
    7bc0:	je     7bcc <__cxa_finalize@plt+0x5654>
    7bc2:	add    r9,0x1
    7bc6:	cmp    r9,0xa
    7bca:	jne    7ba0 <__cxa_finalize@plt+0x5628>
    7bcc:	test   r11b,r11b
    7bcf:	jne    7bf5 <__cxa_finalize@plt+0x567d>
    7bd1:	call   7680 <__cxa_finalize@plt+0x5108>
    7bd6:	mov    rax,QWORD PTR [rsp+0x78]
    7bdb:	xor    rax,QWORD PTR fs:0x28
    7be4:	jne    7bf0 <__cxa_finalize@plt+0x5678>
    7be6:	add    rsp,0xb8
    7bed:	pop    rbx
    7bee:	pop    rbp
    7bef:	ret    
    7bf0:	call   2180 <__stack_chk_fail@plt>
    7bf5:	mov    DWORD PTR [rsp+0x8],r10d
    7bfa:	jmp    7bd1 <__cxa_finalize@plt+0x5659>
    7bfc:	mov    rax,rbx
    7bff:	add    rbx,0x8
    7c03:	jmp    7bb6 <__cxa_finalize@plt+0x563e>
    7c05:	nop
    7c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7c10:	push   rbx
    7c11:	lea    rsi,[rip+0x412a]        # bd42 <quoting_style_vals@@Base+0x82>
    7c18:	mov    edx,0x5
    7c1d:	xor    edi,edi
    7c1f:	call   2130 <dcgettext@plt>
    7c24:	lea    rdx,[rip+0x412c]        # bd57 <quoting_style_vals@@Base+0x97>
    7c2b:	mov    rsi,rax
    7c2e:	mov    edi,0x1
    7c33:	xor    eax,eax
    7c35:	call   2420 <__printf_chk@plt>
    7c3a:	lea    rsi,[rip+0x412c]        # bd6d <quoting_style_vals@@Base+0xad>
    7c41:	mov    edx,0x5
    7c46:	xor    edi,edi
    7c48:	call   2130 <dcgettext@plt>
    7c4d:	lea    rcx,[rip+0x3864]        # b4b8 <_IO_stdin_used@@Base+0x378>
    7c54:	lea    rdx,[rip+0x3566]        # b1c1 <_IO_stdin_used@@Base+0x81>
    7c5b:	mov    rsi,rax
    7c5e:	mov    edi,0x1
    7c63:	xor    eax,eax
    7c65:	call   2420 <__printf_chk@plt>
    7c6a:	mov    rbx,QWORD PTR [rip+0x207417]        # 20f088 <stdout@@GLIBC_2.2.5>
    7c71:	lea    rsi,[rip+0x4328]        # bfa0 <quoting_style_vals@@Base+0x2e0>
    7c78:	xor    edi,edi
    7c7a:	mov    edx,0x5
    7c7f:	call   2130 <dcgettext@plt>
    7c84:	mov    rsi,rbx
    7c87:	mov    rdi,rax
    7c8a:	pop    rbx
    7c8b:	jmp    22a0 <fputs_unlocked@plt>
    7c90:	push   rbx
    7c91:	mov    rbx,rdi
    7c94:	call   2380 <malloc@plt>
    7c99:	test   rax,rax
    7c9c:	jne    7ca3 <__cxa_finalize@plt+0x572b>
    7c9e:	test   rbx,rbx
    7ca1:	jne    7ca5 <__cxa_finalize@plt+0x572d>
    7ca3:	pop    rbx
    7ca4:	ret    
    7ca5:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7caa:	nop    WORD PTR [rax+rax*1+0x0]
    7cb0:	mov    rax,rdi
    7cb3:	mul    rsi
    7cb6:	mov    rdi,rax
    7cb9:	seto   al
    7cbc:	test   rdi,rdi
    7cbf:	js     7ccb <__cxa_finalize@plt+0x5753>
    7cc1:	movzx  eax,al
    7cc4:	test   rax,rax
    7cc7:	jne    7ccb <__cxa_finalize@plt+0x5753>
    7cc9:	jmp    7c90 <__cxa_finalize@plt+0x5718>
    7ccb:	sub    rsp,0x8
    7ccf:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7cd4:	xchg   ax,ax
    7cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7ce0:	jmp    7c90 <__cxa_finalize@plt+0x5718>
    7ce2:	nop    DWORD PTR [rax+0x0]
    7ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7cf0:	test   rsi,rsi
    7cf3:	push   rbx
    7cf4:	mov    rbx,rsi
    7cf7:	jne    7cfe <__cxa_finalize@plt+0x5786>
    7cf9:	test   rdi,rdi
    7cfc:	jne    7d18 <__cxa_finalize@plt+0x57a0>
    7cfe:	mov    rsi,rbx
    7d01:	call   23f0 <realloc@plt>
    7d06:	test   rax,rax
    7d09:	jne    7d10 <__cxa_finalize@plt+0x5798>
    7d0b:	test   rbx,rbx
    7d0e:	jne    7d21 <__cxa_finalize@plt+0x57a9>
    7d10:	pop    rbx
    7d11:	ret    
    7d12:	nop    WORD PTR [rax+rax*1+0x0]
    7d18:	call   2570 <free@plt>
    7d1d:	xor    eax,eax
    7d1f:	pop    rbx
    7d20:	ret    
    7d21:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7d30:	mov    rax,rsi
    7d33:	mul    rdx
    7d36:	mov    rsi,rax
    7d39:	seto   al
    7d3c:	test   rsi,rsi
    7d3f:	js     7d4b <__cxa_finalize@plt+0x57d3>
    7d41:	movzx  eax,al
    7d44:	test   rax,rax
    7d47:	jne    7d4b <__cxa_finalize@plt+0x57d3>
    7d49:	jmp    7cf0 <__cxa_finalize@plt+0x5778>
    7d4b:	sub    rsp,0x8
    7d4f:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7d54:	xchg   ax,ax
    7d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7d60:	test   rdi,rdi
    7d63:	mov    r9,rdx
    7d66:	mov    rcx,QWORD PTR [rsi]
    7d69:	je     7da0 <__cxa_finalize@plt+0x5828>
    7d6b:	xor    edx,edx
    7d6d:	movabs rax,0x5555555555555554
    7d77:	div    r9
    7d7a:	cmp    rax,rcx
    7d7d:	jbe    7dbb <__cxa_finalize@plt+0x5843>
    7d7f:	mov    rax,rcx
    7d82:	shr    rax,1
    7d85:	lea    rcx,[rax+rcx*1+0x1]
    7d8a:	mov    QWORD PTR [rsi],rcx
    7d8d:	imul   rcx,r9
    7d91:	mov    rsi,rcx
    7d94:	jmp    7cf0 <__cxa_finalize@plt+0x5778>
    7d99:	nop    DWORD PTR [rax+0x0]
    7da0:	test   rcx,rcx
    7da3:	je     7dc8 <__cxa_finalize@plt+0x5850>
    7da5:	mov    rax,rcx
    7da8:	mul    r9
    7dab:	seto   dl
    7dae:	test   rax,rax
    7db1:	movzx  edx,dl
    7db4:	js     7dbb <__cxa_finalize@plt+0x5843>
    7db6:	test   rdx,rdx
    7db9:	je     7d8a <__cxa_finalize@plt+0x5812>
    7dbb:	sub    rsp,0x8
    7dbf:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7dc4:	nop    DWORD PTR [rax+0x0]
    7dc8:	xor    edx,edx
    7dca:	mov    eax,0x80
    7dcf:	xor    r8d,r8d
    7dd2:	div    r9
    7dd5:	test   rax,rax
    7dd8:	sete   r8b
    7ddc:	lea    rcx,[r8+rax*1]
    7de0:	jmp    7da5 <__cxa_finalize@plt+0x582d>
    7de2:	nop    DWORD PTR [rax+0x0]
    7de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7df0:	test   rdi,rdi
    7df3:	mov    rax,QWORD PTR [rsi]
    7df6:	je     7e20 <__cxa_finalize@plt+0x58a8>
    7df8:	movabs rdx,0x5555555555555553
    7e02:	cmp    rax,rdx
    7e05:	ja     7e31 <__cxa_finalize@plt+0x58b9>
    7e07:	mov    rdx,rax
    7e0a:	shr    rdx,1
    7e0d:	lea    rax,[rdx+rax*1+0x1]
    7e12:	mov    QWORD PTR [rsi],rax
    7e15:	mov    rsi,rax
    7e18:	jmp    7cf0 <__cxa_finalize@plt+0x5778>
    7e1d:	nop    DWORD PTR [rax]
    7e20:	test   rax,rax
    7e23:	mov    edx,0x80
    7e28:	cmove  rax,rdx
    7e2c:	test   rax,rax
    7e2f:	jns    7e12 <__cxa_finalize@plt+0x589a>
    7e31:	sub    rsp,0x8
    7e35:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7e3a:	nop    WORD PTR [rax+rax*1+0x0]
    7e40:	push   rbx
    7e41:	mov    rbx,rdi
    7e44:	call   7c90 <__cxa_finalize@plt+0x5718>
    7e49:	mov    rdx,rbx
    7e4c:	xor    esi,esi
    7e4e:	mov    rdi,rax
    7e51:	pop    rbx
    7e52:	jmp    2210 <memset@plt>
    7e57:	nop    WORD PTR [rax+rax*1+0x0]
    7e60:	mov    rax,rdi
    7e63:	sub    rsp,0x8
    7e67:	mul    rsi
    7e6a:	seto   dl
    7e6d:	test   rax,rax
    7e70:	js     7e89 <__cxa_finalize@plt+0x5911>
    7e72:	movzx  edx,dl
    7e75:	test   rdx,rdx
    7e78:	jne    7e89 <__cxa_finalize@plt+0x5911>
    7e7a:	call   22b0 <calloc@plt>
    7e7f:	test   rax,rax
    7e82:	je     7e89 <__cxa_finalize@plt+0x5911>
    7e84:	add    rsp,0x8
    7e88:	ret    
    7e89:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7e8e:	xchg   ax,ax
    7e90:	push   rbp
    7e91:	push   rbx
    7e92:	mov    rbp,rdi
    7e95:	mov    rdi,rsi
    7e98:	mov    rbx,rsi
    7e9b:	sub    rsp,0x8
    7e9f:	call   7c90 <__cxa_finalize@plt+0x5718>
    7ea4:	add    rsp,0x8
    7ea8:	mov    rdx,rbx
    7eab:	mov    rsi,rbp
    7eae:	pop    rbx
    7eaf:	pop    rbp
    7eb0:	mov    rdi,rax
    7eb3:	jmp    2320 <memcpy@plt>
    7eb8:	nop    DWORD PTR [rax+rax*1+0x0]
    7ec0:	push   rbx
    7ec1:	mov    rbx,rdi
    7ec4:	call   2150 <strlen@plt>
    7ec9:	mov    rdi,rbx
    7ecc:	lea    rsi,[rax+0x1]
    7ed0:	pop    rbx
    7ed1:	jmp    7e90 <__cxa_finalize@plt+0x5918>
    7ed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7edd:	nop    DWORD PTR [rax]
    7ee0:	lea    rsi,[rip+0x4168]        # c04f <version_etc_copyright@@Base+0x2f>
    7ee7:	sub    rsp,0x8
    7eeb:	mov    edx,0x5
    7ef0:	xor    edi,edi
    7ef2:	call   2130 <dcgettext@plt>
    7ef7:	mov    edi,DWORD PTR [rip+0x20711b]        # 20f018 <exit_failure@@Base>
    7efd:	lea    rdx,[rip+0x377e]        # b682 <_IO_stdin_used@@Base+0x542>
    7f04:	mov    rcx,rax
    7f07:	xor    esi,esi
    7f09:	xor    eax,eax
    7f0b:	call   2450 <error@plt>
    7f10:	call   2050 <abort@plt>
    7f15:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7f1f:	nop
    7f20:	sub    rsp,0x8
    7f24:	or     esi,0x200
    7f2a:	call   95a0 <fts_open@@Base>
    7f2f:	test   rax,rax
    7f32:	je     7f40 <__cxa_finalize@plt+0x59c8>
    7f34:	add    rsp,0x8
    7f38:	ret    
    7f39:	nop    DWORD PTR [rax+0x0]
    7f40:	call   2060 <__errno_location@plt>
    7f45:	cmp    DWORD PTR [rax],0x16
    7f48:	je     7f50 <__cxa_finalize@plt+0x59d8>
    7f4a:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7f4f:	nop
    7f50:	lea    rcx,[rip+0x4129]        # c080 <version_etc_copyright@@Base+0x60>
    7f57:	lea    rsi,[rip+0x4102]        # c060 <version_etc_copyright@@Base+0x40>
    7f5e:	lea    rdi,[rip+0x4106]        # c06b <version_etc_copyright@@Base+0x4b>
    7f65:	mov    edx,0x29
    7f6a:	call   2200 <__assert_fail@plt>
    7f6f:	nop
    7f70:	mov    edx,DWORD PTR [rdi+0x48]
    7f73:	mov    eax,0x1
    7f78:	and    edx,0x11
    7f7b:	cmp    edx,0x10
    7f7e:	je     7f87 <__cxa_finalize@plt+0x5a0f>
    7f80:	xor    eax,eax
    7f82:	cmp    edx,0x11
    7f85:	je     7f90 <__cxa_finalize@plt+0x5a18>
    7f87:	repz ret 
    7f89:	nop    DWORD PTR [rax+0x0]
    7f90:	cmp    QWORD PTR [rsi+0x58],0x0
    7f95:	setne  al
    7f98:	ret    
    7f99:	nop    DWORD PTR [rax+0x0]
    7fa0:	push   rbx
    7fa1:	xor    esi,esi
    7fa3:	xor    edi,edi
    7fa5:	call   2230 <getcwd@plt>
    7faa:	test   rax,rax
    7fad:	mov    rbx,rax
    7fb0:	je     7fc0 <__cxa_finalize@plt+0x5a48>
    7fb2:	mov    rax,rbx
    7fb5:	pop    rbx
    7fb6:	ret    
    7fb7:	nop    WORD PTR [rax+rax*1+0x0]
    7fc0:	call   2060 <__errno_location@plt>
    7fc5:	cmp    DWORD PTR [rax],0xc
    7fc8:	jne    7fb2 <__cxa_finalize@plt+0x5a3a>
    7fca:	call   7ee0 <__cxa_finalize@plt+0x5968>
    7fcf:	nop
    7fd0:	xor    eax,eax
    7fd2:	mov    rdx,QWORD PTR [rsi+0x8]
    7fd6:	cmp    QWORD PTR [rdi+0x8],rdx
    7fda:	je     7fe0 <__cxa_finalize@plt+0x5a68>
    7fdc:	repz ret 
    7fde:	xchg   ax,ax
    7fe0:	mov    rax,QWORD PTR [rsi]
    7fe3:	cmp    QWORD PTR [rdi],rax
    7fe6:	sete   al
    7fe9:	ret    
    7fea:	nop    WORD PTR [rax+rax*1+0x0]
    7ff0:	mov    rax,QWORD PTR [rdi+0x8]
    7ff4:	xor    edx,edx
    7ff6:	div    rsi
    7ff9:	mov    rax,rdx
    7ffc:	ret    
    7ffd:	nop    DWORD PTR [rax]
    8000:	mov    rax,QWORD PTR [rdi]
    8003:	xor    edx,edx
    8005:	div    rsi
    8008:	mov    rax,rdx
    800b:	ret    
    800c:	nop    DWORD PTR [rax+0x0]
    8010:	mov    rax,QWORD PTR [rsi]
    8013:	cmp    QWORD PTR [rdi],rax
    8016:	sete   al
    8019:	ret    
    801a:	nop    WORD PTR [rax+rax*1+0x0]
    8020:	mov    rdx,QWORD PTR [rdi]
    8023:	mov    rax,QWORD PTR [rsi]
    8026:	mov    rax,QWORD PTR [rax+0x80]
    802d:	cmp    QWORD PTR [rdx+0x80],rax
    8034:	jb     8040 <__cxa_finalize@plt+0x5ac8>
    8036:	seta   al
    8039:	movzx  eax,al
    803c:	ret    
    803d:	nop    DWORD PTR [rax]
    8040:	mov    eax,0xffffffff
    8045:	ret    
    8046:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8050:	push   r12
    8052:	push   rbp
    8053:	mov    rbp,rsi
    8056:	push   rbx
    8057:	cmp    QWORD PTR [rbp+0x58],0x0
    805c:	lea    rbx,[rsi+0x78]
    8060:	mov    r12,rdi
    8063:	mov    eax,DWORD PTR [rdi+0x48]
    8066:	mov    rsi,QWORD PTR [rsi+0x30]
    806a:	jne    80d0 <__cxa_finalize@plt+0x5b58>
    806c:	test   al,0x1
    806e:	je     80d0 <__cxa_finalize@plt+0x5b58>
    8070:	mov    rdx,rbx
    8073:	mov    edi,0x1
    8078:	call   2350 <__xstat@plt>
    807d:	test   eax,eax
    807f:	je     80fb <__cxa_finalize@plt+0x5b83>
    8081:	call   2060 <__errno_location@plt>
    8086:	mov    r12,rax
    8089:	mov    eax,DWORD PTR [rax]
    808b:	cmp    eax,0x2
    808e:	je     81a0 <__cxa_finalize@plt+0x5c28>
    8094:	lea    rdi,[rbx+0x8]
    8098:	mov    DWORD PTR [rbp+0x40],eax
    809b:	mov    QWORD PTR [rbp+0x78],0x0
    80a3:	mov    QWORD PTR [rbx+0x88],0x0
    80ae:	xor    eax,eax
    80b0:	and    rdi,0xfffffffffffffff8
    80b4:	sub    rbx,rdi
    80b7:	lea    ecx,[rbx+0x90]
    80bd:	shr    ecx,0x3
    80c0:	rep stos QWORD PTR es:[rdi],rax
    80c3:	mov    eax,0xa
    80c8:	pop    rbx
    80c9:	pop    rbp
    80ca:	pop    r12
    80cc:	ret    
    80cd:	nop    DWORD PTR [rax]
    80d0:	test   al,0x2
    80d2:	jne    8070 <__cxa_finalize@plt+0x5af8>
    80d4:	test   dl,dl
    80d6:	jne    8070 <__cxa_finalize@plt+0x5af8>
    80d8:	mov    rdx,rsi
    80db:	mov    esi,DWORD PTR [r12+0x2c]
    80e0:	mov    r8d,0x100
    80e6:	mov    rcx,rbx
    80e9:	mov    edi,0x1
    80ee:	call   21c0 <__fxstatat@plt>
    80f3:	test   eax,eax
    80f5:	jne    8190 <__cxa_finalize@plt+0x5c18>
    80fb:	mov    eax,DWORD PTR [rbp+0x90]
    8101:	and    eax,0xf000
    8106:	cmp    eax,0x4000
    810b:	je     8130 <__cxa_finalize@plt+0x5bb8>
    810d:	cmp    eax,0xa000
    8112:	je     81e8 <__cxa_finalize@plt+0x5c70>
    8118:	cmp    eax,0x8000
    811d:	sete   al
    8120:	movzx  eax,al
    8123:	pop    rbx
    8124:	lea    eax,[rax+rax*4+0x3]
    8128:	pop    rbp
    8129:	pop    r12
    812b:	ret    
    812c:	nop    DWORD PTR [rax+0x0]
    8130:	mov    rax,QWORD PTR [rbp+0x88]
    8137:	cmp    rax,0x1
    813b:	jbe    81c0 <__cxa_finalize@plt+0x5c48>
    8141:	cmp    QWORD PTR [rbp+0x58],0x0
    8146:	jle    81c0 <__cxa_finalize@plt+0x5c48>
    8148:	test   BYTE PTR [r12+0x48],0x20
    814e:	lea    rdx,[rax-0x2]
    8152:	cmove  rax,rdx
    8156:	cmp    BYTE PTR [rbp+0x108],0x2e
    815d:	mov    QWORD PTR [rbp+0x68],rax
    8161:	mov    eax,0x1
    8166:	jne    80c8 <__cxa_finalize@plt+0x5b50>
    816c:	cmp    BYTE PTR [rbp+0x109],0x0
    8173:	jne    81f8 <__cxa_finalize@plt+0x5c80>
    8179:	cmp    QWORD PTR [rbp+0x58],0x1
    817e:	sbb    eax,eax
    8180:	and    eax,0xfffffffc
    8183:	add    eax,0x5
    8186:	jmp    80c8 <__cxa_finalize@plt+0x5b50>
    818b:	nop    DWORD PTR [rax+rax*1+0x0]
    8190:	call   2060 <__errno_location@plt>
    8195:	mov    eax,DWORD PTR [rax]
    8197:	jmp    8094 <__cxa_finalize@plt+0x5b1c>
    819c:	nop    DWORD PTR [rax+0x0]
    81a0:	mov    rsi,QWORD PTR [rbp+0x30]
    81a4:	mov    rdx,rbx
    81a7:	mov    edi,0x1
    81ac:	call   2160 <__lxstat@plt>
    81b1:	test   eax,eax
    81b3:	je     81d0 <__cxa_finalize@plt+0x5c58>
    81b5:	mov    eax,DWORD PTR [r12]
    81b9:	jmp    8094 <__cxa_finalize@plt+0x5b1c>
    81be:	xchg   ax,ax
    81c0:	mov    rax,0xffffffffffffffff
    81c7:	jmp    8156 <__cxa_finalize@plt+0x5bde>
    81c9:	nop    DWORD PTR [rax+0x0]
    81d0:	mov    DWORD PTR [r12],0x0
    81d8:	mov    eax,0xd
    81dd:	jmp    80c8 <__cxa_finalize@plt+0x5b50>
    81e2:	nop    WORD PTR [rax+rax*1+0x0]
    81e8:	mov    eax,0xc
    81ed:	jmp    80c8 <__cxa_finalize@plt+0x5b50>
    81f2:	nop    WORD PTR [rax+rax*1+0x0]
    81f8:	mov    edx,DWORD PTR [rbp+0x108]
    81fe:	and    edx,0xffff00
    8204:	cmp    edx,0x2e00
    820a:	jne    80c8 <__cxa_finalize@plt+0x5b50>
    8210:	jmp    8179 <__cxa_finalize@plt+0x5c01>
    8215:	nop
    8216:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8220:	push   r13
    8222:	push   r12
    8224:	mov    r12,rdx
    8227:	push   rbp
    8228:	push   rbx
    8229:	mov    rbp,rdi
    822c:	mov    rbx,rsi
    822f:	sub    rsp,0x8
    8233:	cmp    QWORD PTR [rbp+0x38],rdx
    8237:	mov    r13,QWORD PTR [rdi+0x40]
    823b:	mov    rdi,QWORD PTR [rdi+0x10]
    823f:	jae    8275 <__cxa_finalize@plt+0x5cfd>
    8241:	lea    rsi,[rdx+0x28]
    8245:	movabs rax,0x1fffffffffffffff
    824f:	cmp    rsi,rax
    8252:	mov    QWORD PTR [rbp+0x38],rsi
    8256:	ja     82f4 <__cxa_finalize@plt+0x5d7c>
    825c:	shl    rsi,0x3
    8260:	call   23f0 <realloc@plt>
    8265:	test   rax,rax
    8268:	mov    rdi,rax
    826b:	je     82f0 <__cxa_finalize@plt+0x5d78>
    8271:	mov    QWORD PTR [rbp+0x10],rax
    8275:	test   rbx,rbx
    8278:	je     8291 <__cxa_finalize@plt+0x5d19>
    827a:	mov    rdx,rdi
    827d:	nop    DWORD PTR [rax]
    8280:	add    rdx,0x8
    8284:	mov    QWORD PTR [rdx-0x8],rbx
    8288:	mov    rbx,QWORD PTR [rbx+0x10]
    828c:	test   rbx,rbx
    828f:	jne    8280 <__cxa_finalize@plt+0x5d08>
    8291:	mov    rcx,r13
    8294:	mov    edx,0x8
    8299:	mov    rsi,r12
    829c:	call   20c0 <qsort@plt>
    82a1:	mov    r8,QWORD PTR [rbp+0x10]
    82a5:	mov    rcx,r12
    82a8:	sub    rcx,0x1
    82ac:	mov    rax,QWORD PTR [r8]
    82af:	je     8320 <__cxa_finalize@plt+0x5da8>
    82b1:	mov    rdi,rax
    82b4:	mov    rdx,r8
    82b7:	jmp    82c3 <__cxa_finalize@plt+0x5d4b>
    82b9:	nop    DWORD PTR [rax+0x0]
    82c0:	mov    rdi,QWORD PTR [rdx]
    82c3:	mov    rsi,QWORD PTR [rdx+0x8]
    82c7:	add    rdx,0x8
    82cb:	sub    rcx,0x1
    82cf:	mov    QWORD PTR [rdi+0x10],rsi
    82d3:	jne    82c0 <__cxa_finalize@plt+0x5d48>
    82d5:	mov    rdx,QWORD PTR [r8+r12*8-0x8]
    82da:	mov    QWORD PTR [rdx+0x10],0x0
    82e2:	add    rsp,0x8
    82e6:	pop    rbx
    82e7:	pop    rbp
    82e8:	pop    r12
    82ea:	pop    r13
    82ec:	ret    
    82ed:	nop    DWORD PTR [rax]
    82f0:	mov    rdi,QWORD PTR [rbp+0x10]
    82f4:	call   2570 <free@plt>
    82f9:	mov    QWORD PTR [rbp+0x10],0x0
    8301:	mov    QWORD PTR [rbp+0x38],0x0
    8309:	add    rsp,0x8
    830d:	mov    rax,rbx
    8310:	pop    rbx
    8311:	pop    rbp
    8312:	pop    r12
    8314:	pop    r13
    8316:	ret    
    8317:	nop    WORD PTR [rax+rax*1+0x0]
    8320:	mov    rdx,rax
    8323:	jmp    82da <__cxa_finalize@plt+0x5d62>
    8325:	nop
    8326:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8330:	push   r13
    8332:	push   r12
    8334:	mov    r12,rdi
    8337:	push   rbp
    8338:	lea    rdi,[rdx+0x110]
    833f:	push   rbx
    8340:	mov    r13,rsi
    8343:	mov    rbp,rdx
    8346:	sub    rsp,0x8
    834a:	and    rdi,0xfffffffffffffff8
    834e:	call   2380 <malloc@plt>
    8353:	test   rax,rax
    8356:	mov    rbx,rax
    8359:	je     83ac <__cxa_finalize@plt+0x5e34>
    835b:	lea    rdi,[rax+0x108]
    8362:	mov    rdx,rbp
    8365:	mov    rsi,r13
    8368:	call   2320 <memcpy@plt>
    836d:	mov    rax,QWORD PTR [r12+0x20]
    8372:	mov    BYTE PTR [rbx+rbp*1+0x108],0x0
    837a:	mov    QWORD PTR [rbx+0x60],rbp
    837e:	mov    QWORD PTR [rbx+0x50],r12
    8382:	mov    DWORD PTR [rbx+0x40],0x0
    8389:	mov    QWORD PTR [rbx+0x18],0x0
    8391:	mov    QWORD PTR [rbx+0x38],rax
    8395:	mov    DWORD PTR [rbx+0x72],0x30000
    839c:	mov    QWORD PTR [rbx+0x20],0x0
    83a4:	mov    QWORD PTR [rbx+0x28],0x0
    83ac:	add    rsp,0x8
    83b0:	mov    rax,rbx
    83b3:	pop    rbx
    83b4:	pop    rbp
    83b5:	pop    r12
    83b7:	pop    r13
    83b9:	ret    
    83ba:	nop    WORD PTR [rax+rax*1+0x0]
    83c0:	test   rdi,rdi
    83c3:	je     8400 <__cxa_finalize@plt+0x5e88>
    83c5:	push   rbp
    83c6:	push   rbx
    83c7:	mov    rbx,rdi
    83ca:	sub    rsp,0x8
    83ce:	xchg   ax,ax
    83d0:	mov    rdi,QWORD PTR [rbx+0x18]
    83d4:	mov    rbp,QWORD PTR [rbx+0x10]
    83d8:	test   rdi,rdi
    83db:	je     83e2 <__cxa_finalize@plt+0x5e6a>
    83dd:	call   2260 <closedir@plt>
    83e2:	mov    rdi,rbx
    83e5:	mov    rbx,rbp
    83e8:	call   2570 <free@plt>
    83ed:	test   rbp,rbp
    83f0:	jne    83d0 <__cxa_finalize@plt+0x5e58>
    83f2:	add    rsp,0x8
    83f6:	pop    rbx
    83f7:	pop    rbp
    83f8:	ret    
    83f9:	nop    DWORD PTR [rax+0x0]
    8400:	repz ret 
    8402:	nop    DWORD PTR [rax+0x0]
    8406:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8410:	push   rbx
    8411:	mov    rbx,rdi
    8414:	jmp    842c <__cxa_finalize@plt+0x5eb4>
    8416:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8420:	mov    rdi,rbx
    8423:	call   a8c0 <fts_children@@Base+0x640>
    8428:	test   eax,eax
    842a:	jns    8440 <__cxa_finalize@plt+0x5ec8>
    842c:	mov    rdi,rbx
    842f:	call   a870 <fts_children@@Base+0x5f0>
    8434:	test   al,al
    8436:	je     8420 <__cxa_finalize@plt+0x5ea8>
    8438:	pop    rbx
    8439:	ret    
    843a:	nop    WORD PTR [rax+rax*1+0x0]
    8440:	mov    edi,eax
    8442:	call   2240 <close@plt>
    8447:	jmp    842c <__cxa_finalize@plt+0x5eb4>
    8449:	nop    DWORD PTR [rax+0x0]
    8450:	push   r12
    8452:	push   rbp
    8453:	push   rbx
    8454:	sub    rsp,0x90
    845b:	mov    rbp,QWORD PTR [rdi+0x50]
    845f:	mov    rax,QWORD PTR fs:0x28
    8468:	mov    QWORD PTR [rsp+0x88],rax
    8470:	xor    eax,eax
    8472:	test   BYTE PTR [rbp+0x49],0x2
    8476:	je     84b0 <__cxa_finalize@plt+0x5f38>
    8478:	mov    r12,QWORD PTR [rbp+0x50]
    847c:	mov    rbx,rdi
    847f:	test   r12,r12
    8482:	je     84d8 <__cxa_finalize@plt+0x5f60>
    8484:	mov    rax,QWORD PTR [rbx+0x78]
    8488:	mov    rsi,rsp
    848b:	mov    rdi,r12
    848e:	mov    QWORD PTR [rsp],rax
    8492:	call   4480 <__cxa_finalize@plt+0x1f08>
    8497:	test   rax,rax
    849a:	je     8528 <__cxa_finalize@plt+0x5fb0>
    84a0:	mov    rax,QWORD PTR [rax+0x8]
    84a4:	jmp    84b2 <__cxa_finalize@plt+0x5f3a>
    84a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    84b0:	xor    eax,eax
    84b2:	mov    rcx,QWORD PTR [rsp+0x88]
    84ba:	xor    rcx,QWORD PTR fs:0x28
    84c3:	jne    859a <__cxa_finalize@plt+0x6022>
    84c9:	add    rsp,0x90
    84d0:	pop    rbx
    84d1:	pop    rbp
    84d2:	pop    r12
    84d4:	ret    
    84d5:	nop    DWORD PTR [rax]
    84d8:	mov    r8,QWORD PTR [rip+0x206ad9]        # 20efb8 <free@GLIBC_2.2.5>
    84df:	lea    rcx,[rip+0xfffffffffffffb2a]        # 8010 <__cxa_finalize@plt+0x5a98>
    84e6:	lea    rdx,[rip+0xfffffffffffffb13]        # 8000 <__cxa_finalize@plt+0x5a88>
    84ed:	xor    esi,esi
    84ef:	mov    edi,0xd
    84f4:	call   46f0 <__cxa_finalize@plt+0x2178>
    84f9:	test   rax,rax
    84fc:	mov    r12,rax
    84ff:	mov    QWORD PTR [rbp+0x50],rax
    8503:	jne    8484 <__cxa_finalize@plt+0x5f0c>
    8509:	mov    rax,QWORD PTR [rbx+0x50]
    850d:	lea    rsi,[rsp+0x10]
    8512:	mov    edi,DWORD PTR [rax+0x2c]
    8515:	call   24a0 <fstatfs@plt>
    851a:	test   eax,eax
    851c:	jne    84b0 <__cxa_finalize@plt+0x5f38>
    851e:	mov    rax,QWORD PTR [rsp+0x10]
    8523:	jmp    84b2 <__cxa_finalize@plt+0x5f3a>
    8525:	nop    DWORD PTR [rax]
    8528:	mov    rax,QWORD PTR [rbx+0x50]
    852c:	lea    rsi,[rsp+0x10]
    8531:	mov    edi,DWORD PTR [rax+0x2c]
    8534:	call   24a0 <fstatfs@plt>
    8539:	test   eax,eax
    853b:	jne    84b0 <__cxa_finalize@plt+0x5f38>
    8541:	mov    edi,0x10
    8546:	call   2380 <malloc@plt>
    854b:	mov    rbp,rax
    854e:	mov    rax,QWORD PTR [rsp+0x10]
    8553:	test   rbp,rbp
    8556:	je     84b2 <__cxa_finalize@plt+0x5f3a>
    855c:	mov    rdx,QWORD PTR [rbx+0x78]
    8560:	mov    QWORD PTR [rbp+0x8],rax
    8564:	mov    rsi,rbp
    8567:	mov    rdi,r12
    856a:	mov    QWORD PTR [rbp+0x0],rdx
    856e:	call   4ef0 <__cxa_finalize@plt+0x2978>
    8573:	test   rax,rax
    8576:	je     8588 <__cxa_finalize@plt+0x6010>
    8578:	cmp    rbp,rax
    857b:	je     851e <__cxa_finalize@plt+0x5fa6>
    857d:	call   2050 <abort@plt>
    8582:	nop    WORD PTR [rax+rax*1+0x0]
    8588:	mov    rdi,rbp
    858b:	call   2570 <free@plt>
    8590:	mov    rax,QWORD PTR [rsp+0x10]
    8595:	jmp    84b2 <__cxa_finalize@plt+0x5f3a>
    859a:	call   2180 <__stack_chk_fail@plt>
    859f:	nop
    85a0:	sub    rsp,0x8
    85a4:	call   8450 <__cxa_finalize@plt+0x5ed8>
    85a9:	cmp    rax,0x9fa0
    85af:	je     85e5 <__cxa_finalize@plt+0x606d>
    85b1:	jle    85d8 <__cxa_finalize@plt+0x6060>
    85b3:	cmp    rax,0x5346414f
    85b9:	je     85e5 <__cxa_finalize@plt+0x606d>
    85bb:	cmp    rax,0x58465342
    85c1:	je     85f0 <__cxa_finalize@plt+0x6078>
    85c3:	cmp    rax,0x52654973
    85c9:	je     85f0 <__cxa_finalize@plt+0x6078>
    85cb:	mov    eax,0x1
    85d0:	add    rsp,0x8
    85d4:	ret    
    85d5:	nop    DWORD PTR [rax]
    85d8:	test   rax,rax
    85db:	je     85e5 <__cxa_finalize@plt+0x606d>
    85dd:	cmp    rax,0x6969
    85e3:	jne    85cb <__cxa_finalize@plt+0x6053>
    85e5:	xor    eax,eax
    85e7:	add    rsp,0x8
    85eb:	ret    
    85ec:	nop    DWORD PTR [rax+0x0]
    85f0:	mov    eax,0x2
    85f5:	add    rsp,0x8
    85f9:	ret    
    85fa:	nop    WORD PTR [rax+rax*1+0x0]
    8600:	push   rbp
    8601:	push   rbx
    8602:	mov    ebp,esi
    8604:	mov    rbx,rdi
    8607:	sub    rsp,0x8
    860b:	mov    esi,DWORD PTR [rdi+0x2c]
    860e:	cmp    esi,ebp
    8610:	jne    8617 <__cxa_finalize@plt+0x609f>
    8612:	cmp    esi,0xffffff9c
    8615:	jne    8661 <__cxa_finalize@plt+0x60e9>
    8617:	test   dl,dl
    8619:	jne    8630 <__cxa_finalize@plt+0x60b8>
    861b:	test   BYTE PTR [rbx+0x48],0x4
    861f:	jne    8625 <__cxa_finalize@plt+0x60ad>
    8621:	test   esi,esi
    8623:	jns    8650 <__cxa_finalize@plt+0x60d8>
    8625:	mov    DWORD PTR [rbx+0x2c],ebp
    8628:	add    rsp,0x8
    862c:	pop    rbx
    862d:	pop    rbp
    862e:	ret    
    862f:	nop
    8630:	lea    rdi,[rbx+0x60]
    8634:	call   a880 <fts_children@@Base+0x600>
    8639:	test   eax,eax
    863b:	js     8625 <__cxa_finalize@plt+0x60ad>
    863d:	mov    edi,eax
    863f:	call   2240 <close@plt>
    8644:	mov    DWORD PTR [rbx+0x2c],ebp
    8647:	add    rsp,0x8
    864b:	pop    rbx
    864c:	pop    rbp
    864d:	ret    
    864e:	xchg   ax,ax
    8650:	mov    edi,esi
    8652:	call   2240 <close@plt>
    8657:	mov    DWORD PTR [rbx+0x2c],ebp
    865a:	add    rsp,0x8
    865e:	pop    rbx
    865f:	pop    rbp
    8660:	ret    
    8661:	call   2050 <abort@plt>
    8666:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8670:	push   rbp
    8671:	push   rbx
    8672:	mov    rbx,rdi
    8675:	sub    rsp,0x8
    8679:	mov    edx,DWORD PTR [rdi+0x48]
    867c:	mov    ebp,edx
    867e:	and    ebp,0x4
    8681:	jne    86c8 <__cxa_finalize@plt+0x6150>
    8683:	and    dh,0x2
    8686:	jne    86b0 <__cxa_finalize@plt+0x6138>
    8688:	mov    edi,DWORD PTR [rdi+0x28]
    868b:	xor    ebp,ebp
    868d:	call   23e0 <fchdir@plt>
    8692:	test   eax,eax
    8694:	setne  bpl
    8698:	lea    rdi,[rbx+0x60]
    869c:	call   8410 <__cxa_finalize@plt+0x5e98>
    86a1:	add    rsp,0x8
    86a5:	mov    eax,ebp
    86a7:	pop    rbx
    86a8:	pop    rbp
    86a9:	ret    
    86aa:	nop    WORD PTR [rax+rax*1+0x0]
    86b0:	mov    edx,0x1
    86b5:	mov    esi,0xffffff9c
    86ba:	call   8600 <__cxa_finalize@plt+0x6088>
    86bf:	jmp    8698 <__cxa_finalize@plt+0x6120>
    86c1:	nop    DWORD PTR [rax+0x0]
    86c8:	xor    ebp,ebp
    86ca:	jmp    8698 <__cxa_finalize@plt+0x6120>
    86cc:	nop    DWORD PTR [rax+0x0]
    86d0:	push   rbx
    86d1:	mov    rcx,QWORD PTR [rsi]
    86d4:	mov    rbx,rdi
    86d7:	mov    rdi,QWORD PTR [rdi]
    86da:	lea    rax,[rcx+rdx*1+0x100]
    86e2:	cmp    rcx,rax
    86e5:	ja     8708 <__cxa_finalize@plt+0x6190>
    86e7:	mov    QWORD PTR [rsi],rax
    86ea:	mov    rsi,rax
    86ed:	call   23f0 <realloc@plt>
    86f2:	test   rax,rax
    86f5:	je     8728 <__cxa_finalize@plt+0x61b0>
    86f7:	mov    QWORD PTR [rbx],rax
    86fa:	mov    eax,0x1
    86ff:	pop    rbx
    8700:	ret    
    8701:	nop    DWORD PTR [rax+0x0]
    8708:	call   2570 <free@plt>
    870d:	mov    QWORD PTR [rbx],0x0
    8714:	call   2060 <__errno_location@plt>
    8719:	mov    DWORD PTR [rax],0x24
    871f:	xor    eax,eax
    8721:	pop    rbx
    8722:	ret    
    8723:	nop    DWORD PTR [rax+rax*1+0x0]
    8728:	mov    rdi,QWORD PTR [rbx]
    872b:	call   2570 <free@plt>
    8730:	mov    QWORD PTR [rbx],0x0
    8737:	xor    eax,eax
    8739:	pop    rbx
    873a:	ret    
    873b:	nop    DWORD PTR [rax+rax*1+0x0]
    8740:	and    edi,0x102
    8746:	push   rbx
    8747:	mov    rbx,rsi
    874a:	je     8780 <__cxa_finalize@plt+0x6208>
    874c:	mov    r8,QWORD PTR [rip+0x206865]        # 20efb8 <free@GLIBC_2.2.5>
    8753:	lea    rcx,[rip+0xfffffffffffff876]        # 7fd0 <__cxa_finalize@plt+0x5a58>
    875a:	lea    rdx,[rip+0xfffffffffffff88f]        # 7ff0 <__cxa_finalize@plt+0x5a78>
    8761:	xor    esi,esi
    8763:	mov    edi,0x1f
    8768:	call   46f0 <__cxa_finalize@plt+0x2178>
    876d:	test   rax,rax
    8770:	mov    QWORD PTR [rbx],rax
    8773:	setne  al
    8776:	pop    rbx
    8777:	ret    
    8778:	nop    DWORD PTR [rax+rax*1+0x0]
    8780:	mov    edi,0x20
    8785:	call   2380 <malloc@plt>
    878a:	mov    rdi,rax
    878d:	mov    QWORD PTR [rbx],rax
    8790:	xor    eax,eax
    8792:	test   rdi,rdi
    8795:	je     8776 <__cxa_finalize@plt+0x61fe>
    8797:	call   a6a0 <fts_children@@Base+0x420>
    879c:	mov    eax,0x1
    87a1:	pop    rbx
    87a2:	ret    
    87a3:	nop    DWORD PTR [rax]
    87a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    87b0:	mov    eax,esi
    87b2:	mov    rcx,rdx
    87b5:	mov    edx,esi
    87b7:	shl    edx,0xd
    87ba:	shl    eax,0x7
    87bd:	and    edx,0x20000
    87c3:	and    eax,0x40000
    87c8:	or     edx,eax
    87ca:	or     edx,0x90900
    87d0:	and    esi,0x200
    87d6:	jne    87e8 <__cxa_finalize@plt+0x6270>
    87d8:	mov    esi,edx
    87da:	mov    rdi,rcx
    87dd:	xor    eax,eax
    87df:	jmp    a740 <fts_children@@Base+0x4c0>
    87e4:	nop    DWORD PTR [rax+0x0]
    87e8:	mov    rsi,rcx
    87eb:	xor    eax,eax
    87ed:	jmp    ad50 <fts_children@@Base+0xad0>
    87f2:	nop    DWORD PTR [rax+0x0]
    87f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8800:	push   r15
    8802:	push   r14
    8804:	mov    r14,rsi
    8807:	push   r13
    8809:	push   r12
    880b:	mov    r12d,edx
    880e:	push   rbp
    880f:	push   rbx
    8810:	mov    r13,rdi
    8813:	mov    rbp,rcx
    8816:	sub    rsp,0xb8
    881d:	mov    ebx,DWORD PTR [rdi+0x48]
    8820:	mov    rax,QWORD PTR fs:0x28
    8829:	mov    QWORD PTR [rsp+0xa8],rax
    8831:	xor    eax,eax
    8833:	mov    edx,ebx
    8835:	and    edx,0x4
    8838:	test   rcx,rcx
    883b:	je     88e0 <__cxa_finalize@plt+0x6368>
    8841:	lea    rax,[rip+0x3842]        # c08a <version_etc_copyright@@Base+0x6a>
    8848:	mov    ecx,0x3
    884d:	mov    rsi,rbp
    8850:	mov    rdi,rax
    8853:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8855:	jne    88e0 <__cxa_finalize@plt+0x6368>
    885b:	test   edx,edx
    885d:	jne    88e4 <__cxa_finalize@plt+0x636c>
    8863:	test   r12d,r12d
    8866:	jns    8a4a <__cxa_finalize@plt+0x64d2>
    886c:	test   bh,0x2
    886f:	jne    89b0 <__cxa_finalize@plt+0x6438>
    8875:	mov    BYTE PTR [rsp+0xf],0x1
    887a:	mov    edi,DWORD PTR [r13+0x2c]
    887e:	mov    rdx,rbp
    8881:	mov    esi,ebx
    8883:	call   87b0 <__cxa_finalize@plt+0x6238>
    8888:	test   eax,eax
    888a:	mov    r15d,eax
    888d:	js     8a3b <__cxa_finalize@plt+0x64c3>
    8893:	mov    ebx,DWORD PTR [r13+0x48]
    8897:	test   bl,0x2
    889a:	je     893a <__cxa_finalize@plt+0x63c2>
    88a0:	lea    rdx,[rsp+0x10]
    88a5:	mov    esi,r15d
    88a8:	mov    edi,0x1
    88ad:	call   23c0 <__fxstat@plt>
    88b2:	test   eax,eax
    88b4:	je     8978 <__cxa_finalize@plt+0x6400>
    88ba:	mov    ebx,0xffffffff
    88bf:	test   r12d,r12d
    88c2:	jns    88f4 <__cxa_finalize@plt+0x637c>
    88c4:	call   2060 <__errno_location@plt>
    88c9:	mov    r12d,DWORD PTR [rax]
    88cc:	mov    rbp,rax
    88cf:	mov    edi,r15d
    88d2:	call   2240 <close@plt>
    88d7:	mov    DWORD PTR [rbp+0x0],r12d
    88db:	jmp    88f4 <__cxa_finalize@plt+0x637c>
    88dd:	nop    DWORD PTR [rax]
    88e0:	test   edx,edx
    88e2:	je     8920 <__cxa_finalize@plt+0x63a8>
    88e4:	and    bh,0x2
    88e7:	je     88f2 <__cxa_finalize@plt+0x637a>
    88e9:	test   r12d,r12d
    88ec:	jns    89a0 <__cxa_finalize@plt+0x6428>
    88f2:	xor    ebx,ebx
    88f4:	mov    rdi,QWORD PTR [rsp+0xa8]
    88fc:	xor    rdi,QWORD PTR fs:0x28
    8905:	mov    eax,ebx
    8907:	jne    8a45 <__cxa_finalize@plt+0x64cd>
    890d:	add    rsp,0xb8
    8914:	pop    rbx
    8915:	pop    rbp
    8916:	pop    r12
    8918:	pop    r13
    891a:	pop    r14
    891c:	pop    r15
    891e:	ret    
    891f:	nop
    8920:	test   r12d,r12d
    8923:	js     8a60 <__cxa_finalize@plt+0x64e8>
    8929:	test   bl,0x2
    892c:	mov    r15d,r12d
    892f:	mov    BYTE PTR [rsp+0xf],0x0
    8934:	jne    88a0 <__cxa_finalize@plt+0x6328>
    893a:	test   rbp,rbp
    893d:	je     8959 <__cxa_finalize@plt+0x63e1>
    893f:	lea    rax,[rip+0x3744]        # c08a <version_etc_copyright@@Base+0x6a>
    8946:	mov    ecx,0x3
    894b:	mov    rsi,rbp
    894e:	mov    rdi,rax
    8951:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8953:	je     88a0 <__cxa_finalize@plt+0x6328>
    8959:	and    bh,0x2
    895c:	jne    89f8 <__cxa_finalize@plt+0x6480>
    8962:	mov    edi,r15d
    8965:	call   23e0 <fchdir@plt>
    896a:	mov    ebx,eax
    896c:	jmp    88bf <__cxa_finalize@plt+0x6347>
    8971:	nop    DWORD PTR [rax+0x0]
    8978:	mov    rax,QWORD PTR [rsp+0x10]
    897d:	cmp    QWORD PTR [r14+0x78],rax
    8981:	je     8a20 <__cxa_finalize@plt+0x64a8>
    8987:	call   2060 <__errno_location@plt>
    898c:	mov    DWORD PTR [rax],0x2
    8992:	jmp    88ba <__cxa_finalize@plt+0x6342>
    8997:	nop    WORD PTR [rax+rax*1+0x0]
    89a0:	mov    edi,r12d
    89a3:	xor    ebx,ebx
    89a5:	call   2240 <close@plt>
    89aa:	jmp    88f4 <__cxa_finalize@plt+0x637c>
    89af:	nop
    89b0:	lea    r15,[r13+0x60]
    89b4:	mov    rdi,r15
    89b7:	call   a870 <fts_children@@Base+0x5f0>
    89bc:	test   al,al
    89be:	mov    BYTE PTR [rsp+0xf],al
    89c2:	jne    887a <__cxa_finalize@plt+0x6302>
    89c8:	mov    rdi,r15
    89cb:	call   a8c0 <fts_children@@Base+0x640>
    89d0:	test   eax,eax
    89d2:	mov    r15d,eax
    89d5:	mov    ebx,DWORD PTR [r13+0x48]
    89d9:	js     8875 <__cxa_finalize@plt+0x62fd>
    89df:	test   bl,0x2
    89e2:	mov    r12d,eax
    89e5:	mov    BYTE PTR [rsp+0xf],0x1
    89ea:	je     8959 <__cxa_finalize@plt+0x63e1>
    89f0:	jmp    88a0 <__cxa_finalize@plt+0x6328>
    89f5:	nop    DWORD PTR [rax]
    89f8:	movzx  r14d,BYTE PTR [rsp+0xf]
    89fe:	mov    esi,r15d
    8a01:	mov    rdi,r13
    8a04:	xor    ebx,ebx
    8a06:	xor    r14d,0x1
    8a0a:	movzx  edx,r14b
    8a0e:	call   8600 <__cxa_finalize@plt+0x6088>
    8a13:	jmp    88f4 <__cxa_finalize@plt+0x637c>
    8a18:	nop    DWORD PTR [rax+rax*1+0x0]
    8a20:	mov    rax,QWORD PTR [rsp+0x18]
    8a25:	cmp    QWORD PTR [r14+0x80],rax
    8a2c:	jne    8987 <__cxa_finalize@plt+0x640f>
    8a32:	mov    ebx,DWORD PTR [r13+0x48]
    8a36:	jmp    8959 <__cxa_finalize@plt+0x63e1>
    8a3b:	mov    ebx,0xffffffff
    8a40:	jmp    88f4 <__cxa_finalize@plt+0x637c>
    8a45:	call   2180 <__stack_chk_fail@plt>
    8a4a:	test   bl,0x2
    8a4d:	mov    r15d,r12d
    8a50:	mov    BYTE PTR [rsp+0xf],0x1
    8a55:	je     8946 <__cxa_finalize@plt+0x63ce>
    8a5b:	jmp    88a0 <__cxa_finalize@plt+0x6328>
    8a60:	mov    BYTE PTR [rsp+0xf],0x0
    8a65:	jmp    887a <__cxa_finalize@plt+0x6302>
    8a6a:	nop    WORD PTR [rax+rax*1+0x0]
    8a70:	and    edi,0x102
    8a76:	push   r12
    8a78:	mov    r12,rsi
    8a7b:	push   rbp
    8a7c:	push   rbx
    8a7d:	mov    rbx,rdx
    8a80:	je     8af0 <__cxa_finalize@plt+0x6578>
    8a82:	mov    edi,0x18
    8a87:	call   2380 <malloc@plt>
    8a8c:	test   rax,rax
    8a8f:	mov    rbp,rax
    8a92:	je     8b18 <__cxa_finalize@plt+0x65a0>
    8a98:	mov    rax,QWORD PTR [rbx+0x78]
    8a9c:	mov    rdi,QWORD PTR [r12]
    8aa0:	mov    rsi,rbp
    8aa3:	mov    QWORD PTR [rbp+0x10],rbx
    8aa7:	mov    QWORD PTR [rbp+0x0],rax
    8aab:	mov    rax,QWORD PTR [rbx+0x80]
    8ab2:	mov    QWORD PTR [rbp+0x8],rax
    8ab6:	call   4ef0 <__cxa_finalize@plt+0x2978>
    8abb:	cmp    rbp,rax
    8abe:	mov    r12,rax
    8ac1:	je     8ae1 <__cxa_finalize@plt+0x6569>
    8ac3:	mov    rdi,rbp
    8ac6:	call   2570 <free@plt>
    8acb:	test   r12,r12
    8ace:	je     8b18 <__cxa_finalize@plt+0x65a0>
    8ad0:	mov    rax,QWORD PTR [r12+0x10]
    8ad5:	mov    ecx,0x2
    8ada:	mov    WORD PTR [rbx+0x70],cx
    8ade:	mov    QWORD PTR [rbx],rax
    8ae1:	pop    rbx
    8ae2:	mov    eax,0x1
    8ae7:	pop    rbp
    8ae8:	pop    r12
    8aea:	ret    
    8aeb:	nop    DWORD PTR [rax+rax*1+0x0]
    8af0:	mov    rdi,QWORD PTR [r12]
    8af4:	lea    rsi,[rdx+0x78]
    8af8:	call   a6b0 <fts_children@@Base+0x430>
    8afd:	test   al,al
    8aff:	je     8ae1 <__cxa_finalize@plt+0x6569>
    8b01:	mov    edx,0x2
    8b06:	mov    QWORD PTR [rbx],rbx
    8b09:	mov    WORD PTR [rbx+0x70],dx
    8b0d:	pop    rbx
    8b0e:	pop    rbp
    8b0f:	pop    r12
    8b11:	ret    
    8b12:	nop    WORD PTR [rax+rax*1+0x0]
    8b18:	pop    rbx
    8b19:	xor    eax,eax
    8b1b:	pop    rbp
    8b1c:	pop    r12
    8b1e:	ret    
    8b1f:	nop
    8b20:	sub    rsp,0x28
    8b24:	mov    rcx,rsi
    8b27:	mov    rax,QWORD PTR fs:0x28
    8b30:	mov    QWORD PTR [rsp+0x18],rax
    8b35:	xor    eax,eax
    8b37:	and    edi,0x102
    8b3d:	jne    8b80 <__cxa_finalize@plt+0x6608>
    8b3f:	mov    rax,QWORD PTR [rdx+0x8]
    8b43:	test   rax,rax
    8b46:	je     8b65 <__cxa_finalize@plt+0x65ed>
    8b48:	cmp    QWORD PTR [rax+0x58],0x0
    8b4d:	js     8b65 <__cxa_finalize@plt+0x65ed>
    8b4f:	mov    rcx,QWORD PTR [rsi]
    8b52:	cmp    QWORD PTR [rcx+0x10],0x0
    8b57:	je     8bd3 <__cxa_finalize@plt+0x665b>
    8b59:	mov    rsi,QWORD PTR [rdx+0x80]
    8b60:	cmp    QWORD PTR [rcx],rsi
    8b63:	je     8bb0 <__cxa_finalize@plt+0x6638>
    8b65:	mov    rax,QWORD PTR [rsp+0x18]
    8b6a:	xor    rax,QWORD PTR fs:0x28
    8b73:	jne    8bce <__cxa_finalize@plt+0x6656>
    8b75:	add    rsp,0x28
    8b79:	ret    
    8b7a:	nop    WORD PTR [rax+rax*1+0x0]
    8b80:	mov    rax,QWORD PTR [rdx+0x78]
    8b84:	mov    rdi,QWORD PTR [rcx]
    8b87:	mov    rsi,rsp
    8b8a:	mov    QWORD PTR [rsp],rax
    8b8e:	mov    rax,QWORD PTR [rdx+0x80]
    8b95:	mov    QWORD PTR [rsp+0x8],rax
    8b9a:	call   4f50 <__cxa_finalize@plt+0x29d8>
    8b9f:	test   rax,rax
    8ba2:	je     8bd3 <__cxa_finalize@plt+0x665b>
    8ba4:	mov    rdi,rax
    8ba7:	call   2570 <free@plt>
    8bac:	jmp    8b65 <__cxa_finalize@plt+0x65ed>
    8bae:	xchg   ax,ax
    8bb0:	mov    rsi,QWORD PTR [rdx+0x78]
    8bb4:	cmp    QWORD PTR [rcx+0x8],rsi
    8bb8:	jne    8b65 <__cxa_finalize@plt+0x65ed>
    8bba:	mov    rdx,QWORD PTR [rax+0x78]
    8bbe:	mov    rax,QWORD PTR [rax+0x80]
    8bc5:	mov    QWORD PTR [rcx+0x8],rdx
    8bc9:	mov    QWORD PTR [rcx],rax
    8bcc:	jmp    8b65 <__cxa_finalize@plt+0x65ed>
    8bce:	call   2180 <__stack_chk_fail@plt>
    8bd3:	call   2050 <abort@plt>
    8bd8:	nop    DWORD PTR [rax+rax*1+0x0]
    8be0:	push   r15
    8be2:	push   r14
    8be4:	mov    r15,rdi
    8be7:	push   r13
    8be9:	push   r12
    8beb:	push   rbp
    8bec:	push   rbx
    8bed:	sub    rsp,0x68
    8bf1:	mov    rbp,QWORD PTR [rdi]
    8bf4:	mov    DWORD PTR [rsp+0x58],esi
    8bf8:	mov    rdi,QWORD PTR [rbp+0x18]
    8bfc:	test   rdi,rdi
    8bff:	mov    QWORD PTR [rsp+0x50],rdi
    8c04:	je     8fe0 <__cxa_finalize@plt+0x6a68>
    8c0a:	call   22e0 <dirfd@plt>
    8c0f:	test   eax,eax
    8c11:	js     9138 <__cxa_finalize@plt+0x6bc0>
    8c17:	cmp    QWORD PTR [r15+0x40],0x0
    8c1c:	je     91c8 <__cxa_finalize@plt+0x6c50>
    8c22:	mov    edi,DWORD PTR [r15+0x48]
    8c26:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
    8c2f:	mov    BYTE PTR [rsp+0x5f],0x1
    8c34:	mov    rcx,QWORD PTR [rbp+0x48]
    8c38:	mov    rdx,QWORD PTR [rbp+0x38]
    8c3c:	mov    QWORD PTR [rsp+0x40],0x0
    8c45:	cmp    BYTE PTR [rdx+rcx*1-0x1],0x2f
    8c4a:	lea    rax,[rcx-0x1]
    8c4e:	cmovne rax,rcx
    8c52:	and    edi,0x4
    8c55:	mov    QWORD PTR [rsp+0x48],rax
    8c5a:	je     8c6c <__cxa_finalize@plt+0x66f4>
    8c5c:	add    rax,QWORD PTR [r15+0x20]
    8c60:	lea    rbx,[rax+0x1]
    8c64:	mov    BYTE PTR [rax],0x2f
    8c67:	mov    QWORD PTR [rsp+0x40],rbx
    8c6c:	mov    rax,QWORD PTR [rsp+0x48]
    8c71:	mov    rbx,QWORD PTR [r15+0x30]
    8c75:	mov    QWORD PTR [rsp+0x20],rbp
    8c7a:	mov    BYTE PTR [rsp+0x5e],0x0
    8c7f:	mov    QWORD PTR [rsp+0x8],0x0
    8c88:	mov    QWORD PTR [rsp+0x10],0x0
    8c91:	add    rax,0x1
    8c95:	sub    rbx,rax
    8c98:	mov    QWORD PTR [rsp+0x18],rax
    8c9d:	mov    rax,QWORD PTR [rbp+0x58]
    8ca1:	mov    QWORD PTR [rsp+0x28],rbx
    8ca6:	mov    rbp,r15
    8ca9:	xor    ebx,ebx
    8cab:	add    rax,0x1
    8caf:	mov    QWORD PTR [rsp+0x30],rax
    8cb4:	jmp    8d84 <__cxa_finalize@plt+0x680c>
    8cb9:	nop    DWORD PTR [rax+0x0]
    8cc0:	mov    r9,r14
    8cc3:	add    r9,QWORD PTR [rsp+0x18]
    8cc8:	jb     952b <__cxa_finalize@plt+0x6fb3>
    8cce:	mov    rax,QWORD PTR [rsp+0x30]
    8cd3:	lea    rsi,[r13+0x108]
    8cda:	mov    QWORD PTR [r13+0x58],rax
    8cde:	mov    rax,QWORD PTR [rbp+0x0]
    8ce2:	mov    QWORD PTR [r13+0x48],r9
    8ce6:	mov    QWORD PTR [r13+0x8],rax
    8cea:	mov    rax,QWORD PTR [r15]
    8ced:	mov    QWORD PTR [r13+0x80],rax
    8cf4:	mov    eax,DWORD PTR [rbp+0x48]
    8cf7:	test   al,0x4
    8cf9:	jne    8e60 <__cxa_finalize@plt+0x68e8>
    8cff:	mov    QWORD PTR [r13+0x30],rsi
    8d03:	cmp    QWORD PTR [rbp+0x40],0x0
    8d08:	je     8d13 <__cxa_finalize@plt+0x679b>
    8d0a:	test   ah,0x4
    8d0d:	je     8fb0 <__cxa_finalize@plt+0x6a38>
    8d13:	movzx  edx,BYTE PTR [r15+0x12]
    8d18:	and    eax,0x18
    8d1b:	mov    esi,edx
    8d1d:	sub    edx,0x1
    8d20:	cmp    eax,0x18
    8d23:	je     8f70 <__cxa_finalize@plt+0x69f8>
    8d29:	mov    eax,0xb
    8d2e:	cmp    edx,0xb
    8d31:	mov    WORD PTR [r13+0x70],ax
    8d36:	jbe    8f30 <__cxa_finalize@plt+0x69b8>
    8d3c:	mov    DWORD PTR [r13+0x90],0x0
    8d47:	mov    eax,0x2
    8d4c:	mov    QWORD PTR [r13+0xa8],rax
    8d53:	cmp    QWORD PTR [rsp+0x10],0x0
    8d59:	mov    QWORD PTR [r13+0x10],0x0
    8d61:	je     8e88 <__cxa_finalize@plt+0x6910>
    8d67:	add    rbx,0x1
    8d6b:	cmp    rbx,QWORD PTR [rsp+0x38]
    8d70:	mov    rax,QWORD PTR [rsp+0x8]
    8d75:	mov    QWORD PTR [rax+0x10],r13
    8d79:	jae    8e9c <__cxa_finalize@plt+0x6924>
    8d7f:	mov    QWORD PTR [rsp+0x8],r13
    8d84:	mov    rax,QWORD PTR [rsp+0x20]
    8d89:	mov    r13,QWORD PTR [rax+0x18]
    8d8d:	test   r13,r13
    8d90:	je     9238 <__cxa_finalize@plt+0x6cc0>
    8d96:	call   2060 <__errno_location@plt>
    8d9b:	mov    rdi,r13
    8d9e:	mov    DWORD PTR [rax],0x0
    8da4:	mov    r12,rax
    8da7:	call   2360 <readdir@plt>
    8dac:	test   rax,rax
    8daf:	mov    r15,rax
    8db2:	je     9330 <__cxa_finalize@plt+0x6db8>
    8db8:	test   BYTE PTR [rbp+0x48],0x20
    8dbc:	jne    8dc8 <__cxa_finalize@plt+0x6850>
    8dbe:	cmp    BYTE PTR [rax+0x13],0x2e
    8dc2:	je     8f50 <__cxa_finalize@plt+0x69d8>
    8dc8:	lea    r13,[r15+0x13]
    8dcc:	mov    rdi,r13
    8dcf:	call   2150 <strlen@plt>
    8dd4:	mov    rsi,r13
    8dd7:	mov    rdx,rax
    8dda:	mov    rdi,rbp
    8ddd:	mov    r14,rax
    8de0:	call   8330 <__cxa_finalize@plt+0x5db8>
    8de5:	test   rax,rax
    8de8:	mov    r13,rax
    8deb:	je     91e0 <__cxa_finalize@plt+0x6c68>
    8df1:	cmp    QWORD PTR [rsp+0x28],r14
    8df6:	ja     8cc0 <__cxa_finalize@plt+0x6748>
    8dfc:	mov    rax,QWORD PTR [rbp+0x20]
    8e00:	lea    rsi,[rbp+0x30]
    8e04:	lea    rdi,[rbp+0x20]
    8e08:	mov    QWORD PTR [rsp+0x28],rax
    8e0d:	mov    rax,QWORD PTR [rsp+0x48]
    8e12:	lea    rdx,[rax+r14*1+0x2]
    8e17:	call   86d0 <__cxa_finalize@plt+0x6158>
    8e1c:	test   al,al
    8e1e:	je     91e0 <__cxa_finalize@plt+0x6c68>
    8e24:	mov    rdx,QWORD PTR [rbp+0x20]
    8e28:	cmp    rdx,QWORD PTR [rsp+0x28]
    8e2d:	je     8fd0 <__cxa_finalize@plt+0x6a58>
    8e33:	add    rdx,QWORD PTR [rsp+0x18]
    8e38:	test   BYTE PTR [rbp+0x48],0x4
    8e3c:	cmove  rdx,QWORD PTR [rsp+0x40]
    8e42:	mov    QWORD PTR [rsp+0x40],rdx
    8e47:	mov    rcx,QWORD PTR [rbp+0x30]
    8e4b:	sub    rcx,QWORD PTR [rsp+0x18]
    8e50:	mov    BYTE PTR [rsp+0x5e],al
    8e54:	mov    QWORD PTR [rsp+0x28],rcx
    8e59:	jmp    8cc0 <__cxa_finalize@plt+0x6748>
    8e5e:	xchg   ax,ax
    8e60:	mov    rax,QWORD PTR [r13+0x38]
    8e64:	mov    rdi,QWORD PTR [rsp+0x40]
    8e69:	mov    QWORD PTR [r13+0x30],rax
    8e6d:	mov    rax,QWORD PTR [r13+0x60]
    8e71:	lea    rdx,[rax+0x1]
    8e75:	call   2440 <memmove@plt>
    8e7a:	mov    eax,DWORD PTR [rbp+0x48]
    8e7d:	jmp    8d03 <__cxa_finalize@plt+0x678b>
    8e82:	nop    WORD PTR [rax+rax*1+0x0]
    8e88:	add    rbx,0x1
    8e8c:	cmp    rbx,QWORD PTR [rsp+0x38]
    8e91:	mov    QWORD PTR [rsp+0x10],r13
    8e96:	jb     8d7f <__cxa_finalize@plt+0x6807>
    8e9c:	cmp    BYTE PTR [rsp+0x5e],0x0
    8ea1:	mov    r15,rbp
    8ea4:	mov    rbp,QWORD PTR [rsp+0x20]
    8ea9:	je     9249 <__cxa_finalize@plt+0x6cd1>
    8eaf:	mov    rax,QWORD PTR [r15+0x8]
    8eb3:	mov    rcx,QWORD PTR [r15+0x20]
    8eb7:	test   rax,rax
    8eba:	je     8ee8 <__cxa_finalize@plt+0x6970>
    8ebc:	nop    DWORD PTR [rax+0x0]
    8ec0:	mov    rdx,QWORD PTR [rax+0x30]
    8ec4:	lea    rsi,[rax+0x108]
    8ecb:	cmp    rdx,rsi
    8ece:	je     8edb <__cxa_finalize@plt+0x6963>
    8ed0:	sub    rdx,QWORD PTR [rax+0x38]
    8ed4:	add    rdx,rcx
    8ed7:	mov    QWORD PTR [rax+0x30],rdx
    8edb:	mov    QWORD PTR [rax+0x38],rcx
    8edf:	mov    rax,QWORD PTR [rax+0x10]
    8ee3:	test   rax,rax
    8ee6:	jne    8ec0 <__cxa_finalize@plt+0x6948>
    8ee8:	mov    rax,QWORD PTR [rsp+0x10]
    8eed:	jmp    8ef3 <__cxa_finalize@plt+0x697b>
    8eef:	nop
    8ef0:	mov    rax,rdx
    8ef3:	cmp    QWORD PTR [rax+0x58],0x0
    8ef8:	js     9249 <__cxa_finalize@plt+0x6cd1>
    8efe:	mov    rdx,QWORD PTR [rax+0x30]
    8f02:	lea    rsi,[rax+0x108]
    8f09:	cmp    rdx,rsi
    8f0c:	je     8f19 <__cxa_finalize@plt+0x69a1>
    8f0e:	sub    rdx,QWORD PTR [rax+0x38]
    8f12:	add    rdx,rcx
    8f15:	mov    QWORD PTR [rax+0x30],rdx
    8f19:	mov    rdx,QWORD PTR [rax+0x10]
    8f1d:	mov    QWORD PTR [rax+0x38],rcx
    8f21:	test   rdx,rdx
    8f24:	jne    8ef0 <__cxa_finalize@plt+0x6978>
    8f26:	mov    rdx,QWORD PTR [rax+0x8]
    8f2a:	jmp    8ef0 <__cxa_finalize@plt+0x6978>
    8f2c:	nop    DWORD PTR [rax+0x0]
    8f30:	lea    rax,[rip+0x3169]        # c0a0 <version_etc_copyright@@Base+0x80>
    8f37:	mov    eax,DWORD PTR [rax+rdx*4]
    8f3a:	mov    DWORD PTR [r13+0x90],eax
    8f41:	mov    eax,0x2
    8f46:	jmp    8d4c <__cxa_finalize@plt+0x67d4>
    8f4b:	nop    DWORD PTR [rax+rax*1+0x0]
    8f50:	cmp    BYTE PTR [rax+0x14],0x0
    8f54:	je     8f61 <__cxa_finalize@plt+0x69e9>
    8f56:	cmp    WORD PTR [rax+0x14],0x2e
    8f5b:	jne    8dc8 <__cxa_finalize@plt+0x6850>
    8f61:	mov    r13,QWORD PTR [rsp+0x8]
    8f66:	jmp    8d7f <__cxa_finalize@plt+0x6807>
    8f6b:	nop    DWORD PTR [rax+rax*1+0x0]
    8f70:	and    esi,0xfb
    8f76:	je     8d29 <__cxa_finalize@plt+0x67b1>
    8f7c:	mov    ecx,0xb
    8f81:	cmp    edx,0xb
    8f84:	mov    WORD PTR [r13+0x70],cx
    8f89:	ja     957f <__cxa_finalize@plt+0x7007>
    8f8f:	lea    rax,[rip+0x310a]        # c0a0 <version_etc_copyright@@Base+0x80>
    8f96:	mov    eax,DWORD PTR [rax+rdx*4]
    8f99:	mov    DWORD PTR [r13+0x90],eax
    8fa0:	mov    eax,0x1
    8fa5:	jmp    8d4c <__cxa_finalize@plt+0x67d4>
    8faa:	nop    WORD PTR [rax+rax*1+0x0]
    8fb0:	xor    edx,edx
    8fb2:	mov    rsi,r13
    8fb5:	mov    rdi,rbp
    8fb8:	call   8050 <__cxa_finalize@plt+0x5ad8>
    8fbd:	mov    WORD PTR [r13+0x70],ax
    8fc2:	jmp    8d53 <__cxa_finalize@plt+0x67db>
    8fc7:	nop    WORD PTR [rax+rax*1+0x0]
    8fd0:	movzx  eax,BYTE PTR [rsp+0x5e]
    8fd5:	jmp    8e47 <__cxa_finalize@plt+0x68cf>
    8fda:	nop    WORD PTR [rax+rax*1+0x0]
    8fe0:	mov    eax,DWORD PTR [r15+0x48]
    8fe4:	mov    ecx,eax
    8fe6:	and    ecx,0x10
    8fe9:	je     8ff8 <__cxa_finalize@plt+0x6a80>
    8feb:	test   al,0x1
    8fed:	mov    ecx,0x20000
    8ff2:	jne    9120 <__cxa_finalize@plt+0x6ba8>
    8ff8:	mov    edx,eax
    8ffa:	and    eax,0x204
    8fff:	mov    rsi,QWORD PTR [rbp+0x30]
    9003:	shl    edx,0x7
    9006:	mov    edi,0xffffff9c
    900b:	and    edx,0x40000
    9011:	or     edx,0x90900
    9017:	cmp    eax,0x200
    901c:	jne    9022 <__cxa_finalize@plt+0x6aaa>
    901e:	mov    edi,DWORD PTR [r15+0x2c]
    9022:	or     edx,ecx
    9024:	xor    eax,eax
    9026:	call   ad50 <fts_children@@Base+0xad0>
    902b:	test   eax,eax
    902d:	mov    ebx,eax
    902f:	js     9396 <__cxa_finalize@plt+0x6e1e>
    9035:	mov    edi,eax
    9037:	call   2490 <fdopendir@plt>
    903c:	test   rax,rax
    903f:	je     9380 <__cxa_finalize@plt+0x6e08>
    9045:	cmp    WORD PTR [rbp+0x70],0xb
    904a:	mov    QWORD PTR [rbp+0x18],rax
    904e:	je     93e0 <__cxa_finalize@plt+0x6e68>
    9054:	mov    edi,DWORD PTR [r15+0x48]
    9058:	test   edi,0x100
    905e:	jne    9178 <__cxa_finalize@plt+0x6c00>
    9064:	cmp    QWORD PTR [r15+0x40],0x1
    9069:	sbb    rax,rax
    906c:	and    eax,0x186a1
    9071:	sub    rax,0x1
    9075:	cmp    DWORD PTR [rsp+0x58],0x2
    907a:	mov    QWORD PTR [rsp+0x38],rax
    907f:	je     93c8 <__cxa_finalize@plt+0x6e50>
    9085:	mov    eax,DWORD PTR [r15+0x48]
    9089:	and    eax,0x38
    908c:	cmp    eax,0x18
    908f:	je     9418 <__cxa_finalize@plt+0x6ea0>
    9095:	cmp    DWORD PTR [rsp+0x58],0x3
    909a:	mov    r13d,0x1
    90a0:	sete   r12b
    90a4:	test   BYTE PTR [r15+0x49],0x2
    90a9:	jne    9493 <__cxa_finalize@plt+0x6f1b>
    90af:	xor    ecx,ecx
    90b1:	mov    edx,ebx
    90b3:	mov    rsi,rbp
    90b6:	mov    rdi,r15
    90b9:	call   8800 <__cxa_finalize@plt+0x6288>
    90be:	test   eax,eax
    90c0:	je     91d1 <__cxa_finalize@plt+0x6c59>
    90c6:	test   r12b,r12b
    90c9:	je     90da <__cxa_finalize@plt+0x6b62>
    90cb:	test   r13b,r13b
    90ce:	je     90da <__cxa_finalize@plt+0x6b62>
    90d0:	call   2060 <__errno_location@plt>
    90d5:	mov    eax,DWORD PTR [rax]
    90d7:	mov    DWORD PTR [rbp+0x40],eax
    90da:	or     WORD PTR [rbp+0x72],0x1
    90df:	mov    rdi,QWORD PTR [rbp+0x18]
    90e3:	call   2260 <closedir@plt>
    90e8:	mov    edi,DWORD PTR [r15+0x48]
    90ec:	mov    QWORD PTR [rbp+0x18],0x0
    90f4:	test   edi,0x200
    90fa:	je     9104 <__cxa_finalize@plt+0x6b8c>
    90fc:	test   ebx,ebx
    90fe:	jns    9450 <__cxa_finalize@plt+0x6ed8>
    9104:	mov    QWORD PTR [rbp+0x18],0x0
    910c:	mov    BYTE PTR [rsp+0x5f],0x0
    9111:	jmp    8c34 <__cxa_finalize@plt+0x66bc>
    9116:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9120:	xor    ecx,ecx
    9122:	cmp    QWORD PTR [rbp+0x58],0x0
    9127:	setne  cl
    912a:	shl    ecx,0x11
    912d:	jmp    8ff8 <__cxa_finalize@plt+0x6a80>
    9132:	nop    WORD PTR [rax+rax*1+0x0]
    9138:	mov    rdi,QWORD PTR [rbp+0x18]
    913c:	call   2260 <closedir@plt>
    9141:	cmp    DWORD PTR [rsp+0x58],0x3
    9146:	mov    QWORD PTR [rbp+0x18],0x0
    914e:	je     93a9 <__cxa_finalize@plt+0x6e31>
    9154:	mov    QWORD PTR [rsp+0x10],0x0
    915d:	mov    rax,QWORD PTR [rsp+0x10]
    9162:	add    rsp,0x68
    9166:	pop    rbx
    9167:	pop    rbp
    9168:	pop    r12
    916a:	pop    r13
    916c:	pop    r14
    916e:	pop    r15
    9170:	ret    
    9171:	nop    DWORD PTR [rax+0x0]
    9178:	lea    r12,[r15+0x58]
    917c:	mov    rdx,rbp
    917f:	mov    rsi,r12
    9182:	call   8b20 <__cxa_finalize@plt+0x65a8>
    9187:	xor    edx,edx
    9189:	mov    rsi,rbp
    918c:	mov    rdi,r15
    918f:	call   8050 <__cxa_finalize@plt+0x5ad8>
    9194:	mov    edi,DWORD PTR [r15+0x48]
    9198:	mov    rdx,rbp
    919b:	mov    rsi,r12
    919e:	call   8a70 <__cxa_finalize@plt+0x64f8>
    91a3:	test   al,al
    91a5:	jne    9064 <__cxa_finalize@plt+0x6aec>
    91ab:	call   2060 <__errno_location@plt>
    91b0:	mov    QWORD PTR [rsp+0x10],0x0
    91b9:	mov    DWORD PTR [rax],0xc
    91bf:	jmp    915d <__cxa_finalize@plt+0x6be5>
    91c1:	nop    DWORD PTR [rax+0x0]
    91c8:	mov    QWORD PTR [rsp+0x38],0x186a0
    91d1:	mov    BYTE PTR [rsp+0x5f],0x1
    91d6:	mov    edi,DWORD PTR [r15+0x48]
    91da:	jmp    8c34 <__cxa_finalize@plt+0x66bc>
    91df:	nop
    91e0:	mov    rdi,r13
    91e3:	mov    r15,rbp
    91e6:	mov    ebx,DWORD PTR [r12]
    91ea:	mov    rbp,QWORD PTR [rsp+0x20]
    91ef:	call   2570 <free@plt>
    91f4:	mov    rdi,QWORD PTR [rsp+0x10]
    91f9:	call   83c0 <__cxa_finalize@plt+0x5e48>
    91fe:	mov    rdi,QWORD PTR [rbp+0x18]
    9202:	call   2260 <closedir@plt>
    9207:	mov    r9d,0x7
    920d:	mov    QWORD PTR [rbp+0x18],0x0
    9215:	mov    QWORD PTR [rsp+0x10],0x0
    921e:	mov    WORD PTR [rbp+0x70],r9w
    9223:	or     DWORD PTR [r15+0x48],0x4000
    922b:	mov    DWORD PTR [r12],ebx
    922f:	jmp    915d <__cxa_finalize@plt+0x6be5>
    9234:	nop    DWORD PTR [rax+0x0]
    9238:	mov    r15,rbp
    923b:	mov    rbp,rax
    923e:	cmp    BYTE PTR [rsp+0x5e],0x0
    9243:	jne    8eaf <__cxa_finalize@plt+0x6937>
    9249:	test   BYTE PTR [r15+0x48],0x4
    924e:	je     926e <__cxa_finalize@plt+0x6cf6>
    9250:	mov    rax,QWORD PTR [rsp+0x18]
    9255:	cmp    QWORD PTR [r15+0x30],rax
    9259:	je     9260 <__cxa_finalize@plt+0x6ce8>
    925b:	test   rbx,rbx
    925e:	jne    9266 <__cxa_finalize@plt+0x6cee>
    9260:	sub    QWORD PTR [rsp+0x40],0x1
    9266:	mov    rax,QWORD PTR [rsp+0x40]
    926b:	mov    BYTE PTR [rax],0x0
    926e:	cmp    QWORD PTR [rsp+0x50],0x0
    9274:	jne    92e0 <__cxa_finalize@plt+0x6d68>
    9276:	cmp    BYTE PTR [rsp+0x5f],0x0
    927b:	je     92e0 <__cxa_finalize@plt+0x6d68>
    927d:	cmp    DWORD PTR [rsp+0x58],0x1
    9282:	je     92c0 <__cxa_finalize@plt+0x6d48>
    9284:	test   rbx,rbx
    9287:	je     92c0 <__cxa_finalize@plt+0x6d48>
    9289:	cmp    rbx,0x2710
    9290:	mov    rax,QWORD PTR [r15+0x40]
    9294:	jbe    9310 <__cxa_finalize@plt+0x6d98>
    9296:	test   rax,rax
    9299:	je     94b8 <__cxa_finalize@plt+0x6f40>
    929f:	mov    rsi,QWORD PTR [rsp+0x10]
    92a4:	add    rsp,0x68
    92a8:	mov    rdx,rbx
    92ab:	mov    rdi,r15
    92ae:	pop    rbx
    92af:	pop    rbp
    92b0:	pop    r12
    92b2:	pop    r13
    92b4:	pop    r14
    92b6:	pop    r15
    92b8:	jmp    8220 <__cxa_finalize@plt+0x5ca8>
    92bd:	nop    DWORD PTR [rax]
    92c0:	cmp    QWORD PTR [rbp+0x58],0x0
    92c5:	jne    93f6 <__cxa_finalize@plt+0x6e7e>
    92cb:	mov    rdi,r15
    92ce:	call   8670 <__cxa_finalize@plt+0x60f8>
    92d3:	test   eax,eax
    92d5:	setne  al
    92d8:	test   al,al
    92da:	jne    946a <__cxa_finalize@plt+0x6ef2>
    92e0:	test   rbx,rbx
    92e3:	jne    9289 <__cxa_finalize@plt+0x6d11>
    92e5:	cmp    DWORD PTR [rsp+0x58],0x3
    92ea:	je     9505 <__cxa_finalize@plt+0x6f8d>
    92f0:	mov    rdi,QWORD PTR [rsp+0x10]
    92f5:	call   83c0 <__cxa_finalize@plt+0x5e48>
    92fa:	mov    QWORD PTR [rsp+0x10],0x0
    9303:	jmp    915d <__cxa_finalize@plt+0x6be5>
    9308:	mov    rax,QWORD PTR [r15+0x40]
    930c:	nop    DWORD PTR [rax+0x0]
    9310:	cmp    rbx,0x1
    9314:	je     915d <__cxa_finalize@plt+0x6be5>
    931a:	test   rax,rax
    931d:	je     915d <__cxa_finalize@plt+0x6be5>
    9323:	jmp    929f <__cxa_finalize@plt+0x6d27>
    9328:	nop    DWORD PTR [rax+rax*1+0x0]
    9330:	mov    eax,DWORD PTR [r12]
    9334:	mov    r15,rbp
    9337:	mov    rbp,QWORD PTR [rsp+0x20]
    933c:	test   eax,eax
    933e:	je     9361 <__cxa_finalize@plt+0x6de9>
    9340:	test   rbx,rbx
    9343:	mov    DWORD PTR [rbp+0x40],eax
    9346:	jne    9460 <__cxa_finalize@plt+0x6ee8>
    934c:	cmp    QWORD PTR [rsp+0x50],0x0
    9352:	mov    eax,0x4
    9357:	jne    9460 <__cxa_finalize@plt+0x6ee8>
    935d:	mov    WORD PTR [rbp+0x70],ax
    9361:	mov    rdi,QWORD PTR [rbp+0x18]
    9365:	test   rdi,rdi
    9368:	je     923e <__cxa_finalize@plt+0x6cc6>
    936e:	call   2260 <closedir@plt>
    9373:	mov    QWORD PTR [rbp+0x18],0x0
    937b:	jmp    923e <__cxa_finalize@plt+0x6cc6>
    9380:	call   2060 <__errno_location@plt>
    9385:	mov    r13d,DWORD PTR [rax]
    9388:	mov    r12,rax
    938b:	mov    edi,ebx
    938d:	call   2240 <close@plt>
    9392:	mov    DWORD PTR [r12],r13d
    9396:	cmp    DWORD PTR [rsp+0x58],0x3
    939b:	mov    QWORD PTR [rbp+0x18],0x0
    93a3:	jne    9154 <__cxa_finalize@plt+0x6bdc>
    93a9:	mov    r10d,0x4
    93af:	mov    WORD PTR [rbp+0x70],r10w
    93b4:	call   2060 <__errno_location@plt>
    93b9:	mov    eax,DWORD PTR [rax]
    93bb:	mov    DWORD PTR [rbp+0x40],eax
    93be:	jmp    9154 <__cxa_finalize@plt+0x6bdc>
    93c3:	nop    DWORD PTR [rax+rax*1+0x0]
    93c8:	mov    BYTE PTR [rsp+0x5f],0x0
    93cd:	mov    edi,DWORD PTR [r15+0x48]
    93d1:	jmp    8c34 <__cxa_finalize@plt+0x66bc>
    93d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    93e0:	xor    edx,edx
    93e2:	mov    rsi,rbp
    93e5:	mov    rdi,r15
    93e8:	call   8050 <__cxa_finalize@plt+0x5ad8>
    93ed:	mov    WORD PTR [rbp+0x70],ax
    93f1:	jmp    9064 <__cxa_finalize@plt+0x6aec>
    93f6:	mov    rsi,QWORD PTR [rbp+0x8]
    93fa:	lea    rcx,[rip+0x2c89]        # c08a <version_etc_copyright@@Base+0x6a>
    9401:	mov    edx,0xffffffff
    9406:	mov    rdi,r15
    9409:	call   8800 <__cxa_finalize@plt+0x6288>
    940e:	test   eax,eax
    9410:	setne  al
    9413:	jmp    92d8 <__cxa_finalize@plt+0x6d60>
    9418:	cmp    QWORD PTR [rbp+0x88],0x2
    9420:	jne    9095 <__cxa_finalize@plt+0x6b1d>
    9426:	mov    rdi,rbp
    9429:	call   85a0 <__cxa_finalize@plt+0x6028>
    942e:	test   eax,eax
    9430:	je     9095 <__cxa_finalize@plt+0x6b1d>
    9436:	cmp    DWORD PTR [rsp+0x58],0x3
    943b:	jne    93c8 <__cxa_finalize@plt+0x6e50>
    943d:	xor    r13d,r13d
    9440:	mov    r12d,0x1
    9446:	jmp    90a4 <__cxa_finalize@plt+0x6b2c>
    944b:	nop    DWORD PTR [rax+rax*1+0x0]
    9450:	mov    edi,ebx
    9452:	call   2240 <close@plt>
    9457:	mov    edi,DWORD PTR [r15+0x48]
    945b:	jmp    9104 <__cxa_finalize@plt+0x6b8c>
    9460:	mov    eax,0x7
    9465:	jmp    935d <__cxa_finalize@plt+0x6de5>
    946a:	mov    edi,0x7
    946f:	mov    WORD PTR [rbp+0x70],di
    9473:	or     DWORD PTR [r15+0x48],0x4000
    947b:	mov    rdi,QWORD PTR [rsp+0x10]
    9480:	call   83c0 <__cxa_finalize@plt+0x5e48>
    9485:	mov    QWORD PTR [rsp+0x10],0x0
    948e:	jmp    915d <__cxa_finalize@plt+0x6be5>
    9493:	mov    edi,ebx
    9495:	xor    eax,eax
    9497:	mov    edx,0x3
    949c:	mov    esi,0x406
    94a1:	call   ae80 <fts_children@@Base+0xc00>
    94a6:	test   eax,eax
    94a8:	mov    ebx,eax
    94aa:	js     90c6 <__cxa_finalize@plt+0x6b4e>
    94b0:	jmp    90af <__cxa_finalize@plt+0x6b37>
    94b5:	nop    DWORD PTR [rax]
    94b8:	mov    rdi,rbp
    94bb:	call   8450 <__cxa_finalize@plt+0x5ed8>
    94c0:	cmp    rax,0x6969
    94c6:	je     9308 <__cxa_finalize@plt+0x6d90>
    94cc:	cmp    rax,0x1021994
    94d2:	je     9308 <__cxa_finalize@plt+0x6d90>
    94d8:	lea    rax,[rip+0xffffffffffffeb41]        # 8020 <__cxa_finalize@plt+0x5aa8>
    94df:	mov    rsi,QWORD PTR [rsp+0x10]
    94e4:	mov    rdx,rbx
    94e7:	mov    rdi,r15
    94ea:	mov    QWORD PTR [r15+0x40],rax
    94ee:	call   8220 <__cxa_finalize@plt+0x5ca8>
    94f3:	mov    QWORD PTR [r15+0x40],0x0
    94fb:	mov    QWORD PTR [rsp+0x10],rax
    9500:	jmp    915d <__cxa_finalize@plt+0x6be5>
    9505:	movzx  eax,WORD PTR [rbp+0x70]
    9509:	cmp    ax,0x7
    950d:	je     92f0 <__cxa_finalize@plt+0x6d78>
    9513:	cmp    ax,0x4
    9517:	je     92f0 <__cxa_finalize@plt+0x6d78>
    951d:	mov    esi,0x6
    9522:	mov    WORD PTR [rbp+0x70],si
    9526:	jmp    92f0 <__cxa_finalize@plt+0x6d78>
    952b:	mov    rdi,r13
    952e:	mov    r15,rbp
    9531:	mov    rbp,QWORD PTR [rsp+0x20]
    9536:	call   2570 <free@plt>
    953b:	mov    rdi,QWORD PTR [rsp+0x10]
    9540:	call   83c0 <__cxa_finalize@plt+0x5e48>
    9545:	mov    rdi,QWORD PTR [rbp+0x18]
    9549:	call   2260 <closedir@plt>
    954e:	mov    r8d,0x7
    9554:	mov    QWORD PTR [rbp+0x18],0x0
    955c:	mov    QWORD PTR [rsp+0x10],0x0
    9565:	mov    WORD PTR [rbp+0x70],r8w
    956a:	or     DWORD PTR [r15+0x48],0x4000
    9572:	mov    DWORD PTR [r12],0x24
    957a:	jmp    915d <__cxa_finalize@plt+0x6be5>
    957f:	mov    DWORD PTR [r13+0x90],0x0
    958a:	mov    eax,0x1
    958f:	jmp    8d4c <__cxa_finalize@plt+0x67d4>
    9594:	xchg   ax,ax
    9596:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000095a0 <fts_open@@Base>:
    95a0:	push   r15
    95a2:	push   r14
    95a4:	push   r13
    95a6:	push   r12
    95a8:	push   rbp
    95a9:	push   rbx
    95aa:	sub    rsp,0x28
    95ae:	test   esi,0xffffe000
    95b4:	jne    9928 <fts_open@@Base+0x388>
    95ba:	mov    eax,esi
    95bc:	mov    ebp,esi
    95be:	and    eax,0x204
    95c3:	cmp    eax,0x204
    95c8:	je     9928 <fts_open@@Base+0x388>
    95ce:	test   sil,0x12
    95d2:	je     9928 <fts_open@@Base+0x388>
    95d8:	mov    r13,rdi
    95db:	mov    esi,0x1
    95e0:	mov    edi,0x80
    95e5:	mov    r14,rdx
    95e8:	call   22b0 <calloc@plt>
    95ed:	test   rax,rax
    95f0:	mov    rbx,rax
    95f3:	je     983e <fts_open@@Base+0x29e>
    95f9:	test   bpl,0x2
    95fd:	mov    QWORD PTR [rax+0x40],r14
    9601:	jne    9850 <fts_open@@Base+0x2b0>
    9607:	mov    rdi,QWORD PTR [r13+0x0]
    960b:	mov    DWORD PTR [rax+0x48],ebp
    960e:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
    9615:	test   rdi,rdi
    9618:	je     986f <fts_open@@Base+0x2cf>
    961e:	mov    r15,r13
    9621:	xor    r12d,r12d
    9624:	nop    DWORD PTR [rax+0x0]
    9628:	call   2150 <strlen@plt>
    962d:	cmp    r12,rax
    9630:	cmovb  r12,rax
    9634:	add    r15,0x8
    9638:	mov    rdi,QWORD PTR [r15]
    963b:	test   rdi,rdi
    963e:	jne    9628 <fts_open@@Base+0x88>
    9640:	lea    rdx,[r12+0x1]
    9645:	mov    eax,0x1000
    964a:	cmp    rdx,0x1000
    9651:	cmovb  rdx,rax
    9655:	lea    rsi,[rbx+0x30]
    9659:	lea    rdi,[rbx+0x20]
    965d:	call   86d0 <__cxa_finalize@plt+0x6158>
    9662:	test   al,al
    9664:	mov    BYTE PTR [rsp+0x16],al
    9668:	je     98f9 <fts_open@@Base+0x359>
    966e:	mov    rsi,QWORD PTR [r13+0x0]
    9672:	test   rsi,rsi
    9675:	je     9910 <fts_open@@Base+0x370>
    967b:	lea    rsi,[rip+0x26bf]        # bd41 <quoting_style_vals@@Base+0x81>
    9682:	xor    edx,edx
    9684:	mov    rdi,rbx
    9687:	call   8330 <__cxa_finalize@plt+0x5db8>
    968c:	test   rax,rax
    968f:	mov    r15,rax
    9692:	je     98f0 <fts_open@@Base+0x350>
    9698:	mov    rax,0xffffffffffffffff
    969f:	test   r14,r14
    96a2:	mov    rsi,QWORD PTR [r13+0x0]
    96a6:	mov    QWORD PTR [r15+0x58],rax
    96aa:	mov    QWORD PTR [r15+0x68],rax
    96ae:	je     96bd <fts_open@@Base+0x11d>
    96b0:	mov    eax,DWORD PTR [rbx+0x48]
    96b3:	shr    eax,0xa
    96b6:	and    eax,0x1
    96b9:	mov    BYTE PTR [rsp+0x16],al
    96bd:	test   rsi,rsi
    96c0:	je     991c <fts_open@@Base+0x37c>
    96c6:	shr    ebp,0xc
    96c9:	mov    QWORD PTR [rsp+0x18],0x0
    96d2:	xor    r12d,r12d
    96d5:	xor    ebp,0x1
    96d8:	mov    eax,ebp
    96da:	xor    ebp,ebp
    96dc:	and    eax,0x1
    96df:	mov    BYTE PTR [rsp+0x17],al
    96e3:	jmp    975c <fts_open@@Base+0x1bc>
    96e5:	nop    DWORD PTR [rax]
    96e8:	mov    rdx,rax
    96eb:	mov    rdi,rbx
    96ee:	call   8330 <__cxa_finalize@plt+0x5db8>
    96f3:	test   rax,rax
    96f6:	mov    rcx,rax
    96f9:	je     98e0 <fts_open@@Base+0x340>
    96ff:	mov    QWORD PTR [rax+0x58],0x0
    9707:	mov    QWORD PTR [rax+0x8],r15
    970b:	lea    rax,[rax+0x108]
    9712:	test   r12,r12
    9715:	mov    QWORD PTR [rcx+0x30],rax
    9719:	je     9880 <fts_open@@Base+0x2e0>
    971f:	cmp    BYTE PTR [rsp+0x16],0x0
    9724:	je     9880 <fts_open@@Base+0x2e0>
    972a:	mov    esi,0xb
    972f:	test   r14,r14
    9732:	mov    QWORD PTR [rcx+0xa8],0x2
    973d:	mov    WORD PTR [rcx+0x70],si
    9741:	je     98c0 <fts_open@@Base+0x320>
    9747:	mov    QWORD PTR [rcx+0x10],r12
    974b:	mov    r12,rcx
    974e:	add    rbp,0x1
    9752:	mov    rsi,QWORD PTR [r13+rbp*8+0x0]
    9757:	test   rsi,rsi
    975a:	je     97b0 <fts_open@@Base+0x210>
    975c:	mov    rdi,rsi
    975f:	mov    QWORD PTR [rsp+0x8],rsi
    9764:	call   2150 <strlen@plt>
    9769:	cmp    rax,0x2
    976d:	mov    rsi,QWORD PTR [rsp+0x8]
    9772:	jbe    96e8 <fts_open@@Base+0x148>
    9778:	cmp    BYTE PTR [rsp+0x17],0x0
    977d:	je     96e8 <fts_open@@Base+0x148>
    9783:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2f
    9788:	jne    96e8 <fts_open@@Base+0x148>
    978e:	xchg   ax,ax
    9790:	cmp    BYTE PTR [rsi+rax*1-0x2],0x2f
    9795:	jne    96e8 <fts_open@@Base+0x148>
    979b:	sub    rax,0x1
    979f:	cmp    rax,0x1
    97a3:	jne    9790 <fts_open@@Base+0x1f0>
    97a5:	jmp    96e8 <fts_open@@Base+0x148>
    97aa:	nop    WORD PTR [rax+rax*1+0x0]
    97b0:	test   r14,r14
    97b3:	je     97cc <fts_open@@Base+0x22c>
    97b5:	cmp    rbp,0x1
    97b9:	jbe    97cc <fts_open@@Base+0x22c>
    97bb:	mov    rsi,r12
    97be:	mov    rdx,rbp
    97c1:	mov    rdi,rbx
    97c4:	call   8220 <__cxa_finalize@plt+0x5ca8>
    97c9:	mov    r12,rax
    97cc:	lea    rsi,[rip+0x256e]        # bd41 <quoting_style_vals@@Base+0x81>
    97d3:	xor    edx,edx
    97d5:	mov    rdi,rbx
    97d8:	call   8330 <__cxa_finalize@plt+0x5db8>
    97dd:	test   rax,rax
    97e0:	mov    QWORD PTR [rbx],rax
    97e3:	je     98e0 <fts_open@@Base+0x340>
    97e9:	mov    edi,DWORD PTR [rbx+0x48]
    97ec:	mov    edx,0x9
    97f1:	lea    rsi,[rbx+0x58]
    97f5:	mov    QWORD PTR [rax+0x10],r12
    97f9:	mov    WORD PTR [rax+0x70],dx
    97fd:	call   8740 <__cxa_finalize@plt+0x61c8>
    9802:	test   al,al
    9804:	je     98e0 <fts_open@@Base+0x340>
    980a:	mov    esi,DWORD PTR [rbx+0x48]
    980d:	test   esi,0x204
    9813:	jne    9830 <fts_open@@Base+0x290>
    9815:	mov    edi,DWORD PTR [rbx+0x2c]
    9818:	lea    rdx,[rip+0x286c]        # c08b <version_etc_copyright@@Base+0x6b>
    981f:	call   87b0 <__cxa_finalize@plt+0x6238>
    9824:	test   eax,eax
    9826:	mov    DWORD PTR [rbx+0x28],eax
    9829:	jns    9830 <fts_open@@Base+0x290>
    982b:	or     DWORD PTR [rbx+0x48],0x4
    982f:	nop
    9830:	lea    rdi,[rbx+0x60]
    9834:	mov    esi,0xffffffff
    9839:	call   a850 <fts_children@@Base+0x5d0>
    983e:	add    rsp,0x28
    9842:	mov    rax,rbx
    9845:	pop    rbx
    9846:	pop    rbp
    9847:	pop    r12
    9849:	pop    r13
    984b:	pop    r14
    984d:	pop    r15
    984f:	ret    
    9850:	mov    rdi,QWORD PTR [r13+0x0]
    9854:	mov    eax,ebp
    9856:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
    985d:	and    ah,0xfd
    9860:	or     eax,0x4
    9863:	test   rdi,rdi
    9866:	mov    DWORD PTR [rbx+0x48],eax
    9869:	jne    961e <fts_open@@Base+0x7e>
    986f:	mov    edx,0x1000
    9874:	jmp    9655 <fts_open@@Base+0xb5>
    9879:	nop    DWORD PTR [rax+0x0]
    9880:	xor    edx,edx
    9882:	mov    rsi,rcx
    9885:	mov    rdi,rbx
    9888:	mov    QWORD PTR [rsp+0x8],rcx
    988d:	call   8050 <__cxa_finalize@plt+0x5ad8>
    9892:	mov    rcx,QWORD PTR [rsp+0x8]
    9897:	test   r14,r14
    989a:	mov    WORD PTR [rcx+0x70],ax
    989e:	jne    9747 <fts_open@@Base+0x1a7>
    98a4:	test   r12,r12
    98a7:	mov    QWORD PTR [rcx+0x10],0x0
    98af:	jne    98c8 <fts_open@@Base+0x328>
    98b1:	mov    QWORD PTR [rsp+0x18],rcx
    98b6:	mov    r12,rcx
    98b9:	jmp    974e <fts_open@@Base+0x1ae>
    98be:	xchg   ax,ax
    98c0:	mov    QWORD PTR [rcx+0x10],0x0
    98c8:	mov    rax,QWORD PTR [rsp+0x18]
    98cd:	mov    QWORD PTR [rsp+0x18],rcx
    98d2:	mov    QWORD PTR [rax+0x10],rcx
    98d6:	jmp    974e <fts_open@@Base+0x1ae>
    98db:	nop    DWORD PTR [rax+rax*1+0x0]
    98e0:	mov    rdi,r12
    98e3:	call   83c0 <__cxa_finalize@plt+0x5e48>
    98e8:	mov    rdi,r15
    98eb:	call   2570 <free@plt>
    98f0:	mov    rdi,QWORD PTR [rbx+0x20]
    98f4:	call   2570 <free@plt>
    98f9:	mov    rdi,rbx
    98fc:	xor    ebx,ebx
    98fe:	call   2570 <free@plt>
    9903:	jmp    983e <fts_open@@Base+0x29e>
    9908:	nop    DWORD PTR [rax+rax*1+0x0]
    9910:	xor    r15d,r15d
    9913:	test   r14,r14
    9916:	jne    96b0 <fts_open@@Base+0x110>
    991c:	xor    r12d,r12d
    991f:	jmp    97cc <fts_open@@Base+0x22c>
    9924:	nop    DWORD PTR [rax+0x0]
    9928:	call   2060 <__errno_location@plt>
    992d:	xor    ebx,ebx
    992f:	mov    DWORD PTR [rax],0x16
    9935:	jmp    983e <fts_open@@Base+0x29e>
    993a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009940 <fts_close@@Base>:
    9940:	push   r12
    9942:	push   rbp
    9943:	mov    rbp,rdi
    9946:	push   rbx
    9947:	mov    rdi,QWORD PTR [rdi]
    994a:	test   rdi,rdi
    994d:	je     9993 <fts_close@@Base+0x53>
    994f:	cmp    QWORD PTR [rdi+0x58],0x0
    9954:	jns    996f <fts_close@@Base+0x2f>
    9956:	jmp    9a70 <fts_close@@Base+0x130>
    995b:	nop    DWORD PTR [rax+rax*1+0x0]
    9960:	call   2570 <free@plt>
    9965:	cmp    QWORD PTR [rbx+0x58],0x0
    996a:	mov    rdi,rbx
    996d:	js     998b <fts_close@@Base+0x4b>
    996f:	mov    rbx,QWORD PTR [rdi+0x10]
    9973:	test   rbx,rbx
    9976:	jne    9960 <fts_close@@Base+0x20>
    9978:	mov    rbx,QWORD PTR [rdi+0x8]
    997c:	call   2570 <free@plt>
    9981:	cmp    QWORD PTR [rbx+0x58],0x0
    9986:	mov    rdi,rbx
    9989:	jns    996f <fts_close@@Base+0x2f>
    998b:	mov    rdi,rbx
    998e:	call   2570 <free@plt>
    9993:	mov    rdi,QWORD PTR [rbp+0x8]
    9997:	test   rdi,rdi
    999a:	je     99a1 <fts_close@@Base+0x61>
    999c:	call   83c0 <__cxa_finalize@plt+0x5e48>
    99a1:	mov    rdi,QWORD PTR [rbp+0x10]
    99a5:	call   2570 <free@plt>
    99aa:	mov    rdi,QWORD PTR [rbp+0x20]
    99ae:	call   2570 <free@plt>
    99b3:	mov    eax,DWORD PTR [rbp+0x48]
    99b6:	test   ah,0x2
    99b9:	je     9a20 <fts_close@@Base+0xe0>
    99bb:	mov    edi,DWORD PTR [rbp+0x2c]
    99be:	test   edi,edi
    99c0:	jns    9a50 <fts_close@@Base+0x110>
    99c6:	xor    ebx,ebx
    99c8:	lea    rdi,[rbp+0x60]
    99cc:	call   8410 <__cxa_finalize@plt+0x5e98>
    99d1:	mov    rdi,QWORD PTR [rbp+0x50]
    99d5:	test   rdi,rdi
    99d8:	je     99df <fts_close@@Base+0x9f>
    99da:	call   4940 <__cxa_finalize@plt+0x23c8>
    99df:	test   DWORD PTR [rbp+0x48],0x102
    99e6:	mov    rdi,QWORD PTR [rbp+0x58]
    99ea:	je     9a10 <fts_close@@Base+0xd0>
    99ec:	test   rdi,rdi
    99ef:	je     99f6 <fts_close@@Base+0xb6>
    99f1:	call   4940 <__cxa_finalize@plt+0x23c8>
    99f6:	mov    rdi,rbp
    99f9:	call   2570 <free@plt>
    99fe:	test   ebx,ebx
    9a00:	jne    9ab1 <fts_close@@Base+0x171>
    9a06:	mov    eax,ebx
    9a08:	pop    rbx
    9a09:	pop    rbp
    9a0a:	pop    r12
    9a0c:	ret    
    9a0d:	nop    DWORD PTR [rax]
    9a10:	call   2570 <free@plt>
    9a15:	jmp    99f6 <fts_close@@Base+0xb6>
    9a17:	nop    WORD PTR [rax+rax*1+0x0]
    9a20:	test   al,0x4
    9a22:	jne    99c6 <fts_close@@Base+0x86>
    9a24:	mov    edi,DWORD PTR [rbp+0x28]
    9a27:	call   23e0 <fchdir@plt>
    9a2c:	test   eax,eax
    9a2e:	jne    9a80 <fts_close@@Base+0x140>
    9a30:	mov    edi,DWORD PTR [rbp+0x28]
    9a33:	call   2240 <close@plt>
    9a38:	test   eax,eax
    9a3a:	je     99c6 <fts_close@@Base+0x86>
    9a3c:	call   2060 <__errno_location@plt>
    9a41:	mov    r12,rax
    9a44:	jmp    9aa8 <fts_close@@Base+0x168>
    9a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9a50:	call   2240 <close@plt>
    9a55:	test   eax,eax
    9a57:	je     99c6 <fts_close@@Base+0x86>
    9a5d:	call   2060 <__errno_location@plt>
    9a62:	mov    ebx,DWORD PTR [rax]
    9a64:	jmp    99c8 <fts_close@@Base+0x88>
    9a69:	nop    DWORD PTR [rax+0x0]
    9a70:	mov    rbx,rdi
    9a73:	mov    rdi,rbx
    9a76:	call   2570 <free@plt>
    9a7b:	jmp    9993 <fts_close@@Base+0x53>
    9a80:	call   2060 <__errno_location@plt>
    9a85:	mov    edi,DWORD PTR [rbp+0x28]
    9a88:	mov    r12,rax
    9a8b:	mov    ebx,DWORD PTR [rax]
    9a8d:	call   2240 <close@plt>
    9a92:	test   eax,eax
    9a94:	je     99c8 <fts_close@@Base+0x88>
    9a9a:	test   ebx,ebx
    9a9c:	jne    99c8 <fts_close@@Base+0x88>
    9aa2:	nop    WORD PTR [rax+rax*1+0x0]
    9aa8:	mov    ebx,DWORD PTR [r12]
    9aac:	jmp    99c8 <fts_close@@Base+0x88>
    9ab1:	call   2060 <__errno_location@plt>
    9ab6:	mov    DWORD PTR [rax],ebx
    9ab8:	mov    ebx,0xffffffff
    9abd:	jmp    9a06 <fts_close@@Base+0xc6>
    9ac2:	nop    DWORD PTR [rax+0x0]
    9ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009ad0 <fts_read@@Base>:
    9ad0:	push   r14
    9ad2:	push   r13
    9ad4:	push   r12
    9ad6:	push   rbp
    9ad7:	push   rbx
    9ad8:	mov    rbp,QWORD PTR [rdi]
    9adb:	test   rbp,rbp
    9ade:	je     9bee <fts_read@@Base+0x11e>
    9ae4:	mov    edx,DWORD PTR [rdi+0x48]
    9ae7:	test   dh,0x40
    9aea:	jne    9bee <fts_read@@Base+0x11e>
    9af0:	movzx  eax,WORD PTR [rbp+0x74]
    9af4:	mov    ebx,0x3
    9af9:	mov    r12,rdi
    9afc:	mov    WORD PTR [rbp+0x74],bx
    9b00:	cmp    ax,0x1
    9b04:	je     9d50 <fts_read@@Base+0x280>
    9b0a:	cmp    ax,0x2
    9b0e:	movzx  ecx,WORD PTR [rbp+0x70]
    9b12:	je     9c00 <fts_read@@Base+0x130>
    9b18:	cmp    cx,0x1
    9b1c:	jne    9b50 <fts_read@@Base+0x80>
    9b1e:	jmp    9d40 <fts_read@@Base+0x270>
    9b23:	nop    DWORD PTR [rax+rax*1+0x0]
    9b28:	mov    QWORD PTR [r12],rbx
    9b2c:	mov    rdi,rbp
    9b2f:	call   2570 <free@plt>
    9b34:	cmp    QWORD PTR [rbx+0x58],0x0
    9b39:	je     9d70 <fts_read@@Base+0x2a0>
    9b3f:	movzx  eax,WORD PTR [rbx+0x74]
    9b43:	mov    rbp,rbx
    9b46:	cmp    ax,0x4
    9b4a:	jne    9e78 <fts_read@@Base+0x3a8>
    9b50:	mov    rbx,QWORD PTR [rbp+0x10]
    9b54:	test   rbx,rbx
    9b57:	jne    9b28 <fts_read@@Base+0x58>
    9b59:	mov    rbx,QWORD PTR [rbp+0x8]
    9b5d:	cmp    QWORD PTR [rbx+0x18],0x0
    9b62:	jne    a0d0 <fts_read@@Base+0x600>
    9b68:	mov    QWORD PTR [r12],rbx
    9b6c:	mov    rdi,rbp
    9b6f:	call   2570 <free@plt>
    9b74:	cmp    QWORD PTR [rbx+0x58],0xffffffffffffffff
    9b79:	je     a032 <fts_read@@Base+0x562>
    9b7f:	cmp    WORD PTR [rbx+0x70],0xb
    9b84:	je     9cbf <fts_read@@Base+0x1ef>
    9b8a:	mov    rdx,QWORD PTR [r12+0x20]
    9b8f:	mov    rax,QWORD PTR [rbx+0x48]
    9b93:	mov    BYTE PTR [rdx+rax*1],0x0
    9b97:	cmp    QWORD PTR [rbx+0x58],0x0
    9b9c:	je     9f60 <fts_read@@Base+0x490>
    9ba2:	movzx  eax,WORD PTR [rbx+0x72]
    9ba6:	test   al,0x2
    9ba8:	je     9f18 <fts_read@@Base+0x448>
    9bae:	mov    eax,DWORD PTR [r12+0x48]
    9bb3:	mov    edi,DWORD PTR [rbx+0x44]
    9bb6:	test   al,0x4
    9bb8:	je     9fbc <fts_read@@Base+0x4ec>
    9bbe:	call   2240 <close@plt>
    9bc3:	mov    edi,DWORD PTR [r12+0x48]
    9bc8:	cmp    WORD PTR [rbx+0x70],0x2
    9bcd:	je     9be3 <fts_read@@Base+0x113>
    9bcf:	mov    ecx,DWORD PTR [rbx+0x40]
    9bd2:	test   ecx,ecx
    9bd4:	je     9f78 <fts_read@@Base+0x4a8>
    9bda:	mov    edx,0x7
    9bdf:	mov    WORD PTR [rbx+0x70],dx
    9be3:	and    edi,0x4000
    9be9:	mov    rbp,rbx
    9bec:	je     9c6a <fts_read@@Base+0x19a>
    9bee:	xor    ebp,ebp
    9bf0:	pop    rbx
    9bf1:	mov    rax,rbp
    9bf4:	pop    rbp
    9bf5:	pop    r12
    9bf7:	pop    r13
    9bf9:	pop    r14
    9bfb:	ret    
    9bfc:	nop    DWORD PTR [rax+0x0]
    9c00:	lea    eax,[rcx-0xc]
    9c03:	cmp    ax,0x1
    9c07:	jbe    9c80 <fts_read@@Base+0x1b0>
    9c09:	cmp    cx,0x1
    9c0d:	jne    9b50 <fts_read@@Base+0x80>
    9c13:	test   dl,0x40
    9c16:	je     9cc8 <fts_read@@Base+0x1f8>
    9c1c:	mov    rax,QWORD PTR [r12+0x18]
    9c21:	cmp    QWORD PTR [rbp+0x78],rax
    9c25:	je     9cc8 <fts_read@@Base+0x1f8>
    9c2b:	test   BYTE PTR [rbp+0x72],0x2
    9c2f:	jne    a110 <fts_read@@Base+0x640>
    9c35:	mov    rdi,QWORD PTR [r12+0x8]
    9c3a:	test   rdi,rdi
    9c3d:	je     9c4d <fts_read@@Base+0x17d>
    9c3f:	call   83c0 <__cxa_finalize@plt+0x5e48>
    9c44:	mov    QWORD PTR [r12+0x8],0x0
    9c4d:	mov    edi,DWORD PTR [r12+0x48]
    9c52:	mov    r10d,0x6
    9c58:	lea    rsi,[r12+0x58]
    9c5d:	mov    WORD PTR [rbp+0x70],r10w
    9c62:	mov    rdx,rbp
    9c65:	call   8b20 <__cxa_finalize@plt+0x65a8>
    9c6a:	pop    rbx
    9c6b:	mov    rax,rbp
    9c6e:	pop    rbp
    9c6f:	pop    r12
    9c71:	pop    r13
    9c73:	pop    r14
    9c75:	ret    
    9c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9c80:	mov    edx,0x1
    9c85:	mov    rsi,rbp
    9c88:	call   8050 <__cxa_finalize@plt+0x5ad8>
    9c8d:	cmp    ax,0x1
    9c91:	mov    WORD PTR [rbp+0x70],ax
    9c95:	je     9fdc <fts_read@@Base+0x50c>
    9c9b:	cmp    ax,0xb
    9c9f:	mov    QWORD PTR [r12],rbp
    9ca3:	jne    9c6a <fts_read@@Base+0x19a>
    9ca5:	nop    DWORD PTR [rax]
    9ca8:	mov    rax,QWORD PTR [rbp+0xa8]
    9caf:	cmp    rax,0x2
    9cb3:	je     a058 <fts_read@@Base+0x588>
    9cb9:	cmp    rax,0x1
    9cbd:	je     9c6a <fts_read@@Base+0x19a>
    9cbf:	call   2050 <abort@plt>
    9cc4:	nop    DWORD PTR [rax+0x0]
    9cc8:	mov    rdi,QWORD PTR [r12+0x8]
    9ccd:	test   rdi,rdi
    9cd0:	je     9ee8 <fts_read@@Base+0x418>
    9cd6:	test   dh,0x20
    9cd9:	jne    9ed2 <fts_read@@Base+0x402>
    9cdf:	mov    rcx,QWORD PTR [rbp+0x30]
    9ce3:	mov    edx,0xffffffff
    9ce8:	mov    rsi,rbp
    9ceb:	mov    rdi,r12
    9cee:	call   8800 <__cxa_finalize@plt+0x6288>
    9cf3:	test   eax,eax
    9cf5:	je     9fb2 <fts_read@@Base+0x4e2>
    9cfb:	call   2060 <__errno_location@plt>
    9d00:	mov    eax,DWORD PTR [rax]
    9d02:	or     WORD PTR [rbp+0x72],0x1
    9d07:	mov    DWORD PTR [rbp+0x40],eax
    9d0a:	mov    rbp,QWORD PTR [r12+0x8]
    9d0f:	test   rbp,rbp
    9d12:	je     9f06 <fts_read@@Base+0x436>
    9d18:	mov    rax,rbp
    9d1b:	nop    DWORD PTR [rax+rax*1+0x0]
    9d20:	mov    rdx,QWORD PTR [rax+0x8]
    9d24:	mov    rdx,QWORD PTR [rdx+0x30]
    9d28:	mov    QWORD PTR [rax+0x30],rdx
    9d2c:	mov    rax,QWORD PTR [rax+0x10]
    9d30:	test   rax,rax
    9d33:	jne    9d20 <fts_read@@Base+0x250>
    9d35:	jmp    9f06 <fts_read@@Base+0x436>
    9d3a:	nop    WORD PTR [rax+rax*1+0x0]
    9d40:	cmp    ax,0x4
    9d44:	jne    9c13 <fts_read@@Base+0x143>
    9d4a:	jmp    9c2b <fts_read@@Base+0x15b>
    9d4f:	nop
    9d50:	mov    rsi,rbp
    9d53:	xor    edx,edx
    9d55:	call   8050 <__cxa_finalize@plt+0x5ad8>
    9d5a:	mov    WORD PTR [rbp+0x70],ax
    9d5e:	mov    rax,rbp
    9d61:	pop    rbx
    9d62:	pop    rbp
    9d63:	pop    r12
    9d65:	pop    r13
    9d67:	pop    r14
    9d69:	ret    
    9d6a:	nop    WORD PTR [rax+rax*1+0x0]
    9d70:	mov    rdi,r12
    9d73:	call   8670 <__cxa_finalize@plt+0x60f8>
    9d78:	test   eax,eax
    9d7a:	jne    a181 <fts_read@@Base+0x6b1>
    9d80:	test   DWORD PTR [r12+0x48],0x102
    9d89:	mov    rdi,QWORD PTR [r12+0x58]
    9d8e:	je     9ec8 <fts_read@@Base+0x3f8>
    9d94:	test   rdi,rdi
    9d97:	je     9d9e <fts_read@@Base+0x2ce>
    9d99:	call   4940 <__cxa_finalize@plt+0x23c8>
    9d9e:	mov    rdx,QWORD PTR [rbx+0x60]
    9da2:	lea    rbp,[rbx+0x108]
    9da9:	mov    rdi,QWORD PTR [r12+0x20]
    9dae:	mov    rsi,rbp
    9db1:	mov    QWORD PTR [rbx+0x48],rdx
    9db5:	add    rdx,0x1
    9db9:	call   2440 <memmove@plt>
    9dbe:	mov    esi,0x2f
    9dc3:	mov    rdi,rbp
    9dc6:	call   21d0 <strrchr@plt>
    9dcb:	test   rax,rax
    9dce:	je     9dfb <fts_read@@Base+0x32b>
    9dd0:	cmp    rbp,rax
    9dd3:	je     9fa0 <fts_read@@Base+0x4d0>
    9dd9:	lea    r13,[rax+0x1]
    9ddd:	mov    rdi,r13
    9de0:	call   2150 <strlen@plt>
    9de5:	lea    rdx,[rax+0x1]
    9de9:	mov    r14,rax
    9dec:	mov    rsi,r13
    9def:	mov    rdi,rbp
    9df2:	call   2440 <memmove@plt>
    9df7:	mov    QWORD PTR [rbx+0x60],r14
    9dfb:	mov    rax,QWORD PTR [r12+0x20]
    9e00:	mov    edi,DWORD PTR [r12+0x48]
    9e05:	lea    rsi,[r12+0x58]
    9e0a:	mov    rbp,rbx
    9e0d:	mov    QWORD PTR [rbx+0x38],rax
    9e11:	mov    QWORD PTR [rbx+0x30],rax
    9e15:	call   8740 <__cxa_finalize@plt+0x61c8>
    9e1a:	movzx  eax,WORD PTR [rbx+0x70]
    9e1e:	cmp    ax,0xb
    9e22:	mov    QWORD PTR [r12],rbp
    9e26:	je     9ca8 <fts_read@@Base+0x1d8>
    9e2c:	cmp    ax,0x1
    9e30:	jne    9c6a <fts_read@@Base+0x19a>
    9e36:	cmp    QWORD PTR [rbp+0x58],0x0
    9e3b:	jne    9e46 <fts_read@@Base+0x376>
    9e3d:	mov    rax,QWORD PTR [rbp+0x78]
    9e41:	mov    QWORD PTR [r12+0x18],rax
    9e46:	mov    edi,DWORD PTR [r12+0x48]
    9e4b:	lea    rsi,[r12+0x58]
    9e50:	mov    rdx,rbp
    9e53:	call   8a70 <__cxa_finalize@plt+0x64f8>
    9e58:	test   al,al
    9e5a:	jne    9c6a <fts_read@@Base+0x19a>
    9e60:	call   2060 <__errno_location@plt>
    9e65:	xor    ebp,ebp
    9e67:	mov    DWORD PTR [rax],0xc
    9e6d:	jmp    9c6a <fts_read@@Base+0x19a>
    9e72:	nop    WORD PTR [rax+rax*1+0x0]
    9e78:	cmp    ax,0x2
    9e7c:	je     a11d <fts_read@@Base+0x64d>
    9e82:	mov    rax,QWORD PTR [rbp+0x8]
    9e86:	lea    rsi,[rbp+0x108]
    9e8d:	mov    rdi,QWORD PTR [rax+0x48]
    9e91:	mov    rax,QWORD PTR [rax+0x38]
    9e95:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2f
    9e9a:	lea    rdx,[rdi-0x1]
    9e9e:	cmove  rdi,rdx
    9ea2:	add    rdi,QWORD PTR [r12+0x20]
    9ea7:	mov    BYTE PTR [rdi],0x2f
    9eaa:	mov    rax,QWORD PTR [rbp+0x60]
    9eae:	add    rdi,0x1
    9eb2:	lea    rdx,[rax+0x1]
    9eb6:	call   2440 <memmove@plt>
    9ebb:	movzx  eax,WORD PTR [rbp+0x70]
    9ebf:	jmp    9e1e <fts_read@@Base+0x34e>
    9ec4:	nop    DWORD PTR [rax+0x0]
    9ec8:	call   2570 <free@plt>
    9ecd:	jmp    9d9e <fts_read@@Base+0x2ce>
    9ed2:	and    dh,0xdf
    9ed5:	mov    DWORD PTR [r12+0x48],edx
    9eda:	call   83c0 <__cxa_finalize@plt+0x5e48>
    9edf:	mov    QWORD PTR [r12+0x8],0x0
    9ee8:	mov    esi,0x3
    9eed:	mov    rdi,r12
    9ef0:	call   8be0 <__cxa_finalize@plt+0x6668>
    9ef5:	test   rax,rax
    9ef8:	mov    QWORD PTR [r12+0x8],rax
    9efd:	je     9ff4 <fts_read@@Base+0x524>
    9f03:	mov    rbp,rax
    9f06:	mov    QWORD PTR [r12+0x8],0x0
    9f0f:	jmp    9e82 <fts_read@@Base+0x3b2>
    9f14:	nop    DWORD PTR [rax+0x0]
    9f18:	test   al,0x1
    9f1a:	jne    9bc3 <fts_read@@Base+0xf3>
    9f20:	mov    rsi,QWORD PTR [rbx+0x8]
    9f24:	lea    rcx,[rip+0x215f]        # c08a <version_etc_copyright@@Base+0x6a>
    9f2b:	mov    edx,0xffffffff
    9f30:	mov    rdi,r12
    9f33:	call   8800 <__cxa_finalize@plt+0x6288>
    9f38:	test   eax,eax
    9f3a:	je     9bc3 <fts_read@@Base+0xf3>
    9f40:	call   2060 <__errno_location@plt>
    9f45:	mov    edi,DWORD PTR [r12+0x48]
    9f4a:	mov    eax,DWORD PTR [rax]
    9f4c:	or     edi,0x4000
    9f52:	mov    DWORD PTR [rbx+0x40],eax
    9f55:	mov    DWORD PTR [r12+0x48],edi
    9f5a:	jmp    9bc8 <fts_read@@Base+0xf8>
    9f5f:	nop
    9f60:	mov    rdi,r12
    9f63:	call   8670 <__cxa_finalize@plt+0x60f8>
    9f68:	test   eax,eax
    9f6a:	jne    9f40 <fts_read@@Base+0x470>
    9f6c:	jmp    9bc3 <fts_read@@Base+0xf3>
    9f71:	nop    DWORD PTR [rax+0x0]
    9f78:	mov    eax,0x6
    9f7d:	lea    rsi,[r12+0x58]
    9f82:	mov    rdx,rbx
    9f85:	mov    WORD PTR [rbx+0x70],ax
    9f89:	call   8b20 <__cxa_finalize@plt+0x65a8>
    9f8e:	mov    edi,DWORD PTR [r12+0x48]
    9f93:	jmp    9be3 <fts_read@@Base+0x113>
    9f98:	nop    DWORD PTR [rax+rax*1+0x0]
    9fa0:	cmp    BYTE PTR [rbx+0x109],0x0
    9fa7:	jne    9dd9 <fts_read@@Base+0x309>
    9fad:	jmp    9dfb <fts_read@@Base+0x32b>
    9fb2:	mov    rbp,QWORD PTR [r12+0x8]
    9fb7:	jmp    9f06 <fts_read@@Base+0x436>
    9fbc:	test   ah,0x2
    9fbf:	je     a15d <fts_read@@Base+0x68d>
    9fc5:	mov    esi,edi
    9fc7:	mov    edx,0x1
    9fcc:	mov    rdi,r12
    9fcf:	call   8600 <__cxa_finalize@plt+0x6088>
    9fd4:	mov    edi,DWORD PTR [rbx+0x44]
    9fd7:	jmp    9bbe <fts_read@@Base+0xee>
    9fdc:	mov    esi,DWORD PTR [r12+0x48]
    9fe1:	test   sil,0x4
    9fe5:	je     a1e7 <fts_read@@Base+0x717>
    9feb:	mov    QWORD PTR [r12],rbp
    9fef:	jmp    9e36 <fts_read@@Base+0x366>
    9ff4:	mov    edi,DWORD PTR [r12+0x48]
    9ff9:	test   edi,0x4000
    9fff:	jne    9bee <fts_read@@Base+0x11e>
    a005:	mov    r9d,DWORD PTR [rbp+0x40]
    a009:	test   r9d,r9d
    a00c:	je     a020 <fts_read@@Base+0x550>
    a00e:	cmp    WORD PTR [rbp+0x70],0x4
    a013:	je     a020 <fts_read@@Base+0x550>
    a015:	mov    r8d,0x7
    a01b:	mov    WORD PTR [rbp+0x70],r8w
    a020:	lea    rsi,[r12+0x58]
    a025:	mov    rdx,rbp
    a028:	call   8b20 <__cxa_finalize@plt+0x65a8>
    a02d:	jmp    9c6a <fts_read@@Base+0x19a>
    a032:	mov    rdi,rbx
    a035:	xor    ebp,ebp
    a037:	call   2570 <free@plt>
    a03c:	call   2060 <__errno_location@plt>
    a041:	mov    DWORD PTR [rax],0x0
    a047:	mov    QWORD PTR [r12],0x0
    a04f:	jmp    9c6a <fts_read@@Base+0x19a>
    a054:	nop    DWORD PTR [rax+0x0]
    a058:	mov    rbx,QWORD PTR [rbp+0x8]
    a05c:	cmp    QWORD PTR [rbx+0x68],0x0
    a061:	jne    a074 <fts_read@@Base+0x5a4>
    a063:	mov    eax,DWORD PTR [r12+0x48]
    a068:	and    eax,0x18
    a06b:	cmp    eax,0x18
    a06e:	je     a1cd <fts_read@@Base+0x6fd>
    a074:	xor    edx,edx
    a076:	mov    rsi,rbp
    a079:	mov    rdi,r12
    a07c:	call   8050 <__cxa_finalize@plt+0x5ad8>
    a081:	mov    edx,DWORD PTR [rbp+0x90]
    a087:	mov    WORD PTR [rbp+0x70],ax
    a08b:	and    edx,0xf000
    a091:	cmp    edx,0x4000
    a097:	jne    9e2c <fts_read@@Base+0x35c>
    a09d:	cmp    QWORD PTR [rbp+0x58],0x0
    a0a2:	je     a1be <fts_read@@Base+0x6ee>
    a0a8:	mov    rcx,QWORD PTR [rbx+0x68]
    a0ac:	lea    rdx,[rcx-0x1]
    a0b0:	cmp    rdx,0xfffffffffffffffd
    a0b4:	ja     a0ba <fts_read@@Base+0x5ea>
    a0b6:	mov    QWORD PTR [rbx+0x68],rdx
    a0ba:	cmp    ax,0x1
    a0be:	jne    9c6a <fts_read@@Base+0x19a>
    a0c4:	jmp    9e46 <fts_read@@Base+0x376>
    a0c9:	nop    DWORD PTR [rax+0x0]
    a0d0:	mov    rax,QWORD PTR [rbx+0x48]
    a0d4:	mov    rdx,QWORD PTR [r12+0x20]
    a0d9:	mov    esi,0x3
    a0de:	mov    QWORD PTR [r12],rbx
    a0e2:	mov    rdi,r12
    a0e5:	mov    BYTE PTR [rdx+rax*1],0x0
    a0e9:	call   8be0 <__cxa_finalize@plt+0x6668>
    a0ee:	test   rax,rax
    a0f1:	mov    rbx,rax
    a0f4:	je     a148 <fts_read@@Base+0x678>
    a0f6:	mov    rdi,rbp
    a0f9:	mov    rbp,rbx
    a0fc:	call   2570 <free@plt>
    a101:	jmp    9e82 <fts_read@@Base+0x3b2>
    a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a110:	mov    edi,DWORD PTR [rbp+0x44]
    a113:	call   2240 <close@plt>
    a118:	jmp    9c35 <fts_read@@Base+0x165>
    a11d:	mov    edx,0x1
    a122:	mov    rsi,rbx
    a125:	mov    rdi,r12
    a128:	call   8050 <__cxa_finalize@plt+0x5ad8>
    a12d:	cmp    ax,0x1
    a131:	mov    WORD PTR [rbx+0x70],ax
    a135:	je     a191 <fts_read@@Base+0x6c1>
    a137:	mov    esi,0x3
    a13c:	mov    rbp,rbx
    a13f:	mov    WORD PTR [rbx+0x74],si
    a143:	jmp    9e82 <fts_read@@Base+0x3b2>
    a148:	test   BYTE PTR [r12+0x49],0x40
    a14e:	jne    9bee <fts_read@@Base+0x11e>
    a154:	mov    rbx,QWORD PTR [rbp+0x8]
    a158:	jmp    9b68 <fts_read@@Base+0x98>
    a15d:	call   23e0 <fchdir@plt>
    a162:	test   eax,eax
    a164:	je     a179 <fts_read@@Base+0x6a9>
    a166:	call   2060 <__errno_location@plt>
    a16b:	mov    eax,DWORD PTR [rax]
    a16d:	mov    DWORD PTR [rbx+0x40],eax
    a170:	or     DWORD PTR [r12+0x48],0x4000
    a179:	mov    edi,DWORD PTR [rbx+0x44]
    a17c:	jmp    9bbe <fts_read@@Base+0xee>
    a181:	or     DWORD PTR [r12+0x48],0x4000
    a18a:	xor    ebp,ebp
    a18c:	jmp    9c6a <fts_read@@Base+0x19a>
    a191:	mov    esi,DWORD PTR [r12+0x48]
    a196:	test   sil,0x4
    a19a:	jne    a137 <fts_read@@Base+0x667>
    a19c:	mov    edi,DWORD PTR [r12+0x2c]
    a1a1:	lea    rdx,[rip+0x1ee3]        # c08b <version_etc_copyright@@Base+0x6b>
    a1a8:	call   87b0 <__cxa_finalize@plt+0x6238>
    a1ad:	test   eax,eax
    a1af:	mov    DWORD PTR [rbx+0x44],eax
    a1b2:	js     a22b <fts_read@@Base+0x75b>
    a1b4:	or     WORD PTR [rbx+0x72],0x2
    a1b9:	jmp    a137 <fts_read@@Base+0x667>
    a1be:	cmp    ax,0x1
    a1c2:	jne    9c6a <fts_read@@Base+0x19a>
    a1c8:	jmp    9e3d <fts_read@@Base+0x36d>
    a1cd:	mov    rdi,rbx
    a1d0:	call   85a0 <__cxa_finalize@plt+0x6028>
    a1d5:	cmp    eax,0x2
    a1d8:	jne    a074 <fts_read@@Base+0x5a4>
    a1de:	movzx  eax,WORD PTR [rbp+0x70]
    a1e2:	jmp    9e2c <fts_read@@Base+0x35c>
    a1e7:	mov    edi,DWORD PTR [r12+0x2c]
    a1ec:	lea    rdx,[rip+0x1e98]        # c08b <version_etc_copyright@@Base+0x6b>
    a1f3:	call   87b0 <__cxa_finalize@plt+0x6238>
    a1f8:	test   eax,eax
    a1fa:	mov    DWORD PTR [rbp+0x44],eax
    a1fd:	js     a20d <fts_read@@Base+0x73d>
    a1ff:	or     WORD PTR [rbp+0x72],0x2
    a204:	movzx  eax,WORD PTR [rbp+0x70]
    a208:	jmp    9e1e <fts_read@@Base+0x34e>
    a20d:	call   2060 <__errno_location@plt>
    a212:	mov    eax,DWORD PTR [rax]
    a214:	mov    r11d,0x7
    a21a:	mov    WORD PTR [rbp+0x70],r11w
    a21f:	mov    DWORD PTR [rbp+0x40],eax
    a222:	mov    QWORD PTR [r12],rbp
    a226:	jmp    9c6a <fts_read@@Base+0x19a>
    a22b:	call   2060 <__errno_location@plt>
    a230:	mov    eax,DWORD PTR [rax]
    a232:	mov    edi,0x7
    a237:	mov    WORD PTR [rbx+0x70],di
    a23b:	mov    DWORD PTR [rbx+0x40],eax
    a23e:	jmp    a137 <fts_read@@Base+0x667>
    a243:	nop    DWORD PTR [rax]
    a246:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a250 <fts_set@@Base>:
    a250:	cmp    edx,0x4
    a253:	ja     a260 <fts_set@@Base+0x10>
    a255:	mov    WORD PTR [rsi+0x74],dx
    a259:	xor    eax,eax
    a25b:	ret    
    a25c:	nop    DWORD PTR [rax+0x0]
    a260:	sub    rsp,0x8
    a264:	call   2060 <__errno_location@plt>
    a269:	mov    DWORD PTR [rax],0x16
    a26f:	mov    eax,0x1
    a274:	add    rsp,0x8
    a278:	ret    
    a279:	nop    DWORD PTR [rax+0x0]

000000000000a280 <fts_children@@Base>:
    a280:	push   r14
    a282:	push   r13
    a284:	push   r12
    a286:	push   rbp
    a287:	mov    r12d,esi
    a28a:	push   rbx
    a28b:	mov    rbx,rdi
    a28e:	call   2060 <__errno_location@plt>
    a293:	test   r12d,0xffffdfff
    a29a:	mov    r13,rax
    a29d:	jne    a388 <fts_children@@Base+0x108>
    a2a3:	mov    rbp,QWORD PTR [rbx]
    a2a6:	mov    DWORD PTR [rax],0x0
    a2ac:	test   BYTE PTR [rbx+0x49],0x40
    a2b0:	jne    a330 <fts_children@@Base+0xb0>
    a2b2:	movzx  eax,WORD PTR [rbp+0x70]
    a2b6:	cmp    ax,0x9
    a2ba:	je     a320 <fts_children@@Base+0xa0>
    a2bc:	cmp    ax,0x1
    a2c0:	jne    a330 <fts_children@@Base+0xb0>
    a2c2:	mov    rdi,QWORD PTR [rbx+0x8]
    a2c6:	test   rdi,rdi
    a2c9:	je     a2d0 <fts_children@@Base+0x50>
    a2cb:	call   83c0 <__cxa_finalize@plt+0x5e48>
    a2d0:	cmp    r12d,0x2000
    a2d7:	mov    r14d,0x1
    a2dd:	jne    a2ec <fts_children@@Base+0x6c>
    a2df:	or     DWORD PTR [rbx+0x48],0x2000
    a2e6:	mov    r14d,0x2
    a2ec:	cmp    QWORD PTR [rbp+0x58],0x0
    a2f1:	jne    a305 <fts_children@@Base+0x85>
    a2f3:	mov    rax,QWORD PTR [rbp+0x30]
    a2f7:	cmp    BYTE PTR [rax],0x2f
    a2fa:	je     a305 <fts_children@@Base+0x85>
    a2fc:	mov    esi,DWORD PTR [rbx+0x48]
    a2ff:	test   sil,0x4
    a303:	je     a340 <fts_children@@Base+0xc0>
    a305:	mov    esi,r14d
    a308:	mov    rdi,rbx
    a30b:	call   8be0 <__cxa_finalize@plt+0x6668>
    a310:	mov    QWORD PTR [rbx+0x8],rax
    a314:	pop    rbx
    a315:	pop    rbp
    a316:	pop    r12
    a318:	pop    r13
    a31a:	pop    r14
    a31c:	ret    
    a31d:	nop    DWORD PTR [rax]
    a320:	pop    rbx
    a321:	mov    rax,QWORD PTR [rbp+0x10]
    a325:	pop    rbp
    a326:	pop    r12
    a328:	pop    r13
    a32a:	pop    r14
    a32c:	ret    
    a32d:	nop    DWORD PTR [rax]
    a330:	pop    rbx
    a331:	xor    eax,eax
    a333:	pop    rbp
    a334:	pop    r12
    a336:	pop    r13
    a338:	pop    r14
    a33a:	ret    
    a33b:	nop    DWORD PTR [rax+rax*1+0x0]
    a340:	mov    edi,DWORD PTR [rbx+0x2c]
    a343:	lea    rdx,[rip+0x1d41]        # c08b <version_etc_copyright@@Base+0x6b>
    a34a:	call   87b0 <__cxa_finalize@plt+0x6238>
    a34f:	test   eax,eax
    a351:	mov    ebp,eax
    a353:	js     a3a9 <fts_children@@Base+0x129>
    a355:	mov    esi,r14d
    a358:	mov    rdi,rbx
    a35b:	call   8be0 <__cxa_finalize@plt+0x6668>
    a360:	test   BYTE PTR [rbx+0x49],0x2
    a364:	mov    QWORD PTR [rbx+0x8],rax
    a368:	jne    a398 <fts_children@@Base+0x118>
    a36a:	mov    edi,ebp
    a36c:	call   23e0 <fchdir@plt>
    a371:	test   eax,eax
    a373:	jne    a3b8 <fts_children@@Base+0x138>
    a375:	mov    edi,ebp
    a377:	call   2240 <close@plt>
    a37c:	mov    rax,QWORD PTR [rbx+0x8]
    a380:	jmp    a314 <fts_children@@Base+0x94>
    a382:	nop    WORD PTR [rax+rax*1+0x0]
    a388:	mov    DWORD PTR [rax],0x16
    a38e:	xor    eax,eax
    a390:	jmp    a314 <fts_children@@Base+0x94>
    a395:	nop    DWORD PTR [rax]
    a398:	mov    edx,0x1
    a39d:	mov    esi,ebp
    a39f:	mov    rdi,rbx
    a3a2:	call   8600 <__cxa_finalize@plt+0x6088>
    a3a7:	jmp    a37c <fts_children@@Base+0xfc>
    a3a9:	mov    QWORD PTR [rbx+0x8],0x0
    a3b1:	xor    eax,eax
    a3b3:	jmp    a314 <fts_children@@Base+0x94>
    a3b8:	mov    ebx,DWORD PTR [r13+0x0]
    a3bc:	mov    edi,ebp
    a3be:	call   2240 <close@plt>
    a3c3:	xor    eax,eax
    a3c5:	mov    DWORD PTR [r13+0x0],ebx
    a3c9:	jmp    a314 <fts_children@@Base+0x94>
    a3ce:	xchg   ax,ax
    a3d0:	test   edi,edi
    a3d2:	push   rbx
    a3d3:	je     a420 <fts_children@@Base+0x1a0>
    a3d5:	cmp    edi,0xa
    a3d8:	mov    eax,edi
    a3da:	je     a3e0 <fts_children@@Base+0x160>
    a3dc:	pop    rbx
    a3dd:	ret    
    a3de:	xchg   ax,ax
    a3e0:	mov    rdx,QWORD PTR [rsi]
    a3e3:	lea    rdi,[rip+0x1ce6]        # c0d0 <version_etc_copyright@@Base+0xb0>
    a3ea:	mov    rbx,rsi
    a3ed:	mov    ecx,0xa
    a3f2:	mov    rsi,rdx
    a3f5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a3f7:	jne    a3dc <fts_children@@Base+0x15c>
    a3f9:	mov    rdi,rdx
    a3fc:	call   24d0 <freecon@plt>
    a401:	mov    QWORD PTR [rbx],0x0
    a408:	call   2060 <__errno_location@plt>
    a40d:	mov    DWORD PTR [rax],0x3d
    a413:	mov    eax,0xffffffff
    a418:	pop    rbx
    a419:	ret    
    a41a:	nop    WORD PTR [rax+rax*1+0x0]
    a420:	call   2060 <__errno_location@plt>
    a425:	mov    DWORD PTR [rax],0x5f
    a42b:	mov    eax,0xffffffff
    a430:	pop    rbx
    a431:	ret    
    a432:	nop    DWORD PTR [rax+0x0]
    a436:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a440:	push   rbx
    a441:	mov    rbx,rsi
    a444:	call   2330 <getfilecon@plt>
    a449:	mov    rsi,rbx
    a44c:	mov    edi,eax
    a44e:	pop    rbx
    a44f:	jmp    a3d0 <fts_children@@Base+0x150>
    a454:	xchg   ax,ax
    a456:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a460:	push   rbx
    a461:	mov    rbx,rsi
    a464:	call   22c0 <lgetfilecon@plt>
    a469:	mov    rsi,rbx
    a46c:	mov    edi,eax
    a46e:	pop    rbx
    a46f:	jmp    a3d0 <fts_children@@Base+0x150>
    a474:	xchg   ax,ax
    a476:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a480:	push   rbx
    a481:	mov    rbx,rsi
    a484:	call   21e0 <fgetfilecon@plt>
    a489:	mov    rsi,rbx
    a48c:	mov    edi,eax
    a48e:	pop    rbx
    a48f:	jmp    a3d0 <fts_children@@Base+0x150>
    a494:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a49e:	xchg   ax,ax
    a4a0:	push   r13
    a4a2:	push   r12
    a4a4:	mov    r13,rsi
    a4a7:	push   rbp
    a4a8:	push   rbx
    a4a9:	mov    rbx,rdi
    a4ac:	mov    r12,rdx
    a4af:	sub    rsp,0x18
    a4b3:	mov    rax,QWORD PTR fs:0x28
    a4bc:	mov    QWORD PTR [rsp+0x8],rax
    a4c1:	xor    eax,eax
    a4c3:	lea    rax,[rsp+0x4]
    a4c8:	test   rdi,rdi
    a4cb:	cmove  rbx,rax
    a4cf:	mov    rdi,rbx
    a4d2:	call   21a0 <mbrtowc@plt>
    a4d7:	cmp    rax,0xfffffffffffffffd
    a4db:	mov    rbp,rax
    a4de:	jbe    a500 <fts_children@@Base+0x280>
    a4e0:	test   r12,r12
    a4e3:	je     a500 <fts_children@@Base+0x280>
    a4e5:	xor    edi,edi
    a4e7:	call   a7b0 <fts_children@@Base+0x530>
    a4ec:	test   al,al
    a4ee:	jne    a500 <fts_children@@Base+0x280>
    a4f0:	movzx  eax,BYTE PTR [r13+0x0]
    a4f5:	mov    ebp,0x1
    a4fa:	mov    DWORD PTR [rbx],eax
    a4fc:	nop    DWORD PTR [rax+0x0]
    a500:	mov    rdx,QWORD PTR [rsp+0x8]
    a505:	xor    rdx,QWORD PTR fs:0x28
    a50e:	mov    rax,rbp
    a511:	jne    a51e <fts_children@@Base+0x29e>
    a513:	add    rsp,0x18
    a517:	pop    rbx
    a518:	pop    rbp
    a519:	pop    r12
    a51b:	pop    r13
    a51d:	ret    
    a51e:	call   2180 <__stack_chk_fail@plt>
    a523:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a52d:	nop    DWORD PTR [rax]
    a530:	push   r15
    a532:	push   r14
    a534:	mov    eax,0x401
    a539:	push   r13
    a53b:	push   r12
    a53d:	mov    r13,rdi
    a540:	push   rbp
    a541:	push   rbx
    a542:	lea    rbx,[rsi+0x1]
    a546:	movabs r14,0x3fffffffffffffff
    a550:	movabs r15,0x7ffffffffffffffe
    a55a:	sub    rsp,0x8
    a55e:	cmp    rsi,0x401
    a565:	cmovae rbx,rax
    a569:	nop    DWORD PTR [rax+0x0]
    a570:	mov    rdi,rbx
    a573:	call   2380 <malloc@plt>
    a578:	test   rax,rax
    a57b:	mov    rbp,rax
    a57e:	je     a5bb <fts_children@@Base+0x33b>
    a580:	mov    rdx,rbx
    a583:	mov    rsi,rax
    a586:	mov    rdi,r13
    a589:	call   20d0 <readlink@plt>
    a58e:	test   rax,rax
    a591:	mov    r12,rax
    a594:	js     a5e8 <fts_children@@Base+0x368>
    a596:	cmp    rbx,r12
    a599:	ja     a600 <fts_children@@Base+0x380>
    a59b:	mov    rdi,rbp
    a59e:	call   2570 <free@plt>
    a5a3:	cmp    rbx,r14
    a5a6:	ja     a5d0 <fts_children@@Base+0x350>
    a5a8:	add    rbx,rbx
    a5ab:	mov    rdi,rbx
    a5ae:	call   2380 <malloc@plt>
    a5b3:	test   rax,rax
    a5b6:	mov    rbp,rax
    a5b9:	jne    a580 <fts_children@@Base+0x300>
    a5bb:	add    rsp,0x8
    a5bf:	mov    rax,rbp
    a5c2:	pop    rbx
    a5c3:	pop    rbp
    a5c4:	pop    r12
    a5c6:	pop    r13
    a5c8:	pop    r14
    a5ca:	pop    r15
    a5cc:	ret    
    a5cd:	nop    DWORD PTR [rax]
    a5d0:	cmp    rbx,r15
    a5d3:	ja     a610 <fts_children@@Base+0x390>
    a5d5:	movabs rbx,0x7fffffffffffffff
    a5df:	jmp    a570 <fts_children@@Base+0x2f0>
    a5e1:	nop    DWORD PTR [rax+0x0]
    a5e8:	call   2060 <__errno_location@plt>
    a5ed:	cmp    DWORD PTR [rax],0x22
    a5f0:	je     a596 <fts_children@@Base+0x316>
    a5f2:	mov    rdi,rbp
    a5f5:	xor    ebp,ebp
    a5f7:	call   2570 <free@plt>
    a5fc:	jmp    a5bb <fts_children@@Base+0x33b>
    a5fe:	xchg   ax,ax
    a600:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
    a606:	jmp    a5bb <fts_children@@Base+0x33b>
    a608:	nop    DWORD PTR [rax+rax*1+0x0]
    a610:	call   2060 <__errno_location@plt>
    a615:	xor    ebp,ebp
    a617:	mov    DWORD PTR [rax],0xc
    a61d:	jmp    a5bb <fts_children@@Base+0x33b>
    a61f:	nop
    a620:	push   r12
    a622:	push   rbp
    a623:	mov    rbp,rdi
    a626:	push   rbx
    a627:	call   2090 <__fpending@plt>
    a62c:	mov    ebx,DWORD PTR [rbp+0x0]
    a62f:	mov    rdi,rbp
    a632:	mov    r12,rax
    a635:	call   ae00 <fts_children@@Base+0xb80>
    a63a:	and    ebx,0x20
    a63d:	test   ebx,ebx
    a63f:	jne    a658 <fts_children@@Base+0x3d8>
    a641:	test   eax,eax
    a643:	je     a64f <fts_children@@Base+0x3cf>
    a645:	test   r12,r12
    a648:	mov    eax,0xffffffff
    a64d:	je     a688 <fts_children@@Base+0x408>
    a64f:	pop    rbx
    a650:	pop    rbp
    a651:	pop    r12
    a653:	ret    
    a654:	nop    DWORD PTR [rax+0x0]
    a658:	test   eax,eax
    a65a:	jne    a678 <fts_children@@Base+0x3f8>
    a65c:	call   2060 <__errno_location@plt>
    a661:	mov    DWORD PTR [rax],0x0
    a667:	mov    eax,0xffffffff
    a66c:	pop    rbx
    a66d:	pop    rbp
    a66e:	pop    r12
    a670:	ret    
    a671:	nop    DWORD PTR [rax+0x0]
    a678:	pop    rbx
    a679:	mov    eax,0xffffffff
    a67e:	pop    rbp
    a67f:	pop    r12
    a681:	ret    
    a682:	nop    WORD PTR [rax+rax*1+0x0]
    a688:	call   2060 <__errno_location@plt>
    a68d:	cmp    DWORD PTR [rax],0x9
    a690:	pop    rbx
    a691:	pop    rbp
    a692:	pop    r12
    a694:	setne  al
    a697:	movzx  eax,al
    a69a:	neg    eax
    a69c:	ret    
    a69d:	nop    DWORD PTR [rax]
    a6a0:	mov    QWORD PTR [rdi+0x10],0x0
    a6a8:	mov    DWORD PTR [rdi+0x18],0x95f616
    a6af:	ret    
    a6b0:	cmp    DWORD PTR [rdi+0x18],0x95f616
    a6b7:	jne    a717 <fts_children@@Base+0x497>
    a6b9:	mov    rdx,QWORD PTR [rdi+0x10]
    a6bd:	mov    rcx,QWORD PTR [rsi+0x8]
    a6c1:	test   rdx,rdx
    a6c4:	je     a6e0 <fts_children@@Base+0x460>
    a6c6:	cmp    QWORD PTR [rdi],rcx
    a6c9:	je     a6f8 <fts_children@@Base+0x478>
    a6cb:	lea    r8,[rdx+0x1]
    a6cf:	xor    eax,eax
    a6d1:	test   rdx,r8
    a6d4:	mov    QWORD PTR [rdi+0x10],r8
    a6d8:	je     a710 <fts_children@@Base+0x490>
    a6da:	repz ret 
    a6dc:	nop    DWORD PTR [rax+0x0]
    a6e0:	mov    QWORD PTR [rdi+0x10],0x1
    a6e8:	mov    rax,QWORD PTR [rsi]
    a6eb:	mov    QWORD PTR [rdi],rcx
    a6ee:	mov    QWORD PTR [rdi+0x8],rax
    a6f2:	xor    eax,eax
    a6f4:	ret    
    a6f5:	nop    DWORD PTR [rax]
    a6f8:	mov    rax,QWORD PTR [rdi+0x8]
    a6fc:	cmp    QWORD PTR [rsi],rax
    a6ff:	jne    a6cb <fts_children@@Base+0x44b>
    a701:	mov    eax,0x1
    a706:	ret    
    a707:	nop    WORD PTR [rax+rax*1+0x0]
    a710:	test   r8,r8
    a713:	je     a701 <fts_children@@Base+0x481>
    a715:	jmp    a6e8 <fts_children@@Base+0x468>
    a717:	lea    rcx,[rip+0x19ea]        # c108 <version_etc_copyright@@Base+0xe8>
    a71e:	lea    rsi,[rip+0x19b5]        # c0da <version_etc_copyright@@Base+0xba>
    a725:	lea    rdi,[rip+0x19c0]        # c0ec <version_etc_copyright@@Base+0xcc>
    a72c:	sub    rsp,0x8
    a730:	mov    edx,0x3c
    a735:	call   2200 <__assert_fail@plt>
    a73a:	nop    WORD PTR [rax+rax*1+0x0]
    a740:	sub    rsp,0x58
    a744:	mov    QWORD PTR [rsp+0x30],rdx
    a749:	xor    edx,edx
    a74b:	mov    rax,QWORD PTR fs:0x28
    a754:	mov    QWORD PTR [rsp+0x18],rax
    a759:	xor    eax,eax
    a75b:	test   sil,0x40
    a75f:	jne    a788 <fts_children@@Base+0x508>
    a761:	xor    eax,eax
    a763:	call   2470 <open@plt>
    a768:	mov    edi,eax
    a76a:	call   adc0 <fts_children@@Base+0xb40>
    a76f:	mov    rcx,QWORD PTR [rsp+0x18]
    a774:	xor    rcx,QWORD PTR fs:0x28
    a77d:	jne    a7a9 <fts_children@@Base+0x529>
    a77f:	add    rsp,0x58
    a783:	ret    
    a784:	nop    DWORD PTR [rax+0x0]
    a788:	lea    rax,[rsp+0x60]
    a78d:	mov    DWORD PTR [rsp],0x10
    a794:	mov    edx,DWORD PTR [rsp+0x30]
    a798:	mov    QWORD PTR [rsp+0x8],rax
    a79d:	lea    rax,[rsp+0x20]
    a7a2:	mov    QWORD PTR [rsp+0x10],rax
    a7a7:	jmp    a761 <fts_children@@Base+0x4e1>
    a7a9:	call   2180 <__stack_chk_fail@plt>
    a7ae:	xchg   ax,ax
    a7b0:	sub    rsp,0x8
    a7b4:	xor    esi,esi
    a7b6:	call   2410 <setlocale@plt>
    a7bb:	mov    rdx,rax
    a7be:	mov    eax,0x1
    a7c3:	test   rdx,rdx
    a7c6:	je     a7e7 <fts_children@@Base+0x567>
    a7c8:	lea    rdi,[rip+0x1945]        # c114 <version_etc_copyright@@Base+0xf4>
    a7cf:	mov    ecx,0x2
    a7d4:	mov    rsi,rdx
    a7d7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a7d9:	seta   sil
    a7dd:	setb   cl
    a7e0:	xor    eax,eax
    a7e2:	cmp    sil,cl
    a7e5:	jne    a7f0 <fts_children@@Base+0x570>
    a7e7:	add    rsp,0x8
    a7eb:	ret    
    a7ec:	nop    DWORD PTR [rax+0x0]
    a7f0:	lea    rdi,[rip+0x191f]        # c116 <version_etc_copyright@@Base+0xf6>
    a7f7:	mov    ecx,0x6
    a7fc:	mov    rsi,rdx
    a7ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a801:	setne  al
    a804:	add    rsp,0x8
    a808:	ret    
    a809:	nop    DWORD PTR [rax+0x0]
    a810:	movsx  rcx,BYTE PTR [rdi]
    a814:	test   cl,cl
    a816:	je     a840 <fts_children@@Base+0x5c0>
    a818:	xor    eax,eax
    a81a:	nop    WORD PTR [rax+rax*1+0x0]
    a820:	rol    rax,0x9
    a824:	add    rdi,0x1
    a828:	add    rax,rcx
    a82b:	movsx  rcx,BYTE PTR [rdi]
    a82f:	test   cl,cl
    a831:	jne    a820 <fts_children@@Base+0x5a0>
    a833:	xor    edx,edx
    a835:	div    rsi
    a838:	mov    rax,rdx
    a83b:	ret    
    a83c:	nop    DWORD PTR [rax+0x0]
    a840:	xor    edx,edx
    a842:	mov    rax,rdx
    a845:	ret    
    a846:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a850:	mov    BYTE PTR [rdi+0x1c],0x1
    a854:	mov    QWORD PTR [rdi+0x14],0x0
    a85c:	mov    DWORD PTR [rdi],esi
    a85e:	mov    DWORD PTR [rdi+0x4],esi
    a861:	mov    DWORD PTR [rdi+0x8],esi
    a864:	mov    DWORD PTR [rdi+0xc],esi
    a867:	mov    DWORD PTR [rdi+0x10],esi
    a86a:	ret    
    a86b:	nop    DWORD PTR [rax+rax*1+0x0]
    a870:	movzx  eax,BYTE PTR [rdi+0x1c]
    a874:	ret    
    a875:	nop
    a876:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a880:	movzx  edx,BYTE PTR [rdi+0x1c]
    a884:	mov    ecx,DWORD PTR [rdi+0x14]
    a887:	xor    edx,0x1
    a88a:	movzx  edx,dl
    a88d:	add    ecx,edx
    a88f:	and    ecx,0x3
    a892:	mov    eax,ecx
    a894:	lea    r8,[rdi+rax*4]
    a898:	mov    eax,DWORD PTR [r8]
    a89b:	mov    DWORD PTR [r8],esi
    a89e:	mov    esi,DWORD PTR [rdi+0x18]
    a8a1:	mov    DWORD PTR [rdi+0x14],ecx
    a8a4:	cmp    esi,ecx
    a8a6:	jne    a8b0 <fts_children@@Base+0x630>
    a8a8:	add    edx,esi
    a8aa:	and    edx,0x3
    a8ad:	mov    DWORD PTR [rdi+0x18],edx
    a8b0:	mov    BYTE PTR [rdi+0x1c],0x0
    a8b4:	ret    
    a8b5:	nop
    a8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a8c0:	cmp    BYTE PTR [rdi+0x1c],0x0
    a8c4:	jne    a8f5 <fts_children@@Base+0x675>
    a8c6:	mov    eax,DWORD PTR [rdi+0x14]
    a8c9:	mov    esi,DWORD PTR [rdi+0x10]
    a8cc:	lea    rcx,[rdi+rax*4]
    a8d0:	mov    rdx,rax
    a8d3:	mov    eax,DWORD PTR [rcx]
    a8d5:	mov    DWORD PTR [rcx],esi
    a8d7:	cmp    edx,DWORD PTR [rdi+0x18]
    a8da:	je     a8f0 <fts_children@@Base+0x670>
    a8dc:	add    edx,0x3
    a8df:	and    edx,0x3
    a8e2:	mov    DWORD PTR [rdi+0x14],edx
    a8e5:	ret    
    a8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a8f0:	mov    BYTE PTR [rdi+0x1c],0x1
    a8f4:	ret    
    a8f5:	sub    rsp,0x8
    a8f9:	call   2050 <abort@plt>
    a8fe:	xchg   ax,ax
    a900:	push   r15
    a902:	push   r14
    a904:	mov    edi,0xe
    a909:	push   r13
    a90b:	push   r12
    a90d:	push   rbp
    a90e:	push   rbx
    a90f:	sub    rsp,0xa8
    a916:	mov    rax,QWORD PTR fs:0x28
    a91f:	mov    QWORD PTR [rsp+0x98],rax
    a927:	xor    eax,eax
    a929:	call   23a0 <nl_langinfo@plt>
    a92e:	mov    r15,QWORD PTR [rip+0x204903]        # 20f238 <program_name@@Base+0x158>
    a935:	test   rax,rax
    a938:	mov    rbx,rax
    a93b:	lea    rax,[rip+0x13ff]        # bd41 <quoting_style_vals@@Base+0x81>
    a942:	cmove  rbx,rax
    a946:	test   r15,r15
    a949:	jne    a96a <fts_children@@Base+0x6ea>
    a94b:	jmp    a9e0 <fts_children@@Base+0x760>
    a950:	mov    rdi,r15
    a953:	call   2150 <strlen@plt>
    a958:	lea    rbp,[r15+rax*1+0x1]
    a95d:	mov    rdi,rbp
    a960:	call   2150 <strlen@plt>
    a965:	lea    r15,[rbp+rax*1+0x1]
    a96a:	movzx  ebp,BYTE PTR [r15]
    a96e:	test   bpl,bpl
    a971:	je     a99c <fts_children@@Base+0x71c>
    a973:	mov    rsi,r15
    a976:	mov    rdi,rbx
    a979:	call   22d0 <strcmp@plt>
    a97e:	test   eax,eax
    a980:	je     a98f <fts_children@@Base+0x70f>
    a982:	cmp    bpl,0x2a
    a986:	jne    a950 <fts_children@@Base+0x6d0>
    a988:	cmp    BYTE PTR [r15+0x1],0x0
    a98d:	jne    a950 <fts_children@@Base+0x6d0>
    a98f:	mov    rdi,r15
    a992:	call   2150 <strlen@plt>
    a997:	lea    rbx,[r15+rax*1+0x1]
    a99c:	cmp    BYTE PTR [rbx],0x0
    a99f:	lea    rax,[rip+0x1776]        # c11c <version_etc_copyright@@Base+0xfc>
    a9a6:	cmove  rbx,rax
    a9aa:	mov    rcx,QWORD PTR [rsp+0x98]
    a9b2:	xor    rcx,QWORD PTR fs:0x28
    a9bb:	mov    rax,rbx
    a9be:	jne    ad3c <fts_children@@Base+0xabc>
    a9c4:	add    rsp,0xa8
    a9cb:	pop    rbx
    a9cc:	pop    rbp
    a9cd:	pop    r12
    a9cf:	pop    r13
    a9d1:	pop    r14
    a9d3:	pop    r15
    a9d5:	ret    
    a9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a9e0:	lea    rdi,[rip+0x1755]        # c13c <version_etc_copyright@@Base+0x11c>
    a9e7:	call   2030 <getenv@plt>
    a9ec:	test   rax,rax
    a9ef:	mov    r13,rax
    a9f2:	je     aa40 <fts_children@@Base+0x7c0>
    a9f4:	cmp    BYTE PTR [rax],0x0
    a9f7:	je     aa40 <fts_children@@Base+0x7c0>
    a9f9:	mov    rdi,rax
    a9fc:	call   2150 <strlen@plt>
    aa01:	test   rax,rax
    aa04:	mov    r12,rax
    aa07:	mov    r14,rax
    aa0a:	jne    ad2b <fts_children@@Base+0xaab>
    aa10:	mov    edi,0xe
    aa15:	call   2380 <malloc@plt>
    aa1a:	test   rax,rax
    aa1d:	mov    rbp,rax
    aa20:	jne    aac8 <fts_children@@Base+0x848>
    aa26:	lea    r15,[rip+0x1314]        # bd41 <quoting_style_vals@@Base+0x81>
    aa2d:	mov    QWORD PTR [rip+0x204804],r15        # 20f238 <program_name@@Base+0x158>
    aa34:	jmp    a96a <fts_children@@Base+0x6ea>
    aa39:	nop    DWORD PTR [rax+0x0]
    aa40:	lea    r13,[rip+0x16db]        # c122 <version_etc_copyright@@Base+0x102>
    aa47:	mov    edi,0x28
    aa4c:	mov    r12d,0x1a
    aa52:	mov    r14d,0x19
    aa58:	call   2380 <malloc@plt>
    aa5d:	test   rax,rax
    aa60:	mov    rbp,rax
    aa63:	je     aa26 <fts_children@@Base+0x7a6>
    aa65:	mov    rdx,r14
    aa68:	mov    rsi,r13
    aa6b:	mov    rdi,rbp
    aa6e:	call   2320 <memcpy@plt>
    aa73:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    aa79:	add    r12,rbp
    aa7c:	movabs rax,0x2e74657372616863
    aa86:	mov    esi,0x20000
    aa8b:	mov    QWORD PTR [r12],rax
    aa8f:	mov    eax,0x73
    aa94:	mov    DWORD PTR [r12+0x8],0x61696c61
    aa9d:	mov    WORD PTR [r12+0xc],ax
    aaa3:	mov    rdi,rbp
    aaa6:	xor    eax,eax
    aaa8:	call   2470 <open@plt>
    aaad:	test   eax,eax
    aaaf:	mov    r12d,eax
    aab2:	jns    aad8 <fts_children@@Base+0x858>
    aab4:	lea    r15,[rip+0x1286]        # bd41 <quoting_style_vals@@Base+0x81>
    aabb:	mov    rdi,rbp
    aabe:	call   2570 <free@plt>
    aac3:	jmp    aa2d <fts_children@@Base+0x7ad>
    aac8:	mov    rdx,r14
    aacb:	mov    rsi,r13
    aace:	mov    rdi,rbp
    aad1:	call   2320 <memcpy@plt>
    aad6:	jmp    aa79 <fts_children@@Base+0x7f9>
    aad8:	lea    rsi,[rip+0xb9d]        # b67c <_IO_stdin_used@@Base+0x53c>
    aadf:	mov    edi,eax
    aae1:	xor    r15d,r15d
    aae4:	call   2400 <fdopen@plt>
    aae9:	test   rax,rax
    aaec:	mov    r14,rax
    aaef:	mov    QWORD PTR [rsp],0x0
    aaf7:	je     acd3 <fts_children@@Base+0xa53>
    aafd:	lea    rax,[rsp+0x60]
    ab02:	mov    QWORD PTR [rsp+0x8],rax
    ab07:	lea    rax,[rsp+0x20]
    ab0c:	mov    QWORD PTR [rsp+0x10],rax
    ab11:	mov    rax,QWORD PTR [r14+0x8]
    ab15:	cmp    rax,QWORD PTR [r14+0x10]
    ab19:	jae    ac6a <fts_children@@Base+0x9ea>
    ab1f:	lea    rdx,[rax+0x1]
    ab23:	mov    QWORD PTR [r14+0x8],rdx
    ab27:	movzx  edi,BYTE PTR [rax]
    ab2a:	lea    eax,[rdi-0x9]
    ab2d:	cmp    eax,0x1
    ab30:	jbe    ab11 <fts_children@@Base+0x891>
    ab32:	cmp    edi,0x20
    ab35:	je     ab11 <fts_children@@Base+0x891>
    ab37:	cmp    edi,0x23
    ab3a:	je     acb9 <fts_children@@Base+0xa39>
    ab40:	mov    rsi,r14
    ab43:	call   23b0 <ungetc@plt>
    ab48:	mov    r13,QWORD PTR [rsp+0x10]
    ab4d:	mov    rcx,QWORD PTR [rsp+0x8]
    ab52:	lea    rsi,[rip+0x15f3]        # c14c <version_etc_copyright@@Base+0x12c>
    ab59:	xor    eax,eax
    ab5b:	mov    rdi,r14
    ab5e:	mov    rdx,r13
    ab61:	call   2220 <fscanf@plt>
    ab66:	cmp    eax,0x1
    ab69:	jle    ac7d <fts_children@@Base+0x9fd>
    ab6f:	mov    rdx,r13
    ab72:	mov    ecx,DWORD PTR [rdx]
    ab74:	add    rdx,0x4
    ab78:	lea    eax,[rcx-0x1010101]
    ab7e:	not    ecx
    ab80:	and    eax,ecx
    ab82:	and    eax,0x80808080
    ab87:	je     ab72 <fts_children@@Base+0x8f2>
    ab89:	mov    ecx,eax
    ab8b:	mov    r13,QWORD PTR [rsp+0x8]
    ab90:	shr    ecx,0x10
    ab93:	test   eax,0x8080
    ab98:	cmove  eax,ecx
    ab9b:	lea    rcx,[rdx+0x2]
    ab9f:	cmove  rdx,rcx
    aba3:	mov    ecx,eax
    aba5:	add    cl,al
    aba7:	sbb    rdx,0x3
    abab:	sub    rdx,QWORD PTR [rsp+0x10]
    abb0:	mov    esi,DWORD PTR [r13+0x0]
    abb4:	add    r13,0x4
    abb8:	lea    eax,[rsi-0x1010101]
    abbe:	not    esi
    abc0:	and    eax,esi
    abc2:	and    eax,0x80808080
    abc7:	je     abb0 <fts_children@@Base+0x930>
    abc9:	mov    esi,eax
    abcb:	mov    QWORD PTR [rsp+0x18],rdx
    abd0:	shr    esi,0x10
    abd3:	test   eax,0x8080
    abd8:	cmove  eax,esi
    abdb:	lea    rsi,[r13+0x2]
    abdf:	mov    ecx,eax
    abe1:	cmove  r13,rsi
    abe5:	add    cl,al
    abe7:	sbb    r13,0x3
    abeb:	sub    r13,QWORD PTR [rsp+0x8]
    abf0:	cmp    QWORD PTR [rsp],0x0
    abf5:	lea    rax,[rdx+r13*1]
    abf9:	jne    acea <fts_children@@Base+0xa6a>
    abff:	lea    rcx,[rax+0x2]
    ac03:	lea    rdi,[rax+0x3]
    ac07:	mov    QWORD PTR [rsp],rcx
    ac0b:	call   2380 <malloc@plt>
    ac10:	mov    rdx,QWORD PTR [rsp+0x18]
    ac15:	mov    r12,rax
    ac18:	test   r12,r12
    ac1b:	je     ad0f <fts_children@@Base+0xa8f>
    ac21:	mov    r15,QWORD PTR [rsp]
    ac25:	mov    rdi,0xfffffffffffffffe
    ac2c:	mov    rsi,QWORD PTR [rsp+0x10]
    ac31:	sub    rdi,rdx
    ac34:	add    rdx,0x1
    ac38:	sub    r15,r13
    ac3b:	add    rdi,r15
    ac3e:	add    rdi,r12
    ac41:	call   2320 <memcpy@plt>
    ac46:	mov    rsi,QWORD PTR [rsp+0x8]
    ac4b:	lea    rdi,[r12+r15*1-0x1]
    ac50:	lea    rdx,[r13+0x1]
    ac54:	mov    r15,r12
    ac57:	call   2320 <memcpy@plt>
    ac5c:	mov    rax,QWORD PTR [r14+0x8]
    ac60:	cmp    rax,QWORD PTR [r14+0x10]
    ac64:	jb     ab1f <fts_children@@Base+0x89f>
    ac6a:	mov    rdi,r14
    ac6d:	call   2020 <__uflow@plt>
    ac72:	cmp    eax,0xffffffff
    ac75:	mov    edi,eax
    ac77:	jne    ab2a <fts_children@@Base+0x8aa>
    ac7d:	mov    rdi,r14
    ac80:	call   ae00 <fts_children@@Base+0xb80>
    ac85:	mov    rax,QWORD PTR [rsp]
    ac89:	test   rax,rax
    ac8c:	je     aab4 <fts_children@@Base+0x834>
    ac92:	mov    BYTE PTR [r15+rax*1],0x0
    ac97:	jmp    aabb <fts_children@@Base+0x83b>
    ac9c:	nop    DWORD PTR [rax+0x0]
    aca0:	lea    rdx,[rax+0x1]
    aca4:	mov    QWORD PTR [r14+0x8],rdx
    aca8:	movzx  eax,BYTE PTR [rax]
    acab:	mov    edx,0x1
    acb0:	cmp    eax,0xa
    acb3:	je     ace0 <fts_children@@Base+0xa60>
    acb5:	test   dl,dl
    acb7:	je     ace0 <fts_children@@Base+0xa60>
    acb9:	mov    rax,QWORD PTR [r14+0x8]
    acbd:	cmp    rax,QWORD PTR [r14+0x10]
    acc1:	jb     aca0 <fts_children@@Base+0xa20>
    acc3:	mov    rdi,r14
    acc6:	call   2020 <__uflow@plt>
    accb:	cmp    eax,0xffffffff
    acce:	setne  dl
    acd1:	jmp    acb0 <fts_children@@Base+0xa30>
    acd3:	mov    edi,r12d
    acd6:	call   2240 <close@plt>
    acdb:	jmp    aab4 <fts_children@@Base+0x834>
    ace0:	cmp    eax,0xffffffff
    ace3:	je     ac7d <fts_children@@Base+0x9fd>
    ace5:	jmp    ab11 <fts_children@@Base+0x891>
    acea:	add    rax,QWORD PTR [rsp]
    acee:	mov    rdi,r15
    acf1:	lea    rcx,[rax+0x2]
    acf5:	lea    rsi,[rax+0x3]
    acf9:	mov    QWORD PTR [rsp],rcx
    acfd:	call   23f0 <realloc@plt>
    ad02:	mov    rdx,QWORD PTR [rsp+0x18]
    ad07:	mov    r12,rax
    ad0a:	jmp    ac18 <fts_children@@Base+0x998>
    ad0f:	mov    rdi,r15
    ad12:	lea    r15,[rip+0x1028]        # bd41 <quoting_style_vals@@Base+0x81>
    ad19:	call   2570 <free@plt>
    ad1e:	mov    rdi,r14
    ad21:	call   ae00 <fts_children@@Base+0xb80>
    ad26:	jmp    aabb <fts_children@@Base+0x83b>
    ad2b:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    ad31:	jne    ad41 <fts_children@@Base+0xac1>
    ad33:	lea    rdi,[rax+0xe]
    ad37:	jmp    aa15 <fts_children@@Base+0x795>
    ad3c:	call   2180 <__stack_chk_fail@plt>
    ad41:	lea    rdi,[rax+0xf]
    ad45:	add    r12,0x1
    ad49:	jmp    aa58 <fts_children@@Base+0x7d8>
    ad4e:	xchg   ax,ax
    ad50:	sub    rsp,0x58
    ad54:	mov    QWORD PTR [rsp+0x38],rcx
    ad59:	xor    ecx,ecx
    ad5b:	mov    rax,QWORD PTR fs:0x28
    ad64:	mov    QWORD PTR [rsp+0x18],rax
    ad69:	xor    eax,eax
    ad6b:	test   dl,0x40
    ad6e:	jne    ad98 <fts_children@@Base+0xb18>
    ad70:	xor    eax,eax
    ad72:	call   2170 <openat@plt>
    ad77:	mov    edi,eax
    ad79:	call   adc0 <fts_children@@Base+0xb40>
    ad7e:	mov    rsi,QWORD PTR [rsp+0x18]
    ad83:	xor    rsi,QWORD PTR fs:0x28
    ad8c:	jne    adb9 <fts_children@@Base+0xb39>
    ad8e:	add    rsp,0x58
    ad92:	ret    
    ad93:	nop    DWORD PTR [rax+rax*1+0x0]
    ad98:	lea    rax,[rsp+0x60]
    ad9d:	mov    DWORD PTR [rsp],0x18
    ada4:	mov    ecx,DWORD PTR [rsp+0x38]
    ada8:	mov    QWORD PTR [rsp+0x8],rax
    adad:	lea    rax,[rsp+0x20]
    adb2:	mov    QWORD PTR [rsp+0x10],rax
    adb7:	jmp    ad70 <fts_children@@Base+0xaf0>
    adb9:	call   2180 <__stack_chk_fail@plt>
    adbe:	xchg   ax,ax
    adc0:	push   r13
    adc2:	push   r12
    adc4:	push   rbp
    adc5:	push   rbx
    adc6:	mov    ebx,edi
    adc8:	sub    rsp,0x8
    adcc:	cmp    edi,0x2
    adcf:	ja     adf2 <fts_children@@Base+0xb72>
    add1:	call   b070 <fts_children@@Base+0xdf0>
    add6:	mov    r12d,eax
    add9:	call   2060 <__errno_location@plt>
    adde:	mov    r13d,DWORD PTR [rax]
    ade1:	mov    rbp,rax
    ade4:	mov    edi,ebx
    ade6:	call   2240 <close@plt>
    adeb:	mov    ebx,r12d
    adee:	mov    DWORD PTR [rbp+0x0],r13d
    adf2:	add    rsp,0x8
    adf6:	mov    eax,ebx
    adf8:	pop    rbx
    adf9:	pop    rbp
    adfa:	pop    r12
    adfc:	pop    r13
    adfe:	ret    
    adff:	nop
    ae00:	push   r12
    ae02:	push   rbp
    ae03:	push   rbx
    ae04:	mov    rbx,rdi
    ae07:	call   2340 <fileno@plt>
    ae0c:	test   eax,eax
    ae0e:	mov    rdi,rbx
    ae11:	js     ae67 <fts_children@@Base+0xbe7>
    ae13:	call   23d0 <__freading@plt>
    ae18:	test   eax,eax
    ae1a:	jne    ae48 <fts_children@@Base+0xbc8>
    ae1c:	mov    rdi,rbx
    ae1f:	call   afd0 <fts_children@@Base+0xd50>
    ae24:	test   eax,eax
    ae26:	je     ae64 <fts_children@@Base+0xbe4>
    ae28:	call   2060 <__errno_location@plt>
    ae2d:	mov    r12d,DWORD PTR [rax]
    ae30:	mov    rdi,rbx
    ae33:	mov    rbp,rax
    ae36:	call   2110 <fclose@plt>
    ae3b:	test   r12d,r12d
    ae3e:	jne    ae70 <fts_children@@Base+0xbf0>
    ae40:	pop    rbx
    ae41:	pop    rbp
    ae42:	pop    r12
    ae44:	ret    
    ae45:	nop    DWORD PTR [rax]
    ae48:	mov    rdi,rbx
    ae4b:	call   2340 <fileno@plt>
    ae50:	xor    esi,esi
    ae52:	mov    edx,0x1
    ae57:	mov    edi,eax
    ae59:	call   21f0 <lseek@plt>
    ae5e:	cmp    rax,0xffffffffffffffff
    ae62:	jne    ae1c <fts_children@@Base+0xb9c>
    ae64:	mov    rdi,rbx
    ae67:	pop    rbx
    ae68:	pop    rbp
    ae69:	pop    r12
    ae6b:	jmp    2110 <fclose@plt>
    ae70:	mov    DWORD PTR [rbp+0x0],r12d
    ae74:	mov    eax,0xffffffff
    ae79:	jmp    ae40 <fts_children@@Base+0xbc0>
    ae7b:	nop    DWORD PTR [rax+rax*1+0x0]
    ae80:	push   r12
    ae82:	push   rbp
    ae83:	mov    ebp,edi
    ae85:	push   rbx
    ae86:	sub    rsp,0x50
    ae8a:	mov    rax,QWORD PTR fs:0x28
    ae93:	mov    QWORD PTR [rsp+0x18],rax
    ae98:	xor    eax,eax
    ae9a:	lea    rax,[rsp+0x70]
    ae9f:	cmp    esi,0x406
    aea5:	mov    QWORD PTR [rsp+0x30],rdx
    aeaa:	mov    QWORD PTR [rsp+0x38],rcx
    aeaf:	mov    DWORD PTR [rsp],0x10
    aeb6:	mov    QWORD PTR [rsp+0x8],rax
    aebb:	lea    rax,[rsp+0x20]
    aec0:	mov    QWORD PTR [rsp+0x10],rax
    aec5:	jne    afb5 <fts_children@@Base+0xd35>
    aecb:	cmp    DWORD PTR [rip+0x20436e],0x0        # 20f240 <program_name@@Base+0x160>
    aed2:	mov    r12d,DWORD PTR [rax+0x10]
    aed6:	mov    DWORD PTR [rsp],0x18
    aedd:	mov    edx,r12d
    aee0:	js     af4a <fts_children@@Base+0xcca>
    aee2:	xor    eax,eax
    aee4:	call   20e0 <fcntl@plt>
    aee9:	test   eax,eax
    aeeb:	mov    ebx,eax
    aeed:	js     af20 <fts_children@@Base+0xca0>
    aeef:	mov    DWORD PTR [rip+0x204347],0x1        # 20f240 <program_name@@Base+0x160>
    aef9:	mov    rcx,QWORD PTR [rsp+0x18]
    aefe:	xor    rcx,QWORD PTR fs:0x28
    af07:	mov    eax,ebx
    af09:	jne    afb0 <fts_children@@Base+0xd30>
    af0f:	add    rsp,0x50
    af13:	pop    rbx
    af14:	pop    rbp
    af15:	pop    r12
    af17:	ret    
    af18:	nop    DWORD PTR [rax+rax*1+0x0]
    af20:	call   2060 <__errno_location@plt>
    af25:	cmp    DWORD PTR [rax],0x16
    af28:	jne    aeef <fts_children@@Base+0xc6f>
    af2a:	xor    esi,esi
    af2c:	xor    eax,eax
    af2e:	mov    edx,r12d
    af31:	mov    edi,ebp
    af33:	call   ae80 <fts_children@@Base+0xc00>
    af38:	test   eax,eax
    af3a:	mov    ebx,eax
    af3c:	js     aef9 <fts_children@@Base+0xc79>
    af3e:	mov    DWORD PTR [rip+0x2042f8],0xffffffff        # 20f240 <program_name@@Base+0x160>
    af48:	jmp    af62 <fts_children@@Base+0xce2>
    af4a:	xor    esi,esi
    af4c:	xor    eax,eax
    af4e:	call   ae80 <fts_children@@Base+0xc00>
    af53:	test   eax,eax
    af55:	mov    ebx,eax
    af57:	js     aef9 <fts_children@@Base+0xc79>
    af59:	cmp    DWORD PTR [rip+0x2042e0],0xffffffff        # 20f240 <program_name@@Base+0x160>
    af60:	jne    aef9 <fts_children@@Base+0xc79>
    af62:	xor    eax,eax
    af64:	mov    esi,0x1
    af69:	mov    edi,ebx
    af6b:	call   20e0 <fcntl@plt>
    af70:	test   eax,eax
    af72:	js     af90 <fts_children@@Base+0xd10>
    af74:	or     eax,0x1
    af77:	mov    esi,0x2
    af7c:	mov    edi,ebx
    af7e:	mov    edx,eax
    af80:	xor    eax,eax
    af82:	call   20e0 <fcntl@plt>
    af87:	cmp    eax,0xffffffff
    af8a:	jne    aef9 <fts_children@@Base+0xc79>
    af90:	call   2060 <__errno_location@plt>
    af95:	mov    r12d,DWORD PTR [rax]
    af98:	mov    rbp,rax
    af9b:	mov    edi,ebx
    af9d:	call   2240 <close@plt>
    afa2:	mov    ebx,0xffffffff
    afa7:	mov    DWORD PTR [rbp+0x0],r12d
    afab:	jmp    aef9 <fts_children@@Base+0xc79>
    afb0:	call   2180 <__stack_chk_fail@plt>
    afb5:	mov    rax,QWORD PTR [rsp+0x10]
    afba:	mov    rdx,QWORD PTR [rax+0x10]
    afbe:	xor    eax,eax
    afc0:	call   20e0 <fcntl@plt>
    afc5:	mov    ebx,eax
    afc7:	jmp    aef9 <fts_children@@Base+0xc79>
    afcc:	nop    DWORD PTR [rax+0x0]
    afd0:	test   rdi,rdi
    afd3:	push   rbx
    afd4:	mov    rbx,rdi
    afd7:	je     afea <fts_children@@Base+0xd6a>
    afd9:	call   23d0 <__freading@plt>
    afde:	test   eax,eax
    afe0:	je     afea <fts_children@@Base+0xd6a>
    afe2:	test   DWORD PTR [rbx],0x100
    afe8:	jne    aff8 <fts_children@@Base+0xd78>
    afea:	mov    rdi,rbx
    afed:	pop    rbx
    afee:	jmp    2390 <fflush@plt>
    aff3:	nop    DWORD PTR [rax+rax*1+0x0]
    aff8:	mov    rdi,rbx
    affb:	mov    edx,0x1
    b000:	xor    esi,esi
    b002:	call   b010 <fts_children@@Base+0xd90>
    b007:	mov    rdi,rbx
    b00a:	pop    rbx
    b00b:	jmp    2390 <fflush@plt>
    b010:	mov    rax,QWORD PTR [rdi+0x8]
    b014:	cmp    QWORD PTR [rdi+0x10],rax
    b018:	je     b020 <fts_children@@Base+0xda0>
    b01a:	jmp    2480 <fseeko@plt>
    b01f:	nop
    b020:	mov    rax,QWORD PTR [rdi+0x20]
    b024:	cmp    QWORD PTR [rdi+0x28],rax
    b028:	jne    b01a <fts_children@@Base+0xd9a>
    b02a:	cmp    QWORD PTR [rdi+0x48],0x0
    b02f:	jne    b01a <fts_children@@Base+0xd9a>
    b031:	push   r12
    b033:	push   rbp
    b034:	mov    r12d,edx
    b037:	push   rbx
    b038:	mov    rbp,rsi
    b03b:	mov    rbx,rdi
    b03e:	call   2340 <fileno@plt>
    b043:	mov    edx,r12d
    b046:	mov    rsi,rbp
    b049:	mov    edi,eax
    b04b:	call   21f0 <lseek@plt>
    b050:	cmp    rax,0xffffffffffffffff
    b054:	je     b062 <fts_children@@Base+0xde2>
    b056:	and    DWORD PTR [rbx],0xffffffef
    b059:	mov    QWORD PTR [rbx+0x90],rax
    b060:	xor    eax,eax
    b062:	pop    rbx
    b063:	pop    rbp
    b064:	pop    r12
    b066:	ret    
    b067:	nop    WORD PTR [rax+rax*1+0x0]
    b070:	mov    edx,0x3
    b075:	xor    esi,esi
    b077:	xor    eax,eax
    b079:	jmp    ae80 <fts_children@@Base+0xc00>
    b07e:	xchg   ax,ax
    b080:	push   r15
    b082:	push   r14
    b084:	mov    r15d,edi
    b087:	push   r13
    b089:	push   r12
    b08b:	lea    r12,[rip+0x20395e]        # 20e9f0 <version_etc_copyright@@Base+0x2029d0>
    b092:	push   rbp
    b093:	lea    rbp,[rip+0x20395e]        # 20e9f8 <version_etc_copyright@@Base+0x2029d8>
    b09a:	push   rbx
    b09b:	mov    r14,rsi
    b09e:	mov    r13,rdx
    b0a1:	sub    rbp,r12
    b0a4:	sub    rsp,0x8
    b0a8:	sar    rbp,0x3
    b0ac:	call   1ff8 <_init@@Base>
    b0b1:	test   rbp,rbp
    b0b4:	je     b0d6 <fts_children@@Base+0xe56>
    b0b6:	xor    ebx,ebx
    b0b8:	nop    DWORD PTR [rax+rax*1+0x0]
    b0c0:	mov    rdx,r13
    b0c3:	mov    rsi,r14
    b0c6:	mov    edi,r15d
    b0c9:	call   QWORD PTR [r12+rbx*8]
    b0cd:	add    rbx,0x1
    b0d1:	cmp    rbp,rbx
    b0d4:	jne    b0c0 <fts_children@@Base+0xe40>
    b0d6:	add    rsp,0x8
    b0da:	pop    rbx
    b0db:	pop    rbp
    b0dc:	pop    r12
    b0de:	pop    r13
    b0e0:	pop    r14
    b0e2:	pop    r15
    b0e4:	ret    
    b0e5:	nop
    b0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b0f0:	repz ret 
    b0f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b0fc:	nop    DWORD PTR [rax+0x0]
    b100:	lea    rax,[rip+0x203f01]        # 20f008 <quoting_style_args@@Base+0x568>
    b107:	test   rax,rax
    b10a:	je     b120 <fts_children@@Base+0xea0>
    b10c:	mov    rdx,QWORD PTR [rax]
    b10f:	xor    esi,esi
    b111:	jmp    24c0 <__cxa_atexit@plt>
    b116:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b120:	xor    edx,edx
    b122:	xor    esi,esi
    b124:	jmp    24c0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000b12c <_fini@@Base>:
    b12c:	sub    rsp,0x8
    b130:	add    rsp,0x8
    b134:	ret    
