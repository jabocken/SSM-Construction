
/bin/cp:     file format elf64-x86-64


Disassembly of section .init:

00000000000034a8 <_init@@Base>:
    34a8:	sub    rsp,0x8
    34ac:	mov    rax,QWORD PTR [rip+0x21eb35]        # 221fe8 <__gmon_start__>
    34b3:	test   rax,rax
    34b6:	je     34ba <_init@@Base+0x12>
    34b8:	call   rax
    34ba:	add    rsp,0x8
    34be:	ret    

Disassembly of section .plt:

00000000000034c0 <__uflow@plt-0x10>:
    34c0:	push   QWORD PTR [rip+0x21e65a]        # 221b20 <quoting_style_args@@Base+0x2a0>
    34c6:	jmp    QWORD PTR [rip+0x21e65c]        # 221b28 <quoting_style_args@@Base+0x2a8>
    34cc:	nop    DWORD PTR [rax+0x0]

00000000000034d0 <__uflow@plt>:
    34d0:	jmp    QWORD PTR [rip+0x21e65a]        # 221b30 <__uflow@GLIBC_2.2.5>
    34d6:	push   0x0
    34db:	jmp    34c0 <_init@@Base+0x18>

00000000000034e0 <getenv@plt>:
    34e0:	jmp    QWORD PTR [rip+0x21e652]        # 221b38 <getenv@GLIBC_2.2.5>
    34e6:	push   0x1
    34eb:	jmp    34c0 <_init@@Base+0x18>

00000000000034f0 <__snprintf_chk@plt>:
    34f0:	jmp    QWORD PTR [rip+0x21e64a]        # 221b40 <__snprintf_chk@GLIBC_2.3.4>
    34f6:	push   0x2
    34fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003500 <utimensat@plt>:
    3500:	jmp    QWORD PTR [rip+0x21e642]        # 221b48 <utimensat@GLIBC_2.6>
    3506:	push   0x3
    350b:	jmp    34c0 <_init@@Base+0x18>

0000000000003510 <acl_set_fd@plt>:
    3510:	jmp    QWORD PTR [rip+0x21e63a]        # 221b50 <acl_set_fd@ACL_1.0>
    3516:	push   0x4
    351b:	jmp    34c0 <_init@@Base+0x18>

0000000000003520 <is_selinux_enabled@plt>:
    3520:	jmp    QWORD PTR [rip+0x21e632]        # 221b58 <is_selinux_enabled>
    3526:	push   0x5
    352b:	jmp    34c0 <_init@@Base+0x18>

0000000000003530 <abort@plt>:
    3530:	jmp    QWORD PTR [rip+0x21e62a]        # 221b60 <abort@GLIBC_2.2.5>
    3536:	push   0x6
    353b:	jmp    34c0 <_init@@Base+0x18>

0000000000003540 <__errno_location@plt>:
    3540:	jmp    QWORD PTR [rip+0x21e622]        # 221b68 <__errno_location@GLIBC_2.2.5>
    3546:	push   0x7
    354b:	jmp    34c0 <_init@@Base+0x18>

0000000000003550 <error_at_line@plt>:
    3550:	jmp    QWORD PTR [rip+0x21e61a]        # 221b70 <error_at_line@GLIBC_2.2.5>
    3556:	push   0x8
    355b:	jmp    34c0 <_init@@Base+0x18>

0000000000003560 <unlink@plt>:
    3560:	jmp    QWORD PTR [rip+0x21e612]        # 221b78 <unlink@GLIBC_2.2.5>
    3566:	push   0x9
    356b:	jmp    34c0 <_init@@Base+0x18>

0000000000003570 <acl_entries@plt>:
    3570:	jmp    QWORD PTR [rip+0x21e60a]        # 221b80 <acl_entries@ACL_1.0>
    3576:	push   0xa
    357b:	jmp    34c0 <_init@@Base+0x18>

0000000000003580 <strncmp@plt>:
    3580:	jmp    QWORD PTR [rip+0x21e602]        # 221b88 <strncmp@GLIBC_2.2.5>
    3586:	push   0xb
    358b:	jmp    34c0 <_init@@Base+0x18>

0000000000003590 <_exit@plt>:
    3590:	jmp    QWORD PTR [rip+0x21e5fa]        # 221b90 <_exit@GLIBC_2.2.5>
    3596:	push   0xc
    359b:	jmp    34c0 <_init@@Base+0x18>

00000000000035a0 <strcpy@plt>:
    35a0:	jmp    QWORD PTR [rip+0x21e5f2]        # 221b98 <strcpy@GLIBC_2.2.5>
    35a6:	push   0xd
    35ab:	jmp    34c0 <_init@@Base+0x18>

00000000000035b0 <__fpending@plt>:
    35b0:	jmp    QWORD PTR [rip+0x21e5ea]        # 221ba0 <__fpending@GLIBC_2.2.5>
    35b6:	push   0xe
    35bb:	jmp    34c0 <_init@@Base+0x18>

00000000000035c0 <context_type_get@plt>:
    35c0:	jmp    QWORD PTR [rip+0x21e5e2]        # 221ba8 <context_type_get>
    35c6:	push   0xf
    35cb:	jmp    34c0 <_init@@Base+0x18>

00000000000035d0 <__read_chk@plt>:
    35d0:	jmp    QWORD PTR [rip+0x21e5da]        # 221bb0 <__read_chk@GLIBC_2.4>
    35d6:	push   0x10
    35db:	jmp    34c0 <_init@@Base+0x18>

00000000000035e0 <mkdir@plt>:
    35e0:	jmp    QWORD PTR [rip+0x21e5d2]        # 221bb8 <mkdir@GLIBC_2.2.5>
    35e6:	push   0x11
    35eb:	jmp    34c0 <_init@@Base+0x18>

00000000000035f0 <unlinkat@plt>:
    35f0:	jmp    QWORD PTR [rip+0x21e5ca]        # 221bc0 <unlinkat@GLIBC_2.4>
    35f6:	push   0x12
    35fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003600 <lsetfilecon@plt>:
    3600:	jmp    QWORD PTR [rip+0x21e5c2]        # 221bc8 <lsetfilecon>
    3606:	push   0x13
    360b:	jmp    34c0 <_init@@Base+0x18>

0000000000003610 <qsort@plt>:
    3610:	jmp    QWORD PTR [rip+0x21e5ba]        # 221bd0 <qsort@GLIBC_2.2.5>
    3616:	push   0x14
    361b:	jmp    34c0 <_init@@Base+0x18>

0000000000003620 <readlink@plt>:
    3620:	jmp    QWORD PTR [rip+0x21e5b2]        # 221bd8 <readlink@GLIBC_2.2.5>
    3626:	push   0x15
    362b:	jmp    34c0 <_init@@Base+0x18>

0000000000003630 <fcntl@plt>:
    3630:	jmp    QWORD PTR [rip+0x21e5aa]        # 221be0 <fcntl@GLIBC_2.2.5>
    3636:	push   0x16
    363b:	jmp    34c0 <_init@@Base+0x18>

0000000000003640 <clock_gettime@plt>:
    3640:	jmp    QWORD PTR [rip+0x21e5a2]        # 221be8 <clock_gettime@GLIBC_2.17>
    3646:	push   0x17
    364b:	jmp    34c0 <_init@@Base+0x18>

0000000000003650 <write@plt>:
    3650:	jmp    QWORD PTR [rip+0x21e59a]        # 221bf0 <write@GLIBC_2.2.5>
    3656:	push   0x18
    365b:	jmp    34c0 <_init@@Base+0x18>

0000000000003660 <getpid@plt>:
    3660:	jmp    QWORD PTR [rip+0x21e592]        # 221bf8 <getpid@GLIBC_2.2.5>
    3666:	push   0x19
    366b:	jmp    34c0 <_init@@Base+0x18>

0000000000003670 <fread_unlocked@plt>:
    3670:	jmp    QWORD PTR [rip+0x21e58a]        # 221c00 <fread_unlocked@GLIBC_2.2.5>
    3676:	push   0x1a
    367b:	jmp    34c0 <_init@@Base+0x18>

0000000000003680 <textdomain@plt>:
    3680:	jmp    QWORD PTR [rip+0x21e582]        # 221c08 <textdomain@GLIBC_2.2.5>
    3686:	push   0x1b
    368b:	jmp    34c0 <_init@@Base+0x18>

0000000000003690 <pathconf@plt>:
    3690:	jmp    QWORD PTR [rip+0x21e57a]        # 221c10 <pathconf@GLIBC_2.2.5>
    3696:	push   0x1c
    369b:	jmp    34c0 <_init@@Base+0x18>

00000000000036a0 <context_new@plt>:
    36a0:	jmp    QWORD PTR [rip+0x21e572]        # 221c18 <context_new>
    36a6:	push   0x1d
    36ab:	jmp    34c0 <_init@@Base+0x18>

00000000000036b0 <fclose@plt>:
    36b0:	jmp    QWORD PTR [rip+0x21e56a]        # 221c20 <fclose@GLIBC_2.2.5>
    36b6:	push   0x1e
    36bb:	jmp    34c0 <_init@@Base+0x18>

00000000000036c0 <opendir@plt>:
    36c0:	jmp    QWORD PTR [rip+0x21e562]        # 221c28 <opendir@GLIBC_2.2.5>
    36c6:	push   0x1f
    36cb:	jmp    34c0 <_init@@Base+0x18>

00000000000036d0 <bindtextdomain@plt>:
    36d0:	jmp    QWORD PTR [rip+0x21e55a]        # 221c30 <bindtextdomain@GLIBC_2.2.5>
    36d6:	push   0x20
    36db:	jmp    34c0 <_init@@Base+0x18>

00000000000036e0 <stpcpy@plt>:
    36e0:	jmp    QWORD PTR [rip+0x21e552]        # 221c38 <stpcpy@GLIBC_2.2.5>
    36e6:	push   0x21
    36eb:	jmp    34c0 <_init@@Base+0x18>

00000000000036f0 <rmdir@plt>:
    36f0:	jmp    QWORD PTR [rip+0x21e54a]        # 221c40 <rmdir@GLIBC_2.2.5>
    36f6:	push   0x22
    36fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003700 <dcgettext@plt>:
    3700:	jmp    QWORD PTR [rip+0x21e542]        # 221c48 <dcgettext@GLIBC_2.2.5>
    3706:	push   0x23
    370b:	jmp    34c0 <_init@@Base+0x18>

0000000000003710 <__ctype_get_mb_cur_max@plt>:
    3710:	jmp    QWORD PTR [rip+0x21e53a]        # 221c50 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    3716:	push   0x24
    371b:	jmp    34c0 <_init@@Base+0x18>

0000000000003720 <strlen@plt>:
    3720:	jmp    QWORD PTR [rip+0x21e532]        # 221c58 <strlen@GLIBC_2.2.5>
    3726:	push   0x25
    372b:	jmp    34c0 <_init@@Base+0x18>

0000000000003730 <acl_delete_def_file@plt>:
    3730:	jmp    QWORD PTR [rip+0x21e52a]        # 221c60 <acl_delete_def_file@ACL_1.0>
    3736:	push   0x26
    373b:	jmp    34c0 <_init@@Base+0x18>

0000000000003740 <__lxstat@plt>:
    3740:	jmp    QWORD PTR [rip+0x21e522]        # 221c68 <__lxstat@GLIBC_2.2.5>
    3746:	push   0x27
    374b:	jmp    34c0 <_init@@Base+0x18>

0000000000003750 <openat@plt>:
    3750:	jmp    QWORD PTR [rip+0x21e51a]        # 221c70 <openat@GLIBC_2.4>
    3756:	push   0x28
    375b:	jmp    34c0 <_init@@Base+0x18>

0000000000003760 <__stack_chk_fail@plt>:
    3760:	jmp    QWORD PTR [rip+0x21e512]        # 221c78 <__stack_chk_fail@GLIBC_2.4>
    3766:	push   0x29
    376b:	jmp    34c0 <_init@@Base+0x18>

0000000000003770 <getuid@plt>:
    3770:	jmp    QWORD PTR [rip+0x21e50a]        # 221c80 <getuid@GLIBC_2.2.5>
    3776:	push   0x2a
    377b:	jmp    34c0 <_init@@Base+0x18>

0000000000003780 <getopt_long@plt>:
    3780:	jmp    QWORD PTR [rip+0x21e502]        # 221c88 <getopt_long@GLIBC_2.2.5>
    3786:	push   0x2b
    378b:	jmp    34c0 <_init@@Base+0x18>

0000000000003790 <mbrtowc@plt>:
    3790:	jmp    QWORD PTR [rip+0x21e4fa]        # 221c90 <mbrtowc@GLIBC_2.2.5>
    3796:	push   0x2c
    379b:	jmp    34c0 <_init@@Base+0x18>

00000000000037a0 <context_type_set@plt>:
    37a0:	jmp    QWORD PTR [rip+0x21e4f2]        # 221c98 <context_type_set>
    37a6:	push   0x2d
    37ab:	jmp    34c0 <_init@@Base+0x18>

00000000000037b0 <strchr@plt>:
    37b0:	jmp    QWORD PTR [rip+0x21e4ea]        # 221ca0 <strchr@GLIBC_2.2.5>
    37b6:	push   0x2e
    37bb:	jmp    34c0 <_init@@Base+0x18>

00000000000037c0 <__fxstatat@plt>:
    37c0:	jmp    QWORD PTR [rip+0x21e4e2]        # 221ca8 <__fxstatat@GLIBC_2.4>
    37c6:	push   0x2f
    37cb:	jmp    34c0 <_init@@Base+0x18>

00000000000037d0 <__overflow@plt>:
    37d0:	jmp    QWORD PTR [rip+0x21e4da]        # 221cb0 <__overflow@GLIBC_2.2.5>
    37d6:	push   0x30
    37db:	jmp    34c0 <_init@@Base+0x18>

00000000000037e0 <strrchr@plt>:
    37e0:	jmp    QWORD PTR [rip+0x21e4d2]        # 221cb8 <strrchr@GLIBC_2.2.5>
    37e6:	push   0x31
    37eb:	jmp    34c0 <_init@@Base+0x18>

00000000000037f0 <fgetfilecon@plt>:
    37f0:	jmp    QWORD PTR [rip+0x21e4ca]        # 221cc0 <fgetfilecon>
    37f6:	push   0x32
    37fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003800 <ftruncate@plt>:
    3800:	jmp    QWORD PTR [rip+0x21e4c2]        # 221cc8 <ftruncate@GLIBC_2.2.5>
    3806:	push   0x33
    380b:	jmp    34c0 <_init@@Base+0x18>

0000000000003810 <lseek@plt>:
    3810:	jmp    QWORD PTR [rip+0x21e4ba]        # 221cd0 <lseek@GLIBC_2.2.5>
    3816:	push   0x34
    381b:	jmp    34c0 <_init@@Base+0x18>

0000000000003820 <gettimeofday@plt>:
    3820:	jmp    QWORD PTR [rip+0x21e4b2]        # 221cd8 <gettimeofday@GLIBC_2.2.5>
    3826:	push   0x35
    382b:	jmp    34c0 <_init@@Base+0x18>

0000000000003830 <__assert_fail@plt>:
    3830:	jmp    QWORD PTR [rip+0x21e4aa]        # 221ce0 <__assert_fail@GLIBC_2.2.5>
    3836:	push   0x36
    383b:	jmp    34c0 <_init@@Base+0x18>

0000000000003840 <memset@plt>:
    3840:	jmp    QWORD PTR [rip+0x21e4a2]        # 221ce8 <memset@GLIBC_2.2.5>
    3846:	push   0x37
    384b:	jmp    34c0 <_init@@Base+0x18>

0000000000003850 <geteuid@plt>:
    3850:	jmp    QWORD PTR [rip+0x21e49a]        # 221cf0 <geteuid@GLIBC_2.2.5>
    3856:	push   0x38
    385b:	jmp    34c0 <_init@@Base+0x18>

0000000000003860 <acl_get_tag_type@plt>:
    3860:	jmp    QWORD PTR [rip+0x21e492]        # 221cf8 <acl_get_tag_type@ACL_1.0>
    3866:	push   0x39
    386b:	jmp    34c0 <_init@@Base+0x18>

0000000000003870 <fscanf@plt>:
    3870:	jmp    QWORD PTR [rip+0x21e48a]        # 221d00 <fscanf@GLIBC_2.2.5>
    3876:	push   0x3a
    387b:	jmp    34c0 <_init@@Base+0x18>

0000000000003880 <ioctl@plt>:
    3880:	jmp    QWORD PTR [rip+0x21e482]        # 221d08 <ioctl@GLIBC_2.2.5>
    3886:	push   0x3b
    388b:	jmp    34c0 <_init@@Base+0x18>

0000000000003890 <getcwd@plt>:
    3890:	jmp    QWORD PTR [rip+0x21e47a]        # 221d10 <getcwd@GLIBC_2.2.5>
    3896:	push   0x3c
    389b:	jmp    34c0 <_init@@Base+0x18>

00000000000038a0 <canonicalize_file_name@plt>:
    38a0:	jmp    QWORD PTR [rip+0x21e472]        # 221d18 <canonicalize_file_name@GLIBC_2.2.5>
    38a6:	push   0x3d
    38ab:	jmp    34c0 <_init@@Base+0x18>

00000000000038b0 <close@plt>:
    38b0:	jmp    QWORD PTR [rip+0x21e46a]        # 221d20 <close@GLIBC_2.2.5>
    38b6:	push   0x3e
    38bb:	jmp    34c0 <_init@@Base+0x18>

00000000000038c0 <rewinddir@plt>:
    38c0:	jmp    QWORD PTR [rip+0x21e462]        # 221d28 <rewinddir@GLIBC_2.2.5>
    38c6:	push   0x3f
    38cb:	jmp    34c0 <_init@@Base+0x18>

00000000000038d0 <strspn@plt>:
    38d0:	jmp    QWORD PTR [rip+0x21e45a]        # 221d30 <strspn@GLIBC_2.2.5>
    38d6:	push   0x40
    38db:	jmp    34c0 <_init@@Base+0x18>

00000000000038e0 <closedir@plt>:
    38e0:	jmp    QWORD PTR [rip+0x21e452]        # 221d38 <closedir@GLIBC_2.2.5>
    38e6:	push   0x41
    38eb:	jmp    34c0 <_init@@Base+0x18>

00000000000038f0 <matchpathcon@plt>:
    38f0:	jmp    QWORD PTR [rip+0x21e44a]        # 221d40 <matchpathcon>
    38f6:	push   0x42
    38fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003900 <posix_fadvise@plt>:
    3900:	jmp    QWORD PTR [rip+0x21e442]        # 221d48 <posix_fadvise@GLIBC_2.2.5>
    3906:	push   0x43
    390b:	jmp    34c0 <_init@@Base+0x18>

0000000000003910 <getcon@plt>:
    3910:	jmp    QWORD PTR [rip+0x21e43a]        # 221d50 <getcon>
    3916:	push   0x44
    391b:	jmp    34c0 <_init@@Base+0x18>

0000000000003920 <read@plt>:
    3920:	jmp    QWORD PTR [rip+0x21e432]        # 221d58 <read@GLIBC_2.2.5>
    3926:	push   0x45
    392b:	jmp    34c0 <_init@@Base+0x18>

0000000000003930 <memcmp@plt>:
    3930:	jmp    QWORD PTR [rip+0x21e42a]        # 221d60 <memcmp@GLIBC_2.2.5>
    3936:	push   0x46
    393b:	jmp    34c0 <_init@@Base+0x18>

0000000000003940 <fallocate@plt>:
    3940:	jmp    QWORD PTR [rip+0x21e422]        # 221d68 <fallocate@GLIBC_2.10>
    3946:	push   0x47
    394b:	jmp    34c0 <_init@@Base+0x18>

0000000000003950 <fputs_unlocked@plt>:
    3950:	jmp    QWORD PTR [rip+0x21e41a]        # 221d70 <fputs_unlocked@GLIBC_2.2.5>
    3956:	push   0x48
    395b:	jmp    34c0 <_init@@Base+0x18>

0000000000003960 <utimes@plt>:
    3960:	jmp    QWORD PTR [rip+0x21e412]        # 221d78 <utimes@GLIBC_2.2.5>
    3966:	push   0x49
    396b:	jmp    34c0 <_init@@Base+0x18>

0000000000003970 <calloc@plt>:
    3970:	jmp    QWORD PTR [rip+0x21e40a]        # 221d80 <calloc@GLIBC_2.2.5>
    3976:	push   0x4a
    397b:	jmp    34c0 <_init@@Base+0x18>

0000000000003980 <lgetfilecon@plt>:
    3980:	jmp    QWORD PTR [rip+0x21e402]        # 221d88 <lgetfilecon>
    3986:	push   0x4b
    398b:	jmp    34c0 <_init@@Base+0x18>

0000000000003990 <acl_set_file@plt>:
    3990:	jmp    QWORD PTR [rip+0x21e3fa]        # 221d90 <acl_set_file@ACL_1.0>
    3996:	push   0x4c
    399b:	jmp    34c0 <_init@@Base+0x18>

00000000000039a0 <__getdelim@plt>:
    39a0:	jmp    QWORD PTR [rip+0x21e3f2]        # 221d98 <__getdelim@GLIBC_2.2.5>
    39a6:	push   0x4d
    39ab:	jmp    34c0 <_init@@Base+0x18>

00000000000039b0 <acl_from_mode@plt>:
    39b0:	jmp    QWORD PTR [rip+0x21e3ea]        # 221da0 <acl_from_mode@ACL_1.0>
    39b6:	push   0x4e
    39bb:	jmp    34c0 <_init@@Base+0x18>

00000000000039c0 <strcmp@plt>:
    39c0:	jmp    QWORD PTR [rip+0x21e3e2]        # 221da8 <strcmp@GLIBC_2.2.5>
    39c6:	push   0x4f
    39cb:	jmp    34c0 <_init@@Base+0x18>

00000000000039d0 <acl_get_fd@plt>:
    39d0:	jmp    QWORD PTR [rip+0x21e3da]        # 221db0 <acl_get_fd@ACL_1.0>
    39d6:	push   0x50
    39db:	jmp    34c0 <_init@@Base+0x18>

00000000000039e0 <dirfd@plt>:
    39e0:	jmp    QWORD PTR [rip+0x21e3d2]        # 221db8 <dirfd@GLIBC_2.2.5>
    39e6:	push   0x51
    39eb:	jmp    34c0 <_init@@Base+0x18>

00000000000039f0 <rpmatch@plt>:
    39f0:	jmp    QWORD PTR [rip+0x21e3ca]        # 221dc0 <rpmatch@GLIBC_2.2.5>
    39f6:	push   0x52
    39fb:	jmp    34c0 <_init@@Base+0x18>

0000000000003a00 <syscall@plt>:
    3a00:	jmp    QWORD PTR [rip+0x21e3c2]        # 221dc8 <syscall@GLIBC_2.2.5>
    3a06:	push   0x53
    3a0b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a10 <mkfifo@plt>:
    3a10:	jmp    QWORD PTR [rip+0x21e3ba]        # 221dd0 <mkfifo@GLIBC_2.2.5>
    3a16:	push   0x54
    3a1b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a20 <umask@plt>:
    3a20:	jmp    QWORD PTR [rip+0x21e3b2]        # 221dd8 <umask@GLIBC_2.2.5>
    3a26:	push   0x55
    3a2b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a30 <context_free@plt>:
    3a30:	jmp    QWORD PTR [rip+0x21e3aa]        # 221de0 <context_free>
    3a36:	push   0x56
    3a3b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a40 <memcpy@plt>:
    3a40:	jmp    QWORD PTR [rip+0x21e3a2]        # 221de8 <memcpy@GLIBC_2.14>
    3a46:	push   0x57
    3a4b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a50 <getfilecon@plt>:
    3a50:	jmp    QWORD PTR [rip+0x21e39a]        # 221df0 <getfilecon>
    3a56:	push   0x58
    3a5b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a60 <__xmknod@plt>:
    3a60:	jmp    QWORD PTR [rip+0x21e392]        # 221df8 <__xmknod@GLIBC_2.2.5>
    3a66:	push   0x59
    3a6b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a70 <fileno@plt>:
    3a70:	jmp    QWORD PTR [rip+0x21e38a]        # 221e00 <fileno@GLIBC_2.2.5>
    3a76:	push   0x5a
    3a7b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a80 <getgid@plt>:
    3a80:	jmp    QWORD PTR [rip+0x21e382]        # 221e08 <getgid@GLIBC_2.2.5>
    3a86:	push   0x5b
    3a8b:	jmp    34c0 <_init@@Base+0x18>

0000000000003a90 <__xstat@plt>:
    3a90:	jmp    QWORD PTR [rip+0x21e37a]        # 221e10 <__xstat@GLIBC_2.2.5>
    3a96:	push   0x5c
    3a9b:	jmp    34c0 <_init@@Base+0x18>

0000000000003aa0 <readdir@plt>:
    3aa0:	jmp    QWORD PTR [rip+0x21e372]        # 221e18 <readdir@GLIBC_2.2.5>
    3aa6:	push   0x5d
    3aab:	jmp    34c0 <_init@@Base+0x18>

0000000000003ab0 <setfscreatecon@plt>:
    3ab0:	jmp    QWORD PTR [rip+0x21e36a]        # 221e20 <setfscreatecon>
    3ab6:	push   0x5e
    3abb:	jmp    34c0 <_init@@Base+0x18>

0000000000003ac0 <malloc@plt>:
    3ac0:	jmp    QWORD PTR [rip+0x21e362]        # 221e28 <malloc@GLIBC_2.2.5>
    3ac6:	push   0x5f
    3acb:	jmp    34c0 <_init@@Base+0x18>

0000000000003ad0 <fflush@plt>:
    3ad0:	jmp    QWORD PTR [rip+0x21e35a]        # 221e30 <fflush@GLIBC_2.2.5>
    3ad6:	push   0x60
    3adb:	jmp    34c0 <_init@@Base+0x18>

0000000000003ae0 <acl_get_file@plt>:
    3ae0:	jmp    QWORD PTR [rip+0x21e352]        # 221e38 <acl_get_file@ACL_1.0>
    3ae6:	push   0x61
    3aeb:	jmp    34c0 <_init@@Base+0x18>

0000000000003af0 <nl_langinfo@plt>:
    3af0:	jmp    QWORD PTR [rip+0x21e34a]        # 221e40 <nl_langinfo@GLIBC_2.2.5>
    3af6:	push   0x62
    3afb:	jmp    34c0 <_init@@Base+0x18>

0000000000003b00 <ungetc@plt>:
    3b00:	jmp    QWORD PTR [rip+0x21e342]        # 221e48 <ungetc@GLIBC_2.2.5>
    3b06:	push   0x63
    3b0b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b10 <__fxstat@plt>:
    3b10:	jmp    QWORD PTR [rip+0x21e33a]        # 221e50 <__fxstat@GLIBC_2.2.5>
    3b16:	push   0x64
    3b1b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b20 <lchown@plt>:
    3b20:	jmp    QWORD PTR [rip+0x21e332]        # 221e58 <lchown@GLIBC_2.2.5>
    3b26:	push   0x65
    3b2b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b30 <attr_copy_fd@plt>:
    3b30:	jmp    QWORD PTR [rip+0x21e32a]        # 221e60 <attr_copy_fd@ATTR_1.1>
    3b36:	push   0x66
    3b3b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b40 <__freading@plt>:
    3b40:	jmp    QWORD PTR [rip+0x21e322]        # 221e68 <__freading@GLIBC_2.2.5>
    3b46:	push   0x67
    3b4b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b50 <fchdir@plt>:
    3b50:	jmp    QWORD PTR [rip+0x21e31a]        # 221e70 <fchdir@GLIBC_2.2.5>
    3b56:	push   0x68
    3b5b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b60 <acl_get_entry@plt>:
    3b60:	jmp    QWORD PTR [rip+0x21e312]        # 221e78 <acl_get_entry@ACL_1.0>
    3b66:	push   0x69
    3b6b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b70 <realloc@plt>:
    3b70:	jmp    QWORD PTR [rip+0x21e30a]        # 221e80 <realloc@GLIBC_2.2.5>
    3b76:	push   0x6a
    3b7b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b80 <fdopen@plt>:
    3b80:	jmp    QWORD PTR [rip+0x21e302]        # 221e88 <fdopen@GLIBC_2.2.5>
    3b86:	push   0x6b
    3b8b:	jmp    34c0 <_init@@Base+0x18>

0000000000003b90 <linkat@plt>:
    3b90:	jmp    QWORD PTR [rip+0x21e2fa]        # 221e90 <linkat@GLIBC_2.4>
    3b96:	push   0x6c
    3b9b:	jmp    34c0 <_init@@Base+0x18>

0000000000003ba0 <setlocale@plt>:
    3ba0:	jmp    QWORD PTR [rip+0x21e2f2]        # 221e98 <setlocale@GLIBC_2.2.5>
    3ba6:	push   0x6d
    3bab:	jmp    34c0 <_init@@Base+0x18>

0000000000003bb0 <__printf_chk@plt>:
    3bb0:	jmp    QWORD PTR [rip+0x21e2ea]        # 221ea0 <__printf_chk@GLIBC_2.3.4>
    3bb6:	push   0x6e
    3bbb:	jmp    34c0 <_init@@Base+0x18>

0000000000003bc0 <fchmod@plt>:
    3bc0:	jmp    QWORD PTR [rip+0x21e2e2]        # 221ea8 <fchmod@GLIBC_2.2.5>
    3bc6:	push   0x6f
    3bcb:	jmp    34c0 <_init@@Base+0x18>

0000000000003bd0 <setvbuf@plt>:
    3bd0:	jmp    QWORD PTR [rip+0x21e2da]        # 221eb0 <setvbuf@GLIBC_2.2.5>
    3bd6:	push   0x70
    3bdb:	jmp    34c0 <_init@@Base+0x18>

0000000000003be0 <chmod@plt>:
    3be0:	jmp    QWORD PTR [rip+0x21e2d2]        # 221eb8 <chmod@GLIBC_2.2.5>
    3be6:	push   0x71
    3beb:	jmp    34c0 <_init@@Base+0x18>

0000000000003bf0 <mempcpy@plt>:
    3bf0:	jmp    QWORD PTR [rip+0x21e2ca]        # 221ec0 <mempcpy@GLIBC_2.2.5>
    3bf6:	push   0x72
    3bfb:	jmp    34c0 <_init@@Base+0x18>

0000000000003c00 <memmove@plt>:
    3c00:	jmp    QWORD PTR [rip+0x21e2c2]        # 221ec8 <memmove@GLIBC_2.2.5>
    3c06:	push   0x73
    3c0b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c10 <attr_copy_file@plt>:
    3c10:	jmp    QWORD PTR [rip+0x21e2ba]        # 221ed0 <attr_copy_file@ATTR_1.1>
    3c16:	push   0x74
    3c1b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c20 <error@plt>:
    3c20:	jmp    QWORD PTR [rip+0x21e2b2]        # 221ed8 <error@GLIBC_2.2.5>
    3c26:	push   0x75
    3c2b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c30 <attr_copy_check_permissions@plt>:
    3c30:	jmp    QWORD PTR [rip+0x21e2aa]        # 221ee0 <attr_copy_check_permissions@ATTR_1.1>
    3c36:	push   0x76
    3c3b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c40 <fsetfilecon@plt>:
    3c40:	jmp    QWORD PTR [rip+0x21e2a2]        # 221ee8 <fsetfilecon>
    3c46:	push   0x77
    3c4b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c50 <__explicit_bzero_chk@plt>:
    3c50:	jmp    QWORD PTR [rip+0x21e29a]        # 221ef0 <__explicit_bzero_chk@GLIBC_2.25>
    3c56:	push   0x78
    3c5b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c60 <open@plt>:
    3c60:	jmp    QWORD PTR [rip+0x21e292]        # 221ef8 <open@GLIBC_2.2.5>
    3c66:	push   0x79
    3c6b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c70 <fseeko@plt>:
    3c70:	jmp    QWORD PTR [rip+0x21e28a]        # 221f00 <fseeko@GLIBC_2.2.5>
    3c76:	push   0x7a
    3c7b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c80 <fchown@plt>:
    3c80:	jmp    QWORD PTR [rip+0x21e282]        # 221f08 <fchown@GLIBC_2.2.5>
    3c86:	push   0x7b
    3c8b:	jmp    34c0 <_init@@Base+0x18>

0000000000003c90 <fopen@plt>:
    3c90:	jmp    QWORD PTR [rip+0x21e27a]        # 221f10 <fopen@GLIBC_2.2.5>
    3c96:	push   0x7c
    3c9b:	jmp    34c0 <_init@@Base+0x18>

0000000000003ca0 <rename@plt>:
    3ca0:	jmp    QWORD PTR [rip+0x21e272]        # 221f18 <rename@GLIBC_2.2.5>
    3ca6:	push   0x7d
    3cab:	jmp    34c0 <_init@@Base+0x18>

0000000000003cb0 <fdopendir@plt>:
    3cb0:	jmp    QWORD PTR [rip+0x21e26a]        # 221f20 <fdopendir@GLIBC_2.4>
    3cb6:	push   0x7e
    3cbb:	jmp    34c0 <_init@@Base+0x18>

0000000000003cc0 <futimens@plt>:
    3cc0:	jmp    QWORD PTR [rip+0x21e262]        # 221f28 <futimens@GLIBC_2.6>
    3cc6:	push   0x7f
    3ccb:	jmp    34c0 <_init@@Base+0x18>

0000000000003cd0 <euidaccess@plt>:
    3cd0:	jmp    QWORD PTR [rip+0x21e25a]        # 221f30 <euidaccess@GLIBC_2.2.5>
    3cd6:	push   0x80
    3cdb:	jmp    34c0 <_init@@Base+0x18>

0000000000003ce0 <fstatfs@plt>:
    3ce0:	jmp    QWORD PTR [rip+0x21e252]        # 221f38 <fstatfs@GLIBC_2.2.5>
    3ce6:	push   0x81
    3ceb:	jmp    34c0 <_init@@Base+0x18>

0000000000003cf0 <security_compute_create@plt>:
    3cf0:	jmp    QWORD PTR [rip+0x21e24a]        # 221f40 <security_compute_create>
    3cf6:	push   0x82
    3cfb:	jmp    34c0 <_init@@Base+0x18>

0000000000003d00 <__cxa_atexit@plt>:
    3d00:	jmp    QWORD PTR [rip+0x21e242]        # 221f48 <__cxa_atexit@GLIBC_2.2.5>
    3d06:	push   0x83
    3d0b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d10 <renameat@plt>:
    3d10:	jmp    QWORD PTR [rip+0x21e23a]        # 221f50 <renameat@GLIBC_2.4>
    3d16:	push   0x84
    3d1b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d20 <freecon@plt>:
    3d20:	jmp    QWORD PTR [rip+0x21e232]        # 221f58 <freecon>
    3d26:	push   0x85
    3d2b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d30 <getpagesize@plt>:
    3d30:	jmp    QWORD PTR [rip+0x21e22a]        # 221f60 <getpagesize@GLIBC_2.2.5>
    3d36:	push   0x86
    3d3b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d40 <getppid@plt>:
    3d40:	jmp    QWORD PTR [rip+0x21e222]        # 221f68 <getppid@GLIBC_2.2.5>
    3d46:	push   0x87
    3d4b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d50 <exit@plt>:
    3d50:	jmp    QWORD PTR [rip+0x21e21a]        # 221f70 <exit@GLIBC_2.2.5>
    3d56:	push   0x88
    3d5b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d60 <fwrite@plt>:
    3d60:	jmp    QWORD PTR [rip+0x21e212]        # 221f78 <fwrite@GLIBC_2.2.5>
    3d66:	push   0x89
    3d6b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d70 <__fprintf_chk@plt>:
    3d70:	jmp    QWORD PTR [rip+0x21e20a]        # 221f80 <__fprintf_chk@GLIBC_2.3.4>
    3d76:	push   0x8a
    3d7b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d80 <getfscreatecon@plt>:
    3d80:	jmp    QWORD PTR [rip+0x21e202]        # 221f88 <getfscreatecon>
    3d86:	push   0x8b
    3d8b:	jmp    34c0 <_init@@Base+0x18>

0000000000003d90 <mbsinit@plt>:
    3d90:	jmp    QWORD PTR [rip+0x21e1fa]        # 221f90 <mbsinit@GLIBC_2.2.5>
    3d96:	push   0x8c
    3d9b:	jmp    34c0 <_init@@Base+0x18>

0000000000003da0 <symlinkat@plt>:
    3da0:	jmp    QWORD PTR [rip+0x21e1f2]        # 221f98 <symlinkat@GLIBC_2.4>
    3da6:	push   0x8d
    3dab:	jmp    34c0 <_init@@Base+0x18>

0000000000003db0 <context_str@plt>:
    3db0:	jmp    QWORD PTR [rip+0x21e1ea]        # 221fa0 <context_str>
    3db6:	push   0x8e
    3dbb:	jmp    34c0 <_init@@Base+0x18>

0000000000003dc0 <iswprint@plt>:
    3dc0:	jmp    QWORD PTR [rip+0x21e1e2]        # 221fa8 <iswprint@GLIBC_2.2.5>
    3dc6:	push   0x8f
    3dcb:	jmp    34c0 <_init@@Base+0x18>

0000000000003dd0 <mode_to_security_class@plt>:
    3dd0:	jmp    QWORD PTR [rip+0x21e1da]        # 221fb0 <mode_to_security_class>
    3dd6:	push   0x90
    3ddb:	jmp    34c0 <_init@@Base+0x18>

0000000000003de0 <futimesat@plt>:
    3de0:	jmp    QWORD PTR [rip+0x21e1d2]        # 221fb8 <futimesat@GLIBC_2.4>
    3de6:	push   0x91
    3deb:	jmp    34c0 <_init@@Base+0x18>

0000000000003df0 <__ctype_b_loc@plt>:
    3df0:	jmp    QWORD PTR [rip+0x21e1ca]        # 221fc0 <__ctype_b_loc@GLIBC_2.3>
    3df6:	push   0x92
    3dfb:	jmp    34c0 <_init@@Base+0x18>

0000000000003e00 <acl_free@plt>:
    3e00:	jmp    QWORD PTR [rip+0x21e1c2]        # 221fc8 <acl_free@ACL_1.0>
    3e06:	push   0x93
    3e0b:	jmp    34c0 <_init@@Base+0x18>

Disassembly of section .plt.got:

0000000000003e10 <free@plt>:
    3e10:	jmp    QWORD PTR [rip+0x21e1ba]        # 221fd0 <free@GLIBC_2.2.5>
    3e16:	xchg   ax,ax

0000000000003e18 <__cxa_finalize@plt>:
    3e18:	jmp    QWORD PTR [rip+0x21e1da]        # 221ff8 <__cxa_finalize@GLIBC_2.2.5>
    3e1e:	xchg   ax,ax

Disassembly of section .text:

0000000000003e20 <fts_open@@Base-0x11070>:
    3e20:	push   r15
    3e22:	push   r14
    3e24:	mov    r14d,0x1
    3e2a:	push   r13
    3e2c:	push   r12
    3e2e:	mov    r12d,edi
    3e31:	push   rbp
    3e32:	push   rbx
    3e33:	mov    rbp,rsi
    3e36:	lea    r13,[rip+0x21d5e3]        # 221420 <version_etc_copyright@@Base+0x2047a0>
    3e3d:	lea    rbx,[rip+0x15e78]        # 19cbc <_IO_stdin_used@@Base+0x31c>
    3e44:	sub    rsp,0x128
    3e4b:	mov    rdi,QWORD PTR [rsi]
    3e4e:	mov    rax,QWORD PTR fs:0x28
    3e57:	mov    QWORD PTR [rsp+0x118],rax
    3e5f:	xor    eax,eax
    3e61:	lea    r15,[rsp+0x30]
    3e66:	call   ef50 <__cxa_finalize@plt+0xb138>
    3e6b:	lea    rsi,[rip+0x17bee]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
    3e72:	mov    edi,0x6
    3e77:	call   3ba0 <setlocale@plt>
    3e7c:	lea    rsi,[rip+0x15c5d]        # 19ae0 <_IO_stdin_used@@Base+0x140>
    3e83:	lea    rdi,[rip+0x15bf8]        # 19a82 <_IO_stdin_used@@Base+0xe2>
    3e8a:	call   36d0 <bindtextdomain@plt>
    3e8f:	lea    rdi,[rip+0x15bec]        # 19a82 <_IO_stdin_used@@Base+0xe2>
    3e96:	call   3680 <textdomain@plt>
    3e9b:	lea    rdi,[rip+0x93fe]        # d2a0 <__cxa_finalize@plt+0x9488>
    3ea2:	call   19950 <fts_children@@Base+0x3de0>
    3ea7:	call   3520 <is_selinux_enabled@plt>
    3eac:	mov    rdi,r15
    3eaf:	test   eax,eax
    3eb1:	setg   BYTE PTR [rip+0x21e292]        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    3eb8:	call   6c30 <__cxa_finalize@plt+0x2e18>
    3ebd:	lea    rdi,[rip+0x15c2e]        # 19af2 <_IO_stdin_used@@Base+0x152>
    3ec4:	mov    BYTE PTR [rsp+0x44],0x1
    3ec9:	mov    DWORD PTR [rsp+0x34],0x1
    3ed1:	mov    BYTE PTR [rsp+0x45],0x0
    3ed6:	mov    BYTE PTR [rsp+0x46],0x0
    3edb:	mov    BYTE PTR [rsp+0x47],0x0
    3ee0:	mov    DWORD PTR [rsp+0x38],0x4
    3ee8:	mov    BYTE PTR [rsp+0x48],0x0
    3eed:	mov    BYTE PTR [rsp+0x49],0x0
    3ef2:	mov    BYTE PTR [rsp+0x4c],0x0
    3ef7:	mov    DWORD PTR [rsp+0x64],0x0
    3eff:	mov    BYTE PTR [rsp+0x4d],0x0
    3f04:	mov    BYTE PTR [rsp+0x52],0x0
    3f09:	mov    BYTE PTR [rsp+0x4e],0x0
    3f0e:	mov    BYTE PTR [rsp+0x4f],0x0
    3f13:	mov    BYTE PTR [rsp+0x50],0x0
    3f18:	mov    BYTE PTR [rsp+0x55],0x0
    3f1d:	mov    BYTE PTR [rsp+0x56],0x0
    3f22:	mov    BYTE PTR [rsp+0x51],0x0
    3f27:	mov    BYTE PTR [rsp+0x57],0x0
    3f2c:	mov    BYTE PTR [rsp+0x59],0x0
    3f31:	mov    BYTE PTR [rsp+0x58],0x0
    3f36:	mov    BYTE PTR [rsp+0x53],0x1
    3f3b:	mov    BYTE PTR [rsp+0x54],0x0
    3f40:	mov    BYTE PTR [rsp+0x5a],0x0
    3f45:	mov    DWORD PTR [rsp+0x3c],0x2
    3f4d:	mov    BYTE PTR [rsp+0x5c],0x0
    3f52:	mov    BYTE PTR [rsp+0x5b],0x0
    3f57:	mov    DWORD PTR [rsp+0x40],0x0
    3f5f:	mov    BYTE PTR [rsp+0x5f],0x0
    3f64:	mov    BYTE PTR [rsp+0x5d],0x0
    3f69:	mov    BYTE PTR [rsp+0x5e],0x0
    3f6e:	call   34e0 <getenv@plt>
    3f73:	test   rax,rax
    3f76:	lea    rax,[rsp+0x80]
    3f7e:	mov    QWORD PTR [rsp+0x68],0x0
    3f87:	setne  BYTE PTR [rsp+0x60]
    3f8c:	mov    QWORD PTR [rsp+0x70],0x0
    3f95:	mov    QWORD PTR [rsp+0x20],0x0
    3f9e:	mov    BYTE PTR [rsp+0x1e],0x0
    3fa3:	mov    QWORD PTR [rsp],0x0
    3fab:	mov    BYTE PTR [rsp+0x1f],0x0
    3fb0:	mov    QWORD PTR [rsp+0x8],0x0
    3fb9:	mov    QWORD PTR [rsp+0x10],0x0
    3fc2:	mov    BYTE PTR [rsp+0x1d],0x0
    3fc7:	mov    QWORD PTR [rsp+0x28],rax
    3fcc:	nop    DWORD PTR [rax+0x0]
    3fd0:	lea    rdx,[rip+0x15b6d]        # 19b44 <_IO_stdin_used@@Base+0x1a4>
    3fd7:	xor    r8d,r8d
    3fda:	mov    rcx,r13
    3fdd:	mov    rsi,rbp
    3fe0:	mov    edi,r12d
    3fe3:	call   3780 <getopt_long@plt>
    3fe8:	cmp    eax,0xffffffff
    3feb:	je     4358 <__cxa_finalize@plt+0x540>
    3ff1:	add    eax,0x83
    3ff6:	cmp    eax,0x10b
    3ffb:	ja     44a6 <__cxa_finalize@plt+0x68e>
    4001:	movsxd rax,DWORD PTR [rbx+rax*4]
    4005:	add    rax,rbx
    4008:	jmp    rax
    400a:	mov    rdi,QWORD PTR [rip+0x21e0af]        # 2220c0 <optarg@@GLIBC_2.2.5>
    4011:	test   rdi,rdi
    4014:	jne    4305 <__cxa_finalize@plt+0x4ed>
    401a:	mov    BYTE PTR [rsp+0x4d],r14b
    401f:	mov    BYTE PTR [rsp+0x4e],r14b
    4024:	mov    BYTE PTR [rsp+0x4f],r14b
    4029:	mov    BYTE PTR [rsp+0x54],r14b
    402e:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4030:	mov    DWORD PTR [rsp+0x38],0x2
    4038:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    403a:	mov    BYTE PTR [rsp+0x47],r14b
    403f:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4041:	mov    DWORD PTR [rsp+0x38],0x3
    4049:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    404b:	mov    BYTE PTR [rsp+0x46],r14b
    4050:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4055:	mov    BYTE PTR [rsp+0x52],r14b
    405a:	mov    DWORD PTR [rsp+0x34],0x2
    4062:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4067:	mov    rax,QWORD PTR [rip+0x21e052]        # 2220c0 <optarg@@GLIBC_2.2.5>
    406e:	mov    BYTE PTR [rsp+0x1d],0x1
    4073:	test   rax,rax
    4076:	cmove  rax,QWORD PTR [rsp+0x8]
    407c:	mov    QWORD PTR [rsp+0x8],rax
    4081:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4086:	cmp    BYTE PTR [rip+0x21e0bd],0x0        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    408d:	mov    DWORD PTR [rsp+0x34],0x2
    4095:	mov    BYTE PTR [rsp+0x52],r14b
    409a:	mov    BYTE PTR [rsp+0x4d],r14b
    409f:	mov    BYTE PTR [rsp+0x4e],r14b
    40a4:	mov    BYTE PTR [rsp+0x4f],r14b
    40a9:	mov    BYTE PTR [rsp+0x54],r14b
    40ae:	je     40b5 <__cxa_finalize@plt+0x29d>
    40b0:	mov    BYTE PTR [rsp+0x55],r14b
    40b5:	mov    BYTE PTR [rsp+0x57],r14b
    40ba:	mov    BYTE PTR [rsp+0x59],r14b
    40bf:	mov    BYTE PTR [rsp+0x5a],r14b
    40c4:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    40c9:	cmp    BYTE PTR [rip+0x21e07a],0x0        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    40d0:	mov    rax,QWORD PTR [rip+0x21dfe9]        # 2220c0 <optarg@@GLIBC_2.2.5>
    40d7:	je     431c <__cxa_finalize@plt+0x504>
    40dd:	test   rax,rax
    40e0:	je     452a <__cxa_finalize@plt+0x712>
    40e6:	mov    QWORD PTR [rsp+0x20],rax
    40eb:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    40f0:	mov    BYTE PTR [rsp+0x1e],0x1
    40f5:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    40fa:	mov    rax,QWORD PTR [rip+0x21dfbf]        # 2220c0 <optarg@@GLIBC_2.2.5>
    4101:	mov    BYTE PTR [rsp+0x1d],0x1
    4106:	mov    QWORD PTR [rsp+0x10],rax
    410b:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4110:	mov    BYTE PTR [rsp+0x5a],r14b
    4115:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    411a:	mov    DWORD PTR [rsp+0x34],0x2
    4122:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4127:	mov    DWORD PTR [rsp+0x34],0x4
    412f:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4134:	mov    DWORD PTR [rsp+0x34],0x3
    413c:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4141:	lea    rax,[rip+0x159ef]        # 19b37 <_IO_stdin_used@@Base+0x197>
    4148:	mov    rdi,QWORD PTR [rip+0x21df59]        # 2220a8 <stdout@@GLIBC_2.2.5>
    414f:	mov    rcx,QWORD PTR [rip+0x21deca]        # 222020 <Version@@Base>
    4156:	push   0x0
    4158:	lea    r9,[rip+0x159b6]        # 19b15 <_IO_stdin_used@@Base+0x175>
    415f:	lea    r8,[rip+0x159bf]        # 19b25 <_IO_stdin_used@@Base+0x185>
    4166:	push   rax
    4167:	lea    rdx,[rip+0x15910]        # 19a7e <_IO_stdin_used@@Base+0xde>
    416e:	lea    rsi,[rip+0x15890]        # 19a05 <_IO_stdin_used@@Base+0x65>
    4175:	xor    eax,eax
    4177:	call   12f20 <__cxa_finalize@plt+0xf108>
    417c:	xor    edi,edi
    417e:	call   3d50 <exit@plt>
    4183:	mov    BYTE PTR [rsp+0x45],r14b
    4188:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    418d:	mov    BYTE PTR [rip+0x21dfb4],r14b        # 222148 <stderr@@GLIBC_2.2.5+0x68>
    4194:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4199:	mov    r9,QWORD PTR [rip+0x21de88]        # 222028 <argmatch_die@@Base>
    41a0:	mov    rsi,QWORD PTR [rip+0x21df19]        # 2220c0 <optarg@@GLIBC_2.2.5>
    41a7:	lea    rdx,[rip+0x21d652]        # 221800 <version_etc_copyright@@Base+0x204b80>
    41ae:	lea    rcx,[rip+0x15f63]        # 1a118 <_IO_stdin_used@@Base+0x778>
    41b5:	lea    rdi,[rip+0x15946]        # 19b02 <_IO_stdin_used@@Base+0x162>
    41bc:	mov    r8d,0x4
    41c2:	call   c470 <__cxa_finalize@plt+0x8658>
    41c7:	lea    rdx,[rip+0x15f4a]        # 1a118 <_IO_stdin_used@@Base+0x778>
    41ce:	mov    eax,DWORD PTR [rdx+rax*4]
    41d1:	mov    DWORD PTR [rsp+0x3c],eax
    41d5:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    41da:	mov    rsi,QWORD PTR [rip+0x21dedf]        # 2220c0 <optarg@@GLIBC_2.2.5>
    41e1:	test   rsi,rsi
    41e4:	je     434b <__cxa_finalize@plt+0x533>
    41ea:	mov    r9,QWORD PTR [rip+0x21de37]        # 222028 <argmatch_die@@Base>
    41f1:	lea    rdx,[rip+0x21d5e8]        # 2217e0 <version_etc_copyright@@Base+0x204b60>
    41f8:	lea    rcx,[rip+0x15f11]        # 1a110 <_IO_stdin_used@@Base+0x770>
    41ff:	lea    rdi,[rip+0x15905]        # 19b0b <_IO_stdin_used@@Base+0x16b>
    4206:	mov    r8d,0x4
    420c:	call   c470 <__cxa_finalize@plt+0x8658>
    4211:	lea    rdx,[rip+0x15ef8]        # 1a110 <_IO_stdin_used@@Base+0x770>
    4218:	mov    eax,DWORD PTR [rdx+rax*4]
    421b:	mov    DWORD PTR [rsp+0x64],eax
    421f:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4224:	mov    BYTE PTR [rip+0x21df1e],r14b        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    422b:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4230:	mov    rdi,QWORD PTR [rip+0x21de89]        # 2220c0 <optarg@@GLIBC_2.2.5>
    4237:	xor    edx,edx
    4239:	mov    rsi,r15
    423c:	call   4750 <__cxa_finalize@plt+0x938>
    4241:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4246:	mov    BYTE PTR [rsp+0x1f],0x1
    424b:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4250:	mov    BYTE PTR [rsp+0x53],0x0
    4255:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    425a:	mov    BYTE PTR [rsp+0x4c],r14b
    425f:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4264:	mov    BYTE PTR [rsp+0x5e],r14b
    4269:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    426e:	mov    BYTE PTR [rsp+0x5d],r14b
    4273:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4278:	cmp    QWORD PTR [rsp],0x0
    427d:	jne    4584 <__cxa_finalize@plt+0x76c>
    4283:	mov    rdx,QWORD PTR [rsp+0x28]
    4288:	mov    rsi,QWORD PTR [rip+0x21de31]        # 2220c0 <optarg@@GLIBC_2.2.5>
    428f:	mov    edi,0x1
    4294:	call   3a90 <__xstat@plt>
    4299:	test   eax,eax
    429b:	jne    45a8 <__cxa_finalize@plt+0x790>
    42a1:	mov    rax,QWORD PTR [rip+0x21de18]        # 2220c0 <optarg@@GLIBC_2.2.5>
    42a8:	mov    QWORD PTR [rsp],rax
    42ac:	mov    eax,DWORD PTR [rsp+0x98]
    42b3:	and    eax,0xf000
    42b8:	cmp    eax,0x4000
    42bd:	je     3fd0 <__cxa_finalize@plt+0x1b8>
    42c3:	mov    rsi,QWORD PTR [rsp]
    42c7:	mov    edi,0x4
    42cc:	call   10a80 <__cxa_finalize@plt+0xcc68>
    42d1:	lea    rsi,[rip+0x157e8]        # 19ac0 <_IO_stdin_used@@Base+0x120>
    42d8:	mov    rbx,rax
    42db:	mov    edx,0x5
    42e0:	xor    edi,edi
    42e2:	call   3700 <dcgettext@plt>
    42e7:	mov    rcx,rbx
    42ea:	mov    rdx,rax
    42ed:	xor    esi,esi
    42ef:	mov    edi,0x1
    42f4:	xor    eax,eax
    42f6:	call   3c20 <error@plt>
    42fb:	mov    BYTE PTR [rsp+0x5c],r14b
    4300:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4305:	mov    edx,0x1
    430a:	mov    rsi,r15
    430d:	call   4750 <__cxa_finalize@plt+0x938>
    4312:	mov    BYTE PTR [rsp+0x54],r14b
    4317:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    431c:	test   rax,rax
    431f:	je     3fd0 <__cxa_finalize@plt+0x1b8>
    4325:	lea    rsi,[rip+0x172b4]        # 1b5e0 <_IO_stdin_used@@Base+0x1c40>
    432c:	xor    edi,edi
    432e:	mov    edx,0x5
    4333:	call   3700 <dcgettext@plt>
    4338:	xor    esi,esi
    433a:	mov    rdx,rax
    433d:	xor    edi,edi
    433f:	xor    eax,eax
    4341:	call   3c20 <error@plt>
    4346:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    434b:	mov    DWORD PTR [rsp+0x64],0x2
    4353:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4358:	cmp    BYTE PTR [rsp+0x47],0x0
    435d:	je     436a <__cxa_finalize@plt+0x552>
    435f:	cmp    BYTE PTR [rsp+0x5c],0x0
    4364:	jne    45eb <__cxa_finalize@plt+0x7d3>
    436a:	cmp    BYTE PTR [rsp+0x1d],0x0
    436f:	je     4470 <__cxa_finalize@plt+0x658>
    4375:	cmp    DWORD PTR [rsp+0x38],0x2
    437a:	mov    edx,0x5
    437f:	lea    rsi,[rip+0x172d2]        # 1b658 <_IO_stdin_used@@Base+0x1cb8>
    4386:	je     4491 <__cxa_finalize@plt+0x679>
    438c:	cmp    DWORD PTR [rsp+0x64],0x2
    4391:	je     4534 <__cxa_finalize@plt+0x71c>
    4397:	lea    rsi,[rip+0x157be]        # 19b5c <_IO_stdin_used@@Base+0x1bc>
    439e:	xor    edi,edi
    43a0:	mov    edx,0x5
    43a5:	call   3700 <dcgettext@plt>
    43aa:	mov    rsi,QWORD PTR [rsp+0x8]
    43af:	mov    rdi,rax
    43b2:	call   cb90 <__cxa_finalize@plt+0x8d78>
    43b7:	mov    rdi,QWORD PTR [rsp+0x10]
    43bc:	mov    DWORD PTR [rsp+0x30],eax
    43c0:	call   c5f0 <__cxa_finalize@plt+0x87d8>
    43c5:	cmp    DWORD PTR [rsp+0x34],0x1
    43ca:	je     44b0 <__cxa_finalize@plt+0x698>
    43d0:	cmp    BYTE PTR [rsp+0x5a],0x0
    43d5:	jne    44c6 <__cxa_finalize@plt+0x6ae>
    43db:	cmp    BYTE PTR [rsp+0x51],0x0
    43e0:	movzx  eax,BYTE PTR [rsp+0x56]
    43e5:	jne    43f3 <__cxa_finalize@plt+0x5db>
    43e7:	cmp    QWORD PTR [rsp+0x20],0x0
    43ed:	je     44ff <__cxa_finalize@plt+0x6e7>
    43f3:	test   al,al
    43f5:	jne    44d4 <__cxa_finalize@plt+0x6bc>
    43fb:	mov    BYTE PTR [rsp+0x55],0x0
    4400:	mov    rax,QWORD PTR [rsp+0x20]
    4405:	test   rax,rax
    4408:	je     441a <__cxa_finalize@plt+0x602>
    440a:	mov    rdi,rax
    440d:	call   3ab0 <setfscreatecon@plt>
    4412:	test   eax,eax
    4414:	js     45fc <__cxa_finalize@plt+0x7e4>
    441a:	call   b1d0 <__cxa_finalize@plt+0x73b8>
    441f:	movsxd rdx,DWORD PTR [rip+0x21dc92]        # 2220b8 <optind@@GLIBC_2.2.5>
    4426:	movzx  ecx,BYTE PTR [rsp+0x1e]
    442b:	mov    edi,r12d
    442e:	mov    r8,r15
    4431:	sub    edi,edx
    4433:	lea    rsi,[rbp+rdx*8+0x0]
    4438:	mov    rdx,QWORD PTR [rsp]
    443c:	call   5710 <__cxa_finalize@plt+0x18f8>
    4441:	xor    eax,0x1
    4444:	mov    rcx,QWORD PTR [rsp+0x118]
    444c:	xor    rcx,QWORD PTR fs:0x28
    4455:	movzx  eax,al
    4458:	jne    4638 <__cxa_finalize@plt+0x820>
    445e:	add    rsp,0x128
    4465:	pop    rbx
    4466:	pop    rbp
    4467:	pop    r12
    4469:	pop    r13
    446b:	pop    r14
    446d:	pop    r15
    446f:	ret    
    4470:	cmp    DWORD PTR [rsp+0x64],0x2
    4475:	je     447e <__cxa_finalize@plt+0x666>
    4477:	xor    eax,eax
    4479:	jmp    43b7 <__cxa_finalize@plt+0x59f>
    447e:	cmp    DWORD PTR [rsp+0x3c],0x2
    4483:	je     4477 <__cxa_finalize@plt+0x65f>
    4485:	lea    rsi,[rip+0x1720c]        # 1b698 <_IO_stdin_used@@Base+0x1cf8>
    448c:	mov    edx,0x5
    4491:	xor    edi,edi
    4493:	call   3700 <dcgettext@plt>
    4498:	xor    esi,esi
    449a:	mov    rdx,rax
    449d:	xor    edi,edi
    449f:	xor    eax,eax
    44a1:	call   3c20 <error@plt>
    44a6:	mov    edi,0x1
    44ab:	call   5180 <__cxa_finalize@plt+0x1368>
    44b0:	cmp    BYTE PTR [rsp+0x5a],0x0
    44b5:	je     451d <__cxa_finalize@plt+0x705>
    44b7:	cmp    BYTE PTR [rsp+0x47],0x0
    44bc:	jne    451d <__cxa_finalize@plt+0x705>
    44be:	mov    DWORD PTR [rsp+0x34],0x2
    44c6:	movzx  eax,BYTE PTR [rsp+0x1f]
    44cb:	mov    BYTE PTR [rsp+0x44],al
    44cf:	jmp    43db <__cxa_finalize@plt+0x5c3>
    44d4:	cmp    BYTE PTR [rsp+0x55],0x0
    44d9:	je     450e <__cxa_finalize@plt+0x6f6>
    44db:	lea    rsi,[rip+0x171e6]        # 1b6c8 <_IO_stdin_used@@Base+0x1d28>
    44e2:	mov    edx,0x5
    44e7:	xor    edi,edi
    44e9:	call   3700 <dcgettext@plt>
    44ee:	xor    esi,esi
    44f0:	mov    rdx,rax
    44f3:	mov    edi,0x1
    44f8:	xor    eax,eax
    44fa:	call   3c20 <error@plt>
    44ff:	cmp    BYTE PTR [rsp+0x55],0x0
    4504:	je     4544 <__cxa_finalize@plt+0x72c>
    4506:	test   al,al
    4508:	je     441a <__cxa_finalize@plt+0x602>
    450e:	cmp    BYTE PTR [rip+0x21dc35],0x0        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    4515:	jne    4400 <__cxa_finalize@plt+0x5e8>
    451b:	jmp    4559 <__cxa_finalize@plt+0x741>
    451d:	mov    DWORD PTR [rsp+0x34],0x4
    4525:	jmp    43d0 <__cxa_finalize@plt+0x5b8>
    452a:	mov    BYTE PTR [rsp+0x51],r14b
    452f:	jmp    3fd0 <__cxa_finalize@plt+0x1b8>
    4534:	cmp    DWORD PTR [rsp+0x3c],0x2
    4539:	je     4397 <__cxa_finalize@plt+0x57f>
    453f:	jmp    4485 <__cxa_finalize@plt+0x66d>
    4544:	test   al,al
    4546:	je     441a <__cxa_finalize@plt+0x602>
    454c:	cmp    BYTE PTR [rip+0x21dbf7],0x0        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    4553:	jne    441a <__cxa_finalize@plt+0x602>
    4559:	lea    rsi,[rip+0x17198]        # 1b6f8 <_IO_stdin_used@@Base+0x1d58>
    4560:	mov    edx,0x5
    4565:	xor    edi,edi
    4567:	call   3700 <dcgettext@plt>
    456c:	xor    esi,esi
    456e:	mov    rdx,rax
    4571:	mov    edi,0x1
    4576:	xor    eax,eax
    4578:	call   3c20 <error@plt>
    457d:	xor    edi,edi
    457f:	call   5180 <__cxa_finalize@plt+0x1368>
    4584:	lea    rsi,[rip+0x1702d]        # 1b5b8 <_IO_stdin_used@@Base+0x1c18>
    458b:	mov    edx,0x5
    4590:	xor    edi,edi
    4592:	call   3700 <dcgettext@plt>
    4597:	xor    esi,esi
    4599:	mov    rdx,rax
    459c:	mov    edi,0x1
    45a1:	xor    eax,eax
    45a3:	call   3c20 <error@plt>
    45a8:	mov    rsi,QWORD PTR [rip+0x21db11]        # 2220c0 <optarg@@GLIBC_2.2.5>
    45af:	mov    edi,0x4
    45b4:	call   10a80 <__cxa_finalize@plt+0xcc68>
    45b9:	lea    rsi,[rip+0x153fd]        # 199bd <_IO_stdin_used@@Base+0x1d>
    45c0:	mov    edx,0x5
    45c5:	xor    edi,edi
    45c7:	mov    rbp,rax
    45ca:	call   3700 <dcgettext@plt>
    45cf:	mov    rbx,rax
    45d2:	call   3540 <__errno_location@plt>
    45d7:	mov    esi,DWORD PTR [rax]
    45d9:	mov    rcx,rbp
    45dc:	mov    rdx,rbx
    45df:	mov    edi,0x1
    45e4:	xor    eax,eax
    45e6:	call   3c20 <error@plt>
    45eb:	mov    edx,0x5
    45f0:	lea    rsi,[rip+0x17031]        # 1b628 <_IO_stdin_used@@Base+0x1c88>
    45f7:	jmp    4491 <__cxa_finalize@plt+0x679>
    45fc:	mov    rdi,QWORD PTR [rsp+0x20]
    4601:	call   10d50 <__cxa_finalize@plt+0xcf38>
    4606:	lea    rsi,[rip+0x17133]        # 1b740 <_IO_stdin_used@@Base+0x1da0>
    460d:	mov    edx,0x5
    4612:	xor    edi,edi
    4614:	mov    rbp,rax
    4617:	call   3700 <dcgettext@plt>
    461c:	mov    rbx,rax
    461f:	call   3540 <__errno_location@plt>
    4624:	mov    esi,DWORD PTR [rax]
    4626:	mov    rcx,rbp
    4629:	mov    rdx,rbx
    462c:	mov    edi,0x1
    4631:	xor    eax,eax
    4633:	call   3c20 <error@plt>
    4638:	call   3760 <__stack_chk_fail@plt>
    463d:	nop    DWORD PTR [rax]
    4640:	xor    ebp,ebp
    4642:	mov    r9,rdx
    4645:	pop    rsi
    4646:	mov    rdx,rsp
    4649:	and    rsp,0xfffffffffffffff0
    464d:	push   rax
    464e:	push   rsp
    464f:	lea    r8,[rip+0x152ea]        # 19940 <fts_children@@Base+0x3dd0>
    4656:	lea    rcx,[rip+0x15273]        # 198d0 <fts_children@@Base+0x3d60>
    465d:	lea    rdi,[rip+0xfffffffffffff7bc]        # 3e20 <__cxa_finalize@plt+0x8>
    4664:	call   QWORD PTR [rip+0x21d976]        # 221fe0 <__libc_start_main@GLIBC_2.2.5>
    466a:	hlt    
    466b:	nop    DWORD PTR [rax+rax*1+0x0]
    4670:	lea    rdi,[rip+0x21da29]        # 2220a0 <__progname@@GLIBC_2.2.5>
    4677:	push   rbp
    4678:	lea    rax,[rip+0x21da21]        # 2220a0 <__progname@@GLIBC_2.2.5>
    467f:	cmp    rax,rdi
    4682:	mov    rbp,rsp
    4685:	je     46a0 <__cxa_finalize@plt+0x888>
    4687:	mov    rax,QWORD PTR [rip+0x21d94a]        # 221fd8 <_ITM_deregisterTMCloneTable>
    468e:	test   rax,rax
    4691:	je     46a0 <__cxa_finalize@plt+0x888>
    4693:	pop    rbp
    4694:	jmp    rax
    4696:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46a0:	pop    rbp
    46a1:	ret    
    46a2:	nop    DWORD PTR [rax+0x0]
    46a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46b0:	lea    rdi,[rip+0x21d9e9]        # 2220a0 <__progname@@GLIBC_2.2.5>
    46b7:	lea    rsi,[rip+0x21d9e2]        # 2220a0 <__progname@@GLIBC_2.2.5>
    46be:	push   rbp
    46bf:	sub    rsi,rdi
    46c2:	mov    rbp,rsp
    46c5:	sar    rsi,0x3
    46c9:	mov    rax,rsi
    46cc:	shr    rax,0x3f
    46d0:	add    rsi,rax
    46d3:	sar    rsi,1
    46d6:	je     46f0 <__cxa_finalize@plt+0x8d8>
    46d8:	mov    rax,QWORD PTR [rip+0x21d911]        # 221ff0 <_ITM_registerTMCloneTable>
    46df:	test   rax,rax
    46e2:	je     46f0 <__cxa_finalize@plt+0x8d8>
    46e4:	pop    rbp
    46e5:	jmp    rax
    46e7:	nop    WORD PTR [rax+rax*1+0x0]
    46f0:	pop    rbp
    46f1:	ret    
    46f2:	nop    DWORD PTR [rax+0x0]
    46f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4700:	cmp    BYTE PTR [rip+0x21d9e1],0x0        # 2220e8 <stderr@@GLIBC_2.2.5+0x8>
    4707:	jne    4738 <__cxa_finalize@plt+0x920>
    4709:	cmp    QWORD PTR [rip+0x21d8e7],0x0        # 221ff8 <__cxa_finalize@GLIBC_2.2.5>
    4711:	push   rbp
    4712:	mov    rbp,rsp
    4715:	je     4723 <__cxa_finalize@plt+0x90b>
    4717:	mov    rdi,QWORD PTR [rip+0x21d8ea]        # 222008 <quoting_style_args@@Base+0x788>
    471e:	call   3e18 <__cxa_finalize@plt>
    4723:	call   4670 <__cxa_finalize@plt+0x858>
    4728:	mov    BYTE PTR [rip+0x21d9b9],0x1        # 2220e8 <stderr@@GLIBC_2.2.5+0x8>
    472f:	pop    rbp
    4730:	ret    
    4731:	nop    DWORD PTR [rax+0x0]
    4738:	repz ret 
    473a:	nop    WORD PTR [rax+rax*1+0x0]
    4740:	push   rbp
    4741:	mov    rbp,rsp
    4744:	pop    rbp
    4745:	jmp    46b0 <__cxa_finalize@plt+0x898>
    474a:	nop    WORD PTR [rax+rax*1+0x0]
    4750:	push   r15
    4752:	push   r14
    4754:	lea    r14,[rip+0x15249]        # 199a4 <_IO_stdin_used@@Base+0x4>
    475b:	push   r13
    475d:	push   r12
    475f:	mov    r12d,edx
    4762:	push   rbp
    4763:	push   rbx
    4764:	mov    rbp,rsi
    4767:	mov    ebx,edx
    4769:	lea    r13,[rip+0x15980]        # 1a0f0 <_IO_stdin_used@@Base+0x750>
    4770:	sub    rsp,0x18
    4774:	call   132f0 <__cxa_finalize@plt+0xf4d8>
    4779:	mov    r15,rax
    477c:	mov    QWORD PTR [rsp+0x8],rax
    4781:	lea    rax,[rip+0x15227]        # 199af <_IO_stdin_used@@Base+0xf>
    4788:	test   r12b,r12b
    478b:	lea    r12,[rip+0x1550e]        # 19ca0 <_IO_stdin_used@@Base+0x300>
    4792:	cmovne rax,r14
    4796:	mov    QWORD PTR [rsp],rax
    479a:	nop    WORD PTR [rax+rax*1+0x0]
    47a0:	mov    esi,0x2c
    47a5:	mov    rdi,r15
    47a8:	xor    r14d,r14d
    47ab:	call   37b0 <strchr@plt>
    47b0:	test   rax,rax
    47b3:	je     47bc <__cxa_finalize@plt+0x9a4>
    47b5:	lea    r14,[rax+0x1]
    47b9:	mov    BYTE PTR [rax],0x0
    47bc:	mov    r9,QWORD PTR [rip+0x21d865]        # 222028 <argmatch_die@@Base>
    47c3:	mov    rdi,QWORD PTR [rsp]
    47c7:	lea    rcx,[rip+0x15922]        # 1a0f0 <_IO_stdin_used@@Base+0x750>
    47ce:	lea    rdx,[rip+0x21cc0b]        # 2213e0 <version_etc_copyright@@Base+0x204760>
    47d5:	mov    r8d,0x4
    47db:	mov    rsi,r15
    47de:	call   c470 <__cxa_finalize@plt+0x8658>
    47e3:	cmp    DWORD PTR [r13+rax*4+0x0],0x6
    47e9:	ja     488d <__cxa_finalize@plt+0xa75>
    47ef:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    47f4:	movsxd rax,DWORD PTR [r12+rax*4]
    47f8:	add    rax,r12
    47fb:	jmp    rax
    47fd:	nop    DWORD PTR [rax]
    4800:	mov    BYTE PTR [rbp+0x27],bl
    4803:	mov    BYTE PTR [rbp+0x28],bl
    4806:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4810:	test   r14,r14
    4813:	mov    r15,r14
    4816:	jne    47a0 <__cxa_finalize@plt+0x988>
    4818:	mov    rdi,QWORD PTR [rsp+0x8]
    481d:	add    rsp,0x18
    4821:	pop    rbx
    4822:	pop    rbp
    4823:	pop    r12
    4825:	pop    r13
    4827:	pop    r14
    4829:	pop    r15
    482b:	jmp    3e10 <free@plt>
    4830:	mov    BYTE PTR [rbp+0x26],bl
    4833:	mov    BYTE PTR [rbp+0x25],bl
    4836:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    4838:	nop    DWORD PTR [rax+rax*1+0x0]
    4840:	mov    BYTE PTR [rbp+0x22],bl
    4843:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    4845:	nop    DWORD PTR [rax]
    4848:	mov    BYTE PTR [rbp+0x1d],bl
    484b:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    484d:	nop    DWORD PTR [rax]
    4850:	mov    BYTE PTR [rbp+0x1f],bl
    4853:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    4855:	nop    DWORD PTR [rax]
    4858:	mov    eax,ebx
    485a:	mov    BYTE PTR [rbp+0x1e],bl
    485d:	xor    eax,0x1
    4860:	mov    BYTE PTR [rbp+0x20],al
    4863:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    4865:	nop    DWORD PTR [rax]
    4868:	mov    eax,ebx
    486a:	mov    BYTE PTR [rbp+0x1e],bl
    486d:	mov    BYTE PTR [rbp+0x1f],bl
    4870:	xor    eax,0x1
    4873:	cmp    BYTE PTR [rip+0x21d8d0],0x0        # 22214a <stderr@@GLIBC_2.2.5+0x6a>
    487a:	mov    BYTE PTR [rbp+0x1d],bl
    487d:	mov    BYTE PTR [rbp+0x22],bl
    4880:	mov    BYTE PTR [rbp+0x20],al
    4883:	je     4888 <__cxa_finalize@plt+0xa70>
    4885:	mov    BYTE PTR [rbp+0x25],bl
    4888:	mov    BYTE PTR [rbp+0x27],bl
    488b:	jmp    4810 <__cxa_finalize@plt+0x9f8>
    488d:	call   3530 <abort@plt>
    4892:	nop    DWORD PTR [rax+0x0]
    4896:	nop    WORD PTR cs:[rax+rax*1+0x0]
    48a0:	push   r13
    48a2:	push   r12
    48a4:	mov    r13,rdx
    48a7:	push   rbp
    48a8:	push   rbx
    48a9:	mov    rdx,rsi
    48ac:	mov    rbp,rdi
    48af:	mov    rbx,rsi
    48b2:	mov    rsi,rdi
    48b5:	sub    rsp,0x8
    48b9:	mov    edi,0x1
    48be:	call   3a90 <__xstat@plt>
    48c3:	test   eax,eax
    48c5:	jne    48e6 <__cxa_finalize@plt+0xace>
    48c7:	mov    edx,DWORD PTR [rbx+0x18]
    48ca:	and    edx,0xf000
    48d0:	cmp    edx,0x4000
    48d6:	je     4917 <__cxa_finalize@plt+0xaff>
    48d8:	and    eax,0x1
    48db:	add    rsp,0x8
    48df:	pop    rbx
    48e0:	pop    rbp
    48e1:	pop    r12
    48e3:	pop    r13
    48e5:	ret    
    48e6:	call   3540 <__errno_location@plt>
    48eb:	mov    r12d,DWORD PTR [rax]
    48ee:	test   r12d,r12d
    48f1:	je     4902 <__cxa_finalize@plt+0xaea>
    48f3:	cmp    r12d,0x2
    48f7:	jne    491e <__cxa_finalize@plt+0xb06>
    48f9:	mov    BYTE PTR [r13+0x0],0x1
    48fe:	xor    eax,eax
    4900:	jmp    48db <__cxa_finalize@plt+0xac3>
    4902:	mov    eax,DWORD PTR [rbx+0x18]
    4905:	and    eax,0xf000
    490a:	cmp    eax,0x4000
    490f:	sete   al
    4912:	movzx  eax,al
    4915:	jmp    48d8 <__cxa_finalize@plt+0xac0>
    4917:	mov    eax,0x1
    491c:	jmp    48db <__cxa_finalize@plt+0xac3>
    491e:	mov    rsi,rbp
    4921:	mov    edi,0x4
    4926:	call   10a80 <__cxa_finalize@plt+0xcc68>
    492b:	lea    rsi,[rip+0x1508b]        # 199bd <_IO_stdin_used@@Base+0x1d>
    4932:	mov    rbx,rax
    4935:	mov    edx,0x5
    493a:	xor    edi,edi
    493c:	call   3700 <dcgettext@plt>
    4941:	mov    rcx,rbx
    4944:	mov    rdx,rax
    4947:	mov    esi,r12d
    494a:	mov    edi,0x1
    494f:	xor    eax,eax
    4951:	call   3c20 <error@plt>
    4956:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4960:	push   rbp
    4961:	mov    rbp,rsp
    4964:	push   r15
    4966:	push   r14
    4968:	push   r13
    496a:	push   r12
    496c:	mov    r13,r9
    496f:	push   rbx
    4970:	mov    r15,rsi
    4973:	mov    rbx,rdi
    4976:	sub    rsp,0x168
    497d:	mov    QWORD PTR [rbp-0x180],rcx
    4984:	mov    QWORD PTR [rbp-0x178],r8
    498b:	mov    QWORD PTR [rbp-0x190],rdx
    4992:	mov    rdx,QWORD PTR fs:0x28
    499b:	mov    QWORD PTR [rbp-0x38],rdx
    499f:	xor    edx,edx
    49a1:	call   3720 <strlen@plt>
    49a6:	lea    rdx,[rax+0x1]
    49aa:	add    rax,0x1f
    49ae:	mov    rsi,rbx
    49b1:	and    rax,0xfffffffffffffff0
    49b5:	sub    rsp,rax
    49b8:	lea    rdi,[rsp+0xf]
    49bd:	and    rdi,0xfffffffffffffff0
    49c1:	call   3a40 <memcpy@plt>
    49c6:	mov    rdi,rax
    49c9:	mov    r12,rax
    49cc:	call   d540 <__cxa_finalize@plt+0x9728>
    49d1:	mov    r14,rax
    49d4:	add    rax,0x1f
    49d8:	mov    rsi,r12
    49db:	and    rax,0xfffffffffffffff0
    49df:	mov    rdx,r14
    49e2:	sub    rsp,rax
    49e5:	lea    rbx,[rsp+0xf]
    49ea:	and    rbx,0xfffffffffffffff0
    49ee:	mov    rdi,rbx
    49f1:	call   3a40 <memcpy@plt>
    49f6:	mov    rax,QWORD PTR [rbp-0x180]
    49fd:	mov    BYTE PTR [rbx+r14*1],0x0
    4a02:	mov    rsi,rbx
    4a05:	mov    edi,0x1
    4a0a:	mov    QWORD PTR [rax],0x0
    4a11:	lea    rax,[rbp-0x160]
    4a18:	mov    rdx,rax
    4a1b:	mov    QWORD PTR [rbp-0x170],rax
    4a22:	call   3a90 <__xstat@plt>
    4a27:	test   eax,eax
    4a29:	je     4de0 <__cxa_finalize@plt+0xfc8>
    4a2f:	lea    rdi,[r12+r15*1]
    4a33:	cmp    BYTE PTR [rdi],0x2f
    4a36:	mov    QWORD PTR [rbp-0x168],rdi
    4a3d:	jne    4e88 <__cxa_finalize@plt+0x1070>
    4a43:	nop    DWORD PTR [rax+rax*1+0x0]
    4a48:	add    rdi,0x1
    4a4c:	cmp    BYTE PTR [rdi],0x2f
    4a4f:	je     4a48 <__cxa_finalize@plt+0xc30>
    4a51:	lea    rax,[rbp-0xd0]
    4a58:	mov    QWORD PTR [rbp-0x188],rax
    4a5f:	nop
    4a60:	mov    esi,0x2f
    4a65:	call   37b0 <strchr@plt>
    4a6a:	test   rax,rax
    4a6d:	mov    rbx,rax
    4a70:	je     4dfc <__cxa_finalize@plt+0xfe4>
    4a76:	mov    rdx,QWORD PTR [rbp-0x170]
    4a7d:	mov    BYTE PTR [rbx],0x0
    4a80:	mov    rsi,r12
    4a83:	mov    edi,0x1
    4a88:	call   3a90 <__xstat@plt>
    4a8d:	test   eax,eax
    4a8f:	mov    r14d,eax
    4a92:	jne    4b20 <__cxa_finalize@plt+0xd08>
    4a98:	test   DWORD PTR [r13+0x1c],0xffffff00
    4aa0:	jne    4b20 <__cxa_finalize@plt+0xd08>
    4aa2:	mov    rdi,QWORD PTR [rbp-0x168]
    4aa9:	xor    ecx,ecx
    4aab:	xor    edx,edx
    4aad:	mov    r8,r13
    4ab0:	mov    rsi,r12
    4ab3:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    4ab8:	test   al,al
    4aba:	je     4dc5 <__cxa_finalize@plt+0xfad>
    4ac0:	mov    eax,DWORD PTR [rbp-0x148]
    4ac6:	and    eax,0xf000
    4acb:	cmp    eax,0x4000
    4ad0:	jne    4ed7 <__cxa_finalize@plt+0x10bf>
    4ad6:	mov    rax,QWORD PTR [rbp-0x178]
    4add:	mov    BYTE PTR [rax],0x0
    4ae0:	movabs rax,0xff000000ff00
    4aea:	test   QWORD PTR [r13+0x20],rax
    4aee:	jne    4da0 <__cxa_finalize@plt+0xf88>
    4af4:	cmp    BYTE PTR [rbx+0x1],0x2f
    4af8:	lea    rdi,[rbx+0x1]
    4afc:	mov    BYTE PTR [rbx],0x2f
    4aff:	jne    4a60 <__cxa_finalize@plt+0xc48>
    4b05:	nop    DWORD PTR [rax]
    4b08:	add    rdi,0x1
    4b0c:	cmp    BYTE PTR [rdi],0x2f
    4b0f:	je     4b08 <__cxa_finalize@plt+0xcf0>
    4b11:	jmp    4a60 <__cxa_finalize@plt+0xc48>
    4b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b20:	mov    rdx,QWORD PTR [rbp-0x188]
    4b27:	mov    rsi,QWORD PTR [rbp-0x168]
    4b2e:	mov    edi,0x1
    4b33:	call   3a90 <__xstat@plt>
    4b38:	test   eax,eax
    4b3a:	je     4d10 <__cxa_finalize@plt+0xef8>
    4b40:	call   3540 <__errno_location@plt>
    4b45:	mov    r8d,DWORD PTR [rax]
    4b48:	test   r8d,r8d
    4b4b:	jne    4d2c <__cxa_finalize@plt+0xf14>
    4b51:	mov    edi,0xa8
    4b56:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    4b5b:	movdqa xmm0,XMMWORD PTR [rbp-0xd0]
    4b63:	mov    r15,rax
    4b66:	mov    rcx,QWORD PTR [rbp-0x180]
    4b6d:	movups XMMWORD PTR [rax],xmm0
    4b70:	movdqa xmm0,XMMWORD PTR [rbp-0xc0]
    4b78:	movups XMMWORD PTR [rax+0x10],xmm0
    4b7c:	movdqa xmm0,XMMWORD PTR [rbp-0xb0]
    4b84:	movups XMMWORD PTR [rax+0x20],xmm0
    4b88:	movdqa xmm0,XMMWORD PTR [rbp-0xa0]
    4b90:	movups XMMWORD PTR [rax+0x30],xmm0
    4b94:	movdqa xmm0,XMMWORD PTR [rbp-0x90]
    4b9c:	movups XMMWORD PTR [rax+0x40],xmm0
    4ba0:	movdqa xmm0,XMMWORD PTR [rbp-0x80]
    4ba5:	movups XMMWORD PTR [rax+0x50],xmm0
    4ba9:	movdqa xmm0,XMMWORD PTR [rbp-0x70]
    4bae:	movups XMMWORD PTR [rax+0x60],xmm0
    4bb2:	movdqa xmm0,XMMWORD PTR [rbp-0x60]
    4bb7:	movups XMMWORD PTR [rax+0x70],xmm0
    4bbb:	movdqa xmm0,XMMWORD PTR [rbp-0x50]
    4bc0:	movups XMMWORD PTR [rax+0x80],xmm0
    4bc7:	mov    rax,rbx
    4bca:	mov    BYTE PTR [r15+0x90],0x0
    4bd2:	sub    rax,r12
    4bd5:	test   r14d,r14d
    4bd8:	mov    QWORD PTR [r15+0x98],rax
    4bdf:	mov    rax,QWORD PTR [rcx]
    4be2:	mov    QWORD PTR [rcx],r15
    4be5:	mov    QWORD PTR [r15+0xa0],rax
    4bec:	je     4aa2 <__cxa_finalize@plt+0xc8a>
    4bf2:	mov    edx,DWORD PTR [r15+0x18]
    4bf6:	mov    rdi,QWORD PTR [rbp-0x168]
    4bfd:	mov    r8,r13
    4c00:	mov    ecx,0x1
    4c05:	mov    rsi,r12
    4c08:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    4c0d:	test   al,al
    4c0f:	je     4dc5 <__cxa_finalize@plt+0xfad>
    4c15:	mov    rax,QWORD PTR [rbp-0x178]
    4c1c:	mov    esi,DWORD PTR [r15+0x18]
    4c20:	mov    BYTE PTR [rax],0x1
    4c23:	cmp    BYTE PTR [r13+0x1d],0x0
    4c28:	je     4d80 <__cxa_finalize@plt+0xf68>
    4c2e:	mov    r14d,esi
    4c31:	and    r14d,0x3f
    4c35:	mov    eax,r14d
    4c38:	xor    eax,0xfff
    4c3d:	cmp    BYTE PTR [r13+0x20],0x0
    4c42:	mov    edx,0x1ff
    4c47:	mov    rdi,r12
    4c4a:	cmovne esi,edx
    4c4d:	and    esi,eax
    4c4f:	call   35e0 <mkdir@plt>
    4c54:	test   eax,eax
    4c56:	jne    4e94 <__cxa_finalize@plt+0x107c>
    4c5c:	mov    rax,QWORD PTR [rbp-0x190]
    4c63:	test   rax,rax
    4c66:	je     4c81 <__cxa_finalize@plt+0xe69>
    4c68:	mov    rdx,QWORD PTR [rbp-0x168]
    4c6f:	mov    rsi,rax
    4c72:	mov    rcx,r12
    4c75:	mov    edi,0x1
    4c7a:	xor    eax,eax
    4c7c:	call   3bb0 <__printf_chk@plt>
    4c81:	mov    rdx,QWORD PTR [rbp-0x170]
    4c88:	mov    rsi,r12
    4c8b:	mov    edi,0x1
    4c90:	call   3740 <__lxstat@plt>
    4c95:	test   eax,eax
    4c97:	jne    4edf <__cxa_finalize@plt+0x10c7>
    4c9d:	cmp    BYTE PTR [r13+0x1e],0x0
    4ca2:	mov    esi,DWORD PTR [rbp-0x148]
    4ca8:	jne    4cd6 <__cxa_finalize@plt+0xebe>
    4caa:	mov    eax,esi
    4cac:	not    eax
    4cae:	test   eax,r14d
    4cb1:	jne    4e60 <__cxa_finalize@plt+0x1048>
    4cb7:	mov    eax,esi
    4cb9:	and    eax,0x1c0
    4cbe:	cmp    eax,0x1c0
    4cc3:	je     4cfa <__cxa_finalize@plt+0xee2>
    4cc5:	mov    eax,esi
    4cc7:	or     r14d,eax
    4cca:	mov    BYTE PTR [r15+0x90],0x1
    4cd2:	mov    DWORD PTR [r15+0x18],r14d
    4cd6:	mov    eax,esi
    4cd8:	and    eax,0x1c0
    4cdd:	cmp    eax,0x1c0
    4ce2:	je     4cfa <__cxa_finalize@plt+0xee2>
    4ce4:	or     esi,0x1c0
    4cea:	mov    rdi,r12
    4ced:	call   3be0 <chmod@plt>
    4cf2:	test   eax,eax
    4cf4:	jne    4efd <__cxa_finalize@plt+0x10e5>
    4cfa:	mov    rax,QWORD PTR [rbp-0x178]
    4d01:	cmp    BYTE PTR [rax],0x0
    4d04:	jne    4af4 <__cxa_finalize@plt+0xcdc>
    4d0a:	jmp    4ae0 <__cxa_finalize@plt+0xcc8>
    4d0f:	nop
    4d10:	mov    eax,DWORD PTR [rbp-0xb8]
    4d16:	and    eax,0xf000
    4d1b:	cmp    eax,0x4000
    4d20:	je     4b51 <__cxa_finalize@plt+0xd39>
    4d26:	mov    r8d,0x14
    4d2c:	mov    rsi,QWORD PTR [rbp-0x168]
    4d33:	mov    edi,0x4
    4d38:	mov    DWORD PTR [rbp-0x170],r8d
    4d3f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    4d44:	lea    rsi,[rip+0x153dd]        # 1a128 <_IO_stdin_used@@Base+0x788>
    4d4b:	mov    edx,0x5
    4d50:	xor    edi,edi
    4d52:	mov    rbx,rax
    4d55:	call   3700 <dcgettext@plt>
    4d5a:	mov    r8d,DWORD PTR [rbp-0x170]
    4d61:	mov    rdx,rax
    4d64:	mov    rcx,rbx
    4d67:	xor    eax,eax
    4d69:	xor    edi,edi
    4d6b:	mov    esi,r8d
    4d6e:	call   3c20 <error@plt>
    4d73:	xor    eax,eax
    4d75:	jmp    4e01 <__cxa_finalize@plt+0xfe9>
    4d7a:	nop    WORD PTR [rax+rax*1+0x0]
    4d80:	cmp    BYTE PTR [r13+0x1e],0x0
    4d85:	je     4dd0 <__cxa_finalize@plt+0xfb8>
    4d87:	mov    r14d,esi
    4d8a:	and    r14d,0x12
    4d8e:	mov    eax,r14d
    4d91:	xor    eax,0xfff
    4d96:	jmp    4c3d <__cxa_finalize@plt+0xe25>
    4d9b:	nop    DWORD PTR [rax+rax*1+0x0]
    4da0:	movzx  esi,BYTE PTR [r13+0x25]
    4da5:	xor    edx,edx
    4da7:	mov    rcx,r13
    4daa:	mov    rdi,r12
    4dad:	call   6b10 <__cxa_finalize@plt+0x2cf8>
    4db2:	test   al,al
    4db4:	jne    4af4 <__cxa_finalize@plt+0xcdc>
    4dba:	cmp    BYTE PTR [r13+0x26],0x0
    4dbf:	je     4af4 <__cxa_finalize@plt+0xcdc>
    4dc5:	xor    eax,eax
    4dc7:	jmp    4e01 <__cxa_finalize@plt+0xfe9>
    4dc9:	nop    DWORD PTR [rax+0x0]
    4dd0:	xor    r14d,r14d
    4dd3:	mov    eax,0xfff
    4dd8:	jmp    4c3d <__cxa_finalize@plt+0xe25>
    4ddd:	nop    DWORD PTR [rax]
    4de0:	mov    eax,DWORD PTR [rbp-0x148]
    4de6:	and    eax,0xf000
    4deb:	cmp    eax,0x4000
    4df0:	jne    4e23 <__cxa_finalize@plt+0x100b>
    4df2:	mov    rax,QWORD PTR [rbp-0x178]
    4df9:	mov    BYTE PTR [rax],0x0
    4dfc:	mov    eax,0x1
    4e01:	mov    rcx,QWORD PTR [rbp-0x38]
    4e05:	xor    rcx,QWORD PTR fs:0x28
    4e0e:	jne    4f1b <__cxa_finalize@plt+0x1103>
    4e14:	lea    rsp,[rbp-0x28]
    4e18:	pop    rbx
    4e19:	pop    r12
    4e1b:	pop    r13
    4e1d:	pop    r14
    4e1f:	pop    r15
    4e21:	pop    rbp
    4e22:	ret    
    4e23:	mov    rsi,rbx
    4e26:	mov    edi,0x4
    4e2b:	call   10a80 <__cxa_finalize@plt+0xcc68>
    4e30:	lea    rsi,[rip+0x15311]        # 1a148 <_IO_stdin_used@@Base+0x7a8>
    4e37:	mov    rbx,rax
    4e3a:	mov    edx,0x5
    4e3f:	xor    edi,edi
    4e41:	call   3700 <dcgettext@plt>
    4e46:	mov    rcx,rbx
    4e49:	mov    rdx,rax
    4e4c:	xor    esi,esi
    4e4e:	xor    eax,eax
    4e50:	xor    edi,edi
    4e52:	call   3c20 <error@plt>
    4e57:	xor    eax,eax
    4e59:	jmp    4e01 <__cxa_finalize@plt+0xfe9>
    4e5b:	nop    DWORD PTR [rax+rax*1+0x0]
    4e60:	call   6e90 <__cxa_finalize@plt+0x3078>
    4e65:	mov    esi,DWORD PTR [rbp-0x148]
    4e6b:	not    eax
    4e6d:	and    r14d,eax
    4e70:	mov    edx,esi
    4e72:	mov    eax,esi
    4e74:	not    edx
    4e76:	test   edx,r14d
    4e79:	jne    4cc7 <__cxa_finalize@plt+0xeaf>
    4e7f:	jmp    4cb7 <__cxa_finalize@plt+0xe9f>
    4e84:	nop    DWORD PTR [rax+0x0]
    4e88:	mov    rdi,QWORD PTR [rbp-0x168]
    4e8f:	jmp    4a51 <__cxa_finalize@plt+0xc39>
    4e94:	mov    rsi,r12
    4e97:	mov    edi,0x4
    4e9c:	call   10a80 <__cxa_finalize@plt+0xcc68>
    4ea1:	lea    rsi,[rip+0x14b29]        # 199d1 <_IO_stdin_used@@Base+0x31>
    4ea8:	mov    r12,rax
    4eab:	mov    edx,0x5
    4eb0:	xor    edi,edi
    4eb2:	call   3700 <dcgettext@plt>
    4eb7:	mov    rbx,rax
    4eba:	call   3540 <__errno_location@plt>
    4ebf:	mov    esi,DWORD PTR [rax]
    4ec1:	mov    rcx,r12
    4ec4:	xor    eax,eax
    4ec6:	mov    rdx,rbx
    4ec9:	xor    edi,edi
    4ecb:	call   3c20 <error@plt>
    4ed0:	xor    eax,eax
    4ed2:	jmp    4e01 <__cxa_finalize@plt+0xfe9>
    4ed7:	mov    rsi,r12
    4eda:	jmp    4e26 <__cxa_finalize@plt+0x100e>
    4edf:	mov    rsi,r12
    4ee2:	mov    edi,0x4
    4ee7:	call   10a80 <__cxa_finalize@plt+0xcc68>
    4eec:	mov    edx,0x5
    4ef1:	mov    r12,rax
    4ef4:	lea    rsi,[rip+0x1522d]        # 1a128 <_IO_stdin_used@@Base+0x788>
    4efb:	jmp    4eb0 <__cxa_finalize@plt+0x1098>
    4efd:	mov    rsi,r12
    4f00:	mov    edi,0x4
    4f05:	call   10a80 <__cxa_finalize@plt+0xcc68>
    4f0a:	mov    edx,0x5
    4f0f:	mov    r12,rax
    4f12:	lea    rsi,[rip+0x14ad1]        # 199ea <_IO_stdin_used@@Base+0x4a>
    4f19:	jmp    4eb0 <__cxa_finalize@plt+0x1098>
    4f1b:	call   3760 <__stack_chk_fail@plt>
    4f20:	push   rbp
    4f21:	mov    rbp,rsp
    4f24:	push   r15
    4f26:	push   r14
    4f28:	push   r13
    4f2a:	push   r12
    4f2c:	mov    r14,rsi
    4f2f:	push   rbx
    4f30:	mov    r12,rdi
    4f33:	mov    rbx,rdx
    4f36:	mov    r13,rcx
    4f39:	sub    rsp,0x48
    4f3d:	mov    rax,QWORD PTR fs:0x28
    4f46:	mov    QWORD PTR [rbp-0x38],rax
    4f4a:	xor    eax,eax
    4f4c:	call   3720 <strlen@plt>
    4f51:	lea    rdx,[rax+0x1]
    4f55:	add    rax,0x1f
    4f59:	mov    rsi,r12
    4f5c:	and    rax,0xfffffffffffffff0
    4f60:	sub    rsp,rax
    4f63:	lea    rdi,[rsp+0xf]
    4f68:	and    rdi,0xfffffffffffffff0
    4f6c:	call   3a40 <memcpy@plt>
    4f71:	mov    r12,rax
    4f74:	add    rax,r14
    4f77:	test   rbx,rbx
    4f7a:	mov    QWORD PTR [rbp-0x68],rax
    4f7e:	je     5130 <__cxa_finalize@plt+0x1318>
    4f84:	lea    r15,[rbp-0x60]
    4f88:	jmp    4fd2 <__cxa_finalize@plt+0x11ba>
    4f8a:	nop    WORD PTR [rax+rax*1+0x0]
    4f90:	cmp    BYTE PTR [r13+0x1d],0x0
    4f95:	jne    5060 <__cxa_finalize@plt+0x1248>
    4f9b:	movzx  r14d,BYTE PTR [r13+0x1e]
    4fa0:	test   r14b,r14b
    4fa3:	jne    50b0 <__cxa_finalize@plt+0x1298>
    4fa9:	cmp    BYTE PTR [rbx+0x90],0x0
    4fb0:	jne    50d8 <__cxa_finalize@plt+0x12c0>
    4fb6:	mov    rax,QWORD PTR [rbx+0x98]
    4fbd:	mov    BYTE PTR [r12+rax*1],0x2f
    4fc2:	mov    rbx,QWORD PTR [rbx+0xa0]
    4fc9:	test   rbx,rbx
    4fcc:	je     5130 <__cxa_finalize@plt+0x1318>
    4fd2:	cmp    BYTE PTR [r13+0x1f],0x0
    4fd7:	mov    rax,QWORD PTR [rbx+0x98]
    4fde:	mov    BYTE PTR [r12+rax*1],0x0
    4fe3:	je     4f90 <__cxa_finalize@plt+0x1178>
    4fe5:	mov    rax,QWORD PTR [rbx+0x50]
    4fe9:	mov    rdx,QWORD PTR [rbx+0x48]
    4fed:	mov    rsi,r15
    4ff0:	mov    rdi,r12
    4ff3:	mov    QWORD PTR [rbp-0x60],rdx
    4ff7:	mov    QWORD PTR [rbp-0x58],rax
    4ffb:	mov    rdx,QWORD PTR [rbx+0x58]
    4fff:	mov    rax,QWORD PTR [rbx+0x60]
    5003:	mov    QWORD PTR [rbp-0x50],rdx
    5007:	mov    QWORD PTR [rbp-0x48],rax
    500b:	call   12730 <__cxa_finalize@plt+0xe918>
    5010:	test   eax,eax
    5012:	je     4f90 <__cxa_finalize@plt+0x1178>
    5018:	mov    rsi,r12
    501b:	mov    edi,0x4
    5020:	xor    r14d,r14d
    5023:	call   10a80 <__cxa_finalize@plt+0xcc68>
    5028:	lea    rsi,[rip+0x15141]        # 1a170 <_IO_stdin_used@@Base+0x7d0>
    502f:	mov    edx,0x5
    5034:	xor    edi,edi
    5036:	mov    r12,rax
    5039:	call   3700 <dcgettext@plt>
    503e:	mov    rbx,rax
    5041:	call   3540 <__errno_location@plt>
    5046:	mov    esi,DWORD PTR [rax]
    5048:	mov    rcx,r12
    504b:	mov    rdx,rbx
    504e:	xor    edi,edi
    5050:	xor    eax,eax
    5052:	call   3c20 <error@plt>
    5057:	jmp    5136 <__cxa_finalize@plt+0x131e>
    505c:	nop    DWORD PTR [rax+0x0]
    5060:	mov    edx,DWORD PTR [rbx+0x20]
    5063:	mov    esi,DWORD PTR [rbx+0x1c]
    5066:	mov    rdi,r12
    5069:	call   3b20 <lchown@plt>
    506e:	test   eax,eax
    5070:	je     4f9b <__cxa_finalize@plt+0x1183>
    5076:	mov    rdi,r13
    5079:	call   6c70 <__cxa_finalize@plt+0x2e58>
    507e:	test   al,al
    5080:	mov    r14d,eax
    5083:	je     5157 <__cxa_finalize@plt+0x133f>
    5089:	mov    edx,DWORD PTR [rbx+0x20]
    508c:	mov    esi,0xffffffff
    5091:	mov    rdi,r12
    5094:	call   3b20 <lchown@plt>
    5099:	movzx  r14d,BYTE PTR [r13+0x1e]
    509e:	test   r14b,r14b
    50a1:	je     4fa9 <__cxa_finalize@plt+0x1191>
    50a7:	nop    WORD PTR [rax+rax*1+0x0]
    50b0:	mov    r8d,DWORD PTR [rbx+0x18]
    50b4:	mov    rdi,QWORD PTR [rbp-0x68]
    50b8:	mov    ecx,0xffffffff
    50bd:	mov    rdx,r12
    50c0:	mov    esi,ecx
    50c2:	call   bfd0 <__cxa_finalize@plt+0x81b8>
    50c7:	test   eax,eax
    50c9:	je     4fb6 <__cxa_finalize@plt+0x119e>
    50cf:	xor    r14d,r14d
    50d2:	jmp    5136 <__cxa_finalize@plt+0x131e>
    50d4:	nop    DWORD PTR [rax+0x0]
    50d8:	mov    esi,DWORD PTR [rbx+0x18]
    50db:	mov    rdi,r12
    50de:	call   3be0 <chmod@plt>
    50e3:	test   eax,eax
    50e5:	je     4fb6 <__cxa_finalize@plt+0x119e>
    50eb:	mov    rsi,r12
    50ee:	mov    edi,0x4
    50f3:	call   10a80 <__cxa_finalize@plt+0xcc68>
    50f8:	lea    rsi,[rip+0x150b9]        # 1a1b8 <_IO_stdin_used@@Base+0x818>
    50ff:	mov    r12,rax
    5102:	mov    edx,0x5
    5107:	xor    edi,edi
    5109:	call   3700 <dcgettext@plt>
    510e:	mov    rbx,rax
    5111:	call   3540 <__errno_location@plt>
    5116:	mov    esi,DWORD PTR [rax]
    5118:	mov    rcx,r12
    511b:	mov    rdx,rbx
    511e:	xor    edi,edi
    5120:	xor    eax,eax
    5122:	call   3c20 <error@plt>
    5127:	jmp    5136 <__cxa_finalize@plt+0x131e>
    5129:	nop    DWORD PTR [rax+0x0]
    5130:	mov    r14d,0x1
    5136:	mov    rcx,QWORD PTR [rbp-0x38]
    513a:	xor    rcx,QWORD PTR fs:0x28
    5143:	mov    eax,r14d
    5146:	jne    5175 <__cxa_finalize@plt+0x135d>
    5148:	lea    rsp,[rbp-0x28]
    514c:	pop    rbx
    514d:	pop    r12
    514f:	pop    r13
    5151:	pop    r14
    5153:	pop    r15
    5155:	pop    rbp
    5156:	ret    
    5157:	mov    rsi,r12
    515a:	mov    edi,0x4
    515f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    5164:	mov    edx,0x5
    5169:	mov    r12,rax
    516c:	lea    rsi,[rip+0x1501d]        # 1a190 <_IO_stdin_used@@Base+0x7f0>
    5173:	jmp    5107 <__cxa_finalize@plt+0x12ef>
    5175:	call   3760 <__stack_chk_fail@plt>
    517a:	nop    WORD PTR [rax+rax*1+0x0]
    5180:	push   r12
    5182:	push   rbp
    5183:	mov    edx,0x5
    5188:	push   rbx
    5189:	mov    ebp,edi
    518b:	add    rsp,0xffffffffffffff80
    518f:	mov    rbx,QWORD PTR [rip+0x21d40a]        # 2225a0 <program_name@@Base>
    5196:	mov    rax,QWORD PTR fs:0x28
    519f:	mov    QWORD PTR [rsp+0x78],rax
    51a4:	xor    eax,eax
    51a6:	test   edi,edi
    51a8:	je     51d8 <__cxa_finalize@plt+0x13c0>
    51aa:	lea    rsi,[rip+0x1502f]        # 1a1e0 <_IO_stdin_used@@Base+0x840>
    51b1:	xor    edi,edi
    51b3:	call   3700 <dcgettext@plt>
    51b8:	mov    rdi,QWORD PTR [rip+0x21cf21]        # 2220e0 <stderr@@GLIBC_2.2.5>
    51bf:	mov    rdx,rax
    51c2:	mov    rcx,rbx
    51c5:	mov    esi,0x1
    51ca:	xor    eax,eax
    51cc:	call   3d70 <__fprintf_chk@plt>
    51d1:	mov    edi,ebp
    51d3:	call   3d50 <exit@plt>
    51d8:	lea    rsi,[rip+0x15029]        # 1a208 <_IO_stdin_used@@Base+0x868>
    51df:	xor    edi,edi
    51e1:	call   3700 <dcgettext@plt>
    51e6:	mov    r8,rbx
    51e9:	mov    rcx,rbx
    51ec:	mov    rdx,rbx
    51ef:	mov    rsi,rax
    51f2:	mov    edi,0x1
    51f7:	xor    eax,eax
    51f9:	call   3bb0 <__printf_chk@plt>
    51fe:	mov    rbx,QWORD PTR [rip+0x21cea3]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5205:	lea    rsi,[rip+0x1507c]        # 1a288 <_IO_stdin_used@@Base+0x8e8>
    520c:	mov    edx,0x5
    5211:	xor    edi,edi
    5213:	call   3700 <dcgettext@plt>
    5218:	mov    rsi,rbx
    521b:	mov    rdi,rax
    521e:	call   3950 <fputs_unlocked@plt>
    5223:	mov    rbx,QWORD PTR [rip+0x21ce7e]        # 2220a8 <stdout@@GLIBC_2.2.5>
    522a:	lea    rsi,[rip+0x15097]        # 1a2c8 <_IO_stdin_used@@Base+0x928>
    5231:	mov    edx,0x5
    5236:	xor    edi,edi
    5238:	call   3700 <dcgettext@plt>
    523d:	mov    rsi,rbx
    5240:	mov    rdi,rax
    5243:	call   3950 <fputs_unlocked@plt>
    5248:	mov    rbx,QWORD PTR [rip+0x21ce59]        # 2220a8 <stdout@@GLIBC_2.2.5>
    524f:	lea    rsi,[rip+0x150c2]        # 1a318 <_IO_stdin_used@@Base+0x978>
    5256:	mov    edx,0x5
    525b:	xor    edi,edi
    525d:	call   3700 <dcgettext@plt>
    5262:	mov    rsi,rbx
    5265:	mov    rdi,rax
    5268:	call   3950 <fputs_unlocked@plt>
    526d:	mov    rbx,QWORD PTR [rip+0x21ce34]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5274:	lea    rsi,[rip+0x1525d]        # 1a4d8 <_IO_stdin_used@@Base+0xb38>
    527b:	mov    edx,0x5
    5280:	xor    edi,edi
    5282:	call   3700 <dcgettext@plt>
    5287:	mov    rsi,rbx
    528a:	mov    rdi,rax
    528d:	call   3950 <fputs_unlocked@plt>
    5292:	mov    rbx,QWORD PTR [rip+0x21ce0f]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5299:	lea    rsi,[rip+0x153e8]        # 1a688 <_IO_stdin_used@@Base+0xce8>
    52a0:	mov    edx,0x5
    52a5:	xor    edi,edi
    52a7:	call   3700 <dcgettext@plt>
    52ac:	mov    rsi,rbx
    52af:	mov    rdi,rax
    52b2:	call   3950 <fputs_unlocked@plt>
    52b7:	mov    rbx,QWORD PTR [rip+0x21cdea]        # 2220a8 <stdout@@GLIBC_2.2.5>
    52be:	lea    rsi,[rip+0x15453]        # 1a718 <_IO_stdin_used@@Base+0xd78>
    52c5:	mov    edx,0x5
    52ca:	xor    edi,edi
    52cc:	call   3700 <dcgettext@plt>
    52d1:	mov    rsi,rbx
    52d4:	mov    rdi,rax
    52d7:	call   3950 <fputs_unlocked@plt>
    52dc:	mov    rbx,QWORD PTR [rip+0x21cdc5]        # 2220a8 <stdout@@GLIBC_2.2.5>
    52e3:	lea    rsi,[rip+0x154fe]        # 1a7e8 <_IO_stdin_used@@Base+0xe48>
    52ea:	mov    edx,0x5
    52ef:	xor    edi,edi
    52f1:	call   3700 <dcgettext@plt>
    52f6:	mov    rsi,rbx
    52f9:	mov    rdi,rax
    52fc:	call   3950 <fputs_unlocked@plt>
    5301:	mov    rbx,QWORD PTR [rip+0x21cda0]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5308:	lea    rsi,[rip+0x15631]        # 1a940 <_IO_stdin_used@@Base+0xfa0>
    530f:	mov    edx,0x5
    5314:	xor    edi,edi
    5316:	call   3700 <dcgettext@plt>
    531b:	mov    rsi,rbx
    531e:	mov    rdi,rax
    5321:	call   3950 <fputs_unlocked@plt>
    5326:	mov    rbx,QWORD PTR [rip+0x21cd7b]        # 2220a8 <stdout@@GLIBC_2.2.5>
    532d:	lea    rsi,[rip+0x156a4]        # 1a9d8 <_IO_stdin_used@@Base+0x1038>
    5334:	mov    edx,0x5
    5339:	xor    edi,edi
    533b:	call   3700 <dcgettext@plt>
    5340:	mov    rsi,rbx
    5343:	mov    rdi,rax
    5346:	call   3950 <fputs_unlocked@plt>
    534b:	mov    rbx,QWORD PTR [rip+0x21cd56]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5352:	lea    rsi,[rip+0x1579f]        # 1aaf8 <_IO_stdin_used@@Base+0x1158>
    5359:	mov    edx,0x5
    535e:	xor    edi,edi
    5360:	call   3700 <dcgettext@plt>
    5365:	mov    rsi,rbx
    5368:	mov    rdi,rax
    536b:	call   3950 <fputs_unlocked@plt>
    5370:	mov    rbx,QWORD PTR [rip+0x21cd31]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5377:	lea    rsi,[rip+0x15842]        # 1abc0 <_IO_stdin_used@@Base+0x1220>
    537e:	mov    edx,0x5
    5383:	xor    edi,edi
    5385:	call   3700 <dcgettext@plt>
    538a:	mov    rsi,rbx
    538d:	mov    rdi,rax
    5390:	call   3950 <fputs_unlocked@plt>
    5395:	mov    rbx,QWORD PTR [rip+0x21cd0c]        # 2220a8 <stdout@@GLIBC_2.2.5>
    539c:	lea    rsi,[rip+0x1592d]        # 1acd0 <_IO_stdin_used@@Base+0x1330>
    53a3:	mov    edx,0x5
    53a8:	xor    edi,edi
    53aa:	call   3700 <dcgettext@plt>
    53af:	mov    rsi,rbx
    53b2:	mov    rdi,rax
    53b5:	call   3950 <fputs_unlocked@plt>
    53ba:	mov    rbx,QWORD PTR [rip+0x21cce7]        # 2220a8 <stdout@@GLIBC_2.2.5>
    53c1:	lea    rsi,[rip+0x15a48]        # 1ae10 <_IO_stdin_used@@Base+0x1470>
    53c8:	mov    edx,0x5
    53cd:	xor    edi,edi
    53cf:	call   3700 <dcgettext@plt>
    53d4:	mov    rsi,rbx
    53d7:	mov    rdi,rax
    53da:	call   3950 <fputs_unlocked@plt>
    53df:	mov    rbx,QWORD PTR [rip+0x21ccc2]        # 2220a8 <stdout@@GLIBC_2.2.5>
    53e6:	lea    rsi,[rip+0x15b3b]        # 1af28 <_IO_stdin_used@@Base+0x1588>
    53ed:	mov    edx,0x5
    53f2:	xor    edi,edi
    53f4:	call   3700 <dcgettext@plt>
    53f9:	mov    rsi,rbx
    53fc:	mov    rdi,rax
    53ff:	call   3950 <fputs_unlocked@plt>
    5404:	mov    rbx,QWORD PTR [rip+0x21cc9d]        # 2220a8 <stdout@@GLIBC_2.2.5>
    540b:	lea    rsi,[rip+0x15b46]        # 1af58 <_IO_stdin_used@@Base+0x15b8>
    5412:	mov    edx,0x5
    5417:	xor    edi,edi
    5419:	call   3700 <dcgettext@plt>
    541e:	mov    rsi,rbx
    5421:	mov    rdi,rax
    5424:	call   3950 <fputs_unlocked@plt>
    5429:	mov    rbx,QWORD PTR [rip+0x21cc78]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5430:	lea    rsi,[rip+0x15b59]        # 1af90 <_IO_stdin_used@@Base+0x15f0>
    5437:	mov    edx,0x5
    543c:	xor    edi,edi
    543e:	call   3700 <dcgettext@plt>
    5443:	mov    rsi,rbx
    5446:	mov    rdi,rax
    5449:	call   3950 <fputs_unlocked@plt>
    544e:	mov    rbx,QWORD PTR [rip+0x21cc53]        # 2220a8 <stdout@@GLIBC_2.2.5>
    5455:	lea    rsi,[rip+0x15d7c]        # 1b1d8 <_IO_stdin_used@@Base+0x1838>
    545c:	mov    edx,0x5
    5461:	xor    edi,edi
    5463:	call   3700 <dcgettext@plt>
    5468:	mov    rsi,rbx
    546b:	mov    rdi,rax
    546e:	call   3950 <fputs_unlocked@plt>
    5473:	mov    rbx,QWORD PTR [rip+0x21cc2e]        # 2220a8 <stdout@@GLIBC_2.2.5>
    547a:	lea    rsi,[rip+0x15e37]        # 1b2b8 <_IO_stdin_used@@Base+0x1918>
    5481:	mov    edx,0x5
    5486:	xor    edi,edi
    5488:	call   3700 <dcgettext@plt>
    548d:	mov    rsi,rbx
    5490:	mov    rdi,rax
    5493:	call   3950 <fputs_unlocked@plt>
    5498:	mov    rbx,QWORD PTR [rip+0x21cc09]        # 2220a8 <stdout@@GLIBC_2.2.5>
    549f:	lea    rsi,[rip+0x15ef2]        # 1b398 <_IO_stdin_used@@Base+0x19f8>
    54a6:	mov    edx,0x5
    54ab:	xor    edi,edi
    54ad:	call   3700 <dcgettext@plt>
    54b2:	mov    rsi,rbx
    54b5:	mov    rdi,rax
    54b8:	lea    rbx,[rip+0x14546]        # 19a05 <_IO_stdin_used@@Base+0x65>
    54bf:	call   3950 <fputs_unlocked@plt>
    54c4:	lea    rax,[rip+0x1453d]        # 19a08 <_IO_stdin_used@@Base+0x68>
    54cb:	lea    rcx,[rip+0x14577]        # 19a49 <_IO_stdin_used@@Base+0xa9>
    54d2:	mov    QWORD PTR [rsp+0x60],0x0
    54db:	mov    QWORD PTR [rsp+0x68],0x0
    54e4:	mov    QWORD PTR [rsp],rax
    54e8:	lea    rax,[rip+0x1451b]        # 19a0a <_IO_stdin_used@@Base+0x6a>
    54ef:	mov    QWORD PTR [rsp+0x30],rcx
    54f4:	lea    rcx,[rip+0x14558]        # 19a53 <_IO_stdin_used@@Base+0xb3>
    54fb:	mov    QWORD PTR [rsp+0x8],rax
    5500:	lea    rax,[rip+0x1457b]        # 19a82 <_IO_stdin_used@@Base+0xe2>
    5507:	mov    QWORD PTR [rsp+0x40],rcx
    550c:	lea    rcx,[rip+0x1454a]        # 19a5d <_IO_stdin_used@@Base+0xbd>
    5513:	mov    QWORD PTR [rsp+0x10],rax
    5518:	lea    rax,[rip+0x144fb]        # 19a1a <_IO_stdin_used@@Base+0x7a>
    551f:	mov    QWORD PTR [rsp+0x50],rcx
    5524:	mov    QWORD PTR [rsp+0x18],rax
    5529:	lea    rax,[rip+0x14500]        # 19a30 <_IO_stdin_used@@Base+0x90>
    5530:	mov    QWORD PTR [rsp+0x20],rax
    5535:	lea    rax,[rip+0x144fe]        # 19a3a <_IO_stdin_used@@Base+0x9a>
    553c:	mov    QWORD PTR [rsp+0x28],rax
    5541:	mov    QWORD PTR [rsp+0x38],rax
    5546:	mov    QWORD PTR [rsp+0x48],rax
    554b:	mov    QWORD PTR [rsp+0x58],rax
    5550:	mov    rax,rsp
    5553:	nop    DWORD PTR [rax+rax*1+0x0]
    5558:	add    rax,0x10
    555c:	mov    rdi,QWORD PTR [rax]
    555f:	test   rdi,rdi
    5562:	je     5570 <__cxa_finalize@plt+0x1758>
    5564:	mov    ecx,0x3
    5569:	mov    rsi,rbx
    556c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    556e:	jne    5558 <__cxa_finalize@plt+0x1740>
    5570:	mov    r12,QWORD PTR [rax+0x8]
    5574:	xor    edi,edi
    5576:	mov    edx,0x5
    557b:	lea    rsi,[rip+0x144e5]        # 19a67 <_IO_stdin_used@@Base+0xc7>
    5582:	test   r12,r12
    5585:	je     564c <__cxa_finalize@plt+0x1834>
    558b:	call   3700 <dcgettext@plt>
    5590:	lea    rcx,[rip+0x15ea9]        # 1b440 <_IO_stdin_used@@Base+0x1aa0>
    5597:	lea    rdx,[rip+0x144e0]        # 19a7e <_IO_stdin_used@@Base+0xde>
    559e:	mov    rsi,rax
    55a1:	mov    edi,0x1
    55a6:	xor    eax,eax
    55a8:	call   3bb0 <__printf_chk@plt>
    55ad:	xor    esi,esi
    55af:	mov    edi,0x5
    55b4:	call   3ba0 <setlocale@plt>
    55b9:	test   rax,rax
    55bc:	je     55da <__cxa_finalize@plt+0x17c2>
    55be:	lea    rsi,[rip+0x144c7]        # 19a8c <_IO_stdin_used@@Base+0xec>
    55c5:	mov    edx,0x3
    55ca:	mov    rdi,rax
    55cd:	call   3580 <strncmp@plt>
    55d2:	test   eax,eax
    55d4:	jne    56e1 <__cxa_finalize@plt+0x18c9>
    55da:	lea    rsi,[rip+0x15ecf]        # 1b4b0 <_IO_stdin_used@@Base+0x1b10>
    55e1:	xor    edi,edi
    55e3:	mov    edx,0x5
    55e8:	call   3700 <dcgettext@plt>
    55ed:	lea    rcx,[rip+0x14411]        # 19a05 <_IO_stdin_used@@Base+0x65>
    55f4:	lea    rdx,[rip+0x15e45]        # 1b440 <_IO_stdin_used@@Base+0x1aa0>
    55fb:	mov    rsi,rax
    55fe:	mov    edi,0x1
    5603:	xor    eax,eax
    5605:	call   3bb0 <__printf_chk@plt>
    560a:	cmp    r12,rbx
    560d:	lea    rcx,[rip+0x14410]        # 19a24 <_IO_stdin_used@@Base+0x84>
    5614:	lea    rbx,[rip+0x16445]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
    561b:	cmove  rbx,rcx
    561f:	lea    rsi,[rip+0x15eaa]        # 1b4d0 <_IO_stdin_used@@Base+0x1b30>
    5626:	xor    edi,edi
    5628:	mov    edx,0x5
    562d:	call   3700 <dcgettext@plt>
    5632:	mov    rcx,rbx
    5635:	mov    rsi,rax
    5638:	mov    rdx,r12
    563b:	mov    edi,0x1
    5640:	xor    eax,eax
    5642:	call   3bb0 <__printf_chk@plt>
    5647:	jmp    51d1 <__cxa_finalize@plt+0x13b9>
    564c:	call   3700 <dcgettext@plt>
    5651:	lea    rcx,[rip+0x15de8]        # 1b440 <_IO_stdin_used@@Base+0x1aa0>
    5658:	lea    rdx,[rip+0x1441f]        # 19a7e <_IO_stdin_used@@Base+0xde>
    565f:	mov    rsi,rax
    5662:	mov    edi,0x1
    5667:	xor    eax,eax
    5669:	call   3bb0 <__printf_chk@plt>
    566e:	xor    esi,esi
    5670:	mov    edi,0x5
    5675:	call   3ba0 <setlocale@plt>
    567a:	test   rax,rax
    567d:	je     5697 <__cxa_finalize@plt+0x187f>
    567f:	lea    rsi,[rip+0x14406]        # 19a8c <_IO_stdin_used@@Base+0xec>
    5686:	mov    edx,0x3
    568b:	mov    rdi,rax
    568e:	call   3580 <strncmp@plt>
    5693:	test   eax,eax
    5695:	jne    56da <__cxa_finalize@plt+0x18c2>
    5697:	lea    rsi,[rip+0x15e12]        # 1b4b0 <_IO_stdin_used@@Base+0x1b10>
    569e:	mov    edx,0x5
    56a3:	xor    edi,edi
    56a5:	lea    r12,[rip+0x14359]        # 19a05 <_IO_stdin_used@@Base+0x65>
    56ac:	lea    rbx,[rip+0x14371]        # 19a24 <_IO_stdin_used@@Base+0x84>
    56b3:	call   3700 <dcgettext@plt>
    56b8:	lea    rcx,[rip+0x14346]        # 19a05 <_IO_stdin_used@@Base+0x65>
    56bf:	lea    rdx,[rip+0x15d7a]        # 1b440 <_IO_stdin_used@@Base+0x1aa0>
    56c6:	mov    rsi,rax
    56c9:	mov    edi,0x1
    56ce:	xor    eax,eax
    56d0:	call   3bb0 <__printf_chk@plt>
    56d5:	jmp    561f <__cxa_finalize@plt+0x1807>
    56da:	lea    r12,[rip+0x14324]        # 19a05 <_IO_stdin_used@@Base+0x65>
    56e1:	lea    rsi,[rip+0x15d80]        # 1b468 <_IO_stdin_used@@Base+0x1ac8>
    56e8:	xor    edi,edi
    56ea:	mov    edx,0x5
    56ef:	call   3700 <dcgettext@plt>
    56f4:	lea    rdx,[rip+0x1430a]        # 19a05 <_IO_stdin_used@@Base+0x65>
    56fb:	mov    rsi,rax
    56fe:	mov    edi,0x1
    5703:	xor    eax,eax
    5705:	call   3bb0 <__printf_chk@plt>
    570a:	jmp    55da <__cxa_finalize@plt+0x17c2>
    570f:	nop
    5710:	push   rbp
    5711:	xor    eax,eax
    5713:	mov    rbp,rsp
    5716:	push   r15
    5718:	push   r14
    571a:	push   r13
    571c:	push   r12
    571e:	movsxd r12,edi
    5721:	push   rbx
    5722:	mov    rbx,rsi
    5725:	sub    rsp,0xe8
    572c:	mov    QWORD PTR [rbp-0xf8],rdx
    5733:	mov    BYTE PTR [rbp-0xe2],0x0
    573a:	mov    rsi,QWORD PTR fs:0x28
    5743:	mov    QWORD PTR [rbp-0x38],rsi
    5747:	xor    esi,esi
    5749:	test   rdx,rdx
    574c:	sete   al
    574f:	cmp    eax,r12d
    5752:	jge    5b88 <__cxa_finalize@plt+0x1d70>
    5758:	test   cl,cl
    575a:	mov    r14,r8
    575d:	je     5852 <__cxa_finalize@plt+0x1a3a>
    5763:	cmp    QWORD PTR [rbp-0xf8],0x0
    576b:	jne    5b64 <__cxa_finalize@plt+0x1d4c>
    5771:	cmp    r12d,0x2
    5775:	jg     5b25 <__cxa_finalize@plt+0x1d0d>
    577b:	mov    rdi,QWORD PTR [rbx+r12*8-0x8]
    5780:	lea    rdx,[rbp-0xe2]
    5787:	lea    rsi,[rbp-0xd0]
    578e:	call   48a0 <__cxa_finalize@plt+0xa88>
    5793:	cmp    BYTE PTR [rip+0x21c9af],0x0        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    579a:	mov    r12,QWORD PTR [rbx]
    579d:	mov    rbx,QWORD PTR [rbx+0x8]
    57a1:	jne    5bb1 <__cxa_finalize@plt+0x1d99>
    57a7:	cmp    BYTE PTR [r14+0x16],0x0
    57ac:	je     5810 <__cxa_finalize@plt+0x19f8>
    57ae:	mov    r13d,DWORD PTR [r14]
    57b1:	test   r13d,r13d
    57b4:	je     5810 <__cxa_finalize@plt+0x19f8>
    57b6:	mov    rsi,rbx
    57b9:	mov    rdi,r12
    57bc:	call   39c0 <strcmp@plt>
    57c1:	test   eax,eax
    57c3:	jne    5810 <__cxa_finalize@plt+0x19f8>
    57c5:	cmp    BYTE PTR [rbp-0xe2],0x0
    57cc:	jne    5810 <__cxa_finalize@plt+0x19f8>
    57ce:	mov    eax,DWORD PTR [rbp-0xb8]
    57d4:	and    eax,0xf000
    57d9:	cmp    eax,0x8000
    57de:	jne    5810 <__cxa_finalize@plt+0x19f8>
    57e0:	mov    rdi,rbx
    57e3:	mov    esi,r13d
    57e6:	call   cb50 <__cxa_finalize@plt+0x8d38>
    57eb:	mov    rsi,r14
    57ee:	lea    r14,[rip+0x21c90b]        # 222100 <stderr@@GLIBC_2.2.5+0x20>
    57f5:	lea    rdi,[rip+0x21c904]        # 222100 <stderr@@GLIBC_2.2.5+0x20>
    57fc:	mov    ecx,0x12
    5801:	mov    rbx,rax
    5804:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    5806:	mov    DWORD PTR [rip+0x21c8f0],0x0        # 222100 <stderr@@GLIBC_2.2.5+0x20>
    5810:	lea    r8,[rbp-0xd8]
    5817:	xor    r9d,r9d
    581a:	mov    rcx,r14
    581d:	xor    edx,edx
    581f:	mov    rsi,rbx
    5822:	mov    rdi,r12
    5825:	call   aec0 <__cxa_finalize@plt+0x70a8>
    582a:	mov    r15d,eax
    582d:	mov    rcx,QWORD PTR [rbp-0x38]
    5831:	xor    rcx,QWORD PTR fs:0x28
    583a:	mov    eax,r15d
    583d:	jne    5bac <__cxa_finalize@plt+0x1d94>
    5843:	lea    rsp,[rbp-0x28]
    5847:	pop    rbx
    5848:	pop    r12
    584a:	pop    r13
    584c:	pop    r14
    584e:	pop    r15
    5850:	pop    rbp
    5851:	ret    
    5852:	cmp    QWORD PTR [rbp-0xf8],0x0
    585a:	je     5a96 <__cxa_finalize@plt+0x1c7e>
    5860:	cmp    r12d,0x1
    5864:	jne    5a81 <__cxa_finalize@plt+0x1c69>
    586a:	lea    eax,[r12-0x1]
    586f:	mov    r15d,0x1
    5875:	lea    rax,[rbx+rax*8+0x8]
    587a:	mov    QWORD PTR [rbp-0x100],rax
    5881:	lea    rax,[rbp-0xe1]
    5888:	mov    QWORD PTR [rbp-0x110],rax
    588f:	lea    rax,[rbp-0xd8]
    5896:	mov    QWORD PTR [rbp-0x108],rax
    589d:	jmp    594b <__cxa_finalize@plt+0x1b33>
    58a2:	nop    WORD PTR [rax+rax*1+0x0]
    58a8:	sub    rsp,rax
    58ab:	mov    rsi,r12
    58ae:	lea    rdi,[rsp+0xf]
    58b3:	and    rdi,0xfffffffffffffff0
    58b7:	call   3a40 <memcpy@plt>
    58bc:	mov    rdi,rax
    58bf:	mov    r13,rax
    58c2:	call   d6b0 <__cxa_finalize@plt+0x9898>
    58c7:	mov    rdx,QWORD PTR [rbp-0x108]
    58ce:	mov    rdi,QWORD PTR [rbp-0xf8]
    58d5:	mov    rsi,r13
    58d8:	call   da30 <__cxa_finalize@plt+0x9c18>
    58dd:	cmp    BYTE PTR [r14+0x2e],0x0
    58e2:	mov    rsi,QWORD PTR [rbp-0xd8]
    58e9:	mov    r13,rax
    58ec:	lea    rax,[rip+0x1419d]        # 19a90 <_IO_stdin_used@@Base+0xf0>
    58f3:	mov    edx,0x0
    58f8:	lea    rcx,[rbp-0xe0]
    58ff:	lea    r8,[rbp-0xe2]
    5906:	mov    r9,r14
    5909:	mov    rdi,r13
    590c:	cmovne rdx,rax
    5910:	sub    rsi,r13
    5913:	call   4960 <__cxa_finalize@plt+0xb48>
    5918:	test   al,al
    591a:	jne    59d4 <__cxa_finalize@plt+0x1bbc>
    5920:	movzx  eax,BYTE PTR [rip+0x21c822]        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    5927:	xor    r15d,r15d
    592a:	test   al,al
    592c:	jne    5a43 <__cxa_finalize@plt+0x1c2b>
    5932:	mov    rdi,r13
    5935:	add    rbx,0x8
    5939:	call   3e10 <free@plt>
    593e:	cmp    QWORD PTR [rbp-0x100],rbx
    5945:	je     582d <__cxa_finalize@plt+0x1a15>
    594b:	cmp    BYTE PTR [rip+0x21c7f6],0x0        # 222148 <stderr@@GLIBC_2.2.5+0x68>
    5952:	mov    QWORD PTR [rbp-0xd8],0x0
    595d:	mov    r12,QWORD PTR [rbx]
    5960:	jne    5a58 <__cxa_finalize@plt+0x1c40>
    5966:	mov    rdi,r12
    5969:	call   3720 <strlen@plt>
    596e:	lea    rdx,[rax+0x1]
    5972:	add    rax,0x1f
    5976:	and    rax,0xfffffffffffffff0
    597a:	cmp    BYTE PTR [rip+0x21c7c8],0x0        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    5981:	jne    58a8 <__cxa_finalize@plt+0x1a90>
    5987:	sub    rsp,rax
    598a:	mov    rsi,r12
    598d:	lea    rdi,[rsp+0xf]
    5992:	and    rdi,0xfffffffffffffff0
    5996:	call   3a40 <memcpy@plt>
    599b:	mov    rdi,rax
    599e:	call   d600 <__cxa_finalize@plt+0x97e8>
    59a3:	mov    rdi,rax
    59a6:	mov    r13,rax
    59a9:	call   d6b0 <__cxa_finalize@plt+0x9898>
    59ae:	lea    rdi,[rip+0x14128]        # 19add <_IO_stdin_used@@Base+0x13d>
    59b5:	mov    ecx,0x3
    59ba:	mov    rsi,r13
    59bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    59bf:	jne    5a68 <__cxa_finalize@plt+0x1c50>
    59c5:	mov    rdi,QWORD PTR [rbp-0xf8]
    59cc:	call   132f0 <__cxa_finalize@plt+0xf4d8>
    59d1:	mov    r13,rax
    59d4:	movzx  edx,BYTE PTR [rbp-0xe2]
    59db:	mov    r8,QWORD PTR [rbp-0x110]
    59e2:	xor    r9d,r9d
    59e5:	mov    rcx,r14
    59e8:	mov    rsi,r13
    59eb:	mov    rdi,r12
    59ee:	call   aec0 <__cxa_finalize@plt+0x70a8>
    59f3:	and    r15d,eax
    59f6:	cmp    BYTE PTR [rip+0x21c74c],0x0        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    59fd:	je     5932 <__cxa_finalize@plt+0x1b1a>
    5a03:	mov    rsi,QWORD PTR [rbp-0xd8]
    5a0a:	mov    rdx,QWORD PTR [rbp-0xe0]
    5a11:	mov    rcx,r14
    5a14:	mov    rdi,r13
    5a17:	sub    rsi,r13
    5a1a:	call   4f20 <__cxa_finalize@plt+0x1108>
    5a1f:	and    r15d,eax
    5a22:	movzx  eax,BYTE PTR [rip+0x21c720]        # 222149 <stderr@@GLIBC_2.2.5+0x69>
    5a29:	jmp    592a <__cxa_finalize@plt+0x1b12>
    5a2e:	xchg   ax,ax
    5a30:	mov    rax,QWORD PTR [rdi+0xa0]
    5a37:	mov    QWORD PTR [rbp-0xe0],rax
    5a3e:	call   3e10 <free@plt>
    5a43:	mov    rdi,QWORD PTR [rbp-0xe0]
    5a4a:	test   rdi,rdi
    5a4d:	jne    5a30 <__cxa_finalize@plt+0x1c18>
    5a4f:	jmp    5932 <__cxa_finalize@plt+0x1b1a>
    5a54:	nop    DWORD PTR [rax+0x0]
    5a58:	mov    rdi,r12
    5a5b:	call   d6b0 <__cxa_finalize@plt+0x9898>
    5a60:	jmp    5966 <__cxa_finalize@plt+0x1b4e>
    5a65:	nop    DWORD PTR [rax]
    5a68:	mov    rdi,QWORD PTR [rbp-0xf8]
    5a6f:	mov    rsi,r13
    5a72:	xor    edx,edx
    5a74:	call   da30 <__cxa_finalize@plt+0x9c18>
    5a79:	mov    r13,rax
    5a7c:	jmp    59d4 <__cxa_finalize@plt+0x1bbc>
    5a81:	mov    rdi,r14
    5a84:	call   6bd0 <__cxa_finalize@plt+0x2db8>
    5a89:	mov    rdi,r14
    5a8c:	call   6c00 <__cxa_finalize@plt+0x2de8>
    5a91:	jmp    586a <__cxa_finalize@plt+0x1a52>
    5a96:	cmp    r12d,0x1
    5a9a:	je     5793 <__cxa_finalize@plt+0x197b>
    5aa0:	movsxd rax,r12d
    5aa3:	lea    rdx,[rbp-0xe2]
    5aaa:	lea    rsi,[rbp-0xd0]
    5ab1:	lea    r13,[rbx+rax*8-0x8]
    5ab6:	mov    rdi,QWORD PTR [r13+0x0]
    5aba:	call   48a0 <__cxa_finalize@plt+0xa88>
    5abf:	test   al,al
    5ac1:	jne    5b05 <__cxa_finalize@plt+0x1ced>
    5ac3:	cmp    r12d,0x2
    5ac7:	je     5793 <__cxa_finalize@plt+0x197b>
    5acd:	mov    rsi,QWORD PTR [r13+0x0]
    5ad1:	mov    edi,0x4
    5ad6:	call   10a80 <__cxa_finalize@plt+0xcc68>
    5adb:	lea    rsi,[rip+0x13fde]        # 19ac0 <_IO_stdin_used@@Base+0x120>
    5ae2:	mov    rbx,rax
    5ae5:	mov    edx,0x5
    5aea:	xor    edi,edi
    5aec:	call   3700 <dcgettext@plt>
    5af1:	mov    rcx,rbx
    5af4:	mov    rdx,rax
    5af7:	xor    esi,esi
    5af9:	mov    edi,0x1
    5afe:	xor    eax,eax
    5b00:	call   3c20 <error@plt>
    5b05:	sub    r12d,0x1
    5b09:	movsxd rax,r12d
    5b0c:	mov    rax,QWORD PTR [rbx+rax*8]
    5b10:	test   rax,rax
    5b13:	mov    QWORD PTR [rbp-0xf8],rax
    5b1a:	jne    5860 <__cxa_finalize@plt+0x1a48>
    5b20:	jmp    5793 <__cxa_finalize@plt+0x197b>
    5b25:	mov    rsi,QWORD PTR [rbx+0x10]
    5b29:	mov    edi,0x4
    5b2e:	call   10a80 <__cxa_finalize@plt+0xcc68>
    5b33:	lea    rsi,[rip+0x13f75]        # 19aaf <_IO_stdin_used@@Base+0x10f>
    5b3a:	mov    rbx,rax
    5b3d:	mov    edx,0x5
    5b42:	xor    edi,edi
    5b44:	call   3700 <dcgettext@plt>
    5b49:	mov    rcx,rbx
    5b4c:	mov    rdx,rax
    5b4f:	xor    esi,esi
    5b51:	xor    edi,edi
    5b53:	xor    eax,eax
    5b55:	call   3c20 <error@plt>
    5b5a:	mov    edi,0x1
    5b5f:	call   5180 <__cxa_finalize@plt+0x1368>
    5b64:	lea    rsi,[rip+0x159cd]        # 1b538 <_IO_stdin_used@@Base+0x1b98>
    5b6b:	mov    edx,0x5
    5b70:	xor    edi,edi
    5b72:	call   3700 <dcgettext@plt>
    5b77:	xor    esi,esi
    5b79:	mov    rdx,rax
    5b7c:	mov    edi,0x1
    5b81:	xor    eax,eax
    5b83:	call   3c20 <error@plt>
    5b88:	sub    r12d,0x1
    5b8c:	jne    5bd4 <__cxa_finalize@plt+0x1dbc>
    5b8e:	mov    rsi,QWORD PTR [rbx]
    5b91:	mov    edi,0x4
    5b96:	call   10a80 <__cxa_finalize@plt+0xcc68>
    5b9b:	mov    edx,0x5
    5ba0:	mov    rbx,rax
    5ba3:	lea    rsi,[rip+0x1595e]        # 1b508 <_IO_stdin_used@@Base+0x1b68>
    5baa:	jmp    5b42 <__cxa_finalize@plt+0x1d2a>
    5bac:	call   3760 <__stack_chk_fail@plt>
    5bb1:	lea    rsi,[rip+0x159c8]        # 1b580 <_IO_stdin_used@@Base+0x1be0>
    5bb8:	mov    edx,0x5
    5bbd:	xor    edi,edi
    5bbf:	call   3700 <dcgettext@plt>
    5bc4:	xor    esi,esi
    5bc6:	mov    rdx,rax
    5bc9:	xor    edi,edi
    5bcb:	xor    eax,eax
    5bcd:	call   3c20 <error@plt>
    5bd2:	jmp    5b5a <__cxa_finalize@plt+0x1d42>
    5bd4:	mov    edx,0x5
    5bd9:	lea    rsi,[rip+0x13eba]        # 19a9a <_IO_stdin_used@@Base+0xfa>
    5be0:	jmp    5bbd <__cxa_finalize@plt+0x1da5>
    5be2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5bec:	nop    DWORD PTR [rax+0x0]
    5bf0:	repz ret 
    5bf2:	nop    DWORD PTR [rax+0x0]
    5bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5c00:	mov    edi,0x4
    5c05:	jmp    10a80 <__cxa_finalize@plt+0xcc68>
    5c0a:	nop    WORD PTR [rax+rax*1+0x0]
    5c10:	and    esi,0xf000
    5c16:	cmp    esi,0xa000
    5c1c:	je     5c38 <__cxa_finalize@plt+0x1e20>
    5c1e:	push   rbx
    5c1f:	mov    rbx,rdi
    5c22:	call   13080 <__cxa_finalize@plt+0xf268>
    5c27:	test   al,al
    5c29:	je     5c40 <__cxa_finalize@plt+0x1e28>
    5c2b:	mov    eax,0x1
    5c30:	pop    rbx
    5c31:	ret    
    5c32:	nop    WORD PTR [rax+rax*1+0x0]
    5c38:	mov    eax,0x1
    5c3d:	ret    
    5c3e:	xchg   ax,ax
    5c40:	mov    rdi,rbx
    5c43:	mov    esi,0x2
    5c48:	call   3cd0 <euidaccess@plt>
    5c4d:	test   eax,eax
    5c4f:	sete   al
    5c52:	pop    rbx
    5c53:	ret    
    5c54:	xchg   ax,ax
    5c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5c60:	cmp    QWORD PTR [rip+0x21c8f8],0x0        # 222560 <stderr@@GLIBC_2.2.5+0x480>
    5c68:	push   r12
    5c6a:	mov    r12d,edi
    5c6d:	push   rbp
    5c6e:	push   rbx
    5c6f:	mov    rbx,rsi
    5c72:	je     5cc8 <__cxa_finalize@plt+0x1eb0>
    5c74:	test   rbx,rbx
    5c77:	jne    5c85 <__cxa_finalize@plt+0x1e6d>
    5c79:	jmp    5cb8 <__cxa_finalize@plt+0x1ea0>
    5c7b:	nop    DWORD PTR [rax+rax*1+0x0]
    5c80:	sub    rbx,rax
    5c83:	je     5cb8 <__cxa_finalize@plt+0x1ea0>
    5c85:	cmp    QWORD PTR [rip+0x21c38c],rbx        # 222018 <quoting_style_args@@Base+0x798>
    5c8c:	mov    rbp,rbx
    5c8f:	mov    rsi,QWORD PTR [rip+0x21c8ca]        # 222560 <stderr@@GLIBC_2.2.5+0x480>
    5c96:	cmovbe rbp,QWORD PTR [rip+0x21c37a]        # 222018 <quoting_style_args@@Base+0x798>
    5c9e:	mov    edi,r12d
    5ca1:	mov    rdx,rbp
    5ca4:	call   db20 <__cxa_finalize@plt+0x9d08>
    5ca9:	cmp    rax,rbp
    5cac:	je     5c80 <__cxa_finalize@plt+0x1e68>
    5cae:	pop    rbx
    5caf:	xor    eax,eax
    5cb1:	pop    rbp
    5cb2:	pop    r12
    5cb4:	ret    
    5cb5:	nop    DWORD PTR [rax]
    5cb8:	pop    rbx
    5cb9:	mov    eax,0x1
    5cbe:	pop    rbp
    5cbf:	pop    r12
    5cc1:	ret    
    5cc2:	nop    WORD PTR [rax+rax*1+0x0]
    5cc8:	mov    rdi,QWORD PTR [rip+0x21c349]        # 222018 <quoting_style_args@@Base+0x798>
    5ccf:	mov    esi,0x1
    5cd4:	call   3970 <calloc@plt>
    5cd9:	test   rax,rax
    5cdc:	je     5ce7 <__cxa_finalize@plt+0x1ecf>
    5cde:	mov    QWORD PTR [rip+0x21c87b],rax        # 222560 <stderr@@GLIBC_2.2.5+0x480>
    5ce5:	jmp    5c74 <__cxa_finalize@plt+0x1e5c>
    5ce7:	lea    rax,[rip+0x21c472]        # 222160 <stderr@@GLIBC_2.2.5+0x80>
    5cee:	mov    QWORD PTR [rip+0x21c31f],0x400        # 222018 <quoting_style_args@@Base+0x798>
    5cf9:	mov    QWORD PTR [rip+0x21c860],rax        # 222560 <stderr@@GLIBC_2.2.5+0x480>
    5d00:	jmp    5c74 <__cxa_finalize@plt+0x1e5c>
    5d05:	nop
    5d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d10:	push   rbx
    5d11:	mov    rcx,rdx
    5d14:	mov    rdx,rsi
    5d17:	mov    esi,0x3
    5d1c:	call   3940 <fallocate@plt>
    5d21:	test   eax,eax
    5d23:	mov    ebx,eax
    5d25:	js     5d30 <__cxa_finalize@plt+0x1f18>
    5d27:	mov    eax,ebx
    5d29:	pop    rbx
    5d2a:	ret    
    5d2b:	nop    DWORD PTR [rax+rax*1+0x0]
    5d30:	call   3540 <__errno_location@plt>
    5d35:	mov    eax,DWORD PTR [rax]
    5d37:	cmp    eax,0x26
    5d3a:	je     5d41 <__cxa_finalize@plt+0x1f29>
    5d3c:	cmp    eax,0x5f
    5d3f:	jne    5d27 <__cxa_finalize@plt+0x1f0f>
    5d41:	xor    ebx,ebx
    5d43:	mov    eax,ebx
    5d45:	pop    rbx
    5d46:	ret    
    5d47:	nop    WORD PTR [rax+rax*1+0x0]
    5d50:	test   edi,edi
    5d52:	mov    rax,rsi
    5d55:	mov    esi,edx
    5d57:	js     5d60 <__cxa_finalize@plt+0x1f48>
    5d59:	jmp    3bc0 <fchmod@plt>
    5d5e:	xchg   ax,ax
    5d60:	mov    rdi,rax
    5d63:	jmp    3be0 <chmod@plt>
    5d68:	nop    DWORD PTR [rax+rax*1+0x0]
    5d70:	sub    rsp,0x28
    5d74:	mov    r10,rdx
    5d77:	mov    edx,esi
    5d79:	mov    rax,QWORD PTR fs:0x28
    5d82:	mov    QWORD PTR [rsp+0x18],rax
    5d87:	xor    eax,eax
    5d89:	mov    eax,ecx
    5d8b:	not    edx
    5d8d:	not    eax
    5d8f:	shr    edx,0x1f
    5d92:	shr    eax,0x1f
    5d95:	and    eax,edx
    5d97:	movabs rdx,0xff000000ff00
    5da1:	and    rdx,QWORD PTR [r8+0x20]
    5da5:	cmp    BYTE PTR [r8+0x23],0x0
    5daa:	jne    5de0 <__cxa_finalize@plt+0x1fc8>
    5dac:	lea    r9,[rip+0x1dd]        # 5f90 <__cxa_finalize@plt+0x2178>
    5db3:	lea    r11,[rip+0xfffffffffffffe46]        # 5c00 <__cxa_finalize@plt+0x1de8>
    5dba:	test   al,al
    5dbc:	mov    QWORD PTR [rsp],r9
    5dc0:	lea    r9,[rip+0xfffffffffffffe29]        # 5bf0 <__cxa_finalize@plt+0x1dd8>
    5dc7:	mov    QWORD PTR [rsp+0x8],r11
    5dcc:	mov    QWORD PTR [rsp+0x10],r9
    5dd1:	je     5e0e <__cxa_finalize@plt+0x1ff6>
    5dd3:	mov    r9,rsp
    5dd6:	jmp    5e94 <__cxa_finalize@plt+0x207c>
    5ddb:	nop    DWORD PTR [rax+rax*1+0x0]
    5de0:	cmp    BYTE PTR [r8+0x28],0x0
    5de5:	je     5e18 <__cxa_finalize@plt+0x2000>
    5de7:	lea    r11,[rip+0x1a2]        # 5f90 <__cxa_finalize@plt+0x2178>
    5dee:	lea    r9,[rip+0xfffffffffffffe0b]        # 5c00 <__cxa_finalize@plt+0x1de8>
    5df5:	test   al,al
    5df7:	mov    QWORD PTR [rsp],r11
    5dfb:	lea    r11,[rip+0xfffffffffffffdee]        # 5bf0 <__cxa_finalize@plt+0x1dd8>
    5e02:	mov    QWORD PTR [rsp+0x8],r9
    5e07:	mov    QWORD PTR [rsp+0x10],r11
    5e0c:	jne    5dd3 <__cxa_finalize@plt+0x1fbb>
    5e0e:	mov    rcx,rsp
    5e11:	jmp    5e4f <__cxa_finalize@plt+0x2037>
    5e13:	nop    DWORD PTR [rax+rax*1+0x0]
    5e18:	movzx  r8d,BYTE PTR [r8+0x29]
    5e1d:	lea    r11,[rip+0x9c]        # 5ec0 <__cxa_finalize@plt+0x20a8>
    5e24:	lea    r9,[rip+0xfffffffffffffdc5]        # 5bf0 <__cxa_finalize@plt+0x1dd8>
    5e2b:	mov    QWORD PTR [rsp],r11
    5e2f:	lea    r11,[rip+0xfffffffffffffdca]        # 5c00 <__cxa_finalize@plt+0x1de8>
    5e36:	mov    QWORD PTR [rsp+0x10],r9
    5e3b:	xor    r8d,0x1
    5e3f:	test   al,al
    5e41:	mov    QWORD PTR [rsp+0x8],r11
    5e46:	jne    5e88 <__cxa_finalize@plt+0x2070>
    5e48:	test   r8b,r8b
    5e4b:	jne    5e0e <__cxa_finalize@plt+0x1ff6>
    5e4d:	xor    ecx,ecx
    5e4f:	test   rdx,rdx
    5e52:	lea    rdx,[rip+0x9f7]        # 6850 <__cxa_finalize@plt+0x2a38>
    5e59:	mov    eax,0x0
    5e5e:	mov    rsi,r10
    5e61:	cmove  rdx,rax
    5e65:	call   3c10 <attr_copy_file@plt>
    5e6a:	test   eax,eax
    5e6c:	sete   al
    5e6f:	mov    rdi,QWORD PTR [rsp+0x18]
    5e74:	xor    rdi,QWORD PTR fs:0x28
    5e7d:	jne    5eb1 <__cxa_finalize@plt+0x2099>
    5e7f:	add    rsp,0x28
    5e83:	ret    
    5e84:	nop    DWORD PTR [rax+0x0]
    5e88:	test   r8b,r8b
    5e8b:	jne    5dd3 <__cxa_finalize@plt+0x1fbb>
    5e91:	xor    r9d,r9d
    5e94:	lea    r8,[rip+0x9b5]        # 6850 <__cxa_finalize@plt+0x2a38>
    5e9b:	test   rdx,rdx
    5e9e:	mov    eax,0x0
    5ea3:	mov    rdx,r10
    5ea6:	cmove  r8,rax
    5eaa:	call   3b30 <attr_copy_fd@plt>
    5eaf:	jmp    5e6a <__cxa_finalize@plt+0x2052>
    5eb1:	call   3760 <__stack_chk_fail@plt>
    5eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5ec0:	push   rbx
    5ec1:	mov    rbx,rsi
    5ec4:	sub    rsp,0xd0
    5ecb:	test   al,al
    5ecd:	mov    QWORD PTR [rsp+0x30],rdx
    5ed2:	mov    QWORD PTR [rsp+0x38],rcx
    5ed7:	mov    QWORD PTR [rsp+0x40],r8
    5edc:	mov    QWORD PTR [rsp+0x48],r9
    5ee1:	je     5f1a <__cxa_finalize@plt+0x2102>
    5ee3:	movaps XMMWORD PTR [rsp+0x50],xmm0
    5ee8:	movaps XMMWORD PTR [rsp+0x60],xmm1
    5eed:	movaps XMMWORD PTR [rsp+0x70],xmm2
    5ef2:	movaps XMMWORD PTR [rsp+0x80],xmm3
    5efa:	movaps XMMWORD PTR [rsp+0x90],xmm4
    5f02:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    5f0a:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    5f12:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    5f1a:	mov    rax,QWORD PTR fs:0x28
    5f23:	mov    QWORD PTR [rsp+0x18],rax
    5f28:	xor    eax,eax
    5f2a:	call   3540 <__errno_location@plt>
    5f2f:	mov    esi,DWORD PTR [rax]
    5f31:	cmp    esi,0x5f
    5f34:	je     5f6e <__cxa_finalize@plt+0x2156>
    5f36:	cmp    esi,0x3d
    5f39:	je     5f6e <__cxa_finalize@plt+0x2156>
    5f3b:	lea    rax,[rsp+0xe0]
    5f43:	mov    rcx,rsp
    5f46:	mov    rdx,rbx
    5f49:	xor    edi,edi
    5f4b:	mov    DWORD PTR [rsp],0x10
    5f52:	mov    DWORD PTR [rsp+0x4],0x30
    5f5a:	mov    QWORD PTR [rsp+0x8],rax
    5f5f:	lea    rax,[rsp+0x20]
    5f64:	mov    QWORD PTR [rsp+0x10],rax
    5f69:	call   12a60 <__cxa_finalize@plt+0xec48>
    5f6e:	mov    rax,QWORD PTR [rsp+0x18]
    5f73:	xor    rax,QWORD PTR fs:0x28
    5f7c:	jne    5f87 <__cxa_finalize@plt+0x216f>
    5f7e:	add    rsp,0xd0
    5f85:	pop    rbx
    5f86:	ret    
    5f87:	call   3760 <__stack_chk_fail@plt>
    5f8c:	nop    DWORD PTR [rax+0x0]
    5f90:	push   rbx
    5f91:	mov    rbx,rsi
    5f94:	sub    rsp,0xd0
    5f9b:	test   al,al
    5f9d:	mov    QWORD PTR [rsp+0x30],rdx
    5fa2:	mov    QWORD PTR [rsp+0x38],rcx
    5fa7:	mov    QWORD PTR [rsp+0x40],r8
    5fac:	mov    QWORD PTR [rsp+0x48],r9
    5fb1:	je     5fea <__cxa_finalize@plt+0x21d2>
    5fb3:	movaps XMMWORD PTR [rsp+0x50],xmm0
    5fb8:	movaps XMMWORD PTR [rsp+0x60],xmm1
    5fbd:	movaps XMMWORD PTR [rsp+0x70],xmm2
    5fc2:	movaps XMMWORD PTR [rsp+0x80],xmm3
    5fca:	movaps XMMWORD PTR [rsp+0x90],xmm4
    5fd2:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    5fda:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    5fe2:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    5fea:	mov    rax,QWORD PTR fs:0x28
    5ff3:	mov    QWORD PTR [rsp+0x18],rax
    5ff8:	xor    eax,eax
    5ffa:	call   3540 <__errno_location@plt>
    5fff:	xor    edi,edi
    6001:	mov    rcx,rsp
    6004:	mov    rdx,rbx
    6007:	mov    esi,DWORD PTR [rax]
    6009:	lea    rax,[rsp+0xe0]
    6011:	mov    DWORD PTR [rsp],0x10
    6018:	mov    DWORD PTR [rsp+0x4],0x30
    6020:	mov    QWORD PTR [rsp+0x8],rax
    6025:	lea    rax,[rsp+0x20]
    602a:	mov    QWORD PTR [rsp+0x10],rax
    602f:	call   12a60 <__cxa_finalize@plt+0xec48>
    6034:	mov    rax,QWORD PTR [rsp+0x18]
    6039:	xor    rax,QWORD PTR fs:0x28
    6042:	jne    604d <__cxa_finalize@plt+0x2235>
    6044:	add    rsp,0xd0
    604b:	pop    rbx
    604c:	ret    
    604d:	call   3760 <__stack_chk_fail@plt>
    6052:	nop    DWORD PTR [rax+0x0]
    6056:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6060:	push   r12
    6062:	push   rbp
    6063:	mov    r12,rdi
    6066:	push   rbx
    6067:	mov    edi,0x1
    606c:	mov    rbx,rdx
    606f:	mov    rdx,rsi
    6072:	mov    esi,0x4
    6077:	call   10960 <__cxa_finalize@plt+0xcb48>
    607c:	xor    edi,edi
    607e:	mov    rdx,r12
    6081:	mov    esi,0x4
    6086:	mov    rbp,rax
    6089:	call   10960 <__cxa_finalize@plt+0xcb48>
    608e:	lea    rsi,[rip+0x156dd]        # 1b772 <_IO_stdin_used@@Base+0x1dd2>
    6095:	mov    rdx,rax
    6098:	mov    rcx,rbp
    609b:	xor    eax,eax
    609d:	mov    edi,0x1
    60a2:	call   3bb0 <__printf_chk@plt>
    60a7:	test   rbx,rbx
    60aa:	je     60e1 <__cxa_finalize@plt+0x22c9>
    60ac:	mov    rsi,rbx
    60af:	mov    edi,0x4
    60b4:	call   10a80 <__cxa_finalize@plt+0xcc68>
    60b9:	lea    rsi,[rip+0x156bb]        # 1b77b <_IO_stdin_used@@Base+0x1ddb>
    60c0:	mov    rbx,rax
    60c3:	mov    edx,0x5
    60c8:	xor    edi,edi
    60ca:	call   3700 <dcgettext@plt>
    60cf:	mov    rdx,rbx
    60d2:	mov    rsi,rax
    60d5:	mov    edi,0x1
    60da:	xor    eax,eax
    60dc:	call   3bb0 <__printf_chk@plt>
    60e1:	mov    rdi,QWORD PTR [rip+0x21bfc0]        # 2220a8 <stdout@@GLIBC_2.2.5>
    60e8:	mov    rax,QWORD PTR [rdi+0x28]
    60ec:	cmp    rax,QWORD PTR [rdi+0x30]
    60f0:	jae    6108 <__cxa_finalize@plt+0x22f0>
    60f2:	lea    rdx,[rax+0x1]
    60f6:	mov    QWORD PTR [rdi+0x28],rdx
    60fa:	mov    BYTE PTR [rax],0xa
    60fd:	pop    rbx
    60fe:	pop    rbp
    60ff:	pop    r12
    6101:	ret    
    6102:	nop    WORD PTR [rax+rax*1+0x0]
    6108:	pop    rbx
    6109:	pop    rbp
    610a:	pop    r12
    610c:	mov    esi,0xa
    6111:	jmp    37d0 <__overflow@plt>
    6116:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6120:	push   r14
    6122:	push   r13
    6124:	mov    r13,rdi
    6127:	push   r12
    6129:	push   rbp
    612a:	mov    rbp,rdx
    612d:	push   rbx
    612e:	mov    rbx,rsi
    6131:	mov    rdi,rbx
    6134:	sub    rsp,0x20
    6138:	mov    esi,DWORD PTR [rdx]
    613a:	mov    rax,QWORD PTR fs:0x28
    6143:	mov    QWORD PTR [rsp+0x18],rax
    6148:	xor    eax,eax
    614a:	call   5c10 <__cxa_finalize@plt+0x1df8>
    614f:	test   al,al
    6151:	jne    61e8 <__cxa_finalize@plt+0x23d0>
    6157:	mov    edi,DWORD PTR [rbp+0x0]
    615a:	lea    r12,[rsp+0xc]
    615f:	mov    rsi,r12
    6162:	call   d890 <__cxa_finalize@plt+0x9a78>
    6167:	mov    ebp,DWORD PTR [rbp+0x0]
    616a:	mov    rsi,rbx
    616d:	mov    edi,0x4
    6172:	mov    BYTE PTR [rsp+0x16],0x0
    6177:	call   10a80 <__cxa_finalize@plt+0xcc68>
    617c:	and    ebp,0xfff
    6182:	cmp    BYTE PTR [r13+0x18],0x0
    6187:	mov    r14,rax
    618a:	mov    rbx,QWORD PTR [rip+0x21c40f]        # 2225a0 <program_name@@Base>
    6191:	mov    edx,0x5
    6196:	jne    61a6 <__cxa_finalize@plt+0x238e>
    6198:	test   DWORD PTR [r13+0x14],0xffff00
    61a0:	je     6250 <__cxa_finalize@plt+0x2438>
    61a6:	lea    rsi,[rip+0x158cb]        # 1ba78 <_IO_stdin_used@@Base+0x20d8>
    61ad:	xor    edi,edi
    61af:	call   3700 <dcgettext@plt>
    61b4:	mov    rdx,rax
    61b7:	sub    rsp,0x8
    61bb:	add    r12,0x1
    61bf:	mov    rdi,QWORD PTR [rip+0x21bf1a]        # 2220e0 <stderr@@GLIBC_2.2.5>
    61c6:	push   r12
    61c8:	mov    r9,rbp
    61cb:	mov    r8,r14
    61ce:	mov    rcx,rbx
    61d1:	mov    esi,0x1
    61d6:	xor    eax,eax
    61d8:	call   3d70 <__fprintf_chk@plt>
    61dd:	pop    rax
    61de:	pop    rdx
    61df:	jmp    622e <__cxa_finalize@plt+0x2416>
    61e1:	nop    DWORD PTR [rax+0x0]
    61e8:	mov    rsi,rbx
    61eb:	mov    edi,0x4
    61f0:	call   10a80 <__cxa_finalize@plt+0xcc68>
    61f5:	lea    rsi,[rip+0x1558d]        # 1b789 <_IO_stdin_used@@Base+0x1de9>
    61fc:	mov    rbx,QWORD PTR [rip+0x21c39d]        # 2225a0 <program_name@@Base>
    6203:	mov    edx,0x5
    6208:	xor    edi,edi
    620a:	mov    rbp,rax
    620d:	call   3700 <dcgettext@plt>
    6212:	mov    rdi,QWORD PTR [rip+0x21bec7]        # 2220e0 <stderr@@GLIBC_2.2.5>
    6219:	mov    rdx,rax
    621c:	mov    r8,rbp
    621f:	mov    rcx,rbx
    6222:	mov    esi,0x1
    6227:	xor    eax,eax
    6229:	call   3d70 <__fprintf_chk@plt>
    622e:	call   13600 <__cxa_finalize@plt+0xf7e8>
    6233:	mov    rcx,QWORD PTR [rsp+0x18]
    6238:	xor    rcx,QWORD PTR fs:0x28
    6241:	jne    6266 <__cxa_finalize@plt+0x244e>
    6243:	add    rsp,0x20
    6247:	pop    rbx
    6248:	pop    rbp
    6249:	pop    r12
    624b:	pop    r13
    624d:	pop    r14
    624f:	ret    
    6250:	lea    rsi,[rip+0x15851]        # 1baa8 <_IO_stdin_used@@Base+0x2108>
    6257:	xor    edi,edi
    6259:	call   3700 <dcgettext@plt>
    625e:	mov    rdx,rax
    6261:	jmp    61b7 <__cxa_finalize@plt+0x239f>
    6266:	call   3760 <__stack_chk_fail@plt>
    626b:	nop    DWORD PTR [rax+rax*1+0x0]
    6270:	push   r13
    6272:	push   r12
    6274:	movzx  r9d,dl
    6278:	push   rbp
    6279:	push   rbx
    627a:	mov    edx,0xffffff9c
    627f:	mov    rbx,rdi
    6282:	mov    r12,rsi
    6285:	mov    ebp,ecx
    6287:	sub    rsp,0x8
    628b:	test   r8b,r8b
    628e:	mov    rcx,rsi
    6291:	setne  r8b
    6295:	mov    rsi,rdi
    6298:	mov    edi,edx
    629a:	movzx  r8d,r8b
    629e:	shl    r8d,0xa
    62a2:	call   b600 <__cxa_finalize@plt+0x77e8>
    62a7:	cmp    eax,0x0
    62aa:	jl     6318 <__cxa_finalize@plt+0x2500>
    62ac:	setg   bl
    62af:	and    bl,bpl
    62b2:	jne    62d0 <__cxa_finalize@plt+0x24b8>
    62b4:	add    rsp,0x8
    62b8:	mov    ebx,0x1
    62bd:	mov    eax,ebx
    62bf:	pop    rbx
    62c0:	pop    rbp
    62c1:	pop    r12
    62c3:	pop    r13
    62c5:	ret    
    62c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    62d0:	mov    rsi,r12
    62d3:	mov    edi,0x4
    62d8:	call   10a80 <__cxa_finalize@plt+0xcc68>
    62dd:	lea    rsi,[rip+0x154b8]        # 1b79c <_IO_stdin_used@@Base+0x1dfc>
    62e4:	mov    rbp,rax
    62e7:	mov    edx,0x5
    62ec:	xor    edi,edi
    62ee:	call   3700 <dcgettext@plt>
    62f3:	mov    rdx,rbp
    62f6:	mov    rsi,rax
    62f9:	mov    edi,0x1
    62fe:	xor    eax,eax
    6300:	call   3bb0 <__printf_chk@plt>
    6305:	add    rsp,0x8
    6309:	mov    eax,ebx
    630b:	pop    rbx
    630c:	pop    rbp
    630d:	pop    r12
    630f:	pop    r13
    6311:	ret    
    6312:	nop    WORD PTR [rax+rax*1+0x0]
    6318:	mov    rdx,rbx
    631b:	mov    esi,0x4
    6320:	mov    edi,0x1
    6325:	call   10960 <__cxa_finalize@plt+0xcb48>
    632a:	mov    rdx,r12
    632d:	mov    esi,0x4
    6332:	xor    edi,edi
    6334:	mov    r13,rax
    6337:	call   10960 <__cxa_finalize@plt+0xcb48>
    633c:	lea    rsi,[rip+0x1579d]        # 1bae0 <_IO_stdin_used@@Base+0x2140>
    6343:	mov    edx,0x5
    6348:	xor    edi,edi
    634a:	mov    rbp,rax
    634d:	call   3700 <dcgettext@plt>
    6352:	mov    rbx,rax
    6355:	call   3540 <__errno_location@plt>
    635a:	mov    esi,DWORD PTR [rax]
    635c:	mov    r8,r13
    635f:	mov    rcx,rbp
    6362:	mov    rdx,rbx
    6365:	xor    eax,eax
    6367:	xor    edi,edi
    6369:	xor    ebx,ebx
    636b:	call   3c20 <error@plt>
    6370:	add    rsp,0x8
    6374:	mov    eax,ebx
    6376:	pop    rbx
    6377:	pop    rbp
    6378:	pop    r12
    637a:	pop    r13
    637c:	ret    
    637d:	nop    DWORD PTR [rax]
    6380:	push   r13
    6382:	push   r12
    6384:	mov    r13,rsi
    6387:	push   rbp
    6388:	push   rbx
    6389:	mov    r12d,edx
    638c:	mov    rsi,rcx
    638f:	mov    edx,0x1
    6394:	mov    ebp,edi
    6396:	sub    rsp,0x8
    639a:	mov    rbx,rcx
    639d:	call   3810 <lseek@plt>
    63a2:	test   rax,rax
    63a5:	js     6420 <__cxa_finalize@plt+0x2608>
    63a7:	test   r12b,r12b
    63aa:	jne    63c0 <__cxa_finalize@plt+0x25a8>
    63ac:	add    rsp,0x8
    63b0:	mov    eax,0x1
    63b5:	pop    rbx
    63b6:	pop    rbp
    63b7:	pop    r12
    63b9:	pop    r13
    63bb:	ret    
    63bc:	nop    DWORD PTR [rax+0x0]
    63c0:	sub    rax,rbx
    63c3:	mov    rdx,rbx
    63c6:	mov    edi,ebp
    63c8:	mov    rsi,rax
    63cb:	call   5d10 <__cxa_finalize@plt+0x1ef8>
    63d0:	test   eax,eax
    63d2:	jns    63ac <__cxa_finalize@plt+0x2594>
    63d4:	mov    rsi,r13
    63d7:	mov    edi,0x4
    63dc:	call   10a80 <__cxa_finalize@plt+0xcc68>
    63e1:	lea    rsi,[rip+0x153d0]        # 1b7b8 <_IO_stdin_used@@Base+0x1e18>
    63e8:	mov    rbp,rax
    63eb:	mov    edx,0x5
    63f0:	xor    edi,edi
    63f2:	call   3700 <dcgettext@plt>
    63f7:	mov    rbx,rax
    63fa:	call   3540 <__errno_location@plt>
    63ff:	mov    esi,DWORD PTR [rax]
    6401:	mov    rcx,rbp
    6404:	mov    rdx,rbx
    6407:	xor    eax,eax
    6409:	xor    edi,edi
    640b:	call   3c20 <error@plt>
    6410:	add    rsp,0x8
    6414:	xor    eax,eax
    6416:	pop    rbx
    6417:	pop    rbp
    6418:	pop    r12
    641a:	pop    r13
    641c:	ret    
    641d:	nop    DWORD PTR [rax]
    6420:	mov    rsi,r13
    6423:	mov    edi,0x4
    6428:	call   10a80 <__cxa_finalize@plt+0xcc68>
    642d:	mov    edx,0x5
    6432:	mov    rbp,rax
    6435:	lea    rsi,[rip+0x1536c]        # 1b7a8 <_IO_stdin_used@@Base+0x1e08>
    643c:	jmp    63f0 <__cxa_finalize@plt+0x25d8>
    643e:	xchg   ax,ax
    6440:	push   r15
    6442:	push   r14
    6444:	push   r13
    6446:	push   r12
    6448:	push   rbp
    6449:	push   rbx
    644a:	sub    rsp,0x78
    644e:	mov    rax,QWORD PTR [rsp+0xb0]
    6456:	mov    rbx,QWORD PTR [rsp+0xc8]
    645e:	mov    r10,QWORD PTR [rsp+0xd0]
    6466:	mov    BYTE PTR [rsp+0x1f],r9b
    646b:	mov    QWORD PTR [rsp+0x58],rax
    6470:	mov    rax,QWORD PTR [rsp+0xb8]
    6478:	mov    BYTE PTR [r10],0x0
    647c:	mov    QWORD PTR [rsp+0x40],rbx
    6481:	mov    QWORD PTR [rsp+0x60],r10
    6486:	mov    QWORD PTR [rbx],0x0
    648d:	mov    QWORD PTR [rsp+0x10],rax
    6492:	mov    rax,QWORD PTR [rsp+0xc0]
    649a:	test   rax,rax
    649d:	mov    QWORD PTR [rsp+0x28],rax
    64a2:	je     6843 <__cxa_finalize@plt+0x2a2b>
    64a8:	test   r8,r8
    64ab:	mov    QWORD PTR [rsp+0x50],r8
    64b0:	mov    DWORD PTR [rsp+0x6c],r9d
    64b5:	cmove  r8,rcx
    64b9:	mov    QWORD PTR [rsp+0x38],rcx
    64be:	mov    QWORD PTR [rsp+0x20],rdx
    64c3:	mov    DWORD PTR [rsp+0x18],esi
    64c7:	mov    DWORD PTR [rsp+0x68],edi
    64cb:	xor    r13d,r13d
    64ce:	mov    QWORD PTR [rsp+0x48],r8
    64d3:	xor    r15d,r15d
    64d6:	mov    rax,QWORD PTR [rsp+0x38]
    64db:	mov    rdx,QWORD PTR [rsp+0x28]
    64e0:	mov    rsi,QWORD PTR [rsp+0x20]
    64e5:	mov    edi,DWORD PTR [rsp+0x68]
    64e9:	cmp    rax,rdx
    64ec:	cmovbe rdx,rax
    64f0:	call   3920 <read@plt>
    64f5:	test   rax,rax
    64f8:	mov    QWORD PTR [rsp+0x30],rax
    64fd:	jns    6560 <__cxa_finalize@plt+0x2748>
    64ff:	call   3540 <__errno_location@plt>
    6504:	cmp    DWORD PTR [rax],0x4
    6507:	je     64d6 <__cxa_finalize@plt+0x26be>
    6509:	mov    rsi,QWORD PTR [rsp+0x58]
    650e:	mov    edi,0x4
    6513:	mov    rbx,rax
    6516:	xor    r15d,r15d
    6519:	call   10a80 <__cxa_finalize@plt+0xcc68>
    651e:	lea    rsi,[rip+0x152a9]        # 1b7ce <_IO_stdin_used@@Base+0x1e2e>
    6525:	mov    edx,0x5
    652a:	xor    edi,edi
    652c:	mov    rbp,rax
    652f:	call   3700 <dcgettext@plt>
    6534:	mov    esi,DWORD PTR [rbx]
    6536:	mov    rdx,rax
    6539:	mov    rcx,rbp
    653c:	xor    edi,edi
    653e:	xor    eax,eax
    6540:	call   3c20 <error@plt>
    6545:	add    rsp,0x78
    6549:	mov    eax,r15d
    654c:	pop    rbx
    654d:	pop    rbp
    654e:	pop    r12
    6550:	pop    r13
    6552:	pop    r14
    6554:	pop    r15
    6556:	ret    
    6557:	nop    WORD PTR [rax+rax*1+0x0]
    6560:	je     668f <__cxa_finalize@plt+0x2877>
    6566:	mov    rax,QWORD PTR [rsp+0x40]
    656b:	mov    rbp,QWORD PTR [rsp+0x30]
    6570:	mov    ecx,r15d
    6573:	mov    r14,QWORD PTR [rsp+0x20]
    6578:	mov    r10,QWORD PTR [rsp+0x48]
    657d:	add    QWORD PTR [rax],rbp
    6580:	cmp    QWORD PTR [rsp+0x50],0x0
    6586:	mov    r11,r14
    6589:	mov    r15,r10
    658c:	setne  BYTE PTR [rsp+0x1d]
    6591:	nop    DWORD PTR [rax+0x0]
    6598:	cmp    rbp,r15
    659b:	mov    rbx,r15
    659e:	cmovbe rbx,rbp
    65a2:	test   rbx,rbx
    65a5:	setne  r12b
    65a9:	and    r12b,BYTE PTR [rsp+0x1d]
    65ae:	je     66c0 <__cxa_finalize@plt+0x28a8>
    65b4:	mov    rsi,r14
    65b7:	mov    rdx,rbx
    65ba:	cmp    BYTE PTR [rsi],0x0
    65bd:	jne    67f0 <__cxa_finalize@plt+0x29d8>
    65c3:	add    rsi,0x1
    65c7:	sub    rdx,0x1
    65cb:	je     6758 <__cxa_finalize@plt+0x2940>
    65d1:	test   dl,0xf
    65d4:	jne    65ba <__cxa_finalize@plt+0x27a2>
    65d6:	mov    rdi,r14
    65d9:	mov    QWORD PTR [rsp+0x8],r11
    65de:	mov    BYTE PTR [rsp+0x1e],cl
    65e2:	call   3930 <memcmp@plt>
    65e7:	movzx  ecx,BYTE PTR [rsp+0x1e]
    65ec:	test   eax,eax
    65ee:	mov    r11,QWORD PTR [rsp+0x8]
    65f3:	sete   r12b
    65f7:	mov    edx,r12d
    65fa:	xor    edx,ecx
    65fc:	test   eax,eax
    65fe:	setne  al
    6601:	test   r13,r13
    6604:	setne  r9b
    6608:	and    r9d,edx
    660b:	cmp    rbp,r15
    660e:	ja     6768 <__cxa_finalize@plt+0x2950>
    6614:	test   al,al
    6616:	je     6768 <__cxa_finalize@plt+0x2950>
    661c:	test   r9b,r9b
    661f:	je     66ca <__cxa_finalize@plt+0x28b2>
    6625:	mov    r15d,0x1
    662b:	test   cl,cl
    662d:	mov    BYTE PTR [rsp+0x1e],cl
    6631:	jne    66e2 <__cxa_finalize@plt+0x28ca>
    6637:	mov    edi,DWORD PTR [rsp+0x18]
    663b:	mov    rdx,r13
    663e:	mov    rsi,r11
    6641:	mov    BYTE PTR [rsp+0x8],r9b
    6646:	call   db20 <__cxa_finalize@plt+0x9d08>
    664b:	cmp    r13,rax
    664e:	movzx  r9d,BYTE PTR [rsp+0x8]
    6654:	movzx  ecx,BYTE PTR [rsp+0x1e]
    6659:	jne    67fd <__cxa_finalize@plt+0x29e5>
    665f:	test   r15d,r15d
    6662:	mov    r13,rbx
    6665:	je     6778 <__cxa_finalize@plt+0x2960>
    666b:	test   rbx,rbx
    666e:	jne    6790 <__cxa_finalize@plt+0x2978>
    6674:	mov    rdi,QWORD PTR [rsp+0x30]
    6679:	sub    QWORD PTR [rsp+0x28],rdi
    667e:	mov    r15d,r12d
    6681:	mov    rax,QWORD PTR [rsp+0x60]
    6686:	mov    BYTE PTR [rax],r12b
    6689:	jne    64d6 <__cxa_finalize@plt+0x26be>
    668f:	test   r15b,r15b
    6692:	je     6843 <__cxa_finalize@plt+0x2a2b>
    6698:	movzx  edx,BYTE PTR [rsp+0x6c]
    669d:	mov    rsi,QWORD PTR [rsp+0x10]
    66a2:	mov    rcx,r13
    66a5:	mov    edi,DWORD PTR [rsp+0x18]
    66a9:	add    rsp,0x78
    66ad:	pop    rbx
    66ae:	pop    rbp
    66af:	pop    r12
    66b1:	pop    r13
    66b3:	pop    r14
    66b5:	pop    r15
    66b7:	jmp    6380 <__cxa_finalize@plt+0x2568>
    66bc:	nop    DWORD PTR [rax+0x0]
    66c0:	cmp    cl,0x1
    66c3:	je     6718 <__cxa_finalize@plt+0x2900>
    66c5:	cmp    rbp,r15
    66c8:	ja     6718 <__cxa_finalize@plt+0x2900>
    66ca:	add    r13,rbx
    66cd:	xor    r9d,r9d
    66d0:	test   cl,cl
    66d2:	mov    r15d,0x1
    66d8:	mov    BYTE PTR [rsp+0x1e],cl
    66dc:	je     6637 <__cxa_finalize@plt+0x281f>
    66e2:	movzx  edx,BYTE PTR [rsp+0x1f]
    66e7:	mov    rsi,QWORD PTR [rsp+0x10]
    66ec:	mov    rcx,r13
    66ef:	mov    edi,DWORD PTR [rsp+0x18]
    66f3:	mov    BYTE PTR [rsp+0x1e],r9b
    66f8:	call   6380 <__cxa_finalize@plt+0x2568>
    66fd:	test   al,al
    66ff:	movzx  r9d,BYTE PTR [rsp+0x1e]
    6705:	jne    665f <__cxa_finalize@plt+0x2847>
    670b:	mov    r15d,eax
    670e:	jmp    6545 <__cxa_finalize@plt+0x272d>
    6713:	nop    DWORD PTR [rax+rax*1+0x0]
    6718:	test   rbx,rbx
    671b:	jne    6728 <__cxa_finalize@plt+0x2910>
    671d:	mov    r12d,ecx
    6720:	jmp    66ca <__cxa_finalize@plt+0x28b2>
    6722:	mov    ecx,r12d
    6725:	nop    DWORD PTR [rax]
    6728:	movabs rax,0x7fffffffffffffff
    6732:	sub    rax,rbx
    6735:	cmp    rax,r13
    6738:	jb     67b0 <__cxa_finalize@plt+0x2998>
    673a:	add    r13,rbx
    673d:	add    r14,rbx
    6740:	mov    r15,rbx
    6743:	sub    rbp,r15
    6746:	jne    6598 <__cxa_finalize@plt+0x2780>
    674c:	mov    r12d,ecx
    674f:	jmp    6674 <__cxa_finalize@plt+0x285c>
    6754:	nop    DWORD PTR [rax+0x0]
    6758:	mov    r9d,ecx
    675b:	xor    r9d,0x1
    675f:	test   r13,r13
    6762:	setne  al
    6765:	and    r9d,eax
    6768:	test   r9b,r9b
    676b:	je     6722 <__cxa_finalize@plt+0x290a>
    676d:	xor    r15d,r15d
    6770:	jmp    662b <__cxa_finalize@plt+0x2813>
    6775:	nop    DWORD PTR [rax]
    6778:	mov    r11,r14
    677b:	mov    ecx,r12d
    677e:	add    r14,rbx
    6781:	mov    r15,rbx
    6784:	jmp    6743 <__cxa_finalize@plt+0x292b>
    6786:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6790:	xor    r15d,r15d
    6793:	test   r9b,r9b
    6796:	mov    ecx,r12d
    6799:	mov    r11,r14
    679c:	jne    6743 <__cxa_finalize@plt+0x292b>
    679e:	add    r14,rbx
    67a1:	mov    r15,rbx
    67a4:	xor    r13d,r13d
    67a7:	jmp    6743 <__cxa_finalize@plt+0x292b>
    67a9:	nop    DWORD PTR [rax+0x0]
    67b0:	mov    rsi,QWORD PTR [rsp+0x58]
    67b5:	mov    edi,0x4
    67ba:	xor    r15d,r15d
    67bd:	call   10a80 <__cxa_finalize@plt+0xcc68>
    67c2:	lea    rsi,[rip+0x15027]        # 1b7f0 <_IO_stdin_used@@Base+0x1e50>
    67c9:	mov    rbx,rax
    67cc:	mov    edx,0x5
    67d1:	xor    edi,edi
    67d3:	call   3700 <dcgettext@plt>
    67d8:	mov    rcx,rbx
    67db:	mov    rdx,rax
    67de:	xor    esi,esi
    67e0:	xor    edi,edi
    67e2:	xor    eax,eax
    67e4:	call   3c20 <error@plt>
    67e9:	jmp    6545 <__cxa_finalize@plt+0x272d>
    67ee:	xchg   ax,ax
    67f0:	mov    eax,r12d
    67f3:	mov    edx,ecx
    67f5:	xor    r12d,r12d
    67f8:	jmp    6601 <__cxa_finalize@plt+0x27e9>
    67fd:	mov    rsi,QWORD PTR [rsp+0x10]
    6802:	mov    edi,0x4
    6807:	mov    r15d,ecx
    680a:	call   10a80 <__cxa_finalize@plt+0xcc68>
    680f:	lea    rsi,[rip+0x14fc9]        # 1b7df <_IO_stdin_used@@Base+0x1e3f>
    6816:	xor    edi,edi
    6818:	mov    edx,0x5
    681d:	mov    rbp,rax
    6820:	call   3700 <dcgettext@plt>
    6825:	mov    rbx,rax
    6828:	call   3540 <__errno_location@plt>
    682d:	mov    esi,DWORD PTR [rax]
    682f:	mov    rcx,rbp
    6832:	mov    rdx,rbx
    6835:	xor    edi,edi
    6837:	xor    eax,eax
    6839:	call   3c20 <error@plt>
    683e:	jmp    6545 <__cxa_finalize@plt+0x272d>
    6843:	mov    r15d,0x1
    6849:	jmp    6545 <__cxa_finalize@plt+0x272d>
    684e:	xchg   ax,ax
    6850:	mov    rdx,rdi
    6853:	lea    rdi,[rip+0x14faa]        # 1b804 <_IO_stdin_used@@Base+0x1e64>
    685a:	mov    ecx,0x10
    685f:	mov    r8,rsi
    6862:	mov    rsi,rdx
    6865:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6867:	seta   al
    686a:	setb   cl
    686d:	sub    eax,ecx
    686f:	movsx  eax,al
    6872:	test   eax,eax
    6874:	jne    6880 <__cxa_finalize@plt+0x2a68>
    6876:	repz ret 
    6878:	nop    DWORD PTR [rax+rax*1+0x0]
    6880:	sub    rsp,0x8
    6884:	mov    rsi,r8
    6887:	mov    rdi,rdx
    688a:	call   3c30 <attr_copy_check_permissions@plt>
    688f:	test   eax,eax
    6891:	setne  al
    6894:	add    rsp,0x8
    6898:	movzx  eax,al
    689b:	ret    
    689c:	nop    DWORD PTR [rax+0x0]
    68a0:	push   rbx
    68a1:	xor    edi,edi
    68a3:	call   3ab0 <setfscreatecon@plt>
    68a8:	test   eax,eax
    68aa:	jne    68ae <__cxa_finalize@plt+0x2a96>
    68ac:	pop    rbx
    68ad:	ret    
    68ae:	lea    rsi,[rip+0x15253]        # 1bb08 <_IO_stdin_used@@Base+0x2168>
    68b5:	mov    edx,0x5
    68ba:	xor    edi,edi
    68bc:	call   3700 <dcgettext@plt>
    68c1:	mov    rbx,rax
    68c4:	call   3540 <__errno_location@plt>
    68c9:	mov    esi,DWORD PTR [rax]
    68cb:	mov    rdx,rbx
    68ce:	mov    edi,0x1
    68d3:	xor    eax,eax
    68d5:	call   3c20 <error@plt>
    68da:	nop    WORD PTR [rax+rax*1+0x0]
    68e0:	push   r13
    68e2:	push   r12
    68e4:	push   rbp
    68e5:	push   rbx
    68e6:	mov    rbx,r8
    68e9:	sub    rsp,0x18
    68ed:	movzx  ebp,BYTE PTR [r8+0x25]
    68f2:	mov    rax,QWORD PTR fs:0x28
    68fb:	mov    QWORD PTR [rsp+0x8],rax
    6900:	xor    eax,eax
    6902:	test   bpl,bpl
    6905:	je     6940 <__cxa_finalize@plt+0x2b28>
    6907:	cmp    BYTE PTR [r8+0x23],0x0
    690c:	mov    r12,rdi
    690f:	jne    6978 <__cxa_finalize@plt+0x2b60>
    6911:	mov    rsi,rsp
    6914:	mov    rdi,r12
    6917:	call   15d50 <fts_children@@Base+0x1e0>
    691c:	test   eax,eax
    691e:	js     6ada <__cxa_finalize@plt+0x2cc2>
    6924:	mov    rdi,QWORD PTR [rsp]
    6928:	call   3ab0 <setfscreatecon@plt>
    692d:	test   eax,eax
    692f:	js     6af0 <__cxa_finalize@plt+0x2cd8>
    6935:	mov    rdi,QWORD PTR [rsp]
    6939:	call   3d20 <freecon@plt>
    693e:	jmp    6951 <__cxa_finalize@plt+0x2b39>
    6940:	mov    ebp,ecx
    6942:	and    bpl,BYTE PTR [r8+0x21]
    6946:	jne    6a70 <__cxa_finalize@plt+0x2c58>
    694c:	mov    ebp,0x1
    6951:	mov    rdx,QWORD PTR [rsp+0x8]
    6956:	xor    rdx,QWORD PTR fs:0x28
    695f:	mov    eax,ebp
    6961:	jne    6afd <__cxa_finalize@plt+0x2ce5>
    6967:	add    rsp,0x18
    696b:	pop    rbx
    696c:	pop    rbp
    696d:	pop    r12
    696f:	pop    r13
    6971:	ret    
    6972:	nop    WORD PTR [rax+rax*1+0x0]
    6978:	cmp    BYTE PTR [r8+0x26],0x0
    697d:	jne    6911 <__cxa_finalize@plt+0x2af9>
    697f:	movzx  r13d,BYTE PTR [r8+0x29]
    6984:	mov    rsi,rsp
    6987:	call   15d50 <fts_children@@Base+0x1e0>
    698c:	xor    r13d,0x1
    6990:	test   eax,eax
    6992:	jns    69f8 <__cxa_finalize@plt+0x2be0>
    6994:	test   r13b,r13b
    6997:	je     69e3 <__cxa_finalize@plt+0x2bcb>
    6999:	call   3540 <__errno_location@plt>
    699e:	mov    r13,rax
    69a1:	mov    eax,DWORD PTR [rax]
    69a3:	cmp    eax,0x5f
    69a6:	je     69e3 <__cxa_finalize@plt+0x2bcb>
    69a8:	cmp    eax,0x3d
    69ab:	je     69e3 <__cxa_finalize@plt+0x2bcb>
    69ad:	mov    rsi,r12
    69b0:	mov    edi,0x4
    69b5:	call   10a80 <__cxa_finalize@plt+0xcc68>
    69ba:	lea    rsi,[rip+0x1517f]        # 1bb40 <_IO_stdin_used@@Base+0x21a0>
    69c1:	mov    edx,0x5
    69c6:	xor    edi,edi
    69c8:	mov    r12,rax
    69cb:	call   3700 <dcgettext@plt>
    69d0:	mov    esi,DWORD PTR [r13+0x0]
    69d4:	mov    rdx,rax
    69d7:	mov    rcx,r12
    69da:	xor    edi,edi
    69dc:	xor    eax,eax
    69de:	call   3c20 <error@plt>
    69e3:	cmp    BYTE PTR [rbx+0x26],0x0
    69e7:	je     6951 <__cxa_finalize@plt+0x2b39>
    69ed:	xor    ebp,ebp
    69ef:	jmp    6951 <__cxa_finalize@plt+0x2b39>
    69f4:	nop    DWORD PTR [rax+0x0]
    69f8:	mov    rdi,QWORD PTR [rsp]
    69fc:	call   3ab0 <setfscreatecon@plt>
    6a01:	test   eax,eax
    6a03:	jns    6935 <__cxa_finalize@plt+0x2b1d>
    6a09:	test   r13b,r13b
    6a0c:	je     6a54 <__cxa_finalize@plt+0x2c3c>
    6a0e:	call   3540 <__errno_location@plt>
    6a13:	mov    r12,rax
    6a16:	mov    eax,DWORD PTR [rax]
    6a18:	cmp    eax,0x5f
    6a1b:	je     6a54 <__cxa_finalize@plt+0x2c3c>
    6a1d:	cmp    eax,0x3d
    6a20:	je     6a54 <__cxa_finalize@plt+0x2c3c>
    6a22:	mov    rdi,QWORD PTR [rsp]
    6a26:	call   10d50 <__cxa_finalize@plt+0xcf38>
    6a2b:	lea    rsi,[rip+0x14d0e]        # 1b740 <_IO_stdin_used@@Base+0x1da0>
    6a32:	mov    edx,0x5
    6a37:	xor    edi,edi
    6a39:	mov    r13,rax
    6a3c:	call   3700 <dcgettext@plt>
    6a41:	mov    esi,DWORD PTR [r12]
    6a45:	mov    rdx,rax
    6a48:	mov    rcx,r13
    6a4b:	xor    edi,edi
    6a4d:	xor    eax,eax
    6a4f:	call   3c20 <error@plt>
    6a54:	cmp    BYTE PTR [rbx+0x26],0x0
    6a58:	mov    rdi,QWORD PTR [rsp]
    6a5c:	je     6939 <__cxa_finalize@plt+0x2b21>
    6a62:	call   3d20 <freecon@plt>
    6a67:	xor    ebp,ebp
    6a69:	jmp    6951 <__cxa_finalize@plt+0x2b39>
    6a6e:	xchg   ax,ax
    6a70:	mov    r13,rsi
    6a73:	mov    esi,edx
    6a75:	mov    rdi,r13
    6a78:	call   bb90 <__cxa_finalize@plt+0x7d78>
    6a7d:	test   eax,eax
    6a7f:	jns    694c <__cxa_finalize@plt+0x2b34>
    6a85:	call   3540 <__errno_location@plt>
    6a8a:	mov    rbx,rax
    6a8d:	mov    eax,DWORD PTR [rax]
    6a8f:	cmp    eax,0x5f
    6a92:	je     694c <__cxa_finalize@plt+0x2b34>
    6a98:	cmp    eax,0x3d
    6a9b:	je     694c <__cxa_finalize@plt+0x2b34>
    6aa1:	mov    rsi,r13
    6aa4:	mov    edi,0x4
    6aa9:	call   10a80 <__cxa_finalize@plt+0xcc68>
    6aae:	lea    rsi,[rip+0x150b3]        # 1bb68 <_IO_stdin_used@@Base+0x21c8>
    6ab5:	xor    edi,edi
    6ab7:	mov    edx,0x5
    6abc:	mov    r12,rax
    6abf:	call   3700 <dcgettext@plt>
    6ac4:	mov    esi,DWORD PTR [rbx]
    6ac6:	mov    rdx,rax
    6ac9:	mov    rcx,r12
    6acc:	xor    edi,edi
    6ace:	xor    eax,eax
    6ad0:	call   3c20 <error@plt>
    6ad5:	jmp    6951 <__cxa_finalize@plt+0x2b39>
    6ada:	call   3540 <__errno_location@plt>
    6adf:	mov    r13,rax
    6ae2:	jmp    69ad <__cxa_finalize@plt+0x2b95>
    6ae7:	nop    WORD PTR [rax+rax*1+0x0]
    6af0:	call   3540 <__errno_location@plt>
    6af5:	mov    r12,rax
    6af8:	jmp    6a22 <__cxa_finalize@plt+0x2c0a>
    6afd:	call   3760 <__stack_chk_fail@plt>
    6b02:	nop    DWORD PTR [rax+0x0]
    6b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6b10:	push   rbp
    6b11:	push   rbx
    6b12:	mov    eax,edx
    6b14:	mov    rbx,rdi
    6b17:	movzx  edx,sil
    6b1b:	movzx  esi,al
    6b1e:	sub    rsp,0x8
    6b22:	cmp    BYTE PTR [rcx+0x23],0x0
    6b26:	je     6b2e <__cxa_finalize@plt+0x2d16>
    6b28:	cmp    BYTE PTR [rcx+0x26],0x0
    6b2c:	je     6b50 <__cxa_finalize@plt+0x2d38>
    6b2e:	mov    rdi,rbx
    6b31:	call   be00 <__cxa_finalize@plt+0x7fe8>
    6b36:	test   al,al
    6b38:	je     6b80 <__cxa_finalize@plt+0x2d68>
    6b3a:	mov    eax,0x1
    6b3f:	add    rsp,0x8
    6b43:	pop    rbx
    6b44:	pop    rbp
    6b45:	ret    
    6b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6b50:	movzx  ebp,BYTE PTR [rcx+0x29]
    6b54:	call   be00 <__cxa_finalize@plt+0x7fe8>
    6b59:	test   al,al
    6b5b:	jne    6b3a <__cxa_finalize@plt+0x2d22>
    6b5d:	test   bpl,bpl
    6b60:	jne    6b3f <__cxa_finalize@plt+0x2d27>
    6b62:	call   3540 <__errno_location@plt>
    6b67:	mov    rbp,rax
    6b6a:	mov    eax,DWORD PTR [rax]
    6b6c:	cmp    eax,0x5f
    6b6f:	je     6b76 <__cxa_finalize@plt+0x2d5e>
    6b71:	cmp    eax,0x3d
    6b74:	jne    6b88 <__cxa_finalize@plt+0x2d70>
    6b76:	xor    eax,eax
    6b78:	jmp    6b3f <__cxa_finalize@plt+0x2d27>
    6b7a:	nop    WORD PTR [rax+rax*1+0x0]
    6b80:	call   3540 <__errno_location@plt>
    6b85:	mov    rbp,rax
    6b88:	mov    rdx,rbx
    6b8b:	mov    esi,0x4
    6b90:	xor    edi,edi
    6b92:	call   10960 <__cxa_finalize@plt+0xcb48>
    6b97:	lea    rsi,[rip+0x15002]        # 1bba0 <_IO_stdin_used@@Base+0x2200>
    6b9e:	mov    edx,0x5
    6ba3:	xor    edi,edi
    6ba5:	mov    rbx,rax
    6ba8:	call   3700 <dcgettext@plt>
    6bad:	mov    esi,DWORD PTR [rbp+0x0]
    6bb0:	mov    rcx,rbx
    6bb3:	mov    rdx,rax
    6bb6:	xor    edi,edi
    6bb8:	xor    eax,eax
    6bba:	call   3c20 <error@plt>
    6bbf:	add    rsp,0x8
    6bc3:	xor    eax,eax
    6bc5:	pop    rbx
    6bc6:	pop    rbp
    6bc7:	ret    
    6bc8:	nop    DWORD PTR [rax+rax*1+0x0]
    6bd0:	lea    r8,[rip+0x8359]        # ef30 <__cxa_finalize@plt+0xb118>
    6bd7:	lea    rcx,[rip+0x82e2]        # eec0 <__cxa_finalize@plt+0xb0a8>
    6bde:	xor    esi,esi
    6be0:	lea    rdx,[rip+0x8299]        # ee80 <__cxa_finalize@plt+0xb068>
    6be7:	push   rbx
    6be8:	mov    rbx,rdi
    6beb:	mov    edi,0x3d
    6bf0:	call   e410 <__cxa_finalize@plt+0xa5f8>
    6bf5:	mov    QWORD PTR [rbx+0x38],rax
    6bf9:	pop    rbx
    6bfa:	ret    
    6bfb:	nop    DWORD PTR [rax+rax*1+0x0]
    6c00:	lea    r8,[rip+0x8329]        # ef30 <__cxa_finalize@plt+0xb118>
    6c07:	lea    rcx,[rip+0x82b2]        # eec0 <__cxa_finalize@plt+0xb0a8>
    6c0e:	xor    esi,esi
    6c10:	lea    rdx,[rip+0x8299]        # eeb0 <__cxa_finalize@plt+0xb098>
    6c17:	push   rbx
    6c18:	mov    rbx,rdi
    6c1b:	mov    edi,0x3d
    6c20:	call   e410 <__cxa_finalize@plt+0xa5f8>
    6c25:	mov    QWORD PTR [rbx+0x40],rax
    6c29:	pop    rbx
    6c2a:	ret    
    6c2b:	nop    DWORD PTR [rax+rax*1+0x0]
    6c30:	pxor   xmm0,xmm0
    6c34:	push   rbx
    6c35:	mov    QWORD PTR [rdi+0x40],0x0
    6c3d:	mov    rbx,rdi
    6c40:	movups XMMWORD PTR [rdi],xmm0
    6c43:	movups XMMWORD PTR [rdi+0x10],xmm0
    6c47:	movups XMMWORD PTR [rdi+0x20],xmm0
    6c4b:	movups XMMWORD PTR [rdi+0x30],xmm0
    6c4f:	call   3850 <geteuid@plt>
    6c54:	test   eax,eax
    6c56:	sete   al
    6c59:	mov    BYTE PTR [rbx+0x1b],al
    6c5c:	mov    BYTE PTR [rbx+0x1a],al
    6c5f:	pop    rbx
    6c60:	ret    
    6c61:	nop    DWORD PTR [rax+rax*1+0x0]
    6c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c70:	push   rbx
    6c71:	mov    rbx,rdi
    6c74:	call   3540 <__errno_location@plt>
    6c79:	mov    edx,DWORD PTR [rax]
    6c7b:	cmp    edx,0x1
    6c7e:	sete   al
    6c81:	cmp    edx,0x16
    6c84:	sete   dl
    6c87:	or     al,dl
    6c89:	je     6c92 <__cxa_finalize@plt+0x2e7a>
    6c8b:	movzx  eax,BYTE PTR [rbx+0x1a]
    6c8f:	xor    eax,0x1
    6c92:	pop    rbx
    6c93:	ret    
    6c94:	xchg   ax,ax
    6c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6ca0:	push   r15
    6ca2:	push   r14
    6ca4:	push   r13
    6ca6:	push   r12
    6ca8:	mov    r12,rsi
    6cab:	push   rbp
    6cac:	push   rbx
    6cad:	mov    rbp,rdi
    6cb0:	mov    ebx,edx
    6cb2:	sub    rsp,0x8
    6cb6:	test   r8b,r8b
    6cb9:	mov    r14d,DWORD PTR [rcx+0x1c]
    6cbd:	mov    r13d,DWORD PTR [rcx+0x20]
    6cc1:	jne    6d70 <__cxa_finalize@plt+0x2f58>
    6cc7:	movabs rax,0xff0000000000ff
    6cd1:	test   QWORD PTR [rdi+0x18],rax
    6cd5:	je     6d60 <__cxa_finalize@plt+0x2f48>
    6cdb:	mov    eax,DWORD PTR [r9+0x18]
    6cdf:	mov    edx,DWORD PTR [rcx+0x18]
    6ce2:	and    edx,eax
    6ce4:	mov    esi,ebx
    6ce6:	mov    rdi,r12
    6ce9:	and    edx,0x1c0
    6cef:	call   f070 <__cxa_finalize@plt+0xb258>
    6cf4:	test   eax,eax
    6cf6:	je     6d70 <__cxa_finalize@plt+0x2f58>
    6cf8:	call   3540 <__errno_location@plt>
    6cfd:	mov    rbx,rax
    6d00:	mov    eax,DWORD PTR [rax]
    6d02:	cmp    eax,0x1
    6d05:	je     6e80 <__cxa_finalize@plt+0x3068>
    6d0b:	cmp    eax,0x16
    6d0e:	je     6e80 <__cxa_finalize@plt+0x3068>
    6d14:	mov    rsi,r12
    6d17:	mov    edi,0x4
    6d1c:	call   10a80 <__cxa_finalize@plt+0xcc68>
    6d21:	lea    rsi,[rip+0x14aed]        # 1b815 <_IO_stdin_used@@Base+0x1e75>
    6d28:	mov    edx,0x5
    6d2d:	xor    edi,edi
    6d2f:	mov    r12,rax
    6d32:	call   3700 <dcgettext@plt>
    6d37:	mov    esi,DWORD PTR [rbx]
    6d39:	mov    rdx,rax
    6d3c:	mov    rcx,r12
    6d3f:	xor    edi,edi
    6d41:	xor    eax,eax
    6d43:	call   3c20 <error@plt>
    6d48:	movzx  eax,BYTE PTR [rbp+0x24]
    6d4c:	add    rsp,0x8
    6d50:	pop    rbx
    6d51:	pop    rbp
    6d52:	pop    r12
    6d54:	neg    eax
    6d56:	pop    r13
    6d58:	pop    r14
    6d5a:	pop    r15
    6d5c:	ret    
    6d5d:	nop    DWORD PTR [rax]
    6d60:	cmp    BYTE PTR [rdi+0x2b],0x0
    6d64:	jne    6e50 <__cxa_finalize@plt+0x3038>
    6d6a:	nop    WORD PTR [rax+rax*1+0x0]
    6d70:	cmp    ebx,0xffffffff
    6d73:	mov    edx,r13d
    6d76:	mov    esi,r14d
    6d79:	je     6e00 <__cxa_finalize@plt+0x2fe8>
    6d7f:	mov    edi,ebx
    6d81:	call   3c80 <fchown@plt>
    6d86:	test   eax,eax
    6d88:	je     6e0c <__cxa_finalize@plt+0x2ff4>
    6d8e:	call   3540 <__errno_location@plt>
    6d93:	mov    r14d,DWORD PTR [rax]
    6d96:	mov    r15,rax
    6d99:	cmp    r14d,0x1
    6d9d:	je     6e60 <__cxa_finalize@plt+0x3048>
    6da3:	cmp    r14d,0x16
    6da7:	je     6e60 <__cxa_finalize@plt+0x3048>
    6dad:	mov    rdi,rbp
    6db0:	call   6c70 <__cxa_finalize@plt+0x2e58>
    6db5:	mov    edx,eax
    6db7:	xor    eax,eax
    6db9:	test   dl,dl
    6dbb:	jne    6e11 <__cxa_finalize@plt+0x2ff9>
    6dbd:	mov    rsi,r12
    6dc0:	mov    edi,0x4
    6dc5:	call   10a80 <__cxa_finalize@plt+0xcc68>
    6dca:	lea    rsi,[rip+0x133bf]        # 1a190 <_IO_stdin_used@@Base+0x7f0>
    6dd1:	xor    edi,edi
    6dd3:	mov    edx,0x5
    6dd8:	mov    r12,rax
    6ddb:	call   3700 <dcgettext@plt>
    6de0:	mov    rbx,rax
    6de3:	call   3540 <__errno_location@plt>
    6de8:	mov    esi,DWORD PTR [rax]
    6dea:	mov    rcx,r12
    6ded:	mov    rdx,rbx
    6df0:	xor    edi,edi
    6df2:	xor    eax,eax
    6df4:	call   3c20 <error@plt>
    6df9:	jmp    6d48 <__cxa_finalize@plt+0x2f30>
    6dfe:	xchg   ax,ax
    6e00:	mov    rdi,r12
    6e03:	call   3b20 <lchown@plt>
    6e08:	test   eax,eax
    6e0a:	jne    6e20 <__cxa_finalize@plt+0x3008>
    6e0c:	mov    eax,0x1
    6e11:	add    rsp,0x8
    6e15:	pop    rbx
    6e16:	pop    rbp
    6e17:	pop    r12
    6e19:	pop    r13
    6e1b:	pop    r14
    6e1d:	pop    r15
    6e1f:	ret    
    6e20:	call   3540 <__errno_location@plt>
    6e25:	mov    ebx,DWORD PTR [rax]
    6e27:	mov    r14,rax
    6e2a:	cmp    ebx,0x1
    6e2d:	je     6e38 <__cxa_finalize@plt+0x3020>
    6e2f:	cmp    ebx,0x16
    6e32:	jne    6dad <__cxa_finalize@plt+0x2f95>
    6e38:	mov    edx,r13d
    6e3b:	mov    esi,0xffffffff
    6e40:	mov    rdi,r12
    6e43:	call   3b20 <lchown@plt>
    6e48:	mov    DWORD PTR [r14],ebx
    6e4b:	jmp    6dad <__cxa_finalize@plt+0x2f95>
    6e50:	mov    eax,DWORD PTR [r9+0x18]
    6e54:	mov    edx,DWORD PTR [rdi+0x10]
    6e57:	jmp    6ce2 <__cxa_finalize@plt+0x2eca>
    6e5c:	nop    DWORD PTR [rax+0x0]
    6e60:	mov    edx,r13d
    6e63:	mov    esi,0xffffffff
    6e68:	mov    edi,ebx
    6e6a:	call   3c80 <fchown@plt>
    6e6f:	mov    DWORD PTR [r15],r14d
    6e72:	jmp    6dad <__cxa_finalize@plt+0x2f95>
    6e77:	nop    WORD PTR [rax+rax*1+0x0]
    6e80:	cmp    BYTE PTR [rbp+0x1b],0x0
    6e84:	jne    6d14 <__cxa_finalize@plt+0x2efc>
    6e8a:	jmp    6d48 <__cxa_finalize@plt+0x2f30>
    6e8f:	nop
    6e90:	push   rbx
    6e91:	mov    ebx,DWORD PTR [rip+0x21b179]        # 222010 <quoting_style_args@@Base+0x790>
    6e97:	cmp    ebx,0xffffffff
    6e9a:	je     6ea0 <__cxa_finalize@plt+0x3088>
    6e9c:	mov    eax,ebx
    6e9e:	pop    rbx
    6e9f:	ret    
    6ea0:	xor    edi,edi
    6ea2:	call   3a20 <umask@plt>
    6ea7:	mov    ebx,eax
    6ea9:	mov    edi,eax
    6eab:	mov    DWORD PTR [rip+0x21b15f],eax        # 222010 <quoting_style_args@@Base+0x790>
    6eb1:	call   3a20 <umask@plt>
    6eb6:	mov    eax,ebx
    6eb8:	pop    rbx
    6eb9:	ret    
    6eba:	nop    WORD PTR [rax+rax*1+0x0]
    6ec0:	push   rbp
    6ec1:	mov    rbp,rsp
    6ec4:	push   r15
    6ec6:	push   r14
    6ec8:	push   r13
    6eca:	push   r12
    6ecc:	mov    r15,rdi
    6ecf:	push   rbx
    6ed0:	mov    r13d,edx
    6ed3:	mov    r12,r9
    6ed6:	sub    rsp,0x3a8
    6edd:	mov    eax,DWORD PTR [rbp+0x10]
    6ee0:	mov    rbx,QWORD PTR [rbp+0x28]
    6ee4:	mov    QWORD PTR [rbp-0x310],rsi
    6eeb:	mov    QWORD PTR [rbp-0x358],rcx
    6ef2:	mov    QWORD PTR [rbp-0x340],r8
    6ef9:	mov    DWORD PTR [rbp-0x314],eax
    6eff:	mov    rax,QWORD PTR [rbp+0x18]
    6f03:	mov    QWORD PTR [rbp-0x350],rax
    6f0a:	mov    rax,QWORD PTR [rbp+0x20]
    6f0e:	mov    QWORD PTR [rbp-0x320],rax
    6f15:	mov    rax,QWORD PTR fs:0x28
    6f1e:	mov    QWORD PTR [rbp-0x38],rax
    6f22:	xor    eax,eax
    6f24:	test   rbx,rbx
    6f27:	setne  BYTE PTR [rbp-0x308]
    6f2e:	cmp    BYTE PTR [r9+0x18],0x0
    6f33:	movzx  eax,BYTE PTR [rbp-0x308]
    6f3a:	je     6f43 <__cxa_finalize@plt+0x312b>
    6f3c:	test   al,al
    6f3e:	je     6f43 <__cxa_finalize@plt+0x312b>
    6f40:	mov    BYTE PTR [rbx],0x0
    6f43:	mov    rax,QWORD PTR [rbp-0x320]
    6f4a:	cmp    DWORD PTR [r12+0x4],0x2
    6f50:	mov    rsi,r15
    6f53:	mov    edi,0x1
    6f58:	mov    BYTE PTR [rax],0x0
    6f5b:	lea    rax,[rbp-0x280]
    6f62:	mov    QWORD PTR [rbp-0x330],rax
    6f69:	mov    rdx,rax
    6f6c:	je     75a0 <__cxa_finalize@plt+0x3788>
    6f72:	call   3a90 <__xstat@plt>
    6f77:	test   eax,eax
    6f79:	mov    rsi,r15
    6f7c:	setne  r14b
    6f80:	test   r14b,r14b
    6f83:	jne    75b7 <__cxa_finalize@plt+0x379f>
    6f89:	mov    eax,DWORD PTR [rbp-0x268]
    6f8f:	mov    DWORD PTR [rbp-0x334],eax
    6f95:	and    eax,0xf000
    6f9a:	cmp    eax,0x4000
    6f9f:	mov    DWORD PTR [rbp-0x318],eax
    6fa5:	je     70b0 <__cxa_finalize@plt+0x3298>
    6fab:	cmp    BYTE PTR [rbp-0x314],0x0
    6fb2:	je     6fd5 <__cxa_finalize@plt+0x31bd>
    6fb4:	mov    r9d,DWORD PTR [r12]
    6fb8:	mov    rdi,QWORD PTR [r12+0x40]
    6fbd:	test   r9d,r9d
    6fc0:	je     7680 <__cxa_finalize@plt+0x3868>
    6fc6:	mov    rdx,QWORD PTR [rbp-0x330]
    6fcd:	mov    rsi,r15
    6fd0:	call   d7a0 <__cxa_finalize@plt+0x9988>
    6fd5:	mov    eax,DWORD PTR [r12+0x4]
    6fda:	mov    DWORD PTR [rbp-0x348],0x1
    6fe4:	cmp    eax,0x4
    6fe7:	je     6ffe <__cxa_finalize@plt+0x31e6>
    6fe9:	cmp    eax,0x3
    6fec:	sete   al
    6fef:	movzx  eax,al
    6ff2:	and    eax,DWORD PTR [rbp-0x314]
    6ff8:	mov    DWORD PTR [rbp-0x348],eax
    6ffe:	test   r13b,r13b
    7001:	jne    70d8 <__cxa_finalize@plt+0x32c0>
    7007:	mov    eax,DWORD PTR [rbp-0x318]
    700d:	cmp    eax,0x8000
    7012:	je     7036 <__cxa_finalize@plt+0x321e>
    7014:	cmp    BYTE PTR [r12+0x14],0x0
    701a:	je     7730 <__cxa_finalize@plt+0x3918>
    7020:	cmp    eax,0x4000
    7025:	je     7730 <__cxa_finalize@plt+0x3918>
    702b:	cmp    eax,0xa000
    7030:	je     7730 <__cxa_finalize@plt+0x3918>
    7036:	cmp    BYTE PTR [r12+0x18],0x0
    703c:	jne    7730 <__cxa_finalize@plt+0x3918>
    7042:	cmp    BYTE PTR [r12+0x2c],0x0
    7048:	jne    7730 <__cxa_finalize@plt+0x3918>
    704e:	cmp    BYTE PTR [r12+0x17],0x0
    7054:	jne    7730 <__cxa_finalize@plt+0x3918>
    705a:	mov    r8d,DWORD PTR [r12]
    705e:	test   r8d,r8d
    7061:	jne    7730 <__cxa_finalize@plt+0x3918>
    7067:	cmp    BYTE PTR [r12+0x15],0x0
    706d:	jne    7730 <__cxa_finalize@plt+0x3918>
    7073:	lea    rax,[rbp-0x1f0]
    707a:	mov    rsi,QWORD PTR [rbp-0x310]
    7081:	mov    edi,0x1
    7086:	mov    rdx,rax
    7089:	mov    QWORD PTR [rbp-0x360],rax
    7090:	call   3a90 <__xstat@plt>
    7095:	test   eax,eax
    7097:	mov    r8d,0x1
    709d:	setne  BYTE PTR [rbp-0x328]
    70a4:	jmp    775e <__cxa_finalize@plt+0x3946>
    70a9:	nop    DWORD PTR [rax+0x0]
    70b0:	cmp    BYTE PTR [r12+0x2a],0x0
    70b6:	je     76e8 <__cxa_finalize@plt+0x38d0>
    70bc:	cmp    BYTE PTR [rbp-0x314],0x0
    70c3:	je     6fd5 <__cxa_finalize@plt+0x31bd>
    70c9:	mov    rdi,QWORD PTR [r12+0x40]
    70ce:	jmp    6fc6 <__cxa_finalize@plt+0x31ae>
    70d3:	nop    DWORD PTR [rax+rax*1+0x0]
    70d8:	xor    r8d,r8d
    70db:	mov    BYTE PTR [rbp-0x328],0x1
    70e2:	mov    QWORD PTR [rbp-0x360],0x0
    70ed:	cmp    BYTE PTR [rbp-0x314],0x0
    70f4:	je     71b0 <__cxa_finalize@plt+0x3398>
    70fa:	cmp    QWORD PTR [r12+0x38],0x0
    7100:	je     71b0 <__cxa_finalize@plt+0x3398>
    7106:	cmp    BYTE PTR [r12+0x18],0x0
    710c:	jne    7620 <__cxa_finalize@plt+0x3808>
    7112:	mov    edx,DWORD PTR [r12]
    7116:	test   edx,edx
    7118:	jne    7ce0 <__cxa_finalize@plt+0x3ec8>
    711e:	test   r8b,r8b
    7121:	lea    rdx,[rbp-0x1f0]
    7128:	je     8840 <__cxa_finalize@plt+0x4a28>
    712e:	mov    eax,DWORD PTR [rdx+0x18]
    7131:	and    eax,0xf000
    7136:	cmp    eax,0xa000
    713b:	jne    71b0 <__cxa_finalize@plt+0x3398>
    713d:	mov    rdi,QWORD PTR [r12+0x38]
    7142:	mov    rsi,QWORD PTR [rbp-0x310]
    7149:	call   d830 <__cxa_finalize@plt+0x9a18>
    714e:	test   al,al
    7150:	je     71b0 <__cxa_finalize@plt+0x3398>
    7152:	mov    rdx,QWORD PTR [rbp-0x310]
    7159:	mov    esi,0x4
    715e:	mov    edi,0x1
    7163:	xor    r14d,r14d
    7166:	call   10960 <__cxa_finalize@plt+0xcb48>
    716b:	mov    rdx,r15
    716e:	mov    esi,0x4
    7173:	xor    edi,edi
    7175:	mov    r12,rax
    7178:	call   10960 <__cxa_finalize@plt+0xcb48>
    717d:	lea    rsi,[rip+0x14bf4]        # 1bd78 <_IO_stdin_used@@Base+0x23d8>
    7184:	mov    rbx,rax
    7187:	mov    edx,0x5
    718c:	xor    edi,edi
    718e:	call   3700 <dcgettext@plt>
    7193:	mov    r8,r12
    7196:	mov    rdx,rax
    7199:	mov    rcx,rbx
    719c:	xor    esi,esi
    719e:	xor    edi,edi
    71a0:	xor    eax,eax
    71a2:	call   3c20 <error@plt>
    71a7:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    71ac:	nop    DWORD PTR [rax+0x0]
    71b0:	cmp    BYTE PTR [r12+0x2e],0x0
    71b6:	je     7630 <__cxa_finalize@plt+0x3818>
    71bc:	cmp    BYTE PTR [r12+0x18],0x0
    71c2:	jne    77d0 <__cxa_finalize@plt+0x39b8>
    71c8:	cmp    DWORD PTR [rbp-0x318],0x4000
    71d2:	je     7ad0 <__cxa_finalize@plt+0x3cb8>
    71d8:	mov    rdx,QWORD PTR [rbp-0x360]
    71df:	mov    rsi,QWORD PTR [rbp-0x310]
    71e6:	mov    rdi,r15
    71e9:	call   6060 <__cxa_finalize@plt+0x2248>
    71ee:	cmp    BYTE PTR [r12+0x18],0x0
    71f4:	jne    77e8 <__cxa_finalize@plt+0x39d0>
    71fa:	cmp    BYTE PTR [r12+0x22],0x0
    7200:	jne    7bb0 <__cxa_finalize@plt+0x3d98>
    7206:	movzx  ebx,BYTE PTR [rbp-0x328]
    720d:	xor    r13d,r13d
    7210:	mov    eax,DWORD PTR [rbp-0x334]
    7216:	and    eax,0xfff
    721b:	cmp    BYTE PTR [r12+0x2b],0x0
    7221:	mov    DWORD PTR [rbp-0x308],eax
    7227:	je     7239 <__cxa_finalize@plt+0x3421>
    7229:	mov    eax,DWORD PTR [r12+0x10]
    722e:	and    eax,0xfff
    7233:	mov    DWORD PTR [rbp-0x308],eax
    7239:	cmp    BYTE PTR [r12+0x1d],0x0
    723f:	jne    7858 <__cxa_finalize@plt+0x3a40>
    7245:	cmp    DWORD PTR [rbp-0x318],0x4000
    724f:	je     8050 <__cxa_finalize@plt+0x4238>
    7255:	mov    edx,DWORD PTR [rbp-0x334]
    725b:	mov    rsi,QWORD PTR [rbp-0x310]
    7262:	mov    r8,r12
    7265:	mov    ecx,ebx
    7267:	mov    rdi,r15
    726a:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    726f:	test   al,al
    7271:	mov    DWORD PTR [rbp-0x368],0x0
    727b:	je     75f3 <__cxa_finalize@plt+0x37db>
    7281:	movzx  eax,BYTE PTR [r12+0x2c]
    7287:	test   al,al
    7289:	mov    BYTE PTR [rbp-0x340],al
    728f:	jne    7c50 <__cxa_finalize@plt+0x3e38>
    7295:	movzx  eax,BYTE PTR [r12+0x17]
    729b:	test   al,al
    729d:	mov    BYTE PTR [rbp-0x335],al
    72a3:	jne    86e0 <__cxa_finalize@plt+0x48c8>
    72a9:	mov    eax,DWORD PTR [rbp-0x318]
    72af:	cmp    eax,0x8000
    72b4:	je     8720 <__cxa_finalize@plt+0x4908>
    72ba:	cmp    eax,0xa000
    72bf:	setne  r9b
    72c3:	and    r9b,BYTE PTR [r12+0x14]
    72c8:	jne    8720 <__cxa_finalize@plt+0x4908>
    72ce:	cmp    DWORD PTR [rbp-0x318],0x1000
    72d8:	je     9275 <__cxa_finalize@plt+0x545d>
    72de:	mov    ebx,DWORD PTR [rbp-0x334]
    72e4:	mov    BYTE PTR [rbp-0x320],r9b
    72eb:	mov    eax,ebx
    72ed:	and    eax,0xb000
    72f2:	cmp    eax,0x2000
    72f7:	sete   dl
    72fa:	cmp    DWORD PTR [rbp-0x318],0xc000
    7304:	sete   al
    7307:	or     dl,al
    7309:	mov    BYTE PTR [rbp-0x308],dl
    730f:	je     8ee3 <__cxa_finalize@plt+0x50cb>
    7315:	mov    edx,DWORD PTR [rbp-0x368]
    731b:	mov    rax,QWORD PTR [rbp-0x258]
    7322:	lea    rcx,[rbp-0x2f0]
    7329:	mov    rsi,QWORD PTR [rbp-0x310]
    7330:	xor    edi,edi
    7332:	not    edx
    7334:	mov    QWORD PTR [rbp-0x2f0],rax
    733b:	and    edx,ebx
    733d:	call   3a60 <__xmknod@plt>
    7342:	movzx  r9d,BYTE PTR [rbp-0x320]
    734a:	test   eax,eax
    734c:	mov    BYTE PTR [rbp-0x340],r9b
    7353:	mov    BYTE PTR [rbp-0x335],r9b
    735a:	jne    9440 <__cxa_finalize@plt+0x5628>
    7360:	cmp    DWORD PTR [rbp-0x318],0x4000
    736a:	setne  bl
    736d:	cmp    BYTE PTR [rbp-0x328],0x0
    7374:	jne    73a0 <__cxa_finalize@plt+0x3588>
    7376:	cmp    BYTE PTR [r12+0x14],0x1
    737c:	je     73a0 <__cxa_finalize@plt+0x3588>
    737e:	test   bl,bl
    7380:	je     73a0 <__cxa_finalize@plt+0x3588>
    7382:	movabs rax,0xff000000ff00
    738c:	test   QWORD PTR [r12+0x20],rax
    7391:	jne    9189 <__cxa_finalize@plt+0x5371>
    7397:	nop    WORD PTR [rax+rax*1+0x0]
    73a0:	cmp    BYTE PTR [rbp-0x314],0x0
    73a7:	je     73e8 <__cxa_finalize@plt+0x35d0>
    73a9:	cmp    QWORD PTR [r12+0x38],0x0
    73af:	je     73e8 <__cxa_finalize@plt+0x35d0>
    73b1:	lea    r13,[rbp-0xd0]
    73b8:	mov    rsi,QWORD PTR [rbp-0x310]
    73bf:	mov    edi,0x1
    73c4:	mov    BYTE PTR [rbp-0x314],r9b
    73cb:	mov    rdx,r13
    73ce:	call   3740 <__lxstat@plt>
    73d3:	test   eax,eax
    73d5:	movzx  r9d,BYTE PTR [rbp-0x314]
    73dd:	je     8f14 <__cxa_finalize@plt+0x50fc>
    73e3:	nop    DWORD PTR [rax+rax*1+0x0]
    73e8:	cmp    BYTE PTR [r12+0x17],0x0
    73ee:	je     73f8 <__cxa_finalize@plt+0x35e0>
    73f0:	test   bl,bl
    73f2:	jne    7590 <__cxa_finalize@plt+0x3778>
    73f8:	test   r9b,r9b
    73fb:	jne    7590 <__cxa_finalize@plt+0x3778>
    7401:	cmp    BYTE PTR [r12+0x1f],0x0
    7407:	je     74c0 <__cxa_finalize@plt+0x36a8>
    740d:	mov    rax,QWORD PTR [rbp-0x238]
    7414:	cmp    BYTE PTR [rbp-0x340],0x0
    741b:	lea    rsi,[rbp-0xd0]
    7422:	mov    rdi,QWORD PTR [rbp-0x310]
    7429:	mov    QWORD PTR [rbp-0xd0],rax
    7430:	mov    rax,QWORD PTR [rbp-0x230]
    7437:	mov    QWORD PTR [rbp-0xc8],rax
    743e:	mov    rax,QWORD PTR [rbp-0x228]
    7445:	mov    QWORD PTR [rbp-0xc0],rax
    744c:	mov    rax,QWORD PTR [rbp-0x220]
    7453:	mov    QWORD PTR [rbp-0xb8],rax
    745a:	je     8ed1 <__cxa_finalize@plt+0x50b9>
    7460:	call   12740 <__cxa_finalize@plt+0xe928>
    7465:	test   eax,eax
    7467:	je     74c0 <__cxa_finalize@plt+0x36a8>
    7469:	call   3540 <__errno_location@plt>
    746e:	cmp    DWORD PTR [rax],0x26
    7471:	je     74c0 <__cxa_finalize@plt+0x36a8>
    7473:	mov    rsi,QWORD PTR [rbp-0x310]
    747a:	mov    edi,0x4
    747f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    7484:	lea    rsi,[rip+0x144fa]        # 1b985 <_IO_stdin_used@@Base+0x1fe5>
    748b:	xor    edi,edi
    748d:	mov    edx,0x5
    7492:	mov    rbx,rax
    7495:	call   3700 <dcgettext@plt>
    749a:	mov    r13,rax
    749d:	call   3540 <__errno_location@plt>
    74a2:	mov    esi,DWORD PTR [rax]
    74a4:	xor    edi,edi
    74a6:	xor    eax,eax
    74a8:	mov    rcx,rbx
    74ab:	mov    rdx,r13
    74ae:	call   3c20 <error@plt>
    74b3:	cmp    BYTE PTR [r12+0x24],0x0
    74b9:	jne    75f0 <__cxa_finalize@plt+0x37d8>
    74bf:	nop
    74c0:	cmp    BYTE PTR [rbp-0x340],0x0
    74c7:	jne    8c60 <__cxa_finalize@plt+0x4e48>
    74cd:	cmp    BYTE PTR [r12+0x1d],0x0
    74d3:	je     7539 <__cxa_finalize@plt+0x3721>
    74d5:	cmp    BYTE PTR [rbp-0x328],0x0
    74dc:	jne    74f0 <__cxa_finalize@plt+0x36d8>
    74de:	mov    eax,DWORD PTR [rbp-0x1d4]
    74e4:	cmp    DWORD PTR [rbp-0x264],eax
    74ea:	je     9754 <__cxa_finalize@plt+0x593c>
    74f0:	movzx  r8d,BYTE PTR [rbp-0x328]
    74f8:	mov    rcx,QWORD PTR [rbp-0x330]
    74ff:	lea    r9,[rbp-0x1f0]
    7506:	mov    rsi,QWORD PTR [rbp-0x310]
    750d:	mov    edx,0xffffffff
    7512:	mov    rdi,r12
    7515:	call   6ca0 <__cxa_finalize@plt+0x2e88>
    751a:	cmp    eax,0xffffffff
    751d:	je     75f0 <__cxa_finalize@plt+0x37d8>
    7523:	mov    ebx,DWORD PTR [rbp-0x334]
    7529:	mov    edx,ebx
    752b:	and    dh,0xf1
    752e:	test   eax,eax
    7530:	cmovne edx,ebx
    7533:	mov    DWORD PTR [rbp-0x334],edx
    7539:	cmp    BYTE PTR [r12+0x27],0x0
    753f:	jne    9352 <__cxa_finalize@plt+0x553a>
    7545:	movabs rax,0xff0000000000ff
    754f:	test   QWORD PTR [r12+0x18],rax
    7554:	jne    91c8 <__cxa_finalize@plt+0x53b0>
    755a:	cmp    BYTE PTR [r12+0x2b],0x0
    7560:	jne    94be <__cxa_finalize@plt+0x56a6>
    7566:	cmp    BYTE PTR [r12+0x20],0x0
    756c:	jne    9670 <__cxa_finalize@plt+0x5858>
    7572:	mov    eax,DWORD PTR [rbp-0x368]
    7578:	test   eax,eax
    757a:	jne    98e6 <__cxa_finalize@plt+0x5ace>
    7580:	cmp    BYTE PTR [rbp-0x335],0x0
    7587:	jne    9929 <__cxa_finalize@plt+0x5b11>
    758d:	nop    DWORD PTR [rax]
    7590:	movzx  r14d,BYTE PTR [rbp-0x308]
    7598:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    759a:	nop    WORD PTR [rax+rax*1+0x0]
    75a0:	call   3740 <__lxstat@plt>
    75a5:	test   eax,eax
    75a7:	mov    rsi,r15
    75aa:	setne  r14b
    75ae:	test   r14b,r14b
    75b1:	je     6f89 <__cxa_finalize@plt+0x3171>
    75b7:	mov    edi,0x4
    75bc:	call   10a80 <__cxa_finalize@plt+0xcc68>
    75c1:	lea    rsi,[rip+0x14269]        # 1b831 <_IO_stdin_used@@Base+0x1e91>
    75c8:	mov    edx,0x5
    75cd:	xor    edi,edi
    75cf:	mov    r12,rax
    75d2:	call   3700 <dcgettext@plt>
    75d7:	mov    rbx,rax
    75da:	call   3540 <__errno_location@plt>
    75df:	mov    esi,DWORD PTR [rax]
    75e1:	mov    rcx,r12
    75e4:	mov    rdx,rbx
    75e7:	xor    edi,edi
    75e9:	xor    eax,eax
    75eb:	call   3c20 <error@plt>
    75f0:	xor    r14d,r14d
    75f3:	mov    rcx,QWORD PTR [rbp-0x38]
    75f7:	xor    rcx,QWORD PTR fs:0x28
    7600:	mov    eax,r14d
    7603:	jne    9db2 <__cxa_finalize@plt+0x5f9a>
    7609:	lea    rsp,[rbp-0x28]
    760d:	pop    rbx
    760e:	pop    r12
    7610:	pop    r13
    7612:	pop    r14
    7614:	pop    r15
    7616:	pop    rbp
    7617:	ret    
    7618:	nop    DWORD PTR [rax+rax*1+0x0]
    7620:	cmp    BYTE PTR [r12+0x2e],0x0
    7626:	jne    77d0 <__cxa_finalize@plt+0x39b8>
    762c:	nop    DWORD PTR [rax+0x0]
    7630:	cmp    BYTE PTR [r12+0x2a],0x0
    7636:	je     71ee <__cxa_finalize@plt+0x33d6>
    763c:	cmp    DWORD PTR [rbp-0x318],0x4000
    7646:	jne    71ee <__cxa_finalize@plt+0x33d6>
    764c:	cmp    BYTE PTR [rbp-0x314],0x0
    7653:	mov    rdx,QWORD PTR [rbp-0x280]
    765a:	mov    rdi,QWORD PTR [rbp-0x278]
    7661:	je     7d30 <__cxa_finalize@plt+0x3f18>
    7667:	mov    rsi,rdi
    766a:	mov    rdi,QWORD PTR [rbp-0x310]
    7671:	call   b150 <__cxa_finalize@plt+0x7338>
    7676:	mov    r13,rax
    7679:	jmp    7b5d <__cxa_finalize@plt+0x3d45>
    767e:	xchg   ax,ax
    7680:	mov    rdx,QWORD PTR [rbp-0x330]
    7687:	mov    rsi,r15
    768a:	call   d830 <__cxa_finalize@plt+0x9a18>
    768f:	test   al,al
    7691:	je     70c9 <__cxa_finalize@plt+0x32b1>
    7697:	mov    rsi,r15
    769a:	mov    edi,0x4
    769f:	mov    BYTE PTR [rbp-0x308],al
    76a5:	call   10a80 <__cxa_finalize@plt+0xcc68>
    76aa:	lea    rsi,[rip+0x14547]        # 1bbf8 <_IO_stdin_used@@Base+0x2258>
    76b1:	mov    rbx,rax
    76b4:	mov    edx,0x5
    76b9:	xor    edi,edi
    76bb:	call   3700 <dcgettext@plt>
    76c0:	mov    rcx,rbx
    76c3:	mov    rdx,rax
    76c6:	xor    esi,esi
    76c8:	xor    edi,edi
    76ca:	xor    eax,eax
    76cc:	call   3c20 <error@plt>
    76d1:	movzx  r8d,BYTE PTR [rbp-0x308]
    76d9:	mov    r14d,r8d
    76dc:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    76e1:	nop    DWORD PTR [rax+0x0]
    76e8:	mov    edi,0x4
    76ed:	call   10a80 <__cxa_finalize@plt+0xcc68>
    76f2:	cmp    BYTE PTR [r12+0x19],0x0
    76f8:	mov    rbx,rax
    76fb:	mov    edx,0x5
    7700:	je     7cc8 <__cxa_finalize@plt+0x3eb0>
    7706:	lea    rsi,[rip+0x14133]        # 1b840 <_IO_stdin_used@@Base+0x1ea0>
    770d:	xor    edi,edi
    770f:	call   3700 <dcgettext@plt>
    7714:	mov    rdx,rax
    7717:	mov    rcx,rbx
    771a:	xor    esi,esi
    771c:	xor    edi,edi
    771e:	xor    eax,eax
    7720:	call   3c20 <error@plt>
    7725:	xor    r14d,r14d
    7728:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    772d:	nop    DWORD PTR [rax]
    7730:	lea    rax,[rbp-0x1f0]
    7737:	mov    rsi,QWORD PTR [rbp-0x310]
    773e:	mov    edi,0x1
    7743:	mov    rdx,rax
    7746:	mov    QWORD PTR [rbp-0x360],rax
    774d:	call   3740 <__lxstat@plt>
    7752:	test   eax,eax
    7754:	mov    r8d,r13d
    7757:	setne  BYTE PTR [rbp-0x328]
    775e:	cmp    BYTE PTR [rbp-0x328],0x0
    7765:	je     79c8 <__cxa_finalize@plt+0x3bb0>
    776b:	call   3540 <__errno_location@plt>
    7770:	cmp    DWORD PTR [rax],0x2
    7773:	mov    QWORD PTR [rbp-0x328],rax
    777a:	je     70d8 <__cxa_finalize@plt+0x32c0>
    7780:	mov    rsi,QWORD PTR [rbp-0x310]
    7787:	mov    edi,0x4
    778c:	mov    r14d,r13d
    778f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    7794:	lea    rsi,[rip+0x14096]        # 1b831 <_IO_stdin_used@@Base+0x1e91>
    779b:	mov    edx,0x5
    77a0:	xor    edi,edi
    77a2:	mov    rbx,rax
    77a5:	call   3700 <dcgettext@plt>
    77aa:	mov    r8,QWORD PTR [rbp-0x328]
    77b1:	mov    rdx,rax
    77b4:	mov    rcx,rbx
    77b7:	xor    edi,edi
    77b9:	xor    eax,eax
    77bb:	mov    esi,DWORD PTR [r8]
    77be:	call   3c20 <error@plt>
    77c3:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    77c8:	nop    DWORD PTR [rax+rax*1+0x0]
    77d0:	cmp    DWORD PTR [rbp-0x318],0x4000
    77da:	jne    77e8 <__cxa_finalize@plt+0x39d0>
    77dc:	cmp    BYTE PTR [r12+0x2a],0x0
    77e2:	jne    764c <__cxa_finalize@plt+0x3834>
    77e8:	cmp    QWORD PTR [rbp-0x270],0x1
    77f0:	je     8090 <__cxa_finalize@plt+0x4278>
    77f6:	xor    r13d,r13d
    77f9:	cmp    BYTE PTR [r12+0x22],0x0
    77ff:	jne    7ae8 <__cxa_finalize@plt+0x3cd0>
    7805:	mov    rsi,QWORD PTR [rbp-0x310]
    780c:	mov    rdi,r15
    780f:	call   3ca0 <rename@plt>
    7814:	test   eax,eax
    7816:	jne    7bc8 <__cxa_finalize@plt+0x3db0>
    781c:	cmp    BYTE PTR [r12+0x2e],0x0
    7822:	jne    7fa8 <__cxa_finalize@plt+0x4190>
    7828:	cmp    BYTE PTR [r12+0x21],0x0
    782e:	jne    7f88 <__cxa_finalize@plt+0x4170>
    7834:	test   rbx,rbx
    7837:	je     783c <__cxa_finalize@plt+0x3a24>
    7839:	mov    BYTE PTR [rbx],0x1
    783c:	cmp    BYTE PTR [rbp-0x314],0x0
    7843:	jne    7f60 <__cxa_finalize@plt+0x4148>
    7849:	mov    r14d,0x1
    784f:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    7854:	nop    DWORD PTR [rax+0x0]
    7858:	mov    edx,DWORD PTR [rbp-0x334]
    785e:	mov    rsi,QWORD PTR [rbp-0x310]
    7865:	mov    r8,r12
    7868:	mov    ecx,ebx
    786a:	mov    rdi,r15
    786d:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    7872:	test   al,al
    7874:	je     75f3 <__cxa_finalize@plt+0x37db>
    787a:	mov    eax,DWORD PTR [rbp-0x308]
    7880:	and    eax,0x3f
    7883:	cmp    DWORD PTR [rbp-0x318],0x4000
    788d:	mov    DWORD PTR [rbp-0x368],eax
    7893:	jne    7281 <__cxa_finalize@plt+0x3469>
    7899:	cmp    QWORD PTR [rbp-0x340],0x0
    78a1:	mov    rdx,QWORD PTR [rbp-0x278]
    78a8:	mov    rcx,QWORD PTR [rbp-0x280]
    78af:	mov    rax,QWORD PTR [rbp-0x340]
    78b6:	jne    78cc <__cxa_finalize@plt+0x3ab4>
    78b8:	jmp    8250 <__cxa_finalize@plt+0x4438>
    78bd:	nop    DWORD PTR [rax]
    78c0:	mov    rax,QWORD PTR [rax]
    78c3:	test   rax,rax
    78c6:	je     8250 <__cxa_finalize@plt+0x4438>
    78cc:	cmp    QWORD PTR [rax+0x8],rdx
    78d0:	jne    78c0 <__cxa_finalize@plt+0x3aa8>
    78d2:	cmp    QWORD PTR [rax+0x10],rcx
    78d6:	jne    78c0 <__cxa_finalize@plt+0x3aa8>
    78d8:	mov    rsi,r15
    78db:	mov    edi,0x4
    78e0:	call   10a80 <__cxa_finalize@plt+0xcc68>
    78e5:	lea    rsi,[rip+0x14674]        # 1bf60 <_IO_stdin_used@@Base+0x25c0>
    78ec:	mov    rbx,rax
    78ef:	mov    edx,0x5
    78f4:	xor    edi,edi
    78f6:	call   3700 <dcgettext@plt>
    78fb:	mov    rcx,rbx
    78fe:	mov    rdx,rax
    7901:	xor    esi,esi
    7903:	xor    edi,edi
    7905:	xor    eax,eax
    7907:	call   3c20 <error@plt>
    790c:	cmp    BYTE PTR [r12+0x25],0x0
    7912:	je     7919 <__cxa_finalize@plt+0x3b01>
    7914:	call   68a0 <__cxa_finalize@plt+0x2a88>
    7919:	test   r13,r13
    791c:	jne    7938 <__cxa_finalize@plt+0x3b20>
    791e:	mov    rsi,QWORD PTR [rbp-0x280]
    7925:	mov    rdi,QWORD PTR [rbp-0x278]
    792c:	call   b080 <__cxa_finalize@plt+0x7268>
    7931:	nop    DWORD PTR [rax+0x0]
    7938:	mov    rdi,QWORD PTR [rbp-0x360]
    793f:	test   rdi,rdi
    7942:	je     75f3 <__cxa_finalize@plt+0x37db>
    7948:	mov    rsi,QWORD PTR [rbp-0x310]
    794f:	call   3ca0 <rename@plt>
    7954:	test   eax,eax
    7956:	jne    8508 <__cxa_finalize@plt+0x46f0>
    795c:	cmp    BYTE PTR [r12+0x2e],0x0
    7962:	je     75f3 <__cxa_finalize@plt+0x37db>
    7968:	mov    rdx,QWORD PTR [rbp-0x310]
    796f:	mov    esi,0x4
    7974:	mov    edi,0x1
    7979:	call   10960 <__cxa_finalize@plt+0xcb48>
    797e:	mov    rdx,QWORD PTR [rbp-0x360]
    7985:	xor    edi,edi
    7987:	mov    esi,0x4
    798c:	mov    r12,rax
    798f:	call   10960 <__cxa_finalize@plt+0xcb48>
    7994:	lea    rsi,[rip+0x140b1]        # 1ba4c <_IO_stdin_used@@Base+0x20ac>
    799b:	mov    rbx,rax
    799e:	xor    edi,edi
    79a0:	mov    edx,0x5
    79a5:	call   3700 <dcgettext@plt>
    79aa:	mov    rcx,r12
    79ad:	mov    rsi,rax
    79b0:	mov    rdx,rbx
    79b3:	mov    edi,0x1
    79b8:	xor    eax,eax
    79ba:	call   3bb0 <__printf_chk@plt>
    79bf:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    79c4:	nop    DWORD PTR [rax+0x0]
    79c8:	mov    rax,QWORD PTR [rbp-0x1e8]
    79cf:	cmp    QWORD PTR [rbp-0x278],rax
    79d6:	je     80b0 <__cxa_finalize@plt+0x4298>
    79dc:	cmp    DWORD PTR [r12+0x4],0x2
    79e2:	je     8360 <__cxa_finalize@plt+0x4548>
    79e8:	cmp    DWORD PTR [rbp-0x318],0x4000
    79f2:	je     7dc0 <__cxa_finalize@plt+0x3fa8>
    79f8:	cmp    BYTE PTR [r12+0x2d],0x0
    79fe:	je     8300 <__cxa_finalize@plt+0x44e8>
    7a04:	xor    ecx,ecx
    7a06:	cmp    BYTE PTR [r12+0x1f],0x0
    7a0c:	je     7a2e <__cxa_finalize@plt+0x3c16>
    7a0e:	cmp    BYTE PTR [r12+0x18],0x0
    7a14:	mov    ecx,0x1
    7a19:	je     7a2e <__cxa_finalize@plt+0x3c16>
    7a1b:	xor    ecx,ecx
    7a1d:	mov    rax,QWORD PTR [rbp-0x280]
    7a24:	cmp    QWORD PTR [rbp-0x1f0],rax
    7a2b:	setne  cl
    7a2e:	mov    rdx,QWORD PTR [rbp-0x330]
    7a35:	mov    rsi,QWORD PTR [rbp-0x360]
    7a3c:	mov    rdi,QWORD PTR [rbp-0x310]
    7a43:	mov    BYTE PTR [rbp-0x368],r8b
    7a4a:	call   11900 <__cxa_finalize@plt+0xdae8>
    7a4f:	test   eax,eax
    7a51:	movzx  r8d,BYTE PTR [rbp-0x368]
    7a59:	js     8300 <__cxa_finalize@plt+0x44e8>
    7a5f:	test   rbx,rbx
    7a62:	je     7a67 <__cxa_finalize@plt+0x3c4f>
    7a64:	mov    BYTE PTR [rbx],0x1
    7a67:	mov    rdx,QWORD PTR [rbp-0x280]
    7a6e:	mov    rsi,QWORD PTR [rbp-0x278]
    7a75:	mov    rdi,QWORD PTR [rbp-0x310]
    7a7c:	call   b150 <__cxa_finalize@plt+0x7338>
    7a81:	test   rax,rax
    7a84:	je     7849 <__cxa_finalize@plt+0x3a31>
    7a8a:	movzx  ecx,BYTE PTR [r12+0x2e]
    7a90:	mov    r8d,DWORD PTR [rbp-0x348]
    7a97:	mov    edx,0x1
    7a9c:	mov    rsi,QWORD PTR [rbp-0x310]
    7aa3:	mov    rdi,rax
    7aa6:	call   6270 <__cxa_finalize@plt+0x2458>
    7aab:	test   al,al
    7aad:	jne    7849 <__cxa_finalize@plt+0x3a31>
    7ab3:	cmp    BYTE PTR [r12+0x25],0x0
    7ab9:	je     75f3 <__cxa_finalize@plt+0x37db>
    7abf:	call   68a0 <__cxa_finalize@plt+0x2a88>
    7ac4:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    7ac9:	nop    DWORD PTR [rax+0x0]
    7ad0:	cmp    BYTE PTR [r12+0x2a],0x0
    7ad6:	jne    764c <__cxa_finalize@plt+0x3834>
    7adc:	cmp    BYTE PTR [r12+0x22],0x0
    7ae2:	je     7c40 <__cxa_finalize@plt+0x3e28>
    7ae8:	cmp    BYTE PTR [r12+0x17],0x0
    7aee:	jne    7c40 <__cxa_finalize@plt+0x3e28>
    7af4:	cmp    QWORD PTR [rbp-0x270],0x1
    7afc:	ja     7b40 <__cxa_finalize@plt+0x3d28>
    7afe:	cmp    BYTE PTR [rbp-0x314],0x0
    7b05:	mov    eax,DWORD PTR [r12+0x4]
    7b0a:	je     7b11 <__cxa_finalize@plt+0x3cf9>
    7b0c:	cmp    eax,0x3
    7b0f:	je     7b40 <__cxa_finalize@plt+0x3d28>
    7b11:	xor    r13d,r13d
    7b14:	cmp    eax,0x4
    7b17:	je     7b40 <__cxa_finalize@plt+0x3d28>
    7b19:	nop    DWORD PTR [rax+0x0]
    7b20:	cmp    BYTE PTR [r12+0x18],0x0
    7b26:	jne    7805 <__cxa_finalize@plt+0x39ed>
    7b2c:	movzx  ebx,BYTE PTR [rbp-0x328]
    7b33:	jmp    7210 <__cxa_finalize@plt+0x33f8>
    7b38:	nop    DWORD PTR [rax+rax*1+0x0]
    7b40:	mov    rdx,QWORD PTR [rbp-0x280]
    7b47:	mov    rsi,QWORD PTR [rbp-0x278]
    7b4e:	mov    rdi,QWORD PTR [rbp-0x310]
    7b55:	call   b150 <__cxa_finalize@plt+0x7338>
    7b5a:	mov    r13,rax
    7b5d:	test   r13,r13
    7b60:	je     7b20 <__cxa_finalize@plt+0x3d08>
    7b62:	cmp    DWORD PTR [rbp-0x318],0x4000
    7b6c:	je     7d44 <__cxa_finalize@plt+0x3f2c>
    7b72:	movzx  ecx,BYTE PTR [r12+0x2e]
    7b78:	mov    r8d,DWORD PTR [rbp-0x348]
    7b7f:	mov    edx,0x1
    7b84:	mov    rsi,QWORD PTR [rbp-0x310]
    7b8b:	mov    rdi,r13
    7b8e:	call   6270 <__cxa_finalize@plt+0x2458>
    7b93:	test   al,al
    7b95:	jne    7849 <__cxa_finalize@plt+0x3a31>
    7b9b:	cmp    BYTE PTR [r12+0x25],0x0
    7ba1:	je     7938 <__cxa_finalize@plt+0x3b20>
    7ba7:	jmp    7914 <__cxa_finalize@plt+0x3afc>
    7bac:	nop    DWORD PTR [rax+0x0]
    7bb0:	cmp    BYTE PTR [r12+0x17],0x0
    7bb6:	je     7af4 <__cxa_finalize@plt+0x3cdc>
    7bbc:	xor    r13d,r13d
    7bbf:	jmp    7b2c <__cxa_finalize@plt+0x3d14>
    7bc4:	nop    DWORD PTR [rax+0x0]
    7bc8:	call   3540 <__errno_location@plt>
    7bcd:	mov    rbx,rax
    7bd0:	mov    eax,DWORD PTR [rax]
    7bd2:	cmp    eax,0x16
    7bd5:	je     7fe5 <__cxa_finalize@plt+0x41cd>
    7bdb:	cmp    eax,0x12
    7bde:	jne    85e0 <__cxa_finalize@plt+0x47c8>
    7be4:	cmp    DWORD PTR [rbp-0x318],0x4000
    7bee:	mov    rdi,QWORD PTR [rbp-0x310]
    7bf5:	je     8d21 <__cxa_finalize@plt+0x4f09>
    7bfb:	call   3560 <unlink@plt>
    7c00:	test   eax,eax
    7c02:	je     7c0d <__cxa_finalize@plt+0x3df5>
    7c04:	cmp    DWORD PTR [rbx],0x2
    7c07:	jne    8d37 <__cxa_finalize@plt+0x4f1f>
    7c0d:	cmp    DWORD PTR [rbp-0x318],0x4000
    7c17:	setne  al
    7c1a:	and    al,BYTE PTR [r12+0x2e]
    7c1f:	mov    BYTE PTR [rbp-0x328],al
    7c25:	jne    8f35 <__cxa_finalize@plt+0x511d>
    7c2b:	mov    ebx,0x1
    7c30:	mov    BYTE PTR [rbp-0x328],0x1
    7c37:	jmp    7210 <__cxa_finalize@plt+0x33f8>
    7c3c:	nop    DWORD PTR [rax+0x0]
    7c40:	xor    r13d,r13d
    7c43:	jmp    7b20 <__cxa_finalize@plt+0x3d08>
    7c48:	nop    DWORD PTR [rax+rax*1+0x0]
    7c50:	cmp    BYTE PTR [r15],0x2f
    7c54:	je     7c87 <__cxa_finalize@plt+0x3e6f>
    7c56:	mov    rdi,QWORD PTR [rbp-0x310]
    7c5d:	call   d520 <__cxa_finalize@plt+0x9708>
    7c62:	mov    rbx,rax
    7c65:	lea    rax,[rip+0x11e72]        # 19ade <_IO_stdin_used@@Base+0x13e>
    7c6c:	mov    ecx,0x2
    7c71:	mov    rdi,rbx
    7c74:	mov    rsi,rax
    7c77:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7c79:	jne    8ca6 <__cxa_finalize@plt+0x4e8e>
    7c7f:	mov    rdi,rbx
    7c82:	call   3e10 <free@plt>
    7c87:	movzx  ecx,BYTE PTR [r12+0x16]
    7c8d:	mov    rdx,QWORD PTR [rbp-0x310]
    7c94:	mov    esi,0xffffff9c
    7c99:	mov    rdi,r15
    7c9c:	call   b760 <__cxa_finalize@plt+0x7948>
    7ca1:	xor    r9d,r9d
    7ca4:	test   eax,eax
    7ca6:	js     8d73 <__cxa_finalize@plt+0x4f5b>
    7cac:	movzx  eax,BYTE PTR [rbp-0x340]
    7cb3:	mov    BYTE PTR [rbp-0x335],0x0
    7cba:	mov    BYTE PTR [rbp-0x308],al
    7cc0:	jmp    7360 <__cxa_finalize@plt+0x3548>
    7cc5:	nop    DWORD PTR [rax]
    7cc8:	lea    rsi,[rip+0x13f01]        # 1bbd0 <_IO_stdin_used@@Base+0x2230>
    7ccf:	xor    edi,edi
    7cd1:	call   3700 <dcgettext@plt>
    7cd6:	mov    rdx,rax
    7cd9:	jmp    7717 <__cxa_finalize@plt+0x38ff>
    7cde:	xchg   ax,ax
    7ce0:	cmp    BYTE PTR [r12+0x2e],0x0
    7ce6:	jne    71c8 <__cxa_finalize@plt+0x33b0>
    7cec:	cmp    DWORD PTR [rbp-0x318],0x4000
    7cf6:	jne    71fa <__cxa_finalize@plt+0x33e2>
    7cfc:	cmp    BYTE PTR [r12+0x2a],0x0
    7d02:	je     71fa <__cxa_finalize@plt+0x33e2>
    7d08:	jmp    764c <__cxa_finalize@plt+0x3834>
    7d0d:	mov    rdx,QWORD PTR [rbp-0x280]
    7d14:	mov    rdi,QWORD PTR [rbp-0x278]
    7d1b:	mov    QWORD PTR [rbp-0x360],0x0
    7d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7d30:	mov    rsi,rdx
    7d33:	call   b0f0 <__cxa_finalize@plt+0x72d8>
    7d38:	test   rax,rax
    7d3b:	mov    r13,rax
    7d3e:	je     7b20 <__cxa_finalize@plt+0x3d08>
    7d44:	mov    rsi,r13
    7d47:	mov    rdi,r15
    7d4a:	call   11040 <__cxa_finalize@plt+0xd228>
    7d4f:	test   al,al
    7d51:	je     8550 <__cxa_finalize@plt+0x4738>
    7d57:	mov    rdx,QWORD PTR [rip+0x21a80a]        # 222568 <stderr@@GLIBC_2.2.5+0x488>
    7d5e:	mov    esi,0x4
    7d63:	mov    edi,0x1
    7d68:	call   10960 <__cxa_finalize@plt+0xcb48>
    7d6d:	mov    rdx,QWORD PTR [rip+0x21a7fc]        # 222570 <stderr@@GLIBC_2.2.5+0x490>
    7d74:	mov    esi,0x4
    7d79:	xor    edi,edi
    7d7b:	mov    rbx,rax
    7d7e:	call   10960 <__cxa_finalize@plt+0xcb48>
    7d83:	lea    rsi,[rip+0x14026]        # 1bdb0 <_IO_stdin_used@@Base+0x2410>
    7d8a:	mov    r15,rax
    7d8d:	mov    edx,0x5
    7d92:	xor    edi,edi
    7d94:	call   3700 <dcgettext@plt>
    7d99:	mov    r8,rbx
    7d9c:	mov    rdx,rax
    7d9f:	mov    rcx,r15
    7da2:	xor    eax,eax
    7da4:	xor    esi,esi
    7da6:	xor    edi,edi
    7da8:	call   3c20 <error@plt>
    7dad:	mov    rax,QWORD PTR [rbp-0x320]
    7db4:	mov    BYTE PTR [rax],0x1
    7db7:	jmp    7b9b <__cxa_finalize@plt+0x3d83>
    7dbc:	nop    DWORD PTR [rax+0x0]
    7dc0:	cmp    BYTE PTR [r12+0x18],0x0
    7dc6:	jne    8650 <__cxa_finalize@plt+0x4838>
    7dcc:	cmp    BYTE PTR [rbp-0x328],0x0
    7dd3:	jne    7849 <__cxa_finalize@plt+0x3a31>
    7dd9:	mov    eax,DWORD PTR [rbp-0x1d8]
    7ddf:	xor    r8d,0x1
    7de3:	mov    edx,eax
    7de5:	and    edx,0xf000
    7deb:	cmp    edx,0x4000
    7df1:	je     8dda <__cxa_finalize@plt+0x4fc2>
    7df7:	cmp    DWORD PTR [rbp-0x318],0x4000
    7e01:	je     8f77 <__cxa_finalize@plt+0x515f>
    7e07:	cmp    BYTE PTR [rbp-0x314],0x0
    7e0e:	mov    r13d,DWORD PTR [r12]
    7e12:	je     7e77 <__cxa_finalize@plt+0x405f>
    7e14:	cmp    r13d,0x3
    7e18:	je     9206 <__cxa_finalize@plt+0x53ee>
    7e1e:	mov    rdi,QWORD PTR [r12+0x38]
    7e23:	mov    rdx,QWORD PTR [rbp-0x360]
    7e2a:	mov    rsi,QWORD PTR [rbp-0x310]
    7e31:	mov    BYTE PTR [rbp-0x368],r8b
    7e38:	call   d830 <__cxa_finalize@plt+0x9a18>
    7e3d:	test   al,al
    7e3f:	movzx  r8d,BYTE PTR [rbp-0x368]
    7e47:	jne    9b3b <__cxa_finalize@plt+0x5d23>
    7e4d:	cmp    DWORD PTR [rbp-0x318],0x4000
    7e57:	je     7e73 <__cxa_finalize@plt+0x405b>
    7e59:	mov    eax,DWORD PTR [rbp-0x1d8]
    7e5f:	mov    edx,eax
    7e61:	and    edx,0xf000
    7e67:	cmp    edx,0x4000
    7e6d:	je     8dea <__cxa_finalize@plt+0x4fd2>
    7e73:	mov    r13d,DWORD PTR [r12]
    7e77:	movzx  eax,BYTE PTR [r12+0x18]
    7e7d:	test   al,al
    7e7f:	jne    9148 <__cxa_finalize@plt+0x5330>
    7e85:	test   r13d,r13d
    7e88:	jne    9212 <__cxa_finalize@plt+0x53fa>
    7e8e:	mov    edx,DWORD PTR [rbp-0x1d8]
    7e94:	mov    QWORD PTR [rbp-0x360],0x0
    7e9f:	and    edx,0xf000
    7ea5:	cmp    edx,0x4000
    7eab:	sete   dl
    7eae:	or     dl,al
    7eb0:	jne    70ed <__cxa_finalize@plt+0x32d5>
    7eb6:	movzx  eax,BYTE PTR [r12+0x15]
    7ebc:	test   al,al
    7ebe:	mov    BYTE PTR [rbp-0x328],al
    7ec4:	jne    7ee0 <__cxa_finalize@plt+0x40c8>
    7ec6:	cmp    BYTE PTR [r12+0x22],0x0
    7ecc:	je     96d0 <__cxa_finalize@plt+0x58b8>
    7ed2:	cmp    QWORD PTR [rbp-0x1e0],0x1
    7eda:	jbe    96d0 <__cxa_finalize@plt+0x58b8>
    7ee0:	mov    rdi,QWORD PTR [rbp-0x310]
    7ee7:	mov    BYTE PTR [rbp-0x328],r8b
    7eee:	call   3560 <unlink@plt>
    7ef3:	test   eax,eax
    7ef5:	movzx  r8d,BYTE PTR [rbp-0x328]
    7efd:	je     9684 <__cxa_finalize@plt+0x586c>
    7f03:	call   3540 <__errno_location@plt>
    7f08:	cmp    DWORD PTR [rax],0x2
    7f0b:	mov    r13,rax
    7f0e:	movzx  r8d,BYTE PTR [rbp-0x328]
    7f16:	je     9684 <__cxa_finalize@plt+0x586c>
    7f1c:	mov    rsi,QWORD PTR [rbp-0x310]
    7f23:	mov    edi,0x4
    7f28:	call   10a80 <__cxa_finalize@plt+0xcc68>
    7f2d:	lea    rsi,[rip+0x1394f]        # 1b883 <_IO_stdin_used@@Base+0x1ee3>
    7f34:	mov    rbx,rax
    7f37:	mov    edx,0x5
    7f3c:	xor    edi,edi
    7f3e:	call   3700 <dcgettext@plt>
    7f43:	mov    esi,DWORD PTR [r13+0x0]
    7f47:	mov    rdx,rax
    7f4a:	mov    rcx,rbx
    7f4d:	xor    edi,edi
    7f4f:	xor    eax,eax
    7f51:	call   3c20 <error@plt>
    7f56:	jmp    75f0 <__cxa_finalize@plt+0x37d8>
    7f5b:	nop    DWORD PTR [rax+rax*1+0x0]
    7f60:	mov    rdi,QWORD PTR [r12+0x38]
    7f65:	mov    rdx,QWORD PTR [rbp-0x330]
    7f6c:	mov    rsi,QWORD PTR [rbp-0x310]
    7f73:	call   d7a0 <__cxa_finalize@plt+0x9988>
    7f78:	movzx  r14d,BYTE PTR [rbp-0x314]
    7f80:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    7f85:	nop    DWORD PTR [rax]
    7f88:	mov    rdi,QWORD PTR [rbp-0x310]
    7f8f:	mov    rcx,r12
    7f92:	mov    edx,0x1
    7f97:	xor    esi,esi
    7f99:	call   6b10 <__cxa_finalize@plt+0x2cf8>
    7f9e:	jmp    7834 <__cxa_finalize@plt+0x3a1c>
    7fa3:	nop    DWORD PTR [rax+rax*1+0x0]
    7fa8:	lea    rsi,[rip+0x138e5]        # 1b894 <_IO_stdin_used@@Base+0x1ef4>
    7faf:	mov    edx,0x5
    7fb4:	xor    edi,edi
    7fb6:	call   3700 <dcgettext@plt>
    7fbb:	mov    edi,0x1
    7fc0:	mov    rsi,rax
    7fc3:	xor    eax,eax
    7fc5:	call   3bb0 <__printf_chk@plt>
    7fca:	mov    rdx,QWORD PTR [rbp-0x360]
    7fd1:	mov    rsi,QWORD PTR [rbp-0x310]
    7fd8:	mov    rdi,r15
    7fdb:	call   6060 <__cxa_finalize@plt+0x2248>
    7fe0:	jmp    7828 <__cxa_finalize@plt+0x3a10>
    7fe5:	mov    rdx,QWORD PTR [rip+0x21a57c]        # 222568 <stderr@@GLIBC_2.2.5+0x488>
    7fec:	mov    esi,0x4
    7ff1:	mov    edi,0x1
    7ff6:	mov    r14d,0x1
    7ffc:	call   10960 <__cxa_finalize@plt+0xcb48>
    8001:	mov    rdx,QWORD PTR [rip+0x21a568]        # 222570 <stderr@@GLIBC_2.2.5+0x490>
    8008:	mov    esi,0x4
    800d:	xor    edi,edi
    800f:	mov    r13,rax
    8012:	call   10960 <__cxa_finalize@plt+0xcb48>
    8017:	lea    rsi,[rip+0x13e2a]        # 1be48 <_IO_stdin_used@@Base+0x24a8>
    801e:	mov    rbx,rax
    8021:	mov    edx,0x5
    8026:	xor    edi,edi
    8028:	call   3700 <dcgettext@plt>
    802d:	mov    r8,r13
    8030:	mov    rdx,rax
    8033:	mov    rcx,rbx
    8036:	xor    eax,eax
    8038:	xor    esi,esi
    803a:	xor    edi,edi
    803c:	call   3c20 <error@plt>
    8041:	mov    rax,QWORD PTR [rbp-0x320]
    8048:	mov    BYTE PTR [rax],0x1
    804b:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    8050:	mov    edx,DWORD PTR [rbp-0x334]
    8056:	mov    rsi,QWORD PTR [rbp-0x310]
    805d:	mov    r8,r12
    8060:	mov    ecx,ebx
    8062:	mov    rdi,r15
    8065:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    806a:	test   al,al
    806c:	je     75f3 <__cxa_finalize@plt+0x37db>
    8072:	mov    eax,DWORD PTR [rbp-0x308]
    8078:	and    eax,0x12
    807b:	mov    DWORD PTR [rbp-0x368],eax
    8081:	jmp    7899 <__cxa_finalize@plt+0x3a81>
    8086:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8090:	mov    rsi,QWORD PTR [rbp-0x280]
    8097:	mov    rdi,QWORD PTR [rbp-0x278]
    809e:	call   b0f0 <__cxa_finalize@plt+0x72d8>
    80a3:	mov    r13,rax
    80a6:	jmp    7b5d <__cxa_finalize@plt+0x3d45>
    80ab:	nop    DWORD PTR [rax+rax*1+0x0]
    80b0:	mov    rax,QWORD PTR [rbp-0x1f0]
    80b7:	cmp    QWORD PTR [rbp-0x280],rax
    80be:	jne    79dc <__cxa_finalize@plt+0x3bc4>
    80c4:	movzx  ecx,BYTE PTR [r12+0x17]
    80ca:	test   cl,cl
    80cc:	jne    84f8 <__cxa_finalize@plt+0x46e0>
    80d2:	cmp    DWORD PTR [r12+0x4],0x2
    80d8:	je     adfb <__cxa_finalize@plt+0x6fe3>
    80de:	lea    r13,[rbp-0x160]
    80e5:	mov    rsi,QWORD PTR [rbp-0x310]
    80ec:	mov    edi,0x1
    80f1:	mov    BYTE PTR [rbp-0x335],r8b
    80f8:	mov    BYTE PTR [rbp-0x368],cl
    80fe:	mov    rdx,r13
    8101:	call   3740 <__lxstat@plt>
    8106:	test   eax,eax
    8108:	movzx  ecx,BYTE PTR [rbp-0x368]
    810f:	movzx  r8d,BYTE PTR [rbp-0x335]
    8117:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    811d:	lea    rax,[rbp-0xd0]
    8124:	mov    rsi,r15
    8127:	mov    edi,0x1
    812c:	mov    BYTE PTR [rbp-0x368],r8b
    8133:	mov    BYTE PTR [rbp-0x335],cl
    8139:	mov    rdx,rax
    813c:	mov    QWORD PTR [rbp-0x378],rax
    8143:	call   3740 <__lxstat@plt>
    8148:	test   eax,eax
    814a:	movzx  r8d,BYTE PTR [rbp-0x368]
    8152:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    8158:	mov    rax,QWORD PTR [rbp-0x158]
    815f:	cmp    QWORD PTR [rbp-0xc8],rax
    8166:	movzx  ecx,BYTE PTR [rbp-0x335]
    816d:	jne    8180 <__cxa_finalize@plt+0x4368>
    816f:	mov    rax,QWORD PTR [rbp-0x160]
    8176:	cmp    QWORD PTR [rbp-0xd0],rax
    817d:	sete   cl
    8180:	mov    eax,DWORD PTR [rbp-0xb8]
    8186:	mov    rdx,QWORD PTR [rbp-0x378]
    818d:	and    eax,0xf000
    8192:	cmp    eax,0xa000
    8197:	je     972d <__cxa_finalize@plt+0x5915>
    819d:	nop    DWORD PTR [rax]
    81a0:	mov    esi,DWORD PTR [r12]
    81a4:	test   esi,esi
    81a6:	je     8410 <__cxa_finalize@plt+0x45f8>
    81ac:	test   cl,cl
    81ae:	jne    90f8 <__cxa_finalize@plt+0x52e0>
    81b4:	cmp    BYTE PTR [r12+0x18],0x0
    81ba:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    81c0:	cmp    DWORD PTR [r12+0x4],0x2
    81c6:	je     79e8 <__cxa_finalize@plt+0x3bd0>
    81cc:	mov    eax,DWORD PTR [rdx+0x18]
    81cf:	and    eax,0xf000
    81d4:	cmp    eax,0xa000
    81d9:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    81df:	mov    eax,DWORD PTR [r13+0x18]
    81e3:	and    eax,0xf000
    81e8:	cmp    eax,0xa000
    81ed:	je     79e8 <__cxa_finalize@plt+0x3bd0>
    81f3:	nop    DWORD PTR [rax+rax*1+0x0]
    81f8:	mov    rdx,QWORD PTR [rbp-0x310]
    81ff:	mov    esi,0x4
    8204:	mov    edi,0x1
    8209:	call   10960 <__cxa_finalize@plt+0xcb48>
    820e:	mov    rdx,r15
    8211:	mov    esi,0x4
    8216:	xor    edi,edi
    8218:	mov    r12,rax
    821b:	call   10960 <__cxa_finalize@plt+0xcb48>
    8220:	lea    rsi,[rip+0x1362f]        # 1b856 <_IO_stdin_used@@Base+0x1eb6>
    8227:	mov    rbx,rax
    822a:	mov    edx,0x5
    822f:	xor    edi,edi
    8231:	call   3700 <dcgettext@plt>
    8236:	mov    r8,r12
    8239:	mov    rcx,rbx
    823c:	mov    rdx,rax
    823f:	xor    esi,esi
    8241:	xor    edi,edi
    8243:	xor    eax,eax
    8245:	call   3c20 <error@plt>
    824a:	jmp    75f0 <__cxa_finalize@plt+0x37d8>
    824f:	nop
    8250:	sub    rsp,0x30
    8254:	mov    rsi,QWORD PTR [rbp-0x340]
    825b:	lea    rax,[rsp+0xf]
    8260:	and    rax,0xfffffffffffffff0
    8264:	cmp    BYTE PTR [rbp-0x328],0x0
    826b:	mov    QWORD PTR [rbp-0x348],rax
    8272:	mov    QWORD PTR [rax],rsi
    8275:	mov    QWORD PTR [rax+0x8],rdx
    8279:	mov    QWORD PTR [rax+0x10],rcx
    827d:	jne    8295 <__cxa_finalize@plt+0x447d>
    827f:	mov    eax,DWORD PTR [rbp-0x1d8]
    8285:	and    eax,0xf000
    828a:	cmp    eax,0x4000
    828f:	je     8e87 <__cxa_finalize@plt+0x506f>
    8295:	mov    esi,DWORD PTR [rbp-0x368]
    829b:	mov    rdi,QWORD PTR [rbp-0x310]
    82a2:	not    esi
    82a4:	and    esi,DWORD PTR [rbp-0x308]
    82aa:	call   35e0 <mkdir@plt>
    82af:	test   eax,eax
    82b1:	je     8870 <__cxa_finalize@plt+0x4a58>
    82b7:	mov    rsi,QWORD PTR [rbp-0x310]
    82be:	mov    edi,0x4
    82c3:	call   10a80 <__cxa_finalize@plt+0xcc68>
    82c8:	lea    rsi,[rip+0x135eb]        # 1b8ba <_IO_stdin_used@@Base+0x1f1a>
    82cf:	mov    rbx,rax
    82d2:	mov    edx,0x5
    82d7:	xor    edi,edi
    82d9:	call   3700 <dcgettext@plt>
    82de:	mov    r15,rax
    82e1:	call   3540 <__errno_location@plt>
    82e6:	mov    esi,DWORD PTR [rax]
    82e8:	mov    rcx,rbx
    82eb:	mov    rdx,r15
    82ee:	xor    edi,edi
    82f0:	xor    eax,eax
    82f2:	call   3c20 <error@plt>
    82f7:	jmp    790c <__cxa_finalize@plt+0x3af4>
    82fc:	nop    DWORD PTR [rax+0x0]
    8300:	cmp    BYTE PTR [r12+0x18],0x0
    8306:	mov    eax,DWORD PTR [r12+0x8]
    830b:	jne    8655 <__cxa_finalize@plt+0x483d>
    8311:	cmp    eax,0x2
    8314:	je     7849 <__cxa_finalize@plt+0x3a31>
    831a:	cmp    eax,0x3
    831d:	jne    7dcc <__cxa_finalize@plt+0x3fb4>
    8323:	mov    rax,QWORD PTR [rbp-0x360]
    832a:	mov    rsi,QWORD PTR [rbp-0x310]
    8331:	mov    rdi,r12
    8334:	mov    BYTE PTR [rbp-0x368],r8b
    833b:	lea    rdx,[rax+0x18]
    833f:	call   6120 <__cxa_finalize@plt+0x2308>
    8344:	test   al,al
    8346:	movzx  r8d,BYTE PTR [rbp-0x368]
    834e:	jne    7dcc <__cxa_finalize@plt+0x3fb4>
    8354:	jmp    7849 <__cxa_finalize@plt+0x3a31>
    8359:	nop    DWORD PTR [rax+0x0]
    8360:	xor    ecx,ecx
    8362:	xor    r9d,r9d
    8365:	mov    eax,DWORD PTR [rbp-0x268]
    836b:	mov    r13,QWORD PTR [rbp-0x360]
    8372:	mov    rdx,QWORD PTR [rbp-0x330]
    8379:	and    eax,0xf000
    837e:	cmp    eax,0xa000
    8383:	jne    81a0 <__cxa_finalize@plt+0x4388>
    8389:	mov    eax,DWORD PTR [rbp-0x1d8]
    838f:	and    eax,0xf000
    8394:	cmp    eax,0xa000
    8399:	jne    81a0 <__cxa_finalize@plt+0x4388>
    839f:	mov    rsi,QWORD PTR [rbp-0x310]
    83a6:	mov    rdi,r15
    83a9:	mov    BYTE PTR [rbp-0x335],r8b
    83b0:	mov    DWORD PTR [rbp-0x368],r9d
    83b7:	call   11040 <__cxa_finalize@plt+0xd228>
    83bc:	test   al,al
    83be:	jne    81f8 <__cxa_finalize@plt+0x43e0>
    83c4:	mov    edi,DWORD PTR [r12]
    83c8:	movzx  r8d,BYTE PTR [rbp-0x335]
    83d0:	test   edi,edi
    83d2:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    83d8:	mov    r9d,DWORD PTR [rbp-0x368]
    83df:	test   r9d,r9d
    83e2:	je     79e8 <__cxa_finalize@plt+0x3bd0>
    83e8:	movzx  r13d,BYTE PTR [r12+0x18]
    83ee:	mov    eax,0x1
    83f3:	xor    r13d,0x1
    83f7:	test   r13b,r13b
    83fa:	je     81f8 <__cxa_finalize@plt+0x43e0>
    8400:	mov    BYTE PTR [rbp-0x328],al
    8406:	jmp    79e8 <__cxa_finalize@plt+0x3bd0>
    840b:	nop    DWORD PTR [rax+rax*1+0x0]
    8410:	movzx  esi,BYTE PTR [r12+0x18]
    8416:	test   sil,sil
    8419:	jne    8b68 <__cxa_finalize@plt+0x4d50>
    841f:	cmp    BYTE PTR [r12+0x15],0x0
    8425:	jne    8b68 <__cxa_finalize@plt+0x4d50>
    842b:	mov    eax,DWORD PTR [rdx+0x18]
    842e:	and    eax,0xf000
    8433:	cmp    eax,0xa000
    8438:	jne    9427 <__cxa_finalize@plt+0x560f>
    843e:	cmp    BYTE PTR [r12+0x2c],0x0
    8444:	jne    9177 <__cxa_finalize@plt+0x535f>
    844a:	test   DWORD PTR [r12+0x14],0xff00ff00
    8453:	je     8469 <__cxa_finalize@plt+0x4651>
    8455:	mov    eax,DWORD PTR [r13+0x18]
    8459:	and    eax,0xf000
    845e:	cmp    eax,0xa000
    8463:	je     9177 <__cxa_finalize@plt+0x535f>
    8469:	cmp    DWORD PTR [r12+0x4],0x2
    846f:	jne    81f8 <__cxa_finalize@plt+0x43e0>
    8475:	mov    eax,DWORD PTR [rdx+0x18]
    8478:	and    eax,0xf000
    847d:	cmp    eax,0xa000
    8482:	je     a595 <__cxa_finalize@plt+0x677d>
    8488:	lea    rdi,[rbp-0xd0]
    848f:	mov    ecx,0x24
    8494:	mov    rsi,rdx
    8497:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    8499:	mov    eax,DWORD PTR [r13+0x18]
    849d:	and    eax,0xf000
    84a2:	cmp    eax,0xa000
    84a7:	je     9ed0 <__cxa_finalize@plt+0x60b8>
    84ad:	lea    rdi,[rbp-0x160]
    84b4:	mov    ecx,0x24
    84b9:	mov    rsi,r13
    84bc:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    84be:	mov    rax,QWORD PTR [rbp-0x158]
    84c5:	cmp    QWORD PTR [rbp-0xc8],rax
    84cc:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    84d2:	mov    rax,QWORD PTR [rbp-0x160]
    84d9:	cmp    QWORD PTR [rbp-0xd0],rax
    84e0:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    84e6:	cmp    BYTE PTR [r12+0x17],0x0
    84ec:	je     81f8 <__cxa_finalize@plt+0x43e0>
    84f2:	nop    WORD PTR [rax+rax*1+0x0]
    84f8:	mov    BYTE PTR [rbp-0x328],0x1
    84ff:	jmp    79e8 <__cxa_finalize@plt+0x3bd0>
    8504:	nop    DWORD PTR [rax+0x0]
    8508:	mov    rsi,QWORD PTR [rbp-0x310]
    850f:	mov    edi,0x4
    8514:	call   10a80 <__cxa_finalize@plt+0xcc68>
    8519:	lea    rsi,[rip+0x13518]        # 1ba38 <_IO_stdin_used@@Base+0x2098>
    8520:	xor    edi,edi
    8522:	mov    edx,0x5
    8527:	mov    r12,rax
    852a:	call   3700 <dcgettext@plt>
    852f:	mov    rbx,rax
    8532:	call   3540 <__errno_location@plt>
    8537:	mov    esi,DWORD PTR [rax]
    8539:	mov    rcx,r12
    853c:	mov    rdx,rbx
    853f:	xor    edi,edi
    8541:	xor    eax,eax
    8543:	call   3c20 <error@plt>
    8548:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    854d:	nop    DWORD PTR [rax]
    8550:	mov    rdi,QWORD PTR [rbp-0x310]
    8557:	mov    rsi,r13
    855a:	call   11040 <__cxa_finalize@plt+0xd228>
    855f:	test   al,al
    8561:	jne    8e31 <__cxa_finalize@plt+0x5019>
    8567:	mov    eax,DWORD PTR [r12+0x4]
    856c:	cmp    eax,0x4
    856f:	je     7b20 <__cxa_finalize@plt+0x3d08>
    8575:	cmp    eax,0x3
    8578:	jne    8587 <__cxa_finalize@plt+0x476f>
    857a:	cmp    BYTE PTR [rbp-0x314],0x0
    8581:	jne    7b20 <__cxa_finalize@plt+0x3d08>
    8587:	mov    rdx,r13
    858a:	mov    esi,0x4
    858f:	mov    edi,0x1
    8594:	call   10960 <__cxa_finalize@plt+0xcb48>
    8599:	mov    rdx,QWORD PTR [rbp-0x310]
    85a0:	xor    edi,edi
    85a2:	mov    esi,0x4
    85a7:	mov    rbx,rax
    85aa:	call   10960 <__cxa_finalize@plt+0xcb48>
    85af:	lea    rsi,[rip+0x13862]        # 1be18 <_IO_stdin_used@@Base+0x2478>
    85b6:	mov    r15,rax
    85b9:	xor    edi,edi
    85bb:	mov    edx,0x5
    85c0:	call   3700 <dcgettext@plt>
    85c5:	mov    r8,rbx
    85c8:	mov    rdx,rax
    85cb:	mov    rcx,r15
    85ce:	xor    esi,esi
    85d0:	xor    edi,edi
    85d2:	xor    eax,eax
    85d4:	call   3c20 <error@plt>
    85d9:	jmp    7b9b <__cxa_finalize@plt+0x3d83>
    85de:	xchg   ax,ax
    85e0:	mov    rdx,QWORD PTR [rbp-0x310]
    85e7:	mov    esi,0x4
    85ec:	mov    edi,0x1
    85f1:	call   10960 <__cxa_finalize@plt+0xcb48>
    85f6:	mov    rdx,r15
    85f9:	mov    esi,0x4
    85fe:	xor    edi,edi
    8600:	mov    r13,rax
    8603:	call   10960 <__cxa_finalize@plt+0xcb48>
    8608:	lea    rsi,[rip+0x1328e]        # 1b89d <_IO_stdin_used@@Base+0x1efd>
    860f:	mov    r12,rax
    8612:	mov    edx,0x5
    8617:	xor    edi,edi
    8619:	call   3700 <dcgettext@plt>
    861e:	mov    esi,DWORD PTR [rbx]
    8620:	mov    rdx,rax
    8623:	xor    edi,edi
    8625:	mov    r8,r13
    8628:	mov    rcx,r12
    862b:	xor    eax,eax
    862d:	call   3c20 <error@plt>
    8632:	mov    rsi,QWORD PTR [rbp-0x280]
    8639:	mov    rdi,QWORD PTR [rbp-0x278]
    8640:	call   b080 <__cxa_finalize@plt+0x7268>
    8645:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    864a:	nop    WORD PTR [rax+rax*1+0x0]
    8650:	mov    eax,DWORD PTR [r12+0x8]
    8655:	cmp    eax,0x2
    8658:	je     86c6 <__cxa_finalize@plt+0x48ae>
    865a:	cmp    eax,0x3
    865d:	je     869d <__cxa_finalize@plt+0x4885>
    865f:	cmp    eax,0x4
    8662:	jne    7dcc <__cxa_finalize@plt+0x3fb4>
    8668:	cmp    BYTE PTR [r12+0x2f],0x0
    866e:	je     7dcc <__cxa_finalize@plt+0x3fb4>
    8674:	mov    esi,DWORD PTR [rbp-0x1d8]
    867a:	mov    rdi,QWORD PTR [rbp-0x310]
    8681:	mov    BYTE PTR [rbp-0x368],r8b
    8688:	call   5c10 <__cxa_finalize@plt+0x1df8>
    868d:	test   al,al
    868f:	movzx  r8d,BYTE PTR [rbp-0x368]
    8697:	jne    7dcc <__cxa_finalize@plt+0x3fb4>
    869d:	mov    rax,QWORD PTR [rbp-0x360]
    86a4:	mov    rsi,QWORD PTR [rbp-0x310]
    86ab:	mov    rdi,r12
    86ae:	mov    BYTE PTR [rbp-0x368],r8b
    86b5:	lea    rdx,[rax+0x18]
    86b9:	call   6120 <__cxa_finalize@plt+0x2308>
    86be:	test   al,al
    86c0:	jne    9613 <__cxa_finalize@plt+0x57fb>
    86c6:	test   rbx,rbx
    86c9:	je     7849 <__cxa_finalize@plt+0x3a31>
    86cf:	mov    BYTE PTR [rbx],0x1
    86d2:	mov    r14d,0x1
    86d8:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    86dd:	nop    DWORD PTR [rax]
    86e0:	movzx  edx,BYTE PTR [r12+0x16]
    86e6:	mov    r8d,DWORD PTR [rbp-0x348]
    86ed:	xor    ecx,ecx
    86ef:	mov    rsi,QWORD PTR [rbp-0x310]
    86f6:	mov    rdi,r15
    86f9:	call   6270 <__cxa_finalize@plt+0x2458>
    86fe:	test   al,al
    8700:	mov    BYTE PTR [rbp-0x308],al
    8706:	je     790c <__cxa_finalize@plt+0x3af4>
    870c:	xor    r9d,r9d
    870f:	mov    BYTE PTR [rbp-0x335],0x0
    8716:	jmp    7360 <__cxa_finalize@plt+0x3548>
    871b:	nop    DWORD PTR [rax+rax*1+0x0]
    8720:	mov    eax,DWORD PTR [rbp-0x268]
    8726:	xor    esi,esi
    8728:	cmp    DWORD PTR [r12+0x4],0x2
    872e:	mov    rdi,r15
    8731:	mov    DWORD PTR [rbp-0x350],eax
    8737:	movzx  eax,BYTE PTR [r12+0x23]
    873d:	sete   sil
    8741:	shl    esi,0x11
    8744:	mov    BYTE PTR [rbp-0x348],al
    874a:	xor    eax,eax
    874c:	call   d730 <__cxa_finalize@plt+0x9918>
    8751:	test   eax,eax
    8753:	mov    DWORD PTR [rbp-0x320],eax
    8759:	js     90d7 <__cxa_finalize@plt+0x52bf>
    875f:	mov    esi,DWORD PTR [rbp-0x320]
    8765:	lea    rdx,[rbp-0x160]
    876c:	mov    edi,0x1
    8771:	call   3b10 <__fxstat@plt>
    8776:	test   eax,eax
    8778:	jne    92d6 <__cxa_finalize@plt+0x54be>
    877e:	mov    rax,QWORD PTR [rbp-0x158]
    8785:	cmp    QWORD PTR [rbp-0x278],rax
    878c:	jne    87a2 <__cxa_finalize@plt+0x498a>
    878e:	mov    rax,QWORD PTR [rbp-0x160]
    8795:	cmp    QWORD PTR [rbp-0x280],rax
    879c:	je     998e <__cxa_finalize@plt+0x5b76>
    87a2:	mov    rsi,r15
    87a5:	mov    edi,0x4
    87aa:	call   10a80 <__cxa_finalize@plt+0xcc68>
    87af:	lea    rsi,[rip+0x1372a]        # 1bee0 <_IO_stdin_used@@Base+0x2540>
    87b6:	mov    rbx,rax
    87b9:	mov    edx,0x5
    87be:	xor    edi,edi
    87c0:	call   3700 <dcgettext@plt>
    87c5:	mov    rcx,rbx
    87c8:	mov    rdx,rax
    87cb:	xor    esi,esi
    87cd:	xor    edi,edi
    87cf:	xor    eax,eax
    87d1:	call   3c20 <error@plt>
    87d6:	xor    r9d,r9d
    87d9:	mov    QWORD PTR [rbp-0x340],0x0
    87e4:	mov    edi,DWORD PTR [rbp-0x320]
    87ea:	mov    BYTE PTR [rbp-0x308],r9b
    87f1:	call   38b0 <close@plt>
    87f6:	test   eax,eax
    87f8:	movzx  r9d,BYTE PTR [rbp-0x308]
    8800:	js     94e9 <__cxa_finalize@plt+0x56d1>
    8806:	mov    rdi,QWORD PTR [rbp-0x340]
    880d:	mov    BYTE PTR [rbp-0x308],r9b
    8814:	call   3e10 <free@plt>
    8819:	movzx  r9d,BYTE PTR [rbp-0x308]
    8821:	mov    BYTE PTR [rbp-0x340],0x0
    8828:	test   r9b,r9b
    882b:	jne    7360 <__cxa_finalize@plt+0x3548>
    8831:	jmp    790c <__cxa_finalize@plt+0x3af4>
    8836:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8840:	lea    r13,[rbp-0xd0]
    8847:	mov    rsi,QWORD PTR [rbp-0x310]
    884e:	mov    edi,0x1
    8853:	mov    rdx,r13
    8856:	call   3740 <__lxstat@plt>
    885b:	test   eax,eax
    885d:	jne    71b0 <__cxa_finalize@plt+0x3398>
    8863:	mov    rdx,r13
    8866:	jmp    712e <__cxa_finalize@plt+0x3316>
    886b:	nop    DWORD PTR [rax+rax*1+0x0]
    8870:	mov    rsi,QWORD PTR [rbp-0x310]
    8877:	lea    rdx,[rbp-0x1f0]
    887e:	mov    edi,0x1
    8883:	call   3740 <__lxstat@plt>
    8888:	test   eax,eax
    888a:	jne    9123 <__cxa_finalize@plt+0x530b>
    8890:	mov    edx,DWORD PTR [rbp-0x1d8]
    8896:	mov    BYTE PTR [rbp-0x335],0x0
    889d:	mov    eax,edx
    889f:	and    eax,0x1c0
    88a4:	cmp    eax,0x1c0
    88a9:	je     88e0 <__cxa_finalize@plt+0x4ac8>
    88ab:	mov    rdi,QWORD PTR [rbp-0x310]
    88b2:	mov    esi,edx
    88b4:	mov    DWORD PTR [rbp-0x308],edx
    88ba:	or     esi,0x1c0
    88c0:	call   3be0 <chmod@plt>
    88c5:	mov    edx,DWORD PTR [rbp-0x308]
    88cb:	test   eax,eax
    88cd:	mov    BYTE PTR [rbp-0x335],0x1
    88d4:	mov    DWORD PTR [rbp-0x3b8],edx
    88da:	jne    9708 <__cxa_finalize@plt+0x58f0>
    88e0:	mov    rax,QWORD PTR [rbp-0x350]
    88e7:	cmp    BYTE PTR [rax],0x0
    88ea:	je     9495 <__cxa_finalize@plt+0x567d>
    88f0:	cmp    BYTE PTR [r12+0x2e],0x0
    88f6:	je     8948 <__cxa_finalize@plt+0x4b30>
    88f8:	cmp    BYTE PTR [r12+0x18],0x0
    88fe:	je     95b8 <__cxa_finalize@plt+0x57a0>
    8904:	mov    rsi,QWORD PTR [rbp-0x310]
    890b:	mov    edi,0x4
    8910:	call   10a80 <__cxa_finalize@plt+0xcc68>
    8915:	lea    rsi,[rip+0x12fb9]        # 1b8d5 <_IO_stdin_used@@Base+0x1f35>
    891c:	mov    edx,0x5
    8921:	xor    edi,edi
    8923:	mov    QWORD PTR [rbp-0x308],rax
    892a:	call   3700 <dcgettext@plt>
    892f:	mov    rdx,QWORD PTR [rbp-0x308]
    8936:	mov    rsi,rax
    8939:	mov    edi,0x1
    893e:	xor    eax,eax
    8940:	call   3bb0 <__printf_chk@plt>
    8945:	nop    DWORD PTR [rax]
    8948:	mov    rcx,QWORD PTR [rbp-0x358]
    894f:	test   rcx,rcx
    8952:	setne  al
    8955:	and    al,BYTE PTR [r12+0x1c]
    895a:	mov    BYTE PTR [rbp-0x308],al
    8960:	jne    8eb2 <__cxa_finalize@plt+0x509a>
    8966:	movdqu xmm0,XMMWORD PTR [r12]
    896c:	mov    esi,0x2
    8971:	mov    rdi,r15
    8974:	mov    rax,QWORD PTR [r12+0x40]
    8979:	movaps XMMWORD PTR [rbp-0x2f0],xmm0
    8980:	movdqu xmm0,XMMWORD PTR [r12+0x10]
    8987:	mov    QWORD PTR [rbp-0x2b0],rax
    898e:	movaps XMMWORD PTR [rbp-0x2e0],xmm0
    8995:	movdqu xmm0,XMMWORD PTR [r12+0x20]
    899c:	movaps XMMWORD PTR [rbp-0x2d0],xmm0
    89a3:	movdqu xmm0,XMMWORD PTR [r12+0x30]
    89aa:	movaps XMMWORD PTR [rbp-0x2c0],xmm0
    89b1:	call   11560 <__cxa_finalize@plt+0xd748>
    89b6:	test   rax,rax
    89b9:	mov    QWORD PTR [rbp-0x390],rax
    89c0:	je     9620 <__cxa_finalize@plt+0x5808>
    89c6:	cmp    DWORD PTR [r12+0x4],0x3
    89cc:	jne    89d8 <__cxa_finalize@plt+0x4bc0>
    89ce:	mov    DWORD PTR [rbp-0x2ec],0x2
    89d8:	mov    rax,QWORD PTR [rbp-0x390]
    89df:	mov    BYTE PTR [rbp-0x358],0x0
    89e6:	cmp    BYTE PTR [rax],0x0
    89e9:	je     9bb3 <__cxa_finalize@plt+0x5d9b>
    89ef:	lea    rcx,[rbp-0x2f0]
    89f6:	mov    rax,QWORD PTR [rbp-0x390]
    89fd:	mov    QWORD PTR [rbp-0x398],r13
    8a04:	mov    DWORD PTR [rbp-0x388],ebx
    8a0a:	mov    QWORD PTR [rbp-0x340],r15
    8a11:	mov    QWORD PTR [rbp-0x370],rcx
    8a18:	lea    rcx,[rbp-0x2f9]
    8a1f:	mov    BYTE PTR [rbp-0x308],0x1
    8a26:	mov    rbx,rax
    8a29:	mov    BYTE PTR [rbp-0x3a0],r14b
    8a30:	mov    QWORD PTR [rbp-0x3a8],r12
    8a37:	mov    QWORD PTR [rbp-0x378],rcx
    8a3e:	lea    rcx,[rbp-0x2f8]
    8a45:	mov    r15,QWORD PTR [rbp-0x350]
    8a4c:	mov    r13,QWORD PTR [rbp-0x320]
    8a53:	mov    QWORD PTR [rbp-0x380],rcx
    8a5a:	jmp    8a83 <__cxa_finalize@plt+0x4c6b>
    8a5c:	nop    DWORD PTR [rax+0x0]
    8a60:	movzx  eax,BYTE PTR [rbp-0x2f8]
    8a67:	mov    rdi,rbx
    8a6a:	or     BYTE PTR [rbp-0x358],al
    8a70:	call   3720 <strlen@plt>
    8a75:	lea    rbx,[rbx+rax*1+0x1]
    8a7a:	cmp    BYTE PTR [rbx],0x0
    8a7d:	je     8b1d <__cxa_finalize@plt+0x4d05>
    8a83:	mov    rdi,QWORD PTR [rbp-0x340]
    8a8a:	xor    edx,edx
    8a8c:	mov    rsi,rbx
    8a8f:	call   da30 <__cxa_finalize@plt+0x9c18>
    8a94:	mov    rdi,QWORD PTR [rbp-0x310]
    8a9b:	xor    edx,edx
    8a9d:	mov    rsi,rbx
    8aa0:	mov    r12,rax
    8aa3:	call   da30 <__cxa_finalize@plt+0x9c18>
    8aa8:	mov    r14,rax
    8aab:	movzx  eax,BYTE PTR [r15]
    8aaf:	mov    r9,QWORD PTR [rbp-0x370]
    8ab6:	mov    r8,QWORD PTR [rbp-0x348]
    8abd:	mov    rcx,QWORD PTR [rbp-0x330]
    8ac4:	mov    rsi,r14
    8ac7:	mov    edx,DWORD PTR [rbp-0x388]
    8acd:	push   0x0
    8acf:	mov    rdi,r12
    8ad2:	push   QWORD PTR [rbp-0x378]
    8ad8:	push   QWORD PTR [rbp-0x380]
    8ade:	push   0x0
    8ae0:	mov    BYTE PTR [rbp-0x2f8],al
    8ae6:	call   6ec0 <__cxa_finalize@plt+0x30a8>
    8aeb:	and    BYTE PTR [rbp-0x308],al
    8af1:	movzx  eax,BYTE PTR [rbp-0x2f9]
    8af8:	add    rsp,0x20
    8afc:	or     BYTE PTR [r13+0x0],al
    8b00:	mov    rdi,r14
    8b03:	call   3e10 <free@plt>
    8b08:	mov    rdi,r12
    8b0b:	call   3e10 <free@plt>
    8b10:	cmp    BYTE PTR [rbp-0x2f9],0x0
    8b17:	je     8a60 <__cxa_finalize@plt+0x4c48>
    8b1d:	movzx  r14d,BYTE PTR [rbp-0x3a0]
    8b25:	mov    r13,QWORD PTR [rbp-0x398]
    8b2c:	mov    r15,QWORD PTR [rbp-0x340]
    8b33:	mov    r12,QWORD PTR [rbp-0x3a8]
    8b3a:	mov    rdi,QWORD PTR [rbp-0x390]
    8b41:	call   3e10 <free@plt>
    8b46:	movzx  ebx,BYTE PTR [rbp-0x358]
    8b4d:	mov    rax,QWORD PTR [rbp-0x350]
    8b54:	mov    BYTE PTR [rax],bl
    8b56:	mov    BYTE PTR [rbp-0x340],0x0
    8b5d:	xor    r9d,r9d
    8b60:	jmp    7360 <__cxa_finalize@plt+0x3548>
    8b65:	nop    DWORD PTR [rax]
    8b68:	mov    eax,DWORD PTR [r13+0x18]
    8b6c:	and    eax,0xf000
    8b71:	cmp    eax,0xa000
    8b76:	je     79e8 <__cxa_finalize@plt+0x3bd0>
    8b7c:	test   cl,cl
    8b7e:	je     8b8b <__cxa_finalize@plt+0x4d73>
    8b80:	cmp    QWORD PTR [r13+0x10],0x1
    8b85:	ja     93e0 <__cxa_finalize@plt+0x55c8>
    8b8b:	mov    eax,DWORD PTR [rdx+0x18]
    8b8e:	and    eax,0xf000
    8b93:	cmp    eax,0xa000
    8b98:	je     8bc7 <__cxa_finalize@plt+0x4daf>
    8b9a:	mov    rax,QWORD PTR [r13+0x8]
    8b9e:	cmp    QWORD PTR [rdx+0x8],rax
    8ba2:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    8ba8:	mov    rax,QWORD PTR [r13+0x0]
    8bac:	cmp    QWORD PTR [rdx],rax
    8baf:	jne    79e8 <__cxa_finalize@plt+0x3bd0>
    8bb5:	cmp    BYTE PTR [r12+0x17],0x0
    8bbb:	jne    84f8 <__cxa_finalize@plt+0x46e0>
    8bc1:	movzx  esi,BYTE PTR [r12+0x18]
    8bc7:	test   sil,sil
    8bca:	je     843e <__cxa_finalize@plt+0x4626>
    8bd0:	mov    eax,DWORD PTR [rbp-0x268]
    8bd6:	and    eax,0xf000
    8bdb:	cmp    eax,0xa000
    8be0:	jne    843e <__cxa_finalize@plt+0x4626>
    8be6:	cmp    QWORD PTR [r13+0x10],0x1
    8beb:	jbe    843e <__cxa_finalize@plt+0x4626>
    8bf1:	mov    rdi,r15
    8bf4:	mov    BYTE PTR [rbp-0x335],r8b
    8bfb:	mov    QWORD PTR [rbp-0x368],rdx
    8c02:	call   38a0 <canonicalize_file_name@plt>
    8c07:	test   rax,rax
    8c0a:	mov    rdx,QWORD PTR [rbp-0x368]
    8c11:	movzx  r8d,BYTE PTR [rbp-0x335]
    8c19:	je     843e <__cxa_finalize@plt+0x4626>
    8c1f:	mov    rsi,QWORD PTR [rbp-0x310]
    8c26:	mov    rdi,rax
    8c29:	mov    BYTE PTR [rbp-0x368],r8b
    8c30:	mov    QWORD PTR [rbp-0x328],rax
    8c37:	call   11040 <__cxa_finalize@plt+0xd228>
    8c3c:	mov    rcx,QWORD PTR [rbp-0x328]
    8c43:	xor    eax,0x1
    8c46:	mov    r13d,eax
    8c49:	mov    rdi,rcx
    8c4c:	call   3e10 <free@plt>
    8c51:	xor    eax,eax
    8c53:	movzx  r8d,BYTE PTR [rbp-0x368]
    8c5b:	jmp    83f7 <__cxa_finalize@plt+0x45df>
    8c60:	cmp    BYTE PTR [r12+0x27],0x0
    8c66:	je     7590 <__cxa_finalize@plt+0x3778>
    8c6c:	mov    rdx,QWORD PTR [rbp-0x310]
    8c73:	mov    ecx,0xffffffff
    8c78:	mov    r8,r12
    8c7b:	mov    esi,ecx
    8c7d:	mov    rdi,r15
    8c80:	call   5d70 <__cxa_finalize@plt+0x1f58>
    8c85:	test   al,al
    8c87:	jne    7590 <__cxa_finalize@plt+0x3778>
    8c8d:	cmp    BYTE PTR [r12+0x28],0x0
    8c93:	movzx  eax,BYTE PTR [rbp-0x308]
    8c9a:	cmovne eax,r14d
    8c9e:	mov    r14d,eax
    8ca1:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    8ca6:	lea    rdx,[rbp-0x160]
    8cad:	mov    rsi,rax
    8cb0:	mov    edi,0x1
    8cb5:	call   3a90 <__xstat@plt>
    8cba:	test   eax,eax
    8cbc:	jne    7c7f <__cxa_finalize@plt+0x3e67>
    8cc2:	lea    rdx,[rbp-0xd0]
    8cc9:	mov    rsi,rbx
    8ccc:	mov    edi,0x1
    8cd1:	call   3a90 <__xstat@plt>
    8cd6:	test   eax,eax
    8cd8:	jne    7c7f <__cxa_finalize@plt+0x3e67>
    8cde:	mov    rax,QWORD PTR [rbp-0xc8]
    8ce5:	cmp    QWORD PTR [rbp-0x158],rax
    8cec:	je     9bbf <__cxa_finalize@plt+0x5da7>
    8cf2:	mov    rdi,rbx
    8cf5:	call   3e10 <free@plt>
    8cfa:	mov    rdx,QWORD PTR [rbp-0x310]
    8d01:	mov    esi,0x3
    8d06:	xor    edi,edi
    8d08:	call   10b80 <__cxa_finalize@plt+0xcd68>
    8d0d:	mov    edx,0x5
    8d12:	mov    rbx,rax
    8d15:	lea    rsi,[rip+0x1326c]        # 1bf88 <_IO_stdin_used@@Base+0x25e8>
    8d1c:	jmp    78f4 <__cxa_finalize@plt+0x3adc>
    8d21:	call   36f0 <rmdir@plt>
    8d26:	test   eax,eax
    8d28:	je     7c2b <__cxa_finalize@plt+0x3e13>
    8d2e:	cmp    DWORD PTR [rbx],0x2
    8d31:	je     7c2b <__cxa_finalize@plt+0x3e13>
    8d37:	mov    rdx,QWORD PTR [rbp-0x310]
    8d3e:	mov    esi,0x4
    8d43:	mov    edi,0x1
    8d48:	call   10960 <__cxa_finalize@plt+0xcb48>
    8d4d:	mov    rdx,r15
    8d50:	mov    esi,0x4
    8d55:	xor    edi,edi
    8d57:	mov    r13,rax
    8d5a:	call   10960 <__cxa_finalize@plt+0xcb48>
    8d5f:	mov    edx,0x5
    8d64:	mov    r12,rax
    8d67:	lea    rsi,[rip+0x1310a]        # 1be78 <_IO_stdin_used@@Base+0x24d8>
    8d6e:	jmp    8617 <__cxa_finalize@plt+0x47ff>
    8d73:	mov    rdx,r15
    8d76:	mov    esi,0x4
    8d7b:	mov    edi,0x1
    8d80:	call   10960 <__cxa_finalize@plt+0xcb48>
    8d85:	mov    rdx,QWORD PTR [rbp-0x310]
    8d8c:	xor    edi,edi
    8d8e:	mov    esi,0x4
    8d93:	mov    rbx,rax
    8d96:	call   10960 <__cxa_finalize@plt+0xcb48>
    8d9b:	lea    rsi,[rip+0x13116]        # 1beb8 <_IO_stdin_used@@Base+0x2518>
    8da2:	xor    edi,edi
    8da4:	mov    edx,0x5
    8da9:	mov    QWORD PTR [rbp-0x308],rax
    8db0:	call   3700 <dcgettext@plt>
    8db5:	mov    r15,rax
    8db8:	call   3540 <__errno_location@plt>
    8dbd:	mov    rcx,QWORD PTR [rbp-0x308]
    8dc4:	mov    esi,DWORD PTR [rax]
    8dc6:	mov    r8,rbx
    8dc9:	mov    rdx,r15
    8dcc:	xor    edi,edi
    8dce:	xor    eax,eax
    8dd0:	call   3c20 <error@plt>
    8dd5:	jmp    790c <__cxa_finalize@plt+0x3af4>
    8dda:	cmp    DWORD PTR [rbp-0x318],0x4000
    8de4:	je     7e73 <__cxa_finalize@plt+0x405b>
    8dea:	cmp    BYTE PTR [r12+0x18],0x0
    8df0:	je     8dff <__cxa_finalize@plt+0x4fe7>
    8df2:	mov    r13d,DWORD PTR [r12]
    8df6:	test   r13d,r13d
    8df9:	jne    8f9d <__cxa_finalize@plt+0x5185>
    8dff:	mov    rsi,QWORD PTR [rbp-0x310]
    8e06:	mov    edi,0x4
    8e0b:	call   10a80 <__cxa_finalize@plt+0xcc68>
    8e10:	lea    rsi,[rip+0x12e81]        # 1bc98 <_IO_stdin_used@@Base+0x22f8>
    8e17:	mov    rbx,rax
    8e1a:	mov    edx,0x5
    8e1f:	xor    edi,edi
    8e21:	call   3700 <dcgettext@plt>
    8e26:	mov    rcx,rbx
    8e29:	mov    rdx,rax
    8e2c:	jmp    771a <__cxa_finalize@plt+0x3902>
    8e31:	mov    rsi,QWORD PTR [rip+0x219738]        # 222570 <stderr@@GLIBC_2.2.5+0x490>
    8e38:	mov    edi,0x4
    8e3d:	call   10a80 <__cxa_finalize@plt+0xcc68>
    8e42:	lea    rsi,[rip+0x12f97]        # 1bde0 <_IO_stdin_used@@Base+0x2440>
    8e49:	xor    edi,edi
    8e4b:	mov    r13,rax
    8e4e:	mov    edx,0x5
    8e53:	call   3700 <dcgettext@plt>
    8e58:	xor    esi,esi
    8e5a:	mov    rdx,rax
    8e5d:	xor    edi,edi
    8e5f:	xor    eax,eax
    8e61:	mov    rcx,r13
    8e64:	call   3c20 <error@plt>
    8e69:	cmp    BYTE PTR [r12+0x18],0x0
    8e6f:	je     7849 <__cxa_finalize@plt+0x3a31>
    8e75:	cmp    BYTE PTR [rbp-0x308],0x0
    8e7c:	jne    86cf <__cxa_finalize@plt+0x48b7>
    8e82:	jmp    7849 <__cxa_finalize@plt+0x3a31>
    8e87:	movabs rax,0xff000000ff00
    8e91:	test   QWORD PTR [r12+0x20],rax
    8e96:	jne    9465 <__cxa_finalize@plt+0x564d>
    8e9c:	mov    BYTE PTR [rbp-0x335],0x0
    8ea3:	mov    DWORD PTR [rbp-0x368],0x0
    8ead:	jmp    8948 <__cxa_finalize@plt+0x4b30>
    8eb2:	xor    r9d,r9d
    8eb5:	mov    rax,QWORD PTR [rbp-0x280]
    8ebc:	cmp    QWORD PTR [rcx],rax
    8ebf:	mov    BYTE PTR [rbp-0x340],0x0
    8ec6:	jne    7360 <__cxa_finalize@plt+0x3548>
    8ecc:	jmp    8966 <__cxa_finalize@plt+0x4b4e>
    8ed1:	call   12730 <__cxa_finalize@plt+0xe918>
    8ed6:	test   eax,eax
    8ed8:	je     74cd <__cxa_finalize@plt+0x36b5>
    8ede:	jmp    7473 <__cxa_finalize@plt+0x365b>
    8ee3:	cmp    DWORD PTR [rbp-0x318],0xa000
    8eed:	je     9536 <__cxa_finalize@plt+0x571e>
    8ef3:	mov    rsi,r15
    8ef6:	mov    edi,0x4
    8efb:	call   10a80 <__cxa_finalize@plt+0xcc68>
    8f00:	mov    edx,0x5
    8f05:	mov    rbx,rax
    8f08:	lea    rsi,[rip+0x12b10]        # 1ba1f <_IO_stdin_used@@Base+0x207f>
    8f0f:	jmp    78f4 <__cxa_finalize@plt+0x3adc>
    8f14:	mov    rdi,QWORD PTR [r12+0x38]
    8f19:	mov    rsi,QWORD PTR [rbp-0x310]
    8f20:	mov    rdx,r13
    8f23:	call   d7a0 <__cxa_finalize@plt+0x9988>
    8f28:	movzx  r9d,BYTE PTR [rbp-0x314]
    8f30:	jmp    73e8 <__cxa_finalize@plt+0x35d0>
    8f35:	lea    rsi,[rip+0x12976]        # 1b8b2 <_IO_stdin_used@@Base+0x1f12>
    8f3c:	mov    edx,0x5
    8f41:	xor    edi,edi
    8f43:	mov    ebx,0x1
    8f48:	call   3700 <dcgettext@plt>
    8f4d:	mov    edi,0x1
    8f52:	mov    rsi,rax
    8f55:	xor    eax,eax
    8f57:	call   3bb0 <__printf_chk@plt>
    8f5c:	mov    rdx,QWORD PTR [rbp-0x360]
    8f63:	mov    rsi,QWORD PTR [rbp-0x310]
    8f6a:	mov    rdi,r15
    8f6d:	call   6060 <__cxa_finalize@plt+0x2248>
    8f72:	jmp    7210 <__cxa_finalize@plt+0x33f8>
    8f77:	cmp    BYTE PTR [r12+0x18],0x0
    8f7d:	je     9316 <__cxa_finalize@plt+0x54fe>
    8f83:	mov    r13d,DWORD PTR [r12]
    8f87:	test   r13d,r13d
    8f8a:	je     9316 <__cxa_finalize@plt+0x54fe>
    8f90:	cmp    BYTE PTR [rbp-0x314],0x0
    8f97:	jne    7e14 <__cxa_finalize@plt+0x3ffc>
    8f9d:	mov    edx,DWORD PTR [rbp-0x268]
    8fa3:	and    edx,0xf000
    8fa9:	cmp    edx,0x4000
    8faf:	je     938e <__cxa_finalize@plt+0x5576>
    8fb5:	mov    rdi,r15
    8fb8:	mov    BYTE PTR [rbp-0x360],r8b
    8fbf:	call   d600 <__cxa_finalize@plt+0x97e8>
    8fc4:	cmp    BYTE PTR [rax],0x2e
    8fc7:	mov    rcx,rax
    8fca:	movzx  r8d,BYTE PTR [rbp-0x360]
    8fd2:	je     9b77 <__cxa_finalize@plt+0x5d5f>
    8fd8:	cmp    r13d,0x3
    8fdc:	je     905a <__cxa_finalize@plt+0x5242>
    8fde:	mov    rdi,rcx
    8fe1:	mov    BYTE PTR [rbp-0x335],r8b
    8fe8:	mov    QWORD PTR [rbp-0x368],rcx
    8fef:	call   3720 <strlen@plt>
    8ff4:	mov    rdi,QWORD PTR [rbp-0x310]
    8ffb:	mov    QWORD PTR [rbp-0x328],rax
    9002:	call   d600 <__cxa_finalize@plt+0x97e8>
    9007:	mov    rdi,rax
    900a:	mov    QWORD PTR [rbp-0x360],rax
    9011:	call   3720 <strlen@plt>
    9016:	mov    rcx,QWORD PTR [rip+0x219563]        # 222580 <simple_backup_suffix@@Base>
    901d:	mov    r13,rax
    9020:	mov    rdi,rcx
    9023:	mov    QWORD PTR [rbp-0x370],rcx
    902a:	call   3720 <strlen@plt>
    902f:	mov    r9,rax
    9032:	lea    rax,[r13+rax*1+0x0]
    9037:	cmp    QWORD PTR [rbp-0x328],rax
    903e:	mov    rsi,QWORD PTR [rbp-0x360]
    9045:	mov    rcx,QWORD PTR [rbp-0x368]
    904c:	movzx  r8d,BYTE PTR [rbp-0x335]
    9054:	je     976b <__cxa_finalize@plt+0x5953>
    905a:	mov    esi,DWORD PTR [r12]
    905e:	mov    rdi,QWORD PTR [rbp-0x310]
    9065:	mov    BYTE PTR [rbp-0x328],r8b
    906c:	call   cb00 <__cxa_finalize@plt+0x8ce8>
    9071:	test   rax,rax
    9074:	mov    r13,rax
    9077:	movzx  r8d,BYTE PTR [rbp-0x328]
    907f:	je     95ce <__cxa_finalize@plt+0x57b6>
    9085:	mov    rdi,rax
    9088:	mov    BYTE PTR [rbp-0x368],r8b
    908f:	call   3720 <strlen@plt>
    9094:	lea    rdx,[rax+0x1]
    9098:	add    rax,0x1f
    909c:	mov    rsi,r13
    909f:	and    rax,0xfffffffffffffff0
    90a3:	sub    rsp,rax
    90a6:	lea    rdi,[rsp+0xf]
    90ab:	and    rdi,0xfffffffffffffff0
    90af:	call   3a40 <memcpy@plt>
    90b4:	mov    rdi,r13
    90b7:	mov    QWORD PTR [rbp-0x360],rax
    90be:	call   3e10 <free@plt>
    90c3:	mov    BYTE PTR [rbp-0x328],0x1
    90ca:	movzx  r8d,BYTE PTR [rbp-0x368]
    90d2:	jmp    70ed <__cxa_finalize@plt+0x32d5>
    90d7:	mov    rsi,r15
    90da:	mov    edi,0x4
    90df:	call   10a80 <__cxa_finalize@plt+0xcc68>
    90e4:	mov    edx,0x5
    90e9:	mov    rbx,rax
    90ec:	lea    rsi,[rip+0x12809]        # 1b8fc <_IO_stdin_used@@Base+0x1f5c>
    90f3:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    90f8:	mov    rsi,QWORD PTR [rbp-0x310]
    90ff:	mov    rdi,r15
    9102:	mov    BYTE PTR [rbp-0x328],r8b
    9109:	call   11040 <__cxa_finalize@plt+0xd228>
    910e:	xor    eax,0x1
    9111:	movzx  r8d,BYTE PTR [rbp-0x328]
    9119:	mov    r13d,eax
    911c:	xor    eax,eax
    911e:	jmp    83f7 <__cxa_finalize@plt+0x45df>
    9123:	mov    rsi,QWORD PTR [rbp-0x310]
    912a:	mov    edi,0x4
    912f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9134:	mov    edx,0x5
    9139:	mov    rbx,rax
    913c:	lea    rsi,[rip+0x126ee]        # 1b831 <_IO_stdin_used@@Base+0x1e91>
    9143:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    9148:	mov    eax,DWORD PTR [rbp-0x268]
    914e:	and    eax,0xf000
    9153:	cmp    eax,0x4000
    9158:	je     9388 <__cxa_finalize@plt+0x5570>
    915e:	test   r13d,r13d
    9161:	jne    8fb5 <__cxa_finalize@plt+0x519d>
    9167:	mov    QWORD PTR [rbp-0x360],0x0
    9172:	jmp    70ed <__cxa_finalize@plt+0x32d5>
    9177:	mov    rax,QWORD PTR [rdx]
    917a:	cmp    QWORD PTR [r13+0x0],rax
    917e:	sete   r13b
    9182:	xor    eax,eax
    9184:	jmp    83f7 <__cxa_finalize@plt+0x45df>
    9189:	movzx  esi,BYTE PTR [r12+0x25]
    918f:	mov    rdi,QWORD PTR [rbp-0x310]
    9196:	xor    edx,edx
    9198:	mov    rcx,r12
    919b:	mov    BYTE PTR [rbp-0x320],r9b
    91a2:	call   6b10 <__cxa_finalize@plt+0x2cf8>
    91a7:	test   al,al
    91a9:	movzx  r9d,BYTE PTR [rbp-0x320]
    91b1:	jne    73a0 <__cxa_finalize@plt+0x3588>
    91b7:	cmp    BYTE PTR [r12+0x26],0x0
    91bd:	jne    790c <__cxa_finalize@plt+0x3af4>
    91c3:	jmp    73a0 <__cxa_finalize@plt+0x3588>
    91c8:	mov    r8d,DWORD PTR [rbp-0x334]
    91cf:	mov    rdx,QWORD PTR [rbp-0x310]
    91d6:	mov    ecx,0xffffffff
    91db:	mov    esi,ecx
    91dd:	mov    rdi,r15
    91e0:	call   bfd0 <__cxa_finalize@plt+0x81b8>
    91e5:	test   eax,eax
    91e7:	je     7590 <__cxa_finalize@plt+0x3778>
    91ed:	cmp    BYTE PTR [r12+0x24],0x0
    91f3:	movzx  eax,BYTE PTR [rbp-0x308]
    91fa:	cmovne eax,r14d
    91fe:	mov    r14d,eax
    9201:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    9206:	cmp    BYTE PTR [r12+0x18],0x0
    920c:	jne    8f9d <__cxa_finalize@plt+0x5185>
    9212:	mov    rdi,r15
    9215:	mov    BYTE PTR [rbp-0x360],r8b
    921c:	call   d600 <__cxa_finalize@plt+0x97e8>
    9221:	cmp    BYTE PTR [rax],0x2e
    9224:	mov    rcx,rax
    9227:	movzx  r8d,BYTE PTR [rbp-0x360]
    922f:	jne    925a <__cxa_finalize@plt+0x5442>
    9231:	xor    eax,eax
    9233:	xor    edx,edx
    9235:	cmp    BYTE PTR [rcx+0x1],0x2e
    9239:	sete   dl
    923c:	movzx  edx,BYTE PTR [rcx+rdx*1+0x1]
    9241:	test   dl,dl
    9243:	je     7e8e <__cxa_finalize@plt+0x4076>
    9249:	cmp    dl,0x2f
    924c:	je     7e8e <__cxa_finalize@plt+0x4076>
    9252:	test   al,al
    9254:	jne    8fd8 <__cxa_finalize@plt+0x51c0>
    925a:	mov    eax,DWORD PTR [rbp-0x1d8]
    9260:	and    eax,0xf000
    9265:	cmp    eax,0x4000
    926a:	jne    8fd8 <__cxa_finalize@plt+0x51c0>
    9270:	jmp    9167 <__cxa_finalize@plt+0x534f>
    9275:	mov    ebx,DWORD PTR [rbp-0x368]
    927b:	mov    rsi,QWORD PTR [rbp-0x310]
    9282:	lea    rcx,[rbp-0x2f8]
    9289:	xor    edi,edi
    928b:	mov    BYTE PTR [rbp-0x308],r9b
    9292:	mov    QWORD PTR [rbp-0x2f8],0x0
    929d:	not    ebx
    929f:	and    ebx,DWORD PTR [rbp-0x334]
    92a5:	mov    edx,ebx
    92a7:	call   3a60 <__xmknod@plt>
    92ac:	test   eax,eax
    92ae:	movzx  r9d,BYTE PTR [rbp-0x308]
    92b6:	jne    9ae6 <__cxa_finalize@plt+0x5cce>
    92bc:	mov    BYTE PTR [rbp-0x340],r9b
    92c3:	mov    BYTE PTR [rbp-0x335],r9b
    92ca:	mov    BYTE PTR [rbp-0x308],0x1
    92d1:	jmp    7360 <__cxa_finalize@plt+0x3548>
    92d6:	mov    rsi,r15
    92d9:	mov    edi,0x4
    92de:	call   10a80 <__cxa_finalize@plt+0xcc68>
    92e3:	lea    rsi,[rip+0x1262d]        # 1b917 <_IO_stdin_used@@Base+0x1f77>
    92ea:	mov    edx,0x5
    92ef:	mov    rbx,rax
    92f2:	xor    edi,edi
    92f4:	call   3700 <dcgettext@plt>
    92f9:	mov    QWORD PTR [rbp-0x308],rax
    9300:	call   3540 <__errno_location@plt>
    9305:	mov    rcx,rbx
    9308:	mov    rdx,QWORD PTR [rbp-0x308]
    930f:	mov    esi,DWORD PTR [rax]
    9311:	jmp    87cd <__cxa_finalize@plt+0x49b5>
    9316:	mov    rdx,r15
    9319:	mov    esi,0x4
    931e:	mov    edi,0x1
    9323:	call   10960 <__cxa_finalize@plt+0xcb48>
    9328:	mov    rdx,QWORD PTR [rbp-0x310]
    932f:	mov    esi,0x4
    9334:	xor    edi,edi
    9336:	mov    r12,rax
    9339:	call   10960 <__cxa_finalize@plt+0xcb48>
    933e:	mov    edx,0x5
    9343:	mov    rbx,rax
    9346:	lea    rsi,[rip+0x128e3]        # 1bc30 <_IO_stdin_used@@Base+0x2290>
    934d:	jmp    822f <__cxa_finalize@plt+0x4417>
    9352:	mov    rdx,QWORD PTR [rbp-0x310]
    9359:	mov    ecx,0xffffffff
    935e:	mov    r8,r12
    9361:	mov    esi,ecx
    9363:	mov    rdi,r15
    9366:	call   5d70 <__cxa_finalize@plt+0x1f58>
    936b:	test   al,al
    936d:	jne    7545 <__cxa_finalize@plt+0x372d>
    9373:	cmp    BYTE PTR [r12+0x28],0x0
    9379:	je     7545 <__cxa_finalize@plt+0x372d>
    937f:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    9384:	nop    DWORD PTR [rax+0x0]
    9388:	mov    eax,DWORD PTR [rbp-0x1d8]
    938e:	and    eax,0xf000
    9393:	cmp    eax,0x4000
    9398:	je     915e <__cxa_finalize@plt+0x5346>
    939e:	test   r13d,r13d
    93a1:	jne    8fb5 <__cxa_finalize@plt+0x519d>
    93a7:	mov    rdx,QWORD PTR [rbp-0x310]
    93ae:	mov    esi,0x3
    93b3:	xor    edi,edi
    93b5:	call   10b80 <__cxa_finalize@plt+0xcd68>
    93ba:	mov    rdx,r15
    93bd:	mov    esi,0x3
    93c2:	xor    edi,edi
    93c4:	mov    r12,rax
    93c7:	call   10b80 <__cxa_finalize@plt+0xcd68>
    93cc:	mov    edx,0x5
    93d1:	mov    rbx,rax
    93d4:	lea    rsi,[rip+0x128f5]        # 1bcd0 <_IO_stdin_used@@Base+0x2330>
    93db:	jmp    822f <__cxa_finalize@plt+0x4417>
    93e0:	mov    rsi,QWORD PTR [rbp-0x310]
    93e7:	mov    rdi,r15
    93ea:	mov    BYTE PTR [rbp-0x335],r8b
    93f1:	mov    QWORD PTR [rbp-0x368],rdx
    93f8:	call   11040 <__cxa_finalize@plt+0xd228>
    93fd:	test   al,al
    93ff:	mov    rdx,QWORD PTR [rbp-0x368]
    9406:	movzx  r8d,BYTE PTR [rbp-0x335]
    940e:	je     9b2c <__cxa_finalize@plt+0x5d14>
    9414:	mov    eax,DWORD PTR [rdx+0x18]
    9417:	and    eax,0xf000
    941c:	cmp    eax,0xa000
    9421:	je     8bc1 <__cxa_finalize@plt+0x4da9>
    9427:	mov    eax,DWORD PTR [r13+0x18]
    942b:	and    eax,0xf000
    9430:	cmp    eax,0xa000
    9435:	je     8bc1 <__cxa_finalize@plt+0x4da9>
    943b:	jmp    8b9a <__cxa_finalize@plt+0x4d82>
    9440:	mov    rsi,QWORD PTR [rbp-0x310]
    9447:	mov    edi,0x4
    944c:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9451:	mov    edx,0x5
    9456:	mov    rbx,rax
    9459:	lea    rsi,[rip+0x12584]        # 1b9e4 <_IO_stdin_used@@Base+0x2044>
    9460:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    9465:	movzx  esi,BYTE PTR [r12+0x25]
    946b:	mov    rdi,QWORD PTR [rbp-0x310]
    9472:	xor    edx,edx
    9474:	mov    rcx,r12
    9477:	call   6b10 <__cxa_finalize@plt+0x2cf8>
    947c:	test   al,al
    947e:	jne    8e9c <__cxa_finalize@plt+0x5084>
    9484:	cmp    BYTE PTR [r12+0x26],0x0
    948a:	jne    790c <__cxa_finalize@plt+0x3af4>
    9490:	jmp    8e9c <__cxa_finalize@plt+0x5084>
    9495:	mov    rdx,QWORD PTR [rbp-0x1f0]
    949c:	mov    rsi,QWORD PTR [rbp-0x1e8]
    94a3:	mov    rdi,QWORD PTR [rbp-0x310]
    94aa:	call   b150 <__cxa_finalize@plt+0x7338>
    94af:	mov    rax,QWORD PTR [rbp-0x350]
    94b6:	mov    BYTE PTR [rax],0x1
    94b9:	jmp    88f0 <__cxa_finalize@plt+0x4ad8>
    94be:	mov    edx,DWORD PTR [r12+0x10]
    94c3:	mov    rdi,QWORD PTR [rbp-0x310]
    94ca:	mov    esi,0xffffffff
    94cf:	call   c060 <__cxa_finalize@plt+0x8248>
    94d4:	test   eax,eax
    94d6:	movzx  eax,BYTE PTR [rbp-0x308]
    94dd:	cmovne eax,r14d
    94e1:	mov    r14d,eax
    94e4:	jmp    75f3 <__cxa_finalize@plt+0x37db>
    94e9:	mov    rsi,r15
    94ec:	mov    edi,0x4
    94f1:	call   10a80 <__cxa_finalize@plt+0xcc68>
    94f6:	lea    rsi,[rip+0x124be]        # 1b9bb <_IO_stdin_used@@Base+0x201b>
    94fd:	xor    edi,edi
    94ff:	mov    edx,0x5
    9504:	mov    rbx,rax
    9507:	call   3700 <dcgettext@plt>
    950c:	mov    r15,rax
    950f:	call   3540 <__errno_location@plt>
    9514:	mov    esi,DWORD PTR [rax]
    9516:	xor    edi,edi
    9518:	mov    rcx,rbx
    951b:	mov    rdx,r15
    951e:	xor    eax,eax
    9520:	call   3c20 <error@plt>
    9525:	mov    rdi,QWORD PTR [rbp-0x340]
    952c:	call   3e10 <free@plt>
    9531:	jmp    790c <__cxa_finalize@plt+0x3af4>
    9536:	mov    rsi,QWORD PTR [rbp-0x250]
    953d:	mov    rdi,r15
    9540:	call   c0b0 <__cxa_finalize@plt+0x8298>
    9545:	test   rax,rax
    9548:	mov    rbx,rax
    954b:	je     9bd8 <__cxa_finalize@plt+0x5dc0>
    9551:	movzx  ecx,BYTE PTR [r12+0x16]
    9557:	mov    rdx,QWORD PTR [rbp-0x310]
    955e:	mov    esi,0xffffff9c
    9563:	mov    rdi,rax
    9566:	call   b760 <__cxa_finalize@plt+0x7948>
    956b:	test   eax,eax
    956d:	js     9d3f <__cxa_finalize@plt+0x5f27>
    9573:	mov    rdi,rbx
    9576:	call   3e10 <free@plt>
    957b:	cmp    BYTE PTR [r12+0x25],0x0
    9581:	jne    9e02 <__cxa_finalize@plt+0x5fea>
    9587:	movzx  eax,BYTE PTR [r12+0x1d]
    958d:	test   al,al
    958f:	mov    BYTE PTR [rbp-0x340],al
    9595:	jne    9db7 <__cxa_finalize@plt+0x5f9f>
    959b:	xor    r9d,r9d
    959e:	mov    BYTE PTR [rbp-0x335],0x0
    95a5:	mov    BYTE PTR [rbp-0x340],0x1
    95ac:	mov    BYTE PTR [rbp-0x308],0x1
    95b3:	jmp    7360 <__cxa_finalize@plt+0x3548>
    95b8:	mov    rsi,QWORD PTR [rbp-0x310]
    95bf:	xor    edx,edx
    95c1:	mov    rdi,r15
    95c4:	call   6060 <__cxa_finalize@plt+0x2248>
    95c9:	jmp    8948 <__cxa_finalize@plt+0x4b30>
    95ce:	mov    BYTE PTR [rbp-0x328],r8b
    95d5:	call   3540 <__errno_location@plt>
    95da:	cmp    DWORD PTR [rax],0x2
    95dd:	mov    r13,rax
    95e0:	movzx  r8d,BYTE PTR [rbp-0x328]
    95e8:	je     9b9c <__cxa_finalize@plt+0x5d84>
    95ee:	mov    rsi,QWORD PTR [rbp-0x310]
    95f5:	mov    edi,0x4
    95fa:	call   10a80 <__cxa_finalize@plt+0xcc68>
    95ff:	mov    edx,0x5
    9604:	mov    rbx,rax
    9607:	lea    rsi,[rip+0x12264]        # 1b872 <_IO_stdin_used@@Base+0x1ed2>
    960e:	jmp    7f3c <__cxa_finalize@plt+0x4124>
    9613:	movzx  r8d,BYTE PTR [rbp-0x368]
    961b:	jmp    7dcc <__cxa_finalize@plt+0x3fb4>
    9620:	mov    rsi,r15
    9623:	mov    edi,0x4
    9628:	call   10a80 <__cxa_finalize@plt+0xcc68>
    962d:	lea    rsi,[rip+0x122b7]        # 1b8eb <_IO_stdin_used@@Base+0x1f4b>
    9634:	mov    edx,0x5
    9639:	xor    edi,edi
    963b:	mov    rbx,rax
    963e:	call   3700 <dcgettext@plt>
    9643:	mov    QWORD PTR [rbp-0x308],rax
    964a:	call   3540 <__errno_location@plt>
    964f:	mov    rdx,QWORD PTR [rbp-0x308]
    9656:	mov    esi,DWORD PTR [rax]
    9658:	mov    rcx,rbx
    965b:	xor    edi,edi
    965d:	xor    eax,eax
    965f:	call   3c20 <error@plt>
    9664:	mov    BYTE PTR [rbp-0x308],0x0
    966b:	jmp    8b56 <__cxa_finalize@plt+0x4d3e>
    9670:	call   6e90 <__cxa_finalize@plt+0x3078>
    9675:	not    eax
    9677:	mov    edx,eax
    9679:	and    edx,0x1ff
    967f:	jmp    94c3 <__cxa_finalize@plt+0x56ab>
    9684:	movzx  eax,BYTE PTR [r12+0x2e]
    968a:	test   al,al
    968c:	mov    BYTE PTR [rbp-0x328],al
    9692:	jne    9ce7 <__cxa_finalize@plt+0x5ecf>
    9698:	cmp    BYTE PTR [rbp-0x314],0x0
    969f:	je     9cb2 <__cxa_finalize@plt+0x5e9a>
    96a5:	movzx  eax,BYTE PTR [rbp-0x314]
    96ac:	cmp    QWORD PTR [r12+0x38],0x0
    96b2:	mov    QWORD PTR [rbp-0x360],0x0
    96bd:	mov    BYTE PTR [rbp-0x328],al
    96c3:	jne    7106 <__cxa_finalize@plt+0x32ee>
    96c9:	jmp    7630 <__cxa_finalize@plt+0x3818>
    96ce:	xchg   ax,ax
    96d0:	cmp    DWORD PTR [r12+0x4],0x2
    96d6:	mov    QWORD PTR [rbp-0x360],0x0
    96e1:	jne    70ed <__cxa_finalize@plt+0x32d5>
    96e7:	mov    eax,DWORD PTR [rbp-0x268]
    96ed:	and    eax,0xf000
    96f2:	cmp    eax,0x8000
    96f7:	jne    7ee0 <__cxa_finalize@plt+0x40c8>
    96fd:	jmp    70ed <__cxa_finalize@plt+0x32d5>
    9702:	nop    WORD PTR [rax+rax*1+0x0]
    9708:	mov    rsi,QWORD PTR [rbp-0x310]
    970f:	mov    edi,0x4
    9714:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9719:	mov    edx,0x5
    971e:	mov    rbx,rax
    9721:	lea    rsi,[rip+0x102c2]        # 199ea <_IO_stdin_used@@Base+0x4a>
    9728:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    972d:	mov    eax,DWORD PTR [rbp-0x148]
    9733:	and    eax,0xf000
    9738:	cmp    eax,0xa000
    973d:	jne    81a0 <__cxa_finalize@plt+0x4388>
    9743:	cmp    BYTE PTR [r12+0x15],0x0
    9749:	je     81a0 <__cxa_finalize@plt+0x4388>
    974f:	jmp    79e8 <__cxa_finalize@plt+0x3bd0>
    9754:	mov    eax,DWORD PTR [rbp-0x1d0]
    975a:	cmp    DWORD PTR [rbp-0x260],eax
    9760:	jne    74f0 <__cxa_finalize@plt+0x36d8>
    9766:	jmp    7539 <__cxa_finalize@plt+0x3721>
    976b:	mov    rdx,r13
    976e:	mov    rdi,rcx
    9771:	mov    BYTE PTR [rbp-0x328],r8b
    9778:	mov    QWORD PTR [rbp-0x368],r9
    977f:	mov    QWORD PTR [rbp-0x360],rcx
    9786:	call   3930 <memcmp@plt>
    978b:	test   eax,eax
    978d:	movzx  r8d,BYTE PTR [rbp-0x328]
    9795:	jne    905a <__cxa_finalize@plt+0x5242>
    979b:	mov    rcx,QWORD PTR [rbp-0x360]
    97a2:	mov    rsi,QWORD PTR [rbp-0x370]
    97a9:	lea    rdi,[rcx+r13*1]
    97ad:	call   39c0 <strcmp@plt>
    97b2:	test   eax,eax
    97b4:	movzx  r8d,BYTE PTR [rbp-0x328]
    97bc:	mov    r9,QWORD PTR [rbp-0x368]
    97c3:	jne    905a <__cxa_finalize@plt+0x5242>
    97c9:	mov    rdi,QWORD PTR [rbp-0x310]
    97d0:	mov    BYTE PTR [rbp-0x368],r8b
    97d7:	or     rcx,0xffffffffffffffff
    97db:	repnz scas al,BYTE PTR es:[rdi]
    97dd:	mov    rax,rcx
    97e0:	not    rax
    97e3:	lea    rdx,[rax-0x1]
    97e7:	lea    rdi,[rdx+r9*1+0x1]
    97ec:	mov    QWORD PTR [rbp-0x360],rdx
    97f3:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    97f8:	mov    rdx,QWORD PTR [rbp-0x360]
    97ff:	mov    r13,rax
    9802:	mov    rsi,QWORD PTR [rbp-0x310]
    9809:	mov    rax,QWORD PTR [rip+0x218d70]        # 222580 <simple_backup_suffix@@Base>
    9810:	mov    rdi,r13
    9813:	mov    QWORD PTR [rbp-0x328],rax
    981a:	call   3bf0 <mempcpy@plt>
    981f:	mov    rsi,QWORD PTR [rbp-0x328]
    9826:	mov    rdi,rax
    9829:	call   35a0 <strcpy@plt>
    982e:	lea    rdx,[rbp-0xd0]
    9835:	mov    rsi,r13
    9838:	mov    edi,0x1
    983d:	call   3a90 <__xstat@plt>
    9842:	mov    rdi,r13
    9845:	mov    DWORD PTR [rbp-0x328],eax
    984b:	call   3e10 <free@plt>
    9850:	mov    eax,DWORD PTR [rbp-0x328]
    9856:	movzx  r8d,BYTE PTR [rbp-0x368]
    985e:	test   eax,eax
    9860:	jne    905a <__cxa_finalize@plt+0x5242>
    9866:	mov    rax,QWORD PTR [rbp-0xc8]
    986d:	cmp    QWORD PTR [rbp-0x278],rax
    9874:	jne    905a <__cxa_finalize@plt+0x5242>
    987a:	mov    rax,QWORD PTR [rbp-0xd0]
    9881:	cmp    QWORD PTR [rbp-0x280],rax
    9888:	jne    905a <__cxa_finalize@plt+0x5242>
    988e:	cmp    BYTE PTR [r12+0x18],0x0
    9894:	je     9b81 <__cxa_finalize@plt+0x5d69>
    989a:	lea    rsi,[rip+0x12467]        # 1bd08 <_IO_stdin_used@@Base+0x2368>
    98a1:	mov    edx,0x5
    98a6:	xor    edi,edi
    98a8:	call   3700 <dcgettext@plt>
    98ad:	mov    rbx,rax
    98b0:	mov    rdx,r15
    98b3:	mov    esi,0x4
    98b8:	mov    edi,0x1
    98bd:	call   10960 <__cxa_finalize@plt+0xcb48>
    98c2:	mov    rdx,QWORD PTR [rbp-0x310]
    98c9:	mov    r12,rax
    98cc:	mov    esi,0x4
    98d1:	xor    edi,edi
    98d3:	call   10960 <__cxa_finalize@plt+0xcb48>
    98d8:	mov    r8,r12
    98db:	mov    rcx,rax
    98de:	mov    rdx,rbx
    98e1:	jmp    823f <__cxa_finalize@plt+0x4427>
    98e6:	call   6e90 <__cxa_finalize@plt+0x3078>
    98eb:	not    eax
    98ed:	and    DWORD PTR [rbp-0x368],eax
    98f3:	je     7580 <__cxa_finalize@plt+0x3768>
    98f9:	cmp    BYTE PTR [rbp-0x335],0x1
    9900:	je     9929 <__cxa_finalize@plt+0x5b11>
    9902:	cmp    BYTE PTR [rbp-0x328],0x0
    9909:	jne    a889 <__cxa_finalize@plt+0x6a71>
    990f:	mov    eax,DWORD PTR [rbp-0x1d8]
    9915:	mov    DWORD PTR [rbp-0x3b8],eax
    991b:	not    eax
    991d:	test   DWORD PTR [rbp-0x368],eax
    9923:	je     7590 <__cxa_finalize@plt+0x3778>
    9929:	mov    esi,DWORD PTR [rbp-0x3b8]
    992f:	or     esi,DWORD PTR [rbp-0x368]
    9935:	mov    rdi,QWORD PTR [rbp-0x310]
    993c:	call   3be0 <chmod@plt>
    9941:	test   eax,eax
    9943:	je     7590 <__cxa_finalize@plt+0x3778>
    9949:	mov    rsi,QWORD PTR [rbp-0x310]
    9950:	mov    edi,0x4
    9955:	call   10a80 <__cxa_finalize@plt+0xcc68>
    995a:	lea    rsi,[rip+0x1203c]        # 1b99d <_IO_stdin_used@@Base+0x1ffd>
    9961:	xor    edi,edi
    9963:	mov    edx,0x5
    9968:	mov    r13,rax
    996b:	call   3700 <dcgettext@plt>
    9970:	mov    rbx,rax
    9973:	call   3540 <__errno_location@plt>
    9978:	mov    esi,DWORD PTR [rax]
    997a:	mov    rcx,r13
    997d:	mov    rdx,rbx
    9980:	xor    edi,edi
    9982:	xor    eax,eax
    9984:	call   3c20 <error@plt>
    9989:	jmp    91ed <__cxa_finalize@plt+0x53d5>
    998e:	mov    eax,DWORD PTR [rbp-0x308]
    9994:	and    eax,0x1ff
    9999:	cmp    BYTE PTR [rbp-0x328],0x0
    99a0:	mov    DWORD PTR [rbp-0x3b4],eax
    99a6:	jne    9ca1 <__cxa_finalize@plt+0x5e89>
    99ac:	cmp    BYTE PTR [r12+0x23],0x1
    99b2:	mov    rdi,QWORD PTR [rbp-0x310]
    99b9:	sbb    esi,esi
    99bb:	xor    eax,eax
    99bd:	and    esi,0xfffffe00
    99c3:	add    esi,0x201
    99c9:	call   d730 <__cxa_finalize@plt+0x9918>
    99ce:	mov    DWORD PTR [rbp-0x308],eax
    99d4:	call   3540 <__errno_location@plt>
    99d9:	mov    rbx,rax
    99dc:	movabs rax,0xff000000ff00
    99e6:	test   QWORD PTR [r12+0x20],rax
    99eb:	je     9f04 <__cxa_finalize@plt+0x60ec>
    99f1:	cmp    DWORD PTR [rbp-0x308],0x0
    99f8:	jns    a9dd <__cxa_finalize@plt+0x6bc5>
    99fe:	movzx  r9d,BYTE PTR [r12+0x16]
    9a04:	test   r9b,r9b
    9a07:	jne    9bf9 <__cxa_finalize@plt+0x5de1>
    9a0d:	mov    r8d,DWORD PTR [rbx]
    9a10:	cmp    r8d,0x2
    9a14:	jne    9a9c <__cxa_finalize@plt+0x5c84>
    9a1a:	cmp    BYTE PTR [r12+0x18],0x0
    9a20:	jne    9a9c <__cxa_finalize@plt+0x5c84>
    9a22:	mov    DWORD PTR [rbp-0x380],0x0
    9a2c:	mov    eax,DWORD PTR [rbp-0x380]
    9a32:	mov    rdi,QWORD PTR [rbp-0x310]
    9a39:	mov    esi,0xc1
    9a3e:	not    eax
    9a40:	and    eax,DWORD PTR [rbp-0x3b4]
    9a46:	mov    edx,eax
    9a48:	mov    DWORD PTR [rbp-0x340],eax
    9a4e:	xor    eax,eax
    9a50:	call   d730 <__cxa_finalize@plt+0x9918>
    9a55:	mov    DWORD PTR [rbp-0x308],eax
    9a5b:	call   3540 <__errno_location@plt>
    9a60:	mov    r8d,DWORD PTR [rax]
    9a63:	mov    rbx,rax
    9a66:	mov    eax,DWORD PTR [rbp-0x308]
    9a6c:	shr    eax,0x1f
    9a6f:	cmp    r8d,0x11
    9a73:	sete   dl
    9a76:	and    dl,al
    9a78:	mov    BYTE PTR [rbp-0x328],dl
    9a7e:	je     9e79 <__cxa_finalize@plt+0x6061>
    9a84:	cmp    BYTE PTR [r12+0x18],0x0
    9a8a:	mov    r8d,0x11
    9a90:	je     9e0c <__cxa_finalize@plt+0x5ff4>
    9a96:	mov    r9d,0x1
    9a9c:	mov    rsi,QWORD PTR [rbp-0x310]
    9aa3:	mov    edi,0x4
    9aa8:	mov    DWORD PTR [rbp-0x308],r8d
    9aaf:	mov    BYTE PTR [rbp-0x328],r9b
    9ab6:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9abb:	lea    rsi,[rip+0x11e65]        # 1b927 <_IO_stdin_used@@Base+0x1f87>
    9ac2:	mov    edx,0x5
    9ac7:	xor    edi,edi
    9ac9:	mov    rbx,rax
    9acc:	call   3700 <dcgettext@plt>
    9ad1:	mov    r8d,DWORD PTR [rbp-0x308]
    9ad8:	mov    rcx,rbx
    9adb:	mov    rdx,rax
    9ade:	mov    esi,r8d
    9ae1:	jmp    87cd <__cxa_finalize@plt+0x49b5>
    9ae6:	mov    rdi,QWORD PTR [rbp-0x310]
    9aed:	and    bh,0xef
    9af0:	mov    esi,ebx
    9af2:	call   3a10 <mkfifo@plt>
    9af7:	test   eax,eax
    9af9:	movzx  r9d,BYTE PTR [rbp-0x308]
    9b01:	je     92bc <__cxa_finalize@plt+0x54a4>
    9b07:	mov    rsi,QWORD PTR [rbp-0x310]
    9b0e:	mov    edi,0x4
    9b13:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9b18:	mov    edx,0x5
    9b1d:	mov    rbx,rax
    9b20:	lea    rsi,[rip+0x11ea7]        # 1b9ce <_IO_stdin_used@@Base+0x202e>
    9b27:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    9b2c:	movzx  r13d,BYTE PTR [r12+0x18]
    9b32:	xor    r13d,0x1
    9b36:	jmp    83f7 <__cxa_finalize@plt+0x45df>
    9b3b:	mov    rdx,r15
    9b3e:	mov    esi,0x4
    9b43:	mov    edi,0x1
    9b48:	call   10960 <__cxa_finalize@plt+0xcb48>
    9b4d:	mov    rdx,QWORD PTR [rbp-0x310]
    9b54:	mov    esi,0x4
    9b59:	xor    edi,edi
    9b5b:	mov    r12,rax
    9b5e:	call   10960 <__cxa_finalize@plt+0xcb48>
    9b63:	mov    edx,0x5
    9b68:	mov    rbx,rax
    9b6b:	lea    rsi,[rip+0x120f6]        # 1bc68 <_IO_stdin_used@@Base+0x22c8>
    9b72:	jmp    822f <__cxa_finalize@plt+0x4417>
    9b77:	mov    eax,0x1
    9b7c:	jmp    9233 <__cxa_finalize@plt+0x541b>
    9b81:	lea    rsi,[rip+0x121b8]        # 1bd40 <_IO_stdin_used@@Base+0x23a0>
    9b88:	mov    edx,0x5
    9b8d:	xor    edi,edi
    9b8f:	call   3700 <dcgettext@plt>
    9b94:	mov    rbx,rax
    9b97:	jmp    98b0 <__cxa_finalize@plt+0x5a98>
    9b9c:	mov    QWORD PTR [rbp-0x360],0x0
    9ba7:	mov    BYTE PTR [rbp-0x328],0x1
    9bae:	jmp    70ed <__cxa_finalize@plt+0x32d5>
    9bb3:	mov    BYTE PTR [rbp-0x308],0x1
    9bba:	jmp    8b3a <__cxa_finalize@plt+0x4d22>
    9bbf:	mov    rax,QWORD PTR [rbp-0xd0]
    9bc6:	cmp    QWORD PTR [rbp-0x160],rax
    9bcd:	jne    8cf2 <__cxa_finalize@plt+0x4eda>
    9bd3:	jmp    7c7f <__cxa_finalize@plt+0x3e67>
    9bd8:	mov    rsi,r15
    9bdb:	mov    edi,0x4
    9be0:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9be5:	mov    edx,0x5
    9bea:	mov    rbx,rax
    9bed:	lea    rsi,[rip+0x11e0e]        # 1ba02 <_IO_stdin_used@@Base+0x2062>
    9bf4:	jmp    82d7 <__cxa_finalize@plt+0x44bf>
    9bf9:	mov    rdi,QWORD PTR [rbp-0x310]
    9c00:	call   3560 <unlink@plt>
    9c05:	test   eax,eax
    9c07:	jne    adbf <__cxa_finalize@plt+0x6fa7>
    9c0d:	cmp    BYTE PTR [r12+0x2e],0x0
    9c13:	je     9c4e <__cxa_finalize@plt+0x5e36>
    9c15:	mov    rsi,QWORD PTR [rbp-0x310]
    9c1c:	mov    edi,0x4
    9c21:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9c26:	lea    rsi,[rip+0x11b6f]        # 1b79c <_IO_stdin_used@@Base+0x1dfc>
    9c2d:	mov    rbx,rax
    9c30:	mov    edx,0x5
    9c35:	xor    edi,edi
    9c37:	call   3700 <dcgettext@plt>
    9c3c:	mov    rdx,rbx
    9c3f:	mov    rsi,rax
    9c42:	mov    edi,0x1
    9c47:	xor    eax,eax
    9c49:	call   3bb0 <__printf_chk@plt>
    9c4e:	movzx  eax,BYTE PTR [r12+0x21]
    9c54:	mov    ebx,DWORD PTR [rbp-0x368]
    9c5a:	mov    DWORD PTR [rbp-0x380],ebx
    9c60:	test   al,al
    9c62:	mov    BYTE PTR [rbp-0x328],al
    9c68:	je     9a2c <__cxa_finalize@plt+0x5c14>
    9c6e:	mov    edx,DWORD PTR [rbp-0x3b4]
    9c74:	mov    rsi,QWORD PTR [rbp-0x310]
    9c7b:	mov    r8,r12
    9c7e:	mov    ecx,0x1
    9c83:	mov    rdi,r15
    9c86:	call   68e0 <__cxa_finalize@plt+0x2ac8>
    9c8b:	test   al,al
    9c8d:	mov    r9d,eax
    9c90:	mov    QWORD PTR [rbp-0x340],0x0
    9c9b:	je     87e4 <__cxa_finalize@plt+0x49cc>
    9ca1:	mov    eax,DWORD PTR [rbp-0x368]
    9ca7:	mov    DWORD PTR [rbp-0x380],eax
    9cad:	jmp    9a2c <__cxa_finalize@plt+0x5c14>
    9cb2:	cmp    DWORD PTR [rbp-0x318],0x4000
    9cbc:	sete   al
    9cbf:	and    al,BYTE PTR [r12+0x2a]
    9cc4:	mov    BYTE PTR [rbp-0x328],al
    9cca:	jne    7d0d <__cxa_finalize@plt+0x3ef5>
    9cd0:	mov    BYTE PTR [rbp-0x328],0x1
    9cd7:	mov    QWORD PTR [rbp-0x360],0x0
    9ce2:	jmp    71ee <__cxa_finalize@plt+0x33d6>
    9ce7:	mov    rsi,QWORD PTR [rbp-0x310]
    9cee:	mov    edi,0x4
    9cf3:	mov    BYTE PTR [rbp-0x368],r8b
    9cfa:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9cff:	lea    rsi,[rip+0x11a96]        # 1b79c <_IO_stdin_used@@Base+0x1dfc>
    9d06:	mov    r13,rax
    9d09:	mov    edx,0x5
    9d0e:	xor    edi,edi
    9d10:	call   3700 <dcgettext@plt>
    9d15:	mov    rdx,r13
    9d18:	mov    rsi,rax
    9d1b:	mov    edi,0x1
    9d20:	xor    eax,eax
    9d22:	call   3bb0 <__printf_chk@plt>
    9d27:	mov    QWORD PTR [rbp-0x360],0x0
    9d32:	movzx  r8d,BYTE PTR [rbp-0x368]
    9d3a:	jmp    70ed <__cxa_finalize@plt+0x32d5>
    9d3f:	call   3540 <__errno_location@plt>
    9d44:	mov    eax,DWORD PTR [rax]
    9d46:	test   eax,eax
    9d48:	mov    DWORD PTR [rbp-0x308],eax
    9d4e:	je     9573 <__cxa_finalize@plt+0x575b>
    9d54:	cmp    BYTE PTR [r12+0x2d],0x1
    9d5a:	jne    9d69 <__cxa_finalize@plt+0x5f51>
    9d5c:	cmp    BYTE PTR [rbp-0x328],0x0
    9d63:	je     a8b5 <__cxa_finalize@plt+0x6a9d>
    9d69:	mov    rdi,rbx
    9d6c:	call   3e10 <free@plt>
    9d71:	mov    rsi,QWORD PTR [rbp-0x310]
    9d78:	mov    edi,0x4
    9d7d:	call   10a80 <__cxa_finalize@plt+0xcc68>
    9d82:	lea    rsi,[rip+0x1223f]        # 1bfc8 <_IO_stdin_used@@Base+0x2628>
    9d89:	xor    edi,edi
    9d8b:	mov    edx,0x5
    9d90:	mov    rbx,rax
    9d93:	call   3700 <dcgettext@plt>
    9d98:	mov    esi,DWORD PTR [rbp-0x308]
    9d9e:	mov    rdx,rax
    9da1:	mov    rcx,rbx
    9da4:	xor    edi,edi
    9da6:	xor    eax,eax
    9da8:	call   3c20 <error@plt>
    9dad:	jmp    790c <__cxa_finalize@plt+0x3af4>
    9db2:	call   3760 <__stack_chk_fail@plt>
    9db7:	mov    edx,DWORD PTR [rbp-0x260]
    9dbd:	mov    esi,DWORD PTR [rbp-0x264]
    9dc3:	mov    rdi,QWORD PTR [rbp-0x310]
    9dca:	call   3b20 <lchown@plt>
    9dcf:	test   eax,eax
    9dd1:	je     a5de <__cxa_finalize@plt+0x67c6>
    9dd7:	mov    rdi,r12
    9dda:	call   6c70 <__cxa_finalize@plt+0x2e58>
    9ddf:	test   al,al
    9de1:	je     acf7 <__cxa_finalize@plt+0x6edf>
    9de7:	mov    BYTE PTR [rbp-0x340],al
    9ded:	xor    r9d,r9d
    9df0:	mov    BYTE PTR [rbp-0x335],0x0
    9df7:	mov    BYTE PTR [rbp-0x308],al
    9dfd:	jmp    7360 <__cxa_finalize@plt+0x3548>
    9e02:	call   68a0 <__cxa_finalize@plt+0x2a88>
    9e07:	jmp    9587 <__cxa_finalize@plt+0x576f>
    9e0c:	mov    rsi,QWORD PTR [rbp-0x310]
    9e13:	lea    rdx,[rbp-0xd0]
    9e1a:	mov    edi,0x1
    9e1f:	mov    DWORD PTR [rbp-0x358],r8d
    9e26:	call   3740 <__lxstat@plt>
    9e2b:	test   eax,eax
    9e2d:	mov    r8d,DWORD PTR [rbp-0x358]
    9e34:	jne    9e79 <__cxa_finalize@plt+0x6061>
    9e36:	mov    eax,DWORD PTR [rbp-0xb8]
    9e3c:	and    eax,0xf000
    9e41:	cmp    eax,0xa000
    9e46:	jne    9e79 <__cxa_finalize@plt+0x6061>
    9e48:	movzx  r9d,BYTE PTR [r12+0x30]
    9e4e:	test   r9b,r9b
    9e51:	je     ae0b <__cxa_finalize@plt+0x6ff3>
    9e57:	mov    edx,DWORD PTR [rbp-0x340]
    9e5d:	mov    rdi,QWORD PTR [rbp-0x310]
    9e64:	mov    esi,0x41
    9e69:	xor    eax,eax
    9e6b:	call   d730 <__cxa_finalize@plt+0x9918>
    9e70:	mov    r8d,DWORD PTR [rbx]
    9e73:	mov    DWORD PTR [rbp-0x308],eax
    9e79:	mov    eax,DWORD PTR [rbp-0x308]
    9e7f:	shr    eax,0x1f
    9e82:	cmp    r8d,0x15
    9e86:	sete   dl
    9e89:	and    dl,al
    9e8b:	mov    r9d,edx
    9e8e:	je     a5c5 <__cxa_finalize@plt+0x67ad>
    9e94:	mov    rbx,QWORD PTR [rbp-0x310]
    9e9b:	mov    r8d,0x15
    9ea1:	cmp    BYTE PTR [rbx],0x0
    9ea4:	mov    rdi,rbx
    9ea7:	je     9a9c <__cxa_finalize@plt+0x5c84>
    9ead:	xor    eax,eax
    9eaf:	or     rcx,0xffffffffffffffff
    9eb3:	xor    r8d,r8d
    9eb6:	repnz scas al,BYTE PTR es:[rdi]
    9eb8:	mov    rax,rcx
    9ebb:	not    rax
    9ebe:	cmp    BYTE PTR [rbx+rax*1-0x2],0x2f
    9ec3:	setne  r8b
    9ec7:	add    r8d,0x14
    9ecb:	jmp    9a9c <__cxa_finalize@plt+0x5c84>
    9ed0:	mov    rsi,QWORD PTR [rbp-0x310]
    9ed7:	lea    rdx,[rbp-0x160]
    9ede:	mov    edi,0x1
    9ee3:	mov    BYTE PTR [rbp-0x368],r8b
    9eea:	call   3a90 <__xstat@plt>
    9eef:	test   eax,eax
    9ef1:	movzx  r8d,BYTE PTR [rbp-0x368]
    9ef9:	je     84be <__cxa_finalize@plt+0x46a6>
    9eff:	jmp    79e8 <__cxa_finalize@plt+0x3bd0>
    9f04:	cmp    DWORD PTR [rbp-0x308],0x0
    9f0b:	js     99fe <__cxa_finalize@plt+0x5be6>
    9f11:	mov    DWORD PTR [rbp-0x380],0x0
    9f1b:	lea    rax,[rbp-0xd0]
    9f22:	mov    esi,DWORD PTR [rbp-0x308]
    9f28:	mov    edi,0x1
    9f2d:	mov    rdx,rax
    9f30:	mov    QWORD PTR [rbp-0x378],rax
    9f37:	call   3b10 <__fxstat@plt>
    9f3c:	test   eax,eax
    9f3e:	mov    DWORD PTR [rbp-0x370],eax
    9f44:	jne    a935 <__cxa_finalize@plt+0x6b1d>
    9f4a:	cmp    BYTE PTR [rbp-0x348],0x0
    9f51:	je     a399 <__cxa_finalize@plt+0x6581>
    9f57:	cmp    DWORD PTR [r12+0x34],0x0
    9f5d:	jne    abf1 <__cxa_finalize@plt+0x6dd9>
    9f63:	call   3d30 <getpagesize@plt>
    9f68:	mov    rcx,QWORD PTR [rbp-0x98]
    9f6f:	movsxd rbx,eax
    9f72:	movabs rax,0x1ffffffffffe0000
    9f7c:	mov    r8d,0x200
    9f82:	mov    edi,DWORD PTR [rbp-0x320]
    9f88:	mov    QWORD PTR [rbp-0x340],r8
    9f8f:	lea    rdx,[rcx-0x20000]
    9f96:	cmp    rdx,rax
    9f99:	mov    eax,0x20000
    9f9e:	lea    rdx,[rcx-0x1]
    9fa2:	cmovbe rax,rcx
    9fa6:	mov    QWORD PTR [rbp-0x358],rax
    9fad:	movabs rax,0x1fffffffffffffff
    9fb7:	cmp    rdx,rax
    9fba:	cmova  rcx,r8
    9fbe:	xor    edx,edx
    9fc0:	xor    esi,esi
    9fc2:	mov    QWORD PTR [rbp-0x3a0],rcx
    9fc9:	mov    ecx,0x2
    9fce:	call   d6f0 <__cxa_finalize@plt+0x98d8>
    9fd3:	mov    r9d,DWORD PTR [rbp-0x148]
    9fda:	mov    r8,QWORD PTR [rbp-0x340]
    9fe1:	and    r9d,0xf000
    9fe8:	cmp    r9d,0x8000
    9fef:	je     ab76 <__cxa_finalize@plt+0x6d5e>
    9ff5:	mov    eax,DWORD PTR [rbp-0xb8]
    9ffb:	and    eax,0xf000
    a000:	cmp    eax,0x8000
    a005:	je     ab07 <__cxa_finalize@plt+0x6cef>
    a00b:	mov    rdi,QWORD PTR [rbp-0x128]
    a012:	movabs rax,0x7fffffffffffffff
    a01c:	mov    rsi,QWORD PTR [rbp-0x358]
    a023:	sub    rax,rbx
    a026:	mov    DWORD PTR [rbp-0x388],r9d
    a02d:	mov    r8,rax
    a030:	movabs rax,0x1ffffffffffe0000
    a03a:	lea    rdx,[rdi-0x20000]
    a041:	mov    QWORD PTR [rbp-0x340],r8
    a048:	cmp    rdx,rax
    a04b:	mov    eax,0x20000
    a050:	mov    rdx,r8
    a053:	cmova  rdi,rax
    a057:	call   cbe0 <__cxa_finalize@plt+0x8dc8>
    a05c:	mov    r9d,DWORD PTR [rbp-0x388]
    a063:	mov    rcx,rax
    a066:	mov    r8,QWORD PTR [rbp-0x340]
    a06d:	cmp    r9d,0x8000
    a074:	je     aae3 <__cxa_finalize@plt+0x6ccb>
    a07a:	mov    rax,QWORD PTR [rbp-0x358]
    a081:	xor    edx,edx
    a083:	lea    rsi,[rcx+rax*1-0x1]
    a088:	mov    rax,rsi
    a08b:	div    rcx
    a08e:	sub    rsi,rdx
    a091:	mov    QWORD PTR [rbp-0x358],rsi
    a098:	je     a87d <__cxa_finalize@plt+0x6a65>
    a09e:	cmp    rsi,r8
    a0a1:	ja     a87d <__cxa_finalize@plt+0x6a65>
    a0a7:	mov    rax,QWORD PTR [rbp-0x358]
    a0ae:	lea    rdi,[rbx+rax*1]
    a0b2:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    a0b7:	lea    rcx,[rax+rbx*1-0x1]
    a0bc:	xor    edx,edx
    a0be:	mov    QWORD PTR [rbp-0x340],rax
    a0c5:	mov    rax,rcx
    a0c8:	div    rbx
    a0cb:	sub    rcx,rdx
    a0ce:	cmp    DWORD PTR [rbp-0x370],0x0
    a0d5:	mov    QWORD PTR [rbp-0x3c0],rcx
    a0dc:	je     a7bd <__cxa_finalize@plt+0x69a5>
    a0e2:	mov    BYTE PTR [rbp-0x336],0x0
    a0e9:	mov    DWORD PTR [rbp-0x3a8],0x1
    a0f3:	mov    rax,QWORD PTR [rbp-0x130]
    a0fa:	mov    edi,DWORD PTR [rbp-0x320]
    a100:	xor    ebx,ebx
    a102:	mov    QWORD PTR [rbp-0x388],rax
    a109:	lea    rax,[rbp-0x2f0]
    a110:	mov    rsi,rax
    a113:	mov    QWORD PTR [rbp-0x370],rax
    a11a:	call   b220 <__cxa_finalize@plt+0x7408>
    a11f:	lea    rax,[rbp-0x2f9]
    a126:	xor    ecx,ecx
    a128:	mov    QWORD PTR [rbp-0x398],r12
    a12f:	mov    QWORD PTR [rbp-0x3b0],0x0
    a13a:	mov    QWORD PTR [rbp-0x390],r13
    a141:	mov    r12,rcx
    a144:	mov    QWORD PTR [rbp-0x3c8],rax
    a14b:	lea    rax,[rbp-0x2f8]
    a152:	mov    QWORD PTR [rbp-0x3d0],rax
    a159:	mov    rdi,QWORD PTR [rbp-0x370]
    a160:	call   b250 <__cxa_finalize@plt+0x7438>
    a165:	test   al,al
    a167:	je     ad6a <__cxa_finalize@plt+0x6f52>
    a16d:	cmp    QWORD PTR [rbp-0x2d8],0x0
    a175:	je     a6b3 <__cxa_finalize@plt+0x689b>
    a17b:	mov    rdx,r12
    a17e:	mov    rcx,rbx
    a181:	xor    r13d,r13d
    a184:	xor    eax,eax
    a186:	jmp    a242 <__cxa_finalize@plt+0x642a>
    a18b:	nop    DWORD PTR [rax+rax*1+0x0]
    a190:	cmp    DWORD PTR [rbp-0x3a8],0x3
    a197:	mov    r8d,0x0
    a19d:	cmove  r8,QWORD PTR [rbp-0x3a0]
    a1a5:	sub    rsp,0x8
    a1a9:	mov    rcx,QWORD PTR [rbp-0x358]
    a1b0:	mov    rdx,QWORD PTR [rbp-0x3c0]
    a1b7:	mov    esi,DWORD PTR [rbp-0x308]
    a1bd:	mov    edi,DWORD PTR [rbp-0x320]
    a1c3:	mov    r9d,0x1
    a1c9:	push   QWORD PTR [rbp-0x3c8]
    a1cf:	push   QWORD PTR [rbp-0x3d0]
    a1d5:	push   r12
    a1d7:	push   QWORD PTR [rbp-0x310]
    a1dd:	push   r15
    a1df:	call   6440 <__cxa_finalize@plt+0x2628>
    a1e4:	add    rsp,0x30
    a1e8:	test   al,al
    a1ea:	je     a2ec <__cxa_finalize@plt+0x64d4>
    a1f0:	mov    rax,QWORD PTR [rbp-0x2f8]
    a1f7:	lea    rcx,[rbx+rax*1]
    a1fb:	test   rax,rax
    a1fe:	mov    QWORD PTR [rbp-0x3b0],rcx
    a205:	je     a214 <__cxa_finalize@plt+0x63fc>
    a207:	movzx  eax,BYTE PTR [rbp-0x2f9]
    a20e:	mov    BYTE PTR [rbp-0x348],al
    a214:	mov    rcx,QWORD PTR [rbp-0x3b0]
    a21b:	cmp    QWORD PTR [rbp-0x388],rcx
    a222:	je     a6ac <__cxa_finalize@plt+0x6894>
    a228:	lea    eax,[r13+0x1]
    a22c:	cmp    rax,QWORD PTR [rbp-0x2d8]
    a233:	mov    rcx,rbx
    a236:	mov    rdx,r12
    a239:	mov    r13,rax
    a23c:	jae    a6b3 <__cxa_finalize@plt+0x689b>
    a242:	lea    rsi,[rax+rax*2]
    a246:	mov    rax,QWORD PTR [rbp-0x2c8]
    a24d:	lea    rax,[rax+rsi*8]
    a251:	mov    rsi,QWORD PTR [rbp-0x388]
    a258:	mov    rbx,QWORD PTR [rax]
    a25b:	mov    r12,QWORD PTR [rax+0x8]
    a25f:	lea    rax,[rbx+r12*1]
    a263:	cmp    rsi,rax
    a266:	jge    a275 <__cxa_finalize@plt+0x645d>
    a268:	cmp    rbx,rsi
    a26b:	cmovg  rbx,rsi
    a26f:	sub    rsi,rbx
    a272:	mov    r12,rsi
    a275:	mov    rax,rbx
    a278:	mov    BYTE PTR [rbp-0x348],0x0
    a27f:	sub    rax,rcx
    a282:	mov    rcx,rax
    a285:	sub    rcx,rdx
    a288:	je     a190 <__cxa_finalize@plt+0x6378>
    a28e:	mov    edi,DWORD PTR [rbp-0x320]
    a294:	xor    edx,edx
    a296:	mov    rsi,rbx
    a299:	mov    QWORD PTR [rbp-0x3b0],rcx
    a2a0:	call   3810 <lseek@plt>
    a2a5:	test   rax,rax
    a2a8:	mov    rcx,QWORD PTR [rbp-0x3b0]
    a2af:	js     ad3b <__cxa_finalize@plt+0x6f23>
    a2b5:	mov    eax,DWORD PTR [rbp-0x3a8]
    a2bb:	cmp    eax,0x1
    a2be:	je     a37b <__cxa_finalize@plt+0x6563>
    a2c4:	mov    rsi,QWORD PTR [rbp-0x310]
    a2cb:	mov    edi,DWORD PTR [rbp-0x308]
    a2d1:	xor    edx,edx
    a2d3:	cmp    eax,0x3
    a2d6:	sete   dl
    a2d9:	call   6380 <__cxa_finalize@plt+0x2568>
    a2de:	test   al,al
    a2e0:	mov    BYTE PTR [rbp-0x348],al
    a2e6:	jne    a190 <__cxa_finalize@plt+0x6378>
    a2ec:	mov    r13,QWORD PTR [rbp-0x390]
    a2f3:	mov    r12,QWORD PTR [rbp-0x398]
    a2fa:	mov    rdi,QWORD PTR [rbp-0x2c8]
    a301:	call   3e10 <free@plt>
    a306:	xor    r9d,r9d
    a309:	mov    edi,DWORD PTR [rbp-0x308]
    a30f:	mov    BYTE PTR [rbp-0x348],r9b
    a316:	call   38b0 <close@plt>
    a31b:	test   eax,eax
    a31d:	movzx  r9d,BYTE PTR [rbp-0x348]
    a325:	jns    87e4 <__cxa_finalize@plt+0x49cc>
    a32b:	mov    rsi,QWORD PTR [rbp-0x310]
    a332:	mov    edi,0x4
    a337:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a33c:	lea    rsi,[rip+0x11678]        # 1b9bb <_IO_stdin_used@@Base+0x201b>
    a343:	mov    edx,0x5
    a348:	xor    edi,edi
    a34a:	mov    rbx,rax
    a34d:	call   3700 <dcgettext@plt>
    a352:	mov    QWORD PTR [rbp-0x308],rax
    a359:	call   3540 <__errno_location@plt>
    a35e:	mov    rdx,QWORD PTR [rbp-0x308]
    a365:	mov    esi,DWORD PTR [rax]
    a367:	mov    rcx,rbx
    a36a:	xor    edi,edi
    a36c:	xor    eax,eax
    a36e:	call   3c20 <error@plt>
    a373:	xor    r9d,r9d
    a376:	jmp    87e4 <__cxa_finalize@plt+0x49cc>
    a37b:	mov    edi,DWORD PTR [rbp-0x308]
    a381:	mov    rsi,rcx
    a384:	call   5c60 <__cxa_finalize@plt+0x1e48>
    a389:	test   al,al
    a38b:	je     ac9a <__cxa_finalize@plt+0x6e82>
    a391:	xor    r8d,r8d
    a394:	jmp    a1a5 <__cxa_finalize@plt+0x638d>
    a399:	mov    QWORD PTR [rbp-0x340],0x0
    a3a4:	cmp    BYTE PTR [r12+0x1f],0x0
    a3aa:	jne    a5fa <__cxa_finalize@plt+0x67e2>
    a3b0:	cmp    BYTE PTR [r12+0x1d],0x0
    a3b6:	je     a416 <__cxa_finalize@plt+0x65fe>
    a3b8:	mov    eax,DWORD PTR [rbp-0xb4]
    a3be:	cmp    DWORD PTR [rbp-0x264],eax
    a3c4:	jne    a3d4 <__cxa_finalize@plt+0x65bc>
    a3c6:	mov    eax,DWORD PTR [rbp-0xb0]
    a3cc:	cmp    DWORD PTR [rbp-0x260],eax
    a3d2:	je     a416 <__cxa_finalize@plt+0x65fe>
    a3d4:	movzx  r8d,BYTE PTR [rbp-0x328]
    a3dc:	mov    r9,QWORD PTR [rbp-0x378]
    a3e3:	mov    rdi,r12
    a3e6:	mov    rcx,QWORD PTR [rbp-0x330]
    a3ed:	mov    edx,DWORD PTR [rbp-0x308]
    a3f3:	mov    rsi,QWORD PTR [rbp-0x310]
    a3fa:	call   6ca0 <__cxa_finalize@plt+0x2e88>
    a3ff:	cmp    eax,0xffffffff
    a402:	je     a306 <__cxa_finalize@plt+0x64ee>
    a408:	test   eax,eax
    a40a:	jne    a416 <__cxa_finalize@plt+0x65fe>
    a40c:	and    DWORD PTR [rbp-0x350],0xfffff1ff
    a416:	cmp    BYTE PTR [r12+0x27],0x0
    a41c:	je     a58a <__cxa_finalize@plt+0x6772>
    a422:	test   BYTE PTR [rbp-0xb8],0x80
    a429:	je     aa25 <__cxa_finalize@plt+0x6c0d>
    a42f:	mov    ecx,DWORD PTR [rbp-0x308]
    a435:	mov    rdx,QWORD PTR [rbp-0x310]
    a43c:	mov    r8,r12
    a43f:	mov    esi,DWORD PTR [rbp-0x320]
    a445:	mov    rdi,r15
    a448:	call   5d70 <__cxa_finalize@plt+0x1f58>
    a44d:	test   al,al
    a44f:	mov    ebx,eax
    a451:	jne    a58a <__cxa_finalize@plt+0x6772>
    a457:	movzx  r9d,BYTE PTR [r12+0x28]
    a45d:	xor    r9d,0x1
    a461:	test   bl,bl
    a463:	je     a494 <__cxa_finalize@plt+0x667c>
    a465:	mov    edx,DWORD PTR [rbp-0x380]
    a46b:	mov    rsi,QWORD PTR [rbp-0x310]
    a472:	mov    edi,DWORD PTR [rbp-0x308]
    a478:	mov    BYTE PTR [rbp-0x348],r9b
    a47f:	not    edx
    a481:	and    edx,DWORD PTR [rbp-0x3b4]
    a487:	call   5d50 <__cxa_finalize@plt+0x1f38>
    a48c:	movzx  r9d,BYTE PTR [rbp-0x348]
    a494:	movabs rax,0xff0000000000ff
    a49e:	test   QWORD PTR [r12+0x18],rax
    a4a3:	jne    a990 <__cxa_finalize@plt+0x6b78>
    a4a9:	movzx  ecx,BYTE PTR [r12+0x2b]
    a4af:	test   cl,cl
    a4b1:	jne    ae62 <__cxa_finalize@plt+0x704a>
    a4b7:	movzx  ebx,BYTE PTR [r12+0x20]
    a4bd:	test   bl,bl
    a4bf:	jne    aa7c <__cxa_finalize@plt+0x6c64>
    a4c5:	cmp    DWORD PTR [rbp-0x380],0x0
    a4cc:	je     a309 <__cxa_finalize@plt+0x64f1>
    a4d2:	mov    BYTE PTR [rbp-0x348],r9b
    a4d9:	call   6e90 <__cxa_finalize@plt+0x3078>
    a4de:	not    eax
    a4e0:	test   DWORD PTR [rbp-0x380],eax
    a4e6:	movzx  r9d,BYTE PTR [rbp-0x348]
    a4ee:	je     a309 <__cxa_finalize@plt+0x64f1>
    a4f4:	mov    edx,DWORD PTR [rbp-0x3b4]
    a4fa:	mov    rsi,QWORD PTR [rbp-0x310]
    a501:	mov    edi,DWORD PTR [rbp-0x308]
    a507:	call   5d50 <__cxa_finalize@plt+0x1f38>
    a50c:	test   eax,eax
    a50e:	movzx  r9d,BYTE PTR [rbp-0x348]
    a516:	je     a309 <__cxa_finalize@plt+0x64f1>
    a51c:	mov    rsi,QWORD PTR [rbp-0x310]
    a523:	mov    edi,0x4
    a528:	mov    BYTE PTR [rbp-0x358],r9b
    a52f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a534:	lea    rsi,[rip+0x11462]        # 1b99d <_IO_stdin_used@@Base+0x1ffd>
    a53b:	xor    edi,edi
    a53d:	mov    edx,0x5
    a542:	mov    QWORD PTR [rbp-0x350],rax
    a549:	call   3700 <dcgettext@plt>
    a54e:	mov    QWORD PTR [rbp-0x348],rax
    a555:	call   3540 <__errno_location@plt>
    a55a:	mov    rcx,QWORD PTR [rbp-0x350]
    a561:	mov    esi,DWORD PTR [rax]
    a563:	xor    edi,edi
    a565:	mov    rdx,QWORD PTR [rbp-0x348]
    a56c:	xor    eax,eax
    a56e:	call   3c20 <error@plt>
    a573:	cmp    BYTE PTR [r12+0x24],0x0
    a579:	movzx  r9d,BYTE PTR [rbp-0x358]
    a581:	cmovne r9d,ebx
    a585:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    a58a:	mov    r9d,0x1
    a590:	jmp    a494 <__cxa_finalize@plt+0x667c>
    a595:	lea    rdx,[rbp-0xd0]
    a59c:	mov    rsi,r15
    a59f:	mov    edi,0x1
    a5a4:	mov    BYTE PTR [rbp-0x368],r8b
    a5ab:	call   3a90 <__xstat@plt>
    a5b0:	test   eax,eax
    a5b2:	movzx  r8d,BYTE PTR [rbp-0x368]
    a5ba:	je     8499 <__cxa_finalize@plt+0x4681>
    a5c0:	jmp    79e8 <__cxa_finalize@plt+0x3bd0>
    a5c5:	cmp    DWORD PTR [rbp-0x308],0x0
    a5cc:	js     9a96 <__cxa_finalize@plt+0x5c7e>
    a5d2:	mov    BYTE PTR [rbp-0x328],0x1
    a5d9:	jmp    9f1b <__cxa_finalize@plt+0x6103>
    a5de:	movzx  eax,BYTE PTR [rbp-0x340]
    a5e5:	xor    r9d,r9d
    a5e8:	mov    BYTE PTR [rbp-0x335],0x0
    a5ef:	mov    BYTE PTR [rbp-0x308],al
    a5f5:	jmp    7360 <__cxa_finalize@plt+0x3548>
    a5fa:	mov    rax,QWORD PTR [rbp-0x238]
    a601:	mov    rsi,QWORD PTR [rbp-0x310]
    a608:	lea    rdx,[rbp-0x2a0]
    a60f:	mov    edi,DWORD PTR [rbp-0x308]
    a615:	mov    QWORD PTR [rbp-0x2a0],rax
    a61c:	mov    rax,QWORD PTR [rbp-0x230]
    a623:	mov    QWORD PTR [rbp-0x298],rax
    a62a:	mov    rax,QWORD PTR [rbp-0x228]
    a631:	mov    QWORD PTR [rbp-0x290],rax
    a638:	mov    rax,QWORD PTR [rbp-0x220]
    a63f:	mov    QWORD PTR [rbp-0x288],rax
    a646:	call   122d0 <__cxa_finalize@plt+0xe4b8>
    a64b:	test   eax,eax
    a64d:	je     a3b0 <__cxa_finalize@plt+0x6598>
    a653:	mov    rsi,QWORD PTR [rbp-0x310]
    a65a:	mov    edi,0x4
    a65f:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a664:	lea    rsi,[rip+0x1131a]        # 1b985 <_IO_stdin_used@@Base+0x1fe5>
    a66b:	xor    edi,edi
    a66d:	mov    edx,0x5
    a672:	mov    rbx,rax
    a675:	call   3700 <dcgettext@plt>
    a67a:	mov    QWORD PTR [rbp-0x348],rax
    a681:	call   3540 <__errno_location@plt>
    a686:	mov    rdx,QWORD PTR [rbp-0x348]
    a68d:	mov    esi,DWORD PTR [rax]
    a68f:	xor    edi,edi
    a691:	xor    eax,eax
    a693:	mov    rcx,rbx
    a696:	call   3c20 <error@plt>
    a69b:	cmp    BYTE PTR [r12+0x24],0x0
    a6a1:	je     a3b0 <__cxa_finalize@plt+0x6598>
    a6a7:	jmp    a306 <__cxa_finalize@plt+0x64ee>
    a6ac:	mov    BYTE PTR [rbp-0x2cf],0x1
    a6b3:	mov    rdi,QWORD PTR [rbp-0x2c8]
    a6ba:	call   3e10 <free@plt>
    a6bf:	cmp    BYTE PTR [rbp-0x2cf],0x0
    a6c6:	mov    QWORD PTR [rbp-0x2c8],0x0
    a6d1:	mov    QWORD PTR [rbp-0x2d8],0x0
    a6dc:	je     a159 <__cxa_finalize@plt+0x6341>
    a6e2:	mov    r13,QWORD PTR [rbp-0x390]
    a6e9:	mov    r12,QWORD PTR [rbp-0x398]
    a6f0:	mov    rbx,QWORD PTR [rbp-0x3b0]
    a6f7:	cmp    QWORD PTR [rbp-0x388],rbx
    a6fe:	setg   bl
    a701:	jg     a710 <__cxa_finalize@plt+0x68f8>
    a703:	cmp    BYTE PTR [rbp-0x348],0x0
    a70a:	je     a3a4 <__cxa_finalize@plt+0x658c>
    a710:	cmp    DWORD PTR [rbp-0x3a8],0x1
    a717:	mov    rsi,QWORD PTR [rbp-0x388]
    a71e:	je     aac4 <__cxa_finalize@plt+0x6cac>
    a724:	mov    edi,DWORD PTR [rbp-0x308]
    a72a:	call   3800 <ftruncate@plt>
    a72f:	test   eax,eax
    a731:	jne    a858 <__cxa_finalize@plt+0x6a40>
    a737:	cmp    DWORD PTR [rbp-0x3a8],0x3
    a73e:	jne    a3a4 <__cxa_finalize@plt+0x658c>
    a744:	test   bl,bl
    a746:	je     a3a4 <__cxa_finalize@plt+0x658c>
    a74c:	mov    rdx,QWORD PTR [rbp-0x388]
    a753:	mov    rsi,QWORD PTR [rbp-0x3b0]
    a75a:	mov    edi,DWORD PTR [rbp-0x308]
    a760:	sub    rdx,rsi
    a763:	call   5d10 <__cxa_finalize@plt+0x1ef8>
    a768:	test   eax,eax
    a76a:	jns    a3a4 <__cxa_finalize@plt+0x658c>
    a770:	mov    rsi,QWORD PTR [rbp-0x310]
    a777:	mov    edi,0x4
    a77c:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a781:	lea    rsi,[rip+0x11030]        # 1b7b8 <_IO_stdin_used@@Base+0x1e18>
    a788:	mov    rbx,rax
    a78b:	mov    edx,0x5
    a790:	xor    edi,edi
    a792:	call   3700 <dcgettext@plt>
    a797:	mov    QWORD PTR [rbp-0x348],rax
    a79e:	call   3540 <__errno_location@plt>
    a7a3:	mov    rdx,QWORD PTR [rbp-0x348]
    a7aa:	mov    esi,DWORD PTR [rax]
    a7ac:	mov    rcx,rbx
    a7af:	xor    edi,edi
    a7b1:	xor    eax,eax
    a7b3:	call   3c20 <error@plt>
    a7b8:	jmp    a306 <__cxa_finalize@plt+0x64ee>
    a7bd:	xor    r9d,r9d
    a7c0:	cmp    DWORD PTR [r12+0xc],0x3
    a7c6:	lea    rax,[rbp-0x2f0]
    a7cd:	mov    QWORD PTR [rbp-0x3a0],0x0
    a7d8:	mov    QWORD PTR [rbp-0x370],rax
    a7df:	sete   r9b
    a7e3:	lea    rax,[rbp-0x2f8]
    a7ea:	sub    rsp,0x8
    a7ee:	mov    r8,QWORD PTR [rbp-0x3a0]
    a7f5:	mov    rcx,QWORD PTR [rbp-0x358]
    a7fc:	mov    rdx,QWORD PTR [rbp-0x3c0]
    a803:	mov    esi,DWORD PTR [rbp-0x308]
    a809:	mov    edi,DWORD PTR [rbp-0x320]
    a80f:	push   rax
    a810:	push   QWORD PTR [rbp-0x370]
    a816:	push   0xffffffffffffffff
    a818:	push   QWORD PTR [rbp-0x310]
    a81e:	push   r15
    a820:	call   6440 <__cxa_finalize@plt+0x2628>
    a825:	add    rsp,0x30
    a829:	test   al,al
    a82b:	je     a306 <__cxa_finalize@plt+0x64ee>
    a831:	cmp    BYTE PTR [rbp-0x2f8],0x0
    a838:	je     a3a4 <__cxa_finalize@plt+0x658c>
    a83e:	mov    rsi,QWORD PTR [rbp-0x2f0]
    a845:	mov    edi,DWORD PTR [rbp-0x308]
    a84b:	call   3800 <ftruncate@plt>
    a850:	test   eax,eax
    a852:	jns    a3a4 <__cxa_finalize@plt+0x658c>
    a858:	mov    rsi,QWORD PTR [rbp-0x310]
    a85f:	mov    edi,0x4
    a864:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a869:	mov    edx,0x5
    a86e:	mov    rbx,rax
    a871:	lea    rsi,[rip+0x110f9]        # 1b971 <_IO_stdin_used@@Base+0x1fd1>
    a878:	jmp    a790 <__cxa_finalize@plt+0x6978>
    a87d:	mov    QWORD PTR [rbp-0x358],rcx
    a884:	jmp    a0a7 <__cxa_finalize@plt+0x628f>
    a889:	mov    rsi,QWORD PTR [rbp-0x310]
    a890:	lea    rdx,[rbp-0x1f0]
    a897:	mov    edi,0x1
    a89c:	call   3740 <__lxstat@plt>
    a8a1:	test   eax,eax
    a8a3:	je     990f <__cxa_finalize@plt+0x5af7>
    a8a9:	mov    rsi,QWORD PTR [rbp-0x310]
    a8b0:	jmp    75b7 <__cxa_finalize@plt+0x379f>
    a8b5:	mov    eax,DWORD PTR [rbp-0x1d8]
    a8bb:	and    eax,0xf000
    a8c0:	cmp    eax,0xa000
    a8c5:	jne    9d69 <__cxa_finalize@plt+0x5f51>
    a8cb:	movzx  eax,BYTE PTR [rbp-0x328]
    a8d2:	or     rcx,0xffffffffffffffff
    a8d6:	mov    rdi,rbx
    a8d9:	mov    rsi,QWORD PTR [rbp-0x1c0]
    a8e0:	repnz scas al,BYTE PTR es:[rdi]
    a8e2:	not    rcx
    a8e5:	lea    rax,[rcx-0x1]
    a8e9:	cmp    rsi,rax
    a8ec:	jne    9d69 <__cxa_finalize@plt+0x5f51>
    a8f2:	mov    rdi,QWORD PTR [rbp-0x310]
    a8f9:	call   c0b0 <__cxa_finalize@plt+0x8298>
    a8fe:	test   rax,rax
    a901:	je     9d69 <__cxa_finalize@plt+0x5f51>
    a907:	mov    rdi,rax
    a90a:	mov    rsi,rbx
    a90d:	mov    QWORD PTR [rbp-0x320],rax
    a914:	call   39c0 <strcmp@plt>
    a919:	mov    rdx,QWORD PTR [rbp-0x320]
    a920:	test   eax,eax
    a922:	mov    rdi,rdx
    a925:	jne    aa1b <__cxa_finalize@plt+0x6c03>
    a92b:	call   3e10 <free@plt>
    a930:	jmp    9573 <__cxa_finalize@plt+0x575b>
    a935:	mov    rsi,QWORD PTR [rbp-0x310]
    a93c:	mov    edi,0x4
    a941:	call   10a80 <__cxa_finalize@plt+0xcc68>
    a946:	lea    rsi,[rip+0x10fca]        # 1b917 <_IO_stdin_used@@Base+0x1f77>
    a94d:	mov    edx,0x5
    a952:	xor    edi,edi
    a954:	mov    rbx,rax
    a957:	call   3700 <dcgettext@plt>
    a95c:	mov    QWORD PTR [rbp-0x340],rax
    a963:	call   3540 <__errno_location@plt>
    a968:	mov    rdx,QWORD PTR [rbp-0x340]
    a96f:	mov    esi,DWORD PTR [rax]
    a971:	mov    rcx,rbx
    a974:	xor    edi,edi
    a976:	xor    eax,eax
    a978:	call   3c20 <error@plt>
    a97d:	xor    r9d,r9d
    a980:	mov    QWORD PTR [rbp-0x340],0x0
    a98b:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    a990:	mov    r8d,DWORD PTR [rbp-0x350]
    a997:	mov    ecx,DWORD PTR [rbp-0x308]
    a99d:	mov    rdi,r15
    a9a0:	mov    rdx,QWORD PTR [rbp-0x310]
    a9a7:	mov    esi,DWORD PTR [rbp-0x320]
    a9ad:	mov    BYTE PTR [rbp-0x348],r9b
    a9b4:	call   bfd0 <__cxa_finalize@plt+0x81b8>
    a9b9:	test   eax,eax
    a9bb:	movzx  r9d,BYTE PTR [rbp-0x348]
    a9c3:	je     a309 <__cxa_finalize@plt+0x64f1>
    a9c9:	cmp    BYTE PTR [r12+0x24],0x0
    a9cf:	mov    eax,0x0
    a9d4:	cmovne r9d,eax
    a9d8:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    a9dd:	movzx  esi,BYTE PTR [r12+0x25]
    a9e3:	mov    rdi,QWORD PTR [rbp-0x310]
    a9ea:	xor    edx,edx
    a9ec:	mov    rcx,r12
    a9ef:	call   6b10 <__cxa_finalize@plt+0x2cf8>
    a9f4:	test   al,al
    a9f6:	mov    r9d,eax
    a9f9:	jne    9f11 <__cxa_finalize@plt+0x60f9>
    a9ff:	cmp    BYTE PTR [r12+0x26],0x0
    aa05:	mov    QWORD PTR [rbp-0x340],0x0
    aa10:	jne    a309 <__cxa_finalize@plt+0x64f1>
    aa16:	jmp    9f11 <__cxa_finalize@plt+0x60f9>
    aa1b:	call   3e10 <free@plt>
    aa20:	jmp    9d69 <__cxa_finalize@plt+0x5f51>
    aa25:	call   3850 <geteuid@plt>
    aa2a:	test   eax,eax
    aa2c:	je     a42f <__cxa_finalize@plt+0x6617>
    aa32:	mov    rsi,QWORD PTR [rbp-0x310]
    aa39:	mov    edi,DWORD PTR [rbp-0x308]
    aa3f:	mov    edx,0x180
    aa44:	call   5d50 <__cxa_finalize@plt+0x1f38>
    aa49:	mov    ecx,DWORD PTR [rbp-0x308]
    aa4f:	mov    rdx,QWORD PTR [rbp-0x310]
    aa56:	test   eax,eax
    aa58:	mov    esi,DWORD PTR [rbp-0x320]
    aa5e:	mov    r8,r12
    aa61:	mov    rdi,r15
    aa64:	sete   bl
    aa67:	call   5d70 <__cxa_finalize@plt+0x1f58>
    aa6c:	test   al,al
    aa6e:	mov    r9d,eax
    aa71:	jne    a461 <__cxa_finalize@plt+0x6649>
    aa77:	jmp    a457 <__cxa_finalize@plt+0x663f>
    aa7c:	mov    BYTE PTR [rbp-0x350],r9b
    aa83:	mov    BYTE PTR [rbp-0x348],cl
    aa89:	call   6e90 <__cxa_finalize@plt+0x3078>
    aa8e:	mov    esi,DWORD PTR [rbp-0x308]
    aa94:	not    eax
    aa96:	mov    rdi,QWORD PTR [rbp-0x310]
    aa9d:	mov    edx,eax
    aa9f:	and    edx,0x1b6
    aaa5:	call   c060 <__cxa_finalize@plt+0x8248>
    aaaa:	movzx  ecx,BYTE PTR [rbp-0x348]
    aab1:	movzx  r9d,BYTE PTR [rbp-0x350]
    aab9:	test   eax,eax
    aabb:	cmovne r9d,ecx
    aabf:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    aac4:	sub    rsi,QWORD PTR [rbp-0x3b0]
    aacb:	mov    edi,DWORD PTR [rbp-0x308]
    aad1:	call   5c60 <__cxa_finalize@plt+0x1e48>
    aad6:	test   al,al
    aad8:	jne    a3a4 <__cxa_finalize@plt+0x658c>
    aade:	jmp    a858 <__cxa_finalize@plt+0x6a40>
    aae3:	mov    rax,QWORD PTR [rbp-0x130]
    aaea:	cmp    QWORD PTR [rbp-0x358],rax
    aaf1:	jbe    a07a <__cxa_finalize@plt+0x6262>
    aaf7:	add    rax,0x1
    aafb:	mov    QWORD PTR [rbp-0x358],rax
    ab02:	jmp    a07a <__cxa_finalize@plt+0x6262>
    ab07:	mov    eax,DWORD PTR [r12+0xc]
    ab0c:	cmp    eax,0x3
    ab0f:	je     ab9a <__cxa_finalize@plt+0x6d82>
    ab15:	cmp    eax,0x2
    ab18:	jne    a00b <__cxa_finalize@plt+0x61f3>
    ab1e:	test   BYTE PTR [rbp-0x370],0x1
    ab25:	je     a00b <__cxa_finalize@plt+0x61f3>
    ab2b:	mov    rax,QWORD PTR [rbp-0x358]
    ab32:	lea    rdi,[rbx+rax*1]
    ab36:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    ab3b:	lea    rcx,[rax+rbx*1-0x1]
    ab40:	mov    QWORD PTR [rbp-0x340],rax
    ab47:	xor    edx,edx
    ab49:	mov    rax,rcx
    ab4c:	div    rbx
    ab4f:	sub    rcx,rdx
    ab52:	mov    QWORD PTR [rbp-0x3c0],rcx
    ab59:	mov    eax,DWORD PTR [r12+0xc]
    ab5e:	mov    DWORD PTR [rbp-0x3a8],eax
    ab64:	movzx  eax,BYTE PTR [rbp-0x348]
    ab6b:	mov    BYTE PTR [rbp-0x336],al
    ab71:	jmp    a0f3 <__cxa_finalize@plt+0x62db>
    ab76:	mov    rax,QWORD PTR [rbp-0x130]
    ab7d:	cqo    
    ab7f:	idiv   r8
    ab82:	cmp    QWORD PTR [rbp-0x120],rax
    ab89:	setl   al
    ab8c:	movzx  eax,al
    ab8f:	mov    DWORD PTR [rbp-0x370],eax
    ab95:	jmp    9ff5 <__cxa_finalize@plt+0x61dd>
    ab9a:	mov    rax,QWORD PTR [rbp-0x358]
    aba1:	lea    rdi,[rbx+rax*1]
    aba5:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    abaa:	lea    rcx,[rax+rbx*1-0x1]
    abaf:	xor    edx,edx
    abb1:	mov    QWORD PTR [rbp-0x340],rax
    abb8:	mov    rax,rcx
    abbb:	div    rbx
    abbe:	sub    rcx,rdx
    abc1:	cmp    DWORD PTR [rbp-0x370],0x0
    abc8:	mov    QWORD PTR [rbp-0x3c0],rcx
    abcf:	jne    ab59 <__cxa_finalize@plt+0x6d41>
    abd1:	xor    r9d,r9d
    abd4:	cmp    DWORD PTR [r12+0xc],0x3
    abda:	lea    rax,[rbp-0x2f0]
    abe1:	mov    QWORD PTR [rbp-0x370],rax
    abe8:	sete   r9b
    abec:	jmp    a7e3 <__cxa_finalize@plt+0x69cb>
    abf1:	mov    edx,DWORD PTR [rbp-0x320]
    abf7:	mov    edi,DWORD PTR [rbp-0x308]
    abfd:	xor    eax,eax
    abff:	mov    esi,0x40049409
    ac04:	call   3880 <ioctl@plt>
    ac09:	test   eax,eax
    ac0b:	je     a399 <__cxa_finalize@plt+0x6581>
    ac11:	cmp    DWORD PTR [r12+0x34],0x2
    ac17:	jne    9f63 <__cxa_finalize@plt+0x614b>
    ac1d:	mov    rdx,r15
    ac20:	mov    esi,0x4
    ac25:	mov    edi,0x1
    ac2a:	call   10960 <__cxa_finalize@plt+0xcb48>
    ac2f:	mov    rdx,QWORD PTR [rbp-0x310]
    ac36:	mov    esi,0x4
    ac3b:	xor    edi,edi
    ac3d:	mov    rbx,rax
    ac40:	call   10960 <__cxa_finalize@plt+0xcb48>
    ac45:	lea    rsi,[rip+0x10cf9]        # 1b945 <_IO_stdin_used@@Base+0x1fa5>
    ac4c:	mov    edx,0x5
    ac51:	xor    edi,edi
    ac53:	mov    QWORD PTR [rbp-0x348],rax
    ac5a:	call   3700 <dcgettext@plt>
    ac5f:	mov    QWORD PTR [rbp-0x340],rax
    ac66:	call   3540 <__errno_location@plt>
    ac6b:	mov    rcx,QWORD PTR [rbp-0x348]
    ac72:	mov    esi,DWORD PTR [rax]
    ac74:	mov    r8,rbx
    ac77:	mov    rdx,QWORD PTR [rbp-0x340]
    ac7e:	xor    edi,edi
    ac80:	xor    eax,eax
    ac82:	call   3c20 <error@plt>
    ac87:	xor    r9d,r9d
    ac8a:	mov    QWORD PTR [rbp-0x340],0x0
    ac95:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    ac9a:	mov    rdx,QWORD PTR [rbp-0x310]
    aca1:	mov    esi,0x3
    aca6:	xor    edi,edi
    aca8:	mov    r13,QWORD PTR [rbp-0x390]
    acaf:	mov    r12,QWORD PTR [rbp-0x398]
    acb6:	call   10b80 <__cxa_finalize@plt+0xcd68>
    acbb:	lea    rsi,[rip+0x10c9e]        # 1b960 <_IO_stdin_used@@Base+0x1fc0>
    acc2:	mov    rbx,rax
    acc5:	mov    edx,0x5
    acca:	xor    edi,edi
    accc:	call   3700 <dcgettext@plt>
    acd1:	mov    QWORD PTR [rbp-0x348],rax
    acd8:	call   3540 <__errno_location@plt>
    acdd:	mov    rdx,QWORD PTR [rbp-0x348]
    ace4:	mov    esi,DWORD PTR [rax]
    ace6:	mov    rcx,rbx
    ace9:	xor    edi,edi
    aceb:	xor    eax,eax
    aced:	call   3c20 <error@plt>
    acf2:	jmp    a2fa <__cxa_finalize@plt+0x64e2>
    acf7:	lea    rsi,[rip+0xf492]        # 1a190 <_IO_stdin_used@@Base+0x7f0>
    acfe:	xor    edi,edi
    ad00:	mov    edx,0x5
    ad05:	call   3700 <dcgettext@plt>
    ad0a:	mov    rbx,rax
    ad0d:	call   3540 <__errno_location@plt>
    ad12:	mov    rcx,QWORD PTR [rbp-0x310]
    ad19:	mov    esi,DWORD PTR [rax]
    ad1b:	xor    edi,edi
    ad1d:	xor    eax,eax
    ad1f:	mov    rdx,rbx
    ad22:	call   3c20 <error@plt>
    ad27:	movzx  r9d,BYTE PTR [r12+0x24]
    ad2d:	test   r9b,r9b
    ad30:	jne    790c <__cxa_finalize@plt+0x3af4>
    ad36:	jmp    7cac <__cxa_finalize@plt+0x3e94>
    ad3b:	mov    rsi,r15
    ad3e:	mov    edi,0x4
    ad43:	mov    r13,QWORD PTR [rbp-0x390]
    ad4a:	mov    r12,QWORD PTR [rbp-0x398]
    ad51:	call   10a80 <__cxa_finalize@plt+0xcc68>
    ad56:	mov    edx,0x5
    ad5b:	mov    rbx,rax
    ad5e:	lea    rsi,[rip+0x10a43]        # 1b7a8 <_IO_stdin_used@@Base+0x1e08>
    ad65:	jmp    acca <__cxa_finalize@plt+0x6eb2>
    ad6a:	cmp    BYTE PTR [rbp-0x2cf],0x0
    ad71:	mov    r13,QWORD PTR [rbp-0x390]
    ad78:	mov    r12,QWORD PTR [rbp-0x398]
    ad7f:	jne    a6f0 <__cxa_finalize@plt+0x68d8>
    ad85:	cmp    BYTE PTR [rbp-0x2d0],0x0
    ad8c:	je     ae98 <__cxa_finalize@plt+0x7080>
    ad92:	xor    r9d,r9d
    ad95:	cmp    DWORD PTR [r12+0xc],0x3
    ad9b:	mov    eax,0x0
    ada0:	sete   r9b
    ada4:	cmp    BYTE PTR [rbp-0x336],0x0
    adab:	cmovne rax,QWORD PTR [rbp-0x3a0]
    adb3:	mov    QWORD PTR [rbp-0x3a0],rax
    adba:	jmp    a7e3 <__cxa_finalize@plt+0x69cb>
    adbf:	mov    rsi,QWORD PTR [rbp-0x310]
    adc6:	mov    edi,0x4
    adcb:	call   10a80 <__cxa_finalize@plt+0xcc68>
    add0:	lea    rsi,[rip+0x10aac]        # 1b883 <_IO_stdin_used@@Base+0x1ee3>
    add7:	mov    edx,0x5
    addc:	xor    edi,edi
    adde:	mov    QWORD PTR [rbp-0x308],rax
    ade5:	call   3700 <dcgettext@plt>
    adea:	mov    rcx,QWORD PTR [rbp-0x308]
    adf1:	mov    rdx,rax
    adf4:	mov    esi,DWORD PTR [rbx]
    adf6:	jmp    87cd <__cxa_finalize@plt+0x49b5>
    adfb:	mov    ecx,0x1
    ae00:	mov    r9d,0x1
    ae06:	jmp    8365 <__cxa_finalize@plt+0x454d>
    ae0b:	mov    rsi,QWORD PTR [rbp-0x310]
    ae12:	mov    edi,0x4
    ae17:	mov    BYTE PTR [rbp-0x308],r9b
    ae1e:	call   10a80 <__cxa_finalize@plt+0xcc68>
    ae23:	lea    rsi,[rip+0x110ee]        # 1bf18 <_IO_stdin_used@@Base+0x2578>
    ae2a:	mov    rbx,rax
    ae2d:	mov    edx,0x5
    ae32:	xor    edi,edi
    ae34:	call   3700 <dcgettext@plt>
    ae39:	mov    rcx,rbx
    ae3c:	mov    rdx,rax
    ae3f:	xor    esi,esi
    ae41:	xor    edi,edi
    ae43:	xor    eax,eax
    ae45:	call   3c20 <error@plt>
    ae4a:	mov    QWORD PTR [rbp-0x340],0x0
    ae55:	movzx  r9d,BYTE PTR [rbp-0x308]
    ae5d:	jmp    87e4 <__cxa_finalize@plt+0x49cc>
    ae62:	mov    edx,DWORD PTR [r12+0x10]
    ae67:	mov    esi,DWORD PTR [rbp-0x308]
    ae6d:	mov    rdi,QWORD PTR [rbp-0x310]
    ae74:	mov    BYTE PTR [rbp-0x348],r9b
    ae7b:	call   c060 <__cxa_finalize@plt+0x8248>
    ae80:	movzx  r9d,BYTE PTR [rbp-0x348]
    ae88:	test   eax,eax
    ae8a:	mov    eax,0x0
    ae8f:	cmovne r9d,eax
    ae93:	jmp    a309 <__cxa_finalize@plt+0x64f1>
    ae98:	mov    rdx,r15
    ae9b:	mov    esi,0x3
    aea0:	xor    edi,edi
    aea2:	call   10b80 <__cxa_finalize@plt+0xcd68>
    aea7:	mov    edx,0x5
    aeac:	mov    rbx,rax
    aeaf:	lea    rsi,[rip+0x1108a]        # 1bf40 <_IO_stdin_used@@Base+0x25a0>
    aeb6:	jmp    a790 <__cxa_finalize@plt+0x6978>
    aebb:	nop    DWORD PTR [rax+rax*1+0x0]
    aec0:	sub    rsp,0x18
    aec4:	mov    rax,QWORD PTR fs:0x28
    aecd:	mov    QWORD PTR [rsp+0x8],rax
    aed2:	xor    eax,eax
    aed4:	test   rcx,rcx
    aed7:	je     b006 <__cxa_finalize@plt+0x71ee>
    aedd:	cmp    DWORD PTR [rcx],0x3
    aee0:	ja     afe7 <__cxa_finalize@plt+0x71cf>
    aee6:	mov    eax,DWORD PTR [rcx+0xc]
    aee9:	lea    r10d,[rax-0x1]
    aeed:	cmp    r10d,0x2
    aef1:	ja     afc8 <__cxa_finalize@plt+0x71b0>
    aef7:	mov    r10d,DWORD PTR [rcx+0x34]
    aefb:	cmp    r10d,0x2
    aeff:	ja     afa9 <__cxa_finalize@plt+0x7191>
    af05:	cmp    BYTE PTR [rcx+0x17],0x0
    af09:	jne    af60 <__cxa_finalize@plt+0x7148>
    af0b:	cmp    eax,0x2
    af0e:	je     af16 <__cxa_finalize@plt+0x70fe>
    af10:	cmp    r10d,0x2
    af14:	je     af85 <__cxa_finalize@plt+0x716d>
    af16:	mov    BYTE PTR [rsp+0x7],0x0
    af1b:	push   r9
    af1d:	movzx  edx,dl
    af20:	push   r8
    af22:	mov    r9,rcx
    af25:	xor    r8d,r8d
    af28:	xor    ecx,ecx
    af2a:	mov    QWORD PTR [rip+0x217637],rsi        # 222568 <stderr@@GLIBC_2.2.5+0x488>
    af31:	mov    QWORD PTR [rip+0x217638],rdi        # 222570 <stderr@@GLIBC_2.2.5+0x490>
    af38:	lea    rax,[rsp+0x17]
    af3d:	push   rax
    af3e:	push   0x1
    af40:	call   6ec0 <__cxa_finalize@plt+0x30a8>
    af45:	add    rsp,0x20
    af49:	mov    rsi,QWORD PTR [rsp+0x8]
    af4e:	xor    rsi,QWORD PTR fs:0x28
    af57:	jne    afa4 <__cxa_finalize@plt+0x718c>
    af59:	add    rsp,0x18
    af5d:	ret    
    af5e:	xchg   ax,ax
    af60:	cmp    BYTE PTR [rcx+0x2c],0x0
    af64:	je     af0b <__cxa_finalize@plt+0x70f3>
    af66:	lea    rcx,[rip+0x1116b]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    af6d:	lea    rsi,[rip+0x10aed]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    af74:	lea    rdi,[rip+0x110e5]        # 1c060 <_IO_stdin_used@@Base+0x26c0>
    af7b:	mov    edx,0xb64
    af80:	call   3830 <__assert_fail@plt>
    af85:	lea    rcx,[rip+0x1114c]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    af8c:	lea    rsi,[rip+0x10ace]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    af93:	lea    rdi,[rip+0x110ee]        # 1c088 <_IO_stdin_used@@Base+0x26e8>
    af9a:	mov    edx,0xb67
    af9f:	call   3830 <__assert_fail@plt>
    afa4:	call   3760 <__stack_chk_fail@plt>
    afa9:	lea    rcx,[rip+0x11128]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    afb0:	lea    rsi,[rip+0x10aaa]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    afb7:	lea    rdi,[rip+0x1107a]        # 1c038 <_IO_stdin_used@@Base+0x2698>
    afbe:	mov    edx,0xb63
    afc3:	call   3830 <__assert_fail@plt>
    afc8:	lea    rcx,[rip+0x11109]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    afcf:	lea    rsi,[rip+0x10a8b]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    afd6:	lea    rdi,[rip+0x11033]        # 1c010 <_IO_stdin_used@@Base+0x2670>
    afdd:	mov    edx,0xb62
    afe2:	call   3830 <__assert_fail@plt>
    afe7:	lea    rcx,[rip+0x110ea]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    afee:	lea    rsi,[rip+0x10a6c]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    aff5:	lea    rdi,[rip+0x10fec]        # 1bfe8 <_IO_stdin_used@@Base+0x2648>
    affc:	mov    edx,0xb61
    b001:	call   3830 <__assert_fail@plt>
    b006:	lea    rcx,[rip+0x110cb]        # 1c0d8 <_IO_stdin_used@@Base+0x2738>
    b00d:	lea    rsi,[rip+0x10a4d]        # 1ba61 <_IO_stdin_used@@Base+0x20c1>
    b014:	lea    rdi,[rip+0x10a51]        # 1ba6c <_IO_stdin_used@@Base+0x20cc>
    b01b:	mov    edx,0xb60
    b020:	call   3830 <__assert_fail@plt>
    b025:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b02f:	nop
    b030:	mov    rax,QWORD PTR [rdi]
    b033:	xor    edx,edx
    b035:	div    rsi
    b038:	mov    rax,rdx
    b03b:	ret    
    b03c:	nop    DWORD PTR [rax+0x0]
    b040:	xor    eax,eax
    b042:	mov    rdx,QWORD PTR [rsi]
    b045:	cmp    QWORD PTR [rdi],rdx
    b048:	je     b050 <__cxa_finalize@plt+0x7238>
    b04a:	repz ret 
    b04c:	nop    DWORD PTR [rax+0x0]
    b050:	mov    rax,QWORD PTR [rsi+0x8]
    b054:	cmp    QWORD PTR [rdi+0x8],rax
    b058:	sete   al
    b05b:	ret    
    b05c:	nop    DWORD PTR [rax+0x0]
    b060:	push   rbx
    b061:	mov    rbx,rdi
    b064:	mov    rdi,QWORD PTR [rdi+0x10]
    b068:	call   3e10 <free@plt>
    b06d:	mov    rdi,rbx
    b070:	pop    rbx
    b071:	jmp    3e10 <free@plt>
    b076:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b080:	push   rbx
    b081:	sub    rsp,0x20
    b085:	mov    QWORD PTR [rsp],rdi
    b089:	mov    rdi,QWORD PTR [rip+0x2174e8]        # 222578 <stderr@@GLIBC_2.2.5+0x498>
    b090:	mov    QWORD PTR [rsp+0x8],rsi
    b095:	mov    rsi,rsp
    b098:	mov    QWORD PTR [rsp+0x10],0x0
    b0a1:	mov    rax,QWORD PTR fs:0x28
    b0aa:	mov    QWORD PTR [rsp+0x18],rax
    b0af:	xor    eax,eax
    b0b1:	call   ec70 <__cxa_finalize@plt+0xae58>
    b0b6:	test   rax,rax
    b0b9:	je     b0cf <__cxa_finalize@plt+0x72b7>
    b0bb:	mov    rdi,QWORD PTR [rax+0x10]
    b0bf:	mov    rbx,rax
    b0c2:	call   3e10 <free@plt>
    b0c7:	mov    rdi,rbx
    b0ca:	call   3e10 <free@plt>
    b0cf:	mov    rax,QWORD PTR [rsp+0x18]
    b0d4:	xor    rax,QWORD PTR fs:0x28
    b0dd:	jne    b0e5 <__cxa_finalize@plt+0x72cd>
    b0df:	add    rsp,0x20
    b0e3:	pop    rbx
    b0e4:	ret    
    b0e5:	call   3760 <__stack_chk_fail@plt>
    b0ea:	nop    WORD PTR [rax+rax*1+0x0]
    b0f0:	sub    rsp,0x28
    b0f4:	mov    QWORD PTR [rsp],rdi
    b0f8:	mov    rdi,QWORD PTR [rip+0x217479]        # 222578 <stderr@@GLIBC_2.2.5+0x498>
    b0ff:	mov    QWORD PTR [rsp+0x8],rsi
    b104:	mov    rsi,rsp
    b107:	mov    rax,QWORD PTR fs:0x28
    b110:	mov    QWORD PTR [rsp+0x18],rax
    b115:	xor    eax,eax
    b117:	call   e1a0 <__cxa_finalize@plt+0xa388>
    b11c:	test   rax,rax
    b11f:	je     b140 <__cxa_finalize@plt+0x7328>
    b121:	mov    rax,QWORD PTR [rax+0x10]
    b125:	mov    rdx,QWORD PTR [rsp+0x18]
    b12a:	xor    rdx,QWORD PTR fs:0x28
    b133:	jne    b144 <__cxa_finalize@plt+0x732c>
    b135:	add    rsp,0x28
    b139:	ret    
    b13a:	nop    WORD PTR [rax+rax*1+0x0]
    b140:	xor    eax,eax
    b142:	jmp    b125 <__cxa_finalize@plt+0x730d>
    b144:	call   3760 <__stack_chk_fail@plt>
    b149:	nop    DWORD PTR [rax+0x0]
    b150:	push   r13
    b152:	push   r12
    b154:	mov    r13,rdi
    b157:	push   rbp
    b158:	push   rbx
    b159:	mov    edi,0x18
    b15e:	mov    r12,rsi
    b161:	mov    rbp,rdx
    b164:	sub    rsp,0x8
    b168:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    b16d:	mov    rdi,r13
    b170:	mov    rbx,rax
    b173:	call   132f0 <__cxa_finalize@plt+0xf4d8>
    b178:	mov    rdi,QWORD PTR [rip+0x2173f9]        # 222578 <stderr@@GLIBC_2.2.5+0x498>
    b17f:	mov    rsi,rbx
    b182:	mov    QWORD PTR [rbx+0x10],rax
    b186:	mov    QWORD PTR [rbx],r12
    b189:	mov    QWORD PTR [rbx+0x8],rbp
    b18d:	call   ec10 <__cxa_finalize@plt+0xadf8>
    b192:	test   rax,rax
    b195:	je     b1c4 <__cxa_finalize@plt+0x73ac>
    b197:	cmp    rbx,rax
    b19a:	mov    rbp,rax
    b19d:	je     b1c0 <__cxa_finalize@plt+0x73a8>
    b19f:	mov    rdi,QWORD PTR [rbx+0x10]
    b1a3:	call   3e10 <free@plt>
    b1a8:	mov    rdi,rbx
    b1ab:	call   3e10 <free@plt>
    b1b0:	mov    rax,QWORD PTR [rbp+0x10]
    b1b4:	add    rsp,0x8
    b1b8:	pop    rbx
    b1b9:	pop    rbp
    b1ba:	pop    r12
    b1bc:	pop    r13
    b1be:	ret    
    b1bf:	nop
    b1c0:	xor    eax,eax
    b1c2:	jmp    b1b4 <__cxa_finalize@plt+0x739c>
    b1c4:	call   13310 <__cxa_finalize@plt+0xf4f8>
    b1c9:	nop    DWORD PTR [rax+0x0]
    b1d0:	lea    r8,[rip+0xfffffffffffffe89]        # b060 <__cxa_finalize@plt+0x7248>
    b1d7:	lea    rcx,[rip+0xfffffffffffffe62]        # b040 <__cxa_finalize@plt+0x7228>
    b1de:	lea    rdx,[rip+0xfffffffffffffe4b]        # b030 <__cxa_finalize@plt+0x7218>
    b1e5:	sub    rsp,0x8
    b1e9:	xor    esi,esi
    b1eb:	mov    edi,0x67
    b1f0:	call   e410 <__cxa_finalize@plt+0xa5f8>
    b1f5:	test   rax,rax
    b1f8:	mov    QWORD PTR [rip+0x217379],rax        # 222578 <stderr@@GLIBC_2.2.5+0x498>
    b1ff:	je     b206 <__cxa_finalize@plt+0x73ee>
    b201:	add    rsp,0x8
    b205:	ret    
    b206:	call   13310 <__cxa_finalize@plt+0xf4f8>
    b20b:	nop    DWORD PTR [rax+rax*1+0x0]
    b210:	mov    rdi,QWORD PTR [rip+0x217361]        # 222578 <stderr@@GLIBC_2.2.5+0x498>
    b217:	jmp    e660 <__cxa_finalize@plt+0xa848>
    b21c:	nop    DWORD PTR [rax+0x0]
    b220:	mov    DWORD PTR [rsi],edi
    b222:	mov    QWORD PTR [rsi+0x18],0x0
    b22a:	mov    QWORD PTR [rsi+0x28],0x0
    b232:	mov    QWORD PTR [rsi+0x8],0x0
    b23a:	mov    BYTE PTR [rsi+0x20],0x0
    b23e:	mov    BYTE PTR [rsi+0x21],0x0
    b242:	mov    DWORD PTR [rsi+0x10],0x1
    b249:	ret    
    b24a:	nop    WORD PTR [rax+rax*1+0x0]
    b250:	push   r15
    b252:	push   r14
    b254:	xor    r15d,r15d
    b257:	push   r13
    b259:	push   r12
    b25b:	mov    r14,rdi
    b25e:	push   rbp
    b25f:	push   rbx
    b260:	movabs r13,0x7fffffffffffffff
    b26a:	sub    rsp,0x1018
    b271:	mov    rbx,QWORD PTR [rdi+0x28]
    b275:	mov    rdx,QWORD PTR [rdi+0x8]
    b279:	mov    rbp,rsp
    b27c:	mov    rax,QWORD PTR fs:0x28
    b285:	mov    QWORD PTR [rsp+0x1008],rax
    b28d:	xor    eax,eax
    b28f:	lea    r12,[rbp+0x20]
    b293:	xor    eax,eax
    b295:	mov    ecx,0x200
    b29a:	mov    rdi,rbp
    b29d:	rep stos QWORD PTR es:[rdi],rax
    b2a0:	mov    eax,DWORD PTR [r14+0x10]
    b2a4:	mov    edi,DWORD PTR [r14]
    b2a7:	mov    esi,0xc020660b
    b2ac:	mov    QWORD PTR [rsp],rdx
    b2b0:	not    rdx
    b2b3:	mov    DWORD PTR [rsp+0x18],0x48
    b2bb:	mov    QWORD PTR [rsp+0x8],rdx
    b2c0:	mov    rdx,rbp
    b2c3:	mov    DWORD PTR [rsp+0x10],eax
    b2c7:	xor    eax,eax
    b2c9:	call   3880 <ioctl@plt>
    b2ce:	test   eax,eax
    b2d0:	js     b3a0 <__cxa_finalize@plt+0x7588>
    b2d6:	mov    eax,DWORD PTR [rsp+0x14]
    b2da:	test   eax,eax
    b2dc:	je     b518 <__cxa_finalize@plt+0x7700>
    b2e2:	mov    rcx,QWORD PTR [r14+0x18]
    b2e6:	mov    rdx,rax
    b2e9:	not    rdx
    b2ec:	cmp    rcx,rdx
    b2ef:	ja     b52a <__cxa_finalize@plt+0x7712>
    b2f5:	mov    rdi,QWORD PTR [r14+0x28]
    b2f9:	mov    edx,0x18
    b2fe:	add    rcx,rax
    b301:	mov    rax,rdx
    b304:	xor    esi,esi
    b306:	mov    QWORD PTR [r14+0x18],rcx
    b30a:	sub    rbx,rdi
    b30d:	mul    rcx
    b310:	jo     b549 <__cxa_finalize@plt+0x7731>
    b316:	test   rax,rax
    b319:	js     b553 <__cxa_finalize@plt+0x773b>
    b31f:	test   rsi,rsi
    b322:	jne    b553 <__cxa_finalize@plt+0x773b>
    b328:	lea    rsi,[rcx+rcx*2]
    b32c:	shl    rsi,0x3
    b330:	call   13120 <__cxa_finalize@plt+0xf308>
    b335:	mov    r8d,DWORD PTR [rsp+0x14]
    b33a:	add    rbx,rax
    b33d:	mov    QWORD PTR [r14+0x28],rax
    b341:	test   r8d,r8d
    b344:	je     b480 <__cxa_finalize@plt+0x7668>
    b34a:	mov    rax,QWORD PTR [rsp+0x30]
    b34f:	mov    rdx,QWORD PTR [rsp+0x20]
    b354:	mov    rcx,r13
    b357:	sub    rcx,rax
    b35a:	cmp    rdx,rcx
    b35d:	ja     b43a <__cxa_finalize@plt+0x7622>
    b363:	xor    ecx,ecx
    b365:	mov    rsi,r12
    b368:	test   r15d,r15d
    b36b:	je     b3e0 <__cxa_finalize@plt+0x75c8>
    b36d:	mov    r9d,DWORD PTR [rsi+0x28]
    b371:	mov    r10,QWORD PTR [rbx+0x8]
    b375:	mov    rdi,QWORD PTR [rbx]
    b378:	mov    r11d,r9d
    b37b:	add    rdi,r10
    b37e:	and    r11d,0xfffffffe
    b382:	cmp    DWORD PTR [rbx+0x10],r11d
    b386:	je     b460 <__cxa_finalize@plt+0x7648>
    b38c:	cmp    rdi,rdx
    b38f:	jbe    b3ed <__cxa_finalize@plt+0x75d5>
    b391:	mov    r10,rdi
    b394:	sub    r10,rdx
    b397:	cmp    r10,rax
    b39a:	jae    b4b8 <__cxa_finalize@plt+0x76a0>
    b3a0:	xor    eax,eax
    b3a2:	cmp    QWORD PTR [r14+0x8],0x0
    b3a7:	jne    b3b0 <__cxa_finalize@plt+0x7598>
    b3a9:	mov    BYTE PTR [r14+0x20],0x1
    b3ae:	xor    eax,eax
    b3b0:	mov    rbx,QWORD PTR [rsp+0x1008]
    b3b8:	xor    rbx,QWORD PTR fs:0x28
    b3c1:	jne    b558 <__cxa_finalize@plt+0x7740>
    b3c7:	add    rsp,0x1018
    b3ce:	pop    rbx
    b3cf:	pop    rbp
    b3d0:	pop    r12
    b3d2:	pop    r13
    b3d4:	pop    r14
    b3d6:	pop    r15
    b3d8:	ret    
    b3d9:	nop    DWORD PTR [rax+0x0]
    b3e0:	mov    rdi,QWORD PTR [r14+0x8]
    b3e4:	cmp    rdi,rdx
    b3e7:	ja     b391 <__cxa_finalize@plt+0x7579>
    b3e9:	mov    r9d,DWORD PTR [rsi+0x28]
    b3ed:	mov    esi,r15d
    b3f0:	add    r15d,0x1
    b3f4:	lea    rdi,[rsi+rsi*2]
    b3f8:	mov    rsi,QWORD PTR [r14+0x28]
    b3fc:	lea    rbx,[rsi+rdi*8]
    b400:	mov    QWORD PTR [rbx],rdx
    b403:	mov    QWORD PTR [rbx+0x8],rax
    b407:	mov    DWORD PTR [rbx+0x10],r9d
    b40b:	add    ecx,0x1
    b40e:	cmp    ecx,r8d
    b411:	jae    b480 <__cxa_finalize@plt+0x7668>
    b413:	mov    edx,ecx
    b415:	mov    rdi,r13
    b418:	lea    rax,[rdx*8+0x0]
    b420:	sub    rax,rdx
    b423:	lea    rsi,[r12+rax*8]
    b427:	mov    rax,QWORD PTR [rsi+0x10]
    b42b:	mov    rdx,QWORD PTR [rsi]
    b42e:	sub    rdi,rax
    b431:	cmp    rdx,rdi
    b434:	jbe    b368 <__cxa_finalize@plt+0x7550>
    b43a:	lea    rcx,[rip+0x10d2f]        # 1c170 <_IO_stdin_used@@Base+0x27d0>
    b441:	lea    rsi,[rip+0x10c9e]        # 1c0e6 <_IO_stdin_used@@Base+0x2746>
    b448:	lea    rdi,[rip+0x10ce1]        # 1c130 <_IO_stdin_used@@Base+0x2790>
    b44f:	mov    edx,0x8d
    b454:	call   3830 <__assert_fail@plt>
    b459:	nop    DWORD PTR [rax+0x0]
    b460:	cmp    rdi,rdx
    b463:	jne    b38c <__cxa_finalize@plt+0x7574>
    b469:	add    ecx,0x1
    b46c:	add    rax,r10
    b46f:	mov    DWORD PTR [rbx+0x10],r9d
    b473:	cmp    ecx,r8d
    b476:	mov    QWORD PTR [rbx+0x8],rax
    b47a:	jb     b413 <__cxa_finalize@plt+0x75fb>
    b47c:	nop    DWORD PTR [rax+0x0]
    b480:	test   BYTE PTR [rbx+0x10],0x1
    b484:	jne    b4d0 <__cxa_finalize@plt+0x76b8>
    b486:	cmp    r15d,0x48
    b48a:	movzx  eax,BYTE PTR [r14+0x21]
    b48f:	jbe    b4f0 <__cxa_finalize@plt+0x76d8>
    b491:	test   al,al
    b493:	jne    b4d5 <__cxa_finalize@plt+0x76bd>
    b495:	lea    eax,[r15-0x1]
    b499:	mov    rdx,QWORD PTR [r14+0x28]
    b49d:	lea    rcx,[rax+rax*2]
    b4a1:	mov    QWORD PTR [r14+0x18],rax
    b4a5:	mov    rax,QWORD PTR [rdx+rcx*8-0x18]
    b4aa:	add    rax,QWORD PTR [rdx+rcx*8-0x10]
    b4af:	mov    QWORD PTR [r14+0x8],rax
    b4b3:	jmp    b4dc <__cxa_finalize@plt+0x76c4>
    b4b5:	nop    DWORD PTR [rax]
    b4b8:	sub    rax,r10
    b4bb:	mov    QWORD PTR [rsi],rdi
    b4be:	sub    ecx,0x1
    b4c1:	mov    QWORD PTR [rsi+0x10],rax
    b4c5:	jmp    b40b <__cxa_finalize@plt+0x75f3>
    b4ca:	nop    WORD PTR [rax+rax*1+0x0]
    b4d0:	mov    BYTE PTR [r14+0x21],0x1
    b4d5:	mov    eax,r15d
    b4d8:	mov    QWORD PTR [r14+0x18],rax
    b4dc:	mov    eax,0x1
    b4e1:	jmp    b3b0 <__cxa_finalize@plt+0x7598>
    b4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b4f0:	mov    ecx,r15d
    b4f3:	test   al,al
    b4f5:	mov    QWORD PTR [r14+0x18],rcx
    b4f9:	jne    b4dc <__cxa_finalize@plt+0x76c4>
    b4fb:	mov    rdx,QWORD PTR [rbx+0x8]
    b4ff:	add    rdx,QWORD PTR [rbx]
    b502:	cmp    r15d,0x47
    b506:	mov    QWORD PTR [r14+0x8],rdx
    b50a:	jbe    b293 <__cxa_finalize@plt+0x747b>
    b510:	jmp    b4dc <__cxa_finalize@plt+0x76c4>
    b512:	nop    WORD PTR [rax+rax*1+0x0]
    b518:	cmp    QWORD PTR [r14+0x8],0x0
    b51d:	mov    BYTE PTR [r14+0x21],0x1
    b522:	setne  al
    b525:	jmp    b3b0 <__cxa_finalize@plt+0x7598>
    b52a:	lea    rcx,[rip+0x10c3f]        # 1c170 <_IO_stdin_used@@Base+0x27d0>
    b531:	lea    rsi,[rip+0x10bae]        # 1c0e6 <_IO_stdin_used@@Base+0x2746>
    b538:	lea    rdi,[rip+0x10bb9]        # 1c0f8 <_IO_stdin_used@@Base+0x2758>
    b53f:	mov    edx,0x7e
    b544:	call   3830 <__assert_fail@plt>
    b549:	mov    esi,0x1
    b54e:	jmp    b316 <__cxa_finalize@plt+0x74fe>
    b553:	call   13310 <__cxa_finalize@plt+0xf4f8>
    b558:	call   3760 <__stack_chk_fail@plt>
    b55d:	nop    DWORD PTR [rax]
    b560:	mov    rax,rsi
    b563:	mov    rcx,rdi
    b566:	mov    edx,DWORD PTR [rsi+0x10]
    b569:	mov    r8d,DWORD PTR [rax+0x14]
    b56d:	mov    rsi,QWORD PTR [rsi+0x8]
    b571:	mov    edi,DWORD PTR [rax]
    b573:	jmp    3b90 <linkat@plt>
    b578:	nop    DWORD PTR [rax+rax*1+0x0]
    b580:	push   r12
    b582:	push   rbp
    b583:	mov    rbp,rdi
    b586:	push   rbx
    b587:	mov    r12,rsi
    b58a:	call   d600 <__cxa_finalize@plt+0x97e8>
    b58f:	sub    rax,rbp
    b592:	lea    rdi,[rax+0x9]
    b596:	mov    rbx,rax
    b599:	cmp    rdi,0x100
    b5a0:	jbe    b5b1 <__cxa_finalize@plt+0x7799>
    b5a2:	call   3ac0 <malloc@plt>
    b5a7:	mov    r12,rax
    b5aa:	xor    eax,eax
    b5ac:	test   r12,r12
    b5af:	je     b5d3 <__cxa_finalize@plt+0x77bb>
    b5b1:	mov    rdx,rbx
    b5b4:	mov    rsi,rbp
    b5b7:	mov    rdi,r12
    b5ba:	call   3bf0 <mempcpy@plt>
    b5bf:	movabs rcx,0x5858585858587543
    b5c9:	mov    BYTE PTR [rax+0x8],0x0
    b5cd:	mov    QWORD PTR [rax],rcx
    b5d0:	mov    rax,r12
    b5d3:	pop    rbx
    b5d4:	pop    rbp
    b5d5:	pop    r12
    b5d7:	ret    
    b5d8:	nop    DWORD PTR [rax+rax*1+0x0]
    b5e0:	mov    rax,rsi
    b5e3:	mov    rdx,rdi
    b5e6:	mov    esi,DWORD PTR [rsi+0x8]
    b5e9:	mov    rdi,QWORD PTR [rax]
    b5ec:	jmp    3da0 <symlinkat@plt>
    b5f1:	nop    DWORD PTR [rax+rax*1+0x0]
    b5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b600:	push   r15
    b602:	push   r14
    b604:	mov    r15d,edi
    b607:	push   r13
    b609:	push   r12
    b60b:	mov    r14,rsi
    b60e:	push   rbp
    b60f:	push   rbx
    b610:	mov    ebp,edx
    b612:	mov    r12,rcx
    b615:	mov    r13d,r8d
    b618:	sub    rsp,0x148
    b61f:	mov    DWORD PTR [rsp],r9d
    b623:	mov    rax,QWORD PTR fs:0x28
    b62c:	mov    QWORD PTR [rsp+0x138],rax
    b634:	xor    eax,eax
    b636:	call   3b90 <linkat@plt>
    b63b:	mov    r9d,DWORD PTR [rsp]
    b63f:	mov    ebx,eax
    b641:	cmp    r9b,0x1
    b645:	jne    b655 <__cxa_finalize@plt+0x783d>
    b647:	test   eax,eax
    b649:	je     b655 <__cxa_finalize@plt+0x783d>
    b64b:	call   3540 <__errno_location@plt>
    b650:	cmp    DWORD PTR [rax],0x11
    b653:	je     b680 <__cxa_finalize@plt+0x7868>
    b655:	mov    rcx,QWORD PTR [rsp+0x138]
    b65d:	xor    rcx,QWORD PTR fs:0x28
    b666:	mov    eax,ebx
    b668:	jne    b75a <__cxa_finalize@plt+0x7942>
    b66e:	add    rsp,0x148
    b675:	pop    rbx
    b676:	pop    rbp
    b677:	pop    r12
    b679:	pop    r13
    b67b:	pop    r14
    b67d:	pop    r15
    b67f:	ret    
    b680:	mov    QWORD PTR [rsp+0x8],rax
    b685:	lea    rax,[rsp+0x30]
    b68a:	mov    rdi,r12
    b68d:	mov    rsi,rax
    b690:	mov    QWORD PTR [rsp],rax
    b694:	call   b580 <__cxa_finalize@plt+0x7768>
    b699:	test   rax,rax
    b69c:	mov    rbx,rax
    b69f:	je     b750 <__cxa_finalize@plt+0x7938>
    b6a5:	lea    rdx,[rsp+0x10]
    b6aa:	lea    rcx,[rip+0xfffffffffffffeaf]        # b560 <__cxa_finalize@plt+0x7748>
    b6b1:	xor    esi,esi
    b6b3:	mov    r8d,0x6
    b6b9:	mov    rdi,rax
    b6bc:	mov    DWORD PTR [rsp+0x10],r15d
    b6c1:	mov    QWORD PTR [rsp+0x18],r14
    b6c6:	mov    DWORD PTR [rsp+0x20],ebp
    b6ca:	mov    DWORD PTR [rsp+0x24],r13d
    b6cf:	call   11670 <__cxa_finalize@plt+0xd858>
    b6d4:	test   eax,eax
    b6d6:	mov    r9,QWORD PTR [rsp+0x8]
    b6db:	je     b708 <__cxa_finalize@plt+0x78f0>
    b6dd:	mov    r12d,DWORD PTR [r9]
    b6e0:	cmp    rbx,QWORD PTR [rsp]
    b6e4:	je     b6f6 <__cxa_finalize@plt+0x78de>
    b6e6:	mov    rdi,rbx
    b6e9:	mov    QWORD PTR [rsp],r9
    b6ed:	call   3e10 <free@plt>
    b6f2:	mov    r9,QWORD PTR [rsp]
    b6f6:	test   r12d,r12d
    b6f9:	jne    b743 <__cxa_finalize@plt+0x792b>
    b6fb:	mov    ebx,0x1
    b700:	jmp    b655 <__cxa_finalize@plt+0x783d>
    b705:	nop    DWORD PTR [rax]
    b708:	mov    rcx,r12
    b70b:	mov    edx,ebp
    b70d:	mov    rsi,rbx
    b710:	mov    edi,ebp
    b712:	mov    QWORD PTR [rsp+0x8],r9
    b717:	call   3d10 <renameat@plt>
    b71c:	test   eax,eax
    b71e:	mov    r12d,eax
    b721:	mov    r9,QWORD PTR [rsp+0x8]
    b726:	je     b72b <__cxa_finalize@plt+0x7913>
    b728:	mov    r12d,DWORD PTR [r9]
    b72b:	xor    edx,edx
    b72d:	mov    rsi,rbx
    b730:	mov    edi,ebp
    b732:	mov    QWORD PTR [rsp+0x8],r9
    b737:	call   35f0 <unlinkat@plt>
    b73c:	mov    r9,QWORD PTR [rsp+0x8]
    b741:	jmp    b6e0 <__cxa_finalize@plt+0x78c8>
    b743:	mov    DWORD PTR [r9],r12d
    b746:	mov    ebx,0xffffffff
    b74b:	jmp    b655 <__cxa_finalize@plt+0x783d>
    b750:	mov    ebx,0xffffffff
    b755:	jmp    b655 <__cxa_finalize@plt+0x783d>
    b75a:	call   3760 <__stack_chk_fail@plt>
    b75f:	nop
    b760:	push   r15
    b762:	push   r14
    b764:	mov    r14d,ecx
    b767:	push   r13
    b769:	push   r12
    b76b:	mov    r13,rdi
    b76e:	push   rbp
    b76f:	push   rbx
    b770:	mov    ebp,esi
    b772:	mov    r12,rdx
    b775:	sub    rsp,0x128
    b77c:	mov    rax,QWORD PTR fs:0x28
    b785:	mov    QWORD PTR [rsp+0x118],rax
    b78d:	xor    eax,eax
    b78f:	call   3da0 <symlinkat@plt>
    b794:	cmp    r14b,0x1
    b798:	mov    ebx,eax
    b79a:	jne    b7ad <__cxa_finalize@plt+0x7995>
    b79c:	test   eax,eax
    b79e:	je     b7ad <__cxa_finalize@plt+0x7995>
    b7a0:	call   3540 <__errno_location@plt>
    b7a5:	cmp    DWORD PTR [rax],0x11
    b7a8:	mov    r14,rax
    b7ab:	je     b7e0 <__cxa_finalize@plt+0x79c8>
    b7ad:	mov    rcx,QWORD PTR [rsp+0x118]
    b7b5:	xor    rcx,QWORD PTR fs:0x28
    b7be:	mov    eax,ebx
    b7c0:	jne    b898 <__cxa_finalize@plt+0x7a80>
    b7c6:	add    rsp,0x128
    b7cd:	pop    rbx
    b7ce:	pop    rbp
    b7cf:	pop    r12
    b7d1:	pop    r13
    b7d3:	pop    r14
    b7d5:	pop    r15
    b7d7:	ret    
    b7d8:	nop    DWORD PTR [rax+rax*1+0x0]
    b7e0:	lea    r15,[rsp+0x10]
    b7e5:	mov    rdi,r12
    b7e8:	mov    rsi,r15
    b7eb:	call   b580 <__cxa_finalize@plt+0x7768>
    b7f0:	test   rax,rax
    b7f3:	mov    rbx,rax
    b7f6:	je     b88e <__cxa_finalize@plt+0x7a76>
    b7fc:	lea    rcx,[rip+0xfffffffffffffddd]        # b5e0 <__cxa_finalize@plt+0x77c8>
    b803:	xor    esi,esi
    b805:	mov    rdx,rsp
    b808:	mov    r8d,0x6
    b80e:	mov    rdi,rax
    b811:	mov    QWORD PTR [rsp],r13
    b815:	mov    DWORD PTR [rsp+0x8],ebp
    b819:	call   11670 <__cxa_finalize@plt+0xd858>
    b81e:	test   eax,eax
    b820:	je     b848 <__cxa_finalize@plt+0x7a30>
    b822:	mov    r12d,DWORD PTR [r14]
    b825:	cmp    rbx,r15
    b828:	je     b832 <__cxa_finalize@plt+0x7a1a>
    b82a:	mov    rdi,rbx
    b82d:	call   3e10 <free@plt>
    b832:	test   r12d,r12d
    b835:	jne    b881 <__cxa_finalize@plt+0x7a69>
    b837:	mov    ebx,0x1
    b83c:	jmp    b7ad <__cxa_finalize@plt+0x7995>
    b841:	nop    DWORD PTR [rax+0x0]
    b848:	mov    rcx,r12
    b84b:	mov    edx,ebp
    b84d:	mov    rsi,rbx
    b850:	mov    edi,ebp
    b852:	call   3d10 <renameat@plt>
    b857:	test   eax,eax
    b859:	jne    b870 <__cxa_finalize@plt+0x7a58>
    b85b:	cmp    rbx,r15
    b85e:	je     b837 <__cxa_finalize@plt+0x7a1f>
    b860:	mov    rdi,rbx
    b863:	call   3e10 <free@plt>
    b868:	jmp    b837 <__cxa_finalize@plt+0x7a1f>
    b86a:	nop    WORD PTR [rax+rax*1+0x0]
    b870:	xor    edx,edx
    b872:	mov    rsi,rbx
    b875:	mov    edi,ebp
    b877:	mov    r12d,DWORD PTR [r14]
    b87a:	call   35f0 <unlinkat@plt>
    b87f:	jmp    b825 <__cxa_finalize@plt+0x7a0d>
    b881:	mov    DWORD PTR [r14],r12d
    b884:	mov    ebx,0xffffffff
    b889:	jmp    b7ad <__cxa_finalize@plt+0x7995>
    b88e:	mov    ebx,0xffffffff
    b893:	jmp    b7ad <__cxa_finalize@plt+0x7995>
    b898:	call   3760 <__stack_chk_fail@plt>
    b89d:	nop    DWORD PTR [rax]
    b8a0:	push   r14
    b8a2:	push   r13
    b8a4:	push   r12
    b8a6:	push   rbp
    b8a7:	mov    rbp,rdi
    b8aa:	push   rbx
    b8ab:	sub    rsp,0xb0
    b8b2:	mov    rax,QWORD PTR fs:0x28
    b8bb:	mov    QWORD PTR [rsp+0xa8],rax
    b8c3:	xor    eax,eax
    b8c5:	test   sil,sil
    b8c8:	mov    QWORD PTR [rsp],0x0
    b8d0:	mov    QWORD PTR [rsp+0x8],0x0
    b8d9:	je     b940 <__cxa_finalize@plt+0x7b28>
    b8db:	lea    rdi,[rsp+0x8]
    b8e0:	call   3d80 <getfscreatecon@plt>
    b8e5:	test   eax,eax
    b8e7:	js     bade <__cxa_finalize@plt+0x7cc6>
    b8ed:	mov    rsi,QWORD PTR [rsp+0x8]
    b8f2:	test   rsi,rsi
    b8f5:	je     bb60 <__cxa_finalize@plt+0x7d48>
    b8fb:	mov    rdi,rbp
    b8fe:	call   3600 <lsetfilecon@plt>
    b903:	mov    rdi,QWORD PTR [rsp+0x8]
    b908:	mov    ebx,eax
    b90a:	call   3d20 <freecon@plt>
    b90f:	mov    rcx,QWORD PTR [rsp+0xa8]
    b917:	xor    rcx,QWORD PTR fs:0x28
    b920:	mov    eax,ebx
    b922:	jne    bb84 <__cxa_finalize@plt+0x7d6c>
    b928:	add    rsp,0xb0
    b92f:	pop    rbx
    b930:	pop    rbp
    b931:	pop    r12
    b933:	pop    r13
    b935:	pop    r14
    b937:	ret    
    b938:	nop    DWORD PTR [rax+rax*1+0x0]
    b940:	xor    eax,eax
    b942:	mov    esi,0x20000
    b947:	call   3c60 <open@plt>
    b94c:	cmp    eax,0xffffffff
    b94f:	mov    ebx,eax
    b951:	je     b9b0 <__cxa_finalize@plt+0x7b98>
    b953:	lea    rdx,[rsp+0x10]
    b958:	mov    esi,eax
    b95a:	mov    edi,0x1
    b95f:	call   3b10 <__fxstat@plt>
    b964:	test   eax,eax
    b966:	js     ba90 <__cxa_finalize@plt+0x7c78>
    b96c:	mov    esi,DWORD PTR [rsp+0x28]
    b970:	mov    rdx,rsp
    b973:	mov    rdi,rbp
    b976:	call   38f0 <matchpathcon@plt>
    b97b:	test   eax,eax
    b97d:	jns    b9f0 <__cxa_finalize@plt+0x7bd8>
    b97f:	call   3540 <__errno_location@plt>
    b984:	cmp    DWORD PTR [rax],0x2
    b987:	je     baf0 <__cxa_finalize@plt+0x7cd8>
    b98d:	xor    r13d,r13d
    b990:	xor    r12d,r12d
    b993:	cmp    ebx,0xffffffff
    b996:	je     b9c4 <__cxa_finalize@plt+0x7bac>
    b998:	mov    r14d,0xffffffff
    b99e:	mov    edi,ebx
    b9a0:	mov    ebx,r14d
    b9a3:	call   38b0 <close@plt>
    b9a8:	jmp    b9c4 <__cxa_finalize@plt+0x7bac>
    b9aa:	nop    WORD PTR [rax+rax*1+0x0]
    b9b0:	call   3540 <__errno_location@plt>
    b9b5:	cmp    DWORD PTR [rax],0x28
    b9b8:	je     baa8 <__cxa_finalize@plt+0x7c90>
    b9be:	xor    r13d,r13d
    b9c1:	xor    r12d,r12d
    b9c4:	mov    rdi,r12
    b9c7:	call   3a30 <context_free@plt>
    b9cc:	mov    rdi,r13
    b9cf:	call   3a30 <context_free@plt>
    b9d4:	mov    rdi,QWORD PTR [rsp]
    b9d8:	call   3d20 <freecon@plt>
    b9dd:	mov    rdi,QWORD PTR [rsp+0x8]
    b9e2:	call   3d20 <freecon@plt>
    b9e7:	jmp    b90f <__cxa_finalize@plt+0x7af7>
    b9ec:	nop    DWORD PTR [rax+0x0]
    b9f0:	mov    rdi,QWORD PTR [rsp]
    b9f4:	call   36a0 <context_new@plt>
    b9f9:	test   rax,rax
    b9fc:	mov    r12,rax
    b9ff:	je     b98d <__cxa_finalize@plt+0x7b75>
    ba01:	cmp    ebx,0xffffffff
    ba04:	lea    rsi,[rsp+0x8]
    ba09:	je     bb08 <__cxa_finalize@plt+0x7cf0>
    ba0f:	mov    edi,ebx
    ba11:	call   15d70 <fts_children@@Base+0x200>
    ba16:	test   eax,eax
    ba18:	js     bad0 <__cxa_finalize@plt+0x7cb8>
    ba1e:	mov    rdi,QWORD PTR [rsp+0x8]
    ba23:	call   36a0 <context_new@plt>
    ba28:	test   rax,rax
    ba2b:	mov    r13,rax
    ba2e:	je     b998 <__cxa_finalize@plt+0x7b80>
    ba34:	mov    rdi,r12
    ba37:	call   35c0 <context_type_get@plt>
    ba3c:	test   rax,rax
    ba3f:	je     b998 <__cxa_finalize@plt+0x7b80>
    ba45:	mov    rsi,rax
    ba48:	mov    rdi,r13
    ba4b:	mov    r14d,0xffffffff
    ba51:	call   37a0 <context_type_set@plt>
    ba56:	test   eax,eax
    ba58:	jne    b99e <__cxa_finalize@plt+0x7b86>
    ba5e:	mov    rdi,r13
    ba61:	call   3db0 <context_str@plt>
    ba66:	test   rax,rax
    ba69:	je     b993 <__cxa_finalize@plt+0x7b7b>
    ba6f:	cmp    ebx,0xffffffff
    ba72:	mov    rsi,rax
    ba75:	je     bb75 <__cxa_finalize@plt+0x7d5d>
    ba7b:	mov    edi,ebx
    ba7d:	call   3c40 <fsetfilecon@plt>
    ba82:	mov    r14d,eax
    ba85:	jmp    b99e <__cxa_finalize@plt+0x7b86>
    ba8a:	nop    WORD PTR [rax+rax*1+0x0]
    ba90:	xor    r13d,r13d
    ba93:	xor    r12d,r12d
    ba96:	mov    r14d,0xffffffff
    ba9c:	jmp    b99e <__cxa_finalize@plt+0x7b86>
    baa1:	nop    DWORD PTR [rax+0x0]
    baa8:	lea    rdx,[rsp+0x10]
    baad:	mov    rsi,rbp
    bab0:	mov    edi,0x1
    bab5:	call   3740 <__lxstat@plt>
    baba:	test   eax,eax
    babc:	jns    b96c <__cxa_finalize@plt+0x7b54>
    bac2:	jmp    b9be <__cxa_finalize@plt+0x7ba6>
    bac7:	nop    WORD PTR [rax+rax*1+0x0]
    bad0:	xor    r13d,r13d
    bad3:	mov    r14d,0xffffffff
    bad9:	jmp    b99e <__cxa_finalize@plt+0x7b86>
    bade:	mov    ebx,0xffffffff
    bae3:	jmp    b90f <__cxa_finalize@plt+0x7af7>
    bae8:	nop    DWORD PTR [rax+rax*1+0x0]
    baf0:	mov    DWORD PTR [rax],0x3d
    baf6:	xor    r13d,r13d
    baf9:	xor    r12d,r12d
    bafc:	jmp    b993 <__cxa_finalize@plt+0x7b7b>
    bb01:	nop    DWORD PTR [rax+0x0]
    bb08:	mov    rdi,rbp
    bb0b:	xor    r13d,r13d
    bb0e:	call   15d50 <fts_children@@Base+0x1e0>
    bb13:	test   eax,eax
    bb15:	js     b9c4 <__cxa_finalize@plt+0x7bac>
    bb1b:	mov    rdi,QWORD PTR [rsp+0x8]
    bb20:	call   36a0 <context_new@plt>
    bb25:	test   rax,rax
    bb28:	mov    r13,rax
    bb2b:	je     b9c4 <__cxa_finalize@plt+0x7bac>
    bb31:	mov    rdi,r12
    bb34:	call   35c0 <context_type_get@plt>
    bb39:	test   rax,rax
    bb3c:	je     b9c4 <__cxa_finalize@plt+0x7bac>
    bb42:	mov    rsi,rax
    bb45:	mov    rdi,r13
    bb48:	call   37a0 <context_type_set@plt>
    bb4d:	test   eax,eax
    bb4f:	jne    b9c4 <__cxa_finalize@plt+0x7bac>
    bb55:	jmp    ba5e <__cxa_finalize@plt+0x7c46>
    bb5a:	nop    WORD PTR [rax+rax*1+0x0]
    bb60:	call   3540 <__errno_location@plt>
    bb65:	mov    ebx,0xffffffff
    bb6a:	mov    DWORD PTR [rax],0x3d
    bb70:	jmp    b90f <__cxa_finalize@plt+0x7af7>
    bb75:	mov    rdi,rbp
    bb78:	call   3600 <lsetfilecon@plt>
    bb7d:	mov    ebx,eax
    bb7f:	jmp    b9c4 <__cxa_finalize@plt+0x7bac>
    bb84:	call   3760 <__stack_chk_fail@plt>
    bb89:	nop    DWORD PTR [rax+0x0]
    bb90:	push   r13
    bb92:	push   r12
    bb94:	mov    r12d,esi
    bb97:	push   rbp
    bb98:	push   rbx
    bb99:	mov    rbp,rdi
    bb9c:	sub    rsp,0x38
    bba0:	mov    rax,QWORD PTR fs:0x28
    bba9:	mov    QWORD PTR [rsp+0x28],rax
    bbae:	xor    eax,eax
    bbb0:	cmp    BYTE PTR [rdi],0x2f
    bbb3:	mov    QWORD PTR [rsp+0x8],0x0
    bbbc:	mov    QWORD PTR [rsp+0x10],0x0
    bbc5:	je     bd60 <__cxa_finalize@plt+0x7f48>
    bbcb:	mov    esi,0x2
    bbd0:	call   cc50 <__cxa_finalize@plt+0x8e38>
    bbd5:	test   rax,rax
    bbd8:	mov    rbx,rax
    bbdb:	je     bdc0 <__cxa_finalize@plt+0x7fa8>
    bbe1:	mov    r13,rax
    bbe4:	lea    rdx,[rsp+0x8]
    bbe9:	mov    esi,r12d
    bbec:	mov    rdi,rbx
    bbef:	call   38f0 <matchpathcon@plt>
    bbf4:	test   eax,eax
    bbf6:	jns    bc60 <__cxa_finalize@plt+0x7e48>
    bbf8:	call   3540 <__errno_location@plt>
    bbfd:	cmp    DWORD PTR [rax],0x2
    bc00:	je     bd70 <__cxa_finalize@plt+0x7f58>
    bc06:	xor    ebx,ebx
    bc08:	xor    ebp,ebp
    bc0a:	mov    r12d,0xffffffff
    bc10:	mov    rdi,rbp
    bc13:	call   3a30 <context_free@plt>
    bc18:	mov    rdi,rbx
    bc1b:	call   3a30 <context_free@plt>
    bc20:	mov    rdi,QWORD PTR [rsp+0x8]
    bc25:	call   3d20 <freecon@plt>
    bc2a:	mov    rdi,QWORD PTR [rsp+0x10]
    bc2f:	call   3d20 <freecon@plt>
    bc34:	mov    rdi,r13
    bc37:	call   3e10 <free@plt>
    bc3c:	mov    rcx,QWORD PTR [rsp+0x28]
    bc41:	xor    rcx,QWORD PTR fs:0x28
    bc4a:	mov    eax,r12d
    bc4d:	jne    bdbb <__cxa_finalize@plt+0x7fa3>
    bc53:	add    rsp,0x38
    bc57:	pop    rbx
    bc58:	pop    rbp
    bc59:	pop    r12
    bc5b:	pop    r13
    bc5d:	ret    
    bc5e:	xchg   ax,ax
    bc60:	mov    rdi,rbx
    bc63:	mov    QWORD PTR [rsp+0x18],0x0
    bc6c:	mov    QWORD PTR [rsp+0x20],0x0
    bc75:	call   d520 <__cxa_finalize@plt+0x9708>
    bc7a:	test   rax,rax
    bc7d:	mov    rbx,rax
    bc80:	je     bd80 <__cxa_finalize@plt+0x7f68>
    bc86:	lea    rdi,[rsp+0x18]
    bc8b:	call   3910 <getcon@plt>
    bc90:	test   eax,eax
    bc92:	js     bd80 <__cxa_finalize@plt+0x7f68>
    bc98:	lea    rsi,[rsp+0x20]
    bc9d:	mov    rdi,rbx
    bca0:	call   15d30 <fts_children@@Base+0x1c0>
    bca5:	test   eax,eax
    bca7:	js     bd80 <__cxa_finalize@plt+0x7f68>
    bcad:	mov    edi,r12d
    bcb0:	call   3dd0 <mode_to_security_class@plt>
    bcb5:	test   ax,ax
    bcb8:	je     bd80 <__cxa_finalize@plt+0x7f68>
    bcbe:	mov    rsi,QWORD PTR [rsp+0x20]
    bcc3:	mov    rdi,QWORD PTR [rsp+0x18]
    bcc8:	lea    rcx,[rsp+0x10]
    bccd:	movzx  edx,ax
    bcd0:	call   3cf0 <security_compute_create@plt>
    bcd5:	mov    rdi,rbx
    bcd8:	mov    ebp,eax
    bcda:	call   3e10 <free@plt>
    bcdf:	mov    rdi,QWORD PTR [rsp+0x18]
    bce4:	call   3d20 <freecon@plt>
    bce9:	mov    rdi,QWORD PTR [rsp+0x20]
    bcee:	call   3d20 <freecon@plt>
    bcf3:	test   ebp,ebp
    bcf5:	js     bc06 <__cxa_finalize@plt+0x7dee>
    bcfb:	mov    rdi,QWORD PTR [rsp+0x8]
    bd00:	call   36a0 <context_new@plt>
    bd05:	test   rax,rax
    bd08:	mov    rbp,rax
    bd0b:	je     bc06 <__cxa_finalize@plt+0x7dee>
    bd11:	mov    rdi,QWORD PTR [rsp+0x10]
    bd16:	call   36a0 <context_new@plt>
    bd1b:	test   rax,rax
    bd1e:	mov    rbx,rax
    bd21:	je     bdb0 <__cxa_finalize@plt+0x7f98>
    bd27:	mov    rdi,rbp
    bd2a:	call   35c0 <context_type_get@plt>
    bd2f:	test   rax,rax
    bd32:	je     bdb0 <__cxa_finalize@plt+0x7f98>
    bd34:	mov    rsi,rax
    bd37:	mov    rdi,rbx
    bd3a:	call   37a0 <context_type_set@plt>
    bd3f:	test   eax,eax
    bd41:	jne    bdb0 <__cxa_finalize@plt+0x7f98>
    bd43:	mov    rdi,rbx
    bd46:	call   3db0 <context_str@plt>
    bd4b:	test   rax,rax
    bd4e:	je     bdb0 <__cxa_finalize@plt+0x7f98>
    bd50:	mov    rdi,rax
    bd53:	call   3ab0 <setfscreatecon@plt>
    bd58:	mov    r12d,eax
    bd5b:	jmp    bc10 <__cxa_finalize@plt+0x7df8>
    bd60:	mov    rbx,rdi
    bd63:	xor    r13d,r13d
    bd66:	jmp    bbe4 <__cxa_finalize@plt+0x7dcc>
    bd6b:	nop    DWORD PTR [rax+rax*1+0x0]
    bd70:	mov    DWORD PTR [rax],0x3d
    bd76:	jmp    bc06 <__cxa_finalize@plt+0x7dee>
    bd7b:	nop    DWORD PTR [rax+rax*1+0x0]
    bd80:	mov    rdi,rbx
    bd83:	xor    ebp,ebp
    bd85:	xor    ebx,ebx
    bd87:	call   3e10 <free@plt>
    bd8c:	mov    rdi,QWORD PTR [rsp+0x18]
    bd91:	mov    r12d,0xffffffff
    bd97:	call   3d20 <freecon@plt>
    bd9c:	mov    rdi,QWORD PTR [rsp+0x20]
    bda1:	call   3d20 <freecon@plt>
    bda6:	jmp    bc10 <__cxa_finalize@plt+0x7df8>
    bdab:	nop    DWORD PTR [rax+rax*1+0x0]
    bdb0:	mov    r12d,0xffffffff
    bdb6:	jmp    bc10 <__cxa_finalize@plt+0x7df8>
    bdbb:	call   3760 <__stack_chk_fail@plt>
    bdc0:	mov    rsi,rbp
    bdc3:	mov    edi,0x4
    bdc8:	call   10a80 <__cxa_finalize@plt+0xcc68>
    bdcd:	lea    rsi,[rip+0x103ad]        # 1c181 <_IO_stdin_used@@Base+0x27e1>
    bdd4:	mov    edx,0x5
    bdd9:	xor    edi,edi
    bddb:	mov    rbp,rax
    bdde:	call   3700 <dcgettext@plt>
    bde3:	mov    rbx,rax
    bde6:	call   3540 <__errno_location@plt>
    bdeb:	mov    esi,DWORD PTR [rax]
    bded:	mov    rcx,rbp
    bdf0:	mov    rdx,rbx
    bdf3:	mov    edi,0x1
    bdf8:	xor    eax,eax
    bdfa:	call   3c20 <error@plt>
    bdff:	nop
    be00:	push   r13
    be02:	push   r12
    be04:	movzx  r12d,dl
    be08:	push   rbp
    be09:	push   rbx
    be0a:	mov    rbp,rdi
    be0d:	mov    ebx,esi
    be0f:	sub    rsp,0x38
    be13:	mov    rax,QWORD PTR fs:0x28
    be1c:	mov    QWORD PTR [rsp+0x28],rax
    be21:	xor    eax,eax
    be23:	cmp    BYTE PTR [rdi],0x2f
    be26:	je     be30 <__cxa_finalize@plt+0x8018>
    be28:	test   dl,dl
    be2a:	je     bed0 <__cxa_finalize@plt+0x80b8>
    be30:	xor    r13d,r13d
    be33:	test   bl,bl
    be35:	mov    QWORD PTR [rsp+0x10],rbp
    be3a:	mov    QWORD PTR [rsp+0x18],0x0
    be43:	je     bf00 <__cxa_finalize@plt+0x80e8>
    be49:	lea    rdi,[rsp+0x10]
    be4e:	xor    edx,edx
    be50:	mov    esi,0x10
    be55:	call   13350 <__cxa_finalize@plt+0xf538>
    be5a:	mov    rbp,rax
    be5d:	jmp    be74 <__cxa_finalize@plt+0x805c>
    be5f:	nop
    be60:	mov    rdi,QWORD PTR [rbp+0x20]
    be64:	mov    esi,r12d
    be67:	call   b8a0 <__cxa_finalize@plt+0x7a88>
    be6c:	cmp    eax,0xffffffff
    be6f:	setne  al
    be72:	and    ebx,eax
    be74:	mov    rdi,rbp
    be77:	call   153c0 <fts_read@@Base>
    be7c:	test   rax,rax
    be7f:	jne    be60 <__cxa_finalize@plt+0x8048>
    be81:	call   3540 <__errno_location@plt>
    be86:	mov    r12,rax
    be89:	mov    eax,DWORD PTR [rax]
    be8b:	test   eax,eax
    be8d:	jne    bf50 <__cxa_finalize@plt+0x8138>
    be93:	mov    rdi,rbp
    be96:	call   15230 <fts_close@@Base>
    be9b:	test   eax,eax
    be9d:	jne    bf20 <__cxa_finalize@plt+0x8108>
    bea3:	mov    rdi,r13
    bea6:	call   3e10 <free@plt>
    beab:	mov    rcx,QWORD PTR [rsp+0x28]
    beb0:	xor    rcx,QWORD PTR fs:0x28
    beb9:	mov    eax,ebx
    bebb:	jne    bf87 <__cxa_finalize@plt+0x816f>
    bec1:	add    rsp,0x38
    bec5:	pop    rbx
    bec6:	pop    rbp
    bec7:	pop    r12
    bec9:	pop    r13
    becb:	ret    
    becc:	nop    DWORD PTR [rax+0x0]
    bed0:	mov    esi,0x2
    bed5:	mov    DWORD PTR [rsp+0xc],edx
    bed9:	call   cc50 <__cxa_finalize@plt+0x8e38>
    bede:	test   rax,rax
    bee1:	mov    r13,rax
    bee4:	mov    edx,DWORD PTR [rsp+0xc]
    bee8:	je     bf8c <__cxa_finalize@plt+0x8174>
    beee:	mov    rbp,rax
    bef1:	jmp    be33 <__cxa_finalize@plt+0x801b>
    bef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bf00:	mov    rdi,rbp
    bf03:	movzx  esi,dl
    bf06:	call   b8a0 <__cxa_finalize@plt+0x7a88>
    bf0b:	mov    rdi,r13
    bf0e:	cmp    eax,0xffffffff
    bf11:	setne  bl
    bf14:	call   3e10 <free@plt>
    bf19:	jmp    beab <__cxa_finalize@plt+0x8093>
    bf1b:	nop    DWORD PTR [rax+rax*1+0x0]
    bf20:	lea    rsi,[rip+0x10282]        # 1c1a9 <_IO_stdin_used@@Base+0x2809>
    bf27:	mov    edx,0x5
    bf2c:	xor    edi,edi
    bf2e:	xor    ebx,ebx
    bf30:	call   3700 <dcgettext@plt>
    bf35:	mov    esi,DWORD PTR [r12]
    bf39:	mov    rdx,rax
    bf3c:	xor    edi,edi
    bf3e:	xor    eax,eax
    bf40:	call   3c20 <error@plt>
    bf45:	jmp    bea3 <__cxa_finalize@plt+0x808b>
    bf4a:	nop    WORD PTR [rax+rax*1+0x0]
    bf50:	lea    rsi,[rip+0x10242]        # 1c199 <_IO_stdin_used@@Base+0x27f9>
    bf57:	xor    edi,edi
    bf59:	mov    edx,0x5
    bf5e:	xor    ebx,ebx
    bf60:	call   3700 <dcgettext@plt>
    bf65:	mov    esi,DWORD PTR [r12]
    bf69:	mov    rdx,rax
    bf6c:	xor    edi,edi
    bf6e:	xor    eax,eax
    bf70:	call   3c20 <error@plt>
    bf75:	mov    rdi,rbp
    bf78:	call   15230 <fts_close@@Base>
    bf7d:	test   eax,eax
    bf7f:	je     bea3 <__cxa_finalize@plt+0x808b>
    bf85:	jmp    bf20 <__cxa_finalize@plt+0x8108>
    bf87:	call   3760 <__stack_chk_fail@plt>
    bf8c:	mov    rsi,rbp
    bf8f:	mov    edi,0x4
    bf94:	call   10a80 <__cxa_finalize@plt+0xcc68>
    bf99:	lea    rsi,[rip+0x101e1]        # 1c181 <_IO_stdin_used@@Base+0x27e1>
    bfa0:	mov    edx,0x5
    bfa5:	xor    edi,edi
    bfa7:	mov    rbp,rax
    bfaa:	call   3700 <dcgettext@plt>
    bfaf:	mov    rbx,rax
    bfb2:	call   3540 <__errno_location@plt>
    bfb7:	mov    esi,DWORD PTR [rax]
    bfb9:	mov    rcx,rbp
    bfbc:	mov    rdx,rbx
    bfbf:	mov    edi,0x1
    bfc4:	xor    eax,eax
    bfc6:	call   3c20 <error@plt>
    bfcb:	nop    DWORD PTR [rax+rax*1+0x0]
    bfd0:	push   r12
    bfd2:	push   rbp
    bfd3:	mov    r12,rdi
    bfd6:	push   rbx
    bfd7:	mov    rbp,rdx
    bfda:	call   eff0 <__cxa_finalize@plt+0xb1d8>
    bfdf:	cmp    eax,0xfffffffe
    bfe2:	mov    ebx,eax
    bfe4:	je     c030 <__cxa_finalize@plt+0x8218>
    bfe6:	cmp    eax,0xffffffff
    bfe9:	jne    c022 <__cxa_finalize@plt+0x820a>
    bfeb:	mov    rdi,rbp
    bfee:	call   10d50 <__cxa_finalize@plt+0xcf38>
    bff3:	lea    rsi,[rip+0xf9a3]        # 1b99d <_IO_stdin_used@@Base+0x1ffd>
    bffa:	mov    edx,0x5
    bfff:	xor    edi,edi
    c001:	mov    r12,rax
    c004:	call   3700 <dcgettext@plt>
    c009:	mov    rbp,rax
    c00c:	call   3540 <__errno_location@plt>
    c011:	mov    esi,DWORD PTR [rax]
    c013:	mov    rcx,r12
    c016:	mov    rdx,rbp
    c019:	xor    edi,edi
    c01b:	xor    eax,eax
    c01d:	call   3c20 <error@plt>
    c022:	mov    eax,ebx
    c024:	pop    rbx
    c025:	pop    rbp
    c026:	pop    r12
    c028:	ret    
    c029:	nop    DWORD PTR [rax+0x0]
    c030:	mov    rdi,r12
    c033:	call   10d50 <__cxa_finalize@plt+0xcf38>
    c038:	mov    rbp,rax
    c03b:	call   3540 <__errno_location@plt>
    c040:	mov    esi,DWORD PTR [rax]
    c042:	lea    rdx,[rip+0x101cd]        # 1c216 <_IO_stdin_used@@Base+0x2876>
    c049:	mov    rcx,rbp
    c04c:	xor    eax,eax
    c04e:	xor    edi,edi
    c050:	call   3c20 <error@plt>
    c055:	mov    eax,ebx
    c057:	pop    rbx
    c058:	pop    rbp
    c059:	pop    r12
    c05b:	ret    
    c05c:	nop    DWORD PTR [rax+0x0]
    c060:	push   r12
    c062:	push   rbp
    c063:	mov    rbp,rdi
    c066:	push   rbx
    c067:	call   f070 <__cxa_finalize@plt+0xb258>
    c06c:	test   eax,eax
    c06e:	mov    ebx,eax
    c070:	je     c0a9 <__cxa_finalize@plt+0x8291>
    c072:	mov    rdi,rbp
    c075:	call   10d50 <__cxa_finalize@plt+0xcf38>
    c07a:	lea    rsi,[rip+0xd969]        # 199ea <_IO_stdin_used@@Base+0x4a>
    c081:	mov    edx,0x5
    c086:	xor    edi,edi
    c088:	mov    r12,rax
    c08b:	call   3700 <dcgettext@plt>
    c090:	mov    rbp,rax
    c093:	call   3540 <__errno_location@plt>
    c098:	mov    esi,DWORD PTR [rax]
    c09a:	mov    rcx,r12
    c09d:	mov    rdx,rbp
    c0a0:	xor    edi,edi
    c0a2:	xor    eax,eax
    c0a4:	call   3c20 <error@plt>
    c0a9:	mov    eax,ebx
    c0ab:	pop    rbx
    c0ac:	pop    rbp
    c0ad:	pop    r12
    c0af:	ret    
    c0b0:	push   r15
    c0b2:	push   r14
    c0b4:	mov    eax,0x401
    c0b9:	push   r13
    c0bb:	push   r12
    c0bd:	mov    r13,rdi
    c0c0:	push   rbp
    c0c1:	push   rbx
    c0c2:	lea    rbx,[rsi+0x1]
    c0c6:	movabs r14,0x3fffffffffffffff
    c0d0:	movabs r15,0x7ffffffffffffffe
    c0da:	sub    rsp,0x8
    c0de:	cmp    rsi,0x401
    c0e5:	cmovae rbx,rax
    c0e9:	nop    DWORD PTR [rax+0x0]
    c0f0:	mov    rdi,rbx
    c0f3:	call   3ac0 <malloc@plt>
    c0f8:	test   rax,rax
    c0fb:	mov    rbp,rax
    c0fe:	je     c13b <__cxa_finalize@plt+0x8323>
    c100:	mov    rdx,rbx
    c103:	mov    rsi,rax
    c106:	mov    rdi,r13
    c109:	call   3620 <readlink@plt>
    c10e:	test   rax,rax
    c111:	mov    r12,rax
    c114:	js     c168 <__cxa_finalize@plt+0x8350>
    c116:	cmp    rbx,r12
    c119:	ja     c180 <__cxa_finalize@plt+0x8368>
    c11b:	mov    rdi,rbp
    c11e:	call   3e10 <free@plt>
    c123:	cmp    rbx,r14
    c126:	ja     c150 <__cxa_finalize@plt+0x8338>
    c128:	add    rbx,rbx
    c12b:	mov    rdi,rbx
    c12e:	call   3ac0 <malloc@plt>
    c133:	test   rax,rax
    c136:	mov    rbp,rax
    c139:	jne    c100 <__cxa_finalize@plt+0x82e8>
    c13b:	add    rsp,0x8
    c13f:	mov    rax,rbp
    c142:	pop    rbx
    c143:	pop    rbp
    c144:	pop    r12
    c146:	pop    r13
    c148:	pop    r14
    c14a:	pop    r15
    c14c:	ret    
    c14d:	nop    DWORD PTR [rax]
    c150:	cmp    rbx,r15
    c153:	ja     c190 <__cxa_finalize@plt+0x8378>
    c155:	movabs rbx,0x7fffffffffffffff
    c15f:	jmp    c0f0 <__cxa_finalize@plt+0x82d8>
    c161:	nop    DWORD PTR [rax+0x0]
    c168:	call   3540 <__errno_location@plt>
    c16d:	cmp    DWORD PTR [rax],0x22
    c170:	je     c116 <__cxa_finalize@plt+0x82fe>
    c172:	mov    rdi,rbp
    c175:	xor    ebp,ebp
    c177:	call   3e10 <free@plt>
    c17c:	jmp    c13b <__cxa_finalize@plt+0x8323>
    c17e:	xchg   ax,ax
    c180:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
    c186:	jmp    c13b <__cxa_finalize@plt+0x8323>
    c188:	nop    DWORD PTR [rax+rax*1+0x0]
    c190:	call   3540 <__errno_location@plt>
    c195:	xor    ebp,ebp
    c197:	mov    DWORD PTR [rax],0xc
    c19d:	jmp    c13b <__cxa_finalize@plt+0x8323>
    c19f:	nop
    c1a0:	mov    edi,0x1
    c1a5:	jmp    5180 <__cxa_finalize@plt+0x1368>
    c1aa:	nop    WORD PTR [rax+rax*1+0x0]
    c1b0:	push   r15
    c1b2:	push   r14
    c1b4:	mov    r15,rsi
    c1b7:	push   r13
    c1b9:	push   r12
    c1bb:	mov    r13,rcx
    c1be:	push   rbp
    c1bf:	push   rbx
    c1c0:	mov    rbp,rdx
    c1c3:	sub    rsp,0x28
    c1c7:	mov    QWORD PTR [rsp+0x8],rdi
    c1cc:	mov    QWORD PTR [rsp+0x18],rdx
    c1d1:	call   3720 <strlen@plt>
    c1d6:	mov    r14,QWORD PTR [r15]
    c1d9:	mov    QWORD PTR [rsp],0xffffffffffffffff
    c1e1:	test   r14,r14
    c1e4:	je     c29d <__cxa_finalize@plt+0x8485>
    c1ea:	mov    r12,rax
    c1ed:	mov    BYTE PTR [rsp+0x17],0x0
    c1f2:	xor    ebx,ebx
    c1f4:	jmp    c247 <__cxa_finalize@plt+0x842f>
    c1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c200:	mov    rax,QWORD PTR [rsp+0x18]
    c205:	test   rax,rax
    c208:	je     c2b0 <__cxa_finalize@plt+0x8498>
    c20e:	mov    rdi,QWORD PTR [rsp]
    c212:	mov    rdx,r13
    c215:	mov    rsi,rbp
    c218:	imul   rdi,r13
    c21c:	add    rdi,rax
    c21f:	call   3930 <memcmp@plt>
    c224:	test   eax,eax
    c226:	movzx  eax,BYTE PTR [rsp+0x17]
    c22b:	mov    ecx,0x1
    c230:	cmovne eax,ecx
    c233:	mov    BYTE PTR [rsp+0x17],al
    c237:	add    rbx,0x1
    c23b:	add    rbp,r13
    c23e:	mov    r14,QWORD PTR [r15+rbx*8]
    c242:	test   r14,r14
    c245:	je     c288 <__cxa_finalize@plt+0x8470>
    c247:	mov    rsi,QWORD PTR [rsp+0x8]
    c24c:	mov    rdx,r12
    c24f:	mov    rdi,r14
    c252:	call   3580 <strncmp@plt>
    c257:	test   eax,eax
    c259:	jne    c237 <__cxa_finalize@plt+0x841f>
    c25b:	mov    rdi,r14
    c25e:	call   3720 <strlen@plt>
    c263:	cmp    rax,r12
    c266:	je     c2c0 <__cxa_finalize@plt+0x84a8>
    c268:	cmp    QWORD PTR [rsp],0xffffffffffffffff
    c26d:	jne    c200 <__cxa_finalize@plt+0x83e8>
    c26f:	mov    QWORD PTR [rsp],rbx
    c273:	add    rbx,0x1
    c277:	add    rbp,r13
    c27a:	mov    r14,QWORD PTR [r15+rbx*8]
    c27e:	test   r14,r14
    c281:	jne    c247 <__cxa_finalize@plt+0x842f>
    c283:	nop    DWORD PTR [rax+rax*1+0x0]
    c288:	cmp    BYTE PTR [rsp+0x17],0x0
    c28d:	mov    rax,0xfffffffffffffffe
    c294:	cmove  rax,QWORD PTR [rsp]
    c299:	mov    QWORD PTR [rsp],rax
    c29d:	mov    rax,QWORD PTR [rsp]
    c2a1:	add    rsp,0x28
    c2a5:	pop    rbx
    c2a6:	pop    rbp
    c2a7:	pop    r12
    c2a9:	pop    r13
    c2ab:	pop    r14
    c2ad:	pop    r15
    c2af:	ret    
    c2b0:	mov    BYTE PTR [rsp+0x17],0x1
    c2b5:	jmp    c237 <__cxa_finalize@plt+0x841f>
    c2b7:	nop    WORD PTR [rax+rax*1+0x0]
    c2c0:	mov    QWORD PTR [rsp],rbx
    c2c4:	jmp    c29d <__cxa_finalize@plt+0x8485>
    c2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c2d0:	cmp    rdx,0xffffffffffffffff
    c2d4:	push   r12
    c2d6:	mov    edx,0x5
    c2db:	push   rbp
    c2dc:	mov    r12,rsi
    c2df:	push   rbx
    c2e0:	mov    rbp,rdi
    c2e3:	je     c330 <__cxa_finalize@plt+0x8518>
    c2e5:	lea    rsi,[rip+0xfeee]        # 1c1da <_IO_stdin_used@@Base+0x283a>
    c2ec:	xor    edi,edi
    c2ee:	call   3700 <dcgettext@plt>
    c2f3:	mov    rbx,rax
    c2f6:	mov    rsi,rbp
    c2f9:	mov    edi,0x1
    c2fe:	call   10d30 <__cxa_finalize@plt+0xcf18>
    c303:	mov    rdx,r12
    c306:	mov    rbp,rax
    c309:	mov    esi,0x8
    c30e:	xor    edi,edi
    c310:	call   10960 <__cxa_finalize@plt+0xcb48>
    c315:	mov    r8,rbp
    c318:	mov    rdx,rbx
    c31b:	mov    rcx,rax
    c31e:	pop    rbx
    c31f:	pop    rbp
    c320:	pop    r12
    c322:	xor    esi,esi
    c324:	xor    edi,edi
    c326:	xor    eax,eax
    c328:	jmp    3c20 <error@plt>
    c32d:	nop    DWORD PTR [rax]
    c330:	lea    rsi,[rip+0xfe88]        # 1c1bf <_IO_stdin_used@@Base+0x281f>
    c337:	xor    edi,edi
    c339:	call   3700 <dcgettext@plt>
    c33e:	mov    rbx,rax
    c341:	jmp    c2f6 <__cxa_finalize@plt+0x84de>
    c343:	nop    DWORD PTR [rax]
    c346:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c350:	push   r15
    c352:	push   r14
    c354:	mov    r14,rdi
    c357:	push   r13
    c359:	push   r12
    c35b:	xor    edi,edi
    c35d:	push   rbp
    c35e:	push   rbx
    c35f:	mov    rbp,rsi
    c362:	lea    rsi,[rip+0xfe8e]        # 1c1f7 <_IO_stdin_used@@Base+0x2857>
    c369:	mov    r12,rdx
    c36c:	mov    edx,0x5
    c371:	sub    rsp,0x8
    c375:	mov    rbx,QWORD PTR [rip+0x215d64]        # 2220e0 <stderr@@GLIBC_2.2.5>
    c37c:	call   3700 <dcgettext@plt>
    c381:	mov    rdi,rax
    c384:	mov    rsi,rbx
    c387:	call   3950 <fputs_unlocked@plt>
    c38c:	mov    r15,QWORD PTR [r14]
    c38f:	test   r15,r15
    c392:	je     c428 <__cxa_finalize@plt+0x8610>
    c398:	xor    r13d,r13d
    c39b:	xor    ebx,ebx
    c39d:	jmp    c3d8 <__cxa_finalize@plt+0x85c0>
    c39f:	nop
    c3a0:	mov    rdi,r15
    c3a3:	add    rbx,0x1
    c3a7:	mov    r13,rbp
    c3aa:	call   10d50 <__cxa_finalize@plt+0xcf38>
    c3af:	mov    rdi,QWORD PTR [rip+0x215d2a]        # 2220e0 <stderr@@GLIBC_2.2.5>
    c3b6:	lea    rdx,[rip+0xfe4f]        # 1c20c <_IO_stdin_used@@Base+0x286c>
    c3bd:	mov    rcx,rax
    c3c0:	mov    esi,0x1
    c3c5:	xor    eax,eax
    c3c7:	add    rbp,r12
    c3ca:	call   3d70 <__fprintf_chk@plt>
    c3cf:	mov    r15,QWORD PTR [r14+rbx*8]
    c3d3:	test   r15,r15
    c3d6:	je     c428 <__cxa_finalize@plt+0x8610>
    c3d8:	test   rbx,rbx
    c3db:	je     c3a0 <__cxa_finalize@plt+0x8588>
    c3dd:	mov    rdx,r12
    c3e0:	mov    rsi,rbp
    c3e3:	mov    rdi,r13
    c3e6:	call   3930 <memcmp@plt>
    c3eb:	test   eax,eax
    c3ed:	jne    c3a0 <__cxa_finalize@plt+0x8588>
    c3ef:	mov    rdi,r15
    c3f2:	add    rbx,0x1
    c3f6:	add    rbp,r12
    c3f9:	call   10d50 <__cxa_finalize@plt+0xcf38>
    c3fe:	mov    rdi,QWORD PTR [rip+0x215cdb]        # 2220e0 <stderr@@GLIBC_2.2.5>
    c405:	lea    rdx,[rip+0xfe08]        # 1c214 <_IO_stdin_used@@Base+0x2874>
    c40c:	mov    rcx,rax
    c40f:	mov    esi,0x1
    c414:	xor    eax,eax
    c416:	call   3d70 <__fprintf_chk@plt>
    c41b:	mov    r15,QWORD PTR [r14+rbx*8]
    c41f:	test   r15,r15
    c422:	jne    c3d8 <__cxa_finalize@plt+0x85c0>
    c424:	nop    DWORD PTR [rax+0x0]
    c428:	mov    rdi,QWORD PTR [rip+0x215cb1]        # 2220e0 <stderr@@GLIBC_2.2.5>
    c42f:	mov    rax,QWORD PTR [rdi+0x28]
    c433:	cmp    rax,QWORD PTR [rdi+0x30]
    c437:	jae    c458 <__cxa_finalize@plt+0x8640>
    c439:	lea    rdx,[rax+0x1]
    c43d:	mov    QWORD PTR [rdi+0x28],rdx
    c441:	mov    BYTE PTR [rax],0xa
    c444:	add    rsp,0x8
    c448:	pop    rbx
    c449:	pop    rbp
    c44a:	pop    r12
    c44c:	pop    r13
    c44e:	pop    r14
    c450:	pop    r15
    c452:	ret    
    c453:	nop    DWORD PTR [rax+rax*1+0x0]
    c458:	add    rsp,0x8
    c45c:	mov    esi,0xa
    c461:	pop    rbx
    c462:	pop    rbp
    c463:	pop    r12
    c465:	pop    r13
    c467:	pop    r14
    c469:	pop    r15
    c46b:	jmp    37d0 <__overflow@plt>
    c470:	push   r15
    c472:	push   r14
    c474:	mov    r14,rdi
    c477:	push   r13
    c479:	push   r12
    c47b:	mov    r12,rsi
    c47e:	push   rbp
    c47f:	push   rbx
    c480:	mov    rbp,rcx
    c483:	mov    rbx,rdx
    c486:	mov    rcx,r8
    c489:	mov    rdx,rbp
    c48c:	sub    rsp,0x8
    c490:	mov    rsi,rbx
    c493:	mov    rdi,r12
    c496:	mov    r15,r8
    c499:	mov    r13,r9
    c49c:	call   c1b0 <__cxa_finalize@plt+0x8398>
    c4a1:	test   rax,rax
    c4a4:	js     c4b5 <__cxa_finalize@plt+0x869d>
    c4a6:	add    rsp,0x8
    c4aa:	pop    rbx
    c4ab:	pop    rbp
    c4ac:	pop    r12
    c4ae:	pop    r13
    c4b0:	pop    r14
    c4b2:	pop    r15
    c4b4:	ret    
    c4b5:	mov    rdx,rax
    c4b8:	mov    rsi,r12
    c4bb:	mov    rdi,r14
    c4be:	call   c2d0 <__cxa_finalize@plt+0x84b8>
    c4c3:	mov    rdx,r15
    c4c6:	mov    rsi,rbp
    c4c9:	mov    rdi,rbx
    c4cc:	call   c350 <__cxa_finalize@plt+0x8538>
    c4d1:	call   r13
    c4d4:	mov    rax,0xffffffffffffffff
    c4db:	jmp    c4a6 <__cxa_finalize@plt+0x868e>
    c4dd:	nop    DWORD PTR [rax]
    c4e0:	push   r14
    c4e2:	push   r13
    c4e4:	push   r12
    c4e6:	push   rbp
    c4e7:	push   rbx
    c4e8:	mov    r14,QWORD PTR [rsi]
    c4eb:	test   r14,r14
    c4ee:	je     c521 <__cxa_finalize@plt+0x8709>
    c4f0:	mov    r12,rcx
    c4f3:	mov    r13,rdi
    c4f6:	mov    rbp,rdx
    c4f9:	lea    rbx,[rsi+0x8]
    c4fd:	jmp    c50f <__cxa_finalize@plt+0x86f7>
    c4ff:	nop
    c500:	mov    r14,QWORD PTR [rbx]
    c503:	add    rbp,r12
    c506:	add    rbx,0x8
    c50a:	test   r14,r14
    c50d:	je     c521 <__cxa_finalize@plt+0x8709>
    c50f:	mov    rdx,r12
    c512:	mov    rsi,rbp
    c515:	mov    rdi,r13
    c518:	call   3930 <memcmp@plt>
    c51d:	test   eax,eax
    c51f:	jne    c500 <__cxa_finalize@plt+0x86e8>
    c521:	pop    rbx
    c522:	mov    rax,r14
    c525:	pop    rbp
    c526:	pop    r12
    c528:	pop    r13
    c52a:	pop    r14
    c52c:	ret    
    c52d:	nop    DWORD PTR [rax]
    c530:	push   r15
    c532:	push   r14
    c534:	push   r13
    c536:	push   r12
    c538:	mov    r13,rsi
    c53b:	push   rbp
    c53c:	push   rbx
    c53d:	mov    rbx,rdi
    c540:	sub    rsp,0x8
    c544:	call   d600 <__cxa_finalize@plt+0x97e8>
    c549:	mov    rdi,rax
    c54c:	mov    rbp,rax
    c54f:	call   d660 <__cxa_finalize@plt+0x9848>
    c554:	cmp    rax,0xe
    c558:	ja     c570 <__cxa_finalize@plt+0x8758>
    c55a:	add    rsp,0x8
    c55e:	pop    rbx
    c55f:	pop    rbp
    c560:	pop    r12
    c562:	pop    r13
    c564:	pop    r14
    c566:	pop    r15
    c568:	ret    
    c569:	nop    DWORD PTR [rax+0x0]
    c570:	mov    esi,0x2e
    c575:	movzx  r15d,WORD PTR [rbp+0x0]
    c57a:	mov    r12,rax
    c57d:	mov    WORD PTR [rbp+0x0],si
    c581:	call   3540 <__errno_location@plt>
    c586:	mov    esi,0x3
    c58b:	mov    DWORD PTR [rax],0x0
    c591:	mov    rdi,rbx
    c594:	mov    r14,rax
    c597:	call   3690 <pathconf@plt>
    c59c:	test   rax,rax
    c59f:	js     c5e0 <__cxa_finalize@plt+0x87c8>
    c5a1:	mov    rdx,rax
    c5a4:	cmp    r12,rdx
    c5a7:	mov    WORD PTR [rbp+0x0],r15w
    c5ac:	jbe    c55a <__cxa_finalize@plt+0x8742>
    c5ae:	lea    rsi,[rbx+r13*1]
    c5b2:	lea    rax,[rdx-0x1]
    c5b6:	sub    rsi,rbp
    c5b9:	cmp    rsi,rdx
    c5bc:	cmovae rsi,rax
    c5c0:	mov    BYTE PTR [rbp+rsi*1+0x0],0x7e
    c5c5:	mov    BYTE PTR [rbp+rsi*1+0x1],0x0
    c5ca:	add    rsp,0x8
    c5ce:	pop    rbx
    c5cf:	pop    rbp
    c5d0:	pop    r12
    c5d2:	pop    r13
    c5d4:	pop    r14
    c5d6:	pop    r15
    c5d8:	ret    
    c5d9:	nop    DWORD PTR [rax+0x0]
    c5e0:	mov    ecx,DWORD PTR [r14]
    c5e3:	mov    edx,0xff
    c5e8:	test   ecx,ecx
    c5ea:	jne    c5a4 <__cxa_finalize@plt+0x878c>
    c5ec:	jmp    c5a1 <__cxa_finalize@plt+0x8789>
    c5ee:	xchg   ax,ax
    c5f0:	test   rdi,rdi
    c5f3:	push   rbx
    c5f4:	mov    rbx,rdi
    c5f7:	je     c620 <__cxa_finalize@plt+0x8808>
    c5f9:	cmp    BYTE PTR [rbx],0x0
    c5fc:	jne    c610 <__cxa_finalize@plt+0x87f8>
    c5fe:	lea    rbx,[rip+0xfc14]        # 1c219 <_IO_stdin_used@@Base+0x2879>
    c605:	mov    QWORD PTR [rip+0x215f74],rbx        # 222580 <simple_backup_suffix@@Base>
    c60c:	pop    rbx
    c60d:	ret    
    c60e:	xchg   ax,ax
    c610:	mov    rdi,rbx
    c613:	call   d600 <__cxa_finalize@plt+0x97e8>
    c618:	cmp    rax,rbx
    c61b:	jne    c5fe <__cxa_finalize@plt+0x87e6>
    c61d:	jmp    c605 <__cxa_finalize@plt+0x87ed>
    c61f:	nop
    c620:	lea    rdi,[rip+0xfbf4]        # 1c21b <_IO_stdin_used@@Base+0x287b>
    c627:	call   34e0 <getenv@plt>
    c62c:	test   rax,rax
    c62f:	mov    rbx,rax
    c632:	je     c5fe <__cxa_finalize@plt+0x87e6>
    c634:	jmp    c5f9 <__cxa_finalize@plt+0x87e1>
    c636:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c640:	push   r15
    c642:	push   r14
    c644:	push   r13
    c646:	push   r12
    c648:	push   rbp
    c649:	push   rbx
    c64a:	mov    rbx,rdi
    c64d:	sub    rsp,0x68
    c651:	mov    QWORD PTR [rsp+0x18],rdi
    c656:	mov    DWORD PTR [rsp+0x14],esi
    c65a:	mov    BYTE PTR [rsp+0x3f],dl
    c65e:	call   d600 <__cxa_finalize@plt+0x97e8>
    c663:	mov    rdi,rax
    c666:	mov    r13,rax
    c669:	call   3720 <strlen@plt>
    c66e:	mov    rdi,QWORD PTR [rip+0x215f0b]        # 222580 <simple_backup_suffix@@Base>
    c675:	sub    r13,rbx
    c678:	add    rax,r13
    c67b:	mov    QWORD PTR [rsp+0x20],rax
    c680:	test   rdi,rdi
    c683:	je     cacc <__cxa_finalize@plt+0x8cb4>
    c689:	call   3720 <strlen@plt>
    c68e:	mov    rsi,QWORD PTR [rsp+0x20]
    c693:	add    rax,0x1
    c697:	cmp    rax,0x9
    c69b:	mov    QWORD PTR [rsp+0x50],rax
    c6a0:	lea    rdx,[rsi+0x1]
    c6a4:	mov    rsi,rax
    c6a7:	mov    eax,0x9
    c6ac:	cmovae rax,rsi
    c6b0:	add    rax,rdx
    c6b3:	mov    QWORD PTR [rsp+0x28],rdx
    c6b8:	mov    rdi,rax
    c6bb:	mov    QWORD PTR [rsp+0x48],rax
    c6c0:	call   3ac0 <malloc@plt>
    c6c5:	test   rax,rax
    c6c8:	mov    r15,rax
    c6cb:	je     c991 <__cxa_finalize@plt+0x8b79>
    c6d1:	xor    r14d,r14d
    c6d4:	mov    rdx,QWORD PTR [rsp+0x28]
    c6d9:	mov    rsi,QWORD PTR [rsp+0x18]
    c6de:	mov    rdi,r15
    c6e1:	call   3a40 <memcpy@plt>
    c6e6:	cmp    DWORD PTR [rsp+0x14],0x1
    c6eb:	je     c9b8 <__cxa_finalize@plt+0x8ba0>
    c6f1:	lea    rbp,[r15+r13*1]
    c6f5:	mov    rdi,rbp
    c6f8:	call   d660 <__cxa_finalize@plt+0x9848>
    c6fd:	test   r14,r14
    c700:	mov    r12,rax
    c703:	je     ca28 <__cxa_finalize@plt+0x8c10>
    c709:	mov    rdi,r14
    c70c:	call   38c0 <rewinddir@plt>
    c711:	mov    rax,QWORD PTR [rsp+0x48]
    c716:	mov    QWORD PTR [rsp+0x30],0x1
    c71f:	mov    DWORD PTR [rsp+0x38],0x2
    c727:	mov    QWORD PTR [rsp+0x40],rax
    c72c:	lea    rax,[r12+0x4]
    c731:	mov    QWORD PTR [rsp+0x8],rax
    c736:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c740:	mov    rdi,r14
    c743:	call   3aa0 <readdir@plt>
    c748:	test   rax,rax
    c74b:	je     c900 <__cxa_finalize@plt+0x8ae8>
    c751:	cmp    QWORD PTR [rax],0x0
    c755:	je     c740 <__cxa_finalize@plt+0x8928>
    c757:	lea    rbx,[rax+0x13]
    c75b:	mov    rdi,rbx
    c75e:	call   3720 <strlen@plt>
    c763:	cmp    rax,QWORD PTR [rsp+0x8]
    c768:	jb     c740 <__cxa_finalize@plt+0x8928>
    c76a:	lea    rbp,[r12+0x2]
    c76f:	lea    rdi,[r15+r13*1]
    c773:	mov    rsi,rbx
    c776:	mov    rdx,rbp
    c779:	call   3930 <memcmp@plt>
    c77e:	test   eax,eax
    c780:	jne    c740 <__cxa_finalize@plt+0x8928>
    c782:	add    rbx,rbp
    c785:	movzx  eax,BYTE PTR [rbx]
    c788:	lea    edx,[rax-0x31]
    c78b:	cmp    dl,0x8
    c78e:	ja     c740 <__cxa_finalize@plt+0x8928>
    c790:	cmp    al,0x39
    c792:	movsx  eax,BYTE PTR [rbx+0x1]
    c796:	mov    ebp,0x1
    c79b:	sete   r8b
    c79f:	mov    ecx,eax
    c7a1:	sub    eax,0x30
    c7a4:	cmp    eax,0x9
    c7a7:	ja     c7cb <__cxa_finalize@plt+0x89b3>
    c7a9:	nop    DWORD PTR [rax+0x0]
    c7b0:	cmp    cl,0x39
    c7b3:	sete   al
    c7b6:	add    rbp,0x1
    c7ba:	and    r8d,eax
    c7bd:	movsx  eax,BYTE PTR [rbx+rbp*1]
    c7c1:	mov    ecx,eax
    c7c3:	sub    eax,0x30
    c7c6:	cmp    eax,0x9
    c7c9:	jbe    c7b0 <__cxa_finalize@plt+0x8998>
    c7cb:	cmp    cl,0x7e
    c7ce:	jne    c740 <__cxa_finalize@plt+0x8928>
    c7d4:	cmp    BYTE PTR [rbx+rbp*1+0x1],0x0
    c7d9:	jne    c740 <__cxa_finalize@plt+0x8928>
    c7df:	mov    rdx,QWORD PTR [rsp+0x30]
    c7e4:	cmp    rdx,rbp
    c7e7:	jb     c814 <__cxa_finalize@plt+0x89fc>
    c7e9:	mov    BYTE PTR [rsp+0x58],r8b
    c7ee:	jne    c740 <__cxa_finalize@plt+0x8928>
    c7f4:	mov    rax,QWORD PTR [rsp+0x20]
    c7f9:	mov    rsi,rbx
    c7fc:	lea    rdi,[r15+rax*1+0x2]
    c801:	call   3930 <memcmp@plt>
    c806:	test   eax,eax
    c808:	movzx  r8d,BYTE PTR [rsp+0x58]
    c80e:	jg     c740 <__cxa_finalize@plt+0x8928>
    c814:	movzx  esi,r8b
    c818:	movzx  r9d,r8b
    c81c:	mov    DWORD PTR [rsp+0x38],esi
    c820:	mov    rsi,QWORD PTR [rsp+0x20]
    c825:	lea    rax,[r9+rbp*1]
    c829:	mov    QWORD PTR [rsp+0x30],rax
    c82e:	lea    rcx,[rsi+rax*1+0x4]
    c833:	cmp    rcx,QWORD PTR [rsp+0x40]
    c838:	jbe    ca60 <__cxa_finalize@plt+0x8c48>
    c83e:	mov    edx,0x2
    c843:	xor    esi,esi
    c845:	mov    rax,rdx
    c848:	mul    rcx
    c84b:	jo     caf3 <__cxa_finalize@plt+0x8cdb>
    c851:	test   rax,rax
    c854:	js     ca90 <__cxa_finalize@plt+0x8c78>
    c85a:	test   rsi,rsi
    c85d:	jne    ca90 <__cxa_finalize@plt+0x8c78>
    c863:	lea    rax,[rcx+rcx*1]
    c867:	mov    QWORD PTR [rsp+0x40],rax
    c86c:	mov    rsi,QWORD PTR [rsp+0x40]
    c871:	mov    rdi,r15
    c874:	mov    QWORD PTR [rsp+0x58],r9
    c879:	call   3b70 <realloc@plt>
    c87e:	test   rax,rax
    c881:	mov    r8,rax
    c884:	mov    r9,QWORD PTR [rsp+0x58]
    c889:	je     ca70 <__cxa_finalize@plt+0x8c58>
    c88f:	mov    rax,QWORD PTR [rsp+0x20]
    c894:	mov    edx,0x7e2e
    c899:	mov    rsi,rbx
    c89c:	mov    QWORD PTR [rsp+0x58],r8
    c8a1:	add    rax,r8
    c8a4:	lea    rcx,[rax+r9*1+0x2]
    c8a9:	mov    WORD PTR [rax],dx
    c8ac:	lea    rdx,[rbp+0x2]
    c8b0:	mov    BYTE PTR [rax+0x2],0x30
    c8b4:	mov    rdi,rcx
    c8b7:	call   3a40 <memcpy@plt>
    c8bc:	add    rbp,rax
    c8bf:	mov    r8,QWORD PTR [rsp+0x58]
    c8c4:	movzx  edx,BYTE PTR [rbp-0x1]
    c8c8:	lea    rax,[rbp-0x1]
    c8cc:	cmp    dl,0x39
    c8cf:	jne    c8e7 <__cxa_finalize@plt+0x8acf>
    c8d1:	nop    DWORD PTR [rax+0x0]
    c8d8:	mov    BYTE PTR [rax],0x30
    c8db:	sub    rax,0x1
    c8df:	movzx  edx,BYTE PTR [rax]
    c8e2:	cmp    dl,0x39
    c8e5:	je     c8d8 <__cxa_finalize@plt+0x8ac0>
    c8e7:	add    edx,0x1
    c8ea:	mov    rdi,r14
    c8ed:	mov    r15,r8
    c8f0:	mov    BYTE PTR [rax],dl
    c8f2:	call   3aa0 <readdir@plt>
    c8f7:	test   rax,rax
    c8fa:	jne    c751 <__cxa_finalize@plt+0x8939>
    c900:	mov    eax,DWORD PTR [rsp+0x38]
    c904:	cmp    eax,0x2
    c907:	je     c9e0 <__cxa_finalize@plt+0x8bc8>
    c90d:	cmp    eax,0x3
    c910:	je     ca70 <__cxa_finalize@plt+0x8c58>
    c916:	cmp    eax,0x1
    c919:	je     ca10 <__cxa_finalize@plt+0x8bf8>
    c91f:	cmp    BYTE PTR [rsp+0x3f],0x0
    c924:	je     cadd <__cxa_finalize@plt+0x8cc5>
    c92a:	test   r14,r14
    c92d:	je     c9a8 <__cxa_finalize@plt+0x8b90>
    c92f:	mov    rdi,r14
    c932:	call   39e0 <dirfd@plt>
    c937:	test   eax,eax
    c939:	mov    edx,eax
    c93b:	lea    rcx,[r15+r13*1]
    c93f:	js     c9a8 <__cxa_finalize@plt+0x8b90>
    c941:	xor    r8d,r8d
    c944:	cmp    DWORD PTR [rsp+0x14],0x1
    c949:	mov    rsi,QWORD PTR [rsp+0x18]
    c94e:	mov    edi,0xffffff9c
    c953:	setne  r8b
    c957:	call   10d70 <__cxa_finalize@plt+0xcf58>
    c95c:	test   eax,eax
    c95e:	je     cadd <__cxa_finalize@plt+0x8cc5>
    c964:	call   3540 <__errno_location@plt>
    c969:	mov    ebp,DWORD PTR [rax]
    c96b:	cmp    ebp,0x11
    c96e:	je     c6d4 <__cxa_finalize@plt+0x88bc>
    c974:	test   r14,r14
    c977:	mov    rbx,rax
    c97a:	je     c984 <__cxa_finalize@plt+0x8b6c>
    c97c:	mov    rdi,r14
    c97f:	call   38e0 <closedir@plt>
    c984:	mov    rdi,r15
    c987:	xor    r15d,r15d
    c98a:	call   3e10 <free@plt>
    c98f:	mov    DWORD PTR [rbx],ebp
    c991:	add    rsp,0x68
    c995:	mov    rax,r15
    c998:	pop    rbx
    c999:	pop    rbp
    c99a:	pop    r12
    c99c:	pop    r13
    c99e:	pop    r14
    c9a0:	pop    r15
    c9a2:	ret    
    c9a3:	nop    DWORD PTR [rax+rax*1+0x0]
    c9a8:	mov    rcx,r15
    c9ab:	mov    edx,0xffffff9c
    c9b0:	xor    r13d,r13d
    c9b3:	jmp    c941 <__cxa_finalize@plt+0x8b29>
    c9b5:	nop    DWORD PTR [rax]
    c9b8:	mov    rax,QWORD PTR [rsp+0x20]
    c9bd:	mov    rdx,QWORD PTR [rsp+0x50]
    c9c2:	mov    rsi,QWORD PTR [rip+0x215bb7]        # 222580 <simple_backup_suffix@@Base>
    c9c9:	lea    rdi,[r15+rax*1]
    c9cd:	call   3a40 <memcpy@plt>
    c9d2:	jmp    c91f <__cxa_finalize@plt+0x8b07>
    c9d7:	nop    WORD PTR [rax+rax*1+0x0]
    c9e0:	cmp    DWORD PTR [rsp+0x14],0x2
    c9e5:	jne    ca10 <__cxa_finalize@plt+0x8bf8>
    c9e7:	mov    rax,QWORD PTR [rsp+0x20]
    c9ec:	mov    rdx,QWORD PTR [rsp+0x50]
    c9f1:	mov    rsi,QWORD PTR [rip+0x215b88]        # 222580 <simple_backup_suffix@@Base>
    c9f8:	lea    rdi,[r15+rax*1]
    c9fc:	call   3a40 <memcpy@plt>
    ca01:	mov    DWORD PTR [rsp+0x14],0x1
    ca09:	nop    DWORD PTR [rax+0x0]
    ca10:	mov    rsi,QWORD PTR [rsp+0x20]
    ca15:	mov    rdi,r15
    ca18:	call   c530 <__cxa_finalize@plt+0x8718>
    ca1d:	jmp    c91f <__cxa_finalize@plt+0x8b07>
    ca22:	nop    WORD PTR [rax+rax*1+0x0]
    ca28:	mov    ecx,0x2e
    ca2d:	movzx  ebx,WORD PTR [rbp+0x0]
    ca31:	mov    rdi,r15
    ca34:	mov    WORD PTR [rbp+0x0],cx
    ca38:	call   d480 <__cxa_finalize@plt+0x9668>
    ca3d:	test   rax,rax
    ca40:	mov    r14,rax
    ca43:	lea    rdx,[rbp+r12*1+0x0]
    ca48:	je     ca9a <__cxa_finalize@plt+0x8c82>
    ca4a:	mov    WORD PTR [rbp+0x0],bx
    ca4e:	mov    DWORD PTR [rdx],0x7e317e2e
    ca54:	mov    BYTE PTR [rdx+0x4],0x0
    ca58:	jmp    c711 <__cxa_finalize@plt+0x88f9>
    ca5d:	nop    DWORD PTR [rax]
    ca60:	mov    r8,r15
    ca63:	jmp    c88f <__cxa_finalize@plt+0x8a77>
    ca68:	nop    DWORD PTR [rax+rax*1+0x0]
    ca70:	mov    rdi,r15
    ca73:	xor    r15d,r15d
    ca76:	call   3e10 <free@plt>
    ca7b:	call   3540 <__errno_location@plt>
    ca80:	mov    DWORD PTR [rax],0xc
    ca86:	jmp    c991 <__cxa_finalize@plt+0x8b79>
    ca8b:	nop    DWORD PTR [rax+rax*1+0x0]
    ca90:	mov    QWORD PTR [rsp+0x40],rcx
    ca95:	jmp    c86c <__cxa_finalize@plt+0x8a54>
    ca9a:	mov    QWORD PTR [rsp+0x8],rdx
    ca9f:	call   3540 <__errno_location@plt>
    caa4:	cmp    DWORD PTR [rax],0xc
    caa7:	mov    rdx,QWORD PTR [rsp+0x8]
    caac:	mov    WORD PTR [rbp+0x0],bx
    cab0:	mov    DWORD PTR [rdx],0x7e317e2e
    cab6:	mov    BYTE PTR [rdx+0x4],0x0
    caba:	sete   al
    cabd:	movzx  eax,al
    cac0:	add    eax,0x2
    cac3:	mov    DWORD PTR [rsp+0x38],eax
    cac7:	jmp    c900 <__cxa_finalize@plt+0x8ae8>
    cacc:	call   c5f0 <__cxa_finalize@plt+0x87d8>
    cad1:	mov    rdi,QWORD PTR [rip+0x215aa8]        # 222580 <simple_backup_suffix@@Base>
    cad8:	jmp    c689 <__cxa_finalize@plt+0x8871>
    cadd:	test   r14,r14
    cae0:	je     c991 <__cxa_finalize@plt+0x8b79>
    cae6:	mov    rdi,r14
    cae9:	call   38e0 <closedir@plt>
    caee:	jmp    c991 <__cxa_finalize@plt+0x8b79>
    caf3:	mov    esi,0x1
    caf8:	jmp    c851 <__cxa_finalize@plt+0x8a39>
    cafd:	nop    DWORD PTR [rax]
    cb00:	mov    edx,0x1
    cb05:	jmp    c640 <__cxa_finalize@plt+0x8828>
    cb0a:	nop    WORD PTR [rax+rax*1+0x0]
    cb10:	sub    rsp,0x8
    cb14:	mov    r9,QWORD PTR [rip+0x21550d]        # 222028 <argmatch_die@@Base>
    cb1b:	lea    rdx,[rip+0x214cfe]        # 221820 <version_etc_copyright@@Base+0x204ba0>
    cb22:	lea    rcx,[rip+0xf757]        # 1c280 <_IO_stdin_used@@Base+0x28e0>
    cb29:	mov    r8d,0x4
    cb2f:	call   c470 <__cxa_finalize@plt+0x8658>
    cb34:	lea    rdx,[rip+0xf745]        # 1c280 <_IO_stdin_used@@Base+0x28e0>
    cb3b:	mov    eax,DWORD PTR [rdx+rax*4]
    cb3e:	add    rsp,0x8
    cb42:	ret    
    cb43:	nop    DWORD PTR [rax]
    cb46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cb50:	sub    rsp,0x8
    cb54:	xor    edx,edx
    cb56:	call   c640 <__cxa_finalize@plt+0x8828>
    cb5b:	test   rax,rax
    cb5e:	je     cb65 <__cxa_finalize@plt+0x8d4d>
    cb60:	add    rsp,0x8
    cb64:	ret    
    cb65:	call   13310 <__cxa_finalize@plt+0xf4f8>
    cb6a:	nop    WORD PTR [rax+rax*1+0x0]
    cb70:	test   rsi,rsi
    cb73:	je     cb80 <__cxa_finalize@plt+0x8d68>
    cb75:	cmp    BYTE PTR [rsi],0x0
    cb78:	je     cb80 <__cxa_finalize@plt+0x8d68>
    cb7a:	jmp    cb10 <__cxa_finalize@plt+0x8cf8>
    cb7c:	nop    DWORD PTR [rax+0x0]
    cb80:	mov    eax,0x2
    cb85:	ret    
    cb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cb90:	test   rsi,rsi
    cb93:	je     cb9a <__cxa_finalize@plt+0x8d82>
    cb95:	cmp    BYTE PTR [rsi],0x0
    cb98:	jne    cbc2 <__cxa_finalize@plt+0x8daa>
    cb9a:	lea    rdi,[rip+0xf690]        # 1c231 <_IO_stdin_used@@Base+0x2891>
    cba1:	sub    rsp,0x8
    cba5:	call   34e0 <getenv@plt>
    cbaa:	test   rax,rax
    cbad:	je     cbd0 <__cxa_finalize@plt+0x8db8>
    cbaf:	cmp    BYTE PTR [rax],0x0
    cbb2:	je     cbd0 <__cxa_finalize@plt+0x8db8>
    cbb4:	lea    rdi,[rip+0xf675]        # 1c230 <_IO_stdin_used@@Base+0x2890>
    cbbb:	mov    rsi,rax
    cbbe:	add    rsp,0x8
    cbc2:	jmp    cb10 <__cxa_finalize@plt+0x8cf8>
    cbc7:	nop    WORD PTR [rax+rax*1+0x0]
    cbd0:	mov    eax,0x2
    cbd5:	add    rsp,0x8
    cbd9:	ret    
    cbda:	nop    WORD PTR [rax+rax*1+0x0]
    cbe0:	test   rdi,rdi
    cbe3:	mov    rcx,rdx
    cbe6:	jne    cc08 <__cxa_finalize@plt+0x8df0>
    cbe8:	test   rsi,rsi
    cbeb:	mov    edi,0x2000
    cbf0:	cmovne rdi,rsi
    cbf4:	cmp    rdi,rcx
    cbf7:	cmovbe rcx,rdi
    cbfb:	mov    r8,rcx
    cbfe:	mov    rax,r8
    cc01:	ret    
    cc02:	nop    WORD PTR [rax+rax*1+0x0]
    cc08:	test   rsi,rsi
    cc0b:	je     cbf4 <__cxa_finalize@plt+0x8ddc>
    cc0d:	mov    r8,rsi
    cc10:	mov    rax,rdi
    cc13:	xor    edx,edx
    cc15:	div    r8
    cc18:	test   rdx,rdx
    cc1b:	jne    cc48 <__cxa_finalize@plt+0x8e30>
    cc1d:	xor    edx,edx
    cc1f:	mov    rax,rdi
    cc22:	div    r8
    cc25:	mov    r8,rsi
    cc28:	imul   r8,rax
    cc2c:	mov    r9,rax
    cc2f:	cmp    r8,rcx
    cc32:	ja     cbf4 <__cxa_finalize@plt+0x8ddc>
    cc34:	xor    edx,edx
    cc36:	mov    rax,r8
    cc39:	div    rsi
    cc3c:	cmp    rax,r9
    cc3f:	jne    cbf4 <__cxa_finalize@plt+0x8ddc>
    cc41:	jmp    cbfe <__cxa_finalize@plt+0x8de6>
    cc43:	nop    DWORD PTR [rax+rax*1+0x0]
    cc48:	mov    rax,r8
    cc4b:	mov    r8,rdx
    cc4e:	jmp    cc13 <__cxa_finalize@plt+0x8dfb>
    cc50:	push   r15
    cc52:	push   r14
    cc54:	push   r13
    cc56:	push   r12
    cc58:	push   rbp
    cc59:	push   rbx
    cc5a:	sub    rsp,0xe8
    cc61:	mov    rax,QWORD PTR fs:0x28
    cc6a:	mov    QWORD PTR [rsp+0xd8],rax
    cc72:	xor    eax,eax
    cc74:	mov    eax,esi
    cc76:	and    eax,0x4
    cc79:	setne  BYTE PTR [rsp+0x1b]
    cc7e:	and    esi,0x3
    cc81:	mov    DWORD PTR [rsp+0x1c],eax
    cc85:	lea    eax,[rsi-0x1]
    cc88:	mov    DWORD PTR [rsp+0x4],esi
    cc8c:	test   esi,eax
    cc8e:	jne    d1e0 <__cxa_finalize@plt+0x93c8>
    cc94:	test   rdi,rdi
    cc97:	mov    r14,rdi
    cc9a:	je     d1e0 <__cxa_finalize@plt+0x93c8>
    cca0:	movzx  eax,BYTE PTR [rdi]
    cca3:	test   al,al
    cca5:	je     d220 <__cxa_finalize@plt+0x9408>
    ccab:	cmp    al,0x2f
    ccad:	je     d170 <__cxa_finalize@plt+0x9358>
    ccb3:	call   133d0 <__cxa_finalize@plt+0xf5b8>
    ccb8:	test   rax,rax
    ccbb:	mov    rbp,rax
    ccbe:	je     ce70 <__cxa_finalize@plt+0x9058>
    ccc4:	mov    rdi,rax
    ccc7:	call   3720 <strlen@plt>
    cccc:	cmp    rax,0xfff
    ccd2:	mov    r15,rax
    ccd5:	jbe    d190 <__cxa_finalize@plt+0x9378>
    ccdb:	add    r15,rbp
    ccde:	mov    rbx,r15
    cce1:	lea    rax,[rsp+0x40]
    cce6:	mov    QWORD PTR [rsp+0x20],r14
    cceb:	mov    QWORD PTR [rsp+0x10],0x0
    ccf4:	mov    QWORD PTR [rsp+0x30],0x0
    ccfd:	mov    QWORD PTR [rsp+0x28],0x0
    cd06:	mov    QWORD PTR [rsp+0x8],rax
    cd0b:	movzx  eax,BYTE PTR [r14]
    cd0f:	test   al,al
    cd11:	je     ce1f <__cxa_finalize@plt+0x9007>
    cd17:	nop    WORD PTR [rax+rax*1+0x0]
    cd20:	cmp    al,0x2f
    cd22:	jne    cd3c <__cxa_finalize@plt+0x8f24>
    cd24:	nop    DWORD PTR [rax+0x0]
    cd28:	add    r14,0x1
    cd2c:	movzx  eax,BYTE PTR [r14]
    cd30:	cmp    al,0x2f
    cd32:	je     cd28 <__cxa_finalize@plt+0x8f10>
    cd34:	test   al,al
    cd36:	je     d000 <__cxa_finalize@plt+0x91e8>
    cd3c:	mov    r13,r14
    cd3f:	jmp    cd4d <__cxa_finalize@plt+0x8f35>
    cd41:	nop    DWORD PTR [rax+0x0]
    cd48:	cmp    dl,0x2f
    cd4b:	je     cd5a <__cxa_finalize@plt+0x8f42>
    cd4d:	add    r13,0x1
    cd51:	movzx  edx,BYTE PTR [r13+0x0]
    cd56:	test   dl,dl
    cd58:	jne    cd48 <__cxa_finalize@plt+0x8f30>
    cd5a:	cmp    r13,r14
    cd5d:	je     ce1f <__cxa_finalize@plt+0x9007>
    cd63:	mov    r12,r13
    cd66:	sub    r12,r14
    cd69:	cmp    r12,0x1
    cd6d:	je     cf40 <__cxa_finalize@plt+0x9128>
    cd73:	cmp    r12,0x2
    cd77:	jne    cd81 <__cxa_finalize@plt+0x8f69>
    cd79:	cmp    al,0x2e
    cd7b:	je     d010 <__cxa_finalize@plt+0x91f8>
    cd81:	cmp    BYTE PTR [r15-0x1],0x2f
    cd86:	je     cd90 <__cxa_finalize@plt+0x8f78>
    cd88:	mov    BYTE PTR [r15],0x2f
    cd8c:	add    r15,0x1
    cd90:	lea    rax,[r15+r12*1]
    cd94:	cmp    rbx,rax
    cd97:	ja     cdca <__cxa_finalize@plt+0x8fb2>
    cd99:	sub    rbx,rbp
    cd9c:	sub    r15,rbp
    cd9f:	mov    rdi,rbp
    cda2:	lea    rax,[r12+rbx*1+0x1]
    cda7:	add    rbx,0x1000
    cdae:	cmp    r12,0x1000
    cdb5:	cmovge rbx,rax
    cdb9:	mov    rsi,rbx
    cdbc:	call   13120 <__cxa_finalize@plt+0xf308>
    cdc1:	mov    rbp,rax
    cdc4:	add    rbx,rax
    cdc7:	add    r15,rax
    cdca:	mov    rdi,r15
    cdcd:	mov    rdx,r12
    cdd0:	mov    rsi,r14
    cdd3:	call   3a40 <memcpy@plt>
    cdd8:	cmp    DWORD PTR [rsp+0x4],0x2
    cddd:	lea    r15,[r15+r12*1]
    cde1:	mov    BYTE PTR [r15],0x0
    cde5:	jne    cea0 <__cxa_finalize@plt+0x9088>
    cdeb:	cmp    BYTE PTR [rsp+0x1b],0x0
    cdf0:	je     cea0 <__cxa_finalize@plt+0x9088>
    cdf6:	mov    DWORD PTR [rsp+0x58],0x0
    cdfe:	cmp    BYTE PTR [r13+0x0],0x0
    ce03:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    ce05:	cmp    DWORD PTR [rsp+0x4],0x2
    ce0a:	jne    d267 <__cxa_finalize@plt+0x944f>
    ce10:	mov    r14,r13
    ce13:	movzx  eax,BYTE PTR [r14]
    ce17:	test   al,al
    ce19:	jne    cd20 <__cxa_finalize@plt+0x8f08>
    ce1f:	lea    rax,[rbp+0x1]
    ce23:	cmp    r15,rax
    ce26:	jbe    ce33 <__cxa_finalize@plt+0x901b>
    ce28:	cmp    BYTE PTR [r15-0x1],0x2f
    ce2d:	jne    ce33 <__cxa_finalize@plt+0x901b>
    ce2f:	sub    r15,0x1
    ce33:	lea    rax,[r15+0x1]
    ce37:	mov    BYTE PTR [r15],0x0
    ce3b:	cmp    rbx,rax
    ce3e:	je     ce52 <__cxa_finalize@plt+0x903a>
    ce40:	sub    r15,rbp
    ce43:	mov    rdi,rbp
    ce46:	lea    rsi,[r15+0x1]
    ce4a:	call   13120 <__cxa_finalize@plt+0xf308>
    ce4f:	mov    rbp,rax
    ce52:	mov    rdi,QWORD PTR [rsp+0x28]
    ce57:	call   3e10 <free@plt>
    ce5c:	mov    rax,QWORD PTR [rsp+0x10]
    ce61:	test   rax,rax
    ce64:	je     ce70 <__cxa_finalize@plt+0x9058>
    ce66:	mov    rdi,rax
    ce69:	call   e660 <__cxa_finalize@plt+0xa848>
    ce6e:	xchg   ax,ax
    ce70:	mov    rcx,QWORD PTR [rsp+0xd8]
    ce78:	xor    rcx,QWORD PTR fs:0x28
    ce81:	mov    rax,rbp
    ce84:	jne    d281 <__cxa_finalize@plt+0x9469>
    ce8a:	add    rsp,0xe8
    ce91:	pop    rbx
    ce92:	pop    rbp
    ce93:	pop    r12
    ce95:	pop    r13
    ce97:	pop    r14
    ce99:	pop    r15
    ce9b:	ret    
    ce9c:	nop    DWORD PTR [rax+0x0]
    cea0:	mov    eax,DWORD PTR [rsp+0x1c]
    cea4:	mov    rdx,QWORD PTR [rsp+0x8]
    cea9:	mov    rsi,rbp
    ceac:	mov    edi,0x1
    ceb1:	test   eax,eax
    ceb3:	je     cf70 <__cxa_finalize@plt+0x9158>
    ceb9:	call   3a90 <__xstat@plt>
    cebe:	test   eax,eax
    cec0:	setne  al
    cec3:	test   al,al
    cec5:	je     cf50 <__cxa_finalize@plt+0x9138>
    cecb:	call   3540 <__errno_location@plt>
    ced0:	mov    r14,rax
    ced3:	mov    edx,DWORD PTR [rax]
    ced5:	mov    eax,DWORD PTR [rsp+0x4]
    ced9:	test   eax,eax
    cedb:	je     cf0e <__cxa_finalize@plt+0x90f6>
    cedd:	cmp    eax,0x1
    cee0:	jne    cdf6 <__cxa_finalize@plt+0x8fde>
    cee6:	lea    rsi,[rip+0xf4d1]        # 1c3be <_IO_stdin_used@@Base+0x2a1e>
    ceed:	mov    rdi,r13
    cef0:	mov    DWORD PTR [rsp+0x38],edx
    cef4:	call   38d0 <strspn@plt>
    cef9:	cmp    BYTE PTR [r13+rax*1+0x0],0x0
    ceff:	mov    edx,DWORD PTR [rsp+0x38]
    cf03:	jne    cf0e <__cxa_finalize@plt+0x90f6>
    cf05:	cmp    edx,0x2
    cf08:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    cf0e:	mov    r12,r14
    cf11:	mov    rdi,QWORD PTR [rsp+0x28]
    cf16:	mov    DWORD PTR [rsp+0x4],edx
    cf1a:	call   3e10 <free@plt>
    cf1f:	mov    rdi,rbp
    cf22:	call   3e10 <free@plt>
    cf27:	cmp    QWORD PTR [rsp+0x10],0x0
    cf2d:	mov    edx,DWORD PTR [rsp+0x4]
    cf31:	je     cfec <__cxa_finalize@plt+0x91d4>
    cf37:	jmp    cfda <__cxa_finalize@plt+0x91c2>
    cf3c:	nop    DWORD PTR [rax+0x0]
    cf40:	cmp    al,0x2e
    cf42:	jne    cd81 <__cxa_finalize@plt+0x8f69>
    cf48:	jmp    ce10 <__cxa_finalize@plt+0x8ff8>
    cf4d:	nop    DWORD PTR [rax]
    cf50:	mov    eax,DWORD PTR [rsp+0x58]
    cf54:	and    eax,0xf000
    cf59:	cmp    eax,0xa000
    cf5e:	je     cf80 <__cxa_finalize@plt+0x9168>
    cf60:	cmp    eax,0x4000
    cf65:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    cf6b:	jmp    cdfe <__cxa_finalize@plt+0x8fe6>
    cf70:	call   3740 <__lxstat@plt>
    cf75:	test   eax,eax
    cf77:	setne  al
    cf7a:	jmp    cec3 <__cxa_finalize@plt+0x90ab>
    cf7f:	nop
    cf80:	cmp    QWORD PTR [rsp+0x10],0x0
    cf86:	je     d136 <__cxa_finalize@plt+0x931e>
    cf8c:	mov    rdx,QWORD PTR [rsp+0x8]
    cf91:	mov    rsi,QWORD PTR [rsp+0x20]
    cf96:	mov    rdi,QWORD PTR [rsp+0x10]
    cf9b:	call   d830 <__cxa_finalize@plt+0x9a18>
    cfa0:	test   al,al
    cfa2:	je     d060 <__cxa_finalize@plt+0x9248>
    cfa8:	cmp    DWORD PTR [rsp+0x4],0x2
    cfad:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    cfb3:	call   3540 <__errno_location@plt>
    cfb8:	mov    edx,0x28
    cfbd:	mov    r12,rax
    cfc0:	mov    rdi,QWORD PTR [rsp+0x28]
    cfc5:	mov    DWORD PTR [rsp+0x4],edx
    cfc9:	call   3e10 <free@plt>
    cfce:	mov    rdi,rbp
    cfd1:	call   3e10 <free@plt>
    cfd6:	mov    edx,DWORD PTR [rsp+0x4]
    cfda:	mov    rdi,QWORD PTR [rsp+0x10]
    cfdf:	mov    DWORD PTR [rsp+0x4],edx
    cfe3:	call   e660 <__cxa_finalize@plt+0xa848>
    cfe8:	mov    edx,DWORD PTR [rsp+0x4]
    cfec:	mov    DWORD PTR [r12],edx
    cff0:	xor    ebp,ebp
    cff2:	jmp    ce70 <__cxa_finalize@plt+0x9058>
    cff7:	nop    WORD PTR [rax+rax*1+0x0]
    d000:	mov    r13,r14
    d003:	jmp    cd5a <__cxa_finalize@plt+0x8f42>
    d008:	nop    DWORD PTR [rax+rax*1+0x0]
    d010:	cmp    BYTE PTR [r14+0x1],0x2e
    d015:	jne    cd81 <__cxa_finalize@plt+0x8f69>
    d01b:	lea    rax,[rbp+0x1]
    d01f:	mov    r14,r13
    d022:	cmp    r15,rax
    d025:	jbe    cd0b <__cxa_finalize@plt+0x8ef3>
    d02b:	lea    rax,[r15-0x1]
    d02f:	cmp    rbp,rax
    d032:	jae    d279 <__cxa_finalize@plt+0x9461>
    d038:	cmp    BYTE PTR [r15-0x2],0x2f
    d03d:	mov    r15,rax
    d040:	je     cd0b <__cxa_finalize@plt+0x8ef3>
    d046:	sub    r15,0x1
    d04a:	cmp    rbp,r15
    d04d:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    d053:	cmp    BYTE PTR [r15-0x1],0x2f
    d058:	je     ce10 <__cxa_finalize@plt+0x8ff8>
    d05e:	jmp    d046 <__cxa_finalize@plt+0x922e>
    d060:	mov    rdx,QWORD PTR [rsp+0x8]
    d065:	mov    rsi,QWORD PTR [rsp+0x20]
    d06a:	mov    rdi,QWORD PTR [rsp+0x10]
    d06f:	call   d7a0 <__cxa_finalize@plt+0x9988>
    d074:	mov    rsi,QWORD PTR [rsp+0x70]
    d079:	mov    rdi,rbp
    d07c:	call   c0b0 <__cxa_finalize@plt+0x8298>
    d081:	test   rax,rax
    d084:	mov    r14,rax
    d087:	je     d1f2 <__cxa_finalize@plt+0x93da>
    d08d:	mov    rdi,rax
    d090:	call   3720 <strlen@plt>
    d095:	mov    rdi,r13
    d098:	mov    r12,rax
    d09b:	mov    QWORD PTR [rsp+0x20],rax
    d0a0:	call   3720 <strlen@plt>
    d0a5:	cmp    QWORD PTR [rsp+0x30],0x0
    d0ab:	mov    rdx,rax
    d0ae:	lea    rcx,[r12+rdx*1+0x1]
    d0b3:	je     d1af <__cxa_finalize@plt+0x9397>
    d0b9:	cmp    QWORD PTR [rsp+0x30],rcx
    d0be:	jae    d0e1 <__cxa_finalize@plt+0x92c9>
    d0c0:	mov    rdi,QWORD PTR [rsp+0x28]
    d0c5:	mov    rsi,rcx
    d0c8:	mov    QWORD PTR [rsp+0x38],rdx
    d0cd:	mov    QWORD PTR [rsp+0x30],rcx
    d0d2:	call   13120 <__cxa_finalize@plt+0xf308>
    d0d7:	mov    rdx,QWORD PTR [rsp+0x38]
    d0dc:	mov    QWORD PTR [rsp+0x28],rax
    d0e1:	mov    r12,QWORD PTR [rsp+0x28]
    d0e6:	mov    rdi,QWORD PTR [rsp+0x20]
    d0eb:	add    rdx,0x1
    d0ef:	mov    rsi,r13
    d0f2:	add    rdi,r12
    d0f5:	mov    r13,r12
    d0f8:	call   3c00 <memmove@plt>
    d0fd:	mov    rdx,QWORD PTR [rsp+0x20]
    d102:	mov    rsi,r14
    d105:	mov    rdi,r12
    d108:	call   3a40 <memcpy@plt>
    d10d:	cmp    BYTE PTR [r14],0x2f
    d111:	mov    QWORD PTR [rsp+0x20],r12
    d116:	lea    rax,[rbp+0x1]
    d11a:	je     d214 <__cxa_finalize@plt+0x93fc>
    d120:	cmp    r15,rax
    d123:	ja     d232 <__cxa_finalize@plt+0x941a>
    d129:	mov    rdi,r14
    d12c:	call   3e10 <free@plt>
    d131:	jmp    ce10 <__cxa_finalize@plt+0x8ff8>
    d136:	lea    r8,[rip+0x1df3]        # ef30 <__cxa_finalize@plt+0xb118>
    d13d:	lea    rcx,[rip+0x1dac]        # eef0 <__cxa_finalize@plt+0xb0d8>
    d144:	xor    esi,esi
    d146:	lea    rdx,[rip+0x1d33]        # ee80 <__cxa_finalize@plt+0xb068>
    d14d:	mov    edi,0x7
    d152:	call   e410 <__cxa_finalize@plt+0xa5f8>
    d157:	test   rax,rax
    d15a:	mov    QWORD PTR [rsp+0x10],rax
    d15f:	jne    cf8c <__cxa_finalize@plt+0x9174>
    d165:	call   13310 <__cxa_finalize@plt+0xf4f8>
    d16a:	nop    WORD PTR [rax+rax*1+0x0]
    d170:	mov    edi,0x1000
    d175:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    d17a:	mov    rbp,rax
    d17d:	lea    rbx,[rax+0x1000]
    d184:	lea    r15,[rax+0x1]
    d188:	mov    BYTE PTR [rax],0x2f
    d18b:	jmp    cce1 <__cxa_finalize@plt+0x8ec9>
    d190:	mov    rdi,rbp
    d193:	mov    esi,0x1000
    d198:	call   13120 <__cxa_finalize@plt+0xf308>
    d19d:	mov    rbp,rax
    d1a0:	add    r15,rax
    d1a3:	lea    rbx,[rax+0x1000]
    d1aa:	jmp    cce1 <__cxa_finalize@plt+0x8ec9>
    d1af:	cmp    rcx,0x1000
    d1b6:	mov    eax,0x1000
    d1bb:	mov    QWORD PTR [rsp+0x38],rdx
    d1c0:	cmovae rax,rcx
    d1c4:	mov    rdi,rax
    d1c7:	mov    QWORD PTR [rsp+0x30],rax
    d1cc:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    d1d1:	mov    rdx,QWORD PTR [rsp+0x38]
    d1d6:	mov    QWORD PTR [rsp+0x28],rax
    d1db:	jmp    d0e1 <__cxa_finalize@plt+0x92c9>
    d1e0:	call   3540 <__errno_location@plt>
    d1e5:	xor    ebp,ebp
    d1e7:	mov    DWORD PTR [rax],0x16
    d1ed:	jmp    ce70 <__cxa_finalize@plt+0x9058>
    d1f2:	call   3540 <__errno_location@plt>
    d1f7:	cmp    DWORD PTR [rsp+0x4],0x2
    d1fc:	mov    r14,rax
    d1ff:	mov    edx,DWORD PTR [rax]
    d201:	jne    d20c <__cxa_finalize@plt+0x93f4>
    d203:	cmp    edx,0xc
    d206:	jne    ce10 <__cxa_finalize@plt+0x8ff8>
    d20c:	mov    r12,r14
    d20f:	jmp    cfc0 <__cxa_finalize@plt+0x91a8>
    d214:	mov    BYTE PTR [rbp+0x0],0x2f
    d218:	mov    r15,rax
    d21b:	jmp    d129 <__cxa_finalize@plt+0x9311>
    d220:	call   3540 <__errno_location@plt>
    d225:	xor    ebp,ebp
    d227:	mov    DWORD PTR [rax],0x2
    d22d:	jmp    ce70 <__cxa_finalize@plt+0x9058>
    d232:	lea    rax,[r15-0x1]
    d236:	cmp    rbp,rax
    d239:	jae    d242 <__cxa_finalize@plt+0x942a>
    d23b:	cmp    BYTE PTR [r15-0x2],0x2f
    d240:	jne    d24d <__cxa_finalize@plt+0x9435>
    d242:	mov    r15,rax
    d245:	jmp    d129 <__cxa_finalize@plt+0x9311>
    d24a:	mov    rax,r15
    d24d:	lea    r15,[rax-0x1]
    d251:	cmp    rbp,r15
    d254:	je     d129 <__cxa_finalize@plt+0x9311>
    d25a:	cmp    BYTE PTR [r15-0x1],0x2f
    d25f:	je     d129 <__cxa_finalize@plt+0x9311>
    d265:	jmp    d24a <__cxa_finalize@plt+0x9432>
    d267:	call   3540 <__errno_location@plt>
    d26c:	mov    edx,0x14
    d271:	mov    r12,rax
    d274:	jmp    cf11 <__cxa_finalize@plt+0x90f9>
    d279:	mov    r15,rax
    d27c:	jmp    cd0b <__cxa_finalize@plt+0x8ef3>
    d281:	call   3760 <__stack_chk_fail@plt>
    d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d290:	mov    QWORD PTR [rip+0x2152f1],rdi        # 222588 <simple_backup_suffix@@Base+0x8>
    d297:	ret    
    d298:	nop    DWORD PTR [rax+rax*1+0x0]
    d2a0:	push   r12
    d2a2:	push   rbp
    d2a3:	push   rbx
    d2a4:	mov    rbx,QWORD PTR [rip+0x214e05]        # 2220b0 <stdin@@GLIBC_2.2.5>
    d2ab:	mov    rdi,rbx
    d2ae:	call   13830 <__cxa_finalize@plt+0xfa18>
    d2b3:	test   rax,rax
    d2b6:	jne    d358 <__cxa_finalize@plt+0x9540>
    d2bc:	mov    rdi,rbx
    d2bf:	call   16340 <fts_children@@Base+0x7d0>
    d2c4:	test   eax,eax
    d2c6:	jne    d2f8 <__cxa_finalize@plt+0x94e0>
    d2c8:	pop    rbx
    d2c9:	pop    rbp
    d2ca:	pop    r12
    d2cc:	jmp    d3d0 <__cxa_finalize@plt+0x95b8>
    d2d1:	nop    DWORD PTR [rax+0x0]
    d2d8:	call   137f0 <__cxa_finalize@plt+0xf9d8>
    d2dd:	test   eax,eax
    d2df:	mov    rdi,QWORD PTR [rip+0x214dca]        # 2220b0 <stdin@@GLIBC_2.2.5>
    d2e6:	je     d376 <__cxa_finalize@plt+0x955e>
    d2ec:	call   16340 <fts_children@@Base+0x7d0>
    d2f1:	nop    DWORD PTR [rax+0x0]
    d2f8:	lea    rsi,[rip+0xefa1]        # 1c2a0 <_IO_stdin_used@@Base+0x2900>
    d2ff:	xor    edi,edi
    d301:	mov    edx,0x5
    d306:	call   3700 <dcgettext@plt>
    d30b:	mov    rbx,QWORD PTR [rip+0x215276]        # 222588 <simple_backup_suffix@@Base+0x8>
    d312:	mov    r12,rax
    d315:	call   3540 <__errno_location@plt>
    d31a:	mov    rbp,rax
    d31d:	test   rbx,rbx
    d320:	je     d390 <__cxa_finalize@plt+0x9578>
    d322:	mov    rdi,rbx
    d325:	call   10b50 <__cxa_finalize@plt+0xcd38>
    d32a:	mov    esi,DWORD PTR [rbp+0x0]
    d32d:	lea    rdx,[rip+0xef7f]        # 1c2b3 <_IO_stdin_used@@Base+0x2913>
    d334:	mov    rcx,rax
    d337:	mov    r8,r12
    d33a:	xor    edi,edi
    d33c:	xor    eax,eax
    d33e:	call   3c20 <error@plt>
    d343:	call   d3d0 <__cxa_finalize@plt+0x95b8>
    d348:	mov    edi,DWORD PTR [rip+0x214ce2]        # 222030 <exit_failure@@Base>
    d34e:	call   3590 <_exit@plt>
    d353:	nop    DWORD PTR [rax+rax*1+0x0]
    d358:	xor    esi,esi
    d35a:	mov    rdi,rbx
    d35d:	mov    edx,0x1
    d362:	call   13860 <__cxa_finalize@plt+0xfa48>
    d367:	test   eax,eax
    d369:	mov    rdi,QWORD PTR [rip+0x214d40]        # 2220b0 <stdin@@GLIBC_2.2.5>
    d370:	je     d2d8 <__cxa_finalize@plt+0x94c0>
    d376:	call   16340 <fts_children@@Base+0x7d0>
    d37b:	test   eax,eax
    d37d:	jne    d2f8 <__cxa_finalize@plt+0x94e0>
    d383:	pop    rbx
    d384:	pop    rbp
    d385:	pop    r12
    d387:	jmp    d3d0 <__cxa_finalize@plt+0x95b8>
    d38c:	nop    DWORD PTR [rax+0x0]
    d390:	mov    esi,DWORD PTR [rax]
    d392:	lea    rdx,[rip+0xee7d]        # 1c216 <_IO_stdin_used@@Base+0x2876>
    d399:	mov    rcx,r12
    d39c:	xor    edi,edi
    d39e:	xor    eax,eax
    d3a0:	call   3c20 <error@plt>
    d3a5:	jmp    d343 <__cxa_finalize@plt+0x952b>
    d3a7:	nop    WORD PTR [rax+rax*1+0x0]
    d3b0:	mov    QWORD PTR [rip+0x2151e1],rdi        # 222598 <simple_backup_suffix@@Base+0x18>
    d3b7:	ret    
    d3b8:	nop    DWORD PTR [rax+rax*1+0x0]
    d3c0:	mov    BYTE PTR [rip+0x2151c9],dil        # 222590 <simple_backup_suffix@@Base+0x10>
    d3c7:	ret    
    d3c8:	nop    DWORD PTR [rax+rax*1+0x0]
    d3d0:	push   rbp
    d3d1:	push   rbx
    d3d2:	sub    rsp,0x8
    d3d6:	mov    rdi,QWORD PTR [rip+0x214ccb]        # 2220a8 <stdout@@GLIBC_2.2.5>
    d3dd:	call   16340 <fts_children@@Base+0x7d0>
    d3e2:	test   eax,eax
    d3e4:	je     d3fc <__cxa_finalize@plt+0x95e4>
    d3e6:	call   3540 <__errno_location@plt>
    d3eb:	cmp    BYTE PTR [rip+0x21519e],0x0        # 222590 <simple_backup_suffix@@Base+0x10>
    d3f2:	mov    rbx,rax
    d3f5:	je     d413 <__cxa_finalize@plt+0x95fb>
    d3f7:	cmp    DWORD PTR [rax],0x20
    d3fa:	jne    d413 <__cxa_finalize@plt+0x95fb>
    d3fc:	mov    rdi,QWORD PTR [rip+0x214cdd]        # 2220e0 <stderr@@GLIBC_2.2.5>
    d403:	call   16340 <fts_children@@Base+0x7d0>
    d408:	test   eax,eax
    d40a:	jne    d452 <__cxa_finalize@plt+0x963a>
    d40c:	add    rsp,0x8
    d410:	pop    rbx
    d411:	pop    rbp
    d412:	ret    
    d413:	lea    rsi,[rip+0xeea0]        # 1c2ba <_IO_stdin_used@@Base+0x291a>
    d41a:	xor    edi,edi
    d41c:	mov    edx,0x5
    d421:	call   3700 <dcgettext@plt>
    d426:	mov    rdi,QWORD PTR [rip+0x21516b]        # 222598 <simple_backup_suffix@@Base+0x18>
    d42d:	mov    rbp,rax
    d430:	test   rdi,rdi
    d433:	je     d45d <__cxa_finalize@plt+0x9645>
    d435:	call   10b50 <__cxa_finalize@plt+0xcd38>
    d43a:	mov    esi,DWORD PTR [rbx]
    d43c:	lea    rdx,[rip+0xee70]        # 1c2b3 <_IO_stdin_used@@Base+0x2913>
    d443:	mov    rcx,rax
    d446:	mov    r8,rbp
    d449:	xor    edi,edi
    d44b:	xor    eax,eax
    d44d:	call   3c20 <error@plt>
    d452:	mov    edi,DWORD PTR [rip+0x214bd8]        # 222030 <exit_failure@@Base>
    d458:	call   3590 <_exit@plt>
    d45d:	mov    esi,DWORD PTR [rbx]
    d45f:	lea    rdx,[rip+0xedb0]        # 1c216 <_IO_stdin_used@@Base+0x2876>
    d466:	mov    rcx,rax
    d469:	xor    edi,edi
    d46b:	xor    eax,eax
    d46d:	call   3c20 <error@plt>
    d472:	jmp    d452 <__cxa_finalize@plt+0x963a>
    d474:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d47e:	xchg   ax,ax
    d480:	push   r14
    d482:	push   r13
    d484:	push   r12
    d486:	push   rbp
    d487:	push   rbx
    d488:	call   36c0 <opendir@plt>
    d48d:	test   rax,rax
    d490:	mov    rbx,rax
    d493:	je     d4a2 <__cxa_finalize@plt+0x968a>
    d495:	mov    rdi,rax
    d498:	call   39e0 <dirfd@plt>
    d49d:	cmp    eax,0x2
    d4a0:	jbe    d4b0 <__cxa_finalize@plt+0x9698>
    d4a2:	mov    rax,rbx
    d4a5:	pop    rbx
    d4a6:	pop    rbp
    d4a7:	pop    r12
    d4a9:	pop    r13
    d4ab:	pop    r14
    d4ad:	ret    
    d4ae:	xchg   ax,ax
    d4b0:	mov    edi,eax
    d4b2:	mov    edx,0x3
    d4b7:	mov    esi,0x406
    d4bc:	xor    eax,eax
    d4be:	call   136a0 <__cxa_finalize@plt+0xf888>
    d4c3:	mov    r12d,eax
    d4c6:	call   3540 <__errno_location@plt>
    d4cb:	test   r12d,r12d
    d4ce:	mov    rbp,rax
    d4d1:	jns    d4f8 <__cxa_finalize@plt+0x96e0>
    d4d3:	mov    r14d,DWORD PTR [rax]
    d4d6:	xor    r13d,r13d
    d4d9:	mov    rdi,rbx
    d4dc:	mov    rbx,r13
    d4df:	call   38e0 <closedir@plt>
    d4e4:	mov    DWORD PTR [rbp+0x0],r14d
    d4e8:	mov    rax,rbx
    d4eb:	pop    rbx
    d4ec:	pop    rbp
    d4ed:	pop    r12
    d4ef:	pop    r13
    d4f1:	pop    r14
    d4f3:	ret    
    d4f4:	nop    DWORD PTR [rax+0x0]
    d4f8:	mov    edi,r12d
    d4fb:	call   3cb0 <fdopendir@plt>
    d500:	test   rax,rax
    d503:	mov    r13,rax
    d506:	mov    r14d,DWORD PTR [rbp+0x0]
    d50a:	jne    d4d9 <__cxa_finalize@plt+0x96c1>
    d50c:	mov    edi,r12d
    d50f:	call   38b0 <close@plt>
    d514:	jmp    d4d9 <__cxa_finalize@plt+0x96c1>
    d516:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d520:	sub    rsp,0x8
    d524:	call   d5a0 <__cxa_finalize@plt+0x9788>
    d529:	test   rax,rax
    d52c:	je     d533 <__cxa_finalize@plt+0x971b>
    d52e:	add    rsp,0x8
    d532:	ret    
    d533:	call   13310 <__cxa_finalize@plt+0xf4f8>
    d538:	nop    DWORD PTR [rax+rax*1+0x0]
    d540:	push   rbp
    d541:	push   rbx
    d542:	xor    ebp,ebp
    d544:	mov    rbx,rdi
    d547:	sub    rsp,0x8
    d54b:	cmp    BYTE PTR [rdi],0x2f
    d54e:	sete   bpl
    d552:	call   d600 <__cxa_finalize@plt+0x97e8>
    d557:	mov    rcx,rax
    d55a:	sub    rcx,rbx
    d55d:	cmp    rcx,rbp
    d560:	jbe    d590 <__cxa_finalize@plt+0x9778>
    d562:	cmp    BYTE PTR [rax-0x1],0x2f
    d566:	lea    rdx,[rcx-0x1]
    d56a:	je     d57e <__cxa_finalize@plt+0x9766>
    d56c:	jmp    d590 <__cxa_finalize@plt+0x9778>
    d56e:	xchg   ax,ax
    d570:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x2f
    d575:	lea    rax,[rdx-0x1]
    d579:	jne    d583 <__cxa_finalize@plt+0x976b>
    d57b:	mov    rdx,rax
    d57e:	cmp    rbp,rdx
    d581:	jne    d570 <__cxa_finalize@plt+0x9758>
    d583:	add    rsp,0x8
    d587:	mov    rax,rdx
    d58a:	pop    rbx
    d58b:	pop    rbp
    d58c:	ret    
    d58d:	nop    DWORD PTR [rax]
    d590:	add    rsp,0x8
    d594:	mov    rdx,rcx
    d597:	mov    rax,rdx
    d59a:	pop    rbx
    d59b:	pop    rbp
    d59c:	ret    
    d59d:	nop    DWORD PTR [rax]
    d5a0:	push   rbp
    d5a1:	push   rbx
    d5a2:	mov    rbp,rdi
    d5a5:	sub    rsp,0x8
    d5a9:	call   d540 <__cxa_finalize@plt+0x9728>
    d5ae:	test   rax,rax
    d5b1:	mov    rbx,rax
    d5b4:	sete   al
    d5b7:	movzx  eax,al
    d5ba:	lea    rdi,[rbx+rax*1+0x1]
    d5bf:	call   3ac0 <malloc@plt>
    d5c4:	test   rax,rax
    d5c7:	mov    rcx,rax
    d5ca:	je     d5e6 <__cxa_finalize@plt+0x97ce>
    d5cc:	mov    rdx,rbx
    d5cf:	mov    rsi,rbp
    d5d2:	mov    rdi,rax
    d5d5:	call   3a40 <memcpy@plt>
    d5da:	test   rbx,rbx
    d5dd:	mov    rcx,rax
    d5e0:	je     d5f0 <__cxa_finalize@plt+0x97d8>
    d5e2:	mov    BYTE PTR [rcx+rbx*1],0x0
    d5e6:	add    rsp,0x8
    d5ea:	mov    rax,rcx
    d5ed:	pop    rbx
    d5ee:	pop    rbp
    d5ef:	ret    
    d5f0:	mov    BYTE PTR [rax],0x2e
    d5f3:	mov    ebx,0x1
    d5f8:	jmp    d5e2 <__cxa_finalize@plt+0x97ca>
    d5fa:	nop    WORD PTR [rax+rax*1+0x0]
    d600:	movzx  edx,BYTE PTR [rdi]
    d603:	mov    rax,rdi
    d606:	cmp    dl,0x2f
    d609:	jne    d61c <__cxa_finalize@plt+0x9804>
    d60b:	nop    DWORD PTR [rax+rax*1+0x0]
    d610:	add    rax,0x1
    d614:	movzx  edx,BYTE PTR [rax]
    d617:	cmp    dl,0x2f
    d61a:	je     d610 <__cxa_finalize@plt+0x97f8>
    d61c:	test   dl,dl
    d61e:	je     d65a <__cxa_finalize@plt+0x9842>
    d620:	mov    rcx,rax
    d623:	xor    esi,esi
    d625:	jmp    d645 <__cxa_finalize@plt+0x982d>
    d627:	nop    WORD PTR [rax+rax*1+0x0]
    d630:	test   sil,sil
    d633:	je     d63a <__cxa_finalize@plt+0x9822>
    d635:	mov    rax,rcx
    d638:	xor    esi,esi
    d63a:	add    rcx,0x1
    d63e:	movzx  edx,BYTE PTR [rcx]
    d641:	test   dl,dl
    d643:	je     d65a <__cxa_finalize@plt+0x9842>
    d645:	cmp    dl,0x2f
    d648:	jne    d630 <__cxa_finalize@plt+0x9818>
    d64a:	add    rcx,0x1
    d64e:	movzx  edx,BYTE PTR [rcx]
    d651:	mov    esi,0x1
    d656:	test   dl,dl
    d658:	jne    d645 <__cxa_finalize@plt+0x982d>
    d65a:	repz ret 
    d65c:	nop    DWORD PTR [rax+0x0]
    d660:	push   rbx
    d661:	mov    rbx,rdi
    d664:	call   3720 <strlen@plt>
    d669:	cmp    rax,0x1
    d66d:	jbe    d67a <__cxa_finalize@plt+0x9862>
    d66f:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
    d674:	lea    rdx,[rax-0x1]
    d678:	je     d688 <__cxa_finalize@plt+0x9870>
    d67a:	pop    rbx
    d67b:	ret    
    d67c:	nop    DWORD PTR [rax+0x0]
    d680:	mov    rdx,rax
    d683:	nop    DWORD PTR [rax+rax*1+0x0]
    d688:	cmp    rdx,0x1
    d68c:	je     d6a0 <__cxa_finalize@plt+0x9888>
    d68e:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x2f
    d693:	lea    rax,[rdx-0x1]
    d697:	je     d680 <__cxa_finalize@plt+0x9868>
    d699:	mov    rax,rdx
    d69c:	pop    rbx
    d69d:	ret    
    d69e:	xchg   ax,ax
    d6a0:	mov    eax,0x1
    d6a5:	pop    rbx
    d6a6:	ret    
    d6a7:	nop    WORD PTR [rax+rax*1+0x0]
    d6b0:	push   rbp
    d6b1:	push   rbx
    d6b2:	mov    rbp,rdi
    d6b5:	sub    rsp,0x8
    d6b9:	call   d600 <__cxa_finalize@plt+0x97e8>
    d6be:	cmp    BYTE PTR [rax],0x0
    d6c1:	mov    rbx,rax
    d6c4:	cmove  rbx,rbp
    d6c8:	mov    rdi,rbx
    d6cb:	call   d660 <__cxa_finalize@plt+0x9848>
    d6d0:	add    rbx,rax
    d6d3:	cmp    BYTE PTR [rbx],0x0
    d6d6:	mov    BYTE PTR [rbx],0x0
    d6d9:	setne  al
    d6dc:	add    rsp,0x8
    d6e0:	pop    rbx
    d6e1:	pop    rbp
    d6e2:	ret    
    d6e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d6ed:	nop    DWORD PTR [rax]
    d6f0:	jmp    3900 <posix_fadvise@plt>
    d6f5:	nop
    d6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d700:	test   rdi,rdi
    d703:	je     d720 <__cxa_finalize@plt+0x9908>
    d705:	push   rbx
    d706:	mov    ebx,esi
    d708:	call   3a70 <fileno@plt>
    d70d:	mov    ecx,ebx
    d70f:	xor    edx,edx
    d711:	xor    esi,esi
    d713:	pop    rbx
    d714:	mov    edi,eax
    d716:	jmp    3900 <posix_fadvise@plt>
    d71b:	nop    DWORD PTR [rax+rax*1+0x0]
    d720:	repz ret 
    d722:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d72c:	nop    DWORD PTR [rax+0x0]
    d730:	sub    rsp,0x58
    d734:	mov    QWORD PTR [rsp+0x30],rdx
    d739:	xor    edx,edx
    d73b:	mov    rax,QWORD PTR fs:0x28
    d744:	mov    QWORD PTR [rsp+0x18],rax
    d749:	xor    eax,eax
    d74b:	test   sil,0x40
    d74f:	jne    d778 <__cxa_finalize@plt+0x9960>
    d751:	xor    eax,eax
    d753:	call   3c60 <open@plt>
    d758:	mov    edi,eax
    d75a:	call   118a0 <__cxa_finalize@plt+0xda88>
    d75f:	mov    rcx,QWORD PTR [rsp+0x18]
    d764:	xor    rcx,QWORD PTR fs:0x28
    d76d:	jne    d799 <__cxa_finalize@plt+0x9981>
    d76f:	add    rsp,0x58
    d773:	ret    
    d774:	nop    DWORD PTR [rax+0x0]
    d778:	lea    rax,[rsp+0x60]
    d77d:	mov    DWORD PTR [rsp],0x10
    d784:	mov    edx,DWORD PTR [rsp+0x30]
    d788:	mov    QWORD PTR [rsp+0x8],rax
    d78d:	lea    rax,[rsp+0x20]
    d792:	mov    QWORD PTR [rsp+0x10],rax
    d797:	jmp    d751 <__cxa_finalize@plt+0x9939>
    d799:	call   3760 <__stack_chk_fail@plt>
    d79e:	xchg   ax,ax
    d7a0:	test   rdi,rdi
    d7a3:	je     d820 <__cxa_finalize@plt+0x9a08>
    d7a5:	push   r13
    d7a7:	push   r12
    d7a9:	mov    r13,rdi
    d7ac:	push   rbp
    d7ad:	push   rbx
    d7ae:	mov    r12,rsi
    d7b1:	mov    edi,0x18
    d7b6:	mov    rbp,rdx
    d7b9:	sub    rsp,0x8
    d7bd:	call   130c0 <__cxa_finalize@plt+0xf2a8>
    d7c2:	mov    rdi,r12
    d7c5:	mov    rbx,rax
    d7c8:	call   132f0 <__cxa_finalize@plt+0xf4d8>
    d7cd:	mov    QWORD PTR [rbx],rax
    d7d0:	mov    rax,QWORD PTR [rbp+0x8]
    d7d4:	mov    rsi,rbx
    d7d7:	mov    rdi,r13
    d7da:	mov    QWORD PTR [rbx+0x8],rax
    d7de:	mov    rax,QWORD PTR [rbp+0x0]
    d7e2:	mov    QWORD PTR [rbx+0x10],rax
    d7e6:	call   ec10 <__cxa_finalize@plt+0xadf8>
    d7eb:	test   rax,rax
    d7ee:	je     d822 <__cxa_finalize@plt+0x9a0a>
    d7f0:	cmp    rbx,rax
    d7f3:	je     d810 <__cxa_finalize@plt+0x99f8>
    d7f5:	add    rsp,0x8
    d7f9:	mov    rdi,rbx
    d7fc:	pop    rbx
    d7fd:	pop    rbp
    d7fe:	pop    r12
    d800:	pop    r13
    d802:	jmp    ef30 <__cxa_finalize@plt+0xb118>
    d807:	nop    WORD PTR [rax+rax*1+0x0]
    d810:	add    rsp,0x8
    d814:	pop    rbx
    d815:	pop    rbp
    d816:	pop    r12
    d818:	pop    r13
    d81a:	ret    
    d81b:	nop    DWORD PTR [rax+rax*1+0x0]
    d820:	repz ret 
    d822:	call   13310 <__cxa_finalize@plt+0xf4f8>
    d827:	nop    WORD PTR [rax+rax*1+0x0]
    d830:	sub    rsp,0x28
    d834:	mov    rax,QWORD PTR fs:0x28
    d83d:	mov    QWORD PTR [rsp+0x18],rax
    d842:	xor    eax,eax
    d844:	test   rdi,rdi
    d847:	je     d86c <__cxa_finalize@plt+0x9a54>
    d849:	mov    rax,QWORD PTR [rdx+0x8]
    d84d:	mov    QWORD PTR [rsp],rsi
    d851:	mov    rsi,rsp
    d854:	mov    QWORD PTR [rsp+0x8],rax
    d859:	mov    rax,QWORD PTR [rdx]
    d85c:	mov    QWORD PTR [rsp+0x10],rax
    d861:	call   e1a0 <__cxa_finalize@plt+0xa388>
    d866:	test   rax,rax
    d869:	setne  al
    d86c:	mov    rcx,QWORD PTR [rsp+0x18]
    d871:	xor    rcx,QWORD PTR fs:0x28
    d87a:	jne    d881 <__cxa_finalize@plt+0x9a69>
    d87c:	add    rsp,0x28
    d880:	ret    
    d881:	call   3760 <__stack_chk_fail@plt>
    d886:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d890:	mov    edx,edi
    d892:	mov    eax,0x2d
    d897:	and    edx,0xf000
    d89d:	cmp    edx,0x8000
    d8a3:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8a5:	cmp    edx,0x4000
    d8ab:	mov    eax,0x64
    d8b0:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8b2:	cmp    edx,0x6000
    d8b8:	mov    eax,0x62
    d8bd:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8bf:	cmp    edx,0x2000
    d8c5:	mov    eax,0x63
    d8ca:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8cc:	cmp    edx,0xa000
    d8d2:	mov    eax,0x6c
    d8d7:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8d9:	cmp    edx,0x1000
    d8df:	mov    eax,0x70
    d8e4:	je     d900 <__cxa_finalize@plt+0x9ae8>
    d8e6:	cmp    edx,0xc000
    d8ec:	mov    eax,0x73
    d8f1:	mov    edx,0x3f
    d8f6:	cmovne eax,edx
    d8f9:	nop    DWORD PTR [rax+0x0]
    d900:	mov    BYTE PTR [rsi],al
    d902:	mov    eax,edi
    d904:	and    eax,0x100
    d909:	cmp    eax,0x1
    d90c:	sbb    eax,eax
    d90e:	and    eax,0xffffffbb
    d911:	add    eax,0x72
    d914:	mov    BYTE PTR [rsi+0x1],al
    d917:	mov    eax,edi
    d919:	and    eax,0x80
    d91e:	cmp    eax,0x1
    d921:	sbb    eax,eax
    d923:	and    eax,0xffffffb6
    d926:	add    eax,0x77
    d929:	mov    BYTE PTR [rsi+0x2],al
    d92c:	mov    eax,edi
    d92e:	and    eax,0x40
    d931:	cmp    eax,0x1
    d934:	sbb    eax,eax
    d936:	test   edi,0x800
    d93c:	je     d9e0 <__cxa_finalize@plt+0x9bc8>
    d942:	and    eax,0xffffffe0
    d945:	add    eax,0x73
    d948:	mov    BYTE PTR [rsi+0x3],al
    d94b:	mov    eax,edi
    d94d:	and    eax,0x20
    d950:	cmp    eax,0x1
    d953:	sbb    eax,eax
    d955:	and    eax,0xffffffbb
    d958:	add    eax,0x72
    d95b:	mov    BYTE PTR [rsi+0x4],al
    d95e:	mov    eax,edi
    d960:	and    eax,0x10
    d963:	cmp    eax,0x1
    d966:	sbb    eax,eax
    d968:	and    eax,0xffffffb6
    d96b:	add    eax,0x77
    d96e:	mov    BYTE PTR [rsi+0x5],al
    d971:	mov    eax,edi
    d973:	and    eax,0x8
    d976:	cmp    eax,0x1
    d979:	sbb    eax,eax
    d97b:	test   edi,0x400
    d981:	je     da08 <__cxa_finalize@plt+0x9bf0>
    d987:	and    eax,0xffffffe0
    d98a:	add    eax,0x73
    d98d:	mov    BYTE PTR [rsi+0x6],al
    d990:	mov    eax,edi
    d992:	and    eax,0x4
    d995:	cmp    eax,0x1
    d998:	sbb    eax,eax
    d99a:	and    eax,0xffffffbb
    d99d:	add    eax,0x72
    d9a0:	mov    BYTE PTR [rsi+0x7],al
    d9a3:	mov    eax,edi
    d9a5:	and    eax,0x2
    d9a8:	cmp    eax,0x1
    d9ab:	sbb    eax,eax
    d9ad:	and    eax,0xffffffb6
    d9b0:	add    eax,0x77
    d9b3:	mov    BYTE PTR [rsi+0x8],al
    d9b6:	mov    eax,edi
    d9b8:	and    eax,0x1
    d9bb:	cmp    eax,0x1
    d9be:	sbb    eax,eax
    d9c0:	and    edi,0x200
    d9c6:	je     d9f0 <__cxa_finalize@plt+0x9bd8>
    d9c8:	and    eax,0xffffffe0
    d9cb:	add    eax,0x74
    d9ce:	mov    BYTE PTR [rsi+0x9],al
    d9d1:	mov    eax,0x20
    d9d6:	mov    WORD PTR [rsi+0xa],ax
    d9da:	ret    
    d9db:	nop    DWORD PTR [rax+rax*1+0x0]
    d9e0:	and    eax,0xffffffb5
    d9e3:	add    eax,0x78
    d9e6:	jmp    d948 <__cxa_finalize@plt+0x9b30>
    d9eb:	nop    DWORD PTR [rax+rax*1+0x0]
    d9f0:	and    eax,0xffffffb5
    d9f3:	add    eax,0x78
    d9f6:	mov    BYTE PTR [rsi+0x9],al
    d9f9:	mov    eax,0x20
    d9fe:	mov    WORD PTR [rsi+0xa],ax
    da02:	ret    
    da03:	nop    DWORD PTR [rax+rax*1+0x0]
    da08:	and    eax,0xffffffb5
    da0b:	add    eax,0x78
    da0e:	jmp    d98d <__cxa_finalize@plt+0x9b75>
    da13:	nop    DWORD PTR [rax]
    da16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    da20:	mov    edi,DWORD PTR [rdi+0x18]
    da23:	jmp    d890 <__cxa_finalize@plt+0x9a78>
    da28:	nop    DWORD PTR [rax+rax*1+0x0]
    da30:	sub    rsp,0x8
    da34:	call   da50 <__cxa_finalize@plt+0x9c38>
    da39:	test   rax,rax
    da3c:	je     da43 <__cxa_finalize@plt+0x9c2b>
    da3e:	add    rsp,0x8
    da42:	ret    
    da43:	call   13310 <__cxa_finalize@plt+0xf4f8>
    da48:	nop    DWORD PTR [rax+rax*1+0x0]
    da50:	push   r15
    da52:	push   r14
    da54:	mov    r15,rdx
    da57:	push   r13
    da59:	push   r12
    da5b:	mov    r14,rdi
    da5e:	push   rbp
    da5f:	push   rbx
    da60:	mov    r12,rsi
    da63:	sub    rsp,0x18
    da67:	call   d600 <__cxa_finalize@plt+0x97e8>
    da6c:	mov    r13,rax
    da6f:	mov    rdi,rax
    da72:	mov    rbp,r13
    da75:	sub    rbp,r14
    da78:	call   d660 <__cxa_finalize@plt+0x9848>
    da7d:	add    rbp,rax
    da80:	test   rax,rax
    da83:	mov    rbx,rax
    da86:	je     da94 <__cxa_finalize@plt+0x9c7c>
    da88:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    da8e:	setne  bl
    da91:	movzx  ebx,bl
    da94:	movzx  eax,BYTE PTR [r12]
    da99:	cmp    al,0x2f
    da9b:	mov    BYTE PTR [rsp+0xf],al
    da9f:	je     db10 <__cxa_finalize@plt+0x9cf8>
    daa1:	mov    rdi,r12
    daa4:	call   3720 <strlen@plt>
    daa9:	lea    rdi,[rbx+rbp*1+0x1]
    daae:	mov    QWORD PTR [rsp],rax
    dab2:	add    rdi,rax
    dab5:	call   3ac0 <malloc@plt>
    daba:	test   rax,rax
    dabd:	mov    r13,rax
    dac0:	je     dafe <__cxa_finalize@plt+0x9ce6>
    dac2:	mov    rdi,rax
    dac5:	mov    rdx,rbp
    dac8:	mov    rsi,r14
    dacb:	call   3bf0 <mempcpy@plt>
    dad0:	test   r15,r15
    dad3:	mov    BYTE PTR [rax],0x2f
    dad6:	lea    rdi,[rax+rbx*1]
    dada:	je     daef <__cxa_finalize@plt+0x9cd7>
    dadc:	xor    eax,eax
    dade:	cmp    BYTE PTR [rsp+0xf],0x2f
    dae3:	mov    rcx,rdi
    dae6:	sete   al
    dae9:	sub    rcx,rax
    daec:	mov    QWORD PTR [r15],rcx
    daef:	mov    rdx,QWORD PTR [rsp]
    daf3:	mov    rsi,r12
    daf6:	call   3bf0 <mempcpy@plt>
    dafb:	mov    BYTE PTR [rax],0x0
    dafe:	add    rsp,0x18
    db02:	mov    rax,r13
    db05:	pop    rbx
    db06:	pop    rbp
    db07:	pop    r12
    db09:	pop    r13
    db0b:	pop    r14
    db0d:	pop    r15
    db0f:	ret    
    db10:	add    r12,0x1
    db14:	cmp    BYTE PTR [r12],0x2f
    db19:	jne    daa1 <__cxa_finalize@plt+0x9c89>
    db1b:	jmp    db10 <__cxa_finalize@plt+0x9cf8>
    db1d:	nop    DWORD PTR [rax]
    db20:	push   r13
    db22:	push   r12
    db24:	push   rbp
    db25:	push   rbx
    db26:	sub    rsp,0x8
    db2a:	test   rdx,rdx
    db2d:	je     db91 <__cxa_finalize@plt+0x9d79>
    db2f:	mov    r13d,edi
    db32:	mov    rbp,rsi
    db35:	mov    rbx,rdx
    db38:	xor    r12d,r12d
    db3b:	jmp    db50 <__cxa_finalize@plt+0x9d38>
    db3d:	nop    DWORD PTR [rax]
    db40:	test   rax,rax
    db43:	je     db78 <__cxa_finalize@plt+0x9d60>
    db45:	add    r12,rax
    db48:	add    rbp,rax
    db4b:	sub    rbx,rax
    db4e:	je     db64 <__cxa_finalize@plt+0x9d4c>
    db50:	mov    rdx,rbx
    db53:	mov    rsi,rbp
    db56:	mov    edi,r13d
    db59:	call   10fe0 <__cxa_finalize@plt+0xd1c8>
    db5e:	cmp    rax,0xffffffffffffffff
    db62:	jne    db40 <__cxa_finalize@plt+0x9d28>
    db64:	add    rsp,0x8
    db68:	mov    rax,r12
    db6b:	pop    rbx
    db6c:	pop    rbp
    db6d:	pop    r12
    db6f:	pop    r13
    db71:	ret    
    db72:	nop    WORD PTR [rax+rax*1+0x0]
    db78:	call   3540 <__errno_location@plt>
    db7d:	mov    DWORD PTR [rax],0x1c
    db83:	add    rsp,0x8
    db87:	mov    rax,r12
    db8a:	pop    rbx
    db8b:	pop    rbp
    db8c:	pop    r12
    db8e:	pop    r13
    db90:	ret    
    db91:	xor    r12d,r12d
    db94:	jmp    db64 <__cxa_finalize@plt+0x9d4c>
    db96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dba0:	cmp    rdi,0xa
    dba4:	mov    eax,0xa
    dba9:	movabs r9,0xaaaaaaaaaaaaaaab
    dbb3:	cmovb  rdi,rax
    dbb7:	or     rdi,0x1
    dbbb:	cmp    rdi,0xffffffffffffffff
    dbbf:	je     dc2f <__cxa_finalize@plt+0x9e17>
    dbc1:	nop    DWORD PTR [rax+0x0]
    dbc8:	mov    rax,rdi
    dbcb:	mov    rcx,rdi
    dbce:	mul    r9
    dbd1:	mov    rax,rdx
    dbd4:	shr    rax,1
    dbd7:	lea    rax,[rax+rax*2]
    dbdb:	sub    rcx,rax
    dbde:	cmp    rdi,0x9
    dbe2:	mov    rax,rcx
    dbe5:	jbe    dc20 <__cxa_finalize@plt+0x9e08>
    dbe7:	test   rcx,rcx
    dbea:	je     dc25 <__cxa_finalize@plt+0x9e0d>
    dbec:	mov    r8d,0x10
    dbf2:	mov    esi,0x9
    dbf7:	mov    ecx,0x3
    dbfc:	jmp    dc09 <__cxa_finalize@plt+0x9df1>
    dbfe:	xchg   ax,ax
    dc00:	add    r8,0x8
    dc04:	test   rdx,rdx
    dc07:	je     dc25 <__cxa_finalize@plt+0x9e0d>
    dc09:	add    rcx,0x2
    dc0d:	xor    edx,edx
    dc0f:	mov    rax,rdi
    dc12:	div    rcx
    dc15:	add    rsi,r8
    dc18:	cmp    rsi,rdi
    dc1b:	mov    rax,rdx
    dc1e:	jb     dc00 <__cxa_finalize@plt+0x9de8>
    dc20:	test   rax,rax
    dc23:	jne    dc2f <__cxa_finalize@plt+0x9e17>
    dc25:	add    rdi,0x2
    dc29:	cmp    rdi,0xffffffffffffffff
    dc2d:	jne    dbc8 <__cxa_finalize@plt+0x9db0>
    dc2f:	mov    rax,rdi
    dc32:	ret    
    dc33:	nop    DWORD PTR [rax]
    dc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dc40:	mov    rax,rdi
    dc43:	xor    edx,edx
    dc45:	ror    rax,0x3
    dc49:	div    rsi
    dc4c:	mov    rax,rdx
    dc4f:	ret    
    dc50:	cmp    rdi,rsi
    dc53:	sete   al
    dc56:	ret    
    dc57:	nop    WORD PTR [rax+rax*1+0x0]
    dc60:	push   rbx
    dc61:	mov    rbx,rdi
    dc64:	mov    rdi,rsi
    dc67:	mov    rsi,QWORD PTR [rbx+0x10]
    dc6b:	call   QWORD PTR [rbx+0x30]
    dc6e:	cmp    QWORD PTR [rbx+0x10],rax
    dc72:	jbe    dc7d <__cxa_finalize@plt+0x9e65>
    dc74:	shl    rax,0x4
    dc78:	add    rax,QWORD PTR [rbx]
    dc7b:	pop    rbx
    dc7c:	ret    
    dc7d:	call   3530 <abort@plt>
    dc82:	nop    DWORD PTR [rax+0x0]
    dc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dc90:	push   r14
    dc92:	push   r13
    dc94:	mov    r14,rdx
    dc97:	push   r12
    dc99:	push   rbp
    dc9a:	mov    r12,rdi
    dc9d:	push   rbx
    dc9e:	mov    rbp,rsi
    dca1:	mov    r13d,ecx
    dca4:	call   dc60 <__cxa_finalize@plt+0x9e48>
    dca9:	mov    QWORD PTR [r14],rax
    dcac:	mov    rsi,QWORD PTR [rax]
    dcaf:	test   rsi,rsi
    dcb2:	je     dda0 <__cxa_finalize@plt+0x9f88>
    dcb8:	cmp    rsi,rbp
    dcbb:	mov    rbx,rax
    dcbe:	je     dd53 <__cxa_finalize@plt+0x9f3b>
    dcc4:	mov    rdi,rbp
    dcc7:	call   QWORD PTR [r12+0x38]
    dccc:	test   al,al
    dcce:	jne    dd50 <__cxa_finalize@plt+0x9f38>
    dcd4:	mov    rax,QWORD PTR [rbx+0x8]
    dcd8:	test   rax,rax
    dcdb:	je     dda0 <__cxa_finalize@plt+0x9f88>
    dce1:	mov    rsi,QWORD PTR [rax]
    dce4:	cmp    rbp,rsi
    dce7:	jne    dd09 <__cxa_finalize@plt+0x9ef1>
    dce9:	jmp    dd1c <__cxa_finalize@plt+0x9f04>
    dceb:	nop    DWORD PTR [rax+rax*1+0x0]
    dcf0:	mov    rbx,QWORD PTR [rbx+0x8]
    dcf4:	mov    rax,QWORD PTR [rbx+0x8]
    dcf8:	test   rax,rax
    dcfb:	je     dda0 <__cxa_finalize@plt+0x9f88>
    dd01:	mov    rsi,QWORD PTR [rax]
    dd04:	cmp    rsi,rbp
    dd07:	je     dd1c <__cxa_finalize@plt+0x9f04>
    dd09:	mov    rdi,rbp
    dd0c:	call   QWORD PTR [r12+0x38]
    dd11:	test   al,al
    dd13:	je     dcf0 <__cxa_finalize@plt+0x9ed8>
    dd15:	mov    rax,QWORD PTR [rbx+0x8]
    dd19:	mov    rsi,QWORD PTR [rax]
    dd1c:	test   r13b,r13b
    dd1f:	je     dd3e <__cxa_finalize@plt+0x9f26>
    dd21:	mov    rdx,QWORD PTR [rax+0x8]
    dd25:	mov    QWORD PTR [rbx+0x8],rdx
    dd29:	mov    QWORD PTR [rax],0x0
    dd30:	mov    rdx,QWORD PTR [r12+0x48]
    dd35:	mov    QWORD PTR [rax+0x8],rdx
    dd39:	mov    QWORD PTR [r12+0x48],rax
    dd3e:	pop    rbx
    dd3f:	mov    rax,rsi
    dd42:	pop    rbp
    dd43:	pop    r12
    dd45:	pop    r13
    dd47:	pop    r14
    dd49:	ret    
    dd4a:	nop    WORD PTR [rax+rax*1+0x0]
    dd50:	mov    rsi,QWORD PTR [rbx]
    dd53:	test   r13b,r13b
    dd56:	je     dd3e <__cxa_finalize@plt+0x9f26>
    dd58:	mov    rax,QWORD PTR [rbx+0x8]
    dd5c:	test   rax,rax
    dd5f:	je     dd90 <__cxa_finalize@plt+0x9f78>
    dd61:	movdqu xmm0,XMMWORD PTR [rax]
    dd65:	movups XMMWORD PTR [rbx],xmm0
    dd68:	mov    QWORD PTR [rax],0x0
    dd6f:	mov    rdx,QWORD PTR [r12+0x48]
    dd74:	mov    QWORD PTR [rax+0x8],rdx
    dd78:	mov    QWORD PTR [r12+0x48],rax
    dd7d:	mov    rax,rsi
    dd80:	pop    rbx
    dd81:	pop    rbp
    dd82:	pop    r12
    dd84:	pop    r13
    dd86:	pop    r14
    dd88:	ret    
    dd89:	nop    DWORD PTR [rax+0x0]
    dd90:	mov    QWORD PTR [rbx],0x0
    dd97:	jmp    dd3e <__cxa_finalize@plt+0x9f26>
    dd99:	nop    DWORD PTR [rax+0x0]
    dda0:	xor    esi,esi
    dda2:	pop    rbx
    dda3:	mov    rax,rsi
    dda6:	pop    rbp
    dda7:	pop    r12
    dda9:	pop    r13
    ddab:	pop    r14
    ddad:	ret    
    ddae:	xchg   ax,ax
    ddb0:	mov    rdx,QWORD PTR [rdi]
    ddb3:	lea    rcx,[rip+0xe586]        # 1c340 <_IO_stdin_used@@Base+0x29a0>
    ddba:	mov    eax,0x1
    ddbf:	cmp    rdx,rcx
    ddc2:	je     de25 <__cxa_finalize@plt+0xa00d>
    ddc4:	movss  xmm0,DWORD PTR [rdx+0x8]
    ddc9:	ucomiss xmm0,DWORD PTR [rip+0xe584]        # 1c354 <_IO_stdin_used@@Base+0x29b4>
    ddd0:	jbe    de20 <__cxa_finalize@plt+0xa008>
    ddd2:	movss  xmm1,DWORD PTR [rip+0xe57e]        # 1c358 <_IO_stdin_used@@Base+0x29b8>
    ddda:	ucomiss xmm1,xmm0
    dddd:	jbe    de20 <__cxa_finalize@plt+0xa008>
    dddf:	movss  xmm1,DWORD PTR [rdx+0xc]
    dde4:	ucomiss xmm1,DWORD PTR [rip+0xe571]        # 1c35c <_IO_stdin_used@@Base+0x29bc>
    ddeb:	jbe    de20 <__cxa_finalize@plt+0xa008>
    dded:	movss  xmm1,DWORD PTR [rdx]
    ddf1:	ucomiss xmm1,DWORD PTR [rip+0xe568]        # 1c360 <_IO_stdin_used@@Base+0x29c0>
    ddf8:	jb     de20 <__cxa_finalize@plt+0xa008>
    ddfa:	addss  xmm1,DWORD PTR [rip+0xe552]        # 1c354 <_IO_stdin_used@@Base+0x29b4>
    de02:	movss  xmm2,DWORD PTR [rdx+0x4]
    de07:	ucomiss xmm2,xmm1
    de0a:	jbe    de20 <__cxa_finalize@plt+0xa008>
    de0c:	movss  xmm3,DWORD PTR [rip+0xe550]        # 1c364 <_IO_stdin_used@@Base+0x29c4>
    de14:	ucomiss xmm3,xmm2
    de17:	jb     de20 <__cxa_finalize@plt+0xa008>
    de19:	ucomiss xmm0,xmm1
    de1c:	ja     de25 <__cxa_finalize@plt+0xa00d>
    de1e:	xchg   ax,ax
    de20:	mov    QWORD PTR [rdi],rcx
    de23:	xor    eax,eax
    de25:	repz ret 
    de27:	nop    WORD PTR [rax+rax*1+0x0]
    de30:	push   r15
    de32:	push   r14
    de34:	push   r13
    de36:	push   r12
    de38:	push   rbp
    de39:	push   rbx
    de3a:	sub    rsp,0x8
    de3e:	mov    r12,QWORD PTR [rsi]
    de41:	cmp    r12,QWORD PTR [rsi+0x8]
    de45:	jae    df28 <__cxa_finalize@plt+0xa110>
    de4b:	mov    rbp,rdi
    de4e:	mov    r13,rsi
    de51:	mov    r14d,edx
    de54:	nop    DWORD PTR [rax+0x0]
    de58:	mov    r15,QWORD PTR [r12]
    de5c:	test   r15,r15
    de5f:	je     df1a <__cxa_finalize@plt+0xa102>
    de65:	mov    rbx,QWORD PTR [r12+0x8]
    de6a:	test   rbx,rbx
    de6d:	jne    de8c <__cxa_finalize@plt+0xa074>
    de6f:	jmp    decb <__cxa_finalize@plt+0xa0b3>
    de71:	nop    DWORD PTR [rax+0x0]
    de78:	mov    rcx,QWORD PTR [rax+0x8]
    de7c:	test   rdx,rdx
    de7f:	mov    QWORD PTR [rbx+0x8],rcx
    de83:	mov    QWORD PTR [rax+0x8],rbx
    de87:	mov    rbx,rdx
    de8a:	je     dec7 <__cxa_finalize@plt+0xa0af>
    de8c:	mov    r15,QWORD PTR [rbx]
    de8f:	mov    rdi,rbp
    de92:	mov    rsi,r15
    de95:	call   dc60 <__cxa_finalize@plt+0x9e48>
    de9a:	cmp    QWORD PTR [rax],0x0
    de9e:	mov    rdx,QWORD PTR [rbx+0x8]
    dea2:	jne    de78 <__cxa_finalize@plt+0xa060>
    dea4:	mov    QWORD PTR [rax],r15
    dea7:	add    QWORD PTR [rbp+0x18],0x1
    deac:	test   rdx,rdx
    deaf:	mov    QWORD PTR [rbx],0x0
    deb6:	mov    rax,QWORD PTR [rbp+0x48]
    deba:	mov    QWORD PTR [rbx+0x8],rax
    debe:	mov    QWORD PTR [rbp+0x48],rbx
    dec2:	mov    rbx,rdx
    dec5:	jne    de8c <__cxa_finalize@plt+0xa074>
    dec7:	mov    r15,QWORD PTR [r12]
    decb:	test   r14b,r14b
    dece:	mov    QWORD PTR [r12+0x8],0x0
    ded7:	jne    df1a <__cxa_finalize@plt+0xa102>
    ded9:	mov    rsi,r15
    dedc:	mov    rdi,rbp
    dedf:	call   dc60 <__cxa_finalize@plt+0x9e48>
    dee4:	cmp    QWORD PTR [rax],0x0
    dee8:	mov    rbx,rax
    deeb:	je     df40 <__cxa_finalize@plt+0xa128>
    deed:	mov    rax,QWORD PTR [rbp+0x48]
    def1:	test   rax,rax
    def4:	je     df50 <__cxa_finalize@plt+0xa138>
    def6:	mov    rdx,QWORD PTR [rax+0x8]
    defa:	mov    QWORD PTR [rbp+0x48],rdx
    defe:	mov    rdx,QWORD PTR [rbx+0x8]
    df02:	mov    QWORD PTR [rax],r15
    df05:	mov    QWORD PTR [rax+0x8],rdx
    df09:	mov    QWORD PTR [rbx+0x8],rax
    df0d:	mov    QWORD PTR [r12],0x0
    df15:	sub    QWORD PTR [r13+0x18],0x1
    df1a:	add    r12,0x10
    df1e:	cmp    QWORD PTR [r13+0x8],r12
    df22:	ja     de58 <__cxa_finalize@plt+0xa040>
    df28:	add    rsp,0x8
    df2c:	mov    eax,0x1
    df31:	pop    rbx
    df32:	pop    rbp
    df33:	pop    r12
    df35:	pop    r13
    df37:	pop    r14
    df39:	pop    r15
    df3b:	ret    
    df3c:	nop    DWORD PTR [rax+0x0]
    df40:	mov    QWORD PTR [rax],r15
    df43:	add    QWORD PTR [rbp+0x18],0x1
    df48:	jmp    df0d <__cxa_finalize@plt+0xa0f5>
    df4a:	nop    WORD PTR [rax+rax*1+0x0]
    df50:	mov    edi,0x10
    df55:	call   3ac0 <malloc@plt>
    df5a:	test   rax,rax
    df5d:	jne    defe <__cxa_finalize@plt+0xa0e6>
    df5f:	add    rsp,0x8
    df63:	xor    eax,eax
    df65:	pop    rbx
    df66:	pop    rbp
    df67:	pop    r12
    df69:	pop    r13
    df6b:	pop    r14
    df6d:	pop    r15
    df6f:	ret    
    df70:	mov    rax,QWORD PTR [rdi+0x10]
    df74:	ret    
    df75:	nop
    df76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    df80:	mov    rax,QWORD PTR [rdi+0x18]
    df84:	ret    
    df85:	nop
    df86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    df90:	mov    rax,QWORD PTR [rdi+0x20]
    df94:	ret    
    df95:	nop
    df96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dfa0:	mov    rsi,QWORD PTR [rdi]
    dfa3:	mov    rdi,QWORD PTR [rdi+0x8]
    dfa7:	xor    eax,eax
    dfa9:	cmp    rsi,rdi
    dfac:	jae    dfe7 <__cxa_finalize@plt+0xa1cf>
    dfae:	xchg   ax,ax
    dfb0:	cmp    QWORD PTR [rsi],0x0
    dfb4:	je     dfdc <__cxa_finalize@plt+0xa1c4>
    dfb6:	mov    rdx,QWORD PTR [rsi+0x8]
    dfba:	mov    ecx,0x1
    dfbf:	test   rdx,rdx
    dfc2:	je     dfd5 <__cxa_finalize@plt+0xa1bd>
    dfc4:	nop    DWORD PTR [rax+0x0]
    dfc8:	mov    rdx,QWORD PTR [rdx+0x8]
    dfcc:	add    rcx,0x1
    dfd0:	test   rdx,rdx
    dfd3:	jne    dfc8 <__cxa_finalize@plt+0xa1b0>
    dfd5:	cmp    rax,rcx
    dfd8:	cmovb  rax,rcx
    dfdc:	add    rsi,0x10
    dfe0:	cmp    rsi,rdi
    dfe3:	jb     dfb0 <__cxa_finalize@plt+0xa198>
    dfe5:	repz ret 
    dfe7:	repz ret 
    dfe9:	nop    DWORD PTR [rax+0x0]
    dff0:	mov    rcx,QWORD PTR [rdi]
    dff3:	mov    r8,QWORD PTR [rdi+0x8]
    dff7:	xor    edx,edx
    dff9:	xor    esi,esi
    dffb:	cmp    rcx,r8
    dffe:	jae    e036 <__cxa_finalize@plt+0xa21e>
    e000:	cmp    QWORD PTR [rcx],0x0
    e004:	je     e02d <__cxa_finalize@plt+0xa215>
    e006:	mov    rax,QWORD PTR [rcx+0x8]
    e00a:	add    rsi,0x1
    e00e:	add    rdx,0x1
    e012:	test   rax,rax
    e015:	je     e02d <__cxa_finalize@plt+0xa215>
    e017:	nop    WORD PTR [rax+rax*1+0x0]
    e020:	mov    rax,QWORD PTR [rax+0x8]
    e024:	add    rdx,0x1
    e028:	test   rax,rax
    e02b:	jne    e020 <__cxa_finalize@plt+0xa208>
    e02d:	add    rcx,0x10
    e031:	cmp    rcx,r8
    e034:	jb     e000 <__cxa_finalize@plt+0xa1e8>
    e036:	xor    eax,eax
    e038:	cmp    QWORD PTR [rdi+0x18],rsi
    e03c:	je     e040 <__cxa_finalize@plt+0xa228>
    e03e:	repz ret 
    e040:	cmp    QWORD PTR [rdi+0x20],rdx
    e044:	sete   al
    e047:	ret    
    e048:	nop    DWORD PTR [rax+rax*1+0x0]
    e050:	push   r13
    e052:	push   r12
    e054:	mov    r12,rsi
    e057:	push   rbp
    e058:	push   rbx
    e059:	xor    ebx,ebx
    e05b:	sub    rsp,0x8
    e05f:	mov    rsi,QWORD PTR [rdi]
    e062:	mov    rcx,QWORD PTR [rdi+0x20]
    e066:	mov    rbp,QWORD PTR [rdi+0x10]
    e06a:	mov    r13,QWORD PTR [rdi+0x18]
    e06e:	mov    rdi,QWORD PTR [rdi+0x8]
    e072:	cmp    rsi,rdi
    e075:	jae    e0b5 <__cxa_finalize@plt+0xa29d>
    e077:	nop    WORD PTR [rax+rax*1+0x0]
    e080:	cmp    QWORD PTR [rsi],0x0
    e084:	je     e0ac <__cxa_finalize@plt+0xa294>
    e086:	mov    rax,QWORD PTR [rsi+0x8]
    e08a:	mov    edx,0x1
    e08f:	test   rax,rax
    e092:	je     e0a5 <__cxa_finalize@plt+0xa28d>
    e094:	nop    DWORD PTR [rax+0x0]
    e098:	mov    rax,QWORD PTR [rax+0x8]
    e09c:	add    rdx,0x1
    e0a0:	test   rax,rax
    e0a3:	jne    e098 <__cxa_finalize@plt+0xa280>
    e0a5:	cmp    rbx,rdx
    e0a8:	cmovb  rbx,rdx
    e0ac:	add    rsi,0x10
    e0b0:	cmp    rsi,rdi
    e0b3:	jb     e080 <__cxa_finalize@plt+0xa268>
    e0b5:	lea    rdx,[rip+0xe20a]        # 1c2c6 <_IO_stdin_used@@Base+0x2926>
    e0bc:	mov    esi,0x1
    e0c1:	mov    rdi,r12
    e0c4:	xor    eax,eax
    e0c6:	call   3d70 <__fprintf_chk@plt>
    e0cb:	lea    rdx,[rip+0xe20c]        # 1c2de <_IO_stdin_used@@Base+0x293e>
    e0d2:	xor    eax,eax
    e0d4:	mov    rcx,rbp
    e0d7:	mov    esi,0x1
    e0dc:	mov    rdi,r12
    e0df:	call   3d70 <__fprintf_chk@plt>
    e0e4:	test   r13,r13
    e0e7:	js     e150 <__cxa_finalize@plt+0xa338>
    e0e9:	pxor   xmm0,xmm0
    e0ed:	test   rbp,rbp
    e0f0:	cvtsi2sd xmm0,r13
    e0f5:	mulsd  xmm0,QWORD PTR [rip+0xe27b]        # 1c378 <_IO_stdin_used@@Base+0x29d8>
    e0fd:	js     e179 <__cxa_finalize@plt+0xa361>
    e0ff:	pxor   xmm1,xmm1
    e103:	cvtsi2sd xmm1,rbp
    e108:	divsd  xmm0,xmm1
    e10c:	lea    rdx,[rip+0xe1fd]        # 1c310 <_IO_stdin_used@@Base+0x2970>
    e113:	mov    rcx,r13
    e116:	mov    rdi,r12
    e119:	mov    esi,0x1
    e11e:	mov    eax,0x1
    e123:	call   3d70 <__fprintf_chk@plt>
    e128:	add    rsp,0x8
    e12c:	mov    rcx,rbx
    e12f:	mov    rdi,r12
    e132:	pop    rbx
    e133:	pop    rbp
    e134:	pop    r12
    e136:	pop    r13
    e138:	lea    rdx,[rip+0xe1b7]        # 1c2f6 <_IO_stdin_used@@Base+0x2956>
    e13f:	mov    esi,0x1
    e144:	xor    eax,eax
    e146:	jmp    3d70 <__fprintf_chk@plt>
    e14b:	nop    DWORD PTR [rax+rax*1+0x0]
    e150:	mov    rax,r13
    e153:	mov    rdx,r13
    e156:	pxor   xmm0,xmm0
    e15a:	shr    rax,1
    e15d:	and    edx,0x1
    e160:	or     rax,rdx
    e163:	test   rbp,rbp
    e166:	cvtsi2sd xmm0,rax
    e16b:	addsd  xmm0,xmm0
    e16f:	mulsd  xmm0,QWORD PTR [rip+0xe201]        # 1c378 <_IO_stdin_used@@Base+0x29d8>
    e177:	jns    e0ff <__cxa_finalize@plt+0xa2e7>
    e179:	mov    rax,rbp
    e17c:	pxor   xmm1,xmm1
    e180:	shr    rax,1
    e183:	and    ebp,0x1
    e186:	or     rax,rbp
    e189:	cvtsi2sd xmm1,rax
    e18e:	addsd  xmm1,xmm1
    e192:	jmp    e108 <__cxa_finalize@plt+0xa2f0>
    e197:	nop    WORD PTR [rax+rax*1+0x0]
    e1a0:	push   r12
    e1a2:	push   rbp
    e1a3:	mov    r12,rdi
    e1a6:	push   rbx
    e1a7:	mov    rbp,rsi
    e1aa:	call   dc60 <__cxa_finalize@plt+0x9e48>
    e1af:	mov    rsi,QWORD PTR [rax]
    e1b2:	test   rsi,rsi
    e1b5:	je     e1dd <__cxa_finalize@plt+0xa3c5>
    e1b7:	mov    rbx,rax
    e1ba:	jmp    e1c3 <__cxa_finalize@plt+0xa3ab>
    e1bc:	nop    DWORD PTR [rax+0x0]
    e1c0:	mov    rsi,QWORD PTR [rbx]
    e1c3:	cmp    rsi,rbp
    e1c6:	je     e1df <__cxa_finalize@plt+0xa3c7>
    e1c8:	mov    rdi,rbp
    e1cb:	call   QWORD PTR [r12+0x38]
    e1d0:	test   al,al
    e1d2:	jne    e1f0 <__cxa_finalize@plt+0xa3d8>
    e1d4:	mov    rbx,QWORD PTR [rbx+0x8]
    e1d8:	test   rbx,rbx
    e1db:	jne    e1c0 <__cxa_finalize@plt+0xa3a8>
    e1dd:	xor    esi,esi
    e1df:	pop    rbx
    e1e0:	mov    rax,rsi
    e1e3:	pop    rbp
    e1e4:	pop    r12
    e1e6:	ret    
    e1e7:	nop    WORD PTR [rax+rax*1+0x0]
    e1f0:	mov    rsi,QWORD PTR [rbx]
    e1f3:	pop    rbx
    e1f4:	pop    rbp
    e1f5:	mov    rax,rsi
    e1f8:	pop    r12
    e1fa:	ret    
    e1fb:	nop    DWORD PTR [rax+rax*1+0x0]
    e200:	cmp    QWORD PTR [rdi+0x20],0x0
    e205:	je     e233 <__cxa_finalize@plt+0xa41b>
    e207:	mov    rdx,QWORD PTR [rdi]
    e20a:	mov    rcx,QWORD PTR [rdi+0x8]
    e20e:	cmp    rdx,rcx
    e211:	jae    e238 <__cxa_finalize@plt+0xa420>
    e213:	mov    rax,QWORD PTR [rdx]
    e216:	test   rax,rax
    e219:	jne    e236 <__cxa_finalize@plt+0xa41e>
    e21b:	nop    DWORD PTR [rax+rax*1+0x0]
    e220:	add    rdx,0x10
    e224:	cmp    rdx,rcx
    e227:	jae    e238 <__cxa_finalize@plt+0xa420>
    e229:	mov    rax,QWORD PTR [rdx]
    e22c:	test   rax,rax
    e22f:	je     e220 <__cxa_finalize@plt+0xa408>
    e231:	repz ret 
    e233:	xor    eax,eax
    e235:	ret    
    e236:	repz ret 
    e238:	sub    rsp,0x8
    e23c:	call   3530 <abort@plt>
    e241:	nop    DWORD PTR [rax+rax*1+0x0]
    e246:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e250:	push   rbp
    e251:	push   rbx
    e252:	mov    rbp,rdi
    e255:	mov    rbx,rsi
    e258:	sub    rsp,0x8
    e25c:	call   dc60 <__cxa_finalize@plt+0x9e48>
    e261:	mov    rdx,rax
    e264:	mov    rcx,rax
    e267:	mov    rax,QWORD PTR [rdx]
    e26a:	mov    rdx,QWORD PTR [rdx+0x8]
    e26e:	cmp    rax,rbx
    e271:	je     e289 <__cxa_finalize@plt+0xa471>
    e273:	nop    DWORD PTR [rax+rax*1+0x0]
    e278:	test   rdx,rdx
    e27b:	je     e28e <__cxa_finalize@plt+0xa476>
    e27d:	mov    rax,QWORD PTR [rdx]
    e280:	mov    rdx,QWORD PTR [rdx+0x8]
    e284:	cmp    rax,rbx
    e287:	jne    e278 <__cxa_finalize@plt+0xa460>
    e289:	test   rdx,rdx
    e28c:	jne    e2b8 <__cxa_finalize@plt+0xa4a0>
    e28e:	mov    rdx,QWORD PTR [rbp+0x8]
    e292:	jmp    e2a0 <__cxa_finalize@plt+0xa488>
    e294:	nop    DWORD PTR [rax+0x0]
    e298:	mov    rax,QWORD PTR [rcx]
    e29b:	test   rax,rax
    e29e:	jne    e2ab <__cxa_finalize@plt+0xa493>
    e2a0:	add    rcx,0x10
    e2a4:	cmp    rdx,rcx
    e2a7:	ja     e298 <__cxa_finalize@plt+0xa480>
    e2a9:	xor    eax,eax
    e2ab:	add    rsp,0x8
    e2af:	pop    rbx
    e2b0:	pop    rbp
    e2b1:	ret    
    e2b2:	nop    WORD PTR [rax+rax*1+0x0]
    e2b8:	mov    rax,QWORD PTR [rdx]
    e2bb:	add    rsp,0x8
    e2bf:	pop    rbx
    e2c0:	pop    rbp
    e2c1:	ret    
    e2c2:	nop    DWORD PTR [rax+0x0]
    e2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e2d0:	mov    r9,QWORD PTR [rdi]
    e2d3:	cmp    QWORD PTR [rdi+0x8],r9
    e2d7:	jbe    e332 <__cxa_finalize@plt+0xa51a>
    e2d9:	xor    r8d,r8d
    e2dc:	mov    rcx,QWORD PTR [r9]
    e2df:	test   rcx,rcx
    e2e2:	je     e31d <__cxa_finalize@plt+0xa505>
    e2e4:	cmp    rdx,r8
    e2e7:	jbe    e327 <__cxa_finalize@plt+0xa50f>
    e2e9:	mov    QWORD PTR [rsi+r8*8],rcx
    e2ed:	mov    rcx,QWORD PTR [r9+0x8]
    e2f1:	lea    rax,[r8+0x1]
    e2f5:	test   rcx,rcx
    e2f8:	je     e31a <__cxa_finalize@plt+0xa502>
    e2fa:	nop    WORD PTR [rax+rax*1+0x0]
    e300:	cmp    rdx,rax
    e303:	je     e330 <__cxa_finalize@plt+0xa518>
    e305:	mov    r8,QWORD PTR [rcx]
    e308:	add    rax,0x1
    e30c:	mov    QWORD PTR [rsi+rax*8-0x8],r8
    e311:	mov    rcx,QWORD PTR [rcx+0x8]
    e315:	test   rcx,rcx
    e318:	jne    e300 <__cxa_finalize@plt+0xa4e8>
    e31a:	mov    r8,rax
    e31d:	add    r9,0x10
    e321:	cmp    QWORD PTR [rdi+0x8],r9
    e325:	ja     e2dc <__cxa_finalize@plt+0xa4c4>
    e327:	mov    rax,r8
    e32a:	ret    
    e32b:	nop    DWORD PTR [rax+rax*1+0x0]
    e330:	repz ret 
    e332:	xor    eax,eax
    e334:	ret    
    e335:	nop
    e336:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e340:	push   r15
    e342:	push   r14
    e344:	push   r13
    e346:	push   r12
    e348:	push   rbp
    e349:	push   rbx
    e34a:	sub    rsp,0x8
    e34e:	mov    r14,QWORD PTR [rdi]
    e351:	cmp    QWORD PTR [rdi+0x8],r14
    e355:	jbe    e3a6 <__cxa_finalize@plt+0xa58e>
    e357:	mov    r13,rdx
    e35a:	mov    r12,rsi
    e35d:	mov    r15,rdi
    e360:	xor    ebp,ebp
    e362:	mov    rdi,QWORD PTR [r14]
    e365:	test   rdi,rdi
    e368:	je     e38a <__cxa_finalize@plt+0xa572>
    e36a:	mov    rbx,r14
    e36d:	jmp    e373 <__cxa_finalize@plt+0xa55b>
    e36f:	nop
    e370:	mov    rdi,QWORD PTR [rbx]
    e373:	mov    rsi,r13
    e376:	call   r12
    e379:	test   al,al
    e37b:	je     e394 <__cxa_finalize@plt+0xa57c>
    e37d:	mov    rbx,QWORD PTR [rbx+0x8]
    e381:	add    rbp,0x1
    e385:	test   rbx,rbx
    e388:	jne    e370 <__cxa_finalize@plt+0xa558>
    e38a:	add    r14,0x10
    e38e:	cmp    QWORD PTR [r15+0x8],r14
    e392:	ja     e362 <__cxa_finalize@plt+0xa54a>
    e394:	add    rsp,0x8
    e398:	mov    rax,rbp
    e39b:	pop    rbx
    e39c:	pop    rbp
    e39d:	pop    r12
    e39f:	pop    r13
    e3a1:	pop    r14
    e3a3:	pop    r15
    e3a5:	ret    
    e3a6:	xor    ebp,ebp
    e3a8:	jmp    e394 <__cxa_finalize@plt+0xa57c>
    e3aa:	nop    WORD PTR [rax+rax*1+0x0]
    e3b0:	movzx  ecx,BYTE PTR [rdi]
    e3b3:	xor    edx,edx
    e3b5:	test   cl,cl
    e3b7:	je     e3dd <__cxa_finalize@plt+0xa5c5>
    e3b9:	nop    DWORD PTR [rax+0x0]
    e3c0:	mov    rax,rdx
    e3c3:	add    rdi,0x1
    e3c7:	shl    rax,0x5
    e3cb:	sub    rax,rdx
    e3ce:	xor    edx,edx
    e3d0:	add    rax,rcx
    e3d3:	movzx  ecx,BYTE PTR [rdi]
    e3d6:	div    rsi
    e3d9:	test   cl,cl
    e3db:	jne    e3c0 <__cxa_finalize@plt+0xa5a8>
    e3dd:	mov    rax,rdx
    e3e0:	ret    
    e3e1:	nop    DWORD PTR [rax+rax*1+0x0]
    e3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e3f0:	movabs rax,0x3f80000000000000
    e3fa:	mov    BYTE PTR [rdi+0x10],0x0
    e3fe:	mov    QWORD PTR [rdi],rax
    e401:	movabs rax,0x3fb4fdf43f4ccccd
    e40b:	mov    QWORD PTR [rdi+0x8],rax
    e40f:	ret    
    e410:	push   r15
    e412:	push   r14
    e414:	lea    rax,[rip+0xfffffffffffff825]        # dc40 <__cxa_finalize@plt+0x9e28>
    e41b:	push   r13
    e41d:	push   r12
    e41f:	mov    r12,rdx
    e422:	push   rbp
    e423:	push   rbx
    e424:	mov    r13,rcx
    e427:	mov    rbp,rdi
    e42a:	mov    edi,0x50
    e42f:	mov    r15,rsi
    e432:	sub    rsp,0x8
    e436:	test   rdx,rdx
    e439:	mov    r14,r8
    e43c:	cmove  r12,rax
    e440:	lea    rax,[rip+0xfffffffffffff809]        # dc50 <__cxa_finalize@plt+0x9e38>
    e447:	test   rcx,rcx
    e44a:	cmove  r13,rax
    e44e:	call   3ac0 <malloc@plt>
    e453:	test   rax,rax
    e456:	mov    rbx,rax
    e459:	je     e50a <__cxa_finalize@plt+0xa6f2>
    e45f:	test   r15,r15
    e462:	lea    rdi,[rax+0x28]
    e466:	je     e520 <__cxa_finalize@plt+0xa708>
    e46c:	mov    QWORD PTR [rax+0x28],r15
    e470:	call   ddb0 <__cxa_finalize@plt+0x9f98>
    e475:	test   al,al
    e477:	je     e500 <__cxa_finalize@plt+0xa6e8>
    e47d:	cmp    BYTE PTR [r15+0x10],0x0
    e482:	je     e580 <__cxa_finalize@plt+0xa768>
    e488:	mov    rdi,rbp
    e48b:	call   dba0 <__cxa_finalize@plt+0x9d88>
    e490:	mov    edx,0x8
    e495:	mov    rbp,rax
    e498:	xor    ecx,ecx
    e49a:	mov    rax,rdx
    e49d:	mul    rbp
    e4a0:	jo     e5ba <__cxa_finalize@plt+0xa7a2>
    e4a6:	test   rax,rax
    e4a9:	js     e500 <__cxa_finalize@plt+0xa6e8>
    e4ab:	test   rcx,rcx
    e4ae:	jne    e500 <__cxa_finalize@plt+0xa6e8>
    e4b0:	test   rbp,rbp
    e4b3:	mov    QWORD PTR [rbx+0x10],rbp
    e4b7:	je     e500 <__cxa_finalize@plt+0xa6e8>
    e4b9:	mov    esi,0x10
    e4be:	mov    rdi,rbp
    e4c1:	call   3970 <calloc@plt>
    e4c6:	test   rax,rax
    e4c9:	mov    QWORD PTR [rbx],rax
    e4cc:	je     e500 <__cxa_finalize@plt+0xa6e8>
    e4ce:	shl    rbp,0x4
    e4d2:	mov    QWORD PTR [rbx+0x18],0x0
    e4da:	mov    QWORD PTR [rbx+0x20],0x0
    e4e2:	add    rbp,rax
    e4e5:	mov    QWORD PTR [rbx+0x30],r12
    e4e9:	mov    QWORD PTR [rbx+0x38],r13
    e4ed:	mov    QWORD PTR [rbx+0x8],rbp
    e4f1:	mov    QWORD PTR [rbx+0x40],r14
    e4f5:	mov    QWORD PTR [rbx+0x48],0x0
    e4fd:	jmp    e50a <__cxa_finalize@plt+0xa6f2>
    e4ff:	nop
    e500:	mov    rdi,rbx
    e503:	xor    ebx,ebx
    e505:	call   3e10 <free@plt>
    e50a:	add    rsp,0x8
    e50e:	mov    rax,rbx
    e511:	pop    rbx
    e512:	pop    rbp
    e513:	pop    r12
    e515:	pop    r13
    e517:	pop    r14
    e519:	pop    r15
    e51b:	ret    
    e51c:	nop    DWORD PTR [rax+0x0]
    e520:	lea    rax,[rip+0xde19]        # 1c340 <_IO_stdin_used@@Base+0x29a0>
    e527:	mov    QWORD PTR [rbx+0x28],rax
    e52b:	call   ddb0 <__cxa_finalize@plt+0x9f98>
    e530:	test   al,al
    e532:	movss  xmm1,DWORD PTR [rip+0xde2e]        # 1c368 <_IO_stdin_used@@Base+0x29c8>
    e53a:	je     e500 <__cxa_finalize@plt+0xa6e8>
    e53c:	test   rbp,rbp
    e53f:	js     e58b <__cxa_finalize@plt+0xa773>
    e541:	pxor   xmm0,xmm0
    e545:	cvtsi2ss xmm0,rbp
    e54a:	divss  xmm0,xmm1
    e54e:	ucomiss xmm0,DWORD PTR [rip+0xde17]        # 1c36c <_IO_stdin_used@@Base+0x29cc>
    e555:	jae    e500 <__cxa_finalize@plt+0xa6e8>
    e557:	ucomiss xmm0,DWORD PTR [rip+0xde12]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    e55e:	jb     e5b0 <__cxa_finalize@plt+0xa798>
    e560:	subss  xmm0,DWORD PTR [rip+0xde08]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    e568:	movabs rax,0x8000000000000000
    e572:	cvttss2si rbp,xmm0
    e577:	xor    rbp,rax
    e57a:	jmp    e488 <__cxa_finalize@plt+0xa670>
    e57f:	nop
    e580:	test   rbp,rbp
    e583:	movss  xmm1,DWORD PTR [r15+0x8]
    e589:	jns    e541 <__cxa_finalize@plt+0xa729>
    e58b:	mov    rax,rbp
    e58e:	pxor   xmm0,xmm0
    e592:	shr    rax,1
    e595:	and    ebp,0x1
    e598:	or     rax,rbp
    e59b:	cvtsi2ss xmm0,rax
    e5a0:	addss  xmm0,xmm0
    e5a4:	jmp    e54a <__cxa_finalize@plt+0xa732>
    e5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e5b0:	cvttss2si rbp,xmm0
    e5b5:	jmp    e488 <__cxa_finalize@plt+0xa670>
    e5ba:	mov    ecx,0x1
    e5bf:	jmp    e4a6 <__cxa_finalize@plt+0xa68e>
    e5c4:	xchg   ax,ax
    e5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e5d0:	push   r12
    e5d2:	push   rbp
    e5d3:	mov    rbp,rdi
    e5d6:	push   rbx
    e5d7:	mov    r12,QWORD PTR [rdi]
    e5da:	cmp    r12,QWORD PTR [rdi+0x8]
    e5de:	jae    e64b <__cxa_finalize@plt+0xa833>
    e5e0:	cmp    QWORD PTR [r12],0x0
    e5e5:	je     e641 <__cxa_finalize@plt+0xa829>
    e5e7:	mov    rbx,QWORD PTR [r12+0x8]
    e5ec:	mov    rax,QWORD PTR [rbp+0x40]
    e5f0:	test   rbx,rbx
    e5f3:	je     e625 <__cxa_finalize@plt+0xa80d>
    e5f5:	nop    DWORD PTR [rax]
    e5f8:	test   rax,rax
    e5fb:	je     e606 <__cxa_finalize@plt+0xa7ee>
    e5fd:	mov    rdi,QWORD PTR [rbx]
    e600:	call   rax
    e602:	mov    rax,QWORD PTR [rbp+0x40]
    e606:	mov    rdx,QWORD PTR [rbx+0x8]
    e60a:	mov    rcx,QWORD PTR [rbp+0x48]
    e60e:	mov    QWORD PTR [rbx],0x0
    e615:	test   rdx,rdx
    e618:	mov    QWORD PTR [rbx+0x8],rcx
    e61c:	mov    QWORD PTR [rbp+0x48],rbx
    e620:	mov    rbx,rdx
    e623:	jne    e5f8 <__cxa_finalize@plt+0xa7e0>
    e625:	test   rax,rax
    e628:	je     e630 <__cxa_finalize@plt+0xa818>
    e62a:	mov    rdi,QWORD PTR [r12]
    e62e:	call   rax
    e630:	mov    QWORD PTR [r12],0x0
    e638:	mov    QWORD PTR [r12+0x8],0x0
    e641:	add    r12,0x10
    e645:	cmp    QWORD PTR [rbp+0x8],r12
    e649:	ja     e5e0 <__cxa_finalize@plt+0xa7c8>
    e64b:	mov    QWORD PTR [rbp+0x18],0x0
    e653:	mov    QWORD PTR [rbp+0x20],0x0
    e65b:	pop    rbx
    e65c:	pop    rbp
    e65d:	pop    r12
    e65f:	ret    
    e660:	push   r12
    e662:	push   rbp
    e663:	mov    r12,rdi
    e666:	push   rbx
    e667:	cmp    QWORD PTR [rdi+0x40],0x0
    e66c:	mov    rbp,QWORD PTR [rdi]
    e66f:	mov    rax,QWORD PTR [rdi+0x8]
    e673:	je     e6c3 <__cxa_finalize@plt+0xa8ab>
    e675:	cmp    QWORD PTR [rdi+0x20],0x0
    e67a:	je     e6c3 <__cxa_finalize@plt+0xa8ab>
    e67c:	cmp    rbp,rax
    e67f:	jae    e6fc <__cxa_finalize@plt+0xa8e4>
    e681:	nop    DWORD PTR [rax+0x0]
    e688:	mov    rdi,QWORD PTR [rbp+0x0]
    e68c:	test   rdi,rdi
    e68f:	je     e6b6 <__cxa_finalize@plt+0xa89e>
    e691:	mov    rbx,rbp
    e694:	jmp    e6a3 <__cxa_finalize@plt+0xa88b>
    e696:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e6a0:	mov    rdi,QWORD PTR [rbx]
    e6a3:	call   QWORD PTR [r12+0x40]
    e6a8:	mov    rbx,QWORD PTR [rbx+0x8]
    e6ac:	test   rbx,rbx
    e6af:	jne    e6a0 <__cxa_finalize@plt+0xa888>
    e6b1:	mov    rax,QWORD PTR [r12+0x8]
    e6b6:	add    rbp,0x10
    e6ba:	cmp    rax,rbp
    e6bd:	ja     e688 <__cxa_finalize@plt+0xa870>
    e6bf:	mov    rbp,QWORD PTR [r12]
    e6c3:	cmp    rbp,rax
    e6c6:	jae    e6fc <__cxa_finalize@plt+0xa8e4>
    e6c8:	nop    DWORD PTR [rax+rax*1+0x0]
    e6d0:	mov    rdi,QWORD PTR [rbp+0x8]
    e6d4:	test   rdi,rdi
    e6d7:	je     e6f1 <__cxa_finalize@plt+0xa8d9>
    e6d9:	nop    DWORD PTR [rax+0x0]
    e6e0:	mov    rbx,QWORD PTR [rdi+0x8]
    e6e4:	call   3e10 <free@plt>
    e6e9:	test   rbx,rbx
    e6ec:	mov    rdi,rbx
    e6ef:	jne    e6e0 <__cxa_finalize@plt+0xa8c8>
    e6f1:	add    rbp,0x10
    e6f5:	cmp    QWORD PTR [r12+0x8],rbp
    e6fa:	ja     e6d0 <__cxa_finalize@plt+0xa8b8>
    e6fc:	mov    rdi,QWORD PTR [r12+0x48]
    e701:	test   rdi,rdi
    e704:	je     e721 <__cxa_finalize@plt+0xa909>
    e706:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e710:	mov    rbx,QWORD PTR [rdi+0x8]
    e714:	call   3e10 <free@plt>
    e719:	test   rbx,rbx
    e71c:	mov    rdi,rbx
    e71f:	jne    e710 <__cxa_finalize@plt+0xa8f8>
    e721:	mov    rdi,QWORD PTR [r12]
    e725:	call   3e10 <free@plt>
    e72a:	pop    rbx
    e72b:	mov    rdi,r12
    e72e:	pop    rbp
    e72f:	pop    r12
    e731:	jmp    3e10 <free@plt>
    e736:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e740:	push   r12
    e742:	push   rbp
    e743:	mov    rbp,rdi
    e746:	push   rbx
    e747:	sub    rsp,0x60
    e74b:	mov    r12,QWORD PTR [rdi+0x28]
    e74f:	mov    rax,QWORD PTR fs:0x28
    e758:	mov    QWORD PTR [rsp+0x58],rax
    e75d:	xor    eax,eax
    e75f:	cmp    BYTE PTR [r12+0x10],0x0
    e765:	jne    e7b8 <__cxa_finalize@plt+0xa9a0>
    e767:	test   rsi,rsi
    e76a:	js     e8e8 <__cxa_finalize@plt+0xaad0>
    e770:	pxor   xmm0,xmm0
    e774:	cvtsi2ss xmm0,rsi
    e779:	divss  xmm0,DWORD PTR [r12+0x8]
    e780:	ucomiss xmm0,DWORD PTR [rip+0xdbe5]        # 1c36c <_IO_stdin_used@@Base+0x29cc>
    e787:	jae    e8c0 <__cxa_finalize@plt+0xaaa8>
    e78d:	ucomiss xmm0,DWORD PTR [rip+0xdbdc]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    e794:	jb     e910 <__cxa_finalize@plt+0xaaf8>
    e79a:	subss  xmm0,DWORD PTR [rip+0xdbce]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    e7a2:	movabs rax,0x8000000000000000
    e7ac:	cvttss2si rsi,xmm0
    e7b1:	xor    rsi,rax
    e7b4:	nop    DWORD PTR [rax+0x0]
    e7b8:	mov    rdi,rsi
    e7bb:	call   dba0 <__cxa_finalize@plt+0x9d88>
    e7c0:	mov    edx,0x8
    e7c5:	mov    rbx,rax
    e7c8:	xor    ecx,ecx
    e7ca:	mov    rax,rdx
    e7cd:	mul    rbx
    e7d0:	jo     e96f <__cxa_finalize@plt+0xab57>
    e7d6:	test   rax,rax
    e7d9:	mov    eax,0x1
    e7de:	cmovs  rcx,rax
    e7e2:	test   rbx,rbx
    e7e5:	je     e8c0 <__cxa_finalize@plt+0xaaa8>
    e7eb:	and    ecx,0x1
    e7ee:	jne    e8c0 <__cxa_finalize@plt+0xaaa8>
    e7f4:	cmp    QWORD PTR [rbp+0x10],rbx
    e7f8:	je     e920 <__cxa_finalize@plt+0xab08>
    e7fe:	mov    esi,0x10
    e803:	mov    rdi,rbx
    e806:	call   3970 <calloc@plt>
    e80b:	test   rax,rax
    e80e:	mov    QWORD PTR [rsp],rax
    e812:	je     e8c0 <__cxa_finalize@plt+0xaaa8>
    e818:	mov    QWORD PTR [rsp+0x10],rbx
    e81d:	shl    rbx,0x4
    e821:	mov    QWORD PTR [rsp+0x28],r12
    e826:	add    rbx,rax
    e829:	mov    rax,QWORD PTR [rbp+0x30]
    e82d:	mov    r12,rsp
    e830:	xor    edx,edx
    e832:	mov    rsi,rbp
    e835:	mov    rdi,r12
    e838:	mov    QWORD PTR [rsp+0x8],rbx
    e83d:	mov    QWORD PTR [rsp+0x18],0x0
    e846:	mov    QWORD PTR [rsp+0x30],rax
    e84b:	mov    rax,QWORD PTR [rbp+0x38]
    e84f:	mov    QWORD PTR [rsp+0x20],0x0
    e858:	mov    QWORD PTR [rsp+0x38],rax
    e85d:	mov    rax,QWORD PTR [rbp+0x40]
    e861:	mov    QWORD PTR [rsp+0x40],rax
    e866:	mov    rax,QWORD PTR [rbp+0x48]
    e86a:	mov    QWORD PTR [rsp+0x48],rax
    e86f:	call   de30 <__cxa_finalize@plt+0xa018>
    e874:	test   al,al
    e876:	mov    ebx,eax
    e878:	jne    e930 <__cxa_finalize@plt+0xab18>
    e87e:	mov    rax,QWORD PTR [rsp+0x48]
    e883:	mov    edx,0x1
    e888:	mov    rsi,r12
    e88b:	mov    rdi,rbp
    e88e:	mov    QWORD PTR [rbp+0x48],rax
    e892:	call   de30 <__cxa_finalize@plt+0xa018>
    e897:	test   al,al
    e899:	je     e979 <__cxa_finalize@plt+0xab61>
    e89f:	xor    edx,edx
    e8a1:	mov    rsi,r12
    e8a4:	mov    rdi,rbp
    e8a7:	call   de30 <__cxa_finalize@plt+0xa018>
    e8ac:	test   al,al
    e8ae:	je     e979 <__cxa_finalize@plt+0xab61>
    e8b4:	mov    rdi,QWORD PTR [rsp]
    e8b8:	call   3e10 <free@plt>
    e8bd:	jmp    e8c2 <__cxa_finalize@plt+0xaaaa>
    e8bf:	nop
    e8c0:	xor    ebx,ebx
    e8c2:	mov    rcx,QWORD PTR [rsp+0x58]
    e8c7:	xor    rcx,QWORD PTR fs:0x28
    e8d0:	mov    eax,ebx
    e8d2:	jne    e96a <__cxa_finalize@plt+0xab52>
    e8d8:	add    rsp,0x60
    e8dc:	pop    rbx
    e8dd:	pop    rbp
    e8de:	pop    r12
    e8e0:	ret    
    e8e1:	nop    DWORD PTR [rax+0x0]
    e8e8:	mov    rax,rsi
    e8eb:	pxor   xmm0,xmm0
    e8ef:	shr    rax,1
    e8f2:	and    esi,0x1
    e8f5:	or     rax,rsi
    e8f8:	cvtsi2ss xmm0,rax
    e8fd:	addss  xmm0,xmm0
    e901:	jmp    e779 <__cxa_finalize@plt+0xa961>
    e906:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e910:	cvttss2si rsi,xmm0
    e915:	jmp    e7b8 <__cxa_finalize@plt+0xa9a0>
    e91a:	nop    WORD PTR [rax+rax*1+0x0]
    e920:	mov    ebx,0x1
    e925:	jmp    e8c2 <__cxa_finalize@plt+0xaaaa>
    e927:	nop    WORD PTR [rax+rax*1+0x0]
    e930:	mov    rdi,QWORD PTR [rbp+0x0]
    e934:	call   3e10 <free@plt>
    e939:	mov    rax,QWORD PTR [rsp]
    e93d:	mov    QWORD PTR [rbp+0x0],rax
    e941:	mov    rax,QWORD PTR [rsp+0x8]
    e946:	mov    QWORD PTR [rbp+0x8],rax
    e94a:	mov    rax,QWORD PTR [rsp+0x10]
    e94f:	mov    QWORD PTR [rbp+0x10],rax
    e953:	mov    rax,QWORD PTR [rsp+0x18]
    e958:	mov    QWORD PTR [rbp+0x18],rax
    e95c:	mov    rax,QWORD PTR [rsp+0x48]
    e961:	mov    QWORD PTR [rbp+0x48],rax
    e965:	jmp    e8c2 <__cxa_finalize@plt+0xaaaa>
    e96a:	call   3760 <__stack_chk_fail@plt>
    e96f:	mov    ecx,0x1
    e974:	jmp    e7d6 <__cxa_finalize@plt+0xa9be>
    e979:	call   3530 <abort@plt>
    e97e:	xchg   ax,ax
    e980:	push   r13
    e982:	push   r12
    e984:	push   rbp
    e985:	push   rbx
    e986:	sub    rsp,0x18
    e98a:	mov    rax,QWORD PTR fs:0x28
    e993:	mov    QWORD PTR [rsp+0x8],rax
    e998:	xor    eax,eax
    e99a:	test   rsi,rsi
    e99d:	je     eb5d <__cxa_finalize@plt+0xad45>
    e9a3:	mov    r12,rsp
    e9a6:	xor    ecx,ecx
    e9a8:	mov    r13,rdx
    e9ab:	mov    rdx,r12
    e9ae:	mov    rbx,rdi
    e9b1:	mov    rbp,rsi
    e9b4:	call   dc90 <__cxa_finalize@plt+0x9e78>
    e9b9:	test   rax,rax
    e9bc:	mov    rdx,rax
    e9bf:	je     e9f0 <__cxa_finalize@plt+0xabd8>
    e9c1:	xor    eax,eax
    e9c3:	test   r13,r13
    e9c6:	je     e9cc <__cxa_finalize@plt+0xabb4>
    e9c8:	mov    QWORD PTR [r13+0x0],rdx
    e9cc:	mov    rcx,QWORD PTR [rsp+0x8]
    e9d1:	xor    rcx,QWORD PTR fs:0x28
    e9da:	jne    ebff <__cxa_finalize@plt+0xade7>
    e9e0:	add    rsp,0x18
    e9e4:	pop    rbx
    e9e5:	pop    rbp
    e9e6:	pop    r12
    e9e8:	pop    r13
    e9ea:	ret    
    e9eb:	nop    DWORD PTR [rax+rax*1+0x0]
    e9f0:	mov    rax,QWORD PTR [rbx+0x18]
    e9f4:	test   rax,rax
    e9f7:	js     ea70 <__cxa_finalize@plt+0xac58>
    e9f9:	pxor   xmm1,xmm1
    e9fd:	mov    rdx,QWORD PTR [rbx+0x28]
    ea01:	cvtsi2ss xmm1,rax
    ea06:	mov    rax,QWORD PTR [rbx+0x10]
    ea0a:	test   rax,rax
    ea0d:	js     ea9a <__cxa_finalize@plt+0xac82>
    ea13:	pxor   xmm0,xmm0
    ea17:	cvtsi2ss xmm0,rax
    ea1c:	mulss  xmm0,DWORD PTR [rdx+0x8]
    ea21:	ucomiss xmm1,xmm0
    ea24:	ja     eac0 <__cxa_finalize@plt+0xaca8>
    ea2a:	mov    r12,QWORD PTR [rsp]
    ea2e:	cmp    QWORD PTR [r12],0x0
    ea33:	je     eb68 <__cxa_finalize@plt+0xad50>
    ea39:	mov    rax,QWORD PTR [rbx+0x48]
    ea3d:	test   rax,rax
    ea40:	je     eb80 <__cxa_finalize@plt+0xad68>
    ea46:	mov    rdx,QWORD PTR [rax+0x8]
    ea4a:	mov    QWORD PTR [rbx+0x48],rdx
    ea4e:	mov    rdx,QWORD PTR [r12+0x8]
    ea53:	mov    QWORD PTR [rax],rbp
    ea56:	mov    QWORD PTR [rax+0x8],rdx
    ea5a:	mov    QWORD PTR [r12+0x8],rax
    ea5f:	mov    eax,0x1
    ea64:	add    QWORD PTR [rbx+0x20],0x1
    ea69:	jmp    e9cc <__cxa_finalize@plt+0xabb4>
    ea6e:	xchg   ax,ax
    ea70:	mov    rdx,rax
    ea73:	pxor   xmm1,xmm1
    ea77:	and    eax,0x1
    ea7a:	shr    rdx,1
    ea7d:	or     rdx,rax
    ea80:	mov    rax,QWORD PTR [rbx+0x10]
    ea84:	cvtsi2ss xmm1,rdx
    ea89:	mov    rdx,QWORD PTR [rbx+0x28]
    ea8d:	test   rax,rax
    ea90:	addss  xmm1,xmm1
    ea94:	jns    ea13 <__cxa_finalize@plt+0xabfb>
    ea9a:	mov    rcx,rax
    ea9d:	pxor   xmm0,xmm0
    eaa1:	shr    rcx,1
    eaa4:	and    eax,0x1
    eaa7:	or     rcx,rax
    eaaa:	cvtsi2ss xmm0,rcx
    eaaf:	addss  xmm0,xmm0
    eab3:	jmp    ea1c <__cxa_finalize@plt+0xac04>
    eab8:	nop    DWORD PTR [rax+rax*1+0x0]
    eac0:	lea    rdi,[rbx+0x28]
    eac4:	call   ddb0 <__cxa_finalize@plt+0x9f98>
    eac9:	mov    rax,QWORD PTR [rbx+0x10]
    eacd:	mov    rdx,QWORD PTR [rbx+0x28]
    ead1:	test   rax,rax
    ead4:	movss  xmm2,DWORD PTR [rdx+0x8]
    ead9:	js     eba0 <__cxa_finalize@plt+0xad88>
    eadf:	pxor   xmm0,xmm0
    eae3:	cvtsi2ss xmm0,rax
    eae8:	mov    rax,QWORD PTR [rbx+0x18]
    eaec:	test   rax,rax
    eaef:	js     ebc0 <__cxa_finalize@plt+0xada8>
    eaf5:	pxor   xmm1,xmm1
    eaf9:	cvtsi2ss xmm1,rax
    eafe:	movaps xmm3,xmm2
    eb01:	mulss  xmm3,xmm0
    eb05:	ucomiss xmm1,xmm3
    eb08:	jbe    ea2a <__cxa_finalize@plt+0xac12>
    eb0e:	cmp    BYTE PTR [rdx+0x10],0x0
    eb12:	mulss  xmm0,DWORD PTR [rdx+0xc]
    eb17:	jne    eb1d <__cxa_finalize@plt+0xad05>
    eb19:	mulss  xmm0,xmm2
    eb1d:	ucomiss xmm0,DWORD PTR [rip+0xd848]        # 1c36c <_IO_stdin_used@@Base+0x29cc>
    eb24:	jae    eb93 <__cxa_finalize@plt+0xad7b>
    eb26:	ucomiss xmm0,DWORD PTR [rip+0xd843]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    eb2d:	jae    ebe0 <__cxa_finalize@plt+0xadc8>
    eb33:	cvttss2si rsi,xmm0
    eb38:	mov    rdi,rbx
    eb3b:	call   e740 <__cxa_finalize@plt+0xa928>
    eb40:	test   al,al
    eb42:	je     eb93 <__cxa_finalize@plt+0xad7b>
    eb44:	xor    ecx,ecx
    eb46:	mov    rdx,r12
    eb49:	mov    rsi,rbp
    eb4c:	mov    rdi,rbx
    eb4f:	call   dc90 <__cxa_finalize@plt+0x9e78>
    eb54:	test   rax,rax
    eb57:	je     ea2a <__cxa_finalize@plt+0xac12>
    eb5d:	call   3530 <abort@plt>
    eb62:	nop    WORD PTR [rax+rax*1+0x0]
    eb68:	mov    QWORD PTR [r12],rbp
    eb6c:	mov    eax,0x1
    eb71:	add    QWORD PTR [rbx+0x20],0x1
    eb76:	add    QWORD PTR [rbx+0x18],0x1
    eb7b:	jmp    e9cc <__cxa_finalize@plt+0xabb4>
    eb80:	mov    edi,0x10
    eb85:	call   3ac0 <malloc@plt>
    eb8a:	test   rax,rax
    eb8d:	jne    ea4e <__cxa_finalize@plt+0xac36>
    eb93:	mov    eax,0xffffffff
    eb98:	jmp    e9cc <__cxa_finalize@plt+0xabb4>
    eb9d:	nop    DWORD PTR [rax]
    eba0:	mov    rcx,rax
    eba3:	pxor   xmm0,xmm0
    eba7:	shr    rcx,1
    ebaa:	and    eax,0x1
    ebad:	or     rcx,rax
    ebb0:	cvtsi2ss xmm0,rcx
    ebb5:	addss  xmm0,xmm0
    ebb9:	jmp    eae8 <__cxa_finalize@plt+0xacd0>
    ebbe:	xchg   ax,ax
    ebc0:	mov    rcx,rax
    ebc3:	pxor   xmm1,xmm1
    ebc7:	shr    rcx,1
    ebca:	and    eax,0x1
    ebcd:	or     rcx,rax
    ebd0:	cvtsi2ss xmm1,rcx
    ebd5:	addss  xmm1,xmm1
    ebd9:	jmp    eafe <__cxa_finalize@plt+0xace6>
    ebde:	xchg   ax,ax
    ebe0:	subss  xmm0,DWORD PTR [rip+0xd788]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    ebe8:	movabs rax,0x8000000000000000
    ebf2:	cvttss2si rsi,xmm0
    ebf7:	xor    rsi,rax
    ebfa:	jmp    eb38 <__cxa_finalize@plt+0xad20>
    ebff:	call   3760 <__stack_chk_fail@plt>
    ec04:	xchg   ax,ax
    ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ec10:	push   rbx
    ec11:	mov    rbx,rsi
    ec14:	sub    rsp,0x10
    ec18:	mov    rdx,rsp
    ec1b:	mov    rax,QWORD PTR fs:0x28
    ec24:	mov    QWORD PTR [rsp+0x8],rax
    ec29:	xor    eax,eax
    ec2b:	call   e980 <__cxa_finalize@plt+0xab68>
    ec30:	cmp    eax,0xffffffff
    ec33:	je     ec60 <__cxa_finalize@plt+0xae48>
    ec35:	test   eax,eax
    ec37:	jne    ec3d <__cxa_finalize@plt+0xae25>
    ec39:	mov    rbx,QWORD PTR [rsp]
    ec3d:	mov    rcx,QWORD PTR [rsp+0x8]
    ec42:	xor    rcx,QWORD PTR fs:0x28
    ec4b:	mov    rax,rbx
    ec4e:	jne    ec64 <__cxa_finalize@plt+0xae4c>
    ec50:	add    rsp,0x10
    ec54:	pop    rbx
    ec55:	ret    
    ec56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ec60:	xor    ebx,ebx
    ec62:	jmp    ec3d <__cxa_finalize@plt+0xae25>
    ec64:	call   3760 <__stack_chk_fail@plt>
    ec69:	nop    DWORD PTR [rax+0x0]
    ec70:	push   r12
    ec72:	push   rbp
    ec73:	mov    ecx,0x1
    ec78:	push   rbx
    ec79:	mov    rbx,rdi
    ec7c:	sub    rsp,0x10
    ec80:	mov    rdx,rsp
    ec83:	mov    rax,QWORD PTR fs:0x28
    ec8c:	mov    QWORD PTR [rsp+0x8],rax
    ec91:	xor    eax,eax
    ec93:	call   dc90 <__cxa_finalize@plt+0x9e78>
    ec98:	test   rax,rax
    ec9b:	mov    rbp,rax
    ec9e:	je     ecaf <__cxa_finalize@plt+0xae97>
    eca0:	mov    rax,QWORD PTR [rsp]
    eca4:	sub    QWORD PTR [rbx+0x20],0x1
    eca9:	cmp    QWORD PTR [rax],0x0
    ecad:	je     ecd0 <__cxa_finalize@plt+0xaeb8>
    ecaf:	mov    rcx,QWORD PTR [rsp+0x8]
    ecb4:	xor    rcx,QWORD PTR fs:0x28
    ecbd:	mov    rax,rbp
    ecc0:	jne    ee6e <__cxa_finalize@plt+0xb056>
    ecc6:	add    rsp,0x10
    ecca:	pop    rbx
    eccb:	pop    rbp
    eccc:	pop    r12
    ecce:	ret    
    eccf:	nop
    ecd0:	mov    rax,QWORD PTR [rbx+0x18]
    ecd4:	sub    rax,0x1
    ecd8:	test   rax,rax
    ecdb:	mov    QWORD PTR [rbx+0x18],rax
    ecdf:	js     ede0 <__cxa_finalize@plt+0xafc8>
    ece5:	pxor   xmm0,xmm0
    ece9:	cvtsi2ss xmm0,rax
    ecee:	mov    rax,QWORD PTR [rbx+0x10]
    ecf2:	mov    rdx,QWORD PTR [rbx+0x28]
    ecf6:	test   rax,rax
    ecf9:	js     edc0 <__cxa_finalize@plt+0xafa8>
    ecff:	pxor   xmm1,xmm1
    ed03:	cvtsi2ss xmm1,rax
    ed08:	mulss  xmm1,DWORD PTR [rdx]
    ed0c:	ucomiss xmm1,xmm0
    ed0f:	jbe    ecaf <__cxa_finalize@plt+0xae97>
    ed11:	lea    rdi,[rbx+0x28]
    ed15:	call   ddb0 <__cxa_finalize@plt+0x9f98>
    ed1a:	mov    rax,QWORD PTR [rbx+0x10]
    ed1e:	mov    rdx,QWORD PTR [rbx+0x28]
    ed22:	test   rax,rax
    ed25:	js     ee50 <__cxa_finalize@plt+0xb038>
    ed2b:	pxor   xmm0,xmm0
    ed2f:	cvtsi2ss xmm0,rax
    ed34:	mov    rax,QWORD PTR [rbx+0x18]
    ed38:	test   rax,rax
    ed3b:	js     ee30 <__cxa_finalize@plt+0xb018>
    ed41:	pxor   xmm1,xmm1
    ed45:	cvtsi2ss xmm1,rax
    ed4a:	movss  xmm2,DWORD PTR [rdx]
    ed4e:	mulss  xmm2,xmm0
    ed52:	ucomiss xmm2,xmm1
    ed55:	jbe    ecaf <__cxa_finalize@plt+0xae97>
    ed5b:	cmp    BYTE PTR [rdx+0x10],0x0
    ed5f:	mulss  xmm0,DWORD PTR [rdx+0x4]
    ed64:	je     ee20 <__cxa_finalize@plt+0xb008>
    ed6a:	ucomiss xmm0,DWORD PTR [rip+0xd5ff]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    ed71:	jae    ee00 <__cxa_finalize@plt+0xafe8>
    ed77:	cvttss2si rsi,xmm0
    ed7c:	mov    rdi,rbx
    ed7f:	call   e740 <__cxa_finalize@plt+0xa928>
    ed84:	test   al,al
    ed86:	jne    ecaf <__cxa_finalize@plt+0xae97>
    ed8c:	mov    rdi,QWORD PTR [rbx+0x48]
    ed90:	test   rdi,rdi
    ed93:	je     eda9 <__cxa_finalize@plt+0xaf91>
    ed95:	nop    DWORD PTR [rax]
    ed98:	mov    r12,QWORD PTR [rdi+0x8]
    ed9c:	call   3e10 <free@plt>
    eda1:	test   r12,r12
    eda4:	mov    rdi,r12
    eda7:	jne    ed98 <__cxa_finalize@plt+0xaf80>
    eda9:	mov    QWORD PTR [rbx+0x48],0x0
    edb1:	jmp    ecaf <__cxa_finalize@plt+0xae97>
    edb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    edc0:	mov    rcx,rax
    edc3:	pxor   xmm1,xmm1
    edc7:	shr    rcx,1
    edca:	and    eax,0x1
    edcd:	or     rcx,rax
    edd0:	cvtsi2ss xmm1,rcx
    edd5:	addss  xmm1,xmm1
    edd9:	jmp    ed08 <__cxa_finalize@plt+0xaef0>
    edde:	xchg   ax,ax
    ede0:	mov    rdx,rax
    ede3:	pxor   xmm0,xmm0
    ede7:	shr    rdx,1
    edea:	and    eax,0x1
    eded:	or     rdx,rax
    edf0:	cvtsi2ss xmm0,rdx
    edf5:	addss  xmm0,xmm0
    edf9:	jmp    ecee <__cxa_finalize@plt+0xaed6>
    edfe:	xchg   ax,ax
    ee00:	subss  xmm0,DWORD PTR [rip+0xd568]        # 1c370 <_IO_stdin_used@@Base+0x29d0>
    ee08:	movabs rax,0x8000000000000000
    ee12:	cvttss2si rsi,xmm0
    ee17:	xor    rsi,rax
    ee1a:	jmp    ed7c <__cxa_finalize@plt+0xaf64>
    ee1f:	nop
    ee20:	mulss  xmm0,DWORD PTR [rdx+0x8]
    ee25:	jmp    ed6a <__cxa_finalize@plt+0xaf52>
    ee2a:	nop    WORD PTR [rax+rax*1+0x0]
    ee30:	mov    rcx,rax
    ee33:	pxor   xmm1,xmm1
    ee37:	shr    rcx,1
    ee3a:	and    eax,0x1
    ee3d:	or     rcx,rax
    ee40:	cvtsi2ss xmm1,rcx
    ee45:	addss  xmm1,xmm1
    ee49:	jmp    ed4a <__cxa_finalize@plt+0xaf32>
    ee4e:	xchg   ax,ax
    ee50:	mov    rcx,rax
    ee53:	pxor   xmm0,xmm0
    ee57:	shr    rcx,1
    ee5a:	and    eax,0x1
    ee5d:	or     rcx,rax
    ee60:	cvtsi2ss xmm0,rcx
    ee65:	addss  xmm0,xmm0
    ee69:	jmp    ed34 <__cxa_finalize@plt+0xaf1c>
    ee6e:	call   3760 <__stack_chk_fail@plt>
    ee73:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ee7d:	nop    DWORD PTR [rax]
    ee80:	push   rbp
    ee81:	push   rbx
    ee82:	mov    rbp,rdi
    ee85:	mov    rbx,rsi
    ee88:	sub    rsp,0x8
    ee8c:	mov    rdi,QWORD PTR [rdi]
    ee8f:	call   16520 <fts_children@@Base+0x9b0>
    ee94:	xor    rax,QWORD PTR [rbp+0x8]
    ee98:	xor    edx,edx
    ee9a:	add    rsp,0x8
    ee9e:	div    rbx
    eea1:	pop    rbx
    eea2:	pop    rbp
    eea3:	mov    rax,rdx
    eea6:	ret    
    eea7:	nop    WORD PTR [rax+rax*1+0x0]
    eeb0:	mov    rax,QWORD PTR [rdi+0x8]
    eeb4:	xor    edx,edx
    eeb6:	div    rsi
    eeb9:	mov    rax,rdx
    eebc:	ret    
    eebd:	nop    DWORD PTR [rax]
    eec0:	xor    eax,eax
    eec2:	mov    rdx,QWORD PTR [rsi+0x8]
    eec6:	cmp    QWORD PTR [rdi+0x8],rdx
    eeca:	je     eed0 <__cxa_finalize@plt+0xb0b8>
    eecc:	repz ret 
    eece:	xchg   ax,ax
    eed0:	mov    rcx,QWORD PTR [rsi+0x10]
    eed4:	cmp    QWORD PTR [rdi+0x10],rcx
    eed8:	jne    eecc <__cxa_finalize@plt+0xb0b4>
    eeda:	sub    rsp,0x8
    eede:	mov    rsi,QWORD PTR [rsi]
    eee1:	mov    rdi,QWORD PTR [rdi]
    eee4:	call   11040 <__cxa_finalize@plt+0xd228>
    eee9:	add    rsp,0x8
    eeed:	ret    
    eeee:	xchg   ax,ax
    eef0:	xor    eax,eax
    eef2:	mov    rdx,QWORD PTR [rsi+0x8]
    eef6:	cmp    QWORD PTR [rdi+0x8],rdx
    eefa:	je     ef00 <__cxa_finalize@plt+0xb0e8>
    eefc:	repz ret 
    eefe:	xchg   ax,ax
    ef00:	mov    rcx,QWORD PTR [rsi+0x10]
    ef04:	cmp    QWORD PTR [rdi+0x10],rcx
    ef08:	jne    eefc <__cxa_finalize@plt+0xb0e4>
    ef0a:	sub    rsp,0x8
    ef0e:	mov    rsi,QWORD PTR [rsi]
    ef11:	mov    rdi,QWORD PTR [rdi]
    ef14:	call   39c0 <strcmp@plt>
    ef19:	test   eax,eax
    ef1b:	sete   al
    ef1e:	add    rsp,0x8
    ef22:	ret    
    ef23:	nop    DWORD PTR [rax]
    ef26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ef30:	push   rbx
    ef31:	mov    rbx,rdi
    ef34:	mov    rdi,QWORD PTR [rdi]
    ef37:	call   3e10 <free@plt>
    ef3c:	mov    rdi,rbx
    ef3f:	pop    rbx
    ef40:	jmp    3e10 <free@plt>
    ef45:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ef4f:	nop
    ef50:	test   rdi,rdi
    ef53:	push   rbx
    ef54:	je     efc7 <__cxa_finalize@plt+0xb1af>
    ef56:	mov    esi,0x2f
    ef5b:	mov    rbx,rdi
    ef5e:	call   37e0 <strrchr@plt>
    ef63:	test   rax,rax
    ef66:	je     efb7 <__cxa_finalize@plt+0xb19f>
    ef68:	lea    rdx,[rax+0x1]
    ef6c:	mov    rcx,rdx
    ef6f:	sub    rcx,rbx
    ef72:	cmp    rcx,0x6
    ef76:	jle    efb7 <__cxa_finalize@plt+0xb19f>
    ef78:	lea    rsi,[rax-0x6]
    ef7c:	lea    rdi,[rip+0xd435]        # 1c3b8 <_IO_stdin_used@@Base+0x2a18>
    ef83:	mov    ecx,0x7
    ef88:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    ef8a:	jne    efb7 <__cxa_finalize@plt+0xb19f>
    ef8c:	lea    rdi,[rip+0xd42d]        # 1c3c0 <_IO_stdin_used@@Base+0x2a20>
    ef93:	mov    ecx,0x3
    ef98:	mov    rsi,rdx
    ef9b:	mov    rbx,rdx
    ef9e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    efa0:	seta   sil
    efa4:	setb   cl
    efa7:	cmp    sil,cl
    efaa:	jne    efb7 <__cxa_finalize@plt+0xb19f>
    efac:	lea    rbx,[rax+0x4]
    efb0:	mov    QWORD PTR [rip+0x2130e9],rbx        # 2220a0 <__progname@@GLIBC_2.2.5>
    efb7:	mov    QWORD PTR [rip+0x2135e2],rbx        # 2225a0 <program_name@@Base>
    efbe:	mov    QWORD PTR [rip+0x213103],rbx        # 2220c8 <__progname_full@@GLIBC_2.2.5>
    efc5:	pop    rbx
    efc6:	ret    
    efc7:	mov    rcx,QWORD PTR [rip+0x213112]        # 2220e0 <stderr@@GLIBC_2.2.5>
    efce:	lea    rdi,[rip+0xd3ab]        # 1c380 <_IO_stdin_used@@Base+0x29e0>
    efd5:	mov    edx,0x37
    efda:	mov    esi,0x1
    efdf:	call   3d60 <fwrite@plt>
    efe4:	call   3530 <abort@plt>
    efe9:	nop    DWORD PTR [rax+0x0]
    eff0:	push   r12
    eff2:	push   rbp
    eff3:	mov    r12d,ecx
    eff6:	push   rbx
    eff7:	mov    rbp,rdx
    effa:	mov    edx,r8d
    effd:	sub    rsp,0x30
    f001:	mov    rbx,rsp
    f004:	mov    rcx,rbx
    f007:	mov    rax,QWORD PTR fs:0x28
    f010:	mov    QWORD PTR [rsp+0x28],rax
    f015:	xor    eax,eax
    f017:	call   15fa0 <fts_children@@Base+0x430>
    f01c:	test   eax,eax
    f01e:	jne    f058 <__cxa_finalize@plt+0xb240>
    f020:	mov    rsi,rbp
    f023:	mov    rdi,rbx
    f026:	mov    edx,r12d
    f029:	call   16150 <fts_children@@Base+0x5e0>
    f02e:	mov    rdi,rbx
    f031:	mov    ebp,eax
    f033:	call   15f70 <fts_children@@Base+0x400>
    f038:	mov    rcx,QWORD PTR [rsp+0x28]
    f03d:	xor    rcx,QWORD PTR fs:0x28
    f046:	mov    eax,ebp
    f048:	jne    f05f <__cxa_finalize@plt+0xb247>
    f04a:	add    rsp,0x30
    f04e:	pop    rbx
    f04f:	pop    rbp
    f050:	pop    r12
    f052:	ret    
    f053:	nop    DWORD PTR [rax+rax*1+0x0]
    f058:	mov    ebp,0xfffffffe
    f05d:	jmp    f038 <__cxa_finalize@plt+0xb220>
    f05f:	call   3760 <__stack_chk_fail@plt>
    f064:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f06e:	xchg   ax,ax
    f070:	push   rbp
    f071:	push   rbx
    f072:	pxor   xmm0,xmm0
    f076:	sub    rsp,0x38
    f07a:	mov    rbx,rsp
    f07d:	mov    DWORD PTR [rsp],edx
    f080:	mov    edx,esi
    f082:	mov    rsi,rdi
    f085:	mov    rdi,rbx
    f088:	movups XMMWORD PTR [rsp+0x4],xmm0
    f08d:	mov    rax,QWORD PTR fs:0x28
    f096:	mov    QWORD PTR [rsp+0x28],rax
    f09b:	xor    eax,eax
    f09d:	mov    QWORD PTR [rbx+0x14],0x0
    f0a5:	mov    DWORD PTR [rbx+0x1c],0x0
    f0ac:	call   16150 <fts_children@@Base+0x5e0>
    f0b1:	mov    rdi,rbx
    f0b4:	mov    ebp,eax
    f0b6:	call   15f70 <fts_children@@Base+0x400>
    f0bb:	mov    rcx,QWORD PTR [rsp+0x28]
    f0c0:	xor    rcx,QWORD PTR fs:0x28
    f0c9:	jne    f0d4 <__cxa_finalize@plt+0xb2bc>
    f0cb:	add    rsp,0x38
    f0cf:	mov    eax,ebp
    f0d1:	pop    rbx
    f0d2:	pop    rbp
    f0d3:	ret    
    f0d4:	call   3760 <__stack_chk_fail@plt>
    f0d9:	nop    DWORD PTR [rax+0x0]
    f0e0:	push   rbp
    f0e1:	push   rbx
    f0e2:	mov    rbp,rdi
    f0e5:	mov    ebx,esi
    f0e7:	sub    rsp,0x8
    f0eb:	call   16610 <fts_children@@Base+0xaa0>
    f0f0:	movzx  edx,BYTE PTR [rax]
    f0f3:	and    edx,0xffffffdf
    f0f6:	cmp    dl,0x55
    f0f9:	je     f170 <__cxa_finalize@plt+0xb358>
    f0fb:	cmp    dl,0x47
    f0fe:	je     f120 <__cxa_finalize@plt+0xb308>
    f100:	lea    rax,[rip+0xd2cc]        # 1c3d3 <_IO_stdin_used@@Base+0x2a33>
    f107:	lea    rdx,[rip+0xd2c7]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    f10e:	cmp    ebx,0x9
    f111:	cmovne rax,rdx
    f115:	add    rsp,0x8
    f119:	pop    rbx
    f11a:	pop    rbp
    f11b:	ret    
    f11c:	nop    DWORD PTR [rax+0x0]
    f120:	movzx  edx,BYTE PTR [rax+0x1]
    f124:	and    edx,0xffffffdf
    f127:	cmp    dl,0x42
    f12a:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f12c:	cmp    BYTE PTR [rax+0x2],0x31
    f130:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f132:	cmp    BYTE PTR [rax+0x3],0x38
    f136:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f138:	cmp    BYTE PTR [rax+0x4],0x30
    f13c:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f13e:	cmp    BYTE PTR [rax+0x5],0x33
    f142:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f144:	cmp    BYTE PTR [rax+0x6],0x30
    f148:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f14a:	cmp    BYTE PTR [rax+0x7],0x0
    f14e:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f150:	cmp    BYTE PTR [rbp+0x0],0x60
    f154:	lea    rax,[rip+0xd271]        # 1c3cc <_IO_stdin_used@@Base+0x2a2c>
    f15b:	lea    rdx,[rip+0xd26e]        # 1c3d0 <_IO_stdin_used@@Base+0x2a30>
    f162:	cmovne rax,rdx
    f166:	add    rsp,0x8
    f16a:	pop    rbx
    f16b:	pop    rbp
    f16c:	ret    
    f16d:	nop    DWORD PTR [rax]
    f170:	movzx  edx,BYTE PTR [rax+0x1]
    f174:	and    edx,0xffffffdf
    f177:	cmp    dl,0x54
    f17a:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f17c:	movzx  edx,BYTE PTR [rax+0x2]
    f180:	and    edx,0xffffffdf
    f183:	cmp    dl,0x46
    f186:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f18c:	cmp    BYTE PTR [rax+0x3],0x2d
    f190:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f196:	cmp    BYTE PTR [rax+0x4],0x38
    f19a:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f1a0:	cmp    BYTE PTR [rax+0x5],0x0
    f1a4:	jne    f100 <__cxa_finalize@plt+0xb2e8>
    f1aa:	cmp    BYTE PTR [rbp+0x0],0x60
    f1ae:	lea    rax,[rip+0xd20f]        # 1c3c4 <_IO_stdin_used@@Base+0x2a24>
    f1b5:	lea    rdx,[rip+0xd20c]        # 1c3c8 <_IO_stdin_used@@Base+0x2a28>
    f1bc:	cmovne rax,rdx
    f1c0:	add    rsp,0x8
    f1c4:	pop    rbx
    f1c5:	pop    rbp
    f1c6:	ret    
    f1c7:	nop    WORD PTR [rax+rax*1+0x0]
    f1d0:	push   r15
    f1d2:	push   r14
    f1d4:	mov    r15d,r8d
    f1d7:	push   r13
    f1d9:	push   r12
    f1db:	mov    r14,rdi
    f1de:	push   rbp
    f1df:	push   rbx
    f1e0:	mov    ebx,r9d
    f1e3:	mov    r13,rsi
    f1e6:	mov    rbp,rcx
    f1e9:	and    ebx,0x2
    f1ec:	sub    rsp,0xb8
    f1f3:	mov    rax,QWORD PTR [rsp+0xf0]
    f1fb:	mov    QWORD PTR [rsp+0x10],rdx
    f200:	mov    DWORD PTR [rsp+0x8],r8d
    f205:	mov    DWORD PTR [rsp+0x78],r9d
    f20a:	mov    QWORD PTR [rsp+0x20],rax
    f20f:	mov    rax,QWORD PTR [rsp+0xf8]
    f217:	mov    QWORD PTR [rsp+0x68],rax
    f21c:	mov    rax,QWORD PTR [rsp+0x100]
    f224:	mov    QWORD PTR [rsp+0x60],rax
    f229:	mov    rax,QWORD PTR fs:0x28
    f232:	mov    QWORD PTR [rsp+0xa8],rax
    f23a:	xor    eax,eax
    f23c:	call   3710 <__ctype_get_mb_cur_max@plt>
    f241:	cmp    r15d,0xa
    f245:	mov    QWORD PTR [rsp+0x58],rax
    f24a:	ja     103ff <__cxa_finalize@plt+0xc5e7>
    f250:	lea    rcx,[rip+0xd1e9]        # 1c440 <_IO_stdin_used@@Base+0x2aa0>
    f257:	mov    edx,r15d
    f25a:	movsxd rax,DWORD PTR [rcx+rdx*4]
    f25e:	add    rax,rcx
    f261:	jmp    rax
    f263:	mov    BYTE PTR [rsp+0xe],0x1
    f268:	mov    BYTE PTR [rsp+0x7c],0x0
    f26d:	xor    r12d,r12d
    f270:	mov    QWORD PTR [rsp+0x50],0x0
    f279:	mov    BYTE PTR [rsp+0xf],0x1
    f27e:	mov    BYTE PTR [rsp+0xd],0x0
    f283:	lea    rax,[rip+0xd14b]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    f28a:	mov    QWORD PTR [rsp+0x18],0x1
    f293:	xor    r15d,r15d
    f296:	mov    DWORD PTR [rsp+0x8],0x2
    f29e:	mov    QWORD PTR [rsp+0x48],rax
    f2a3:	xor    r11d,r11d
    f2a6:	mov    rax,rbp
    f2a9:	mov    r8d,r12d
    f2ac:	mov    rbp,r11
    f2af:	mov    r11,rax
    f2b2:	nop    WORD PTR [rax+rax*1+0x0]
    f2b8:	cmp    r11,rbp
    f2bb:	setne  r12b
    f2bf:	cmp    r11,0xffffffffffffffff
    f2c3:	jne    f2d2 <__cxa_finalize@plt+0xb4ba>
    f2c5:	mov    rax,QWORD PTR [rsp+0x10]
    f2ca:	cmp    BYTE PTR [rax+rbp*1],0x0
    f2ce:	setne  r12b
    f2d2:	test   r12b,r12b
    f2d5:	je     f930 <__cxa_finalize@plt+0xbb18>
    f2db:	cmp    DWORD PTR [rsp+0x8],0x2
    f2e0:	mov    rdi,QWORD PTR [rsp+0x10]
    f2e5:	lea    r9,[rdi+rbp*1]
    f2e9:	setne  al
    f2ec:	and    al,BYTE PTR [rsp+0xd]
    f2f0:	mov    r10d,eax
    f2f3:	je     f3a0 <__cxa_finalize@plt+0xb588>
    f2f9:	mov    rax,QWORD PTR [rsp+0x18]
    f2fe:	test   rax,rax
    f301:	je     f730 <__cxa_finalize@plt+0xb918>
    f307:	cmp    r11,0xffffffffffffffff
    f30b:	lea    rbx,[rbp+rax*1+0x0]
    f310:	jne    f340 <__cxa_finalize@plt+0xb528>
    f312:	cmp    rax,0x1
    f316:	jbe    f340 <__cxa_finalize@plt+0xb528>
    f318:	mov    BYTE PTR [rsp+0x38],r8b
    f31d:	mov    BYTE PTR [rsp+0x30],r10b
    f322:	mov    QWORD PTR [rsp+0x28],r9
    f327:	call   3720 <strlen@plt>
    f32c:	movzx  r8d,BYTE PTR [rsp+0x38]
    f332:	movzx  r10d,BYTE PTR [rsp+0x30]
    f338:	mov    r11,rax
    f33b:	mov    r9,QWORD PTR [rsp+0x28]
    f340:	cmp    rbx,r11
    f343:	mov    BYTE PTR [rsp+0x28],r10b
    f348:	ja     f900 <__cxa_finalize@plt+0xbae8>
    f34e:	mov    rdx,QWORD PTR [rsp+0x18]
    f353:	mov    rsi,QWORD PTR [rsp+0x48]
    f358:	mov    rdi,r9
    f35b:	mov    QWORD PTR [rsp+0x40],r11
    f360:	mov    BYTE PTR [rsp+0x38],r8b
    f365:	mov    QWORD PTR [rsp+0x30],r9
    f36a:	call   3930 <memcmp@plt>
    f36f:	test   eax,eax
    f371:	mov    r9,QWORD PTR [rsp+0x30]
    f376:	movzx  r8d,BYTE PTR [rsp+0x38]
    f37c:	mov    r11,QWORD PTR [rsp+0x40]
    f381:	jne    f900 <__cxa_finalize@plt+0xbae8>
    f387:	cmp    BYTE PTR [rsp+0xf],0x0
    f38c:	movzx  r10d,BYTE PTR [rsp+0x28]
    f392:	jne    10315 <__cxa_finalize@plt+0xc4fd>
    f398:	nop    DWORD PTR [rax+rax*1+0x0]
    f3a0:	movzx  ebx,BYTE PTR [r9]
    f3a4:	cmp    bl,0x7e
    f3a7:	ja     f6c8 <__cxa_finalize@plt+0xb8b0>
    f3ad:	lea    rcx,[rip+0xd0b8]        # 1c46c <_IO_stdin_used@@Base+0x2acc>
    f3b4:	movzx  edx,bl
    f3b7:	movsxd rax,DWORD PTR [rcx+rdx*4]
    f3bb:	add    rax,rcx
    f3be:	jmp    rax
    f3c0:	xor    r10d,r10d
    f3c3:	cmp    r11,0x1
    f3c7:	setne  al
    f3ca:	cmp    r11,0xffffffffffffffff
    f3ce:	jne    f3dc <__cxa_finalize@plt+0xb5c4>
    f3d0:	mov    rax,QWORD PTR [rsp+0x10]
    f3d5:	cmp    BYTE PTR [rax+0x1],0x0
    f3d9:	setne  al
    f3dc:	cmp    DWORD PTR [rsp+0x8],0x2
    f3e1:	sete   dl
    f3e4:	test   al,al
    f3e6:	je     f638 <__cxa_finalize@plt+0xb820>
    f3ec:	xor    r12d,r12d
    f3ef:	xor    eax,eax
    f3f1:	nop    DWORD PTR [rax+0x0]
    f3f8:	cmp    BYTE PTR [rsp+0xd],0x1
    f3fd:	jne    f512 <__cxa_finalize@plt+0xb6fa>
    f403:	test   dl,dl
    f405:	jne    f512 <__cxa_finalize@plt+0xb6fa>
    f40b:	mov    rsi,QWORD PTR [rsp+0x20]
    f410:	test   rsi,rsi
    f413:	je     f429 <__cxa_finalize@plt+0xb611>
    f415:	mov    edx,ebx
    f417:	shr    dl,0x5
    f41a:	movzx  edx,dl
    f41d:	mov    edx,DWORD PTR [rsi+rdx*4]
    f420:	bt     edx,ebx
    f423:	jb     f573 <__cxa_finalize@plt+0xb75b>
    f429:	test   r10b,r10b
    f42c:	jne    f573 <__cxa_finalize@plt+0xb75b>
    f432:	xor    eax,0x1
    f435:	add    rbp,0x1
    f439:	and    eax,r8d
    f43c:	test   al,al
    f43e:	je     f460 <__cxa_finalize@plt+0xb648>
    f440:	cmp    r13,r15
    f443:	jbe    f44a <__cxa_finalize@plt+0xb632>
    f445:	mov    BYTE PTR [r14+r15*1],0x27
    f44a:	lea    rax,[r15+0x1]
    f44e:	cmp    r13,rax
    f451:	jbe    f459 <__cxa_finalize@plt+0xb641>
    f453:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    f459:	add    r15,0x2
    f45d:	xor    r8d,r8d
    f460:	cmp    r15,r13
    f463:	jae    f469 <__cxa_finalize@plt+0xb651>
    f465:	mov    BYTE PTR [r14+r15*1],bl
    f469:	movzx  edi,BYTE PTR [rsp+0xe]
    f46e:	add    r15,0x1
    f472:	mov    eax,0x0
    f477:	test   r12b,r12b
    f47a:	cmove  edi,eax
    f47d:	mov    BYTE PTR [rsp+0xe],dil
    f482:	jmp    f2b8 <__cxa_finalize@plt+0xb4a0>
    f487:	nop    WORD PTR [rax+rax*1+0x0]
    f490:	xor    r10d,r10d
    f493:	mov    eax,DWORD PTR [rsp+0x8]
    f497:	cmp    eax,0x2
    f49a:	je     fa58 <__cxa_finalize@plt+0xbc40>
    f4a0:	cmp    eax,0x5
    f4a3:	je     fa18 <__cxa_finalize@plt+0xbc00>
    f4a9:	cmp    eax,0x2
    f4ac:	mov    ebx,0x3f
    f4b1:	sete   dl
    f4b4:	xor    r12d,r12d
    f4b7:	xor    eax,eax
    f4b9:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f4be:	xchg   ax,ax
    f4c0:	xor    r10d,r10d
    f4c3:	cmp    DWORD PTR [rsp+0x8],0x2
    f4c8:	je     f9d0 <__cxa_finalize@plt+0xbbb8>
    f4ce:	mov    BYTE PTR [rsp+0x7c],r12b
    f4d3:	xor    edx,edx
    f4d5:	xor    eax,eax
    f4d7:	mov    ebx,0x27
    f4dc:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f4e1:	nop    DWORD PTR [rax+0x0]
    f4e8:	mov    edx,0x9
    f4ed:	mov    ebx,0x74
    f4f2:	cmp    DWORD PTR [rsp+0x8],0x2
    f4f7:	sete   al
    f4fa:	and    al,BYTE PTR [rsp+0xf]
    f4fe:	jne    f64e <__cxa_finalize@plt+0xb836>
    f504:	cmp    BYTE PTR [rsp+0xd],0x0
    f509:	jne    f570 <__cxa_finalize@plt+0xb758>
    f50b:	mov    ebx,edx
    f50d:	xor    r12d,r12d
    f510:	xor    eax,eax
    f512:	cmp    BYTE PTR [rsp+0xf],0x0
    f517:	jne    f40b <__cxa_finalize@plt+0xb5f3>
    f51d:	jmp    f429 <__cxa_finalize@plt+0xb611>
    f522:	nop    WORD PTR [rax+rax*1+0x0]
    f528:	mov    edx,0x8
    f52d:	mov    ebx,0x62
    f532:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f534:	nop    DWORD PTR [rax+0x0]
    f538:	cmp    DWORD PTR [rsp+0x8],0x2
    f53d:	je     f910 <__cxa_finalize@plt+0xbaf8>
    f543:	cmp    BYTE PTR [rsp+0xd],0x0
    f548:	je     f760 <__cxa_finalize@plt+0xb948>
    f54e:	cmp    BYTE PTR [rsp+0xf],0x0
    f553:	je     f760 <__cxa_finalize@plt+0xb948>
    f559:	cmp    QWORD PTR [rsp+0x18],0x0
    f55f:	jne    f91b <__cxa_finalize@plt+0xbb03>
    f565:	mov    ebx,0x5c
    f56a:	nop    WORD PTR [rax+rax*1+0x0]
    f570:	xor    r12d,r12d
    f573:	cmp    DWORD PTR [rsp+0x8],0x2
    f578:	sete   dl
    f57b:	cmp    BYTE PTR [rsp+0xf],0x0
    f580:	mov    eax,edx
    f582:	jne    fdd8 <__cxa_finalize@plt+0xbfc0>
    f588:	mov    eax,r8d
    f58b:	xor    eax,0x1
    f58e:	and    al,dl
    f590:	je     f5c1 <__cxa_finalize@plt+0xb7a9>
    f592:	cmp    r13,r15
    f595:	jbe    f59c <__cxa_finalize@plt+0xb784>
    f597:	mov    BYTE PTR [r14+r15*1],0x27
    f59c:	lea    rdx,[r15+0x1]
    f5a0:	cmp    r13,rdx
    f5a3:	jbe    f5ab <__cxa_finalize@plt+0xb793>
    f5a5:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    f5ab:	lea    rdx,[r15+0x2]
    f5af:	cmp    r13,rdx
    f5b2:	jbe    f5ba <__cxa_finalize@plt+0xb7a2>
    f5b4:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    f5ba:	add    r15,0x3
    f5be:	mov    r8d,eax
    f5c1:	cmp    r13,r15
    f5c4:	jbe    f5cb <__cxa_finalize@plt+0xb7b3>
    f5c6:	mov    BYTE PTR [r14+r15*1],0x5c
    f5cb:	add    r15,0x1
    f5cf:	add    rbp,0x1
    f5d3:	jmp    f460 <__cxa_finalize@plt+0xb648>
    f5d8:	nop    DWORD PTR [rax+rax*1+0x0]
    f5e0:	cmp    BYTE PTR [rsp+0xd],0x0
    f5e5:	jne    f7b3 <__cxa_finalize@plt+0xb99b>
    f5eb:	xor    edx,edx
    f5ed:	test   BYTE PTR [rsp+0x78],0x1
    f5f2:	je     f50b <__cxa_finalize@plt+0xb6f3>
    f5f8:	add    rbp,0x1
    f5fc:	jmp    f2b8 <__cxa_finalize@plt+0xb4a0>
    f601:	nop    DWORD PTR [rax+0x0]
    f608:	cmp    DWORD PTR [rsp+0x8],0x2
    f60d:	sete   dl
    f610:	xor    eax,eax
    f612:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f617:	nop    WORD PTR [rax+rax*1+0x0]
    f620:	mov    edx,0x7
    f625:	mov    ebx,0x61
    f62a:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f62f:	nop
    f630:	cmp    DWORD PTR [rsp+0x8],0x2
    f635:	sete   dl
    f638:	test   rbp,rbp
    f63b:	jne    f3ec <__cxa_finalize@plt+0xb5d4>
    f641:	movzx  eax,BYTE PTR [rsp+0xf]
    f646:	and    al,dl
    f648:	je     f3f8 <__cxa_finalize@plt+0xb5e0>
    f64e:	mov    rbp,r11
    f651:	mov    DWORD PTR [rsp+0x8],0x2
    f659:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
    f65e:	xchg   ax,ax
    f660:	cmp    DWORD PTR [rsp+0x8],0x2
    f665:	sete   dl
    f668:	xor    r12d,r12d
    f66b:	jmp    f641 <__cxa_finalize@plt+0xb829>
    f66d:	nop    DWORD PTR [rax]
    f670:	cmp    DWORD PTR [rsp+0x8],0x2
    f675:	mov    ebx,0x20
    f67a:	sete   dl
    f67d:	jmp    f641 <__cxa_finalize@plt+0xb829>
    f67f:	nop
    f680:	mov    edx,0xd
    f685:	mov    ebx,0x72
    f68a:	jmp    f4f2 <__cxa_finalize@plt+0xb6da>
    f68f:	nop
    f690:	mov    edx,0xc
    f695:	mov    ebx,0x66
    f69a:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f69f:	nop
    f6a0:	mov    edx,0xb
    f6a5:	mov    ebx,0x76
    f6aa:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f6af:	nop
    f6b0:	mov    edx,0xa
    f6b5:	mov    ebx,0x6e
    f6ba:	jmp    f4f2 <__cxa_finalize@plt+0xb6da>
    f6bf:	nop
    f6c0:	xor    r10d,r10d
    f6c3:	nop    DWORD PTR [rax+rax*1+0x0]
    f6c8:	cmp    QWORD PTR [rsp+0x58],0x1
    f6ce:	jne    fa78 <__cxa_finalize@plt+0xbc60>
    f6d4:	mov    QWORD PTR [rsp+0x38],r11
    f6d9:	mov    BYTE PTR [rsp+0x30],r8b
    f6de:	mov    BYTE PTR [rsp+0x28],r10b
    f6e3:	call   3df0 <__ctype_b_loc@plt>
    f6e8:	mov    rcx,QWORD PTR [rax]
    f6eb:	movzx  edx,bl
    f6ee:	movzx  r10d,BYTE PTR [rsp+0x28]
    f6f4:	movzx  r8d,BYTE PTR [rsp+0x30]
    f6fa:	mov    r11,QWORD PTR [rsp+0x38]
    f6ff:	mov    edi,0x1
    f704:	movzx  eax,WORD PTR [rcx+rdx*2]
    f708:	and    ax,0x4000
    f70c:	setne  r12b
    f710:	sete   al
    f713:	and    al,BYTE PTR [rsp+0xd]
    f717:	test   al,al
    f719:	jne    100b1 <__cxa_finalize@plt+0xc299>
    f71f:	cmp    DWORD PTR [rsp+0x8],0x2
    f724:	sete   dl
    f727:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f72c:	nop    DWORD PTR [rax+0x0]
    f730:	movzx  ebx,BYTE PTR [r9]
    f734:	cmp    bl,0x7e
    f737:	ja     f6c0 <__cxa_finalize@plt+0xb8a8>
    f739:	lea    rcx,[rip+0xcf28]        # 1c668 <_IO_stdin_used@@Base+0x2cc8>
    f740:	movzx  edx,bl
    f743:	movsxd rax,DWORD PTR [rcx+rdx*4]
    f747:	add    rax,rcx
    f74a:	jmp    rax
    f74c:	nop    DWORD PTR [rax+0x0]
    f750:	xor    r10d,r10d
    f753:	cmp    BYTE PTR [rsp+0xd],0x0
    f758:	jne    f54e <__cxa_finalize@plt+0xb736>
    f75e:	xchg   ax,ax
    f760:	mov    edx,0x5c
    f765:	mov    ebx,0x5c
    f76a:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f76f:	nop
    f770:	mov    edx,0xc
    f775:	xor    r10d,r10d
    f778:	mov    ebx,0x66
    f77d:	jmp    f504 <__cxa_finalize@plt+0xb6ec>
    f782:	nop    WORD PTR [rax+rax*1+0x0]
    f788:	mov    edx,0xa
    f78d:	xor    r10d,r10d
    f790:	mov    ebx,0x6e
    f795:	jmp    f4f2 <__cxa_finalize@plt+0xb6da>
    f79a:	nop    WORD PTR [rax+rax*1+0x0]
    f7a0:	mov    ebx,0x61
    f7a5:	jmp    f570 <__cxa_finalize@plt+0xb758>
    f7aa:	nop    WORD PTR [rax+rax*1+0x0]
    f7b0:	xor    r10d,r10d
    f7b3:	cmp    DWORD PTR [rsp+0x8],0x2
    f7b8:	sete   dl
    f7bb:	cmp    BYTE PTR [rsp+0xf],0x0
    f7c0:	jne    1035a <__cxa_finalize@plt+0xc542>
    f7c6:	mov    eax,r8d
    f7c9:	mov    rcx,r15
    f7cc:	xor    eax,0x1
    f7cf:	and    al,dl
    f7d1:	je     f800 <__cxa_finalize@plt+0xb9e8>
    f7d3:	cmp    r13,r15
    f7d6:	jbe    f7dd <__cxa_finalize@plt+0xb9c5>
    f7d8:	mov    BYTE PTR [r14+r15*1],0x27
    f7dd:	lea    rcx,[r15+0x1]
    f7e1:	cmp    r13,rcx
    f7e4:	jbe    f7ec <__cxa_finalize@plt+0xb9d4>
    f7e6:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    f7ec:	lea    rcx,[r15+0x2]
    f7f0:	cmp    r13,rcx
    f7f3:	ja     fe29 <__cxa_finalize@plt+0xc011>
    f7f9:	lea    rcx,[r15+0x3]
    f7fd:	mov    r8d,eax
    f800:	cmp    r13,rcx
    f803:	jbe    f80a <__cxa_finalize@plt+0xb9f2>
    f805:	mov    BYTE PTR [r14+rcx*1],0x5c
    f80a:	cmp    DWORD PTR [rsp+0x8],0x2
    f80f:	lea    r15,[rcx+0x1]
    f813:	je     fe19 <__cxa_finalize@plt+0xc001>
    f819:	lea    rax,[rbp+0x1]
    f81d:	cmp    rax,r11
    f820:	jae    f83b <__cxa_finalize@plt+0xba23>
    f822:	mov    rax,QWORD PTR [rsp+0x10]
    f827:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    f82c:	mov    BYTE PTR [rsp+0x28],al
    f830:	sub    eax,0x30
    f833:	cmp    al,0x9
    f835:	jbe    10069 <__cxa_finalize@plt+0xc251>
    f83b:	mov    eax,r12d
    f83e:	mov    ebx,0x30
    f843:	xor    r12d,r12d
    f846:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f84b:	nop    DWORD PTR [rax+rax*1+0x0]
    f850:	cmp    DWORD PTR [rsp+0x8],0x2
    f855:	mov    r12d,r10d
    f858:	sete   dl
    f85b:	xor    r10d,r10d
    f85e:	xor    eax,eax
    f860:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    f865:	nop    DWORD PTR [rax]
    f868:	cmp    DWORD PTR [rsp+0x8],0x2
    f86d:	sete   dl
    f870:	xor    r10d,r10d
    f873:	jmp    f638 <__cxa_finalize@plt+0xb820>
    f878:	nop    DWORD PTR [rax+rax*1+0x0]
    f880:	cmp    DWORD PTR [rsp+0x8],0x2
    f885:	sete   dl
    f888:	xor    r10d,r10d
    f88b:	xor    r12d,r12d
    f88e:	jmp    f641 <__cxa_finalize@plt+0xb829>
    f893:	nop    DWORD PTR [rax+rax*1+0x0]
    f898:	cmp    DWORD PTR [rsp+0x8],0x2
    f89d:	mov    r12d,r10d
    f8a0:	mov    ebx,0x20
    f8a5:	sete   dl
    f8a8:	xor    r10d,r10d
    f8ab:	jmp    f641 <__cxa_finalize@plt+0xb829>
    f8b0:	mov    edx,0xd
    f8b5:	xor    r10d,r10d
    f8b8:	mov    ebx,0x72
    f8bd:	jmp    f4f2 <__cxa_finalize@plt+0xb6da>
    f8c2:	nop    WORD PTR [rax+rax*1+0x0]
    f8c8:	mov    ebx,0x76
    f8cd:	jmp    f570 <__cxa_finalize@plt+0xb758>
    f8d2:	nop    WORD PTR [rax+rax*1+0x0]
    f8d8:	mov    edx,0x9
    f8dd:	xor    r10d,r10d
    f8e0:	mov    ebx,0x74
    f8e5:	jmp    f4f2 <__cxa_finalize@plt+0xb6da>
    f8ea:	nop    WORD PTR [rax+rax*1+0x0]
    f8f0:	mov    ebx,0x62
    f8f5:	jmp    f570 <__cxa_finalize@plt+0xb758>
    f8fa:	nop    WORD PTR [rax+rax*1+0x0]
    f900:	xor    r10d,r10d
    f903:	jmp    f3a0 <__cxa_finalize@plt+0xb588>
    f908:	nop    DWORD PTR [rax+rax*1+0x0]
    f910:	cmp    BYTE PTR [rsp+0xf],0x0
    f915:	jne    10280 <__cxa_finalize@plt+0xc468>
    f91b:	add    rbp,0x1
    f91f:	mov    eax,r8d
    f922:	xor    r12d,r12d
    f925:	mov    ebx,0x5c
    f92a:	jmp    f43c <__cxa_finalize@plt+0xb624>
    f92f:	nop
    f930:	cmp    DWORD PTR [rsp+0x8],0x2
    f935:	movzx  ebx,BYTE PTR [rsp+0xf]
    f93a:	mov    r12d,r8d
    f93d:	mov    rbp,r11
    f940:	sete   dl
    f943:	mov    eax,ebx
    f945:	test   r15,r15
    f948:	sete   cl
    f94b:	and    eax,edx
    f94d:	and    al,cl
    f94f:	jne    103b6 <__cxa_finalize@plt+0xc59e>
    f955:	mov    eax,ebx
    f957:	xor    eax,0x1
    f95a:	and    dl,al
    f95c:	je     102cc <__cxa_finalize@plt+0xc4b4>
    f962:	cmp    BYTE PTR [rsp+0x7c],0x0
    f967:	je     102ca <__cxa_finalize@plt+0xc4b2>
    f96d:	cmp    BYTE PTR [rsp+0xe],0x0
    f972:	jne    1036d <__cxa_finalize@plt+0xc555>
    f978:	test   r13,r13
    f97b:	sete   al
    f97e:	cmp    QWORD PTR [rsp+0x50],0x0
    f984:	setne  dl
    f987:	and    al,dl
    f989:	je     103ac <__cxa_finalize@plt+0xc594>
    f98f:	mov    r13,QWORD PTR [rsp+0x50]
    f994:	lea    rbx,[rip+0xca3a]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    f99b:	mov    BYTE PTR [r14],0x27
    f99f:	mov    DWORD PTR [rsp+0x8],0x2
    f9a7:	mov    r15d,0x1
    f9ad:	mov    QWORD PTR [rsp+0x18],0x1
    f9b6:	mov    BYTE PTR [rsp+0xf],0x0
    f9bb:	mov    QWORD PTR [rsp+0x48],rbx
    f9c0:	mov    BYTE PTR [rsp+0x7c],al
    f9c4:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
    f9c9:	nop    DWORD PTR [rax+0x0]
    f9d0:	cmp    BYTE PTR [rsp+0xf],0x0
    f9d5:	jne    10280 <__cxa_finalize@plt+0xc468>
    f9db:	test   r13,r13
    f9de:	je     fde0 <__cxa_finalize@plt+0xbfc8>
    f9e4:	xor    edx,edx
    f9e6:	cmp    QWORD PTR [rsp+0x50],0x0
    f9ec:	jne    fde0 <__cxa_finalize@plt+0xbfc8>
    f9f2:	mov    QWORD PTR [rsp+0x50],r13
    f9f7:	add    r15,0x3
    f9fb:	xor    eax,eax
    f9fd:	mov    BYTE PTR [rsp+0x7c],r12b
    fa02:	xor    r8d,r8d
    fa05:	mov    r13,rdx
    fa08:	mov    ebx,0x27
    fa0d:	jmp    f429 <__cxa_finalize@plt+0xb611>
    fa12:	nop    WORD PTR [rax+rax*1+0x0]
    fa18:	test   BYTE PTR [rsp+0x78],0x4
    fa1d:	je     fa40 <__cxa_finalize@plt+0xbc28>
    fa1f:	lea    rcx,[rbp+0x2]
    fa23:	cmp    rcx,r11
    fa26:	jae    fa40 <__cxa_finalize@plt+0xbc28>
    fa28:	mov    rax,QWORD PTR [rsp+0x10]
    fa2d:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    fa32:	je     101c2 <__cxa_finalize@plt+0xc3aa>
    fa38:	nop    DWORD PTR [rax+rax*1+0x0]
    fa40:	xor    edx,edx
    fa42:	xor    r12d,r12d
    fa45:	xor    eax,eax
    fa47:	mov    ebx,0x3f
    fa4c:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
    fa51:	nop    DWORD PTR [rax+0x0]
    fa58:	cmp    BYTE PTR [rsp+0xf],0x0
    fa5d:	jne    10280 <__cxa_finalize@plt+0xc468>
    fa63:	xor    r12d,r12d
    fa66:	xor    eax,eax
    fa68:	mov    ebx,0x3f
    fa6d:	jmp    f429 <__cxa_finalize@plt+0xb611>
    fa72:	nop    WORD PTR [rax+rax*1+0x0]
    fa78:	lea    rax,[rsp+0xa0]
    fa80:	cmp    r11,0xffffffffffffffff
    fa84:	mov    QWORD PTR [rsp+0xa0],0x0
    fa90:	mov    QWORD PTR [rsp+0x28],rax
    fa95:	jne    fac4 <__cxa_finalize@plt+0xbcac>
    fa97:	mov    rdi,QWORD PTR [rsp+0x10]
    fa9c:	mov    BYTE PTR [rsp+0x40],r8b
    faa1:	mov    BYTE PTR [rsp+0x38],r10b
    faa6:	mov    QWORD PTR [rsp+0x30],r9
    faab:	call   3720 <strlen@plt>
    fab0:	movzx  r8d,BYTE PTR [rsp+0x40]
    fab6:	movzx  r10d,BYTE PTR [rsp+0x38]
    fabc:	mov    r11,rax
    fabf:	mov    r9,QWORD PTR [rsp+0x30]
    fac4:	lea    rax,[rsp+0x9c]
    facc:	xor    ecx,ecx
    face:	mov    BYTE PTR [rsp+0x7e],bl
    fad2:	mov    BYTE PTR [rsp+0x7d],r8b
    fad7:	mov    rbx,rcx
    fada:	mov    QWORD PTR [rsp+0x88],r9
    fae2:	mov    QWORD PTR [rsp+0x38],rax
    fae7:	mov    BYTE PTR [rsp+0x7f],r10b
    faec:	mov    QWORD PTR [rsp+0x80],r15
    faf4:	mov    QWORD PTR [rsp+0x40],r14
    faf9:	mov    QWORD PTR [rsp+0x70],r13
    fafe:	mov    QWORD PTR [rsp+0x30],r11
    fb03:	mov    rax,QWORD PTR [rsp+0x10]
    fb08:	lea    r14,[rbp+rbx*1+0x0]
    fb0d:	mov    rdx,QWORD PTR [rsp+0x30]
    fb12:	mov    rcx,QWORD PTR [rsp+0x28]
    fb17:	mov    rdi,QWORD PTR [rsp+0x38]
    fb1c:	lea    r13,[rax+r14*1]
    fb20:	sub    rdx,r14
    fb23:	mov    rsi,r13
    fb26:	call   15d90 <fts_children@@Base+0x220>
    fb2b:	test   rax,rax
    fb2e:	mov    r15,rax
    fb31:	je     fb81 <__cxa_finalize@plt+0xbd69>
    fb33:	cmp    rax,0xffffffffffffffff
    fb37:	je     10155 <__cxa_finalize@plt+0xc33d>
    fb3d:	cmp    rax,0xfffffffffffffffe
    fb41:	je     100e1 <__cxa_finalize@plt+0xc2c9>
    fb47:	cmp    DWORD PTR [rsp+0x8],0x2
    fb4c:	sete   al
    fb4f:	and    al,BYTE PTR [rsp+0xf]
    fb53:	jne    fcf0 <__cxa_finalize@plt+0xbed8>
    fb59:	mov    edi,DWORD PTR [rsp+0x9c]
    fb60:	call   3dc0 <iswprint@plt>
    fb65:	mov    rdi,QWORD PTR [rsp+0x28]
    fb6a:	test   eax,eax
    fb6c:	mov    eax,0x0
    fb71:	cmove  r12d,eax
    fb75:	add    rbx,r15
    fb78:	call   3d90 <mbsinit@plt>
    fb7d:	test   eax,eax
    fb7f:	je     fb03 <__cxa_finalize@plt+0xbceb>
    fb81:	mov    edx,r12d
    fb84:	mov    rdi,rbx
    fb87:	movzx  r8d,BYTE PTR [rsp+0x7d]
    fb8d:	xor    edx,0x1
    fb90:	movzx  ebx,BYTE PTR [rsp+0x7e]
    fb95:	movzx  r10d,BYTE PTR [rsp+0x7f]
    fb9b:	and    dl,BYTE PTR [rsp+0xd]
    fb9f:	mov    r15,QWORD PTR [rsp+0x80]
    fba7:	mov    r14,QWORD PTR [rsp+0x40]
    fbac:	mov    r13,QWORD PTR [rsp+0x70]
    fbb1:	mov    r11,QWORD PTR [rsp+0x30]
    fbb6:	cmp    rdi,0x1
    fbba:	jbe    101bb <__cxa_finalize@plt+0xc3a3>
    fbc0:	mov    rcx,rdi
    fbc3:	xor    esi,esi
    fbc5:	movzx  r9d,BYTE PTR [rsp+0xf]
    fbcb:	add    rcx,rbp
    fbce:	mov    rdi,QWORD PTR [rsp+0x10]
    fbd3:	jmp    fc8e <__cxa_finalize@plt+0xbe76>
    fbd8:	nop    DWORD PTR [rax+rax*1+0x0]
    fbe0:	cmp    DWORD PTR [rsp+0x8],0x2
    fbe5:	sete   al
    fbe8:	test   r9b,r9b
    fbeb:	jne    100a0 <__cxa_finalize@plt+0xc288>
    fbf1:	mov    esi,r8d
    fbf4:	xor    esi,0x1
    fbf7:	and    al,sil
    fbfa:	je     fc2b <__cxa_finalize@plt+0xbe13>
    fbfc:	cmp    r13,r15
    fbff:	jbe    fc06 <__cxa_finalize@plt+0xbdee>
    fc01:	mov    BYTE PTR [r14+r15*1],0x27
    fc06:	lea    rsi,[r15+0x1]
    fc0a:	cmp    r13,rsi
    fc0d:	jbe    fc15 <__cxa_finalize@plt+0xbdfd>
    fc0f:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    fc15:	lea    rsi,[r15+0x2]
    fc19:	cmp    r13,rsi
    fc1c:	jbe    fc24 <__cxa_finalize@plt+0xbe0c>
    fc1e:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    fc24:	add    r15,0x3
    fc28:	mov    r8d,eax
    fc2b:	cmp    r13,r15
    fc2e:	jbe    fc35 <__cxa_finalize@plt+0xbe1d>
    fc30:	mov    BYTE PTR [r14+r15*1],0x5c
    fc35:	lea    rax,[r15+0x1]
    fc39:	cmp    r13,rax
    fc3c:	jbe    fc4b <__cxa_finalize@plt+0xbe33>
    fc3e:	mov    eax,ebx
    fc40:	shr    al,0x6
    fc43:	add    eax,0x30
    fc46:	mov    BYTE PTR [r14+r15*1+0x1],al
    fc4b:	lea    rax,[r15+0x2]
    fc4f:	cmp    r13,rax
    fc52:	jbe    fc64 <__cxa_finalize@plt+0xbe4c>
    fc54:	mov    eax,ebx
    fc56:	shr    al,0x3
    fc59:	and    eax,0x7
    fc5c:	add    eax,0x30
    fc5f:	mov    BYTE PTR [r14+r15*1+0x2],al
    fc64:	and    ebx,0x7
    fc67:	add    rbp,0x1
    fc6b:	add    r15,0x3
    fc6f:	add    ebx,0x30
    fc72:	cmp    rbp,rcx
    fc75:	jae    f460 <__cxa_finalize@plt+0xb648>
    fc7b:	mov    esi,edx
    fc7d:	cmp    r13,r15
    fc80:	jbe    fc86 <__cxa_finalize@plt+0xbe6e>
    fc82:	mov    BYTE PTR [r14+r15*1],bl
    fc86:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    fc8a:	add    r15,0x1
    fc8e:	test   dl,dl
    fc90:	jne    fbe0 <__cxa_finalize@plt+0xbdc8>
    fc96:	mov    eax,esi
    fc98:	xor    eax,0x1
    fc9b:	and    eax,r8d
    fc9e:	test   r10b,r10b
    fca1:	je     fcb1 <__cxa_finalize@plt+0xbe99>
    fca3:	cmp    r13,r15
    fca6:	jbe    fcad <__cxa_finalize@plt+0xbe95>
    fca8:	mov    BYTE PTR [r14+r15*1],0x5c
    fcad:	add    r15,0x1
    fcb1:	add    rbp,0x1
    fcb5:	cmp    rbp,rcx
    fcb8:	jae    f43c <__cxa_finalize@plt+0xb624>
    fcbe:	test   al,al
    fcc0:	je     100be <__cxa_finalize@plt+0xc2a6>
    fcc6:	cmp    r13,r15
    fcc9:	jbe    fcd0 <__cxa_finalize@plt+0xbeb8>
    fccb:	mov    BYTE PTR [r14+r15*1],0x27
    fcd0:	lea    rax,[r15+0x1]
    fcd4:	cmp    r13,rax
    fcd7:	jbe    fcdf <__cxa_finalize@plt+0xbec7>
    fcd9:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    fcdf:	add    r15,0x2
    fce3:	xor    r10d,r10d
    fce6:	xor    r8d,r8d
    fce9:	jmp    fc7d <__cxa_finalize@plt+0xbe65>
    fceb:	nop    DWORD PTR [rax+rax*1+0x0]
    fcf0:	cmp    r15,0x1
    fcf4:	je     fb59 <__cxa_finalize@plt+0xbd41>
    fcfa:	mov    rdi,QWORD PTR [rsp+0x10]
    fcff:	lea    rcx,[rdi+r15*1]
    fd03:	lea    rdx,[rdi+r14*1+0x1]
    fd08:	lea    r8,[rcx+r14*1]
    fd0c:	jmp    fd1d <__cxa_finalize@plt+0xbf05>
    fd0e:	xchg   ax,ax
    fd10:	add    rdx,0x1
    fd14:	cmp    r8,rdx
    fd17:	je     fb59 <__cxa_finalize@plt+0xbd41>
    fd1d:	movzx  ecx,BYTE PTR [rdx]
    fd20:	sub    ecx,0x5b
    fd23:	cmp    cl,0x21
    fd26:	ja     fd10 <__cxa_finalize@plt+0xbef8>
    fd28:	mov    esi,0x1
    fd2d:	shl    rsi,cl
    fd30:	mov    rcx,rsi
    fd33:	movabs rsi,0x20000002b
    fd3d:	test   rcx,rsi
    fd40:	je     fd10 <__cxa_finalize@plt+0xbef8>
    fd42:	mov    r14,QWORD PTR [rsp+0x40]
    fd47:	mov    r13,QWORD PTR [rsp+0x70]
    fd4c:	mov    rbp,QWORD PTR [rsp+0x30]
    fd51:	mov    DWORD PTR [rsp+0x8],0x2
    fd59:	cmp    BYTE PTR [rsp+0xd],0x0
    fd5e:	je     fd70 <__cxa_finalize@plt+0xbf58>
    fd60:	test   al,al
    fd62:	mov    eax,0x4
    fd67:	cmove  eax,DWORD PTR [rsp+0x8]
    fd6c:	mov    DWORD PTR [rsp+0x8],eax
    fd70:	sub    rsp,0x8
    fd74:	mov    rcx,rbp
    fd77:	mov    rsi,r13
    fd7a:	push   QWORD PTR [rsp+0x68]
    fd7e:	push   QWORD PTR [rsp+0x78]
    fd82:	mov    rdi,r14
    fd85:	push   0x0
    fd87:	mov    r9d,DWORD PTR [rsp+0x98]
    fd8f:	mov    r8d,DWORD PTR [rsp+0x28]
    fd94:	mov    rdx,QWORD PTR [rsp+0x30]
    fd99:	and    r9d,0xfffffffd
    fd9d:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
    fda2:	add    rsp,0x20
    fda6:	mov    r15,rax
    fda9:	mov    rbx,QWORD PTR [rsp+0xa8]
    fdb1:	xor    rbx,QWORD PTR fs:0x28
    fdba:	mov    rax,r15
    fdbd:	jne    103c3 <__cxa_finalize@plt+0xc5ab>
    fdc3:	add    rsp,0xb8
    fdca:	pop    rbx
    fdcb:	pop    rbp
    fdcc:	pop    r12
    fdce:	pop    r13
    fdd0:	pop    r14
    fdd2:	pop    r15
    fdd4:	ret    
    fdd5:	nop    DWORD PTR [rax]
    fdd8:	mov    rbp,r11
    fddb:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
    fde0:	cmp    r13,r15
    fde3:	jbe    fdea <__cxa_finalize@plt+0xbfd2>
    fde5:	mov    BYTE PTR [r14+r15*1],0x27
    fdea:	lea    rax,[r15+0x1]
    fdee:	cmp    r13,rax
    fdf1:	jbe    fdf9 <__cxa_finalize@plt+0xbfe1>
    fdf3:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    fdf9:	lea    rax,[r15+0x2]
    fdfd:	cmp    r13,rax
    fe00:	jbe    103f2 <__cxa_finalize@plt+0xc5da>
    fe06:	mov    rdx,r13
    fe09:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    fe0f:	mov    r13,QWORD PTR [rsp+0x50]
    fe14:	jmp    f9f2 <__cxa_finalize@plt+0xbbda>
    fe19:	mov    eax,r12d
    fe1c:	mov    ebx,0x30
    fe21:	xor    r12d,r12d
    fe24:	jmp    f429 <__cxa_finalize@plt+0xb611>
    fe29:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    fe2f:	jmp    f7f9 <__cxa_finalize@plt+0xb9e1>
    fe34:	test   ebx,ebx
    fe36:	jne    f263 <__cxa_finalize@plt+0xb44b>
    fe3c:	mov    BYTE PTR [rsp+0xd],0x1
    fe41:	test   r13,r13
    fe44:	jne    103da <__cxa_finalize@plt+0xc5c2>
    fe4a:	lea    rax,[rip+0xc584]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    fe51:	mov    QWORD PTR [rsp+0x50],0x0
    fe5a:	mov    BYTE PTR [rsp+0xe],0x1
    fe5f:	mov    BYTE PTR [rsp+0x7c],0x0
    fe64:	xor    r12d,r12d
    fe67:	mov    BYTE PTR [rsp+0xf],0x0
    fe6c:	mov    QWORD PTR [rsp+0x18],0x1
    fe75:	mov    QWORD PTR [rsp+0x48],rax
    fe7a:	mov    r15d,0x1
    fe80:	mov    DWORD PTR [rsp+0x8],0x2
    fe88:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
    fe8d:	nop    DWORD PTR [rax]
    fe90:	test   ebx,ebx
    fe92:	jne    1028d <__cxa_finalize@plt+0xc475>
    fe98:	test   r13,r13
    fe9b:	je     100c6 <__cxa_finalize@plt+0xc2ae>
    fea1:	mov    BYTE PTR [r14],0x22
    fea5:	mov    BYTE PTR [rsp+0xe],0x1
    feaa:	xor    r12d,r12d
    fead:	mov    BYTE PTR [rsp+0x7c],0x0
    feb2:	mov    QWORD PTR [rsp+0x50],0x0
    febb:	lea    rax,[rip+0xc511]        # 1c3d3 <_IO_stdin_used@@Base+0x2a33>
    fec2:	mov    BYTE PTR [rsp+0xf],0x0
    fec7:	mov    BYTE PTR [rsp+0xd],0x1
    fecc:	mov    QWORD PTR [rsp+0x18],0x1
    fed5:	mov    r15d,0x1
    fedb:	mov    QWORD PTR [rsp+0x48],rax
    fee0:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
    fee5:	lea    rax,[rip+0xc4e7]        # 1c3d3 <_IO_stdin_used@@Base+0x2a33>
    feec:	mov    BYTE PTR [rsp+0xe],0x1
    fef1:	mov    BYTE PTR [rsp+0x7c],0x0
    fef6:	xor    r12d,r12d
    fef9:	mov    QWORD PTR [rsp+0x50],0x0
    ff02:	mov    BYTE PTR [rsp+0xf],0x1
    ff07:	mov    BYTE PTR [rsp+0xd],0x1
    ff0c:	mov    QWORD PTR [rsp+0x18],0x1
    ff15:	xor    r15d,r15d
    ff18:	mov    QWORD PTR [rsp+0x48],rax
    ff1d:	mov    DWORD PTR [rsp+0x8],0x5
    ff25:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
    ff2a:	mov    BYTE PTR [rsp+0xe],0x1
    ff2f:	mov    BYTE PTR [rsp+0x7c],0x0
    ff34:	xor    r12d,r12d
    ff37:	mov    QWORD PTR [rsp+0x50],0x0
    ff40:	mov    BYTE PTR [rsp+0xf],0x0
    ff45:	xor    r15d,r15d
    ff48:	mov    BYTE PTR [rsp+0xd],0x1
    ff4d:	mov    QWORD PTR [rsp+0x18],0x0
    ff56:	mov    QWORD PTR [rsp+0x48],0x0
    ff5f:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
    ff64:	cmp    DWORD PTR [rsp+0x8],0xa
    ff69:	je     ffc1 <__cxa_finalize@plt+0xc1a9>
    ff6b:	lea    rsi,[rip+0xc465]        # 1c3d7 <_IO_stdin_used@@Base+0x2a37>
    ff72:	xor    edi,edi
    ff74:	mov    edx,0x5
    ff79:	call   3700 <dcgettext@plt>
    ff7e:	mov    rcx,rax
    ff81:	mov    QWORD PTR [rsp+0x68],rax
    ff86:	lea    rax,[rip+0xc44a]        # 1c3d7 <_IO_stdin_used@@Base+0x2a37>
    ff8d:	cmp    rcx,rax
    ff90:	je     1032e <__cxa_finalize@plt+0xc516>
    ff96:	lea    rsi,[rip+0xc438]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    ff9d:	xor    edi,edi
    ff9f:	mov    edx,0x5
    ffa4:	call   3700 <dcgettext@plt>
    ffa9:	mov    rcx,rax
    ffac:	mov    QWORD PTR [rsp+0x60],rax
    ffb1:	lea    rax,[rip+0xc41d]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
    ffb8:	cmp    rcx,rax
    ffbb:	je     10344 <__cxa_finalize@plt+0xc52c>
    ffc1:	xor    r15d,r15d
    ffc4:	test   ebx,ebx
    ffc6:	je     1018d <__cxa_finalize@plt+0xc375>
    ffcc:	test   ebx,ebx
    ffce:	mov    rbx,QWORD PTR [rsp+0x60]
    ffd3:	setne  BYTE PTR [rsp+0xf]
    ffd8:	xor    r12d,r12d
    ffdb:	mov    rdi,rbx
    ffde:	call   3720 <strlen@plt>
    ffe3:	mov    QWORD PTR [rsp+0x48],rbx
    ffe8:	mov    QWORD PTR [rsp+0x18],rax
    ffed:	mov    BYTE PTR [rsp+0xe],0x1
    fff2:	mov    BYTE PTR [rsp+0x7c],0x0
    fff7:	mov    QWORD PTR [rsp+0x50],0x0
   10000:	mov    BYTE PTR [rsp+0xd],0x1
   10005:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
   1000a:	mov    BYTE PTR [rsp+0xe],0x1
   1000f:	mov    BYTE PTR [rsp+0x7c],0x0
   10014:	xor    r12d,r12d
   10017:	mov    QWORD PTR [rsp+0x50],0x0
   10020:	mov    BYTE PTR [rsp+0xf],0x0
   10025:	xor    r15d,r15d
   10028:	mov    BYTE PTR [rsp+0xd],0x0
   1002d:	mov    QWORD PTR [rsp+0x18],0x0
   10036:	mov    QWORD PTR [rsp+0x48],0x0
   1003f:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
   10044:	mov    BYTE PTR [rsp+0xe],0x1
   10049:	mov    BYTE PTR [rsp+0x7c],0x0
   1004e:	xor    r12d,r12d
   10051:	mov    QWORD PTR [rsp+0x50],0x0
   1005a:	mov    BYTE PTR [rsp+0xf],0x1
   1005f:	mov    BYTE PTR [rsp+0xd],0x1
   10064:	jmp    f283 <__cxa_finalize@plt+0xb46b>
   10069:	cmp    r13,r15
   1006c:	jbe    10073 <__cxa_finalize@plt+0xc25b>
   1006e:	mov    BYTE PTR [r14+r15*1],0x30
   10073:	lea    rax,[rcx+0x2]
   10077:	cmp    r13,rax
   1007a:	jbe    10082 <__cxa_finalize@plt+0xc26a>
   1007c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
   10082:	mov    eax,r12d
   10085:	lea    r15,[rcx+0x3]
   10089:	xor    r12d,r12d
   1008c:	mov    ebx,0x30
   10091:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
   10096:	nop    WORD PTR cs:[rax+rax*1+0x0]
   100a0:	movzx  ebx,BYTE PTR [rsp+0xf]
   100a5:	mov    rbp,r11
   100a8:	mov    BYTE PTR [rsp+0xd],bl
   100ac:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
   100b1:	movzx  edx,BYTE PTR [rsp+0xd]
   100b6:	xor    r12d,r12d
   100b9:	jmp    fbc0 <__cxa_finalize@plt+0xbda8>
   100be:	xor    r10d,r10d
   100c1:	jmp    fc7d <__cxa_finalize@plt+0xbe65>
   100c6:	mov    QWORD PTR [rsp+0x50],0x0
   100cf:	mov    BYTE PTR [rsp+0xe],0x1
   100d4:	xor    r12d,r12d
   100d7:	mov    BYTE PTR [rsp+0x7c],0x0
   100dc:	jmp    febb <__cxa_finalize@plt+0xc0a3>
   100e1:	mov    r11,QWORD PTR [rsp+0x30]
   100e6:	mov    rsi,r14
   100e9:	mov    rcx,r13
   100ec:	mov    rax,rbx
   100ef:	mov    rdi,rbx
   100f2:	movzx  r8d,BYTE PTR [rsp+0x7d]
   100f8:	movzx  ebx,BYTE PTR [rsp+0x7e]
   100fd:	mov    r9,QWORD PTR [rsp+0x88]
   10105:	cmp    rsi,r11
   10108:	movzx  r10d,BYTE PTR [rsp+0x7f]
   1010e:	mov    r15,QWORD PTR [rsp+0x80]
   10116:	mov    r14,QWORD PTR [rsp+0x40]
   1011b:	mov    r13,QWORD PTR [rsp+0x70]
   10120:	jae    10148 <__cxa_finalize@plt+0xc330>
   10122:	cmp    BYTE PTR [rcx],0x0
   10125:	jne    10137 <__cxa_finalize@plt+0xc31f>
   10127:	jmp    10148 <__cxa_finalize@plt+0xc330>
   10129:	nop    DWORD PTR [rax+0x0]
   10130:	cmp    BYTE PTR [r9+rax*1],0x0
   10135:	je     10145 <__cxa_finalize@plt+0xc32d>
   10137:	add    rax,0x1
   1013b:	lea    rdx,[rbp+rax*1+0x0]
   10140:	cmp    r11,rdx
   10143:	ja     10130 <__cxa_finalize@plt+0xc318>
   10145:	mov    rdi,rax
   10148:	movzx  edx,BYTE PTR [rsp+0xd]
   1014d:	xor    r12d,r12d
   10150:	jmp    fbb6 <__cxa_finalize@plt+0xbd9e>
   10155:	mov    rdi,rbx
   10158:	movzx  r8d,BYTE PTR [rsp+0x7d]
   1015e:	movzx  ebx,BYTE PTR [rsp+0x7e]
   10163:	movzx  r10d,BYTE PTR [rsp+0x7f]
   10169:	mov    r15,QWORD PTR [rsp+0x80]
   10171:	xor    r12d,r12d
   10174:	mov    r14,QWORD PTR [rsp+0x40]
   10179:	mov    r13,QWORD PTR [rsp+0x70]
   1017e:	mov    r11,QWORD PTR [rsp+0x30]
   10183:	movzx  edx,BYTE PTR [rsp+0xd]
   10188:	jmp    fbb6 <__cxa_finalize@plt+0xbd9e>
   1018d:	mov    rdx,QWORD PTR [rsp+0x68]
   10192:	movzx  eax,BYTE PTR [rdx]
   10195:	test   al,al
   10197:	je     ffcc <__cxa_finalize@plt+0xc1b4>
   1019d:	nop    DWORD PTR [rax]
   101a0:	cmp    r13,r15
   101a3:	jbe    101a9 <__cxa_finalize@plt+0xc391>
   101a5:	mov    BYTE PTR [r14+r15*1],al
   101a9:	add    r15,0x1
   101ad:	movzx  eax,BYTE PTR [rdx+r15*1]
   101b2:	test   al,al
   101b4:	jne    101a0 <__cxa_finalize@plt+0xc388>
   101b6:	jmp    ffcc <__cxa_finalize@plt+0xc1b4>
   101bb:	mov    eax,edx
   101bd:	jmp    f717 <__cxa_finalize@plt+0xb8ff>
   101c2:	movzx  ebx,BYTE PTR [rax+rcx*1]
   101c6:	cmp    bl,0x3e
   101c9:	ja     fa40 <__cxa_finalize@plt+0xbc28>
   101cf:	movabs rax,0x7000a38200000000
   101d9:	bt     rax,rbx
   101dd:	jae    fa40 <__cxa_finalize@plt+0xbc28>
   101e3:	cmp    BYTE PTR [rsp+0xf],0x0
   101e8:	jne    103d2 <__cxa_finalize@plt+0xc5ba>
   101ee:	cmp    r13,r15
   101f1:	jbe    101f8 <__cxa_finalize@plt+0xc3e0>
   101f3:	mov    BYTE PTR [r14+r15*1],0x3f
   101f8:	lea    rax,[r15+0x1]
   101fc:	cmp    r13,rax
   101ff:	jbe    10207 <__cxa_finalize@plt+0xc3ef>
   10201:	mov    BYTE PTR [r14+r15*1+0x1],0x22
   10207:	lea    rax,[r15+0x2]
   1020b:	cmp    r13,rax
   1020e:	jbe    10216 <__cxa_finalize@plt+0xc3fe>
   10210:	mov    BYTE PTR [r14+r15*1+0x2],0x22
   10216:	lea    rax,[r15+0x3]
   1021a:	cmp    r13,rax
   1021d:	jbe    10225 <__cxa_finalize@plt+0xc40d>
   1021f:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
   10225:	add    r15,0x4
   10229:	xor    edx,edx
   1022b:	xor    r12d,r12d
   1022e:	xor    eax,eax
   10230:	mov    rbp,rcx
   10233:	jmp    f3f8 <__cxa_finalize@plt+0xb5e0>
   10238:	test   ebx,ebx
   1023a:	je     103c8 <__cxa_finalize@plt+0xc5b0>
   10240:	lea    rax,[rip+0xc18e]        # 1c3d5 <_IO_stdin_used@@Base+0x2a35>
   10247:	mov    BYTE PTR [rsp+0xe],0x1
   1024c:	mov    BYTE PTR [rsp+0x7c],0x0
   10251:	xor    r12d,r12d
   10254:	mov    QWORD PTR [rsp+0x50],0x0
   1025d:	mov    BYTE PTR [rsp+0xf],0x1
   10262:	mov    BYTE PTR [rsp+0xd],0x0
   10267:	mov    QWORD PTR [rsp+0x18],0x1
   10270:	xor    r15d,r15d
   10273:	mov    QWORD PTR [rsp+0x48],rax
   10278:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
   1027d:	nop    DWORD PTR [rax]
   10280:	mov    rbp,r11
   10283:	movzx  eax,BYTE PTR [rsp+0xf]
   10288:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
   1028d:	lea    rax,[rip+0xc13f]        # 1c3d3 <_IO_stdin_used@@Base+0x2a33>
   10294:	mov    BYTE PTR [rsp+0xe],0x1
   10299:	mov    BYTE PTR [rsp+0x7c],0x0
   1029e:	xor    r12d,r12d
   102a1:	mov    QWORD PTR [rsp+0x50],0x0
   102aa:	mov    BYTE PTR [rsp+0xf],0x1
   102af:	mov    BYTE PTR [rsp+0xd],0x1
   102b4:	mov    QWORD PTR [rsp+0x18],0x1
   102bd:	xor    r15d,r15d
   102c0:	mov    QWORD PTR [rsp+0x48],rax
   102c5:	jmp    f2a3 <__cxa_finalize@plt+0xb48b>
   102ca:	mov    eax,edx
   102cc:	mov    rbx,QWORD PTR [rsp+0x48]
   102d1:	test   rbx,rbx
   102d4:	je     10302 <__cxa_finalize@plt+0xc4ea>
   102d6:	test   al,al
   102d8:	je     10302 <__cxa_finalize@plt+0xc4ea>
   102da:	movzx  ecx,BYTE PTR [rbx]
   102dd:	mov    rax,rbx
   102e0:	test   cl,cl
   102e2:	je     10302 <__cxa_finalize@plt+0xc4ea>
   102e4:	mov    rdx,r15
   102e7:	sub    rax,r15
   102ea:	cmp    r13,rdx
   102ed:	jbe    102f3 <__cxa_finalize@plt+0xc4db>
   102ef:	mov    BYTE PTR [r14+rdx*1],cl
   102f3:	add    rdx,0x1
   102f7:	movzx  ecx,BYTE PTR [rax+rdx*1]
   102fb:	test   cl,cl
   102fd:	jne    102ea <__cxa_finalize@plt+0xc4d2>
   102ff:	mov    r15,rdx
   10302:	cmp    r13,r15
   10305:	jbe    fda9 <__cxa_finalize@plt+0xbf91>
   1030b:	mov    BYTE PTR [r14+r15*1],0x0
   10310:	jmp    fda9 <__cxa_finalize@plt+0xbf91>
   10315:	cmp    DWORD PTR [rsp+0x8],0x2
   1031a:	movzx  ebx,BYTE PTR [rsp+0xf]
   1031f:	mov    rbp,r11
   10322:	sete   al
   10325:	mov    BYTE PTR [rsp+0xd],bl
   10329:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
   1032e:	mov    esi,DWORD PTR [rsp+0x8]
   10332:	mov    rdi,rcx
   10335:	call   f0e0 <__cxa_finalize@plt+0xb2c8>
   1033a:	mov    QWORD PTR [rsp+0x68],rax
   1033f:	jmp    ff96 <__cxa_finalize@plt+0xc17e>
   10344:	mov    esi,DWORD PTR [rsp+0x8]
   10348:	mov    rdi,rcx
   1034b:	call   f0e0 <__cxa_finalize@plt+0xb2c8>
   10350:	mov    QWORD PTR [rsp+0x60],rax
   10355:	jmp    ffc1 <__cxa_finalize@plt+0xc1a9>
   1035a:	movzx  ebx,BYTE PTR [rsp+0xf]
   1035f:	mov    rbp,r11
   10362:	mov    eax,edx
   10364:	mov    BYTE PTR [rsp+0xd],bl
   10368:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
   1036d:	sub    rsp,0x8
   10371:	mov    r8d,0x5
   10377:	mov    rcx,r11
   1037a:	push   QWORD PTR [rsp+0x68]
   1037e:	push   QWORD PTR [rsp+0x78]
   10382:	mov    rdi,r14
   10385:	push   QWORD PTR [rsp+0x38]
   10389:	mov    r9d,DWORD PTR [rsp+0x98]
   10391:	mov    rdx,QWORD PTR [rsp+0x30]
   10396:	mov    rsi,QWORD PTR [rsp+0x70]
   1039b:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   103a0:	add    rsp,0x20
   103a4:	mov    r15,rax
   103a7:	jmp    fda9 <__cxa_finalize@plt+0xbf91>
   103ac:	movzx  eax,BYTE PTR [rsp+0x7c]
   103b1:	jmp    102cc <__cxa_finalize@plt+0xc4b4>
   103b6:	mov    DWORD PTR [rsp+0x8],0x2
   103be:	jmp    fd59 <__cxa_finalize@plt+0xbf41>
   103c3:	call   3760 <__stack_chk_fail@plt>
   103c8:	mov    BYTE PTR [rsp+0xd],0x0
   103cd:	jmp    fe41 <__cxa_finalize@plt+0xc029>
   103d2:	mov    rbp,r11
   103d5:	jmp    fd70 <__cxa_finalize@plt+0xbf58>
   103da:	mov    BYTE PTR [rsp+0xe],0x1
   103df:	xor    eax,eax
   103e1:	xor    r12d,r12d
   103e4:	mov    QWORD PTR [rsp+0x50],0x0
   103ed:	jmp    f994 <__cxa_finalize@plt+0xbb7c>
   103f2:	mov    rdx,r13
   103f5:	mov    r13,QWORD PTR [rsp+0x50]
   103fa:	jmp    f9f2 <__cxa_finalize@plt+0xbbda>
   103ff:	call   3530 <abort@plt>
   10404:	xchg   ax,ax
   10406:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10410:	push   r15
   10412:	push   r14
   10414:	movsxd r15,edi
   10417:	push   r13
   10419:	push   r12
   1041b:	mov    r14,rdx
   1041e:	push   rbp
   1041f:	push   rbx
   10420:	mov    rbp,rcx
   10423:	sub    rsp,0x28
   10427:	mov    QWORD PTR [rsp+0x8],rsi
   1042c:	call   3540 <__errno_location@plt>
   10431:	mov    r13,rax
   10434:	mov    eax,DWORD PTR [rax]
   10436:	test   r15d,r15d
   10439:	mov    rbx,QWORD PTR [rip+0x211c40]        # 222080 <quote_quoting_options@@Base+0x40>
   10440:	mov    DWORD PTR [rsp+0x18],eax
   10444:	js     105b1 <__cxa_finalize@plt+0xc799>
   1044a:	cmp    DWORD PTR [rip+0x211c27],r15d        # 222078 <quote_quoting_options@@Base+0x38>
   10451:	jg     104b5 <__cxa_finalize@plt+0xc69d>
   10453:	cmp    r15d,0x7ffffffe
   1045a:	ja     105b6 <__cxa_finalize@plt+0xc79e>
   10460:	lea    r12d,[r15+0x1]
   10464:	lea    rax,[rip+0x211c25]        # 222090 <quote_quoting_options@@Base+0x50>
   1046b:	movsxd rsi,r12d
   1046e:	shl    rsi,0x4
   10472:	cmp    rbx,rax
   10475:	je     10590 <__cxa_finalize@plt+0xc778>
   1047b:	mov    rdi,rbx
   1047e:	call   13120 <__cxa_finalize@plt+0xf308>
   10483:	mov    rbx,rax
   10486:	mov    QWORD PTR [rip+0x211bf3],rax        # 222080 <quote_quoting_options@@Base+0x40>
   1048d:	movsxd rdi,DWORD PTR [rip+0x211be4]        # 222078 <quote_quoting_options@@Base+0x38>
   10494:	mov    edx,r12d
   10497:	xor    esi,esi
   10499:	sub    edx,edi
   1049b:	shl    rdi,0x4
   1049f:	movsxd rdx,edx
   104a2:	add    rdi,rbx
   104a5:	shl    rdx,0x4
   104a9:	call   3840 <memset@plt>
   104ae:	mov    DWORD PTR [rip+0x211bc3],r12d        # 222078 <quote_quoting_options@@Base+0x38>
   104b5:	mov    eax,DWORD PTR [rbp+0x4]
   104b8:	shl    r15,0x4
   104bc:	sub    rsp,0x8
   104c0:	add    rbx,r15
   104c3:	lea    r15,[rbp+0x8]
   104c7:	mov    r8d,DWORD PTR [rbp+0x0]
   104cb:	mov    r11,QWORD PTR [rbx]
   104ce:	mov    r12,QWORD PTR [rbx+0x8]
   104d2:	mov    rcx,r14
   104d5:	or     eax,0x1
   104d8:	mov    DWORD PTR [rsp+0x24],eax
   104dc:	push   QWORD PTR [rbp+0x30]
   104df:	mov    r9d,eax
   104e2:	push   QWORD PTR [rbp+0x28]
   104e5:	push   r15
   104e7:	mov    rsi,r11
   104ea:	mov    rdx,QWORD PTR [rsp+0x28]
   104ef:	mov    rdi,r12
   104f2:	mov    QWORD PTR [rsp+0x30],r11
   104f7:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   104fc:	add    rsp,0x20
   10500:	mov    r11,QWORD PTR [rsp+0x10]
   10505:	cmp    r11,rax
   10508:	ja     10571 <__cxa_finalize@plt+0xc759>
   1050a:	lea    rsi,[rax+0x1]
   1050e:	lea    rax,[rip+0x2120ab]        # 2225c0 <program_name@@Base+0x20>
   10515:	cmp    r12,rax
   10518:	mov    QWORD PTR [rbx],rsi
   1051b:	je     1052f <__cxa_finalize@plt+0xc717>
   1051d:	mov    rdi,r12
   10520:	mov    QWORD PTR [rsp+0x10],rsi
   10525:	call   3e10 <free@plt>
   1052a:	mov    rsi,QWORD PTR [rsp+0x10]
   1052f:	mov    rdi,rsi
   10532:	mov    QWORD PTR [rsp+0x10],rsi
   10537:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   1053c:	sub    rsp,0x8
   10540:	mov    QWORD PTR [rbx+0x8],rax
   10544:	mov    r8d,DWORD PTR [rbp+0x0]
   10548:	push   QWORD PTR [rbp+0x30]
   1054b:	push   QWORD PTR [rbp+0x28]
   1054e:	mov    rcx,r14
   10551:	push   r15
   10553:	mov    r9d,DWORD PTR [rsp+0x3c]
   10558:	mov    rdi,rax
   1055b:	mov    rdx,QWORD PTR [rsp+0x28]
   10560:	mov    rsi,QWORD PTR [rsp+0x30]
   10565:	mov    r12,rax
   10568:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   1056d:	add    rsp,0x20
   10571:	mov    eax,DWORD PTR [rsp+0x18]
   10575:	mov    DWORD PTR [r13+0x0],eax
   10579:	add    rsp,0x28
   1057d:	mov    rax,r12
   10580:	pop    rbx
   10581:	pop    rbp
   10582:	pop    r12
   10584:	pop    r13
   10586:	pop    r14
   10588:	pop    r15
   1058a:	ret    
   1058b:	nop    DWORD PTR [rax+rax*1+0x0]
   10590:	xor    edi,edi
   10592:	call   13120 <__cxa_finalize@plt+0xf308>
   10597:	movdqa xmm0,XMMWORD PTR [rip+0x211af1]        # 222090 <quote_quoting_options@@Base+0x50>
   1059f:	mov    rbx,rax
   105a2:	mov    QWORD PTR [rip+0x211ad7],rax        # 222080 <quote_quoting_options@@Base+0x40>
   105a9:	movups XMMWORD PTR [rax],xmm0
   105ac:	jmp    1048d <__cxa_finalize@plt+0xc675>
   105b1:	call   3530 <abort@plt>
   105b6:	call   13310 <__cxa_finalize@plt+0xf4f8>
   105bb:	nop    DWORD PTR [rax+rax*1+0x0]
   105c0:	push   r12
   105c2:	push   rbp
   105c3:	push   rbx
   105c4:	mov    rbx,rdi
   105c7:	call   3540 <__errno_location@plt>
   105cc:	mov    r12d,DWORD PTR [rax]
   105cf:	mov    rbp,rax
   105d2:	lea    rax,[rip+0x2120e7]        # 2226c0 <program_name@@Base+0x120>
   105d9:	test   rbx,rbx
   105dc:	mov    esi,0x38
   105e1:	cmove  rbx,rax
   105e5:	mov    rdi,rbx
   105e8:	call   132c0 <__cxa_finalize@plt+0xf4a8>
   105ed:	mov    DWORD PTR [rbp+0x0],r12d
   105f1:	pop    rbx
   105f2:	pop    rbp
   105f3:	pop    r12
   105f5:	ret    
   105f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10600:	lea    rax,[rip+0x2120b9]        # 2226c0 <program_name@@Base+0x120>
   10607:	test   rdi,rdi
   1060a:	cmove  rdi,rax
   1060e:	mov    eax,DWORD PTR [rdi]
   10610:	ret    
   10611:	nop    DWORD PTR [rax+rax*1+0x0]
   10616:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10620:	lea    rax,[rip+0x212099]        # 2226c0 <program_name@@Base+0x120>
   10627:	test   rdi,rdi
   1062a:	cmove  rdi,rax
   1062e:	mov    DWORD PTR [rdi],esi
   10630:	ret    
   10631:	nop    DWORD PTR [rax+rax*1+0x0]
   10636:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10640:	lea    rax,[rip+0x212079]        # 2226c0 <program_name@@Base+0x120>
   10647:	test   rdi,rdi
   1064a:	mov    ecx,esi
   1064c:	cmove  rdi,rax
   10650:	mov    eax,esi
   10652:	and    ecx,0x1f
   10655:	shr    al,0x5
   10658:	movzx  eax,al
   1065b:	lea    rdi,[rdi+rax*4+0x8]
   10660:	mov    esi,DWORD PTR [rdi]
   10662:	mov    eax,esi
   10664:	shr    eax,cl
   10666:	xor    edx,eax
   10668:	and    eax,0x1
   1066b:	and    edx,0x1
   1066e:	shl    edx,cl
   10670:	xor    edx,esi
   10672:	mov    DWORD PTR [rdi],edx
   10674:	ret    
   10675:	nop
   10676:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10680:	lea    rax,[rip+0x212039]        # 2226c0 <program_name@@Base+0x120>
   10687:	test   rdi,rdi
   1068a:	cmove  rdi,rax
   1068e:	mov    eax,DWORD PTR [rdi+0x4]
   10691:	mov    DWORD PTR [rdi+0x4],esi
   10694:	ret    
   10695:	nop
   10696:	nop    WORD PTR cs:[rax+rax*1+0x0]
   106a0:	lea    rax,[rip+0x212019]        # 2226c0 <program_name@@Base+0x120>
   106a7:	test   rdi,rdi
   106aa:	cmove  rdi,rax
   106ae:	test   rsi,rsi
   106b1:	mov    DWORD PTR [rdi],0xa
   106b7:	je     106c7 <__cxa_finalize@plt+0xc8af>
   106b9:	test   rdx,rdx
   106bc:	je     106c7 <__cxa_finalize@plt+0xc8af>
   106be:	mov    QWORD PTR [rdi+0x28],rsi
   106c2:	mov    QWORD PTR [rdi+0x30],rdx
   106c6:	ret    
   106c7:	sub    rsp,0x8
   106cb:	call   3530 <abort@plt>
   106d0:	push   r15
   106d2:	push   r14
   106d4:	lea    rax,[rip+0x211fe5]        # 2226c0 <program_name@@Base+0x120>
   106db:	push   r13
   106dd:	push   r12
   106df:	mov    r13,rdi
   106e2:	push   rbp
   106e3:	push   rbx
   106e4:	mov    rbx,r8
   106e7:	mov    r14,rsi
   106ea:	mov    r15,rdx
   106ed:	sub    rsp,0x18
   106f1:	test   r8,r8
   106f4:	cmove  rbx,rax
   106f8:	mov    QWORD PTR [rsp+0x8],rcx
   106fd:	call   3540 <__errno_location@plt>
   10702:	mov    r12d,DWORD PTR [rax]
   10705:	mov    rbp,rax
   10708:	lea    rax,[rbx+0x8]
   1070c:	sub    rsp,0x8
   10710:	mov    r9d,DWORD PTR [rbx+0x4]
   10714:	push   QWORD PTR [rbx+0x30]
   10717:	mov    r8d,DWORD PTR [rbx]
   1071a:	push   QWORD PTR [rbx+0x28]
   1071d:	mov    rdx,r15
   10720:	push   rax
   10721:	mov    rcx,QWORD PTR [rsp+0x28]
   10726:	mov    rsi,r14
   10729:	mov    rdi,r13
   1072c:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   10731:	mov    DWORD PTR [rbp+0x0],r12d
   10735:	add    rsp,0x38
   10739:	pop    rbx
   1073a:	pop    rbp
   1073b:	pop    r12
   1073d:	pop    r13
   1073f:	pop    r14
   10741:	pop    r15
   10743:	ret    
   10744:	xchg   ax,ax
   10746:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10750:	push   r15
   10752:	push   r14
   10754:	lea    rax,[rip+0x211f65]        # 2226c0 <program_name@@Base+0x120>
   1075b:	push   r13
   1075d:	push   r12
   1075f:	mov    r12,rdx
   10762:	push   rbp
   10763:	push   rbx
   10764:	mov    rbx,rcx
   10767:	mov    r14,rdi
   1076a:	mov    r15,rsi
   1076d:	sub    rsp,0x38
   10771:	test   rcx,rcx
   10774:	cmove  rbx,rax
   10778:	xor    ebp,ebp
   1077a:	call   3540 <__errno_location@plt>
   1077f:	test   r12,r12
   10782:	mov    r13,rax
   10785:	mov    eax,DWORD PTR [rax]
   10787:	sete   bpl
   1078b:	or     ebp,DWORD PTR [rbx+0x4]
   1078e:	lea    r10,[rbx+0x8]
   10792:	sub    rsp,0x8
   10796:	mov    r8d,DWORD PTR [rbx]
   10799:	mov    rcx,r15
   1079c:	mov    DWORD PTR [rsp+0x14],eax
   107a0:	push   QWORD PTR [rbx+0x30]
   107a3:	mov    rdx,r14
   107a6:	push   QWORD PTR [rbx+0x28]
   107a9:	push   r10
   107ab:	xor    esi,esi
   107ad:	mov    r9d,ebp
   107b0:	xor    edi,edi
   107b2:	mov    QWORD PTR [rsp+0x40],r10
   107b7:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   107bc:	lea    rsi,[rax+0x1]
   107c0:	mov    QWORD PTR [rsp+0x48],rax
   107c5:	add    rsp,0x20
   107c9:	mov    rdi,rsi
   107cc:	mov    QWORD PTR [rsp+0x18],rsi
   107d1:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   107d6:	mov    QWORD PTR [rsp+0x10],rax
   107db:	sub    rsp,0x8
   107df:	push   QWORD PTR [rbx+0x30]
   107e2:	push   QWORD PTR [rbx+0x28]
   107e5:	mov    r10,QWORD PTR [rsp+0x38]
   107ea:	mov    r9d,ebp
   107ed:	mov    r8d,DWORD PTR [rbx]
   107f0:	mov    rcx,r15
   107f3:	mov    rdx,r14
   107f6:	mov    rdi,rax
   107f9:	push   r10
   107fb:	mov    rsi,QWORD PTR [rsp+0x38]
   10800:	call   f1d0 <__cxa_finalize@plt+0xb3b8>
   10805:	mov    eax,DWORD PTR [rsp+0x2c]
   10809:	add    rsp,0x20
   1080d:	test   r12,r12
   10810:	mov    DWORD PTR [r13+0x0],eax
   10814:	je     1081f <__cxa_finalize@plt+0xca07>
   10816:	mov    r11,QWORD PTR [rsp+0x28]
   1081b:	mov    QWORD PTR [r12],r11
   1081f:	mov    rax,QWORD PTR [rsp+0x10]
   10824:	add    rsp,0x38
   10828:	pop    rbx
   10829:	pop    rbp
   1082a:	pop    r12
   1082c:	pop    r13
   1082e:	pop    r14
   10830:	pop    r15
   10832:	ret    
   10833:	nop    DWORD PTR [rax]
   10836:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10840:	mov    rcx,rdx
   10843:	xor    edx,edx
   10845:	jmp    10750 <__cxa_finalize@plt+0xc938>
   1084a:	nop    WORD PTR [rax+rax*1+0x0]
   10850:	mov    eax,DWORD PTR [rip+0x211822]        # 222078 <quote_quoting_options@@Base+0x38>
   10856:	push   r12
   10858:	mov    r12,QWORD PTR [rip+0x211821]        # 222080 <quote_quoting_options@@Base+0x40>
   1085f:	push   rbp
   10860:	push   rbx
   10861:	cmp    eax,0x1
   10864:	jle    10891 <__cxa_finalize@plt+0xca79>
   10866:	sub    eax,0x2
   10869:	lea    rbx,[r12+0x18]
   1086e:	shl    rax,0x4
   10872:	lea    rbp,[r12+rax*1+0x28]
   10877:	nop    WORD PTR [rax+rax*1+0x0]
   10880:	mov    rdi,QWORD PTR [rbx]
   10883:	add    rbx,0x10
   10887:	call   3e10 <free@plt>
   1088c:	cmp    rbx,rbp
   1088f:	jne    10880 <__cxa_finalize@plt+0xca68>
   10891:	mov    rdi,QWORD PTR [r12+0x8]
   10896:	lea    rbx,[rip+0x211d23]        # 2225c0 <program_name@@Base+0x20>
   1089d:	cmp    rdi,rbx
   108a0:	je     108b9 <__cxa_finalize@plt+0xcaa1>
   108a2:	call   3e10 <free@plt>
   108a7:	mov    QWORD PTR [rip+0x2117de],0x100        # 222090 <quote_quoting_options@@Base+0x50>
   108b2:	mov    QWORD PTR [rip+0x2117df],rbx        # 222098 <quote_quoting_options@@Base+0x58>
   108b9:	lea    rbx,[rip+0x2117d0]        # 222090 <quote_quoting_options@@Base+0x50>
   108c0:	cmp    r12,rbx
   108c3:	je     108d4 <__cxa_finalize@plt+0xcabc>
   108c5:	mov    rdi,r12
   108c8:	call   3e10 <free@plt>
   108cd:	mov    QWORD PTR [rip+0x2117ac],rbx        # 222080 <quote_quoting_options@@Base+0x40>
   108d4:	pop    rbx
   108d5:	mov    DWORD PTR [rip+0x211799],0x1        # 222078 <quote_quoting_options@@Base+0x38>
   108df:	pop    rbp
   108e0:	pop    r12
   108e2:	ret    
   108e3:	nop    DWORD PTR [rax]
   108e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   108f0:	lea    rcx,[rip+0x211dc9]        # 2226c0 <program_name@@Base+0x120>
   108f7:	mov    rdx,0xffffffffffffffff
   108fe:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10903:	nop    DWORD PTR [rax]
   10906:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10910:	lea    rcx,[rip+0x211da9]        # 2226c0 <program_name@@Base+0x120>
   10917:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   1091c:	nop    DWORD PTR [rax+0x0]
   10920:	lea    rcx,[rip+0x211d99]        # 2226c0 <program_name@@Base+0x120>
   10927:	mov    rsi,rdi
   1092a:	mov    rdx,0xffffffffffffffff
   10931:	xor    edi,edi
   10933:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10938:	nop    DWORD PTR [rax+rax*1+0x0]
   10940:	lea    rcx,[rip+0x211d79]        # 2226c0 <program_name@@Base+0x120>
   10947:	mov    rdx,rsi
   1094a:	mov    rsi,rdi
   1094d:	xor    edi,edi
   1094f:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10954:	xchg   ax,ax
   10956:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10960:	sub    rsp,0x48
   10964:	mov    rax,rdx
   10967:	mov    rdx,QWORD PTR fs:0x28
   10970:	mov    QWORD PTR [rsp+0x38],rdx
   10975:	xor    edx,edx
   10977:	cmp    esi,0xa
   1097a:	je     109e4 <__cxa_finalize@plt+0xcbcc>
   1097c:	mov    DWORD PTR [rsp],esi
   1097f:	mov    rcx,rsp
   10982:	mov    rdx,0xffffffffffffffff
   10989:	mov    rsi,rax
   1098c:	mov    QWORD PTR [rsp+0x4],0x0
   10995:	mov    QWORD PTR [rsp+0xc],0x0
   1099e:	mov    QWORD PTR [rsp+0x14],0x0
   109a7:	mov    QWORD PTR [rsp+0x1c],0x0
   109b0:	mov    QWORD PTR [rsp+0x24],0x0
   109b9:	mov    QWORD PTR [rsp+0x2c],0x0
   109c2:	mov    DWORD PTR [rsp+0x34],0x0
   109ca:	call   10410 <__cxa_finalize@plt+0xc5f8>
   109cf:	mov    rcx,QWORD PTR [rsp+0x38]
   109d4:	xor    rcx,QWORD PTR fs:0x28
   109dd:	jne    109e9 <__cxa_finalize@plt+0xcbd1>
   109df:	add    rsp,0x48
   109e3:	ret    
   109e4:	call   3530 <abort@plt>
   109e9:	call   3760 <__stack_chk_fail@plt>
   109ee:	xchg   ax,ax
   109f0:	sub    rsp,0x48
   109f4:	mov    rax,rdx
   109f7:	mov    rdx,rcx
   109fa:	mov    rcx,QWORD PTR fs:0x28
   10a03:	mov    QWORD PTR [rsp+0x38],rcx
   10a08:	xor    ecx,ecx
   10a0a:	cmp    esi,0xa
   10a0d:	je     10a70 <__cxa_finalize@plt+0xcc58>
   10a0f:	mov    DWORD PTR [rsp],esi
   10a12:	mov    rcx,rsp
   10a15:	mov    rsi,rax
   10a18:	mov    QWORD PTR [rsp+0x4],0x0
   10a21:	mov    QWORD PTR [rsp+0xc],0x0
   10a2a:	mov    QWORD PTR [rsp+0x14],0x0
   10a33:	mov    QWORD PTR [rsp+0x1c],0x0
   10a3c:	mov    QWORD PTR [rsp+0x24],0x0
   10a45:	mov    QWORD PTR [rsp+0x2c],0x0
   10a4e:	mov    DWORD PTR [rsp+0x34],0x0
   10a56:	call   10410 <__cxa_finalize@plt+0xc5f8>
   10a5b:	mov    rdx,QWORD PTR [rsp+0x38]
   10a60:	xor    rdx,QWORD PTR fs:0x28
   10a69:	jne    10a75 <__cxa_finalize@plt+0xcc5d>
   10a6b:	add    rsp,0x48
   10a6f:	ret    
   10a70:	call   3530 <abort@plt>
   10a75:	call   3760 <__stack_chk_fail@plt>
   10a7a:	nop    WORD PTR [rax+rax*1+0x0]
   10a80:	mov    rdx,rsi
   10a83:	mov    esi,edi
   10a85:	xor    edi,edi
   10a87:	jmp    10960 <__cxa_finalize@plt+0xcb48>
   10a8c:	nop    DWORD PTR [rax+0x0]
   10a90:	mov    rcx,rdx
   10a93:	mov    rdx,rsi
   10a96:	mov    esi,edi
   10a98:	xor    edi,edi
   10a9a:	jmp    109f0 <__cxa_finalize@plt+0xcbd8>
   10a9f:	nop
   10aa0:	sub    rsp,0x48
   10aa4:	mov    ecx,edx
   10aa6:	mov    rax,QWORD PTR fs:0x28
   10aaf:	mov    QWORD PTR [rsp+0x38],rax
   10ab4:	xor    eax,eax
   10ab6:	mov    rax,QWORD PTR [rip+0x211c33]        # 2226f0 <program_name@@Base+0x150>
   10abd:	mov    r8,rsp
   10ac0:	and    ecx,0x1f
   10ac3:	movdqa xmm0,XMMWORD PTR [rip+0x211bf5]        # 2226c0 <program_name@@Base+0x120>
   10acb:	mov    QWORD PTR [rsp+0x30],rax
   10ad0:	mov    eax,edx
   10ad2:	movaps XMMWORD PTR [rsp],xmm0
   10ad6:	shr    al,0x5
   10ad9:	movzx  eax,al
   10adc:	lea    r9,[r8+rax*4+0x8]
   10ae1:	movdqa xmm0,XMMWORD PTR [rip+0x211be7]        # 2226d0 <program_name@@Base+0x130>
   10ae9:	movaps XMMWORD PTR [rsp+0x10],xmm0
   10aee:	movdqa xmm0,XMMWORD PTR [rip+0x211bea]        # 2226e0 <program_name@@Base+0x140>
   10af6:	movaps XMMWORD PTR [rsp+0x20],xmm0
   10afb:	mov    edx,DWORD PTR [r9]
   10afe:	mov    eax,edx
   10b00:	shr    eax,cl
   10b02:	not    eax
   10b04:	and    eax,0x1
   10b07:	shl    eax,cl
   10b09:	mov    rcx,r8
   10b0c:	xor    eax,edx
   10b0e:	mov    rdx,rsi
   10b11:	mov    rsi,rdi
   10b14:	mov    DWORD PTR [r9],eax
   10b17:	xor    edi,edi
   10b19:	call   10410 <__cxa_finalize@plt+0xc5f8>
   10b1e:	mov    rsi,QWORD PTR [rsp+0x38]
   10b23:	xor    rsi,QWORD PTR fs:0x28
   10b2c:	jne    10b33 <__cxa_finalize@plt+0xcd1b>
   10b2e:	add    rsp,0x48
   10b32:	ret    
   10b33:	call   3760 <__stack_chk_fail@plt>
   10b38:	nop    DWORD PTR [rax+rax*1+0x0]
   10b40:	movsx  edx,sil
   10b44:	mov    rsi,0xffffffffffffffff
   10b4b:	jmp    10aa0 <__cxa_finalize@plt+0xcc88>
   10b50:	mov    edx,0x3a
   10b55:	mov    rsi,0xffffffffffffffff
   10b5c:	jmp    10aa0 <__cxa_finalize@plt+0xcc88>
   10b61:	nop    DWORD PTR [rax+rax*1+0x0]
   10b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10b70:	mov    edx,0x3a
   10b75:	jmp    10aa0 <__cxa_finalize@plt+0xcc88>
   10b7a:	nop    WORD PTR [rax+rax*1+0x0]
   10b80:	sub    rsp,0x48
   10b84:	mov    rax,rdx
   10b87:	mov    rdx,QWORD PTR fs:0x28
   10b90:	mov    QWORD PTR [rsp+0x38],rdx
   10b95:	xor    edx,edx
   10b97:	cmp    esi,0xa
   10b9a:	je     10c04 <__cxa_finalize@plt+0xcdec>
   10b9c:	mov    DWORD PTR [rsp],esi
   10b9f:	mov    rcx,rsp
   10ba2:	mov    rdx,0xffffffffffffffff
   10ba9:	mov    rsi,rax
   10bac:	mov    QWORD PTR [rsp+0x4],0x0
   10bb5:	mov    QWORD PTR [rsp+0xc],0x4000000
   10bbe:	mov    QWORD PTR [rsp+0x14],0x0
   10bc7:	mov    QWORD PTR [rsp+0x1c],0x0
   10bd0:	mov    QWORD PTR [rsp+0x24],0x0
   10bd9:	mov    QWORD PTR [rsp+0x2c],0x0
   10be2:	mov    DWORD PTR [rsp+0x34],0x0
   10bea:	call   10410 <__cxa_finalize@plt+0xc5f8>
   10bef:	mov    rcx,QWORD PTR [rsp+0x38]
   10bf4:	xor    rcx,QWORD PTR fs:0x28
   10bfd:	jne    10c09 <__cxa_finalize@plt+0xcdf1>
   10bff:	add    rsp,0x48
   10c03:	ret    
   10c04:	call   3530 <abort@plt>
   10c09:	call   3760 <__stack_chk_fail@plt>
   10c0e:	xchg   ax,ax
   10c10:	sub    rsp,0x48
   10c14:	mov    r9,rcx
   10c17:	mov    rcx,QWORD PTR [rip+0x211ad2]        # 2226f0 <program_name@@Base+0x150>
   10c1e:	movdqa xmm0,XMMWORD PTR [rip+0x211a9a]        # 2226c0 <program_name@@Base+0x120>
   10c26:	mov    rax,QWORD PTR fs:0x28
   10c2f:	mov    QWORD PTR [rsp+0x38],rax
   10c34:	xor    eax,eax
   10c36:	movaps XMMWORD PTR [rsp],xmm0
   10c3a:	test   rsi,rsi
   10c3d:	mov    QWORD PTR [rsp+0x30],rcx
   10c42:	mov    DWORD PTR [rsp],0xa
   10c49:	movdqa xmm0,XMMWORD PTR [rip+0x211a7f]        # 2226d0 <program_name@@Base+0x130>
   10c51:	movaps XMMWORD PTR [rsp+0x10],xmm0
   10c56:	movdqa xmm0,XMMWORD PTR [rip+0x211a82]        # 2226e0 <program_name@@Base+0x140>
   10c5e:	movaps XMMWORD PTR [rsp+0x20],xmm0
   10c63:	je     10c97 <__cxa_finalize@plt+0xce7f>
   10c65:	test   rdx,rdx
   10c68:	je     10c97 <__cxa_finalize@plt+0xce7f>
   10c6a:	mov    QWORD PTR [rsp+0x28],rsi
   10c6f:	mov    QWORD PTR [rsp+0x30],rdx
   10c74:	mov    rcx,rsp
   10c77:	mov    rdx,r8
   10c7a:	mov    rsi,r9
   10c7d:	call   10410 <__cxa_finalize@plt+0xc5f8>
   10c82:	mov    rdi,QWORD PTR [rsp+0x38]
   10c87:	xor    rdi,QWORD PTR fs:0x28
   10c90:	jne    10c9c <__cxa_finalize@plt+0xce84>
   10c92:	add    rsp,0x48
   10c96:	ret    
   10c97:	call   3530 <abort@plt>
   10c9c:	call   3760 <__stack_chk_fail@plt>
   10ca1:	nop    DWORD PTR [rax+rax*1+0x0]
   10ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10cb0:	mov    r8,0xffffffffffffffff
   10cb7:	jmp    10c10 <__cxa_finalize@plt+0xcdf8>
   10cbc:	nop    DWORD PTR [rax+0x0]
   10cc0:	mov    rcx,rdx
   10cc3:	mov    r8,0xffffffffffffffff
   10cca:	mov    rdx,rsi
   10ccd:	mov    rsi,rdi
   10cd0:	xor    edi,edi
   10cd2:	jmp    10c10 <__cxa_finalize@plt+0xcdf8>
   10cd7:	nop    WORD PTR [rax+rax*1+0x0]
   10ce0:	mov    r8,rcx
   10ce3:	mov    rcx,rdx
   10ce6:	mov    rdx,rsi
   10ce9:	mov    rsi,rdi
   10cec:	xor    edi,edi
   10cee:	jmp    10c10 <__cxa_finalize@plt+0xcdf8>
   10cf3:	nop    DWORD PTR [rax]
   10cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10d00:	lea    rcx,[rip+0x211339]        # 222040 <quote_quoting_options@@Base>
   10d07:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10d0c:	nop    DWORD PTR [rax+0x0]
   10d10:	lea    rcx,[rip+0x211329]        # 222040 <quote_quoting_options@@Base>
   10d17:	mov    rdx,rsi
   10d1a:	mov    rsi,rdi
   10d1d:	xor    edi,edi
   10d1f:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10d24:	xchg   ax,ax
   10d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10d30:	lea    rcx,[rip+0x211309]        # 222040 <quote_quoting_options@@Base>
   10d37:	mov    rdx,0xffffffffffffffff
   10d3e:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10d43:	nop    DWORD PTR [rax]
   10d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10d50:	lea    rcx,[rip+0x2112e9]        # 222040 <quote_quoting_options@@Base>
   10d57:	mov    rsi,rdi
   10d5a:	mov    rdx,0xffffffffffffffff
   10d61:	xor    edi,edi
   10d63:	jmp    10410 <__cxa_finalize@plt+0xc5f8>
   10d68:	nop    DWORD PTR [rax+rax*1+0x0]
   10d70:	push   r15
   10d72:	push   r14
   10d74:	mov    r9d,r8d
   10d77:	push   r13
   10d79:	push   r12
   10d7b:	mov    r14d,edx
   10d7e:	push   rbp
   10d7f:	push   rbx
   10d80:	mov    r12,rsi
   10d83:	mov    r13,rcx
   10d86:	mov    ebp,r8d
   10d89:	mov    r8,rcx
   10d8c:	sub    rsp,0x148
   10d93:	mov    ecx,edx
   10d95:	mov    rdx,rsi
   10d98:	mov    rax,QWORD PTR fs:0x28
   10da1:	mov    QWORD PTR [rsp+0x138],rax
   10da9:	xor    eax,eax
   10dab:	mov    esi,edi
   10dad:	mov    DWORD PTR [rsp+0x4],edi
   10db1:	mov    edi,0x13c
   10db6:	call   3a00 <syscall@plt>
   10dbb:	mov    rbx,rax
   10dbe:	mov    r15d,eax
   10dc1:	call   3540 <__errno_location@plt>
   10dc6:	test   ebx,ebx
   10dc8:	js     10e00 <__cxa_finalize@plt+0xcfe8>
   10dca:	mov    rdx,QWORD PTR [rsp+0x138]
   10dd2:	xor    rdx,QWORD PTR fs:0x28
   10ddb:	mov    eax,r15d
   10dde:	jne    10fd5 <__cxa_finalize@plt+0xd1bd>
   10de4:	add    rsp,0x148
   10deb:	pop    rbx
   10dec:	pop    rbp
   10ded:	pop    r12
   10def:	pop    r13
   10df1:	pop    r14
   10df3:	pop    r15
   10df5:	ret    
   10df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10e00:	mov    r9,rax
   10e03:	mov    eax,DWORD PTR [rax]
   10e05:	lea    ecx,[rax-0x16]
   10e08:	and    ecx,0xffffffef
   10e0b:	setne  bl
   10e0e:	cmp    eax,0x5f
   10e11:	setne  al
   10e14:	and    bl,al
   10e16:	jne    10dca <__cxa_finalize@plt+0xcfb2>
   10e18:	test   ebp,ebp
   10e1a:	jne    10e70 <__cxa_finalize@plt+0xd058>
   10e1c:	mov    rdi,r12
   10e1f:	mov    QWORD PTR [rsp+0x8],r9
   10e24:	call   3720 <strlen@plt>
   10e29:	mov    rdi,r13
   10e2c:	mov    rbp,rax
   10e2f:	call   3720 <strlen@plt>
   10e34:	test   rbp,rbp
   10e37:	je     10e53 <__cxa_finalize@plt+0xd03b>
   10e39:	test   rax,rax
   10e3c:	mov    r9,QWORD PTR [rsp+0x8]
   10e41:	je     10e53 <__cxa_finalize@plt+0xd03b>
   10e43:	cmp    BYTE PTR [r12+rbp*1-0x1],0x2f
   10e49:	je     10e90 <__cxa_finalize@plt+0xd078>
   10e4b:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
   10e51:	je     10e90 <__cxa_finalize@plt+0xd078>
   10e53:	mov    edi,DWORD PTR [rsp+0x4]
   10e57:	mov    rcx,r13
   10e5a:	mov    edx,r14d
   10e5d:	mov    rsi,r12
   10e60:	call   3d10 <renameat@plt>
   10e65:	mov    r15d,eax
   10e68:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10e6d:	nop    DWORD PTR [rax]
   10e70:	and    ebp,0xfffffffe
   10e73:	je     10ee0 <__cxa_finalize@plt+0xd0c8>
   10e75:	mov    DWORD PTR [r9],0x5f
   10e7c:	mov    r15d,0xffffffff
   10e82:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10e87:	nop    WORD PTR [rax+rax*1+0x0]
   10e90:	mov    esi,DWORD PTR [rsp+0x4]
   10e94:	lea    rcx,[rsp+0x10]
   10e99:	mov    r8d,0x100
   10e9f:	mov    rdx,r12
   10ea2:	mov    edi,0x1
   10ea7:	mov    QWORD PTR [rsp+0x8],r9
   10eac:	call   37c0 <__fxstatat@plt>
   10eb1:	test   eax,eax
   10eb3:	jne    10f19 <__cxa_finalize@plt+0xd101>
   10eb5:	test   bl,bl
   10eb7:	mov    r9,QWORD PTR [rsp+0x8]
   10ebc:	je     10f3a <__cxa_finalize@plt+0xd122>
   10ebe:	mov    eax,DWORD PTR [rsp+0x28]
   10ec2:	and    eax,0xf000
   10ec7:	cmp    eax,0x4000
   10ecc:	je     10e53 <__cxa_finalize@plt+0xd03b>
   10ece:	mov    DWORD PTR [r9],0x2
   10ed5:	mov    r15d,0xffffffff
   10edb:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10ee0:	lea    rcx,[rsp+0xa0]
   10ee8:	mov    r8d,0x100
   10eee:	mov    rdx,r13
   10ef1:	mov    esi,r14d
   10ef4:	mov    edi,0x1
   10ef9:	mov    QWORD PTR [rsp+0x8],r9
   10efe:	call   37c0 <__fxstatat@plt>
   10f03:	test   eax,eax
   10f05:	mov    r9,QWORD PTR [rsp+0x8]
   10f0a:	je     10f28 <__cxa_finalize@plt+0xd110>
   10f0c:	mov    eax,DWORD PTR [r9]
   10f0f:	cmp    eax,0x4b
   10f12:	je     10f28 <__cxa_finalize@plt+0xd110>
   10f14:	cmp    eax,0x2
   10f17:	je     10f88 <__cxa_finalize@plt+0xd170>
   10f19:	mov    r15d,0xffffffff
   10f1f:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10f24:	nop    DWORD PTR [rax+0x0]
   10f28:	mov    DWORD PTR [r9],0x11
   10f2f:	mov    r15d,0xffffffff
   10f35:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10f3a:	lea    rcx,[rsp+0xa0]
   10f42:	mov    r8d,0x100
   10f48:	mov    rdx,r13
   10f4b:	mov    esi,r14d
   10f4e:	mov    edi,0x1
   10f53:	mov    QWORD PTR [rsp+0x8],r9
   10f58:	call   37c0 <__fxstatat@plt>
   10f5d:	test   eax,eax
   10f5f:	mov    r9,QWORD PTR [rsp+0x8]
   10f64:	je     10f92 <__cxa_finalize@plt+0xd17a>
   10f66:	cmp    DWORD PTR [r9],0x2
   10f6a:	jne    10f19 <__cxa_finalize@plt+0xd101>
   10f6c:	mov    eax,DWORD PTR [rsp+0x28]
   10f70:	and    eax,0xf000
   10f75:	cmp    eax,0x4000
   10f7a:	jne    10f19 <__cxa_finalize@plt+0xd101>
   10f7c:	jmp    10e53 <__cxa_finalize@plt+0xd03b>
   10f81:	nop    DWORD PTR [rax+0x0]
   10f88:	mov    ebx,0x1
   10f8d:	jmp    10e1c <__cxa_finalize@plt+0xd004>
   10f92:	mov    eax,DWORD PTR [rsp+0xb8]
   10f99:	and    eax,0xf000
   10f9e:	cmp    eax,0x4000
   10fa3:	je     10fb1 <__cxa_finalize@plt+0xd199>
   10fa5:	mov    DWORD PTR [r9],0x14
   10fac:	jmp    10f19 <__cxa_finalize@plt+0xd101>
   10fb1:	mov    eax,DWORD PTR [rsp+0x28]
   10fb5:	and    eax,0xf000
   10fba:	cmp    eax,0x4000
   10fbf:	je     10e53 <__cxa_finalize@plt+0xd03b>
   10fc5:	mov    DWORD PTR [r9],0x15
   10fcc:	or     r15d,0xffffffff
   10fd0:	jmp    10dca <__cxa_finalize@plt+0xcfb2>
   10fd5:	call   3760 <__stack_chk_fail@plt>
   10fda:	nop    WORD PTR [rax+rax*1+0x0]
   10fe0:	push   r13
   10fe2:	push   r12
   10fe4:	mov    r13d,edi
   10fe7:	push   rbp
   10fe8:	push   rbx
   10fe9:	mov    r12,rsi
   10fec:	mov    rbx,rdx
   10fef:	sub    rsp,0x8
   10ff3:	nop    DWORD PTR [rax+rax*1+0x0]
   10ff8:	mov    rdx,rbx
   10ffb:	mov    rsi,r12
   10ffe:	mov    edi,r13d
   11001:	call   3650 <write@plt>
   11006:	test   rax,rax
   11009:	mov    rbp,rax
   1100c:	jns    11030 <__cxa_finalize@plt+0xd218>
   1100e:	call   3540 <__errno_location@plt>
   11013:	mov    eax,DWORD PTR [rax]
   11015:	cmp    eax,0x4
   11018:	je     10ff8 <__cxa_finalize@plt+0xd1e0>
   1101a:	cmp    eax,0x16
   1101d:	jne    11030 <__cxa_finalize@plt+0xd218>
   1101f:	cmp    rbx,0x7fffe000
   11026:	jbe    11030 <__cxa_finalize@plt+0xd218>
   11028:	mov    ebx,0x7fffe000
   1102d:	jmp    10ff8 <__cxa_finalize@plt+0xd1e0>
   1102f:	nop
   11030:	add    rsp,0x8
   11034:	mov    rax,rbp
   11037:	pop    rbx
   11038:	pop    rbp
   11039:	pop    r12
   1103b:	pop    r13
   1103d:	ret    
   1103e:	xchg   ax,ax
   11040:	push   r15
   11042:	push   r14
   11044:	push   r13
   11046:	push   r12
   11048:	mov    r12,rdi
   1104b:	push   rbp
   1104c:	push   rbx
   1104d:	mov    rbp,rsi
   11050:	xor    ebx,ebx
   11052:	sub    rsp,0x138
   11059:	mov    rax,QWORD PTR fs:0x28
   11062:	mov    QWORD PTR [rsp+0x128],rax
   1106a:	xor    eax,eax
   1106c:	call   d600 <__cxa_finalize@plt+0x97e8>
   11071:	mov    rdi,rbp
   11074:	mov    r13,rax
   11077:	call   d600 <__cxa_finalize@plt+0x97e8>
   1107c:	mov    rdi,r13
   1107f:	mov    r14,rax
   11082:	call   d660 <__cxa_finalize@plt+0x9848>
   11087:	mov    rdi,r14
   1108a:	mov    r15,rax
   1108d:	call   d660 <__cxa_finalize@plt+0x9848>
   11092:	cmp    r15,rax
   11095:	je     110c8 <__cxa_finalize@plt+0xd2b0>
   11097:	mov    rcx,QWORD PTR [rsp+0x128]
   1109f:	xor    rcx,QWORD PTR fs:0x28
   110a8:	mov    eax,ebx
   110aa:	jne    111a2 <__cxa_finalize@plt+0xd38a>
   110b0:	add    rsp,0x138
   110b7:	pop    rbx
   110b8:	pop    rbp
   110b9:	pop    r12
   110bb:	pop    r13
   110bd:	pop    r14
   110bf:	pop    r15
   110c1:	ret    
   110c2:	nop    WORD PTR [rax+rax*1+0x0]
   110c8:	mov    rdx,r15
   110cb:	mov    rsi,r14
   110ce:	mov    rdi,r13
   110d1:	call   3930 <memcmp@plt>
   110d6:	test   eax,eax
   110d8:	jne    11097 <__cxa_finalize@plt+0xd27f>
   110da:	mov    rdi,r12
   110dd:	call   d520 <__cxa_finalize@plt+0x9708>
   110e2:	mov    rdi,rbp
   110e5:	mov    r12,rax
   110e8:	call   d520 <__cxa_finalize@plt+0x9708>
   110ed:	mov    rdx,rsp
   110f0:	mov    rsi,r12
   110f3:	mov    edi,0x1
   110f8:	mov    rbp,rax
   110fb:	call   3a90 <__xstat@plt>
   11100:	test   eax,eax
   11102:	jne    11180 <__cxa_finalize@plt+0xd368>
   11104:	lea    rdx,[rsp+0x90]
   1110c:	mov    rsi,rbp
   1110f:	mov    edi,0x1
   11114:	call   3a90 <__xstat@plt>
   11119:	test   eax,eax
   1111b:	jne    11158 <__cxa_finalize@plt+0xd340>
   1111d:	xor    ebx,ebx
   1111f:	mov    rax,QWORD PTR [rsp+0x98]
   11127:	cmp    QWORD PTR [rsp+0x8],rax
   1112c:	jne    1113d <__cxa_finalize@plt+0xd325>
   1112e:	mov    rax,QWORD PTR [rsp+0x90]
   11136:	cmp    QWORD PTR [rsp],rax
   1113a:	sete   bl
   1113d:	mov    rdi,r12
   11140:	call   3e10 <free@plt>
   11145:	mov    rdi,rbp
   11148:	call   3e10 <free@plt>
   1114d:	jmp    11097 <__cxa_finalize@plt+0xd27f>
   11152:	nop    WORD PTR [rax+rax*1+0x0]
   11158:	call   3540 <__errno_location@plt>
   1115d:	mov    esi,DWORD PTR [rax]
   1115f:	lea    rdx,[rip+0xb0b0]        # 1c216 <_IO_stdin_used@@Base+0x2876>
   11166:	mov    rcx,rbp
   11169:	mov    edi,0x1
   1116e:	xor    eax,eax
   11170:	call   3c20 <error@plt>
   11175:	jmp    1111d <__cxa_finalize@plt+0xd305>
   11177:	nop    WORD PTR [rax+rax*1+0x0]
   11180:	call   3540 <__errno_location@plt>
   11185:	mov    esi,DWORD PTR [rax]
   11187:	lea    rdx,[rip+0xb088]        # 1c216 <_IO_stdin_used@@Base+0x2876>
   1118e:	mov    rcx,r12
   11191:	mov    edi,0x1
   11196:	xor    eax,eax
   11198:	call   3c20 <error@plt>
   1119d:	jmp    11104 <__cxa_finalize@plt+0xd2ec>
   111a2:	call   3760 <__stack_chk_fail@plt>
   111a7:	nop    WORD PTR [rax+rax*1+0x0]
   111b0:	mov    rax,QWORD PTR [rsi+0x8]
   111b4:	cmp    QWORD PTR [rdi+0x8],rax
   111b8:	jb     111c8 <__cxa_finalize@plt+0xd3b0>
   111ba:	seta   al
   111bd:	movzx  eax,al
   111c0:	ret    
   111c1:	nop    DWORD PTR [rax+0x0]
   111c8:	mov    eax,0xffffffff
   111cd:	ret    
   111ce:	xchg   ax,ax
   111d0:	mov    rsi,QWORD PTR [rsi]
   111d3:	mov    rdi,QWORD PTR [rdi]
   111d6:	jmp    39c0 <strcmp@plt>
   111db:	nop    DWORD PTR [rax+rax*1+0x0]
   111e0:	push   r15
   111e2:	lea    rax,[rip+0x2106f7]        # 2218e0 <quoting_style_args@@Base+0x60>
   111e9:	push   r14
   111eb:	push   r13
   111ed:	push   r12
   111ef:	mov    esi,esi
   111f1:	push   rbp
   111f2:	push   rbx
   111f3:	sub    rsp,0x48
   111f7:	mov    rax,QWORD PTR [rax+rsi*8]
   111fb:	test   rdi,rdi
   111fe:	mov    QWORD PTR [rsp+0x8],rax
   11203:	je     1150d <__cxa_finalize@plt+0xd6f5>
   11209:	mov    rbx,rdi
   1120c:	xor    r14d,r14d
   1120f:	xor    r12d,r12d
   11212:	call   3540 <__errno_location@plt>
   11217:	xor    r13d,r13d
   1121a:	mov    rbp,rax
   1121d:	mov    QWORD PTR [rsp+0x28],0x0
   11226:	mov    QWORD PTR [rsp+0x10],0x0
   1122f:	mov    QWORD PTR [rsp+0x20],0x0
   11238:	jmp    11244 <__cxa_finalize@plt+0xd42c>
   1123a:	nop    WORD PTR [rax+rax*1+0x0]
   11240:	test   al,al
   11242:	jne    11279 <__cxa_finalize@plt+0xd461>
   11244:	mov    DWORD PTR [rbp+0x0],0x0
   1124b:	mov    rdi,rbx
   1124e:	call   3aa0 <readdir@plt>
   11253:	test   rax,rax
   11256:	mov    rcx,rax
   11259:	je     11300 <__cxa_finalize@plt+0xd4e8>
   1125f:	lea    r15,[rax+0x13]
   11263:	movzx  eax,BYTE PTR [rax+0x13]
   11267:	cmp    al,0x2e
   11269:	jne    11240 <__cxa_finalize@plt+0xd428>
   1126b:	cmp    BYTE PTR [rcx+0x14],0x2e
   1126f:	je     112f0 <__cxa_finalize@plt+0xd4d8>
   11271:	movzx  eax,BYTE PTR [rcx+0x14]
   11275:	test   al,al
   11277:	je     11244 <__cxa_finalize@plt+0xd42c>
   11279:	mov    rdi,r15
   1127c:	mov    QWORD PTR [rsp+0x30],rcx
   11281:	call   3720 <strlen@plt>
   11286:	add    rax,0x1
   1128a:	cmp    QWORD PTR [rsp+0x8],0x0
   11290:	mov    QWORD PTR [rsp+0x18],rax
   11295:	je     113d8 <__cxa_finalize@plt+0xd5c0>
   1129b:	cmp    r12,QWORD PTR [rsp+0x28]
   112a0:	lea    rax,[r12+0x1]
   112a5:	mov    rcx,QWORD PTR [rsp+0x30]
   112aa:	mov    QWORD PTR [rsp+0x38],rax
   112af:	je     11461 <__cxa_finalize@plt+0xd649>
   112b5:	shl    r12,0x4
   112b9:	mov    rdi,r15
   112bc:	add    r12,QWORD PTR [rsp+0x10]
   112c1:	mov    QWORD PTR [rsp+0x30],rcx
   112c6:	call   132f0 <__cxa_finalize@plt+0xf4d8>
   112cb:	mov    rcx,QWORD PTR [rsp+0x30]
   112d0:	add    r14,QWORD PTR [rsp+0x18]
   112d5:	mov    QWORD PTR [r12],rax
   112d9:	mov    rax,QWORD PTR [rcx]
   112dc:	mov    QWORD PTR [r12+0x8],rax
   112e1:	mov    r12,QWORD PTR [rsp+0x38]
   112e6:	jmp    11244 <__cxa_finalize@plt+0xd42c>
   112eb:	nop    DWORD PTR [rax+rax*1+0x0]
   112f0:	movzx  eax,BYTE PTR [rcx+0x15]
   112f4:	jmp    11240 <__cxa_finalize@plt+0xd428>
   112f9:	nop    DWORD PTR [rax+0x0]
   11300:	mov    ebx,DWORD PTR [rbp+0x0]
   11303:	test   ebx,ebx
   11305:	jne    114f0 <__cxa_finalize@plt+0xd6d8>
   1130b:	cmp    QWORD PTR [rsp+0x8],0x0
   11311:	je     113c0 <__cxa_finalize@plt+0xd5a8>
   11317:	test   r12,r12
   1131a:	lea    rbx,[r14+0x1]
   1131e:	jne    11350 <__cxa_finalize@plt+0xd538>
   11320:	mov    rdi,rbx
   11323:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   11328:	mov    r13,rax
   1132b:	mov    rbx,rax
   1132e:	mov    rdi,QWORD PTR [rsp+0x10]
   11333:	call   3e10 <free@plt>
   11338:	mov    BYTE PTR [rbx],0x0
   1133b:	add    rsp,0x48
   1133f:	mov    rax,r13
   11342:	pop    rbx
   11343:	pop    rbp
   11344:	pop    r12
   11346:	pop    r13
   11348:	pop    r14
   1134a:	pop    r15
   1134c:	ret    
   1134d:	nop    DWORD PTR [rax]
   11350:	mov    r15,QWORD PTR [rsp+0x10]
   11355:	mov    rcx,QWORD PTR [rsp+0x8]
   1135a:	mov    rsi,r12
   1135d:	mov    edx,0x10
   11362:	shl    r12,0x4
   11366:	mov    rdi,r15
   11369:	mov    rbp,r15
   1136c:	add    r12,r15
   1136f:	call   3610 <qsort@plt>
   11374:	mov    rdi,rbx
   11377:	xor    ebx,ebx
   11379:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   1137e:	mov    r13,rax
   11381:	nop    DWORD PTR [rax+0x0]
   11388:	mov    rsi,QWORD PTR [rbp+0x0]
   1138c:	lea    r14,[r13+rbx*1+0x0]
   11391:	add    rbp,0x10
   11395:	mov    rdi,r14
   11398:	call   36e0 <stpcpy@plt>
   1139d:	mov    rdi,QWORD PTR [rbp-0x10]
   113a1:	sub    rax,r14
   113a4:	lea    rbx,[rbx+rax*1+0x1]
   113a9:	call   3e10 <free@plt>
   113ae:	cmp    r12,rbp
   113b1:	jne    11388 <__cxa_finalize@plt+0xd570>
   113b3:	add    rbx,r13
   113b6:	jmp    1132e <__cxa_finalize@plt+0xd516>
   113bb:	nop    DWORD PTR [rax+rax*1+0x0]
   113c0:	cmp    QWORD PTR [rsp+0x20],r14
   113c5:	je     114b3 <__cxa_finalize@plt+0xd69b>
   113cb:	lea    rbx,[r13+r14*1+0x0]
   113d0:	jmp    11338 <__cxa_finalize@plt+0xd520>
   113d5:	nop    DWORD PTR [rax]
   113d8:	mov    rsi,QWORD PTR [rsp+0x18]
   113dd:	mov    rax,QWORD PTR [rsp+0x20]
   113e2:	mov    rdx,rsi
   113e5:	sub    rax,r14
   113e8:	add    rdx,r14
   113eb:	mov    QWORD PTR [rsp+0x30],rdx
   113f0:	setb   dl
   113f3:	cmp    rax,rsi
   113f6:	movzx  edx,dl
   113f9:	ja     11445 <__cxa_finalize@plt+0xd62d>
   113fb:	test   rdx,rdx
   113fe:	jne    114e9 <__cxa_finalize@plt+0xd6d1>
   11404:	test   r13,r13
   11407:	mov    rdx,QWORD PTR [rsp+0x30]
   1140c:	je     114cf <__cxa_finalize@plt+0xd6b7>
   11412:	movabs rax,0x5555555555555553
   1141c:	cmp    rdx,rax
   1141f:	ja     114e9 <__cxa_finalize@plt+0xd6d1>
   11425:	mov    rax,rdx
   11428:	shr    rax,1
   1142b:	lea    rax,[rdx+rax*1+0x1]
   11430:	mov    QWORD PTR [rsp+0x20],rax
   11435:	mov    rsi,QWORD PTR [rsp+0x20]
   1143a:	mov    rdi,r13
   1143d:	call   13120 <__cxa_finalize@plt+0xf308>
   11442:	mov    r13,rax
   11445:	mov    rdx,QWORD PTR [rsp+0x18]
   1144a:	lea    rdi,[r13+r14*1+0x0]
   1144f:	mov    rsi,r15
   11452:	call   3a40 <memcpy@plt>
   11457:	mov    r14,QWORD PTR [rsp+0x30]
   1145c:	jmp    11244 <__cxa_finalize@plt+0xd42c>
   11461:	cmp    QWORD PTR [rsp+0x10],0x0
   11467:	je     11515 <__cxa_finalize@plt+0xd6fd>
   1146d:	movabs rax,0x555555555555554
   11477:	cmp    r12,rax
   1147a:	ja     114e9 <__cxa_finalize@plt+0xd6d1>
   1147c:	mov    rax,r12
   1147f:	shr    rax,1
   11482:	add    rax,QWORD PTR [rsp+0x38]
   11487:	mov    QWORD PTR [rsp+0x28],rax
   1148c:	mov    rsi,QWORD PTR [rsp+0x28]
   11491:	mov    rdi,QWORD PTR [rsp+0x10]
   11496:	mov    QWORD PTR [rsp+0x30],rcx
   1149b:	shl    rsi,0x4
   1149f:	call   13120 <__cxa_finalize@plt+0xf308>
   114a4:	mov    rcx,QWORD PTR [rsp+0x30]
   114a9:	mov    QWORD PTR [rsp+0x10],rax
   114ae:	jmp    112b5 <__cxa_finalize@plt+0xd49d>
   114b3:	mov    rbx,QWORD PTR [rsp+0x20]
   114b8:	mov    rdi,r13
   114bb:	lea    rsi,[rbx+0x1]
   114bf:	call   13120 <__cxa_finalize@plt+0xf308>
   114c4:	mov    r13,rax
   114c7:	add    rbx,rax
   114ca:	jmp    11338 <__cxa_finalize@plt+0xd520>
   114cf:	test   rdx,rdx
   114d2:	mov    eax,0x80
   114d7:	cmovne rax,rdx
   114db:	test   rax,rax
   114de:	mov    QWORD PTR [rsp+0x20],rax
   114e3:	jns    11435 <__cxa_finalize@plt+0xd61d>
   114e9:	call   13310 <__cxa_finalize@plt+0xf4f8>
   114ee:	xchg   ax,ax
   114f0:	mov    rdi,QWORD PTR [rsp+0x10]
   114f5:	call   3e10 <free@plt>
   114fa:	mov    rdi,r13
   114fd:	xor    r13d,r13d
   11500:	call   3e10 <free@plt>
   11505:	mov    DWORD PTR [rbp+0x0],ebx
   11508:	jmp    1133b <__cxa_finalize@plt+0xd523>
   1150d:	xor    r13d,r13d
   11510:	jmp    1133b <__cxa_finalize@plt+0xd523>
   11515:	test   r12,r12
   11518:	mov    eax,0x8
   1151d:	mov    edx,0x10
   11522:	cmovne rax,r12
   11526:	xor    esi,esi
   11528:	mov    rdi,rax
   1152b:	mov    QWORD PTR [rsp+0x28],rax
   11530:	mov    rax,rdx
   11533:	mul    rdi
   11536:	jo     11551 <__cxa_finalize@plt+0xd739>
   11538:	test   rax,rax
   1153b:	js     114e9 <__cxa_finalize@plt+0xd6d1>
   1153d:	test   rsi,rsi
   11540:	jne    114e9 <__cxa_finalize@plt+0xd6d1>
   11542:	lea    rax,[r12+0x1]
   11547:	mov    QWORD PTR [rsp+0x38],rax
   1154c:	jmp    1148c <__cxa_finalize@plt+0xd674>
   11551:	mov    esi,0x1
   11556:	jmp    11538 <__cxa_finalize@plt+0xd720>
   11558:	nop    DWORD PTR [rax+rax*1+0x0]
   11560:	push   r12
   11562:	push   rbp
   11563:	mov    ebp,esi
   11565:	push   rbx
   11566:	call   d480 <__cxa_finalize@plt+0x9668>
   1156b:	test   rax,rax
   1156e:	je     11598 <__cxa_finalize@plt+0xd780>
   11570:	mov    esi,ebp
   11572:	mov    rbx,rax
   11575:	mov    rdi,rax
   11578:	call   111e0 <__cxa_finalize@plt+0xd3c8>
   1157d:	mov    rdi,rbx
   11580:	mov    rbp,rax
   11583:	call   38e0 <closedir@plt>
   11588:	test   eax,eax
   1158a:	jne    115a0 <__cxa_finalize@plt+0xd788>
   1158c:	mov    rax,rbp
   1158f:	pop    rbx
   11590:	pop    rbp
   11591:	pop    r12
   11593:	ret    
   11594:	nop    DWORD PTR [rax+0x0]
   11598:	xor    ebp,ebp
   1159a:	jmp    1158c <__cxa_finalize@plt+0xd774>
   1159c:	nop    DWORD PTR [rax+0x0]
   115a0:	call   3540 <__errno_location@plt>
   115a5:	mov    r12d,DWORD PTR [rax]
   115a8:	mov    rbx,rax
   115ab:	mov    rdi,rbp
   115ae:	call   3e10 <free@plt>
   115b3:	xor    ebp,ebp
   115b5:	mov    DWORD PTR [rbx],r12d
   115b8:	jmp    1158c <__cxa_finalize@plt+0xd774>
   115ba:	nop    WORD PTR [rax+rax*1+0x0]
   115c0:	push   rbx
   115c1:	mov    rsi,rdi
   115c4:	mov    edi,0x1
   115c9:	sub    rsp,0xa0
   115d0:	mov    rdx,rsp
   115d3:	mov    rax,QWORD PTR fs:0x28
   115dc:	mov    QWORD PTR [rsp+0x98],rax
   115e4:	xor    eax,eax
   115e6:	call   3740 <__lxstat@plt>
   115eb:	mov    ebx,eax
   115ed:	call   3540 <__errno_location@plt>
   115f2:	test   ebx,ebx
   115f4:	je     11610 <__cxa_finalize@plt+0xd7f8>
   115f6:	mov    edx,DWORD PTR [rax]
   115f8:	cmp    edx,0x4b
   115fb:	je     11610 <__cxa_finalize@plt+0xd7f8>
   115fd:	xor    eax,eax
   115ff:	cmp    edx,0x2
   11602:	setne  al
   11605:	neg    eax
   11607:	jmp    1161b <__cxa_finalize@plt+0xd803>
   11609:	nop    DWORD PTR [rax+0x0]
   11610:	mov    DWORD PTR [rax],0x11
   11616:	mov    eax,0xffffffff
   1161b:	mov    rcx,QWORD PTR [rsp+0x98]
   11623:	xor    rcx,QWORD PTR fs:0x28
   1162c:	jne    11637 <__cxa_finalize@plt+0xd81f>
   1162e:	add    rsp,0xa0
   11635:	pop    rbx
   11636:	ret    
   11637:	call   3760 <__stack_chk_fail@plt>
   1163c:	nop    DWORD PTR [rax+0x0]
   11640:	mov    esi,0x1c0
   11645:	jmp    35e0 <mkdir@plt>
   1164a:	nop    WORD PTR [rax+rax*1+0x0]
   11650:	mov    esi,DWORD PTR [rsi]
   11652:	mov    edx,0x180
   11657:	xor    eax,eax
   11659:	and    sil,0x3c
   1165d:	or     sil,0xc2
   11661:	jmp    3c60 <open@plt>
   11666:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11670:	push   r15
   11672:	push   r14
   11674:	mov    r15,rdi
   11677:	push   r13
   11679:	push   r12
   1167b:	mov    r14,r8
   1167e:	push   rbp
   1167f:	push   rbx
   11680:	mov    ebp,esi
   11682:	sub    rsp,0x38
   11686:	mov    QWORD PTR [rsp+0x18],rdx
   1168b:	mov    QWORD PTR [rsp],rdi
   1168f:	mov    QWORD PTR [rsp+0x20],rcx
   11694:	call   3540 <__errno_location@plt>
   11699:	mov    QWORD PTR [rsp+0x8],rax
   1169e:	mov    eax,DWORD PTR [rax]
   116a0:	mov    rdi,r15
   116a3:	mov    DWORD PTR [rsp+0x2c],eax
   116a7:	call   3720 <strlen@plt>
   116ac:	movsxd rsi,ebp
   116af:	lea    rdx,[rsi+r14*1]
   116b3:	cmp    rdx,rax
   116b6:	ja     117cb <__cxa_finalize@plt+0xd9b3>
   116bc:	sub    rax,r14
   116bf:	mov    rbx,rax
   116c2:	sub    rbx,rsi
   116c5:	lea    rsi,[rip+0xab62]        # 1c22e <_IO_stdin_used@@Base+0x288e>
   116cc:	lea    rax,[r15+rbx*1]
   116d0:	mov    rdi,rax
   116d3:	mov    QWORD PTR [rsp+0x10],rax
   116d8:	call   38d0 <strspn@plt>
   116dd:	cmp    r14,rax
   116e0:	ja     117cb <__cxa_finalize@plt+0xd9b3>
   116e6:	xor    edi,edi
   116e8:	mov    rsi,r14
   116eb:	call   16b00 <fts_children@@Base+0xf90>
   116f0:	test   rax,rax
   116f3:	mov    rbp,rax
   116f6:	je     117dd <__cxa_finalize@plt+0xd9c5>
   116fc:	mov    rax,QWORD PTR [rsp]
   11700:	lea    r12,[rip+0xb1f9]        # 1c900 <quoting_style_vals@@Base+0x80>
   11707:	mov    r13d,0x3a2f8
   1170d:	add    rax,r14
   11710:	add    rbx,rax
   11713:	nop    DWORD PTR [rax+rax*1+0x0]
   11718:	test   r14,r14
   1171b:	mov    r15,QWORD PTR [rsp+0x10]
   11720:	je     11747 <__cxa_finalize@plt+0xd92f>
   11722:	nop    WORD PTR [rax+rax*1+0x0]
   11728:	mov    esi,0x3d
   1172d:	mov    rdi,rbp
   11730:	add    r15,0x1
   11734:	call   16b50 <fts_children@@Base+0xfe0>
   11739:	movzx  eax,BYTE PTR [r12+rax*1]
   1173e:	mov    BYTE PTR [r15-0x1],al
   11742:	cmp    r15,rbx
   11745:	jne    11728 <__cxa_finalize@plt+0xd910>
   11747:	mov    rsi,QWORD PTR [rsp+0x18]
   1174c:	mov    rdi,QWORD PTR [rsp]
   11750:	mov    rax,QWORD PTR [rsp+0x20]
   11755:	call   rax
   11757:	test   eax,eax
   11759:	mov    edx,eax
   1175b:	jns    11789 <__cxa_finalize@plt+0xd971>
   1175d:	mov    rax,QWORD PTR [rsp+0x8]
   11762:	mov    ecx,DWORD PTR [rax]
   11764:	cmp    ecx,0x11
   11767:	jne    117c4 <__cxa_finalize@plt+0xd9ac>
   11769:	sub    r13d,0x1
   1176d:	jne    11718 <__cxa_finalize@plt+0xd900>
   1176f:	mov    rdi,rbp
   11772:	call   16c90 <fts_children@@Base+0x1120>
   11777:	mov    rax,QWORD PTR [rsp+0x8]
   1177c:	mov    edx,0xffffffff
   11781:	mov    DWORD PTR [rax],0x11
   11787:	jmp    117b3 <__cxa_finalize@plt+0xd99b>
   11789:	mov    rcx,QWORD PTR [rsp+0x8]
   1178e:	mov    eax,DWORD PTR [rsp+0x2c]
   11792:	mov    DWORD PTR [rcx],eax
   11794:	mov    ecx,eax
   11796:	mov    rdi,rbp
   11799:	mov    DWORD PTR [rsp+0x10],edx
   1179d:	mov    DWORD PTR [rsp],ecx
   117a0:	call   16c90 <fts_children@@Base+0x1120>
   117a5:	mov    rax,QWORD PTR [rsp+0x8]
   117aa:	mov    ecx,DWORD PTR [rsp]
   117ad:	mov    edx,DWORD PTR [rsp+0x10]
   117b1:	mov    DWORD PTR [rax],ecx
   117b3:	add    rsp,0x38
   117b7:	mov    eax,edx
   117b9:	pop    rbx
   117ba:	pop    rbp
   117bb:	pop    r12
   117bd:	pop    r13
   117bf:	pop    r14
   117c1:	pop    r15
   117c3:	ret    
   117c4:	mov    edx,0xffffffff
   117c9:	jmp    11796 <__cxa_finalize@plt+0xd97e>
   117cb:	mov    rax,QWORD PTR [rsp+0x8]
   117d0:	mov    edx,0xffffffff
   117d5:	mov    DWORD PTR [rax],0x16
   117db:	jmp    117b3 <__cxa_finalize@plt+0xd99b>
   117dd:	mov    edx,0xffffffff
   117e2:	jmp    117b3 <__cxa_finalize@plt+0xd99b>
   117e4:	xchg   ax,ax
   117e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   117f0:	sub    rsp,0x18
   117f4:	cmp    ecx,0x1
   117f7:	mov    DWORD PTR [rsp+0xc],edx
   117fb:	je     11860 <__cxa_finalize@plt+0xda48>
   117fd:	cmp    ecx,0x2
   11800:	je     11828 <__cxa_finalize@plt+0xda10>
   11802:	test   ecx,ecx
   11804:	je     11840 <__cxa_finalize@plt+0xda28>
   11806:	lea    rcx,[rip+0xb0d3]        # 1c8e0 <quoting_style_vals@@Base+0x60>
   1180d:	lea    rsi,[rip+0xb094]        # 1c8a8 <quoting_style_vals@@Base+0x28>
   11814:	lea    rdi,[rip+0xb09d]        # 1c8b8 <quoting_style_vals@@Base+0x38>
   1181b:	mov    edx,0x147
   11820:	call   3830 <__assert_fail@plt>
   11825:	nop    DWORD PTR [rax]
   11828:	lea    rdx,[rsp+0xc]
   1182d:	lea    rcx,[rip+0xfffffffffffffd8c]        # 115c0 <__cxa_finalize@plt+0xd7a8>
   11834:	call   11670 <__cxa_finalize@plt+0xd858>
   11839:	add    rsp,0x18
   1183d:	ret    
   1183e:	xchg   ax,ax
   11840:	lea    rdx,[rsp+0xc]
   11845:	lea    rcx,[rip+0xfffffffffffffe04]        # 11650 <__cxa_finalize@plt+0xd838>
   1184c:	call   11670 <__cxa_finalize@plt+0xd858>
   11851:	add    rsp,0x18
   11855:	ret    
   11856:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11860:	lea    rdx,[rsp+0xc]
   11865:	lea    rcx,[rip+0xfffffffffffffdd4]        # 11640 <__cxa_finalize@plt+0xd828>
   1186c:	call   11670 <__cxa_finalize@plt+0xd858>
   11871:	add    rsp,0x18
   11875:	ret    
   11876:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11880:	mov    r8d,0x6
   11886:	jmp    117f0 <__cxa_finalize@plt+0xd9d8>
   1188b:	nop    DWORD PTR [rax+rax*1+0x0]
   11890:	mov    r8d,0x6
   11896:	jmp    11670 <__cxa_finalize@plt+0xd858>
   1189b:	nop    DWORD PTR [rax+rax*1+0x0]
   118a0:	push   r13
   118a2:	push   r12
   118a4:	push   rbp
   118a5:	push   rbx
   118a6:	mov    ebx,edi
   118a8:	sub    rsp,0x8
   118ac:	cmp    edi,0x2
   118af:	ja     118d2 <__cxa_finalize@plt+0xdaba>
   118b1:	call   17760 <fts_children@@Base+0x1bf0>
   118b6:	mov    r12d,eax
   118b9:	call   3540 <__errno_location@plt>
   118be:	mov    r13d,DWORD PTR [rax]
   118c1:	mov    rbp,rax
   118c4:	mov    edi,ebx
   118c6:	call   38b0 <close@plt>
   118cb:	mov    ebx,r12d
   118ce:	mov    DWORD PTR [rbp+0x0],r13d
   118d2:	add    rsp,0x8
   118d6:	mov    eax,ebx
   118d8:	pop    rbx
   118d9:	pop    rbp
   118da:	pop    r12
   118dc:	pop    r13
   118de:	ret    
   118df:	nop
   118e0:	mov    rax,QWORD PTR [rdi]
   118e3:	xor    edx,edx
   118e5:	div    rsi
   118e8:	mov    rax,rdx
   118eb:	ret    
   118ec:	nop    DWORD PTR [rax+0x0]
   118f0:	mov    rax,QWORD PTR [rsi]
   118f3:	cmp    QWORD PTR [rdi],rax
   118f6:	sete   al
   118f9:	ret    
   118fa:	nop    WORD PTR [rax+rax*1+0x0]
   11900:	push   r15
   11902:	push   r14
   11904:	push   r13
   11906:	push   r12
   11908:	push   rbp
   11909:	push   rbx
   1190a:	mov    ebx,ecx
   1190c:	sub    rsp,0x128
   11913:	mov    r13,QWORD PTR [rdx+0x60]
   11917:	mov    r14,QWORD PTR [rsi+0x58]
   1191b:	mov    rax,QWORD PTR fs:0x28
   11924:	mov    QWORD PTR [rsp+0x118],rax
   1192c:	xor    eax,eax
   1192e:	and    ebx,0x1
   11931:	mov    r12,QWORD PTR [rdx+0x58]
   11935:	mov    r9,QWORD PTR [rsi+0x60]
   11939:	mov    r10d,r13d
   1193c:	je     11a20 <__cxa_finalize@plt+0xdc08>
   11942:	cmp    r14,r12
   11945:	sete   r15b
   11949:	cmp    r9d,r13d
   1194c:	sete   al
   1194f:	and    al,r15b
   11952:	mov    BYTE PTR [rsp],al
   11955:	jne    11a68 <__cxa_finalize@plt+0xdc50>
   1195b:	lea    rax,[r12-0x1]
   11960:	cmp    rax,r14
   11963:	jg     11a88 <__cxa_finalize@plt+0xdc70>
   11969:	lea    rax,[r14-0x1]
   1196d:	cmp    rax,r12
   11970:	jg     11a37 <__cxa_finalize@plt+0xdc1f>
   11976:	mov    rcx,QWORD PTR [rip+0x210d83]        # 222700 <program_name@@Base+0x160>
   1197d:	mov    r11,rdi
   11980:	mov    rbp,rsi
   11983:	test   rcx,rcx
   11986:	je     11f38 <__cxa_finalize@plt+0xe120>
   1198c:	mov    rsi,QWORD PTR [rip+0x210d65]        # 2226f8 <program_name@@Base+0x158>
   11993:	test   rsi,rsi
   11996:	je     11a90 <__cxa_finalize@plt+0xdc78>
   1199c:	mov    rax,QWORD PTR [rbp+0x0]
   119a0:	mov    rdi,rcx
   119a3:	mov    QWORD PTR [rsp+0x20],r9
   119a8:	mov    QWORD PTR [rsp+0x18],r11
   119ad:	mov    DWORD PTR [rsp+0x10],r10d
   119b2:	mov    QWORD PTR [rsi],rax
   119b5:	call   ec10 <__cxa_finalize@plt+0xadf8>
   119ba:	test   rax,rax
   119bd:	mov    QWORD PTR [rsp+0x8],rax
   119c2:	mov    r10d,DWORD PTR [rsp+0x10]
   119c7:	mov    r11,QWORD PTR [rsp+0x18]
   119cc:	mov    r9,QWORD PTR [rsp+0x20]
   119d1:	je     11ae8 <__cxa_finalize@plt+0xdcd0>
   119d7:	cmp    QWORD PTR [rip+0x210d1a],rax        # 2226f8 <program_name@@Base+0x158>
   119de:	je     11f98 <__cxa_finalize@plt+0xe180>
   119e4:	mov    rax,QWORD PTR [rsp+0x8]
   119e9:	cmp    BYTE PTR [rax+0xc],0x0
   119ed:	mov    edi,DWORD PTR [rax+0x8]
   119f0:	mov    DWORD PTR [rsp+0x10],edi
   119f4:	je     11b6a <__cxa_finalize@plt+0xdd52>
   119fa:	xor    eax,eax
   119fc:	cmp    edi,0x77359400
   11a02:	sete   al
   11a05:	not    eax
   11a07:	cdqe   
   11a09:	and    r12,rax
   11a0c:	mov    eax,r10d
   11a0f:	mov    r10d,r13d
   11a12:	cdq    
   11a13:	idiv   edi
   11a15:	sub    r10d,edx
   11a18:	nop    DWORD PTR [rax+rax*1+0x0]
   11a20:	cmp    r12,r14
   11a23:	jg     11a88 <__cxa_finalize@plt+0xdc70>
   11a25:	mov    ebx,0x1
   11a2a:	jl     11a37 <__cxa_finalize@plt+0xdc1f>
   11a2c:	cmp    r10d,r9d
   11a2f:	jg     11a88 <__cxa_finalize@plt+0xdc70>
   11a31:	setl   bl
   11a34:	movzx  ebx,bl
   11a37:	mov    rsi,QWORD PTR [rsp+0x118]
   11a3f:	xor    rsi,QWORD PTR fs:0x28
   11a48:	mov    eax,ebx
   11a4a:	jne    1204e <__cxa_finalize@plt+0xe236>
   11a50:	add    rsp,0x128
   11a57:	pop    rbx
   11a58:	pop    rbp
   11a59:	pop    r12
   11a5b:	pop    r13
   11a5d:	pop    r14
   11a5f:	pop    r15
   11a61:	ret    
   11a62:	nop    WORD PTR [rax+rax*1+0x0]
   11a68:	xor    ebx,ebx
   11a6a:	jmp    11a37 <__cxa_finalize@plt+0xdc1f>
   11a6c:	mov    eax,r10d
   11a6f:	cdq    
   11a70:	idiv   r8d
   11a73:	mov    eax,r13d
   11a76:	sub    eax,edx
   11a78:	cmp    eax,r9d
   11a7b:	jle    11d8d <__cxa_finalize@plt+0xdf75>
   11a81:	nop    DWORD PTR [rax+0x0]
   11a88:	mov    ebx,0xffffffff
   11a8d:	jmp    11a37 <__cxa_finalize@plt+0xdc1f>
   11a8f:	nop
   11a90:	mov    edi,0x10
   11a95:	mov    QWORD PTR [rsp+0x20],r9
   11a9a:	mov    QWORD PTR [rsp+0x18],r11
   11a9f:	mov    DWORD PTR [rsp+0x10],r10d
   11aa4:	mov    QWORD PTR [rsp+0x8],rcx
   11aa9:	call   3ac0 <malloc@plt>
   11aae:	test   rax,rax
   11ab1:	mov    rsi,rax
   11ab4:	mov    QWORD PTR [rip+0x210c3d],rax        # 2226f8 <program_name@@Base+0x158>
   11abb:	mov    rcx,QWORD PTR [rsp+0x8]
   11ac0:	mov    r10d,DWORD PTR [rsp+0x10]
   11ac5:	mov    r11,QWORD PTR [rsp+0x18]
   11aca:	mov    r9,QWORD PTR [rsp+0x20]
   11acf:	je     11af8 <__cxa_finalize@plt+0xdce0>
   11ad1:	mov    DWORD PTR [rax+0x8],0x77359400
   11ad8:	mov    BYTE PTR [rax+0xc],0x0
   11adc:	jmp    1199c <__cxa_finalize@plt+0xdb84>
   11ae1:	nop    DWORD PTR [rax+0x0]
   11ae8:	mov    rcx,QWORD PTR [rip+0x210c11]        # 222700 <program_name@@Base+0x160>
   11aef:	test   rcx,rcx
   11af2:	je     11f8a <__cxa_finalize@plt+0xe172>
   11af8:	lea    rdx,[rsp+0x50]
   11afd:	mov    rax,QWORD PTR [rbp+0x0]
   11b01:	mov    rdi,rcx
   11b04:	mov    QWORD PTR [rsp+0x28],r9
   11b09:	mov    QWORD PTR [rsp+0x20],r11
   11b0e:	mov    rsi,rdx
   11b11:	mov    DWORD PTR [rsp+0x18],r10d
   11b16:	mov    QWORD PTR [rsp+0x10],rdx
   11b1b:	mov    QWORD PTR [rsp+0x50],rax
   11b20:	call   e1a0 <__cxa_finalize@plt+0xa388>
   11b25:	test   rax,rax
   11b28:	mov    QWORD PTR [rsp+0x8],rax
   11b2d:	mov    rdx,QWORD PTR [rsp+0x10]
   11b32:	mov    r10d,DWORD PTR [rsp+0x18]
   11b37:	mov    r11,QWORD PTR [rsp+0x20]
   11b3c:	mov    r9,QWORD PTR [rsp+0x28]
   11b41:	jne    119e4 <__cxa_finalize@plt+0xdbcc>
   11b47:	nop    WORD PTR [rax+rax*1+0x0]
   11b50:	mov    DWORD PTR [rsp+0x58],0x77359400
   11b58:	mov    BYTE PTR [rsp+0x5c],0x0
   11b5d:	mov    DWORD PTR [rsp+0x10],0x77359400
   11b65:	mov    QWORD PTR [rsp+0x8],rdx
   11b6a:	mov    rcx,QWORD PTR [rbp+0x50]
   11b6e:	mov    r8d,0x66666667
   11b74:	mov    rdi,QWORD PTR [rbp+0x70]
   11b78:	mov    eax,ecx
   11b7a:	mov    QWORD PTR [rsp+0x20],rcx
   11b7f:	imul   r8d
   11b82:	mov    eax,ecx
   11b84:	sar    eax,0x1f
   11b87:	mov    esi,edx
   11b89:	sar    esi,0x2
   11b8c:	sub    esi,eax
   11b8e:	lea    eax,[rsi+rsi*4]
   11b91:	mov    DWORD PTR [rsp+0x18],esi
   11b95:	add    eax,eax
   11b97:	sub    ecx,eax
   11b99:	mov    eax,edi
   11b9b:	imul   r8d
   11b9e:	mov    eax,edi
   11ba0:	sar    eax,0x1f
   11ba3:	sar    edx,0x2
   11ba6:	sub    edx,eax
   11ba8:	lea    eax,[rdx+rdx*4]
   11bab:	mov    esi,edx
   11bad:	add    eax,eax
   11baf:	sub    edi,eax
   11bb1:	mov    eax,r9d
   11bb4:	imul   r8d
   11bb7:	mov    eax,r9d
   11bba:	or     ecx,edi
   11bbc:	sar    eax,0x1f
   11bbf:	sar    edx,0x2
   11bc2:	mov    edi,edx
   11bc4:	mov    edx,r9d
   11bc7:	sub    edi,eax
   11bc9:	lea    eax,[rdi+rdi*4]
   11bcc:	add    eax,eax
   11bce:	sub    edx,eax
   11bd0:	or     ecx,edx
   11bd2:	jne    11f20 <__cxa_finalize@plt+0xe108>
   11bd8:	cmp    DWORD PTR [rsp+0x10],0xa
   11bdd:	mov    rcx,QWORD PTR [rbp+0x48]
   11be1:	mov    eax,DWORD PTR [rsp+0x18]
   11be5:	mov    DWORD PTR [rsp+0x38],esi
   11be9:	mov    QWORD PTR [rsp+0x48],rcx
   11bee:	mov    ecx,edi
   11bf0:	mov    DWORD PTR [rsp+0x28],eax
   11bf4:	jle    11ffe <__cxa_finalize@plt+0xe1e6>
   11bfa:	mov    eax,esi
   11bfc:	imul   r8d
   11bff:	mov    eax,esi
   11c01:	sar    eax,0x1f
   11c04:	sar    edx,0x2
   11c07:	sub    edx,eax
   11c09:	lea    eax,[rdx+rdx*4]
   11c0c:	add    eax,eax
   11c0e:	sub    esi,eax
   11c10:	mov    eax,DWORD PTR [rsp+0x18]
   11c14:	imul   r8d
   11c17:	mov    eax,DWORD PTR [rsp+0x18]
   11c1b:	sar    edx,0x2
   11c1e:	sar    eax,0x1f
   11c21:	sub    edx,eax
   11c23:	lea    eax,[rdx+rdx*4]
   11c26:	mov    edx,DWORD PTR [rsp+0x18]
   11c2a:	add    eax,eax
   11c2c:	sub    edx,eax
   11c2e:	mov    eax,edi
   11c30:	or     esi,edx
   11c32:	imul   r8d
   11c35:	mov    eax,edi
   11c37:	mov    DWORD PTR [rsp+0x18],esi
   11c3b:	sar    eax,0x1f
   11c3e:	mov    r8d,0xa
   11c44:	mov    esi,0x66666667
   11c49:	sar    edx,0x2
   11c4c:	sub    edx,eax
   11c4e:	lea    eax,[rdx+rdx*4]
   11c51:	mov    edx,0x8
   11c56:	add    eax,eax
   11c58:	sub    edi,eax
   11c5a:	mov    eax,DWORD PTR [rsp+0x18]
   11c5e:	or     eax,edi
   11c60:	jne    12018 <__cxa_finalize@plt+0xe200>
   11c66:	mov    DWORD PTR [rsp+0x3c],r10d
   11c6b:	mov    edi,DWORD PTR [rsp+0x28]
   11c6f:	mov    r10d,DWORD PTR [rsp+0x38]
   11c74:	mov    BYTE PTR [rsp+0x18],r15b
   11c79:	mov    r15d,edx
   11c7c:	mov    QWORD PTR [rsp+0x30],r12
   11c81:	mov    QWORD PTR [rsp+0x40],r14
   11c86:	mov    eax,edi
   11c88:	sar    edi,0x1f
   11c8b:	lea    r12d,[r8+r8*4]
   11c8f:	imul   esi
   11c91:	mov    eax,r10d
   11c94:	sar    r10d,0x1f
   11c98:	add    r12d,r12d
   11c9b:	mov    r8d,r12d
   11c9e:	sar    edx,0x2
   11ca1:	sub    edx,edi
   11ca3:	mov    edi,edx
   11ca5:	imul   esi
   11ca7:	mov    eax,ecx
   11ca9:	sar    ecx,0x1f
   11cac:	sar    edx,0x2
   11caf:	sub    edx,r10d
   11cb2:	mov    r10d,edx
   11cb5:	imul   esi
   11cb7:	sar    edx,0x2
   11cba:	sub    edx,ecx
   11cbc:	cmp    r12d,DWORD PTR [rsp+0x10]
   11cc1:	mov    ecx,edx
   11cc3:	jge    11fa8 <__cxa_finalize@plt+0xe190>
   11cc9:	mov    eax,edi
   11ccb:	mov    r14d,edi
   11cce:	imul   esi
   11cd0:	mov    eax,edi
   11cd2:	sar    eax,0x1f
   11cd5:	sar    edx,0x2
   11cd8:	sub    edx,eax
   11cda:	lea    eax,[rdx+rdx*4]
   11cdd:	add    eax,eax
   11cdf:	sub    r14d,eax
   11ce2:	mov    eax,r10d
   11ce5:	imul   esi
   11ce7:	mov    eax,r10d
   11cea:	sar    eax,0x1f
   11ced:	sar    edx,0x2
   11cf0:	sub    edx,eax
   11cf2:	lea    eax,[rdx+rdx*4]
   11cf5:	mov    edx,r10d
   11cf8:	add    eax,eax
   11cfa:	sub    edx,eax
   11cfc:	mov    eax,ecx
   11cfe:	or     r14d,edx
   11d01:	imul   esi
   11d03:	mov    eax,ecx
   11d05:	sar    eax,0x1f
   11d08:	sar    edx,0x2
   11d0b:	sub    edx,eax
   11d0d:	lea    eax,[rdx+rdx*4]
   11d10:	mov    edx,ecx
   11d12:	add    eax,eax
   11d14:	sub    edx,eax
   11d16:	or     r14d,edx
   11d19:	jne    11fa8 <__cxa_finalize@plt+0xe190>
   11d1f:	sub    r15d,0x1
   11d23:	jne    11c86 <__cxa_finalize@plt+0xde6e>
   11d29:	mov    r14,QWORD PTR [rsp+0x40]
   11d2e:	mov    rax,QWORD PTR [rsp+0x48]
   11d33:	movzx  r15d,BYTE PTR [rsp+0x18]
   11d39:	mov    r12,QWORD PTR [rsp+0x30]
   11d3e:	mov    r10d,DWORD PTR [rsp+0x3c]
   11d43:	or     rax,r14
   11d46:	or     rax,QWORD PTR [rbp+0x68]
   11d4a:	test   al,0x1
   11d4c:	mov    rax,QWORD PTR [rsp+0x8]
   11d51:	je     11fe1 <__cxa_finalize@plt+0xe1c9>
   11d57:	mov    DWORD PTR [rax+0x8],0x3b9aca00
   11d5e:	mov    r8d,0x3b9aca00
   11d64:	mov    rax,r12
   11d67:	cmp    r14,r12
   11d6a:	jg     11a37 <__cxa_finalize@plt+0xdc1f>
   11d70:	cmp    r9d,r13d
   11d73:	jl     11d7e <__cxa_finalize@plt+0xdf66>
   11d75:	test   r15b,r15b
   11d78:	jne    11a37 <__cxa_finalize@plt+0xdc1f>
   11d7e:	cmp    r14,rax
   11d81:	jl     11a88 <__cxa_finalize@plt+0xdc70>
   11d87:	je     11a6c <__cxa_finalize@plt+0xdc54>
   11d8d:	mov    rax,QWORD PTR [rsp+0x48]
   11d92:	mov    edx,0x38e38e39
   11d97:	lea    r15,[rsp+0x60]
   11d9c:	mov    DWORD PTR [rsp+0x18],r8d
   11da1:	mov    DWORD PTR [rsp+0x10],r10d
   11da6:	mov    rdi,r11
   11da9:	mov    rsi,r15
   11dac:	mov    QWORD PTR [rsp+0x60],rax
   11db1:	movsxd rax,DWORD PTR [rsp+0x20]
   11db6:	mov    QWORD PTR [rsp+0x20],r9
   11dbb:	mov    QWORD PTR [rsp+0x68],rax
   11dc0:	movzx  eax,BYTE PTR [rsp]
   11dc4:	mov    QWORD PTR [rsp],r11
   11dc8:	or     rax,r14
   11dcb:	mov    QWORD PTR [rsp+0x70],rax
   11dd0:	mov    eax,r8d
   11dd3:	mul    edx
   11dd5:	mov    eax,edx
   11dd7:	shr    eax,1
   11dd9:	add    eax,r9d
   11ddc:	cdqe   
   11dde:	mov    QWORD PTR [rsp+0x78],rax
   11de3:	mov    eax,DWORD PTR [rbp+0x18]
   11de6:	and    eax,0xf000
   11deb:	cmp    eax,0xa000
   11df0:	je     1202c <__cxa_finalize@plt+0xe214>
   11df6:	call   12730 <__cxa_finalize@plt+0xe918>
   11dfb:	mov    r9,QWORD PTR [rsp+0x20]
   11e00:	mov    r8d,DWORD PTR [rsp+0x18]
   11e05:	test   eax,eax
   11e07:	mov    r10d,DWORD PTR [rsp+0x10]
   11e0c:	mov    r11,QWORD PTR [rsp]
   11e10:	setne  al
   11e13:	test   al,al
   11e15:	jne    11ee7 <__cxa_finalize@plt+0xe0cf>
   11e1b:	mov    eax,DWORD PTR [rbp+0x18]
   11e1e:	mov    QWORD PTR [rsp+0x28],r9
   11e23:	lea    rdx,[rsp+0x80]
   11e2b:	mov    DWORD PTR [rsp+0x20],r8d
   11e30:	mov    DWORD PTR [rsp+0x18],r10d
   11e35:	mov    rsi,r11
   11e38:	mov    QWORD PTR [rsp+0x10],r11
   11e3d:	mov    edi,0x1
   11e42:	and    eax,0xf000
   11e47:	cmp    eax,0xa000
   11e4c:	je     120d7 <__cxa_finalize@plt+0xe2bf>
   11e52:	call   3a90 <__xstat@plt>
   11e57:	mov    r9,QWORD PTR [rsp+0x28]
   11e5c:	mov    r8d,DWORD PTR [rsp+0x20]
   11e61:	mov    r10d,DWORD PTR [rsp+0x18]
   11e66:	mov    r11,QWORD PTR [rsp+0x10]
   11e6b:	mov    DWORD PTR [rsp],eax
   11e6e:	mov    rax,QWORD PTR [rsp+0xd8]
   11e76:	mov    rcx,QWORD PTR [rsp+0xe0]
   11e7e:	movsxd rdx,r9d
   11e81:	xor    rcx,rdx
   11e84:	xor    rax,r14
   11e87:	or     rax,rcx
   11e8a:	movsxd rcx,DWORD PTR [rsp]
   11e8e:	or     rax,rcx
   11e91:	je     12053 <__cxa_finalize@plt+0xe23b>
   11e97:	mov    eax,DWORD PTR [rbp+0x18]
   11e9a:	mov    QWORD PTR [rsp+0x70],r14
   11e9f:	mov    rsi,r15
   11ea2:	mov    QWORD PTR [rsp+0x78],rdx
   11ea7:	mov    QWORD PTR [rsp+0x20],r9
   11eac:	mov    rdi,r11
   11eaf:	mov    DWORD PTR [rsp+0x18],r8d
   11eb4:	mov    DWORD PTR [rsp+0x10],r10d
   11eb9:	and    eax,0xf000
   11ebe:	cmp    eax,0xa000
   11ec3:	je     120f8 <__cxa_finalize@plt+0xe2e0>
   11ec9:	call   12730 <__cxa_finalize@plt+0xe918>
   11ece:	mov    r9,QWORD PTR [rsp+0x20]
   11ed3:	mov    r8d,DWORD PTR [rsp+0x18]
   11ed8:	mov    r10d,DWORD PTR [rsp+0x10]
   11edd:	cmp    DWORD PTR [rsp],0x0
   11ee1:	je     12053 <__cxa_finalize@plt+0xe23b>
   11ee7:	mov    ebx,0xfffffffe
   11eec:	jmp    11a37 <__cxa_finalize@plt+0xdc1f>
   11ef1:	mov    r8d,esi
   11ef4:	xor    eax,eax
   11ef6:	cmp    r8d,0x77359400
   11efd:	mov    ebx,r8d
   11f00:	sete   al
   11f03:	not    eax
   11f05:	cdqe   
   11f07:	and    r12,rax
   11f0a:	mov    eax,r10d
   11f0d:	mov    r10d,r13d
   11f10:	cdq    
   11f11:	idiv   r8d
   11f14:	sub    r10d,edx
   11f17:	nop    WORD PTR [rax+rax*1+0x0]
   11f20:	mov    rax,QWORD PTR [rsp+0x8]
   11f25:	mov    DWORD PTR [rax+0x8],ebx
   11f28:	mov    BYTE PTR [rax+0xc],0x1
   11f2c:	jmp    11a20 <__cxa_finalize@plt+0xdc08>
   11f31:	nop    DWORD PTR [rax+0x0]
   11f38:	mov    r8,QWORD PTR [rip+0x210091]        # 221fd0 <free@GLIBC_2.2.5>
   11f3f:	lea    rcx,[rip+0xfffffffffffff9aa]        # 118f0 <__cxa_finalize@plt+0xdad8>
   11f46:	lea    rdx,[rip+0xfffffffffffff993]        # 118e0 <__cxa_finalize@plt+0xdac8>
   11f4d:	mov    QWORD PTR [rsp+0x10],rdi
   11f52:	xor    esi,esi
   11f54:	mov    edi,0x10
   11f59:	mov    QWORD PTR [rsp+0x18],r9
   11f5e:	mov    DWORD PTR [rsp+0x8],r13d
   11f63:	call   e410 <__cxa_finalize@plt+0xa5f8>
   11f68:	test   rax,rax
   11f6b:	mov    rcx,rax
   11f6e:	mov    QWORD PTR [rip+0x21078b],rax        # 222700 <program_name@@Base+0x160>
   11f75:	mov    r10d,DWORD PTR [rsp+0x8]
   11f7a:	mov    r11,QWORD PTR [rsp+0x10]
   11f7f:	mov    r9,QWORD PTR [rsp+0x18]
   11f84:	jne    1198c <__cxa_finalize@plt+0xdb74>
   11f8a:	lea    rdx,[rsp+0x50]
   11f8f:	jmp    11b50 <__cxa_finalize@plt+0xdd38>
   11f94:	nop    DWORD PTR [rax+0x0]
   11f98:	mov    QWORD PTR [rip+0x210755],0x0        # 2226f8 <program_name@@Base+0x158>
   11fa3:	jmp    119e4 <__cxa_finalize@plt+0xdbcc>
   11fa8:	mov    rdi,QWORD PTR [rsp+0x8]
   11fad:	mov    eax,r12d
   11fb0:	mov    r12,QWORD PTR [rsp+0x30]
   11fb5:	cmp    eax,0x77359400
   11fba:	movzx  r15d,BYTE PTR [rsp+0x18]
   11fc0:	mov    r10d,DWORD PTR [rsp+0x3c]
   11fc5:	sete   BYTE PTR [rsp]
   11fc9:	mov    r14,QWORD PTR [rsp+0x40]
   11fce:	mov    DWORD PTR [rdi+0x8],eax
   11fd1:	movzx  eax,BYTE PTR [rsp]
   11fd5:	not    eax
   11fd7:	cdqe   
   11fd9:	and    rax,r12
   11fdc:	jmp    11d67 <__cxa_finalize@plt+0xdf4f>
   11fe1:	mov    DWORD PTR [rax+0x8],0x77359400
   11fe8:	mov    rax,r12
   11feb:	mov    BYTE PTR [rsp],0x1
   11fef:	and    rax,0xfffffffffffffffe
   11ff3:	mov    r8d,0x77359400
   11ff9:	jmp    11d67 <__cxa_finalize@plt+0xdf4f>
   11ffe:	mov    rax,QWORD PTR [rsp+0x8]
   12003:	mov    r8d,0xa
   12009:	mov    DWORD PTR [rax+0x8],0xa
   12010:	mov    rax,r12
   12013:	jmp    11d67 <__cxa_finalize@plt+0xdf4f>
   12018:	mov    rax,QWORD PTR [rsp+0x8]
   1201d:	mov    DWORD PTR [rax+0x8],0xa
   12024:	mov    rax,r12
   12027:	jmp    11d67 <__cxa_finalize@plt+0xdf4f>
   1202c:	call   12740 <__cxa_finalize@plt+0xe928>
   12031:	test   eax,eax
   12033:	mov    r11,QWORD PTR [rsp]
   12037:	mov    r10d,DWORD PTR [rsp+0x10]
   1203c:	setne  al
   1203f:	mov    r8d,DWORD PTR [rsp+0x18]
   12044:	mov    r9,QWORD PTR [rsp+0x20]
   12049:	jmp    11e13 <__cxa_finalize@plt+0xdffb>
   1204e:	call   3760 <__stack_chk_fail@plt>
   12053:	mov    ecx,DWORD PTR [rsp+0xd8]
   1205a:	mov    esi,0xa
   1205f:	and    ecx,0x1
   12062:	imul   ecx,ecx,0x3b9aca00
   12068:	add    ecx,DWORD PTR [rsp+0xe0]
   1206f:	mov    eax,ecx
   12071:	cdq    
   12072:	idiv   esi
   12074:	test   edx,edx
   12076:	jne    1211c <__cxa_finalize@plt+0xe304>
   1207c:	cmp    r8d,0xa
   12080:	je     11ef4 <__cxa_finalize@plt+0xe0dc>
   12086:	mov    edi,0x9
   1208b:	mov    esi,0xa
   12090:	mov    r11d,0x66666667
   12096:	mov    eax,ecx
   12098:	sar    ecx,0x1f
   1209b:	imul   r11d
   1209e:	sar    edx,0x2
   120a1:	sub    edx,ecx
   120a3:	mov    eax,edx
   120a5:	mov    ecx,edx
   120a7:	imul   r11d
   120aa:	mov    eax,edx
   120ac:	mov    edx,ecx
   120ae:	sar    eax,0x2
   120b1:	sar    edx,0x1f
   120b4:	sub    eax,edx
   120b6:	lea    eax,[rax+rax*4]
   120b9:	add    eax,eax
   120bb:	cmp    ecx,eax
   120bd:	jne    11ef1 <__cxa_finalize@plt+0xe0d9>
   120c3:	sub    edi,0x1
   120c6:	je     12111 <__cxa_finalize@plt+0xe2f9>
   120c8:	lea    esi,[rsi+rsi*4]
   120cb:	add    esi,esi
   120cd:	cmp    esi,r8d
   120d0:	jne    12096 <__cxa_finalize@plt+0xe27e>
   120d2:	jmp    11ef4 <__cxa_finalize@plt+0xe0dc>
   120d7:	call   3740 <__lxstat@plt>
   120dc:	mov    r11,QWORD PTR [rsp+0x10]
   120e1:	mov    DWORD PTR [rsp],eax
   120e4:	mov    r10d,DWORD PTR [rsp+0x18]
   120e9:	mov    r8d,DWORD PTR [rsp+0x20]
   120ee:	mov    r9,QWORD PTR [rsp+0x28]
   120f3:	jmp    11e6e <__cxa_finalize@plt+0xe056>
   120f8:	call   12740 <__cxa_finalize@plt+0xe928>
   120fd:	mov    r10d,DWORD PTR [rsp+0x10]
   12102:	mov    r8d,DWORD PTR [rsp+0x18]
   12107:	mov    r9,QWORD PTR [rsp+0x20]
   1210c:	jmp    11edd <__cxa_finalize@plt+0xe0c5>
   12111:	mov    r8d,0x77359400
   12117:	jmp    11ef4 <__cxa_finalize@plt+0xe0dc>
   1211c:	mov    r8d,ebx
   1211f:	jmp    11ef4 <__cxa_finalize@plt+0xe0dc>
   12124:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1212e:	xchg   ax,ax
   12130:	push   rbp
   12131:	push   rbx
   12132:	mov    rbp,rdi
   12135:	sub    rsp,0x18
   12139:	mov    rbx,QWORD PTR [rsi]
   1213c:	mov    rax,QWORD PTR [rbx+0x8]
   12140:	mov    rdx,QWORD PTR [rbx+0x18]
   12144:	cmp    rax,0x3ffffffe
   1214a:	je     121b0 <__cxa_finalize@plt+0xe398>
   1214c:	cmp    rax,0x3fffffff
   12152:	je     12170 <__cxa_finalize@plt+0xe358>
   12154:	cmp    rdx,0x3ffffffe
   1215b:	je     1218e <__cxa_finalize@plt+0xe376>
   1215d:	xor    eax,eax
   1215f:	cmp    rdx,0x3fffffff
   12166:	je     121d8 <__cxa_finalize@plt+0xe3c0>
   12168:	add    rsp,0x18
   1216c:	pop    rbx
   1216d:	pop    rbp
   1216e:	ret    
   1216f:	nop
   12170:	cmp    rdx,0x3fffffff
   12177:	je     121f8 <__cxa_finalize@plt+0xe3e0>
   12179:	mov    rdi,rbx
   1217c:	call   16460 <fts_children@@Base+0x8f0>
   12181:	mov    rdx,QWORD PTR [rbx+0x18]
   12185:	cmp    rdx,0x3ffffffe
   1218c:	jne    1215d <__cxa_finalize@plt+0xe345>
   1218e:	mov    rax,QWORD PTR [rbp+0x60]
   12192:	mov    rdx,QWORD PTR [rbp+0x58]
   12196:	mov    QWORD PTR [rbx+0x18],rax
   1219a:	mov    QWORD PTR [rbx+0x10],rdx
   1219e:	add    rsp,0x18
   121a2:	xor    eax,eax
   121a4:	pop    rbx
   121a5:	pop    rbp
   121a6:	ret    
   121a7:	nop    WORD PTR [rax+rax*1+0x0]
   121b0:	cmp    rdx,0x3ffffffe
   121b7:	mov    eax,0x1
   121bc:	je     12168 <__cxa_finalize@plt+0xe350>
   121be:	mov    rax,QWORD PTR [rdi+0x50]
   121c2:	mov    rcx,QWORD PTR [rdi+0x48]
   121c6:	mov    QWORD PTR [rbx+0x8],rax
   121ca:	xor    eax,eax
   121cc:	cmp    rdx,0x3fffffff
   121d3:	mov    QWORD PTR [rbx],rcx
   121d6:	jne    12168 <__cxa_finalize@plt+0xe350>
   121d8:	lea    rdi,[rbx+0x10]
   121dc:	mov    BYTE PTR [rsp+0xf],al
   121e0:	call   16460 <fts_children@@Base+0x8f0>
   121e5:	movzx  eax,BYTE PTR [rsp+0xf]
   121ea:	add    rsp,0x18
   121ee:	pop    rbx
   121ef:	pop    rbp
   121f0:	ret    
   121f1:	nop    DWORD PTR [rax+0x0]
   121f8:	mov    QWORD PTR [rsi],0x0
   121ff:	xor    eax,eax
   12201:	jmp    12168 <__cxa_finalize@plt+0xe350>
   12206:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12210:	mov    r9,QWORD PTR [rdi+0x8]
   12214:	lea    rcx,[r9-0x3ffffffe]
   1221b:	cmp    rcx,0x1
   1221f:	jbe    1222a <__cxa_finalize@plt+0xe412>
   12221:	cmp    r9,0x3b9ac9ff
   12228:	ja     122a0 <__cxa_finalize@plt+0xe488>
   1222a:	mov    rdx,QWORD PTR [rdi+0x18]
   1222e:	lea    r8,[rdx-0x3ffffffe]
   12235:	cmp    r8,0x1
   12239:	jbe    12244 <__cxa_finalize@plt+0xe42c>
   1223b:	cmp    rdx,0x3b9ac9ff
   12242:	ja     122a0 <__cxa_finalize@plt+0xe488>
   12244:	xor    esi,esi
   12246:	xor    r10d,r10d
   12249:	cmp    rcx,0x1
   1224d:	ja     12269 <__cxa_finalize@plt+0xe451>
   1224f:	xor    esi,esi
   12251:	cmp    r9,0x3ffffffe
   12258:	mov    QWORD PTR [rdi],0x0
   1225f:	sete   sil
   12263:	mov    r10d,0x1
   12269:	cmp    r8,0x1
   1226d:	ja     1228b <__cxa_finalize@plt+0xe473>
   1226f:	xor    eax,eax
   12271:	cmp    rdx,0x3ffffffe
   12278:	mov    QWORD PTR [rdi+0x10],0x0
   12280:	sete   al
   12283:	mov    r10d,0x1
   12289:	add    esi,eax
   1228b:	xor    eax,eax
   1228d:	cmp    esi,0x1
   12290:	sete   al
   12293:	add    eax,r10d
   12296:	ret    
   12297:	nop    WORD PTR [rax+rax*1+0x0]
   122a0:	sub    rsp,0x8
   122a4:	call   3540 <__errno_location@plt>
   122a9:	mov    DWORD PTR [rax],0x16
   122af:	mov    eax,0xffffffff
   122b4:	add    rsp,0x8
   122b8:	ret    
   122b9:	nop    DWORD PTR [rax+0x0]
   122c0:	mov    ecx,0x100
   122c5:	jmp    3500 <utimensat@plt>
   122ca:	nop    WORD PTR [rax+rax*1+0x0]
   122d0:	push   r14
   122d2:	push   r13
   122d4:	push   r12
   122d6:	push   rbp
   122d7:	mov    r12,rsi
   122da:	push   rbx
   122db:	mov    ebx,edi
   122dd:	sub    rsp,0x110
   122e4:	mov    rax,QWORD PTR fs:0x28
   122ed:	mov    QWORD PTR [rsp+0x108],rax
   122f5:	xor    eax,eax
   122f7:	test   rdx,rdx
   122fa:	je     125c0 <__cxa_finalize@plt+0xe7a8>
   12300:	movdqu xmm0,XMMWORD PTR [rdx]
   12304:	lea    rdi,[rsp+0x10]
   12309:	movaps XMMWORD PTR [rsp+0x10],xmm0
   1230e:	mov    QWORD PTR [rsp+0x8],rdi
   12313:	movdqu xmm0,XMMWORD PTR [rdx+0x10]
   12318:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1231d:	call   12210 <__cxa_finalize@plt+0xe3f8>
   12322:	test   eax,eax
   12324:	mov    r13d,eax
   12327:	js     126e3 <__cxa_finalize@plt+0xe8cb>
   1232d:	test   ebx,ebx
   1232f:	jns    1233a <__cxa_finalize@plt+0xe522>
   12331:	test   r12,r12
   12334:	je     126d8 <__cxa_finalize@plt+0xe8c0>
   1233a:	mov    eax,DWORD PTR [rip+0x2103cc]        # 22270c <program_name@@Base+0x16c>
   12340:	test   eax,eax
   12342:	js     12378 <__cxa_finalize@plt+0xe560>
   12344:	cmp    r13d,0x2
   12348:	je     12550 <__cxa_finalize@plt+0xe738>
   1234e:	mov    rsi,QWORD PTR [rsp+0x8]
   12353:	test   ebx,ebx
   12355:	js     12680 <__cxa_finalize@plt+0xe868>
   1235b:	mov    edi,ebx
   1235d:	call   3cc0 <futimens@plt>
   12362:	cmp    eax,0x0
   12365:	mov    ebp,eax
   12367:	jle    1269d <__cxa_finalize@plt+0xe885>
   1236d:	call   3540 <__errno_location@plt>
   12372:	mov    DWORD PTR [rax],0x26
   12378:	test   r13d,r13d
   1237b:	mov    DWORD PTR [rip+0x210387],0xffffffff        # 22270c <program_name@@Base+0x16c>
   12385:	mov    DWORD PTR [rip+0x210379],0xffffffff        # 222708 <program_name@@Base+0x168>
   1238f:	jne    124f0 <__cxa_finalize@plt+0xe6d8>
   12395:	mov    rsi,QWORD PTR [rsp+0x8]
   1239a:	test   rsi,rsi
   1239d:	je     12630 <__cxa_finalize@plt+0xe818>
   123a3:	mov    rax,QWORD PTR [rsi]
   123a6:	mov    rdi,QWORD PTR [rsi+0x8]
   123aa:	movabs rcx,0x20c49ba5e353f7cf
   123b4:	lea    r13,[rsp+0x30]
   123b9:	mov    QWORD PTR [rsp+0x30],rax
   123be:	mov    rax,rdi
   123c1:	sar    rdi,0x3f
   123c5:	imul   rcx
   123c8:	mov    rax,QWORD PTR [rsi+0x10]
   123cc:	mov    rsi,QWORD PTR [rsi+0x18]
   123d0:	mov    QWORD PTR [rsp+0x40],rax
   123d5:	mov    rax,rsi
   123d8:	sar    rsi,0x3f
   123dc:	sar    rdx,0x7
   123e0:	sub    rdx,rdi
   123e3:	mov    QWORD PTR [rsp+0x38],rdx
   123e8:	imul   rcx
   123eb:	mov    rcx,rdx
   123ee:	sar    rcx,0x7
   123f2:	sub    rcx,rsi
   123f5:	mov    QWORD PTR [rsp+0x48],rcx
   123fa:	test   ebx,ebx
   123fc:	mov    rdx,r13
   123ff:	js     125d8 <__cxa_finalize@plt+0xe7c0>
   12405:	xor    esi,esi
   12407:	mov    edi,ebx
   12409:	call   3de0 <futimesat@plt>
   1240e:	test   eax,eax
   12410:	mov    ebp,eax
   12412:	jne    12610 <__cxa_finalize@plt+0xe7f8>
   12418:	test   r13,r13
   1241b:	je     125e7 <__cxa_finalize@plt+0xe7cf>
   12421:	cmp    QWORD PTR [r13+0x8],0x7a11f
   12429:	setg   r12b
   1242d:	cmp    QWORD PTR [r13+0x18],0x7a11f
   12435:	setg   r14b
   12439:	test   r12b,r12b
   1243c:	jne    12447 <__cxa_finalize@plt+0xe62f>
   1243e:	test   r14b,r14b
   12441:	je     125e7 <__cxa_finalize@plt+0xe7cf>
   12447:	lea    rdx,[rsp+0x70]
   1244c:	mov    esi,ebx
   1244e:	mov    edi,0x1
   12453:	call   3b10 <__fxstat@plt>
   12458:	test   eax,eax
   1245a:	jne    125e7 <__cxa_finalize@plt+0xe7cf>
   12460:	mov    rdx,QWORD PTR [rsp+0xc8]
   12468:	sub    rdx,QWORD PTR [r13+0x10]
   1246c:	mov    rax,QWORD PTR [rsp+0xb8]
   12474:	sub    rax,QWORD PTR [r13+0x0]
   12478:	movdqa xmm0,XMMWORD PTR [r13+0x0]
   1247e:	cmp    rdx,0x1
   12482:	sete   dl
   12485:	movaps XMMWORD PTR [rsp+0x50],xmm0
   1248a:	and    r14d,edx
   1248d:	cmp    rax,0x1
   12491:	movdqa xmm0,XMMWORD PTR [r13+0x10]
   12497:	movaps XMMWORD PTR [rsp+0x60],xmm0
   1249c:	jne    126f0 <__cxa_finalize@plt+0xe8d8>
   124a2:	test   r12b,r12b
   124a5:	je     126f0 <__cxa_finalize@plt+0xe8d8>
   124ab:	cmp    QWORD PTR [rsp+0xc0],0x0
   124b4:	jne    126f0 <__cxa_finalize@plt+0xe8d8>
   124ba:	test   r14b,r14b
   124bd:	mov    QWORD PTR [rsp+0x58],0x0
   124c6:	je     124d7 <__cxa_finalize@plt+0xe6bf>
   124c8:	cmp    QWORD PTR [rsp+0xd0],0x0
   124d1:	je     12708 <__cxa_finalize@plt+0xe8f0>
   124d7:	lea    rdx,[rsp+0x50]
   124dc:	xor    esi,esi
   124de:	mov    edi,ebx
   124e0:	call   3de0 <futimesat@plt>
   124e5:	xor    ebp,ebp
   124e7:	jmp    125e7 <__cxa_finalize@plt+0xe7cf>
   124ec:	nop    DWORD PTR [rax+0x0]
   124f0:	cmp    r13d,0x3
   124f4:	je     1251c <__cxa_finalize@plt+0xe704>
   124f6:	test   ebx,ebx
   124f8:	lea    rdx,[rsp+0x70]
   124fd:	js     12640 <__cxa_finalize@plt+0xe828>
   12503:	mov    esi,ebx
   12505:	mov    edi,0x1
   1250a:	call   3b10 <__fxstat@plt>
   1250f:	test   eax,eax
   12511:	setne  al
   12514:	test   al,al
   12516:	jne    126e3 <__cxa_finalize@plt+0xe8cb>
   1251c:	cmp    QWORD PTR [rsp+0x8],0x0
   12522:	je     12630 <__cxa_finalize@plt+0xe818>
   12528:	lea    rsi,[rsp+0x8]
   1252d:	lea    rdi,[rsp+0x70]
   12532:	xor    ebp,ebp
   12534:	call   12130 <__cxa_finalize@plt+0xe318>
   12539:	test   al,al
   1253b:	je     12395 <__cxa_finalize@plt+0xe57d>
   12541:	jmp    125e7 <__cxa_finalize@plt+0xe7cf>
   12546:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12550:	test   ebx,ebx
   12552:	lea    rdx,[rsp+0x70]
   12557:	js     12660 <__cxa_finalize@plt+0xe848>
   1255d:	mov    esi,ebx
   1255f:	mov    edi,0x1
   12564:	call   3b10 <__fxstat@plt>
   12569:	test   eax,eax
   1256b:	setne  al
   1256e:	test   al,al
   12570:	jne    126e3 <__cxa_finalize@plt+0xe8cb>
   12576:	mov    rsi,QWORD PTR [rsp+0x8]
   1257b:	cmp    QWORD PTR [rsi+0x8],0x3ffffffe
   12583:	je     126b0 <__cxa_finalize@plt+0xe898>
   12589:	cmp    QWORD PTR [rsi+0x18],0x3ffffffe
   12591:	mov    r13d,0x3
   12597:	jne    12353 <__cxa_finalize@plt+0xe53b>
   1259d:	mov    rax,QWORD PTR [rsp+0xd0]
   125a5:	mov    rdx,QWORD PTR [rsp+0xc8]
   125ad:	mov    QWORD PTR [rsi+0x18],rax
   125b1:	mov    QWORD PTR [rsi+0x10],rdx
   125b5:	jmp    12353 <__cxa_finalize@plt+0xe53b>
   125ba:	nop    WORD PTR [rax+rax*1+0x0]
   125c0:	mov    QWORD PTR [rsp+0x8],0x0
   125c9:	xor    r13d,r13d
   125cc:	jmp    1232d <__cxa_finalize@plt+0xe515>
   125d1:	nop    DWORD PTR [rax+0x0]
   125d8:	mov    rsi,r12
   125db:	mov    edi,0xffffff9c
   125e0:	call   3de0 <futimesat@plt>
   125e5:	mov    ebp,eax
   125e7:	mov    rcx,QWORD PTR [rsp+0x108]
   125ef:	xor    rcx,QWORD PTR fs:0x28
   125f8:	mov    eax,ebp
   125fa:	jne    12716 <__cxa_finalize@plt+0xe8fe>
   12600:	add    rsp,0x110
   12607:	pop    rbx
   12608:	pop    rbp
   12609:	pop    r12
   1260b:	pop    r13
   1260d:	pop    r14
   1260f:	ret    
   12610:	test   r12,r12
   12613:	mov    ebp,0xffffffff
   12618:	je     125e7 <__cxa_finalize@plt+0xe7cf>
   1261a:	mov    rsi,r13
   1261d:	mov    rdi,r12
   12620:	call   3960 <utimes@plt>
   12625:	mov    ebp,eax
   12627:	jmp    125e7 <__cxa_finalize@plt+0xe7cf>
   12629:	nop    DWORD PTR [rax+0x0]
   12630:	xor    r13d,r13d
   12633:	jmp    123fa <__cxa_finalize@plt+0xe5e2>
   12638:	nop    DWORD PTR [rax+rax*1+0x0]
   12640:	mov    rsi,r12
   12643:	mov    edi,0x1
   12648:	call   3a90 <__xstat@plt>
   1264d:	test   eax,eax
   1264f:	setne  al
   12652:	jmp    12514 <__cxa_finalize@plt+0xe6fc>
   12657:	nop    WORD PTR [rax+rax*1+0x0]
   12660:	mov    rsi,r12
   12663:	mov    edi,0x1
   12668:	call   3a90 <__xstat@plt>
   1266d:	test   eax,eax
   1266f:	setne  al
   12672:	jmp    1256e <__cxa_finalize@plt+0xe756>
   12677:	nop    WORD PTR [rax+rax*1+0x0]
   12680:	xor    ecx,ecx
   12682:	mov    rdx,rsi
   12685:	mov    edi,0xffffff9c
   1268a:	mov    rsi,r12
   1268d:	call   3500 <utimensat@plt>
   12692:	cmp    eax,0x0
   12695:	mov    ebp,eax
   12697:	jg     1236d <__cxa_finalize@plt+0xe555>
   1269d:	jne    1271b <__cxa_finalize@plt+0xe903>
   1269f:	mov    DWORD PTR [rip+0x210063],0x1        # 22270c <program_name@@Base+0x16c>
   126a9:	jmp    125e7 <__cxa_finalize@plt+0xe7cf>
   126ae:	xchg   ax,ax
   126b0:	mov    rax,QWORD PTR [rsp+0xc0]
   126b8:	mov    rdx,QWORD PTR [rsp+0xb8]
   126c0:	mov    r13d,0x3
   126c6:	mov    QWORD PTR [rsi],rdx
   126c9:	mov    QWORD PTR [rsi+0x8],rax
   126cd:	jmp    12353 <__cxa_finalize@plt+0xe53b>
   126d2:	nop    WORD PTR [rax+rax*1+0x0]
   126d8:	call   3540 <__errno_location@plt>
   126dd:	mov    DWORD PTR [rax],0x9
   126e3:	mov    ebp,0xffffffff
   126e8:	jmp    125e7 <__cxa_finalize@plt+0xe7cf>
   126ed:	nop    DWORD PTR [rax]
   126f0:	test   r14b,r14b
   126f3:	je     124e5 <__cxa_finalize@plt+0xe6cd>
   126f9:	cmp    QWORD PTR [rsp+0xd0],0x0
   12702:	jne    124e5 <__cxa_finalize@plt+0xe6cd>
   12708:	mov    QWORD PTR [rsp+0x68],0x0
   12711:	jmp    124d7 <__cxa_finalize@plt+0xe6bf>
   12716:	call   3760 <__stack_chk_fail@plt>
   1271b:	call   3540 <__errno_location@plt>
   12720:	cmp    DWORD PTR [rax],0x26
   12723:	jne    1269f <__cxa_finalize@plt+0xe887>
   12729:	jmp    12378 <__cxa_finalize@plt+0xe560>
   1272e:	xchg   ax,ax
   12730:	mov    rdx,rsi
   12733:	mov    rsi,rdi
   12736:	mov    edi,0xffffffff
   1273b:	jmp    122d0 <__cxa_finalize@plt+0xe4b8>
   12740:	push   r12
   12742:	push   rbp
   12743:	mov    r12,rdi
   12746:	push   rbx
   12747:	sub    rsp,0xd0
   1274e:	mov    rax,QWORD PTR fs:0x28
   12757:	mov    QWORD PTR [rsp+0xc8],rax
   1275f:	xor    eax,eax
   12761:	test   rsi,rsi
   12764:	je     12860 <__cxa_finalize@plt+0xea48>
   1276a:	movdqu xmm0,XMMWORD PTR [rsi]
   1276e:	lea    rdi,[rsp+0x10]
   12773:	movaps XMMWORD PTR [rsp+0x10],xmm0
   12778:	mov    QWORD PTR [rsp+0x8],rdi
   1277d:	movdqu xmm0,XMMWORD PTR [rsi+0x10]
   12782:	movaps XMMWORD PTR [rsp+0x20],xmm0
   12787:	call   12210 <__cxa_finalize@plt+0xe3f8>
   1278c:	test   eax,eax
   1278e:	mov    ebx,eax
   12790:	js     128a0 <__cxa_finalize@plt+0xea88>
   12796:	mov    eax,DWORD PTR [rip+0x20ff6c]        # 222708 <program_name@@Base+0x168>
   1279c:	test   eax,eax
   1279e:	js     127d6 <__cxa_finalize@plt+0xe9be>
   127a0:	cmp    ebx,0x2
   127a3:	je     128d0 <__cxa_finalize@plt+0xeab8>
   127a9:	mov    rdx,QWORD PTR [rsp+0x8]
   127ae:	mov    ecx,0x100
   127b3:	mov    rsi,r12
   127b6:	mov    edi,0xffffff9c
   127bb:	call   3500 <utimensat@plt>
   127c0:	cmp    eax,0x0
   127c3:	mov    ebp,eax
   127c5:	jle    128b0 <__cxa_finalize@plt+0xea98>
   127cb:	call   3540 <__errno_location@plt>
   127d0:	mov    DWORD PTR [rax],0x26
   127d6:	test   ebx,ebx
   127d8:	mov    DWORD PTR [rip+0x20ff26],0xffffffff        # 222708 <program_name@@Base+0x168>
   127e2:	je     12885 <__cxa_finalize@plt+0xea6d>
   127e8:	cmp    ebx,0x3
   127eb:	jne    12928 <__cxa_finalize@plt+0xeb10>
   127f1:	cmp    QWORD PTR [rsp+0x8],0x0
   127f7:	je     12810 <__cxa_finalize@plt+0xe9f8>
   127f9:	lea    rsi,[rsp+0x8]
   127fe:	lea    rdi,[rsp+0x30]
   12803:	xor    ebp,ebp
   12805:	call   12130 <__cxa_finalize@plt+0xe318>
   1280a:	test   al,al
   1280c:	jne    12838 <__cxa_finalize@plt+0xea20>
   1280e:	xchg   ax,ax
   12810:	mov    eax,DWORD PTR [rsp+0x48]
   12814:	and    eax,0xf000
   12819:	cmp    eax,0xa000
   1281e:	je     12976 <__cxa_finalize@plt+0xeb5e>
   12824:	mov    rdx,QWORD PTR [rsp+0x8]
   12829:	mov    rsi,r12
   1282c:	mov    edi,0xffffffff
   12831:	call   122d0 <__cxa_finalize@plt+0xe4b8>
   12836:	mov    ebp,eax
   12838:	mov    rcx,QWORD PTR [rsp+0xc8]
   12840:	xor    rcx,QWORD PTR fs:0x28
   12849:	mov    eax,ebp
   1284b:	jne    12986 <__cxa_finalize@plt+0xeb6e>
   12851:	add    rsp,0xd0
   12858:	pop    rbx
   12859:	pop    rbp
   1285a:	pop    r12
   1285c:	ret    
   1285d:	nop    DWORD PTR [rax]
   12860:	mov    ecx,DWORD PTR [rip+0x20fea2]        # 222708 <program_name@@Base+0x168>
   12866:	xor    edx,edx
   12868:	xor    ebx,ebx
   1286a:	mov    QWORD PTR [rsp+0x8],0x0
   12873:	test   ecx,ecx
   12875:	jns    127ae <__cxa_finalize@plt+0xe996>
   1287b:	mov    DWORD PTR [rip+0x20fe83],0xffffffff        # 222708 <program_name@@Base+0x168>
   12885:	lea    rdx,[rsp+0x30]
   1288a:	mov    rsi,r12
   1288d:	mov    edi,0x1
   12892:	call   3740 <__lxstat@plt>
   12897:	test   eax,eax
   12899:	je     12810 <__cxa_finalize@plt+0xe9f8>
   1289f:	nop
   128a0:	mov    ebp,0xffffffff
   128a5:	jmp    12838 <__cxa_finalize@plt+0xea20>
   128a7:	nop    WORD PTR [rax+rax*1+0x0]
   128b0:	jne    1298b <__cxa_finalize@plt+0xeb73>
   128b6:	mov    DWORD PTR [rip+0x20fe4c],0x1        # 22270c <program_name@@Base+0x16c>
   128c0:	mov    DWORD PTR [rip+0x20fe3e],0x1        # 222708 <program_name@@Base+0x168>
   128ca:	jmp    12838 <__cxa_finalize@plt+0xea20>
   128cf:	nop
   128d0:	lea    rdx,[rsp+0x30]
   128d5:	mov    rsi,r12
   128d8:	mov    edi,0x1
   128dd:	call   3740 <__lxstat@plt>
   128e2:	test   eax,eax
   128e4:	jne    128a0 <__cxa_finalize@plt+0xea88>
   128e6:	mov    rdx,QWORD PTR [rsp+0x8]
   128eb:	cmp    QWORD PTR [rdx+0x8],0x3ffffffe
   128f3:	je     12958 <__cxa_finalize@plt+0xeb40>
   128f5:	cmp    QWORD PTR [rdx+0x18],0x3ffffffe
   128fd:	mov    ebx,0x3
   12902:	jne    127ae <__cxa_finalize@plt+0xe996>
   12908:	mov    rax,QWORD PTR [rsp+0x90]
   12910:	mov    rcx,QWORD PTR [rsp+0x88]
   12918:	mov    QWORD PTR [rdx+0x18],rax
   1291c:	mov    QWORD PTR [rdx+0x10],rcx
   12920:	jmp    127ae <__cxa_finalize@plt+0xe996>
   12925:	nop    DWORD PTR [rax]
   12928:	lea    rdx,[rsp+0x30]
   1292d:	mov    rsi,r12
   12930:	mov    edi,0x1
   12935:	call   3740 <__lxstat@plt>
   1293a:	test   eax,eax
   1293c:	jne    128a0 <__cxa_finalize@plt+0xea88>
   12942:	cmp    QWORD PTR [rsp+0x8],0x0
   12948:	jne    127f9 <__cxa_finalize@plt+0xe9e1>
   1294e:	jmp    12810 <__cxa_finalize@plt+0xe9f8>
   12953:	nop    DWORD PTR [rax+rax*1+0x0]
   12958:	mov    rax,QWORD PTR [rsp+0x80]
   12960:	mov    rcx,QWORD PTR [rsp+0x78]
   12965:	mov    ebx,0x3
   1296a:	mov    QWORD PTR [rdx],rcx
   1296d:	mov    QWORD PTR [rdx+0x8],rax
   12971:	jmp    127ae <__cxa_finalize@plt+0xe996>
   12976:	call   3540 <__errno_location@plt>
   1297b:	mov    DWORD PTR [rax],0x26
   12981:	jmp    128a0 <__cxa_finalize@plt+0xea88>
   12986:	call   3760 <__stack_chk_fail@plt>
   1298b:	call   3540 <__errno_location@plt>
   12990:	cmp    DWORD PTR [rax],0x26
   12993:	jne    128b6 <__cxa_finalize@plt+0xea9e>
   12999:	jmp    127d6 <__cxa_finalize@plt+0xe9be>
   1299e:	xchg   ax,ax
   129a0:	push   r14
   129a2:	push   r13
   129a4:	mov    r13d,esi
   129a7:	push   r12
   129a9:	push   rbp
   129aa:	mov    r12d,edi
   129ad:	push   rbx
   129ae:	mov    rsi,r9
   129b1:	mov    rdi,r8
   129b4:	mov    rbp,rdx
   129b7:	mov    r14d,ecx
   129ba:	call   13550 <__cxa_finalize@plt+0xf738>
   129bf:	test   rax,rax
   129c2:	je     12a27 <__cxa_finalize@plt+0xec0f>
   129c4:	test   rbp,rbp
   129c7:	mov    rbx,rax
   129ca:	je     12a00 <__cxa_finalize@plt+0xebe8>
   129cc:	lea    r8,[rip+0x9843]        # 1c216 <_IO_stdin_used@@Base+0x2876>
   129d3:	mov    edi,r12d
   129d6:	mov    r9,rax
   129d9:	mov    ecx,r14d
   129dc:	mov    rdx,rbp
   129df:	mov    esi,r13d
   129e2:	xor    eax,eax
   129e4:	call   3550 <error_at_line@plt>
   129e9:	mov    rdi,rbx
   129ec:	pop    rbx
   129ed:	pop    rbp
   129ee:	pop    r12
   129f0:	pop    r13
   129f2:	pop    r14
   129f4:	jmp    3e10 <free@plt>
   129f9:	nop    DWORD PTR [rax+0x0]
   12a00:	lea    rdx,[rip+0x980f]        # 1c216 <_IO_stdin_used@@Base+0x2876>
   12a07:	mov    edi,r12d
   12a0a:	mov    rcx,rax
   12a0d:	mov    esi,r13d
   12a10:	xor    eax,eax
   12a12:	call   3c20 <error@plt>
   12a17:	mov    rdi,rbx
   12a1a:	pop    rbx
   12a1b:	pop    rbp
   12a1c:	pop    r12
   12a1e:	pop    r13
   12a20:	pop    r14
   12a22:	jmp    3e10 <free@plt>
   12a27:	lea    rsi,[rip+0x9f12]        # 1c940 <quoting_style_vals@@Base+0xc0>
   12a2e:	mov    edx,0x5
   12a33:	xor    edi,edi
   12a35:	call   3700 <dcgettext@plt>
   12a3a:	mov    rbx,rax
   12a3d:	call   3540 <__errno_location@plt>
   12a42:	mov    esi,DWORD PTR [rax]
   12a44:	mov    rdx,rbx
   12a47:	xor    edi,edi
   12a49:	xor    eax,eax
   12a4b:	call   3c20 <error@plt>
   12a50:	call   3530 <abort@plt>
   12a55:	nop
   12a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12a60:	mov    r8,rdx
   12a63:	mov    r9,rcx
   12a66:	xor    edx,edx
   12a68:	xor    ecx,ecx
   12a6a:	jmp    129a0 <__cxa_finalize@plt+0xeb88>
   12a6f:	nop
   12a70:	push   r15
   12a72:	push   r14
   12a74:	push   r13
   12a76:	push   r12
   12a78:	mov    r12,r9
   12a7b:	push   rbp
   12a7c:	push   rbx
   12a7d:	mov    rbp,rdi
   12a80:	mov    rbx,r8
   12a83:	sub    rsp,0x28
   12a87:	test   rsi,rsi
   12a8a:	je     12b20 <__cxa_finalize@plt+0xed08>
   12a90:	mov    r8,rdx
   12a93:	lea    rdx,[rip+0x9ec6]        # 1c960 <quoting_style_vals@@Base+0xe0>
   12a9a:	mov    r9,rcx
   12a9d:	xor    eax,eax
   12a9f:	mov    rcx,rsi
   12aa2:	mov    esi,0x1
   12aa7:	call   3d70 <__fprintf_chk@plt>
   12aac:	lea    rsi,[rip+0x9ec0]        # 1c973 <quoting_style_vals@@Base+0xf3>
   12ab3:	xor    edi,edi
   12ab5:	mov    edx,0x5
   12aba:	call   3700 <dcgettext@plt>
   12abf:	lea    rdx,[rip+0xa1ba]        # 1cc80 <version_etc_copyright@@Base>
   12ac6:	mov    rcx,rax
   12ac9:	mov    r8d,0x7e1
   12acf:	mov    esi,0x1
   12ad4:	mov    rdi,rbp
   12ad7:	xor    eax,eax
   12ad9:	call   3d70 <__fprintf_chk@plt>
   12ade:	lea    rsi,[rip+0x9f1b]        # 1ca00 <quoting_style_vals@@Base+0x180>
   12ae5:	xor    edi,edi
   12ae7:	mov    edx,0x5
   12aec:	call   3700 <dcgettext@plt>
   12af1:	mov    rsi,rbp
   12af4:	mov    rdi,rax
   12af7:	call   3950 <fputs_unlocked@plt>
   12afc:	cmp    r12,0x9
   12b00:	ja     12e30 <__cxa_finalize@plt+0xf018>
   12b06:	lea    rdx,[rip+0xa14b]        # 1cc58 <quoting_style_vals@@Base+0x3d8>
   12b0d:	movsxd rax,DWORD PTR [rdx+r12*4]
   12b11:	add    rax,rdx
   12b14:	jmp    rax
   12b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12b20:	mov    r8,rcx
   12b23:	mov    rcx,rdx
   12b26:	lea    rdx,[rip+0x9e3f]        # 1c96c <quoting_style_vals@@Base+0xec>
   12b2d:	mov    esi,0x1
   12b32:	xor    eax,eax
   12b34:	call   3d70 <__fprintf_chk@plt>
   12b39:	jmp    12aac <__cxa_finalize@plt+0xec94>
   12b3e:	xchg   ax,ax
   12b40:	mov    r9,QWORD PTR [rbx+0x38]
   12b44:	mov    rax,QWORD PTR [rbx+0x10]
   12b48:	lea    rsi,[rip+0xa021]        # 1cb70 <quoting_style_vals@@Base+0x2f0>
   12b4f:	mov    r8,QWORD PTR [rbx+0x8]
   12b53:	mov    edx,0x5
   12b58:	xor    edi,edi
   12b5a:	mov    r13,QWORD PTR [rbx+0x30]
   12b5e:	mov    r12,QWORD PTR [rbx+0x28]
   12b62:	mov    QWORD PTR [rsp+0x10],r9
   12b67:	mov    r15,QWORD PTR [rbx+0x20]
   12b6b:	mov    r14,QWORD PTR [rbx+0x18]
   12b6f:	mov    QWORD PTR [rsp],rax
   12b73:	mov    QWORD PTR [rsp+0x8],r8
   12b78:	mov    rbx,QWORD PTR [rbx]
   12b7b:	call   3700 <dcgettext@plt>
   12b80:	sub    rsp,0x8
   12b84:	mov    r9,QWORD PTR [rsp+0x18]
   12b89:	mov    rcx,rbx
   12b8c:	mov    rdx,rax
   12b8f:	mov    rdi,rbp
   12b92:	mov    esi,0x1
   12b97:	xor    eax,eax
   12b99:	push   r9
   12b9b:	push   r13
   12b9d:	push   r12
   12b9f:	push   r15
   12ba1:	push   r14
   12ba3:	mov    r9,QWORD PTR [rsp+0x30]
   12ba8:	mov    r8,QWORD PTR [rsp+0x38]
   12bad:	call   3d70 <__fprintf_chk@plt>
   12bb2:	add    rsp,0x30
   12bb6:	add    rsp,0x28
   12bba:	pop    rbx
   12bbb:	pop    rbp
   12bbc:	pop    r12
   12bbe:	pop    r13
   12bc0:	pop    r14
   12bc2:	pop    r15
   12bc4:	ret    
   12bc5:	nop    DWORD PTR [rax]
   12bc8:	mov    r10,QWORD PTR [rbx+0x40]
   12bcc:	mov    r9,QWORD PTR [rbx+0x38]
   12bd0:	lea    rsi,[rip+0x9fc9]        # 1cba0 <quoting_style_vals@@Base+0x320>
   12bd7:	mov    rax,QWORD PTR [rbx+0x10]
   12bdb:	mov    r8,QWORD PTR [rbx+0x8]
   12bdf:	mov    edx,0x5
   12be4:	mov    r13,QWORD PTR [rbx+0x30]
   12be8:	mov    r12,QWORD PTR [rbx+0x28]
   12bec:	mov    r15,QWORD PTR [rbx+0x20]
   12bf0:	mov    r14,QWORD PTR [rbx+0x18]
   12bf4:	mov    rbx,QWORD PTR [rbx]
   12bf7:	mov    QWORD PTR [rsp+0x18],r10
   12bfc:	mov    QWORD PTR [rsp+0x10],r9
   12c01:	mov    QWORD PTR [rsp],rax
   12c05:	mov    QWORD PTR [rsp+0x8],r8
   12c0a:	xor    edi,edi
   12c0c:	call   3700 <dcgettext@plt>
   12c11:	mov    r10,QWORD PTR [rsp+0x18]
   12c16:	push   r10
   12c18:	jmp    12b84 <__cxa_finalize@plt+0xed6c>
   12c1d:	nop    DWORD PTR [rax]
   12c20:	mov    rbx,QWORD PTR [rbx]
   12c23:	lea    rsi,[rip+0x9d4d]        # 1c977 <quoting_style_vals@@Base+0xf7>
   12c2a:	mov    edx,0x5
   12c2f:	xor    edi,edi
   12c31:	call   3700 <dcgettext@plt>
   12c36:	add    rsp,0x28
   12c3a:	mov    rcx,rbx
   12c3d:	mov    rdi,rbp
   12c40:	pop    rbx
   12c41:	pop    rbp
   12c42:	pop    r12
   12c44:	pop    r13
   12c46:	pop    r14
   12c48:	pop    r15
   12c4a:	mov    rdx,rax
   12c4d:	mov    esi,0x1
   12c52:	xor    eax,eax
   12c54:	jmp    3d70 <__fprintf_chk@plt>
   12c59:	nop    DWORD PTR [rax+0x0]
   12c60:	mov    r12,QWORD PTR [rbx+0x8]
   12c64:	lea    rsi,[rip+0x9d1c]        # 1c987 <quoting_style_vals@@Base+0x107>
   12c6b:	mov    rbx,QWORD PTR [rbx]
   12c6e:	mov    edx,0x5
   12c73:	xor    edi,edi
   12c75:	call   3700 <dcgettext@plt>
   12c7a:	add    rsp,0x28
   12c7e:	mov    r8,r12
   12c81:	mov    rcx,rbx
   12c84:	mov    rdi,rbp
   12c87:	mov    rdx,rax
   12c8a:	mov    esi,0x1
   12c8f:	pop    rbx
   12c90:	pop    rbp
   12c91:	pop    r12
   12c93:	pop    r13
   12c95:	pop    r14
   12c97:	pop    r15
   12c99:	xor    eax,eax
   12c9b:	jmp    3d70 <__fprintf_chk@plt>
   12ca0:	mov    r13,QWORD PTR [rbx+0x10]
   12ca4:	mov    r12,QWORD PTR [rbx+0x8]
   12ca8:	lea    rsi,[rip+0x9cef]        # 1c99e <quoting_style_vals@@Base+0x11e>
   12caf:	mov    rbx,QWORD PTR [rbx]
   12cb2:	mov    edx,0x5
   12cb7:	xor    edi,edi
   12cb9:	call   3700 <dcgettext@plt>
   12cbe:	add    rsp,0x28
   12cc2:	mov    r9,r13
   12cc5:	mov    r8,r12
   12cc8:	mov    rcx,rbx
   12ccb:	mov    rdi,rbp
   12cce:	mov    rdx,rax
   12cd1:	pop    rbx
   12cd2:	pop    rbp
   12cd3:	pop    r12
   12cd5:	pop    r13
   12cd7:	pop    r14
   12cd9:	pop    r15
   12cdb:	mov    esi,0x1
   12ce0:	xor    eax,eax
   12ce2:	jmp    3d70 <__fprintf_chk@plt>
   12ce7:	nop    WORD PTR [rax+rax*1+0x0]
   12cf0:	lea    rsi,[rip+0x9dd9]        # 1cad0 <quoting_style_vals@@Base+0x250>
   12cf7:	mov    edx,0x5
   12cfc:	xor    edi,edi
   12cfe:	mov    r14,QWORD PTR [rbx+0x18]
   12d02:	mov    r13,QWORD PTR [rbx+0x10]
   12d06:	mov    r12,QWORD PTR [rbx+0x8]
   12d0a:	mov    rbx,QWORD PTR [rbx]
   12d0d:	call   3700 <dcgettext@plt>
   12d12:	sub    rsp,0x8
   12d16:	push   r14
   12d18:	mov    rdx,rax
   12d1b:	mov    r9,r13
   12d1e:	mov    r8,r12
   12d21:	mov    rcx,rbx
   12d24:	mov    rdi,rbp
   12d27:	mov    esi,0x1
   12d2c:	xor    eax,eax
   12d2e:	call   3d70 <__fprintf_chk@plt>
   12d33:	pop    rax
   12d34:	pop    rdx
   12d35:	add    rsp,0x28
   12d39:	pop    rbx
   12d3a:	pop    rbp
   12d3b:	pop    r12
   12d3d:	pop    r13
   12d3f:	pop    r14
   12d41:	pop    r15
   12d43:	ret    
   12d44:	nop    DWORD PTR [rax+0x0]
   12d48:	mov    r15,QWORD PTR [rbx+0x20]
   12d4c:	lea    rsi,[rip+0x9d9d]        # 1caf0 <quoting_style_vals@@Base+0x270>
   12d53:	mov    edx,0x5
   12d58:	xor    edi,edi
   12d5a:	mov    r14,QWORD PTR [rbx+0x18]
   12d5e:	mov    r13,QWORD PTR [rbx+0x10]
   12d62:	mov    r12,QWORD PTR [rbx+0x8]
   12d66:	mov    rbx,QWORD PTR [rbx]
   12d69:	call   3700 <dcgettext@plt>
   12d6e:	push   r15
   12d70:	jmp    12d16 <__cxa_finalize@plt+0xeefe>
   12d72:	nop    WORD PTR [rax+rax*1+0x0]
   12d78:	mov    r8,QWORD PTR [rbx+0x8]
   12d7c:	mov    r12,QWORD PTR [rbx+0x28]
   12d80:	lea    rsi,[rip+0x9d91]        # 1cb18 <quoting_style_vals@@Base+0x298>
   12d87:	mov    r15,QWORD PTR [rbx+0x20]
   12d8b:	mov    r14,QWORD PTR [rbx+0x18]
   12d8f:	mov    edx,0x5
   12d94:	mov    r13,QWORD PTR [rbx+0x10]
   12d98:	xor    edi,edi
   12d9a:	mov    rbx,QWORD PTR [rbx]
   12d9d:	mov    QWORD PTR [rsp],r8
   12da1:	call   3700 <dcgettext@plt>
   12da6:	sub    rsp,0x8
   12daa:	mov    r9,r13
   12dad:	push   r12
   12daf:	push   r15
   12db1:	push   r14
   12db3:	mov    r8,QWORD PTR [rsp+0x20]
   12db8:	mov    rcx,rbx
   12dbb:	mov    rdx,rax
   12dbe:	mov    rdi,rbp
   12dc1:	mov    esi,0x1
   12dc6:	xor    eax,eax
   12dc8:	call   3d70 <__fprintf_chk@plt>
   12dcd:	add    rsp,0x20
   12dd1:	add    rsp,0x28
   12dd5:	pop    rbx
   12dd6:	pop    rbp
   12dd7:	pop    r12
   12dd9:	pop    r13
   12ddb:	pop    r14
   12ddd:	pop    r15
   12ddf:	ret    
   12de0:	mov    r9,QWORD PTR [rbx+0x10]
   12de4:	mov    r13,QWORD PTR [rbx+0x30]
   12de8:	lea    rsi,[rip+0x9d51]        # 1cb40 <quoting_style_vals@@Base+0x2c0>
   12def:	mov    r12,QWORD PTR [rbx+0x28]
   12df3:	mov    r15,QWORD PTR [rbx+0x20]
   12df7:	mov    edx,0x5
   12dfc:	mov    r14,QWORD PTR [rbx+0x18]
   12e00:	mov    r8,QWORD PTR [rbx+0x8]
   12e04:	xor    edi,edi
   12e06:	mov    QWORD PTR [rsp+0x8],r9
   12e0b:	mov    rbx,QWORD PTR [rbx]
   12e0e:	mov    QWORD PTR [rsp],r8
   12e12:	call   3700 <dcgettext@plt>
   12e17:	push   r13
   12e19:	push   r12
   12e1b:	push   r15
   12e1d:	push   r14
   12e1f:	mov    r9,QWORD PTR [rsp+0x28]
   12e24:	jmp    12db3 <__cxa_finalize@plt+0xef9b>
   12e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12e30:	mov    r10,QWORD PTR [rbx+0x40]
   12e34:	mov    r9,QWORD PTR [rbx+0x38]
   12e38:	mov    edx,0x5
   12e3d:	mov    rax,QWORD PTR [rbx+0x10]
   12e41:	mov    r8,QWORD PTR [rbx+0x8]
   12e45:	lea    rsi,[rip+0x9d8c]        # 1cbd8 <quoting_style_vals@@Base+0x358>
   12e4c:	mov    r13,QWORD PTR [rbx+0x30]
   12e50:	mov    r12,QWORD PTR [rbx+0x28]
   12e54:	mov    r15,QWORD PTR [rbx+0x20]
   12e58:	mov    r14,QWORD PTR [rbx+0x18]
   12e5c:	mov    QWORD PTR [rsp+0x18],r10
   12e61:	mov    QWORD PTR [rsp+0x10],r9
   12e66:	mov    QWORD PTR [rsp],rax
   12e6a:	mov    QWORD PTR [rsp+0x8],r8
   12e6f:	mov    rbx,QWORD PTR [rbx]
   12e72:	jmp    12c0a <__cxa_finalize@plt+0xedf2>
   12e77:	call   3530 <abort@plt>
   12e7c:	nop    DWORD PTR [rax+0x0]
   12e80:	xor    r9d,r9d
   12e83:	cmp    QWORD PTR [r8],0x0
   12e87:	je     12e9b <__cxa_finalize@plt+0xf083>
   12e89:	nop    DWORD PTR [rax+0x0]
   12e90:	add    r9,0x1
   12e94:	cmp    QWORD PTR [r8+r9*8],0x0
   12e99:	jne    12e90 <__cxa_finalize@plt+0xf078>
   12e9b:	jmp    12a70 <__cxa_finalize@plt+0xec58>
   12ea0:	sub    rsp,0x68
   12ea4:	mov    r10,r8
   12ea7:	xor    r9d,r9d
   12eaa:	mov    rax,QWORD PTR fs:0x28
   12eb3:	mov    QWORD PTR [rsp+0x58],rax
   12eb8:	xor    eax,eax
   12eba:	mov    r8,rsp
   12ebd:	nop    DWORD PTR [rax]
   12ec0:	mov    eax,DWORD PTR [r10]
   12ec3:	cmp    eax,0x2f
   12ec6:	ja     12f0a <__cxa_finalize@plt+0xf0f2>
   12ec8:	mov    r11d,eax
   12ecb:	add    r11,QWORD PTR [r10+0x10]
   12ecf:	add    eax,0x8
   12ed2:	mov    DWORD PTR [r10],eax
   12ed5:	mov    rax,QWORD PTR [r11]
   12ed8:	test   rax,rax
   12edb:	mov    QWORD PTR [r8+r9*8],rax
   12edf:	je     12eeb <__cxa_finalize@plt+0xf0d3>
   12ee1:	add    r9,0x1
   12ee5:	cmp    r9,0xa
   12ee9:	jne    12ec0 <__cxa_finalize@plt+0xf0a8>
   12eeb:	call   12a70 <__cxa_finalize@plt+0xec58>
   12ef0:	mov    rax,QWORD PTR [rsp+0x58]
   12ef5:	xor    rax,QWORD PTR fs:0x28
   12efe:	jne    12f05 <__cxa_finalize@plt+0xf0ed>
   12f00:	add    rsp,0x68
   12f04:	ret    
   12f05:	call   3760 <__stack_chk_fail@plt>
   12f0a:	mov    r11,QWORD PTR [r10+0x8]
   12f0e:	lea    rax,[r11+0x8]
   12f12:	mov    QWORD PTR [r10+0x8],rax
   12f16:	jmp    12ed5 <__cxa_finalize@plt+0xf0bd>
   12f18:	nop    DWORD PTR [rax+rax*1+0x0]
   12f20:	push   rbp
   12f21:	push   rbx
   12f22:	mov    r10d,0x20
   12f28:	xor    r11d,r11d
   12f2b:	sub    rsp,0xb8
   12f32:	mov    rax,QWORD PTR fs:0x28
   12f3b:	mov    QWORD PTR [rsp+0x78],rax
   12f40:	xor    eax,eax
   12f42:	lea    rax,[rsp+0xd0]
   12f4a:	mov    QWORD PTR [rsp+0xa0],r8
   12f52:	lea    rbx,[rsp+0xd0]
   12f5a:	lea    r8,[rsp+0x20]
   12f5f:	mov    QWORD PTR [rsp+0xa8],r9
   12f67:	mov    DWORD PTR [rsp+0x8],0x20
   12f6f:	mov    QWORD PTR [rsp+0x10],rax
   12f74:	lea    rax,[rsp+0x80]
   12f7c:	xor    r9d,r9d
   12f7f:	mov    QWORD PTR [rsp+0x18],rax
   12f84:	mov    rbp,rax
   12f87:	nop    WORD PTR [rax+rax*1+0x0]
   12f90:	cmp    r10d,0x2f
   12f94:	ja     12fec <__cxa_finalize@plt+0xf1d4>
   12f96:	mov    eax,r10d
   12f99:	mov    r11d,0x1
   12f9f:	add    r10d,0x8
   12fa3:	add    rax,rbp
   12fa6:	mov    rax,QWORD PTR [rax]
   12fa9:	test   rax,rax
   12fac:	mov    QWORD PTR [r8+r9*8],rax
   12fb0:	je     12fbc <__cxa_finalize@plt+0xf1a4>
   12fb2:	add    r9,0x1
   12fb6:	cmp    r9,0xa
   12fba:	jne    12f90 <__cxa_finalize@plt+0xf178>
   12fbc:	test   r11b,r11b
   12fbf:	jne    12fe5 <__cxa_finalize@plt+0xf1cd>
   12fc1:	call   12a70 <__cxa_finalize@plt+0xec58>
   12fc6:	mov    rax,QWORD PTR [rsp+0x78]
   12fcb:	xor    rax,QWORD PTR fs:0x28
   12fd4:	jne    12fe0 <__cxa_finalize@plt+0xf1c8>
   12fd6:	add    rsp,0xb8
   12fdd:	pop    rbx
   12fde:	pop    rbp
   12fdf:	ret    
   12fe0:	call   3760 <__stack_chk_fail@plt>
   12fe5:	mov    DWORD PTR [rsp+0x8],r10d
   12fea:	jmp    12fc1 <__cxa_finalize@plt+0xf1a9>
   12fec:	mov    rax,rbx
   12fef:	add    rbx,0x8
   12ff3:	jmp    12fa6 <__cxa_finalize@plt+0xf18e>
   12ff5:	nop
   12ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13000:	push   rbx
   13001:	lea    rsi,[rip+0x99b2]        # 1c9ba <quoting_style_vals@@Base+0x13a>
   13008:	mov    edx,0x5
   1300d:	xor    edi,edi
   1300f:	call   3700 <dcgettext@plt>
   13014:	lea    rdx,[rip+0x99b4]        # 1c9cf <quoting_style_vals@@Base+0x14f>
   1301b:	mov    rsi,rax
   1301e:	mov    edi,0x1
   13023:	xor    eax,eax
   13025:	call   3bb0 <__printf_chk@plt>
   1302a:	lea    rsi,[rip+0x99b4]        # 1c9e5 <quoting_style_vals@@Base+0x165>
   13031:	mov    edx,0x5
   13036:	xor    edi,edi
   13038:	call   3700 <dcgettext@plt>
   1303d:	lea    rcx,[rip+0x83fc]        # 1b440 <_IO_stdin_used@@Base+0x1aa0>
   13044:	lea    rdx,[rip+0x6a33]        # 19a7e <_IO_stdin_used@@Base+0xde>
   1304b:	mov    rsi,rax
   1304e:	mov    edi,0x1
   13053:	xor    eax,eax
   13055:	call   3bb0 <__printf_chk@plt>
   1305a:	mov    rbx,QWORD PTR [rip+0x20f047]        # 2220a8 <stdout@@GLIBC_2.2.5>
   13061:	lea    rsi,[rip+0x9bb0]        # 1cc18 <quoting_style_vals@@Base+0x398>
   13068:	xor    edi,edi
   1306a:	mov    edx,0x5
   1306f:	call   3700 <dcgettext@plt>
   13074:	mov    rsi,rbx
   13077:	mov    rdi,rax
   1307a:	pop    rbx
   1307b:	jmp    3950 <fputs_unlocked@plt>
   13080:	cmp    BYTE PTR [rip+0x20f68a],0x0        # 222711 <program_name@@Base+0x171>
   13087:	je     13098 <__cxa_finalize@plt+0xf280>
   13089:	movzx  eax,BYTE PTR [rip+0x20f680]        # 222710 <program_name@@Base+0x170>
   13090:	ret    
   13091:	nop    DWORD PTR [rax+0x0]
   13098:	sub    rsp,0x8
   1309c:	call   3850 <geteuid@plt>
   130a1:	test   eax,eax
   130a3:	mov    BYTE PTR [rip+0x20f667],0x1        # 222711 <program_name@@Base+0x171>
   130aa:	sete   al
   130ad:	mov    BYTE PTR [rip+0x20f65d],al        # 222710 <program_name@@Base+0x170>
   130b3:	add    rsp,0x8
   130b7:	ret    
   130b8:	nop    DWORD PTR [rax+rax*1+0x0]
   130c0:	push   rbx
   130c1:	mov    rbx,rdi
   130c4:	call   3ac0 <malloc@plt>
   130c9:	test   rax,rax
   130cc:	jne    130d3 <__cxa_finalize@plt+0xf2bb>
   130ce:	test   rbx,rbx
   130d1:	jne    130d5 <__cxa_finalize@plt+0xf2bd>
   130d3:	pop    rbx
   130d4:	ret    
   130d5:	call   13310 <__cxa_finalize@plt+0xf4f8>
   130da:	nop    WORD PTR [rax+rax*1+0x0]
   130e0:	mov    rax,rdi
   130e3:	mul    rsi
   130e6:	mov    rdi,rax
   130e9:	seto   al
   130ec:	test   rdi,rdi
   130ef:	js     130fb <__cxa_finalize@plt+0xf2e3>
   130f1:	movzx  eax,al
   130f4:	test   rax,rax
   130f7:	jne    130fb <__cxa_finalize@plt+0xf2e3>
   130f9:	jmp    130c0 <__cxa_finalize@plt+0xf2a8>
   130fb:	sub    rsp,0x8
   130ff:	call   13310 <__cxa_finalize@plt+0xf4f8>
   13104:	xchg   ax,ax
   13106:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13110:	jmp    130c0 <__cxa_finalize@plt+0xf2a8>
   13112:	nop    DWORD PTR [rax+0x0]
   13116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13120:	test   rsi,rsi
   13123:	push   rbx
   13124:	mov    rbx,rsi
   13127:	jne    1312e <__cxa_finalize@plt+0xf316>
   13129:	test   rdi,rdi
   1312c:	jne    13148 <__cxa_finalize@plt+0xf330>
   1312e:	mov    rsi,rbx
   13131:	call   3b70 <realloc@plt>
   13136:	test   rax,rax
   13139:	jne    13140 <__cxa_finalize@plt+0xf328>
   1313b:	test   rbx,rbx
   1313e:	jne    13151 <__cxa_finalize@plt+0xf339>
   13140:	pop    rbx
   13141:	ret    
   13142:	nop    WORD PTR [rax+rax*1+0x0]
   13148:	call   3e10 <free@plt>
   1314d:	xor    eax,eax
   1314f:	pop    rbx
   13150:	ret    
   13151:	call   13310 <__cxa_finalize@plt+0xf4f8>
   13156:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13160:	mov    rax,rsi
   13163:	mul    rdx
   13166:	mov    rsi,rax
   13169:	seto   al
   1316c:	test   rsi,rsi
   1316f:	js     1317b <__cxa_finalize@plt+0xf363>
   13171:	movzx  eax,al
   13174:	test   rax,rax
   13177:	jne    1317b <__cxa_finalize@plt+0xf363>
   13179:	jmp    13120 <__cxa_finalize@plt+0xf308>
   1317b:	sub    rsp,0x8
   1317f:	call   13310 <__cxa_finalize@plt+0xf4f8>
   13184:	xchg   ax,ax
   13186:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13190:	test   rdi,rdi
   13193:	mov    r9,rdx
   13196:	mov    rcx,QWORD PTR [rsi]
   13199:	je     131d0 <__cxa_finalize@plt+0xf3b8>
   1319b:	xor    edx,edx
   1319d:	movabs rax,0x5555555555555554
   131a7:	div    r9
   131aa:	cmp    rax,rcx
   131ad:	jbe    131eb <__cxa_finalize@plt+0xf3d3>
   131af:	mov    rax,rcx
   131b2:	shr    rax,1
   131b5:	lea    rcx,[rax+rcx*1+0x1]
   131ba:	mov    QWORD PTR [rsi],rcx
   131bd:	imul   rcx,r9
   131c1:	mov    rsi,rcx
   131c4:	jmp    13120 <__cxa_finalize@plt+0xf308>
   131c9:	nop    DWORD PTR [rax+0x0]
   131d0:	test   rcx,rcx
   131d3:	je     131f8 <__cxa_finalize@plt+0xf3e0>
   131d5:	mov    rax,rcx
   131d8:	mul    r9
   131db:	seto   dl
   131de:	test   rax,rax
   131e1:	movzx  edx,dl
   131e4:	js     131eb <__cxa_finalize@plt+0xf3d3>
   131e6:	test   rdx,rdx
   131e9:	je     131ba <__cxa_finalize@plt+0xf3a2>
   131eb:	sub    rsp,0x8
   131ef:	call   13310 <__cxa_finalize@plt+0xf4f8>
   131f4:	nop    DWORD PTR [rax+0x0]
   131f8:	xor    edx,edx
   131fa:	mov    eax,0x80
   131ff:	xor    r8d,r8d
   13202:	div    r9
   13205:	test   rax,rax
   13208:	sete   r8b
   1320c:	lea    rcx,[r8+rax*1]
   13210:	jmp    131d5 <__cxa_finalize@plt+0xf3bd>
   13212:	nop    DWORD PTR [rax+0x0]
   13216:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13220:	test   rdi,rdi
   13223:	mov    rax,QWORD PTR [rsi]
   13226:	je     13250 <__cxa_finalize@plt+0xf438>
   13228:	movabs rdx,0x5555555555555553
   13232:	cmp    rax,rdx
   13235:	ja     13261 <__cxa_finalize@plt+0xf449>
   13237:	mov    rdx,rax
   1323a:	shr    rdx,1
   1323d:	lea    rax,[rdx+rax*1+0x1]
   13242:	mov    QWORD PTR [rsi],rax
   13245:	mov    rsi,rax
   13248:	jmp    13120 <__cxa_finalize@plt+0xf308>
   1324d:	nop    DWORD PTR [rax]
   13250:	test   rax,rax
   13253:	mov    edx,0x80
   13258:	cmove  rax,rdx
   1325c:	test   rax,rax
   1325f:	jns    13242 <__cxa_finalize@plt+0xf42a>
   13261:	sub    rsp,0x8
   13265:	call   13310 <__cxa_finalize@plt+0xf4f8>
   1326a:	nop    WORD PTR [rax+rax*1+0x0]
   13270:	push   rbx
   13271:	mov    rbx,rdi
   13274:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   13279:	mov    rdx,rbx
   1327c:	xor    esi,esi
   1327e:	mov    rdi,rax
   13281:	pop    rbx
   13282:	jmp    3840 <memset@plt>
   13287:	nop    WORD PTR [rax+rax*1+0x0]
   13290:	mov    rax,rdi
   13293:	sub    rsp,0x8
   13297:	mul    rsi
   1329a:	seto   dl
   1329d:	test   rax,rax
   132a0:	js     132b9 <__cxa_finalize@plt+0xf4a1>
   132a2:	movzx  edx,dl
   132a5:	test   rdx,rdx
   132a8:	jne    132b9 <__cxa_finalize@plt+0xf4a1>
   132aa:	call   3970 <calloc@plt>
   132af:	test   rax,rax
   132b2:	je     132b9 <__cxa_finalize@plt+0xf4a1>
   132b4:	add    rsp,0x8
   132b8:	ret    
   132b9:	call   13310 <__cxa_finalize@plt+0xf4f8>
   132be:	xchg   ax,ax
   132c0:	push   rbp
   132c1:	push   rbx
   132c2:	mov    rbp,rdi
   132c5:	mov    rdi,rsi
   132c8:	mov    rbx,rsi
   132cb:	sub    rsp,0x8
   132cf:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   132d4:	add    rsp,0x8
   132d8:	mov    rdx,rbx
   132db:	mov    rsi,rbp
   132de:	pop    rbx
   132df:	pop    rbp
   132e0:	mov    rdi,rax
   132e3:	jmp    3a40 <memcpy@plt>
   132e8:	nop    DWORD PTR [rax+rax*1+0x0]
   132f0:	push   rbx
   132f1:	mov    rbx,rdi
   132f4:	call   3720 <strlen@plt>
   132f9:	mov    rdi,rbx
   132fc:	lea    rsi,[rax+0x1]
   13300:	pop    rbx
   13301:	jmp    132c0 <__cxa_finalize@plt+0xf4a8>
   13303:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1330d:	nop    DWORD PTR [rax]
   13310:	lea    rsi,[rip+0x9998]        # 1ccaf <version_etc_copyright@@Base+0x2f>
   13317:	sub    rsp,0x8
   1331b:	mov    edx,0x5
   13320:	xor    edi,edi
   13322:	call   3700 <dcgettext@plt>
   13327:	mov    edi,DWORD PTR [rip+0x20ed03]        # 222030 <exit_failure@@Base>
   1332d:	lea    rdx,[rip+0x8ee2]        # 1c216 <_IO_stdin_used@@Base+0x2876>
   13334:	mov    rcx,rax
   13337:	xor    esi,esi
   13339:	xor    eax,eax
   1333b:	call   3c20 <error@plt>
   13340:	call   3530 <abort@plt>
   13345:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1334f:	nop
   13350:	sub    rsp,0x8
   13354:	or     esi,0x200
   1335a:	call   14e90 <fts_open@@Base>
   1335f:	test   rax,rax
   13362:	je     13370 <__cxa_finalize@plt+0xf558>
   13364:	add    rsp,0x8
   13368:	ret    
   13369:	nop    DWORD PTR [rax+0x0]
   13370:	call   3540 <__errno_location@plt>
   13375:	cmp    DWORD PTR [rax],0x16
   13378:	je     13380 <__cxa_finalize@plt+0xf568>
   1337a:	call   13310 <__cxa_finalize@plt+0xf4f8>
   1337f:	nop
   13380:	lea    rcx,[rip+0x9959]        # 1cce0 <version_etc_copyright@@Base+0x60>
   13387:	lea    rsi,[rip+0x9932]        # 1ccc0 <version_etc_copyright@@Base+0x40>
   1338e:	lea    rdi,[rip+0x9936]        # 1cccb <version_etc_copyright@@Base+0x4b>
   13395:	mov    edx,0x29
   1339a:	call   3830 <__assert_fail@plt>
   1339f:	nop
   133a0:	mov    edx,DWORD PTR [rdi+0x48]
   133a3:	mov    eax,0x1
   133a8:	and    edx,0x11
   133ab:	cmp    edx,0x10
   133ae:	je     133b7 <__cxa_finalize@plt+0xf59f>
   133b0:	xor    eax,eax
   133b2:	cmp    edx,0x11
   133b5:	je     133c0 <__cxa_finalize@plt+0xf5a8>
   133b7:	repz ret 
   133b9:	nop    DWORD PTR [rax+0x0]
   133c0:	cmp    QWORD PTR [rsi+0x58],0x0
   133c5:	setne  al
   133c8:	ret    
   133c9:	nop    DWORD PTR [rax+0x0]
   133d0:	push   rbx
   133d1:	xor    esi,esi
   133d3:	xor    edi,edi
   133d5:	call   3890 <getcwd@plt>
   133da:	test   rax,rax
   133dd:	mov    rbx,rax
   133e0:	je     133f0 <__cxa_finalize@plt+0xf5d8>
   133e2:	mov    rax,rbx
   133e5:	pop    rbx
   133e6:	ret    
   133e7:	nop    WORD PTR [rax+rax*1+0x0]
   133f0:	call   3540 <__errno_location@plt>
   133f5:	cmp    DWORD PTR [rax],0xc
   133f8:	jne    133e2 <__cxa_finalize@plt+0xf5ca>
   133fa:	call   13310 <__cxa_finalize@plt+0xf4f8>
   133ff:	nop
   13400:	push   r15
   13402:	push   r14
   13404:	push   r13
   13406:	push   r12
   13408:	push   rbp
   13409:	push   rbx
   1340a:	sub    rsp,0x28
   1340e:	mov    rax,QWORD PTR fs:0x28
   13417:	mov    QWORD PTR [rsp+0x18],rax
   1341c:	xor    eax,eax
   1341e:	test   rdi,rdi
   13421:	movdqu xmm0,XMMWORD PTR [rsi]
   13425:	movups XMMWORD PTR [rsp],xmm0
   13429:	mov    r14,QWORD PTR [rsi+0x10]
   1342d:	mov    QWORD PTR [rsp+0x10],r14
   13432:	je     134e0 <__cxa_finalize@plt+0xf6c8>
   13438:	mov    r12,rdi
   1343b:	mov    r15,rsi
   1343e:	mov    rbp,rdi
   13441:	xor    ebx,ebx
   13443:	mov    r13,0xffffffffffffffff
   1344a:	mov    edx,DWORD PTR [rsp]
   1344d:	cmp    edx,0x2f
   13450:	ja     13530 <__cxa_finalize@plt+0xf718>
   13456:	mov    eax,edx
   13458:	add    edx,0x8
   1345b:	add    rax,r14
   1345e:	mov    DWORD PTR [rsp],edx
   13461:	mov    rdi,QWORD PTR [rax]
   13464:	call   3720 <strlen@plt>
   13469:	add    rbx,rax
   1346c:	cmovb  rbx,r13
   13470:	sub    rbp,0x1
   13474:	jne    1344a <__cxa_finalize@plt+0xf632>
   13476:	cmp    rbx,0x7fffffff
   1347d:	ja     13520 <__cxa_finalize@plt+0xf708>
   13483:	lea    rdi,[rbx+0x1]
   13487:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   1348c:	mov    r14,rax
   1348f:	mov    rbx,rax
   13492:	jmp    134c5 <__cxa_finalize@plt+0xf6ad>
   13494:	mov    eax,edx
   13496:	add    rax,QWORD PTR [r15+0x10]
   1349a:	add    edx,0x8
   1349d:	mov    DWORD PTR [r15],edx
   134a0:	mov    r13,QWORD PTR [rax]
   134a3:	mov    rdi,r13
   134a6:	call   3720 <strlen@plt>
   134ab:	mov    rdi,rbx
   134ae:	mov    rbp,rax
   134b1:	mov    rdx,rax
   134b4:	mov    rsi,r13
   134b7:	add    rbx,rbp
   134ba:	call   3a40 <memcpy@plt>
   134bf:	sub    r12,0x1
   134c3:	je     134f0 <__cxa_finalize@plt+0xf6d8>
   134c5:	mov    edx,DWORD PTR [r15]
   134c8:	cmp    edx,0x2f
   134cb:	jbe    13494 <__cxa_finalize@plt+0xf67c>
   134cd:	mov    rax,QWORD PTR [r15+0x8]
   134d1:	lea    rdx,[rax+0x8]
   134d5:	mov    QWORD PTR [r15+0x8],rdx
   134d9:	jmp    134a0 <__cxa_finalize@plt+0xf688>
   134db:	nop    DWORD PTR [rax+rax*1+0x0]
   134e0:	mov    edi,0x1
   134e5:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   134ea:	mov    rbx,rax
   134ed:	mov    r14,rax
   134f0:	mov    BYTE PTR [rbx],0x0
   134f3:	mov    rcx,QWORD PTR [rsp+0x18]
   134f8:	xor    rcx,QWORD PTR fs:0x28
   13501:	mov    rax,r14
   13504:	jne    13515 <__cxa_finalize@plt+0xf6fd>
   13506:	add    rsp,0x28
   1350a:	pop    rbx
   1350b:	pop    rbp
   1350c:	pop    r12
   1350e:	pop    r13
   13510:	pop    r14
   13512:	pop    r15
   13514:	ret    
   13515:	call   3760 <__stack_chk_fail@plt>
   1351a:	nop    WORD PTR [rax+rax*1+0x0]
   13520:	call   3540 <__errno_location@plt>
   13525:	xor    r14d,r14d
   13528:	mov    DWORD PTR [rax],0x4b
   1352e:	jmp    134f3 <__cxa_finalize@plt+0xf6db>
   13530:	mov    rax,QWORD PTR [rsp+0x8]
   13535:	lea    rdx,[rax+0x8]
   13539:	mov    QWORD PTR [rsp+0x8],rdx
   1353e:	jmp    13461 <__cxa_finalize@plt+0xf649>
   13543:	nop    DWORD PTR [rax]
   13546:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13550:	sub    rsp,0x18
   13554:	mov    rax,QWORD PTR fs:0x28
   1355d:	mov    QWORD PTR [rsp+0x8],rax
   13562:	xor    eax,eax
   13564:	movzx  eax,BYTE PTR [rdi]
   13567:	test   al,al
   13569:	je     135e6 <__cxa_finalize@plt+0xf7ce>
   1356b:	cmp    al,0x25
   1356d:	mov    r8,rdi
   13570:	jne    135a8 <__cxa_finalize@plt+0xf790>
   13572:	cmp    BYTE PTR [rdi+0x1],0x73
   13576:	jne    135a8 <__cxa_finalize@plt+0xf790>
   13578:	xor    edi,edi
   1357a:	jmp    1358d <__cxa_finalize@plt+0xf775>
   1357c:	nop    DWORD PTR [rax+0x0]
   13580:	cmp    cl,0x25
   13583:	jne    135a8 <__cxa_finalize@plt+0xf790>
   13585:	cmp    BYTE PTR [r8+rdi*2+0x1],0x73
   1358b:	jne    135a8 <__cxa_finalize@plt+0xf790>
   1358d:	add    rdi,0x1
   13591:	movzx  ecx,BYTE PTR [r8+rdi*2]
   13596:	test   cl,cl
   13598:	jne    13580 <__cxa_finalize@plt+0xf768>
   1359a:	call   13400 <__cxa_finalize@plt+0xf5e8>
   1359f:	jmp    135be <__cxa_finalize@plt+0xf7a6>
   135a1:	nop    DWORD PTR [rax+0x0]
   135a8:	mov    rdx,rsi
   135ab:	mov    rdi,rsp
   135ae:	mov    rsi,r8
   135b1:	call   15e20 <fts_children@@Base+0x2b0>
   135b6:	test   eax,eax
   135b8:	js     135d8 <__cxa_finalize@plt+0xf7c0>
   135ba:	mov    rax,QWORD PTR [rsp]
   135be:	mov    rdx,QWORD PTR [rsp+0x8]
   135c3:	xor    rdx,QWORD PTR fs:0x28
   135cc:	jne    135ea <__cxa_finalize@plt+0xf7d2>
   135ce:	add    rsp,0x18
   135d2:	ret    
   135d3:	nop    DWORD PTR [rax+rax*1+0x0]
   135d8:	call   3540 <__errno_location@plt>
   135dd:	cmp    DWORD PTR [rax],0xc
   135e0:	je     135ef <__cxa_finalize@plt+0xf7d7>
   135e2:	xor    eax,eax
   135e4:	jmp    135be <__cxa_finalize@plt+0xf7a6>
   135e6:	xor    edi,edi
   135e8:	jmp    1359a <__cxa_finalize@plt+0xf782>
   135ea:	call   3760 <__stack_chk_fail@plt>
   135ef:	call   13310 <__cxa_finalize@plt+0xf4f8>
   135f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
   135fe:	xchg   ax,ax
   13600:	push   rbx
   13601:	mov    edx,0xa
   13606:	xor    ebx,ebx
   13608:	sub    rsp,0x20
   1360c:	mov    rcx,QWORD PTR [rip+0x20ea9d]        # 2220b0 <stdin@@GLIBC_2.2.5>
   13613:	lea    rsi,[rsp+0x10]
   13618:	lea    rdi,[rsp+0x8]
   1361d:	mov    QWORD PTR [rsp+0x8],0x0
   13626:	mov    rax,QWORD PTR fs:0x28
   1362f:	mov    QWORD PTR [rsp+0x18],rax
   13634:	xor    eax,eax
   13636:	mov    QWORD PTR [rsp+0x10],0x0
   1363f:	call   39a0 <__getdelim@plt>
   13644:	test   rax,rax
   13647:	jle    13662 <__cxa_finalize@plt+0xf84a>
   13649:	mov    rdi,QWORD PTR [rsp+0x8]
   1364e:	lea    rax,[rdi+rax*1-0x1]
   13653:	cmp    BYTE PTR [rax],0xa
   13656:	je     13688 <__cxa_finalize@plt+0xf870>
   13658:	call   39f0 <rpmatch@plt>
   1365d:	test   eax,eax
   1365f:	setg   bl
   13662:	mov    rdi,QWORD PTR [rsp+0x8]
   13667:	call   3e10 <free@plt>
   1366c:	mov    rdx,QWORD PTR [rsp+0x18]
   13671:	xor    rdx,QWORD PTR fs:0x28
   1367a:	mov    eax,ebx
   1367c:	jne    13692 <__cxa_finalize@plt+0xf87a>
   1367e:	add    rsp,0x20
   13682:	pop    rbx
   13683:	ret    
   13684:	nop    DWORD PTR [rax+0x0]
   13688:	mov    BYTE PTR [rax],0x0
   1368b:	mov    rdi,QWORD PTR [rsp+0x8]
   13690:	jmp    13658 <__cxa_finalize@plt+0xf840>
   13692:	call   3760 <__stack_chk_fail@plt>
   13697:	nop    WORD PTR [rax+rax*1+0x0]
   136a0:	push   r12
   136a2:	push   rbp
   136a3:	mov    ebp,edi
   136a5:	push   rbx
   136a6:	sub    rsp,0x50
   136aa:	mov    rax,QWORD PTR fs:0x28
   136b3:	mov    QWORD PTR [rsp+0x18],rax
   136b8:	xor    eax,eax
   136ba:	lea    rax,[rsp+0x70]
   136bf:	cmp    esi,0x406
   136c5:	mov    QWORD PTR [rsp+0x30],rdx
   136ca:	mov    QWORD PTR [rsp+0x38],rcx
   136cf:	mov    DWORD PTR [rsp],0x10
   136d6:	mov    QWORD PTR [rsp+0x8],rax
   136db:	lea    rax,[rsp+0x20]
   136e0:	mov    QWORD PTR [rsp+0x10],rax
   136e5:	jne    137d5 <__cxa_finalize@plt+0xf9bd>
   136eb:	cmp    DWORD PTR [rip+0x20f022],0x0        # 222714 <program_name@@Base+0x174>
   136f2:	mov    r12d,DWORD PTR [rax+0x10]
   136f6:	mov    DWORD PTR [rsp],0x18
   136fd:	mov    edx,r12d
   13700:	js     1376a <__cxa_finalize@plt+0xf952>
   13702:	xor    eax,eax
   13704:	call   3630 <fcntl@plt>
   13709:	test   eax,eax
   1370b:	mov    ebx,eax
   1370d:	js     13740 <__cxa_finalize@plt+0xf928>
   1370f:	mov    DWORD PTR [rip+0x20effb],0x1        # 222714 <program_name@@Base+0x174>
   13719:	mov    rcx,QWORD PTR [rsp+0x18]
   1371e:	xor    rcx,QWORD PTR fs:0x28
   13727:	mov    eax,ebx
   13729:	jne    137d0 <__cxa_finalize@plt+0xf9b8>
   1372f:	add    rsp,0x50
   13733:	pop    rbx
   13734:	pop    rbp
   13735:	pop    r12
   13737:	ret    
   13738:	nop    DWORD PTR [rax+rax*1+0x0]
   13740:	call   3540 <__errno_location@plt>
   13745:	cmp    DWORD PTR [rax],0x16
   13748:	jne    1370f <__cxa_finalize@plt+0xf8f7>
   1374a:	xor    esi,esi
   1374c:	xor    eax,eax
   1374e:	mov    edx,r12d
   13751:	mov    edi,ebp
   13753:	call   136a0 <__cxa_finalize@plt+0xf888>
   13758:	test   eax,eax
   1375a:	mov    ebx,eax
   1375c:	js     13719 <__cxa_finalize@plt+0xf901>
   1375e:	mov    DWORD PTR [rip+0x20efac],0xffffffff        # 222714 <program_name@@Base+0x174>
   13768:	jmp    13782 <__cxa_finalize@plt+0xf96a>
   1376a:	xor    esi,esi
   1376c:	xor    eax,eax
   1376e:	call   136a0 <__cxa_finalize@plt+0xf888>
   13773:	test   eax,eax
   13775:	mov    ebx,eax
   13777:	js     13719 <__cxa_finalize@plt+0xf901>
   13779:	cmp    DWORD PTR [rip+0x20ef94],0xffffffff        # 222714 <program_name@@Base+0x174>
   13780:	jne    13719 <__cxa_finalize@plt+0xf901>
   13782:	xor    eax,eax
   13784:	mov    esi,0x1
   13789:	mov    edi,ebx
   1378b:	call   3630 <fcntl@plt>
   13790:	test   eax,eax
   13792:	js     137b0 <__cxa_finalize@plt+0xf998>
   13794:	or     eax,0x1
   13797:	mov    esi,0x2
   1379c:	mov    edi,ebx
   1379e:	mov    edx,eax
   137a0:	xor    eax,eax
   137a2:	call   3630 <fcntl@plt>
   137a7:	cmp    eax,0xffffffff
   137aa:	jne    13719 <__cxa_finalize@plt+0xf901>
   137b0:	call   3540 <__errno_location@plt>
   137b5:	mov    r12d,DWORD PTR [rax]
   137b8:	mov    rbp,rax
   137bb:	mov    edi,ebx
   137bd:	call   38b0 <close@plt>
   137c2:	mov    ebx,0xffffffff
   137c7:	mov    DWORD PTR [rbp+0x0],r12d
   137cb:	jmp    13719 <__cxa_finalize@plt+0xf901>
   137d0:	call   3760 <__stack_chk_fail@plt>
   137d5:	mov    rax,QWORD PTR [rsp+0x10]
   137da:	mov    rdx,QWORD PTR [rax+0x10]
   137de:	xor    eax,eax
   137e0:	call   3630 <fcntl@plt>
   137e5:	mov    ebx,eax
   137e7:	jmp    13719 <__cxa_finalize@plt+0xf901>
   137ec:	nop    DWORD PTR [rax+0x0]
   137f0:	test   rdi,rdi
   137f3:	push   rbx
   137f4:	mov    rbx,rdi
   137f7:	je     1380a <__cxa_finalize@plt+0xf9f2>
   137f9:	call   3b40 <__freading@plt>
   137fe:	test   eax,eax
   13800:	je     1380a <__cxa_finalize@plt+0xf9f2>
   13802:	test   DWORD PTR [rbx],0x100
   13808:	jne    13818 <__cxa_finalize@plt+0xfa00>
   1380a:	mov    rdi,rbx
   1380d:	pop    rbx
   1380e:	jmp    3ad0 <fflush@plt>
   13813:	nop    DWORD PTR [rax+rax*1+0x0]
   13818:	mov    rdi,rbx
   1381b:	mov    edx,0x1
   13820:	xor    esi,esi
   13822:	call   13860 <__cxa_finalize@plt+0xfa48>
   13827:	mov    rdi,rbx
   1382a:	pop    rbx
   1382b:	jmp    3ad0 <fflush@plt>
   13830:	xor    eax,eax
   13832:	mov    rcx,QWORD PTR [rdi+0x20]
   13836:	cmp    QWORD PTR [rdi+0x28],rcx
   1383a:	ja     13857 <__cxa_finalize@plt+0xfa3f>
   1383c:	mov    rax,QWORD PTR [rdi+0x10]
   13840:	sub    rax,QWORD PTR [rdi+0x8]
   13844:	test   DWORD PTR [rdi],0x100
   1384a:	je     13857 <__cxa_finalize@plt+0xfa3f>
   1384c:	mov    rdx,QWORD PTR [rdi+0x58]
   13850:	sub    rdx,QWORD PTR [rdi+0x48]
   13854:	add    rax,rdx
   13857:	repz ret 
   13859:	nop    DWORD PTR [rax+0x0]
   13860:	mov    rax,QWORD PTR [rdi+0x8]
   13864:	cmp    QWORD PTR [rdi+0x10],rax
   13868:	je     13870 <__cxa_finalize@plt+0xfa58>
   1386a:	jmp    3c70 <fseeko@plt>
   1386f:	nop
   13870:	mov    rax,QWORD PTR [rdi+0x20]
   13874:	cmp    QWORD PTR [rdi+0x28],rax
   13878:	jne    1386a <__cxa_finalize@plt+0xfa52>
   1387a:	cmp    QWORD PTR [rdi+0x48],0x0
   1387f:	jne    1386a <__cxa_finalize@plt+0xfa52>
   13881:	push   r12
   13883:	push   rbp
   13884:	mov    r12d,edx
   13887:	push   rbx
   13888:	mov    rbp,rsi
   1388b:	mov    rbx,rdi
   1388e:	call   3a70 <fileno@plt>
   13893:	mov    edx,r12d
   13896:	mov    rsi,rbp
   13899:	mov    edi,eax
   1389b:	call   3810 <lseek@plt>
   138a0:	cmp    rax,0xffffffffffffffff
   138a4:	je     138b2 <__cxa_finalize@plt+0xfa9a>
   138a6:	and    DWORD PTR [rbx],0xffffffef
   138a9:	mov    QWORD PTR [rbx+0x90],rax
   138b0:	xor    eax,eax
   138b2:	pop    rbx
   138b3:	pop    rbp
   138b4:	pop    r12
   138b6:	ret    
   138b7:	nop    WORD PTR [rax+rax*1+0x0]
   138c0:	xor    eax,eax
   138c2:	mov    rdx,QWORD PTR [rsi+0x8]
   138c6:	cmp    QWORD PTR [rdi+0x8],rdx
   138ca:	je     138d0 <__cxa_finalize@plt+0xfab8>
   138cc:	repz ret 
   138ce:	xchg   ax,ax
   138d0:	mov    rax,QWORD PTR [rsi]
   138d3:	cmp    QWORD PTR [rdi],rax
   138d6:	sete   al
   138d9:	ret    
   138da:	nop    WORD PTR [rax+rax*1+0x0]
   138e0:	mov    rax,QWORD PTR [rdi+0x8]
   138e4:	xor    edx,edx
   138e6:	div    rsi
   138e9:	mov    rax,rdx
   138ec:	ret    
   138ed:	nop    DWORD PTR [rax]
   138f0:	mov    rax,QWORD PTR [rdi]
   138f3:	xor    edx,edx
   138f5:	div    rsi
   138f8:	mov    rax,rdx
   138fb:	ret    
   138fc:	nop    DWORD PTR [rax+0x0]
   13900:	mov    rax,QWORD PTR [rsi]
   13903:	cmp    QWORD PTR [rdi],rax
   13906:	sete   al
   13909:	ret    
   1390a:	nop    WORD PTR [rax+rax*1+0x0]
   13910:	mov    rdx,QWORD PTR [rdi]
   13913:	mov    rax,QWORD PTR [rsi]
   13916:	mov    rax,QWORD PTR [rax+0x80]
   1391d:	cmp    QWORD PTR [rdx+0x80],rax
   13924:	jb     13930 <__cxa_finalize@plt+0xfb18>
   13926:	seta   al
   13929:	movzx  eax,al
   1392c:	ret    
   1392d:	nop    DWORD PTR [rax]
   13930:	mov    eax,0xffffffff
   13935:	ret    
   13936:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13940:	push   r12
   13942:	push   rbp
   13943:	mov    rbp,rsi
   13946:	push   rbx
   13947:	cmp    QWORD PTR [rbp+0x58],0x0
   1394c:	lea    rbx,[rsi+0x78]
   13950:	mov    r12,rdi
   13953:	mov    eax,DWORD PTR [rdi+0x48]
   13956:	mov    rsi,QWORD PTR [rsi+0x30]
   1395a:	jne    139c0 <__cxa_finalize@plt+0xfba8>
   1395c:	test   al,0x1
   1395e:	je     139c0 <__cxa_finalize@plt+0xfba8>
   13960:	mov    rdx,rbx
   13963:	mov    edi,0x1
   13968:	call   3a90 <__xstat@plt>
   1396d:	test   eax,eax
   1396f:	je     139eb <__cxa_finalize@plt+0xfbd3>
   13971:	call   3540 <__errno_location@plt>
   13976:	mov    r12,rax
   13979:	mov    eax,DWORD PTR [rax]
   1397b:	cmp    eax,0x2
   1397e:	je     13a90 <__cxa_finalize@plt+0xfc78>
   13984:	lea    rdi,[rbx+0x8]
   13988:	mov    DWORD PTR [rbp+0x40],eax
   1398b:	mov    QWORD PTR [rbp+0x78],0x0
   13993:	mov    QWORD PTR [rbx+0x88],0x0
   1399e:	xor    eax,eax
   139a0:	and    rdi,0xfffffffffffffff8
   139a4:	sub    rbx,rdi
   139a7:	lea    ecx,[rbx+0x90]
   139ad:	shr    ecx,0x3
   139b0:	rep stos QWORD PTR es:[rdi],rax
   139b3:	mov    eax,0xa
   139b8:	pop    rbx
   139b9:	pop    rbp
   139ba:	pop    r12
   139bc:	ret    
   139bd:	nop    DWORD PTR [rax]
   139c0:	test   al,0x2
   139c2:	jne    13960 <__cxa_finalize@plt+0xfb48>
   139c4:	test   dl,dl
   139c6:	jne    13960 <__cxa_finalize@plt+0xfb48>
   139c8:	mov    rdx,rsi
   139cb:	mov    esi,DWORD PTR [r12+0x2c]
   139d0:	mov    r8d,0x100
   139d6:	mov    rcx,rbx
   139d9:	mov    edi,0x1
   139de:	call   37c0 <__fxstatat@plt>
   139e3:	test   eax,eax
   139e5:	jne    13a80 <__cxa_finalize@plt+0xfc68>
   139eb:	mov    eax,DWORD PTR [rbp+0x90]
   139f1:	and    eax,0xf000
   139f6:	cmp    eax,0x4000
   139fb:	je     13a20 <__cxa_finalize@plt+0xfc08>
   139fd:	cmp    eax,0xa000
   13a02:	je     13ad8 <__cxa_finalize@plt+0xfcc0>
   13a08:	cmp    eax,0x8000
   13a0d:	sete   al
   13a10:	movzx  eax,al
   13a13:	pop    rbx
   13a14:	lea    eax,[rax+rax*4+0x3]
   13a18:	pop    rbp
   13a19:	pop    r12
   13a1b:	ret    
   13a1c:	nop    DWORD PTR [rax+0x0]
   13a20:	mov    rax,QWORD PTR [rbp+0x88]
   13a27:	cmp    rax,0x1
   13a2b:	jbe    13ab0 <__cxa_finalize@plt+0xfc98>
   13a31:	cmp    QWORD PTR [rbp+0x58],0x0
   13a36:	jle    13ab0 <__cxa_finalize@plt+0xfc98>
   13a38:	test   BYTE PTR [r12+0x48],0x20
   13a3e:	lea    rdx,[rax-0x2]
   13a42:	cmove  rax,rdx
   13a46:	cmp    BYTE PTR [rbp+0x108],0x2e
   13a4d:	mov    QWORD PTR [rbp+0x68],rax
   13a51:	mov    eax,0x1
   13a56:	jne    139b8 <__cxa_finalize@plt+0xfba0>
   13a5c:	cmp    BYTE PTR [rbp+0x109],0x0
   13a63:	jne    13ae8 <__cxa_finalize@plt+0xfcd0>
   13a69:	cmp    QWORD PTR [rbp+0x58],0x1
   13a6e:	sbb    eax,eax
   13a70:	and    eax,0xfffffffc
   13a73:	add    eax,0x5
   13a76:	jmp    139b8 <__cxa_finalize@plt+0xfba0>
   13a7b:	nop    DWORD PTR [rax+rax*1+0x0]
   13a80:	call   3540 <__errno_location@plt>
   13a85:	mov    eax,DWORD PTR [rax]
   13a87:	jmp    13984 <__cxa_finalize@plt+0xfb6c>
   13a8c:	nop    DWORD PTR [rax+0x0]
   13a90:	mov    rsi,QWORD PTR [rbp+0x30]
   13a94:	mov    rdx,rbx
   13a97:	mov    edi,0x1
   13a9c:	call   3740 <__lxstat@plt>
   13aa1:	test   eax,eax
   13aa3:	je     13ac0 <__cxa_finalize@plt+0xfca8>
   13aa5:	mov    eax,DWORD PTR [r12]
   13aa9:	jmp    13984 <__cxa_finalize@plt+0xfb6c>
   13aae:	xchg   ax,ax
   13ab0:	mov    rax,0xffffffffffffffff
   13ab7:	jmp    13a46 <__cxa_finalize@plt+0xfc2e>
   13ab9:	nop    DWORD PTR [rax+0x0]
   13ac0:	mov    DWORD PTR [r12],0x0
   13ac8:	mov    eax,0xd
   13acd:	jmp    139b8 <__cxa_finalize@plt+0xfba0>
   13ad2:	nop    WORD PTR [rax+rax*1+0x0]
   13ad8:	mov    eax,0xc
   13add:	jmp    139b8 <__cxa_finalize@plt+0xfba0>
   13ae2:	nop    WORD PTR [rax+rax*1+0x0]
   13ae8:	mov    edx,DWORD PTR [rbp+0x108]
   13aee:	and    edx,0xffff00
   13af4:	cmp    edx,0x2e00
   13afa:	jne    139b8 <__cxa_finalize@plt+0xfba0>
   13b00:	jmp    13a69 <__cxa_finalize@plt+0xfc51>
   13b05:	nop
   13b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13b10:	push   r13
   13b12:	push   r12
   13b14:	mov    r12,rdx
   13b17:	push   rbp
   13b18:	push   rbx
   13b19:	mov    rbp,rdi
   13b1c:	mov    rbx,rsi
   13b1f:	sub    rsp,0x8
   13b23:	cmp    QWORD PTR [rbp+0x38],rdx
   13b27:	mov    r13,QWORD PTR [rdi+0x40]
   13b2b:	mov    rdi,QWORD PTR [rdi+0x10]
   13b2f:	jae    13b65 <__cxa_finalize@plt+0xfd4d>
   13b31:	lea    rsi,[rdx+0x28]
   13b35:	movabs rax,0x1fffffffffffffff
   13b3f:	cmp    rsi,rax
   13b42:	mov    QWORD PTR [rbp+0x38],rsi
   13b46:	ja     13be4 <__cxa_finalize@plt+0xfdcc>
   13b4c:	shl    rsi,0x3
   13b50:	call   3b70 <realloc@plt>
   13b55:	test   rax,rax
   13b58:	mov    rdi,rax
   13b5b:	je     13be0 <__cxa_finalize@plt+0xfdc8>
   13b61:	mov    QWORD PTR [rbp+0x10],rax
   13b65:	test   rbx,rbx
   13b68:	je     13b81 <__cxa_finalize@plt+0xfd69>
   13b6a:	mov    rdx,rdi
   13b6d:	nop    DWORD PTR [rax]
   13b70:	add    rdx,0x8
   13b74:	mov    QWORD PTR [rdx-0x8],rbx
   13b78:	mov    rbx,QWORD PTR [rbx+0x10]
   13b7c:	test   rbx,rbx
   13b7f:	jne    13b70 <__cxa_finalize@plt+0xfd58>
   13b81:	mov    rcx,r13
   13b84:	mov    edx,0x8
   13b89:	mov    rsi,r12
   13b8c:	call   3610 <qsort@plt>
   13b91:	mov    r8,QWORD PTR [rbp+0x10]
   13b95:	mov    rcx,r12
   13b98:	sub    rcx,0x1
   13b9c:	mov    rax,QWORD PTR [r8]
   13b9f:	je     13c10 <__cxa_finalize@plt+0xfdf8>
   13ba1:	mov    rdi,rax
   13ba4:	mov    rdx,r8
   13ba7:	jmp    13bb3 <__cxa_finalize@plt+0xfd9b>
   13ba9:	nop    DWORD PTR [rax+0x0]
   13bb0:	mov    rdi,QWORD PTR [rdx]
   13bb3:	mov    rsi,QWORD PTR [rdx+0x8]
   13bb7:	add    rdx,0x8
   13bbb:	sub    rcx,0x1
   13bbf:	mov    QWORD PTR [rdi+0x10],rsi
   13bc3:	jne    13bb0 <__cxa_finalize@plt+0xfd98>
   13bc5:	mov    rdx,QWORD PTR [r8+r12*8-0x8]
   13bca:	mov    QWORD PTR [rdx+0x10],0x0
   13bd2:	add    rsp,0x8
   13bd6:	pop    rbx
   13bd7:	pop    rbp
   13bd8:	pop    r12
   13bda:	pop    r13
   13bdc:	ret    
   13bdd:	nop    DWORD PTR [rax]
   13be0:	mov    rdi,QWORD PTR [rbp+0x10]
   13be4:	call   3e10 <free@plt>
   13be9:	mov    QWORD PTR [rbp+0x10],0x0
   13bf1:	mov    QWORD PTR [rbp+0x38],0x0
   13bf9:	add    rsp,0x8
   13bfd:	mov    rax,rbx
   13c00:	pop    rbx
   13c01:	pop    rbp
   13c02:	pop    r12
   13c04:	pop    r13
   13c06:	ret    
   13c07:	nop    WORD PTR [rax+rax*1+0x0]
   13c10:	mov    rdx,rax
   13c13:	jmp    13bca <__cxa_finalize@plt+0xfdb2>
   13c15:	nop
   13c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13c20:	push   r13
   13c22:	push   r12
   13c24:	mov    r12,rdi
   13c27:	push   rbp
   13c28:	lea    rdi,[rdx+0x110]
   13c2f:	push   rbx
   13c30:	mov    r13,rsi
   13c33:	mov    rbp,rdx
   13c36:	sub    rsp,0x8
   13c3a:	and    rdi,0xfffffffffffffff8
   13c3e:	call   3ac0 <malloc@plt>
   13c43:	test   rax,rax
   13c46:	mov    rbx,rax
   13c49:	je     13c9c <__cxa_finalize@plt+0xfe84>
   13c4b:	lea    rdi,[rax+0x108]
   13c52:	mov    rdx,rbp
   13c55:	mov    rsi,r13
   13c58:	call   3a40 <memcpy@plt>
   13c5d:	mov    rax,QWORD PTR [r12+0x20]
   13c62:	mov    BYTE PTR [rbx+rbp*1+0x108],0x0
   13c6a:	mov    QWORD PTR [rbx+0x60],rbp
   13c6e:	mov    QWORD PTR [rbx+0x50],r12
   13c72:	mov    DWORD PTR [rbx+0x40],0x0
   13c79:	mov    QWORD PTR [rbx+0x18],0x0
   13c81:	mov    QWORD PTR [rbx+0x38],rax
   13c85:	mov    DWORD PTR [rbx+0x72],0x30000
   13c8c:	mov    QWORD PTR [rbx+0x20],0x0
   13c94:	mov    QWORD PTR [rbx+0x28],0x0
   13c9c:	add    rsp,0x8
   13ca0:	mov    rax,rbx
   13ca3:	pop    rbx
   13ca4:	pop    rbp
   13ca5:	pop    r12
   13ca7:	pop    r13
   13ca9:	ret    
   13caa:	nop    WORD PTR [rax+rax*1+0x0]
   13cb0:	test   rdi,rdi
   13cb3:	je     13cf0 <__cxa_finalize@plt+0xfed8>
   13cb5:	push   rbp
   13cb6:	push   rbx
   13cb7:	mov    rbx,rdi
   13cba:	sub    rsp,0x8
   13cbe:	xchg   ax,ax
   13cc0:	mov    rdi,QWORD PTR [rbx+0x18]
   13cc4:	mov    rbp,QWORD PTR [rbx+0x10]
   13cc8:	test   rdi,rdi
   13ccb:	je     13cd2 <__cxa_finalize@plt+0xfeba>
   13ccd:	call   38e0 <closedir@plt>
   13cd2:	mov    rdi,rbx
   13cd5:	mov    rbx,rbp
   13cd8:	call   3e10 <free@plt>
   13cdd:	test   rbp,rbp
   13ce0:	jne    13cc0 <__cxa_finalize@plt+0xfea8>
   13ce2:	add    rsp,0x8
   13ce6:	pop    rbx
   13ce7:	pop    rbp
   13ce8:	ret    
   13ce9:	nop    DWORD PTR [rax+0x0]
   13cf0:	repz ret 
   13cf2:	nop    DWORD PTR [rax+0x0]
   13cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13d00:	push   rbx
   13d01:	mov    rbx,rdi
   13d04:	jmp    13d1c <__cxa_finalize@plt+0xff04>
   13d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13d10:	mov    rdi,rbx
   13d13:	call   165d0 <fts_children@@Base+0xa60>
   13d18:	test   eax,eax
   13d1a:	jns    13d30 <__cxa_finalize@plt+0xff18>
   13d1c:	mov    rdi,rbx
   13d1f:	call   16580 <fts_children@@Base+0xa10>
   13d24:	test   al,al
   13d26:	je     13d10 <__cxa_finalize@plt+0xfef8>
   13d28:	pop    rbx
   13d29:	ret    
   13d2a:	nop    WORD PTR [rax+rax*1+0x0]
   13d30:	mov    edi,eax
   13d32:	call   38b0 <close@plt>
   13d37:	jmp    13d1c <__cxa_finalize@plt+0xff04>
   13d39:	nop    DWORD PTR [rax+0x0]
   13d40:	push   r12
   13d42:	push   rbp
   13d43:	push   rbx
   13d44:	sub    rsp,0x90
   13d4b:	mov    rbp,QWORD PTR [rdi+0x50]
   13d4f:	mov    rax,QWORD PTR fs:0x28
   13d58:	mov    QWORD PTR [rsp+0x88],rax
   13d60:	xor    eax,eax
   13d62:	test   BYTE PTR [rbp+0x49],0x2
   13d66:	je     13da0 <__cxa_finalize@plt+0xff88>
   13d68:	mov    r12,QWORD PTR [rbp+0x50]
   13d6c:	mov    rbx,rdi
   13d6f:	test   r12,r12
   13d72:	je     13dc8 <__cxa_finalize@plt+0xffb0>
   13d74:	mov    rax,QWORD PTR [rbx+0x78]
   13d78:	mov    rsi,rsp
   13d7b:	mov    rdi,r12
   13d7e:	mov    QWORD PTR [rsp],rax
   13d82:	call   e1a0 <__cxa_finalize@plt+0xa388>
   13d87:	test   rax,rax
   13d8a:	je     13e18 <__cxa_finalize@plt+0x10000>
   13d90:	mov    rax,QWORD PTR [rax+0x8]
   13d94:	jmp    13da2 <__cxa_finalize@plt+0xff8a>
   13d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13da0:	xor    eax,eax
   13da2:	mov    rcx,QWORD PTR [rsp+0x88]
   13daa:	xor    rcx,QWORD PTR fs:0x28
   13db3:	jne    13e8a <__cxa_finalize@plt+0x10072>
   13db9:	add    rsp,0x90
   13dc0:	pop    rbx
   13dc1:	pop    rbp
   13dc2:	pop    r12
   13dc4:	ret    
   13dc5:	nop    DWORD PTR [rax]
   13dc8:	mov    r8,QWORD PTR [rip+0x20e201]        # 221fd0 <free@GLIBC_2.2.5>
   13dcf:	lea    rcx,[rip+0xfffffffffffffb2a]        # 13900 <__cxa_finalize@plt+0xfae8>
   13dd6:	lea    rdx,[rip+0xfffffffffffffb13]        # 138f0 <__cxa_finalize@plt+0xfad8>
   13ddd:	xor    esi,esi
   13ddf:	mov    edi,0xd
   13de4:	call   e410 <__cxa_finalize@plt+0xa5f8>
   13de9:	test   rax,rax
   13dec:	mov    r12,rax
   13def:	mov    QWORD PTR [rbp+0x50],rax
   13df3:	jne    13d74 <__cxa_finalize@plt+0xff5c>
   13df9:	mov    rax,QWORD PTR [rbx+0x50]
   13dfd:	lea    rsi,[rsp+0x10]
   13e02:	mov    edi,DWORD PTR [rax+0x2c]
   13e05:	call   3ce0 <fstatfs@plt>
   13e0a:	test   eax,eax
   13e0c:	jne    13da0 <__cxa_finalize@plt+0xff88>
   13e0e:	mov    rax,QWORD PTR [rsp+0x10]
   13e13:	jmp    13da2 <__cxa_finalize@plt+0xff8a>
   13e15:	nop    DWORD PTR [rax]
   13e18:	mov    rax,QWORD PTR [rbx+0x50]
   13e1c:	lea    rsi,[rsp+0x10]
   13e21:	mov    edi,DWORD PTR [rax+0x2c]
   13e24:	call   3ce0 <fstatfs@plt>
   13e29:	test   eax,eax
   13e2b:	jne    13da0 <__cxa_finalize@plt+0xff88>
   13e31:	mov    edi,0x10
   13e36:	call   3ac0 <malloc@plt>
   13e3b:	mov    rbp,rax
   13e3e:	mov    rax,QWORD PTR [rsp+0x10]
   13e43:	test   rbp,rbp
   13e46:	je     13da2 <__cxa_finalize@plt+0xff8a>
   13e4c:	mov    rdx,QWORD PTR [rbx+0x78]
   13e50:	mov    QWORD PTR [rbp+0x8],rax
   13e54:	mov    rsi,rbp
   13e57:	mov    rdi,r12
   13e5a:	mov    QWORD PTR [rbp+0x0],rdx
   13e5e:	call   ec10 <__cxa_finalize@plt+0xadf8>
   13e63:	test   rax,rax
   13e66:	je     13e78 <__cxa_finalize@plt+0x10060>
   13e68:	cmp    rbp,rax
   13e6b:	je     13e0e <__cxa_finalize@plt+0xfff6>
   13e6d:	call   3530 <abort@plt>
   13e72:	nop    WORD PTR [rax+rax*1+0x0]
   13e78:	mov    rdi,rbp
   13e7b:	call   3e10 <free@plt>
   13e80:	mov    rax,QWORD PTR [rsp+0x10]
   13e85:	jmp    13da2 <__cxa_finalize@plt+0xff8a>
   13e8a:	call   3760 <__stack_chk_fail@plt>
   13e8f:	nop
   13e90:	sub    rsp,0x8
   13e94:	call   13d40 <__cxa_finalize@plt+0xff28>
   13e99:	cmp    rax,0x9fa0
   13e9f:	je     13ed5 <__cxa_finalize@plt+0x100bd>
   13ea1:	jle    13ec8 <__cxa_finalize@plt+0x100b0>
   13ea3:	cmp    rax,0x5346414f
   13ea9:	je     13ed5 <__cxa_finalize@plt+0x100bd>
   13eab:	cmp    rax,0x58465342
   13eb1:	je     13ee0 <__cxa_finalize@plt+0x100c8>
   13eb3:	cmp    rax,0x52654973
   13eb9:	je     13ee0 <__cxa_finalize@plt+0x100c8>
   13ebb:	mov    eax,0x1
   13ec0:	add    rsp,0x8
   13ec4:	ret    
   13ec5:	nop    DWORD PTR [rax]
   13ec8:	test   rax,rax
   13ecb:	je     13ed5 <__cxa_finalize@plt+0x100bd>
   13ecd:	cmp    rax,0x6969
   13ed3:	jne    13ebb <__cxa_finalize@plt+0x100a3>
   13ed5:	xor    eax,eax
   13ed7:	add    rsp,0x8
   13edb:	ret    
   13edc:	nop    DWORD PTR [rax+0x0]
   13ee0:	mov    eax,0x2
   13ee5:	add    rsp,0x8
   13ee9:	ret    
   13eea:	nop    WORD PTR [rax+rax*1+0x0]
   13ef0:	push   rbp
   13ef1:	push   rbx
   13ef2:	mov    ebp,esi
   13ef4:	mov    rbx,rdi
   13ef7:	sub    rsp,0x8
   13efb:	mov    esi,DWORD PTR [rdi+0x2c]
   13efe:	cmp    esi,ebp
   13f00:	jne    13f07 <__cxa_finalize@plt+0x100ef>
   13f02:	cmp    esi,0xffffff9c
   13f05:	jne    13f51 <__cxa_finalize@plt+0x10139>
   13f07:	test   dl,dl
   13f09:	jne    13f20 <__cxa_finalize@plt+0x10108>
   13f0b:	test   BYTE PTR [rbx+0x48],0x4
   13f0f:	jne    13f15 <__cxa_finalize@plt+0x100fd>
   13f11:	test   esi,esi
   13f13:	jns    13f40 <__cxa_finalize@plt+0x10128>
   13f15:	mov    DWORD PTR [rbx+0x2c],ebp
   13f18:	add    rsp,0x8
   13f1c:	pop    rbx
   13f1d:	pop    rbp
   13f1e:	ret    
   13f1f:	nop
   13f20:	lea    rdi,[rbx+0x60]
   13f24:	call   16590 <fts_children@@Base+0xa20>
   13f29:	test   eax,eax
   13f2b:	js     13f15 <__cxa_finalize@plt+0x100fd>
   13f2d:	mov    edi,eax
   13f2f:	call   38b0 <close@plt>
   13f34:	mov    DWORD PTR [rbx+0x2c],ebp
   13f37:	add    rsp,0x8
   13f3b:	pop    rbx
   13f3c:	pop    rbp
   13f3d:	ret    
   13f3e:	xchg   ax,ax
   13f40:	mov    edi,esi
   13f42:	call   38b0 <close@plt>
   13f47:	mov    DWORD PTR [rbx+0x2c],ebp
   13f4a:	add    rsp,0x8
   13f4e:	pop    rbx
   13f4f:	pop    rbp
   13f50:	ret    
   13f51:	call   3530 <abort@plt>
   13f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13f60:	push   rbp
   13f61:	push   rbx
   13f62:	mov    rbx,rdi
   13f65:	sub    rsp,0x8
   13f69:	mov    edx,DWORD PTR [rdi+0x48]
   13f6c:	mov    ebp,edx
   13f6e:	and    ebp,0x4
   13f71:	jne    13fb8 <__cxa_finalize@plt+0x101a0>
   13f73:	and    dh,0x2
   13f76:	jne    13fa0 <__cxa_finalize@plt+0x10188>
   13f78:	mov    edi,DWORD PTR [rdi+0x28]
   13f7b:	xor    ebp,ebp
   13f7d:	call   3b50 <fchdir@plt>
   13f82:	test   eax,eax
   13f84:	setne  bpl
   13f88:	lea    rdi,[rbx+0x60]
   13f8c:	call   13d00 <__cxa_finalize@plt+0xfee8>
   13f91:	add    rsp,0x8
   13f95:	mov    eax,ebp
   13f97:	pop    rbx
   13f98:	pop    rbp
   13f99:	ret    
   13f9a:	nop    WORD PTR [rax+rax*1+0x0]
   13fa0:	mov    edx,0x1
   13fa5:	mov    esi,0xffffff9c
   13faa:	call   13ef0 <__cxa_finalize@plt+0x100d8>
   13faf:	jmp    13f88 <__cxa_finalize@plt+0x10170>
   13fb1:	nop    DWORD PTR [rax+0x0]
   13fb8:	xor    ebp,ebp
   13fba:	jmp    13f88 <__cxa_finalize@plt+0x10170>
   13fbc:	nop    DWORD PTR [rax+0x0]
   13fc0:	push   rbx
   13fc1:	mov    rcx,QWORD PTR [rsi]
   13fc4:	mov    rbx,rdi
   13fc7:	mov    rdi,QWORD PTR [rdi]
   13fca:	lea    rax,[rcx+rdx*1+0x100]
   13fd2:	cmp    rcx,rax
   13fd5:	ja     13ff8 <__cxa_finalize@plt+0x101e0>
   13fd7:	mov    QWORD PTR [rsi],rax
   13fda:	mov    rsi,rax
   13fdd:	call   3b70 <realloc@plt>
   13fe2:	test   rax,rax
   13fe5:	je     14018 <__cxa_finalize@plt+0x10200>
   13fe7:	mov    QWORD PTR [rbx],rax
   13fea:	mov    eax,0x1
   13fef:	pop    rbx
   13ff0:	ret    
   13ff1:	nop    DWORD PTR [rax+0x0]
   13ff8:	call   3e10 <free@plt>
   13ffd:	mov    QWORD PTR [rbx],0x0
   14004:	call   3540 <__errno_location@plt>
   14009:	mov    DWORD PTR [rax],0x24
   1400f:	xor    eax,eax
   14011:	pop    rbx
   14012:	ret    
   14013:	nop    DWORD PTR [rax+rax*1+0x0]
   14018:	mov    rdi,QWORD PTR [rbx]
   1401b:	call   3e10 <free@plt>
   14020:	mov    QWORD PTR [rbx],0x0
   14027:	xor    eax,eax
   14029:	pop    rbx
   1402a:	ret    
   1402b:	nop    DWORD PTR [rax+rax*1+0x0]
   14030:	and    edi,0x102
   14036:	push   rbx
   14037:	mov    rbx,rsi
   1403a:	je     14070 <__cxa_finalize@plt+0x10258>
   1403c:	mov    r8,QWORD PTR [rip+0x20df8d]        # 221fd0 <free@GLIBC_2.2.5>
   14043:	lea    rcx,[rip+0xfffffffffffff876]        # 138c0 <__cxa_finalize@plt+0xfaa8>
   1404a:	lea    rdx,[rip+0xfffffffffffff88f]        # 138e0 <__cxa_finalize@plt+0xfac8>
   14051:	xor    esi,esi
   14053:	mov    edi,0x1f
   14058:	call   e410 <__cxa_finalize@plt+0xa5f8>
   1405d:	test   rax,rax
   14060:	mov    QWORD PTR [rbx],rax
   14063:	setne  al
   14066:	pop    rbx
   14067:	ret    
   14068:	nop    DWORD PTR [rax+rax*1+0x0]
   14070:	mov    edi,0x20
   14075:	call   3ac0 <malloc@plt>
   1407a:	mov    rdi,rax
   1407d:	mov    QWORD PTR [rbx],rax
   14080:	xor    eax,eax
   14082:	test   rdi,rdi
   14085:	je     14066 <__cxa_finalize@plt+0x1024e>
   14087:	call   163c0 <fts_children@@Base+0x850>
   1408c:	mov    eax,0x1
   14091:	pop    rbx
   14092:	ret    
   14093:	nop    DWORD PTR [rax]
   14096:	nop    WORD PTR cs:[rax+rax*1+0x0]
   140a0:	mov    eax,esi
   140a2:	mov    rcx,rdx
   140a5:	mov    edx,esi
   140a7:	shl    edx,0xd
   140aa:	shl    eax,0x7
   140ad:	and    edx,0x20000
   140b3:	and    eax,0x40000
   140b8:	or     edx,eax
   140ba:	or     edx,0x90900
   140c0:	and    esi,0x200
   140c6:	jne    140d8 <__cxa_finalize@plt+0x102c0>
   140c8:	mov    esi,edx
   140ca:	mov    rdi,rcx
   140cd:	xor    eax,eax
   140cf:	jmp    d730 <__cxa_finalize@plt+0x9918>
   140d4:	nop    DWORD PTR [rax+0x0]
   140d8:	mov    rsi,rcx
   140db:	xor    eax,eax
   140dd:	jmp    16a60 <fts_children@@Base+0xef0>
   140e2:	nop    DWORD PTR [rax+0x0]
   140e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   140f0:	push   r15
   140f2:	push   r14
   140f4:	mov    r14,rsi
   140f7:	push   r13
   140f9:	push   r12
   140fb:	mov    r12d,edx
   140fe:	push   rbp
   140ff:	push   rbx
   14100:	mov    r13,rdi
   14103:	mov    rbp,rcx
   14106:	sub    rsp,0xb8
   1410d:	mov    ebx,DWORD PTR [rdi+0x48]
   14110:	mov    rax,QWORD PTR fs:0x28
   14119:	mov    QWORD PTR [rsp+0xa8],rax
   14121:	xor    eax,eax
   14123:	mov    edx,ebx
   14125:	and    edx,0x4
   14128:	test   rcx,rcx
   1412b:	je     141d0 <__cxa_finalize@plt+0x103b8>
   14131:	lea    rax,[rip+0x59a5]        # 19add <_IO_stdin_used@@Base+0x13d>
   14138:	mov    ecx,0x3
   1413d:	mov    rsi,rbp
   14140:	mov    rdi,rax
   14143:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14145:	jne    141d0 <__cxa_finalize@plt+0x103b8>
   1414b:	test   edx,edx
   1414d:	jne    141d4 <__cxa_finalize@plt+0x103bc>
   14153:	test   r12d,r12d
   14156:	jns    1433a <__cxa_finalize@plt+0x10522>
   1415c:	test   bh,0x2
   1415f:	jne    142a0 <__cxa_finalize@plt+0x10488>
   14165:	mov    BYTE PTR [rsp+0xf],0x1
   1416a:	mov    edi,DWORD PTR [r13+0x2c]
   1416e:	mov    rdx,rbp
   14171:	mov    esi,ebx
   14173:	call   140a0 <__cxa_finalize@plt+0x10288>
   14178:	test   eax,eax
   1417a:	mov    r15d,eax
   1417d:	js     1432b <__cxa_finalize@plt+0x10513>
   14183:	mov    ebx,DWORD PTR [r13+0x48]
   14187:	test   bl,0x2
   1418a:	je     1422a <__cxa_finalize@plt+0x10412>
   14190:	lea    rdx,[rsp+0x10]
   14195:	mov    esi,r15d
   14198:	mov    edi,0x1
   1419d:	call   3b10 <__fxstat@plt>
   141a2:	test   eax,eax
   141a4:	je     14268 <__cxa_finalize@plt+0x10450>
   141aa:	mov    ebx,0xffffffff
   141af:	test   r12d,r12d
   141b2:	jns    141e4 <__cxa_finalize@plt+0x103cc>
   141b4:	call   3540 <__errno_location@plt>
   141b9:	mov    r12d,DWORD PTR [rax]
   141bc:	mov    rbp,rax
   141bf:	mov    edi,r15d
   141c2:	call   38b0 <close@plt>
   141c7:	mov    DWORD PTR [rbp+0x0],r12d
   141cb:	jmp    141e4 <__cxa_finalize@plt+0x103cc>
   141cd:	nop    DWORD PTR [rax]
   141d0:	test   edx,edx
   141d2:	je     14210 <__cxa_finalize@plt+0x103f8>
   141d4:	and    bh,0x2
   141d7:	je     141e2 <__cxa_finalize@plt+0x103ca>
   141d9:	test   r12d,r12d
   141dc:	jns    14290 <__cxa_finalize@plt+0x10478>
   141e2:	xor    ebx,ebx
   141e4:	mov    rdi,QWORD PTR [rsp+0xa8]
   141ec:	xor    rdi,QWORD PTR fs:0x28
   141f5:	mov    eax,ebx
   141f7:	jne    14335 <__cxa_finalize@plt+0x1051d>
   141fd:	add    rsp,0xb8
   14204:	pop    rbx
   14205:	pop    rbp
   14206:	pop    r12
   14208:	pop    r13
   1420a:	pop    r14
   1420c:	pop    r15
   1420e:	ret    
   1420f:	nop
   14210:	test   r12d,r12d
   14213:	js     14350 <__cxa_finalize@plt+0x10538>
   14219:	test   bl,0x2
   1421c:	mov    r15d,r12d
   1421f:	mov    BYTE PTR [rsp+0xf],0x0
   14224:	jne    14190 <__cxa_finalize@plt+0x10378>
   1422a:	test   rbp,rbp
   1422d:	je     14249 <__cxa_finalize@plt+0x10431>
   1422f:	lea    rax,[rip+0x58a7]        # 19add <_IO_stdin_used@@Base+0x13d>
   14236:	mov    ecx,0x3
   1423b:	mov    rsi,rbp
   1423e:	mov    rdi,rax
   14241:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14243:	je     14190 <__cxa_finalize@plt+0x10378>
   14249:	and    bh,0x2
   1424c:	jne    142e8 <__cxa_finalize@plt+0x104d0>
   14252:	mov    edi,r15d
   14255:	call   3b50 <fchdir@plt>
   1425a:	mov    ebx,eax
   1425c:	jmp    141af <__cxa_finalize@plt+0x10397>
   14261:	nop    DWORD PTR [rax+0x0]
   14268:	mov    rax,QWORD PTR [rsp+0x10]
   1426d:	cmp    QWORD PTR [r14+0x78],rax
   14271:	je     14310 <__cxa_finalize@plt+0x104f8>
   14277:	call   3540 <__errno_location@plt>
   1427c:	mov    DWORD PTR [rax],0x2
   14282:	jmp    141aa <__cxa_finalize@plt+0x10392>
   14287:	nop    WORD PTR [rax+rax*1+0x0]
   14290:	mov    edi,r12d
   14293:	xor    ebx,ebx
   14295:	call   38b0 <close@plt>
   1429a:	jmp    141e4 <__cxa_finalize@plt+0x103cc>
   1429f:	nop
   142a0:	lea    r15,[r13+0x60]
   142a4:	mov    rdi,r15
   142a7:	call   16580 <fts_children@@Base+0xa10>
   142ac:	test   al,al
   142ae:	mov    BYTE PTR [rsp+0xf],al
   142b2:	jne    1416a <__cxa_finalize@plt+0x10352>
   142b8:	mov    rdi,r15
   142bb:	call   165d0 <fts_children@@Base+0xa60>
   142c0:	test   eax,eax
   142c2:	mov    r15d,eax
   142c5:	mov    ebx,DWORD PTR [r13+0x48]
   142c9:	js     14165 <__cxa_finalize@plt+0x1034d>
   142cf:	test   bl,0x2
   142d2:	mov    r12d,eax
   142d5:	mov    BYTE PTR [rsp+0xf],0x1
   142da:	je     14249 <__cxa_finalize@plt+0x10431>
   142e0:	jmp    14190 <__cxa_finalize@plt+0x10378>
   142e5:	nop    DWORD PTR [rax]
   142e8:	movzx  r14d,BYTE PTR [rsp+0xf]
   142ee:	mov    esi,r15d
   142f1:	mov    rdi,r13
   142f4:	xor    ebx,ebx
   142f6:	xor    r14d,0x1
   142fa:	movzx  edx,r14b
   142fe:	call   13ef0 <__cxa_finalize@plt+0x100d8>
   14303:	jmp    141e4 <__cxa_finalize@plt+0x103cc>
   14308:	nop    DWORD PTR [rax+rax*1+0x0]
   14310:	mov    rax,QWORD PTR [rsp+0x18]
   14315:	cmp    QWORD PTR [r14+0x80],rax
   1431c:	jne    14277 <__cxa_finalize@plt+0x1045f>
   14322:	mov    ebx,DWORD PTR [r13+0x48]
   14326:	jmp    14249 <__cxa_finalize@plt+0x10431>
   1432b:	mov    ebx,0xffffffff
   14330:	jmp    141e4 <__cxa_finalize@plt+0x103cc>
   14335:	call   3760 <__stack_chk_fail@plt>
   1433a:	test   bl,0x2
   1433d:	mov    r15d,r12d
   14340:	mov    BYTE PTR [rsp+0xf],0x1
   14345:	je     14236 <__cxa_finalize@plt+0x1041e>
   1434b:	jmp    14190 <__cxa_finalize@plt+0x10378>
   14350:	mov    BYTE PTR [rsp+0xf],0x0
   14355:	jmp    1416a <__cxa_finalize@plt+0x10352>
   1435a:	nop    WORD PTR [rax+rax*1+0x0]
   14360:	and    edi,0x102
   14366:	push   r12
   14368:	mov    r12,rsi
   1436b:	push   rbp
   1436c:	push   rbx
   1436d:	mov    rbx,rdx
   14370:	je     143e0 <__cxa_finalize@plt+0x105c8>
   14372:	mov    edi,0x18
   14377:	call   3ac0 <malloc@plt>
   1437c:	test   rax,rax
   1437f:	mov    rbp,rax
   14382:	je     14408 <__cxa_finalize@plt+0x105f0>
   14388:	mov    rax,QWORD PTR [rbx+0x78]
   1438c:	mov    rdi,QWORD PTR [r12]
   14390:	mov    rsi,rbp
   14393:	mov    QWORD PTR [rbp+0x10],rbx
   14397:	mov    QWORD PTR [rbp+0x0],rax
   1439b:	mov    rax,QWORD PTR [rbx+0x80]
   143a2:	mov    QWORD PTR [rbp+0x8],rax
   143a6:	call   ec10 <__cxa_finalize@plt+0xadf8>
   143ab:	cmp    rbp,rax
   143ae:	mov    r12,rax
   143b1:	je     143d1 <__cxa_finalize@plt+0x105b9>
   143b3:	mov    rdi,rbp
   143b6:	call   3e10 <free@plt>
   143bb:	test   r12,r12
   143be:	je     14408 <__cxa_finalize@plt+0x105f0>
   143c0:	mov    rax,QWORD PTR [r12+0x10]
   143c5:	mov    ecx,0x2
   143ca:	mov    WORD PTR [rbx+0x70],cx
   143ce:	mov    QWORD PTR [rbx],rax
   143d1:	pop    rbx
   143d2:	mov    eax,0x1
   143d7:	pop    rbp
   143d8:	pop    r12
   143da:	ret    
   143db:	nop    DWORD PTR [rax+rax*1+0x0]
   143e0:	mov    rdi,QWORD PTR [r12]
   143e4:	lea    rsi,[rdx+0x78]
   143e8:	call   163d0 <fts_children@@Base+0x860>
   143ed:	test   al,al
   143ef:	je     143d1 <__cxa_finalize@plt+0x105b9>
   143f1:	mov    edx,0x2
   143f6:	mov    QWORD PTR [rbx],rbx
   143f9:	mov    WORD PTR [rbx+0x70],dx
   143fd:	pop    rbx
   143fe:	pop    rbp
   143ff:	pop    r12
   14401:	ret    
   14402:	nop    WORD PTR [rax+rax*1+0x0]
   14408:	pop    rbx
   14409:	xor    eax,eax
   1440b:	pop    rbp
   1440c:	pop    r12
   1440e:	ret    
   1440f:	nop
   14410:	sub    rsp,0x28
   14414:	mov    rcx,rsi
   14417:	mov    rax,QWORD PTR fs:0x28
   14420:	mov    QWORD PTR [rsp+0x18],rax
   14425:	xor    eax,eax
   14427:	and    edi,0x102
   1442d:	jne    14470 <__cxa_finalize@plt+0x10658>
   1442f:	mov    rax,QWORD PTR [rdx+0x8]
   14433:	test   rax,rax
   14436:	je     14455 <__cxa_finalize@plt+0x1063d>
   14438:	cmp    QWORD PTR [rax+0x58],0x0
   1443d:	js     14455 <__cxa_finalize@plt+0x1063d>
   1443f:	mov    rcx,QWORD PTR [rsi]
   14442:	cmp    QWORD PTR [rcx+0x10],0x0
   14447:	je     144c3 <__cxa_finalize@plt+0x106ab>
   14449:	mov    rsi,QWORD PTR [rdx+0x80]
   14450:	cmp    QWORD PTR [rcx],rsi
   14453:	je     144a0 <__cxa_finalize@plt+0x10688>
   14455:	mov    rax,QWORD PTR [rsp+0x18]
   1445a:	xor    rax,QWORD PTR fs:0x28
   14463:	jne    144be <__cxa_finalize@plt+0x106a6>
   14465:	add    rsp,0x28
   14469:	ret    
   1446a:	nop    WORD PTR [rax+rax*1+0x0]
   14470:	mov    rax,QWORD PTR [rdx+0x78]
   14474:	mov    rdi,QWORD PTR [rcx]
   14477:	mov    rsi,rsp
   1447a:	mov    QWORD PTR [rsp],rax
   1447e:	mov    rax,QWORD PTR [rdx+0x80]
   14485:	mov    QWORD PTR [rsp+0x8],rax
   1448a:	call   ec70 <__cxa_finalize@plt+0xae58>
   1448f:	test   rax,rax
   14492:	je     144c3 <__cxa_finalize@plt+0x106ab>
   14494:	mov    rdi,rax
   14497:	call   3e10 <free@plt>
   1449c:	jmp    14455 <__cxa_finalize@plt+0x1063d>
   1449e:	xchg   ax,ax
   144a0:	mov    rsi,QWORD PTR [rdx+0x78]
   144a4:	cmp    QWORD PTR [rcx+0x8],rsi
   144a8:	jne    14455 <__cxa_finalize@plt+0x1063d>
   144aa:	mov    rdx,QWORD PTR [rax+0x78]
   144ae:	mov    rax,QWORD PTR [rax+0x80]
   144b5:	mov    QWORD PTR [rcx+0x8],rdx
   144b9:	mov    QWORD PTR [rcx],rax
   144bc:	jmp    14455 <__cxa_finalize@plt+0x1063d>
   144be:	call   3760 <__stack_chk_fail@plt>
   144c3:	call   3530 <abort@plt>
   144c8:	nop    DWORD PTR [rax+rax*1+0x0]
   144d0:	push   r15
   144d2:	push   r14
   144d4:	mov    r15,rdi
   144d7:	push   r13
   144d9:	push   r12
   144db:	push   rbp
   144dc:	push   rbx
   144dd:	sub    rsp,0x68
   144e1:	mov    rbp,QWORD PTR [rdi]
   144e4:	mov    DWORD PTR [rsp+0x58],esi
   144e8:	mov    rdi,QWORD PTR [rbp+0x18]
   144ec:	test   rdi,rdi
   144ef:	mov    QWORD PTR [rsp+0x50],rdi
   144f4:	je     148d0 <__cxa_finalize@plt+0x10ab8>
   144fa:	call   39e0 <dirfd@plt>
   144ff:	test   eax,eax
   14501:	js     14a28 <__cxa_finalize@plt+0x10c10>
   14507:	cmp    QWORD PTR [r15+0x40],0x0
   1450c:	je     14ab8 <__cxa_finalize@plt+0x10ca0>
   14512:	mov    edi,DWORD PTR [r15+0x48]
   14516:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
   1451f:	mov    BYTE PTR [rsp+0x5f],0x1
   14524:	mov    rcx,QWORD PTR [rbp+0x48]
   14528:	mov    rdx,QWORD PTR [rbp+0x38]
   1452c:	mov    QWORD PTR [rsp+0x40],0x0
   14535:	cmp    BYTE PTR [rdx+rcx*1-0x1],0x2f
   1453a:	lea    rax,[rcx-0x1]
   1453e:	cmovne rax,rcx
   14542:	and    edi,0x4
   14545:	mov    QWORD PTR [rsp+0x48],rax
   1454a:	je     1455c <__cxa_finalize@plt+0x10744>
   1454c:	add    rax,QWORD PTR [r15+0x20]
   14550:	lea    rbx,[rax+0x1]
   14554:	mov    BYTE PTR [rax],0x2f
   14557:	mov    QWORD PTR [rsp+0x40],rbx
   1455c:	mov    rax,QWORD PTR [rsp+0x48]
   14561:	mov    rbx,QWORD PTR [r15+0x30]
   14565:	mov    QWORD PTR [rsp+0x20],rbp
   1456a:	mov    BYTE PTR [rsp+0x5e],0x0
   1456f:	mov    QWORD PTR [rsp+0x8],0x0
   14578:	mov    QWORD PTR [rsp+0x10],0x0
   14581:	add    rax,0x1
   14585:	sub    rbx,rax
   14588:	mov    QWORD PTR [rsp+0x18],rax
   1458d:	mov    rax,QWORD PTR [rbp+0x58]
   14591:	mov    QWORD PTR [rsp+0x28],rbx
   14596:	mov    rbp,r15
   14599:	xor    ebx,ebx
   1459b:	add    rax,0x1
   1459f:	mov    QWORD PTR [rsp+0x30],rax
   145a4:	jmp    14674 <__cxa_finalize@plt+0x1085c>
   145a9:	nop    DWORD PTR [rax+0x0]
   145b0:	mov    r9,r14
   145b3:	add    r9,QWORD PTR [rsp+0x18]
   145b8:	jb     14e1b <__cxa_finalize@plt+0x11003>
   145be:	mov    rax,QWORD PTR [rsp+0x30]
   145c3:	lea    rsi,[r13+0x108]
   145ca:	mov    QWORD PTR [r13+0x58],rax
   145ce:	mov    rax,QWORD PTR [rbp+0x0]
   145d2:	mov    QWORD PTR [r13+0x48],r9
   145d6:	mov    QWORD PTR [r13+0x8],rax
   145da:	mov    rax,QWORD PTR [r15]
   145dd:	mov    QWORD PTR [r13+0x80],rax
   145e4:	mov    eax,DWORD PTR [rbp+0x48]
   145e7:	test   al,0x4
   145e9:	jne    14750 <__cxa_finalize@plt+0x10938>
   145ef:	mov    QWORD PTR [r13+0x30],rsi
   145f3:	cmp    QWORD PTR [rbp+0x40],0x0
   145f8:	je     14603 <__cxa_finalize@plt+0x107eb>
   145fa:	test   ah,0x4
   145fd:	je     148a0 <__cxa_finalize@plt+0x10a88>
   14603:	movzx  edx,BYTE PTR [r15+0x12]
   14608:	and    eax,0x18
   1460b:	mov    esi,edx
   1460d:	sub    edx,0x1
   14610:	cmp    eax,0x18
   14613:	je     14860 <__cxa_finalize@plt+0x10a48>
   14619:	mov    eax,0xb
   1461e:	cmp    edx,0xb
   14621:	mov    WORD PTR [r13+0x70],ax
   14626:	jbe    14820 <__cxa_finalize@plt+0x10a08>
   1462c:	mov    DWORD PTR [r13+0x90],0x0
   14637:	mov    eax,0x2
   1463c:	mov    QWORD PTR [r13+0xa8],rax
   14643:	cmp    QWORD PTR [rsp+0x10],0x0
   14649:	mov    QWORD PTR [r13+0x10],0x0
   14651:	je     14778 <__cxa_finalize@plt+0x10960>
   14657:	add    rbx,0x1
   1465b:	cmp    rbx,QWORD PTR [rsp+0x38]
   14660:	mov    rax,QWORD PTR [rsp+0x8]
   14665:	mov    QWORD PTR [rax+0x10],r13
   14669:	jae    1478c <__cxa_finalize@plt+0x10974>
   1466f:	mov    QWORD PTR [rsp+0x8],r13
   14674:	mov    rax,QWORD PTR [rsp+0x20]
   14679:	mov    r13,QWORD PTR [rax+0x18]
   1467d:	test   r13,r13
   14680:	je     14b28 <__cxa_finalize@plt+0x10d10>
   14686:	call   3540 <__errno_location@plt>
   1468b:	mov    rdi,r13
   1468e:	mov    DWORD PTR [rax],0x0
   14694:	mov    r12,rax
   14697:	call   3aa0 <readdir@plt>
   1469c:	test   rax,rax
   1469f:	mov    r15,rax
   146a2:	je     14c20 <__cxa_finalize@plt+0x10e08>
   146a8:	test   BYTE PTR [rbp+0x48],0x20
   146ac:	jne    146b8 <__cxa_finalize@plt+0x108a0>
   146ae:	cmp    BYTE PTR [rax+0x13],0x2e
   146b2:	je     14840 <__cxa_finalize@plt+0x10a28>
   146b8:	lea    r13,[r15+0x13]
   146bc:	mov    rdi,r13
   146bf:	call   3720 <strlen@plt>
   146c4:	mov    rsi,r13
   146c7:	mov    rdx,rax
   146ca:	mov    rdi,rbp
   146cd:	mov    r14,rax
   146d0:	call   13c20 <__cxa_finalize@plt+0xfe08>
   146d5:	test   rax,rax
   146d8:	mov    r13,rax
   146db:	je     14ad0 <__cxa_finalize@plt+0x10cb8>
   146e1:	cmp    QWORD PTR [rsp+0x28],r14
   146e6:	ja     145b0 <__cxa_finalize@plt+0x10798>
   146ec:	mov    rax,QWORD PTR [rbp+0x20]
   146f0:	lea    rsi,[rbp+0x30]
   146f4:	lea    rdi,[rbp+0x20]
   146f8:	mov    QWORD PTR [rsp+0x28],rax
   146fd:	mov    rax,QWORD PTR [rsp+0x48]
   14702:	lea    rdx,[rax+r14*1+0x2]
   14707:	call   13fc0 <__cxa_finalize@plt+0x101a8>
   1470c:	test   al,al
   1470e:	je     14ad0 <__cxa_finalize@plt+0x10cb8>
   14714:	mov    rdx,QWORD PTR [rbp+0x20]
   14718:	cmp    rdx,QWORD PTR [rsp+0x28]
   1471d:	je     148c0 <__cxa_finalize@plt+0x10aa8>
   14723:	add    rdx,QWORD PTR [rsp+0x18]
   14728:	test   BYTE PTR [rbp+0x48],0x4
   1472c:	cmove  rdx,QWORD PTR [rsp+0x40]
   14732:	mov    QWORD PTR [rsp+0x40],rdx
   14737:	mov    rcx,QWORD PTR [rbp+0x30]
   1473b:	sub    rcx,QWORD PTR [rsp+0x18]
   14740:	mov    BYTE PTR [rsp+0x5e],al
   14744:	mov    QWORD PTR [rsp+0x28],rcx
   14749:	jmp    145b0 <__cxa_finalize@plt+0x10798>
   1474e:	xchg   ax,ax
   14750:	mov    rax,QWORD PTR [r13+0x38]
   14754:	mov    rdi,QWORD PTR [rsp+0x40]
   14759:	mov    QWORD PTR [r13+0x30],rax
   1475d:	mov    rax,QWORD PTR [r13+0x60]
   14761:	lea    rdx,[rax+0x1]
   14765:	call   3c00 <memmove@plt>
   1476a:	mov    eax,DWORD PTR [rbp+0x48]
   1476d:	jmp    145f3 <__cxa_finalize@plt+0x107db>
   14772:	nop    WORD PTR [rax+rax*1+0x0]
   14778:	add    rbx,0x1
   1477c:	cmp    rbx,QWORD PTR [rsp+0x38]
   14781:	mov    QWORD PTR [rsp+0x10],r13
   14786:	jb     1466f <__cxa_finalize@plt+0x10857>
   1478c:	cmp    BYTE PTR [rsp+0x5e],0x0
   14791:	mov    r15,rbp
   14794:	mov    rbp,QWORD PTR [rsp+0x20]
   14799:	je     14b39 <__cxa_finalize@plt+0x10d21>
   1479f:	mov    rax,QWORD PTR [r15+0x8]
   147a3:	mov    rcx,QWORD PTR [r15+0x20]
   147a7:	test   rax,rax
   147aa:	je     147d8 <__cxa_finalize@plt+0x109c0>
   147ac:	nop    DWORD PTR [rax+0x0]
   147b0:	mov    rdx,QWORD PTR [rax+0x30]
   147b4:	lea    rsi,[rax+0x108]
   147bb:	cmp    rdx,rsi
   147be:	je     147cb <__cxa_finalize@plt+0x109b3>
   147c0:	sub    rdx,QWORD PTR [rax+0x38]
   147c4:	add    rdx,rcx
   147c7:	mov    QWORD PTR [rax+0x30],rdx
   147cb:	mov    QWORD PTR [rax+0x38],rcx
   147cf:	mov    rax,QWORD PTR [rax+0x10]
   147d3:	test   rax,rax
   147d6:	jne    147b0 <__cxa_finalize@plt+0x10998>
   147d8:	mov    rax,QWORD PTR [rsp+0x10]
   147dd:	jmp    147e3 <__cxa_finalize@plt+0x109cb>
   147df:	nop
   147e0:	mov    rax,rdx
   147e3:	cmp    QWORD PTR [rax+0x58],0x0
   147e8:	js     14b39 <__cxa_finalize@plt+0x10d21>
   147ee:	mov    rdx,QWORD PTR [rax+0x30]
   147f2:	lea    rsi,[rax+0x108]
   147f9:	cmp    rdx,rsi
   147fc:	je     14809 <__cxa_finalize@plt+0x109f1>
   147fe:	sub    rdx,QWORD PTR [rax+0x38]
   14802:	add    rdx,rcx
   14805:	mov    QWORD PTR [rax+0x30],rdx
   14809:	mov    rdx,QWORD PTR [rax+0x10]
   1480d:	mov    QWORD PTR [rax+0x38],rcx
   14811:	test   rdx,rdx
   14814:	jne    147e0 <__cxa_finalize@plt+0x109c8>
   14816:	mov    rdx,QWORD PTR [rax+0x8]
   1481a:	jmp    147e0 <__cxa_finalize@plt+0x109c8>
   1481c:	nop    DWORD PTR [rax+0x0]
   14820:	lea    rax,[rip+0x84d9]        # 1cd00 <version_etc_copyright@@Base+0x80>
   14827:	mov    eax,DWORD PTR [rax+rdx*4]
   1482a:	mov    DWORD PTR [r13+0x90],eax
   14831:	mov    eax,0x2
   14836:	jmp    1463c <__cxa_finalize@plt+0x10824>
   1483b:	nop    DWORD PTR [rax+rax*1+0x0]
   14840:	cmp    BYTE PTR [rax+0x14],0x0
   14844:	je     14851 <__cxa_finalize@plt+0x10a39>
   14846:	cmp    WORD PTR [rax+0x14],0x2e
   1484b:	jne    146b8 <__cxa_finalize@plt+0x108a0>
   14851:	mov    r13,QWORD PTR [rsp+0x8]
   14856:	jmp    1466f <__cxa_finalize@plt+0x10857>
   1485b:	nop    DWORD PTR [rax+rax*1+0x0]
   14860:	and    esi,0xfb
   14866:	je     14619 <__cxa_finalize@plt+0x10801>
   1486c:	mov    ecx,0xb
   14871:	cmp    edx,0xb
   14874:	mov    WORD PTR [r13+0x70],cx
   14879:	ja     14e6f <__cxa_finalize@plt+0x11057>
   1487f:	lea    rax,[rip+0x847a]        # 1cd00 <version_etc_copyright@@Base+0x80>
   14886:	mov    eax,DWORD PTR [rax+rdx*4]
   14889:	mov    DWORD PTR [r13+0x90],eax
   14890:	mov    eax,0x1
   14895:	jmp    1463c <__cxa_finalize@plt+0x10824>
   1489a:	nop    WORD PTR [rax+rax*1+0x0]
   148a0:	xor    edx,edx
   148a2:	mov    rsi,r13
   148a5:	mov    rdi,rbp
   148a8:	call   13940 <__cxa_finalize@plt+0xfb28>
   148ad:	mov    WORD PTR [r13+0x70],ax
   148b2:	jmp    14643 <__cxa_finalize@plt+0x1082b>
   148b7:	nop    WORD PTR [rax+rax*1+0x0]
   148c0:	movzx  eax,BYTE PTR [rsp+0x5e]
   148c5:	jmp    14737 <__cxa_finalize@plt+0x1091f>
   148ca:	nop    WORD PTR [rax+rax*1+0x0]
   148d0:	mov    eax,DWORD PTR [r15+0x48]
   148d4:	mov    ecx,eax
   148d6:	and    ecx,0x10
   148d9:	je     148e8 <__cxa_finalize@plt+0x10ad0>
   148db:	test   al,0x1
   148dd:	mov    ecx,0x20000
   148e2:	jne    14a10 <__cxa_finalize@plt+0x10bf8>
   148e8:	mov    edx,eax
   148ea:	and    eax,0x204
   148ef:	mov    rsi,QWORD PTR [rbp+0x30]
   148f3:	shl    edx,0x7
   148f6:	mov    edi,0xffffff9c
   148fb:	and    edx,0x40000
   14901:	or     edx,0x90900
   14907:	cmp    eax,0x200
   1490c:	jne    14912 <__cxa_finalize@plt+0x10afa>
   1490e:	mov    edi,DWORD PTR [r15+0x2c]
   14912:	or     edx,ecx
   14914:	xor    eax,eax
   14916:	call   16a60 <fts_children@@Base+0xef0>
   1491b:	test   eax,eax
   1491d:	mov    ebx,eax
   1491f:	js     14c86 <__cxa_finalize@plt+0x10e6e>
   14925:	mov    edi,eax
   14927:	call   3cb0 <fdopendir@plt>
   1492c:	test   rax,rax
   1492f:	je     14c70 <__cxa_finalize@plt+0x10e58>
   14935:	cmp    WORD PTR [rbp+0x70],0xb
   1493a:	mov    QWORD PTR [rbp+0x18],rax
   1493e:	je     14cd0 <__cxa_finalize@plt+0x10eb8>
   14944:	mov    edi,DWORD PTR [r15+0x48]
   14948:	test   edi,0x100
   1494e:	jne    14a68 <__cxa_finalize@plt+0x10c50>
   14954:	cmp    QWORD PTR [r15+0x40],0x1
   14959:	sbb    rax,rax
   1495c:	and    eax,0x186a1
   14961:	sub    rax,0x1
   14965:	cmp    DWORD PTR [rsp+0x58],0x2
   1496a:	mov    QWORD PTR [rsp+0x38],rax
   1496f:	je     14cb8 <__cxa_finalize@plt+0x10ea0>
   14975:	mov    eax,DWORD PTR [r15+0x48]
   14979:	and    eax,0x38
   1497c:	cmp    eax,0x18
   1497f:	je     14d08 <__cxa_finalize@plt+0x10ef0>
   14985:	cmp    DWORD PTR [rsp+0x58],0x3
   1498a:	mov    r13d,0x1
   14990:	sete   r12b
   14994:	test   BYTE PTR [r15+0x49],0x2
   14999:	jne    14d83 <__cxa_finalize@plt+0x10f6b>
   1499f:	xor    ecx,ecx
   149a1:	mov    edx,ebx
   149a3:	mov    rsi,rbp
   149a6:	mov    rdi,r15
   149a9:	call   140f0 <__cxa_finalize@plt+0x102d8>
   149ae:	test   eax,eax
   149b0:	je     14ac1 <__cxa_finalize@plt+0x10ca9>
   149b6:	test   r12b,r12b
   149b9:	je     149ca <__cxa_finalize@plt+0x10bb2>
   149bb:	test   r13b,r13b
   149be:	je     149ca <__cxa_finalize@plt+0x10bb2>
   149c0:	call   3540 <__errno_location@plt>
   149c5:	mov    eax,DWORD PTR [rax]
   149c7:	mov    DWORD PTR [rbp+0x40],eax
   149ca:	or     WORD PTR [rbp+0x72],0x1
   149cf:	mov    rdi,QWORD PTR [rbp+0x18]
   149d3:	call   38e0 <closedir@plt>
   149d8:	mov    edi,DWORD PTR [r15+0x48]
   149dc:	mov    QWORD PTR [rbp+0x18],0x0
   149e4:	test   edi,0x200
   149ea:	je     149f4 <__cxa_finalize@plt+0x10bdc>
   149ec:	test   ebx,ebx
   149ee:	jns    14d40 <__cxa_finalize@plt+0x10f28>
   149f4:	mov    QWORD PTR [rbp+0x18],0x0
   149fc:	mov    BYTE PTR [rsp+0x5f],0x0
   14a01:	jmp    14524 <__cxa_finalize@plt+0x1070c>
   14a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14a10:	xor    ecx,ecx
   14a12:	cmp    QWORD PTR [rbp+0x58],0x0
   14a17:	setne  cl
   14a1a:	shl    ecx,0x11
   14a1d:	jmp    148e8 <__cxa_finalize@plt+0x10ad0>
   14a22:	nop    WORD PTR [rax+rax*1+0x0]
   14a28:	mov    rdi,QWORD PTR [rbp+0x18]
   14a2c:	call   38e0 <closedir@plt>
   14a31:	cmp    DWORD PTR [rsp+0x58],0x3
   14a36:	mov    QWORD PTR [rbp+0x18],0x0
   14a3e:	je     14c99 <__cxa_finalize@plt+0x10e81>
   14a44:	mov    QWORD PTR [rsp+0x10],0x0
   14a4d:	mov    rax,QWORD PTR [rsp+0x10]
   14a52:	add    rsp,0x68
   14a56:	pop    rbx
   14a57:	pop    rbp
   14a58:	pop    r12
   14a5a:	pop    r13
   14a5c:	pop    r14
   14a5e:	pop    r15
   14a60:	ret    
   14a61:	nop    DWORD PTR [rax+0x0]
   14a68:	lea    r12,[r15+0x58]
   14a6c:	mov    rdx,rbp
   14a6f:	mov    rsi,r12
   14a72:	call   14410 <__cxa_finalize@plt+0x105f8>
   14a77:	xor    edx,edx
   14a79:	mov    rsi,rbp
   14a7c:	mov    rdi,r15
   14a7f:	call   13940 <__cxa_finalize@plt+0xfb28>
   14a84:	mov    edi,DWORD PTR [r15+0x48]
   14a88:	mov    rdx,rbp
   14a8b:	mov    rsi,r12
   14a8e:	call   14360 <__cxa_finalize@plt+0x10548>
   14a93:	test   al,al
   14a95:	jne    14954 <__cxa_finalize@plt+0x10b3c>
   14a9b:	call   3540 <__errno_location@plt>
   14aa0:	mov    QWORD PTR [rsp+0x10],0x0
   14aa9:	mov    DWORD PTR [rax],0xc
   14aaf:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14ab1:	nop    DWORD PTR [rax+0x0]
   14ab8:	mov    QWORD PTR [rsp+0x38],0x186a0
   14ac1:	mov    BYTE PTR [rsp+0x5f],0x1
   14ac6:	mov    edi,DWORD PTR [r15+0x48]
   14aca:	jmp    14524 <__cxa_finalize@plt+0x1070c>
   14acf:	nop
   14ad0:	mov    rdi,r13
   14ad3:	mov    r15,rbp
   14ad6:	mov    ebx,DWORD PTR [r12]
   14ada:	mov    rbp,QWORD PTR [rsp+0x20]
   14adf:	call   3e10 <free@plt>
   14ae4:	mov    rdi,QWORD PTR [rsp+0x10]
   14ae9:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   14aee:	mov    rdi,QWORD PTR [rbp+0x18]
   14af2:	call   38e0 <closedir@plt>
   14af7:	mov    r9d,0x7
   14afd:	mov    QWORD PTR [rbp+0x18],0x0
   14b05:	mov    QWORD PTR [rsp+0x10],0x0
   14b0e:	mov    WORD PTR [rbp+0x70],r9w
   14b13:	or     DWORD PTR [r15+0x48],0x4000
   14b1b:	mov    DWORD PTR [r12],ebx
   14b1f:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14b24:	nop    DWORD PTR [rax+0x0]
   14b28:	mov    r15,rbp
   14b2b:	mov    rbp,rax
   14b2e:	cmp    BYTE PTR [rsp+0x5e],0x0
   14b33:	jne    1479f <__cxa_finalize@plt+0x10987>
   14b39:	test   BYTE PTR [r15+0x48],0x4
   14b3e:	je     14b5e <__cxa_finalize@plt+0x10d46>
   14b40:	mov    rax,QWORD PTR [rsp+0x18]
   14b45:	cmp    QWORD PTR [r15+0x30],rax
   14b49:	je     14b50 <__cxa_finalize@plt+0x10d38>
   14b4b:	test   rbx,rbx
   14b4e:	jne    14b56 <__cxa_finalize@plt+0x10d3e>
   14b50:	sub    QWORD PTR [rsp+0x40],0x1
   14b56:	mov    rax,QWORD PTR [rsp+0x40]
   14b5b:	mov    BYTE PTR [rax],0x0
   14b5e:	cmp    QWORD PTR [rsp+0x50],0x0
   14b64:	jne    14bd0 <__cxa_finalize@plt+0x10db8>
   14b66:	cmp    BYTE PTR [rsp+0x5f],0x0
   14b6b:	je     14bd0 <__cxa_finalize@plt+0x10db8>
   14b6d:	cmp    DWORD PTR [rsp+0x58],0x1
   14b72:	je     14bb0 <__cxa_finalize@plt+0x10d98>
   14b74:	test   rbx,rbx
   14b77:	je     14bb0 <__cxa_finalize@plt+0x10d98>
   14b79:	cmp    rbx,0x2710
   14b80:	mov    rax,QWORD PTR [r15+0x40]
   14b84:	jbe    14c00 <__cxa_finalize@plt+0x10de8>
   14b86:	test   rax,rax
   14b89:	je     14da8 <__cxa_finalize@plt+0x10f90>
   14b8f:	mov    rsi,QWORD PTR [rsp+0x10]
   14b94:	add    rsp,0x68
   14b98:	mov    rdx,rbx
   14b9b:	mov    rdi,r15
   14b9e:	pop    rbx
   14b9f:	pop    rbp
   14ba0:	pop    r12
   14ba2:	pop    r13
   14ba4:	pop    r14
   14ba6:	pop    r15
   14ba8:	jmp    13b10 <__cxa_finalize@plt+0xfcf8>
   14bad:	nop    DWORD PTR [rax]
   14bb0:	cmp    QWORD PTR [rbp+0x58],0x0
   14bb5:	jne    14ce6 <__cxa_finalize@plt+0x10ece>
   14bbb:	mov    rdi,r15
   14bbe:	call   13f60 <__cxa_finalize@plt+0x10148>
   14bc3:	test   eax,eax
   14bc5:	setne  al
   14bc8:	test   al,al
   14bca:	jne    14d5a <__cxa_finalize@plt+0x10f42>
   14bd0:	test   rbx,rbx
   14bd3:	jne    14b79 <__cxa_finalize@plt+0x10d61>
   14bd5:	cmp    DWORD PTR [rsp+0x58],0x3
   14bda:	je     14df5 <__cxa_finalize@plt+0x10fdd>
   14be0:	mov    rdi,QWORD PTR [rsp+0x10]
   14be5:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   14bea:	mov    QWORD PTR [rsp+0x10],0x0
   14bf3:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14bf8:	mov    rax,QWORD PTR [r15+0x40]
   14bfc:	nop    DWORD PTR [rax+0x0]
   14c00:	cmp    rbx,0x1
   14c04:	je     14a4d <__cxa_finalize@plt+0x10c35>
   14c0a:	test   rax,rax
   14c0d:	je     14a4d <__cxa_finalize@plt+0x10c35>
   14c13:	jmp    14b8f <__cxa_finalize@plt+0x10d77>
   14c18:	nop    DWORD PTR [rax+rax*1+0x0]
   14c20:	mov    eax,DWORD PTR [r12]
   14c24:	mov    r15,rbp
   14c27:	mov    rbp,QWORD PTR [rsp+0x20]
   14c2c:	test   eax,eax
   14c2e:	je     14c51 <__cxa_finalize@plt+0x10e39>
   14c30:	test   rbx,rbx
   14c33:	mov    DWORD PTR [rbp+0x40],eax
   14c36:	jne    14d50 <__cxa_finalize@plt+0x10f38>
   14c3c:	cmp    QWORD PTR [rsp+0x50],0x0
   14c42:	mov    eax,0x4
   14c47:	jne    14d50 <__cxa_finalize@plt+0x10f38>
   14c4d:	mov    WORD PTR [rbp+0x70],ax
   14c51:	mov    rdi,QWORD PTR [rbp+0x18]
   14c55:	test   rdi,rdi
   14c58:	je     14b2e <__cxa_finalize@plt+0x10d16>
   14c5e:	call   38e0 <closedir@plt>
   14c63:	mov    QWORD PTR [rbp+0x18],0x0
   14c6b:	jmp    14b2e <__cxa_finalize@plt+0x10d16>
   14c70:	call   3540 <__errno_location@plt>
   14c75:	mov    r13d,DWORD PTR [rax]
   14c78:	mov    r12,rax
   14c7b:	mov    edi,ebx
   14c7d:	call   38b0 <close@plt>
   14c82:	mov    DWORD PTR [r12],r13d
   14c86:	cmp    DWORD PTR [rsp+0x58],0x3
   14c8b:	mov    QWORD PTR [rbp+0x18],0x0
   14c93:	jne    14a44 <__cxa_finalize@plt+0x10c2c>
   14c99:	mov    r10d,0x4
   14c9f:	mov    WORD PTR [rbp+0x70],r10w
   14ca4:	call   3540 <__errno_location@plt>
   14ca9:	mov    eax,DWORD PTR [rax]
   14cab:	mov    DWORD PTR [rbp+0x40],eax
   14cae:	jmp    14a44 <__cxa_finalize@plt+0x10c2c>
   14cb3:	nop    DWORD PTR [rax+rax*1+0x0]
   14cb8:	mov    BYTE PTR [rsp+0x5f],0x0
   14cbd:	mov    edi,DWORD PTR [r15+0x48]
   14cc1:	jmp    14524 <__cxa_finalize@plt+0x1070c>
   14cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14cd0:	xor    edx,edx
   14cd2:	mov    rsi,rbp
   14cd5:	mov    rdi,r15
   14cd8:	call   13940 <__cxa_finalize@plt+0xfb28>
   14cdd:	mov    WORD PTR [rbp+0x70],ax
   14ce1:	jmp    14954 <__cxa_finalize@plt+0x10b3c>
   14ce6:	mov    rsi,QWORD PTR [rbp+0x8]
   14cea:	lea    rcx,[rip+0x4dec]        # 19add <_IO_stdin_used@@Base+0x13d>
   14cf1:	mov    edx,0xffffffff
   14cf6:	mov    rdi,r15
   14cf9:	call   140f0 <__cxa_finalize@plt+0x102d8>
   14cfe:	test   eax,eax
   14d00:	setne  al
   14d03:	jmp    14bc8 <__cxa_finalize@plt+0x10db0>
   14d08:	cmp    QWORD PTR [rbp+0x88],0x2
   14d10:	jne    14985 <__cxa_finalize@plt+0x10b6d>
   14d16:	mov    rdi,rbp
   14d19:	call   13e90 <__cxa_finalize@plt+0x10078>
   14d1e:	test   eax,eax
   14d20:	je     14985 <__cxa_finalize@plt+0x10b6d>
   14d26:	cmp    DWORD PTR [rsp+0x58],0x3
   14d2b:	jne    14cb8 <__cxa_finalize@plt+0x10ea0>
   14d2d:	xor    r13d,r13d
   14d30:	mov    r12d,0x1
   14d36:	jmp    14994 <__cxa_finalize@plt+0x10b7c>
   14d3b:	nop    DWORD PTR [rax+rax*1+0x0]
   14d40:	mov    edi,ebx
   14d42:	call   38b0 <close@plt>
   14d47:	mov    edi,DWORD PTR [r15+0x48]
   14d4b:	jmp    149f4 <__cxa_finalize@plt+0x10bdc>
   14d50:	mov    eax,0x7
   14d55:	jmp    14c4d <__cxa_finalize@plt+0x10e35>
   14d5a:	mov    edi,0x7
   14d5f:	mov    WORD PTR [rbp+0x70],di
   14d63:	or     DWORD PTR [r15+0x48],0x4000
   14d6b:	mov    rdi,QWORD PTR [rsp+0x10]
   14d70:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   14d75:	mov    QWORD PTR [rsp+0x10],0x0
   14d7e:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14d83:	mov    edi,ebx
   14d85:	xor    eax,eax
   14d87:	mov    edx,0x3
   14d8c:	mov    esi,0x406
   14d91:	call   136a0 <__cxa_finalize@plt+0xf888>
   14d96:	test   eax,eax
   14d98:	mov    ebx,eax
   14d9a:	js     149b6 <__cxa_finalize@plt+0x10b9e>
   14da0:	jmp    1499f <__cxa_finalize@plt+0x10b87>
   14da5:	nop    DWORD PTR [rax]
   14da8:	mov    rdi,rbp
   14dab:	call   13d40 <__cxa_finalize@plt+0xff28>
   14db0:	cmp    rax,0x6969
   14db6:	je     14bf8 <__cxa_finalize@plt+0x10de0>
   14dbc:	cmp    rax,0x1021994
   14dc2:	je     14bf8 <__cxa_finalize@plt+0x10de0>
   14dc8:	lea    rax,[rip+0xffffffffffffeb41]        # 13910 <__cxa_finalize@plt+0xfaf8>
   14dcf:	mov    rsi,QWORD PTR [rsp+0x10]
   14dd4:	mov    rdx,rbx
   14dd7:	mov    rdi,r15
   14dda:	mov    QWORD PTR [r15+0x40],rax
   14dde:	call   13b10 <__cxa_finalize@plt+0xfcf8>
   14de3:	mov    QWORD PTR [r15+0x40],0x0
   14deb:	mov    QWORD PTR [rsp+0x10],rax
   14df0:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14df5:	movzx  eax,WORD PTR [rbp+0x70]
   14df9:	cmp    ax,0x7
   14dfd:	je     14be0 <__cxa_finalize@plt+0x10dc8>
   14e03:	cmp    ax,0x4
   14e07:	je     14be0 <__cxa_finalize@plt+0x10dc8>
   14e0d:	mov    esi,0x6
   14e12:	mov    WORD PTR [rbp+0x70],si
   14e16:	jmp    14be0 <__cxa_finalize@plt+0x10dc8>
   14e1b:	mov    rdi,r13
   14e1e:	mov    r15,rbp
   14e21:	mov    rbp,QWORD PTR [rsp+0x20]
   14e26:	call   3e10 <free@plt>
   14e2b:	mov    rdi,QWORD PTR [rsp+0x10]
   14e30:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   14e35:	mov    rdi,QWORD PTR [rbp+0x18]
   14e39:	call   38e0 <closedir@plt>
   14e3e:	mov    r8d,0x7
   14e44:	mov    QWORD PTR [rbp+0x18],0x0
   14e4c:	mov    QWORD PTR [rsp+0x10],0x0
   14e55:	mov    WORD PTR [rbp+0x70],r8w
   14e5a:	or     DWORD PTR [r15+0x48],0x4000
   14e62:	mov    DWORD PTR [r12],0x24
   14e6a:	jmp    14a4d <__cxa_finalize@plt+0x10c35>
   14e6f:	mov    DWORD PTR [r13+0x90],0x0
   14e7a:	mov    eax,0x1
   14e7f:	jmp    1463c <__cxa_finalize@plt+0x10824>
   14e84:	xchg   ax,ax
   14e86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014e90 <fts_open@@Base>:
   14e90:	push   r15
   14e92:	push   r14
   14e94:	push   r13
   14e96:	push   r12
   14e98:	push   rbp
   14e99:	push   rbx
   14e9a:	sub    rsp,0x28
   14e9e:	test   esi,0xffffe000
   14ea4:	jne    15218 <fts_open@@Base+0x388>
   14eaa:	mov    eax,esi
   14eac:	mov    ebp,esi
   14eae:	and    eax,0x204
   14eb3:	cmp    eax,0x204
   14eb8:	je     15218 <fts_open@@Base+0x388>
   14ebe:	test   sil,0x12
   14ec2:	je     15218 <fts_open@@Base+0x388>
   14ec8:	mov    r13,rdi
   14ecb:	mov    esi,0x1
   14ed0:	mov    edi,0x80
   14ed5:	mov    r14,rdx
   14ed8:	call   3970 <calloc@plt>
   14edd:	test   rax,rax
   14ee0:	mov    rbx,rax
   14ee3:	je     1512e <fts_open@@Base+0x29e>
   14ee9:	test   bpl,0x2
   14eed:	mov    QWORD PTR [rax+0x40],r14
   14ef1:	jne    15140 <fts_open@@Base+0x2b0>
   14ef7:	mov    rdi,QWORD PTR [r13+0x0]
   14efb:	mov    DWORD PTR [rax+0x48],ebp
   14efe:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
   14f05:	test   rdi,rdi
   14f08:	je     1515f <fts_open@@Base+0x2cf>
   14f0e:	mov    r15,r13
   14f11:	xor    r12d,r12d
   14f14:	nop    DWORD PTR [rax+0x0]
   14f18:	call   3720 <strlen@plt>
   14f1d:	cmp    r12,rax
   14f20:	cmovb  r12,rax
   14f24:	add    r15,0x8
   14f28:	mov    rdi,QWORD PTR [r15]
   14f2b:	test   rdi,rdi
   14f2e:	jne    14f18 <fts_open@@Base+0x88>
   14f30:	lea    rdx,[r12+0x1]
   14f35:	mov    eax,0x1000
   14f3a:	cmp    rdx,0x1000
   14f41:	cmovb  rdx,rax
   14f45:	lea    rsi,[rbx+0x30]
   14f49:	lea    rdi,[rbx+0x20]
   14f4d:	call   13fc0 <__cxa_finalize@plt+0x101a8>
   14f52:	test   al,al
   14f54:	mov    BYTE PTR [rsp+0x16],al
   14f58:	je     151e9 <fts_open@@Base+0x359>
   14f5e:	mov    rsi,QWORD PTR [r13+0x0]
   14f62:	test   rsi,rsi
   14f65:	je     15200 <fts_open@@Base+0x370>
   14f6b:	lea    rsi,[rip+0x6aee]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   14f72:	xor    edx,edx
   14f74:	mov    rdi,rbx
   14f77:	call   13c20 <__cxa_finalize@plt+0xfe08>
   14f7c:	test   rax,rax
   14f7f:	mov    r15,rax
   14f82:	je     151e0 <fts_open@@Base+0x350>
   14f88:	mov    rax,0xffffffffffffffff
   14f8f:	test   r14,r14
   14f92:	mov    rsi,QWORD PTR [r13+0x0]
   14f96:	mov    QWORD PTR [r15+0x58],rax
   14f9a:	mov    QWORD PTR [r15+0x68],rax
   14f9e:	je     14fad <fts_open@@Base+0x11d>
   14fa0:	mov    eax,DWORD PTR [rbx+0x48]
   14fa3:	shr    eax,0xa
   14fa6:	and    eax,0x1
   14fa9:	mov    BYTE PTR [rsp+0x16],al
   14fad:	test   rsi,rsi
   14fb0:	je     1520c <fts_open@@Base+0x37c>
   14fb6:	shr    ebp,0xc
   14fb9:	mov    QWORD PTR [rsp+0x18],0x0
   14fc2:	xor    r12d,r12d
   14fc5:	xor    ebp,0x1
   14fc8:	mov    eax,ebp
   14fca:	xor    ebp,ebp
   14fcc:	and    eax,0x1
   14fcf:	mov    BYTE PTR [rsp+0x17],al
   14fd3:	jmp    1504c <fts_open@@Base+0x1bc>
   14fd5:	nop    DWORD PTR [rax]
   14fd8:	mov    rdx,rax
   14fdb:	mov    rdi,rbx
   14fde:	call   13c20 <__cxa_finalize@plt+0xfe08>
   14fe3:	test   rax,rax
   14fe6:	mov    rcx,rax
   14fe9:	je     151d0 <fts_open@@Base+0x340>
   14fef:	mov    QWORD PTR [rax+0x58],0x0
   14ff7:	mov    QWORD PTR [rax+0x8],r15
   14ffb:	lea    rax,[rax+0x108]
   15002:	test   r12,r12
   15005:	mov    QWORD PTR [rcx+0x30],rax
   15009:	je     15170 <fts_open@@Base+0x2e0>
   1500f:	cmp    BYTE PTR [rsp+0x16],0x0
   15014:	je     15170 <fts_open@@Base+0x2e0>
   1501a:	mov    esi,0xb
   1501f:	test   r14,r14
   15022:	mov    QWORD PTR [rcx+0xa8],0x2
   1502d:	mov    WORD PTR [rcx+0x70],si
   15031:	je     151b0 <fts_open@@Base+0x320>
   15037:	mov    QWORD PTR [rcx+0x10],r12
   1503b:	mov    r12,rcx
   1503e:	add    rbp,0x1
   15042:	mov    rsi,QWORD PTR [r13+rbp*8+0x0]
   15047:	test   rsi,rsi
   1504a:	je     150a0 <fts_open@@Base+0x210>
   1504c:	mov    rdi,rsi
   1504f:	mov    QWORD PTR [rsp+0x8],rsi
   15054:	call   3720 <strlen@plt>
   15059:	cmp    rax,0x2
   1505d:	mov    rsi,QWORD PTR [rsp+0x8]
   15062:	jbe    14fd8 <fts_open@@Base+0x148>
   15068:	cmp    BYTE PTR [rsp+0x17],0x0
   1506d:	je     14fd8 <fts_open@@Base+0x148>
   15073:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2f
   15078:	jne    14fd8 <fts_open@@Base+0x148>
   1507e:	xchg   ax,ax
   15080:	cmp    BYTE PTR [rsi+rax*1-0x2],0x2f
   15085:	jne    14fd8 <fts_open@@Base+0x148>
   1508b:	sub    rax,0x1
   1508f:	cmp    rax,0x1
   15093:	jne    15080 <fts_open@@Base+0x1f0>
   15095:	jmp    14fd8 <fts_open@@Base+0x148>
   1509a:	nop    WORD PTR [rax+rax*1+0x0]
   150a0:	test   r14,r14
   150a3:	je     150bc <fts_open@@Base+0x22c>
   150a5:	cmp    rbp,0x1
   150a9:	jbe    150bc <fts_open@@Base+0x22c>
   150ab:	mov    rsi,r12
   150ae:	mov    rdx,rbp
   150b1:	mov    rdi,rbx
   150b4:	call   13b10 <__cxa_finalize@plt+0xfcf8>
   150b9:	mov    r12,rax
   150bc:	lea    rsi,[rip+0x699d]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   150c3:	xor    edx,edx
   150c5:	mov    rdi,rbx
   150c8:	call   13c20 <__cxa_finalize@plt+0xfe08>
   150cd:	test   rax,rax
   150d0:	mov    QWORD PTR [rbx],rax
   150d3:	je     151d0 <fts_open@@Base+0x340>
   150d9:	mov    edi,DWORD PTR [rbx+0x48]
   150dc:	mov    edx,0x9
   150e1:	lea    rsi,[rbx+0x58]
   150e5:	mov    QWORD PTR [rax+0x10],r12
   150e9:	mov    WORD PTR [rax+0x70],dx
   150ed:	call   14030 <__cxa_finalize@plt+0x10218>
   150f2:	test   al,al
   150f4:	je     151d0 <fts_open@@Base+0x340>
   150fa:	mov    esi,DWORD PTR [rbx+0x48]
   150fd:	test   esi,0x204
   15103:	jne    15120 <fts_open@@Base+0x290>
   15105:	mov    edi,DWORD PTR [rbx+0x2c]
   15108:	lea    rdx,[rip+0x49cf]        # 19ade <_IO_stdin_used@@Base+0x13e>
   1510f:	call   140a0 <__cxa_finalize@plt+0x10288>
   15114:	test   eax,eax
   15116:	mov    DWORD PTR [rbx+0x28],eax
   15119:	jns    15120 <fts_open@@Base+0x290>
   1511b:	or     DWORD PTR [rbx+0x48],0x4
   1511f:	nop
   15120:	lea    rdi,[rbx+0x60]
   15124:	mov    esi,0xffffffff
   15129:	call   16560 <fts_children@@Base+0x9f0>
   1512e:	add    rsp,0x28
   15132:	mov    rax,rbx
   15135:	pop    rbx
   15136:	pop    rbp
   15137:	pop    r12
   15139:	pop    r13
   1513b:	pop    r14
   1513d:	pop    r15
   1513f:	ret    
   15140:	mov    rdi,QWORD PTR [r13+0x0]
   15144:	mov    eax,ebp
   15146:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
   1514d:	and    ah,0xfd
   15150:	or     eax,0x4
   15153:	test   rdi,rdi
   15156:	mov    DWORD PTR [rbx+0x48],eax
   15159:	jne    14f0e <fts_open@@Base+0x7e>
   1515f:	mov    edx,0x1000
   15164:	jmp    14f45 <fts_open@@Base+0xb5>
   15169:	nop    DWORD PTR [rax+0x0]
   15170:	xor    edx,edx
   15172:	mov    rsi,rcx
   15175:	mov    rdi,rbx
   15178:	mov    QWORD PTR [rsp+0x8],rcx
   1517d:	call   13940 <__cxa_finalize@plt+0xfb28>
   15182:	mov    rcx,QWORD PTR [rsp+0x8]
   15187:	test   r14,r14
   1518a:	mov    WORD PTR [rcx+0x70],ax
   1518e:	jne    15037 <fts_open@@Base+0x1a7>
   15194:	test   r12,r12
   15197:	mov    QWORD PTR [rcx+0x10],0x0
   1519f:	jne    151b8 <fts_open@@Base+0x328>
   151a1:	mov    QWORD PTR [rsp+0x18],rcx
   151a6:	mov    r12,rcx
   151a9:	jmp    1503e <fts_open@@Base+0x1ae>
   151ae:	xchg   ax,ax
   151b0:	mov    QWORD PTR [rcx+0x10],0x0
   151b8:	mov    rax,QWORD PTR [rsp+0x18]
   151bd:	mov    QWORD PTR [rsp+0x18],rcx
   151c2:	mov    QWORD PTR [rax+0x10],rcx
   151c6:	jmp    1503e <fts_open@@Base+0x1ae>
   151cb:	nop    DWORD PTR [rax+rax*1+0x0]
   151d0:	mov    rdi,r12
   151d3:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   151d8:	mov    rdi,r15
   151db:	call   3e10 <free@plt>
   151e0:	mov    rdi,QWORD PTR [rbx+0x20]
   151e4:	call   3e10 <free@plt>
   151e9:	mov    rdi,rbx
   151ec:	xor    ebx,ebx
   151ee:	call   3e10 <free@plt>
   151f3:	jmp    1512e <fts_open@@Base+0x29e>
   151f8:	nop    DWORD PTR [rax+rax*1+0x0]
   15200:	xor    r15d,r15d
   15203:	test   r14,r14
   15206:	jne    14fa0 <fts_open@@Base+0x110>
   1520c:	xor    r12d,r12d
   1520f:	jmp    150bc <fts_open@@Base+0x22c>
   15214:	nop    DWORD PTR [rax+0x0]
   15218:	call   3540 <__errno_location@plt>
   1521d:	xor    ebx,ebx
   1521f:	mov    DWORD PTR [rax],0x16
   15225:	jmp    1512e <fts_open@@Base+0x29e>
   1522a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015230 <fts_close@@Base>:
   15230:	push   r12
   15232:	push   rbp
   15233:	mov    rbp,rdi
   15236:	push   rbx
   15237:	mov    rdi,QWORD PTR [rdi]
   1523a:	test   rdi,rdi
   1523d:	je     15283 <fts_close@@Base+0x53>
   1523f:	cmp    QWORD PTR [rdi+0x58],0x0
   15244:	jns    1525f <fts_close@@Base+0x2f>
   15246:	jmp    15360 <fts_close@@Base+0x130>
   1524b:	nop    DWORD PTR [rax+rax*1+0x0]
   15250:	call   3e10 <free@plt>
   15255:	cmp    QWORD PTR [rbx+0x58],0x0
   1525a:	mov    rdi,rbx
   1525d:	js     1527b <fts_close@@Base+0x4b>
   1525f:	mov    rbx,QWORD PTR [rdi+0x10]
   15263:	test   rbx,rbx
   15266:	jne    15250 <fts_close@@Base+0x20>
   15268:	mov    rbx,QWORD PTR [rdi+0x8]
   1526c:	call   3e10 <free@plt>
   15271:	cmp    QWORD PTR [rbx+0x58],0x0
   15276:	mov    rdi,rbx
   15279:	jns    1525f <fts_close@@Base+0x2f>
   1527b:	mov    rdi,rbx
   1527e:	call   3e10 <free@plt>
   15283:	mov    rdi,QWORD PTR [rbp+0x8]
   15287:	test   rdi,rdi
   1528a:	je     15291 <fts_close@@Base+0x61>
   1528c:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   15291:	mov    rdi,QWORD PTR [rbp+0x10]
   15295:	call   3e10 <free@plt>
   1529a:	mov    rdi,QWORD PTR [rbp+0x20]
   1529e:	call   3e10 <free@plt>
   152a3:	mov    eax,DWORD PTR [rbp+0x48]
   152a6:	test   ah,0x2
   152a9:	je     15310 <fts_close@@Base+0xe0>
   152ab:	mov    edi,DWORD PTR [rbp+0x2c]
   152ae:	test   edi,edi
   152b0:	jns    15340 <fts_close@@Base+0x110>
   152b6:	xor    ebx,ebx
   152b8:	lea    rdi,[rbp+0x60]
   152bc:	call   13d00 <__cxa_finalize@plt+0xfee8>
   152c1:	mov    rdi,QWORD PTR [rbp+0x50]
   152c5:	test   rdi,rdi
   152c8:	je     152cf <fts_close@@Base+0x9f>
   152ca:	call   e660 <__cxa_finalize@plt+0xa848>
   152cf:	test   DWORD PTR [rbp+0x48],0x102
   152d6:	mov    rdi,QWORD PTR [rbp+0x58]
   152da:	je     15300 <fts_close@@Base+0xd0>
   152dc:	test   rdi,rdi
   152df:	je     152e6 <fts_close@@Base+0xb6>
   152e1:	call   e660 <__cxa_finalize@plt+0xa848>
   152e6:	mov    rdi,rbp
   152e9:	call   3e10 <free@plt>
   152ee:	test   ebx,ebx
   152f0:	jne    153a1 <fts_close@@Base+0x171>
   152f6:	mov    eax,ebx
   152f8:	pop    rbx
   152f9:	pop    rbp
   152fa:	pop    r12
   152fc:	ret    
   152fd:	nop    DWORD PTR [rax]
   15300:	call   3e10 <free@plt>
   15305:	jmp    152e6 <fts_close@@Base+0xb6>
   15307:	nop    WORD PTR [rax+rax*1+0x0]
   15310:	test   al,0x4
   15312:	jne    152b6 <fts_close@@Base+0x86>
   15314:	mov    edi,DWORD PTR [rbp+0x28]
   15317:	call   3b50 <fchdir@plt>
   1531c:	test   eax,eax
   1531e:	jne    15370 <fts_close@@Base+0x140>
   15320:	mov    edi,DWORD PTR [rbp+0x28]
   15323:	call   38b0 <close@plt>
   15328:	test   eax,eax
   1532a:	je     152b6 <fts_close@@Base+0x86>
   1532c:	call   3540 <__errno_location@plt>
   15331:	mov    r12,rax
   15334:	jmp    15398 <fts_close@@Base+0x168>
   15336:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15340:	call   38b0 <close@plt>
   15345:	test   eax,eax
   15347:	je     152b6 <fts_close@@Base+0x86>
   1534d:	call   3540 <__errno_location@plt>
   15352:	mov    ebx,DWORD PTR [rax]
   15354:	jmp    152b8 <fts_close@@Base+0x88>
   15359:	nop    DWORD PTR [rax+0x0]
   15360:	mov    rbx,rdi
   15363:	mov    rdi,rbx
   15366:	call   3e10 <free@plt>
   1536b:	jmp    15283 <fts_close@@Base+0x53>
   15370:	call   3540 <__errno_location@plt>
   15375:	mov    edi,DWORD PTR [rbp+0x28]
   15378:	mov    r12,rax
   1537b:	mov    ebx,DWORD PTR [rax]
   1537d:	call   38b0 <close@plt>
   15382:	test   eax,eax
   15384:	je     152b8 <fts_close@@Base+0x88>
   1538a:	test   ebx,ebx
   1538c:	jne    152b8 <fts_close@@Base+0x88>
   15392:	nop    WORD PTR [rax+rax*1+0x0]
   15398:	mov    ebx,DWORD PTR [r12]
   1539c:	jmp    152b8 <fts_close@@Base+0x88>
   153a1:	call   3540 <__errno_location@plt>
   153a6:	mov    DWORD PTR [rax],ebx
   153a8:	mov    ebx,0xffffffff
   153ad:	jmp    152f6 <fts_close@@Base+0xc6>
   153b2:	nop    DWORD PTR [rax+0x0]
   153b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000153c0 <fts_read@@Base>:
   153c0:	push   r14
   153c2:	push   r13
   153c4:	push   r12
   153c6:	push   rbp
   153c7:	push   rbx
   153c8:	mov    rbp,QWORD PTR [rdi]
   153cb:	test   rbp,rbp
   153ce:	je     154de <fts_read@@Base+0x11e>
   153d4:	mov    edx,DWORD PTR [rdi+0x48]
   153d7:	test   dh,0x40
   153da:	jne    154de <fts_read@@Base+0x11e>
   153e0:	movzx  eax,WORD PTR [rbp+0x74]
   153e4:	mov    ebx,0x3
   153e9:	mov    r12,rdi
   153ec:	mov    WORD PTR [rbp+0x74],bx
   153f0:	cmp    ax,0x1
   153f4:	je     15640 <fts_read@@Base+0x280>
   153fa:	cmp    ax,0x2
   153fe:	movzx  ecx,WORD PTR [rbp+0x70]
   15402:	je     154f0 <fts_read@@Base+0x130>
   15408:	cmp    cx,0x1
   1540c:	jne    15440 <fts_read@@Base+0x80>
   1540e:	jmp    15630 <fts_read@@Base+0x270>
   15413:	nop    DWORD PTR [rax+rax*1+0x0]
   15418:	mov    QWORD PTR [r12],rbx
   1541c:	mov    rdi,rbp
   1541f:	call   3e10 <free@plt>
   15424:	cmp    QWORD PTR [rbx+0x58],0x0
   15429:	je     15660 <fts_read@@Base+0x2a0>
   1542f:	movzx  eax,WORD PTR [rbx+0x74]
   15433:	mov    rbp,rbx
   15436:	cmp    ax,0x4
   1543a:	jne    15768 <fts_read@@Base+0x3a8>
   15440:	mov    rbx,QWORD PTR [rbp+0x10]
   15444:	test   rbx,rbx
   15447:	jne    15418 <fts_read@@Base+0x58>
   15449:	mov    rbx,QWORD PTR [rbp+0x8]
   1544d:	cmp    QWORD PTR [rbx+0x18],0x0
   15452:	jne    159c0 <fts_read@@Base+0x600>
   15458:	mov    QWORD PTR [r12],rbx
   1545c:	mov    rdi,rbp
   1545f:	call   3e10 <free@plt>
   15464:	cmp    QWORD PTR [rbx+0x58],0xffffffffffffffff
   15469:	je     15922 <fts_read@@Base+0x562>
   1546f:	cmp    WORD PTR [rbx+0x70],0xb
   15474:	je     155af <fts_read@@Base+0x1ef>
   1547a:	mov    rdx,QWORD PTR [r12+0x20]
   1547f:	mov    rax,QWORD PTR [rbx+0x48]
   15483:	mov    BYTE PTR [rdx+rax*1],0x0
   15487:	cmp    QWORD PTR [rbx+0x58],0x0
   1548c:	je     15850 <fts_read@@Base+0x490>
   15492:	movzx  eax,WORD PTR [rbx+0x72]
   15496:	test   al,0x2
   15498:	je     15808 <fts_read@@Base+0x448>
   1549e:	mov    eax,DWORD PTR [r12+0x48]
   154a3:	mov    edi,DWORD PTR [rbx+0x44]
   154a6:	test   al,0x4
   154a8:	je     158ac <fts_read@@Base+0x4ec>
   154ae:	call   38b0 <close@plt>
   154b3:	mov    edi,DWORD PTR [r12+0x48]
   154b8:	cmp    WORD PTR [rbx+0x70],0x2
   154bd:	je     154d3 <fts_read@@Base+0x113>
   154bf:	mov    ecx,DWORD PTR [rbx+0x40]
   154c2:	test   ecx,ecx
   154c4:	je     15868 <fts_read@@Base+0x4a8>
   154ca:	mov    edx,0x7
   154cf:	mov    WORD PTR [rbx+0x70],dx
   154d3:	and    edi,0x4000
   154d9:	mov    rbp,rbx
   154dc:	je     1555a <fts_read@@Base+0x19a>
   154de:	xor    ebp,ebp
   154e0:	pop    rbx
   154e1:	mov    rax,rbp
   154e4:	pop    rbp
   154e5:	pop    r12
   154e7:	pop    r13
   154e9:	pop    r14
   154eb:	ret    
   154ec:	nop    DWORD PTR [rax+0x0]
   154f0:	lea    eax,[rcx-0xc]
   154f3:	cmp    ax,0x1
   154f7:	jbe    15570 <fts_read@@Base+0x1b0>
   154f9:	cmp    cx,0x1
   154fd:	jne    15440 <fts_read@@Base+0x80>
   15503:	test   dl,0x40
   15506:	je     155b8 <fts_read@@Base+0x1f8>
   1550c:	mov    rax,QWORD PTR [r12+0x18]
   15511:	cmp    QWORD PTR [rbp+0x78],rax
   15515:	je     155b8 <fts_read@@Base+0x1f8>
   1551b:	test   BYTE PTR [rbp+0x72],0x2
   1551f:	jne    15a00 <fts_read@@Base+0x640>
   15525:	mov    rdi,QWORD PTR [r12+0x8]
   1552a:	test   rdi,rdi
   1552d:	je     1553d <fts_read@@Base+0x17d>
   1552f:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   15534:	mov    QWORD PTR [r12+0x8],0x0
   1553d:	mov    edi,DWORD PTR [r12+0x48]
   15542:	mov    r10d,0x6
   15548:	lea    rsi,[r12+0x58]
   1554d:	mov    WORD PTR [rbp+0x70],r10w
   15552:	mov    rdx,rbp
   15555:	call   14410 <__cxa_finalize@plt+0x105f8>
   1555a:	pop    rbx
   1555b:	mov    rax,rbp
   1555e:	pop    rbp
   1555f:	pop    r12
   15561:	pop    r13
   15563:	pop    r14
   15565:	ret    
   15566:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15570:	mov    edx,0x1
   15575:	mov    rsi,rbp
   15578:	call   13940 <__cxa_finalize@plt+0xfb28>
   1557d:	cmp    ax,0x1
   15581:	mov    WORD PTR [rbp+0x70],ax
   15585:	je     158cc <fts_read@@Base+0x50c>
   1558b:	cmp    ax,0xb
   1558f:	mov    QWORD PTR [r12],rbp
   15593:	jne    1555a <fts_read@@Base+0x19a>
   15595:	nop    DWORD PTR [rax]
   15598:	mov    rax,QWORD PTR [rbp+0xa8]
   1559f:	cmp    rax,0x2
   155a3:	je     15948 <fts_read@@Base+0x588>
   155a9:	cmp    rax,0x1
   155ad:	je     1555a <fts_read@@Base+0x19a>
   155af:	call   3530 <abort@plt>
   155b4:	nop    DWORD PTR [rax+0x0]
   155b8:	mov    rdi,QWORD PTR [r12+0x8]
   155bd:	test   rdi,rdi
   155c0:	je     157d8 <fts_read@@Base+0x418>
   155c6:	test   dh,0x20
   155c9:	jne    157c2 <fts_read@@Base+0x402>
   155cf:	mov    rcx,QWORD PTR [rbp+0x30]
   155d3:	mov    edx,0xffffffff
   155d8:	mov    rsi,rbp
   155db:	mov    rdi,r12
   155de:	call   140f0 <__cxa_finalize@plt+0x102d8>
   155e3:	test   eax,eax
   155e5:	je     158a2 <fts_read@@Base+0x4e2>
   155eb:	call   3540 <__errno_location@plt>
   155f0:	mov    eax,DWORD PTR [rax]
   155f2:	or     WORD PTR [rbp+0x72],0x1
   155f7:	mov    DWORD PTR [rbp+0x40],eax
   155fa:	mov    rbp,QWORD PTR [r12+0x8]
   155ff:	test   rbp,rbp
   15602:	je     157f6 <fts_read@@Base+0x436>
   15608:	mov    rax,rbp
   1560b:	nop    DWORD PTR [rax+rax*1+0x0]
   15610:	mov    rdx,QWORD PTR [rax+0x8]
   15614:	mov    rdx,QWORD PTR [rdx+0x30]
   15618:	mov    QWORD PTR [rax+0x30],rdx
   1561c:	mov    rax,QWORD PTR [rax+0x10]
   15620:	test   rax,rax
   15623:	jne    15610 <fts_read@@Base+0x250>
   15625:	jmp    157f6 <fts_read@@Base+0x436>
   1562a:	nop    WORD PTR [rax+rax*1+0x0]
   15630:	cmp    ax,0x4
   15634:	jne    15503 <fts_read@@Base+0x143>
   1563a:	jmp    1551b <fts_read@@Base+0x15b>
   1563f:	nop
   15640:	mov    rsi,rbp
   15643:	xor    edx,edx
   15645:	call   13940 <__cxa_finalize@plt+0xfb28>
   1564a:	mov    WORD PTR [rbp+0x70],ax
   1564e:	mov    rax,rbp
   15651:	pop    rbx
   15652:	pop    rbp
   15653:	pop    r12
   15655:	pop    r13
   15657:	pop    r14
   15659:	ret    
   1565a:	nop    WORD PTR [rax+rax*1+0x0]
   15660:	mov    rdi,r12
   15663:	call   13f60 <__cxa_finalize@plt+0x10148>
   15668:	test   eax,eax
   1566a:	jne    15a71 <fts_read@@Base+0x6b1>
   15670:	test   DWORD PTR [r12+0x48],0x102
   15679:	mov    rdi,QWORD PTR [r12+0x58]
   1567e:	je     157b8 <fts_read@@Base+0x3f8>
   15684:	test   rdi,rdi
   15687:	je     1568e <fts_read@@Base+0x2ce>
   15689:	call   e660 <__cxa_finalize@plt+0xa848>
   1568e:	mov    rdx,QWORD PTR [rbx+0x60]
   15692:	lea    rbp,[rbx+0x108]
   15699:	mov    rdi,QWORD PTR [r12+0x20]
   1569e:	mov    rsi,rbp
   156a1:	mov    QWORD PTR [rbx+0x48],rdx
   156a5:	add    rdx,0x1
   156a9:	call   3c00 <memmove@plt>
   156ae:	mov    esi,0x2f
   156b3:	mov    rdi,rbp
   156b6:	call   37e0 <strrchr@plt>
   156bb:	test   rax,rax
   156be:	je     156eb <fts_read@@Base+0x32b>
   156c0:	cmp    rbp,rax
   156c3:	je     15890 <fts_read@@Base+0x4d0>
   156c9:	lea    r13,[rax+0x1]
   156cd:	mov    rdi,r13
   156d0:	call   3720 <strlen@plt>
   156d5:	lea    rdx,[rax+0x1]
   156d9:	mov    r14,rax
   156dc:	mov    rsi,r13
   156df:	mov    rdi,rbp
   156e2:	call   3c00 <memmove@plt>
   156e7:	mov    QWORD PTR [rbx+0x60],r14
   156eb:	mov    rax,QWORD PTR [r12+0x20]
   156f0:	mov    edi,DWORD PTR [r12+0x48]
   156f5:	lea    rsi,[r12+0x58]
   156fa:	mov    rbp,rbx
   156fd:	mov    QWORD PTR [rbx+0x38],rax
   15701:	mov    QWORD PTR [rbx+0x30],rax
   15705:	call   14030 <__cxa_finalize@plt+0x10218>
   1570a:	movzx  eax,WORD PTR [rbx+0x70]
   1570e:	cmp    ax,0xb
   15712:	mov    QWORD PTR [r12],rbp
   15716:	je     15598 <fts_read@@Base+0x1d8>
   1571c:	cmp    ax,0x1
   15720:	jne    1555a <fts_read@@Base+0x19a>
   15726:	cmp    QWORD PTR [rbp+0x58],0x0
   1572b:	jne    15736 <fts_read@@Base+0x376>
   1572d:	mov    rax,QWORD PTR [rbp+0x78]
   15731:	mov    QWORD PTR [r12+0x18],rax
   15736:	mov    edi,DWORD PTR [r12+0x48]
   1573b:	lea    rsi,[r12+0x58]
   15740:	mov    rdx,rbp
   15743:	call   14360 <__cxa_finalize@plt+0x10548>
   15748:	test   al,al
   1574a:	jne    1555a <fts_read@@Base+0x19a>
   15750:	call   3540 <__errno_location@plt>
   15755:	xor    ebp,ebp
   15757:	mov    DWORD PTR [rax],0xc
   1575d:	jmp    1555a <fts_read@@Base+0x19a>
   15762:	nop    WORD PTR [rax+rax*1+0x0]
   15768:	cmp    ax,0x2
   1576c:	je     15a0d <fts_read@@Base+0x64d>
   15772:	mov    rax,QWORD PTR [rbp+0x8]
   15776:	lea    rsi,[rbp+0x108]
   1577d:	mov    rdi,QWORD PTR [rax+0x48]
   15781:	mov    rax,QWORD PTR [rax+0x38]
   15785:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2f
   1578a:	lea    rdx,[rdi-0x1]
   1578e:	cmove  rdi,rdx
   15792:	add    rdi,QWORD PTR [r12+0x20]
   15797:	mov    BYTE PTR [rdi],0x2f
   1579a:	mov    rax,QWORD PTR [rbp+0x60]
   1579e:	add    rdi,0x1
   157a2:	lea    rdx,[rax+0x1]
   157a6:	call   3c00 <memmove@plt>
   157ab:	movzx  eax,WORD PTR [rbp+0x70]
   157af:	jmp    1570e <fts_read@@Base+0x34e>
   157b4:	nop    DWORD PTR [rax+0x0]
   157b8:	call   3e10 <free@plt>
   157bd:	jmp    1568e <fts_read@@Base+0x2ce>
   157c2:	and    dh,0xdf
   157c5:	mov    DWORD PTR [r12+0x48],edx
   157ca:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   157cf:	mov    QWORD PTR [r12+0x8],0x0
   157d8:	mov    esi,0x3
   157dd:	mov    rdi,r12
   157e0:	call   144d0 <__cxa_finalize@plt+0x106b8>
   157e5:	test   rax,rax
   157e8:	mov    QWORD PTR [r12+0x8],rax
   157ed:	je     158e4 <fts_read@@Base+0x524>
   157f3:	mov    rbp,rax
   157f6:	mov    QWORD PTR [r12+0x8],0x0
   157ff:	jmp    15772 <fts_read@@Base+0x3b2>
   15804:	nop    DWORD PTR [rax+0x0]
   15808:	test   al,0x1
   1580a:	jne    154b3 <fts_read@@Base+0xf3>
   15810:	mov    rsi,QWORD PTR [rbx+0x8]
   15814:	lea    rcx,[rip+0x42c2]        # 19add <_IO_stdin_used@@Base+0x13d>
   1581b:	mov    edx,0xffffffff
   15820:	mov    rdi,r12
   15823:	call   140f0 <__cxa_finalize@plt+0x102d8>
   15828:	test   eax,eax
   1582a:	je     154b3 <fts_read@@Base+0xf3>
   15830:	call   3540 <__errno_location@plt>
   15835:	mov    edi,DWORD PTR [r12+0x48]
   1583a:	mov    eax,DWORD PTR [rax]
   1583c:	or     edi,0x4000
   15842:	mov    DWORD PTR [rbx+0x40],eax
   15845:	mov    DWORD PTR [r12+0x48],edi
   1584a:	jmp    154b8 <fts_read@@Base+0xf8>
   1584f:	nop
   15850:	mov    rdi,r12
   15853:	call   13f60 <__cxa_finalize@plt+0x10148>
   15858:	test   eax,eax
   1585a:	jne    15830 <fts_read@@Base+0x470>
   1585c:	jmp    154b3 <fts_read@@Base+0xf3>
   15861:	nop    DWORD PTR [rax+0x0]
   15868:	mov    eax,0x6
   1586d:	lea    rsi,[r12+0x58]
   15872:	mov    rdx,rbx
   15875:	mov    WORD PTR [rbx+0x70],ax
   15879:	call   14410 <__cxa_finalize@plt+0x105f8>
   1587e:	mov    edi,DWORD PTR [r12+0x48]
   15883:	jmp    154d3 <fts_read@@Base+0x113>
   15888:	nop    DWORD PTR [rax+rax*1+0x0]
   15890:	cmp    BYTE PTR [rbx+0x109],0x0
   15897:	jne    156c9 <fts_read@@Base+0x309>
   1589d:	jmp    156eb <fts_read@@Base+0x32b>
   158a2:	mov    rbp,QWORD PTR [r12+0x8]
   158a7:	jmp    157f6 <fts_read@@Base+0x436>
   158ac:	test   ah,0x2
   158af:	je     15a4d <fts_read@@Base+0x68d>
   158b5:	mov    esi,edi
   158b7:	mov    edx,0x1
   158bc:	mov    rdi,r12
   158bf:	call   13ef0 <__cxa_finalize@plt+0x100d8>
   158c4:	mov    edi,DWORD PTR [rbx+0x44]
   158c7:	jmp    154ae <fts_read@@Base+0xee>
   158cc:	mov    esi,DWORD PTR [r12+0x48]
   158d1:	test   sil,0x4
   158d5:	je     15ad7 <fts_read@@Base+0x717>
   158db:	mov    QWORD PTR [r12],rbp
   158df:	jmp    15726 <fts_read@@Base+0x366>
   158e4:	mov    edi,DWORD PTR [r12+0x48]
   158e9:	test   edi,0x4000
   158ef:	jne    154de <fts_read@@Base+0x11e>
   158f5:	mov    r9d,DWORD PTR [rbp+0x40]
   158f9:	test   r9d,r9d
   158fc:	je     15910 <fts_read@@Base+0x550>
   158fe:	cmp    WORD PTR [rbp+0x70],0x4
   15903:	je     15910 <fts_read@@Base+0x550>
   15905:	mov    r8d,0x7
   1590b:	mov    WORD PTR [rbp+0x70],r8w
   15910:	lea    rsi,[r12+0x58]
   15915:	mov    rdx,rbp
   15918:	call   14410 <__cxa_finalize@plt+0x105f8>
   1591d:	jmp    1555a <fts_read@@Base+0x19a>
   15922:	mov    rdi,rbx
   15925:	xor    ebp,ebp
   15927:	call   3e10 <free@plt>
   1592c:	call   3540 <__errno_location@plt>
   15931:	mov    DWORD PTR [rax],0x0
   15937:	mov    QWORD PTR [r12],0x0
   1593f:	jmp    1555a <fts_read@@Base+0x19a>
   15944:	nop    DWORD PTR [rax+0x0]
   15948:	mov    rbx,QWORD PTR [rbp+0x8]
   1594c:	cmp    QWORD PTR [rbx+0x68],0x0
   15951:	jne    15964 <fts_read@@Base+0x5a4>
   15953:	mov    eax,DWORD PTR [r12+0x48]
   15958:	and    eax,0x18
   1595b:	cmp    eax,0x18
   1595e:	je     15abd <fts_read@@Base+0x6fd>
   15964:	xor    edx,edx
   15966:	mov    rsi,rbp
   15969:	mov    rdi,r12
   1596c:	call   13940 <__cxa_finalize@plt+0xfb28>
   15971:	mov    edx,DWORD PTR [rbp+0x90]
   15977:	mov    WORD PTR [rbp+0x70],ax
   1597b:	and    edx,0xf000
   15981:	cmp    edx,0x4000
   15987:	jne    1571c <fts_read@@Base+0x35c>
   1598d:	cmp    QWORD PTR [rbp+0x58],0x0
   15992:	je     15aae <fts_read@@Base+0x6ee>
   15998:	mov    rcx,QWORD PTR [rbx+0x68]
   1599c:	lea    rdx,[rcx-0x1]
   159a0:	cmp    rdx,0xfffffffffffffffd
   159a4:	ja     159aa <fts_read@@Base+0x5ea>
   159a6:	mov    QWORD PTR [rbx+0x68],rdx
   159aa:	cmp    ax,0x1
   159ae:	jne    1555a <fts_read@@Base+0x19a>
   159b4:	jmp    15736 <fts_read@@Base+0x376>
   159b9:	nop    DWORD PTR [rax+0x0]
   159c0:	mov    rax,QWORD PTR [rbx+0x48]
   159c4:	mov    rdx,QWORD PTR [r12+0x20]
   159c9:	mov    esi,0x3
   159ce:	mov    QWORD PTR [r12],rbx
   159d2:	mov    rdi,r12
   159d5:	mov    BYTE PTR [rdx+rax*1],0x0
   159d9:	call   144d0 <__cxa_finalize@plt+0x106b8>
   159de:	test   rax,rax
   159e1:	mov    rbx,rax
   159e4:	je     15a38 <fts_read@@Base+0x678>
   159e6:	mov    rdi,rbp
   159e9:	mov    rbp,rbx
   159ec:	call   3e10 <free@plt>
   159f1:	jmp    15772 <fts_read@@Base+0x3b2>
   159f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15a00:	mov    edi,DWORD PTR [rbp+0x44]
   15a03:	call   38b0 <close@plt>
   15a08:	jmp    15525 <fts_read@@Base+0x165>
   15a0d:	mov    edx,0x1
   15a12:	mov    rsi,rbx
   15a15:	mov    rdi,r12
   15a18:	call   13940 <__cxa_finalize@plt+0xfb28>
   15a1d:	cmp    ax,0x1
   15a21:	mov    WORD PTR [rbx+0x70],ax
   15a25:	je     15a81 <fts_read@@Base+0x6c1>
   15a27:	mov    esi,0x3
   15a2c:	mov    rbp,rbx
   15a2f:	mov    WORD PTR [rbx+0x74],si
   15a33:	jmp    15772 <fts_read@@Base+0x3b2>
   15a38:	test   BYTE PTR [r12+0x49],0x40
   15a3e:	jne    154de <fts_read@@Base+0x11e>
   15a44:	mov    rbx,QWORD PTR [rbp+0x8]
   15a48:	jmp    15458 <fts_read@@Base+0x98>
   15a4d:	call   3b50 <fchdir@plt>
   15a52:	test   eax,eax
   15a54:	je     15a69 <fts_read@@Base+0x6a9>
   15a56:	call   3540 <__errno_location@plt>
   15a5b:	mov    eax,DWORD PTR [rax]
   15a5d:	mov    DWORD PTR [rbx+0x40],eax
   15a60:	or     DWORD PTR [r12+0x48],0x4000
   15a69:	mov    edi,DWORD PTR [rbx+0x44]
   15a6c:	jmp    154ae <fts_read@@Base+0xee>
   15a71:	or     DWORD PTR [r12+0x48],0x4000
   15a7a:	xor    ebp,ebp
   15a7c:	jmp    1555a <fts_read@@Base+0x19a>
   15a81:	mov    esi,DWORD PTR [r12+0x48]
   15a86:	test   sil,0x4
   15a8a:	jne    15a27 <fts_read@@Base+0x667>
   15a8c:	mov    edi,DWORD PTR [r12+0x2c]
   15a91:	lea    rdx,[rip+0x4046]        # 19ade <_IO_stdin_used@@Base+0x13e>
   15a98:	call   140a0 <__cxa_finalize@plt+0x10288>
   15a9d:	test   eax,eax
   15a9f:	mov    DWORD PTR [rbx+0x44],eax
   15aa2:	js     15b1b <fts_read@@Base+0x75b>
   15aa4:	or     WORD PTR [rbx+0x72],0x2
   15aa9:	jmp    15a27 <fts_read@@Base+0x667>
   15aae:	cmp    ax,0x1
   15ab2:	jne    1555a <fts_read@@Base+0x19a>
   15ab8:	jmp    1572d <fts_read@@Base+0x36d>
   15abd:	mov    rdi,rbx
   15ac0:	call   13e90 <__cxa_finalize@plt+0x10078>
   15ac5:	cmp    eax,0x2
   15ac8:	jne    15964 <fts_read@@Base+0x5a4>
   15ace:	movzx  eax,WORD PTR [rbp+0x70]
   15ad2:	jmp    1571c <fts_read@@Base+0x35c>
   15ad7:	mov    edi,DWORD PTR [r12+0x2c]
   15adc:	lea    rdx,[rip+0x3ffb]        # 19ade <_IO_stdin_used@@Base+0x13e>
   15ae3:	call   140a0 <__cxa_finalize@plt+0x10288>
   15ae8:	test   eax,eax
   15aea:	mov    DWORD PTR [rbp+0x44],eax
   15aed:	js     15afd <fts_read@@Base+0x73d>
   15aef:	or     WORD PTR [rbp+0x72],0x2
   15af4:	movzx  eax,WORD PTR [rbp+0x70]
   15af8:	jmp    1570e <fts_read@@Base+0x34e>
   15afd:	call   3540 <__errno_location@plt>
   15b02:	mov    eax,DWORD PTR [rax]
   15b04:	mov    r11d,0x7
   15b0a:	mov    WORD PTR [rbp+0x70],r11w
   15b0f:	mov    DWORD PTR [rbp+0x40],eax
   15b12:	mov    QWORD PTR [r12],rbp
   15b16:	jmp    1555a <fts_read@@Base+0x19a>
   15b1b:	call   3540 <__errno_location@plt>
   15b20:	mov    eax,DWORD PTR [rax]
   15b22:	mov    edi,0x7
   15b27:	mov    WORD PTR [rbx+0x70],di
   15b2b:	mov    DWORD PTR [rbx+0x40],eax
   15b2e:	jmp    15a27 <fts_read@@Base+0x667>
   15b33:	nop    DWORD PTR [rax]
   15b36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015b40 <fts_set@@Base>:
   15b40:	cmp    edx,0x4
   15b43:	ja     15b50 <fts_set@@Base+0x10>
   15b45:	mov    WORD PTR [rsi+0x74],dx
   15b49:	xor    eax,eax
   15b4b:	ret    
   15b4c:	nop    DWORD PTR [rax+0x0]
   15b50:	sub    rsp,0x8
   15b54:	call   3540 <__errno_location@plt>
   15b59:	mov    DWORD PTR [rax],0x16
   15b5f:	mov    eax,0x1
   15b64:	add    rsp,0x8
   15b68:	ret    
   15b69:	nop    DWORD PTR [rax+0x0]

0000000000015b70 <fts_children@@Base>:
   15b70:	push   r14
   15b72:	push   r13
   15b74:	push   r12
   15b76:	push   rbp
   15b77:	mov    r12d,esi
   15b7a:	push   rbx
   15b7b:	mov    rbx,rdi
   15b7e:	call   3540 <__errno_location@plt>
   15b83:	test   r12d,0xffffdfff
   15b8a:	mov    r13,rax
   15b8d:	jne    15c78 <fts_children@@Base+0x108>
   15b93:	mov    rbp,QWORD PTR [rbx]
   15b96:	mov    DWORD PTR [rax],0x0
   15b9c:	test   BYTE PTR [rbx+0x49],0x40
   15ba0:	jne    15c20 <fts_children@@Base+0xb0>
   15ba2:	movzx  eax,WORD PTR [rbp+0x70]
   15ba6:	cmp    ax,0x9
   15baa:	je     15c10 <fts_children@@Base+0xa0>
   15bac:	cmp    ax,0x1
   15bb0:	jne    15c20 <fts_children@@Base+0xb0>
   15bb2:	mov    rdi,QWORD PTR [rbx+0x8]
   15bb6:	test   rdi,rdi
   15bb9:	je     15bc0 <fts_children@@Base+0x50>
   15bbb:	call   13cb0 <__cxa_finalize@plt+0xfe98>
   15bc0:	cmp    r12d,0x2000
   15bc7:	mov    r14d,0x1
   15bcd:	jne    15bdc <fts_children@@Base+0x6c>
   15bcf:	or     DWORD PTR [rbx+0x48],0x2000
   15bd6:	mov    r14d,0x2
   15bdc:	cmp    QWORD PTR [rbp+0x58],0x0
   15be1:	jne    15bf5 <fts_children@@Base+0x85>
   15be3:	mov    rax,QWORD PTR [rbp+0x30]
   15be7:	cmp    BYTE PTR [rax],0x2f
   15bea:	je     15bf5 <fts_children@@Base+0x85>
   15bec:	mov    esi,DWORD PTR [rbx+0x48]
   15bef:	test   sil,0x4
   15bf3:	je     15c30 <fts_children@@Base+0xc0>
   15bf5:	mov    esi,r14d
   15bf8:	mov    rdi,rbx
   15bfb:	call   144d0 <__cxa_finalize@plt+0x106b8>
   15c00:	mov    QWORD PTR [rbx+0x8],rax
   15c04:	pop    rbx
   15c05:	pop    rbp
   15c06:	pop    r12
   15c08:	pop    r13
   15c0a:	pop    r14
   15c0c:	ret    
   15c0d:	nop    DWORD PTR [rax]
   15c10:	pop    rbx
   15c11:	mov    rax,QWORD PTR [rbp+0x10]
   15c15:	pop    rbp
   15c16:	pop    r12
   15c18:	pop    r13
   15c1a:	pop    r14
   15c1c:	ret    
   15c1d:	nop    DWORD PTR [rax]
   15c20:	pop    rbx
   15c21:	xor    eax,eax
   15c23:	pop    rbp
   15c24:	pop    r12
   15c26:	pop    r13
   15c28:	pop    r14
   15c2a:	ret    
   15c2b:	nop    DWORD PTR [rax+rax*1+0x0]
   15c30:	mov    edi,DWORD PTR [rbx+0x2c]
   15c33:	lea    rdx,[rip+0x3ea4]        # 19ade <_IO_stdin_used@@Base+0x13e>
   15c3a:	call   140a0 <__cxa_finalize@plt+0x10288>
   15c3f:	test   eax,eax
   15c41:	mov    ebp,eax
   15c43:	js     15c99 <fts_children@@Base+0x129>
   15c45:	mov    esi,r14d
   15c48:	mov    rdi,rbx
   15c4b:	call   144d0 <__cxa_finalize@plt+0x106b8>
   15c50:	test   BYTE PTR [rbx+0x49],0x2
   15c54:	mov    QWORD PTR [rbx+0x8],rax
   15c58:	jne    15c88 <fts_children@@Base+0x118>
   15c5a:	mov    edi,ebp
   15c5c:	call   3b50 <fchdir@plt>
   15c61:	test   eax,eax
   15c63:	jne    15ca8 <fts_children@@Base+0x138>
   15c65:	mov    edi,ebp
   15c67:	call   38b0 <close@plt>
   15c6c:	mov    rax,QWORD PTR [rbx+0x8]
   15c70:	jmp    15c04 <fts_children@@Base+0x94>
   15c72:	nop    WORD PTR [rax+rax*1+0x0]
   15c78:	mov    DWORD PTR [rax],0x16
   15c7e:	xor    eax,eax
   15c80:	jmp    15c04 <fts_children@@Base+0x94>
   15c85:	nop    DWORD PTR [rax]
   15c88:	mov    edx,0x1
   15c8d:	mov    esi,ebp
   15c8f:	mov    rdi,rbx
   15c92:	call   13ef0 <__cxa_finalize@plt+0x100d8>
   15c97:	jmp    15c6c <fts_children@@Base+0xfc>
   15c99:	mov    QWORD PTR [rbx+0x8],0x0
   15ca1:	xor    eax,eax
   15ca3:	jmp    15c04 <fts_children@@Base+0x94>
   15ca8:	mov    ebx,DWORD PTR [r13+0x0]
   15cac:	mov    edi,ebp
   15cae:	call   38b0 <close@plt>
   15cb3:	xor    eax,eax
   15cb5:	mov    DWORD PTR [r13+0x0],ebx
   15cb9:	jmp    15c04 <fts_children@@Base+0x94>
   15cbe:	xchg   ax,ax
   15cc0:	test   edi,edi
   15cc2:	push   rbx
   15cc3:	je     15d10 <fts_children@@Base+0x1a0>
   15cc5:	cmp    edi,0xa
   15cc8:	mov    eax,edi
   15cca:	je     15cd0 <fts_children@@Base+0x160>
   15ccc:	pop    rbx
   15ccd:	ret    
   15cce:	xchg   ax,ax
   15cd0:	mov    rdx,QWORD PTR [rsi]
   15cd3:	lea    rdi,[rip+0x7056]        # 1cd30 <version_etc_copyright@@Base+0xb0>
   15cda:	mov    rbx,rsi
   15cdd:	mov    ecx,0xa
   15ce2:	mov    rsi,rdx
   15ce5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15ce7:	jne    15ccc <fts_children@@Base+0x15c>
   15ce9:	mov    rdi,rdx
   15cec:	call   3d20 <freecon@plt>
   15cf1:	mov    QWORD PTR [rbx],0x0
   15cf8:	call   3540 <__errno_location@plt>
   15cfd:	mov    DWORD PTR [rax],0x3d
   15d03:	mov    eax,0xffffffff
   15d08:	pop    rbx
   15d09:	ret    
   15d0a:	nop    WORD PTR [rax+rax*1+0x0]
   15d10:	call   3540 <__errno_location@plt>
   15d15:	mov    DWORD PTR [rax],0x5f
   15d1b:	mov    eax,0xffffffff
   15d20:	pop    rbx
   15d21:	ret    
   15d22:	nop    DWORD PTR [rax+0x0]
   15d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15d30:	push   rbx
   15d31:	mov    rbx,rsi
   15d34:	call   3a50 <getfilecon@plt>
   15d39:	mov    rsi,rbx
   15d3c:	mov    edi,eax
   15d3e:	pop    rbx
   15d3f:	jmp    15cc0 <fts_children@@Base+0x150>
   15d44:	xchg   ax,ax
   15d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15d50:	push   rbx
   15d51:	mov    rbx,rsi
   15d54:	call   3980 <lgetfilecon@plt>
   15d59:	mov    rsi,rbx
   15d5c:	mov    edi,eax
   15d5e:	pop    rbx
   15d5f:	jmp    15cc0 <fts_children@@Base+0x150>
   15d64:	xchg   ax,ax
   15d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15d70:	push   rbx
   15d71:	mov    rbx,rsi
   15d74:	call   37f0 <fgetfilecon@plt>
   15d79:	mov    rsi,rbx
   15d7c:	mov    edi,eax
   15d7e:	pop    rbx
   15d7f:	jmp    15cc0 <fts_children@@Base+0x150>
   15d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15d8e:	xchg   ax,ax
   15d90:	push   r13
   15d92:	push   r12
   15d94:	mov    r13,rsi
   15d97:	push   rbp
   15d98:	push   rbx
   15d99:	mov    rbx,rdi
   15d9c:	mov    r12,rdx
   15d9f:	sub    rsp,0x18
   15da3:	mov    rax,QWORD PTR fs:0x28
   15dac:	mov    QWORD PTR [rsp+0x8],rax
   15db1:	xor    eax,eax
   15db3:	lea    rax,[rsp+0x4]
   15db8:	test   rdi,rdi
   15dbb:	cmove  rbx,rax
   15dbf:	mov    rdi,rbx
   15dc2:	call   3790 <mbrtowc@plt>
   15dc7:	cmp    rax,0xfffffffffffffffd
   15dcb:	mov    rbp,rax
   15dce:	jbe    15df0 <fts_children@@Base+0x280>
   15dd0:	test   r12,r12
   15dd3:	je     15df0 <fts_children@@Base+0x280>
   15dd5:	xor    edi,edi
   15dd7:	call   164c0 <fts_children@@Base+0x950>
   15ddc:	test   al,al
   15dde:	jne    15df0 <fts_children@@Base+0x280>
   15de0:	movzx  eax,BYTE PTR [r13+0x0]
   15de5:	mov    ebp,0x1
   15dea:	mov    DWORD PTR [rbx],eax
   15dec:	nop    DWORD PTR [rax+0x0]
   15df0:	mov    rdx,QWORD PTR [rsp+0x8]
   15df5:	xor    rdx,QWORD PTR fs:0x28
   15dfe:	mov    rax,rbp
   15e01:	jne    15e0e <fts_children@@Base+0x29e>
   15e03:	add    rsp,0x18
   15e07:	pop    rbx
   15e08:	pop    rbp
   15e09:	pop    r12
   15e0b:	pop    r13
   15e0d:	ret    
   15e0e:	call   3760 <__stack_chk_fail@plt>
   15e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15e1d:	nop    DWORD PTR [rax]
   15e20:	push   rbx
   15e21:	mov    rax,rsi
   15e24:	mov    rbx,rdi
   15e27:	xor    edi,edi
   15e29:	sub    rsp,0x10
   15e2d:	mov    rcx,QWORD PTR fs:0x28
   15e36:	mov    QWORD PTR [rsp+0x8],rcx
   15e3b:	xor    ecx,ecx
   15e3d:	mov    rsi,rsp
   15e40:	mov    rcx,rdx
   15e43:	mov    rdx,rax
   15e46:	call   177f0 <fts_children@@Base+0x1c80>
   15e4b:	test   rax,rax
   15e4e:	je     15e92 <fts_children@@Base+0x322>
   15e50:	mov    rdx,QWORD PTR [rsp]
   15e54:	cmp    rdx,0x7fffffff
   15e5b:	ja     15e78 <fts_children@@Base+0x308>
   15e5d:	mov    QWORD PTR [rbx],rax
   15e60:	mov    eax,edx
   15e62:	mov    rbx,QWORD PTR [rsp+0x8]
   15e67:	xor    rbx,QWORD PTR fs:0x28
   15e70:	jne    15e99 <fts_children@@Base+0x329>
   15e72:	add    rsp,0x10
   15e76:	pop    rbx
   15e77:	ret    
   15e78:	mov    rdi,rax
   15e7b:	call   3e10 <free@plt>
   15e80:	call   3540 <__errno_location@plt>
   15e85:	mov    DWORD PTR [rax],0x4b
   15e8b:	mov    eax,0xffffffff
   15e90:	jmp    15e62 <fts_children@@Base+0x2f2>
   15e92:	mov    eax,0xffffffff
   15e97:	jmp    15e62 <fts_children@@Base+0x2f2>
   15e99:	call   3760 <__stack_chk_fail@plt>
   15e9e:	xchg   ax,ax
   15ea0:	push   r13
   15ea2:	push   r12
   15ea4:	xor    esi,esi
   15ea6:	push   rbp
   15ea7:	push   rbx
   15ea8:	mov    rbx,rdi
   15eab:	sub    rsp,0x28
   15eaf:	lea    rbp,[rsp+0x10]
   15eb4:	mov    rax,QWORD PTR fs:0x28
   15ebd:	mov    QWORD PTR [rsp+0x18],rax
   15ec2:	xor    eax,eax
   15ec4:	mov    rdx,rbp
   15ec7:	call   3b60 <acl_get_entry@plt>
   15ecc:	test   eax,eax
   15ece:	jle    15eff <fts_children@@Base+0x38f>
   15ed0:	lea    r12,[rsp+0xc]
   15ed5:	movabs r13,0x100000012
   15edf:	nop
   15ee0:	mov    rdi,QWORD PTR [rsp+0x10]
   15ee5:	mov    rsi,r12
   15ee8:	call   3860 <acl_get_tag_type@plt>
   15eed:	test   eax,eax
   15eef:	js     15f40 <fts_children@@Base+0x3d0>
   15ef1:	mov    eax,DWORD PTR [rsp+0xc]
   15ef5:	cmp    eax,0x20
   15ef8:	jbe    15f20 <fts_children@@Base+0x3b0>
   15efa:	mov    eax,0x1
   15eff:	mov    rcx,QWORD PTR [rsp+0x18]
   15f04:	xor    rcx,QWORD PTR fs:0x28
   15f0d:	jne    15f47 <fts_children@@Base+0x3d7>
   15f0f:	add    rsp,0x28
   15f13:	pop    rbx
   15f14:	pop    rbp
   15f15:	pop    r12
   15f17:	pop    r13
   15f19:	ret    
   15f1a:	nop    WORD PTR [rax+rax*1+0x0]
   15f20:	bt     r13,rax
   15f24:	jae    15efa <fts_children@@Base+0x38a>
   15f26:	mov    rdx,rbp
   15f29:	mov    esi,0x1
   15f2e:	mov    rdi,rbx
   15f31:	call   3b60 <acl_get_entry@plt>
   15f36:	test   eax,eax
   15f38:	jg     15ee0 <fts_children@@Base+0x370>
   15f3a:	jmp    15eff <fts_children@@Base+0x38f>
   15f3c:	nop    DWORD PTR [rax+0x0]
   15f40:	mov    eax,0xffffffff
   15f45:	jmp    15eff <fts_children@@Base+0x38f>
   15f47:	call   3760 <__stack_chk_fail@plt>
   15f4c:	nop    DWORD PTR [rax+0x0]
   15f50:	sub    rsp,0x8
   15f54:	call   3570 <acl_entries@plt>
   15f59:	test   eax,eax
   15f5b:	setg   al
   15f5e:	add    rsp,0x8
   15f62:	movzx  eax,al
   15f65:	ret    
   15f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15f70:	push   rbx
   15f71:	mov    rbx,rdi
   15f74:	mov    rdi,QWORD PTR [rdi+0x8]
   15f78:	test   rdi,rdi
   15f7b:	je     15f82 <fts_children@@Base+0x412>
   15f7d:	call   3e00 <acl_free@plt>
   15f82:	mov    rdi,QWORD PTR [rbx+0x10]
   15f86:	test   rdi,rdi
   15f89:	je     15f98 <fts_children@@Base+0x428>
   15f8b:	pop    rbx
   15f8c:	jmp    3e00 <acl_free@plt>
   15f91:	nop    DWORD PTR [rax+0x0]
   15f98:	pop    rbx
   15f99:	ret    
   15f9a:	nop    WORD PTR [rax+rax*1+0x0]
   15fa0:	pxor   xmm0,xmm0
   15fa4:	cmp    esi,0xffffffff
   15fa7:	push   r12
   15fa9:	mov    QWORD PTR [rcx+0x14],0x0
   15fb1:	mov    r12,rdi
   15fb4:	push   rbp
   15fb5:	mov    DWORD PTR [rcx+0x1c],0x0
   15fbc:	mov    ebp,edx
   15fbe:	push   rbx
   15fbf:	mov    DWORD PTR [rcx],edx
   15fc1:	mov    rbx,rcx
   15fc4:	movups XMMWORD PTR [rcx+0x4],xmm0
   15fc8:	je     15ff0 <fts_children@@Base+0x480>
   15fca:	mov    edi,esi
   15fcc:	call   39d0 <acl_get_fd@plt>
   15fd1:	test   rax,rax
   15fd4:	mov    QWORD PTR [rbx+0x8],rax
   15fd8:	je     16003 <fts_children@@Base+0x493>
   15fda:	and    ebp,0xf000
   15fe0:	xor    eax,eax
   15fe2:	cmp    ebp,0x4000
   15fe8:	je     16020 <fts_children@@Base+0x4b0>
   15fea:	pop    rbx
   15feb:	pop    rbp
   15fec:	pop    r12
   15fee:	ret    
   15fef:	nop
   15ff0:	mov    esi,0x8000
   15ff5:	call   3ae0 <acl_get_file@plt>
   15ffa:	test   rax,rax
   15ffd:	mov    QWORD PTR [rbx+0x8],rax
   16001:	jne    15fda <fts_children@@Base+0x46a>
   16003:	call   3540 <__errno_location@plt>
   16008:	mov    edi,DWORD PTR [rax]
   1600a:	call   18910 <fts_children@@Base+0x2da0>
   1600f:	movzx  eax,al
   16012:	pop    rbx
   16013:	neg    eax
   16015:	pop    rbp
   16016:	pop    r12
   16018:	ret    
   16019:	nop    DWORD PTR [rax+0x0]
   16020:	mov    rdi,r12
   16023:	mov    esi,0x4000
   16028:	call   3ae0 <acl_get_file@plt>
   1602d:	test   rax,rax
   16030:	mov    QWORD PTR [rbx+0x10],rax
   16034:	sete   al
   16037:	movzx  eax,al
   1603a:	pop    rbx
   1603b:	neg    eax
   1603d:	pop    rbp
   1603e:	pop    r12
   16040:	ret    
   16041:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1604b:	nop    DWORD PTR [rax+rax*1+0x0]
   16050:	push   r14
   16052:	push   r13
   16054:	push   r12
   16056:	push   rbp
   16057:	push   rbx
   16058:	mov    rax,QWORD PTR [rdi+0x8]
   1605c:	test   rax,rax
   1605f:	je     160b0 <fts_children@@Base+0x540>
   16061:	cmp    edx,0xffffffff
   16064:	mov    r12,r8
   16067:	mov    r13d,ecx
   1606a:	mov    r14,rsi
   1606d:	mov    rbx,rdi
   16070:	je     160c0 <fts_children@@Base+0x550>
   16072:	mov    rsi,rax
   16075:	mov    edi,edx
   16077:	call   3510 <acl_set_fd@plt>
   1607c:	mov    ebp,eax
   1607e:	test   ebp,ebp
   16080:	je     160d6 <fts_children@@Base+0x566>
   16082:	call   3540 <__errno_location@plt>
   16087:	mov    edi,DWORD PTR [rax]
   16089:	call   18910 <fts_children@@Base+0x2da0>
   1608e:	test   al,al
   16090:	jne    160b2 <fts_children@@Base+0x542>
   16092:	test   r13d,r13d
   16095:	mov    BYTE PTR [rbx+0x18],0x1
   16099:	jne    160b0 <fts_children@@Base+0x540>
   1609b:	mov    rdi,QWORD PTR [rbx+0x8]
   1609f:	call   15ea0 <fts_children@@Base+0x330>
   160a4:	test   eax,eax
   160a6:	jne    160b2 <fts_children@@Base+0x542>
   160a8:	nop    DWORD PTR [rax+rax*1+0x0]
   160b0:	xor    ebp,ebp
   160b2:	pop    rbx
   160b3:	mov    eax,ebp
   160b5:	pop    rbp
   160b6:	pop    r12
   160b8:	pop    r13
   160ba:	pop    r14
   160bc:	ret    
   160bd:	nop    DWORD PTR [rax]
   160c0:	mov    rdx,rax
   160c3:	mov    esi,0x8000
   160c8:	mov    rdi,r14
   160cb:	call   3990 <acl_set_file@plt>
   160d0:	mov    ebp,eax
   160d2:	test   ebp,ebp
   160d4:	jne    16082 <fts_children@@Base+0x512>
   160d6:	mov    eax,DWORD PTR [rbx]
   160d8:	mov    BYTE PTR [r12],0x1
   160dd:	and    eax,0xf000
   160e2:	cmp    eax,0x4000
   160e7:	jne    160b0 <fts_children@@Base+0x540>
   160e9:	test   r13d,r13d
   160ec:	jne    16120 <fts_children@@Base+0x5b0>
   160ee:	mov    rdi,QWORD PTR [rbx+0x10]
   160f2:	test   rdi,rdi
   160f5:	je     16120 <fts_children@@Base+0x5b0>
   160f7:	call   15f50 <fts_children@@Base+0x3e0>
   160fc:	test   eax,eax
   160fe:	je     16120 <fts_children@@Base+0x5b0>
   16100:	mov    rdx,QWORD PTR [rbx+0x10]
   16104:	mov    rdi,r14
   16107:	mov    esi,0x4000
   1610c:	pop    rbx
   1610d:	pop    rbp
   1610e:	pop    r12
   16110:	pop    r13
   16112:	pop    r14
   16114:	jmp    3990 <acl_set_file@plt>
   16119:	nop    DWORD PTR [rax+0x0]
   16120:	pop    rbx
   16121:	mov    rdi,r14
   16124:	pop    rbp
   16125:	pop    r12
   16127:	pop    r13
   16129:	pop    r14
   1612b:	jmp    3730 <acl_delete_def_file@plt>
   16130:	mov    eax,esi
   16132:	mov    esi,edx
   16134:	cmp    eax,0xffffffff
   16137:	je     16140 <fts_children@@Base+0x5d0>
   16139:	mov    edi,eax
   1613b:	jmp    3bc0 <fchmod@plt>
   16140:	jmp    3be0 <chmod@plt>
   16145:	nop
   16146:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16150:	push   r15
   16152:	push   r14
   16154:	mov    r15,rdi
   16157:	push   r13
   16159:	push   r12
   1615b:	push   rbp
   1615c:	push   rbx
   1615d:	mov    ebp,edx
   1615f:	mov    rbx,rsi
   16162:	sub    rsp,0x28
   16166:	mov    edx,DWORD PTR [rdi]
   16168:	mov    rax,QWORD PTR fs:0x28
   16171:	mov    QWORD PTR [rsp+0x18],rax
   16176:	xor    eax,eax
   16178:	mov    BYTE PTR [rsp+0x17],0x0
   1617d:	mov    r12d,edx
   16180:	and    r12d,0xe00
   16187:	jne    161c8 <fts_children@@Base+0x658>
   16189:	cmp    BYTE PTR [rdi+0x18],0x0
   1618d:	je     161e8 <fts_children@@Base+0x678>
   1618f:	mov    edx,DWORD PTR [r15]
   16192:	mov    esi,ebp
   16194:	mov    rdi,rbx
   16197:	call   16130 <fts_children@@Base+0x5c0>
   1619c:	nop    DWORD PTR [rax+0x0]
   161a0:	mov    rcx,QWORD PTR [rsp+0x18]
   161a5:	xor    rcx,QWORD PTR fs:0x28
   161ae:	jne    16338 <fts_children@@Base+0x7c8>
   161b4:	add    rsp,0x28
   161b8:	pop    rbx
   161b9:	pop    rbp
   161ba:	pop    r12
   161bc:	pop    r13
   161be:	pop    r14
   161c0:	pop    r15
   161c2:	ret    
   161c3:	nop    DWORD PTR [rax+rax*1+0x0]
   161c8:	mov    esi,ebp
   161ca:	mov    rdi,rbx
   161cd:	call   16130 <fts_children@@Base+0x5c0>
   161d2:	test   eax,eax
   161d4:	jne    162f0 <fts_children@@Base+0x780>
   161da:	cmp    BYTE PTR [r15+0x18],0x0
   161df:	jne    162b0 <fts_children@@Base+0x740>
   161e5:	nop    DWORD PTR [rax]
   161e8:	lea    r14,[rsp+0x17]
   161ed:	xor    ecx,ecx
   161ef:	mov    edx,ebp
   161f1:	mov    rsi,rbx
   161f4:	mov    rdi,r15
   161f7:	mov    r8,r14
   161fa:	call   16050 <fts_children@@Base+0x4e0>
   161ff:	cmp    BYTE PTR [rsp+0x17],0x0
   16204:	jne    161a0 <fts_children@@Base+0x630>
   16206:	movzx  ecx,BYTE PTR [r15+0x18]
   1620b:	test   eax,eax
   1620d:	mov    BYTE PTR [rsp+0xf],cl
   16211:	je     16300 <fts_children@@Base+0x790>
   16217:	call   3540 <__errno_location@plt>
   1621c:	cmp    BYTE PTR [rsp+0xf],0x0
   16221:	mov    r13d,DWORD PTR [rax]
   16224:	jne    162a1 <fts_children@@Base+0x731>
   16226:	mov    rdi,QWORD PTR [r15+0x8]
   1622a:	test   rdi,rdi
   1622d:	je     16234 <fts_children@@Base+0x6c4>
   1622f:	call   3e00 <acl_free@plt>
   16234:	mov    edi,DWORD PTR [r15]
   16237:	call   39b0 <acl_from_mode@plt>
   1623c:	test   rax,rax
   1623f:	mov    QWORD PTR [r15+0x8],rax
   16243:	je     16321 <fts_children@@Base+0x7b1>
   16249:	mov    r8,r14
   1624c:	mov    ecx,0x1
   16251:	mov    edx,ebp
   16253:	mov    rsi,rbx
   16256:	mov    rdi,r15
   16259:	call   16050 <fts_children@@Base+0x4e0>
   1625e:	cmp    BYTE PTR [rsp+0x17],0x0
   16263:	jne    162c0 <fts_children@@Base+0x750>
   16265:	test   r13d,r13d
   16268:	jne    162e0 <fts_children@@Base+0x770>
   1626a:	test   r12d,r12d
   1626d:	jne    161a0 <fts_children@@Base+0x630>
   16273:	test   eax,eax
   16275:	je     1618f <fts_children@@Base+0x61f>
   1627b:	call   3540 <__errno_location@plt>
   16280:	mov    edx,DWORD PTR [r15]
   16283:	mov    r13d,DWORD PTR [rax]
   16286:	mov    esi,ebp
   16288:	mov    rdi,rbx
   1628b:	mov    r14,rax
   1628e:	call   16130 <fts_children@@Base+0x5c0>
   16293:	test   r13d,r13d
   16296:	je     161a0 <fts_children@@Base+0x630>
   1629c:	mov    DWORD PTR [r14],r13d
   1629f:	jmp    162f0 <fts_children@@Base+0x780>
   162a1:	test   r13d,r13d
   162a4:	jne    162e0 <fts_children@@Base+0x770>
   162a6:	test   r12d,r12d
   162a9:	je     1618f <fts_children@@Base+0x61f>
   162af:	nop
   162b0:	xor    eax,eax
   162b2:	jmp    161a0 <fts_children@@Base+0x630>
   162b7:	mov    eax,0xffffffff
   162bc:	nop    DWORD PTR [rax+0x0]
   162c0:	test   r13d,r13d
   162c3:	je     161a0 <fts_children@@Base+0x630>
   162c9:	call   3540 <__errno_location@plt>
   162ce:	mov    DWORD PTR [rax],r13d
   162d1:	mov    eax,0xffffffff
   162d6:	jmp    161a0 <fts_children@@Base+0x630>
   162db:	nop    DWORD PTR [rax+rax*1+0x0]
   162e0:	call   3540 <__errno_location@plt>
   162e5:	test   r12d,r12d
   162e8:	mov    r14,rax
   162eb:	mov    DWORD PTR [rax],r13d
   162ee:	je     1630f <fts_children@@Base+0x79f>
   162f0:	mov    eax,0xffffffff
   162f5:	jmp    161a0 <fts_children@@Base+0x630>
   162fa:	nop    WORD PTR [rax+rax*1+0x0]
   16300:	cmp    BYTE PTR [rsp+0xf],0x0
   16305:	jne    162a6 <fts_children@@Base+0x736>
   16307:	xor    r13d,r13d
   1630a:	jmp    16226 <fts_children@@Base+0x6b6>
   1630f:	mov    edx,DWORD PTR [r15]
   16312:	mov    esi,ebp
   16314:	mov    rdi,rbx
   16317:	call   16130 <fts_children@@Base+0x5c0>
   1631c:	jmp    1629c <fts_children@@Base+0x72c>
   16321:	cmp    BYTE PTR [rsp+0x17],0x0
   16326:	jne    162b7 <fts_children@@Base+0x747>
   16328:	test   r13d,r13d
   1632b:	jne    162e0 <fts_children@@Base+0x770>
   1632d:	test   r12d,r12d
   16330:	je     1627b <fts_children@@Base+0x70b>
   16336:	jmp    162f0 <fts_children@@Base+0x780>
   16338:	call   3760 <__stack_chk_fail@plt>
   1633d:	nop    DWORD PTR [rax]
   16340:	push   r12
   16342:	push   rbp
   16343:	mov    rbp,rdi
   16346:	push   rbx
   16347:	call   35b0 <__fpending@plt>
   1634c:	mov    ebx,DWORD PTR [rbp+0x0]
   1634f:	mov    rdi,rbp
   16352:	mov    r12,rax
   16355:	call   17770 <fts_children@@Base+0x1c00>
   1635a:	and    ebx,0x20
   1635d:	test   ebx,ebx
   1635f:	jne    16378 <fts_children@@Base+0x808>
   16361:	test   eax,eax
   16363:	je     1636f <fts_children@@Base+0x7ff>
   16365:	test   r12,r12
   16368:	mov    eax,0xffffffff
   1636d:	je     163a8 <fts_children@@Base+0x838>
   1636f:	pop    rbx
   16370:	pop    rbp
   16371:	pop    r12
   16373:	ret    
   16374:	nop    DWORD PTR [rax+0x0]
   16378:	test   eax,eax
   1637a:	jne    16398 <fts_children@@Base+0x828>
   1637c:	call   3540 <__errno_location@plt>
   16381:	mov    DWORD PTR [rax],0x0
   16387:	mov    eax,0xffffffff
   1638c:	pop    rbx
   1638d:	pop    rbp
   1638e:	pop    r12
   16390:	ret    
   16391:	nop    DWORD PTR [rax+0x0]
   16398:	pop    rbx
   16399:	mov    eax,0xffffffff
   1639e:	pop    rbp
   1639f:	pop    r12
   163a1:	ret    
   163a2:	nop    WORD PTR [rax+rax*1+0x0]
   163a8:	call   3540 <__errno_location@plt>
   163ad:	cmp    DWORD PTR [rax],0x9
   163b0:	pop    rbx
   163b1:	pop    rbp
   163b2:	pop    r12
   163b4:	setne  al
   163b7:	movzx  eax,al
   163ba:	neg    eax
   163bc:	ret    
   163bd:	nop    DWORD PTR [rax]
   163c0:	mov    QWORD PTR [rdi+0x10],0x0
   163c8:	mov    DWORD PTR [rdi+0x18],0x95f616
   163cf:	ret    
   163d0:	cmp    DWORD PTR [rdi+0x18],0x95f616
   163d7:	jne    16437 <fts_children@@Base+0x8c7>
   163d9:	mov    rdx,QWORD PTR [rdi+0x10]
   163dd:	mov    rcx,QWORD PTR [rsi+0x8]
   163e1:	test   rdx,rdx
   163e4:	je     16400 <fts_children@@Base+0x890>
   163e6:	cmp    QWORD PTR [rdi],rcx
   163e9:	je     16418 <fts_children@@Base+0x8a8>
   163eb:	lea    r8,[rdx+0x1]
   163ef:	xor    eax,eax
   163f1:	test   rdx,r8
   163f4:	mov    QWORD PTR [rdi+0x10],r8
   163f8:	je     16430 <fts_children@@Base+0x8c0>
   163fa:	repz ret 
   163fc:	nop    DWORD PTR [rax+0x0]
   16400:	mov    QWORD PTR [rdi+0x10],0x1
   16408:	mov    rax,QWORD PTR [rsi]
   1640b:	mov    QWORD PTR [rdi],rcx
   1640e:	mov    QWORD PTR [rdi+0x8],rax
   16412:	xor    eax,eax
   16414:	ret    
   16415:	nop    DWORD PTR [rax]
   16418:	mov    rax,QWORD PTR [rdi+0x8]
   1641c:	cmp    QWORD PTR [rsi],rax
   1641f:	jne    163eb <fts_children@@Base+0x87b>
   16421:	mov    eax,0x1
   16426:	ret    
   16427:	nop    WORD PTR [rax+rax*1+0x0]
   16430:	test   r8,r8
   16433:	je     16421 <fts_children@@Base+0x8b1>
   16435:	jmp    16408 <fts_children@@Base+0x898>
   16437:	lea    rcx,[rip+0x692a]        # 1cd68 <version_etc_copyright@@Base+0xe8>
   1643e:	lea    rsi,[rip+0x68f5]        # 1cd3a <version_etc_copyright@@Base+0xba>
   16445:	lea    rdi,[rip+0x6900]        # 1cd4c <version_etc_copyright@@Base+0xcc>
   1644c:	sub    rsp,0x8
   16450:	mov    edx,0x3c
   16455:	call   3830 <__assert_fail@plt>
   1645a:	nop    WORD PTR [rax+rax*1+0x0]
   16460:	push   rbx
   16461:	mov    rsi,rdi
   16464:	mov    rbx,rdi
   16467:	xor    edi,edi
   16469:	sub    rsp,0x20
   1646d:	mov    rax,QWORD PTR fs:0x28
   16476:	mov    QWORD PTR [rsp+0x18],rax
   1647b:	xor    eax,eax
   1647d:	call   3640 <clock_gettime@plt>
   16482:	test   eax,eax
   16484:	je     164a4 <fts_children@@Base+0x934>
   16486:	mov    rdi,rsp
   16489:	xor    esi,esi
   1648b:	call   3820 <gettimeofday@plt>
   16490:	mov    rax,QWORD PTR [rsp]
   16494:	mov    QWORD PTR [rbx],rax
   16497:	imul   rax,QWORD PTR [rsp+0x8],0x3e8
   164a0:	mov    QWORD PTR [rbx+0x8],rax
   164a4:	mov    rax,QWORD PTR [rsp+0x18]
   164a9:	xor    rax,QWORD PTR fs:0x28
   164b2:	jne    164ba <fts_children@@Base+0x94a>
   164b4:	add    rsp,0x20
   164b8:	pop    rbx
   164b9:	ret    
   164ba:	call   3760 <__stack_chk_fail@plt>
   164bf:	nop
   164c0:	sub    rsp,0x8
   164c4:	xor    esi,esi
   164c6:	call   3ba0 <setlocale@plt>
   164cb:	mov    rdx,rax
   164ce:	mov    eax,0x1
   164d3:	test   rdx,rdx
   164d6:	je     164f7 <fts_children@@Base+0x987>
   164d8:	lea    rdi,[rip+0x6895]        # 1cd74 <version_etc_copyright@@Base+0xf4>
   164df:	mov    ecx,0x2
   164e4:	mov    rsi,rdx
   164e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   164e9:	seta   sil
   164ed:	setb   cl
   164f0:	xor    eax,eax
   164f2:	cmp    sil,cl
   164f5:	jne    16500 <fts_children@@Base+0x990>
   164f7:	add    rsp,0x8
   164fb:	ret    
   164fc:	nop    DWORD PTR [rax+0x0]
   16500:	lea    rdi,[rip+0x686f]        # 1cd76 <version_etc_copyright@@Base+0xf6>
   16507:	mov    ecx,0x6
   1650c:	mov    rsi,rdx
   1650f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16511:	setne  al
   16514:	add    rsp,0x8
   16518:	ret    
   16519:	nop    DWORD PTR [rax+0x0]
   16520:	movsx  rcx,BYTE PTR [rdi]
   16524:	test   cl,cl
   16526:	je     16550 <fts_children@@Base+0x9e0>
   16528:	xor    eax,eax
   1652a:	nop    WORD PTR [rax+rax*1+0x0]
   16530:	rol    rax,0x9
   16534:	add    rdi,0x1
   16538:	add    rax,rcx
   1653b:	movsx  rcx,BYTE PTR [rdi]
   1653f:	test   cl,cl
   16541:	jne    16530 <fts_children@@Base+0x9c0>
   16543:	xor    edx,edx
   16545:	div    rsi
   16548:	mov    rax,rdx
   1654b:	ret    
   1654c:	nop    DWORD PTR [rax+0x0]
   16550:	xor    edx,edx
   16552:	mov    rax,rdx
   16555:	ret    
   16556:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16560:	mov    BYTE PTR [rdi+0x1c],0x1
   16564:	mov    QWORD PTR [rdi+0x14],0x0
   1656c:	mov    DWORD PTR [rdi],esi
   1656e:	mov    DWORD PTR [rdi+0x4],esi
   16571:	mov    DWORD PTR [rdi+0x8],esi
   16574:	mov    DWORD PTR [rdi+0xc],esi
   16577:	mov    DWORD PTR [rdi+0x10],esi
   1657a:	ret    
   1657b:	nop    DWORD PTR [rax+rax*1+0x0]
   16580:	movzx  eax,BYTE PTR [rdi+0x1c]
   16584:	ret    
   16585:	nop
   16586:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16590:	movzx  edx,BYTE PTR [rdi+0x1c]
   16594:	mov    ecx,DWORD PTR [rdi+0x14]
   16597:	xor    edx,0x1
   1659a:	movzx  edx,dl
   1659d:	add    ecx,edx
   1659f:	and    ecx,0x3
   165a2:	mov    eax,ecx
   165a4:	lea    r8,[rdi+rax*4]
   165a8:	mov    eax,DWORD PTR [r8]
   165ab:	mov    DWORD PTR [r8],esi
   165ae:	mov    esi,DWORD PTR [rdi+0x18]
   165b1:	mov    DWORD PTR [rdi+0x14],ecx
   165b4:	cmp    esi,ecx
   165b6:	jne    165c0 <fts_children@@Base+0xa50>
   165b8:	add    edx,esi
   165ba:	and    edx,0x3
   165bd:	mov    DWORD PTR [rdi+0x18],edx
   165c0:	mov    BYTE PTR [rdi+0x1c],0x0
   165c4:	ret    
   165c5:	nop
   165c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   165d0:	cmp    BYTE PTR [rdi+0x1c],0x0
   165d4:	jne    16605 <fts_children@@Base+0xa95>
   165d6:	mov    eax,DWORD PTR [rdi+0x14]
   165d9:	mov    esi,DWORD PTR [rdi+0x10]
   165dc:	lea    rcx,[rdi+rax*4]
   165e0:	mov    rdx,rax
   165e3:	mov    eax,DWORD PTR [rcx]
   165e5:	mov    DWORD PTR [rcx],esi
   165e7:	cmp    edx,DWORD PTR [rdi+0x18]
   165ea:	je     16600 <fts_children@@Base+0xa90>
   165ec:	add    edx,0x3
   165ef:	and    edx,0x3
   165f2:	mov    DWORD PTR [rdi+0x14],edx
   165f5:	ret    
   165f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16600:	mov    BYTE PTR [rdi+0x1c],0x1
   16604:	ret    
   16605:	sub    rsp,0x8
   16609:	call   3530 <abort@plt>
   1660e:	xchg   ax,ax
   16610:	push   r15
   16612:	push   r14
   16614:	mov    edi,0xe
   16619:	push   r13
   1661b:	push   r12
   1661d:	push   rbp
   1661e:	push   rbx
   1661f:	sub    rsp,0xa8
   16626:	mov    rax,QWORD PTR fs:0x28
   1662f:	mov    QWORD PTR [rsp+0x98],rax
   16637:	xor    eax,eax
   16639:	call   3af0 <nl_langinfo@plt>
   1663e:	mov    r15,QWORD PTR [rip+0x20c0d3]        # 222718 <program_name@@Base+0x178>
   16645:	test   rax,rax
   16648:	mov    rbx,rax
   1664b:	lea    rax,[rip+0x540e]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   16652:	cmove  rbx,rax
   16656:	test   r15,r15
   16659:	jne    1667a <fts_children@@Base+0xb0a>
   1665b:	jmp    166f0 <fts_children@@Base+0xb80>
   16660:	mov    rdi,r15
   16663:	call   3720 <strlen@plt>
   16668:	lea    rbp,[r15+rax*1+0x1]
   1666d:	mov    rdi,rbp
   16670:	call   3720 <strlen@plt>
   16675:	lea    r15,[rbp+rax*1+0x1]
   1667a:	movzx  ebp,BYTE PTR [r15]
   1667e:	test   bpl,bpl
   16681:	je     166ac <fts_children@@Base+0xb3c>
   16683:	mov    rsi,r15
   16686:	mov    rdi,rbx
   16689:	call   39c0 <strcmp@plt>
   1668e:	test   eax,eax
   16690:	je     1669f <fts_children@@Base+0xb2f>
   16692:	cmp    bpl,0x2a
   16696:	jne    16660 <fts_children@@Base+0xaf0>
   16698:	cmp    BYTE PTR [r15+0x1],0x0
   1669d:	jne    16660 <fts_children@@Base+0xaf0>
   1669f:	mov    rdi,r15
   166a2:	call   3720 <strlen@plt>
   166a7:	lea    rbx,[r15+rax*1+0x1]
   166ac:	cmp    BYTE PTR [rbx],0x0
   166af:	lea    rax,[rip+0x66c6]        # 1cd7c <version_etc_copyright@@Base+0xfc>
   166b6:	cmove  rbx,rax
   166ba:	mov    rcx,QWORD PTR [rsp+0x98]
   166c2:	xor    rcx,QWORD PTR fs:0x28
   166cb:	mov    rax,rbx
   166ce:	jne    16a4c <fts_children@@Base+0xedc>
   166d4:	add    rsp,0xa8
   166db:	pop    rbx
   166dc:	pop    rbp
   166dd:	pop    r12
   166df:	pop    r13
   166e1:	pop    r14
   166e3:	pop    r15
   166e5:	ret    
   166e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   166f0:	lea    rdi,[rip+0x66a5]        # 1cd9c <version_etc_copyright@@Base+0x11c>
   166f7:	call   34e0 <getenv@plt>
   166fc:	test   rax,rax
   166ff:	mov    r13,rax
   16702:	je     16750 <fts_children@@Base+0xbe0>
   16704:	cmp    BYTE PTR [rax],0x0
   16707:	je     16750 <fts_children@@Base+0xbe0>
   16709:	mov    rdi,rax
   1670c:	call   3720 <strlen@plt>
   16711:	test   rax,rax
   16714:	mov    r12,rax
   16717:	mov    r14,rax
   1671a:	jne    16a3b <fts_children@@Base+0xecb>
   16720:	mov    edi,0xe
   16725:	call   3ac0 <malloc@plt>
   1672a:	test   rax,rax
   1672d:	mov    rbp,rax
   16730:	jne    167d8 <fts_children@@Base+0xc68>
   16736:	lea    r15,[rip+0x5323]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   1673d:	mov    QWORD PTR [rip+0x20bfd4],r15        # 222718 <program_name@@Base+0x178>
   16744:	jmp    1667a <fts_children@@Base+0xb0a>
   16749:	nop    DWORD PTR [rax+0x0]
   16750:	lea    r13,[rip+0x662b]        # 1cd82 <version_etc_copyright@@Base+0x102>
   16757:	mov    edi,0x28
   1675c:	mov    r12d,0x1a
   16762:	mov    r14d,0x19
   16768:	call   3ac0 <malloc@plt>
   1676d:	test   rax,rax
   16770:	mov    rbp,rax
   16773:	je     16736 <fts_children@@Base+0xbc6>
   16775:	mov    rdx,r14
   16778:	mov    rsi,r13
   1677b:	mov    rdi,rbp
   1677e:	call   3a40 <memcpy@plt>
   16783:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
   16789:	add    r12,rbp
   1678c:	movabs rax,0x2e74657372616863
   16796:	mov    esi,0x20000
   1679b:	mov    QWORD PTR [r12],rax
   1679f:	mov    eax,0x73
   167a4:	mov    DWORD PTR [r12+0x8],0x61696c61
   167ad:	mov    WORD PTR [r12+0xc],ax
   167b3:	mov    rdi,rbp
   167b6:	xor    eax,eax
   167b8:	call   3c60 <open@plt>
   167bd:	test   eax,eax
   167bf:	mov    r12d,eax
   167c2:	jns    167e8 <fts_children@@Base+0xc78>
   167c4:	lea    r15,[rip+0x5295]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   167cb:	mov    rdi,rbp
   167ce:	call   3e10 <free@plt>
   167d3:	jmp    1673d <fts_children@@Base+0xbcd>
   167d8:	mov    rdx,r14
   167db:	mov    rsi,r13
   167de:	mov    rdi,rbp
   167e1:	call   3a40 <memcpy@plt>
   167e6:	jmp    16789 <fts_children@@Base+0xc19>
   167e8:	lea    rsi,[rip+0x33f3]        # 19be2 <_IO_stdin_used@@Base+0x242>
   167ef:	mov    edi,eax
   167f1:	xor    r15d,r15d
   167f4:	call   3b80 <fdopen@plt>
   167f9:	test   rax,rax
   167fc:	mov    r14,rax
   167ff:	mov    QWORD PTR [rsp],0x0
   16807:	je     169e3 <fts_children@@Base+0xe73>
   1680d:	lea    rax,[rsp+0x60]
   16812:	mov    QWORD PTR [rsp+0x8],rax
   16817:	lea    rax,[rsp+0x20]
   1681c:	mov    QWORD PTR [rsp+0x10],rax
   16821:	mov    rax,QWORD PTR [r14+0x8]
   16825:	cmp    rax,QWORD PTR [r14+0x10]
   16829:	jae    1697a <fts_children@@Base+0xe0a>
   1682f:	lea    rdx,[rax+0x1]
   16833:	mov    QWORD PTR [r14+0x8],rdx
   16837:	movzx  edi,BYTE PTR [rax]
   1683a:	lea    eax,[rdi-0x9]
   1683d:	cmp    eax,0x1
   16840:	jbe    16821 <fts_children@@Base+0xcb1>
   16842:	cmp    edi,0x20
   16845:	je     16821 <fts_children@@Base+0xcb1>
   16847:	cmp    edi,0x23
   1684a:	je     169c9 <fts_children@@Base+0xe59>
   16850:	mov    rsi,r14
   16853:	call   3b00 <ungetc@plt>
   16858:	mov    r13,QWORD PTR [rsp+0x10]
   1685d:	mov    rcx,QWORD PTR [rsp+0x8]
   16862:	lea    rsi,[rip+0x6543]        # 1cdac <version_etc_copyright@@Base+0x12c>
   16869:	xor    eax,eax
   1686b:	mov    rdi,r14
   1686e:	mov    rdx,r13
   16871:	call   3870 <fscanf@plt>
   16876:	cmp    eax,0x1
   16879:	jle    1698d <fts_children@@Base+0xe1d>
   1687f:	mov    rdx,r13
   16882:	mov    ecx,DWORD PTR [rdx]
   16884:	add    rdx,0x4
   16888:	lea    eax,[rcx-0x1010101]
   1688e:	not    ecx
   16890:	and    eax,ecx
   16892:	and    eax,0x80808080
   16897:	je     16882 <fts_children@@Base+0xd12>
   16899:	mov    ecx,eax
   1689b:	mov    r13,QWORD PTR [rsp+0x8]
   168a0:	shr    ecx,0x10
   168a3:	test   eax,0x8080
   168a8:	cmove  eax,ecx
   168ab:	lea    rcx,[rdx+0x2]
   168af:	cmove  rdx,rcx
   168b3:	mov    ecx,eax
   168b5:	add    cl,al
   168b7:	sbb    rdx,0x3
   168bb:	sub    rdx,QWORD PTR [rsp+0x10]
   168c0:	mov    esi,DWORD PTR [r13+0x0]
   168c4:	add    r13,0x4
   168c8:	lea    eax,[rsi-0x1010101]
   168ce:	not    esi
   168d0:	and    eax,esi
   168d2:	and    eax,0x80808080
   168d7:	je     168c0 <fts_children@@Base+0xd50>
   168d9:	mov    esi,eax
   168db:	mov    QWORD PTR [rsp+0x18],rdx
   168e0:	shr    esi,0x10
   168e3:	test   eax,0x8080
   168e8:	cmove  eax,esi
   168eb:	lea    rsi,[r13+0x2]
   168ef:	mov    ecx,eax
   168f1:	cmove  r13,rsi
   168f5:	add    cl,al
   168f7:	sbb    r13,0x3
   168fb:	sub    r13,QWORD PTR [rsp+0x8]
   16900:	cmp    QWORD PTR [rsp],0x0
   16905:	lea    rax,[rdx+r13*1]
   16909:	jne    169fa <fts_children@@Base+0xe8a>
   1690f:	lea    rcx,[rax+0x2]
   16913:	lea    rdi,[rax+0x3]
   16917:	mov    QWORD PTR [rsp],rcx
   1691b:	call   3ac0 <malloc@plt>
   16920:	mov    rdx,QWORD PTR [rsp+0x18]
   16925:	mov    r12,rax
   16928:	test   r12,r12
   1692b:	je     16a1f <fts_children@@Base+0xeaf>
   16931:	mov    r15,QWORD PTR [rsp]
   16935:	mov    rdi,0xfffffffffffffffe
   1693c:	mov    rsi,QWORD PTR [rsp+0x10]
   16941:	sub    rdi,rdx
   16944:	add    rdx,0x1
   16948:	sub    r15,r13
   1694b:	add    rdi,r15
   1694e:	add    rdi,r12
   16951:	call   3a40 <memcpy@plt>
   16956:	mov    rsi,QWORD PTR [rsp+0x8]
   1695b:	lea    rdi,[r12+r15*1-0x1]
   16960:	lea    rdx,[r13+0x1]
   16964:	mov    r15,r12
   16967:	call   3a40 <memcpy@plt>
   1696c:	mov    rax,QWORD PTR [r14+0x8]
   16970:	cmp    rax,QWORD PTR [r14+0x10]
   16974:	jb     1682f <fts_children@@Base+0xcbf>
   1697a:	mov    rdi,r14
   1697d:	call   34d0 <__uflow@plt>
   16982:	cmp    eax,0xffffffff
   16985:	mov    edi,eax
   16987:	jne    1683a <fts_children@@Base+0xcca>
   1698d:	mov    rdi,r14
   16990:	call   17770 <fts_children@@Base+0x1c00>
   16995:	mov    rax,QWORD PTR [rsp]
   16999:	test   rax,rax
   1699c:	je     167c4 <fts_children@@Base+0xc54>
   169a2:	mov    BYTE PTR [r15+rax*1],0x0
   169a7:	jmp    167cb <fts_children@@Base+0xc5b>
   169ac:	nop    DWORD PTR [rax+0x0]
   169b0:	lea    rdx,[rax+0x1]
   169b4:	mov    QWORD PTR [r14+0x8],rdx
   169b8:	movzx  eax,BYTE PTR [rax]
   169bb:	mov    edx,0x1
   169c0:	cmp    eax,0xa
   169c3:	je     169f0 <fts_children@@Base+0xe80>
   169c5:	test   dl,dl
   169c7:	je     169f0 <fts_children@@Base+0xe80>
   169c9:	mov    rax,QWORD PTR [r14+0x8]
   169cd:	cmp    rax,QWORD PTR [r14+0x10]
   169d1:	jb     169b0 <fts_children@@Base+0xe40>
   169d3:	mov    rdi,r14
   169d6:	call   34d0 <__uflow@plt>
   169db:	cmp    eax,0xffffffff
   169de:	setne  dl
   169e1:	jmp    169c0 <fts_children@@Base+0xe50>
   169e3:	mov    edi,r12d
   169e6:	call   38b0 <close@plt>
   169eb:	jmp    167c4 <fts_children@@Base+0xc54>
   169f0:	cmp    eax,0xffffffff
   169f3:	je     1698d <fts_children@@Base+0xe1d>
   169f5:	jmp    16821 <fts_children@@Base+0xcb1>
   169fa:	add    rax,QWORD PTR [rsp]
   169fe:	mov    rdi,r15
   16a01:	lea    rcx,[rax+0x2]
   16a05:	lea    rsi,[rax+0x3]
   16a09:	mov    QWORD PTR [rsp],rcx
   16a0d:	call   3b70 <realloc@plt>
   16a12:	mov    rdx,QWORD PTR [rsp+0x18]
   16a17:	mov    r12,rax
   16a1a:	jmp    16928 <fts_children@@Base+0xdb8>
   16a1f:	mov    rdi,r15
   16a22:	lea    r15,[rip+0x5037]        # 1ba60 <_IO_stdin_used@@Base+0x20c0>
   16a29:	call   3e10 <free@plt>
   16a2e:	mov    rdi,r14
   16a31:	call   17770 <fts_children@@Base+0x1c00>
   16a36:	jmp    167cb <fts_children@@Base+0xc5b>
   16a3b:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
   16a41:	jne    16a51 <fts_children@@Base+0xee1>
   16a43:	lea    rdi,[rax+0xe]
   16a47:	jmp    16725 <fts_children@@Base+0xbb5>
   16a4c:	call   3760 <__stack_chk_fail@plt>
   16a51:	lea    rdi,[rax+0xf]
   16a55:	add    r12,0x1
   16a59:	jmp    16768 <fts_children@@Base+0xbf8>
   16a5e:	xchg   ax,ax
   16a60:	sub    rsp,0x58
   16a64:	mov    QWORD PTR [rsp+0x38],rcx
   16a69:	xor    ecx,ecx
   16a6b:	mov    rax,QWORD PTR fs:0x28
   16a74:	mov    QWORD PTR [rsp+0x18],rax
   16a79:	xor    eax,eax
   16a7b:	test   dl,0x40
   16a7e:	jne    16aa8 <fts_children@@Base+0xf38>
   16a80:	xor    eax,eax
   16a82:	call   3750 <openat@plt>
   16a87:	mov    edi,eax
   16a89:	call   118a0 <__cxa_finalize@plt+0xda88>
   16a8e:	mov    rsi,QWORD PTR [rsp+0x18]
   16a93:	xor    rsi,QWORD PTR fs:0x28
   16a9c:	jne    16ac9 <fts_children@@Base+0xf59>
   16a9e:	add    rsp,0x58
   16aa2:	ret    
   16aa3:	nop    DWORD PTR [rax+rax*1+0x0]
   16aa8:	lea    rax,[rsp+0x60]
   16aad:	mov    DWORD PTR [rsp],0x18
   16ab4:	mov    ecx,DWORD PTR [rsp+0x38]
   16ab8:	mov    QWORD PTR [rsp+0x8],rax
   16abd:	lea    rax,[rsp+0x20]
   16ac2:	mov    QWORD PTR [rsp+0x10],rax
   16ac7:	jmp    16a80 <fts_children@@Base+0xf10>
   16ac9:	call   3760 <__stack_chk_fail@plt>
   16ace:	xchg   ax,ax
   16ad0:	push   rbx
   16ad1:	mov    rbx,rdi
   16ad4:	mov    edi,0x18
   16ad9:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   16ade:	mov    QWORD PTR [rax],rbx
   16ae1:	mov    QWORD PTR [rax+0x10],0x0
   16ae9:	mov    QWORD PTR [rax+0x8],0x0
   16af1:	pop    rbx
   16af2:	ret    
   16af3:	nop    DWORD PTR [rax]
   16af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16b00:	push   rbx
   16b01:	call   16d50 <fts_children@@Base+0x11e0>
   16b06:	test   rax,rax
   16b09:	je     16b30 <fts_children@@Base+0xfc0>
   16b0b:	mov    rbx,rax
   16b0e:	mov    edi,0x18
   16b13:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   16b18:	mov    QWORD PTR [rax],rbx
   16b1b:	mov    QWORD PTR [rax+0x10],0x0
   16b23:	mov    QWORD PTR [rax+0x8],0x0
   16b2b:	pop    rbx
   16b2c:	ret    
   16b2d:	nop    DWORD PTR [rax]
   16b30:	xor    eax,eax
   16b32:	pop    rbx
   16b33:	ret    
   16b34:	xchg   ax,ax
   16b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16b40:	mov    rax,QWORD PTR [rdi]
   16b43:	ret    
   16b44:	xchg   ax,ax
   16b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16b50:	push   r15
   16b52:	push   r14
   16b54:	lea    r15,[rsi+0x1]
   16b58:	push   r13
   16b5a:	push   r12
   16b5c:	mov    r13,rdi
   16b5f:	push   rbp
   16b60:	push   rbx
   16b61:	mov    r14,rsi
   16b64:	sub    rsp,0x28
   16b68:	mov    rbp,QWORD PTR [rdi+0x8]
   16b6c:	mov    rbx,QWORD PTR [rdi+0x10]
   16b70:	mov    rax,QWORD PTR fs:0x28
   16b79:	mov    QWORD PTR [rsp+0x18],rax
   16b7e:	xor    eax,eax
   16b80:	mov    rax,QWORD PTR [rdi]
   16b83:	lea    r12,[rsp+0x10]
   16b88:	mov    QWORD PTR [rsp+0x8],rax
   16b8d:	jmp    16bc5 <fts_children@@Base+0x1055>
   16b8f:	nop
   16b90:	cmp    rbx,r14
   16b93:	je     16c1f <fts_children@@Base+0x10af>
   16b99:	mov    rax,rbx
   16b9c:	xor    edx,edx
   16b9e:	sub    rax,r14
   16ba1:	div    r15
   16ba4:	sub    rbx,rdx
   16ba7:	mov    rdi,rdx
   16baa:	mov    rsi,rax
   16bad:	xor    edx,edx
   16baf:	mov    rax,rbp
   16bb2:	div    r15
   16bb5:	cmp    rbp,rbx
   16bb8:	jbe    16c58 <fts_children@@Base+0x10e8>
   16bbe:	lea    rbx,[rdi-0x1]
   16bc2:	mov    rbp,rdx
   16bc5:	cmp    rbx,r14
   16bc8:	jae    16b90 <fts_children@@Base+0x1020>
   16bca:	mov    rax,rbx
   16bcd:	xor    edx,edx
   16bcf:	nop
   16bd0:	shl    rax,0x8
   16bd4:	add    rdx,0x1
   16bd8:	add    rax,0xff
   16bde:	cmp    r14,rax
   16be1:	ja     16bd0 <fts_children@@Base+0x1060>
   16be3:	mov    rdi,QWORD PTR [rsp+0x8]
   16be8:	mov    rsi,r12
   16beb:	call   170a0 <fts_children@@Base+0x1530>
   16bf0:	mov    rax,r12
   16bf3:	nop    DWORD PTR [rax+rax*1+0x0]
   16bf8:	movzx  edx,BYTE PTR [rax]
   16bfb:	shl    rbx,0x8
   16bff:	shl    rbp,0x8
   16c03:	add    rbx,0xff
   16c0a:	add    rax,0x1
   16c0e:	add    rbp,rdx
   16c11:	cmp    r14,rbx
   16c14:	ja     16bf8 <fts_children@@Base+0x1088>
   16c16:	cmp    rbx,r14
   16c19:	jne    16b99 <fts_children@@Base+0x1029>
   16c1f:	mov    QWORD PTR [r13+0x10],0x0
   16c27:	mov    QWORD PTR [r13+0x8],0x0
   16c2f:	mov    rcx,QWORD PTR [rsp+0x18]
   16c34:	xor    rcx,QWORD PTR fs:0x28
   16c3d:	mov    rax,rbp
   16c40:	jne    16c65 <fts_children@@Base+0x10f5>
   16c42:	add    rsp,0x28
   16c46:	pop    rbx
   16c47:	pop    rbp
   16c48:	pop    r12
   16c4a:	pop    r13
   16c4c:	pop    r14
   16c4e:	pop    r15
   16c50:	ret    
   16c51:	nop    DWORD PTR [rax+0x0]
   16c58:	mov    QWORD PTR [r13+0x8],rax
   16c5c:	mov    QWORD PTR [r13+0x10],rsi
   16c60:	mov    rbp,rdx
   16c63:	jmp    16c2f <fts_children@@Base+0x10bf>
   16c65:	call   3760 <__stack_chk_fail@plt>
   16c6a:	nop    WORD PTR [rax+rax*1+0x0]
   16c70:	push   rbx
   16c71:	mov    rdx,0xffffffffffffffff
   16c78:	mov    rbx,rdi
   16c7b:	mov    esi,0x18
   16c80:	call   3c50 <__explicit_bzero_chk@plt>
   16c85:	mov    rdi,rbx
   16c88:	pop    rbx
   16c89:	jmp    3e10 <free@plt>
   16c8e:	xchg   ax,ax
   16c90:	push   r13
   16c92:	push   r12
   16c94:	push   rbp
   16c95:	push   rbx
   16c96:	mov    rbx,rdi
   16c99:	sub    rsp,0x8
   16c9d:	mov    rdi,QWORD PTR [rdi]
   16ca0:	call   17240 <fts_children@@Base+0x16d0>
   16ca5:	mov    r12d,eax
   16ca8:	call   3540 <__errno_location@plt>
   16cad:	mov    r13d,DWORD PTR [rax]
   16cb0:	mov    rdi,rbx
   16cb3:	mov    rdx,0xffffffffffffffff
   16cba:	mov    esi,0x18
   16cbf:	mov    rbp,rax
   16cc2:	call   3c50 <__explicit_bzero_chk@plt>
   16cc7:	mov    rdi,rbx
   16cca:	call   3e10 <free@plt>
   16ccf:	mov    DWORD PTR [rbp+0x0],r13d
   16cd3:	add    rsp,0x8
   16cd7:	mov    eax,r12d
   16cda:	pop    rbx
   16cdb:	pop    rbp
   16cdc:	pop    r12
   16cde:	pop    r13
   16ce0:	ret    
   16ce1:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16ceb:	nop    DWORD PTR [rax+rax*1+0x0]
   16cf0:	push   rbp
   16cf1:	push   rbx
   16cf2:	sub    rsp,0x8
   16cf6:	test   rdi,rdi
   16cf9:	je     16d38 <fts_children@@Base+0x11c8>
   16cfb:	call   10d50 <__cxa_finalize@plt+0xcf38>
   16d00:	mov    rbp,rax
   16d03:	call   3540 <__errno_location@plt>
   16d08:	cmp    DWORD PTR [rax],0x0
   16d0b:	mov    rbx,rax
   16d0e:	mov    edx,0x5
   16d13:	je     16d3d <fts_children@@Base+0x11cd>
   16d15:	lea    rsi,[rip+0x60aa]        # 1cdc6 <version_etc_copyright@@Base+0x146>
   16d1c:	xor    edi,edi
   16d1e:	call   3700 <dcgettext@plt>
   16d23:	mov    edi,DWORD PTR [rip+0x20b307]        # 222030 <exit_failure@@Base>
   16d29:	mov    esi,DWORD PTR [rbx]
   16d2b:	mov    rdx,rax
   16d2e:	mov    rcx,rbp
   16d31:	xor    eax,eax
   16d33:	call   3c20 <error@plt>
   16d38:	call   3530 <abort@plt>
   16d3d:	lea    rsi,[rip+0x6072]        # 1cdb6 <version_etc_copyright@@Base+0x136>
   16d44:	xor    edi,edi
   16d46:	call   3700 <dcgettext@plt>
   16d4b:	jmp    16d23 <fts_children@@Base+0x11b3>
   16d4d:	nop    DWORD PTR [rax]
   16d50:	push   r15
   16d52:	push   r14
   16d54:	push   r13
   16d56:	push   r12
   16d58:	push   rbp
   16d59:	push   rbx
   16d5a:	sub    rsp,0x38
   16d5e:	mov    rax,QWORD PTR fs:0x28
   16d67:	mov    QWORD PTR [rsp+0x28],rax
   16d6c:	xor    eax,eax
   16d6e:	test   rsi,rsi
   16d71:	je     16e98 <fts_children@@Base+0x1328>
   16d77:	test   rdi,rdi
   16d7a:	mov    r12,rdi
   16d7d:	mov    rbp,rsi
   16d80:	je     16e00 <fts_children@@Base+0x1290>
   16d82:	lea    rsi,[rip+0x6059]        # 1cde2 <version_etc_copyright@@Base+0x162>
   16d89:	call   18940 <fts_children@@Base+0x2dd0>
   16d8e:	test   rax,rax
   16d91:	mov    r13,rax
   16d94:	je     16f98 <fts_children@@Base+0x1428>
   16d9a:	mov    edi,0x1038
   16d9f:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   16da4:	mov    rbx,rax
   16da7:	mov    QWORD PTR [rax],r13
   16daa:	lea    rax,[rip+0xffffffffffffff3f]        # 16cf0 <fts_children@@Base+0x1180>
   16db1:	cmp    rbp,0x1000
   16db8:	mov    ecx,0x1000
   16dbd:	lea    rsi,[rbx+0x18]
   16dc1:	cmovbe rcx,rbp
   16dc5:	mov    QWORD PTR [rbx+0x8],rax
   16dc9:	mov    QWORD PTR [rbx+0x10],r12
   16dcd:	xor    edx,edx
   16dcf:	mov    rdi,r13
   16dd2:	call   3bd0 <setvbuf@plt>
   16dd7:	mov    rdx,QWORD PTR [rsp+0x28]
   16ddc:	xor    rdx,QWORD PTR fs:0x28
   16de5:	mov    rax,rbx
   16de8:	jne    16f9f <fts_children@@Base+0x142f>
   16dee:	add    rsp,0x38
   16df2:	pop    rbx
   16df3:	pop    rbp
   16df4:	pop    r12
   16df6:	pop    r13
   16df8:	pop    r14
   16dfa:	pop    r15
   16dfc:	ret    
   16dfd:	nop    DWORD PTR [rax]
   16e00:	mov    edi,0x1038
   16e05:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   16e0a:	mov    rbx,rax
   16e0d:	mov    QWORD PTR [rax],0x0
   16e14:	lea    rax,[rip+0xfffffffffffffed5]        # 16cf0 <fts_children@@Base+0x1180>
   16e1b:	lea    rdi,[rip+0x5fb3]        # 1cdd5 <version_etc_copyright@@Base+0x155>
   16e22:	xor    esi,esi
   16e24:	mov    QWORD PTR [rbx+0x10],0x0
   16e2c:	mov    QWORD PTR [rbx+0x8],rax
   16e30:	mov    QWORD PTR [rbx+0x18],0x0
   16e38:	xor    eax,eax
   16e3a:	call   3c60 <open@plt>
   16e3f:	test   eax,eax
   16e41:	lea    r13,[rbx+0x20]
   16e45:	mov    r15d,eax
   16e48:	js     16ec8 <fts_children@@Base+0x1358>
   16e4a:	cmp    rbp,0x800
   16e51:	mov    rdx,rbp
   16e54:	mov    r14d,0x800
   16e5a:	cmova  rdx,r14
   16e5e:	mov    ecx,0x1018
   16e63:	mov    rsi,r13
   16e66:	mov    edi,eax
   16e68:	call   35d0 <__read_chk@plt>
   16e6d:	mov    edi,r15d
   16e70:	mov    rbp,rax
   16e73:	call   38b0 <close@plt>
   16e78:	cmp    rbp,0x7ff
   16e7f:	jle    16fa4 <fts_children@@Base+0x1434>
   16e85:	mov    rdi,r13
   16e88:	call   17520 <fts_children@@Base+0x19b0>
   16e8d:	jmp    16dd7 <fts_children@@Base+0x1267>
   16e92:	nop    WORD PTR [rax+rax*1+0x0]
   16e98:	mov    edi,0x1038
   16e9d:	call   130c0 <__cxa_finalize@plt+0xf2a8>
   16ea2:	mov    rbx,rax
   16ea5:	mov    QWORD PTR [rax],0x0
   16eac:	lea    rax,[rip+0xfffffffffffffe3d]        # 16cf0 <fts_children@@Base+0x1180>
   16eb3:	mov    QWORD PTR [rbx+0x10],0x0
   16ebb:	mov    QWORD PTR [rbx+0x8],rax
   16ebf:	jmp    16dd7 <fts_children@@Base+0x1267>
   16ec4:	nop    DWORD PTR [rax+0x0]
   16ec8:	lea    r12,[rsp+0x10]
   16ecd:	xor    esi,esi
   16ecf:	mov    r14d,0x18
   16ed5:	mov    rdi,r12
   16ed8:	call   3820 <gettimeofday@plt>
   16edd:	movdqa xmm0,XMMWORD PTR [rsp+0x10]
   16ee3:	movups XMMWORD PTR [rbx+0x20],xmm0
   16ee7:	call   3660 <getpid@plt>
   16eec:	mov    DWORD PTR [rbx+0x30],eax
   16eef:	mov    DWORD PTR [rsp+0x10],eax
   16ef3:	call   3d40 <getppid@plt>
   16ef8:	mov    DWORD PTR [rsp+0x10],eax
   16efc:	mov    DWORD PTR [rbx+0x34],eax
   16eff:	mov    ebp,0x800
   16f04:	mov    eax,0x4
   16f09:	sub    rbp,r14
   16f0c:	cmp    rbp,0x4
   16f10:	cmova  rbp,rax
   16f14:	call   3770 <getuid@plt>
   16f19:	test   ebp,ebp
   16f1b:	mov    DWORD PTR [rsp+0x10],eax
   16f1f:	lea    rcx,[r13+r14*1+0x0]
   16f24:	mov    esi,ebp
   16f26:	je     16f3c <fts_children@@Base+0x13cc>
   16f28:	xor    eax,eax
   16f2a:	mov    edx,eax
   16f2c:	add    eax,0x1
   16f2f:	movzx  edi,BYTE PTR [r12+rdx*1]
   16f34:	cmp    eax,esi
   16f36:	mov    BYTE PTR [rcx+rdx*1],dil
   16f3a:	jb     16f2a <fts_children@@Base+0x13ba>
   16f3c:	add    rbp,r14
   16f3f:	cmp    rbp,0x7ff
   16f46:	ja     16e85 <fts_children@@Base+0x1315>
   16f4c:	call   3a80 <getgid@plt>
   16f51:	mov    DWORD PTR [rsp+0x10],eax
   16f55:	mov    eax,0x800
   16f5a:	mov    edx,0x4
   16f5f:	sub    rax,rbp
   16f62:	lea    rcx,[r13+rbp*1+0x0]
   16f67:	cmp    rax,0x4
   16f6b:	cmova  rax,rdx
   16f6f:	test   eax,eax
   16f71:	mov    esi,eax
   16f73:	je     16e85 <fts_children@@Base+0x1315>
   16f79:	xor    eax,eax
   16f7b:	mov    edx,eax
   16f7d:	add    eax,0x1
   16f80:	movzx  edi,BYTE PTR [r12+rdx*1]
   16f85:	cmp    eax,esi
   16f87:	mov    BYTE PTR [rcx+rdx*1],dil
   16f8b:	jb     16f7b <fts_children@@Base+0x140b>
   16f8d:	jmp    16e85 <fts_children@@Base+0x1315>
   16f92:	nop    WORD PTR [rax+rax*1+0x0]
   16f98:	xor    ebx,ebx
   16f9a:	jmp    16dd7 <fts_children@@Base+0x1267>
   16f9f:	call   3760 <__stack_chk_fail@plt>
   16fa4:	test   rbp,rbp
   16fa7:	mov    r15,r14
   16faa:	mov    eax,0x10
   16faf:	cmovs  rbp,r12
   16fb3:	lea    r12,[rsp+0x10]
   16fb8:	sub    r15,rbp
   16fbb:	cmp    r15,0x10
   16fbf:	mov    rdi,r12
   16fc2:	cmova  r15,rax
   16fc6:	xor    esi,esi
   16fc8:	call   3820 <gettimeofday@plt>
   16fcd:	lea    rax,[r13+rbp*1+0x0]
   16fd2:	add    rbp,r15
   16fd5:	mov    ecx,r15d
   16fd8:	cmp    rbp,0x7ff
   16fdf:	mov    rsi,r12
   16fe2:	mov    rdi,rax
   16fe5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   16fe7:	ja     16e85 <fts_children@@Base+0x1315>
   16fed:	mov    r15,r14
   16ff0:	mov    r8d,0x4
   16ff6:	sub    r15,rbp
   16ff9:	mov    QWORD PTR [rsp+0x8],r8
   16ffe:	cmp    r15,0x4
   17002:	cmova  r15,r8
   17006:	lea    rdx,[rbp+r15*1+0x0]
   1700b:	add    rbp,r13
   1700e:	mov    QWORD PTR [rsp],rdx
   17012:	call   3660 <getpid@plt>
   17017:	mov    rdx,QWORD PTR [rsp]
   1701b:	mov    DWORD PTR [rsp+0x10],eax
   1701f:	mov    ecx,r15d
   17022:	mov    rdi,rbp
   17025:	mov    rsi,r12
   17028:	mov    r8,QWORD PTR [rsp+0x8]
   1702d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1702f:	cmp    rdx,0x7ff
   17036:	jg     16e85 <fts_children@@Base+0x1315>
   1703c:	sub    r14,rdx
   1703f:	cmp    r14,0x4
   17043:	cmova  r14,r8
   17047:	call   3d40 <getppid@plt>
   1704c:	mov    rdx,QWORD PTR [rsp]
   17050:	mov    DWORD PTR [rsp+0x10],eax
   17054:	mov    ecx,r14d
   17057:	mov    rsi,r12
   1705a:	lea    rax,[r13+rdx*1+0x0]
   1705f:	add    r14,rdx
   17062:	cmp    r14,0x7ff
   17069:	mov    rdi,rax
   1706c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1706e:	ja     16e85 <fts_children@@Base+0x1315>
   17074:	jmp    16eff <fts_children@@Base+0x138f>
   17079:	nop    DWORD PTR [rax+0x0]
   17080:	mov    QWORD PTR [rdi+0x8],rsi
   17084:	ret    
   17085:	nop
   17086:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17090:	mov    QWORD PTR [rdi+0x10],rsi
   17094:	ret    
   17095:	nop
   17096:	nop    WORD PTR cs:[rax+rax*1+0x0]
   170a0:	push   r15
   170a2:	push   r14
   170a4:	push   r13
   170a6:	push   r12
   170a8:	mov    r12,rdi
   170ab:	push   rbp
   170ac:	push   rbx
   170ad:	mov    rbp,rdx
   170b0:	mov    rbx,rsi
   170b3:	sub    rsp,0x18
   170b7:	mov    rcx,QWORD PTR [rdi]
   170ba:	test   rcx,rcx
   170bd:	mov    QWORD PTR [rsp+0x8],rcx
   170c2:	je     17128 <fts_children@@Base+0x15b8>
   170c4:	call   3540 <__errno_location@plt>
   170c9:	mov    rcx,QWORD PTR [rsp+0x8]
   170ce:	mov    r13,rax
   170d1:	jmp    170f6 <fts_children@@Base+0x1586>
   170d3:	nop    DWORD PTR [rax+rax*1+0x0]
   170d8:	mov    rax,QWORD PTR [r12]
   170dc:	mov    rdi,QWORD PTR [r12+0x10]
   170e1:	mov    eax,DWORD PTR [rax]
   170e3:	and    eax,0x20
   170e6:	cmovne eax,edx
   170e9:	mov    DWORD PTR [r13+0x0],eax
   170ed:	call   QWORD PTR [r12+0x8]
   170f2:	mov    rcx,QWORD PTR [r12]
   170f6:	mov    rdx,rbp
   170f9:	mov    rdi,rbx
   170fc:	mov    esi,0x1
   17101:	call   3670 <fread_unlocked@plt>
   17106:	add    rbx,rax
   17109:	sub    rbp,rax
   1710c:	mov    edx,DWORD PTR [r13+0x0]
   17110:	jne    170d8 <fts_children@@Base+0x1568>
   17112:	add    rsp,0x18
   17116:	pop    rbx
   17117:	pop    rbp
   17118:	pop    r12
   1711a:	pop    r13
   1711c:	pop    r14
   1711e:	pop    r15
   17120:	ret    
   17121:	nop    DWORD PTR [rax+0x0]
   17128:	mov    r14,QWORD PTR [rdi+0x18]
   1712c:	lea    rax,[rdi+0x838]
   17133:	lea    r13,[rdi+0x20]
   17137:	mov    QWORD PTR [rsp+0x8],rax
   1713c:	cmp    rdx,r14
   1713f:	jbe    17222 <fts_children@@Base+0x16b2>
   17145:	mov    esi,0x800
   1714a:	mov    rdi,rbx
   1714d:	mov    rdx,r14
   17150:	sub    rsi,r14
   17153:	add    rsi,QWORD PTR [rsp+0x8]
   17158:	add    rbx,r14
   1715b:	sub    rbp,r14
   1715e:	call   3a40 <memcpy@plt>
   17163:	test   bl,0x7
   17166:	jne    171d0 <fts_children@@Base+0x1660>
   17168:	cmp    rbp,0x7ff
   1716f:	jbe    17213 <fts_children@@Base+0x16a3>
   17175:	lea    r15,[rbp-0x800]
   1717c:	mov    r14,r15
   1717f:	and    r14d,0x7ff
   17186:	jmp    1719c <fts_children@@Base+0x162c>
   17188:	nop    DWORD PTR [rax+rax*1+0x0]
   17190:	cmp    r15,r14
   17193:	je     171d0 <fts_children@@Base+0x1660>
   17195:	sub    r15,0x800
   1719c:	mov    rsi,rbx
   1719f:	mov    rdi,r13
   171a2:	add    rbx,0x800
   171a9:	call   17290 <fts_children@@Base+0x1720>
   171ae:	test   r15,r15
   171b1:	mov    rbp,r15
   171b4:	jne    17190 <fts_children@@Base+0x1620>
   171b6:	mov    QWORD PTR [r12+0x18],0x0
   171bf:	add    rsp,0x18
   171c3:	pop    rbx
   171c4:	pop    rbp
   171c5:	pop    r12
   171c7:	pop    r13
   171c9:	pop    r14
   171cb:	pop    r15
   171cd:	ret    
   171ce:	xchg   ax,ax
   171d0:	mov    rsi,QWORD PTR [rsp+0x8]
   171d5:	mov    rdi,r13
   171d8:	mov    r14d,0x800
   171de:	call   17290 <fts_children@@Base+0x1720>
   171e3:	cmp    rbp,0x800
   171ea:	ja     17145 <fts_children@@Base+0x15d5>
   171f0:	mov    r14d,0x800
   171f6:	mov    rsi,QWORD PTR [rsp+0x8]
   171fb:	mov    rdx,rbp
   171fe:	mov    rdi,rbx
   17201:	sub    r14,rbp
   17204:	call   3a40 <memcpy@plt>
   17209:	mov    QWORD PTR [r12+0x18],r14
   1720e:	jmp    17112 <fts_children@@Base+0x15a2>
   17213:	mov    rsi,QWORD PTR [rsp+0x8]
   17218:	mov    rdi,r13
   1721b:	call   17290 <fts_children@@Base+0x1720>
   17220:	jmp    171f0 <fts_children@@Base+0x1680>
   17222:	mov    r15,rax
   17225:	sub    r15,r14
   17228:	lea    rax,[r15+0x800]
   1722f:	mov    QWORD PTR [rsp+0x8],rax
   17234:	jmp    171f6 <fts_children@@Base+0x1686>
   17236:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17240:	push   rbp
   17241:	push   rbx
   17242:	mov    rdx,0xffffffffffffffff
   17249:	mov    rbx,rdi
   1724c:	mov    esi,0x1038
   17251:	sub    rsp,0x8
   17255:	mov    rbp,QWORD PTR [rdi]
   17258:	call   3c50 <__explicit_bzero_chk@plt>
   1725d:	mov    rdi,rbx
   17260:	call   3e10 <free@plt>
   17265:	test   rbp,rbp
   17268:	je     17280 <fts_children@@Base+0x1710>
   1726a:	add    rsp,0x8
   1726e:	mov    rdi,rbp
   17271:	pop    rbx
   17272:	pop    rbp
   17273:	jmp    17770 <fts_children@@Base+0x1c00>
   17278:	nop    DWORD PTR [rax+rax*1+0x0]
   17280:	add    rsp,0x8
   17284:	xor    eax,eax
   17286:	pop    rbx
   17287:	pop    rbp
   17288:	ret    
   17289:	nop    DWORD PTR [rax+0x0]
   17290:	mov    rax,QWORD PTR [rdi+0x810]
   17297:	mov    rdx,QWORD PTR [rdi+0x800]
   1729e:	lea    r9,[rdi+0x400]
   172a5:	lea    rcx,[rax+0x1]
   172a9:	mov    rax,rdi
   172ac:	mov    QWORD PTR [rdi+0x810],rcx
   172b3:	add    rcx,QWORD PTR [rdi+0x808]
   172ba:	nop    WORD PTR [rax+rax*1+0x0]
   172c0:	mov    r8,rdx
   172c3:	shl    r8,0x15
   172c7:	xor    rdx,r8
   172ca:	mov    r8,QWORD PTR [rax]
   172cd:	not    rdx
   172d0:	add    rdx,QWORD PTR [rax+0x400]
   172d7:	mov    r10,r8
   172da:	and    r10d,0x7f8
   172e1:	mov    r11,QWORD PTR [rdi+r10*1]
   172e5:	mov    r10,rdx
   172e8:	shr    r10,0x5
   172ec:	add    r11,rdx
   172ef:	xor    rdx,r10
   172f2:	add    rcx,r11
   172f5:	mov    QWORD PTR [rax],rcx
   172f8:	shr    rcx,0x8
   172fc:	and    ecx,0x7f8
   17302:	mov    r11,QWORD PTR [rdi+rcx*1]
   17306:	add    r11,r8
   17309:	mov    QWORD PTR [rsi],r11
   1730c:	add    rdx,QWORD PTR [rax+0x408]
   17313:	mov    rcx,QWORD PTR [rax+0x8]
   17317:	mov    r10,rdx
   1731a:	mov    rdx,rcx
   1731d:	and    edx,0x7f8
   17323:	mov    r8,QWORD PTR [rdi+rdx*1]
   17327:	mov    rdx,r10
   1732a:	shl    rdx,0xc
   1732e:	xor    rdx,r10
   17331:	add    r8,r10
   17334:	add    r8,r11
   17337:	mov    QWORD PTR [rax+0x8],r8
   1733b:	shr    r8,0x8
   1733f:	and    r8d,0x7f8
   17346:	add    rcx,QWORD PTR [rdi+r8*1]
   1734a:	mov    QWORD PTR [rsi+0x8],rcx
   1734e:	mov    r8,QWORD PTR [rax+0x10]
   17352:	mov    r11,rcx
   17355:	add    rdx,QWORD PTR [rax+0x410]
   1735c:	mov    rcx,r8
   1735f:	and    ecx,0x7f8
   17365:	mov    r10,QWORD PTR [rdi+rcx*1]
   17369:	add    r10,rdx
   1736c:	mov    rcx,r10
   1736f:	add    rcx,r11
   17372:	mov    QWORD PTR [rax+0x10],rcx
   17376:	shr    rcx,0x8
   1737a:	and    ecx,0x7f8
   17380:	mov    r10,QWORD PTR [rdi+rcx*1]
   17384:	mov    rcx,rdx
   17387:	shr    rcx,0x21
   1738b:	xor    rdx,rcx
   1738e:	add    r10,r8
   17391:	mov    QWORD PTR [rsi+0x10],r10
   17395:	mov    rcx,QWORD PTR [rax+0x18]
   17399:	add    rdx,QWORD PTR [rax+0x418]
   173a0:	mov    r8,rcx
   173a3:	and    r8d,0x7f8
   173aa:	mov    r11,QWORD PTR [rdi+r8*1]
   173ae:	add    r11,rdx
   173b1:	mov    r8,r11
   173b4:	add    r8,r10
   173b7:	add    rax,0x20
   173bb:	add    rsi,0x20
   173bf:	mov    QWORD PTR [rax-0x8],r8
   173c3:	shr    r8,0x8
   173c7:	and    r8d,0x7f8
   173ce:	add    rcx,QWORD PTR [rdi+r8*1]
   173d2:	mov    QWORD PTR [rsi-0x8],rcx
   173d6:	cmp    rax,r9
   173d9:	jb     172c0 <fts_children@@Base+0x1750>
   173df:	lea    r9,[rdi+0x800]
   173e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   173f0:	mov    r8,rdx
   173f3:	shl    r8,0x15
   173f7:	xor    rdx,r8
   173fa:	mov    r8,QWORD PTR [rax]
   173fd:	not    rdx
   17400:	add    rdx,QWORD PTR [rax-0x400]
   17407:	mov    r10,r8
   1740a:	and    r10d,0x7f8
   17411:	mov    r11,QWORD PTR [rdi+r10*1]
   17415:	mov    r10,rdx
   17418:	shr    r10,0x5
   1741c:	add    r11,rdx
   1741f:	xor    rdx,r10
   17422:	add    rcx,r11
   17425:	mov    QWORD PTR [rax],rcx
   17428:	shr    rcx,0x8
   1742c:	and    ecx,0x7f8
   17432:	mov    r11,QWORD PTR [rdi+rcx*1]
   17436:	add    r11,r8
   17439:	mov    QWORD PTR [rsi],r11
   1743c:	add    rdx,QWORD PTR [rax-0x3f8]
   17443:	mov    rcx,QWORD PTR [rax+0x8]
   17447:	mov    r10,rdx
   1744a:	mov    rdx,rcx
   1744d:	and    edx,0x7f8
   17453:	mov    r8,QWORD PTR [rdi+rdx*1]
   17457:	mov    rdx,r10
   1745a:	shl    rdx,0xc
   1745e:	xor    rdx,r10
   17461:	add    r8,r10
   17464:	add    r8,r11
   17467:	mov    QWORD PTR [rax+0x8],r8
   1746b:	shr    r8,0x8
   1746f:	and    r8d,0x7f8
   17476:	add    rcx,QWORD PTR [rdi+r8*1]
   1747a:	mov    QWORD PTR [rsi+0x8],rcx
   1747e:	mov    r8,QWORD PTR [rax+0x10]
   17482:	mov    r11,rcx
   17485:	add    rdx,QWORD PTR [rax-0x3f0]
   1748c:	mov    rcx,r8
   1748f:	and    ecx,0x7f8
   17495:	mov    r10,QWORD PTR [rdi+rcx*1]
   17499:	add    r10,rdx
   1749c:	mov    rcx,r10
   1749f:	add    rcx,r11
   174a2:	mov    QWORD PTR [rax+0x10],rcx
   174a6:	shr    rcx,0x8
   174aa:	and    ecx,0x7f8
   174b0:	mov    r10,QWORD PTR [rdi+rcx*1]
   174b4:	mov    rcx,rdx
   174b7:	shr    rcx,0x21
   174bb:	xor    rdx,rcx
   174be:	add    r10,r8
   174c1:	mov    QWORD PTR [rsi+0x10],r10
   174c5:	mov    rcx,QWORD PTR [rax+0x18]
   174c9:	add    rdx,QWORD PTR [rax-0x3e8]
   174d0:	mov    r8,rcx
   174d3:	and    r8d,0x7f8
   174da:	mov    r11,QWORD PTR [rdi+r8*1]
   174de:	add    r11,rdx
   174e1:	mov    r8,r11
   174e4:	add    r8,r10
   174e7:	add    rax,0x20
   174eb:	add    rsi,0x20
   174ef:	mov    QWORD PTR [rax-0x8],r8
   174f3:	shr    r8,0x8
   174f7:	and    r8d,0x7f8
   174fe:	add    rcx,QWORD PTR [rdi+r8*1]
   17502:	mov    QWORD PTR [rsi-0x8],rcx
   17506:	cmp    rax,r9
   17509:	jb     173f0 <fts_children@@Base+0x1880>
   1750f:	mov    QWORD PTR [rdi+0x800],rdx
   17516:	mov    QWORD PTR [rdi+0x808],rcx
   1751d:	ret    
   1751e:	xchg   ax,ax
   17520:	push   r13
   17522:	push   r12
   17524:	lea    r12,[rdi+0x800]
   1752b:	push   rbp
   1752c:	mov    rdx,rdi
   1752f:	push   rbx
   17530:	mov    rax,rdi
   17533:	movabs rcx,0x98f5704f6c44c0ab
   1753d:	movabs r10,0xae985bf2cbfc89ed
   17547:	movabs rbp,0x48fe4a0fa5a09315
   17551:	movabs rsi,0x82f053db8355e0ce
   1755b:	movabs r8,0xb29b2e824a595524
   17565:	movabs rbx,0x8c0ea5053d4712a0
   1756f:	movabs r11,0xb9f8b322c73ac862
   17579:	movabs r9,0x647c4677a2884b7c
   17583:	nop    DWORD PTR [rax+rax*1+0x0]
   17588:	add    rsi,QWORD PTR [rax+0x20]
   1758c:	add    rcx,QWORD PTR [rax+0x38]
   17590:	mov    r13,QWORD PTR [rax]
   17593:	add    rbp,QWORD PTR [rax+0x28]
   17597:	add    r10,QWORD PTR [rax+0x30]
   1759b:	sub    r13,rsi
   1759e:	add    r9,r13
   175a1:	mov    r13,rcx
   175a4:	shr    r13,0x9
   175a8:	add    rcx,r9
   175ab:	xor    rbp,r13
   175ae:	mov    r13,QWORD PTR [rax+0x8]
   175b2:	sub    r13,rbp
   175b5:	add    r11,r13
   175b8:	mov    r13,r9
   175bb:	shl    r13,0x9
   175bf:	add    r9,r11
   175c2:	xor    r10,r13
   175c5:	mov    r13,QWORD PTR [rax+0x10]
   175c9:	sub    r13,r10
   175cc:	add    rbx,r13
   175cf:	mov    r13,r11
   175d2:	shr    r13,0x17
   175d6:	add    r11,rbx
   175d9:	xor    rcx,r13
   175dc:	mov    r13,QWORD PTR [rax+0x18]
   175e0:	sub    r13,rcx
   175e3:	add    r8,r13
   175e6:	mov    r13,rbx
   175e9:	shl    r13,0xf
   175ed:	add    rbx,r8
   175f0:	xor    r9,r13
   175f3:	mov    r13,r8
   175f6:	sub    rsi,r9
   175f9:	shr    r13,0xe
   175fd:	mov    QWORD PTR [rax],r9
   17600:	xor    r11,r13
   17603:	mov    r13,rsi
   17606:	add    r8,rsi
   17609:	sub    rbp,r11
   1760c:	shl    r13,0x14
   17610:	mov    QWORD PTR [rax+0x8],r11
   17614:	xor    rbx,r13
   17617:	lea    r13,[rsi+rbp*1]
   1761b:	mov    rsi,rbp
   1761e:	sub    r10,rbx
   17621:	shr    rsi,0x11
   17625:	mov    QWORD PTR [rax+0x10],rbx
   17629:	xor    r8,rsi
   1762c:	mov    rsi,r10
   1762f:	add    rbp,r10
   17632:	sub    rcx,r8
   17635:	shl    rsi,0xe
   17639:	mov    QWORD PTR [rax+0x18],r8
   1763d:	xor    rsi,r13
   17640:	add    r10,rcx
   17643:	mov    QWORD PTR [rax+0x28],rbp
   17647:	mov    QWORD PTR [rax+0x20],rsi
   1764b:	mov    QWORD PTR [rax+0x30],r10
   1764f:	add    rax,0x40
   17653:	mov    QWORD PTR [rax-0x8],rcx
   17657:	cmp    r12,rax
   1765a:	jne    17588 <fts_children@@Base+0x1a18>
   17660:	add    rsi,QWORD PTR [rdx+0x20]
   17664:	add    rcx,QWORD PTR [rdx+0x38]
   17668:	mov    r12,QWORD PTR [rdx]
   1766b:	add    rbp,QWORD PTR [rdx+0x28]
   1766f:	add    r10,QWORD PTR [rdx+0x30]
   17673:	sub    r12,rsi
   17676:	add    r9,r12
   17679:	mov    r12,rcx
   1767c:	shr    r12,0x9
   17680:	add    rcx,r9
   17683:	xor    rbp,r12
   17686:	mov    r12,QWORD PTR [rdx+0x8]
   1768a:	sub    r12,rbp
   1768d:	add    r11,r12
   17690:	mov    r12,r9
   17693:	shl    r12,0x9
   17697:	add    r9,r11
   1769a:	xor    r10,r12
   1769d:	mov    r12,QWORD PTR [rdx+0x10]
   176a1:	sub    r12,r10
   176a4:	add    rbx,r12
   176a7:	mov    r12,r11
   176aa:	shr    r12,0x17
   176ae:	add    r11,rbx
   176b1:	xor    rcx,r12
   176b4:	mov    r12,QWORD PTR [rdx+0x18]
   176b8:	sub    r12,rcx
   176bb:	add    r8,r12
   176be:	mov    r12,rbx
   176c1:	shl    r12,0xf
   176c5:	add    rbx,r8
   176c8:	xor    r9,r12
   176cb:	mov    r12,r8
   176ce:	sub    rsi,r9
   176d1:	shr    r12,0xe
   176d5:	mov    QWORD PTR [rdx],r9
   176d8:	xor    r11,r12
   176db:	mov    r12,rsi
   176de:	add    r8,rsi
   176e1:	sub    rbp,r11
   176e4:	shl    r12,0x14
   176e8:	mov    QWORD PTR [rdx+0x8],r11
   176ec:	xor    rbx,r12
   176ef:	lea    r12,[rsi+rbp*1]
   176f3:	mov    rsi,rbp
   176f6:	sub    r10,rbx
   176f9:	shr    rsi,0x11
   176fd:	mov    QWORD PTR [rdx+0x10],rbx
   17701:	xor    r8,rsi
   17704:	mov    rsi,r10
   17707:	add    rbp,r10
   1770a:	sub    rcx,r8
   1770d:	shl    rsi,0xe
   17711:	mov    QWORD PTR [rdx+0x18],r8
   17715:	xor    rsi,r12
   17718:	add    r10,rcx
   1771b:	mov    QWORD PTR [rdx+0x28],rbp
   1771f:	mov    QWORD PTR [rdx+0x20],rsi
   17723:	mov    QWORD PTR [rdx+0x30],r10
   17727:	add    rdx,0x40
   1772b:	mov    QWORD PTR [rdx-0x8],rcx
   1772f:	cmp    rax,rdx
   17732:	jne    17660 <fts_children@@Base+0x1af0>
   17738:	pop    rbx
   17739:	mov    QWORD PTR [rdi+0x810],0x0
   17744:	mov    QWORD PTR [rdi+0x808],0x0
   1774f:	pop    rbp
   17750:	mov    QWORD PTR [rdi+0x800],0x0
   1775b:	pop    r12
   1775d:	pop    r13
   1775f:	ret    
   17760:	mov    edx,0x3
   17765:	xor    esi,esi
   17767:	xor    eax,eax
   17769:	jmp    136a0 <__cxa_finalize@plt+0xf888>
   1776e:	xchg   ax,ax
   17770:	push   r12
   17772:	push   rbp
   17773:	push   rbx
   17774:	mov    rbx,rdi
   17777:	call   3a70 <fileno@plt>
   1777c:	test   eax,eax
   1777e:	mov    rdi,rbx
   17781:	js     177d7 <fts_children@@Base+0x1c67>
   17783:	call   3b40 <__freading@plt>
   17788:	test   eax,eax
   1778a:	jne    177b8 <fts_children@@Base+0x1c48>
   1778c:	mov    rdi,rbx
   1778f:	call   137f0 <__cxa_finalize@plt+0xf9d8>
   17794:	test   eax,eax
   17796:	je     177d4 <fts_children@@Base+0x1c64>
   17798:	call   3540 <__errno_location@plt>
   1779d:	mov    r12d,DWORD PTR [rax]
   177a0:	mov    rdi,rbx
   177a3:	mov    rbp,rax
   177a6:	call   36b0 <fclose@plt>
   177ab:	test   r12d,r12d
   177ae:	jne    177e0 <fts_children@@Base+0x1c70>
   177b0:	pop    rbx
   177b1:	pop    rbp
   177b2:	pop    r12
   177b4:	ret    
   177b5:	nop    DWORD PTR [rax]
   177b8:	mov    rdi,rbx
   177bb:	call   3a70 <fileno@plt>
   177c0:	xor    esi,esi
   177c2:	mov    edx,0x1
   177c7:	mov    edi,eax
   177c9:	call   3810 <lseek@plt>
   177ce:	cmp    rax,0xffffffffffffffff
   177d2:	jne    1778c <fts_children@@Base+0x1c1c>
   177d4:	mov    rdi,rbx
   177d7:	pop    rbx
   177d8:	pop    rbp
   177d9:	pop    r12
   177db:	jmp    36b0 <fclose@plt>
   177e0:	mov    DWORD PTR [rbp+0x0],r12d
   177e4:	mov    eax,0xffffffff
   177e9:	jmp    177b0 <fts_children@@Base+0x1c40>
   177eb:	nop    DWORD PTR [rax+rax*1+0x0]
   177f0:	push   rbp
   177f1:	mov    rbp,rsp
   177f4:	push   r15
   177f6:	push   r14
   177f8:	push   r13
   177fa:	push   r12
   177fc:	lea    r14,[rbp-0x3b0]
   17803:	push   rbx
   17804:	mov    rbx,rdx
   17807:	mov    r12,rcx
   1780a:	mov    rdx,r14
   1780d:	sub    rsp,0x408
   17814:	mov    QWORD PTR [rbp-0x418],rsi
   1781b:	lea    rsi,[rbp-0x2c0]
   17822:	mov    QWORD PTR [rbp-0x3e8],rdi
   17829:	mov    rdi,rbx
   1782c:	mov    QWORD PTR [rbp-0x410],r14
   17833:	mov    rax,QWORD PTR fs:0x28
   1783c:	mov    QWORD PTR [rbp-0x38],rax
   17840:	xor    eax,eax
   17842:	mov    QWORD PTR [rbp-0x408],rsi
   17849:	call   18be0 <fts_children@@Base+0x3070>
   1784e:	test   eax,eax
   17850:	js     186b8 <fts_children@@Base+0x2b48>
   17856:	mov    rsi,r14
   17859:	mov    rdi,r12
   1785c:	call   189e0 <fts_children@@Base+0x2e70>
   17861:	test   eax,eax
   17863:	js     18720 <fts_children@@Base+0x2bb0>
   17869:	mov    rax,QWORD PTR [rbp-0x2b0]
   17870:	mov    rdx,0xffffffffffffffff
   17877:	add    rax,0x7
   1787b:	cmp    rax,0x6
   1787f:	cmovbe rax,rdx
   17883:	add    rax,QWORD PTR [rbp-0x2a8]
   1788a:	jb     17990 <fts_children@@Base+0x1e20>
   17890:	mov    rdi,rax
   17893:	xor    r8d,r8d
   17896:	add    rdi,0x6
   1789a:	setb   r8b
   1789e:	jb     17990 <fts_children@@Base+0x1e20>
   178a4:	cmp    rdi,0xf9f
   178ab:	jbe    17a10 <fts_children@@Base+0x1ea0>
   178b1:	cmp    rdi,0xffffffffffffffff
   178b5:	mov    QWORD PTR [rbp-0x3c8],r8
   178bc:	je     17990 <fts_children@@Base+0x1e20>
   178c2:	call   3ac0 <malloc@plt>
   178c7:	test   rax,rax
   178ca:	mov    QWORD PTR [rbp-0x3d8],rax
   178d1:	je     17990 <fts_children@@Base+0x1e20>
   178d7:	mov    r8,QWORD PTR [rbp-0x3c8]
   178de:	mov    QWORD PTR [rbp-0x420],rax
   178e5:	xor    r12d,r12d
   178e8:	cmp    QWORD PTR [rbp-0x3e8],0x0
   178f0:	je     178fc <fts_children@@Base+0x1d8c>
   178f2:	mov    rax,QWORD PTR [rbp-0x418]
   178f9:	mov    r12,QWORD PTR [rax]
   178fc:	mov    r13,QWORD PTR [rbp-0x2b8]
   17903:	lea    rax,[rbp-0x3bc]
   1790a:	mov    r15,QWORD PTR [rbp-0x3e8]
   17911:	mov    QWORD PTR [rbp-0x400],0x0
   1791c:	mov    QWORD PTR [rbp-0x3f0],rax
   17923:	mov    rax,rbx
   17926:	mov    rbx,r8
   17929:	mov    rcx,QWORD PTR [r13+0x0]
   1792d:	mov    r8,rax
   17930:	cmp    rcx,r8
   17933:	je     182bd <fts_children@@Base+0x274d>
   17939:	sub    rcx,r8
   1793c:	mov    rax,rbx
   1793f:	add    rax,rcx
   17942:	mov    r14,rax
   17945:	jae    17a40 <fts_children@@Base+0x1ed0>
   1794b:	cmp    r12,0xffffffffffffffff
   1794f:	je     18420 <fts_children@@Base+0x28b0>
   17955:	call   3540 <__errno_location@plt>
   1795a:	mov    QWORD PTR [rbp-0x3c8],rax
   17961:	cmp    r15,QWORD PTR [rbp-0x3e8]
   17968:	je     17973 <fts_children@@Base+0x1e03>
   1796a:	test   r15,r15
   1796d:	jne    18450 <fts_children@@Base+0x28e0>
   17973:	mov    rax,QWORD PTR [rbp-0x420]
   1797a:	test   rax,rax
   1797d:	je     17990 <fts_children@@Base+0x1e20>
   1797f:	mov    rdi,rax
   17982:	call   3e10 <free@plt>
   17987:	jmp    1799c <fts_children@@Base+0x1e2c>
   17989:	nop    DWORD PTR [rax+0x0]
   17990:	call   3540 <__errno_location@plt>
   17995:	mov    QWORD PTR [rbp-0x3c8],rax
   1799c:	mov    rax,QWORD PTR [rbp-0x408]
   179a3:	mov    rdi,QWORD PTR [rbp-0x2b8]
   179aa:	add    rax,0x20
   179ae:	cmp    rdi,rax
   179b1:	je     179b8 <fts_children@@Base+0x1e48>
   179b3:	call   3e10 <free@plt>
   179b8:	mov    rax,QWORD PTR [rbp-0x410]
   179bf:	mov    rdi,QWORD PTR [rbp-0x3a8]
   179c6:	add    rax,0x10
   179ca:	cmp    rdi,rax
   179cd:	je     179d4 <fts_children@@Base+0x1e64>
   179cf:	call   3e10 <free@plt>
   179d4:	mov    rax,QWORD PTR [rbp-0x3c8]
   179db:	xor    r15d,r15d
   179de:	mov    DWORD PTR [rax],0xc
   179e4:	mov    rdi,QWORD PTR [rbp-0x38]
   179e8:	xor    rdi,QWORD PTR fs:0x28
   179f1:	mov    rax,r15
   179f4:	jne    188e7 <fts_children@@Base+0x2d77>
   179fa:	lea    rsp,[rbp-0x28]
   179fe:	pop    rbx
   179ff:	pop    r12
   17a01:	pop    r13
   17a03:	pop    r14
   17a05:	pop    r15
   17a07:	pop    rbp
   17a08:	ret    
   17a09:	nop    DWORD PTR [rax+0x0]
   17a10:	add    rax,0x24
   17a14:	mov    QWORD PTR [rbp-0x420],0x0
   17a1f:	and    rax,0xfffffffffffffff0
   17a23:	sub    rsp,rax
   17a26:	lea    rax,[rsp+0xf]
   17a2b:	and    rax,0xfffffffffffffff0
   17a2f:	mov    QWORD PTR [rbp-0x3d8],rax
   17a36:	jmp    178e5 <fts_children@@Base+0x1d75>
   17a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   17a40:	cmp    r12,rax
   17a43:	jae    17aac <fts_children@@Base+0x1f3c>
   17a45:	test   r12,r12
   17a48:	jne    18360 <fts_children@@Base+0x27f0>
   17a4e:	cmp    rax,0xc
   17a52:	ja     18372 <fts_children@@Base+0x2802>
   17a58:	mov    r12d,0xc
   17a5e:	cmp    r15,QWORD PTR [rbp-0x3e8]
   17a65:	sete   dl
   17a68:	test   r15,r15
   17a6b:	je     18398 <fts_children@@Base+0x2828>
   17a71:	test   dl,dl
   17a73:	jne    18398 <fts_children@@Base+0x2828>
   17a79:	mov    rsi,r12
   17a7c:	mov    rdi,r15
   17a7f:	mov    QWORD PTR [rbp-0x3d0],r8
   17a86:	mov    QWORD PTR [rbp-0x3c8],rcx
   17a8d:	call   3b70 <realloc@plt>
   17a92:	test   rax,rax
   17a95:	mov    rcx,QWORD PTR [rbp-0x3c8]
   17a9c:	mov    r8,QWORD PTR [rbp-0x3d0]
   17aa3:	je     1843b <fts_children@@Base+0x28cb>
   17aa9:	mov    r15,rax
   17aac:	lea    rdi,[r15+rbx*1]
   17ab0:	mov    rdx,rcx
   17ab3:	mov    rsi,r8
   17ab6:	call   3a40 <memcpy@plt>
   17abb:	mov    rax,QWORD PTR [rbp-0x400]
   17ac2:	cmp    QWORD PTR [rbp-0x2c0],rax
   17ac9:	je     1876b <fts_children@@Base+0x2bfb>
   17acf:	movzx  edx,BYTE PTR [r13+0x48]
   17ad4:	mov    rax,QWORD PTR [r13+0x50]
   17ad8:	cmp    dl,0x25
   17adb:	je     18278 <fts_children@@Base+0x2708>
   17ae1:	cmp    rax,0xffffffffffffffff
   17ae5:	je     18716 <fts_children@@Base+0x2ba6>
   17aeb:	mov    r8,QWORD PTR [rbp-0x3a8]
   17af2:	shl    rax,0x5
   17af6:	add    rax,r8
   17af9:	cmp    dl,0x6e
   17afc:	mov    edi,DWORD PTR [rax]
   17afe:	mov    DWORD PTR [rbp-0x3d0],edi
   17b04:	je     182d0 <fts_children@@Base+0x2760>
   17b0a:	mov    eax,DWORD PTR [r13+0x10]
   17b0e:	mov    rdi,QWORD PTR [rbp-0x3d8]
   17b15:	test   al,0x1
   17b17:	mov    BYTE PTR [rdi],0x25
   17b1a:	lea    rbx,[rdi+0x1]
   17b1e:	je     17b2f <fts_children@@Base+0x1fbf>
   17b20:	mov    rdi,QWORD PTR [rbp-0x3d8]
   17b27:	lea    rbx,[rdi+0x2]
   17b2b:	mov    BYTE PTR [rdi+0x1],0x27
   17b2f:	test   al,0x2
   17b31:	je     17b3a <fts_children@@Base+0x1fca>
   17b33:	mov    BYTE PTR [rbx],0x2d
   17b36:	add    rbx,0x1
   17b3a:	test   al,0x4
   17b3c:	je     17b45 <fts_children@@Base+0x1fd5>
   17b3e:	mov    BYTE PTR [rbx],0x2b
   17b41:	add    rbx,0x1
   17b45:	test   al,0x8
   17b47:	je     17b50 <fts_children@@Base+0x1fe0>
   17b49:	mov    BYTE PTR [rbx],0x20
   17b4c:	add    rbx,0x1
   17b50:	test   al,0x10
   17b52:	je     17b5b <fts_children@@Base+0x1feb>
   17b54:	mov    BYTE PTR [rbx],0x23
   17b57:	add    rbx,0x1
   17b5b:	test   al,0x40
   17b5d:	je     17b66 <fts_children@@Base+0x1ff6>
   17b5f:	mov    BYTE PTR [rbx],0x49
   17b62:	add    rbx,0x1
   17b66:	test   al,0x20
   17b68:	je     17b71 <fts_children@@Base+0x2001>
   17b6a:	mov    BYTE PTR [rbx],0x30
   17b6d:	add    rbx,0x1
   17b71:	mov    rsi,QWORD PTR [r13+0x18]
   17b75:	mov    rdx,QWORD PTR [r13+0x20]
   17b79:	cmp    rsi,rdx
   17b7c:	je     17bae <fts_children@@Base+0x203e>
   17b7e:	mov    rcx,rdx
   17b81:	mov    rdi,rbx
   17b84:	mov    QWORD PTR [rbp-0x3e0],r8
   17b8b:	sub    rcx,rsi
   17b8e:	mov    rdx,rcx
   17b91:	mov    QWORD PTR [rbp-0x3c8],rcx
   17b98:	call   3a40 <memcpy@plt>
   17b9d:	mov    rcx,QWORD PTR [rbp-0x3c8]
   17ba4:	mov    r8,QWORD PTR [rbp-0x3e0]
   17bab:	add    rbx,rcx
   17bae:	mov    rsi,QWORD PTR [r13+0x30]
   17bb2:	mov    rdx,QWORD PTR [r13+0x38]
   17bb6:	cmp    rsi,rdx
   17bb9:	je     17beb <fts_children@@Base+0x207b>
   17bbb:	mov    rcx,rdx
   17bbe:	mov    rdi,rbx
   17bc1:	mov    QWORD PTR [rbp-0x3e0],r8
   17bc8:	sub    rcx,rsi
   17bcb:	mov    rdx,rcx
   17bce:	mov    QWORD PTR [rbp-0x3c8],rcx
   17bd5:	call   3a40 <memcpy@plt>
   17bda:	mov    rcx,QWORD PTR [rbp-0x3c8]
   17be1:	mov    r8,QWORD PTR [rbp-0x3e0]
   17be8:	add    rbx,rcx
   17beb:	mov    edi,DWORD PTR [rbp-0x3d0]
   17bf1:	cmp    edi,0x10
   17bf4:	ja     17c23 <fts_children@@Base+0x20b3>
   17bf6:	mov    eax,0x1
   17bfb:	mov    ecx,edi
   17bfd:	shl    rax,cl
   17c00:	test   eax,0x14180
   17c05:	jne    17c1c <fts_children@@Base+0x20ac>
   17c07:	test   ah,0x10
   17c0a:	jne    18550 <fts_children@@Base+0x29e0>
   17c10:	test   ah,0x6
   17c13:	je     17c23 <fts_children@@Base+0x20b3>
   17c15:	mov    BYTE PTR [rbx],0x6c
   17c18:	add    rbx,0x1
   17c1c:	mov    BYTE PTR [rbx],0x6c
   17c1f:	add    rbx,0x1
   17c23:	movzx  eax,BYTE PTR [r13+0x48]
   17c28:	mov    BYTE PTR [rbx+0x1],0x0
   17c2c:	mov    BYTE PTR [rbx],al
   17c2e:	mov    rax,QWORD PTR [r13+0x28]
   17c32:	cmp    rax,0xffffffffffffffff
   17c36:	je     18350 <fts_children@@Base+0x27e0>
   17c3c:	shl    rax,0x5
   17c40:	add    rax,r8
   17c43:	cmp    DWORD PTR [rax],0x5
   17c46:	jne    18716 <fts_children@@Base+0x2ba6>
   17c4c:	mov    eax,DWORD PTR [rax+0x10]
   17c4f:	mov    DWORD PTR [rbp-0x3e0],0x1
   17c59:	mov    DWORD PTR [rbp-0x3b8],eax
   17c5f:	mov    rax,QWORD PTR [r13+0x40]
   17c63:	cmp    rax,0xffffffffffffffff
   17c67:	je     17c94 <fts_children@@Base+0x2124>
   17c69:	shl    rax,0x5
   17c6d:	add    r8,rax
   17c70:	cmp    DWORD PTR [r8],0x5
   17c74:	jne    18716 <fts_children@@Base+0x2ba6>
   17c7a:	mov    eax,DWORD PTR [rbp-0x3e0]
   17c80:	mov    edx,DWORD PTR [r8+0x10]
   17c84:	mov    DWORD PTR [rbp+rax*4-0x3b8],edx
   17c8b:	lea    eax,[rax+0x1]
   17c8e:	mov    DWORD PTR [rbp-0x3e0],eax
   17c94:	mov    rax,r14
   17c97:	xor    edx,edx
   17c99:	add    rax,0x2
   17c9d:	jb     188ec <fts_children@@Base+0x2d7c>
   17ca3:	cmp    r12,rax
   17ca6:	jae    17cf3 <fts_children@@Base+0x2183>
   17ca8:	test   r12,r12
   17cab:	jne    184b8 <fts_children@@Base+0x2948>
   17cb1:	cmp    rax,0xc
   17cb5:	ja     184d0 <fts_children@@Base+0x2960>
   17cbb:	mov    r12d,0xc
   17cc1:	cmp    r15,QWORD PTR [rbp-0x3e8]
   17cc8:	sete   dl
   17ccb:	test   r15,r15
   17cce:	je     18500 <fts_children@@Base+0x2990>
   17cd4:	test   dl,dl
   17cd6:	jne    18500 <fts_children@@Base+0x2990>
   17cdc:	mov    rsi,r12
   17cdf:	mov    rdi,r15
   17ce2:	call   3b70 <realloc@plt>
   17ce7:	test   rax,rax
   17cea:	je     17955 <fts_children@@Base+0x1de5>
   17cf0:	mov    r15,rax
   17cf3:	mov    BYTE PTR [r15+r14*1],0x0
   17cf8:	call   3540 <__errno_location@plt>
   17cfd:	mov    QWORD PTR [rbp-0x3c8],rax
   17d04:	mov    eax,DWORD PTR [rax]
   17d06:	mov    QWORD PTR [rbp-0x3f8],rbx
   17d0d:	mov    DWORD PTR [rbp-0x424],eax
   17d13:	nop    DWORD PTR [rax+rax*1+0x0]
   17d18:	mov    rax,QWORD PTR [rbp-0x3c8]
   17d1f:	mov    rbx,r12
   17d22:	mov    r10d,0x7fffffff
   17d28:	sub    rbx,r14
   17d2b:	mov    DWORD PTR [rbp-0x3bc],0xffffffff
   17d35:	cmp    rbx,0x7fffffff
   17d3c:	mov    DWORD PTR [rax],0x0
   17d42:	mov    eax,DWORD PTR [rbp-0x3d0]
   17d48:	cmovbe r10,rbx
   17d4c:	cmp    eax,0x11
   17d4f:	ja     18716 <fts_children@@Base+0x2ba6>
   17d55:	lea    rsi,[rip+0x508c]        # 1cde8 <version_etc_copyright@@Base+0x168>
   17d5c:	movsxd rax,DWORD PTR [rsi+rax*4]
   17d60:	add    rax,rsi
   17d63:	jmp    rax
   17d65:	nop    DWORD PTR [rax]
   17d68:	mov    rax,QWORD PTR [r13+0x50]
   17d6c:	lea    rdi,[r15+r14*1]
   17d70:	shl    rax,0x5
   17d74:	add    rax,QWORD PTR [rbp-0x3a8]
   17d7b:	mov    r9,QWORD PTR [rax+0x10]
   17d7f:	mov    eax,DWORD PTR [rbp-0x3e0]
   17d85:	cmp    eax,0x1
   17d88:	je     18258 <fts_children@@Base+0x26e8>
   17d8e:	cmp    eax,0x2
   17d91:	je     18240 <fts_children@@Base+0x26d0>
   17d97:	sub    rsp,0x8
   17d9b:	push   QWORD PTR [rbp-0x3f0]
   17da1:	mov    r8,QWORD PTR [rbp-0x3d8]
   17da8:	mov    rsi,r10
   17dab:	mov    rcx,0xffffffffffffffff
   17db2:	mov    edx,0x1
   17db7:	xor    eax,eax
   17db9:	mov    QWORD PTR [rbp-0x430],r10
   17dc0:	call   34f0 <__snprintf_chk@plt>
   17dc5:	pop    rsi
   17dc6:	pop    rdi
   17dc7:	mov    r10,QWORD PTR [rbp-0x430]
   17dce:	mov    ecx,DWORD PTR [rbp-0x3bc]
   17dd4:	test   ecx,ecx
   17dd6:	js     17f14 <fts_children@@Base+0x23a4>
   17ddc:	movsxd rdx,ecx
   17ddf:	cmp    rdx,r10
   17de2:	jae    17df2 <fts_children@@Base+0x2282>
   17de4:	add    rdx,r15
   17de7:	cmp    BYTE PTR [rdx+r14*1],0x0
   17dec:	jne    18716 <fts_children@@Base+0x2ba6>
   17df2:	cmp    ecx,eax
   17df4:	jge    17dfe <fts_children@@Base+0x228e>
   17df6:	mov    DWORD PTR [rbp-0x3bc],eax
   17dfc:	mov    ecx,eax
   17dfe:	lea    eax,[rcx+0x1]
   17e01:	cmp    rax,r10
   17e04:	jb     18620 <fts_children@@Base+0x2ab0>
   17e0a:	cmp    rbx,0x7ffffffe
   17e11:	ja     18640 <fts_children@@Base+0x2ad0>
   17e17:	lea    rsi,[r12+r12*1]
   17e1b:	lea    edx,[rcx+0x2]
   17e1e:	test   r12,r12
   17e21:	mov    rax,0xffffffffffffffff
   17e28:	cmovns rax,rsi
   17e2c:	add    rdx,r14
   17e2f:	jb     188d8 <fts_children@@Base+0x2d68>
   17e35:	cmp    rax,rdx
   17e38:	cmovb  rax,rdx
   17e3c:	cmp    r12,rax
   17e3f:	jae    17d18 <fts_children@@Base+0x21a8>
   17e45:	test   r12,r12
   17e48:	js     17961 <fts_children@@Base+0x1df1>
   17e4e:	cmp    rsi,rax
   17e51:	mov    r12,rsi
   17e54:	jae    17e63 <fts_children@@Base+0x22f3>
   17e56:	cmp    rax,0xffffffffffffffff
   17e5a:	je     17961 <fts_children@@Base+0x1df1>
   17e60:	mov    r12,rax
   17e63:	cmp    r15,QWORD PTR [rbp-0x3e8]
   17e6a:	sete   bl
   17e6d:	test   r15,r15
   17e70:	je     18200 <fts_children@@Base+0x2690>
   17e76:	test   bl,bl
   17e78:	jne    18200 <fts_children@@Base+0x2690>
   17e7e:	mov    rsi,r12
   17e81:	mov    rdi,r15
   17e84:	call   3b70 <realloc@plt>
   17e89:	test   rax,rax
   17e8c:	je     17961 <fts_children@@Base+0x1df1>
   17e92:	mov    r15,rax
   17e95:	jmp    17d18 <fts_children@@Base+0x21a8>
   17e9a:	nop    WORD PTR [rax+rax*1+0x0]
   17ea0:	mov    rax,QWORD PTR [r13+0x50]
   17ea4:	lea    rdi,[r15+r14*1]
   17ea8:	shl    rax,0x5
   17eac:	add    rax,QWORD PTR [rbp-0x3a8]
   17eb3:	mov    r9d,DWORD PTR [rax+0x10]
   17eb7:	mov    eax,DWORD PTR [rbp-0x3e0]
   17ebd:	cmp    eax,0x1
   17ec0:	je     18100 <fts_children@@Base+0x2590>
   17ec6:	cmp    eax,0x2
   17ec9:	je     18148 <fts_children@@Base+0x25d8>
   17ecf:	sub    rsp,0x8
   17ed3:	push   QWORD PTR [rbp-0x3f0]
   17ed9:	mov    r8,QWORD PTR [rbp-0x3d8]
   17ee0:	mov    rcx,0xffffffffffffffff
   17ee7:	mov    edx,0x1
   17eec:	mov    rsi,r10
   17eef:	xor    eax,eax
   17ef1:	mov    QWORD PTR [rbp-0x430],r10
   17ef8:	call   34f0 <__snprintf_chk@plt>
   17efd:	pop    rdx
   17efe:	pop    rcx
   17eff:	mov    ecx,DWORD PTR [rbp-0x3bc]
   17f05:	mov    r10,QWORD PTR [rbp-0x430]
   17f0c:	test   ecx,ecx
   17f0e:	jns    17ddc <fts_children@@Base+0x226c>
   17f14:	mov    rdi,QWORD PTR [rbp-0x3f8]
   17f1b:	cmp    BYTE PTR [rdi+0x1],0x0
   17f1f:	jne    18268 <fts_children@@Base+0x26f8>
   17f25:	test   eax,eax
   17f27:	jns    17df6 <fts_children@@Base+0x2286>
   17f2d:	mov    rax,QWORD PTR [rbp-0x3c8]
   17f34:	mov    ebx,DWORD PTR [rax]
   17f36:	test   ebx,ebx
   17f38:	jne    17f58 <fts_children@@Base+0x23e8>
   17f3a:	movzx  eax,BYTE PTR [r13+0x48]
   17f3f:	mov    ebx,0x16
   17f44:	and    eax,0xffffffef
   17f47:	cmp    al,0x63
   17f49:	mov    eax,0x54
   17f4e:	cmove  ebx,eax
   17f51:	nop    DWORD PTR [rax+0x0]
   17f58:	cmp    r15,QWORD PTR [rbp-0x3e8]
   17f5f:	je     17f6a <fts_children@@Base+0x23fa>
   17f61:	test   r15,r15
   17f64:	jne    186fc <fts_children@@Base+0x2b8c>
   17f6a:	mov    rax,QWORD PTR [rbp-0x420]
   17f71:	test   rax,rax
   17f74:	je     17f7e <fts_children@@Base+0x240e>
   17f76:	mov    rdi,rax
   17f79:	call   3e10 <free@plt>
   17f7e:	mov    rax,QWORD PTR [rbp-0x408]
   17f85:	mov    rdi,QWORD PTR [rbp-0x2b8]
   17f8c:	add    rax,0x20
   17f90:	cmp    rdi,rax
   17f93:	je     17f9a <fts_children@@Base+0x242a>
   17f95:	call   3e10 <free@plt>
   17f9a:	mov    rax,QWORD PTR [rbp-0x410]
   17fa1:	mov    rdi,QWORD PTR [rbp-0x3a8]
   17fa8:	add    rax,0x10
   17fac:	cmp    rdi,rax
   17faf:	je     17fb6 <fts_children@@Base+0x2446>
   17fb1:	call   3e10 <free@plt>
   17fb6:	mov    rax,QWORD PTR [rbp-0x3c8]
   17fbd:	xor    r15d,r15d
   17fc0:	mov    DWORD PTR [rax],ebx
   17fc2:	jmp    179e4 <fts_children@@Base+0x1e74>
   17fc7:	nop    WORD PTR [rax+rax*1+0x0]
   17fd0:	mov    rax,QWORD PTR [r13+0x50]
   17fd4:	lea    rdi,[r15+r14*1]
   17fd8:	shl    rax,0x5
   17fdc:	add    rax,QWORD PTR [rbp-0x3a8]
   17fe3:	fld    TBYTE PTR [rax+0x10]
   17fe6:	mov    eax,DWORD PTR [rbp-0x3e0]
   17fec:	cmp    eax,0x1
   17fef:	je     18600 <fts_children@@Base+0x2a90>
   17ff5:	cmp    eax,0x2
   17ff8:	jne    184a0 <fts_children@@Base+0x2930>
   17ffe:	mov    eax,DWORD PTR [rbp-0x3b4]
   18004:	sub    rsp,0x8
   18008:	push   QWORD PTR [rbp-0x3f0]
   1800e:	mov    r9d,DWORD PTR [rbp-0x3b8]
   18015:	mov    r8,QWORD PTR [rbp-0x3d8]
   1801c:	mov    rsi,r10
   1801f:	sub    rsp,0x18
   18023:	mov    rcx,0xffffffffffffffff
   1802a:	mov    edx,0x1
   1802f:	fstp   TBYTE PTR [rsp+0x8]
   18033:	push   rax
   18034:	xor    eax,eax
   18036:	mov    QWORD PTR [rbp-0x430],r10
   1803d:	call   34f0 <__snprintf_chk@plt>
   18042:	add    rsp,0x30
   18046:	mov    r10,QWORD PTR [rbp-0x430]
   1804d:	jmp    17dce <fts_children@@Base+0x225e>
   18052:	nop    WORD PTR [rax+rax*1+0x0]
   18058:	mov    rax,QWORD PTR [r13+0x50]
   1805c:	lea    rdi,[r15+r14*1]
   18060:	shl    rax,0x5
   18064:	add    rax,QWORD PTR [rbp-0x3a8]
   1806b:	movsd  xmm0,QWORD PTR [rax+0x10]
   18070:	mov    eax,DWORD PTR [rbp-0x3e0]
   18076:	cmp    eax,0x1
   18079:	je     185f0 <fts_children@@Base+0x2a80>
   1807f:	cmp    eax,0x2
   18082:	jne    18460 <fts_children@@Base+0x28f0>
   18088:	mov    eax,DWORD PTR [rbp-0x3b4]
   1808e:	push   QWORD PTR [rbp-0x3f0]
   18094:	push   rax
   18095:	mov    r9d,DWORD PTR [rbp-0x3b8]
   1809c:	mov    r8,QWORD PTR [rbp-0x3d8]
   180a3:	mov    rsi,r10
   180a6:	mov    rcx,0xffffffffffffffff
   180ad:	mov    edx,0x1
   180b2:	mov    eax,0x1
   180b7:	mov    QWORD PTR [rbp-0x430],r10
   180be:	call   34f0 <__snprintf_chk@plt>
   180c3:	pop    r8
   180c5:	mov    r10,QWORD PTR [rbp-0x430]
   180cc:	pop    r9
   180ce:	jmp    17dce <fts_children@@Base+0x225e>
   180d3:	nop    DWORD PTR [rax+rax*1+0x0]
   180d8:	mov    rax,QWORD PTR [r13+0x50]
   180dc:	lea    rdi,[r15+r14*1]
   180e0:	shl    rax,0x5
   180e4:	add    rax,QWORD PTR [rbp-0x3a8]
   180eb:	movzx  r9d,WORD PTR [rax+0x10]
   180f0:	mov    eax,DWORD PTR [rbp-0x3e0]
   180f6:	cmp    eax,0x1
   180f9:	jne    17ec6 <fts_children@@Base+0x2356>
   180ff:	nop
   18100:	push   QWORD PTR [rbp-0x3f0]
   18106:	push   r9
   18108:	mov    r9d,DWORD PTR [rbp-0x3b8]
   1810f:	jmp    17ed9 <fts_children@@Base+0x2369>
   18114:	nop    DWORD PTR [rax+0x0]
   18118:	mov    rax,QWORD PTR [r13+0x50]
   1811c:	lea    rdi,[r15+r14*1]
   18120:	shl    rax,0x5
   18124:	add    rax,QWORD PTR [rbp-0x3a8]
   1812b:	movsx  r9d,WORD PTR [rax+0x10]
   18130:	mov    eax,DWORD PTR [rbp-0x3e0]
   18136:	cmp    eax,0x1
   18139:	je     18100 <fts_children@@Base+0x2590>
   1813b:	cmp    eax,0x2
   1813e:	jne    17ecf <fts_children@@Base+0x235f>
   18144:	nop    DWORD PTR [rax+0x0]
   18148:	sub    rsp,0x8
   1814c:	push   QWORD PTR [rbp-0x3f0]
   18152:	push   r9
   18154:	mov    eax,DWORD PTR [rbp-0x3b4]
   1815a:	push   rax
   1815b:	mov    r9d,DWORD PTR [rbp-0x3b8]
   18162:	mov    r8,QWORD PTR [rbp-0x3d8]
   18169:	mov    rsi,r10
   1816c:	mov    rcx,0xffffffffffffffff
   18173:	mov    edx,0x1
   18178:	xor    eax,eax
   1817a:	mov    QWORD PTR [rbp-0x430],r10
   18181:	call   34f0 <__snprintf_chk@plt>
   18186:	add    rsp,0x20
   1818a:	mov    r10,QWORD PTR [rbp-0x430]
   18191:	jmp    17dce <fts_children@@Base+0x225e>
   18196:	nop    WORD PTR cs:[rax+rax*1+0x0]
   181a0:	mov    rax,QWORD PTR [r13+0x50]
   181a4:	lea    rdi,[r15+r14*1]
   181a8:	shl    rax,0x5
   181ac:	add    rax,QWORD PTR [rbp-0x3a8]
   181b3:	movzx  r9d,BYTE PTR [rax+0x10]
   181b8:	mov    eax,DWORD PTR [rbp-0x3e0]
   181be:	cmp    eax,0x1
   181c1:	jne    17ec6 <fts_children@@Base+0x2356>
   181c7:	jmp    18100 <fts_children@@Base+0x2590>
   181cc:	nop    DWORD PTR [rax+0x0]
   181d0:	mov    rax,QWORD PTR [r13+0x50]
   181d4:	lea    rdi,[r15+r14*1]
   181d8:	shl    rax,0x5
   181dc:	add    rax,QWORD PTR [rbp-0x3a8]
   181e3:	movsx  r9d,BYTE PTR [rax+0x10]
   181e8:	mov    eax,DWORD PTR [rbp-0x3e0]
   181ee:	cmp    eax,0x1
   181f1:	jne    17ec6 <fts_children@@Base+0x2356>
   181f7:	jmp    18100 <fts_children@@Base+0x2590>
   181fc:	nop    DWORD PTR [rax+0x0]
   18200:	mov    rdi,r12
   18203:	call   3ac0 <malloc@plt>
   18208:	test   rax,rax
   1820b:	mov    rcx,rax
   1820e:	je     17961 <fts_children@@Base+0x1df1>
   18214:	test   r14,r14
   18217:	je     182c8 <fts_children@@Base+0x2758>
   1821d:	test   bl,bl
   1821f:	je     182c8 <fts_children@@Base+0x2758>
   18225:	mov    rsi,r15
   18228:	mov    rdx,r14
   1822b:	mov    rdi,rax
   1822e:	call   3a40 <memcpy@plt>
   18233:	mov    r15,rax
   18236:	jmp    17d18 <fts_children@@Base+0x21a8>
   1823b:	nop    DWORD PTR [rax+rax*1+0x0]
   18240:	sub    rsp,0x8
   18244:	push   QWORD PTR [rbp-0x3f0]
   1824a:	push   r9
   1824c:	jmp    18154 <fts_children@@Base+0x25e4>
   18251:	nop    DWORD PTR [rax+0x0]
   18258:	push   QWORD PTR [rbp-0x3f0]
   1825e:	push   r9
   18260:	jmp    18108 <fts_children@@Base+0x2598>
   18265:	nop    DWORD PTR [rax]
   18268:	mov    BYTE PTR [rdi+0x1],0x0
   1826c:	jmp    17d18 <fts_children@@Base+0x21a8>
   18271:	nop    DWORD PTR [rax+0x0]
   18278:	cmp    rax,0xffffffffffffffff
   1827c:	jne    18716 <fts_children@@Base+0x2ba6>
   18282:	mov    rax,r14
   18285:	add    rax,0x1
   18289:	mov    rbx,rax
   1828c:	jae    182f8 <fts_children@@Base+0x2788>
   1828e:	cmp    r12,0xffffffffffffffff
   18292:	jne    17955 <fts_children@@Base+0x1de5>
   18298:	mov    rbx,r12
   1829b:	mov    BYTE PTR [r15+r14*1],0x25
   182a0:	mov    r8,QWORD PTR [r13+0x8]
   182a4:	add    r13,0x58
   182a8:	mov    rcx,QWORD PTR [r13+0x0]
   182ac:	add    QWORD PTR [rbp-0x400],0x1
   182b4:	cmp    rcx,r8
   182b7:	jne    17939 <fts_children@@Base+0x1dc9>
   182bd:	mov    r14,rbx
   182c0:	jmp    17abb <fts_children@@Base+0x1f4b>
   182c5:	nop    DWORD PTR [rax]
   182c8:	mov    r15,rcx
   182cb:	jmp    17d18 <fts_children@@Base+0x21a8>
   182d0:	mov    edx,edi
   182d2:	sub    edx,0x12
   182d5:	cmp    edx,0x4
   182d8:	ja     18716 <fts_children@@Base+0x2ba6>
   182de:	lea    rdi,[rip+0x4b4b]        # 1ce30 <version_etc_copyright@@Base+0x1b0>
   182e5:	mov    rax,QWORD PTR [rax+0x10]
   182e9:	movsxd rdx,DWORD PTR [rdi+rdx*4]
   182ed:	add    rdx,rdi
   182f0:	jmp    rdx
   182f2:	nop    WORD PTR [rax+rax*1+0x0]
   182f8:	cmp    r12,rax
   182fb:	jae    1829b <fts_children@@Base+0x272b>
   182fd:	test   r12,r12
   18300:	jne    186d0 <fts_children@@Base+0x2b60>
   18306:	cmp    rax,0xc
   1830a:	ja     186e2 <fts_children@@Base+0x2b72>
   18310:	mov    r12d,0xc
   18316:	cmp    r15,QWORD PTR [rbp-0x3e8]
   1831d:	sete   dl
   18320:	test   r15,r15
   18323:	je     18590 <fts_children@@Base+0x2a20>
   18329:	test   dl,dl
   1832b:	jne    18590 <fts_children@@Base+0x2a20>
   18331:	mov    rsi,r12
   18334:	mov    rdi,r15
   18337:	call   3b70 <realloc@plt>
   1833c:	test   rax,rax
   1833f:	je     1843b <fts_children@@Base+0x28cb>
   18345:	mov    r15,rax
   18348:	jmp    1829b <fts_children@@Base+0x272b>
   1834d:	nop    DWORD PTR [rax]
   18350:	mov    DWORD PTR [rbp-0x3e0],0x0
   1835a:	jmp    17c5f <fts_children@@Base+0x20ef>
   1835f:	nop
   18360:	js     17955 <fts_children@@Base+0x1de5>
   18366:	add    r12,r12
   18369:	cmp    r12,rax
   1836c:	jae    17a5e <fts_children@@Base+0x1eee>
   18372:	cmp    rax,0xffffffffffffffff
   18376:	je     17955 <fts_children@@Base+0x1de5>
   1837c:	cmp    r15,QWORD PTR [rbp-0x3e8]
   18383:	mov    r12,rax
   18386:	sete   dl
   18389:	test   r15,r15
   1838c:	jne    17a71 <fts_children@@Base+0x1f01>
   18392:	nop    WORD PTR [rax+rax*1+0x0]
   18398:	mov    rdi,r12
   1839b:	mov    QWORD PTR [rbp-0x3e0],r8
   183a2:	mov    BYTE PTR [rbp-0x3d0],dl
   183a8:	mov    QWORD PTR [rbp-0x3c8],rcx
   183af:	call   3ac0 <malloc@plt>
   183b4:	test   rax,rax
   183b7:	mov    r9,rax
   183ba:	mov    rcx,QWORD PTR [rbp-0x3c8]
   183c1:	movzx  edx,BYTE PTR [rbp-0x3d0]
   183c8:	mov    r8,QWORD PTR [rbp-0x3e0]
   183cf:	je     17955 <fts_children@@Base+0x1de5>
   183d5:	test   rbx,rbx
   183d8:	je     185e0 <fts_children@@Base+0x2a70>
   183de:	test   dl,dl
   183e0:	je     185e0 <fts_children@@Base+0x2a70>
   183e6:	mov    rsi,r15
   183e9:	mov    rdx,rbx
   183ec:	mov    rdi,rax
   183ef:	mov    QWORD PTR [rbp-0x3d0],r8
   183f6:	mov    QWORD PTR [rbp-0x3c8],rcx
   183fd:	call   3a40 <memcpy@plt>
   18402:	mov    rcx,QWORD PTR [rbp-0x3c8]
   18409:	mov    r15,rax
   1840c:	mov    r8,QWORD PTR [rbp-0x3d0]
   18413:	jmp    17aac <fts_children@@Base+0x1f3c>
   18418:	nop    DWORD PTR [rax+rax*1+0x0]
   18420:	mov    r14,r12
   18423:	jmp    17aac <fts_children@@Base+0x1f3c>
   18428:	nop    DWORD PTR [rax+rax*1+0x0]
   18430:	mov    QWORD PTR [rax],r14
   18433:	mov    rbx,r14
   18436:	jmp    182a0 <fts_children@@Base+0x2730>
   1843b:	call   3540 <__errno_location@plt>
   18440:	mov    QWORD PTR [rbp-0x3c8],rax
   18447:	nop    WORD PTR [rax+rax*1+0x0]
   18450:	mov    rdi,r15
   18453:	call   3e10 <free@plt>
   18458:	jmp    17973 <fts_children@@Base+0x1e03>
   1845d:	nop    DWORD PTR [rax]
   18460:	mov    r9,QWORD PTR [rbp-0x3f0]
   18467:	mov    r8,QWORD PTR [rbp-0x3d8]
   1846e:	mov    rsi,r10
   18471:	mov    rcx,0xffffffffffffffff
   18478:	mov    edx,0x1
   1847d:	mov    eax,0x1
   18482:	mov    QWORD PTR [rbp-0x430],r10
   18489:	call   34f0 <__snprintf_chk@plt>
   1848e:	mov    r10,QWORD PTR [rbp-0x430]
   18495:	jmp    17dce <fts_children@@Base+0x225e>
   1849a:	nop    WORD PTR [rax+rax*1+0x0]
   184a0:	sub    rsp,0x10
   184a4:	mov    r9,QWORD PTR [rbp-0x3f0]
   184ab:	fstp   TBYTE PTR [rsp]
   184ae:	jmp    17da1 <fts_children@@Base+0x2231>
   184b3:	nop    DWORD PTR [rax+rax*1+0x0]
   184b8:	js     17955 <fts_children@@Base+0x1de5>
   184be:	add    r12,r12
   184c1:	cmp    r12,rax
   184c4:	jae    17cc1 <fts_children@@Base+0x2151>
   184ca:	nop    WORD PTR [rax+rax*1+0x0]
   184d0:	test   rdx,rdx
   184d3:	jne    17955 <fts_children@@Base+0x1de5>
   184d9:	cmp    rax,0xffffffffffffffff
   184dd:	je     17955 <fts_children@@Base+0x1de5>
   184e3:	cmp    r15,QWORD PTR [rbp-0x3e8]
   184ea:	mov    r12,rax
   184ed:	sete   dl
   184f0:	test   r15,r15
   184f3:	jne    17cd4 <fts_children@@Base+0x2164>
   184f9:	nop    DWORD PTR [rax+0x0]
   18500:	mov    rdi,r12
   18503:	mov    BYTE PTR [rbp-0x3c8],dl
   18509:	call   3ac0 <malloc@plt>
   1850e:	test   rax,rax
   18511:	mov    rcx,rax
   18514:	movzx  edx,BYTE PTR [rbp-0x3c8]
   1851b:	je     17955 <fts_children@@Base+0x1de5>
   18521:	test   r14,r14
   18524:	je     186c0 <fts_children@@Base+0x2b50>
   1852a:	test   dl,dl
   1852c:	je     186c0 <fts_children@@Base+0x2b50>
   18532:	mov    rsi,r15
   18535:	mov    rdx,r14
   18538:	mov    rdi,rax
   1853b:	call   3a40 <memcpy@plt>
   18540:	mov    r15,rax
   18543:	jmp    17cf3 <fts_children@@Base+0x2183>
   18548:	nop    DWORD PTR [rax+rax*1+0x0]
   18550:	mov    BYTE PTR [rbx],0x4c
   18553:	add    rbx,0x1
   18557:	jmp    17c23 <fts_children@@Base+0x20b3>
   1855c:	nop    DWORD PTR [rax+0x0]
   18560:	mov    BYTE PTR [rax],r14b
   18563:	mov    rbx,r14
   18566:	jmp    182a0 <fts_children@@Base+0x2730>
   1856b:	nop    DWORD PTR [rax+rax*1+0x0]
   18570:	mov    DWORD PTR [rax],r14d
   18573:	mov    rbx,r14
   18576:	jmp    182a0 <fts_children@@Base+0x2730>
   1857b:	nop    DWORD PTR [rax+rax*1+0x0]
   18580:	mov    WORD PTR [rax],r14w
   18584:	mov    rbx,r14
   18587:	jmp    182a0 <fts_children@@Base+0x2730>
   1858c:	nop    DWORD PTR [rax+0x0]
   18590:	mov    rdi,r12
   18593:	mov    BYTE PTR [rbp-0x3c8],dl
   18599:	call   3ac0 <malloc@plt>
   1859e:	test   rax,rax
   185a1:	mov    rcx,rax
   185a4:	movzx  edx,BYTE PTR [rbp-0x3c8]
   185ab:	je     17955 <fts_children@@Base+0x1de5>
   185b1:	test   r14,r14
   185b4:	je     186f4 <fts_children@@Base+0x2b84>
   185ba:	test   dl,dl
   185bc:	je     186f4 <fts_children@@Base+0x2b84>
   185c2:	mov    rsi,r15
   185c5:	mov    rdx,r14
   185c8:	mov    rdi,rax
   185cb:	call   3a40 <memcpy@plt>
   185d0:	mov    r15,rax
   185d3:	jmp    1829b <fts_children@@Base+0x272b>
   185d8:	nop    DWORD PTR [rax+rax*1+0x0]
   185e0:	mov    r15,r9
   185e3:	jmp    17aac <fts_children@@Base+0x1f3c>
   185e8:	nop    DWORD PTR [rax+rax*1+0x0]
   185f0:	sub    rsp,0x8
   185f4:	push   QWORD PTR [rbp-0x3f0]
   185fa:	jmp    18095 <fts_children@@Base+0x2525>
   185ff:	nop
   18600:	sub    rsp,0x8
   18604:	push   QWORD PTR [rbp-0x3f0]
   1860a:	sub    rsp,0x10
   1860e:	fstp   TBYTE PTR [rsp]
   18611:	jmp    1815b <fts_children@@Base+0x25eb>
   18616:	nop    WORD PTR cs:[rax+rax*1+0x0]
   18620:	mov    rax,QWORD PTR [rbp-0x3c8]
   18627:	mov    edi,DWORD PTR [rbp-0x424]
   1862d:	movsxd rbx,ecx
   18630:	add    rbx,r14
   18633:	mov    DWORD PTR [rax],edi
   18635:	jmp    182a0 <fts_children@@Base+0x2730>
   1863a:	nop    WORD PTR [rax+rax*1+0x0]
   18640:	cmp    r15,QWORD PTR [rbp-0x3e8]
   18647:	je     18652 <fts_children@@Base+0x2ae2>
   18649:	test   r15,r15
   1864c:	jne    18709 <fts_children@@Base+0x2b99>
   18652:	mov    rax,QWORD PTR [rbp-0x420]
   18659:	test   rax,rax
   1865c:	je     18666 <fts_children@@Base+0x2af6>
   1865e:	mov    rdi,rax
   18661:	call   3e10 <free@plt>
   18666:	mov    rax,QWORD PTR [rbp-0x408]
   1866d:	mov    rdi,QWORD PTR [rbp-0x2b8]
   18674:	add    rax,0x20
   18678:	cmp    rdi,rax
   1867b:	je     18682 <fts_children@@Base+0x2b12>
   1867d:	call   3e10 <free@plt>
   18682:	mov    rax,QWORD PTR [rbp-0x410]
   18689:	mov    rdi,QWORD PTR [rbp-0x3a8]
   18690:	add    rax,0x10
   18694:	cmp    rdi,rax
   18697:	je     1869e <fts_children@@Base+0x2b2e>
   18699:	call   3e10 <free@plt>
   1869e:	mov    rax,QWORD PTR [rbp-0x3c8]
   186a5:	xor    r15d,r15d
   186a8:	mov    DWORD PTR [rax],0x4b
   186ae:	jmp    179e4 <fts_children@@Base+0x1e74>
   186b3:	nop    DWORD PTR [rax+rax*1+0x0]
   186b8:	xor    r15d,r15d
   186bb:	jmp    179e4 <fts_children@@Base+0x1e74>
   186c0:	mov    r15,rcx
   186c3:	jmp    17cf3 <fts_children@@Base+0x2183>
   186c8:	nop    DWORD PTR [rax+rax*1+0x0]
   186d0:	js     17955 <fts_children@@Base+0x1de5>
   186d6:	add    r12,r12
   186d9:	cmp    r12,rax
   186dc:	jae    18316 <fts_children@@Base+0x27a6>
   186e2:	cmp    rax,0xffffffffffffffff
   186e6:	je     17955 <fts_children@@Base+0x1de5>
   186ec:	mov    r12,rax
   186ef:	jmp    18316 <fts_children@@Base+0x27a6>
   186f4:	mov    r15,rcx
   186f7:	jmp    1829b <fts_children@@Base+0x272b>
   186fc:	mov    rdi,r15
   186ff:	call   3e10 <free@plt>
   18704:	jmp    17f6a <fts_children@@Base+0x23fa>
   18709:	mov    rdi,r15
   1870c:	call   3e10 <free@plt>
   18711:	jmp    18652 <fts_children@@Base+0x2ae2>
   18716:	call   3530 <abort@plt>
   1871b:	nop    DWORD PTR [rax+rax*1+0x0]
   18720:	mov    rax,QWORD PTR [rbp-0x408]
   18727:	mov    rdi,QWORD PTR [rbp-0x2b8]
   1872e:	add    rax,0x20
   18732:	cmp    rdi,rax
   18735:	je     1873c <fts_children@@Base+0x2bcc>
   18737:	call   3e10 <free@plt>
   1873c:	mov    rax,QWORD PTR [rbp-0x410]
   18743:	mov    rdi,QWORD PTR [rbp-0x3a8]
   1874a:	add    rax,0x10
   1874e:	cmp    rdi,rax
   18751:	je     18758 <fts_children@@Base+0x2be8>
   18753:	call   3e10 <free@plt>
   18758:	call   3540 <__errno_location@plt>
   1875d:	xor    r15d,r15d
   18760:	mov    DWORD PTR [rax],0x16
   18766:	jmp    179e4 <fts_children@@Base+0x1e74>
   1876b:	mov    rbx,r14
   1876e:	xor    eax,eax
   18770:	add    rbx,0x1
   18774:	jb     18880 <fts_children@@Base+0x2d10>
   1877a:	cmp    r12,rbx
   1877d:	jae    187cc <fts_children@@Base+0x2c5c>
   1877f:	test   r12,r12
   18782:	jne    188b9 <fts_children@@Base+0x2d49>
   18788:	cmp    rbx,0xc
   1878c:	ja     1889e <fts_children@@Base+0x2d2e>
   18792:	mov    r12d,0xc
   18798:	cmp    r15,QWORD PTR [rbp-0x3e8]
   1879f:	sete   r13b
   187a3:	test   r15,r15
   187a6:	je     1884c <fts_children@@Base+0x2cdc>
   187ac:	test   r13b,r13b
   187af:	jne    1884c <fts_children@@Base+0x2cdc>
   187b5:	mov    rsi,r12
   187b8:	mov    rdi,r15
   187bb:	call   3b70 <realloc@plt>
   187c0:	test   rax,rax
   187c3:	je     17955 <fts_children@@Base+0x1de5>
   187c9:	mov    r15,rax
   187cc:	cmp    r15,QWORD PTR [rbp-0x3e8]
   187d3:	mov    BYTE PTR [r15+r14*1],0x0
   187d8:	je     187f1 <fts_children@@Base+0x2c81>
   187da:	cmp    r12,rbx
   187dd:	jbe    187f1 <fts_children@@Base+0x2c81>
   187df:	mov    rdi,r15
   187e2:	mov    rsi,rbx
   187e5:	call   3b70 <realloc@plt>
   187ea:	test   rax,rax
   187ed:	cmovne r15,rax
   187f1:	mov    rax,QWORD PTR [rbp-0x420]
   187f8:	test   rax,rax
   187fb:	je     18805 <fts_children@@Base+0x2c95>
   187fd:	mov    rdi,rax
   18800:	call   3e10 <free@plt>
   18805:	mov    rax,QWORD PTR [rbp-0x408]
   1880c:	mov    rdi,QWORD PTR [rbp-0x2b8]
   18813:	add    rax,0x20
   18817:	cmp    rdi,rax
   1881a:	je     18821 <fts_children@@Base+0x2cb1>
   1881c:	call   3e10 <free@plt>
   18821:	mov    rax,QWORD PTR [rbp-0x410]
   18828:	mov    rdi,QWORD PTR [rbp-0x3a8]
   1882f:	add    rax,0x10
   18833:	cmp    rdi,rax
   18836:	je     1883d <fts_children@@Base+0x2ccd>
   18838:	call   3e10 <free@plt>
   1883d:	mov    rax,QWORD PTR [rbp-0x418]
   18844:	mov    QWORD PTR [rax],r14
   18847:	jmp    179e4 <fts_children@@Base+0x1e74>
   1884c:	mov    rdi,r12
   1884f:	call   3ac0 <malloc@plt>
   18854:	test   rax,rax
   18857:	mov    rcx,rax
   1885a:	je     17955 <fts_children@@Base+0x1de5>
   18860:	test   r14,r14
   18863:	je     188d0 <fts_children@@Base+0x2d60>
   18865:	test   r13b,r13b
   18868:	je     188d0 <fts_children@@Base+0x2d60>
   1886a:	mov    rsi,r15
   1886d:	mov    rdx,r14
   18870:	mov    rdi,rax
   18873:	call   3a40 <memcpy@plt>
   18878:	mov    r15,rax
   1887b:	jmp    187cc <fts_children@@Base+0x2c5c>
   18880:	cmp    r12,0xffffffffffffffff
   18884:	mov    eax,0x1
   18889:	je     187cc <fts_children@@Base+0x2c5c>
   1888f:	test   r12,r12
   18892:	je     17955 <fts_children@@Base+0x1de5>
   18898:	js     17955 <fts_children@@Base+0x1de5>
   1889e:	test   rax,rax
   188a1:	jne    17955 <fts_children@@Base+0x1de5>
   188a7:	cmp    rbx,0xffffffffffffffff
   188ab:	je     17955 <fts_children@@Base+0x1de5>
   188b1:	mov    r12,rbx
   188b4:	jmp    18798 <fts_children@@Base+0x2c28>
   188b9:	js     17955 <fts_children@@Base+0x1de5>
   188bf:	add    r12,r12
   188c2:	cmp    r12,rbx
   188c5:	jae    18798 <fts_children@@Base+0x2c28>
   188cb:	jmp    1889e <fts_children@@Base+0x2d2e>
   188cd:	nop    DWORD PTR [rax]
   188d0:	mov    r15,rcx
   188d3:	jmp    187cc <fts_children@@Base+0x2c5c>
   188d8:	cmp    r12,0xffffffffffffffff
   188dc:	je     17d18 <fts_children@@Base+0x21a8>
   188e2:	jmp    17961 <fts_children@@Base+0x1df1>
   188e7:	call   3760 <__stack_chk_fail@plt>
   188ec:	cmp    r12,0xffffffffffffffff
   188f0:	mov    edx,0x1
   188f5:	je     17cf3 <fts_children@@Base+0x2183>
   188fb:	test   r12,r12
   188fe:	je     17955 <fts_children@@Base+0x1de5>
   18904:	jns    184d0 <fts_children@@Base+0x2960>
   1890a:	jmp    17955 <fts_children@@Base+0x1de5>
   1890f:	nop
   18910:	cmp    edi,0x16
   18913:	je     18935 <fts_children@@Base+0x2dc5>
   18915:	jle    18930 <fts_children@@Base+0x2dc0>
   18917:	cmp    edi,0x26
   1891a:	je     18935 <fts_children@@Base+0x2dc5>
   1891c:	cmp    edi,0x5f
   1891f:	je     18935 <fts_children@@Base+0x2dc5>
   18921:	mov    eax,0x1
   18926:	ret    
   18927:	nop    WORD PTR [rax+rax*1+0x0]
   18930:	cmp    edi,0x10
   18933:	jne    18921 <fts_children@@Base+0x2db1>
   18935:	xor    eax,eax
   18937:	ret    
   18938:	nop    DWORD PTR [rax+rax*1+0x0]
   18940:	push   r12
   18942:	push   rbp
   18943:	mov    rbp,rsi
   18946:	push   rbx
   18947:	call   3c90 <fopen@plt>
   1894c:	test   rax,rax
   1894f:	mov    rbx,rax
   18952:	je     18961 <fts_children@@Base+0x2df1>
   18954:	mov    rdi,rax
   18957:	call   3a70 <fileno@plt>
   1895c:	cmp    eax,0x2
   1895f:	jbe    18970 <fts_children@@Base+0x2e00>
   18961:	mov    rax,rbx
   18964:	pop    rbx
   18965:	pop    rbp
   18966:	pop    r12
   18968:	ret    
   18969:	nop    DWORD PTR [rax+0x0]
   18970:	mov    edi,eax
   18972:	call   17760 <fts_children@@Base+0x1bf0>
   18977:	test   eax,eax
   18979:	mov    r12d,eax
   1897c:	js     189b8 <fts_children@@Base+0x2e48>
   1897e:	mov    rdi,rbx
   18981:	call   17770 <fts_children@@Base+0x1c00>
   18986:	test   eax,eax
   18988:	jne    1899d <fts_children@@Base+0x2e2d>
   1898a:	mov    rsi,rbp
   1898d:	mov    edi,r12d
   18990:	call   3b80 <fdopen@plt>
   18995:	test   rax,rax
   18998:	mov    rbx,rax
   1899b:	jne    18961 <fts_children@@Base+0x2df1>
   1899d:	call   3540 <__errno_location@plt>
   189a2:	mov    ebp,DWORD PTR [rax]
   189a4:	mov    rbx,rax
   189a7:	mov    edi,r12d
   189aa:	call   38b0 <close@plt>
   189af:	mov    DWORD PTR [rbx],ebp
   189b1:	xor    ebx,ebx
   189b3:	jmp    18961 <fts_children@@Base+0x2df1>
   189b5:	nop    DWORD PTR [rax]
   189b8:	call   3540 <__errno_location@plt>
   189bd:	mov    r12d,DWORD PTR [rax]
   189c0:	mov    rbp,rax
   189c3:	mov    rdi,rbx
   189c6:	call   17770 <fts_children@@Base+0x1c00>
   189cb:	xor    ebx,ebx
   189cd:	mov    DWORD PTR [rbp+0x0],r12d
   189d1:	jmp    18961 <fts_children@@Base+0x2df1>
   189d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
   189dd:	nop    DWORD PTR [rax]
   189e0:	cmp    QWORD PTR [rsi],0x0
   189e4:	mov    rax,QWORD PTR [rsi+0x8]
   189e8:	je     18a4d <fts_children@@Base+0x2edd>
   189ea:	lea    r8,[rip+0x445f]        # 1ce50 <version_etc_copyright@@Base+0x1d0>
   189f1:	lea    r10,[rip+0x44b8]        # 1ceb0 <version_etc_copyright@@Base+0x230>
   189f8:	lea    r9,[rip+0x4445]        # 1ce44 <version_etc_copyright@@Base+0x1c4>
   189ff:	xor    ecx,ecx
   18a01:	nop    DWORD PTR [rax+0x0]
   18a08:	cmp    DWORD PTR [rax],0x16
   18a0b:	ja     18a50 <fts_children@@Base+0x2ee0>
   18a0d:	mov    edx,DWORD PTR [rax]
   18a0f:	movsxd rdx,DWORD PTR [r8+rdx*4]
   18a13:	add    rdx,r8
   18a16:	jmp    rdx
   18a18:	nop    DWORD PTR [rax+rax*1+0x0]
   18a20:	mov    rdx,QWORD PTR [rdi+0x8]
   18a24:	add    rdx,0xf
   18a28:	and    rdx,0xfffffffffffffff0
   18a2c:	lea    r11,[rdx+0x10]
   18a30:	mov    QWORD PTR [rdi+0x8],r11
   18a34:	fld    TBYTE PTR [rdx]
   18a36:	fstp   TBYTE PTR [rax+0x10]
   18a39:	nop    DWORD PTR [rax+0x0]
   18a40:	add    rcx,0x1
   18a44:	add    rax,0x20
   18a48:	cmp    QWORD PTR [rsi],rcx
   18a4b:	ja     18a08 <fts_children@@Base+0x2e98>
   18a4d:	xor    eax,eax
   18a4f:	ret    
   18a50:	mov    eax,0xffffffff
   18a55:	ret    
   18a56:	mov    r11d,DWORD PTR [rdi]
   18a59:	cmp    r11d,0x2f
   18a5d:	ja     18b9a <fts_children@@Base+0x302a>
   18a63:	mov    edx,r11d
   18a66:	add    rdx,QWORD PTR [rdi+0x10]
   18a6a:	add    r11d,0x8
   18a6e:	mov    DWORD PTR [rdi],r11d
   18a71:	mov    rdx,QWORD PTR [rdx]
   18a74:	mov    QWORD PTR [rax+0x10],rdx
   18a78:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18a7a:	mov    r11d,DWORD PTR [rdi]
   18a7d:	cmp    r11d,0x2f
   18a81:	ja     18bbc <fts_children@@Base+0x304c>
   18a87:	mov    edx,r11d
   18a8a:	add    rdx,QWORD PTR [rdi+0x10]
   18a8e:	add    r11d,0x8
   18a92:	mov    DWORD PTR [rdi],r11d
   18a95:	mov    edx,DWORD PTR [rdx]
   18a97:	mov    DWORD PTR [rax+0x10],edx
   18a9a:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18a9c:	mov    r11d,DWORD PTR [rdi]
   18a9f:	cmp    r11d,0x2f
   18aa3:	ja     18bab <fts_children@@Base+0x303b>
   18aa9:	mov    edx,r11d
   18aac:	add    rdx,QWORD PTR [rdi+0x10]
   18ab0:	add    r11d,0x8
   18ab4:	mov    DWORD PTR [rdi],r11d
   18ab7:	mov    edx,DWORD PTR [rdx]
   18ab9:	mov    BYTE PTR [rax+0x10],dl
   18abc:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18abe:	mov    r11d,DWORD PTR [rdi]
   18ac1:	cmp    r11d,0x2f
   18ac5:	ja     18b6a <fts_children@@Base+0x2ffa>
   18acb:	mov    edx,r11d
   18ace:	add    rdx,QWORD PTR [rdi+0x10]
   18ad2:	add    r11d,0x8
   18ad6:	mov    DWORD PTR [rdi],r11d
   18ad9:	mov    edx,DWORD PTR [rdx]
   18adb:	mov    WORD PTR [rax+0x10],dx
   18adf:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18ae4:	mov    r11d,DWORD PTR [rdi]
   18ae7:	cmp    r11d,0x2f
   18aeb:	ja     18b7b <fts_children@@Base+0x300b>
   18af1:	mov    edx,r11d
   18af4:	add    rdx,QWORD PTR [rdi+0x10]
   18af8:	add    r11d,0x8
   18afc:	mov    DWORD PTR [rdi],r11d
   18aff:	mov    rdx,QWORD PTR [rdx]
   18b02:	test   rdx,rdx
   18b05:	cmove  rdx,r9
   18b09:	mov    QWORD PTR [rax+0x10],rdx
   18b0d:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18b12:	mov    r11d,DWORD PTR [rdi+0x4]
   18b16:	cmp    r11d,0xaf
   18b1d:	ja     18bcd <fts_children@@Base+0x305d>
   18b23:	mov    edx,r11d
   18b26:	add    rdx,QWORD PTR [rdi+0x10]
   18b2a:	add    r11d,0x10
   18b2e:	mov    DWORD PTR [rdi+0x4],r11d
   18b32:	movsd  xmm0,QWORD PTR [rdx]
   18b36:	movsd  QWORD PTR [rax+0x10],xmm0
   18b3b:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18b40:	mov    r11d,DWORD PTR [rdi]
   18b43:	cmp    r11d,0x2f
   18b47:	ja     18b8c <fts_children@@Base+0x301c>
   18b49:	mov    edx,r11d
   18b4c:	add    rdx,QWORD PTR [rdi+0x10]
   18b50:	add    r11d,0x8
   18b54:	mov    DWORD PTR [rdi],r11d
   18b57:	mov    rdx,QWORD PTR [rdx]
   18b5a:	test   rdx,rdx
   18b5d:	cmove  rdx,r10
   18b61:	mov    QWORD PTR [rax+0x10],rdx
   18b65:	jmp    18a40 <fts_children@@Base+0x2ed0>
   18b6a:	mov    rdx,QWORD PTR [rdi+0x8]
   18b6e:	lea    r11,[rdx+0x8]
   18b72:	mov    QWORD PTR [rdi+0x8],r11
   18b76:	jmp    18ad9 <fts_children@@Base+0x2f69>
   18b7b:	mov    rdx,QWORD PTR [rdi+0x8]
   18b7f:	lea    r11,[rdx+0x8]
   18b83:	mov    QWORD PTR [rdi+0x8],r11
   18b87:	jmp    18aff <fts_children@@Base+0x2f8f>
   18b8c:	mov    rdx,QWORD PTR [rdi+0x8]
   18b90:	lea    r11,[rdx+0x8]
   18b94:	mov    QWORD PTR [rdi+0x8],r11
   18b98:	jmp    18b57 <fts_children@@Base+0x2fe7>
   18b9a:	mov    rdx,QWORD PTR [rdi+0x8]
   18b9e:	lea    r11,[rdx+0x8]
   18ba2:	mov    QWORD PTR [rdi+0x8],r11
   18ba6:	jmp    18a71 <fts_children@@Base+0x2f01>
   18bab:	mov    rdx,QWORD PTR [rdi+0x8]
   18baf:	lea    r11,[rdx+0x8]
   18bb3:	mov    QWORD PTR [rdi+0x8],r11
   18bb7:	jmp    18ab7 <fts_children@@Base+0x2f47>
   18bbc:	mov    rdx,QWORD PTR [rdi+0x8]
   18bc0:	lea    r11,[rdx+0x8]
   18bc4:	mov    QWORD PTR [rdi+0x8],r11
   18bc8:	jmp    18a95 <fts_children@@Base+0x2f25>
   18bcd:	mov    rdx,QWORD PTR [rdi+0x8]
   18bd1:	lea    r11,[rdx+0x8]
   18bd5:	mov    QWORD PTR [rdi+0x8],r11
   18bd9:	jmp    18b32 <fts_children@@Base+0x2fc2>
   18bde:	xchg   ax,ax
   18be0:	push   r15
   18be2:	push   r14
   18be4:	lea    rcx,[rsi+0x20]
   18be8:	push   r13
   18bea:	push   r12
   18bec:	lea    rax,[rdx+0x10]
   18bf0:	push   rbp
   18bf1:	push   rbx
   18bf2:	mov    r14,rsi
   18bf5:	mov    r15,rdx
   18bf8:	xor    ebx,ebx
   18bfa:	mov    r9d,0x7
   18c00:	sub    rsp,0x58
   18c04:	mov    r10d,0x7
   18c0a:	mov    QWORD PTR [rsi],0x0
   18c11:	mov    QWORD PTR [rsi+0x8],rcx
   18c15:	mov    QWORD PTR [rsp+0x28],rcx
   18c1a:	mov    r8,0xffffffffffffffff
   18c21:	mov    QWORD PTR [rdx],0x0
   18c28:	mov    QWORD PTR [rsp+0x8],rax
   18c2d:	mov    QWORD PTR [rdx+0x8],rax
   18c31:	mov    QWORD PTR [rsp+0x18],0x0
   18c3a:	mov    QWORD PTR [rsp+0x10],0x0
   18c43:	mov    QWORD PTR [rsp+0x20],0x0
   18c4c:	jmp    18c5b <fts_children@@Base+0x30eb>
   18c4e:	xchg   ax,ax
   18c50:	cmp    al,0x25
   18c52:	lea    rbp,[rdi+0x1]
   18c56:	je     18c98 <fts_children@@Base+0x3128>
   18c58:	mov    rdi,rbp
   18c5b:	movzx  eax,BYTE PTR [rdi]
   18c5e:	test   al,al
   18c60:	jne    18c50 <fts_children@@Base+0x30e0>
   18c62:	lea    rax,[rbx+rbx*4]
   18c66:	lea    rax,[rbx+rax*2]
   18c6a:	mov    QWORD PTR [rcx+rax*8],rdi
   18c6e:	mov    rax,QWORD PTR [rsp+0x10]
   18c73:	mov    QWORD PTR [r14+0x10],rax
   18c77:	mov    rax,QWORD PTR [rsp+0x18]
   18c7c:	mov    QWORD PTR [r14+0x18],rax
   18c80:	xor    eax,eax
   18c82:	add    rsp,0x58
   18c86:	pop    rbx
   18c87:	pop    rbp
   18c88:	pop    r12
   18c8a:	pop    r13
   18c8c:	pop    r14
   18c8e:	pop    r15
   18c90:	ret    
   18c91:	nop    DWORD PTR [rax+0x0]
   18c98:	lea    rax,[rbx+rbx*4]
   18c9c:	mov    r13,r8
   18c9f:	lea    rax,[rbx+rax*2]
   18ca3:	lea    r12,[rcx+rax*8]
   18ca7:	mov    QWORD PTR [r12],rdi
   18cab:	mov    DWORD PTR [r12+0x10],0x0
   18cb4:	mov    QWORD PTR [r12+0x18],0x0
   18cbd:	mov    QWORD PTR [r12+0x20],0x0
   18cc6:	mov    QWORD PTR [r12+0x28],r8
   18ccb:	mov    QWORD PTR [r12+0x30],0x0
   18cd4:	mov    QWORD PTR [r12+0x38],0x0
   18cdd:	mov    QWORD PTR [r12+0x40],r8
   18ce2:	mov    QWORD PTR [r12+0x50],r8
   18ce7:	movzx  ebx,BYTE PTR [rdi+0x1]
   18ceb:	lea    eax,[rbx-0x30]
   18cee:	cmp    al,0x9
   18cf0:	ja     18d2e <fts_children@@Base+0x31be>
   18cf2:	jmp    1912a <fts_children@@Base+0x35ba>
   18cf7:	nop    WORD PTR [rax+rax*1+0x0]
   18d00:	cmp    bl,0x2d
   18d03:	je     18d48 <fts_children@@Base+0x31d8>
   18d05:	cmp    bl,0x2b
   18d08:	je     18d50 <fts_children@@Base+0x31e0>
   18d0a:	cmp    bl,0x20
   18d0d:	je     18d60 <fts_children@@Base+0x31f0>
   18d0f:	cmp    bl,0x23
   18d12:	je     18d70 <fts_children@@Base+0x3200>
   18d14:	cmp    bl,0x30
   18d17:	je     18d80 <fts_children@@Base+0x3210>
   18d19:	cmp    bl,0x49
   18d1c:	jne    18d90 <fts_children@@Base+0x3220>
   18d1e:	or     DWORD PTR [r12+0x10],0x40
   18d24:	nop    DWORD PTR [rax+0x0]
   18d28:	movzx  ebx,BYTE PTR [rax]
   18d2b:	mov    rbp,rax
   18d2e:	lea    rax,[rbp+0x1]
   18d32:	cmp    bl,0x27
   18d35:	mov    rdx,rax
   18d38:	jne    18d00 <fts_children@@Base+0x3190>
   18d3a:	or     DWORD PTR [r12+0x10],0x1
   18d40:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d42:	nop    WORD PTR [rax+rax*1+0x0]
   18d48:	or     DWORD PTR [r12+0x10],0x2
   18d4e:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d50:	or     DWORD PTR [r12+0x10],0x4
   18d56:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d58:	nop    DWORD PTR [rax+rax*1+0x0]
   18d60:	or     DWORD PTR [r12+0x10],0x8
   18d66:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d68:	nop    DWORD PTR [rax+rax*1+0x0]
   18d70:	or     DWORD PTR [r12+0x10],0x10
   18d76:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d78:	nop    DWORD PTR [rax+rax*1+0x0]
   18d80:	or     DWORD PTR [r12+0x10],0x20
   18d86:	jmp    18d28 <fts_children@@Base+0x31b8>
   18d88:	nop    DWORD PTR [rax+rax*1+0x0]
   18d90:	cmp    bl,0x2a
   18d93:	je     18f49 <fts_children@@Base+0x33d9>
   18d99:	lea    ecx,[rbx-0x30]
   18d9c:	cmp    cl,0x9
   18d9f:	jbe    191b7 <fts_children@@Base+0x3647>
   18da5:	cmp    bl,0x2e
   18da8:	je     1907f <fts_children@@Base+0x350f>
   18dae:	xor    eax,eax
   18db0:	mov    esi,0x1
   18db5:	jmp    18de7 <fts_children@@Base+0x3277>
   18db7:	nop    WORD PTR [rax+rax*1+0x0]
   18dc0:	cmp    bl,0x4c
   18dc3:	je     18e00 <fts_children@@Base+0x3290>
   18dc5:	cmp    bl,0x6c
   18dc8:	je     18de0 <fts_children@@Base+0x3270>
   18dca:	cmp    bl,0x6a
   18dcd:	je     18de0 <fts_children@@Base+0x3270>
   18dcf:	mov    edx,ebx
   18dd1:	and    edx,0xffffffdf
   18dd4:	cmp    dl,0x5a
   18dd7:	je     18de0 <fts_children@@Base+0x3270>
   18dd9:	cmp    bl,0x74
   18ddc:	jne    18e08 <fts_children@@Base+0x3298>
   18dde:	xchg   ax,ax
   18de0:	add    eax,0x8
   18de3:	movzx  ebx,BYTE PTR [rbp+0x0]
   18de7:	add    rbp,0x1
   18deb:	cmp    bl,0x68
   18dee:	jne    18dc0 <fts_children@@Base+0x3250>
   18df0:	mov    ecx,eax
   18df2:	mov    edx,esi
   18df4:	and    ecx,0x1
   18df7:	shl    edx,cl
   18df9:	or     eax,edx
   18dfb:	jmp    18de3 <fts_children@@Base+0x3273>
   18dfd:	nop    DWORD PTR [rax]
   18e00:	or     eax,0x4
   18e03:	jmp    18de3 <fts_children@@Base+0x3273>
   18e05:	nop    DWORD PTR [rax]
   18e08:	lea    edx,[rbx-0x25]
   18e0b:	cmp    dl,0x53
   18e0e:	ja     1942b <fts_children@@Base+0x38bb>
   18e14:	lea    rcx,[rip+0x40b1]        # 1cecc <version_etc_copyright@@Base+0x24c>
   18e1b:	movzx  edx,dl
   18e1e:	movsxd rdx,DWORD PTR [rcx+rdx*4]
   18e22:	add    rdx,rcx
   18e25:	jmp    rdx
   18e27:	mov    r11d,0x10
   18e2d:	mov    ebx,0x73
   18e32:	nop    WORD PTR [rax+rax*1+0x0]
   18e38:	cmp    r13,0xffffffffffffffff
   18e3c:	je     194f7 <fts_children@@Base+0x3987>
   18e42:	mov    QWORD PTR [r12+0x50],r13
   18e47:	cmp    r9,r13
   18e4a:	mov    rcx,QWORD PTR [r15+0x8]
   18e4e:	jbe    19470 <fts_children@@Base+0x3900>
   18e54:	mov    rax,QWORD PTR [r15]
   18e57:	mov    rdx,rax
   18e5a:	shl    rdx,0x5
   18e5e:	add    rdx,rcx
   18e61:	cmp    rax,r13
   18e64:	ja     18e86 <fts_children@@Base+0x3316>
   18e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   18e70:	add    rax,0x1
   18e74:	mov    DWORD PTR [rdx],0x0
   18e7a:	add    rdx,0x20
   18e7e:	cmp    rax,r13
   18e81:	jbe    18e70 <fts_children@@Base+0x3300>
   18e83:	mov    QWORD PTR [r15],rax
   18e86:	shl    r13,0x5
   18e8a:	lea    rax,[rcx+r13*1]
   18e8e:	mov    edx,DWORD PTR [rax]
   18e90:	test   edx,edx
   18e92:	jne    19463 <fts_children@@Base+0x38f3>
   18e98:	mov    DWORD PTR [rax],r11d
   18e9b:	mov    BYTE PTR [r12+0x48],bl
   18ea0:	mov    rax,QWORD PTR [r14]
   18ea3:	mov    QWORD PTR [r12+0x8],rbp
   18ea8:	lea    rbx,[rax+0x1]
   18eac:	cmp    r10,rbx
   18eaf:	mov    QWORD PTR [r14],rbx
   18eb2:	ja     18f40 <fts_children@@Base+0x33d0>
   18eb8:	test   r10,r10
   18ebb:	js     19867 <fts_children@@Base+0x3cf7>
   18ec1:	add    r10,r10
   18ec4:	movabs rax,0x2e8ba2e8ba2e8ba
   18ece:	cmp    r10,rax
   18ed1:	ja     19867 <fts_children@@Base+0x3cf7>
   18ed7:	lea    rax,[r10+r10*4]
   18edb:	mov    rdi,QWORD PTR [r14+0x8]
   18edf:	cmp    QWORD PTR [rsp+0x28],rdi
   18ee4:	mov    QWORD PTR [rsp+0x40],r9
   18ee9:	mov    QWORD PTR [rsp+0x38],r10
   18eee:	lea    rax,[r10+rax*2]
   18ef2:	mov    QWORD PTR [rsp+0x30],r8
   18ef7:	lea    rsi,[rax*8+0x0]
   18eff:	je     195bd <fts_children@@Base+0x3a4d>
   18f05:	call   3b70 <realloc@plt>
   18f0a:	test   rax,rax
   18f0d:	mov    rcx,rax
   18f10:	mov    r8,QWORD PTR [rsp+0x30]
   18f15:	mov    r10,QWORD PTR [rsp+0x38]
   18f1a:	mov    r9,QWORD PTR [rsp+0x40]
   18f1f:	je     19867 <fts_children@@Base+0x3cf7>
   18f25:	mov    rax,QWORD PTR [rsp+0x28]
   18f2a:	cmp    rax,QWORD PTR [r14+0x8]
   18f2e:	mov    rbx,QWORD PTR [r14]
   18f31:	je     195e0 <fts_children@@Base+0x3a70>
   18f37:	mov    QWORD PTR [r14+0x8],rcx
   18f3b:	jmp    18c58 <fts_children@@Base+0x30e8>
   18f40:	mov    rcx,QWORD PTR [r14+0x8]
   18f44:	jmp    18c58 <fts_children@@Base+0x30e8>
   18f49:	mov    rsi,QWORD PTR [rsp+0x10]
   18f4e:	mov    ecx,0x1
   18f53:	mov    QWORD PTR [r12+0x18],rbp
   18f58:	mov    QWORD PTR [r12+0x20],rax
   18f5d:	test   rsi,rsi
   18f60:	cmovne rcx,rsi
   18f64:	mov    QWORD PTR [rsp+0x10],rcx
   18f69:	movzx  ecx,BYTE PTR [rbp+0x1]
   18f6d:	lea    esi,[rcx-0x30]
   18f70:	cmp    sil,0x9
   18f74:	jbe    19255 <fts_children@@Base+0x36e5>
   18f7a:	mov    rsi,QWORD PTR [rsp+0x20]
   18f7f:	cmp    rsi,0xffffffffffffffff
   18f83:	lea    rdx,[rsi+0x1]
   18f87:	mov    QWORD PTR [r12+0x28],rsi
   18f8c:	je     1942b <fts_children@@Base+0x38bb>
   18f92:	mov    rbx,QWORD PTR [rsp+0x20]
   18f97:	mov    rbp,rax
   18f9a:	mov    QWORD PTR [rsp+0x20],rdx
   18f9f:	cmp    r9,rbx
   18fa2:	mov    rcx,QWORD PTR [r15+0x8]
   18fa6:	ja     19622 <fts_children@@Base+0x3ab2>
   18fac:	add    r9,r9
   18faf:	lea    rax,[rbx+0x1]
   18fb3:	cmp    r9,rbx
   18fb6:	cmovbe r9,rax
   18fba:	movabs rax,0x7ffffffffffffff
   18fc4:	cmp    r9,rax
   18fc7:	ja     1986b <fts_children@@Base+0x3cfb>
   18fcd:	mov    rsi,r9
   18fd0:	mov    QWORD PTR [rsp+0x40],r9
   18fd5:	mov    QWORD PTR [rsp+0x38],r10
   18fda:	shl    rsi,0x5
   18fde:	cmp    QWORD PTR [rsp+0x8],rcx
   18fe3:	mov    QWORD PTR [rsp+0x30],r8
   18fe8:	je     19701 <fts_children@@Base+0x3b91>
   18fee:	mov    rdi,rcx
   18ff1:	call   3b70 <realloc@plt>
   18ff6:	mov    rdx,QWORD PTR [r15+0x8]
   18ffa:	mov    r8,QWORD PTR [rsp+0x30]
   18fff:	mov    rcx,rax
   19002:	mov    r10,QWORD PTR [rsp+0x38]
   19007:	mov    r9,QWORD PTR [rsp+0x40]
   1900c:	test   rcx,rcx
   1900f:	je     198c7 <fts_children@@Base+0x3d57>
   19015:	cmp    QWORD PTR [rsp+0x8],rdx
   1901a:	mov    rax,QWORD PTR [r15]
   1901d:	je     197db <fts_children@@Base+0x3c6b>
   19023:	mov    QWORD PTR [r15+0x8],rcx
   19027:	mov    rdx,rax
   1902a:	shl    rdx,0x5
   1902e:	add    rdx,rcx
   19031:	cmp    rax,rbx
   19034:	ja     19056 <fts_children@@Base+0x34e6>
   19036:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19040:	add    rax,0x1
   19044:	mov    DWORD PTR [rdx],0x0
   1904a:	add    rdx,0x20
   1904e:	cmp    rax,rbx
   19051:	jbe    19040 <fts_children@@Base+0x34d0>
   19053:	mov    QWORD PTR [r15],rax
   19056:	shl    rbx,0x5
   1905a:	lea    rax,[rcx+rbx*1]
   1905e:	mov    edx,DWORD PTR [rax]
   19060:	test   edx,edx
   19062:	jne    1953b <fts_children@@Base+0x39cb>
   19068:	mov    DWORD PTR [rax],0x5
   1906e:	movzx  ebx,BYTE PTR [rbp+0x0]
   19072:	lea    rdx,[rbp+0x1]
   19076:	cmp    bl,0x2e
   19079:	jne    18dae <fts_children@@Base+0x323e>
   1907f:	cmp    BYTE PTR [rbp+0x1],0x2a
   19083:	mov    QWORD PTR [r12+0x30],rbp
   19088:	jne    1920e <fts_children@@Base+0x369e>
   1908e:	mov    rsi,QWORD PTR [rsp+0x18]
   19093:	lea    r11,[rbp+0x2]
   19097:	mov    eax,0x2
   1909c:	mov    QWORD PTR [r12+0x38],r11
   190a1:	cmp    rsi,0x2
   190a5:	cmovae rax,rsi
   190a9:	mov    QWORD PTR [rsp+0x18],rax
   190ae:	movsx  eax,BYTE PTR [rbp+0x2]
   190b2:	lea    edx,[rax-0x30]
   190b5:	cmp    dl,0x9
   190b8:	jbe    1974c <fts_children@@Base+0x3bdc>
   190be:	mov    rbx,QWORD PTR [r12+0x40]
   190c3:	cmp    rbx,0xffffffffffffffff
   190c7:	je     19725 <fts_children@@Base+0x3bb5>
   190cd:	cmp    r9,rbx
   190d0:	mov    rcx,QWORD PTR [r15+0x8]
   190d4:	jbe    1963f <fts_children@@Base+0x3acf>
   190da:	mov    rax,QWORD PTR [r15]
   190dd:	mov    rdx,rax
   190e0:	shl    rdx,0x5
   190e4:	add    rdx,rcx
   190e7:	cmp    rax,rbx
   190ea:	ja     19106 <fts_children@@Base+0x3596>
   190ec:	nop    DWORD PTR [rax+0x0]
   190f0:	add    rax,0x1
   190f4:	mov    DWORD PTR [rdx],0x0
   190fa:	add    rdx,0x20
   190fe:	cmp    rax,rbx
   19101:	jbe    190f0 <fts_children@@Base+0x3580>
   19103:	mov    QWORD PTR [r15],rax
   19106:	shl    rbx,0x5
   1910a:	lea    rax,[rcx+rbx*1]
   1910e:	mov    edx,DWORD PTR [rax]
   19110:	test   edx,edx
   19112:	jne    1962a <fts_children@@Base+0x3aba>
   19118:	mov    DWORD PTR [rax],0x5
   1911e:	mov    rbp,r11
   19121:	movzx  ebx,BYTE PTR [r11]
   19125:	jmp    18dae <fts_children@@Base+0x323e>
   1912a:	mov    rax,rbp
   1912d:	nop    DWORD PTR [rax]
   19130:	add    rax,0x1
   19134:	movzx  edx,BYTE PTR [rax]
   19137:	lea    ecx,[rdx-0x30]
   1913a:	cmp    cl,0x9
   1913d:	jbe    19130 <fts_children@@Base+0x35c0>
   1913f:	cmp    dl,0x24
   19142:	mov    r13,r8
   19145:	jne    18d2e <fts_children@@Base+0x31be>
   1914b:	xor    edx,edx
   1914d:	movsx  eax,bl
   19150:	movabs rdi,0x1999999999999999
   1915a:	mov    rsi,r8
   1915d:	sub    eax,0x30
   19160:	cmp    rdx,rdi
   19163:	cdqe   
   19165:	ja     1916e <fts_children@@Base+0x35fe>
   19167:	lea    rsi,[rdx+rdx*4]
   1916b:	add    rsi,rsi
   1916e:	mov    rcx,rbp
   19171:	add    rax,rsi
   19174:	movzx  ebx,BYTE PTR [rbp+0x1]
   19178:	setb   sil
   1917c:	add    rbp,0x1
   19180:	mov    rdx,rax
   19183:	movzx  esi,sil
   19187:	test   rsi,rsi
   1918a:	lea    edi,[rbx-0x30]
   1918d:	jne    1951e <fts_children@@Base+0x39ae>
   19193:	cmp    dil,0x9
   19197:	jbe    1914d <fts_children@@Base+0x35dd>
   19199:	mov    r13,rax
   1919c:	sub    r13,0x1
   191a0:	cmp    r13,0xfffffffffffffffd
   191a4:	ja     1942b <fts_children@@Base+0x38bb>
   191aa:	lea    rbp,[rcx+0x2]
   191ae:	movzx  ebx,BYTE PTR [rcx+0x2]
   191b2:	jmp    18d2e <fts_children@@Base+0x31be>
   191b7:	mov    QWORD PTR [r12+0x18],rbp
   191bc:	movzx  edi,BYTE PTR [rbp+0x0]
   191c0:	mov    rsi,rbp
   191c3:	lea    ecx,[rdi-0x30]
   191c6:	cmp    cl,0x9
   191c9:	jbe    191d7 <fts_children@@Base+0x3667>
   191cb:	jmp    19200 <fts_children@@Base+0x3690>
   191cd:	nop    DWORD PTR [rax]
   191d0:	mov    rbp,rax
   191d3:	add    rax,0x1
   191d7:	movzx  edi,BYTE PTR [rax]
   191da:	lea    edx,[rdi-0x30]
   191dd:	cmp    dl,0x9
   191e0:	jbe    191d0 <fts_children@@Base+0x3660>
   191e2:	mov    rcx,rax
   191e5:	lea    rdx,[rbp+0x2]
   191e9:	mov    rbp,rax
   191ec:	sub    rcx,rsi
   191ef:	mov    rsi,QWORD PTR [rsp+0x10]
   191f4:	cmp    rsi,rcx
   191f7:	cmovae rcx,rsi
   191fb:	mov    QWORD PTR [rsp+0x10],rcx
   19200:	mov    QWORD PTR [r12+0x20],rbp
   19205:	movzx  ebx,BYTE PTR [rbp+0x0]
   19209:	jmp    18da5 <fts_children@@Base+0x3235>
   1920e:	movzx  eax,BYTE PTR [rbp+0x1]
   19212:	sub    eax,0x30
   19215:	cmp    al,0x9
   19217:	ja     1922e <fts_children@@Base+0x36be>
   19219:	nop    DWORD PTR [rax+0x0]
   19220:	add    rdx,0x1
   19224:	movzx  eax,BYTE PTR [rdx]
   19227:	sub    eax,0x30
   1922a:	cmp    al,0x9
   1922c:	jbe    19220 <fts_children@@Base+0x36b0>
   1922e:	mov    rsi,QWORD PTR [rsp+0x18]
   19233:	mov    rax,rdx
   19236:	mov    QWORD PTR [r12+0x38],rdx
   1923b:	sub    rax,rbp
   1923e:	movzx  ebx,BYTE PTR [rdx]
   19241:	mov    rbp,rdx
   19244:	cmp    rsi,rax
   19247:	cmovae rax,rsi
   1924b:	mov    QWORD PTR [rsp+0x18],rax
   19250:	jmp    18dae <fts_children@@Base+0x323e>
   19255:	mov    rsi,rax
   19258:	add    rsi,0x1
   1925c:	movzx  edi,BYTE PTR [rsi]
   1925f:	lea    r11d,[rdi-0x30]
   19263:	cmp    r11b,0x9
   19267:	jbe    19258 <fts_children@@Base+0x36e8>
   19269:	cmp    dil,0x24
   1926d:	jne    18f7a <fts_children@@Base+0x340a>
   19273:	xor    esi,esi
   19275:	movsx  eax,cl
   19278:	movabs rdi,0x1999999999999999
   19282:	mov    rcx,r8
   19285:	sub    eax,0x30
   19288:	cmp    rsi,rdi
   1928b:	cdqe   
   1928d:	ja     19296 <fts_children@@Base+0x3726>
   1928f:	lea    rcx,[rsi+rsi*4]
   19293:	add    rcx,rcx
   19296:	mov    rbp,rdx
   19299:	xor    r11d,r11d
   1929c:	add    rax,rcx
   1929f:	movzx  ecx,BYTE PTR [rdx+0x1]
   192a3:	setb   r11b
   192a7:	add    rdx,0x1
   192ab:	mov    rsi,rax
   192ae:	test   r11,r11
   192b1:	lea    edi,[rcx-0x30]
   192b4:	jne    197be <fts_children@@Base+0x3c4e>
   192ba:	cmp    dil,0x9
   192be:	jbe    19275 <fts_children@@Base+0x3705>
   192c0:	lea    rbx,[rax-0x1]
   192c4:	cmp    rbx,0xfffffffffffffffd
   192c8:	ja     1942b <fts_children@@Base+0x38bb>
   192ce:	mov    QWORD PTR [r12+0x28],rbx
   192d3:	add    rbp,0x2
   192d7:	jmp    18f9f <fts_children@@Base+0x342f>
   192dc:	cmp    eax,0xf
   192df:	mov    r11d,0x16
   192e5:	jg     18e38 <fts_children@@Base+0x32c8>
   192eb:	test   al,0x4
   192ed:	jne    18e38 <fts_children@@Base+0x32c8>
   192f3:	cmp    eax,0x7
   192f6:	mov    r11d,0x15
   192fc:	jg     18e38 <fts_children@@Base+0x32c8>
   19302:	test   al,0x2
   19304:	mov    r11d,0x12
   1930a:	jne    18e38 <fts_children@@Base+0x32c8>
   19310:	xor    r11d,r11d
   19313:	test   al,0x1
   19315:	sete   r11b
   19319:	add    r11d,0x13
   1931d:	jmp    18e38 <fts_children@@Base+0x32c8>
   19322:	nop    WORD PTR [rax+rax*1+0x0]
   19328:	xor    r11d,r11d
   1932b:	cmp    eax,0x7
   1932e:	setg   r11b
   19332:	add    r11d,0xd
   19336:	jmp    18e38 <fts_children@@Base+0x32c8>
   1933b:	cmp    eax,0xf
   1933e:	mov    r11d,0x9
   19344:	jg     18e38 <fts_children@@Base+0x32c8>
   1934a:	test   al,0x4
   1934c:	jne    18e38 <fts_children@@Base+0x32c8>
   19352:	cmp    eax,0x7
   19355:	mov    r11d,0x7
   1935b:	jg     18e38 <fts_children@@Base+0x32c8>
   19361:	test   al,0x2
   19363:	mov    r11d,0x1
   19369:	jne    18e38 <fts_children@@Base+0x32c8>
   1936f:	and    eax,0x1
   19372:	cmp    eax,0x1
   19375:	sbb    r11d,r11d
   19378:	and    r11d,0x2
   1937c:	add    r11d,0x3
   19380:	jmp    18e38 <fts_children@@Base+0x32c8>
   19385:	nop    DWORD PTR [rax]
   19388:	xor    r11d,r11d
   1938b:	cmp    eax,0x7
   1938e:	setg   r11b
   19392:	add    r11d,0xf
   19396:	jmp    18e38 <fts_children@@Base+0x32c8>
   1939b:	cmp    eax,0xf
   1939e:	mov    r11d,0xc
   193a4:	jg     18e38 <fts_children@@Base+0x32c8>
   193aa:	xor    r11d,r11d
   193ad:	test   al,0x4
   193af:	setne  r11b
   193b3:	add    r11d,0xb
   193b7:	jmp    18e38 <fts_children@@Base+0x32c8>
   193bc:	mov    r11d,0xe
   193c2:	mov    ebx,0x63
   193c7:	jmp    18e38 <fts_children@@Base+0x32c8>
   193cc:	cmp    eax,0xf
   193cf:	mov    r11d,0xa
   193d5:	jg     18e38 <fts_children@@Base+0x32c8>
   193db:	test   al,0x4
   193dd:	jne    18e38 <fts_children@@Base+0x32c8>
   193e3:	cmp    eax,0x7
   193e6:	mov    r11d,0x8
   193ec:	jg     18e38 <fts_children@@Base+0x32c8>
   193f2:	test   al,0x2
   193f4:	mov    r11d,0x2
   193fa:	jne    18e38 <fts_children@@Base+0x32c8>
   19400:	and    eax,0x1
   19403:	cmp    eax,0x1
   19406:	sbb    r11d,r11d
   19409:	and    r11d,0x2
   1940d:	add    r11d,0x4
   19411:	jmp    18e38 <fts_children@@Base+0x32c8>
   19416:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19420:	mov    r11d,0x11
   19426:	jmp    18e38 <fts_children@@Base+0x32c8>
   1942b:	mov    rcx,QWORD PTR [r15+0x8]
   1942f:	cmp    QWORD PTR [rsp+0x8],rcx
   19434:	je     1943e <fts_children@@Base+0x38ce>
   19436:	mov    rdi,rcx
   19439:	call   3e10 <free@plt>
   1943e:	mov    rdi,QWORD PTR [r14+0x8]
   19442:	cmp    QWORD PTR [rsp+0x28],rdi
   19447:	je     1944e <fts_children@@Base+0x38de>
   19449:	call   3e10 <free@plt>
   1944e:	call   3540 <__errno_location@plt>
   19453:	mov    DWORD PTR [rax],0x16
   19459:	mov    eax,0xffffffff
   1945e:	jmp    18c82 <fts_children@@Base+0x3112>
   19463:	cmp    edx,r11d
   19466:	je     18e9b <fts_children@@Base+0x332b>
   1946c:	jmp    1942f <fts_children@@Base+0x38bf>
   1946e:	xchg   ax,ax
   19470:	add    r9,r9
   19473:	lea    rax,[r13+0x1]
   19477:	cmp    r9,r13
   1947a:	cmovbe r9,rax
   1947e:	movabs rax,0x7ffffffffffffff
   19488:	cmp    r9,rax
   1948b:	ja     1986b <fts_children@@Base+0x3cfb>
   19491:	mov    rsi,r9
   19494:	mov    QWORD PTR [rsp+0x48],r9
   19499:	mov    QWORD PTR [rsp+0x40],r10
   1949e:	shl    rsi,0x5
   194a2:	cmp    QWORD PTR [rsp+0x8],rcx
   194a7:	mov    QWORD PTR [rsp+0x38],r8
   194ac:	mov    DWORD PTR [rsp+0x30],r11d
   194b1:	je     19551 <fts_children@@Base+0x39e1>
   194b7:	mov    rdi,rcx
   194ba:	call   3b70 <realloc@plt>
   194bf:	test   rax,rax
   194c2:	mov    rcx,rax
   194c5:	mov    r11d,DWORD PTR [rsp+0x30]
   194ca:	mov    r8,QWORD PTR [rsp+0x38]
   194cf:	mov    r10,QWORD PTR [rsp+0x40]
   194d4:	mov    r9,QWORD PTR [rsp+0x48]
   194d9:	je     19867 <fts_children@@Base+0x3cf7>
   194df:	mov    rax,QWORD PTR [rsp+0x8]
   194e4:	cmp    rax,QWORD PTR [r15+0x8]
   194e8:	je     19579 <fts_children@@Base+0x3a09>
   194ee:	mov    QWORD PTR [r15+0x8],rcx
   194f2:	jmp    18e54 <fts_children@@Base+0x32e4>
   194f7:	mov    rsi,QWORD PTR [rsp+0x20]
   194fc:	cmp    rsi,0xffffffffffffffff
   19500:	lea    rax,[rsi+0x1]
   19504:	mov    QWORD PTR [r12+0x50],rsi
   19509:	je     1942b <fts_children@@Base+0x38bb>
   1950f:	mov    r13,QWORD PTR [rsp+0x20]
   19514:	mov    QWORD PTR [rsp+0x20],rax
   19519:	jmp    18e47 <fts_children@@Base+0x32d7>
   1951e:	cmp    dil,0x9
   19522:	ja     1942b <fts_children@@Base+0x38bb>
   19528:	movsx  eax,bl
   1952b:	mov    rsi,r8
   1952e:	mov    rcx,rbp
   19531:	sub    eax,0x30
   19534:	cdqe   
   19536:	jmp    19171 <fts_children@@Base+0x3601>
   1953b:	cmp    edx,0x5
   1953e:	jne    1942f <fts_children@@Base+0x38bf>
   19544:	movzx  ebx,BYTE PTR [rbp+0x0]
   19548:	lea    rdx,[rbp+0x1]
   1954c:	jmp    18da5 <fts_children@@Base+0x3235>
   19551:	mov    rdi,rsi
   19554:	call   3ac0 <malloc@plt>
   19559:	test   rax,rax
   1955c:	mov    rcx,rax
   1955f:	mov    r11d,DWORD PTR [rsp+0x30]
   19564:	mov    r8,QWORD PTR [rsp+0x38]
   19569:	mov    r10,QWORD PTR [rsp+0x40]
   1956e:	mov    r9,QWORD PTR [rsp+0x48]
   19573:	je     196dc <fts_children@@Base+0x3b6c>
   19579:	mov    rdx,QWORD PTR [r15]
   1957c:	mov    rsi,QWORD PTR [rsp+0x8]
   19581:	mov    rdi,rcx
   19584:	mov    QWORD PTR [rsp+0x48],r9
   19589:	mov    QWORD PTR [rsp+0x40],r10
   1958e:	mov    QWORD PTR [rsp+0x38],r8
   19593:	mov    DWORD PTR [rsp+0x30],r11d
   19598:	shl    rdx,0x5
   1959c:	call   3a40 <memcpy@plt>
   195a1:	mov    r9,QWORD PTR [rsp+0x48]
   195a6:	mov    r10,QWORD PTR [rsp+0x40]
   195ab:	mov    rcx,rax
   195ae:	mov    r8,QWORD PTR [rsp+0x38]
   195b3:	mov    r11d,DWORD PTR [rsp+0x30]
   195b8:	jmp    194ee <fts_children@@Base+0x397e>
   195bd:	mov    rdi,rsi
   195c0:	call   3ac0 <malloc@plt>
   195c5:	test   rax,rax
   195c8:	mov    rcx,rax
   195cb:	mov    r8,QWORD PTR [rsp+0x30]
   195d0:	mov    r10,QWORD PTR [rsp+0x38]
   195d5:	mov    r9,QWORD PTR [rsp+0x40]
   195da:	je     196c9 <fts_children@@Base+0x3b59>
   195e0:	lea    rax,[rbx+rbx*4]
   195e4:	mov    rsi,QWORD PTR [rsp+0x28]
   195e9:	mov    rdi,rcx
   195ec:	mov    QWORD PTR [rsp+0x40],r9
   195f1:	mov    QWORD PTR [rsp+0x38],r10
   195f6:	lea    rdx,[rbx+rax*2]
   195fa:	mov    QWORD PTR [rsp+0x30],r8
   195ff:	shl    rdx,0x3
   19603:	call   3a40 <memcpy@plt>
   19608:	mov    rbx,QWORD PTR [r14]
   1960b:	mov    rcx,rax
   1960e:	mov    r9,QWORD PTR [rsp+0x40]
   19613:	mov    r10,QWORD PTR [rsp+0x38]
   19618:	mov    r8,QWORD PTR [rsp+0x30]
   1961d:	jmp    18f37 <fts_children@@Base+0x33c7>
   19622:	mov    rax,QWORD PTR [r15]
   19625:	jmp    19027 <fts_children@@Base+0x34b7>
   1962a:	cmp    edx,0x5
   1962d:	jne    1942f <fts_children@@Base+0x38bf>
   19633:	movzx  ebx,BYTE PTR [r11]
   19637:	mov    rbp,r11
   1963a:	jmp    18dae <fts_children@@Base+0x323e>
   1963f:	add    r9,r9
   19642:	lea    rax,[rbx+0x1]
   19646:	cmp    r9,rbx
   19649:	cmovbe r9,rax
   1964d:	movabs rax,0x7ffffffffffffff
   19657:	cmp    r9,rax
   1965a:	ja     1986b <fts_children@@Base+0x3cfb>
   19660:	mov    rsi,r9
   19663:	mov    QWORD PTR [rsp+0x48],r9
   19668:	mov    QWORD PTR [rsp+0x40],r10
   1966d:	shl    rsi,0x5
   19671:	cmp    QWORD PTR [rsp+0x8],rcx
   19676:	mov    QWORD PTR [rsp+0x38],r8
   1967b:	mov    QWORD PTR [rsp+0x30],r11
   19680:	je     1983e <fts_children@@Base+0x3cce>
   19686:	mov    rdi,rcx
   19689:	call   3b70 <realloc@plt>
   1968e:	mov    rdx,QWORD PTR [r15+0x8]
   19692:	mov    r11,QWORD PTR [rsp+0x30]
   19697:	mov    rcx,rax
   1969a:	mov    r8,QWORD PTR [rsp+0x38]
   1969f:	mov    r10,QWORD PTR [rsp+0x40]
   196a4:	mov    r9,QWORD PTR [rsp+0x48]
   196a9:	test   rcx,rcx
   196ac:	je     198c7 <fts_children@@Base+0x3d57>
   196b2:	cmp    QWORD PTR [rsp+0x8],rdx
   196b7:	mov    rax,QWORD PTR [r15]
   196ba:	je     19880 <fts_children@@Base+0x3d10>
   196c0:	mov    QWORD PTR [r15+0x8],rcx
   196c4:	jmp    190dd <fts_children@@Base+0x356d>
   196c9:	mov    rcx,QWORD PTR [r15+0x8]
   196cd:	cmp    QWORD PTR [rsp+0x8],rcx
   196d2:	je     196ec <fts_children@@Base+0x3b7c>
   196d4:	mov    rdi,rcx
   196d7:	call   3e10 <free@plt>
   196dc:	mov    rdi,QWORD PTR [r14+0x8]
   196e0:	cmp    QWORD PTR [rsp+0x28],rdi
   196e5:	je     196ec <fts_children@@Base+0x3b7c>
   196e7:	call   3e10 <free@plt>
   196ec:	call   3540 <__errno_location@plt>
   196f1:	mov    DWORD PTR [rax],0xc
   196f7:	mov    eax,0xffffffff
   196fc:	jmp    18c82 <fts_children@@Base+0x3112>
   19701:	mov    rdi,rsi
   19704:	call   3ac0 <malloc@plt>
   19709:	mov    rdx,QWORD PTR [rsp+0x8]
   1970e:	mov    rcx,rax
   19711:	mov    r9,QWORD PTR [rsp+0x40]
   19716:	mov    r10,QWORD PTR [rsp+0x38]
   1971b:	mov    r8,QWORD PTR [rsp+0x30]
   19720:	jmp    1900c <fts_children@@Base+0x349c>
   19725:	mov    rsi,QWORD PTR [rsp+0x20]
   1972a:	cmp    rsi,0xffffffffffffffff
   1972e:	lea    rax,[rsi+0x1]
   19732:	mov    QWORD PTR [r12+0x40],rsi
   19737:	je     1942b <fts_children@@Base+0x38bb>
   1973d:	mov    rbx,QWORD PTR [rsp+0x20]
   19742:	mov    QWORD PTR [rsp+0x20],rax
   19747:	jmp    190cd <fts_children@@Base+0x355d>
   1974c:	mov    rdx,r11
   1974f:	add    rdx,0x1
   19753:	movzx  ecx,BYTE PTR [rdx]
   19756:	lea    esi,[rcx-0x30]
   19759:	cmp    sil,0x9
   1975d:	jbe    1974f <fts_children@@Base+0x3bdf>
   1975f:	cmp    cl,0x24
   19762:	jne    190be <fts_children@@Base+0x354e>
   19768:	xor    ecx,ecx
   1976a:	movabs rsi,0x1999999999999999
   19774:	sub    eax,0x30
   19777:	mov    rdx,r8
   1977a:	cmp    rcx,rsi
   1977d:	cdqe   
   1977f:	ja     19788 <fts_children@@Base+0x3c18>
   19781:	lea    rdx,[rcx+rcx*4]
   19785:	add    rdx,rdx
   19788:	mov    rsi,r11
   1978b:	xor    ebx,ebx
   1978d:	add    rdx,rax
   19790:	movsx  eax,BYTE PTR [r11+0x1]
   19795:	setb   bl
   19798:	add    r11,0x1
   1979c:	mov    rcx,rdx
   1979f:	test   rbx,rbx
   197a2:	lea    edi,[rax-0x30]
   197a5:	je     19818 <fts_children@@Base+0x3ca8>
   197a7:	cmp    dil,0x9
   197ab:	ja     1942b <fts_children@@Base+0x38bb>
   197b1:	sub    eax,0x30
   197b4:	mov    rdx,r8
   197b7:	mov    rsi,r11
   197ba:	cdqe   
   197bc:	jmp    1978b <fts_children@@Base+0x3c1b>
   197be:	cmp    dil,0x9
   197c2:	ja     1942b <fts_children@@Base+0x38bb>
   197c8:	movsx  eax,cl
   197cb:	mov    rbp,rdx
   197ce:	mov    rcx,r8
   197d1:	sub    eax,0x30
   197d4:	cdqe   
   197d6:	jmp    19299 <fts_children@@Base+0x3729>
   197db:	mov    rsi,QWORD PTR [rsp+0x8]
   197e0:	shl    rax,0x5
   197e4:	mov    rdi,rcx
   197e7:	mov    rdx,rax
   197ea:	mov    QWORD PTR [rsp+0x40],r9
   197ef:	mov    QWORD PTR [rsp+0x38],r10
   197f4:	mov    QWORD PTR [rsp+0x30],r8
   197f9:	call   3a40 <memcpy@plt>
   197fe:	mov    r9,QWORD PTR [rsp+0x40]
   19803:	mov    rcx,rax
   19806:	mov    r10,QWORD PTR [rsp+0x38]
   1980b:	mov    rax,QWORD PTR [r15]
   1980e:	mov    r8,QWORD PTR [rsp+0x30]
   19813:	jmp    19023 <fts_children@@Base+0x34b3>
   19818:	cmp    dil,0x9
   1981c:	jbe    1976a <fts_children@@Base+0x3bfa>
   19822:	lea    rbx,[rdx-0x1]
   19826:	cmp    rbx,0xfffffffffffffffd
   1982a:	ja     1942b <fts_children@@Base+0x38bb>
   19830:	mov    QWORD PTR [r12+0x40],rbx
   19835:	lea    r11,[rsi+0x2]
   19839:	jmp    190cd <fts_children@@Base+0x355d>
   1983e:	mov    rdi,rsi
   19841:	call   3ac0 <malloc@plt>
   19846:	mov    rdx,QWORD PTR [rsp+0x8]
   1984b:	mov    rcx,rax
   1984e:	mov    r9,QWORD PTR [rsp+0x48]
   19853:	mov    r10,QWORD PTR [rsp+0x40]
   19858:	mov    r8,QWORD PTR [rsp+0x38]
   1985d:	mov    r11,QWORD PTR [rsp+0x30]
   19862:	jmp    196a9 <fts_children@@Base+0x3b39>
   19867:	mov    rcx,QWORD PTR [r15+0x8]
   1986b:	cmp    QWORD PTR [rsp+0x8],rcx
   19870:	jne    196d4 <fts_children@@Base+0x3b64>
   19876:	jmp    196dc <fts_children@@Base+0x3b6c>
   1987b:	nop    DWORD PTR [rax+rax*1+0x0]
   19880:	mov    rsi,QWORD PTR [rsp+0x8]
   19885:	shl    rax,0x5
   19889:	mov    rdi,rcx
   1988c:	mov    rdx,rax
   1988f:	mov    QWORD PTR [rsp+0x48],r9
   19894:	mov    QWORD PTR [rsp+0x40],r10
   19899:	mov    QWORD PTR [rsp+0x38],r8
   1989e:	mov    QWORD PTR [rsp+0x30],r11
   198a3:	call   3a40 <memcpy@plt>
   198a8:	mov    r9,QWORD PTR [rsp+0x48]
   198ad:	mov    rcx,rax
   198b0:	mov    r10,QWORD PTR [rsp+0x40]
   198b5:	mov    rax,QWORD PTR [r15]
   198b8:	mov    r8,QWORD PTR [rsp+0x38]
   198bd:	mov    r11,QWORD PTR [rsp+0x30]
   198c2:	jmp    196c0 <fts_children@@Base+0x3b50>
   198c7:	mov    rcx,rdx
   198ca:	jmp    1986b <fts_children@@Base+0x3cfb>
   198cc:	nop    DWORD PTR [rax+0x0]
   198d0:	push   r15
   198d2:	push   r14
   198d4:	mov    r15d,edi
   198d7:	push   r13
   198d9:	push   r12
   198db:	lea    r12,[rip+0x207aee]        # 2213d0 <version_etc_copyright@@Base+0x204750>
   198e2:	push   rbp
   198e3:	lea    rbp,[rip+0x207aee]        # 2213d8 <version_etc_copyright@@Base+0x204758>
   198ea:	push   rbx
   198eb:	mov    r14,rsi
   198ee:	mov    r13,rdx
   198f1:	sub    rbp,r12
   198f4:	sub    rsp,0x8
   198f8:	sar    rbp,0x3
   198fc:	call   34a8 <_init@@Base>
   19901:	test   rbp,rbp
   19904:	je     19926 <fts_children@@Base+0x3db6>
   19906:	xor    ebx,ebx
   19908:	nop    DWORD PTR [rax+rax*1+0x0]
   19910:	mov    rdx,r13
   19913:	mov    rsi,r14
   19916:	mov    edi,r15d
   19919:	call   QWORD PTR [r12+rbx*8]
   1991d:	add    rbx,0x1
   19921:	cmp    rbp,rbx
   19924:	jne    19910 <fts_children@@Base+0x3da0>
   19926:	add    rsp,0x8
   1992a:	pop    rbx
   1992b:	pop    rbp
   1992c:	pop    r12
   1992e:	pop    r13
   19930:	pop    r14
   19932:	pop    r15
   19934:	ret    
   19935:	nop
   19936:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19940:	repz ret 
   19942:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1994c:	nop    DWORD PTR [rax+0x0]
   19950:	lea    rax,[rip+0x2086b1]        # 222008 <quoting_style_args@@Base+0x788>
   19957:	test   rax,rax
   1995a:	je     19970 <fts_children@@Base+0x3e00>
   1995c:	mov    rdx,QWORD PTR [rax]
   1995f:	xor    esi,esi
   19961:	jmp    3d00 <__cxa_atexit@plt>
   19966:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19970:	xor    edx,edx
   19972:	xor    esi,esi
   19974:	jmp    3d00 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000001997c <_fini@@Base>:
   1997c:	sub    rsp,0x8
   19980:	add    rsp,0x8
   19984:	ret    
