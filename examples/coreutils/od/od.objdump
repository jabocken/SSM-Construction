
/usr/bin/od:     file format elf64-x86-64


Disassembly of section .init:

0000000000001b28 <.init>:
    1b28:	sub    rsp,0x8
    1b2c:	mov    rax,QWORD PTR [rip+0x20e4ad]        # 20ffe0 <__gmon_start__>
    1b33:	test   rax,rax
    1b36:	je     1b3a <__uflow@plt-0x16>
    1b38:	call   rax
    1b3a:	add    rsp,0x8
    1b3e:	ret    

Disassembly of section .plt:

0000000000001b40 <__uflow@plt-0x10>:
    1b40:	push   QWORD PTR [rip+0x20e26a]        # 20fdb0 <quoting_style_args@@Base+0x250>
    1b46:	jmp    QWORD PTR [rip+0x20e26c]        # 20fdb8 <quoting_style_args@@Base+0x258>
    1b4c:	nop    DWORD PTR [rax+0x0]

0000000000001b50 <__uflow@plt>:
    1b50:	jmp    QWORD PTR [rip+0x20e26a]        # 20fdc0 <__uflow@GLIBC_2.2.5>
    1b56:	push   0x0
    1b5b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001b60 <getenv@plt>:
    1b60:	jmp    QWORD PTR [rip+0x20e262]        # 20fdc8 <getenv@GLIBC_2.2.5>
    1b66:	push   0x1
    1b6b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001b70 <__snprintf_chk@plt>:
    1b70:	jmp    QWORD PTR [rip+0x20e25a]        # 20fdd0 <__snprintf_chk@GLIBC_2.3.4>
    1b76:	push   0x2
    1b7b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001b80 <free@plt>:
    1b80:	jmp    QWORD PTR [rip+0x20e252]        # 20fdd8 <free@GLIBC_2.2.5>
    1b86:	push   0x3
    1b8b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001b90 <abort@plt>:
    1b90:	jmp    QWORD PTR [rip+0x20e24a]        # 20fde0 <abort@GLIBC_2.2.5>
    1b96:	push   0x4
    1b9b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ba0 <__errno_location@plt>:
    1ba0:	jmp    QWORD PTR [rip+0x20e242]        # 20fde8 <__errno_location@GLIBC_2.2.5>
    1ba6:	push   0x5
    1bab:	jmp    1b40 <__uflow@plt-0x10>

0000000000001bb0 <strncmp@plt>:
    1bb0:	jmp    QWORD PTR [rip+0x20e23a]        # 20fdf0 <strncmp@GLIBC_2.2.5>
    1bb6:	push   0x6
    1bbb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001bc0 <_exit@plt>:
    1bc0:	jmp    QWORD PTR [rip+0x20e232]        # 20fdf8 <_exit@GLIBC_2.2.5>
    1bc6:	push   0x7
    1bcb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001bd0 <__fpending@plt>:
    1bd0:	jmp    QWORD PTR [rip+0x20e22a]        # 20fe00 <__fpending@GLIBC_2.2.5>
    1bd6:	push   0x8
    1bdb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001be0 <puts@plt>:
    1be0:	jmp    QWORD PTR [rip+0x20e222]        # 20fe08 <puts@GLIBC_2.2.5>
    1be6:	push   0x9
    1beb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001bf0 <ferror@plt>:
    1bf0:	jmp    QWORD PTR [rip+0x20e21a]        # 20fe10 <ferror@GLIBC_2.2.5>
    1bf6:	push   0xa
    1bfb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c00 <strtod@plt>:
    1c00:	jmp    QWORD PTR [rip+0x20e212]        # 20fe18 <strtod@GLIBC_2.2.5>
    1c06:	push   0xb
    1c0b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c10 <localeconv@plt>:
    1c10:	jmp    QWORD PTR [rip+0x20e20a]        # 20fe20 <localeconv@GLIBC_2.2.5>
    1c16:	push   0xc
    1c1b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c20 <fread_unlocked@plt>:
    1c20:	jmp    QWORD PTR [rip+0x20e202]        # 20fe28 <fread_unlocked@GLIBC_2.2.5>
    1c26:	push   0xd
    1c2b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c30 <textdomain@plt>:
    1c30:	jmp    QWORD PTR [rip+0x20e1fa]        # 20fe30 <textdomain@GLIBC_2.2.5>
    1c36:	push   0xe
    1c3b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c40 <fclose@plt>:
    1c40:	jmp    QWORD PTR [rip+0x20e1f2]        # 20fe38 <fclose@GLIBC_2.2.5>
    1c46:	push   0xf
    1c4b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c50 <bindtextdomain@plt>:
    1c50:	jmp    QWORD PTR [rip+0x20e1ea]        # 20fe40 <bindtextdomain@GLIBC_2.2.5>
    1c56:	push   0x10
    1c5b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c60 <dcgettext@plt>:
    1c60:	jmp    QWORD PTR [rip+0x20e1e2]        # 20fe48 <dcgettext@GLIBC_2.2.5>
    1c66:	push   0x11
    1c6b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c70 <__ctype_get_mb_cur_max@plt>:
    1c70:	jmp    QWORD PTR [rip+0x20e1da]        # 20fe50 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1c76:	push   0x12
    1c7b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c80 <strlen@plt>:
    1c80:	jmp    QWORD PTR [rip+0x20e1d2]        # 20fe58 <strlen@GLIBC_2.2.5>
    1c86:	push   0x13
    1c8b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001c90 <__stack_chk_fail@plt>:
    1c90:	jmp    QWORD PTR [rip+0x20e1ca]        # 20fe60 <__stack_chk_fail@GLIBC_2.4>
    1c96:	push   0x14
    1c9b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ca0 <getopt_long@plt>:
    1ca0:	jmp    QWORD PTR [rip+0x20e1c2]        # 20fe68 <getopt_long@GLIBC_2.2.5>
    1ca6:	push   0x15
    1cab:	jmp    1b40 <__uflow@plt-0x10>

0000000000001cb0 <mbrtowc@plt>:
    1cb0:	jmp    QWORD PTR [rip+0x20e1ba]        # 20fe70 <mbrtowc@GLIBC_2.2.5>
    1cb6:	push   0x16
    1cbb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001cc0 <strchr@plt>:
    1cc0:	jmp    QWORD PTR [rip+0x20e1b2]        # 20fe78 <strchr@GLIBC_2.2.5>
    1cc6:	push   0x17
    1ccb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001cd0 <__overflow@plt>:
    1cd0:	jmp    QWORD PTR [rip+0x20e1aa]        # 20fe80 <__overflow@GLIBC_2.2.5>
    1cd6:	push   0x18
    1cdb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ce0 <strrchr@plt>:
    1ce0:	jmp    QWORD PTR [rip+0x20e1a2]        # 20fe88 <strrchr@GLIBC_2.2.5>
    1ce6:	push   0x19
    1ceb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001cf0 <lseek@plt>:
    1cf0:	jmp    QWORD PTR [rip+0x20e19a]        # 20fe90 <lseek@GLIBC_2.2.5>
    1cf6:	push   0x1a
    1cfb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d00 <__assert_fail@plt>:
    1d00:	jmp    QWORD PTR [rip+0x20e192]        # 20fe98 <__assert_fail@GLIBC_2.2.5>
    1d06:	push   0x1b
    1d0b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d10 <__strtoul_internal@plt>:
    1d10:	jmp    QWORD PTR [rip+0x20e18a]        # 20fea0 <__strtoul_internal@GLIBC_2.2.5>
    1d16:	push   0x1c
    1d1b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d20 <strtof@plt>:
    1d20:	jmp    QWORD PTR [rip+0x20e182]        # 20fea8 <strtof@GLIBC_2.2.5>
    1d26:	push   0x1d
    1d2b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d30 <memset@plt>:
    1d30:	jmp    QWORD PTR [rip+0x20e17a]        # 20feb0 <memset@GLIBC_2.2.5>
    1d36:	push   0x1e
    1d3b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d40 <fscanf@plt>:
    1d40:	jmp    QWORD PTR [rip+0x20e172]        # 20feb8 <fscanf@GLIBC_2.2.5>
    1d46:	push   0x1f
    1d4b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d50 <fgetc@plt>:
    1d50:	jmp    QWORD PTR [rip+0x20e16a]        # 20fec0 <fgetc@GLIBC_2.2.5>
    1d56:	push   0x20
    1d5b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d60 <close@plt>:
    1d60:	jmp    QWORD PTR [rip+0x20e162]        # 20fec8 <close@GLIBC_2.2.5>
    1d66:	push   0x21
    1d6b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d70 <memcmp@plt>:
    1d70:	jmp    QWORD PTR [rip+0x20e15a]        # 20fed0 <memcmp@GLIBC_2.2.5>
    1d76:	push   0x22
    1d7b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d80 <fputs_unlocked@plt>:
    1d80:	jmp    QWORD PTR [rip+0x20e152]        # 20fed8 <fputs_unlocked@GLIBC_2.2.5>
    1d86:	push   0x23
    1d8b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001d90 <calloc@plt>:
    1d90:	jmp    QWORD PTR [rip+0x20e14a]        # 20fee0 <calloc@GLIBC_2.2.5>
    1d96:	push   0x24
    1d9b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001da0 <strcmp@plt>:
    1da0:	jmp    QWORD PTR [rip+0x20e142]        # 20fee8 <strcmp@GLIBC_2.2.5>
    1da6:	push   0x25
    1dab:	jmp    1b40 <__uflow@plt-0x10>

0000000000001db0 <memcpy@plt>:
    1db0:	jmp    QWORD PTR [rip+0x20e13a]        # 20fef0 <memcpy@GLIBC_2.14>
    1db6:	push   0x26
    1dbb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001dc0 <fileno@plt>:
    1dc0:	jmp    QWORD PTR [rip+0x20e132]        # 20fef8 <fileno@GLIBC_2.2.5>
    1dc6:	push   0x27
    1dcb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001dd0 <malloc@plt>:
    1dd0:	jmp    QWORD PTR [rip+0x20e12a]        # 20ff00 <malloc@GLIBC_2.2.5>
    1dd6:	push   0x28
    1ddb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001de0 <fflush@plt>:
    1de0:	jmp    QWORD PTR [rip+0x20e122]        # 20ff08 <fflush@GLIBC_2.2.5>
    1de6:	push   0x29
    1deb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001df0 <nl_langinfo@plt>:
    1df0:	jmp    QWORD PTR [rip+0x20e11a]        # 20ff10 <nl_langinfo@GLIBC_2.2.5>
    1df6:	push   0x2a
    1dfb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e00 <ungetc@plt>:
    1e00:	jmp    QWORD PTR [rip+0x20e112]        # 20ff18 <ungetc@GLIBC_2.2.5>
    1e06:	push   0x2b
    1e0b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e10 <__fxstat@plt>:
    1e10:	jmp    QWORD PTR [rip+0x20e10a]        # 20ff20 <__fxstat@GLIBC_2.2.5>
    1e16:	push   0x2c
    1e1b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e20 <__freading@plt>:
    1e20:	jmp    QWORD PTR [rip+0x20e102]        # 20ff28 <__freading@GLIBC_2.2.5>
    1e26:	push   0x2d
    1e2b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e30 <fwrite_unlocked@plt>:
    1e30:	jmp    QWORD PTR [rip+0x20e0fa]        # 20ff30 <fwrite_unlocked@GLIBC_2.2.5>
    1e36:	push   0x2e
    1e3b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e40 <realloc@plt>:
    1e40:	jmp    QWORD PTR [rip+0x20e0f2]        # 20ff38 <realloc@GLIBC_2.2.5>
    1e46:	push   0x2f
    1e4b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e50 <fdopen@plt>:
    1e50:	jmp    QWORD PTR [rip+0x20e0ea]        # 20ff40 <fdopen@GLIBC_2.2.5>
    1e56:	push   0x30
    1e5b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e60 <setlocale@plt>:
    1e60:	jmp    QWORD PTR [rip+0x20e0e2]        # 20ff48 <setlocale@GLIBC_2.2.5>
    1e66:	push   0x31
    1e6b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e70 <__printf_chk@plt>:
    1e70:	jmp    QWORD PTR [rip+0x20e0da]        # 20ff50 <__printf_chk@GLIBC_2.3.4>
    1e76:	push   0x32
    1e7b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e80 <setvbuf@plt>:
    1e80:	jmp    QWORD PTR [rip+0x20e0d2]        # 20ff58 <setvbuf@GLIBC_2.2.5>
    1e86:	push   0x33
    1e8b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001e90 <strtold@plt>:
    1e90:	jmp    QWORD PTR [rip+0x20e0ca]        # 20ff60 <strtold@GLIBC_2.2.5>
    1e96:	push   0x34
    1e9b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ea0 <error@plt>:
    1ea0:	jmp    QWORD PTR [rip+0x20e0c2]        # 20ff68 <error@GLIBC_2.2.5>
    1ea6:	push   0x35
    1eab:	jmp    1b40 <__uflow@plt-0x10>

0000000000001eb0 <open@plt>:
    1eb0:	jmp    QWORD PTR [rip+0x20e0ba]        # 20ff70 <open@GLIBC_2.2.5>
    1eb6:	push   0x36
    1ebb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ec0 <fseeko@plt>:
    1ec0:	jmp    QWORD PTR [rip+0x20e0b2]        # 20ff78 <fseeko@GLIBC_2.2.5>
    1ec6:	push   0x37
    1ecb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ed0 <fopen@plt>:
    1ed0:	jmp    QWORD PTR [rip+0x20e0aa]        # 20ff80 <fopen@GLIBC_2.2.5>
    1ed6:	push   0x38
    1edb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ee0 <__fread_unlocked_chk@plt>:
    1ee0:	jmp    QWORD PTR [rip+0x20e0a2]        # 20ff88 <__fread_unlocked_chk@GLIBC_2.7>
    1ee6:	push   0x39
    1eeb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001ef0 <__cxa_atexit@plt>:
    1ef0:	jmp    QWORD PTR [rip+0x20e09a]        # 20ff90 <__cxa_atexit@GLIBC_2.2.5>
    1ef6:	push   0x3a
    1efb:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f00 <exit@plt>:
    1f00:	jmp    QWORD PTR [rip+0x20e092]        # 20ff98 <exit@GLIBC_2.2.5>
    1f06:	push   0x3b
    1f0b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f10 <fwrite@plt>:
    1f10:	jmp    QWORD PTR [rip+0x20e08a]        # 20ffa0 <fwrite@GLIBC_2.2.5>
    1f16:	push   0x3c
    1f1b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f20 <__fprintf_chk@plt>:
    1f20:	jmp    QWORD PTR [rip+0x20e082]        # 20ffa8 <__fprintf_chk@GLIBC_2.3.4>
    1f26:	push   0x3d
    1f2b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f30 <mbsinit@plt>:
    1f30:	jmp    QWORD PTR [rip+0x20e07a]        # 20ffb0 <mbsinit@GLIBC_2.2.5>
    1f36:	push   0x3e
    1f3b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f40 <iswprint@plt>:
    1f40:	jmp    QWORD PTR [rip+0x20e072]        # 20ffb8 <iswprint@GLIBC_2.2.5>
    1f46:	push   0x3f
    1f4b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f50 <__ctype_b_loc@plt>:
    1f50:	jmp    QWORD PTR [rip+0x20e06a]        # 20ffc0 <__ctype_b_loc@GLIBC_2.3>
    1f56:	push   0x40
    1f5b:	jmp    1b40 <__uflow@plt-0x10>

0000000000001f60 <__sprintf_chk@plt>:
    1f60:	jmp    QWORD PTR [rip+0x20e062]        # 20ffc8 <__sprintf_chk@GLIBC_2.3.4>
    1f66:	push   0x41
    1f6b:	jmp    1b40 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000001f70 <__cxa_finalize@plt>:
    1f70:	jmp    QWORD PTR [rip+0x20e07a]        # 20fff0 <__cxa_finalize@GLIBC_2.2.5>
    1f76:	xchg   ax,ax

Disassembly of section .text:

0000000000001f80 <.text>:
    1f80:	push   r15
    1f82:	push   r14
    1f84:	mov    r14d,edi
    1f87:	push   r13
    1f89:	push   r12
    1f8b:	mov    r13,rsi
    1f8e:	push   rbp
    1f8f:	push   rbx
    1f90:	sub    rsp,0x58
    1f94:	mov    rdi,QWORD PTR [rsi]
    1f97:	mov    rax,QWORD PTR fs:0x28
    1fa0:	mov    QWORD PTR [rsp+0x48],rax
    1fa5:	xor    eax,eax
    1fa7:	call   5f10 <__cxa_finalize@plt+0x3fa0>
    1fac:	lea    rsi,[rip+0xb5ee]        # d5a1 <quoting_style_vals@@Base+0x81>
    1fb3:	mov    edi,0x6
    1fb8:	call   1e60 <setlocale@plt>
    1fbd:	lea    rsi,[rip+0x9692]        # b656 <_IO_stdin_used@@Base+0x176>
    1fc4:	lea    rdi,[rip+0x967d]        # b648 <_IO_stdin_used@@Base+0x168>
    1fcb:	call   1c50 <bindtextdomain@plt>
    1fd0:	lea    rdi,[rip+0x9671]        # b648 <_IO_stdin_used@@Base+0x168>
    1fd7:	call   1c30 <textdomain@plt>
    1fdc:	lea    rdi,[rip+0x3a4d]        # 5a30 <__cxa_finalize@plt+0x3ac0>
    1fe3:	call   b490 <__cxa_finalize@plt+0x9520>
    1fe8:	lea    rax,[rip+0x20e191]        # 210180 <stderr@@GLIBC_2.2.5+0xa0>
    1fef:	lea    rdx,[rax+0x24]
    1ff3:	nop    DWORD PTR [rax+rax*1+0x0]
    1ff8:	mov    DWORD PTR [rax],0x0
    1ffe:	add    rax,0x4
    2002:	cmp    rax,rdx
    2005:	jne    1ff8 <__cxa_finalize@plt+0x88>
    2007:	lea    rax,[rip+0x20e112]        # 210120 <stderr@@GLIBC_2.2.5+0x40>
    200e:	mov    DWORD PTR [rip+0x20e16c],0x1        # 210184 <stderr@@GLIBC_2.2.5+0xa4>
    2018:	mov    DWORD PTR [rip+0x20e166],0x2        # 210188 <stderr@@GLIBC_2.2.5+0xa8>
    2022:	mov    DWORD PTR [rip+0x20e164],0x3        # 210190 <stderr@@GLIBC_2.2.5+0xb0>
    202c:	mov    DWORD PTR [rip+0x20e16a],0x5        # 2101a0 <stderr@@GLIBC_2.2.5+0xc0>
    2036:	lea    rdx,[rax+0x44]
    203a:	nop    WORD PTR [rax+rax*1+0x0]
    2040:	mov    DWORD PTR [rax],0x0
    2046:	add    rax,0x4
    204a:	cmp    rdx,rax
    204d:	jne    2040 <__cxa_finalize@plt+0xd0>
    204f:	lea    rax,[rip+0x124a]        # 32a0 <__cxa_finalize@plt+0x1330>
    2056:	lea    rbx,[rsp+0x20]
    205b:	lea    rbp,[rip+0xa7ee]        # c850 <_IO_stdin_used@@Base+0x1370>
    2062:	mov    DWORD PTR [rip+0x20e0c4],0x6        # 210130 <stderr@@GLIBC_2.2.5+0x50>
    206c:	mov    DWORD PTR [rip+0x20e0ea],0x8        # 210160 <stderr@@GLIBC_2.2.5+0x80>
    2076:	mov    r12d,0x1
    207c:	mov    QWORD PTR [rip+0x20e17d],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    2083:	lea    rax,[rsp+0x28]
    2088:	mov    DWORD PTR [rip+0x20e0ae],0x7        # 210140 <stderr@@GLIBC_2.2.5+0x60>
    2092:	mov    QWORD PTR [rip+0x20e133],0x0        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    209d:	mov    QWORD PTR [rip+0x20e120],0x0        # 2101c8 <stderr@@GLIBC_2.2.5+0xe8>
    20a8:	xor    r15d,r15d
    20ab:	mov    QWORD PTR [rip+0x20e122],0x0        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    20b6:	mov    DWORD PTR [rip+0x20e164],0x8        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    20c0:	mov    DWORD PTR [rip+0x20e156],0x7        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    20ca:	mov    BYTE PTR [rip+0x20e141],0x0        # 210212 <stderr@@GLIBC_2.2.5+0x132>
    20d1:	mov    BYTE PTR [rsp],0x0
    20d5:	mov    QWORD PTR [rsp+0x8],rax
    20da:	nop    WORD PTR [rax+rax*1+0x0]
    20e0:	lea    rcx,[rip+0x20d8b9]        # 20f9a0 <version_etc_copyright@@Base+0x202120>
    20e7:	lea    rdx,[rip+0xabf2]        # cce0 <_IO_stdin_used@@Base+0x1800>
    20ee:	mov    r8,rbx
    20f1:	mov    rsi,r13
    20f4:	mov    edi,r14d
    20f7:	mov    DWORD PTR [rsp+0x20],0xffffffff
    20ff:	call   1ca0 <getopt_long@plt>
    2104:	cmp    eax,0xffffffff
    2107:	je     2510 <__cxa_finalize@plt+0x5a0>
    210d:	add    eax,0x83
    2112:	cmp    eax,0x104
    2117:	ja     28e8 <__cxa_finalize@plt+0x978>
    211d:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
    2122:	add    rax,rbp
    2125:	jmp    rax
    2127:	nop    WORD PTR [rax+rax*1+0x0]
    2130:	mov    r9,QWORD PTR [rip+0x20dee9]        # 210020 <argmatch_die@@Base>
    2137:	mov    rsi,QWORD PTR [rip+0x20df82]        # 2100c0 <optarg@@GLIBC_2.2.5>
    213e:	lea    rdx,[rip+0x20d9db]        # 20fb20 <version_etc_copyright@@Base+0x2022a0>
    2145:	lea    rcx,[rip+0xab8c]        # ccd8 <_IO_stdin_used@@Base+0x17f8>
    214c:	lea    rdi,[rip+0x9515]        # b668 <_IO_stdin_used@@Base+0x188>
    2153:	mov    r8d,0x4
    2159:	call   5950 <__cxa_finalize@plt+0x39e0>
    215e:	lea    rdx,[rip+0xab73]        # ccd8 <_IO_stdin_used@@Base+0x17f8>
    2165:	mov    eax,DWORD PTR [rdx+rax*4]
    2168:	test   eax,eax
    216a:	je     2504 <__cxa_finalize@plt+0x594>
    2170:	sub    eax,0x1
    2173:	jne    20e0 <__cxa_finalize@plt+0x170>
    2179:	mov    BYTE PTR [rip+0x20df81],0x1        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    2180:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2185:	nop    DWORD PTR [rax]
    2188:	mov    BYTE PTR [rip+0x20e082],0x1        # 210211 <stderr@@GLIBC_2.2.5+0x131>
    218f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2194:	nop    DWORD PTR [rax+0x0]
    2198:	mov    rdi,QWORD PTR [rip+0x20df21]        # 2100c0 <optarg@@GLIBC_2.2.5>
    219f:	test   rdi,rdi
    21a2:	je     24ec <__cxa_finalize@plt+0x57c>
    21a8:	mov    rcx,QWORD PTR [rsp+0x8]
    21ad:	lea    r8,[rip+0xb3ed]        # d5a1 <quoting_style_vals@@Base+0x81>
    21b4:	xor    esi,esi
    21b6:	mov    edx,0xa
    21bb:	call   87d0 <__cxa_finalize@plt+0x6860>
    21c0:	test   eax,eax
    21c2:	jne    30f4 <__cxa_finalize@plt+0x1184>
    21c8:	mov    rax,QWORD PTR [rsp+0x28]
    21cd:	mov    BYTE PTR [rsp],0x1
    21d1:	mov    r15d,0x1
    21d7:	mov    QWORD PTR [rsp+0x10],rax
    21dc:	jmp    20e0 <__cxa_finalize@plt+0x170>
    21e1:	nop    DWORD PTR [rax+0x0]
    21e8:	mov    BYTE PTR [rip+0x20de22],0x0        # 210011 <quoting_style_args@@Base+0x4b1>
    21ef:	mov    r15d,0x1
    21f5:	jmp    20e0 <__cxa_finalize@plt+0x170>
    21fa:	nop    WORD PTR [rax+rax*1+0x0]
    2200:	mov    rdi,QWORD PTR [rip+0x20deb9]        # 2100c0 <optarg@@GLIBC_2.2.5>
    2207:	mov    r15d,0x1
    220d:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    2212:	and    r12d,eax
    2215:	jmp    20e0 <__cxa_finalize@plt+0x170>
    221a:	nop    WORD PTR [rax+rax*1+0x0]
    2220:	lea    rdi,[rip+0x9468]        # b68f <_IO_stdin_used@@Base+0x1af>
    2227:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    222c:	and    r12d,eax
    222f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2234:	nop    DWORD PTR [rax+0x0]
    2238:	mov    rdi,QWORD PTR [rip+0x20de81]        # 2100c0 <optarg@@GLIBC_2.2.5>
    223f:	lea    r8,[rip+0xaa82]        # ccc8 <_IO_stdin_used@@Base+0x17e8>
    2246:	lea    rcx,[rip+0x20dfab]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    224d:	xor    edx,edx
    224f:	xor    esi,esi
    2251:	call   87d0 <__cxa_finalize@plt+0x6860>
    2256:	test   eax,eax
    2258:	jne    3136 <__cxa_finalize@plt+0x11c6>
    225e:	mov    r15d,0x1
    2264:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2269:	nop    DWORD PTR [rax+0x0]
    2270:	lea    rdi,[rip+0x940c]        # b683 <_IO_stdin_used@@Base+0x1a3>
    2277:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    227c:	and    r12d,eax
    227f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2284:	nop    DWORD PTR [rax+0x0]
    2288:	lea    rdi,[rip+0x9403]        # b692 <_IO_stdin_used@@Base+0x1b2>
    228f:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    2294:	and    r12d,eax
    2297:	jmp    20e0 <__cxa_finalize@plt+0x170>
    229c:	nop    DWORD PTR [rax+0x0]
    22a0:	lea    rdi,[rip+0x93d6]        # b67d <_IO_stdin_used@@Base+0x19d>
    22a7:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    22ac:	and    r12d,eax
    22af:	jmp    20e0 <__cxa_finalize@plt+0x170>
    22b4:	nop    DWORD PTR [rax+0x0]
    22b8:	lea    rdi,[rip+0x93b8]        # b677 <_IO_stdin_used@@Base+0x197>
    22bf:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    22c4:	and    r12d,eax
    22c7:	jmp    20e0 <__cxa_finalize@plt+0x170>
    22cc:	nop    DWORD PTR [rax+0x0]
    22d0:	lea    rdi,[rip+0x9287]        # b55e <_IO_stdin_used@@Base+0x7e>
    22d7:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    22dc:	and    r12d,eax
    22df:	jmp    20e0 <__cxa_finalize@plt+0x170>
    22e4:	nop    DWORD PTR [rax+0x0]
    22e8:	lea    rdi,[rip+0x9382]        # b671 <_IO_stdin_used@@Base+0x191>
    22ef:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    22f4:	and    r12d,eax
    22f7:	jmp    20e0 <__cxa_finalize@plt+0x170>
    22fc:	nop    DWORD PTR [rax+0x0]
    2300:	lea    rdi,[rip+0x9262]        # b569 <_IO_stdin_used@@Base+0x89>
    2307:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    230c:	and    r12d,eax
    230f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2314:	nop    DWORD PTR [rax+0x0]
    2318:	mov    rdi,QWORD PTR [rip+0x20dda1]        # 2100c0 <optarg@@GLIBC_2.2.5>
    231f:	test   rdi,rdi
    2322:	je     24dc <__cxa_finalize@plt+0x56c>
    2328:	mov    rcx,QWORD PTR [rsp+0x8]
    232d:	lea    r8,[rip+0xa994]        # ccc8 <_IO_stdin_used@@Base+0x17e8>
    2334:	xor    edx,edx
    2336:	xor    esi,esi
    2338:	call   87d0 <__cxa_finalize@plt+0x6860>
    233d:	test   eax,eax
    233f:	jne    3154 <__cxa_finalize@plt+0x11e4>
    2345:	mov    rax,QWORD PTR [rsp+0x28]
    234a:	mov    QWORD PTR [rip+0x20dec7],rax        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    2351:	mov    BYTE PTR [rip+0x20deba],0x1        # 210212 <stderr@@GLIBC_2.2.5+0x132>
    2358:	mov    r15d,0x1
    235e:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2363:	nop    DWORD PTR [rax+rax*1+0x0]
    2368:	lea    rdi,[rip+0x931a]        # b689 <_IO_stdin_used@@Base+0x1a9>
    236f:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    2374:	and    r12d,eax
    2377:	jmp    20e0 <__cxa_finalize@plt+0x170>
    237c:	nop    DWORD PTR [rax+0x0]
    2380:	mov    rdi,QWORD PTR [rip+0x20dd39]        # 2100c0 <optarg@@GLIBC_2.2.5>
    2387:	lea    r8,[rip+0xa93a]        # ccc8 <_IO_stdin_used@@Base+0x17e8>
    238e:	lea    rcx,[rip+0x20de53]        # 2101e8 <stderr@@GLIBC_2.2.5+0x108>
    2395:	xor    edx,edx
    2397:	xor    esi,esi
    2399:	mov    BYTE PTR [rip+0x20de50],0x1        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    23a0:	call   87d0 <__cxa_finalize@plt+0x6860>
    23a5:	test   eax,eax
    23a7:	je     225e <__cxa_finalize@plt+0x2ee>
    23ad:	mov    r8,QWORD PTR [rip+0x20dd0c]        # 2100c0 <optarg@@GLIBC_2.2.5>
    23b4:	mov    esi,DWORD PTR [rsp+0x20]
    23b8:	lea    rcx,[rip+0x20d5e1]        # 20f9a0 <version_etc_copyright@@Base+0x202120>
    23bf:	mov    edx,0x4e
    23c4:	mov    edi,eax
    23c6:	call   8720 <__cxa_finalize@plt+0x67b0>
    23cb:	nop    DWORD PTR [rax+rax*1+0x0]
    23d0:	lea    rdi,[rip+0x92af]        # b686 <_IO_stdin_used@@Base+0x1a6>
    23d7:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    23dc:	and    r12d,eax
    23df:	jmp    20e0 <__cxa_finalize@plt+0x170>
    23e4:	nop    DWORD PTR [rax+0x0]
    23e8:	lea    rdi,[rip+0x9291]        # b680 <_IO_stdin_used@@Base+0x1a0>
    23ef:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    23f4:	and    r12d,eax
    23f7:	jmp    20e0 <__cxa_finalize@plt+0x170>
    23fc:	nop    DWORD PTR [rax+0x0]
    2400:	lea    rdi,[rip+0x9273]        # b67a <_IO_stdin_used@@Base+0x19a>
    2407:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    240c:	and    r12d,eax
    240f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2414:	nop    DWORD PTR [rax+0x0]
    2418:	lea    rdi,[rip+0x9255]        # b674 <_IO_stdin_used@@Base+0x194>
    241f:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    2424:	and    r12d,eax
    2427:	jmp    20e0 <__cxa_finalize@plt+0x170>
    242c:	nop    DWORD PTR [rax+0x0]
    2430:	lea    rdi,[rip+0x9255]        # b68c <_IO_stdin_used@@Base+0x1ac>
    2437:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    243c:	and    r12d,eax
    243f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2444:	nop    DWORD PTR [rax+0x0]
    2448:	mov    rax,QWORD PTR [rip+0x20dc71]        # 2100c0 <optarg@@GLIBC_2.2.5>
    244f:	movzx  r15d,BYTE PTR [rax]
    2453:	cmp    r15b,0x6e
    2457:	je     283c <__cxa_finalize@plt+0x8cc>
    245d:	jle    2682 <__cxa_finalize@plt+0x712>
    2463:	cmp    r15b,0x6f
    2467:	je     26b9 <__cxa_finalize@plt+0x749>
    246d:	cmp    r15b,0x78
    2471:	jne    30cc <__cxa_finalize@plt+0x115c>
    2477:	lea    rax,[rip+0xe22]        # 32a0 <__cxa_finalize@plt+0x1330>
    247e:	mov    DWORD PTR [rip+0x20dd9c],0x10        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    2488:	mov    DWORD PTR [rip+0x20dd8e],0x6        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    2492:	mov    r15d,0x1
    2498:	mov    QWORD PTR [rip+0x20dd61],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    249f:	jmp    20e0 <__cxa_finalize@plt+0x170>
    24a4:	nop    DWORD PTR [rax+0x0]
    24a8:	mov    rdi,QWORD PTR [rip+0x20dbf9]        # 2100a8 <stdout@@GLIBC_2.2.5>
    24af:	mov    rcx,QWORD PTR [rip+0x20db62]        # 210018 <Version@@Base>
    24b6:	lea    r8,[rip+0x91d8]        # b695 <_IO_stdin_used@@Base+0x1b5>
    24bd:	lea    rdx,[rip+0x9180]        # b644 <_IO_stdin_used@@Base+0x164>
    24c4:	lea    rsi,[rip+0x9100]        # b5cb <_IO_stdin_used@@Base+0xeb>
    24cb:	xor    r9d,r9d
    24ce:	xor    eax,eax
    24d0:	call   80f0 <__cxa_finalize@plt+0x6180>
    24d5:	xor    edi,edi
    24d7:	call   1f00 <exit@plt>
    24dc:	mov    QWORD PTR [rip+0x20dd31],0x3        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    24e7:	jmp    2351 <__cxa_finalize@plt+0x3e1>
    24ec:	mov    BYTE PTR [rsp],0x1
    24f0:	mov    r15d,0x1
    24f6:	mov    QWORD PTR [rsp+0x10],0x20
    24ff:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2504:	mov    BYTE PTR [rip+0x20dbf6],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    250b:	jmp    20e0 <__cxa_finalize@plt+0x170>
    2510:	test   r12b,r12b
    2513:	je     26e6 <__cxa_finalize@plt+0x776>
    2519:	cmp    BYTE PTR [rip+0x20dcf2],0x0        # 210212 <stderr@@GLIBC_2.2.5+0x132>
    2520:	je     2530 <__cxa_finalize@plt+0x5c0>
    2522:	cmp    QWORD PTR [rip+0x20dca6],0x0        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    252a:	jne    3112 <__cxa_finalize@plt+0x11a2>
    2530:	movsxd rax,DWORD PTR [rip+0x20db81]        # 2100b8 <optind@@GLIBC_2.2.5>
    2537:	movzx  edx,BYTE PTR [rip+0x20dcd3]        # 210211 <stderr@@GLIBC_2.2.5+0x131>
    253e:	sub    r14d,eax
    2541:	test   r15b,r15b
    2544:	je     285f <__cxa_finalize@plt+0x8ef>
    254a:	test   dl,dl
    254c:	jne    2ac5 <__cxa_finalize@plt+0xb55>
    2552:	cmp    BYTE PTR [rip+0x20dcb7],0x0        # 210210 <stderr@@GLIBC_2.2.5+0x130>
    2559:	je     257d <__cxa_finalize@plt+0x60d>
    255b:	lea    rax,[rip+0xd2e]        # 3290 <__cxa_finalize@plt+0x1320>
    2562:	cmp    QWORD PTR [rip+0x20dc97],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    2569:	je     2cb9 <__cxa_finalize@plt+0xd49>
    256f:	lea    rax,[rip+0x2b0a]        # 5080 <__cxa_finalize@plt+0x3110>
    2576:	mov    QWORD PTR [rip+0x20dc83],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    257d:	cmp    BYTE PTR [rip+0x20dc6c],0x0        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    2584:	je     25ac <__cxa_finalize@plt+0x63c>
    2586:	xor    edx,edx
    2588:	mov    rax,QWORD PTR [rip+0x20dc59]        # 2101e8 <stderr@@GLIBC_2.2.5+0x108>
    258f:	add    rax,QWORD PTR [rip+0x20dc62]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2596:	jb     3070 <__cxa_finalize@plt+0x1100>
    259c:	test   rdx,rdx
    259f:	mov    QWORD PTR [rip+0x20dc3a],rax        # 2101e0 <stderr@@GLIBC_2.2.5+0x100>
    25a6:	jne    304c <__cxa_finalize@plt+0x10dc>
    25ac:	cmp    QWORD PTR [rip+0x20dc1c],0x0        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    25b4:	je     2a73 <__cxa_finalize@plt+0xb03>
    25ba:	test   r14d,r14d
    25bd:	jle    2a60 <__cxa_finalize@plt+0xaf0>
    25c3:	movsxd rax,DWORD PTR [rip+0x20daee]        # 2100b8 <optind@@GLIBC_2.2.5>
    25ca:	lea    rax,[r13+rax*8+0x0]
    25cf:	mov    QWORD PTR [rip+0x20dbda],rax        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    25d6:	call   49f0 <__cxa_finalize@plt+0x2a80>
    25db:	cmp    QWORD PTR [rip+0x20dbc5],0x0        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    25e3:	mov    r13d,eax
    25e6:	je     2822 <__cxa_finalize@plt+0x8b2>
    25ec:	mov    rdi,QWORD PTR [rip+0x20dc05]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    25f3:	call   4b10 <__cxa_finalize@plt+0x2ba0>
    25f8:	and    r13d,eax
    25fb:	cmp    QWORD PTR [rip+0x20dba5],0x0        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    2603:	je     2822 <__cxa_finalize@plt+0x8b2>
    2609:	xor    eax,eax
    260b:	cmp    BYTE PTR [rip+0x20dbfe],0x0        # 210210 <stderr@@GLIBC_2.2.5+0x130>
    2612:	jne    2b10 <__cxa_finalize@plt+0xba0>
    2618:	mov    r9,QWORD PTR [rip+0x20dbb1]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    261f:	mov    r10,QWORD PTR [rip+0x20dbb2]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    2626:	lea    r11,[rip+0xa793]        # cdc0 <_IO_stdin_used@@Base+0x18e0>
    262d:	mov    QWORD PTR [rip+0x20dbd4],rax        # 210208 <stderr@@GLIBC_2.2.5+0x128>
    2634:	xor    edi,edi
    2636:	mov    r8d,0x1
    263c:	cmp    rdi,r9
    263f:	je     28f2 <__cxa_finalize@plt+0x982>
    2645:	imul   rax,rdi,0x28
    2649:	movsxd r8,r8d
    264c:	mov    eax,DWORD PTR [r10+rax*1+0x4]
    2651:	movsxd rsi,DWORD PTR [r11+rax*4]
    2655:	mov    rax,r8
    2658:	mov    rcx,rsi
    265b:	jmp    2663 <__cxa_finalize@plt+0x6f3>
    265d:	nop    DWORD PTR [rax]
    2660:	mov    rcx,rdx
    2663:	xor    edx,edx
    2665:	div    rcx
    2668:	mov    rax,rcx
    266b:	test   rdx,rdx
    266e:	jne    2660 <__cxa_finalize@plt+0x6f0>
    2670:	mov    rax,rsi
    2673:	xor    edx,edx
    2675:	add    rdi,0x1
    2679:	div    rcx
    267c:	imul   r8d,eax
    2680:	jmp    263c <__cxa_finalize@plt+0x6cc>
    2682:	cmp    r15b,0x64
    2686:	jne    30cc <__cxa_finalize@plt+0x115c>
    268c:	lea    rax,[rip+0xc0d]        # 32a0 <__cxa_finalize@plt+0x1330>
    2693:	mov    DWORD PTR [rip+0x20db87],0xa        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    269d:	mov    DWORD PTR [rip+0x20db79],0x7        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    26a7:	mov    r15d,0x1
    26ad:	mov    QWORD PTR [rip+0x20db4c],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    26b4:	jmp    20e0 <__cxa_finalize@plt+0x170>
    26b9:	lea    rax,[rip+0xbe0]        # 32a0 <__cxa_finalize@plt+0x1330>
    26c0:	mov    DWORD PTR [rip+0x20db5a],0x8        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    26ca:	mov    DWORD PTR [rip+0x20db4c],0x7        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    26d4:	mov    r15d,0x1
    26da:	mov    QWORD PTR [rip+0x20db1f],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    26e1:	jmp    20e0 <__cxa_finalize@plt+0x170>
    26e6:	mov    eax,0x1
    26eb:	mov    rbx,QWORD PTR [rsp+0x48]
    26f0:	xor    rbx,QWORD PTR fs:0x28
    26f9:	jne    30c7 <__cxa_finalize@plt+0x1157>
    26ff:	add    rsp,0x58
    2703:	pop    rbx
    2704:	pop    rbp
    2705:	pop    r12
    2707:	pop    r13
    2709:	pop    r14
    270b:	pop    r15
    270d:	ret    
    270e:	mov    eax,0x2
    2713:	xor    ecx,ecx
    2715:	mul    rdi
    2718:	jo     307f <__cxa_finalize@plt+0x110f>
    271e:	test   rax,rax
    2721:	js     307a <__cxa_finalize@plt+0x110a>
    2727:	test   rcx,rcx
    272a:	jne    307a <__cxa_finalize@plt+0x110a>
    2730:	add    rdi,rdi
    2733:	call   8250 <__cxa_finalize@plt+0x62e0>
    2738:	movzx  ebx,BYTE PTR [rip+0x20dab1]        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    273f:	mov    rdi,QWORD PTR [rip+0x20da7a]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2746:	mov    QWORD PTR [rsp+0x30],rax
    274b:	mov    r14,QWORD PTR [rip+0x20daa6]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2752:	add    rax,rdi
    2755:	test   bl,bl
    2757:	mov    QWORD PTR [rsp+0x38],rax
    275c:	je     2ce0 <__cxa_finalize@plt+0xd70>
    2762:	lea    r12,[rsp+0x28]
    2767:	mov    BYTE PTR [rsp],r13b
    276b:	jmp    27cb <__cxa_finalize@plt+0x85b>
    276d:	movzx  edx,bpl
    2771:	mov    rdi,QWORD PTR [rip+0x20da48]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2778:	sub    rax,r14
    277b:	mov    r13,QWORD PTR [rsp+rdx*8+0x30]
    2780:	mov    r15,rdx
    2783:	mov    rdx,r12
    2786:	cmp    rax,rdi
    2789:	cmovbe rdi,rax
    278d:	mov    rsi,r13
    2790:	call   50b0 <__cxa_finalize@plt+0x3140>
    2795:	mov    rsi,QWORD PTR [rsp+0x28]
    279a:	and    ebx,eax
    279c:	cmp    rsi,QWORD PTR [rip+0x20da1d]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    27a3:	jb     2d45 <__cxa_finalize@plt+0xdd5>
    27a9:	jne    3089 <__cxa_finalize@plt+0x1119>
    27af:	xor    ebp,0x1
    27b2:	mov    rdi,r14
    27b5:	mov    rcx,r13
    27b8:	movzx  eax,bpl
    27bc:	mov    rdx,QWORD PTR [rsp+rax*8+0x30]
    27c1:	call   4d50 <__cxa_finalize@plt+0x2de0>
    27c6:	add    r14,QWORD PTR [rsp+0x28]
    27cb:	mov    rax,QWORD PTR [rip+0x20da0e]        # 2101e0 <stderr@@GLIBC_2.2.5+0x100>
    27d2:	cmp    rax,r14
    27d5:	ja     276d <__cxa_finalize@plt+0x7fd>
    27d7:	movzx  r13d,BYTE PTR [rsp]
    27dc:	mov    QWORD PTR [rsp+0x28],0x0
    27e5:	mov    esi,0xa
    27ea:	mov    rdi,r14
    27ed:	call   QWORD PTR [rip+0x20da0d]        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    27f3:	cmp    BYTE PTR [rip+0x20d9f6],0x0        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    27fa:	je     280e <__cxa_finalize@plt+0x89e>
    27fc:	cmp    r14,QWORD PTR [rip+0x20d9dd]        # 2101e0 <stderr@@GLIBC_2.2.5+0x100>
    2803:	jb     280e <__cxa_finalize@plt+0x89e>
    2805:	xor    edi,edi
    2807:	call   48a0 <__cxa_finalize@plt+0x2930>
    280c:	and    ebx,eax
    280e:	mov    rdi,QWORD PTR [rsp+0x30]
    2813:	movzx  ebx,bl
    2816:	call   1b80 <free@plt>
    281b:	and    r13d,ebx
    281e:	and    r13d,0x1
    2822:	cmp    BYTE PTR [rip+0x20d97b],0x0        # 2101a4 <stderr@@GLIBC_2.2.5+0xc4>
    2829:	jne    2a84 <__cxa_finalize@plt+0xb14>
    282f:	xor    r13d,0x1
    2833:	movzx  eax,r13b
    2837:	jmp    26eb <__cxa_finalize@plt+0x77b>
    283c:	lea    rax,[rip+0xa4d]        # 3290 <__cxa_finalize@plt+0x1320>
    2843:	mov    DWORD PTR [rip+0x20d9d3],0x0        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    284d:	mov    r15d,0x1
    2853:	mov    QWORD PTR [rip+0x20d9a6],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    285a:	jmp    20e0 <__cxa_finalize@plt+0x170>
    285f:	cmp    r14d,0x2
    2863:	je     2c30 <__cxa_finalize@plt+0xcc0>
    2869:	cmp    r14d,0x3
    286d:	je     2bc6 <__cxa_finalize@plt+0xc56>
    2873:	cmp    r14d,0x1
    2877:	je     2db5 <__cxa_finalize@plt+0xe45>
    287d:	cmp    r14d,0x1
    2881:	jle    2552 <__cxa_finalize@plt+0x5e2>
    2887:	test   dl,dl
    2889:	je     2552 <__cxa_finalize@plt+0x5e2>
    288f:	mov    rdi,QWORD PTR [r13+rax*8+0x8]
    2894:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    2899:	lea    rsi,[rip+0x8e02]        # b6a2 <_IO_stdin_used@@Base+0x1c2>
    28a0:	mov    rbx,rax
    28a3:	mov    edx,0x5
    28a8:	xor    edi,edi
    28aa:	call   1c60 <dcgettext@plt>
    28af:	mov    rcx,rbx
    28b2:	mov    rdx,rax
    28b5:	xor    esi,esi
    28b7:	xor    edi,edi
    28b9:	xor    eax,eax
    28bb:	call   1ea0 <error@plt>
    28c0:	lea    rsi,[rip+0x9e29]        # c6f0 <_IO_stdin_used@@Base+0x1210>
    28c7:	mov    edx,0x5
    28cc:	xor    edi,edi
    28ce:	call   1c60 <dcgettext@plt>
    28d3:	lea    rdx,[rip+0xa6e6]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    28da:	mov    rcx,rax
    28dd:	xor    esi,esi
    28df:	xor    edi,edi
    28e1:	xor    eax,eax
    28e3:	call   1ea0 <error@plt>
    28e8:	mov    edi,0x1
    28ed:	call   5180 <__cxa_finalize@plt+0x3210>
    28f2:	cmp    BYTE PTR [rsp],0x0
    28f6:	jne    2b98 <__cxa_finalize@plt+0xc28>
    28fc:	cmp    r8d,0xf
    2900:	jg     2e6f <__cxa_finalize@plt+0xeff>
    2906:	mov    eax,0x10
    290b:	cdq    
    290c:	idiv   r8d
    290f:	imul   eax,r8d
    2913:	cdqe   
    2915:	mov    QWORD PTR [rip+0x20d8a4],rax        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    291c:	imul   r9,r9,0x28
    2920:	lea    rcx,[r10+0x4]
    2924:	mov    rdi,QWORD PTR [rip+0x20d895]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    292b:	xor    r8d,r8d
    292e:	mov    rsi,rcx
    2931:	lea    r9,[r10+r9*1+0x4]
    2936:	lea    r10,[rip+0xa483]        # cdc0 <_IO_stdin_used@@Base+0x18e0>
    293d:	jmp    2963 <__cxa_finalize@plt+0x9f3>
    293f:	mov    eax,DWORD PTR [rsi]
    2941:	xor    edx,edx
    2943:	movsxd r11,DWORD PTR [r10+rax*4]
    2947:	mov    rax,rdi
    294a:	div    r11
    294d:	mov    edx,DWORD PTR [rsi+0x18]
    2950:	add    edx,0x1
    2953:	imul   eax,edx
    2956:	cdqe   
    2958:	cmp    r8,rax
    295b:	cmovb  r8,rax
    295f:	add    rsi,0x28
    2963:	cmp    r9,rsi
    2966:	jne    293f <__cxa_finalize@plt+0x9cf>
    2968:	lea    r10,[rip+0xa451]        # cdc0 <_IO_stdin_used@@Base+0x18e0>
    296f:	jmp    298f <__cxa_finalize@plt+0xa1f>
    2971:	mov    eax,DWORD PTR [rcx]
    2973:	xor    edx,edx
    2975:	add    rcx,0x28
    2979:	movsxd r9,DWORD PTR [r10+rax*4]
    297d:	mov    rax,rdi
    2980:	div    r9
    2983:	mov    edx,r8d
    2986:	imul   eax,DWORD PTR [rcx-0x10]
    298a:	sub    edx,eax
    298c:	mov    DWORD PTR [rcx-0xc],edx
    298f:	cmp    rsi,rcx
    2992:	jne    2971 <__cxa_finalize@plt+0xa01>
    2994:	movzx  ebp,BYTE PTR [rip+0x20d877]        # 210212 <stderr@@GLIBC_2.2.5+0x132>
    299b:	test   bpl,bpl
    299e:	je     270e <__cxa_finalize@plt+0x79e>
    29a4:	cmp    QWORD PTR [rip+0x20d86c],0x64        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    29ac:	mov    edi,0x64
    29b1:	cmovae rdi,QWORD PTR [rip+0x20d85f]        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    29b9:	mov    QWORD PTR [rsp+0x28],rdi
    29be:	call   8250 <__cxa_finalize@plt+0x62e0>
    29c3:	mov    r14,QWORD PTR [rip+0x20d82e]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    29ca:	mov    QWORD PTR [rsp],rax
    29ce:	lea    rax,[rsp+0x28]
    29d3:	mov    BYTE PTR [rsp+0x8],r13b
    29d8:	mov    QWORD PTR [rsp+0x10],rax
    29dd:	cmp    BYTE PTR [rip+0x20d80c],0x0        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    29e4:	je     2a09 <__cxa_finalize@plt+0xa99>
    29e6:	mov    rdx,QWORD PTR [rip+0x20d82b]        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    29ed:	mov    rax,QWORD PTR [rip+0x20d7ec]        # 2101e0 <stderr@@GLIBC_2.2.5+0x100>
    29f4:	cmp    rax,rdx
    29f7:	jb     2fb2 <__cxa_finalize@plt+0x1042>
    29fd:	sub    rax,rdx
    2a00:	cmp    rax,r14
    2a03:	jbe    2fb2 <__cxa_finalize@plt+0x1042>
    2a09:	mov    r13,QWORD PTR [rsp]
    2a0d:	mov    r12,r14
    2a10:	sub    r13,r14
    2a13:	jmp    2a4c <__cxa_finalize@plt+0xadc>
    2a15:	mov    rdi,rbx
    2a18:	add    r12,0x1
    2a1c:	call   4cf0 <__cxa_finalize@plt+0x2d80>
    2a21:	mov    r15d,DWORD PTR [rsp+0x20]
    2a26:	and    ebp,eax
    2a28:	test   r15d,r15d
    2a2b:	js     2c53 <__cxa_finalize@plt+0xce3>
    2a31:	call   1f50 <__ctype_b_loc@plt>
    2a36:	mov    rsi,QWORD PTR [rax]
    2a39:	movsxd rcx,r15d
    2a3c:	test   BYTE PTR [rsi+rcx*2+0x1],0x40
    2a41:	je     2c28 <__cxa_finalize@plt+0xcb8>
    2a47:	mov    BYTE PTR [r13+r12*1-0x1],r15b
    2a4c:	mov    rax,r12
    2a4f:	sub    rax,r14
    2a52:	cmp    QWORD PTR [rip+0x20d7bf],rax        # 210218 <stderr@@GLIBC_2.2.5+0x138>
    2a59:	ja     2a15 <__cxa_finalize@plt+0xaa5>
    2a5b:	jmp    2b73 <__cxa_finalize@plt+0xc03>
    2a60:	lea    rax,[rip+0x20d0d9]        # 20fb40 <version_etc_copyright@@Base+0x2022c0>
    2a67:	mov    QWORD PTR [rip+0x20d742],rax        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    2a6e:	jmp    25d6 <__cxa_finalize@plt+0x666>
    2a73:	lea    rdi,[rip+0x8c39]        # b6b3 <_IO_stdin_used@@Base+0x1d3>
    2a7a:	call   3eb0 <__cxa_finalize@plt+0x1f40>
    2a7f:	jmp    25ba <__cxa_finalize@plt+0x64a>
    2a84:	mov    rdi,QWORD PTR [rip+0x20d625]        # 2100b0 <stdin@@GLIBC_2.2.5>
    2a8b:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    2a90:	add    eax,0x1
    2a93:	jne    282f <__cxa_finalize@plt+0x8bf>
    2a99:	lea    rsi,[rip+0x8af8]        # b598 <_IO_stdin_used@@Base+0xb8>
    2aa0:	mov    edx,0x5
    2aa5:	xor    edi,edi
    2aa7:	call   1c60 <dcgettext@plt>
    2aac:	mov    rbx,rax
    2aaf:	call   1ba0 <__errno_location@plt>
    2ab4:	mov    esi,DWORD PTR [rax]
    2ab6:	mov    rdx,rbx
    2ab9:	mov    edi,0x1
    2abe:	xor    eax,eax
    2ac0:	call   1ea0 <error@plt>
    2ac5:	cmp    r14d,0x2
    2ac9:	je     2c30 <__cxa_finalize@plt+0xcc0>
    2acf:	cmp    r14d,0x3
    2ad3:	je     2bc6 <__cxa_finalize@plt+0xc56>
    2ad9:	cmp    r14d,0x1
    2add:	jne    287d <__cxa_finalize@plt+0x90d>
    2ae3:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
    2ae8:	mov    rsi,rbx
    2aeb:	call   33d0 <__cxa_finalize@plt+0x1460>
    2af0:	test   al,al
    2af2:	je     2dcb <__cxa_finalize@plt+0xe5b>
    2af8:	mov    rax,QWORD PTR [rsp+0x20]
    2afd:	add    r13,0x8
    2b01:	xor    r14d,r14d
    2b04:	mov    QWORD PTR [rip+0x20d6ed],rax        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2b0b:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    2b10:	mov    rax,QWORD PTR [rsp+0x18]
    2b15:	sub    rax,QWORD PTR [rip+0x20d6dc]        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2b1c:	jmp    2618 <__cxa_finalize@plt+0x6a8>
    2b21:	mov    rsi,QWORD PTR [rsp+0x10]
    2b26:	mov    rdi,QWORD PTR [rsp]
    2b2a:	call   83b0 <__cxa_finalize@plt+0x6440>
    2b2f:	mov    QWORD PTR [rsp],rax
    2b33:	mov    rdi,rbx
    2b36:	add    r12,0x1
    2b3a:	call   4cf0 <__cxa_finalize@plt+0x2d80>
    2b3f:	mov    r15d,DWORD PTR [rsp+0x20]
    2b44:	and    ebp,eax
    2b46:	test   r15d,r15d
    2b49:	js     2c53 <__cxa_finalize@plt+0xce3>
    2b4f:	je     2e89 <__cxa_finalize@plt+0xf19>
    2b55:	call   1f50 <__ctype_b_loc@plt>
    2b5a:	mov    rsi,QWORD PTR [rax]
    2b5d:	movsxd rdx,r15d
    2b60:	test   BYTE PTR [rsi+rdx*2+0x1],0x40
    2b65:	je     2c28 <__cxa_finalize@plt+0xcb8>
    2b6b:	mov    rax,QWORD PTR [rsp]
    2b6f:	mov    BYTE PTR [rax+r13*1],r15b
    2b73:	mov    r13,r12
    2b76:	sub    r13,r14
    2b79:	cmp    BYTE PTR [rip+0x20d670],0x0        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    2b80:	je     2b8f <__cxa_finalize@plt+0xc1f>
    2b82:	cmp    r12,QWORD PTR [rip+0x20d657]        # 2101e0 <stderr@@GLIBC_2.2.5+0x100>
    2b89:	jae    2e89 <__cxa_finalize@plt+0xf19>
    2b8f:	cmp    r13,QWORD PTR [rsp+0x28]
    2b94:	jne    2b33 <__cxa_finalize@plt+0xbc3>
    2b96:	jmp    2b21 <__cxa_finalize@plt+0xbb1>
    2b98:	mov    rsi,QWORD PTR [rsp+0x10]
    2b9d:	movsxd rbp,r8d
    2ba0:	test   rsi,rsi
    2ba3:	mov    rax,rsi
    2ba6:	je     2dd6 <__cxa_finalize@plt+0xe66>
    2bac:	xor    edx,edx
    2bae:	div    rbp
    2bb1:	test   rdx,rdx
    2bb4:	jne    2dd6 <__cxa_finalize@plt+0xe66>
    2bba:	mov    QWORD PTR [rip+0x20d5ff],rsi        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2bc1:	jmp    291c <__cxa_finalize@plt+0x9ac>
    2bc6:	test   dl,dl
    2bc8:	mov    r14d,0x3
    2bce:	je     2552 <__cxa_finalize@plt+0x5e2>
    2bd4:	mov    rdi,QWORD PTR [r13+rax*8+0x8]
    2bd9:	mov    rsi,rbx
    2bdc:	call   33d0 <__cxa_finalize@plt+0x1460>
    2be1:	test   al,al
    2be3:	jne    2fcf <__cxa_finalize@plt+0x105f>
    2be9:	mov    r14d,0x3
    2bef:	cmp    BYTE PTR [rip+0x20d61b],0x0        # 210211 <stderr@@GLIBC_2.2.5+0x131>
    2bf6:	je     2552 <__cxa_finalize@plt+0x5e2>
    2bfc:	movsxd rax,DWORD PTR [rip+0x20d4b5]        # 2100b8 <optind@@GLIBC_2.2.5>
    2c03:	jmp    288f <__cxa_finalize@plt+0x91f>
    2c08:	xor    edi,edi
    2c0a:	call   5180 <__cxa_finalize@plt+0x3210>
    2c0f:	mov    rax,QWORD PTR [rcx+0x28]
    2c13:	cmp    rax,QWORD PTR [rcx+0x30]
    2c17:	jae    302a <__cxa_finalize@plt+0x10ba>
    2c1d:	lea    rdx,[rax+0x1]
    2c21:	mov    QWORD PTR [rcx+0x28],rdx
    2c25:	mov    BYTE PTR [rax],0xa
    2c28:	mov    r14,r12
    2c2b:	jmp    29dd <__cxa_finalize@plt+0xa6d>
    2c30:	test   dl,dl
    2c32:	mov    rdi,QWORD PTR [r13+rax*8+0x8]
    2c37:	jne    2c6b <__cxa_finalize@plt+0xcfb>
    2c39:	movsx  eax,BYTE PTR [rdi]
    2c3c:	cmp    al,0x2b
    2c3e:	je     2c6b <__cxa_finalize@plt+0xcfb>
    2c40:	sub    eax,0x30
    2c43:	cmp    eax,0x9
    2c46:	jbe    2c6b <__cxa_finalize@plt+0xcfb>
    2c48:	mov    r14d,0x2
    2c4e:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    2c53:	mov    rdi,QWORD PTR [rsp]
    2c57:	movzx  r13d,BYTE PTR [rsp+0x8]
    2c5d:	call   1b80 <free@plt>
    2c62:	movzx  ebx,bpl
    2c66:	jmp    281b <__cxa_finalize@plt+0x8ab>
    2c6b:	lea    rax,[rsp+0x28]
    2c70:	mov    rsi,rax
    2c73:	call   33d0 <__cxa_finalize@plt+0x1460>
    2c78:	test   al,al
    2c7a:	je     2e7e <__cxa_finalize@plt+0xf0e>
    2c80:	cmp    BYTE PTR [rip+0x20d58a],0x0        # 210211 <stderr@@GLIBC_2.2.5+0x131>
    2c87:	jne    2f6d <__cxa_finalize@plt+0xffd>
    2c8d:	mov    rax,QWORD PTR [rsp+0x28]
    2c92:	mov    r14d,0x1
    2c98:	mov    QWORD PTR [rip+0x20d559],rax        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2c9f:	movsxd rax,DWORD PTR [rip+0x20d412]        # 2100b8 <optind@@GLIBC_2.2.5>
    2ca6:	mov    rdx,QWORD PTR [r13+rax*8+0x0]
    2cab:	mov    QWORD PTR [r13+rax*8+0x8],rdx
    2cb0:	add    r13,0x8
    2cb4:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    2cb9:	lea    rax,[rip+0x2340]        # 5000 <__cxa_finalize@plt+0x3090>
    2cc0:	mov    DWORD PTR [rip+0x20d55a],0x8        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    2cca:	mov    DWORD PTR [rip+0x20d54c],0x7        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    2cd4:	mov    QWORD PTR [rip+0x20d525],rax        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    2cdb:	jmp    257d <__cxa_finalize@plt+0x60d>
    2ce0:	lea    rax,[rsp+0x28]
    2ce5:	mov    ebx,r12d
    2ce8:	xor    ebp,ebp
    2cea:	xor    r15d,r15d
    2ced:	mov    BYTE PTR [rsp],r13b
    2cf1:	mov    r12,rax
    2cf4:	jmp    2d22 <__cxa_finalize@plt+0xdb2>
    2cf6:	jne    30a8 <__cxa_finalize@plt+0x1138>
    2cfc:	xor    ebp,0x1
    2cff:	mov    rdi,r14
    2d02:	mov    rcx,r13
    2d05:	movzx  eax,bpl
    2d09:	mov    rdx,QWORD PTR [rsp+rax*8+0x30]
    2d0e:	mov    r15,rax
    2d11:	call   4d50 <__cxa_finalize@plt+0x2de0>
    2d16:	add    r14,QWORD PTR [rsp+0x28]
    2d1b:	mov    rdi,QWORD PTR [rip+0x20d49e]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2d22:	movsxd rax,r15d
    2d25:	mov    rdx,r12
    2d28:	mov    r13,QWORD PTR [rsp+rax*8+0x30]
    2d2d:	mov    rsi,r13
    2d30:	call   50b0 <__cxa_finalize@plt+0x3140>
    2d35:	mov    rsi,QWORD PTR [rsp+0x28]
    2d3a:	and    ebx,eax
    2d3c:	cmp    rsi,QWORD PTR [rip+0x20d47d]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2d43:	jae    2cf6 <__cxa_finalize@plt+0xd86>
    2d45:	test   rsi,rsi
    2d48:	movzx  r13d,BYTE PTR [rsp]
    2d4d:	mov    r8,rsi
    2d50:	je     27e5 <__cxa_finalize@plt+0x875>
    2d56:	mov    r10,QWORD PTR [rip+0x20d473]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    2d5d:	mov    r12,QWORD PTR [rip+0x20d474]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    2d64:	lea    r11,[rip+0xa055]        # cdc0 <_IO_stdin_used@@Base+0x18e0>
    2d6b:	xor    r9d,r9d
    2d6e:	mov    esi,0x1
    2d73:	cmp    r9,r10
    2d76:	movsxd rsi,esi
    2d79:	je     2e1e <__cxa_finalize@plt+0xeae>
    2d7f:	imul   rax,r9,0x28
    2d83:	mov    eax,DWORD PTR [r12+rax*1+0x4]
    2d88:	movsxd rdi,DWORD PTR [r11+rax*4]
    2d8c:	mov    rax,rsi
    2d8f:	mov    rcx,rdi
    2d92:	jmp    2d97 <__cxa_finalize@plt+0xe27>
    2d94:	mov    rcx,rdx
    2d97:	xor    edx,edx
    2d99:	div    rcx
    2d9c:	mov    rax,rcx
    2d9f:	test   rdx,rdx
    2da2:	jne    2d94 <__cxa_finalize@plt+0xe24>
    2da4:	mov    rax,rdi
    2da7:	xor    edx,edx
    2da9:	add    r9,0x1
    2dad:	div    rcx
    2db0:	imul   esi,eax
    2db3:	jmp    2d73 <__cxa_finalize@plt+0xe03>
    2db5:	test   dl,dl
    2db7:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
    2dbc:	jne    2ae3 <__cxa_finalize@plt+0xb73>
    2dc2:	cmp    BYTE PTR [rcx],0x2b
    2dc5:	je     2ae3 <__cxa_finalize@plt+0xb73>
    2dcb:	mov    r14d,0x1
    2dd1:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    2dd6:	lea    rsi,[rip+0x996b]        # c748 <_IO_stdin_used@@Base+0x1268>
    2ddd:	mov    edx,0x5
    2de2:	xor    edi,edi
    2de4:	mov    DWORD PTR [rsp],r8d
    2de8:	call   1c60 <dcgettext@plt>
    2ded:	mov    r8d,DWORD PTR [rsp]
    2df1:	mov    rcx,QWORD PTR [rsp+0x10]
    2df6:	mov    rdx,rax
    2df9:	xor    esi,esi
    2dfb:	xor    edi,edi
    2dfd:	xor    eax,eax
    2dff:	call   1ea0 <error@plt>
    2e04:	mov    QWORD PTR [rip+0x20d3b5],rbp        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2e0b:	mov    r9,QWORD PTR [rip+0x20d3be]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    2e12:	mov    r10,QWORD PTR [rip+0x20d3bf]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    2e19:	jmp    291c <__cxa_finalize@plt+0x9ac>
    2e1e:	lea    rax,[rsi+r8*1-0x1]
    2e23:	xor    edx,edx
    2e25:	mov    r12,QWORD PTR [rsp+r15*8+0x30]
    2e2a:	mov    QWORD PTR [rsp],r8
    2e2e:	div    rsi
    2e31:	lea    rdi,[r12+r8*1]
    2e35:	imul   rax,rsi
    2e39:	xor    esi,esi
    2e3b:	sub    rax,r8
    2e3e:	mov    rdx,rax
    2e41:	call   1d30 <memset@plt>
    2e46:	mov    eax,ebp
    2e48:	mov    r8,QWORD PTR [rsp]
    2e4c:	mov    rdi,r14
    2e4f:	xor    eax,0x1
    2e52:	mov    rcx,r12
    2e55:	movzx  eax,al
    2e58:	mov    rdx,QWORD PTR [rsp+rax*8+0x30]
    2e5d:	mov    rsi,r8
    2e60:	call   4d50 <__cxa_finalize@plt+0x2de0>
    2e65:	add    r14,QWORD PTR [rsp+0x28]
    2e6a:	jmp    27e5 <__cxa_finalize@plt+0x875>
    2e6f:	movsxd r8,r8d
    2e72:	mov    QWORD PTR [rip+0x20d347],r8        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    2e79:	jmp    291c <__cxa_finalize@plt+0x9ac>
    2e7e:	mov    r14d,0x2
    2e84:	jmp    2bef <__cxa_finalize@plt+0xc7f>
    2e89:	mov    r15,QWORD PTR [rsp]
    2e8d:	mov    rdi,r13
    2e90:	mov    esi,0x20
    2e95:	not    rdi
    2e98:	add    rdi,r12
    2e9b:	mov    BYTE PTR [r15+r13*1],0x0
    2ea0:	mov    r13,r15
    2ea3:	call   QWORD PTR [rip+0x20d357]        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    2ea9:	movzx  eax,BYTE PTR [r13+0x0]
    2eae:	mov    rcx,QWORD PTR [rip+0x20d1f3]        # 2100a8 <stdout@@GLIBC_2.2.5>
    2eb5:	movsx  edx,al
    2eb8:	test   edx,edx
    2eba:	mov    DWORD PTR [rsp+0x20],edx
    2ebe:	je     2c0f <__cxa_finalize@plt+0xc9f>
    2ec4:	lea    edx,[rax-0x7]
    2ec7:	cmp    dl,0x6
    2eca:	ja     2f53 <__cxa_finalize@plt+0xfe3>
    2ed0:	lea    rsi,[rip+0x9d8d]        # cc64 <_IO_stdin_used@@Base+0x1784>
    2ed7:	movzx  edx,dl
    2eda:	movsxd rax,DWORD PTR [rsi+rdx*4]
    2ede:	mov    edx,0x2
    2ee3:	add    rax,rsi
    2ee6:	mov    esi,0x1
    2eeb:	jmp    rax
    2eed:	lea    rdi,[rip+0x867a]        # b56e <_IO_stdin_used@@Base+0x8e>
    2ef4:	call   1e30 <fwrite_unlocked@plt>
    2ef9:	add    r13,0x1
    2efd:	jmp    2ea9 <__cxa_finalize@plt+0xf39>
    2eff:	lea    rdi,[rip+0x8674]        # b57a <_IO_stdin_used@@Base+0x9a>
    2f06:	call   1e30 <fwrite_unlocked@plt>
    2f0b:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f0d:	lea    rdi,[rip+0x865d]        # b571 <_IO_stdin_used@@Base+0x91>
    2f14:	call   1e30 <fwrite_unlocked@plt>
    2f19:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f1b:	lea    rdi,[rip+0x8655]        # b577 <_IO_stdin_used@@Base+0x97>
    2f22:	call   1e30 <fwrite_unlocked@plt>
    2f27:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f29:	lea    rdi,[rip+0x863b]        # b56b <_IO_stdin_used@@Base+0x8b>
    2f30:	call   1e30 <fwrite_unlocked@plt>
    2f35:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f37:	lea    rdi,[rip+0x862a]        # b568 <_IO_stdin_used@@Base+0x88>
    2f3e:	call   1e30 <fwrite_unlocked@plt>
    2f43:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f45:	lea    rdi,[rip+0x8628]        # b574 <_IO_stdin_used@@Base+0x94>
    2f4c:	call   1e30 <fwrite_unlocked@plt>
    2f51:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f53:	mov    rdx,QWORD PTR [rcx+0x28]
    2f57:	cmp    rdx,QWORD PTR [rcx+0x30]
    2f5b:	jae    303c <__cxa_finalize@plt+0x10cc>
    2f61:	lea    rsi,[rdx+0x1]
    2f65:	mov    QWORD PTR [rcx+0x28],rsi
    2f69:	mov    BYTE PTR [rdx],al
    2f6b:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    2f6d:	movsxd rax,DWORD PTR [rip+0x20d144]        # 2100b8 <optind@@GLIBC_2.2.5>
    2f74:	mov    rsi,rbx
    2f77:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
    2f7c:	call   33d0 <__cxa_finalize@plt+0x1460>
    2f81:	test   al,al
    2f83:	je     2c8d <__cxa_finalize@plt+0xd1d>
    2f89:	mov    rax,QWORD PTR [rsp+0x20]
    2f8e:	mov    BYTE PTR [rip+0x20d27b],0x1        # 210210 <stderr@@GLIBC_2.2.5+0x130>
    2f95:	add    r13,0x10
    2f99:	xor    r14d,r14d
    2f9c:	mov    QWORD PTR [rip+0x20d255],rax        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    2fa3:	mov    rax,QWORD PTR [rsp+0x28]
    2fa8:	mov    QWORD PTR [rsp+0x18],rax
    2fad:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    2fb2:	mov    rdi,QWORD PTR [rsp]
    2fb6:	movzx  r13d,BYTE PTR [rsp+0x8]
    2fbc:	call   1b80 <free@plt>
    2fc1:	xor    edi,edi
    2fc3:	call   48a0 <__cxa_finalize@plt+0x2930>
    2fc8:	and    ebp,eax
    2fca:	jmp    2c62 <__cxa_finalize@plt+0xcf2>
    2fcf:	movsxd rax,DWORD PTR [rip+0x20d0e2]        # 2100b8 <optind@@GLIBC_2.2.5>
    2fd6:	lea    rsi,[rsp+0x28]
    2fdb:	mov    rdi,QWORD PTR [r13+rax*8+0x10]
    2fe0:	call   33d0 <__cxa_finalize@plt+0x1460>
    2fe5:	test   al,al
    2fe7:	je     2be9 <__cxa_finalize@plt+0xc79>
    2fed:	mov    rax,QWORD PTR [rsp+0x20]
    2ff2:	mov    BYTE PTR [rip+0x20d217],0x1        # 210210 <stderr@@GLIBC_2.2.5+0x130>
    2ff9:	mov    r14d,0x1
    2fff:	mov    QWORD PTR [rip+0x20d1f2],rax        # 2101f8 <stderr@@GLIBC_2.2.5+0x118>
    3006:	mov    rax,QWORD PTR [rsp+0x28]
    300b:	mov    QWORD PTR [rsp+0x18],rax
    3010:	movsxd rax,DWORD PTR [rip+0x20d0a1]        # 2100b8 <optind@@GLIBC_2.2.5>
    3017:	mov    rdx,QWORD PTR [r13+rax*8+0x0]
    301c:	mov    QWORD PTR [r13+rax*8+0x10],rdx
    3021:	add    r13,0x10
    3025:	jmp    2552 <__cxa_finalize@plt+0x5e2>
    302a:	mov    esi,0xa
    302f:	mov    rdi,rcx
    3032:	call   1cd0 <__overflow@plt>
    3037:	jmp    2c28 <__cxa_finalize@plt+0xcb8>
    303c:	movzx  esi,al
    303f:	mov    rdi,rcx
    3042:	call   1cd0 <__overflow@plt>
    3047:	jmp    2ef9 <__cxa_finalize@plt+0xf89>
    304c:	lea    rsi,[rip+0x96cd]        # c720 <_IO_stdin_used@@Base+0x1240>
    3053:	mov    edx,0x5
    3058:	xor    edi,edi
    305a:	call   1c60 <dcgettext@plt>
    305f:	xor    esi,esi
    3061:	mov    rdx,rax
    3064:	mov    edi,0x1
    3069:	xor    eax,eax
    306b:	call   1ea0 <error@plt>
    3070:	mov    edx,0x1
    3075:	jmp    259c <__cxa_finalize@plt+0x62c>
    307a:	call   84a0 <__cxa_finalize@plt+0x6530>
    307f:	mov    ecx,0x1
    3084:	jmp    271e <__cxa_finalize@plt+0x7ae>
    3089:	lea    rcx,[rip+0x9bfb]        # cc8b <_IO_stdin_used@@Base+0x17ab>
    3090:	lea    rsi,[rip+0x8475]        # b50c <_IO_stdin_used@@Base+0x2c>
    3097:	lea    rdi,[rip+0x96da]        # c778 <_IO_stdin_used@@Base+0x1298>
    309e:	mov    edx,0x575
    30a3:	call   1d00 <__assert_fail@plt>
    30a8:	lea    rcx,[rip+0x9bdc]        # cc8b <_IO_stdin_used@@Base+0x17ab>
    30af:	lea    rsi,[rip+0x8456]        # b50c <_IO_stdin_used@@Base+0x2c>
    30b6:	lea    rdi,[rip+0x96bb]        # c778 <_IO_stdin_used@@Base+0x1298>
    30bd:	mov    edx,0x583
    30c2:	call   1d00 <__assert_fail@plt>
    30c7:	call   1c90 <__stack_chk_fail@plt>
    30cc:	lea    rsi,[rip+0x95a5]        # c678 <_IO_stdin_used@@Base+0x1198>
    30d3:	mov    edx,0x5
    30d8:	xor    edi,edi
    30da:	call   1c60 <dcgettext@plt>
    30df:	movsx  ecx,r15b
    30e3:	mov    rdx,rax
    30e6:	xor    esi,esi
    30e8:	mov    edi,0x1
    30ed:	xor    eax,eax
    30ef:	call   1ea0 <error@plt>
    30f4:	mov    r8,QWORD PTR [rip+0x20cfc5]        # 2100c0 <optarg@@GLIBC_2.2.5>
    30fb:	mov    esi,DWORD PTR [rsp+0x20]
    30ff:	lea    rcx,[rip+0x20c89a]        # 20f9a0 <version_etc_copyright@@Base+0x202120>
    3106:	mov    edx,0x77
    310b:	mov    edi,eax
    310d:	call   8720 <__cxa_finalize@plt+0x67b0>
    3112:	lea    rsi,[rip+0x95a7]        # c6c0 <_IO_stdin_used@@Base+0x11e0>
    3119:	mov    edx,0x5
    311e:	xor    edi,edi
    3120:	call   1c60 <dcgettext@plt>
    3125:	xor    esi,esi
    3127:	mov    rdx,rax
    312a:	mov    edi,0x1
    312f:	xor    eax,eax
    3131:	call   1ea0 <error@plt>
    3136:	mov    r8,QWORD PTR [rip+0x20cf83]        # 2100c0 <optarg@@GLIBC_2.2.5>
    313d:	mov    esi,DWORD PTR [rsp+0x20]
    3141:	lea    rcx,[rip+0x20c858]        # 20f9a0 <version_etc_copyright@@Base+0x202120>
    3148:	mov    edx,0x6a
    314d:	mov    edi,eax
    314f:	call   8720 <__cxa_finalize@plt+0x67b0>
    3154:	mov    r8,QWORD PTR [rip+0x20cf65]        # 2100c0 <optarg@@GLIBC_2.2.5>
    315b:	mov    esi,DWORD PTR [rsp+0x20]
    315f:	lea    rcx,[rip+0x20c83a]        # 20f9a0 <version_etc_copyright@@Base+0x202120>
    3166:	mov    edx,0x53
    316b:	mov    edi,eax
    316d:	call   8720 <__cxa_finalize@plt+0x67b0>
    3172:	nop    WORD PTR cs:[rax+rax*1+0x0]
    317c:	nop    DWORD PTR [rax+0x0]
    3180:	xor    ebp,ebp
    3182:	mov    r9,rdx
    3185:	pop    rsi
    3186:	mov    rdx,rsp
    3189:	and    rsp,0xfffffffffffffff0
    318d:	push   rax
    318e:	push   rsp
    318f:	lea    r8,[rip+0x82ea]        # b480 <__cxa_finalize@plt+0x9510>
    3196:	lea    rcx,[rip+0x8273]        # b410 <__cxa_finalize@plt+0x94a0>
    319d:	lea    rdi,[rip+0xffffffffffffeddc]        # 1f80 <__cxa_finalize@plt+0x10>
    31a4:	call   QWORD PTR [rip+0x20ce2e]        # 20ffd8 <__libc_start_main@GLIBC_2.2.5>
    31aa:	hlt    
    31ab:	nop    DWORD PTR [rax+rax*1+0x0]
    31b0:	lea    rdi,[rip+0x20cee9]        # 2100a0 <__progname@@GLIBC_2.2.5>
    31b7:	push   rbp
    31b8:	lea    rax,[rip+0x20cee1]        # 2100a0 <__progname@@GLIBC_2.2.5>
    31bf:	cmp    rax,rdi
    31c2:	mov    rbp,rsp
    31c5:	je     31e0 <__cxa_finalize@plt+0x1270>
    31c7:	mov    rax,QWORD PTR [rip+0x20ce02]        # 20ffd0 <_ITM_deregisterTMCloneTable>
    31ce:	test   rax,rax
    31d1:	je     31e0 <__cxa_finalize@plt+0x1270>
    31d3:	pop    rbp
    31d4:	jmp    rax
    31d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    31e0:	pop    rbp
    31e1:	ret    
    31e2:	nop    DWORD PTR [rax+0x0]
    31e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    31f0:	lea    rdi,[rip+0x20cea9]        # 2100a0 <__progname@@GLIBC_2.2.5>
    31f7:	lea    rsi,[rip+0x20cea2]        # 2100a0 <__progname@@GLIBC_2.2.5>
    31fe:	push   rbp
    31ff:	sub    rsi,rdi
    3202:	mov    rbp,rsp
    3205:	sar    rsi,0x3
    3209:	mov    rax,rsi
    320c:	shr    rax,0x3f
    3210:	add    rsi,rax
    3213:	sar    rsi,1
    3216:	je     3230 <__cxa_finalize@plt+0x12c0>
    3218:	mov    rax,QWORD PTR [rip+0x20cdc9]        # 20ffe8 <_ITM_registerTMCloneTable>
    321f:	test   rax,rax
    3222:	je     3230 <__cxa_finalize@plt+0x12c0>
    3224:	pop    rbp
    3225:	jmp    rax
    3227:	nop    WORD PTR [rax+rax*1+0x0]
    3230:	pop    rbp
    3231:	ret    
    3232:	nop    DWORD PTR [rax+0x0]
    3236:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3240:	cmp    BYTE PTR [rip+0x20cea1],0x0        # 2100e8 <stderr@@GLIBC_2.2.5+0x8>
    3247:	jne    3278 <__cxa_finalize@plt+0x1308>
    3249:	cmp    QWORD PTR [rip+0x20cd9f],0x0        # 20fff0 <__cxa_finalize@GLIBC_2.2.5>
    3251:	push   rbp
    3252:	mov    rbp,rsp
    3255:	je     3263 <__cxa_finalize@plt+0x12f3>
    3257:	mov    rdi,QWORD PTR [rip+0x20cdaa]        # 210008 <quoting_style_args@@Base+0x4a8>
    325e:	call   1f70 <__cxa_finalize@plt>
    3263:	call   31b0 <__cxa_finalize@plt+0x1240>
    3268:	mov    BYTE PTR [rip+0x20ce79],0x1        # 2100e8 <stderr@@GLIBC_2.2.5+0x8>
    326f:	pop    rbp
    3270:	ret    
    3271:	nop    DWORD PTR [rax+0x0]
    3278:	repz ret 
    327a:	nop    WORD PTR [rax+rax*1+0x0]
    3280:	push   rbp
    3281:	mov    rbp,rsp
    3284:	pop    rbp
    3285:	jmp    31f0 <__cxa_finalize@plt+0x1280>
    328a:	nop    WORD PTR [rax+rax*1+0x0]
    3290:	repz ret 
    3292:	nop    DWORD PTR [rax+0x0]
    3296:	nop    WORD PTR cs:[rax+rax*1+0x0]
    32a0:	sub    rsp,0x38
    32a4:	mov    rcx,rdi
    32a7:	mov    rax,QWORD PTR fs:0x28
    32b0:	mov    QWORD PTR [rsp+0x28],rax
    32b5:	xor    eax,eax
    32b7:	movsxd rax,DWORD PTR [rip+0x20cf62]        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    32be:	lea    rdi,[rsp+0x17]
    32c3:	mov    BYTE PTR [rsp+0x17],sil
    32c8:	mov    BYTE PTR [rsp+0x18],0x0
    32cd:	mov    rsi,rdi
    32d0:	sub    rsi,rax
    32d3:	mov    eax,DWORD PTR [rip+0x20cf4b]        # 210224 <stderr@@GLIBC_2.2.5+0x144>
    32d9:	cmp    eax,0xa
    32dc:	je     3350 <__cxa_finalize@plt+0x13e0>
    32de:	cmp    eax,0x10
    32e1:	je     3390 <__cxa_finalize@plt+0x1420>
    32e7:	cmp    eax,0x8
    32ea:	je     3330 <__cxa_finalize@plt+0x13c0>
    32ec:	cmp    rsi,rdi
    32ef:	mov    rax,rdi
    32f2:	jae    3307 <__cxa_finalize@plt+0x1397>
    32f4:	nop    DWORD PTR [rax+0x0]
    32f8:	sub    rax,0x1
    32fc:	mov    BYTE PTR [rax],0x30
    32ff:	cmp    rsi,rax
    3302:	jne    32f8 <__cxa_finalize@plt+0x1388>
    3304:	mov    rdi,rsi
    3307:	mov    rsi,QWORD PTR [rip+0x20cd9a]        # 2100a8 <stdout@@GLIBC_2.2.5>
    330e:	call   1d80 <fputs_unlocked@plt>
    3313:	mov    rax,QWORD PTR [rsp+0x28]
    3318:	xor    rax,QWORD PTR fs:0x28
    3321:	jne    33be <__cxa_finalize@plt+0x144e>
    3327:	add    rsp,0x38
    332b:	ret    
    332c:	nop    DWORD PTR [rax+0x0]
    3330:	mov    eax,ecx
    3332:	shr    rcx,0x3
    3336:	sub    rdi,0x1
    333a:	and    eax,0x7
    333d:	add    eax,0x30
    3340:	test   rcx,rcx
    3343:	mov    BYTE PTR [rdi],al
    3345:	jne    3330 <__cxa_finalize@plt+0x13c0>
    3347:	jmp    32ec <__cxa_finalize@plt+0x137c>
    3349:	nop    DWORD PTR [rax+0x0]
    3350:	movabs r8,0xcccccccccccccccd
    335a:	nop    WORD PTR [rax+rax*1+0x0]
    3360:	mov    rax,rcx
    3363:	sub    rdi,0x1
    3367:	mul    r8
    336a:	shr    rdx,0x3
    336e:	lea    rax,[rdx+rdx*4]
    3372:	add    rax,rax
    3375:	sub    rcx,rax
    3378:	add    ecx,0x30
    337b:	test   rdx,rdx
    337e:	mov    BYTE PTR [rdi],cl
    3380:	mov    rcx,rdx
    3383:	jne    3360 <__cxa_finalize@plt+0x13f0>
    3385:	jmp    32ec <__cxa_finalize@plt+0x137c>
    338a:	nop    WORD PTR [rax+rax*1+0x0]
    3390:	lea    rdx,[rip+0x814d]        # b4e4 <_IO_stdin_used@@Base+0x4>
    3397:	nop    WORD PTR [rax+rax*1+0x0]
    33a0:	mov    rax,rcx
    33a3:	shr    rcx,0x4
    33a7:	sub    rdi,0x1
    33ab:	and    eax,0xf
    33ae:	test   rcx,rcx
    33b1:	movzx  eax,BYTE PTR [rdx+rax*1]
    33b5:	mov    BYTE PTR [rdi],al
    33b7:	jne    33a0 <__cxa_finalize@plt+0x1430>
    33b9:	jmp    32ec <__cxa_finalize@plt+0x137c>
    33be:	call   1c90 <__stack_chk_fail@plt>
    33c3:	nop    DWORD PTR [rax]
    33c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    33d0:	movzx  edx,BYTE PTR [rdi]
    33d3:	test   dl,dl
    33d5:	je     341c <__cxa_finalize@plt+0x14ac>
    33d7:	push   rbp
    33d8:	push   rbx
    33d9:	mov    rbp,rsi
    33dc:	mov    rbx,rdi
    33df:	sub    rsp,0x8
    33e3:	cmp    dl,0x2b
    33e6:	je     341f <__cxa_finalize@plt+0x14af>
    33e8:	mov    esi,0x2e
    33ed:	mov    rdi,rbx
    33f0:	call   1cc0 <strchr@plt>
    33f5:	test   rax,rax
    33f8:	mov    edx,0xa
    33fd:	je     3425 <__cxa_finalize@plt+0x14b5>
    33ff:	lea    r8,[rip+0x80ef]        # b4f5 <_IO_stdin_used@@Base+0x15>
    3406:	mov    rcx,rbp
    3409:	xor    esi,esi
    340b:	mov    rdi,rbx
    340e:	call   87d0 <__cxa_finalize@plt+0x6860>
    3413:	test   eax,eax
    3415:	pop    rdx
    3416:	sete   al
    3419:	pop    rbx
    341a:	pop    rbp
    341b:	ret    
    341c:	xor    eax,eax
    341e:	ret    
    341f:	add    rbx,0x1
    3423:	jmp    33e8 <__cxa_finalize@plt+0x1478>
    3425:	cmp    BYTE PTR [rbx],0x30
    3428:	mov    edx,0x8
    342d:	jne    33ff <__cxa_finalize@plt+0x148f>
    342f:	movzx  eax,BYTE PTR [rbx+0x1]
    3433:	xor    edx,edx
    3435:	and    eax,0xffffffdf
    3438:	cmp    al,0x58
    343a:	sete   dl
    343d:	lea    edx,[rdx*8+0x8]
    3444:	jmp    33ff <__cxa_finalize@plt+0x148f>
    3446:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3450:	push   r15
    3452:	push   r14
    3454:	push   r13
    3456:	push   r12
    3458:	push   rbp
    3459:	push   rbx
    345a:	sub    rsp,0x28
    345e:	mov    rax,QWORD PTR fs:0x28
    3467:	mov    QWORD PTR [rsp+0x18],rax
    346c:	xor    eax,eax
    346e:	cmp    rdi,rsi
    3471:	jbe    3518 <__cxa_finalize@plt+0x15a8>
    3477:	mov    r13d,r8d
    347a:	mov    rbp,rdi
    347d:	lea    r8,[rdi-0x1]
    3481:	movsxd r12,r9d
    3484:	sub    rbp,rsi
    3487:	mov    rbx,rdi
    348a:	lea    rax,[rdx+rbp*1]
    348e:	mov    r14,rdx
    3491:	imul   r8,r12
    3495:	mov    QWORD PTR [rsp],rax
    3499:	lea    rax,[rsp+0x16]
    349e:	mov    QWORD PTR [rsp+0x8],rax
    34a3:	mov    r15,r8
    34a6:	jmp    34df <__cxa_finalize@plt+0x156f>
    34a8:	nop    DWORD PTR [rax+rax*1+0x0]
    34b0:	lea    rcx,[rip+0x9869]        # cd20 <_IO_stdin_used@@Base+0x1840>
    34b7:	movzx  eax,al
    34ba:	lea    rdx,[rcx+rax*4]
    34be:	sub    r9d,ebp
    34c1:	lea    rdi,[rip+0x8034]        # b4fc <_IO_stdin_used@@Base+0x1c>
    34c8:	xor    eax,eax
    34ca:	lea    esi,[r9+r13*1]
    34ce:	sub    r15,r12
    34d1:	call   8540 <__cxa_finalize@plt+0x65d0>
    34d6:	cmp    r14,QWORD PTR [rsp]
    34da:	mov    r9d,ebp
    34dd:	je     3518 <__cxa_finalize@plt+0x15a8>
    34df:	xor    edx,edx
    34e1:	mov    rax,r15
    34e4:	add    r14,0x1
    34e8:	div    rbx
    34eb:	lea    rdx,[rip+0x8006]        # b4f8 <_IO_stdin_used@@Base+0x18>
    34f2:	mov    rbp,rax
    34f5:	movzx  eax,BYTE PTR [r14-0x1]
    34fa:	and    eax,0x7f
    34fd:	cmp    al,0x7f
    34ff:	je     34be <__cxa_finalize@plt+0x154e>
    3501:	cmp    al,0x20
    3503:	jbe    34b0 <__cxa_finalize@plt+0x1540>
    3505:	mov    BYTE PTR [rsp+0x16],al
    3509:	mov    BYTE PTR [rsp+0x17],0x0
    350e:	mov    rdx,QWORD PTR [rsp+0x8]
    3513:	jmp    34be <__cxa_finalize@plt+0x154e>
    3515:	nop    DWORD PTR [rax]
    3518:	mov    rax,QWORD PTR [rsp+0x18]
    351d:	xor    rax,QWORD PTR fs:0x28
    3526:	jne    3537 <__cxa_finalize@plt+0x15c7>
    3528:	add    rsp,0x28
    352c:	pop    rbx
    352d:	pop    rbp
    352e:	pop    r12
    3530:	pop    r13
    3532:	pop    r14
    3534:	pop    r15
    3536:	ret    
    3537:	call   1c90 <__stack_chk_fail@plt>
    353c:	nop    DWORD PTR [rax+0x0]
    3540:	push   r15
    3542:	push   r14
    3544:	push   r13
    3546:	push   r12
    3548:	push   rbp
    3549:	push   rbx
    354a:	sub    rsp,0x38
    354e:	mov    rax,QWORD PTR fs:0x28
    3557:	mov    QWORD PTR [rsp+0x28],rax
    355c:	xor    eax,eax
    355e:	cmp    rdi,rsi
    3561:	mov    QWORD PTR [rsp+0x8],rcx
    3566:	mov    DWORD PTR [rsp+0x14],r8d
    356b:	jbe    3610 <__cxa_finalize@plt+0x16a0>
    3571:	lea    rcx,[rdi-0x1]
    3575:	movsxd rax,r9d
    3578:	mov    rbx,rdi
    357b:	mov    rbp,rsi
    357e:	mov    r15,rdx
    3581:	mov    QWORD PTR [rsp+0x18],rax
    3586:	imul   rcx,rax
    358a:	mov    r13,rdi
    358d:	mov    r14,rcx
    3590:	jmp    35b8 <__cxa_finalize@plt+0x1648>
    3592:	nop    WORD PTR [rax+rax*1+0x0]
    3598:	mov    rdx,QWORD PTR [r15]
    359b:	mov    rdi,QWORD PTR [rsp+0x8]
    35a0:	xor    eax,eax
    35a2:	add    r15,0x8
    35a6:	call   8540 <__cxa_finalize@plt+0x65d0>
    35ab:	sub    r14,QWORD PTR [rsp+0x18]
    35b0:	cmp    r13,rbp
    35b3:	mov    r9d,r12d
    35b6:	je     3610 <__cxa_finalize@plt+0x16a0>
    35b8:	xor    edx,edx
    35ba:	mov    rax,r14
    35bd:	sub    r13,0x1
    35c1:	div    rbx
    35c4:	sub    r9d,eax
    35c7:	cmp    BYTE PTR [rip+0x20cb33],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    35ce:	mov    r12,rax
    35d1:	mov    eax,DWORD PTR [rsp+0x14]
    35d5:	lea    esi,[r9+rax*1]
    35d9:	je     3598 <__cxa_finalize@plt+0x1628>
    35db:	lea    rdx,[r15+0x7]
    35df:	lea    r9,[rsp+0x20]
    35e4:	xor    eax,eax
    35e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    35f0:	movzx  edi,BYTE PTR [rdx]
    35f3:	sub    rdx,0x1
    35f7:	mov    BYTE PTR [r9+rax*1],dil
    35fb:	add    rax,0x1
    35ff:	cmp    rax,0x8
    3603:	jne    35f0 <__cxa_finalize@plt+0x1680>
    3605:	mov    rdx,QWORD PTR [rsp+0x20]
    360a:	jmp    359b <__cxa_finalize@plt+0x162b>
    360c:	nop    DWORD PTR [rax+0x0]
    3610:	mov    rax,QWORD PTR [rsp+0x28]
    3615:	xor    rax,QWORD PTR fs:0x28
    361e:	jne    362f <__cxa_finalize@plt+0x16bf>
    3620:	add    rsp,0x38
    3624:	pop    rbx
    3625:	pop    rbp
    3626:	pop    r12
    3628:	pop    r13
    362a:	pop    r14
    362c:	pop    r15
    362e:	ret    
    362f:	call   1c90 <__stack_chk_fail@plt>
    3634:	xchg   ax,ax
    3636:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3640:	push   r15
    3642:	push   r14
    3644:	push   r13
    3646:	push   r12
    3648:	push   rbp
    3649:	push   rbx
    364a:	sub    rsp,0x38
    364e:	mov    rax,QWORD PTR fs:0x28
    3657:	mov    QWORD PTR [rsp+0x28],rax
    365c:	xor    eax,eax
    365e:	cmp    rdi,rsi
    3661:	mov    QWORD PTR [rsp+0x8],rcx
    3666:	mov    DWORD PTR [rsp+0x14],r8d
    366b:	jbe    3710 <__cxa_finalize@plt+0x17a0>
    3671:	lea    rcx,[rdi-0x1]
    3675:	movsxd rax,r9d
    3678:	mov    rbx,rdi
    367b:	mov    rbp,rsi
    367e:	mov    r15,rdx
    3681:	mov    QWORD PTR [rsp+0x18],rax
    3686:	imul   rcx,rax
    368a:	mov    r13,rdi
    368d:	mov    r14,rcx
    3690:	jmp    36b8 <__cxa_finalize@plt+0x1748>
    3692:	nop    WORD PTR [rax+rax*1+0x0]
    3698:	mov    rdx,QWORD PTR [r15]
    369b:	mov    rdi,QWORD PTR [rsp+0x8]
    36a0:	xor    eax,eax
    36a2:	add    r15,0x8
    36a6:	call   8540 <__cxa_finalize@plt+0x65d0>
    36ab:	sub    r14,QWORD PTR [rsp+0x18]
    36b0:	cmp    r13,rbp
    36b3:	mov    r9d,r12d
    36b6:	je     3710 <__cxa_finalize@plt+0x17a0>
    36b8:	xor    edx,edx
    36ba:	mov    rax,r14
    36bd:	sub    r13,0x1
    36c1:	div    rbx
    36c4:	sub    r9d,eax
    36c7:	cmp    BYTE PTR [rip+0x20ca33],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    36ce:	mov    r12,rax
    36d1:	mov    eax,DWORD PTR [rsp+0x14]
    36d5:	lea    esi,[r9+rax*1]
    36d9:	je     3698 <__cxa_finalize@plt+0x1728>
    36db:	lea    rdx,[r15+0x7]
    36df:	lea    r9,[rsp+0x20]
    36e4:	xor    eax,eax
    36e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    36f0:	movzx  edi,BYTE PTR [rdx]
    36f3:	sub    rdx,0x1
    36f7:	mov    BYTE PTR [r9+rax*1],dil
    36fb:	add    rax,0x1
    36ff:	cmp    rax,0x8
    3703:	jne    36f0 <__cxa_finalize@plt+0x1780>
    3705:	mov    rdx,QWORD PTR [rsp+0x20]
    370a:	jmp    369b <__cxa_finalize@plt+0x172b>
    370c:	nop    DWORD PTR [rax+0x0]
    3710:	mov    rax,QWORD PTR [rsp+0x28]
    3715:	xor    rax,QWORD PTR fs:0x28
    371e:	jne    372f <__cxa_finalize@plt+0x17bf>
    3720:	add    rsp,0x38
    3724:	pop    rbx
    3725:	pop    rbp
    3726:	pop    r12
    3728:	pop    r13
    372a:	pop    r14
    372c:	pop    r15
    372e:	ret    
    372f:	call   1c90 <__stack_chk_fail@plt>
    3734:	xchg   ax,ax
    3736:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3740:	push   r15
    3742:	push   r14
    3744:	push   r13
    3746:	push   r12
    3748:	push   rbp
    3749:	push   rbx
    374a:	mov    rbx,rdi
    374d:	sub    rsp,0x38
    3751:	mov    rdi,QWORD PTR fs:0x28
    375a:	mov    QWORD PTR [rsp+0x28],rdi
    375f:	xor    edi,edi
    3761:	cmp    rbx,rsi
    3764:	mov    QWORD PTR [rsp],rsi
    3768:	mov    QWORD PTR [rsp+0x8],rcx
    376d:	mov    DWORD PTR [rsp+0x14],r8d
    3772:	jbe    3810 <__cxa_finalize@plt+0x18a0>
    3778:	lea    rcx,[rbx-0x1]
    377c:	movsxd rax,r9d
    377f:	mov    r15,rdx
    3782:	mov    QWORD PTR [rsp+0x18],rax
    3787:	mov    r13,rbx
    378a:	imul   rcx,rax
    378e:	mov    r14,rcx
    3791:	jmp    37b9 <__cxa_finalize@plt+0x1849>
    3793:	nop    DWORD PTR [rax+rax*1+0x0]
    3798:	mov    edx,DWORD PTR [r15]
    379b:	mov    rdi,QWORD PTR [rsp+0x8]
    37a0:	xor    eax,eax
    37a2:	add    r15,0x4
    37a6:	call   8540 <__cxa_finalize@plt+0x65d0>
    37ab:	sub    r14,QWORD PTR [rsp+0x18]
    37b0:	cmp    r13,QWORD PTR [rsp]
    37b4:	mov    r9d,ebp
    37b7:	je     3810 <__cxa_finalize@plt+0x18a0>
    37b9:	xor    edx,edx
    37bb:	mov    rax,r14
    37be:	sub    r13,0x1
    37c2:	div    rbx
    37c5:	sub    r9d,eax
    37c8:	cmp    BYTE PTR [rip+0x20c932],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    37cf:	mov    rbp,rax
    37d2:	mov    eax,DWORD PTR [rsp+0x14]
    37d6:	lea    esi,[r9+rax*1]
    37da:	je     3798 <__cxa_finalize@plt+0x1828>
    37dc:	mov    r12b,BYTE PTR [r15+0x3]
    37e0:	movzx  ecx,BYTE PTR [r15+0x2]
    37e5:	movzx  edx,BYTE PTR [r15+0x1]
    37ea:	mov    eax,r12d
    37ed:	mov    ah,cl
    37ef:	movzx  r10d,ax
    37f3:	movzx  eax,BYTE PTR [r15]
    37f7:	shl    edx,0x10
    37fa:	or     r10d,edx
    37fd:	shl    eax,0x18
    3800:	or     r10d,eax
    3803:	mov    r12d,r10d
    3806:	mov    edx,r10d
    3809:	jmp    379b <__cxa_finalize@plt+0x182b>
    380b:	nop    DWORD PTR [rax+rax*1+0x0]
    3810:	mov    rax,QWORD PTR [rsp+0x28]
    3815:	xor    rax,QWORD PTR fs:0x28
    381e:	jne    382f <__cxa_finalize@plt+0x18bf>
    3820:	add    rsp,0x38
    3824:	pop    rbx
    3825:	pop    rbp
    3826:	pop    r12
    3828:	pop    r13
    382a:	pop    r14
    382c:	pop    r15
    382e:	ret    
    382f:	call   1c90 <__stack_chk_fail@plt>
    3834:	xchg   ax,ax
    3836:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3840:	push   r15
    3842:	push   r14
    3844:	push   r13
    3846:	push   r12
    3848:	push   rbp
    3849:	push   rbx
    384a:	sub    rsp,0x38
    384e:	mov    rax,QWORD PTR fs:0x28
    3857:	mov    QWORD PTR [rsp+0x28],rax
    385c:	xor    eax,eax
    385e:	cmp    rdi,rsi
    3861:	mov    QWORD PTR [rsp],rcx
    3865:	mov    DWORD PTR [rsp+0xc],r8d
    386a:	jbe    3900 <__cxa_finalize@plt+0x1990>
    3870:	lea    r8,[rdi-0x1]
    3874:	movsxd rax,r9d
    3877:	mov    rbx,rdi
    387a:	mov    QWORD PTR [rsp+0x18],rax
    387f:	mov    rbp,rdx
    3882:	xor    r15d,r15d
    3885:	imul   r8,rax
    3889:	mov    rax,rdi
    388c:	sub    rax,rsi
    388f:	mov    QWORD PTR [rsp+0x10],rax
    3894:	mov    r13,r8
    3897:	jmp    38c4 <__cxa_finalize@plt+0x1954>
    3899:	nop    DWORD PTR [rax+0x0]
    38a0:	movzx  edx,WORD PTR [rbp+r15*2+0x0]
    38a6:	mov    rdi,QWORD PTR [rsp]
    38aa:	xor    eax,eax
    38ac:	add    r15,0x1
    38b0:	call   8540 <__cxa_finalize@plt+0x65d0>
    38b5:	sub    r13,QWORD PTR [rsp+0x18]
    38ba:	cmp    QWORD PTR [rsp+0x10],r15
    38bf:	mov    r9d,r12d
    38c2:	je     3900 <__cxa_finalize@plt+0x1990>
    38c4:	xor    edx,edx
    38c6:	mov    rax,r13
    38c9:	div    rbx
    38cc:	sub    r9d,eax
    38cf:	cmp    BYTE PTR [rip+0x20c82b],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    38d6:	mov    r12,rax
    38d9:	mov    eax,DWORD PTR [rsp+0xc]
    38dd:	lea    esi,[r9+rax*1]
    38e1:	je     38a0 <__cxa_finalize@plt+0x1930>
    38e3:	mov    r14b,BYTE PTR [rbp+r15*2+0x1]
    38e8:	movzx  eax,BYTE PTR [rbp+r15*2+0x0]
    38ee:	mov    ecx,r14d
    38f1:	mov    ch,al
    38f3:	mov    r14d,ecx
    38f6:	movzx  edx,cx
    38f9:	jmp    38a6 <__cxa_finalize@plt+0x1936>
    38fb:	nop    DWORD PTR [rax+rax*1+0x0]
    3900:	mov    rax,QWORD PTR [rsp+0x28]
    3905:	xor    rax,QWORD PTR fs:0x28
    390e:	jne    391f <__cxa_finalize@plt+0x19af>
    3910:	add    rsp,0x38
    3914:	pop    rbx
    3915:	pop    rbp
    3916:	pop    r12
    3918:	pop    r13
    391a:	pop    r14
    391c:	pop    r15
    391e:	ret    
    391f:	call   1c90 <__stack_chk_fail@plt>
    3924:	xchg   ax,ax
    3926:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3930:	push   r15
    3932:	push   r14
    3934:	push   r13
    3936:	push   r12
    3938:	push   rbp
    3939:	push   rbx
    393a:	sub    rsp,0x38
    393e:	mov    rax,QWORD PTR fs:0x28
    3947:	mov    QWORD PTR [rsp+0x28],rax
    394c:	xor    eax,eax
    394e:	cmp    rdi,rsi
    3951:	mov    QWORD PTR [rsp],rcx
    3955:	mov    DWORD PTR [rsp+0xc],r8d
    395a:	jbe    39f0 <__cxa_finalize@plt+0x1a80>
    3960:	lea    r8,[rdi-0x1]
    3964:	movsxd rax,r9d
    3967:	mov    rbx,rdi
    396a:	mov    QWORD PTR [rsp+0x18],rax
    396f:	mov    rbp,rdx
    3972:	xor    r15d,r15d
    3975:	imul   r8,rax
    3979:	mov    rax,rdi
    397c:	sub    rax,rsi
    397f:	mov    QWORD PTR [rsp+0x10],rax
    3984:	mov    r13,r8
    3987:	jmp    39b4 <__cxa_finalize@plt+0x1a44>
    3989:	nop    DWORD PTR [rax+0x0]
    3990:	movsx  edx,WORD PTR [rbp+r15*2+0x0]
    3996:	mov    rdi,QWORD PTR [rsp]
    399a:	xor    eax,eax
    399c:	add    r15,0x1
    39a0:	call   8540 <__cxa_finalize@plt+0x65d0>
    39a5:	sub    r13,QWORD PTR [rsp+0x18]
    39aa:	cmp    QWORD PTR [rsp+0x10],r15
    39af:	mov    r9d,r12d
    39b2:	je     39f0 <__cxa_finalize@plt+0x1a80>
    39b4:	xor    edx,edx
    39b6:	mov    rax,r13
    39b9:	div    rbx
    39bc:	sub    r9d,eax
    39bf:	cmp    BYTE PTR [rip+0x20c73b],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    39c6:	mov    r12,rax
    39c9:	mov    eax,DWORD PTR [rsp+0xc]
    39cd:	lea    esi,[r9+rax*1]
    39d1:	je     3990 <__cxa_finalize@plt+0x1a20>
    39d3:	mov    r14b,BYTE PTR [rbp+r15*2+0x1]
    39d8:	movzx  eax,BYTE PTR [rbp+r15*2+0x0]
    39de:	mov    ecx,r14d
    39e1:	mov    ch,al
    39e3:	mov    r14d,ecx
    39e6:	movsx  edx,cx
    39e9:	jmp    3996 <__cxa_finalize@plt+0x1a26>
    39eb:	nop    DWORD PTR [rax+rax*1+0x0]
    39f0:	mov    rax,QWORD PTR [rsp+0x28]
    39f5:	xor    rax,QWORD PTR fs:0x28
    39fe:	jne    3a0f <__cxa_finalize@plt+0x1a9f>
    3a00:	add    rsp,0x38
    3a04:	pop    rbx
    3a05:	pop    rbp
    3a06:	pop    r12
    3a08:	pop    r13
    3a0a:	pop    r14
    3a0c:	pop    r15
    3a0e:	ret    
    3a0f:	call   1c90 <__stack_chk_fail@plt>
    3a14:	xchg   ax,ax
    3a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3a20:	push   r15
    3a22:	push   r14
    3a24:	push   r13
    3a26:	push   r12
    3a28:	push   rbp
    3a29:	push   rbx
    3a2a:	sub    rsp,0x18
    3a2e:	cmp    rdi,rsi
    3a31:	mov    QWORD PTR [rsp],rcx
    3a35:	jbe    3a92 <__cxa_finalize@plt+0x1b22>
    3a37:	lea    rcx,[rdi-0x1]
    3a3b:	movsxd r12,r9d
    3a3e:	mov    rbp,rdi
    3a41:	sub    rbp,rsi
    3a44:	mov    rbx,rdi
    3a47:	mov    r15,rdx
    3a4a:	imul   rcx,r12
    3a4e:	lea    rax,[rdx+rbp*1]
    3a52:	mov    r14d,r8d
    3a55:	mov    QWORD PTR [rsp+0x8],rax
    3a5a:	mov    r13,rcx
    3a5d:	nop    DWORD PTR [rax]
    3a60:	mov    rax,r13
    3a63:	xor    edx,edx
    3a65:	mov    rdi,QWORD PTR [rsp]
    3a69:	div    rbx
    3a6c:	movzx  edx,BYTE PTR [r15]
    3a70:	sub    r13,r12
    3a73:	add    r15,0x1
    3a77:	sub    r9d,eax
    3a7a:	mov    rbp,rax
    3a7d:	xor    eax,eax
    3a7f:	lea    esi,[r9+r14*1]
    3a83:	call   8540 <__cxa_finalize@plt+0x65d0>
    3a88:	cmp    r15,QWORD PTR [rsp+0x8]
    3a8d:	mov    r9d,ebp
    3a90:	jne    3a60 <__cxa_finalize@plt+0x1af0>
    3a92:	add    rsp,0x18
    3a96:	pop    rbx
    3a97:	pop    rbp
    3a98:	pop    r12
    3a9a:	pop    r13
    3a9c:	pop    r14
    3a9e:	pop    r15
    3aa0:	ret    
    3aa1:	nop    DWORD PTR [rax+rax*1+0x0]
    3aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3ab0:	push   r15
    3ab2:	push   r14
    3ab4:	push   r13
    3ab6:	push   r12
    3ab8:	push   rbp
    3ab9:	push   rbx
    3aba:	sub    rsp,0x18
    3abe:	cmp    rdi,rsi
    3ac1:	mov    QWORD PTR [rsp],rcx
    3ac5:	jbe    3b22 <__cxa_finalize@plt+0x1bb2>
    3ac7:	lea    rcx,[rdi-0x1]
    3acb:	movsxd r12,r9d
    3ace:	mov    rbp,rdi
    3ad1:	sub    rbp,rsi
    3ad4:	mov    rbx,rdi
    3ad7:	mov    r15,rdx
    3ada:	imul   rcx,r12
    3ade:	lea    rax,[rdx+rbp*1]
    3ae2:	mov    r14d,r8d
    3ae5:	mov    QWORD PTR [rsp+0x8],rax
    3aea:	mov    r13,rcx
    3aed:	nop    DWORD PTR [rax]
    3af0:	mov    rax,r13
    3af3:	xor    edx,edx
    3af5:	mov    rdi,QWORD PTR [rsp]
    3af9:	div    rbx
    3afc:	movsx  edx,BYTE PTR [r15]
    3b00:	sub    r13,r12
    3b03:	add    r15,0x1
    3b07:	sub    r9d,eax
    3b0a:	mov    rbp,rax
    3b0d:	xor    eax,eax
    3b0f:	lea    esi,[r9+r14*1]
    3b13:	call   8540 <__cxa_finalize@plt+0x65d0>
    3b18:	cmp    r15,QWORD PTR [rsp+0x8]
    3b1d:	mov    r9d,ebp
    3b20:	jne    3af0 <__cxa_finalize@plt+0x1b80>
    3b22:	add    rsp,0x18
    3b26:	pop    rbx
    3b27:	pop    rbp
    3b28:	pop    r12
    3b2a:	pop    r13
    3b2c:	pop    r14
    3b2e:	pop    r15
    3b30:	ret    
    3b31:	nop    DWORD PTR [rax+rax*1+0x0]
    3b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3b40:	push   r15
    3b42:	push   r14
    3b44:	push   r13
    3b46:	push   r12
    3b48:	mov    r12,rdi
    3b4b:	push   rbp
    3b4c:	push   rbx
    3b4d:	sub    rsp,0x78
    3b51:	mov    rdi,QWORD PTR fs:0x28
    3b5a:	mov    QWORD PTR [rsp+0x68],rdi
    3b5f:	xor    edi,edi
    3b61:	cmp    r12,rsi
    3b64:	mov    QWORD PTR [rsp+0x8],rsi
    3b69:	mov    DWORD PTR [rsp+0x14],r8d
    3b6e:	jbe    3c30 <__cxa_finalize@plt+0x1cc0>
    3b74:	lea    r8,[r12-0x1]
    3b79:	movsxd rax,r9d
    3b7c:	mov    rbx,rdx
    3b7f:	mov    QWORD PTR [rsp+0x18],rax
    3b84:	mov    r15,r12
    3b87:	lea    r13,[rsp+0x30]
    3b8c:	imul   r8,rax
    3b90:	mov    r14,r8
    3b93:	jmp    3bdc <__cxa_finalize@plt+0x1c6c>
    3b95:	nop    DWORD PTR [rax]
    3b98:	fld    TBYTE PTR [rbx]
    3b9a:	sub    rsp,0x10
    3b9e:	xor    ecx,ecx
    3ba0:	xor    edx,edx
    3ba2:	mov    esi,0x2d
    3ba7:	mov    rdi,r13
    3baa:	add    rbx,0x10
    3bae:	fstp   TBYTE PTR [rsp]
    3bb1:	call   5dc0 <__cxa_finalize@plt+0x3e50>
    3bb6:	lea    rdi,[rip+0x793f]        # b4fc <_IO_stdin_used@@Base+0x1c>
    3bbd:	mov    rdx,r13
    3bc0:	xor    eax,eax
    3bc2:	mov    esi,DWORD PTR [rsp+0x20]
    3bc6:	call   8540 <__cxa_finalize@plt+0x65d0>
    3bcb:	sub    r14,QWORD PTR [rsp+0x28]
    3bd0:	mov    r9d,ebp
    3bd3:	pop    rax
    3bd4:	pop    rdx
    3bd5:	cmp    r15,QWORD PTR [rsp+0x8]
    3bda:	je     3c30 <__cxa_finalize@plt+0x1cc0>
    3bdc:	xor    edx,edx
    3bde:	mov    rax,r14
    3be1:	sub    r15,0x1
    3be5:	div    r12
    3be8:	sub    r9d,eax
    3beb:	add    r9d,DWORD PTR [rsp+0x14]
    3bf0:	cmp    BYTE PTR [rip+0x20c50a],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    3bf7:	mov    rbp,rax
    3bfa:	mov    DWORD PTR [rsp+0x10],r9d
    3bff:	je     3b98 <__cxa_finalize@plt+0x1c28>
    3c01:	lea    rdx,[rbx+0xf]
    3c05:	lea    rax,[rsp+0x20]
    3c0a:	lea    rsi,[rsp+0x30]
    3c0f:	nop
    3c10:	movzx  ecx,BYTE PTR [rdx]
    3c13:	add    rax,0x1
    3c17:	sub    rdx,0x1
    3c1b:	mov    BYTE PTR [rax-0x1],cl
    3c1e:	cmp    rsi,rax
    3c21:	jne    3c10 <__cxa_finalize@plt+0x1ca0>
    3c23:	fld    TBYTE PTR [rsp+0x20]
    3c27:	jmp    3b9a <__cxa_finalize@plt+0x1c2a>
    3c2c:	nop    DWORD PTR [rax+0x0]
    3c30:	mov    rax,QWORD PTR [rsp+0x68]
    3c35:	xor    rax,QWORD PTR fs:0x28
    3c3e:	jne    3c4f <__cxa_finalize@plt+0x1cdf>
    3c40:	add    rsp,0x78
    3c44:	pop    rbx
    3c45:	pop    rbp
    3c46:	pop    r12
    3c48:	pop    r13
    3c4a:	pop    r14
    3c4c:	pop    r15
    3c4e:	ret    
    3c4f:	call   1c90 <__stack_chk_fail@plt>
    3c54:	xchg   ax,ax
    3c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3c60:	push   r15
    3c62:	push   r14
    3c64:	push   r13
    3c66:	push   r12
    3c68:	push   rbp
    3c69:	push   rbx
    3c6a:	mov    rbp,rdi
    3c6d:	sub    rsp,0x68
    3c71:	mov    rdi,QWORD PTR fs:0x28
    3c7a:	mov    QWORD PTR [rsp+0x58],rdi
    3c7f:	xor    edi,edi
    3c81:	cmp    rbp,rsi
    3c84:	mov    QWORD PTR [rsp+0x8],rsi
    3c89:	mov    DWORD PTR [rsp+0x14],r8d
    3c8e:	jbe    3d50 <__cxa_finalize@plt+0x1de0>
    3c94:	lea    r8,[rbp-0x1]
    3c98:	movsxd rax,r9d
    3c9b:	mov    r13,rdx
    3c9e:	mov    QWORD PTR [rsp+0x18],rax
    3ca3:	mov    r15,rbp
    3ca6:	lea    r12,[rsp+0x30]
    3cab:	imul   r8,rax
    3caf:	mov    r14,r8
    3cb2:	jmp    3cf7 <__cxa_finalize@plt+0x1d87>
    3cb4:	nop    DWORD PTR [rax+0x0]
    3cb8:	movsd  xmm0,QWORD PTR [r13+0x0]
    3cbe:	xor    ecx,ecx
    3cc0:	xor    edx,edx
    3cc2:	mov    esi,0x28
    3cc7:	mov    rdi,r12
    3cca:	add    r13,0x8
    3cce:	call   5ae0 <__cxa_finalize@plt+0x3b70>
    3cd3:	mov    esi,DWORD PTR [rsp+0x10]
    3cd7:	lea    rdi,[rip+0x781e]        # b4fc <_IO_stdin_used@@Base+0x1c>
    3cde:	xor    eax,eax
    3ce0:	mov    rdx,r12
    3ce3:	call   8540 <__cxa_finalize@plt+0x65d0>
    3ce8:	sub    r14,QWORD PTR [rsp+0x18]
    3ced:	cmp    r15,QWORD PTR [rsp+0x8]
    3cf2:	mov    r9d,ebx
    3cf5:	je     3d50 <__cxa_finalize@plt+0x1de0>
    3cf7:	xor    edx,edx
    3cf9:	mov    rax,r14
    3cfc:	sub    r15,0x1
    3d00:	div    rbp
    3d03:	sub    r9d,eax
    3d06:	add    r9d,DWORD PTR [rsp+0x14]
    3d0b:	cmp    BYTE PTR [rip+0x20c3ef],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    3d12:	mov    rbx,rax
    3d15:	mov    DWORD PTR [rsp+0x10],r9d
    3d1a:	je     3cb8 <__cxa_finalize@plt+0x1d48>
    3d1c:	lea    rdx,[r13+0x7]
    3d20:	lea    rsi,[rsp+0x28]
    3d25:	xor    eax,eax
    3d27:	nop    WORD PTR [rax+rax*1+0x0]
    3d30:	movzx  ecx,BYTE PTR [rdx]
    3d33:	sub    rdx,0x1
    3d37:	mov    BYTE PTR [rsi+rax*1],cl
    3d3a:	add    rax,0x1
    3d3e:	cmp    rax,0x8
    3d42:	jne    3d30 <__cxa_finalize@plt+0x1dc0>
    3d44:	movsd  xmm0,QWORD PTR [rsp+0x28]
    3d4a:	jmp    3cbe <__cxa_finalize@plt+0x1d4e>
    3d4f:	nop
    3d50:	mov    rax,QWORD PTR [rsp+0x58]
    3d55:	xor    rax,QWORD PTR fs:0x28
    3d5e:	jne    3d6f <__cxa_finalize@plt+0x1dff>
    3d60:	add    rsp,0x68
    3d64:	pop    rbx
    3d65:	pop    rbp
    3d66:	pop    r12
    3d68:	pop    r13
    3d6a:	pop    r14
    3d6c:	pop    r15
    3d6e:	ret    
    3d6f:	call   1c90 <__stack_chk_fail@plt>
    3d74:	xchg   ax,ax
    3d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3d80:	push   r15
    3d82:	push   r14
    3d84:	mov    rax,rsi
    3d87:	push   r13
    3d89:	push   r12
    3d8b:	push   rbp
    3d8c:	push   rbx
    3d8d:	sub    rsp,0x68
    3d91:	mov    QWORD PTR [rsp+0x10],rsi
    3d96:	mov    DWORD PTR [rsp+0x28],r8d
    3d9b:	mov    rsi,QWORD PTR fs:0x28
    3da4:	mov    QWORD PTR [rsp+0x58],rsi
    3da9:	xor    esi,esi
    3dab:	cmp    rdi,rax
    3dae:	jbe    3e80 <__cxa_finalize@plt+0x1f10>
    3db4:	lea    r8,[rdi-0x1]
    3db8:	movsxd rax,r9d
    3dbb:	mov    r12d,ebp
    3dbe:	mov    QWORD PTR [rsp+0x18],rax
    3dc3:	mov    rbx,rdx
    3dc6:	mov    QWORD PTR [rsp+0x20],rdi
    3dcb:	imul   r8,rax
    3dcf:	lea    rax,[rsp+0x30]
    3dd4:	mov    rbp,rdi
    3dd7:	mov    r13d,r9d
    3dda:	mov    QWORD PTR [rsp+0x8],rax
    3ddf:	mov    r15,r8
    3de2:	jmp    3e28 <__cxa_finalize@plt+0x1eb8>
    3de4:	nop    DWORD PTR [rax+0x0]
    3de8:	movss  xmm0,DWORD PTR [rbx]
    3dec:	mov    rdi,QWORD PTR [rsp+0x8]
    3df1:	xor    ecx,ecx
    3df3:	xor    edx,edx
    3df5:	mov    esi,0x1f
    3dfa:	add    rbx,0x4
    3dfe:	call   5c50 <__cxa_finalize@plt+0x3ce0>
    3e03:	mov    rdx,QWORD PTR [rsp+0x8]
    3e08:	lea    rdi,[rip+0x76ed]        # b4fc <_IO_stdin_used@@Base+0x1c>
    3e0f:	mov    esi,r13d
    3e12:	xor    eax,eax
    3e14:	mov    r13d,r14d
    3e17:	call   8540 <__cxa_finalize@plt+0x65d0>
    3e1c:	sub    r15,QWORD PTR [rsp+0x18]
    3e21:	cmp    rbp,QWORD PTR [rsp+0x10]
    3e26:	je     3e80 <__cxa_finalize@plt+0x1f10>
    3e28:	xor    edx,edx
    3e2a:	mov    rax,r15
    3e2d:	sub    rbp,0x1
    3e31:	div    QWORD PTR [rsp+0x20]
    3e36:	sub    r13d,eax
    3e39:	add    r13d,DWORD PTR [rsp+0x28]
    3e3e:	cmp    BYTE PTR [rip+0x20c2bc],0x0        # 210101 <stderr@@GLIBC_2.2.5+0x21>
    3e45:	mov    r14,rax
    3e48:	je     3de8 <__cxa_finalize@plt+0x1e78>
    3e4a:	mov    r12b,BYTE PTR [rbx+0x3]
    3e4e:	movzx  edx,BYTE PTR [rbx+0x1]
    3e52:	mov    eax,r12d
    3e55:	mov    ah,BYTE PTR [rbx+0x2]
    3e58:	shl    edx,0x10
    3e5b:	movzx  r10d,ax
    3e5f:	movzx  eax,BYTE PTR [rbx]
    3e62:	or     r10d,edx
    3e65:	shl    eax,0x18
    3e68:	or     r10d,eax
    3e6b:	mov    DWORD PTR [rsp+0x2c],r10d
    3e70:	mov    r12d,r10d
    3e73:	movss  xmm0,DWORD PTR [rsp+0x2c]
    3e79:	jmp    3dec <__cxa_finalize@plt+0x1e7c>
    3e7e:	xchg   ax,ax
    3e80:	mov    rax,QWORD PTR [rsp+0x58]
    3e85:	xor    rax,QWORD PTR fs:0x28
    3e8e:	jne    3e9f <__cxa_finalize@plt+0x1f2f>
    3e90:	add    rsp,0x68
    3e94:	pop    rbx
    3e95:	pop    rbp
    3e96:	pop    r12
    3e98:	pop    r13
    3e9a:	pop    r14
    3e9c:	pop    r15
    3e9e:	ret    
    3e9f:	call   1c90 <__stack_chk_fail@plt>
    3ea4:	xchg   ax,ax
    3ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3eb0:	push   r15
    3eb2:	push   r14
    3eb4:	push   r13
    3eb6:	push   r12
    3eb8:	push   rbp
    3eb9:	push   rbx
    3eba:	sub    rsp,0x18
    3ebe:	test   rdi,rdi
    3ec1:	mov    QWORD PTR [rsp],rdi
    3ec5:	je     46b5 <__cxa_finalize@plt+0x2745>
    3ecb:	cmp    BYTE PTR [rdi],0x0
    3ece:	mov    rax,QWORD PTR [rip+0x20c2fb]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    3ed5:	mov    r12,rdi
    3ed8:	lea    r14,[rip+0x88c1]        # c7a0 <_IO_stdin_used@@Base+0x12c0>
    3edf:	je     4102 <__cxa_finalize@plt+0x2192>
    3ee5:	nop    DWORD PTR [rax]
    3ee8:	mov    rcx,QWORD PTR [rip+0x20c2d9]        # 2101c8 <stderr@@GLIBC_2.2.5+0xe8>
    3eef:	mov    rdi,QWORD PTR [rip+0x20c2e2]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    3ef6:	cmp    rcx,rax
    3ef9:	jbe    4190 <__cxa_finalize@plt+0x2220>
    3eff:	lea    rax,[rax+rax*4]
    3f03:	lea    rbp,[rdi+rax*8]
    3f07:	test   rbp,rbp
    3f0a:	je     466d <__cxa_finalize@plt+0x26fd>
    3f10:	movzx  esi,BYTE PTR [r12]
    3f15:	lea    eax,[rsi-0x61]
    3f18:	cmp    al,0x17
    3f1a:	ja     4148 <__cxa_finalize@plt+0x21d8>
    3f20:	movzx  eax,al
    3f23:	movsxd rax,DWORD PTR [r14+rax*4]
    3f27:	add    rax,r14
    3f2a:	jmp    rax
    3f2c:	nop    DWORD PTR [rax+0x0]
    3f30:	movzx  eax,BYTE PTR [r12+0x1]
    3f36:	cmp    al,0x46
    3f38:	je     44d8 <__cxa_finalize@plt+0x2568>
    3f3e:	cmp    al,0x4c
    3f40:	je     44c0 <__cxa_finalize@plt+0x2550>
    3f46:	cmp    al,0x44
    3f48:	je     44a8 <__cxa_finalize@plt+0x2538>
    3f4e:	movsx  ecx,al
    3f51:	lea    rsi,[r12+0x1]
    3f56:	sub    ecx,0x30
    3f59:	cmp    ecx,0x9
    3f5c:	ja     4420 <__cxa_finalize@plt+0x24b0>
    3f62:	lea    rbx,[r12+0x2]
    3f67:	movsxd rcx,ecx
    3f6a:	xor    r8d,r8d
    3f6d:	jmp    3f97 <__cxa_finalize@plt+0x2027>
    3f6f:	nop
    3f70:	movsxd rcx,eax
    3f73:	movabs rax,0xcccccccccccccccd
    3f7d:	add    rbx,0x1
    3f81:	mov    rdx,rcx
    3f84:	not    rdx
    3f87:	mul    rdx
    3f8a:	shr    rdx,0x3
    3f8e:	cmp    rdx,r8
    3f91:	jb     45b0 <__cxa_finalize@plt+0x2640>
    3f97:	lea    rax,[r8+r8*4]
    3f9b:	lea    r8,[rcx+rax*2]
    3f9f:	movsx  eax,BYTE PTR [rbx]
    3fa2:	sub    eax,0x30
    3fa5:	cmp    eax,0x9
    3fa8:	jbe    3f70 <__cxa_finalize@plt+0x2000>
    3faa:	cmp    rsi,rbx
    3fad:	mov    r13d,DWORD PTR [rip+0x20c18c]        # 210140 <stderr@@GLIBC_2.2.5+0x60>
    3fb4:	je     4430 <__cxa_finalize@plt+0x24c0>
    3fba:	cmp    r8,0x10
    3fbe:	ja     3fd4 <__cxa_finalize@plt+0x2064>
    3fc0:	lea    rax,[rip+0x20c159]        # 210120 <stderr@@GLIBC_2.2.5+0x40>
    3fc7:	mov    r13d,DWORD PTR [rax+r8*4]
    3fcb:	test   r13d,r13d
    3fce:	jne    4430 <__cxa_finalize@plt+0x24c0>
    3fd4:	mov    rdi,QWORD PTR [rsp]
    3fd8:	mov    QWORD PTR [rsp+0x8],r8
    3fdd:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    3fe2:	mov    edx,0x5
    3fe7:	mov    rbx,rax
    3fea:	lea    rsi,[rip+0x77bf]        # b7b0 <_IO_stdin_used@@Base+0x2d0>
    3ff1:	jmp    43f2 <__cxa_finalize@plt+0x2482>
    3ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4000:	movzx  eax,BYTE PTR [r12+0x1]
    4006:	cmp    al,0x49
    4008:	je     4610 <__cxa_finalize@plt+0x26a0>
    400e:	jle    4210 <__cxa_finalize@plt+0x22a0>
    4014:	cmp    al,0x4c
    4016:	je     45f8 <__cxa_finalize@plt+0x2688>
    401c:	cmp    al,0x53
    401e:	jne    4350 <__cxa_finalize@plt+0x23e0>
    4024:	cmp    sil,0x6f
    4028:	lea    rbx,[r12+0x2]
    402d:	mov    r13d,DWORD PTR [rip+0x20c154]        # 210188 <stderr@@GLIBC_2.2.5+0xa8>
    4034:	mov    r8d,0x2
    403a:	jne    4234 <__cxa_finalize@plt+0x22c4>
    4040:	lea    eax,[r13-0x4]
    4044:	lea    r9,[rip+0x7518]        # b563 <_IO_stdin_used@@Base+0x83>
    404b:	lea    r10,[rbp+0x10]
    404f:	lea    rcx,[rip+0x74dd]        # b533 <_IO_stdin_used@@Base+0x53>
    4056:	mov    edx,0x8
    405b:	mov    esi,0x1
    4060:	cmp    eax,0x1
    4063:	lea    rax,[rip+0x7499]        # b503 <_IO_stdin_used@@Base+0x23>
    406a:	mov    rdi,r10
    406d:	mov    QWORD PTR [rsp+0x8],r10
    4072:	cmovbe r9,rax
    4076:	lea    rax,[rip+0x8ea3]        # cf20 <_IO_stdin_used@@Base+0x1a40>
    407d:	mov    r15d,DWORD PTR [rax+r8*4]
    4081:	xor    eax,eax
    4083:	mov    r8d,r15d
    4086:	call   1f60 <__sprintf_chk@plt>
    408b:	mov    edx,0x2
    4090:	mov    r10,QWORD PTR [rsp+0x8]
    4095:	jmp    42a3 <__cxa_finalize@plt+0x2333>
    409a:	nop    WORD PTR [rax+rax*1+0x0]
    40a0:	lea    rbx,[r12+0x1]
    40a5:	lea    rax,[rip+0x634]        # 46e0 <__cxa_finalize@plt+0x2770>
    40ac:	mov    r15d,0x3
    40b2:	mov    edx,0x6
    40b7:	mov    r13d,0x1
    40bd:	mov    QWORD PTR [rbp+0x8],rax
    40c1:	mov    DWORD PTR [rbp+0x4],r13d
    40c5:	mov    DWORD PTR [rbp+0x0],edx
    40c8:	mov    DWORD PTR [rbp+0x1c],r15d
    40cc:	cmp    BYTE PTR [rbx],0x7a
    40cf:	sete   al
    40d2:	mov    BYTE PTR [rbp+0x18],al
    40d5:	movzx  eax,al
    40d8:	add    rbx,rax
    40db:	cmp    r12,rbx
    40de:	je     464e <__cxa_finalize@plt+0x26de>
    40e4:	mov    rax,QWORD PTR [rip+0x20c0e5]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    40eb:	mov    r12,rbx
    40ee:	add    rax,0x1
    40f2:	cmp    BYTE PTR [rbx],0x0
    40f5:	mov    QWORD PTR [rip+0x20c0d4],rax        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    40fc:	jne    3ee8 <__cxa_finalize@plt+0x1f78>
    4102:	add    rsp,0x18
    4106:	mov    eax,0x1
    410b:	pop    rbx
    410c:	pop    rbp
    410d:	pop    r12
    410f:	pop    r13
    4111:	pop    r14
    4113:	pop    r15
    4115:	ret    
    4116:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4120:	lea    rbx,[r12+0x1]
    4125:	mov    r15d,0x3
    412b:	lea    rax,[rip+0xfffffffffffff31e]        # 3450 <__cxa_finalize@plt+0x14e0>
    4132:	mov    edx,0x5
    4137:	mov    r13d,0x1
    413d:	jmp    40bd <__cxa_finalize@plt+0x214d>
    4142:	nop    WORD PTR [rax+rax*1+0x0]
    4148:	mov    rdi,QWORD PTR [rsp]
    414c:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    4151:	movsx  ebx,BYTE PTR [r12]
    4156:	lea    rsi,[rip+0x76ab]        # b808 <_IO_stdin_used@@Base+0x328>
    415d:	mov    rbp,rax
    4160:	mov    edx,0x5
    4165:	xor    edi,edi
    4167:	call   1c60 <dcgettext@plt>
    416c:	mov    r8,rbp
    416f:	mov    rdx,rax
    4172:	xor    esi,esi
    4174:	mov    ecx,ebx
    4176:	xor    eax,eax
    4178:	xor    edi,edi
    417a:	call   1ea0 <error@plt>
    417f:	add    rsp,0x18
    4183:	xor    eax,eax
    4185:	pop    rbx
    4186:	pop    rbp
    4187:	pop    r12
    4189:	pop    r13
    418b:	pop    r14
    418d:	pop    r15
    418f:	ret    
    4190:	test   rdi,rdi
    4193:	je     41e0 <__cxa_finalize@plt+0x2270>
    4195:	movabs rax,0x222222222222221
    419f:	cmp    rcx,rax
    41a2:	ja     4209 <__cxa_finalize@plt+0x2299>
    41a4:	mov    rax,rcx
    41a7:	shr    rax,1
    41aa:	lea    rcx,[rcx+rax*1+0x1]
    41af:	lea    rsi,[rcx+rcx*4]
    41b3:	mov    QWORD PTR [rip+0x20c00e],rcx        # 2101c8 <stderr@@GLIBC_2.2.5+0xe8>
    41ba:	shl    rsi,0x3
    41be:	call   82b0 <__cxa_finalize@plt+0x6340>
    41c3:	mov    rdi,rax
    41c6:	mov    QWORD PTR [rip+0x20c00b],rax        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    41cd:	mov    rax,QWORD PTR [rip+0x20bffc]        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    41d4:	jmp    3eff <__cxa_finalize@plt+0x1f8f>
    41d9:	nop    DWORD PTR [rax+0x0]
    41e0:	test   rcx,rcx
    41e3:	mov    eax,0x3
    41e8:	mov    edx,0x28
    41ed:	cmove  rcx,rax
    41f1:	mov    rax,rdx
    41f4:	xor    esi,esi
    41f6:	mul    rcx
    41f9:	jo     46ab <__cxa_finalize@plt+0x273b>
    41ff:	test   rax,rax
    4202:	js     4209 <__cxa_finalize@plt+0x2299>
    4204:	test   rsi,rsi
    4207:	je     41af <__cxa_finalize@plt+0x223f>
    4209:	call   84a0 <__cxa_finalize@plt+0x6530>
    420e:	xchg   ax,ax
    4210:	cmp    al,0x43
    4212:	jne    4350 <__cxa_finalize@plt+0x23e0>
    4218:	mov    r13d,DWORD PTR [rip+0x20bf65]        # 210184 <stderr@@GLIBC_2.2.5+0xa4>
    421f:	lea    rbx,[r12+0x2]
    4224:	mov    r8d,0x1
    422a:	cmp    sil,0x6f
    422e:	je     4040 <__cxa_finalize@plt+0x20d0>
    4234:	jle    44f0 <__cxa_finalize@plt+0x2580>
    423a:	cmp    sil,0x75
    423e:	je     4550 <__cxa_finalize@plt+0x25e0>
    4244:	cmp    sil,0x78
    4248:	jne    4459 <__cxa_finalize@plt+0x24e9>
    424e:	lea    eax,[r13-0x4]
    4252:	lea    r9,[rip+0x7474]        # b6cd <_IO_stdin_used@@Base+0x1ed>
    4259:	lea    r10,[rbp+0x10]
    425d:	lea    rcx,[rip+0x72cf]        # b533 <_IO_stdin_used@@Base+0x53>
    4264:	mov    edx,0x8
    4269:	mov    esi,0x1
    426e:	cmp    eax,0x1
    4271:	lea    rax,[rip+0x7291]        # b509 <_IO_stdin_used@@Base+0x29>
    4278:	mov    rdi,r10
    427b:	mov    QWORD PTR [rsp+0x8],r10
    4280:	cmovbe r9,rax
    4284:	lea    rax,[rip+0x8b75]        # ce00 <_IO_stdin_used@@Base+0x1920>
    428b:	mov    r15d,DWORD PTR [rax+r8*4]
    428f:	xor    eax,eax
    4291:	mov    r8d,r15d
    4294:	call   1f60 <__sprintf_chk@plt>
    4299:	mov    r10,QWORD PTR [rsp+0x8]
    429e:	mov    edx,0x3
    42a3:	mov    rdi,r10
    42a6:	mov    DWORD PTR [rsp+0x8],edx
    42aa:	call   1c80 <strlen@plt>
    42af:	cmp    rax,0x7
    42b3:	mov    edx,DWORD PTR [rsp+0x8]
    42b7:	ja     468c <__cxa_finalize@plt+0x271c>
    42bd:	cmp    r13d,0x5
    42c1:	ja     4459 <__cxa_finalize@plt+0x24e9>
    42c7:	lea    rsi,[rip+0x8532]        # c800 <_IO_stdin_used@@Base+0x1320>
    42ce:	mov    ecx,r13d
    42d1:	movsxd rax,DWORD PTR [rsi+rcx*4]
    42d5:	add    rax,rsi
    42d8:	jmp    rax
    42da:	nop    WORD PTR [rax+rax*1+0x0]
    42e0:	lea    rax,[rip+0xfffffffffffff259]        # 3540 <__cxa_finalize@plt+0x15d0>
    42e7:	jmp    40bd <__cxa_finalize@plt+0x214d>
    42ec:	nop    DWORD PTR [rax+0x0]
    42f0:	lea    rax,[rip+0xfffffffffffff349]        # 3640 <__cxa_finalize@plt+0x16d0>
    42f7:	jmp    40bd <__cxa_finalize@plt+0x214d>
    42fc:	nop    DWORD PTR [rax+0x0]
    4300:	lea    rax,[rip+0xfffffffffffff439]        # 3740 <__cxa_finalize@plt+0x17d0>
    4307:	jmp    40bd <__cxa_finalize@plt+0x214d>
    430c:	nop    DWORD PTR [rax+0x0]
    4310:	lea    rax,[rip+0xfffffffffffff529]        # 3840 <__cxa_finalize@plt+0x18d0>
    4317:	lea    rcx,[rip+0xfffffffffffff612]        # 3930 <__cxa_finalize@plt+0x19c0>
    431e:	test   edx,edx
    4320:	cmove  rax,rcx
    4324:	jmp    40bd <__cxa_finalize@plt+0x214d>
    4329:	nop    DWORD PTR [rax+0x0]
    4330:	lea    rax,[rip+0xfffffffffffff6e9]        # 3a20 <__cxa_finalize@plt+0x1ab0>
    4337:	lea    rcx,[rip+0xfffffffffffff772]        # 3ab0 <__cxa_finalize@plt+0x1b40>
    433e:	test   edx,edx
    4340:	cmove  rax,rcx
    4344:	jmp    40bd <__cxa_finalize@plt+0x214d>
    4349:	nop    DWORD PTR [rax+0x0]
    4350:	movsx  ecx,al
    4353:	lea    rdi,[r12+0x1]
    4358:	sub    ecx,0x30
    435b:	cmp    ecx,0x9
    435e:	ja     4639 <__cxa_finalize@plt+0x26c9>
    4364:	lea    rbx,[r12+0x2]
    4369:	movsxd rcx,ecx
    436c:	xor    r8d,r8d
    436f:	jmp    439f <__cxa_finalize@plt+0x242f>
    4371:	nop    DWORD PTR [rax+0x0]
    4378:	movsxd rcx,eax
    437b:	movabs rax,0xcccccccccccccccd
    4385:	add    rbx,0x1
    4389:	mov    rdx,rcx
    438c:	not    rdx
    438f:	mul    rdx
    4392:	shr    rdx,0x3
    4396:	cmp    rdx,r8
    4399:	jb     45b0 <__cxa_finalize@plt+0x2640>
    439f:	lea    rax,[r8+r8*4]
    43a3:	lea    r8,[rcx+rax*2]
    43a7:	movsx  eax,BYTE PTR [rbx]
    43aa:	sub    eax,0x30
    43ad:	cmp    eax,0x9
    43b0:	jbe    4378 <__cxa_finalize@plt+0x2408>
    43b2:	cmp    rdi,rbx
    43b5:	je     4627 <__cxa_finalize@plt+0x26b7>
    43bb:	cmp    r8,0x8
    43bf:	ja     43d5 <__cxa_finalize@plt+0x2465>
    43c1:	lea    rax,[rip+0x20bdb8]        # 210180 <stderr@@GLIBC_2.2.5+0xa0>
    43c8:	mov    r13d,DWORD PTR [rax+r8*4]
    43cc:	test   r13d,r13d
    43cf:	jne    422a <__cxa_finalize@plt+0x22ba>
    43d5:	mov    rdi,QWORD PTR [rsp]
    43d9:	mov    QWORD PTR [rsp+0x8],r8
    43de:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    43e3:	lea    rsi,[rip+0x733e]        # b728 <_IO_stdin_used@@Base+0x248>
    43ea:	mov    rbx,rax
    43ed:	mov    edx,0x5
    43f2:	xor    edi,edi
    43f4:	call   1c60 <dcgettext@plt>
    43f9:	mov    r8,QWORD PTR [rsp+0x8]
    43fe:	mov    rcx,rbx
    4401:	mov    rdx,rax
    4404:	xor    esi,esi
    4406:	xor    eax,eax
    4408:	xor    edi,edi
    440a:	call   1ea0 <error@plt>
    440f:	add    rsp,0x18
    4413:	xor    eax,eax
    4415:	pop    rbx
    4416:	pop    rbp
    4417:	pop    r12
    4419:	pop    r13
    441b:	pop    r14
    441d:	pop    r15
    441f:	ret    
    4420:	mov    r13d,DWORD PTR [rip+0x20bd19]        # 210140 <stderr@@GLIBC_2.2.5+0x60>
    4427:	mov    rbx,rsi
    442a:	nop    WORD PTR [rax+rax*1+0x0]
    4430:	call   1c10 <localeconv@plt>
    4435:	mov    rdi,QWORD PTR [rax]
    4438:	mov    eax,0x1
    443d:	cmp    BYTE PTR [rdi],0x0
    4440:	je     4447 <__cxa_finalize@plt+0x24d7>
    4442:	call   1c80 <strlen@plt>
    4447:	cmp    r13d,0x7
    444b:	je     4460 <__cxa_finalize@plt+0x24f0>
    444d:	cmp    r13d,0x8
    4451:	je     4490 <__cxa_finalize@plt+0x2520>
    4453:	cmp    r13d,0x6
    4457:	je     4478 <__cxa_finalize@plt+0x2508>
    4459:	call   1b90 <abort@plt>
    445e:	xchg   ax,ax
    4460:	lea    r15d,[rax+0x17]
    4464:	mov    edx,0x4
    4469:	lea    rax,[rip+0xfffffffffffff7f0]        # 3c60 <__cxa_finalize@plt+0x1cf0>
    4470:	jmp    40bd <__cxa_finalize@plt+0x214d>
    4475:	nop    DWORD PTR [rax]
    4478:	lea    r15d,[rax+0xe]
    447c:	mov    edx,0x4
    4481:	lea    rax,[rip+0xfffffffffffff8f8]        # 3d80 <__cxa_finalize@plt+0x1e10>
    4488:	jmp    40bd <__cxa_finalize@plt+0x214d>
    448d:	nop    DWORD PTR [rax]
    4490:	lea    r15d,[rax+0x1c]
    4494:	mov    edx,0x4
    4499:	lea    rax,[rip+0xfffffffffffff6a0]        # 3b40 <__cxa_finalize@plt+0x1bd0>
    44a0:	jmp    40bd <__cxa_finalize@plt+0x214d>
    44a5:	nop    DWORD PTR [rax]
    44a8:	lea    rbx,[r12+0x2]
    44ad:	mov    r13d,DWORD PTR [rip+0x20bc8c]        # 210140 <stderr@@GLIBC_2.2.5+0x60>
    44b4:	jmp    4430 <__cxa_finalize@plt+0x24c0>
    44b9:	nop    DWORD PTR [rax+0x0]
    44c0:	lea    rbx,[r12+0x2]
    44c5:	mov    r13d,DWORD PTR [rip+0x20bc94]        # 210160 <stderr@@GLIBC_2.2.5+0x80>
    44cc:	jmp    4430 <__cxa_finalize@plt+0x24c0>
    44d1:	nop    DWORD PTR [rax+0x0]
    44d8:	lea    rbx,[r12+0x2]
    44dd:	mov    r13d,DWORD PTR [rip+0x20bc4c]        # 210130 <stderr@@GLIBC_2.2.5+0x50>
    44e4:	jmp    4430 <__cxa_finalize@plt+0x24c0>
    44e9:	nop    DWORD PTR [rax+0x0]
    44f0:	cmp    sil,0x64
    44f4:	jne    4459 <__cxa_finalize@plt+0x24e9>
    44fa:	lea    rax,[rip+0x89bf]        # cec0 <_IO_stdin_used@@Base+0x19e0>
    4501:	lea    r10,[rbp+0x10]
    4505:	lea    rcx,[rip+0x7021]        # b52d <_IO_stdin_used@@Base+0x4d>
    450c:	mov    edx,0x8
    4511:	mov    esi,0x1
    4516:	mov    r15d,DWORD PTR [rax+r8*4]
    451a:	lea    eax,[r13-0x4]
    451e:	lea    r8,[rip+0x9399]        # d8be <version_etc_copyright@@Base+0x3e>
    4525:	mov    rdi,r10
    4528:	mov    QWORD PTR [rsp+0x8],r10
    452d:	cmp    eax,0x1
    4530:	lea    rax,[rip+0x6fc9]        # b500 <_IO_stdin_used@@Base+0x20>
    4537:	cmovbe r8,rax
    453b:	xor    eax,eax
    453d:	call   1f60 <__sprintf_chk@plt>
    4542:	xor    edx,edx
    4544:	mov    r10,QWORD PTR [rsp+0x8]
    4549:	jmp    42a3 <__cxa_finalize@plt+0x2333>
    454e:	xchg   ax,ax
    4550:	lea    rax,[rip+0x8909]        # ce60 <_IO_stdin_used@@Base+0x1980>
    4557:	lea    r10,[rbp+0x10]
    455b:	lea    rcx,[rip+0x6fcb]        # b52d <_IO_stdin_used@@Base+0x4d>
    4562:	mov    edx,0x8
    4567:	mov    esi,0x1
    456c:	mov    r15d,DWORD PTR [rax+r8*4]
    4570:	lea    eax,[r13-0x4]
    4574:	lea    r8,[rip+0x6f8c]        # b507 <_IO_stdin_used@@Base+0x27>
    457b:	mov    rdi,r10
    457e:	mov    QWORD PTR [rsp+0x8],r10
    4583:	cmp    eax,0x1
    4586:	lea    rax,[rip+0x6f79]        # b506 <_IO_stdin_used@@Base+0x26>
    458d:	cmovbe r8,rax
    4591:	xor    eax,eax
    4593:	call   1f60 <__sprintf_chk@plt>
    4598:	mov    edx,0x1
    459d:	mov    r10,QWORD PTR [rsp+0x8]
    45a2:	jmp    42a3 <__cxa_finalize@plt+0x2333>
    45a7:	nop    WORD PTR [rax+rax*1+0x0]
    45b0:	mov    rdi,QWORD PTR [rsp]
    45b4:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    45b9:	lea    rsi,[rip+0x6f86]        # b546 <_IO_stdin_used@@Base+0x66>
    45c0:	mov    rbx,rax
    45c3:	mov    edx,0x5
    45c8:	xor    edi,edi
    45ca:	call   1c60 <dcgettext@plt>
    45cf:	mov    rcx,rbx
    45d2:	mov    rdx,rax
    45d5:	xor    esi,esi
    45d7:	xor    eax,eax
    45d9:	xor    edi,edi
    45db:	call   1ea0 <error@plt>
    45e0:	add    rsp,0x18
    45e4:	xor    eax,eax
    45e6:	pop    rbx
    45e7:	pop    rbp
    45e8:	pop    r12
    45ea:	pop    r13
    45ec:	pop    r14
    45ee:	pop    r15
    45f0:	ret    
    45f1:	nop    DWORD PTR [rax+0x0]
    45f8:	lea    rbx,[r12+0x2]
    45fd:	mov    r13d,DWORD PTR [rip+0x20bb9c]        # 2101a0 <stderr@@GLIBC_2.2.5+0xc0>
    4604:	mov    r8d,0x8
    460a:	jmp    422a <__cxa_finalize@plt+0x22ba>
    460f:	nop
    4610:	lea    rbx,[r12+0x2]
    4615:	mov    r13d,DWORD PTR [rip+0x20bb74]        # 210190 <stderr@@GLIBC_2.2.5+0xb0>
    461c:	mov    r8d,0x4
    4622:	jmp    422a <__cxa_finalize@plt+0x22ba>
    4627:	mov    r13d,DWORD PTR [rip+0x20bb62]        # 210190 <stderr@@GLIBC_2.2.5+0xb0>
    462e:	mov    r8d,0x4
    4634:	jmp    422a <__cxa_finalize@plt+0x22ba>
    4639:	mov    r13d,DWORD PTR [rip+0x20bb50]        # 210190 <stderr@@GLIBC_2.2.5+0xb0>
    4640:	mov    rbx,rdi
    4643:	mov    r8d,0x4
    4649:	jmp    422a <__cxa_finalize@plt+0x22ba>
    464e:	lea    rcx,[rip+0x865b]        # ccb0 <_IO_stdin_used@@Base+0x17d0>
    4655:	lea    rsi,[rip+0x6eb0]        # b50c <_IO_stdin_used@@Base+0x2c>
    465c:	lea    rdi,[rip+0x6ed9]        # b53c <_IO_stdin_used@@Base+0x5c>
    4663:	mov    edx,0x3e3
    4668:	call   1d00 <__assert_fail@plt>
    466d:	lea    rcx,[rip+0x861c]        # cc90 <_IO_stdin_used@@Base+0x17b0>
    4674:	lea    rsi,[rip+0x6e91]        # b50c <_IO_stdin_used@@Base+0x2c>
    467b:	lea    rdi,[rip+0x6e9d]        # b51f <_IO_stdin_used@@Base+0x3f>
    4682:	mov    edx,0x285
    4687:	call   1d00 <__assert_fail@plt>
    468c:	lea    rcx,[rip+0x85fd]        # cc90 <_IO_stdin_used@@Base+0x17b0>
    4693:	lea    rsi,[rip+0x6e72]        # b50c <_IO_stdin_used@@Base+0x2c>
    469a:	lea    rdi,[rip+0x70d7]        # b778 <_IO_stdin_used@@Base+0x298>
    46a1:	mov    edx,0x2e8
    46a6:	call   1d00 <__assert_fail@plt>
    46ab:	mov    esi,0x1
    46b0:	jmp    41ff <__cxa_finalize@plt+0x228f>
    46b5:	lea    rcx,[rip+0x85f4]        # ccb0 <_IO_stdin_used@@Base+0x17d0>
    46bc:	lea    rsi,[rip+0x6e49]        # b50c <_IO_stdin_used@@Base+0x2c>
    46c3:	lea    rdi,[rip+0x6e4b]        # b515 <_IO_stdin_used@@Base+0x35>
    46ca:	mov    edx,0x3d7
    46cf:	call   1d00 <__assert_fail@plt>
    46d4:	xchg   ax,ax
    46d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    46e0:	push   r15
    46e2:	push   r14
    46e4:	push   r13
    46e6:	push   r12
    46e8:	push   rbp
    46e9:	push   rbx
    46ea:	sub    rsp,0x38
    46ee:	mov    rax,QWORD PTR fs:0x28
    46f7:	mov    QWORD PTR [rsp+0x28],rax
    46fc:	xor    eax,eax
    46fe:	cmp    rdi,rsi
    4701:	mov    DWORD PTR [rsp+0x18],r8d
    4706:	jbe    4795 <__cxa_finalize@plt+0x2825>
    470c:	lea    rbx,[rdi-0x1]
    4710:	movsxd r14,r9d
    4713:	mov    rax,rdi
    4716:	sub    rax,rsi
    4719:	lea    r13,[rip+0x80f8]        # c818 <_IO_stdin_used@@Base+0x1338>
    4720:	mov    r12,rdi
    4723:	imul   rbx,r14
    4727:	add    rax,rdx
    472a:	mov    r15,rdx
    472d:	mov    QWORD PTR [rsp],rax
    4731:	nop    DWORD PTR [rax+0x0]
    4738:	xor    edx,edx
    473a:	mov    rax,rbx
    473d:	add    r15,0x1
    4741:	movzx  r8d,BYTE PTR [r15-0x1]
    4746:	div    r12
    4749:	cmp    r8b,0xd
    474d:	movzx  edx,r8b
    4751:	mov    rbp,rax
    4754:	ja     4830 <__cxa_finalize@plt+0x28c0>
    475a:	movsxd rax,DWORD PTR [r13+rdx*4+0x0]
    475f:	add    rax,r13
    4762:	jmp    rax
    4764:	nop    DWORD PTR [rax+0x0]
    4768:	lea    rdx,[rip+0x6df9]        # b568 <_IO_stdin_used@@Base+0x88>
    476f:	nop
    4770:	mov    eax,DWORD PTR [rsp+0x18]
    4774:	sub    r9d,ebp
    4777:	lea    rdi,[rip+0x6d7e]        # b4fc <_IO_stdin_used@@Base+0x1c>
    477e:	sub    rbx,r14
    4781:	lea    esi,[r9+rax*1]
    4785:	xor    eax,eax
    4787:	call   8540 <__cxa_finalize@plt+0x65d0>
    478c:	cmp    r15,QWORD PTR [rsp]
    4790:	mov    r9d,ebp
    4793:	jne    4738 <__cxa_finalize@plt+0x27c8>
    4795:	mov    rax,QWORD PTR [rsp+0x28]
    479a:	xor    rax,QWORD PTR fs:0x28
    47a3:	jne    4899 <__cxa_finalize@plt+0x2929>
    47a9:	add    rsp,0x38
    47ad:	pop    rbx
    47ae:	pop    rbp
    47af:	pop    r12
    47b1:	pop    r13
    47b3:	pop    r14
    47b5:	pop    r15
    47b7:	ret    
    47b8:	nop    DWORD PTR [rax+rax*1+0x0]
    47c0:	lea    rdx,[rip+0x6d9e]        # b565 <_IO_stdin_used@@Base+0x85>
    47c7:	jmp    4770 <__cxa_finalize@plt+0x2800>
    47c9:	nop    DWORD PTR [rax+0x0]
    47d0:	lea    rdx,[rip+0x6d9d]        # b574 <_IO_stdin_used@@Base+0x94>
    47d7:	jmp    4770 <__cxa_finalize@plt+0x2800>
    47d9:	nop    DWORD PTR [rax+0x0]
    47e0:	lea    rdx,[rip+0x6d87]        # b56e <_IO_stdin_used@@Base+0x8e>
    47e7:	jmp    4770 <__cxa_finalize@plt+0x2800>
    47e9:	nop    DWORD PTR [rax+0x0]
    47f0:	lea    rdx,[rip+0x6d83]        # b57a <_IO_stdin_used@@Base+0x9a>
    47f7:	jmp    4770 <__cxa_finalize@plt+0x2800>
    47fc:	nop    DWORD PTR [rax+0x0]
    4800:	lea    rdx,[rip+0x6d6a]        # b571 <_IO_stdin_used@@Base+0x91>
    4807:	jmp    4770 <__cxa_finalize@plt+0x2800>
    480c:	nop    DWORD PTR [rax+0x0]
    4810:	lea    rdx,[rip+0x6d60]        # b577 <_IO_stdin_used@@Base+0x97>
    4817:	jmp    4770 <__cxa_finalize@plt+0x2800>
    481c:	nop    DWORD PTR [rax+0x0]
    4820:	lea    rdx,[rip+0x6d44]        # b56b <_IO_stdin_used@@Base+0x8b>
    4827:	jmp    4770 <__cxa_finalize@plt+0x2800>
    482c:	nop    DWORD PTR [rax+0x0]
    4830:	mov    DWORD PTR [rsp+0x1c],r9d
    4835:	mov    QWORD PTR [rsp+0x10],rdx
    483a:	mov    BYTE PTR [rsp+0x8],r8b
    483f:	call   1f50 <__ctype_b_loc@plt>
    4844:	mov    rdx,QWORD PTR [rsp+0x10]
    4849:	mov    rax,QWORD PTR [rax]
    484c:	lea    r11,[rsp+0x24]
    4851:	movzx  r8d,BYTE PTR [rsp+0x8]
    4857:	lea    rcx,[rip+0x6cff]        # b55d <_IO_stdin_used@@Base+0x7d>
    485e:	mov    esi,0x1
    4863:	mov    rdi,r11
    4866:	mov    QWORD PTR [rsp+0x8],r11
    486b:	test   BYTE PTR [rax+rdx*2+0x1],0x40
    4870:	lea    rax,[rip+0x6ce9]        # b560 <_IO_stdin_used@@Base+0x80>
    4877:	mov    edx,0x4
    487c:	cmove  rcx,rax
    4880:	xor    eax,eax
    4882:	call   1f60 <__sprintf_chk@plt>
    4887:	mov    r11,QWORD PTR [rsp+0x8]
    488c:	mov    r9d,DWORD PTR [rsp+0x1c]
    4891:	mov    rdx,r11
    4894:	jmp    4770 <__cxa_finalize@plt+0x2800>
    4899:	call   1c90 <__stack_chk_fail@plt>
    489e:	xchg   ax,ax
    48a0:	push   rbp
    48a1:	push   rbx
    48a2:	mov    ebx,0x1
    48a7:	sub    rsp,0x8
    48ab:	mov    rax,QWORD PTR [rip+0x20b8f6]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    48b2:	test   rax,rax
    48b5:	je     48ed <__cxa_finalize@plt+0x297d>
    48b7:	test   BYTE PTR [rax],0x20
    48ba:	mov    ebp,edi
    48bc:	jne    4928 <__cxa_finalize@plt+0x29b8>
    48be:	mov    rdx,QWORD PTR [rip+0x20b8eb]        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    48c5:	lea    rdi,[rip+0x904d]        # d919 <version_etc_copyright@@Base+0x99>
    48cc:	mov    ecx,0x2
    48d1:	mov    rsi,QWORD PTR [rdx-0x8]
    48d5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    48d7:	jne    49a0 <__cxa_finalize@plt+0x2a30>
    48dd:	mov    ebx,0x1
    48e2:	mov    QWORD PTR [rip+0x20b8bb],0x0        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    48ed:	mov    rax,QWORD PTR [rip+0x20b7b4]        # 2100a8 <stdout@@GLIBC_2.2.5>
    48f4:	test   BYTE PTR [rax],0x20
    48f7:	je     491c <__cxa_finalize@plt+0x29ac>
    48f9:	lea    rsi,[rip+0x6c8c]        # b58c <_IO_stdin_used@@Base+0xac>
    4900:	mov    edx,0x5
    4905:	xor    edi,edi
    4907:	xor    ebx,ebx
    4909:	call   1c60 <dcgettext@plt>
    490e:	xor    esi,esi
    4910:	mov    rdx,rax
    4913:	xor    edi,edi
    4915:	xor    eax,eax
    4917:	call   1ea0 <error@plt>
    491c:	add    rsp,0x8
    4920:	mov    eax,ebx
    4922:	pop    rbx
    4923:	pop    rbp
    4924:	ret    
    4925:	nop    DWORD PTR [rax]
    4928:	mov    rdx,QWORD PTR [rip+0x20b889]        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    492f:	xor    edi,edi
    4931:	mov    esi,0x3
    4936:	call   7a50 <__cxa_finalize@plt+0x5ae0>
    493b:	lea    rsi,[rip+0x6c3b]        # b57d <_IO_stdin_used@@Base+0x9d>
    4942:	mov    rbx,rax
    4945:	xor    edi,edi
    4947:	mov    edx,0x5
    494c:	call   1c60 <dcgettext@plt>
    4951:	mov    rcx,rbx
    4954:	mov    rdx,rax
    4957:	xor    edi,edi
    4959:	xor    eax,eax
    495b:	mov    esi,ebp
    495d:	call   1ea0 <error@plt>
    4962:	mov    rax,QWORD PTR [rip+0x20b847]        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    4969:	lea    rdi,[rip+0x8fa9]        # d919 <version_etc_copyright@@Base+0x99>
    4970:	mov    ecx,0x2
    4975:	mov    rsi,QWORD PTR [rax-0x8]
    4979:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    497b:	seta   dl
    497e:	setb   al
    4981:	xor    ebx,ebx
    4983:	cmp    dl,al
    4985:	je     48e2 <__cxa_finalize@plt+0x2972>
    498b:	mov    rdi,QWORD PTR [rip+0x20b816]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4992:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    4997:	jmp    48e2 <__cxa_finalize@plt+0x2972>
    499c:	nop    DWORD PTR [rax+0x0]
    49a0:	mov    rdi,rax
    49a3:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    49a8:	test   eax,eax
    49aa:	je     48dd <__cxa_finalize@plt+0x296d>
    49b0:	mov    rdx,QWORD PTR [rip+0x20b801]        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    49b7:	mov    esi,0x3
    49bc:	xor    edi,edi
    49be:	call   7a50 <__cxa_finalize@plt+0x5ae0>
    49c3:	mov    rbx,rax
    49c6:	call   1ba0 <__errno_location@plt>
    49cb:	mov    esi,DWORD PTR [rax]
    49cd:	lea    rdx,[rip+0x85ec]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    49d4:	mov    rcx,rbx
    49d7:	xor    edi,edi
    49d9:	xor    eax,eax
    49db:	xor    ebx,ebx
    49dd:	call   1ea0 <error@plt>
    49e2:	jmp    48e2 <__cxa_finalize@plt+0x2972>
    49e7:	nop    WORD PTR [rax+rax*1+0x0]
    49f0:	push   rbp
    49f1:	push   rbx
    49f2:	lea    rbx,[rip+0x8f20]        # d919 <version_etc_copyright@@Base+0x99>
    49f9:	mov    ebp,0x1
    49fe:	sub    rsp,0x8
    4a02:	mov    rax,QWORD PTR [rip+0x20b7a7]        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    4a09:	mov    rdx,QWORD PTR [rax]
    4a0c:	test   rdx,rdx
    4a0f:	mov    QWORD PTR [rip+0x20b7a2],rdx        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    4a16:	je     4a9d <__cxa_finalize@plt+0x2b2d>
    4a1c:	add    rax,0x8
    4a20:	mov    ecx,0x2
    4a25:	mov    rsi,rdx
    4a28:	mov    QWORD PTR [rip+0x20b781],rax        # 2101b0 <stderr@@GLIBC_2.2.5+0xd0>
    4a2f:	mov    rdi,rbx
    4a32:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4a34:	jne    4a70 <__cxa_finalize@plt+0x2b00>
    4a36:	lea    rsi,[rip+0x6b5b]        # b598 <_IO_stdin_used@@Base+0xb8>
    4a3d:	mov    edx,0x5
    4a42:	xor    edi,edi
    4a44:	call   1c60 <dcgettext@plt>
    4a49:	mov    QWORD PTR [rip+0x20b768],rax        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    4a50:	mov    rax,QWORD PTR [rip+0x20b659]        # 2100b0 <stdin@@GLIBC_2.2.5>
    4a57:	mov    BYTE PTR [rip+0x20b746],0x1        # 2101a4 <stderr@@GLIBC_2.2.5+0xc4>
    4a5e:	mov    QWORD PTR [rip+0x20b743],rax        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4a65:	test   rax,rax
    4a68:	je     4a02 <__cxa_finalize@plt+0x2a92>
    4a6a:	jmp    4a8b <__cxa_finalize@plt+0x2b1b>
    4a6c:	nop    DWORD PTR [rax+0x0]
    4a70:	lea    rsi,[rip+0x6afe]        # b575 <_IO_stdin_used@@Base+0x95>
    4a77:	mov    rdi,rdx
    4a7a:	call   1ed0 <fopen@plt>
    4a7f:	test   rax,rax
    4a82:	mov    QWORD PTR [rip+0x20b71f],rax        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4a89:	je     4ab0 <__cxa_finalize@plt+0x2b40>
    4a8b:	cmp    BYTE PTR [rip+0x20b75e],0x0        # 2101f0 <stderr@@GLIBC_2.2.5+0x110>
    4a92:	je     4a9d <__cxa_finalize@plt+0x2b2d>
    4a94:	cmp    BYTE PTR [rip+0x20b777],0x0        # 210212 <stderr@@GLIBC_2.2.5+0x132>
    4a9b:	je     4af0 <__cxa_finalize@plt+0x2b80>
    4a9d:	add    rsp,0x8
    4aa1:	mov    eax,ebp
    4aa3:	pop    rbx
    4aa4:	pop    rbp
    4aa5:	ret    
    4aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ab0:	mov    rdx,QWORD PTR [rip+0x20b701]        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    4ab7:	mov    esi,0x3
    4abc:	xor    edi,edi
    4abe:	call   7a50 <__cxa_finalize@plt+0x5ae0>
    4ac3:	mov    rbp,rax
    4ac6:	call   1ba0 <__errno_location@plt>
    4acb:	mov    esi,DWORD PTR [rax]
    4acd:	lea    rdx,[rip+0x84ec]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    4ad4:	mov    rcx,rbp
    4ad7:	xor    eax,eax
    4ad9:	xor    edi,edi
    4adb:	xor    ebp,ebp
    4add:	call   1ea0 <error@plt>
    4ae2:	mov    rax,QWORD PTR [rip+0x20b6bf]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4ae9:	jmp    4a65 <__cxa_finalize@plt+0x2af5>
    4aee:	xchg   ax,ax
    4af0:	xor    ecx,ecx
    4af2:	mov    edx,0x2
    4af7:	xor    esi,esi
    4af9:	mov    rdi,rax
    4afc:	call   1e80 <setvbuf@plt>
    4b01:	jmp    4a9d <__cxa_finalize@plt+0x2b2d>
    4b03:	nop    DWORD PTR [rax]
    4b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b10:	push   r15
    4b12:	push   r14
    4b14:	push   r13
    4b16:	push   r12
    4b18:	push   rbp
    4b19:	push   rbx
    4b1a:	sub    rsp,0x20a8
    4b21:	mov    rax,QWORD PTR fs:0x28
    4b2a:	mov    QWORD PTR [rsp+0x2098],rax
    4b32:	xor    eax,eax
    4b34:	test   rdi,rdi
    4b37:	je     4cb8 <__cxa_finalize@plt+0x2d48>
    4b3d:	mov    r15,QWORD PTR [rip+0x20b664]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4b44:	test   r15,r15
    4b47:	je     4c1e <__cxa_finalize@plt+0x2cae>
    4b4d:	mov    r13,rdi
    4b50:	mov    ebx,0x1
    4b55:	mov    r12,rsp
    4b58:	lea    rbp,[rsp+0x90]
    4b60:	movabs r14,0x1fffffffffffffff
    4b6a:	jmp    4bcf <__cxa_finalize@plt+0x2c5f>
    4b6c:	nop    DWORD PTR [rax+0x0]
    4b70:	mov    eax,DWORD PTR [rsp+0x18]
    4b74:	and    eax,0xd000
    4b79:	cmp    eax,0x8000
    4b7e:	jne    4c48 <__cxa_finalize@plt+0x2cd8>
    4b84:	mov    rax,QWORD PTR [rsp+0x38]
    4b89:	mov    ecx,0x200
    4b8e:	lea    rdx,[rax-0x1]
    4b92:	cmp    rdx,r14
    4b95:	mov    rdx,QWORD PTR [rsp+0x30]
    4b9a:	cmova  rax,rcx
    4b9e:	cmp    rdx,rax
    4ba1:	jle    4c48 <__cxa_finalize@plt+0x2cd8>
    4ba7:	cmp    rdx,r13
    4baa:	jae    4cce <__cxa_finalize@plt+0x2d5e>
    4bb0:	sub    r13,rdx
    4bb3:	xor    edi,edi
    4bb5:	call   48a0 <__cxa_finalize@plt+0x2930>
    4bba:	and    ebx,eax
    4bbc:	call   49f0 <__cxa_finalize@plt+0x2a80>
    4bc1:	mov    r15,QWORD PTR [rip+0x20b5e0]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4bc8:	and    ebx,eax
    4bca:	test   r15,r15
    4bcd:	je     4c1e <__cxa_finalize@plt+0x2cae>
    4bcf:	mov    rdi,r15
    4bd2:	call   1dc0 <fileno@plt>
    4bd7:	mov    rdx,r12
    4bda:	mov    esi,eax
    4bdc:	mov    edi,0x1
    4be1:	call   1e10 <__fxstat@plt>
    4be6:	test   eax,eax
    4be8:	je     4b70 <__cxa_finalize@plt+0x2c00>
    4bea:	mov    rdx,QWORD PTR [rip+0x20b5c7]        # 2101b8 <stderr@@GLIBC_2.2.5+0xd8>
    4bf1:	mov    esi,0x3
    4bf6:	xor    edi,edi
    4bf8:	call   7a50 <__cxa_finalize@plt+0x5ae0>
    4bfd:	mov    rbx,rax
    4c00:	call   1ba0 <__errno_location@plt>
    4c05:	mov    esi,DWORD PTR [rax]
    4c07:	lea    rdx,[rip+0x83b2]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    4c0e:	mov    rcx,rbx
    4c11:	xor    edi,edi
    4c13:	xor    eax,eax
    4c15:	xor    ebx,ebx
    4c17:	call   1ea0 <error@plt>
    4c1c:	jmp    4bb3 <__cxa_finalize@plt+0x2c43>
    4c1e:	lea    rsi,[rip+0x6c13]        # b838 <_IO_stdin_used@@Base+0x358>
    4c25:	mov    edx,0x5
    4c2a:	xor    edi,edi
    4c2c:	call   1c60 <dcgettext@plt>
    4c31:	xor    esi,esi
    4c33:	mov    rdx,rax
    4c36:	mov    edi,0x1
    4c3b:	xor    eax,eax
    4c3d:	call   1ea0 <error@plt>
    4c42:	nop    WORD PTR [rax+rax*1+0x0]
    4c48:	mov    r15d,0x2000
    4c4e:	xchg   ax,ax
    4c50:	cmp    r15,r13
    4c53:	mov    r8,QWORD PTR [rip+0x20b54e]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4c5a:	mov    edx,0x1
    4c5f:	cmova  r15,r13
    4c63:	mov    esi,0x2000
    4c68:	mov    rdi,rbp
    4c6b:	mov    rcx,r15
    4c6e:	call   1ee0 <__fread_unlocked_chk@plt>
    4c73:	sub    r13,rax
    4c76:	cmp    rax,r15
    4c79:	je     4c8c <__cxa_finalize@plt+0x2d1c>
    4c7b:	mov    rax,QWORD PTR [rip+0x20b526]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4c82:	mov    eax,DWORD PTR [rax]
    4c84:	test   al,0x20
    4c86:	jne    4cbf <__cxa_finalize@plt+0x2d4f>
    4c88:	test   al,0x10
    4c8a:	jne    4cc3 <__cxa_finalize@plt+0x2d53>
    4c8c:	test   r13,r13
    4c8f:	jne    4c50 <__cxa_finalize@plt+0x2ce0>
    4c91:	mov    rcx,QWORD PTR [rsp+0x2098]
    4c99:	xor    rcx,QWORD PTR fs:0x28
    4ca2:	mov    eax,ebx
    4ca4:	jne    4cea <__cxa_finalize@plt+0x2d7a>
    4ca6:	add    rsp,0x20a8
    4cad:	pop    rbx
    4cae:	pop    rbp
    4caf:	pop    r12
    4cb1:	pop    r13
    4cb3:	pop    r14
    4cb5:	pop    r15
    4cb7:	ret    
    4cb8:	mov    ebx,0x1
    4cbd:	jmp    4c91 <__cxa_finalize@plt+0x2d21>
    4cbf:	xor    ebx,ebx
    4cc1:	jmp    4c91 <__cxa_finalize@plt+0x2d21>
    4cc3:	test   r13,r13
    4cc6:	jne    4bb3 <__cxa_finalize@plt+0x2c43>
    4ccc:	jmp    4c91 <__cxa_finalize@plt+0x2d21>
    4cce:	mov    edx,0x1
    4cd3:	mov    rsi,r13
    4cd6:	mov    rdi,r15
    4cd9:	call   8cb0 <__cxa_finalize@plt+0x6d40>
    4cde:	test   eax,eax
    4ce0:	mov    eax,0x0
    4ce5:	cmovne ebx,eax
    4ce8:	jmp    4c91 <__cxa_finalize@plt+0x2d21>
    4cea:	call   1c90 <__stack_chk_fail@plt>
    4cef:	nop
    4cf0:	push   r12
    4cf2:	mov    r12,rdi
    4cf5:	push   rbp
    4cf6:	push   rbx
    4cf7:	mov    DWORD PTR [rdi],0xffffffff
    4cfd:	mov    ebp,0x1
    4d02:	mov    rdi,QWORD PTR [rip+0x20b49f]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4d09:	test   rdi,rdi
    4d0c:	jne    4d33 <__cxa_finalize@plt+0x2dc3>
    4d0e:	jmp    4d41 <__cxa_finalize@plt+0x2dd1>
    4d10:	call   1ba0 <__errno_location@plt>
    4d15:	mov    edi,DWORD PTR [rax]
    4d17:	call   48a0 <__cxa_finalize@plt+0x2930>
    4d1c:	mov    ebx,eax
    4d1e:	call   49f0 <__cxa_finalize@plt+0x2a80>
    4d23:	mov    rdi,QWORD PTR [rip+0x20b47e]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    4d2a:	and    ebx,eax
    4d2c:	and    ebp,ebx
    4d2e:	test   rdi,rdi
    4d31:	je     4d41 <__cxa_finalize@plt+0x2dd1>
    4d33:	call   1d50 <fgetc@plt>
    4d38:	cmp    eax,0xffffffff
    4d3b:	mov    DWORD PTR [r12],eax
    4d3f:	je     4d10 <__cxa_finalize@plt+0x2da0>
    4d41:	mov    eax,ebp
    4d43:	pop    rbx
    4d44:	pop    rbp
    4d45:	pop    r12
    4d47:	ret    
    4d48:	nop    DWORD PTR [rax+rax*1+0x0]
    4d50:	push   r15
    4d52:	push   r14
    4d54:	mov    r14,rsi
    4d57:	push   r13
    4d59:	push   r12
    4d5b:	push   rbp
    4d5c:	push   rbx
    4d5d:	sub    rsp,0x28
    4d61:	cmp    BYTE PTR [rip+0x20b2a9],0x0        # 210011 <quoting_style_args@@Base+0x4b1>
    4d68:	mov    QWORD PTR [rsp+0x18],rdi
    4d6d:	mov    QWORD PTR [rsp+0x8],rcx
    4d72:	je     4d81 <__cxa_finalize@plt+0x2e11>
    4d74:	cmp    BYTE PTR [rip+0x20b295],0x0        # 210010 <quoting_style_args@@Base+0x4b0>
    4d7b:	je     4f50 <__cxa_finalize@plt+0x2fe0>
    4d81:	cmp    QWORD PTR [rip+0x20b447],0x0        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    4d89:	mov    BYTE PTR [rip+0x20b370],0x0        # 210100 <stderr@@GLIBC_2.2.5+0x20>
    4d90:	je     4f8f <__cxa_finalize@plt+0x301f>
    4d96:	mov    rax,QWORD PTR [rsp+0x8]
    4d9b:	xor    ebp,ebp
    4d9d:	xor    r12d,r12d
    4da0:	mov    QWORD PTR [rsp+0x10],r14
    4da5:	lea    r13,[rax+r14*1]
    4da9:	jmp    4de5 <__cxa_finalize@plt+0x2e75>
    4dab:	nop    DWORD PTR [rax+rax*1+0x0]
    4db0:	mov    rdi,QWORD PTR [rip+0x20b2f1]        # 2100a8 <stdout@@GLIBC_2.2.5>
    4db7:	mov    rax,QWORD PTR [rdi+0x28]
    4dbb:	cmp    rax,QWORD PTR [rdi+0x30]
    4dbf:	jae    4fa8 <__cxa_finalize@plt+0x3038>
    4dc5:	lea    rdx,[rax+0x1]
    4dc9:	mov    QWORD PTR [rdi+0x28],rdx
    4dcd:	mov    BYTE PTR [rax],0xa
    4dd0:	add    r12,0x1
    4dd4:	add    rbp,0x28
    4dd8:	cmp    QWORD PTR [rip+0x20b3f1],r12        # 2101d0 <stderr@@GLIBC_2.2.5+0xf0>
    4ddf:	jbe    4f8f <__cxa_finalize@plt+0x301f>
    4de5:	mov    rax,QWORD PTR [rip+0x20b3ec]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    4dec:	lea    rsi,[rip+0x7fcd]        # cdc0 <_IO_stdin_used@@Base+0x18e0>
    4df3:	mov    rbx,QWORD PTR [rip+0x20b3c6]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    4dfa:	xor    edx,edx
    4dfc:	mov    eax,DWORD PTR [rax+rbp*1+0x4]
    4e00:	movsxd rcx,DWORD PTR [rsi+rax*4]
    4e04:	mov    rax,rbx
    4e07:	sub    rbx,QWORD PTR [rsp+0x10]
    4e0c:	div    rcx
    4e0f:	xor    edx,edx
    4e11:	mov    r14,rax
    4e14:	mov    r15d,eax
    4e17:	mov    rax,rbx
    4e1a:	div    rcx
    4e1d:	test   r12,r12
    4e20:	mov    rbx,rax
    4e23:	jne    4fc0 <__cxa_finalize@plt+0x3050>
    4e29:	xor    esi,esi
    4e2b:	mov    rdi,QWORD PTR [rsp+0x18]
    4e30:	call   QWORD PTR [rip+0x20b3ca]        # 210200 <stderr@@GLIBC_2.2.5+0x120>
    4e36:	mov    rax,QWORD PTR [rip+0x20b39b]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    4e3d:	movsxd rsi,ebx
    4e40:	movsxd rdi,r14d
    4e43:	mov    rdx,QWORD PTR [rsp+0x8]
    4e48:	add    rax,rbp
    4e4b:	lea    rcx,[rax+0x10]
    4e4f:	mov    r9d,DWORD PTR [rax+0x20]
    4e53:	mov    r8d,DWORD PTR [rax+0x1c]
    4e57:	call   QWORD PTR [rax+0x8]
    4e5a:	mov    rcx,QWORD PTR [rip+0x20b377]        # 2101d8 <stderr@@GLIBC_2.2.5+0xf8>
    4e61:	add    rcx,rbp
    4e64:	cmp    BYTE PTR [rcx+0x18],0x0
    4e68:	je     4db0 <__cxa_finalize@plt+0x2e40>
    4e6e:	mov    eax,DWORD PTR [rcx+0x20]
    4e71:	lea    rsi,[rip+0x6684]        # b4fc <_IO_stdin_used@@Base+0x1c>
    4e78:	mov    edi,0x1
    4e7d:	imul   eax,ebx
    4e80:	imul   ebx,DWORD PTR [rcx+0x1c]
    4e84:	lea    rcx,[rip+0x8716]        # d5a1 <quoting_style_vals@@Base+0x81>
    4e8b:	cdq    
    4e8c:	idiv   r15d
    4e8f:	lea    edx,[rax+rbx*1]
    4e92:	xor    eax,eax
    4e94:	call   1e70 <__printf_chk@plt>
    4e99:	mov    rcx,QWORD PTR [rip+0x20b208]        # 2100a8 <stdout@@GLIBC_2.2.5>
    4ea0:	lea    rdi,[rip+0x6702]        # b5a9 <_IO_stdin_used@@Base+0xc9>
    4ea7:	mov    edx,0x3
    4eac:	mov    esi,0x1
    4eb1:	call   1e30 <fwrite_unlocked@plt>
    4eb6:	cmp    QWORD PTR [rsp+0x10],0x0
    4ebc:	je     4f12 <__cxa_finalize@plt+0x2fa2>
    4ebe:	call   1f50 <__ctype_b_loc@plt>
    4ec3:	mov    rbx,QWORD PTR [rsp+0x8]
    4ec8:	mov    r15,rax
    4ecb:	nop    DWORD PTR [rax+rax*1+0x0]
    4ed0:	add    rbx,0x1
    4ed4:	movzx  ecx,BYTE PTR [rbx-0x1]
    4ed8:	mov    rdx,QWORD PTR [r15]
    4edb:	test   BYTE PTR [rdx+rcx*2+0x1],0x40
    4ee0:	mov    rax,rcx
    4ee3:	movzx  esi,cl
    4ee6:	jne    4ef2 <__cxa_finalize@plt+0x2f82>
    4ee8:	mov    esi,0x2e
    4eed:	mov    eax,0x2e
    4ef2:	mov    rdi,QWORD PTR [rip+0x20b1af]        # 2100a8 <stdout@@GLIBC_2.2.5>
    4ef9:	mov    rdx,QWORD PTR [rdi+0x28]
    4efd:	cmp    rdx,QWORD PTR [rdi+0x30]
    4f01:	jae    4f40 <__cxa_finalize@plt+0x2fd0>
    4f03:	lea    rcx,[rdx+0x1]
    4f07:	mov    QWORD PTR [rdi+0x28],rcx
    4f0b:	mov    BYTE PTR [rdx],al
    4f0d:	cmp    rbx,r13
    4f10:	jne    4ed0 <__cxa_finalize@plt+0x2f60>
    4f12:	mov    rdi,QWORD PTR [rip+0x20b18f]        # 2100a8 <stdout@@GLIBC_2.2.5>
    4f19:	mov    rax,QWORD PTR [rdi+0x28]
    4f1d:	cmp    rax,QWORD PTR [rdi+0x30]
    4f21:	jae    4fe8 <__cxa_finalize@plt+0x3078>
    4f27:	lea    rdx,[rax+0x1]
    4f2b:	mov    QWORD PTR [rdi+0x28],rdx
    4f2f:	mov    BYTE PTR [rax],0x3c
    4f32:	jmp    4db0 <__cxa_finalize@plt+0x2e40>
    4f37:	nop    WORD PTR [rax+rax*1+0x0]
    4f40:	call   1cd0 <__overflow@plt>
    4f45:	jmp    4f0d <__cxa_finalize@plt+0x2f9d>
    4f47:	nop    WORD PTR [rax+rax*1+0x0]
    4f50:	mov    rdi,rdx
    4f53:	mov    rdx,QWORD PTR [rip+0x20b266]        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    4f5a:	cmp    rdx,rsi
    4f5d:	jne    4d81 <__cxa_finalize@plt+0x2e11>
    4f63:	mov    rsi,rcx
    4f66:	call   1d70 <memcmp@plt>
    4f6b:	test   eax,eax
    4f6d:	jne    4d81 <__cxa_finalize@plt+0x2e11>
    4f73:	cmp    BYTE PTR [rip+0x20b186],0x0        # 210100 <stderr@@GLIBC_2.2.5+0x20>
    4f7a:	jne    4f8f <__cxa_finalize@plt+0x301f>
    4f7c:	lea    rdi,[rip+0x6624]        # b5a7 <_IO_stdin_used@@Base+0xc7>
    4f83:	call   1be0 <puts@plt>
    4f88:	mov    BYTE PTR [rip+0x20b171],0x1        # 210100 <stderr@@GLIBC_2.2.5+0x20>
    4f8f:	mov    BYTE PTR [rip+0x20b07a],0x0        # 210010 <quoting_style_args@@Base+0x4b0>
    4f96:	add    rsp,0x28
    4f9a:	pop    rbx
    4f9b:	pop    rbp
    4f9c:	pop    r12
    4f9e:	pop    r13
    4fa0:	pop    r14
    4fa2:	pop    r15
    4fa4:	ret    
    4fa5:	nop    DWORD PTR [rax]
    4fa8:	mov    esi,0xa
    4fad:	call   1cd0 <__overflow@plt>
    4fb2:	jmp    4dd0 <__cxa_finalize@plt+0x2e60>
    4fb7:	nop    WORD PTR [rax+rax*1+0x0]
    4fc0:	mov    edx,DWORD PTR [rip+0x20b25a]        # 210220 <stderr@@GLIBC_2.2.5+0x140>
    4fc6:	lea    rcx,[rip+0x85d4]        # d5a1 <quoting_style_vals@@Base+0x81>
    4fcd:	lea    rsi,[rip+0x6528]        # b4fc <_IO_stdin_used@@Base+0x1c>
    4fd4:	mov    edi,0x1
    4fd9:	xor    eax,eax
    4fdb:	call   1e70 <__printf_chk@plt>
    4fe0:	jmp    4e36 <__cxa_finalize@plt+0x2ec6>
    4fe5:	nop    DWORD PTR [rax]
    4fe8:	mov    esi,0x3c
    4fed:	call   1cd0 <__overflow@plt>
    4ff2:	jmp    4db0 <__cxa_finalize@plt+0x2e40>
    4ff7:	nop    WORD PTR [rax+rax*1+0x0]
    5000:	push   rbp
    5001:	push   rbx
    5002:	mov    rbp,rdi
    5005:	mov    ebx,esi
    5007:	sub    rsp,0x8
    500b:	mov    rdi,QWORD PTR [rip+0x20b096]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5012:	mov    rax,QWORD PTR [rdi+0x28]
    5016:	cmp    rax,QWORD PTR [rdi+0x30]
    501a:	jae    5070 <__cxa_finalize@plt+0x3100>
    501c:	lea    rdx,[rax+0x1]
    5020:	mov    QWORD PTR [rdi+0x28],rdx
    5024:	mov    BYTE PTR [rax],0x28
    5027:	mov    esi,0x29
    502c:	mov    rdi,rbp
    502f:	call   32a0 <__cxa_finalize@plt+0x1330>
    5034:	test   bl,bl
    5036:	je     5053 <__cxa_finalize@plt+0x30e3>
    5038:	mov    rdi,QWORD PTR [rip+0x20b069]        # 2100a8 <stdout@@GLIBC_2.2.5>
    503f:	mov    rax,QWORD PTR [rdi+0x28]
    5043:	cmp    rax,QWORD PTR [rdi+0x30]
    5047:	jae    5060 <__cxa_finalize@plt+0x30f0>
    5049:	lea    rdx,[rax+0x1]
    504d:	mov    QWORD PTR [rdi+0x28],rdx
    5051:	mov    BYTE PTR [rax],bl
    5053:	add    rsp,0x8
    5057:	pop    rbx
    5058:	pop    rbp
    5059:	ret    
    505a:	nop    WORD PTR [rax+rax*1+0x0]
    5060:	add    rsp,0x8
    5064:	movzx  esi,bl
    5067:	pop    rbx
    5068:	pop    rbp
    5069:	jmp    1cd0 <__overflow@plt>
    506e:	xchg   ax,ax
    5070:	mov    esi,0x28
    5075:	call   1cd0 <__overflow@plt>
    507a:	jmp    5027 <__cxa_finalize@plt+0x30b7>
    507c:	nop    DWORD PTR [rax+0x0]
    5080:	push   rbp
    5081:	push   rbx
    5082:	mov    ebp,esi
    5084:	mov    esi,0x20
    5089:	mov    rbx,rdi
    508c:	sub    rsp,0x8
    5090:	call   32a0 <__cxa_finalize@plt+0x1330>
    5095:	add    rbx,QWORD PTR [rip+0x20b16c]        # 210208 <stderr@@GLIBC_2.2.5+0x128>
    509c:	add    rsp,0x8
    50a0:	movsx  esi,bpl
    50a4:	mov    rdi,rbx
    50a7:	pop    rbx
    50a8:	pop    rbp
    50a9:	jmp    5000 <__cxa_finalize@plt+0x3090>
    50ae:	xchg   ax,ax
    50b0:	test   rdi,rdi
    50b3:	push   r14
    50b5:	push   r13
    50b7:	push   r12
    50b9:	push   rbp
    50ba:	push   rbx
    50bb:	je     5157 <__cxa_finalize@plt+0x31e7>
    50c1:	cmp    QWORD PTR [rip+0x20b0f8],rdi        # 2101c0 <stderr@@GLIBC_2.2.5+0xe0>
    50c8:	mov    r12,rdi
    50cb:	jb     5157 <__cxa_finalize@plt+0x31e7>
    50d1:	mov    rcx,QWORD PTR [rip+0x20b0d0]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    50d8:	mov    rbx,rdx
    50db:	mov    QWORD PTR [rdx],0x0
    50e2:	test   rcx,rcx
    50e5:	je     5150 <__cxa_finalize@plt+0x31e0>
    50e7:	mov    r13,rsi
    50ea:	xor    edi,edi
    50ec:	mov    ebp,0x1
    50f1:	jmp    5121 <__cxa_finalize@plt+0x31b1>
    50f3:	nop    DWORD PTR [rax+rax*1+0x0]
    50f8:	call   1ba0 <__errno_location@plt>
    50fd:	mov    edi,DWORD PTR [rax]
    50ff:	call   48a0 <__cxa_finalize@plt+0x2930>
    5104:	mov    r14d,eax
    5107:	call   49f0 <__cxa_finalize@plt+0x2a80>
    510c:	mov    rcx,QWORD PTR [rip+0x20b095]        # 2101a8 <stderr@@GLIBC_2.2.5+0xc8>
    5113:	and    r14d,eax
    5116:	and    ebp,r14d
    5119:	test   rcx,rcx
    511c:	je     513f <__cxa_finalize@plt+0x31cf>
    511e:	mov    rdi,QWORD PTR [rbx]
    5121:	mov    r14,r12
    5124:	mov    esi,0x1
    5129:	sub    r14,rdi
    512c:	add    rdi,r13
    512f:	mov    rdx,r14
    5132:	call   1c20 <fread_unlocked@plt>
    5137:	add    QWORD PTR [rbx],rax
    513a:	cmp    r14,rax
    513d:	jne    50f8 <__cxa_finalize@plt+0x3188>
    513f:	pop    rbx
    5140:	mov    eax,ebp
    5142:	pop    rbp
    5143:	pop    r12
    5145:	pop    r13
    5147:	pop    r14
    5149:	ret    
    514a:	nop    WORD PTR [rax+rax*1+0x0]
    5150:	mov    ebp,0x1
    5155:	jmp    513f <__cxa_finalize@plt+0x31cf>
    5157:	lea    rcx,[rip+0x7b22]        # cc80 <_IO_stdin_used@@Base+0x17a0>
    515e:	lea    rsi,[rip+0x63a7]        # b50c <_IO_stdin_used@@Base+0x2c>
    5165:	lea    rdi,[rip+0x6441]        # b5ad <_IO_stdin_used@@Base+0xcd>
    516c:	mov    edx,0x507
    5171:	call   1d00 <__assert_fail@plt>
    5176:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5180:	push   r12
    5182:	push   rbp
    5183:	mov    edx,0x5
    5188:	push   rbx
    5189:	mov    ebp,edi
    518b:	add    rsp,0xffffffffffffff80
    518f:	mov    rbx,QWORD PTR [rip+0x20b0a2]        # 210238 <program_name@@Base>
    5196:	mov    rax,QWORD PTR fs:0x28
    519f:	mov    QWORD PTR [rsp+0x78],rax
    51a4:	xor    eax,eax
    51a6:	test   edi,edi
    51a8:	je     51d8 <__cxa_finalize@plt+0x3268>
    51aa:	lea    rsi,[rip+0x66af]        # b860 <_IO_stdin_used@@Base+0x380>
    51b1:	xor    edi,edi
    51b3:	call   1c60 <dcgettext@plt>
    51b8:	mov    rdi,QWORD PTR [rip+0x20af21]        # 2100e0 <stderr@@GLIBC_2.2.5>
    51bf:	mov    rdx,rax
    51c2:	mov    rcx,rbx
    51c5:	mov    esi,0x1
    51ca:	xor    eax,eax
    51cc:	call   1f20 <__fprintf_chk@plt>
    51d1:	mov    edi,ebp
    51d3:	call   1f00 <exit@plt>
    51d8:	lea    rsi,[rip+0x66a9]        # b888 <_IO_stdin_used@@Base+0x3a8>
    51df:	xor    edi,edi
    51e1:	call   1c60 <dcgettext@plt>
    51e6:	mov    rcx,rbx
    51e9:	mov    r8,rbx
    51ec:	mov    rdx,rbx
    51ef:	mov    rsi,rax
    51f2:	mov    edi,0x1
    51f7:	xor    eax,eax
    51f9:	call   1e70 <__printf_chk@plt>
    51fe:	mov    rbx,QWORD PTR [rip+0x20aea3]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5205:	lea    rsi,[rip+0x6724]        # b930 <_IO_stdin_used@@Base+0x450>
    520c:	mov    edx,0x5
    5211:	xor    edi,edi
    5213:	call   1c60 <dcgettext@plt>
    5218:	mov    rsi,rbx
    521b:	mov    rdi,rax
    521e:	call   1d80 <fputs_unlocked@plt>
    5223:	mov    rbx,QWORD PTR [rip+0x20ae7e]        # 2100a8 <stdout@@GLIBC_2.2.5>
    522a:	lea    rsi,[rip+0x67b7]        # b9e8 <_IO_stdin_used@@Base+0x508>
    5231:	mov    edx,0x5
    5236:	xor    edi,edi
    5238:	call   1c60 <dcgettext@plt>
    523d:	mov    rsi,rbx
    5240:	mov    rdi,rax
    5243:	call   1d80 <fputs_unlocked@plt>
    5248:	mov    rbx,QWORD PTR [rip+0x20ae59]        # 2100a8 <stdout@@GLIBC_2.2.5>
    524f:	lea    rsi,[rip+0x67ca]        # ba20 <_IO_stdin_used@@Base+0x540>
    5256:	mov    edx,0x5
    525b:	xor    edi,edi
    525d:	call   1c60 <dcgettext@plt>
    5262:	mov    rsi,rbx
    5265:	mov    rdi,rax
    5268:	call   1d80 <fputs_unlocked@plt>
    526d:	mov    rbx,QWORD PTR [rip+0x20ae34]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5274:	lea    rsi,[rip+0x692d]        # bba8 <_IO_stdin_used@@Base+0x6c8>
    527b:	mov    edx,0x5
    5280:	xor    edi,edi
    5282:	call   1c60 <dcgettext@plt>
    5287:	mov    rsi,rbx
    528a:	mov    rdi,rax
    528d:	call   1d80 <fputs_unlocked@plt>
    5292:	mov    rbx,QWORD PTR [rip+0x20ae0f]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5299:	lea    rsi,[rip+0x6958]        # bbf8 <_IO_stdin_used@@Base+0x718>
    52a0:	mov    edx,0x5
    52a5:	xor    edi,edi
    52a7:	call   1c60 <dcgettext@plt>
    52ac:	mov    rsi,rbx
    52af:	mov    rdi,rax
    52b2:	call   1d80 <fputs_unlocked@plt>
    52b7:	mov    rbx,QWORD PTR [rip+0x20adea]        # 2100a8 <stdout@@GLIBC_2.2.5>
    52be:	lea    rsi,[rip+0x6a53]        # bd18 <_IO_stdin_used@@Base+0x838>
    52c5:	mov    edx,0x5
    52ca:	xor    edi,edi
    52cc:	call   1c60 <dcgettext@plt>
    52d1:	mov    rsi,rbx
    52d4:	mov    rdi,rax
    52d7:	call   1d80 <fputs_unlocked@plt>
    52dc:	mov    rbx,QWORD PTR [rip+0x20adc5]        # 2100a8 <stdout@@GLIBC_2.2.5>
    52e3:	lea    rsi,[rip+0x6c56]        # bf40 <_IO_stdin_used@@Base+0xa60>
    52ea:	mov    edx,0x5
    52ef:	xor    edi,edi
    52f1:	call   1c60 <dcgettext@plt>
    52f6:	mov    rsi,rbx
    52f9:	mov    rdi,rax
    52fc:	call   1d80 <fputs_unlocked@plt>
    5301:	mov    rbx,QWORD PTR [rip+0x20ada0]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5308:	lea    rsi,[rip+0x6c61]        # bf70 <_IO_stdin_used@@Base+0xa90>
    530f:	mov    edx,0x5
    5314:	xor    edi,edi
    5316:	call   1c60 <dcgettext@plt>
    531b:	mov    rsi,rbx
    531e:	mov    rdi,rax
    5321:	call   1d80 <fputs_unlocked@plt>
    5326:	mov    rbx,QWORD PTR [rip+0x20ad7b]        # 2100a8 <stdout@@GLIBC_2.2.5>
    532d:	lea    rsi,[rip+0x6c74]        # bfa8 <_IO_stdin_used@@Base+0xac8>
    5334:	mov    edx,0x5
    5339:	xor    edi,edi
    533b:	call   1c60 <dcgettext@plt>
    5340:	mov    rsi,rbx
    5343:	mov    rdi,rax
    5346:	call   1d80 <fputs_unlocked@plt>
    534b:	mov    rbx,QWORD PTR [rip+0x20ad56]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5352:	lea    rsi,[rip+0x6d8f]        # c0e8 <_IO_stdin_used@@Base+0xc08>
    5359:	mov    edx,0x5
    535e:	xor    edi,edi
    5360:	call   1c60 <dcgettext@plt>
    5365:	mov    rsi,rbx
    5368:	mov    rdi,rax
    536b:	call   1d80 <fputs_unlocked@plt>
    5370:	mov    rbx,QWORD PTR [rip+0x20ad31]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5377:	lea    rsi,[rip+0x6e82]        # c200 <_IO_stdin_used@@Base+0xd20>
    537e:	mov    edx,0x5
    5383:	xor    edi,edi
    5385:	call   1c60 <dcgettext@plt>
    538a:	mov    rsi,rbx
    538d:	mov    rdi,rax
    5390:	call   1d80 <fputs_unlocked@plt>
    5395:	mov    rbx,QWORD PTR [rip+0x20ad0c]        # 2100a8 <stdout@@GLIBC_2.2.5>
    539c:	lea    rsi,[rip+0x6f05]        # c2a8 <_IO_stdin_used@@Base+0xdc8>
    53a3:	mov    edx,0x5
    53a8:	xor    edi,edi
    53aa:	call   1c60 <dcgettext@plt>
    53af:	mov    rsi,rbx
    53b2:	mov    rdi,rax
    53b5:	call   1d80 <fputs_unlocked@plt>
    53ba:	mov    rbx,QWORD PTR [rip+0x20ace7]        # 2100a8 <stdout@@GLIBC_2.2.5>
    53c1:	lea    rsi,[rip+0x6fe0]        # c3a8 <_IO_stdin_used@@Base+0xec8>
    53c8:	mov    edx,0x5
    53cd:	xor    edi,edi
    53cf:	call   1c60 <dcgettext@plt>
    53d4:	mov    rsi,rbx
    53d7:	mov    rdi,rax
    53da:	call   1d80 <fputs_unlocked@plt>
    53df:	mov    rbx,QWORD PTR [rip+0x20acc2]        # 2100a8 <stdout@@GLIBC_2.2.5>
    53e6:	lea    rsi,[rip+0x70b3]        # c4a0 <_IO_stdin_used@@Base+0xfc0>
    53ed:	mov    edx,0x5
    53f2:	xor    edi,edi
    53f4:	call   1c60 <dcgettext@plt>
    53f9:	mov    rsi,rbx
    53fc:	mov    rdi,rax
    53ff:	call   1d80 <fputs_unlocked@plt>
    5404:	mov    rbx,QWORD PTR [rip+0x20ac9d]        # 2100a8 <stdout@@GLIBC_2.2.5>
    540b:	lea    rsi,[rip+0x70ee]        # c500 <_IO_stdin_used@@Base+0x1020>
    5412:	mov    edx,0x5
    5417:	xor    edi,edi
    5419:	call   1c60 <dcgettext@plt>
    541e:	mov    rsi,rbx
    5421:	mov    rdi,rax
    5424:	lea    rbx,[rip+0x61a0]        # b5cb <_IO_stdin_used@@Base+0xeb>
    542b:	call   1d80 <fputs_unlocked@plt>
    5430:	lea    rax,[rip+0x6197]        # b5ce <_IO_stdin_used@@Base+0xee>
    5437:	lea    rcx,[rip+0x61d1]        # b60f <_IO_stdin_used@@Base+0x12f>
    543e:	mov    QWORD PTR [rsp+0x60],0x0
    5447:	mov    QWORD PTR [rsp+0x68],0x0
    5450:	mov    QWORD PTR [rsp],rax
    5454:	lea    rax,[rip+0x6175]        # b5d0 <_IO_stdin_used@@Base+0xf0>
    545b:	mov    QWORD PTR [rsp+0x30],rcx
    5460:	lea    rcx,[rip+0x61b2]        # b619 <_IO_stdin_used@@Base+0x139>
    5467:	mov    QWORD PTR [rsp+0x8],rax
    546c:	lea    rax,[rip+0x61d5]        # b648 <_IO_stdin_used@@Base+0x168>
    5473:	mov    QWORD PTR [rsp+0x40],rcx
    5478:	lea    rcx,[rip+0x61a4]        # b623 <_IO_stdin_used@@Base+0x143>
    547f:	mov    QWORD PTR [rsp+0x10],rax
    5484:	lea    rax,[rip+0x6155]        # b5e0 <_IO_stdin_used@@Base+0x100>
    548b:	mov    QWORD PTR [rsp+0x50],rcx
    5490:	mov    QWORD PTR [rsp+0x18],rax
    5495:	lea    rax,[rip+0x615a]        # b5f6 <_IO_stdin_used@@Base+0x116>
    549c:	mov    QWORD PTR [rsp+0x20],rax
    54a1:	lea    rax,[rip+0x6158]        # b600 <_IO_stdin_used@@Base+0x120>
    54a8:	mov    QWORD PTR [rsp+0x28],rax
    54ad:	mov    QWORD PTR [rsp+0x38],rax
    54b2:	mov    QWORD PTR [rsp+0x48],rax
    54b7:	mov    QWORD PTR [rsp+0x58],rax
    54bc:	mov    rax,rsp
    54bf:	nop
    54c0:	add    rax,0x10
    54c4:	mov    rdi,QWORD PTR [rax]
    54c7:	test   rdi,rdi
    54ca:	je     54d8 <__cxa_finalize@plt+0x3568>
    54cc:	mov    ecx,0x3
    54d1:	mov    rsi,rbx
    54d4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    54d6:	jne    54c0 <__cxa_finalize@plt+0x3550>
    54d8:	mov    r12,QWORD PTR [rax+0x8]
    54dc:	xor    edi,edi
    54de:	mov    edx,0x5
    54e3:	lea    rsi,[rip+0x6143]        # b62d <_IO_stdin_used@@Base+0x14d>
    54ea:	test   r12,r12
    54ed:	je     55b4 <__cxa_finalize@plt+0x3644>
    54f3:	call   1c60 <dcgettext@plt>
    54f8:	lea    rcx,[rip+0x70b1]        # c5b0 <_IO_stdin_used@@Base+0x10d0>
    54ff:	lea    rdx,[rip+0x613e]        # b644 <_IO_stdin_used@@Base+0x164>
    5506:	mov    rsi,rax
    5509:	mov    edi,0x1
    550e:	xor    eax,eax
    5510:	call   1e70 <__printf_chk@plt>
    5515:	xor    esi,esi
    5517:	mov    edi,0x5
    551c:	call   1e60 <setlocale@plt>
    5521:	test   rax,rax
    5524:	je     5542 <__cxa_finalize@plt+0x35d2>
    5526:	lea    rsi,[rip+0x6125]        # b652 <_IO_stdin_used@@Base+0x172>
    552d:	mov    edx,0x3
    5532:	mov    rdi,rax
    5535:	call   1bb0 <strncmp@plt>
    553a:	test   eax,eax
    553c:	jne    5649 <__cxa_finalize@plt+0x36d9>
    5542:	lea    rsi,[rip+0x70d7]        # c620 <_IO_stdin_used@@Base+0x1140>
    5549:	xor    edi,edi
    554b:	mov    edx,0x5
    5550:	call   1c60 <dcgettext@plt>
    5555:	lea    rcx,[rip+0x606f]        # b5cb <_IO_stdin_used@@Base+0xeb>
    555c:	lea    rdx,[rip+0x704d]        # c5b0 <_IO_stdin_used@@Base+0x10d0>
    5563:	mov    rsi,rax
    5566:	mov    edi,0x1
    556b:	xor    eax,eax
    556d:	call   1e70 <__printf_chk@plt>
    5572:	cmp    r12,rbx
    5575:	lea    rcx,[rip+0x606e]        # b5ea <_IO_stdin_used@@Base+0x10a>
    557c:	lea    rbx,[rip+0x801e]        # d5a1 <quoting_style_vals@@Base+0x81>
    5583:	cmove  rbx,rcx
    5587:	lea    rsi,[rip+0x70b2]        # c640 <_IO_stdin_used@@Base+0x1160>
    558e:	xor    edi,edi
    5590:	mov    edx,0x5
    5595:	call   1c60 <dcgettext@plt>
    559a:	mov    rcx,rbx
    559d:	mov    rsi,rax
    55a0:	mov    rdx,r12
    55a3:	mov    edi,0x1
    55a8:	xor    eax,eax
    55aa:	call   1e70 <__printf_chk@plt>
    55af:	jmp    51d1 <__cxa_finalize@plt+0x3261>
    55b4:	call   1c60 <dcgettext@plt>
    55b9:	lea    rcx,[rip+0x6ff0]        # c5b0 <_IO_stdin_used@@Base+0x10d0>
    55c0:	lea    rdx,[rip+0x607d]        # b644 <_IO_stdin_used@@Base+0x164>
    55c7:	mov    rsi,rax
    55ca:	mov    edi,0x1
    55cf:	xor    eax,eax
    55d1:	call   1e70 <__printf_chk@plt>
    55d6:	xor    esi,esi
    55d8:	mov    edi,0x5
    55dd:	call   1e60 <setlocale@plt>
    55e2:	test   rax,rax
    55e5:	je     55ff <__cxa_finalize@plt+0x368f>
    55e7:	lea    rsi,[rip+0x6064]        # b652 <_IO_stdin_used@@Base+0x172>
    55ee:	mov    edx,0x3
    55f3:	mov    rdi,rax
    55f6:	call   1bb0 <strncmp@plt>
    55fb:	test   eax,eax
    55fd:	jne    5642 <__cxa_finalize@plt+0x36d2>
    55ff:	lea    rsi,[rip+0x701a]        # c620 <_IO_stdin_used@@Base+0x1140>
    5606:	mov    edx,0x5
    560b:	xor    edi,edi
    560d:	lea    r12,[rip+0x5fb7]        # b5cb <_IO_stdin_used@@Base+0xeb>
    5614:	lea    rbx,[rip+0x5fcf]        # b5ea <_IO_stdin_used@@Base+0x10a>
    561b:	call   1c60 <dcgettext@plt>
    5620:	lea    rcx,[rip+0x5fa4]        # b5cb <_IO_stdin_used@@Base+0xeb>
    5627:	lea    rdx,[rip+0x6f82]        # c5b0 <_IO_stdin_used@@Base+0x10d0>
    562e:	mov    rsi,rax
    5631:	mov    edi,0x1
    5636:	xor    eax,eax
    5638:	call   1e70 <__printf_chk@plt>
    563d:	jmp    5587 <__cxa_finalize@plt+0x3617>
    5642:	lea    r12,[rip+0x5f82]        # b5cb <_IO_stdin_used@@Base+0xeb>
    5649:	lea    rsi,[rip+0x6f88]        # c5d8 <_IO_stdin_used@@Base+0x10f8>
    5650:	xor    edi,edi
    5652:	mov    edx,0x5
    5657:	call   1c60 <dcgettext@plt>
    565c:	lea    rdx,[rip+0x5f68]        # b5cb <_IO_stdin_used@@Base+0xeb>
    5663:	mov    rsi,rax
    5666:	mov    edi,0x1
    566b:	xor    eax,eax
    566d:	call   1e70 <__printf_chk@plt>
    5672:	jmp    5542 <__cxa_finalize@plt+0x35d2>
    5677:	nop    WORD PTR [rax+rax*1+0x0]
    5680:	mov    edi,0x1
    5685:	jmp    5180 <__cxa_finalize@plt+0x3210>
    568a:	nop    WORD PTR [rax+rax*1+0x0]
    5690:	push   r15
    5692:	push   r14
    5694:	mov    r15,rsi
    5697:	push   r13
    5699:	push   r12
    569b:	mov    r13,rcx
    569e:	push   rbp
    569f:	push   rbx
    56a0:	mov    rbp,rdx
    56a3:	sub    rsp,0x28
    56a7:	mov    QWORD PTR [rsp+0x8],rdi
    56ac:	mov    QWORD PTR [rsp+0x18],rdx
    56b1:	call   1c80 <strlen@plt>
    56b6:	mov    r14,QWORD PTR [r15]
    56b9:	mov    QWORD PTR [rsp],0xffffffffffffffff
    56c1:	test   r14,r14
    56c4:	je     577d <__cxa_finalize@plt+0x380d>
    56ca:	mov    r12,rax
    56cd:	mov    BYTE PTR [rsp+0x17],0x0
    56d2:	xor    ebx,ebx
    56d4:	jmp    5727 <__cxa_finalize@plt+0x37b7>
    56d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56e0:	mov    rax,QWORD PTR [rsp+0x18]
    56e5:	test   rax,rax
    56e8:	je     5790 <__cxa_finalize@plt+0x3820>
    56ee:	mov    rdi,QWORD PTR [rsp]
    56f2:	mov    rdx,r13
    56f5:	mov    rsi,rbp
    56f8:	imul   rdi,r13
    56fc:	add    rdi,rax
    56ff:	call   1d70 <memcmp@plt>
    5704:	test   eax,eax
    5706:	movzx  eax,BYTE PTR [rsp+0x17]
    570b:	mov    ecx,0x1
    5710:	cmovne eax,ecx
    5713:	mov    BYTE PTR [rsp+0x17],al
    5717:	add    rbx,0x1
    571b:	add    rbp,r13
    571e:	mov    r14,QWORD PTR [r15+rbx*8]
    5722:	test   r14,r14
    5725:	je     5768 <__cxa_finalize@plt+0x37f8>
    5727:	mov    rsi,QWORD PTR [rsp+0x8]
    572c:	mov    rdx,r12
    572f:	mov    rdi,r14
    5732:	call   1bb0 <strncmp@plt>
    5737:	test   eax,eax
    5739:	jne    5717 <__cxa_finalize@plt+0x37a7>
    573b:	mov    rdi,r14
    573e:	call   1c80 <strlen@plt>
    5743:	cmp    rax,r12
    5746:	je     57a0 <__cxa_finalize@plt+0x3830>
    5748:	cmp    QWORD PTR [rsp],0xffffffffffffffff
    574d:	jne    56e0 <__cxa_finalize@plt+0x3770>
    574f:	mov    QWORD PTR [rsp],rbx
    5753:	add    rbx,0x1
    5757:	add    rbp,r13
    575a:	mov    r14,QWORD PTR [r15+rbx*8]
    575e:	test   r14,r14
    5761:	jne    5727 <__cxa_finalize@plt+0x37b7>
    5763:	nop    DWORD PTR [rax+rax*1+0x0]
    5768:	cmp    BYTE PTR [rsp+0x17],0x0
    576d:	mov    rax,0xfffffffffffffffe
    5774:	cmove  rax,QWORD PTR [rsp]
    5779:	mov    QWORD PTR [rsp],rax
    577d:	mov    rax,QWORD PTR [rsp]
    5781:	add    rsp,0x28
    5785:	pop    rbx
    5786:	pop    rbp
    5787:	pop    r12
    5789:	pop    r13
    578b:	pop    r14
    578d:	pop    r15
    578f:	ret    
    5790:	mov    BYTE PTR [rsp+0x17],0x1
    5795:	jmp    5717 <__cxa_finalize@plt+0x37a7>
    5797:	nop    WORD PTR [rax+rax*1+0x0]
    57a0:	mov    QWORD PTR [rsp],rbx
    57a4:	jmp    577d <__cxa_finalize@plt+0x380d>
    57a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    57b0:	cmp    rdx,0xffffffffffffffff
    57b4:	push   r12
    57b6:	mov    edx,0x5
    57bb:	push   rbp
    57bc:	mov    r12,rsi
    57bf:	push   rbx
    57c0:	mov    rbp,rdi
    57c3:	je     5810 <__cxa_finalize@plt+0x38a0>
    57c5:	lea    rsi,[rip+0x77b8]        # cf84 <_IO_stdin_used@@Base+0x1aa4>
    57cc:	xor    edi,edi
    57ce:	call   1c60 <dcgettext@plt>
    57d3:	mov    rbx,rax
    57d6:	mov    rsi,rbp
    57d9:	mov    edi,0x1
    57de:	call   7c00 <__cxa_finalize@plt+0x5c90>
    57e3:	mov    rdx,r12
    57e6:	mov    rbp,rax
    57e9:	mov    esi,0x8
    57ee:	xor    edi,edi
    57f0:	call   7830 <__cxa_finalize@plt+0x58c0>
    57f5:	mov    r8,rbp
    57f8:	mov    rdx,rbx
    57fb:	mov    rcx,rax
    57fe:	pop    rbx
    57ff:	pop    rbp
    5800:	pop    r12
    5802:	xor    esi,esi
    5804:	xor    edi,edi
    5806:	xor    eax,eax
    5808:	jmp    1ea0 <error@plt>
    580d:	nop    DWORD PTR [rax]
    5810:	lea    rsi,[rip+0x7752]        # cf69 <_IO_stdin_used@@Base+0x1a89>
    5817:	xor    edi,edi
    5819:	call   1c60 <dcgettext@plt>
    581e:	mov    rbx,rax
    5821:	jmp    57d6 <__cxa_finalize@plt+0x3866>
    5823:	nop    DWORD PTR [rax]
    5826:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5830:	push   r15
    5832:	push   r14
    5834:	mov    r14,rdi
    5837:	push   r13
    5839:	push   r12
    583b:	xor    edi,edi
    583d:	push   rbp
    583e:	push   rbx
    583f:	mov    rbp,rsi
    5842:	lea    rsi,[rip+0x7758]        # cfa1 <_IO_stdin_used@@Base+0x1ac1>
    5849:	mov    r12,rdx
    584c:	mov    edx,0x5
    5851:	sub    rsp,0x8
    5855:	mov    rbx,QWORD PTR [rip+0x20a884]        # 2100e0 <stderr@@GLIBC_2.2.5>
    585c:	call   1c60 <dcgettext@plt>
    5861:	mov    rdi,rax
    5864:	mov    rsi,rbx
    5867:	call   1d80 <fputs_unlocked@plt>
    586c:	mov    r15,QWORD PTR [r14]
    586f:	test   r15,r15
    5872:	je     5908 <__cxa_finalize@plt+0x3998>
    5878:	xor    r13d,r13d
    587b:	xor    ebx,ebx
    587d:	jmp    58b8 <__cxa_finalize@plt+0x3948>
    587f:	nop
    5880:	mov    rdi,r15
    5883:	add    rbx,0x1
    5887:	mov    r13,rbp
    588a:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    588f:	mov    rdi,QWORD PTR [rip+0x20a84a]        # 2100e0 <stderr@@GLIBC_2.2.5>
    5896:	lea    rdx,[rip+0x7719]        # cfb6 <_IO_stdin_used@@Base+0x1ad6>
    589d:	mov    rcx,rax
    58a0:	mov    esi,0x1
    58a5:	xor    eax,eax
    58a7:	add    rbp,r12
    58aa:	call   1f20 <__fprintf_chk@plt>
    58af:	mov    r15,QWORD PTR [r14+rbx*8]
    58b3:	test   r15,r15
    58b6:	je     5908 <__cxa_finalize@plt+0x3998>
    58b8:	test   rbx,rbx
    58bb:	je     5880 <__cxa_finalize@plt+0x3910>
    58bd:	mov    rdx,r12
    58c0:	mov    rsi,rbp
    58c3:	mov    rdi,r13
    58c6:	call   1d70 <memcmp@plt>
    58cb:	test   eax,eax
    58cd:	jne    5880 <__cxa_finalize@plt+0x3910>
    58cf:	mov    rdi,r15
    58d2:	add    rbx,0x1
    58d6:	add    rbp,r12
    58d9:	call   7c20 <__cxa_finalize@plt+0x5cb0>
    58de:	mov    rdi,QWORD PTR [rip+0x20a7fb]        # 2100e0 <stderr@@GLIBC_2.2.5>
    58e5:	lea    rdx,[rip+0x76d2]        # cfbe <_IO_stdin_used@@Base+0x1ade>
    58ec:	mov    rcx,rax
    58ef:	mov    esi,0x1
    58f4:	xor    eax,eax
    58f6:	call   1f20 <__fprintf_chk@plt>
    58fb:	mov    r15,QWORD PTR [r14+rbx*8]
    58ff:	test   r15,r15
    5902:	jne    58b8 <__cxa_finalize@plt+0x3948>
    5904:	nop    DWORD PTR [rax+0x0]
    5908:	mov    rdi,QWORD PTR [rip+0x20a7d1]        # 2100e0 <stderr@@GLIBC_2.2.5>
    590f:	mov    rax,QWORD PTR [rdi+0x28]
    5913:	cmp    rax,QWORD PTR [rdi+0x30]
    5917:	jae    5938 <__cxa_finalize@plt+0x39c8>
    5919:	lea    rdx,[rax+0x1]
    591d:	mov    QWORD PTR [rdi+0x28],rdx
    5921:	mov    BYTE PTR [rax],0xa
    5924:	add    rsp,0x8
    5928:	pop    rbx
    5929:	pop    rbp
    592a:	pop    r12
    592c:	pop    r13
    592e:	pop    r14
    5930:	pop    r15
    5932:	ret    
    5933:	nop    DWORD PTR [rax+rax*1+0x0]
    5938:	add    rsp,0x8
    593c:	mov    esi,0xa
    5941:	pop    rbx
    5942:	pop    rbp
    5943:	pop    r12
    5945:	pop    r13
    5947:	pop    r14
    5949:	pop    r15
    594b:	jmp    1cd0 <__overflow@plt>
    5950:	push   r15
    5952:	push   r14
    5954:	mov    r14,rdi
    5957:	push   r13
    5959:	push   r12
    595b:	mov    r12,rsi
    595e:	push   rbp
    595f:	push   rbx
    5960:	mov    rbp,rcx
    5963:	mov    rbx,rdx
    5966:	mov    rcx,r8
    5969:	mov    rdx,rbp
    596c:	sub    rsp,0x8
    5970:	mov    rsi,rbx
    5973:	mov    rdi,r12
    5976:	mov    r15,r8
    5979:	mov    r13,r9
    597c:	call   5690 <__cxa_finalize@plt+0x3720>
    5981:	test   rax,rax
    5984:	js     5995 <__cxa_finalize@plt+0x3a25>
    5986:	add    rsp,0x8
    598a:	pop    rbx
    598b:	pop    rbp
    598c:	pop    r12
    598e:	pop    r13
    5990:	pop    r14
    5992:	pop    r15
    5994:	ret    
    5995:	mov    rdx,rax
    5998:	mov    rsi,r12
    599b:	mov    rdi,r14
    599e:	call   57b0 <__cxa_finalize@plt+0x3840>
    59a3:	mov    rdx,r15
    59a6:	mov    rsi,rbp
    59a9:	mov    rdi,rbx
    59ac:	call   5830 <__cxa_finalize@plt+0x38c0>
    59b1:	call   r13
    59b4:	mov    rax,0xffffffffffffffff
    59bb:	jmp    5986 <__cxa_finalize@plt+0x3a16>
    59bd:	nop    DWORD PTR [rax]
    59c0:	push   r14
    59c2:	push   r13
    59c4:	push   r12
    59c6:	push   rbp
    59c7:	push   rbx
    59c8:	mov    r14,QWORD PTR [rsi]
    59cb:	test   r14,r14
    59ce:	je     5a01 <__cxa_finalize@plt+0x3a91>
    59d0:	mov    r12,rcx
    59d3:	mov    r13,rdi
    59d6:	mov    rbp,rdx
    59d9:	lea    rbx,[rsi+0x8]
    59dd:	jmp    59ef <__cxa_finalize@plt+0x3a7f>
    59df:	nop
    59e0:	mov    r14,QWORD PTR [rbx]
    59e3:	add    rbp,r12
    59e6:	add    rbx,0x8
    59ea:	test   r14,r14
    59ed:	je     5a01 <__cxa_finalize@plt+0x3a91>
    59ef:	mov    rdx,r12
    59f2:	mov    rsi,rbp
    59f5:	mov    rdi,r13
    59f8:	call   1d70 <memcmp@plt>
    59fd:	test   eax,eax
    59ff:	jne    59e0 <__cxa_finalize@plt+0x3a70>
    5a01:	pop    rbx
    5a02:	mov    rax,r14
    5a05:	pop    rbp
    5a06:	pop    r12
    5a08:	pop    r13
    5a0a:	pop    r14
    5a0c:	ret    
    5a0d:	nop    DWORD PTR [rax]
    5a10:	mov    QWORD PTR [rip+0x20a819],rdi        # 210230 <stderr@@GLIBC_2.2.5+0x150>
    5a17:	ret    
    5a18:	nop    DWORD PTR [rax+rax*1+0x0]
    5a20:	mov    BYTE PTR [rip+0x20a801],dil        # 210228 <stderr@@GLIBC_2.2.5+0x148>
    5a27:	ret    
    5a28:	nop    DWORD PTR [rax+rax*1+0x0]
    5a30:	push   rbp
    5a31:	push   rbx
    5a32:	sub    rsp,0x8
    5a36:	mov    rdi,QWORD PTR [rip+0x20a66b]        # 2100a8 <stdout@@GLIBC_2.2.5>
    5a3d:	call   8ec0 <__cxa_finalize@plt+0x6f50>
    5a42:	test   eax,eax
    5a44:	je     5a5c <__cxa_finalize@plt+0x3aec>
    5a46:	call   1ba0 <__errno_location@plt>
    5a4b:	cmp    BYTE PTR [rip+0x20a7d6],0x0        # 210228 <stderr@@GLIBC_2.2.5+0x148>
    5a52:	mov    rbx,rax
    5a55:	je     5a73 <__cxa_finalize@plt+0x3b03>
    5a57:	cmp    DWORD PTR [rax],0x20
    5a5a:	jne    5a73 <__cxa_finalize@plt+0x3b03>
    5a5c:	mov    rdi,QWORD PTR [rip+0x20a67d]        # 2100e0 <stderr@@GLIBC_2.2.5>
    5a63:	call   8ec0 <__cxa_finalize@plt+0x6f50>
    5a68:	test   eax,eax
    5a6a:	jne    5ab2 <__cxa_finalize@plt+0x3b42>
    5a6c:	add    rsp,0x8
    5a70:	pop    rbx
    5a71:	pop    rbp
    5a72:	ret    
    5a73:	lea    rsi,[rip+0x5b12]        # b58c <_IO_stdin_used@@Base+0xac>
    5a7a:	xor    edi,edi
    5a7c:	mov    edx,0x5
    5a81:	call   1c60 <dcgettext@plt>
    5a86:	mov    rdi,QWORD PTR [rip+0x20a7a3]        # 210230 <stderr@@GLIBC_2.2.5+0x150>
    5a8d:	mov    rbp,rax
    5a90:	test   rdi,rdi
    5a93:	je     5abd <__cxa_finalize@plt+0x3b4d>
    5a95:	call   7a20 <__cxa_finalize@plt+0x5ab0>
    5a9a:	mov    esi,DWORD PTR [rbx]
    5a9c:	lea    rdx,[rip+0x7520]        # cfc3 <_IO_stdin_used@@Base+0x1ae3>
    5aa3:	mov    rcx,rax
    5aa6:	mov    r8,rbp
    5aa9:	xor    edi,edi
    5aab:	xor    eax,eax
    5aad:	call   1ea0 <error@plt>
    5ab2:	mov    edi,DWORD PTR [rip+0x20a570]        # 210028 <exit_failure@@Base>
    5ab8:	call   1bc0 <_exit@plt>
    5abd:	mov    esi,DWORD PTR [rbx]
    5abf:	lea    rdx,[rip+0x74fa]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    5ac6:	mov    rcx,rax
    5ac9:	xor    edi,edi
    5acb:	xor    eax,eax
    5acd:	call   1ea0 <error@plt>
    5ad2:	jmp    5ab2 <__cxa_finalize@plt+0x3b42>
    5ad4:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5ade:	xchg   ax,ax
    5ae0:	push   r15
    5ae2:	push   r14
    5ae4:	mov    r14d,ecx
    5ae7:	push   r13
    5ae9:	push   r12
    5aeb:	mov    r12,rdi
    5aee:	push   rbp
    5aef:	push   rbx
    5af0:	mov    rbp,rsi
    5af3:	movapd xmm3,xmm0
    5af7:	sub    rsp,0x38
    5afb:	movsd  QWORD PTR [rsp],xmm0
    5b00:	pxor   xmm0,xmm0
    5b04:	mov    rax,QWORD PTR fs:0x28
    5b0d:	mov    QWORD PTR [rsp+0x28],rax
    5b12:	xor    eax,eax
    5b14:	ucomisd xmm0,xmm3
    5b18:	ja     5c30 <__cxa_finalize@plt+0x3cc0>
    5b1e:	movsd  xmm0,QWORD PTR [rsp]
    5b23:	mov    eax,edx
    5b25:	lea    r13,[rsp+0x1d]
    5b2a:	mov    ecx,edx
    5b2c:	and    eax,0x1
    5b2f:	shr    ecx,1
    5b31:	mov    esi,0x2d25
    5b36:	lea    rdi,[r13+rax*1+0x1]
    5b3b:	and    ecx,0x1
    5b3e:	mov    eax,edx
    5b40:	mov    WORD PTR [rsp+0x1d],si
    5b45:	shr    eax,0x2
    5b48:	mov    ebx,0x1
    5b4d:	lea    rsi,[rdi+rcx*1]
    5b51:	and    eax,0x1
    5b54:	mov    BYTE PTR [rdi],0x2b
    5b57:	movsd  xmm1,QWORD PTR [rip+0x7481]        # cfe0 <_IO_stdin_used@@Base+0x1b00>
    5b5f:	mov    edi,0x2e2a
    5b64:	lea    rcx,[rsi+rax*1]
    5b68:	mov    eax,edx
    5b6a:	and    edx,0x10
    5b6d:	shr    eax,0x3
    5b70:	mov    BYTE PTR [rsi],0x20
    5b73:	mov    r15,0xffffffffffffffff
    5b7a:	and    eax,0x1
    5b7d:	mov    BYTE PTR [rcx],0x30
    5b80:	add    rax,rcx
    5b83:	cmp    edx,0x1
    5b86:	sbb    edx,edx
    5b88:	mov    WORD PTR [rax],di
    5b8b:	mov    BYTE PTR [rax+0x2],0x2a
    5b8f:	and    edx,0x20
    5b92:	mov    BYTE PTR [rax+0x4],0x0
    5b96:	add    edx,0x47
    5b99:	ucomisd xmm1,xmm0
    5b9d:	mov    BYTE PTR [rax+0x3],dl
    5ba0:	mov    eax,0xf
    5ba5:	cmovbe ebx,eax
    5ba8:	jmp    5bb3 <__cxa_finalize@plt+0x3c43>
    5baa:	nop    WORD PTR [rax+rax*1+0x0]
    5bb0:	add    ebx,0x1
    5bb3:	sub    rsp,0x8
    5bb7:	mov    rcx,r15
    5bba:	mov    edx,0x1
    5bbf:	push   rbx
    5bc0:	mov    r9d,r14d
    5bc3:	mov    r8,r13
    5bc6:	mov    rsi,rbp
    5bc9:	mov    rdi,r12
    5bcc:	mov    eax,0x1
    5bd1:	movsd  xmm0,QWORD PTR [rsp+0x10]
    5bd7:	call   1b70 <__snprintf_chk@plt>
    5bdc:	test   eax,eax
    5bde:	pop    rdx
    5bdf:	pop    rcx
    5be0:	js     5c0a <__cxa_finalize@plt+0x3c9a>
    5be2:	cmp    ebx,0x10
    5be5:	jg     5c0a <__cxa_finalize@plt+0x3c9a>
    5be7:	movsxd rdx,eax
    5bea:	cmp    rdx,rbp
    5bed:	jae    5bb0 <__cxa_finalize@plt+0x3c40>
    5bef:	xor    esi,esi
    5bf1:	mov    rdi,r12
    5bf4:	mov    DWORD PTR [rsp+0xc],eax
    5bf8:	call   1c00 <strtod@plt>
    5bfd:	ucomisd xmm0,QWORD PTR [rsp]
    5c02:	jp     5bb0 <__cxa_finalize@plt+0x3c40>
    5c04:	mov    eax,DWORD PTR [rsp+0xc]
    5c08:	jne    5bb0 <__cxa_finalize@plt+0x3c40>
    5c0a:	mov    rsi,QWORD PTR [rsp+0x28]
    5c0f:	xor    rsi,QWORD PTR fs:0x28
    5c18:	jne    5c41 <__cxa_finalize@plt+0x3cd1>
    5c1a:	add    rsp,0x38
    5c1e:	pop    rbx
    5c1f:	pop    rbp
    5c20:	pop    r12
    5c22:	pop    r13
    5c24:	pop    r14
    5c26:	pop    r15
    5c28:	ret    
    5c29:	nop    DWORD PTR [rax+0x0]
    5c30:	movapd xmm0,xmm3
    5c34:	xorpd  xmm0,XMMWORD PTR [rip+0x7394]        # cfd0 <_IO_stdin_used@@Base+0x1af0>
    5c3c:	jmp    5b23 <__cxa_finalize@plt+0x3bb3>
    5c41:	call   1c90 <__stack_chk_fail@plt>
    5c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5c50:	push   r15
    5c52:	pxor   xmm4,xmm4
    5c56:	push   r14
    5c58:	push   r13
    5c5a:	mov    r15d,ecx
    5c5d:	push   r12
    5c5f:	push   rbp
    5c60:	mov    r12,rdi
    5c63:	push   rbx
    5c64:	movaps xmm3,xmm0
    5c67:	cvtss2sd xmm4,xmm0
    5c6b:	mov    rbp,rsi
    5c6e:	sub    rsp,0x38
    5c72:	movss  DWORD PTR [rsp+0xc],xmm0
    5c78:	pxor   xmm0,xmm0
    5c7c:	mov    rax,QWORD PTR fs:0x28
    5c85:	mov    QWORD PTR [rsp+0x28],rax
    5c8a:	xor    eax,eax
    5c8c:	movsd  QWORD PTR [rsp],xmm4
    5c91:	ucomiss xmm0,xmm3
    5c94:	ja     5da8 <__cxa_finalize@plt+0x3e38>
    5c9a:	movss  xmm0,DWORD PTR [rsp+0xc]
    5ca0:	mov    eax,edx
    5ca2:	lea    r13,[rsp+0x1d]
    5ca7:	mov    ecx,edx
    5ca9:	and    eax,0x1
    5cac:	shr    ecx,1
    5cae:	mov    esi,0x2d25
    5cb3:	lea    rdi,[r13+rax*1+0x1]
    5cb8:	and    ecx,0x1
    5cbb:	mov    eax,edx
    5cbd:	mov    WORD PTR [rsp+0x1d],si
    5cc2:	shr    eax,0x2
    5cc5:	mov    r14,0xffffffffffffffff
    5ccc:	lea    rsi,[rdi+rcx*1]
    5cd0:	and    eax,0x1
    5cd3:	mov    BYTE PTR [rdi],0x2b
    5cd6:	movss  xmm1,DWORD PTR [rip+0x7322]        # d000 <_IO_stdin_used@@Base+0x1b20>
    5cde:	mov    edi,0x2e2a
    5ce3:	lea    rcx,[rsi+rax*1]
    5ce7:	mov    eax,edx
    5ce9:	and    edx,0x10
    5cec:	shr    eax,0x3
    5cef:	mov    BYTE PTR [rsi],0x20
    5cf2:	and    eax,0x1
    5cf5:	mov    BYTE PTR [rcx],0x30
    5cf8:	add    rax,rcx
    5cfb:	cmp    edx,0x1
    5cfe:	sbb    edx,edx
    5d00:	xor    ebx,ebx
    5d02:	mov    WORD PTR [rax],di
    5d05:	and    edx,0x20
    5d08:	mov    BYTE PTR [rax+0x2],0x2a
    5d0c:	mov    BYTE PTR [rax+0x4],0x0
    5d10:	add    edx,0x47
    5d13:	ucomiss xmm1,xmm0
    5d16:	mov    BYTE PTR [rax+0x3],dl
    5d19:	setbe  bl
    5d1c:	lea    ebx,[rbx+rbx*4+0x1]
    5d20:	jmp    5d2b <__cxa_finalize@plt+0x3dbb>
    5d22:	nop    WORD PTR [rax+rax*1+0x0]
    5d28:	add    ebx,0x1
    5d2b:	sub    rsp,0x8
    5d2f:	mov    rcx,r14
    5d32:	mov    edx,0x1
    5d37:	push   rbx
    5d38:	mov    r9d,r15d
    5d3b:	mov    r8,r13
    5d3e:	mov    rsi,rbp
    5d41:	mov    rdi,r12
    5d44:	mov    eax,0x1
    5d49:	movsd  xmm0,QWORD PTR [rsp+0x10]
    5d4f:	call   1b70 <__snprintf_chk@plt>
    5d54:	test   eax,eax
    5d56:	pop    rdx
    5d57:	pop    rcx
    5d58:	js     5d82 <__cxa_finalize@plt+0x3e12>
    5d5a:	cmp    ebx,0x8
    5d5d:	jg     5d82 <__cxa_finalize@plt+0x3e12>
    5d5f:	movsxd rdx,eax
    5d62:	cmp    rdx,rbp
    5d65:	jae    5d28 <__cxa_finalize@plt+0x3db8>
    5d67:	xor    esi,esi
    5d69:	mov    rdi,r12
    5d6c:	mov    DWORD PTR [rsp+0x8],eax
    5d70:	call   1d20 <strtof@plt>
    5d75:	ucomiss xmm0,DWORD PTR [rsp+0xc]
    5d7a:	jp     5d28 <__cxa_finalize@plt+0x3db8>
    5d7c:	mov    eax,DWORD PTR [rsp+0x8]
    5d80:	jne    5d28 <__cxa_finalize@plt+0x3db8>
    5d82:	mov    rsi,QWORD PTR [rsp+0x28]
    5d87:	xor    rsi,QWORD PTR fs:0x28
    5d90:	jne    5db7 <__cxa_finalize@plt+0x3e47>
    5d92:	add    rsp,0x38
    5d96:	pop    rbx
    5d97:	pop    rbp
    5d98:	pop    r12
    5d9a:	pop    r13
    5d9c:	pop    r14
    5d9e:	pop    r15
    5da0:	ret    
    5da1:	nop    DWORD PTR [rax+0x0]
    5da8:	movaps xmm0,xmm3
    5dab:	xorps  xmm0,XMMWORD PTR [rip+0x723e]        # cff0 <_IO_stdin_used@@Base+0x1b10>
    5db2:	jmp    5ca0 <__cxa_finalize@plt+0x3d30>
    5db7:	call   1c90 <__stack_chk_fail@plt>
    5dbc:	nop    DWORD PTR [rax+0x0]
    5dc0:	push   r15
    5dc2:	push   r14
    5dc4:	fldz   
    5dc6:	push   r13
    5dc8:	push   r12
    5dca:	mov    r14d,ecx
    5dcd:	push   rbp
    5dce:	push   rbx
    5dcf:	mov    r12,rdi
    5dd2:	mov    rbp,rsi
    5dd5:	sub    rsp,0x38
    5dd9:	fld    TBYTE PTR [rsp+0x70]
    5ddd:	fxch   st(1)
    5ddf:	mov    rax,QWORD PTR fs:0x28
    5de8:	mov    QWORD PTR [rsp+0x28],rax
    5ded:	xor    eax,eax
    5def:	fucomip st,st(1)
    5df1:	ja     5f00 <__cxa_finalize@plt+0x3f90>
    5df7:	fstp   st(0)
    5df9:	fld    TBYTE PTR [rsp+0x70]
    5dfd:	mov    eax,0x2d25
    5e02:	lea    r13,[rsp+0x1d]
    5e07:	mov    ecx,edx
    5e09:	mov    WORD PTR [rsp+0x1d],ax
    5e0e:	mov    eax,edx
    5e10:	shr    ecx,1
    5e12:	and    eax,0x1
    5e15:	and    ecx,0x1
    5e18:	mov    ebx,0x1
    5e1d:	lea    rdi,[r13+rax*1+0x1]
    5e22:	mov    eax,edx
    5e24:	mov    r15,0xffffffffffffffff
    5e2b:	shr    eax,0x2
    5e2e:	lea    rsi,[rdi+rcx*1]
    5e32:	and    eax,0x1
    5e35:	mov    BYTE PTR [rdi],0x2b
    5e38:	lea    rcx,[rsi+rax*1]
    5e3c:	mov    eax,edx
    5e3e:	and    edx,0x10
    5e41:	fld    TBYTE PTR [rip+0x71c9]        # d010 <_IO_stdin_used@@Base+0x1b30>
    5e47:	shr    eax,0x3
    5e4a:	mov    BYTE PTR [rsi],0x20
    5e4d:	mov    BYTE PTR [rcx],0x30
    5e50:	and    eax,0x1
    5e53:	add    rax,rcx
    5e56:	cmp    edx,0x1
    5e59:	sbb    edx,edx
    5e5b:	mov    DWORD PTR [rax],0x4c2a2e2a
    5e61:	mov    BYTE PTR [rax+0x5],0x0
    5e65:	and    edx,0x20
    5e68:	add    edx,0x47
    5e6b:	mov    BYTE PTR [rax+0x4],dl
    5e6e:	mov    eax,0x12
    5e73:	fucomip st,st(1)
    5e75:	fstp   st(0)
    5e77:	cmovbe ebx,eax
    5e7a:	jmp    5e83 <__cxa_finalize@plt+0x3f13>
    5e7c:	nop    DWORD PTR [rax+0x0]
    5e80:	add    ebx,0x1
    5e83:	push   QWORD PTR [rsp+0x78]
    5e87:	push   QWORD PTR [rsp+0x78]
    5e8b:	xor    eax,eax
    5e8d:	mov    r9d,r14d
    5e90:	mov    r8,r13
    5e93:	mov    rcx,r15
    5e96:	sub    rsp,0x8
    5e9a:	mov    edx,0x1
    5e9f:	mov    rsi,rbp
    5ea2:	push   rbx
    5ea3:	mov    rdi,r12
    5ea6:	call   1b70 <__snprintf_chk@plt>
    5eab:	add    rsp,0x20
    5eaf:	test   eax,eax
    5eb1:	js     5ee0 <__cxa_finalize@plt+0x3f70>
    5eb3:	cmp    ebx,0x14
    5eb6:	jg     5ee0 <__cxa_finalize@plt+0x3f70>
    5eb8:	movsxd rdx,eax
    5ebb:	cmp    rdx,rbp
    5ebe:	jae    5e80 <__cxa_finalize@plt+0x3f10>
    5ec0:	xor    esi,esi
    5ec2:	mov    rdi,r12
    5ec5:	mov    DWORD PTR [rsp+0xc],eax
    5ec9:	call   1e90 <strtold@plt>
    5ece:	fld    TBYTE PTR [rsp+0x70]
    5ed2:	fxch   st(1)
    5ed4:	fucomip st,st(1)
    5ed6:	fstp   st(0)
    5ed8:	jp     5e80 <__cxa_finalize@plt+0x3f10>
    5eda:	mov    eax,DWORD PTR [rsp+0xc]
    5ede:	jne    5e80 <__cxa_finalize@plt+0x3f10>
    5ee0:	mov    rsi,QWORD PTR [rsp+0x28]
    5ee5:	xor    rsi,QWORD PTR fs:0x28
    5eee:	jne    5f07 <__cxa_finalize@plt+0x3f97>
    5ef0:	add    rsp,0x38
    5ef4:	pop    rbx
    5ef5:	pop    rbp
    5ef6:	pop    r12
    5ef8:	pop    r13
    5efa:	pop    r14
    5efc:	pop    r15
    5efe:	ret    
    5eff:	nop
    5f00:	fchs   
    5f02:	jmp    5dfd <__cxa_finalize@plt+0x3e8d>
    5f07:	call   1c90 <__stack_chk_fail@plt>
    5f0c:	nop    DWORD PTR [rax+0x0]
    5f10:	test   rdi,rdi
    5f13:	push   rbx
    5f14:	je     5f87 <__cxa_finalize@plt+0x4017>
    5f16:	mov    esi,0x2f
    5f1b:	mov    rbx,rdi
    5f1e:	call   1ce0 <strrchr@plt>
    5f23:	test   rax,rax
    5f26:	je     5f77 <__cxa_finalize@plt+0x4007>
    5f28:	lea    rdx,[rax+0x1]
    5f2c:	mov    rcx,rdx
    5f2f:	sub    rcx,rbx
    5f32:	cmp    rcx,0x6
    5f36:	jle    5f77 <__cxa_finalize@plt+0x4007>
    5f38:	lea    rsi,[rax-0x6]
    5f3c:	lea    rdi,[rip+0x7115]        # d058 <_IO_stdin_used@@Base+0x1b78>
    5f43:	mov    ecx,0x7
    5f48:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5f4a:	jne    5f77 <__cxa_finalize@plt+0x4007>
    5f4c:	lea    rdi,[rip+0x710d]        # d060 <_IO_stdin_used@@Base+0x1b80>
    5f53:	mov    ecx,0x3
    5f58:	mov    rsi,rdx
    5f5b:	mov    rbx,rdx
    5f5e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5f60:	seta   sil
    5f64:	setb   cl
    5f67:	cmp    sil,cl
    5f6a:	jne    5f77 <__cxa_finalize@plt+0x4007>
    5f6c:	lea    rbx,[rax+0x4]
    5f70:	mov    QWORD PTR [rip+0x20a129],rbx        # 2100a0 <__progname@@GLIBC_2.2.5>
    5f77:	mov    QWORD PTR [rip+0x20a2ba],rbx        # 210238 <program_name@@Base>
    5f7e:	mov    QWORD PTR [rip+0x20a143],rbx        # 2100c8 <__progname_full@@GLIBC_2.2.5>
    5f85:	pop    rbx
    5f86:	ret    
    5f87:	mov    rcx,QWORD PTR [rip+0x20a152]        # 2100e0 <stderr@@GLIBC_2.2.5>
    5f8e:	lea    rdi,[rip+0x708b]        # d020 <_IO_stdin_used@@Base+0x1b40>
    5f95:	mov    edx,0x37
    5f9a:	mov    esi,0x1
    5f9f:	call   1f10 <fwrite@plt>
    5fa4:	call   1b90 <abort@plt>
    5fa9:	nop    DWORD PTR [rax+0x0]
    5fb0:	push   rbp
    5fb1:	push   rbx
    5fb2:	mov    rbp,rdi
    5fb5:	mov    ebx,esi
    5fb7:	sub    rsp,0x8
    5fbb:	call   8fa0 <__cxa_finalize@plt+0x7030>
    5fc0:	movzx  edx,BYTE PTR [rax]
    5fc3:	and    edx,0xffffffdf
    5fc6:	cmp    dl,0x55
    5fc9:	je     6040 <__cxa_finalize@plt+0x40d0>
    5fcb:	cmp    dl,0x47
    5fce:	je     5ff0 <__cxa_finalize@plt+0x4080>
    5fd0:	lea    rax,[rip+0x709c]        # d073 <_IO_stdin_used@@Base+0x1b93>
    5fd7:	lea    rdx,[rip+0x791b]        # d8f9 <version_etc_copyright@@Base+0x79>
    5fde:	cmp    ebx,0x9
    5fe1:	cmovne rax,rdx
    5fe5:	add    rsp,0x8
    5fe9:	pop    rbx
    5fea:	pop    rbp
    5feb:	ret    
    5fec:	nop    DWORD PTR [rax+0x0]
    5ff0:	movzx  edx,BYTE PTR [rax+0x1]
    5ff4:	and    edx,0xffffffdf
    5ff7:	cmp    dl,0x42
    5ffa:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    5ffc:	cmp    BYTE PTR [rax+0x2],0x31
    6000:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6002:	cmp    BYTE PTR [rax+0x3],0x38
    6006:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6008:	cmp    BYTE PTR [rax+0x4],0x30
    600c:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    600e:	cmp    BYTE PTR [rax+0x5],0x33
    6012:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6014:	cmp    BYTE PTR [rax+0x6],0x30
    6018:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    601a:	cmp    BYTE PTR [rax+0x7],0x0
    601e:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6020:	cmp    BYTE PTR [rbp+0x0],0x60
    6024:	lea    rax,[rip+0x7041]        # d06c <_IO_stdin_used@@Base+0x1b8c>
    602b:	lea    rdx,[rip+0x703e]        # d070 <_IO_stdin_used@@Base+0x1b90>
    6032:	cmovne rax,rdx
    6036:	add    rsp,0x8
    603a:	pop    rbx
    603b:	pop    rbp
    603c:	ret    
    603d:	nop    DWORD PTR [rax]
    6040:	movzx  edx,BYTE PTR [rax+0x1]
    6044:	and    edx,0xffffffdf
    6047:	cmp    dl,0x54
    604a:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    604c:	movzx  edx,BYTE PTR [rax+0x2]
    6050:	and    edx,0xffffffdf
    6053:	cmp    dl,0x46
    6056:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    605c:	cmp    BYTE PTR [rax+0x3],0x2d
    6060:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6066:	cmp    BYTE PTR [rax+0x4],0x38
    606a:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    6070:	cmp    BYTE PTR [rax+0x5],0x0
    6074:	jne    5fd0 <__cxa_finalize@plt+0x4060>
    607a:	cmp    BYTE PTR [rbp+0x0],0x60
    607e:	lea    rax,[rip+0x6fdf]        # d064 <_IO_stdin_used@@Base+0x1b84>
    6085:	lea    rdx,[rip+0x6fdc]        # d068 <_IO_stdin_used@@Base+0x1b88>
    608c:	cmovne rax,rdx
    6090:	add    rsp,0x8
    6094:	pop    rbx
    6095:	pop    rbp
    6096:	ret    
    6097:	nop    WORD PTR [rax+rax*1+0x0]
    60a0:	push   r15
    60a2:	push   r14
    60a4:	mov    r15d,r8d
    60a7:	push   r13
    60a9:	push   r12
    60ab:	mov    r14,rdi
    60ae:	push   rbp
    60af:	push   rbx
    60b0:	mov    ebx,r9d
    60b3:	mov    r13,rsi
    60b6:	mov    rbp,rcx
    60b9:	and    ebx,0x2
    60bc:	sub    rsp,0xb8
    60c3:	mov    rax,QWORD PTR [rsp+0xf0]
    60cb:	mov    QWORD PTR [rsp+0x10],rdx
    60d0:	mov    DWORD PTR [rsp+0x8],r8d
    60d5:	mov    DWORD PTR [rsp+0x78],r9d
    60da:	mov    QWORD PTR [rsp+0x20],rax
    60df:	mov    rax,QWORD PTR [rsp+0xf8]
    60e7:	mov    QWORD PTR [rsp+0x68],rax
    60ec:	mov    rax,QWORD PTR [rsp+0x100]
    60f4:	mov    QWORD PTR [rsp+0x60],rax
    60f9:	mov    rax,QWORD PTR fs:0x28
    6102:	mov    QWORD PTR [rsp+0xa8],rax
    610a:	xor    eax,eax
    610c:	call   1c70 <__ctype_get_mb_cur_max@plt>
    6111:	cmp    r15d,0xa
    6115:	mov    QWORD PTR [rsp+0x58],rax
    611a:	ja     72cf <__cxa_finalize@plt+0x535f>
    6120:	lea    rcx,[rip+0x6fb9]        # d0e0 <_IO_stdin_used@@Base+0x1c00>
    6127:	mov    edx,r15d
    612a:	movsxd rax,DWORD PTR [rcx+rdx*4]
    612e:	add    rax,rcx
    6131:	jmp    rax
    6133:	mov    BYTE PTR [rsp+0xe],0x1
    6138:	mov    BYTE PTR [rsp+0x7c],0x0
    613d:	xor    r12d,r12d
    6140:	mov    QWORD PTR [rsp+0x50],0x0
    6149:	mov    BYTE PTR [rsp+0xf],0x1
    614e:	mov    BYTE PTR [rsp+0xd],0x0
    6153:	lea    rax,[rip+0x779f]        # d8f9 <version_etc_copyright@@Base+0x79>
    615a:	mov    QWORD PTR [rsp+0x18],0x1
    6163:	xor    r15d,r15d
    6166:	mov    DWORD PTR [rsp+0x8],0x2
    616e:	mov    QWORD PTR [rsp+0x48],rax
    6173:	xor    r11d,r11d
    6176:	mov    rax,rbp
    6179:	mov    r8d,r12d
    617c:	mov    rbp,r11
    617f:	mov    r11,rax
    6182:	nop    WORD PTR [rax+rax*1+0x0]
    6188:	cmp    r11,rbp
    618b:	setne  r12b
    618f:	cmp    r11,0xffffffffffffffff
    6193:	jne    61a2 <__cxa_finalize@plt+0x4232>
    6195:	mov    rax,QWORD PTR [rsp+0x10]
    619a:	cmp    BYTE PTR [rax+rbp*1],0x0
    619e:	setne  r12b
    61a2:	test   r12b,r12b
    61a5:	je     6800 <__cxa_finalize@plt+0x4890>
    61ab:	cmp    DWORD PTR [rsp+0x8],0x2
    61b0:	mov    rdi,QWORD PTR [rsp+0x10]
    61b5:	lea    r9,[rdi+rbp*1]
    61b9:	setne  al
    61bc:	and    al,BYTE PTR [rsp+0xd]
    61c0:	mov    r10d,eax
    61c3:	je     6270 <__cxa_finalize@plt+0x4300>
    61c9:	mov    rax,QWORD PTR [rsp+0x18]
    61ce:	test   rax,rax
    61d1:	je     6600 <__cxa_finalize@plt+0x4690>
    61d7:	cmp    r11,0xffffffffffffffff
    61db:	lea    rbx,[rbp+rax*1+0x0]
    61e0:	jne    6210 <__cxa_finalize@plt+0x42a0>
    61e2:	cmp    rax,0x1
    61e6:	jbe    6210 <__cxa_finalize@plt+0x42a0>
    61e8:	mov    BYTE PTR [rsp+0x38],r8b
    61ed:	mov    BYTE PTR [rsp+0x30],r10b
    61f2:	mov    QWORD PTR [rsp+0x28],r9
    61f7:	call   1c80 <strlen@plt>
    61fc:	movzx  r8d,BYTE PTR [rsp+0x38]
    6202:	movzx  r10d,BYTE PTR [rsp+0x30]
    6208:	mov    r11,rax
    620b:	mov    r9,QWORD PTR [rsp+0x28]
    6210:	cmp    rbx,r11
    6213:	mov    BYTE PTR [rsp+0x28],r10b
    6218:	ja     67d0 <__cxa_finalize@plt+0x4860>
    621e:	mov    rdx,QWORD PTR [rsp+0x18]
    6223:	mov    rsi,QWORD PTR [rsp+0x48]
    6228:	mov    rdi,r9
    622b:	mov    QWORD PTR [rsp+0x40],r11
    6230:	mov    BYTE PTR [rsp+0x38],r8b
    6235:	mov    QWORD PTR [rsp+0x30],r9
    623a:	call   1d70 <memcmp@plt>
    623f:	test   eax,eax
    6241:	mov    r9,QWORD PTR [rsp+0x30]
    6246:	movzx  r8d,BYTE PTR [rsp+0x38]
    624c:	mov    r11,QWORD PTR [rsp+0x40]
    6251:	jne    67d0 <__cxa_finalize@plt+0x4860>
    6257:	cmp    BYTE PTR [rsp+0xf],0x0
    625c:	movzx  r10d,BYTE PTR [rsp+0x28]
    6262:	jne    71e5 <__cxa_finalize@plt+0x5275>
    6268:	nop    DWORD PTR [rax+rax*1+0x0]
    6270:	movzx  ebx,BYTE PTR [r9]
    6274:	cmp    bl,0x7e
    6277:	ja     6598 <__cxa_finalize@plt+0x4628>
    627d:	lea    rcx,[rip+0x6e88]        # d10c <_IO_stdin_used@@Base+0x1c2c>
    6284:	movzx  edx,bl
    6287:	movsxd rax,DWORD PTR [rcx+rdx*4]
    628b:	add    rax,rcx
    628e:	jmp    rax
    6290:	xor    r10d,r10d
    6293:	cmp    r11,0x1
    6297:	setne  al
    629a:	cmp    r11,0xffffffffffffffff
    629e:	jne    62ac <__cxa_finalize@plt+0x433c>
    62a0:	mov    rax,QWORD PTR [rsp+0x10]
    62a5:	cmp    BYTE PTR [rax+0x1],0x0
    62a9:	setne  al
    62ac:	cmp    DWORD PTR [rsp+0x8],0x2
    62b1:	sete   dl
    62b4:	test   al,al
    62b6:	je     6508 <__cxa_finalize@plt+0x4598>
    62bc:	xor    r12d,r12d
    62bf:	xor    eax,eax
    62c1:	nop    DWORD PTR [rax+0x0]
    62c8:	cmp    BYTE PTR [rsp+0xd],0x1
    62cd:	jne    63e2 <__cxa_finalize@plt+0x4472>
    62d3:	test   dl,dl
    62d5:	jne    63e2 <__cxa_finalize@plt+0x4472>
    62db:	mov    rsi,QWORD PTR [rsp+0x20]
    62e0:	test   rsi,rsi
    62e3:	je     62f9 <__cxa_finalize@plt+0x4389>
    62e5:	mov    edx,ebx
    62e7:	shr    dl,0x5
    62ea:	movzx  edx,dl
    62ed:	mov    edx,DWORD PTR [rsi+rdx*4]
    62f0:	bt     edx,ebx
    62f3:	jb     6443 <__cxa_finalize@plt+0x44d3>
    62f9:	test   r10b,r10b
    62fc:	jne    6443 <__cxa_finalize@plt+0x44d3>
    6302:	xor    eax,0x1
    6305:	add    rbp,0x1
    6309:	and    eax,r8d
    630c:	test   al,al
    630e:	je     6330 <__cxa_finalize@plt+0x43c0>
    6310:	cmp    r13,r15
    6313:	jbe    631a <__cxa_finalize@plt+0x43aa>
    6315:	mov    BYTE PTR [r14+r15*1],0x27
    631a:	lea    rax,[r15+0x1]
    631e:	cmp    r13,rax
    6321:	jbe    6329 <__cxa_finalize@plt+0x43b9>
    6323:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    6329:	add    r15,0x2
    632d:	xor    r8d,r8d
    6330:	cmp    r15,r13
    6333:	jae    6339 <__cxa_finalize@plt+0x43c9>
    6335:	mov    BYTE PTR [r14+r15*1],bl
    6339:	movzx  edi,BYTE PTR [rsp+0xe]
    633e:	add    r15,0x1
    6342:	mov    eax,0x0
    6347:	test   r12b,r12b
    634a:	cmove  edi,eax
    634d:	mov    BYTE PTR [rsp+0xe],dil
    6352:	jmp    6188 <__cxa_finalize@plt+0x4218>
    6357:	nop    WORD PTR [rax+rax*1+0x0]
    6360:	xor    r10d,r10d
    6363:	mov    eax,DWORD PTR [rsp+0x8]
    6367:	cmp    eax,0x2
    636a:	je     6928 <__cxa_finalize@plt+0x49b8>
    6370:	cmp    eax,0x5
    6373:	je     68e8 <__cxa_finalize@plt+0x4978>
    6379:	cmp    eax,0x2
    637c:	mov    ebx,0x3f
    6381:	sete   dl
    6384:	xor    r12d,r12d
    6387:	xor    eax,eax
    6389:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    638e:	xchg   ax,ax
    6390:	xor    r10d,r10d
    6393:	cmp    DWORD PTR [rsp+0x8],0x2
    6398:	je     68a0 <__cxa_finalize@plt+0x4930>
    639e:	mov    BYTE PTR [rsp+0x7c],r12b
    63a3:	xor    edx,edx
    63a5:	xor    eax,eax
    63a7:	mov    ebx,0x27
    63ac:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    63b1:	nop    DWORD PTR [rax+0x0]
    63b8:	mov    edx,0x9
    63bd:	mov    ebx,0x74
    63c2:	cmp    DWORD PTR [rsp+0x8],0x2
    63c7:	sete   al
    63ca:	and    al,BYTE PTR [rsp+0xf]
    63ce:	jne    651e <__cxa_finalize@plt+0x45ae>
    63d4:	cmp    BYTE PTR [rsp+0xd],0x0
    63d9:	jne    6440 <__cxa_finalize@plt+0x44d0>
    63db:	mov    ebx,edx
    63dd:	xor    r12d,r12d
    63e0:	xor    eax,eax
    63e2:	cmp    BYTE PTR [rsp+0xf],0x0
    63e7:	jne    62db <__cxa_finalize@plt+0x436b>
    63ed:	jmp    62f9 <__cxa_finalize@plt+0x4389>
    63f2:	nop    WORD PTR [rax+rax*1+0x0]
    63f8:	mov    edx,0x8
    63fd:	mov    ebx,0x62
    6402:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    6404:	nop    DWORD PTR [rax+0x0]
    6408:	cmp    DWORD PTR [rsp+0x8],0x2
    640d:	je     67e0 <__cxa_finalize@plt+0x4870>
    6413:	cmp    BYTE PTR [rsp+0xd],0x0
    6418:	je     6630 <__cxa_finalize@plt+0x46c0>
    641e:	cmp    BYTE PTR [rsp+0xf],0x0
    6423:	je     6630 <__cxa_finalize@plt+0x46c0>
    6429:	cmp    QWORD PTR [rsp+0x18],0x0
    642f:	jne    67eb <__cxa_finalize@plt+0x487b>
    6435:	mov    ebx,0x5c
    643a:	nop    WORD PTR [rax+rax*1+0x0]
    6440:	xor    r12d,r12d
    6443:	cmp    DWORD PTR [rsp+0x8],0x2
    6448:	sete   dl
    644b:	cmp    BYTE PTR [rsp+0xf],0x0
    6450:	mov    eax,edx
    6452:	jne    6ca8 <__cxa_finalize@plt+0x4d38>
    6458:	mov    eax,r8d
    645b:	xor    eax,0x1
    645e:	and    al,dl
    6460:	je     6491 <__cxa_finalize@plt+0x4521>
    6462:	cmp    r13,r15
    6465:	jbe    646c <__cxa_finalize@plt+0x44fc>
    6467:	mov    BYTE PTR [r14+r15*1],0x27
    646c:	lea    rdx,[r15+0x1]
    6470:	cmp    r13,rdx
    6473:	jbe    647b <__cxa_finalize@plt+0x450b>
    6475:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    647b:	lea    rdx,[r15+0x2]
    647f:	cmp    r13,rdx
    6482:	jbe    648a <__cxa_finalize@plt+0x451a>
    6484:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    648a:	add    r15,0x3
    648e:	mov    r8d,eax
    6491:	cmp    r13,r15
    6494:	jbe    649b <__cxa_finalize@plt+0x452b>
    6496:	mov    BYTE PTR [r14+r15*1],0x5c
    649b:	add    r15,0x1
    649f:	add    rbp,0x1
    64a3:	jmp    6330 <__cxa_finalize@plt+0x43c0>
    64a8:	nop    DWORD PTR [rax+rax*1+0x0]
    64b0:	cmp    BYTE PTR [rsp+0xd],0x0
    64b5:	jne    6683 <__cxa_finalize@plt+0x4713>
    64bb:	xor    edx,edx
    64bd:	test   BYTE PTR [rsp+0x78],0x1
    64c2:	je     63db <__cxa_finalize@plt+0x446b>
    64c8:	add    rbp,0x1
    64cc:	jmp    6188 <__cxa_finalize@plt+0x4218>
    64d1:	nop    DWORD PTR [rax+0x0]
    64d8:	cmp    DWORD PTR [rsp+0x8],0x2
    64dd:	sete   dl
    64e0:	xor    eax,eax
    64e2:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    64e7:	nop    WORD PTR [rax+rax*1+0x0]
    64f0:	mov    edx,0x7
    64f5:	mov    ebx,0x61
    64fa:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    64ff:	nop
    6500:	cmp    DWORD PTR [rsp+0x8],0x2
    6505:	sete   dl
    6508:	test   rbp,rbp
    650b:	jne    62bc <__cxa_finalize@plt+0x434c>
    6511:	movzx  eax,BYTE PTR [rsp+0xf]
    6516:	and    al,dl
    6518:	je     62c8 <__cxa_finalize@plt+0x4358>
    651e:	mov    rbp,r11
    6521:	mov    DWORD PTR [rsp+0x8],0x2
    6529:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    652e:	xchg   ax,ax
    6530:	cmp    DWORD PTR [rsp+0x8],0x2
    6535:	sete   dl
    6538:	xor    r12d,r12d
    653b:	jmp    6511 <__cxa_finalize@plt+0x45a1>
    653d:	nop    DWORD PTR [rax]
    6540:	cmp    DWORD PTR [rsp+0x8],0x2
    6545:	mov    ebx,0x20
    654a:	sete   dl
    654d:	jmp    6511 <__cxa_finalize@plt+0x45a1>
    654f:	nop
    6550:	mov    edx,0xd
    6555:	mov    ebx,0x72
    655a:	jmp    63c2 <__cxa_finalize@plt+0x4452>
    655f:	nop
    6560:	mov    edx,0xc
    6565:	mov    ebx,0x66
    656a:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    656f:	nop
    6570:	mov    edx,0xb
    6575:	mov    ebx,0x76
    657a:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    657f:	nop
    6580:	mov    edx,0xa
    6585:	mov    ebx,0x6e
    658a:	jmp    63c2 <__cxa_finalize@plt+0x4452>
    658f:	nop
    6590:	xor    r10d,r10d
    6593:	nop    DWORD PTR [rax+rax*1+0x0]
    6598:	cmp    QWORD PTR [rsp+0x58],0x1
    659e:	jne    6948 <__cxa_finalize@plt+0x49d8>
    65a4:	mov    QWORD PTR [rsp+0x38],r11
    65a9:	mov    BYTE PTR [rsp+0x30],r8b
    65ae:	mov    BYTE PTR [rsp+0x28],r10b
    65b3:	call   1f50 <__ctype_b_loc@plt>
    65b8:	mov    rcx,QWORD PTR [rax]
    65bb:	movzx  edx,bl
    65be:	movzx  r10d,BYTE PTR [rsp+0x28]
    65c4:	movzx  r8d,BYTE PTR [rsp+0x30]
    65ca:	mov    r11,QWORD PTR [rsp+0x38]
    65cf:	mov    edi,0x1
    65d4:	movzx  eax,WORD PTR [rcx+rdx*2]
    65d8:	and    ax,0x4000
    65dc:	setne  r12b
    65e0:	sete   al
    65e3:	and    al,BYTE PTR [rsp+0xd]
    65e7:	test   al,al
    65e9:	jne    6f81 <__cxa_finalize@plt+0x5011>
    65ef:	cmp    DWORD PTR [rsp+0x8],0x2
    65f4:	sete   dl
    65f7:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    65fc:	nop    DWORD PTR [rax+0x0]
    6600:	movzx  ebx,BYTE PTR [r9]
    6604:	cmp    bl,0x7e
    6607:	ja     6590 <__cxa_finalize@plt+0x4620>
    6609:	lea    rcx,[rip+0x6cf8]        # d308 <_IO_stdin_used@@Base+0x1e28>
    6610:	movzx  edx,bl
    6613:	movsxd rax,DWORD PTR [rcx+rdx*4]
    6617:	add    rax,rcx
    661a:	jmp    rax
    661c:	nop    DWORD PTR [rax+0x0]
    6620:	xor    r10d,r10d
    6623:	cmp    BYTE PTR [rsp+0xd],0x0
    6628:	jne    641e <__cxa_finalize@plt+0x44ae>
    662e:	xchg   ax,ax
    6630:	mov    edx,0x5c
    6635:	mov    ebx,0x5c
    663a:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    663f:	nop
    6640:	mov    edx,0xc
    6645:	xor    r10d,r10d
    6648:	mov    ebx,0x66
    664d:	jmp    63d4 <__cxa_finalize@plt+0x4464>
    6652:	nop    WORD PTR [rax+rax*1+0x0]
    6658:	mov    edx,0xa
    665d:	xor    r10d,r10d
    6660:	mov    ebx,0x6e
    6665:	jmp    63c2 <__cxa_finalize@plt+0x4452>
    666a:	nop    WORD PTR [rax+rax*1+0x0]
    6670:	mov    ebx,0x61
    6675:	jmp    6440 <__cxa_finalize@plt+0x44d0>
    667a:	nop    WORD PTR [rax+rax*1+0x0]
    6680:	xor    r10d,r10d
    6683:	cmp    DWORD PTR [rsp+0x8],0x2
    6688:	sete   dl
    668b:	cmp    BYTE PTR [rsp+0xf],0x0
    6690:	jne    722a <__cxa_finalize@plt+0x52ba>
    6696:	mov    eax,r8d
    6699:	mov    rcx,r15
    669c:	xor    eax,0x1
    669f:	and    al,dl
    66a1:	je     66d0 <__cxa_finalize@plt+0x4760>
    66a3:	cmp    r13,r15
    66a6:	jbe    66ad <__cxa_finalize@plt+0x473d>
    66a8:	mov    BYTE PTR [r14+r15*1],0x27
    66ad:	lea    rcx,[r15+0x1]
    66b1:	cmp    r13,rcx
    66b4:	jbe    66bc <__cxa_finalize@plt+0x474c>
    66b6:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    66bc:	lea    rcx,[r15+0x2]
    66c0:	cmp    r13,rcx
    66c3:	ja     6cf9 <__cxa_finalize@plt+0x4d89>
    66c9:	lea    rcx,[r15+0x3]
    66cd:	mov    r8d,eax
    66d0:	cmp    r13,rcx
    66d3:	jbe    66da <__cxa_finalize@plt+0x476a>
    66d5:	mov    BYTE PTR [r14+rcx*1],0x5c
    66da:	cmp    DWORD PTR [rsp+0x8],0x2
    66df:	lea    r15,[rcx+0x1]
    66e3:	je     6ce9 <__cxa_finalize@plt+0x4d79>
    66e9:	lea    rax,[rbp+0x1]
    66ed:	cmp    rax,r11
    66f0:	jae    670b <__cxa_finalize@plt+0x479b>
    66f2:	mov    rax,QWORD PTR [rsp+0x10]
    66f7:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    66fc:	mov    BYTE PTR [rsp+0x28],al
    6700:	sub    eax,0x30
    6703:	cmp    al,0x9
    6705:	jbe    6f39 <__cxa_finalize@plt+0x4fc9>
    670b:	mov    eax,r12d
    670e:	mov    ebx,0x30
    6713:	xor    r12d,r12d
    6716:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    671b:	nop    DWORD PTR [rax+rax*1+0x0]
    6720:	cmp    DWORD PTR [rsp+0x8],0x2
    6725:	mov    r12d,r10d
    6728:	sete   dl
    672b:	xor    r10d,r10d
    672e:	xor    eax,eax
    6730:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    6735:	nop    DWORD PTR [rax]
    6738:	cmp    DWORD PTR [rsp+0x8],0x2
    673d:	sete   dl
    6740:	xor    r10d,r10d
    6743:	jmp    6508 <__cxa_finalize@plt+0x4598>
    6748:	nop    DWORD PTR [rax+rax*1+0x0]
    6750:	cmp    DWORD PTR [rsp+0x8],0x2
    6755:	sete   dl
    6758:	xor    r10d,r10d
    675b:	xor    r12d,r12d
    675e:	jmp    6511 <__cxa_finalize@plt+0x45a1>
    6763:	nop    DWORD PTR [rax+rax*1+0x0]
    6768:	cmp    DWORD PTR [rsp+0x8],0x2
    676d:	mov    r12d,r10d
    6770:	mov    ebx,0x20
    6775:	sete   dl
    6778:	xor    r10d,r10d
    677b:	jmp    6511 <__cxa_finalize@plt+0x45a1>
    6780:	mov    edx,0xd
    6785:	xor    r10d,r10d
    6788:	mov    ebx,0x72
    678d:	jmp    63c2 <__cxa_finalize@plt+0x4452>
    6792:	nop    WORD PTR [rax+rax*1+0x0]
    6798:	mov    ebx,0x76
    679d:	jmp    6440 <__cxa_finalize@plt+0x44d0>
    67a2:	nop    WORD PTR [rax+rax*1+0x0]
    67a8:	mov    edx,0x9
    67ad:	xor    r10d,r10d
    67b0:	mov    ebx,0x74
    67b5:	jmp    63c2 <__cxa_finalize@plt+0x4452>
    67ba:	nop    WORD PTR [rax+rax*1+0x0]
    67c0:	mov    ebx,0x62
    67c5:	jmp    6440 <__cxa_finalize@plt+0x44d0>
    67ca:	nop    WORD PTR [rax+rax*1+0x0]
    67d0:	xor    r10d,r10d
    67d3:	jmp    6270 <__cxa_finalize@plt+0x4300>
    67d8:	nop    DWORD PTR [rax+rax*1+0x0]
    67e0:	cmp    BYTE PTR [rsp+0xf],0x0
    67e5:	jne    7150 <__cxa_finalize@plt+0x51e0>
    67eb:	add    rbp,0x1
    67ef:	mov    eax,r8d
    67f2:	xor    r12d,r12d
    67f5:	mov    ebx,0x5c
    67fa:	jmp    630c <__cxa_finalize@plt+0x439c>
    67ff:	nop
    6800:	cmp    DWORD PTR [rsp+0x8],0x2
    6805:	movzx  ebx,BYTE PTR [rsp+0xf]
    680a:	mov    r12d,r8d
    680d:	mov    rbp,r11
    6810:	sete   dl
    6813:	mov    eax,ebx
    6815:	test   r15,r15
    6818:	sete   cl
    681b:	and    eax,edx
    681d:	and    al,cl
    681f:	jne    7286 <__cxa_finalize@plt+0x5316>
    6825:	mov    eax,ebx
    6827:	xor    eax,0x1
    682a:	and    dl,al
    682c:	je     719c <__cxa_finalize@plt+0x522c>
    6832:	cmp    BYTE PTR [rsp+0x7c],0x0
    6837:	je     719a <__cxa_finalize@plt+0x522a>
    683d:	cmp    BYTE PTR [rsp+0xe],0x0
    6842:	jne    723d <__cxa_finalize@plt+0x52cd>
    6848:	test   r13,r13
    684b:	sete   al
    684e:	cmp    QWORD PTR [rsp+0x50],0x0
    6854:	setne  dl
    6857:	and    al,dl
    6859:	je     727c <__cxa_finalize@plt+0x530c>
    685f:	mov    r13,QWORD PTR [rsp+0x50]
    6864:	lea    rbx,[rip+0x708e]        # d8f9 <version_etc_copyright@@Base+0x79>
    686b:	mov    BYTE PTR [r14],0x27
    686f:	mov    DWORD PTR [rsp+0x8],0x2
    6877:	mov    r15d,0x1
    687d:	mov    QWORD PTR [rsp+0x18],0x1
    6886:	mov    BYTE PTR [rsp+0xf],0x0
    688b:	mov    QWORD PTR [rsp+0x48],rbx
    6890:	mov    BYTE PTR [rsp+0x7c],al
    6894:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6899:	nop    DWORD PTR [rax+0x0]
    68a0:	cmp    BYTE PTR [rsp+0xf],0x0
    68a5:	jne    7150 <__cxa_finalize@plt+0x51e0>
    68ab:	test   r13,r13
    68ae:	je     6cb0 <__cxa_finalize@plt+0x4d40>
    68b4:	xor    edx,edx
    68b6:	cmp    QWORD PTR [rsp+0x50],0x0
    68bc:	jne    6cb0 <__cxa_finalize@plt+0x4d40>
    68c2:	mov    QWORD PTR [rsp+0x50],r13
    68c7:	add    r15,0x3
    68cb:	xor    eax,eax
    68cd:	mov    BYTE PTR [rsp+0x7c],r12b
    68d2:	xor    r8d,r8d
    68d5:	mov    r13,rdx
    68d8:	mov    ebx,0x27
    68dd:	jmp    62f9 <__cxa_finalize@plt+0x4389>
    68e2:	nop    WORD PTR [rax+rax*1+0x0]
    68e8:	test   BYTE PTR [rsp+0x78],0x4
    68ed:	je     6910 <__cxa_finalize@plt+0x49a0>
    68ef:	lea    rcx,[rbp+0x2]
    68f3:	cmp    rcx,r11
    68f6:	jae    6910 <__cxa_finalize@plt+0x49a0>
    68f8:	mov    rax,QWORD PTR [rsp+0x10]
    68fd:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    6902:	je     7092 <__cxa_finalize@plt+0x5122>
    6908:	nop    DWORD PTR [rax+rax*1+0x0]
    6910:	xor    edx,edx
    6912:	xor    r12d,r12d
    6915:	xor    eax,eax
    6917:	mov    ebx,0x3f
    691c:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    6921:	nop    DWORD PTR [rax+0x0]
    6928:	cmp    BYTE PTR [rsp+0xf],0x0
    692d:	jne    7150 <__cxa_finalize@plt+0x51e0>
    6933:	xor    r12d,r12d
    6936:	xor    eax,eax
    6938:	mov    ebx,0x3f
    693d:	jmp    62f9 <__cxa_finalize@plt+0x4389>
    6942:	nop    WORD PTR [rax+rax*1+0x0]
    6948:	lea    rax,[rsp+0xa0]
    6950:	cmp    r11,0xffffffffffffffff
    6954:	mov    QWORD PTR [rsp+0xa0],0x0
    6960:	mov    QWORD PTR [rsp+0x28],rax
    6965:	jne    6994 <__cxa_finalize@plt+0x4a24>
    6967:	mov    rdi,QWORD PTR [rsp+0x10]
    696c:	mov    BYTE PTR [rsp+0x40],r8b
    6971:	mov    BYTE PTR [rsp+0x38],r10b
    6976:	mov    QWORD PTR [rsp+0x30],r9
    697b:	call   1c80 <strlen@plt>
    6980:	movzx  r8d,BYTE PTR [rsp+0x40]
    6986:	movzx  r10d,BYTE PTR [rsp+0x38]
    698c:	mov    r11,rax
    698f:	mov    r9,QWORD PTR [rsp+0x30]
    6994:	lea    rax,[rsp+0x9c]
    699c:	xor    ecx,ecx
    699e:	mov    BYTE PTR [rsp+0x7e],bl
    69a2:	mov    BYTE PTR [rsp+0x7d],r8b
    69a7:	mov    rbx,rcx
    69aa:	mov    QWORD PTR [rsp+0x88],r9
    69b2:	mov    QWORD PTR [rsp+0x38],rax
    69b7:	mov    BYTE PTR [rsp+0x7f],r10b
    69bc:	mov    QWORD PTR [rsp+0x80],r15
    69c4:	mov    QWORD PTR [rsp+0x40],r14
    69c9:	mov    QWORD PTR [rsp+0x70],r13
    69ce:	mov    QWORD PTR [rsp+0x30],r11
    69d3:	mov    rax,QWORD PTR [rsp+0x10]
    69d8:	lea    r14,[rbp+rbx*1+0x0]
    69dd:	mov    rdx,QWORD PTR [rsp+0x30]
    69e2:	mov    rcx,QWORD PTR [rsp+0x28]
    69e7:	mov    rdi,QWORD PTR [rsp+0x38]
    69ec:	lea    r13,[rax+r14*1]
    69f0:	sub    rdx,r14
    69f3:	mov    rsi,r13
    69f6:	call   8d10 <__cxa_finalize@plt+0x6da0>
    69fb:	test   rax,rax
    69fe:	mov    r15,rax
    6a01:	je     6a51 <__cxa_finalize@plt+0x4ae1>
    6a03:	cmp    rax,0xffffffffffffffff
    6a07:	je     7025 <__cxa_finalize@plt+0x50b5>
    6a0d:	cmp    rax,0xfffffffffffffffe
    6a11:	je     6fb1 <__cxa_finalize@plt+0x5041>
    6a17:	cmp    DWORD PTR [rsp+0x8],0x2
    6a1c:	sete   al
    6a1f:	and    al,BYTE PTR [rsp+0xf]
    6a23:	jne    6bc0 <__cxa_finalize@plt+0x4c50>
    6a29:	mov    edi,DWORD PTR [rsp+0x9c]
    6a30:	call   1f40 <iswprint@plt>
    6a35:	mov    rdi,QWORD PTR [rsp+0x28]
    6a3a:	test   eax,eax
    6a3c:	mov    eax,0x0
    6a41:	cmove  r12d,eax
    6a45:	add    rbx,r15
    6a48:	call   1f30 <mbsinit@plt>
    6a4d:	test   eax,eax
    6a4f:	je     69d3 <__cxa_finalize@plt+0x4a63>
    6a51:	mov    edx,r12d
    6a54:	mov    rdi,rbx
    6a57:	movzx  r8d,BYTE PTR [rsp+0x7d]
    6a5d:	xor    edx,0x1
    6a60:	movzx  ebx,BYTE PTR [rsp+0x7e]
    6a65:	movzx  r10d,BYTE PTR [rsp+0x7f]
    6a6b:	and    dl,BYTE PTR [rsp+0xd]
    6a6f:	mov    r15,QWORD PTR [rsp+0x80]
    6a77:	mov    r14,QWORD PTR [rsp+0x40]
    6a7c:	mov    r13,QWORD PTR [rsp+0x70]
    6a81:	mov    r11,QWORD PTR [rsp+0x30]
    6a86:	cmp    rdi,0x1
    6a8a:	jbe    708b <__cxa_finalize@plt+0x511b>
    6a90:	mov    rcx,rdi
    6a93:	xor    esi,esi
    6a95:	movzx  r9d,BYTE PTR [rsp+0xf]
    6a9b:	add    rcx,rbp
    6a9e:	mov    rdi,QWORD PTR [rsp+0x10]
    6aa3:	jmp    6b5e <__cxa_finalize@plt+0x4bee>
    6aa8:	nop    DWORD PTR [rax+rax*1+0x0]
    6ab0:	cmp    DWORD PTR [rsp+0x8],0x2
    6ab5:	sete   al
    6ab8:	test   r9b,r9b
    6abb:	jne    6f70 <__cxa_finalize@plt+0x5000>
    6ac1:	mov    esi,r8d
    6ac4:	xor    esi,0x1
    6ac7:	and    al,sil
    6aca:	je     6afb <__cxa_finalize@plt+0x4b8b>
    6acc:	cmp    r13,r15
    6acf:	jbe    6ad6 <__cxa_finalize@plt+0x4b66>
    6ad1:	mov    BYTE PTR [r14+r15*1],0x27
    6ad6:	lea    rsi,[r15+0x1]
    6ada:	cmp    r13,rsi
    6add:	jbe    6ae5 <__cxa_finalize@plt+0x4b75>
    6adf:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    6ae5:	lea    rsi,[r15+0x2]
    6ae9:	cmp    r13,rsi
    6aec:	jbe    6af4 <__cxa_finalize@plt+0x4b84>
    6aee:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    6af4:	add    r15,0x3
    6af8:	mov    r8d,eax
    6afb:	cmp    r13,r15
    6afe:	jbe    6b05 <__cxa_finalize@plt+0x4b95>
    6b00:	mov    BYTE PTR [r14+r15*1],0x5c
    6b05:	lea    rax,[r15+0x1]
    6b09:	cmp    r13,rax
    6b0c:	jbe    6b1b <__cxa_finalize@plt+0x4bab>
    6b0e:	mov    eax,ebx
    6b10:	shr    al,0x6
    6b13:	add    eax,0x30
    6b16:	mov    BYTE PTR [r14+r15*1+0x1],al
    6b1b:	lea    rax,[r15+0x2]
    6b1f:	cmp    r13,rax
    6b22:	jbe    6b34 <__cxa_finalize@plt+0x4bc4>
    6b24:	mov    eax,ebx
    6b26:	shr    al,0x3
    6b29:	and    eax,0x7
    6b2c:	add    eax,0x30
    6b2f:	mov    BYTE PTR [r14+r15*1+0x2],al
    6b34:	and    ebx,0x7
    6b37:	add    rbp,0x1
    6b3b:	add    r15,0x3
    6b3f:	add    ebx,0x30
    6b42:	cmp    rbp,rcx
    6b45:	jae    6330 <__cxa_finalize@plt+0x43c0>
    6b4b:	mov    esi,edx
    6b4d:	cmp    r13,r15
    6b50:	jbe    6b56 <__cxa_finalize@plt+0x4be6>
    6b52:	mov    BYTE PTR [r14+r15*1],bl
    6b56:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    6b5a:	add    r15,0x1
    6b5e:	test   dl,dl
    6b60:	jne    6ab0 <__cxa_finalize@plt+0x4b40>
    6b66:	mov    eax,esi
    6b68:	xor    eax,0x1
    6b6b:	and    eax,r8d
    6b6e:	test   r10b,r10b
    6b71:	je     6b81 <__cxa_finalize@plt+0x4c11>
    6b73:	cmp    r13,r15
    6b76:	jbe    6b7d <__cxa_finalize@plt+0x4c0d>
    6b78:	mov    BYTE PTR [r14+r15*1],0x5c
    6b7d:	add    r15,0x1
    6b81:	add    rbp,0x1
    6b85:	cmp    rbp,rcx
    6b88:	jae    630c <__cxa_finalize@plt+0x439c>
    6b8e:	test   al,al
    6b90:	je     6f8e <__cxa_finalize@plt+0x501e>
    6b96:	cmp    r13,r15
    6b99:	jbe    6ba0 <__cxa_finalize@plt+0x4c30>
    6b9b:	mov    BYTE PTR [r14+r15*1],0x27
    6ba0:	lea    rax,[r15+0x1]
    6ba4:	cmp    r13,rax
    6ba7:	jbe    6baf <__cxa_finalize@plt+0x4c3f>
    6ba9:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    6baf:	add    r15,0x2
    6bb3:	xor    r10d,r10d
    6bb6:	xor    r8d,r8d
    6bb9:	jmp    6b4d <__cxa_finalize@plt+0x4bdd>
    6bbb:	nop    DWORD PTR [rax+rax*1+0x0]
    6bc0:	cmp    r15,0x1
    6bc4:	je     6a29 <__cxa_finalize@plt+0x4ab9>
    6bca:	mov    rdi,QWORD PTR [rsp+0x10]
    6bcf:	lea    rcx,[rdi+r15*1]
    6bd3:	lea    rdx,[rdi+r14*1+0x1]
    6bd8:	lea    r8,[rcx+r14*1]
    6bdc:	jmp    6bed <__cxa_finalize@plt+0x4c7d>
    6bde:	xchg   ax,ax
    6be0:	add    rdx,0x1
    6be4:	cmp    r8,rdx
    6be7:	je     6a29 <__cxa_finalize@plt+0x4ab9>
    6bed:	movzx  ecx,BYTE PTR [rdx]
    6bf0:	sub    ecx,0x5b
    6bf3:	cmp    cl,0x21
    6bf6:	ja     6be0 <__cxa_finalize@plt+0x4c70>
    6bf8:	mov    esi,0x1
    6bfd:	shl    rsi,cl
    6c00:	mov    rcx,rsi
    6c03:	movabs rsi,0x20000002b
    6c0d:	test   rcx,rsi
    6c10:	je     6be0 <__cxa_finalize@plt+0x4c70>
    6c12:	mov    r14,QWORD PTR [rsp+0x40]
    6c17:	mov    r13,QWORD PTR [rsp+0x70]
    6c1c:	mov    rbp,QWORD PTR [rsp+0x30]
    6c21:	mov    DWORD PTR [rsp+0x8],0x2
    6c29:	cmp    BYTE PTR [rsp+0xd],0x0
    6c2e:	je     6c40 <__cxa_finalize@plt+0x4cd0>
    6c30:	test   al,al
    6c32:	mov    eax,0x4
    6c37:	cmove  eax,DWORD PTR [rsp+0x8]
    6c3c:	mov    DWORD PTR [rsp+0x8],eax
    6c40:	sub    rsp,0x8
    6c44:	mov    rcx,rbp
    6c47:	mov    rsi,r13
    6c4a:	push   QWORD PTR [rsp+0x68]
    6c4e:	push   QWORD PTR [rsp+0x78]
    6c52:	mov    rdi,r14
    6c55:	push   0x0
    6c57:	mov    r9d,DWORD PTR [rsp+0x98]
    6c5f:	mov    r8d,DWORD PTR [rsp+0x28]
    6c64:	mov    rdx,QWORD PTR [rsp+0x30]
    6c69:	and    r9d,0xfffffffd
    6c6d:	call   60a0 <__cxa_finalize@plt+0x4130>
    6c72:	add    rsp,0x20
    6c76:	mov    r15,rax
    6c79:	mov    rbx,QWORD PTR [rsp+0xa8]
    6c81:	xor    rbx,QWORD PTR fs:0x28
    6c8a:	mov    rax,r15
    6c8d:	jne    7293 <__cxa_finalize@plt+0x5323>
    6c93:	add    rsp,0xb8
    6c9a:	pop    rbx
    6c9b:	pop    rbp
    6c9c:	pop    r12
    6c9e:	pop    r13
    6ca0:	pop    r14
    6ca2:	pop    r15
    6ca4:	ret    
    6ca5:	nop    DWORD PTR [rax]
    6ca8:	mov    rbp,r11
    6cab:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    6cb0:	cmp    r13,r15
    6cb3:	jbe    6cba <__cxa_finalize@plt+0x4d4a>
    6cb5:	mov    BYTE PTR [r14+r15*1],0x27
    6cba:	lea    rax,[r15+0x1]
    6cbe:	cmp    r13,rax
    6cc1:	jbe    6cc9 <__cxa_finalize@plt+0x4d59>
    6cc3:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    6cc9:	lea    rax,[r15+0x2]
    6ccd:	cmp    r13,rax
    6cd0:	jbe    72c2 <__cxa_finalize@plt+0x5352>
    6cd6:	mov    rdx,r13
    6cd9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    6cdf:	mov    r13,QWORD PTR [rsp+0x50]
    6ce4:	jmp    68c2 <__cxa_finalize@plt+0x4952>
    6ce9:	mov    eax,r12d
    6cec:	mov    ebx,0x30
    6cf1:	xor    r12d,r12d
    6cf4:	jmp    62f9 <__cxa_finalize@plt+0x4389>
    6cf9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    6cff:	jmp    66c9 <__cxa_finalize@plt+0x4759>
    6d04:	test   ebx,ebx
    6d06:	jne    6133 <__cxa_finalize@plt+0x41c3>
    6d0c:	mov    BYTE PTR [rsp+0xd],0x1
    6d11:	test   r13,r13
    6d14:	jne    72aa <__cxa_finalize@plt+0x533a>
    6d1a:	lea    rax,[rip+0x6bd8]        # d8f9 <version_etc_copyright@@Base+0x79>
    6d21:	mov    QWORD PTR [rsp+0x50],0x0
    6d2a:	mov    BYTE PTR [rsp+0xe],0x1
    6d2f:	mov    BYTE PTR [rsp+0x7c],0x0
    6d34:	xor    r12d,r12d
    6d37:	mov    BYTE PTR [rsp+0xf],0x0
    6d3c:	mov    QWORD PTR [rsp+0x18],0x1
    6d45:	mov    QWORD PTR [rsp+0x48],rax
    6d4a:	mov    r15d,0x1
    6d50:	mov    DWORD PTR [rsp+0x8],0x2
    6d58:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6d5d:	nop    DWORD PTR [rax]
    6d60:	test   ebx,ebx
    6d62:	jne    715d <__cxa_finalize@plt+0x51ed>
    6d68:	test   r13,r13
    6d6b:	je     6f96 <__cxa_finalize@plt+0x5026>
    6d71:	mov    BYTE PTR [r14],0x22
    6d75:	mov    BYTE PTR [rsp+0xe],0x1
    6d7a:	xor    r12d,r12d
    6d7d:	mov    BYTE PTR [rsp+0x7c],0x0
    6d82:	mov    QWORD PTR [rsp+0x50],0x0
    6d8b:	lea    rax,[rip+0x62e1]        # d073 <_IO_stdin_used@@Base+0x1b93>
    6d92:	mov    BYTE PTR [rsp+0xf],0x0
    6d97:	mov    BYTE PTR [rsp+0xd],0x1
    6d9c:	mov    QWORD PTR [rsp+0x18],0x1
    6da5:	mov    r15d,0x1
    6dab:	mov    QWORD PTR [rsp+0x48],rax
    6db0:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6db5:	lea    rax,[rip+0x62b7]        # d073 <_IO_stdin_used@@Base+0x1b93>
    6dbc:	mov    BYTE PTR [rsp+0xe],0x1
    6dc1:	mov    BYTE PTR [rsp+0x7c],0x0
    6dc6:	xor    r12d,r12d
    6dc9:	mov    QWORD PTR [rsp+0x50],0x0
    6dd2:	mov    BYTE PTR [rsp+0xf],0x1
    6dd7:	mov    BYTE PTR [rsp+0xd],0x1
    6ddc:	mov    QWORD PTR [rsp+0x18],0x1
    6de5:	xor    r15d,r15d
    6de8:	mov    QWORD PTR [rsp+0x48],rax
    6ded:	mov    DWORD PTR [rsp+0x8],0x5
    6df5:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6dfa:	mov    BYTE PTR [rsp+0xe],0x1
    6dff:	mov    BYTE PTR [rsp+0x7c],0x0
    6e04:	xor    r12d,r12d
    6e07:	mov    QWORD PTR [rsp+0x50],0x0
    6e10:	mov    BYTE PTR [rsp+0xf],0x0
    6e15:	xor    r15d,r15d
    6e18:	mov    BYTE PTR [rsp+0xd],0x1
    6e1d:	mov    QWORD PTR [rsp+0x18],0x0
    6e26:	mov    QWORD PTR [rsp+0x48],0x0
    6e2f:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6e34:	cmp    DWORD PTR [rsp+0x8],0xa
    6e39:	je     6e91 <__cxa_finalize@plt+0x4f21>
    6e3b:	lea    rsi,[rip+0x6233]        # d075 <_IO_stdin_used@@Base+0x1b95>
    6e42:	xor    edi,edi
    6e44:	mov    edx,0x5
    6e49:	call   1c60 <dcgettext@plt>
    6e4e:	mov    rcx,rax
    6e51:	mov    QWORD PTR [rsp+0x68],rax
    6e56:	lea    rax,[rip+0x6218]        # d075 <_IO_stdin_used@@Base+0x1b95>
    6e5d:	cmp    rcx,rax
    6e60:	je     71fe <__cxa_finalize@plt+0x528e>
    6e66:	lea    rsi,[rip+0x6a8c]        # d8f9 <version_etc_copyright@@Base+0x79>
    6e6d:	xor    edi,edi
    6e6f:	mov    edx,0x5
    6e74:	call   1c60 <dcgettext@plt>
    6e79:	mov    rcx,rax
    6e7c:	mov    QWORD PTR [rsp+0x60],rax
    6e81:	lea    rax,[rip+0x6a71]        # d8f9 <version_etc_copyright@@Base+0x79>
    6e88:	cmp    rcx,rax
    6e8b:	je     7214 <__cxa_finalize@plt+0x52a4>
    6e91:	xor    r15d,r15d
    6e94:	test   ebx,ebx
    6e96:	je     705d <__cxa_finalize@plt+0x50ed>
    6e9c:	test   ebx,ebx
    6e9e:	mov    rbx,QWORD PTR [rsp+0x60]
    6ea3:	setne  BYTE PTR [rsp+0xf]
    6ea8:	xor    r12d,r12d
    6eab:	mov    rdi,rbx
    6eae:	call   1c80 <strlen@plt>
    6eb3:	mov    QWORD PTR [rsp+0x48],rbx
    6eb8:	mov    QWORD PTR [rsp+0x18],rax
    6ebd:	mov    BYTE PTR [rsp+0xe],0x1
    6ec2:	mov    BYTE PTR [rsp+0x7c],0x0
    6ec7:	mov    QWORD PTR [rsp+0x50],0x0
    6ed0:	mov    BYTE PTR [rsp+0xd],0x1
    6ed5:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6eda:	mov    BYTE PTR [rsp+0xe],0x1
    6edf:	mov    BYTE PTR [rsp+0x7c],0x0
    6ee4:	xor    r12d,r12d
    6ee7:	mov    QWORD PTR [rsp+0x50],0x0
    6ef0:	mov    BYTE PTR [rsp+0xf],0x0
    6ef5:	xor    r15d,r15d
    6ef8:	mov    BYTE PTR [rsp+0xd],0x0
    6efd:	mov    QWORD PTR [rsp+0x18],0x0
    6f06:	mov    QWORD PTR [rsp+0x48],0x0
    6f0f:	jmp    6173 <__cxa_finalize@plt+0x4203>
    6f14:	mov    BYTE PTR [rsp+0xe],0x1
    6f19:	mov    BYTE PTR [rsp+0x7c],0x0
    6f1e:	xor    r12d,r12d
    6f21:	mov    QWORD PTR [rsp+0x50],0x0
    6f2a:	mov    BYTE PTR [rsp+0xf],0x1
    6f2f:	mov    BYTE PTR [rsp+0xd],0x1
    6f34:	jmp    6153 <__cxa_finalize@plt+0x41e3>
    6f39:	cmp    r13,r15
    6f3c:	jbe    6f43 <__cxa_finalize@plt+0x4fd3>
    6f3e:	mov    BYTE PTR [r14+r15*1],0x30
    6f43:	lea    rax,[rcx+0x2]
    6f47:	cmp    r13,rax
    6f4a:	jbe    6f52 <__cxa_finalize@plt+0x4fe2>
    6f4c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    6f52:	mov    eax,r12d
    6f55:	lea    r15,[rcx+0x3]
    6f59:	xor    r12d,r12d
    6f5c:	mov    ebx,0x30
    6f61:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    6f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6f70:	movzx  ebx,BYTE PTR [rsp+0xf]
    6f75:	mov    rbp,r11
    6f78:	mov    BYTE PTR [rsp+0xd],bl
    6f7c:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    6f81:	movzx  edx,BYTE PTR [rsp+0xd]
    6f86:	xor    r12d,r12d
    6f89:	jmp    6a90 <__cxa_finalize@plt+0x4b20>
    6f8e:	xor    r10d,r10d
    6f91:	jmp    6b4d <__cxa_finalize@plt+0x4bdd>
    6f96:	mov    QWORD PTR [rsp+0x50],0x0
    6f9f:	mov    BYTE PTR [rsp+0xe],0x1
    6fa4:	xor    r12d,r12d
    6fa7:	mov    BYTE PTR [rsp+0x7c],0x0
    6fac:	jmp    6d8b <__cxa_finalize@plt+0x4e1b>
    6fb1:	mov    r11,QWORD PTR [rsp+0x30]
    6fb6:	mov    rsi,r14
    6fb9:	mov    rcx,r13
    6fbc:	mov    rax,rbx
    6fbf:	mov    rdi,rbx
    6fc2:	movzx  r8d,BYTE PTR [rsp+0x7d]
    6fc8:	movzx  ebx,BYTE PTR [rsp+0x7e]
    6fcd:	mov    r9,QWORD PTR [rsp+0x88]
    6fd5:	cmp    rsi,r11
    6fd8:	movzx  r10d,BYTE PTR [rsp+0x7f]
    6fde:	mov    r15,QWORD PTR [rsp+0x80]
    6fe6:	mov    r14,QWORD PTR [rsp+0x40]
    6feb:	mov    r13,QWORD PTR [rsp+0x70]
    6ff0:	jae    7018 <__cxa_finalize@plt+0x50a8>
    6ff2:	cmp    BYTE PTR [rcx],0x0
    6ff5:	jne    7007 <__cxa_finalize@plt+0x5097>
    6ff7:	jmp    7018 <__cxa_finalize@plt+0x50a8>
    6ff9:	nop    DWORD PTR [rax+0x0]
    7000:	cmp    BYTE PTR [r9+rax*1],0x0
    7005:	je     7015 <__cxa_finalize@plt+0x50a5>
    7007:	add    rax,0x1
    700b:	lea    rdx,[rbp+rax*1+0x0]
    7010:	cmp    r11,rdx
    7013:	ja     7000 <__cxa_finalize@plt+0x5090>
    7015:	mov    rdi,rax
    7018:	movzx  edx,BYTE PTR [rsp+0xd]
    701d:	xor    r12d,r12d
    7020:	jmp    6a86 <__cxa_finalize@plt+0x4b16>
    7025:	mov    rdi,rbx
    7028:	movzx  r8d,BYTE PTR [rsp+0x7d]
    702e:	movzx  ebx,BYTE PTR [rsp+0x7e]
    7033:	movzx  r10d,BYTE PTR [rsp+0x7f]
    7039:	mov    r15,QWORD PTR [rsp+0x80]
    7041:	xor    r12d,r12d
    7044:	mov    r14,QWORD PTR [rsp+0x40]
    7049:	mov    r13,QWORD PTR [rsp+0x70]
    704e:	mov    r11,QWORD PTR [rsp+0x30]
    7053:	movzx  edx,BYTE PTR [rsp+0xd]
    7058:	jmp    6a86 <__cxa_finalize@plt+0x4b16>
    705d:	mov    rdx,QWORD PTR [rsp+0x68]
    7062:	movzx  eax,BYTE PTR [rdx]
    7065:	test   al,al
    7067:	je     6e9c <__cxa_finalize@plt+0x4f2c>
    706d:	nop    DWORD PTR [rax]
    7070:	cmp    r13,r15
    7073:	jbe    7079 <__cxa_finalize@plt+0x5109>
    7075:	mov    BYTE PTR [r14+r15*1],al
    7079:	add    r15,0x1
    707d:	movzx  eax,BYTE PTR [rdx+r15*1]
    7082:	test   al,al
    7084:	jne    7070 <__cxa_finalize@plt+0x5100>
    7086:	jmp    6e9c <__cxa_finalize@plt+0x4f2c>
    708b:	mov    eax,edx
    708d:	jmp    65e7 <__cxa_finalize@plt+0x4677>
    7092:	movzx  ebx,BYTE PTR [rax+rcx*1]
    7096:	cmp    bl,0x3e
    7099:	ja     6910 <__cxa_finalize@plt+0x49a0>
    709f:	movabs rax,0x7000a38200000000
    70a9:	bt     rax,rbx
    70ad:	jae    6910 <__cxa_finalize@plt+0x49a0>
    70b3:	cmp    BYTE PTR [rsp+0xf],0x0
    70b8:	jne    72a2 <__cxa_finalize@plt+0x5332>
    70be:	cmp    r13,r15
    70c1:	jbe    70c8 <__cxa_finalize@plt+0x5158>
    70c3:	mov    BYTE PTR [r14+r15*1],0x3f
    70c8:	lea    rax,[r15+0x1]
    70cc:	cmp    r13,rax
    70cf:	jbe    70d7 <__cxa_finalize@plt+0x5167>
    70d1:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    70d7:	lea    rax,[r15+0x2]
    70db:	cmp    r13,rax
    70de:	jbe    70e6 <__cxa_finalize@plt+0x5176>
    70e0:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    70e6:	lea    rax,[r15+0x3]
    70ea:	cmp    r13,rax
    70ed:	jbe    70f5 <__cxa_finalize@plt+0x5185>
    70ef:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    70f5:	add    r15,0x4
    70f9:	xor    edx,edx
    70fb:	xor    r12d,r12d
    70fe:	xor    eax,eax
    7100:	mov    rbp,rcx
    7103:	jmp    62c8 <__cxa_finalize@plt+0x4358>
    7108:	test   ebx,ebx
    710a:	je     7298 <__cxa_finalize@plt+0x5328>
    7110:	lea    rax,[rip+0x67e2]        # d8f9 <version_etc_copyright@@Base+0x79>
    7117:	mov    BYTE PTR [rsp+0xe],0x1
    711c:	mov    BYTE PTR [rsp+0x7c],0x0
    7121:	xor    r12d,r12d
    7124:	mov    QWORD PTR [rsp+0x50],0x0
    712d:	mov    BYTE PTR [rsp+0xf],0x1
    7132:	mov    BYTE PTR [rsp+0xd],0x0
    7137:	mov    QWORD PTR [rsp+0x18],0x1
    7140:	xor    r15d,r15d
    7143:	mov    QWORD PTR [rsp+0x48],rax
    7148:	jmp    6173 <__cxa_finalize@plt+0x4203>
    714d:	nop    DWORD PTR [rax]
    7150:	mov    rbp,r11
    7153:	movzx  eax,BYTE PTR [rsp+0xf]
    7158:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    715d:	lea    rax,[rip+0x5f0f]        # d073 <_IO_stdin_used@@Base+0x1b93>
    7164:	mov    BYTE PTR [rsp+0xe],0x1
    7169:	mov    BYTE PTR [rsp+0x7c],0x0
    716e:	xor    r12d,r12d
    7171:	mov    QWORD PTR [rsp+0x50],0x0
    717a:	mov    BYTE PTR [rsp+0xf],0x1
    717f:	mov    BYTE PTR [rsp+0xd],0x1
    7184:	mov    QWORD PTR [rsp+0x18],0x1
    718d:	xor    r15d,r15d
    7190:	mov    QWORD PTR [rsp+0x48],rax
    7195:	jmp    6173 <__cxa_finalize@plt+0x4203>
    719a:	mov    eax,edx
    719c:	mov    rbx,QWORD PTR [rsp+0x48]
    71a1:	test   rbx,rbx
    71a4:	je     71d2 <__cxa_finalize@plt+0x5262>
    71a6:	test   al,al
    71a8:	je     71d2 <__cxa_finalize@plt+0x5262>
    71aa:	movzx  ecx,BYTE PTR [rbx]
    71ad:	mov    rax,rbx
    71b0:	test   cl,cl
    71b2:	je     71d2 <__cxa_finalize@plt+0x5262>
    71b4:	mov    rdx,r15
    71b7:	sub    rax,r15
    71ba:	cmp    r13,rdx
    71bd:	jbe    71c3 <__cxa_finalize@plt+0x5253>
    71bf:	mov    BYTE PTR [r14+rdx*1],cl
    71c3:	add    rdx,0x1
    71c7:	movzx  ecx,BYTE PTR [rax+rdx*1]
    71cb:	test   cl,cl
    71cd:	jne    71ba <__cxa_finalize@plt+0x524a>
    71cf:	mov    r15,rdx
    71d2:	cmp    r13,r15
    71d5:	jbe    6c79 <__cxa_finalize@plt+0x4d09>
    71db:	mov    BYTE PTR [r14+r15*1],0x0
    71e0:	jmp    6c79 <__cxa_finalize@plt+0x4d09>
    71e5:	cmp    DWORD PTR [rsp+0x8],0x2
    71ea:	movzx  ebx,BYTE PTR [rsp+0xf]
    71ef:	mov    rbp,r11
    71f2:	sete   al
    71f5:	mov    BYTE PTR [rsp+0xd],bl
    71f9:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    71fe:	mov    esi,DWORD PTR [rsp+0x8]
    7202:	mov    rdi,rcx
    7205:	call   5fb0 <__cxa_finalize@plt+0x4040>
    720a:	mov    QWORD PTR [rsp+0x68],rax
    720f:	jmp    6e66 <__cxa_finalize@plt+0x4ef6>
    7214:	mov    esi,DWORD PTR [rsp+0x8]
    7218:	mov    rdi,rcx
    721b:	call   5fb0 <__cxa_finalize@plt+0x4040>
    7220:	mov    QWORD PTR [rsp+0x60],rax
    7225:	jmp    6e91 <__cxa_finalize@plt+0x4f21>
    722a:	movzx  ebx,BYTE PTR [rsp+0xf]
    722f:	mov    rbp,r11
    7232:	mov    eax,edx
    7234:	mov    BYTE PTR [rsp+0xd],bl
    7238:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    723d:	sub    rsp,0x8
    7241:	mov    r8d,0x5
    7247:	mov    rcx,r11
    724a:	push   QWORD PTR [rsp+0x68]
    724e:	push   QWORD PTR [rsp+0x78]
    7252:	mov    rdi,r14
    7255:	push   QWORD PTR [rsp+0x38]
    7259:	mov    r9d,DWORD PTR [rsp+0x98]
    7261:	mov    rdx,QWORD PTR [rsp+0x30]
    7266:	mov    rsi,QWORD PTR [rsp+0x70]
    726b:	call   60a0 <__cxa_finalize@plt+0x4130>
    7270:	add    rsp,0x20
    7274:	mov    r15,rax
    7277:	jmp    6c79 <__cxa_finalize@plt+0x4d09>
    727c:	movzx  eax,BYTE PTR [rsp+0x7c]
    7281:	jmp    719c <__cxa_finalize@plt+0x522c>
    7286:	mov    DWORD PTR [rsp+0x8],0x2
    728e:	jmp    6c29 <__cxa_finalize@plt+0x4cb9>
    7293:	call   1c90 <__stack_chk_fail@plt>
    7298:	mov    BYTE PTR [rsp+0xd],0x0
    729d:	jmp    6d11 <__cxa_finalize@plt+0x4da1>
    72a2:	mov    rbp,r11
    72a5:	jmp    6c40 <__cxa_finalize@plt+0x4cd0>
    72aa:	mov    BYTE PTR [rsp+0xe],0x1
    72af:	xor    eax,eax
    72b1:	xor    r12d,r12d
    72b4:	mov    QWORD PTR [rsp+0x50],0x0
    72bd:	jmp    6864 <__cxa_finalize@plt+0x48f4>
    72c2:	mov    rdx,r13
    72c5:	mov    r13,QWORD PTR [rsp+0x50]
    72ca:	jmp    68c2 <__cxa_finalize@plt+0x4952>
    72cf:	call   1b90 <abort@plt>
    72d4:	xchg   ax,ax
    72d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    72e0:	push   r15
    72e2:	push   r14
    72e4:	movsxd r15,edi
    72e7:	push   r13
    72e9:	push   r12
    72eb:	mov    r14,rdx
    72ee:	push   rbp
    72ef:	push   rbx
    72f0:	mov    rbp,rcx
    72f3:	sub    rsp,0x28
    72f7:	mov    QWORD PTR [rsp+0x8],rsi
    72fc:	call   1ba0 <__errno_location@plt>
    7301:	mov    r13,rax
    7304:	mov    eax,DWORD PTR [rax]
    7306:	test   r15d,r15d
    7309:	mov    rbx,QWORD PTR [rip+0x208d70]        # 210080 <quote_quoting_options@@Base+0x40>
    7310:	mov    DWORD PTR [rsp+0x18],eax
    7314:	js     7481 <__cxa_finalize@plt+0x5511>
    731a:	cmp    DWORD PTR [rip+0x208d57],r15d        # 210078 <quote_quoting_options@@Base+0x38>
    7321:	jg     7385 <__cxa_finalize@plt+0x5415>
    7323:	cmp    r15d,0x7ffffffe
    732a:	ja     7486 <__cxa_finalize@plt+0x5516>
    7330:	lea    r12d,[r15+0x1]
    7334:	lea    rax,[rip+0x208d55]        # 210090 <quote_quoting_options@@Base+0x50>
    733b:	movsxd rsi,r12d
    733e:	shl    rsi,0x4
    7342:	cmp    rbx,rax
    7345:	je     7460 <__cxa_finalize@plt+0x54f0>
    734b:	mov    rdi,rbx
    734e:	call   82b0 <__cxa_finalize@plt+0x6340>
    7353:	mov    rbx,rax
    7356:	mov    QWORD PTR [rip+0x208d23],rax        # 210080 <quote_quoting_options@@Base+0x40>
    735d:	movsxd rdi,DWORD PTR [rip+0x208d14]        # 210078 <quote_quoting_options@@Base+0x38>
    7364:	mov    edx,r12d
    7367:	xor    esi,esi
    7369:	sub    edx,edi
    736b:	shl    rdi,0x4
    736f:	movsxd rdx,edx
    7372:	add    rdi,rbx
    7375:	shl    rdx,0x4
    7379:	call   1d30 <memset@plt>
    737e:	mov    DWORD PTR [rip+0x208cf3],r12d        # 210078 <quote_quoting_options@@Base+0x38>
    7385:	mov    eax,DWORD PTR [rbp+0x4]
    7388:	shl    r15,0x4
    738c:	sub    rsp,0x8
    7390:	add    rbx,r15
    7393:	lea    r15,[rbp+0x8]
    7397:	mov    r8d,DWORD PTR [rbp+0x0]
    739b:	mov    r11,QWORD PTR [rbx]
    739e:	mov    r12,QWORD PTR [rbx+0x8]
    73a2:	mov    rcx,r14
    73a5:	or     eax,0x1
    73a8:	mov    DWORD PTR [rsp+0x24],eax
    73ac:	push   QWORD PTR [rbp+0x30]
    73af:	mov    r9d,eax
    73b2:	push   QWORD PTR [rbp+0x28]
    73b5:	push   r15
    73b7:	mov    rsi,r11
    73ba:	mov    rdx,QWORD PTR [rsp+0x28]
    73bf:	mov    rdi,r12
    73c2:	mov    QWORD PTR [rsp+0x30],r11
    73c7:	call   60a0 <__cxa_finalize@plt+0x4130>
    73cc:	add    rsp,0x20
    73d0:	mov    r11,QWORD PTR [rsp+0x10]
    73d5:	cmp    r11,rax
    73d8:	ja     7441 <__cxa_finalize@plt+0x54d1>
    73da:	lea    rsi,[rax+0x1]
    73de:	lea    rax,[rip+0x208e5b]        # 210240 <program_name@@Base+0x8>
    73e5:	cmp    r12,rax
    73e8:	mov    QWORD PTR [rbx],rsi
    73eb:	je     73ff <__cxa_finalize@plt+0x548f>
    73ed:	mov    rdi,r12
    73f0:	mov    QWORD PTR [rsp+0x10],rsi
    73f5:	call   1b80 <free@plt>
    73fa:	mov    rsi,QWORD PTR [rsp+0x10]
    73ff:	mov    rdi,rsi
    7402:	mov    QWORD PTR [rsp+0x10],rsi
    7407:	call   8250 <__cxa_finalize@plt+0x62e0>
    740c:	sub    rsp,0x8
    7410:	mov    QWORD PTR [rbx+0x8],rax
    7414:	mov    r8d,DWORD PTR [rbp+0x0]
    7418:	push   QWORD PTR [rbp+0x30]
    741b:	push   QWORD PTR [rbp+0x28]
    741e:	mov    rcx,r14
    7421:	push   r15
    7423:	mov    r9d,DWORD PTR [rsp+0x3c]
    7428:	mov    rdi,rax
    742b:	mov    rdx,QWORD PTR [rsp+0x28]
    7430:	mov    rsi,QWORD PTR [rsp+0x30]
    7435:	mov    r12,rax
    7438:	call   60a0 <__cxa_finalize@plt+0x4130>
    743d:	add    rsp,0x20
    7441:	mov    eax,DWORD PTR [rsp+0x18]
    7445:	mov    DWORD PTR [r13+0x0],eax
    7449:	add    rsp,0x28
    744d:	mov    rax,r12
    7450:	pop    rbx
    7451:	pop    rbp
    7452:	pop    r12
    7454:	pop    r13
    7456:	pop    r14
    7458:	pop    r15
    745a:	ret    
    745b:	nop    DWORD PTR [rax+rax*1+0x0]
    7460:	xor    edi,edi
    7462:	call   82b0 <__cxa_finalize@plt+0x6340>
    7467:	movdqa xmm0,XMMWORD PTR [rip+0x208c21]        # 210090 <quote_quoting_options@@Base+0x50>
    746f:	mov    rbx,rax
    7472:	mov    QWORD PTR [rip+0x208c07],rax        # 210080 <quote_quoting_options@@Base+0x40>
    7479:	movups XMMWORD PTR [rax],xmm0
    747c:	jmp    735d <__cxa_finalize@plt+0x53ed>
    7481:	call   1b90 <abort@plt>
    7486:	call   84a0 <__cxa_finalize@plt+0x6530>
    748b:	nop    DWORD PTR [rax+rax*1+0x0]
    7490:	push   r12
    7492:	push   rbp
    7493:	push   rbx
    7494:	mov    rbx,rdi
    7497:	call   1ba0 <__errno_location@plt>
    749c:	mov    r12d,DWORD PTR [rax]
    749f:	mov    rbp,rax
    74a2:	lea    rax,[rip+0x208e97]        # 210340 <program_name@@Base+0x108>
    74a9:	test   rbx,rbx
    74ac:	mov    esi,0x38
    74b1:	cmove  rbx,rax
    74b5:	mov    rdi,rbx
    74b8:	call   8450 <__cxa_finalize@plt+0x64e0>
    74bd:	mov    DWORD PTR [rbp+0x0],r12d
    74c1:	pop    rbx
    74c2:	pop    rbp
    74c3:	pop    r12
    74c5:	ret    
    74c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74d0:	lea    rax,[rip+0x208e69]        # 210340 <program_name@@Base+0x108>
    74d7:	test   rdi,rdi
    74da:	cmove  rdi,rax
    74de:	mov    eax,DWORD PTR [rdi]
    74e0:	ret    
    74e1:	nop    DWORD PTR [rax+rax*1+0x0]
    74e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74f0:	lea    rax,[rip+0x208e49]        # 210340 <program_name@@Base+0x108>
    74f7:	test   rdi,rdi
    74fa:	cmove  rdi,rax
    74fe:	mov    DWORD PTR [rdi],esi
    7500:	ret    
    7501:	nop    DWORD PTR [rax+rax*1+0x0]
    7506:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7510:	lea    rax,[rip+0x208e29]        # 210340 <program_name@@Base+0x108>
    7517:	test   rdi,rdi
    751a:	mov    ecx,esi
    751c:	cmove  rdi,rax
    7520:	mov    eax,esi
    7522:	and    ecx,0x1f
    7525:	shr    al,0x5
    7528:	movzx  eax,al
    752b:	lea    rdi,[rdi+rax*4+0x8]
    7530:	mov    esi,DWORD PTR [rdi]
    7532:	mov    eax,esi
    7534:	shr    eax,cl
    7536:	xor    edx,eax
    7538:	and    eax,0x1
    753b:	and    edx,0x1
    753e:	shl    edx,cl
    7540:	xor    edx,esi
    7542:	mov    DWORD PTR [rdi],edx
    7544:	ret    
    7545:	nop
    7546:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7550:	lea    rax,[rip+0x208de9]        # 210340 <program_name@@Base+0x108>
    7557:	test   rdi,rdi
    755a:	cmove  rdi,rax
    755e:	mov    eax,DWORD PTR [rdi+0x4]
    7561:	mov    DWORD PTR [rdi+0x4],esi
    7564:	ret    
    7565:	nop
    7566:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7570:	lea    rax,[rip+0x208dc9]        # 210340 <program_name@@Base+0x108>
    7577:	test   rdi,rdi
    757a:	cmove  rdi,rax
    757e:	test   rsi,rsi
    7581:	mov    DWORD PTR [rdi],0xa
    7587:	je     7597 <__cxa_finalize@plt+0x5627>
    7589:	test   rdx,rdx
    758c:	je     7597 <__cxa_finalize@plt+0x5627>
    758e:	mov    QWORD PTR [rdi+0x28],rsi
    7592:	mov    QWORD PTR [rdi+0x30],rdx
    7596:	ret    
    7597:	sub    rsp,0x8
    759b:	call   1b90 <abort@plt>
    75a0:	push   r15
    75a2:	push   r14
    75a4:	lea    rax,[rip+0x208d95]        # 210340 <program_name@@Base+0x108>
    75ab:	push   r13
    75ad:	push   r12
    75af:	mov    r13,rdi
    75b2:	push   rbp
    75b3:	push   rbx
    75b4:	mov    rbx,r8
    75b7:	mov    r14,rsi
    75ba:	mov    r15,rdx
    75bd:	sub    rsp,0x18
    75c1:	test   r8,r8
    75c4:	cmove  rbx,rax
    75c8:	mov    QWORD PTR [rsp+0x8],rcx
    75cd:	call   1ba0 <__errno_location@plt>
    75d2:	mov    r12d,DWORD PTR [rax]
    75d5:	mov    rbp,rax
    75d8:	lea    rax,[rbx+0x8]
    75dc:	sub    rsp,0x8
    75e0:	mov    r9d,DWORD PTR [rbx+0x4]
    75e4:	push   QWORD PTR [rbx+0x30]
    75e7:	mov    r8d,DWORD PTR [rbx]
    75ea:	push   QWORD PTR [rbx+0x28]
    75ed:	mov    rdx,r15
    75f0:	push   rax
    75f1:	mov    rcx,QWORD PTR [rsp+0x28]
    75f6:	mov    rsi,r14
    75f9:	mov    rdi,r13
    75fc:	call   60a0 <__cxa_finalize@plt+0x4130>
    7601:	mov    DWORD PTR [rbp+0x0],r12d
    7605:	add    rsp,0x38
    7609:	pop    rbx
    760a:	pop    rbp
    760b:	pop    r12
    760d:	pop    r13
    760f:	pop    r14
    7611:	pop    r15
    7613:	ret    
    7614:	xchg   ax,ax
    7616:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7620:	push   r15
    7622:	push   r14
    7624:	lea    rax,[rip+0x208d15]        # 210340 <program_name@@Base+0x108>
    762b:	push   r13
    762d:	push   r12
    762f:	mov    r12,rdx
    7632:	push   rbp
    7633:	push   rbx
    7634:	mov    rbx,rcx
    7637:	mov    r14,rdi
    763a:	mov    r15,rsi
    763d:	sub    rsp,0x38
    7641:	test   rcx,rcx
    7644:	cmove  rbx,rax
    7648:	xor    ebp,ebp
    764a:	call   1ba0 <__errno_location@plt>
    764f:	test   r12,r12
    7652:	mov    r13,rax
    7655:	mov    eax,DWORD PTR [rax]
    7657:	sete   bpl
    765b:	or     ebp,DWORD PTR [rbx+0x4]
    765e:	lea    r10,[rbx+0x8]
    7662:	sub    rsp,0x8
    7666:	mov    r8d,DWORD PTR [rbx]
    7669:	mov    rcx,r15
    766c:	mov    DWORD PTR [rsp+0x14],eax
    7670:	push   QWORD PTR [rbx+0x30]
    7673:	mov    rdx,r14
    7676:	push   QWORD PTR [rbx+0x28]
    7679:	push   r10
    767b:	xor    esi,esi
    767d:	mov    r9d,ebp
    7680:	xor    edi,edi
    7682:	mov    QWORD PTR [rsp+0x40],r10
    7687:	call   60a0 <__cxa_finalize@plt+0x4130>
    768c:	lea    rsi,[rax+0x1]
    7690:	mov    QWORD PTR [rsp+0x48],rax
    7695:	add    rsp,0x20
    7699:	mov    rdi,rsi
    769c:	mov    QWORD PTR [rsp+0x18],rsi
    76a1:	call   8250 <__cxa_finalize@plt+0x62e0>
    76a6:	mov    QWORD PTR [rsp+0x10],rax
    76ab:	sub    rsp,0x8
    76af:	push   QWORD PTR [rbx+0x30]
    76b2:	push   QWORD PTR [rbx+0x28]
    76b5:	mov    r10,QWORD PTR [rsp+0x38]
    76ba:	mov    r9d,ebp
    76bd:	mov    r8d,DWORD PTR [rbx]
    76c0:	mov    rcx,r15
    76c3:	mov    rdx,r14
    76c6:	mov    rdi,rax
    76c9:	push   r10
    76cb:	mov    rsi,QWORD PTR [rsp+0x38]
    76d0:	call   60a0 <__cxa_finalize@plt+0x4130>
    76d5:	mov    eax,DWORD PTR [rsp+0x2c]
    76d9:	add    rsp,0x20
    76dd:	test   r12,r12
    76e0:	mov    DWORD PTR [r13+0x0],eax
    76e4:	je     76ef <__cxa_finalize@plt+0x577f>
    76e6:	mov    r11,QWORD PTR [rsp+0x28]
    76eb:	mov    QWORD PTR [r12],r11
    76ef:	mov    rax,QWORD PTR [rsp+0x10]
    76f4:	add    rsp,0x38
    76f8:	pop    rbx
    76f9:	pop    rbp
    76fa:	pop    r12
    76fc:	pop    r13
    76fe:	pop    r14
    7700:	pop    r15
    7702:	ret    
    7703:	nop    DWORD PTR [rax]
    7706:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7710:	mov    rcx,rdx
    7713:	xor    edx,edx
    7715:	jmp    7620 <__cxa_finalize@plt+0x56b0>
    771a:	nop    WORD PTR [rax+rax*1+0x0]
    7720:	mov    eax,DWORD PTR [rip+0x208952]        # 210078 <quote_quoting_options@@Base+0x38>
    7726:	push   r12
    7728:	mov    r12,QWORD PTR [rip+0x208951]        # 210080 <quote_quoting_options@@Base+0x40>
    772f:	push   rbp
    7730:	push   rbx
    7731:	cmp    eax,0x1
    7734:	jle    7761 <__cxa_finalize@plt+0x57f1>
    7736:	sub    eax,0x2
    7739:	lea    rbx,[r12+0x18]
    773e:	shl    rax,0x4
    7742:	lea    rbp,[r12+rax*1+0x28]
    7747:	nop    WORD PTR [rax+rax*1+0x0]
    7750:	mov    rdi,QWORD PTR [rbx]
    7753:	add    rbx,0x10
    7757:	call   1b80 <free@plt>
    775c:	cmp    rbx,rbp
    775f:	jne    7750 <__cxa_finalize@plt+0x57e0>
    7761:	mov    rdi,QWORD PTR [r12+0x8]
    7766:	lea    rbx,[rip+0x208ad3]        # 210240 <program_name@@Base+0x8>
    776d:	cmp    rdi,rbx
    7770:	je     7789 <__cxa_finalize@plt+0x5819>
    7772:	call   1b80 <free@plt>
    7777:	mov    QWORD PTR [rip+0x20890e],0x100        # 210090 <quote_quoting_options@@Base+0x50>
    7782:	mov    QWORD PTR [rip+0x20890f],rbx        # 210098 <quote_quoting_options@@Base+0x58>
    7789:	lea    rbx,[rip+0x208900]        # 210090 <quote_quoting_options@@Base+0x50>
    7790:	cmp    r12,rbx
    7793:	je     77a4 <__cxa_finalize@plt+0x5834>
    7795:	mov    rdi,r12
    7798:	call   1b80 <free@plt>
    779d:	mov    QWORD PTR [rip+0x2088dc],rbx        # 210080 <quote_quoting_options@@Base+0x40>
    77a4:	pop    rbx
    77a5:	mov    DWORD PTR [rip+0x2088c9],0x1        # 210078 <quote_quoting_options@@Base+0x38>
    77af:	pop    rbp
    77b0:	pop    r12
    77b2:	ret    
    77b3:	nop    DWORD PTR [rax]
    77b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    77c0:	lea    rcx,[rip+0x208b79]        # 210340 <program_name@@Base+0x108>
    77c7:	mov    rdx,0xffffffffffffffff
    77ce:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    77d3:	nop    DWORD PTR [rax]
    77d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    77e0:	lea    rcx,[rip+0x208b59]        # 210340 <program_name@@Base+0x108>
    77e7:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    77ec:	nop    DWORD PTR [rax+0x0]
    77f0:	lea    rcx,[rip+0x208b49]        # 210340 <program_name@@Base+0x108>
    77f7:	mov    rsi,rdi
    77fa:	mov    rdx,0xffffffffffffffff
    7801:	xor    edi,edi
    7803:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7808:	nop    DWORD PTR [rax+rax*1+0x0]
    7810:	lea    rcx,[rip+0x208b29]        # 210340 <program_name@@Base+0x108>
    7817:	mov    rdx,rsi
    781a:	mov    rsi,rdi
    781d:	xor    edi,edi
    781f:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7824:	xchg   ax,ax
    7826:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7830:	sub    rsp,0x48
    7834:	mov    rax,rdx
    7837:	mov    rdx,QWORD PTR fs:0x28
    7840:	mov    QWORD PTR [rsp+0x38],rdx
    7845:	xor    edx,edx
    7847:	cmp    esi,0xa
    784a:	je     78b4 <__cxa_finalize@plt+0x5944>
    784c:	mov    DWORD PTR [rsp],esi
    784f:	mov    rcx,rsp
    7852:	mov    rdx,0xffffffffffffffff
    7859:	mov    rsi,rax
    785c:	mov    QWORD PTR [rsp+0x4],0x0
    7865:	mov    QWORD PTR [rsp+0xc],0x0
    786e:	mov    QWORD PTR [rsp+0x14],0x0
    7877:	mov    QWORD PTR [rsp+0x1c],0x0
    7880:	mov    QWORD PTR [rsp+0x24],0x0
    7889:	mov    QWORD PTR [rsp+0x2c],0x0
    7892:	mov    DWORD PTR [rsp+0x34],0x0
    789a:	call   72e0 <__cxa_finalize@plt+0x5370>
    789f:	mov    rcx,QWORD PTR [rsp+0x38]
    78a4:	xor    rcx,QWORD PTR fs:0x28
    78ad:	jne    78b9 <__cxa_finalize@plt+0x5949>
    78af:	add    rsp,0x48
    78b3:	ret    
    78b4:	call   1b90 <abort@plt>
    78b9:	call   1c90 <__stack_chk_fail@plt>
    78be:	xchg   ax,ax
    78c0:	sub    rsp,0x48
    78c4:	mov    rax,rdx
    78c7:	mov    rdx,rcx
    78ca:	mov    rcx,QWORD PTR fs:0x28
    78d3:	mov    QWORD PTR [rsp+0x38],rcx
    78d8:	xor    ecx,ecx
    78da:	cmp    esi,0xa
    78dd:	je     7940 <__cxa_finalize@plt+0x59d0>
    78df:	mov    DWORD PTR [rsp],esi
    78e2:	mov    rcx,rsp
    78e5:	mov    rsi,rax
    78e8:	mov    QWORD PTR [rsp+0x4],0x0
    78f1:	mov    QWORD PTR [rsp+0xc],0x0
    78fa:	mov    QWORD PTR [rsp+0x14],0x0
    7903:	mov    QWORD PTR [rsp+0x1c],0x0
    790c:	mov    QWORD PTR [rsp+0x24],0x0
    7915:	mov    QWORD PTR [rsp+0x2c],0x0
    791e:	mov    DWORD PTR [rsp+0x34],0x0
    7926:	call   72e0 <__cxa_finalize@plt+0x5370>
    792b:	mov    rdx,QWORD PTR [rsp+0x38]
    7930:	xor    rdx,QWORD PTR fs:0x28
    7939:	jne    7945 <__cxa_finalize@plt+0x59d5>
    793b:	add    rsp,0x48
    793f:	ret    
    7940:	call   1b90 <abort@plt>
    7945:	call   1c90 <__stack_chk_fail@plt>
    794a:	nop    WORD PTR [rax+rax*1+0x0]
    7950:	mov    rdx,rsi
    7953:	mov    esi,edi
    7955:	xor    edi,edi
    7957:	jmp    7830 <__cxa_finalize@plt+0x58c0>
    795c:	nop    DWORD PTR [rax+0x0]
    7960:	mov    rcx,rdx
    7963:	mov    rdx,rsi
    7966:	mov    esi,edi
    7968:	xor    edi,edi
    796a:	jmp    78c0 <__cxa_finalize@plt+0x5950>
    796f:	nop
    7970:	sub    rsp,0x48
    7974:	mov    ecx,edx
    7976:	mov    rax,QWORD PTR fs:0x28
    797f:	mov    QWORD PTR [rsp+0x38],rax
    7984:	xor    eax,eax
    7986:	mov    rax,QWORD PTR [rip+0x2089e3]        # 210370 <program_name@@Base+0x138>
    798d:	mov    r8,rsp
    7990:	and    ecx,0x1f
    7993:	movdqa xmm0,XMMWORD PTR [rip+0x2089a5]        # 210340 <program_name@@Base+0x108>
    799b:	mov    QWORD PTR [rsp+0x30],rax
    79a0:	mov    eax,edx
    79a2:	movaps XMMWORD PTR [rsp],xmm0
    79a6:	shr    al,0x5
    79a9:	movzx  eax,al
    79ac:	lea    r9,[r8+rax*4+0x8]
    79b1:	movdqa xmm0,XMMWORD PTR [rip+0x208997]        # 210350 <program_name@@Base+0x118>
    79b9:	movaps XMMWORD PTR [rsp+0x10],xmm0
    79be:	movdqa xmm0,XMMWORD PTR [rip+0x20899a]        # 210360 <program_name@@Base+0x128>
    79c6:	movaps XMMWORD PTR [rsp+0x20],xmm0
    79cb:	mov    edx,DWORD PTR [r9]
    79ce:	mov    eax,edx
    79d0:	shr    eax,cl
    79d2:	not    eax
    79d4:	and    eax,0x1
    79d7:	shl    eax,cl
    79d9:	mov    rcx,r8
    79dc:	xor    eax,edx
    79de:	mov    rdx,rsi
    79e1:	mov    rsi,rdi
    79e4:	mov    DWORD PTR [r9],eax
    79e7:	xor    edi,edi
    79e9:	call   72e0 <__cxa_finalize@plt+0x5370>
    79ee:	mov    rsi,QWORD PTR [rsp+0x38]
    79f3:	xor    rsi,QWORD PTR fs:0x28
    79fc:	jne    7a03 <__cxa_finalize@plt+0x5a93>
    79fe:	add    rsp,0x48
    7a02:	ret    
    7a03:	call   1c90 <__stack_chk_fail@plt>
    7a08:	nop    DWORD PTR [rax+rax*1+0x0]
    7a10:	movsx  edx,sil
    7a14:	mov    rsi,0xffffffffffffffff
    7a1b:	jmp    7970 <__cxa_finalize@plt+0x5a00>
    7a20:	mov    edx,0x3a
    7a25:	mov    rsi,0xffffffffffffffff
    7a2c:	jmp    7970 <__cxa_finalize@plt+0x5a00>
    7a31:	nop    DWORD PTR [rax+rax*1+0x0]
    7a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7a40:	mov    edx,0x3a
    7a45:	jmp    7970 <__cxa_finalize@plt+0x5a00>
    7a4a:	nop    WORD PTR [rax+rax*1+0x0]
    7a50:	sub    rsp,0x48
    7a54:	mov    rax,rdx
    7a57:	mov    rdx,QWORD PTR fs:0x28
    7a60:	mov    QWORD PTR [rsp+0x38],rdx
    7a65:	xor    edx,edx
    7a67:	cmp    esi,0xa
    7a6a:	je     7ad4 <__cxa_finalize@plt+0x5b64>
    7a6c:	mov    DWORD PTR [rsp],esi
    7a6f:	mov    rcx,rsp
    7a72:	mov    rdx,0xffffffffffffffff
    7a79:	mov    rsi,rax
    7a7c:	mov    QWORD PTR [rsp+0x4],0x0
    7a85:	mov    QWORD PTR [rsp+0xc],0x4000000
    7a8e:	mov    QWORD PTR [rsp+0x14],0x0
    7a97:	mov    QWORD PTR [rsp+0x1c],0x0
    7aa0:	mov    QWORD PTR [rsp+0x24],0x0
    7aa9:	mov    QWORD PTR [rsp+0x2c],0x0
    7ab2:	mov    DWORD PTR [rsp+0x34],0x0
    7aba:	call   72e0 <__cxa_finalize@plt+0x5370>
    7abf:	mov    rcx,QWORD PTR [rsp+0x38]
    7ac4:	xor    rcx,QWORD PTR fs:0x28
    7acd:	jne    7ad9 <__cxa_finalize@plt+0x5b69>
    7acf:	add    rsp,0x48
    7ad3:	ret    
    7ad4:	call   1b90 <abort@plt>
    7ad9:	call   1c90 <__stack_chk_fail@plt>
    7ade:	xchg   ax,ax
    7ae0:	sub    rsp,0x48
    7ae4:	mov    r9,rcx
    7ae7:	mov    rcx,QWORD PTR [rip+0x208882]        # 210370 <program_name@@Base+0x138>
    7aee:	movdqa xmm0,XMMWORD PTR [rip+0x20884a]        # 210340 <program_name@@Base+0x108>
    7af6:	mov    rax,QWORD PTR fs:0x28
    7aff:	mov    QWORD PTR [rsp+0x38],rax
    7b04:	xor    eax,eax
    7b06:	movaps XMMWORD PTR [rsp],xmm0
    7b0a:	test   rsi,rsi
    7b0d:	mov    QWORD PTR [rsp+0x30],rcx
    7b12:	mov    DWORD PTR [rsp],0xa
    7b19:	movdqa xmm0,XMMWORD PTR [rip+0x20882f]        # 210350 <program_name@@Base+0x118>
    7b21:	movaps XMMWORD PTR [rsp+0x10],xmm0
    7b26:	movdqa xmm0,XMMWORD PTR [rip+0x208832]        # 210360 <program_name@@Base+0x128>
    7b2e:	movaps XMMWORD PTR [rsp+0x20],xmm0
    7b33:	je     7b67 <__cxa_finalize@plt+0x5bf7>
    7b35:	test   rdx,rdx
    7b38:	je     7b67 <__cxa_finalize@plt+0x5bf7>
    7b3a:	mov    QWORD PTR [rsp+0x28],rsi
    7b3f:	mov    QWORD PTR [rsp+0x30],rdx
    7b44:	mov    rcx,rsp
    7b47:	mov    rdx,r8
    7b4a:	mov    rsi,r9
    7b4d:	call   72e0 <__cxa_finalize@plt+0x5370>
    7b52:	mov    rdi,QWORD PTR [rsp+0x38]
    7b57:	xor    rdi,QWORD PTR fs:0x28
    7b60:	jne    7b6c <__cxa_finalize@plt+0x5bfc>
    7b62:	add    rsp,0x48
    7b66:	ret    
    7b67:	call   1b90 <abort@plt>
    7b6c:	call   1c90 <__stack_chk_fail@plt>
    7b71:	nop    DWORD PTR [rax+rax*1+0x0]
    7b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7b80:	mov    r8,0xffffffffffffffff
    7b87:	jmp    7ae0 <__cxa_finalize@plt+0x5b70>
    7b8c:	nop    DWORD PTR [rax+0x0]
    7b90:	mov    rcx,rdx
    7b93:	mov    r8,0xffffffffffffffff
    7b9a:	mov    rdx,rsi
    7b9d:	mov    rsi,rdi
    7ba0:	xor    edi,edi
    7ba2:	jmp    7ae0 <__cxa_finalize@plt+0x5b70>
    7ba7:	nop    WORD PTR [rax+rax*1+0x0]
    7bb0:	mov    r8,rcx
    7bb3:	mov    rcx,rdx
    7bb6:	mov    rdx,rsi
    7bb9:	mov    rsi,rdi
    7bbc:	xor    edi,edi
    7bbe:	jmp    7ae0 <__cxa_finalize@plt+0x5b70>
    7bc3:	nop    DWORD PTR [rax]
    7bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7bd0:	lea    rcx,[rip+0x208469]        # 210040 <quote_quoting_options@@Base>
    7bd7:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7bdc:	nop    DWORD PTR [rax+0x0]
    7be0:	lea    rcx,[rip+0x208459]        # 210040 <quote_quoting_options@@Base>
    7be7:	mov    rdx,rsi
    7bea:	mov    rsi,rdi
    7bed:	xor    edi,edi
    7bef:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7bf4:	xchg   ax,ax
    7bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7c00:	lea    rcx,[rip+0x208439]        # 210040 <quote_quoting_options@@Base>
    7c07:	mov    rdx,0xffffffffffffffff
    7c0e:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7c13:	nop    DWORD PTR [rax]
    7c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7c20:	lea    rcx,[rip+0x208419]        # 210040 <quote_quoting_options@@Base>
    7c27:	mov    rsi,rdi
    7c2a:	mov    rdx,0xffffffffffffffff
    7c31:	xor    edi,edi
    7c33:	jmp    72e0 <__cxa_finalize@plt+0x5370>
    7c38:	nop    DWORD PTR [rax+rax*1+0x0]
    7c40:	push   r15
    7c42:	push   r14
    7c44:	push   r13
    7c46:	push   r12
    7c48:	mov    r12,r9
    7c4b:	push   rbp
    7c4c:	push   rbx
    7c4d:	mov    rbp,rdi
    7c50:	mov    rbx,r8
    7c53:	sub    rsp,0x28
    7c57:	test   rsi,rsi
    7c5a:	je     7cf0 <__cxa_finalize@plt+0x5d80>
    7c60:	mov    r8,rdx
    7c63:	lea    rdx,[rip+0x58de]        # d548 <quoting_style_vals@@Base+0x28>
    7c6a:	mov    r9,rcx
    7c6d:	xor    eax,eax
    7c6f:	mov    rcx,rsi
    7c72:	mov    esi,0x1
    7c77:	call   1f20 <__fprintf_chk@plt>
    7c7c:	lea    rsi,[rip+0x58d8]        # d55b <quoting_style_vals@@Base+0x3b>
    7c83:	xor    edi,edi
    7c85:	mov    edx,0x5
    7c8a:	call   1c60 <dcgettext@plt>
    7c8f:	lea    rdx,[rip+0x5bea]        # d880 <version_etc_copyright@@Base>
    7c96:	mov    rcx,rax
    7c99:	mov    r8d,0x7e1
    7c9f:	mov    esi,0x1
    7ca4:	mov    rdi,rbp
    7ca7:	xor    eax,eax
    7ca9:	call   1f20 <__fprintf_chk@plt>
    7cae:	lea    rsi,[rip+0x5933]        # d5e8 <quoting_style_vals@@Base+0xc8>
    7cb5:	xor    edi,edi
    7cb7:	mov    edx,0x5
    7cbc:	call   1c60 <dcgettext@plt>
    7cc1:	mov    rsi,rbp
    7cc4:	mov    rdi,rax
    7cc7:	call   1d80 <fputs_unlocked@plt>
    7ccc:	cmp    r12,0x9
    7cd0:	ja     8000 <__cxa_finalize@plt+0x6090>
    7cd6:	lea    rdx,[rip+0x5b63]        # d840 <quoting_style_vals@@Base+0x320>
    7cdd:	movsxd rax,DWORD PTR [rdx+r12*4]
    7ce1:	add    rax,rdx
    7ce4:	jmp    rax
    7ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7cf0:	mov    r8,rcx
    7cf3:	mov    rcx,rdx
    7cf6:	lea    rdx,[rip+0x5857]        # d554 <quoting_style_vals@@Base+0x34>
    7cfd:	mov    esi,0x1
    7d02:	xor    eax,eax
    7d04:	call   1f20 <__fprintf_chk@plt>
    7d09:	jmp    7c7c <__cxa_finalize@plt+0x5d0c>
    7d0e:	xchg   ax,ax
    7d10:	mov    r9,QWORD PTR [rbx+0x38]
    7d14:	mov    rax,QWORD PTR [rbx+0x10]
    7d18:	lea    rsi,[rip+0x5a39]        # d758 <quoting_style_vals@@Base+0x238>
    7d1f:	mov    r8,QWORD PTR [rbx+0x8]
    7d23:	mov    edx,0x5
    7d28:	xor    edi,edi
    7d2a:	mov    r13,QWORD PTR [rbx+0x30]
    7d2e:	mov    r12,QWORD PTR [rbx+0x28]
    7d32:	mov    QWORD PTR [rsp+0x10],r9
    7d37:	mov    r15,QWORD PTR [rbx+0x20]
    7d3b:	mov    r14,QWORD PTR [rbx+0x18]
    7d3f:	mov    QWORD PTR [rsp],rax
    7d43:	mov    QWORD PTR [rsp+0x8],r8
    7d48:	mov    rbx,QWORD PTR [rbx]
    7d4b:	call   1c60 <dcgettext@plt>
    7d50:	sub    rsp,0x8
    7d54:	mov    r9,QWORD PTR [rsp+0x18]
    7d59:	mov    rcx,rbx
    7d5c:	mov    rdx,rax
    7d5f:	mov    rdi,rbp
    7d62:	mov    esi,0x1
    7d67:	xor    eax,eax
    7d69:	push   r9
    7d6b:	push   r13
    7d6d:	push   r12
    7d6f:	push   r15
    7d71:	push   r14
    7d73:	mov    r9,QWORD PTR [rsp+0x30]
    7d78:	mov    r8,QWORD PTR [rsp+0x38]
    7d7d:	call   1f20 <__fprintf_chk@plt>
    7d82:	add    rsp,0x30
    7d86:	add    rsp,0x28
    7d8a:	pop    rbx
    7d8b:	pop    rbp
    7d8c:	pop    r12
    7d8e:	pop    r13
    7d90:	pop    r14
    7d92:	pop    r15
    7d94:	ret    
    7d95:	nop    DWORD PTR [rax]
    7d98:	mov    r10,QWORD PTR [rbx+0x40]
    7d9c:	mov    r9,QWORD PTR [rbx+0x38]
    7da0:	lea    rsi,[rip+0x59e1]        # d788 <quoting_style_vals@@Base+0x268>
    7da7:	mov    rax,QWORD PTR [rbx+0x10]
    7dab:	mov    r8,QWORD PTR [rbx+0x8]
    7daf:	mov    edx,0x5
    7db4:	mov    r13,QWORD PTR [rbx+0x30]
    7db8:	mov    r12,QWORD PTR [rbx+0x28]
    7dbc:	mov    r15,QWORD PTR [rbx+0x20]
    7dc0:	mov    r14,QWORD PTR [rbx+0x18]
    7dc4:	mov    rbx,QWORD PTR [rbx]
    7dc7:	mov    QWORD PTR [rsp+0x18],r10
    7dcc:	mov    QWORD PTR [rsp+0x10],r9
    7dd1:	mov    QWORD PTR [rsp],rax
    7dd5:	mov    QWORD PTR [rsp+0x8],r8
    7dda:	xor    edi,edi
    7ddc:	call   1c60 <dcgettext@plt>
    7de1:	mov    r10,QWORD PTR [rsp+0x18]
    7de6:	push   r10
    7de8:	jmp    7d54 <__cxa_finalize@plt+0x5de4>
    7ded:	nop    DWORD PTR [rax]
    7df0:	mov    rbx,QWORD PTR [rbx]
    7df3:	lea    rsi,[rip+0x5765]        # d55f <quoting_style_vals@@Base+0x3f>
    7dfa:	mov    edx,0x5
    7dff:	xor    edi,edi
    7e01:	call   1c60 <dcgettext@plt>
    7e06:	add    rsp,0x28
    7e0a:	mov    rcx,rbx
    7e0d:	mov    rdi,rbp
    7e10:	pop    rbx
    7e11:	pop    rbp
    7e12:	pop    r12
    7e14:	pop    r13
    7e16:	pop    r14
    7e18:	pop    r15
    7e1a:	mov    rdx,rax
    7e1d:	mov    esi,0x1
    7e22:	xor    eax,eax
    7e24:	jmp    1f20 <__fprintf_chk@plt>
    7e29:	nop    DWORD PTR [rax+0x0]
    7e30:	mov    r12,QWORD PTR [rbx+0x8]
    7e34:	lea    rsi,[rip+0x5734]        # d56f <quoting_style_vals@@Base+0x4f>
    7e3b:	mov    rbx,QWORD PTR [rbx]
    7e3e:	mov    edx,0x5
    7e43:	xor    edi,edi
    7e45:	call   1c60 <dcgettext@plt>
    7e4a:	add    rsp,0x28
    7e4e:	mov    r8,r12
    7e51:	mov    rcx,rbx
    7e54:	mov    rdi,rbp
    7e57:	mov    rdx,rax
    7e5a:	mov    esi,0x1
    7e5f:	pop    rbx
    7e60:	pop    rbp
    7e61:	pop    r12
    7e63:	pop    r13
    7e65:	pop    r14
    7e67:	pop    r15
    7e69:	xor    eax,eax
    7e6b:	jmp    1f20 <__fprintf_chk@plt>
    7e70:	mov    r13,QWORD PTR [rbx+0x10]
    7e74:	mov    r12,QWORD PTR [rbx+0x8]
    7e78:	lea    rsi,[rip+0x5707]        # d586 <quoting_style_vals@@Base+0x66>
    7e7f:	mov    rbx,QWORD PTR [rbx]
    7e82:	mov    edx,0x5
    7e87:	xor    edi,edi
    7e89:	call   1c60 <dcgettext@plt>
    7e8e:	add    rsp,0x28
    7e92:	mov    r9,r13
    7e95:	mov    r8,r12
    7e98:	mov    rcx,rbx
    7e9b:	mov    rdi,rbp
    7e9e:	mov    rdx,rax
    7ea1:	pop    rbx
    7ea2:	pop    rbp
    7ea3:	pop    r12
    7ea5:	pop    r13
    7ea7:	pop    r14
    7ea9:	pop    r15
    7eab:	mov    esi,0x1
    7eb0:	xor    eax,eax
    7eb2:	jmp    1f20 <__fprintf_chk@plt>
    7eb7:	nop    WORD PTR [rax+rax*1+0x0]
    7ec0:	lea    rsi,[rip+0x57f1]        # d6b8 <quoting_style_vals@@Base+0x198>
    7ec7:	mov    edx,0x5
    7ecc:	xor    edi,edi
    7ece:	mov    r14,QWORD PTR [rbx+0x18]
    7ed2:	mov    r13,QWORD PTR [rbx+0x10]
    7ed6:	mov    r12,QWORD PTR [rbx+0x8]
    7eda:	mov    rbx,QWORD PTR [rbx]
    7edd:	call   1c60 <dcgettext@plt>
    7ee2:	sub    rsp,0x8
    7ee6:	push   r14
    7ee8:	mov    rdx,rax
    7eeb:	mov    r9,r13
    7eee:	mov    r8,r12
    7ef1:	mov    rcx,rbx
    7ef4:	mov    rdi,rbp
    7ef7:	mov    esi,0x1
    7efc:	xor    eax,eax
    7efe:	call   1f20 <__fprintf_chk@plt>
    7f03:	pop    rax
    7f04:	pop    rdx
    7f05:	add    rsp,0x28
    7f09:	pop    rbx
    7f0a:	pop    rbp
    7f0b:	pop    r12
    7f0d:	pop    r13
    7f0f:	pop    r14
    7f11:	pop    r15
    7f13:	ret    
    7f14:	nop    DWORD PTR [rax+0x0]
    7f18:	mov    r15,QWORD PTR [rbx+0x20]
    7f1c:	lea    rsi,[rip+0x57b5]        # d6d8 <quoting_style_vals@@Base+0x1b8>
    7f23:	mov    edx,0x5
    7f28:	xor    edi,edi
    7f2a:	mov    r14,QWORD PTR [rbx+0x18]
    7f2e:	mov    r13,QWORD PTR [rbx+0x10]
    7f32:	mov    r12,QWORD PTR [rbx+0x8]
    7f36:	mov    rbx,QWORD PTR [rbx]
    7f39:	call   1c60 <dcgettext@plt>
    7f3e:	push   r15
    7f40:	jmp    7ee6 <__cxa_finalize@plt+0x5f76>
    7f42:	nop    WORD PTR [rax+rax*1+0x0]
    7f48:	mov    r8,QWORD PTR [rbx+0x8]
    7f4c:	mov    r12,QWORD PTR [rbx+0x28]
    7f50:	lea    rsi,[rip+0x57a9]        # d700 <quoting_style_vals@@Base+0x1e0>
    7f57:	mov    r15,QWORD PTR [rbx+0x20]
    7f5b:	mov    r14,QWORD PTR [rbx+0x18]
    7f5f:	mov    edx,0x5
    7f64:	mov    r13,QWORD PTR [rbx+0x10]
    7f68:	xor    edi,edi
    7f6a:	mov    rbx,QWORD PTR [rbx]
    7f6d:	mov    QWORD PTR [rsp],r8
    7f71:	call   1c60 <dcgettext@plt>
    7f76:	sub    rsp,0x8
    7f7a:	mov    r9,r13
    7f7d:	push   r12
    7f7f:	push   r15
    7f81:	push   r14
    7f83:	mov    r8,QWORD PTR [rsp+0x20]
    7f88:	mov    rcx,rbx
    7f8b:	mov    rdx,rax
    7f8e:	mov    rdi,rbp
    7f91:	mov    esi,0x1
    7f96:	xor    eax,eax
    7f98:	call   1f20 <__fprintf_chk@plt>
    7f9d:	add    rsp,0x20
    7fa1:	add    rsp,0x28
    7fa5:	pop    rbx
    7fa6:	pop    rbp
    7fa7:	pop    r12
    7fa9:	pop    r13
    7fab:	pop    r14
    7fad:	pop    r15
    7faf:	ret    
    7fb0:	mov    r9,QWORD PTR [rbx+0x10]
    7fb4:	mov    r13,QWORD PTR [rbx+0x30]
    7fb8:	lea    rsi,[rip+0x5769]        # d728 <quoting_style_vals@@Base+0x208>
    7fbf:	mov    r12,QWORD PTR [rbx+0x28]
    7fc3:	mov    r15,QWORD PTR [rbx+0x20]
    7fc7:	mov    edx,0x5
    7fcc:	mov    r14,QWORD PTR [rbx+0x18]
    7fd0:	mov    r8,QWORD PTR [rbx+0x8]
    7fd4:	xor    edi,edi
    7fd6:	mov    QWORD PTR [rsp+0x8],r9
    7fdb:	mov    rbx,QWORD PTR [rbx]
    7fde:	mov    QWORD PTR [rsp],r8
    7fe2:	call   1c60 <dcgettext@plt>
    7fe7:	push   r13
    7fe9:	push   r12
    7feb:	push   r15
    7fed:	push   r14
    7fef:	mov    r9,QWORD PTR [rsp+0x28]
    7ff4:	jmp    7f83 <__cxa_finalize@plt+0x6013>
    7ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8000:	mov    r10,QWORD PTR [rbx+0x40]
    8004:	mov    r9,QWORD PTR [rbx+0x38]
    8008:	mov    edx,0x5
    800d:	mov    rax,QWORD PTR [rbx+0x10]
    8011:	mov    r8,QWORD PTR [rbx+0x8]
    8015:	lea    rsi,[rip+0x57a4]        # d7c0 <quoting_style_vals@@Base+0x2a0>
    801c:	mov    r13,QWORD PTR [rbx+0x30]
    8020:	mov    r12,QWORD PTR [rbx+0x28]
    8024:	mov    r15,QWORD PTR [rbx+0x20]
    8028:	mov    r14,QWORD PTR [rbx+0x18]
    802c:	mov    QWORD PTR [rsp+0x18],r10
    8031:	mov    QWORD PTR [rsp+0x10],r9
    8036:	mov    QWORD PTR [rsp],rax
    803a:	mov    QWORD PTR [rsp+0x8],r8
    803f:	mov    rbx,QWORD PTR [rbx]
    8042:	jmp    7dda <__cxa_finalize@plt+0x5e6a>
    8047:	call   1b90 <abort@plt>
    804c:	nop    DWORD PTR [rax+0x0]
    8050:	xor    r9d,r9d
    8053:	cmp    QWORD PTR [r8],0x0
    8057:	je     806b <__cxa_finalize@plt+0x60fb>
    8059:	nop    DWORD PTR [rax+0x0]
    8060:	add    r9,0x1
    8064:	cmp    QWORD PTR [r8+r9*8],0x0
    8069:	jne    8060 <__cxa_finalize@plt+0x60f0>
    806b:	jmp    7c40 <__cxa_finalize@plt+0x5cd0>
    8070:	sub    rsp,0x68
    8074:	mov    r10,r8
    8077:	xor    r9d,r9d
    807a:	mov    rax,QWORD PTR fs:0x28
    8083:	mov    QWORD PTR [rsp+0x58],rax
    8088:	xor    eax,eax
    808a:	mov    r8,rsp
    808d:	nop    DWORD PTR [rax]
    8090:	mov    eax,DWORD PTR [r10]
    8093:	cmp    eax,0x2f
    8096:	ja     80da <__cxa_finalize@plt+0x616a>
    8098:	mov    r11d,eax
    809b:	add    r11,QWORD PTR [r10+0x10]
    809f:	add    eax,0x8
    80a2:	mov    DWORD PTR [r10],eax
    80a5:	mov    rax,QWORD PTR [r11]
    80a8:	test   rax,rax
    80ab:	mov    QWORD PTR [r8+r9*8],rax
    80af:	je     80bb <__cxa_finalize@plt+0x614b>
    80b1:	add    r9,0x1
    80b5:	cmp    r9,0xa
    80b9:	jne    8090 <__cxa_finalize@plt+0x6120>
    80bb:	call   7c40 <__cxa_finalize@plt+0x5cd0>
    80c0:	mov    rax,QWORD PTR [rsp+0x58]
    80c5:	xor    rax,QWORD PTR fs:0x28
    80ce:	jne    80d5 <__cxa_finalize@plt+0x6165>
    80d0:	add    rsp,0x68
    80d4:	ret    
    80d5:	call   1c90 <__stack_chk_fail@plt>
    80da:	mov    r11,QWORD PTR [r10+0x8]
    80de:	lea    rax,[r11+0x8]
    80e2:	mov    QWORD PTR [r10+0x8],rax
    80e6:	jmp    80a5 <__cxa_finalize@plt+0x6135>
    80e8:	nop    DWORD PTR [rax+rax*1+0x0]
    80f0:	push   rbp
    80f1:	push   rbx
    80f2:	mov    r10d,0x20
    80f8:	xor    r11d,r11d
    80fb:	sub    rsp,0xb8
    8102:	mov    rax,QWORD PTR fs:0x28
    810b:	mov    QWORD PTR [rsp+0x78],rax
    8110:	xor    eax,eax
    8112:	lea    rax,[rsp+0xd0]
    811a:	mov    QWORD PTR [rsp+0xa0],r8
    8122:	lea    rbx,[rsp+0xd0]
    812a:	lea    r8,[rsp+0x20]
    812f:	mov    QWORD PTR [rsp+0xa8],r9
    8137:	mov    DWORD PTR [rsp+0x8],0x20
    813f:	mov    QWORD PTR [rsp+0x10],rax
    8144:	lea    rax,[rsp+0x80]
    814c:	xor    r9d,r9d
    814f:	mov    QWORD PTR [rsp+0x18],rax
    8154:	mov    rbp,rax
    8157:	nop    WORD PTR [rax+rax*1+0x0]
    8160:	cmp    r10d,0x2f
    8164:	ja     81bc <__cxa_finalize@plt+0x624c>
    8166:	mov    eax,r10d
    8169:	mov    r11d,0x1
    816f:	add    r10d,0x8
    8173:	add    rax,rbp
    8176:	mov    rax,QWORD PTR [rax]
    8179:	test   rax,rax
    817c:	mov    QWORD PTR [r8+r9*8],rax
    8180:	je     818c <__cxa_finalize@plt+0x621c>
    8182:	add    r9,0x1
    8186:	cmp    r9,0xa
    818a:	jne    8160 <__cxa_finalize@plt+0x61f0>
    818c:	test   r11b,r11b
    818f:	jne    81b5 <__cxa_finalize@plt+0x6245>
    8191:	call   7c40 <__cxa_finalize@plt+0x5cd0>
    8196:	mov    rax,QWORD PTR [rsp+0x78]
    819b:	xor    rax,QWORD PTR fs:0x28
    81a4:	jne    81b0 <__cxa_finalize@plt+0x6240>
    81a6:	add    rsp,0xb8
    81ad:	pop    rbx
    81ae:	pop    rbp
    81af:	ret    
    81b0:	call   1c90 <__stack_chk_fail@plt>
    81b5:	mov    DWORD PTR [rsp+0x8],r10d
    81ba:	jmp    8191 <__cxa_finalize@plt+0x6221>
    81bc:	mov    rax,rbx
    81bf:	add    rbx,0x8
    81c3:	jmp    8176 <__cxa_finalize@plt+0x6206>
    81c5:	nop
    81c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    81d0:	push   rbx
    81d1:	lea    rsi,[rip+0x53ca]        # d5a2 <quoting_style_vals@@Base+0x82>
    81d8:	mov    edx,0x5
    81dd:	xor    edi,edi
    81df:	call   1c60 <dcgettext@plt>
    81e4:	lea    rdx,[rip+0x53cc]        # d5b7 <quoting_style_vals@@Base+0x97>
    81eb:	mov    rsi,rax
    81ee:	mov    edi,0x1
    81f3:	xor    eax,eax
    81f5:	call   1e70 <__printf_chk@plt>
    81fa:	lea    rsi,[rip+0x53cc]        # d5cd <quoting_style_vals@@Base+0xad>
    8201:	mov    edx,0x5
    8206:	xor    edi,edi
    8208:	call   1c60 <dcgettext@plt>
    820d:	lea    rcx,[rip+0x439c]        # c5b0 <_IO_stdin_used@@Base+0x10d0>
    8214:	lea    rdx,[rip+0x3429]        # b644 <_IO_stdin_used@@Base+0x164>
    821b:	mov    rsi,rax
    821e:	mov    edi,0x1
    8223:	xor    eax,eax
    8225:	call   1e70 <__printf_chk@plt>
    822a:	mov    rbx,QWORD PTR [rip+0x207e77]        # 2100a8 <stdout@@GLIBC_2.2.5>
    8231:	lea    rsi,[rip+0x55c8]        # d800 <quoting_style_vals@@Base+0x2e0>
    8238:	xor    edi,edi
    823a:	mov    edx,0x5
    823f:	call   1c60 <dcgettext@plt>
    8244:	mov    rsi,rbx
    8247:	mov    rdi,rax
    824a:	pop    rbx
    824b:	jmp    1d80 <fputs_unlocked@plt>
    8250:	push   rbx
    8251:	mov    rbx,rdi
    8254:	call   1dd0 <malloc@plt>
    8259:	test   rax,rax
    825c:	jne    8263 <__cxa_finalize@plt+0x62f3>
    825e:	test   rbx,rbx
    8261:	jne    8265 <__cxa_finalize@plt+0x62f5>
    8263:	pop    rbx
    8264:	ret    
    8265:	call   84a0 <__cxa_finalize@plt+0x6530>
    826a:	nop    WORD PTR [rax+rax*1+0x0]
    8270:	mov    rax,rdi
    8273:	mul    rsi
    8276:	mov    rdi,rax
    8279:	seto   al
    827c:	test   rdi,rdi
    827f:	js     828b <__cxa_finalize@plt+0x631b>
    8281:	movzx  eax,al
    8284:	test   rax,rax
    8287:	jne    828b <__cxa_finalize@plt+0x631b>
    8289:	jmp    8250 <__cxa_finalize@plt+0x62e0>
    828b:	sub    rsp,0x8
    828f:	call   84a0 <__cxa_finalize@plt+0x6530>
    8294:	xchg   ax,ax
    8296:	nop    WORD PTR cs:[rax+rax*1+0x0]
    82a0:	jmp    8250 <__cxa_finalize@plt+0x62e0>
    82a2:	nop    DWORD PTR [rax+0x0]
    82a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    82b0:	test   rsi,rsi
    82b3:	push   rbx
    82b4:	mov    rbx,rsi
    82b7:	jne    82be <__cxa_finalize@plt+0x634e>
    82b9:	test   rdi,rdi
    82bc:	jne    82d8 <__cxa_finalize@plt+0x6368>
    82be:	mov    rsi,rbx
    82c1:	call   1e40 <realloc@plt>
    82c6:	test   rax,rax
    82c9:	jne    82d0 <__cxa_finalize@plt+0x6360>
    82cb:	test   rbx,rbx
    82ce:	jne    82e1 <__cxa_finalize@plt+0x6371>
    82d0:	pop    rbx
    82d1:	ret    
    82d2:	nop    WORD PTR [rax+rax*1+0x0]
    82d8:	call   1b80 <free@plt>
    82dd:	xor    eax,eax
    82df:	pop    rbx
    82e0:	ret    
    82e1:	call   84a0 <__cxa_finalize@plt+0x6530>
    82e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    82f0:	mov    rax,rsi
    82f3:	mul    rdx
    82f6:	mov    rsi,rax
    82f9:	seto   al
    82fc:	test   rsi,rsi
    82ff:	js     830b <__cxa_finalize@plt+0x639b>
    8301:	movzx  eax,al
    8304:	test   rax,rax
    8307:	jne    830b <__cxa_finalize@plt+0x639b>
    8309:	jmp    82b0 <__cxa_finalize@plt+0x6340>
    830b:	sub    rsp,0x8
    830f:	call   84a0 <__cxa_finalize@plt+0x6530>
    8314:	xchg   ax,ax
    8316:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8320:	test   rdi,rdi
    8323:	mov    r9,rdx
    8326:	mov    rcx,QWORD PTR [rsi]
    8329:	je     8360 <__cxa_finalize@plt+0x63f0>
    832b:	xor    edx,edx
    832d:	movabs rax,0x5555555555555554
    8337:	div    r9
    833a:	cmp    rax,rcx
    833d:	jbe    837b <__cxa_finalize@plt+0x640b>
    833f:	mov    rax,rcx
    8342:	shr    rax,1
    8345:	lea    rcx,[rax+rcx*1+0x1]
    834a:	mov    QWORD PTR [rsi],rcx
    834d:	imul   rcx,r9
    8351:	mov    rsi,rcx
    8354:	jmp    82b0 <__cxa_finalize@plt+0x6340>
    8359:	nop    DWORD PTR [rax+0x0]
    8360:	test   rcx,rcx
    8363:	je     8388 <__cxa_finalize@plt+0x6418>
    8365:	mov    rax,rcx
    8368:	mul    r9
    836b:	seto   dl
    836e:	test   rax,rax
    8371:	movzx  edx,dl
    8374:	js     837b <__cxa_finalize@plt+0x640b>
    8376:	test   rdx,rdx
    8379:	je     834a <__cxa_finalize@plt+0x63da>
    837b:	sub    rsp,0x8
    837f:	call   84a0 <__cxa_finalize@plt+0x6530>
    8384:	nop    DWORD PTR [rax+0x0]
    8388:	xor    edx,edx
    838a:	mov    eax,0x80
    838f:	xor    r8d,r8d
    8392:	div    r9
    8395:	test   rax,rax
    8398:	sete   r8b
    839c:	lea    rcx,[r8+rax*1]
    83a0:	jmp    8365 <__cxa_finalize@plt+0x63f5>
    83a2:	nop    DWORD PTR [rax+0x0]
    83a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    83b0:	test   rdi,rdi
    83b3:	mov    rax,QWORD PTR [rsi]
    83b6:	je     83e0 <__cxa_finalize@plt+0x6470>
    83b8:	movabs rdx,0x5555555555555553
    83c2:	cmp    rax,rdx
    83c5:	ja     83f1 <__cxa_finalize@plt+0x6481>
    83c7:	mov    rdx,rax
    83ca:	shr    rdx,1
    83cd:	lea    rax,[rdx+rax*1+0x1]
    83d2:	mov    QWORD PTR [rsi],rax
    83d5:	mov    rsi,rax
    83d8:	jmp    82b0 <__cxa_finalize@plt+0x6340>
    83dd:	nop    DWORD PTR [rax]
    83e0:	test   rax,rax
    83e3:	mov    edx,0x80
    83e8:	cmove  rax,rdx
    83ec:	test   rax,rax
    83ef:	jns    83d2 <__cxa_finalize@plt+0x6462>
    83f1:	sub    rsp,0x8
    83f5:	call   84a0 <__cxa_finalize@plt+0x6530>
    83fa:	nop    WORD PTR [rax+rax*1+0x0]
    8400:	push   rbx
    8401:	mov    rbx,rdi
    8404:	call   8250 <__cxa_finalize@plt+0x62e0>
    8409:	mov    rdx,rbx
    840c:	xor    esi,esi
    840e:	mov    rdi,rax
    8411:	pop    rbx
    8412:	jmp    1d30 <memset@plt>
    8417:	nop    WORD PTR [rax+rax*1+0x0]
    8420:	mov    rax,rdi
    8423:	sub    rsp,0x8
    8427:	mul    rsi
    842a:	seto   dl
    842d:	test   rax,rax
    8430:	js     8449 <__cxa_finalize@plt+0x64d9>
    8432:	movzx  edx,dl
    8435:	test   rdx,rdx
    8438:	jne    8449 <__cxa_finalize@plt+0x64d9>
    843a:	call   1d90 <calloc@plt>
    843f:	test   rax,rax
    8442:	je     8449 <__cxa_finalize@plt+0x64d9>
    8444:	add    rsp,0x8
    8448:	ret    
    8449:	call   84a0 <__cxa_finalize@plt+0x6530>
    844e:	xchg   ax,ax
    8450:	push   rbp
    8451:	push   rbx
    8452:	mov    rbp,rdi
    8455:	mov    rdi,rsi
    8458:	mov    rbx,rsi
    845b:	sub    rsp,0x8
    845f:	call   8250 <__cxa_finalize@plt+0x62e0>
    8464:	add    rsp,0x8
    8468:	mov    rdx,rbx
    846b:	mov    rsi,rbp
    846e:	pop    rbx
    846f:	pop    rbp
    8470:	mov    rdi,rax
    8473:	jmp    1db0 <memcpy@plt>
    8478:	nop    DWORD PTR [rax+rax*1+0x0]
    8480:	push   rbx
    8481:	mov    rbx,rdi
    8484:	call   1c80 <strlen@plt>
    8489:	mov    rdi,rbx
    848c:	lea    rsi,[rax+0x1]
    8490:	pop    rbx
    8491:	jmp    8450 <__cxa_finalize@plt+0x64e0>
    8493:	nop    WORD PTR cs:[rax+rax*1+0x0]
    849d:	nop    DWORD PTR [rax]
    84a0:	lea    rsi,[rip+0x5408]        # d8af <version_etc_copyright@@Base+0x2f>
    84a7:	sub    rsp,0x8
    84ab:	mov    edx,0x5
    84b0:	xor    edi,edi
    84b2:	call   1c60 <dcgettext@plt>
    84b7:	mov    edi,DWORD PTR [rip+0x207b6b]        # 210028 <exit_failure@@Base>
    84bd:	lea    rdx,[rip+0x4afc]        # cfc0 <_IO_stdin_used@@Base+0x1ae0>
    84c4:	mov    rcx,rax
    84c7:	xor    esi,esi
    84c9:	xor    eax,eax
    84cb:	call   1ea0 <error@plt>
    84d0:	call   1b90 <abort@plt>
    84d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    84df:	nop
    84e0:	push   rbp
    84e1:	push   rbx
    84e2:	sub    rsp,0x8
    84e6:	call   8ea0 <__cxa_finalize@plt+0x6f30>
    84eb:	test   eax,eax
    84ed:	mov    ebx,eax
    84ef:	js     8500 <__cxa_finalize@plt+0x6590>
    84f1:	add    rsp,0x8
    84f5:	mov    eax,ebx
    84f7:	pop    rbx
    84f8:	pop    rbp
    84f9:	ret    
    84fa:	nop    WORD PTR [rax+rax*1+0x0]
    8500:	mov    rdi,QWORD PTR [rip+0x207ba1]        # 2100a8 <stdout@@GLIBC_2.2.5>
    8507:	call   1bf0 <ferror@plt>
    850c:	test   eax,eax
    850e:	jne    84f1 <__cxa_finalize@plt+0x6581>
    8510:	lea    rsi,[rip+0x53a9]        # d8c0 <version_etc_copyright@@Base+0x40>
    8517:	xor    edi,edi
    8519:	mov    edx,0x5
    851e:	call   1c60 <dcgettext@plt>
    8523:	mov    rbp,rax
    8526:	call   1ba0 <__errno_location@plt>
    852b:	mov    edi,DWORD PTR [rip+0x207af7]        # 210028 <exit_failure@@Base>
    8531:	mov    esi,DWORD PTR [rax]
    8533:	mov    rdx,rbp
    8536:	xor    eax,eax
    8538:	call   1ea0 <error@plt>
    853d:	jmp    84f1 <__cxa_finalize@plt+0x6581>
    853f:	nop
    8540:	sub    rsp,0xd8
    8547:	test   al,al
    8549:	mov    QWORD PTR [rsp+0x28],rsi
    854e:	mov    QWORD PTR [rsp+0x30],rdx
    8553:	mov    QWORD PTR [rsp+0x38],rcx
    8558:	mov    QWORD PTR [rsp+0x40],r8
    855d:	mov    QWORD PTR [rsp+0x48],r9
    8562:	je     859b <__cxa_finalize@plt+0x662b>
    8564:	movaps XMMWORD PTR [rsp+0x50],xmm0
    8569:	movaps XMMWORD PTR [rsp+0x60],xmm1
    856e:	movaps XMMWORD PTR [rsp+0x70],xmm2
    8573:	movaps XMMWORD PTR [rsp+0x80],xmm3
    857b:	movaps XMMWORD PTR [rsp+0x90],xmm4
    8583:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    858b:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    8593:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    859b:	mov    rax,QWORD PTR fs:0x28
    85a4:	mov    QWORD PTR [rsp+0x18],rax
    85a9:	xor    eax,eax
    85ab:	lea    rax,[rsp+0xe0]
    85b3:	mov    rsi,rsp
    85b6:	mov    QWORD PTR [rsp+0x8],rax
    85bb:	lea    rax,[rsp+0x20]
    85c0:	mov    DWORD PTR [rsp],0x8
    85c7:	mov    DWORD PTR [rsp+0x4],0x30
    85cf:	mov    QWORD PTR [rsp+0x10],rax
    85d4:	call   84e0 <__cxa_finalize@plt+0x6570>
    85d9:	mov    rdx,QWORD PTR [rsp+0x18]
    85de:	xor    rdx,QWORD PTR fs:0x28
    85e7:	jne    85f1 <__cxa_finalize@plt+0x6681>
    85e9:	add    rsp,0xd8
    85f0:	ret    
    85f1:	call   1c90 <__stack_chk_fail@plt>
    85f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8600:	push   rbp
    8601:	push   rbx
    8602:	mov    rbp,rdi
    8605:	sub    rsp,0x8
    8609:	call   8da0 <__cxa_finalize@plt+0x6e30>
    860e:	test   eax,eax
    8610:	mov    ebx,eax
    8612:	js     8620 <__cxa_finalize@plt+0x66b0>
    8614:	add    rsp,0x8
    8618:	mov    eax,ebx
    861a:	pop    rbx
    861b:	pop    rbp
    861c:	ret    
    861d:	nop    DWORD PTR [rax]
    8620:	mov    rdi,rbp
    8623:	call   1bf0 <ferror@plt>
    8628:	test   eax,eax
    862a:	jne    8614 <__cxa_finalize@plt+0x66a4>
    862c:	lea    rsi,[rip+0x528d]        # d8c0 <version_etc_copyright@@Base+0x40>
    8633:	xor    edi,edi
    8635:	mov    edx,0x5
    863a:	call   1c60 <dcgettext@plt>
    863f:	mov    rbp,rax
    8642:	call   1ba0 <__errno_location@plt>
    8647:	mov    edi,DWORD PTR [rip+0x2079db]        # 210028 <exit_failure@@Base>
    864d:	mov    esi,DWORD PTR [rax]
    864f:	mov    rdx,rbp
    8652:	xor    eax,eax
    8654:	call   1ea0 <error@plt>
    8659:	jmp    8614 <__cxa_finalize@plt+0x66a4>
    865b:	nop    DWORD PTR [rax+rax*1+0x0]
    8660:	sub    rsp,0xd8
    8667:	test   al,al
    8669:	mov    QWORD PTR [rsp+0x30],rdx
    866e:	mov    QWORD PTR [rsp+0x38],rcx
    8673:	mov    QWORD PTR [rsp+0x40],r8
    8678:	mov    QWORD PTR [rsp+0x48],r9
    867d:	je     86b6 <__cxa_finalize@plt+0x6746>
    867f:	movaps XMMWORD PTR [rsp+0x50],xmm0
    8684:	movaps XMMWORD PTR [rsp+0x60],xmm1
    8689:	movaps XMMWORD PTR [rsp+0x70],xmm2
    868e:	movaps XMMWORD PTR [rsp+0x80],xmm3
    8696:	movaps XMMWORD PTR [rsp+0x90],xmm4
    869e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    86a6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    86ae:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    86b6:	mov    rax,QWORD PTR fs:0x28
    86bf:	mov    QWORD PTR [rsp+0x18],rax
    86c4:	xor    eax,eax
    86c6:	lea    rax,[rsp+0xe0]
    86ce:	mov    rdx,rsp
    86d1:	mov    QWORD PTR [rsp+0x8],rax
    86d6:	lea    rax,[rsp+0x20]
    86db:	mov    DWORD PTR [rsp],0x10
    86e2:	mov    DWORD PTR [rsp+0x4],0x30
    86ea:	mov    QWORD PTR [rsp+0x10],rax
    86ef:	call   8600 <__cxa_finalize@plt+0x6690>
    86f4:	mov    rcx,QWORD PTR [rsp+0x18]
    86f9:	xor    rcx,QWORD PTR fs:0x28
    8702:	jne    870c <__cxa_finalize@plt+0x679c>
    8704:	add    rsp,0xd8
    870b:	ret    
    870c:	call   1c90 <__stack_chk_fail@plt>
    8711:	nop    WORD PTR cs:[rax+rax*1+0x0]
    871b:	nop    DWORD PTR [rax+rax*1+0x0]
    8720:	push   r13
    8722:	push   r12
    8724:	mov    r10d,esi
    8727:	push   rbp
    8728:	push   rbx
    8729:	mov    r12,r8
    872c:	sub    rsp,0x18
    8730:	mov    rax,QWORD PTR fs:0x28
    8739:	mov    QWORD PTR [rsp+0x8],rax
    873e:	xor    eax,eax
    8740:	cmp    edi,0x3
    8743:	mov    ebp,DWORD PTR [rip+0x2078df]        # 210028 <exit_failure@@Base>
    8749:	ja     87a4 <__cxa_finalize@plt+0x6834>
    874b:	cmp    edi,0x2
    874e:	jae    879b <__cxa_finalize@plt+0x682b>
    8750:	sub    edi,0x1
    8753:	lea    rsi,[rip+0x51a1]        # d8fb <version_etc_copyright@@Base+0x7b>
    875a:	jne    8796 <__cxa_finalize@plt+0x6826>
    875c:	test   r10d,r10d
    875f:	movsxd rax,r10d
    8762:	js     87b2 <__cxa_finalize@plt+0x6842>
    8764:	shl    rax,0x5
    8768:	lea    rbx,[rip+0x51a9]        # d918 <version_etc_copyright@@Base+0x98>
    876f:	mov    r13,QWORD PTR [rcx+rax*1]
    8773:	mov    edx,0x5
    8778:	xor    edi,edi
    877a:	call   1c60 <dcgettext@plt>
    877f:	mov    r9,r12
    8782:	mov    rdx,rax
    8785:	mov    r8,r13
    8788:	mov    rcx,rbx
    878b:	xor    esi,esi
    878d:	mov    edi,ebp
    878f:	xor    eax,eax
    8791:	call   1ea0 <error@plt>
    8796:	call   1b90 <abort@plt>
    879b:	lea    rsi,[rip+0x517e]        # d920 <version_etc_copyright@@Base+0xa0>
    87a2:	jmp    875c <__cxa_finalize@plt+0x67ec>
    87a4:	cmp    edi,0x4
    87a7:	lea    rsi,[rip+0x5132]        # d8e0 <version_etc_copyright@@Base+0x60>
    87ae:	je     875c <__cxa_finalize@plt+0x67ec>
    87b0:	jmp    8796 <__cxa_finalize@plt+0x6826>
    87b2:	lea    rbx,[rip+0x515f]        # d918 <version_etc_copyright@@Base+0x98>
    87b9:	mov    BYTE PTR [rsp+0x6],dl
    87bd:	mov    BYTE PTR [rsp+0x7],0x0
    87c2:	lea    r13,[rsp+0x6]
    87c7:	sub    rbx,rax
    87ca:	jmp    8773 <__cxa_finalize@plt+0x6803>
    87cc:	nop    DWORD PTR [rax+0x0]
    87d0:	push   r15
    87d2:	push   r14
    87d4:	push   r13
    87d6:	push   r12
    87d8:	push   rbp
    87d9:	push   rbx
    87da:	sub    rsp,0x28
    87de:	mov    rax,QWORD PTR fs:0x28
    87e7:	mov    QWORD PTR [rsp+0x18],rax
    87ec:	xor    eax,eax
    87ee:	cmp    edx,0x24
    87f1:	ja     8b55 <__cxa_finalize@plt+0x6be5>
    87f7:	lea    rax,[rsp+0x10]
    87fc:	mov    r15,rsi
    87ff:	test   rsi,rsi
    8802:	mov    rbp,rdi
    8805:	mov    DWORD PTR [rsp+0x8],edx
    8809:	mov    r14,rcx
    880c:	mov    r13,r8
    880f:	cmove  r15,rax
    8813:	call   1ba0 <__errno_location@plt>
    8818:	mov    DWORD PTR [rax],0x0
    881e:	mov    r12,rax
    8821:	movzx  ebx,BYTE PTR [rbp+0x0]
    8825:	call   1f50 <__ctype_b_loc@plt>
    882a:	mov    edx,DWORD PTR [rsp+0x8]
    882e:	mov    rsi,QWORD PTR [rax]
    8831:	mov    rax,rbp
    8834:	jmp    8847 <__cxa_finalize@plt+0x68d7>
    8836:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8840:	add    rax,0x1
    8844:	movzx  ebx,BYTE PTR [rax]
    8847:	movzx  ecx,bl
    884a:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
    884f:	jne    8840 <__cxa_finalize@plt+0x68d0>
    8851:	cmp    bl,0x2d
    8854:	je     88a8 <__cxa_finalize@plt+0x6938>
    8856:	xor    ecx,ecx
    8858:	mov    rsi,r15
    885b:	mov    rdi,rbp
    885e:	call   1d10 <__strtoul_internal@plt>
    8863:	mov    rcx,QWORD PTR [r15]
    8866:	mov    rbx,rax
    8869:	cmp    rcx,rbp
    886c:	je     8898 <__cxa_finalize@plt+0x6928>
    886e:	mov    eax,DWORD PTR [r12]
    8872:	test   eax,eax
    8874:	je     88d8 <__cxa_finalize@plt+0x6968>
    8876:	cmp    eax,0x22
    8879:	mov    ebp,0x1
    887e:	jne    88a8 <__cxa_finalize@plt+0x6938>
    8880:	test   r13,r13
    8883:	je     888e <__cxa_finalize@plt+0x691e>
    8885:	movzx  r12d,BYTE PTR [rcx]
    8889:	test   r12b,r12b
    888c:	jne    8907 <__cxa_finalize@plt+0x6997>
    888e:	mov    QWORD PTR [r14],rbx
    8891:	jmp    88ad <__cxa_finalize@plt+0x693d>
    8893:	nop    DWORD PTR [rax+rax*1+0x0]
    8898:	test   r13,r13
    889b:	mov    QWORD PTR [rsp+0x8],rcx
    88a0:	jne    88e0 <__cxa_finalize@plt+0x6970>
    88a2:	nop    WORD PTR [rax+rax*1+0x0]
    88a8:	mov    ebp,0x4
    88ad:	mov    rdi,QWORD PTR [rsp+0x18]
    88b2:	xor    rdi,QWORD PTR fs:0x28
    88bb:	mov    eax,ebp
    88bd:	jne    8b50 <__cxa_finalize@plt+0x6be0>
    88c3:	add    rsp,0x28
    88c7:	pop    rbx
    88c8:	pop    rbp
    88c9:	pop    r12
    88cb:	pop    r13
    88cd:	pop    r14
    88cf:	pop    r15
    88d1:	ret    
    88d2:	nop    WORD PTR [rax+rax*1+0x0]
    88d8:	xor    ebp,ebp
    88da:	jmp    8880 <__cxa_finalize@plt+0x6910>
    88dc:	nop    DWORD PTR [rax+0x0]
    88e0:	movzx  r12d,BYTE PTR [rbp+0x0]
    88e5:	test   r12b,r12b
    88e8:	je     88a8 <__cxa_finalize@plt+0x6938>
    88ea:	movsx  esi,r12b
    88ee:	mov    rdi,r13
    88f1:	xor    ebp,ebp
    88f3:	call   1cc0 <strchr@plt>
    88f8:	test   rax,rax
    88fb:	mov    ebx,0x1
    8900:	mov    rcx,QWORD PTR [rsp+0x8]
    8905:	je     88a8 <__cxa_finalize@plt+0x6938>
    8907:	movsx  esi,r12b
    890b:	mov    rdi,r13
    890e:	mov    QWORD PTR [rsp+0x8],rcx
    8913:	call   1cc0 <strchr@plt>
    8918:	test   rax,rax
    891b:	mov    rcx,QWORD PTR [rsp+0x8]
    8920:	je     89ec <__cxa_finalize@plt+0x6a7c>
    8926:	lea    eax,[r12-0x45]
    892b:	cmp    al,0x2f
    892d:	ja     8980 <__cxa_finalize@plt+0x6a10>
    892f:	movabs rdx,0x814400308945
    8939:	bt     rdx,rax
    893d:	jae    8980 <__cxa_finalize@plt+0x6a10>
    893f:	mov    esi,0x30
    8944:	mov    rdi,r13
    8947:	mov    QWORD PTR [rsp+0x8],rcx
    894c:	call   1cc0 <strchr@plt>
    8951:	test   rax,rax
    8954:	mov    rcx,QWORD PTR [rsp+0x8]
    8959:	je     8980 <__cxa_finalize@plt+0x6a10>
    895b:	movzx  eax,BYTE PTR [rcx+0x1]
    895f:	cmp    al,0x44
    8961:	je     896f <__cxa_finalize@plt+0x69ff>
    8963:	cmp    al,0x69
    8965:	je     8b38 <__cxa_finalize@plt+0x6bc8>
    896b:	cmp    al,0x42
    896d:	jne    8980 <__cxa_finalize@plt+0x6a10>
    896f:	mov    edi,0x2
    8974:	mov    esi,0x3e8
    8979:	jmp    898a <__cxa_finalize@plt+0x6a1a>
    897b:	nop    DWORD PTR [rax+rax*1+0x0]
    8980:	mov    edi,0x1
    8985:	mov    esi,0x400
    898a:	sub    r12d,0x42
    898e:	cmp    r12b,0x35
    8992:	ja     89ec <__cxa_finalize@plt+0x6a7c>
    8994:	lea    rdx,[rip+0x4fe5]        # d980 <version_etc_copyright@@Base+0x100>
    899b:	movzx  r12d,r12b
    899f:	movsxd rax,DWORD PTR [rdx+r12*4]
    89a3:	add    rax,rdx
    89a6:	jmp    rax
    89a8:	mov    rax,rbx
    89ab:	mul    rsi
    89ae:	jo     8ba1 <__cxa_finalize@plt+0x6c31>
    89b4:	xor    r8d,r8d
    89b7:	mul    rsi
    89ba:	jo     8b92 <__cxa_finalize@plt+0x6c22>
    89c0:	mov    rbx,rax
    89c3:	or     ebp,r8d
    89c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    89d0:	movsxd rdi,edi
    89d3:	mov    eax,ebp
    89d5:	add    rcx,rdi
    89d8:	or     eax,0x2
    89db:	mov    QWORD PTR [r15],rcx
    89de:	cmp    BYTE PTR [rcx],0x0
    89e1:	mov    QWORD PTR [r14],rbx
    89e4:	cmovne ebp,eax
    89e7:	jmp    88ad <__cxa_finalize@plt+0x693d>
    89ec:	mov    QWORD PTR [r14],rbx
    89ef:	or     ebp,0x2
    89f2:	jmp    88ad <__cxa_finalize@plt+0x693d>
    89f7:	mov    edx,0x2
    89fc:	mov    rax,rdx
    89ff:	mul    rbx
    8a02:	jo     8a9e <__cxa_finalize@plt+0x6b2e>
    8a08:	add    rbx,rbx
    8a0b:	jmp    89d0 <__cxa_finalize@plt+0x6a60>
    8a0d:	mov    edx,0x200
    8a12:	mov    rax,rdx
    8a15:	mul    rbx
    8a18:	jo     8a9e <__cxa_finalize@plt+0x6b2e>
    8a1e:	shl    rbx,0x9
    8a22:	jmp    89d0 <__cxa_finalize@plt+0x6a60>
    8a24:	mov    r8d,0x7
    8a2a:	xor    r9d,r9d
    8a2d:	nop    DWORD PTR [rax]
    8a30:	mov    rax,rbx
    8a33:	mul    rsi
    8a36:	mov    rbx,rax
    8a39:	jo     8bce <__cxa_finalize@plt+0x6c5e>
    8a3f:	sub    r8d,0x1
    8a43:	jne    8a30 <__cxa_finalize@plt+0x6ac0>
    8a45:	or     ebp,r9d
    8a48:	jmp    89d0 <__cxa_finalize@plt+0x6a60>
    8a4a:	mov    r8d,0x8
    8a50:	xor    r9d,r9d
    8a53:	nop    DWORD PTR [rax+rax*1+0x0]
    8a58:	mov    rax,rbx
    8a5b:	mul    rsi
    8a5e:	mov    rbx,rax
    8a61:	jo     8bb0 <__cxa_finalize@plt+0x6c40>
    8a67:	sub    r8d,0x1
    8a6b:	jne    8a58 <__cxa_finalize@plt+0x6ae8>
    8a6d:	jmp    8a45 <__cxa_finalize@plt+0x6ad5>
    8a6f:	mov    r8d,0x4
    8a75:	xor    r9d,r9d
    8a78:	mov    rax,rbx
    8a7b:	mul    rsi
    8a7e:	mov    rbx,rax
    8a81:	jo     8b83 <__cxa_finalize@plt+0x6c13>
    8a87:	sub    r8d,0x1
    8a8b:	jne    8a78 <__cxa_finalize@plt+0x6b08>
    8a8d:	jmp    8a45 <__cxa_finalize@plt+0x6ad5>
    8a8f:	mov    rax,rbx
    8a92:	mul    rsi
    8a95:	mov    rbx,rax
    8a98:	jno    89d0 <__cxa_finalize@plt+0x6a60>
    8a9e:	mov    ebp,0x1
    8aa3:	or     rbx,0xffffffffffffffff
    8aa7:	jmp    89d0 <__cxa_finalize@plt+0x6a60>
    8aac:	nop    DWORD PTR [rax+0x0]
    8ab0:	mov    r8d,0x5
    8ab6:	xor    r9d,r9d
    8ab9:	mov    rax,rbx
    8abc:	mul    rsi
    8abf:	mov    rbx,rax
    8ac2:	jo     8bbf <__cxa_finalize@plt+0x6c4f>
    8ac8:	sub    r8d,0x1
    8acc:	jne    8ab9 <__cxa_finalize@plt+0x6b49>
    8ace:	jmp    8a45 <__cxa_finalize@plt+0x6ad5>
    8ad3:	mov    r8d,0x6
    8ad9:	xor    r9d,r9d
    8adc:	mov    rax,rbx
    8adf:	mul    rsi
    8ae2:	mov    rbx,rax
    8ae5:	jo     8b74 <__cxa_finalize@plt+0x6c04>
    8aeb:	sub    r8d,0x1
    8aef:	jne    8adc <__cxa_finalize@plt+0x6b6c>
    8af1:	jmp    8a45 <__cxa_finalize@plt+0x6ad5>
    8af6:	mov    edx,0x400
    8afb:	mov    rax,rdx
    8afe:	mul    rbx
    8b01:	jo     8a9e <__cxa_finalize@plt+0x6b2e>
    8b03:	shl    rbx,0xa
    8b07:	jmp    89d0 <__cxa_finalize@plt+0x6a60>
    8b0c:	mov    rax,rbx
    8b0f:	mul    rsi
    8b12:	jo     8bdd <__cxa_finalize@plt+0x6c6d>
    8b18:	xor    r8d,r8d
    8b1b:	mul    rsi
    8b1e:	jno    89b7 <__cxa_finalize@plt+0x6a47>
    8b24:	mov    r8d,0x1
    8b2a:	or     rax,0xffffffffffffffff
    8b2e:	jmp    89b7 <__cxa_finalize@plt+0x6a47>
    8b33:	nop    DWORD PTR [rax+rax*1+0x0]
    8b38:	xor    edi,edi
    8b3a:	cmp    BYTE PTR [rcx+0x2],0x42
    8b3e:	mov    esi,0x400
    8b43:	sete   dil
    8b47:	lea    edi,[rdi+rdi*1+0x1]
    8b4b:	jmp    898a <__cxa_finalize@plt+0x6a1a>
    8b50:	call   1c90 <__stack_chk_fail@plt>
    8b55:	lea    rcx,[rip+0x4efc]        # da58 <version_etc_copyright@@Base+0x1d8>
    8b5c:	lea    rsi,[rip+0x4de2]        # d945 <version_etc_copyright@@Base+0xc5>
    8b63:	lea    rdi,[rip+0x4dee]        # d958 <version_etc_copyright@@Base+0xd8>
    8b6a:	mov    edx,0x60
    8b6f:	call   1d00 <__assert_fail@plt>
    8b74:	mov    r9d,0x1
    8b7a:	or     rbx,0xffffffffffffffff
    8b7e:	jmp    8aeb <__cxa_finalize@plt+0x6b7b>
    8b83:	mov    r9d,0x1
    8b89:	or     rbx,0xffffffffffffffff
    8b8d:	jmp    8a87 <__cxa_finalize@plt+0x6b17>
    8b92:	mov    r8d,0x1
    8b98:	or     rbx,0xffffffffffffffff
    8b9c:	jmp    89c3 <__cxa_finalize@plt+0x6a53>
    8ba1:	or     rax,0xffffffffffffffff
    8ba5:	mov    r8d,0x1
    8bab:	jmp    89b7 <__cxa_finalize@plt+0x6a47>
    8bb0:	mov    r9d,0x1
    8bb6:	or     rbx,0xffffffffffffffff
    8bba:	jmp    8a67 <__cxa_finalize@plt+0x6af7>
    8bbf:	mov    r9d,0x1
    8bc5:	or     rbx,0xffffffffffffffff
    8bc9:	jmp    8ac8 <__cxa_finalize@plt+0x6b58>
    8bce:	mov    r9d,0x1
    8bd4:	or     rbx,0xffffffffffffffff
    8bd8:	jmp    8a3f <__cxa_finalize@plt+0x6acf>
    8bdd:	mov    r8d,0x1
    8be3:	or     rax,0xffffffffffffffff
    8be7:	jmp    8b1b <__cxa_finalize@plt+0x6bab>
    8bec:	nop    DWORD PTR [rax+0x0]
    8bf0:	push   r12
    8bf2:	push   rbp
    8bf3:	push   rbx
    8bf4:	mov    rbx,rdi
    8bf7:	call   1dc0 <fileno@plt>
    8bfc:	test   eax,eax
    8bfe:	mov    rdi,rbx
    8c01:	js     8c57 <__cxa_finalize@plt+0x6ce7>
    8c03:	call   1e20 <__freading@plt>
    8c08:	test   eax,eax
    8c0a:	jne    8c38 <__cxa_finalize@plt+0x6cc8>
    8c0c:	mov    rdi,rbx
    8c0f:	call   8c70 <__cxa_finalize@plt+0x6d00>
    8c14:	test   eax,eax
    8c16:	je     8c54 <__cxa_finalize@plt+0x6ce4>
    8c18:	call   1ba0 <__errno_location@plt>
    8c1d:	mov    r12d,DWORD PTR [rax]
    8c20:	mov    rdi,rbx
    8c23:	mov    rbp,rax
    8c26:	call   1c40 <fclose@plt>
    8c2b:	test   r12d,r12d
    8c2e:	jne    8c60 <__cxa_finalize@plt+0x6cf0>
    8c30:	pop    rbx
    8c31:	pop    rbp
    8c32:	pop    r12
    8c34:	ret    
    8c35:	nop    DWORD PTR [rax]
    8c38:	mov    rdi,rbx
    8c3b:	call   1dc0 <fileno@plt>
    8c40:	xor    esi,esi
    8c42:	mov    edx,0x1
    8c47:	mov    edi,eax
    8c49:	call   1cf0 <lseek@plt>
    8c4e:	cmp    rax,0xffffffffffffffff
    8c52:	jne    8c0c <__cxa_finalize@plt+0x6c9c>
    8c54:	mov    rdi,rbx
    8c57:	pop    rbx
    8c58:	pop    rbp
    8c59:	pop    r12
    8c5b:	jmp    1c40 <fclose@plt>
    8c60:	mov    DWORD PTR [rbp+0x0],r12d
    8c64:	mov    eax,0xffffffff
    8c69:	jmp    8c30 <__cxa_finalize@plt+0x6cc0>
    8c6b:	nop    DWORD PTR [rax+rax*1+0x0]
    8c70:	test   rdi,rdi
    8c73:	push   rbx
    8c74:	mov    rbx,rdi
    8c77:	je     8c8a <__cxa_finalize@plt+0x6d1a>
    8c79:	call   1e20 <__freading@plt>
    8c7e:	test   eax,eax
    8c80:	je     8c8a <__cxa_finalize@plt+0x6d1a>
    8c82:	test   DWORD PTR [rbx],0x100
    8c88:	jne    8c98 <__cxa_finalize@plt+0x6d28>
    8c8a:	mov    rdi,rbx
    8c8d:	pop    rbx
    8c8e:	jmp    1de0 <fflush@plt>
    8c93:	nop    DWORD PTR [rax+rax*1+0x0]
    8c98:	mov    rdi,rbx
    8c9b:	mov    edx,0x1
    8ca0:	xor    esi,esi
    8ca2:	call   8cb0 <__cxa_finalize@plt+0x6d40>
    8ca7:	mov    rdi,rbx
    8caa:	pop    rbx
    8cab:	jmp    1de0 <fflush@plt>
    8cb0:	mov    rax,QWORD PTR [rdi+0x8]
    8cb4:	cmp    QWORD PTR [rdi+0x10],rax
    8cb8:	je     8cc0 <__cxa_finalize@plt+0x6d50>
    8cba:	jmp    1ec0 <fseeko@plt>
    8cbf:	nop
    8cc0:	mov    rax,QWORD PTR [rdi+0x20]
    8cc4:	cmp    QWORD PTR [rdi+0x28],rax
    8cc8:	jne    8cba <__cxa_finalize@plt+0x6d4a>
    8cca:	cmp    QWORD PTR [rdi+0x48],0x0
    8ccf:	jne    8cba <__cxa_finalize@plt+0x6d4a>
    8cd1:	push   r12
    8cd3:	push   rbp
    8cd4:	mov    r12d,edx
    8cd7:	push   rbx
    8cd8:	mov    rbp,rsi
    8cdb:	mov    rbx,rdi
    8cde:	call   1dc0 <fileno@plt>
    8ce3:	mov    edx,r12d
    8ce6:	mov    rsi,rbp
    8ce9:	mov    edi,eax
    8ceb:	call   1cf0 <lseek@plt>
    8cf0:	cmp    rax,0xffffffffffffffff
    8cf4:	je     8d02 <__cxa_finalize@plt+0x6d92>
    8cf6:	and    DWORD PTR [rbx],0xffffffef
    8cf9:	mov    QWORD PTR [rbx+0x90],rax
    8d00:	xor    eax,eax
    8d02:	pop    rbx
    8d03:	pop    rbp
    8d04:	pop    r12
    8d06:	ret    
    8d07:	nop    WORD PTR [rax+rax*1+0x0]
    8d10:	push   r13
    8d12:	push   r12
    8d14:	mov    r13,rsi
    8d17:	push   rbp
    8d18:	push   rbx
    8d19:	mov    rbx,rdi
    8d1c:	mov    r12,rdx
    8d1f:	sub    rsp,0x18
    8d23:	mov    rax,QWORD PTR fs:0x28
    8d2c:	mov    QWORD PTR [rsp+0x8],rax
    8d31:	xor    eax,eax
    8d33:	lea    rax,[rsp+0x4]
    8d38:	test   rdi,rdi
    8d3b:	cmove  rbx,rax
    8d3f:	mov    rdi,rbx
    8d42:	call   1cb0 <mbrtowc@plt>
    8d47:	cmp    rax,0xfffffffffffffffd
    8d4b:	mov    rbp,rax
    8d4e:	jbe    8d70 <__cxa_finalize@plt+0x6e00>
    8d50:	test   r12,r12
    8d53:	je     8d70 <__cxa_finalize@plt+0x6e00>
    8d55:	xor    edi,edi
    8d57:	call   8f40 <__cxa_finalize@plt+0x6fd0>
    8d5c:	test   al,al
    8d5e:	jne    8d70 <__cxa_finalize@plt+0x6e00>
    8d60:	movzx  eax,BYTE PTR [r13+0x0]
    8d65:	mov    ebp,0x1
    8d6a:	mov    DWORD PTR [rbx],eax
    8d6c:	nop    DWORD PTR [rax+0x0]
    8d70:	mov    rdx,QWORD PTR [rsp+0x8]
    8d75:	xor    rdx,QWORD PTR fs:0x28
    8d7e:	mov    rax,rbp
    8d81:	jne    8d8e <__cxa_finalize@plt+0x6e1e>
    8d83:	add    rsp,0x18
    8d87:	pop    rbx
    8d88:	pop    rbp
    8d89:	pop    r12
    8d8b:	pop    r13
    8d8d:	ret    
    8d8e:	call   1c90 <__stack_chk_fail@plt>
    8d93:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8d9d:	nop    DWORD PTR [rax]
    8da0:	push   r13
    8da2:	push   r12
    8da4:	mov    rax,rsi
    8da7:	push   rbp
    8da8:	push   rbx
    8da9:	mov    r13,rdi
    8dac:	sub    rsp,0x7f8
    8db3:	lea    r12,[rsp+0x10]
    8db8:	lea    rsi,[rsp+0x8]
    8dbd:	mov    QWORD PTR [rsp+0x8],0x7d0
    8dc6:	mov    rcx,QWORD PTR fs:0x28
    8dcf:	mov    QWORD PTR [rsp+0x7e8],rcx
    8dd7:	xor    ecx,ecx
    8dd9:	mov    rdi,r12
    8ddc:	mov    rcx,rdx
    8ddf:	mov    rdx,rax
    8de2:	call   9400 <__cxa_finalize@plt+0x7490>
    8de7:	test   rax,rax
    8dea:	mov    rbx,QWORD PTR [rsp+0x8]
    8def:	je     8e7e <__cxa_finalize@plt+0x6f0e>
    8df5:	mov    rcx,r13
    8df8:	mov    rdx,rbx
    8dfb:	mov    esi,0x1
    8e00:	mov    rdi,rax
    8e03:	mov    rbp,rax
    8e06:	call   1f10 <fwrite@plt>
    8e0b:	cmp    rax,rbx
    8e0e:	jb     8e50 <__cxa_finalize@plt+0x6ee0>
    8e10:	cmp    rbp,r12
    8e13:	je     8e1d <__cxa_finalize@plt+0x6ead>
    8e15:	mov    rdi,rbp
    8e18:	call   1b80 <free@plt>
    8e1d:	cmp    rbx,0x7fffffff
    8e24:	ja     8e73 <__cxa_finalize@plt+0x6f03>
    8e26:	mov    rcx,QWORD PTR [rsp+0x7e8]
    8e2e:	xor    rcx,QWORD PTR fs:0x28
    8e37:	mov    eax,ebx
    8e39:	jne    8e8d <__cxa_finalize@plt+0x6f1d>
    8e3b:	add    rsp,0x7f8
    8e42:	pop    rbx
    8e43:	pop    rbp
    8e44:	pop    r12
    8e46:	pop    r13
    8e48:	ret    
    8e49:	nop    DWORD PTR [rax+0x0]
    8e50:	cmp    rbp,r12
    8e53:	mov    ebx,0xffffffff
    8e58:	je     8e26 <__cxa_finalize@plt+0x6eb6>
    8e5a:	call   1ba0 <__errno_location@plt>
    8e5f:	mov    r13d,DWORD PTR [rax]
    8e62:	mov    r12,rax
    8e65:	mov    rdi,rbp
    8e68:	call   1b80 <free@plt>
    8e6d:	mov    DWORD PTR [r12],r13d
    8e71:	jmp    8e26 <__cxa_finalize@plt+0x6eb6>
    8e73:	call   1ba0 <__errno_location@plt>
    8e78:	mov    DWORD PTR [rax],0x4b
    8e7e:	mov    rdi,r13
    8e81:	mov    ebx,0xffffffff
    8e86:	call   93f0 <__cxa_finalize@plt+0x7480>
    8e8b:	jmp    8e26 <__cxa_finalize@plt+0x6eb6>
    8e8d:	call   1c90 <__stack_chk_fail@plt>
    8e92:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8e9c:	nop    DWORD PTR [rax+0x0]
    8ea0:	mov    rdx,rsi
    8ea3:	mov    rsi,rdi
    8ea6:	mov    rdi,QWORD PTR [rip+0x2071fb]        # 2100a8 <stdout@@GLIBC_2.2.5>
    8ead:	jmp    8da0 <__cxa_finalize@plt+0x6e30>
    8eb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8ebc:	nop    DWORD PTR [rax+0x0]
    8ec0:	push   r12
    8ec2:	push   rbp
    8ec3:	mov    rbp,rdi
    8ec6:	push   rbx
    8ec7:	call   1bd0 <__fpending@plt>
    8ecc:	mov    ebx,DWORD PTR [rbp+0x0]
    8ecf:	mov    rdi,rbp
    8ed2:	mov    r12,rax
    8ed5:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    8eda:	and    ebx,0x20
    8edd:	test   ebx,ebx
    8edf:	jne    8ef8 <__cxa_finalize@plt+0x6f88>
    8ee1:	test   eax,eax
    8ee3:	je     8eef <__cxa_finalize@plt+0x6f7f>
    8ee5:	test   r12,r12
    8ee8:	mov    eax,0xffffffff
    8eed:	je     8f28 <__cxa_finalize@plt+0x6fb8>
    8eef:	pop    rbx
    8ef0:	pop    rbp
    8ef1:	pop    r12
    8ef3:	ret    
    8ef4:	nop    DWORD PTR [rax+0x0]
    8ef8:	test   eax,eax
    8efa:	jne    8f18 <__cxa_finalize@plt+0x6fa8>
    8efc:	call   1ba0 <__errno_location@plt>
    8f01:	mov    DWORD PTR [rax],0x0
    8f07:	mov    eax,0xffffffff
    8f0c:	pop    rbx
    8f0d:	pop    rbp
    8f0e:	pop    r12
    8f10:	ret    
    8f11:	nop    DWORD PTR [rax+0x0]
    8f18:	pop    rbx
    8f19:	mov    eax,0xffffffff
    8f1e:	pop    rbp
    8f1f:	pop    r12
    8f21:	ret    
    8f22:	nop    WORD PTR [rax+rax*1+0x0]
    8f28:	call   1ba0 <__errno_location@plt>
    8f2d:	cmp    DWORD PTR [rax],0x9
    8f30:	pop    rbx
    8f31:	pop    rbp
    8f32:	pop    r12
    8f34:	setne  al
    8f37:	movzx  eax,al
    8f3a:	neg    eax
    8f3c:	ret    
    8f3d:	nop    DWORD PTR [rax]
    8f40:	sub    rsp,0x8
    8f44:	xor    esi,esi
    8f46:	call   1e60 <setlocale@plt>
    8f4b:	mov    rdx,rax
    8f4e:	mov    eax,0x1
    8f53:	test   rdx,rdx
    8f56:	je     8f77 <__cxa_finalize@plt+0x7007>
    8f58:	lea    rdi,[rip+0x4b04]        # da63 <version_etc_copyright@@Base+0x1e3>
    8f5f:	mov    ecx,0x2
    8f64:	mov    rsi,rdx
    8f67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8f69:	seta   sil
    8f6d:	setb   cl
    8f70:	xor    eax,eax
    8f72:	cmp    sil,cl
    8f75:	jne    8f80 <__cxa_finalize@plt+0x7010>
    8f77:	add    rsp,0x8
    8f7b:	ret    
    8f7c:	nop    DWORD PTR [rax+0x0]
    8f80:	lea    rdi,[rip+0x4ade]        # da65 <version_etc_copyright@@Base+0x1e5>
    8f87:	mov    ecx,0x6
    8f8c:	mov    rsi,rdx
    8f8f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8f91:	setne  al
    8f94:	add    rsp,0x8
    8f98:	ret    
    8f99:	nop    DWORD PTR [rax+0x0]
    8fa0:	push   r15
    8fa2:	push   r14
    8fa4:	mov    edi,0xe
    8fa9:	push   r13
    8fab:	push   r12
    8fad:	push   rbp
    8fae:	push   rbx
    8faf:	sub    rsp,0xa8
    8fb6:	mov    rax,QWORD PTR fs:0x28
    8fbf:	mov    QWORD PTR [rsp+0x98],rax
    8fc7:	xor    eax,eax
    8fc9:	call   1df0 <nl_langinfo@plt>
    8fce:	mov    r15,QWORD PTR [rip+0x2073a3]        # 210378 <program_name@@Base+0x140>
    8fd5:	test   rax,rax
    8fd8:	mov    rbx,rax
    8fdb:	lea    rax,[rip+0x45bf]        # d5a1 <quoting_style_vals@@Base+0x81>
    8fe2:	cmove  rbx,rax
    8fe6:	test   r15,r15
    8fe9:	jne    900a <__cxa_finalize@plt+0x709a>
    8feb:	jmp    9080 <__cxa_finalize@plt+0x7110>
    8ff0:	mov    rdi,r15
    8ff3:	call   1c80 <strlen@plt>
    8ff8:	lea    rbp,[r15+rax*1+0x1]
    8ffd:	mov    rdi,rbp
    9000:	call   1c80 <strlen@plt>
    9005:	lea    r15,[rbp+rax*1+0x1]
    900a:	movzx  ebp,BYTE PTR [r15]
    900e:	test   bpl,bpl
    9011:	je     903c <__cxa_finalize@plt+0x70cc>
    9013:	mov    rsi,r15
    9016:	mov    rdi,rbx
    9019:	call   1da0 <strcmp@plt>
    901e:	test   eax,eax
    9020:	je     902f <__cxa_finalize@plt+0x70bf>
    9022:	cmp    bpl,0x2a
    9026:	jne    8ff0 <__cxa_finalize@plt+0x7080>
    9028:	cmp    BYTE PTR [r15+0x1],0x0
    902d:	jne    8ff0 <__cxa_finalize@plt+0x7080>
    902f:	mov    rdi,r15
    9032:	call   1c80 <strlen@plt>
    9037:	lea    rbx,[r15+rax*1+0x1]
    903c:	cmp    BYTE PTR [rbx],0x0
    903f:	lea    rax,[rip+0x4a25]        # da6b <version_etc_copyright@@Base+0x1eb>
    9046:	cmove  rbx,rax
    904a:	mov    rcx,QWORD PTR [rsp+0x98]
    9052:	xor    rcx,QWORD PTR fs:0x28
    905b:	mov    rax,rbx
    905e:	jne    93dc <__cxa_finalize@plt+0x746c>
    9064:	add    rsp,0xa8
    906b:	pop    rbx
    906c:	pop    rbp
    906d:	pop    r12
    906f:	pop    r13
    9071:	pop    r14
    9073:	pop    r15
    9075:	ret    
    9076:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9080:	lea    rdi,[rip+0x4a04]        # da8b <version_etc_copyright@@Base+0x20b>
    9087:	call   1b60 <getenv@plt>
    908c:	test   rax,rax
    908f:	mov    r13,rax
    9092:	je     90e0 <__cxa_finalize@plt+0x7170>
    9094:	cmp    BYTE PTR [rax],0x0
    9097:	je     90e0 <__cxa_finalize@plt+0x7170>
    9099:	mov    rdi,rax
    909c:	call   1c80 <strlen@plt>
    90a1:	test   rax,rax
    90a4:	mov    r12,rax
    90a7:	mov    r14,rax
    90aa:	jne    93cb <__cxa_finalize@plt+0x745b>
    90b0:	mov    edi,0xe
    90b5:	call   1dd0 <malloc@plt>
    90ba:	test   rax,rax
    90bd:	mov    rbp,rax
    90c0:	jne    9168 <__cxa_finalize@plt+0x71f8>
    90c6:	lea    r15,[rip+0x44d4]        # d5a1 <quoting_style_vals@@Base+0x81>
    90cd:	mov    QWORD PTR [rip+0x2072a4],r15        # 210378 <program_name@@Base+0x140>
    90d4:	jmp    900a <__cxa_finalize@plt+0x709a>
    90d9:	nop    DWORD PTR [rax+0x0]
    90e0:	lea    r13,[rip+0x498a]        # da71 <version_etc_copyright@@Base+0x1f1>
    90e7:	mov    edi,0x28
    90ec:	mov    r12d,0x1a
    90f2:	mov    r14d,0x19
    90f8:	call   1dd0 <malloc@plt>
    90fd:	test   rax,rax
    9100:	mov    rbp,rax
    9103:	je     90c6 <__cxa_finalize@plt+0x7156>
    9105:	mov    rdx,r14
    9108:	mov    rsi,r13
    910b:	mov    rdi,rbp
    910e:	call   1db0 <memcpy@plt>
    9113:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    9119:	add    r12,rbp
    911c:	movabs rax,0x2e74657372616863
    9126:	mov    esi,0x20000
    912b:	mov    QWORD PTR [r12],rax
    912f:	mov    eax,0x73
    9134:	mov    DWORD PTR [r12+0x8],0x61696c61
    913d:	mov    WORD PTR [r12+0xc],ax
    9143:	mov    rdi,rbp
    9146:	xor    eax,eax
    9148:	call   1eb0 <open@plt>
    914d:	test   eax,eax
    914f:	mov    r12d,eax
    9152:	jns    9178 <__cxa_finalize@plt+0x7208>
    9154:	lea    r15,[rip+0x4446]        # d5a1 <quoting_style_vals@@Base+0x81>
    915b:	mov    rdi,rbp
    915e:	call   1b80 <free@plt>
    9163:	jmp    90cd <__cxa_finalize@plt+0x715d>
    9168:	mov    rdx,r14
    916b:	mov    rsi,r13
    916e:	mov    rdi,rbp
    9171:	call   1db0 <memcpy@plt>
    9176:	jmp    9119 <__cxa_finalize@plt+0x71a9>
    9178:	lea    rsi,[rip+0x23f6]        # b575 <_IO_stdin_used@@Base+0x95>
    917f:	mov    edi,eax
    9181:	xor    r15d,r15d
    9184:	call   1e50 <fdopen@plt>
    9189:	test   rax,rax
    918c:	mov    r14,rax
    918f:	mov    QWORD PTR [rsp],0x0
    9197:	je     9373 <__cxa_finalize@plt+0x7403>
    919d:	lea    rax,[rsp+0x60]
    91a2:	mov    QWORD PTR [rsp+0x8],rax
    91a7:	lea    rax,[rsp+0x20]
    91ac:	mov    QWORD PTR [rsp+0x10],rax
    91b1:	mov    rax,QWORD PTR [r14+0x8]
    91b5:	cmp    rax,QWORD PTR [r14+0x10]
    91b9:	jae    930a <__cxa_finalize@plt+0x739a>
    91bf:	lea    rdx,[rax+0x1]
    91c3:	mov    QWORD PTR [r14+0x8],rdx
    91c7:	movzx  edi,BYTE PTR [rax]
    91ca:	lea    eax,[rdi-0x9]
    91cd:	cmp    eax,0x1
    91d0:	jbe    91b1 <__cxa_finalize@plt+0x7241>
    91d2:	cmp    edi,0x20
    91d5:	je     91b1 <__cxa_finalize@plt+0x7241>
    91d7:	cmp    edi,0x23
    91da:	je     9359 <__cxa_finalize@plt+0x73e9>
    91e0:	mov    rsi,r14
    91e3:	call   1e00 <ungetc@plt>
    91e8:	mov    r13,QWORD PTR [rsp+0x10]
    91ed:	mov    rcx,QWORD PTR [rsp+0x8]
    91f2:	lea    rsi,[rip+0x48a2]        # da9b <version_etc_copyright@@Base+0x21b>
    91f9:	xor    eax,eax
    91fb:	mov    rdi,r14
    91fe:	mov    rdx,r13
    9201:	call   1d40 <fscanf@plt>
    9206:	cmp    eax,0x1
    9209:	jle    931d <__cxa_finalize@plt+0x73ad>
    920f:	mov    rdx,r13
    9212:	mov    ecx,DWORD PTR [rdx]
    9214:	add    rdx,0x4
    9218:	lea    eax,[rcx-0x1010101]
    921e:	not    ecx
    9220:	and    eax,ecx
    9222:	and    eax,0x80808080
    9227:	je     9212 <__cxa_finalize@plt+0x72a2>
    9229:	mov    ecx,eax
    922b:	mov    r13,QWORD PTR [rsp+0x8]
    9230:	shr    ecx,0x10
    9233:	test   eax,0x8080
    9238:	cmove  eax,ecx
    923b:	lea    rcx,[rdx+0x2]
    923f:	cmove  rdx,rcx
    9243:	mov    ecx,eax
    9245:	add    cl,al
    9247:	sbb    rdx,0x3
    924b:	sub    rdx,QWORD PTR [rsp+0x10]
    9250:	mov    esi,DWORD PTR [r13+0x0]
    9254:	add    r13,0x4
    9258:	lea    eax,[rsi-0x1010101]
    925e:	not    esi
    9260:	and    eax,esi
    9262:	and    eax,0x80808080
    9267:	je     9250 <__cxa_finalize@plt+0x72e0>
    9269:	mov    esi,eax
    926b:	mov    QWORD PTR [rsp+0x18],rdx
    9270:	shr    esi,0x10
    9273:	test   eax,0x8080
    9278:	cmove  eax,esi
    927b:	lea    rsi,[r13+0x2]
    927f:	mov    ecx,eax
    9281:	cmove  r13,rsi
    9285:	add    cl,al
    9287:	sbb    r13,0x3
    928b:	sub    r13,QWORD PTR [rsp+0x8]
    9290:	cmp    QWORD PTR [rsp],0x0
    9295:	lea    rax,[rdx+r13*1]
    9299:	jne    938a <__cxa_finalize@plt+0x741a>
    929f:	lea    rcx,[rax+0x2]
    92a3:	lea    rdi,[rax+0x3]
    92a7:	mov    QWORD PTR [rsp],rcx
    92ab:	call   1dd0 <malloc@plt>
    92b0:	mov    rdx,QWORD PTR [rsp+0x18]
    92b5:	mov    r12,rax
    92b8:	test   r12,r12
    92bb:	je     93af <__cxa_finalize@plt+0x743f>
    92c1:	mov    r15,QWORD PTR [rsp]
    92c5:	mov    rdi,0xfffffffffffffffe
    92cc:	mov    rsi,QWORD PTR [rsp+0x10]
    92d1:	sub    rdi,rdx
    92d4:	add    rdx,0x1
    92d8:	sub    r15,r13
    92db:	add    rdi,r15
    92de:	add    rdi,r12
    92e1:	call   1db0 <memcpy@plt>
    92e6:	mov    rsi,QWORD PTR [rsp+0x8]
    92eb:	lea    rdi,[r12+r15*1-0x1]
    92f0:	lea    rdx,[r13+0x1]
    92f4:	mov    r15,r12
    92f7:	call   1db0 <memcpy@plt>
    92fc:	mov    rax,QWORD PTR [r14+0x8]
    9300:	cmp    rax,QWORD PTR [r14+0x10]
    9304:	jb     91bf <__cxa_finalize@plt+0x724f>
    930a:	mov    rdi,r14
    930d:	call   1b50 <__uflow@plt>
    9312:	cmp    eax,0xffffffff
    9315:	mov    edi,eax
    9317:	jne    91ca <__cxa_finalize@plt+0x725a>
    931d:	mov    rdi,r14
    9320:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    9325:	mov    rax,QWORD PTR [rsp]
    9329:	test   rax,rax
    932c:	je     9154 <__cxa_finalize@plt+0x71e4>
    9332:	mov    BYTE PTR [r15+rax*1],0x0
    9337:	jmp    915b <__cxa_finalize@plt+0x71eb>
    933c:	nop    DWORD PTR [rax+0x0]
    9340:	lea    rdx,[rax+0x1]
    9344:	mov    QWORD PTR [r14+0x8],rdx
    9348:	movzx  eax,BYTE PTR [rax]
    934b:	mov    edx,0x1
    9350:	cmp    eax,0xa
    9353:	je     9380 <__cxa_finalize@plt+0x7410>
    9355:	test   dl,dl
    9357:	je     9380 <__cxa_finalize@plt+0x7410>
    9359:	mov    rax,QWORD PTR [r14+0x8]
    935d:	cmp    rax,QWORD PTR [r14+0x10]
    9361:	jb     9340 <__cxa_finalize@plt+0x73d0>
    9363:	mov    rdi,r14
    9366:	call   1b50 <__uflow@plt>
    936b:	cmp    eax,0xffffffff
    936e:	setne  dl
    9371:	jmp    9350 <__cxa_finalize@plt+0x73e0>
    9373:	mov    edi,r12d
    9376:	call   1d60 <close@plt>
    937b:	jmp    9154 <__cxa_finalize@plt+0x71e4>
    9380:	cmp    eax,0xffffffff
    9383:	je     931d <__cxa_finalize@plt+0x73ad>
    9385:	jmp    91b1 <__cxa_finalize@plt+0x7241>
    938a:	add    rax,QWORD PTR [rsp]
    938e:	mov    rdi,r15
    9391:	lea    rcx,[rax+0x2]
    9395:	lea    rsi,[rax+0x3]
    9399:	mov    QWORD PTR [rsp],rcx
    939d:	call   1e40 <realloc@plt>
    93a2:	mov    rdx,QWORD PTR [rsp+0x18]
    93a7:	mov    r12,rax
    93aa:	jmp    92b8 <__cxa_finalize@plt+0x7348>
    93af:	mov    rdi,r15
    93b2:	lea    r15,[rip+0x41e8]        # d5a1 <quoting_style_vals@@Base+0x81>
    93b9:	call   1b80 <free@plt>
    93be:	mov    rdi,r14
    93c1:	call   8bf0 <__cxa_finalize@plt+0x6c80>
    93c6:	jmp    915b <__cxa_finalize@plt+0x71eb>
    93cb:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    93d1:	jne    93e1 <__cxa_finalize@plt+0x7471>
    93d3:	lea    rdi,[rax+0xe]
    93d7:	jmp    90b5 <__cxa_finalize@plt+0x7145>
    93dc:	call   1c90 <__stack_chk_fail@plt>
    93e1:	lea    rdi,[rax+0xf]
    93e5:	add    r12,0x1
    93e9:	jmp    90f8 <__cxa_finalize@plt+0x7188>
    93ee:	xchg   ax,ax
    93f0:	or     DWORD PTR [rdi],0x20
    93f3:	ret    
    93f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
    93fe:	xchg   ax,ax
    9400:	push   rbp
    9401:	mov    rbp,rsp
    9404:	push   r15
    9406:	push   r14
    9408:	push   r13
    940a:	push   r12
    940c:	lea    r14,[rbp-0x3b0]
    9413:	push   rbx
    9414:	mov    rbx,rdx
    9417:	mov    r12,rcx
    941a:	mov    rdx,r14
    941d:	sub    rsp,0x408
    9424:	mov    QWORD PTR [rbp-0x418],rsi
    942b:	lea    rsi,[rbp-0x2c0]
    9432:	mov    QWORD PTR [rbp-0x3e8],rdi
    9439:	mov    rdi,rbx
    943c:	mov    QWORD PTR [rbp-0x410],r14
    9443:	mov    rax,QWORD PTR fs:0x28
    944c:	mov    QWORD PTR [rbp-0x38],rax
    9450:	xor    eax,eax
    9452:	mov    QWORD PTR [rbp-0x408],rsi
    9459:	call   a720 <__cxa_finalize@plt+0x87b0>
    945e:	test   eax,eax
    9460:	js     a2c8 <__cxa_finalize@plt+0x8358>
    9466:	mov    rsi,r14
    9469:	mov    rdi,r12
    946c:	call   a520 <__cxa_finalize@plt+0x85b0>
    9471:	test   eax,eax
    9473:	js     a330 <__cxa_finalize@plt+0x83c0>
    9479:	mov    rax,QWORD PTR [rbp-0x2b0]
    9480:	mov    rdx,0xffffffffffffffff
    9487:	add    rax,0x7
    948b:	cmp    rax,0x6
    948f:	cmovbe rax,rdx
    9493:	add    rax,QWORD PTR [rbp-0x2a8]
    949a:	jb     95a0 <__cxa_finalize@plt+0x7630>
    94a0:	mov    rdi,rax
    94a3:	xor    r8d,r8d
    94a6:	add    rdi,0x6
    94aa:	setb   r8b
    94ae:	jb     95a0 <__cxa_finalize@plt+0x7630>
    94b4:	cmp    rdi,0xf9f
    94bb:	jbe    9620 <__cxa_finalize@plt+0x76b0>
    94c1:	cmp    rdi,0xffffffffffffffff
    94c5:	mov    QWORD PTR [rbp-0x3c8],r8
    94cc:	je     95a0 <__cxa_finalize@plt+0x7630>
    94d2:	call   1dd0 <malloc@plt>
    94d7:	test   rax,rax
    94da:	mov    QWORD PTR [rbp-0x3d8],rax
    94e1:	je     95a0 <__cxa_finalize@plt+0x7630>
    94e7:	mov    r8,QWORD PTR [rbp-0x3c8]
    94ee:	mov    QWORD PTR [rbp-0x420],rax
    94f5:	xor    r12d,r12d
    94f8:	cmp    QWORD PTR [rbp-0x3e8],0x0
    9500:	je     950c <__cxa_finalize@plt+0x759c>
    9502:	mov    rax,QWORD PTR [rbp-0x418]
    9509:	mov    r12,QWORD PTR [rax]
    950c:	mov    r13,QWORD PTR [rbp-0x2b8]
    9513:	lea    rax,[rbp-0x3bc]
    951a:	mov    r15,QWORD PTR [rbp-0x3e8]
    9521:	mov    QWORD PTR [rbp-0x400],0x0
    952c:	mov    QWORD PTR [rbp-0x3f0],rax
    9533:	mov    rax,rbx
    9536:	mov    rbx,r8
    9539:	mov    rcx,QWORD PTR [r13+0x0]
    953d:	mov    r8,rax
    9540:	cmp    rcx,r8
    9543:	je     9ecd <__cxa_finalize@plt+0x7f5d>
    9549:	sub    rcx,r8
    954c:	mov    rax,rbx
    954f:	add    rax,rcx
    9552:	mov    r14,rax
    9555:	jae    9650 <__cxa_finalize@plt+0x76e0>
    955b:	cmp    r12,0xffffffffffffffff
    955f:	je     a030 <__cxa_finalize@plt+0x80c0>
    9565:	call   1ba0 <__errno_location@plt>
    956a:	mov    QWORD PTR [rbp-0x3c8],rax
    9571:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9578:	je     9583 <__cxa_finalize@plt+0x7613>
    957a:	test   r15,r15
    957d:	jne    a060 <__cxa_finalize@plt+0x80f0>
    9583:	mov    rax,QWORD PTR [rbp-0x420]
    958a:	test   rax,rax
    958d:	je     95a0 <__cxa_finalize@plt+0x7630>
    958f:	mov    rdi,rax
    9592:	call   1b80 <free@plt>
    9597:	jmp    95ac <__cxa_finalize@plt+0x763c>
    9599:	nop    DWORD PTR [rax+0x0]
    95a0:	call   1ba0 <__errno_location@plt>
    95a5:	mov    QWORD PTR [rbp-0x3c8],rax
    95ac:	mov    rax,QWORD PTR [rbp-0x408]
    95b3:	mov    rdi,QWORD PTR [rbp-0x2b8]
    95ba:	add    rax,0x20
    95be:	cmp    rdi,rax
    95c1:	je     95c8 <__cxa_finalize@plt+0x7658>
    95c3:	call   1b80 <free@plt>
    95c8:	mov    rax,QWORD PTR [rbp-0x410]
    95cf:	mov    rdi,QWORD PTR [rbp-0x3a8]
    95d6:	add    rax,0x10
    95da:	cmp    rdi,rax
    95dd:	je     95e4 <__cxa_finalize@plt+0x7674>
    95df:	call   1b80 <free@plt>
    95e4:	mov    rax,QWORD PTR [rbp-0x3c8]
    95eb:	xor    r15d,r15d
    95ee:	mov    DWORD PTR [rax],0xc
    95f4:	mov    rdi,QWORD PTR [rbp-0x38]
    95f8:	xor    rdi,QWORD PTR fs:0x28
    9601:	mov    rax,r15
    9604:	jne    a4f7 <__cxa_finalize@plt+0x8587>
    960a:	lea    rsp,[rbp-0x28]
    960e:	pop    rbx
    960f:	pop    r12
    9611:	pop    r13
    9613:	pop    r14
    9615:	pop    r15
    9617:	pop    rbp
    9618:	ret    
    9619:	nop    DWORD PTR [rax+0x0]
    9620:	add    rax,0x24
    9624:	mov    QWORD PTR [rbp-0x420],0x0
    962f:	and    rax,0xfffffffffffffff0
    9633:	sub    rsp,rax
    9636:	lea    rax,[rsp+0xf]
    963b:	and    rax,0xfffffffffffffff0
    963f:	mov    QWORD PTR [rbp-0x3d8],rax
    9646:	jmp    94f5 <__cxa_finalize@plt+0x7585>
    964b:	nop    DWORD PTR [rax+rax*1+0x0]
    9650:	cmp    r12,rax
    9653:	jae    96bc <__cxa_finalize@plt+0x774c>
    9655:	test   r12,r12
    9658:	jne    9f70 <__cxa_finalize@plt+0x8000>
    965e:	cmp    rax,0xc
    9662:	ja     9f82 <__cxa_finalize@plt+0x8012>
    9668:	mov    r12d,0xc
    966e:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9675:	sete   dl
    9678:	test   r15,r15
    967b:	je     9fa8 <__cxa_finalize@plt+0x8038>
    9681:	test   dl,dl
    9683:	jne    9fa8 <__cxa_finalize@plt+0x8038>
    9689:	mov    rsi,r12
    968c:	mov    rdi,r15
    968f:	mov    QWORD PTR [rbp-0x3d0],r8
    9696:	mov    QWORD PTR [rbp-0x3c8],rcx
    969d:	call   1e40 <realloc@plt>
    96a2:	test   rax,rax
    96a5:	mov    rcx,QWORD PTR [rbp-0x3c8]
    96ac:	mov    r8,QWORD PTR [rbp-0x3d0]
    96b3:	je     a04b <__cxa_finalize@plt+0x80db>
    96b9:	mov    r15,rax
    96bc:	lea    rdi,[r15+rbx*1]
    96c0:	mov    rdx,rcx
    96c3:	mov    rsi,r8
    96c6:	call   1db0 <memcpy@plt>
    96cb:	mov    rax,QWORD PTR [rbp-0x400]
    96d2:	cmp    QWORD PTR [rbp-0x2c0],rax
    96d9:	je     a37b <__cxa_finalize@plt+0x840b>
    96df:	movzx  edx,BYTE PTR [r13+0x48]
    96e4:	mov    rax,QWORD PTR [r13+0x50]
    96e8:	cmp    dl,0x25
    96eb:	je     9e88 <__cxa_finalize@plt+0x7f18>
    96f1:	cmp    rax,0xffffffffffffffff
    96f5:	je     a326 <__cxa_finalize@plt+0x83b6>
    96fb:	mov    r8,QWORD PTR [rbp-0x3a8]
    9702:	shl    rax,0x5
    9706:	add    rax,r8
    9709:	cmp    dl,0x6e
    970c:	mov    edi,DWORD PTR [rax]
    970e:	mov    DWORD PTR [rbp-0x3d0],edi
    9714:	je     9ee0 <__cxa_finalize@plt+0x7f70>
    971a:	mov    eax,DWORD PTR [r13+0x10]
    971e:	mov    rdi,QWORD PTR [rbp-0x3d8]
    9725:	test   al,0x1
    9727:	mov    BYTE PTR [rdi],0x25
    972a:	lea    rbx,[rdi+0x1]
    972e:	je     973f <__cxa_finalize@plt+0x77cf>
    9730:	mov    rdi,QWORD PTR [rbp-0x3d8]
    9737:	lea    rbx,[rdi+0x2]
    973b:	mov    BYTE PTR [rdi+0x1],0x27
    973f:	test   al,0x2
    9741:	je     974a <__cxa_finalize@plt+0x77da>
    9743:	mov    BYTE PTR [rbx],0x2d
    9746:	add    rbx,0x1
    974a:	test   al,0x4
    974c:	je     9755 <__cxa_finalize@plt+0x77e5>
    974e:	mov    BYTE PTR [rbx],0x2b
    9751:	add    rbx,0x1
    9755:	test   al,0x8
    9757:	je     9760 <__cxa_finalize@plt+0x77f0>
    9759:	mov    BYTE PTR [rbx],0x20
    975c:	add    rbx,0x1
    9760:	test   al,0x10
    9762:	je     976b <__cxa_finalize@plt+0x77fb>
    9764:	mov    BYTE PTR [rbx],0x23
    9767:	add    rbx,0x1
    976b:	test   al,0x40
    976d:	je     9776 <__cxa_finalize@plt+0x7806>
    976f:	mov    BYTE PTR [rbx],0x49
    9772:	add    rbx,0x1
    9776:	test   al,0x20
    9778:	je     9781 <__cxa_finalize@plt+0x7811>
    977a:	mov    BYTE PTR [rbx],0x30
    977d:	add    rbx,0x1
    9781:	mov    rsi,QWORD PTR [r13+0x18]
    9785:	mov    rdx,QWORD PTR [r13+0x20]
    9789:	cmp    rsi,rdx
    978c:	je     97be <__cxa_finalize@plt+0x784e>
    978e:	mov    rcx,rdx
    9791:	mov    rdi,rbx
    9794:	mov    QWORD PTR [rbp-0x3e0],r8
    979b:	sub    rcx,rsi
    979e:	mov    rdx,rcx
    97a1:	mov    QWORD PTR [rbp-0x3c8],rcx
    97a8:	call   1db0 <memcpy@plt>
    97ad:	mov    rcx,QWORD PTR [rbp-0x3c8]
    97b4:	mov    r8,QWORD PTR [rbp-0x3e0]
    97bb:	add    rbx,rcx
    97be:	mov    rsi,QWORD PTR [r13+0x30]
    97c2:	mov    rdx,QWORD PTR [r13+0x38]
    97c6:	cmp    rsi,rdx
    97c9:	je     97fb <__cxa_finalize@plt+0x788b>
    97cb:	mov    rcx,rdx
    97ce:	mov    rdi,rbx
    97d1:	mov    QWORD PTR [rbp-0x3e0],r8
    97d8:	sub    rcx,rsi
    97db:	mov    rdx,rcx
    97de:	mov    QWORD PTR [rbp-0x3c8],rcx
    97e5:	call   1db0 <memcpy@plt>
    97ea:	mov    rcx,QWORD PTR [rbp-0x3c8]
    97f1:	mov    r8,QWORD PTR [rbp-0x3e0]
    97f8:	add    rbx,rcx
    97fb:	mov    edi,DWORD PTR [rbp-0x3d0]
    9801:	cmp    edi,0x10
    9804:	ja     9833 <__cxa_finalize@plt+0x78c3>
    9806:	mov    eax,0x1
    980b:	mov    ecx,edi
    980d:	shl    rax,cl
    9810:	test   eax,0x14180
    9815:	jne    982c <__cxa_finalize@plt+0x78bc>
    9817:	test   ah,0x10
    981a:	jne    a160 <__cxa_finalize@plt+0x81f0>
    9820:	test   ah,0x6
    9823:	je     9833 <__cxa_finalize@plt+0x78c3>
    9825:	mov    BYTE PTR [rbx],0x6c
    9828:	add    rbx,0x1
    982c:	mov    BYTE PTR [rbx],0x6c
    982f:	add    rbx,0x1
    9833:	movzx  eax,BYTE PTR [r13+0x48]
    9838:	mov    BYTE PTR [rbx+0x1],0x0
    983c:	mov    BYTE PTR [rbx],al
    983e:	mov    rax,QWORD PTR [r13+0x28]
    9842:	cmp    rax,0xffffffffffffffff
    9846:	je     9f60 <__cxa_finalize@plt+0x7ff0>
    984c:	shl    rax,0x5
    9850:	add    rax,r8
    9853:	cmp    DWORD PTR [rax],0x5
    9856:	jne    a326 <__cxa_finalize@plt+0x83b6>
    985c:	mov    eax,DWORD PTR [rax+0x10]
    985f:	mov    DWORD PTR [rbp-0x3e0],0x1
    9869:	mov    DWORD PTR [rbp-0x3b8],eax
    986f:	mov    rax,QWORD PTR [r13+0x40]
    9873:	cmp    rax,0xffffffffffffffff
    9877:	je     98a4 <__cxa_finalize@plt+0x7934>
    9879:	shl    rax,0x5
    987d:	add    r8,rax
    9880:	cmp    DWORD PTR [r8],0x5
    9884:	jne    a326 <__cxa_finalize@plt+0x83b6>
    988a:	mov    eax,DWORD PTR [rbp-0x3e0]
    9890:	mov    edx,DWORD PTR [r8+0x10]
    9894:	mov    DWORD PTR [rbp+rax*4-0x3b8],edx
    989b:	lea    eax,[rax+0x1]
    989e:	mov    DWORD PTR [rbp-0x3e0],eax
    98a4:	mov    rax,r14
    98a7:	xor    edx,edx
    98a9:	add    rax,0x2
    98ad:	jb     a4fc <__cxa_finalize@plt+0x858c>
    98b3:	cmp    r12,rax
    98b6:	jae    9903 <__cxa_finalize@plt+0x7993>
    98b8:	test   r12,r12
    98bb:	jne    a0c8 <__cxa_finalize@plt+0x8158>
    98c1:	cmp    rax,0xc
    98c5:	ja     a0e0 <__cxa_finalize@plt+0x8170>
    98cb:	mov    r12d,0xc
    98d1:	cmp    r15,QWORD PTR [rbp-0x3e8]
    98d8:	sete   dl
    98db:	test   r15,r15
    98de:	je     a110 <__cxa_finalize@plt+0x81a0>
    98e4:	test   dl,dl
    98e6:	jne    a110 <__cxa_finalize@plt+0x81a0>
    98ec:	mov    rsi,r12
    98ef:	mov    rdi,r15
    98f2:	call   1e40 <realloc@plt>
    98f7:	test   rax,rax
    98fa:	je     9565 <__cxa_finalize@plt+0x75f5>
    9900:	mov    r15,rax
    9903:	mov    BYTE PTR [r15+r14*1],0x0
    9908:	call   1ba0 <__errno_location@plt>
    990d:	mov    QWORD PTR [rbp-0x3c8],rax
    9914:	mov    eax,DWORD PTR [rax]
    9916:	mov    QWORD PTR [rbp-0x3f8],rbx
    991d:	mov    DWORD PTR [rbp-0x424],eax
    9923:	nop    DWORD PTR [rax+rax*1+0x0]
    9928:	mov    rax,QWORD PTR [rbp-0x3c8]
    992f:	mov    rbx,r12
    9932:	mov    r10d,0x7fffffff
    9938:	sub    rbx,r14
    993b:	mov    DWORD PTR [rbp-0x3bc],0xffffffff
    9945:	cmp    rbx,0x7fffffff
    994c:	mov    DWORD PTR [rax],0x0
    9952:	mov    eax,DWORD PTR [rbp-0x3d0]
    9958:	cmovbe r10,rbx
    995c:	cmp    eax,0x11
    995f:	ja     a326 <__cxa_finalize@plt+0x83b6>
    9965:	lea    rsi,[rip+0x413c]        # daa8 <version_etc_copyright@@Base+0x228>
    996c:	movsxd rax,DWORD PTR [rsi+rax*4]
    9970:	add    rax,rsi
    9973:	jmp    rax
    9975:	nop    DWORD PTR [rax]
    9978:	mov    rax,QWORD PTR [r13+0x50]
    997c:	lea    rdi,[r15+r14*1]
    9980:	shl    rax,0x5
    9984:	add    rax,QWORD PTR [rbp-0x3a8]
    998b:	mov    r9,QWORD PTR [rax+0x10]
    998f:	mov    eax,DWORD PTR [rbp-0x3e0]
    9995:	cmp    eax,0x1
    9998:	je     9e68 <__cxa_finalize@plt+0x7ef8>
    999e:	cmp    eax,0x2
    99a1:	je     9e50 <__cxa_finalize@plt+0x7ee0>
    99a7:	sub    rsp,0x8
    99ab:	push   QWORD PTR [rbp-0x3f0]
    99b1:	mov    r8,QWORD PTR [rbp-0x3d8]
    99b8:	mov    rsi,r10
    99bb:	mov    rcx,0xffffffffffffffff
    99c2:	mov    edx,0x1
    99c7:	xor    eax,eax
    99c9:	mov    QWORD PTR [rbp-0x430],r10
    99d0:	call   1b70 <__snprintf_chk@plt>
    99d5:	pop    rsi
    99d6:	pop    rdi
    99d7:	mov    r10,QWORD PTR [rbp-0x430]
    99de:	mov    ecx,DWORD PTR [rbp-0x3bc]
    99e4:	test   ecx,ecx
    99e6:	js     9b24 <__cxa_finalize@plt+0x7bb4>
    99ec:	movsxd rdx,ecx
    99ef:	cmp    rdx,r10
    99f2:	jae    9a02 <__cxa_finalize@plt+0x7a92>
    99f4:	add    rdx,r15
    99f7:	cmp    BYTE PTR [rdx+r14*1],0x0
    99fc:	jne    a326 <__cxa_finalize@plt+0x83b6>
    9a02:	cmp    ecx,eax
    9a04:	jge    9a0e <__cxa_finalize@plt+0x7a9e>
    9a06:	mov    DWORD PTR [rbp-0x3bc],eax
    9a0c:	mov    ecx,eax
    9a0e:	lea    eax,[rcx+0x1]
    9a11:	cmp    rax,r10
    9a14:	jb     a230 <__cxa_finalize@plt+0x82c0>
    9a1a:	cmp    rbx,0x7ffffffe
    9a21:	ja     a250 <__cxa_finalize@plt+0x82e0>
    9a27:	lea    rsi,[r12+r12*1]
    9a2b:	lea    edx,[rcx+0x2]
    9a2e:	test   r12,r12
    9a31:	mov    rax,0xffffffffffffffff
    9a38:	cmovns rax,rsi
    9a3c:	add    rdx,r14
    9a3f:	jb     a4e8 <__cxa_finalize@plt+0x8578>
    9a45:	cmp    rax,rdx
    9a48:	cmovb  rax,rdx
    9a4c:	cmp    r12,rax
    9a4f:	jae    9928 <__cxa_finalize@plt+0x79b8>
    9a55:	test   r12,r12
    9a58:	js     9571 <__cxa_finalize@plt+0x7601>
    9a5e:	cmp    rsi,rax
    9a61:	mov    r12,rsi
    9a64:	jae    9a73 <__cxa_finalize@plt+0x7b03>
    9a66:	cmp    rax,0xffffffffffffffff
    9a6a:	je     9571 <__cxa_finalize@plt+0x7601>
    9a70:	mov    r12,rax
    9a73:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9a7a:	sete   bl
    9a7d:	test   r15,r15
    9a80:	je     9e10 <__cxa_finalize@plt+0x7ea0>
    9a86:	test   bl,bl
    9a88:	jne    9e10 <__cxa_finalize@plt+0x7ea0>
    9a8e:	mov    rsi,r12
    9a91:	mov    rdi,r15
    9a94:	call   1e40 <realloc@plt>
    9a99:	test   rax,rax
    9a9c:	je     9571 <__cxa_finalize@plt+0x7601>
    9aa2:	mov    r15,rax
    9aa5:	jmp    9928 <__cxa_finalize@plt+0x79b8>
    9aaa:	nop    WORD PTR [rax+rax*1+0x0]
    9ab0:	mov    rax,QWORD PTR [r13+0x50]
    9ab4:	lea    rdi,[r15+r14*1]
    9ab8:	shl    rax,0x5
    9abc:	add    rax,QWORD PTR [rbp-0x3a8]
    9ac3:	mov    r9d,DWORD PTR [rax+0x10]
    9ac7:	mov    eax,DWORD PTR [rbp-0x3e0]
    9acd:	cmp    eax,0x1
    9ad0:	je     9d10 <__cxa_finalize@plt+0x7da0>
    9ad6:	cmp    eax,0x2
    9ad9:	je     9d58 <__cxa_finalize@plt+0x7de8>
    9adf:	sub    rsp,0x8
    9ae3:	push   QWORD PTR [rbp-0x3f0]
    9ae9:	mov    r8,QWORD PTR [rbp-0x3d8]
    9af0:	mov    rcx,0xffffffffffffffff
    9af7:	mov    edx,0x1
    9afc:	mov    rsi,r10
    9aff:	xor    eax,eax
    9b01:	mov    QWORD PTR [rbp-0x430],r10
    9b08:	call   1b70 <__snprintf_chk@plt>
    9b0d:	pop    rdx
    9b0e:	pop    rcx
    9b0f:	mov    ecx,DWORD PTR [rbp-0x3bc]
    9b15:	mov    r10,QWORD PTR [rbp-0x430]
    9b1c:	test   ecx,ecx
    9b1e:	jns    99ec <__cxa_finalize@plt+0x7a7c>
    9b24:	mov    rdi,QWORD PTR [rbp-0x3f8]
    9b2b:	cmp    BYTE PTR [rdi+0x1],0x0
    9b2f:	jne    9e78 <__cxa_finalize@plt+0x7f08>
    9b35:	test   eax,eax
    9b37:	jns    9a06 <__cxa_finalize@plt+0x7a96>
    9b3d:	mov    rax,QWORD PTR [rbp-0x3c8]
    9b44:	mov    ebx,DWORD PTR [rax]
    9b46:	test   ebx,ebx
    9b48:	jne    9b68 <__cxa_finalize@plt+0x7bf8>
    9b4a:	movzx  eax,BYTE PTR [r13+0x48]
    9b4f:	mov    ebx,0x16
    9b54:	and    eax,0xffffffef
    9b57:	cmp    al,0x63
    9b59:	mov    eax,0x54
    9b5e:	cmove  ebx,eax
    9b61:	nop    DWORD PTR [rax+0x0]
    9b68:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9b6f:	je     9b7a <__cxa_finalize@plt+0x7c0a>
    9b71:	test   r15,r15
    9b74:	jne    a30c <__cxa_finalize@plt+0x839c>
    9b7a:	mov    rax,QWORD PTR [rbp-0x420]
    9b81:	test   rax,rax
    9b84:	je     9b8e <__cxa_finalize@plt+0x7c1e>
    9b86:	mov    rdi,rax
    9b89:	call   1b80 <free@plt>
    9b8e:	mov    rax,QWORD PTR [rbp-0x408]
    9b95:	mov    rdi,QWORD PTR [rbp-0x2b8]
    9b9c:	add    rax,0x20
    9ba0:	cmp    rdi,rax
    9ba3:	je     9baa <__cxa_finalize@plt+0x7c3a>
    9ba5:	call   1b80 <free@plt>
    9baa:	mov    rax,QWORD PTR [rbp-0x410]
    9bb1:	mov    rdi,QWORD PTR [rbp-0x3a8]
    9bb8:	add    rax,0x10
    9bbc:	cmp    rdi,rax
    9bbf:	je     9bc6 <__cxa_finalize@plt+0x7c56>
    9bc1:	call   1b80 <free@plt>
    9bc6:	mov    rax,QWORD PTR [rbp-0x3c8]
    9bcd:	xor    r15d,r15d
    9bd0:	mov    DWORD PTR [rax],ebx
    9bd2:	jmp    95f4 <__cxa_finalize@plt+0x7684>
    9bd7:	nop    WORD PTR [rax+rax*1+0x0]
    9be0:	mov    rax,QWORD PTR [r13+0x50]
    9be4:	lea    rdi,[r15+r14*1]
    9be8:	shl    rax,0x5
    9bec:	add    rax,QWORD PTR [rbp-0x3a8]
    9bf3:	fld    TBYTE PTR [rax+0x10]
    9bf6:	mov    eax,DWORD PTR [rbp-0x3e0]
    9bfc:	cmp    eax,0x1
    9bff:	je     a210 <__cxa_finalize@plt+0x82a0>
    9c05:	cmp    eax,0x2
    9c08:	jne    a0b0 <__cxa_finalize@plt+0x8140>
    9c0e:	mov    eax,DWORD PTR [rbp-0x3b4]
    9c14:	sub    rsp,0x8
    9c18:	push   QWORD PTR [rbp-0x3f0]
    9c1e:	mov    r9d,DWORD PTR [rbp-0x3b8]
    9c25:	mov    r8,QWORD PTR [rbp-0x3d8]
    9c2c:	mov    rsi,r10
    9c2f:	sub    rsp,0x18
    9c33:	mov    rcx,0xffffffffffffffff
    9c3a:	mov    edx,0x1
    9c3f:	fstp   TBYTE PTR [rsp+0x8]
    9c43:	push   rax
    9c44:	xor    eax,eax
    9c46:	mov    QWORD PTR [rbp-0x430],r10
    9c4d:	call   1b70 <__snprintf_chk@plt>
    9c52:	add    rsp,0x30
    9c56:	mov    r10,QWORD PTR [rbp-0x430]
    9c5d:	jmp    99de <__cxa_finalize@plt+0x7a6e>
    9c62:	nop    WORD PTR [rax+rax*1+0x0]
    9c68:	mov    rax,QWORD PTR [r13+0x50]
    9c6c:	lea    rdi,[r15+r14*1]
    9c70:	shl    rax,0x5
    9c74:	add    rax,QWORD PTR [rbp-0x3a8]
    9c7b:	movsd  xmm0,QWORD PTR [rax+0x10]
    9c80:	mov    eax,DWORD PTR [rbp-0x3e0]
    9c86:	cmp    eax,0x1
    9c89:	je     a200 <__cxa_finalize@plt+0x8290>
    9c8f:	cmp    eax,0x2
    9c92:	jne    a070 <__cxa_finalize@plt+0x8100>
    9c98:	mov    eax,DWORD PTR [rbp-0x3b4]
    9c9e:	push   QWORD PTR [rbp-0x3f0]
    9ca4:	push   rax
    9ca5:	mov    r9d,DWORD PTR [rbp-0x3b8]
    9cac:	mov    r8,QWORD PTR [rbp-0x3d8]
    9cb3:	mov    rsi,r10
    9cb6:	mov    rcx,0xffffffffffffffff
    9cbd:	mov    edx,0x1
    9cc2:	mov    eax,0x1
    9cc7:	mov    QWORD PTR [rbp-0x430],r10
    9cce:	call   1b70 <__snprintf_chk@plt>
    9cd3:	pop    r8
    9cd5:	mov    r10,QWORD PTR [rbp-0x430]
    9cdc:	pop    r9
    9cde:	jmp    99de <__cxa_finalize@plt+0x7a6e>
    9ce3:	nop    DWORD PTR [rax+rax*1+0x0]
    9ce8:	mov    rax,QWORD PTR [r13+0x50]
    9cec:	lea    rdi,[r15+r14*1]
    9cf0:	shl    rax,0x5
    9cf4:	add    rax,QWORD PTR [rbp-0x3a8]
    9cfb:	movzx  r9d,WORD PTR [rax+0x10]
    9d00:	mov    eax,DWORD PTR [rbp-0x3e0]
    9d06:	cmp    eax,0x1
    9d09:	jne    9ad6 <__cxa_finalize@plt+0x7b66>
    9d0f:	nop
    9d10:	push   QWORD PTR [rbp-0x3f0]
    9d16:	push   r9
    9d18:	mov    r9d,DWORD PTR [rbp-0x3b8]
    9d1f:	jmp    9ae9 <__cxa_finalize@plt+0x7b79>
    9d24:	nop    DWORD PTR [rax+0x0]
    9d28:	mov    rax,QWORD PTR [r13+0x50]
    9d2c:	lea    rdi,[r15+r14*1]
    9d30:	shl    rax,0x5
    9d34:	add    rax,QWORD PTR [rbp-0x3a8]
    9d3b:	movsx  r9d,WORD PTR [rax+0x10]
    9d40:	mov    eax,DWORD PTR [rbp-0x3e0]
    9d46:	cmp    eax,0x1
    9d49:	je     9d10 <__cxa_finalize@plt+0x7da0>
    9d4b:	cmp    eax,0x2
    9d4e:	jne    9adf <__cxa_finalize@plt+0x7b6f>
    9d54:	nop    DWORD PTR [rax+0x0]
    9d58:	sub    rsp,0x8
    9d5c:	push   QWORD PTR [rbp-0x3f0]
    9d62:	push   r9
    9d64:	mov    eax,DWORD PTR [rbp-0x3b4]
    9d6a:	push   rax
    9d6b:	mov    r9d,DWORD PTR [rbp-0x3b8]
    9d72:	mov    r8,QWORD PTR [rbp-0x3d8]
    9d79:	mov    rsi,r10
    9d7c:	mov    rcx,0xffffffffffffffff
    9d83:	mov    edx,0x1
    9d88:	xor    eax,eax
    9d8a:	mov    QWORD PTR [rbp-0x430],r10
    9d91:	call   1b70 <__snprintf_chk@plt>
    9d96:	add    rsp,0x20
    9d9a:	mov    r10,QWORD PTR [rbp-0x430]
    9da1:	jmp    99de <__cxa_finalize@plt+0x7a6e>
    9da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9db0:	mov    rax,QWORD PTR [r13+0x50]
    9db4:	lea    rdi,[r15+r14*1]
    9db8:	shl    rax,0x5
    9dbc:	add    rax,QWORD PTR [rbp-0x3a8]
    9dc3:	movzx  r9d,BYTE PTR [rax+0x10]
    9dc8:	mov    eax,DWORD PTR [rbp-0x3e0]
    9dce:	cmp    eax,0x1
    9dd1:	jne    9ad6 <__cxa_finalize@plt+0x7b66>
    9dd7:	jmp    9d10 <__cxa_finalize@plt+0x7da0>
    9ddc:	nop    DWORD PTR [rax+0x0]
    9de0:	mov    rax,QWORD PTR [r13+0x50]
    9de4:	lea    rdi,[r15+r14*1]
    9de8:	shl    rax,0x5
    9dec:	add    rax,QWORD PTR [rbp-0x3a8]
    9df3:	movsx  r9d,BYTE PTR [rax+0x10]
    9df8:	mov    eax,DWORD PTR [rbp-0x3e0]
    9dfe:	cmp    eax,0x1
    9e01:	jne    9ad6 <__cxa_finalize@plt+0x7b66>
    9e07:	jmp    9d10 <__cxa_finalize@plt+0x7da0>
    9e0c:	nop    DWORD PTR [rax+0x0]
    9e10:	mov    rdi,r12
    9e13:	call   1dd0 <malloc@plt>
    9e18:	test   rax,rax
    9e1b:	mov    rcx,rax
    9e1e:	je     9571 <__cxa_finalize@plt+0x7601>
    9e24:	test   r14,r14
    9e27:	je     9ed8 <__cxa_finalize@plt+0x7f68>
    9e2d:	test   bl,bl
    9e2f:	je     9ed8 <__cxa_finalize@plt+0x7f68>
    9e35:	mov    rsi,r15
    9e38:	mov    rdx,r14
    9e3b:	mov    rdi,rax
    9e3e:	call   1db0 <memcpy@plt>
    9e43:	mov    r15,rax
    9e46:	jmp    9928 <__cxa_finalize@plt+0x79b8>
    9e4b:	nop    DWORD PTR [rax+rax*1+0x0]
    9e50:	sub    rsp,0x8
    9e54:	push   QWORD PTR [rbp-0x3f0]
    9e5a:	push   r9
    9e5c:	jmp    9d64 <__cxa_finalize@plt+0x7df4>
    9e61:	nop    DWORD PTR [rax+0x0]
    9e68:	push   QWORD PTR [rbp-0x3f0]
    9e6e:	push   r9
    9e70:	jmp    9d18 <__cxa_finalize@plt+0x7da8>
    9e75:	nop    DWORD PTR [rax]
    9e78:	mov    BYTE PTR [rdi+0x1],0x0
    9e7c:	jmp    9928 <__cxa_finalize@plt+0x79b8>
    9e81:	nop    DWORD PTR [rax+0x0]
    9e88:	cmp    rax,0xffffffffffffffff
    9e8c:	jne    a326 <__cxa_finalize@plt+0x83b6>
    9e92:	mov    rax,r14
    9e95:	add    rax,0x1
    9e99:	mov    rbx,rax
    9e9c:	jae    9f08 <__cxa_finalize@plt+0x7f98>
    9e9e:	cmp    r12,0xffffffffffffffff
    9ea2:	jne    9565 <__cxa_finalize@plt+0x75f5>
    9ea8:	mov    rbx,r12
    9eab:	mov    BYTE PTR [r15+r14*1],0x25
    9eb0:	mov    r8,QWORD PTR [r13+0x8]
    9eb4:	add    r13,0x58
    9eb8:	mov    rcx,QWORD PTR [r13+0x0]
    9ebc:	add    QWORD PTR [rbp-0x400],0x1
    9ec4:	cmp    rcx,r8
    9ec7:	jne    9549 <__cxa_finalize@plt+0x75d9>
    9ecd:	mov    r14,rbx
    9ed0:	jmp    96cb <__cxa_finalize@plt+0x775b>
    9ed5:	nop    DWORD PTR [rax]
    9ed8:	mov    r15,rcx
    9edb:	jmp    9928 <__cxa_finalize@plt+0x79b8>
    9ee0:	mov    edx,edi
    9ee2:	sub    edx,0x12
    9ee5:	cmp    edx,0x4
    9ee8:	ja     a326 <__cxa_finalize@plt+0x83b6>
    9eee:	lea    rdi,[rip+0x3bfb]        # daf0 <version_etc_copyright@@Base+0x270>
    9ef5:	mov    rax,QWORD PTR [rax+0x10]
    9ef9:	movsxd rdx,DWORD PTR [rdi+rdx*4]
    9efd:	add    rdx,rdi
    9f00:	jmp    rdx
    9f02:	nop    WORD PTR [rax+rax*1+0x0]
    9f08:	cmp    r12,rax
    9f0b:	jae    9eab <__cxa_finalize@plt+0x7f3b>
    9f0d:	test   r12,r12
    9f10:	jne    a2e0 <__cxa_finalize@plt+0x8370>
    9f16:	cmp    rax,0xc
    9f1a:	ja     a2f2 <__cxa_finalize@plt+0x8382>
    9f20:	mov    r12d,0xc
    9f26:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9f2d:	sete   dl
    9f30:	test   r15,r15
    9f33:	je     a1a0 <__cxa_finalize@plt+0x8230>
    9f39:	test   dl,dl
    9f3b:	jne    a1a0 <__cxa_finalize@plt+0x8230>
    9f41:	mov    rsi,r12
    9f44:	mov    rdi,r15
    9f47:	call   1e40 <realloc@plt>
    9f4c:	test   rax,rax
    9f4f:	je     a04b <__cxa_finalize@plt+0x80db>
    9f55:	mov    r15,rax
    9f58:	jmp    9eab <__cxa_finalize@plt+0x7f3b>
    9f5d:	nop    DWORD PTR [rax]
    9f60:	mov    DWORD PTR [rbp-0x3e0],0x0
    9f6a:	jmp    986f <__cxa_finalize@plt+0x78ff>
    9f6f:	nop
    9f70:	js     9565 <__cxa_finalize@plt+0x75f5>
    9f76:	add    r12,r12
    9f79:	cmp    r12,rax
    9f7c:	jae    966e <__cxa_finalize@plt+0x76fe>
    9f82:	cmp    rax,0xffffffffffffffff
    9f86:	je     9565 <__cxa_finalize@plt+0x75f5>
    9f8c:	cmp    r15,QWORD PTR [rbp-0x3e8]
    9f93:	mov    r12,rax
    9f96:	sete   dl
    9f99:	test   r15,r15
    9f9c:	jne    9681 <__cxa_finalize@plt+0x7711>
    9fa2:	nop    WORD PTR [rax+rax*1+0x0]
    9fa8:	mov    rdi,r12
    9fab:	mov    QWORD PTR [rbp-0x3e0],r8
    9fb2:	mov    BYTE PTR [rbp-0x3d0],dl
    9fb8:	mov    QWORD PTR [rbp-0x3c8],rcx
    9fbf:	call   1dd0 <malloc@plt>
    9fc4:	test   rax,rax
    9fc7:	mov    r9,rax
    9fca:	mov    rcx,QWORD PTR [rbp-0x3c8]
    9fd1:	movzx  edx,BYTE PTR [rbp-0x3d0]
    9fd8:	mov    r8,QWORD PTR [rbp-0x3e0]
    9fdf:	je     9565 <__cxa_finalize@plt+0x75f5>
    9fe5:	test   rbx,rbx
    9fe8:	je     a1f0 <__cxa_finalize@plt+0x8280>
    9fee:	test   dl,dl
    9ff0:	je     a1f0 <__cxa_finalize@plt+0x8280>
    9ff6:	mov    rsi,r15
    9ff9:	mov    rdx,rbx
    9ffc:	mov    rdi,rax
    9fff:	mov    QWORD PTR [rbp-0x3d0],r8
    a006:	mov    QWORD PTR [rbp-0x3c8],rcx
    a00d:	call   1db0 <memcpy@plt>
    a012:	mov    rcx,QWORD PTR [rbp-0x3c8]
    a019:	mov    r15,rax
    a01c:	mov    r8,QWORD PTR [rbp-0x3d0]
    a023:	jmp    96bc <__cxa_finalize@plt+0x774c>
    a028:	nop    DWORD PTR [rax+rax*1+0x0]
    a030:	mov    r14,r12
    a033:	jmp    96bc <__cxa_finalize@plt+0x774c>
    a038:	nop    DWORD PTR [rax+rax*1+0x0]
    a040:	mov    QWORD PTR [rax],r14
    a043:	mov    rbx,r14
    a046:	jmp    9eb0 <__cxa_finalize@plt+0x7f40>
    a04b:	call   1ba0 <__errno_location@plt>
    a050:	mov    QWORD PTR [rbp-0x3c8],rax
    a057:	nop    WORD PTR [rax+rax*1+0x0]
    a060:	mov    rdi,r15
    a063:	call   1b80 <free@plt>
    a068:	jmp    9583 <__cxa_finalize@plt+0x7613>
    a06d:	nop    DWORD PTR [rax]
    a070:	mov    r9,QWORD PTR [rbp-0x3f0]
    a077:	mov    r8,QWORD PTR [rbp-0x3d8]
    a07e:	mov    rsi,r10
    a081:	mov    rcx,0xffffffffffffffff
    a088:	mov    edx,0x1
    a08d:	mov    eax,0x1
    a092:	mov    QWORD PTR [rbp-0x430],r10
    a099:	call   1b70 <__snprintf_chk@plt>
    a09e:	mov    r10,QWORD PTR [rbp-0x430]
    a0a5:	jmp    99de <__cxa_finalize@plt+0x7a6e>
    a0aa:	nop    WORD PTR [rax+rax*1+0x0]
    a0b0:	sub    rsp,0x10
    a0b4:	mov    r9,QWORD PTR [rbp-0x3f0]
    a0bb:	fstp   TBYTE PTR [rsp]
    a0be:	jmp    99b1 <__cxa_finalize@plt+0x7a41>
    a0c3:	nop    DWORD PTR [rax+rax*1+0x0]
    a0c8:	js     9565 <__cxa_finalize@plt+0x75f5>
    a0ce:	add    r12,r12
    a0d1:	cmp    r12,rax
    a0d4:	jae    98d1 <__cxa_finalize@plt+0x7961>
    a0da:	nop    WORD PTR [rax+rax*1+0x0]
    a0e0:	test   rdx,rdx
    a0e3:	jne    9565 <__cxa_finalize@plt+0x75f5>
    a0e9:	cmp    rax,0xffffffffffffffff
    a0ed:	je     9565 <__cxa_finalize@plt+0x75f5>
    a0f3:	cmp    r15,QWORD PTR [rbp-0x3e8]
    a0fa:	mov    r12,rax
    a0fd:	sete   dl
    a100:	test   r15,r15
    a103:	jne    98e4 <__cxa_finalize@plt+0x7974>
    a109:	nop    DWORD PTR [rax+0x0]
    a110:	mov    rdi,r12
    a113:	mov    BYTE PTR [rbp-0x3c8],dl
    a119:	call   1dd0 <malloc@plt>
    a11e:	test   rax,rax
    a121:	mov    rcx,rax
    a124:	movzx  edx,BYTE PTR [rbp-0x3c8]
    a12b:	je     9565 <__cxa_finalize@plt+0x75f5>
    a131:	test   r14,r14
    a134:	je     a2d0 <__cxa_finalize@plt+0x8360>
    a13a:	test   dl,dl
    a13c:	je     a2d0 <__cxa_finalize@plt+0x8360>
    a142:	mov    rsi,r15
    a145:	mov    rdx,r14
    a148:	mov    rdi,rax
    a14b:	call   1db0 <memcpy@plt>
    a150:	mov    r15,rax
    a153:	jmp    9903 <__cxa_finalize@plt+0x7993>
    a158:	nop    DWORD PTR [rax+rax*1+0x0]
    a160:	mov    BYTE PTR [rbx],0x4c
    a163:	add    rbx,0x1
    a167:	jmp    9833 <__cxa_finalize@plt+0x78c3>
    a16c:	nop    DWORD PTR [rax+0x0]
    a170:	mov    BYTE PTR [rax],r14b
    a173:	mov    rbx,r14
    a176:	jmp    9eb0 <__cxa_finalize@plt+0x7f40>
    a17b:	nop    DWORD PTR [rax+rax*1+0x0]
    a180:	mov    DWORD PTR [rax],r14d
    a183:	mov    rbx,r14
    a186:	jmp    9eb0 <__cxa_finalize@plt+0x7f40>
    a18b:	nop    DWORD PTR [rax+rax*1+0x0]
    a190:	mov    WORD PTR [rax],r14w
    a194:	mov    rbx,r14
    a197:	jmp    9eb0 <__cxa_finalize@plt+0x7f40>
    a19c:	nop    DWORD PTR [rax+0x0]
    a1a0:	mov    rdi,r12
    a1a3:	mov    BYTE PTR [rbp-0x3c8],dl
    a1a9:	call   1dd0 <malloc@plt>
    a1ae:	test   rax,rax
    a1b1:	mov    rcx,rax
    a1b4:	movzx  edx,BYTE PTR [rbp-0x3c8]
    a1bb:	je     9565 <__cxa_finalize@plt+0x75f5>
    a1c1:	test   r14,r14
    a1c4:	je     a304 <__cxa_finalize@plt+0x8394>
    a1ca:	test   dl,dl
    a1cc:	je     a304 <__cxa_finalize@plt+0x8394>
    a1d2:	mov    rsi,r15
    a1d5:	mov    rdx,r14
    a1d8:	mov    rdi,rax
    a1db:	call   1db0 <memcpy@plt>
    a1e0:	mov    r15,rax
    a1e3:	jmp    9eab <__cxa_finalize@plt+0x7f3b>
    a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
    a1f0:	mov    r15,r9
    a1f3:	jmp    96bc <__cxa_finalize@plt+0x774c>
    a1f8:	nop    DWORD PTR [rax+rax*1+0x0]
    a200:	sub    rsp,0x8
    a204:	push   QWORD PTR [rbp-0x3f0]
    a20a:	jmp    9ca5 <__cxa_finalize@plt+0x7d35>
    a20f:	nop
    a210:	sub    rsp,0x8
    a214:	push   QWORD PTR [rbp-0x3f0]
    a21a:	sub    rsp,0x10
    a21e:	fstp   TBYTE PTR [rsp]
    a221:	jmp    9d6b <__cxa_finalize@plt+0x7dfb>
    a226:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a230:	mov    rax,QWORD PTR [rbp-0x3c8]
    a237:	mov    edi,DWORD PTR [rbp-0x424]
    a23d:	movsxd rbx,ecx
    a240:	add    rbx,r14
    a243:	mov    DWORD PTR [rax],edi
    a245:	jmp    9eb0 <__cxa_finalize@plt+0x7f40>
    a24a:	nop    WORD PTR [rax+rax*1+0x0]
    a250:	cmp    r15,QWORD PTR [rbp-0x3e8]
    a257:	je     a262 <__cxa_finalize@plt+0x82f2>
    a259:	test   r15,r15
    a25c:	jne    a319 <__cxa_finalize@plt+0x83a9>
    a262:	mov    rax,QWORD PTR [rbp-0x420]
    a269:	test   rax,rax
    a26c:	je     a276 <__cxa_finalize@plt+0x8306>
    a26e:	mov    rdi,rax
    a271:	call   1b80 <free@plt>
    a276:	mov    rax,QWORD PTR [rbp-0x408]
    a27d:	mov    rdi,QWORD PTR [rbp-0x2b8]
    a284:	add    rax,0x20
    a288:	cmp    rdi,rax
    a28b:	je     a292 <__cxa_finalize@plt+0x8322>
    a28d:	call   1b80 <free@plt>
    a292:	mov    rax,QWORD PTR [rbp-0x410]
    a299:	mov    rdi,QWORD PTR [rbp-0x3a8]
    a2a0:	add    rax,0x10
    a2a4:	cmp    rdi,rax
    a2a7:	je     a2ae <__cxa_finalize@plt+0x833e>
    a2a9:	call   1b80 <free@plt>
    a2ae:	mov    rax,QWORD PTR [rbp-0x3c8]
    a2b5:	xor    r15d,r15d
    a2b8:	mov    DWORD PTR [rax],0x4b
    a2be:	jmp    95f4 <__cxa_finalize@plt+0x7684>
    a2c3:	nop    DWORD PTR [rax+rax*1+0x0]
    a2c8:	xor    r15d,r15d
    a2cb:	jmp    95f4 <__cxa_finalize@plt+0x7684>
    a2d0:	mov    r15,rcx
    a2d3:	jmp    9903 <__cxa_finalize@plt+0x7993>
    a2d8:	nop    DWORD PTR [rax+rax*1+0x0]
    a2e0:	js     9565 <__cxa_finalize@plt+0x75f5>
    a2e6:	add    r12,r12
    a2e9:	cmp    r12,rax
    a2ec:	jae    9f26 <__cxa_finalize@plt+0x7fb6>
    a2f2:	cmp    rax,0xffffffffffffffff
    a2f6:	je     9565 <__cxa_finalize@plt+0x75f5>
    a2fc:	mov    r12,rax
    a2ff:	jmp    9f26 <__cxa_finalize@plt+0x7fb6>
    a304:	mov    r15,rcx
    a307:	jmp    9eab <__cxa_finalize@plt+0x7f3b>
    a30c:	mov    rdi,r15
    a30f:	call   1b80 <free@plt>
    a314:	jmp    9b7a <__cxa_finalize@plt+0x7c0a>
    a319:	mov    rdi,r15
    a31c:	call   1b80 <free@plt>
    a321:	jmp    a262 <__cxa_finalize@plt+0x82f2>
    a326:	call   1b90 <abort@plt>
    a32b:	nop    DWORD PTR [rax+rax*1+0x0]
    a330:	mov    rax,QWORD PTR [rbp-0x408]
    a337:	mov    rdi,QWORD PTR [rbp-0x2b8]
    a33e:	add    rax,0x20
    a342:	cmp    rdi,rax
    a345:	je     a34c <__cxa_finalize@plt+0x83dc>
    a347:	call   1b80 <free@plt>
    a34c:	mov    rax,QWORD PTR [rbp-0x410]
    a353:	mov    rdi,QWORD PTR [rbp-0x3a8]
    a35a:	add    rax,0x10
    a35e:	cmp    rdi,rax
    a361:	je     a368 <__cxa_finalize@plt+0x83f8>
    a363:	call   1b80 <free@plt>
    a368:	call   1ba0 <__errno_location@plt>
    a36d:	xor    r15d,r15d
    a370:	mov    DWORD PTR [rax],0x16
    a376:	jmp    95f4 <__cxa_finalize@plt+0x7684>
    a37b:	mov    rbx,r14
    a37e:	xor    eax,eax
    a380:	add    rbx,0x1
    a384:	jb     a490 <__cxa_finalize@plt+0x8520>
    a38a:	cmp    r12,rbx
    a38d:	jae    a3dc <__cxa_finalize@plt+0x846c>
    a38f:	test   r12,r12
    a392:	jne    a4c9 <__cxa_finalize@plt+0x8559>
    a398:	cmp    rbx,0xc
    a39c:	ja     a4ae <__cxa_finalize@plt+0x853e>
    a3a2:	mov    r12d,0xc
    a3a8:	cmp    r15,QWORD PTR [rbp-0x3e8]
    a3af:	sete   r13b
    a3b3:	test   r15,r15
    a3b6:	je     a45c <__cxa_finalize@plt+0x84ec>
    a3bc:	test   r13b,r13b
    a3bf:	jne    a45c <__cxa_finalize@plt+0x84ec>
    a3c5:	mov    rsi,r12
    a3c8:	mov    rdi,r15
    a3cb:	call   1e40 <realloc@plt>
    a3d0:	test   rax,rax
    a3d3:	je     9565 <__cxa_finalize@plt+0x75f5>
    a3d9:	mov    r15,rax
    a3dc:	cmp    r15,QWORD PTR [rbp-0x3e8]
    a3e3:	mov    BYTE PTR [r15+r14*1],0x0
    a3e8:	je     a401 <__cxa_finalize@plt+0x8491>
    a3ea:	cmp    r12,rbx
    a3ed:	jbe    a401 <__cxa_finalize@plt+0x8491>
    a3ef:	mov    rdi,r15
    a3f2:	mov    rsi,rbx
    a3f5:	call   1e40 <realloc@plt>
    a3fa:	test   rax,rax
    a3fd:	cmovne r15,rax
    a401:	mov    rax,QWORD PTR [rbp-0x420]
    a408:	test   rax,rax
    a40b:	je     a415 <__cxa_finalize@plt+0x84a5>
    a40d:	mov    rdi,rax
    a410:	call   1b80 <free@plt>
    a415:	mov    rax,QWORD PTR [rbp-0x408]
    a41c:	mov    rdi,QWORD PTR [rbp-0x2b8]
    a423:	add    rax,0x20
    a427:	cmp    rdi,rax
    a42a:	je     a431 <__cxa_finalize@plt+0x84c1>
    a42c:	call   1b80 <free@plt>
    a431:	mov    rax,QWORD PTR [rbp-0x410]
    a438:	mov    rdi,QWORD PTR [rbp-0x3a8]
    a43f:	add    rax,0x10
    a443:	cmp    rdi,rax
    a446:	je     a44d <__cxa_finalize@plt+0x84dd>
    a448:	call   1b80 <free@plt>
    a44d:	mov    rax,QWORD PTR [rbp-0x418]
    a454:	mov    QWORD PTR [rax],r14
    a457:	jmp    95f4 <__cxa_finalize@plt+0x7684>
    a45c:	mov    rdi,r12
    a45f:	call   1dd0 <malloc@plt>
    a464:	test   rax,rax
    a467:	mov    rcx,rax
    a46a:	je     9565 <__cxa_finalize@plt+0x75f5>
    a470:	test   r14,r14
    a473:	je     a4e0 <__cxa_finalize@plt+0x8570>
    a475:	test   r13b,r13b
    a478:	je     a4e0 <__cxa_finalize@plt+0x8570>
    a47a:	mov    rsi,r15
    a47d:	mov    rdx,r14
    a480:	mov    rdi,rax
    a483:	call   1db0 <memcpy@plt>
    a488:	mov    r15,rax
    a48b:	jmp    a3dc <__cxa_finalize@plt+0x846c>
    a490:	cmp    r12,0xffffffffffffffff
    a494:	mov    eax,0x1
    a499:	je     a3dc <__cxa_finalize@plt+0x846c>
    a49f:	test   r12,r12
    a4a2:	je     9565 <__cxa_finalize@plt+0x75f5>
    a4a8:	js     9565 <__cxa_finalize@plt+0x75f5>
    a4ae:	test   rax,rax
    a4b1:	jne    9565 <__cxa_finalize@plt+0x75f5>
    a4b7:	cmp    rbx,0xffffffffffffffff
    a4bb:	je     9565 <__cxa_finalize@plt+0x75f5>
    a4c1:	mov    r12,rbx
    a4c4:	jmp    a3a8 <__cxa_finalize@plt+0x8438>
    a4c9:	js     9565 <__cxa_finalize@plt+0x75f5>
    a4cf:	add    r12,r12
    a4d2:	cmp    r12,rbx
    a4d5:	jae    a3a8 <__cxa_finalize@plt+0x8438>
    a4db:	jmp    a4ae <__cxa_finalize@plt+0x853e>
    a4dd:	nop    DWORD PTR [rax]
    a4e0:	mov    r15,rcx
    a4e3:	jmp    a3dc <__cxa_finalize@plt+0x846c>
    a4e8:	cmp    r12,0xffffffffffffffff
    a4ec:	je     9928 <__cxa_finalize@plt+0x79b8>
    a4f2:	jmp    9571 <__cxa_finalize@plt+0x7601>
    a4f7:	call   1c90 <__stack_chk_fail@plt>
    a4fc:	cmp    r12,0xffffffffffffffff
    a500:	mov    edx,0x1
    a505:	je     9903 <__cxa_finalize@plt+0x7993>
    a50b:	test   r12,r12
    a50e:	je     9565 <__cxa_finalize@plt+0x75f5>
    a514:	jns    a0e0 <__cxa_finalize@plt+0x8170>
    a51a:	jmp    9565 <__cxa_finalize@plt+0x75f5>
    a51f:	nop
    a520:	cmp    QWORD PTR [rsi],0x0
    a524:	mov    rax,QWORD PTR [rsi+0x8]
    a528:	je     a58d <__cxa_finalize@plt+0x861d>
    a52a:	lea    r8,[rip+0x35df]        # db10 <version_etc_copyright@@Base+0x290>
    a531:	lea    r10,[rip+0x3638]        # db70 <version_etc_copyright@@Base+0x2f0>
    a538:	lea    r9,[rip+0x35c5]        # db04 <version_etc_copyright@@Base+0x284>
    a53f:	xor    ecx,ecx
    a541:	nop    DWORD PTR [rax+0x0]
    a548:	cmp    DWORD PTR [rax],0x16
    a54b:	ja     a590 <__cxa_finalize@plt+0x8620>
    a54d:	mov    edx,DWORD PTR [rax]
    a54f:	movsxd rdx,DWORD PTR [r8+rdx*4]
    a553:	add    rdx,r8
    a556:	jmp    rdx
    a558:	nop    DWORD PTR [rax+rax*1+0x0]
    a560:	mov    rdx,QWORD PTR [rdi+0x8]
    a564:	add    rdx,0xf
    a568:	and    rdx,0xfffffffffffffff0
    a56c:	lea    r11,[rdx+0x10]
    a570:	mov    QWORD PTR [rdi+0x8],r11
    a574:	fld    TBYTE PTR [rdx]
    a576:	fstp   TBYTE PTR [rax+0x10]
    a579:	nop    DWORD PTR [rax+0x0]
    a580:	add    rcx,0x1
    a584:	add    rax,0x20
    a588:	cmp    QWORD PTR [rsi],rcx
    a58b:	ja     a548 <__cxa_finalize@plt+0x85d8>
    a58d:	xor    eax,eax
    a58f:	ret    
    a590:	mov    eax,0xffffffff
    a595:	ret    
    a596:	mov    r11d,DWORD PTR [rdi]
    a599:	cmp    r11d,0x2f
    a59d:	ja     a6da <__cxa_finalize@plt+0x876a>
    a5a3:	mov    edx,r11d
    a5a6:	add    rdx,QWORD PTR [rdi+0x10]
    a5aa:	add    r11d,0x8
    a5ae:	mov    DWORD PTR [rdi],r11d
    a5b1:	mov    rdx,QWORD PTR [rdx]
    a5b4:	mov    QWORD PTR [rax+0x10],rdx
    a5b8:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a5ba:	mov    r11d,DWORD PTR [rdi]
    a5bd:	cmp    r11d,0x2f
    a5c1:	ja     a6fc <__cxa_finalize@plt+0x878c>
    a5c7:	mov    edx,r11d
    a5ca:	add    rdx,QWORD PTR [rdi+0x10]
    a5ce:	add    r11d,0x8
    a5d2:	mov    DWORD PTR [rdi],r11d
    a5d5:	mov    edx,DWORD PTR [rdx]
    a5d7:	mov    DWORD PTR [rax+0x10],edx
    a5da:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a5dc:	mov    r11d,DWORD PTR [rdi]
    a5df:	cmp    r11d,0x2f
    a5e3:	ja     a6eb <__cxa_finalize@plt+0x877b>
    a5e9:	mov    edx,r11d
    a5ec:	add    rdx,QWORD PTR [rdi+0x10]
    a5f0:	add    r11d,0x8
    a5f4:	mov    DWORD PTR [rdi],r11d
    a5f7:	mov    edx,DWORD PTR [rdx]
    a5f9:	mov    BYTE PTR [rax+0x10],dl
    a5fc:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a5fe:	mov    r11d,DWORD PTR [rdi]
    a601:	cmp    r11d,0x2f
    a605:	ja     a6aa <__cxa_finalize@plt+0x873a>
    a60b:	mov    edx,r11d
    a60e:	add    rdx,QWORD PTR [rdi+0x10]
    a612:	add    r11d,0x8
    a616:	mov    DWORD PTR [rdi],r11d
    a619:	mov    edx,DWORD PTR [rdx]
    a61b:	mov    WORD PTR [rax+0x10],dx
    a61f:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a624:	mov    r11d,DWORD PTR [rdi]
    a627:	cmp    r11d,0x2f
    a62b:	ja     a6bb <__cxa_finalize@plt+0x874b>
    a631:	mov    edx,r11d
    a634:	add    rdx,QWORD PTR [rdi+0x10]
    a638:	add    r11d,0x8
    a63c:	mov    DWORD PTR [rdi],r11d
    a63f:	mov    rdx,QWORD PTR [rdx]
    a642:	test   rdx,rdx
    a645:	cmove  rdx,r9
    a649:	mov    QWORD PTR [rax+0x10],rdx
    a64d:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a652:	mov    r11d,DWORD PTR [rdi+0x4]
    a656:	cmp    r11d,0xaf
    a65d:	ja     a70d <__cxa_finalize@plt+0x879d>
    a663:	mov    edx,r11d
    a666:	add    rdx,QWORD PTR [rdi+0x10]
    a66a:	add    r11d,0x10
    a66e:	mov    DWORD PTR [rdi+0x4],r11d
    a672:	movsd  xmm0,QWORD PTR [rdx]
    a676:	movsd  QWORD PTR [rax+0x10],xmm0
    a67b:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a680:	mov    r11d,DWORD PTR [rdi]
    a683:	cmp    r11d,0x2f
    a687:	ja     a6cc <__cxa_finalize@plt+0x875c>
    a689:	mov    edx,r11d
    a68c:	add    rdx,QWORD PTR [rdi+0x10]
    a690:	add    r11d,0x8
    a694:	mov    DWORD PTR [rdi],r11d
    a697:	mov    rdx,QWORD PTR [rdx]
    a69a:	test   rdx,rdx
    a69d:	cmove  rdx,r10
    a6a1:	mov    QWORD PTR [rax+0x10],rdx
    a6a5:	jmp    a580 <__cxa_finalize@plt+0x8610>
    a6aa:	mov    rdx,QWORD PTR [rdi+0x8]
    a6ae:	lea    r11,[rdx+0x8]
    a6b2:	mov    QWORD PTR [rdi+0x8],r11
    a6b6:	jmp    a619 <__cxa_finalize@plt+0x86a9>
    a6bb:	mov    rdx,QWORD PTR [rdi+0x8]
    a6bf:	lea    r11,[rdx+0x8]
    a6c3:	mov    QWORD PTR [rdi+0x8],r11
    a6c7:	jmp    a63f <__cxa_finalize@plt+0x86cf>
    a6cc:	mov    rdx,QWORD PTR [rdi+0x8]
    a6d0:	lea    r11,[rdx+0x8]
    a6d4:	mov    QWORD PTR [rdi+0x8],r11
    a6d8:	jmp    a697 <__cxa_finalize@plt+0x8727>
    a6da:	mov    rdx,QWORD PTR [rdi+0x8]
    a6de:	lea    r11,[rdx+0x8]
    a6e2:	mov    QWORD PTR [rdi+0x8],r11
    a6e6:	jmp    a5b1 <__cxa_finalize@plt+0x8641>
    a6eb:	mov    rdx,QWORD PTR [rdi+0x8]
    a6ef:	lea    r11,[rdx+0x8]
    a6f3:	mov    QWORD PTR [rdi+0x8],r11
    a6f7:	jmp    a5f7 <__cxa_finalize@plt+0x8687>
    a6fc:	mov    rdx,QWORD PTR [rdi+0x8]
    a700:	lea    r11,[rdx+0x8]
    a704:	mov    QWORD PTR [rdi+0x8],r11
    a708:	jmp    a5d5 <__cxa_finalize@plt+0x8665>
    a70d:	mov    rdx,QWORD PTR [rdi+0x8]
    a711:	lea    r11,[rdx+0x8]
    a715:	mov    QWORD PTR [rdi+0x8],r11
    a719:	jmp    a672 <__cxa_finalize@plt+0x8702>
    a71e:	xchg   ax,ax
    a720:	push   r15
    a722:	push   r14
    a724:	lea    rcx,[rsi+0x20]
    a728:	push   r13
    a72a:	push   r12
    a72c:	lea    rax,[rdx+0x10]
    a730:	push   rbp
    a731:	push   rbx
    a732:	mov    r14,rsi
    a735:	mov    r15,rdx
    a738:	xor    ebx,ebx
    a73a:	mov    r9d,0x7
    a740:	sub    rsp,0x58
    a744:	mov    r10d,0x7
    a74a:	mov    QWORD PTR [rsi],0x0
    a751:	mov    QWORD PTR [rsi+0x8],rcx
    a755:	mov    QWORD PTR [rsp+0x28],rcx
    a75a:	mov    r8,0xffffffffffffffff
    a761:	mov    QWORD PTR [rdx],0x0
    a768:	mov    QWORD PTR [rsp+0x8],rax
    a76d:	mov    QWORD PTR [rdx+0x8],rax
    a771:	mov    QWORD PTR [rsp+0x18],0x0
    a77a:	mov    QWORD PTR [rsp+0x10],0x0
    a783:	mov    QWORD PTR [rsp+0x20],0x0
    a78c:	jmp    a79b <__cxa_finalize@plt+0x882b>
    a78e:	xchg   ax,ax
    a790:	cmp    al,0x25
    a792:	lea    rbp,[rdi+0x1]
    a796:	je     a7d8 <__cxa_finalize@plt+0x8868>
    a798:	mov    rdi,rbp
    a79b:	movzx  eax,BYTE PTR [rdi]
    a79e:	test   al,al
    a7a0:	jne    a790 <__cxa_finalize@plt+0x8820>
    a7a2:	lea    rax,[rbx+rbx*4]
    a7a6:	lea    rax,[rbx+rax*2]
    a7aa:	mov    QWORD PTR [rcx+rax*8],rdi
    a7ae:	mov    rax,QWORD PTR [rsp+0x10]
    a7b3:	mov    QWORD PTR [r14+0x10],rax
    a7b7:	mov    rax,QWORD PTR [rsp+0x18]
    a7bc:	mov    QWORD PTR [r14+0x18],rax
    a7c0:	xor    eax,eax
    a7c2:	add    rsp,0x58
    a7c6:	pop    rbx
    a7c7:	pop    rbp
    a7c8:	pop    r12
    a7ca:	pop    r13
    a7cc:	pop    r14
    a7ce:	pop    r15
    a7d0:	ret    
    a7d1:	nop    DWORD PTR [rax+0x0]
    a7d8:	lea    rax,[rbx+rbx*4]
    a7dc:	mov    r13,r8
    a7df:	lea    rax,[rbx+rax*2]
    a7e3:	lea    r12,[rcx+rax*8]
    a7e7:	mov    QWORD PTR [r12],rdi
    a7eb:	mov    DWORD PTR [r12+0x10],0x0
    a7f4:	mov    QWORD PTR [r12+0x18],0x0
    a7fd:	mov    QWORD PTR [r12+0x20],0x0
    a806:	mov    QWORD PTR [r12+0x28],r8
    a80b:	mov    QWORD PTR [r12+0x30],0x0
    a814:	mov    QWORD PTR [r12+0x38],0x0
    a81d:	mov    QWORD PTR [r12+0x40],r8
    a822:	mov    QWORD PTR [r12+0x50],r8
    a827:	movzx  ebx,BYTE PTR [rdi+0x1]
    a82b:	lea    eax,[rbx-0x30]
    a82e:	cmp    al,0x9
    a830:	ja     a86e <__cxa_finalize@plt+0x88fe>
    a832:	jmp    ac6a <__cxa_finalize@plt+0x8cfa>
    a837:	nop    WORD PTR [rax+rax*1+0x0]
    a840:	cmp    bl,0x2d
    a843:	je     a888 <__cxa_finalize@plt+0x8918>
    a845:	cmp    bl,0x2b
    a848:	je     a890 <__cxa_finalize@plt+0x8920>
    a84a:	cmp    bl,0x20
    a84d:	je     a8a0 <__cxa_finalize@plt+0x8930>
    a84f:	cmp    bl,0x23
    a852:	je     a8b0 <__cxa_finalize@plt+0x8940>
    a854:	cmp    bl,0x30
    a857:	je     a8c0 <__cxa_finalize@plt+0x8950>
    a859:	cmp    bl,0x49
    a85c:	jne    a8d0 <__cxa_finalize@plt+0x8960>
    a85e:	or     DWORD PTR [r12+0x10],0x40
    a864:	nop    DWORD PTR [rax+0x0]
    a868:	movzx  ebx,BYTE PTR [rax]
    a86b:	mov    rbp,rax
    a86e:	lea    rax,[rbp+0x1]
    a872:	cmp    bl,0x27
    a875:	mov    rdx,rax
    a878:	jne    a840 <__cxa_finalize@plt+0x88d0>
    a87a:	or     DWORD PTR [r12+0x10],0x1
    a880:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a882:	nop    WORD PTR [rax+rax*1+0x0]
    a888:	or     DWORD PTR [r12+0x10],0x2
    a88e:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a890:	or     DWORD PTR [r12+0x10],0x4
    a896:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a898:	nop    DWORD PTR [rax+rax*1+0x0]
    a8a0:	or     DWORD PTR [r12+0x10],0x8
    a8a6:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a8a8:	nop    DWORD PTR [rax+rax*1+0x0]
    a8b0:	or     DWORD PTR [r12+0x10],0x10
    a8b6:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a8b8:	nop    DWORD PTR [rax+rax*1+0x0]
    a8c0:	or     DWORD PTR [r12+0x10],0x20
    a8c6:	jmp    a868 <__cxa_finalize@plt+0x88f8>
    a8c8:	nop    DWORD PTR [rax+rax*1+0x0]
    a8d0:	cmp    bl,0x2a
    a8d3:	je     aa89 <__cxa_finalize@plt+0x8b19>
    a8d9:	lea    ecx,[rbx-0x30]
    a8dc:	cmp    cl,0x9
    a8df:	jbe    acf7 <__cxa_finalize@plt+0x8d87>
    a8e5:	cmp    bl,0x2e
    a8e8:	je     abbf <__cxa_finalize@plt+0x8c4f>
    a8ee:	xor    eax,eax
    a8f0:	mov    esi,0x1
    a8f5:	jmp    a927 <__cxa_finalize@plt+0x89b7>
    a8f7:	nop    WORD PTR [rax+rax*1+0x0]
    a900:	cmp    bl,0x4c
    a903:	je     a940 <__cxa_finalize@plt+0x89d0>
    a905:	cmp    bl,0x6c
    a908:	je     a920 <__cxa_finalize@plt+0x89b0>
    a90a:	cmp    bl,0x6a
    a90d:	je     a920 <__cxa_finalize@plt+0x89b0>
    a90f:	mov    edx,ebx
    a911:	and    edx,0xffffffdf
    a914:	cmp    dl,0x5a
    a917:	je     a920 <__cxa_finalize@plt+0x89b0>
    a919:	cmp    bl,0x74
    a91c:	jne    a948 <__cxa_finalize@plt+0x89d8>
    a91e:	xchg   ax,ax
    a920:	add    eax,0x8
    a923:	movzx  ebx,BYTE PTR [rbp+0x0]
    a927:	add    rbp,0x1
    a92b:	cmp    bl,0x68
    a92e:	jne    a900 <__cxa_finalize@plt+0x8990>
    a930:	mov    ecx,eax
    a932:	mov    edx,esi
    a934:	and    ecx,0x1
    a937:	shl    edx,cl
    a939:	or     eax,edx
    a93b:	jmp    a923 <__cxa_finalize@plt+0x89b3>
    a93d:	nop    DWORD PTR [rax]
    a940:	or     eax,0x4
    a943:	jmp    a923 <__cxa_finalize@plt+0x89b3>
    a945:	nop    DWORD PTR [rax]
    a948:	lea    edx,[rbx-0x25]
    a94b:	cmp    dl,0x53
    a94e:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    a954:	lea    rcx,[rip+0x3231]        # db8c <version_etc_copyright@@Base+0x30c>
    a95b:	movzx  edx,dl
    a95e:	movsxd rdx,DWORD PTR [rcx+rdx*4]
    a962:	add    rdx,rcx
    a965:	jmp    rdx
    a967:	mov    r11d,0x10
    a96d:	mov    ebx,0x73
    a972:	nop    WORD PTR [rax+rax*1+0x0]
    a978:	cmp    r13,0xffffffffffffffff
    a97c:	je     b037 <__cxa_finalize@plt+0x90c7>
    a982:	mov    QWORD PTR [r12+0x50],r13
    a987:	cmp    r9,r13
    a98a:	mov    rcx,QWORD PTR [r15+0x8]
    a98e:	jbe    afb0 <__cxa_finalize@plt+0x9040>
    a994:	mov    rax,QWORD PTR [r15]
    a997:	mov    rdx,rax
    a99a:	shl    rdx,0x5
    a99e:	add    rdx,rcx
    a9a1:	cmp    rax,r13
    a9a4:	ja     a9c6 <__cxa_finalize@plt+0x8a56>
    a9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a9b0:	add    rax,0x1
    a9b4:	mov    DWORD PTR [rdx],0x0
    a9ba:	add    rdx,0x20
    a9be:	cmp    rax,r13
    a9c1:	jbe    a9b0 <__cxa_finalize@plt+0x8a40>
    a9c3:	mov    QWORD PTR [r15],rax
    a9c6:	shl    r13,0x5
    a9ca:	lea    rax,[rcx+r13*1]
    a9ce:	mov    edx,DWORD PTR [rax]
    a9d0:	test   edx,edx
    a9d2:	jne    afa3 <__cxa_finalize@plt+0x9033>
    a9d8:	mov    DWORD PTR [rax],r11d
    a9db:	mov    BYTE PTR [r12+0x48],bl
    a9e0:	mov    rax,QWORD PTR [r14]
    a9e3:	mov    QWORD PTR [r12+0x8],rbp
    a9e8:	lea    rbx,[rax+0x1]
    a9ec:	cmp    r10,rbx
    a9ef:	mov    QWORD PTR [r14],rbx
    a9f2:	ja     aa80 <__cxa_finalize@plt+0x8b10>
    a9f8:	test   r10,r10
    a9fb:	js     b3a7 <__cxa_finalize@plt+0x9437>
    aa01:	add    r10,r10
    aa04:	movabs rax,0x2e8ba2e8ba2e8ba
    aa0e:	cmp    r10,rax
    aa11:	ja     b3a7 <__cxa_finalize@plt+0x9437>
    aa17:	lea    rax,[r10+r10*4]
    aa1b:	mov    rdi,QWORD PTR [r14+0x8]
    aa1f:	cmp    QWORD PTR [rsp+0x28],rdi
    aa24:	mov    QWORD PTR [rsp+0x40],r9
    aa29:	mov    QWORD PTR [rsp+0x38],r10
    aa2e:	lea    rax,[r10+rax*2]
    aa32:	mov    QWORD PTR [rsp+0x30],r8
    aa37:	lea    rsi,[rax*8+0x0]
    aa3f:	je     b0fd <__cxa_finalize@plt+0x918d>
    aa45:	call   1e40 <realloc@plt>
    aa4a:	test   rax,rax
    aa4d:	mov    rcx,rax
    aa50:	mov    r8,QWORD PTR [rsp+0x30]
    aa55:	mov    r10,QWORD PTR [rsp+0x38]
    aa5a:	mov    r9,QWORD PTR [rsp+0x40]
    aa5f:	je     b3a7 <__cxa_finalize@plt+0x9437>
    aa65:	mov    rax,QWORD PTR [rsp+0x28]
    aa6a:	cmp    rax,QWORD PTR [r14+0x8]
    aa6e:	mov    rbx,QWORD PTR [r14]
    aa71:	je     b120 <__cxa_finalize@plt+0x91b0>
    aa77:	mov    QWORD PTR [r14+0x8],rcx
    aa7b:	jmp    a798 <__cxa_finalize@plt+0x8828>
    aa80:	mov    rcx,QWORD PTR [r14+0x8]
    aa84:	jmp    a798 <__cxa_finalize@plt+0x8828>
    aa89:	mov    rsi,QWORD PTR [rsp+0x10]
    aa8e:	mov    ecx,0x1
    aa93:	mov    QWORD PTR [r12+0x18],rbp
    aa98:	mov    QWORD PTR [r12+0x20],rax
    aa9d:	test   rsi,rsi
    aaa0:	cmovne rcx,rsi
    aaa4:	mov    QWORD PTR [rsp+0x10],rcx
    aaa9:	movzx  ecx,BYTE PTR [rbp+0x1]
    aaad:	lea    esi,[rcx-0x30]
    aab0:	cmp    sil,0x9
    aab4:	jbe    ad95 <__cxa_finalize@plt+0x8e25>
    aaba:	mov    rsi,QWORD PTR [rsp+0x20]
    aabf:	cmp    rsi,0xffffffffffffffff
    aac3:	lea    rdx,[rsi+0x1]
    aac7:	mov    QWORD PTR [r12+0x28],rsi
    aacc:	je     af6b <__cxa_finalize@plt+0x8ffb>
    aad2:	mov    rbx,QWORD PTR [rsp+0x20]
    aad7:	mov    rbp,rax
    aada:	mov    QWORD PTR [rsp+0x20],rdx
    aadf:	cmp    r9,rbx
    aae2:	mov    rcx,QWORD PTR [r15+0x8]
    aae6:	ja     b162 <__cxa_finalize@plt+0x91f2>
    aaec:	add    r9,r9
    aaef:	lea    rax,[rbx+0x1]
    aaf3:	cmp    r9,rbx
    aaf6:	cmovbe r9,rax
    aafa:	movabs rax,0x7ffffffffffffff
    ab04:	cmp    r9,rax
    ab07:	ja     b3ab <__cxa_finalize@plt+0x943b>
    ab0d:	mov    rsi,r9
    ab10:	mov    QWORD PTR [rsp+0x40],r9
    ab15:	mov    QWORD PTR [rsp+0x38],r10
    ab1a:	shl    rsi,0x5
    ab1e:	cmp    QWORD PTR [rsp+0x8],rcx
    ab23:	mov    QWORD PTR [rsp+0x30],r8
    ab28:	je     b241 <__cxa_finalize@plt+0x92d1>
    ab2e:	mov    rdi,rcx
    ab31:	call   1e40 <realloc@plt>
    ab36:	mov    rdx,QWORD PTR [r15+0x8]
    ab3a:	mov    r8,QWORD PTR [rsp+0x30]
    ab3f:	mov    rcx,rax
    ab42:	mov    r10,QWORD PTR [rsp+0x38]
    ab47:	mov    r9,QWORD PTR [rsp+0x40]
    ab4c:	test   rcx,rcx
    ab4f:	je     b407 <__cxa_finalize@plt+0x9497>
    ab55:	cmp    QWORD PTR [rsp+0x8],rdx
    ab5a:	mov    rax,QWORD PTR [r15]
    ab5d:	je     b31b <__cxa_finalize@plt+0x93ab>
    ab63:	mov    QWORD PTR [r15+0x8],rcx
    ab67:	mov    rdx,rax
    ab6a:	shl    rdx,0x5
    ab6e:	add    rdx,rcx
    ab71:	cmp    rax,rbx
    ab74:	ja     ab96 <__cxa_finalize@plt+0x8c26>
    ab76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ab80:	add    rax,0x1
    ab84:	mov    DWORD PTR [rdx],0x0
    ab8a:	add    rdx,0x20
    ab8e:	cmp    rax,rbx
    ab91:	jbe    ab80 <__cxa_finalize@plt+0x8c10>
    ab93:	mov    QWORD PTR [r15],rax
    ab96:	shl    rbx,0x5
    ab9a:	lea    rax,[rcx+rbx*1]
    ab9e:	mov    edx,DWORD PTR [rax]
    aba0:	test   edx,edx
    aba2:	jne    b07b <__cxa_finalize@plt+0x910b>
    aba8:	mov    DWORD PTR [rax],0x5
    abae:	movzx  ebx,BYTE PTR [rbp+0x0]
    abb2:	lea    rdx,[rbp+0x1]
    abb6:	cmp    bl,0x2e
    abb9:	jne    a8ee <__cxa_finalize@plt+0x897e>
    abbf:	cmp    BYTE PTR [rbp+0x1],0x2a
    abc3:	mov    QWORD PTR [r12+0x30],rbp
    abc8:	jne    ad4e <__cxa_finalize@plt+0x8dde>
    abce:	mov    rsi,QWORD PTR [rsp+0x18]
    abd3:	lea    r11,[rbp+0x2]
    abd7:	mov    eax,0x2
    abdc:	mov    QWORD PTR [r12+0x38],r11
    abe1:	cmp    rsi,0x2
    abe5:	cmovae rax,rsi
    abe9:	mov    QWORD PTR [rsp+0x18],rax
    abee:	movsx  eax,BYTE PTR [rbp+0x2]
    abf2:	lea    edx,[rax-0x30]
    abf5:	cmp    dl,0x9
    abf8:	jbe    b28c <__cxa_finalize@plt+0x931c>
    abfe:	mov    rbx,QWORD PTR [r12+0x40]
    ac03:	cmp    rbx,0xffffffffffffffff
    ac07:	je     b265 <__cxa_finalize@plt+0x92f5>
    ac0d:	cmp    r9,rbx
    ac10:	mov    rcx,QWORD PTR [r15+0x8]
    ac14:	jbe    b17f <__cxa_finalize@plt+0x920f>
    ac1a:	mov    rax,QWORD PTR [r15]
    ac1d:	mov    rdx,rax
    ac20:	shl    rdx,0x5
    ac24:	add    rdx,rcx
    ac27:	cmp    rax,rbx
    ac2a:	ja     ac46 <__cxa_finalize@plt+0x8cd6>
    ac2c:	nop    DWORD PTR [rax+0x0]
    ac30:	add    rax,0x1
    ac34:	mov    DWORD PTR [rdx],0x0
    ac3a:	add    rdx,0x20
    ac3e:	cmp    rax,rbx
    ac41:	jbe    ac30 <__cxa_finalize@plt+0x8cc0>
    ac43:	mov    QWORD PTR [r15],rax
    ac46:	shl    rbx,0x5
    ac4a:	lea    rax,[rcx+rbx*1]
    ac4e:	mov    edx,DWORD PTR [rax]
    ac50:	test   edx,edx
    ac52:	jne    b16a <__cxa_finalize@plt+0x91fa>
    ac58:	mov    DWORD PTR [rax],0x5
    ac5e:	mov    rbp,r11
    ac61:	movzx  ebx,BYTE PTR [r11]
    ac65:	jmp    a8ee <__cxa_finalize@plt+0x897e>
    ac6a:	mov    rax,rbp
    ac6d:	nop    DWORD PTR [rax]
    ac70:	add    rax,0x1
    ac74:	movzx  edx,BYTE PTR [rax]
    ac77:	lea    ecx,[rdx-0x30]
    ac7a:	cmp    cl,0x9
    ac7d:	jbe    ac70 <__cxa_finalize@plt+0x8d00>
    ac7f:	cmp    dl,0x24
    ac82:	mov    r13,r8
    ac85:	jne    a86e <__cxa_finalize@plt+0x88fe>
    ac8b:	xor    edx,edx
    ac8d:	movsx  eax,bl
    ac90:	movabs rdi,0x1999999999999999
    ac9a:	mov    rsi,r8
    ac9d:	sub    eax,0x30
    aca0:	cmp    rdx,rdi
    aca3:	cdqe   
    aca5:	ja     acae <__cxa_finalize@plt+0x8d3e>
    aca7:	lea    rsi,[rdx+rdx*4]
    acab:	add    rsi,rsi
    acae:	mov    rcx,rbp
    acb1:	add    rax,rsi
    acb4:	movzx  ebx,BYTE PTR [rbp+0x1]
    acb8:	setb   sil
    acbc:	add    rbp,0x1
    acc0:	mov    rdx,rax
    acc3:	movzx  esi,sil
    acc7:	test   rsi,rsi
    acca:	lea    edi,[rbx-0x30]
    accd:	jne    b05e <__cxa_finalize@plt+0x90ee>
    acd3:	cmp    dil,0x9
    acd7:	jbe    ac8d <__cxa_finalize@plt+0x8d1d>
    acd9:	mov    r13,rax
    acdc:	sub    r13,0x1
    ace0:	cmp    r13,0xfffffffffffffffd
    ace4:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    acea:	lea    rbp,[rcx+0x2]
    acee:	movzx  ebx,BYTE PTR [rcx+0x2]
    acf2:	jmp    a86e <__cxa_finalize@plt+0x88fe>
    acf7:	mov    QWORD PTR [r12+0x18],rbp
    acfc:	movzx  edi,BYTE PTR [rbp+0x0]
    ad00:	mov    rsi,rbp
    ad03:	lea    ecx,[rdi-0x30]
    ad06:	cmp    cl,0x9
    ad09:	jbe    ad17 <__cxa_finalize@plt+0x8da7>
    ad0b:	jmp    ad40 <__cxa_finalize@plt+0x8dd0>
    ad0d:	nop    DWORD PTR [rax]
    ad10:	mov    rbp,rax
    ad13:	add    rax,0x1
    ad17:	movzx  edi,BYTE PTR [rax]
    ad1a:	lea    edx,[rdi-0x30]
    ad1d:	cmp    dl,0x9
    ad20:	jbe    ad10 <__cxa_finalize@plt+0x8da0>
    ad22:	mov    rcx,rax
    ad25:	lea    rdx,[rbp+0x2]
    ad29:	mov    rbp,rax
    ad2c:	sub    rcx,rsi
    ad2f:	mov    rsi,QWORD PTR [rsp+0x10]
    ad34:	cmp    rsi,rcx
    ad37:	cmovae rcx,rsi
    ad3b:	mov    QWORD PTR [rsp+0x10],rcx
    ad40:	mov    QWORD PTR [r12+0x20],rbp
    ad45:	movzx  ebx,BYTE PTR [rbp+0x0]
    ad49:	jmp    a8e5 <__cxa_finalize@plt+0x8975>
    ad4e:	movzx  eax,BYTE PTR [rbp+0x1]
    ad52:	sub    eax,0x30
    ad55:	cmp    al,0x9
    ad57:	ja     ad6e <__cxa_finalize@plt+0x8dfe>
    ad59:	nop    DWORD PTR [rax+0x0]
    ad60:	add    rdx,0x1
    ad64:	movzx  eax,BYTE PTR [rdx]
    ad67:	sub    eax,0x30
    ad6a:	cmp    al,0x9
    ad6c:	jbe    ad60 <__cxa_finalize@plt+0x8df0>
    ad6e:	mov    rsi,QWORD PTR [rsp+0x18]
    ad73:	mov    rax,rdx
    ad76:	mov    QWORD PTR [r12+0x38],rdx
    ad7b:	sub    rax,rbp
    ad7e:	movzx  ebx,BYTE PTR [rdx]
    ad81:	mov    rbp,rdx
    ad84:	cmp    rsi,rax
    ad87:	cmovae rax,rsi
    ad8b:	mov    QWORD PTR [rsp+0x18],rax
    ad90:	jmp    a8ee <__cxa_finalize@plt+0x897e>
    ad95:	mov    rsi,rax
    ad98:	add    rsi,0x1
    ad9c:	movzx  edi,BYTE PTR [rsi]
    ad9f:	lea    r11d,[rdi-0x30]
    ada3:	cmp    r11b,0x9
    ada7:	jbe    ad98 <__cxa_finalize@plt+0x8e28>
    ada9:	cmp    dil,0x24
    adad:	jne    aaba <__cxa_finalize@plt+0x8b4a>
    adb3:	xor    esi,esi
    adb5:	movsx  eax,cl
    adb8:	movabs rdi,0x1999999999999999
    adc2:	mov    rcx,r8
    adc5:	sub    eax,0x30
    adc8:	cmp    rsi,rdi
    adcb:	cdqe   
    adcd:	ja     add6 <__cxa_finalize@plt+0x8e66>
    adcf:	lea    rcx,[rsi+rsi*4]
    add3:	add    rcx,rcx
    add6:	mov    rbp,rdx
    add9:	xor    r11d,r11d
    addc:	add    rax,rcx
    addf:	movzx  ecx,BYTE PTR [rdx+0x1]
    ade3:	setb   r11b
    ade7:	add    rdx,0x1
    adeb:	mov    rsi,rax
    adee:	test   r11,r11
    adf1:	lea    edi,[rcx-0x30]
    adf4:	jne    b2fe <__cxa_finalize@plt+0x938e>
    adfa:	cmp    dil,0x9
    adfe:	jbe    adb5 <__cxa_finalize@plt+0x8e45>
    ae00:	lea    rbx,[rax-0x1]
    ae04:	cmp    rbx,0xfffffffffffffffd
    ae08:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    ae0e:	mov    QWORD PTR [r12+0x28],rbx
    ae13:	add    rbp,0x2
    ae17:	jmp    aadf <__cxa_finalize@plt+0x8b6f>
    ae1c:	cmp    eax,0xf
    ae1f:	mov    r11d,0x16
    ae25:	jg     a978 <__cxa_finalize@plt+0x8a08>
    ae2b:	test   al,0x4
    ae2d:	jne    a978 <__cxa_finalize@plt+0x8a08>
    ae33:	cmp    eax,0x7
    ae36:	mov    r11d,0x15
    ae3c:	jg     a978 <__cxa_finalize@plt+0x8a08>
    ae42:	test   al,0x2
    ae44:	mov    r11d,0x12
    ae4a:	jne    a978 <__cxa_finalize@plt+0x8a08>
    ae50:	xor    r11d,r11d
    ae53:	test   al,0x1
    ae55:	sete   r11b
    ae59:	add    r11d,0x13
    ae5d:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    ae62:	nop    WORD PTR [rax+rax*1+0x0]
    ae68:	xor    r11d,r11d
    ae6b:	cmp    eax,0x7
    ae6e:	setg   r11b
    ae72:	add    r11d,0xd
    ae76:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    ae7b:	cmp    eax,0xf
    ae7e:	mov    r11d,0x9
    ae84:	jg     a978 <__cxa_finalize@plt+0x8a08>
    ae8a:	test   al,0x4
    ae8c:	jne    a978 <__cxa_finalize@plt+0x8a08>
    ae92:	cmp    eax,0x7
    ae95:	mov    r11d,0x7
    ae9b:	jg     a978 <__cxa_finalize@plt+0x8a08>
    aea1:	test   al,0x2
    aea3:	mov    r11d,0x1
    aea9:	jne    a978 <__cxa_finalize@plt+0x8a08>
    aeaf:	and    eax,0x1
    aeb2:	cmp    eax,0x1
    aeb5:	sbb    r11d,r11d
    aeb8:	and    r11d,0x2
    aebc:	add    r11d,0x3
    aec0:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    aec5:	nop    DWORD PTR [rax]
    aec8:	xor    r11d,r11d
    aecb:	cmp    eax,0x7
    aece:	setg   r11b
    aed2:	add    r11d,0xf
    aed6:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    aedb:	cmp    eax,0xf
    aede:	mov    r11d,0xc
    aee4:	jg     a978 <__cxa_finalize@plt+0x8a08>
    aeea:	xor    r11d,r11d
    aeed:	test   al,0x4
    aeef:	setne  r11b
    aef3:	add    r11d,0xb
    aef7:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    aefc:	mov    r11d,0xe
    af02:	mov    ebx,0x63
    af07:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    af0c:	cmp    eax,0xf
    af0f:	mov    r11d,0xa
    af15:	jg     a978 <__cxa_finalize@plt+0x8a08>
    af1b:	test   al,0x4
    af1d:	jne    a978 <__cxa_finalize@plt+0x8a08>
    af23:	cmp    eax,0x7
    af26:	mov    r11d,0x8
    af2c:	jg     a978 <__cxa_finalize@plt+0x8a08>
    af32:	test   al,0x2
    af34:	mov    r11d,0x2
    af3a:	jne    a978 <__cxa_finalize@plt+0x8a08>
    af40:	and    eax,0x1
    af43:	cmp    eax,0x1
    af46:	sbb    r11d,r11d
    af49:	and    r11d,0x2
    af4d:	add    r11d,0x4
    af51:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    af56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    af60:	mov    r11d,0x11
    af66:	jmp    a978 <__cxa_finalize@plt+0x8a08>
    af6b:	mov    rcx,QWORD PTR [r15+0x8]
    af6f:	cmp    QWORD PTR [rsp+0x8],rcx
    af74:	je     af7e <__cxa_finalize@plt+0x900e>
    af76:	mov    rdi,rcx
    af79:	call   1b80 <free@plt>
    af7e:	mov    rdi,QWORD PTR [r14+0x8]
    af82:	cmp    QWORD PTR [rsp+0x28],rdi
    af87:	je     af8e <__cxa_finalize@plt+0x901e>
    af89:	call   1b80 <free@plt>
    af8e:	call   1ba0 <__errno_location@plt>
    af93:	mov    DWORD PTR [rax],0x16
    af99:	mov    eax,0xffffffff
    af9e:	jmp    a7c2 <__cxa_finalize@plt+0x8852>
    afa3:	cmp    edx,r11d
    afa6:	je     a9db <__cxa_finalize@plt+0x8a6b>
    afac:	jmp    af6f <__cxa_finalize@plt+0x8fff>
    afae:	xchg   ax,ax
    afb0:	add    r9,r9
    afb3:	lea    rax,[r13+0x1]
    afb7:	cmp    r9,r13
    afba:	cmovbe r9,rax
    afbe:	movabs rax,0x7ffffffffffffff
    afc8:	cmp    r9,rax
    afcb:	ja     b3ab <__cxa_finalize@plt+0x943b>
    afd1:	mov    rsi,r9
    afd4:	mov    QWORD PTR [rsp+0x48],r9
    afd9:	mov    QWORD PTR [rsp+0x40],r10
    afde:	shl    rsi,0x5
    afe2:	cmp    QWORD PTR [rsp+0x8],rcx
    afe7:	mov    QWORD PTR [rsp+0x38],r8
    afec:	mov    DWORD PTR [rsp+0x30],r11d
    aff1:	je     b091 <__cxa_finalize@plt+0x9121>
    aff7:	mov    rdi,rcx
    affa:	call   1e40 <realloc@plt>
    afff:	test   rax,rax
    b002:	mov    rcx,rax
    b005:	mov    r11d,DWORD PTR [rsp+0x30]
    b00a:	mov    r8,QWORD PTR [rsp+0x38]
    b00f:	mov    r10,QWORD PTR [rsp+0x40]
    b014:	mov    r9,QWORD PTR [rsp+0x48]
    b019:	je     b3a7 <__cxa_finalize@plt+0x9437>
    b01f:	mov    rax,QWORD PTR [rsp+0x8]
    b024:	cmp    rax,QWORD PTR [r15+0x8]
    b028:	je     b0b9 <__cxa_finalize@plt+0x9149>
    b02e:	mov    QWORD PTR [r15+0x8],rcx
    b032:	jmp    a994 <__cxa_finalize@plt+0x8a24>
    b037:	mov    rsi,QWORD PTR [rsp+0x20]
    b03c:	cmp    rsi,0xffffffffffffffff
    b040:	lea    rax,[rsi+0x1]
    b044:	mov    QWORD PTR [r12+0x50],rsi
    b049:	je     af6b <__cxa_finalize@plt+0x8ffb>
    b04f:	mov    r13,QWORD PTR [rsp+0x20]
    b054:	mov    QWORD PTR [rsp+0x20],rax
    b059:	jmp    a987 <__cxa_finalize@plt+0x8a17>
    b05e:	cmp    dil,0x9
    b062:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    b068:	movsx  eax,bl
    b06b:	mov    rsi,r8
    b06e:	mov    rcx,rbp
    b071:	sub    eax,0x30
    b074:	cdqe   
    b076:	jmp    acb1 <__cxa_finalize@plt+0x8d41>
    b07b:	cmp    edx,0x5
    b07e:	jne    af6f <__cxa_finalize@plt+0x8fff>
    b084:	movzx  ebx,BYTE PTR [rbp+0x0]
    b088:	lea    rdx,[rbp+0x1]
    b08c:	jmp    a8e5 <__cxa_finalize@plt+0x8975>
    b091:	mov    rdi,rsi
    b094:	call   1dd0 <malloc@plt>
    b099:	test   rax,rax
    b09c:	mov    rcx,rax
    b09f:	mov    r11d,DWORD PTR [rsp+0x30]
    b0a4:	mov    r8,QWORD PTR [rsp+0x38]
    b0a9:	mov    r10,QWORD PTR [rsp+0x40]
    b0ae:	mov    r9,QWORD PTR [rsp+0x48]
    b0b3:	je     b21c <__cxa_finalize@plt+0x92ac>
    b0b9:	mov    rdx,QWORD PTR [r15]
    b0bc:	mov    rsi,QWORD PTR [rsp+0x8]
    b0c1:	mov    rdi,rcx
    b0c4:	mov    QWORD PTR [rsp+0x48],r9
    b0c9:	mov    QWORD PTR [rsp+0x40],r10
    b0ce:	mov    QWORD PTR [rsp+0x38],r8
    b0d3:	mov    DWORD PTR [rsp+0x30],r11d
    b0d8:	shl    rdx,0x5
    b0dc:	call   1db0 <memcpy@plt>
    b0e1:	mov    r9,QWORD PTR [rsp+0x48]
    b0e6:	mov    r10,QWORD PTR [rsp+0x40]
    b0eb:	mov    rcx,rax
    b0ee:	mov    r8,QWORD PTR [rsp+0x38]
    b0f3:	mov    r11d,DWORD PTR [rsp+0x30]
    b0f8:	jmp    b02e <__cxa_finalize@plt+0x90be>
    b0fd:	mov    rdi,rsi
    b100:	call   1dd0 <malloc@plt>
    b105:	test   rax,rax
    b108:	mov    rcx,rax
    b10b:	mov    r8,QWORD PTR [rsp+0x30]
    b110:	mov    r10,QWORD PTR [rsp+0x38]
    b115:	mov    r9,QWORD PTR [rsp+0x40]
    b11a:	je     b209 <__cxa_finalize@plt+0x9299>
    b120:	lea    rax,[rbx+rbx*4]
    b124:	mov    rsi,QWORD PTR [rsp+0x28]
    b129:	mov    rdi,rcx
    b12c:	mov    QWORD PTR [rsp+0x40],r9
    b131:	mov    QWORD PTR [rsp+0x38],r10
    b136:	lea    rdx,[rbx+rax*2]
    b13a:	mov    QWORD PTR [rsp+0x30],r8
    b13f:	shl    rdx,0x3
    b143:	call   1db0 <memcpy@plt>
    b148:	mov    rbx,QWORD PTR [r14]
    b14b:	mov    rcx,rax
    b14e:	mov    r9,QWORD PTR [rsp+0x40]
    b153:	mov    r10,QWORD PTR [rsp+0x38]
    b158:	mov    r8,QWORD PTR [rsp+0x30]
    b15d:	jmp    aa77 <__cxa_finalize@plt+0x8b07>
    b162:	mov    rax,QWORD PTR [r15]
    b165:	jmp    ab67 <__cxa_finalize@plt+0x8bf7>
    b16a:	cmp    edx,0x5
    b16d:	jne    af6f <__cxa_finalize@plt+0x8fff>
    b173:	movzx  ebx,BYTE PTR [r11]
    b177:	mov    rbp,r11
    b17a:	jmp    a8ee <__cxa_finalize@plt+0x897e>
    b17f:	add    r9,r9
    b182:	lea    rax,[rbx+0x1]
    b186:	cmp    r9,rbx
    b189:	cmovbe r9,rax
    b18d:	movabs rax,0x7ffffffffffffff
    b197:	cmp    r9,rax
    b19a:	ja     b3ab <__cxa_finalize@plt+0x943b>
    b1a0:	mov    rsi,r9
    b1a3:	mov    QWORD PTR [rsp+0x48],r9
    b1a8:	mov    QWORD PTR [rsp+0x40],r10
    b1ad:	shl    rsi,0x5
    b1b1:	cmp    QWORD PTR [rsp+0x8],rcx
    b1b6:	mov    QWORD PTR [rsp+0x38],r8
    b1bb:	mov    QWORD PTR [rsp+0x30],r11
    b1c0:	je     b37e <__cxa_finalize@plt+0x940e>
    b1c6:	mov    rdi,rcx
    b1c9:	call   1e40 <realloc@plt>
    b1ce:	mov    rdx,QWORD PTR [r15+0x8]
    b1d2:	mov    r11,QWORD PTR [rsp+0x30]
    b1d7:	mov    rcx,rax
    b1da:	mov    r8,QWORD PTR [rsp+0x38]
    b1df:	mov    r10,QWORD PTR [rsp+0x40]
    b1e4:	mov    r9,QWORD PTR [rsp+0x48]
    b1e9:	test   rcx,rcx
    b1ec:	je     b407 <__cxa_finalize@plt+0x9497>
    b1f2:	cmp    QWORD PTR [rsp+0x8],rdx
    b1f7:	mov    rax,QWORD PTR [r15]
    b1fa:	je     b3c0 <__cxa_finalize@plt+0x9450>
    b200:	mov    QWORD PTR [r15+0x8],rcx
    b204:	jmp    ac1d <__cxa_finalize@plt+0x8cad>
    b209:	mov    rcx,QWORD PTR [r15+0x8]
    b20d:	cmp    QWORD PTR [rsp+0x8],rcx
    b212:	je     b22c <__cxa_finalize@plt+0x92bc>
    b214:	mov    rdi,rcx
    b217:	call   1b80 <free@plt>
    b21c:	mov    rdi,QWORD PTR [r14+0x8]
    b220:	cmp    QWORD PTR [rsp+0x28],rdi
    b225:	je     b22c <__cxa_finalize@plt+0x92bc>
    b227:	call   1b80 <free@plt>
    b22c:	call   1ba0 <__errno_location@plt>
    b231:	mov    DWORD PTR [rax],0xc
    b237:	mov    eax,0xffffffff
    b23c:	jmp    a7c2 <__cxa_finalize@plt+0x8852>
    b241:	mov    rdi,rsi
    b244:	call   1dd0 <malloc@plt>
    b249:	mov    rdx,QWORD PTR [rsp+0x8]
    b24e:	mov    rcx,rax
    b251:	mov    r9,QWORD PTR [rsp+0x40]
    b256:	mov    r10,QWORD PTR [rsp+0x38]
    b25b:	mov    r8,QWORD PTR [rsp+0x30]
    b260:	jmp    ab4c <__cxa_finalize@plt+0x8bdc>
    b265:	mov    rsi,QWORD PTR [rsp+0x20]
    b26a:	cmp    rsi,0xffffffffffffffff
    b26e:	lea    rax,[rsi+0x1]
    b272:	mov    QWORD PTR [r12+0x40],rsi
    b277:	je     af6b <__cxa_finalize@plt+0x8ffb>
    b27d:	mov    rbx,QWORD PTR [rsp+0x20]
    b282:	mov    QWORD PTR [rsp+0x20],rax
    b287:	jmp    ac0d <__cxa_finalize@plt+0x8c9d>
    b28c:	mov    rdx,r11
    b28f:	add    rdx,0x1
    b293:	movzx  ecx,BYTE PTR [rdx]
    b296:	lea    esi,[rcx-0x30]
    b299:	cmp    sil,0x9
    b29d:	jbe    b28f <__cxa_finalize@plt+0x931f>
    b29f:	cmp    cl,0x24
    b2a2:	jne    abfe <__cxa_finalize@plt+0x8c8e>
    b2a8:	xor    ecx,ecx
    b2aa:	movabs rsi,0x1999999999999999
    b2b4:	sub    eax,0x30
    b2b7:	mov    rdx,r8
    b2ba:	cmp    rcx,rsi
    b2bd:	cdqe   
    b2bf:	ja     b2c8 <__cxa_finalize@plt+0x9358>
    b2c1:	lea    rdx,[rcx+rcx*4]
    b2c5:	add    rdx,rdx
    b2c8:	mov    rsi,r11
    b2cb:	xor    ebx,ebx
    b2cd:	add    rdx,rax
    b2d0:	movsx  eax,BYTE PTR [r11+0x1]
    b2d5:	setb   bl
    b2d8:	add    r11,0x1
    b2dc:	mov    rcx,rdx
    b2df:	test   rbx,rbx
    b2e2:	lea    edi,[rax-0x30]
    b2e5:	je     b358 <__cxa_finalize@plt+0x93e8>
    b2e7:	cmp    dil,0x9
    b2eb:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    b2f1:	sub    eax,0x30
    b2f4:	mov    rdx,r8
    b2f7:	mov    rsi,r11
    b2fa:	cdqe   
    b2fc:	jmp    b2cb <__cxa_finalize@plt+0x935b>
    b2fe:	cmp    dil,0x9
    b302:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    b308:	movsx  eax,cl
    b30b:	mov    rbp,rdx
    b30e:	mov    rcx,r8
    b311:	sub    eax,0x30
    b314:	cdqe   
    b316:	jmp    add9 <__cxa_finalize@plt+0x8e69>
    b31b:	mov    rsi,QWORD PTR [rsp+0x8]
    b320:	shl    rax,0x5
    b324:	mov    rdi,rcx
    b327:	mov    rdx,rax
    b32a:	mov    QWORD PTR [rsp+0x40],r9
    b32f:	mov    QWORD PTR [rsp+0x38],r10
    b334:	mov    QWORD PTR [rsp+0x30],r8
    b339:	call   1db0 <memcpy@plt>
    b33e:	mov    r9,QWORD PTR [rsp+0x40]
    b343:	mov    rcx,rax
    b346:	mov    r10,QWORD PTR [rsp+0x38]
    b34b:	mov    rax,QWORD PTR [r15]
    b34e:	mov    r8,QWORD PTR [rsp+0x30]
    b353:	jmp    ab63 <__cxa_finalize@plt+0x8bf3>
    b358:	cmp    dil,0x9
    b35c:	jbe    b2aa <__cxa_finalize@plt+0x933a>
    b362:	lea    rbx,[rdx-0x1]
    b366:	cmp    rbx,0xfffffffffffffffd
    b36a:	ja     af6b <__cxa_finalize@plt+0x8ffb>
    b370:	mov    QWORD PTR [r12+0x40],rbx
    b375:	lea    r11,[rsi+0x2]
    b379:	jmp    ac0d <__cxa_finalize@plt+0x8c9d>
    b37e:	mov    rdi,rsi
    b381:	call   1dd0 <malloc@plt>
    b386:	mov    rdx,QWORD PTR [rsp+0x8]
    b38b:	mov    rcx,rax
    b38e:	mov    r9,QWORD PTR [rsp+0x48]
    b393:	mov    r10,QWORD PTR [rsp+0x40]
    b398:	mov    r8,QWORD PTR [rsp+0x38]
    b39d:	mov    r11,QWORD PTR [rsp+0x30]
    b3a2:	jmp    b1e9 <__cxa_finalize@plt+0x9279>
    b3a7:	mov    rcx,QWORD PTR [r15+0x8]
    b3ab:	cmp    QWORD PTR [rsp+0x8],rcx
    b3b0:	jne    b214 <__cxa_finalize@plt+0x92a4>
    b3b6:	jmp    b21c <__cxa_finalize@plt+0x92ac>
    b3bb:	nop    DWORD PTR [rax+rax*1+0x0]
    b3c0:	mov    rsi,QWORD PTR [rsp+0x8]
    b3c5:	shl    rax,0x5
    b3c9:	mov    rdi,rcx
    b3cc:	mov    rdx,rax
    b3cf:	mov    QWORD PTR [rsp+0x48],r9
    b3d4:	mov    QWORD PTR [rsp+0x40],r10
    b3d9:	mov    QWORD PTR [rsp+0x38],r8
    b3de:	mov    QWORD PTR [rsp+0x30],r11
    b3e3:	call   1db0 <memcpy@plt>
    b3e8:	mov    r9,QWORD PTR [rsp+0x48]
    b3ed:	mov    rcx,rax
    b3f0:	mov    r10,QWORD PTR [rsp+0x40]
    b3f5:	mov    rax,QWORD PTR [r15]
    b3f8:	mov    r8,QWORD PTR [rsp+0x38]
    b3fd:	mov    r11,QWORD PTR [rsp+0x30]
    b402:	jmp    b200 <__cxa_finalize@plt+0x9290>
    b407:	mov    rcx,rdx
    b40a:	jmp    b3ab <__cxa_finalize@plt+0x943b>
    b40c:	nop    DWORD PTR [rax+0x0]
    b410:	push   r15
    b412:	push   r14
    b414:	mov    r15d,edi
    b417:	push   r13
    b419:	push   r12
    b41b:	lea    r12,[rip+0x20456e]        # 20f990 <version_etc_copyright@@Base+0x202110>
    b422:	push   rbp
    b423:	lea    rbp,[rip+0x20456e]        # 20f998 <version_etc_copyright@@Base+0x202118>
    b42a:	push   rbx
    b42b:	mov    r14,rsi
    b42e:	mov    r13,rdx
    b431:	sub    rbp,r12
    b434:	sub    rsp,0x8
    b438:	sar    rbp,0x3
    b43c:	call   1b28 <__uflow@plt-0x28>
    b441:	test   rbp,rbp
    b444:	je     b466 <__cxa_finalize@plt+0x94f6>
    b446:	xor    ebx,ebx
    b448:	nop    DWORD PTR [rax+rax*1+0x0]
    b450:	mov    rdx,r13
    b453:	mov    rsi,r14
    b456:	mov    edi,r15d
    b459:	call   QWORD PTR [r12+rbx*8]
    b45d:	add    rbx,0x1
    b461:	cmp    rbp,rbx
    b464:	jne    b450 <__cxa_finalize@plt+0x94e0>
    b466:	add    rsp,0x8
    b46a:	pop    rbx
    b46b:	pop    rbp
    b46c:	pop    r12
    b46e:	pop    r13
    b470:	pop    r14
    b472:	pop    r15
    b474:	ret    
    b475:	nop
    b476:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b480:	repz ret 
    b482:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b48c:	nop    DWORD PTR [rax+0x0]
    b490:	lea    rax,[rip+0x204b71]        # 210008 <quoting_style_args@@Base+0x4a8>
    b497:	test   rax,rax
    b49a:	je     b4b0 <__cxa_finalize@plt+0x9540>
    b49c:	mov    rdx,QWORD PTR [rax]
    b49f:	xor    esi,esi
    b4a1:	jmp    1ef0 <__cxa_atexit@plt>
    b4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b4b0:	xor    edx,edx
    b4b2:	xor    esi,esi
    b4b4:	jmp    1ef0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000b4bc <.fini>:
    b4bc:	sub    rsp,0x8
    b4c0:	add    rsp,0x8
    b4c4:	ret    
