
/bin/chmod:     file format elf64-x86-64


Disassembly of section .init:

0000000000001a58 <.init>:
    1a58:	sub    rsp,0x8
    1a5c:	mov    rax,QWORD PTR [rip+0x20c56d]        # 20dfd0 <__gmon_start__>
    1a63:	test   rax,rax
    1a66:	je     1a6a <__uflow@plt-0x16>
    1a68:	call   rax
    1a6a:	add    rsp,0x8
    1a6e:	ret    

Disassembly of section .plt:

0000000000001a70 <__uflow@plt-0x10>:
    1a70:	push   QWORD PTR [rip+0x20c33a]        # 20ddb0 <quoting_style_args@@Base+0x250>
    1a76:	jmp    QWORD PTR [rip+0x20c33c]        # 20ddb8 <quoting_style_args@@Base+0x258>
    1a7c:	nop    DWORD PTR [rax+0x0]

0000000000001a80 <__uflow@plt>:
    1a80:	jmp    QWORD PTR [rip+0x20c33a]        # 20ddc0 <__uflow@GLIBC_2.2.5>
    1a86:	push   0x0
    1a8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001a90 <getenv@plt>:
    1a90:	jmp    QWORD PTR [rip+0x20c332]        # 20ddc8 <getenv@GLIBC_2.2.5>
    1a96:	push   0x1
    1a9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001aa0 <abort@plt>:
    1aa0:	jmp    QWORD PTR [rip+0x20c32a]        # 20ddd0 <abort@GLIBC_2.2.5>
    1aa6:	push   0x2
    1aab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ab0 <__errno_location@plt>:
    1ab0:	jmp    QWORD PTR [rip+0x20c322]        # 20ddd8 <__errno_location@GLIBC_2.2.5>
    1ab6:	push   0x3
    1abb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ac0 <strncmp@plt>:
    1ac0:	jmp    QWORD PTR [rip+0x20c31a]        # 20dde0 <strncmp@GLIBC_2.2.5>
    1ac6:	push   0x4
    1acb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ad0 <_exit@plt>:
    1ad0:	jmp    QWORD PTR [rip+0x20c312]        # 20dde8 <_exit@GLIBC_2.2.5>
    1ad6:	push   0x5
    1adb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ae0 <__fpending@plt>:
    1ae0:	jmp    QWORD PTR [rip+0x20c30a]        # 20ddf0 <__fpending@GLIBC_2.2.5>
    1ae6:	push   0x6
    1aeb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001af0 <qsort@plt>:
    1af0:	jmp    QWORD PTR [rip+0x20c302]        # 20ddf8 <qsort@GLIBC_2.2.5>
    1af6:	push   0x7
    1afb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b00 <fcntl@plt>:
    1b00:	jmp    QWORD PTR [rip+0x20c2fa]        # 20de00 <fcntl@GLIBC_2.2.5>
    1b06:	push   0x8
    1b0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b10 <textdomain@plt>:
    1b10:	jmp    QWORD PTR [rip+0x20c2f2]        # 20de08 <textdomain@GLIBC_2.2.5>
    1b16:	push   0x9
    1b1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b20 <fclose@plt>:
    1b20:	jmp    QWORD PTR [rip+0x20c2ea]        # 20de10 <fclose@GLIBC_2.2.5>
    1b26:	push   0xa
    1b2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b30 <bindtextdomain@plt>:
    1b30:	jmp    QWORD PTR [rip+0x20c2e2]        # 20de18 <bindtextdomain@GLIBC_2.2.5>
    1b36:	push   0xb
    1b3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b40 <dcgettext@plt>:
    1b40:	jmp    QWORD PTR [rip+0x20c2da]        # 20de20 <dcgettext@GLIBC_2.2.5>
    1b46:	push   0xc
    1b4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b50 <__ctype_get_mb_cur_max@plt>:
    1b50:	jmp    QWORD PTR [rip+0x20c2d2]        # 20de28 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1b56:	push   0xd
    1b5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b60 <strlen@plt>:
    1b60:	jmp    QWORD PTR [rip+0x20c2ca]        # 20de30 <strlen@GLIBC_2.2.5>
    1b66:	push   0xe
    1b6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b70 <__lxstat@plt>:
    1b70:	jmp    QWORD PTR [rip+0x20c2c2]        # 20de38 <__lxstat@GLIBC_2.2.5>
    1b76:	push   0xf
    1b7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b80 <openat@plt>:
    1b80:	jmp    QWORD PTR [rip+0x20c2ba]        # 20de40 <openat@GLIBC_2.4>
    1b86:	push   0x10
    1b8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b90 <__stack_chk_fail@plt>:
    1b90:	jmp    QWORD PTR [rip+0x20c2b2]        # 20de48 <__stack_chk_fail@GLIBC_2.4>
    1b96:	push   0x11
    1b9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ba0 <getopt_long@plt>:
    1ba0:	jmp    QWORD PTR [rip+0x20c2aa]        # 20de50 <getopt_long@GLIBC_2.2.5>
    1ba6:	push   0x12
    1bab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bb0 <mbrtowc@plt>:
    1bb0:	jmp    QWORD PTR [rip+0x20c2a2]        # 20de58 <mbrtowc@GLIBC_2.2.5>
    1bb6:	push   0x13
    1bbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bc0 <__fxstatat@plt>:
    1bc0:	jmp    QWORD PTR [rip+0x20c29a]        # 20de60 <__fxstatat@GLIBC_2.4>
    1bc6:	push   0x14
    1bcb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bd0 <strrchr@plt>:
    1bd0:	jmp    QWORD PTR [rip+0x20c292]        # 20de68 <strrchr@GLIBC_2.2.5>
    1bd6:	push   0x15
    1bdb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001be0 <lseek@plt>:
    1be0:	jmp    QWORD PTR [rip+0x20c28a]        # 20de70 <lseek@GLIBC_2.2.5>
    1be6:	push   0x16
    1beb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bf0 <__assert_fail@plt>:
    1bf0:	jmp    QWORD PTR [rip+0x20c282]        # 20de78 <__assert_fail@GLIBC_2.2.5>
    1bf6:	push   0x17
    1bfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c00 <memset@plt>:
    1c00:	jmp    QWORD PTR [rip+0x20c27a]        # 20de80 <memset@GLIBC_2.2.5>
    1c06:	push   0x18
    1c0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c10 <fscanf@plt>:
    1c10:	jmp    QWORD PTR [rip+0x20c272]        # 20de88 <fscanf@GLIBC_2.2.5>
    1c16:	push   0x19
    1c1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c20 <close@plt>:
    1c20:	jmp    QWORD PTR [rip+0x20c26a]        # 20de90 <close@GLIBC_2.2.5>
    1c26:	push   0x1a
    1c2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c30 <closedir@plt>:
    1c30:	jmp    QWORD PTR [rip+0x20c262]        # 20de98 <closedir@GLIBC_2.2.5>
    1c36:	push   0x1b
    1c3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c40 <memcmp@plt>:
    1c40:	jmp    QWORD PTR [rip+0x20c25a]        # 20dea0 <memcmp@GLIBC_2.2.5>
    1c46:	push   0x1c
    1c4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c50 <fputs_unlocked@plt>:
    1c50:	jmp    QWORD PTR [rip+0x20c252]        # 20dea8 <fputs_unlocked@GLIBC_2.2.5>
    1c56:	push   0x1d
    1c5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c60 <calloc@plt>:
    1c60:	jmp    QWORD PTR [rip+0x20c24a]        # 20deb0 <calloc@GLIBC_2.2.5>
    1c66:	push   0x1e
    1c6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c70 <strcmp@plt>:
    1c70:	jmp    QWORD PTR [rip+0x20c242]        # 20deb8 <strcmp@GLIBC_2.2.5>
    1c76:	push   0x1f
    1c7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c80 <dirfd@plt>:
    1c80:	jmp    QWORD PTR [rip+0x20c23a]        # 20dec0 <dirfd@GLIBC_2.2.5>
    1c86:	push   0x20
    1c8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c90 <umask@plt>:
    1c90:	jmp    QWORD PTR [rip+0x20c232]        # 20dec8 <umask@GLIBC_2.2.5>
    1c96:	push   0x21
    1c9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ca0 <memcpy@plt>:
    1ca0:	jmp    QWORD PTR [rip+0x20c22a]        # 20ded0 <memcpy@GLIBC_2.14>
    1ca6:	push   0x22
    1cab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cb0 <fileno@plt>:
    1cb0:	jmp    QWORD PTR [rip+0x20c222]        # 20ded8 <fileno@GLIBC_2.2.5>
    1cb6:	push   0x23
    1cbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cc0 <__xstat@plt>:
    1cc0:	jmp    QWORD PTR [rip+0x20c21a]        # 20dee0 <__xstat@GLIBC_2.2.5>
    1cc6:	push   0x24
    1ccb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cd0 <readdir@plt>:
    1cd0:	jmp    QWORD PTR [rip+0x20c212]        # 20dee8 <readdir@GLIBC_2.2.5>
    1cd6:	push   0x25
    1cdb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ce0 <malloc@plt>:
    1ce0:	jmp    QWORD PTR [rip+0x20c20a]        # 20def0 <malloc@GLIBC_2.2.5>
    1ce6:	push   0x26
    1ceb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cf0 <fflush@plt>:
    1cf0:	jmp    QWORD PTR [rip+0x20c202]        # 20def8 <fflush@GLIBC_2.2.5>
    1cf6:	push   0x27
    1cfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d00 <fchmodat@plt>:
    1d00:	jmp    QWORD PTR [rip+0x20c1fa]        # 20df00 <fchmodat@GLIBC_2.4>
    1d06:	push   0x28
    1d0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d10 <nl_langinfo@plt>:
    1d10:	jmp    QWORD PTR [rip+0x20c1f2]        # 20df08 <nl_langinfo@GLIBC_2.2.5>
    1d16:	push   0x29
    1d1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d20 <ungetc@plt>:
    1d20:	jmp    QWORD PTR [rip+0x20c1ea]        # 20df10 <ungetc@GLIBC_2.2.5>
    1d26:	push   0x2a
    1d2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d30 <__fxstat@plt>:
    1d30:	jmp    QWORD PTR [rip+0x20c1e2]        # 20df18 <__fxstat@GLIBC_2.2.5>
    1d36:	push   0x2b
    1d3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d40 <__freading@plt>:
    1d40:	jmp    QWORD PTR [rip+0x20c1da]        # 20df20 <__freading@GLIBC_2.2.5>
    1d46:	push   0x2c
    1d4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d50 <fchdir@plt>:
    1d50:	jmp    QWORD PTR [rip+0x20c1d2]        # 20df28 <fchdir@GLIBC_2.2.5>
    1d56:	push   0x2d
    1d5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d60 <realloc@plt>:
    1d60:	jmp    QWORD PTR [rip+0x20c1ca]        # 20df30 <realloc@GLIBC_2.2.5>
    1d66:	push   0x2e
    1d6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d70 <fdopen@plt>:
    1d70:	jmp    QWORD PTR [rip+0x20c1c2]        # 20df38 <fdopen@GLIBC_2.2.5>
    1d76:	push   0x2f
    1d7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d80 <setlocale@plt>:
    1d80:	jmp    QWORD PTR [rip+0x20c1ba]        # 20df40 <setlocale@GLIBC_2.2.5>
    1d86:	push   0x30
    1d8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d90 <__printf_chk@plt>:
    1d90:	jmp    QWORD PTR [rip+0x20c1b2]        # 20df48 <__printf_chk@GLIBC_2.3.4>
    1d96:	push   0x31
    1d9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001da0 <memmove@plt>:
    1da0:	jmp    QWORD PTR [rip+0x20c1aa]        # 20df50 <memmove@GLIBC_2.2.5>
    1da6:	push   0x32
    1dab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001db0 <error@plt>:
    1db0:	jmp    QWORD PTR [rip+0x20c1a2]        # 20df58 <error@GLIBC_2.2.5>
    1db6:	push   0x33
    1dbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001dc0 <open@plt>:
    1dc0:	jmp    QWORD PTR [rip+0x20c19a]        # 20df60 <open@GLIBC_2.2.5>
    1dc6:	push   0x34
    1dcb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001dd0 <fseeko@plt>:
    1dd0:	jmp    QWORD PTR [rip+0x20c192]        # 20df68 <fseeko@GLIBC_2.2.5>
    1dd6:	push   0x35
    1ddb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001de0 <fdopendir@plt>:
    1de0:	jmp    QWORD PTR [rip+0x20c18a]        # 20df70 <fdopendir@GLIBC_2.4>
    1de6:	push   0x36
    1deb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001df0 <fstatfs@plt>:
    1df0:	jmp    QWORD PTR [rip+0x20c182]        # 20df78 <fstatfs@GLIBC_2.2.5>
    1df6:	push   0x37
    1dfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e00 <__cxa_atexit@plt>:
    1e00:	jmp    QWORD PTR [rip+0x20c17a]        # 20df80 <__cxa_atexit@GLIBC_2.2.5>
    1e06:	push   0x38
    1e0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e10 <exit@plt>:
    1e10:	jmp    QWORD PTR [rip+0x20c172]        # 20df88 <exit@GLIBC_2.2.5>
    1e16:	push   0x39
    1e1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e20 <fwrite@plt>:
    1e20:	jmp    QWORD PTR [rip+0x20c16a]        # 20df90 <fwrite@GLIBC_2.2.5>
    1e26:	push   0x3a
    1e2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e30 <__fprintf_chk@plt>:
    1e30:	jmp    QWORD PTR [rip+0x20c162]        # 20df98 <__fprintf_chk@GLIBC_2.3.4>
    1e36:	push   0x3b
    1e3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e40 <mbsinit@plt>:
    1e40:	jmp    QWORD PTR [rip+0x20c15a]        # 20dfa0 <mbsinit@GLIBC_2.2.5>
    1e46:	push   0x3c
    1e4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e50 <iswprint@plt>:
    1e50:	jmp    QWORD PTR [rip+0x20c152]        # 20dfa8 <iswprint@GLIBC_2.2.5>
    1e56:	push   0x3d
    1e5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e60 <__ctype_b_loc@plt>:
    1e60:	jmp    QWORD PTR [rip+0x20c14a]        # 20dfb0 <__ctype_b_loc@GLIBC_2.3>
    1e66:	push   0x3e
    1e6b:	jmp    1a70 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000001e70 <free@plt>:
    1e70:	jmp    QWORD PTR [rip+0x20c142]        # 20dfb8 <free@GLIBC_2.2.5>
    1e76:	xchg   ax,ax

0000000000001e78 <__cxa_finalize@plt>:
    1e78:	jmp    QWORD PTR [rip+0x20c162]        # 20dfe0 <__cxa_finalize@GLIBC_2.2.5>
    1e7e:	xchg   ax,ax

Disassembly of section .text:

0000000000001e80 <fts_open@@Base-0x5710>:
    1e80:	push   r15
    1e82:	push   r14
    1e84:	xor    r15d,r15d
    1e87:	push   r13
    1e89:	push   r12
    1e8b:	xor    r14d,r14d
    1e8e:	push   rbp
    1e8f:	push   rbx
    1e90:	movsxd rbp,edi
    1e93:	mov    rbx,rsi
    1e96:	xor    r12d,r12d
    1e99:	xor    r13d,r13d
    1e9c:	sub    rsp,0xf8
    1ea3:	mov    rdi,QWORD PTR [rsi]
    1ea6:	mov    rax,QWORD PTR fs:0x28
    1eaf:	mov    QWORD PTR [rsp+0xe8],rax
    1eb7:	xor    eax,eax
    1eb9:	mov    QWORD PTR [rsp+0x38],0x0
    1ec2:	call   38f0 <__cxa_finalize@plt+0x1a78>
    1ec7:	lea    rsi,[rip+0x9313]        # b1e1 <quoting_style_vals@@Base+0x81>
    1ece:	mov    edi,0x6
    1ed3:	call   1d80 <setlocale@plt>
    1ed8:	lea    rsi,[rip+0x83d3]        # a2b2 <_IO_stdin_used@@Base+0x92>
    1edf:	lea    rdi,[rip+0x83be]        # a2a4 <_IO_stdin_used@@Base+0x84>
    1ee6:	call   1b30 <bindtextdomain@plt>
    1eeb:	lea    rdi,[rip+0x83b2]        # a2a4 <_IO_stdin_used@@Base+0x84>
    1ef2:	call   1b10 <textdomain@plt>
    1ef7:	lea    rdi,[rip+0x11f2]        # 30f0 <__cxa_finalize@plt+0x1278>
    1efe:	call   a1d0 <fts_children@@Base+0x1f60>
    1f03:	lea    rax,[rsp+0x38]
    1f08:	mov    BYTE PTR [rip+0x20c1f9],0x0        # 20e108 <stderr@@GLIBC_2.2.5+0x28>
    1f0f:	mov    BYTE PTR [rip+0x20c1f3],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    1f16:	mov    BYTE PTR [rip+0x20c1ed],0x0        # 20e10a <stderr@@GLIBC_2.2.5+0x2a>
    1f1d:	mov    QWORD PTR [rsp+0x18],rax
    1f22:	nop    WORD PTR [rax+rax*1+0x0]
    1f28:	lea    rcx,[rip+0x20bad1]        # 20da00 <version_etc_copyright@@Base+0x202540>
    1f2f:	lea    rdx,[rip+0x893a]        # a870 <_IO_stdin_used@@Base+0x650>
    1f36:	xor    r8d,r8d
    1f39:	mov    rsi,rbx
    1f3c:	mov    edi,ebp
    1f3e:	call   1ba0 <getopt_long@plt>
    1f43:	cmp    eax,0xffffffff
    1f46:	je     2134 <__cxa_finalize@plt+0x2bc>
    1f4c:	cmp    eax,0x63
    1f4f:	je     20c0 <__cxa_finalize@plt+0x248>
    1f55:	jle    1fa0 <__cxa_finalize@plt+0x128>
    1f57:	cmp    eax,0x76
    1f5a:	je     20d0 <__cxa_finalize@plt+0x258>
    1f60:	jle    2010 <__cxa_finalize@plt+0x198>
    1f66:	cmp    eax,0x80
    1f6b:	je     20f0 <__cxa_finalize@plt+0x278>
    1f71:	jle    2912 <__cxa_finalize@plt+0xa9a>
    1f77:	cmp    eax,0x81
    1f7c:	je     20e0 <__cxa_finalize@plt+0x268>
    1f82:	cmp    eax,0x82
    1f87:	jne    2a89 <__cxa_finalize@plt+0xc11>
    1f8d:	mov    r15,QWORD PTR [rip+0x20c12c]        # 20e0c0 <optarg@@GLIBC_2.2.5>
    1f94:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    1f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1fa0:	cmp    eax,0x37
    1fa3:	jg     2030 <__cxa_finalize@plt+0x1b8>
    1fa9:	cmp    eax,0x30
    1fac:	jge    2058 <__cxa_finalize@plt+0x1e0>
    1fb2:	cmp    eax,0xffffff7e
    1fb7:	je     2aea <__cxa_finalize@plt+0xc72>
    1fbd:	jg     2859 <__cxa_finalize@plt+0x9e1>
    1fc3:	cmp    eax,0xffffff7d
    1fc8:	jne    2a89 <__cxa_finalize@plt+0xc11>
    1fce:	sub    rsp,0x8
    1fd2:	mov    rdi,QWORD PTR [rip+0x20c0cf]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    1fd9:	mov    rcx,QWORD PTR [rip+0x20c038]        # 20e018 <Version@@Base>
    1fe0:	push   0x0
    1fe2:	lea    r9,[rip+0x82db]        # a2c4 <_IO_stdin_used@@Base+0xa4>
    1fe9:	lea    r8,[rip+0x82e1]        # a2d1 <_IO_stdin_used@@Base+0xb1>
    1ff0:	lea    rdx,[rip+0x82a9]        # a2a0 <_IO_stdin_used@@Base+0x80>
    1ff7:	lea    rsi,[rip+0x8226]        # a224 <_IO_stdin_used@@Base+0x4>
    1ffe:	xor    eax,eax
    2000:	call   5b50 <__cxa_finalize@plt+0x3cd8>
    2005:	xor    edi,edi
    2007:	call   1e10 <exit@plt>
    200c:	nop    DWORD PTR [rax+0x0]
    2010:	cmp    eax,0x6f
    2013:	je     2058 <__cxa_finalize@plt+0x1e0>
    2015:	jg     2920 <__cxa_finalize@plt+0xaa8>
    201b:	cmp    eax,0x66
    201e:	jne    2904 <__cxa_finalize@plt+0xa8c>
    2024:	mov    BYTE PTR [rip+0x20c0de],0x1        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    202b:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    2030:	cmp    eax,0x52
    2033:	jne    2041 <__cxa_finalize@plt+0x1c9>
    2035:	mov    BYTE PTR [rip+0x20c0ce],0x1        # 20e10a <stderr@@GLIBC_2.2.5+0x2a>
    203c:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    2041:	jle    24bf <__cxa_finalize@plt+0x647>
    2047:	cmp    eax,0x58
    204a:	je     2058 <__cxa_finalize@plt+0x1e0>
    204c:	cmp    eax,0x61
    204f:	jne    2a89 <__cxa_finalize@plt+0xc11>
    2055:	nop    DWORD PTR [rax]
    2058:	movsxd rax,DWORD PTR [rip+0x20c051]        # 20e0b0 <optind@@GLIBC_2.2.5>
    205f:	mov    rax,QWORD PTR [rbx+rax*8-0x8]
    2064:	mov    rdi,rax
    2067:	mov    QWORD PTR [rsp+0x8],rax
    206c:	call   1b60 <strlen@plt>
    2071:	xor    ecx,ecx
    2073:	test   r12,r12
    2076:	mov    rdx,rax
    2079:	setne  cl
    207c:	add    rcx,r12
    207f:	lea    r8,[rax+rcx*1]
    2083:	cmp    QWORD PTR [rsp+0x38],r8
    2088:	jbe    20f8 <__cxa_finalize@plt+0x280>
    208a:	mov    rsi,QWORD PTR [rsp+0x8]
    208f:	lea    rdi,[r13+rcx*1+0x0]
    2094:	mov    BYTE PTR [r13+r12*1+0x0],0x2c
    209a:	add    rdx,0x1
    209e:	mov    QWORD PTR [rsp+0x10],r8
    20a3:	call   1ca0 <memcpy@plt>
    20a8:	mov    r8,QWORD PTR [rsp+0x10]
    20ad:	mov    BYTE PTR [rip+0x20c054],0x1        # 20e108 <stderr@@GLIBC_2.2.5+0x28>
    20b4:	mov    r12,r8
    20b7:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    20bc:	nop    DWORD PTR [rax+0x0]
    20c0:	mov    DWORD PTR [rip+0x20bf46],0x1        # 20e010 <quoting_style_args@@Base+0x4b0>
    20ca:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    20cf:	nop
    20d0:	mov    DWORD PTR [rip+0x20bf36],0x0        # 20e010 <quoting_style_args@@Base+0x4b0>
    20da:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    20df:	nop
    20e0:	mov    r14d,0x1
    20e6:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    20eb:	nop    DWORD PTR [rax+rax*1+0x0]
    20f0:	xor    r14d,r14d
    20f3:	jmp    1f28 <__cxa_finalize@plt+0xb0>
    20f8:	mov    rsi,QWORD PTR [rsp+0x18]
    20fd:	mov    QWORD PTR [rsp+0x28],rax
    2102:	lea    rax,[r8+0x1]
    2106:	mov    rdi,r13
    2109:	mov    QWORD PTR [rsp+0x20],rcx
    210e:	mov    QWORD PTR [rsp+0x10],r8
    2113:	mov    QWORD PTR [rsp+0x38],rax
    2118:	call   5e10 <__cxa_finalize@plt+0x3f98>
    211d:	mov    rdx,QWORD PTR [rsp+0x28]
    2122:	mov    r13,rax
    2125:	mov    rcx,QWORD PTR [rsp+0x20]
    212a:	mov    r8,QWORD PTR [rsp+0x10]
    212f:	jmp    208a <__cxa_finalize@plt+0x212>
    2134:	test   r15,r15
    2137:	je     24cd <__cxa_finalize@plt+0x655>
    213d:	test   r13,r13
    2140:	jne    2ba5 <__cxa_finalize@plt+0xd2d>
    2146:	cmp    ebp,DWORD PTR [rip+0x20bf64]        # 20e0b0 <optind@@GLIBC_2.2.5>
    214c:	jle    2a68 <__cxa_finalize@plt+0xbf0>
    2152:	mov    rdi,r15
    2155:	call   36f0 <__cxa_finalize@plt+0x1878>
    215a:	mov    rbp,rax
    215d:	mov    QWORD PTR [rip+0x20bfac],rax        # 20e110 <stderr@@GLIBC_2.2.5+0x30>
    2164:	call   1ab0 <__errno_location@plt>
    2169:	test   rbp,rbp
    216c:	mov    r12,rax
    216f:	je     2af6 <__cxa_finalize@plt+0xc7e>
    2175:	and    r14b,BYTE PTR [rip+0x20bf8e]        # 20e10a <stderr@@GLIBC_2.2.5+0x2a>
    217c:	call   1ab0 <__errno_location@plt>
    2181:	mov    QWORD PTR [rsp+0x20],rax
    2186:	test   r14b,r14b
    2189:	jne    29c1 <__cxa_finalize@plt+0xb49>
    218f:	mov    QWORD PTR [rip+0x20bf66],0x0        # 20e100 <stderr@@GLIBC_2.2.5+0x20>
    219a:	movsxd rax,DWORD PTR [rip+0x20bf0f]        # 20e0b0 <optind@@GLIBC_2.2.5>
    21a1:	xor    edx,edx
    21a3:	mov    esi,0x411
    21a8:	lea    r12,[rip+0x89e5]        # ab94 <_IO_stdin_used@@Base+0x974>
    21af:	lea    rdi,[rbx+rax*8]
    21b3:	mov    ebx,0x1
    21b8:	call   5f40 <__cxa_finalize@plt+0x40c8>
    21bd:	mov    rbp,rax
    21c0:	lea    rax,[rsp+0xd0]
    21c8:	mov    rdi,rbp
    21cb:	mov    QWORD PTR [rsp+0x8],rax
    21d0:	lea    rax,[rsp+0xdc]
    21d8:	mov    QWORD PTR [rsp+0x10],rax
    21dd:	lea    rax,[rsp+0xdd]
    21e5:	mov    QWORD PTR [rsp+0x18],rax
    21ea:	call   7ac0 <fts_read@@Base>
    21ef:	test   rax,rax
    21f2:	mov    r14,rax
    21f5:	je     223b <__cxa_finalize@plt+0x3c3>
    21f7:	nop    WORD PTR [rax+rax*1+0x0]
    2200:	cmp    WORD PTR [rax+0x70],0xd
    2205:	mov    r13,QWORD PTR [rax+0x38]
    2209:	ja     23ef <__cxa_finalize@plt+0x577>
    220f:	movzx  eax,WORD PTR [rax+0x70]
    2213:	movsxd rax,DWORD PTR [r12+rax*4]
    2217:	add    rax,r12
    221a:	jmp    rax
    221c:	mov    r15d,0x1
    2222:	nop    WORD PTR [rax+rax*1+0x0]
    2228:	mov    rdi,rbp
    222b:	and    ebx,r15d
    222e:	call   7ac0 <fts_read@@Base>
    2233:	test   rax,rax
    2236:	mov    r14,rax
    2239:	jne    2200 <__cxa_finalize@plt+0x388>
    223b:	mov    rax,QWORD PTR [rsp+0x20]
    2240:	cmp    DWORD PTR [rax],0x0
    2243:	je     2256 <__cxa_finalize@plt+0x3de>
    2245:	movzx  ebx,BYTE PTR [rip+0x20bebd]        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    224c:	test   bl,bl
    224e:	je     2996 <__cxa_finalize@plt+0xb1e>
    2254:	xor    ebx,ebx
    2256:	mov    rdi,rbp
    2259:	call   7930 <fts_close@@Base>
    225e:	test   eax,eax
    2260:	je     228a <__cxa_finalize@plt+0x412>
    2262:	lea    rsi,[rip+0x8124]        # a38d <_IO_stdin_used@@Base+0x16d>
    2269:	mov    edx,0x5
    226e:	xor    edi,edi
    2270:	xor    ebx,ebx
    2272:	call   1b40 <dcgettext@plt>
    2277:	mov    rdx,rax
    227a:	mov    rax,QWORD PTR [rsp+0x20]
    227f:	xor    edi,edi
    2281:	mov    esi,DWORD PTR [rax]
    2283:	xor    eax,eax
    2285:	call   1db0 <error@plt>
    228a:	xor    ebx,0x1
    228d:	movzx  eax,bl
    2290:	mov    rbx,QWORD PTR [rsp+0xe8]
    2298:	xor    rbx,QWORD PTR fs:0x28
    22a1:	jne    2af1 <__cxa_finalize@plt+0xc79>
    22a7:	add    rsp,0xf8
    22ae:	pop    rbx
    22af:	pop    rbp
    22b0:	pop    r12
    22b2:	pop    r13
    22b4:	pop    r14
    22b6:	pop    r15
    22b8:	ret    
    22b9:	cmp    BYTE PTR [rip+0x20be49],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    22c0:	je     292e <__cxa_finalize@plt+0xab6>
    22c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    22d0:	cmp    DWORD PTR [rip+0x20bd39],0x2        # 20e010 <quoting_style_args@@Base+0x4b0>
    22d7:	je     22e6 <__cxa_finalize@plt+0x46e>
    22d9:	cmp    DWORD PTR [rip+0x20bd30],0x0        # 20e010 <quoting_style_args@@Base+0x4b0>
    22e0:	je     250f <__cxa_finalize@plt+0x697>
    22e6:	xor    r15d,r15d
    22e9:	cmp    BYTE PTR [rip+0x20be1a],0x0        # 20e10a <stderr@@GLIBC_2.2.5+0x2a>
    22f0:	jne    2228 <__cxa_finalize@plt+0x3b0>
    22f6:	mov    edx,0x4
    22fb:	mov    rsi,r14
    22fe:	mov    rdi,rbp
    2301:	call   8240 <fts_set@@Base>
    2306:	jmp    2228 <__cxa_finalize@plt+0x3b0>
    230b:	cmp    BYTE PTR [rip+0x20bdf7],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    2312:	jne    22d0 <__cxa_finalize@plt+0x458>
    2314:	mov    rsi,r13
    2317:	mov    edi,0x4
    231c:	call   5330 <__cxa_finalize@plt+0x34b8>
    2321:	lea    rsi,[rip+0x85e0]        # a908 <_IO_stdin_used@@Base+0x6e8>
    2328:	mov    r15,rax
    232b:	xor    edi,edi
    232d:	mov    edx,0x5
    2332:	call   1b40 <dcgettext@plt>
    2337:	mov    rcx,r15
    233a:	mov    rdx,rax
    233d:	xor    esi,esi
    233f:	xor    edi,edi
    2341:	xor    eax,eax
    2343:	call   1db0 <error@plt>
    2348:	jmp    22d0 <__cxa_finalize@plt+0x458>
    234a:	cmp    QWORD PTR [r14+0x58],0x0
    234f:	jne    235c <__cxa_finalize@plt+0x4e4>
    2351:	cmp    QWORD PTR [r14+0x20],0x0
    2356:	je     2a1d <__cxa_finalize@plt+0xba5>
    235c:	cmp    BYTE PTR [rip+0x20bda6],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    2363:	jne    22d0 <__cxa_finalize@plt+0x458>
    2369:	mov    rsi,r13
    236c:	mov    edi,0x4
    2371:	call   5330 <__cxa_finalize@plt+0x34b8>
    2376:	lea    rsi,[rip+0x7fae]        # a32b <_IO_stdin_used@@Base+0x10b>
    237d:	mov    r15,rax
    2380:	mov    edx,0x5
    2385:	xor    edi,edi
    2387:	call   1b40 <dcgettext@plt>
    238c:	mov    esi,DWORD PTR [r14+0x40]
    2390:	mov    rdx,rax
    2393:	mov    rcx,r15
    2396:	xor    edi,edi
    2398:	xor    eax,eax
    239a:	call   1db0 <error@plt>
    239f:	jmp    22d0 <__cxa_finalize@plt+0x458>
    23a4:	cmp    BYTE PTR [rip+0x20bd5e],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    23ab:	jne    22d0 <__cxa_finalize@plt+0x458>
    23b1:	mov    rdx,r13
    23b4:	xor    edi,edi
    23b6:	mov    esi,0x3
    23bb:	call   5430 <__cxa_finalize@plt+0x35b8>
    23c0:	mov    esi,DWORD PTR [r14+0x40]
    23c4:	lea    rdx,[rip+0x7f4d]        # a318 <_IO_stdin_used@@Base+0xf8>
    23cb:	mov    rcx,rax
    23ce:	xor    edi,edi
    23d0:	xor    eax,eax
    23d2:	call   1db0 <error@plt>
    23d7:	jmp    22d0 <__cxa_finalize@plt+0x458>
    23dc:	mov    rsi,r14
    23df:	mov    rdi,rbp
    23e2:	call   5f90 <__cxa_finalize@plt+0x4118>
    23e7:	test   al,al
    23e9:	jne    294f <__cxa_finalize@plt+0xad7>
    23ef:	mov    rax,QWORD PTR [rip+0x20bd0a]        # 20e100 <stderr@@GLIBC_2.2.5+0x20>
    23f6:	test   rax,rax
    23f9:	je     240b <__cxa_finalize@plt+0x593>
    23fb:	mov    rcx,QWORD PTR [rax]
    23fe:	cmp    QWORD PTR [r14+0x80],rcx
    2405:	je     286a <__cxa_finalize@plt+0x9f2>
    240b:	mov    edi,DWORD PTR [r14+0x90]
    2412:	mov    rax,QWORD PTR [r14+0x30]
    2416:	xor    esi,esi
    2418:	mov    edx,DWORD PTR [rip+0x20bcee]        # 20e10c <stderr@@GLIBC_2.2.5+0x2c>
    241e:	mov    rcx,QWORD PTR [rip+0x20bceb]        # 20e110 <stderr@@GLIBC_2.2.5+0x30>
    2425:	mov    r15d,edi
    2428:	mov    QWORD PTR [rsp+0x28],rax
    242d:	mov    DWORD PTR [rsp+0x4],edi
    2431:	and    r15d,0xf000
    2438:	cmp    r15d,0x4000
    243f:	sete   sil
    2443:	xor    r8d,r8d
    2446:	call   3780 <__cxa_finalize@plt+0x1908>
    244b:	cmp    r15d,0xa000
    2452:	mov    edx,eax
    2454:	mov    DWORD PTR [rsp],eax
    2457:	je     25a2 <__cxa_finalize@plt+0x72a>
    245d:	mov    edi,DWORD PTR [rbp+0x2c]
    2460:	mov    rsi,QWORD PTR [rsp+0x28]
    2465:	xor    ecx,ecx
    2467:	call   1d00 <fchmodat@plt>
    246c:	test   eax,eax
    246e:	je     25fc <__cxa_finalize@plt+0x784>
    2474:	cmp    BYTE PTR [rip+0x20bc8e],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    247b:	jne    22d0 <__cxa_finalize@plt+0x458>
    2481:	mov    rsi,r13
    2484:	mov    edi,0x4
    2489:	call   5330 <__cxa_finalize@plt+0x34b8>
    248e:	lea    rsi,[rip+0x7ec0]        # a355 <_IO_stdin_used@@Base+0x135>
    2495:	xor    edi,edi
    2497:	mov    edx,0x5
    249c:	mov    r15,rax
    249f:	call   1b40 <dcgettext@plt>
    24a4:	mov    rdx,rax
    24a7:	mov    rax,QWORD PTR [rsp+0x20]
    24ac:	mov    rcx,r15
    24af:	xor    edi,edi
    24b1:	mov    esi,DWORD PTR [rax]
    24b3:	xor    eax,eax
    24b5:	call   1db0 <error@plt>
    24ba:	jmp    22d0 <__cxa_finalize@plt+0x458>
    24bf:	cmp    eax,0x3d
    24c2:	je     2058 <__cxa_finalize@plt+0x1e0>
    24c8:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    24cd:	test   r13,r13
    24d0:	movsxd rax,DWORD PTR [rip+0x20bbd9]        # 20e0b0 <optind@@GLIBC_2.2.5>
    24d7:	je     2a40 <__cxa_finalize@plt+0xbc8>
    24dd:	cmp    ebp,eax
    24df:	jle    2b9e <__cxa_finalize@plt+0xd26>
    24e5:	mov    rdi,r13
    24e8:	call   3340 <__cxa_finalize@plt+0x14c8>
    24ed:	test   rax,rax
    24f0:	mov    QWORD PTR [rip+0x20bc19],rax        # 20e110 <stderr@@GLIBC_2.2.5+0x30>
    24f7:	je     2b2f <__cxa_finalize@plt+0xcb7>
    24fd:	xor    edi,edi
    24ff:	call   1c90 <umask@plt>
    2504:	mov    DWORD PTR [rip+0x20bc02],eax        # 20e10c <stderr@@GLIBC_2.2.5+0x2c>
    250a:	jmp    2175 <__cxa_finalize@plt+0x2fd>
    250f:	mov    rsi,QWORD PTR [rsp+0x8]
    2514:	mov    edi,DWORD PTR [rsp]
    2517:	call   31a0 <__cxa_finalize@plt+0x1328>
    251c:	mov    rsi,QWORD PTR [rsp+0x10]
    2521:	mov    edi,DWORD PTR [rsp+0x4]
    2525:	mov    BYTE PTR [rsp+0xda],0x0
    252d:	call   31a0 <__cxa_finalize@plt+0x1328>
    2532:	lea    rsi,[rip+0x85f7]        # ab30 <_IO_stdin_used@@Base+0x910>
    2539:	mov    edx,0x5
    253e:	xor    edi,edi
    2540:	mov    BYTE PTR [rsp+0xe6],0x0
    2548:	call   1b40 <dcgettext@plt>
    254d:	mov    rsi,r13
    2550:	mov    edi,0x4
    2555:	mov    r15,rax
    2558:	call   5330 <__cxa_finalize@plt+0x34b8>
    255d:	mov    ecx,DWORD PTR [rsp+0x4]
    2561:	sub    rsp,0x8
    2565:	mov    rsi,r15
    2568:	mov    rdx,QWORD PTR [rsp+0x10]
    256d:	mov    edi,0x1
    2572:	xor    r15d,r15d
    2575:	and    ecx,0xfff
    257b:	add    rdx,0x1
    257f:	push   rdx
    2580:	mov    r9d,DWORD PTR [rsp+0x10]
    2585:	mov    rdx,rax
    2588:	mov    r8,QWORD PTR [rsp+0x28]
    258d:	xor    eax,eax
    258f:	and    r9d,0xfff
    2596:	call   1d90 <__printf_chk@plt>
    259b:	pop    rax
    259c:	pop    rdx
    259d:	jmp    22e9 <__cxa_finalize@plt+0x471>
    25a2:	mov    eax,DWORD PTR [rip+0x20ba68]        # 20e010 <quoting_style_args@@Base+0x4b0>
    25a8:	cmp    eax,0x2
    25ab:	je     25f1 <__cxa_finalize@plt+0x779>
    25ad:	test   eax,eax
    25af:	jne    25f1 <__cxa_finalize@plt+0x779>
    25b1:	mov    rsi,r13
    25b4:	mov    edi,0x4
    25b9:	mov    r15d,0x1
    25bf:	call   5330 <__cxa_finalize@plt+0x34b8>
    25c4:	lea    rsi,[rip+0x852d]        # aaf8 <_IO_stdin_used@@Base+0x8d8>
    25cb:	mov    r13,rax
    25ce:	mov    edx,0x5
    25d3:	xor    edi,edi
    25d5:	call   1b40 <dcgettext@plt>
    25da:	mov    rdx,r13
    25dd:	mov    rsi,rax
    25e0:	mov    edi,0x1
    25e5:	xor    eax,eax
    25e7:	call   1d90 <__printf_chk@plt>
    25ec:	jmp    22e9 <__cxa_finalize@plt+0x471>
    25f1:	mov    r15d,0x1
    25f7:	jmp    22e9 <__cxa_finalize@plt+0x471>
    25fc:	cmp    DWORD PTR [rip+0x20ba0d],0x2        # 20e010 <quoting_style_args@@Base+0x4b0>
    2603:	je     26b1 <__cxa_finalize@plt+0x839>
    2609:	mov    ecx,DWORD PTR [rsp]
    260c:	mov    eax,ecx
    260e:	and    ch,0xe
    2611:	jne    2771 <__cxa_finalize@plt+0x8f9>
    2617:	xor    eax,DWORD PTR [rsp+0x4]
    261b:	test   eax,0xfff
    2620:	je     27d5 <__cxa_finalize@plt+0x95d>
    2626:	mov    rsi,QWORD PTR [rsp+0x8]
    262b:	mov    edi,DWORD PTR [rsp]
    262e:	call   31a0 <__cxa_finalize@plt+0x1328>
    2633:	mov    rsi,QWORD PTR [rsp+0x10]
    2638:	mov    edi,DWORD PTR [rsp+0x4]
    263c:	mov    BYTE PTR [rsp+0xda],0x0
    2644:	call   31a0 <__cxa_finalize@plt+0x1328>
    2649:	lea    rsi,[rip+0x8470]        # aac0 <_IO_stdin_used@@Base+0x8a0>
    2650:	mov    edx,0x5
    2655:	xor    edi,edi
    2657:	mov    BYTE PTR [rsp+0xe6],0x0
    265f:	call   1b40 <dcgettext@plt>
    2664:	mov    rsi,r13
    2667:	mov    edi,0x4
    266c:	mov    r15,rax
    266f:	call   5330 <__cxa_finalize@plt+0x34b8>
    2674:	mov    ecx,DWORD PTR [rsp+0x4]
    2678:	sub    rsp,0x8
    267c:	mov    edi,0x1
    2681:	mov    rsi,QWORD PTR [rsp+0x10]
    2686:	and    ecx,0xfff
    268c:	lea    rdx,[rsi+0x1]
    2690:	mov    rsi,r15
    2693:	push   rdx
    2694:	mov    r9d,DWORD PTR [rsp+0x10]
    2699:	mov    rdx,rax
    269c:	mov    r8,QWORD PTR [rsp+0x28]
    26a1:	xor    eax,eax
    26a3:	and    r9d,0xfff
    26aa:	call   1d90 <__printf_chk@plt>
    26af:	pop    rcx
    26b0:	pop    rsi
    26b1:	movzx  r15d,BYTE PTR [rip+0x20ba4f]        # 20e108 <stderr@@GLIBC_2.2.5+0x28>
    26b9:	test   r15b,r15b
    26bc:	je     25f1 <__cxa_finalize@plt+0x779>
    26c2:	mov    edi,DWORD PTR [rsp+0x4]
    26c6:	mov    rcx,QWORD PTR [rip+0x20ba43]        # 20e110 <stderr@@GLIBC_2.2.5+0x30>
    26cd:	xor    esi,esi
    26cf:	mov    eax,edi
    26d1:	and    eax,0xf000
    26d6:	cmp    eax,0x4000
    26db:	sete   sil
    26df:	xor    edx,edx
    26e1:	xor    r8d,r8d
    26e4:	call   3780 <__cxa_finalize@plt+0x1908>
    26e9:	mov    edx,eax
    26eb:	not    edx
    26ed:	test   DWORD PTR [rsp],edx
    26f0:	je     22e9 <__cxa_finalize@plt+0x471>
    26f6:	mov    r15,QWORD PTR [rsp+0x8]
    26fb:	mov    edi,DWORD PTR [rsp]
    26fe:	mov    DWORD PTR [rsp+0x28],eax
    2702:	mov    rsi,r15
    2705:	call   31a0 <__cxa_finalize@plt+0x1328>
    270a:	mov    eax,DWORD PTR [rsp+0x28]
    270e:	mov    rsi,QWORD PTR [rsp+0x10]
    2713:	mov    edi,eax
    2715:	call   31a0 <__cxa_finalize@plt+0x1328>
    271a:	mov    rdx,r13
    271d:	mov    esi,0x3
    2722:	xor    edi,edi
    2724:	mov    BYTE PTR [rsp+0xe6],0x0
    272c:	mov    BYTE PTR [rsp+0xda],0x0
    2734:	call   5430 <__cxa_finalize@plt+0x35b8>
    2739:	lea    rsi,[rip+0x8358]        # aa98 <_IO_stdin_used@@Base+0x878>
    2740:	mov    edx,0x5
    2745:	xor    edi,edi
    2747:	mov    r13,rax
    274a:	call   1b40 <dcgettext@plt>
    274f:	mov    r9,QWORD PTR [rsp+0x18]
    2754:	lea    r8,[r15+0x1]
    2758:	mov    rdx,rax
    275b:	mov    rcx,r13
    275e:	xor    esi,esi
    2760:	xor    edi,edi
    2762:	xor    eax,eax
    2764:	xor    r15d,r15d
    2767:	call   1db0 <error@plt>
    276c:	jmp    22e9 <__cxa_finalize@plt+0x471>
    2771:	mov    esi,DWORD PTR [rbp+0x2c]
    2774:	mov    rdx,QWORD PTR [rsp+0x28]
    2779:	lea    rcx,[rsp+0x40]
    277e:	xor    r8d,r8d
    2781:	mov    edi,0x1
    2786:	call   1bc0 <__fxstatat@plt>
    278b:	test   eax,eax
    278d:	je     298d <__cxa_finalize@plt+0xb15>
    2793:	cmp    BYTE PTR [rip+0x20b96f],0x0        # 20e109 <stderr@@GLIBC_2.2.5+0x29>
    279a:	jne    27d5 <__cxa_finalize@plt+0x95d>
    279c:	mov    rsi,r13
    279f:	mov    edi,0x4
    27a4:	call   5330 <__cxa_finalize@plt+0x34b8>
    27a9:	lea    rsi,[rip+0x7bc0]        # a370 <_IO_stdin_used@@Base+0x150>
    27b0:	mov    edx,0x5
    27b5:	xor    edi,edi
    27b7:	mov    r15,rax
    27ba:	call   1b40 <dcgettext@plt>
    27bf:	mov    rdx,rax
    27c2:	mov    rax,QWORD PTR [rsp+0x20]
    27c7:	mov    rcx,r15
    27ca:	xor    edi,edi
    27cc:	mov    esi,DWORD PTR [rax]
    27ce:	xor    eax,eax
    27d0:	call   1db0 <error@plt>
    27d5:	cmp    DWORD PTR [rip+0x20b834],0x0        # 20e010 <quoting_style_args@@Base+0x4b0>
    27dc:	jne    26b1 <__cxa_finalize@plt+0x839>
    27e2:	mov    rsi,QWORD PTR [rsp+0x8]
    27e7:	mov    edi,DWORD PTR [rsp]
    27ea:	call   31a0 <__cxa_finalize@plt+0x1328>
    27ef:	mov    rsi,QWORD PTR [rsp+0x10]
    27f4:	mov    edi,DWORD PTR [rsp+0x4]
    27f8:	mov    BYTE PTR [rsp+0xda],0x0
    2800:	call   31a0 <__cxa_finalize@plt+0x1328>
    2805:	lea    rsi,[rip+0x8364]        # ab70 <_IO_stdin_used@@Base+0x950>
    280c:	mov    edx,0x5
    2811:	xor    edi,edi
    2813:	mov    BYTE PTR [rsp+0xe6],0x0
    281b:	call   1b40 <dcgettext@plt>
    2820:	mov    rsi,r13
    2823:	mov    edi,0x4
    2828:	mov    r15,rax
    282b:	call   5330 <__cxa_finalize@plt+0x34b8>
    2830:	mov    rdx,QWORD PTR [rsp+0x8]
    2835:	mov    ecx,DWORD PTR [rsp]
    2838:	mov    rsi,r15
    283b:	mov    edi,0x1
    2840:	lea    r8,[rdx+0x1]
    2844:	and    ecx,0xfff
    284a:	mov    rdx,rax
    284d:	xor    eax,eax
    284f:	call   1d90 <__printf_chk@plt>
    2854:	jmp    26b1 <__cxa_finalize@plt+0x839>
    2859:	sub    eax,0x2b
    285c:	cmp    eax,0x1
    285f:	jbe    2058 <__cxa_finalize@plt+0x1e0>
    2865:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    286a:	mov    rax,QWORD PTR [rax+0x8]
    286e:	cmp    QWORD PTR [r14+0x78],rax
    2872:	jne    240b <__cxa_finalize@plt+0x593>
    2878:	lea    rsi,[rip+0x8427]        # aca6 <_IO_stdin_used@@Base+0xa86>
    287f:	mov    rdi,r13
    2882:	call   1c70 <strcmp@plt>
    2887:	test   eax,eax
    2889:	jne    2a93 <__cxa_finalize@plt+0xc1b>
    288f:	mov    rsi,r13
    2892:	mov    edi,0x4
    2897:	call   5330 <__cxa_finalize@plt+0x34b8>
    289c:	lea    rsi,[rip+0x814d]        # a9f0 <_IO_stdin_used@@Base+0x7d0>
    28a3:	mov    r13,rax
    28a6:	mov    edx,0x5
    28ab:	xor    edi,edi
    28ad:	call   1b40 <dcgettext@plt>
    28b2:	mov    rcx,r13
    28b5:	mov    rdx,rax
    28b8:	xor    esi,esi
    28ba:	xor    edi,edi
    28bc:	xor    eax,eax
    28be:	call   1db0 <error@plt>
    28c3:	lea    rsi,[rip+0x8196]        # aa60 <_IO_stdin_used@@Base+0x840>
    28ca:	mov    edx,0x5
    28cf:	xor    edi,edi
    28d1:	xor    r15d,r15d
    28d4:	call   1b40 <dcgettext@plt>
    28d9:	xor    esi,esi
    28db:	mov    rdx,rax
    28de:	xor    edi,edi
    28e0:	xor    eax,eax
    28e2:	call   1db0 <error@plt>
    28e7:	mov    edx,0x4
    28ec:	mov    rsi,r14
    28ef:	mov    rdi,rbp
    28f2:	call   8240 <fts_set@@Base>
    28f7:	mov    rdi,rbp
    28fa:	call   7ac0 <fts_read@@Base>
    28ff:	jmp    2228 <__cxa_finalize@plt+0x3b0>
    2904:	cmp    eax,0x67
    2907:	je     2058 <__cxa_finalize@plt+0x1e0>
    290d:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    2912:	cmp    eax,0x78
    2915:	jle    2058 <__cxa_finalize@plt+0x1e0>
    291b:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    2920:	cmp    eax,0x72
    2923:	jge    2058 <__cxa_finalize@plt+0x1e0>
    2929:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    292e:	mov    rsi,r13
    2931:	mov    edi,0x4
    2936:	call   5330 <__cxa_finalize@plt+0x34b8>
    293b:	mov    edx,0x5
    2940:	mov    r15,rax
    2943:	lea    rsi,[rip+0x79f2]        # a33c <_IO_stdin_used@@Base+0x11c>
    294a:	jmp    2385 <__cxa_finalize@plt+0x50d>
    294f:	mov    rdx,r13
    2952:	mov    esi,0x3
    2957:	xor    edi,edi
    2959:	call   5430 <__cxa_finalize@plt+0x35b8>
    295e:	lea    rsi,[rip+0x7fcb]        # a930 <_IO_stdin_used@@Base+0x710>
    2965:	mov    r13,rax
    2968:	mov    edx,0x5
    296d:	xor    edi,edi
    296f:	xor    r15d,r15d
    2972:	call   1b40 <dcgettext@plt>
    2977:	mov    rcx,r13
    297a:	mov    rdx,rax
    297d:	xor    esi,esi
    297f:	xor    edi,edi
    2981:	xor    eax,eax
    2983:	call   1db0 <error@plt>
    2988:	jmp    2228 <__cxa_finalize@plt+0x3b0>
    298d:	mov    eax,DWORD PTR [rsp+0x58]
    2991:	jmp    2617 <__cxa_finalize@plt+0x79f>
    2996:	lea    rsi,[rip+0x797e]        # a31b <_IO_stdin_used@@Base+0xfb>
    299d:	xor    edi,edi
    299f:	mov    edx,0x5
    29a4:	call   1b40 <dcgettext@plt>
    29a9:	mov    rdx,rax
    29ac:	mov    rax,QWORD PTR [rsp+0x20]
    29b1:	xor    edi,edi
    29b3:	mov    esi,DWORD PTR [rax]
    29b5:	xor    eax,eax
    29b7:	call   1db0 <error@plt>
    29bc:	jmp    2256 <__cxa_finalize@plt+0x3de>
    29c1:	lea    rdi,[rip+0x20b728]        # 20e0f0 <stderr@@GLIBC_2.2.5+0x10>
    29c8:	call   5620 <__cxa_finalize@plt+0x37a8>
    29cd:	test   rax,rax
    29d0:	mov    QWORD PTR [rip+0x20b729],rax        # 20e100 <stderr@@GLIBC_2.2.5+0x20>
    29d7:	jne    219a <__cxa_finalize@plt+0x322>
    29dd:	lea    rsi,[rip+0x82c2]        # aca6 <_IO_stdin_used@@Base+0xa86>
    29e4:	mov    edi,0x4
    29e9:	call   5330 <__cxa_finalize@plt+0x34b8>
    29ee:	lea    rsi,[rip+0x7ef3]        # a8e8 <_IO_stdin_used@@Base+0x6c8>
    29f5:	mov    edx,0x5
    29fa:	xor    edi,edi
    29fc:	mov    rbx,rax
    29ff:	call   1b40 <dcgettext@plt>
    2a04:	mov    rdx,rax
    2a07:	mov    rax,QWORD PTR [rsp+0x20]
    2a0c:	mov    rcx,rbx
    2a0f:	mov    edi,0x1
    2a14:	mov    esi,DWORD PTR [rax]
    2a16:	xor    eax,eax
    2a18:	call   1db0 <error@plt>
    2a1d:	mov    QWORD PTR [r14+0x20],0x1
    2a25:	mov    edx,0x1
    2a2a:	mov    rsi,r14
    2a2d:	mov    rdi,rbp
    2a30:	mov    r15d,0x1
    2a36:	call   8240 <fts_set@@Base>
    2a3b:	jmp    2228 <__cxa_finalize@plt+0x3b0>
    2a40:	lea    edx,[rax+0x1]
    2a43:	mov    r13,QWORD PTR [rbx+rax*8]
    2a47:	cmp    edx,ebp
    2a49:	mov    DWORD PTR [rip+0x20b661],edx        # 20e0b0 <optind@@GLIBC_2.2.5>
    2a4f:	jl     24e5 <__cxa_finalize@plt+0x66d>
    2a55:	test   r13,r13
    2a58:	je     2a68 <__cxa_finalize@plt+0xbf0>
    2a5a:	movsxd rdx,edx
    2a5d:	cmp    QWORD PTR [rbx+rdx*8-0x8],r13
    2a62:	je     2b68 <__cxa_finalize@plt+0xcf0>
    2a68:	lea    rsi,[rip+0x7872]        # a2e1 <_IO_stdin_used@@Base+0xc1>
    2a6f:	mov    edx,0x5
    2a74:	xor    edi,edi
    2a76:	call   1b40 <dcgettext@plt>
    2a7b:	xor    esi,esi
    2a7d:	mov    rdx,rax
    2a80:	xor    edi,edi
    2a82:	xor    eax,eax
    2a84:	call   1db0 <error@plt>
    2a89:	mov    edi,0x1
    2a8e:	call   2cd0 <__cxa_finalize@plt+0xe58>
    2a93:	lea    rdx,[rip+0x820c]        # aca6 <_IO_stdin_used@@Base+0xa86>
    2a9a:	mov    esi,0x4
    2a9f:	mov    edi,0x1
    2aa4:	call   5210 <__cxa_finalize@plt+0x3398>
    2aa9:	mov    rdx,r13
    2aac:	xor    edi,edi
    2aae:	mov    esi,0x4
    2ab3:	mov    r15,rax
    2ab6:	call   5210 <__cxa_finalize@plt+0x3398>
    2abb:	lea    rsi,[rip+0x7f5e]        # aa20 <_IO_stdin_used@@Base+0x800>
    2ac2:	mov    r13,rax
    2ac5:	xor    edi,edi
    2ac7:	mov    edx,0x5
    2acc:	call   1b40 <dcgettext@plt>
    2ad1:	mov    r8,r15
    2ad4:	mov    rdx,rax
    2ad7:	mov    rcx,r13
    2ada:	xor    esi,esi
    2adc:	xor    edi,edi
    2ade:	xor    eax,eax
    2ae0:	call   1db0 <error@plt>
    2ae5:	jmp    28c3 <__cxa_finalize@plt+0xa4b>
    2aea:	xor    edi,edi
    2aec:	call   2cd0 <__cxa_finalize@plt+0xe58>
    2af1:	call   1b90 <__stack_chk_fail@plt>
    2af6:	mov    rsi,r15
    2af9:	mov    edi,0x4
    2afe:	call   5330 <__cxa_finalize@plt+0x34b8>
    2b03:	lea    rsi,[rip+0x7dde]        # a8e8 <_IO_stdin_used@@Base+0x6c8>
    2b0a:	mov    edx,0x5
    2b0f:	xor    edi,edi
    2b11:	mov    rbx,rax
    2b14:	call   1b40 <dcgettext@plt>
    2b19:	mov    esi,DWORD PTR [r12]
    2b1d:	mov    rdx,rax
    2b20:	mov    rcx,rbx
    2b23:	mov    edi,0x1
    2b28:	xor    eax,eax
    2b2a:	call   1db0 <error@plt>
    2b2f:	mov    rdi,r13
    2b32:	call   5600 <__cxa_finalize@plt+0x3788>
    2b37:	lea    rsi,[rip+0x77cc]        # a30a <_IO_stdin_used@@Base+0xea>
    2b3e:	mov    rbx,rax
    2b41:	mov    edx,0x5
    2b46:	xor    edi,edi
    2b48:	call   1b40 <dcgettext@plt>
    2b4d:	xor    edi,edi
    2b4f:	mov    rdx,rax
    2b52:	mov    rcx,rbx
    2b55:	xor    esi,esi
    2b57:	xor    eax,eax
    2b59:	call   1db0 <error@plt>
    2b5e:	mov    edi,0x1
    2b63:	call   2cd0 <__cxa_finalize@plt+0xe58>
    2b68:	mov    rdi,QWORD PTR [rbx+rbp*8-0x8]
    2b6d:	call   5600 <__cxa_finalize@plt+0x3788>
    2b72:	lea    rsi,[rip+0x7778]        # a2f1 <_IO_stdin_used@@Base+0xd1>
    2b79:	mov    rbx,rax
    2b7c:	xor    edi,edi
    2b7e:	mov    edx,0x5
    2b83:	call   1b40 <dcgettext@plt>
    2b88:	mov    rcx,rbx
    2b8b:	mov    rdx,rax
    2b8e:	xor    esi,esi
    2b90:	xor    edi,edi
    2b92:	xor    eax,eax
    2b94:	call   1db0 <error@plt>
    2b99:	jmp    2a89 <__cxa_finalize@plt+0xc11>
    2b9e:	mov    edx,eax
    2ba0:	jmp    2a5a <__cxa_finalize@plt+0xbe2>
    2ba5:	mov    edx,0x5
    2baa:	lea    rsi,[rip+0x7d07]        # a8b8 <_IO_stdin_used@@Base+0x698>
    2bb1:	jmp    2a74 <__cxa_finalize@plt+0xbfc>
    2bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2bc0:	xor    ebp,ebp
    2bc2:	mov    r9,rdx
    2bc5:	pop    rsi
    2bc6:	mov    rdx,rsp
    2bc9:	and    rsp,0xfffffffffffffff0
    2bcd:	push   rax
    2bce:	push   rsp
    2bcf:	lea    r8,[rip+0x75ea]        # a1c0 <fts_children@@Base+0x1f50>
    2bd6:	lea    rcx,[rip+0x7573]        # a150 <fts_children@@Base+0x1ee0>
    2bdd:	lea    rdi,[rip+0xfffffffffffff29c]        # 1e80 <__cxa_finalize@plt+0x8>
    2be4:	call   QWORD PTR [rip+0x20b3de]        # 20dfc8 <__libc_start_main@GLIBC_2.2.5>
    2bea:	hlt    
    2beb:	nop    DWORD PTR [rax+rax*1+0x0]
    2bf0:	lea    rdi,[rip+0x20b4a9]        # 20e0a0 <__progname@@GLIBC_2.2.5>
    2bf7:	push   rbp
    2bf8:	lea    rax,[rip+0x20b4a1]        # 20e0a0 <__progname@@GLIBC_2.2.5>
    2bff:	cmp    rax,rdi
    2c02:	mov    rbp,rsp
    2c05:	je     2c20 <__cxa_finalize@plt+0xda8>
    2c07:	mov    rax,QWORD PTR [rip+0x20b3b2]        # 20dfc0 <_ITM_deregisterTMCloneTable>
    2c0e:	test   rax,rax
    2c11:	je     2c20 <__cxa_finalize@plt+0xda8>
    2c13:	pop    rbp
    2c14:	jmp    rax
    2c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2c20:	pop    rbp
    2c21:	ret    
    2c22:	nop    DWORD PTR [rax+0x0]
    2c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2c30:	lea    rdi,[rip+0x20b469]        # 20e0a0 <__progname@@GLIBC_2.2.5>
    2c37:	lea    rsi,[rip+0x20b462]        # 20e0a0 <__progname@@GLIBC_2.2.5>
    2c3e:	push   rbp
    2c3f:	sub    rsi,rdi
    2c42:	mov    rbp,rsp
    2c45:	sar    rsi,0x3
    2c49:	mov    rax,rsi
    2c4c:	shr    rax,0x3f
    2c50:	add    rsi,rax
    2c53:	sar    rsi,1
    2c56:	je     2c70 <__cxa_finalize@plt+0xdf8>
    2c58:	mov    rax,QWORD PTR [rip+0x20b379]        # 20dfd8 <_ITM_registerTMCloneTable>
    2c5f:	test   rax,rax
    2c62:	je     2c70 <__cxa_finalize@plt+0xdf8>
    2c64:	pop    rbp
    2c65:	jmp    rax
    2c67:	nop    WORD PTR [rax+rax*1+0x0]
    2c70:	pop    rbp
    2c71:	ret    
    2c72:	nop    DWORD PTR [rax+0x0]
    2c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2c80:	cmp    BYTE PTR [rip+0x20b461],0x0        # 20e0e8 <stderr@@GLIBC_2.2.5+0x8>
    2c87:	jne    2cb8 <__cxa_finalize@plt+0xe40>
    2c89:	cmp    QWORD PTR [rip+0x20b34f],0x0        # 20dfe0 <__cxa_finalize@GLIBC_2.2.5>
    2c91:	push   rbp
    2c92:	mov    rbp,rsp
    2c95:	je     2ca3 <__cxa_finalize@plt+0xe2b>
    2c97:	mov    rdi,QWORD PTR [rip+0x20b36a]        # 20e008 <quoting_style_args@@Base+0x4a8>
    2c9e:	call   1e78 <__cxa_finalize@plt>
    2ca3:	call   2bf0 <__cxa_finalize@plt+0xd78>
    2ca8:	mov    BYTE PTR [rip+0x20b439],0x1        # 20e0e8 <stderr@@GLIBC_2.2.5+0x8>
    2caf:	pop    rbp
    2cb0:	ret    
    2cb1:	nop    DWORD PTR [rax+0x0]
    2cb8:	repz ret 
    2cba:	nop    WORD PTR [rax+rax*1+0x0]
    2cc0:	push   rbp
    2cc1:	mov    rbp,rsp
    2cc4:	pop    rbp
    2cc5:	jmp    2c30 <__cxa_finalize@plt+0xdb8>
    2cca:	nop    WORD PTR [rax+rax*1+0x0]
    2cd0:	push   r12
    2cd2:	push   rbp
    2cd3:	mov    edx,0x5
    2cd8:	push   rbx
    2cd9:	mov    ebp,edi
    2cdb:	add    rsp,0xffffffffffffff80
    2cdf:	mov    rbx,QWORD PTR [rip+0x20b442]        # 20e128 <program_name@@Base>
    2ce6:	mov    rax,QWORD PTR fs:0x28
    2cef:	mov    QWORD PTR [rsp+0x78],rax
    2cf4:	xor    eax,eax
    2cf6:	test   edi,edi
    2cf8:	je     2d28 <__cxa_finalize@plt+0xeb0>
    2cfa:	lea    rsi,[rip+0x76ef]        # a3f0 <_IO_stdin_used@@Base+0x1d0>
    2d01:	xor    edi,edi
    2d03:	call   1b40 <dcgettext@plt>
    2d08:	mov    rdi,QWORD PTR [rip+0x20b3d1]        # 20e0e0 <stderr@@GLIBC_2.2.5>
    2d0f:	mov    rdx,rax
    2d12:	mov    rcx,rbx
    2d15:	mov    esi,0x1
    2d1a:	xor    eax,eax
    2d1c:	call   1e30 <__fprintf_chk@plt>
    2d21:	mov    edi,ebp
    2d23:	call   1e10 <exit@plt>
    2d28:	lea    rsi,[rip+0x76e9]        # a418 <_IO_stdin_used@@Base+0x1f8>
    2d2f:	xor    edi,edi
    2d31:	call   1b40 <dcgettext@plt>
    2d36:	mov    rcx,rbx
    2d39:	mov    r8,rbx
    2d3c:	mov    rdx,rbx
    2d3f:	mov    rsi,rax
    2d42:	mov    edi,0x1
    2d47:	xor    eax,eax
    2d49:	call   1d90 <__printf_chk@plt>
    2d4e:	mov    rbx,QWORD PTR [rip+0x20b353]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2d55:	lea    rsi,[rip+0x7744]        # a4a0 <_IO_stdin_used@@Base+0x280>
    2d5c:	mov    edx,0x5
    2d61:	xor    edi,edi
    2d63:	call   1b40 <dcgettext@plt>
    2d68:	mov    rsi,rbx
    2d6b:	mov    rdi,rax
    2d6e:	call   1c50 <fputs_unlocked@plt>
    2d73:	mov    rbx,QWORD PTR [rip+0x20b32e]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2d7a:	lea    rsi,[rip+0x778f]        # a510 <_IO_stdin_used@@Base+0x2f0>
    2d81:	mov    edx,0x5
    2d86:	xor    edi,edi
    2d88:	call   1b40 <dcgettext@plt>
    2d8d:	mov    rsi,rbx
    2d90:	mov    rdi,rax
    2d93:	call   1c50 <fputs_unlocked@plt>
    2d98:	mov    rbx,QWORD PTR [rip+0x20b309]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2d9f:	lea    rsi,[rip+0x783a]        # a5e0 <_IO_stdin_used@@Base+0x3c0>
    2da6:	mov    edx,0x5
    2dab:	xor    edi,edi
    2dad:	call   1b40 <dcgettext@plt>
    2db2:	mov    rsi,rbx
    2db5:	mov    rdi,rax
    2db8:	call   1c50 <fputs_unlocked@plt>
    2dbd:	mov    rbx,QWORD PTR [rip+0x20b2e4]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2dc4:	lea    rsi,[rip+0x7895]        # a660 <_IO_stdin_used@@Base+0x440>
    2dcb:	mov    edx,0x5
    2dd0:	xor    edi,edi
    2dd2:	call   1b40 <dcgettext@plt>
    2dd7:	mov    rsi,rbx
    2dda:	mov    rdi,rax
    2ddd:	call   1c50 <fputs_unlocked@plt>
    2de2:	mov    rbx,QWORD PTR [rip+0x20b2bf]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2de9:	lea    rsi,[rip+0x78b8]        # a6a8 <_IO_stdin_used@@Base+0x488>
    2df0:	mov    edx,0x5
    2df5:	xor    edi,edi
    2df7:	call   1b40 <dcgettext@plt>
    2dfc:	mov    rsi,rbx
    2dff:	mov    rdi,rax
    2e02:	call   1c50 <fputs_unlocked@plt>
    2e07:	mov    rbx,QWORD PTR [rip+0x20b29a]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2e0e:	lea    rsi,[rip+0x78db]        # a6f0 <_IO_stdin_used@@Base+0x4d0>
    2e15:	mov    edx,0x5
    2e1a:	xor    edi,edi
    2e1c:	call   1b40 <dcgettext@plt>
    2e21:	mov    rsi,rbx
    2e24:	mov    rdi,rax
    2e27:	call   1c50 <fputs_unlocked@plt>
    2e2c:	mov    rbx,QWORD PTR [rip+0x20b275]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2e33:	lea    rsi,[rip+0x78e6]        # a720 <_IO_stdin_used@@Base+0x500>
    2e3a:	mov    edx,0x5
    2e3f:	xor    edi,edi
    2e41:	call   1b40 <dcgettext@plt>
    2e46:	mov    rsi,rbx
    2e49:	mov    rdi,rax
    2e4c:	call   1c50 <fputs_unlocked@plt>
    2e51:	mov    rbx,QWORD PTR [rip+0x20b250]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    2e58:	lea    rsi,[rip+0x78f9]        # a758 <_IO_stdin_used@@Base+0x538>
    2e5f:	mov    edx,0x5
    2e64:	xor    edi,edi
    2e66:	call   1b40 <dcgettext@plt>
    2e6b:	mov    rsi,rbx
    2e6e:	mov    rdi,rax
    2e71:	lea    rbx,[rip+0x73ac]        # a224 <_IO_stdin_used@@Base+0x4>
    2e78:	call   1c50 <fputs_unlocked@plt>
    2e7d:	lea    rax,[rip+0x73a6]        # a22a <_IO_stdin_used@@Base+0xa>
    2e84:	lea    rcx,[rip+0x73e0]        # a26b <_IO_stdin_used@@Base+0x4b>
    2e8b:	lea    rdx,[rip+0x73e3]        # a275 <_IO_stdin_used@@Base+0x55>
    2e92:	mov    QWORD PTR [rsp+0x60],0x0
    2e9b:	mov    QWORD PTR [rsp+0x68],0x0
    2ea4:	mov    QWORD PTR [rsp],rax
    2ea8:	lea    rax,[rip+0x737d]        # a22c <_IO_stdin_used@@Base+0xc>
    2eaf:	mov    QWORD PTR [rsp+0x30],rcx
    2eb4:	lea    rcx,[rip+0x73c4]        # a27f <_IO_stdin_used@@Base+0x5f>
    2ebb:	mov    QWORD PTR [rsp+0x40],rdx
    2ec0:	mov    QWORD PTR [rsp+0x8],rax
    2ec5:	lea    rax,[rip+0x73d8]        # a2a4 <_IO_stdin_used@@Base+0x84>
    2ecc:	mov    QWORD PTR [rsp+0x50],rcx
    2ed1:	mov    QWORD PTR [rsp+0x10],rax
    2ed6:	lea    rax,[rip+0x735f]        # a23c <_IO_stdin_used@@Base+0x1c>
    2edd:	mov    QWORD PTR [rsp+0x18],rax
    2ee2:	lea    rax,[rip+0x7369]        # a252 <_IO_stdin_used@@Base+0x32>
    2ee9:	mov    QWORD PTR [rsp+0x20],rax
    2eee:	lea    rax,[rip+0x7367]        # a25c <_IO_stdin_used@@Base+0x3c>
    2ef5:	mov    QWORD PTR [rsp+0x28],rax
    2efa:	mov    QWORD PTR [rsp+0x38],rax
    2eff:	mov    QWORD PTR [rsp+0x48],rax
    2f04:	mov    QWORD PTR [rsp+0x58],rax
    2f09:	mov    rax,rsp
    2f0c:	nop    DWORD PTR [rax+0x0]
    2f10:	add    rax,0x10
    2f14:	mov    rdi,QWORD PTR [rax]
    2f17:	test   rdi,rdi
    2f1a:	je     2f28 <__cxa_finalize@plt+0x10b0>
    2f1c:	mov    ecx,0x6
    2f21:	mov    rsi,rbx
    2f24:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2f26:	jne    2f10 <__cxa_finalize@plt+0x1098>
    2f28:	mov    r12,QWORD PTR [rax+0x8]
    2f2c:	xor    edi,edi
    2f2e:	mov    edx,0x5
    2f33:	lea    rsi,[rip+0x734f]        # a289 <_IO_stdin_used@@Base+0x69>
    2f3a:	test   r12,r12
    2f3d:	je     3004 <__cxa_finalize@plt+0x118c>
    2f43:	call   1b40 <dcgettext@plt>
    2f48:	lea    rcx,[rip+0x7859]        # a7a8 <_IO_stdin_used@@Base+0x588>
    2f4f:	lea    rdx,[rip+0x734a]        # a2a0 <_IO_stdin_used@@Base+0x80>
    2f56:	mov    rsi,rax
    2f59:	mov    edi,0x1
    2f5e:	xor    eax,eax
    2f60:	call   1d90 <__printf_chk@plt>
    2f65:	xor    esi,esi
    2f67:	mov    edi,0x5
    2f6c:	call   1d80 <setlocale@plt>
    2f71:	test   rax,rax
    2f74:	je     2f92 <__cxa_finalize@plt+0x111a>
    2f76:	lea    rsi,[rip+0x7331]        # a2ae <_IO_stdin_used@@Base+0x8e>
    2f7d:	mov    edx,0x3
    2f82:	mov    rdi,rax
    2f85:	call   1ac0 <strncmp@plt>
    2f8a:	test   eax,eax
    2f8c:	jne    3099 <__cxa_finalize@plt+0x1221>
    2f92:	lea    rsi,[rip+0x787f]        # a818 <_IO_stdin_used@@Base+0x5f8>
    2f99:	xor    edi,edi
    2f9b:	mov    edx,0x5
    2fa0:	call   1b40 <dcgettext@plt>
    2fa5:	lea    rcx,[rip+0x7278]        # a224 <_IO_stdin_used@@Base+0x4>
    2fac:	lea    rdx,[rip+0x77f5]        # a7a8 <_IO_stdin_used@@Base+0x588>
    2fb3:	mov    rsi,rax
    2fb6:	mov    edi,0x1
    2fbb:	xor    eax,eax
    2fbd:	call   1d90 <__printf_chk@plt>
    2fc2:	cmp    r12,rbx
    2fc5:	lea    rcx,[rip+0x727a]        # a246 <_IO_stdin_used@@Base+0x26>
    2fcc:	lea    rbx,[rip+0x820e]        # b1e1 <quoting_style_vals@@Base+0x81>
    2fd3:	cmove  rbx,rcx
    2fd7:	lea    rsi,[rip+0x785a]        # a838 <_IO_stdin_used@@Base+0x618>
    2fde:	xor    edi,edi
    2fe0:	mov    edx,0x5
    2fe5:	call   1b40 <dcgettext@plt>
    2fea:	mov    rcx,rbx
    2fed:	mov    rsi,rax
    2ff0:	mov    rdx,r12
    2ff3:	mov    edi,0x1
    2ff8:	xor    eax,eax
    2ffa:	call   1d90 <__printf_chk@plt>
    2fff:	jmp    2d21 <__cxa_finalize@plt+0xea9>
    3004:	call   1b40 <dcgettext@plt>
    3009:	lea    rcx,[rip+0x7798]        # a7a8 <_IO_stdin_used@@Base+0x588>
    3010:	lea    rdx,[rip+0x7289]        # a2a0 <_IO_stdin_used@@Base+0x80>
    3017:	mov    rsi,rax
    301a:	mov    edi,0x1
    301f:	xor    eax,eax
    3021:	call   1d90 <__printf_chk@plt>
    3026:	xor    esi,esi
    3028:	mov    edi,0x5
    302d:	call   1d80 <setlocale@plt>
    3032:	test   rax,rax
    3035:	je     304f <__cxa_finalize@plt+0x11d7>
    3037:	lea    rsi,[rip+0x7270]        # a2ae <_IO_stdin_used@@Base+0x8e>
    303e:	mov    edx,0x3
    3043:	mov    rdi,rax
    3046:	call   1ac0 <strncmp@plt>
    304b:	test   eax,eax
    304d:	jne    3092 <__cxa_finalize@plt+0x121a>
    304f:	lea    rsi,[rip+0x77c2]        # a818 <_IO_stdin_used@@Base+0x5f8>
    3056:	mov    edx,0x5
    305b:	xor    edi,edi
    305d:	lea    r12,[rip+0x71c0]        # a224 <_IO_stdin_used@@Base+0x4>
    3064:	lea    rbx,[rip+0x71db]        # a246 <_IO_stdin_used@@Base+0x26>
    306b:	call   1b40 <dcgettext@plt>
    3070:	lea    rcx,[rip+0x71ad]        # a224 <_IO_stdin_used@@Base+0x4>
    3077:	lea    rdx,[rip+0x772a]        # a7a8 <_IO_stdin_used@@Base+0x588>
    307e:	mov    rsi,rax
    3081:	mov    edi,0x1
    3086:	xor    eax,eax
    3088:	call   1d90 <__printf_chk@plt>
    308d:	jmp    2fd7 <__cxa_finalize@plt+0x115f>
    3092:	lea    r12,[rip+0x718b]        # a224 <_IO_stdin_used@@Base+0x4>
    3099:	lea    rsi,[rip+0x7730]        # a7d0 <_IO_stdin_used@@Base+0x5b0>
    30a0:	xor    edi,edi
    30a2:	mov    edx,0x5
    30a7:	call   1b40 <dcgettext@plt>
    30ac:	lea    rdx,[rip+0x7171]        # a224 <_IO_stdin_used@@Base+0x4>
    30b3:	mov    rsi,rax
    30b6:	mov    edi,0x1
    30bb:	xor    eax,eax
    30bd:	call   1d90 <__printf_chk@plt>
    30c2:	jmp    2f92 <__cxa_finalize@plt+0x111a>
    30c7:	nop    WORD PTR [rax+rax*1+0x0]
    30d0:	mov    QWORD PTR [rip+0x20b049],rdi        # 20e120 <stderr@@GLIBC_2.2.5+0x40>
    30d7:	ret    
    30d8:	nop    DWORD PTR [rax+rax*1+0x0]
    30e0:	mov    BYTE PTR [rip+0x20b031],dil        # 20e118 <stderr@@GLIBC_2.2.5+0x38>
    30e7:	ret    
    30e8:	nop    DWORD PTR [rax+rax*1+0x0]
    30f0:	push   rbp
    30f1:	push   rbx
    30f2:	sub    rsp,0x8
    30f6:	mov    rdi,QWORD PTR [rip+0x20afab]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    30fd:	call   8450 <fts_children@@Base+0x1e0>
    3102:	test   eax,eax
    3104:	je     311c <__cxa_finalize@plt+0x12a4>
    3106:	call   1ab0 <__errno_location@plt>
    310b:	cmp    BYTE PTR [rip+0x20b006],0x0        # 20e118 <stderr@@GLIBC_2.2.5+0x38>
    3112:	mov    rbx,rax
    3115:	je     3133 <__cxa_finalize@plt+0x12bb>
    3117:	cmp    DWORD PTR [rax],0x20
    311a:	jne    3133 <__cxa_finalize@plt+0x12bb>
    311c:	mov    rdi,QWORD PTR [rip+0x20afbd]        # 20e0e0 <stderr@@GLIBC_2.2.5>
    3123:	call   8450 <fts_children@@Base+0x1e0>
    3128:	test   eax,eax
    312a:	jne    3172 <__cxa_finalize@plt+0x12fa>
    312c:	add    rsp,0x8
    3130:	pop    rbx
    3131:	pop    rbp
    3132:	ret    
    3133:	lea    rsi,[rip+0x7a97]        # abd1 <_IO_stdin_used@@Base+0x9b1>
    313a:	xor    edi,edi
    313c:	mov    edx,0x5
    3141:	call   1b40 <dcgettext@plt>
    3146:	mov    rdi,QWORD PTR [rip+0x20afd3]        # 20e120 <stderr@@GLIBC_2.2.5+0x40>
    314d:	mov    rbp,rax
    3150:	test   rdi,rdi
    3153:	je     317d <__cxa_finalize@plt+0x1305>
    3155:	call   5400 <__cxa_finalize@plt+0x3588>
    315a:	mov    esi,DWORD PTR [rbx]
    315c:	lea    rdx,[rip+0x7a7a]        # abdd <_IO_stdin_used@@Base+0x9bd>
    3163:	mov    rcx,rax
    3166:	mov    r8,rbp
    3169:	xor    edi,edi
    316b:	xor    eax,eax
    316d:	call   1db0 <error@plt>
    3172:	mov    edi,DWORD PTR [rip+0x20aea8]        # 20e020 <exit_failure@@Base>
    3178:	call   1ad0 <_exit@plt>
    317d:	mov    esi,DWORD PTR [rbx]
    317f:	lea    rdx,[rip+0x7192]        # a318 <_IO_stdin_used@@Base+0xf8>
    3186:	mov    rcx,rax
    3189:	xor    edi,edi
    318b:	xor    eax,eax
    318d:	call   1db0 <error@plt>
    3192:	jmp    3172 <__cxa_finalize@plt+0x12fa>
    3194:	nop    WORD PTR cs:[rax+rax*1+0x0]
    319e:	xchg   ax,ax
    31a0:	mov    edx,edi
    31a2:	mov    eax,0x2d
    31a7:	and    edx,0xf000
    31ad:	cmp    edx,0x8000
    31b3:	je     3210 <__cxa_finalize@plt+0x1398>
    31b5:	cmp    edx,0x4000
    31bb:	mov    eax,0x64
    31c0:	je     3210 <__cxa_finalize@plt+0x1398>
    31c2:	cmp    edx,0x6000
    31c8:	mov    eax,0x62
    31cd:	je     3210 <__cxa_finalize@plt+0x1398>
    31cf:	cmp    edx,0x2000
    31d5:	mov    eax,0x63
    31da:	je     3210 <__cxa_finalize@plt+0x1398>
    31dc:	cmp    edx,0xa000
    31e2:	mov    eax,0x6c
    31e7:	je     3210 <__cxa_finalize@plt+0x1398>
    31e9:	cmp    edx,0x1000
    31ef:	mov    eax,0x70
    31f4:	je     3210 <__cxa_finalize@plt+0x1398>
    31f6:	cmp    edx,0xc000
    31fc:	mov    eax,0x73
    3201:	mov    edx,0x3f
    3206:	cmovne eax,edx
    3209:	nop    DWORD PTR [rax+0x0]
    3210:	mov    BYTE PTR [rsi],al
    3212:	mov    eax,edi
    3214:	and    eax,0x100
    3219:	cmp    eax,0x1
    321c:	sbb    eax,eax
    321e:	and    eax,0xffffffbb
    3221:	add    eax,0x72
    3224:	mov    BYTE PTR [rsi+0x1],al
    3227:	mov    eax,edi
    3229:	and    eax,0x80
    322e:	cmp    eax,0x1
    3231:	sbb    eax,eax
    3233:	and    eax,0xffffffb6
    3236:	add    eax,0x77
    3239:	mov    BYTE PTR [rsi+0x2],al
    323c:	mov    eax,edi
    323e:	and    eax,0x40
    3241:	cmp    eax,0x1
    3244:	sbb    eax,eax
    3246:	test   edi,0x800
    324c:	je     32f0 <__cxa_finalize@plt+0x1478>
    3252:	and    eax,0xffffffe0
    3255:	add    eax,0x73
    3258:	mov    BYTE PTR [rsi+0x3],al
    325b:	mov    eax,edi
    325d:	and    eax,0x20
    3260:	cmp    eax,0x1
    3263:	sbb    eax,eax
    3265:	and    eax,0xffffffbb
    3268:	add    eax,0x72
    326b:	mov    BYTE PTR [rsi+0x4],al
    326e:	mov    eax,edi
    3270:	and    eax,0x10
    3273:	cmp    eax,0x1
    3276:	sbb    eax,eax
    3278:	and    eax,0xffffffb6
    327b:	add    eax,0x77
    327e:	mov    BYTE PTR [rsi+0x5],al
    3281:	mov    eax,edi
    3283:	and    eax,0x8
    3286:	cmp    eax,0x1
    3289:	sbb    eax,eax
    328b:	test   edi,0x400
    3291:	je     3318 <__cxa_finalize@plt+0x14a0>
    3297:	and    eax,0xffffffe0
    329a:	add    eax,0x73
    329d:	mov    BYTE PTR [rsi+0x6],al
    32a0:	mov    eax,edi
    32a2:	and    eax,0x4
    32a5:	cmp    eax,0x1
    32a8:	sbb    eax,eax
    32aa:	and    eax,0xffffffbb
    32ad:	add    eax,0x72
    32b0:	mov    BYTE PTR [rsi+0x7],al
    32b3:	mov    eax,edi
    32b5:	and    eax,0x2
    32b8:	cmp    eax,0x1
    32bb:	sbb    eax,eax
    32bd:	and    eax,0xffffffb6
    32c0:	add    eax,0x77
    32c3:	mov    BYTE PTR [rsi+0x8],al
    32c6:	mov    eax,edi
    32c8:	and    eax,0x1
    32cb:	cmp    eax,0x1
    32ce:	sbb    eax,eax
    32d0:	and    edi,0x200
    32d6:	je     3300 <__cxa_finalize@plt+0x1488>
    32d8:	and    eax,0xffffffe0
    32db:	add    eax,0x74
    32de:	mov    BYTE PTR [rsi+0x9],al
    32e1:	mov    eax,0x20
    32e6:	mov    WORD PTR [rsi+0xa],ax
    32ea:	ret    
    32eb:	nop    DWORD PTR [rax+rax*1+0x0]
    32f0:	and    eax,0xffffffb5
    32f3:	add    eax,0x78
    32f6:	jmp    3258 <__cxa_finalize@plt+0x13e0>
    32fb:	nop    DWORD PTR [rax+rax*1+0x0]
    3300:	and    eax,0xffffffb5
    3303:	add    eax,0x78
    3306:	mov    BYTE PTR [rsi+0x9],al
    3309:	mov    eax,0x20
    330e:	mov    WORD PTR [rsi+0xa],ax
    3312:	ret    
    3313:	nop    DWORD PTR [rax+rax*1+0x0]
    3318:	and    eax,0xffffffb5
    331b:	add    eax,0x78
    331e:	jmp    329d <__cxa_finalize@plt+0x1425>
    3323:	nop    DWORD PTR [rax]
    3326:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3330:	mov    edi,DWORD PTR [rdi+0x18]
    3333:	jmp    31a0 <__cxa_finalize@plt+0x1328>
    3338:	nop    DWORD PTR [rax+rax*1+0x0]
    3340:	push   rbp
    3341:	push   rbx
    3342:	mov    rbx,rdi
    3345:	sub    rsp,0x8
    3349:	movsx  eax,BYTE PTR [rdi]
    334c:	lea    edx,[rax-0x30]
    334f:	cmp    dl,0x7
    3352:	jbe    3408 <__cxa_finalize@plt+0x1590>
    3358:	test   al,al
    335a:	mov    rcx,rdi
    335d:	mov    edi,0x1
    3362:	je     338b <__cxa_finalize@plt+0x1513>
    3364:	nop    DWORD PTR [rax+0x0]
    3368:	mov    edx,eax
    336a:	and    edx,0xffffffef
    336d:	cmp    dl,0x2d
    3370:	sete   dl
    3373:	cmp    al,0x2b
    3375:	sete   al
    3378:	add    rcx,0x1
    337c:	or     eax,edx
    337e:	movzx  eax,al
    3381:	add    rdi,rax
    3384:	movzx  eax,BYTE PTR [rcx]
    3387:	test   al,al
    3389:	jne    3368 <__cxa_finalize@plt+0x14f0>
    338b:	mov    edx,0x10
    3390:	xor    ecx,ecx
    3392:	mov    rax,rdx
    3395:	mul    rdi
    3398:	jo     36af <__cxa_finalize@plt+0x1837>
    339e:	test   rax,rax
    33a1:	js     36b9 <__cxa_finalize@plt+0x1841>
    33a7:	test   rcx,rcx
    33aa:	jne    36b9 <__cxa_finalize@plt+0x1841>
    33b0:	shl    rdi,0x4
    33b4:	lea    rbp,[rip+0x7829]        # abe4 <_IO_stdin_used@@Base+0x9c4>
    33bb:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    33c0:	xor    esi,esi
    33c2:	xor    r11d,r11d
    33c5:	movzx  r9d,BYTE PTR [rbx]
    33c9:	cmp    r9b,0x61
    33cd:	je     3620 <__cxa_finalize@plt+0x17a8>
    33d3:	jle    3440 <__cxa_finalize@plt+0x15c8>
    33d5:	cmp    r9b,0x6f
    33d9:	je     3650 <__cxa_finalize@plt+0x17d8>
    33df:	cmp    r9b,0x75
    33e3:	je     3640 <__cxa_finalize@plt+0x17c8>
    33e9:	cmp    r9b,0x67
    33ed:	je     3630 <__cxa_finalize@plt+0x17b8>
    33f3:	mov    rdi,rax
    33f6:	call   1e70 <free@plt>
    33fb:	xor    eax,eax
    33fd:	add    rsp,0x8
    3401:	pop    rbx
    3402:	pop    rbp
    3403:	ret    
    3404:	nop    DWORD PTR [rax+0x0]
    3408:	mov    rdx,rdi
    340b:	xor    ebp,ebp
    340d:	jmp    341f <__cxa_finalize@plt+0x15a7>
    340f:	nop
    3410:	movsx  eax,BYTE PTR [rdx]
    3413:	lea    ecx,[rax-0x30]
    3416:	cmp    cl,0x7
    3419:	ja     3660 <__cxa_finalize@plt+0x17e8>
    341f:	lea    ebp,[rax+rbp*8-0x30]
    3423:	add    rdx,0x1
    3427:	cmp    ebp,0xfff
    342d:	jbe    3410 <__cxa_finalize@plt+0x1598>
    342f:	add    rsp,0x8
    3433:	xor    eax,eax
    3435:	pop    rbx
    3436:	pop    rbp
    3437:	ret    
    3438:	nop    DWORD PTR [rax+rax*1+0x0]
    3440:	cmp    r9b,0x2d
    3444:	je     3452 <__cxa_finalize@plt+0x15da>
    3446:	cmp    r9b,0x3d
    344a:	je     3452 <__cxa_finalize@plt+0x15da>
    344c:	cmp    r9b,0x2b
    3450:	jne    33f3 <__cxa_finalize@plt+0x157b>
    3452:	lea    rdi,[rsi+0x1]
    3456:	shl    rsi,0x4
    345a:	add    rsi,rax
    345d:	jmp    34c4 <__cxa_finalize@plt+0x164c>
    345f:	nop
    3460:	cmp    dl,0x6f
    3463:	lea    r8,[rbx+0x2]
    3467:	je     3600 <__cxa_finalize@plt+0x1788>
    346d:	cmp    dl,0x75
    3470:	mov    r10d,0x1c0
    3476:	jne    3550 <__cxa_finalize@plt+0x16d8>
    347c:	mov    BYTE PTR [rsi],r9b
    347f:	mov    BYTE PTR [rsi+0x1],0x3
    3483:	movzx  r9d,BYTE PTR [rbx+0x2]
    3488:	mov    DWORD PTR [rsi+0x4],r11d
    348c:	mov    rbx,r8
    348f:	mov    DWORD PTR [rsi+0x8],r10d
    3493:	mov    edx,r10d
    3496:	and    edx,r11d
    3499:	test   r11d,r11d
    349c:	cmovne r10d,edx
    34a0:	mov    edx,r9d
    34a3:	mov    DWORD PTR [rsi+0xc],r10d
    34a7:	add    rsi,0x10
    34ab:	and    edx,0xffffffef
    34ae:	lea    rcx,[rdi+0x1]
    34b2:	cmp    dl,0x2d
    34b5:	je     34c1 <__cxa_finalize@plt+0x1649>
    34b7:	cmp    r9b,0x2b
    34bb:	jne    36c0 <__cxa_finalize@plt+0x1848>
    34c1:	mov    rdi,rcx
    34c4:	movsx  edx,BYTE PTR [rbx+0x1]
    34c8:	lea    rcx,[rbx+0x1]
    34cc:	cmp    dl,0x67
    34cf:	je     3610 <__cxa_finalize@plt+0x1798>
    34d5:	jg     3460 <__cxa_finalize@plt+0x15e8>
    34d7:	lea    r8d,[rdx-0x30]
    34db:	cmp    r8b,0x7
    34df:	ja     3550 <__cxa_finalize@plt+0x16d8>
    34e1:	xor    r8d,r8d
    34e4:	nop    DWORD PTR [rax+0x0]
    34e8:	lea    r8d,[rdx+r8*8-0x30]
    34ed:	add    rcx,0x1
    34f1:	cmp    r8d,0xfff
    34f8:	ja     33f3 <__cxa_finalize@plt+0x157b>
    34fe:	movsx  edx,BYTE PTR [rcx]
    3501:	lea    r10d,[rdx-0x30]
    3505:	cmp    r10b,0x7
    3509:	jbe    34e8 <__cxa_finalize@plt+0x1670>
    350b:	test   r11d,r11d
    350e:	jne    33f3 <__cxa_finalize@plt+0x157b>
    3514:	test   dl,dl
    3516:	je     3521 <__cxa_finalize@plt+0x16a9>
    3518:	cmp    dl,0x2c
    351b:	jne    33f3 <__cxa_finalize@plt+0x157b>
    3521:	mov    BYTE PTR [rsi],r9b
    3524:	mov    BYTE PTR [rsi+0x1],0x1
    3528:	mov    r9d,edx
    352b:	mov    DWORD PTR [rsi+0x4],0xfff
    3532:	mov    DWORD PTR [rsi+0x8],r8d
    3536:	mov    rbx,rcx
    3539:	mov    r11d,0xfff
    353f:	mov    r10d,0xfff
    3545:	jmp    34a0 <__cxa_finalize@plt+0x1628>
    354a:	nop    WORD PTR [rax+rax*1+0x0]
    3550:	lea    r8d,[rdx-0x58]
    3554:	xor    r10d,r10d
    3557:	mov    ebx,0x1
    355c:	cmp    r8b,0x20
    3560:	ja     3599 <__cxa_finalize@plt+0x1721>
    3562:	nop    WORD PTR [rax+rax*1+0x0]
    3568:	movzx  r8d,r8b
    356c:	movsxd r8,DWORD PTR [rbp+r8*4+0x0]
    3571:	add    r8,rbp
    3574:	jmp    r8
    3577:	nop    WORD PTR [rax+rax*1+0x0]
    3580:	mov    ebx,0x2
    3585:	nop    DWORD PTR [rax]
    3588:	add    rcx,0x1
    358c:	movzx  edx,BYTE PTR [rcx]
    358f:	lea    r8d,[rdx-0x58]
    3593:	cmp    r8b,0x20
    3597:	jbe    3568 <__cxa_finalize@plt+0x16f0>
    3599:	mov    BYTE PTR [rsi],r9b
    359c:	mov    BYTE PTR [rsi+0x1],bl
    359f:	mov    r9d,edx
    35a2:	mov    DWORD PTR [rsi+0x4],r11d
    35a6:	mov    DWORD PTR [rsi+0x8],r10d
    35aa:	mov    rbx,rcx
    35ad:	jmp    3493 <__cxa_finalize@plt+0x161b>
    35b2:	nop    WORD PTR [rax+rax*1+0x0]
    35b8:	or     r10d,0x49
    35bc:	jmp    3588 <__cxa_finalize@plt+0x1710>
    35be:	xchg   ax,ax
    35c0:	or     r10b,0x92
    35c4:	jmp    3588 <__cxa_finalize@plt+0x1710>
    35c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    35d0:	or     r10d,0x200
    35d7:	jmp    3588 <__cxa_finalize@plt+0x1710>
    35d9:	nop    DWORD PTR [rax+0x0]
    35e0:	or     r10d,0xc00
    35e7:	jmp    3588 <__cxa_finalize@plt+0x1710>
    35e9:	nop    DWORD PTR [rax+0x0]
    35f0:	or     r10d,0x124
    35f7:	jmp    3588 <__cxa_finalize@plt+0x1710>
    35f9:	nop    DWORD PTR [rax+0x0]
    3600:	mov    r10d,0x7
    3606:	jmp    347c <__cxa_finalize@plt+0x1604>
    360b:	nop    DWORD PTR [rax+rax*1+0x0]
    3610:	lea    r8,[rbx+0x2]
    3614:	mov    r10d,0x38
    361a:	jmp    347c <__cxa_finalize@plt+0x1604>
    361f:	nop
    3620:	mov    r11d,0xfff
    3626:	add    rbx,0x1
    362a:	jmp    33c5 <__cxa_finalize@plt+0x154d>
    362f:	nop
    3630:	or     r11d,0x438
    3637:	jmp    3626 <__cxa_finalize@plt+0x17ae>
    3639:	nop    DWORD PTR [rax+0x0]
    3640:	or     r11d,0x9c0
    3647:	jmp    3626 <__cxa_finalize@plt+0x17ae>
    3649:	nop    DWORD PTR [rax+0x0]
    3650:	or     r11d,0x207
    3657:	jmp    3626 <__cxa_finalize@plt+0x17ae>
    3659:	nop    DWORD PTR [rax+0x0]
    3660:	test   al,al
    3662:	jne    342f <__cxa_finalize@plt+0x15b7>
    3668:	sub    rdx,rbx
    366b:	mov    ebx,ebp
    366d:	mov    eax,0xfff
    3672:	and    ebx,0xc00
    3678:	mov    edi,0x20
    367d:	or     ebx,0x3ff
    3683:	cmp    rdx,0x5
    3687:	cmovge ebx,eax
    368a:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    368f:	mov    edx,0x13d
    3694:	mov    DWORD PTR [rax+0x4],0xfff
    369b:	mov    DWORD PTR [rax+0x8],ebp
    369e:	mov    WORD PTR [rax],dx
    36a1:	mov    DWORD PTR [rax+0xc],ebx
    36a4:	mov    BYTE PTR [rax+0x11],0x0
    36a8:	add    rsp,0x8
    36ac:	pop    rbx
    36ad:	pop    rbp
    36ae:	ret    
    36af:	mov    ecx,0x1
    36b4:	jmp    339e <__cxa_finalize@plt+0x1526>
    36b9:	call   5f00 <__cxa_finalize@plt+0x4088>
    36be:	xchg   ax,ax
    36c0:	cmp    r9b,0x2c
    36c4:	jne    36d2 <__cxa_finalize@plt+0x185a>
    36c6:	add    rbx,0x1
    36ca:	mov    rsi,rdi
    36cd:	jmp    33c2 <__cxa_finalize@plt+0x154a>
    36d2:	test   r9b,r9b
    36d5:	jne    33f3 <__cxa_finalize@plt+0x157b>
    36db:	shl    rdi,0x4
    36df:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
    36e4:	jmp    33fd <__cxa_finalize@plt+0x1585>
    36e9:	nop    DWORD PTR [rax+0x0]
    36f0:	push   rbx
    36f1:	mov    rsi,rdi
    36f4:	mov    edi,0x1
    36f9:	sub    rsp,0xa0
    3700:	mov    rdx,rsp
    3703:	mov    rax,QWORD PTR fs:0x28
    370c:	mov    QWORD PTR [rsp+0x98],rax
    3714:	xor    eax,eax
    3716:	call   1cc0 <__xstat@plt>
    371b:	test   eax,eax
    371d:	jne    3770 <__cxa_finalize@plt+0x18f8>
    371f:	mov    ebx,DWORD PTR [rsp+0x18]
    3723:	mov    edi,0x20
    3728:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    372d:	mov    edx,0x13d
    3732:	mov    DWORD PTR [rax+0x4],0xfff
    3739:	mov    DWORD PTR [rax+0xc],0xfff
    3740:	mov    WORD PTR [rax],dx
    3743:	mov    DWORD PTR [rax+0x8],ebx
    3746:	mov    BYTE PTR [rax+0x11],0x0
    374a:	mov    rcx,QWORD PTR [rsp+0x98]
    3752:	xor    rcx,QWORD PTR fs:0x28
    375b:	jne    3774 <__cxa_finalize@plt+0x18fc>
    375d:	add    rsp,0xa0
    3764:	pop    rbx
    3765:	ret    
    3766:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3770:	xor    eax,eax
    3772:	jmp    374a <__cxa_finalize@plt+0x18d2>
    3774:	call   1b90 <__stack_chk_fail@plt>
    3779:	nop    DWORD PTR [rax+0x0]
    3780:	movzx  r10d,BYTE PTR [rcx+0x1]
    3785:	mov    eax,edi
    3787:	and    eax,0xfff
    378c:	test   r10b,r10b
    378f:	je     38e0 <__cxa_finalize@plt+0x1a68>
    3795:	cmp    sil,0x1
    3799:	push   r12
    379b:	push   rbp
    379c:	push   rbx
    379d:	sbb    ebx,ebx
    379f:	movzx  ebp,sil
    37a3:	not    ebx
    37a5:	xor    r11d,r11d
    37a8:	and    ebx,0xc00
    37ae:	jmp    37ea <__cxa_finalize@plt+0x1972>
    37b0:	mov    edi,r9d
    37b3:	or     edi,edx
    37b5:	not    edi
    37b7:	and    esi,edi
    37b9:	cmp    r12b,0x2d
    37bd:	je     38d0 <__cxa_finalize@plt+0x1a58>
    37c3:	cmp    r12b,0x3d
    37c7:	je     387b <__cxa_finalize@plt+0x1a03>
    37cd:	cmp    r12b,0x2b
    37d1:	jne    37d8 <__cxa_finalize@plt+0x1960>
    37d3:	or     r11d,esi
    37d6:	or     eax,esi
    37d8:	add    rcx,0x10
    37dc:	movzx  r10d,BYTE PTR [rcx+0x1]
    37e1:	test   r10b,r10b
    37e4:	je     389c <__cxa_finalize@plt+0x1a24>
    37ea:	mov    r9d,DWORD PTR [rcx+0xc]
    37ee:	mov    edi,DWORD PTR [rcx+0x4]
    37f1:	mov    esi,DWORD PTR [rcx+0x8]
    37f4:	not    r9d
    37f7:	and    r9d,ebx
    37fa:	cmp    r10b,0x2
    37fe:	je     38b0 <__cxa_finalize@plt+0x1a38>
    3804:	cmp    r10b,0x3
    3808:	jne    3848 <__cxa_finalize@plt+0x19d0>
    380a:	and    esi,eax
    380c:	mov    r10d,esi
    380f:	and    r10d,0x124
    3816:	cmp    r10d,0x1
    381a:	sbb    r10d,r10d
    381d:	not    r10d
    3820:	and    r10d,0x124
    3827:	mov    r12d,r10d
    382a:	or     r12b,0x92
    382e:	test   sil,0x92
    3832:	cmovne r10d,r12d
    3836:	mov    r12d,r10d
    3839:	or     r12d,0x49
    383d:	test   sil,0x49
    3841:	cmovne r10d,r12d
    3845:	or     esi,r10d
    3848:	mov    r10d,r9d
    384b:	test   edi,edi
    384d:	movzx  r12d,BYTE PTR [rcx]
    3851:	not    r10d
    3854:	je     37b0 <__cxa_finalize@plt+0x1938>
    385a:	and    r10d,edi
    385d:	and    esi,r10d
    3860:	cmp    r12b,0x2d
    3864:	je     38d0 <__cxa_finalize@plt+0x1a58>
    3866:	cmp    r12b,0x3d
    386a:	jne    37cd <__cxa_finalize@plt+0x1955>
    3870:	not    edi
    3872:	or     r9d,edi
    3875:	mov    r10d,r9d
    3878:	not    r10d
    387b:	and    r10d,0xfff
    3882:	add    rcx,0x10
    3886:	and    eax,r9d
    3889:	or     r11d,r10d
    388c:	movzx  r10d,BYTE PTR [rcx+0x1]
    3891:	or     eax,esi
    3893:	test   r10b,r10b
    3896:	jne    37ea <__cxa_finalize@plt+0x1972>
    389c:	test   r8,r8
    389f:	je     38a4 <__cxa_finalize@plt+0x1a2c>
    38a1:	mov    DWORD PTR [r8],r11d
    38a4:	pop    rbx
    38a5:	pop    rbp
    38a6:	pop    r12
    38a8:	ret    
    38a9:	nop    DWORD PTR [rax+0x0]
    38b0:	mov    r12d,eax
    38b3:	mov    r10d,esi
    38b6:	and    r12d,0x49
    38ba:	or     r10d,0x49
    38be:	or     r12d,ebp
    38c1:	cmovne esi,r10d
    38c5:	jmp    3848 <__cxa_finalize@plt+0x19d0>
    38c7:	nop    WORD PTR [rax+rax*1+0x0]
    38d0:	or     r11d,esi
    38d3:	not    esi
    38d5:	and    eax,esi
    38d7:	jmp    37d8 <__cxa_finalize@plt+0x1960>
    38dc:	nop    DWORD PTR [rax+0x0]
    38e0:	xor    r11d,r11d
    38e3:	test   r8,r8
    38e6:	je     38eb <__cxa_finalize@plt+0x1a73>
    38e8:	mov    DWORD PTR [r8],r11d
    38eb:	repz ret 
    38ed:	nop    DWORD PTR [rax]
    38f0:	test   rdi,rdi
    38f3:	push   rbx
    38f4:	je     3967 <__cxa_finalize@plt+0x1aef>
    38f6:	mov    esi,0x2f
    38fb:	mov    rbx,rdi
    38fe:	call   1bd0 <strrchr@plt>
    3903:	test   rax,rax
    3906:	je     3957 <__cxa_finalize@plt+0x1adf>
    3908:	lea    rdx,[rax+0x1]
    390c:	mov    rcx,rdx
    390f:	sub    rcx,rbx
    3912:	cmp    rcx,0x6
    3916:	jle    3957 <__cxa_finalize@plt+0x1adf>
    3918:	lea    rsi,[rax-0x6]
    391c:	lea    rdi,[rip+0x737d]        # aca0 <_IO_stdin_used@@Base+0xa80>
    3923:	mov    ecx,0x7
    3928:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    392a:	jne    3957 <__cxa_finalize@plt+0x1adf>
    392c:	lea    rdi,[rip+0x7375]        # aca8 <_IO_stdin_used@@Base+0xa88>
    3933:	mov    ecx,0x3
    3938:	mov    rsi,rdx
    393b:	mov    rbx,rdx
    393e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3940:	seta   sil
    3944:	setb   cl
    3947:	cmp    sil,cl
    394a:	jne    3957 <__cxa_finalize@plt+0x1adf>
    394c:	lea    rbx,[rax+0x4]
    3950:	mov    QWORD PTR [rip+0x20a749],rbx        # 20e0a0 <__progname@@GLIBC_2.2.5>
    3957:	mov    QWORD PTR [rip+0x20a7ca],rbx        # 20e128 <program_name@@Base>
    395e:	mov    QWORD PTR [rip+0x20a763],rbx        # 20e0c8 <__progname_full@@GLIBC_2.2.5>
    3965:	pop    rbx
    3966:	ret    
    3967:	mov    rcx,QWORD PTR [rip+0x20a772]        # 20e0e0 <stderr@@GLIBC_2.2.5>
    396e:	lea    rdi,[rip+0x72f3]        # ac68 <_IO_stdin_used@@Base+0xa48>
    3975:	mov    edx,0x37
    397a:	mov    esi,0x1
    397f:	call   1e20 <fwrite@plt>
    3984:	call   1aa0 <abort@plt>
    3989:	nop    DWORD PTR [rax+0x0]
    3990:	push   rbp
    3991:	push   rbx
    3992:	mov    rbp,rdi
    3995:	mov    ebx,esi
    3997:	sub    rsp,0x8
    399b:	call   99d0 <fts_children@@Base+0x1760>
    39a0:	movzx  edx,BYTE PTR [rax]
    39a3:	and    edx,0xffffffdf
    39a6:	cmp    dl,0x55
    39a9:	je     3a20 <__cxa_finalize@plt+0x1ba8>
    39ab:	cmp    dl,0x47
    39ae:	je     39d0 <__cxa_finalize@plt+0x1b58>
    39b0:	lea    rax,[rip+0x7304]        # acbb <_IO_stdin_used@@Base+0xa9b>
    39b7:	lea    rdx,[rip+0x72ff]        # acbd <_IO_stdin_used@@Base+0xa9d>
    39be:	cmp    ebx,0x9
    39c1:	cmovne rax,rdx
    39c5:	add    rsp,0x8
    39c9:	pop    rbx
    39ca:	pop    rbp
    39cb:	ret    
    39cc:	nop    DWORD PTR [rax+0x0]
    39d0:	movzx  edx,BYTE PTR [rax+0x1]
    39d4:	and    edx,0xffffffdf
    39d7:	cmp    dl,0x42
    39da:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39dc:	cmp    BYTE PTR [rax+0x2],0x31
    39e0:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39e2:	cmp    BYTE PTR [rax+0x3],0x38
    39e6:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39e8:	cmp    BYTE PTR [rax+0x4],0x30
    39ec:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39ee:	cmp    BYTE PTR [rax+0x5],0x33
    39f2:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39f4:	cmp    BYTE PTR [rax+0x6],0x30
    39f8:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    39fa:	cmp    BYTE PTR [rax+0x7],0x0
    39fe:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a00:	cmp    BYTE PTR [rbp+0x0],0x60
    3a04:	lea    rax,[rip+0x72a9]        # acb4 <_IO_stdin_used@@Base+0xa94>
    3a0b:	lea    rdx,[rip+0x72a6]        # acb8 <_IO_stdin_used@@Base+0xa98>
    3a12:	cmovne rax,rdx
    3a16:	add    rsp,0x8
    3a1a:	pop    rbx
    3a1b:	pop    rbp
    3a1c:	ret    
    3a1d:	nop    DWORD PTR [rax]
    3a20:	movzx  edx,BYTE PTR [rax+0x1]
    3a24:	and    edx,0xffffffdf
    3a27:	cmp    dl,0x54
    3a2a:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a2c:	movzx  edx,BYTE PTR [rax+0x2]
    3a30:	and    edx,0xffffffdf
    3a33:	cmp    dl,0x46
    3a36:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a3c:	cmp    BYTE PTR [rax+0x3],0x2d
    3a40:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a46:	cmp    BYTE PTR [rax+0x4],0x38
    3a4a:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a50:	cmp    BYTE PTR [rax+0x5],0x0
    3a54:	jne    39b0 <__cxa_finalize@plt+0x1b38>
    3a5a:	cmp    BYTE PTR [rbp+0x0],0x60
    3a5e:	lea    rax,[rip+0x7247]        # acac <_IO_stdin_used@@Base+0xa8c>
    3a65:	lea    rdx,[rip+0x7244]        # acb0 <_IO_stdin_used@@Base+0xa90>
    3a6c:	cmovne rax,rdx
    3a70:	add    rsp,0x8
    3a74:	pop    rbx
    3a75:	pop    rbp
    3a76:	ret    
    3a77:	nop    WORD PTR [rax+rax*1+0x0]
    3a80:	push   r15
    3a82:	push   r14
    3a84:	mov    r15d,r8d
    3a87:	push   r13
    3a89:	push   r12
    3a8b:	mov    r14,rdi
    3a8e:	push   rbp
    3a8f:	push   rbx
    3a90:	mov    ebx,r9d
    3a93:	mov    r13,rsi
    3a96:	mov    rbp,rcx
    3a99:	and    ebx,0x2
    3a9c:	sub    rsp,0xb8
    3aa3:	mov    rax,QWORD PTR [rsp+0xf0]
    3aab:	mov    QWORD PTR [rsp+0x10],rdx
    3ab0:	mov    DWORD PTR [rsp+0x8],r8d
    3ab5:	mov    DWORD PTR [rsp+0x78],r9d
    3aba:	mov    QWORD PTR [rsp+0x20],rax
    3abf:	mov    rax,QWORD PTR [rsp+0xf8]
    3ac7:	mov    QWORD PTR [rsp+0x68],rax
    3acc:	mov    rax,QWORD PTR [rsp+0x100]
    3ad4:	mov    QWORD PTR [rsp+0x60],rax
    3ad9:	mov    rax,QWORD PTR fs:0x28
    3ae2:	mov    QWORD PTR [rsp+0xa8],rax
    3aea:	xor    eax,eax
    3aec:	call   1b50 <__ctype_get_mb_cur_max@plt>
    3af1:	cmp    r15d,0xa
    3af5:	mov    QWORD PTR [rsp+0x58],rax
    3afa:	ja     4caf <__cxa_finalize@plt+0x2e37>
    3b00:	lea    rcx,[rip+0x7219]        # ad20 <_IO_stdin_used@@Base+0xb00>
    3b07:	mov    edx,r15d
    3b0a:	movsxd rax,DWORD PTR [rcx+rdx*4]
    3b0e:	add    rax,rcx
    3b11:	jmp    rax
    3b13:	mov    BYTE PTR [rsp+0xe],0x1
    3b18:	mov    BYTE PTR [rsp+0x7c],0x0
    3b1d:	xor    r12d,r12d
    3b20:	mov    QWORD PTR [rsp+0x50],0x0
    3b29:	mov    BYTE PTR [rsp+0xf],0x1
    3b2e:	mov    BYTE PTR [rsp+0xd],0x0
    3b33:	lea    rax,[rip+0x7183]        # acbd <_IO_stdin_used@@Base+0xa9d>
    3b3a:	mov    QWORD PTR [rsp+0x18],0x1
    3b43:	xor    r15d,r15d
    3b46:	mov    DWORD PTR [rsp+0x8],0x2
    3b4e:	mov    QWORD PTR [rsp+0x48],rax
    3b53:	xor    r11d,r11d
    3b56:	mov    rax,rbp
    3b59:	mov    r8d,r12d
    3b5c:	mov    rbp,r11
    3b5f:	mov    r11,rax
    3b62:	nop    WORD PTR [rax+rax*1+0x0]
    3b68:	cmp    r11,rbp
    3b6b:	setne  r12b
    3b6f:	cmp    r11,0xffffffffffffffff
    3b73:	jne    3b82 <__cxa_finalize@plt+0x1d0a>
    3b75:	mov    rax,QWORD PTR [rsp+0x10]
    3b7a:	cmp    BYTE PTR [rax+rbp*1],0x0
    3b7e:	setne  r12b
    3b82:	test   r12b,r12b
    3b85:	je     41e0 <__cxa_finalize@plt+0x2368>
    3b8b:	cmp    DWORD PTR [rsp+0x8],0x2
    3b90:	mov    rdi,QWORD PTR [rsp+0x10]
    3b95:	lea    r9,[rdi+rbp*1]
    3b99:	setne  al
    3b9c:	and    al,BYTE PTR [rsp+0xd]
    3ba0:	mov    r10d,eax
    3ba3:	je     3c50 <__cxa_finalize@plt+0x1dd8>
    3ba9:	mov    rax,QWORD PTR [rsp+0x18]
    3bae:	test   rax,rax
    3bb1:	je     3fe0 <__cxa_finalize@plt+0x2168>
    3bb7:	cmp    r11,0xffffffffffffffff
    3bbb:	lea    rbx,[rbp+rax*1+0x0]
    3bc0:	jne    3bf0 <__cxa_finalize@plt+0x1d78>
    3bc2:	cmp    rax,0x1
    3bc6:	jbe    3bf0 <__cxa_finalize@plt+0x1d78>
    3bc8:	mov    BYTE PTR [rsp+0x38],r8b
    3bcd:	mov    BYTE PTR [rsp+0x30],r10b
    3bd2:	mov    QWORD PTR [rsp+0x28],r9
    3bd7:	call   1b60 <strlen@plt>
    3bdc:	movzx  r8d,BYTE PTR [rsp+0x38]
    3be2:	movzx  r10d,BYTE PTR [rsp+0x30]
    3be8:	mov    r11,rax
    3beb:	mov    r9,QWORD PTR [rsp+0x28]
    3bf0:	cmp    rbx,r11
    3bf3:	mov    BYTE PTR [rsp+0x28],r10b
    3bf8:	ja     41b0 <__cxa_finalize@plt+0x2338>
    3bfe:	mov    rdx,QWORD PTR [rsp+0x18]
    3c03:	mov    rsi,QWORD PTR [rsp+0x48]
    3c08:	mov    rdi,r9
    3c0b:	mov    QWORD PTR [rsp+0x40],r11
    3c10:	mov    BYTE PTR [rsp+0x38],r8b
    3c15:	mov    QWORD PTR [rsp+0x30],r9
    3c1a:	call   1c40 <memcmp@plt>
    3c1f:	test   eax,eax
    3c21:	mov    r9,QWORD PTR [rsp+0x30]
    3c26:	movzx  r8d,BYTE PTR [rsp+0x38]
    3c2c:	mov    r11,QWORD PTR [rsp+0x40]
    3c31:	jne    41b0 <__cxa_finalize@plt+0x2338>
    3c37:	cmp    BYTE PTR [rsp+0xf],0x0
    3c3c:	movzx  r10d,BYTE PTR [rsp+0x28]
    3c42:	jne    4bc5 <__cxa_finalize@plt+0x2d4d>
    3c48:	nop    DWORD PTR [rax+rax*1+0x0]
    3c50:	movzx  ebx,BYTE PTR [r9]
    3c54:	cmp    bl,0x7e
    3c57:	ja     3f78 <__cxa_finalize@plt+0x2100>
    3c5d:	lea    rcx,[rip+0x70e8]        # ad4c <_IO_stdin_used@@Base+0xb2c>
    3c64:	movzx  edx,bl
    3c67:	movsxd rax,DWORD PTR [rcx+rdx*4]
    3c6b:	add    rax,rcx
    3c6e:	jmp    rax
    3c70:	xor    r10d,r10d
    3c73:	cmp    r11,0x1
    3c77:	setne  al
    3c7a:	cmp    r11,0xffffffffffffffff
    3c7e:	jne    3c8c <__cxa_finalize@plt+0x1e14>
    3c80:	mov    rax,QWORD PTR [rsp+0x10]
    3c85:	cmp    BYTE PTR [rax+0x1],0x0
    3c89:	setne  al
    3c8c:	cmp    DWORD PTR [rsp+0x8],0x2
    3c91:	sete   dl
    3c94:	test   al,al
    3c96:	je     3ee8 <__cxa_finalize@plt+0x2070>
    3c9c:	xor    r12d,r12d
    3c9f:	xor    eax,eax
    3ca1:	nop    DWORD PTR [rax+0x0]
    3ca8:	cmp    BYTE PTR [rsp+0xd],0x1
    3cad:	jne    3dc2 <__cxa_finalize@plt+0x1f4a>
    3cb3:	test   dl,dl
    3cb5:	jne    3dc2 <__cxa_finalize@plt+0x1f4a>
    3cbb:	mov    rsi,QWORD PTR [rsp+0x20]
    3cc0:	test   rsi,rsi
    3cc3:	je     3cd9 <__cxa_finalize@plt+0x1e61>
    3cc5:	mov    edx,ebx
    3cc7:	shr    dl,0x5
    3cca:	movzx  edx,dl
    3ccd:	mov    edx,DWORD PTR [rsi+rdx*4]
    3cd0:	bt     edx,ebx
    3cd3:	jb     3e23 <__cxa_finalize@plt+0x1fab>
    3cd9:	test   r10b,r10b
    3cdc:	jne    3e23 <__cxa_finalize@plt+0x1fab>
    3ce2:	xor    eax,0x1
    3ce5:	add    rbp,0x1
    3ce9:	and    eax,r8d
    3cec:	test   al,al
    3cee:	je     3d10 <__cxa_finalize@plt+0x1e98>
    3cf0:	cmp    r13,r15
    3cf3:	jbe    3cfa <__cxa_finalize@plt+0x1e82>
    3cf5:	mov    BYTE PTR [r14+r15*1],0x27
    3cfa:	lea    rax,[r15+0x1]
    3cfe:	cmp    r13,rax
    3d01:	jbe    3d09 <__cxa_finalize@plt+0x1e91>
    3d03:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    3d09:	add    r15,0x2
    3d0d:	xor    r8d,r8d
    3d10:	cmp    r15,r13
    3d13:	jae    3d19 <__cxa_finalize@plt+0x1ea1>
    3d15:	mov    BYTE PTR [r14+r15*1],bl
    3d19:	movzx  edi,BYTE PTR [rsp+0xe]
    3d1e:	add    r15,0x1
    3d22:	mov    eax,0x0
    3d27:	test   r12b,r12b
    3d2a:	cmove  edi,eax
    3d2d:	mov    BYTE PTR [rsp+0xe],dil
    3d32:	jmp    3b68 <__cxa_finalize@plt+0x1cf0>
    3d37:	nop    WORD PTR [rax+rax*1+0x0]
    3d40:	xor    r10d,r10d
    3d43:	mov    eax,DWORD PTR [rsp+0x8]
    3d47:	cmp    eax,0x2
    3d4a:	je     4308 <__cxa_finalize@plt+0x2490>
    3d50:	cmp    eax,0x5
    3d53:	je     42c8 <__cxa_finalize@plt+0x2450>
    3d59:	cmp    eax,0x2
    3d5c:	mov    ebx,0x3f
    3d61:	sete   dl
    3d64:	xor    r12d,r12d
    3d67:	xor    eax,eax
    3d69:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    3d6e:	xchg   ax,ax
    3d70:	xor    r10d,r10d
    3d73:	cmp    DWORD PTR [rsp+0x8],0x2
    3d78:	je     4280 <__cxa_finalize@plt+0x2408>
    3d7e:	mov    BYTE PTR [rsp+0x7c],r12b
    3d83:	xor    edx,edx
    3d85:	xor    eax,eax
    3d87:	mov    ebx,0x27
    3d8c:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    3d91:	nop    DWORD PTR [rax+0x0]
    3d98:	mov    edx,0x9
    3d9d:	mov    ebx,0x74
    3da2:	cmp    DWORD PTR [rsp+0x8],0x2
    3da7:	sete   al
    3daa:	and    al,BYTE PTR [rsp+0xf]
    3dae:	jne    3efe <__cxa_finalize@plt+0x2086>
    3db4:	cmp    BYTE PTR [rsp+0xd],0x0
    3db9:	jne    3e20 <__cxa_finalize@plt+0x1fa8>
    3dbb:	mov    ebx,edx
    3dbd:	xor    r12d,r12d
    3dc0:	xor    eax,eax
    3dc2:	cmp    BYTE PTR [rsp+0xf],0x0
    3dc7:	jne    3cbb <__cxa_finalize@plt+0x1e43>
    3dcd:	jmp    3cd9 <__cxa_finalize@plt+0x1e61>
    3dd2:	nop    WORD PTR [rax+rax*1+0x0]
    3dd8:	mov    edx,0x8
    3ddd:	mov    ebx,0x62
    3de2:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    3de4:	nop    DWORD PTR [rax+0x0]
    3de8:	cmp    DWORD PTR [rsp+0x8],0x2
    3ded:	je     41c0 <__cxa_finalize@plt+0x2348>
    3df3:	cmp    BYTE PTR [rsp+0xd],0x0
    3df8:	je     4010 <__cxa_finalize@plt+0x2198>
    3dfe:	cmp    BYTE PTR [rsp+0xf],0x0
    3e03:	je     4010 <__cxa_finalize@plt+0x2198>
    3e09:	cmp    QWORD PTR [rsp+0x18],0x0
    3e0f:	jne    41cb <__cxa_finalize@plt+0x2353>
    3e15:	mov    ebx,0x5c
    3e1a:	nop    WORD PTR [rax+rax*1+0x0]
    3e20:	xor    r12d,r12d
    3e23:	cmp    DWORD PTR [rsp+0x8],0x2
    3e28:	sete   dl
    3e2b:	cmp    BYTE PTR [rsp+0xf],0x0
    3e30:	mov    eax,edx
    3e32:	jne    4688 <__cxa_finalize@plt+0x2810>
    3e38:	mov    eax,r8d
    3e3b:	xor    eax,0x1
    3e3e:	and    al,dl
    3e40:	je     3e71 <__cxa_finalize@plt+0x1ff9>
    3e42:	cmp    r13,r15
    3e45:	jbe    3e4c <__cxa_finalize@plt+0x1fd4>
    3e47:	mov    BYTE PTR [r14+r15*1],0x27
    3e4c:	lea    rdx,[r15+0x1]
    3e50:	cmp    r13,rdx
    3e53:	jbe    3e5b <__cxa_finalize@plt+0x1fe3>
    3e55:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    3e5b:	lea    rdx,[r15+0x2]
    3e5f:	cmp    r13,rdx
    3e62:	jbe    3e6a <__cxa_finalize@plt+0x1ff2>
    3e64:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    3e6a:	add    r15,0x3
    3e6e:	mov    r8d,eax
    3e71:	cmp    r13,r15
    3e74:	jbe    3e7b <__cxa_finalize@plt+0x2003>
    3e76:	mov    BYTE PTR [r14+r15*1],0x5c
    3e7b:	add    r15,0x1
    3e7f:	add    rbp,0x1
    3e83:	jmp    3d10 <__cxa_finalize@plt+0x1e98>
    3e88:	nop    DWORD PTR [rax+rax*1+0x0]
    3e90:	cmp    BYTE PTR [rsp+0xd],0x0
    3e95:	jne    4063 <__cxa_finalize@plt+0x21eb>
    3e9b:	xor    edx,edx
    3e9d:	test   BYTE PTR [rsp+0x78],0x1
    3ea2:	je     3dbb <__cxa_finalize@plt+0x1f43>
    3ea8:	add    rbp,0x1
    3eac:	jmp    3b68 <__cxa_finalize@plt+0x1cf0>
    3eb1:	nop    DWORD PTR [rax+0x0]
    3eb8:	cmp    DWORD PTR [rsp+0x8],0x2
    3ebd:	sete   dl
    3ec0:	xor    eax,eax
    3ec2:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    3ec7:	nop    WORD PTR [rax+rax*1+0x0]
    3ed0:	mov    edx,0x7
    3ed5:	mov    ebx,0x61
    3eda:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    3edf:	nop
    3ee0:	cmp    DWORD PTR [rsp+0x8],0x2
    3ee5:	sete   dl
    3ee8:	test   rbp,rbp
    3eeb:	jne    3c9c <__cxa_finalize@plt+0x1e24>
    3ef1:	movzx  eax,BYTE PTR [rsp+0xf]
    3ef6:	and    al,dl
    3ef8:	je     3ca8 <__cxa_finalize@plt+0x1e30>
    3efe:	mov    rbp,r11
    3f01:	mov    DWORD PTR [rsp+0x8],0x2
    3f09:	jmp    4609 <__cxa_finalize@plt+0x2791>
    3f0e:	xchg   ax,ax
    3f10:	cmp    DWORD PTR [rsp+0x8],0x2
    3f15:	sete   dl
    3f18:	xor    r12d,r12d
    3f1b:	jmp    3ef1 <__cxa_finalize@plt+0x2079>
    3f1d:	nop    DWORD PTR [rax]
    3f20:	cmp    DWORD PTR [rsp+0x8],0x2
    3f25:	mov    ebx,0x20
    3f2a:	sete   dl
    3f2d:	jmp    3ef1 <__cxa_finalize@plt+0x2079>
    3f2f:	nop
    3f30:	mov    edx,0xd
    3f35:	mov    ebx,0x72
    3f3a:	jmp    3da2 <__cxa_finalize@plt+0x1f2a>
    3f3f:	nop
    3f40:	mov    edx,0xc
    3f45:	mov    ebx,0x66
    3f4a:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    3f4f:	nop
    3f50:	mov    edx,0xb
    3f55:	mov    ebx,0x76
    3f5a:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    3f5f:	nop
    3f60:	mov    edx,0xa
    3f65:	mov    ebx,0x6e
    3f6a:	jmp    3da2 <__cxa_finalize@plt+0x1f2a>
    3f6f:	nop
    3f70:	xor    r10d,r10d
    3f73:	nop    DWORD PTR [rax+rax*1+0x0]
    3f78:	cmp    QWORD PTR [rsp+0x58],0x1
    3f7e:	jne    4328 <__cxa_finalize@plt+0x24b0>
    3f84:	mov    QWORD PTR [rsp+0x38],r11
    3f89:	mov    BYTE PTR [rsp+0x30],r8b
    3f8e:	mov    BYTE PTR [rsp+0x28],r10b
    3f93:	call   1e60 <__ctype_b_loc@plt>
    3f98:	mov    rcx,QWORD PTR [rax]
    3f9b:	movzx  edx,bl
    3f9e:	movzx  r10d,BYTE PTR [rsp+0x28]
    3fa4:	movzx  r8d,BYTE PTR [rsp+0x30]
    3faa:	mov    r11,QWORD PTR [rsp+0x38]
    3faf:	mov    edi,0x1
    3fb4:	movzx  eax,WORD PTR [rcx+rdx*2]
    3fb8:	and    ax,0x4000
    3fbc:	setne  r12b
    3fc0:	sete   al
    3fc3:	and    al,BYTE PTR [rsp+0xd]
    3fc7:	test   al,al
    3fc9:	jne    4961 <__cxa_finalize@plt+0x2ae9>
    3fcf:	cmp    DWORD PTR [rsp+0x8],0x2
    3fd4:	sete   dl
    3fd7:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    3fdc:	nop    DWORD PTR [rax+0x0]
    3fe0:	movzx  ebx,BYTE PTR [r9]
    3fe4:	cmp    bl,0x7e
    3fe7:	ja     3f70 <__cxa_finalize@plt+0x20f8>
    3fe9:	lea    rcx,[rip+0x6f58]        # af48 <_IO_stdin_used@@Base+0xd28>
    3ff0:	movzx  edx,bl
    3ff3:	movsxd rax,DWORD PTR [rcx+rdx*4]
    3ff7:	add    rax,rcx
    3ffa:	jmp    rax
    3ffc:	nop    DWORD PTR [rax+0x0]
    4000:	xor    r10d,r10d
    4003:	cmp    BYTE PTR [rsp+0xd],0x0
    4008:	jne    3dfe <__cxa_finalize@plt+0x1f86>
    400e:	xchg   ax,ax
    4010:	mov    edx,0x5c
    4015:	mov    ebx,0x5c
    401a:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    401f:	nop
    4020:	mov    edx,0xc
    4025:	xor    r10d,r10d
    4028:	mov    ebx,0x66
    402d:	jmp    3db4 <__cxa_finalize@plt+0x1f3c>
    4032:	nop    WORD PTR [rax+rax*1+0x0]
    4038:	mov    edx,0xa
    403d:	xor    r10d,r10d
    4040:	mov    ebx,0x6e
    4045:	jmp    3da2 <__cxa_finalize@plt+0x1f2a>
    404a:	nop    WORD PTR [rax+rax*1+0x0]
    4050:	mov    ebx,0x61
    4055:	jmp    3e20 <__cxa_finalize@plt+0x1fa8>
    405a:	nop    WORD PTR [rax+rax*1+0x0]
    4060:	xor    r10d,r10d
    4063:	cmp    DWORD PTR [rsp+0x8],0x2
    4068:	sete   dl
    406b:	cmp    BYTE PTR [rsp+0xf],0x0
    4070:	jne    4c0a <__cxa_finalize@plt+0x2d92>
    4076:	mov    eax,r8d
    4079:	mov    rcx,r15
    407c:	xor    eax,0x1
    407f:	and    al,dl
    4081:	je     40b0 <__cxa_finalize@plt+0x2238>
    4083:	cmp    r13,r15
    4086:	jbe    408d <__cxa_finalize@plt+0x2215>
    4088:	mov    BYTE PTR [r14+r15*1],0x27
    408d:	lea    rcx,[r15+0x1]
    4091:	cmp    r13,rcx
    4094:	jbe    409c <__cxa_finalize@plt+0x2224>
    4096:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    409c:	lea    rcx,[r15+0x2]
    40a0:	cmp    r13,rcx
    40a3:	ja     46d9 <__cxa_finalize@plt+0x2861>
    40a9:	lea    rcx,[r15+0x3]
    40ad:	mov    r8d,eax
    40b0:	cmp    r13,rcx
    40b3:	jbe    40ba <__cxa_finalize@plt+0x2242>
    40b5:	mov    BYTE PTR [r14+rcx*1],0x5c
    40ba:	cmp    DWORD PTR [rsp+0x8],0x2
    40bf:	lea    r15,[rcx+0x1]
    40c3:	je     46c9 <__cxa_finalize@plt+0x2851>
    40c9:	lea    rax,[rbp+0x1]
    40cd:	cmp    rax,r11
    40d0:	jae    40eb <__cxa_finalize@plt+0x2273>
    40d2:	mov    rax,QWORD PTR [rsp+0x10]
    40d7:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    40dc:	mov    BYTE PTR [rsp+0x28],al
    40e0:	sub    eax,0x30
    40e3:	cmp    al,0x9
    40e5:	jbe    4919 <__cxa_finalize@plt+0x2aa1>
    40eb:	mov    eax,r12d
    40ee:	mov    ebx,0x30
    40f3:	xor    r12d,r12d
    40f6:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    40fb:	nop    DWORD PTR [rax+rax*1+0x0]
    4100:	cmp    DWORD PTR [rsp+0x8],0x2
    4105:	mov    r12d,r10d
    4108:	sete   dl
    410b:	xor    r10d,r10d
    410e:	xor    eax,eax
    4110:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    4115:	nop    DWORD PTR [rax]
    4118:	cmp    DWORD PTR [rsp+0x8],0x2
    411d:	sete   dl
    4120:	xor    r10d,r10d
    4123:	jmp    3ee8 <__cxa_finalize@plt+0x2070>
    4128:	nop    DWORD PTR [rax+rax*1+0x0]
    4130:	cmp    DWORD PTR [rsp+0x8],0x2
    4135:	sete   dl
    4138:	xor    r10d,r10d
    413b:	xor    r12d,r12d
    413e:	jmp    3ef1 <__cxa_finalize@plt+0x2079>
    4143:	nop    DWORD PTR [rax+rax*1+0x0]
    4148:	cmp    DWORD PTR [rsp+0x8],0x2
    414d:	mov    r12d,r10d
    4150:	mov    ebx,0x20
    4155:	sete   dl
    4158:	xor    r10d,r10d
    415b:	jmp    3ef1 <__cxa_finalize@plt+0x2079>
    4160:	mov    edx,0xd
    4165:	xor    r10d,r10d
    4168:	mov    ebx,0x72
    416d:	jmp    3da2 <__cxa_finalize@plt+0x1f2a>
    4172:	nop    WORD PTR [rax+rax*1+0x0]
    4178:	mov    ebx,0x76
    417d:	jmp    3e20 <__cxa_finalize@plt+0x1fa8>
    4182:	nop    WORD PTR [rax+rax*1+0x0]
    4188:	mov    edx,0x9
    418d:	xor    r10d,r10d
    4190:	mov    ebx,0x74
    4195:	jmp    3da2 <__cxa_finalize@plt+0x1f2a>
    419a:	nop    WORD PTR [rax+rax*1+0x0]
    41a0:	mov    ebx,0x62
    41a5:	jmp    3e20 <__cxa_finalize@plt+0x1fa8>
    41aa:	nop    WORD PTR [rax+rax*1+0x0]
    41b0:	xor    r10d,r10d
    41b3:	jmp    3c50 <__cxa_finalize@plt+0x1dd8>
    41b8:	nop    DWORD PTR [rax+rax*1+0x0]
    41c0:	cmp    BYTE PTR [rsp+0xf],0x0
    41c5:	jne    4b30 <__cxa_finalize@plt+0x2cb8>
    41cb:	add    rbp,0x1
    41cf:	mov    eax,r8d
    41d2:	xor    r12d,r12d
    41d5:	mov    ebx,0x5c
    41da:	jmp    3cec <__cxa_finalize@plt+0x1e74>
    41df:	nop
    41e0:	cmp    DWORD PTR [rsp+0x8],0x2
    41e5:	movzx  ebx,BYTE PTR [rsp+0xf]
    41ea:	mov    r12d,r8d
    41ed:	mov    rbp,r11
    41f0:	sete   dl
    41f3:	mov    eax,ebx
    41f5:	test   r15,r15
    41f8:	sete   cl
    41fb:	and    eax,edx
    41fd:	and    al,cl
    41ff:	jne    4c66 <__cxa_finalize@plt+0x2dee>
    4205:	mov    eax,ebx
    4207:	xor    eax,0x1
    420a:	and    dl,al
    420c:	je     4b7c <__cxa_finalize@plt+0x2d04>
    4212:	cmp    BYTE PTR [rsp+0x7c],0x0
    4217:	je     4b7a <__cxa_finalize@plt+0x2d02>
    421d:	cmp    BYTE PTR [rsp+0xe],0x0
    4222:	jne    4c1d <__cxa_finalize@plt+0x2da5>
    4228:	test   r13,r13
    422b:	sete   al
    422e:	cmp    QWORD PTR [rsp+0x50],0x0
    4234:	setne  dl
    4237:	and    al,dl
    4239:	je     4c5c <__cxa_finalize@plt+0x2de4>
    423f:	mov    r13,QWORD PTR [rsp+0x50]
    4244:	lea    rbx,[rip+0x6a72]        # acbd <_IO_stdin_used@@Base+0xa9d>
    424b:	mov    BYTE PTR [r14],0x27
    424f:	mov    DWORD PTR [rsp+0x8],0x2
    4257:	mov    r15d,0x1
    425d:	mov    QWORD PTR [rsp+0x18],0x1
    4266:	mov    BYTE PTR [rsp+0xf],0x0
    426b:	mov    QWORD PTR [rsp+0x48],rbx
    4270:	mov    BYTE PTR [rsp+0x7c],al
    4274:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    4279:	nop    DWORD PTR [rax+0x0]
    4280:	cmp    BYTE PTR [rsp+0xf],0x0
    4285:	jne    4b30 <__cxa_finalize@plt+0x2cb8>
    428b:	test   r13,r13
    428e:	je     4690 <__cxa_finalize@plt+0x2818>
    4294:	xor    edx,edx
    4296:	cmp    QWORD PTR [rsp+0x50],0x0
    429c:	jne    4690 <__cxa_finalize@plt+0x2818>
    42a2:	mov    QWORD PTR [rsp+0x50],r13
    42a7:	add    r15,0x3
    42ab:	xor    eax,eax
    42ad:	mov    BYTE PTR [rsp+0x7c],r12b
    42b2:	xor    r8d,r8d
    42b5:	mov    r13,rdx
    42b8:	mov    ebx,0x27
    42bd:	jmp    3cd9 <__cxa_finalize@plt+0x1e61>
    42c2:	nop    WORD PTR [rax+rax*1+0x0]
    42c8:	test   BYTE PTR [rsp+0x78],0x4
    42cd:	je     42f0 <__cxa_finalize@plt+0x2478>
    42cf:	lea    rcx,[rbp+0x2]
    42d3:	cmp    rcx,r11
    42d6:	jae    42f0 <__cxa_finalize@plt+0x2478>
    42d8:	mov    rax,QWORD PTR [rsp+0x10]
    42dd:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    42e2:	je     4a72 <__cxa_finalize@plt+0x2bfa>
    42e8:	nop    DWORD PTR [rax+rax*1+0x0]
    42f0:	xor    edx,edx
    42f2:	xor    r12d,r12d
    42f5:	xor    eax,eax
    42f7:	mov    ebx,0x3f
    42fc:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    4301:	nop    DWORD PTR [rax+0x0]
    4308:	cmp    BYTE PTR [rsp+0xf],0x0
    430d:	jne    4b30 <__cxa_finalize@plt+0x2cb8>
    4313:	xor    r12d,r12d
    4316:	xor    eax,eax
    4318:	mov    ebx,0x3f
    431d:	jmp    3cd9 <__cxa_finalize@plt+0x1e61>
    4322:	nop    WORD PTR [rax+rax*1+0x0]
    4328:	lea    rax,[rsp+0xa0]
    4330:	cmp    r11,0xffffffffffffffff
    4334:	mov    QWORD PTR [rsp+0xa0],0x0
    4340:	mov    QWORD PTR [rsp+0x28],rax
    4345:	jne    4374 <__cxa_finalize@plt+0x24fc>
    4347:	mov    rdi,QWORD PTR [rsp+0x10]
    434c:	mov    BYTE PTR [rsp+0x40],r8b
    4351:	mov    BYTE PTR [rsp+0x38],r10b
    4356:	mov    QWORD PTR [rsp+0x30],r9
    435b:	call   1b60 <strlen@plt>
    4360:	movzx  r8d,BYTE PTR [rsp+0x40]
    4366:	movzx  r10d,BYTE PTR [rsp+0x38]
    436c:	mov    r11,rax
    436f:	mov    r9,QWORD PTR [rsp+0x30]
    4374:	lea    rax,[rsp+0x9c]
    437c:	xor    ecx,ecx
    437e:	mov    BYTE PTR [rsp+0x7e],bl
    4382:	mov    BYTE PTR [rsp+0x7d],r8b
    4387:	mov    rbx,rcx
    438a:	mov    QWORD PTR [rsp+0x88],r9
    4392:	mov    QWORD PTR [rsp+0x38],rax
    4397:	mov    BYTE PTR [rsp+0x7f],r10b
    439c:	mov    QWORD PTR [rsp+0x80],r15
    43a4:	mov    QWORD PTR [rsp+0x40],r14
    43a9:	mov    QWORD PTR [rsp+0x70],r13
    43ae:	mov    QWORD PTR [rsp+0x30],r11
    43b3:	mov    rax,QWORD PTR [rsp+0x10]
    43b8:	lea    r14,[rbp+rbx*1+0x0]
    43bd:	mov    rdx,QWORD PTR [rsp+0x30]
    43c2:	mov    rcx,QWORD PTR [rsp+0x28]
    43c7:	mov    rdi,QWORD PTR [rsp+0x38]
    43cc:	lea    r13,[rax+r14*1]
    43d0:	sub    rdx,r14
    43d3:	mov    rsi,r13
    43d6:	call   83c0 <fts_children@@Base+0x150>
    43db:	test   rax,rax
    43de:	mov    r15,rax
    43e1:	je     4431 <__cxa_finalize@plt+0x25b9>
    43e3:	cmp    rax,0xffffffffffffffff
    43e7:	je     4a05 <__cxa_finalize@plt+0x2b8d>
    43ed:	cmp    rax,0xfffffffffffffffe
    43f1:	je     4991 <__cxa_finalize@plt+0x2b19>
    43f7:	cmp    DWORD PTR [rsp+0x8],0x2
    43fc:	sete   al
    43ff:	and    al,BYTE PTR [rsp+0xf]
    4403:	jne    45a0 <__cxa_finalize@plt+0x2728>
    4409:	mov    edi,DWORD PTR [rsp+0x9c]
    4410:	call   1e50 <iswprint@plt>
    4415:	mov    rdi,QWORD PTR [rsp+0x28]
    441a:	test   eax,eax
    441c:	mov    eax,0x0
    4421:	cmove  r12d,eax
    4425:	add    rbx,r15
    4428:	call   1e40 <mbsinit@plt>
    442d:	test   eax,eax
    442f:	je     43b3 <__cxa_finalize@plt+0x253b>
    4431:	mov    edx,r12d
    4434:	mov    rdi,rbx
    4437:	movzx  r8d,BYTE PTR [rsp+0x7d]
    443d:	xor    edx,0x1
    4440:	movzx  ebx,BYTE PTR [rsp+0x7e]
    4445:	movzx  r10d,BYTE PTR [rsp+0x7f]
    444b:	and    dl,BYTE PTR [rsp+0xd]
    444f:	mov    r15,QWORD PTR [rsp+0x80]
    4457:	mov    r14,QWORD PTR [rsp+0x40]
    445c:	mov    r13,QWORD PTR [rsp+0x70]
    4461:	mov    r11,QWORD PTR [rsp+0x30]
    4466:	cmp    rdi,0x1
    446a:	jbe    4a6b <__cxa_finalize@plt+0x2bf3>
    4470:	mov    rcx,rdi
    4473:	xor    esi,esi
    4475:	movzx  r9d,BYTE PTR [rsp+0xf]
    447b:	add    rcx,rbp
    447e:	mov    rdi,QWORD PTR [rsp+0x10]
    4483:	jmp    453e <__cxa_finalize@plt+0x26c6>
    4488:	nop    DWORD PTR [rax+rax*1+0x0]
    4490:	cmp    DWORD PTR [rsp+0x8],0x2
    4495:	sete   al
    4498:	test   r9b,r9b
    449b:	jne    4950 <__cxa_finalize@plt+0x2ad8>
    44a1:	mov    esi,r8d
    44a4:	xor    esi,0x1
    44a7:	and    al,sil
    44aa:	je     44db <__cxa_finalize@plt+0x2663>
    44ac:	cmp    r13,r15
    44af:	jbe    44b6 <__cxa_finalize@plt+0x263e>
    44b1:	mov    BYTE PTR [r14+r15*1],0x27
    44b6:	lea    rsi,[r15+0x1]
    44ba:	cmp    r13,rsi
    44bd:	jbe    44c5 <__cxa_finalize@plt+0x264d>
    44bf:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    44c5:	lea    rsi,[r15+0x2]
    44c9:	cmp    r13,rsi
    44cc:	jbe    44d4 <__cxa_finalize@plt+0x265c>
    44ce:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    44d4:	add    r15,0x3
    44d8:	mov    r8d,eax
    44db:	cmp    r13,r15
    44de:	jbe    44e5 <__cxa_finalize@plt+0x266d>
    44e0:	mov    BYTE PTR [r14+r15*1],0x5c
    44e5:	lea    rax,[r15+0x1]
    44e9:	cmp    r13,rax
    44ec:	jbe    44fb <__cxa_finalize@plt+0x2683>
    44ee:	mov    eax,ebx
    44f0:	shr    al,0x6
    44f3:	add    eax,0x30
    44f6:	mov    BYTE PTR [r14+r15*1+0x1],al
    44fb:	lea    rax,[r15+0x2]
    44ff:	cmp    r13,rax
    4502:	jbe    4514 <__cxa_finalize@plt+0x269c>
    4504:	mov    eax,ebx
    4506:	shr    al,0x3
    4509:	and    eax,0x7
    450c:	add    eax,0x30
    450f:	mov    BYTE PTR [r14+r15*1+0x2],al
    4514:	and    ebx,0x7
    4517:	add    rbp,0x1
    451b:	add    r15,0x3
    451f:	add    ebx,0x30
    4522:	cmp    rbp,rcx
    4525:	jae    3d10 <__cxa_finalize@plt+0x1e98>
    452b:	mov    esi,edx
    452d:	cmp    r13,r15
    4530:	jbe    4536 <__cxa_finalize@plt+0x26be>
    4532:	mov    BYTE PTR [r14+r15*1],bl
    4536:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    453a:	add    r15,0x1
    453e:	test   dl,dl
    4540:	jne    4490 <__cxa_finalize@plt+0x2618>
    4546:	mov    eax,esi
    4548:	xor    eax,0x1
    454b:	and    eax,r8d
    454e:	test   r10b,r10b
    4551:	je     4561 <__cxa_finalize@plt+0x26e9>
    4553:	cmp    r13,r15
    4556:	jbe    455d <__cxa_finalize@plt+0x26e5>
    4558:	mov    BYTE PTR [r14+r15*1],0x5c
    455d:	add    r15,0x1
    4561:	add    rbp,0x1
    4565:	cmp    rbp,rcx
    4568:	jae    3cec <__cxa_finalize@plt+0x1e74>
    456e:	test   al,al
    4570:	je     496e <__cxa_finalize@plt+0x2af6>
    4576:	cmp    r13,r15
    4579:	jbe    4580 <__cxa_finalize@plt+0x2708>
    457b:	mov    BYTE PTR [r14+r15*1],0x27
    4580:	lea    rax,[r15+0x1]
    4584:	cmp    r13,rax
    4587:	jbe    458f <__cxa_finalize@plt+0x2717>
    4589:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    458f:	add    r15,0x2
    4593:	xor    r10d,r10d
    4596:	xor    r8d,r8d
    4599:	jmp    452d <__cxa_finalize@plt+0x26b5>
    459b:	nop    DWORD PTR [rax+rax*1+0x0]
    45a0:	cmp    r15,0x1
    45a4:	je     4409 <__cxa_finalize@plt+0x2591>
    45aa:	mov    rdi,QWORD PTR [rsp+0x10]
    45af:	lea    rcx,[rdi+r15*1]
    45b3:	lea    rdx,[rdi+r14*1+0x1]
    45b8:	lea    r8,[rcx+r14*1]
    45bc:	jmp    45cd <__cxa_finalize@plt+0x2755>
    45be:	xchg   ax,ax
    45c0:	add    rdx,0x1
    45c4:	cmp    r8,rdx
    45c7:	je     4409 <__cxa_finalize@plt+0x2591>
    45cd:	movzx  ecx,BYTE PTR [rdx]
    45d0:	sub    ecx,0x5b
    45d3:	cmp    cl,0x21
    45d6:	ja     45c0 <__cxa_finalize@plt+0x2748>
    45d8:	mov    esi,0x1
    45dd:	shl    rsi,cl
    45e0:	mov    rcx,rsi
    45e3:	movabs rsi,0x20000002b
    45ed:	test   rcx,rsi
    45f0:	je     45c0 <__cxa_finalize@plt+0x2748>
    45f2:	mov    r14,QWORD PTR [rsp+0x40]
    45f7:	mov    r13,QWORD PTR [rsp+0x70]
    45fc:	mov    rbp,QWORD PTR [rsp+0x30]
    4601:	mov    DWORD PTR [rsp+0x8],0x2
    4609:	cmp    BYTE PTR [rsp+0xd],0x0
    460e:	je     4620 <__cxa_finalize@plt+0x27a8>
    4610:	test   al,al
    4612:	mov    eax,0x4
    4617:	cmove  eax,DWORD PTR [rsp+0x8]
    461c:	mov    DWORD PTR [rsp+0x8],eax
    4620:	sub    rsp,0x8
    4624:	mov    rcx,rbp
    4627:	mov    rsi,r13
    462a:	push   QWORD PTR [rsp+0x68]
    462e:	push   QWORD PTR [rsp+0x78]
    4632:	mov    rdi,r14
    4635:	push   0x0
    4637:	mov    r9d,DWORD PTR [rsp+0x98]
    463f:	mov    r8d,DWORD PTR [rsp+0x28]
    4644:	mov    rdx,QWORD PTR [rsp+0x30]
    4649:	and    r9d,0xfffffffd
    464d:	call   3a80 <__cxa_finalize@plt+0x1c08>
    4652:	add    rsp,0x20
    4656:	mov    r15,rax
    4659:	mov    rbx,QWORD PTR [rsp+0xa8]
    4661:	xor    rbx,QWORD PTR fs:0x28
    466a:	mov    rax,r15
    466d:	jne    4c73 <__cxa_finalize@plt+0x2dfb>
    4673:	add    rsp,0xb8
    467a:	pop    rbx
    467b:	pop    rbp
    467c:	pop    r12
    467e:	pop    r13
    4680:	pop    r14
    4682:	pop    r15
    4684:	ret    
    4685:	nop    DWORD PTR [rax]
    4688:	mov    rbp,r11
    468b:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4690:	cmp    r13,r15
    4693:	jbe    469a <__cxa_finalize@plt+0x2822>
    4695:	mov    BYTE PTR [r14+r15*1],0x27
    469a:	lea    rax,[r15+0x1]
    469e:	cmp    r13,rax
    46a1:	jbe    46a9 <__cxa_finalize@plt+0x2831>
    46a3:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    46a9:	lea    rax,[r15+0x2]
    46ad:	cmp    r13,rax
    46b0:	jbe    4ca2 <__cxa_finalize@plt+0x2e2a>
    46b6:	mov    rdx,r13
    46b9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    46bf:	mov    r13,QWORD PTR [rsp+0x50]
    46c4:	jmp    42a2 <__cxa_finalize@plt+0x242a>
    46c9:	mov    eax,r12d
    46cc:	mov    ebx,0x30
    46d1:	xor    r12d,r12d
    46d4:	jmp    3cd9 <__cxa_finalize@plt+0x1e61>
    46d9:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    46df:	jmp    40a9 <__cxa_finalize@plt+0x2231>
    46e4:	test   ebx,ebx
    46e6:	jne    3b13 <__cxa_finalize@plt+0x1c9b>
    46ec:	mov    BYTE PTR [rsp+0xd],0x1
    46f1:	test   r13,r13
    46f4:	jne    4c8a <__cxa_finalize@plt+0x2e12>
    46fa:	lea    rax,[rip+0x65bc]        # acbd <_IO_stdin_used@@Base+0xa9d>
    4701:	mov    QWORD PTR [rsp+0x50],0x0
    470a:	mov    BYTE PTR [rsp+0xe],0x1
    470f:	mov    BYTE PTR [rsp+0x7c],0x0
    4714:	xor    r12d,r12d
    4717:	mov    BYTE PTR [rsp+0xf],0x0
    471c:	mov    QWORD PTR [rsp+0x18],0x1
    4725:	mov    QWORD PTR [rsp+0x48],rax
    472a:	mov    r15d,0x1
    4730:	mov    DWORD PTR [rsp+0x8],0x2
    4738:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    473d:	nop    DWORD PTR [rax]
    4740:	test   ebx,ebx
    4742:	jne    4b3d <__cxa_finalize@plt+0x2cc5>
    4748:	test   r13,r13
    474b:	je     4976 <__cxa_finalize@plt+0x2afe>
    4751:	mov    BYTE PTR [r14],0x22
    4755:	mov    BYTE PTR [rsp+0xe],0x1
    475a:	xor    r12d,r12d
    475d:	mov    BYTE PTR [rsp+0x7c],0x0
    4762:	mov    QWORD PTR [rsp+0x50],0x0
    476b:	lea    rax,[rip+0x6549]        # acbb <_IO_stdin_used@@Base+0xa9b>
    4772:	mov    BYTE PTR [rsp+0xf],0x0
    4777:	mov    BYTE PTR [rsp+0xd],0x1
    477c:	mov    QWORD PTR [rsp+0x18],0x1
    4785:	mov    r15d,0x1
    478b:	mov    QWORD PTR [rsp+0x48],rax
    4790:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    4795:	lea    rax,[rip+0x651f]        # acbb <_IO_stdin_used@@Base+0xa9b>
    479c:	mov    BYTE PTR [rsp+0xe],0x1
    47a1:	mov    BYTE PTR [rsp+0x7c],0x0
    47a6:	xor    r12d,r12d
    47a9:	mov    QWORD PTR [rsp+0x50],0x0
    47b2:	mov    BYTE PTR [rsp+0xf],0x1
    47b7:	mov    BYTE PTR [rsp+0xd],0x1
    47bc:	mov    QWORD PTR [rsp+0x18],0x1
    47c5:	xor    r15d,r15d
    47c8:	mov    QWORD PTR [rsp+0x48],rax
    47cd:	mov    DWORD PTR [rsp+0x8],0x5
    47d5:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    47da:	mov    BYTE PTR [rsp+0xe],0x1
    47df:	mov    BYTE PTR [rsp+0x7c],0x0
    47e4:	xor    r12d,r12d
    47e7:	mov    QWORD PTR [rsp+0x50],0x0
    47f0:	mov    BYTE PTR [rsp+0xf],0x0
    47f5:	xor    r15d,r15d
    47f8:	mov    BYTE PTR [rsp+0xd],0x1
    47fd:	mov    QWORD PTR [rsp+0x18],0x0
    4806:	mov    QWORD PTR [rsp+0x48],0x0
    480f:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    4814:	cmp    DWORD PTR [rsp+0x8],0xa
    4819:	je     4871 <__cxa_finalize@plt+0x29f9>
    481b:	lea    rsi,[rip+0x649d]        # acbf <_IO_stdin_used@@Base+0xa9f>
    4822:	xor    edi,edi
    4824:	mov    edx,0x5
    4829:	call   1b40 <dcgettext@plt>
    482e:	mov    rcx,rax
    4831:	mov    QWORD PTR [rsp+0x68],rax
    4836:	lea    rax,[rip+0x6482]        # acbf <_IO_stdin_used@@Base+0xa9f>
    483d:	cmp    rcx,rax
    4840:	je     4bde <__cxa_finalize@plt+0x2d66>
    4846:	lea    rsi,[rip+0x6470]        # acbd <_IO_stdin_used@@Base+0xa9d>
    484d:	xor    edi,edi
    484f:	mov    edx,0x5
    4854:	call   1b40 <dcgettext@plt>
    4859:	mov    rcx,rax
    485c:	mov    QWORD PTR [rsp+0x60],rax
    4861:	lea    rax,[rip+0x6455]        # acbd <_IO_stdin_used@@Base+0xa9d>
    4868:	cmp    rcx,rax
    486b:	je     4bf4 <__cxa_finalize@plt+0x2d7c>
    4871:	xor    r15d,r15d
    4874:	test   ebx,ebx
    4876:	je     4a3d <__cxa_finalize@plt+0x2bc5>
    487c:	test   ebx,ebx
    487e:	mov    rbx,QWORD PTR [rsp+0x60]
    4883:	setne  BYTE PTR [rsp+0xf]
    4888:	xor    r12d,r12d
    488b:	mov    rdi,rbx
    488e:	call   1b60 <strlen@plt>
    4893:	mov    QWORD PTR [rsp+0x48],rbx
    4898:	mov    QWORD PTR [rsp+0x18],rax
    489d:	mov    BYTE PTR [rsp+0xe],0x1
    48a2:	mov    BYTE PTR [rsp+0x7c],0x0
    48a7:	mov    QWORD PTR [rsp+0x50],0x0
    48b0:	mov    BYTE PTR [rsp+0xd],0x1
    48b5:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    48ba:	mov    BYTE PTR [rsp+0xe],0x1
    48bf:	mov    BYTE PTR [rsp+0x7c],0x0
    48c4:	xor    r12d,r12d
    48c7:	mov    QWORD PTR [rsp+0x50],0x0
    48d0:	mov    BYTE PTR [rsp+0xf],0x0
    48d5:	xor    r15d,r15d
    48d8:	mov    BYTE PTR [rsp+0xd],0x0
    48dd:	mov    QWORD PTR [rsp+0x18],0x0
    48e6:	mov    QWORD PTR [rsp+0x48],0x0
    48ef:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    48f4:	mov    BYTE PTR [rsp+0xe],0x1
    48f9:	mov    BYTE PTR [rsp+0x7c],0x0
    48fe:	xor    r12d,r12d
    4901:	mov    QWORD PTR [rsp+0x50],0x0
    490a:	mov    BYTE PTR [rsp+0xf],0x1
    490f:	mov    BYTE PTR [rsp+0xd],0x1
    4914:	jmp    3b33 <__cxa_finalize@plt+0x1cbb>
    4919:	cmp    r13,r15
    491c:	jbe    4923 <__cxa_finalize@plt+0x2aab>
    491e:	mov    BYTE PTR [r14+r15*1],0x30
    4923:	lea    rax,[rcx+0x2]
    4927:	cmp    r13,rax
    492a:	jbe    4932 <__cxa_finalize@plt+0x2aba>
    492c:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    4932:	mov    eax,r12d
    4935:	lea    r15,[rcx+0x3]
    4939:	xor    r12d,r12d
    493c:	mov    ebx,0x30
    4941:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    4946:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4950:	movzx  ebx,BYTE PTR [rsp+0xf]
    4955:	mov    rbp,r11
    4958:	mov    BYTE PTR [rsp+0xd],bl
    495c:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4961:	movzx  edx,BYTE PTR [rsp+0xd]
    4966:	xor    r12d,r12d
    4969:	jmp    4470 <__cxa_finalize@plt+0x25f8>
    496e:	xor    r10d,r10d
    4971:	jmp    452d <__cxa_finalize@plt+0x26b5>
    4976:	mov    QWORD PTR [rsp+0x50],0x0
    497f:	mov    BYTE PTR [rsp+0xe],0x1
    4984:	xor    r12d,r12d
    4987:	mov    BYTE PTR [rsp+0x7c],0x0
    498c:	jmp    476b <__cxa_finalize@plt+0x28f3>
    4991:	mov    r11,QWORD PTR [rsp+0x30]
    4996:	mov    rsi,r14
    4999:	mov    rcx,r13
    499c:	mov    rax,rbx
    499f:	mov    rdi,rbx
    49a2:	movzx  r8d,BYTE PTR [rsp+0x7d]
    49a8:	movzx  ebx,BYTE PTR [rsp+0x7e]
    49ad:	mov    r9,QWORD PTR [rsp+0x88]
    49b5:	cmp    rsi,r11
    49b8:	movzx  r10d,BYTE PTR [rsp+0x7f]
    49be:	mov    r15,QWORD PTR [rsp+0x80]
    49c6:	mov    r14,QWORD PTR [rsp+0x40]
    49cb:	mov    r13,QWORD PTR [rsp+0x70]
    49d0:	jae    49f8 <__cxa_finalize@plt+0x2b80>
    49d2:	cmp    BYTE PTR [rcx],0x0
    49d5:	jne    49e7 <__cxa_finalize@plt+0x2b6f>
    49d7:	jmp    49f8 <__cxa_finalize@plt+0x2b80>
    49d9:	nop    DWORD PTR [rax+0x0]
    49e0:	cmp    BYTE PTR [r9+rax*1],0x0
    49e5:	je     49f5 <__cxa_finalize@plt+0x2b7d>
    49e7:	add    rax,0x1
    49eb:	lea    rdx,[rbp+rax*1+0x0]
    49f0:	cmp    r11,rdx
    49f3:	ja     49e0 <__cxa_finalize@plt+0x2b68>
    49f5:	mov    rdi,rax
    49f8:	movzx  edx,BYTE PTR [rsp+0xd]
    49fd:	xor    r12d,r12d
    4a00:	jmp    4466 <__cxa_finalize@plt+0x25ee>
    4a05:	mov    rdi,rbx
    4a08:	movzx  r8d,BYTE PTR [rsp+0x7d]
    4a0e:	movzx  ebx,BYTE PTR [rsp+0x7e]
    4a13:	movzx  r10d,BYTE PTR [rsp+0x7f]
    4a19:	mov    r15,QWORD PTR [rsp+0x80]
    4a21:	xor    r12d,r12d
    4a24:	mov    r14,QWORD PTR [rsp+0x40]
    4a29:	mov    r13,QWORD PTR [rsp+0x70]
    4a2e:	mov    r11,QWORD PTR [rsp+0x30]
    4a33:	movzx  edx,BYTE PTR [rsp+0xd]
    4a38:	jmp    4466 <__cxa_finalize@plt+0x25ee>
    4a3d:	mov    rdx,QWORD PTR [rsp+0x68]
    4a42:	movzx  eax,BYTE PTR [rdx]
    4a45:	test   al,al
    4a47:	je     487c <__cxa_finalize@plt+0x2a04>
    4a4d:	nop    DWORD PTR [rax]
    4a50:	cmp    r13,r15
    4a53:	jbe    4a59 <__cxa_finalize@plt+0x2be1>
    4a55:	mov    BYTE PTR [r14+r15*1],al
    4a59:	add    r15,0x1
    4a5d:	movzx  eax,BYTE PTR [rdx+r15*1]
    4a62:	test   al,al
    4a64:	jne    4a50 <__cxa_finalize@plt+0x2bd8>
    4a66:	jmp    487c <__cxa_finalize@plt+0x2a04>
    4a6b:	mov    eax,edx
    4a6d:	jmp    3fc7 <__cxa_finalize@plt+0x214f>
    4a72:	movzx  ebx,BYTE PTR [rax+rcx*1]
    4a76:	cmp    bl,0x3e
    4a79:	ja     42f0 <__cxa_finalize@plt+0x2478>
    4a7f:	movabs rax,0x7000a38200000000
    4a89:	bt     rax,rbx
    4a8d:	jae    42f0 <__cxa_finalize@plt+0x2478>
    4a93:	cmp    BYTE PTR [rsp+0xf],0x0
    4a98:	jne    4c82 <__cxa_finalize@plt+0x2e0a>
    4a9e:	cmp    r13,r15
    4aa1:	jbe    4aa8 <__cxa_finalize@plt+0x2c30>
    4aa3:	mov    BYTE PTR [r14+r15*1],0x3f
    4aa8:	lea    rax,[r15+0x1]
    4aac:	cmp    r13,rax
    4aaf:	jbe    4ab7 <__cxa_finalize@plt+0x2c3f>
    4ab1:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    4ab7:	lea    rax,[r15+0x2]
    4abb:	cmp    r13,rax
    4abe:	jbe    4ac6 <__cxa_finalize@plt+0x2c4e>
    4ac0:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    4ac6:	lea    rax,[r15+0x3]
    4aca:	cmp    r13,rax
    4acd:	jbe    4ad5 <__cxa_finalize@plt+0x2c5d>
    4acf:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    4ad5:	add    r15,0x4
    4ad9:	xor    edx,edx
    4adb:	xor    r12d,r12d
    4ade:	xor    eax,eax
    4ae0:	mov    rbp,rcx
    4ae3:	jmp    3ca8 <__cxa_finalize@plt+0x1e30>
    4ae8:	test   ebx,ebx
    4aea:	je     4c78 <__cxa_finalize@plt+0x2e00>
    4af0:	lea    rax,[rip+0x61c6]        # acbd <_IO_stdin_used@@Base+0xa9d>
    4af7:	mov    BYTE PTR [rsp+0xe],0x1
    4afc:	mov    BYTE PTR [rsp+0x7c],0x0
    4b01:	xor    r12d,r12d
    4b04:	mov    QWORD PTR [rsp+0x50],0x0
    4b0d:	mov    BYTE PTR [rsp+0xf],0x1
    4b12:	mov    BYTE PTR [rsp+0xd],0x0
    4b17:	mov    QWORD PTR [rsp+0x18],0x1
    4b20:	xor    r15d,r15d
    4b23:	mov    QWORD PTR [rsp+0x48],rax
    4b28:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    4b2d:	nop    DWORD PTR [rax]
    4b30:	mov    rbp,r11
    4b33:	movzx  eax,BYTE PTR [rsp+0xf]
    4b38:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4b3d:	lea    rax,[rip+0x6177]        # acbb <_IO_stdin_used@@Base+0xa9b>
    4b44:	mov    BYTE PTR [rsp+0xe],0x1
    4b49:	mov    BYTE PTR [rsp+0x7c],0x0
    4b4e:	xor    r12d,r12d
    4b51:	mov    QWORD PTR [rsp+0x50],0x0
    4b5a:	mov    BYTE PTR [rsp+0xf],0x1
    4b5f:	mov    BYTE PTR [rsp+0xd],0x1
    4b64:	mov    QWORD PTR [rsp+0x18],0x1
    4b6d:	xor    r15d,r15d
    4b70:	mov    QWORD PTR [rsp+0x48],rax
    4b75:	jmp    3b53 <__cxa_finalize@plt+0x1cdb>
    4b7a:	mov    eax,edx
    4b7c:	mov    rbx,QWORD PTR [rsp+0x48]
    4b81:	test   rbx,rbx
    4b84:	je     4bb2 <__cxa_finalize@plt+0x2d3a>
    4b86:	test   al,al
    4b88:	je     4bb2 <__cxa_finalize@plt+0x2d3a>
    4b8a:	movzx  ecx,BYTE PTR [rbx]
    4b8d:	mov    rax,rbx
    4b90:	test   cl,cl
    4b92:	je     4bb2 <__cxa_finalize@plt+0x2d3a>
    4b94:	mov    rdx,r15
    4b97:	sub    rax,r15
    4b9a:	cmp    r13,rdx
    4b9d:	jbe    4ba3 <__cxa_finalize@plt+0x2d2b>
    4b9f:	mov    BYTE PTR [r14+rdx*1],cl
    4ba3:	add    rdx,0x1
    4ba7:	movzx  ecx,BYTE PTR [rax+rdx*1]
    4bab:	test   cl,cl
    4bad:	jne    4b9a <__cxa_finalize@plt+0x2d22>
    4baf:	mov    r15,rdx
    4bb2:	cmp    r13,r15
    4bb5:	jbe    4659 <__cxa_finalize@plt+0x27e1>
    4bbb:	mov    BYTE PTR [r14+r15*1],0x0
    4bc0:	jmp    4659 <__cxa_finalize@plt+0x27e1>
    4bc5:	cmp    DWORD PTR [rsp+0x8],0x2
    4bca:	movzx  ebx,BYTE PTR [rsp+0xf]
    4bcf:	mov    rbp,r11
    4bd2:	sete   al
    4bd5:	mov    BYTE PTR [rsp+0xd],bl
    4bd9:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4bde:	mov    esi,DWORD PTR [rsp+0x8]
    4be2:	mov    rdi,rcx
    4be5:	call   3990 <__cxa_finalize@plt+0x1b18>
    4bea:	mov    QWORD PTR [rsp+0x68],rax
    4bef:	jmp    4846 <__cxa_finalize@plt+0x29ce>
    4bf4:	mov    esi,DWORD PTR [rsp+0x8]
    4bf8:	mov    rdi,rcx
    4bfb:	call   3990 <__cxa_finalize@plt+0x1b18>
    4c00:	mov    QWORD PTR [rsp+0x60],rax
    4c05:	jmp    4871 <__cxa_finalize@plt+0x29f9>
    4c0a:	movzx  ebx,BYTE PTR [rsp+0xf]
    4c0f:	mov    rbp,r11
    4c12:	mov    eax,edx
    4c14:	mov    BYTE PTR [rsp+0xd],bl
    4c18:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4c1d:	sub    rsp,0x8
    4c21:	mov    r8d,0x5
    4c27:	mov    rcx,r11
    4c2a:	push   QWORD PTR [rsp+0x68]
    4c2e:	push   QWORD PTR [rsp+0x78]
    4c32:	mov    rdi,r14
    4c35:	push   QWORD PTR [rsp+0x38]
    4c39:	mov    r9d,DWORD PTR [rsp+0x98]
    4c41:	mov    rdx,QWORD PTR [rsp+0x30]
    4c46:	mov    rsi,QWORD PTR [rsp+0x70]
    4c4b:	call   3a80 <__cxa_finalize@plt+0x1c08>
    4c50:	add    rsp,0x20
    4c54:	mov    r15,rax
    4c57:	jmp    4659 <__cxa_finalize@plt+0x27e1>
    4c5c:	movzx  eax,BYTE PTR [rsp+0x7c]
    4c61:	jmp    4b7c <__cxa_finalize@plt+0x2d04>
    4c66:	mov    DWORD PTR [rsp+0x8],0x2
    4c6e:	jmp    4609 <__cxa_finalize@plt+0x2791>
    4c73:	call   1b90 <__stack_chk_fail@plt>
    4c78:	mov    BYTE PTR [rsp+0xd],0x0
    4c7d:	jmp    46f1 <__cxa_finalize@plt+0x2879>
    4c82:	mov    rbp,r11
    4c85:	jmp    4620 <__cxa_finalize@plt+0x27a8>
    4c8a:	mov    BYTE PTR [rsp+0xe],0x1
    4c8f:	xor    eax,eax
    4c91:	xor    r12d,r12d
    4c94:	mov    QWORD PTR [rsp+0x50],0x0
    4c9d:	jmp    4244 <__cxa_finalize@plt+0x23cc>
    4ca2:	mov    rdx,r13
    4ca5:	mov    r13,QWORD PTR [rsp+0x50]
    4caa:	jmp    42a2 <__cxa_finalize@plt+0x242a>
    4caf:	call   1aa0 <abort@plt>
    4cb4:	xchg   ax,ax
    4cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4cc0:	push   r15
    4cc2:	push   r14
    4cc4:	movsxd r15,edi
    4cc7:	push   r13
    4cc9:	push   r12
    4ccb:	mov    r14,rdx
    4cce:	push   rbp
    4ccf:	push   rbx
    4cd0:	mov    rbp,rcx
    4cd3:	sub    rsp,0x28
    4cd7:	mov    QWORD PTR [rsp+0x8],rsi
    4cdc:	call   1ab0 <__errno_location@plt>
    4ce1:	mov    r13,rax
    4ce4:	mov    eax,DWORD PTR [rax]
    4ce6:	test   r15d,r15d
    4ce9:	mov    rbx,QWORD PTR [rip+0x209390]        # 20e080 <quote_quoting_options@@Base+0x40>
    4cf0:	mov    DWORD PTR [rsp+0x18],eax
    4cf4:	js     4e61 <__cxa_finalize@plt+0x2fe9>
    4cfa:	cmp    DWORD PTR [rip+0x209377],r15d        # 20e078 <quote_quoting_options@@Base+0x38>
    4d01:	jg     4d65 <__cxa_finalize@plt+0x2eed>
    4d03:	cmp    r15d,0x7ffffffe
    4d0a:	ja     4e66 <__cxa_finalize@plt+0x2fee>
    4d10:	lea    r12d,[r15+0x1]
    4d14:	lea    rax,[rip+0x209375]        # 20e090 <quote_quoting_options@@Base+0x50>
    4d1b:	movsxd rsi,r12d
    4d1e:	shl    rsi,0x4
    4d22:	cmp    rbx,rax
    4d25:	je     4e40 <__cxa_finalize@plt+0x2fc8>
    4d2b:	mov    rdi,rbx
    4d2e:	call   5d10 <__cxa_finalize@plt+0x3e98>
    4d33:	mov    rbx,rax
    4d36:	mov    QWORD PTR [rip+0x209343],rax        # 20e080 <quote_quoting_options@@Base+0x40>
    4d3d:	movsxd rdi,DWORD PTR [rip+0x209334]        # 20e078 <quote_quoting_options@@Base+0x38>
    4d44:	mov    edx,r12d
    4d47:	xor    esi,esi
    4d49:	sub    edx,edi
    4d4b:	shl    rdi,0x4
    4d4f:	movsxd rdx,edx
    4d52:	add    rdi,rbx
    4d55:	shl    rdx,0x4
    4d59:	call   1c00 <memset@plt>
    4d5e:	mov    DWORD PTR [rip+0x209313],r12d        # 20e078 <quote_quoting_options@@Base+0x38>
    4d65:	mov    eax,DWORD PTR [rbp+0x4]
    4d68:	shl    r15,0x4
    4d6c:	sub    rsp,0x8
    4d70:	add    rbx,r15
    4d73:	lea    r15,[rbp+0x8]
    4d77:	mov    r8d,DWORD PTR [rbp+0x0]
    4d7b:	mov    r11,QWORD PTR [rbx]
    4d7e:	mov    r12,QWORD PTR [rbx+0x8]
    4d82:	mov    rcx,r14
    4d85:	or     eax,0x1
    4d88:	mov    DWORD PTR [rsp+0x24],eax
    4d8c:	push   QWORD PTR [rbp+0x30]
    4d8f:	mov    r9d,eax
    4d92:	push   QWORD PTR [rbp+0x28]
    4d95:	push   r15
    4d97:	mov    rsi,r11
    4d9a:	mov    rdx,QWORD PTR [rsp+0x28]
    4d9f:	mov    rdi,r12
    4da2:	mov    QWORD PTR [rsp+0x30],r11
    4da7:	call   3a80 <__cxa_finalize@plt+0x1c08>
    4dac:	add    rsp,0x20
    4db0:	mov    r11,QWORD PTR [rsp+0x10]
    4db5:	cmp    r11,rax
    4db8:	ja     4e21 <__cxa_finalize@plt+0x2fa9>
    4dba:	lea    rsi,[rax+0x1]
    4dbe:	lea    rax,[rip+0x20937b]        # 20e140 <program_name@@Base+0x18>
    4dc5:	cmp    r12,rax
    4dc8:	mov    QWORD PTR [rbx],rsi
    4dcb:	je     4ddf <__cxa_finalize@plt+0x2f67>
    4dcd:	mov    rdi,r12
    4dd0:	mov    QWORD PTR [rsp+0x10],rsi
    4dd5:	call   1e70 <free@plt>
    4dda:	mov    rsi,QWORD PTR [rsp+0x10]
    4ddf:	mov    rdi,rsi
    4de2:	mov    QWORD PTR [rsp+0x10],rsi
    4de7:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    4dec:	sub    rsp,0x8
    4df0:	mov    QWORD PTR [rbx+0x8],rax
    4df4:	mov    r8d,DWORD PTR [rbp+0x0]
    4df8:	push   QWORD PTR [rbp+0x30]
    4dfb:	push   QWORD PTR [rbp+0x28]
    4dfe:	mov    rcx,r14
    4e01:	push   r15
    4e03:	mov    r9d,DWORD PTR [rsp+0x3c]
    4e08:	mov    rdi,rax
    4e0b:	mov    rdx,QWORD PTR [rsp+0x28]
    4e10:	mov    rsi,QWORD PTR [rsp+0x30]
    4e15:	mov    r12,rax
    4e18:	call   3a80 <__cxa_finalize@plt+0x1c08>
    4e1d:	add    rsp,0x20
    4e21:	mov    eax,DWORD PTR [rsp+0x18]
    4e25:	mov    DWORD PTR [r13+0x0],eax
    4e29:	add    rsp,0x28
    4e2d:	mov    rax,r12
    4e30:	pop    rbx
    4e31:	pop    rbp
    4e32:	pop    r12
    4e34:	pop    r13
    4e36:	pop    r14
    4e38:	pop    r15
    4e3a:	ret    
    4e3b:	nop    DWORD PTR [rax+rax*1+0x0]
    4e40:	xor    edi,edi
    4e42:	call   5d10 <__cxa_finalize@plt+0x3e98>
    4e47:	movdqa xmm0,XMMWORD PTR [rip+0x209241]        # 20e090 <quote_quoting_options@@Base+0x50>
    4e4f:	mov    rbx,rax
    4e52:	mov    QWORD PTR [rip+0x209227],rax        # 20e080 <quote_quoting_options@@Base+0x40>
    4e59:	movups XMMWORD PTR [rax],xmm0
    4e5c:	jmp    4d3d <__cxa_finalize@plt+0x2ec5>
    4e61:	call   1aa0 <abort@plt>
    4e66:	call   5f00 <__cxa_finalize@plt+0x4088>
    4e6b:	nop    DWORD PTR [rax+rax*1+0x0]
    4e70:	push   r12
    4e72:	push   rbp
    4e73:	push   rbx
    4e74:	mov    rbx,rdi
    4e77:	call   1ab0 <__errno_location@plt>
    4e7c:	mov    r12d,DWORD PTR [rax]
    4e7f:	mov    rbp,rax
    4e82:	lea    rax,[rip+0x2093b7]        # 20e240 <program_name@@Base+0x118>
    4e89:	test   rbx,rbx
    4e8c:	mov    esi,0x38
    4e91:	cmove  rbx,rax
    4e95:	mov    rdi,rbx
    4e98:	call   5eb0 <__cxa_finalize@plt+0x4038>
    4e9d:	mov    DWORD PTR [rbp+0x0],r12d
    4ea1:	pop    rbx
    4ea2:	pop    rbp
    4ea3:	pop    r12
    4ea5:	ret    
    4ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4eb0:	lea    rax,[rip+0x209389]        # 20e240 <program_name@@Base+0x118>
    4eb7:	test   rdi,rdi
    4eba:	cmove  rdi,rax
    4ebe:	mov    eax,DWORD PTR [rdi]
    4ec0:	ret    
    4ec1:	nop    DWORD PTR [rax+rax*1+0x0]
    4ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ed0:	lea    rax,[rip+0x209369]        # 20e240 <program_name@@Base+0x118>
    4ed7:	test   rdi,rdi
    4eda:	cmove  rdi,rax
    4ede:	mov    DWORD PTR [rdi],esi
    4ee0:	ret    
    4ee1:	nop    DWORD PTR [rax+rax*1+0x0]
    4ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ef0:	lea    rax,[rip+0x209349]        # 20e240 <program_name@@Base+0x118>
    4ef7:	test   rdi,rdi
    4efa:	mov    ecx,esi
    4efc:	cmove  rdi,rax
    4f00:	mov    eax,esi
    4f02:	and    ecx,0x1f
    4f05:	shr    al,0x5
    4f08:	movzx  eax,al
    4f0b:	lea    rdi,[rdi+rax*4+0x8]
    4f10:	mov    esi,DWORD PTR [rdi]
    4f12:	mov    eax,esi
    4f14:	shr    eax,cl
    4f16:	xor    edx,eax
    4f18:	and    eax,0x1
    4f1b:	and    edx,0x1
    4f1e:	shl    edx,cl
    4f20:	xor    edx,esi
    4f22:	mov    DWORD PTR [rdi],edx
    4f24:	ret    
    4f25:	nop
    4f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4f30:	lea    rax,[rip+0x209309]        # 20e240 <program_name@@Base+0x118>
    4f37:	test   rdi,rdi
    4f3a:	cmove  rdi,rax
    4f3e:	mov    eax,DWORD PTR [rdi+0x4]
    4f41:	mov    DWORD PTR [rdi+0x4],esi
    4f44:	ret    
    4f45:	nop
    4f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4f50:	lea    rax,[rip+0x2092e9]        # 20e240 <program_name@@Base+0x118>
    4f57:	test   rdi,rdi
    4f5a:	cmove  rdi,rax
    4f5e:	test   rsi,rsi
    4f61:	mov    DWORD PTR [rdi],0xa
    4f67:	je     4f77 <__cxa_finalize@plt+0x30ff>
    4f69:	test   rdx,rdx
    4f6c:	je     4f77 <__cxa_finalize@plt+0x30ff>
    4f6e:	mov    QWORD PTR [rdi+0x28],rsi
    4f72:	mov    QWORD PTR [rdi+0x30],rdx
    4f76:	ret    
    4f77:	sub    rsp,0x8
    4f7b:	call   1aa0 <abort@plt>
    4f80:	push   r15
    4f82:	push   r14
    4f84:	lea    rax,[rip+0x2092b5]        # 20e240 <program_name@@Base+0x118>
    4f8b:	push   r13
    4f8d:	push   r12
    4f8f:	mov    r13,rdi
    4f92:	push   rbp
    4f93:	push   rbx
    4f94:	mov    rbx,r8
    4f97:	mov    r14,rsi
    4f9a:	mov    r15,rdx
    4f9d:	sub    rsp,0x18
    4fa1:	test   r8,r8
    4fa4:	cmove  rbx,rax
    4fa8:	mov    QWORD PTR [rsp+0x8],rcx
    4fad:	call   1ab0 <__errno_location@plt>
    4fb2:	mov    r12d,DWORD PTR [rax]
    4fb5:	mov    rbp,rax
    4fb8:	lea    rax,[rbx+0x8]
    4fbc:	sub    rsp,0x8
    4fc0:	mov    r9d,DWORD PTR [rbx+0x4]
    4fc4:	push   QWORD PTR [rbx+0x30]
    4fc7:	mov    r8d,DWORD PTR [rbx]
    4fca:	push   QWORD PTR [rbx+0x28]
    4fcd:	mov    rdx,r15
    4fd0:	push   rax
    4fd1:	mov    rcx,QWORD PTR [rsp+0x28]
    4fd6:	mov    rsi,r14
    4fd9:	mov    rdi,r13
    4fdc:	call   3a80 <__cxa_finalize@plt+0x1c08>
    4fe1:	mov    DWORD PTR [rbp+0x0],r12d
    4fe5:	add    rsp,0x38
    4fe9:	pop    rbx
    4fea:	pop    rbp
    4feb:	pop    r12
    4fed:	pop    r13
    4fef:	pop    r14
    4ff1:	pop    r15
    4ff3:	ret    
    4ff4:	xchg   ax,ax
    4ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5000:	push   r15
    5002:	push   r14
    5004:	lea    rax,[rip+0x209235]        # 20e240 <program_name@@Base+0x118>
    500b:	push   r13
    500d:	push   r12
    500f:	mov    r12,rdx
    5012:	push   rbp
    5013:	push   rbx
    5014:	mov    rbx,rcx
    5017:	mov    r14,rdi
    501a:	mov    r15,rsi
    501d:	sub    rsp,0x38
    5021:	test   rcx,rcx
    5024:	cmove  rbx,rax
    5028:	xor    ebp,ebp
    502a:	call   1ab0 <__errno_location@plt>
    502f:	test   r12,r12
    5032:	mov    r13,rax
    5035:	mov    eax,DWORD PTR [rax]
    5037:	sete   bpl
    503b:	or     ebp,DWORD PTR [rbx+0x4]
    503e:	lea    r10,[rbx+0x8]
    5042:	sub    rsp,0x8
    5046:	mov    r8d,DWORD PTR [rbx]
    5049:	mov    rcx,r15
    504c:	mov    DWORD PTR [rsp+0x14],eax
    5050:	push   QWORD PTR [rbx+0x30]
    5053:	mov    rdx,r14
    5056:	push   QWORD PTR [rbx+0x28]
    5059:	push   r10
    505b:	xor    esi,esi
    505d:	mov    r9d,ebp
    5060:	xor    edi,edi
    5062:	mov    QWORD PTR [rsp+0x40],r10
    5067:	call   3a80 <__cxa_finalize@plt+0x1c08>
    506c:	lea    rsi,[rax+0x1]
    5070:	mov    QWORD PTR [rsp+0x48],rax
    5075:	add    rsp,0x20
    5079:	mov    rdi,rsi
    507c:	mov    QWORD PTR [rsp+0x18],rsi
    5081:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    5086:	mov    QWORD PTR [rsp+0x10],rax
    508b:	sub    rsp,0x8
    508f:	push   QWORD PTR [rbx+0x30]
    5092:	push   QWORD PTR [rbx+0x28]
    5095:	mov    r10,QWORD PTR [rsp+0x38]
    509a:	mov    r9d,ebp
    509d:	mov    r8d,DWORD PTR [rbx]
    50a0:	mov    rcx,r15
    50a3:	mov    rdx,r14
    50a6:	mov    rdi,rax
    50a9:	push   r10
    50ab:	mov    rsi,QWORD PTR [rsp+0x38]
    50b0:	call   3a80 <__cxa_finalize@plt+0x1c08>
    50b5:	mov    eax,DWORD PTR [rsp+0x2c]
    50b9:	add    rsp,0x20
    50bd:	test   r12,r12
    50c0:	mov    DWORD PTR [r13+0x0],eax
    50c4:	je     50cf <__cxa_finalize@plt+0x3257>
    50c6:	mov    r11,QWORD PTR [rsp+0x28]
    50cb:	mov    QWORD PTR [r12],r11
    50cf:	mov    rax,QWORD PTR [rsp+0x10]
    50d4:	add    rsp,0x38
    50d8:	pop    rbx
    50d9:	pop    rbp
    50da:	pop    r12
    50dc:	pop    r13
    50de:	pop    r14
    50e0:	pop    r15
    50e2:	ret    
    50e3:	nop    DWORD PTR [rax]
    50e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    50f0:	mov    rcx,rdx
    50f3:	xor    edx,edx
    50f5:	jmp    5000 <__cxa_finalize@plt+0x3188>
    50fa:	nop    WORD PTR [rax+rax*1+0x0]
    5100:	mov    eax,DWORD PTR [rip+0x208f72]        # 20e078 <quote_quoting_options@@Base+0x38>
    5106:	push   r12
    5108:	mov    r12,QWORD PTR [rip+0x208f71]        # 20e080 <quote_quoting_options@@Base+0x40>
    510f:	push   rbp
    5110:	push   rbx
    5111:	cmp    eax,0x1
    5114:	jle    5141 <__cxa_finalize@plt+0x32c9>
    5116:	sub    eax,0x2
    5119:	lea    rbx,[r12+0x18]
    511e:	shl    rax,0x4
    5122:	lea    rbp,[r12+rax*1+0x28]
    5127:	nop    WORD PTR [rax+rax*1+0x0]
    5130:	mov    rdi,QWORD PTR [rbx]
    5133:	add    rbx,0x10
    5137:	call   1e70 <free@plt>
    513c:	cmp    rbx,rbp
    513f:	jne    5130 <__cxa_finalize@plt+0x32b8>
    5141:	mov    rdi,QWORD PTR [r12+0x8]
    5146:	lea    rbx,[rip+0x208ff3]        # 20e140 <program_name@@Base+0x18>
    514d:	cmp    rdi,rbx
    5150:	je     5169 <__cxa_finalize@plt+0x32f1>
    5152:	call   1e70 <free@plt>
    5157:	mov    QWORD PTR [rip+0x208f2e],0x100        # 20e090 <quote_quoting_options@@Base+0x50>
    5162:	mov    QWORD PTR [rip+0x208f2f],rbx        # 20e098 <quote_quoting_options@@Base+0x58>
    5169:	lea    rbx,[rip+0x208f20]        # 20e090 <quote_quoting_options@@Base+0x50>
    5170:	cmp    r12,rbx
    5173:	je     5184 <__cxa_finalize@plt+0x330c>
    5175:	mov    rdi,r12
    5178:	call   1e70 <free@plt>
    517d:	mov    QWORD PTR [rip+0x208efc],rbx        # 20e080 <quote_quoting_options@@Base+0x40>
    5184:	pop    rbx
    5185:	mov    DWORD PTR [rip+0x208ee9],0x1        # 20e078 <quote_quoting_options@@Base+0x38>
    518f:	pop    rbp
    5190:	pop    r12
    5192:	ret    
    5193:	nop    DWORD PTR [rax]
    5196:	nop    WORD PTR cs:[rax+rax*1+0x0]
    51a0:	lea    rcx,[rip+0x209099]        # 20e240 <program_name@@Base+0x118>
    51a7:	mov    rdx,0xffffffffffffffff
    51ae:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    51b3:	nop    DWORD PTR [rax]
    51b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    51c0:	lea    rcx,[rip+0x209079]        # 20e240 <program_name@@Base+0x118>
    51c7:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    51cc:	nop    DWORD PTR [rax+0x0]
    51d0:	lea    rcx,[rip+0x209069]        # 20e240 <program_name@@Base+0x118>
    51d7:	mov    rsi,rdi
    51da:	mov    rdx,0xffffffffffffffff
    51e1:	xor    edi,edi
    51e3:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    51e8:	nop    DWORD PTR [rax+rax*1+0x0]
    51f0:	lea    rcx,[rip+0x209049]        # 20e240 <program_name@@Base+0x118>
    51f7:	mov    rdx,rsi
    51fa:	mov    rsi,rdi
    51fd:	xor    edi,edi
    51ff:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    5204:	xchg   ax,ax
    5206:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5210:	sub    rsp,0x48
    5214:	mov    rax,rdx
    5217:	mov    rdx,QWORD PTR fs:0x28
    5220:	mov    QWORD PTR [rsp+0x38],rdx
    5225:	xor    edx,edx
    5227:	cmp    esi,0xa
    522a:	je     5294 <__cxa_finalize@plt+0x341c>
    522c:	mov    DWORD PTR [rsp],esi
    522f:	mov    rcx,rsp
    5232:	mov    rdx,0xffffffffffffffff
    5239:	mov    rsi,rax
    523c:	mov    QWORD PTR [rsp+0x4],0x0
    5245:	mov    QWORD PTR [rsp+0xc],0x0
    524e:	mov    QWORD PTR [rsp+0x14],0x0
    5257:	mov    QWORD PTR [rsp+0x1c],0x0
    5260:	mov    QWORD PTR [rsp+0x24],0x0
    5269:	mov    QWORD PTR [rsp+0x2c],0x0
    5272:	mov    DWORD PTR [rsp+0x34],0x0
    527a:	call   4cc0 <__cxa_finalize@plt+0x2e48>
    527f:	mov    rcx,QWORD PTR [rsp+0x38]
    5284:	xor    rcx,QWORD PTR fs:0x28
    528d:	jne    5299 <__cxa_finalize@plt+0x3421>
    528f:	add    rsp,0x48
    5293:	ret    
    5294:	call   1aa0 <abort@plt>
    5299:	call   1b90 <__stack_chk_fail@plt>
    529e:	xchg   ax,ax
    52a0:	sub    rsp,0x48
    52a4:	mov    rax,rdx
    52a7:	mov    rdx,rcx
    52aa:	mov    rcx,QWORD PTR fs:0x28
    52b3:	mov    QWORD PTR [rsp+0x38],rcx
    52b8:	xor    ecx,ecx
    52ba:	cmp    esi,0xa
    52bd:	je     5320 <__cxa_finalize@plt+0x34a8>
    52bf:	mov    DWORD PTR [rsp],esi
    52c2:	mov    rcx,rsp
    52c5:	mov    rsi,rax
    52c8:	mov    QWORD PTR [rsp+0x4],0x0
    52d1:	mov    QWORD PTR [rsp+0xc],0x0
    52da:	mov    QWORD PTR [rsp+0x14],0x0
    52e3:	mov    QWORD PTR [rsp+0x1c],0x0
    52ec:	mov    QWORD PTR [rsp+0x24],0x0
    52f5:	mov    QWORD PTR [rsp+0x2c],0x0
    52fe:	mov    DWORD PTR [rsp+0x34],0x0
    5306:	call   4cc0 <__cxa_finalize@plt+0x2e48>
    530b:	mov    rdx,QWORD PTR [rsp+0x38]
    5310:	xor    rdx,QWORD PTR fs:0x28
    5319:	jne    5325 <__cxa_finalize@plt+0x34ad>
    531b:	add    rsp,0x48
    531f:	ret    
    5320:	call   1aa0 <abort@plt>
    5325:	call   1b90 <__stack_chk_fail@plt>
    532a:	nop    WORD PTR [rax+rax*1+0x0]
    5330:	mov    rdx,rsi
    5333:	mov    esi,edi
    5335:	xor    edi,edi
    5337:	jmp    5210 <__cxa_finalize@plt+0x3398>
    533c:	nop    DWORD PTR [rax+0x0]
    5340:	mov    rcx,rdx
    5343:	mov    rdx,rsi
    5346:	mov    esi,edi
    5348:	xor    edi,edi
    534a:	jmp    52a0 <__cxa_finalize@plt+0x3428>
    534f:	nop
    5350:	sub    rsp,0x48
    5354:	mov    ecx,edx
    5356:	mov    rax,QWORD PTR fs:0x28
    535f:	mov    QWORD PTR [rsp+0x38],rax
    5364:	xor    eax,eax
    5366:	mov    rax,QWORD PTR [rip+0x208f03]        # 20e270 <program_name@@Base+0x148>
    536d:	mov    r8,rsp
    5370:	and    ecx,0x1f
    5373:	movdqa xmm0,XMMWORD PTR [rip+0x208ec5]        # 20e240 <program_name@@Base+0x118>
    537b:	mov    QWORD PTR [rsp+0x30],rax
    5380:	mov    eax,edx
    5382:	movaps XMMWORD PTR [rsp],xmm0
    5386:	shr    al,0x5
    5389:	movzx  eax,al
    538c:	lea    r9,[r8+rax*4+0x8]
    5391:	movdqa xmm0,XMMWORD PTR [rip+0x208eb7]        # 20e250 <program_name@@Base+0x128>
    5399:	movaps XMMWORD PTR [rsp+0x10],xmm0
    539e:	movdqa xmm0,XMMWORD PTR [rip+0x208eba]        # 20e260 <program_name@@Base+0x138>
    53a6:	movaps XMMWORD PTR [rsp+0x20],xmm0
    53ab:	mov    edx,DWORD PTR [r9]
    53ae:	mov    eax,edx
    53b0:	shr    eax,cl
    53b2:	not    eax
    53b4:	and    eax,0x1
    53b7:	shl    eax,cl
    53b9:	mov    rcx,r8
    53bc:	xor    eax,edx
    53be:	mov    rdx,rsi
    53c1:	mov    rsi,rdi
    53c4:	mov    DWORD PTR [r9],eax
    53c7:	xor    edi,edi
    53c9:	call   4cc0 <__cxa_finalize@plt+0x2e48>
    53ce:	mov    rsi,QWORD PTR [rsp+0x38]
    53d3:	xor    rsi,QWORD PTR fs:0x28
    53dc:	jne    53e3 <__cxa_finalize@plt+0x356b>
    53de:	add    rsp,0x48
    53e2:	ret    
    53e3:	call   1b90 <__stack_chk_fail@plt>
    53e8:	nop    DWORD PTR [rax+rax*1+0x0]
    53f0:	movsx  edx,sil
    53f4:	mov    rsi,0xffffffffffffffff
    53fb:	jmp    5350 <__cxa_finalize@plt+0x34d8>
    5400:	mov    edx,0x3a
    5405:	mov    rsi,0xffffffffffffffff
    540c:	jmp    5350 <__cxa_finalize@plt+0x34d8>
    5411:	nop    DWORD PTR [rax+rax*1+0x0]
    5416:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5420:	mov    edx,0x3a
    5425:	jmp    5350 <__cxa_finalize@plt+0x34d8>
    542a:	nop    WORD PTR [rax+rax*1+0x0]
    5430:	sub    rsp,0x48
    5434:	mov    rax,rdx
    5437:	mov    rdx,QWORD PTR fs:0x28
    5440:	mov    QWORD PTR [rsp+0x38],rdx
    5445:	xor    edx,edx
    5447:	cmp    esi,0xa
    544a:	je     54b4 <__cxa_finalize@plt+0x363c>
    544c:	mov    DWORD PTR [rsp],esi
    544f:	mov    rcx,rsp
    5452:	mov    rdx,0xffffffffffffffff
    5459:	mov    rsi,rax
    545c:	mov    QWORD PTR [rsp+0x4],0x0
    5465:	mov    QWORD PTR [rsp+0xc],0x4000000
    546e:	mov    QWORD PTR [rsp+0x14],0x0
    5477:	mov    QWORD PTR [rsp+0x1c],0x0
    5480:	mov    QWORD PTR [rsp+0x24],0x0
    5489:	mov    QWORD PTR [rsp+0x2c],0x0
    5492:	mov    DWORD PTR [rsp+0x34],0x0
    549a:	call   4cc0 <__cxa_finalize@plt+0x2e48>
    549f:	mov    rcx,QWORD PTR [rsp+0x38]
    54a4:	xor    rcx,QWORD PTR fs:0x28
    54ad:	jne    54b9 <__cxa_finalize@plt+0x3641>
    54af:	add    rsp,0x48
    54b3:	ret    
    54b4:	call   1aa0 <abort@plt>
    54b9:	call   1b90 <__stack_chk_fail@plt>
    54be:	xchg   ax,ax
    54c0:	sub    rsp,0x48
    54c4:	mov    r9,rcx
    54c7:	mov    rcx,QWORD PTR [rip+0x208da2]        # 20e270 <program_name@@Base+0x148>
    54ce:	movdqa xmm0,XMMWORD PTR [rip+0x208d6a]        # 20e240 <program_name@@Base+0x118>
    54d6:	mov    rax,QWORD PTR fs:0x28
    54df:	mov    QWORD PTR [rsp+0x38],rax
    54e4:	xor    eax,eax
    54e6:	movaps XMMWORD PTR [rsp],xmm0
    54ea:	test   rsi,rsi
    54ed:	mov    QWORD PTR [rsp+0x30],rcx
    54f2:	mov    DWORD PTR [rsp],0xa
    54f9:	movdqa xmm0,XMMWORD PTR [rip+0x208d4f]        # 20e250 <program_name@@Base+0x128>
    5501:	movaps XMMWORD PTR [rsp+0x10],xmm0
    5506:	movdqa xmm0,XMMWORD PTR [rip+0x208d52]        # 20e260 <program_name@@Base+0x138>
    550e:	movaps XMMWORD PTR [rsp+0x20],xmm0
    5513:	je     5547 <__cxa_finalize@plt+0x36cf>
    5515:	test   rdx,rdx
    5518:	je     5547 <__cxa_finalize@plt+0x36cf>
    551a:	mov    QWORD PTR [rsp+0x28],rsi
    551f:	mov    QWORD PTR [rsp+0x30],rdx
    5524:	mov    rcx,rsp
    5527:	mov    rdx,r8
    552a:	mov    rsi,r9
    552d:	call   4cc0 <__cxa_finalize@plt+0x2e48>
    5532:	mov    rdi,QWORD PTR [rsp+0x38]
    5537:	xor    rdi,QWORD PTR fs:0x28
    5540:	jne    554c <__cxa_finalize@plt+0x36d4>
    5542:	add    rsp,0x48
    5546:	ret    
    5547:	call   1aa0 <abort@plt>
    554c:	call   1b90 <__stack_chk_fail@plt>
    5551:	nop    DWORD PTR [rax+rax*1+0x0]
    5556:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5560:	mov    r8,0xffffffffffffffff
    5567:	jmp    54c0 <__cxa_finalize@plt+0x3648>
    556c:	nop    DWORD PTR [rax+0x0]
    5570:	mov    rcx,rdx
    5573:	mov    r8,0xffffffffffffffff
    557a:	mov    rdx,rsi
    557d:	mov    rsi,rdi
    5580:	xor    edi,edi
    5582:	jmp    54c0 <__cxa_finalize@plt+0x3648>
    5587:	nop    WORD PTR [rax+rax*1+0x0]
    5590:	mov    r8,rcx
    5593:	mov    rcx,rdx
    5596:	mov    rdx,rsi
    5599:	mov    rsi,rdi
    559c:	xor    edi,edi
    559e:	jmp    54c0 <__cxa_finalize@plt+0x3648>
    55a3:	nop    DWORD PTR [rax]
    55a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    55b0:	lea    rcx,[rip+0x208a89]        # 20e040 <quote_quoting_options@@Base>
    55b7:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    55bc:	nop    DWORD PTR [rax+0x0]
    55c0:	lea    rcx,[rip+0x208a79]        # 20e040 <quote_quoting_options@@Base>
    55c7:	mov    rdx,rsi
    55ca:	mov    rsi,rdi
    55cd:	xor    edi,edi
    55cf:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    55d4:	xchg   ax,ax
    55d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    55e0:	lea    rcx,[rip+0x208a59]        # 20e040 <quote_quoting_options@@Base>
    55e7:	mov    rdx,0xffffffffffffffff
    55ee:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    55f3:	nop    DWORD PTR [rax]
    55f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5600:	lea    rcx,[rip+0x208a39]        # 20e040 <quote_quoting_options@@Base>
    5607:	mov    rsi,rdi
    560a:	mov    rdx,0xffffffffffffffff
    5611:	xor    edi,edi
    5613:	jmp    4cc0 <__cxa_finalize@plt+0x2e48>
    5618:	nop    DWORD PTR [rax+rax*1+0x0]
    5620:	push   rbx
    5621:	lea    rsi,[rip+0x567e]        # aca6 <_IO_stdin_used@@Base+0xa86>
    5628:	mov    rbx,rdi
    562b:	mov    edi,0x1
    5630:	sub    rsp,0xa0
    5637:	mov    rdx,rsp
    563a:	mov    rax,QWORD PTR fs:0x28
    5643:	mov    QWORD PTR [rsp+0x98],rax
    564b:	xor    eax,eax
    564d:	call   1b70 <__lxstat@plt>
    5652:	test   eax,eax
    5654:	jne    5688 <__cxa_finalize@plt+0x3810>
    5656:	mov    rax,QWORD PTR [rsp+0x8]
    565b:	mov    QWORD PTR [rbx],rax
    565e:	mov    rax,QWORD PTR [rsp]
    5662:	mov    QWORD PTR [rbx+0x8],rax
    5666:	mov    rax,rbx
    5669:	mov    rcx,QWORD PTR [rsp+0x98]
    5671:	xor    rcx,QWORD PTR fs:0x28
    567a:	jne    568c <__cxa_finalize@plt+0x3814>
    567c:	add    rsp,0xa0
    5683:	pop    rbx
    5684:	ret    
    5685:	nop    DWORD PTR [rax]
    5688:	xor    eax,eax
    568a:	jmp    5669 <__cxa_finalize@plt+0x37f1>
    568c:	call   1b90 <__stack_chk_fail@plt>
    5691:	nop    WORD PTR cs:[rax+rax*1+0x0]
    569b:	nop    DWORD PTR [rax+rax*1+0x0]
    56a0:	push   r15
    56a2:	push   r14
    56a4:	push   r13
    56a6:	push   r12
    56a8:	mov    r12,r9
    56ab:	push   rbp
    56ac:	push   rbx
    56ad:	mov    rbp,rdi
    56b0:	mov    rbx,r8
    56b3:	sub    rsp,0x28
    56b7:	test   rsi,rsi
    56ba:	je     5750 <__cxa_finalize@plt+0x38d8>
    56c0:	mov    r8,rdx
    56c3:	lea    rdx,[rip+0x5abe]        # b188 <quoting_style_vals@@Base+0x28>
    56ca:	mov    r9,rcx
    56cd:	xor    eax,eax
    56cf:	mov    rcx,rsi
    56d2:	mov    esi,0x1
    56d7:	call   1e30 <__fprintf_chk@plt>
    56dc:	lea    rsi,[rip+0x5ab8]        # b19b <quoting_style_vals@@Base+0x3b>
    56e3:	xor    edi,edi
    56e5:	mov    edx,0x5
    56ea:	call   1b40 <dcgettext@plt>
    56ef:	lea    rdx,[rip+0x5dca]        # b4c0 <version_etc_copyright@@Base>
    56f6:	mov    rcx,rax
    56f9:	mov    r8d,0x7e1
    56ff:	mov    esi,0x1
    5704:	mov    rdi,rbp
    5707:	xor    eax,eax
    5709:	call   1e30 <__fprintf_chk@plt>
    570e:	lea    rsi,[rip+0x5b13]        # b228 <quoting_style_vals@@Base+0xc8>
    5715:	xor    edi,edi
    5717:	mov    edx,0x5
    571c:	call   1b40 <dcgettext@plt>
    5721:	mov    rsi,rbp
    5724:	mov    rdi,rax
    5727:	call   1c50 <fputs_unlocked@plt>
    572c:	cmp    r12,0x9
    5730:	ja     5a60 <__cxa_finalize@plt+0x3be8>
    5736:	lea    rdx,[rip+0x5d43]        # b480 <quoting_style_vals@@Base+0x320>
    573d:	movsxd rax,DWORD PTR [rdx+r12*4]
    5741:	add    rax,rdx
    5744:	jmp    rax
    5746:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5750:	mov    r8,rcx
    5753:	mov    rcx,rdx
    5756:	lea    rdx,[rip+0x5a37]        # b194 <quoting_style_vals@@Base+0x34>
    575d:	mov    esi,0x1
    5762:	xor    eax,eax
    5764:	call   1e30 <__fprintf_chk@plt>
    5769:	jmp    56dc <__cxa_finalize@plt+0x3864>
    576e:	xchg   ax,ax
    5770:	mov    r9,QWORD PTR [rbx+0x38]
    5774:	mov    rax,QWORD PTR [rbx+0x10]
    5778:	lea    rsi,[rip+0x5c19]        # b398 <quoting_style_vals@@Base+0x238>
    577f:	mov    r8,QWORD PTR [rbx+0x8]
    5783:	mov    edx,0x5
    5788:	xor    edi,edi
    578a:	mov    r13,QWORD PTR [rbx+0x30]
    578e:	mov    r12,QWORD PTR [rbx+0x28]
    5792:	mov    QWORD PTR [rsp+0x10],r9
    5797:	mov    r15,QWORD PTR [rbx+0x20]
    579b:	mov    r14,QWORD PTR [rbx+0x18]
    579f:	mov    QWORD PTR [rsp],rax
    57a3:	mov    QWORD PTR [rsp+0x8],r8
    57a8:	mov    rbx,QWORD PTR [rbx]
    57ab:	call   1b40 <dcgettext@plt>
    57b0:	sub    rsp,0x8
    57b4:	mov    r9,QWORD PTR [rsp+0x18]
    57b9:	mov    rcx,rbx
    57bc:	mov    rdx,rax
    57bf:	mov    rdi,rbp
    57c2:	mov    esi,0x1
    57c7:	xor    eax,eax
    57c9:	push   r9
    57cb:	push   r13
    57cd:	push   r12
    57cf:	push   r15
    57d1:	push   r14
    57d3:	mov    r9,QWORD PTR [rsp+0x30]
    57d8:	mov    r8,QWORD PTR [rsp+0x38]
    57dd:	call   1e30 <__fprintf_chk@plt>
    57e2:	add    rsp,0x30
    57e6:	add    rsp,0x28
    57ea:	pop    rbx
    57eb:	pop    rbp
    57ec:	pop    r12
    57ee:	pop    r13
    57f0:	pop    r14
    57f2:	pop    r15
    57f4:	ret    
    57f5:	nop    DWORD PTR [rax]
    57f8:	mov    r10,QWORD PTR [rbx+0x40]
    57fc:	mov    r9,QWORD PTR [rbx+0x38]
    5800:	lea    rsi,[rip+0x5bc1]        # b3c8 <quoting_style_vals@@Base+0x268>
    5807:	mov    rax,QWORD PTR [rbx+0x10]
    580b:	mov    r8,QWORD PTR [rbx+0x8]
    580f:	mov    edx,0x5
    5814:	mov    r13,QWORD PTR [rbx+0x30]
    5818:	mov    r12,QWORD PTR [rbx+0x28]
    581c:	mov    r15,QWORD PTR [rbx+0x20]
    5820:	mov    r14,QWORD PTR [rbx+0x18]
    5824:	mov    rbx,QWORD PTR [rbx]
    5827:	mov    QWORD PTR [rsp+0x18],r10
    582c:	mov    QWORD PTR [rsp+0x10],r9
    5831:	mov    QWORD PTR [rsp],rax
    5835:	mov    QWORD PTR [rsp+0x8],r8
    583a:	xor    edi,edi
    583c:	call   1b40 <dcgettext@plt>
    5841:	mov    r10,QWORD PTR [rsp+0x18]
    5846:	push   r10
    5848:	jmp    57b4 <__cxa_finalize@plt+0x393c>
    584d:	nop    DWORD PTR [rax]
    5850:	mov    rbx,QWORD PTR [rbx]
    5853:	lea    rsi,[rip+0x5945]        # b19f <quoting_style_vals@@Base+0x3f>
    585a:	mov    edx,0x5
    585f:	xor    edi,edi
    5861:	call   1b40 <dcgettext@plt>
    5866:	add    rsp,0x28
    586a:	mov    rcx,rbx
    586d:	mov    rdi,rbp
    5870:	pop    rbx
    5871:	pop    rbp
    5872:	pop    r12
    5874:	pop    r13
    5876:	pop    r14
    5878:	pop    r15
    587a:	mov    rdx,rax
    587d:	mov    esi,0x1
    5882:	xor    eax,eax
    5884:	jmp    1e30 <__fprintf_chk@plt>
    5889:	nop    DWORD PTR [rax+0x0]
    5890:	mov    r12,QWORD PTR [rbx+0x8]
    5894:	lea    rsi,[rip+0x5914]        # b1af <quoting_style_vals@@Base+0x4f>
    589b:	mov    rbx,QWORD PTR [rbx]
    589e:	mov    edx,0x5
    58a3:	xor    edi,edi
    58a5:	call   1b40 <dcgettext@plt>
    58aa:	add    rsp,0x28
    58ae:	mov    r8,r12
    58b1:	mov    rcx,rbx
    58b4:	mov    rdi,rbp
    58b7:	mov    rdx,rax
    58ba:	mov    esi,0x1
    58bf:	pop    rbx
    58c0:	pop    rbp
    58c1:	pop    r12
    58c3:	pop    r13
    58c5:	pop    r14
    58c7:	pop    r15
    58c9:	xor    eax,eax
    58cb:	jmp    1e30 <__fprintf_chk@plt>
    58d0:	mov    r13,QWORD PTR [rbx+0x10]
    58d4:	mov    r12,QWORD PTR [rbx+0x8]
    58d8:	lea    rsi,[rip+0x58e7]        # b1c6 <quoting_style_vals@@Base+0x66>
    58df:	mov    rbx,QWORD PTR [rbx]
    58e2:	mov    edx,0x5
    58e7:	xor    edi,edi
    58e9:	call   1b40 <dcgettext@plt>
    58ee:	add    rsp,0x28
    58f2:	mov    r9,r13
    58f5:	mov    r8,r12
    58f8:	mov    rcx,rbx
    58fb:	mov    rdi,rbp
    58fe:	mov    rdx,rax
    5901:	pop    rbx
    5902:	pop    rbp
    5903:	pop    r12
    5905:	pop    r13
    5907:	pop    r14
    5909:	pop    r15
    590b:	mov    esi,0x1
    5910:	xor    eax,eax
    5912:	jmp    1e30 <__fprintf_chk@plt>
    5917:	nop    WORD PTR [rax+rax*1+0x0]
    5920:	lea    rsi,[rip+0x59d1]        # b2f8 <quoting_style_vals@@Base+0x198>
    5927:	mov    edx,0x5
    592c:	xor    edi,edi
    592e:	mov    r14,QWORD PTR [rbx+0x18]
    5932:	mov    r13,QWORD PTR [rbx+0x10]
    5936:	mov    r12,QWORD PTR [rbx+0x8]
    593a:	mov    rbx,QWORD PTR [rbx]
    593d:	call   1b40 <dcgettext@plt>
    5942:	sub    rsp,0x8
    5946:	push   r14
    5948:	mov    rdx,rax
    594b:	mov    r9,r13
    594e:	mov    r8,r12
    5951:	mov    rcx,rbx
    5954:	mov    rdi,rbp
    5957:	mov    esi,0x1
    595c:	xor    eax,eax
    595e:	call   1e30 <__fprintf_chk@plt>
    5963:	pop    rax
    5964:	pop    rdx
    5965:	add    rsp,0x28
    5969:	pop    rbx
    596a:	pop    rbp
    596b:	pop    r12
    596d:	pop    r13
    596f:	pop    r14
    5971:	pop    r15
    5973:	ret    
    5974:	nop    DWORD PTR [rax+0x0]
    5978:	mov    r15,QWORD PTR [rbx+0x20]
    597c:	lea    rsi,[rip+0x5995]        # b318 <quoting_style_vals@@Base+0x1b8>
    5983:	mov    edx,0x5
    5988:	xor    edi,edi
    598a:	mov    r14,QWORD PTR [rbx+0x18]
    598e:	mov    r13,QWORD PTR [rbx+0x10]
    5992:	mov    r12,QWORD PTR [rbx+0x8]
    5996:	mov    rbx,QWORD PTR [rbx]
    5999:	call   1b40 <dcgettext@plt>
    599e:	push   r15
    59a0:	jmp    5946 <__cxa_finalize@plt+0x3ace>
    59a2:	nop    WORD PTR [rax+rax*1+0x0]
    59a8:	mov    r8,QWORD PTR [rbx+0x8]
    59ac:	mov    r12,QWORD PTR [rbx+0x28]
    59b0:	lea    rsi,[rip+0x5989]        # b340 <quoting_style_vals@@Base+0x1e0>
    59b7:	mov    r15,QWORD PTR [rbx+0x20]
    59bb:	mov    r14,QWORD PTR [rbx+0x18]
    59bf:	mov    edx,0x5
    59c4:	mov    r13,QWORD PTR [rbx+0x10]
    59c8:	xor    edi,edi
    59ca:	mov    rbx,QWORD PTR [rbx]
    59cd:	mov    QWORD PTR [rsp],r8
    59d1:	call   1b40 <dcgettext@plt>
    59d6:	sub    rsp,0x8
    59da:	mov    r9,r13
    59dd:	push   r12
    59df:	push   r15
    59e1:	push   r14
    59e3:	mov    r8,QWORD PTR [rsp+0x20]
    59e8:	mov    rcx,rbx
    59eb:	mov    rdx,rax
    59ee:	mov    rdi,rbp
    59f1:	mov    esi,0x1
    59f6:	xor    eax,eax
    59f8:	call   1e30 <__fprintf_chk@plt>
    59fd:	add    rsp,0x20
    5a01:	add    rsp,0x28
    5a05:	pop    rbx
    5a06:	pop    rbp
    5a07:	pop    r12
    5a09:	pop    r13
    5a0b:	pop    r14
    5a0d:	pop    r15
    5a0f:	ret    
    5a10:	mov    r9,QWORD PTR [rbx+0x10]
    5a14:	mov    r13,QWORD PTR [rbx+0x30]
    5a18:	lea    rsi,[rip+0x5949]        # b368 <quoting_style_vals@@Base+0x208>
    5a1f:	mov    r12,QWORD PTR [rbx+0x28]
    5a23:	mov    r15,QWORD PTR [rbx+0x20]
    5a27:	mov    edx,0x5
    5a2c:	mov    r14,QWORD PTR [rbx+0x18]
    5a30:	mov    r8,QWORD PTR [rbx+0x8]
    5a34:	xor    edi,edi
    5a36:	mov    QWORD PTR [rsp+0x8],r9
    5a3b:	mov    rbx,QWORD PTR [rbx]
    5a3e:	mov    QWORD PTR [rsp],r8
    5a42:	call   1b40 <dcgettext@plt>
    5a47:	push   r13
    5a49:	push   r12
    5a4b:	push   r15
    5a4d:	push   r14
    5a4f:	mov    r9,QWORD PTR [rsp+0x28]
    5a54:	jmp    59e3 <__cxa_finalize@plt+0x3b6b>
    5a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5a60:	mov    r10,QWORD PTR [rbx+0x40]
    5a64:	mov    r9,QWORD PTR [rbx+0x38]
    5a68:	mov    edx,0x5
    5a6d:	mov    rax,QWORD PTR [rbx+0x10]
    5a71:	mov    r8,QWORD PTR [rbx+0x8]
    5a75:	lea    rsi,[rip+0x5984]        # b400 <quoting_style_vals@@Base+0x2a0>
    5a7c:	mov    r13,QWORD PTR [rbx+0x30]
    5a80:	mov    r12,QWORD PTR [rbx+0x28]
    5a84:	mov    r15,QWORD PTR [rbx+0x20]
    5a88:	mov    r14,QWORD PTR [rbx+0x18]
    5a8c:	mov    QWORD PTR [rsp+0x18],r10
    5a91:	mov    QWORD PTR [rsp+0x10],r9
    5a96:	mov    QWORD PTR [rsp],rax
    5a9a:	mov    QWORD PTR [rsp+0x8],r8
    5a9f:	mov    rbx,QWORD PTR [rbx]
    5aa2:	jmp    583a <__cxa_finalize@plt+0x39c2>
    5aa7:	call   1aa0 <abort@plt>
    5aac:	nop    DWORD PTR [rax+0x0]
    5ab0:	xor    r9d,r9d
    5ab3:	cmp    QWORD PTR [r8],0x0
    5ab7:	je     5acb <__cxa_finalize@plt+0x3c53>
    5ab9:	nop    DWORD PTR [rax+0x0]
    5ac0:	add    r9,0x1
    5ac4:	cmp    QWORD PTR [r8+r9*8],0x0
    5ac9:	jne    5ac0 <__cxa_finalize@plt+0x3c48>
    5acb:	jmp    56a0 <__cxa_finalize@plt+0x3828>
    5ad0:	sub    rsp,0x68
    5ad4:	mov    r10,r8
    5ad7:	xor    r9d,r9d
    5ada:	mov    rax,QWORD PTR fs:0x28
    5ae3:	mov    QWORD PTR [rsp+0x58],rax
    5ae8:	xor    eax,eax
    5aea:	mov    r8,rsp
    5aed:	nop    DWORD PTR [rax]
    5af0:	mov    eax,DWORD PTR [r10]
    5af3:	cmp    eax,0x2f
    5af6:	ja     5b3a <__cxa_finalize@plt+0x3cc2>
    5af8:	mov    r11d,eax
    5afb:	add    r11,QWORD PTR [r10+0x10]
    5aff:	add    eax,0x8
    5b02:	mov    DWORD PTR [r10],eax
    5b05:	mov    rax,QWORD PTR [r11]
    5b08:	test   rax,rax
    5b0b:	mov    QWORD PTR [r8+r9*8],rax
    5b0f:	je     5b1b <__cxa_finalize@plt+0x3ca3>
    5b11:	add    r9,0x1
    5b15:	cmp    r9,0xa
    5b19:	jne    5af0 <__cxa_finalize@plt+0x3c78>
    5b1b:	call   56a0 <__cxa_finalize@plt+0x3828>
    5b20:	mov    rax,QWORD PTR [rsp+0x58]
    5b25:	xor    rax,QWORD PTR fs:0x28
    5b2e:	jne    5b35 <__cxa_finalize@plt+0x3cbd>
    5b30:	add    rsp,0x68
    5b34:	ret    
    5b35:	call   1b90 <__stack_chk_fail@plt>
    5b3a:	mov    r11,QWORD PTR [r10+0x8]
    5b3e:	lea    rax,[r11+0x8]
    5b42:	mov    QWORD PTR [r10+0x8],rax
    5b46:	jmp    5b05 <__cxa_finalize@plt+0x3c8d>
    5b48:	nop    DWORD PTR [rax+rax*1+0x0]
    5b50:	push   rbp
    5b51:	push   rbx
    5b52:	mov    r10d,0x20
    5b58:	xor    r11d,r11d
    5b5b:	sub    rsp,0xb8
    5b62:	mov    rax,QWORD PTR fs:0x28
    5b6b:	mov    QWORD PTR [rsp+0x78],rax
    5b70:	xor    eax,eax
    5b72:	lea    rax,[rsp+0xd0]
    5b7a:	mov    QWORD PTR [rsp+0xa0],r8
    5b82:	lea    rbx,[rsp+0xd0]
    5b8a:	lea    r8,[rsp+0x20]
    5b8f:	mov    QWORD PTR [rsp+0xa8],r9
    5b97:	mov    DWORD PTR [rsp+0x8],0x20
    5b9f:	mov    QWORD PTR [rsp+0x10],rax
    5ba4:	lea    rax,[rsp+0x80]
    5bac:	xor    r9d,r9d
    5baf:	mov    QWORD PTR [rsp+0x18],rax
    5bb4:	mov    rbp,rax
    5bb7:	nop    WORD PTR [rax+rax*1+0x0]
    5bc0:	cmp    r10d,0x2f
    5bc4:	ja     5c1c <__cxa_finalize@plt+0x3da4>
    5bc6:	mov    eax,r10d
    5bc9:	mov    r11d,0x1
    5bcf:	add    r10d,0x8
    5bd3:	add    rax,rbp
    5bd6:	mov    rax,QWORD PTR [rax]
    5bd9:	test   rax,rax
    5bdc:	mov    QWORD PTR [r8+r9*8],rax
    5be0:	je     5bec <__cxa_finalize@plt+0x3d74>
    5be2:	add    r9,0x1
    5be6:	cmp    r9,0xa
    5bea:	jne    5bc0 <__cxa_finalize@plt+0x3d48>
    5bec:	test   r11b,r11b
    5bef:	jne    5c15 <__cxa_finalize@plt+0x3d9d>
    5bf1:	call   56a0 <__cxa_finalize@plt+0x3828>
    5bf6:	mov    rax,QWORD PTR [rsp+0x78]
    5bfb:	xor    rax,QWORD PTR fs:0x28
    5c04:	jne    5c10 <__cxa_finalize@plt+0x3d98>
    5c06:	add    rsp,0xb8
    5c0d:	pop    rbx
    5c0e:	pop    rbp
    5c0f:	ret    
    5c10:	call   1b90 <__stack_chk_fail@plt>
    5c15:	mov    DWORD PTR [rsp+0x8],r10d
    5c1a:	jmp    5bf1 <__cxa_finalize@plt+0x3d79>
    5c1c:	mov    rax,rbx
    5c1f:	add    rbx,0x8
    5c23:	jmp    5bd6 <__cxa_finalize@plt+0x3d5e>
    5c25:	nop
    5c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5c30:	push   rbx
    5c31:	lea    rsi,[rip+0x55aa]        # b1e2 <quoting_style_vals@@Base+0x82>
    5c38:	mov    edx,0x5
    5c3d:	xor    edi,edi
    5c3f:	call   1b40 <dcgettext@plt>
    5c44:	lea    rdx,[rip+0x55ac]        # b1f7 <quoting_style_vals@@Base+0x97>
    5c4b:	mov    rsi,rax
    5c4e:	mov    edi,0x1
    5c53:	xor    eax,eax
    5c55:	call   1d90 <__printf_chk@plt>
    5c5a:	lea    rsi,[rip+0x55ac]        # b20d <quoting_style_vals@@Base+0xad>
    5c61:	mov    edx,0x5
    5c66:	xor    edi,edi
    5c68:	call   1b40 <dcgettext@plt>
    5c6d:	lea    rcx,[rip+0x4b34]        # a7a8 <_IO_stdin_used@@Base+0x588>
    5c74:	lea    rdx,[rip+0x4625]        # a2a0 <_IO_stdin_used@@Base+0x80>
    5c7b:	mov    rsi,rax
    5c7e:	mov    edi,0x1
    5c83:	xor    eax,eax
    5c85:	call   1d90 <__printf_chk@plt>
    5c8a:	mov    rbx,QWORD PTR [rip+0x208417]        # 20e0a8 <stdout@@GLIBC_2.2.5>
    5c91:	lea    rsi,[rip+0x57a8]        # b440 <quoting_style_vals@@Base+0x2e0>
    5c98:	xor    edi,edi
    5c9a:	mov    edx,0x5
    5c9f:	call   1b40 <dcgettext@plt>
    5ca4:	mov    rsi,rbx
    5ca7:	mov    rdi,rax
    5caa:	pop    rbx
    5cab:	jmp    1c50 <fputs_unlocked@plt>
    5cb0:	push   rbx
    5cb1:	mov    rbx,rdi
    5cb4:	call   1ce0 <malloc@plt>
    5cb9:	test   rax,rax
    5cbc:	jne    5cc3 <__cxa_finalize@plt+0x3e4b>
    5cbe:	test   rbx,rbx
    5cc1:	jne    5cc5 <__cxa_finalize@plt+0x3e4d>
    5cc3:	pop    rbx
    5cc4:	ret    
    5cc5:	call   5f00 <__cxa_finalize@plt+0x4088>
    5cca:	nop    WORD PTR [rax+rax*1+0x0]
    5cd0:	mov    rax,rdi
    5cd3:	mul    rsi
    5cd6:	mov    rdi,rax
    5cd9:	seto   al
    5cdc:	test   rdi,rdi
    5cdf:	js     5ceb <__cxa_finalize@plt+0x3e73>
    5ce1:	movzx  eax,al
    5ce4:	test   rax,rax
    5ce7:	jne    5ceb <__cxa_finalize@plt+0x3e73>
    5ce9:	jmp    5cb0 <__cxa_finalize@plt+0x3e38>
    5ceb:	sub    rsp,0x8
    5cef:	call   5f00 <__cxa_finalize@plt+0x4088>
    5cf4:	xchg   ax,ax
    5cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d00:	jmp    5cb0 <__cxa_finalize@plt+0x3e38>
    5d02:	nop    DWORD PTR [rax+0x0]
    5d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d10:	test   rsi,rsi
    5d13:	push   rbx
    5d14:	mov    rbx,rsi
    5d17:	jne    5d1e <__cxa_finalize@plt+0x3ea6>
    5d19:	test   rdi,rdi
    5d1c:	jne    5d38 <__cxa_finalize@plt+0x3ec0>
    5d1e:	mov    rsi,rbx
    5d21:	call   1d60 <realloc@plt>
    5d26:	test   rax,rax
    5d29:	jne    5d30 <__cxa_finalize@plt+0x3eb8>
    5d2b:	test   rbx,rbx
    5d2e:	jne    5d41 <__cxa_finalize@plt+0x3ec9>
    5d30:	pop    rbx
    5d31:	ret    
    5d32:	nop    WORD PTR [rax+rax*1+0x0]
    5d38:	call   1e70 <free@plt>
    5d3d:	xor    eax,eax
    5d3f:	pop    rbx
    5d40:	ret    
    5d41:	call   5f00 <__cxa_finalize@plt+0x4088>
    5d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d50:	mov    rax,rsi
    5d53:	mul    rdx
    5d56:	mov    rsi,rax
    5d59:	seto   al
    5d5c:	test   rsi,rsi
    5d5f:	js     5d6b <__cxa_finalize@plt+0x3ef3>
    5d61:	movzx  eax,al
    5d64:	test   rax,rax
    5d67:	jne    5d6b <__cxa_finalize@plt+0x3ef3>
    5d69:	jmp    5d10 <__cxa_finalize@plt+0x3e98>
    5d6b:	sub    rsp,0x8
    5d6f:	call   5f00 <__cxa_finalize@plt+0x4088>
    5d74:	xchg   ax,ax
    5d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d80:	test   rdi,rdi
    5d83:	mov    r9,rdx
    5d86:	mov    rcx,QWORD PTR [rsi]
    5d89:	je     5dc0 <__cxa_finalize@plt+0x3f48>
    5d8b:	xor    edx,edx
    5d8d:	movabs rax,0x5555555555555554
    5d97:	div    r9
    5d9a:	cmp    rax,rcx
    5d9d:	jbe    5ddb <__cxa_finalize@plt+0x3f63>
    5d9f:	mov    rax,rcx
    5da2:	shr    rax,1
    5da5:	lea    rcx,[rax+rcx*1+0x1]
    5daa:	mov    QWORD PTR [rsi],rcx
    5dad:	imul   rcx,r9
    5db1:	mov    rsi,rcx
    5db4:	jmp    5d10 <__cxa_finalize@plt+0x3e98>
    5db9:	nop    DWORD PTR [rax+0x0]
    5dc0:	test   rcx,rcx
    5dc3:	je     5de8 <__cxa_finalize@plt+0x3f70>
    5dc5:	mov    rax,rcx
    5dc8:	mul    r9
    5dcb:	seto   dl
    5dce:	test   rax,rax
    5dd1:	movzx  edx,dl
    5dd4:	js     5ddb <__cxa_finalize@plt+0x3f63>
    5dd6:	test   rdx,rdx
    5dd9:	je     5daa <__cxa_finalize@plt+0x3f32>
    5ddb:	sub    rsp,0x8
    5ddf:	call   5f00 <__cxa_finalize@plt+0x4088>
    5de4:	nop    DWORD PTR [rax+0x0]
    5de8:	xor    edx,edx
    5dea:	mov    eax,0x80
    5def:	xor    r8d,r8d
    5df2:	div    r9
    5df5:	test   rax,rax
    5df8:	sete   r8b
    5dfc:	lea    rcx,[r8+rax*1]
    5e00:	jmp    5dc5 <__cxa_finalize@plt+0x3f4d>
    5e02:	nop    DWORD PTR [rax+0x0]
    5e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5e10:	test   rdi,rdi
    5e13:	mov    rax,QWORD PTR [rsi]
    5e16:	je     5e40 <__cxa_finalize@plt+0x3fc8>
    5e18:	movabs rdx,0x5555555555555553
    5e22:	cmp    rax,rdx
    5e25:	ja     5e51 <__cxa_finalize@plt+0x3fd9>
    5e27:	mov    rdx,rax
    5e2a:	shr    rdx,1
    5e2d:	lea    rax,[rdx+rax*1+0x1]
    5e32:	mov    QWORD PTR [rsi],rax
    5e35:	mov    rsi,rax
    5e38:	jmp    5d10 <__cxa_finalize@plt+0x3e98>
    5e3d:	nop    DWORD PTR [rax]
    5e40:	test   rax,rax
    5e43:	mov    edx,0x80
    5e48:	cmove  rax,rdx
    5e4c:	test   rax,rax
    5e4f:	jns    5e32 <__cxa_finalize@plt+0x3fba>
    5e51:	sub    rsp,0x8
    5e55:	call   5f00 <__cxa_finalize@plt+0x4088>
    5e5a:	nop    WORD PTR [rax+rax*1+0x0]
    5e60:	push   rbx
    5e61:	mov    rbx,rdi
    5e64:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    5e69:	mov    rdx,rbx
    5e6c:	xor    esi,esi
    5e6e:	mov    rdi,rax
    5e71:	pop    rbx
    5e72:	jmp    1c00 <memset@plt>
    5e77:	nop    WORD PTR [rax+rax*1+0x0]
    5e80:	mov    rax,rdi
    5e83:	sub    rsp,0x8
    5e87:	mul    rsi
    5e8a:	seto   dl
    5e8d:	test   rax,rax
    5e90:	js     5ea9 <__cxa_finalize@plt+0x4031>
    5e92:	movzx  edx,dl
    5e95:	test   rdx,rdx
    5e98:	jne    5ea9 <__cxa_finalize@plt+0x4031>
    5e9a:	call   1c60 <calloc@plt>
    5e9f:	test   rax,rax
    5ea2:	je     5ea9 <__cxa_finalize@plt+0x4031>
    5ea4:	add    rsp,0x8
    5ea8:	ret    
    5ea9:	call   5f00 <__cxa_finalize@plt+0x4088>
    5eae:	xchg   ax,ax
    5eb0:	push   rbp
    5eb1:	push   rbx
    5eb2:	mov    rbp,rdi
    5eb5:	mov    rdi,rsi
    5eb8:	mov    rbx,rsi
    5ebb:	sub    rsp,0x8
    5ebf:	call   5cb0 <__cxa_finalize@plt+0x3e38>
    5ec4:	add    rsp,0x8
    5ec8:	mov    rdx,rbx
    5ecb:	mov    rsi,rbp
    5ece:	pop    rbx
    5ecf:	pop    rbp
    5ed0:	mov    rdi,rax
    5ed3:	jmp    1ca0 <memcpy@plt>
    5ed8:	nop    DWORD PTR [rax+rax*1+0x0]
    5ee0:	push   rbx
    5ee1:	mov    rbx,rdi
    5ee4:	call   1b60 <strlen@plt>
    5ee9:	mov    rdi,rbx
    5eec:	lea    rsi,[rax+0x1]
    5ef0:	pop    rbx
    5ef1:	jmp    5eb0 <__cxa_finalize@plt+0x4038>
    5ef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5efd:	nop    DWORD PTR [rax]
    5f00:	lea    rsi,[rip+0x55e8]        # b4ef <version_etc_copyright@@Base+0x2f>
    5f07:	sub    rsp,0x8
    5f0b:	mov    edx,0x5
    5f10:	xor    edi,edi
    5f12:	call   1b40 <dcgettext@plt>
    5f17:	mov    edi,DWORD PTR [rip+0x208103]        # 20e020 <exit_failure@@Base>
    5f1d:	lea    rdx,[rip+0x43f4]        # a318 <_IO_stdin_used@@Base+0xf8>
    5f24:	mov    rcx,rax
    5f27:	xor    esi,esi
    5f29:	xor    eax,eax
    5f2b:	call   1db0 <error@plt>
    5f30:	call   1aa0 <abort@plt>
    5f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5f3f:	nop
    5f40:	sub    rsp,0x8
    5f44:	or     esi,0x200
    5f4a:	call   7590 <fts_open@@Base>
    5f4f:	test   rax,rax
    5f52:	je     5f60 <__cxa_finalize@plt+0x40e8>
    5f54:	add    rsp,0x8
    5f58:	ret    
    5f59:	nop    DWORD PTR [rax+0x0]
    5f60:	call   1ab0 <__errno_location@plt>
    5f65:	cmp    DWORD PTR [rax],0x16
    5f68:	je     5f70 <__cxa_finalize@plt+0x40f8>
    5f6a:	call   5f00 <__cxa_finalize@plt+0x4088>
    5f6f:	nop
    5f70:	lea    rcx,[rip+0x55a9]        # b520 <version_etc_copyright@@Base+0x60>
    5f77:	lea    rsi,[rip+0x5582]        # b500 <version_etc_copyright@@Base+0x40>
    5f7e:	lea    rdi,[rip+0x5586]        # b50b <version_etc_copyright@@Base+0x4b>
    5f85:	mov    edx,0x29
    5f8a:	call   1bf0 <__assert_fail@plt>
    5f8f:	nop
    5f90:	mov    edx,DWORD PTR [rdi+0x48]
    5f93:	mov    eax,0x1
    5f98:	and    edx,0x11
    5f9b:	cmp    edx,0x10
    5f9e:	je     5fa7 <__cxa_finalize@plt+0x412f>
    5fa0:	xor    eax,eax
    5fa2:	cmp    edx,0x11
    5fa5:	je     5fb0 <__cxa_finalize@plt+0x4138>
    5fa7:	repz ret 
    5fa9:	nop    DWORD PTR [rax+0x0]
    5fb0:	cmp    QWORD PTR [rsi+0x58],0x0
    5fb5:	setne  al
    5fb8:	ret    
    5fb9:	nop    DWORD PTR [rax+0x0]
    5fc0:	xor    eax,eax
    5fc2:	mov    rdx,QWORD PTR [rsi+0x8]
    5fc6:	cmp    QWORD PTR [rdi+0x8],rdx
    5fca:	je     5fd0 <__cxa_finalize@plt+0x4158>
    5fcc:	repz ret 
    5fce:	xchg   ax,ax
    5fd0:	mov    rax,QWORD PTR [rsi]
    5fd3:	cmp    QWORD PTR [rdi],rax
    5fd6:	sete   al
    5fd9:	ret    
    5fda:	nop    WORD PTR [rax+rax*1+0x0]
    5fe0:	mov    rax,QWORD PTR [rdi+0x8]
    5fe4:	xor    edx,edx
    5fe6:	div    rsi
    5fe9:	mov    rax,rdx
    5fec:	ret    
    5fed:	nop    DWORD PTR [rax]
    5ff0:	mov    rax,QWORD PTR [rdi]
    5ff3:	xor    edx,edx
    5ff5:	div    rsi
    5ff8:	mov    rax,rdx
    5ffb:	ret    
    5ffc:	nop    DWORD PTR [rax+0x0]
    6000:	mov    rax,QWORD PTR [rsi]
    6003:	cmp    QWORD PTR [rdi],rax
    6006:	sete   al
    6009:	ret    
    600a:	nop    WORD PTR [rax+rax*1+0x0]
    6010:	mov    rdx,QWORD PTR [rdi]
    6013:	mov    rax,QWORD PTR [rsi]
    6016:	mov    rax,QWORD PTR [rax+0x80]
    601d:	cmp    QWORD PTR [rdx+0x80],rax
    6024:	jb     6030 <__cxa_finalize@plt+0x41b8>
    6026:	seta   al
    6029:	movzx  eax,al
    602c:	ret    
    602d:	nop    DWORD PTR [rax]
    6030:	mov    eax,0xffffffff
    6035:	ret    
    6036:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6040:	push   r12
    6042:	push   rbp
    6043:	mov    rbp,rsi
    6046:	push   rbx
    6047:	cmp    QWORD PTR [rbp+0x58],0x0
    604c:	lea    rbx,[rsi+0x78]
    6050:	mov    r12,rdi
    6053:	mov    eax,DWORD PTR [rdi+0x48]
    6056:	mov    rsi,QWORD PTR [rsi+0x30]
    605a:	jne    60c0 <__cxa_finalize@plt+0x4248>
    605c:	test   al,0x1
    605e:	je     60c0 <__cxa_finalize@plt+0x4248>
    6060:	mov    rdx,rbx
    6063:	mov    edi,0x1
    6068:	call   1cc0 <__xstat@plt>
    606d:	test   eax,eax
    606f:	je     60eb <__cxa_finalize@plt+0x4273>
    6071:	call   1ab0 <__errno_location@plt>
    6076:	mov    r12,rax
    6079:	mov    eax,DWORD PTR [rax]
    607b:	cmp    eax,0x2
    607e:	je     6190 <__cxa_finalize@plt+0x4318>
    6084:	lea    rdi,[rbx+0x8]
    6088:	mov    DWORD PTR [rbp+0x40],eax
    608b:	mov    QWORD PTR [rbp+0x78],0x0
    6093:	mov    QWORD PTR [rbx+0x88],0x0
    609e:	xor    eax,eax
    60a0:	and    rdi,0xfffffffffffffff8
    60a4:	sub    rbx,rdi
    60a7:	lea    ecx,[rbx+0x90]
    60ad:	shr    ecx,0x3
    60b0:	rep stos QWORD PTR es:[rdi],rax
    60b3:	mov    eax,0xa
    60b8:	pop    rbx
    60b9:	pop    rbp
    60ba:	pop    r12
    60bc:	ret    
    60bd:	nop    DWORD PTR [rax]
    60c0:	test   al,0x2
    60c2:	jne    6060 <__cxa_finalize@plt+0x41e8>
    60c4:	test   dl,dl
    60c6:	jne    6060 <__cxa_finalize@plt+0x41e8>
    60c8:	mov    rdx,rsi
    60cb:	mov    esi,DWORD PTR [r12+0x2c]
    60d0:	mov    r8d,0x100
    60d6:	mov    rcx,rbx
    60d9:	mov    edi,0x1
    60de:	call   1bc0 <__fxstatat@plt>
    60e3:	test   eax,eax
    60e5:	jne    6180 <__cxa_finalize@plt+0x4308>
    60eb:	mov    eax,DWORD PTR [rbp+0x90]
    60f1:	and    eax,0xf000
    60f6:	cmp    eax,0x4000
    60fb:	je     6120 <__cxa_finalize@plt+0x42a8>
    60fd:	cmp    eax,0xa000
    6102:	je     61d8 <__cxa_finalize@plt+0x4360>
    6108:	cmp    eax,0x8000
    610d:	sete   al
    6110:	movzx  eax,al
    6113:	pop    rbx
    6114:	lea    eax,[rax+rax*4+0x3]
    6118:	pop    rbp
    6119:	pop    r12
    611b:	ret    
    611c:	nop    DWORD PTR [rax+0x0]
    6120:	mov    rax,QWORD PTR [rbp+0x88]
    6127:	cmp    rax,0x1
    612b:	jbe    61b0 <__cxa_finalize@plt+0x4338>
    6131:	cmp    QWORD PTR [rbp+0x58],0x0
    6136:	jle    61b0 <__cxa_finalize@plt+0x4338>
    6138:	test   BYTE PTR [r12+0x48],0x20
    613e:	lea    rdx,[rax-0x2]
    6142:	cmove  rax,rdx
    6146:	cmp    BYTE PTR [rbp+0x108],0x2e
    614d:	mov    QWORD PTR [rbp+0x68],rax
    6151:	mov    eax,0x1
    6156:	jne    60b8 <__cxa_finalize@plt+0x4240>
    615c:	cmp    BYTE PTR [rbp+0x109],0x0
    6163:	jne    61e8 <__cxa_finalize@plt+0x4370>
    6169:	cmp    QWORD PTR [rbp+0x58],0x1
    616e:	sbb    eax,eax
    6170:	and    eax,0xfffffffc
    6173:	add    eax,0x5
    6176:	jmp    60b8 <__cxa_finalize@plt+0x4240>
    617b:	nop    DWORD PTR [rax+rax*1+0x0]
    6180:	call   1ab0 <__errno_location@plt>
    6185:	mov    eax,DWORD PTR [rax]
    6187:	jmp    6084 <__cxa_finalize@plt+0x420c>
    618c:	nop    DWORD PTR [rax+0x0]
    6190:	mov    rsi,QWORD PTR [rbp+0x30]
    6194:	mov    rdx,rbx
    6197:	mov    edi,0x1
    619c:	call   1b70 <__lxstat@plt>
    61a1:	test   eax,eax
    61a3:	je     61c0 <__cxa_finalize@plt+0x4348>
    61a5:	mov    eax,DWORD PTR [r12]
    61a9:	jmp    6084 <__cxa_finalize@plt+0x420c>
    61ae:	xchg   ax,ax
    61b0:	mov    rax,0xffffffffffffffff
    61b7:	jmp    6146 <__cxa_finalize@plt+0x42ce>
    61b9:	nop    DWORD PTR [rax+0x0]
    61c0:	mov    DWORD PTR [r12],0x0
    61c8:	mov    eax,0xd
    61cd:	jmp    60b8 <__cxa_finalize@plt+0x4240>
    61d2:	nop    WORD PTR [rax+rax*1+0x0]
    61d8:	mov    eax,0xc
    61dd:	jmp    60b8 <__cxa_finalize@plt+0x4240>
    61e2:	nop    WORD PTR [rax+rax*1+0x0]
    61e8:	mov    edx,DWORD PTR [rbp+0x108]
    61ee:	and    edx,0xffff00
    61f4:	cmp    edx,0x2e00
    61fa:	jne    60b8 <__cxa_finalize@plt+0x4240>
    6200:	jmp    6169 <__cxa_finalize@plt+0x42f1>
    6205:	nop
    6206:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6210:	push   r13
    6212:	push   r12
    6214:	mov    r12,rdx
    6217:	push   rbp
    6218:	push   rbx
    6219:	mov    rbp,rdi
    621c:	mov    rbx,rsi
    621f:	sub    rsp,0x8
    6223:	cmp    QWORD PTR [rbp+0x38],rdx
    6227:	mov    r13,QWORD PTR [rdi+0x40]
    622b:	mov    rdi,QWORD PTR [rdi+0x10]
    622f:	jae    6265 <__cxa_finalize@plt+0x43ed>
    6231:	lea    rsi,[rdx+0x28]
    6235:	movabs rax,0x1fffffffffffffff
    623f:	cmp    rsi,rax
    6242:	mov    QWORD PTR [rbp+0x38],rsi
    6246:	ja     62e4 <__cxa_finalize@plt+0x446c>
    624c:	shl    rsi,0x3
    6250:	call   1d60 <realloc@plt>
    6255:	test   rax,rax
    6258:	mov    rdi,rax
    625b:	je     62e0 <__cxa_finalize@plt+0x4468>
    6261:	mov    QWORD PTR [rbp+0x10],rax
    6265:	test   rbx,rbx
    6268:	je     6281 <__cxa_finalize@plt+0x4409>
    626a:	mov    rdx,rdi
    626d:	nop    DWORD PTR [rax]
    6270:	add    rdx,0x8
    6274:	mov    QWORD PTR [rdx-0x8],rbx
    6278:	mov    rbx,QWORD PTR [rbx+0x10]
    627c:	test   rbx,rbx
    627f:	jne    6270 <__cxa_finalize@plt+0x43f8>
    6281:	mov    rcx,r13
    6284:	mov    edx,0x8
    6289:	mov    rsi,r12
    628c:	call   1af0 <qsort@plt>
    6291:	mov    r8,QWORD PTR [rbp+0x10]
    6295:	mov    rcx,r12
    6298:	sub    rcx,0x1
    629c:	mov    rax,QWORD PTR [r8]
    629f:	je     6310 <__cxa_finalize@plt+0x4498>
    62a1:	mov    rdi,rax
    62a4:	mov    rdx,r8
    62a7:	jmp    62b3 <__cxa_finalize@plt+0x443b>
    62a9:	nop    DWORD PTR [rax+0x0]
    62b0:	mov    rdi,QWORD PTR [rdx]
    62b3:	mov    rsi,QWORD PTR [rdx+0x8]
    62b7:	add    rdx,0x8
    62bb:	sub    rcx,0x1
    62bf:	mov    QWORD PTR [rdi+0x10],rsi
    62c3:	jne    62b0 <__cxa_finalize@plt+0x4438>
    62c5:	mov    rdx,QWORD PTR [r8+r12*8-0x8]
    62ca:	mov    QWORD PTR [rdx+0x10],0x0
    62d2:	add    rsp,0x8
    62d6:	pop    rbx
    62d7:	pop    rbp
    62d8:	pop    r12
    62da:	pop    r13
    62dc:	ret    
    62dd:	nop    DWORD PTR [rax]
    62e0:	mov    rdi,QWORD PTR [rbp+0x10]
    62e4:	call   1e70 <free@plt>
    62e9:	mov    QWORD PTR [rbp+0x10],0x0
    62f1:	mov    QWORD PTR [rbp+0x38],0x0
    62f9:	add    rsp,0x8
    62fd:	mov    rax,rbx
    6300:	pop    rbx
    6301:	pop    rbp
    6302:	pop    r12
    6304:	pop    r13
    6306:	ret    
    6307:	nop    WORD PTR [rax+rax*1+0x0]
    6310:	mov    rdx,rax
    6313:	jmp    62ca <__cxa_finalize@plt+0x4452>
    6315:	nop
    6316:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6320:	push   r13
    6322:	push   r12
    6324:	mov    r12,rdi
    6327:	push   rbp
    6328:	lea    rdi,[rdx+0x110]
    632f:	push   rbx
    6330:	mov    r13,rsi
    6333:	mov    rbp,rdx
    6336:	sub    rsp,0x8
    633a:	and    rdi,0xfffffffffffffff8
    633e:	call   1ce0 <malloc@plt>
    6343:	test   rax,rax
    6346:	mov    rbx,rax
    6349:	je     639c <__cxa_finalize@plt+0x4524>
    634b:	lea    rdi,[rax+0x108]
    6352:	mov    rdx,rbp
    6355:	mov    rsi,r13
    6358:	call   1ca0 <memcpy@plt>
    635d:	mov    rax,QWORD PTR [r12+0x20]
    6362:	mov    BYTE PTR [rbx+rbp*1+0x108],0x0
    636a:	mov    QWORD PTR [rbx+0x60],rbp
    636e:	mov    QWORD PTR [rbx+0x50],r12
    6372:	mov    DWORD PTR [rbx+0x40],0x0
    6379:	mov    QWORD PTR [rbx+0x18],0x0
    6381:	mov    QWORD PTR [rbx+0x38],rax
    6385:	mov    DWORD PTR [rbx+0x72],0x30000
    638c:	mov    QWORD PTR [rbx+0x20],0x0
    6394:	mov    QWORD PTR [rbx+0x28],0x0
    639c:	add    rsp,0x8
    63a0:	mov    rax,rbx
    63a3:	pop    rbx
    63a4:	pop    rbp
    63a5:	pop    r12
    63a7:	pop    r13
    63a9:	ret    
    63aa:	nop    WORD PTR [rax+rax*1+0x0]
    63b0:	test   rdi,rdi
    63b3:	je     63f0 <__cxa_finalize@plt+0x4578>
    63b5:	push   rbp
    63b6:	push   rbx
    63b7:	mov    rbx,rdi
    63ba:	sub    rsp,0x8
    63be:	xchg   ax,ax
    63c0:	mov    rdi,QWORD PTR [rbx+0x18]
    63c4:	mov    rbp,QWORD PTR [rbx+0x10]
    63c8:	test   rdi,rdi
    63cb:	je     63d2 <__cxa_finalize@plt+0x455a>
    63cd:	call   1c30 <closedir@plt>
    63d2:	mov    rdi,rbx
    63d5:	mov    rbx,rbp
    63d8:	call   1e70 <free@plt>
    63dd:	test   rbp,rbp
    63e0:	jne    63c0 <__cxa_finalize@plt+0x4548>
    63e2:	add    rsp,0x8
    63e6:	pop    rbx
    63e7:	pop    rbp
    63e8:	ret    
    63e9:	nop    DWORD PTR [rax+0x0]
    63f0:	repz ret 
    63f2:	nop    DWORD PTR [rax+0x0]
    63f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6400:	push   rbx
    6401:	mov    rbx,rdi
    6404:	jmp    641c <__cxa_finalize@plt+0x45a4>
    6406:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6410:	mov    rdi,rbx
    6413:	call   9990 <fts_children@@Base+0x1720>
    6418:	test   eax,eax
    641a:	jns    6430 <__cxa_finalize@plt+0x45b8>
    641c:	mov    rdi,rbx
    641f:	call   9940 <fts_children@@Base+0x16d0>
    6424:	test   al,al
    6426:	je     6410 <__cxa_finalize@plt+0x4598>
    6428:	pop    rbx
    6429:	ret    
    642a:	nop    WORD PTR [rax+rax*1+0x0]
    6430:	mov    edi,eax
    6432:	call   1c20 <close@plt>
    6437:	jmp    641c <__cxa_finalize@plt+0x45a4>
    6439:	nop    DWORD PTR [rax+0x0]
    6440:	push   r12
    6442:	push   rbp
    6443:	push   rbx
    6444:	sub    rsp,0x90
    644b:	mov    rbp,QWORD PTR [rdi+0x50]
    644f:	mov    rax,QWORD PTR fs:0x28
    6458:	mov    QWORD PTR [rsp+0x88],rax
    6460:	xor    eax,eax
    6462:	test   BYTE PTR [rbp+0x49],0x2
    6466:	je     64a0 <__cxa_finalize@plt+0x4628>
    6468:	mov    r12,QWORD PTR [rbp+0x50]
    646c:	mov    rbx,rdi
    646f:	test   r12,r12
    6472:	je     64c8 <__cxa_finalize@plt+0x4650>
    6474:	mov    rax,QWORD PTR [rbx+0x78]
    6478:	mov    rsi,rsp
    647b:	mov    rdi,r12
    647e:	mov    QWORD PTR [rsp],rax
    6482:	call   8c40 <fts_children@@Base+0x9d0>
    6487:	test   rax,rax
    648a:	je     6518 <__cxa_finalize@plt+0x46a0>
    6490:	mov    rax,QWORD PTR [rax+0x8]
    6494:	jmp    64a2 <__cxa_finalize@plt+0x462a>
    6496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    64a0:	xor    eax,eax
    64a2:	mov    rcx,QWORD PTR [rsp+0x88]
    64aa:	xor    rcx,QWORD PTR fs:0x28
    64b3:	jne    658a <__cxa_finalize@plt+0x4712>
    64b9:	add    rsp,0x90
    64c0:	pop    rbx
    64c1:	pop    rbp
    64c2:	pop    r12
    64c4:	ret    
    64c5:	nop    DWORD PTR [rax]
    64c8:	mov    r8,QWORD PTR [rip+0x207ae9]        # 20dfb8 <free@GLIBC_2.2.5>
    64cf:	lea    rcx,[rip+0xfffffffffffffb2a]        # 6000 <__cxa_finalize@plt+0x4188>
    64d6:	lea    rdx,[rip+0xfffffffffffffb13]        # 5ff0 <__cxa_finalize@plt+0x4178>
    64dd:	xor    esi,esi
    64df:	mov    edi,0xd
    64e4:	call   8eb0 <fts_children@@Base+0xc40>
    64e9:	test   rax,rax
    64ec:	mov    r12,rax
    64ef:	mov    QWORD PTR [rbp+0x50],rax
    64f3:	jne    6474 <__cxa_finalize@plt+0x45fc>
    64f9:	mov    rax,QWORD PTR [rbx+0x50]
    64fd:	lea    rsi,[rsp+0x10]
    6502:	mov    edi,DWORD PTR [rax+0x2c]
    6505:	call   1df0 <fstatfs@plt>
    650a:	test   eax,eax
    650c:	jne    64a0 <__cxa_finalize@plt+0x4628>
    650e:	mov    rax,QWORD PTR [rsp+0x10]
    6513:	jmp    64a2 <__cxa_finalize@plt+0x462a>
    6515:	nop    DWORD PTR [rax]
    6518:	mov    rax,QWORD PTR [rbx+0x50]
    651c:	lea    rsi,[rsp+0x10]
    6521:	mov    edi,DWORD PTR [rax+0x2c]
    6524:	call   1df0 <fstatfs@plt>
    6529:	test   eax,eax
    652b:	jne    64a0 <__cxa_finalize@plt+0x4628>
    6531:	mov    edi,0x10
    6536:	call   1ce0 <malloc@plt>
    653b:	mov    rbp,rax
    653e:	mov    rax,QWORD PTR [rsp+0x10]
    6543:	test   rbp,rbp
    6546:	je     64a2 <__cxa_finalize@plt+0x462a>
    654c:	mov    rdx,QWORD PTR [rbx+0x78]
    6550:	mov    QWORD PTR [rbp+0x8],rax
    6554:	mov    rsi,rbp
    6557:	mov    rdi,r12
    655a:	mov    QWORD PTR [rbp+0x0],rdx
    655e:	call   96b0 <fts_children@@Base+0x1440>
    6563:	test   rax,rax
    6566:	je     6578 <__cxa_finalize@plt+0x4700>
    6568:	cmp    rbp,rax
    656b:	je     650e <__cxa_finalize@plt+0x4696>
    656d:	call   1aa0 <abort@plt>
    6572:	nop    WORD PTR [rax+rax*1+0x0]
    6578:	mov    rdi,rbp
    657b:	call   1e70 <free@plt>
    6580:	mov    rax,QWORD PTR [rsp+0x10]
    6585:	jmp    64a2 <__cxa_finalize@plt+0x462a>
    658a:	call   1b90 <__stack_chk_fail@plt>
    658f:	nop
    6590:	sub    rsp,0x8
    6594:	call   6440 <__cxa_finalize@plt+0x45c8>
    6599:	cmp    rax,0x9fa0
    659f:	je     65d5 <__cxa_finalize@plt+0x475d>
    65a1:	jle    65c8 <__cxa_finalize@plt+0x4750>
    65a3:	cmp    rax,0x5346414f
    65a9:	je     65d5 <__cxa_finalize@plt+0x475d>
    65ab:	cmp    rax,0x58465342
    65b1:	je     65e0 <__cxa_finalize@plt+0x4768>
    65b3:	cmp    rax,0x52654973
    65b9:	je     65e0 <__cxa_finalize@plt+0x4768>
    65bb:	mov    eax,0x1
    65c0:	add    rsp,0x8
    65c4:	ret    
    65c5:	nop    DWORD PTR [rax]
    65c8:	test   rax,rax
    65cb:	je     65d5 <__cxa_finalize@plt+0x475d>
    65cd:	cmp    rax,0x6969
    65d3:	jne    65bb <__cxa_finalize@plt+0x4743>
    65d5:	xor    eax,eax
    65d7:	add    rsp,0x8
    65db:	ret    
    65dc:	nop    DWORD PTR [rax+0x0]
    65e0:	mov    eax,0x2
    65e5:	add    rsp,0x8
    65e9:	ret    
    65ea:	nop    WORD PTR [rax+rax*1+0x0]
    65f0:	push   rbp
    65f1:	push   rbx
    65f2:	mov    ebp,esi
    65f4:	mov    rbx,rdi
    65f7:	sub    rsp,0x8
    65fb:	mov    esi,DWORD PTR [rdi+0x2c]
    65fe:	cmp    esi,ebp
    6600:	jne    6607 <__cxa_finalize@plt+0x478f>
    6602:	cmp    esi,0xffffff9c
    6605:	jne    6651 <__cxa_finalize@plt+0x47d9>
    6607:	test   dl,dl
    6609:	jne    6620 <__cxa_finalize@plt+0x47a8>
    660b:	test   BYTE PTR [rbx+0x48],0x4
    660f:	jne    6615 <__cxa_finalize@plt+0x479d>
    6611:	test   esi,esi
    6613:	jns    6640 <__cxa_finalize@plt+0x47c8>
    6615:	mov    DWORD PTR [rbx+0x2c],ebp
    6618:	add    rsp,0x8
    661c:	pop    rbx
    661d:	pop    rbp
    661e:	ret    
    661f:	nop
    6620:	lea    rdi,[rbx+0x60]
    6624:	call   9950 <fts_children@@Base+0x16e0>
    6629:	test   eax,eax
    662b:	js     6615 <__cxa_finalize@plt+0x479d>
    662d:	mov    edi,eax
    662f:	call   1c20 <close@plt>
    6634:	mov    DWORD PTR [rbx+0x2c],ebp
    6637:	add    rsp,0x8
    663b:	pop    rbx
    663c:	pop    rbp
    663d:	ret    
    663e:	xchg   ax,ax
    6640:	mov    edi,esi
    6642:	call   1c20 <close@plt>
    6647:	mov    DWORD PTR [rbx+0x2c],ebp
    664a:	add    rsp,0x8
    664e:	pop    rbx
    664f:	pop    rbp
    6650:	ret    
    6651:	call   1aa0 <abort@plt>
    6656:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6660:	push   rbp
    6661:	push   rbx
    6662:	mov    rbx,rdi
    6665:	sub    rsp,0x8
    6669:	mov    edx,DWORD PTR [rdi+0x48]
    666c:	mov    ebp,edx
    666e:	and    ebp,0x4
    6671:	jne    66b8 <__cxa_finalize@plt+0x4840>
    6673:	and    dh,0x2
    6676:	jne    66a0 <__cxa_finalize@plt+0x4828>
    6678:	mov    edi,DWORD PTR [rdi+0x28]
    667b:	xor    ebp,ebp
    667d:	call   1d50 <fchdir@plt>
    6682:	test   eax,eax
    6684:	setne  bpl
    6688:	lea    rdi,[rbx+0x60]
    668c:	call   6400 <__cxa_finalize@plt+0x4588>
    6691:	add    rsp,0x8
    6695:	mov    eax,ebp
    6697:	pop    rbx
    6698:	pop    rbp
    6699:	ret    
    669a:	nop    WORD PTR [rax+rax*1+0x0]
    66a0:	mov    edx,0x1
    66a5:	mov    esi,0xffffff9c
    66aa:	call   65f0 <__cxa_finalize@plt+0x4778>
    66af:	jmp    6688 <__cxa_finalize@plt+0x4810>
    66b1:	nop    DWORD PTR [rax+0x0]
    66b8:	xor    ebp,ebp
    66ba:	jmp    6688 <__cxa_finalize@plt+0x4810>
    66bc:	nop    DWORD PTR [rax+0x0]
    66c0:	push   rbx
    66c1:	mov    rcx,QWORD PTR [rsi]
    66c4:	mov    rbx,rdi
    66c7:	mov    rdi,QWORD PTR [rdi]
    66ca:	lea    rax,[rcx+rdx*1+0x100]
    66d2:	cmp    rcx,rax
    66d5:	ja     66f8 <__cxa_finalize@plt+0x4880>
    66d7:	mov    QWORD PTR [rsi],rax
    66da:	mov    rsi,rax
    66dd:	call   1d60 <realloc@plt>
    66e2:	test   rax,rax
    66e5:	je     6718 <__cxa_finalize@plt+0x48a0>
    66e7:	mov    QWORD PTR [rbx],rax
    66ea:	mov    eax,0x1
    66ef:	pop    rbx
    66f0:	ret    
    66f1:	nop    DWORD PTR [rax+0x0]
    66f8:	call   1e70 <free@plt>
    66fd:	mov    QWORD PTR [rbx],0x0
    6704:	call   1ab0 <__errno_location@plt>
    6709:	mov    DWORD PTR [rax],0x24
    670f:	xor    eax,eax
    6711:	pop    rbx
    6712:	ret    
    6713:	nop    DWORD PTR [rax+rax*1+0x0]
    6718:	mov    rdi,QWORD PTR [rbx]
    671b:	call   1e70 <free@plt>
    6720:	mov    QWORD PTR [rbx],0x0
    6727:	xor    eax,eax
    6729:	pop    rbx
    672a:	ret    
    672b:	nop    DWORD PTR [rax+rax*1+0x0]
    6730:	and    edi,0x102
    6736:	push   rbx
    6737:	mov    rbx,rsi
    673a:	je     6770 <__cxa_finalize@plt+0x48f8>
    673c:	mov    r8,QWORD PTR [rip+0x207875]        # 20dfb8 <free@GLIBC_2.2.5>
    6743:	lea    rcx,[rip+0xfffffffffffff876]        # 5fc0 <__cxa_finalize@plt+0x4148>
    674a:	lea    rdx,[rip+0xfffffffffffff88f]        # 5fe0 <__cxa_finalize@plt+0x4168>
    6751:	xor    esi,esi
    6753:	mov    edi,0x1f
    6758:	call   8eb0 <fts_children@@Base+0xc40>
    675d:	test   rax,rax
    6760:	mov    QWORD PTR [rbx],rax
    6763:	setne  al
    6766:	pop    rbx
    6767:	ret    
    6768:	nop    DWORD PTR [rax+rax*1+0x0]
    6770:	mov    edi,0x20
    6775:	call   1ce0 <malloc@plt>
    677a:	mov    rdi,rax
    677d:	mov    QWORD PTR [rbx],rax
    6780:	xor    eax,eax
    6782:	test   rdi,rdi
    6785:	je     6766 <__cxa_finalize@plt+0x48ee>
    6787:	call   84d0 <fts_children@@Base+0x260>
    678c:	mov    eax,0x1
    6791:	pop    rbx
    6792:	ret    
    6793:	nop    DWORD PTR [rax]
    6796:	nop    WORD PTR cs:[rax+rax*1+0x0]
    67a0:	mov    eax,esi
    67a2:	mov    rcx,rdx
    67a5:	mov    edx,esi
    67a7:	shl    edx,0xd
    67aa:	shl    eax,0x7
    67ad:	and    edx,0x20000
    67b3:	and    eax,0x40000
    67b8:	or     edx,eax
    67ba:	or     edx,0x90900
    67c0:	and    esi,0x200
    67c6:	jne    67d8 <__cxa_finalize@plt+0x4960>
    67c8:	mov    esi,edx
    67ca:	mov    rdi,rcx
    67cd:	xor    eax,eax
    67cf:	jmp    8570 <fts_children@@Base+0x300>
    67d4:	nop    DWORD PTR [rax+0x0]
    67d8:	mov    rsi,rcx
    67db:	xor    eax,eax
    67dd:	jmp    9e20 <fts_children@@Base+0x1bb0>
    67e2:	nop    DWORD PTR [rax+0x0]
    67e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    67f0:	push   r15
    67f2:	push   r14
    67f4:	mov    r14,rsi
    67f7:	push   r13
    67f9:	push   r12
    67fb:	mov    r12d,edx
    67fe:	push   rbp
    67ff:	push   rbx
    6800:	mov    r13,rdi
    6803:	mov    rbp,rcx
    6806:	sub    rsp,0xb8
    680d:	mov    ebx,DWORD PTR [rdi+0x48]
    6810:	mov    rax,QWORD PTR fs:0x28
    6819:	mov    QWORD PTR [rsp+0xa8],rax
    6821:	xor    eax,eax
    6823:	mov    edx,ebx
    6825:	and    edx,0x4
    6828:	test   rcx,rcx
    682b:	je     68d0 <__cxa_finalize@plt+0x4a58>
    6831:	lea    rax,[rip+0x4cf2]        # b52a <version_etc_copyright@@Base+0x6a>
    6838:	mov    ecx,0x3
    683d:	mov    rsi,rbp
    6840:	mov    rdi,rax
    6843:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6845:	jne    68d0 <__cxa_finalize@plt+0x4a58>
    684b:	test   edx,edx
    684d:	jne    68d4 <__cxa_finalize@plt+0x4a5c>
    6853:	test   r12d,r12d
    6856:	jns    6a3a <__cxa_finalize@plt+0x4bc2>
    685c:	test   bh,0x2
    685f:	jne    69a0 <__cxa_finalize@plt+0x4b28>
    6865:	mov    BYTE PTR [rsp+0xf],0x1
    686a:	mov    edi,DWORD PTR [r13+0x2c]
    686e:	mov    rdx,rbp
    6871:	mov    esi,ebx
    6873:	call   67a0 <__cxa_finalize@plt+0x4928>
    6878:	test   eax,eax
    687a:	mov    r15d,eax
    687d:	js     6a2b <__cxa_finalize@plt+0x4bb3>
    6883:	mov    ebx,DWORD PTR [r13+0x48]
    6887:	test   bl,0x2
    688a:	je     692a <__cxa_finalize@plt+0x4ab2>
    6890:	lea    rdx,[rsp+0x10]
    6895:	mov    esi,r15d
    6898:	mov    edi,0x1
    689d:	call   1d30 <__fxstat@plt>
    68a2:	test   eax,eax
    68a4:	je     6968 <__cxa_finalize@plt+0x4af0>
    68aa:	mov    ebx,0xffffffff
    68af:	test   r12d,r12d
    68b2:	jns    68e4 <__cxa_finalize@plt+0x4a6c>
    68b4:	call   1ab0 <__errno_location@plt>
    68b9:	mov    r12d,DWORD PTR [rax]
    68bc:	mov    rbp,rax
    68bf:	mov    edi,r15d
    68c2:	call   1c20 <close@plt>
    68c7:	mov    DWORD PTR [rbp+0x0],r12d
    68cb:	jmp    68e4 <__cxa_finalize@plt+0x4a6c>
    68cd:	nop    DWORD PTR [rax]
    68d0:	test   edx,edx
    68d2:	je     6910 <__cxa_finalize@plt+0x4a98>
    68d4:	and    bh,0x2
    68d7:	je     68e2 <__cxa_finalize@plt+0x4a6a>
    68d9:	test   r12d,r12d
    68dc:	jns    6990 <__cxa_finalize@plt+0x4b18>
    68e2:	xor    ebx,ebx
    68e4:	mov    rdi,QWORD PTR [rsp+0xa8]
    68ec:	xor    rdi,QWORD PTR fs:0x28
    68f5:	mov    eax,ebx
    68f7:	jne    6a35 <__cxa_finalize@plt+0x4bbd>
    68fd:	add    rsp,0xb8
    6904:	pop    rbx
    6905:	pop    rbp
    6906:	pop    r12
    6908:	pop    r13
    690a:	pop    r14
    690c:	pop    r15
    690e:	ret    
    690f:	nop
    6910:	test   r12d,r12d
    6913:	js     6a50 <__cxa_finalize@plt+0x4bd8>
    6919:	test   bl,0x2
    691c:	mov    r15d,r12d
    691f:	mov    BYTE PTR [rsp+0xf],0x0
    6924:	jne    6890 <__cxa_finalize@plt+0x4a18>
    692a:	test   rbp,rbp
    692d:	je     6949 <__cxa_finalize@plt+0x4ad1>
    692f:	lea    rax,[rip+0x4bf4]        # b52a <version_etc_copyright@@Base+0x6a>
    6936:	mov    ecx,0x3
    693b:	mov    rsi,rbp
    693e:	mov    rdi,rax
    6941:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6943:	je     6890 <__cxa_finalize@plt+0x4a18>
    6949:	and    bh,0x2
    694c:	jne    69e8 <__cxa_finalize@plt+0x4b70>
    6952:	mov    edi,r15d
    6955:	call   1d50 <fchdir@plt>
    695a:	mov    ebx,eax
    695c:	jmp    68af <__cxa_finalize@plt+0x4a37>
    6961:	nop    DWORD PTR [rax+0x0]
    6968:	mov    rax,QWORD PTR [rsp+0x10]
    696d:	cmp    QWORD PTR [r14+0x78],rax
    6971:	je     6a10 <__cxa_finalize@plt+0x4b98>
    6977:	call   1ab0 <__errno_location@plt>
    697c:	mov    DWORD PTR [rax],0x2
    6982:	jmp    68aa <__cxa_finalize@plt+0x4a32>
    6987:	nop    WORD PTR [rax+rax*1+0x0]
    6990:	mov    edi,r12d
    6993:	xor    ebx,ebx
    6995:	call   1c20 <close@plt>
    699a:	jmp    68e4 <__cxa_finalize@plt+0x4a6c>
    699f:	nop
    69a0:	lea    r15,[r13+0x60]
    69a4:	mov    rdi,r15
    69a7:	call   9940 <fts_children@@Base+0x16d0>
    69ac:	test   al,al
    69ae:	mov    BYTE PTR [rsp+0xf],al
    69b2:	jne    686a <__cxa_finalize@plt+0x49f2>
    69b8:	mov    rdi,r15
    69bb:	call   9990 <fts_children@@Base+0x1720>
    69c0:	test   eax,eax
    69c2:	mov    r15d,eax
    69c5:	mov    ebx,DWORD PTR [r13+0x48]
    69c9:	js     6865 <__cxa_finalize@plt+0x49ed>
    69cf:	test   bl,0x2
    69d2:	mov    r12d,eax
    69d5:	mov    BYTE PTR [rsp+0xf],0x1
    69da:	je     6949 <__cxa_finalize@plt+0x4ad1>
    69e0:	jmp    6890 <__cxa_finalize@plt+0x4a18>
    69e5:	nop    DWORD PTR [rax]
    69e8:	movzx  r14d,BYTE PTR [rsp+0xf]
    69ee:	mov    esi,r15d
    69f1:	mov    rdi,r13
    69f4:	xor    ebx,ebx
    69f6:	xor    r14d,0x1
    69fa:	movzx  edx,r14b
    69fe:	call   65f0 <__cxa_finalize@plt+0x4778>
    6a03:	jmp    68e4 <__cxa_finalize@plt+0x4a6c>
    6a08:	nop    DWORD PTR [rax+rax*1+0x0]
    6a10:	mov    rax,QWORD PTR [rsp+0x18]
    6a15:	cmp    QWORD PTR [r14+0x80],rax
    6a1c:	jne    6977 <__cxa_finalize@plt+0x4aff>
    6a22:	mov    ebx,DWORD PTR [r13+0x48]
    6a26:	jmp    6949 <__cxa_finalize@plt+0x4ad1>
    6a2b:	mov    ebx,0xffffffff
    6a30:	jmp    68e4 <__cxa_finalize@plt+0x4a6c>
    6a35:	call   1b90 <__stack_chk_fail@plt>
    6a3a:	test   bl,0x2
    6a3d:	mov    r15d,r12d
    6a40:	mov    BYTE PTR [rsp+0xf],0x1
    6a45:	je     6936 <__cxa_finalize@plt+0x4abe>
    6a4b:	jmp    6890 <__cxa_finalize@plt+0x4a18>
    6a50:	mov    BYTE PTR [rsp+0xf],0x0
    6a55:	jmp    686a <__cxa_finalize@plt+0x49f2>
    6a5a:	nop    WORD PTR [rax+rax*1+0x0]
    6a60:	and    edi,0x102
    6a66:	push   r12
    6a68:	mov    r12,rsi
    6a6b:	push   rbp
    6a6c:	push   rbx
    6a6d:	mov    rbx,rdx
    6a70:	je     6ae0 <__cxa_finalize@plt+0x4c68>
    6a72:	mov    edi,0x18
    6a77:	call   1ce0 <malloc@plt>
    6a7c:	test   rax,rax
    6a7f:	mov    rbp,rax
    6a82:	je     6b08 <__cxa_finalize@plt+0x4c90>
    6a88:	mov    rax,QWORD PTR [rbx+0x78]
    6a8c:	mov    rdi,QWORD PTR [r12]
    6a90:	mov    rsi,rbp
    6a93:	mov    QWORD PTR [rbp+0x10],rbx
    6a97:	mov    QWORD PTR [rbp+0x0],rax
    6a9b:	mov    rax,QWORD PTR [rbx+0x80]
    6aa2:	mov    QWORD PTR [rbp+0x8],rax
    6aa6:	call   96b0 <fts_children@@Base+0x1440>
    6aab:	cmp    rbp,rax
    6aae:	mov    r12,rax
    6ab1:	je     6ad1 <__cxa_finalize@plt+0x4c59>
    6ab3:	mov    rdi,rbp
    6ab6:	call   1e70 <free@plt>
    6abb:	test   r12,r12
    6abe:	je     6b08 <__cxa_finalize@plt+0x4c90>
    6ac0:	mov    rax,QWORD PTR [r12+0x10]
    6ac5:	mov    ecx,0x2
    6aca:	mov    WORD PTR [rbx+0x70],cx
    6ace:	mov    QWORD PTR [rbx],rax
    6ad1:	pop    rbx
    6ad2:	mov    eax,0x1
    6ad7:	pop    rbp
    6ad8:	pop    r12
    6ada:	ret    
    6adb:	nop    DWORD PTR [rax+rax*1+0x0]
    6ae0:	mov    rdi,QWORD PTR [r12]
    6ae4:	lea    rsi,[rdx+0x78]
    6ae8:	call   84e0 <fts_children@@Base+0x270>
    6aed:	test   al,al
    6aef:	je     6ad1 <__cxa_finalize@plt+0x4c59>
    6af1:	mov    edx,0x2
    6af6:	mov    QWORD PTR [rbx],rbx
    6af9:	mov    WORD PTR [rbx+0x70],dx
    6afd:	pop    rbx
    6afe:	pop    rbp
    6aff:	pop    r12
    6b01:	ret    
    6b02:	nop    WORD PTR [rax+rax*1+0x0]
    6b08:	pop    rbx
    6b09:	xor    eax,eax
    6b0b:	pop    rbp
    6b0c:	pop    r12
    6b0e:	ret    
    6b0f:	nop
    6b10:	sub    rsp,0x28
    6b14:	mov    rcx,rsi
    6b17:	mov    rax,QWORD PTR fs:0x28
    6b20:	mov    QWORD PTR [rsp+0x18],rax
    6b25:	xor    eax,eax
    6b27:	and    edi,0x102
    6b2d:	jne    6b70 <__cxa_finalize@plt+0x4cf8>
    6b2f:	mov    rax,QWORD PTR [rdx+0x8]
    6b33:	test   rax,rax
    6b36:	je     6b55 <__cxa_finalize@plt+0x4cdd>
    6b38:	cmp    QWORD PTR [rax+0x58],0x0
    6b3d:	js     6b55 <__cxa_finalize@plt+0x4cdd>
    6b3f:	mov    rcx,QWORD PTR [rsi]
    6b42:	cmp    QWORD PTR [rcx+0x10],0x0
    6b47:	je     6bc3 <__cxa_finalize@plt+0x4d4b>
    6b49:	mov    rsi,QWORD PTR [rdx+0x80]
    6b50:	cmp    QWORD PTR [rcx],rsi
    6b53:	je     6ba0 <__cxa_finalize@plt+0x4d28>
    6b55:	mov    rax,QWORD PTR [rsp+0x18]
    6b5a:	xor    rax,QWORD PTR fs:0x28
    6b63:	jne    6bbe <__cxa_finalize@plt+0x4d46>
    6b65:	add    rsp,0x28
    6b69:	ret    
    6b6a:	nop    WORD PTR [rax+rax*1+0x0]
    6b70:	mov    rax,QWORD PTR [rdx+0x78]
    6b74:	mov    rdi,QWORD PTR [rcx]
    6b77:	mov    rsi,rsp
    6b7a:	mov    QWORD PTR [rsp],rax
    6b7e:	mov    rax,QWORD PTR [rdx+0x80]
    6b85:	mov    QWORD PTR [rsp+0x8],rax
    6b8a:	call   9710 <fts_children@@Base+0x14a0>
    6b8f:	test   rax,rax
    6b92:	je     6bc3 <__cxa_finalize@plt+0x4d4b>
    6b94:	mov    rdi,rax
    6b97:	call   1e70 <free@plt>
    6b9c:	jmp    6b55 <__cxa_finalize@plt+0x4cdd>
    6b9e:	xchg   ax,ax
    6ba0:	mov    rsi,QWORD PTR [rdx+0x78]
    6ba4:	cmp    QWORD PTR [rcx+0x8],rsi
    6ba8:	jne    6b55 <__cxa_finalize@plt+0x4cdd>
    6baa:	mov    rdx,QWORD PTR [rax+0x78]
    6bae:	mov    rax,QWORD PTR [rax+0x80]
    6bb5:	mov    QWORD PTR [rcx+0x8],rdx
    6bb9:	mov    QWORD PTR [rcx],rax
    6bbc:	jmp    6b55 <__cxa_finalize@plt+0x4cdd>
    6bbe:	call   1b90 <__stack_chk_fail@plt>
    6bc3:	call   1aa0 <abort@plt>
    6bc8:	nop    DWORD PTR [rax+rax*1+0x0]
    6bd0:	push   r15
    6bd2:	push   r14
    6bd4:	mov    r15,rdi
    6bd7:	push   r13
    6bd9:	push   r12
    6bdb:	push   rbp
    6bdc:	push   rbx
    6bdd:	sub    rsp,0x68
    6be1:	mov    rbp,QWORD PTR [rdi]
    6be4:	mov    DWORD PTR [rsp+0x58],esi
    6be8:	mov    rdi,QWORD PTR [rbp+0x18]
    6bec:	test   rdi,rdi
    6bef:	mov    QWORD PTR [rsp+0x50],rdi
    6bf4:	je     6fd0 <__cxa_finalize@plt+0x5158>
    6bfa:	call   1c80 <dirfd@plt>
    6bff:	test   eax,eax
    6c01:	js     7128 <__cxa_finalize@plt+0x52b0>
    6c07:	cmp    QWORD PTR [r15+0x40],0x0
    6c0c:	je     71b8 <__cxa_finalize@plt+0x5340>
    6c12:	mov    edi,DWORD PTR [r15+0x48]
    6c16:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
    6c1f:	mov    BYTE PTR [rsp+0x5f],0x1
    6c24:	mov    rcx,QWORD PTR [rbp+0x48]
    6c28:	mov    rdx,QWORD PTR [rbp+0x38]
    6c2c:	mov    QWORD PTR [rsp+0x40],0x0
    6c35:	cmp    BYTE PTR [rdx+rcx*1-0x1],0x2f
    6c3a:	lea    rax,[rcx-0x1]
    6c3e:	cmovne rax,rcx
    6c42:	and    edi,0x4
    6c45:	mov    QWORD PTR [rsp+0x48],rax
    6c4a:	je     6c5c <__cxa_finalize@plt+0x4de4>
    6c4c:	add    rax,QWORD PTR [r15+0x20]
    6c50:	lea    rbx,[rax+0x1]
    6c54:	mov    BYTE PTR [rax],0x2f
    6c57:	mov    QWORD PTR [rsp+0x40],rbx
    6c5c:	mov    rax,QWORD PTR [rsp+0x48]
    6c61:	mov    rbx,QWORD PTR [r15+0x30]
    6c65:	mov    QWORD PTR [rsp+0x20],rbp
    6c6a:	mov    BYTE PTR [rsp+0x5e],0x0
    6c6f:	mov    QWORD PTR [rsp+0x8],0x0
    6c78:	mov    QWORD PTR [rsp+0x10],0x0
    6c81:	add    rax,0x1
    6c85:	sub    rbx,rax
    6c88:	mov    QWORD PTR [rsp+0x18],rax
    6c8d:	mov    rax,QWORD PTR [rbp+0x58]
    6c91:	mov    QWORD PTR [rsp+0x28],rbx
    6c96:	mov    rbp,r15
    6c99:	xor    ebx,ebx
    6c9b:	add    rax,0x1
    6c9f:	mov    QWORD PTR [rsp+0x30],rax
    6ca4:	jmp    6d74 <__cxa_finalize@plt+0x4efc>
    6ca9:	nop    DWORD PTR [rax+0x0]
    6cb0:	mov    r9,r14
    6cb3:	add    r9,QWORD PTR [rsp+0x18]
    6cb8:	jb     751b <__cxa_finalize@plt+0x56a3>
    6cbe:	mov    rax,QWORD PTR [rsp+0x30]
    6cc3:	lea    rsi,[r13+0x108]
    6cca:	mov    QWORD PTR [r13+0x58],rax
    6cce:	mov    rax,QWORD PTR [rbp+0x0]
    6cd2:	mov    QWORD PTR [r13+0x48],r9
    6cd6:	mov    QWORD PTR [r13+0x8],rax
    6cda:	mov    rax,QWORD PTR [r15]
    6cdd:	mov    QWORD PTR [r13+0x80],rax
    6ce4:	mov    eax,DWORD PTR [rbp+0x48]
    6ce7:	test   al,0x4
    6ce9:	jne    6e50 <__cxa_finalize@plt+0x4fd8>
    6cef:	mov    QWORD PTR [r13+0x30],rsi
    6cf3:	cmp    QWORD PTR [rbp+0x40],0x0
    6cf8:	je     6d03 <__cxa_finalize@plt+0x4e8b>
    6cfa:	test   ah,0x4
    6cfd:	je     6fa0 <__cxa_finalize@plt+0x5128>
    6d03:	movzx  edx,BYTE PTR [r15+0x12]
    6d08:	and    eax,0x18
    6d0b:	mov    esi,edx
    6d0d:	sub    edx,0x1
    6d10:	cmp    eax,0x18
    6d13:	je     6f60 <__cxa_finalize@plt+0x50e8>
    6d19:	mov    eax,0xb
    6d1e:	cmp    edx,0xb
    6d21:	mov    WORD PTR [r13+0x70],ax
    6d26:	jbe    6f20 <__cxa_finalize@plt+0x50a8>
    6d2c:	mov    DWORD PTR [r13+0x90],0x0
    6d37:	mov    eax,0x2
    6d3c:	mov    QWORD PTR [r13+0xa8],rax
    6d43:	cmp    QWORD PTR [rsp+0x10],0x0
    6d49:	mov    QWORD PTR [r13+0x10],0x0
    6d51:	je     6e78 <__cxa_finalize@plt+0x5000>
    6d57:	add    rbx,0x1
    6d5b:	cmp    rbx,QWORD PTR [rsp+0x38]
    6d60:	mov    rax,QWORD PTR [rsp+0x8]
    6d65:	mov    QWORD PTR [rax+0x10],r13
    6d69:	jae    6e8c <__cxa_finalize@plt+0x5014>
    6d6f:	mov    QWORD PTR [rsp+0x8],r13
    6d74:	mov    rax,QWORD PTR [rsp+0x20]
    6d79:	mov    r13,QWORD PTR [rax+0x18]
    6d7d:	test   r13,r13
    6d80:	je     7228 <__cxa_finalize@plt+0x53b0>
    6d86:	call   1ab0 <__errno_location@plt>
    6d8b:	mov    rdi,r13
    6d8e:	mov    DWORD PTR [rax],0x0
    6d94:	mov    r12,rax
    6d97:	call   1cd0 <readdir@plt>
    6d9c:	test   rax,rax
    6d9f:	mov    r15,rax
    6da2:	je     7320 <__cxa_finalize@plt+0x54a8>
    6da8:	test   BYTE PTR [rbp+0x48],0x20
    6dac:	jne    6db8 <__cxa_finalize@plt+0x4f40>
    6dae:	cmp    BYTE PTR [rax+0x13],0x2e
    6db2:	je     6f40 <__cxa_finalize@plt+0x50c8>
    6db8:	lea    r13,[r15+0x13]
    6dbc:	mov    rdi,r13
    6dbf:	call   1b60 <strlen@plt>
    6dc4:	mov    rsi,r13
    6dc7:	mov    rdx,rax
    6dca:	mov    rdi,rbp
    6dcd:	mov    r14,rax
    6dd0:	call   6320 <__cxa_finalize@plt+0x44a8>
    6dd5:	test   rax,rax
    6dd8:	mov    r13,rax
    6ddb:	je     71d0 <__cxa_finalize@plt+0x5358>
    6de1:	cmp    QWORD PTR [rsp+0x28],r14
    6de6:	ja     6cb0 <__cxa_finalize@plt+0x4e38>
    6dec:	mov    rax,QWORD PTR [rbp+0x20]
    6df0:	lea    rsi,[rbp+0x30]
    6df4:	lea    rdi,[rbp+0x20]
    6df8:	mov    QWORD PTR [rsp+0x28],rax
    6dfd:	mov    rax,QWORD PTR [rsp+0x48]
    6e02:	lea    rdx,[rax+r14*1+0x2]
    6e07:	call   66c0 <__cxa_finalize@plt+0x4848>
    6e0c:	test   al,al
    6e0e:	je     71d0 <__cxa_finalize@plt+0x5358>
    6e14:	mov    rdx,QWORD PTR [rbp+0x20]
    6e18:	cmp    rdx,QWORD PTR [rsp+0x28]
    6e1d:	je     6fc0 <__cxa_finalize@plt+0x5148>
    6e23:	add    rdx,QWORD PTR [rsp+0x18]
    6e28:	test   BYTE PTR [rbp+0x48],0x4
    6e2c:	cmove  rdx,QWORD PTR [rsp+0x40]
    6e32:	mov    QWORD PTR [rsp+0x40],rdx
    6e37:	mov    rcx,QWORD PTR [rbp+0x30]
    6e3b:	sub    rcx,QWORD PTR [rsp+0x18]
    6e40:	mov    BYTE PTR [rsp+0x5e],al
    6e44:	mov    QWORD PTR [rsp+0x28],rcx
    6e49:	jmp    6cb0 <__cxa_finalize@plt+0x4e38>
    6e4e:	xchg   ax,ax
    6e50:	mov    rax,QWORD PTR [r13+0x38]
    6e54:	mov    rdi,QWORD PTR [rsp+0x40]
    6e59:	mov    QWORD PTR [r13+0x30],rax
    6e5d:	mov    rax,QWORD PTR [r13+0x60]
    6e61:	lea    rdx,[rax+0x1]
    6e65:	call   1da0 <memmove@plt>
    6e6a:	mov    eax,DWORD PTR [rbp+0x48]
    6e6d:	jmp    6cf3 <__cxa_finalize@plt+0x4e7b>
    6e72:	nop    WORD PTR [rax+rax*1+0x0]
    6e78:	add    rbx,0x1
    6e7c:	cmp    rbx,QWORD PTR [rsp+0x38]
    6e81:	mov    QWORD PTR [rsp+0x10],r13
    6e86:	jb     6d6f <__cxa_finalize@plt+0x4ef7>
    6e8c:	cmp    BYTE PTR [rsp+0x5e],0x0
    6e91:	mov    r15,rbp
    6e94:	mov    rbp,QWORD PTR [rsp+0x20]
    6e99:	je     7239 <__cxa_finalize@plt+0x53c1>
    6e9f:	mov    rax,QWORD PTR [r15+0x8]
    6ea3:	mov    rcx,QWORD PTR [r15+0x20]
    6ea7:	test   rax,rax
    6eaa:	je     6ed8 <__cxa_finalize@plt+0x5060>
    6eac:	nop    DWORD PTR [rax+0x0]
    6eb0:	mov    rdx,QWORD PTR [rax+0x30]
    6eb4:	lea    rsi,[rax+0x108]
    6ebb:	cmp    rdx,rsi
    6ebe:	je     6ecb <__cxa_finalize@plt+0x5053>
    6ec0:	sub    rdx,QWORD PTR [rax+0x38]
    6ec4:	add    rdx,rcx
    6ec7:	mov    QWORD PTR [rax+0x30],rdx
    6ecb:	mov    QWORD PTR [rax+0x38],rcx
    6ecf:	mov    rax,QWORD PTR [rax+0x10]
    6ed3:	test   rax,rax
    6ed6:	jne    6eb0 <__cxa_finalize@plt+0x5038>
    6ed8:	mov    rax,QWORD PTR [rsp+0x10]
    6edd:	jmp    6ee3 <__cxa_finalize@plt+0x506b>
    6edf:	nop
    6ee0:	mov    rax,rdx
    6ee3:	cmp    QWORD PTR [rax+0x58],0x0
    6ee8:	js     7239 <__cxa_finalize@plt+0x53c1>
    6eee:	mov    rdx,QWORD PTR [rax+0x30]
    6ef2:	lea    rsi,[rax+0x108]
    6ef9:	cmp    rdx,rsi
    6efc:	je     6f09 <__cxa_finalize@plt+0x5091>
    6efe:	sub    rdx,QWORD PTR [rax+0x38]
    6f02:	add    rdx,rcx
    6f05:	mov    QWORD PTR [rax+0x30],rdx
    6f09:	mov    rdx,QWORD PTR [rax+0x10]
    6f0d:	mov    QWORD PTR [rax+0x38],rcx
    6f11:	test   rdx,rdx
    6f14:	jne    6ee0 <__cxa_finalize@plt+0x5068>
    6f16:	mov    rdx,QWORD PTR [rax+0x8]
    6f1a:	jmp    6ee0 <__cxa_finalize@plt+0x5068>
    6f1c:	nop    DWORD PTR [rax+0x0]
    6f20:	lea    rax,[rip+0x4619]        # b540 <version_etc_copyright@@Base+0x80>
    6f27:	mov    eax,DWORD PTR [rax+rdx*4]
    6f2a:	mov    DWORD PTR [r13+0x90],eax
    6f31:	mov    eax,0x2
    6f36:	jmp    6d3c <__cxa_finalize@plt+0x4ec4>
    6f3b:	nop    DWORD PTR [rax+rax*1+0x0]
    6f40:	cmp    BYTE PTR [rax+0x14],0x0
    6f44:	je     6f51 <__cxa_finalize@plt+0x50d9>
    6f46:	cmp    WORD PTR [rax+0x14],0x2e
    6f4b:	jne    6db8 <__cxa_finalize@plt+0x4f40>
    6f51:	mov    r13,QWORD PTR [rsp+0x8]
    6f56:	jmp    6d6f <__cxa_finalize@plt+0x4ef7>
    6f5b:	nop    DWORD PTR [rax+rax*1+0x0]
    6f60:	and    esi,0xfb
    6f66:	je     6d19 <__cxa_finalize@plt+0x4ea1>
    6f6c:	mov    ecx,0xb
    6f71:	cmp    edx,0xb
    6f74:	mov    WORD PTR [r13+0x70],cx
    6f79:	ja     756f <__cxa_finalize@plt+0x56f7>
    6f7f:	lea    rax,[rip+0x45ba]        # b540 <version_etc_copyright@@Base+0x80>
    6f86:	mov    eax,DWORD PTR [rax+rdx*4]
    6f89:	mov    DWORD PTR [r13+0x90],eax
    6f90:	mov    eax,0x1
    6f95:	jmp    6d3c <__cxa_finalize@plt+0x4ec4>
    6f9a:	nop    WORD PTR [rax+rax*1+0x0]
    6fa0:	xor    edx,edx
    6fa2:	mov    rsi,r13
    6fa5:	mov    rdi,rbp
    6fa8:	call   6040 <__cxa_finalize@plt+0x41c8>
    6fad:	mov    WORD PTR [r13+0x70],ax
    6fb2:	jmp    6d43 <__cxa_finalize@plt+0x4ecb>
    6fb7:	nop    WORD PTR [rax+rax*1+0x0]
    6fc0:	movzx  eax,BYTE PTR [rsp+0x5e]
    6fc5:	jmp    6e37 <__cxa_finalize@plt+0x4fbf>
    6fca:	nop    WORD PTR [rax+rax*1+0x0]
    6fd0:	mov    eax,DWORD PTR [r15+0x48]
    6fd4:	mov    ecx,eax
    6fd6:	and    ecx,0x10
    6fd9:	je     6fe8 <__cxa_finalize@plt+0x5170>
    6fdb:	test   al,0x1
    6fdd:	mov    ecx,0x20000
    6fe2:	jne    7110 <__cxa_finalize@plt+0x5298>
    6fe8:	mov    edx,eax
    6fea:	and    eax,0x204
    6fef:	mov    rsi,QWORD PTR [rbp+0x30]
    6ff3:	shl    edx,0x7
    6ff6:	mov    edi,0xffffff9c
    6ffb:	and    edx,0x40000
    7001:	or     edx,0x90900
    7007:	cmp    eax,0x200
    700c:	jne    7012 <__cxa_finalize@plt+0x519a>
    700e:	mov    edi,DWORD PTR [r15+0x2c]
    7012:	or     edx,ecx
    7014:	xor    eax,eax
    7016:	call   9e20 <fts_children@@Base+0x1bb0>
    701b:	test   eax,eax
    701d:	mov    ebx,eax
    701f:	js     7386 <__cxa_finalize@plt+0x550e>
    7025:	mov    edi,eax
    7027:	call   1de0 <fdopendir@plt>
    702c:	test   rax,rax
    702f:	je     7370 <__cxa_finalize@plt+0x54f8>
    7035:	cmp    WORD PTR [rbp+0x70],0xb
    703a:	mov    QWORD PTR [rbp+0x18],rax
    703e:	je     73d0 <__cxa_finalize@plt+0x5558>
    7044:	mov    edi,DWORD PTR [r15+0x48]
    7048:	test   edi,0x100
    704e:	jne    7168 <__cxa_finalize@plt+0x52f0>
    7054:	cmp    QWORD PTR [r15+0x40],0x1
    7059:	sbb    rax,rax
    705c:	and    eax,0x186a1
    7061:	sub    rax,0x1
    7065:	cmp    DWORD PTR [rsp+0x58],0x2
    706a:	mov    QWORD PTR [rsp+0x38],rax
    706f:	je     73b8 <__cxa_finalize@plt+0x5540>
    7075:	mov    eax,DWORD PTR [r15+0x48]
    7079:	and    eax,0x38
    707c:	cmp    eax,0x18
    707f:	je     7408 <__cxa_finalize@plt+0x5590>
    7085:	cmp    DWORD PTR [rsp+0x58],0x3
    708a:	mov    r13d,0x1
    7090:	sete   r12b
    7094:	test   BYTE PTR [r15+0x49],0x2
    7099:	jne    7483 <__cxa_finalize@plt+0x560b>
    709f:	xor    ecx,ecx
    70a1:	mov    edx,ebx
    70a3:	mov    rsi,rbp
    70a6:	mov    rdi,r15
    70a9:	call   67f0 <__cxa_finalize@plt+0x4978>
    70ae:	test   eax,eax
    70b0:	je     71c1 <__cxa_finalize@plt+0x5349>
    70b6:	test   r12b,r12b
    70b9:	je     70ca <__cxa_finalize@plt+0x5252>
    70bb:	test   r13b,r13b
    70be:	je     70ca <__cxa_finalize@plt+0x5252>
    70c0:	call   1ab0 <__errno_location@plt>
    70c5:	mov    eax,DWORD PTR [rax]
    70c7:	mov    DWORD PTR [rbp+0x40],eax
    70ca:	or     WORD PTR [rbp+0x72],0x1
    70cf:	mov    rdi,QWORD PTR [rbp+0x18]
    70d3:	call   1c30 <closedir@plt>
    70d8:	mov    edi,DWORD PTR [r15+0x48]
    70dc:	mov    QWORD PTR [rbp+0x18],0x0
    70e4:	test   edi,0x200
    70ea:	je     70f4 <__cxa_finalize@plt+0x527c>
    70ec:	test   ebx,ebx
    70ee:	jns    7440 <__cxa_finalize@plt+0x55c8>
    70f4:	mov    QWORD PTR [rbp+0x18],0x0
    70fc:	mov    BYTE PTR [rsp+0x5f],0x0
    7101:	jmp    6c24 <__cxa_finalize@plt+0x4dac>
    7106:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7110:	xor    ecx,ecx
    7112:	cmp    QWORD PTR [rbp+0x58],0x0
    7117:	setne  cl
    711a:	shl    ecx,0x11
    711d:	jmp    6fe8 <__cxa_finalize@plt+0x5170>
    7122:	nop    WORD PTR [rax+rax*1+0x0]
    7128:	mov    rdi,QWORD PTR [rbp+0x18]
    712c:	call   1c30 <closedir@plt>
    7131:	cmp    DWORD PTR [rsp+0x58],0x3
    7136:	mov    QWORD PTR [rbp+0x18],0x0
    713e:	je     7399 <__cxa_finalize@plt+0x5521>
    7144:	mov    QWORD PTR [rsp+0x10],0x0
    714d:	mov    rax,QWORD PTR [rsp+0x10]
    7152:	add    rsp,0x68
    7156:	pop    rbx
    7157:	pop    rbp
    7158:	pop    r12
    715a:	pop    r13
    715c:	pop    r14
    715e:	pop    r15
    7160:	ret    
    7161:	nop    DWORD PTR [rax+0x0]
    7168:	lea    r12,[r15+0x58]
    716c:	mov    rdx,rbp
    716f:	mov    rsi,r12
    7172:	call   6b10 <__cxa_finalize@plt+0x4c98>
    7177:	xor    edx,edx
    7179:	mov    rsi,rbp
    717c:	mov    rdi,r15
    717f:	call   6040 <__cxa_finalize@plt+0x41c8>
    7184:	mov    edi,DWORD PTR [r15+0x48]
    7188:	mov    rdx,rbp
    718b:	mov    rsi,r12
    718e:	call   6a60 <__cxa_finalize@plt+0x4be8>
    7193:	test   al,al
    7195:	jne    7054 <__cxa_finalize@plt+0x51dc>
    719b:	call   1ab0 <__errno_location@plt>
    71a0:	mov    QWORD PTR [rsp+0x10],0x0
    71a9:	mov    DWORD PTR [rax],0xc
    71af:	jmp    714d <__cxa_finalize@plt+0x52d5>
    71b1:	nop    DWORD PTR [rax+0x0]
    71b8:	mov    QWORD PTR [rsp+0x38],0x186a0
    71c1:	mov    BYTE PTR [rsp+0x5f],0x1
    71c6:	mov    edi,DWORD PTR [r15+0x48]
    71ca:	jmp    6c24 <__cxa_finalize@plt+0x4dac>
    71cf:	nop
    71d0:	mov    rdi,r13
    71d3:	mov    r15,rbp
    71d6:	mov    ebx,DWORD PTR [r12]
    71da:	mov    rbp,QWORD PTR [rsp+0x20]
    71df:	call   1e70 <free@plt>
    71e4:	mov    rdi,QWORD PTR [rsp+0x10]
    71e9:	call   63b0 <__cxa_finalize@plt+0x4538>
    71ee:	mov    rdi,QWORD PTR [rbp+0x18]
    71f2:	call   1c30 <closedir@plt>
    71f7:	mov    r9d,0x7
    71fd:	mov    QWORD PTR [rbp+0x18],0x0
    7205:	mov    QWORD PTR [rsp+0x10],0x0
    720e:	mov    WORD PTR [rbp+0x70],r9w
    7213:	or     DWORD PTR [r15+0x48],0x4000
    721b:	mov    DWORD PTR [r12],ebx
    721f:	jmp    714d <__cxa_finalize@plt+0x52d5>
    7224:	nop    DWORD PTR [rax+0x0]
    7228:	mov    r15,rbp
    722b:	mov    rbp,rax
    722e:	cmp    BYTE PTR [rsp+0x5e],0x0
    7233:	jne    6e9f <__cxa_finalize@plt+0x5027>
    7239:	test   BYTE PTR [r15+0x48],0x4
    723e:	je     725e <__cxa_finalize@plt+0x53e6>
    7240:	mov    rax,QWORD PTR [rsp+0x18]
    7245:	cmp    QWORD PTR [r15+0x30],rax
    7249:	je     7250 <__cxa_finalize@plt+0x53d8>
    724b:	test   rbx,rbx
    724e:	jne    7256 <__cxa_finalize@plt+0x53de>
    7250:	sub    QWORD PTR [rsp+0x40],0x1
    7256:	mov    rax,QWORD PTR [rsp+0x40]
    725b:	mov    BYTE PTR [rax],0x0
    725e:	cmp    QWORD PTR [rsp+0x50],0x0
    7264:	jne    72d0 <__cxa_finalize@plt+0x5458>
    7266:	cmp    BYTE PTR [rsp+0x5f],0x0
    726b:	je     72d0 <__cxa_finalize@plt+0x5458>
    726d:	cmp    DWORD PTR [rsp+0x58],0x1
    7272:	je     72b0 <__cxa_finalize@plt+0x5438>
    7274:	test   rbx,rbx
    7277:	je     72b0 <__cxa_finalize@plt+0x5438>
    7279:	cmp    rbx,0x2710
    7280:	mov    rax,QWORD PTR [r15+0x40]
    7284:	jbe    7300 <__cxa_finalize@plt+0x5488>
    7286:	test   rax,rax
    7289:	je     74a8 <__cxa_finalize@plt+0x5630>
    728f:	mov    rsi,QWORD PTR [rsp+0x10]
    7294:	add    rsp,0x68
    7298:	mov    rdx,rbx
    729b:	mov    rdi,r15
    729e:	pop    rbx
    729f:	pop    rbp
    72a0:	pop    r12
    72a2:	pop    r13
    72a4:	pop    r14
    72a6:	pop    r15
    72a8:	jmp    6210 <__cxa_finalize@plt+0x4398>
    72ad:	nop    DWORD PTR [rax]
    72b0:	cmp    QWORD PTR [rbp+0x58],0x0
    72b5:	jne    73e6 <__cxa_finalize@plt+0x556e>
    72bb:	mov    rdi,r15
    72be:	call   6660 <__cxa_finalize@plt+0x47e8>
    72c3:	test   eax,eax
    72c5:	setne  al
    72c8:	test   al,al
    72ca:	jne    745a <__cxa_finalize@plt+0x55e2>
    72d0:	test   rbx,rbx
    72d3:	jne    7279 <__cxa_finalize@plt+0x5401>
    72d5:	cmp    DWORD PTR [rsp+0x58],0x3
    72da:	je     74f5 <__cxa_finalize@plt+0x567d>
    72e0:	mov    rdi,QWORD PTR [rsp+0x10]
    72e5:	call   63b0 <__cxa_finalize@plt+0x4538>
    72ea:	mov    QWORD PTR [rsp+0x10],0x0
    72f3:	jmp    714d <__cxa_finalize@plt+0x52d5>
    72f8:	mov    rax,QWORD PTR [r15+0x40]
    72fc:	nop    DWORD PTR [rax+0x0]
    7300:	cmp    rbx,0x1
    7304:	je     714d <__cxa_finalize@plt+0x52d5>
    730a:	test   rax,rax
    730d:	je     714d <__cxa_finalize@plt+0x52d5>
    7313:	jmp    728f <__cxa_finalize@plt+0x5417>
    7318:	nop    DWORD PTR [rax+rax*1+0x0]
    7320:	mov    eax,DWORD PTR [r12]
    7324:	mov    r15,rbp
    7327:	mov    rbp,QWORD PTR [rsp+0x20]
    732c:	test   eax,eax
    732e:	je     7351 <__cxa_finalize@plt+0x54d9>
    7330:	test   rbx,rbx
    7333:	mov    DWORD PTR [rbp+0x40],eax
    7336:	jne    7450 <__cxa_finalize@plt+0x55d8>
    733c:	cmp    QWORD PTR [rsp+0x50],0x0
    7342:	mov    eax,0x4
    7347:	jne    7450 <__cxa_finalize@plt+0x55d8>
    734d:	mov    WORD PTR [rbp+0x70],ax
    7351:	mov    rdi,QWORD PTR [rbp+0x18]
    7355:	test   rdi,rdi
    7358:	je     722e <__cxa_finalize@plt+0x53b6>
    735e:	call   1c30 <closedir@plt>
    7363:	mov    QWORD PTR [rbp+0x18],0x0
    736b:	jmp    722e <__cxa_finalize@plt+0x53b6>
    7370:	call   1ab0 <__errno_location@plt>
    7375:	mov    r13d,DWORD PTR [rax]
    7378:	mov    r12,rax
    737b:	mov    edi,ebx
    737d:	call   1c20 <close@plt>
    7382:	mov    DWORD PTR [r12],r13d
    7386:	cmp    DWORD PTR [rsp+0x58],0x3
    738b:	mov    QWORD PTR [rbp+0x18],0x0
    7393:	jne    7144 <__cxa_finalize@plt+0x52cc>
    7399:	mov    r10d,0x4
    739f:	mov    WORD PTR [rbp+0x70],r10w
    73a4:	call   1ab0 <__errno_location@plt>
    73a9:	mov    eax,DWORD PTR [rax]
    73ab:	mov    DWORD PTR [rbp+0x40],eax
    73ae:	jmp    7144 <__cxa_finalize@plt+0x52cc>
    73b3:	nop    DWORD PTR [rax+rax*1+0x0]
    73b8:	mov    BYTE PTR [rsp+0x5f],0x0
    73bd:	mov    edi,DWORD PTR [r15+0x48]
    73c1:	jmp    6c24 <__cxa_finalize@plt+0x4dac>
    73c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    73d0:	xor    edx,edx
    73d2:	mov    rsi,rbp
    73d5:	mov    rdi,r15
    73d8:	call   6040 <__cxa_finalize@plt+0x41c8>
    73dd:	mov    WORD PTR [rbp+0x70],ax
    73e1:	jmp    7054 <__cxa_finalize@plt+0x51dc>
    73e6:	mov    rsi,QWORD PTR [rbp+0x8]
    73ea:	lea    rcx,[rip+0x4139]        # b52a <version_etc_copyright@@Base+0x6a>
    73f1:	mov    edx,0xffffffff
    73f6:	mov    rdi,r15
    73f9:	call   67f0 <__cxa_finalize@plt+0x4978>
    73fe:	test   eax,eax
    7400:	setne  al
    7403:	jmp    72c8 <__cxa_finalize@plt+0x5450>
    7408:	cmp    QWORD PTR [rbp+0x88],0x2
    7410:	jne    7085 <__cxa_finalize@plt+0x520d>
    7416:	mov    rdi,rbp
    7419:	call   6590 <__cxa_finalize@plt+0x4718>
    741e:	test   eax,eax
    7420:	je     7085 <__cxa_finalize@plt+0x520d>
    7426:	cmp    DWORD PTR [rsp+0x58],0x3
    742b:	jne    73b8 <__cxa_finalize@plt+0x5540>
    742d:	xor    r13d,r13d
    7430:	mov    r12d,0x1
    7436:	jmp    7094 <__cxa_finalize@plt+0x521c>
    743b:	nop    DWORD PTR [rax+rax*1+0x0]
    7440:	mov    edi,ebx
    7442:	call   1c20 <close@plt>
    7447:	mov    edi,DWORD PTR [r15+0x48]
    744b:	jmp    70f4 <__cxa_finalize@plt+0x527c>
    7450:	mov    eax,0x7
    7455:	jmp    734d <__cxa_finalize@plt+0x54d5>
    745a:	mov    edi,0x7
    745f:	mov    WORD PTR [rbp+0x70],di
    7463:	or     DWORD PTR [r15+0x48],0x4000
    746b:	mov    rdi,QWORD PTR [rsp+0x10]
    7470:	call   63b0 <__cxa_finalize@plt+0x4538>
    7475:	mov    QWORD PTR [rsp+0x10],0x0
    747e:	jmp    714d <__cxa_finalize@plt+0x52d5>
    7483:	mov    edi,ebx
    7485:	xor    eax,eax
    7487:	mov    edx,0x3
    748c:	mov    esi,0x406
    7491:	call   9f50 <fts_children@@Base+0x1ce0>
    7496:	test   eax,eax
    7498:	mov    ebx,eax
    749a:	js     70b6 <__cxa_finalize@plt+0x523e>
    74a0:	jmp    709f <__cxa_finalize@plt+0x5227>
    74a5:	nop    DWORD PTR [rax]
    74a8:	mov    rdi,rbp
    74ab:	call   6440 <__cxa_finalize@plt+0x45c8>
    74b0:	cmp    rax,0x6969
    74b6:	je     72f8 <__cxa_finalize@plt+0x5480>
    74bc:	cmp    rax,0x1021994
    74c2:	je     72f8 <__cxa_finalize@plt+0x5480>
    74c8:	lea    rax,[rip+0xffffffffffffeb41]        # 6010 <__cxa_finalize@plt+0x4198>
    74cf:	mov    rsi,QWORD PTR [rsp+0x10]
    74d4:	mov    rdx,rbx
    74d7:	mov    rdi,r15
    74da:	mov    QWORD PTR [r15+0x40],rax
    74de:	call   6210 <__cxa_finalize@plt+0x4398>
    74e3:	mov    QWORD PTR [r15+0x40],0x0
    74eb:	mov    QWORD PTR [rsp+0x10],rax
    74f0:	jmp    714d <__cxa_finalize@plt+0x52d5>
    74f5:	movzx  eax,WORD PTR [rbp+0x70]
    74f9:	cmp    ax,0x7
    74fd:	je     72e0 <__cxa_finalize@plt+0x5468>
    7503:	cmp    ax,0x4
    7507:	je     72e0 <__cxa_finalize@plt+0x5468>
    750d:	mov    esi,0x6
    7512:	mov    WORD PTR [rbp+0x70],si
    7516:	jmp    72e0 <__cxa_finalize@plt+0x5468>
    751b:	mov    rdi,r13
    751e:	mov    r15,rbp
    7521:	mov    rbp,QWORD PTR [rsp+0x20]
    7526:	call   1e70 <free@plt>
    752b:	mov    rdi,QWORD PTR [rsp+0x10]
    7530:	call   63b0 <__cxa_finalize@plt+0x4538>
    7535:	mov    rdi,QWORD PTR [rbp+0x18]
    7539:	call   1c30 <closedir@plt>
    753e:	mov    r8d,0x7
    7544:	mov    QWORD PTR [rbp+0x18],0x0
    754c:	mov    QWORD PTR [rsp+0x10],0x0
    7555:	mov    WORD PTR [rbp+0x70],r8w
    755a:	or     DWORD PTR [r15+0x48],0x4000
    7562:	mov    DWORD PTR [r12],0x24
    756a:	jmp    714d <__cxa_finalize@plt+0x52d5>
    756f:	mov    DWORD PTR [r13+0x90],0x0
    757a:	mov    eax,0x1
    757f:	jmp    6d3c <__cxa_finalize@plt+0x4ec4>
    7584:	xchg   ax,ax
    7586:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007590 <fts_open@@Base>:
    7590:	push   r15
    7592:	push   r14
    7594:	push   r13
    7596:	push   r12
    7598:	push   rbp
    7599:	push   rbx
    759a:	sub    rsp,0x28
    759e:	test   esi,0xffffe000
    75a4:	jne    7918 <fts_open@@Base+0x388>
    75aa:	mov    eax,esi
    75ac:	mov    ebp,esi
    75ae:	and    eax,0x204
    75b3:	cmp    eax,0x204
    75b8:	je     7918 <fts_open@@Base+0x388>
    75be:	test   sil,0x12
    75c2:	je     7918 <fts_open@@Base+0x388>
    75c8:	mov    r13,rdi
    75cb:	mov    esi,0x1
    75d0:	mov    edi,0x80
    75d5:	mov    r14,rdx
    75d8:	call   1c60 <calloc@plt>
    75dd:	test   rax,rax
    75e0:	mov    rbx,rax
    75e3:	je     782e <fts_open@@Base+0x29e>
    75e9:	test   bpl,0x2
    75ed:	mov    QWORD PTR [rax+0x40],r14
    75f1:	jne    7840 <fts_open@@Base+0x2b0>
    75f7:	mov    rdi,QWORD PTR [r13+0x0]
    75fb:	mov    DWORD PTR [rax+0x48],ebp
    75fe:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
    7605:	test   rdi,rdi
    7608:	je     785f <fts_open@@Base+0x2cf>
    760e:	mov    r15,r13
    7611:	xor    r12d,r12d
    7614:	nop    DWORD PTR [rax+0x0]
    7618:	call   1b60 <strlen@plt>
    761d:	cmp    r12,rax
    7620:	cmovb  r12,rax
    7624:	add    r15,0x8
    7628:	mov    rdi,QWORD PTR [r15]
    762b:	test   rdi,rdi
    762e:	jne    7618 <fts_open@@Base+0x88>
    7630:	lea    rdx,[r12+0x1]
    7635:	mov    eax,0x1000
    763a:	cmp    rdx,0x1000
    7641:	cmovb  rdx,rax
    7645:	lea    rsi,[rbx+0x30]
    7649:	lea    rdi,[rbx+0x20]
    764d:	call   66c0 <__cxa_finalize@plt+0x4848>
    7652:	test   al,al
    7654:	mov    BYTE PTR [rsp+0x16],al
    7658:	je     78e9 <fts_open@@Base+0x359>
    765e:	mov    rsi,QWORD PTR [r13+0x0]
    7662:	test   rsi,rsi
    7665:	je     7900 <fts_open@@Base+0x370>
    766b:	lea    rsi,[rip+0x3b6f]        # b1e1 <quoting_style_vals@@Base+0x81>
    7672:	xor    edx,edx
    7674:	mov    rdi,rbx
    7677:	call   6320 <__cxa_finalize@plt+0x44a8>
    767c:	test   rax,rax
    767f:	mov    r15,rax
    7682:	je     78e0 <fts_open@@Base+0x350>
    7688:	mov    rax,0xffffffffffffffff
    768f:	test   r14,r14
    7692:	mov    rsi,QWORD PTR [r13+0x0]
    7696:	mov    QWORD PTR [r15+0x58],rax
    769a:	mov    QWORD PTR [r15+0x68],rax
    769e:	je     76ad <fts_open@@Base+0x11d>
    76a0:	mov    eax,DWORD PTR [rbx+0x48]
    76a3:	shr    eax,0xa
    76a6:	and    eax,0x1
    76a9:	mov    BYTE PTR [rsp+0x16],al
    76ad:	test   rsi,rsi
    76b0:	je     790c <fts_open@@Base+0x37c>
    76b6:	shr    ebp,0xc
    76b9:	mov    QWORD PTR [rsp+0x18],0x0
    76c2:	xor    r12d,r12d
    76c5:	xor    ebp,0x1
    76c8:	mov    eax,ebp
    76ca:	xor    ebp,ebp
    76cc:	and    eax,0x1
    76cf:	mov    BYTE PTR [rsp+0x17],al
    76d3:	jmp    774c <fts_open@@Base+0x1bc>
    76d5:	nop    DWORD PTR [rax]
    76d8:	mov    rdx,rax
    76db:	mov    rdi,rbx
    76de:	call   6320 <__cxa_finalize@plt+0x44a8>
    76e3:	test   rax,rax
    76e6:	mov    rcx,rax
    76e9:	je     78d0 <fts_open@@Base+0x340>
    76ef:	mov    QWORD PTR [rax+0x58],0x0
    76f7:	mov    QWORD PTR [rax+0x8],r15
    76fb:	lea    rax,[rax+0x108]
    7702:	test   r12,r12
    7705:	mov    QWORD PTR [rcx+0x30],rax
    7709:	je     7870 <fts_open@@Base+0x2e0>
    770f:	cmp    BYTE PTR [rsp+0x16],0x0
    7714:	je     7870 <fts_open@@Base+0x2e0>
    771a:	mov    esi,0xb
    771f:	test   r14,r14
    7722:	mov    QWORD PTR [rcx+0xa8],0x2
    772d:	mov    WORD PTR [rcx+0x70],si
    7731:	je     78b0 <fts_open@@Base+0x320>
    7737:	mov    QWORD PTR [rcx+0x10],r12
    773b:	mov    r12,rcx
    773e:	add    rbp,0x1
    7742:	mov    rsi,QWORD PTR [r13+rbp*8+0x0]
    7747:	test   rsi,rsi
    774a:	je     77a0 <fts_open@@Base+0x210>
    774c:	mov    rdi,rsi
    774f:	mov    QWORD PTR [rsp+0x8],rsi
    7754:	call   1b60 <strlen@plt>
    7759:	cmp    rax,0x2
    775d:	mov    rsi,QWORD PTR [rsp+0x8]
    7762:	jbe    76d8 <fts_open@@Base+0x148>
    7768:	cmp    BYTE PTR [rsp+0x17],0x0
    776d:	je     76d8 <fts_open@@Base+0x148>
    7773:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2f
    7778:	jne    76d8 <fts_open@@Base+0x148>
    777e:	xchg   ax,ax
    7780:	cmp    BYTE PTR [rsi+rax*1-0x2],0x2f
    7785:	jne    76d8 <fts_open@@Base+0x148>
    778b:	sub    rax,0x1
    778f:	cmp    rax,0x1
    7793:	jne    7780 <fts_open@@Base+0x1f0>
    7795:	jmp    76d8 <fts_open@@Base+0x148>
    779a:	nop    WORD PTR [rax+rax*1+0x0]
    77a0:	test   r14,r14
    77a3:	je     77bc <fts_open@@Base+0x22c>
    77a5:	cmp    rbp,0x1
    77a9:	jbe    77bc <fts_open@@Base+0x22c>
    77ab:	mov    rsi,r12
    77ae:	mov    rdx,rbp
    77b1:	mov    rdi,rbx
    77b4:	call   6210 <__cxa_finalize@plt+0x4398>
    77b9:	mov    r12,rax
    77bc:	lea    rsi,[rip+0x3a1e]        # b1e1 <quoting_style_vals@@Base+0x81>
    77c3:	xor    edx,edx
    77c5:	mov    rdi,rbx
    77c8:	call   6320 <__cxa_finalize@plt+0x44a8>
    77cd:	test   rax,rax
    77d0:	mov    QWORD PTR [rbx],rax
    77d3:	je     78d0 <fts_open@@Base+0x340>
    77d9:	mov    edi,DWORD PTR [rbx+0x48]
    77dc:	mov    edx,0x9
    77e1:	lea    rsi,[rbx+0x58]
    77e5:	mov    QWORD PTR [rax+0x10],r12
    77e9:	mov    WORD PTR [rax+0x70],dx
    77ed:	call   6730 <__cxa_finalize@plt+0x48b8>
    77f2:	test   al,al
    77f4:	je     78d0 <fts_open@@Base+0x340>
    77fa:	mov    esi,DWORD PTR [rbx+0x48]
    77fd:	test   esi,0x204
    7803:	jne    7820 <fts_open@@Base+0x290>
    7805:	mov    edi,DWORD PTR [rbx+0x2c]
    7808:	lea    rdx,[rip+0x3d1c]        # b52b <version_etc_copyright@@Base+0x6b>
    780f:	call   67a0 <__cxa_finalize@plt+0x4928>
    7814:	test   eax,eax
    7816:	mov    DWORD PTR [rbx+0x28],eax
    7819:	jns    7820 <fts_open@@Base+0x290>
    781b:	or     DWORD PTR [rbx+0x48],0x4
    781f:	nop
    7820:	lea    rdi,[rbx+0x60]
    7824:	mov    esi,0xffffffff
    7829:	call   9920 <fts_children@@Base+0x16b0>
    782e:	add    rsp,0x28
    7832:	mov    rax,rbx
    7835:	pop    rbx
    7836:	pop    rbp
    7837:	pop    r12
    7839:	pop    r13
    783b:	pop    r14
    783d:	pop    r15
    783f:	ret    
    7840:	mov    rdi,QWORD PTR [r13+0x0]
    7844:	mov    eax,ebp
    7846:	mov    DWORD PTR [rbx+0x2c],0xffffff9c
    784d:	and    ah,0xfd
    7850:	or     eax,0x4
    7853:	test   rdi,rdi
    7856:	mov    DWORD PTR [rbx+0x48],eax
    7859:	jne    760e <fts_open@@Base+0x7e>
    785f:	mov    edx,0x1000
    7864:	jmp    7645 <fts_open@@Base+0xb5>
    7869:	nop    DWORD PTR [rax+0x0]
    7870:	xor    edx,edx
    7872:	mov    rsi,rcx
    7875:	mov    rdi,rbx
    7878:	mov    QWORD PTR [rsp+0x8],rcx
    787d:	call   6040 <__cxa_finalize@plt+0x41c8>
    7882:	mov    rcx,QWORD PTR [rsp+0x8]
    7887:	test   r14,r14
    788a:	mov    WORD PTR [rcx+0x70],ax
    788e:	jne    7737 <fts_open@@Base+0x1a7>
    7894:	test   r12,r12
    7897:	mov    QWORD PTR [rcx+0x10],0x0
    789f:	jne    78b8 <fts_open@@Base+0x328>
    78a1:	mov    QWORD PTR [rsp+0x18],rcx
    78a6:	mov    r12,rcx
    78a9:	jmp    773e <fts_open@@Base+0x1ae>
    78ae:	xchg   ax,ax
    78b0:	mov    QWORD PTR [rcx+0x10],0x0
    78b8:	mov    rax,QWORD PTR [rsp+0x18]
    78bd:	mov    QWORD PTR [rsp+0x18],rcx
    78c2:	mov    QWORD PTR [rax+0x10],rcx
    78c6:	jmp    773e <fts_open@@Base+0x1ae>
    78cb:	nop    DWORD PTR [rax+rax*1+0x0]
    78d0:	mov    rdi,r12
    78d3:	call   63b0 <__cxa_finalize@plt+0x4538>
    78d8:	mov    rdi,r15
    78db:	call   1e70 <free@plt>
    78e0:	mov    rdi,QWORD PTR [rbx+0x20]
    78e4:	call   1e70 <free@plt>
    78e9:	mov    rdi,rbx
    78ec:	xor    ebx,ebx
    78ee:	call   1e70 <free@plt>
    78f3:	jmp    782e <fts_open@@Base+0x29e>
    78f8:	nop    DWORD PTR [rax+rax*1+0x0]
    7900:	xor    r15d,r15d
    7903:	test   r14,r14
    7906:	jne    76a0 <fts_open@@Base+0x110>
    790c:	xor    r12d,r12d
    790f:	jmp    77bc <fts_open@@Base+0x22c>
    7914:	nop    DWORD PTR [rax+0x0]
    7918:	call   1ab0 <__errno_location@plt>
    791d:	xor    ebx,ebx
    791f:	mov    DWORD PTR [rax],0x16
    7925:	jmp    782e <fts_open@@Base+0x29e>
    792a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007930 <fts_close@@Base>:
    7930:	push   r12
    7932:	push   rbp
    7933:	mov    rbp,rdi
    7936:	push   rbx
    7937:	mov    rdi,QWORD PTR [rdi]
    793a:	test   rdi,rdi
    793d:	je     7983 <fts_close@@Base+0x53>
    793f:	cmp    QWORD PTR [rdi+0x58],0x0
    7944:	jns    795f <fts_close@@Base+0x2f>
    7946:	jmp    7a60 <fts_close@@Base+0x130>
    794b:	nop    DWORD PTR [rax+rax*1+0x0]
    7950:	call   1e70 <free@plt>
    7955:	cmp    QWORD PTR [rbx+0x58],0x0
    795a:	mov    rdi,rbx
    795d:	js     797b <fts_close@@Base+0x4b>
    795f:	mov    rbx,QWORD PTR [rdi+0x10]
    7963:	test   rbx,rbx
    7966:	jne    7950 <fts_close@@Base+0x20>
    7968:	mov    rbx,QWORD PTR [rdi+0x8]
    796c:	call   1e70 <free@plt>
    7971:	cmp    QWORD PTR [rbx+0x58],0x0
    7976:	mov    rdi,rbx
    7979:	jns    795f <fts_close@@Base+0x2f>
    797b:	mov    rdi,rbx
    797e:	call   1e70 <free@plt>
    7983:	mov    rdi,QWORD PTR [rbp+0x8]
    7987:	test   rdi,rdi
    798a:	je     7991 <fts_close@@Base+0x61>
    798c:	call   63b0 <__cxa_finalize@plt+0x4538>
    7991:	mov    rdi,QWORD PTR [rbp+0x10]
    7995:	call   1e70 <free@plt>
    799a:	mov    rdi,QWORD PTR [rbp+0x20]
    799e:	call   1e70 <free@plt>
    79a3:	mov    eax,DWORD PTR [rbp+0x48]
    79a6:	test   ah,0x2
    79a9:	je     7a10 <fts_close@@Base+0xe0>
    79ab:	mov    edi,DWORD PTR [rbp+0x2c]
    79ae:	test   edi,edi
    79b0:	jns    7a40 <fts_close@@Base+0x110>
    79b6:	xor    ebx,ebx
    79b8:	lea    rdi,[rbp+0x60]
    79bc:	call   6400 <__cxa_finalize@plt+0x4588>
    79c1:	mov    rdi,QWORD PTR [rbp+0x50]
    79c5:	test   rdi,rdi
    79c8:	je     79cf <fts_close@@Base+0x9f>
    79ca:	call   9100 <fts_children@@Base+0xe90>
    79cf:	test   DWORD PTR [rbp+0x48],0x102
    79d6:	mov    rdi,QWORD PTR [rbp+0x58]
    79da:	je     7a00 <fts_close@@Base+0xd0>
    79dc:	test   rdi,rdi
    79df:	je     79e6 <fts_close@@Base+0xb6>
    79e1:	call   9100 <fts_children@@Base+0xe90>
    79e6:	mov    rdi,rbp
    79e9:	call   1e70 <free@plt>
    79ee:	test   ebx,ebx
    79f0:	jne    7aa1 <fts_close@@Base+0x171>
    79f6:	mov    eax,ebx
    79f8:	pop    rbx
    79f9:	pop    rbp
    79fa:	pop    r12
    79fc:	ret    
    79fd:	nop    DWORD PTR [rax]
    7a00:	call   1e70 <free@plt>
    7a05:	jmp    79e6 <fts_close@@Base+0xb6>
    7a07:	nop    WORD PTR [rax+rax*1+0x0]
    7a10:	test   al,0x4
    7a12:	jne    79b6 <fts_close@@Base+0x86>
    7a14:	mov    edi,DWORD PTR [rbp+0x28]
    7a17:	call   1d50 <fchdir@plt>
    7a1c:	test   eax,eax
    7a1e:	jne    7a70 <fts_close@@Base+0x140>
    7a20:	mov    edi,DWORD PTR [rbp+0x28]
    7a23:	call   1c20 <close@plt>
    7a28:	test   eax,eax
    7a2a:	je     79b6 <fts_close@@Base+0x86>
    7a2c:	call   1ab0 <__errno_location@plt>
    7a31:	mov    r12,rax
    7a34:	jmp    7a98 <fts_close@@Base+0x168>
    7a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7a40:	call   1c20 <close@plt>
    7a45:	test   eax,eax
    7a47:	je     79b6 <fts_close@@Base+0x86>
    7a4d:	call   1ab0 <__errno_location@plt>
    7a52:	mov    ebx,DWORD PTR [rax]
    7a54:	jmp    79b8 <fts_close@@Base+0x88>
    7a59:	nop    DWORD PTR [rax+0x0]
    7a60:	mov    rbx,rdi
    7a63:	mov    rdi,rbx
    7a66:	call   1e70 <free@plt>
    7a6b:	jmp    7983 <fts_close@@Base+0x53>
    7a70:	call   1ab0 <__errno_location@plt>
    7a75:	mov    edi,DWORD PTR [rbp+0x28]
    7a78:	mov    r12,rax
    7a7b:	mov    ebx,DWORD PTR [rax]
    7a7d:	call   1c20 <close@plt>
    7a82:	test   eax,eax
    7a84:	je     79b8 <fts_close@@Base+0x88>
    7a8a:	test   ebx,ebx
    7a8c:	jne    79b8 <fts_close@@Base+0x88>
    7a92:	nop    WORD PTR [rax+rax*1+0x0]
    7a98:	mov    ebx,DWORD PTR [r12]
    7a9c:	jmp    79b8 <fts_close@@Base+0x88>
    7aa1:	call   1ab0 <__errno_location@plt>
    7aa6:	mov    DWORD PTR [rax],ebx
    7aa8:	mov    ebx,0xffffffff
    7aad:	jmp    79f6 <fts_close@@Base+0xc6>
    7ab2:	nop    DWORD PTR [rax+0x0]
    7ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ac0 <fts_read@@Base>:
    7ac0:	push   r14
    7ac2:	push   r13
    7ac4:	push   r12
    7ac6:	push   rbp
    7ac7:	push   rbx
    7ac8:	mov    rbp,QWORD PTR [rdi]
    7acb:	test   rbp,rbp
    7ace:	je     7bde <fts_read@@Base+0x11e>
    7ad4:	mov    edx,DWORD PTR [rdi+0x48]
    7ad7:	test   dh,0x40
    7ada:	jne    7bde <fts_read@@Base+0x11e>
    7ae0:	movzx  eax,WORD PTR [rbp+0x74]
    7ae4:	mov    ebx,0x3
    7ae9:	mov    r12,rdi
    7aec:	mov    WORD PTR [rbp+0x74],bx
    7af0:	cmp    ax,0x1
    7af4:	je     7d40 <fts_read@@Base+0x280>
    7afa:	cmp    ax,0x2
    7afe:	movzx  ecx,WORD PTR [rbp+0x70]
    7b02:	je     7bf0 <fts_read@@Base+0x130>
    7b08:	cmp    cx,0x1
    7b0c:	jne    7b40 <fts_read@@Base+0x80>
    7b0e:	jmp    7d30 <fts_read@@Base+0x270>
    7b13:	nop    DWORD PTR [rax+rax*1+0x0]
    7b18:	mov    QWORD PTR [r12],rbx
    7b1c:	mov    rdi,rbp
    7b1f:	call   1e70 <free@plt>
    7b24:	cmp    QWORD PTR [rbx+0x58],0x0
    7b29:	je     7d60 <fts_read@@Base+0x2a0>
    7b2f:	movzx  eax,WORD PTR [rbx+0x74]
    7b33:	mov    rbp,rbx
    7b36:	cmp    ax,0x4
    7b3a:	jne    7e68 <fts_read@@Base+0x3a8>
    7b40:	mov    rbx,QWORD PTR [rbp+0x10]
    7b44:	test   rbx,rbx
    7b47:	jne    7b18 <fts_read@@Base+0x58>
    7b49:	mov    rbx,QWORD PTR [rbp+0x8]
    7b4d:	cmp    QWORD PTR [rbx+0x18],0x0
    7b52:	jne    80c0 <fts_read@@Base+0x600>
    7b58:	mov    QWORD PTR [r12],rbx
    7b5c:	mov    rdi,rbp
    7b5f:	call   1e70 <free@plt>
    7b64:	cmp    QWORD PTR [rbx+0x58],0xffffffffffffffff
    7b69:	je     8022 <fts_read@@Base+0x562>
    7b6f:	cmp    WORD PTR [rbx+0x70],0xb
    7b74:	je     7caf <fts_read@@Base+0x1ef>
    7b7a:	mov    rdx,QWORD PTR [r12+0x20]
    7b7f:	mov    rax,QWORD PTR [rbx+0x48]
    7b83:	mov    BYTE PTR [rdx+rax*1],0x0
    7b87:	cmp    QWORD PTR [rbx+0x58],0x0
    7b8c:	je     7f50 <fts_read@@Base+0x490>
    7b92:	movzx  eax,WORD PTR [rbx+0x72]
    7b96:	test   al,0x2
    7b98:	je     7f08 <fts_read@@Base+0x448>
    7b9e:	mov    eax,DWORD PTR [r12+0x48]
    7ba3:	mov    edi,DWORD PTR [rbx+0x44]
    7ba6:	test   al,0x4
    7ba8:	je     7fac <fts_read@@Base+0x4ec>
    7bae:	call   1c20 <close@plt>
    7bb3:	mov    edi,DWORD PTR [r12+0x48]
    7bb8:	cmp    WORD PTR [rbx+0x70],0x2
    7bbd:	je     7bd3 <fts_read@@Base+0x113>
    7bbf:	mov    ecx,DWORD PTR [rbx+0x40]
    7bc2:	test   ecx,ecx
    7bc4:	je     7f68 <fts_read@@Base+0x4a8>
    7bca:	mov    edx,0x7
    7bcf:	mov    WORD PTR [rbx+0x70],dx
    7bd3:	and    edi,0x4000
    7bd9:	mov    rbp,rbx
    7bdc:	je     7c5a <fts_read@@Base+0x19a>
    7bde:	xor    ebp,ebp
    7be0:	pop    rbx
    7be1:	mov    rax,rbp
    7be4:	pop    rbp
    7be5:	pop    r12
    7be7:	pop    r13
    7be9:	pop    r14
    7beb:	ret    
    7bec:	nop    DWORD PTR [rax+0x0]
    7bf0:	lea    eax,[rcx-0xc]
    7bf3:	cmp    ax,0x1
    7bf7:	jbe    7c70 <fts_read@@Base+0x1b0>
    7bf9:	cmp    cx,0x1
    7bfd:	jne    7b40 <fts_read@@Base+0x80>
    7c03:	test   dl,0x40
    7c06:	je     7cb8 <fts_read@@Base+0x1f8>
    7c0c:	mov    rax,QWORD PTR [r12+0x18]
    7c11:	cmp    QWORD PTR [rbp+0x78],rax
    7c15:	je     7cb8 <fts_read@@Base+0x1f8>
    7c1b:	test   BYTE PTR [rbp+0x72],0x2
    7c1f:	jne    8100 <fts_read@@Base+0x640>
    7c25:	mov    rdi,QWORD PTR [r12+0x8]
    7c2a:	test   rdi,rdi
    7c2d:	je     7c3d <fts_read@@Base+0x17d>
    7c2f:	call   63b0 <__cxa_finalize@plt+0x4538>
    7c34:	mov    QWORD PTR [r12+0x8],0x0
    7c3d:	mov    edi,DWORD PTR [r12+0x48]
    7c42:	mov    r10d,0x6
    7c48:	lea    rsi,[r12+0x58]
    7c4d:	mov    WORD PTR [rbp+0x70],r10w
    7c52:	mov    rdx,rbp
    7c55:	call   6b10 <__cxa_finalize@plt+0x4c98>
    7c5a:	pop    rbx
    7c5b:	mov    rax,rbp
    7c5e:	pop    rbp
    7c5f:	pop    r12
    7c61:	pop    r13
    7c63:	pop    r14
    7c65:	ret    
    7c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7c70:	mov    edx,0x1
    7c75:	mov    rsi,rbp
    7c78:	call   6040 <__cxa_finalize@plt+0x41c8>
    7c7d:	cmp    ax,0x1
    7c81:	mov    WORD PTR [rbp+0x70],ax
    7c85:	je     7fcc <fts_read@@Base+0x50c>
    7c8b:	cmp    ax,0xb
    7c8f:	mov    QWORD PTR [r12],rbp
    7c93:	jne    7c5a <fts_read@@Base+0x19a>
    7c95:	nop    DWORD PTR [rax]
    7c98:	mov    rax,QWORD PTR [rbp+0xa8]
    7c9f:	cmp    rax,0x2
    7ca3:	je     8048 <fts_read@@Base+0x588>
    7ca9:	cmp    rax,0x1
    7cad:	je     7c5a <fts_read@@Base+0x19a>
    7caf:	call   1aa0 <abort@plt>
    7cb4:	nop    DWORD PTR [rax+0x0]
    7cb8:	mov    rdi,QWORD PTR [r12+0x8]
    7cbd:	test   rdi,rdi
    7cc0:	je     7ed8 <fts_read@@Base+0x418>
    7cc6:	test   dh,0x20
    7cc9:	jne    7ec2 <fts_read@@Base+0x402>
    7ccf:	mov    rcx,QWORD PTR [rbp+0x30]
    7cd3:	mov    edx,0xffffffff
    7cd8:	mov    rsi,rbp
    7cdb:	mov    rdi,r12
    7cde:	call   67f0 <__cxa_finalize@plt+0x4978>
    7ce3:	test   eax,eax
    7ce5:	je     7fa2 <fts_read@@Base+0x4e2>
    7ceb:	call   1ab0 <__errno_location@plt>
    7cf0:	mov    eax,DWORD PTR [rax]
    7cf2:	or     WORD PTR [rbp+0x72],0x1
    7cf7:	mov    DWORD PTR [rbp+0x40],eax
    7cfa:	mov    rbp,QWORD PTR [r12+0x8]
    7cff:	test   rbp,rbp
    7d02:	je     7ef6 <fts_read@@Base+0x436>
    7d08:	mov    rax,rbp
    7d0b:	nop    DWORD PTR [rax+rax*1+0x0]
    7d10:	mov    rdx,QWORD PTR [rax+0x8]
    7d14:	mov    rdx,QWORD PTR [rdx+0x30]
    7d18:	mov    QWORD PTR [rax+0x30],rdx
    7d1c:	mov    rax,QWORD PTR [rax+0x10]
    7d20:	test   rax,rax
    7d23:	jne    7d10 <fts_read@@Base+0x250>
    7d25:	jmp    7ef6 <fts_read@@Base+0x436>
    7d2a:	nop    WORD PTR [rax+rax*1+0x0]
    7d30:	cmp    ax,0x4
    7d34:	jne    7c03 <fts_read@@Base+0x143>
    7d3a:	jmp    7c1b <fts_read@@Base+0x15b>
    7d3f:	nop
    7d40:	mov    rsi,rbp
    7d43:	xor    edx,edx
    7d45:	call   6040 <__cxa_finalize@plt+0x41c8>
    7d4a:	mov    WORD PTR [rbp+0x70],ax
    7d4e:	mov    rax,rbp
    7d51:	pop    rbx
    7d52:	pop    rbp
    7d53:	pop    r12
    7d55:	pop    r13
    7d57:	pop    r14
    7d59:	ret    
    7d5a:	nop    WORD PTR [rax+rax*1+0x0]
    7d60:	mov    rdi,r12
    7d63:	call   6660 <__cxa_finalize@plt+0x47e8>
    7d68:	test   eax,eax
    7d6a:	jne    8171 <fts_read@@Base+0x6b1>
    7d70:	test   DWORD PTR [r12+0x48],0x102
    7d79:	mov    rdi,QWORD PTR [r12+0x58]
    7d7e:	je     7eb8 <fts_read@@Base+0x3f8>
    7d84:	test   rdi,rdi
    7d87:	je     7d8e <fts_read@@Base+0x2ce>
    7d89:	call   9100 <fts_children@@Base+0xe90>
    7d8e:	mov    rdx,QWORD PTR [rbx+0x60]
    7d92:	lea    rbp,[rbx+0x108]
    7d99:	mov    rdi,QWORD PTR [r12+0x20]
    7d9e:	mov    rsi,rbp
    7da1:	mov    QWORD PTR [rbx+0x48],rdx
    7da5:	add    rdx,0x1
    7da9:	call   1da0 <memmove@plt>
    7dae:	mov    esi,0x2f
    7db3:	mov    rdi,rbp
    7db6:	call   1bd0 <strrchr@plt>
    7dbb:	test   rax,rax
    7dbe:	je     7deb <fts_read@@Base+0x32b>
    7dc0:	cmp    rbp,rax
    7dc3:	je     7f90 <fts_read@@Base+0x4d0>
    7dc9:	lea    r13,[rax+0x1]
    7dcd:	mov    rdi,r13
    7dd0:	call   1b60 <strlen@plt>
    7dd5:	lea    rdx,[rax+0x1]
    7dd9:	mov    r14,rax
    7ddc:	mov    rsi,r13
    7ddf:	mov    rdi,rbp
    7de2:	call   1da0 <memmove@plt>
    7de7:	mov    QWORD PTR [rbx+0x60],r14
    7deb:	mov    rax,QWORD PTR [r12+0x20]
    7df0:	mov    edi,DWORD PTR [r12+0x48]
    7df5:	lea    rsi,[r12+0x58]
    7dfa:	mov    rbp,rbx
    7dfd:	mov    QWORD PTR [rbx+0x38],rax
    7e01:	mov    QWORD PTR [rbx+0x30],rax
    7e05:	call   6730 <__cxa_finalize@plt+0x48b8>
    7e0a:	movzx  eax,WORD PTR [rbx+0x70]
    7e0e:	cmp    ax,0xb
    7e12:	mov    QWORD PTR [r12],rbp
    7e16:	je     7c98 <fts_read@@Base+0x1d8>
    7e1c:	cmp    ax,0x1
    7e20:	jne    7c5a <fts_read@@Base+0x19a>
    7e26:	cmp    QWORD PTR [rbp+0x58],0x0
    7e2b:	jne    7e36 <fts_read@@Base+0x376>
    7e2d:	mov    rax,QWORD PTR [rbp+0x78]
    7e31:	mov    QWORD PTR [r12+0x18],rax
    7e36:	mov    edi,DWORD PTR [r12+0x48]
    7e3b:	lea    rsi,[r12+0x58]
    7e40:	mov    rdx,rbp
    7e43:	call   6a60 <__cxa_finalize@plt+0x4be8>
    7e48:	test   al,al
    7e4a:	jne    7c5a <fts_read@@Base+0x19a>
    7e50:	call   1ab0 <__errno_location@plt>
    7e55:	xor    ebp,ebp
    7e57:	mov    DWORD PTR [rax],0xc
    7e5d:	jmp    7c5a <fts_read@@Base+0x19a>
    7e62:	nop    WORD PTR [rax+rax*1+0x0]
    7e68:	cmp    ax,0x2
    7e6c:	je     810d <fts_read@@Base+0x64d>
    7e72:	mov    rax,QWORD PTR [rbp+0x8]
    7e76:	lea    rsi,[rbp+0x108]
    7e7d:	mov    rdi,QWORD PTR [rax+0x48]
    7e81:	mov    rax,QWORD PTR [rax+0x38]
    7e85:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2f
    7e8a:	lea    rdx,[rdi-0x1]
    7e8e:	cmove  rdi,rdx
    7e92:	add    rdi,QWORD PTR [r12+0x20]
    7e97:	mov    BYTE PTR [rdi],0x2f
    7e9a:	mov    rax,QWORD PTR [rbp+0x60]
    7e9e:	add    rdi,0x1
    7ea2:	lea    rdx,[rax+0x1]
    7ea6:	call   1da0 <memmove@plt>
    7eab:	movzx  eax,WORD PTR [rbp+0x70]
    7eaf:	jmp    7e0e <fts_read@@Base+0x34e>
    7eb4:	nop    DWORD PTR [rax+0x0]
    7eb8:	call   1e70 <free@plt>
    7ebd:	jmp    7d8e <fts_read@@Base+0x2ce>
    7ec2:	and    dh,0xdf
    7ec5:	mov    DWORD PTR [r12+0x48],edx
    7eca:	call   63b0 <__cxa_finalize@plt+0x4538>
    7ecf:	mov    QWORD PTR [r12+0x8],0x0
    7ed8:	mov    esi,0x3
    7edd:	mov    rdi,r12
    7ee0:	call   6bd0 <__cxa_finalize@plt+0x4d58>
    7ee5:	test   rax,rax
    7ee8:	mov    QWORD PTR [r12+0x8],rax
    7eed:	je     7fe4 <fts_read@@Base+0x524>
    7ef3:	mov    rbp,rax
    7ef6:	mov    QWORD PTR [r12+0x8],0x0
    7eff:	jmp    7e72 <fts_read@@Base+0x3b2>
    7f04:	nop    DWORD PTR [rax+0x0]
    7f08:	test   al,0x1
    7f0a:	jne    7bb3 <fts_read@@Base+0xf3>
    7f10:	mov    rsi,QWORD PTR [rbx+0x8]
    7f14:	lea    rcx,[rip+0x360f]        # b52a <version_etc_copyright@@Base+0x6a>
    7f1b:	mov    edx,0xffffffff
    7f20:	mov    rdi,r12
    7f23:	call   67f0 <__cxa_finalize@plt+0x4978>
    7f28:	test   eax,eax
    7f2a:	je     7bb3 <fts_read@@Base+0xf3>
    7f30:	call   1ab0 <__errno_location@plt>
    7f35:	mov    edi,DWORD PTR [r12+0x48]
    7f3a:	mov    eax,DWORD PTR [rax]
    7f3c:	or     edi,0x4000
    7f42:	mov    DWORD PTR [rbx+0x40],eax
    7f45:	mov    DWORD PTR [r12+0x48],edi
    7f4a:	jmp    7bb8 <fts_read@@Base+0xf8>
    7f4f:	nop
    7f50:	mov    rdi,r12
    7f53:	call   6660 <__cxa_finalize@plt+0x47e8>
    7f58:	test   eax,eax
    7f5a:	jne    7f30 <fts_read@@Base+0x470>
    7f5c:	jmp    7bb3 <fts_read@@Base+0xf3>
    7f61:	nop    DWORD PTR [rax+0x0]
    7f68:	mov    eax,0x6
    7f6d:	lea    rsi,[r12+0x58]
    7f72:	mov    rdx,rbx
    7f75:	mov    WORD PTR [rbx+0x70],ax
    7f79:	call   6b10 <__cxa_finalize@plt+0x4c98>
    7f7e:	mov    edi,DWORD PTR [r12+0x48]
    7f83:	jmp    7bd3 <fts_read@@Base+0x113>
    7f88:	nop    DWORD PTR [rax+rax*1+0x0]
    7f90:	cmp    BYTE PTR [rbx+0x109],0x0
    7f97:	jne    7dc9 <fts_read@@Base+0x309>
    7f9d:	jmp    7deb <fts_read@@Base+0x32b>
    7fa2:	mov    rbp,QWORD PTR [r12+0x8]
    7fa7:	jmp    7ef6 <fts_read@@Base+0x436>
    7fac:	test   ah,0x2
    7faf:	je     814d <fts_read@@Base+0x68d>
    7fb5:	mov    esi,edi
    7fb7:	mov    edx,0x1
    7fbc:	mov    rdi,r12
    7fbf:	call   65f0 <__cxa_finalize@plt+0x4778>
    7fc4:	mov    edi,DWORD PTR [rbx+0x44]
    7fc7:	jmp    7bae <fts_read@@Base+0xee>
    7fcc:	mov    esi,DWORD PTR [r12+0x48]
    7fd1:	test   sil,0x4
    7fd5:	je     81d7 <fts_read@@Base+0x717>
    7fdb:	mov    QWORD PTR [r12],rbp
    7fdf:	jmp    7e26 <fts_read@@Base+0x366>
    7fe4:	mov    edi,DWORD PTR [r12+0x48]
    7fe9:	test   edi,0x4000
    7fef:	jne    7bde <fts_read@@Base+0x11e>
    7ff5:	mov    r9d,DWORD PTR [rbp+0x40]
    7ff9:	test   r9d,r9d
    7ffc:	je     8010 <fts_read@@Base+0x550>
    7ffe:	cmp    WORD PTR [rbp+0x70],0x4
    8003:	je     8010 <fts_read@@Base+0x550>
    8005:	mov    r8d,0x7
    800b:	mov    WORD PTR [rbp+0x70],r8w
    8010:	lea    rsi,[r12+0x58]
    8015:	mov    rdx,rbp
    8018:	call   6b10 <__cxa_finalize@plt+0x4c98>
    801d:	jmp    7c5a <fts_read@@Base+0x19a>
    8022:	mov    rdi,rbx
    8025:	xor    ebp,ebp
    8027:	call   1e70 <free@plt>
    802c:	call   1ab0 <__errno_location@plt>
    8031:	mov    DWORD PTR [rax],0x0
    8037:	mov    QWORD PTR [r12],0x0
    803f:	jmp    7c5a <fts_read@@Base+0x19a>
    8044:	nop    DWORD PTR [rax+0x0]
    8048:	mov    rbx,QWORD PTR [rbp+0x8]
    804c:	cmp    QWORD PTR [rbx+0x68],0x0
    8051:	jne    8064 <fts_read@@Base+0x5a4>
    8053:	mov    eax,DWORD PTR [r12+0x48]
    8058:	and    eax,0x18
    805b:	cmp    eax,0x18
    805e:	je     81bd <fts_read@@Base+0x6fd>
    8064:	xor    edx,edx
    8066:	mov    rsi,rbp
    8069:	mov    rdi,r12
    806c:	call   6040 <__cxa_finalize@plt+0x41c8>
    8071:	mov    edx,DWORD PTR [rbp+0x90]
    8077:	mov    WORD PTR [rbp+0x70],ax
    807b:	and    edx,0xf000
    8081:	cmp    edx,0x4000
    8087:	jne    7e1c <fts_read@@Base+0x35c>
    808d:	cmp    QWORD PTR [rbp+0x58],0x0
    8092:	je     81ae <fts_read@@Base+0x6ee>
    8098:	mov    rcx,QWORD PTR [rbx+0x68]
    809c:	lea    rdx,[rcx-0x1]
    80a0:	cmp    rdx,0xfffffffffffffffd
    80a4:	ja     80aa <fts_read@@Base+0x5ea>
    80a6:	mov    QWORD PTR [rbx+0x68],rdx
    80aa:	cmp    ax,0x1
    80ae:	jne    7c5a <fts_read@@Base+0x19a>
    80b4:	jmp    7e36 <fts_read@@Base+0x376>
    80b9:	nop    DWORD PTR [rax+0x0]
    80c0:	mov    rax,QWORD PTR [rbx+0x48]
    80c4:	mov    rdx,QWORD PTR [r12+0x20]
    80c9:	mov    esi,0x3
    80ce:	mov    QWORD PTR [r12],rbx
    80d2:	mov    rdi,r12
    80d5:	mov    BYTE PTR [rdx+rax*1],0x0
    80d9:	call   6bd0 <__cxa_finalize@plt+0x4d58>
    80de:	test   rax,rax
    80e1:	mov    rbx,rax
    80e4:	je     8138 <fts_read@@Base+0x678>
    80e6:	mov    rdi,rbp
    80e9:	mov    rbp,rbx
    80ec:	call   1e70 <free@plt>
    80f1:	jmp    7e72 <fts_read@@Base+0x3b2>
    80f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8100:	mov    edi,DWORD PTR [rbp+0x44]
    8103:	call   1c20 <close@plt>
    8108:	jmp    7c25 <fts_read@@Base+0x165>
    810d:	mov    edx,0x1
    8112:	mov    rsi,rbx
    8115:	mov    rdi,r12
    8118:	call   6040 <__cxa_finalize@plt+0x41c8>
    811d:	cmp    ax,0x1
    8121:	mov    WORD PTR [rbx+0x70],ax
    8125:	je     8181 <fts_read@@Base+0x6c1>
    8127:	mov    esi,0x3
    812c:	mov    rbp,rbx
    812f:	mov    WORD PTR [rbx+0x74],si
    8133:	jmp    7e72 <fts_read@@Base+0x3b2>
    8138:	test   BYTE PTR [r12+0x49],0x40
    813e:	jne    7bde <fts_read@@Base+0x11e>
    8144:	mov    rbx,QWORD PTR [rbp+0x8]
    8148:	jmp    7b58 <fts_read@@Base+0x98>
    814d:	call   1d50 <fchdir@plt>
    8152:	test   eax,eax
    8154:	je     8169 <fts_read@@Base+0x6a9>
    8156:	call   1ab0 <__errno_location@plt>
    815b:	mov    eax,DWORD PTR [rax]
    815d:	mov    DWORD PTR [rbx+0x40],eax
    8160:	or     DWORD PTR [r12+0x48],0x4000
    8169:	mov    edi,DWORD PTR [rbx+0x44]
    816c:	jmp    7bae <fts_read@@Base+0xee>
    8171:	or     DWORD PTR [r12+0x48],0x4000
    817a:	xor    ebp,ebp
    817c:	jmp    7c5a <fts_read@@Base+0x19a>
    8181:	mov    esi,DWORD PTR [r12+0x48]
    8186:	test   sil,0x4
    818a:	jne    8127 <fts_read@@Base+0x667>
    818c:	mov    edi,DWORD PTR [r12+0x2c]
    8191:	lea    rdx,[rip+0x3393]        # b52b <version_etc_copyright@@Base+0x6b>
    8198:	call   67a0 <__cxa_finalize@plt+0x4928>
    819d:	test   eax,eax
    819f:	mov    DWORD PTR [rbx+0x44],eax
    81a2:	js     821b <fts_read@@Base+0x75b>
    81a4:	or     WORD PTR [rbx+0x72],0x2
    81a9:	jmp    8127 <fts_read@@Base+0x667>
    81ae:	cmp    ax,0x1
    81b2:	jne    7c5a <fts_read@@Base+0x19a>
    81b8:	jmp    7e2d <fts_read@@Base+0x36d>
    81bd:	mov    rdi,rbx
    81c0:	call   6590 <__cxa_finalize@plt+0x4718>
    81c5:	cmp    eax,0x2
    81c8:	jne    8064 <fts_read@@Base+0x5a4>
    81ce:	movzx  eax,WORD PTR [rbp+0x70]
    81d2:	jmp    7e1c <fts_read@@Base+0x35c>
    81d7:	mov    edi,DWORD PTR [r12+0x2c]
    81dc:	lea    rdx,[rip+0x3348]        # b52b <version_etc_copyright@@Base+0x6b>
    81e3:	call   67a0 <__cxa_finalize@plt+0x4928>
    81e8:	test   eax,eax
    81ea:	mov    DWORD PTR [rbp+0x44],eax
    81ed:	js     81fd <fts_read@@Base+0x73d>
    81ef:	or     WORD PTR [rbp+0x72],0x2
    81f4:	movzx  eax,WORD PTR [rbp+0x70]
    81f8:	jmp    7e0e <fts_read@@Base+0x34e>
    81fd:	call   1ab0 <__errno_location@plt>
    8202:	mov    eax,DWORD PTR [rax]
    8204:	mov    r11d,0x7
    820a:	mov    WORD PTR [rbp+0x70],r11w
    820f:	mov    DWORD PTR [rbp+0x40],eax
    8212:	mov    QWORD PTR [r12],rbp
    8216:	jmp    7c5a <fts_read@@Base+0x19a>
    821b:	call   1ab0 <__errno_location@plt>
    8220:	mov    eax,DWORD PTR [rax]
    8222:	mov    edi,0x7
    8227:	mov    WORD PTR [rbx+0x70],di
    822b:	mov    DWORD PTR [rbx+0x40],eax
    822e:	jmp    8127 <fts_read@@Base+0x667>
    8233:	nop    DWORD PTR [rax]
    8236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008240 <fts_set@@Base>:
    8240:	cmp    edx,0x4
    8243:	ja     8250 <fts_set@@Base+0x10>
    8245:	mov    WORD PTR [rsi+0x74],dx
    8249:	xor    eax,eax
    824b:	ret    
    824c:	nop    DWORD PTR [rax+0x0]
    8250:	sub    rsp,0x8
    8254:	call   1ab0 <__errno_location@plt>
    8259:	mov    DWORD PTR [rax],0x16
    825f:	mov    eax,0x1
    8264:	add    rsp,0x8
    8268:	ret    
    8269:	nop    DWORD PTR [rax+0x0]

0000000000008270 <fts_children@@Base>:
    8270:	push   r14
    8272:	push   r13
    8274:	push   r12
    8276:	push   rbp
    8277:	mov    r12d,esi
    827a:	push   rbx
    827b:	mov    rbx,rdi
    827e:	call   1ab0 <__errno_location@plt>
    8283:	test   r12d,0xffffdfff
    828a:	mov    r13,rax
    828d:	jne    8378 <fts_children@@Base+0x108>
    8293:	mov    rbp,QWORD PTR [rbx]
    8296:	mov    DWORD PTR [rax],0x0
    829c:	test   BYTE PTR [rbx+0x49],0x40
    82a0:	jne    8320 <fts_children@@Base+0xb0>
    82a2:	movzx  eax,WORD PTR [rbp+0x70]
    82a6:	cmp    ax,0x9
    82aa:	je     8310 <fts_children@@Base+0xa0>
    82ac:	cmp    ax,0x1
    82b0:	jne    8320 <fts_children@@Base+0xb0>
    82b2:	mov    rdi,QWORD PTR [rbx+0x8]
    82b6:	test   rdi,rdi
    82b9:	je     82c0 <fts_children@@Base+0x50>
    82bb:	call   63b0 <__cxa_finalize@plt+0x4538>
    82c0:	cmp    r12d,0x2000
    82c7:	mov    r14d,0x1
    82cd:	jne    82dc <fts_children@@Base+0x6c>
    82cf:	or     DWORD PTR [rbx+0x48],0x2000
    82d6:	mov    r14d,0x2
    82dc:	cmp    QWORD PTR [rbp+0x58],0x0
    82e1:	jne    82f5 <fts_children@@Base+0x85>
    82e3:	mov    rax,QWORD PTR [rbp+0x30]
    82e7:	cmp    BYTE PTR [rax],0x2f
    82ea:	je     82f5 <fts_children@@Base+0x85>
    82ec:	mov    esi,DWORD PTR [rbx+0x48]
    82ef:	test   sil,0x4
    82f3:	je     8330 <fts_children@@Base+0xc0>
    82f5:	mov    esi,r14d
    82f8:	mov    rdi,rbx
    82fb:	call   6bd0 <__cxa_finalize@plt+0x4d58>
    8300:	mov    QWORD PTR [rbx+0x8],rax
    8304:	pop    rbx
    8305:	pop    rbp
    8306:	pop    r12
    8308:	pop    r13
    830a:	pop    r14
    830c:	ret    
    830d:	nop    DWORD PTR [rax]
    8310:	pop    rbx
    8311:	mov    rax,QWORD PTR [rbp+0x10]
    8315:	pop    rbp
    8316:	pop    r12
    8318:	pop    r13
    831a:	pop    r14
    831c:	ret    
    831d:	nop    DWORD PTR [rax]
    8320:	pop    rbx
    8321:	xor    eax,eax
    8323:	pop    rbp
    8324:	pop    r12
    8326:	pop    r13
    8328:	pop    r14
    832a:	ret    
    832b:	nop    DWORD PTR [rax+rax*1+0x0]
    8330:	mov    edi,DWORD PTR [rbx+0x2c]
    8333:	lea    rdx,[rip+0x31f1]        # b52b <version_etc_copyright@@Base+0x6b>
    833a:	call   67a0 <__cxa_finalize@plt+0x4928>
    833f:	test   eax,eax
    8341:	mov    ebp,eax
    8343:	js     8399 <fts_children@@Base+0x129>
    8345:	mov    esi,r14d
    8348:	mov    rdi,rbx
    834b:	call   6bd0 <__cxa_finalize@plt+0x4d58>
    8350:	test   BYTE PTR [rbx+0x49],0x2
    8354:	mov    QWORD PTR [rbx+0x8],rax
    8358:	jne    8388 <fts_children@@Base+0x118>
    835a:	mov    edi,ebp
    835c:	call   1d50 <fchdir@plt>
    8361:	test   eax,eax
    8363:	jne    83a8 <fts_children@@Base+0x138>
    8365:	mov    edi,ebp
    8367:	call   1c20 <close@plt>
    836c:	mov    rax,QWORD PTR [rbx+0x8]
    8370:	jmp    8304 <fts_children@@Base+0x94>
    8372:	nop    WORD PTR [rax+rax*1+0x0]
    8378:	mov    DWORD PTR [rax],0x16
    837e:	xor    eax,eax
    8380:	jmp    8304 <fts_children@@Base+0x94>
    8385:	nop    DWORD PTR [rax]
    8388:	mov    edx,0x1
    838d:	mov    esi,ebp
    838f:	mov    rdi,rbx
    8392:	call   65f0 <__cxa_finalize@plt+0x4778>
    8397:	jmp    836c <fts_children@@Base+0xfc>
    8399:	mov    QWORD PTR [rbx+0x8],0x0
    83a1:	xor    eax,eax
    83a3:	jmp    8304 <fts_children@@Base+0x94>
    83a8:	mov    ebx,DWORD PTR [r13+0x0]
    83ac:	mov    edi,ebp
    83ae:	call   1c20 <close@plt>
    83b3:	xor    eax,eax
    83b5:	mov    DWORD PTR [r13+0x0],ebx
    83b9:	jmp    8304 <fts_children@@Base+0x94>
    83be:	xchg   ax,ax
    83c0:	push   r13
    83c2:	push   r12
    83c4:	mov    r13,rsi
    83c7:	push   rbp
    83c8:	push   rbx
    83c9:	mov    rbx,rdi
    83cc:	mov    r12,rdx
    83cf:	sub    rsp,0x18
    83d3:	mov    rax,QWORD PTR fs:0x28
    83dc:	mov    QWORD PTR [rsp+0x8],rax
    83e1:	xor    eax,eax
    83e3:	lea    rax,[rsp+0x4]
    83e8:	test   rdi,rdi
    83eb:	cmove  rbx,rax
    83ef:	mov    rdi,rbx
    83f2:	call   1bb0 <mbrtowc@plt>
    83f7:	cmp    rax,0xfffffffffffffffd
    83fb:	mov    rbp,rax
    83fe:	jbe    8420 <fts_children@@Base+0x1b0>
    8400:	test   r12,r12
    8403:	je     8420 <fts_children@@Base+0x1b0>
    8405:	xor    edi,edi
    8407:	call   85e0 <fts_children@@Base+0x370>
    840c:	test   al,al
    840e:	jne    8420 <fts_children@@Base+0x1b0>
    8410:	movzx  eax,BYTE PTR [r13+0x0]
    8415:	mov    ebp,0x1
    841a:	mov    DWORD PTR [rbx],eax
    841c:	nop    DWORD PTR [rax+0x0]
    8420:	mov    rdx,QWORD PTR [rsp+0x8]
    8425:	xor    rdx,QWORD PTR fs:0x28
    842e:	mov    rax,rbp
    8431:	jne    843e <fts_children@@Base+0x1ce>
    8433:	add    rsp,0x18
    8437:	pop    rbx
    8438:	pop    rbp
    8439:	pop    r12
    843b:	pop    r13
    843d:	ret    
    843e:	call   1b90 <__stack_chk_fail@plt>
    8443:	nop    WORD PTR cs:[rax+rax*1+0x0]
    844d:	nop    DWORD PTR [rax]
    8450:	push   r12
    8452:	push   rbp
    8453:	mov    rbp,rdi
    8456:	push   rbx
    8457:	call   1ae0 <__fpending@plt>
    845c:	mov    ebx,DWORD PTR [rbp+0x0]
    845f:	mov    rdi,rbp
    8462:	mov    r12,rax
    8465:	call   9ed0 <fts_children@@Base+0x1c60>
    846a:	and    ebx,0x20
    846d:	test   ebx,ebx
    846f:	jne    8488 <fts_children@@Base+0x218>
    8471:	test   eax,eax
    8473:	je     847f <fts_children@@Base+0x20f>
    8475:	test   r12,r12
    8478:	mov    eax,0xffffffff
    847d:	je     84b8 <fts_children@@Base+0x248>
    847f:	pop    rbx
    8480:	pop    rbp
    8481:	pop    r12
    8483:	ret    
    8484:	nop    DWORD PTR [rax+0x0]
    8488:	test   eax,eax
    848a:	jne    84a8 <fts_children@@Base+0x238>
    848c:	call   1ab0 <__errno_location@plt>
    8491:	mov    DWORD PTR [rax],0x0
    8497:	mov    eax,0xffffffff
    849c:	pop    rbx
    849d:	pop    rbp
    849e:	pop    r12
    84a0:	ret    
    84a1:	nop    DWORD PTR [rax+0x0]
    84a8:	pop    rbx
    84a9:	mov    eax,0xffffffff
    84ae:	pop    rbp
    84af:	pop    r12
    84b1:	ret    
    84b2:	nop    WORD PTR [rax+rax*1+0x0]
    84b8:	call   1ab0 <__errno_location@plt>
    84bd:	cmp    DWORD PTR [rax],0x9
    84c0:	pop    rbx
    84c1:	pop    rbp
    84c2:	pop    r12
    84c4:	setne  al
    84c7:	movzx  eax,al
    84ca:	neg    eax
    84cc:	ret    
    84cd:	nop    DWORD PTR [rax]
    84d0:	mov    QWORD PTR [rdi+0x10],0x0
    84d8:	mov    DWORD PTR [rdi+0x18],0x95f616
    84df:	ret    
    84e0:	cmp    DWORD PTR [rdi+0x18],0x95f616
    84e7:	jne    8547 <fts_children@@Base+0x2d7>
    84e9:	mov    rdx,QWORD PTR [rdi+0x10]
    84ed:	mov    rcx,QWORD PTR [rsi+0x8]
    84f1:	test   rdx,rdx
    84f4:	je     8510 <fts_children@@Base+0x2a0>
    84f6:	cmp    QWORD PTR [rdi],rcx
    84f9:	je     8528 <fts_children@@Base+0x2b8>
    84fb:	lea    r8,[rdx+0x1]
    84ff:	xor    eax,eax
    8501:	test   rdx,r8
    8504:	mov    QWORD PTR [rdi+0x10],r8
    8508:	je     8540 <fts_children@@Base+0x2d0>
    850a:	repz ret 
    850c:	nop    DWORD PTR [rax+0x0]
    8510:	mov    QWORD PTR [rdi+0x10],0x1
    8518:	mov    rax,QWORD PTR [rsi]
    851b:	mov    QWORD PTR [rdi],rcx
    851e:	mov    QWORD PTR [rdi+0x8],rax
    8522:	xor    eax,eax
    8524:	ret    
    8525:	nop    DWORD PTR [rax]
    8528:	mov    rax,QWORD PTR [rdi+0x8]
    852c:	cmp    QWORD PTR [rsi],rax
    852f:	jne    84fb <fts_children@@Base+0x28b>
    8531:	mov    eax,0x1
    8536:	ret    
    8537:	nop    WORD PTR [rax+rax*1+0x0]
    8540:	test   r8,r8
    8543:	je     8531 <fts_children@@Base+0x2c1>
    8545:	jmp    8518 <fts_children@@Base+0x2a8>
    8547:	lea    rcx,[rip+0x3052]        # b5a0 <version_etc_copyright@@Base+0xe0>
    854e:	lea    rsi,[rip+0x301b]        # b570 <version_etc_copyright@@Base+0xb0>
    8555:	lea    rdi,[rip+0x3026]        # b582 <version_etc_copyright@@Base+0xc2>
    855c:	sub    rsp,0x8
    8560:	mov    edx,0x3c
    8565:	call   1bf0 <__assert_fail@plt>
    856a:	nop    WORD PTR [rax+rax*1+0x0]
    8570:	sub    rsp,0x58
    8574:	mov    QWORD PTR [rsp+0x30],rdx
    8579:	xor    edx,edx
    857b:	mov    rax,QWORD PTR fs:0x28
    8584:	mov    QWORD PTR [rsp+0x18],rax
    8589:	xor    eax,eax
    858b:	test   sil,0x40
    858f:	jne    85b8 <fts_children@@Base+0x348>
    8591:	xor    eax,eax
    8593:	call   1dc0 <open@plt>
    8598:	mov    edi,eax
    859a:	call   9e90 <fts_children@@Base+0x1c20>
    859f:	mov    rcx,QWORD PTR [rsp+0x18]
    85a4:	xor    rcx,QWORD PTR fs:0x28
    85ad:	jne    85d9 <fts_children@@Base+0x369>
    85af:	add    rsp,0x58
    85b3:	ret    
    85b4:	nop    DWORD PTR [rax+0x0]
    85b8:	lea    rax,[rsp+0x60]
    85bd:	mov    DWORD PTR [rsp],0x10
    85c4:	mov    edx,DWORD PTR [rsp+0x30]
    85c8:	mov    QWORD PTR [rsp+0x8],rax
    85cd:	lea    rax,[rsp+0x20]
    85d2:	mov    QWORD PTR [rsp+0x10],rax
    85d7:	jmp    8591 <fts_children@@Base+0x321>
    85d9:	call   1b90 <__stack_chk_fail@plt>
    85de:	xchg   ax,ax
    85e0:	sub    rsp,0x8
    85e4:	xor    esi,esi
    85e6:	call   1d80 <setlocale@plt>
    85eb:	mov    rdx,rax
    85ee:	mov    eax,0x1
    85f3:	test   rdx,rdx
    85f6:	je     8617 <fts_children@@Base+0x3a7>
    85f8:	lea    rdi,[rip+0x2fad]        # b5ac <version_etc_copyright@@Base+0xec>
    85ff:	mov    ecx,0x2
    8604:	mov    rsi,rdx
    8607:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8609:	seta   sil
    860d:	setb   cl
    8610:	xor    eax,eax
    8612:	cmp    sil,cl
    8615:	jne    8620 <fts_children@@Base+0x3b0>
    8617:	add    rsp,0x8
    861b:	ret    
    861c:	nop    DWORD PTR [rax+0x0]
    8620:	lea    rdi,[rip+0x2f87]        # b5ae <version_etc_copyright@@Base+0xee>
    8627:	mov    ecx,0x6
    862c:	mov    rsi,rdx
    862f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8631:	setne  al
    8634:	add    rsp,0x8
    8638:	ret    
    8639:	nop    DWORD PTR [rax+0x0]
    8640:	cmp    rdi,0xa
    8644:	mov    eax,0xa
    8649:	movabs r9,0xaaaaaaaaaaaaaaab
    8653:	cmovb  rdi,rax
    8657:	or     rdi,0x1
    865b:	cmp    rdi,0xffffffffffffffff
    865f:	je     86cf <fts_children@@Base+0x45f>
    8661:	nop    DWORD PTR [rax+0x0]
    8668:	mov    rax,rdi
    866b:	mov    rcx,rdi
    866e:	mul    r9
    8671:	mov    rax,rdx
    8674:	shr    rax,1
    8677:	lea    rax,[rax+rax*2]
    867b:	sub    rcx,rax
    867e:	cmp    rdi,0x9
    8682:	mov    rax,rcx
    8685:	jbe    86c0 <fts_children@@Base+0x450>
    8687:	test   rcx,rcx
    868a:	je     86c5 <fts_children@@Base+0x455>
    868c:	mov    r8d,0x10
    8692:	mov    esi,0x9
    8697:	mov    ecx,0x3
    869c:	jmp    86a9 <fts_children@@Base+0x439>
    869e:	xchg   ax,ax
    86a0:	add    r8,0x8
    86a4:	test   rdx,rdx
    86a7:	je     86c5 <fts_children@@Base+0x455>
    86a9:	add    rcx,0x2
    86ad:	xor    edx,edx
    86af:	mov    rax,rdi
    86b2:	div    rcx
    86b5:	add    rsi,r8
    86b8:	cmp    rsi,rdi
    86bb:	mov    rax,rdx
    86be:	jb     86a0 <fts_children@@Base+0x430>
    86c0:	test   rax,rax
    86c3:	jne    86cf <fts_children@@Base+0x45f>
    86c5:	add    rdi,0x2
    86c9:	cmp    rdi,0xffffffffffffffff
    86cd:	jne    8668 <fts_children@@Base+0x3f8>
    86cf:	mov    rax,rdi
    86d2:	ret    
    86d3:	nop    DWORD PTR [rax]
    86d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    86e0:	mov    rax,rdi
    86e3:	xor    edx,edx
    86e5:	ror    rax,0x3
    86e9:	div    rsi
    86ec:	mov    rax,rdx
    86ef:	ret    
    86f0:	cmp    rdi,rsi
    86f3:	sete   al
    86f6:	ret    
    86f7:	nop    WORD PTR [rax+rax*1+0x0]
    8700:	push   rbx
    8701:	mov    rbx,rdi
    8704:	mov    rdi,rsi
    8707:	mov    rsi,QWORD PTR [rbx+0x10]
    870b:	call   QWORD PTR [rbx+0x30]
    870e:	cmp    QWORD PTR [rbx+0x10],rax
    8712:	jbe    871d <fts_children@@Base+0x4ad>
    8714:	shl    rax,0x4
    8718:	add    rax,QWORD PTR [rbx]
    871b:	pop    rbx
    871c:	ret    
    871d:	call   1aa0 <abort@plt>
    8722:	nop    DWORD PTR [rax+0x0]
    8726:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8730:	push   r14
    8732:	push   r13
    8734:	mov    r14,rdx
    8737:	push   r12
    8739:	push   rbp
    873a:	mov    r12,rdi
    873d:	push   rbx
    873e:	mov    rbp,rsi
    8741:	mov    r13d,ecx
    8744:	call   8700 <fts_children@@Base+0x490>
    8749:	mov    QWORD PTR [r14],rax
    874c:	mov    rsi,QWORD PTR [rax]
    874f:	test   rsi,rsi
    8752:	je     8840 <fts_children@@Base+0x5d0>
    8758:	cmp    rsi,rbp
    875b:	mov    rbx,rax
    875e:	je     87f3 <fts_children@@Base+0x583>
    8764:	mov    rdi,rbp
    8767:	call   QWORD PTR [r12+0x38]
    876c:	test   al,al
    876e:	jne    87f0 <fts_children@@Base+0x580>
    8774:	mov    rax,QWORD PTR [rbx+0x8]
    8778:	test   rax,rax
    877b:	je     8840 <fts_children@@Base+0x5d0>
    8781:	mov    rsi,QWORD PTR [rax]
    8784:	cmp    rbp,rsi
    8787:	jne    87a9 <fts_children@@Base+0x539>
    8789:	jmp    87bc <fts_children@@Base+0x54c>
    878b:	nop    DWORD PTR [rax+rax*1+0x0]
    8790:	mov    rbx,QWORD PTR [rbx+0x8]
    8794:	mov    rax,QWORD PTR [rbx+0x8]
    8798:	test   rax,rax
    879b:	je     8840 <fts_children@@Base+0x5d0>
    87a1:	mov    rsi,QWORD PTR [rax]
    87a4:	cmp    rsi,rbp
    87a7:	je     87bc <fts_children@@Base+0x54c>
    87a9:	mov    rdi,rbp
    87ac:	call   QWORD PTR [r12+0x38]
    87b1:	test   al,al
    87b3:	je     8790 <fts_children@@Base+0x520>
    87b5:	mov    rax,QWORD PTR [rbx+0x8]
    87b9:	mov    rsi,QWORD PTR [rax]
    87bc:	test   r13b,r13b
    87bf:	je     87de <fts_children@@Base+0x56e>
    87c1:	mov    rdx,QWORD PTR [rax+0x8]
    87c5:	mov    QWORD PTR [rbx+0x8],rdx
    87c9:	mov    QWORD PTR [rax],0x0
    87d0:	mov    rdx,QWORD PTR [r12+0x48]
    87d5:	mov    QWORD PTR [rax+0x8],rdx
    87d9:	mov    QWORD PTR [r12+0x48],rax
    87de:	pop    rbx
    87df:	mov    rax,rsi
    87e2:	pop    rbp
    87e3:	pop    r12
    87e5:	pop    r13
    87e7:	pop    r14
    87e9:	ret    
    87ea:	nop    WORD PTR [rax+rax*1+0x0]
    87f0:	mov    rsi,QWORD PTR [rbx]
    87f3:	test   r13b,r13b
    87f6:	je     87de <fts_children@@Base+0x56e>
    87f8:	mov    rax,QWORD PTR [rbx+0x8]
    87fc:	test   rax,rax
    87ff:	je     8830 <fts_children@@Base+0x5c0>
    8801:	movdqu xmm0,XMMWORD PTR [rax]
    8805:	movups XMMWORD PTR [rbx],xmm0
    8808:	mov    QWORD PTR [rax],0x0
    880f:	mov    rdx,QWORD PTR [r12+0x48]
    8814:	mov    QWORD PTR [rax+0x8],rdx
    8818:	mov    QWORD PTR [r12+0x48],rax
    881d:	mov    rax,rsi
    8820:	pop    rbx
    8821:	pop    rbp
    8822:	pop    r12
    8824:	pop    r13
    8826:	pop    r14
    8828:	ret    
    8829:	nop    DWORD PTR [rax+0x0]
    8830:	mov    QWORD PTR [rbx],0x0
    8837:	jmp    87de <fts_children@@Base+0x56e>
    8839:	nop    DWORD PTR [rax+0x0]
    8840:	xor    esi,esi
    8842:	pop    rbx
    8843:	mov    rax,rsi
    8846:	pop    rbp
    8847:	pop    r12
    8849:	pop    r13
    884b:	pop    r14
    884d:	ret    
    884e:	xchg   ax,ax
    8850:	mov    rdx,QWORD PTR [rdi]
    8853:	lea    rcx,[rip+0x2dd6]        # b630 <version_etc_copyright@@Base+0x170>
    885a:	mov    eax,0x1
    885f:	cmp    rdx,rcx
    8862:	je     88c5 <fts_children@@Base+0x655>
    8864:	movss  xmm0,DWORD PTR [rdx+0x8]
    8869:	ucomiss xmm0,DWORD PTR [rip+0x2dd4]        # b644 <version_etc_copyright@@Base+0x184>
    8870:	jbe    88c0 <fts_children@@Base+0x650>
    8872:	movss  xmm1,DWORD PTR [rip+0x2dce]        # b648 <version_etc_copyright@@Base+0x188>
    887a:	ucomiss xmm1,xmm0
    887d:	jbe    88c0 <fts_children@@Base+0x650>
    887f:	movss  xmm1,DWORD PTR [rdx+0xc]
    8884:	ucomiss xmm1,DWORD PTR [rip+0x2dc1]        # b64c <version_etc_copyright@@Base+0x18c>
    888b:	jbe    88c0 <fts_children@@Base+0x650>
    888d:	movss  xmm1,DWORD PTR [rdx]
    8891:	ucomiss xmm1,DWORD PTR [rip+0x2db8]        # b650 <version_etc_copyright@@Base+0x190>
    8898:	jb     88c0 <fts_children@@Base+0x650>
    889a:	addss  xmm1,DWORD PTR [rip+0x2da2]        # b644 <version_etc_copyright@@Base+0x184>
    88a2:	movss  xmm2,DWORD PTR [rdx+0x4]
    88a7:	ucomiss xmm2,xmm1
    88aa:	jbe    88c0 <fts_children@@Base+0x650>
    88ac:	movss  xmm3,DWORD PTR [rip+0x2da0]        # b654 <version_etc_copyright@@Base+0x194>
    88b4:	ucomiss xmm3,xmm2
    88b7:	jb     88c0 <fts_children@@Base+0x650>
    88b9:	ucomiss xmm0,xmm1
    88bc:	ja     88c5 <fts_children@@Base+0x655>
    88be:	xchg   ax,ax
    88c0:	mov    QWORD PTR [rdi],rcx
    88c3:	xor    eax,eax
    88c5:	repz ret 
    88c7:	nop    WORD PTR [rax+rax*1+0x0]
    88d0:	push   r15
    88d2:	push   r14
    88d4:	push   r13
    88d6:	push   r12
    88d8:	push   rbp
    88d9:	push   rbx
    88da:	sub    rsp,0x8
    88de:	mov    r12,QWORD PTR [rsi]
    88e1:	cmp    r12,QWORD PTR [rsi+0x8]
    88e5:	jae    89c8 <fts_children@@Base+0x758>
    88eb:	mov    rbp,rdi
    88ee:	mov    r13,rsi
    88f1:	mov    r14d,edx
    88f4:	nop    DWORD PTR [rax+0x0]
    88f8:	mov    r15,QWORD PTR [r12]
    88fc:	test   r15,r15
    88ff:	je     89ba <fts_children@@Base+0x74a>
    8905:	mov    rbx,QWORD PTR [r12+0x8]
    890a:	test   rbx,rbx
    890d:	jne    892c <fts_children@@Base+0x6bc>
    890f:	jmp    896b <fts_children@@Base+0x6fb>
    8911:	nop    DWORD PTR [rax+0x0]
    8918:	mov    rcx,QWORD PTR [rax+0x8]
    891c:	test   rdx,rdx
    891f:	mov    QWORD PTR [rbx+0x8],rcx
    8923:	mov    QWORD PTR [rax+0x8],rbx
    8927:	mov    rbx,rdx
    892a:	je     8967 <fts_children@@Base+0x6f7>
    892c:	mov    r15,QWORD PTR [rbx]
    892f:	mov    rdi,rbp
    8932:	mov    rsi,r15
    8935:	call   8700 <fts_children@@Base+0x490>
    893a:	cmp    QWORD PTR [rax],0x0
    893e:	mov    rdx,QWORD PTR [rbx+0x8]
    8942:	jne    8918 <fts_children@@Base+0x6a8>
    8944:	mov    QWORD PTR [rax],r15
    8947:	add    QWORD PTR [rbp+0x18],0x1
    894c:	test   rdx,rdx
    894f:	mov    QWORD PTR [rbx],0x0
    8956:	mov    rax,QWORD PTR [rbp+0x48]
    895a:	mov    QWORD PTR [rbx+0x8],rax
    895e:	mov    QWORD PTR [rbp+0x48],rbx
    8962:	mov    rbx,rdx
    8965:	jne    892c <fts_children@@Base+0x6bc>
    8967:	mov    r15,QWORD PTR [r12]
    896b:	test   r14b,r14b
    896e:	mov    QWORD PTR [r12+0x8],0x0
    8977:	jne    89ba <fts_children@@Base+0x74a>
    8979:	mov    rsi,r15
    897c:	mov    rdi,rbp
    897f:	call   8700 <fts_children@@Base+0x490>
    8984:	cmp    QWORD PTR [rax],0x0
    8988:	mov    rbx,rax
    898b:	je     89e0 <fts_children@@Base+0x770>
    898d:	mov    rax,QWORD PTR [rbp+0x48]
    8991:	test   rax,rax
    8994:	je     89f0 <fts_children@@Base+0x780>
    8996:	mov    rdx,QWORD PTR [rax+0x8]
    899a:	mov    QWORD PTR [rbp+0x48],rdx
    899e:	mov    rdx,QWORD PTR [rbx+0x8]
    89a2:	mov    QWORD PTR [rax],r15
    89a5:	mov    QWORD PTR [rax+0x8],rdx
    89a9:	mov    QWORD PTR [rbx+0x8],rax
    89ad:	mov    QWORD PTR [r12],0x0
    89b5:	sub    QWORD PTR [r13+0x18],0x1
    89ba:	add    r12,0x10
    89be:	cmp    QWORD PTR [r13+0x8],r12
    89c2:	ja     88f8 <fts_children@@Base+0x688>
    89c8:	add    rsp,0x8
    89cc:	mov    eax,0x1
    89d1:	pop    rbx
    89d2:	pop    rbp
    89d3:	pop    r12
    89d5:	pop    r13
    89d7:	pop    r14
    89d9:	pop    r15
    89db:	ret    
    89dc:	nop    DWORD PTR [rax+0x0]
    89e0:	mov    QWORD PTR [rax],r15
    89e3:	add    QWORD PTR [rbp+0x18],0x1
    89e8:	jmp    89ad <fts_children@@Base+0x73d>
    89ea:	nop    WORD PTR [rax+rax*1+0x0]
    89f0:	mov    edi,0x10
    89f5:	call   1ce0 <malloc@plt>
    89fa:	test   rax,rax
    89fd:	jne    899e <fts_children@@Base+0x72e>
    89ff:	add    rsp,0x8
    8a03:	xor    eax,eax
    8a05:	pop    rbx
    8a06:	pop    rbp
    8a07:	pop    r12
    8a09:	pop    r13
    8a0b:	pop    r14
    8a0d:	pop    r15
    8a0f:	ret    
    8a10:	mov    rax,QWORD PTR [rdi+0x10]
    8a14:	ret    
    8a15:	nop
    8a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8a20:	mov    rax,QWORD PTR [rdi+0x18]
    8a24:	ret    
    8a25:	nop
    8a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8a30:	mov    rax,QWORD PTR [rdi+0x20]
    8a34:	ret    
    8a35:	nop
    8a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8a40:	mov    rsi,QWORD PTR [rdi]
    8a43:	mov    rdi,QWORD PTR [rdi+0x8]
    8a47:	xor    eax,eax
    8a49:	cmp    rsi,rdi
    8a4c:	jae    8a87 <fts_children@@Base+0x817>
    8a4e:	xchg   ax,ax
    8a50:	cmp    QWORD PTR [rsi],0x0
    8a54:	je     8a7c <fts_children@@Base+0x80c>
    8a56:	mov    rdx,QWORD PTR [rsi+0x8]
    8a5a:	mov    ecx,0x1
    8a5f:	test   rdx,rdx
    8a62:	je     8a75 <fts_children@@Base+0x805>
    8a64:	nop    DWORD PTR [rax+0x0]
    8a68:	mov    rdx,QWORD PTR [rdx+0x8]
    8a6c:	add    rcx,0x1
    8a70:	test   rdx,rdx
    8a73:	jne    8a68 <fts_children@@Base+0x7f8>
    8a75:	cmp    rax,rcx
    8a78:	cmovb  rax,rcx
    8a7c:	add    rsi,0x10
    8a80:	cmp    rsi,rdi
    8a83:	jb     8a50 <fts_children@@Base+0x7e0>
    8a85:	repz ret 
    8a87:	repz ret 
    8a89:	nop    DWORD PTR [rax+0x0]
    8a90:	mov    rcx,QWORD PTR [rdi]
    8a93:	mov    r8,QWORD PTR [rdi+0x8]
    8a97:	xor    edx,edx
    8a99:	xor    esi,esi
    8a9b:	cmp    rcx,r8
    8a9e:	jae    8ad6 <fts_children@@Base+0x866>
    8aa0:	cmp    QWORD PTR [rcx],0x0
    8aa4:	je     8acd <fts_children@@Base+0x85d>
    8aa6:	mov    rax,QWORD PTR [rcx+0x8]
    8aaa:	add    rsi,0x1
    8aae:	add    rdx,0x1
    8ab2:	test   rax,rax
    8ab5:	je     8acd <fts_children@@Base+0x85d>
    8ab7:	nop    WORD PTR [rax+rax*1+0x0]
    8ac0:	mov    rax,QWORD PTR [rax+0x8]
    8ac4:	add    rdx,0x1
    8ac8:	test   rax,rax
    8acb:	jne    8ac0 <fts_children@@Base+0x850>
    8acd:	add    rcx,0x10
    8ad1:	cmp    rcx,r8
    8ad4:	jb     8aa0 <fts_children@@Base+0x830>
    8ad6:	xor    eax,eax
    8ad8:	cmp    QWORD PTR [rdi+0x18],rsi
    8adc:	je     8ae0 <fts_children@@Base+0x870>
    8ade:	repz ret 
    8ae0:	cmp    QWORD PTR [rdi+0x20],rdx
    8ae4:	sete   al
    8ae7:	ret    
    8ae8:	nop    DWORD PTR [rax+rax*1+0x0]
    8af0:	push   r13
    8af2:	push   r12
    8af4:	mov    r12,rsi
    8af7:	push   rbp
    8af8:	push   rbx
    8af9:	xor    ebx,ebx
    8afb:	sub    rsp,0x8
    8aff:	mov    rsi,QWORD PTR [rdi]
    8b02:	mov    rcx,QWORD PTR [rdi+0x20]
    8b06:	mov    rbp,QWORD PTR [rdi+0x10]
    8b0a:	mov    r13,QWORD PTR [rdi+0x18]
    8b0e:	mov    rdi,QWORD PTR [rdi+0x8]
    8b12:	cmp    rsi,rdi
    8b15:	jae    8b55 <fts_children@@Base+0x8e5>
    8b17:	nop    WORD PTR [rax+rax*1+0x0]
    8b20:	cmp    QWORD PTR [rsi],0x0
    8b24:	je     8b4c <fts_children@@Base+0x8dc>
    8b26:	mov    rax,QWORD PTR [rsi+0x8]
    8b2a:	mov    edx,0x1
    8b2f:	test   rax,rax
    8b32:	je     8b45 <fts_children@@Base+0x8d5>
    8b34:	nop    DWORD PTR [rax+0x0]
    8b38:	mov    rax,QWORD PTR [rax+0x8]
    8b3c:	add    rdx,0x1
    8b40:	test   rax,rax
    8b43:	jne    8b38 <fts_children@@Base+0x8c8>
    8b45:	cmp    rbx,rdx
    8b48:	cmovb  rbx,rdx
    8b4c:	add    rsi,0x10
    8b50:	cmp    rsi,rdi
    8b53:	jb     8b20 <fts_children@@Base+0x8b0>
    8b55:	lea    rdx,[rip+0x2a58]        # b5b4 <version_etc_copyright@@Base+0xf4>
    8b5c:	mov    esi,0x1
    8b61:	mov    rdi,r12
    8b64:	xor    eax,eax
    8b66:	call   1e30 <__fprintf_chk@plt>
    8b6b:	lea    rdx,[rip+0x2a5a]        # b5cc <version_etc_copyright@@Base+0x10c>
    8b72:	xor    eax,eax
    8b74:	mov    rcx,rbp
    8b77:	mov    esi,0x1
    8b7c:	mov    rdi,r12
    8b7f:	call   1e30 <__fprintf_chk@plt>
    8b84:	test   r13,r13
    8b87:	js     8bf0 <fts_children@@Base+0x980>
    8b89:	pxor   xmm0,xmm0
    8b8d:	test   rbp,rbp
    8b90:	cvtsi2sd xmm0,r13
    8b95:	mulsd  xmm0,QWORD PTR [rip+0x2acb]        # b668 <version_etc_copyright@@Base+0x1a8>
    8b9d:	js     8c19 <fts_children@@Base+0x9a9>
    8b9f:	pxor   xmm1,xmm1
    8ba3:	cvtsi2sd xmm1,rbp
    8ba8:	divsd  xmm0,xmm1
    8bac:	lea    rdx,[rip+0x2a4d]        # b600 <version_etc_copyright@@Base+0x140>
    8bb3:	mov    rcx,r13
    8bb6:	mov    rdi,r12
    8bb9:	mov    esi,0x1
    8bbe:	mov    eax,0x1
    8bc3:	call   1e30 <__fprintf_chk@plt>
    8bc8:	add    rsp,0x8
    8bcc:	mov    rcx,rbx
    8bcf:	mov    rdi,r12
    8bd2:	pop    rbx
    8bd3:	pop    rbp
    8bd4:	pop    r12
    8bd6:	pop    r13
    8bd8:	lea    rdx,[rip+0x2a05]        # b5e4 <version_etc_copyright@@Base+0x124>
    8bdf:	mov    esi,0x1
    8be4:	xor    eax,eax
    8be6:	jmp    1e30 <__fprintf_chk@plt>
    8beb:	nop    DWORD PTR [rax+rax*1+0x0]
    8bf0:	mov    rax,r13
    8bf3:	mov    rdx,r13
    8bf6:	pxor   xmm0,xmm0
    8bfa:	shr    rax,1
    8bfd:	and    edx,0x1
    8c00:	or     rax,rdx
    8c03:	test   rbp,rbp
    8c06:	cvtsi2sd xmm0,rax
    8c0b:	addsd  xmm0,xmm0
    8c0f:	mulsd  xmm0,QWORD PTR [rip+0x2a51]        # b668 <version_etc_copyright@@Base+0x1a8>
    8c17:	jns    8b9f <fts_children@@Base+0x92f>
    8c19:	mov    rax,rbp
    8c1c:	pxor   xmm1,xmm1
    8c20:	shr    rax,1
    8c23:	and    ebp,0x1
    8c26:	or     rax,rbp
    8c29:	cvtsi2sd xmm1,rax
    8c2e:	addsd  xmm1,xmm1
    8c32:	jmp    8ba8 <fts_children@@Base+0x938>
    8c37:	nop    WORD PTR [rax+rax*1+0x0]
    8c40:	push   r12
    8c42:	push   rbp
    8c43:	mov    r12,rdi
    8c46:	push   rbx
    8c47:	mov    rbp,rsi
    8c4a:	call   8700 <fts_children@@Base+0x490>
    8c4f:	mov    rsi,QWORD PTR [rax]
    8c52:	test   rsi,rsi
    8c55:	je     8c7d <fts_children@@Base+0xa0d>
    8c57:	mov    rbx,rax
    8c5a:	jmp    8c63 <fts_children@@Base+0x9f3>
    8c5c:	nop    DWORD PTR [rax+0x0]
    8c60:	mov    rsi,QWORD PTR [rbx]
    8c63:	cmp    rsi,rbp
    8c66:	je     8c7f <fts_children@@Base+0xa0f>
    8c68:	mov    rdi,rbp
    8c6b:	call   QWORD PTR [r12+0x38]
    8c70:	test   al,al
    8c72:	jne    8c90 <fts_children@@Base+0xa20>
    8c74:	mov    rbx,QWORD PTR [rbx+0x8]
    8c78:	test   rbx,rbx
    8c7b:	jne    8c60 <fts_children@@Base+0x9f0>
    8c7d:	xor    esi,esi
    8c7f:	pop    rbx
    8c80:	mov    rax,rsi
    8c83:	pop    rbp
    8c84:	pop    r12
    8c86:	ret    
    8c87:	nop    WORD PTR [rax+rax*1+0x0]
    8c90:	mov    rsi,QWORD PTR [rbx]
    8c93:	pop    rbx
    8c94:	pop    rbp
    8c95:	mov    rax,rsi
    8c98:	pop    r12
    8c9a:	ret    
    8c9b:	nop    DWORD PTR [rax+rax*1+0x0]
    8ca0:	cmp    QWORD PTR [rdi+0x20],0x0
    8ca5:	je     8cd3 <fts_children@@Base+0xa63>
    8ca7:	mov    rdx,QWORD PTR [rdi]
    8caa:	mov    rcx,QWORD PTR [rdi+0x8]
    8cae:	cmp    rdx,rcx
    8cb1:	jae    8cd8 <fts_children@@Base+0xa68>
    8cb3:	mov    rax,QWORD PTR [rdx]
    8cb6:	test   rax,rax
    8cb9:	jne    8cd6 <fts_children@@Base+0xa66>
    8cbb:	nop    DWORD PTR [rax+rax*1+0x0]
    8cc0:	add    rdx,0x10
    8cc4:	cmp    rdx,rcx
    8cc7:	jae    8cd8 <fts_children@@Base+0xa68>
    8cc9:	mov    rax,QWORD PTR [rdx]
    8ccc:	test   rax,rax
    8ccf:	je     8cc0 <fts_children@@Base+0xa50>
    8cd1:	repz ret 
    8cd3:	xor    eax,eax
    8cd5:	ret    
    8cd6:	repz ret 
    8cd8:	sub    rsp,0x8
    8cdc:	call   1aa0 <abort@plt>
    8ce1:	nop    DWORD PTR [rax+rax*1+0x0]
    8ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8cf0:	push   rbp
    8cf1:	push   rbx
    8cf2:	mov    rbp,rdi
    8cf5:	mov    rbx,rsi
    8cf8:	sub    rsp,0x8
    8cfc:	call   8700 <fts_children@@Base+0x490>
    8d01:	mov    rdx,rax
    8d04:	mov    rcx,rax
    8d07:	mov    rax,QWORD PTR [rdx]
    8d0a:	mov    rdx,QWORD PTR [rdx+0x8]
    8d0e:	cmp    rax,rbx
    8d11:	je     8d29 <fts_children@@Base+0xab9>
    8d13:	nop    DWORD PTR [rax+rax*1+0x0]
    8d18:	test   rdx,rdx
    8d1b:	je     8d2e <fts_children@@Base+0xabe>
    8d1d:	mov    rax,QWORD PTR [rdx]
    8d20:	mov    rdx,QWORD PTR [rdx+0x8]
    8d24:	cmp    rax,rbx
    8d27:	jne    8d18 <fts_children@@Base+0xaa8>
    8d29:	test   rdx,rdx
    8d2c:	jne    8d58 <fts_children@@Base+0xae8>
    8d2e:	mov    rdx,QWORD PTR [rbp+0x8]
    8d32:	jmp    8d40 <fts_children@@Base+0xad0>
    8d34:	nop    DWORD PTR [rax+0x0]
    8d38:	mov    rax,QWORD PTR [rcx]
    8d3b:	test   rax,rax
    8d3e:	jne    8d4b <fts_children@@Base+0xadb>
    8d40:	add    rcx,0x10
    8d44:	cmp    rdx,rcx
    8d47:	ja     8d38 <fts_children@@Base+0xac8>
    8d49:	xor    eax,eax
    8d4b:	add    rsp,0x8
    8d4f:	pop    rbx
    8d50:	pop    rbp
    8d51:	ret    
    8d52:	nop    WORD PTR [rax+rax*1+0x0]
    8d58:	mov    rax,QWORD PTR [rdx]
    8d5b:	add    rsp,0x8
    8d5f:	pop    rbx
    8d60:	pop    rbp
    8d61:	ret    
    8d62:	nop    DWORD PTR [rax+0x0]
    8d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8d70:	mov    r9,QWORD PTR [rdi]
    8d73:	cmp    QWORD PTR [rdi+0x8],r9
    8d77:	jbe    8dd2 <fts_children@@Base+0xb62>
    8d79:	xor    r8d,r8d
    8d7c:	mov    rcx,QWORD PTR [r9]
    8d7f:	test   rcx,rcx
    8d82:	je     8dbd <fts_children@@Base+0xb4d>
    8d84:	cmp    rdx,r8
    8d87:	jbe    8dc7 <fts_children@@Base+0xb57>
    8d89:	mov    QWORD PTR [rsi+r8*8],rcx
    8d8d:	mov    rcx,QWORD PTR [r9+0x8]
    8d91:	lea    rax,[r8+0x1]
    8d95:	test   rcx,rcx
    8d98:	je     8dba <fts_children@@Base+0xb4a>
    8d9a:	nop    WORD PTR [rax+rax*1+0x0]
    8da0:	cmp    rdx,rax
    8da3:	je     8dd0 <fts_children@@Base+0xb60>
    8da5:	mov    r8,QWORD PTR [rcx]
    8da8:	add    rax,0x1
    8dac:	mov    QWORD PTR [rsi+rax*8-0x8],r8
    8db1:	mov    rcx,QWORD PTR [rcx+0x8]
    8db5:	test   rcx,rcx
    8db8:	jne    8da0 <fts_children@@Base+0xb30>
    8dba:	mov    r8,rax
    8dbd:	add    r9,0x10
    8dc1:	cmp    QWORD PTR [rdi+0x8],r9
    8dc5:	ja     8d7c <fts_children@@Base+0xb0c>
    8dc7:	mov    rax,r8
    8dca:	ret    
    8dcb:	nop    DWORD PTR [rax+rax*1+0x0]
    8dd0:	repz ret 
    8dd2:	xor    eax,eax
    8dd4:	ret    
    8dd5:	nop
    8dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8de0:	push   r15
    8de2:	push   r14
    8de4:	push   r13
    8de6:	push   r12
    8de8:	push   rbp
    8de9:	push   rbx
    8dea:	sub    rsp,0x8
    8dee:	mov    r14,QWORD PTR [rdi]
    8df1:	cmp    QWORD PTR [rdi+0x8],r14
    8df5:	jbe    8e46 <fts_children@@Base+0xbd6>
    8df7:	mov    r13,rdx
    8dfa:	mov    r12,rsi
    8dfd:	mov    r15,rdi
    8e00:	xor    ebp,ebp
    8e02:	mov    rdi,QWORD PTR [r14]
    8e05:	test   rdi,rdi
    8e08:	je     8e2a <fts_children@@Base+0xbba>
    8e0a:	mov    rbx,r14
    8e0d:	jmp    8e13 <fts_children@@Base+0xba3>
    8e0f:	nop
    8e10:	mov    rdi,QWORD PTR [rbx]
    8e13:	mov    rsi,r13
    8e16:	call   r12
    8e19:	test   al,al
    8e1b:	je     8e34 <fts_children@@Base+0xbc4>
    8e1d:	mov    rbx,QWORD PTR [rbx+0x8]
    8e21:	add    rbp,0x1
    8e25:	test   rbx,rbx
    8e28:	jne    8e10 <fts_children@@Base+0xba0>
    8e2a:	add    r14,0x10
    8e2e:	cmp    QWORD PTR [r15+0x8],r14
    8e32:	ja     8e02 <fts_children@@Base+0xb92>
    8e34:	add    rsp,0x8
    8e38:	mov    rax,rbp
    8e3b:	pop    rbx
    8e3c:	pop    rbp
    8e3d:	pop    r12
    8e3f:	pop    r13
    8e41:	pop    r14
    8e43:	pop    r15
    8e45:	ret    
    8e46:	xor    ebp,ebp
    8e48:	jmp    8e34 <fts_children@@Base+0xbc4>
    8e4a:	nop    WORD PTR [rax+rax*1+0x0]
    8e50:	movzx  ecx,BYTE PTR [rdi]
    8e53:	xor    edx,edx
    8e55:	test   cl,cl
    8e57:	je     8e7d <fts_children@@Base+0xc0d>
    8e59:	nop    DWORD PTR [rax+0x0]
    8e60:	mov    rax,rdx
    8e63:	add    rdi,0x1
    8e67:	shl    rax,0x5
    8e6b:	sub    rax,rdx
    8e6e:	xor    edx,edx
    8e70:	add    rax,rcx
    8e73:	movzx  ecx,BYTE PTR [rdi]
    8e76:	div    rsi
    8e79:	test   cl,cl
    8e7b:	jne    8e60 <fts_children@@Base+0xbf0>
    8e7d:	mov    rax,rdx
    8e80:	ret    
    8e81:	nop    DWORD PTR [rax+rax*1+0x0]
    8e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8e90:	movabs rax,0x3f80000000000000
    8e9a:	mov    BYTE PTR [rdi+0x10],0x0
    8e9e:	mov    QWORD PTR [rdi],rax
    8ea1:	movabs rax,0x3fb4fdf43f4ccccd
    8eab:	mov    QWORD PTR [rdi+0x8],rax
    8eaf:	ret    
    8eb0:	push   r15
    8eb2:	push   r14
    8eb4:	lea    rax,[rip+0xfffffffffffff825]        # 86e0 <fts_children@@Base+0x470>
    8ebb:	push   r13
    8ebd:	push   r12
    8ebf:	mov    r12,rdx
    8ec2:	push   rbp
    8ec3:	push   rbx
    8ec4:	mov    r13,rcx
    8ec7:	mov    rbp,rdi
    8eca:	mov    edi,0x50
    8ecf:	mov    r15,rsi
    8ed2:	sub    rsp,0x8
    8ed6:	test   rdx,rdx
    8ed9:	mov    r14,r8
    8edc:	cmove  r12,rax
    8ee0:	lea    rax,[rip+0xfffffffffffff809]        # 86f0 <fts_children@@Base+0x480>
    8ee7:	test   rcx,rcx
    8eea:	cmove  r13,rax
    8eee:	call   1ce0 <malloc@plt>
    8ef3:	test   rax,rax
    8ef6:	mov    rbx,rax
    8ef9:	je     8faa <fts_children@@Base+0xd3a>
    8eff:	test   r15,r15
    8f02:	lea    rdi,[rax+0x28]
    8f06:	je     8fc0 <fts_children@@Base+0xd50>
    8f0c:	mov    QWORD PTR [rax+0x28],r15
    8f10:	call   8850 <fts_children@@Base+0x5e0>
    8f15:	test   al,al
    8f17:	je     8fa0 <fts_children@@Base+0xd30>
    8f1d:	cmp    BYTE PTR [r15+0x10],0x0
    8f22:	je     9020 <fts_children@@Base+0xdb0>
    8f28:	mov    rdi,rbp
    8f2b:	call   8640 <fts_children@@Base+0x3d0>
    8f30:	mov    edx,0x8
    8f35:	mov    rbp,rax
    8f38:	xor    ecx,ecx
    8f3a:	mov    rax,rdx
    8f3d:	mul    rbp
    8f40:	jo     905a <fts_children@@Base+0xdea>
    8f46:	test   rax,rax
    8f49:	js     8fa0 <fts_children@@Base+0xd30>
    8f4b:	test   rcx,rcx
    8f4e:	jne    8fa0 <fts_children@@Base+0xd30>
    8f50:	test   rbp,rbp
    8f53:	mov    QWORD PTR [rbx+0x10],rbp
    8f57:	je     8fa0 <fts_children@@Base+0xd30>
    8f59:	mov    esi,0x10
    8f5e:	mov    rdi,rbp
    8f61:	call   1c60 <calloc@plt>
    8f66:	test   rax,rax
    8f69:	mov    QWORD PTR [rbx],rax
    8f6c:	je     8fa0 <fts_children@@Base+0xd30>
    8f6e:	shl    rbp,0x4
    8f72:	mov    QWORD PTR [rbx+0x18],0x0
    8f7a:	mov    QWORD PTR [rbx+0x20],0x0
    8f82:	add    rbp,rax
    8f85:	mov    QWORD PTR [rbx+0x30],r12
    8f89:	mov    QWORD PTR [rbx+0x38],r13
    8f8d:	mov    QWORD PTR [rbx+0x8],rbp
    8f91:	mov    QWORD PTR [rbx+0x40],r14
    8f95:	mov    QWORD PTR [rbx+0x48],0x0
    8f9d:	jmp    8faa <fts_children@@Base+0xd3a>
    8f9f:	nop
    8fa0:	mov    rdi,rbx
    8fa3:	xor    ebx,ebx
    8fa5:	call   1e70 <free@plt>
    8faa:	add    rsp,0x8
    8fae:	mov    rax,rbx
    8fb1:	pop    rbx
    8fb2:	pop    rbp
    8fb3:	pop    r12
    8fb5:	pop    r13
    8fb7:	pop    r14
    8fb9:	pop    r15
    8fbb:	ret    
    8fbc:	nop    DWORD PTR [rax+0x0]
    8fc0:	lea    rax,[rip+0x2669]        # b630 <version_etc_copyright@@Base+0x170>
    8fc7:	mov    QWORD PTR [rbx+0x28],rax
    8fcb:	call   8850 <fts_children@@Base+0x5e0>
    8fd0:	test   al,al
    8fd2:	movss  xmm1,DWORD PTR [rip+0x267e]        # b658 <version_etc_copyright@@Base+0x198>
    8fda:	je     8fa0 <fts_children@@Base+0xd30>
    8fdc:	test   rbp,rbp
    8fdf:	js     902b <fts_children@@Base+0xdbb>
    8fe1:	pxor   xmm0,xmm0
    8fe5:	cvtsi2ss xmm0,rbp
    8fea:	divss  xmm0,xmm1
    8fee:	ucomiss xmm0,DWORD PTR [rip+0x2667]        # b65c <version_etc_copyright@@Base+0x19c>
    8ff5:	jae    8fa0 <fts_children@@Base+0xd30>
    8ff7:	ucomiss xmm0,DWORD PTR [rip+0x2662]        # b660 <version_etc_copyright@@Base+0x1a0>
    8ffe:	jb     9050 <fts_children@@Base+0xde0>
    9000:	subss  xmm0,DWORD PTR [rip+0x2658]        # b660 <version_etc_copyright@@Base+0x1a0>
    9008:	movabs rax,0x8000000000000000
    9012:	cvttss2si rbp,xmm0
    9017:	xor    rbp,rax
    901a:	jmp    8f28 <fts_children@@Base+0xcb8>
    901f:	nop
    9020:	test   rbp,rbp
    9023:	movss  xmm1,DWORD PTR [r15+0x8]
    9029:	jns    8fe1 <fts_children@@Base+0xd71>
    902b:	mov    rax,rbp
    902e:	pxor   xmm0,xmm0
    9032:	shr    rax,1
    9035:	and    ebp,0x1
    9038:	or     rax,rbp
    903b:	cvtsi2ss xmm0,rax
    9040:	addss  xmm0,xmm0
    9044:	jmp    8fea <fts_children@@Base+0xd7a>
    9046:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9050:	cvttss2si rbp,xmm0
    9055:	jmp    8f28 <fts_children@@Base+0xcb8>
    905a:	mov    ecx,0x1
    905f:	jmp    8f46 <fts_children@@Base+0xcd6>
    9064:	xchg   ax,ax
    9066:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9070:	push   r12
    9072:	push   rbp
    9073:	mov    rbp,rdi
    9076:	push   rbx
    9077:	mov    r12,QWORD PTR [rdi]
    907a:	cmp    r12,QWORD PTR [rdi+0x8]
    907e:	jae    90eb <fts_children@@Base+0xe7b>
    9080:	cmp    QWORD PTR [r12],0x0
    9085:	je     90e1 <fts_children@@Base+0xe71>
    9087:	mov    rbx,QWORD PTR [r12+0x8]
    908c:	mov    rax,QWORD PTR [rbp+0x40]
    9090:	test   rbx,rbx
    9093:	je     90c5 <fts_children@@Base+0xe55>
    9095:	nop    DWORD PTR [rax]
    9098:	test   rax,rax
    909b:	je     90a6 <fts_children@@Base+0xe36>
    909d:	mov    rdi,QWORD PTR [rbx]
    90a0:	call   rax
    90a2:	mov    rax,QWORD PTR [rbp+0x40]
    90a6:	mov    rdx,QWORD PTR [rbx+0x8]
    90aa:	mov    rcx,QWORD PTR [rbp+0x48]
    90ae:	mov    QWORD PTR [rbx],0x0
    90b5:	test   rdx,rdx
    90b8:	mov    QWORD PTR [rbx+0x8],rcx
    90bc:	mov    QWORD PTR [rbp+0x48],rbx
    90c0:	mov    rbx,rdx
    90c3:	jne    9098 <fts_children@@Base+0xe28>
    90c5:	test   rax,rax
    90c8:	je     90d0 <fts_children@@Base+0xe60>
    90ca:	mov    rdi,QWORD PTR [r12]
    90ce:	call   rax
    90d0:	mov    QWORD PTR [r12],0x0
    90d8:	mov    QWORD PTR [r12+0x8],0x0
    90e1:	add    r12,0x10
    90e5:	cmp    QWORD PTR [rbp+0x8],r12
    90e9:	ja     9080 <fts_children@@Base+0xe10>
    90eb:	mov    QWORD PTR [rbp+0x18],0x0
    90f3:	mov    QWORD PTR [rbp+0x20],0x0
    90fb:	pop    rbx
    90fc:	pop    rbp
    90fd:	pop    r12
    90ff:	ret    
    9100:	push   r12
    9102:	push   rbp
    9103:	mov    r12,rdi
    9106:	push   rbx
    9107:	cmp    QWORD PTR [rdi+0x40],0x0
    910c:	mov    rbp,QWORD PTR [rdi]
    910f:	mov    rax,QWORD PTR [rdi+0x8]
    9113:	je     9163 <fts_children@@Base+0xef3>
    9115:	cmp    QWORD PTR [rdi+0x20],0x0
    911a:	je     9163 <fts_children@@Base+0xef3>
    911c:	cmp    rbp,rax
    911f:	jae    919c <fts_children@@Base+0xf2c>
    9121:	nop    DWORD PTR [rax+0x0]
    9128:	mov    rdi,QWORD PTR [rbp+0x0]
    912c:	test   rdi,rdi
    912f:	je     9156 <fts_children@@Base+0xee6>
    9131:	mov    rbx,rbp
    9134:	jmp    9143 <fts_children@@Base+0xed3>
    9136:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9140:	mov    rdi,QWORD PTR [rbx]
    9143:	call   QWORD PTR [r12+0x40]
    9148:	mov    rbx,QWORD PTR [rbx+0x8]
    914c:	test   rbx,rbx
    914f:	jne    9140 <fts_children@@Base+0xed0>
    9151:	mov    rax,QWORD PTR [r12+0x8]
    9156:	add    rbp,0x10
    915a:	cmp    rax,rbp
    915d:	ja     9128 <fts_children@@Base+0xeb8>
    915f:	mov    rbp,QWORD PTR [r12]
    9163:	cmp    rbp,rax
    9166:	jae    919c <fts_children@@Base+0xf2c>
    9168:	nop    DWORD PTR [rax+rax*1+0x0]
    9170:	mov    rdi,QWORD PTR [rbp+0x8]
    9174:	test   rdi,rdi
    9177:	je     9191 <fts_children@@Base+0xf21>
    9179:	nop    DWORD PTR [rax+0x0]
    9180:	mov    rbx,QWORD PTR [rdi+0x8]
    9184:	call   1e70 <free@plt>
    9189:	test   rbx,rbx
    918c:	mov    rdi,rbx
    918f:	jne    9180 <fts_children@@Base+0xf10>
    9191:	add    rbp,0x10
    9195:	cmp    QWORD PTR [r12+0x8],rbp
    919a:	ja     9170 <fts_children@@Base+0xf00>
    919c:	mov    rdi,QWORD PTR [r12+0x48]
    91a1:	test   rdi,rdi
    91a4:	je     91c1 <fts_children@@Base+0xf51>
    91a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    91b0:	mov    rbx,QWORD PTR [rdi+0x8]
    91b4:	call   1e70 <free@plt>
    91b9:	test   rbx,rbx
    91bc:	mov    rdi,rbx
    91bf:	jne    91b0 <fts_children@@Base+0xf40>
    91c1:	mov    rdi,QWORD PTR [r12]
    91c5:	call   1e70 <free@plt>
    91ca:	pop    rbx
    91cb:	mov    rdi,r12
    91ce:	pop    rbp
    91cf:	pop    r12
    91d1:	jmp    1e70 <free@plt>
    91d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    91e0:	push   r12
    91e2:	push   rbp
    91e3:	mov    rbp,rdi
    91e6:	push   rbx
    91e7:	sub    rsp,0x60
    91eb:	mov    r12,QWORD PTR [rdi+0x28]
    91ef:	mov    rax,QWORD PTR fs:0x28
    91f8:	mov    QWORD PTR [rsp+0x58],rax
    91fd:	xor    eax,eax
    91ff:	cmp    BYTE PTR [r12+0x10],0x0
    9205:	jne    9258 <fts_children@@Base+0xfe8>
    9207:	test   rsi,rsi
    920a:	js     9388 <fts_children@@Base+0x1118>
    9210:	pxor   xmm0,xmm0
    9214:	cvtsi2ss xmm0,rsi
    9219:	divss  xmm0,DWORD PTR [r12+0x8]
    9220:	ucomiss xmm0,DWORD PTR [rip+0x2435]        # b65c <version_etc_copyright@@Base+0x19c>
    9227:	jae    9360 <fts_children@@Base+0x10f0>
    922d:	ucomiss xmm0,DWORD PTR [rip+0x242c]        # b660 <version_etc_copyright@@Base+0x1a0>
    9234:	jb     93b0 <fts_children@@Base+0x1140>
    923a:	subss  xmm0,DWORD PTR [rip+0x241e]        # b660 <version_etc_copyright@@Base+0x1a0>
    9242:	movabs rax,0x8000000000000000
    924c:	cvttss2si rsi,xmm0
    9251:	xor    rsi,rax
    9254:	nop    DWORD PTR [rax+0x0]
    9258:	mov    rdi,rsi
    925b:	call   8640 <fts_children@@Base+0x3d0>
    9260:	mov    edx,0x8
    9265:	mov    rbx,rax
    9268:	xor    ecx,ecx
    926a:	mov    rax,rdx
    926d:	mul    rbx
    9270:	jo     940f <fts_children@@Base+0x119f>
    9276:	test   rax,rax
    9279:	mov    eax,0x1
    927e:	cmovs  rcx,rax
    9282:	test   rbx,rbx
    9285:	je     9360 <fts_children@@Base+0x10f0>
    928b:	and    ecx,0x1
    928e:	jne    9360 <fts_children@@Base+0x10f0>
    9294:	cmp    QWORD PTR [rbp+0x10],rbx
    9298:	je     93c0 <fts_children@@Base+0x1150>
    929e:	mov    esi,0x10
    92a3:	mov    rdi,rbx
    92a6:	call   1c60 <calloc@plt>
    92ab:	test   rax,rax
    92ae:	mov    QWORD PTR [rsp],rax
    92b2:	je     9360 <fts_children@@Base+0x10f0>
    92b8:	mov    QWORD PTR [rsp+0x10],rbx
    92bd:	shl    rbx,0x4
    92c1:	mov    QWORD PTR [rsp+0x28],r12
    92c6:	add    rbx,rax
    92c9:	mov    rax,QWORD PTR [rbp+0x30]
    92cd:	mov    r12,rsp
    92d0:	xor    edx,edx
    92d2:	mov    rsi,rbp
    92d5:	mov    rdi,r12
    92d8:	mov    QWORD PTR [rsp+0x8],rbx
    92dd:	mov    QWORD PTR [rsp+0x18],0x0
    92e6:	mov    QWORD PTR [rsp+0x30],rax
    92eb:	mov    rax,QWORD PTR [rbp+0x38]
    92ef:	mov    QWORD PTR [rsp+0x20],0x0
    92f8:	mov    QWORD PTR [rsp+0x38],rax
    92fd:	mov    rax,QWORD PTR [rbp+0x40]
    9301:	mov    QWORD PTR [rsp+0x40],rax
    9306:	mov    rax,QWORD PTR [rbp+0x48]
    930a:	mov    QWORD PTR [rsp+0x48],rax
    930f:	call   88d0 <fts_children@@Base+0x660>
    9314:	test   al,al
    9316:	mov    ebx,eax
    9318:	jne    93d0 <fts_children@@Base+0x1160>
    931e:	mov    rax,QWORD PTR [rsp+0x48]
    9323:	mov    edx,0x1
    9328:	mov    rsi,r12
    932b:	mov    rdi,rbp
    932e:	mov    QWORD PTR [rbp+0x48],rax
    9332:	call   88d0 <fts_children@@Base+0x660>
    9337:	test   al,al
    9339:	je     9419 <fts_children@@Base+0x11a9>
    933f:	xor    edx,edx
    9341:	mov    rsi,r12
    9344:	mov    rdi,rbp
    9347:	call   88d0 <fts_children@@Base+0x660>
    934c:	test   al,al
    934e:	je     9419 <fts_children@@Base+0x11a9>
    9354:	mov    rdi,QWORD PTR [rsp]
    9358:	call   1e70 <free@plt>
    935d:	jmp    9362 <fts_children@@Base+0x10f2>
    935f:	nop
    9360:	xor    ebx,ebx
    9362:	mov    rcx,QWORD PTR [rsp+0x58]
    9367:	xor    rcx,QWORD PTR fs:0x28
    9370:	mov    eax,ebx
    9372:	jne    940a <fts_children@@Base+0x119a>
    9378:	add    rsp,0x60
    937c:	pop    rbx
    937d:	pop    rbp
    937e:	pop    r12
    9380:	ret    
    9381:	nop    DWORD PTR [rax+0x0]
    9388:	mov    rax,rsi
    938b:	pxor   xmm0,xmm0
    938f:	shr    rax,1
    9392:	and    esi,0x1
    9395:	or     rax,rsi
    9398:	cvtsi2ss xmm0,rax
    939d:	addss  xmm0,xmm0
    93a1:	jmp    9219 <fts_children@@Base+0xfa9>
    93a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    93b0:	cvttss2si rsi,xmm0
    93b5:	jmp    9258 <fts_children@@Base+0xfe8>
    93ba:	nop    WORD PTR [rax+rax*1+0x0]
    93c0:	mov    ebx,0x1
    93c5:	jmp    9362 <fts_children@@Base+0x10f2>
    93c7:	nop    WORD PTR [rax+rax*1+0x0]
    93d0:	mov    rdi,QWORD PTR [rbp+0x0]
    93d4:	call   1e70 <free@plt>
    93d9:	mov    rax,QWORD PTR [rsp]
    93dd:	mov    QWORD PTR [rbp+0x0],rax
    93e1:	mov    rax,QWORD PTR [rsp+0x8]
    93e6:	mov    QWORD PTR [rbp+0x8],rax
    93ea:	mov    rax,QWORD PTR [rsp+0x10]
    93ef:	mov    QWORD PTR [rbp+0x10],rax
    93f3:	mov    rax,QWORD PTR [rsp+0x18]
    93f8:	mov    QWORD PTR [rbp+0x18],rax
    93fc:	mov    rax,QWORD PTR [rsp+0x48]
    9401:	mov    QWORD PTR [rbp+0x48],rax
    9405:	jmp    9362 <fts_children@@Base+0x10f2>
    940a:	call   1b90 <__stack_chk_fail@plt>
    940f:	mov    ecx,0x1
    9414:	jmp    9276 <fts_children@@Base+0x1006>
    9419:	call   1aa0 <abort@plt>
    941e:	xchg   ax,ax
    9420:	push   r13
    9422:	push   r12
    9424:	push   rbp
    9425:	push   rbx
    9426:	sub    rsp,0x18
    942a:	mov    rax,QWORD PTR fs:0x28
    9433:	mov    QWORD PTR [rsp+0x8],rax
    9438:	xor    eax,eax
    943a:	test   rsi,rsi
    943d:	je     95fd <fts_children@@Base+0x138d>
    9443:	mov    r12,rsp
    9446:	xor    ecx,ecx
    9448:	mov    r13,rdx
    944b:	mov    rdx,r12
    944e:	mov    rbx,rdi
    9451:	mov    rbp,rsi
    9454:	call   8730 <fts_children@@Base+0x4c0>
    9459:	test   rax,rax
    945c:	mov    rdx,rax
    945f:	je     9490 <fts_children@@Base+0x1220>
    9461:	xor    eax,eax
    9463:	test   r13,r13
    9466:	je     946c <fts_children@@Base+0x11fc>
    9468:	mov    QWORD PTR [r13+0x0],rdx
    946c:	mov    rcx,QWORD PTR [rsp+0x8]
    9471:	xor    rcx,QWORD PTR fs:0x28
    947a:	jne    969f <fts_children@@Base+0x142f>
    9480:	add    rsp,0x18
    9484:	pop    rbx
    9485:	pop    rbp
    9486:	pop    r12
    9488:	pop    r13
    948a:	ret    
    948b:	nop    DWORD PTR [rax+rax*1+0x0]
    9490:	mov    rax,QWORD PTR [rbx+0x18]
    9494:	test   rax,rax
    9497:	js     9510 <fts_children@@Base+0x12a0>
    9499:	pxor   xmm1,xmm1
    949d:	mov    rdx,QWORD PTR [rbx+0x28]
    94a1:	cvtsi2ss xmm1,rax
    94a6:	mov    rax,QWORD PTR [rbx+0x10]
    94aa:	test   rax,rax
    94ad:	js     953a <fts_children@@Base+0x12ca>
    94b3:	pxor   xmm0,xmm0
    94b7:	cvtsi2ss xmm0,rax
    94bc:	mulss  xmm0,DWORD PTR [rdx+0x8]
    94c1:	ucomiss xmm1,xmm0
    94c4:	ja     9560 <fts_children@@Base+0x12f0>
    94ca:	mov    r12,QWORD PTR [rsp]
    94ce:	cmp    QWORD PTR [r12],0x0
    94d3:	je     9608 <fts_children@@Base+0x1398>
    94d9:	mov    rax,QWORD PTR [rbx+0x48]
    94dd:	test   rax,rax
    94e0:	je     9620 <fts_children@@Base+0x13b0>
    94e6:	mov    rdx,QWORD PTR [rax+0x8]
    94ea:	mov    QWORD PTR [rbx+0x48],rdx
    94ee:	mov    rdx,QWORD PTR [r12+0x8]
    94f3:	mov    QWORD PTR [rax],rbp
    94f6:	mov    QWORD PTR [rax+0x8],rdx
    94fa:	mov    QWORD PTR [r12+0x8],rax
    94ff:	mov    eax,0x1
    9504:	add    QWORD PTR [rbx+0x20],0x1
    9509:	jmp    946c <fts_children@@Base+0x11fc>
    950e:	xchg   ax,ax
    9510:	mov    rdx,rax
    9513:	pxor   xmm1,xmm1
    9517:	and    eax,0x1
    951a:	shr    rdx,1
    951d:	or     rdx,rax
    9520:	mov    rax,QWORD PTR [rbx+0x10]
    9524:	cvtsi2ss xmm1,rdx
    9529:	mov    rdx,QWORD PTR [rbx+0x28]
    952d:	test   rax,rax
    9530:	addss  xmm1,xmm1
    9534:	jns    94b3 <fts_children@@Base+0x1243>
    953a:	mov    rcx,rax
    953d:	pxor   xmm0,xmm0
    9541:	shr    rcx,1
    9544:	and    eax,0x1
    9547:	or     rcx,rax
    954a:	cvtsi2ss xmm0,rcx
    954f:	addss  xmm0,xmm0
    9553:	jmp    94bc <fts_children@@Base+0x124c>
    9558:	nop    DWORD PTR [rax+rax*1+0x0]
    9560:	lea    rdi,[rbx+0x28]
    9564:	call   8850 <fts_children@@Base+0x5e0>
    9569:	mov    rax,QWORD PTR [rbx+0x10]
    956d:	mov    rdx,QWORD PTR [rbx+0x28]
    9571:	test   rax,rax
    9574:	movss  xmm2,DWORD PTR [rdx+0x8]
    9579:	js     9640 <fts_children@@Base+0x13d0>
    957f:	pxor   xmm0,xmm0
    9583:	cvtsi2ss xmm0,rax
    9588:	mov    rax,QWORD PTR [rbx+0x18]
    958c:	test   rax,rax
    958f:	js     9660 <fts_children@@Base+0x13f0>
    9595:	pxor   xmm1,xmm1
    9599:	cvtsi2ss xmm1,rax
    959e:	movaps xmm3,xmm2
    95a1:	mulss  xmm3,xmm0
    95a5:	ucomiss xmm1,xmm3
    95a8:	jbe    94ca <fts_children@@Base+0x125a>
    95ae:	cmp    BYTE PTR [rdx+0x10],0x0
    95b2:	mulss  xmm0,DWORD PTR [rdx+0xc]
    95b7:	jne    95bd <fts_children@@Base+0x134d>
    95b9:	mulss  xmm0,xmm2
    95bd:	ucomiss xmm0,DWORD PTR [rip+0x2098]        # b65c <version_etc_copyright@@Base+0x19c>
    95c4:	jae    9633 <fts_children@@Base+0x13c3>
    95c6:	ucomiss xmm0,DWORD PTR [rip+0x2093]        # b660 <version_etc_copyright@@Base+0x1a0>
    95cd:	jae    9680 <fts_children@@Base+0x1410>
    95d3:	cvttss2si rsi,xmm0
    95d8:	mov    rdi,rbx
    95db:	call   91e0 <fts_children@@Base+0xf70>
    95e0:	test   al,al
    95e2:	je     9633 <fts_children@@Base+0x13c3>
    95e4:	xor    ecx,ecx
    95e6:	mov    rdx,r12
    95e9:	mov    rsi,rbp
    95ec:	mov    rdi,rbx
    95ef:	call   8730 <fts_children@@Base+0x4c0>
    95f4:	test   rax,rax
    95f7:	je     94ca <fts_children@@Base+0x125a>
    95fd:	call   1aa0 <abort@plt>
    9602:	nop    WORD PTR [rax+rax*1+0x0]
    9608:	mov    QWORD PTR [r12],rbp
    960c:	mov    eax,0x1
    9611:	add    QWORD PTR [rbx+0x20],0x1
    9616:	add    QWORD PTR [rbx+0x18],0x1
    961b:	jmp    946c <fts_children@@Base+0x11fc>
    9620:	mov    edi,0x10
    9625:	call   1ce0 <malloc@plt>
    962a:	test   rax,rax
    962d:	jne    94ee <fts_children@@Base+0x127e>
    9633:	mov    eax,0xffffffff
    9638:	jmp    946c <fts_children@@Base+0x11fc>
    963d:	nop    DWORD PTR [rax]
    9640:	mov    rcx,rax
    9643:	pxor   xmm0,xmm0
    9647:	shr    rcx,1
    964a:	and    eax,0x1
    964d:	or     rcx,rax
    9650:	cvtsi2ss xmm0,rcx
    9655:	addss  xmm0,xmm0
    9659:	jmp    9588 <fts_children@@Base+0x1318>
    965e:	xchg   ax,ax
    9660:	mov    rcx,rax
    9663:	pxor   xmm1,xmm1
    9667:	shr    rcx,1
    966a:	and    eax,0x1
    966d:	or     rcx,rax
    9670:	cvtsi2ss xmm1,rcx
    9675:	addss  xmm1,xmm1
    9679:	jmp    959e <fts_children@@Base+0x132e>
    967e:	xchg   ax,ax
    9680:	subss  xmm0,DWORD PTR [rip+0x1fd8]        # b660 <version_etc_copyright@@Base+0x1a0>
    9688:	movabs rax,0x8000000000000000
    9692:	cvttss2si rsi,xmm0
    9697:	xor    rsi,rax
    969a:	jmp    95d8 <fts_children@@Base+0x1368>
    969f:	call   1b90 <__stack_chk_fail@plt>
    96a4:	xchg   ax,ax
    96a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    96b0:	push   rbx
    96b1:	mov    rbx,rsi
    96b4:	sub    rsp,0x10
    96b8:	mov    rdx,rsp
    96bb:	mov    rax,QWORD PTR fs:0x28
    96c4:	mov    QWORD PTR [rsp+0x8],rax
    96c9:	xor    eax,eax
    96cb:	call   9420 <fts_children@@Base+0x11b0>
    96d0:	cmp    eax,0xffffffff
    96d3:	je     9700 <fts_children@@Base+0x1490>
    96d5:	test   eax,eax
    96d7:	jne    96dd <fts_children@@Base+0x146d>
    96d9:	mov    rbx,QWORD PTR [rsp]
    96dd:	mov    rcx,QWORD PTR [rsp+0x8]
    96e2:	xor    rcx,QWORD PTR fs:0x28
    96eb:	mov    rax,rbx
    96ee:	jne    9704 <fts_children@@Base+0x1494>
    96f0:	add    rsp,0x10
    96f4:	pop    rbx
    96f5:	ret    
    96f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9700:	xor    ebx,ebx
    9702:	jmp    96dd <fts_children@@Base+0x146d>
    9704:	call   1b90 <__stack_chk_fail@plt>
    9709:	nop    DWORD PTR [rax+0x0]
    9710:	push   r12
    9712:	push   rbp
    9713:	mov    ecx,0x1
    9718:	push   rbx
    9719:	mov    rbx,rdi
    971c:	sub    rsp,0x10
    9720:	mov    rdx,rsp
    9723:	mov    rax,QWORD PTR fs:0x28
    972c:	mov    QWORD PTR [rsp+0x8],rax
    9731:	xor    eax,eax
    9733:	call   8730 <fts_children@@Base+0x4c0>
    9738:	test   rax,rax
    973b:	mov    rbp,rax
    973e:	je     974f <fts_children@@Base+0x14df>
    9740:	mov    rax,QWORD PTR [rsp]
    9744:	sub    QWORD PTR [rbx+0x20],0x1
    9749:	cmp    QWORD PTR [rax],0x0
    974d:	je     9770 <fts_children@@Base+0x1500>
    974f:	mov    rcx,QWORD PTR [rsp+0x8]
    9754:	xor    rcx,QWORD PTR fs:0x28
    975d:	mov    rax,rbp
    9760:	jne    990e <fts_children@@Base+0x169e>
    9766:	add    rsp,0x10
    976a:	pop    rbx
    976b:	pop    rbp
    976c:	pop    r12
    976e:	ret    
    976f:	nop
    9770:	mov    rax,QWORD PTR [rbx+0x18]
    9774:	sub    rax,0x1
    9778:	test   rax,rax
    977b:	mov    QWORD PTR [rbx+0x18],rax
    977f:	js     9880 <fts_children@@Base+0x1610>
    9785:	pxor   xmm0,xmm0
    9789:	cvtsi2ss xmm0,rax
    978e:	mov    rax,QWORD PTR [rbx+0x10]
    9792:	mov    rdx,QWORD PTR [rbx+0x28]
    9796:	test   rax,rax
    9799:	js     9860 <fts_children@@Base+0x15f0>
    979f:	pxor   xmm1,xmm1
    97a3:	cvtsi2ss xmm1,rax
    97a8:	mulss  xmm1,DWORD PTR [rdx]
    97ac:	ucomiss xmm1,xmm0
    97af:	jbe    974f <fts_children@@Base+0x14df>
    97b1:	lea    rdi,[rbx+0x28]
    97b5:	call   8850 <fts_children@@Base+0x5e0>
    97ba:	mov    rax,QWORD PTR [rbx+0x10]
    97be:	mov    rdx,QWORD PTR [rbx+0x28]
    97c2:	test   rax,rax
    97c5:	js     98f0 <fts_children@@Base+0x1680>
    97cb:	pxor   xmm0,xmm0
    97cf:	cvtsi2ss xmm0,rax
    97d4:	mov    rax,QWORD PTR [rbx+0x18]
    97d8:	test   rax,rax
    97db:	js     98d0 <fts_children@@Base+0x1660>
    97e1:	pxor   xmm1,xmm1
    97e5:	cvtsi2ss xmm1,rax
    97ea:	movss  xmm2,DWORD PTR [rdx]
    97ee:	mulss  xmm2,xmm0
    97f2:	ucomiss xmm2,xmm1
    97f5:	jbe    974f <fts_children@@Base+0x14df>
    97fb:	cmp    BYTE PTR [rdx+0x10],0x0
    97ff:	mulss  xmm0,DWORD PTR [rdx+0x4]
    9804:	je     98c0 <fts_children@@Base+0x1650>
    980a:	ucomiss xmm0,DWORD PTR [rip+0x1e4f]        # b660 <version_etc_copyright@@Base+0x1a0>
    9811:	jae    98a0 <fts_children@@Base+0x1630>
    9817:	cvttss2si rsi,xmm0
    981c:	mov    rdi,rbx
    981f:	call   91e0 <fts_children@@Base+0xf70>
    9824:	test   al,al
    9826:	jne    974f <fts_children@@Base+0x14df>
    982c:	mov    rdi,QWORD PTR [rbx+0x48]
    9830:	test   rdi,rdi
    9833:	je     9849 <fts_children@@Base+0x15d9>
    9835:	nop    DWORD PTR [rax]
    9838:	mov    r12,QWORD PTR [rdi+0x8]
    983c:	call   1e70 <free@plt>
    9841:	test   r12,r12
    9844:	mov    rdi,r12
    9847:	jne    9838 <fts_children@@Base+0x15c8>
    9849:	mov    QWORD PTR [rbx+0x48],0x0
    9851:	jmp    974f <fts_children@@Base+0x14df>
    9856:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9860:	mov    rcx,rax
    9863:	pxor   xmm1,xmm1
    9867:	shr    rcx,1
    986a:	and    eax,0x1
    986d:	or     rcx,rax
    9870:	cvtsi2ss xmm1,rcx
    9875:	addss  xmm1,xmm1
    9879:	jmp    97a8 <fts_children@@Base+0x1538>
    987e:	xchg   ax,ax
    9880:	mov    rdx,rax
    9883:	pxor   xmm0,xmm0
    9887:	shr    rdx,1
    988a:	and    eax,0x1
    988d:	or     rdx,rax
    9890:	cvtsi2ss xmm0,rdx
    9895:	addss  xmm0,xmm0
    9899:	jmp    978e <fts_children@@Base+0x151e>
    989e:	xchg   ax,ax
    98a0:	subss  xmm0,DWORD PTR [rip+0x1db8]        # b660 <version_etc_copyright@@Base+0x1a0>
    98a8:	movabs rax,0x8000000000000000
    98b2:	cvttss2si rsi,xmm0
    98b7:	xor    rsi,rax
    98ba:	jmp    981c <fts_children@@Base+0x15ac>
    98bf:	nop
    98c0:	mulss  xmm0,DWORD PTR [rdx+0x8]
    98c5:	jmp    980a <fts_children@@Base+0x159a>
    98ca:	nop    WORD PTR [rax+rax*1+0x0]
    98d0:	mov    rcx,rax
    98d3:	pxor   xmm1,xmm1
    98d7:	shr    rcx,1
    98da:	and    eax,0x1
    98dd:	or     rcx,rax
    98e0:	cvtsi2ss xmm1,rcx
    98e5:	addss  xmm1,xmm1
    98e9:	jmp    97ea <fts_children@@Base+0x157a>
    98ee:	xchg   ax,ax
    98f0:	mov    rcx,rax
    98f3:	pxor   xmm0,xmm0
    98f7:	shr    rcx,1
    98fa:	and    eax,0x1
    98fd:	or     rcx,rax
    9900:	cvtsi2ss xmm0,rcx
    9905:	addss  xmm0,xmm0
    9909:	jmp    97d4 <fts_children@@Base+0x1564>
    990e:	call   1b90 <__stack_chk_fail@plt>
    9913:	nop    WORD PTR cs:[rax+rax*1+0x0]
    991d:	nop    DWORD PTR [rax]
    9920:	mov    BYTE PTR [rdi+0x1c],0x1
    9924:	mov    QWORD PTR [rdi+0x14],0x0
    992c:	mov    DWORD PTR [rdi],esi
    992e:	mov    DWORD PTR [rdi+0x4],esi
    9931:	mov    DWORD PTR [rdi+0x8],esi
    9934:	mov    DWORD PTR [rdi+0xc],esi
    9937:	mov    DWORD PTR [rdi+0x10],esi
    993a:	ret    
    993b:	nop    DWORD PTR [rax+rax*1+0x0]
    9940:	movzx  eax,BYTE PTR [rdi+0x1c]
    9944:	ret    
    9945:	nop
    9946:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9950:	movzx  edx,BYTE PTR [rdi+0x1c]
    9954:	mov    ecx,DWORD PTR [rdi+0x14]
    9957:	xor    edx,0x1
    995a:	movzx  edx,dl
    995d:	add    ecx,edx
    995f:	and    ecx,0x3
    9962:	mov    eax,ecx
    9964:	lea    r8,[rdi+rax*4]
    9968:	mov    eax,DWORD PTR [r8]
    996b:	mov    DWORD PTR [r8],esi
    996e:	mov    esi,DWORD PTR [rdi+0x18]
    9971:	mov    DWORD PTR [rdi+0x14],ecx
    9974:	cmp    esi,ecx
    9976:	jne    9980 <fts_children@@Base+0x1710>
    9978:	add    edx,esi
    997a:	and    edx,0x3
    997d:	mov    DWORD PTR [rdi+0x18],edx
    9980:	mov    BYTE PTR [rdi+0x1c],0x0
    9984:	ret    
    9985:	nop
    9986:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9990:	cmp    BYTE PTR [rdi+0x1c],0x0
    9994:	jne    99c5 <fts_children@@Base+0x1755>
    9996:	mov    eax,DWORD PTR [rdi+0x14]
    9999:	mov    esi,DWORD PTR [rdi+0x10]
    999c:	lea    rcx,[rdi+rax*4]
    99a0:	mov    rdx,rax
    99a3:	mov    eax,DWORD PTR [rcx]
    99a5:	mov    DWORD PTR [rcx],esi
    99a7:	cmp    edx,DWORD PTR [rdi+0x18]
    99aa:	je     99c0 <fts_children@@Base+0x1750>
    99ac:	add    edx,0x3
    99af:	and    edx,0x3
    99b2:	mov    DWORD PTR [rdi+0x14],edx
    99b5:	ret    
    99b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    99c0:	mov    BYTE PTR [rdi+0x1c],0x1
    99c4:	ret    
    99c5:	sub    rsp,0x8
    99c9:	call   1aa0 <abort@plt>
    99ce:	xchg   ax,ax
    99d0:	push   r15
    99d2:	push   r14
    99d4:	mov    edi,0xe
    99d9:	push   r13
    99db:	push   r12
    99dd:	push   rbp
    99de:	push   rbx
    99df:	sub    rsp,0xa8
    99e6:	mov    rax,QWORD PTR fs:0x28
    99ef:	mov    QWORD PTR [rsp+0x98],rax
    99f7:	xor    eax,eax
    99f9:	call   1d10 <nl_langinfo@plt>
    99fe:	mov    r15,QWORD PTR [rip+0x204873]        # 20e278 <program_name@@Base+0x150>
    9a05:	test   rax,rax
    9a08:	mov    rbx,rax
    9a0b:	lea    rax,[rip+0x17cf]        # b1e1 <quoting_style_vals@@Base+0x81>
    9a12:	cmove  rbx,rax
    9a16:	test   r15,r15
    9a19:	jne    9a3a <fts_children@@Base+0x17ca>
    9a1b:	jmp    9ab0 <fts_children@@Base+0x1840>
    9a20:	mov    rdi,r15
    9a23:	call   1b60 <strlen@plt>
    9a28:	lea    rbp,[r15+rax*1+0x1]
    9a2d:	mov    rdi,rbp
    9a30:	call   1b60 <strlen@plt>
    9a35:	lea    r15,[rbp+rax*1+0x1]
    9a3a:	movzx  ebp,BYTE PTR [r15]
    9a3e:	test   bpl,bpl
    9a41:	je     9a6c <fts_children@@Base+0x17fc>
    9a43:	mov    rsi,r15
    9a46:	mov    rdi,rbx
    9a49:	call   1c70 <strcmp@plt>
    9a4e:	test   eax,eax
    9a50:	je     9a5f <fts_children@@Base+0x17ef>
    9a52:	cmp    bpl,0x2a
    9a56:	jne    9a20 <fts_children@@Base+0x17b0>
    9a58:	cmp    BYTE PTR [r15+0x1],0x0
    9a5d:	jne    9a20 <fts_children@@Base+0x17b0>
    9a5f:	mov    rdi,r15
    9a62:	call   1b60 <strlen@plt>
    9a67:	lea    rbx,[r15+rax*1+0x1]
    9a6c:	cmp    BYTE PTR [rbx],0x0
    9a6f:	lea    rax,[rip+0x1bfa]        # b670 <version_etc_copyright@@Base+0x1b0>
    9a76:	cmove  rbx,rax
    9a7a:	mov    rcx,QWORD PTR [rsp+0x98]
    9a82:	xor    rcx,QWORD PTR fs:0x28
    9a8b:	mov    rax,rbx
    9a8e:	jne    9e0c <fts_children@@Base+0x1b9c>
    9a94:	add    rsp,0xa8
    9a9b:	pop    rbx
    9a9c:	pop    rbp
    9a9d:	pop    r12
    9a9f:	pop    r13
    9aa1:	pop    r14
    9aa3:	pop    r15
    9aa5:	ret    
    9aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9ab0:	lea    rdi,[rip+0x1bd9]        # b690 <version_etc_copyright@@Base+0x1d0>
    9ab7:	call   1a90 <getenv@plt>
    9abc:	test   rax,rax
    9abf:	mov    r13,rax
    9ac2:	je     9b10 <fts_children@@Base+0x18a0>
    9ac4:	cmp    BYTE PTR [rax],0x0
    9ac7:	je     9b10 <fts_children@@Base+0x18a0>
    9ac9:	mov    rdi,rax
    9acc:	call   1b60 <strlen@plt>
    9ad1:	test   rax,rax
    9ad4:	mov    r12,rax
    9ad7:	mov    r14,rax
    9ada:	jne    9dfb <fts_children@@Base+0x1b8b>
    9ae0:	mov    edi,0xe
    9ae5:	call   1ce0 <malloc@plt>
    9aea:	test   rax,rax
    9aed:	mov    rbp,rax
    9af0:	jne    9b98 <fts_children@@Base+0x1928>
    9af6:	lea    r15,[rip+0x16e4]        # b1e1 <quoting_style_vals@@Base+0x81>
    9afd:	mov    QWORD PTR [rip+0x204774],r15        # 20e278 <program_name@@Base+0x150>
    9b04:	jmp    9a3a <fts_children@@Base+0x17ca>
    9b09:	nop    DWORD PTR [rax+0x0]
    9b10:	lea    r13,[rip+0x1b5f]        # b676 <version_etc_copyright@@Base+0x1b6>
    9b17:	mov    edi,0x28
    9b1c:	mov    r12d,0x1a
    9b22:	mov    r14d,0x19
    9b28:	call   1ce0 <malloc@plt>
    9b2d:	test   rax,rax
    9b30:	mov    rbp,rax
    9b33:	je     9af6 <fts_children@@Base+0x1886>
    9b35:	mov    rdx,r14
    9b38:	mov    rsi,r13
    9b3b:	mov    rdi,rbp
    9b3e:	call   1ca0 <memcpy@plt>
    9b43:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    9b49:	add    r12,rbp
    9b4c:	movabs rax,0x2e74657372616863
    9b56:	mov    esi,0x20000
    9b5b:	mov    QWORD PTR [r12],rax
    9b5f:	mov    eax,0x73
    9b64:	mov    DWORD PTR [r12+0x8],0x61696c61
    9b6d:	mov    WORD PTR [r12+0xc],ax
    9b73:	mov    rdi,rbp
    9b76:	xor    eax,eax
    9b78:	call   1dc0 <open@plt>
    9b7d:	test   eax,eax
    9b7f:	mov    r12d,eax
    9b82:	jns    9ba8 <fts_children@@Base+0x1938>
    9b84:	lea    r15,[rip+0x1656]        # b1e1 <quoting_style_vals@@Base+0x81>
    9b8b:	mov    rdi,rbp
    9b8e:	call   1e70 <free@plt>
    9b93:	jmp    9afd <fts_children@@Base+0x188d>
    9b98:	mov    rdx,r14
    9b9b:	mov    rsi,r13
    9b9e:	mov    rdi,rbp
    9ba1:	call   1ca0 <memcpy@plt>
    9ba6:	jmp    9b49 <fts_children@@Base+0x18d9>
    9ba8:	lea    rsi,[rip+0x102c]        # abdb <_IO_stdin_used@@Base+0x9bb>
    9baf:	mov    edi,eax
    9bb1:	xor    r15d,r15d
    9bb4:	call   1d70 <fdopen@plt>
    9bb9:	test   rax,rax
    9bbc:	mov    r14,rax
    9bbf:	mov    QWORD PTR [rsp],0x0
    9bc7:	je     9da3 <fts_children@@Base+0x1b33>
    9bcd:	lea    rax,[rsp+0x60]
    9bd2:	mov    QWORD PTR [rsp+0x8],rax
    9bd7:	lea    rax,[rsp+0x20]
    9bdc:	mov    QWORD PTR [rsp+0x10],rax
    9be1:	mov    rax,QWORD PTR [r14+0x8]
    9be5:	cmp    rax,QWORD PTR [r14+0x10]
    9be9:	jae    9d3a <fts_children@@Base+0x1aca>
    9bef:	lea    rdx,[rax+0x1]
    9bf3:	mov    QWORD PTR [r14+0x8],rdx
    9bf7:	movzx  edi,BYTE PTR [rax]
    9bfa:	lea    eax,[rdi-0x9]
    9bfd:	cmp    eax,0x1
    9c00:	jbe    9be1 <fts_children@@Base+0x1971>
    9c02:	cmp    edi,0x20
    9c05:	je     9be1 <fts_children@@Base+0x1971>
    9c07:	cmp    edi,0x23
    9c0a:	je     9d89 <fts_children@@Base+0x1b19>
    9c10:	mov    rsi,r14
    9c13:	call   1d20 <ungetc@plt>
    9c18:	mov    r13,QWORD PTR [rsp+0x10]
    9c1d:	mov    rcx,QWORD PTR [rsp+0x8]
    9c22:	lea    rsi,[rip+0x1a77]        # b6a0 <version_etc_copyright@@Base+0x1e0>
    9c29:	xor    eax,eax
    9c2b:	mov    rdi,r14
    9c2e:	mov    rdx,r13
    9c31:	call   1c10 <fscanf@plt>
    9c36:	cmp    eax,0x1
    9c39:	jle    9d4d <fts_children@@Base+0x1add>
    9c3f:	mov    rdx,r13
    9c42:	mov    ecx,DWORD PTR [rdx]
    9c44:	add    rdx,0x4
    9c48:	lea    eax,[rcx-0x1010101]
    9c4e:	not    ecx
    9c50:	and    eax,ecx
    9c52:	and    eax,0x80808080
    9c57:	je     9c42 <fts_children@@Base+0x19d2>
    9c59:	mov    ecx,eax
    9c5b:	mov    r13,QWORD PTR [rsp+0x8]
    9c60:	shr    ecx,0x10
    9c63:	test   eax,0x8080
    9c68:	cmove  eax,ecx
    9c6b:	lea    rcx,[rdx+0x2]
    9c6f:	cmove  rdx,rcx
    9c73:	mov    ecx,eax
    9c75:	add    cl,al
    9c77:	sbb    rdx,0x3
    9c7b:	sub    rdx,QWORD PTR [rsp+0x10]
    9c80:	mov    esi,DWORD PTR [r13+0x0]
    9c84:	add    r13,0x4
    9c88:	lea    eax,[rsi-0x1010101]
    9c8e:	not    esi
    9c90:	and    eax,esi
    9c92:	and    eax,0x80808080
    9c97:	je     9c80 <fts_children@@Base+0x1a10>
    9c99:	mov    esi,eax
    9c9b:	mov    QWORD PTR [rsp+0x18],rdx
    9ca0:	shr    esi,0x10
    9ca3:	test   eax,0x8080
    9ca8:	cmove  eax,esi
    9cab:	lea    rsi,[r13+0x2]
    9caf:	mov    ecx,eax
    9cb1:	cmove  r13,rsi
    9cb5:	add    cl,al
    9cb7:	sbb    r13,0x3
    9cbb:	sub    r13,QWORD PTR [rsp+0x8]
    9cc0:	cmp    QWORD PTR [rsp],0x0
    9cc5:	lea    rax,[rdx+r13*1]
    9cc9:	jne    9dba <fts_children@@Base+0x1b4a>
    9ccf:	lea    rcx,[rax+0x2]
    9cd3:	lea    rdi,[rax+0x3]
    9cd7:	mov    QWORD PTR [rsp],rcx
    9cdb:	call   1ce0 <malloc@plt>
    9ce0:	mov    rdx,QWORD PTR [rsp+0x18]
    9ce5:	mov    r12,rax
    9ce8:	test   r12,r12
    9ceb:	je     9ddf <fts_children@@Base+0x1b6f>
    9cf1:	mov    r15,QWORD PTR [rsp]
    9cf5:	mov    rdi,0xfffffffffffffffe
    9cfc:	mov    rsi,QWORD PTR [rsp+0x10]
    9d01:	sub    rdi,rdx
    9d04:	add    rdx,0x1
    9d08:	sub    r15,r13
    9d0b:	add    rdi,r15
    9d0e:	add    rdi,r12
    9d11:	call   1ca0 <memcpy@plt>
    9d16:	mov    rsi,QWORD PTR [rsp+0x8]
    9d1b:	lea    rdi,[r12+r15*1-0x1]
    9d20:	lea    rdx,[r13+0x1]
    9d24:	mov    r15,r12
    9d27:	call   1ca0 <memcpy@plt>
    9d2c:	mov    rax,QWORD PTR [r14+0x8]
    9d30:	cmp    rax,QWORD PTR [r14+0x10]
    9d34:	jb     9bef <fts_children@@Base+0x197f>
    9d3a:	mov    rdi,r14
    9d3d:	call   1a80 <__uflow@plt>
    9d42:	cmp    eax,0xffffffff
    9d45:	mov    edi,eax
    9d47:	jne    9bfa <fts_children@@Base+0x198a>
    9d4d:	mov    rdi,r14
    9d50:	call   9ed0 <fts_children@@Base+0x1c60>
    9d55:	mov    rax,QWORD PTR [rsp]
    9d59:	test   rax,rax
    9d5c:	je     9b84 <fts_children@@Base+0x1914>
    9d62:	mov    BYTE PTR [r15+rax*1],0x0
    9d67:	jmp    9b8b <fts_children@@Base+0x191b>
    9d6c:	nop    DWORD PTR [rax+0x0]
    9d70:	lea    rdx,[rax+0x1]
    9d74:	mov    QWORD PTR [r14+0x8],rdx
    9d78:	movzx  eax,BYTE PTR [rax]
    9d7b:	mov    edx,0x1
    9d80:	cmp    eax,0xa
    9d83:	je     9db0 <fts_children@@Base+0x1b40>
    9d85:	test   dl,dl
    9d87:	je     9db0 <fts_children@@Base+0x1b40>
    9d89:	mov    rax,QWORD PTR [r14+0x8]
    9d8d:	cmp    rax,QWORD PTR [r14+0x10]
    9d91:	jb     9d70 <fts_children@@Base+0x1b00>
    9d93:	mov    rdi,r14
    9d96:	call   1a80 <__uflow@plt>
    9d9b:	cmp    eax,0xffffffff
    9d9e:	setne  dl
    9da1:	jmp    9d80 <fts_children@@Base+0x1b10>
    9da3:	mov    edi,r12d
    9da6:	call   1c20 <close@plt>
    9dab:	jmp    9b84 <fts_children@@Base+0x1914>
    9db0:	cmp    eax,0xffffffff
    9db3:	je     9d4d <fts_children@@Base+0x1add>
    9db5:	jmp    9be1 <fts_children@@Base+0x1971>
    9dba:	add    rax,QWORD PTR [rsp]
    9dbe:	mov    rdi,r15
    9dc1:	lea    rcx,[rax+0x2]
    9dc5:	lea    rsi,[rax+0x3]
    9dc9:	mov    QWORD PTR [rsp],rcx
    9dcd:	call   1d60 <realloc@plt>
    9dd2:	mov    rdx,QWORD PTR [rsp+0x18]
    9dd7:	mov    r12,rax
    9dda:	jmp    9ce8 <fts_children@@Base+0x1a78>
    9ddf:	mov    rdi,r15
    9de2:	lea    r15,[rip+0x13f8]        # b1e1 <quoting_style_vals@@Base+0x81>
    9de9:	call   1e70 <free@plt>
    9dee:	mov    rdi,r14
    9df1:	call   9ed0 <fts_children@@Base+0x1c60>
    9df6:	jmp    9b8b <fts_children@@Base+0x191b>
    9dfb:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    9e01:	jne    9e11 <fts_children@@Base+0x1ba1>
    9e03:	lea    rdi,[rax+0xe]
    9e07:	jmp    9ae5 <fts_children@@Base+0x1875>
    9e0c:	call   1b90 <__stack_chk_fail@plt>
    9e11:	lea    rdi,[rax+0xf]
    9e15:	add    r12,0x1
    9e19:	jmp    9b28 <fts_children@@Base+0x18b8>
    9e1e:	xchg   ax,ax
    9e20:	sub    rsp,0x58
    9e24:	mov    QWORD PTR [rsp+0x38],rcx
    9e29:	xor    ecx,ecx
    9e2b:	mov    rax,QWORD PTR fs:0x28
    9e34:	mov    QWORD PTR [rsp+0x18],rax
    9e39:	xor    eax,eax
    9e3b:	test   dl,0x40
    9e3e:	jne    9e68 <fts_children@@Base+0x1bf8>
    9e40:	xor    eax,eax
    9e42:	call   1b80 <openat@plt>
    9e47:	mov    edi,eax
    9e49:	call   9e90 <fts_children@@Base+0x1c20>
    9e4e:	mov    rsi,QWORD PTR [rsp+0x18]
    9e53:	xor    rsi,QWORD PTR fs:0x28
    9e5c:	jne    9e89 <fts_children@@Base+0x1c19>
    9e5e:	add    rsp,0x58
    9e62:	ret    
    9e63:	nop    DWORD PTR [rax+rax*1+0x0]
    9e68:	lea    rax,[rsp+0x60]
    9e6d:	mov    DWORD PTR [rsp],0x18
    9e74:	mov    ecx,DWORD PTR [rsp+0x38]
    9e78:	mov    QWORD PTR [rsp+0x8],rax
    9e7d:	lea    rax,[rsp+0x20]
    9e82:	mov    QWORD PTR [rsp+0x10],rax
    9e87:	jmp    9e40 <fts_children@@Base+0x1bd0>
    9e89:	call   1b90 <__stack_chk_fail@plt>
    9e8e:	xchg   ax,ax
    9e90:	push   r13
    9e92:	push   r12
    9e94:	push   rbp
    9e95:	push   rbx
    9e96:	mov    ebx,edi
    9e98:	sub    rsp,0x8
    9e9c:	cmp    edi,0x2
    9e9f:	ja     9ec2 <fts_children@@Base+0x1c52>
    9ea1:	call   a140 <fts_children@@Base+0x1ed0>
    9ea6:	mov    r12d,eax
    9ea9:	call   1ab0 <__errno_location@plt>
    9eae:	mov    r13d,DWORD PTR [rax]
    9eb1:	mov    rbp,rax
    9eb4:	mov    edi,ebx
    9eb6:	call   1c20 <close@plt>
    9ebb:	mov    ebx,r12d
    9ebe:	mov    DWORD PTR [rbp+0x0],r13d
    9ec2:	add    rsp,0x8
    9ec6:	mov    eax,ebx
    9ec8:	pop    rbx
    9ec9:	pop    rbp
    9eca:	pop    r12
    9ecc:	pop    r13
    9ece:	ret    
    9ecf:	nop
    9ed0:	push   r12
    9ed2:	push   rbp
    9ed3:	push   rbx
    9ed4:	mov    rbx,rdi
    9ed7:	call   1cb0 <fileno@plt>
    9edc:	test   eax,eax
    9ede:	mov    rdi,rbx
    9ee1:	js     9f37 <fts_children@@Base+0x1cc7>
    9ee3:	call   1d40 <__freading@plt>
    9ee8:	test   eax,eax
    9eea:	jne    9f18 <fts_children@@Base+0x1ca8>
    9eec:	mov    rdi,rbx
    9eef:	call   a0a0 <fts_children@@Base+0x1e30>
    9ef4:	test   eax,eax
    9ef6:	je     9f34 <fts_children@@Base+0x1cc4>
    9ef8:	call   1ab0 <__errno_location@plt>
    9efd:	mov    r12d,DWORD PTR [rax]
    9f00:	mov    rdi,rbx
    9f03:	mov    rbp,rax
    9f06:	call   1b20 <fclose@plt>
    9f0b:	test   r12d,r12d
    9f0e:	jne    9f40 <fts_children@@Base+0x1cd0>
    9f10:	pop    rbx
    9f11:	pop    rbp
    9f12:	pop    r12
    9f14:	ret    
    9f15:	nop    DWORD PTR [rax]
    9f18:	mov    rdi,rbx
    9f1b:	call   1cb0 <fileno@plt>
    9f20:	xor    esi,esi
    9f22:	mov    edx,0x1
    9f27:	mov    edi,eax
    9f29:	call   1be0 <lseek@plt>
    9f2e:	cmp    rax,0xffffffffffffffff
    9f32:	jne    9eec <fts_children@@Base+0x1c7c>
    9f34:	mov    rdi,rbx
    9f37:	pop    rbx
    9f38:	pop    rbp
    9f39:	pop    r12
    9f3b:	jmp    1b20 <fclose@plt>
    9f40:	mov    DWORD PTR [rbp+0x0],r12d
    9f44:	mov    eax,0xffffffff
    9f49:	jmp    9f10 <fts_children@@Base+0x1ca0>
    9f4b:	nop    DWORD PTR [rax+rax*1+0x0]
    9f50:	push   r12
    9f52:	push   rbp
    9f53:	mov    ebp,edi
    9f55:	push   rbx
    9f56:	sub    rsp,0x50
    9f5a:	mov    rax,QWORD PTR fs:0x28
    9f63:	mov    QWORD PTR [rsp+0x18],rax
    9f68:	xor    eax,eax
    9f6a:	lea    rax,[rsp+0x70]
    9f6f:	cmp    esi,0x406
    9f75:	mov    QWORD PTR [rsp+0x30],rdx
    9f7a:	mov    QWORD PTR [rsp+0x38],rcx
    9f7f:	mov    DWORD PTR [rsp],0x10
    9f86:	mov    QWORD PTR [rsp+0x8],rax
    9f8b:	lea    rax,[rsp+0x20]
    9f90:	mov    QWORD PTR [rsp+0x10],rax
    9f95:	jne    a085 <fts_children@@Base+0x1e15>
    9f9b:	cmp    DWORD PTR [rip+0x2042de],0x0        # 20e280 <program_name@@Base+0x158>
    9fa2:	mov    r12d,DWORD PTR [rax+0x10]
    9fa6:	mov    DWORD PTR [rsp],0x18
    9fad:	mov    edx,r12d
    9fb0:	js     a01a <fts_children@@Base+0x1daa>
    9fb2:	xor    eax,eax
    9fb4:	call   1b00 <fcntl@plt>
    9fb9:	test   eax,eax
    9fbb:	mov    ebx,eax
    9fbd:	js     9ff0 <fts_children@@Base+0x1d80>
    9fbf:	mov    DWORD PTR [rip+0x2042b7],0x1        # 20e280 <program_name@@Base+0x158>
    9fc9:	mov    rcx,QWORD PTR [rsp+0x18]
    9fce:	xor    rcx,QWORD PTR fs:0x28
    9fd7:	mov    eax,ebx
    9fd9:	jne    a080 <fts_children@@Base+0x1e10>
    9fdf:	add    rsp,0x50
    9fe3:	pop    rbx
    9fe4:	pop    rbp
    9fe5:	pop    r12
    9fe7:	ret    
    9fe8:	nop    DWORD PTR [rax+rax*1+0x0]
    9ff0:	call   1ab0 <__errno_location@plt>
    9ff5:	cmp    DWORD PTR [rax],0x16
    9ff8:	jne    9fbf <fts_children@@Base+0x1d4f>
    9ffa:	xor    esi,esi
    9ffc:	xor    eax,eax
    9ffe:	mov    edx,r12d
    a001:	mov    edi,ebp
    a003:	call   9f50 <fts_children@@Base+0x1ce0>
    a008:	test   eax,eax
    a00a:	mov    ebx,eax
    a00c:	js     9fc9 <fts_children@@Base+0x1d59>
    a00e:	mov    DWORD PTR [rip+0x204268],0xffffffff        # 20e280 <program_name@@Base+0x158>
    a018:	jmp    a032 <fts_children@@Base+0x1dc2>
    a01a:	xor    esi,esi
    a01c:	xor    eax,eax
    a01e:	call   9f50 <fts_children@@Base+0x1ce0>
    a023:	test   eax,eax
    a025:	mov    ebx,eax
    a027:	js     9fc9 <fts_children@@Base+0x1d59>
    a029:	cmp    DWORD PTR [rip+0x204250],0xffffffff        # 20e280 <program_name@@Base+0x158>
    a030:	jne    9fc9 <fts_children@@Base+0x1d59>
    a032:	xor    eax,eax
    a034:	mov    esi,0x1
    a039:	mov    edi,ebx
    a03b:	call   1b00 <fcntl@plt>
    a040:	test   eax,eax
    a042:	js     a060 <fts_children@@Base+0x1df0>
    a044:	or     eax,0x1
    a047:	mov    esi,0x2
    a04c:	mov    edi,ebx
    a04e:	mov    edx,eax
    a050:	xor    eax,eax
    a052:	call   1b00 <fcntl@plt>
    a057:	cmp    eax,0xffffffff
    a05a:	jne    9fc9 <fts_children@@Base+0x1d59>
    a060:	call   1ab0 <__errno_location@plt>
    a065:	mov    r12d,DWORD PTR [rax]
    a068:	mov    rbp,rax
    a06b:	mov    edi,ebx
    a06d:	call   1c20 <close@plt>
    a072:	mov    ebx,0xffffffff
    a077:	mov    DWORD PTR [rbp+0x0],r12d
    a07b:	jmp    9fc9 <fts_children@@Base+0x1d59>
    a080:	call   1b90 <__stack_chk_fail@plt>
    a085:	mov    rax,QWORD PTR [rsp+0x10]
    a08a:	mov    rdx,QWORD PTR [rax+0x10]
    a08e:	xor    eax,eax
    a090:	call   1b00 <fcntl@plt>
    a095:	mov    ebx,eax
    a097:	jmp    9fc9 <fts_children@@Base+0x1d59>
    a09c:	nop    DWORD PTR [rax+0x0]
    a0a0:	test   rdi,rdi
    a0a3:	push   rbx
    a0a4:	mov    rbx,rdi
    a0a7:	je     a0ba <fts_children@@Base+0x1e4a>
    a0a9:	call   1d40 <__freading@plt>
    a0ae:	test   eax,eax
    a0b0:	je     a0ba <fts_children@@Base+0x1e4a>
    a0b2:	test   DWORD PTR [rbx],0x100
    a0b8:	jne    a0c8 <fts_children@@Base+0x1e58>
    a0ba:	mov    rdi,rbx
    a0bd:	pop    rbx
    a0be:	jmp    1cf0 <fflush@plt>
    a0c3:	nop    DWORD PTR [rax+rax*1+0x0]
    a0c8:	mov    rdi,rbx
    a0cb:	mov    edx,0x1
    a0d0:	xor    esi,esi
    a0d2:	call   a0e0 <fts_children@@Base+0x1e70>
    a0d7:	mov    rdi,rbx
    a0da:	pop    rbx
    a0db:	jmp    1cf0 <fflush@plt>
    a0e0:	mov    rax,QWORD PTR [rdi+0x8]
    a0e4:	cmp    QWORD PTR [rdi+0x10],rax
    a0e8:	je     a0f0 <fts_children@@Base+0x1e80>
    a0ea:	jmp    1dd0 <fseeko@plt>
    a0ef:	nop
    a0f0:	mov    rax,QWORD PTR [rdi+0x20]
    a0f4:	cmp    QWORD PTR [rdi+0x28],rax
    a0f8:	jne    a0ea <fts_children@@Base+0x1e7a>
    a0fa:	cmp    QWORD PTR [rdi+0x48],0x0
    a0ff:	jne    a0ea <fts_children@@Base+0x1e7a>
    a101:	push   r12
    a103:	push   rbp
    a104:	mov    r12d,edx
    a107:	push   rbx
    a108:	mov    rbp,rsi
    a10b:	mov    rbx,rdi
    a10e:	call   1cb0 <fileno@plt>
    a113:	mov    edx,r12d
    a116:	mov    rsi,rbp
    a119:	mov    edi,eax
    a11b:	call   1be0 <lseek@plt>
    a120:	cmp    rax,0xffffffffffffffff
    a124:	je     a132 <fts_children@@Base+0x1ec2>
    a126:	and    DWORD PTR [rbx],0xffffffef
    a129:	mov    QWORD PTR [rbx+0x90],rax
    a130:	xor    eax,eax
    a132:	pop    rbx
    a133:	pop    rbp
    a134:	pop    r12
    a136:	ret    
    a137:	nop    WORD PTR [rax+rax*1+0x0]
    a140:	mov    edx,0x3
    a145:	xor    esi,esi
    a147:	xor    eax,eax
    a149:	jmp    9f50 <fts_children@@Base+0x1ce0>
    a14e:	xchg   ax,ax
    a150:	push   r15
    a152:	push   r14
    a154:	mov    r15d,edi
    a157:	push   r13
    a159:	push   r12
    a15b:	lea    r12,[rip+0x20388e]        # 20d9f0 <version_etc_copyright@@Base+0x202530>
    a162:	push   rbp
    a163:	lea    rbp,[rip+0x20388e]        # 20d9f8 <version_etc_copyright@@Base+0x202538>
    a16a:	push   rbx
    a16b:	mov    r14,rsi
    a16e:	mov    r13,rdx
    a171:	sub    rbp,r12
    a174:	sub    rsp,0x8
    a178:	sar    rbp,0x3
    a17c:	call   1a58 <__uflow@plt-0x28>
    a181:	test   rbp,rbp
    a184:	je     a1a6 <fts_children@@Base+0x1f36>
    a186:	xor    ebx,ebx
    a188:	nop    DWORD PTR [rax+rax*1+0x0]
    a190:	mov    rdx,r13
    a193:	mov    rsi,r14
    a196:	mov    edi,r15d
    a199:	call   QWORD PTR [r12+rbx*8]
    a19d:	add    rbx,0x1
    a1a1:	cmp    rbp,rbx
    a1a4:	jne    a190 <fts_children@@Base+0x1f20>
    a1a6:	add    rsp,0x8
    a1aa:	pop    rbx
    a1ab:	pop    rbp
    a1ac:	pop    r12
    a1ae:	pop    r13
    a1b0:	pop    r14
    a1b2:	pop    r15
    a1b4:	ret    
    a1b5:	nop
    a1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a1c0:	repz ret 
    a1c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a1cc:	nop    DWORD PTR [rax+0x0]
    a1d0:	lea    rax,[rip+0x203e31]        # 20e008 <quoting_style_args@@Base+0x4a8>
    a1d7:	test   rax,rax
    a1da:	je     a1f0 <fts_children@@Base+0x1f80>
    a1dc:	mov    rdx,QWORD PTR [rax]
    a1df:	xor    esi,esi
    a1e1:	jmp    1e00 <__cxa_atexit@plt>
    a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a1f0:	xor    edx,edx
    a1f2:	xor    esi,esi
    a1f4:	jmp    1e00 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000a1fc <.fini>:
    a1fc:	sub    rsp,0x8
    a200:	add    rsp,0x8
    a204:	ret    
