
/usr/bin/wc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001c30 <.init>:
    1c30:	sub    rsp,0x8
    1c34:	mov    rax,QWORD PTR [rip+0x20838d]        # 209fc8 <__gmon_start__>
    1c3b:	test   rax,rax
    1c3e:	je     1c42 <__uflow@plt-0x1e>
    1c40:	call   rax
    1c42:	add    rsp,0x8
    1c46:	ret    

Disassembly of section .plt:

0000000000001c50 <__uflow@plt-0x10>:
    1c50:	push   QWORD PTR [rip+0x20813a]        # 209d90 <quoting_style_args@@Base+0x250>
    1c56:	jmp    QWORD PTR [rip+0x20813c]        # 209d98 <quoting_style_args@@Base+0x258>
    1c5c:	nop    DWORD PTR [rax+0x0]

0000000000001c60 <__uflow@plt>:
    1c60:	jmp    QWORD PTR [rip+0x20813a]        # 209da0 <__uflow@GLIBC_2.2.5>
    1c66:	push   0x0
    1c6b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001c70 <getenv@plt>:
    1c70:	jmp    QWORD PTR [rip+0x208132]        # 209da8 <getenv@GLIBC_2.2.5>
    1c76:	push   0x1
    1c7b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001c80 <abort@plt>:
    1c80:	jmp    QWORD PTR [rip+0x20812a]        # 209db0 <abort@GLIBC_2.2.5>
    1c86:	push   0x2
    1c8b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001c90 <__errno_location@plt>:
    1c90:	jmp    QWORD PTR [rip+0x208122]        # 209db8 <__errno_location@GLIBC_2.2.5>
    1c96:	push   0x3
    1c9b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ca0 <strncmp@plt>:
    1ca0:	jmp    QWORD PTR [rip+0x20811a]        # 209dc0 <strncmp@GLIBC_2.2.5>
    1ca6:	push   0x4
    1cab:	jmp    1c50 <__uflow@plt-0x10>

0000000000001cb0 <_exit@plt>:
    1cb0:	jmp    QWORD PTR [rip+0x208112]        # 209dc8 <_exit@GLIBC_2.2.5>
    1cb6:	push   0x5
    1cbb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001cc0 <__fpending@plt>:
    1cc0:	jmp    QWORD PTR [rip+0x20810a]        # 209dd0 <__fpending@GLIBC_2.2.5>
    1cc6:	push   0x6
    1ccb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001cd0 <ferror@plt>:
    1cd0:	jmp    QWORD PTR [rip+0x208102]        # 209dd8 <ferror@GLIBC_2.2.5>
    1cd6:	push   0x7
    1cdb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ce0 <iswcntrl@plt>:
    1ce0:	jmp    QWORD PTR [rip+0x2080fa]        # 209de0 <iswcntrl@GLIBC_2.2.5>
    1ce6:	push   0x8
    1ceb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001cf0 <textdomain@plt>:
    1cf0:	jmp    QWORD PTR [rip+0x2080f2]        # 209de8 <textdomain@GLIBC_2.2.5>
    1cf6:	push   0x9
    1cfb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d00 <fclose@plt>:
    1d00:	jmp    QWORD PTR [rip+0x2080ea]        # 209df0 <fclose@GLIBC_2.2.5>
    1d06:	push   0xa
    1d0b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d10 <bindtextdomain@plt>:
    1d10:	jmp    QWORD PTR [rip+0x2080e2]        # 209df8 <bindtextdomain@GLIBC_2.2.5>
    1d16:	push   0xb
    1d1b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d20 <dcgettext@plt>:
    1d20:	jmp    QWORD PTR [rip+0x2080da]        # 209e00 <dcgettext@GLIBC_2.2.5>
    1d26:	push   0xc
    1d2b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d30 <__ctype_get_mb_cur_max@plt>:
    1d30:	jmp    QWORD PTR [rip+0x2080d2]        # 209e08 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1d36:	push   0xd
    1d3b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d40 <strlen@plt>:
    1d40:	jmp    QWORD PTR [rip+0x2080ca]        # 209e10 <strlen@GLIBC_2.2.5>
    1d46:	push   0xe
    1d4b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d50 <__stack_chk_fail@plt>:
    1d50:	jmp    QWORD PTR [rip+0x2080c2]        # 209e18 <__stack_chk_fail@GLIBC_2.4>
    1d56:	push   0xf
    1d5b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d60 <getopt_long@plt>:
    1d60:	jmp    QWORD PTR [rip+0x2080ba]        # 209e20 <getopt_long@GLIBC_2.2.5>
    1d66:	push   0x10
    1d6b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d70 <mbrtowc@plt>:
    1d70:	jmp    QWORD PTR [rip+0x2080b2]        # 209e28 <mbrtowc@GLIBC_2.2.5>
    1d76:	push   0x11
    1d7b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d80 <strchr@plt>:
    1d80:	jmp    QWORD PTR [rip+0x2080aa]        # 209e30 <strchr@GLIBC_2.2.5>
    1d86:	push   0x12
    1d8b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001d90 <__overflow@plt>:
    1d90:	jmp    QWORD PTR [rip+0x2080a2]        # 209e38 <__overflow@GLIBC_2.2.5>
    1d96:	push   0x13
    1d9b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001da0 <strrchr@plt>:
    1da0:	jmp    QWORD PTR [rip+0x20809a]        # 209e40 <strrchr@GLIBC_2.2.5>
    1da6:	push   0x14
    1dab:	jmp    1c50 <__uflow@plt-0x10>

0000000000001db0 <lseek@plt>:
    1db0:	jmp    QWORD PTR [rip+0x208092]        # 209e48 <lseek@GLIBC_2.2.5>
    1db6:	push   0x15
    1dbb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001dc0 <__assert_fail@plt>:
    1dc0:	jmp    QWORD PTR [rip+0x20808a]        # 209e50 <__assert_fail@GLIBC_2.2.5>
    1dc6:	push   0x16
    1dcb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001dd0 <memset@plt>:
    1dd0:	jmp    QWORD PTR [rip+0x208082]        # 209e58 <memset@GLIBC_2.2.5>
    1dd6:	push   0x17
    1ddb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001de0 <fscanf@plt>:
    1de0:	jmp    QWORD PTR [rip+0x20807a]        # 209e60 <fscanf@GLIBC_2.2.5>
    1de6:	push   0x18
    1deb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001df0 <fgetc@plt>:
    1df0:	jmp    QWORD PTR [rip+0x208072]        # 209e68 <fgetc@GLIBC_2.2.5>
    1df6:	push   0x19
    1dfb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e00 <close@plt>:
    1e00:	jmp    QWORD PTR [rip+0x20806a]        # 209e70 <close@GLIBC_2.2.5>
    1e06:	push   0x1a
    1e0b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e10 <posix_fadvise@plt>:
    1e10:	jmp    QWORD PTR [rip+0x208062]        # 209e78 <posix_fadvise@GLIBC_2.2.5>
    1e16:	push   0x1b
    1e1b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e20 <memchr@plt>:
    1e20:	jmp    QWORD PTR [rip+0x20805a]        # 209e80 <memchr@GLIBC_2.2.5>
    1e26:	push   0x1c
    1e2b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e30 <read@plt>:
    1e30:	jmp    QWORD PTR [rip+0x208052]        # 209e88 <read@GLIBC_2.2.5>
    1e36:	push   0x1d
    1e3b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e40 <memcmp@plt>:
    1e40:	jmp    QWORD PTR [rip+0x20804a]        # 209e90 <memcmp@GLIBC_2.2.5>
    1e46:	push   0x1e
    1e4b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e50 <fputs_unlocked@plt>:
    1e50:	jmp    QWORD PTR [rip+0x208042]        # 209e98 <fputs_unlocked@GLIBC_2.2.5>
    1e56:	push   0x1f
    1e5b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e60 <calloc@plt>:
    1e60:	jmp    QWORD PTR [rip+0x20803a]        # 209ea0 <calloc@GLIBC_2.2.5>
    1e66:	push   0x20
    1e6b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e70 <strcmp@plt>:
    1e70:	jmp    QWORD PTR [rip+0x208032]        # 209ea8 <strcmp@GLIBC_2.2.5>
    1e76:	push   0x21
    1e7b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e80 <__memmove_chk@plt>:
    1e80:	jmp    QWORD PTR [rip+0x20802a]        # 209eb0 <__memmove_chk@GLIBC_2.3.4>
    1e86:	push   0x22
    1e8b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001e90 <feof@plt>:
    1e90:	jmp    QWORD PTR [rip+0x208022]        # 209eb8 <feof@GLIBC_2.2.5>
    1e96:	push   0x23
    1e9b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ea0 <memcpy@plt>:
    1ea0:	jmp    QWORD PTR [rip+0x20801a]        # 209ec0 <memcpy@GLIBC_2.14>
    1ea6:	push   0x24
    1eab:	jmp    1c50 <__uflow@plt-0x10>

0000000000001eb0 <fileno@plt>:
    1eb0:	jmp    QWORD PTR [rip+0x208012]        # 209ec8 <fileno@GLIBC_2.2.5>
    1eb6:	push   0x25
    1ebb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ec0 <__xstat@plt>:
    1ec0:	jmp    QWORD PTR [rip+0x20800a]        # 209ed0 <__xstat@GLIBC_2.2.5>
    1ec6:	push   0x26
    1ecb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ed0 <wcwidth@plt>:
    1ed0:	jmp    QWORD PTR [rip+0x208002]        # 209ed8 <wcwidth@GLIBC_2.2.5>
    1ed6:	push   0x27
    1edb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ee0 <fflush@plt>:
    1ee0:	jmp    QWORD PTR [rip+0x207ffa]        # 209ee0 <fflush@GLIBC_2.2.5>
    1ee6:	push   0x28
    1eeb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ef0 <nl_langinfo@plt>:
    1ef0:	jmp    QWORD PTR [rip+0x207ff2]        # 209ee8 <nl_langinfo@GLIBC_2.2.5>
    1ef6:	push   0x29
    1efb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f00 <ungetc@plt>:
    1f00:	jmp    QWORD PTR [rip+0x207fea]        # 209ef0 <ungetc@GLIBC_2.2.5>
    1f06:	push   0x2a
    1f0b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f10 <__fxstat@plt>:
    1f10:	jmp    QWORD PTR [rip+0x207fe2]        # 209ef8 <__fxstat@GLIBC_2.2.5>
    1f16:	push   0x2b
    1f1b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f20 <__freading@plt>:
    1f20:	jmp    QWORD PTR [rip+0x207fda]        # 209f00 <__freading@GLIBC_2.2.5>
    1f26:	push   0x2c
    1f2b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f30 <realloc@plt>:
    1f30:	jmp    QWORD PTR [rip+0x207fd2]        # 209f08 <realloc@GLIBC_2.2.5>
    1f36:	push   0x2d
    1f3b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f40 <fdopen@plt>:
    1f40:	jmp    QWORD PTR [rip+0x207fca]        # 209f10 <fdopen@GLIBC_2.2.5>
    1f46:	push   0x2e
    1f4b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f50 <setlocale@plt>:
    1f50:	jmp    QWORD PTR [rip+0x207fc2]        # 209f18 <setlocale@GLIBC_2.2.5>
    1f56:	push   0x2f
    1f5b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f60 <__printf_chk@plt>:
    1f60:	jmp    QWORD PTR [rip+0x207fba]        # 209f20 <__printf_chk@GLIBC_2.3.4>
    1f66:	push   0x30
    1f6b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f70 <setvbuf@plt>:
    1f70:	jmp    QWORD PTR [rip+0x207fb2]        # 209f28 <setvbuf@GLIBC_2.2.5>
    1f76:	push   0x31
    1f7b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f80 <iswspace@plt>:
    1f80:	jmp    QWORD PTR [rip+0x207faa]        # 209f30 <iswspace@GLIBC_2.2.5>
    1f86:	push   0x32
    1f8b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001f90 <error@plt>:
    1f90:	jmp    QWORD PTR [rip+0x207fa2]        # 209f38 <error@GLIBC_2.2.5>
    1f96:	push   0x33
    1f9b:	jmp    1c50 <__uflow@plt-0x10>

0000000000001fa0 <open@plt>:
    1fa0:	jmp    QWORD PTR [rip+0x207f9a]        # 209f40 <open@GLIBC_2.2.5>
    1fa6:	push   0x34
    1fab:	jmp    1c50 <__uflow@plt-0x10>

0000000000001fb0 <fseeko@plt>:
    1fb0:	jmp    QWORD PTR [rip+0x207f92]        # 209f48 <fseeko@GLIBC_2.2.5>
    1fb6:	push   0x35
    1fbb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001fc0 <fopen@plt>:
    1fc0:	jmp    QWORD PTR [rip+0x207f8a]        # 209f50 <fopen@GLIBC_2.2.5>
    1fc6:	push   0x36
    1fcb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001fd0 <sysconf@plt>:
    1fd0:	jmp    QWORD PTR [rip+0x207f82]        # 209f58 <sysconf@GLIBC_2.2.5>
    1fd6:	push   0x37
    1fdb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001fe0 <__cxa_atexit@plt>:
    1fe0:	jmp    QWORD PTR [rip+0x207f7a]        # 209f60 <__cxa_atexit@GLIBC_2.2.5>
    1fe6:	push   0x38
    1feb:	jmp    1c50 <__uflow@plt-0x10>

0000000000001ff0 <sysinfo@plt>:
    1ff0:	jmp    QWORD PTR [rip+0x207f72]        # 209f68 <sysinfo@GLIBC_2.2.5>
    1ff6:	push   0x39
    1ffb:	jmp    1c50 <__uflow@plt-0x10>

0000000000002000 <getpagesize@plt>:
    2000:	jmp    QWORD PTR [rip+0x207f6a]        # 209f70 <getpagesize@GLIBC_2.2.5>
    2006:	push   0x3a
    200b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002010 <exit@plt>:
    2010:	jmp    QWORD PTR [rip+0x207f62]        # 209f78 <exit@GLIBC_2.2.5>
    2016:	push   0x3b
    201b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002020 <fwrite@plt>:
    2020:	jmp    QWORD PTR [rip+0x207f5a]        # 209f80 <fwrite@GLIBC_2.2.5>
    2026:	push   0x3c
    202b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002030 <__fprintf_chk@plt>:
    2030:	jmp    QWORD PTR [rip+0x207f52]        # 209f88 <__fprintf_chk@GLIBC_2.3.4>
    2036:	push   0x3d
    203b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002040 <mbsinit@plt>:
    2040:	jmp    QWORD PTR [rip+0x207f4a]        # 209f90 <mbsinit@GLIBC_2.2.5>
    2046:	push   0x3e
    204b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002050 <iswprint@plt>:
    2050:	jmp    QWORD PTR [rip+0x207f42]        # 209f98 <iswprint@GLIBC_2.2.5>
    2056:	push   0x3f
    205b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002060 <getdelim@plt>:
    2060:	jmp    QWORD PTR [rip+0x207f3a]        # 209fa0 <getdelim@GLIBC_2.2.5>
    2066:	push   0x40
    206b:	jmp    1c50 <__uflow@plt-0x10>

0000000000002070 <__ctype_b_loc@plt>:
    2070:	jmp    QWORD PTR [rip+0x207f32]        # 209fa8 <__ctype_b_loc@GLIBC_2.3>
    2076:	push   0x41
    207b:	jmp    1c50 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000002080 <free@plt>:
    2080:	jmp    QWORD PTR [rip+0x207f2a]        # 209fb0 <free@GLIBC_2.2.5>
    2086:	xchg   ax,ax

0000000000002088 <malloc@plt>:
    2088:	jmp    QWORD PTR [rip+0x207f42]        # 209fd0 <malloc@GLIBC_2.2.5>
    208e:	xchg   ax,ax

0000000000002090 <__cxa_finalize@plt>:
    2090:	jmp    QWORD PTR [rip+0x207f4a]        # 209fe0 <__cxa_finalize@GLIBC_2.2.5>
    2096:	xchg   ax,ax

Disassembly of section .text:

00000000000020a0 <_obstack_begin@@Base-0x4c80>:
    20a0:	push   r15
    20a2:	push   r14
    20a4:	push   r13
    20a6:	push   r12
    20a8:	mov    r12,rsi
    20ab:	push   rbp
    20ac:	push   rbx
    20ad:	mov    ebx,edi
    20af:	lea    r13,[rip+0x20796a]        # 209a20 <version_etc_copyright@@Base+0x201440>
    20b6:	xor    ebp,ebp
    20b8:	sub    rsp,0x1f8
    20bf:	mov    rdi,QWORD PTR [rsi]
    20c2:	mov    rax,QWORD PTR fs:0x28
    20cb:	mov    QWORD PTR [rsp+0x1e8],rax
    20d3:	xor    eax,eax
    20d5:	call   4090 <__cxa_finalize@plt+0x2000>
    20da:	lea    rsi,[rip+0x6220]        # 8301 <quoting_style_vals@@Base+0x81>
    20e1:	mov    edi,0x6
    20e6:	call   1f50 <setlocale@plt>
    20eb:	lea    rsi,[rip+0x54cc]        # 75be <_IO_stdin_used@@Base+0x9e>
    20f2:	lea    rdi,[rip+0x54b7]        # 75b0 <_IO_stdin_used@@Base+0x90>
    20f9:	call   1d10 <bindtextdomain@plt>
    20fe:	lea    rdi,[rip+0x54ab]        # 75b0 <_IO_stdin_used@@Base+0x90>
    2105:	call   1cf0 <textdomain@plt>
    210a:	lea    rdi,[rip+0x1b8f]        # 3ca0 <__cxa_finalize@plt+0x1c10>
    2111:	call   74e0 <_obstack_memory_used@@Base+0x5e0>
    2116:	call   2000 <getpagesize@plt>
    211b:	mov    rdi,QWORD PTR [rip+0x207f86]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    2122:	cdqe   
    2124:	xor    ecx,ecx
    2126:	mov    edx,0x1
    212b:	xor    esi,esi
    212d:	mov    QWORD PTR [rip+0x207fc4],rax        # 20a0f8 <stderr@@GLIBC_2.2.5+0x18>
    2134:	call   1f70 <setvbuf@plt>
    2139:	mov    BYTE PTR [rip+0x207fc9],0x0        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    2140:	mov    BYTE PTR [rip+0x207fc3],0x0        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    2147:	mov    BYTE PTR [rip+0x207fbd],0x0        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    214e:	mov    BYTE PTR [rip+0x207fb7],0x0        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    2155:	mov    BYTE PTR [rip+0x207fac],0x0        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    215c:	mov    QWORD PTR [rip+0x207fa9],0x0        # 20a110 <stderr@@GLIBC_2.2.5+0x30>
    2167:	mov    QWORD PTR [rip+0x207fa6],0x0        # 20a118 <stderr@@GLIBC_2.2.5+0x38>
    2172:	mov    QWORD PTR [rip+0x207fa3],0x0        # 20a120 <stderr@@GLIBC_2.2.5+0x40>
    217d:	mov    QWORD PTR [rip+0x207fa0],0x0        # 20a128 <stderr@@GLIBC_2.2.5+0x48>
    2188:	mov    QWORD PTR [rip+0x207f9d],0x0        # 20a130 <stderr@@GLIBC_2.2.5+0x50>
    2193:	nop    DWORD PTR [rax+rax*1+0x0]
    2198:	lea    rdx,[rip+0x544c]        # 75eb <_IO_stdin_used@@Base+0xcb>
    219f:	xor    r8d,r8d
    21a2:	mov    rcx,r13
    21a5:	mov    rsi,r12
    21a8:	mov    edi,ebx
    21aa:	call   1d60 <getopt_long@plt>
    21af:	cmp    eax,0xffffffff
    21b2:	je     22b4 <__cxa_finalize@plt+0x224>
    21b8:	cmp    eax,0x63
    21bb:	je     2270 <__cxa_finalize@plt+0x1e0>
    21c1:	jle    21f0 <__cxa_finalize@plt+0x160>
    21c3:	cmp    eax,0x6d
    21c6:	je     22a8 <__cxa_finalize@plt+0x218>
    21cc:	jle    2290 <__cxa_finalize@plt+0x200>
    21d2:	cmp    eax,0x77
    21d5:	je     2280 <__cxa_finalize@plt+0x1f0>
    21db:	add    eax,0xffffff80
    21de:	jne    2207 <__cxa_finalize@plt+0x177>
    21e0:	mov    rbp,QWORD PTR [rip+0x207ed9]        # 20a0c0 <optarg@@GLIBC_2.2.5>
    21e7:	jmp    2198 <__cxa_finalize@plt+0x108>
    21e9:	nop    DWORD PTR [rax+0x0]
    21f0:	cmp    eax,0xffffff7e
    21f5:	je     2a26 <__cxa_finalize@plt+0x996>
    21fb:	cmp    eax,0x4c
    21fe:	je     2260 <__cxa_finalize@plt+0x1d0>
    2200:	cmp    eax,0xffffff7d
    2205:	je     2218 <__cxa_finalize@plt+0x188>
    2207:	mov    edi,0x1
    220c:	call   3790 <__cxa_finalize@plt+0x1700>
    2211:	nop    DWORD PTR [rax+0x0]
    2218:	sub    rsp,0x8
    221c:	mov    rdi,QWORD PTR [rip+0x207e85]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    2223:	mov    rcx,QWORD PTR [rip+0x207de6]        # 20a010 <Version@@Base>
    222a:	push   0x0
    222c:	lea    r9,[rip+0x539d]        # 75d0 <_IO_stdin_used@@Base+0xb0>
    2233:	lea    r8,[rip+0x53a6]        # 75e0 <_IO_stdin_used@@Base+0xc0>
    223a:	lea    rdx,[rip+0x536b]        # 75ac <_IO_stdin_used@@Base+0x8c>
    2241:	lea    rsi,[rip+0x52eb]        # 7533 <_IO_stdin_used@@Base+0x13>
    2248:	xor    eax,eax
    224a:	call   6670 <__cxa_finalize@plt+0x45e0>
    224f:	xor    edi,edi
    2251:	call   2010 <exit@plt>
    2256:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2260:	mov    BYTE PTR [rip+0x207ea1],0x1        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    2267:	jmp    2198 <__cxa_finalize@plt+0x108>
    226c:	nop    DWORD PTR [rax+0x0]
    2270:	mov    BYTE PTR [rip+0x207e92],0x1        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    2277:	jmp    2198 <__cxa_finalize@plt+0x108>
    227c:	nop    DWORD PTR [rax+0x0]
    2280:	mov    BYTE PTR [rip+0x207e84],0x1        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    2287:	jmp    2198 <__cxa_finalize@plt+0x108>
    228c:	nop    DWORD PTR [rax+0x0]
    2290:	cmp    eax,0x6c
    2293:	jne    2207 <__cxa_finalize@plt+0x177>
    2299:	mov    BYTE PTR [rip+0x207e6c],0x1        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    22a0:	jmp    2198 <__cxa_finalize@plt+0x108>
    22a5:	nop    DWORD PTR [rax]
    22a8:	mov    BYTE PTR [rip+0x207e5b],0x1        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    22af:	jmp    2198 <__cxa_finalize@plt+0x108>
    22b4:	cmp    BYTE PTR [rip+0x207e51],0x0        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    22bb:	jne    22f6 <__cxa_finalize@plt+0x266>
    22bd:	cmp    BYTE PTR [rip+0x207e47],0x0        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    22c4:	jne    22f6 <__cxa_finalize@plt+0x266>
    22c6:	cmp    BYTE PTR [rip+0x207e3d],0x0        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    22cd:	jne    22f6 <__cxa_finalize@plt+0x266>
    22cf:	cmp    BYTE PTR [rip+0x207e33],0x0        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    22d6:	jne    22f6 <__cxa_finalize@plt+0x266>
    22d8:	cmp    BYTE PTR [rip+0x207e29],0x0        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    22df:	jne    22f6 <__cxa_finalize@plt+0x266>
    22e1:	mov    BYTE PTR [rip+0x207e21],0x1        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    22e8:	mov    BYTE PTR [rip+0x207e1c],0x1        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    22ef:	mov    BYTE PTR [rip+0x207e16],0x1        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    22f6:	test   rbp,rbp
    22f9:	movsxd rax,DWORD PTR [rip+0x207db8]        # 20a0b8 <optind@@GLIBC_2.2.5>
    2300:	je     243b <__cxa_finalize@plt+0x3ab>
    2306:	cmp    ebx,eax
    2308:	jg     2a41 <__cxa_finalize@plt+0x9b1>
    230e:	lea    rsi,[rip+0x5abd]        # 7dd2 <is_basic_table@@Base+0x72>
    2315:	mov    rdi,rbp
    2318:	call   1e70 <strcmp@plt>
    231d:	test   eax,eax
    231f:	jne    28a9 <__cxa_finalize@plt+0x819>
    2325:	mov    rbx,QWORD PTR [rip+0x207d84]        # 20a0b0 <stdin@@GLIBC_2.2.5>
    232c:	mov    rdi,rbx
    232f:	call   1eb0 <fileno@plt>
    2334:	lea    rdx,[rsp+0x150]
    233c:	mov    esi,eax
    233e:	mov    edi,0x1
    2343:	call   1f10 <__fxstat@plt>
    2348:	test   eax,eax
    234a:	jne    2363 <__cxa_finalize@plt+0x2d3>
    234c:	mov    eax,DWORD PTR [rsp+0x168]
    2353:	and    eax,0xf000
    2358:	cmp    eax,0x8000
    235d:	je     2982 <__cxa_finalize@plt+0x8f2>
    2363:	mov    rdi,rbx
    2366:	xor    r12d,r12d
    2369:	xor    ebx,ebx
    236b:	call   3b70 <__cxa_finalize@plt+0x1ae0>
    2370:	mov    BYTE PTR [rsp+0x1b],0x0
    2375:	mov    r13,rax
    2378:	test   r13,r13
    237b:	je     2a3c <__cxa_finalize@plt+0x9ac>
    2381:	test   rbx,rbx
    2384:	je     2464 <__cxa_finalize@plt+0x3d4>
    238a:	mov    edx,0x98
    238f:	xor    ecx,ecx
    2391:	mov    rax,rdx
    2394:	mul    rbx
    2397:	jo     2a32 <__cxa_finalize@plt+0x9a2>
    239d:	test   rax,rax
    23a0:	js     2a3c <__cxa_finalize@plt+0x9ac>
    23a6:	test   rcx,rcx
    23a9:	jne    2a3c <__cxa_finalize@plt+0x9ac>
    23af:	imul   rax,rbx,0x98
    23b6:	mov    rdi,rax
    23b9:	mov    QWORD PTR [rsp+0x10],rax
    23be:	call   67d0 <__cxa_finalize@plt+0x4740>
    23c3:	cmp    rbx,0x1
    23c7:	mov    QWORD PTR [rsp+0x8],rax
    23cc:	je     291d <__cxa_finalize@plt+0x88d>
    23d2:	mov    rax,QWORD PTR [rsp+0x8]
    23d7:	lea    r14,[rax+0x8]
    23db:	lea    rax,[r12+rbx*8]
    23df:	mov    QWORD PTR [rsp],rax
    23e3:	jmp    240d <__cxa_finalize@plt+0x37d>
    23e5:	mov    rdx,r14
    23e8:	xor    esi,esi
    23ea:	mov    edi,0x1
    23ef:	call   1f10 <__fxstat@plt>
    23f4:	mov    DWORD PTR [r14-0x8],eax
    23f8:	add    r12,0x8
    23fc:	add    r14,0x98
    2403:	cmp    QWORD PTR [rsp],r12
    2407:	je     27fb <__cxa_finalize@plt+0x76b>
    240d:	mov    r15,QWORD PTR [r12]
    2411:	test   r15,r15
    2414:	je     23e5 <__cxa_finalize@plt+0x355>
    2416:	lea    rsi,[rip+0x59b5]        # 7dd2 <is_basic_table@@Base+0x72>
    241d:	mov    rdi,r15
    2420:	call   1e70 <strcmp@plt>
    2425:	test   eax,eax
    2427:	je     23e5 <__cxa_finalize@plt+0x355>
    2429:	mov    rdx,r14
    242c:	mov    rsi,r15
    242f:	mov    edi,0x1
    2434:	call   1ec0 <__xstat@plt>
    2439:	jmp    23f4 <__cxa_finalize@plt+0x364>
    243b:	cmp    ebx,eax
    243d:	jg     2903 <__cxa_finalize@plt+0x873>
    2443:	lea    r12,[rip+0x207ca6]        # 20a0f0 <stderr@@GLIBC_2.2.5+0x10>
    244a:	mov    ebx,0x1
    244f:	mov    rdi,r12
    2452:	call   3b40 <__cxa_finalize@plt+0x1ab0>
    2457:	mov    BYTE PTR [rsp+0x1b],0x0
    245c:	mov    r13,rax
    245f:	jmp    2378 <__cxa_finalize@plt+0x2e8>
    2464:	mov    edi,0x98
    2469:	call   67d0 <__cxa_finalize@plt+0x4740>
    246e:	mov    ecx,0x1
    2473:	mov    QWORD PTR [rsp+0x8],rax
    2478:	mov    DWORD PTR [rax],0x1
    247e:	lea    rax,[rsp+0x2c]
    2483:	mov    DWORD PTR [rip+0x207c7b],ecx        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2489:	xor    r14d,r14d
    248c:	mov    r12d,0x1
    2492:	mov    QWORD PTR [rsp],rax
    2496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    24a0:	mov    rsi,QWORD PTR [rsp]
    24a4:	mov    rdi,r13
    24a7:	call   3bb0 <__cxa_finalize@plt+0x1b20>
    24ac:	test   rax,rax
    24af:	mov    r15,rax
    24b2:	je     26b3 <__cxa_finalize@plt+0x623>
    24b8:	test   rbp,rbp
    24bb:	je     267e <__cxa_finalize@plt+0x5ee>
    24c1:	lea    rax,[rip+0x590a]        # 7dd2 <is_basic_table@@Base+0x72>
    24c8:	mov    ecx,0x2
    24cd:	mov    rsi,rbp
    24d0:	mov    rdi,rax
    24d3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    24d5:	jne    2628 <__cxa_finalize@plt+0x598>
    24db:	mov    rsi,rax
    24de:	mov    rdi,r15
    24e1:	call   1e70 <strcmp@plt>
    24e6:	test   eax,eax
    24e8:	je     2597 <__cxa_finalize@plt+0x507>
    24ee:	cmp    BYTE PTR [r15],0x0
    24f2:	je     25d5 <__cxa_finalize@plt+0x545>
    24f8:	test   rbx,rbx
    24fb:	jne    2635 <__cxa_finalize@plt+0x5a5>
    2501:	mov    rdx,QWORD PTR [rsp+0x8]
    2506:	xor    esi,esi
    2508:	xor    eax,eax
    250a:	mov    rdi,r15
    250d:	mov    QWORD PTR [rsp+0x10],rdx
    2512:	call   1fa0 <open@plt>
    2517:	cmp    eax,0xffffffff
    251a:	mov    rdx,QWORD PTR [rsp+0x10]
    251f:	je     2567 <__cxa_finalize@plt+0x4d7>
    2521:	xor    ecx,ecx
    2523:	mov    rsi,r15
    2526:	mov    edi,eax
    2528:	mov    DWORD PTR [rsp+0x1c],eax
    252c:	call   2e10 <__cxa_finalize@plt+0xd80>
    2531:	mov    r9d,DWORD PTR [rsp+0x1c]
    2536:	mov    BYTE PTR [rsp+0x10],al
    253a:	mov    edi,r9d
    253d:	call   1e00 <close@plt>
    2542:	test   eax,eax
    2544:	movzx  edx,BYTE PTR [rsp+0x10]
    2549:	jne    2567 <__cxa_finalize@plt+0x4d7>
    254b:	and    r12d,edx
    254e:	test   rbx,rbx
    2551:	jne    255e <__cxa_finalize@plt+0x4ce>
    2553:	mov    rax,QWORD PTR [rsp+0x8]
    2558:	mov    DWORD PTR [rax],0x1
    255e:	add    r14,0x1
    2562:	jmp    24a0 <__cxa_finalize@plt+0x410>
    2567:	mov    rdx,r15
    256a:	mov    esi,0x3
    256f:	xor    edi,edi
    2571:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    2576:	mov    r15,rax
    2579:	call   1c90 <__errno_location@plt>
    257e:	mov    esi,DWORD PTR [rax]
    2580:	lea    rdx,[rip+0x57c6]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    2587:	mov    rcx,r15
    258a:	xor    edi,edi
    258c:	xor    eax,eax
    258e:	call   1f90 <error@plt>
    2593:	xor    edx,edx
    2595:	jmp    254b <__cxa_finalize@plt+0x4bb>
    2597:	mov    rsi,r15
    259a:	mov    edi,0x4
    259f:	call   5ad0 <__cxa_finalize@plt+0x3a40>
    25a4:	lea    rsi,[rip+0x573d]        # 7ce8 <_IO_stdin_used@@Base+0x7c8>
    25ab:	xor    edi,edi
    25ad:	mov    r12,rax
    25b0:	mov    edx,0x5
    25b5:	call   1d20 <dcgettext@plt>
    25ba:	xor    esi,esi
    25bc:	mov    rdx,rax
    25bf:	xor    edi,edi
    25c1:	xor    eax,eax
    25c3:	mov    rcx,r12
    25c6:	call   1f90 <error@plt>
    25cb:	cmp    BYTE PTR [r15],0x0
    25cf:	jne    26ab <__cxa_finalize@plt+0x61b>
    25d5:	mov    rdi,r13
    25d8:	call   3c40 <__cxa_finalize@plt+0x1bb0>
    25dd:	lea    rsi,[rip+0x5057]        # 763b <_IO_stdin_used@@Base+0x11b>
    25e4:	mov    edx,0x5
    25e9:	xor    edi,edi
    25eb:	mov    r15,rax
    25ee:	call   1d20 <dcgettext@plt>
    25f3:	mov    rdx,rbp
    25f6:	mov    esi,0x3
    25fb:	xor    edi,edi
    25fd:	mov    r12,rax
    2600:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    2605:	lea    rdx,[rip+0x504d]        # 7659 <_IO_stdin_used@@Base+0x139>
    260c:	mov    r9,r12
    260f:	mov    rcx,rax
    2612:	mov    r8,r15
    2615:	xor    esi,esi
    2617:	xor    edi,edi
    2619:	xor    eax,eax
    261b:	xor    r12d,r12d
    261e:	call   1f90 <error@plt>
    2623:	jmp    254e <__cxa_finalize@plt+0x4be>
    2628:	cmp    BYTE PTR [r15],0x0
    262c:	je     25d5 <__cxa_finalize@plt+0x545>
    262e:	xor    edx,edx
    2630:	test   rbx,rbx
    2633:	je     263c <__cxa_finalize@plt+0x5ac>
    2635:	imul   rdx,r14,0x98
    263c:	add    rdx,QWORD PTR [rsp+0x8]
    2641:	lea    rsi,[rip+0x578a]        # 7dd2 <is_basic_table@@Base+0x72>
    2648:	mov    rdi,r15
    264b:	mov    QWORD PTR [rsp+0x10],rdx
    2650:	call   1e70 <strcmp@plt>
    2655:	test   eax,eax
    2657:	mov    rdx,QWORD PTR [rsp+0x10]
    265c:	jne    2506 <__cxa_finalize@plt+0x476>
    2662:	or     rcx,0xffffffffffffffff
    2666:	mov    rsi,r15
    2669:	xor    edi,edi
    266b:	mov    BYTE PTR [rip+0x207a8e],0x1        # 20a100 <stderr@@GLIBC_2.2.5+0x20>
    2672:	call   2e10 <__cxa_finalize@plt+0xd80>
    2677:	mov    edx,eax
    2679:	jmp    254b <__cxa_finalize@plt+0x4bb>
    267e:	cmp    BYTE PTR [rax],0x0
    2681:	jne    262e <__cxa_finalize@plt+0x59e>
    2683:	lea    rsi,[rip+0x4fb1]        # 763b <_IO_stdin_used@@Base+0x11b>
    268a:	mov    edx,0x5
    268f:	xor    edi,edi
    2691:	call   1d20 <dcgettext@plt>
    2696:	lea    rdx,[rip+0x56b0]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    269d:	mov    rcx,rax
    26a0:	xor    esi,esi
    26a2:	xor    edi,edi
    26a4:	xor    eax,eax
    26a6:	call   1f90 <error@plt>
    26ab:	xor    r12d,r12d
    26ae:	jmp    254e <__cxa_finalize@plt+0x4be>
    26b3:	mov    eax,DWORD PTR [rsp+0x2c]
    26b7:	cmp    eax,0x3
    26ba:	je     2a3c <__cxa_finalize@plt+0x9ac>
    26c0:	cmp    eax,0x4
    26c3:	je     27b5 <__cxa_finalize@plt+0x725>
    26c9:	cmp    eax,0x2
    26cc:	je     26ed <__cxa_finalize@plt+0x65d>
    26ce:	lea    rcx,[rip+0x5098]        # 776d <_IO_stdin_used@@Base+0x24d>
    26d5:	lea    rsi,[rip+0x4f50]        # 762c <_IO_stdin_used@@Base+0x10c>
    26dc:	lea    rdi,[rip+0x55dd]        # 7cc0 <_IO_stdin_used@@Base+0x7a0>
    26e3:	mov    edx,0x31a
    26e8:	call   1dc0 <__assert_fail@plt>
    26ed:	test   rbp,rbp
    26f0:	sete   al
    26f3:	and    al,r12b
    26f6:	mov    ebx,eax
    26f8:	je     270e <__cxa_finalize@plt+0x67e>
    26fa:	mov    rdi,r13
    26fd:	mov    r12d,ebx
    2700:	call   3c40 <__cxa_finalize@plt+0x1bb0>
    2705:	test   rax,rax
    2708:	je     2961 <__cxa_finalize@plt+0x8d1>
    270e:	cmp    BYTE PTR [rsp+0x1b],0x0
    2713:	jne    289a <__cxa_finalize@plt+0x80a>
    2719:	mov    rdi,r13
    271c:	call   3c40 <__cxa_finalize@plt+0x1bb0>
    2721:	cmp    rax,0x1
    2725:	jbe    2765 <__cxa_finalize@plt+0x6d5>
    2727:	lea    rsi,[rip+0x4f07]        # 7635 <_IO_stdin_used@@Base+0x115>
    272e:	mov    edx,0x5
    2733:	xor    edi,edi
    2735:	call   1d20 <dcgettext@plt>
    273a:	mov    r8,QWORD PTR [rip+0x2079cf]        # 20a110 <stderr@@GLIBC_2.2.5+0x30>
    2741:	mov    rcx,QWORD PTR [rip+0x2079d0]        # 20a118 <stderr@@GLIBC_2.2.5+0x38>
    2748:	mov    r9,rax
    274b:	mov    rdx,QWORD PTR [rip+0x2079ce]        # 20a120 <stderr@@GLIBC_2.2.5+0x40>
    2752:	mov    rsi,QWORD PTR [rip+0x2079cf]        # 20a128 <stderr@@GLIBC_2.2.5+0x48>
    2759:	mov    rdi,QWORD PTR [rip+0x2079d0]        # 20a130 <stderr@@GLIBC_2.2.5+0x50>
    2760:	call   2c00 <__cxa_finalize@plt+0xb70>
    2765:	mov    rdi,r13
    2768:	call   3c60 <__cxa_finalize@plt+0x1bd0>
    276d:	mov    rdi,QWORD PTR [rsp+0x8]
    2772:	call   2080 <free@plt>
    2777:	cmp    BYTE PTR [rip+0x207982],0x0        # 20a100 <stderr@@GLIBC_2.2.5+0x20>
    277e:	jne    2871 <__cxa_finalize@plt+0x7e1>
    2784:	xor    r12d,0x1
    2788:	mov    rbx,QWORD PTR [rsp+0x1e8]
    2790:	xor    rbx,QWORD PTR fs:0x28
    2799:	movzx  eax,r12b
    279d:	jne    2a2d <__cxa_finalize@plt+0x99d>
    27a3:	add    rsp,0x1f8
    27aa:	pop    rbx
    27ab:	pop    rbp
    27ac:	pop    r12
    27ae:	pop    r13
    27b0:	pop    r14
    27b2:	pop    r15
    27b4:	ret    
    27b5:	mov    rdx,rbp
    27b8:	mov    esi,0x3
    27bd:	xor    edi,edi
    27bf:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    27c4:	lea    rsi,[rip+0x4e52]        # 761d <_IO_stdin_used@@Base+0xfd>
    27cb:	mov    edx,0x5
    27d0:	xor    edi,edi
    27d2:	mov    rbp,rax
    27d5:	xor    r12d,r12d
    27d8:	call   1d20 <dcgettext@plt>
    27dd:	mov    rbx,rax
    27e0:	call   1c90 <__errno_location@plt>
    27e5:	mov    esi,DWORD PTR [rax]
    27e7:	mov    rcx,rbp
    27ea:	mov    rdx,rbx
    27ed:	xor    edi,edi
    27ef:	xor    eax,eax
    27f1:	call   1f90 <error@plt>
    27f6:	jmp    270e <__cxa_finalize@plt+0x67e>
    27fb:	mov    rax,QWORD PTR [rsp+0x8]
    2800:	mov    ecx,0x1
    2805:	cmp    DWORD PTR [rax],0x0
    2808:	jg     247e <__cxa_finalize@plt+0x3ee>
    280e:	mov    rsi,QWORD PTR [rsp+0x10]
    2813:	mov    rdx,rax
    2816:	mov    edi,0x1
    281b:	add    rsi,rax
    281e:	xor    eax,eax
    2820:	jmp    2848 <__cxa_finalize@plt+0x7b8>
    2822:	cmp    DWORD PTR [rdx],0x0
    2825:	jne    2841 <__cxa_finalize@plt+0x7b1>
    2827:	mov    ecx,DWORD PTR [rdx+0x20]
    282a:	and    ecx,0xf000
    2830:	cmp    ecx,0x8000
    2836:	je     2914 <__cxa_finalize@plt+0x884>
    283c:	mov    edi,0x7
    2841:	add    rdx,0x98
    2848:	cmp    rsi,rdx
    284b:	jne    2822 <__cxa_finalize@plt+0x792>
    284d:	mov    ecx,0x1
    2852:	mov    esi,0xa
    2857:	jmp    2861 <__cxa_finalize@plt+0x7d1>
    2859:	xor    edx,edx
    285b:	add    ecx,0x1
    285e:	div    rsi
    2861:	cmp    rax,0x9
    2865:	ja     2859 <__cxa_finalize@plt+0x7c9>
    2867:	cmp    ecx,edi
    2869:	cmovl  ecx,edi
    286c:	jmp    247e <__cxa_finalize@plt+0x3ee>
    2871:	xor    edi,edi
    2873:	call   1e00 <close@plt>
    2878:	test   eax,eax
    287a:	je     2784 <__cxa_finalize@plt+0x6f4>
    2880:	call   1c90 <__errno_location@plt>
    2885:	mov    esi,DWORD PTR [rax]
    2887:	lea    rdx,[rip+0x5544]        # 7dd2 <is_basic_table@@Base+0x72>
    288e:	mov    edi,0x1
    2893:	xor    eax,eax
    2895:	call   1f90 <error@plt>
    289a:	lea    rdi,[rsp+0x30]
    289f:	call   5f20 <__cxa_finalize@plt+0x3e90>
    28a4:	jmp    2719 <__cxa_finalize@plt+0x689>
    28a9:	lea    rsi,[rip+0x4d7a]        # 762a <_IO_stdin_used@@Base+0x10a>
    28b0:	mov    rdi,rbp
    28b3:	call   1fc0 <fopen@plt>
    28b8:	test   rax,rax
    28bb:	mov    rbx,rax
    28be:	jne    232c <__cxa_finalize@plt+0x29c>
    28c4:	mov    rsi,rbp
    28c7:	mov    edi,0x4
    28cc:	call   5ad0 <__cxa_finalize@plt+0x3a40>
    28d1:	lea    rsi,[rip+0x4d2a]        # 7602 <_IO_stdin_used@@Base+0xe2>
    28d8:	mov    edx,0x5
    28dd:	xor    edi,edi
    28df:	mov    rbp,rax
    28e2:	call   1d20 <dcgettext@plt>
    28e7:	mov    rbx,rax
    28ea:	call   1c90 <__errno_location@plt>
    28ef:	mov    esi,DWORD PTR [rax]
    28f1:	mov    rcx,rbp
    28f4:	mov    rdx,rbx
    28f7:	mov    edi,0x1
    28fc:	xor    eax,eax
    28fe:	call   1f90 <error@plt>
    2903:	movsxd rdx,eax
    2906:	sub    ebx,eax
    2908:	lea    r12,[r12+rdx*8]
    290c:	movsxd rbx,ebx
    290f:	jmp    244f <__cxa_finalize@plt+0x3bf>
    2914:	add    rax,QWORD PTR [rdx+0x38]
    2918:	jmp    2841 <__cxa_finalize@plt+0x7b1>
    291d:	movzx  eax,BYTE PTR [rip+0x2077e7]        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    2924:	movzx  ecx,BYTE PTR [rip+0x2077e1]        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    292b:	add    ecx,eax
    292d:	movzx  eax,BYTE PTR [rip+0x2077d6]        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    2934:	add    ecx,eax
    2936:	movzx  eax,BYTE PTR [rip+0x2077cc]        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    293d:	add    ecx,eax
    293f:	movzx  eax,BYTE PTR [rip+0x2077c2]        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    2946:	add    ecx,eax
    2948:	cmp    ecx,0x1
    294b:	jne    23d2 <__cxa_finalize@plt+0x342>
    2951:	mov    rax,QWORD PTR [rsp+0x8]
    2956:	mov    DWORD PTR [rax],0x1
    295c:	jmp    247e <__cxa_finalize@plt+0x3ee>
    2961:	mov    rdx,QWORD PTR [rsp+0x8]
    2966:	or     rcx,0xffffffffffffffff
    296a:	xor    esi,esi
    296c:	xor    edi,edi
    296e:	mov    BYTE PTR [rip+0x20778b],0x1        # 20a100 <stderr@@GLIBC_2.2.5+0x20>
    2975:	call   2e10 <__cxa_finalize@plt+0xd80>
    297a:	mov    r12d,eax
    297d:	jmp    270e <__cxa_finalize@plt+0x67e>
    2982:	pxor   xmm3,xmm3
    2986:	cvtsi2sd xmm3,QWORD PTR [rsp+0x180]
    2990:	movsd  QWORD PTR [rsp],xmm3
    2995:	call   3f70 <__cxa_finalize@plt+0x1ee0>
    299a:	movsd  xmm2,QWORD PTR [rip+0x538e]        # 7d30 <_IO_stdin_used@@Base+0x810>
    29a2:	movsd  xmm1,QWORD PTR [rip+0x537e]        # 7d28 <_IO_stdin_used@@Base+0x808>
    29aa:	mulsd  xmm0,xmm2
    29ae:	ucomisd xmm0,xmm1
    29b2:	ja     29cd <__cxa_finalize@plt+0x93d>
    29b4:	movsd  QWORD PTR [rsp+0x8],xmm2
    29ba:	call   3f70 <__cxa_finalize@plt+0x1ee0>
    29bf:	movsd  xmm2,QWORD PTR [rsp+0x8]
    29c5:	movapd xmm1,xmm0
    29c9:	mulsd  xmm1,xmm2
    29cd:	ucomisd xmm1,QWORD PTR [rsp]
    29d2:	jb     2363 <__cxa_finalize@plt+0x2d3>
    29d8:	lea    r12,[rsp+0x30]
    29dd:	mov    rdi,r12
    29e0:	call   5eb0 <__cxa_finalize@plt+0x3e20>
    29e5:	mov    rsi,r12
    29e8:	mov    rdi,rbx
    29eb:	call   5f50 <__cxa_finalize@plt+0x3ec0>
    29f0:	test   al,al
    29f2:	mov    BYTE PTR [rsp+0x1b],al
    29f6:	je     2aab <__cxa_finalize@plt+0xa1b>
    29fc:	mov    rdi,rbx
    29ff:	call   6a60 <__cxa_finalize@plt+0x49d0>
    2a04:	test   eax,eax
    2a06:	jne    2aab <__cxa_finalize@plt+0xa1b>
    2a0c:	mov    r12,QWORD PTR [rsp+0x38]
    2a11:	mov    rbx,QWORD PTR [rsp+0x30]
    2a16:	mov    rdi,r12
    2a19:	call   3b40 <__cxa_finalize@plt+0x1ab0>
    2a1e:	mov    r13,rax
    2a21:	jmp    2378 <__cxa_finalize@plt+0x2e8>
    2a26:	xor    edi,edi
    2a28:	call   3790 <__cxa_finalize@plt+0x1700>
    2a2d:	call   1d50 <__stack_chk_fail@plt>
    2a32:	mov    ecx,0x1
    2a37:	jmp    239d <__cxa_finalize@plt+0x30d>
    2a3c:	call   6a20 <__cxa_finalize@plt+0x4990>
    2a41:	mov    rsi,QWORD PTR [r12+rax*8]
    2a45:	mov    edi,0x4
    2a4a:	call   5ad0 <__cxa_finalize@plt+0x3a40>
    2a4f:	lea    rsi,[rip+0x4b9b]        # 75f1 <_IO_stdin_used@@Base+0xd1>
    2a56:	mov    rbx,rax
    2a59:	xor    edi,edi
    2a5b:	mov    edx,0x5
    2a60:	call   1d20 <dcgettext@plt>
    2a65:	mov    rcx,rbx
    2a68:	mov    rdx,rax
    2a6b:	xor    esi,esi
    2a6d:	xor    edi,edi
    2a6f:	xor    eax,eax
    2a71:	call   1f90 <error@plt>
    2a76:	lea    rsi,[rip+0x51eb]        # 7c68 <_IO_stdin_used@@Base+0x748>
    2a7d:	xor    edi,edi
    2a7f:	mov    edx,0x5
    2a84:	call   1d20 <dcgettext@plt>
    2a89:	mov    rdi,QWORD PTR [rip+0x207650]        # 20a0e0 <stderr@@GLIBC_2.2.5>
    2a90:	lea    rdx,[rip+0x5819]        # 82b0 <quoting_style_vals@@Base+0x30>
    2a97:	mov    rcx,rax
    2a9a:	mov    esi,0x1
    2a9f:	xor    eax,eax
    2aa1:	call   2030 <__fprintf_chk@plt>
    2aa6:	jmp    2207 <__cxa_finalize@plt+0x177>
    2aab:	mov    rsi,rbp
    2aae:	mov    edi,0x4
    2ab3:	call   5ad0 <__cxa_finalize@plt+0x3a40>
    2ab8:	lea    rsi,[rip+0x51e1]        # 7ca0 <_IO_stdin_used@@Base+0x780>
    2abf:	mov    rbx,rax
    2ac2:	mov    edx,0x5
    2ac7:	xor    edi,edi
    2ac9:	call   1d20 <dcgettext@plt>
    2ace:	mov    rcx,rbx
    2ad1:	mov    rdx,rax
    2ad4:	xor    esi,esi
    2ad6:	mov    edi,0x1
    2adb:	xor    eax,eax
    2add:	call   1f90 <error@plt>
    2ae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2aec:	nop    DWORD PTR [rax+0x0]
    2af0:	xor    ebp,ebp
    2af2:	mov    r9,rdx
    2af5:	pop    rsi
    2af6:	mov    rdx,rsp
    2af9:	and    rsp,0xfffffffffffffff0
    2afd:	push   rax
    2afe:	push   rsp
    2aff:	lea    r8,[rip+0x49ca]        # 74d0 <_obstack_memory_used@@Base+0x5d0>
    2b06:	lea    rcx,[rip+0x4953]        # 7460 <_obstack_memory_used@@Base+0x560>
    2b0d:	lea    rdi,[rip+0xfffffffffffff58c]        # 20a0 <__cxa_finalize@plt+0x10>
    2b14:	call   QWORD PTR [rip+0x2074a6]        # 209fc0 <__libc_start_main@GLIBC_2.2.5>
    2b1a:	hlt    
    2b1b:	nop    DWORD PTR [rax+rax*1+0x0]
    2b20:	lea    rdi,[rip+0x207561]        # 20a088 <obstack_alloc_failed_handler@@Base+0x8>
    2b27:	push   rbp
    2b28:	lea    rax,[rip+0x207559]        # 20a088 <obstack_alloc_failed_handler@@Base+0x8>
    2b2f:	cmp    rax,rdi
    2b32:	mov    rbp,rsp
    2b35:	je     2b50 <__cxa_finalize@plt+0xac0>
    2b37:	mov    rax,QWORD PTR [rip+0x20747a]        # 209fb8 <_ITM_deregisterTMCloneTable>
    2b3e:	test   rax,rax
    2b41:	je     2b50 <__cxa_finalize@plt+0xac0>
    2b43:	pop    rbp
    2b44:	jmp    rax
    2b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2b50:	pop    rbp
    2b51:	ret    
    2b52:	nop    DWORD PTR [rax+0x0]
    2b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2b60:	lea    rdi,[rip+0x207521]        # 20a088 <obstack_alloc_failed_handler@@Base+0x8>
    2b67:	lea    rsi,[rip+0x20751a]        # 20a088 <obstack_alloc_failed_handler@@Base+0x8>
    2b6e:	push   rbp
    2b6f:	sub    rsi,rdi
    2b72:	mov    rbp,rsp
    2b75:	sar    rsi,0x3
    2b79:	mov    rax,rsi
    2b7c:	shr    rax,0x3f
    2b80:	add    rsi,rax
    2b83:	sar    rsi,1
    2b86:	je     2ba0 <__cxa_finalize@plt+0xb10>
    2b88:	mov    rax,QWORD PTR [rip+0x207449]        # 209fd8 <_ITM_registerTMCloneTable>
    2b8f:	test   rax,rax
    2b92:	je     2ba0 <__cxa_finalize@plt+0xb10>
    2b94:	pop    rbp
    2b95:	jmp    rax
    2b97:	nop    WORD PTR [rax+rax*1+0x0]
    2ba0:	pop    rbp
    2ba1:	ret    
    2ba2:	nop    DWORD PTR [rax+0x0]
    2ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2bb0:	cmp    BYTE PTR [rip+0x207531],0x0        # 20a0e8 <stderr@@GLIBC_2.2.5+0x8>
    2bb7:	jne    2be8 <__cxa_finalize@plt+0xb58>
    2bb9:	cmp    QWORD PTR [rip+0x20741f],0x0        # 209fe0 <__cxa_finalize@GLIBC_2.2.5>
    2bc1:	push   rbp
    2bc2:	mov    rbp,rsp
    2bc5:	je     2bd3 <__cxa_finalize@plt+0xb43>
    2bc7:	mov    rdi,QWORD PTR [rip+0x20743a]        # 20a008 <quoting_style_args@@Base+0x4c8>
    2bce:	call   2090 <__cxa_finalize@plt>
    2bd3:	call   2b20 <__cxa_finalize@plt+0xa90>
    2bd8:	mov    BYTE PTR [rip+0x207509],0x1        # 20a0e8 <stderr@@GLIBC_2.2.5+0x8>
    2bdf:	pop    rbp
    2be0:	ret    
    2be1:	nop    DWORD PTR [rax+0x0]
    2be8:	repz ret 
    2bea:	nop    WORD PTR [rax+rax*1+0x0]
    2bf0:	push   rbp
    2bf1:	mov    rbp,rsp
    2bf4:	pop    rbp
    2bf5:	jmp    2b60 <__cxa_finalize@plt+0xad0>
    2bfa:	nop    WORD PTR [rax+rax*1+0x0]
    2c00:	push   r15
    2c02:	push   r14
    2c04:	mov    r15,rsi
    2c07:	push   r13
    2c09:	push   r12
    2c0b:	mov    r14,rdx
    2c0e:	push   rbp
    2c0f:	push   rbx
    2c10:	mov    r13,rcx
    2c13:	mov    r12,r8
    2c16:	mov    rbx,r9
    2c19:	lea    rbp,[rip+0x4b49]        # 7769 <_IO_stdin_used@@Base+0x249>
    2c20:	sub    rsp,0x28
    2c24:	mov    rax,QWORD PTR fs:0x28
    2c2d:	mov    QWORD PTR [rsp+0x18],rax
    2c32:	xor    eax,eax
    2c34:	cmp    BYTE PTR [rip+0x2074d1],0x0        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    2c3b:	jne    2dc0 <__cxa_finalize@plt+0xd30>
    2c41:	cmp    BYTE PTR [rip+0x2074c3],0x0        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    2c48:	jne    2d90 <__cxa_finalize@plt+0xd00>
    2c4e:	cmp    BYTE PTR [rip+0x2074b5],0x0        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    2c55:	jne    2d60 <__cxa_finalize@plt+0xcd0>
    2c5b:	cmp    BYTE PTR [rip+0x2074a7],0x0        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    2c62:	jne    2d30 <__cxa_finalize@plt+0xca0>
    2c68:	cmp    BYTE PTR [rip+0x207499],0x0        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    2c6f:	jne    2d00 <__cxa_finalize@plt+0xc70>
    2c75:	test   rbx,rbx
    2c78:	je     2cb4 <__cxa_finalize@plt+0xc24>
    2c7a:	mov    esi,0xa
    2c7f:	mov    rdi,rbx
    2c82:	call   1d80 <strchr@plt>
    2c87:	test   rax,rax
    2c8a:	je     2c9e <__cxa_finalize@plt+0xc0e>
    2c8c:	mov    rdx,rbx
    2c8f:	mov    esi,0x3
    2c94:	xor    edi,edi
    2c96:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    2c9b:	mov    rbx,rax
    2c9e:	lea    rsi,[rip+0x50a7]        # 7d4c <_IO_stdin_used@@Base+0x82c>
    2ca5:	mov    rdx,rbx
    2ca8:	mov    edi,0x1
    2cad:	xor    eax,eax
    2caf:	call   1f60 <__printf_chk@plt>
    2cb4:	mov    rdi,QWORD PTR [rip+0x2073ed]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    2cbb:	mov    rax,QWORD PTR [rdi+0x28]
    2cbf:	cmp    rax,QWORD PTR [rdi+0x30]
    2cc3:	jae    2df0 <__cxa_finalize@plt+0xd60>
    2cc9:	lea    rdx,[rax+0x1]
    2ccd:	mov    QWORD PTR [rdi+0x28],rdx
    2cd1:	mov    BYTE PTR [rax],0xa
    2cd4:	mov    rax,QWORD PTR [rsp+0x18]
    2cd9:	xor    rax,QWORD PTR fs:0x28
    2ce2:	jne    2dff <__cxa_finalize@plt+0xd6f>
    2ce8:	add    rsp,0x28
    2cec:	pop    rbx
    2ced:	pop    rbp
    2cee:	pop    r12
    2cf0:	pop    r13
    2cf2:	pop    r14
    2cf4:	pop    r15
    2cf6:	ret    
    2cf7:	nop    WORD PTR [rax+rax*1+0x0]
    2d00:	mov    rsi,rsp
    2d03:	mov    rdi,r12
    2d06:	call   3d90 <__cxa_finalize@plt+0x1d00>
    2d0b:	mov    edx,DWORD PTR [rip+0x2073f3]        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2d11:	mov    rcx,rax
    2d14:	mov    rsi,rbp
    2d17:	mov    edi,0x1
    2d1c:	xor    eax,eax
    2d1e:	call   1f60 <__printf_chk@plt>
    2d23:	jmp    2c75 <__cxa_finalize@plt+0xbe5>
    2d28:	nop    DWORD PTR [rax+rax*1+0x0]
    2d30:	mov    rsi,rsp
    2d33:	mov    rdi,r13
    2d36:	call   3d90 <__cxa_finalize@plt+0x1d00>
    2d3b:	mov    edx,DWORD PTR [rip+0x2073c3]        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2d41:	mov    rcx,rax
    2d44:	mov    rsi,rbp
    2d47:	mov    edi,0x1
    2d4c:	xor    eax,eax
    2d4e:	lea    rbp,[rip+0x4a13]        # 7768 <_IO_stdin_used@@Base+0x248>
    2d55:	call   1f60 <__printf_chk@plt>
    2d5a:	jmp    2c68 <__cxa_finalize@plt+0xbd8>
    2d5f:	nop
    2d60:	mov    rsi,rsp
    2d63:	mov    rdi,r14
    2d66:	call   3d90 <__cxa_finalize@plt+0x1d00>
    2d6b:	mov    edx,DWORD PTR [rip+0x207393]        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2d71:	mov    rcx,rax
    2d74:	mov    rsi,rbp
    2d77:	mov    edi,0x1
    2d7c:	xor    eax,eax
    2d7e:	lea    rbp,[rip+0x49e3]        # 7768 <_IO_stdin_used@@Base+0x248>
    2d85:	call   1f60 <__printf_chk@plt>
    2d8a:	jmp    2c5b <__cxa_finalize@plt+0xbcb>
    2d8f:	nop
    2d90:	mov    rsi,rsp
    2d93:	mov    rdi,r15
    2d96:	call   3d90 <__cxa_finalize@plt+0x1d00>
    2d9b:	mov    edx,DWORD PTR [rip+0x207363]        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2da1:	mov    rcx,rax
    2da4:	mov    rsi,rbp
    2da7:	mov    edi,0x1
    2dac:	xor    eax,eax
    2dae:	lea    rbp,[rip+0x49b3]        # 7768 <_IO_stdin_used@@Base+0x248>
    2db5:	call   1f60 <__printf_chk@plt>
    2dba:	jmp    2c4e <__cxa_finalize@plt+0xbbe>
    2dbf:	nop
    2dc0:	mov    rsi,rsp
    2dc3:	call   3d90 <__cxa_finalize@plt+0x1d00>
    2dc8:	mov    edx,DWORD PTR [rip+0x207336]        # 20a104 <stderr@@GLIBC_2.2.5+0x24>
    2dce:	mov    rcx,rax
    2dd1:	mov    rsi,rbp
    2dd4:	mov    edi,0x1
    2dd9:	xor    eax,eax
    2ddb:	sub    rbp,0x1
    2ddf:	call   1f60 <__printf_chk@plt>
    2de4:	jmp    2c41 <__cxa_finalize@plt+0xbb1>
    2de9:	nop    DWORD PTR [rax+0x0]
    2df0:	mov    esi,0xa
    2df5:	call   1d90 <__overflow@plt>
    2dfa:	jmp    2cd4 <__cxa_finalize@plt+0xc44>
    2dff:	call   1d50 <__stack_chk_fail@plt>
    2e04:	xchg   ax,ax
    2e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2e10:	push   r15
    2e12:	push   r14
    2e14:	push   r13
    2e16:	push   r12
    2e18:	push   rbp
    2e19:	push   rbx
    2e1a:	mov    rbp,rcx
    2e1d:	mov    rbx,rdx
    2e20:	sub    rsp,0x4088
    2e27:	mov    rcx,QWORD PTR fs:0x28
    2e30:	mov    QWORD PTR [rsp+0x4078],rcx
    2e38:	xor    ecx,ecx
    2e3a:	test   rsi,rsi
    2e3d:	mov    DWORD PTR [rsp+0x48],edi
    2e41:	mov    QWORD PTR [rsp+0x50],rsi
    2e46:	mov    QWORD PTR [rsp+0x58],rsi
    2e4b:	je     35f0 <__cxa_finalize@plt+0x1560>
    2e51:	call   1d30 <__ctype_get_mb_cur_max@plt>
    2e56:	cmp    rax,0x1
    2e5a:	movzx  edx,BYTE PTR [rip+0x2072a8]        # 20a109 <stderr@@GLIBC_2.2.5+0x29>
    2e61:	jbe    31e0 <__cxa_finalize@plt+0x1150>
    2e67:	movzx  eax,BYTE PTR [rip+0x20729c]        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    2e6e:	mov    r12d,eax
    2e71:	mov    BYTE PTR [rsp+0x4f],al
    2e75:	xor    r12d,0x1
    2e79:	and    r12d,edx
    2e7c:	cmp    BYTE PTR [rip+0x207288],0x0        # 20a10b <stderr@@GLIBC_2.2.5+0x2b>
    2e83:	jne    2f90 <__cxa_finalize@plt+0xf00>
    2e89:	movzx  r15d,BYTE PTR [rip+0x207277]        # 20a108 <stderr@@GLIBC_2.2.5+0x28>
    2e91:	test   r15b,r15b
    2e94:	jne    2f90 <__cxa_finalize@plt+0xf00>
    2e9a:	cmp    dl,0x1
    2e9d:	jne    30b3 <__cxa_finalize@plt+0x1023>
    2ea3:	cmp    BYTE PTR [rsp+0x4f],0x0
    2ea8:	jne    30b3 <__cxa_finalize@plt+0x1023>
    2eae:	cmp    BYTE PTR [rip+0x207257],0x0        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    2eb5:	jne    30b3 <__cxa_finalize@plt+0x1023>
    2ebb:	test   r12b,r12b
    2ebe:	je     30e2 <__cxa_finalize@plt+0x1052>
    2ec4:	mov    eax,DWORD PTR [rbx]
    2ec6:	test   eax,eax
    2ec8:	jg     34f9 <__cxa_finalize@plt+0x1469>
    2ece:	test   eax,eax
    2ed0:	jne    3512 <__cxa_finalize@plt+0x1482>
    2ed6:	mov    eax,DWORD PTR [rbx+0x20]
    2ed9:	and    eax,0xd000
    2ede:	cmp    eax,0x8000
    2ee3:	jne    3512 <__cxa_finalize@plt+0x1482>
    2ee9:	mov    r12,QWORD PTR [rbx+0x38]
    2eed:	test   r12,r12
    2ef0:	js     3512 <__cxa_finalize@plt+0x1482>
    2ef6:	cmp    rbp,0xffffffffffffffff
    2efa:	mov    QWORD PTR [rsp+0x20],r12
    2eff:	mov    r13,QWORD PTR [rip+0x2071f2]        # 20a0f8 <stderr@@GLIBC_2.2.5+0x18>
    2f06:	je     3714 <__cxa_finalize@plt+0x1684>
    2f0c:	xor    edx,edx
    2f0e:	mov    rax,r12
    2f11:	div    r13
    2f14:	test   rdx,rdx
    2f17:	jne    3566 <__cxa_finalize@plt+0x14d6>
    2f1d:	mov    esi,0x1
    2f22:	xor    ebp,ebp
    2f24:	mov    rax,QWORD PTR [rbx+0x40]
    2f28:	movabs rdx,0x1fffffffffffffff
    2f32:	lea    rcx,[rax-0x1]
    2f36:	add    rax,0x1
    2f3a:	cmp    rcx,rdx
    2f3d:	mov    ecx,0x201
    2f42:	cmovbe rcx,rax
    2f46:	mov    rax,r12
    2f49:	xor    edx,edx
    2f4b:	div    rcx
    2f4e:	sub    r12,rdx
    2f51:	cmp    r12,rbp
    2f54:	jle    3512 <__cxa_finalize@plt+0x1482>
    2f5a:	test   sil,sil
    2f5d:	je     3512 <__cxa_finalize@plt+0x1482>
    2f63:	mov    edi,DWORD PTR [rsp+0x48]
    2f67:	mov    edx,0x1
    2f6c:	mov    rsi,r12
    2f6f:	call   1db0 <lseek@plt>
    2f74:	test   rax,rax
    2f77:	js     3512 <__cxa_finalize@plt+0x1482>
    2f7d:	sub    r12,rbp
    2f80:	mov    QWORD PTR [rsp+0x20],r12
    2f85:	jmp    351b <__cxa_finalize@plt+0x148b>
    2f8a:	nop    WORD PTR [rax+rax*1+0x0]
    2f90:	mov    edi,DWORD PTR [rsp+0x48]
    2f94:	mov    ecx,0x2
    2f99:	xor    edx,edx
    2f9b:	xor    esi,esi
    2f9d:	call   3d50 <__cxa_finalize@plt+0x1cc0>
    2fa2:	call   1d30 <__ctype_get_mb_cur_max@plt>
    2fa7:	cmp    rax,0x1
    2fab:	jbe    33e9 <__cxa_finalize@plt+0x1359>
    2fb1:	lea    rax,[rsp+0x70]
    2fb6:	xor    r13d,r13d
    2fb9:	xor    r15d,r15d
    2fbc:	mov    QWORD PTR [rsp+0x68],0x0
    2fc5:	xor    r14d,r14d
    2fc8:	xor    ebx,ebx
    2fca:	mov    QWORD PTR [rsp+0x40],rax
    2fcf:	lea    rax,[rsp+0x68]
    2fd4:	mov    QWORD PTR [rsp+0x38],0x0
    2fdd:	mov    QWORD PTR [rsp+0x20],0x0
    2fe6:	xor    ebp,ebp
    2fe8:	mov    QWORD PTR [rsp+0x30],0x0
    2ff1:	mov    QWORD PTR [rsp+0x10],rax
    2ff6:	mov    eax,r13d
    2ff9:	mov    QWORD PTR [rsp+0x8],0x0
    3002:	mov    r13,r15
    3005:	mov    r15d,eax
    3008:	nop    DWORD PTR [rax+rax*1+0x0]
    3010:	mov    rax,QWORD PTR [rsp+0x40]
    3015:	mov    edi,DWORD PTR [rsp+0x48]
    3019:	mov    edx,0x4000
    301e:	sub    rdx,r13
    3021:	lea    rsi,[rax+r13*1]
    3025:	call   6160 <__cxa_finalize@plt+0x40d0>
    302a:	test   rax,rax
    302d:	je     360d <__cxa_finalize@plt+0x157d>
    3033:	cmp    rax,0xffffffffffffffff
    3037:	je     3629 <__cxa_finalize@plt+0x1599>
    303d:	add    QWORD PTR [rsp+0x20],rax
    3042:	add    r13,rax
    3045:	lea    rax,[rsp+0x64]
    304a:	test   r15b,r15b
    304d:	mov    r12,QWORD PTR [rsp+0x40]
    3052:	mov    QWORD PTR [rsp+0x28],rax
    3057:	jne    3323 <__cxa_finalize@plt+0x1293>
    305d:	nop    DWORD PTR [rax]
    3060:	movzx  edi,BYTE PTR [r12]
    3065:	lea    rcx,[rip+0x4cf4]        # 7d60 <is_basic_table@@Base>
    306c:	mov    eax,edi
    306e:	shr    al,0x5
    3071:	and    eax,0x7
    3074:	mov    eax,DWORD PTR [rcx+rax*4]
    3077:	bt     eax,edi
    307a:	jae    3323 <__cxa_finalize@plt+0x1293>
    3080:	movsx  ecx,dil
    3084:	add    rbp,0x1
    3088:	mov    edx,0x1
    308d:	mov    DWORD PTR [rsp+0x64],ecx
    3091:	lea    eax,[rcx-0x9]
    3094:	add    r12,rdx
    3097:	sub    r13,rdx
    309a:	cmp    eax,0x17
    309d:	ja     375f <__cxa_finalize@plt+0x16cf>
    30a3:	lea    rsi,[rip+0x45fe]        # 76a8 <_IO_stdin_used@@Base+0x188>
    30aa:	movsxd rax,DWORD PTR [rsi+rax*4]
    30ae:	add    rax,rsi
    30b1:	jmp    rax
    30b3:	mov    edi,DWORD PTR [rsp+0x48]
    30b7:	xor    edx,edx
    30b9:	xor    esi,esi
    30bb:	mov    ecx,0x2
    30c0:	call   3d50 <__cxa_finalize@plt+0x1cc0>
    30c5:	test   r12b,r12b
    30c8:	je     30d7 <__cxa_finalize@plt+0x1047>
    30ca:	cmp    BYTE PTR [rip+0x20703b],0x0        # 20a10c <stderr@@GLIBC_2.2.5+0x2c>
    30d1:	je     2ec4 <__cxa_finalize@plt+0xe34>
    30d7:	cmp    BYTE PTR [rsp+0x4f],0x0
    30dc:	jne    2fa2 <__cxa_finalize@plt+0xf12>
    30e2:	lea    rax,[rsp+0x70]
    30e7:	xor    r13d,r13d
    30ea:	mov    BYTE PTR [rsp+0x10],r15b
    30ef:	mov    QWORD PTR [rsp+0x20],0x0
    30f8:	mov    r15d,r13d
    30fb:	mov    QWORD PTR [rsp+0x8],0x0
    3104:	movabs r14,0x8888888888888889
    310e:	mov    r13,rax
    3111:	nop    DWORD PTR [rax+0x0]
    3118:	mov    edi,DWORD PTR [rsp+0x48]
    311c:	mov    edx,0x4000
    3121:	mov    rsi,r13
    3124:	call   6160 <__cxa_finalize@plt+0x40d0>
    3129:	test   rax,rax
    312c:	je     3200 <__cxa_finalize@plt+0x1170>
    3132:	cmp    rax,0xffffffffffffffff
    3136:	je     32a0 <__cxa_finalize@plt+0x1210>
    313c:	add    QWORD PTR [rsp+0x20],rax
    3141:	lea    rbp,[r13+rax*1+0x0]
    3146:	mul    r14
    3149:	mov    rbx,rdx
    314c:	shr    rbx,0x3
    3150:	test   r15b,r15b
    3153:	je     3198 <__cxa_finalize@plt+0x1108>
    3155:	mov    r12,QWORD PTR [rsp+0x8]
    315a:	mov    rdi,r13
    315d:	jmp    3168 <__cxa_finalize@plt+0x10d8>
    315f:	nop
    3160:	lea    rdi,[rax+0x1]
    3164:	add    r12,0x1
    3168:	mov    rdx,rbp
    316b:	mov    esi,0xa
    3170:	sub    rdx,rdi
    3173:	call   1e20 <memchr@plt>
    3178:	test   rax,rax
    317b:	jne    3160 <__cxa_finalize@plt+0x10d0>
    317d:	mov    rax,r12
    3180:	sub    rax,QWORD PTR [rsp+0x8]
    3185:	mov    QWORD PTR [rsp+0x8],r12
    318a:	cmp    rbx,rax
    318d:	setae  r15b
    3191:	jmp    3118 <__cxa_finalize@plt+0x1088>
    3193:	nop    DWORD PTR [rax+rax*1+0x0]
    3198:	cmp    rbp,r13
    319b:	je     32e0 <__cxa_finalize@plt+0x1250>
    31a1:	mov    rdx,QWORD PTR [rsp+0x8]
    31a6:	mov    rax,r13
    31a9:	nop    DWORD PTR [rax+0x0]
    31b0:	add    rax,0x1
    31b4:	xor    ecx,ecx
    31b6:	cmp    BYTE PTR [rax-0x1],0xa
    31ba:	sete   cl
    31bd:	add    rdx,rcx
    31c0:	cmp    rbp,rax
    31c3:	jne    31b0 <__cxa_finalize@plt+0x1120>
    31c5:	mov    rax,rdx
    31c8:	sub    rax,QWORD PTR [rsp+0x8]
    31cd:	mov    QWORD PTR [rsp+0x8],rdx
    31d2:	cmp    rbx,rax
    31d5:	setae  r15b
    31d9:	jmp    3118 <__cxa_finalize@plt+0x1088>
    31de:	xchg   ax,ax
    31e0:	movzx  eax,BYTE PTR [rip+0x206f23]        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    31e7:	test   dl,dl
    31e9:	mov    BYTE PTR [rsp+0x4f],0x0
    31ee:	cmove  edx,eax
    31f1:	mov    r12d,edx
    31f4:	jmp    2e7c <__cxa_finalize@plt+0xdec>
    31f9:	nop    DWORD PTR [rax+0x0]
    3200:	xor    r14d,r14d
    3203:	xor    ebp,ebp
    3205:	xor    ebx,ebx
    3207:	mov    r15d,0x1
    320d:	movzx  eax,BYTE PTR [rsp+0x4f]
    3212:	mov    r12,QWORD PTR [rsp+0x20]
    3217:	mov    r8,r14
    321a:	cmp    BYTE PTR [rip+0x206eea],al        # 20a10a <stderr@@GLIBC_2.2.5+0x2a>
    3220:	mov    r13,QWORD PTR [rsp+0x8]
    3225:	mov    rsi,rbx
    3228:	mov    r9,QWORD PTR [rsp+0x50]
    322d:	mov    rcx,r12
    3230:	mov    rdi,r13
    3233:	cmova  rbp,r12
    3237:	mov    rdx,rbp
    323a:	call   2c00 <__cxa_finalize@plt+0xb70>
    323f:	add    QWORD PTR [rip+0x206eea],r13        # 20a130 <stderr@@GLIBC_2.2.5+0x50>
    3246:	add    QWORD PTR [rip+0x206edb],rbx        # 20a128 <stderr@@GLIBC_2.2.5+0x48>
    324d:	add    QWORD PTR [rip+0x206ecc],rbp        # 20a120 <stderr@@GLIBC_2.2.5+0x40>
    3254:	add    QWORD PTR [rip+0x206ebd],r12        # 20a118 <stderr@@GLIBC_2.2.5+0x38>
    325b:	cmp    QWORD PTR [rip+0x206eae],r14        # 20a110 <stderr@@GLIBC_2.2.5+0x30>
    3262:	jae    326b <__cxa_finalize@plt+0x11db>
    3264:	mov    QWORD PTR [rip+0x206ea5],r14        # 20a110 <stderr@@GLIBC_2.2.5+0x30>
    326b:	mov    rsi,QWORD PTR [rsp+0x4078]
    3273:	xor    rsi,QWORD PTR fs:0x28
    327c:	mov    eax,r15d
    327f:	jne    377f <__cxa_finalize@plt+0x16ef>
    3285:	add    rsp,0x4088
    328c:	pop    rbx
    328d:	pop    rbp
    328e:	pop    r12
    3290:	pop    r13
    3292:	pop    r14
    3294:	pop    r15
    3296:	ret    
    3297:	nop    WORD PTR [rax+rax*1+0x0]
    32a0:	mov    rdx,QWORD PTR [rsp+0x58]
    32a5:	mov    esi,0x3
    32aa:	xor    edi,edi
    32ac:	movzx  r15d,BYTE PTR [rsp+0x10]
    32b2:	xor    r14d,r14d
    32b5:	xor    ebp,ebp
    32b7:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    32bc:	mov    rbx,rax
    32bf:	call   1c90 <__errno_location@plt>
    32c4:	mov    esi,DWORD PTR [rax]
    32c6:	lea    rdx,[rip+0x4a80]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    32cd:	mov    rcx,rbx
    32d0:	xor    edi,edi
    32d2:	xor    eax,eax
    32d4:	xor    ebx,ebx
    32d6:	call   1f90 <error@plt>
    32db:	jmp    320d <__cxa_finalize@plt+0x117d>
    32e0:	mov    r15d,0x1
    32e6:	jmp    3118 <__cxa_finalize@plt+0x1088>
    32eb:	nop    DWORD PTR [rax+rax*1+0x0]
    32f0:	add    QWORD PTR [rsp+0x8],0x1
    32f6:	mov    rax,QWORD PTR [rsp+0x38]
    32fb:	cmp    rax,r14
    32fe:	cmovae r14,rax
    3302:	mov    QWORD PTR [rsp+0x38],r14
    3307:	xor    r14d,r14d
    330a:	add    QWORD PTR [rsp+0x30],rbx
    330f:	xor    ebx,ebx
    3311:	test   r13,r13
    3314:	je     3010 <__cxa_finalize@plt+0xf80>
    331a:	test   r15b,r15b
    331d:	je     3060 <__cxa_finalize@plt+0xfd0>
    3323:	mov    rcx,QWORD PTR [rsp+0x10]
    3328:	mov    rdi,QWORD PTR [rsp+0x28]
    332d:	mov    rdx,r13
    3330:	mov    rsi,r12
    3333:	mov    r15,QWORD PTR [rsp+0x68]
    3338:	call   6b80 <__cxa_finalize@plt+0x4af0>
    333d:	cmp    rax,0xfffffffffffffffe
    3341:	je     35b0 <__cxa_finalize@plt+0x1520>
    3347:	cmp    rax,0xffffffffffffffff
    334b:	je     3598 <__cxa_finalize@plt+0x1508>
    3351:	mov    rdi,QWORD PTR [rsp+0x10]
    3356:	mov    QWORD PTR [rsp+0x18],rax
    335b:	call   2040 <mbsinit@plt>
    3360:	mov    rdx,QWORD PTR [rsp+0x18]
    3365:	test   eax,eax
    3367:	sete   r15b
    336b:	add    rbp,0x1
    336f:	test   rdx,rdx
    3372:	jne    3588 <__cxa_finalize@plt+0x14f8>
    3378:	mov    DWORD PTR [rsp+0x64],0x0
    3380:	add    r12,0x1
    3384:	sub    r13,0x1
    3388:	xor    edi,edi
    338a:	xor    ecx,ecx
    338c:	mov    DWORD PTR [rsp+0x18],ecx
    3390:	call   2050 <iswprint@plt>
    3395:	test   eax,eax
    3397:	mov    ecx,DWORD PTR [rsp+0x18]
    339b:	je     3311 <__cxa_finalize@plt+0x1281>
    33a1:	mov    edi,ecx
    33a3:	call   1ed0 <wcwidth@plt>
    33a8:	mov    edi,DWORD PTR [rsp+0x64]
    33ac:	movsxd rdx,eax
    33af:	add    rdx,r14
    33b2:	test   eax,eax
    33b4:	cmovg  r14,rdx
    33b8:	call   1f80 <iswspace@plt>
    33bd:	test   eax,eax
    33bf:	jne    330a <__cxa_finalize@plt+0x127a>
    33c5:	mov    ebx,0x1
    33ca:	jmp    3311 <__cxa_finalize@plt+0x1281>
    33cf:	nop
    33d0:	and    r14,0xfffffffffffffff8
    33d4:	add    r14,0x8
    33d8:	jmp    330a <__cxa_finalize@plt+0x127a>
    33dd:	nop    DWORD PTR [rax]
    33e0:	add    r14,0x1
    33e4:	jmp    330a <__cxa_finalize@plt+0x127a>
    33e9:	lea    rax,[rsp+0x70]
    33ee:	xor    r14d,r14d
    33f1:	xor    ebx,ebx
    33f3:	lea    r13,[rip+0x430e]        # 7708 <_IO_stdin_used@@Base+0x1e8>
    33fa:	xor    r12d,r12d
    33fd:	mov    QWORD PTR [rsp+0x20],0x0
    3406:	mov    QWORD PTR [rsp+0x40],rax
    340b:	mov    rax,r14
    340e:	xor    ebp,ebp
    3410:	movzx  r14d,bl
    3414:	mov    QWORD PTR [rsp+0x8],0x0
    341d:	mov    rbx,rax
    3420:	mov    rsi,QWORD PTR [rsp+0x40]
    3425:	mov    edi,DWORD PTR [rsp+0x48]
    3429:	mov    edx,0x4000
    342e:	call   6160 <__cxa_finalize@plt+0x40d0>
    3433:	test   rax,rax
    3436:	je     365c <__cxa_finalize@plt+0x15cc>
    343c:	cmp    rax,0xffffffffffffffff
    3440:	je     3686 <__cxa_finalize@plt+0x15f6>
    3446:	mov    r15,QWORD PTR [rsp+0x40]
    344b:	add    QWORD PTR [rsp+0x20],rax
    3450:	mov    rcx,rbp
    3453:	mov    rbp,rbx
    3456:	lea    r10,[r15+rax*1]
    345a:	nop    WORD PTR [rax+rax*1+0x0]
    3460:	add    r15,0x1
    3464:	movzx  ebx,BYTE PTR [r15-0x1]
    3469:	lea    eax,[rbx-0x9]
    346c:	cmp    al,0x17
    346e:	ja     34c0 <__cxa_finalize@plt+0x1430>
    3470:	movzx  eax,al
    3473:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
    3478:	add    rax,r13
    347b:	jmp    rax
    347d:	nop    DWORD PTR [rax]
    3480:	add    QWORD PTR [rsp+0x8],0x1
    3486:	cmp    rcx,rbp
    3489:	cmovb  rcx,rbp
    348d:	xor    ebp,ebp
    348f:	add    r12,r14
    3492:	xor    r14d,r14d
    3495:	cmp    r10,r15
    3498:	jne    3460 <__cxa_finalize@plt+0x13d0>
    349a:	mov    rbx,rbp
    349d:	mov    rbp,rcx
    34a0:	jmp    3420 <__cxa_finalize@plt+0x1390>
    34a5:	nop    DWORD PTR [rax]
    34a8:	and    rbp,0xfffffffffffffff8
    34ac:	add    rbp,0x8
    34b0:	jmp    348f <__cxa_finalize@plt+0x13ff>
    34b2:	nop    WORD PTR [rax+rax*1+0x0]
    34b8:	add    rbp,0x1
    34bc:	jmp    348f <__cxa_finalize@plt+0x13ff>
    34be:	xchg   ax,ax
    34c0:	mov    QWORD PTR [rsp+0x18],rcx
    34c5:	mov    QWORD PTR [rsp+0x10],r10
    34ca:	call   2070 <__ctype_b_loc@plt>
    34cf:	mov    rax,QWORD PTR [rax]
    34d2:	movzx  edx,bl
    34d5:	mov    r10,QWORD PTR [rsp+0x10]
    34da:	mov    rcx,QWORD PTR [rsp+0x18]
    34df:	movzx  eax,WORD PTR [rax+rdx*2]
    34e3:	test   ah,0x40
    34e6:	je     3495 <__cxa_finalize@plt+0x1405>
    34e8:	add    rbp,0x1
    34ec:	test   ah,0x20
    34ef:	jne    348f <__cxa_finalize@plt+0x13ff>
    34f1:	mov    r14d,0x1
    34f7:	jmp    3495 <__cxa_finalize@plt+0x1405>
    34f9:	mov    esi,DWORD PTR [rsp+0x48]
    34fd:	lea    rdx,[rbx+0x8]
    3501:	mov    edi,0x1
    3506:	call   1f10 <__fxstat@plt>
    350b:	mov    DWORD PTR [rbx],eax
    350d:	jmp    2ece <__cxa_finalize@plt+0xe3e>
    3512:	mov    QWORD PTR [rsp+0x20],0x0
    351b:	mov    ebp,DWORD PTR [rsp+0x48]
    351f:	mov    ecx,0x2
    3524:	xor    edx,edx
    3526:	xor    esi,esi
    3528:	lea    r12,[rsp+0x70]
    352d:	mov    edi,ebp
    352f:	call   3d50 <__cxa_finalize@plt+0x1cc0>
    3534:	mov    rbx,QWORD PTR [rsp+0x20]
    3539:	jmp    354d <__cxa_finalize@plt+0x14bd>
    353b:	nop    DWORD PTR [rax+rax*1+0x0]
    3540:	cmp    rax,0xffffffffffffffff
    3544:	je     36cc <__cxa_finalize@plt+0x163c>
    354a:	add    rbx,rax
    354d:	mov    edx,0x4000
    3552:	mov    rsi,r12
    3555:	mov    edi,ebp
    3557:	call   6160 <__cxa_finalize@plt+0x40d0>
    355c:	test   rax,rax
    355f:	jne    3540 <__cxa_finalize@plt+0x14b0>
    3561:	mov    QWORD PTR [rsp+0x20],rbx
    3566:	xor    r14d,r14d
    3569:	xor    ebp,ebp
    356b:	xor    ebx,ebx
    356d:	mov    QWORD PTR [rsp+0x8],0x0
    3576:	mov    r15d,0x1
    357c:	jmp    320d <__cxa_finalize@plt+0x117d>
    3581:	nop    DWORD PTR [rax+0x0]
    3588:	mov    ecx,DWORD PTR [rsp+0x64]
    358c:	jmp    3091 <__cxa_finalize@plt+0x1001>
    3591:	nop    DWORD PTR [rax+0x0]
    3598:	add    r12,0x1
    359c:	sub    r13,0x1
    35a0:	mov    r15d,0x1
    35a6:	jmp    3311 <__cxa_finalize@plt+0x1281>
    35ab:	nop    DWORD PTR [rax+rax*1+0x0]
    35b0:	test   r13,r13
    35b3:	mov    QWORD PTR [rsp+0x68],r15
    35b8:	je     35e2 <__cxa_finalize@plt+0x1552>
    35ba:	cmp    r13,0x4000
    35c1:	jne    35cd <__cxa_finalize@plt+0x153d>
    35c3:	add    r12,0x1
    35c7:	mov    r13d,0x3fff
    35cd:	mov    rdi,QWORD PTR [rsp+0x40]
    35d2:	mov    ecx,0x4001
    35d7:	mov    rdx,r13
    35da:	mov    rsi,r12
    35dd:	call   1e80 <__memmove_chk@plt>
    35e2:	mov    r15d,0x1
    35e8:	jmp    3010 <__cxa_finalize@plt+0xf80>
    35ed:	nop    DWORD PTR [rax]
    35f0:	lea    rsi,[rip+0x3f2d]        # 7524 <_IO_stdin_used@@Base+0x4>
    35f7:	mov    edx,0x5
    35fc:	xor    edi,edi
    35fe:	call   1d20 <dcgettext@plt>
    3603:	mov    QWORD PTR [rsp+0x58],rax
    3608:	jmp    2e51 <__cxa_finalize@plt+0xdc1>
    360d:	mov    r15d,0x1
    3613:	mov    rax,QWORD PTR [rsp+0x38]
    3618:	cmp    rax,r14
    361b:	cmovae r14,rax
    361f:	add    rbx,QWORD PTR [rsp+0x30]
    3624:	jmp    320d <__cxa_finalize@plt+0x117d>
    3629:	mov    rdx,QWORD PTR [rsp+0x58]
    362e:	mov    esi,0x3
    3633:	xor    edi,edi
    3635:	xor    r15d,r15d
    3638:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    363d:	mov    r12,rax
    3640:	call   1c90 <__errno_location@plt>
    3645:	mov    esi,DWORD PTR [rax]
    3647:	lea    rdx,[rip+0x46ff]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    364e:	mov    rcx,r12
    3651:	xor    edi,edi
    3653:	xor    eax,eax
    3655:	call   1f90 <error@plt>
    365a:	jmp    3613 <__cxa_finalize@plt+0x1583>
    365c:	mov    rcx,rbp
    365f:	mov    rax,rbx
    3662:	mov    rbp,r12
    3665:	movzx  ebx,r14b
    3669:	mov    r12,rcx
    366c:	mov    r14,rax
    366f:	mov    r15d,0x1
    3675:	cmp    r12,r14
    3678:	cmovae r14,r12
    367c:	add    rbx,rbp
    367f:	xor    ebp,ebp
    3681:	jmp    320d <__cxa_finalize@plt+0x117d>
    3686:	mov    rdx,QWORD PTR [rsp+0x58]
    368b:	mov    rcx,rbp
    368e:	mov    rax,rbx
    3691:	mov    esi,0x3
    3696:	xor    edi,edi
    3698:	mov    rbp,r12
    369b:	movzx  ebx,r14b
    369f:	mov    r12,rcx
    36a2:	mov    r14,rax
    36a5:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    36aa:	mov    r13,rax
    36ad:	xor    r15d,r15d
    36b0:	call   1c90 <__errno_location@plt>
    36b5:	mov    esi,DWORD PTR [rax]
    36b7:	lea    rdx,[rip+0x468f]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    36be:	mov    rcx,r13
    36c1:	xor    edi,edi
    36c3:	xor    eax,eax
    36c5:	call   1f90 <error@plt>
    36ca:	jmp    3675 <__cxa_finalize@plt+0x15e5>
    36cc:	mov    rdx,QWORD PTR [rsp+0x58]
    36d1:	mov    esi,0x3
    36d6:	xor    edi,edi
    36d8:	mov    QWORD PTR [rsp+0x20],rbx
    36dd:	xor    r14d,r14d
    36e0:	xor    ebp,ebp
    36e2:	call   5bd0 <__cxa_finalize@plt+0x3b40>
    36e7:	mov    rbx,rax
    36ea:	call   1c90 <__errno_location@plt>
    36ef:	mov    esi,DWORD PTR [rax]
    36f1:	lea    rdx,[rip+0x4655]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    36f8:	mov    rcx,rbx
    36fb:	xor    edi,edi
    36fd:	xor    eax,eax
    36ff:	xor    ebx,ebx
    3701:	call   1f90 <error@plt>
    3706:	mov    QWORD PTR [rsp+0x8],0x0
    370f:	jmp    320d <__cxa_finalize@plt+0x117d>
    3714:	mov    edi,DWORD PTR [rsp+0x48]
    3718:	mov    edx,0x1
    371d:	xor    esi,esi
    371f:	call   1db0 <lseek@plt>
    3724:	xor    edx,edx
    3726:	mov    rbp,rax
    3729:	mov    rax,r12
    372c:	div    r13
    372f:	test   rdx,rdx
    3732:	je     3770 <__cxa_finalize@plt+0x16e0>
    3734:	cmp    rbp,QWORD PTR [rsp+0x20]
    3739:	jbe    3766 <__cxa_finalize@plt+0x16d6>
    373b:	xor    r14d,r14d
    373e:	mov    QWORD PTR [rsp+0x20],0x0
    3747:	xor    ebp,ebp
    3749:	xor    ebx,ebx
    374b:	mov    QWORD PTR [rsp+0x8],0x0
    3754:	mov    r15d,0x1
    375a:	jmp    320d <__cxa_finalize@plt+0x117d>
    375f:	mov    edi,ecx
    3761:	jmp    338c <__cxa_finalize@plt+0x12fc>
    3766:	sub    QWORD PTR [rsp+0x20],rbp
    376b:	jmp    3566 <__cxa_finalize@plt+0x14d6>
    3770:	mov    rsi,rbp
    3773:	not    rsi
    3776:	shr    rsi,0x3f
    377a:	jmp    2f24 <__cxa_finalize@plt+0xe94>
    377f:	call   1d50 <__stack_chk_fail@plt>
    3784:	xchg   ax,ax
    3786:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3790:	push   r12
    3792:	push   rbp
    3793:	mov    edx,0x5
    3798:	push   rbx
    3799:	mov    ebp,edi
    379b:	add    rsp,0xffffffffffffff80
    379f:	mov    rbx,QWORD PTR [rip+0x2069a2]        # 20a148 <program_name@@Base>
    37a6:	mov    rax,QWORD PTR fs:0x28
    37af:	mov    QWORD PTR [rsp+0x78],rax
    37b4:	xor    eax,eax
    37b6:	test   edi,edi
    37b8:	je     37e8 <__cxa_finalize@plt+0x1758>
    37ba:	lea    rsi,[rip+0x3fb7]        # 7778 <_IO_stdin_used@@Base+0x258>
    37c1:	xor    edi,edi
    37c3:	call   1d20 <dcgettext@plt>
    37c8:	mov    rdi,QWORD PTR [rip+0x206911]        # 20a0e0 <stderr@@GLIBC_2.2.5>
    37cf:	mov    rdx,rax
    37d2:	mov    rcx,rbx
    37d5:	mov    esi,0x1
    37da:	xor    eax,eax
    37dc:	call   2030 <__fprintf_chk@plt>
    37e1:	mov    edi,ebp
    37e3:	call   2010 <exit@plt>
    37e8:	lea    rsi,[rip+0x3fb1]        # 77a0 <_IO_stdin_used@@Base+0x280>
    37ef:	xor    edi,edi
    37f1:	call   1d20 <dcgettext@plt>
    37f6:	mov    rcx,rbx
    37f9:	mov    rdx,rbx
    37fc:	mov    rsi,rax
    37ff:	mov    edi,0x1
    3804:	xor    eax,eax
    3806:	call   1f60 <__printf_chk@plt>
    380b:	mov    rbx,QWORD PTR [rip+0x206896]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    3812:	lea    rsi,[rip+0x3fcf]        # 77e8 <_IO_stdin_used@@Base+0x2c8>
    3819:	mov    edx,0x5
    381e:	xor    edi,edi
    3820:	call   1d20 <dcgettext@plt>
    3825:	mov    rsi,rbx
    3828:	mov    rdi,rax
    382b:	call   1e50 <fputs_unlocked@plt>
    3830:	mov    rbx,QWORD PTR [rip+0x206871]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    3837:	lea    rsi,[rip+0x4062]        # 78a0 <_IO_stdin_used@@Base+0x380>
    383e:	mov    edx,0x5
    3843:	xor    edi,edi
    3845:	call   1d20 <dcgettext@plt>
    384a:	mov    rsi,rbx
    384d:	mov    rdi,rax
    3850:	call   1e50 <fputs_unlocked@plt>
    3855:	mov    rbx,QWORD PTR [rip+0x20684c]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    385c:	lea    rsi,[rip+0x4075]        # 78d8 <_IO_stdin_used@@Base+0x3b8>
    3863:	mov    edx,0x5
    3868:	xor    edi,edi
    386a:	call   1d20 <dcgettext@plt>
    386f:	mov    rsi,rbx
    3872:	mov    rdi,rax
    3875:	call   1e50 <fputs_unlocked@plt>
    387a:	mov    rbx,QWORD PTR [rip+0x206827]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    3881:	lea    rsi,[rip+0x4180]        # 7a08 <_IO_stdin_used@@Base+0x4e8>
    3888:	mov    edx,0x5
    388d:	xor    edi,edi
    388f:	call   1d20 <dcgettext@plt>
    3894:	mov    rsi,rbx
    3897:	mov    rdi,rax
    389a:	call   1e50 <fputs_unlocked@plt>
    389f:	mov    rbx,QWORD PTR [rip+0x206802]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    38a6:	lea    rsi,[rip+0x428b]        # 7b38 <_IO_stdin_used@@Base+0x618>
    38ad:	mov    edx,0x5
    38b2:	xor    edi,edi
    38b4:	call   1d20 <dcgettext@plt>
    38b9:	mov    rsi,rbx
    38bc:	mov    rdi,rax
    38bf:	call   1e50 <fputs_unlocked@plt>
    38c4:	mov    rbx,QWORD PTR [rip+0x2067dd]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    38cb:	lea    rsi,[rip+0x4296]        # 7b68 <_IO_stdin_used@@Base+0x648>
    38d2:	mov    edx,0x5
    38d7:	xor    edi,edi
    38d9:	call   1d20 <dcgettext@plt>
    38de:	mov    rsi,rbx
    38e1:	mov    rdi,rax
    38e4:	lea    rbx,[rip+0x3c8c]        # 7577 <_IO_stdin_used@@Base+0x57>
    38eb:	call   1e50 <fputs_unlocked@plt>
    38f0:	lea    rax,[rip+0x3c3f]        # 7536 <_IO_stdin_used@@Base+0x16>
    38f7:	lea    rdx,[rip+0x3c83]        # 7581 <_IO_stdin_used@@Base+0x61>
    38fe:	lea    rcx,[rip+0x3c86]        # 758b <_IO_stdin_used@@Base+0x6b>
    3905:	mov    QWORD PTR [rsp+0x30],rbx
    390a:	lea    rbx,[rip+0x3c22]        # 7533 <_IO_stdin_used@@Base+0x13>
    3911:	mov    QWORD PTR [rsp+0x60],0x0
    391a:	mov    QWORD PTR [rsp],rax
    391e:	lea    rax,[rip+0x3c13]        # 7538 <_IO_stdin_used@@Base+0x18>
    3925:	mov    QWORD PTR [rsp+0x40],rdx
    392a:	mov    QWORD PTR [rsp+0x50],rcx
    392f:	mov    QWORD PTR [rsp+0x68],0x0
    3938:	mov    QWORD PTR [rsp+0x8],rax
    393d:	lea    rax,[rip+0x3c6c]        # 75b0 <_IO_stdin_used@@Base+0x90>
    3944:	mov    QWORD PTR [rsp+0x10],rax
    3949:	lea    rax,[rip+0x3bf8]        # 7548 <_IO_stdin_used@@Base+0x28>
    3950:	mov    QWORD PTR [rsp+0x18],rax
    3955:	lea    rax,[rip+0x3c02]        # 755e <_IO_stdin_used@@Base+0x3e>
    395c:	mov    QWORD PTR [rsp+0x20],rax
    3961:	lea    rax,[rip+0x3c00]        # 7568 <_IO_stdin_used@@Base+0x48>
    3968:	mov    QWORD PTR [rsp+0x28],rax
    396d:	mov    QWORD PTR [rsp+0x38],rax
    3972:	mov    QWORD PTR [rsp+0x48],rax
    3977:	mov    QWORD PTR [rsp+0x58],rax
    397c:	mov    rax,rsp
    397f:	nop
    3980:	add    rax,0x10
    3984:	mov    rdi,QWORD PTR [rax]
    3987:	test   rdi,rdi
    398a:	je     3998 <__cxa_finalize@plt+0x1908>
    398c:	mov    ecx,0x3
    3991:	mov    rsi,rbx
    3994:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3996:	jne    3980 <__cxa_finalize@plt+0x18f0>
    3998:	mov    r12,QWORD PTR [rax+0x8]
    399c:	xor    edi,edi
    399e:	mov    edx,0x5
    39a3:	lea    rsi,[rip+0x3beb]        # 7595 <_IO_stdin_used@@Base+0x75>
    39aa:	test   r12,r12
    39ad:	je     3a74 <__cxa_finalize@plt+0x19e4>
    39b3:	call   1d20 <dcgettext@plt>
    39b8:	lea    rcx,[rip+0x41e1]        # 7ba0 <_IO_stdin_used@@Base+0x680>
    39bf:	lea    rdx,[rip+0x3be6]        # 75ac <_IO_stdin_used@@Base+0x8c>
    39c6:	mov    rsi,rax
    39c9:	mov    edi,0x1
    39ce:	xor    eax,eax
    39d0:	call   1f60 <__printf_chk@plt>
    39d5:	xor    esi,esi
    39d7:	mov    edi,0x5
    39dc:	call   1f50 <setlocale@plt>
    39e1:	test   rax,rax
    39e4:	je     3a02 <__cxa_finalize@plt+0x1972>
    39e6:	lea    rsi,[rip+0x3bcd]        # 75ba <_IO_stdin_used@@Base+0x9a>
    39ed:	mov    edx,0x3
    39f2:	mov    rdi,rax
    39f5:	call   1ca0 <strncmp@plt>
    39fa:	test   eax,eax
    39fc:	jne    3b09 <__cxa_finalize@plt+0x1a79>
    3a02:	lea    rsi,[rip+0x4207]        # 7c10 <_IO_stdin_used@@Base+0x6f0>
    3a09:	xor    edi,edi
    3a0b:	mov    edx,0x5
    3a10:	call   1d20 <dcgettext@plt>
    3a15:	lea    rcx,[rip+0x3b17]        # 7533 <_IO_stdin_used@@Base+0x13>
    3a1c:	lea    rdx,[rip+0x417d]        # 7ba0 <_IO_stdin_used@@Base+0x680>
    3a23:	mov    rsi,rax
    3a26:	mov    edi,0x1
    3a2b:	xor    eax,eax
    3a2d:	call   1f60 <__printf_chk@plt>
    3a32:	cmp    r12,rbx
    3a35:	lea    rcx,[rip+0x3b16]        # 7552 <_IO_stdin_used@@Base+0x32>
    3a3c:	lea    rbx,[rip+0x48be]        # 8301 <quoting_style_vals@@Base+0x81>
    3a43:	cmove  rbx,rcx
    3a47:	lea    rsi,[rip+0x41e2]        # 7c30 <_IO_stdin_used@@Base+0x710>
    3a4e:	xor    edi,edi
    3a50:	mov    edx,0x5
    3a55:	call   1d20 <dcgettext@plt>
    3a5a:	mov    rcx,rbx
    3a5d:	mov    rsi,rax
    3a60:	mov    rdx,r12
    3a63:	mov    edi,0x1
    3a68:	xor    eax,eax
    3a6a:	call   1f60 <__printf_chk@plt>
    3a6f:	jmp    37e1 <__cxa_finalize@plt+0x1751>
    3a74:	call   1d20 <dcgettext@plt>
    3a79:	lea    rcx,[rip+0x4120]        # 7ba0 <_IO_stdin_used@@Base+0x680>
    3a80:	lea    rdx,[rip+0x3b25]        # 75ac <_IO_stdin_used@@Base+0x8c>
    3a87:	mov    rsi,rax
    3a8a:	mov    edi,0x1
    3a8f:	xor    eax,eax
    3a91:	call   1f60 <__printf_chk@plt>
    3a96:	xor    esi,esi
    3a98:	mov    edi,0x5
    3a9d:	call   1f50 <setlocale@plt>
    3aa2:	test   rax,rax
    3aa5:	je     3abf <__cxa_finalize@plt+0x1a2f>
    3aa7:	lea    rsi,[rip+0x3b0c]        # 75ba <_IO_stdin_used@@Base+0x9a>
    3aae:	mov    edx,0x3
    3ab3:	mov    rdi,rax
    3ab6:	call   1ca0 <strncmp@plt>
    3abb:	test   eax,eax
    3abd:	jne    3b02 <__cxa_finalize@plt+0x1a72>
    3abf:	lea    rsi,[rip+0x414a]        # 7c10 <_IO_stdin_used@@Base+0x6f0>
    3ac6:	mov    edx,0x5
    3acb:	xor    edi,edi
    3acd:	lea    r12,[rip+0x3a5f]        # 7533 <_IO_stdin_used@@Base+0x13>
    3ad4:	lea    rbx,[rip+0x3a77]        # 7552 <_IO_stdin_used@@Base+0x32>
    3adb:	call   1d20 <dcgettext@plt>
    3ae0:	lea    rcx,[rip+0x3a4c]        # 7533 <_IO_stdin_used@@Base+0x13>
    3ae7:	lea    rdx,[rip+0x40b2]        # 7ba0 <_IO_stdin_used@@Base+0x680>
    3aee:	mov    rsi,rax
    3af1:	mov    edi,0x1
    3af6:	xor    eax,eax
    3af8:	call   1f60 <__printf_chk@plt>
    3afd:	jmp    3a47 <__cxa_finalize@plt+0x19b7>
    3b02:	lea    r12,[rip+0x3a2a]        # 7533 <_IO_stdin_used@@Base+0x13>
    3b09:	lea    rsi,[rip+0x40b8]        # 7bc8 <_IO_stdin_used@@Base+0x6a8>
    3b10:	xor    edi,edi
    3b12:	mov    edx,0x5
    3b17:	call   1d20 <dcgettext@plt>
    3b1c:	lea    rdx,[rip+0x3a10]        # 7533 <_IO_stdin_used@@Base+0x13>
    3b23:	mov    rsi,rax
    3b26:	mov    edi,0x1
    3b2b:	xor    eax,eax
    3b2d:	call   1f60 <__printf_chk@plt>
    3b32:	jmp    3a02 <__cxa_finalize@plt+0x1972>
    3b37:	nop    WORD PTR [rax+rax*1+0x0]
    3b40:	push   rbx
    3b41:	mov    rbx,rdi
    3b44:	mov    edi,0x30
    3b49:	call   2088 <malloc@plt>
    3b4e:	test   rax,rax
    3b51:	je     3b62 <__cxa_finalize@plt+0x1ad2>
    3b53:	mov    QWORD PTR [rax],0x0
    3b5a:	mov    QWORD PTR [rax+0x20],rbx
    3b5e:	mov    QWORD PTR [rax+0x28],rbx
    3b62:	pop    rbx
    3b63:	ret    
    3b64:	xchg   ax,ax
    3b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3b70:	push   rbx
    3b71:	mov    rbx,rdi
    3b74:	mov    edi,0x30
    3b79:	call   2088 <malloc@plt>
    3b7e:	test   rax,rax
    3b81:	je     3ba6 <__cxa_finalize@plt+0x1b16>
    3b83:	mov    QWORD PTR [rax],rbx
    3b86:	mov    QWORD PTR [rax+0x10],0x0
    3b8e:	mov    QWORD PTR [rax+0x18],0x0
    3b96:	mov    QWORD PTR [rax+0x8],0x0
    3b9e:	mov    QWORD PTR [rax+0x20],0x0
    3ba6:	pop    rbx
    3ba7:	ret    
    3ba8:	nop    DWORD PTR [rax+rax*1+0x0]
    3bb0:	mov    rcx,QWORD PTR [rdi]
    3bb3:	test   rcx,rcx
    3bb6:	je     3bf0 <__cxa_finalize@plt+0x1b60>
    3bb8:	push   rbp
    3bb9:	push   rbx
    3bba:	mov    rbp,rsi
    3bbd:	mov    rbx,rdi
    3bc0:	lea    rsi,[rdi+0x18]
    3bc4:	lea    rdi,[rdi+0x10]
    3bc8:	sub    rsp,0x8
    3bcc:	xor    edx,edx
    3bce:	call   2060 <getdelim@plt>
    3bd3:	test   rax,rax
    3bd6:	js     3c20 <__cxa_finalize@plt+0x1b90>
    3bd8:	mov    DWORD PTR [rbp+0x0],0x1
    3bdf:	add    QWORD PTR [rbx+0x8],0x1
    3be4:	mov    rax,QWORD PTR [rbx+0x10]
    3be8:	add    rsp,0x8
    3bec:	pop    rbx
    3bed:	pop    rbp
    3bee:	ret    
    3bef:	nop
    3bf0:	mov    rdx,QWORD PTR [rdi+0x28]
    3bf4:	mov    rax,QWORD PTR [rdx]
    3bf7:	test   rax,rax
    3bfa:	je     3c10 <__cxa_finalize@plt+0x1b80>
    3bfc:	add    rdx,0x8
    3c00:	mov    DWORD PTR [rsi],0x1
    3c06:	mov    QWORD PTR [rdi+0x28],rdx
    3c0a:	ret    
    3c0b:	nop    DWORD PTR [rax+rax*1+0x0]
    3c10:	mov    DWORD PTR [rsi],0x2
    3c16:	ret    
    3c17:	nop    WORD PTR [rax+rax*1+0x0]
    3c20:	mov    rdi,QWORD PTR [rbx]
    3c23:	call   1e90 <feof@plt>
    3c28:	cmp    eax,0x1
    3c2b:	sbb    eax,eax
    3c2d:	and    eax,0x2
    3c30:	add    eax,0x2
    3c33:	mov    DWORD PTR [rbp+0x0],eax
    3c36:	xor    eax,eax
    3c38:	jmp    3be8 <__cxa_finalize@plt+0x1b58>
    3c3a:	nop    WORD PTR [rax+rax*1+0x0]
    3c40:	cmp    QWORD PTR [rdi],0x0
    3c44:	je     3c50 <__cxa_finalize@plt+0x1bc0>
    3c46:	mov    rax,QWORD PTR [rdi+0x8]
    3c4a:	ret    
    3c4b:	nop    DWORD PTR [rax+rax*1+0x0]
    3c50:	mov    rax,QWORD PTR [rdi+0x28]
    3c54:	sub    rax,QWORD PTR [rdi+0x20]
    3c58:	sar    rax,0x3
    3c5c:	ret    
    3c5d:	nop    DWORD PTR [rax]
    3c60:	push   rbx
    3c61:	cmp    QWORD PTR [rdi],0x0
    3c65:	mov    rbx,rdi
    3c68:	je     3c73 <__cxa_finalize@plt+0x1be3>
    3c6a:	mov    rdi,QWORD PTR [rdi+0x10]
    3c6e:	call   2080 <free@plt>
    3c73:	mov    rdi,rbx
    3c76:	pop    rbx
    3c77:	jmp    2080 <free@plt>
    3c7c:	nop    DWORD PTR [rax+0x0]
    3c80:	mov    QWORD PTR [rip+0x2064b9],rdi        # 20a140 <stderr@@GLIBC_2.2.5+0x60>
    3c87:	ret    
    3c88:	nop    DWORD PTR [rax+rax*1+0x0]
    3c90:	mov    BYTE PTR [rip+0x2064a1],dil        # 20a138 <stderr@@GLIBC_2.2.5+0x58>
    3c97:	ret    
    3c98:	nop    DWORD PTR [rax+rax*1+0x0]
    3ca0:	push   rbp
    3ca1:	push   rbx
    3ca2:	sub    rsp,0x8
    3ca6:	mov    rdi,QWORD PTR [rip+0x2063fb]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    3cad:	call   6f30 <_obstack_memory_used@@Base+0x30>
    3cb2:	test   eax,eax
    3cb4:	je     3ccc <__cxa_finalize@plt+0x1c3c>
    3cb6:	call   1c90 <__errno_location@plt>
    3cbb:	cmp    BYTE PTR [rip+0x206476],0x0        # 20a138 <stderr@@GLIBC_2.2.5+0x58>
    3cc2:	mov    rbx,rax
    3cc5:	je     3ce3 <__cxa_finalize@plt+0x1c53>
    3cc7:	cmp    DWORD PTR [rax],0x20
    3cca:	jne    3ce3 <__cxa_finalize@plt+0x1c53>
    3ccc:	mov    rdi,QWORD PTR [rip+0x20640d]        # 20a0e0 <stderr@@GLIBC_2.2.5>
    3cd3:	call   6f30 <_obstack_memory_used@@Base+0x30>
    3cd8:	test   eax,eax
    3cda:	jne    3d22 <__cxa_finalize@plt+0x1c92>
    3cdc:	add    rsp,0x8
    3ce0:	pop    rbx
    3ce1:	pop    rbp
    3ce2:	ret    
    3ce3:	lea    rsi,[rip+0x4053]        # 7d3d <_IO_stdin_used@@Base+0x81d>
    3cea:	xor    edi,edi
    3cec:	mov    edx,0x5
    3cf1:	call   1d20 <dcgettext@plt>
    3cf6:	mov    rdi,QWORD PTR [rip+0x206443]        # 20a140 <stderr@@GLIBC_2.2.5+0x60>
    3cfd:	mov    rbp,rax
    3d00:	test   rdi,rdi
    3d03:	je     3d2d <__cxa_finalize@plt+0x1c9d>
    3d05:	call   5ba0 <__cxa_finalize@plt+0x3b10>
    3d0a:	mov    esi,DWORD PTR [rbx]
    3d0c:	lea    rdx,[rip+0x4036]        # 7d49 <_IO_stdin_used@@Base+0x829>
    3d13:	mov    rcx,rax
    3d16:	mov    r8,rbp
    3d19:	xor    edi,edi
    3d1b:	xor    eax,eax
    3d1d:	call   1f90 <error@plt>
    3d22:	mov    edi,DWORD PTR [rip+0x2062f0]        # 20a018 <exit_failure@@Base>
    3d28:	call   1cb0 <_exit@plt>
    3d2d:	mov    esi,DWORD PTR [rbx]
    3d2f:	lea    rdx,[rip+0x4017]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    3d36:	mov    rcx,rax
    3d39:	xor    edi,edi
    3d3b:	xor    eax,eax
    3d3d:	call   1f90 <error@plt>
    3d42:	jmp    3d22 <__cxa_finalize@plt+0x1c92>
    3d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3d4e:	xchg   ax,ax
    3d50:	jmp    1e10 <posix_fadvise@plt>
    3d55:	nop
    3d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3d60:	test   rdi,rdi
    3d63:	je     3d80 <__cxa_finalize@plt+0x1cf0>
    3d65:	push   rbx
    3d66:	mov    ebx,esi
    3d68:	call   1eb0 <fileno@plt>
    3d6d:	mov    ecx,ebx
    3d6f:	xor    edx,edx
    3d71:	xor    esi,esi
    3d73:	pop    rbx
    3d74:	mov    edi,eax
    3d76:	jmp    1e10 <posix_fadvise@plt>
    3d7b:	nop    DWORD PTR [rax+rax*1+0x0]
    3d80:	repz ret 
    3d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3d8c:	nop    DWORD PTR [rax+0x0]
    3d90:	lea    rcx,[rsi+0x14]
    3d94:	mov    BYTE PTR [rsi+0x14],0x0
    3d98:	movabs rsi,0xcccccccccccccccd
    3da2:	nop    WORD PTR [rax+rax*1+0x0]
    3da8:	mov    rax,rdi
    3dab:	sub    rcx,0x1
    3daf:	mul    rsi
    3db2:	shr    rdx,0x3
    3db6:	lea    rax,[rdx+rdx*4]
    3dba:	add    rax,rax
    3dbd:	sub    rdi,rax
    3dc0:	add    edi,0x30
    3dc3:	test   rdx,rdx
    3dc6:	mov    BYTE PTR [rcx],dil
    3dc9:	mov    rdi,rdx
    3dcc:	jne    3da8 <__cxa_finalize@plt+0x1d18>
    3dce:	mov    rax,rcx
    3dd1:	ret    
    3dd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3ddc:	nop    DWORD PTR [rax+0x0]
    3de0:	push   rbx
    3de1:	mov    ebx,edi
    3de3:	call   1ed0 <wcwidth@plt>
    3de8:	test   eax,eax
    3dea:	js     3df0 <__cxa_finalize@plt+0x1d60>
    3dec:	pop    rbx
    3ded:	ret    
    3dee:	xchg   ax,ax
    3df0:	mov    edi,ebx
    3df2:	call   1ce0 <iswcntrl@plt>
    3df7:	test   eax,eax
    3df9:	sete   al
    3dfc:	movzx  eax,al
    3dff:	pop    rbx
    3e00:	ret    
    3e01:	nop    DWORD PTR [rax+rax*1+0x0]
    3e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3e10:	push   rbp
    3e11:	push   rbx
    3e12:	mov    rbx,rsi
    3e15:	lea    rax,[rbx+0x18]
    3e19:	mov    rbp,rdi
    3e1c:	sub    rsp,0x8
    3e20:	mov    rsi,QWORD PTR [rsi]
    3e23:	mov    rdx,QWORD PTR [rbx+0x8]
    3e27:	cmp    rsi,rax
    3e2a:	je     3e50 <__cxa_finalize@plt+0x1dc0>
    3e2c:	mov    QWORD PTR [rdi],rsi
    3e2f:	movzx  eax,BYTE PTR [rbx+0x10]
    3e33:	mov    QWORD PTR [rbp+0x8],rdx
    3e37:	test   al,al
    3e39:	mov    BYTE PTR [rbp+0x10],al
    3e3c:	je     3e44 <__cxa_finalize@plt+0x1db4>
    3e3e:	mov    eax,DWORD PTR [rbx+0x14]
    3e41:	mov    DWORD PTR [rbp+0x14],eax
    3e44:	add    rsp,0x8
    3e48:	pop    rbx
    3e49:	pop    rbp
    3e4a:	ret    
    3e4b:	nop    DWORD PTR [rax+rax*1+0x0]
    3e50:	lea    rcx,[rdi+0x18]
    3e54:	mov    rdi,rcx
    3e57:	call   1ea0 <memcpy@plt>
    3e5c:	mov    rdx,QWORD PTR [rbx+0x8]
    3e60:	mov    QWORD PTR [rbp+0x0],rax
    3e64:	jmp    3e2f <__cxa_finalize@plt+0x1d9f>
    3e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3e70:	mov    eax,edi
    3e72:	lea    rdx,[rip+0x3ee7]        # 7d60 <is_basic_table@@Base>
    3e79:	mov    ecx,edi
    3e7b:	shr    al,0x5
    3e7e:	and    ecx,0x1f
    3e81:	and    eax,0x7
    3e84:	mov    eax,DWORD PTR [rdx+rax*4]
    3e87:	shr    eax,cl
    3e89:	and    eax,0x1
    3e8c:	ret    
    3e8d:	nop    DWORD PTR [rax]
    3e90:	sub    rsp,0x98
    3e97:	mov    edi,0x55
    3e9c:	mov    rax,QWORD PTR fs:0x28
    3ea5:	mov    QWORD PTR [rsp+0x88],rax
    3ead:	xor    eax,eax
    3eaf:	call   1fd0 <sysconf@plt>
    3eb4:	pxor   xmm0,xmm0
    3eb8:	mov    edi,0x1e
    3ebd:	cvtsi2sd xmm0,rax
    3ec2:	movsd  QWORD PTR [rsp+0x8],xmm0
    3ec8:	call   1fd0 <sysconf@plt>
    3ecd:	pxor   xmm2,xmm2
    3ed1:	movsd  xmm0,QWORD PTR [rsp+0x8]
    3ed7:	ucomisd xmm0,xmm2
    3edb:	jb     3f10 <__cxa_finalize@plt+0x1e80>
    3edd:	pxor   xmm1,xmm1
    3ee1:	cvtsi2sd xmm1,rax
    3ee6:	ucomisd xmm1,xmm2
    3eea:	jb     3f10 <__cxa_finalize@plt+0x1e80>
    3eec:	mulsd  xmm0,xmm1
    3ef0:	mov    rax,QWORD PTR [rsp+0x88]
    3ef8:	xor    rax,QWORD PTR fs:0x28
    3f01:	jne    3f6b <__cxa_finalize@plt+0x1edb>
    3f03:	add    rsp,0x98
    3f0a:	ret    
    3f0b:	nop    DWORD PTR [rax+rax*1+0x0]
    3f10:	lea    rdi,[rsp+0x10]
    3f15:	call   1ff0 <sysinfo@plt>
    3f1a:	test   eax,eax
    3f1c:	movsd  xmm0,QWORD PTR [rip+0x3e5c]        # 7d80 <is_basic_table@@Base+0x20>
    3f24:	jne    3ef0 <__cxa_finalize@plt+0x1e60>
    3f26:	mov    rax,QWORD PTR [rsp+0x30]
    3f2b:	test   rax,rax
    3f2e:	js     3f50 <__cxa_finalize@plt+0x1ec0>
    3f30:	pxor   xmm0,xmm0
    3f34:	cvtsi2sd xmm0,rax
    3f39:	mov    eax,DWORD PTR [rsp+0x78]
    3f3d:	pxor   xmm1,xmm1
    3f41:	cvtsi2sd xmm1,rax
    3f46:	jmp    3eec <__cxa_finalize@plt+0x1e5c>
    3f48:	nop    DWORD PTR [rax+rax*1+0x0]
    3f50:	mov    rdx,rax
    3f53:	pxor   xmm0,xmm0
    3f57:	shr    rdx,1
    3f5a:	and    eax,0x1
    3f5d:	or     rdx,rax
    3f60:	cvtsi2sd xmm0,rdx
    3f65:	addsd  xmm0,xmm0
    3f69:	jmp    3f39 <__cxa_finalize@plt+0x1ea9>
    3f6b:	call   1d50 <__stack_chk_fail@plt>
    3f70:	sub    rsp,0x98
    3f77:	mov    edi,0x56
    3f7c:	mov    rax,QWORD PTR fs:0x28
    3f85:	mov    QWORD PTR [rsp+0x88],rax
    3f8d:	xor    eax,eax
    3f8f:	call   1fd0 <sysconf@plt>
    3f94:	pxor   xmm0,xmm0
    3f98:	mov    edi,0x1e
    3f9d:	cvtsi2sd xmm0,rax
    3fa2:	movsd  QWORD PTR [rsp+0x8],xmm0
    3fa8:	call   1fd0 <sysconf@plt>
    3fad:	pxor   xmm2,xmm2
    3fb1:	movsd  xmm0,QWORD PTR [rsp+0x8]
    3fb7:	ucomisd xmm0,xmm2
    3fbb:	jb     3ff0 <__cxa_finalize@plt+0x1f60>
    3fbd:	pxor   xmm1,xmm1
    3fc1:	cvtsi2sd xmm1,rax
    3fc6:	ucomisd xmm1,xmm2
    3fca:	jb     3ff0 <__cxa_finalize@plt+0x1f60>
    3fcc:	mulsd  xmm0,xmm1
    3fd0:	mov    rax,QWORD PTR [rsp+0x88]
    3fd8:	xor    rax,QWORD PTR fs:0x28
    3fe1:	jne    408b <__cxa_finalize@plt+0x1ffb>
    3fe7:	add    rsp,0x98
    3fee:	ret    
    3fef:	nop
    3ff0:	lea    rdi,[rsp+0x10]
    3ff5:	call   1ff0 <sysinfo@plt>
    3ffa:	test   eax,eax
    3ffc:	jne    4040 <__cxa_finalize@plt+0x1fb0>
    3ffe:	mov    rax,QWORD PTR [rsp+0x38]
    4003:	test   rax,rax
    4006:	js     4070 <__cxa_finalize@plt+0x1fe0>
    4008:	pxor   xmm0,xmm0
    400c:	cvtsi2sd xmm0,rax
    4011:	mov    rax,QWORD PTR [rsp+0x48]
    4016:	test   rax,rax
    4019:	js     4050 <__cxa_finalize@plt+0x1fc0>
    401b:	pxor   xmm1,xmm1
    401f:	cvtsi2sd xmm1,rax
    4024:	mov    eax,DWORD PTR [rsp+0x78]
    4028:	addsd  xmm0,xmm1
    402c:	pxor   xmm1,xmm1
    4030:	cvtsi2sd xmm1,rax
    4035:	jmp    3fcc <__cxa_finalize@plt+0x1f3c>
    4037:	nop    WORD PTR [rax+rax*1+0x0]
    4040:	call   3e90 <__cxa_finalize@plt+0x1e00>
    4045:	mulsd  xmm0,QWORD PTR [rip+0x3d3b]        # 7d88 <is_basic_table@@Base+0x28>
    404d:	jmp    3fd0 <__cxa_finalize@plt+0x1f40>
    404f:	nop
    4050:	mov    rdx,rax
    4053:	pxor   xmm1,xmm1
    4057:	shr    rdx,1
    405a:	and    eax,0x1
    405d:	or     rdx,rax
    4060:	cvtsi2sd xmm1,rdx
    4065:	addsd  xmm1,xmm1
    4069:	jmp    4024 <__cxa_finalize@plt+0x1f94>
    406b:	nop    DWORD PTR [rax+rax*1+0x0]
    4070:	mov    rdx,rax
    4073:	pxor   xmm0,xmm0
    4077:	shr    rdx,1
    407a:	and    eax,0x1
    407d:	or     rdx,rax
    4080:	cvtsi2sd xmm0,rdx
    4085:	addsd  xmm0,xmm0
    4089:	jmp    4011 <__cxa_finalize@plt+0x1f81>
    408b:	call   1d50 <__stack_chk_fail@plt>
    4090:	test   rdi,rdi
    4093:	push   rbx
    4094:	je     4107 <__cxa_finalize@plt+0x2077>
    4096:	mov    esi,0x2f
    409b:	mov    rbx,rdi
    409e:	call   1da0 <strrchr@plt>
    40a3:	test   rax,rax
    40a6:	je     40f7 <__cxa_finalize@plt+0x2067>
    40a8:	lea    rdx,[rax+0x1]
    40ac:	mov    rcx,rdx
    40af:	sub    rcx,rbx
    40b2:	cmp    rcx,0x6
    40b6:	jle    40f7 <__cxa_finalize@plt+0x2067>
    40b8:	lea    rsi,[rax-0x6]
    40bc:	lea    rdi,[rip+0x3d05]        # 7dc8 <is_basic_table@@Base+0x68>
    40c3:	mov    ecx,0x7
    40c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    40ca:	jne    40f7 <__cxa_finalize@plt+0x2067>
    40cc:	lea    rdi,[rip+0x3cfd]        # 7dd0 <is_basic_table@@Base+0x70>
    40d3:	mov    ecx,0x3
    40d8:	mov    rsi,rdx
    40db:	mov    rbx,rdx
    40de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    40e0:	seta   sil
    40e4:	setb   cl
    40e7:	cmp    sil,cl
    40ea:	jne    40f7 <__cxa_finalize@plt+0x2067>
    40ec:	lea    rbx,[rax+0x4]
    40f0:	mov    QWORD PTR [rip+0x205fa9],rbx        # 20a0a0 <__progname@@GLIBC_2.2.5>
    40f7:	mov    QWORD PTR [rip+0x20604a],rbx        # 20a148 <program_name@@Base>
    40fe:	mov    QWORD PTR [rip+0x205fc3],rbx        # 20a0c8 <__progname_full@@GLIBC_2.2.5>
    4105:	pop    rbx
    4106:	ret    
    4107:	mov    rcx,QWORD PTR [rip+0x205fd2]        # 20a0e0 <stderr@@GLIBC_2.2.5>
    410e:	lea    rdi,[rip+0x3c7b]        # 7d90 <is_basic_table@@Base+0x30>
    4115:	mov    edx,0x37
    411a:	mov    esi,0x1
    411f:	call   2020 <fwrite@plt>
    4124:	call   1c80 <abort@plt>
    4129:	nop    DWORD PTR [rax+0x0]
    4130:	push   rbp
    4131:	push   rbx
    4132:	mov    rbp,rdi
    4135:	mov    ebx,esi
    4137:	sub    rsp,0x8
    413b:	call   7010 <_obstack_memory_used@@Base+0x110>
    4140:	movzx  edx,BYTE PTR [rax]
    4143:	and    edx,0xffffffdf
    4146:	cmp    dl,0x55
    4149:	je     41c0 <__cxa_finalize@plt+0x2130>
    414b:	cmp    dl,0x47
    414e:	je     4170 <__cxa_finalize@plt+0x20e0>
    4150:	lea    rax,[rip+0x3c8c]        # 7de3 <is_basic_table@@Base+0x83>
    4157:	lea    rdx,[rip+0x3c87]        # 7de5 <is_basic_table@@Base+0x85>
    415e:	cmp    ebx,0x9
    4161:	cmovne rax,rdx
    4165:	add    rsp,0x8
    4169:	pop    rbx
    416a:	pop    rbp
    416b:	ret    
    416c:	nop    DWORD PTR [rax+0x0]
    4170:	movzx  edx,BYTE PTR [rax+0x1]
    4174:	and    edx,0xffffffdf
    4177:	cmp    dl,0x42
    417a:	jne    4150 <__cxa_finalize@plt+0x20c0>
    417c:	cmp    BYTE PTR [rax+0x2],0x31
    4180:	jne    4150 <__cxa_finalize@plt+0x20c0>
    4182:	cmp    BYTE PTR [rax+0x3],0x38
    4186:	jne    4150 <__cxa_finalize@plt+0x20c0>
    4188:	cmp    BYTE PTR [rax+0x4],0x30
    418c:	jne    4150 <__cxa_finalize@plt+0x20c0>
    418e:	cmp    BYTE PTR [rax+0x5],0x33
    4192:	jne    4150 <__cxa_finalize@plt+0x20c0>
    4194:	cmp    BYTE PTR [rax+0x6],0x30
    4198:	jne    4150 <__cxa_finalize@plt+0x20c0>
    419a:	cmp    BYTE PTR [rax+0x7],0x0
    419e:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41a0:	cmp    BYTE PTR [rbp+0x0],0x60
    41a4:	lea    rax,[rip+0x3c31]        # 7ddc <is_basic_table@@Base+0x7c>
    41ab:	lea    rdx,[rip+0x3c2e]        # 7de0 <is_basic_table@@Base+0x80>
    41b2:	cmovne rax,rdx
    41b6:	add    rsp,0x8
    41ba:	pop    rbx
    41bb:	pop    rbp
    41bc:	ret    
    41bd:	nop    DWORD PTR [rax]
    41c0:	movzx  edx,BYTE PTR [rax+0x1]
    41c4:	and    edx,0xffffffdf
    41c7:	cmp    dl,0x54
    41ca:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41cc:	movzx  edx,BYTE PTR [rax+0x2]
    41d0:	and    edx,0xffffffdf
    41d3:	cmp    dl,0x46
    41d6:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41dc:	cmp    BYTE PTR [rax+0x3],0x2d
    41e0:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41e6:	cmp    BYTE PTR [rax+0x4],0x38
    41ea:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41f0:	cmp    BYTE PTR [rax+0x5],0x0
    41f4:	jne    4150 <__cxa_finalize@plt+0x20c0>
    41fa:	cmp    BYTE PTR [rbp+0x0],0x60
    41fe:	lea    rax,[rip+0x3bcf]        # 7dd4 <is_basic_table@@Base+0x74>
    4205:	lea    rdx,[rip+0x3bcc]        # 7dd8 <is_basic_table@@Base+0x78>
    420c:	cmovne rax,rdx
    4210:	add    rsp,0x8
    4214:	pop    rbx
    4215:	pop    rbp
    4216:	ret    
    4217:	nop    WORD PTR [rax+rax*1+0x0]
    4220:	push   r15
    4222:	push   r14
    4224:	mov    r15d,r8d
    4227:	push   r13
    4229:	push   r12
    422b:	mov    r14,rdi
    422e:	push   rbp
    422f:	push   rbx
    4230:	mov    ebx,r9d
    4233:	mov    r13,rsi
    4236:	mov    rbp,rcx
    4239:	and    ebx,0x2
    423c:	sub    rsp,0xb8
    4243:	mov    rax,QWORD PTR [rsp+0xf0]
    424b:	mov    QWORD PTR [rsp+0x10],rdx
    4250:	mov    DWORD PTR [rsp+0x8],r8d
    4255:	mov    DWORD PTR [rsp+0x78],r9d
    425a:	mov    QWORD PTR [rsp+0x20],rax
    425f:	mov    rax,QWORD PTR [rsp+0xf8]
    4267:	mov    QWORD PTR [rsp+0x68],rax
    426c:	mov    rax,QWORD PTR [rsp+0x100]
    4274:	mov    QWORD PTR [rsp+0x60],rax
    4279:	mov    rax,QWORD PTR fs:0x28
    4282:	mov    QWORD PTR [rsp+0xa8],rax
    428a:	xor    eax,eax
    428c:	call   1d30 <__ctype_get_mb_cur_max@plt>
    4291:	cmp    r15d,0xa
    4295:	mov    QWORD PTR [rsp+0x58],rax
    429a:	ja     544f <__cxa_finalize@plt+0x33bf>
    42a0:	lea    rcx,[rip+0x3b99]        # 7e40 <is_basic_table@@Base+0xe0>
    42a7:	mov    edx,r15d
    42aa:	movsxd rax,DWORD PTR [rcx+rdx*4]
    42ae:	add    rax,rcx
    42b1:	jmp    rax
    42b3:	mov    BYTE PTR [rsp+0xe],0x1
    42b8:	mov    BYTE PTR [rsp+0x7c],0x0
    42bd:	xor    r12d,r12d
    42c0:	mov    QWORD PTR [rsp+0x50],0x0
    42c9:	mov    BYTE PTR [rsp+0xf],0x1
    42ce:	mov    BYTE PTR [rsp+0xd],0x0
    42d3:	lea    rax,[rip+0x3b0b]        # 7de5 <is_basic_table@@Base+0x85>
    42da:	mov    QWORD PTR [rsp+0x18],0x1
    42e3:	xor    r15d,r15d
    42e6:	mov    DWORD PTR [rsp+0x8],0x2
    42ee:	mov    QWORD PTR [rsp+0x48],rax
    42f3:	xor    r11d,r11d
    42f6:	mov    rax,rbp
    42f9:	mov    r8d,r12d
    42fc:	mov    rbp,r11
    42ff:	mov    r11,rax
    4302:	nop    WORD PTR [rax+rax*1+0x0]
    4308:	cmp    r11,rbp
    430b:	setne  r12b
    430f:	cmp    r11,0xffffffffffffffff
    4313:	jne    4322 <__cxa_finalize@plt+0x2292>
    4315:	mov    rax,QWORD PTR [rsp+0x10]
    431a:	cmp    BYTE PTR [rax+rbp*1],0x0
    431e:	setne  r12b
    4322:	test   r12b,r12b
    4325:	je     4980 <__cxa_finalize@plt+0x28f0>
    432b:	cmp    DWORD PTR [rsp+0x8],0x2
    4330:	mov    rdi,QWORD PTR [rsp+0x10]
    4335:	lea    r9,[rdi+rbp*1]
    4339:	setne  al
    433c:	and    al,BYTE PTR [rsp+0xd]
    4340:	mov    r10d,eax
    4343:	je     43f0 <__cxa_finalize@plt+0x2360>
    4349:	mov    rax,QWORD PTR [rsp+0x18]
    434e:	test   rax,rax
    4351:	je     4780 <__cxa_finalize@plt+0x26f0>
    4357:	cmp    r11,0xffffffffffffffff
    435b:	lea    rbx,[rbp+rax*1+0x0]
    4360:	jne    4390 <__cxa_finalize@plt+0x2300>
    4362:	cmp    rax,0x1
    4366:	jbe    4390 <__cxa_finalize@plt+0x2300>
    4368:	mov    BYTE PTR [rsp+0x38],r8b
    436d:	mov    BYTE PTR [rsp+0x30],r10b
    4372:	mov    QWORD PTR [rsp+0x28],r9
    4377:	call   1d40 <strlen@plt>
    437c:	movzx  r8d,BYTE PTR [rsp+0x38]
    4382:	movzx  r10d,BYTE PTR [rsp+0x30]
    4388:	mov    r11,rax
    438b:	mov    r9,QWORD PTR [rsp+0x28]
    4390:	cmp    rbx,r11
    4393:	mov    BYTE PTR [rsp+0x28],r10b
    4398:	ja     4950 <__cxa_finalize@plt+0x28c0>
    439e:	mov    rdx,QWORD PTR [rsp+0x18]
    43a3:	mov    rsi,QWORD PTR [rsp+0x48]
    43a8:	mov    rdi,r9
    43ab:	mov    QWORD PTR [rsp+0x40],r11
    43b0:	mov    BYTE PTR [rsp+0x38],r8b
    43b5:	mov    QWORD PTR [rsp+0x30],r9
    43ba:	call   1e40 <memcmp@plt>
    43bf:	test   eax,eax
    43c1:	mov    r9,QWORD PTR [rsp+0x30]
    43c6:	movzx  r8d,BYTE PTR [rsp+0x38]
    43cc:	mov    r11,QWORD PTR [rsp+0x40]
    43d1:	jne    4950 <__cxa_finalize@plt+0x28c0>
    43d7:	cmp    BYTE PTR [rsp+0xf],0x0
    43dc:	movzx  r10d,BYTE PTR [rsp+0x28]
    43e2:	jne    5365 <__cxa_finalize@plt+0x32d5>
    43e8:	nop    DWORD PTR [rax+rax*1+0x0]
    43f0:	movzx  ebx,BYTE PTR [r9]
    43f4:	cmp    bl,0x7e
    43f7:	ja     4718 <__cxa_finalize@plt+0x2688>
    43fd:	lea    rcx,[rip+0x3a68]        # 7e6c <is_basic_table@@Base+0x10c>
    4404:	movzx  edx,bl
    4407:	movsxd rax,DWORD PTR [rcx+rdx*4]
    440b:	add    rax,rcx
    440e:	jmp    rax
    4410:	xor    r10d,r10d
    4413:	cmp    r11,0x1
    4417:	setne  al
    441a:	cmp    r11,0xffffffffffffffff
    441e:	jne    442c <__cxa_finalize@plt+0x239c>
    4420:	mov    rax,QWORD PTR [rsp+0x10]
    4425:	cmp    BYTE PTR [rax+0x1],0x0
    4429:	setne  al
    442c:	cmp    DWORD PTR [rsp+0x8],0x2
    4431:	sete   dl
    4434:	test   al,al
    4436:	je     4688 <__cxa_finalize@plt+0x25f8>
    443c:	xor    r12d,r12d
    443f:	xor    eax,eax
    4441:	nop    DWORD PTR [rax+0x0]
    4448:	cmp    BYTE PTR [rsp+0xd],0x1
    444d:	jne    4562 <__cxa_finalize@plt+0x24d2>
    4453:	test   dl,dl
    4455:	jne    4562 <__cxa_finalize@plt+0x24d2>
    445b:	mov    rsi,QWORD PTR [rsp+0x20]
    4460:	test   rsi,rsi
    4463:	je     4479 <__cxa_finalize@plt+0x23e9>
    4465:	mov    edx,ebx
    4467:	shr    dl,0x5
    446a:	movzx  edx,dl
    446d:	mov    edx,DWORD PTR [rsi+rdx*4]
    4470:	bt     edx,ebx
    4473:	jb     45c3 <__cxa_finalize@plt+0x2533>
    4479:	test   r10b,r10b
    447c:	jne    45c3 <__cxa_finalize@plt+0x2533>
    4482:	xor    eax,0x1
    4485:	add    rbp,0x1
    4489:	and    eax,r8d
    448c:	test   al,al
    448e:	je     44b0 <__cxa_finalize@plt+0x2420>
    4490:	cmp    r13,r15
    4493:	jbe    449a <__cxa_finalize@plt+0x240a>
    4495:	mov    BYTE PTR [r14+r15*1],0x27
    449a:	lea    rax,[r15+0x1]
    449e:	cmp    r13,rax
    44a1:	jbe    44a9 <__cxa_finalize@plt+0x2419>
    44a3:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    44a9:	add    r15,0x2
    44ad:	xor    r8d,r8d
    44b0:	cmp    r15,r13
    44b3:	jae    44b9 <__cxa_finalize@plt+0x2429>
    44b5:	mov    BYTE PTR [r14+r15*1],bl
    44b9:	movzx  edi,BYTE PTR [rsp+0xe]
    44be:	add    r15,0x1
    44c2:	mov    eax,0x0
    44c7:	test   r12b,r12b
    44ca:	cmove  edi,eax
    44cd:	mov    BYTE PTR [rsp+0xe],dil
    44d2:	jmp    4308 <__cxa_finalize@plt+0x2278>
    44d7:	nop    WORD PTR [rax+rax*1+0x0]
    44e0:	xor    r10d,r10d
    44e3:	mov    eax,DWORD PTR [rsp+0x8]
    44e7:	cmp    eax,0x2
    44ea:	je     4aa8 <__cxa_finalize@plt+0x2a18>
    44f0:	cmp    eax,0x5
    44f3:	je     4a68 <__cxa_finalize@plt+0x29d8>
    44f9:	cmp    eax,0x2
    44fc:	mov    ebx,0x3f
    4501:	sete   dl
    4504:	xor    r12d,r12d
    4507:	xor    eax,eax
    4509:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    450e:	xchg   ax,ax
    4510:	xor    r10d,r10d
    4513:	cmp    DWORD PTR [rsp+0x8],0x2
    4518:	je     4a20 <__cxa_finalize@plt+0x2990>
    451e:	mov    BYTE PTR [rsp+0x7c],r12b
    4523:	xor    edx,edx
    4525:	xor    eax,eax
    4527:	mov    ebx,0x27
    452c:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    4531:	nop    DWORD PTR [rax+0x0]
    4538:	mov    edx,0x9
    453d:	mov    ebx,0x74
    4542:	cmp    DWORD PTR [rsp+0x8],0x2
    4547:	sete   al
    454a:	and    al,BYTE PTR [rsp+0xf]
    454e:	jne    469e <__cxa_finalize@plt+0x260e>
    4554:	cmp    BYTE PTR [rsp+0xd],0x0
    4559:	jne    45c0 <__cxa_finalize@plt+0x2530>
    455b:	mov    ebx,edx
    455d:	xor    r12d,r12d
    4560:	xor    eax,eax
    4562:	cmp    BYTE PTR [rsp+0xf],0x0
    4567:	jne    445b <__cxa_finalize@plt+0x23cb>
    456d:	jmp    4479 <__cxa_finalize@plt+0x23e9>
    4572:	nop    WORD PTR [rax+rax*1+0x0]
    4578:	mov    edx,0x8
    457d:	mov    ebx,0x62
    4582:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    4584:	nop    DWORD PTR [rax+0x0]
    4588:	cmp    DWORD PTR [rsp+0x8],0x2
    458d:	je     4960 <__cxa_finalize@plt+0x28d0>
    4593:	cmp    BYTE PTR [rsp+0xd],0x0
    4598:	je     47b0 <__cxa_finalize@plt+0x2720>
    459e:	cmp    BYTE PTR [rsp+0xf],0x0
    45a3:	je     47b0 <__cxa_finalize@plt+0x2720>
    45a9:	cmp    QWORD PTR [rsp+0x18],0x0
    45af:	jne    496b <__cxa_finalize@plt+0x28db>
    45b5:	mov    ebx,0x5c
    45ba:	nop    WORD PTR [rax+rax*1+0x0]
    45c0:	xor    r12d,r12d
    45c3:	cmp    DWORD PTR [rsp+0x8],0x2
    45c8:	sete   dl
    45cb:	cmp    BYTE PTR [rsp+0xf],0x0
    45d0:	mov    eax,edx
    45d2:	jne    4e28 <__cxa_finalize@plt+0x2d98>
    45d8:	mov    eax,r8d
    45db:	xor    eax,0x1
    45de:	and    al,dl
    45e0:	je     4611 <__cxa_finalize@plt+0x2581>
    45e2:	cmp    r13,r15
    45e5:	jbe    45ec <__cxa_finalize@plt+0x255c>
    45e7:	mov    BYTE PTR [r14+r15*1],0x27
    45ec:	lea    rdx,[r15+0x1]
    45f0:	cmp    r13,rdx
    45f3:	jbe    45fb <__cxa_finalize@plt+0x256b>
    45f5:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    45fb:	lea    rdx,[r15+0x2]
    45ff:	cmp    r13,rdx
    4602:	jbe    460a <__cxa_finalize@plt+0x257a>
    4604:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    460a:	add    r15,0x3
    460e:	mov    r8d,eax
    4611:	cmp    r13,r15
    4614:	jbe    461b <__cxa_finalize@plt+0x258b>
    4616:	mov    BYTE PTR [r14+r15*1],0x5c
    461b:	add    r15,0x1
    461f:	add    rbp,0x1
    4623:	jmp    44b0 <__cxa_finalize@plt+0x2420>
    4628:	nop    DWORD PTR [rax+rax*1+0x0]
    4630:	cmp    BYTE PTR [rsp+0xd],0x0
    4635:	jne    4803 <__cxa_finalize@plt+0x2773>
    463b:	xor    edx,edx
    463d:	test   BYTE PTR [rsp+0x78],0x1
    4642:	je     455b <__cxa_finalize@plt+0x24cb>
    4648:	add    rbp,0x1
    464c:	jmp    4308 <__cxa_finalize@plt+0x2278>
    4651:	nop    DWORD PTR [rax+0x0]
    4658:	cmp    DWORD PTR [rsp+0x8],0x2
    465d:	sete   dl
    4660:	xor    eax,eax
    4662:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    4667:	nop    WORD PTR [rax+rax*1+0x0]
    4670:	mov    edx,0x7
    4675:	mov    ebx,0x61
    467a:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    467f:	nop
    4680:	cmp    DWORD PTR [rsp+0x8],0x2
    4685:	sete   dl
    4688:	test   rbp,rbp
    468b:	jne    443c <__cxa_finalize@plt+0x23ac>
    4691:	movzx  eax,BYTE PTR [rsp+0xf]
    4696:	and    al,dl
    4698:	je     4448 <__cxa_finalize@plt+0x23b8>
    469e:	mov    rbp,r11
    46a1:	mov    DWORD PTR [rsp+0x8],0x2
    46a9:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    46ae:	xchg   ax,ax
    46b0:	cmp    DWORD PTR [rsp+0x8],0x2
    46b5:	sete   dl
    46b8:	xor    r12d,r12d
    46bb:	jmp    4691 <__cxa_finalize@plt+0x2601>
    46bd:	nop    DWORD PTR [rax]
    46c0:	cmp    DWORD PTR [rsp+0x8],0x2
    46c5:	mov    ebx,0x20
    46ca:	sete   dl
    46cd:	jmp    4691 <__cxa_finalize@plt+0x2601>
    46cf:	nop
    46d0:	mov    edx,0xd
    46d5:	mov    ebx,0x72
    46da:	jmp    4542 <__cxa_finalize@plt+0x24b2>
    46df:	nop
    46e0:	mov    edx,0xc
    46e5:	mov    ebx,0x66
    46ea:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    46ef:	nop
    46f0:	mov    edx,0xb
    46f5:	mov    ebx,0x76
    46fa:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    46ff:	nop
    4700:	mov    edx,0xa
    4705:	mov    ebx,0x6e
    470a:	jmp    4542 <__cxa_finalize@plt+0x24b2>
    470f:	nop
    4710:	xor    r10d,r10d
    4713:	nop    DWORD PTR [rax+rax*1+0x0]
    4718:	cmp    QWORD PTR [rsp+0x58],0x1
    471e:	jne    4ac8 <__cxa_finalize@plt+0x2a38>
    4724:	mov    QWORD PTR [rsp+0x38],r11
    4729:	mov    BYTE PTR [rsp+0x30],r8b
    472e:	mov    BYTE PTR [rsp+0x28],r10b
    4733:	call   2070 <__ctype_b_loc@plt>
    4738:	mov    rcx,QWORD PTR [rax]
    473b:	movzx  edx,bl
    473e:	movzx  r10d,BYTE PTR [rsp+0x28]
    4744:	movzx  r8d,BYTE PTR [rsp+0x30]
    474a:	mov    r11,QWORD PTR [rsp+0x38]
    474f:	mov    edi,0x1
    4754:	movzx  eax,WORD PTR [rcx+rdx*2]
    4758:	and    ax,0x4000
    475c:	setne  r12b
    4760:	sete   al
    4763:	and    al,BYTE PTR [rsp+0xd]
    4767:	test   al,al
    4769:	jne    5101 <__cxa_finalize@plt+0x3071>
    476f:	cmp    DWORD PTR [rsp+0x8],0x2
    4774:	sete   dl
    4777:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    477c:	nop    DWORD PTR [rax+0x0]
    4780:	movzx  ebx,BYTE PTR [r9]
    4784:	cmp    bl,0x7e
    4787:	ja     4710 <__cxa_finalize@plt+0x2680>
    4789:	lea    rcx,[rip+0x38d8]        # 8068 <is_basic_table@@Base+0x308>
    4790:	movzx  edx,bl
    4793:	movsxd rax,DWORD PTR [rcx+rdx*4]
    4797:	add    rax,rcx
    479a:	jmp    rax
    479c:	nop    DWORD PTR [rax+0x0]
    47a0:	xor    r10d,r10d
    47a3:	cmp    BYTE PTR [rsp+0xd],0x0
    47a8:	jne    459e <__cxa_finalize@plt+0x250e>
    47ae:	xchg   ax,ax
    47b0:	mov    edx,0x5c
    47b5:	mov    ebx,0x5c
    47ba:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    47bf:	nop
    47c0:	mov    edx,0xc
    47c5:	xor    r10d,r10d
    47c8:	mov    ebx,0x66
    47cd:	jmp    4554 <__cxa_finalize@plt+0x24c4>
    47d2:	nop    WORD PTR [rax+rax*1+0x0]
    47d8:	mov    edx,0xa
    47dd:	xor    r10d,r10d
    47e0:	mov    ebx,0x6e
    47e5:	jmp    4542 <__cxa_finalize@plt+0x24b2>
    47ea:	nop    WORD PTR [rax+rax*1+0x0]
    47f0:	mov    ebx,0x61
    47f5:	jmp    45c0 <__cxa_finalize@plt+0x2530>
    47fa:	nop    WORD PTR [rax+rax*1+0x0]
    4800:	xor    r10d,r10d
    4803:	cmp    DWORD PTR [rsp+0x8],0x2
    4808:	sete   dl
    480b:	cmp    BYTE PTR [rsp+0xf],0x0
    4810:	jne    53aa <__cxa_finalize@plt+0x331a>
    4816:	mov    eax,r8d
    4819:	mov    rcx,r15
    481c:	xor    eax,0x1
    481f:	and    al,dl
    4821:	je     4850 <__cxa_finalize@plt+0x27c0>
    4823:	cmp    r13,r15
    4826:	jbe    482d <__cxa_finalize@plt+0x279d>
    4828:	mov    BYTE PTR [r14+r15*1],0x27
    482d:	lea    rcx,[r15+0x1]
    4831:	cmp    r13,rcx
    4834:	jbe    483c <__cxa_finalize@plt+0x27ac>
    4836:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    483c:	lea    rcx,[r15+0x2]
    4840:	cmp    r13,rcx
    4843:	ja     4e79 <__cxa_finalize@plt+0x2de9>
    4849:	lea    rcx,[r15+0x3]
    484d:	mov    r8d,eax
    4850:	cmp    r13,rcx
    4853:	jbe    485a <__cxa_finalize@plt+0x27ca>
    4855:	mov    BYTE PTR [r14+rcx*1],0x5c
    485a:	cmp    DWORD PTR [rsp+0x8],0x2
    485f:	lea    r15,[rcx+0x1]
    4863:	je     4e69 <__cxa_finalize@plt+0x2dd9>
    4869:	lea    rax,[rbp+0x1]
    486d:	cmp    rax,r11
    4870:	jae    488b <__cxa_finalize@plt+0x27fb>
    4872:	mov    rax,QWORD PTR [rsp+0x10]
    4877:	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
    487c:	mov    BYTE PTR [rsp+0x28],al
    4880:	sub    eax,0x30
    4883:	cmp    al,0x9
    4885:	jbe    50b9 <__cxa_finalize@plt+0x3029>
    488b:	mov    eax,r12d
    488e:	mov    ebx,0x30
    4893:	xor    r12d,r12d
    4896:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    489b:	nop    DWORD PTR [rax+rax*1+0x0]
    48a0:	cmp    DWORD PTR [rsp+0x8],0x2
    48a5:	mov    r12d,r10d
    48a8:	sete   dl
    48ab:	xor    r10d,r10d
    48ae:	xor    eax,eax
    48b0:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    48b5:	nop    DWORD PTR [rax]
    48b8:	cmp    DWORD PTR [rsp+0x8],0x2
    48bd:	sete   dl
    48c0:	xor    r10d,r10d
    48c3:	jmp    4688 <__cxa_finalize@plt+0x25f8>
    48c8:	nop    DWORD PTR [rax+rax*1+0x0]
    48d0:	cmp    DWORD PTR [rsp+0x8],0x2
    48d5:	sete   dl
    48d8:	xor    r10d,r10d
    48db:	xor    r12d,r12d
    48de:	jmp    4691 <__cxa_finalize@plt+0x2601>
    48e3:	nop    DWORD PTR [rax+rax*1+0x0]
    48e8:	cmp    DWORD PTR [rsp+0x8],0x2
    48ed:	mov    r12d,r10d
    48f0:	mov    ebx,0x20
    48f5:	sete   dl
    48f8:	xor    r10d,r10d
    48fb:	jmp    4691 <__cxa_finalize@plt+0x2601>
    4900:	mov    edx,0xd
    4905:	xor    r10d,r10d
    4908:	mov    ebx,0x72
    490d:	jmp    4542 <__cxa_finalize@plt+0x24b2>
    4912:	nop    WORD PTR [rax+rax*1+0x0]
    4918:	mov    ebx,0x76
    491d:	jmp    45c0 <__cxa_finalize@plt+0x2530>
    4922:	nop    WORD PTR [rax+rax*1+0x0]
    4928:	mov    edx,0x9
    492d:	xor    r10d,r10d
    4930:	mov    ebx,0x74
    4935:	jmp    4542 <__cxa_finalize@plt+0x24b2>
    493a:	nop    WORD PTR [rax+rax*1+0x0]
    4940:	mov    ebx,0x62
    4945:	jmp    45c0 <__cxa_finalize@plt+0x2530>
    494a:	nop    WORD PTR [rax+rax*1+0x0]
    4950:	xor    r10d,r10d
    4953:	jmp    43f0 <__cxa_finalize@plt+0x2360>
    4958:	nop    DWORD PTR [rax+rax*1+0x0]
    4960:	cmp    BYTE PTR [rsp+0xf],0x0
    4965:	jne    52d0 <__cxa_finalize@plt+0x3240>
    496b:	add    rbp,0x1
    496f:	mov    eax,r8d
    4972:	xor    r12d,r12d
    4975:	mov    ebx,0x5c
    497a:	jmp    448c <__cxa_finalize@plt+0x23fc>
    497f:	nop
    4980:	cmp    DWORD PTR [rsp+0x8],0x2
    4985:	movzx  ebx,BYTE PTR [rsp+0xf]
    498a:	mov    r12d,r8d
    498d:	mov    rbp,r11
    4990:	sete   dl
    4993:	mov    eax,ebx
    4995:	test   r15,r15
    4998:	sete   cl
    499b:	and    eax,edx
    499d:	and    al,cl
    499f:	jne    5406 <__cxa_finalize@plt+0x3376>
    49a5:	mov    eax,ebx
    49a7:	xor    eax,0x1
    49aa:	and    dl,al
    49ac:	je     531c <__cxa_finalize@plt+0x328c>
    49b2:	cmp    BYTE PTR [rsp+0x7c],0x0
    49b7:	je     531a <__cxa_finalize@plt+0x328a>
    49bd:	cmp    BYTE PTR [rsp+0xe],0x0
    49c2:	jne    53bd <__cxa_finalize@plt+0x332d>
    49c8:	test   r13,r13
    49cb:	sete   al
    49ce:	cmp    QWORD PTR [rsp+0x50],0x0
    49d4:	setne  dl
    49d7:	and    al,dl
    49d9:	je     53fc <__cxa_finalize@plt+0x336c>
    49df:	mov    r13,QWORD PTR [rsp+0x50]
    49e4:	lea    rbx,[rip+0x33fa]        # 7de5 <is_basic_table@@Base+0x85>
    49eb:	mov    BYTE PTR [r14],0x27
    49ef:	mov    DWORD PTR [rsp+0x8],0x2
    49f7:	mov    r15d,0x1
    49fd:	mov    QWORD PTR [rsp+0x18],0x1
    4a06:	mov    BYTE PTR [rsp+0xf],0x0
    4a0b:	mov    QWORD PTR [rsp+0x48],rbx
    4a10:	mov    BYTE PTR [rsp+0x7c],al
    4a14:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    4a19:	nop    DWORD PTR [rax+0x0]
    4a20:	cmp    BYTE PTR [rsp+0xf],0x0
    4a25:	jne    52d0 <__cxa_finalize@plt+0x3240>
    4a2b:	test   r13,r13
    4a2e:	je     4e30 <__cxa_finalize@plt+0x2da0>
    4a34:	xor    edx,edx
    4a36:	cmp    QWORD PTR [rsp+0x50],0x0
    4a3c:	jne    4e30 <__cxa_finalize@plt+0x2da0>
    4a42:	mov    QWORD PTR [rsp+0x50],r13
    4a47:	add    r15,0x3
    4a4b:	xor    eax,eax
    4a4d:	mov    BYTE PTR [rsp+0x7c],r12b
    4a52:	xor    r8d,r8d
    4a55:	mov    r13,rdx
    4a58:	mov    ebx,0x27
    4a5d:	jmp    4479 <__cxa_finalize@plt+0x23e9>
    4a62:	nop    WORD PTR [rax+rax*1+0x0]
    4a68:	test   BYTE PTR [rsp+0x78],0x4
    4a6d:	je     4a90 <__cxa_finalize@plt+0x2a00>
    4a6f:	lea    rcx,[rbp+0x2]
    4a73:	cmp    rcx,r11
    4a76:	jae    4a90 <__cxa_finalize@plt+0x2a00>
    4a78:	mov    rax,QWORD PTR [rsp+0x10]
    4a7d:	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
    4a82:	je     5212 <__cxa_finalize@plt+0x3182>
    4a88:	nop    DWORD PTR [rax+rax*1+0x0]
    4a90:	xor    edx,edx
    4a92:	xor    r12d,r12d
    4a95:	xor    eax,eax
    4a97:	mov    ebx,0x3f
    4a9c:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    4aa1:	nop    DWORD PTR [rax+0x0]
    4aa8:	cmp    BYTE PTR [rsp+0xf],0x0
    4aad:	jne    52d0 <__cxa_finalize@plt+0x3240>
    4ab3:	xor    r12d,r12d
    4ab6:	xor    eax,eax
    4ab8:	mov    ebx,0x3f
    4abd:	jmp    4479 <__cxa_finalize@plt+0x23e9>
    4ac2:	nop    WORD PTR [rax+rax*1+0x0]
    4ac8:	lea    rax,[rsp+0xa0]
    4ad0:	cmp    r11,0xffffffffffffffff
    4ad4:	mov    QWORD PTR [rsp+0xa0],0x0
    4ae0:	mov    QWORD PTR [rsp+0x28],rax
    4ae5:	jne    4b14 <__cxa_finalize@plt+0x2a84>
    4ae7:	mov    rdi,QWORD PTR [rsp+0x10]
    4aec:	mov    BYTE PTR [rsp+0x40],r8b
    4af1:	mov    BYTE PTR [rsp+0x38],r10b
    4af6:	mov    QWORD PTR [rsp+0x30],r9
    4afb:	call   1d40 <strlen@plt>
    4b00:	movzx  r8d,BYTE PTR [rsp+0x40]
    4b06:	movzx  r10d,BYTE PTR [rsp+0x38]
    4b0c:	mov    r11,rax
    4b0f:	mov    r9,QWORD PTR [rsp+0x30]
    4b14:	lea    rax,[rsp+0x9c]
    4b1c:	xor    ecx,ecx
    4b1e:	mov    BYTE PTR [rsp+0x7e],bl
    4b22:	mov    BYTE PTR [rsp+0x7d],r8b
    4b27:	mov    rbx,rcx
    4b2a:	mov    QWORD PTR [rsp+0x88],r9
    4b32:	mov    QWORD PTR [rsp+0x38],rax
    4b37:	mov    BYTE PTR [rsp+0x7f],r10b
    4b3c:	mov    QWORD PTR [rsp+0x80],r15
    4b44:	mov    QWORD PTR [rsp+0x40],r14
    4b49:	mov    QWORD PTR [rsp+0x70],r13
    4b4e:	mov    QWORD PTR [rsp+0x30],r11
    4b53:	mov    rax,QWORD PTR [rsp+0x10]
    4b58:	lea    r14,[rbp+rbx*1+0x0]
    4b5d:	mov    rdx,QWORD PTR [rsp+0x30]
    4b62:	mov    rcx,QWORD PTR [rsp+0x28]
    4b67:	mov    rdi,QWORD PTR [rsp+0x38]
    4b6c:	lea    r13,[rax+r14*1]
    4b70:	sub    rdx,r14
    4b73:	mov    rsi,r13
    4b76:	call   6b80 <__cxa_finalize@plt+0x4af0>
    4b7b:	test   rax,rax
    4b7e:	mov    r15,rax
    4b81:	je     4bd1 <__cxa_finalize@plt+0x2b41>
    4b83:	cmp    rax,0xffffffffffffffff
    4b87:	je     51a5 <__cxa_finalize@plt+0x3115>
    4b8d:	cmp    rax,0xfffffffffffffffe
    4b91:	je     5131 <__cxa_finalize@plt+0x30a1>
    4b97:	cmp    DWORD PTR [rsp+0x8],0x2
    4b9c:	sete   al
    4b9f:	and    al,BYTE PTR [rsp+0xf]
    4ba3:	jne    4d40 <__cxa_finalize@plt+0x2cb0>
    4ba9:	mov    edi,DWORD PTR [rsp+0x9c]
    4bb0:	call   2050 <iswprint@plt>
    4bb5:	mov    rdi,QWORD PTR [rsp+0x28]
    4bba:	test   eax,eax
    4bbc:	mov    eax,0x0
    4bc1:	cmove  r12d,eax
    4bc5:	add    rbx,r15
    4bc8:	call   2040 <mbsinit@plt>
    4bcd:	test   eax,eax
    4bcf:	je     4b53 <__cxa_finalize@plt+0x2ac3>
    4bd1:	mov    edx,r12d
    4bd4:	mov    rdi,rbx
    4bd7:	movzx  r8d,BYTE PTR [rsp+0x7d]
    4bdd:	xor    edx,0x1
    4be0:	movzx  ebx,BYTE PTR [rsp+0x7e]
    4be5:	movzx  r10d,BYTE PTR [rsp+0x7f]
    4beb:	and    dl,BYTE PTR [rsp+0xd]
    4bef:	mov    r15,QWORD PTR [rsp+0x80]
    4bf7:	mov    r14,QWORD PTR [rsp+0x40]
    4bfc:	mov    r13,QWORD PTR [rsp+0x70]
    4c01:	mov    r11,QWORD PTR [rsp+0x30]
    4c06:	cmp    rdi,0x1
    4c0a:	jbe    520b <__cxa_finalize@plt+0x317b>
    4c10:	mov    rcx,rdi
    4c13:	xor    esi,esi
    4c15:	movzx  r9d,BYTE PTR [rsp+0xf]
    4c1b:	add    rcx,rbp
    4c1e:	mov    rdi,QWORD PTR [rsp+0x10]
    4c23:	jmp    4cde <__cxa_finalize@plt+0x2c4e>
    4c28:	nop    DWORD PTR [rax+rax*1+0x0]
    4c30:	cmp    DWORD PTR [rsp+0x8],0x2
    4c35:	sete   al
    4c38:	test   r9b,r9b
    4c3b:	jne    50f0 <__cxa_finalize@plt+0x3060>
    4c41:	mov    esi,r8d
    4c44:	xor    esi,0x1
    4c47:	and    al,sil
    4c4a:	je     4c7b <__cxa_finalize@plt+0x2beb>
    4c4c:	cmp    r13,r15
    4c4f:	jbe    4c56 <__cxa_finalize@plt+0x2bc6>
    4c51:	mov    BYTE PTR [r14+r15*1],0x27
    4c56:	lea    rsi,[r15+0x1]
    4c5a:	cmp    r13,rsi
    4c5d:	jbe    4c65 <__cxa_finalize@plt+0x2bd5>
    4c5f:	mov    BYTE PTR [r14+r15*1+0x1],0x24
    4c65:	lea    rsi,[r15+0x2]
    4c69:	cmp    r13,rsi
    4c6c:	jbe    4c74 <__cxa_finalize@plt+0x2be4>
    4c6e:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    4c74:	add    r15,0x3
    4c78:	mov    r8d,eax
    4c7b:	cmp    r13,r15
    4c7e:	jbe    4c85 <__cxa_finalize@plt+0x2bf5>
    4c80:	mov    BYTE PTR [r14+r15*1],0x5c
    4c85:	lea    rax,[r15+0x1]
    4c89:	cmp    r13,rax
    4c8c:	jbe    4c9b <__cxa_finalize@plt+0x2c0b>
    4c8e:	mov    eax,ebx
    4c90:	shr    al,0x6
    4c93:	add    eax,0x30
    4c96:	mov    BYTE PTR [r14+r15*1+0x1],al
    4c9b:	lea    rax,[r15+0x2]
    4c9f:	cmp    r13,rax
    4ca2:	jbe    4cb4 <__cxa_finalize@plt+0x2c24>
    4ca4:	mov    eax,ebx
    4ca6:	shr    al,0x3
    4ca9:	and    eax,0x7
    4cac:	add    eax,0x30
    4caf:	mov    BYTE PTR [r14+r15*1+0x2],al
    4cb4:	and    ebx,0x7
    4cb7:	add    rbp,0x1
    4cbb:	add    r15,0x3
    4cbf:	add    ebx,0x30
    4cc2:	cmp    rbp,rcx
    4cc5:	jae    44b0 <__cxa_finalize@plt+0x2420>
    4ccb:	mov    esi,edx
    4ccd:	cmp    r13,r15
    4cd0:	jbe    4cd6 <__cxa_finalize@plt+0x2c46>
    4cd2:	mov    BYTE PTR [r14+r15*1],bl
    4cd6:	movzx  ebx,BYTE PTR [rdi+rbp*1]
    4cda:	add    r15,0x1
    4cde:	test   dl,dl
    4ce0:	jne    4c30 <__cxa_finalize@plt+0x2ba0>
    4ce6:	mov    eax,esi
    4ce8:	xor    eax,0x1
    4ceb:	and    eax,r8d
    4cee:	test   r10b,r10b
    4cf1:	je     4d01 <__cxa_finalize@plt+0x2c71>
    4cf3:	cmp    r13,r15
    4cf6:	jbe    4cfd <__cxa_finalize@plt+0x2c6d>
    4cf8:	mov    BYTE PTR [r14+r15*1],0x5c
    4cfd:	add    r15,0x1
    4d01:	add    rbp,0x1
    4d05:	cmp    rbp,rcx
    4d08:	jae    448c <__cxa_finalize@plt+0x23fc>
    4d0e:	test   al,al
    4d10:	je     510e <__cxa_finalize@plt+0x307e>
    4d16:	cmp    r13,r15
    4d19:	jbe    4d20 <__cxa_finalize@plt+0x2c90>
    4d1b:	mov    BYTE PTR [r14+r15*1],0x27
    4d20:	lea    rax,[r15+0x1]
    4d24:	cmp    r13,rax
    4d27:	jbe    4d2f <__cxa_finalize@plt+0x2c9f>
    4d29:	mov    BYTE PTR [r14+r15*1+0x1],0x27
    4d2f:	add    r15,0x2
    4d33:	xor    r10d,r10d
    4d36:	xor    r8d,r8d
    4d39:	jmp    4ccd <__cxa_finalize@plt+0x2c3d>
    4d3b:	nop    DWORD PTR [rax+rax*1+0x0]
    4d40:	cmp    r15,0x1
    4d44:	je     4ba9 <__cxa_finalize@plt+0x2b19>
    4d4a:	mov    rdi,QWORD PTR [rsp+0x10]
    4d4f:	lea    rcx,[rdi+r15*1]
    4d53:	lea    rdx,[rdi+r14*1+0x1]
    4d58:	lea    r8,[rcx+r14*1]
    4d5c:	jmp    4d6d <__cxa_finalize@plt+0x2cdd>
    4d5e:	xchg   ax,ax
    4d60:	add    rdx,0x1
    4d64:	cmp    r8,rdx
    4d67:	je     4ba9 <__cxa_finalize@plt+0x2b19>
    4d6d:	movzx  ecx,BYTE PTR [rdx]
    4d70:	sub    ecx,0x5b
    4d73:	cmp    cl,0x21
    4d76:	ja     4d60 <__cxa_finalize@plt+0x2cd0>
    4d78:	mov    esi,0x1
    4d7d:	shl    rsi,cl
    4d80:	mov    rcx,rsi
    4d83:	movabs rsi,0x20000002b
    4d8d:	test   rcx,rsi
    4d90:	je     4d60 <__cxa_finalize@plt+0x2cd0>
    4d92:	mov    r14,QWORD PTR [rsp+0x40]
    4d97:	mov    r13,QWORD PTR [rsp+0x70]
    4d9c:	mov    rbp,QWORD PTR [rsp+0x30]
    4da1:	mov    DWORD PTR [rsp+0x8],0x2
    4da9:	cmp    BYTE PTR [rsp+0xd],0x0
    4dae:	je     4dc0 <__cxa_finalize@plt+0x2d30>
    4db0:	test   al,al
    4db2:	mov    eax,0x4
    4db7:	cmove  eax,DWORD PTR [rsp+0x8]
    4dbc:	mov    DWORD PTR [rsp+0x8],eax
    4dc0:	sub    rsp,0x8
    4dc4:	mov    rcx,rbp
    4dc7:	mov    rsi,r13
    4dca:	push   QWORD PTR [rsp+0x68]
    4dce:	push   QWORD PTR [rsp+0x78]
    4dd2:	mov    rdi,r14
    4dd5:	push   0x0
    4dd7:	mov    r9d,DWORD PTR [rsp+0x98]
    4ddf:	mov    r8d,DWORD PTR [rsp+0x28]
    4de4:	mov    rdx,QWORD PTR [rsp+0x30]
    4de9:	and    r9d,0xfffffffd
    4ded:	call   4220 <__cxa_finalize@plt+0x2190>
    4df2:	add    rsp,0x20
    4df6:	mov    r15,rax
    4df9:	mov    rbx,QWORD PTR [rsp+0xa8]
    4e01:	xor    rbx,QWORD PTR fs:0x28
    4e0a:	mov    rax,r15
    4e0d:	jne    5413 <__cxa_finalize@plt+0x3383>
    4e13:	add    rsp,0xb8
    4e1a:	pop    rbx
    4e1b:	pop    rbp
    4e1c:	pop    r12
    4e1e:	pop    r13
    4e20:	pop    r14
    4e22:	pop    r15
    4e24:	ret    
    4e25:	nop    DWORD PTR [rax]
    4e28:	mov    rbp,r11
    4e2b:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    4e30:	cmp    r13,r15
    4e33:	jbe    4e3a <__cxa_finalize@plt+0x2daa>
    4e35:	mov    BYTE PTR [r14+r15*1],0x27
    4e3a:	lea    rax,[r15+0x1]
    4e3e:	cmp    r13,rax
    4e41:	jbe    4e49 <__cxa_finalize@plt+0x2db9>
    4e43:	mov    BYTE PTR [r14+r15*1+0x1],0x5c
    4e49:	lea    rax,[r15+0x2]
    4e4d:	cmp    r13,rax
    4e50:	jbe    5442 <__cxa_finalize@plt+0x33b2>
    4e56:	mov    rdx,r13
    4e59:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    4e5f:	mov    r13,QWORD PTR [rsp+0x50]
    4e64:	jmp    4a42 <__cxa_finalize@plt+0x29b2>
    4e69:	mov    eax,r12d
    4e6c:	mov    ebx,0x30
    4e71:	xor    r12d,r12d
    4e74:	jmp    4479 <__cxa_finalize@plt+0x23e9>
    4e79:	mov    BYTE PTR [r14+r15*1+0x2],0x27
    4e7f:	jmp    4849 <__cxa_finalize@plt+0x27b9>
    4e84:	test   ebx,ebx
    4e86:	jne    42b3 <__cxa_finalize@plt+0x2223>
    4e8c:	mov    BYTE PTR [rsp+0xd],0x1
    4e91:	test   r13,r13
    4e94:	jne    542a <__cxa_finalize@plt+0x339a>
    4e9a:	lea    rax,[rip+0x2f44]        # 7de5 <is_basic_table@@Base+0x85>
    4ea1:	mov    QWORD PTR [rsp+0x50],0x0
    4eaa:	mov    BYTE PTR [rsp+0xe],0x1
    4eaf:	mov    BYTE PTR [rsp+0x7c],0x0
    4eb4:	xor    r12d,r12d
    4eb7:	mov    BYTE PTR [rsp+0xf],0x0
    4ebc:	mov    QWORD PTR [rsp+0x18],0x1
    4ec5:	mov    QWORD PTR [rsp+0x48],rax
    4eca:	mov    r15d,0x1
    4ed0:	mov    DWORD PTR [rsp+0x8],0x2
    4ed8:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    4edd:	nop    DWORD PTR [rax]
    4ee0:	test   ebx,ebx
    4ee2:	jne    52dd <__cxa_finalize@plt+0x324d>
    4ee8:	test   r13,r13
    4eeb:	je     5116 <__cxa_finalize@plt+0x3086>
    4ef1:	mov    BYTE PTR [r14],0x22
    4ef5:	mov    BYTE PTR [rsp+0xe],0x1
    4efa:	xor    r12d,r12d
    4efd:	mov    BYTE PTR [rsp+0x7c],0x0
    4f02:	mov    QWORD PTR [rsp+0x50],0x0
    4f0b:	lea    rax,[rip+0x2ed1]        # 7de3 <is_basic_table@@Base+0x83>
    4f12:	mov    BYTE PTR [rsp+0xf],0x0
    4f17:	mov    BYTE PTR [rsp+0xd],0x1
    4f1c:	mov    QWORD PTR [rsp+0x18],0x1
    4f25:	mov    r15d,0x1
    4f2b:	mov    QWORD PTR [rsp+0x48],rax
    4f30:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    4f35:	lea    rax,[rip+0x2ea7]        # 7de3 <is_basic_table@@Base+0x83>
    4f3c:	mov    BYTE PTR [rsp+0xe],0x1
    4f41:	mov    BYTE PTR [rsp+0x7c],0x0
    4f46:	xor    r12d,r12d
    4f49:	mov    QWORD PTR [rsp+0x50],0x0
    4f52:	mov    BYTE PTR [rsp+0xf],0x1
    4f57:	mov    BYTE PTR [rsp+0xd],0x1
    4f5c:	mov    QWORD PTR [rsp+0x18],0x1
    4f65:	xor    r15d,r15d
    4f68:	mov    QWORD PTR [rsp+0x48],rax
    4f6d:	mov    DWORD PTR [rsp+0x8],0x5
    4f75:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    4f7a:	mov    BYTE PTR [rsp+0xe],0x1
    4f7f:	mov    BYTE PTR [rsp+0x7c],0x0
    4f84:	xor    r12d,r12d
    4f87:	mov    QWORD PTR [rsp+0x50],0x0
    4f90:	mov    BYTE PTR [rsp+0xf],0x0
    4f95:	xor    r15d,r15d
    4f98:	mov    BYTE PTR [rsp+0xd],0x1
    4f9d:	mov    QWORD PTR [rsp+0x18],0x0
    4fa6:	mov    QWORD PTR [rsp+0x48],0x0
    4faf:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    4fb4:	cmp    DWORD PTR [rsp+0x8],0xa
    4fb9:	je     5011 <__cxa_finalize@plt+0x2f81>
    4fbb:	lea    rsi,[rip+0x2e25]        # 7de7 <is_basic_table@@Base+0x87>
    4fc2:	xor    edi,edi
    4fc4:	mov    edx,0x5
    4fc9:	call   1d20 <dcgettext@plt>
    4fce:	mov    rcx,rax
    4fd1:	mov    QWORD PTR [rsp+0x68],rax
    4fd6:	lea    rax,[rip+0x2e0a]        # 7de7 <is_basic_table@@Base+0x87>
    4fdd:	cmp    rcx,rax
    4fe0:	je     537e <__cxa_finalize@plt+0x32ee>
    4fe6:	lea    rsi,[rip+0x2df8]        # 7de5 <is_basic_table@@Base+0x85>
    4fed:	xor    edi,edi
    4fef:	mov    edx,0x5
    4ff4:	call   1d20 <dcgettext@plt>
    4ff9:	mov    rcx,rax
    4ffc:	mov    QWORD PTR [rsp+0x60],rax
    5001:	lea    rax,[rip+0x2ddd]        # 7de5 <is_basic_table@@Base+0x85>
    5008:	cmp    rcx,rax
    500b:	je     5394 <__cxa_finalize@plt+0x3304>
    5011:	xor    r15d,r15d
    5014:	test   ebx,ebx
    5016:	je     51dd <__cxa_finalize@plt+0x314d>
    501c:	test   ebx,ebx
    501e:	mov    rbx,QWORD PTR [rsp+0x60]
    5023:	setne  BYTE PTR [rsp+0xf]
    5028:	xor    r12d,r12d
    502b:	mov    rdi,rbx
    502e:	call   1d40 <strlen@plt>
    5033:	mov    QWORD PTR [rsp+0x48],rbx
    5038:	mov    QWORD PTR [rsp+0x18],rax
    503d:	mov    BYTE PTR [rsp+0xe],0x1
    5042:	mov    BYTE PTR [rsp+0x7c],0x0
    5047:	mov    QWORD PTR [rsp+0x50],0x0
    5050:	mov    BYTE PTR [rsp+0xd],0x1
    5055:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    505a:	mov    BYTE PTR [rsp+0xe],0x1
    505f:	mov    BYTE PTR [rsp+0x7c],0x0
    5064:	xor    r12d,r12d
    5067:	mov    QWORD PTR [rsp+0x50],0x0
    5070:	mov    BYTE PTR [rsp+0xf],0x0
    5075:	xor    r15d,r15d
    5078:	mov    BYTE PTR [rsp+0xd],0x0
    507d:	mov    QWORD PTR [rsp+0x18],0x0
    5086:	mov    QWORD PTR [rsp+0x48],0x0
    508f:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    5094:	mov    BYTE PTR [rsp+0xe],0x1
    5099:	mov    BYTE PTR [rsp+0x7c],0x0
    509e:	xor    r12d,r12d
    50a1:	mov    QWORD PTR [rsp+0x50],0x0
    50aa:	mov    BYTE PTR [rsp+0xf],0x1
    50af:	mov    BYTE PTR [rsp+0xd],0x1
    50b4:	jmp    42d3 <__cxa_finalize@plt+0x2243>
    50b9:	cmp    r13,r15
    50bc:	jbe    50c3 <__cxa_finalize@plt+0x3033>
    50be:	mov    BYTE PTR [r14+r15*1],0x30
    50c3:	lea    rax,[rcx+0x2]
    50c7:	cmp    r13,rax
    50ca:	jbe    50d2 <__cxa_finalize@plt+0x3042>
    50cc:	mov    BYTE PTR [r14+rcx*1+0x2],0x30
    50d2:	mov    eax,r12d
    50d5:	lea    r15,[rcx+0x3]
    50d9:	xor    r12d,r12d
    50dc:	mov    ebx,0x30
    50e1:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    50e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    50f0:	movzx  ebx,BYTE PTR [rsp+0xf]
    50f5:	mov    rbp,r11
    50f8:	mov    BYTE PTR [rsp+0xd],bl
    50fc:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    5101:	movzx  edx,BYTE PTR [rsp+0xd]
    5106:	xor    r12d,r12d
    5109:	jmp    4c10 <__cxa_finalize@plt+0x2b80>
    510e:	xor    r10d,r10d
    5111:	jmp    4ccd <__cxa_finalize@plt+0x2c3d>
    5116:	mov    QWORD PTR [rsp+0x50],0x0
    511f:	mov    BYTE PTR [rsp+0xe],0x1
    5124:	xor    r12d,r12d
    5127:	mov    BYTE PTR [rsp+0x7c],0x0
    512c:	jmp    4f0b <__cxa_finalize@plt+0x2e7b>
    5131:	mov    r11,QWORD PTR [rsp+0x30]
    5136:	mov    rsi,r14
    5139:	mov    rcx,r13
    513c:	mov    rax,rbx
    513f:	mov    rdi,rbx
    5142:	movzx  r8d,BYTE PTR [rsp+0x7d]
    5148:	movzx  ebx,BYTE PTR [rsp+0x7e]
    514d:	mov    r9,QWORD PTR [rsp+0x88]
    5155:	cmp    rsi,r11
    5158:	movzx  r10d,BYTE PTR [rsp+0x7f]
    515e:	mov    r15,QWORD PTR [rsp+0x80]
    5166:	mov    r14,QWORD PTR [rsp+0x40]
    516b:	mov    r13,QWORD PTR [rsp+0x70]
    5170:	jae    5198 <__cxa_finalize@plt+0x3108>
    5172:	cmp    BYTE PTR [rcx],0x0
    5175:	jne    5187 <__cxa_finalize@plt+0x30f7>
    5177:	jmp    5198 <__cxa_finalize@plt+0x3108>
    5179:	nop    DWORD PTR [rax+0x0]
    5180:	cmp    BYTE PTR [r9+rax*1],0x0
    5185:	je     5195 <__cxa_finalize@plt+0x3105>
    5187:	add    rax,0x1
    518b:	lea    rdx,[rbp+rax*1+0x0]
    5190:	cmp    r11,rdx
    5193:	ja     5180 <__cxa_finalize@plt+0x30f0>
    5195:	mov    rdi,rax
    5198:	movzx  edx,BYTE PTR [rsp+0xd]
    519d:	xor    r12d,r12d
    51a0:	jmp    4c06 <__cxa_finalize@plt+0x2b76>
    51a5:	mov    rdi,rbx
    51a8:	movzx  r8d,BYTE PTR [rsp+0x7d]
    51ae:	movzx  ebx,BYTE PTR [rsp+0x7e]
    51b3:	movzx  r10d,BYTE PTR [rsp+0x7f]
    51b9:	mov    r15,QWORD PTR [rsp+0x80]
    51c1:	xor    r12d,r12d
    51c4:	mov    r14,QWORD PTR [rsp+0x40]
    51c9:	mov    r13,QWORD PTR [rsp+0x70]
    51ce:	mov    r11,QWORD PTR [rsp+0x30]
    51d3:	movzx  edx,BYTE PTR [rsp+0xd]
    51d8:	jmp    4c06 <__cxa_finalize@plt+0x2b76>
    51dd:	mov    rdx,QWORD PTR [rsp+0x68]
    51e2:	movzx  eax,BYTE PTR [rdx]
    51e5:	test   al,al
    51e7:	je     501c <__cxa_finalize@plt+0x2f8c>
    51ed:	nop    DWORD PTR [rax]
    51f0:	cmp    r13,r15
    51f3:	jbe    51f9 <__cxa_finalize@plt+0x3169>
    51f5:	mov    BYTE PTR [r14+r15*1],al
    51f9:	add    r15,0x1
    51fd:	movzx  eax,BYTE PTR [rdx+r15*1]
    5202:	test   al,al
    5204:	jne    51f0 <__cxa_finalize@plt+0x3160>
    5206:	jmp    501c <__cxa_finalize@plt+0x2f8c>
    520b:	mov    eax,edx
    520d:	jmp    4767 <__cxa_finalize@plt+0x26d7>
    5212:	movzx  ebx,BYTE PTR [rax+rcx*1]
    5216:	cmp    bl,0x3e
    5219:	ja     4a90 <__cxa_finalize@plt+0x2a00>
    521f:	movabs rax,0x7000a38200000000
    5229:	bt     rax,rbx
    522d:	jae    4a90 <__cxa_finalize@plt+0x2a00>
    5233:	cmp    BYTE PTR [rsp+0xf],0x0
    5238:	jne    5422 <__cxa_finalize@plt+0x3392>
    523e:	cmp    r13,r15
    5241:	jbe    5248 <__cxa_finalize@plt+0x31b8>
    5243:	mov    BYTE PTR [r14+r15*1],0x3f
    5248:	lea    rax,[r15+0x1]
    524c:	cmp    r13,rax
    524f:	jbe    5257 <__cxa_finalize@plt+0x31c7>
    5251:	mov    BYTE PTR [r14+r15*1+0x1],0x22
    5257:	lea    rax,[r15+0x2]
    525b:	cmp    r13,rax
    525e:	jbe    5266 <__cxa_finalize@plt+0x31d6>
    5260:	mov    BYTE PTR [r14+r15*1+0x2],0x22
    5266:	lea    rax,[r15+0x3]
    526a:	cmp    r13,rax
    526d:	jbe    5275 <__cxa_finalize@plt+0x31e5>
    526f:	mov    BYTE PTR [r14+r15*1+0x3],0x3f
    5275:	add    r15,0x4
    5279:	xor    edx,edx
    527b:	xor    r12d,r12d
    527e:	xor    eax,eax
    5280:	mov    rbp,rcx
    5283:	jmp    4448 <__cxa_finalize@plt+0x23b8>
    5288:	test   ebx,ebx
    528a:	je     5418 <__cxa_finalize@plt+0x3388>
    5290:	lea    rax,[rip+0x2b4e]        # 7de5 <is_basic_table@@Base+0x85>
    5297:	mov    BYTE PTR [rsp+0xe],0x1
    529c:	mov    BYTE PTR [rsp+0x7c],0x0
    52a1:	xor    r12d,r12d
    52a4:	mov    QWORD PTR [rsp+0x50],0x0
    52ad:	mov    BYTE PTR [rsp+0xf],0x1
    52b2:	mov    BYTE PTR [rsp+0xd],0x0
    52b7:	mov    QWORD PTR [rsp+0x18],0x1
    52c0:	xor    r15d,r15d
    52c3:	mov    QWORD PTR [rsp+0x48],rax
    52c8:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    52cd:	nop    DWORD PTR [rax]
    52d0:	mov    rbp,r11
    52d3:	movzx  eax,BYTE PTR [rsp+0xf]
    52d8:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    52dd:	lea    rax,[rip+0x2aff]        # 7de3 <is_basic_table@@Base+0x83>
    52e4:	mov    BYTE PTR [rsp+0xe],0x1
    52e9:	mov    BYTE PTR [rsp+0x7c],0x0
    52ee:	xor    r12d,r12d
    52f1:	mov    QWORD PTR [rsp+0x50],0x0
    52fa:	mov    BYTE PTR [rsp+0xf],0x1
    52ff:	mov    BYTE PTR [rsp+0xd],0x1
    5304:	mov    QWORD PTR [rsp+0x18],0x1
    530d:	xor    r15d,r15d
    5310:	mov    QWORD PTR [rsp+0x48],rax
    5315:	jmp    42f3 <__cxa_finalize@plt+0x2263>
    531a:	mov    eax,edx
    531c:	mov    rbx,QWORD PTR [rsp+0x48]
    5321:	test   rbx,rbx
    5324:	je     5352 <__cxa_finalize@plt+0x32c2>
    5326:	test   al,al
    5328:	je     5352 <__cxa_finalize@plt+0x32c2>
    532a:	movzx  ecx,BYTE PTR [rbx]
    532d:	mov    rax,rbx
    5330:	test   cl,cl
    5332:	je     5352 <__cxa_finalize@plt+0x32c2>
    5334:	mov    rdx,r15
    5337:	sub    rax,r15
    533a:	cmp    r13,rdx
    533d:	jbe    5343 <__cxa_finalize@plt+0x32b3>
    533f:	mov    BYTE PTR [r14+rdx*1],cl
    5343:	add    rdx,0x1
    5347:	movzx  ecx,BYTE PTR [rax+rdx*1]
    534b:	test   cl,cl
    534d:	jne    533a <__cxa_finalize@plt+0x32aa>
    534f:	mov    r15,rdx
    5352:	cmp    r13,r15
    5355:	jbe    4df9 <__cxa_finalize@plt+0x2d69>
    535b:	mov    BYTE PTR [r14+r15*1],0x0
    5360:	jmp    4df9 <__cxa_finalize@plt+0x2d69>
    5365:	cmp    DWORD PTR [rsp+0x8],0x2
    536a:	movzx  ebx,BYTE PTR [rsp+0xf]
    536f:	mov    rbp,r11
    5372:	sete   al
    5375:	mov    BYTE PTR [rsp+0xd],bl
    5379:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    537e:	mov    esi,DWORD PTR [rsp+0x8]
    5382:	mov    rdi,rcx
    5385:	call   4130 <__cxa_finalize@plt+0x20a0>
    538a:	mov    QWORD PTR [rsp+0x68],rax
    538f:	jmp    4fe6 <__cxa_finalize@plt+0x2f56>
    5394:	mov    esi,DWORD PTR [rsp+0x8]
    5398:	mov    rdi,rcx
    539b:	call   4130 <__cxa_finalize@plt+0x20a0>
    53a0:	mov    QWORD PTR [rsp+0x60],rax
    53a5:	jmp    5011 <__cxa_finalize@plt+0x2f81>
    53aa:	movzx  ebx,BYTE PTR [rsp+0xf]
    53af:	mov    rbp,r11
    53b2:	mov    eax,edx
    53b4:	mov    BYTE PTR [rsp+0xd],bl
    53b8:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    53bd:	sub    rsp,0x8
    53c1:	mov    r8d,0x5
    53c7:	mov    rcx,r11
    53ca:	push   QWORD PTR [rsp+0x68]
    53ce:	push   QWORD PTR [rsp+0x78]
    53d2:	mov    rdi,r14
    53d5:	push   QWORD PTR [rsp+0x38]
    53d9:	mov    r9d,DWORD PTR [rsp+0x98]
    53e1:	mov    rdx,QWORD PTR [rsp+0x30]
    53e6:	mov    rsi,QWORD PTR [rsp+0x70]
    53eb:	call   4220 <__cxa_finalize@plt+0x2190>
    53f0:	add    rsp,0x20
    53f4:	mov    r15,rax
    53f7:	jmp    4df9 <__cxa_finalize@plt+0x2d69>
    53fc:	movzx  eax,BYTE PTR [rsp+0x7c]
    5401:	jmp    531c <__cxa_finalize@plt+0x328c>
    5406:	mov    DWORD PTR [rsp+0x8],0x2
    540e:	jmp    4da9 <__cxa_finalize@plt+0x2d19>
    5413:	call   1d50 <__stack_chk_fail@plt>
    5418:	mov    BYTE PTR [rsp+0xd],0x0
    541d:	jmp    4e91 <__cxa_finalize@plt+0x2e01>
    5422:	mov    rbp,r11
    5425:	jmp    4dc0 <__cxa_finalize@plt+0x2d30>
    542a:	mov    BYTE PTR [rsp+0xe],0x1
    542f:	xor    eax,eax
    5431:	xor    r12d,r12d
    5434:	mov    QWORD PTR [rsp+0x50],0x0
    543d:	jmp    49e4 <__cxa_finalize@plt+0x2954>
    5442:	mov    rdx,r13
    5445:	mov    r13,QWORD PTR [rsp+0x50]
    544a:	jmp    4a42 <__cxa_finalize@plt+0x29b2>
    544f:	call   1c80 <abort@plt>
    5454:	xchg   ax,ax
    5456:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5460:	push   r15
    5462:	push   r14
    5464:	movsxd r15,edi
    5467:	push   r13
    5469:	push   r12
    546b:	mov    r14,rdx
    546e:	push   rbp
    546f:	push   rbx
    5470:	mov    rbp,rcx
    5473:	sub    rsp,0x28
    5477:	mov    QWORD PTR [rsp+0x8],rsi
    547c:	call   1c90 <__errno_location@plt>
    5481:	mov    r13,rax
    5484:	mov    eax,DWORD PTR [rax]
    5486:	test   r15d,r15d
    5489:	mov    rbx,QWORD PTR [rip+0x204bd0]        # 20a060 <quote_quoting_options@@Base+0x40>
    5490:	mov    DWORD PTR [rsp+0x18],eax
    5494:	js     5601 <__cxa_finalize@plt+0x3571>
    549a:	cmp    DWORD PTR [rip+0x204bb7],r15d        # 20a058 <quote_quoting_options@@Base+0x38>
    54a1:	jg     5505 <__cxa_finalize@plt+0x3475>
    54a3:	cmp    r15d,0x7ffffffe
    54aa:	ja     5606 <__cxa_finalize@plt+0x3576>
    54b0:	lea    r12d,[r15+0x1]
    54b4:	lea    rax,[rip+0x204bb5]        # 20a070 <quote_quoting_options@@Base+0x50>
    54bb:	movsxd rsi,r12d
    54be:	shl    rsi,0x4
    54c2:	cmp    rbx,rax
    54c5:	je     55e0 <__cxa_finalize@plt+0x3550>
    54cb:	mov    rdi,rbx
    54ce:	call   6830 <__cxa_finalize@plt+0x47a0>
    54d3:	mov    rbx,rax
    54d6:	mov    QWORD PTR [rip+0x204b83],rax        # 20a060 <quote_quoting_options@@Base+0x40>
    54dd:	movsxd rdi,DWORD PTR [rip+0x204b74]        # 20a058 <quote_quoting_options@@Base+0x38>
    54e4:	mov    edx,r12d
    54e7:	xor    esi,esi
    54e9:	sub    edx,edi
    54eb:	shl    rdi,0x4
    54ef:	movsxd rdx,edx
    54f2:	add    rdi,rbx
    54f5:	shl    rdx,0x4
    54f9:	call   1dd0 <memset@plt>
    54fe:	mov    DWORD PTR [rip+0x204b53],r12d        # 20a058 <quote_quoting_options@@Base+0x38>
    5505:	mov    eax,DWORD PTR [rbp+0x4]
    5508:	shl    r15,0x4
    550c:	sub    rsp,0x8
    5510:	add    rbx,r15
    5513:	lea    r15,[rbp+0x8]
    5517:	mov    r8d,DWORD PTR [rbp+0x0]
    551b:	mov    r11,QWORD PTR [rbx]
    551e:	mov    r12,QWORD PTR [rbx+0x8]
    5522:	mov    rcx,r14
    5525:	or     eax,0x1
    5528:	mov    DWORD PTR [rsp+0x24],eax
    552c:	push   QWORD PTR [rbp+0x30]
    552f:	mov    r9d,eax
    5532:	push   QWORD PTR [rbp+0x28]
    5535:	push   r15
    5537:	mov    rsi,r11
    553a:	mov    rdx,QWORD PTR [rsp+0x28]
    553f:	mov    rdi,r12
    5542:	mov    QWORD PTR [rsp+0x30],r11
    5547:	call   4220 <__cxa_finalize@plt+0x2190>
    554c:	add    rsp,0x20
    5550:	mov    r11,QWORD PTR [rsp+0x10]
    5555:	cmp    r11,rax
    5558:	ja     55c1 <__cxa_finalize@plt+0x3531>
    555a:	lea    rsi,[rax+0x1]
    555e:	lea    rax,[rip+0x204bfb]        # 20a160 <program_name@@Base+0x18>
    5565:	cmp    r12,rax
    5568:	mov    QWORD PTR [rbx],rsi
    556b:	je     557f <__cxa_finalize@plt+0x34ef>
    556d:	mov    rdi,r12
    5570:	mov    QWORD PTR [rsp+0x10],rsi
    5575:	call   2080 <free@plt>
    557a:	mov    rsi,QWORD PTR [rsp+0x10]
    557f:	mov    rdi,rsi
    5582:	mov    QWORD PTR [rsp+0x10],rsi
    5587:	call   67d0 <__cxa_finalize@plt+0x4740>
    558c:	sub    rsp,0x8
    5590:	mov    QWORD PTR [rbx+0x8],rax
    5594:	mov    r8d,DWORD PTR [rbp+0x0]
    5598:	push   QWORD PTR [rbp+0x30]
    559b:	push   QWORD PTR [rbp+0x28]
    559e:	mov    rcx,r14
    55a1:	push   r15
    55a3:	mov    r9d,DWORD PTR [rsp+0x3c]
    55a8:	mov    rdi,rax
    55ab:	mov    rdx,QWORD PTR [rsp+0x28]
    55b0:	mov    rsi,QWORD PTR [rsp+0x30]
    55b5:	mov    r12,rax
    55b8:	call   4220 <__cxa_finalize@plt+0x2190>
    55bd:	add    rsp,0x20
    55c1:	mov    eax,DWORD PTR [rsp+0x18]
    55c5:	mov    DWORD PTR [r13+0x0],eax
    55c9:	add    rsp,0x28
    55cd:	mov    rax,r12
    55d0:	pop    rbx
    55d1:	pop    rbp
    55d2:	pop    r12
    55d4:	pop    r13
    55d6:	pop    r14
    55d8:	pop    r15
    55da:	ret    
    55db:	nop    DWORD PTR [rax+rax*1+0x0]
    55e0:	xor    edi,edi
    55e2:	call   6830 <__cxa_finalize@plt+0x47a0>
    55e7:	movdqa xmm0,XMMWORD PTR [rip+0x204a81]        # 20a070 <quote_quoting_options@@Base+0x50>
    55ef:	mov    rbx,rax
    55f2:	mov    QWORD PTR [rip+0x204a67],rax        # 20a060 <quote_quoting_options@@Base+0x40>
    55f9:	movups XMMWORD PTR [rax],xmm0
    55fc:	jmp    54dd <__cxa_finalize@plt+0x344d>
    5601:	call   1c80 <abort@plt>
    5606:	call   6a20 <__cxa_finalize@plt+0x4990>
    560b:	nop    DWORD PTR [rax+rax*1+0x0]
    5610:	push   r12
    5612:	push   rbp
    5613:	push   rbx
    5614:	mov    rbx,rdi
    5617:	call   1c90 <__errno_location@plt>
    561c:	mov    r12d,DWORD PTR [rax]
    561f:	mov    rbp,rax
    5622:	lea    rax,[rip+0x204c37]        # 20a260 <program_name@@Base+0x118>
    5629:	test   rbx,rbx
    562c:	mov    esi,0x38
    5631:	cmove  rbx,rax
    5635:	mov    rdi,rbx
    5638:	call   69d0 <__cxa_finalize@plt+0x4940>
    563d:	mov    DWORD PTR [rbp+0x0],r12d
    5641:	pop    rbx
    5642:	pop    rbp
    5643:	pop    r12
    5645:	ret    
    5646:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5650:	lea    rax,[rip+0x204c09]        # 20a260 <program_name@@Base+0x118>
    5657:	test   rdi,rdi
    565a:	cmove  rdi,rax
    565e:	mov    eax,DWORD PTR [rdi]
    5660:	ret    
    5661:	nop    DWORD PTR [rax+rax*1+0x0]
    5666:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5670:	lea    rax,[rip+0x204be9]        # 20a260 <program_name@@Base+0x118>
    5677:	test   rdi,rdi
    567a:	cmove  rdi,rax
    567e:	mov    DWORD PTR [rdi],esi
    5680:	ret    
    5681:	nop    DWORD PTR [rax+rax*1+0x0]
    5686:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5690:	lea    rax,[rip+0x204bc9]        # 20a260 <program_name@@Base+0x118>
    5697:	test   rdi,rdi
    569a:	mov    ecx,esi
    569c:	cmove  rdi,rax
    56a0:	mov    eax,esi
    56a2:	and    ecx,0x1f
    56a5:	shr    al,0x5
    56a8:	movzx  eax,al
    56ab:	lea    rdi,[rdi+rax*4+0x8]
    56b0:	mov    esi,DWORD PTR [rdi]
    56b2:	mov    eax,esi
    56b4:	shr    eax,cl
    56b6:	xor    edx,eax
    56b8:	and    eax,0x1
    56bb:	and    edx,0x1
    56be:	shl    edx,cl
    56c0:	xor    edx,esi
    56c2:	mov    DWORD PTR [rdi],edx
    56c4:	ret    
    56c5:	nop
    56c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56d0:	lea    rax,[rip+0x204b89]        # 20a260 <program_name@@Base+0x118>
    56d7:	test   rdi,rdi
    56da:	cmove  rdi,rax
    56de:	mov    eax,DWORD PTR [rdi+0x4]
    56e1:	mov    DWORD PTR [rdi+0x4],esi
    56e4:	ret    
    56e5:	nop
    56e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    56f0:	lea    rax,[rip+0x204b69]        # 20a260 <program_name@@Base+0x118>
    56f7:	test   rdi,rdi
    56fa:	cmove  rdi,rax
    56fe:	test   rsi,rsi
    5701:	mov    DWORD PTR [rdi],0xa
    5707:	je     5717 <__cxa_finalize@plt+0x3687>
    5709:	test   rdx,rdx
    570c:	je     5717 <__cxa_finalize@plt+0x3687>
    570e:	mov    QWORD PTR [rdi+0x28],rsi
    5712:	mov    QWORD PTR [rdi+0x30],rdx
    5716:	ret    
    5717:	sub    rsp,0x8
    571b:	call   1c80 <abort@plt>
    5720:	push   r15
    5722:	push   r14
    5724:	lea    rax,[rip+0x204b35]        # 20a260 <program_name@@Base+0x118>
    572b:	push   r13
    572d:	push   r12
    572f:	mov    r13,rdi
    5732:	push   rbp
    5733:	push   rbx
    5734:	mov    rbx,r8
    5737:	mov    r14,rsi
    573a:	mov    r15,rdx
    573d:	sub    rsp,0x18
    5741:	test   r8,r8
    5744:	cmove  rbx,rax
    5748:	mov    QWORD PTR [rsp+0x8],rcx
    574d:	call   1c90 <__errno_location@plt>
    5752:	mov    r12d,DWORD PTR [rax]
    5755:	mov    rbp,rax
    5758:	lea    rax,[rbx+0x8]
    575c:	sub    rsp,0x8
    5760:	mov    r9d,DWORD PTR [rbx+0x4]
    5764:	push   QWORD PTR [rbx+0x30]
    5767:	mov    r8d,DWORD PTR [rbx]
    576a:	push   QWORD PTR [rbx+0x28]
    576d:	mov    rdx,r15
    5770:	push   rax
    5771:	mov    rcx,QWORD PTR [rsp+0x28]
    5776:	mov    rsi,r14
    5779:	mov    rdi,r13
    577c:	call   4220 <__cxa_finalize@plt+0x2190>
    5781:	mov    DWORD PTR [rbp+0x0],r12d
    5785:	add    rsp,0x38
    5789:	pop    rbx
    578a:	pop    rbp
    578b:	pop    r12
    578d:	pop    r13
    578f:	pop    r14
    5791:	pop    r15
    5793:	ret    
    5794:	xchg   ax,ax
    5796:	nop    WORD PTR cs:[rax+rax*1+0x0]
    57a0:	push   r15
    57a2:	push   r14
    57a4:	lea    rax,[rip+0x204ab5]        # 20a260 <program_name@@Base+0x118>
    57ab:	push   r13
    57ad:	push   r12
    57af:	mov    r12,rdx
    57b2:	push   rbp
    57b3:	push   rbx
    57b4:	mov    rbx,rcx
    57b7:	mov    r14,rdi
    57ba:	mov    r15,rsi
    57bd:	sub    rsp,0x38
    57c1:	test   rcx,rcx
    57c4:	cmove  rbx,rax
    57c8:	xor    ebp,ebp
    57ca:	call   1c90 <__errno_location@plt>
    57cf:	test   r12,r12
    57d2:	mov    r13,rax
    57d5:	mov    eax,DWORD PTR [rax]
    57d7:	sete   bpl
    57db:	or     ebp,DWORD PTR [rbx+0x4]
    57de:	lea    r10,[rbx+0x8]
    57e2:	sub    rsp,0x8
    57e6:	mov    r8d,DWORD PTR [rbx]
    57e9:	mov    rcx,r15
    57ec:	mov    DWORD PTR [rsp+0x14],eax
    57f0:	push   QWORD PTR [rbx+0x30]
    57f3:	mov    rdx,r14
    57f6:	push   QWORD PTR [rbx+0x28]
    57f9:	push   r10
    57fb:	xor    esi,esi
    57fd:	mov    r9d,ebp
    5800:	xor    edi,edi
    5802:	mov    QWORD PTR [rsp+0x40],r10
    5807:	call   4220 <__cxa_finalize@plt+0x2190>
    580c:	lea    rsi,[rax+0x1]
    5810:	mov    QWORD PTR [rsp+0x48],rax
    5815:	add    rsp,0x20
    5819:	mov    rdi,rsi
    581c:	mov    QWORD PTR [rsp+0x18],rsi
    5821:	call   67d0 <__cxa_finalize@plt+0x4740>
    5826:	mov    QWORD PTR [rsp+0x10],rax
    582b:	sub    rsp,0x8
    582f:	push   QWORD PTR [rbx+0x30]
    5832:	push   QWORD PTR [rbx+0x28]
    5835:	mov    r10,QWORD PTR [rsp+0x38]
    583a:	mov    r9d,ebp
    583d:	mov    r8d,DWORD PTR [rbx]
    5840:	mov    rcx,r15
    5843:	mov    rdx,r14
    5846:	mov    rdi,rax
    5849:	push   r10
    584b:	mov    rsi,QWORD PTR [rsp+0x38]
    5850:	call   4220 <__cxa_finalize@plt+0x2190>
    5855:	mov    eax,DWORD PTR [rsp+0x2c]
    5859:	add    rsp,0x20
    585d:	test   r12,r12
    5860:	mov    DWORD PTR [r13+0x0],eax
    5864:	je     586f <__cxa_finalize@plt+0x37df>
    5866:	mov    r11,QWORD PTR [rsp+0x28]
    586b:	mov    QWORD PTR [r12],r11
    586f:	mov    rax,QWORD PTR [rsp+0x10]
    5874:	add    rsp,0x38
    5878:	pop    rbx
    5879:	pop    rbp
    587a:	pop    r12
    587c:	pop    r13
    587e:	pop    r14
    5880:	pop    r15
    5882:	ret    
    5883:	nop    DWORD PTR [rax]
    5886:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5890:	mov    rcx,rdx
    5893:	xor    edx,edx
    5895:	jmp    57a0 <__cxa_finalize@plt+0x3710>
    589a:	nop    WORD PTR [rax+rax*1+0x0]
    58a0:	mov    eax,DWORD PTR [rip+0x2047b2]        # 20a058 <quote_quoting_options@@Base+0x38>
    58a6:	push   r12
    58a8:	mov    r12,QWORD PTR [rip+0x2047b1]        # 20a060 <quote_quoting_options@@Base+0x40>
    58af:	push   rbp
    58b0:	push   rbx
    58b1:	cmp    eax,0x1
    58b4:	jle    58e1 <__cxa_finalize@plt+0x3851>
    58b6:	sub    eax,0x2
    58b9:	lea    rbx,[r12+0x18]
    58be:	shl    rax,0x4
    58c2:	lea    rbp,[r12+rax*1+0x28]
    58c7:	nop    WORD PTR [rax+rax*1+0x0]
    58d0:	mov    rdi,QWORD PTR [rbx]
    58d3:	add    rbx,0x10
    58d7:	call   2080 <free@plt>
    58dc:	cmp    rbx,rbp
    58df:	jne    58d0 <__cxa_finalize@plt+0x3840>
    58e1:	mov    rdi,QWORD PTR [r12+0x8]
    58e6:	lea    rbx,[rip+0x204873]        # 20a160 <program_name@@Base+0x18>
    58ed:	cmp    rdi,rbx
    58f0:	je     5909 <__cxa_finalize@plt+0x3879>
    58f2:	call   2080 <free@plt>
    58f7:	mov    QWORD PTR [rip+0x20476e],0x100        # 20a070 <quote_quoting_options@@Base+0x50>
    5902:	mov    QWORD PTR [rip+0x20476f],rbx        # 20a078 <quote_quoting_options@@Base+0x58>
    5909:	lea    rbx,[rip+0x204760]        # 20a070 <quote_quoting_options@@Base+0x50>
    5910:	cmp    r12,rbx
    5913:	je     5924 <__cxa_finalize@plt+0x3894>
    5915:	mov    rdi,r12
    5918:	call   2080 <free@plt>
    591d:	mov    QWORD PTR [rip+0x20473c],rbx        # 20a060 <quote_quoting_options@@Base+0x40>
    5924:	pop    rbx
    5925:	mov    DWORD PTR [rip+0x204729],0x1        # 20a058 <quote_quoting_options@@Base+0x38>
    592f:	pop    rbp
    5930:	pop    r12
    5932:	ret    
    5933:	nop    DWORD PTR [rax]
    5936:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5940:	lea    rcx,[rip+0x204919]        # 20a260 <program_name@@Base+0x118>
    5947:	mov    rdx,0xffffffffffffffff
    594e:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5953:	nop    DWORD PTR [rax]
    5956:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5960:	lea    rcx,[rip+0x2048f9]        # 20a260 <program_name@@Base+0x118>
    5967:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    596c:	nop    DWORD PTR [rax+0x0]
    5970:	lea    rcx,[rip+0x2048e9]        # 20a260 <program_name@@Base+0x118>
    5977:	mov    rsi,rdi
    597a:	mov    rdx,0xffffffffffffffff
    5981:	xor    edi,edi
    5983:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5988:	nop    DWORD PTR [rax+rax*1+0x0]
    5990:	lea    rcx,[rip+0x2048c9]        # 20a260 <program_name@@Base+0x118>
    5997:	mov    rdx,rsi
    599a:	mov    rsi,rdi
    599d:	xor    edi,edi
    599f:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    59a4:	xchg   ax,ax
    59a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    59b0:	sub    rsp,0x48
    59b4:	mov    rax,rdx
    59b7:	mov    rdx,QWORD PTR fs:0x28
    59c0:	mov    QWORD PTR [rsp+0x38],rdx
    59c5:	xor    edx,edx
    59c7:	cmp    esi,0xa
    59ca:	je     5a34 <__cxa_finalize@plt+0x39a4>
    59cc:	mov    DWORD PTR [rsp],esi
    59cf:	mov    rcx,rsp
    59d2:	mov    rdx,0xffffffffffffffff
    59d9:	mov    rsi,rax
    59dc:	mov    QWORD PTR [rsp+0x4],0x0
    59e5:	mov    QWORD PTR [rsp+0xc],0x0
    59ee:	mov    QWORD PTR [rsp+0x14],0x0
    59f7:	mov    QWORD PTR [rsp+0x1c],0x0
    5a00:	mov    QWORD PTR [rsp+0x24],0x0
    5a09:	mov    QWORD PTR [rsp+0x2c],0x0
    5a12:	mov    DWORD PTR [rsp+0x34],0x0
    5a1a:	call   5460 <__cxa_finalize@plt+0x33d0>
    5a1f:	mov    rcx,QWORD PTR [rsp+0x38]
    5a24:	xor    rcx,QWORD PTR fs:0x28
    5a2d:	jne    5a39 <__cxa_finalize@plt+0x39a9>
    5a2f:	add    rsp,0x48
    5a33:	ret    
    5a34:	call   1c80 <abort@plt>
    5a39:	call   1d50 <__stack_chk_fail@plt>
    5a3e:	xchg   ax,ax
    5a40:	sub    rsp,0x48
    5a44:	mov    rax,rdx
    5a47:	mov    rdx,rcx
    5a4a:	mov    rcx,QWORD PTR fs:0x28
    5a53:	mov    QWORD PTR [rsp+0x38],rcx
    5a58:	xor    ecx,ecx
    5a5a:	cmp    esi,0xa
    5a5d:	je     5ac0 <__cxa_finalize@plt+0x3a30>
    5a5f:	mov    DWORD PTR [rsp],esi
    5a62:	mov    rcx,rsp
    5a65:	mov    rsi,rax
    5a68:	mov    QWORD PTR [rsp+0x4],0x0
    5a71:	mov    QWORD PTR [rsp+0xc],0x0
    5a7a:	mov    QWORD PTR [rsp+0x14],0x0
    5a83:	mov    QWORD PTR [rsp+0x1c],0x0
    5a8c:	mov    QWORD PTR [rsp+0x24],0x0
    5a95:	mov    QWORD PTR [rsp+0x2c],0x0
    5a9e:	mov    DWORD PTR [rsp+0x34],0x0
    5aa6:	call   5460 <__cxa_finalize@plt+0x33d0>
    5aab:	mov    rdx,QWORD PTR [rsp+0x38]
    5ab0:	xor    rdx,QWORD PTR fs:0x28
    5ab9:	jne    5ac5 <__cxa_finalize@plt+0x3a35>
    5abb:	add    rsp,0x48
    5abf:	ret    
    5ac0:	call   1c80 <abort@plt>
    5ac5:	call   1d50 <__stack_chk_fail@plt>
    5aca:	nop    WORD PTR [rax+rax*1+0x0]
    5ad0:	mov    rdx,rsi
    5ad3:	mov    esi,edi
    5ad5:	xor    edi,edi
    5ad7:	jmp    59b0 <__cxa_finalize@plt+0x3920>
    5adc:	nop    DWORD PTR [rax+0x0]
    5ae0:	mov    rcx,rdx
    5ae3:	mov    rdx,rsi
    5ae6:	mov    esi,edi
    5ae8:	xor    edi,edi
    5aea:	jmp    5a40 <__cxa_finalize@plt+0x39b0>
    5aef:	nop
    5af0:	sub    rsp,0x48
    5af4:	mov    ecx,edx
    5af6:	mov    rax,QWORD PTR fs:0x28
    5aff:	mov    QWORD PTR [rsp+0x38],rax
    5b04:	xor    eax,eax
    5b06:	mov    rax,QWORD PTR [rip+0x204783]        # 20a290 <program_name@@Base+0x148>
    5b0d:	mov    r8,rsp
    5b10:	and    ecx,0x1f
    5b13:	movdqa xmm0,XMMWORD PTR [rip+0x204745]        # 20a260 <program_name@@Base+0x118>
    5b1b:	mov    QWORD PTR [rsp+0x30],rax
    5b20:	mov    eax,edx
    5b22:	movaps XMMWORD PTR [rsp],xmm0
    5b26:	shr    al,0x5
    5b29:	movzx  eax,al
    5b2c:	lea    r9,[r8+rax*4+0x8]
    5b31:	movdqa xmm0,XMMWORD PTR [rip+0x204737]        # 20a270 <program_name@@Base+0x128>
    5b39:	movaps XMMWORD PTR [rsp+0x10],xmm0
    5b3e:	movdqa xmm0,XMMWORD PTR [rip+0x20473a]        # 20a280 <program_name@@Base+0x138>
    5b46:	movaps XMMWORD PTR [rsp+0x20],xmm0
    5b4b:	mov    edx,DWORD PTR [r9]
    5b4e:	mov    eax,edx
    5b50:	shr    eax,cl
    5b52:	not    eax
    5b54:	and    eax,0x1
    5b57:	shl    eax,cl
    5b59:	mov    rcx,r8
    5b5c:	xor    eax,edx
    5b5e:	mov    rdx,rsi
    5b61:	mov    rsi,rdi
    5b64:	mov    DWORD PTR [r9],eax
    5b67:	xor    edi,edi
    5b69:	call   5460 <__cxa_finalize@plt+0x33d0>
    5b6e:	mov    rsi,QWORD PTR [rsp+0x38]
    5b73:	xor    rsi,QWORD PTR fs:0x28
    5b7c:	jne    5b83 <__cxa_finalize@plt+0x3af3>
    5b7e:	add    rsp,0x48
    5b82:	ret    
    5b83:	call   1d50 <__stack_chk_fail@plt>
    5b88:	nop    DWORD PTR [rax+rax*1+0x0]
    5b90:	movsx  edx,sil
    5b94:	mov    rsi,0xffffffffffffffff
    5b9b:	jmp    5af0 <__cxa_finalize@plt+0x3a60>
    5ba0:	mov    edx,0x3a
    5ba5:	mov    rsi,0xffffffffffffffff
    5bac:	jmp    5af0 <__cxa_finalize@plt+0x3a60>
    5bb1:	nop    DWORD PTR [rax+rax*1+0x0]
    5bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5bc0:	mov    edx,0x3a
    5bc5:	jmp    5af0 <__cxa_finalize@plt+0x3a60>
    5bca:	nop    WORD PTR [rax+rax*1+0x0]
    5bd0:	sub    rsp,0x48
    5bd4:	mov    rax,rdx
    5bd7:	mov    rdx,QWORD PTR fs:0x28
    5be0:	mov    QWORD PTR [rsp+0x38],rdx
    5be5:	xor    edx,edx
    5be7:	cmp    esi,0xa
    5bea:	je     5c54 <__cxa_finalize@plt+0x3bc4>
    5bec:	mov    DWORD PTR [rsp],esi
    5bef:	mov    rcx,rsp
    5bf2:	mov    rdx,0xffffffffffffffff
    5bf9:	mov    rsi,rax
    5bfc:	mov    QWORD PTR [rsp+0x4],0x0
    5c05:	mov    QWORD PTR [rsp+0xc],0x4000000
    5c0e:	mov    QWORD PTR [rsp+0x14],0x0
    5c17:	mov    QWORD PTR [rsp+0x1c],0x0
    5c20:	mov    QWORD PTR [rsp+0x24],0x0
    5c29:	mov    QWORD PTR [rsp+0x2c],0x0
    5c32:	mov    DWORD PTR [rsp+0x34],0x0
    5c3a:	call   5460 <__cxa_finalize@plt+0x33d0>
    5c3f:	mov    rcx,QWORD PTR [rsp+0x38]
    5c44:	xor    rcx,QWORD PTR fs:0x28
    5c4d:	jne    5c59 <__cxa_finalize@plt+0x3bc9>
    5c4f:	add    rsp,0x48
    5c53:	ret    
    5c54:	call   1c80 <abort@plt>
    5c59:	call   1d50 <__stack_chk_fail@plt>
    5c5e:	xchg   ax,ax
    5c60:	sub    rsp,0x48
    5c64:	mov    r9,rcx
    5c67:	mov    rcx,QWORD PTR [rip+0x204622]        # 20a290 <program_name@@Base+0x148>
    5c6e:	movdqa xmm0,XMMWORD PTR [rip+0x2045ea]        # 20a260 <program_name@@Base+0x118>
    5c76:	mov    rax,QWORD PTR fs:0x28
    5c7f:	mov    QWORD PTR [rsp+0x38],rax
    5c84:	xor    eax,eax
    5c86:	movaps XMMWORD PTR [rsp],xmm0
    5c8a:	test   rsi,rsi
    5c8d:	mov    QWORD PTR [rsp+0x30],rcx
    5c92:	mov    DWORD PTR [rsp],0xa
    5c99:	movdqa xmm0,XMMWORD PTR [rip+0x2045cf]        # 20a270 <program_name@@Base+0x128>
    5ca1:	movaps XMMWORD PTR [rsp+0x10],xmm0
    5ca6:	movdqa xmm0,XMMWORD PTR [rip+0x2045d2]        # 20a280 <program_name@@Base+0x138>
    5cae:	movaps XMMWORD PTR [rsp+0x20],xmm0
    5cb3:	je     5ce7 <__cxa_finalize@plt+0x3c57>
    5cb5:	test   rdx,rdx
    5cb8:	je     5ce7 <__cxa_finalize@plt+0x3c57>
    5cba:	mov    QWORD PTR [rsp+0x28],rsi
    5cbf:	mov    QWORD PTR [rsp+0x30],rdx
    5cc4:	mov    rcx,rsp
    5cc7:	mov    rdx,r8
    5cca:	mov    rsi,r9
    5ccd:	call   5460 <__cxa_finalize@plt+0x33d0>
    5cd2:	mov    rdi,QWORD PTR [rsp+0x38]
    5cd7:	xor    rdi,QWORD PTR fs:0x28
    5ce0:	jne    5cec <__cxa_finalize@plt+0x3c5c>
    5ce2:	add    rsp,0x48
    5ce6:	ret    
    5ce7:	call   1c80 <abort@plt>
    5cec:	call   1d50 <__stack_chk_fail@plt>
    5cf1:	nop    DWORD PTR [rax+rax*1+0x0]
    5cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d00:	mov    r8,0xffffffffffffffff
    5d07:	jmp    5c60 <__cxa_finalize@plt+0x3bd0>
    5d0c:	nop    DWORD PTR [rax+0x0]
    5d10:	mov    rcx,rdx
    5d13:	mov    r8,0xffffffffffffffff
    5d1a:	mov    rdx,rsi
    5d1d:	mov    rsi,rdi
    5d20:	xor    edi,edi
    5d22:	jmp    5c60 <__cxa_finalize@plt+0x3bd0>
    5d27:	nop    WORD PTR [rax+rax*1+0x0]
    5d30:	mov    r8,rcx
    5d33:	mov    rcx,rdx
    5d36:	mov    rdx,rsi
    5d39:	mov    rsi,rdi
    5d3c:	xor    edi,edi
    5d3e:	jmp    5c60 <__cxa_finalize@plt+0x3bd0>
    5d43:	nop    DWORD PTR [rax]
    5d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d50:	lea    rcx,[rip+0x2042c9]        # 20a020 <quote_quoting_options@@Base>
    5d57:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5d5c:	nop    DWORD PTR [rax+0x0]
    5d60:	lea    rcx,[rip+0x2042b9]        # 20a020 <quote_quoting_options@@Base>
    5d67:	mov    rdx,rsi
    5d6a:	mov    rsi,rdi
    5d6d:	xor    edi,edi
    5d6f:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5d74:	xchg   ax,ax
    5d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5d80:	lea    rcx,[rip+0x204299]        # 20a020 <quote_quoting_options@@Base>
    5d87:	mov    rdx,0xffffffffffffffff
    5d8e:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5d93:	nop    DWORD PTR [rax]
    5d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5da0:	lea    rcx,[rip+0x204279]        # 20a020 <quote_quoting_options@@Base>
    5da7:	mov    rsi,rdi
    5daa:	mov    rdx,0xffffffffffffffff
    5db1:	xor    edi,edi
    5db3:	jmp    5460 <__cxa_finalize@plt+0x33d0>
    5db8:	nop    DWORD PTR [rax+rax*1+0x0]
    5dc0:	push   r12
    5dc2:	push   rbp
    5dc3:	push   rbx
    5dc4:	mov    rdx,QWORD PTR [rdi+0x30]
    5dc8:	mov    rbx,rdi
    5dcb:	mov    r12,QWORD PTR [rdi+0x28]
    5dcf:	mov    rbp,rdx
    5dd2:	sub    rbp,r12
    5dd5:	sub    rbp,0x1
    5dd9:	cmp    rdx,r12
    5ddc:	je     5ea0 <__cxa_finalize@plt+0x3e10>
    5de2:	mov    rcx,QWORD PTR [rbx+0x48]
    5de6:	lea    rax,[rdx+rcx*1]
    5dea:	not    rcx
    5ded:	mov    rdx,QWORD PTR [rbx+0x38]
    5df1:	and    rax,rcx
    5df4:	mov    rcx,QWORD PTR [rbx+0x20]
    5df8:	mov    rsi,rax
    5dfb:	mov    rdi,rdx
    5dfe:	mov    QWORD PTR [rbx+0x30],rax
    5e02:	sub    rsi,rcx
    5e05:	sub    rdi,rcx
    5e08:	cmp    rsi,rdi
    5e0b:	jbe    5e14 <__cxa_finalize@plt+0x3d84>
    5e0d:	mov    QWORD PTR [rbx+0x30],rdx
    5e11:	mov    rax,rdx
    5e14:	mov    QWORD PTR [rbx+0x28],rax
    5e18:	mov    rdx,QWORD PTR [rbx+0x88]
    5e1f:	mov    rax,QWORD PTR [rbx+0x90]
    5e26:	sub    rax,rdx
    5e29:	cmp    rax,0x7
    5e2d:	jbe    5e80 <__cxa_finalize@plt+0x3df0>
    5e2f:	mov    QWORD PTR [rdx],r12
    5e32:	mov    rdx,QWORD PTR [rbx+0xe0]
    5e39:	mov    rax,QWORD PTR [rbx+0xe8]
    5e40:	add    QWORD PTR [rbx+0x88],0x8
    5e48:	sub    rax,rdx
    5e4b:	cmp    rax,0x7
    5e4f:	ja     5e69 <__cxa_finalize@plt+0x3dd9>
    5e51:	lea    rdi,[rbx+0xc8]
    5e58:	mov    esi,0x8
    5e5d:	call   6d60 <_obstack_newchunk@@Base>
    5e62:	mov    rdx,QWORD PTR [rbx+0xe0]
    5e69:	mov    QWORD PTR [rdx],rbp
    5e6c:	add    QWORD PTR [rbx+0xe0],0x8
    5e74:	add    QWORD PTR [rbx],0x1
    5e78:	pop    rbx
    5e79:	pop    rbp
    5e7a:	pop    r12
    5e7c:	ret    
    5e7d:	nop    DWORD PTR [rax]
    5e80:	lea    rdi,[rbx+0x70]
    5e84:	mov    esi,0x8
    5e89:	call   6d60 <_obstack_newchunk@@Base>
    5e8e:	mov    rdx,QWORD PTR [rbx+0x88]
    5e95:	jmp    5e2f <__cxa_finalize@plt+0x3d9f>
    5e97:	nop    WORD PTR [rax+rax*1+0x0]
    5ea0:	or     BYTE PTR [rdi+0x68],0x2
    5ea4:	jmp    5de2 <__cxa_finalize@plt+0x3d52>
    5ea9:	nop    DWORD PTR [rax+0x0]
    5eb0:	push   r12
    5eb2:	mov    r12,QWORD PTR [rip+0x2040f7]        # 209fb0 <free@GLIBC_2.2.5>
    5eb9:	xor    edx,edx
    5ebb:	push   rbp
    5ebc:	mov    rbp,QWORD PTR [rip+0x20410d]        # 209fd0 <malloc@GLIBC_2.2.5>
    5ec3:	xor    esi,esi
    5ec5:	push   rbx
    5ec6:	mov    rbx,rdi
    5ec9:	mov    QWORD PTR [rdi],0x0
    5ed0:	mov    QWORD PTR [rdi+0x8],0x0
    5ed8:	mov    QWORD PTR [rdi+0x10],0x0
    5ee0:	lea    rdi,[rdi+0x18]
    5ee4:	mov    r8,r12
    5ee7:	mov    rcx,rbp
    5eea:	call   6d20 <_obstack_begin@@Base>
    5eef:	lea    rdi,[rbx+0x70]
    5ef3:	mov    r8,r12
    5ef6:	mov    rcx,rbp
    5ef9:	xor    edx,edx
    5efb:	xor    esi,esi
    5efd:	call   6d20 <_obstack_begin@@Base>
    5f02:	lea    rdi,[rbx+0xc8]
    5f09:	mov    r8,r12
    5f0c:	mov    rcx,rbp
    5f0f:	pop    rbx
    5f10:	pop    rbp
    5f11:	pop    r12
    5f13:	xor    edx,edx
    5f15:	xor    esi,esi
    5f17:	jmp    6d20 <_obstack_begin@@Base>
    5f1c:	nop    DWORD PTR [rax+0x0]
    5f20:	push   rbx
    5f21:	mov    rbx,rdi
    5f24:	lea    rdi,[rdi+0x18]
    5f28:	xor    esi,esi
    5f2a:	call   6e90 <_obstack_free@@Base>
    5f2f:	lea    rdi,[rbx+0x70]
    5f33:	xor    esi,esi
    5f35:	call   6e90 <_obstack_free@@Base>
    5f3a:	lea    rdi,[rbx+0xc8]
    5f41:	xor    esi,esi
    5f43:	pop    rbx
    5f44:	jmp    6e90 <_obstack_free@@Base>
    5f49:	nop    DWORD PTR [rax+0x0]
    5f50:	push   r12
    5f52:	push   rbp
    5f53:	lea    r12,[rsi+0x18]
    5f57:	push   rbx
    5f58:	mov    rbp,rdi
    5f5b:	mov    rbx,rsi
    5f5e:	sub    rsp,0x10
    5f62:	jmp    5f76 <__cxa_finalize@plt+0x3ee6>
    5f64:	nop    DWORD PTR [rax+0x0]
    5f68:	lea    rcx,[rdx+0x1]
    5f6c:	test   eax,eax
    5f6e:	mov    QWORD PTR [rbx+0x30],rcx
    5f72:	mov    BYTE PTR [rdx],al
    5f74:	je     5fb4 <__cxa_finalize@plt+0x3f24>
    5f76:	mov    rdi,rbp
    5f79:	call   1df0 <fgetc@plt>
    5f7e:	cmp    eax,0xffffffff
    5f81:	je     5fd0 <__cxa_finalize@plt+0x3f40>
    5f83:	mov    rdx,QWORD PTR [rbx+0x30]
    5f87:	cmp    QWORD PTR [rbx+0x38],rdx
    5f8b:	jne    5f68 <__cxa_finalize@plt+0x3ed8>
    5f8d:	mov    esi,0x1
    5f92:	mov    rdi,r12
    5f95:	mov    DWORD PTR [rsp+0xc],eax
    5f99:	call   6d60 <_obstack_newchunk@@Base>
    5f9e:	mov    rdx,QWORD PTR [rbx+0x30]
    5fa2:	mov    eax,DWORD PTR [rsp+0xc]
    5fa6:	lea    rcx,[rdx+0x1]
    5faa:	test   eax,eax
    5fac:	mov    QWORD PTR [rbx+0x30],rcx
    5fb0:	mov    BYTE PTR [rdx],al
    5fb2:	jne    5f76 <__cxa_finalize@plt+0x3ee6>
    5fb4:	mov    rdi,rbx
    5fb7:	call   5dc0 <__cxa_finalize@plt+0x3d30>
    5fbc:	mov    rdi,rbp
    5fbf:	call   1df0 <fgetc@plt>
    5fc4:	cmp    eax,0xffffffff
    5fc7:	jne    5f83 <__cxa_finalize@plt+0x3ef3>
    5fc9:	nop    DWORD PTR [rax+0x0]
    5fd0:	mov    rax,QWORD PTR [rbx+0x30]
    5fd4:	cmp    QWORD PTR [rbx+0x28],rax
    5fd8:	je     5ff7 <__cxa_finalize@plt+0x3f67>
    5fda:	cmp    QWORD PTR [rbx+0x38],rax
    5fde:	je     6140 <__cxa_finalize@plt+0x40b0>
    5fe4:	lea    rdx,[rax+0x1]
    5fe8:	mov    rdi,rbx
    5feb:	mov    QWORD PTR [rbx+0x30],rdx
    5fef:	mov    BYTE PTR [rax],0x0
    5ff2:	call   5dc0 <__cxa_finalize@plt+0x3d30>
    5ff7:	mov    rdx,QWORD PTR [rbx+0x88]
    5ffe:	mov    rax,QWORD PTR [rbx+0x90]
    6005:	sub    rax,rdx
    6008:	cmp    rax,0x7
    600c:	jbe    6100 <__cxa_finalize@plt+0x4070>
    6012:	mov    QWORD PTR [rdx],0x0
    6019:	mov    rax,QWORD PTR [rbx+0x88]
    6020:	mov    rsi,QWORD PTR [rbx+0x80]
    6027:	lea    rdx,[rax+0x8]
    602b:	cmp    rdx,rsi
    602e:	mov    QWORD PTR [rbx+0x88],rdx
    6035:	je     6130 <__cxa_finalize@plt+0x40a0>
    603b:	mov    rcx,QWORD PTR [rbx+0xa0]
    6042:	lea    rax,[rdx+rcx*1]
    6046:	not    rcx
    6049:	mov    rdx,QWORD PTR [rbx+0x78]
    604d:	and    rax,rcx
    6050:	mov    rcx,QWORD PTR [rbx+0x90]
    6057:	mov    rdi,rax
    605a:	mov    QWORD PTR [rbx+0x88],rax
    6061:	sub    rdi,rdx
    6064:	mov    r8,rcx
    6067:	sub    r8,rdx
    606a:	cmp    rdi,r8
    606d:	jbe    6079 <__cxa_finalize@plt+0x3fe9>
    606f:	mov    QWORD PTR [rbx+0x88],rcx
    6076:	mov    rax,rcx
    6079:	mov    QWORD PTR [rbx+0x8],rsi
    607d:	mov    rdx,QWORD PTR [rbx+0xe0]
    6084:	mov    rsi,QWORD PTR [rbx+0xd8]
    608b:	mov    QWORD PTR [rbx+0x80],rax
    6092:	cmp    rdx,rsi
    6095:	je     6120 <__cxa_finalize@plt+0x4090>
    609b:	mov    rcx,QWORD PTR [rbx+0xf8]
    60a2:	lea    rax,[rdx+rcx*1]
    60a6:	not    rcx
    60a9:	mov    rdx,QWORD PTR [rbx+0xe8]
    60b0:	and    rax,rcx
    60b3:	mov    rcx,QWORD PTR [rbx+0xd0]
    60ba:	mov    rdi,rax
    60bd:	mov    r9,rdx
    60c0:	mov    QWORD PTR [rbx+0xe0],rax
    60c7:	sub    rdi,rcx
    60ca:	sub    r9,rcx
    60cd:	cmp    rdi,r9
    60d0:	jbe    60dc <__cxa_finalize@plt+0x404c>
    60d2:	mov    QWORD PTR [rbx+0xe0],rdx
    60d9:	mov    rax,rdx
    60dc:	mov    QWORD PTR [rbx+0xd8],rax
    60e3:	mov    QWORD PTR [rbx+0x10],rsi
    60e7:	mov    rdi,rbp
    60ea:	call   1cd0 <ferror@plt>
    60ef:	test   eax,eax
    60f1:	sete   al
    60f4:	add    rsp,0x10
    60f8:	pop    rbx
    60f9:	pop    rbp
    60fa:	pop    r12
    60fc:	ret    
    60fd:	nop    DWORD PTR [rax]
    6100:	lea    rdi,[rbx+0x70]
    6104:	mov    esi,0x8
    6109:	call   6d60 <_obstack_newchunk@@Base>
    610e:	mov    rdx,QWORD PTR [rbx+0x88]
    6115:	jmp    6012 <__cxa_finalize@plt+0x3f82>
    611a:	nop    WORD PTR [rax+rax*1+0x0]
    6120:	or     BYTE PTR [rbx+0x118],0x2
    6127:	jmp    609b <__cxa_finalize@plt+0x400b>
    612c:	nop    DWORD PTR [rax+0x0]
    6130:	or     BYTE PTR [rbx+0xc0],0x2
    6137:	jmp    603b <__cxa_finalize@plt+0x3fab>
    613c:	nop    DWORD PTR [rax+0x0]
    6140:	lea    rdi,[rbx+0x18]
    6144:	mov    esi,0x1
    6149:	call   6d60 <_obstack_newchunk@@Base>
    614e:	mov    rax,QWORD PTR [rbx+0x30]
    6152:	jmp    5fe4 <__cxa_finalize@plt+0x3f54>
    6157:	nop    WORD PTR [rax+rax*1+0x0]
    6160:	push   r13
    6162:	push   r12
    6164:	mov    r13d,edi
    6167:	push   rbp
    6168:	push   rbx
    6169:	mov    r12,rsi
    616c:	mov    rbx,rdx
    616f:	sub    rsp,0x8
    6173:	nop    DWORD PTR [rax+rax*1+0x0]
    6178:	mov    rdx,rbx
    617b:	mov    rsi,r12
    617e:	mov    edi,r13d
    6181:	call   1e30 <read@plt>
    6186:	test   rax,rax
    6189:	mov    rbp,rax
    618c:	jns    61b0 <__cxa_finalize@plt+0x4120>
    618e:	call   1c90 <__errno_location@plt>
    6193:	mov    eax,DWORD PTR [rax]
    6195:	cmp    eax,0x4
    6198:	je     6178 <__cxa_finalize@plt+0x40e8>
    619a:	cmp    rbx,0x7fffe000
    61a1:	jbe    61b0 <__cxa_finalize@plt+0x4120>
    61a3:	cmp    eax,0x16
    61a6:	jne    61b0 <__cxa_finalize@plt+0x4120>
    61a8:	mov    ebx,0x7fffe000
    61ad:	jmp    6178 <__cxa_finalize@plt+0x40e8>
    61af:	nop
    61b0:	add    rsp,0x8
    61b4:	mov    rax,rbp
    61b7:	pop    rbx
    61b8:	pop    rbp
    61b9:	pop    r12
    61bb:	pop    r13
    61bd:	ret    
    61be:	xchg   ax,ax
    61c0:	push   r15
    61c2:	push   r14
    61c4:	push   r13
    61c6:	push   r12
    61c8:	mov    r12,r9
    61cb:	push   rbp
    61cc:	push   rbx
    61cd:	mov    rbp,rdi
    61d0:	mov    rbx,r8
    61d3:	sub    rsp,0x28
    61d7:	test   rsi,rsi
    61da:	je     6270 <__cxa_finalize@plt+0x41e0>
    61e0:	mov    r8,rdx
    61e3:	lea    rdx,[rip+0x20be]        # 82a8 <quoting_style_vals@@Base+0x28>
    61ea:	mov    r9,rcx
    61ed:	xor    eax,eax
    61ef:	mov    rcx,rsi
    61f2:	mov    esi,0x1
    61f7:	call   2030 <__fprintf_chk@plt>
    61fc:	lea    rsi,[rip+0x20b8]        # 82bb <quoting_style_vals@@Base+0x3b>
    6203:	xor    edi,edi
    6205:	mov    edx,0x5
    620a:	call   1d20 <dcgettext@plt>
    620f:	lea    rdx,[rip+0x23ca]        # 85e0 <version_etc_copyright@@Base>
    6216:	mov    rcx,rax
    6219:	mov    r8d,0x7e1
    621f:	mov    esi,0x1
    6224:	mov    rdi,rbp
    6227:	xor    eax,eax
    6229:	call   2030 <__fprintf_chk@plt>
    622e:	lea    rsi,[rip+0x2113]        # 8348 <quoting_style_vals@@Base+0xc8>
    6235:	xor    edi,edi
    6237:	mov    edx,0x5
    623c:	call   1d20 <dcgettext@plt>
    6241:	mov    rsi,rbp
    6244:	mov    rdi,rax
    6247:	call   1e50 <fputs_unlocked@plt>
    624c:	cmp    r12,0x9
    6250:	ja     6580 <__cxa_finalize@plt+0x44f0>
    6256:	lea    rdx,[rip+0x2343]        # 85a0 <quoting_style_vals@@Base+0x320>
    625d:	movsxd rax,DWORD PTR [rdx+r12*4]
    6261:	add    rax,rdx
    6264:	jmp    rax
    6266:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6270:	mov    r8,rcx
    6273:	mov    rcx,rdx
    6276:	lea    rdx,[rip+0x2037]        # 82b4 <quoting_style_vals@@Base+0x34>
    627d:	mov    esi,0x1
    6282:	xor    eax,eax
    6284:	call   2030 <__fprintf_chk@plt>
    6289:	jmp    61fc <__cxa_finalize@plt+0x416c>
    628e:	xchg   ax,ax
    6290:	mov    r9,QWORD PTR [rbx+0x38]
    6294:	mov    rax,QWORD PTR [rbx+0x10]
    6298:	lea    rsi,[rip+0x2219]        # 84b8 <quoting_style_vals@@Base+0x238>
    629f:	mov    r8,QWORD PTR [rbx+0x8]
    62a3:	mov    edx,0x5
    62a8:	xor    edi,edi
    62aa:	mov    r13,QWORD PTR [rbx+0x30]
    62ae:	mov    r12,QWORD PTR [rbx+0x28]
    62b2:	mov    QWORD PTR [rsp+0x10],r9
    62b7:	mov    r15,QWORD PTR [rbx+0x20]
    62bb:	mov    r14,QWORD PTR [rbx+0x18]
    62bf:	mov    QWORD PTR [rsp],rax
    62c3:	mov    QWORD PTR [rsp+0x8],r8
    62c8:	mov    rbx,QWORD PTR [rbx]
    62cb:	call   1d20 <dcgettext@plt>
    62d0:	sub    rsp,0x8
    62d4:	mov    r9,QWORD PTR [rsp+0x18]
    62d9:	mov    rcx,rbx
    62dc:	mov    rdx,rax
    62df:	mov    rdi,rbp
    62e2:	mov    esi,0x1
    62e7:	xor    eax,eax
    62e9:	push   r9
    62eb:	push   r13
    62ed:	push   r12
    62ef:	push   r15
    62f1:	push   r14
    62f3:	mov    r9,QWORD PTR [rsp+0x30]
    62f8:	mov    r8,QWORD PTR [rsp+0x38]
    62fd:	call   2030 <__fprintf_chk@plt>
    6302:	add    rsp,0x30
    6306:	add    rsp,0x28
    630a:	pop    rbx
    630b:	pop    rbp
    630c:	pop    r12
    630e:	pop    r13
    6310:	pop    r14
    6312:	pop    r15
    6314:	ret    
    6315:	nop    DWORD PTR [rax]
    6318:	mov    r10,QWORD PTR [rbx+0x40]
    631c:	mov    r9,QWORD PTR [rbx+0x38]
    6320:	lea    rsi,[rip+0x21c1]        # 84e8 <quoting_style_vals@@Base+0x268>
    6327:	mov    rax,QWORD PTR [rbx+0x10]
    632b:	mov    r8,QWORD PTR [rbx+0x8]
    632f:	mov    edx,0x5
    6334:	mov    r13,QWORD PTR [rbx+0x30]
    6338:	mov    r12,QWORD PTR [rbx+0x28]
    633c:	mov    r15,QWORD PTR [rbx+0x20]
    6340:	mov    r14,QWORD PTR [rbx+0x18]
    6344:	mov    rbx,QWORD PTR [rbx]
    6347:	mov    QWORD PTR [rsp+0x18],r10
    634c:	mov    QWORD PTR [rsp+0x10],r9
    6351:	mov    QWORD PTR [rsp],rax
    6355:	mov    QWORD PTR [rsp+0x8],r8
    635a:	xor    edi,edi
    635c:	call   1d20 <dcgettext@plt>
    6361:	mov    r10,QWORD PTR [rsp+0x18]
    6366:	push   r10
    6368:	jmp    62d4 <__cxa_finalize@plt+0x4244>
    636d:	nop    DWORD PTR [rax]
    6370:	mov    rbx,QWORD PTR [rbx]
    6373:	lea    rsi,[rip+0x1f45]        # 82bf <quoting_style_vals@@Base+0x3f>
    637a:	mov    edx,0x5
    637f:	xor    edi,edi
    6381:	call   1d20 <dcgettext@plt>
    6386:	add    rsp,0x28
    638a:	mov    rcx,rbx
    638d:	mov    rdi,rbp
    6390:	pop    rbx
    6391:	pop    rbp
    6392:	pop    r12
    6394:	pop    r13
    6396:	pop    r14
    6398:	pop    r15
    639a:	mov    rdx,rax
    639d:	mov    esi,0x1
    63a2:	xor    eax,eax
    63a4:	jmp    2030 <__fprintf_chk@plt>
    63a9:	nop    DWORD PTR [rax+0x0]
    63b0:	mov    r12,QWORD PTR [rbx+0x8]
    63b4:	lea    rsi,[rip+0x1f14]        # 82cf <quoting_style_vals@@Base+0x4f>
    63bb:	mov    rbx,QWORD PTR [rbx]
    63be:	mov    edx,0x5
    63c3:	xor    edi,edi
    63c5:	call   1d20 <dcgettext@plt>
    63ca:	add    rsp,0x28
    63ce:	mov    r8,r12
    63d1:	mov    rcx,rbx
    63d4:	mov    rdi,rbp
    63d7:	mov    rdx,rax
    63da:	mov    esi,0x1
    63df:	pop    rbx
    63e0:	pop    rbp
    63e1:	pop    r12
    63e3:	pop    r13
    63e5:	pop    r14
    63e7:	pop    r15
    63e9:	xor    eax,eax
    63eb:	jmp    2030 <__fprintf_chk@plt>
    63f0:	mov    r13,QWORD PTR [rbx+0x10]
    63f4:	mov    r12,QWORD PTR [rbx+0x8]
    63f8:	lea    rsi,[rip+0x1ee7]        # 82e6 <quoting_style_vals@@Base+0x66>
    63ff:	mov    rbx,QWORD PTR [rbx]
    6402:	mov    edx,0x5
    6407:	xor    edi,edi
    6409:	call   1d20 <dcgettext@plt>
    640e:	add    rsp,0x28
    6412:	mov    r9,r13
    6415:	mov    r8,r12
    6418:	mov    rcx,rbx
    641b:	mov    rdi,rbp
    641e:	mov    rdx,rax
    6421:	pop    rbx
    6422:	pop    rbp
    6423:	pop    r12
    6425:	pop    r13
    6427:	pop    r14
    6429:	pop    r15
    642b:	mov    esi,0x1
    6430:	xor    eax,eax
    6432:	jmp    2030 <__fprintf_chk@plt>
    6437:	nop    WORD PTR [rax+rax*1+0x0]
    6440:	lea    rsi,[rip+0x1fd1]        # 8418 <quoting_style_vals@@Base+0x198>
    6447:	mov    edx,0x5
    644c:	xor    edi,edi
    644e:	mov    r14,QWORD PTR [rbx+0x18]
    6452:	mov    r13,QWORD PTR [rbx+0x10]
    6456:	mov    r12,QWORD PTR [rbx+0x8]
    645a:	mov    rbx,QWORD PTR [rbx]
    645d:	call   1d20 <dcgettext@plt>
    6462:	sub    rsp,0x8
    6466:	push   r14
    6468:	mov    rdx,rax
    646b:	mov    r9,r13
    646e:	mov    r8,r12
    6471:	mov    rcx,rbx
    6474:	mov    rdi,rbp
    6477:	mov    esi,0x1
    647c:	xor    eax,eax
    647e:	call   2030 <__fprintf_chk@plt>
    6483:	pop    rax
    6484:	pop    rdx
    6485:	add    rsp,0x28
    6489:	pop    rbx
    648a:	pop    rbp
    648b:	pop    r12
    648d:	pop    r13
    648f:	pop    r14
    6491:	pop    r15
    6493:	ret    
    6494:	nop    DWORD PTR [rax+0x0]
    6498:	mov    r15,QWORD PTR [rbx+0x20]
    649c:	lea    rsi,[rip+0x1f95]        # 8438 <quoting_style_vals@@Base+0x1b8>
    64a3:	mov    edx,0x5
    64a8:	xor    edi,edi
    64aa:	mov    r14,QWORD PTR [rbx+0x18]
    64ae:	mov    r13,QWORD PTR [rbx+0x10]
    64b2:	mov    r12,QWORD PTR [rbx+0x8]
    64b6:	mov    rbx,QWORD PTR [rbx]
    64b9:	call   1d20 <dcgettext@plt>
    64be:	push   r15
    64c0:	jmp    6466 <__cxa_finalize@plt+0x43d6>
    64c2:	nop    WORD PTR [rax+rax*1+0x0]
    64c8:	mov    r8,QWORD PTR [rbx+0x8]
    64cc:	mov    r12,QWORD PTR [rbx+0x28]
    64d0:	lea    rsi,[rip+0x1f89]        # 8460 <quoting_style_vals@@Base+0x1e0>
    64d7:	mov    r15,QWORD PTR [rbx+0x20]
    64db:	mov    r14,QWORD PTR [rbx+0x18]
    64df:	mov    edx,0x5
    64e4:	mov    r13,QWORD PTR [rbx+0x10]
    64e8:	xor    edi,edi
    64ea:	mov    rbx,QWORD PTR [rbx]
    64ed:	mov    QWORD PTR [rsp],r8
    64f1:	call   1d20 <dcgettext@plt>
    64f6:	sub    rsp,0x8
    64fa:	mov    r9,r13
    64fd:	push   r12
    64ff:	push   r15
    6501:	push   r14
    6503:	mov    r8,QWORD PTR [rsp+0x20]
    6508:	mov    rcx,rbx
    650b:	mov    rdx,rax
    650e:	mov    rdi,rbp
    6511:	mov    esi,0x1
    6516:	xor    eax,eax
    6518:	call   2030 <__fprintf_chk@plt>
    651d:	add    rsp,0x20
    6521:	add    rsp,0x28
    6525:	pop    rbx
    6526:	pop    rbp
    6527:	pop    r12
    6529:	pop    r13
    652b:	pop    r14
    652d:	pop    r15
    652f:	ret    
    6530:	mov    r9,QWORD PTR [rbx+0x10]
    6534:	mov    r13,QWORD PTR [rbx+0x30]
    6538:	lea    rsi,[rip+0x1f49]        # 8488 <quoting_style_vals@@Base+0x208>
    653f:	mov    r12,QWORD PTR [rbx+0x28]
    6543:	mov    r15,QWORD PTR [rbx+0x20]
    6547:	mov    edx,0x5
    654c:	mov    r14,QWORD PTR [rbx+0x18]
    6550:	mov    r8,QWORD PTR [rbx+0x8]
    6554:	xor    edi,edi
    6556:	mov    QWORD PTR [rsp+0x8],r9
    655b:	mov    rbx,QWORD PTR [rbx]
    655e:	mov    QWORD PTR [rsp],r8
    6562:	call   1d20 <dcgettext@plt>
    6567:	push   r13
    6569:	push   r12
    656b:	push   r15
    656d:	push   r14
    656f:	mov    r9,QWORD PTR [rsp+0x28]
    6574:	jmp    6503 <__cxa_finalize@plt+0x4473>
    6576:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6580:	mov    r10,QWORD PTR [rbx+0x40]
    6584:	mov    r9,QWORD PTR [rbx+0x38]
    6588:	mov    edx,0x5
    658d:	mov    rax,QWORD PTR [rbx+0x10]
    6591:	mov    r8,QWORD PTR [rbx+0x8]
    6595:	lea    rsi,[rip+0x1f84]        # 8520 <quoting_style_vals@@Base+0x2a0>
    659c:	mov    r13,QWORD PTR [rbx+0x30]
    65a0:	mov    r12,QWORD PTR [rbx+0x28]
    65a4:	mov    r15,QWORD PTR [rbx+0x20]
    65a8:	mov    r14,QWORD PTR [rbx+0x18]
    65ac:	mov    QWORD PTR [rsp+0x18],r10
    65b1:	mov    QWORD PTR [rsp+0x10],r9
    65b6:	mov    QWORD PTR [rsp],rax
    65ba:	mov    QWORD PTR [rsp+0x8],r8
    65bf:	mov    rbx,QWORD PTR [rbx]
    65c2:	jmp    635a <__cxa_finalize@plt+0x42ca>
    65c7:	call   1c80 <abort@plt>
    65cc:	nop    DWORD PTR [rax+0x0]
    65d0:	xor    r9d,r9d
    65d3:	cmp    QWORD PTR [r8],0x0
    65d7:	je     65eb <__cxa_finalize@plt+0x455b>
    65d9:	nop    DWORD PTR [rax+0x0]
    65e0:	add    r9,0x1
    65e4:	cmp    QWORD PTR [r8+r9*8],0x0
    65e9:	jne    65e0 <__cxa_finalize@plt+0x4550>
    65eb:	jmp    61c0 <__cxa_finalize@plt+0x4130>
    65f0:	sub    rsp,0x68
    65f4:	mov    r10,r8
    65f7:	xor    r9d,r9d
    65fa:	mov    rax,QWORD PTR fs:0x28
    6603:	mov    QWORD PTR [rsp+0x58],rax
    6608:	xor    eax,eax
    660a:	mov    r8,rsp
    660d:	nop    DWORD PTR [rax]
    6610:	mov    eax,DWORD PTR [r10]
    6613:	cmp    eax,0x2f
    6616:	ja     665a <__cxa_finalize@plt+0x45ca>
    6618:	mov    r11d,eax
    661b:	add    r11,QWORD PTR [r10+0x10]
    661f:	add    eax,0x8
    6622:	mov    DWORD PTR [r10],eax
    6625:	mov    rax,QWORD PTR [r11]
    6628:	test   rax,rax
    662b:	mov    QWORD PTR [r8+r9*8],rax
    662f:	je     663b <__cxa_finalize@plt+0x45ab>
    6631:	add    r9,0x1
    6635:	cmp    r9,0xa
    6639:	jne    6610 <__cxa_finalize@plt+0x4580>
    663b:	call   61c0 <__cxa_finalize@plt+0x4130>
    6640:	mov    rax,QWORD PTR [rsp+0x58]
    6645:	xor    rax,QWORD PTR fs:0x28
    664e:	jne    6655 <__cxa_finalize@plt+0x45c5>
    6650:	add    rsp,0x68
    6654:	ret    
    6655:	call   1d50 <__stack_chk_fail@plt>
    665a:	mov    r11,QWORD PTR [r10+0x8]
    665e:	lea    rax,[r11+0x8]
    6662:	mov    QWORD PTR [r10+0x8],rax
    6666:	jmp    6625 <__cxa_finalize@plt+0x4595>
    6668:	nop    DWORD PTR [rax+rax*1+0x0]
    6670:	push   rbp
    6671:	push   rbx
    6672:	mov    r10d,0x20
    6678:	xor    r11d,r11d
    667b:	sub    rsp,0xb8
    6682:	mov    rax,QWORD PTR fs:0x28
    668b:	mov    QWORD PTR [rsp+0x78],rax
    6690:	xor    eax,eax
    6692:	lea    rax,[rsp+0xd0]
    669a:	mov    QWORD PTR [rsp+0xa0],r8
    66a2:	lea    rbx,[rsp+0xd0]
    66aa:	lea    r8,[rsp+0x20]
    66af:	mov    QWORD PTR [rsp+0xa8],r9
    66b7:	mov    DWORD PTR [rsp+0x8],0x20
    66bf:	mov    QWORD PTR [rsp+0x10],rax
    66c4:	lea    rax,[rsp+0x80]
    66cc:	xor    r9d,r9d
    66cf:	mov    QWORD PTR [rsp+0x18],rax
    66d4:	mov    rbp,rax
    66d7:	nop    WORD PTR [rax+rax*1+0x0]
    66e0:	cmp    r10d,0x2f
    66e4:	ja     673c <__cxa_finalize@plt+0x46ac>
    66e6:	mov    eax,r10d
    66e9:	mov    r11d,0x1
    66ef:	add    r10d,0x8
    66f3:	add    rax,rbp
    66f6:	mov    rax,QWORD PTR [rax]
    66f9:	test   rax,rax
    66fc:	mov    QWORD PTR [r8+r9*8],rax
    6700:	je     670c <__cxa_finalize@plt+0x467c>
    6702:	add    r9,0x1
    6706:	cmp    r9,0xa
    670a:	jne    66e0 <__cxa_finalize@plt+0x4650>
    670c:	test   r11b,r11b
    670f:	jne    6735 <__cxa_finalize@plt+0x46a5>
    6711:	call   61c0 <__cxa_finalize@plt+0x4130>
    6716:	mov    rax,QWORD PTR [rsp+0x78]
    671b:	xor    rax,QWORD PTR fs:0x28
    6724:	jne    6730 <__cxa_finalize@plt+0x46a0>
    6726:	add    rsp,0xb8
    672d:	pop    rbx
    672e:	pop    rbp
    672f:	ret    
    6730:	call   1d50 <__stack_chk_fail@plt>
    6735:	mov    DWORD PTR [rsp+0x8],r10d
    673a:	jmp    6711 <__cxa_finalize@plt+0x4681>
    673c:	mov    rax,rbx
    673f:	add    rbx,0x8
    6743:	jmp    66f6 <__cxa_finalize@plt+0x4666>
    6745:	nop
    6746:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6750:	push   rbx
    6751:	lea    rsi,[rip+0x1baa]        # 8302 <quoting_style_vals@@Base+0x82>
    6758:	mov    edx,0x5
    675d:	xor    edi,edi
    675f:	call   1d20 <dcgettext@plt>
    6764:	lea    rdx,[rip+0x1bac]        # 8317 <quoting_style_vals@@Base+0x97>
    676b:	mov    rsi,rax
    676e:	mov    edi,0x1
    6773:	xor    eax,eax
    6775:	call   1f60 <__printf_chk@plt>
    677a:	lea    rsi,[rip+0x1bac]        # 832d <quoting_style_vals@@Base+0xad>
    6781:	mov    edx,0x5
    6786:	xor    edi,edi
    6788:	call   1d20 <dcgettext@plt>
    678d:	lea    rcx,[rip+0x140c]        # 7ba0 <_IO_stdin_used@@Base+0x680>
    6794:	lea    rdx,[rip+0xe11]        # 75ac <_IO_stdin_used@@Base+0x8c>
    679b:	mov    rsi,rax
    679e:	mov    edi,0x1
    67a3:	xor    eax,eax
    67a5:	call   1f60 <__printf_chk@plt>
    67aa:	mov    rbx,QWORD PTR [rip+0x2038f7]        # 20a0a8 <stdout@@GLIBC_2.2.5>
    67b1:	lea    rsi,[rip+0x1da8]        # 8560 <quoting_style_vals@@Base+0x2e0>
    67b8:	xor    edi,edi
    67ba:	mov    edx,0x5
    67bf:	call   1d20 <dcgettext@plt>
    67c4:	mov    rsi,rbx
    67c7:	mov    rdi,rax
    67ca:	pop    rbx
    67cb:	jmp    1e50 <fputs_unlocked@plt>
    67d0:	push   rbx
    67d1:	mov    rbx,rdi
    67d4:	call   2088 <malloc@plt>
    67d9:	test   rax,rax
    67dc:	jne    67e3 <__cxa_finalize@plt+0x4753>
    67de:	test   rbx,rbx
    67e1:	jne    67e5 <__cxa_finalize@plt+0x4755>
    67e3:	pop    rbx
    67e4:	ret    
    67e5:	call   6a20 <__cxa_finalize@plt+0x4990>
    67ea:	nop    WORD PTR [rax+rax*1+0x0]
    67f0:	mov    rax,rdi
    67f3:	mul    rsi
    67f6:	mov    rdi,rax
    67f9:	seto   al
    67fc:	test   rdi,rdi
    67ff:	js     680b <__cxa_finalize@plt+0x477b>
    6801:	movzx  eax,al
    6804:	test   rax,rax
    6807:	jne    680b <__cxa_finalize@plt+0x477b>
    6809:	jmp    67d0 <__cxa_finalize@plt+0x4740>
    680b:	sub    rsp,0x8
    680f:	call   6a20 <__cxa_finalize@plt+0x4990>
    6814:	xchg   ax,ax
    6816:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6820:	jmp    67d0 <__cxa_finalize@plt+0x4740>
    6822:	nop    DWORD PTR [rax+0x0]
    6826:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6830:	test   rsi,rsi
    6833:	push   rbx
    6834:	mov    rbx,rsi
    6837:	jne    683e <__cxa_finalize@plt+0x47ae>
    6839:	test   rdi,rdi
    683c:	jne    6858 <__cxa_finalize@plt+0x47c8>
    683e:	mov    rsi,rbx
    6841:	call   1f30 <realloc@plt>
    6846:	test   rax,rax
    6849:	jne    6850 <__cxa_finalize@plt+0x47c0>
    684b:	test   rbx,rbx
    684e:	jne    6861 <__cxa_finalize@plt+0x47d1>
    6850:	pop    rbx
    6851:	ret    
    6852:	nop    WORD PTR [rax+rax*1+0x0]
    6858:	call   2080 <free@plt>
    685d:	xor    eax,eax
    685f:	pop    rbx
    6860:	ret    
    6861:	call   6a20 <__cxa_finalize@plt+0x4990>
    6866:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6870:	mov    rax,rsi
    6873:	mul    rdx
    6876:	mov    rsi,rax
    6879:	seto   al
    687c:	test   rsi,rsi
    687f:	js     688b <__cxa_finalize@plt+0x47fb>
    6881:	movzx  eax,al
    6884:	test   rax,rax
    6887:	jne    688b <__cxa_finalize@plt+0x47fb>
    6889:	jmp    6830 <__cxa_finalize@plt+0x47a0>
    688b:	sub    rsp,0x8
    688f:	call   6a20 <__cxa_finalize@plt+0x4990>
    6894:	xchg   ax,ax
    6896:	nop    WORD PTR cs:[rax+rax*1+0x0]
    68a0:	test   rdi,rdi
    68a3:	mov    r9,rdx
    68a6:	mov    rcx,QWORD PTR [rsi]
    68a9:	je     68e0 <__cxa_finalize@plt+0x4850>
    68ab:	xor    edx,edx
    68ad:	movabs rax,0x5555555555555554
    68b7:	div    r9
    68ba:	cmp    rax,rcx
    68bd:	jbe    68fb <__cxa_finalize@plt+0x486b>
    68bf:	mov    rax,rcx
    68c2:	shr    rax,1
    68c5:	lea    rcx,[rax+rcx*1+0x1]
    68ca:	mov    QWORD PTR [rsi],rcx
    68cd:	imul   rcx,r9
    68d1:	mov    rsi,rcx
    68d4:	jmp    6830 <__cxa_finalize@plt+0x47a0>
    68d9:	nop    DWORD PTR [rax+0x0]
    68e0:	test   rcx,rcx
    68e3:	je     6908 <__cxa_finalize@plt+0x4878>
    68e5:	mov    rax,rcx
    68e8:	mul    r9
    68eb:	seto   dl
    68ee:	test   rax,rax
    68f1:	movzx  edx,dl
    68f4:	js     68fb <__cxa_finalize@plt+0x486b>
    68f6:	test   rdx,rdx
    68f9:	je     68ca <__cxa_finalize@plt+0x483a>
    68fb:	sub    rsp,0x8
    68ff:	call   6a20 <__cxa_finalize@plt+0x4990>
    6904:	nop    DWORD PTR [rax+0x0]
    6908:	xor    edx,edx
    690a:	mov    eax,0x80
    690f:	xor    r8d,r8d
    6912:	div    r9
    6915:	test   rax,rax
    6918:	sete   r8b
    691c:	lea    rcx,[r8+rax*1]
    6920:	jmp    68e5 <__cxa_finalize@plt+0x4855>
    6922:	nop    DWORD PTR [rax+0x0]
    6926:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6930:	test   rdi,rdi
    6933:	mov    rax,QWORD PTR [rsi]
    6936:	je     6960 <__cxa_finalize@plt+0x48d0>
    6938:	movabs rdx,0x5555555555555553
    6942:	cmp    rax,rdx
    6945:	ja     6971 <__cxa_finalize@plt+0x48e1>
    6947:	mov    rdx,rax
    694a:	shr    rdx,1
    694d:	lea    rax,[rdx+rax*1+0x1]
    6952:	mov    QWORD PTR [rsi],rax
    6955:	mov    rsi,rax
    6958:	jmp    6830 <__cxa_finalize@plt+0x47a0>
    695d:	nop    DWORD PTR [rax]
    6960:	test   rax,rax
    6963:	mov    edx,0x80
    6968:	cmove  rax,rdx
    696c:	test   rax,rax
    696f:	jns    6952 <__cxa_finalize@plt+0x48c2>
    6971:	sub    rsp,0x8
    6975:	call   6a20 <__cxa_finalize@plt+0x4990>
    697a:	nop    WORD PTR [rax+rax*1+0x0]
    6980:	push   rbx
    6981:	mov    rbx,rdi
    6984:	call   67d0 <__cxa_finalize@plt+0x4740>
    6989:	mov    rdx,rbx
    698c:	xor    esi,esi
    698e:	mov    rdi,rax
    6991:	pop    rbx
    6992:	jmp    1dd0 <memset@plt>
    6997:	nop    WORD PTR [rax+rax*1+0x0]
    69a0:	mov    rax,rdi
    69a3:	sub    rsp,0x8
    69a7:	mul    rsi
    69aa:	seto   dl
    69ad:	test   rax,rax
    69b0:	js     69c9 <__cxa_finalize@plt+0x4939>
    69b2:	movzx  edx,dl
    69b5:	test   rdx,rdx
    69b8:	jne    69c9 <__cxa_finalize@plt+0x4939>
    69ba:	call   1e60 <calloc@plt>
    69bf:	test   rax,rax
    69c2:	je     69c9 <__cxa_finalize@plt+0x4939>
    69c4:	add    rsp,0x8
    69c8:	ret    
    69c9:	call   6a20 <__cxa_finalize@plt+0x4990>
    69ce:	xchg   ax,ax
    69d0:	push   rbp
    69d1:	push   rbx
    69d2:	mov    rbp,rdi
    69d5:	mov    rdi,rsi
    69d8:	mov    rbx,rsi
    69db:	sub    rsp,0x8
    69df:	call   67d0 <__cxa_finalize@plt+0x4740>
    69e4:	add    rsp,0x8
    69e8:	mov    rdx,rbx
    69eb:	mov    rsi,rbp
    69ee:	pop    rbx
    69ef:	pop    rbp
    69f0:	mov    rdi,rax
    69f3:	jmp    1ea0 <memcpy@plt>
    69f8:	nop    DWORD PTR [rax+rax*1+0x0]
    6a00:	push   rbx
    6a01:	mov    rbx,rdi
    6a04:	call   1d40 <strlen@plt>
    6a09:	mov    rdi,rbx
    6a0c:	lea    rsi,[rax+0x1]
    6a10:	pop    rbx
    6a11:	jmp    69d0 <__cxa_finalize@plt+0x4940>
    6a13:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6a1d:	nop    DWORD PTR [rax]
    6a20:	lea    rsi,[rip+0x1be8]        # 860f <version_etc_copyright@@Base+0x2f>
    6a27:	sub    rsp,0x8
    6a2b:	mov    edx,0x5
    6a30:	xor    edi,edi
    6a32:	call   1d20 <dcgettext@plt>
    6a37:	mov    edi,DWORD PTR [rip+0x2035db]        # 20a018 <exit_failure@@Base>
    6a3d:	lea    rdx,[rip+0x1309]        # 7d4d <_IO_stdin_used@@Base+0x82d>
    6a44:	mov    rcx,rax
    6a47:	xor    esi,esi
    6a49:	xor    eax,eax
    6a4b:	call   1f90 <error@plt>
    6a50:	call   1c80 <abort@plt>
    6a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6a5f:	nop
    6a60:	push   r12
    6a62:	push   rbp
    6a63:	push   rbx
    6a64:	mov    rbx,rdi
    6a67:	call   1eb0 <fileno@plt>
    6a6c:	test   eax,eax
    6a6e:	mov    rdi,rbx
    6a71:	js     6ac7 <__cxa_finalize@plt+0x4a37>
    6a73:	call   1f20 <__freading@plt>
    6a78:	test   eax,eax
    6a7a:	jne    6aa8 <__cxa_finalize@plt+0x4a18>
    6a7c:	mov    rdi,rbx
    6a7f:	call   6ae0 <__cxa_finalize@plt+0x4a50>
    6a84:	test   eax,eax
    6a86:	je     6ac4 <__cxa_finalize@plt+0x4a34>
    6a88:	call   1c90 <__errno_location@plt>
    6a8d:	mov    r12d,DWORD PTR [rax]
    6a90:	mov    rdi,rbx
    6a93:	mov    rbp,rax
    6a96:	call   1d00 <fclose@plt>
    6a9b:	test   r12d,r12d
    6a9e:	jne    6ad0 <__cxa_finalize@plt+0x4a40>
    6aa0:	pop    rbx
    6aa1:	pop    rbp
    6aa2:	pop    r12
    6aa4:	ret    
    6aa5:	nop    DWORD PTR [rax]
    6aa8:	mov    rdi,rbx
    6aab:	call   1eb0 <fileno@plt>
    6ab0:	xor    esi,esi
    6ab2:	mov    edx,0x1
    6ab7:	mov    edi,eax
    6ab9:	call   1db0 <lseek@plt>
    6abe:	cmp    rax,0xffffffffffffffff
    6ac2:	jne    6a7c <__cxa_finalize@plt+0x49ec>
    6ac4:	mov    rdi,rbx
    6ac7:	pop    rbx
    6ac8:	pop    rbp
    6ac9:	pop    r12
    6acb:	jmp    1d00 <fclose@plt>
    6ad0:	mov    DWORD PTR [rbp+0x0],r12d
    6ad4:	mov    eax,0xffffffff
    6ad9:	jmp    6aa0 <__cxa_finalize@plt+0x4a10>
    6adb:	nop    DWORD PTR [rax+rax*1+0x0]
    6ae0:	test   rdi,rdi
    6ae3:	push   rbx
    6ae4:	mov    rbx,rdi
    6ae7:	je     6afa <__cxa_finalize@plt+0x4a6a>
    6ae9:	call   1f20 <__freading@plt>
    6aee:	test   eax,eax
    6af0:	je     6afa <__cxa_finalize@plt+0x4a6a>
    6af2:	test   DWORD PTR [rbx],0x100
    6af8:	jne    6b08 <__cxa_finalize@plt+0x4a78>
    6afa:	mov    rdi,rbx
    6afd:	pop    rbx
    6afe:	jmp    1ee0 <fflush@plt>
    6b03:	nop    DWORD PTR [rax+rax*1+0x0]
    6b08:	mov    rdi,rbx
    6b0b:	mov    edx,0x1
    6b10:	xor    esi,esi
    6b12:	call   6b20 <__cxa_finalize@plt+0x4a90>
    6b17:	mov    rdi,rbx
    6b1a:	pop    rbx
    6b1b:	jmp    1ee0 <fflush@plt>
    6b20:	mov    rax,QWORD PTR [rdi+0x8]
    6b24:	cmp    QWORD PTR [rdi+0x10],rax
    6b28:	je     6b30 <__cxa_finalize@plt+0x4aa0>
    6b2a:	jmp    1fb0 <fseeko@plt>
    6b2f:	nop
    6b30:	mov    rax,QWORD PTR [rdi+0x20]
    6b34:	cmp    QWORD PTR [rdi+0x28],rax
    6b38:	jne    6b2a <__cxa_finalize@plt+0x4a9a>
    6b3a:	cmp    QWORD PTR [rdi+0x48],0x0
    6b3f:	jne    6b2a <__cxa_finalize@plt+0x4a9a>
    6b41:	push   r12
    6b43:	push   rbp
    6b44:	mov    r12d,edx
    6b47:	push   rbx
    6b48:	mov    rbp,rsi
    6b4b:	mov    rbx,rdi
    6b4e:	call   1eb0 <fileno@plt>
    6b53:	mov    edx,r12d
    6b56:	mov    rsi,rbp
    6b59:	mov    edi,eax
    6b5b:	call   1db0 <lseek@plt>
    6b60:	cmp    rax,0xffffffffffffffff
    6b64:	je     6b72 <__cxa_finalize@plt+0x4ae2>
    6b66:	and    DWORD PTR [rbx],0xffffffef
    6b69:	mov    QWORD PTR [rbx+0x90],rax
    6b70:	xor    eax,eax
    6b72:	pop    rbx
    6b73:	pop    rbp
    6b74:	pop    r12
    6b76:	ret    
    6b77:	nop    WORD PTR [rax+rax*1+0x0]
    6b80:	push   r13
    6b82:	push   r12
    6b84:	mov    r13,rsi
    6b87:	push   rbp
    6b88:	push   rbx
    6b89:	mov    rbx,rdi
    6b8c:	mov    r12,rdx
    6b8f:	sub    rsp,0x18
    6b93:	mov    rax,QWORD PTR fs:0x28
    6b9c:	mov    QWORD PTR [rsp+0x8],rax
    6ba1:	xor    eax,eax
    6ba3:	lea    rax,[rsp+0x4]
    6ba8:	test   rdi,rdi
    6bab:	cmove  rbx,rax
    6baf:	mov    rdi,rbx
    6bb2:	call   1d70 <mbrtowc@plt>
    6bb7:	cmp    rax,0xfffffffffffffffd
    6bbb:	mov    rbp,rax
    6bbe:	jbe    6be0 <__cxa_finalize@plt+0x4b50>
    6bc0:	test   r12,r12
    6bc3:	je     6be0 <__cxa_finalize@plt+0x4b50>
    6bc5:	xor    edi,edi
    6bc7:	call   6fb0 <_obstack_memory_used@@Base+0xb0>
    6bcc:	test   al,al
    6bce:	jne    6be0 <__cxa_finalize@plt+0x4b50>
    6bd0:	movzx  eax,BYTE PTR [r13+0x0]
    6bd5:	mov    ebp,0x1
    6bda:	mov    DWORD PTR [rbx],eax
    6bdc:	nop    DWORD PTR [rax+0x0]
    6be0:	mov    rdx,QWORD PTR [rsp+0x8]
    6be5:	xor    rdx,QWORD PTR fs:0x28
    6bee:	mov    rax,rbp
    6bf1:	jne    6bfe <__cxa_finalize@plt+0x4b6e>
    6bf3:	add    rsp,0x18
    6bf7:	pop    rbx
    6bf8:	pop    rbp
    6bf9:	pop    r12
    6bfb:	pop    r13
    6bfd:	ret    
    6bfe:	call   1d50 <__stack_chk_fail@plt>
    6c03:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c0d:	nop    DWORD PTR [rax]
    6c10:	lea    rsi,[rip+0x19f8]        # 860f <version_etc_copyright@@Base+0x2f>
    6c17:	sub    rsp,0x8
    6c1b:	mov    edx,0x5
    6c20:	xor    edi,edi
    6c22:	call   1d20 <dcgettext@plt>
    6c27:	mov    rdi,QWORD PTR [rip+0x2034b2]        # 20a0e0 <stderr@@GLIBC_2.2.5>
    6c2e:	lea    rdx,[rip+0x167b]        # 82b0 <quoting_style_vals@@Base+0x30>
    6c35:	mov    rcx,rax
    6c38:	mov    esi,0x1
    6c3d:	xor    eax,eax
    6c3f:	call   2030 <__fprintf_chk@plt>
    6c44:	mov    edi,DWORD PTR [rip+0x2033ce]        # 20a018 <exit_failure@@Base>
    6c4a:	call   2010 <exit@plt>
    6c4f:	nop
    6c50:	test   BYTE PTR [rdi+0x50],0x1
    6c54:	mov    rax,QWORD PTR [rdi+0x38]
    6c58:	jne    6c60 <__cxa_finalize@plt+0x4bd0>
    6c5a:	mov    rdi,rsi
    6c5d:	jmp    rax
    6c5f:	nop
    6c60:	mov    rdi,QWORD PTR [rdi+0x48]
    6c64:	jmp    rax
    6c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c70:	test   BYTE PTR [rdi+0x50],0x1
    6c74:	mov    rax,QWORD PTR [rdi+0x40]
    6c78:	jne    6c80 <__cxa_finalize@plt+0x4bf0>
    6c7a:	mov    rdi,rsi
    6c7d:	jmp    rax
    6c7f:	nop
    6c80:	mov    rdi,QWORD PTR [rdi+0x48]
    6c84:	jmp    rax
    6c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c90:	test   rdx,rdx
    6c93:	push   r12
    6c95:	push   rbp
    6c96:	push   rbx
    6c97:	mov    rbx,rdi
    6c9a:	je     6d00 <__cxa_finalize@plt+0x4c70>
    6c9c:	lea    r12,[rdx-0x1]
    6ca0:	mov    rbp,rdx
    6ca3:	test   rsi,rsi
    6ca6:	mov    eax,0xfe0
    6cab:	mov    QWORD PTR [rbx+0x30],r12
    6caf:	cmove  rsi,rax
    6cb3:	mov    rdi,rbx
    6cb6:	mov    QWORD PTR [rbx],rsi
    6cb9:	call   6c50 <__cxa_finalize@plt+0x4bc0>
    6cbe:	test   rax,rax
    6cc1:	mov    QWORD PTR [rbx+0x8],rax
    6cc5:	je     6d0d <__cxa_finalize@plt+0x4c7d>
    6cc7:	lea    rdx,[rax+r12*1+0x10]
    6ccc:	neg    rbp
    6ccf:	and    rbp,rdx
    6cd2:	mov    rdx,QWORD PTR [rbx]
    6cd5:	mov    QWORD PTR [rbx+0x10],rbp
    6cd9:	mov    QWORD PTR [rbx+0x18],rbp
    6cdd:	add    rdx,rax
    6ce0:	mov    QWORD PTR [rax],rdx
    6ce3:	mov    QWORD PTR [rbx+0x20],rdx
    6ce7:	mov    QWORD PTR [rax+0x8],0x0
    6cef:	mov    eax,0x1
    6cf4:	and    BYTE PTR [rbx+0x50],0xf9
    6cf8:	pop    rbx
    6cf9:	pop    rbp
    6cfa:	pop    r12
    6cfc:	ret    
    6cfd:	nop    DWORD PTR [rax]
    6d00:	mov    r12d,0xf
    6d06:	mov    ebp,0x10
    6d0b:	jmp    6ca3 <__cxa_finalize@plt+0x4c13>
    6d0d:	call   QWORD PTR [rip+0x20336d]        # 20a080 <obstack_alloc_failed_handler@@Base>
    6d13:	nop    DWORD PTR [rax]
    6d16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006d20 <_obstack_begin@@Base>:
    6d20:	and    BYTE PTR [rdi+0x50],0xfe
    6d24:	mov    QWORD PTR [rdi+0x38],rcx
    6d28:	mov    QWORD PTR [rdi+0x40],r8
    6d2c:	jmp    6c90 <__cxa_finalize@plt+0x4c00>
    6d31:	nop    DWORD PTR [rax+rax*1+0x0]
    6d36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006d40 <_obstack_begin_1@@Base>:
    6d40:	or     BYTE PTR [rdi+0x50],0x1
    6d44:	mov    QWORD PTR [rdi+0x38],rcx
    6d48:	mov    QWORD PTR [rdi+0x40],r8
    6d4c:	mov    QWORD PTR [rdi+0x48],r9
    6d50:	jmp    6c90 <__cxa_finalize@plt+0x4c00>
    6d55:	nop
    6d56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006d60 <_obstack_newchunk@@Base>:
    6d60:	push   r14
    6d62:	push   r13
    6d64:	xor    edx,edx
    6d66:	push   r12
    6d68:	push   rbp
    6d69:	push   rbx
    6d6a:	mov    rbx,QWORD PTR [rdi+0x18]
    6d6e:	sub    rbx,QWORD PTR [rdi+0x10]
    6d72:	mov    rbp,QWORD PTR [rdi+0x8]
    6d76:	add    rsi,rbx
    6d79:	mov    rcx,rbx
    6d7c:	setb   dl
    6d7f:	add    rsi,QWORD PTR [rdi+0x30]
    6d83:	setb   al
    6d86:	shr    rcx,0x3
    6d8a:	cmp    QWORD PTR [rdi],rsi
    6d8d:	lea    r12,[rsi+rcx*1+0x64]
    6d92:	cmovae rsi,QWORD PTR [rdi]
    6d96:	cmp    rsi,r12
    6d99:	cmovae r12,rsi
    6d9d:	test   rdx,rdx
    6da0:	jne    6e45 <_obstack_newchunk@@Base+0xe5>
    6da6:	movzx  eax,al
    6da9:	test   rax,rax
    6dac:	jne    6e45 <_obstack_newchunk@@Base+0xe5>
    6db2:	mov    rsi,r12
    6db5:	mov    r13,rdi
    6db8:	call   6c50 <__cxa_finalize@plt+0x4bc0>
    6dbd:	test   rax,rax
    6dc0:	mov    r14,rax
    6dc3:	je     6e45 <_obstack_newchunk@@Base+0xe5>
    6dc9:	lea    rsi,[rax+r12*1]
    6dcd:	mov    QWORD PTR [r13+0x8],rax
    6dd1:	mov    QWORD PTR [rax+0x8],rbp
    6dd5:	mov    rdx,rbx
    6dd8:	mov    QWORD PTR [r13+0x20],rsi
    6ddc:	mov    QWORD PTR [rax],rsi
    6ddf:	mov    rax,QWORD PTR [r13+0x30]
    6de3:	mov    rsi,QWORD PTR [r13+0x10]
    6de7:	lea    r12,[r14+rax*1+0x10]
    6dec:	not    rax
    6def:	and    r12,rax
    6df2:	mov    rdi,r12
    6df5:	call   1ea0 <memcpy@plt>
    6dfa:	test   BYTE PTR [r13+0x50],0x2
    6dff:	jne    6e16 <_obstack_newchunk@@Base+0xb6>
    6e01:	mov    rax,QWORD PTR [r13+0x30]
    6e05:	lea    rdx,[rbp+rax*1+0x10]
    6e0a:	not    rax
    6e0d:	and    rax,rdx
    6e10:	cmp    QWORD PTR [r13+0x10],rax
    6e14:	je     6e30 <_obstack_newchunk@@Base+0xd0>
    6e16:	and    BYTE PTR [r13+0x50],0xfd
    6e1b:	add    rbx,r12
    6e1e:	mov    QWORD PTR [r13+0x10],r12
    6e22:	mov    QWORD PTR [r13+0x18],rbx
    6e26:	pop    rbx
    6e27:	pop    rbp
    6e28:	pop    r12
    6e2a:	pop    r13
    6e2c:	pop    r14
    6e2e:	ret    
    6e2f:	nop
    6e30:	mov    rax,QWORD PTR [rbp+0x8]
    6e34:	mov    rsi,rbp
    6e37:	mov    rdi,r13
    6e3a:	mov    QWORD PTR [r14+0x8],rax
    6e3e:	call   6c70 <__cxa_finalize@plt+0x4be0>
    6e43:	jmp    6e16 <_obstack_newchunk@@Base+0xb6>
    6e45:	call   QWORD PTR [rip+0x203235]        # 20a080 <obstack_alloc_failed_handler@@Base>
    6e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006e50 <_obstack_allocated_p@@Base>:
    6e50:	mov    rax,QWORD PTR [rdi+0x8]
    6e54:	test   rax,rax
    6e57:	je     6e86 <_obstack_allocated_p@@Base+0x36>
    6e59:	nop    DWORD PTR [rax+0x0]
    6e60:	cmp    rsi,rax
    6e63:	jbe    6e6a <_obstack_allocated_p@@Base+0x1a>
    6e65:	cmp    QWORD PTR [rax],rsi
    6e68:	jae    6e80 <_obstack_allocated_p@@Base+0x30>
    6e6a:	mov    rax,QWORD PTR [rax+0x8]
    6e6e:	test   rax,rax
    6e71:	jne    6e60 <_obstack_allocated_p@@Base+0x10>
    6e73:	xor    eax,eax
    6e75:	ret    
    6e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6e80:	mov    eax,0x1
    6e85:	ret    
    6e86:	repz ret 
    6e88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006e90 <_obstack_free@@Base>:
    6e90:	push   r12
    6e92:	push   rbp
    6e93:	mov    rbp,rsi
    6e96:	push   rbx
    6e97:	mov    rsi,QWORD PTR [rdi+0x8]
    6e9b:	mov    rbx,rdi
    6e9e:	test   rsi,rsi
    6ea1:	je     6ecd <_obstack_free@@Base+0x3d>
    6ea3:	nop    DWORD PTR [rax+rax*1+0x0]
    6ea8:	cmp    rsi,rbp
    6eab:	jae    6eb5 <_obstack_free@@Base+0x25>
    6ead:	mov    rax,QWORD PTR [rsi]
    6eb0:	cmp    rax,rbp
    6eb3:	jae    6ee0 <_obstack_free@@Base+0x50>
    6eb5:	mov    r12,QWORD PTR [rsi+0x8]
    6eb9:	mov    rdi,rbx
    6ebc:	call   6c70 <__cxa_finalize@plt+0x4be0>
    6ec1:	or     BYTE PTR [rbx+0x50],0x2
    6ec5:	test   r12,r12
    6ec8:	mov    rsi,r12
    6ecb:	jne    6ea8 <_obstack_free@@Base+0x18>
    6ecd:	test   rbp,rbp
    6ed0:	jne    6ef5 <_obstack_free@@Base+0x65>
    6ed2:	pop    rbx
    6ed3:	pop    rbp
    6ed4:	pop    r12
    6ed6:	ret    
    6ed7:	nop    WORD PTR [rax+rax*1+0x0]
    6ee0:	mov    QWORD PTR [rbx+0x18],rbp
    6ee4:	mov    QWORD PTR [rbx+0x10],rbp
    6ee8:	mov    QWORD PTR [rbx+0x20],rax
    6eec:	mov    QWORD PTR [rbx+0x8],rsi
    6ef0:	pop    rbx
    6ef1:	pop    rbp
    6ef2:	pop    r12
    6ef4:	ret    
    6ef5:	call   1c80 <abort@plt>
    6efa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006f00 <_obstack_memory_used@@Base>:
    6f00:	mov    rdx,QWORD PTR [rdi+0x8]
    6f04:	xor    eax,eax
    6f06:	test   rdx,rdx
    6f09:	je     6f28 <_obstack_memory_used@@Base+0x28>
    6f0b:	nop    DWORD PTR [rax+rax*1+0x0]
    6f10:	mov    rcx,QWORD PTR [rdx]
    6f13:	sub    rcx,rdx
    6f16:	mov    rdx,QWORD PTR [rdx+0x8]
    6f1a:	add    rax,rcx
    6f1d:	test   rdx,rdx
    6f20:	jne    6f10 <_obstack_memory_used@@Base+0x10>
    6f22:	repz ret 
    6f24:	nop    DWORD PTR [rax+0x0]
    6f28:	repz ret 
    6f2a:	nop    WORD PTR [rax+rax*1+0x0]
    6f30:	push   r12
    6f32:	push   rbp
    6f33:	mov    rbp,rdi
    6f36:	push   rbx
    6f37:	call   1cc0 <__fpending@plt>
    6f3c:	mov    ebx,DWORD PTR [rbp+0x0]
    6f3f:	mov    rdi,rbp
    6f42:	mov    r12,rax
    6f45:	call   6a60 <__cxa_finalize@plt+0x49d0>
    6f4a:	and    ebx,0x20
    6f4d:	test   ebx,ebx
    6f4f:	jne    6f68 <_obstack_memory_used@@Base+0x68>
    6f51:	test   eax,eax
    6f53:	je     6f5f <_obstack_memory_used@@Base+0x5f>
    6f55:	test   r12,r12
    6f58:	mov    eax,0xffffffff
    6f5d:	je     6f98 <_obstack_memory_used@@Base+0x98>
    6f5f:	pop    rbx
    6f60:	pop    rbp
    6f61:	pop    r12
    6f63:	ret    
    6f64:	nop    DWORD PTR [rax+0x0]
    6f68:	test   eax,eax
    6f6a:	jne    6f88 <_obstack_memory_used@@Base+0x88>
    6f6c:	call   1c90 <__errno_location@plt>
    6f71:	mov    DWORD PTR [rax],0x0
    6f77:	mov    eax,0xffffffff
    6f7c:	pop    rbx
    6f7d:	pop    rbp
    6f7e:	pop    r12
    6f80:	ret    
    6f81:	nop    DWORD PTR [rax+0x0]
    6f88:	pop    rbx
    6f89:	mov    eax,0xffffffff
    6f8e:	pop    rbp
    6f8f:	pop    r12
    6f91:	ret    
    6f92:	nop    WORD PTR [rax+rax*1+0x0]
    6f98:	call   1c90 <__errno_location@plt>
    6f9d:	cmp    DWORD PTR [rax],0x9
    6fa0:	pop    rbx
    6fa1:	pop    rbp
    6fa2:	pop    r12
    6fa4:	setne  al
    6fa7:	movzx  eax,al
    6faa:	neg    eax
    6fac:	ret    
    6fad:	nop    DWORD PTR [rax]
    6fb0:	sub    rsp,0x8
    6fb4:	xor    esi,esi
    6fb6:	call   1f50 <setlocale@plt>
    6fbb:	mov    rdx,rax
    6fbe:	mov    eax,0x1
    6fc3:	test   rdx,rdx
    6fc6:	je     6fe7 <_obstack_memory_used@@Base+0xe7>
    6fc8:	lea    rdi,[rip+0x1651]        # 8620 <version_etc_copyright@@Base+0x40>
    6fcf:	mov    ecx,0x2
    6fd4:	mov    rsi,rdx
    6fd7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6fd9:	seta   sil
    6fdd:	setb   cl
    6fe0:	xor    eax,eax
    6fe2:	cmp    sil,cl
    6fe5:	jne    6ff0 <_obstack_memory_used@@Base+0xf0>
    6fe7:	add    rsp,0x8
    6feb:	ret    
    6fec:	nop    DWORD PTR [rax+0x0]
    6ff0:	lea    rdi,[rip+0x162b]        # 8622 <version_etc_copyright@@Base+0x42>
    6ff7:	mov    ecx,0x6
    6ffc:	mov    rsi,rdx
    6fff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7001:	setne  al
    7004:	add    rsp,0x8
    7008:	ret    
    7009:	nop    DWORD PTR [rax+0x0]
    7010:	push   r15
    7012:	push   r14
    7014:	mov    edi,0xe
    7019:	push   r13
    701b:	push   r12
    701d:	push   rbp
    701e:	push   rbx
    701f:	sub    rsp,0xa8
    7026:	mov    rax,QWORD PTR fs:0x28
    702f:	mov    QWORD PTR [rsp+0x98],rax
    7037:	xor    eax,eax
    7039:	call   1ef0 <nl_langinfo@plt>
    703e:	mov    r15,QWORD PTR [rip+0x203253]        # 20a298 <program_name@@Base+0x150>
    7045:	test   rax,rax
    7048:	mov    rbx,rax
    704b:	lea    rax,[rip+0x12af]        # 8301 <quoting_style_vals@@Base+0x81>
    7052:	cmove  rbx,rax
    7056:	test   r15,r15
    7059:	jne    707a <_obstack_memory_used@@Base+0x17a>
    705b:	jmp    70f0 <_obstack_memory_used@@Base+0x1f0>
    7060:	mov    rdi,r15
    7063:	call   1d40 <strlen@plt>
    7068:	lea    rbp,[r15+rax*1+0x1]
    706d:	mov    rdi,rbp
    7070:	call   1d40 <strlen@plt>
    7075:	lea    r15,[rbp+rax*1+0x1]
    707a:	movzx  ebp,BYTE PTR [r15]
    707e:	test   bpl,bpl
    7081:	je     70ac <_obstack_memory_used@@Base+0x1ac>
    7083:	mov    rsi,r15
    7086:	mov    rdi,rbx
    7089:	call   1e70 <strcmp@plt>
    708e:	test   eax,eax
    7090:	je     709f <_obstack_memory_used@@Base+0x19f>
    7092:	cmp    bpl,0x2a
    7096:	jne    7060 <_obstack_memory_used@@Base+0x160>
    7098:	cmp    BYTE PTR [r15+0x1],0x0
    709d:	jne    7060 <_obstack_memory_used@@Base+0x160>
    709f:	mov    rdi,r15
    70a2:	call   1d40 <strlen@plt>
    70a7:	lea    rbx,[r15+rax*1+0x1]
    70ac:	cmp    BYTE PTR [rbx],0x0
    70af:	lea    rax,[rip+0x1572]        # 8628 <version_etc_copyright@@Base+0x48>
    70b6:	cmove  rbx,rax
    70ba:	mov    rcx,QWORD PTR [rsp+0x98]
    70c2:	xor    rcx,QWORD PTR fs:0x28
    70cb:	mov    rax,rbx
    70ce:	jne    744c <_obstack_memory_used@@Base+0x54c>
    70d4:	add    rsp,0xa8
    70db:	pop    rbx
    70dc:	pop    rbp
    70dd:	pop    r12
    70df:	pop    r13
    70e1:	pop    r14
    70e3:	pop    r15
    70e5:	ret    
    70e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    70f0:	lea    rdi,[rip+0x1551]        # 8648 <version_etc_copyright@@Base+0x68>
    70f7:	call   1c70 <getenv@plt>
    70fc:	test   rax,rax
    70ff:	mov    r13,rax
    7102:	je     7150 <_obstack_memory_used@@Base+0x250>
    7104:	cmp    BYTE PTR [rax],0x0
    7107:	je     7150 <_obstack_memory_used@@Base+0x250>
    7109:	mov    rdi,rax
    710c:	call   1d40 <strlen@plt>
    7111:	test   rax,rax
    7114:	mov    r12,rax
    7117:	mov    r14,rax
    711a:	jne    743b <_obstack_memory_used@@Base+0x53b>
    7120:	mov    edi,0xe
    7125:	call   2088 <malloc@plt>
    712a:	test   rax,rax
    712d:	mov    rbp,rax
    7130:	jne    71d8 <_obstack_memory_used@@Base+0x2d8>
    7136:	lea    r15,[rip+0x11c4]        # 8301 <quoting_style_vals@@Base+0x81>
    713d:	mov    QWORD PTR [rip+0x203154],r15        # 20a298 <program_name@@Base+0x150>
    7144:	jmp    707a <_obstack_memory_used@@Base+0x17a>
    7149:	nop    DWORD PTR [rax+0x0]
    7150:	lea    r13,[rip+0x14d7]        # 862e <version_etc_copyright@@Base+0x4e>
    7157:	mov    edi,0x28
    715c:	mov    r12d,0x1a
    7162:	mov    r14d,0x19
    7168:	call   2088 <malloc@plt>
    716d:	test   rax,rax
    7170:	mov    rbp,rax
    7173:	je     7136 <_obstack_memory_used@@Base+0x236>
    7175:	mov    rdx,r14
    7178:	mov    rsi,r13
    717b:	mov    rdi,rbp
    717e:	call   1ea0 <memcpy@plt>
    7183:	mov    BYTE PTR [rbp+r14*1+0x0],0x2f
    7189:	add    r12,rbp
    718c:	movabs rax,0x2e74657372616863
    7196:	mov    esi,0x20000
    719b:	mov    QWORD PTR [r12],rax
    719f:	mov    eax,0x73
    71a4:	mov    DWORD PTR [r12+0x8],0x61696c61
    71ad:	mov    WORD PTR [r12+0xc],ax
    71b3:	mov    rdi,rbp
    71b6:	xor    eax,eax
    71b8:	call   1fa0 <open@plt>
    71bd:	test   eax,eax
    71bf:	mov    r12d,eax
    71c2:	jns    71e8 <_obstack_memory_used@@Base+0x2e8>
    71c4:	lea    r15,[rip+0x1136]        # 8301 <quoting_style_vals@@Base+0x81>
    71cb:	mov    rdi,rbp
    71ce:	call   2080 <free@plt>
    71d3:	jmp    713d <_obstack_memory_used@@Base+0x23d>
    71d8:	mov    rdx,r14
    71db:	mov    rsi,r13
    71de:	mov    rdi,rbp
    71e1:	call   1ea0 <memcpy@plt>
    71e6:	jmp    7189 <_obstack_memory_used@@Base+0x289>
    71e8:	lea    rsi,[rip+0x43b]        # 762a <_IO_stdin_used@@Base+0x10a>
    71ef:	mov    edi,eax
    71f1:	xor    r15d,r15d
    71f4:	call   1f40 <fdopen@plt>
    71f9:	test   rax,rax
    71fc:	mov    r14,rax
    71ff:	mov    QWORD PTR [rsp],0x0
    7207:	je     73e3 <_obstack_memory_used@@Base+0x4e3>
    720d:	lea    rax,[rsp+0x60]
    7212:	mov    QWORD PTR [rsp+0x8],rax
    7217:	lea    rax,[rsp+0x20]
    721c:	mov    QWORD PTR [rsp+0x10],rax
    7221:	mov    rax,QWORD PTR [r14+0x8]
    7225:	cmp    rax,QWORD PTR [r14+0x10]
    7229:	jae    737a <_obstack_memory_used@@Base+0x47a>
    722f:	lea    rdx,[rax+0x1]
    7233:	mov    QWORD PTR [r14+0x8],rdx
    7237:	movzx  edi,BYTE PTR [rax]
    723a:	lea    eax,[rdi-0x9]
    723d:	cmp    eax,0x1
    7240:	jbe    7221 <_obstack_memory_used@@Base+0x321>
    7242:	cmp    edi,0x20
    7245:	je     7221 <_obstack_memory_used@@Base+0x321>
    7247:	cmp    edi,0x23
    724a:	je     73c9 <_obstack_memory_used@@Base+0x4c9>
    7250:	mov    rsi,r14
    7253:	call   1f00 <ungetc@plt>
    7258:	mov    r13,QWORD PTR [rsp+0x10]
    725d:	mov    rcx,QWORD PTR [rsp+0x8]
    7262:	lea    rsi,[rip+0x13ef]        # 8658 <version_etc_copyright@@Base+0x78>
    7269:	xor    eax,eax
    726b:	mov    rdi,r14
    726e:	mov    rdx,r13
    7271:	call   1de0 <fscanf@plt>
    7276:	cmp    eax,0x1
    7279:	jle    738d <_obstack_memory_used@@Base+0x48d>
    727f:	mov    rdx,r13
    7282:	mov    ecx,DWORD PTR [rdx]
    7284:	add    rdx,0x4
    7288:	lea    eax,[rcx-0x1010101]
    728e:	not    ecx
    7290:	and    eax,ecx
    7292:	and    eax,0x80808080
    7297:	je     7282 <_obstack_memory_used@@Base+0x382>
    7299:	mov    ecx,eax
    729b:	mov    r13,QWORD PTR [rsp+0x8]
    72a0:	shr    ecx,0x10
    72a3:	test   eax,0x8080
    72a8:	cmove  eax,ecx
    72ab:	lea    rcx,[rdx+0x2]
    72af:	cmove  rdx,rcx
    72b3:	mov    ecx,eax
    72b5:	add    cl,al
    72b7:	sbb    rdx,0x3
    72bb:	sub    rdx,QWORD PTR [rsp+0x10]
    72c0:	mov    esi,DWORD PTR [r13+0x0]
    72c4:	add    r13,0x4
    72c8:	lea    eax,[rsi-0x1010101]
    72ce:	not    esi
    72d0:	and    eax,esi
    72d2:	and    eax,0x80808080
    72d7:	je     72c0 <_obstack_memory_used@@Base+0x3c0>
    72d9:	mov    esi,eax
    72db:	mov    QWORD PTR [rsp+0x18],rdx
    72e0:	shr    esi,0x10
    72e3:	test   eax,0x8080
    72e8:	cmove  eax,esi
    72eb:	lea    rsi,[r13+0x2]
    72ef:	mov    ecx,eax
    72f1:	cmove  r13,rsi
    72f5:	add    cl,al
    72f7:	sbb    r13,0x3
    72fb:	sub    r13,QWORD PTR [rsp+0x8]
    7300:	cmp    QWORD PTR [rsp],0x0
    7305:	lea    rax,[rdx+r13*1]
    7309:	jne    73fa <_obstack_memory_used@@Base+0x4fa>
    730f:	lea    rcx,[rax+0x2]
    7313:	lea    rdi,[rax+0x3]
    7317:	mov    QWORD PTR [rsp],rcx
    731b:	call   2088 <malloc@plt>
    7320:	mov    rdx,QWORD PTR [rsp+0x18]
    7325:	mov    r12,rax
    7328:	test   r12,r12
    732b:	je     741f <_obstack_memory_used@@Base+0x51f>
    7331:	mov    r15,QWORD PTR [rsp]
    7335:	mov    rdi,0xfffffffffffffffe
    733c:	mov    rsi,QWORD PTR [rsp+0x10]
    7341:	sub    rdi,rdx
    7344:	add    rdx,0x1
    7348:	sub    r15,r13
    734b:	add    rdi,r15
    734e:	add    rdi,r12
    7351:	call   1ea0 <memcpy@plt>
    7356:	mov    rsi,QWORD PTR [rsp+0x8]
    735b:	lea    rdi,[r12+r15*1-0x1]
    7360:	lea    rdx,[r13+0x1]
    7364:	mov    r15,r12
    7367:	call   1ea0 <memcpy@plt>
    736c:	mov    rax,QWORD PTR [r14+0x8]
    7370:	cmp    rax,QWORD PTR [r14+0x10]
    7374:	jb     722f <_obstack_memory_used@@Base+0x32f>
    737a:	mov    rdi,r14
    737d:	call   1c60 <__uflow@plt>
    7382:	cmp    eax,0xffffffff
    7385:	mov    edi,eax
    7387:	jne    723a <_obstack_memory_used@@Base+0x33a>
    738d:	mov    rdi,r14
    7390:	call   6a60 <__cxa_finalize@plt+0x49d0>
    7395:	mov    rax,QWORD PTR [rsp]
    7399:	test   rax,rax
    739c:	je     71c4 <_obstack_memory_used@@Base+0x2c4>
    73a2:	mov    BYTE PTR [r15+rax*1],0x0
    73a7:	jmp    71cb <_obstack_memory_used@@Base+0x2cb>
    73ac:	nop    DWORD PTR [rax+0x0]
    73b0:	lea    rdx,[rax+0x1]
    73b4:	mov    QWORD PTR [r14+0x8],rdx
    73b8:	movzx  eax,BYTE PTR [rax]
    73bb:	mov    edx,0x1
    73c0:	cmp    eax,0xa
    73c3:	je     73f0 <_obstack_memory_used@@Base+0x4f0>
    73c5:	test   dl,dl
    73c7:	je     73f0 <_obstack_memory_used@@Base+0x4f0>
    73c9:	mov    rax,QWORD PTR [r14+0x8]
    73cd:	cmp    rax,QWORD PTR [r14+0x10]
    73d1:	jb     73b0 <_obstack_memory_used@@Base+0x4b0>
    73d3:	mov    rdi,r14
    73d6:	call   1c60 <__uflow@plt>
    73db:	cmp    eax,0xffffffff
    73de:	setne  dl
    73e1:	jmp    73c0 <_obstack_memory_used@@Base+0x4c0>
    73e3:	mov    edi,r12d
    73e6:	call   1e00 <close@plt>
    73eb:	jmp    71c4 <_obstack_memory_used@@Base+0x2c4>
    73f0:	cmp    eax,0xffffffff
    73f3:	je     738d <_obstack_memory_used@@Base+0x48d>
    73f5:	jmp    7221 <_obstack_memory_used@@Base+0x321>
    73fa:	add    rax,QWORD PTR [rsp]
    73fe:	mov    rdi,r15
    7401:	lea    rcx,[rax+0x2]
    7405:	lea    rsi,[rax+0x3]
    7409:	mov    QWORD PTR [rsp],rcx
    740d:	call   1f30 <realloc@plt>
    7412:	mov    rdx,QWORD PTR [rsp+0x18]
    7417:	mov    r12,rax
    741a:	jmp    7328 <_obstack_memory_used@@Base+0x428>
    741f:	mov    rdi,r15
    7422:	lea    r15,[rip+0xed8]        # 8301 <quoting_style_vals@@Base+0x81>
    7429:	call   2080 <free@plt>
    742e:	mov    rdi,r14
    7431:	call   6a60 <__cxa_finalize@plt+0x49d0>
    7436:	jmp    71cb <_obstack_memory_used@@Base+0x2cb>
    743b:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    7441:	jne    7451 <_obstack_memory_used@@Base+0x551>
    7443:	lea    rdi,[rax+0xe]
    7447:	jmp    7125 <_obstack_memory_used@@Base+0x225>
    744c:	call   1d50 <__stack_chk_fail@plt>
    7451:	lea    rdi,[rax+0xf]
    7455:	add    r12,0x1
    7459:	jmp    7168 <_obstack_memory_used@@Base+0x268>
    745e:	xchg   ax,ax
    7460:	push   r15
    7462:	push   r14
    7464:	mov    r15d,edi
    7467:	push   r13
    7469:	push   r12
    746b:	lea    r12,[rip+0x20259e]        # 209a10 <version_etc_copyright@@Base+0x201430>
    7472:	push   rbp
    7473:	lea    rbp,[rip+0x20259e]        # 209a18 <version_etc_copyright@@Base+0x201438>
    747a:	push   rbx
    747b:	mov    r14,rsi
    747e:	mov    r13,rdx
    7481:	sub    rbp,r12
    7484:	sub    rsp,0x8
    7488:	sar    rbp,0x3
    748c:	call   1c30 <__uflow@plt-0x30>
    7491:	test   rbp,rbp
    7494:	je     74b6 <_obstack_memory_used@@Base+0x5b6>
    7496:	xor    ebx,ebx
    7498:	nop    DWORD PTR [rax+rax*1+0x0]
    74a0:	mov    rdx,r13
    74a3:	mov    rsi,r14
    74a6:	mov    edi,r15d
    74a9:	call   QWORD PTR [r12+rbx*8]
    74ad:	add    rbx,0x1
    74b1:	cmp    rbp,rbx
    74b4:	jne    74a0 <_obstack_memory_used@@Base+0x5a0>
    74b6:	add    rsp,0x8
    74ba:	pop    rbx
    74bb:	pop    rbp
    74bc:	pop    r12
    74be:	pop    r13
    74c0:	pop    r14
    74c2:	pop    r15
    74c4:	ret    
    74c5:	nop
    74c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74d0:	repz ret 
    74d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    74dc:	nop    DWORD PTR [rax+0x0]
    74e0:	lea    rax,[rip+0x202b21]        # 20a008 <quoting_style_args@@Base+0x4c8>
    74e7:	test   rax,rax
    74ea:	je     7500 <_obstack_memory_used@@Base+0x600>
    74ec:	mov    rdx,QWORD PTR [rax]
    74ef:	xor    esi,esi
    74f1:	jmp    1fe0 <__cxa_atexit@plt>
    74f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7500:	xor    edx,edx
    7502:	xor    esi,esi
    7504:	jmp    1fe0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000750c <.fini>:
    750c:	sub    rsp,0x8
    7510:	add    rsp,0x8
    7514:	ret    
