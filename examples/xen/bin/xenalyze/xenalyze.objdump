
xenalyze:     file format elf64-x86-64


Disassembly of section .init:

00000000000042f8 <_init>:
    42f8:	sub    rsp,0x8
    42fc:	mov    rax,QWORD PTR [rip+0x224cdd]        # 228fe0 <__gmon_start__>
    4303:	test   rax,rax
    4306:	je     430a <_init+0x12>
    4308:	call   rax
    430a:	add    rsp,0x8
    430e:	ret    

Disassembly of section .plt:

0000000000004310 <.plt>:
    4310:	push   QWORD PTR [rip+0x224b62]        # 228e78 <_GLOBAL_OFFSET_TABLE_+0x8>
    4316:	jmp    QWORD PTR [rip+0x224b64]        # 228e80 <_GLOBAL_OFFSET_TABLE_+0x10>
    431c:	nop    DWORD PTR [rax+0x0]

0000000000004320 <__snprintf_chk@plt>:
    4320:	jmp    QWORD PTR [rip+0x224b62]        # 228e88 <__snprintf_chk@GLIBC_2.3.4>
    4326:	push   0x0
    432b:	jmp    4310 <.plt>

0000000000004330 <free@plt>:
    4330:	jmp    QWORD PTR [rip+0x224b5a]        # 228e90 <free@GLIBC_2.2.5>
    4336:	push   0x1
    433b:	jmp    4310 <.plt>

0000000000004340 <putchar@plt>:
    4340:	jmp    QWORD PTR [rip+0x224b52]        # 228e98 <putchar@GLIBC_2.2.5>
    4346:	push   0x2
    434b:	jmp    4310 <.plt>

0000000000004350 <__errno_location@plt>:
    4350:	jmp    QWORD PTR [rip+0x224b4a]        # 228ea0 <__errno_location@GLIBC_2.2.5>
    4356:	push   0x3
    435b:	jmp    4310 <.plt>

0000000000004360 <strncpy@plt>:
    4360:	jmp    QWORD PTR [rip+0x224b42]        # 228ea8 <strncpy@GLIBC_2.2.5>
    4366:	push   0x4
    436b:	jmp    4310 <.plt>

0000000000004370 <__isoc99_fscanf@plt>:
    4370:	jmp    QWORD PTR [rip+0x224b3a]        # 228eb0 <__isoc99_fscanf@GLIBC_2.7>
    4376:	push   0x5
    437b:	jmp    4310 <.plt>

0000000000004380 <puts@plt>:
    4380:	jmp    QWORD PTR [rip+0x224b32]        # 228eb8 <puts@GLIBC_2.2.5>
    4386:	push   0x6
    438b:	jmp    4310 <.plt>

0000000000004390 <qsort@plt>:
    4390:	jmp    QWORD PTR [rip+0x224b2a]        # 228ec0 <qsort@GLIBC_2.2.5>
    4396:	push   0x7
    439b:	jmp    4310 <.plt>

00000000000043a0 <argp_state_help@plt>:
    43a0:	jmp    QWORD PTR [rip+0x224b22]        # 228ec8 <argp_state_help@GLIBC_2.2.5>
    43a6:	push   0x8
    43ab:	jmp    4310 <.plt>

00000000000043b0 <fclose@plt>:
    43b0:	jmp    QWORD PTR [rip+0x224b1a]        # 228ed0 <fclose@GLIBC_2.2.5>
    43b6:	push   0x9
    43bb:	jmp    4310 <.plt>

00000000000043c0 <__stack_chk_fail@plt>:
    43c0:	jmp    QWORD PTR [rip+0x224b12]        # 228ed8 <__stack_chk_fail@GLIBC_2.4>
    43c6:	push   0xa
    43cb:	jmp    4310 <.plt>

00000000000043d0 <mmap@plt>:
    43d0:	jmp    QWORD PTR [rip+0x224b0a]        # 228ee0 <mmap@GLIBC_2.2.5>
    43d6:	push   0xb
    43db:	jmp    4310 <.plt>

00000000000043e0 <dup2@plt>:
    43e0:	jmp    QWORD PTR [rip+0x224b02]        # 228ee8 <dup2@GLIBC_2.2.5>
    43e6:	push   0xc
    43eb:	jmp    4310 <.plt>

00000000000043f0 <snprintf@plt>:
    43f0:	jmp    QWORD PTR [rip+0x224afa]        # 228ef0 <snprintf@GLIBC_2.2.5>
    43f6:	push   0xd
    43fb:	jmp    4310 <.plt>

0000000000004400 <__assert_fail@plt>:
    4400:	jmp    QWORD PTR [rip+0x224af2]        # 228ef8 <__assert_fail@GLIBC_2.2.5>
    4406:	push   0xe
    440b:	jmp    4310 <.plt>

0000000000004410 <strtof@plt>:
    4410:	jmp    QWORD PTR [rip+0x224aea]        # 228f00 <strtof@GLIBC_2.2.5>
    4416:	push   0xf
    441b:	jmp    4310 <.plt>

0000000000004420 <memset@plt>:
    4420:	jmp    QWORD PTR [rip+0x224ae2]        # 228f08 <memset@GLIBC_2.2.5>
    4426:	push   0x10
    442b:	jmp    4310 <.plt>

0000000000004430 <pipe@plt>:
    4430:	jmp    QWORD PTR [rip+0x224ada]        # 228f10 <pipe@GLIBC_2.2.5>
    4436:	push   0x11
    443b:	jmp    4310 <.plt>

0000000000004440 <argp_parse@plt>:
    4440:	jmp    QWORD PTR [rip+0x224ad2]        # 228f18 <argp_parse@GLIBC_2.2.5>
    4446:	push   0x12
    444b:	jmp    4310 <.plt>

0000000000004450 <strtoull@plt>:
    4450:	jmp    QWORD PTR [rip+0x224aca]        # 228f20 <strtoull@GLIBC_2.2.5>
    4456:	push   0x13
    445b:	jmp    4310 <.plt>

0000000000004460 <calloc@plt>:
    4460:	jmp    QWORD PTR [rip+0x224ac2]        # 228f28 <calloc@GLIBC_2.2.5>
    4466:	push   0x14
    446b:	jmp    4310 <.plt>

0000000000004470 <feof@plt>:
    4470:	jmp    QWORD PTR [rip+0x224aba]        # 228f30 <feof@GLIBC_2.2.5>
    4476:	push   0x15
    447b:	jmp    4310 <.plt>

0000000000004480 <strtol@plt>:
    4480:	jmp    QWORD PTR [rip+0x224ab2]        # 228f38 <strtol@GLIBC_2.2.5>
    4486:	push   0x16
    448b:	jmp    4310 <.plt>

0000000000004490 <malloc@plt>:
    4490:	jmp    QWORD PTR [rip+0x224aaa]        # 228f40 <malloc@GLIBC_2.2.5>
    4496:	push   0x17
    449b:	jmp    4310 <.plt>

00000000000044a0 <fflush@plt>:
    44a0:	jmp    QWORD PTR [rip+0x224aa2]        # 228f48 <fflush@GLIBC_2.2.5>
    44a6:	push   0x18
    44ab:	jmp    4310 <.plt>

00000000000044b0 <__fxstat@plt>:
    44b0:	jmp    QWORD PTR [rip+0x224a9a]        # 228f50 <__fxstat@GLIBC_2.2.5>
    44b6:	push   0x19
    44bb:	jmp    4310 <.plt>

00000000000044c0 <realloc@plt>:
    44c0:	jmp    QWORD PTR [rip+0x224a92]        # 228f58 <realloc@GLIBC_2.2.5>
    44c6:	push   0x1a
    44cb:	jmp    4310 <.plt>

00000000000044d0 <fdopen@plt>:
    44d0:	jmp    QWORD PTR [rip+0x224a8a]        # 228f60 <fdopen@GLIBC_2.2.5>
    44d6:	push   0x1b
    44db:	jmp    4310 <.plt>

00000000000044e0 <munmap@plt>:
    44e0:	jmp    QWORD PTR [rip+0x224a82]        # 228f68 <munmap@GLIBC_2.2.5>
    44e6:	push   0x1c
    44eb:	jmp    4310 <.plt>

00000000000044f0 <__printf_chk@plt>:
    44f0:	jmp    QWORD PTR [rip+0x224a7a]        # 228f70 <__printf_chk@GLIBC_2.3.4>
    44f6:	push   0x1d
    44fb:	jmp    4310 <.plt>

0000000000004500 <memmove@plt>:
    4500:	jmp    QWORD PTR [rip+0x224a72]        # 228f78 <memmove@GLIBC_2.2.5>
    4506:	push   0x1e
    450b:	jmp    4310 <.plt>

0000000000004510 <open@plt>:
    4510:	jmp    QWORD PTR [rip+0x224a6a]        # 228f80 <open@GLIBC_2.2.5>
    4516:	push   0x1f
    451b:	jmp    4310 <.plt>

0000000000004520 <fopen@plt>:
    4520:	jmp    QWORD PTR [rip+0x224a62]        # 228f88 <fopen@GLIBC_2.2.5>
    4526:	push   0x20
    452b:	jmp    4310 <.plt>

0000000000004530 <perror@plt>:
    4530:	jmp    QWORD PTR [rip+0x224a5a]        # 228f90 <perror@GLIBC_2.2.5>
    4536:	push   0x21
    453b:	jmp    4310 <.plt>

0000000000004540 <exit@plt>:
    4540:	jmp    QWORD PTR [rip+0x224a52]        # 228f98 <exit@GLIBC_2.2.5>
    4546:	push   0x22
    454b:	jmp    4310 <.plt>

0000000000004550 <fwrite@plt>:
    4550:	jmp    QWORD PTR [rip+0x224a4a]        # 228fa0 <fwrite@GLIBC_2.2.5>
    4556:	push   0x23
    455b:	jmp    4310 <.plt>

0000000000004560 <__fprintf_chk@plt>:
    4560:	jmp    QWORD PTR [rip+0x224a42]        # 228fa8 <__fprintf_chk@GLIBC_2.3.4>
    4566:	push   0x24
    456b:	jmp    4310 <.plt>

0000000000004570 <execlp@plt>:
    4570:	jmp    QWORD PTR [rip+0x224a3a]        # 228fb0 <execlp@GLIBC_2.2.5>
    4576:	push   0x25
    457b:	jmp    4310 <.plt>

0000000000004580 <strerror@plt>:
    4580:	jmp    QWORD PTR [rip+0x224a32]        # 228fb8 <strerror@GLIBC_2.2.5>
    4586:	push   0x26
    458b:	jmp    4310 <.plt>

0000000000004590 <wait@plt>:
    4590:	jmp    QWORD PTR [rip+0x224a2a]        # 228fc0 <wait@GLIBC_2.2.5>
    4596:	push   0x27
    459b:	jmp    4310 <.plt>

00000000000045a0 <fork@plt>:
    45a0:	jmp    QWORD PTR [rip+0x224a22]        # 228fc8 <fork@GLIBC_2.2.5>
    45a6:	push   0x28
    45ab:	jmp    4310 <.plt>

Disassembly of section .plt.got:

00000000000045b0 <__cxa_finalize@plt>:
    45b0:	jmp    QWORD PTR [rip+0x224a3a]        # 228ff0 <__cxa_finalize@GLIBC_2.2.5>
    45b6:	xchg   ax,ax

Disassembly of section .text:

00000000000045c0 <vcpu_set_data_type.part.43>:
    45c0:	lea    rcx,[rip+0x1ed09]        # 232d0 <__PRETTY_FUNCTION__.8144>
    45c7:	lea    rsi,[rip+0x18aba]        # 1d088 <_IO_stdin_used+0xc8>
    45ce:	lea    rdi,[rip+0x18b32]        # 1d107 <_IO_stdin_used+0x147>
    45d5:	sub    rsp,0x8
    45d9:	mov    edx,0x2220
    45de:	call   4400 <__assert_fail@plt>
    45e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
    45ed:	nop    DWORD PTR [rax]

00000000000045f0 <main>:
    45f0:	sub    rsp,0xa8
    45f7:	mov    rdx,rsi
    45fa:	mov    esi,edi
    45fc:	mov    rax,QWORD PTR fs:0x28
    4605:	mov    QWORD PTR [rsp+0x98],rax
    460d:	xor    eax,eax
    460f:	mov    rax,QWORD PTR [rip+0x227e2a]        # 22c440 <stderr@@GLIBC_2.2.5>
    4616:	lea    rdi,[rip+0x223d23]        # 228340 <parser_def>
    461d:	xor    r9d,r9d
    4620:	xor    r8d,r8d
    4623:	xor    ecx,ecx
    4625:	mov    QWORD PTR [rip+0x260c2c],rax        # 265258 <warn>
    462c:	call   4440 <argp_parse@plt>
    4631:	mov    rdi,QWORD PTR [rip+0x224b08]        # 229140 <G+0x20>
    4638:	test   rdi,rdi
    463b:	je     472a <main+0x13a>
    4641:	xor    esi,esi
    4643:	xor    eax,eax
    4645:	call   4510 <open@plt>
    464a:	test   eax,eax
    464c:	mov    DWORD PTR [rip+0x224ace],eax        # 229120 <G>
    4652:	js     4711 <main+0x121>
    4658:	mov    rdx,rsp
    465b:	mov    esi,eax
    465d:	mov    edi,0x1
    4662:	call   44b0 <__fxstat@plt>
    4667:	mov    rax,QWORD PTR [rsp+0x30]
    466c:	mov    QWORD PTR [rip+0x224add],rax        # 229150 <G+0x30>
    4673:	mov    edi,DWORD PTR [rip+0x224aa7]        # 229120 <G>
    4679:	call   1cc80 <mread_init>
    467e:	test   rax,rax
    4681:	mov    QWORD PTR [rip+0x224aa0],rax        # 229128 <G+0x8>
    4688:	je     4764 <main+0x174>
    468e:	mov    rdi,QWORD PTR [rip+0x224aa3]        # 229138 <G+0x18>
    4695:	test   rdi,rdi
    4698:	je     469f <main+0xaf>
    469a:	call   71f0 <parse_symbol_file>
    469f:	test   BYTE PTR [rip+0x2249fb],0x40        # 2290a1 <opt+0x1>
    46a6:	jne    4701 <main+0x111>
    46a8:	call   1bb50 <init_pcpus>
    46ad:	test   BYTE PTR [rip+0x2249ef],0x8        # 2290a3 <opt+0x3>
    46b4:	jne    475a <main+0x16a>
    46ba:	call   1b420 <process_records>
    46bf:	test   BYTE PTR [rip+0x2249db],0x20        # 2290a1 <opt+0x1>
    46c6:	jne    4750 <main+0x160>
    46cc:	movzx  eax,BYTE PTR [rip+0x2249d0]        # 2290a3 <opt+0x3>
    46d3:	test   al,0x20
    46d5:	jne    4742 <main+0x152>
    46d7:	test   al,0x40
    46d9:	jne    4734 <main+0x144>
    46db:	test   al,0x8
    46dd:	je     46e4 <main+0xf4>
    46df:	call   162e0 <progress_finish>
    46e4:	xor    eax,eax
    46e6:	mov    rcx,QWORD PTR [rsp+0x98]
    46ee:	xor    rcx,QWORD PTR fs:0x28
    46f7:	jne    4775 <main+0x185>
    46f9:	add    rsp,0xa8
    4700:	ret    
    4701:	mov    rax,QWORD PTR [rip+0x227d18]        # 22c420 <stdout@@GLIBC_2.2.5>
    4708:	mov    QWORD PTR [rip+0x260b49],rax        # 265258 <warn>
    470f:	jmp    46a8 <main+0xb8>
    4711:	lea    rdi,[rip+0x18a07]        # 1d11f <_IO_stdin_used+0x15f>
    4718:	call   4530 <perror@plt>
    471d:	cmp    DWORD PTR [rip+0x2249bc],0x7        # 2290e0 <opt+0x40>
    4724:	ja     4673 <main+0x83>
    472a:	mov    edi,0x1
    472f:	call   4540 <exit@plt>
    4734:	call   1b670 <report_pcpu>
    4739:	movzx  eax,BYTE PTR [rip+0x224963]        # 2290a3 <opt+0x3>
    4740:	jmp    46db <main+0xeb>
    4742:	call   1be00 <summary>
    4747:	movzx  eax,BYTE PTR [rip+0x224955]        # 2290a3 <opt+0x3>
    474e:	jmp    46d7 <main+0xe7>
    4750:	call   91c0 <interval_tail>
    4755:	jmp    46cc <main+0xdc>
    475a:	call   16130 <progress_init>
    475f:	jmp    46ba <main+0xca>
    4764:	lea    rdi,[rip+0x198d7]        # 1e042 <_IO_stdin_used+0x1082>
    476b:	call   4530 <perror@plt>
    4770:	jmp    468e <main+0x9e>
    4775:	call   43c0 <__stack_chk_fail@plt>
    477a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000004780 <_start>:
    4780:	xor    ebp,ebp
    4782:	mov    r9,rdx
    4785:	pop    rsi
    4786:	mov    rdx,rsp
    4789:	and    rsp,0xfffffffffffffff0
    478d:	push   rax
    478e:	push   rsp
    478f:	lea    r8,[rip+0x1881a]        # 1cfb0 <__libc_csu_fini>
    4796:	lea    rcx,[rip+0x187a3]        # 1cf40 <__libc_csu_init>
    479d:	lea    rdi,[rip+0xfffffffffffffe4c]        # 45f0 <main>
    47a4:	call   QWORD PTR [rip+0x22482e]        # 228fd8 <__libc_start_main@GLIBC_2.2.5>
    47aa:	hlt    
    47ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000047b0 <deregister_tm_clones>:
    47b0:	lea    rdi,[rip+0x227c69]        # 22c420 <stdout@@GLIBC_2.2.5>
    47b7:	push   rbp
    47b8:	lea    rax,[rip+0x227c61]        # 22c420 <stdout@@GLIBC_2.2.5>
    47bf:	cmp    rax,rdi
    47c2:	mov    rbp,rsp
    47c5:	je     47e0 <deregister_tm_clones+0x30>
    47c7:	mov    rax,QWORD PTR [rip+0x224802]        # 228fd0 <_ITM_deregisterTMCloneTable>
    47ce:	test   rax,rax
    47d1:	je     47e0 <deregister_tm_clones+0x30>
    47d3:	pop    rbp
    47d4:	jmp    rax
    47d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    47e0:	pop    rbp
    47e1:	ret    
    47e2:	nop    DWORD PTR [rax+0x0]
    47e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000047f0 <register_tm_clones>:
    47f0:	lea    rdi,[rip+0x227c29]        # 22c420 <stdout@@GLIBC_2.2.5>
    47f7:	lea    rsi,[rip+0x227c22]        # 22c420 <stdout@@GLIBC_2.2.5>
    47fe:	push   rbp
    47ff:	sub    rsi,rdi
    4802:	mov    rbp,rsp
    4805:	sar    rsi,0x3
    4809:	mov    rax,rsi
    480c:	shr    rax,0x3f
    4810:	add    rsi,rax
    4813:	sar    rsi,1
    4816:	je     4830 <register_tm_clones+0x40>
    4818:	mov    rax,QWORD PTR [rip+0x2247c9]        # 228fe8 <_ITM_registerTMCloneTable>
    481f:	test   rax,rax
    4822:	je     4830 <register_tm_clones+0x40>
    4824:	pop    rbp
    4825:	jmp    rax
    4827:	nop    WORD PTR [rax+rax*1+0x0]
    4830:	pop    rbp
    4831:	ret    
    4832:	nop    DWORD PTR [rax+0x0]
    4836:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004840 <__do_global_dtors_aux>:
    4840:	cmp    BYTE PTR [rip+0x227c01],0x0        # 22c448 <completed.7697>
    4847:	jne    4878 <__do_global_dtors_aux+0x38>
    4849:	cmp    QWORD PTR [rip+0x22479f],0x0        # 228ff0 <__cxa_finalize@GLIBC_2.2.5>
    4851:	push   rbp
    4852:	mov    rbp,rsp
    4855:	je     4863 <__do_global_dtors_aux+0x23>
    4857:	mov    rdi,QWORD PTR [rip+0x2247aa]        # 229008 <__dso_handle>
    485e:	call   45b0 <__cxa_finalize@plt>
    4863:	call   47b0 <deregister_tm_clones>
    4868:	mov    BYTE PTR [rip+0x227bd9],0x1        # 22c448 <completed.7697>
    486f:	pop    rbp
    4870:	ret    
    4871:	nop    DWORD PTR [rax+0x0]
    4878:	repz ret 
    487a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000004880 <frame_dummy>:
    4880:	push   rbp
    4881:	mov    rbp,rsp
    4884:	pop    rbp
    4885:	jmp    47f0 <register_tm_clones>
    488a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000004890 <cr3_time_compare>:
    4890:	mov    rcx,QWORD PTR [rdi]
    4893:	mov    rdx,QWORD PTR [rsi]
    4896:	mov    eax,0x1
    489b:	mov    rsi,QWORD PTR [rdx+0x60]
    489f:	cmp    QWORD PTR [rcx+0x60],rsi
    48a3:	jl     48c5 <cr3_time_compare+0x35>
    48a5:	jne    48c0 <cr3_time_compare+0x30>
    48a7:	mov    edx,DWORD PTR [rdx+0x58]
    48aa:	cmp    DWORD PTR [rcx+0x58],edx
    48ad:	jl     48c5 <cr3_time_compare+0x35>
    48af:	setne  al
    48b2:	movzx  eax,al
    48b5:	neg    eax
    48b7:	ret    
    48b8:	nop    DWORD PTR [rax+rax*1+0x0]
    48c0:	mov    eax,0xffffffff
    48c5:	repz ret 
    48c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000048d0 <eip_compare>:
    48d0:	mov    rcx,QWORD PTR [rdi]
    48d3:	mov    rdx,QWORD PTR [rsi]
    48d6:	mov    eax,0x1
    48db:	mov    rsi,QWORD PTR [rdx+0x20]
    48df:	cmp    QWORD PTR [rcx+0x20],rsi
    48e3:	jb     4905 <eip_compare+0x35>
    48e5:	jne    4900 <eip_compare+0x30>
    48e7:	mov    edx,DWORD PTR [rdx+0x14]
    48ea:	cmp    DWORD PTR [rcx+0x14],edx
    48ed:	jl     4905 <eip_compare+0x35>
    48ef:	setne  al
    48f2:	movzx  eax,al
    48f5:	neg    eax
    48f7:	ret    
    48f8:	nop    DWORD PTR [rax+rax*1+0x0]
    4900:	mov    eax,0xffffffff
    4905:	repz ret 
    4907:	nop    WORD PTR [rax+rax*1+0x0]

0000000000004910 <cr3_compare_start>:
    4910:	mov    rcx,QWORD PTR [rdi]
    4913:	mov    rdx,QWORD PTR [rsi]
    4916:	mov    eax,0x1
    491b:	mov    rdx,QWORD PTR [rdx+0x20]
    491f:	cmp    QWORD PTR [rcx+0x20],rdx
    4923:	ja     492d <cr3_compare_start+0x1d>
    4925:	setne  al
    4928:	movzx  eax,al
    492b:	neg    eax
    492d:	repz ret 
    492f:	nop

0000000000004930 <hvm_msr_write_summary>:
    4930:	repz ret 
    4932:	nop    DWORD PTR [rax+0x0]
    4936:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004940 <hvm_intr_summary>:
    4940:	push   r12
    4942:	lea    r12,[rip+0x2250f7]        # 229a40 <hvm_extint_vector_name>
    4949:	push   rbp
    494a:	mov    rbp,rdi
    494d:	push   rbx
    494e:	xor    ebx,ebx
    4950:	jmp    497a <hvm_intr_summary+0x3a>
    4952:	nop    WORD PTR [rax+rax*1+0x0]
    4958:	lea    rsi,[rip+0x18665]        # 1cfc4 <_IO_stdin_used+0x4>
    495f:	mov    ecx,ebx
    4961:	mov    edi,0x1
    4966:	xor    eax,eax
    4968:	call   44f0 <__printf_chk@plt>
    496d:	add    rbx,0x1
    4971:	cmp    rbx,0x100
    4978:	je     49b8 <hvm_intr_summary+0x78>
    497a:	mov    r8d,DWORD PTR [rbp+rbx*4+0x10068]
    4982:	test   r8d,r8d
    4985:	je     496d <hvm_intr_summary+0x2d>
    4987:	mov    rdx,QWORD PTR [r12+rbx*8]
    498b:	test   rdx,rdx
    498e:	jne    4958 <hvm_intr_summary+0x18>
    4990:	lea    rsi,[rip+0x1863e]        # 1cfd5 <_IO_stdin_used+0x15>
    4997:	mov    edx,ebx
    4999:	xor    eax,eax
    499b:	mov    ecx,r8d
    499e:	mov    edi,0x1
    49a3:	add    rbx,0x1
    49a7:	call   44f0 <__printf_chk@plt>
    49ac:	cmp    rbx,0x100
    49b3:	jne    497a <hvm_intr_summary+0x3a>
    49b5:	nop    DWORD PTR [rax]
    49b8:	mov    edx,DWORD PTR [rbp+0x10468]
    49be:	test   edx,edx
    49c0:	jne    49c7 <hvm_intr_summary+0x87>
    49c2:	pop    rbx
    49c3:	pop    rbp
    49c4:	pop    r12
    49c6:	ret    
    49c7:	pop    rbx
    49c8:	pop    rbp
    49c9:	pop    r12
    49cb:	lea    rsi,[rip+0x1861a]        # 1cfec <_IO_stdin_used+0x2c>
    49d2:	mov    edi,0x1
    49d7:	xor    eax,eax
    49d9:	jmp    44f0 <__printf_chk@plt>
    49de:	xchg   ax,ax

00000000000049e0 <cmd_to_str.part.4>:
    49e0:	mov    r9d,edi
    49e3:	lea    r8,[rip+0x18619]        # 1d003 <_IO_stdin_used+0x43>
    49ea:	lea    rdi,[rip+0x26088f]        # 265280 <buf.7301>
    49f1:	sub    rsp,0x8
    49f5:	mov    ecx,0x20
    49fa:	mov    edx,0x1
    49ff:	mov    esi,0x20
    4a04:	xor    eax,eax
    4a06:	call   4320 <__snprintf_chk@plt>
    4a0b:	lea    rax,[rip+0x26086e]        # 265280 <buf.7301>
    4a12:	add    rsp,0x8
    4a16:	ret    
    4a17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000004a20 <update_cycles.part.5>:
    4a20:	push   r12
    4a22:	mov    edx,DWORD PTR [rip+0x2246b0]        # 2290d8 <opt+0x38>
    4a28:	push   rbp
    4a29:	push   rbx
    4a2a:	mov    rbp,rsi
    4a2d:	movsxd rcx,DWORD PTR [rdi+0x4]
    4a31:	mov    rbx,rdi
    4a34:	test   edx,edx
    4a36:	mov    eax,ecx
    4a38:	je     4ad5 <update_cycles.part.5+0xb5>
    4a3e:	mov    eax,DWORD PTR [rdi+0x8]
    4a41:	cmp    eax,ecx
    4a43:	jg     4af0 <update_cycles.part.5+0xd0>
    4a49:	test   ecx,ecx
    4a4b:	mov    r12d,DWORD PTR [rip+0x22468a]        # 2290dc <opt+0x3c>
    4a52:	je     4a62 <update_cycles.part.5+0x42>
    4a54:	test   r12d,r12d
    4a57:	je     4a62 <update_cycles.part.5+0x42>
    4a59:	cmp    eax,r12d
    4a5c:	jge    4b20 <update_cycles.part.5+0x100>
    4a62:	add    eax,eax
    4a64:	cmovne edx,eax
    4a67:	test   r12d,r12d
    4a6a:	je     4b00 <update_cycles.part.5+0xe0>
    4a70:	cmp    edx,r12d
    4a73:	jle    4b00 <update_cycles.part.5+0xe0>
    4a79:	mov    rdi,QWORD PTR [rbx+0x18]
    4a7d:	movsxd rsi,r12d
    4a80:	shl    rsi,0x3
    4a84:	call   44c0 <realloc@plt>
    4a89:	test   rax,rax
    4a8c:	je     4b10 <update_cycles.part.5+0xf0>
    4a92:	mov    QWORD PTR [rbx+0x18],rax
    4a96:	mov    DWORD PTR [rbx+0x8],r12d
    4a9a:	movsxd rcx,DWORD PTR [rbx+0x4]
    4a9e:	cmp    ecx,r12d
    4aa1:	jl     4af0 <update_cycles.part.5+0xd0>
    4aa3:	mov    eax,ecx
    4aa5:	cdq    
    4aa6:	idiv   r12d
    4aa9:	lea    esi,[rax+0x1]
    4aac:	movsxd rdi,edx
    4aaf:	mov    edx,0x55555556
    4ab4:	mov    eax,esi
    4ab6:	imul   edx
    4ab8:	mov    eax,esi
    4aba:	sar    eax,0x1f
    4abd:	sub    eax,edx
    4abf:	add    eax,edi
    4ac1:	cdq    
    4ac2:	idiv   esi
    4ac4:	mov    eax,ecx
    4ac6:	test   edx,edx
    4ac8:	jne    4ad5 <update_cycles.part.5+0xb5>
    4aca:	mov    rax,QWORD PTR [rbx+0x18]
    4ace:	mov    QWORD PTR [rax+rdi*8],rbp
    4ad2:	mov    eax,DWORD PTR [rbx+0x4]
    4ad5:	add    eax,0x1
    4ad8:	add    QWORD PTR [rbx+0x10],rbp
    4adc:	add    QWORD PTR [rbx+0x28],rbp
    4ae0:	mov    DWORD PTR [rbx+0x4],eax
    4ae3:	add    DWORD PTR [rbx+0x20],0x1
    4ae7:	pop    rbx
    4ae8:	pop    rbp
    4ae9:	pop    r12
    4aeb:	ret    
    4aec:	nop    DWORD PTR [rax+0x0]
    4af0:	mov    rax,QWORD PTR [rbx+0x18]
    4af4:	mov    QWORD PTR [rax+rcx*8],rbp
    4af8:	mov    eax,DWORD PTR [rbx+0x4]
    4afb:	jmp    4ad5 <update_cycles.part.5+0xb5>
    4afd:	nop    DWORD PTR [rax]
    4b00:	mov    r12d,edx
    4b03:	jmp    4a79 <update_cycles.part.5+0x59>
    4b08:	nop    DWORD PTR [rax+rax*1+0x0]
    4b10:	mov    r12d,DWORD PTR [rbx+0x8]
    4b14:	jmp    4a9a <update_cycles.part.5+0x7a>
    4b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4b20:	mov    r12d,eax
    4b23:	jmp    4aa3 <update_cycles.part.5+0x83>
    4b28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004b30 <percentile.part.6>:
    4b30:	imul   edx,esi
    4b33:	push   r14
    4b35:	push   r13
    4b37:	push   r12
    4b39:	push   rbp
    4b3a:	lea    ebp,[rsi-0x1]
    4b3d:	push   rbx
    4b3e:	mov    ecx,edx
    4b40:	mov    edx,0x51eb851f
    4b45:	mov    eax,ecx
    4b47:	sar    ecx,0x1f
    4b4a:	imul   edx
    4b4c:	sar    edx,0x5
    4b4f:	sub    edx,ecx
    4b51:	test   ebp,ebp
    4b53:	movsxd rax,edx
    4b56:	lea    r14,[rdi+rax*8]
    4b5a:	jle    4bd9 <percentile.part.6+0xa9>
    4b5c:	mov    r13,rax
    4b5f:	xor    r12d,r12d
    4b62:	nop    WORD PTR [rax+rax*1+0x0]
    4b68:	movsxd rdx,r12d
    4b6b:	mov    r10,QWORD PTR [r14]
    4b6e:	movsxd rax,ebp
    4b71:	lea    r11,[rdi+rdx*8]
    4b75:	mov    esi,r12d
    4b78:	mov    rcx,QWORD PTR [rdi+rax*8]
    4b7c:	mov    edx,ebp
    4b7e:	mov    ebx,esi
    4b80:	mov    r9,QWORD PTR [r11]
    4b83:	cmp    r10,r9
    4b86:	jle    4ba1 <percentile.part.6+0x71>
    4b88:	nop    DWORD PTR [rax+rax*1+0x0]
    4b90:	add    esi,0x1
    4b93:	add    r11,0x8
    4b97:	mov    r9,QWORD PTR [r11]
    4b9a:	mov    ebx,esi
    4b9c:	cmp    r10,r9
    4b9f:	jg     4b90 <percentile.part.6+0x60>
    4ba1:	cmp    r10,rcx
    4ba4:	jge    4c08 <percentile.part.6+0xd8>
    4ba6:	lea    rax,[rdi+rax*8-0x8]
    4bab:	nop    DWORD PTR [rax+rax*1+0x0]
    4bb0:	mov    r8,rax
    4bb3:	sub    rax,0x8
    4bb7:	mov    rcx,QWORD PTR [rax+0x8]
    4bbb:	sub    edx,0x1
    4bbe:	cmp    r10,rcx
    4bc1:	jl     4bb0 <percentile.part.6+0x80>
    4bc3:	cmp    esi,edx
    4bc5:	jle    4be8 <percentile.part.6+0xb8>
    4bc7:	cmp    r13d,edx
    4bca:	cmovg  r12d,ebx
    4bce:	cmp    r13d,ebx
    4bd1:	cmovl  ebp,edx
    4bd4:	cmp    ebp,r12d
    4bd7:	jg     4b68 <percentile.part.6+0x38>
    4bd9:	pop    rbx
    4bda:	mov    rax,QWORD PTR [r14]
    4bdd:	pop    rbp
    4bde:	pop    r12
    4be0:	pop    r13
    4be2:	pop    r14
    4be4:	ret    
    4be5:	nop    DWORD PTR [rax]
    4be8:	add    esi,0x1
    4beb:	sub    edx,0x1
    4bee:	mov    QWORD PTR [r11],rcx
    4bf1:	cmp    edx,esi
    4bf3:	mov    QWORD PTR [r8],r9
    4bf6:	mov    ebx,esi
    4bf8:	jl     4bc7 <percentile.part.6+0x97>
    4bfa:	movsxd rax,edx
    4bfd:	mov    rcx,QWORD PTR [rdi+rax*8]
    4c01:	jmp    4b93 <percentile.part.6+0x63>
    4c03:	nop    DWORD PTR [rax+rax*1+0x0]
    4c08:	lea    r8,[rdi+rax*8]
    4c0c:	jmp    4bc3 <percentile.part.6+0x93>
    4c0e:	xchg   ax,ax

0000000000004c10 <hvm_pf_xen_summary>:
    4c10:	push   r15
    4c12:	push   r14
    4c14:	push   r13
    4c16:	push   r12
    4c18:	push   rbp
    4c19:	push   rbx
    4c1a:	mov    rbx,rdi
    4c1d:	lea    r12,[rbx+0x108d8]
    4c24:	sub    rsp,0x38
    4c28:	mov    QWORD PTR [rsp+0x10],rdi
    4c2d:	lea    rdi,[rip+0x183dc]        # 1d010 <_IO_stdin_used+0x50>
    4c34:	call   4380 <puts@plt>
    4c39:	mov    QWORD PTR [rsp+0x8],0x0
    4c42:	jmp    4d6a <hvm_pf_xen_summary+0x15a>
    4c47:	nop    WORD PTR [rax+rax*1+0x0]
    4c50:	test   eax,eax
    4c52:	je     4d34 <hvm_pf_xen_summary+0x124>
    4c58:	mov    eax,DWORD PTR [rip+0x22447a]        # 2290d8 <opt+0x38>
    4c5e:	test   eax,eax
    4c60:	je     5800 <hvm_pf_xen_summary+0xbf0>
    4c66:	mov    esi,DWORD PTR [r12+0x4]
    4c6b:	cmp    DWORD PTR [r12+0x8],esi
    4c70:	cmovle esi,DWORD PTR [r12+0x8]
    4c76:	test   esi,esi
    4c78:	mov    ebp,esi
    4c7a:	jne    5930 <hvm_pf_xen_summary+0xd20>
    4c80:	xor    ebp,ebp
    4c82:	xor    ebx,ebx
    4c84:	xor    r13d,r13d
    4c87:	lea    rax,[rip+0x2248d2]        # 229560 <pf_xen_name>
    4c8e:	lea    rsi,[rip+0x18389]        # 1d01e <_IO_stdin_used+0x5e>
    4c95:	mov    edi,0x1
    4c9a:	mov    rdx,QWORD PTR [rax+r15*1]
    4c9e:	xor    eax,eax
    4ca0:	call   44f0 <__printf_chk@plt>
    4ca5:	mov    eax,DWORD PTR [r12+0x4]
    4caa:	xor    ecx,ecx
    4cac:	mov    rsi,QWORD PTR [r12+0x10]
    4cb1:	test   eax,eax
    4cb3:	je     4cc3 <hvm_pf_xen_summary+0xb3>
    4cb5:	movsxd rcx,eax
    4cb8:	xor    edx,edx
    4cba:	mov    rax,rsi
    4cbd:	div    rcx
    4cc0:	mov    rcx,rax
    4cc3:	lea    rdx,[rsi+rsi*4]
    4cc7:	pxor   xmm1,xmm1
    4ccb:	pxor   xmm0,xmm0
    4ccf:	lea    rdx,[rdx+rdx*4]
    4cd3:	shl    rdx,0x2
    4cd7:	test   rsi,rsi
    4cda:	cvtsi2sd xmm0,QWORD PTR [rip+0x2284ed]        # 22d1d0 <P+0x30>
    4ce3:	cvtsi2sd xmm1,rdx
    4ce8:	divsd  xmm1,xmm0
    4cec:	js     58e0 <hvm_pf_xen_summary+0xcd0>
    4cf2:	pxor   xmm0,xmm0
    4cf6:	cvtsi2sd xmm0,rsi
    4cfb:	pxor   xmm2,xmm2
    4cff:	sub    rsp,0x8
    4d03:	mov    r9,r13
    4d06:	push   rbp
    4d07:	cvtsi2sd xmm2,QWORD PTR [rip+0x2243a0]        # 2290b0 <opt+0x10>
    4d10:	divsd  xmm0,xmm2
    4d14:	mov    edx,DWORD PTR [r12]
    4d18:	lea    rsi,[rip+0x1aab9]        # 1f7d8 <_IO_stdin_used+0x2818>
    4d1f:	mov    r8,rbx
    4d22:	mov    edi,0x1
    4d27:	mov    eax,0x2
    4d2c:	call   44f0 <__printf_chk@plt>
    4d31:	pop    r15
    4d33:	pop    rax
    4d34:	cmp    r14d,0x8
    4d38:	je     5380 <hvm_pf_xen_summary+0x770>
    4d3e:	cmp    r14d,0xc
    4d42:	je     5270 <hvm_pf_xen_summary+0x660>
    4d48:	cmp    r14d,0x6
    4d4c:	je     4e58 <hvm_pf_xen_summary+0x248>
    4d52:	cmp    DWORD PTR [rsp+0x8],0xd
    4d57:	je     5970 <hvm_pf_xen_summary+0xd60>
    4d5d:	nop    DWORD PTR [rax]
    4d60:	add    QWORD PTR [rsp+0x8],0x1
    4d66:	add    r12,0x38
    4d6a:	mov    rax,QWORD PTR [rsp+0x8]
    4d6f:	lea    rdi,[rip+0x2247ea]        # 229560 <pf_xen_name>
    4d76:	mov    rdx,QWORD PTR [rdi+rax*8]
    4d7a:	mov    r14d,eax
    4d7d:	lea    r15,[rax*8+0x0]
    4d85:	mov    eax,DWORD PTR [r12]
    4d89:	test   rdx,rdx
    4d8c:	jne    4c50 <hvm_pf_xen_summary+0x40>
    4d92:	test   eax,eax
    4d94:	je     4d34 <hvm_pf_xen_summary+0x124>
    4d96:	mov    eax,DWORD PTR [rip+0x22433c]        # 2290d8 <opt+0x38>
    4d9c:	test   eax,eax
    4d9e:	je     5900 <hvm_pf_xen_summary+0xcf0>
    4da4:	mov    esi,DWORD PTR [r12+0x4]
    4da9:	cmp    DWORD PTR [r12+0x8],esi
    4dae:	cmovle esi,DWORD PTR [r12+0x8]
    4db4:	test   esi,esi
    4db6:	mov    r13d,esi
    4db9:	jne    59de <hvm_pf_xen_summary+0xdce>
    4dbf:	xor    r13d,r13d
    4dc2:	xor    ebx,ebx
    4dc4:	xor    ebp,ebp
    4dc6:	lea    rsi,[rip+0x1825d]        # 1d02a <_IO_stdin_used+0x6a>
    4dcd:	xor    eax,eax
    4dcf:	mov    edx,r14d
    4dd2:	mov    edi,0x1
    4dd7:	call   44f0 <__printf_chk@plt>
    4ddc:	mov    eax,DWORD PTR [r12+0x4]
    4de1:	xor    ecx,ecx
    4de3:	mov    rsi,QWORD PTR [r12+0x10]
    4de8:	test   eax,eax
    4dea:	je     4dfa <hvm_pf_xen_summary+0x1ea>
    4dec:	movsxd rcx,eax
    4def:	xor    edx,edx
    4df1:	mov    rax,rsi
    4df4:	div    rcx
    4df7:	mov    rcx,rax
    4dfa:	lea    rdx,[rsi+rsi*4]
    4dfe:	pxor   xmm1,xmm1
    4e02:	pxor   xmm0,xmm0
    4e06:	lea    rdx,[rdx+rdx*4]
    4e0a:	shl    rdx,0x2
    4e0e:	test   rsi,rsi
    4e11:	cvtsi2sd xmm0,QWORD PTR [rip+0x2283b6]        # 22d1d0 <P+0x30>
    4e1a:	cvtsi2sd xmm1,rdx
    4e1f:	divsd  xmm1,xmm0
    4e23:	js     59c0 <hvm_pf_xen_summary+0xdb0>
    4e29:	pxor   xmm0,xmm0
    4e2d:	cvtsi2sd xmm0,rsi
    4e32:	pxor   xmm2,xmm2
    4e36:	sub    rsp,0x8
    4e3a:	mov    r9,rbp
    4e3d:	push   r13
    4e3f:	cvtsi2sd xmm2,QWORD PTR [rip+0x224268]        # 2290b0 <opt+0x10>
    4e48:	divsd  xmm0,xmm2
    4e4c:	jmp    4d14 <hvm_pf_xen_summary+0x104>
    4e51:	nop    DWORD PTR [rax+0x0]
    4e58:	mov    rax,QWORD PTR [rsp+0x10]
    4e5d:	xor    ebp,ebp
    4e5f:	lea    r14,[rip+0x22477a]        # 2295e0 <pf_xen_fixup_name>
    4e66:	mov    QWORD PTR [rsp+0x18],r12
    4e6b:	lea    rbx,[rax+0x110f0]
    4e72:	jmp    4f5c <hvm_pf_xen_summary+0x34c>
    4e77:	nop    WORD PTR [rax+rax*1+0x0]
    4e80:	mov    esi,DWORD PTR [rbx+0x4]
    4e83:	cmp    DWORD PTR [rbx+0x8],esi
    4e86:	cmovle esi,DWORD PTR [rbx+0x8]
    4e8a:	test   esi,esi
    4e8c:	mov    r15d,esi
    4e8f:	jne    56c0 <hvm_pf_xen_summary+0xab0>
    4e95:	xor    r15d,r15d
    4e98:	xor    r13d,r13d
    4e9b:	xor    r12d,r12d
    4e9e:	mov    rdx,QWORD PTR [r14+rbp*8]
    4ea2:	lea    rsi,[rip+0x1818e]        # 1d037 <_IO_stdin_used+0x77>
    4ea9:	xor    eax,eax
    4eab:	mov    edi,0x1
    4eb0:	call   44f0 <__printf_chk@plt>
    4eb5:	mov    eax,DWORD PTR [rbx+0x4]
    4eb8:	xor    ecx,ecx
    4eba:	mov    rsi,QWORD PTR [rbx+0x10]
    4ebe:	test   eax,eax
    4ec0:	je     4ed0 <hvm_pf_xen_summary+0x2c0>
    4ec2:	movsxd rcx,eax
    4ec5:	xor    edx,edx
    4ec7:	mov    rax,rsi
    4eca:	div    rcx
    4ecd:	mov    rcx,rax
    4ed0:	lea    rdx,[rsi+rsi*4]
    4ed4:	pxor   xmm1,xmm1
    4ed8:	pxor   xmm0,xmm0
    4edc:	lea    rdx,[rdx+rdx*4]
    4ee0:	shl    rdx,0x2
    4ee4:	test   rsi,rsi
    4ee7:	cvtsi2sd xmm0,QWORD PTR [rip+0x2282e0]        # 22d1d0 <P+0x30>
    4ef0:	cvtsi2sd xmm1,rdx
    4ef5:	divsd  xmm1,xmm0
    4ef9:	js     5238 <hvm_pf_xen_summary+0x628>
    4eff:	pxor   xmm0,xmm0
    4f03:	cvtsi2sd xmm0,rsi
    4f08:	pxor   xmm2,xmm2
    4f0c:	sub    rsp,0x8
    4f10:	lea    rsi,[rip+0x1a8c1]        # 1f7d8 <_IO_stdin_used+0x2818>
    4f17:	push   r15
    4f19:	mov    edx,DWORD PTR [rbx]
    4f1b:	mov    r9,r12
    4f1e:	mov    r8,r13
    4f21:	mov    edi,0x1
    4f26:	mov    eax,0x2
    4f2b:	cvtsi2sd xmm2,QWORD PTR [rip+0x22417c]        # 2290b0 <opt+0x10>
    4f34:	divsd  xmm0,xmm2
    4f38:	call   44f0 <__printf_chk@plt>
    4f3d:	pop    r11
    4f3f:	pop    r12
    4f41:	cmp    rbp,0x2
    4f45:	je     5011 <hvm_pf_xen_summary+0x401>
    4f4b:	cmp    ebp,0x8
    4f4e:	je     5260 <hvm_pf_xen_summary+0x650>
    4f54:	add    rbp,0x1
    4f58:	add    rbx,0x38
    4f5c:	mov    r15d,DWORD PTR [rbx]
    4f5f:	test   r15d,r15d
    4f62:	je     4f41 <hvm_pf_xen_summary+0x331>
    4f64:	mov    r13d,DWORD PTR [rip+0x22416d]        # 2290d8 <opt+0x38>
    4f6b:	test   r13d,r13d
    4f6e:	jne    4e80 <hvm_pf_xen_summary+0x270>
    4f74:	mov    rdx,QWORD PTR [r14+rbp*8]
    4f78:	lea    rsi,[rip+0x180b8]        # 1d037 <_IO_stdin_used+0x77>
    4f7f:	xor    eax,eax
    4f81:	mov    edi,0x1
    4f86:	call   44f0 <__printf_chk@plt>
    4f8b:	mov    eax,DWORD PTR [rbx+0x4]
    4f8e:	xor    ecx,ecx
    4f90:	mov    rsi,QWORD PTR [rbx+0x10]
    4f94:	test   eax,eax
    4f96:	je     4fa6 <hvm_pf_xen_summary+0x396>
    4f98:	movsxd rcx,eax
    4f9b:	xor    edx,edx
    4f9d:	mov    rax,rsi
    4fa0:	div    rcx
    4fa3:	mov    rcx,rax
    4fa6:	lea    rdx,[rsi+rsi*4]
    4faa:	pxor   xmm1,xmm1
    4fae:	pxor   xmm0,xmm0
    4fb2:	lea    rdx,[rdx+rdx*4]
    4fb6:	shl    rdx,0x2
    4fba:	test   rsi,rsi
    4fbd:	cvtsi2sd xmm0,QWORD PTR [rip+0x22820a]        # 22d1d0 <P+0x30>
    4fc6:	cvtsi2sd xmm1,rdx
    4fcb:	divsd  xmm1,xmm0
    4fcf:	js     57c0 <hvm_pf_xen_summary+0xbb0>
    4fd5:	pxor   xmm0,xmm0
    4fd9:	cvtsi2sd xmm0,rsi
    4fde:	pxor   xmm2,xmm2
    4fe2:	mov    edx,DWORD PTR [rbx]
    4fe4:	lea    rsi,[rip+0x1a825]        # 1f810 <_IO_stdin_used+0x2850>
    4feb:	mov    edi,0x1
    4ff0:	mov    eax,0x2
    4ff5:	cvtsi2sd xmm2,QWORD PTR [rip+0x2240b2]        # 2290b0 <opt+0x10>
    4ffe:	divsd  xmm0,xmm2
    5002:	call   44f0 <__printf_chk@plt>
    5007:	cmp    rbp,0x2
    500b:	jne    4f4b <hvm_pf_xen_summary+0x33b>
    5011:	mov    rax,QWORD PTR [rsp+0x10]
    5016:	xor    r13d,r13d
    5019:	lea    r15,[rax+0x112e8]
    5020:	mov    r12,r15
    5023:	mov    r10d,DWORD PTR [r12]
    5027:	test   r10d,r10d
    502a:	je     511a <hvm_pf_xen_summary+0x50a>
    5030:	mov    r9d,DWORD PTR [rip+0x2240a1]        # 2290d8 <opt+0x38>
    5037:	test   r9d,r9d
    503a:	je     5b3a <hvm_pf_xen_summary+0xf2a>
    5040:	mov    ecx,DWORD PTR [r12+0x4]
    5045:	cmp    DWORD PTR [r12+0x8],ecx
    504a:	cmovle ecx,DWORD PTR [r12+0x8]
    5050:	test   ecx,ecx
    5052:	mov    r15d,ecx
    5055:	jne    5c4a <hvm_pf_xen_summary+0x103a>
    505b:	xor    r15d,r15d
    505e:	mov    QWORD PTR [rsp+0x28],0x0
    5067:	mov    QWORD PTR [rsp+0x20],0x0
    5070:	lea    rsi,[rip+0x17fdd]        # 1d054 <_IO_stdin_used+0x94>
    5077:	xor    eax,eax
    5079:	mov    edx,r13d
    507c:	mov    edi,0x1
    5081:	call   44f0 <__printf_chk@plt>
    5086:	mov    eax,DWORD PTR [r12+0x4]
    508b:	xor    ecx,ecx
    508d:	mov    rsi,QWORD PTR [r12+0x10]
    5092:	test   eax,eax
    5094:	je     50a4 <hvm_pf_xen_summary+0x494>
    5096:	movsxd rcx,eax
    5099:	xor    edx,edx
    509b:	mov    rax,rsi
    509e:	div    rcx
    50a1:	mov    rcx,rax
    50a4:	lea    rax,[rsi+rsi*4]
    50a8:	pxor   xmm1,xmm1
    50ac:	pxor   xmm0,xmm0
    50b0:	lea    rdx,[rax+rax*4]
    50b4:	shl    rdx,0x2
    50b8:	test   rsi,rsi
    50bb:	cvtsi2sd xmm0,QWORD PTR [rip+0x22810c]        # 22d1d0 <P+0x30>
    50c4:	cvtsi2sd xmm1,rdx
    50c9:	divsd  xmm1,xmm0
    50cd:	js     5c2c <hvm_pf_xen_summary+0x101c>
    50d3:	pxor   xmm0,xmm0
    50d7:	cvtsi2sd xmm0,rsi
    50dc:	pxor   xmm2,xmm2
    50e0:	sub    rsp,0x8
    50e4:	lea    rsi,[rip+0x1a6ed]        # 1f7d8 <_IO_stdin_used+0x2818>
    50eb:	push   r15
    50ed:	mov    r9,QWORD PTR [rsp+0x30]
    50f2:	mov    edi,0x1
    50f7:	mov    r8,QWORD PTR [rsp+0x38]
    50fc:	mov    edx,DWORD PTR [r12]
    5100:	mov    eax,0x2
    5105:	cvtsi2sd xmm2,QWORD PTR [rip+0x223fa2]        # 2290b0 <opt+0x10>
    510e:	divsd  xmm0,xmm2
    5112:	call   44f0 <__printf_chk@plt>
    5117:	pop    rdi
    5118:	pop    r8
    511a:	add    r12,0x38
    511e:	cmp    r13d,0x1
    5122:	jne    5ad1 <hvm_pf_xen_summary+0xec1>
    5128:	mov    rax,QWORD PTR [rsp+0x10]
    512d:	mov    esi,DWORD PTR [rax+0x11358]
    5133:	test   esi,esi
    5135:	je     4f54 <hvm_pf_xen_summary+0x344>
    513b:	mov    ecx,DWORD PTR [rip+0x223f97]        # 2290d8 <opt+0x38>
    5141:	test   ecx,ecx
    5143:	je     5c9f <hvm_pf_xen_summary+0x108f>
    5149:	mov    ecx,DWORD PTR [rax+0x1135c]
    514f:	cmp    DWORD PTR [rax+0x11360],ecx
    5155:	cmovle ecx,DWORD PTR [rax+0x11360]
    515c:	test   ecx,ecx
    515e:	mov    r13d,ecx
    5161:	jne    5bd5 <hvm_pf_xen_summary+0xfc5>
    5167:	xor    r8d,r8d
    516a:	xor    r12d,r12d
    516d:	xor    r15d,r15d
    5170:	lea    rsi,[rip+0x17eec]        # 1d063 <_IO_stdin_used+0xa3>
    5177:	xor    eax,eax
    5179:	mov    edi,0x1
    517e:	mov    QWORD PTR [rsp+0x20],r8
    5183:	call   44f0 <__printf_chk@plt>
    5188:	mov    rax,QWORD PTR [rsp+0x10]
    518d:	mov    r8,QWORD PTR [rsp+0x20]
    5192:	movsxd rcx,DWORD PTR [rax+0x1135c]
    5199:	test   ecx,ecx
    519b:	je     5c91 <hvm_pf_xen_summary+0x1081>
    51a1:	mov    rax,QWORD PTR [rsp+0x10]
    51a6:	xor    edx,edx
    51a8:	mov    rsi,QWORD PTR [rax+0x11368]
    51af:	mov    rax,rsi
    51b2:	div    rcx
    51b5:	mov    rcx,rax
    51b8:	lea    rax,[rsi+rsi*4]
    51bc:	pxor   xmm1,xmm1
    51c0:	pxor   xmm0,xmm0
    51c4:	lea    rdx,[rax+rax*4]
    51c8:	shl    rdx,0x2
    51cc:	test   rsi,rsi
    51cf:	cvtsi2sd xmm0,QWORD PTR [rip+0x227ff8]        # 22d1d0 <P+0x30>
    51d8:	cvtsi2sd xmm1,rdx
    51dd:	divsd  xmm1,xmm0
    51e1:	js     5d3e <hvm_pf_xen_summary+0x112e>
    51e7:	pxor   xmm0,xmm0
    51eb:	cvtsi2sd xmm0,rsi
    51f0:	pxor   xmm2,xmm2
    51f4:	mov    rax,QWORD PTR [rsp+0x10]
    51f9:	sub    rsp,0x8
    51fd:	lea    rsi,[rip+0x1a5d4]        # 1f7d8 <_IO_stdin_used+0x2818>
    5204:	mov    r9,r15
    5207:	mov    edi,0x1
    520c:	cvtsi2sd xmm2,QWORD PTR [rip+0x223e9b]        # 2290b0 <opt+0x10>
    5215:	divsd  xmm0,xmm2
    5219:	mov    edx,DWORD PTR [rax+0x11358]
    521f:	push   r8
    5221:	mov    eax,0x2
    5226:	mov    r8,r12
    5229:	call   44f0 <__printf_chk@plt>
    522e:	pop    rax
    522f:	pop    rdx
    5230:	jmp    4f54 <hvm_pf_xen_summary+0x344>
    5235:	nop    DWORD PTR [rax]
    5238:	mov    rax,rsi
    523b:	pxor   xmm0,xmm0
    523f:	shr    rax,1
    5242:	and    esi,0x1
    5245:	or     rax,rsi
    5248:	cvtsi2sd xmm0,rax
    524d:	addsd  xmm0,xmm0
    5251:	jmp    4f08 <hvm_pf_xen_summary+0x2f8>
    5256:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5260:	mov    r12,QWORD PTR [rsp+0x18]
    5265:	jmp    4d60 <hvm_pf_xen_summary+0x150>
    526a:	nop    WORD PTR [rax+rax*1+0x0]
    5270:	mov    rax,QWORD PTR [rsp+0x10]
    5275:	xor    r15d,r15d
    5278:	lea    rbx,[rax+0x11010]
    527f:	mov    r14d,DWORD PTR [rbx]
    5282:	test   r14d,r14d
    5285:	je     5361 <hvm_pf_xen_summary+0x751>
    528b:	mov    r13d,DWORD PTR [rip+0x223e46]        # 2290d8 <opt+0x38>
    5292:	test   r13d,r13d
    5295:	je     5720 <hvm_pf_xen_summary+0xb10>
    529b:	mov    esi,DWORD PTR [rbx+0x4]
    529e:	cmp    DWORD PTR [rbx+0x8],esi
    52a1:	cmovle esi,DWORD PTR [rbx+0x8]
    52a5:	test   esi,esi
    52a7:	mov    r13d,esi
    52aa:	jne    58a0 <hvm_pf_xen_summary+0xc90>
    52b0:	xor    r13d,r13d
    52b3:	xor    ebp,ebp
    52b5:	xor    r14d,r14d
    52b8:	lea    rax,[rip+0x224381]        # 229640 <pf_xen_non_emul_name>
    52bf:	lea    rsi,[rip+0x17d71]        # 1d037 <_IO_stdin_used+0x77>
    52c6:	mov    edi,0x1
    52cb:	mov    rdx,QWORD PTR [rax+r15*8]
    52cf:	xor    eax,eax
    52d1:	call   44f0 <__printf_chk@plt>
    52d6:	mov    eax,DWORD PTR [rbx+0x4]
    52d9:	xor    ecx,ecx
    52db:	mov    rsi,QWORD PTR [rbx+0x10]
    52df:	test   eax,eax
    52e1:	je     52f1 <hvm_pf_xen_summary+0x6e1>
    52e3:	movsxd rcx,eax
    52e6:	xor    edx,edx
    52e8:	mov    rax,rsi
    52eb:	div    rcx
    52ee:	mov    rcx,rax
    52f1:	lea    rdx,[rsi+rsi*4]
    52f5:	pxor   xmm1,xmm1
    52f9:	pxor   xmm0,xmm0
    52fd:	lea    rdx,[rdx+rdx*4]
    5301:	shl    rdx,0x2
    5305:	test   rsi,rsi
    5308:	cvtsi2sd xmm0,QWORD PTR [rip+0x227ebf]        # 22d1d0 <P+0x30>
    5311:	cvtsi2sd xmm1,rdx
    5316:	divsd  xmm1,xmm0
    531a:	js     57e0 <hvm_pf_xen_summary+0xbd0>
    5320:	pxor   xmm0,xmm0
    5324:	cvtsi2sd xmm0,rsi
    5329:	pxor   xmm2,xmm2
    532d:	sub    rsp,0x8
    5331:	lea    rsi,[rip+0x1a4a0]        # 1f7d8 <_IO_stdin_used+0x2818>
    5338:	push   r13
    533a:	mov    edx,DWORD PTR [rbx]
    533c:	mov    r8,rbp
    533f:	mov    r9,r14
    5342:	mov    edi,0x1
    5347:	mov    eax,0x2
    534c:	cvtsi2sd xmm2,QWORD PTR [rip+0x223d5b]        # 2290b0 <opt+0x10>
    5355:	divsd  xmm0,xmm2
    5359:	call   44f0 <__printf_chk@plt>
    535e:	pop    r11
    5360:	pop    rbp
    5361:	add    r15,0x1
    5365:	add    rbx,0x38
    5369:	cmp    r15,0x4
    536d:	jne    527f <hvm_pf_xen_summary+0x66f>
    5373:	jmp    4d60 <hvm_pf_xen_summary+0x150>
    5378:	nop    DWORD PTR [rax+rax*1+0x0]
    5380:	mov    rax,QWORD PTR [rsp+0x10]
    5385:	xor    ebp,ebp
    5387:	lea    rbx,[rax+0x10be8]
    538e:	jmp    547a <hvm_pf_xen_summary+0x86a>
    5393:	nop    DWORD PTR [rax+rax*1+0x0]
    5398:	mov    esi,DWORD PTR [rbx+0x4]
    539b:	cmp    DWORD PTR [rbx+0x8],esi
    539e:	cmovle esi,DWORD PTR [rbx+0x8]
    53a2:	test   esi,esi
    53a4:	mov    r13d,esi
    53a7:	jne    5680 <hvm_pf_xen_summary+0xa70>
    53ad:	xor    r13d,r13d
    53b0:	xor    r14d,r14d
    53b3:	xor    r15d,r15d
    53b6:	lea    rax,[rip+0x2242a3]        # 229660 <pf_xen_emul_name>
    53bd:	lea    rsi,[rip+0x17c73]        # 1d037 <_IO_stdin_used+0x77>
    53c4:	mov    edi,0x1
    53c9:	mov    rdx,QWORD PTR [rax+rbp*8]
    53cd:	xor    eax,eax
    53cf:	call   44f0 <__printf_chk@plt>
    53d4:	mov    eax,DWORD PTR [rbx+0x4]
    53d7:	xor    ecx,ecx
    53d9:	mov    rsi,QWORD PTR [rbx+0x10]
    53dd:	test   eax,eax
    53df:	je     53ef <hvm_pf_xen_summary+0x7df>
    53e1:	movsxd rcx,eax
    53e4:	xor    edx,edx
    53e6:	mov    rax,rsi
    53e9:	div    rcx
    53ec:	mov    rcx,rax
    53ef:	lea    rdx,[rsi+rsi*4]
    53f3:	pxor   xmm1,xmm1
    53f7:	pxor   xmm0,xmm0
    53fb:	lea    rdx,[rdx+rdx*4]
    53ff:	shl    rdx,0x2
    5403:	test   rsi,rsi
    5406:	cvtsi2sd xmm0,QWORD PTR [rip+0x227dc1]        # 22d1d0 <P+0x30>
    540f:	cvtsi2sd xmm1,rdx
    5414:	divsd  xmm1,xmm0
    5418:	js     5658 <hvm_pf_xen_summary+0xa48>
    541e:	pxor   xmm0,xmm0
    5422:	cvtsi2sd xmm0,rsi
    5427:	pxor   xmm2,xmm2
    542b:	sub    rsp,0x8
    542f:	lea    rsi,[rip+0x1a3a2]        # 1f7d8 <_IO_stdin_used+0x2818>
    5436:	push   r13
    5438:	mov    edx,DWORD PTR [rbx]
    543a:	mov    r8,r14
    543d:	mov    edi,0x1
    5442:	mov    r9,r15
    5445:	mov    eax,0x2
    544a:	cvtsi2sd xmm2,QWORD PTR [rip+0x223c5d]        # 2290b0 <opt+0x10>
    5453:	divsd  xmm0,xmm2
    5457:	call   44f0 <__printf_chk@plt>
    545c:	pop    rdi
    545d:	pop    r8
    545f:	cmp    rbp,0x5
    5463:	je     5536 <hvm_pf_xen_summary+0x926>
    5469:	cmp    ebp,0xd
    546c:	je     4d60 <hvm_pf_xen_summary+0x150>
    5472:	add    rbp,0x1
    5476:	add    rbx,0x38
    547a:	mov    r10d,DWORD PTR [rbx]
    547d:	test   r10d,r10d
    5480:	je     545f <hvm_pf_xen_summary+0x84f>
    5482:	mov    r9d,DWORD PTR [rip+0x223c4f]        # 2290d8 <opt+0x38>
    5489:	test   r9d,r9d
    548c:	jne    5398 <hvm_pf_xen_summary+0x788>
    5492:	lea    rax,[rip+0x2241c7]        # 229660 <pf_xen_emul_name>
    5499:	lea    rsi,[rip+0x17b97]        # 1d037 <_IO_stdin_used+0x77>
    54a0:	mov    edi,0x1
    54a5:	mov    rdx,QWORD PTR [rax+rbp*8]
    54a9:	xor    eax,eax
    54ab:	call   44f0 <__printf_chk@plt>
    54b0:	mov    eax,DWORD PTR [rbx+0x4]
    54b3:	xor    ecx,ecx
    54b5:	mov    rsi,QWORD PTR [rbx+0x10]
    54b9:	test   eax,eax
    54bb:	je     54cb <hvm_pf_xen_summary+0x8bb>
    54bd:	movsxd rcx,eax
    54c0:	xor    edx,edx
    54c2:	mov    rax,rsi
    54c5:	div    rcx
    54c8:	mov    rcx,rax
    54cb:	lea    rdx,[rsi+rsi*4]
    54cf:	pxor   xmm1,xmm1
    54d3:	pxor   xmm0,xmm0
    54d7:	lea    rdx,[rdx+rdx*4]
    54db:	shl    rdx,0x2
    54df:	test   rsi,rsi
    54e2:	cvtsi2sd xmm0,QWORD PTR [rip+0x227ce5]        # 22d1d0 <P+0x30>
    54eb:	cvtsi2sd xmm1,rdx
    54f0:	divsd  xmm1,xmm0
    54f4:	js     5700 <hvm_pf_xen_summary+0xaf0>
    54fa:	pxor   xmm0,xmm0
    54fe:	cvtsi2sd xmm0,rsi
    5503:	pxor   xmm2,xmm2
    5507:	mov    edx,DWORD PTR [rbx]
    5509:	lea    rsi,[rip+0x1a300]        # 1f810 <_IO_stdin_used+0x2850>
    5510:	mov    edi,0x1
    5515:	mov    eax,0x2
    551a:	cvtsi2sd xmm2,QWORD PTR [rip+0x223b8d]        # 2290b0 <opt+0x10>
    5523:	divsd  xmm0,xmm2
    5527:	call   44f0 <__printf_chk@plt>
    552c:	cmp    rbp,0x5
    5530:	jne    5469 <hvm_pf_xen_summary+0x859>
    5536:	mov    rax,QWORD PTR [rsp+0x10]
    553b:	xor    r14d,r14d
    553e:	mov    QWORD PTR [rsp+0x18],rbx
    5543:	mov    QWORD PTR [rsp+0x20],rbp
    5548:	mov    ebx,r14d
    554b:	lea    r13,[rax+0x10ef8]
    5552:	nop    WORD PTR [rax+rax*1+0x0]
    5558:	mov    esi,DWORD PTR [r13+0x0]
    555c:	test   esi,esi
    555e:	je     5634 <hvm_pf_xen_summary+0xa24>
    5564:	mov    ecx,DWORD PTR [rip+0x223b6e]        # 2290d8 <opt+0x38>
    556a:	test   ecx,ecx
    556c:	je     5a1f <hvm_pf_xen_summary+0xe0f>
    5572:	mov    eax,DWORD PTR [r13+0x4]
    5576:	cmp    DWORD PTR [r13+0x8],eax
    557a:	cmovle eax,DWORD PTR [r13+0x8]
    557f:	test   eax,eax
    5581:	mov    r14d,eax
    5584:	jne    5afa <hvm_pf_xen_summary+0xeea>
    558a:	xor    r14d,r14d
    558d:	xor    r15d,r15d
    5590:	xor    ebp,ebp
    5592:	lea    rsi,[rip+0x17aac]        # 1d045 <_IO_stdin_used+0x85>
    5599:	xor    eax,eax
    559b:	mov    edx,ebx
    559d:	mov    edi,0x1
    55a2:	call   44f0 <__printf_chk@plt>
    55a7:	mov    eax,DWORD PTR [r13+0x4]
    55ab:	xor    ecx,ecx
    55ad:	mov    rsi,QWORD PTR [r13+0x10]
    55b1:	test   eax,eax
    55b3:	je     55c3 <hvm_pf_xen_summary+0x9b3>
    55b5:	movsxd rcx,eax
    55b8:	xor    edx,edx
    55ba:	mov    rax,rsi
    55bd:	div    rcx
    55c0:	mov    rcx,rax
    55c3:	lea    rax,[rsi+rsi*4]
    55c7:	pxor   xmm1,xmm1
    55cb:	pxor   xmm0,xmm0
    55cf:	lea    rdx,[rax+rax*4]
    55d3:	shl    rdx,0x2
    55d7:	test   rsi,rsi
    55da:	cvtsi2sd xmm0,QWORD PTR [rip+0x227bed]        # 22d1d0 <P+0x30>
    55e3:	cvtsi2sd xmm1,rdx
    55e8:	divsd  xmm1,xmm0
    55ec:	js     5adc <hvm_pf_xen_summary+0xecc>
    55f2:	pxor   xmm0,xmm0
    55f6:	cvtsi2sd xmm0,rsi
    55fb:	pxor   xmm2,xmm2
    55ff:	sub    rsp,0x8
    5603:	lea    rsi,[rip+0x1a1ce]        # 1f7d8 <_IO_stdin_used+0x2818>
    560a:	push   r14
    560c:	mov    edx,DWORD PTR [r13+0x0]
    5610:	mov    r9,rbp
    5613:	mov    r8,r15
    5616:	mov    edi,0x1
    561b:	mov    eax,0x2
    5620:	cvtsi2sd xmm2,QWORD PTR [rip+0x223a87]        # 2290b0 <opt+0x10>
    5629:	divsd  xmm0,xmm2
    562d:	call   44f0 <__printf_chk@plt>
    5632:	pop    rax
    5633:	pop    rdx
    5634:	add    ebx,0x1
    5637:	add    r13,0x38
    563b:	cmp    ebx,0x5
    563e:	jne    5558 <hvm_pf_xen_summary+0x948>
    5644:	mov    rbx,QWORD PTR [rsp+0x18]
    5649:	mov    rbp,QWORD PTR [rsp+0x20]
    564e:	jmp    5472 <hvm_pf_xen_summary+0x862>
    5653:	nop    DWORD PTR [rax+rax*1+0x0]
    5658:	mov    rax,rsi
    565b:	pxor   xmm0,xmm0
    565f:	shr    rax,1
    5662:	and    esi,0x1
    5665:	or     rax,rsi
    5668:	cvtsi2sd xmm0,rax
    566d:	addsd  xmm0,xmm0
    5671:	jmp    5427 <hvm_pf_xen_summary+0x817>
    5676:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5680:	mov    rdi,QWORD PTR [rbx+0x18]
    5684:	mov    edx,0x32
    5689:	call   4b30 <percentile.part.6>
    568e:	mov    rdi,QWORD PTR [rbx+0x18]
    5692:	mov    esi,r13d
    5695:	mov    edx,0x5
    569a:	mov    r15,rax
    569d:	call   4b30 <percentile.part.6>
    56a2:	mov    rdi,QWORD PTR [rbx+0x18]
    56a6:	mov    esi,r13d
    56a9:	mov    edx,0x5f
    56ae:	mov    r14,rax
    56b1:	call   4b30 <percentile.part.6>
    56b6:	mov    r13,rax
    56b9:	jmp    53b6 <hvm_pf_xen_summary+0x7a6>
    56be:	xchg   ax,ax
    56c0:	mov    rdi,QWORD PTR [rbx+0x18]
    56c4:	mov    edx,0x32
    56c9:	call   4b30 <percentile.part.6>
    56ce:	mov    rdi,QWORD PTR [rbx+0x18]
    56d2:	mov    esi,r15d
    56d5:	mov    edx,0x5
    56da:	mov    r12,rax
    56dd:	call   4b30 <percentile.part.6>
    56e2:	mov    rdi,QWORD PTR [rbx+0x18]
    56e6:	mov    esi,r15d
    56e9:	mov    edx,0x5f
    56ee:	mov    r13,rax
    56f1:	call   4b30 <percentile.part.6>
    56f6:	mov    r15,rax
    56f9:	jmp    4e9e <hvm_pf_xen_summary+0x28e>
    56fe:	xchg   ax,ax
    5700:	mov    rax,rsi
    5703:	pxor   xmm0,xmm0
    5707:	shr    rax,1
    570a:	and    esi,0x1
    570d:	or     rax,rsi
    5710:	cvtsi2sd xmm0,rax
    5715:	addsd  xmm0,xmm0
    5719:	jmp    5503 <hvm_pf_xen_summary+0x8f3>
    571e:	xchg   ax,ax
    5720:	lea    rax,[rip+0x223f19]        # 229640 <pf_xen_non_emul_name>
    5727:	lea    rsi,[rip+0x17909]        # 1d037 <_IO_stdin_used+0x77>
    572e:	mov    edi,0x1
    5733:	mov    rdx,QWORD PTR [rax+r15*8]
    5737:	xor    eax,eax
    5739:	call   44f0 <__printf_chk@plt>
    573e:	mov    eax,DWORD PTR [rbx+0x4]
    5741:	xor    ecx,ecx
    5743:	mov    rsi,QWORD PTR [rbx+0x10]
    5747:	test   eax,eax
    5749:	je     5759 <hvm_pf_xen_summary+0xb49>
    574b:	movsxd rcx,eax
    574e:	xor    edx,edx
    5750:	mov    rax,rsi
    5753:	div    rcx
    5756:	mov    rcx,rax
    5759:	lea    rdx,[rsi+rsi*4]
    575d:	pxor   xmm1,xmm1
    5761:	pxor   xmm0,xmm0
    5765:	lea    rdx,[rdx+rdx*4]
    5769:	shl    rdx,0x2
    576d:	test   rsi,rsi
    5770:	cvtsi2sd xmm0,QWORD PTR [rip+0x227a57]        # 22d1d0 <P+0x30>
    5779:	cvtsi2sd xmm1,rdx
    577e:	divsd  xmm1,xmm0
    5782:	js     59a0 <hvm_pf_xen_summary+0xd90>
    5788:	pxor   xmm0,xmm0
    578c:	cvtsi2sd xmm0,rsi
    5791:	pxor   xmm2,xmm2
    5795:	mov    edx,DWORD PTR [rbx]
    5797:	lea    rsi,[rip+0x1a072]        # 1f810 <_IO_stdin_used+0x2850>
    579e:	mov    edi,0x1
    57a3:	mov    eax,0x2
    57a8:	cvtsi2sd xmm2,QWORD PTR [rip+0x2238ff]        # 2290b0 <opt+0x10>
    57b1:	divsd  xmm0,xmm2
    57b5:	call   44f0 <__printf_chk@plt>
    57ba:	jmp    5361 <hvm_pf_xen_summary+0x751>
    57bf:	nop
    57c0:	mov    rax,rsi
    57c3:	pxor   xmm0,xmm0
    57c7:	shr    rax,1
    57ca:	and    esi,0x1
    57cd:	or     rax,rsi
    57d0:	cvtsi2sd xmm0,rax
    57d5:	addsd  xmm0,xmm0
    57d9:	jmp    4fde <hvm_pf_xen_summary+0x3ce>
    57de:	xchg   ax,ax
    57e0:	mov    rax,rsi
    57e3:	pxor   xmm0,xmm0
    57e7:	shr    rax,1
    57ea:	and    esi,0x1
    57ed:	or     rax,rsi
    57f0:	cvtsi2sd xmm0,rax
    57f5:	addsd  xmm0,xmm0
    57f9:	jmp    5329 <hvm_pf_xen_summary+0x719>
    57fe:	xchg   ax,ax
    5800:	lea    rsi,[rip+0x17817]        # 1d01e <_IO_stdin_used+0x5e>
    5807:	xor    eax,eax
    5809:	mov    edi,0x1
    580e:	call   44f0 <__printf_chk@plt>
    5813:	mov    eax,DWORD PTR [r12+0x4]
    5818:	mov    rsi,QWORD PTR [r12+0x10]
    581d:	test   eax,eax
    581f:	je     5929 <hvm_pf_xen_summary+0xd19>
    5825:	movsxd rcx,eax
    5828:	xor    edx,edx
    582a:	mov    rax,rsi
    582d:	div    rcx
    5830:	mov    rcx,rax
    5833:	lea    rdx,[rsi+rsi*4]
    5837:	pxor   xmm1,xmm1
    583b:	pxor   xmm0,xmm0
    583f:	lea    rdx,[rdx+rdx*4]
    5843:	shl    rdx,0x2
    5847:	test   rsi,rsi
    584a:	cvtsi2sd xmm0,QWORD PTR [rip+0x22797d]        # 22d1d0 <P+0x30>
    5853:	cvtsi2sd xmm1,rdx
    5858:	divsd  xmm1,xmm0
    585c:	js     5980 <hvm_pf_xen_summary+0xd70>
    5862:	pxor   xmm0,xmm0
    5866:	cvtsi2sd xmm0,rsi
    586b:	pxor   xmm2,xmm2
    586f:	mov    edx,DWORD PTR [r12]
    5873:	lea    rsi,[rip+0x19f96]        # 1f810 <_IO_stdin_used+0x2850>
    587a:	mov    edi,0x1
    587f:	mov    eax,0x2
    5884:	cvtsi2sd xmm2,QWORD PTR [rip+0x223823]        # 2290b0 <opt+0x10>
    588d:	divsd  xmm0,xmm2
    5891:	call   44f0 <__printf_chk@plt>
    5896:	jmp    4d34 <hvm_pf_xen_summary+0x124>
    589b:	nop    DWORD PTR [rax+rax*1+0x0]
    58a0:	mov    rdi,QWORD PTR [rbx+0x18]
    58a4:	mov    edx,0x32
    58a9:	call   4b30 <percentile.part.6>
    58ae:	mov    rdi,QWORD PTR [rbx+0x18]
    58b2:	mov    esi,r13d
    58b5:	mov    edx,0x5
    58ba:	mov    r14,rax
    58bd:	call   4b30 <percentile.part.6>
    58c2:	mov    rdi,QWORD PTR [rbx+0x18]
    58c6:	mov    esi,r13d
    58c9:	mov    edx,0x5f
    58ce:	mov    rbp,rax
    58d1:	call   4b30 <percentile.part.6>
    58d6:	mov    r13,rax
    58d9:	jmp    52b8 <hvm_pf_xen_summary+0x6a8>
    58de:	xchg   ax,ax
    58e0:	mov    rax,rsi
    58e3:	pxor   xmm0,xmm0
    58e7:	shr    rax,1
    58ea:	and    esi,0x1
    58ed:	or     rax,rsi
    58f0:	cvtsi2sd xmm0,rax
    58f5:	addsd  xmm0,xmm0
    58f9:	jmp    4cfb <hvm_pf_xen_summary+0xeb>
    58fe:	xchg   ax,ax
    5900:	mov    edx,DWORD PTR [rsp+0x8]
    5904:	lea    rsi,[rip+0x1771f]        # 1d02a <_IO_stdin_used+0x6a>
    590b:	xor    eax,eax
    590d:	mov    edi,0x1
    5912:	call   44f0 <__printf_chk@plt>
    5917:	mov    eax,DWORD PTR [r12+0x4]
    591c:	mov    rsi,QWORD PTR [r12+0x10]
    5921:	test   eax,eax
    5923:	jne    5825 <hvm_pf_xen_summary+0xc15>
    5929:	xor    ecx,ecx
    592b:	jmp    5833 <hvm_pf_xen_summary+0xc23>
    5930:	mov    rdi,QWORD PTR [r12+0x18]
    5935:	mov    edx,0x32
    593a:	call   4b30 <percentile.part.6>
    593f:	mov    rdi,QWORD PTR [r12+0x18]
    5944:	mov    esi,ebp
    5946:	mov    edx,0x5
    594b:	mov    r13,rax
    594e:	call   4b30 <percentile.part.6>
    5953:	mov    rdi,QWORD PTR [r12+0x18]
    5958:	mov    esi,ebp
    595a:	mov    edx,0x5f
    595f:	mov    rbx,rax
    5962:	call   4b30 <percentile.part.6>
    5967:	mov    rbp,rax
    596a:	jmp    4c87 <hvm_pf_xen_summary+0x77>
    596f:	nop
    5970:	add    rsp,0x38
    5974:	pop    rbx
    5975:	pop    rbp
    5976:	pop    r12
    5978:	pop    r13
    597a:	pop    r14
    597c:	pop    r15
    597e:	ret    
    597f:	nop
    5980:	mov    rax,rsi
    5983:	pxor   xmm0,xmm0
    5987:	shr    rax,1
    598a:	and    esi,0x1
    598d:	or     rax,rsi
    5990:	cvtsi2sd xmm0,rax
    5995:	addsd  xmm0,xmm0
    5999:	jmp    586b <hvm_pf_xen_summary+0xc5b>
    599e:	xchg   ax,ax
    59a0:	mov    rax,rsi
    59a3:	pxor   xmm0,xmm0
    59a7:	shr    rax,1
    59aa:	and    esi,0x1
    59ad:	or     rax,rsi
    59b0:	cvtsi2sd xmm0,rax
    59b5:	addsd  xmm0,xmm0
    59b9:	jmp    5791 <hvm_pf_xen_summary+0xb81>
    59be:	xchg   ax,ax
    59c0:	mov    rax,rsi
    59c3:	pxor   xmm0,xmm0
    59c7:	shr    rax,1
    59ca:	and    esi,0x1
    59cd:	or     rax,rsi
    59d0:	cvtsi2sd xmm0,rax
    59d5:	addsd  xmm0,xmm0
    59d9:	jmp    4e32 <hvm_pf_xen_summary+0x222>
    59de:	mov    rdi,QWORD PTR [r12+0x18]
    59e3:	mov    edx,0x32
    59e8:	call   4b30 <percentile.part.6>
    59ed:	mov    rdi,QWORD PTR [r12+0x18]
    59f2:	mov    esi,r13d
    59f5:	mov    edx,0x5
    59fa:	mov    rbp,rax
    59fd:	call   4b30 <percentile.part.6>
    5a02:	mov    rdi,QWORD PTR [r12+0x18]
    5a07:	mov    esi,r13d
    5a0a:	mov    edx,0x5f
    5a0f:	mov    rbx,rax
    5a12:	call   4b30 <percentile.part.6>
    5a17:	mov    r13,rax
    5a1a:	jmp    4dc6 <hvm_pf_xen_summary+0x1b6>
    5a1f:	lea    rsi,[rip+0x1761f]        # 1d045 <_IO_stdin_used+0x85>
    5a26:	xor    eax,eax
    5a28:	mov    edx,ebx
    5a2a:	mov    edi,0x1
    5a2f:	call   44f0 <__printf_chk@plt>
    5a34:	mov    eax,DWORD PTR [r13+0x4]
    5a38:	xor    ecx,ecx
    5a3a:	mov    rsi,QWORD PTR [r13+0x10]
    5a3e:	test   eax,eax
    5a40:	jne    5aa6 <hvm_pf_xen_summary+0xe96>
    5a42:	lea    rdx,[rsi+rsi*4]
    5a46:	pxor   xmm1,xmm1
    5a4a:	pxor   xmm0,xmm0
    5a4e:	lea    rdx,[rdx+rdx*4]
    5a52:	shl    rdx,0x2
    5a56:	test   rsi,rsi
    5a59:	cvtsi2sd xmm0,QWORD PTR [rip+0x22776e]        # 22d1d0 <P+0x30>
    5a62:	cvtsi2sd xmm1,rdx
    5a67:	divsd  xmm1,xmm0
    5a6b:	js     5ab6 <hvm_pf_xen_summary+0xea6>
    5a6d:	pxor   xmm0,xmm0
    5a71:	cvtsi2sd xmm0,rsi
    5a76:	pxor   xmm2,xmm2
    5a7a:	mov    edx,DWORD PTR [r13+0x0]
    5a7e:	lea    rsi,[rip+0x19d8b]        # 1f810 <_IO_stdin_used+0x2850>
    5a85:	mov    edi,0x1
    5a8a:	mov    eax,0x2
    5a8f:	cvtsi2sd xmm2,QWORD PTR [rip+0x223618]        # 2290b0 <opt+0x10>
    5a98:	divsd  xmm0,xmm2
    5a9c:	call   44f0 <__printf_chk@plt>
    5aa1:	jmp    5634 <hvm_pf_xen_summary+0xa24>
    5aa6:	movsxd rcx,eax
    5aa9:	xor    edx,edx
    5aab:	mov    rax,rsi
    5aae:	div    rcx
    5ab1:	mov    rcx,rax
    5ab4:	jmp    5a42 <hvm_pf_xen_summary+0xe32>
    5ab6:	mov    rax,rsi
    5ab9:	pxor   xmm0,xmm0
    5abd:	shr    rax,1
    5ac0:	and    esi,0x1
    5ac3:	or     rax,rsi
    5ac6:	cvtsi2sd xmm0,rax
    5acb:	addsd  xmm0,xmm0
    5acf:	jmp    5a76 <hvm_pf_xen_summary+0xe66>
    5ad1:	mov    r13d,0x1
    5ad7:	jmp    5023 <hvm_pf_xen_summary+0x413>
    5adc:	mov    rax,rsi
    5adf:	pxor   xmm0,xmm0
    5ae3:	shr    rax,1
    5ae6:	and    esi,0x1
    5ae9:	or     rax,rsi
    5aec:	cvtsi2sd xmm0,rax
    5af1:	addsd  xmm0,xmm0
    5af5:	jmp    55fb <hvm_pf_xen_summary+0x9eb>
    5afa:	mov    rdi,QWORD PTR [r13+0x18]
    5afe:	mov    edx,0x32
    5b03:	mov    esi,eax
    5b05:	call   4b30 <percentile.part.6>
    5b0a:	mov    rdi,QWORD PTR [r13+0x18]
    5b0e:	mov    esi,r14d
    5b11:	mov    edx,0x5
    5b16:	mov    rbp,rax
    5b19:	call   4b30 <percentile.part.6>
    5b1e:	mov    rdi,QWORD PTR [r13+0x18]
    5b22:	mov    esi,r14d
    5b25:	mov    edx,0x5f
    5b2a:	mov    r15,rax
    5b2d:	call   4b30 <percentile.part.6>
    5b32:	mov    r14,rax
    5b35:	jmp    5592 <hvm_pf_xen_summary+0x982>
    5b3a:	lea    rsi,[rip+0x17513]        # 1d054 <_IO_stdin_used+0x94>
    5b41:	xor    eax,eax
    5b43:	mov    edx,r13d
    5b46:	mov    edi,0x1
    5b4b:	call   44f0 <__printf_chk@plt>
    5b50:	movsxd rcx,DWORD PTR [r12+0x4]
    5b55:	mov    rsi,QWORD PTR [r12+0x10]
    5b5a:	test   ecx,ecx
    5b5c:	jne    5bc8 <hvm_pf_xen_summary+0xfb8>
    5b5e:	xor    ecx,ecx
    5b60:	lea    rax,[rsi+rsi*4]
    5b64:	pxor   xmm1,xmm1
    5b68:	pxor   xmm0,xmm0
    5b6c:	lea    rdx,[rax+rax*4]
    5b70:	shl    rdx,0x2
    5b74:	test   rsi,rsi
    5b77:	cvtsi2sd xmm0,QWORD PTR [rip+0x227650]        # 22d1d0 <P+0x30>
    5b80:	cvtsi2sd xmm1,rdx
    5b85:	divsd  xmm1,xmm0
    5b89:	js     5d5c <hvm_pf_xen_summary+0x114c>
    5b8f:	pxor   xmm0,xmm0
    5b93:	cvtsi2sd xmm0,rsi
    5b98:	pxor   xmm2,xmm2
    5b9c:	mov    edx,DWORD PTR [r12]
    5ba0:	lea    rsi,[rip+0x19c69]        # 1f810 <_IO_stdin_used+0x2850>
    5ba7:	mov    edi,0x1
    5bac:	mov    eax,0x2
    5bb1:	cvtsi2sd xmm2,QWORD PTR [rip+0x2234f6]        # 2290b0 <opt+0x10>
    5bba:	divsd  xmm0,xmm2
    5bbe:	call   44f0 <__printf_chk@plt>
    5bc3:	jmp    511a <hvm_pf_xen_summary+0x50a>
    5bc8:	mov    rax,rsi
    5bcb:	xor    edx,edx
    5bcd:	div    rcx
    5bd0:	mov    rcx,rax
    5bd3:	jmp    5b60 <hvm_pf_xen_summary+0xf50>
    5bd5:	mov    rdi,QWORD PTR [rax+0x11370]
    5bdc:	mov    r12,rax
    5bdf:	mov    esi,ecx
    5be1:	mov    edx,0x32
    5be6:	call   4b30 <percentile.part.6>
    5beb:	mov    rdi,QWORD PTR [r12+0x11370]
    5bf3:	mov    edx,0x5
    5bf8:	mov    esi,r13d
    5bfb:	mov    QWORD PTR [rsp+0x10],r12
    5c00:	mov    r15,rax
    5c03:	call   4b30 <percentile.part.6>
    5c08:	mov    r12,rax
    5c0b:	mov    rax,QWORD PTR [rsp+0x10]
    5c10:	mov    edx,0x5f
    5c15:	mov    esi,r13d
    5c18:	mov    rdi,QWORD PTR [rax+0x11370]
    5c1f:	call   4b30 <percentile.part.6>
    5c24:	mov    r8,rax
    5c27:	jmp    5170 <hvm_pf_xen_summary+0x560>
    5c2c:	mov    rax,rsi
    5c2f:	pxor   xmm0,xmm0
    5c33:	shr    rax,1
    5c36:	and    esi,0x1
    5c39:	or     rax,rsi
    5c3c:	cvtsi2sd xmm0,rax
    5c41:	addsd  xmm0,xmm0
    5c45:	jmp    50dc <hvm_pf_xen_summary+0x4cc>
    5c4a:	mov    rdi,QWORD PTR [r12+0x18]
    5c4f:	mov    esi,ecx
    5c51:	mov    edx,0x32
    5c56:	call   4b30 <percentile.part.6>
    5c5b:	mov    rdi,QWORD PTR [r12+0x18]
    5c60:	mov    esi,r15d
    5c63:	mov    edx,0x5
    5c68:	mov    QWORD PTR [rsp+0x20],rax
    5c6d:	call   4b30 <percentile.part.6>
    5c72:	mov    rdi,QWORD PTR [r12+0x18]
    5c77:	mov    esi,r15d
    5c7a:	mov    edx,0x5f
    5c7f:	mov    QWORD PTR [rsp+0x28],rax
    5c84:	call   4b30 <percentile.part.6>
    5c89:	mov    r15,rax
    5c8c:	jmp    5070 <hvm_pf_xen_summary+0x460>
    5c91:	mov    rsi,QWORD PTR [rax+0x11368]
    5c98:	xor    ecx,ecx
    5c9a:	jmp    51b8 <hvm_pf_xen_summary+0x5a8>
    5c9f:	lea    rsi,[rip+0x173bd]        # 1d063 <_IO_stdin_used+0xa3>
    5ca6:	xor    eax,eax
    5ca8:	mov    edi,0x1
    5cad:	call   44f0 <__printf_chk@plt>
    5cb2:	mov    rax,QWORD PTR [rsp+0x10]
    5cb7:	movsxd rcx,DWORD PTR [rax+0x1135c]
    5cbe:	test   ecx,ecx
    5cc0:	jne    5d7a <hvm_pf_xen_summary+0x116a>
    5cc6:	mov    rsi,QWORD PTR [rax+0x11368]
    5ccd:	xor    ecx,ecx
    5ccf:	lea    rax,[rsi+rsi*4]
    5cd3:	pxor   xmm1,xmm1
    5cd7:	pxor   xmm0,xmm0
    5cdb:	lea    rdx,[rax+rax*4]
    5cdf:	shl    rdx,0x2
    5ce3:	test   rsi,rsi
    5ce6:	cvtsi2sd xmm0,QWORD PTR [rip+0x2274e1]        # 22d1d0 <P+0x30>
    5cef:	cvtsi2sd xmm1,rdx
    5cf4:	divsd  xmm1,xmm0
    5cf8:	js     5d96 <hvm_pf_xen_summary+0x1186>
    5cfe:	pxor   xmm0,xmm0
    5d02:	cvtsi2sd xmm0,rsi
    5d07:	pxor   xmm2,xmm2
    5d0b:	mov    rax,QWORD PTR [rsp+0x10]
    5d10:	lea    rsi,[rip+0x19af9]        # 1f810 <_IO_stdin_used+0x2850>
    5d17:	mov    edi,0x1
    5d1c:	cvtsi2sd xmm2,QWORD PTR [rip+0x22338b]        # 2290b0 <opt+0x10>
    5d25:	divsd  xmm0,xmm2
    5d29:	mov    edx,DWORD PTR [rax+0x11358]
    5d2f:	mov    eax,0x2
    5d34:	call   44f0 <__printf_chk@plt>
    5d39:	jmp    4f54 <hvm_pf_xen_summary+0x344>
    5d3e:	mov    rdx,rsi
    5d41:	pxor   xmm0,xmm0
    5d45:	shr    rdx,1
    5d48:	and    esi,0x1
    5d4b:	or     rdx,rsi
    5d4e:	cvtsi2sd xmm0,rdx
    5d53:	addsd  xmm0,xmm0
    5d57:	jmp    51f0 <hvm_pf_xen_summary+0x5e0>
    5d5c:	mov    rdx,rsi
    5d5f:	pxor   xmm0,xmm0
    5d63:	shr    rdx,1
    5d66:	and    esi,0x1
    5d69:	or     rdx,rsi
    5d6c:	cvtsi2sd xmm0,rdx
    5d71:	addsd  xmm0,xmm0
    5d75:	jmp    5b98 <hvm_pf_xen_summary+0xf88>
    5d7a:	mov    rax,QWORD PTR [rsp+0x10]
    5d7f:	xor    edx,edx
    5d81:	mov    rsi,QWORD PTR [rax+0x11368]
    5d88:	mov    rax,rsi
    5d8b:	div    rcx
    5d8e:	mov    rcx,rax
    5d91:	jmp    5ccf <hvm_pf_xen_summary+0x10bf>
    5d96:	mov    rdx,rsi
    5d99:	pxor   xmm0,xmm0
    5d9d:	shr    rdx,1
    5da0:	and    esi,0x1
    5da3:	or     rdx,rsi
    5da6:	cvtsi2sd xmm0,rdx
    5dab:	addsd  xmm0,xmm0
    5daf:	jmp    5d07 <hvm_pf_xen_summary+0x10f7>
    5db4:	xchg   ax,ax
    5db6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005dc0 <hvm_mmio_summary>:
    5dc0:	lea    rax,[rsi*8+0x0]
    5dc8:	push   r15
    5dca:	push   r14
    5dcc:	push   r13
    5dce:	push   r12
    5dd0:	sub    rax,rsi
    5dd3:	push   rbp
    5dd4:	push   rbx
    5dd5:	lea    rbx,[rdi+rax*8]
    5dd9:	sub    rsp,0x8
    5ddd:	mov    r8d,DWORD PTR [rbx+0x12a50]
    5de4:	test   r8d,r8d
    5de7:	je     5efc <hvm_mmio_summary+0x13c>
    5ded:	mov    ecx,DWORD PTR [rip+0x2232e5]        # 2290d8 <opt+0x38>
    5df3:	mov    rbp,rsi
    5df6:	mov    r12,rdi
    5df9:	test   ecx,ecx
    5dfb:	je     5f10 <hvm_mmio_summary+0x150>
    5e01:	mov    esi,DWORD PTR [rbx+0x12a54]
    5e07:	cmp    DWORD PTR [rbx+0x12a58],esi
    5e0d:	cmovle esi,DWORD PTR [rbx+0x12a58]
    5e14:	test   esi,esi
    5e16:	mov    r15d,esi
    5e19:	jne    6000 <hvm_mmio_summary+0x240>
    5e1f:	xor    ebx,ebx
    5e21:	xor    r13d,r13d
    5e24:	xor    r14d,r14d
    5e27:	lea    rsi,[rip+0x17245]        # 1d073 <_IO_stdin_used+0xb3>
    5e2e:	xor    eax,eax
    5e30:	mov    edi,0x1
    5e35:	call   44f0 <__printf_chk@plt>
    5e3a:	lea    rax,[rbp*8+0x0]
    5e42:	xor    ecx,ecx
    5e44:	sub    rax,rbp
    5e47:	lea    rdx,[r12+rax*8]
    5e4b:	mov    eax,DWORD PTR [rdx+0x12a54]
    5e51:	mov    r10,QWORD PTR [rdx+0x12a60]
    5e58:	test   eax,eax
    5e5a:	je     5e6a <hvm_mmio_summary+0xaa>
    5e5c:	movsxd rcx,eax
    5e5f:	xor    edx,edx
    5e61:	mov    rax,r10
    5e64:	div    rcx
    5e67:	mov    rcx,rax
    5e6a:	lea    rax,[rbp*8+0x0]
    5e72:	pxor   xmm1,xmm1
    5e76:	pxor   xmm0,xmm0
    5e7a:	sub    rax,rbp
    5e7d:	mov    rax,QWORD PTR [r12+rax*8+0x12a60]
    5e85:	cvtsi2sd xmm0,QWORD PTR [rip+0x227342]        # 22d1d0 <P+0x30>
    5e8e:	lea    rax,[rax+rax*4]
    5e92:	lea    rdx,[rax+rax*4]
    5e96:	shl    rdx,0x2
    5e9a:	test   r10,r10
    5e9d:	cvtsi2sd xmm1,rdx
    5ea2:	divsd  xmm1,xmm0
    5ea6:	js     5fe0 <hvm_mmio_summary+0x220>
    5eac:	pxor   xmm0,xmm0
    5eb0:	cvtsi2sd xmm0,r10
    5eb5:	pxor   xmm2,xmm2
    5eb9:	lea    rdx,[rbp*8+0x0]
    5ec1:	sub    rsp,0x8
    5ec5:	push   rbx
    5ec6:	lea    rsi,[rip+0x1990b]        # 1f7d8 <_IO_stdin_used+0x2818>
    5ecd:	mov    r9,r14
    5ed0:	sub    rdx,rbp
    5ed3:	mov    r8,r13
    5ed6:	mov    edi,0x1
    5edb:	cvtsi2sd xmm2,QWORD PTR [rip+0x2231cc]        # 2290b0 <opt+0x10>
    5ee4:	divsd  xmm0,xmm2
    5ee8:	mov    edx,DWORD PTR [r12+rdx*8+0x12a50]
    5ef0:	mov    eax,0x2
    5ef5:	call   44f0 <__printf_chk@plt>
    5efa:	pop    rax
    5efb:	pop    rdx
    5efc:	add    rsp,0x8
    5f00:	pop    rbx
    5f01:	pop    rbp
    5f02:	pop    r12
    5f04:	pop    r13
    5f06:	pop    r14
    5f08:	pop    r15
    5f0a:	ret    
    5f0b:	nop    DWORD PTR [rax+rax*1+0x0]
    5f10:	lea    rsi,[rip+0x1715c]        # 1d073 <_IO_stdin_used+0xb3>
    5f17:	xor    eax,eax
    5f19:	mov    edi,0x1
    5f1e:	call   44f0 <__printf_chk@plt>
    5f23:	mov    eax,DWORD PTR [rbx+0x12a54]
    5f29:	xor    ecx,ecx
    5f2b:	mov    rsi,QWORD PTR [rbx+0x12a60]
    5f32:	test   eax,eax
    5f34:	je     5f44 <hvm_mmio_summary+0x184>
    5f36:	movsxd rcx,eax
    5f39:	xor    edx,edx
    5f3b:	mov    rax,rsi
    5f3e:	div    rcx
    5f41:	mov    rcx,rax
    5f44:	lea    rdx,[rbp*8+0x0]
    5f4c:	pxor   xmm1,xmm1
    5f50:	pxor   xmm0,xmm0
    5f54:	sub    rdx,rbp
    5f57:	mov    rdx,QWORD PTR [r12+rdx*8+0x12a60]
    5f5f:	cvtsi2sd xmm0,QWORD PTR [rip+0x227268]        # 22d1d0 <P+0x30>
    5f68:	lea    rdx,[rdx+rdx*4]
    5f6c:	lea    rdx,[rdx+rdx*4]
    5f70:	shl    rdx,0x2
    5f74:	test   rsi,rsi
    5f77:	cvtsi2sd xmm1,rdx
    5f7c:	divsd  xmm1,xmm0
    5f80:	js     6050 <hvm_mmio_summary+0x290>
    5f86:	pxor   xmm0,xmm0
    5f8a:	cvtsi2sd xmm0,rsi
    5f8f:	pxor   xmm2,xmm2
    5f93:	lea    rdx,[rbp*8+0x0]
    5f9b:	lea    rsi,[rip+0x1986e]        # 1f810 <_IO_stdin_used+0x2850>
    5fa2:	mov    edi,0x1
    5fa7:	mov    eax,0x2
    5fac:	sub    rdx,rbp
    5faf:	cvtsi2sd xmm2,QWORD PTR [rip+0x2230f8]        # 2290b0 <opt+0x10>
    5fb8:	divsd  xmm0,xmm2
    5fbc:	mov    edx,DWORD PTR [r12+rdx*8+0x12a50]
    5fc4:	add    rsp,0x8
    5fc8:	pop    rbx
    5fc9:	pop    rbp
    5fca:	pop    r12
    5fcc:	pop    r13
    5fce:	pop    r14
    5fd0:	pop    r15
    5fd2:	jmp    44f0 <__printf_chk@plt>
    5fd7:	nop    WORD PTR [rax+rax*1+0x0]
    5fe0:	mov    rax,r10
    5fe3:	pxor   xmm0,xmm0
    5fe7:	shr    rax,1
    5fea:	and    r10d,0x1
    5fee:	or     rax,r10
    5ff1:	cvtsi2sd xmm0,rax
    5ff6:	addsd  xmm0,xmm0
    5ffa:	jmp    5eb5 <hvm_mmio_summary+0xf5>
    5fff:	nop
    6000:	mov    rdi,QWORD PTR [rbx+0x12a68]
    6007:	mov    edx,0x32
    600c:	call   4b30 <percentile.part.6>
    6011:	mov    rdi,QWORD PTR [rbx+0x12a68]
    6018:	mov    edx,0x5
    601d:	mov    esi,r15d
    6020:	mov    r14,rax
    6023:	call   4b30 <percentile.part.6>
    6028:	mov    rdi,QWORD PTR [rbx+0x12a68]
    602f:	mov    edx,0x5f
    6034:	mov    esi,r15d
    6037:	mov    r13,rax
    603a:	call   4b30 <percentile.part.6>
    603f:	mov    rbx,rax
    6042:	jmp    5e27 <hvm_mmio_summary+0x67>
    6047:	nop    WORD PTR [rax+rax*1+0x0]
    6050:	mov    rax,rsi
    6053:	pxor   xmm0,xmm0
    6057:	shr    rax,1
    605a:	and    esi,0x1
    605d:	or     rax,rsi
    6060:	cvtsi2sd xmm0,rax
    6065:	addsd  xmm0,xmm0
    6069:	jmp    5f8f <hvm_mmio_summary+0x1cf>
    606e:	xchg   ax,ax

0000000000006070 <hvm_vmcall_summary>:
    6070:	push   r15
    6072:	push   r14
    6074:	lea    r14,[rip+0x223665]        # 2296e0 <hypercall_name>
    607b:	push   r13
    607d:	push   r12
    607f:	push   rbp
    6080:	push   rbx
    6081:	lea    rbp,[r14+0x130]
    6088:	lea    rbx,[rdi+0x11978]
    608f:	sub    rsp,0x18
    6093:	mov    QWORD PTR [rsp+0x8],rdi
    6098:	jmp    6170 <hvm_vmcall_summary+0x100>
    609d:	nop    DWORD PTR [rax]
    60a0:	mov    esi,DWORD PTR [rbx+0x4]
    60a3:	cmp    DWORD PTR [rbx+0x8],esi
    60a6:	cmovle esi,DWORD PTR [rbx+0x8]
    60aa:	test   esi,esi
    60ac:	mov    r13d,esi
    60af:	jne    6370 <hvm_vmcall_summary+0x300>
    60b5:	xor    r13d,r13d
    60b8:	xor    r12d,r12d
    60bb:	xor    r15d,r15d
    60be:	mov    rdx,QWORD PTR [r14]
    60c1:	lea    rsi,[rip+0x16fb4]        # 1d07c <_IO_stdin_used+0xbc>
    60c8:	xor    eax,eax
    60ca:	mov    edi,0x1
    60cf:	call   44f0 <__printf_chk@plt>
    60d4:	mov    eax,DWORD PTR [rbx+0x4]
    60d7:	xor    ecx,ecx
    60d9:	mov    rsi,QWORD PTR [rbx+0x10]
    60dd:	test   eax,eax
    60df:	je     60ef <hvm_vmcall_summary+0x7f>
    60e1:	movsxd rcx,eax
    60e4:	xor    edx,edx
    60e6:	mov    rax,rsi
    60e9:	div    rcx
    60ec:	mov    rcx,rax
    60ef:	lea    rax,[rsi+rsi*4]
    60f3:	pxor   xmm1,xmm1
    60f7:	pxor   xmm0,xmm0
    60fb:	lea    rdx,[rax+rax*4]
    60ff:	shl    rdx,0x2
    6103:	test   rsi,rsi
    6106:	cvtsi2sd xmm0,QWORD PTR [rip+0x2270c1]        # 22d1d0 <P+0x30>
    610f:	cvtsi2sd xmm1,rdx
    6114:	divsd  xmm1,xmm0
    6118:	js     6348 <hvm_vmcall_summary+0x2d8>
    611e:	pxor   xmm0,xmm0
    6122:	cvtsi2sd xmm0,rsi
    6127:	pxor   xmm2,xmm2
    612b:	sub    rsp,0x8
    612f:	lea    rsi,[rip+0x196a2]        # 1f7d8 <_IO_stdin_used+0x2818>
    6136:	push   r13
    6138:	mov    edx,DWORD PTR [rbx]
    613a:	mov    r8,r12
    613d:	mov    edi,0x1
    6142:	mov    r9,r15
    6145:	mov    eax,0x2
    614a:	cvtsi2sd xmm2,QWORD PTR [rip+0x222f5d]        # 2290b0 <opt+0x10>
    6153:	divsd  xmm0,xmm2
    6157:	call   44f0 <__printf_chk@plt>
    615c:	pop    rdi
    615d:	pop    r8
    615f:	add    r14,0x8
    6163:	add    rbx,0x38
    6167:	cmp    r14,rbp
    616a:	je     6230 <hvm_vmcall_summary+0x1c0>
    6170:	mov    r10d,DWORD PTR [rbx]
    6173:	test   r10d,r10d
    6176:	je     615f <hvm_vmcall_summary+0xef>
    6178:	mov    r9d,DWORD PTR [rip+0x222f59]        # 2290d8 <opt+0x38>
    617f:	test   r9d,r9d
    6182:	jne    60a0 <hvm_vmcall_summary+0x30>
    6188:	mov    rdx,QWORD PTR [r14]
    618b:	lea    rsi,[rip+0x16eea]        # 1d07c <_IO_stdin_used+0xbc>
    6192:	xor    eax,eax
    6194:	mov    edi,0x1
    6199:	call   44f0 <__printf_chk@plt>
    619e:	mov    eax,DWORD PTR [rbx+0x4]
    61a1:	xor    ecx,ecx
    61a3:	mov    rsi,QWORD PTR [rbx+0x10]
    61a7:	test   eax,eax
    61a9:	je     61b9 <hvm_vmcall_summary+0x149>
    61ab:	movsxd rcx,eax
    61ae:	xor    edx,edx
    61b0:	mov    rax,rsi
    61b3:	div    rcx
    61b6:	mov    rcx,rax
    61b9:	lea    rdx,[rsi+rsi*4]
    61bd:	pxor   xmm1,xmm1
    61c1:	pxor   xmm0,xmm0
    61c5:	lea    rdx,[rdx+rdx*4]
    61c9:	shl    rdx,0x2
    61cd:	test   rsi,rsi
    61d0:	cvtsi2sd xmm0,QWORD PTR [rip+0x226ff7]        # 22d1d0 <P+0x30>
    61d9:	cvtsi2sd xmm1,rdx
    61de:	divsd  xmm1,xmm0
    61e2:	js     63b0 <hvm_vmcall_summary+0x340>
    61e8:	pxor   xmm0,xmm0
    61ec:	cvtsi2sd xmm0,rsi
    61f1:	pxor   xmm2,xmm2
    61f5:	mov    edx,DWORD PTR [rbx]
    61f7:	lea    rsi,[rip+0x19612]        # 1f810 <_IO_stdin_used+0x2850>
    61fe:	mov    edi,0x1
    6203:	mov    eax,0x2
    6208:	add    r14,0x8
    620c:	add    rbx,0x38
    6210:	cvtsi2sd xmm2,QWORD PTR [rip+0x222e97]        # 2290b0 <opt+0x10>
    6219:	divsd  xmm0,xmm2
    621d:	call   44f0 <__printf_chk@plt>
    6222:	cmp    r14,rbp
    6225:	jne    6170 <hvm_vmcall_summary+0x100>
    622b:	nop    DWORD PTR [rax+rax*1+0x0]
    6230:	mov    rax,QWORD PTR [rsp+0x8]
    6235:	mov    esi,DWORD PTR [rax+0x121c8]
    623b:	test   esi,esi
    623d:	je     6336 <hvm_vmcall_summary+0x2c6>
    6243:	mov    ecx,DWORD PTR [rip+0x222e8f]        # 2290d8 <opt+0x38>
    6249:	test   ecx,ecx
    624b:	je     63ce <hvm_vmcall_summary+0x35e>
    6251:	mov    r12d,DWORD PTR [rax+0x121cc]
    6258:	cmp    DWORD PTR [rax+0x121d0],r12d
    625f:	cmovle r12d,DWORD PTR [rax+0x121d0]
    6267:	test   r12d,r12d
    626a:	jne    64a8 <hvm_vmcall_summary+0x438>
    6270:	xor    r12d,r12d
    6273:	xor    ebx,ebx
    6275:	xor    ebp,ebp
    6277:	lea    rdx,[rip+0x1811e]        # 1e39c <_IO_stdin_used+0x13dc>
    627e:	lea    rsi,[rip+0x16df7]        # 1d07c <_IO_stdin_used+0xbc>
    6285:	xor    eax,eax
    6287:	mov    edi,0x1
    628c:	call   44f0 <__printf_chk@plt>
    6291:	mov    rcx,QWORD PTR [rsp+0x8]
    6296:	mov    eax,DWORD PTR [rcx+0x121cc]
    629c:	test   eax,eax
    629e:	je     647c <hvm_vmcall_summary+0x40c>
    62a4:	mov    rdi,QWORD PTR [rsp+0x8]
    62a9:	movsxd rcx,eax
    62ac:	xor    edx,edx
    62ae:	mov    rsi,QWORD PTR [rdi+0x121d8]
    62b5:	mov    rax,rsi
    62b8:	div    rcx
    62bb:	mov    rcx,rax
    62be:	lea    rdx,[rsi+rsi*4]
    62c2:	pxor   xmm1,xmm1
    62c6:	pxor   xmm0,xmm0
    62ca:	lea    rdx,[rdx+rdx*4]
    62ce:	shl    rdx,0x2
    62d2:	test   rsi,rsi
    62d5:	cvtsi2sd xmm0,QWORD PTR [rip+0x226ef2]        # 22d1d0 <P+0x30>
    62de:	cvtsi2sd xmm1,rdx
    62e3:	divsd  xmm1,xmm0
    62e7:	js     648a <hvm_vmcall_summary+0x41a>
    62ed:	pxor   xmm0,xmm0
    62f1:	cvtsi2sd xmm0,rsi
    62f6:	pxor   xmm2,xmm2
    62fa:	mov    rax,QWORD PTR [rsp+0x8]
    62ff:	sub    rsp,0x8
    6303:	lea    rsi,[rip+0x194ce]        # 1f7d8 <_IO_stdin_used+0x2818>
    630a:	mov    r9,rbp
    630d:	mov    r8,rbx
    6310:	mov    edi,0x1
    6315:	cvtsi2sd xmm2,QWORD PTR [rip+0x222d92]        # 2290b0 <opt+0x10>
    631e:	divsd  xmm0,xmm2
    6322:	mov    edx,DWORD PTR [rax+0x121c8]
    6328:	push   r12
    632a:	mov    eax,0x2
    632f:	call   44f0 <__printf_chk@plt>
    6334:	pop    rax
    6335:	pop    rdx
    6336:	add    rsp,0x18
    633a:	pop    rbx
    633b:	pop    rbp
    633c:	pop    r12
    633e:	pop    r13
    6340:	pop    r14
    6342:	pop    r15
    6344:	ret    
    6345:	nop    DWORD PTR [rax]
    6348:	mov    rdx,rsi
    634b:	pxor   xmm0,xmm0
    634f:	shr    rdx,1
    6352:	and    esi,0x1
    6355:	or     rdx,rsi
    6358:	cvtsi2sd xmm0,rdx
    635d:	addsd  xmm0,xmm0
    6361:	jmp    6127 <hvm_vmcall_summary+0xb7>
    6366:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6370:	mov    rdi,QWORD PTR [rbx+0x18]
    6374:	mov    edx,0x32
    6379:	call   4b30 <percentile.part.6>
    637e:	mov    rdi,QWORD PTR [rbx+0x18]
    6382:	mov    esi,r13d
    6385:	mov    edx,0x5
    638a:	mov    r15,rax
    638d:	call   4b30 <percentile.part.6>
    6392:	mov    rdi,QWORD PTR [rbx+0x18]
    6396:	mov    esi,r13d
    6399:	mov    edx,0x5f
    639e:	mov    r12,rax
    63a1:	call   4b30 <percentile.part.6>
    63a6:	mov    r13,rax
    63a9:	jmp    60be <hvm_vmcall_summary+0x4e>
    63ae:	xchg   ax,ax
    63b0:	mov    rax,rsi
    63b3:	pxor   xmm0,xmm0
    63b7:	shr    rax,1
    63ba:	and    esi,0x1
    63bd:	or     rax,rsi
    63c0:	cvtsi2sd xmm0,rax
    63c5:	addsd  xmm0,xmm0
    63c9:	jmp    61f1 <hvm_vmcall_summary+0x181>
    63ce:	lea    rdx,[rip+0x17fc7]        # 1e39c <_IO_stdin_used+0x13dc>
    63d5:	lea    rsi,[rip+0x16ca0]        # 1d07c <_IO_stdin_used+0xbc>
    63dc:	mov    edi,0x1
    63e1:	xor    eax,eax
    63e3:	call   44f0 <__printf_chk@plt>
    63e8:	mov    rdi,QWORD PTR [rsp+0x8]
    63ed:	mov    eax,DWORD PTR [rdi+0x121cc]
    63f3:	test   eax,eax
    63f5:	jne    64f5 <hvm_vmcall_summary+0x485>
    63fb:	mov    rsi,QWORD PTR [rdi+0x121d8]
    6402:	xor    ecx,ecx
    6404:	lea    rdx,[rsi+rsi*4]
    6408:	pxor   xmm1,xmm1
    640c:	pxor   xmm0,xmm0
    6410:	lea    rdx,[rdx+rdx*4]
    6414:	shl    rdx,0x2
    6418:	test   rsi,rsi
    641b:	cvtsi2sd xmm0,QWORD PTR [rip+0x226dac]        # 22d1d0 <P+0x30>
    6424:	cvtsi2sd xmm1,rdx
    6429:	divsd  xmm1,xmm0
    642d:	js     6514 <hvm_vmcall_summary+0x4a4>
    6433:	pxor   xmm0,xmm0
    6437:	cvtsi2sd xmm0,rsi
    643c:	pxor   xmm2,xmm2
    6440:	mov    rax,QWORD PTR [rsp+0x8]
    6445:	lea    rsi,[rip+0x193c4]        # 1f810 <_IO_stdin_used+0x2850>
    644c:	mov    edi,0x1
    6451:	cvtsi2sd xmm2,QWORD PTR [rip+0x222c56]        # 2290b0 <opt+0x10>
    645a:	divsd  xmm0,xmm2
    645e:	mov    edx,DWORD PTR [rax+0x121c8]
    6464:	add    rsp,0x18
    6468:	mov    eax,0x2
    646d:	pop    rbx
    646e:	pop    rbp
    646f:	pop    r12
    6471:	pop    r13
    6473:	pop    r14
    6475:	pop    r15
    6477:	jmp    44f0 <__printf_chk@plt>
    647c:	mov    rsi,QWORD PTR [rcx+0x121d8]
    6483:	xor    ecx,ecx
    6485:	jmp    62be <hvm_vmcall_summary+0x24e>
    648a:	mov    rdx,rsi
    648d:	pxor   xmm0,xmm0
    6491:	shr    rdx,1
    6494:	and    esi,0x1
    6497:	or     rdx,rsi
    649a:	cvtsi2sd xmm0,rdx
    649f:	addsd  xmm0,xmm0
    64a3:	jmp    62f6 <hvm_vmcall_summary+0x286>
    64a8:	mov    rdi,QWORD PTR [rax+0x121e0]
    64af:	mov    r15,rax
    64b2:	mov    esi,r12d
    64b5:	mov    edx,0x32
    64ba:	call   4b30 <percentile.part.6>
    64bf:	mov    rdi,QWORD PTR [r15+0x121e0]
    64c6:	mov    esi,r12d
    64c9:	mov    edx,0x5
    64ce:	mov    rbp,rax
    64d1:	call   4b30 <percentile.part.6>
    64d6:	mov    rdi,QWORD PTR [r15+0x121e0]
    64dd:	mov    esi,r12d
    64e0:	mov    edx,0x5f
    64e5:	mov    rbx,rax
    64e8:	call   4b30 <percentile.part.6>
    64ed:	mov    r12,rax
    64f0:	jmp    6277 <hvm_vmcall_summary+0x207>
    64f5:	mov    rcx,QWORD PTR [rsp+0x8]
    64fa:	xor    edx,edx
    64fc:	mov    rsi,QWORD PTR [rcx+0x121d8]
    6503:	movsxd rcx,eax
    6506:	mov    rax,rsi
    6509:	div    rcx
    650c:	mov    rcx,rax
    650f:	jmp    6404 <hvm_vmcall_summary+0x394>
    6514:	mov    rdx,rsi
    6517:	pxor   xmm0,xmm0
    651b:	shr    rdx,1
    651e:	and    esi,0x1
    6521:	or     rdx,rsi
    6524:	cvtsi2sd xmm0,rdx
    6529:	addsd  xmm0,xmm0
    652d:	jmp    643c <hvm_vmcall_summary+0x3cc>
    6532:	nop    DWORD PTR [rax+0x0]
    6536:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006540 <hvm_generic_summary>:
    6540:	push   r15
    6542:	push   r14
    6544:	push   r13
    6546:	push   r12
    6548:	push   rbp
    6549:	push   rbx
    654a:	sub    rsp,0x8
    654e:	cmp    rsi,0x25
    6552:	jg     680e <hvm_generic_summary+0x2ce>
    6558:	lea    rax,[rsi*8+0x0]
    6560:	mov    rbx,rsi
    6563:	mov    r12,rdi
    6566:	sub    rax,rsi
    6569:	lea    rbp,[rdi+rax*8]
    656d:	mov    esi,DWORD PTR [rbp+0x12200]
    6573:	test   esi,esi
    6575:	je     668f <hvm_generic_summary+0x14f>
    657b:	mov    ecx,DWORD PTR [rip+0x222b57]        # 2290d8 <opt+0x38>
    6581:	test   ecx,ecx
    6583:	je     66a0 <hvm_generic_summary+0x160>
    6589:	mov    esi,DWORD PTR [rbp+0x12204]
    658f:	cmp    DWORD PTR [rbp+0x12208],esi
    6595:	cmovle esi,DWORD PTR [rbp+0x12208]
    659c:	test   esi,esi
    659e:	mov    r15d,esi
    65a1:	jne    67a0 <hvm_generic_summary+0x260>
    65a7:	xor    ebp,ebp
    65a9:	xor    r13d,r13d
    65ac:	xor    r14d,r14d
    65af:	lea    rax,[rip+0x2232aa]        # 229860 <hvm_event_handler_name>
    65b6:	lea    rsi,[rip+0x16af2]        # 1d0af <_IO_stdin_used+0xef>
    65bd:	mov    edi,0x1
    65c2:	mov    rdx,QWORD PTR [rax+rbx*8]
    65c6:	xor    eax,eax
    65c8:	call   44f0 <__printf_chk@plt>
    65cd:	lea    rax,[rbx*8+0x0]
    65d5:	xor    ecx,ecx
    65d7:	sub    rax,rbx
    65da:	lea    rdx,[r12+rax*8]
    65de:	mov    eax,DWORD PTR [rdx+0x12204]
    65e4:	mov    rsi,QWORD PTR [rdx+0x12210]
    65eb:	test   eax,eax
    65ed:	je     65fd <hvm_generic_summary+0xbd>
    65ef:	movsxd rcx,eax
    65f2:	xor    edx,edx
    65f4:	mov    rax,rsi
    65f7:	div    rcx
    65fa:	mov    rcx,rax
    65fd:	lea    rax,[rbx*8+0x0]
    6605:	pxor   xmm1,xmm1
    6609:	pxor   xmm0,xmm0
    660d:	sub    rax,rbx
    6610:	mov    rax,QWORD PTR [r12+rax*8+0x12210]
    6618:	cvtsi2sd xmm0,QWORD PTR [rip+0x226baf]        # 22d1d0 <P+0x30>
    6621:	lea    rax,[rax+rax*4]
    6625:	lea    rdx,[rax+rax*4]
    6629:	shl    rdx,0x2
    662d:	test   rsi,rsi
    6630:	cvtsi2sd xmm1,rdx
    6635:	divsd  xmm1,xmm0
    6639:	js     6778 <hvm_generic_summary+0x238>
    663f:	pxor   xmm0,xmm0
    6643:	cvtsi2sd xmm0,rsi
    6648:	pxor   xmm2,xmm2
    664c:	lea    rdx,[rbx*8+0x0]
    6654:	sub    rsp,0x8
    6658:	push   rbp
    6659:	lea    rsi,[rip+0x19178]        # 1f7d8 <_IO_stdin_used+0x2818>
    6660:	mov    r9,r14
    6663:	sub    rdx,rbx
    6666:	mov    r8,r13
    6669:	mov    edi,0x1
    666e:	cvtsi2sd xmm2,QWORD PTR [rip+0x222a39]        # 2290b0 <opt+0x10>
    6677:	divsd  xmm0,xmm2
    667b:	mov    edx,DWORD PTR [r12+rdx*8+0x12200]
    6683:	mov    eax,0x2
    6688:	call   44f0 <__printf_chk@plt>
    668d:	pop    rax
    668e:	pop    rdx
    668f:	add    rsp,0x8
    6693:	pop    rbx
    6694:	pop    rbp
    6695:	pop    r12
    6697:	pop    r13
    6699:	pop    r14
    669b:	pop    r15
    669d:	ret    
    669e:	xchg   ax,ax
    66a0:	lea    rax,[rip+0x2231b9]        # 229860 <hvm_event_handler_name>
    66a7:	lea    rsi,[rip+0x16a01]        # 1d0af <_IO_stdin_used+0xef>
    66ae:	mov    edi,0x1
    66b3:	mov    rdx,QWORD PTR [rax+rbx*8]
    66b7:	xor    eax,eax
    66b9:	call   44f0 <__printf_chk@plt>
    66be:	mov    eax,DWORD PTR [rbp+0x12204]
    66c4:	xor    ecx,ecx
    66c6:	mov    rsi,QWORD PTR [rbp+0x12210]
    66cd:	test   eax,eax
    66cf:	je     66df <hvm_generic_summary+0x19f>
    66d1:	movsxd rcx,eax
    66d4:	xor    edx,edx
    66d6:	mov    rax,rsi
    66d9:	div    rcx
    66dc:	mov    rcx,rax
    66df:	lea    rdx,[rbx*8+0x0]
    66e7:	pxor   xmm1,xmm1
    66eb:	pxor   xmm0,xmm0
    66ef:	sub    rdx,rbx
    66f2:	mov    rdx,QWORD PTR [r12+rdx*8+0x12210]
    66fa:	cvtsi2sd xmm0,QWORD PTR [rip+0x226acd]        # 22d1d0 <P+0x30>
    6703:	lea    rdx,[rdx+rdx*4]
    6707:	lea    rdx,[rdx+rdx*4]
    670b:	shl    rdx,0x2
    670f:	test   rsi,rsi
    6712:	cvtsi2sd xmm1,rdx
    6717:	divsd  xmm1,xmm0
    671b:	js     67f0 <hvm_generic_summary+0x2b0>
    6721:	pxor   xmm0,xmm0
    6725:	cvtsi2sd xmm0,rsi
    672a:	pxor   xmm2,xmm2
    672e:	lea    rdx,[rbx*8+0x0]
    6736:	lea    rsi,[rip+0x190d3]        # 1f810 <_IO_stdin_used+0x2850>
    673d:	mov    edi,0x1
    6742:	mov    eax,0x2
    6747:	sub    rdx,rbx
    674a:	cvtsi2sd xmm2,QWORD PTR [rip+0x22295d]        # 2290b0 <opt+0x10>
    6753:	divsd  xmm0,xmm2
    6757:	mov    edx,DWORD PTR [r12+rdx*8+0x12200]
    675f:	add    rsp,0x8
    6763:	pop    rbx
    6764:	pop    rbp
    6765:	pop    r12
    6767:	pop    r13
    6769:	pop    r14
    676b:	pop    r15
    676d:	jmp    44f0 <__printf_chk@plt>
    6772:	nop    WORD PTR [rax+rax*1+0x0]
    6778:	mov    rax,rsi
    677b:	pxor   xmm0,xmm0
    677f:	shr    rax,1
    6782:	and    esi,0x1
    6785:	or     rax,rsi
    6788:	cvtsi2sd xmm0,rax
    678d:	addsd  xmm0,xmm0
    6791:	jmp    6648 <hvm_generic_summary+0x108>
    6796:	nop    WORD PTR cs:[rax+rax*1+0x0]
    67a0:	mov    rdi,QWORD PTR [rbp+0x12218]
    67a7:	mov    edx,0x32
    67ac:	call   4b30 <percentile.part.6>
    67b1:	mov    rdi,QWORD PTR [rbp+0x12218]
    67b8:	mov    edx,0x5
    67bd:	mov    esi,r15d
    67c0:	mov    r14,rax
    67c3:	call   4b30 <percentile.part.6>
    67c8:	mov    rdi,QWORD PTR [rbp+0x12218]
    67cf:	mov    edx,0x5f
    67d4:	mov    esi,r15d
    67d7:	mov    r13,rax
    67da:	call   4b30 <percentile.part.6>
    67df:	mov    rbp,rax
    67e2:	jmp    65af <hvm_generic_summary+0x6f>
    67e7:	nop    WORD PTR [rax+rax*1+0x0]
    67f0:	mov    rax,rsi
    67f3:	pxor   xmm0,xmm0
    67f7:	shr    rax,1
    67fa:	and    esi,0x1
    67fd:	or     rax,rsi
    6800:	cvtsi2sd xmm0,rax
    6805:	addsd  xmm0,xmm0
    6809:	jmp    672a <hvm_generic_summary+0x1ea>
    680e:	lea    rcx,[rip+0x1cdcb]        # 235e0 <__PRETTY_FUNCTION__.6692>
    6815:	lea    rsi,[rip+0x1686c]        # 1d088 <_IO_stdin_used+0xc8>
    681c:	lea    rdi,[rip+0x16870]        # 1d093 <_IO_stdin_used+0xd3>
    6823:	mov    edx,0x11f7
    6828:	call   4400 <__assert_fail@plt>
    682d:	nop    DWORD PTR [rax]

0000000000006830 <hvm_vlapic_eoi_handler.part.12>:
    6830:	mov    rax,QWORD PTR [rdi+0x10]
    6834:	lea    rsi,[rip+0x18ffd]        # 1f838 <_IO_stdin_used+0x2878>
    683b:	mov    edi,0x1
    6840:	mov    rdx,QWORD PTR [rax+0x8]
    6844:	mov    ecx,DWORD PTR [rax]
    6846:	xor    eax,eax
    6848:	mov    edx,DWORD PTR [rdx+0x8]
    684b:	jmp    44f0 <__printf_chk@plt>

0000000000006850 <hvm_io_address_summary.part.14>:
    6850:	push   r13
    6852:	push   r12
    6854:	push   rbp
    6855:	push   rbx
    6856:	mov    rbx,rdi
    6859:	mov    rdi,rsi
    685c:	sub    rsp,0x8
    6860:	call   4380 <puts@plt>
    6865:	test   rbx,rbx
    6868:	je     6a2b <hvm_io_address_summary.part.14+0x1db>
    686e:	xchg   ax,ax
    6870:	mov    ecx,DWORD PTR [rbx+0xc]
    6873:	mov    eax,DWORD PTR [rbx+0x10]
    6876:	test   ecx,ecx
    6878:	je     6a40 <hvm_io_address_summary.part.14+0x1f0>
    687e:	test   eax,eax
    6880:	je     694b <hvm_io_address_summary.part.14+0xfb>
    6886:	mov    r13d,DWORD PTR [rip+0x22284b]        # 2290d8 <opt+0x38>
    688d:	test   r13d,r13d
    6890:	je     6d30 <hvm_io_address_summary.part.14+0x4e0>
    6896:	mov    esi,DWORD PTR [rbx+0x14]
    6899:	cmp    DWORD PTR [rbx+0x18],esi
    689c:	cmovle esi,DWORD PTR [rbx+0x18]
    68a0:	test   esi,esi
    68a2:	mov    r13d,esi
    68a5:	jne    6ef0 <hvm_io_address_summary.part.14+0x6a0>
    68ab:	xor    r13d,r13d
    68ae:	xor    ebp,ebp
    68b0:	xor    r12d,r12d
    68b3:	mov    edx,DWORD PTR [rbx+0x8]
    68b6:	lea    rsi,[rip+0x167f9]        # 1d0b6 <_IO_stdin_used+0xf6>
    68bd:	xor    eax,eax
    68bf:	mov    edi,0x1
    68c4:	call   44f0 <__printf_chk@plt>
    68c9:	mov    eax,DWORD PTR [rbx+0x14]
    68cc:	xor    ecx,ecx
    68ce:	mov    rsi,QWORD PTR [rbx+0x20]
    68d2:	test   eax,eax
    68d4:	jne    6bb0 <hvm_io_address_summary.part.14+0x360>
    68da:	lea    rdx,[rsi+rsi*4]
    68de:	pxor   xmm1,xmm1
    68e2:	pxor   xmm0,xmm0
    68e6:	lea    rdx,[rdx+rdx*4]
    68ea:	shl    rdx,0x2
    68ee:	test   rsi,rsi
    68f1:	cvtsi2sd xmm0,QWORD PTR [rip+0x2268d6]        # 22d1d0 <P+0x30>
    68fa:	cvtsi2sd xmm1,rdx
    68ff:	divsd  xmm1,xmm0
    6903:	js     6df0 <hvm_io_address_summary.part.14+0x5a0>
    6909:	pxor   xmm0,xmm0
    690d:	cvtsi2sd xmm0,rsi
    6912:	pxor   xmm2,xmm2
    6916:	sub    rsp,0x8
    691a:	mov    edx,DWORD PTR [rbx+0x10]
    691d:	lea    rsi,[rip+0x18eb4]        # 1f7d8 <_IO_stdin_used+0x2818>
    6924:	push   r13
    6926:	mov    r9,r12
    6929:	mov    r8,rbp
    692c:	mov    edi,0x1
    6931:	mov    eax,0x2
    6936:	cvtsi2sd xmm2,QWORD PTR [rip+0x222771]        # 2290b0 <opt+0x10>
    693f:	divsd  xmm0,xmm2
    6943:	call   44f0 <__printf_chk@plt>
    6948:	pop    rbp
    6949:	pop    r12
    694b:	mov    r11d,DWORD PTR [rbx+0x48]
    694f:	test   r11d,r11d
    6952:	je     6a1f <hvm_io_address_summary.part.14+0x1cf>
    6958:	mov    r10d,DWORD PTR [rip+0x222779]        # 2290d8 <opt+0x38>
    695f:	test   r10d,r10d
    6962:	je     6c60 <hvm_io_address_summary.part.14+0x410>
    6968:	mov    esi,DWORD PTR [rbx+0x4c]
    696b:	cmp    DWORD PTR [rbx+0x50],esi
    696e:	cmovle esi,DWORD PTR [rbx+0x50]
    6972:	test   esi,esi
    6974:	mov    r13d,esi
    6977:	jne    6e30 <hvm_io_address_summary.part.14+0x5e0>
    697d:	xor    r13d,r13d
    6980:	xor    ebp,ebp
    6982:	xor    r12d,r12d
    6985:	mov    ecx,DWORD PTR [rbx+0xc]
    6988:	mov    edx,DWORD PTR [rbx+0x8]
    698b:	lea    rsi,[rip+0x16731]        # 1d0c3 <_IO_stdin_used+0x103>
    6992:	xor    eax,eax
    6994:	mov    edi,0x1
    6999:	call   44f0 <__printf_chk@plt>
    699e:	mov    eax,DWORD PTR [rbx+0x4c]
    69a1:	mov    rsi,QWORD PTR [rbx+0x58]
    69a5:	test   eax,eax
    69a7:	jne    6b72 <hvm_io_address_summary.part.14+0x322>
    69ad:	xor    ecx,ecx
    69af:	lea    rdx,[rsi+rsi*4]
    69b3:	pxor   xmm1,xmm1
    69b7:	pxor   xmm0,xmm0
    69bb:	lea    rdx,[rdx+rdx*4]
    69bf:	shl    rdx,0x2
    69c3:	test   rsi,rsi
    69c6:	cvtsi2sd xmm0,QWORD PTR [rip+0x226801]        # 22d1d0 <P+0x30>
    69cf:	cvtsi2sd xmm1,rdx
    69d4:	divsd  xmm1,xmm0
    69d8:	js     6b88 <hvm_io_address_summary.part.14+0x338>
    69de:	pxor   xmm0,xmm0
    69e2:	cvtsi2sd xmm0,rsi
    69e7:	pxor   xmm2,xmm2
    69eb:	sub    rsp,0x8
    69ef:	mov    edx,DWORD PTR [rbx+0x48]
    69f2:	lea    rsi,[rip+0x18ddf]        # 1f7d8 <_IO_stdin_used+0x2818>
    69f9:	push   r13
    69fb:	mov    r9,r12
    69fe:	mov    r8,rbp
    6a01:	mov    edi,0x1
    6a06:	mov    eax,0x2
    6a0b:	cvtsi2sd xmm2,QWORD PTR [rip+0x22269c]        # 2290b0 <opt+0x10>
    6a14:	divsd  xmm0,xmm2
    6a18:	call   44f0 <__printf_chk@plt>
    6a1d:	pop    rax
    6a1e:	pop    rdx
    6a1f:	mov    rbx,QWORD PTR [rbx]
    6a22:	test   rbx,rbx
    6a25:	jne    6870 <hvm_io_address_summary.part.14+0x20>
    6a2b:	add    rsp,0x8
    6a2f:	pop    rbx
    6a30:	pop    rbp
    6a31:	pop    r12
    6a33:	pop    r13
    6a35:	ret    
    6a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6a40:	test   eax,eax
    6a42:	je     6b17 <hvm_io_address_summary.part.14+0x2c7>
    6a48:	mov    r9d,DWORD PTR [rip+0x222689]        # 2290d8 <opt+0x38>
    6a4f:	test   r9d,r9d
    6a52:	je     6bc8 <hvm_io_address_summary.part.14+0x378>
    6a58:	mov    esi,DWORD PTR [rbx+0x14]
    6a5b:	cmp    DWORD PTR [rbx+0x18],esi
    6a5e:	cmovle esi,DWORD PTR [rbx+0x18]
    6a62:	test   esi,esi
    6a64:	mov    r13d,esi
    6a67:	jne    6eb0 <hvm_io_address_summary.part.14+0x660>
    6a6d:	xor    r13d,r13d
    6a70:	xor    ebp,ebp
    6a72:	xor    r12d,r12d
    6a75:	mov    edx,DWORD PTR [rbx+0x8]
    6a78:	lea    rsi,[rip+0x1663b]        # 1d0ba <_IO_stdin_used+0xfa>
    6a7f:	xor    eax,eax
    6a81:	mov    edi,0x1
    6a86:	call   44f0 <__printf_chk@plt>
    6a8b:	mov    eax,DWORD PTR [rbx+0x14]
    6a8e:	xor    ecx,ecx
    6a90:	mov    rsi,QWORD PTR [rbx+0x20]
    6a94:	test   eax,eax
    6a96:	je     6aa6 <hvm_io_address_summary.part.14+0x256>
    6a98:	movsxd rcx,eax
    6a9b:	xor    edx,edx
    6a9d:	mov    rax,rsi
    6aa0:	div    rcx
    6aa3:	mov    rcx,rax
    6aa6:	lea    rdx,[rsi+rsi*4]
    6aaa:	pxor   xmm1,xmm1
    6aae:	pxor   xmm0,xmm0
    6ab2:	lea    rdx,[rdx+rdx*4]
    6ab6:	shl    rdx,0x2
    6aba:	test   rsi,rsi
    6abd:	cvtsi2sd xmm0,QWORD PTR [rip+0x22670a]        # 22d1d0 <P+0x30>
    6ac6:	cvtsi2sd xmm1,rdx
    6acb:	divsd  xmm1,xmm0
    6acf:	js     6dd0 <hvm_io_address_summary.part.14+0x580>
    6ad5:	pxor   xmm0,xmm0
    6ad9:	cvtsi2sd xmm0,rsi
    6ade:	pxor   xmm2,xmm2
    6ae2:	sub    rsp,0x8
    6ae6:	mov    edx,DWORD PTR [rbx+0x10]
    6ae9:	lea    rsi,[rip+0x18ce8]        # 1f7d8 <_IO_stdin_used+0x2818>
    6af0:	push   r13
    6af2:	mov    r8,rbp
    6af5:	mov    edi,0x1
    6afa:	mov    r9,r12
    6afd:	mov    eax,0x2
    6b02:	cvtsi2sd xmm2,QWORD PTR [rip+0x2225a5]        # 2290b0 <opt+0x10>
    6b0b:	divsd  xmm0,xmm2
    6b0f:	call   44f0 <__printf_chk@plt>
    6b14:	pop    rdi
    6b15:	pop    r8
    6b17:	mov    esi,DWORD PTR [rbx+0x48]
    6b1a:	test   esi,esi
    6b1c:	je     6a1f <hvm_io_address_summary.part.14+0x1cf>
    6b22:	mov    ecx,DWORD PTR [rip+0x2225b0]        # 2290d8 <opt+0x38>
    6b28:	test   ecx,ecx
    6b2a:	je     6d00 <hvm_io_address_summary.part.14+0x4b0>
    6b30:	mov    esi,DWORD PTR [rbx+0x4c]
    6b33:	cmp    DWORD PTR [rbx+0x50],esi
    6b36:	cmovle esi,DWORD PTR [rbx+0x50]
    6b3a:	test   esi,esi
    6b3c:	mov    r13d,esi
    6b3f:	jne    6e70 <hvm_io_address_summary.part.14+0x620>
    6b45:	xor    r13d,r13d
    6b48:	xor    ebp,ebp
    6b4a:	xor    r12d,r12d
    6b4d:	mov    edx,DWORD PTR [rbx+0x8]
    6b50:	lea    rsi,[rip+0x16570]        # 1d0c7 <_IO_stdin_used+0x107>
    6b57:	xor    eax,eax
    6b59:	mov    edi,0x1
    6b5e:	call   44f0 <__printf_chk@plt>
    6b63:	mov    eax,DWORD PTR [rbx+0x4c]
    6b66:	mov    rsi,QWORD PTR [rbx+0x58]
    6b6a:	test   eax,eax
    6b6c:	je     69ad <hvm_io_address_summary.part.14+0x15d>
    6b72:	movsxd rcx,eax
    6b75:	xor    edx,edx
    6b77:	mov    rax,rsi
    6b7a:	div    rcx
    6b7d:	mov    rcx,rax
    6b80:	jmp    69af <hvm_io_address_summary.part.14+0x15f>
    6b85:	nop    DWORD PTR [rax]
    6b88:	mov    rax,rsi
    6b8b:	pxor   xmm0,xmm0
    6b8f:	shr    rax,1
    6b92:	and    esi,0x1
    6b95:	or     rax,rsi
    6b98:	cvtsi2sd xmm0,rax
    6b9d:	addsd  xmm0,xmm0
    6ba1:	jmp    69e7 <hvm_io_address_summary.part.14+0x197>
    6ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6bb0:	movsxd rcx,eax
    6bb3:	xor    edx,edx
    6bb5:	mov    rax,rsi
    6bb8:	div    rcx
    6bbb:	mov    rcx,rax
    6bbe:	jmp    68da <hvm_io_address_summary.part.14+0x8a>
    6bc3:	nop    DWORD PTR [rax+rax*1+0x0]
    6bc8:	mov    edx,DWORD PTR [rbx+0x8]
    6bcb:	lea    rsi,[rip+0x164e8]        # 1d0ba <_IO_stdin_used+0xfa>
    6bd2:	xor    eax,eax
    6bd4:	mov    edi,0x1
    6bd9:	call   44f0 <__printf_chk@plt>
    6bde:	mov    eax,DWORD PTR [rbx+0x14]
    6be1:	xor    ecx,ecx
    6be3:	mov    rsi,QWORD PTR [rbx+0x20]
    6be7:	test   eax,eax
    6be9:	je     6bf9 <hvm_io_address_summary.part.14+0x3a9>
    6beb:	movsxd rcx,eax
    6bee:	xor    edx,edx
    6bf0:	mov    rax,rsi
    6bf3:	div    rcx
    6bf6:	mov    rcx,rax
    6bf9:	lea    rdx,[rsi+rsi*4]
    6bfd:	pxor   xmm1,xmm1
    6c01:	pxor   xmm0,xmm0
    6c05:	lea    rdx,[rdx+rdx*4]
    6c09:	shl    rdx,0x2
    6c0d:	test   rsi,rsi
    6c10:	cvtsi2sd xmm0,QWORD PTR [rip+0x2265b7]        # 22d1d0 <P+0x30>
    6c19:	cvtsi2sd xmm1,rdx
    6c1e:	divsd  xmm1,xmm0
    6c22:	js     6f38 <hvm_io_address_summary.part.14+0x6e8>
    6c28:	pxor   xmm0,xmm0
    6c2c:	cvtsi2sd xmm0,rsi
    6c31:	pxor   xmm2,xmm2
    6c35:	mov    edx,DWORD PTR [rbx+0x10]
    6c38:	lea    rsi,[rip+0x18bd1]        # 1f810 <_IO_stdin_used+0x2850>
    6c3f:	mov    edi,0x1
    6c44:	mov    eax,0x2
    6c49:	cvtsi2sd xmm2,QWORD PTR [rip+0x22245e]        # 2290b0 <opt+0x10>
    6c52:	divsd  xmm0,xmm2
    6c56:	call   44f0 <__printf_chk@plt>
    6c5b:	jmp    6b17 <hvm_io_address_summary.part.14+0x2c7>
    6c60:	mov    ecx,DWORD PTR [rbx+0xc]
    6c63:	mov    edx,DWORD PTR [rbx+0x8]
    6c66:	lea    rsi,[rip+0x16456]        # 1d0c3 <_IO_stdin_used+0x103>
    6c6d:	xor    eax,eax
    6c6f:	mov    edi,0x1
    6c74:	call   44f0 <__printf_chk@plt>
    6c79:	mov    eax,DWORD PTR [rbx+0x4c]
    6c7c:	mov    rsi,QWORD PTR [rbx+0x58]
    6c80:	test   eax,eax
    6c82:	je     6d25 <hvm_io_address_summary.part.14+0x4d5>
    6c88:	movsxd rcx,eax
    6c8b:	xor    edx,edx
    6c8d:	mov    rax,rsi
    6c90:	div    rcx
    6c93:	mov    rcx,rax
    6c96:	lea    rdx,[rsi+rsi*4]
    6c9a:	pxor   xmm1,xmm1
    6c9e:	pxor   xmm0,xmm0
    6ca2:	lea    rdx,[rdx+rdx*4]
    6ca6:	shl    rdx,0x2
    6caa:	test   rsi,rsi
    6cad:	cvtsi2sd xmm0,QWORD PTR [rip+0x22651a]        # 22d1d0 <P+0x30>
    6cb6:	cvtsi2sd xmm1,rdx
    6cbb:	divsd  xmm1,xmm0
    6cbf:	js     6e10 <hvm_io_address_summary.part.14+0x5c0>
    6cc5:	pxor   xmm0,xmm0
    6cc9:	cvtsi2sd xmm0,rsi
    6cce:	pxor   xmm2,xmm2
    6cd2:	mov    edx,DWORD PTR [rbx+0x48]
    6cd5:	lea    rsi,[rip+0x18b34]        # 1f810 <_IO_stdin_used+0x2850>
    6cdc:	mov    edi,0x1
    6ce1:	mov    eax,0x2
    6ce6:	cvtsi2sd xmm2,QWORD PTR [rip+0x2223c1]        # 2290b0 <opt+0x10>
    6cef:	divsd  xmm0,xmm2
    6cf3:	call   44f0 <__printf_chk@plt>
    6cf8:	jmp    6a1f <hvm_io_address_summary.part.14+0x1cf>
    6cfd:	nop    DWORD PTR [rax]
    6d00:	mov    edx,DWORD PTR [rbx+0x8]
    6d03:	lea    rsi,[rip+0x163bd]        # 1d0c7 <_IO_stdin_used+0x107>
    6d0a:	xor    eax,eax
    6d0c:	mov    edi,0x1
    6d11:	call   44f0 <__printf_chk@plt>
    6d16:	mov    eax,DWORD PTR [rbx+0x4c]
    6d19:	mov    rsi,QWORD PTR [rbx+0x58]
    6d1d:	test   eax,eax
    6d1f:	jne    6c88 <hvm_io_address_summary.part.14+0x438>
    6d25:	xor    ecx,ecx
    6d27:	jmp    6c96 <hvm_io_address_summary.part.14+0x446>
    6d2c:	nop    DWORD PTR [rax+0x0]
    6d30:	mov    edx,DWORD PTR [rbx+0x8]
    6d33:	lea    rsi,[rip+0x1637c]        # 1d0b6 <_IO_stdin_used+0xf6>
    6d3a:	xor    eax,eax
    6d3c:	mov    edi,0x1
    6d41:	call   44f0 <__printf_chk@plt>
    6d46:	mov    eax,DWORD PTR [rbx+0x14]
    6d49:	xor    ecx,ecx
    6d4b:	mov    rsi,QWORD PTR [rbx+0x20]
    6d4f:	test   eax,eax
    6d51:	je     6d61 <hvm_io_address_summary.part.14+0x511>
    6d53:	movsxd rcx,eax
    6d56:	xor    edx,edx
    6d58:	mov    rax,rsi
    6d5b:	div    rcx
    6d5e:	mov    rcx,rax
    6d61:	lea    rdx,[rsi+rsi*4]
    6d65:	pxor   xmm1,xmm1
    6d69:	pxor   xmm0,xmm0
    6d6d:	lea    rdx,[rdx+rdx*4]
    6d71:	shl    rdx,0x2
    6d75:	test   rsi,rsi
    6d78:	cvtsi2sd xmm0,QWORD PTR [rip+0x22644f]        # 22d1d0 <P+0x30>
    6d81:	cvtsi2sd xmm1,rdx
    6d86:	divsd  xmm1,xmm0
    6d8a:	js     6f60 <hvm_io_address_summary.part.14+0x710>
    6d90:	pxor   xmm0,xmm0
    6d94:	cvtsi2sd xmm0,rsi
    6d99:	pxor   xmm2,xmm2
    6d9d:	mov    edx,DWORD PTR [rbx+0x10]
    6da0:	lea    rsi,[rip+0x18a69]        # 1f810 <_IO_stdin_used+0x2850>
    6da7:	mov    edi,0x1
    6dac:	mov    eax,0x2
    6db1:	cvtsi2sd xmm2,QWORD PTR [rip+0x2222f6]        # 2290b0 <opt+0x10>
    6dba:	divsd  xmm0,xmm2
    6dbe:	call   44f0 <__printf_chk@plt>
    6dc3:	jmp    694b <hvm_io_address_summary.part.14+0xfb>
    6dc8:	nop    DWORD PTR [rax+rax*1+0x0]
    6dd0:	mov    rax,rsi
    6dd3:	pxor   xmm0,xmm0
    6dd7:	shr    rax,1
    6dda:	and    esi,0x1
    6ddd:	or     rax,rsi
    6de0:	cvtsi2sd xmm0,rax
    6de5:	addsd  xmm0,xmm0
    6de9:	jmp    6ade <hvm_io_address_summary.part.14+0x28e>
    6dee:	xchg   ax,ax
    6df0:	mov    rax,rsi
    6df3:	pxor   xmm0,xmm0
    6df7:	shr    rax,1
    6dfa:	and    esi,0x1
    6dfd:	or     rax,rsi
    6e00:	cvtsi2sd xmm0,rax
    6e05:	addsd  xmm0,xmm0
    6e09:	jmp    6912 <hvm_io_address_summary.part.14+0xc2>
    6e0e:	xchg   ax,ax
    6e10:	mov    rax,rsi
    6e13:	pxor   xmm0,xmm0
    6e17:	shr    rax,1
    6e1a:	and    esi,0x1
    6e1d:	or     rax,rsi
    6e20:	cvtsi2sd xmm0,rax
    6e25:	addsd  xmm0,xmm0
    6e29:	jmp    6cce <hvm_io_address_summary.part.14+0x47e>
    6e2e:	xchg   ax,ax
    6e30:	mov    rdi,QWORD PTR [rbx+0x60]
    6e34:	mov    edx,0x32
    6e39:	call   4b30 <percentile.part.6>
    6e3e:	mov    rdi,QWORD PTR [rbx+0x60]
    6e42:	mov    esi,r13d
    6e45:	mov    edx,0x5
    6e4a:	mov    r12,rax
    6e4d:	call   4b30 <percentile.part.6>
    6e52:	mov    rdi,QWORD PTR [rbx+0x60]
    6e56:	mov    esi,r13d
    6e59:	mov    edx,0x5f
    6e5e:	mov    rbp,rax
    6e61:	call   4b30 <percentile.part.6>
    6e66:	mov    r13,rax
    6e69:	jmp    6985 <hvm_io_address_summary.part.14+0x135>
    6e6e:	xchg   ax,ax
    6e70:	mov    rdi,QWORD PTR [rbx+0x60]
    6e74:	mov    edx,0x32
    6e79:	call   4b30 <percentile.part.6>
    6e7e:	mov    rdi,QWORD PTR [rbx+0x60]
    6e82:	mov    esi,r13d
    6e85:	mov    edx,0x5
    6e8a:	mov    r12,rax
    6e8d:	call   4b30 <percentile.part.6>
    6e92:	mov    rdi,QWORD PTR [rbx+0x60]
    6e96:	mov    esi,r13d
    6e99:	mov    edx,0x5f
    6e9e:	mov    rbp,rax
    6ea1:	call   4b30 <percentile.part.6>
    6ea6:	mov    r13,rax
    6ea9:	jmp    6b4d <hvm_io_address_summary.part.14+0x2fd>
    6eae:	xchg   ax,ax
    6eb0:	mov    rdi,QWORD PTR [rbx+0x28]
    6eb4:	mov    edx,0x32
    6eb9:	call   4b30 <percentile.part.6>
    6ebe:	mov    rdi,QWORD PTR [rbx+0x28]
    6ec2:	mov    esi,r13d
    6ec5:	mov    edx,0x5
    6eca:	mov    r12,rax
    6ecd:	call   4b30 <percentile.part.6>
    6ed2:	mov    rdi,QWORD PTR [rbx+0x28]
    6ed6:	mov    esi,r13d
    6ed9:	mov    edx,0x5f
    6ede:	mov    rbp,rax
    6ee1:	call   4b30 <percentile.part.6>
    6ee6:	mov    r13,rax
    6ee9:	jmp    6a75 <hvm_io_address_summary.part.14+0x225>
    6eee:	xchg   ax,ax
    6ef0:	mov    rdi,QWORD PTR [rbx+0x28]
    6ef4:	mov    edx,0x32
    6ef9:	call   4b30 <percentile.part.6>
    6efe:	mov    rdi,QWORD PTR [rbx+0x28]
    6f02:	mov    esi,r13d
    6f05:	mov    edx,0x5
    6f0a:	mov    r12,rax
    6f0d:	call   4b30 <percentile.part.6>
    6f12:	mov    rdi,QWORD PTR [rbx+0x28]
    6f16:	mov    esi,r13d
    6f19:	mov    edx,0x5f
    6f1e:	mov    rbp,rax
    6f21:	call   4b30 <percentile.part.6>
    6f26:	mov    ecx,DWORD PTR [rbx+0xc]
    6f29:	mov    r13,rax
    6f2c:	jmp    68b3 <hvm_io_address_summary.part.14+0x63>
    6f31:	nop    DWORD PTR [rax+0x0]
    6f38:	mov    rax,rsi
    6f3b:	pxor   xmm0,xmm0
    6f3f:	shr    rax,1
    6f42:	and    esi,0x1
    6f45:	or     rax,rsi
    6f48:	cvtsi2sd xmm0,rax
    6f4d:	addsd  xmm0,xmm0
    6f51:	jmp    6c31 <hvm_io_address_summary.part.14+0x3e1>
    6f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6f60:	mov    rax,rsi
    6f63:	pxor   xmm0,xmm0
    6f67:	shr    rax,1
    6f6a:	and    esi,0x1
    6f6d:	or     rax,rsi
    6f70:	cvtsi2sd xmm0,rax
    6f75:	addsd  xmm0,xmm0
    6f79:	jmp    6d99 <hvm_io_address_summary.part.14+0x549>
    6f7e:	xchg   ax,ax

0000000000006f80 <pv_summary.part.22>:
    6f80:	push   r15
    6f82:	push   r14
    6f84:	mov    r15,rdi
    6f87:	push   r13
    6f89:	push   r12
    6f8b:	lea    rdi,[rip+0x1613e]        # 1d0d0 <_IO_stdin_used+0x110>
    6f92:	push   rbp
    6f93:	push   rbx
    6f94:	xor    ebp,ebp
    6f96:	lea    r12,[rip+0x222743]        # 2296e0 <hypercall_name>
    6f9d:	lea    r14,[rip+0x2224dc]        # 229480 <pv_name>
    6fa4:	lea    r13,[rip+0x1614f]        # 1d0fa <_IO_stdin_used+0x13a>
    6fab:	sub    rsp,0x8
    6faf:	call   4380 <puts@plt>
    6fb4:	jmp    6fdf <pv_summary.part.22+0x5f>
    6fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6fc0:	cmp    ebp,0xd
    6fc3:	je     7060 <pv_summary.part.22+0xe0>
    6fc9:	cmp    ebp,0x1
    6fcc:	je     7060 <pv_summary.part.22+0xe0>
    6fd2:	cmp    ebp,0xe
    6fd5:	je     709b <pv_summary.part.22+0x11b>
    6fdb:	add    rbp,0x1
    6fdf:	cmp    rbp,0xd
    6fe3:	mov    ecx,DWORD PTR [r15+rbp*4+0x4]
    6fe8:	je     7039 <pv_summary.part.22+0xb9>
    6fea:	test   ecx,ecx
    6fec:	je     6fd2 <pv_summary.part.22+0x52>
    6fee:	mov    rdx,QWORD PTR [r14+rbp*8]
    6ff2:	lea    rsi,[rip+0x160e2]        # 1d0db <_IO_stdin_used+0x11b>
    6ff9:	xor    eax,eax
    6ffb:	mov    edi,0x1
    7000:	call   44f0 <__printf_chk@plt>
    7005:	cmp    ebp,0x3
    7008:	jne    6fc0 <pv_summary.part.22+0x40>
    700a:	xor    ebx,ebx
    700c:	jmp    701a <pv_summary.part.22+0x9a>
    700e:	xchg   ax,ax
    7010:	add    rbx,0x1
    7014:	cmp    rbx,0x14
    7018:	je     6fdb <pv_summary.part.22+0x5b>
    701a:	mov    ecx,DWORD PTR [r15+rbx*4+0x120]
    7022:	test   ecx,ecx
    7024:	je     7010 <pv_summary.part.22+0x90>
    7026:	mov    edx,ebx
    7028:	mov    rsi,r13
    702b:	mov    edi,0x1
    7030:	xor    eax,eax
    7032:	call   44f0 <__printf_chk@plt>
    7037:	jmp    7010 <pv_summary.part.22+0x90>
    7039:	add    ecx,DWORD PTR [r15+0x3c]
    703d:	je     6fdb <pv_summary.part.22+0x5b>
    703f:	mov    rdx,QWORD PTR [rip+0x2224a2]        # 2294e8 <pv_name+0x68>
    7046:	lea    rsi,[rip+0x1608e]        # 1d0db <_IO_stdin_used+0x11b>
    704d:	mov    edi,0x1
    7052:	xor    eax,eax
    7054:	call   44f0 <__printf_chk@plt>
    7059:	nop    DWORD PTR [rax+0x0]
    7060:	xor    ebx,ebx
    7062:	jmp    7076 <pv_summary.part.22+0xf6>
    7064:	nop    DWORD PTR [rax+0x0]
    7068:	add    rbx,0x1
    706c:	cmp    rbx,0x38
    7070:	je     6fd2 <pv_summary.part.22+0x52>
    7076:	mov    r8d,DWORD PTR [r15+rbx*4+0x40]
    707b:	test   r8d,r8d
    707e:	je     7068 <pv_summary.part.22+0xe8>
    7080:	mov    rdx,QWORD PTR [r12+rbx*8]
    7084:	lea    rsi,[rip+0x1605a]        # 1d0e5 <_IO_stdin_used+0x125>
    708b:	mov    ecx,ebx
    708d:	mov    edi,0x1
    7092:	xor    eax,eax
    7094:	call   44f0 <__printf_chk@plt>
    7099:	jmp    7068 <pv_summary.part.22+0xe8>
    709b:	add    rsp,0x8
    709f:	pop    rbx
    70a0:	pop    rbp
    70a1:	pop    r12
    70a3:	pop    r13
    70a5:	pop    r14
    70a7:	pop    r15
    70a9:	ret    
    70aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000070b0 <p2m_canonical_order.part.23>:
    70b0:	sub    rsp,0x8
    70b4:	mov    r8d,edi
    70b7:	mov    rdi,QWORD PTR [rip+0x25e19a]        # 265258 <warn>
    70be:	lea    rcx,[rip+0x1c23b]        # 23300 <__func__.7914>
    70c5:	lea    rdx,[rip+0x1878c]        # 1f858 <_IO_stdin_used+0x2898>
    70cc:	mov    esi,0x1
    70d1:	xor    eax,eax
    70d3:	call   4560 <__fprintf_chk@plt>
    70d8:	mov    eax,0x4
    70dd:	add    rsp,0x8
    70e1:	ret    
    70e2:	nop    DWORD PTR [rax+0x0]
    70e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000070f0 <hvm_msr_read_summary>:
    70f0:	repz ret 
    70f2:	nop    DWORD PTR [rax+0x0]
    70f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007100 <init_hvm_data.part.25>:
    7100:	push   rbp
    7101:	push   rbx
    7102:	mov    rbx,rdi
    7105:	sub    rsp,0x8
    7109:	mov    QWORD PTR [rdi+0x10],rsi
    710d:	mov    DWORD PTR [rdi],0x1
    7113:	test   BYTE PTR [rip+0x221f89],0x10        # 2290a3 <opt+0x3>
    711a:	je     7160 <init_hvm_data.part.25+0x60>
    711c:	lea    rax,[rip+0x22311d]        # 22a240 <hvm_svm_exit_reason_name>
    7123:	mov    DWORD PTR [rdi+0x20],0x401
    712a:	mov    QWORD PTR [rdi+0x18],rax
    712e:	test   BYTE PTR [rip+0x221f6c],0x10        # 2290a1 <opt+0x1>
    7135:	jne    717b <init_hvm_data.part.25+0x7b>
    7137:	lea    rax,[rbx+0x12af8]
    713e:	lea    rdx,[rbx+0x27f00]
    7145:	nop    DWORD PTR [rax]
    7148:	mov    DWORD PTR [rax],0x0
    714e:	add    rax,0xf8
    7154:	cmp    rax,rdx
    7157:	jne    7148 <init_hvm_data.part.25+0x48>
    7159:	add    rsp,0x8
    715d:	pop    rbx
    715e:	pop    rbp
    715f:	ret    
    7160:	lea    rax,[rip+0x2250f9]        # 22c260 <hvm_vmx_exit_reason_name>
    7167:	mov    DWORD PTR [rdi+0x20],0x38
    716e:	mov    QWORD PTR [rdi+0x18],rax
    7172:	test   BYTE PTR [rip+0x221f28],0x10        # 2290a1 <opt+0x1>
    7179:	je     7137 <init_hvm_data.part.25+0x37>
    717b:	xor    edx,edx
    717d:	movabs rax,0x1000000000000
    7187:	mov    esi,0x1
    718c:	div    QWORD PTR [rip+0x221f35]        # 2290c8 <opt+0x28>
    7193:	cdqe   
    7195:	lea    rbp,[rax*4+0x0]
    719d:	mov    rdi,rbp
    71a0:	call   4460 <calloc@plt>
    71a5:	test   rax,rax
    71a8:	mov    QWORD PTR [rbx+0x10470],rax
    71af:	jne    7137 <init_hvm_data.part.25+0x37>
    71b1:	mov    rdi,QWORD PTR [rip+0x225288]        # 22c440 <stderr@@GLIBC_2.2.5>
    71b8:	lea    rdx,[rip+0x186c1]        # 1f880 <_IO_stdin_used+0x28c0>
    71bf:	xor    eax,eax
    71c1:	mov    rcx,rbp
    71c4:	mov    esi,0x1
    71c9:	call   4560 <__fprintf_chk@plt>
    71ce:	cmp    DWORD PTR [rip+0x221f0b],0x7        # 2290e0 <opt+0x40>
    71d5:	ja     7137 <init_hvm_data.part.25+0x37>
    71db:	mov    edi,0x1
    71e0:	call   4540 <exit@plt>
    71e5:	nop
    71e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000071f0 <parse_symbol_file>:
    71f0:	push   r13
    71f2:	push   r12
    71f4:	lea    rsi,[rip+0x15f21]        # 1d11c <_IO_stdin_used+0x15c>
    71fb:	push   rbp
    71fc:	push   rbx
    71fd:	mov    rbx,rdi
    7200:	sub    rsp,0x8
    7204:	call   4520 <fopen@plt>
    7209:	test   rax,rax
    720c:	mov    rbp,rax
    720f:	je     7398 <parse_symbol_file+0x1a8>
    7215:	lea    rbx,[rip+0x221f14]        # 229130 <G+0x10>
    721c:	xor    r12d,r12d
    721f:	lea    r13,[rip+0x16153]        # 1d379 <_IO_stdin_used+0x3b9>
    7226:	jmp    72c0 <parse_symbol_file+0xd0>
    722b:	nop    DWORD PTR [rax+rax*1+0x0]
    7230:	movsxd rcx,DWORD PTR [rax]
    7233:	mov    edi,0xdeadbeef
    7238:	lea    rsi,[rip+0x15ee5]        # 1d124 <_IO_stdin_used+0x164>
    723f:	mov    rdx,rcx
    7242:	shl    rdx,0x4
    7246:	add    rdx,rcx
    7249:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
    724e:	mov    rdx,QWORD PTR [rbx]
    7251:	mov    rdi,rbp
    7254:	movsxd rcx,DWORD PTR [rdx]
    7257:	mov    rax,rcx
    725a:	shl    rax,0x4
    725e:	add    rax,rcx
    7261:	shl    rax,0x3
    7265:	lea    rcx,[rdx+rax*1+0x10]
    726a:	lea    rdx,[rdx+rax*1+0x8]
    726f:	xor    eax,eax
    7271:	call   4370 <__isoc99_fscanf@plt>
    7276:	test   eax,eax
    7278:	je     7350 <parse_symbol_file+0x160>
    727e:	mov    rsi,QWORD PTR [rbx]
    7281:	movsxd rcx,DWORD PTR [rsi]
    7284:	mov    rax,rcx
    7287:	mov    rdx,rcx
    728a:	shl    rax,0x4
    728e:	add    rax,rcx
    7291:	shl    rax,0x3
    7295:	mov    rcx,QWORD PTR [rsi+rax*1+0x8]
    729a:	test   rcx,rcx
    729d:	je     72a4 <parse_symbol_file+0xb4>
    729f:	cmp    rcx,r12
    72a2:	jb     7310 <parse_symbol_file+0x120>
    72a4:	add    edx,0x1
    72a7:	mov    r12,rcx
    72aa:	mov    DWORD PTR [rsi],edx
    72ac:	mov    rax,QWORD PTR [rbx]
    72af:	cmp    DWORD PTR [rax],0x3ff
    72b5:	lea    rdx,[rax+0x21f80]
    72bc:	cmove  rbx,rdx
    72c0:	mov    rdi,rbp
    72c3:	call   4470 <feof@plt>
    72c8:	test   eax,eax
    72ca:	jne    7350 <parse_symbol_file+0x160>
    72d0:	mov    rax,QWORD PTR [rbx]
    72d3:	test   rax,rax
    72d6:	jne    7230 <parse_symbol_file+0x40>
    72dc:	mov    edi,0x21f88
    72e1:	call   4490 <malloc@plt>
    72e6:	test   rax,rax
    72e9:	mov    QWORD PTR [rbx],rax
    72ec:	je     7368 <parse_symbol_file+0x178>
    72ee:	mov    DWORD PTR [rax],0x0
    72f4:	mov    rax,QWORD PTR [rbx]
    72f7:	mov    QWORD PTR [rax+0x21f80],0x0
    7302:	mov    rax,QWORD PTR [rbx]
    7305:	jmp    7230 <parse_symbol_file+0x40>
    730a:	nop    WORD PTR [rax+rax*1+0x0]
    7310:	mov    rdi,QWORD PTR [rip+0x225129]        # 22c440 <stderr@@GLIBC_2.2.5>
    7317:	lea    r8,[rsi+rax*1+0x10]
    731c:	lea    rdx,[rip+0x185bd]        # 1f8e0 <_IO_stdin_used+0x2920>
    7323:	xor    eax,eax
    7325:	mov    r9,r12
    7328:	mov    esi,0x1
    732d:	call   4560 <__fprintf_chk@plt>
    7332:	cmp    DWORD PTR [rip+0x221da7],0x6        # 2290e0 <opt+0x40>
    7339:	jbe    73ce <parse_symbol_file+0x1de>
    733f:	mov    rsi,QWORD PTR [rbx]
    7342:	mov    rcx,r12
    7345:	mov    edx,DWORD PTR [rsi]
    7347:	jmp    72a4 <parse_symbol_file+0xb4>
    734c:	nop    DWORD PTR [rax+0x0]
    7350:	add    rsp,0x8
    7354:	mov    rdi,rbp
    7357:	pop    rbx
    7358:	pop    rbp
    7359:	pop    r12
    735b:	pop    r13
    735d:	jmp    43b0 <fclose@plt>
    7362:	nop    WORD PTR [rax+rax*1+0x0]
    7368:	mov    rcx,QWORD PTR [rip+0x2250d1]        # 22c440 <stderr@@GLIBC_2.2.5>
    736f:	mov    edx,0xf
    7374:	mov    esi,0x1
    7379:	mov    rdi,r13
    737c:	call   4550 <fwrite@plt>
    7381:	cmp    DWORD PTR [rip+0x221d58],0x7        # 2290e0 <opt+0x40>
    7388:	jbe    73ce <parse_symbol_file+0x1de>
    738a:	mov    rax,QWORD PTR [rbx]
    738d:	jmp    72ee <parse_symbol_file+0xfe>
    7392:	nop    WORD PTR [rax+rax*1+0x0]
    7398:	mov    rdi,QWORD PTR [rip+0x2250a1]        # 22c440 <stderr@@GLIBC_2.2.5>
    739f:	lea    rdx,[rip+0x1851a]        # 1f8c0 <_IO_stdin_used+0x2900>
    73a6:	mov    rcx,rbx
    73a9:	mov    esi,0x1
    73ae:	xor    eax,eax
    73b0:	call   4560 <__fprintf_chk@plt>
    73b5:	lea    rdi,[rip+0x15d63]        # 1d11f <_IO_stdin_used+0x15f>
    73bc:	call   4530 <perror@plt>
    73c1:	cmp    DWORD PTR [rip+0x221d18],0x7        # 2290e0 <opt+0x40>
    73c8:	ja     7215 <parse_symbol_file+0x25>
    73ce:	mov    edi,0x1
    73d3:	call   4540 <exit@plt>
    73d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000073e0 <find_symbol>:
    73e0:	mov    r8,QWORD PTR [rip+0x221d49]        # 229130 <G+0x10>
    73e7:	test   r8,r8
    73ea:	je     7490 <find_symbol+0xb0>
    73f0:	lea    r9,[rip+0x15d38]        # 1d12f <_IO_stdin_used+0x16f>
    73f7:	sub    rsp,0x8
    73fb:	mov    rcx,rdi
    73fe:	mov    esi,DWORD PTR [r8]
    7401:	test   esi,esi
    7403:	jle    7445 <find_symbol+0x65>
    7405:	mov    rdx,QWORD PTR [r8+0x8]
    7409:	cmp    rdx,rdi
    740c:	ja     7451 <find_symbol+0x71>
    740e:	sub    esi,0x1
    7411:	lea    rax,[r8+0x10]
    7415:	mov    rcx,rsi
    7418:	shl    rcx,0x4
    741c:	add    rcx,rsi
    741f:	lea    rsi,[rax+rcx*8]
    7423:	jmp    7437 <find_symbol+0x57>
    7425:	nop    DWORD PTR [rax]
    7428:	add    rax,0x88
    742e:	mov    rdx,QWORD PTR [rax-0x8]
    7432:	cmp    rdx,rdi
    7435:	ja     7451 <find_symbol+0x71>
    7437:	mov    rcx,rdi
    743a:	mov    r9,rax
    743d:	sub    rcx,rdx
    7440:	cmp    rax,rsi
    7443:	jne    7428 <find_symbol+0x48>
    7445:	mov    r8,QWORD PTR [r8+0x21f80]
    744c:	test   r8,r8
    744f:	jne    73fe <find_symbol+0x1e>
    7451:	sub    rsp,0x8
    7455:	lea    r8,[rip+0x15cd8]        # 1d134 <_IO_stdin_used+0x174>
    745c:	lea    rdi,[rip+0x25ffbd]        # 267420 <name.4842>
    7463:	push   rcx
    7464:	mov    edx,0x1
    7469:	mov    ecx,0x90
    746e:	mov    esi,0x90
    7473:	xor    eax,eax
    7475:	call   4320 <__snprintf_chk@plt>
    747a:	lea    rax,[rip+0x25ff9f]        # 267420 <name.4842>
    7481:	add    rsp,0x18
    7485:	ret    
    7486:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7490:	mov    BYTE PTR [rip+0x25ff89],0x0        # 267420 <name.4842>
    7497:	lea    rax,[rip+0x25ff82]        # 267420 <name.4842>
    749e:	ret    
    749f:	nop

00000000000074a0 <init_hvm_data>:
    74a0:	mov    eax,DWORD PTR [rdi]
    74a2:	test   eax,eax
    74a4:	jne    74b0 <init_hvm_data+0x10>
    74a6:	jmp    7100 <init_hvm_data.part.25>
    74ab:	nop    DWORD PTR [rax+rax*1+0x0]
    74b0:	repz ret 
    74b2:	nop    DWORD PTR [rax+0x0]
    74b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000074c0 <volume_clear>:
    74c0:	mov    QWORD PTR [rdi],0x0
    74c7:	mov    QWORD PTR [rdi+0x58],0x0
    74cf:	mov    rcx,rdi
    74d2:	lea    rdi,[rdi+0x8]
    74d6:	xor    eax,eax
    74d8:	and    rdi,0xfffffffffffffff8
    74dc:	sub    rcx,rdi
    74df:	add    ecx,0x60
    74e2:	shr    ecx,0x3
    74e5:	rep stos QWORD PTR es:[rdi],rax
    74e8:	ret    
    74e9:	nop    DWORD PTR [rax+0x0]

00000000000074f0 <volume_summary>:
    74f0:	push   r15
    74f2:	push   r14
    74f4:	lea    r14,[rip+0x222315]        # 229810 <hvm_vol_name>
    74fb:	push   r13
    74fd:	push   r12
    74ff:	lea    r13,[rip+0x221dda]        # 2292e0 <toplevel_name>
    7506:	push   rbp
    7507:	push   rbx
    7508:	mov    rbp,rdi
    750b:	xor    ebx,ebx
    750d:	lea    r12,[rip+0x15c2b]        # 1d13f <_IO_stdin_used+0x17f>
    7514:	sub    rsp,0x8
    7518:	jmp    7529 <volume_summary+0x39>
    751a:	nop    WORD PTR [rax+rax*1+0x0]
    7520:	cmp    ebx,0x7
    7523:	je     7590 <volume_summary+0xa0>
    7525:	add    rbx,0x1
    7529:	mov    rcx,QWORD PTR [rbp+rbx*8+0x0]
    752e:	test   rcx,rcx
    7531:	je     7520 <volume_summary+0x30>
    7533:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
    7538:	xor    eax,eax
    753a:	mov    rsi,r12
    753d:	mov    edi,0x1
    7542:	call   44f0 <__printf_chk@plt>
    7547:	cmp    ebx,0x1
    754a:	je     75a0 <volume_summary+0xb0>
    754c:	cmp    ebx,0x3
    754f:	jne    7520 <volume_summary+0x30>
    7551:	xor    r15d,r15d
    7554:	mov    rcx,QWORD PTR [rbp+r15*1+0x48]
    7559:	test   rcx,rcx
    755c:	jne    7572 <volume_summary+0x82>
    755e:	add    r15,0x8
    7562:	cmp    r15,0x18
    7566:	je     7525 <volume_summary+0x35>
    7568:	mov    rcx,QWORD PTR [rbp+r15*1+0x48]
    756d:	test   rcx,rcx
    7570:	je     755e <volume_summary+0x6e>
    7572:	mov    rdx,QWORD PTR [r14+r15*1]
    7576:	lea    rsi,[rip+0x15be5]        # 1d162 <_IO_stdin_used+0x1a2>
    757d:	mov    edi,0x1
    7582:	xor    eax,eax
    7584:	call   44f0 <__printf_chk@plt>
    7589:	jmp    755e <volume_summary+0x6e>
    758b:	nop    DWORD PTR [rax+rax*1+0x0]
    7590:	add    rsp,0x8
    7594:	pop    rbx
    7595:	pop    rbp
    7596:	pop    r12
    7598:	pop    r13
    759a:	pop    r14
    759c:	pop    r15
    759e:	ret    
    759f:	nop
    75a0:	mov    rdx,QWORD PTR [rbp+0x40]
    75a4:	test   rdx,rdx
    75a7:	je     7525 <volume_summary+0x35>
    75ad:	lea    rsi,[rip+0x15b9a]        # 1d14e <_IO_stdin_used+0x18e>
    75b4:	mov    edi,0x1
    75b9:	xor    eax,eax
    75bb:	call   44f0 <__printf_chk@plt>
    75c0:	jmp    7525 <volume_summary+0x35>
    75c5:	nop
    75c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000075d0 <cpumask_init>:
    75d0:	mov    DWORD PTR [rdi],0x0
    75d6:	ret    
    75d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000075e0 <cpumask_clear>:
    75e0:	mov    rax,0xfffffffffffffffe
    75e7:	mov    ecx,esi
    75e9:	rol    rax,cl
    75ec:	and    DWORD PTR [rdi],eax
    75ee:	ret    
    75ef:	nop

00000000000075f0 <cpumask_set>:
    75f0:	mov    eax,0x1
    75f5:	mov    ecx,esi
    75f7:	shl    rax,cl
    75fa:	or     DWORD PTR [rdi],eax
    75fc:	ret    
    75fd:	nop    DWORD PTR [rax]

0000000000007600 <cpumask_isset>:
    7600:	mov    eax,DWORD PTR [rdi]
    7602:	mov    ecx,esi
    7604:	shr    rax,cl
    7607:	and    eax,0x1
    760a:	ret    
    760b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007610 <cpumask_union>:
    7610:	mov    eax,DWORD PTR [rsi]
    7612:	or     DWORD PTR [rdi],eax
    7614:	ret    
    7615:	nop
    7616:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007620 <cycles_to_time>:
    7620:	sub    rdi,QWORD PTR [rip+0x225b99]        # 22d1c0 <P+0x20>
    7627:	xor    edx,edx
    7629:	movabs rcx,0x44b82fa09b5a53
    7633:	shl    rdi,0xa
    7637:	mov    rax,rdi
    763a:	div    QWORD PTR [rip+0x221a67]        # 2290a8 <opt+0x8>
    7641:	mov    rdx,rax
    7644:	mov    rdi,rax
    7647:	mov    QWORD PTR [rsi],rax
    764a:	shr    rdx,0x9
    764e:	mov    rax,rdx
    7651:	mul    rcx
    7654:	shr    rdx,0xb
    7658:	mov    DWORD PTR [rsi+0x8],edx
    765b:	imul   edx,edx,0x3b9aca00
    7661:	sub    edi,edx
    7663:	mov    DWORD PTR [rsi+0xc],edi
    7666:	ret    
    7667:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007670 <abs_cycles_to_time>:
    7670:	mov    rax,QWORD PTR [rip+0x225b49]        # 22d1c0 <P+0x20>
    7677:	cmp    rax,rdi
    767a:	jb     7690 <abs_cycles_to_time+0x20>
    767c:	mov    QWORD PTR [rsi],0x0
    7683:	mov    QWORD PTR [rsi+0x8],0x0
    768b:	ret    
    768c:	nop    DWORD PTR [rax+0x0]
    7690:	sub    rdi,rax
    7693:	xor    edx,edx
    7695:	movabs rcx,0x44b82fa09b5a53
    769f:	shl    rdi,0xa
    76a3:	mov    rax,rdi
    76a6:	div    QWORD PTR [rip+0x2219fb]        # 2290a8 <opt+0x8>
    76ad:	mov    rdx,rax
    76b0:	mov    rdi,rax
    76b3:	mov    QWORD PTR [rsi],rax
    76b6:	shr    rdx,0x9
    76ba:	mov    rax,rdx
    76bd:	mul    rcx
    76c0:	shr    rdx,0xb
    76c4:	mov    DWORD PTR [rsi+0x8],edx
    76c7:	imul   edx,edx,0x3b9aca00
    76cd:	sub    edi,edx
    76cf:	mov    DWORD PTR [rsi+0xc],edi
    76d2:	ret    
    76d3:	nop    DWORD PTR [rax]
    76d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000076e0 <abs_cycles_to_global>:
    76e0:	mov    rdx,QWORD PTR [rip+0x225ad9]        # 22d1c0 <P+0x20>
    76e7:	mov    rax,rdi
    76ea:	sub    rax,rdx
    76ed:	cmp    rdx,rdi
    76f0:	mov    edx,0x0
    76f5:	cmovae rax,rdx
    76f9:	ret    
    76fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007700 <scatterplot_vs_time>:
    7700:	mov    rax,QWORD PTR [rip+0x225ab9]        # 22d1c0 <P+0x20>
    7707:	mov    r8,rsi
    770a:	cmp    rdi,rax
    770d:	jbe    7760 <scatterplot_vs_time+0x60>
    770f:	sub    rdi,rax
    7712:	xor    edx,edx
    7714:	mov    rcx,rdi
    7717:	shl    rcx,0xa
    771b:	mov    rax,rcx
    771e:	div    QWORD PTR [rip+0x221983]        # 2290a8 <opt+0x8>
    7725:	movabs rdx,0x44b82fa09b5a53
    772f:	mov    rcx,rax
    7732:	shr    rax,0x9
    7736:	mul    rdx
    7739:	mov    rax,rdx
    773c:	shr    rax,0xb
    7740:	mov    edx,eax
    7742:	imul   eax,eax,0x3b9aca00
    7748:	sub    ecx,eax
    774a:	lea    rsi,[rip+0x15d5e]        # 1d4af <_IO_stdin_used+0x4ef>
    7751:	mov    edi,0x1
    7756:	xor    eax,eax
    7758:	jmp    44f0 <__printf_chk@plt>
    775d:	nop    DWORD PTR [rax]
    7760:	xor    ecx,ecx
    7762:	xor    edx,edx
    7764:	jmp    774a <scatterplot_vs_time+0x4a>
    7766:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007770 <percentile>:
    7770:	test   esi,esi
    7772:	je     7780 <percentile+0x10>
    7774:	jmp    4b30 <percentile.part.6>
    7779:	nop    DWORD PTR [rax+0x0]
    7780:	xor    eax,eax
    7782:	ret    
    7783:	nop    DWORD PTR [rax]
    7786:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007790 <weighted_percentile>:
    7790:	push   r15
    7792:	push   r14
    7794:	push   r13
    7796:	push   r12
    7798:	push   rbp
    7799:	push   rbx
    779a:	sub    rsp,0x38
    779e:	test   edx,edx
    77a0:	jle    797d <weighted_percentile+0x1ed>
    77a6:	mov    r8,QWORD PTR [rsi]
    77a9:	test   r8,r8
    77ac:	je     7992 <weighted_percentile+0x202>
    77b2:	lea    rax,[rsi+0x8]
    77b6:	sub    edx,0x1
    77b9:	xor    r9d,r9d
    77bc:	mov    r10,rdx
    77bf:	lea    rdx,[rax+rdx*8]
    77c3:	jmp    77d9 <weighted_percentile+0x49>
    77c5:	nop    DWORD PTR [rax]
    77c8:	add    rax,0x8
    77cc:	mov    r8,QWORD PTR [rax-0x8]
    77d0:	test   r8,r8
    77d3:	je     7992 <weighted_percentile+0x202>
    77d9:	add    r9,r8
    77dc:	cmp    rdx,rax
    77df:	jne    77c8 <weighted_percentile+0x38>
    77e1:	movsxd rdx,ecx
    77e4:	movabs rcx,0x28f5c28f5c28f5c3
    77ee:	imul   rdx,r9
    77f2:	shr    rdx,0x2
    77f6:	mov    rax,rdx
    77f9:	mul    rcx
    77fc:	shr    rdx,0x2
    7800:	mov    QWORD PTR [rsp+0x18],rdx
    7805:	movsxd rdx,r10d
    7808:	sub    r9,QWORD PTR [rsi+rdx*8]
    780c:	test   edx,edx
    780e:	mov    r15,rdx
    7811:	mov    QWORD PTR [rsp+0x10],r9
    7816:	jle    796a <weighted_percentile+0x1da>
    781c:	mov    QWORD PTR [rsp+0x28],0x0
    7825:	xor    r13d,r13d
    7828:	mov    QWORD PTR [rsp+0x20],0x0
    7831:	nop    DWORD PTR [rax+0x0]
    7838:	lea    eax,[r15+r13*1]
    783c:	mov    r8,QWORD PTR [rsp+0x10]
    7841:	mov    rbx,QWORD PTR [rsp+0x28]
    7846:	movss  xmm0,DWORD PTR [rdi+rdx*4]
    784b:	mov    ecx,r15d
    784e:	sar    eax,1
    7850:	xor    r9d,r9d
    7853:	movsxd rdx,r15d
    7856:	cdqe   
    7858:	movss  xmm1,DWORD PTR [rdi+rax*4]
    785d:	mov    rax,QWORD PTR [rsp+0x20]
    7862:	lea    r12,[rdi+rax*4]
    7866:	lea    rbp,[rsi+rax*8]
    786a:	lea    eax,[r13+0x1]
    786e:	mov    DWORD PTR [rsp+0xc],eax
    7872:	nop    WORD PTR [rax+rax*1+0x0]
    7878:	movss  xmm2,DWORD PTR [r12+r9*4]
    787e:	mov    r14d,r9d
    7881:	lea    r11d,[r13+r9*1+0x0]
    7886:	ucomiss xmm1,xmm2
    7889:	ja     7900 <weighted_percentile+0x170>
    788b:	ucomiss xmm0,xmm1
    788e:	lea    rax,[rdi+rdx*4-0x4]
    7893:	jbe    7958 <weighted_percentile+0x1c8>
    7899:	nop    DWORD PTR [rax+0x0]
    78a0:	mov    r10,rax
    78a3:	sub    rax,0x4
    78a7:	sub    r8,QWORD PTR [rsi+rdx*8]
    78ab:	movss  xmm0,DWORD PTR [rax+0x4]
    78b0:	sub    ecx,0x1
    78b3:	sub    rdx,0x1
    78b7:	ucomiss xmm0,xmm1
    78ba:	ja     78a0 <weighted_percentile+0x110>
    78bc:	cmp    r11d,ecx
    78bf:	jle    7910 <weighted_percentile+0x180>
    78c1:	cmp    r8,QWORD PTR [rsp+0x18]
    78c6:	jae    78d8 <weighted_percentile+0x148>
    78c8:	movsxd rax,r11d
    78cb:	mov    QWORD PTR [rsp+0x28],rbx
    78d0:	mov    r13,rax
    78d3:	mov    QWORD PTR [rsp+0x20],rax
    78d8:	mov    rax,QWORD PTR [rsp+0x18]
    78dd:	cmp    rbx,rax
    78e0:	cmovbe r8,QWORD PTR [rsp+0x10]
    78e6:	cmova  r15d,ecx
    78ea:	cmp    r15d,r13d
    78ed:	mov    QWORD PTR [rsp+0x10],r8
    78f2:	jle    7961 <weighted_percentile+0x1d1>
    78f4:	movsxd rdx,r15d
    78f7:	jmp    7838 <weighted_percentile+0xa8>
    78fc:	nop    DWORD PTR [rax+0x0]
    7900:	add    rbx,QWORD PTR [rbp+r9*8+0x0]
    7905:	add    r9,0x1
    7909:	jmp    7878 <weighted_percentile+0xe8>
    790e:	xchg   ax,ax
    7910:	lea    rdx,[rsi+rdx*8]
    7914:	movss  DWORD PTR [r12+r9*4],xmm0
    791a:	sub    ecx,0x1
    791d:	movss  DWORD PTR [r10],xmm2
    7922:	mov    rax,QWORD PTR [rbp+r9*8+0x0]
    7927:	mov    r10,QWORD PTR [rdx]
    792a:	sub    r8,rax
    792d:	mov    QWORD PTR [rbp+r9*8+0x0],r10
    7932:	mov    QWORD PTR [rdx],rax
    7935:	mov    edx,DWORD PTR [rsp+0xc]
    7939:	add    rbx,QWORD PTR [rbp+r9*8+0x0]
    793e:	lea    r11d,[rdx+r14*1]
    7942:	cmp    ecx,r11d
    7945:	jl     78c1 <weighted_percentile+0x131>
    794b:	movsxd rdx,ecx
    794e:	movss  xmm0,DWORD PTR [rdi+rdx*4]
    7953:	jmp    7905 <weighted_percentile+0x175>
    7955:	nop    DWORD PTR [rax]
    7958:	lea    r10,[rdi+rdx*4]
    795c:	jmp    78bc <weighted_percentile+0x12c>
    7961:	mov    rax,QWORD PTR [rsp+0x20]
    7966:	lea    rdi,[rdi+rax*4]
    796a:	movss  xmm0,DWORD PTR [rdi]
    796e:	add    rsp,0x38
    7972:	pop    rbx
    7973:	pop    rbp
    7974:	pop    r12
    7976:	pop    r13
    7978:	pop    r14
    797a:	pop    r15
    797c:	ret    
    797d:	mov    QWORD PTR [rsp+0x18],0x0
    7986:	xor    r9d,r9d
    7989:	lea    r10d,[rdx-0x1]
    798d:	jmp    7805 <weighted_percentile+0x75>
    7992:	lea    rcx,[rip+0x1bef7]        # 23890 <__PRETTY_FUNCTION__.5713>
    7999:	lea    rsi,[rip+0x156e8]        # 1d088 <_IO_stdin_used+0xc8>
    79a0:	lea    rdi,[rip+0x157cc]        # 1d173 <_IO_stdin_used+0x1b3>
    79a7:	mov    edx,0x7fa
    79ac:	call   4400 <__assert_fail@plt>
    79b1:	nop    DWORD PTR [rax+rax*1+0x0]
    79b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000079c0 <self_weighted_percentile>:
    79c0:	push   r15
    79c2:	push   r14
    79c4:	push   r13
    79c6:	push   r12
    79c8:	push   rbp
    79c9:	push   rbx
    79ca:	mov    rbx,rdi
    79cd:	sub    rsp,0x28
    79d1:	test   esi,esi
    79d3:	mov    DWORD PTR [rsp+0x8],edx
    79d7:	jle    7b9c <self_weighted_percentile+0x1dc>
    79dd:	lea    eax,[rsi-0x1]
    79e0:	mov    r15,rdi
    79e3:	xor    r14d,r14d
    79e6:	lea    r12,[rip+0x1be83]        # 23870 <__func__.5746>
    79ed:	mov    r13,rax
    79f0:	lea    rbp,[rdi+rax*8+0x8]
    79f5:	jmp    7a15 <self_weighted_percentile+0x55>
    79f7:	nop    WORD PTR [rax+rax*1+0x0]
    7a00:	test   r8,r8
    7a03:	je     7bb1 <self_weighted_percentile+0x1f1>
    7a09:	add    r15,0x8
    7a0d:	add    r14,r8
    7a10:	cmp    rbp,r15
    7a13:	je     7a3f <self_weighted_percentile+0x7f>
    7a15:	mov    r8,QWORD PTR [r15]
    7a18:	test   r8,r8
    7a1b:	jns    7a00 <self_weighted_percentile+0x40>
    7a1d:	mov    rdi,QWORD PTR [rip+0x25d834]        # 265258 <warn>
    7a24:	lea    rdx,[rip+0x17eed]        # 1f918 <_IO_stdin_used+0x2958>
    7a2b:	mov    rcx,r12
    7a2e:	mov    esi,0x1
    7a33:	xor    eax,eax
    7a35:	call   4560 <__fprintf_chk@plt>
    7a3a:	mov    r8,QWORD PTR [r15]
    7a3d:	jmp    7a00 <self_weighted_percentile+0x40>
    7a3f:	movsxd rbp,DWORD PTR [rsp+0x8]
    7a44:	movabs rdx,0xa3d70a3d70a3d70b
    7a4e:	imul   rbp,r14
    7a52:	mov    rax,rbp
    7a55:	imul   rdx
    7a58:	add    rdx,rbp
    7a5b:	sar    rbp,0x3f
    7a5f:	sar    rdx,0x6
    7a63:	sub    rdx,rbp
    7a66:	mov    QWORD PTR [rsp+0x8],rdx
    7a6b:	movsxd rax,r13d
    7a6e:	mov    rdx,QWORD PTR [rbx+rax*8]
    7a72:	sub    r14,rdx
    7a75:	test   r13d,r13d
    7a78:	jle    7b8a <self_weighted_percentile+0x1ca>
    7a7e:	mov    QWORD PTR [rsp+0x18],0x0
    7a87:	xor    r15d,r15d
    7a8a:	mov    QWORD PTR [rsp+0x10],0x0
    7a93:	nop    DWORD PTR [rax+rax*1+0x0]
    7a98:	lea    eax,[r15+r13*1]
    7a9c:	mov    rbp,QWORD PTR [rsp+0x18]
    7aa1:	mov    edi,r15d
    7aa4:	mov    rsi,r14
    7aa7:	mov    ecx,r13d
    7aaa:	sar    eax,1
    7aac:	cdqe   
    7aae:	mov    r8,QWORD PTR [rbx+rax*8]
    7ab2:	mov    rax,QWORD PTR [rsp+0x10]
    7ab7:	lea    r10,[rbx+rax*8]
    7abb:	movsxd rax,r13d
    7abe:	xchg   ax,ax
    7ac0:	mov    r11,QWORD PTR [r10]
    7ac3:	mov    r12d,edi
    7ac6:	cmp    r11,r8
    7ac9:	jl     7b38 <self_weighted_percentile+0x178>
    7acb:	cmp    r8,rdx
    7ace:	jge    7b78 <self_weighted_percentile+0x1b8>
    7ad4:	lea    rax,[rbx+rax*8-0x8]
    7ad9:	nop    DWORD PTR [rax+0x0]
    7ae0:	mov    r9,rax
    7ae3:	sub    rax,0x8
    7ae7:	sub    rsi,rdx
    7aea:	mov    rdx,QWORD PTR [rax+0x8]
    7aee:	sub    ecx,0x1
    7af1:	cmp    rdx,r8
    7af4:	jg     7ae0 <self_weighted_percentile+0x120>
    7af6:	cmp    edi,ecx
    7af8:	jle    7b50 <self_weighted_percentile+0x190>
    7afa:	cmp    rsi,QWORD PTR [rsp+0x8]
    7aff:	jge    7b11 <self_weighted_percentile+0x151>
    7b01:	movsxd rax,r12d
    7b04:	mov    QWORD PTR [rsp+0x18],rbp
    7b09:	mov    r15,rax
    7b0c:	mov    QWORD PTR [rsp+0x10],rax
    7b11:	mov    rax,QWORD PTR [rsp+0x8]
    7b16:	cmp    rbp,rax
    7b19:	cmovg  r13d,ecx
    7b1d:	cmovg  r14,rsi
    7b21:	cmp    r13d,r15d
    7b24:	jle    7b81 <self_weighted_percentile+0x1c1>
    7b26:	movsxd rax,r13d
    7b29:	mov    rdx,QWORD PTR [rbx+rax*8]
    7b2d:	jmp    7a98 <self_weighted_percentile+0xd8>
    7b32:	nop    WORD PTR [rax+rax*1+0x0]
    7b38:	add    rbp,r11
    7b3b:	add    edi,0x1
    7b3e:	add    r10,0x8
    7b42:	jmp    7ac0 <self_weighted_percentile+0x100>
    7b47:	nop    WORD PTR [rax+rax*1+0x0]
    7b50:	add    edi,0x1
    7b53:	sub    ecx,0x1
    7b56:	mov    QWORD PTR [r10],rdx
    7b59:	sub    rsi,r11
    7b5c:	mov    QWORD PTR [r9],r11
    7b5f:	add    rbp,QWORD PTR [r10]
    7b62:	cmp    ecx,edi
    7b64:	mov    r12d,edi
    7b67:	jl     7afa <self_weighted_percentile+0x13a>
    7b69:	movsxd rax,ecx
    7b6c:	mov    rdx,QWORD PTR [rbx+rax*8]
    7b70:	jmp    7b3e <self_weighted_percentile+0x17e>
    7b72:	nop    WORD PTR [rax+rax*1+0x0]
    7b78:	lea    r9,[rbx+rax*8]
    7b7c:	jmp    7af6 <self_weighted_percentile+0x136>
    7b81:	mov    rax,QWORD PTR [rsp+0x10]
    7b86:	lea    rbx,[rbx+rax*8]
    7b8a:	mov    rax,QWORD PTR [rbx]
    7b8d:	add    rsp,0x28
    7b91:	pop    rbx
    7b92:	pop    rbp
    7b93:	pop    r12
    7b95:	pop    r13
    7b97:	pop    r14
    7b99:	pop    r15
    7b9b:	ret    
    7b9c:	mov    QWORD PTR [rsp+0x8],0x0
    7ba5:	xor    r14d,r14d
    7ba8:	lea    r13d,[rsi-0x1]
    7bac:	jmp    7a6b <self_weighted_percentile+0xab>
    7bb1:	lea    rcx,[rip+0x1bc98]        # 23850 <__PRETTY_FUNCTION__.5747>
    7bb8:	lea    rsi,[rip+0x154c9]        # 1d088 <_IO_stdin_used+0xc8>
    7bbf:	lea    rdi,[rip+0x155b5]        # 1d17b <_IO_stdin_used+0x1bb>
    7bc6:	mov    edx,0x851
    7bcb:	call   4400 <__assert_fail@plt>

0000000000007bd0 <hvm_summary.part.19>:
    7bd0:	push   r15
    7bd2:	push   r14
    7bd4:	push   r13
    7bd6:	push   r12
    7bd8:	mov    r13,rdi
    7bdb:	push   rbp
    7bdc:	push   rbx
    7bdd:	lea    rdi,[rip+0x1559f]        # 1d183 <_IO_stdin_used+0x1c3>
    7be4:	sub    rsp,0x98
    7beb:	mov    rax,QWORD PTR fs:0x28
    7bf4:	mov    QWORD PTR [rsp+0x88],rax
    7bfc:	xor    eax,eax
    7bfe:	call   4380 <puts@plt>
    7c03:	mov    r15d,DWORD PTR [r13+0x20]
    7c07:	test   r15d,r15d
    7c0a:	jle    7d57 <hvm_summary.part.19+0x187>
    7c10:	lea    r12,[r13+0x2030]
    7c17:	xor    ebp,ebp
    7c19:	nop    DWORD PTR [rax+0x0]
    7c20:	mov    rax,QWORD PTR [r13+0x18]
    7c24:	mov    r9d,ebp
    7c27:	lea    r8,[rbp*8+0x0]
    7c2f:	mov    ecx,DWORD PTR [r12]
    7c33:	mov    rdx,QWORD PTR [rax+rbp*8]
    7c37:	test   rdx,rdx
    7c3a:	je     7f60 <hvm_summary.part.19+0x390>
    7c40:	test   ecx,ecx
    7c42:	je     7d25 <hvm_summary.part.19+0x155>
    7c48:	mov    r14d,DWORD PTR [rip+0x221489]        # 2290d8 <opt+0x38>
    7c4f:	test   r14d,r14d
    7c52:	je     818e <hvm_summary.part.19+0x5be>
    7c58:	mov    edx,DWORD PTR [r12+0x4]
    7c5d:	cmp    DWORD PTR [r12+0x8],edx
    7c62:	cmovle edx,DWORD PTR [r12+0x8]
    7c68:	test   edx,edx
    7c6a:	mov    r14d,edx
    7c6d:	jne    8257 <hvm_summary.part.19+0x687>
    7c73:	xor    r14d,r14d
    7c76:	xor    ebx,ebx
    7c78:	xor    r15d,r15d
    7c7b:	mov    rdx,QWORD PTR [rax+r8*1]
    7c7f:	lea    rsi,[rip+0x1550b]        # 1d191 <_IO_stdin_used+0x1d1>
    7c86:	xor    eax,eax
    7c88:	mov    edi,0x1
    7c8d:	call   44f0 <__printf_chk@plt>
    7c92:	mov    eax,DWORD PTR [r12+0x4]
    7c97:	mov    rsi,QWORD PTR [r12+0x10]
    7c9c:	test   eax,eax
    7c9e:	je     7fc1 <hvm_summary.part.19+0x3f1>
    7ca4:	movsxd rcx,eax
    7ca7:	xor    edx,edx
    7ca9:	mov    rax,rsi
    7cac:	div    rcx
    7caf:	mov    rcx,rax
    7cb2:	lea    rdx,[rsi+rsi*4]
    7cb6:	pxor   xmm1,xmm1
    7cba:	pxor   xmm0,xmm0
    7cbe:	lea    rdx,[rdx+rdx*4]
    7cc2:	shl    rdx,0x2
    7cc6:	test   rsi,rsi
    7cc9:	cvtsi2sd xmm0,QWORD PTR [rip+0x2254fe]        # 22d1d0 <P+0x30>
    7cd2:	cvtsi2sd xmm1,rdx
    7cd7:	divsd  xmm1,xmm0
    7cdb:	js     8170 <hvm_summary.part.19+0x5a0>
    7ce1:	pxor   xmm0,xmm0
    7ce5:	cvtsi2sd xmm0,rsi
    7cea:	pxor   xmm2,xmm2
    7cee:	sub    rsp,0x8
    7cf2:	lea    rsi,[rip+0x17adf]        # 1f7d8 <_IO_stdin_used+0x2818>
    7cf9:	push   r14
    7cfb:	mov    edx,DWORD PTR [r12]
    7cff:	mov    r9,r15
    7d02:	mov    r8,rbx
    7d05:	mov    edi,0x1
    7d0a:	mov    eax,0x2
    7d0f:	cvtsi2sd xmm2,QWORD PTR [rip+0x221398]        # 2290b0 <opt+0x10>
    7d18:	divsd  xmm0,xmm2
    7d1c:	call   44f0 <__printf_chk@plt>
    7d21:	pop    r10
    7d23:	pop    r11
    7d25:	mov    rbx,QWORD PTR [r13+rbp*8+0x28]
    7d2a:	test   rbx,rbx
    7d2d:	je     7d42 <hvm_summary.part.19+0x172>
    7d2f:	nop
    7d30:	mov    rsi,QWORD PTR [rbx+0x8]
    7d34:	mov    rdi,r13
    7d37:	call   QWORD PTR [rbx]
    7d39:	mov    rbx,QWORD PTR [rbx+0x10]
    7d3d:	test   rbx,rbx
    7d40:	jne    7d30 <hvm_summary.part.19+0x160>
    7d42:	lea    eax,[rbp+0x1]
    7d45:	add    r12,0x38
    7d49:	add    rbp,0x1
    7d4d:	cmp    DWORD PTR [r13+0x20],eax
    7d51:	jg     7c20 <hvm_summary.part.19+0x50>
    7d57:	lea    rdi,[rip+0x15442]        # 1d1a0 <_IO_stdin_used+0x1e0>
    7d5e:	lea    r15,[r13+0x12af8]
    7d65:	xor    ebx,ebx
    7d67:	lea    r14,[rsp+0x30]
    7d6c:	call   4380 <puts@plt>
    7d71:	mov    QWORD PTR [rsp+0x28],r13
    7d76:	mov    r13,r15
    7d79:	jmp    7d96 <hvm_summary.part.19+0x1c6>
    7d7b:	nop    DWORD PTR [rax+rax*1+0x0]
    7d80:	add    ebx,0x1
    7d83:	add    r13,0xf8
    7d8a:	cmp    ebx,0x15e
    7d90:	je     7fd0 <hvm_summary.part.19+0x400>
    7d96:	mov    ecx,DWORD PTR [r13+0x0]
    7d9a:	test   ecx,ecx
    7d9c:	je     7d80 <hvm_summary.part.19+0x1b0>
    7d9e:	lea    rsi,[rip+0x15413]        # 1d1b8 <_IO_stdin_used+0x1f8>
    7da5:	mov    edx,ebx
    7da7:	mov    edi,0x1
    7dac:	xor    eax,eax
    7dae:	lea    r12,[rip+0x221a8b]        # 229840 <guest_interrupt_case_name>
    7db5:	lea    r15,[r13+0x44]
    7db9:	call   44f0 <__printf_chk@plt>
    7dbe:	lea    rax,[r13+0xec]
    7dc5:	mov    DWORD PTR [rsp+0x24],ebx
    7dc9:	mov    QWORD PTR [rsp+0x8],rax
    7dce:	mov    r9,QWORD PTR [r12+0x8]
    7dd3:	lea    r8,[rip+0x153ea]        # 1d1c4 <_IO_stdin_used+0x204>
    7dda:	mov    ecx,0x50
    7ddf:	xor    eax,eax
    7de1:	mov    edx,0x1
    7de6:	mov    esi,0x50
    7deb:	mov    rdi,r14
    7dee:	call   4320 <__snprintf_chk@plt>
    7df3:	mov    ecx,DWORD PTR [r15]
    7df6:	test   ecx,ecx
    7df8:	je     7eba <hvm_summary.part.19+0x2ea>
    7dfe:	mov    rsi,QWORD PTR [r15+0xc]
    7e02:	xor    edx,edx
    7e04:	movsxd rdi,ecx
    7e07:	mov    r9d,DWORD PTR [rip+0x2212ca]        # 2290d8 <opt+0x38>
    7e0e:	mov    rax,rsi
    7e11:	div    rdi
    7e14:	test   r9d,r9d
    7e17:	mov    r8,rax
    7e1a:	je     7ee0 <hvm_summary.part.19+0x310>
    7e20:	cmp    DWORD PTR [r15+0x4],ecx
    7e24:	mov    rdi,QWORD PTR [r15+0x14]
    7e28:	mov    edx,0x32
    7e2d:	cmovle ecx,DWORD PTR [r15+0x4]
    7e32:	mov    QWORD PTR [rsp+0x18],rax
    7e37:	mov    esi,ecx
    7e39:	mov    ebp,ecx
    7e3b:	call   79c0 <self_weighted_percentile>
    7e40:	mov    rdi,QWORD PTR [r15+0x14]
    7e44:	mov    edx,0x5
    7e49:	mov    esi,ebp
    7e4b:	mov    rbx,rax
    7e4e:	call   79c0 <self_weighted_percentile>
    7e53:	mov    rdi,QWORD PTR [r15+0x14]
    7e57:	mov    edx,0x5f
    7e5c:	mov    esi,ebp
    7e5e:	mov    QWORD PTR [rsp+0x10],rax
    7e63:	call   79c0 <self_weighted_percentile>
    7e68:	mov    rdx,QWORD PTR [r15+0xc]
    7e6c:	mov    r9,QWORD PTR [rsp+0x10]
    7e71:	mov    r8,QWORD PTR [rsp+0x18]
    7e76:	test   rdx,rdx
    7e79:	js     7f20 <hvm_summary.part.19+0x350>
    7e7f:	pxor   xmm0,xmm0
    7e83:	cvtsi2sd xmm0,rdx
    7e88:	pxor   xmm1,xmm1
    7e8c:	push   rax
    7e8d:	push   rbx
    7e8e:	mov    ecx,DWORD PTR [r15]
    7e91:	lea    rsi,[rip+0x17aa0]        # 1f938 <_IO_stdin_used+0x2978>
    7e98:	mov    edi,0x1
    7e9d:	mov    rdx,r14
    7ea0:	mov    eax,0x1
    7ea5:	cvtsi2sd xmm1,QWORD PTR [rip+0x221202]        # 2290b0 <opt+0x10>
    7eae:	divsd  xmm0,xmm1
    7eb2:	call   44f0 <__printf_chk@plt>
    7eb7:	pop    rdi
    7eb8:	pop    r8
    7eba:	add    r12,0x8
    7ebe:	add    r15,0x38
    7ec2:	cmp    QWORD PTR [rsp+0x8],r15
    7ec7:	jne    7dce <hvm_summary.part.19+0x1fe>
    7ecd:	mov    ebx,DWORD PTR [rsp+0x24]
    7ed1:	jmp    7d80 <hvm_summary.part.19+0x1b0>
    7ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7ee0:	test   rsi,rsi
    7ee3:	js     7f40 <hvm_summary.part.19+0x370>
    7ee5:	pxor   xmm0,xmm0
    7ee9:	cvtsi2sd xmm0,rsi
    7eee:	pxor   xmm1,xmm1
    7ef2:	lea    rsi,[rip+0x152d3]        # 1d1cc <_IO_stdin_used+0x20c>
    7ef9:	mov    rdx,r14
    7efc:	mov    edi,0x1
    7f01:	mov    eax,0x1
    7f06:	cvtsi2sd xmm1,QWORD PTR [rip+0x2211a1]        # 2290b0 <opt+0x10>
    7f0f:	divsd  xmm0,xmm1
    7f13:	call   44f0 <__printf_chk@plt>
    7f18:	jmp    7eba <hvm_summary.part.19+0x2ea>
    7f1a:	nop    WORD PTR [rax+rax*1+0x0]
    7f20:	mov    rsi,rdx
    7f23:	pxor   xmm0,xmm0
    7f27:	shr    rsi,1
    7f2a:	and    edx,0x1
    7f2d:	or     rsi,rdx
    7f30:	cvtsi2sd xmm0,rsi
    7f35:	addsd  xmm0,xmm0
    7f39:	jmp    7e88 <hvm_summary.part.19+0x2b8>
    7f3e:	xchg   ax,ax
    7f40:	mov    rax,rsi
    7f43:	pxor   xmm0,xmm0
    7f47:	shr    rax,1
    7f4a:	and    esi,0x1
    7f4d:	or     rax,rsi
    7f50:	cvtsi2sd xmm0,rax
    7f55:	addsd  xmm0,xmm0
    7f59:	jmp    7eee <hvm_summary.part.19+0x31e>
    7f5b:	nop    DWORD PTR [rax+rax*1+0x0]
    7f60:	test   ecx,ecx
    7f62:	je     7d25 <hvm_summary.part.19+0x155>
    7f68:	mov    ebx,DWORD PTR [rip+0x22116a]        # 2290d8 <opt+0x38>
    7f6e:	test   ebx,ebx
    7f70:	je     821d <hvm_summary.part.19+0x64d>
    7f76:	mov    eax,DWORD PTR [r12+0x4]
    7f7b:	cmp    DWORD PTR [r12+0x8],eax
    7f80:	cmovle eax,DWORD PTR [r12+0x8]
    7f86:	test   eax,eax
    7f88:	mov    r14d,eax
    7f8b:	jne    836b <hvm_summary.part.19+0x79b>
    7f91:	xor    r14d,r14d
    7f94:	xor    ebx,ebx
    7f96:	xor    r15d,r15d
    7f99:	lea    rsi,[rip+0x151f9]        # 1d199 <_IO_stdin_used+0x1d9>
    7fa0:	xor    eax,eax
    7fa2:	mov    edx,r9d
    7fa5:	mov    edi,0x1
    7faa:	call   44f0 <__printf_chk@plt>
    7faf:	mov    eax,DWORD PTR [r12+0x4]
    7fb4:	mov    rsi,QWORD PTR [r12+0x10]
    7fb9:	test   eax,eax
    7fbb:	jne    7ca4 <hvm_summary.part.19+0xd4>
    7fc1:	xor    ecx,ecx
    7fc3:	jmp    7cb2 <hvm_summary.part.19+0xe2>
    7fc8:	nop    DWORD PTR [rax+rax*1+0x0]
    7fd0:	mov    r13,QWORD PTR [rsp+0x28]
    7fd5:	mov    ecx,DWORD PTR [r13+0x27e08]
    7fdc:	test   ecx,ecx
    7fde:	jne    834e <hvm_summary.part.19+0x77e>
    7fe4:	test   BYTE PTR [rip+0x2210b6],0x10        # 2290a1 <opt+0x1>
    7feb:	jne    82c7 <hvm_summary.part.19+0x6f7>
    7ff1:	mov    esi,DWORD PTR [r13+0x27f00]
    7ff8:	test   esi,esi
    7ffa:	je     80cc <hvm_summary.part.19+0x4fc>
    8000:	mov    ecx,DWORD PTR [rip+0x2210d2]        # 2290d8 <opt+0x38>
    8006:	test   ecx,ecx
    8008:	je     83ca <hvm_summary.part.19+0x7fa>
    800e:	mov    r12d,DWORD PTR [r13+0x27f04]
    8015:	cmp    DWORD PTR [r13+0x27f08],r12d
    801c:	cmovle r12d,DWORD PTR [r13+0x27f08]
    8024:	test   r12d,r12d
    8027:	jne    8477 <hvm_summary.part.19+0x8a7>
    802d:	xor    r12d,r12d
    8030:	xor    ebx,ebx
    8032:	xor    ebp,ebp
    8034:	lea    rdi,[rip+0x151de]        # 1d219 <_IO_stdin_used+0x259>
    803b:	call   4380 <puts@plt>
    8040:	mov    eax,DWORD PTR [r13+0x27f04]
    8047:	xor    ecx,ecx
    8049:	mov    rsi,QWORD PTR [r13+0x27f10]
    8050:	test   eax,eax
    8052:	jne    83b7 <hvm_summary.part.19+0x7e7>
    8058:	lea    rdx,[rsi+rsi*4]
    805c:	pxor   xmm1,xmm1
    8060:	pxor   xmm0,xmm0
    8064:	lea    rdx,[rdx+rdx*4]
    8068:	shl    rdx,0x2
    806c:	test   rsi,rsi
    806f:	cvtsi2sd xmm0,QWORD PTR [rip+0x225158]        # 22d1d0 <P+0x30>
    8078:	cvtsi2sd xmm1,rdx
    807d:	divsd  xmm1,xmm0
    8081:	js     8459 <hvm_summary.part.19+0x889>
    8087:	pxor   xmm0,xmm0
    808b:	cvtsi2sd xmm0,rsi
    8090:	pxor   xmm2,xmm2
    8094:	sub    rsp,0x8
    8098:	mov    edx,DWORD PTR [r13+0x27f00]
    809f:	lea    rsi,[rip+0x17732]        # 1f7d8 <_IO_stdin_used+0x2818>
    80a6:	push   r12
    80a8:	mov    r9,rbp
    80ab:	mov    r8,rbx
    80ae:	mov    edi,0x1
    80b3:	mov    eax,0x2
    80b8:	cvtsi2sd xmm2,QWORD PTR [rip+0x220fef]        # 2290b0 <opt+0x10>
    80c1:	divsd  xmm0,xmm2
    80c5:	call   44f0 <__printf_chk@plt>
    80ca:	pop    rax
    80cb:	pop    rdx
    80cc:	xor    ebx,ebx
    80ce:	lea    rbp,[rip+0x15151]        # 1d226 <_IO_stdin_used+0x266>
    80d5:	jmp    80ed <hvm_summary.part.19+0x51d>
    80d7:	nop    WORD PTR [rax+rax*1+0x0]
    80e0:	add    rbx,0x1
    80e4:	cmp    rbx,0x100
    80eb:	je     8117 <hvm_summary.part.19+0x547>
    80ed:	mov    ecx,DWORD PTR [r13+rbx*4+0x27f38]
    80f5:	test   ecx,ecx
    80f7:	je     80e0 <hvm_summary.part.19+0x510>
    80f9:	mov    edx,ebx
    80fb:	xor    eax,eax
    80fd:	mov    rsi,rbp
    8100:	mov    edi,0x1
    8105:	add    rbx,0x1
    8109:	call   44f0 <__printf_chk@plt>
    810e:	cmp    rbx,0x100
    8115:	jne    80ed <hvm_summary.part.19+0x51d>
    8117:	mov    rdi,QWORD PTR [r13+0x28340]
    811e:	test   rdi,rdi
    8121:	je     812f <hvm_summary.part.19+0x55f>
    8123:	lea    rsi,[rip+0x1510e]        # 1d238 <_IO_stdin_used+0x278>
    812a:	call   6850 <hvm_io_address_summary.part.14>
    812f:	mov    rdi,QWORD PTR [r13+0x28338]
    8136:	test   rdi,rdi
    8139:	je     8147 <hvm_summary.part.19+0x577>
    813b:	lea    rsi,[rip+0x150f4]        # 1d236 <_IO_stdin_used+0x276>
    8142:	call   6850 <hvm_io_address_summary.part.14>
    8147:	mov    rax,QWORD PTR [rsp+0x88]
    814f:	xor    rax,QWORD PTR fs:0x28
    8158:	jne    84ef <hvm_summary.part.19+0x91f>
    815e:	add    rsp,0x98
    8165:	pop    rbx
    8166:	pop    rbp
    8167:	pop    r12
    8169:	pop    r13
    816b:	pop    r14
    816d:	pop    r15
    816f:	ret    
    8170:	mov    rax,rsi
    8173:	pxor   xmm0,xmm0
    8177:	shr    rax,1
    817a:	and    esi,0x1
    817d:	or     rax,rsi
    8180:	cvtsi2sd xmm0,rax
    8185:	addsd  xmm0,xmm0
    8189:	jmp    7cea <hvm_summary.part.19+0x11a>
    818e:	lea    rsi,[rip+0x14ffc]        # 1d191 <_IO_stdin_used+0x1d1>
    8195:	xor    eax,eax
    8197:	mov    edi,0x1
    819c:	call   44f0 <__printf_chk@plt>
    81a1:	mov    eax,DWORD PTR [r12+0x4]
    81a6:	mov    rsi,QWORD PTR [r12+0x10]
    81ab:	test   eax,eax
    81ad:	jne    8244 <hvm_summary.part.19+0x674>
    81b3:	xor    ecx,ecx
    81b5:	lea    rdx,[rsi+rsi*4]
    81b9:	pxor   xmm1,xmm1
    81bd:	pxor   xmm0,xmm0
    81c1:	lea    rdx,[rdx+rdx*4]
    81c5:	shl    rdx,0x2
    81c9:	test   rsi,rsi
    81cc:	cvtsi2sd xmm0,QWORD PTR [rip+0x224ffb]        # 22d1d0 <P+0x30>
    81d5:	cvtsi2sd xmm1,rdx
    81da:	divsd  xmm1,xmm0
    81de:	js     82a9 <hvm_summary.part.19+0x6d9>
    81e4:	pxor   xmm0,xmm0
    81e8:	cvtsi2sd xmm0,rsi
    81ed:	pxor   xmm2,xmm2
    81f1:	mov    edx,DWORD PTR [r12]
    81f5:	lea    rsi,[rip+0x17614]        # 1f810 <_IO_stdin_used+0x2850>
    81fc:	mov    edi,0x1
    8201:	mov    eax,0x2
    8206:	cvtsi2sd xmm2,QWORD PTR [rip+0x220ea1]        # 2290b0 <opt+0x10>
    820f:	divsd  xmm0,xmm2
    8213:	call   44f0 <__printf_chk@plt>
    8218:	jmp    7d25 <hvm_summary.part.19+0x155>
    821d:	lea    rsi,[rip+0x14f75]        # 1d199 <_IO_stdin_used+0x1d9>
    8224:	xor    eax,eax
    8226:	mov    edx,ebp
    8228:	mov    edi,0x1
    822d:	call   44f0 <__printf_chk@plt>
    8232:	mov    eax,DWORD PTR [r12+0x4]
    8237:	mov    rsi,QWORD PTR [r12+0x10]
    823c:	test   eax,eax
    823e:	je     81b3 <hvm_summary.part.19+0x5e3>
    8244:	movsxd rcx,eax
    8247:	xor    edx,edx
    8249:	mov    rax,rsi
    824c:	div    rcx
    824f:	mov    rcx,rax
    8252:	jmp    81b5 <hvm_summary.part.19+0x5e5>
    8257:	mov    rdi,QWORD PTR [r12+0x18]
    825c:	mov    esi,r14d
    825f:	mov    edx,0x32
    8264:	mov    QWORD PTR [rsp+0x8],r8
    8269:	call   4b30 <percentile.part.6>
    826e:	mov    rdi,QWORD PTR [r12+0x18]
    8273:	mov    esi,r14d
    8276:	mov    edx,0x5
    827b:	mov    r15,rax
    827e:	call   4b30 <percentile.part.6>
    8283:	mov    rdi,QWORD PTR [r12+0x18]
    8288:	mov    esi,r14d
    828b:	mov    edx,0x5f
    8290:	mov    rbx,rax
    8293:	call   4b30 <percentile.part.6>
    8298:	mov    r8,QWORD PTR [rsp+0x8]
    829d:	mov    r14,rax
    82a0:	mov    rax,QWORD PTR [r13+0x18]
    82a4:	jmp    7c7b <hvm_summary.part.19+0xab>
    82a9:	mov    rax,rsi
    82ac:	pxor   xmm0,xmm0
    82b0:	shr    rax,1
    82b3:	and    esi,0x1
    82b6:	or     rax,rsi
    82b9:	cvtsi2sd xmm0,rax
    82be:	addsd  xmm0,xmm0
    82c2:	jmp    81ed <hvm_summary.part.19+0x61d>
    82c7:	xor    edx,edx
    82c9:	movabs rax,0x1000000000000
    82d3:	lea    rdi,[rip+0x14f15]        # 1d1ef <_IO_stdin_used+0x22f>
    82da:	div    QWORD PTR [rip+0x220de7]        # 2290c8 <opt+0x28>
    82e1:	mov    rbx,rax
    82e4:	call   4380 <puts@plt>
    82e9:	test   ebx,ebx
    82eb:	je     7ff1 <hvm_summary.part.19+0x421>
    82f1:	lea    r12d,[rbx-0x1]
    82f5:	xor    eax,eax
    82f7:	lea    rbp,[rip+0x14f0a]        # 1d208 <_IO_stdin_used+0x248>
    82fe:	add    r12,0x1
    8302:	jmp    8314 <hvm_summary.part.19+0x744>
    8304:	nop    DWORD PTR [rax+0x0]
    8308:	cmp    r12,rbx
    830b:	mov    rax,rbx
    830e:	je     7ff1 <hvm_summary.part.19+0x421>
    8314:	mov    rdx,QWORD PTR [r13+0x10470]
    831b:	lea    rbx,[rax+0x1]
    831f:	mov    r8d,DWORD PTR [rdx+rax*4]
    8323:	test   r8d,r8d
    8326:	je     8308 <hvm_summary.part.19+0x738>
    8328:	mov    rax,QWORD PTR [rip+0x220d99]        # 2290c8 <opt+0x28>
    832f:	mov    rdx,rbx
    8332:	mov    rsi,rbp
    8335:	mov    edi,0x1
    833a:	imul   rdx,rax
    833e:	lea    rcx,[rdx-0x1]
    8342:	sub    rdx,rax
    8345:	xor    eax,eax
    8347:	call   44f0 <__printf_chk@plt>
    834c:	jmp    8308 <hvm_summary.part.19+0x738>
    834e:	lea    rsi,[rip+0x14e8e]        # 1d1e3 <_IO_stdin_used+0x223>
    8355:	mov    edx,0x15e
    835a:	mov    edi,0x1
    835f:	xor    eax,eax
    8361:	call   44f0 <__printf_chk@plt>
    8366:	jmp    7fe4 <hvm_summary.part.19+0x414>
    836b:	mov    rdi,QWORD PTR [r12+0x18]
    8370:	mov    edx,0x32
    8375:	mov    esi,eax
    8377:	mov    DWORD PTR [rsp+0x8],ebp
    837b:	call   4b30 <percentile.part.6>
    8380:	mov    rdi,QWORD PTR [r12+0x18]
    8385:	mov    esi,r14d
    8388:	mov    edx,0x5
    838d:	mov    r15,rax
    8390:	call   4b30 <percentile.part.6>
    8395:	mov    rdi,QWORD PTR [r12+0x18]
    839a:	mov    esi,r14d
    839d:	mov    edx,0x5f
    83a2:	mov    rbx,rax
    83a5:	call   4b30 <percentile.part.6>
    83aa:	mov    r9d,DWORD PTR [rsp+0x8]
    83af:	mov    r14,rax
    83b2:	jmp    7f99 <hvm_summary.part.19+0x3c9>
    83b7:	movsxd rcx,eax
    83ba:	xor    edx,edx
    83bc:	mov    rax,rsi
    83bf:	div    rcx
    83c2:	mov    rcx,rax
    83c5:	jmp    8058 <hvm_summary.part.19+0x488>
    83ca:	lea    rdi,[rip+0x14e48]        # 1d219 <_IO_stdin_used+0x259>
    83d1:	call   4380 <puts@plt>
    83d6:	movsxd rcx,DWORD PTR [r13+0x27f04]
    83dd:	mov    rsi,QWORD PTR [r13+0x27f10]
    83e4:	test   ecx,ecx
    83e6:	jne    84c1 <hvm_summary.part.19+0x8f1>
    83ec:	xor    ecx,ecx
    83ee:	lea    rax,[rsi+rsi*4]
    83f2:	pxor   xmm1,xmm1
    83f6:	pxor   xmm0,xmm0
    83fa:	lea    rdx,[rax+rax*4]
    83fe:	shl    rdx,0x2
    8402:	test   rsi,rsi
    8405:	cvtsi2sd xmm0,QWORD PTR [rip+0x224dc2]        # 22d1d0 <P+0x30>
    840e:	cvtsi2sd xmm1,rdx
    8413:	divsd  xmm1,xmm0
    8417:	js     84d1 <hvm_summary.part.19+0x901>
    841d:	pxor   xmm0,xmm0
    8421:	cvtsi2sd xmm0,rsi
    8426:	pxor   xmm2,xmm2
    842a:	mov    edx,DWORD PTR [r13+0x27f00]
    8431:	lea    rsi,[rip+0x173d8]        # 1f810 <_IO_stdin_used+0x2850>
    8438:	mov    edi,0x1
    843d:	mov    eax,0x2
    8442:	cvtsi2sd xmm2,QWORD PTR [rip+0x220c65]        # 2290b0 <opt+0x10>
    844b:	divsd  xmm0,xmm2
    844f:	call   44f0 <__printf_chk@plt>
    8454:	jmp    80cc <hvm_summary.part.19+0x4fc>
    8459:	mov    rdx,rsi
    845c:	pxor   xmm0,xmm0
    8460:	shr    rdx,1
    8463:	and    esi,0x1
    8466:	or     rdx,rsi
    8469:	cvtsi2sd xmm0,rdx
    846e:	addsd  xmm0,xmm0
    8472:	jmp    8090 <hvm_summary.part.19+0x4c0>
    8477:	mov    rdi,QWORD PTR [r13+0x27f18]
    847e:	mov    esi,r12d
    8481:	mov    edx,0x32
    8486:	call   4b30 <percentile.part.6>
    848b:	mov    rdi,QWORD PTR [r13+0x27f18]
    8492:	mov    esi,r12d
    8495:	mov    edx,0x5
    849a:	mov    rbp,rax
    849d:	call   4b30 <percentile.part.6>
    84a2:	mov    rdi,QWORD PTR [r13+0x27f18]
    84a9:	mov    esi,r12d
    84ac:	mov    edx,0x5f
    84b1:	mov    rbx,rax
    84b4:	call   4b30 <percentile.part.6>
    84b9:	mov    r12,rax
    84bc:	jmp    8034 <hvm_summary.part.19+0x464>
    84c1:	mov    rax,rsi
    84c4:	xor    edx,edx
    84c6:	div    rcx
    84c9:	mov    rcx,rax
    84cc:	jmp    83ee <hvm_summary.part.19+0x81e>
    84d1:	mov    rdx,rsi
    84d4:	pxor   xmm0,xmm0
    84d8:	shr    rdx,1
    84db:	and    esi,0x1
    84de:	or     rdx,rsi
    84e1:	cvtsi2sd xmm0,rdx
    84e6:	addsd  xmm0,xmm0
    84ea:	jmp    8426 <hvm_summary.part.19+0x856>
    84ef:	call   43c0 <__stack_chk_fail@plt>
    84f4:	xchg   ax,ax
    84f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008500 <__interval_cycle_percent_output>:
    8500:	push   rbx
    8501:	mov    rax,QWORD PTR [rdi+0x8]
    8505:	mov    rbx,rdi
    8508:	pxor   xmm0,xmm0
    850c:	mov    edi,0x1
    8511:	pxor   xmm1,xmm1
    8515:	lea    rax,[rax+rax*4]
    8519:	lea    rax,[rax+rax*4]
    851d:	cvtsi2sd xmm1,rsi
    8522:	lea    rsi,[rip+0x14d23]        # 1d24c <_IO_stdin_used+0x28c>
    8529:	shl    rax,0x2
    852d:	cvtsi2sd xmm0,rax
    8532:	mov    eax,0x1
    8537:	divsd  xmm0,xmm1
    853b:	call   44f0 <__printf_chk@plt>
    8540:	mov    QWORD PTR [rbx+0x8],0x0
    8548:	mov    DWORD PTR [rbx],0x0
    854e:	mov    QWORD PTR [rbx+0x10],0x0
    8556:	pop    rbx
    8557:	ret    
    8558:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008560 <interval_cycle_percent_output>:
    8560:	push   rbx
    8561:	mov    rax,QWORD PTR [rdi+0x8]
    8565:	lea    rsi,[rip+0x14ce0]        # 1d24c <_IO_stdin_used+0x28c>
    856c:	pxor   xmm0,xmm0
    8570:	mov    rbx,rdi
    8573:	pxor   xmm1,xmm1
    8577:	mov    edi,0x1
    857c:	lea    rax,[rax+rax*4]
    8580:	lea    rax,[rax+rax*4]
    8584:	cvtsi2sd xmm1,QWORD PTR [rip+0x220b5b]        # 2290e8 <opt+0x48>
    858d:	shl    rax,0x2
    8591:	cvtsi2sd xmm0,rax
    8596:	mov    eax,0x1
    859b:	divsd  xmm0,xmm1
    859f:	call   44f0 <__printf_chk@plt>
    85a4:	mov    QWORD PTR [rbx+0x8],0x0
    85ac:	mov    DWORD PTR [rbx],0x0
    85b2:	mov    QWORD PTR [rbx+0x10],0x0
    85ba:	pop    rbx
    85bb:	ret    
    85bc:	nop    DWORD PTR [rax+0x0]

00000000000085c0 <interval_time_output>:
    85c0:	mov    rax,QWORD PTR [rip+0x25cc31]        # 2651f8 <P+0x38058>
    85c7:	mov    rdx,QWORD PTR [rip+0x224bf2]        # 22d1c0 <P+0x20>
    85ce:	cmp    rax,rdx
    85d1:	jbe    8628 <interval_time_output+0x68>
    85d3:	sub    rax,rdx
    85d6:	xor    edx,edx
    85d8:	mov    rcx,rax
    85db:	shl    rcx,0xa
    85df:	mov    rax,rcx
    85e2:	div    QWORD PTR [rip+0x220abf]        # 2290a8 <opt+0x8>
    85e9:	movabs rdx,0x44b82fa09b5a53
    85f3:	mov    rcx,rax
    85f6:	shr    rax,0x9
    85fa:	mul    rdx
    85fd:	mov    rax,rdx
    8600:	shr    rax,0xb
    8604:	mov    edx,eax
    8606:	imul   eax,eax,0x3b9aca00
    860c:	sub    ecx,eax
    860e:	lea    rsi,[rip+0x14c3f]        # 1d254 <_IO_stdin_used+0x294>
    8615:	mov    edi,0x1
    861a:	xor    eax,eax
    861c:	jmp    44f0 <__printf_chk@plt>
    8621:	nop    DWORD PTR [rax+0x0]
    8628:	xor    ecx,ecx
    862a:	xor    edx,edx
    862c:	jmp    860e <interval_time_output+0x4e>
    862e:	xchg   ax,ax

0000000000008630 <interval_table_output>:
    8630:	push   r12
    8632:	push   rbp
    8633:	push   rbx
    8634:	call   85c0 <interval_time_output>
    8639:	mov    eax,DWORD PTR [rip+0x220ab9]        # 2290f8 <opt+0x58>
    863f:	cmp    eax,0x1
    8642:	je     8690 <interval_table_output+0x60>
    8644:	cmp    eax,0x2
    8647:	je     8660 <interval_table_output+0x30>
    8649:	pop    rbx
    864a:	pop    rbp
    864b:	pop    r12
    864d:	mov    edi,0xa
    8652:	jmp    4340 <putchar@plt>
    8657:	nop    WORD PTR [rax+rax*1+0x0]
    8660:	mov    rbx,QWORD PTR [rip+0x25cb99]        # 265200 <P+0x38060>
    8667:	test   rbx,rbx
    866a:	je     8649 <interval_table_output+0x19>
    866c:	nop    DWORD PTR [rax+0x0]
    8670:	mov    rdi,QWORD PTR [rbx]
    8673:	call   8560 <interval_cycle_percent_output>
    8678:	mov    rbx,QWORD PTR [rbx+0x8]
    867c:	test   rbx,rbx
    867f:	jne    8670 <interval_table_output+0x40>
    8681:	pop    rbx
    8682:	pop    rbp
    8683:	pop    r12
    8685:	mov    edi,0xa
    868a:	jmp    4340 <putchar@plt>
    868f:	nop
    8690:	mov    eax,DWORD PTR [rip+0x25cb72]        # 265208 <P+0x38068>
    8696:	test   eax,eax
    8698:	jle    8649 <interval_table_output+0x19>
    869a:	xor    ebp,ebp
    869c:	xor    ebx,ebx
    869e:	lea    r12,[rip+0x14bb7]        # 1d25c <_IO_stdin_used+0x29c>
    86a5:	jmp    86c4 <interval_table_output+0x94>
    86a7:	nop    WORD PTR [rax+rax*1+0x0]
    86b0:	call   8560 <interval_cycle_percent_output>
    86b5:	add    ebx,0x1
    86b8:	add    rbp,0x8
    86bc:	cmp    DWORD PTR [rip+0x25cb46],ebx        # 265208 <P+0x38068>
    86c2:	jle    8649 <interval_table_output+0x19>
    86c4:	mov    rax,QWORD PTR [rip+0x25cb35]        # 265200 <P+0x38060>
    86cb:	mov    rdi,QWORD PTR [rax+rbp*1]
    86cf:	test   rdi,rdi
    86d2:	jne    86b0 <interval_table_output+0x80>
    86d4:	mov    rsi,r12
    86d7:	mov    edi,0x1
    86dc:	xor    eax,eax
    86de:	call   44f0 <__printf_chk@plt>
    86e3:	jmp    86b5 <interval_table_output+0x85>
    86e5:	nop
    86e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000086f0 <interval_table_tail>:
    86f0:	push   rbp
    86f1:	push   rbx
    86f2:	lea    rsi,[rip+0x15b91]        # 1e28a <_IO_stdin_used+0x12ca>
    86f9:	xor    eax,eax
    86fb:	mov    edi,0x1
    8700:	sub    rsp,0x8
    8704:	call   44f0 <__printf_chk@plt>
    8709:	mov    rbx,QWORD PTR [rip+0x25caf0]        # 265200 <P+0x38060>
    8710:	test   rbx,rbx
    8713:	je     873c <interval_table_tail+0x4c>
    8715:	lea    rbp,[rip+0x14aac]        # 1d1c8 <_IO_stdin_used+0x208>
    871c:	nop    DWORD PTR [rax+0x0]
    8720:	lea    rdx,[rbx+0x10]
    8724:	xor    eax,eax
    8726:	mov    rsi,rbp
    8729:	mov    edi,0x1
    872e:	call   44f0 <__printf_chk@plt>
    8733:	mov    rbx,QWORD PTR [rbx+0x8]
    8737:	test   rbx,rbx
    873a:	jne    8720 <interval_table_tail+0x30>
    873c:	add    rsp,0x8
    8740:	mov    edi,0xa
    8745:	pop    rbx
    8746:	pop    rbp
    8747:	jmp    4340 <putchar@plt>
    874c:	nop    DWORD PTR [rax+0x0]

0000000000008750 <interval_table_alloc>:
    8750:	mov    DWORD PTR [rip+0x25cab2],edi        # 265208 <P+0x38068>
    8756:	movsxd rdi,edi
    8759:	push   rbx
    875a:	lea    rbx,[rdi*8+0x0]
    8762:	mov    rdi,rbx
    8765:	call   4490 <malloc@plt>
    876a:	test   rax,rax
    876d:	mov    QWORD PTR [rip+0x25ca8c],rax        # 265200 <P+0x38060>
    8774:	je     8788 <interval_table_alloc+0x38>
    8776:	mov    rdx,rbx
    8779:	xor    esi,esi
    877b:	mov    rdi,rax
    877e:	pop    rbx
    877f:	jmp    4420 <memset@plt>
    8784:	nop    DWORD PTR [rax+0x0]
    8788:	mov    rcx,QWORD PTR [rip+0x223cb1]        # 22c440 <stderr@@GLIBC_2.2.5>
    878f:	lea    rdi,[rip+0x14be3]        # 1d379 <_IO_stdin_used+0x3b9>
    8796:	mov    edx,0xf
    879b:	mov    esi,0x1
    87a0:	call   4550 <fwrite@plt>
    87a5:	cmp    DWORD PTR [rip+0x220934],0x7        # 2290e0 <opt+0x40>
    87ac:	jbe    87c3 <interval_table_alloc+0x73>
    87ae:	mov    rax,QWORD PTR [rip+0x25ca4b]        # 265200 <P+0x38060>
    87b5:	mov    rdx,rbx
    87b8:	xor    esi,esi
    87ba:	pop    rbx
    87bb:	mov    rdi,rax
    87be:	jmp    4420 <memset@plt>
    87c3:	mov    edi,0x1
    87c8:	call   4540 <exit@plt>
    87cd:	nop    DWORD PTR [rax]

00000000000087d0 <interval_list_add>:
    87d0:	push   r12
    87d2:	mov    r12,rdi
    87d5:	mov    rdi,QWORD PTR [rip+0x25ca7c]        # 265258 <warn>
    87dc:	push   rbp
    87dd:	lea    rcx,[rip+0x1b04c]        # 23830 <__func__.5855>
    87e4:	push   rbx
    87e5:	lea    rdx,[rip+0x14a75]        # 1d261 <_IO_stdin_used+0x2a1>
    87ec:	mov    r8,rsi
    87ef:	xor    eax,eax
    87f1:	mov    rbp,rsi
    87f4:	mov    esi,0x1
    87f9:	call   4560 <__fprintf_chk@plt>
    87fe:	mov    edi,0x30
    8803:	call   4490 <malloc@plt>
    8808:	test   rax,rax
    880b:	mov    rbx,rax
    880e:	je     8880 <interval_list_add+0xb0>
    8810:	pxor   xmm0,xmm0
    8814:	lea    rdi,[rbx+0x10]
    8818:	mov    edx,0x1f
    881d:	mov    rsi,rbp
    8820:	movups XMMWORD PTR [rbx+0x10],xmm0
    8824:	movups XMMWORD PTR [rdi+0x10],xmm0
    8828:	mov    QWORD PTR [rbx],r12
    882b:	call   4360 <strncpy@plt>
    8830:	cmp    QWORD PTR [rip+0x25c9c8],0x0        # 265200 <P+0x38060>
    8838:	mov    QWORD PTR [rbx+0x8],0x0
    8840:	je     8860 <interval_list_add+0x90>
    8842:	mov    rax,QWORD PTR [rip+0x25c9bf]        # 265208 <P+0x38068>
    8849:	mov    QWORD PTR [rax],rbx
    884c:	add    rbx,0x8
    8850:	mov    QWORD PTR [rip+0x25c9b1],rbx        # 265208 <P+0x38068>
    8857:	pop    rbx
    8858:	pop    rbp
    8859:	pop    r12
    885b:	ret    
    885c:	nop    DWORD PTR [rax+0x0]
    8860:	mov    QWORD PTR [rip+0x25c999],rbx        # 265200 <P+0x38060>
    8867:	add    rbx,0x8
    886b:	mov    QWORD PTR [rip+0x25c996],rbx        # 265208 <P+0x38068>
    8872:	pop    rbx
    8873:	pop    rbp
    8874:	pop    r12
    8876:	ret    
    8877:	nop    WORD PTR [rax+rax*1+0x0]
    8880:	mov    rcx,QWORD PTR [rip+0x223bb9]        # 22c440 <stderr@@GLIBC_2.2.5>
    8887:	lea    rdi,[rip+0x149ec]        # 1d27a <_IO_stdin_used+0x2ba>
    888e:	mov    edx,0x11
    8893:	mov    esi,0x1
    8898:	call   4550 <fwrite@plt>
    889d:	cmp    DWORD PTR [rip+0x22083c],0x7        # 2290e0 <opt+0x40>
    88a4:	ja     8810 <interval_list_add+0x40>
    88aa:	mov    edi,0x1
    88af:	call   4540 <exit@plt>
    88b4:	xchg   ax,ax
    88b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000088c0 <interval_cr3_schedule_time_header>:
    88c0:	cmp    DWORD PTR [rip+0x220831],0x1        # 2290f8 <opt+0x58>
    88c7:	je     88d0 <interval_cr3_schedule_time_header+0x10>
    88c9:	repz ret 
    88cb:	nop    DWORD PTR [rax+rax*1+0x0]
    88d0:	push   r12
    88d2:	lea    rsi,[rip+0x159b1]        # 1e28a <_IO_stdin_used+0x12ca>
    88d9:	push   rbp
    88da:	push   rbx
    88db:	xor    eax,eax
    88dd:	mov    edi,0x1
    88e2:	call   44f0 <__printf_chk@plt>
    88e7:	mov    eax,DWORD PTR [rip+0x22081b]        # 229108 <opt+0x68>
    88ed:	test   eax,eax
    88ef:	jle    8929 <interval_cr3_schedule_time_header+0x69>
    88f1:	lea    r12,[rip+0x14aa9]        # 1d3a1 <_IO_stdin_used+0x3e1>
    88f8:	xor    ebp,ebp
    88fa:	xor    ebx,ebx
    88fc:	nop    DWORD PTR [rax+0x0]
    8900:	mov    rax,QWORD PTR [rip+0x2207f9]        # 229100 <opt+0x60>
    8907:	mov    rsi,r12
    890a:	mov    edi,0x1
    890f:	add    ebx,0x1
    8912:	mov    rdx,QWORD PTR [rax+rbp*1]
    8916:	xor    eax,eax
    8918:	add    rbp,0x8
    891c:	call   44f0 <__printf_chk@plt>
    8921:	cmp    DWORD PTR [rip+0x2207e1],ebx        # 229108 <opt+0x68>
    8927:	jg     8900 <interval_cr3_schedule_time_header+0x40>
    8929:	pop    rbx
    892a:	pop    rbp
    892b:	pop    r12
    892d:	mov    edi,0xa
    8932:	jmp    4340 <putchar@plt>
    8937:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008940 <interval_cr3_value_check>:
    8940:	push   r13
    8942:	push   r12
    8944:	mov    r12,rdi
    8947:	push   rbp
    8948:	push   rbx
    8949:	sub    rsp,0x38
    894d:	mov    rax,QWORD PTR fs:0x28
    8956:	mov    QWORD PTR [rsp+0x28],rax
    895b:	xor    eax,eax
    895d:	mov    eax,DWORD PTR [rip+0x220795]        # 2290f8 <opt+0x58>
    8963:	cmp    eax,0x1
    8966:	je     89b0 <interval_cr3_value_check+0x70>
    8968:	cmp    eax,0x2
    896b:	mov    r9,QWORD PTR [rdi+0x10]
    896f:	je     8a58 <interval_cr3_value_check+0x118>
    8975:	mov    rax,QWORD PTR [rip+0x220784]        # 229100 <opt+0x60>
    897c:	cmp    QWORD PTR [rax],r9
    897f:	je     89a0 <interval_cr3_value_check+0x60>
    8981:	mov    rax,QWORD PTR [rsp+0x28]
    8986:	xor    rax,QWORD PTR fs:0x28
    898f:	jne    8a97 <interval_cr3_value_check+0x157>
    8995:	add    rsp,0x38
    8999:	pop    rbx
    899a:	pop    rbp
    899b:	pop    r12
    899d:	pop    r13
    899f:	ret    
    89a0:	mov    QWORD PTR [rip+0x25c859],rdi        # 265200 <P+0x38060>
    89a7:	jmp    8981 <interval_cr3_value_check+0x41>
    89a9:	nop    DWORD PTR [rax+0x0]
    89b0:	mov    eax,DWORD PTR [rip+0x220752]        # 229108 <opt+0x68>
    89b6:	xor    ebx,ebx
    89b8:	xor    ebp,ebp
    89ba:	lea    r13,[rdi+0x58]
    89be:	test   eax,eax
    89c0:	jg     89d7 <interval_cr3_value_check+0x97>
    89c2:	jmp    8981 <interval_cr3_value_check+0x41>
    89c4:	nop    DWORD PTR [rax+0x0]
    89c8:	add    ebp,0x1
    89cb:	add    rbx,0x8
    89cf:	cmp    ebp,DWORD PTR [rip+0x220733]        # 229108 <opt+0x68>
    89d5:	jge    8981 <interval_cr3_value_check+0x41>
    89d7:	mov    rax,QWORD PTR [rip+0x220722]        # 229100 <opt+0x60>
    89de:	mov    r8,QWORD PTR [r12+0x10]
    89e3:	cmp    r8,QWORD PTR [rax+rbx*1]
    89e7:	jne    89c8 <interval_cr3_value_check+0x88>
    89e9:	mov    rax,QWORD PTR [rip+0x25c810]        # 265200 <P+0x38060>
    89f0:	mov    rdi,QWORD PTR [rip+0x223a49]        # 22c440 <stderr@@GLIBC_2.2.5>
    89f7:	cmp    QWORD PTR [rax+rbx*1],0x0
    89fc:	je     8a29 <interval_cr3_value_check+0xe9>
    89fe:	lea    rdx,[rip+0x16f63]        # 1f968 <_IO_stdin_used+0x29a8>
    8a05:	xor    eax,eax
    8a07:	mov    rcx,r8
    8a0a:	mov    esi,0x1
    8a0f:	call   4560 <__fprintf_chk@plt>
    8a14:	cmp    DWORD PTR [rip+0x2206c5],0x6        # 2290e0 <opt+0x40>
    8a1b:	jbe    8a8d <interval_cr3_value_check+0x14d>
    8a1d:	mov    r8,QWORD PTR [r12+0x10]
    8a22:	mov    rdi,QWORD PTR [rip+0x223a17]        # 22c440 <stderr@@GLIBC_2.2.5>
    8a29:	lea    rcx,[rip+0x1ade0]        # 23810 <__func__.5867>
    8a30:	lea    rdx,[rip+0x14855]        # 1d28c <_IO_stdin_used+0x2cc>
    8a37:	mov    esi,0x1
    8a3c:	xor    eax,eax
    8a3e:	call   4560 <__fprintf_chk@plt>
    8a43:	mov    rax,QWORD PTR [rip+0x25c7b6]        # 265200 <P+0x38060>
    8a4a:	mov    QWORD PTR [rax+rbx*1],r13
    8a4e:	jmp    89c8 <interval_cr3_value_check+0x88>
    8a53:	nop    DWORD PTR [rax+rax*1+0x0]
    8a58:	mov    rbx,rsp
    8a5b:	lea    r8,[rip+0x14940]        # 1d3a2 <_IO_stdin_used+0x3e2>
    8a62:	mov    ecx,0x20
    8a67:	mov    rdi,rbx
    8a6a:	mov    edx,0x1
    8a6f:	mov    esi,0x20
    8a74:	xor    eax,eax
    8a76:	call   4320 <__snprintf_chk@plt>
    8a7b:	lea    rdi,[r12+0x58]
    8a80:	mov    rsi,rbx
    8a83:	call   87d0 <interval_list_add>
    8a88:	jmp    8981 <interval_cr3_value_check+0x41>
    8a8d:	mov    edi,0x1
    8a92:	call   4540 <exit@plt>
    8a97:	call   43c0 <__stack_chk_fail@plt>
    8a9c:	nop    DWORD PTR [rax+0x0]

0000000000008aa0 <interval_cr3_schedule_ordered_output>:
    8aa0:	push   r14
    8aa2:	push   r13
    8aa4:	push   r12
    8aa6:	push   rbp
    8aa7:	mov    rbp,QWORD PTR [rip+0x25c73a]        # 2651e8 <P+0x38048>
    8aae:	push   rbx
    8aaf:	test   rbp,rbp
    8ab2:	je     8bb0 <interval_cr3_schedule_ordered_output+0x110>
    8ab8:	mov    rax,rbp
    8abb:	xor    ebx,ebx
    8abd:	nop    DWORD PTR [rax]
    8ac0:	mov    rax,QWORD PTR [rax+0x8]
    8ac4:	add    ebx,0x1
    8ac7:	test   rax,rax
    8aca:	jne    8ac0 <interval_cr3_schedule_ordered_output+0x20>
    8acc:	movsxd r13,ebx
    8acf:	lea    rdi,[r13*8+0x0]
    8ad7:	call   4490 <malloc@plt>
    8adc:	mov    r12,rax
    8adf:	mov    r14,rax
    8ae2:	mov    QWORD PTR [rax],rbp
    8ae5:	mov    rbp,QWORD PTR [rbp+0x8]
    8ae9:	add    rax,0x8
    8aed:	test   rbp,rbp
    8af0:	jne    8ae2 <interval_cr3_schedule_ordered_output+0x42>
    8af2:	lea    rcx,[rip+0xffffffffffffbd97]        # 4890 <cr3_time_compare>
    8af9:	mov    rsi,r13
    8afc:	mov    edx,0x8
    8b01:	mov    rdi,r12
    8b04:	lea    r13,[rip+0x14796]        # 1d2a1 <_IO_stdin_used+0x2e1>
    8b0b:	call   4390 <qsort@plt>
    8b10:	call   85c0 <interval_time_output>
    8b15:	lea    eax,[rbx-0x1]
    8b18:	lea    rbp,[r12+rax*8+0x8]
    8b1d:	nop    DWORD PTR [rax]
    8b20:	mov    rbx,QWORD PTR [r14]
    8b23:	mov    rax,QWORD PTR [rbx+0x60]
    8b27:	test   rax,rax
    8b2a:	jle    8b7b <interval_cr3_schedule_ordered_output+0xdb>
    8b2c:	mov    rsi,QWORD PTR [rbx+0x20]
    8b30:	lea    rax,[rax+rax*4]
    8b34:	cmp    QWORD PTR [rip+0x25c6bd],rsi        # 2651f8 <P+0x38058>
    8b3b:	pxor   xmm0,xmm0
    8b3f:	mov    rdx,QWORD PTR [rbx+0x10]
    8b43:	lea    rax,[rax+rax*4]
    8b47:	pxor   xmm1,xmm1
    8b4b:	mov    rsi,r13
    8b4e:	mov    edi,0x1
    8b53:	sbb    ecx,ecx
    8b55:	shl    rax,0x2
    8b59:	cvtsi2sd xmm0,rax
    8b5e:	cvtsi2sd xmm1,QWORD PTR [rip+0x220581]        # 2290e8 <opt+0x48>
    8b67:	and    ecx,0xa
    8b6a:	add    ecx,0x20
    8b6d:	mov    eax,0x1
    8b72:	divsd  xmm0,xmm1
    8b76:	call   44f0 <__printf_chk@plt>
    8b7b:	add    r14,0x8
    8b7f:	mov    QWORD PTR [rbx+0x60],0x0
    8b87:	mov    DWORD PTR [rbx+0x58],0x0
    8b8e:	cmp    rbp,r14
    8b91:	mov    QWORD PTR [rbx+0x68],0x0
    8b99:	jne    8b20 <interval_cr3_schedule_ordered_output+0x80>
    8b9b:	pop    rbx
    8b9c:	mov    rdi,r12
    8b9f:	pop    rbp
    8ba0:	pop    r12
    8ba2:	pop    r13
    8ba4:	pop    r14
    8ba6:	jmp    4330 <free@plt>
    8bab:	nop    DWORD PTR [rax+rax*1+0x0]
    8bb0:	pop    rbx
    8bb1:	pop    rbp
    8bb2:	pop    r12
    8bb4:	pop    r13
    8bb6:	pop    r14
    8bb8:	ret    
    8bb9:	nop    DWORD PTR [rax+0x0]

0000000000008bc0 <interval_cr3_short_summary_header>:
    8bc0:	push   r12
    8bc2:	push   rbp
    8bc3:	lea    rsi,[rip+0x146ea]        # 1d2b4 <_IO_stdin_used+0x2f4>
    8bca:	push   rbx
    8bcb:	lea    rbx,[rip+0x22092e]        # 229500 <hvm_short_summary_name>
    8bd2:	lea    rbp,[rip+0x145ef]        # 1d1c8 <_IO_stdin_used+0x208>
    8bd9:	mov    edi,0x1
    8bde:	xor    eax,eax
    8be0:	lea    r12,[rbx+0x50]
    8be4:	call   44f0 <__printf_chk@plt>
    8be9:	nop    DWORD PTR [rax+0x0]
    8bf0:	mov    rdx,QWORD PTR [rbx]
    8bf3:	xor    eax,eax
    8bf5:	mov    rsi,rbp
    8bf8:	mov    edi,0x1
    8bfd:	add    rbx,0x8
    8c01:	call   44f0 <__printf_chk@plt>
    8c06:	cmp    rbx,r12
    8c09:	jne    8bf0 <interval_cr3_short_summary_header+0x30>
    8c0b:	pop    rbx
    8c0c:	pop    rbp
    8c0d:	pop    r12
    8c0f:	mov    edi,0xa
    8c14:	jmp    4340 <putchar@plt>
    8c19:	nop    DWORD PTR [rax+0x0]

0000000000008c20 <interval_cr3_short_summary_output>:
    8c20:	push   r13
    8c22:	push   r12
    8c24:	push   rbp
    8c25:	push   rbx
    8c26:	sub    rsp,0x8
    8c2a:	mov    rbp,QWORD PTR [rip+0x25c5cf]        # 265200 <P+0x38060>
    8c31:	test   rbp,rbp
    8c34:	je     8d20 <interval_cr3_short_summary_output+0x100>
    8c3a:	call   85c0 <interval_time_output>
    8c3f:	mov    rax,QWORD PTR [rbp+0x60]
    8c43:	pxor   xmm0,xmm0
    8c47:	pxor   xmm1,xmm1
    8c4b:	lea    rsi,[rip+0x145fa]        # 1d24c <_IO_stdin_used+0x28c>
    8c52:	lea    rbx,[rbp+0x108]
    8c59:	lea    r13,[rbp+0x338]
    8c60:	lea    r12,[rip+0x145e5]        # 1d24c <_IO_stdin_used+0x28c>
    8c67:	lea    rax,[rax+rax*4]
    8c6b:	mov    edi,0x1
    8c70:	cvtsi2sd xmm1,QWORD PTR [rip+0x22046f]        # 2290e8 <opt+0x48>
    8c79:	lea    rax,[rax+rax*4]
    8c7d:	shl    rax,0x2
    8c81:	cvtsi2sd xmm0,rax
    8c86:	mov    eax,0x1
    8c8b:	divsd  xmm0,xmm1
    8c8f:	call   44f0 <__printf_chk@plt>
    8c94:	nop    DWORD PTR [rax+0x0]
    8c98:	mov    rax,QWORD PTR [rbx+0x8]
    8c9c:	pxor   xmm0,xmm0
    8ca0:	pxor   xmm1,xmm1
    8ca4:	mov    rsi,r12
    8ca7:	mov    edi,0x1
    8cac:	add    rbx,0x38
    8cb0:	lea    rax,[rax+rax*4]
    8cb4:	cvtsi2sd xmm1,QWORD PTR [rbp+0x60]
    8cba:	lea    rax,[rax+rax*4]
    8cbe:	shl    rax,0x2
    8cc2:	cvtsi2sd xmm0,rax
    8cc7:	mov    eax,0x1
    8ccc:	divsd  xmm0,xmm1
    8cd0:	call   44f0 <__printf_chk@plt>
    8cd5:	mov    QWORD PTR [rbx-0x30],0x0
    8cdd:	mov    DWORD PTR [rbx-0x38],0x0
    8ce4:	mov    QWORD PTR [rbx-0x28],0x0
    8cec:	cmp    r13,rbx
    8cef:	jne    8c98 <interval_cr3_short_summary_output+0x78>
    8cf1:	mov    QWORD PTR [rbp+0x60],0x0
    8cf9:	mov    DWORD PTR [rbp+0x58],0x0
    8d00:	mov    edi,0xa
    8d05:	mov    QWORD PTR [rbp+0x68],0x0
    8d0d:	add    rsp,0x8
    8d11:	pop    rbx
    8d12:	pop    rbp
    8d13:	pop    r12
    8d15:	pop    r13
    8d17:	jmp    4340 <putchar@plt>
    8d1c:	nop    DWORD PTR [rax+0x0]
    8d20:	add    rsp,0x8
    8d24:	pop    rbx
    8d25:	pop    rbp
    8d26:	pop    r12
    8d28:	pop    r13
    8d2a:	ret    
    8d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008d30 <interval_domain_value_check>:
    8d30:	push   r13
    8d32:	push   r12
    8d34:	mov    r12,rdi
    8d37:	push   rbp
    8d38:	push   rbx
    8d39:	sub    rsp,0x38
    8d3d:	mov    rax,QWORD PTR fs:0x28
    8d46:	mov    QWORD PTR [rsp+0x28],rax
    8d4b:	xor    eax,eax
    8d4d:	mov    eax,DWORD PTR [rip+0x2203a5]        # 2290f8 <opt+0x58>
    8d53:	cmp    eax,0x1
    8d56:	je     8da0 <interval_domain_value_check+0x70>
    8d58:	cmp    eax,0x2
    8d5b:	movsxd r9,DWORD PTR [rdi+0x8]
    8d5f:	je     8e30 <interval_domain_value_check+0x100>
    8d65:	mov    rax,QWORD PTR [rip+0x220394]        # 229100 <opt+0x60>
    8d6c:	cmp    r9,QWORD PTR [rax]
    8d6f:	je     8d90 <interval_domain_value_check+0x60>
    8d71:	mov    rax,QWORD PTR [rsp+0x28]
    8d76:	xor    rax,QWORD PTR fs:0x28
    8d7f:	jne    8e72 <interval_domain_value_check+0x142>
    8d85:	add    rsp,0x38
    8d89:	pop    rbx
    8d8a:	pop    rbp
    8d8b:	pop    r12
    8d8d:	pop    r13
    8d8f:	ret    
    8d90:	mov    QWORD PTR [rip+0x25c469],rdi        # 265200 <P+0x38060>
    8d97:	jmp    8d71 <interval_domain_value_check+0x41>
    8d99:	nop    DWORD PTR [rax+0x0]
    8da0:	mov    eax,DWORD PTR [rip+0x220362]        # 229108 <opt+0x68>
    8da6:	xor    ebx,ebx
    8da8:	xor    ebp,ebp
    8daa:	lea    r13,[rdi+0x840]
    8db1:	test   eax,eax
    8db3:	jg     8dcf <interval_domain_value_check+0x9f>
    8db5:	jmp    8d71 <interval_domain_value_check+0x41>
    8db7:	nop    WORD PTR [rax+rax*1+0x0]
    8dc0:	add    ebp,0x1
    8dc3:	add    rbx,0x8
    8dc7:	cmp    ebp,DWORD PTR [rip+0x22033b]        # 229108 <opt+0x68>
    8dcd:	jge    8d71 <interval_domain_value_check+0x41>
    8dcf:	mov    rax,QWORD PTR [rip+0x22032a]        # 229100 <opt+0x60>
    8dd6:	movsxd rdx,DWORD PTR [r12+0x8]
    8ddb:	cmp    rdx,QWORD PTR [rax+rbx*1]
    8ddf:	mov    rcx,rdx
    8de2:	jne    8dc0 <interval_domain_value_check+0x90>
    8de4:	mov    rax,QWORD PTR [rip+0x25c415]        # 265200 <P+0x38060>
    8deb:	add    rax,rbx
    8dee:	cmp    QWORD PTR [rax],0x0
    8df2:	je     8e21 <interval_domain_value_check+0xf1>
    8df4:	mov    rdi,QWORD PTR [rip+0x223645]        # 22c440 <stderr@@GLIBC_2.2.5>
    8dfb:	lea    rdx,[rip+0x16b8e]        # 1f990 <_IO_stdin_used+0x29d0>
    8e02:	xor    eax,eax
    8e04:	mov    esi,0x1
    8e09:	call   4560 <__fprintf_chk@plt>
    8e0e:	cmp    DWORD PTR [rip+0x2202cb],0x6        # 2290e0 <opt+0x40>
    8e15:	jbe    8e68 <interval_domain_value_check+0x138>
    8e17:	mov    rax,QWORD PTR [rip+0x25c3e2]        # 265200 <P+0x38060>
    8e1e:	add    rax,rbx
    8e21:	mov    QWORD PTR [rax],r13
    8e24:	jmp    8dc0 <interval_domain_value_check+0x90>
    8e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8e30:	mov    rbx,rsp
    8e33:	lea    r8,[rip+0x146e8]        # 1d522 <_IO_stdin_used+0x562>
    8e3a:	mov    ecx,0x20
    8e3f:	mov    rdi,rbx
    8e42:	mov    edx,0x1
    8e47:	mov    esi,0x20
    8e4c:	xor    eax,eax
    8e4e:	call   4320 <__snprintf_chk@plt>
    8e53:	lea    rdi,[r12+0x840]
    8e5b:	mov    rsi,rbx
    8e5e:	call   87d0 <interval_list_add>
    8e63:	jmp    8d71 <interval_domain_value_check+0x41>
    8e68:	mov    edi,0x1
    8e6d:	call   4540 <exit@plt>
    8e72:	call   43c0 <__stack_chk_fail@plt>
    8e77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008e80 <interval_domain_short_summary_header>:
    8e80:	push   r12
    8e82:	push   rbp
    8e83:	lea    rsi,[rip+0x14435]        # 1d2bf <_IO_stdin_used+0x2ff>
    8e8a:	push   rbx
    8e8b:	lea    rbx,[rip+0x22066e]        # 229500 <hvm_short_summary_name>
    8e92:	lea    rbp,[rip+0x1432f]        # 1d1c8 <_IO_stdin_used+0x208>
    8e99:	mov    edi,0x1
    8e9e:	xor    eax,eax
    8ea0:	lea    r12,[rbx+0x50]
    8ea4:	call   44f0 <__printf_chk@plt>
    8ea9:	nop    DWORD PTR [rax+0x0]
    8eb0:	mov    rdx,QWORD PTR [rbx]
    8eb3:	xor    eax,eax
    8eb5:	mov    rsi,rbp
    8eb8:	mov    edi,0x1
    8ebd:	add    rbx,0x8
    8ec1:	call   44f0 <__printf_chk@plt>
    8ec6:	cmp    rbx,r12
    8ec9:	jne    8eb0 <interval_domain_short_summary_header+0x30>
    8ecb:	pop    rbx
    8ecc:	pop    rbp
    8ecd:	pop    r12
    8ecf:	mov    edi,0xa
    8ed4:	jmp    4340 <putchar@plt>
    8ed9:	nop    DWORD PTR [rax+0x0]

0000000000008ee0 <interval_domain_short_summary_output>:
    8ee0:	push   rbp
    8ee1:	push   rbx
    8ee2:	sub    rsp,0x8
    8ee6:	mov    rbp,QWORD PTR [rip+0x25c313]        # 265200 <P+0x38060>
    8eed:	test   rbp,rbp
    8ef0:	je     8f40 <interval_domain_short_summary_output+0x60>
    8ef2:	call   85c0 <interval_time_output>
    8ef7:	lea    rdi,[rbp+0x840]
    8efe:	lea    rbx,[rbp+0xf98]
    8f05:	add    rbp,0x11c8
    8f0c:	call   8560 <interval_cycle_percent_output>
    8f11:	nop    DWORD PTR [rax+0x0]
    8f18:	mov    rdi,rbx
    8f1b:	add    rbx,0x38
    8f1f:	call   8560 <interval_cycle_percent_output>
    8f24:	cmp    rbx,rbp
    8f27:	jne    8f18 <interval_domain_short_summary_output+0x38>
    8f29:	add    rsp,0x8
    8f2d:	mov    edi,0xa
    8f32:	pop    rbx
    8f33:	pop    rbp
    8f34:	jmp    4340 <putchar@plt>
    8f39:	nop    DWORD PTR [rax+0x0]
    8f40:	add    rsp,0x8
    8f44:	pop    rbx
    8f45:	pop    rbp
    8f46:	ret    
    8f47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008f50 <interval_domain_guest_interrupt>:
    8f50:	mov    rax,QWORD PTR [rdi+0x10]
    8f54:	lea    rcx,[rip+0x25c2ad]        # 265208 <P+0x38068>
    8f5b:	mov    r8,QWORD PTR [rax+0x8]
    8f5f:	xor    eax,eax
    8f61:	nop    DWORD PTR [rax+0x0]
    8f68:	mov    edx,DWORD PTR [rcx+rax*4]
    8f6b:	movsxd rdi,eax
    8f6e:	test   edx,edx
    8f70:	je     8fb8 <interval_domain_guest_interrupt+0x68>
    8f72:	cmp    edx,esi
    8f74:	je     8fc6 <interval_domain_guest_interrupt+0x76>
    8f76:	add    rax,0x1
    8f7a:	cmp    rax,0xa
    8f7e:	jne    8f68 <interval_domain_guest_interrupt+0x18>
    8f80:	sub    rsp,0x8
    8f84:	mov    rdi,QWORD PTR [rip+0x2234b5]        # 22c440 <stderr@@GLIBC_2.2.5>
    8f8b:	lea    rdx,[rip+0x16a26]        # 1f9b8 <_IO_stdin_used+0x29f8>
    8f92:	xor    eax,eax
    8f94:	mov    ecx,0xa
    8f99:	mov    esi,0x1
    8f9e:	call   4560 <__fprintf_chk@plt>
    8fa3:	cmp    DWORD PTR [rip+0x220136],0x5        # 2290e0 <opt+0x40>
    8faa:	jbe    8fd3 <interval_domain_guest_interrupt+0x83>
    8fac:	add    rsp,0x8
    8fb0:	ret    
    8fb1:	nop    DWORD PTR [rax+0x0]
    8fb8:	lea    rax,[rip+0x2241e1]        # 22d1a0 <P>
    8fbf:	mov    DWORD PTR [rax+rdi*4+0x38068],esi
    8fc6:	movsxd rsi,esi
    8fc9:	add    DWORD PTR [r8+rsi*4+0x9f8],0x1
    8fd2:	ret    
    8fd3:	mov    edi,0x1
    8fd8:	call   4540 <exit@plt>
    8fdd:	nop    DWORD PTR [rax]

0000000000008fe0 <interval_domain_guest_interrupt_tail>:
    8fe0:	push   r12
    8fe2:	push   rbp
    8fe3:	lea    rsi,[rip+0x142d5]        # 1d2bf <_IO_stdin_used+0x2ff>
    8fea:	push   rbx
    8feb:	lea    rbx,[rip+0x25c216]        # 265208 <P+0x38068>
    8ff2:	lea    rbp,[rip+0x14528]        # 1d521 <_IO_stdin_used+0x561>
    8ff9:	mov    edi,0x1
    8ffe:	xor    eax,eax
    9000:	lea    r12,[rbx+0x28]
    9004:	call   44f0 <__printf_chk@plt>
    9009:	nop    DWORD PTR [rax+0x0]
    9010:	mov    edx,DWORD PTR [rbx]
    9012:	test   edx,edx
    9014:	je     902e <interval_domain_guest_interrupt_tail+0x4e>
    9016:	xor    eax,eax
    9018:	mov    rsi,rbp
    901b:	mov    edi,0x1
    9020:	add    rbx,0x4
    9024:	call   44f0 <__printf_chk@plt>
    9029:	cmp    rbx,r12
    902c:	jne    9010 <interval_domain_guest_interrupt_tail+0x30>
    902e:	pop    rbx
    902f:	pop    rbp
    9030:	pop    r12
    9032:	mov    edi,0xa
    9037:	jmp    4340 <putchar@plt>
    903c:	nop    DWORD PTR [rax+0x0]

0000000000009040 <interval_domain_guest_interrupt_output>:
    9040:	push   r14
    9042:	push   r13
    9044:	push   r12
    9046:	push   rbp
    9047:	mov    rbp,QWORD PTR [rip+0x25c1b2]        # 265200 <P+0x38060>
    904e:	push   rbx
    904f:	test   rbp,rbp
    9052:	je     90c0 <interval_domain_guest_interrupt_output+0x80>
    9054:	lea    rbx,[rip+0x25c1ad]        # 265208 <P+0x38068>
    905b:	lea    r12,[rip+0x144bf]        # 1d521 <_IO_stdin_used+0x561>
    9062:	call   85c0 <interval_time_output>
    9067:	lea    r13,[rbx+0x28]
    906b:	nop    DWORD PTR [rax+rax*1+0x0]
    9070:	movsxd rax,DWORD PTR [rbx]
    9073:	test   eax,eax
    9075:	je     90a6 <interval_domain_guest_interrupt_output+0x66>
    9077:	lea    r14,[rbp+rax*4+0x0]
    907c:	mov    rsi,r12
    907f:	xor    eax,eax
    9081:	mov    edi,0x1
    9086:	add    rbx,0x4
    908a:	mov    edx,DWORD PTR [r14+0x9f8]
    9091:	call   44f0 <__printf_chk@plt>
    9096:	cmp    rbx,r13
    9099:	mov    DWORD PTR [r14+0x9f8],0x0
    90a4:	jne    9070 <interval_domain_guest_interrupt_output+0x30>
    90a6:	pop    rbx
    90a7:	pop    rbp
    90a8:	pop    r12
    90aa:	pop    r13
    90ac:	pop    r14
    90ae:	mov    edi,0xa
    90b3:	jmp    4340 <putchar@plt>
    90b8:	nop    DWORD PTR [rax+rax*1+0x0]
    90c0:	pop    rbx
    90c1:	pop    rbp
    90c2:	pop    r12
    90c4:	pop    r13
    90c6:	pop    r14
    90c8:	ret    
    90c9:	nop    DWORD PTR [rax+0x0]

00000000000090d0 <interval_domain_grant_maps_output>:
    90d0:	push   rbx
    90d1:	mov    rbx,QWORD PTR [rip+0x25c128]        # 265200 <P+0x38060>
    90d8:	test   rbx,rbx
    90db:	je     9110 <interval_domain_grant_maps_output+0x40>
    90dd:	call   85c0 <interval_time_output>
    90e2:	mov    edx,DWORD PTR [rbx+0x1290]
    90e8:	lea    rsi,[rip+0x14432]        # 1d521 <_IO_stdin_used+0x561>
    90ef:	mov    edi,0x1
    90f4:	xor    eax,eax
    90f6:	call   44f0 <__printf_chk@plt>
    90fb:	mov    DWORD PTR [rbx+0x1290],0x0
    9105:	mov    edi,0xa
    910a:	pop    rbx
    910b:	jmp    4340 <putchar@plt>
    9110:	pop    rbx
    9111:	ret    
    9112:	nop    DWORD PTR [rax+0x0]
    9116:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009120 <interval_callback>:
    9120:	mov    eax,DWORD PTR [rip+0x21ffd2]        # 2290f8 <opt+0x58>
    9126:	sub    eax,0x1
    9129:	cmp    eax,0x1
    912c:	jbe    9150 <interval_callback+0x30>
    912e:	cmp    DWORD PTR [rip+0x21ffbf],0x6        # 2290f4 <opt+0x54>
    9135:	ja     9180 <interval_callback+0x60>
    9137:	mov    eax,DWORD PTR [rip+0x21ffb7]        # 2290f4 <opt+0x54>
    913d:	lea    rdx,[rip+0x19dfc]        # 22f40 <_IO_stdin_used+0x5f80>
    9144:	movsxd rax,DWORD PTR [rdx+rax*4]
    9148:	add    rax,rdx
    914b:	jmp    rax
    914d:	nop    DWORD PTR [rax]
    9150:	jmp    8630 <interval_table_output>
    9155:	nop    DWORD PTR [rax]
    9158:	jmp    90d0 <interval_domain_grant_maps_output>
    915d:	nop    DWORD PTR [rax]
    9160:	jmp    8aa0 <interval_cr3_schedule_ordered_output>
    9165:	nop    DWORD PTR [rax]
    9168:	jmp    8c20 <interval_cr3_short_summary_output>
    916d:	nop    DWORD PTR [rax]
    9170:	jmp    8ee0 <interval_domain_short_summary_output>
    9175:	nop    DWORD PTR [rax]
    9178:	jmp    9040 <interval_domain_guest_interrupt_output>
    917d:	nop    DWORD PTR [rax]
    9180:	repz ret 
    9182:	nop    DWORD PTR [rax+0x0]
    9186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009190 <interval_header>:
    9190:	mov    eax,DWORD PTR [rip+0x21ff5e]        # 2290f4 <opt+0x54>
    9196:	cmp    eax,0x2
    9199:	je     91b0 <interval_header+0x20>
    919b:	cmp    eax,0x4
    919e:	jne    91a8 <interval_header+0x18>
    91a0:	jmp    8e80 <interval_domain_short_summary_header>
    91a5:	nop    DWORD PTR [rax]
    91a8:	repz ret 
    91aa:	nop    WORD PTR [rax+rax*1+0x0]
    91b0:	jmp    8bc0 <interval_cr3_short_summary_header>
    91b5:	nop
    91b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000091c0 <interval_tail>:
    91c0:	cmp    DWORD PTR [rip+0x21ff31],0x2        # 2290f8 <opt+0x58>
    91c7:	je     91e0 <interval_tail+0x20>
    91c9:	cmp    DWORD PTR [rip+0x21ff24],0x5        # 2290f4 <opt+0x54>
    91d0:	je     91d8 <interval_tail+0x18>
    91d2:	repz ret 
    91d4:	nop    DWORD PTR [rax+0x0]
    91d8:	jmp    8fe0 <interval_domain_guest_interrupt_tail>
    91dd:	nop    DWORD PTR [rax]
    91e0:	jmp    86f0 <interval_table_tail>
    91e5:	nop
    91e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000091f0 <update_eip>:
    91f0:	push   r15
    91f2:	push   r14
    91f4:	movsxd r15,ecx
    91f7:	push   r13
    91f9:	push   r12
    91fb:	mov    r14,rdx
    91fe:	push   rbp
    91ff:	push   rbx
    9200:	mov    rbp,rdi
    9203:	mov    r12,rsi
    9206:	sub    rsp,0x18
    920a:	mov    rbx,QWORD PTR [rdi]
    920d:	test   rbx,rbx
    9210:	je     9238 <update_eip+0x48>
    9212:	mov    rax,QWORD PTR [rbx+0x8]
    9216:	cmp    rsi,rax
    9219:	ja     922d <update_eip+0x3d>
    921b:	jmp    92b8 <update_eip+0xc8>
    9220:	mov    rax,QWORD PTR [rbx+0x8]
    9224:	cmp    rax,r12
    9227:	jae    92b8 <update_eip+0xc8>
    922d:	mov    rbp,rbx
    9230:	mov    rbx,QWORD PTR [rbx]
    9233:	test   rbx,rbx
    9236:	jne    9220 <update_eip+0x30>
    9238:	mov    edi,0x58
    923d:	mov    QWORD PTR [rsp+0x8],r8
    9242:	call   4490 <malloc@plt>
    9247:	test   rax,rax
    924a:	mov    r13,rax
    924d:	mov    rbx,rax
    9250:	mov    r8,QWORD PTR [rsp+0x8]
    9255:	je     93b8 <update_eip+0x1c8>
    925b:	xor    eax,eax
    925d:	mov    ecx,0xb
    9262:	mov    rdi,r13
    9265:	rep stos QWORD PTR es:[rdi],rax
    9268:	lea    rdx,[r15+r15*2]
    926c:	lea    rax,[rip+0x25bfcd]        # 265240 <eip_list_type>
    9273:	mov    QWORD PTR [r13+0x8],r12
    9277:	mov    DWORD PTR [r13+0x48],r15d
    927b:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    9280:	test   rax,rax
    9283:	je     928d <update_eip+0x9d>
    9285:	mov    rsi,r8
    9288:	mov    rdi,r13
    928b:	call   rax
    928d:	mov    rax,QWORD PTR [rbp+0x0]
    9291:	mov    QWORD PTR [r13+0x0],rax
    9295:	mov    QWORD PTR [rbp+0x0],r13
    9299:	add    DWORD PTR [rbx+0x10],0x1
    929d:	test   r14,r14
    92a0:	jne    92f8 <update_eip+0x108>
    92a2:	add    rsp,0x18
    92a6:	pop    rbx
    92a7:	pop    rbp
    92a8:	pop    r12
    92aa:	pop    r13
    92ac:	pop    r14
    92ae:	pop    r15
    92b0:	ret    
    92b1:	nop    DWORD PTR [rax+0x0]
    92b8:	cmp    r12,rax
    92bb:	jne    9238 <update_eip+0x48>
    92c1:	mov    ecx,DWORD PTR [rbx+0x48]
    92c4:	cmp    ecx,r15d
    92c7:	jne    93e0 <update_eip+0x1f0>
    92cd:	lea    rdx,[r15+r15*2]
    92d1:	lea    rax,[rip+0x25bf68]        # 265240 <eip_list_type>
    92d8:	mov    rax,QWORD PTR [rax+rdx*8]
    92dc:	test   rax,rax
    92df:	je     9299 <update_eip+0xa9>
    92e1:	mov    rsi,r8
    92e4:	mov    rdi,rbx
    92e7:	call   rax
    92e9:	add    DWORD PTR [rbx+0x10],0x1
    92ed:	test   r14,r14
    92f0:	je     92a2 <update_eip+0xb2>
    92f2:	nop    WORD PTR [rax+rax*1+0x0]
    92f8:	mov    edx,DWORD PTR [rip+0x21fdda]        # 2290d8 <opt+0x38>
    92fe:	movsxd rcx,DWORD PTR [rbx+0x14]
    9302:	test   edx,edx
    9304:	mov    eax,ecx
    9306:	je     9390 <update_eip+0x1a0>
    930c:	mov    eax,DWORD PTR [rbx+0x18]
    930f:	cmp    eax,ecx
    9311:	jg     9408 <update_eip+0x218>
    9317:	test   ecx,ecx
    9319:	mov    ebp,DWORD PTR [rip+0x21fdbd]        # 2290dc <opt+0x3c>
    931f:	jne    9428 <update_eip+0x238>
    9325:	add    eax,eax
    9327:	cmovne edx,eax
    932a:	test   ebp,ebp
    932c:	je     9447 <update_eip+0x257>
    9332:	cmp    edx,ebp
    9334:	jle    9447 <update_eip+0x257>
    933a:	mov    rdi,QWORD PTR [rbx+0x28]
    933e:	movsxd rsi,ebp
    9341:	shl    rsi,0x3
    9345:	call   44c0 <realloc@plt>
    934a:	test   rax,rax
    934d:	je     943f <update_eip+0x24f>
    9353:	mov    QWORD PTR [rbx+0x28],rax
    9357:	mov    DWORD PTR [rbx+0x18],ebp
    935a:	movsxd rcx,DWORD PTR [rbx+0x14]
    935e:	cmp    ecx,ebp
    9360:	jl     9408 <update_eip+0x218>
    9366:	mov    eax,ecx
    9368:	cdq    
    9369:	idiv   ebp
    936b:	lea    esi,[rax+0x1]
    936e:	movsxd rdi,edx
    9371:	mov    edx,0x55555556
    9376:	mov    eax,esi
    9378:	imul   edx
    937a:	mov    eax,esi
    937c:	sar    eax,0x1f
    937f:	sub    eax,edx
    9381:	add    eax,edi
    9383:	cdq    
    9384:	idiv   esi
    9386:	mov    eax,ecx
    9388:	test   edx,edx
    938a:	je     9418 <update_eip+0x228>
    9390:	add    eax,0x1
    9393:	add    QWORD PTR [rbx+0x20],r14
    9397:	add    DWORD PTR [rbx+0x30],0x1
    939b:	mov    DWORD PTR [rbx+0x14],eax
    939e:	add    QWORD PTR [rbx+0x38],r14
    93a2:	add    rsp,0x18
    93a6:	pop    rbx
    93a7:	pop    rbp
    93a8:	pop    r12
    93aa:	pop    r13
    93ac:	pop    r14
    93ae:	pop    r15
    93b0:	ret    
    93b1:	nop    DWORD PTR [rax+0x0]
    93b8:	lea    rdi,[rip+0x13f0d]        # 1d2cc <_IO_stdin_used+0x30c>
    93bf:	call   4530 <perror@plt>
    93c4:	cmp    DWORD PTR [rip+0x21fd15],0x7        # 2290e0 <opt+0x40>
    93cb:	mov    r8,QWORD PTR [rsp+0x8]
    93d0:	ja     925b <update_eip+0x6b>
    93d6:	mov    edi,0x1
    93db:	call   4540 <exit@plt>
    93e0:	mov    rdi,QWORD PTR [rip+0x223059]        # 22c440 <stderr@@GLIBC_2.2.5>
    93e7:	lea    rdx,[rip+0x13eec]        # 1d2da <_IO_stdin_used+0x31a>
    93ee:	mov    r8d,r15d
    93f1:	mov    esi,0x1
    93f6:	xor    eax,eax
    93f8:	call   4560 <__fprintf_chk@plt>
    93fd:	jmp    9299 <update_eip+0xa9>
    9402:	nop    WORD PTR [rax+rax*1+0x0]
    9408:	mov    rax,QWORD PTR [rbx+0x28]
    940c:	mov    QWORD PTR [rax+rcx*8],r14
    9410:	mov    eax,DWORD PTR [rbx+0x14]
    9413:	jmp    9390 <update_eip+0x1a0>
    9418:	mov    rax,QWORD PTR [rbx+0x28]
    941c:	mov    QWORD PTR [rax+rdi*8],r14
    9420:	mov    eax,DWORD PTR [rbx+0x14]
    9423:	jmp    9390 <update_eip+0x1a0>
    9428:	test   ebp,ebp
    942a:	je     9325 <update_eip+0x135>
    9430:	cmp    eax,ebp
    9432:	jl     9325 <update_eip+0x135>
    9438:	mov    ebp,eax
    943a:	jmp    9366 <update_eip+0x176>
    943f:	mov    ebp,DWORD PTR [rbx+0x18]
    9442:	jmp    935a <update_eip+0x16a>
    9447:	mov    ebp,edx
    9449:	jmp    933a <update_eip+0x14a>
    944e:	xchg   ax,ax

0000000000009450 <dump_eip>:
    9450:	test   rdi,rdi
    9453:	je     9688 <dump_eip+0x238>
    9459:	push   r15
    945b:	push   r14
    945d:	mov    rax,rdi
    9460:	push   r13
    9462:	push   r12
    9464:	mov    r14,rdi
    9467:	push   rbp
    9468:	push   rbx
    9469:	xor    r13d,r13d
    946c:	xor    edx,edx
    946e:	sub    rsp,0x28
    9472:	nop    WORD PTR [rax+rax*1+0x0]
    9478:	mov    ebx,DWORD PTR [rax+0x14]
    947b:	mov    rax,QWORD PTR [rax]
    947e:	add    r13d,0x1
    9482:	add    ebx,edx
    9484:	test   rax,rax
    9487:	mov    edx,ebx
    9489:	jne    9478 <dump_eip+0x28>
    948b:	movsxd r15,r13d
    948e:	lea    rdi,[r15*8+0x0]
    9496:	call   4490 <malloc@plt>
    949b:	mov    r12,rax
    949e:	mov    rbp,rax
    94a1:	mov    QWORD PTR [rax],r14
    94a4:	mov    r14,QWORD PTR [r14]
    94a7:	add    rax,0x8
    94ab:	test   r14,r14
    94ae:	jne    94a1 <dump_eip+0x51>
    94b0:	lea    rcx,[rip+0xffffffffffffb419]        # 48d0 <eip_compare>
    94b7:	mov    edx,0x8
    94bc:	mov    rsi,r15
    94bf:	mov    rdi,r12
    94c2:	call   4390 <qsort@plt>
    94c7:	lea    rsi,[rip+0x13e29]        # 1d2f7 <_IO_stdin_used+0x337>
    94ce:	mov    edx,ebx
    94d0:	mov    edi,0x1
    94d5:	xor    eax,eax
    94d7:	call   44f0 <__printf_chk@plt>
    94dc:	lea    eax,[r13-0x1]
    94e0:	lea    r13,[rip+0x25bd59]        # 265240 <eip_list_type>
    94e7:	lea    r14,[r12+rax*8+0x8]
    94ec:	jmp    9618 <dump_eip+0x1c8>
    94f1:	nop    DWORD PTR [rax+0x0]
    94f8:	mov    esi,DWORD PTR [r15+0x10]
    94fc:	test   esi,esi
    94fe:	je     95f8 <dump_eip+0x1a8>
    9504:	mov    ecx,DWORD PTR [rip+0x21fbce]        # 2290d8 <opt+0x38>
    950a:	test   ecx,ecx
    950c:	je     96b0 <dump_eip+0x260>
    9512:	mov    ecx,DWORD PTR [r15+0x14]
    9516:	cmp    DWORD PTR [r15+0x18],ecx
    951a:	cmovle ecx,DWORD PTR [r15+0x18]
    951f:	test   ecx,ecx
    9521:	jne    97a0 <dump_eip+0x350>
    9527:	xor    r10d,r10d
    952a:	xor    r8d,r8d
    952d:	xor    r9d,r9d
    9530:	mov    rdi,QWORD PTR [r15+0x8]
    9534:	mov    QWORD PTR [rsp+0x18],r8
    9539:	mov    QWORD PTR [rsp+0x10],r9
    953e:	mov    QWORD PTR [rsp+0x8],r10
    9543:	call   73e0 <find_symbol>
    9548:	mov    rdx,QWORD PTR [r15+0x8]
    954c:	lea    rsi,[rip+0x13dba]        # 1d30d <_IO_stdin_used+0x34d>
    9553:	mov    rcx,rax
    9556:	mov    edi,0x1
    955b:	xor    eax,eax
    955d:	call   44f0 <__printf_chk@plt>
    9562:	mov    eax,DWORD PTR [r15+0x14]
    9566:	xor    ecx,ecx
    9568:	mov    rsi,QWORD PTR [r15+0x20]
    956c:	mov    r10,QWORD PTR [rsp+0x8]
    9571:	mov    r9,QWORD PTR [rsp+0x10]
    9576:	mov    r8,QWORD PTR [rsp+0x18]
    957b:	test   eax,eax
    957d:	je     958d <dump_eip+0x13d>
    957f:	movsxd rcx,eax
    9582:	xor    edx,edx
    9584:	mov    rax,rsi
    9587:	div    rcx
    958a:	mov    rcx,rax
    958d:	lea    rax,[rsi+rsi*4]
    9591:	pxor   xmm1,xmm1
    9595:	pxor   xmm0,xmm0
    9599:	lea    rdx,[rax+rax*4]
    959d:	shl    rdx,0x2
    95a1:	test   rsi,rsi
    95a4:	cvtsi2sd xmm0,QWORD PTR [rip+0x223c23]        # 22d1d0 <P+0x30>
    95ad:	cvtsi2sd xmm1,rdx
    95b2:	divsd  xmm1,xmm0
    95b6:	js     9780 <dump_eip+0x330>
    95bc:	pxor   xmm0,xmm0
    95c0:	cvtsi2sd xmm0,rsi
    95c5:	pxor   xmm2,xmm2
    95c9:	sub    rsp,0x8
    95cd:	mov    edx,DWORD PTR [r15+0x10]
    95d1:	lea    rsi,[rip+0x16200]        # 1f7d8 <_IO_stdin_used+0x2818>
    95d8:	push   r10
    95da:	mov    edi,0x1
    95df:	mov    eax,0x2
    95e4:	cvtsi2sd xmm2,QWORD PTR [rip+0x21fac3]        # 2290b0 <opt+0x10>
    95ed:	divsd  xmm0,xmm2
    95f1:	call   44f0 <__printf_chk@plt>
    95f6:	pop    rax
    95f7:	pop    rdx
    95f8:	movsxd rax,DWORD PTR [r15+0x48]
    95fc:	lea    rax,[rax+rax*2]
    9600:	mov    rax,QWORD PTR [r13+rax*8+0x10]
    9605:	test   rax,rax
    9608:	je     960f <dump_eip+0x1bf>
    960a:	mov    rdi,r15
    960d:	call   rax
    960f:	add    rbp,0x8
    9613:	cmp    r14,rbp
    9616:	je     9690 <dump_eip+0x240>
    9618:	mov    r15,QWORD PTR [rbp+0x0]
    961c:	cmp    QWORD PTR [r15+0x20],0x0
    9621:	jne    94f8 <dump_eip+0xa8>
    9627:	mov    rdi,QWORD PTR [r15+0x8]
    962b:	call   73e0 <find_symbol>
    9630:	mov    rdx,QWORD PTR [r15+0x8]
    9634:	lea    rsi,[rip+0x13cd2]        # 1d30d <_IO_stdin_used+0x34d>
    963b:	mov    rcx,rax
    963e:	mov    edi,0x1
    9643:	xor    eax,eax
    9645:	call   44f0 <__printf_chk@plt>
    964a:	mov    edx,DWORD PTR [r15+0x14]
    964e:	pxor   xmm0,xmm0
    9652:	pxor   xmm1,xmm1
    9656:	lea    rsi,[rip+0x13cc1]        # 1d31e <_IO_stdin_used+0x35e>
    965d:	mov    edi,0x1
    9662:	mov    eax,0x1
    9667:	cvtsi2sd xmm0,edx
    966b:	cvtsi2sd xmm1,ebx
    966f:	mulsd  xmm0,QWORD PTR [rip+0x1a231]        # 238a8 <__PRETTY_FUNCTION__.5713+0x18>
    9677:	divsd  xmm0,xmm1
    967b:	call   44f0 <__printf_chk@plt>
    9680:	jmp    95f8 <dump_eip+0x1a8>
    9685:	nop    DWORD PTR [rax]
    9688:	repz ret 
    968a:	nop    WORD PTR [rax+rax*1+0x0]
    9690:	add    rsp,0x28
    9694:	mov    rdi,r12
    9697:	pop    rbx
    9698:	pop    rbp
    9699:	pop    r12
    969b:	pop    r13
    969d:	pop    r14
    969f:	pop    r15
    96a1:	jmp    4330 <free@plt>
    96a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    96b0:	mov    rdi,QWORD PTR [r15+0x8]
    96b4:	call   73e0 <find_symbol>
    96b9:	mov    rdx,QWORD PTR [r15+0x8]
    96bd:	lea    rsi,[rip+0x13c49]        # 1d30d <_IO_stdin_used+0x34d>
    96c4:	mov    rcx,rax
    96c7:	mov    edi,0x1
    96cc:	xor    eax,eax
    96ce:	call   44f0 <__printf_chk@plt>
    96d3:	mov    eax,DWORD PTR [r15+0x14]
    96d7:	xor    ecx,ecx
    96d9:	mov    rsi,QWORD PTR [r15+0x20]
    96dd:	test   eax,eax
    96df:	jne    9748 <dump_eip+0x2f8>
    96e1:	lea    rdx,[rsi+rsi*4]
    96e5:	pxor   xmm1,xmm1
    96e9:	pxor   xmm0,xmm0
    96ed:	lea    rdx,[rdx+rdx*4]
    96f1:	shl    rdx,0x2
    96f5:	test   rsi,rsi
    96f8:	cvtsi2sd xmm0,QWORD PTR [rip+0x223acf]        # 22d1d0 <P+0x30>
    9701:	cvtsi2sd xmm1,rdx
    9706:	divsd  xmm1,xmm0
    970a:	js     9760 <dump_eip+0x310>
    970c:	pxor   xmm0,xmm0
    9710:	cvtsi2sd xmm0,rsi
    9715:	pxor   xmm2,xmm2
    9719:	mov    edx,DWORD PTR [r15+0x10]
    971d:	lea    rsi,[rip+0x160ec]        # 1f810 <_IO_stdin_used+0x2850>
    9724:	mov    edi,0x1
    9729:	mov    eax,0x2
    972e:	cvtsi2sd xmm2,QWORD PTR [rip+0x21f979]        # 2290b0 <opt+0x10>
    9737:	divsd  xmm0,xmm2
    973b:	call   44f0 <__printf_chk@plt>
    9740:	jmp    95f8 <dump_eip+0x1a8>
    9745:	nop    DWORD PTR [rax]
    9748:	movsxd rcx,eax
    974b:	xor    edx,edx
    974d:	mov    rax,rsi
    9750:	div    rcx
    9753:	mov    rcx,rax
    9756:	jmp    96e1 <dump_eip+0x291>
    9758:	nop    DWORD PTR [rax+rax*1+0x0]
    9760:	mov    rax,rsi
    9763:	pxor   xmm0,xmm0
    9767:	shr    rax,1
    976a:	and    esi,0x1
    976d:	or     rax,rsi
    9770:	cvtsi2sd xmm0,rax
    9775:	addsd  xmm0,xmm0
    9779:	jmp    9715 <dump_eip+0x2c5>
    977b:	nop    DWORD PTR [rax+rax*1+0x0]
    9780:	mov    rax,rsi
    9783:	pxor   xmm0,xmm0
    9787:	shr    rax,1
    978a:	and    esi,0x1
    978d:	or     rax,rsi
    9790:	cvtsi2sd xmm0,rax
    9795:	addsd  xmm0,xmm0
    9799:	jmp    95c5 <dump_eip+0x175>
    979e:	xchg   ax,ax
    97a0:	mov    rdi,QWORD PTR [r15+0x28]
    97a4:	mov    esi,ecx
    97a6:	mov    edx,0x32
    97ab:	mov    DWORD PTR [rsp+0x8],ecx
    97af:	call   4b30 <percentile.part.6>
    97b4:	mov    ecx,DWORD PTR [rsp+0x8]
    97b8:	mov    rdi,QWORD PTR [r15+0x28]
    97bc:	mov    edx,0x5
    97c1:	mov    QWORD PTR [rsp+0x18],rax
    97c6:	mov    esi,ecx
    97c8:	mov    DWORD PTR [rsp+0x10],ecx
    97cc:	call   4b30 <percentile.part.6>
    97d1:	mov    ecx,DWORD PTR [rsp+0x10]
    97d5:	mov    rdi,QWORD PTR [r15+0x28]
    97d9:	mov    edx,0x5f
    97de:	mov    QWORD PTR [rsp+0x8],rax
    97e3:	mov    esi,ecx
    97e5:	call   4b30 <percentile.part.6>
    97ea:	mov    r8,QWORD PTR [rsp+0x8]
    97ef:	mov    r10,rax
    97f2:	mov    r9,QWORD PTR [rsp+0x18]
    97f7:	jmp    9530 <dump_eip+0xe0>
    97fc:	nop    DWORD PTR [rax+0x0]

0000000000009800 <hvm_update_short_summary>:
    9800:	push   r15
    9802:	push   r14
    9804:	push   r13
    9806:	push   r12
    9808:	push   rbp
    9809:	push   rbx
    980a:	mov    rbp,rdi
    980d:	movsxd rbx,esi
    9810:	sub    rsp,0x18
    9814:	mov    r14,QWORD PTR [rdi+0x10]
    9818:	mov    r12,QWORD PTR [rdi+0x283e8]
    981f:	mov    r13,QWORD PTR [r14+0x70]
    9823:	test   r13,r13
    9826:	je     984b <hvm_update_short_summary+0x4b>
    9828:	lea    rax,[rbx*8+0x0]
    9830:	sub    rax,rbx
    9833:	lea    rcx,[r13+rax*8+0x0]
    9838:	add    DWORD PTR [rcx+0xe8],0x1
    983f:	test   r12,r12
    9842:	jne    9888 <hvm_update_short_summary+0x88>
    9844:	mov    r12,QWORD PTR [rbp+0x283e8]
    984b:	mov    r13,QWORD PTR [r14+0x8]
    984f:	lea    rax,[rbx*8+0x0]
    9857:	sub    rax,rbx
    985a:	lea    rcx,[r13+rax*8+0x0]
    985f:	add    DWORD PTR [rcx+0xf78],0x1
    9866:	test   r12,r12
    9869:	jne    99b8 <hvm_update_short_summary+0x1b8>
    986f:	or     BYTE PTR [rbp+0x28408],0x1
    9876:	add    rsp,0x18
    987a:	pop    rbx
    987b:	pop    rbp
    987c:	pop    r12
    987e:	pop    r13
    9880:	pop    r14
    9882:	pop    r15
    9884:	ret    
    9885:	nop    DWORD PTR [rax]
    9888:	mov    edx,DWORD PTR [rip+0x21f84a]        # 2290d8 <opt+0x38>
    988e:	movsxd rax,DWORD PTR [rcx+0xec]
    9895:	test   edx,edx
    9897:	je     9980 <hvm_update_short_summary+0x180>
    989d:	mov    ecx,DWORD PTR [rcx+0xf0]
    98a3:	cmp    ecx,eax
    98a5:	jg     9b08 <hvm_update_short_summary+0x308>
    98ab:	test   eax,eax
    98ad:	mov    r15d,DWORD PTR [rip+0x21f828]        # 2290dc <opt+0x3c>
    98b4:	je     98c8 <hvm_update_short_summary+0xc8>
    98b6:	test   r15d,r15d
    98b9:	je     98c8 <hvm_update_short_summary+0xc8>
    98bb:	cmp    ecx,r15d
    98be:	jl     98c8 <hvm_update_short_summary+0xc8>
    98c0:	mov    r15d,ecx
    98c3:	jmp    993f <hvm_update_short_summary+0x13f>
    98c5:	nop    DWORD PTR [rax]
    98c8:	add    ecx,ecx
    98ca:	cmovne edx,ecx
    98cd:	test   r15d,r15d
    98d0:	je     9b60 <hvm_update_short_summary+0x360>
    98d6:	cmp    edx,r15d
    98d9:	jle    9b60 <hvm_update_short_summary+0x360>
    98df:	lea    rax,[rbx*8+0x0]
    98e7:	movsxd rsi,r15d
    98ea:	shl    rsi,0x3
    98ee:	sub    rax,rbx
    98f1:	lea    rdx,[r13+rax*8+0x0]
    98f6:	mov    rdi,QWORD PTR [rdx+0x100]
    98fd:	mov    QWORD PTR [rsp+0x8],rdx
    9902:	call   44c0 <realloc@plt>
    9907:	test   rax,rax
    990a:	mov    rdx,QWORD PTR [rsp+0x8]
    990f:	je     9bb0 <hvm_update_short_summary+0x3b0>
    9915:	mov    QWORD PTR [rdx+0x100],rax
    991c:	mov    DWORD PTR [rdx+0xf0],r15d
    9923:	lea    rax,[rbx*8+0x0]
    992b:	sub    rax,rbx
    992e:	movsxd rax,DWORD PTR [r13+rax*8+0xec]
    9936:	cmp    eax,r15d
    9939:	jl     9b08 <hvm_update_short_summary+0x308>
    993f:	cdq    
    9940:	idiv   r15d
    9943:	lea    ecx,[rax+0x1]
    9946:	mov    esi,edx
    9948:	mov    edx,0x55555556
    994d:	mov    eax,ecx
    994f:	imul   edx
    9951:	mov    eax,ecx
    9953:	sar    eax,0x1f
    9956:	sub    eax,edx
    9958:	add    eax,esi
    995a:	cdq    
    995b:	idiv   ecx
    995d:	lea    rax,[rbx*8+0x0]
    9965:	sub    rax,rbx
    9968:	test   edx,edx
    996a:	je     9b70 <hvm_update_short_summary+0x370>
    9970:	mov    eax,DWORD PTR [r13+rax*8+0xec]
    9978:	nop    DWORD PTR [rax+rax*1+0x0]
    9980:	lea    rdx,[rbx*8+0x0]
    9988:	add    eax,0x1
    998b:	sub    rdx,rbx
    998e:	lea    rdx,[r13+rdx*8+0x0]
    9993:	mov    DWORD PTR [rdx+0xec],eax
    9999:	add    QWORD PTR [rdx+0xf8],r12
    99a0:	add    DWORD PTR [rdx+0x108],0x1
    99a7:	add    QWORD PTR [rdx+0x110],r12
    99ae:	jmp    9844 <hvm_update_short_summary+0x44>
    99b3:	nop    DWORD PTR [rax+rax*1+0x0]
    99b8:	mov    edx,DWORD PTR [rip+0x21f71a]        # 2290d8 <opt+0x38>
    99be:	movsxd rax,DWORD PTR [rcx+0xf7c]
    99c5:	test   edx,edx
    99c7:	je     9aa8 <hvm_update_short_summary+0x2a8>
    99cd:	mov    ecx,DWORD PTR [rcx+0xf80]
    99d3:	cmp    ecx,eax
    99d5:	jg     9ae0 <hvm_update_short_summary+0x2e0>
    99db:	test   eax,eax
    99dd:	mov    r14d,DWORD PTR [rip+0x21f6f8]        # 2290dc <opt+0x3c>
    99e4:	jne    9b40 <hvm_update_short_summary+0x340>
    99ea:	add    ecx,ecx
    99ec:	cmovne edx,ecx
    99ef:	cmp    edx,r14d
    99f2:	jle    9ba0 <hvm_update_short_summary+0x3a0>
    99f8:	test   r14d,r14d
    99fb:	je     9ba0 <hvm_update_short_summary+0x3a0>
    9a01:	lea    rax,[rbx*8+0x0]
    9a09:	movsxd rsi,r14d
    9a0c:	shl    rsi,0x3
    9a10:	sub    rax,rbx
    9a13:	lea    r15,[r13+rax*8+0x0]
    9a18:	mov    rdi,QWORD PTR [r15+0xf90]
    9a1f:	call   44c0 <realloc@plt>
    9a24:	test   rax,rax
    9a27:	je     9b90 <hvm_update_short_summary+0x390>
    9a2d:	mov    QWORD PTR [r15+0xf90],rax
    9a34:	mov    DWORD PTR [r15+0xf80],r14d
    9a3b:	lea    rax,[rbx*8+0x0]
    9a43:	sub    rax,rbx
    9a46:	movsxd rax,DWORD PTR [r13+rax*8+0xf7c]
    9a4e:	cmp    eax,r14d
    9a51:	jl     9ae0 <hvm_update_short_summary+0x2e0>
    9a57:	cdq    
    9a58:	idiv   r14d
    9a5b:	lea    ecx,[rax+0x1]
    9a5e:	mov    esi,edx
    9a60:	mov    edx,0x55555556
    9a65:	mov    eax,ecx
    9a67:	imul   edx
    9a69:	mov    eax,ecx
    9a6b:	sar    eax,0x1f
    9a6e:	sub    eax,edx
    9a70:	add    eax,esi
    9a72:	cdq    
    9a73:	idiv   ecx
    9a75:	lea    rax,[rbx*8+0x0]
    9a7d:	sub    rax,rbx
    9a80:	test   edx,edx
    9a82:	jne    9b30 <hvm_update_short_summary+0x330>
    9a88:	lea    rdx,[r13+rax*8+0x0]
    9a8d:	movsxd rax,esi
    9a90:	mov    rcx,QWORD PTR [rdx+0xf90]
    9a97:	mov    QWORD PTR [rcx+rax*8],r12
    9a9b:	mov    eax,DWORD PTR [rdx+0xf7c]
    9aa1:	nop    DWORD PTR [rax+0x0]
    9aa8:	lea    rdx,[rbx*8+0x0]
    9ab0:	add    eax,0x1
    9ab3:	sub    rdx,rbx
    9ab6:	lea    rdx,[r13+rdx*8+0x0]
    9abb:	mov    DWORD PTR [rdx+0xf7c],eax
    9ac1:	add    QWORD PTR [rdx+0xf88],r12
    9ac8:	add    DWORD PTR [rdx+0xf98],0x1
    9acf:	add    QWORD PTR [rdx+0xfa0],r12
    9ad6:	jmp    986f <hvm_update_short_summary+0x6f>
    9adb:	nop    DWORD PTR [rax+rax*1+0x0]
    9ae0:	lea    rdx,[rbx*8+0x0]
    9ae8:	sub    rdx,rbx
    9aeb:	lea    rdx,[r13+rdx*8+0x0]
    9af0:	mov    rcx,QWORD PTR [rdx+0xf90]
    9af7:	mov    QWORD PTR [rcx+rax*8],r12
    9afb:	mov    eax,DWORD PTR [rdx+0xf7c]
    9b01:	jmp    9aa8 <hvm_update_short_summary+0x2a8>
    9b03:	nop    DWORD PTR [rax+rax*1+0x0]
    9b08:	lea    rdx,[rbx*8+0x0]
    9b10:	sub    rdx,rbx
    9b13:	lea    rdx,[r13+rdx*8+0x0]
    9b18:	mov    rcx,QWORD PTR [rdx+0x100]
    9b1f:	mov    QWORD PTR [rcx+rax*8],r12
    9b23:	mov    eax,DWORD PTR [rdx+0xec]
    9b29:	jmp    9980 <hvm_update_short_summary+0x180>
    9b2e:	xchg   ax,ax
    9b30:	mov    eax,DWORD PTR [r13+rax*8+0xf7c]
    9b38:	jmp    9aa8 <hvm_update_short_summary+0x2a8>
    9b3d:	nop    DWORD PTR [rax]
    9b40:	test   r14d,r14d
    9b43:	je     99ea <hvm_update_short_summary+0x1ea>
    9b49:	cmp    ecx,r14d
    9b4c:	jl     99ea <hvm_update_short_summary+0x1ea>
    9b52:	mov    r14d,ecx
    9b55:	jmp    9a57 <hvm_update_short_summary+0x257>
    9b5a:	nop    WORD PTR [rax+rax*1+0x0]
    9b60:	mov    r15d,edx
    9b63:	jmp    98df <hvm_update_short_summary+0xdf>
    9b68:	nop    DWORD PTR [rax+rax*1+0x0]
    9b70:	lea    rdx,[r13+rax*8+0x0]
    9b75:	movsxd rax,esi
    9b78:	mov    rcx,QWORD PTR [rdx+0x100]
    9b7f:	mov    QWORD PTR [rcx+rax*8],r12
    9b83:	mov    eax,DWORD PTR [rdx+0xec]
    9b89:	jmp    9980 <hvm_update_short_summary+0x180>
    9b8e:	xchg   ax,ax
    9b90:	mov    r14d,DWORD PTR [r15+0xf80]
    9b97:	jmp    9a3b <hvm_update_short_summary+0x23b>
    9b9c:	nop    DWORD PTR [rax+0x0]
    9ba0:	mov    r14d,edx
    9ba3:	jmp    9a01 <hvm_update_short_summary+0x201>
    9ba8:	nop    DWORD PTR [rax+rax*1+0x0]
    9bb0:	mov    r15d,DWORD PTR [rdx+0xf0]
    9bb7:	jmp    9923 <hvm_update_short_summary+0x123>
    9bbc:	nop    DWORD PTR [rax+0x0]

0000000000009bc0 <shadow_fixup_postprocess>:
    9bc0:	mov    eax,DWORD PTR [rip+0x21f4de]        # 2290a4 <opt+0x4>
    9bc6:	push   r12
    9bc8:	push   rbp
    9bc9:	push   rbx
    9bca:	mov    rbx,rdi
    9bcd:	test   eax,eax
    9bcf:	je     9e55 <shadow_fixup_postprocess+0x295>
    9bd5:	mov    rbp,QWORD PTR [rdi+0x283e8]
    9bdc:	add    DWORD PTR [rdi+0x10a28],0x1
    9be3:	test   rbp,rbp
    9be6:	jne    9ff8 <shadow_fixup_postprocess+0x438>
    9bec:	test   BYTE PTR [rbx+0x28408],0x2
    9bf3:	je     9c0c <shadow_fixup_postprocess+0x4c>
    9bf5:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9bfc:	add    DWORD PTR [rbx+0x110f0],0x1
    9c03:	test   rbp,rbp
    9c06:	jne    a2e8 <shadow_fixup_postprocess+0x728>
    9c0c:	movzx  edx,BYTE PTR [rbx+0x28352]
    9c13:	test   dl,0x4
    9c16:	mov    eax,edx
    9c18:	je     9c4a <shadow_fixup_postprocess+0x8a>
    9c1a:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9c21:	add    DWORD PTR [rbx+0x11160],0x1
    9c28:	test   rbp,rbp
    9c2b:	jne    a3d8 <shadow_fixup_postprocess+0x818>
    9c31:	movsxd rcx,DWORD PTR [rbx+0x283d0]
    9c38:	cmp    ecx,0x1
    9c3b:	jle    a530 <shadow_fixup_postprocess+0x970>
    9c41:	add    DWORD PTR [rbx+0x11358],0x1
    9c48:	mov    eax,edx
    9c4a:	test   al,0x8
    9c4c:	je     9c65 <shadow_fixup_postprocess+0xa5>
    9c4e:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9c55:	add    DWORD PTR [rbx+0x11198],0x1
    9c5c:	test   rbp,rbp
    9c5f:	jne    a108 <shadow_fixup_postprocess+0x548>
    9c65:	test   al,0x10
    9c67:	je     9c80 <shadow_fixup_postprocess+0xc0>
    9c69:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9c70:	add    DWORD PTR [rbx+0x111d0],0x1
    9c77:	test   rbp,rbp
    9c7a:	jne    a1f8 <shadow_fixup_postprocess+0x638>
    9c80:	movzx  eax,BYTE PTR [rbx+0x28351]
    9c87:	test   al,0x2
    9c89:	mov    edx,eax
    9c8b:	je     9db6 <shadow_fixup_postprocess+0x1f6>
    9c91:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9c98:	add    DWORD PTR [rbx+0x11208],0x1
    9c9f:	test   rbp,rbp
    9ca2:	jne    9cd0 <shadow_fixup_postprocess+0x110>
    9ca4:	test   al,0x4
    9ca6:	je     9dbe <shadow_fixup_postprocess+0x1fe>
    9cac:	add    DWORD PTR [rbx+0x11278],0x1
    9cb3:	test   al,0x10
    9cb5:	je     a518 <shadow_fixup_postprocess+0x958>
    9cbb:	add    DWORD PTR [rbx+0x112b0],0x1
    9cc2:	jmp    9def <shadow_fixup_postprocess+0x22f>
    9cc7:	nop    WORD PTR [rax+rax*1+0x0]
    9cd0:	mov    edi,DWORD PTR [rip+0x21f402]        # 2290d8 <opt+0x38>
    9cd6:	movsxd rcx,DWORD PTR [rbx+0x1120c]
    9cdd:	test   edi,edi
    9cdf:	mov    esi,ecx
    9ce1:	je     9d98 <shadow_fixup_postprocess+0x1d8>
    9ce7:	mov    eax,DWORD PTR [rbx+0x11210]
    9ced:	cmp    eax,ecx
    9cef:	jg     a650 <shadow_fixup_postprocess+0xa90>
    9cf5:	test   ecx,ecx
    9cf7:	mov    r12d,DWORD PTR [rip+0x21f3de]        # 2290dc <opt+0x3c>
    9cfe:	je     9d0e <shadow_fixup_postprocess+0x14e>
    9d00:	test   r12d,r12d
    9d03:	je     9d0e <shadow_fixup_postprocess+0x14e>
    9d05:	cmp    eax,r12d
    9d08:	jge    a79f <shadow_fixup_postprocess+0xbdf>
    9d0e:	add    eax,eax
    9d10:	cmovne edi,eax
    9d13:	test   r12d,r12d
    9d16:	je     a77f <shadow_fixup_postprocess+0xbbf>
    9d1c:	cmp    edi,r12d
    9d1f:	jle    a77f <shadow_fixup_postprocess+0xbbf>
    9d25:	mov    rdi,QWORD PTR [rbx+0x11220]
    9d2c:	movsxd rsi,r12d
    9d2f:	shl    rsi,0x3
    9d33:	call   44c0 <realloc@plt>
    9d38:	test   rax,rax
    9d3b:	je     a713 <shadow_fixup_postprocess+0xb53>
    9d41:	mov    QWORD PTR [rbx+0x11220],rax
    9d48:	mov    DWORD PTR [rbx+0x11210],r12d
    9d4f:	movsxd rcx,DWORD PTR [rbx+0x1120c]
    9d56:	cmp    ecx,r12d
    9d59:	jl     a650 <shadow_fixup_postprocess+0xa90>
    9d5f:	mov    eax,ecx
    9d61:	cdq    
    9d62:	idiv   r12d
    9d65:	lea    esi,[rax+0x1]
    9d68:	movsxd rdi,edx
    9d6b:	mov    edx,0x55555556
    9d70:	mov    eax,esi
    9d72:	imul   edx
    9d74:	mov    eax,esi
    9d76:	sar    eax,0x1f
    9d79:	sub    eax,edx
    9d7b:	add    eax,edi
    9d7d:	cdq    
    9d7e:	idiv   esi
    9d80:	test   edx,edx
    9d82:	je     a6e0 <shadow_fixup_postprocess+0xb20>
    9d88:	movzx  eax,BYTE PTR [rbx+0x28351]
    9d8f:	mov    esi,ecx
    9d91:	mov    edx,eax
    9d93:	nop    DWORD PTR [rax+rax*1+0x0]
    9d98:	add    QWORD PTR [rbx+0x11218],rbp
    9d9f:	add    DWORD PTR [rbx+0x11228],0x1
    9da6:	add    esi,0x1
    9da9:	mov    DWORD PTR [rbx+0x1120c],esi
    9daf:	add    QWORD PTR [rbx+0x11230],rbp
    9db6:	test   al,0x4
    9db8:	jne    9ec8 <shadow_fixup_postprocess+0x308>
    9dbe:	test   al,0x10
    9dc0:	jne    9dcb <shadow_fixup_postprocess+0x20b>
    9dc2:	test   BYTE PTR [rbx+0x28408],0x4
    9dc9:	je     9def <shadow_fixup_postprocess+0x22f>
    9dcb:	mov    rcx,QWORD PTR [rip+0x25b486]        # 265258 <warn>
    9dd2:	lea    rdi,[rip+0x15c0f]        # 1f9e8 <_IO_stdin_used+0x2a28>
    9dd9:	mov    edx,0x21
    9dde:	mov    esi,0x1
    9de3:	call   4550 <fwrite@plt>
    9de8:	movzx  edx,BYTE PTR [rbx+0x28351]
    9def:	movzx  eax,BYTE PTR [rbx+0x28352]
    9df6:	and    eax,0x4
    9df9:	and    edx,0x2
    9dfc:	jne    9e40 <shadow_fixup_postprocess+0x280>
    9dfe:	test   BYTE PTR [rbx+0x28408],0x2
    9e05:	jne    9e40 <shadow_fixup_postprocess+0x280>
    9e07:	test   al,al
    9e09:	jne    9e48 <shadow_fixup_postprocess+0x288>
    9e0b:	mov    rsi,QWORD PTR [rbx+0x283e8]
    9e12:	add    DWORD PTR [rbx+0x11240],0x1
    9e19:	test   rsi,rsi
    9e1c:	je     a500 <shadow_fixup_postprocess+0x940>
    9e22:	lea    rdi,[rbx+0x11240]
    9e29:	call   4a20 <update_cycles.part.5>
    9e2e:	movzx  eax,BYTE PTR [rbx+0x28352]
    9e35:	and    eax,0x4
    9e38:	nop    DWORD PTR [rax+rax*1+0x0]
    9e40:	test   al,al
    9e42:	je     a500 <shadow_fixup_postprocess+0x940>
    9e48:	mov    esi,0x1
    9e4d:	mov    rdi,rbx
    9e50:	call   9800 <hvm_update_short_summary>
    9e55:	test   BYTE PTR [rip+0x21f244],0x2        # 2290a0 <opt>
    9e5c:	je     9ea0 <shadow_fixup_postprocess+0x2e0>
    9e5e:	test   BYTE PTR [rbx+0x28408],0x2
    9e65:	jne    9ea8 <shadow_fixup_postprocess+0x2e8>
    9e67:	test   BYTE PTR [rbx+0x28351],0x2
    9e6e:	je     9ea0 <shadow_fixup_postprocess+0x2e0>
    9e70:	test   BYTE PTR [rip+0x21f22b],0x20        # 2290a2 <opt+0x2>
    9e77:	je     a0f0 <shadow_fixup_postprocess+0x530>
    9e7d:	mov    rax,QWORD PTR [rbx+0x10]
    9e81:	mov    rax,QWORD PTR [rax+0x70]
    9e85:	test   rax,rax
    9e88:	je     9ea0 <shadow_fixup_postprocess+0x2e0>
    9e8a:	mov    rdi,QWORD PTR [rbx+0x283e0]
    9e91:	movsxd rsi,DWORD PTR [rax+0x18]
    9e95:	pop    rbx
    9e96:	pop    rbp
    9e97:	pop    r12
    9e99:	jmp    7700 <scatterplot_vs_time>
    9e9e:	xchg   ax,ax
    9ea0:	pop    rbx
    9ea1:	pop    rbp
    9ea2:	pop    r12
    9ea4:	ret    
    9ea5:	nop    DWORD PTR [rax]
    9ea8:	mov    rdi,QWORD PTR [rbx+0x283e0]
    9eaf:	xor    esi,esi
    9eb1:	call   7700 <scatterplot_vs_time>
    9eb6:	test   BYTE PTR [rbx+0x28351],0x2
    9ebd:	jne    9e70 <shadow_fixup_postprocess+0x2b0>
    9ebf:	jmp    9ea0 <shadow_fixup_postprocess+0x2e0>
    9ec1:	nop    DWORD PTR [rax+0x0]
    9ec8:	mov    rbp,QWORD PTR [rbx+0x283e8]
    9ecf:	add    DWORD PTR [rbx+0x11278],0x1
    9ed6:	test   rbp,rbp
    9ed9:	je     9cb3 <shadow_fixup_postprocess+0xf3>
    9edf:	mov    esi,DWORD PTR [rip+0x21f1f3]        # 2290d8 <opt+0x38>
    9ee5:	movsxd rcx,DWORD PTR [rbx+0x1127c]
    9eec:	test   esi,esi
    9eee:	mov    edx,ecx
    9ef0:	je     9fa0 <shadow_fixup_postprocess+0x3e0>
    9ef6:	mov    eax,DWORD PTR [rbx+0x11280]
    9efc:	cmp    eax,ecx
    9efe:	jg     a630 <shadow_fixup_postprocess+0xa70>
    9f04:	test   ecx,ecx
    9f06:	mov    r12d,DWORD PTR [rip+0x21f1cf]        # 2290dc <opt+0x3c>
    9f0d:	je     9f1d <shadow_fixup_postprocess+0x35d>
    9f0f:	test   r12d,r12d
    9f12:	je     9f1d <shadow_fixup_postprocess+0x35d>
    9f14:	cmp    eax,r12d
    9f17:	jge    a7af <shadow_fixup_postprocess+0xbef>
    9f1d:	add    eax,eax
    9f1f:	cmovne esi,eax
    9f22:	cmp    esi,r12d
    9f25:	jle    a76f <shadow_fixup_postprocess+0xbaf>
    9f2b:	test   r12d,r12d
    9f2e:	je     a76f <shadow_fixup_postprocess+0xbaf>
    9f34:	mov    rdi,QWORD PTR [rbx+0x11290]
    9f3b:	movsxd rsi,r12d
    9f3e:	shl    rsi,0x3
    9f42:	call   44c0 <realloc@plt>
    9f47:	test   rax,rax
    9f4a:	je     a743 <shadow_fixup_postprocess+0xb83>
    9f50:	mov    QWORD PTR [rbx+0x11290],rax
    9f57:	mov    DWORD PTR [rbx+0x11280],r12d
    9f5e:	movsxd rcx,DWORD PTR [rbx+0x1127c]
    9f65:	cmp    ecx,r12d
    9f68:	jl     a630 <shadow_fixup_postprocess+0xa70>
    9f6e:	mov    eax,ecx
    9f70:	cdq    
    9f71:	idiv   r12d
    9f74:	lea    esi,[rax+0x1]
    9f77:	movsxd rdi,edx
    9f7a:	mov    edx,0x55555556
    9f7f:	mov    eax,esi
    9f81:	imul   edx
    9f83:	mov    eax,esi
    9f85:	sar    eax,0x1f
    9f88:	sub    eax,edx
    9f8a:	add    eax,edi
    9f8c:	cdq    
    9f8d:	idiv   esi
    9f8f:	test   edx,edx
    9f91:	je     a680 <shadow_fixup_postprocess+0xac0>
    9f97:	movzx  eax,BYTE PTR [rbx+0x28351]
    9f9e:	mov    edx,ecx
    9fa0:	add    edx,0x1
    9fa3:	add    QWORD PTR [rbx+0x11288],rbp
    9faa:	add    DWORD PTR [rbx+0x11298],0x1
    9fb1:	mov    DWORD PTR [rbx+0x1127c],edx
    9fb7:	add    QWORD PTR [rbx+0x112a0],rbp
    9fbe:	test   al,0x10
    9fc0:	je     a550 <shadow_fixup_postprocess+0x990>
    9fc6:	mov    rsi,QWORD PTR [rbx+0x283e8]
    9fcd:	add    DWORD PTR [rbx+0x112b0],0x1
    9fd4:	test   rsi,rsi
    9fd7:	je     a528 <shadow_fixup_postprocess+0x968>
    9fdd:	lea    rdi,[rbx+0x112b0]
    9fe4:	call   4a20 <update_cycles.part.5>
    9fe9:	movzx  edx,BYTE PTR [rbx+0x28351]
    9ff0:	jmp    9def <shadow_fixup_postprocess+0x22f>
    9ff5:	nop    DWORD PTR [rax]
    9ff8:	mov    edx,DWORD PTR [rip+0x21f0da]        # 2290d8 <opt+0x38>
    9ffe:	movsxd rcx,DWORD PTR [rdi+0x10a2c]
    a005:	test   edx,edx
    a007:	mov    eax,ecx
    a009:	je     a0c0 <shadow_fixup_postprocess+0x500>
    a00f:	mov    eax,DWORD PTR [rdi+0x10a30]
    a015:	cmp    eax,ecx
    a017:	jg     a568 <shadow_fixup_postprocess+0x9a8>
    a01d:	test   ecx,ecx
    a01f:	mov    r12d,DWORD PTR [rip+0x21f0b6]        # 2290dc <opt+0x3c>
    a026:	je     a036 <shadow_fixup_postprocess+0x476>
    a028:	cmp    eax,r12d
    a02b:	jl     a036 <shadow_fixup_postprocess+0x476>
    a02d:	test   r12d,r12d
    a030:	jne    a74f <shadow_fixup_postprocess+0xb8f>
    a036:	add    eax,eax
    a038:	cmovne edx,eax
    a03b:	cmp    edx,r12d
    a03e:	jle    a6ff <shadow_fixup_postprocess+0xb3f>
    a044:	test   r12d,r12d
    a047:	je     a6ff <shadow_fixup_postprocess+0xb3f>
    a04d:	mov    rdi,QWORD PTR [rbx+0x10a40]
    a054:	movsxd rsi,r12d
    a057:	shl    rsi,0x3
    a05b:	call   44c0 <realloc@plt>
    a060:	test   rax,rax
    a063:	je     a670 <shadow_fixup_postprocess+0xab0>
    a069:	mov    QWORD PTR [rbx+0x10a40],rax
    a070:	mov    DWORD PTR [rbx+0x10a30],r12d
    a077:	movsxd rcx,DWORD PTR [rbx+0x10a2c]
    a07e:	cmp    ecx,r12d
    a081:	jl     a568 <shadow_fixup_postprocess+0x9a8>
    a087:	mov    eax,ecx
    a089:	cdq    
    a08a:	idiv   r12d
    a08d:	lea    esi,[rax+0x1]
    a090:	movsxd rdi,edx
    a093:	mov    edx,0x55555556
    a098:	mov    eax,esi
    a09a:	imul   edx
    a09c:	mov    eax,esi
    a09e:	sar    eax,0x1f
    a0a1:	sub    eax,edx
    a0a3:	add    eax,edi
    a0a5:	cdq    
    a0a6:	idiv   esi
    a0a8:	mov    eax,ecx
    a0aa:	test   edx,edx
    a0ac:	jne    a0c0 <shadow_fixup_postprocess+0x500>
    a0ae:	mov    rax,QWORD PTR [rbx+0x10a40]
    a0b5:	mov    QWORD PTR [rax+rdi*8],rbp
    a0b9:	mov    eax,DWORD PTR [rbx+0x10a2c]
    a0bf:	nop
    a0c0:	add    eax,0x1
    a0c3:	add    QWORD PTR [rbx+0x10a38],rbp
    a0ca:	add    DWORD PTR [rbx+0x10a48],0x1
    a0d1:	mov    DWORD PTR [rbx+0x10a2c],eax
    a0d7:	add    QWORD PTR [rbx+0x10a50],rbp
    a0de:	test   BYTE PTR [rbx+0x28408],0x2
    a0e5:	je     9c0c <shadow_fixup_postprocess+0x4c>
    a0eb:	jmp    9bf5 <shadow_fixup_postprocess+0x35>
    a0f0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    a0f7:	mov    esi,0x2
    a0fc:	pop    rbx
    a0fd:	pop    rbp
    a0fe:	pop    r12
    a100:	jmp    7700 <scatterplot_vs_time>
    a105:	nop    DWORD PTR [rax]
    a108:	mov    esi,DWORD PTR [rip+0x21efca]        # 2290d8 <opt+0x38>
    a10e:	movsxd rcx,DWORD PTR [rbx+0x1119c]
    a115:	test   esi,esi
    a117:	mov    edx,ecx
    a119:	je     a1d0 <shadow_fixup_postprocess+0x610>
    a11f:	mov    eax,DWORD PTR [rbx+0x111a0]
    a125:	cmp    eax,ecx
    a127:	jg     a5f0 <shadow_fixup_postprocess+0xa30>
    a12d:	test   ecx,ecx
    a12f:	mov    r12d,DWORD PTR [rip+0x21efa6]        # 2290dc <opt+0x3c>
    a136:	je     a146 <shadow_fixup_postprocess+0x586>
    a138:	test   r12d,r12d
    a13b:	je     a146 <shadow_fixup_postprocess+0x586>
    a13d:	cmp    eax,r12d
    a140:	jge    a78f <shadow_fixup_postprocess+0xbcf>
    a146:	add    eax,eax
    a148:	cmovne esi,eax
    a14b:	test   r12d,r12d
    a14e:	je     a75f <shadow_fixup_postprocess+0xb9f>
    a154:	cmp    esi,r12d
    a157:	jle    a75f <shadow_fixup_postprocess+0xb9f>
    a15d:	mov    rdi,QWORD PTR [rbx+0x111b0]
    a164:	movsxd rsi,r12d
    a167:	shl    rsi,0x3
    a16b:	call   44c0 <realloc@plt>
    a170:	test   rax,rax
    a173:	je     a72b <shadow_fixup_postprocess+0xb6b>
    a179:	mov    QWORD PTR [rbx+0x111b0],rax
    a180:	mov    DWORD PTR [rbx+0x111a0],r12d
    a187:	movsxd rcx,DWORD PTR [rbx+0x1119c]
    a18e:	cmp    ecx,r12d
    a191:	jl     a5f0 <shadow_fixup_postprocess+0xa30>
    a197:	mov    eax,ecx
    a199:	cdq    
    a19a:	idiv   r12d
    a19d:	lea    esi,[rax+0x1]
    a1a0:	movsxd rdi,edx
    a1a3:	mov    edx,0x55555556
    a1a8:	mov    eax,esi
    a1aa:	imul   edx
    a1ac:	mov    eax,esi
    a1ae:	sar    eax,0x1f
    a1b1:	sub    eax,edx
    a1b3:	add    eax,edi
    a1b5:	cdq    
    a1b6:	idiv   esi
    a1b8:	test   edx,edx
    a1ba:	je     a6a0 <shadow_fixup_postprocess+0xae0>
    a1c0:	movzx  eax,BYTE PTR [rbx+0x28352]
    a1c7:	mov    edx,ecx
    a1c9:	nop    DWORD PTR [rax+0x0]
    a1d0:	add    edx,0x1
    a1d3:	add    QWORD PTR [rbx+0x111a8],rbp
    a1da:	add    DWORD PTR [rbx+0x111b8],0x1
    a1e1:	mov    DWORD PTR [rbx+0x1119c],edx
    a1e7:	add    QWORD PTR [rbx+0x111c0],rbp
    a1ee:	jmp    9c65 <shadow_fixup_postprocess+0xa5>
    a1f3:	nop    DWORD PTR [rax+rax*1+0x0]
    a1f8:	mov    edx,DWORD PTR [rip+0x21eeda]        # 2290d8 <opt+0x38>
    a1fe:	movsxd rcx,DWORD PTR [rbx+0x111d4]
    a205:	test   edx,edx
    a207:	mov    eax,ecx
    a209:	je     a2c0 <shadow_fixup_postprocess+0x700>
    a20f:	mov    eax,DWORD PTR [rbx+0x111d8]
    a215:	cmp    eax,ecx
    a217:	jg     a610 <shadow_fixup_postprocess+0xa50>
    a21d:	test   ecx,ecx
    a21f:	mov    r12d,DWORD PTR [rip+0x21eeb6]        # 2290dc <opt+0x3c>
    a226:	je     a236 <shadow_fixup_postprocess+0x676>
    a228:	cmp    eax,r12d
    a22b:	jl     a236 <shadow_fixup_postprocess+0x676>
    a22d:	test   r12d,r12d
    a230:	jne    a7a7 <shadow_fixup_postprocess+0xbe7>
    a236:	add    eax,eax
    a238:	cmovne edx,eax
    a23b:	cmp    edx,r12d
    a23e:	jle    a757 <shadow_fixup_postprocess+0xb97>
    a244:	test   r12d,r12d
    a247:	je     a757 <shadow_fixup_postprocess+0xb97>
    a24d:	mov    rdi,QWORD PTR [rbx+0x111e8]
    a254:	movsxd rsi,r12d
    a257:	shl    rsi,0x3
    a25b:	call   44c0 <realloc@plt>
    a260:	test   rax,rax
    a263:	je     a71f <shadow_fixup_postprocess+0xb5f>
    a269:	mov    QWORD PTR [rbx+0x111e8],rax
    a270:	mov    DWORD PTR [rbx+0x111d8],r12d
    a277:	movsxd rcx,DWORD PTR [rbx+0x111d4]
    a27e:	cmp    ecx,r12d
    a281:	jl     a610 <shadow_fixup_postprocess+0xa50>
    a287:	mov    eax,ecx
    a289:	cdq    
    a28a:	idiv   r12d
    a28d:	lea    esi,[rax+0x1]
    a290:	movsxd rdi,edx
    a293:	mov    edx,0x55555556
    a298:	mov    eax,esi
    a29a:	imul   edx
    a29c:	mov    eax,esi
    a29e:	sar    eax,0x1f
    a2a1:	sub    eax,edx
    a2a3:	add    eax,edi
    a2a5:	cdq    
    a2a6:	idiv   esi
    a2a8:	mov    eax,ecx
    a2aa:	test   edx,edx
    a2ac:	jne    a2c0 <shadow_fixup_postprocess+0x700>
    a2ae:	mov    rax,QWORD PTR [rbx+0x111e8]
    a2b5:	mov    QWORD PTR [rax+rdi*8],rbp
    a2b9:	mov    eax,DWORD PTR [rbx+0x111d4]
    a2bf:	nop
    a2c0:	add    eax,0x1
    a2c3:	add    QWORD PTR [rbx+0x111e0],rbp
    a2ca:	add    DWORD PTR [rbx+0x111f0],0x1
    a2d1:	mov    DWORD PTR [rbx+0x111d4],eax
    a2d7:	add    QWORD PTR [rbx+0x111f8],rbp
    a2de:	jmp    9c80 <shadow_fixup_postprocess+0xc0>
    a2e3:	nop    DWORD PTR [rax+rax*1+0x0]
    a2e8:	mov    edx,DWORD PTR [rip+0x21edea]        # 2290d8 <opt+0x38>
    a2ee:	movsxd rcx,DWORD PTR [rbx+0x110f4]
    a2f5:	test   edx,edx
    a2f7:	mov    eax,ecx
    a2f9:	je     a3b0 <shadow_fixup_postprocess+0x7f0>
    a2ff:	mov    eax,DWORD PTR [rbx+0x110f8]
    a305:	cmp    eax,ecx
    a307:	jg     a5d0 <shadow_fixup_postprocess+0xa10>
    a30d:	test   ecx,ecx
    a30f:	mov    r12d,DWORD PTR [rip+0x21edc6]        # 2290dc <opt+0x3c>
    a316:	je     a326 <shadow_fixup_postprocess+0x766>
    a318:	cmp    eax,r12d
    a31b:	jl     a326 <shadow_fixup_postprocess+0x766>
    a31d:	test   r12d,r12d
    a320:	jne    a787 <shadow_fixup_postprocess+0xbc7>
    a326:	add    eax,eax
    a328:	cmovne edx,eax
    a32b:	test   r12d,r12d
    a32e:	je     a767 <shadow_fixup_postprocess+0xba7>
    a334:	cmp    edx,r12d
    a337:	jle    a767 <shadow_fixup_postprocess+0xba7>
    a33d:	mov    rdi,QWORD PTR [rbx+0x11108]
    a344:	movsxd rsi,r12d
    a347:	shl    rsi,0x3
    a34b:	call   44c0 <realloc@plt>
    a350:	test   rax,rax
    a353:	je     a737 <shadow_fixup_postprocess+0xb77>
    a359:	mov    QWORD PTR [rbx+0x11108],rax
    a360:	mov    DWORD PTR [rbx+0x110f8],r12d
    a367:	movsxd rcx,DWORD PTR [rbx+0x110f4]
    a36e:	cmp    ecx,r12d
    a371:	jl     a5d0 <shadow_fixup_postprocess+0xa10>
    a377:	mov    eax,ecx
    a379:	cdq    
    a37a:	idiv   r12d
    a37d:	lea    esi,[rax+0x1]
    a380:	movsxd rdi,edx
    a383:	mov    edx,0x55555556
    a388:	mov    eax,esi
    a38a:	imul   edx
    a38c:	mov    eax,esi
    a38e:	sar    eax,0x1f
    a391:	sub    eax,edx
    a393:	add    eax,edi
    a395:	cdq    
    a396:	idiv   esi
    a398:	mov    eax,ecx
    a39a:	test   edx,edx
    a39c:	jne    a3b0 <shadow_fixup_postprocess+0x7f0>
    a39e:	mov    rax,QWORD PTR [rbx+0x11108]
    a3a5:	mov    QWORD PTR [rax+rdi*8],rbp
    a3a9:	mov    eax,DWORD PTR [rbx+0x110f4]
    a3af:	nop
    a3b0:	add    eax,0x1
    a3b3:	add    QWORD PTR [rbx+0x11100],rbp
    a3ba:	add    DWORD PTR [rbx+0x11110],0x1
    a3c1:	mov    DWORD PTR [rbx+0x110f4],eax
    a3c7:	add    QWORD PTR [rbx+0x11118],rbp
    a3ce:	jmp    9c0c <shadow_fixup_postprocess+0x4c>
    a3d3:	nop    DWORD PTR [rax+rax*1+0x0]
    a3d8:	mov    edx,DWORD PTR [rip+0x21ecfa]        # 2290d8 <opt+0x38>
    a3de:	movsxd rcx,DWORD PTR [rbx+0x11164]
    a3e5:	mov    rsi,rbp
    a3e8:	test   edx,edx
    a3ea:	mov    eax,ecx
    a3ec:	je     a4a0 <shadow_fixup_postprocess+0x8e0>
    a3f2:	mov    eax,DWORD PTR [rbx+0x11168]
    a3f8:	cmp    eax,ecx
    a3fa:	jg     a5b0 <shadow_fixup_postprocess+0x9f0>
    a400:	test   ecx,ecx
    a402:	mov    r12d,DWORD PTR [rip+0x21ecd3]        # 2290dc <opt+0x3c>
    a409:	je     a419 <shadow_fixup_postprocess+0x859>
    a40b:	test   r12d,r12d
    a40e:	je     a419 <shadow_fixup_postprocess+0x859>
    a410:	cmp    eax,r12d
    a413:	jge    a797 <shadow_fixup_postprocess+0xbd7>
    a419:	add    eax,eax
    a41b:	cmovne edx,eax
    a41e:	test   r12d,r12d
    a421:	je     a777 <shadow_fixup_postprocess+0xbb7>
    a427:	cmp    edx,r12d
    a42a:	jle    a777 <shadow_fixup_postprocess+0xbb7>
    a430:	mov    rdi,QWORD PTR [rbx+0x11178]
    a437:	movsxd rsi,r12d
    a43a:	shl    rsi,0x3
    a43e:	call   44c0 <realloc@plt>
    a443:	test   rax,rax
    a446:	je     a707 <shadow_fixup_postprocess+0xb47>
    a44c:	mov    QWORD PTR [rbx+0x11178],rax
    a453:	mov    DWORD PTR [rbx+0x11168],r12d
    a45a:	movsxd rcx,DWORD PTR [rbx+0x11164]
    a461:	cmp    ecx,r12d
    a464:	jl     a5b0 <shadow_fixup_postprocess+0x9f0>
    a46a:	mov    eax,ecx
    a46c:	cdq    
    a46d:	idiv   r12d
    a470:	lea    esi,[rax+0x1]
    a473:	movsxd rdi,edx
    a476:	mov    edx,0x55555556
    a47b:	mov    eax,esi
    a47d:	imul   edx
    a47f:	mov    eax,esi
    a481:	sar    eax,0x1f
    a484:	sub    eax,edx
    a486:	add    eax,edi
    a488:	cdq    
    a489:	idiv   esi
    a48b:	test   edx,edx
    a48d:	je     a6c0 <shadow_fixup_postprocess+0xb00>
    a493:	mov    rsi,QWORD PTR [rbx+0x283e8]
    a49a:	mov    eax,ecx
    a49c:	nop    DWORD PTR [rax+0x0]
    a4a0:	add    eax,0x1
    a4a3:	add    QWORD PTR [rbx+0x11170],rbp
    a4aa:	add    DWORD PTR [rbx+0x11180],0x1
    a4b1:	mov    DWORD PTR [rbx+0x11164],eax
    a4b7:	movsxd rax,DWORD PTR [rbx+0x283d0]
    a4be:	add    QWORD PTR [rbx+0x11188],rbp
    a4c5:	cmp    eax,0x1
    a4c8:	jle    a580 <shadow_fixup_postprocess+0x9c0>
    a4ce:	add    DWORD PTR [rbx+0x11358],0x1
    a4d5:	test   rsi,rsi
    a4d8:	je     a7b7 <shadow_fixup_postprocess+0xbf7>
    a4de:	lea    rdi,[rbx+0x11358]
    a4e5:	call   4a20 <update_cycles.part.5>
    a4ea:	movzx  eax,BYTE PTR [rbx+0x28352]
    a4f1:	jmp    9c4a <shadow_fixup_postprocess+0x8a>
    a4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a500:	mov    esi,0x2
    a505:	mov    rdi,rbx
    a508:	call   9800 <hvm_update_short_summary>
    a50d:	jmp    9e55 <shadow_fixup_postprocess+0x295>
    a512:	nop    WORD PTR [rax+rax*1+0x0]
    a518:	test   BYTE PTR [rbx+0x28408],0x4
    a51f:	je     a528 <shadow_fixup_postprocess+0x968>
    a521:	add    DWORD PTR [rbx+0x112b0],0x1
    a528:	mov    edx,eax
    a52a:	jmp    9def <shadow_fixup_postprocess+0x22f>
    a52f:	nop
    a530:	lea    rdx,[rcx*8+0x0]
    a538:	sub    rdx,rcx
    a53b:	add    DWORD PTR [rbx+rdx*8+0x112e8],0x1
    a543:	jmp    9c4a <shadow_fixup_postprocess+0x8a>
    a548:	nop    DWORD PTR [rax+rax*1+0x0]
    a550:	test   BYTE PTR [rbx+0x28408],0x4
    a557:	jne    9fc6 <shadow_fixup_postprocess+0x406>
    a55d:	mov    edx,eax
    a55f:	jmp    9def <shadow_fixup_postprocess+0x22f>
    a564:	nop    DWORD PTR [rax+0x0]
    a568:	mov    rax,QWORD PTR [rbx+0x10a40]
    a56f:	mov    QWORD PTR [rax+rcx*8],rbp
    a573:	mov    eax,DWORD PTR [rbx+0x10a2c]
    a579:	jmp    a0c0 <shadow_fixup_postprocess+0x500>
    a57e:	xchg   ax,ax
    a580:	lea    rdx,[rax*8+0x0]
    a588:	sub    rdx,rax
    a58b:	mov    rax,rdx
    a58e:	shl    rax,0x3
    a592:	add    DWORD PTR [rbx+rax*1+0x112e8],0x1
    a59a:	test   rsi,rsi
    a59d:	lea    rdi,[rbx+rax*1+0x112e8]
    a5a5:	jne    a4e5 <shadow_fixup_postprocess+0x925>
    a5ab:	jmp    a4ea <shadow_fixup_postprocess+0x92a>
    a5b0:	mov    rax,QWORD PTR [rbx+0x11178]
    a5b7:	mov    QWORD PTR [rax+rcx*8],rbp
    a5bb:	mov    rsi,QWORD PTR [rbx+0x283e8]
    a5c2:	mov    eax,DWORD PTR [rbx+0x11164]
    a5c8:	jmp    a4a0 <shadow_fixup_postprocess+0x8e0>
    a5cd:	nop    DWORD PTR [rax]
    a5d0:	mov    rax,QWORD PTR [rbx+0x11108]
    a5d7:	mov    QWORD PTR [rax+rcx*8],rbp
    a5db:	mov    eax,DWORD PTR [rbx+0x110f4]
    a5e1:	jmp    a3b0 <shadow_fixup_postprocess+0x7f0>
    a5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a5f0:	mov    rax,QWORD PTR [rbx+0x111b0]
    a5f7:	mov    QWORD PTR [rax+rcx*8],rbp
    a5fb:	mov    edx,DWORD PTR [rbx+0x1119c]
    a601:	movzx  eax,BYTE PTR [rbx+0x28352]
    a608:	jmp    a1d0 <shadow_fixup_postprocess+0x610>
    a60d:	nop    DWORD PTR [rax]
    a610:	mov    rax,QWORD PTR [rbx+0x111e8]
    a617:	mov    QWORD PTR [rax+rcx*8],rbp
    a61b:	mov    eax,DWORD PTR [rbx+0x111d4]
    a621:	jmp    a2c0 <shadow_fixup_postprocess+0x700>
    a626:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a630:	mov    rax,QWORD PTR [rbx+0x11290]
    a637:	mov    QWORD PTR [rax+rcx*8],rbp
    a63b:	movzx  eax,BYTE PTR [rbx+0x28351]
    a642:	mov    edx,DWORD PTR [rbx+0x1127c]
    a648:	jmp    9fa0 <shadow_fixup_postprocess+0x3e0>
    a64d:	nop    DWORD PTR [rax]
    a650:	mov    rax,QWORD PTR [rbx+0x11220]
    a657:	mov    QWORD PTR [rax+rcx*8],rbp
    a65b:	movzx  eax,BYTE PTR [rbx+0x28351]
    a662:	mov    esi,DWORD PTR [rbx+0x1120c]
    a668:	mov    edx,eax
    a66a:	jmp    9d98 <shadow_fixup_postprocess+0x1d8>
    a66f:	nop
    a670:	mov    r12d,DWORD PTR [rbx+0x10a30]
    a677:	jmp    a077 <shadow_fixup_postprocess+0x4b7>
    a67c:	nop    DWORD PTR [rax+0x0]
    a680:	mov    rax,QWORD PTR [rbx+0x11290]
    a687:	mov    QWORD PTR [rax+rdi*8],rbp
    a68b:	movzx  eax,BYTE PTR [rbx+0x28351]
    a692:	mov    edx,DWORD PTR [rbx+0x1127c]
    a698:	jmp    9fa0 <shadow_fixup_postprocess+0x3e0>
    a69d:	nop    DWORD PTR [rax]
    a6a0:	mov    rax,QWORD PTR [rbx+0x111b0]
    a6a7:	mov    QWORD PTR [rax+rdi*8],rbp
    a6ab:	mov    edx,DWORD PTR [rbx+0x1119c]
    a6b1:	movzx  eax,BYTE PTR [rbx+0x28352]
    a6b8:	jmp    a1d0 <shadow_fixup_postprocess+0x610>
    a6bd:	nop    DWORD PTR [rax]
    a6c0:	mov    rax,QWORD PTR [rbx+0x11178]
    a6c7:	mov    QWORD PTR [rax+rdi*8],rbp
    a6cb:	mov    rsi,QWORD PTR [rbx+0x283e8]
    a6d2:	mov    eax,DWORD PTR [rbx+0x11164]
    a6d8:	jmp    a4a0 <shadow_fixup_postprocess+0x8e0>
    a6dd:	nop    DWORD PTR [rax]
    a6e0:	mov    rax,QWORD PTR [rbx+0x11220]
    a6e7:	mov    QWORD PTR [rax+rdi*8],rbp
    a6eb:	movzx  eax,BYTE PTR [rbx+0x28351]
    a6f2:	mov    esi,DWORD PTR [rbx+0x1120c]
    a6f8:	mov    edx,eax
    a6fa:	jmp    9d98 <shadow_fixup_postprocess+0x1d8>
    a6ff:	mov    r12d,edx
    a702:	jmp    a04d <shadow_fixup_postprocess+0x48d>
    a707:	mov    r12d,DWORD PTR [rbx+0x11168]
    a70e:	jmp    a45a <shadow_fixup_postprocess+0x89a>
    a713:	mov    r12d,DWORD PTR [rbx+0x11210]
    a71a:	jmp    9d4f <shadow_fixup_postprocess+0x18f>
    a71f:	mov    r12d,DWORD PTR [rbx+0x111d8]
    a726:	jmp    a277 <shadow_fixup_postprocess+0x6b7>
    a72b:	mov    r12d,DWORD PTR [rbx+0x111a0]
    a732:	jmp    a187 <shadow_fixup_postprocess+0x5c7>
    a737:	mov    r12d,DWORD PTR [rbx+0x110f8]
    a73e:	jmp    a367 <shadow_fixup_postprocess+0x7a7>
    a743:	mov    r12d,DWORD PTR [rbx+0x11280]
    a74a:	jmp    9f5e <shadow_fixup_postprocess+0x39e>
    a74f:	mov    r12d,eax
    a752:	jmp    a087 <shadow_fixup_postprocess+0x4c7>
    a757:	mov    r12d,edx
    a75a:	jmp    a24d <shadow_fixup_postprocess+0x68d>
    a75f:	mov    r12d,esi
    a762:	jmp    a15d <shadow_fixup_postprocess+0x59d>
    a767:	mov    r12d,edx
    a76a:	jmp    a33d <shadow_fixup_postprocess+0x77d>
    a76f:	mov    r12d,esi
    a772:	jmp    9f34 <shadow_fixup_postprocess+0x374>
    a777:	mov    r12d,edx
    a77a:	jmp    a430 <shadow_fixup_postprocess+0x870>
    a77f:	mov    r12d,edi
    a782:	jmp    9d25 <shadow_fixup_postprocess+0x165>
    a787:	mov    r12d,eax
    a78a:	jmp    a377 <shadow_fixup_postprocess+0x7b7>
    a78f:	mov    r12d,eax
    a792:	jmp    a197 <shadow_fixup_postprocess+0x5d7>
    a797:	mov    r12d,eax
    a79a:	jmp    a46a <shadow_fixup_postprocess+0x8aa>
    a79f:	mov    r12d,eax
    a7a2:	jmp    9d5f <shadow_fixup_postprocess+0x19f>
    a7a7:	mov    r12d,eax
    a7aa:	jmp    a287 <shadow_fixup_postprocess+0x6c7>
    a7af:	mov    r12d,eax
    a7b2:	jmp    9f6e <shadow_fixup_postprocess+0x3ae>
    a7b7:	movzx  edx,BYTE PTR [rbx+0x28352]
    a7be:	mov    eax,edx
    a7c0:	jmp    9c4a <shadow_fixup_postprocess+0x8a>
    a7c5:	nop
    a7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a7d0 <shadow_propagate_postprocess>:
    a7d0:	mov    eax,DWORD PTR [rip+0x21e8ce]        # 2290a4 <opt+0x4>
    a7d6:	test   eax,eax
    a7d8:	je     a830 <shadow_propagate_postprocess+0x60>
    a7da:	push   r14
    a7dc:	push   r13
    a7de:	push   r12
    a7e0:	push   rbp
    a7e1:	push   rbx
    a7e2:	movsxd rbp,DWORD PTR [rdi+0x28358]
    a7e9:	mov    rbx,rdi
    a7ec:	test   ebp,ebp
    a7ee:	je     a838 <shadow_propagate_postprocess+0x68>
    a7f0:	lea    rax,[rbp*8+0x0]
    a7f8:	mov    r12,QWORD PTR [rdi+0x283e8]
    a7ff:	sub    rax,rbp
    a802:	lea    rcx,[rdi+rax*8]
    a806:	add    DWORD PTR [rcx+0x108d8],0x1
    a80d:	test   r12,r12
    a810:	jne    a860 <shadow_propagate_postprocess+0x90>
    a812:	mov    rdi,rbx
    a815:	mov    esi,0x4
    a81a:	pop    rbx
    a81b:	pop    rbp
    a81c:	pop    r12
    a81e:	pop    r13
    a820:	pop    r14
    a822:	jmp    9800 <hvm_update_short_summary>
    a827:	nop    WORD PTR [rax+rax*1+0x0]
    a830:	repz ret 
    a832:	nop    WORD PTR [rax+rax*1+0x0]
    a838:	mov    rcx,QWORD PTR [rip+0x25aa19]        # 265258 <warn>
    a83f:	lea    rdi,[rip+0x12ae7]        # 1d32d <_IO_stdin_used+0x36d>
    a846:	mov    edx,0x14
    a84b:	mov    esi,0x1
    a850:	call   4550 <fwrite@plt>
    a855:	jmp    a812 <shadow_propagate_postprocess+0x42>
    a857:	nop    WORD PTR [rax+rax*1+0x0]
    a860:	mov    edx,DWORD PTR [rip+0x21e872]        # 2290d8 <opt+0x38>
    a866:	movsxd rax,DWORD PTR [rcx+0x108dc]
    a86d:	test   edx,edx
    a86f:	je     a940 <shadow_propagate_postprocess+0x170>
    a875:	mov    ecx,DWORD PTR [rcx+0x108e0]
    a87b:	cmp    ecx,eax
    a87d:	jg     a978 <shadow_propagate_postprocess+0x1a8>
    a883:	test   eax,eax
    a885:	mov    r13d,DWORD PTR [rip+0x21e850]        # 2290dc <opt+0x3c>
    a88c:	je     a89c <shadow_propagate_postprocess+0xcc>
    a88e:	cmp    ecx,r13d
    a891:	jl     a89c <shadow_propagate_postprocess+0xcc>
    a893:	test   r13d,r13d
    a896:	jne    a9ce <shadow_propagate_postprocess+0x1fe>
    a89c:	add    ecx,ecx
    a89e:	cmovne edx,ecx
    a8a1:	test   r13d,r13d
    a8a4:	je     a9c6 <shadow_propagate_postprocess+0x1f6>
    a8aa:	cmp    edx,r13d
    a8ad:	jle    a9c6 <shadow_propagate_postprocess+0x1f6>
    a8b3:	lea    rax,[rbp*8+0x0]
    a8bb:	movsxd rsi,r13d
    a8be:	shl    rsi,0x3
    a8c2:	sub    rax,rbp
    a8c5:	lea    r14,[rbx+rax*8]
    a8c9:	mov    rdi,QWORD PTR [r14+0x108f0]
    a8d0:	call   44c0 <realloc@plt>
    a8d5:	test   rax,rax
    a8d8:	je     a9ba <shadow_propagate_postprocess+0x1ea>
    a8de:	mov    QWORD PTR [r14+0x108f0],rax
    a8e5:	mov    DWORD PTR [r14+0x108e0],r13d
    a8ec:	lea    rax,[rbp*8+0x0]
    a8f4:	sub    rax,rbp
    a8f7:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    a8ff:	cmp    eax,r13d
    a902:	jl     a978 <shadow_propagate_postprocess+0x1a8>
    a904:	cdq    
    a905:	idiv   r13d
    a908:	lea    ecx,[rax+0x1]
    a90b:	mov    esi,edx
    a90d:	mov    edx,0x55555556
    a912:	mov    eax,ecx
    a914:	imul   edx
    a916:	mov    eax,ecx
    a918:	sar    eax,0x1f
    a91b:	sub    eax,edx
    a91d:	add    eax,esi
    a91f:	cdq    
    a920:	idiv   ecx
    a922:	lea    rax,[rbp*8+0x0]
    a92a:	sub    rax,rbp
    a92d:	test   edx,edx
    a92f:	je     a9a0 <shadow_propagate_postprocess+0x1d0>
    a931:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    a938:	nop    DWORD PTR [rax+rax*1+0x0]
    a940:	lea    rdx,[rbp*8+0x0]
    a948:	add    eax,0x1
    a94b:	sub    rdx,rbp
    a94e:	lea    rdx,[rbx+rdx*8]
    a952:	mov    DWORD PTR [rdx+0x108dc],eax
    a958:	add    QWORD PTR [rdx+0x108e8],r12
    a95f:	add    DWORD PTR [rdx+0x108f8],0x1
    a966:	add    QWORD PTR [rdx+0x10900],r12
    a96d:	jmp    a812 <shadow_propagate_postprocess+0x42>
    a972:	nop    WORD PTR [rax+rax*1+0x0]
    a978:	lea    rdx,[rbp*8+0x0]
    a980:	sub    rdx,rbp
    a983:	lea    rdx,[rbx+rdx*8]
    a987:	mov    rcx,QWORD PTR [rdx+0x108f0]
    a98e:	mov    QWORD PTR [rcx+rax*8],r12
    a992:	mov    eax,DWORD PTR [rdx+0x108dc]
    a998:	jmp    a940 <shadow_propagate_postprocess+0x170>
    a99a:	nop    WORD PTR [rax+rax*1+0x0]
    a9a0:	lea    rdx,[rbx+rax*8]
    a9a4:	movsxd rax,esi
    a9a7:	mov    rcx,QWORD PTR [rdx+0x108f0]
    a9ae:	mov    QWORD PTR [rcx+rax*8],r12
    a9b2:	mov    eax,DWORD PTR [rdx+0x108dc]
    a9b8:	jmp    a940 <shadow_propagate_postprocess+0x170>
    a9ba:	mov    r13d,DWORD PTR [r14+0x108e0]
    a9c1:	jmp    a8ec <shadow_propagate_postprocess+0x11c>
    a9c6:	mov    r13d,edx
    a9c9:	jmp    a8b3 <shadow_propagate_postprocess+0xe3>
    a9ce:	mov    r13d,ecx
    a9d1:	jmp    a904 <shadow_propagate_postprocess+0x134>
    a9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a9e0 <shadow_fault_generic_postprocess>:
    a9e0:	mov    r8d,DWORD PTR [rdi+0x28358]
    a9e7:	lea    eax,[r8-0x1]
    a9eb:	cmp    eax,0xa
    a9ee:	ja     aa48 <shadow_fault_generic_postprocess+0x68>
    a9f0:	mov    eax,DWORD PTR [rip+0x21e6ae]        # 2290a4 <opt+0x4>
    a9f6:	test   eax,eax
    a9f8:	je     aa40 <shadow_fault_generic_postprocess+0x60>
    a9fa:	push   r14
    a9fc:	push   r13
    a9fe:	push   r12
    aa00:	push   rbp
    aa01:	mov    rbp,rdi
    aa04:	push   rbx
    aa05:	movsxd rbx,r8d
    aa08:	mov    r12,QWORD PTR [rdi+0x283e8]
    aa0f:	lea    rax,[rbx*8+0x0]
    aa17:	sub    rax,rbx
    aa1a:	lea    rcx,[rdi+rax*8]
    aa1e:	add    DWORD PTR [rcx+0x108d8],0x1
    aa25:	test   r12,r12
    aa28:	jne    aa70 <shadow_fault_generic_postprocess+0x90>
    aa2a:	pop    rbx
    aa2b:	mov    rdi,rbp
    aa2e:	mov    esi,0x4
    aa33:	pop    rbp
    aa34:	pop    r12
    aa36:	pop    r13
    aa38:	pop    r14
    aa3a:	jmp    9800 <hvm_update_short_summary>
    aa3f:	nop
    aa40:	repz ret 
    aa42:	nop    WORD PTR [rax+rax*1+0x0]
    aa48:	mov    rdi,QWORD PTR [rip+0x25a809]        # 265258 <warn>
    aa4f:	lea    rcx,[rip+0x18a2a]        # 23480 <__func__.7131>
    aa56:	lea    rdx,[rip+0x14fb3]        # 1fa10 <_IO_stdin_used+0x2a50>
    aa5d:	mov    esi,0x1
    aa62:	xor    eax,eax
    aa64:	jmp    4560 <__fprintf_chk@plt>
    aa69:	nop    DWORD PTR [rax+0x0]
    aa70:	mov    edx,DWORD PTR [rip+0x21e662]        # 2290d8 <opt+0x38>
    aa76:	movsxd rax,DWORD PTR [rcx+0x108dc]
    aa7d:	test   edx,edx
    aa7f:	je     ab50 <shadow_fault_generic_postprocess+0x170>
    aa85:	mov    ecx,DWORD PTR [rcx+0x108e0]
    aa8b:	cmp    ecx,eax
    aa8d:	jg     ab88 <shadow_fault_generic_postprocess+0x1a8>
    aa93:	test   eax,eax
    aa95:	mov    r13d,DWORD PTR [rip+0x21e640]        # 2290dc <opt+0x3c>
    aa9c:	je     aaac <shadow_fault_generic_postprocess+0xcc>
    aa9e:	cmp    ecx,r13d
    aaa1:	jl     aaac <shadow_fault_generic_postprocess+0xcc>
    aaa3:	test   r13d,r13d
    aaa6:	jne    abdf <shadow_fault_generic_postprocess+0x1ff>
    aaac:	add    ecx,ecx
    aaae:	cmovne edx,ecx
    aab1:	test   r13d,r13d
    aab4:	je     abd7 <shadow_fault_generic_postprocess+0x1f7>
    aaba:	cmp    edx,r13d
    aabd:	jle    abd7 <shadow_fault_generic_postprocess+0x1f7>
    aac3:	lea    rax,[rbx*8+0x0]
    aacb:	movsxd rsi,r13d
    aace:	shl    rsi,0x3
    aad2:	sub    rax,rbx
    aad5:	lea    r14,[rbp+rax*8+0x0]
    aada:	mov    rdi,QWORD PTR [r14+0x108f0]
    aae1:	call   44c0 <realloc@plt>
    aae6:	test   rax,rax
    aae9:	je     abcb <shadow_fault_generic_postprocess+0x1eb>
    aaef:	mov    QWORD PTR [r14+0x108f0],rax
    aaf6:	mov    DWORD PTR [r14+0x108e0],r13d
    aafd:	lea    rax,[rbx*8+0x0]
    ab05:	sub    rax,rbx
    ab08:	movsxd rax,DWORD PTR [rbp+rax*8+0x108dc]
    ab10:	cmp    eax,r13d
    ab13:	jl     ab88 <shadow_fault_generic_postprocess+0x1a8>
    ab15:	cdq    
    ab16:	idiv   r13d
    ab19:	lea    ecx,[rax+0x1]
    ab1c:	mov    esi,edx
    ab1e:	mov    edx,0x55555556
    ab23:	mov    eax,ecx
    ab25:	imul   edx
    ab27:	mov    eax,ecx
    ab29:	sar    eax,0x1f
    ab2c:	sub    eax,edx
    ab2e:	add    eax,esi
    ab30:	cdq    
    ab31:	idiv   ecx
    ab33:	lea    rax,[rbx*8+0x0]
    ab3b:	sub    rax,rbx
    ab3e:	test   edx,edx
    ab40:	je     abb0 <shadow_fault_generic_postprocess+0x1d0>
    ab42:	mov    eax,DWORD PTR [rbp+rax*8+0x108dc]
    ab49:	nop    DWORD PTR [rax+0x0]
    ab50:	lea    rdx,[rbx*8+0x0]
    ab58:	add    eax,0x1
    ab5b:	sub    rdx,rbx
    ab5e:	lea    rdx,[rbp+rdx*8+0x0]
    ab63:	mov    DWORD PTR [rdx+0x108dc],eax
    ab69:	add    QWORD PTR [rdx+0x108e8],r12
    ab70:	add    DWORD PTR [rdx+0x108f8],0x1
    ab77:	add    QWORD PTR [rdx+0x10900],r12
    ab7e:	jmp    aa2a <shadow_fault_generic_postprocess+0x4a>
    ab83:	nop    DWORD PTR [rax+rax*1+0x0]
    ab88:	lea    rdx,[rbx*8+0x0]
    ab90:	sub    rdx,rbx
    ab93:	lea    rdx,[rbp+rdx*8+0x0]
    ab98:	mov    rcx,QWORD PTR [rdx+0x108f0]
    ab9f:	mov    QWORD PTR [rcx+rax*8],r12
    aba3:	mov    eax,DWORD PTR [rdx+0x108dc]
    aba9:	jmp    ab50 <shadow_fault_generic_postprocess+0x170>
    abab:	nop    DWORD PTR [rax+rax*1+0x0]
    abb0:	lea    rdx,[rbp+rax*8+0x0]
    abb5:	movsxd rax,esi
    abb8:	mov    rcx,QWORD PTR [rdx+0x108f0]
    abbf:	mov    QWORD PTR [rcx+rax*8],r12
    abc3:	mov    eax,DWORD PTR [rdx+0x108dc]
    abc9:	jmp    ab50 <shadow_fault_generic_postprocess+0x170>
    abcb:	mov    r13d,DWORD PTR [r14+0x108e0]
    abd2:	jmp    aafd <shadow_fault_generic_postprocess+0x11d>
    abd7:	mov    r13d,edx
    abda:	jmp    aac3 <shadow_fault_generic_postprocess+0xe3>
    abdf:	mov    r13d,ecx
    abe2:	jmp    ab15 <shadow_fault_generic_postprocess+0x135>
    abe7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000abf0 <shadow_emulate_postprocess>:
    abf0:	push   r15
    abf2:	push   r14
    abf4:	push   r13
    abf6:	push   r12
    abf8:	push   rbp
    abf9:	push   rbx
    abfa:	mov    rbx,rdi
    abfd:	sub    rsp,0x8
    ac01:	mov    eax,DWORD PTR [rip+0x21e49d]        # 2290a4 <opt+0x4>
    ac07:	test   eax,eax
    ac09:	jne    ac80 <shadow_emulate_postprocess+0x90>
    ac0b:	test   BYTE PTR [rip+0x21e48e],0x2        # 2290a0 <opt>
    ac12:	je     ac70 <shadow_emulate_postprocess+0x80>
    ac14:	test   BYTE PTR [rbx+0x28351],0x20
    ac1b:	jne    adc0 <shadow_emulate_postprocess+0x1d0>
    ac21:	test   BYTE PTR [rbx+0x28408],0x2
    ac28:	jne    ade0 <shadow_emulate_postprocess+0x1f0>
    ac2e:	test   BYTE PTR [rbx+0x28351],0x2
    ac35:	je     ac70 <shadow_emulate_postprocess+0x80>
    ac37:	test   BYTE PTR [rip+0x21e464],0x20        # 2290a2 <opt+0x2>
    ac3e:	je     ae48 <shadow_emulate_postprocess+0x258>
    ac44:	mov    rax,QWORD PTR [rbx+0x10]
    ac48:	mov    rax,QWORD PTR [rax+0x70]
    ac4c:	test   rax,rax
    ac4f:	je     ac70 <shadow_emulate_postprocess+0x80>
    ac51:	movsxd rsi,DWORD PTR [rax+0x18]
    ac55:	mov    rdi,QWORD PTR [rbx+0x283e0]
    ac5c:	add    rsp,0x8
    ac60:	pop    rbx
    ac61:	pop    rbp
    ac62:	pop    r12
    ac64:	pop    r13
    ac66:	pop    r14
    ac68:	pop    r15
    ac6a:	jmp    7700 <scatterplot_vs_time>
    ac6f:	nop
    ac70:	add    rsp,0x8
    ac74:	pop    rbx
    ac75:	pop    rbp
    ac76:	pop    r12
    ac78:	pop    r13
    ac7a:	pop    r14
    ac7c:	pop    r15
    ac7e:	ret    
    ac7f:	nop
    ac80:	mov    rax,QWORD PTR [rdi+0x10]
    ac84:	mov    rdx,QWORD PTR [rdi+0x283e8]
    ac8b:	xor    r8d,r8d
    ac8e:	mov    rsi,QWORD PTR [rdi+0x283f8]
    ac95:	xor    ecx,ecx
    ac97:	mov    rdi,QWORD PTR [rax+0x8]
    ac9b:	add    rdi,0x9e8
    aca2:	call   91f0 <update_eip>
    aca7:	mov    rbp,QWORD PTR [rbx+0x283e8]
    acae:	add    DWORD PTR [rbx+0x10a98],0x1
    acb5:	test   rbp,rbp
    acb8:	jne    aee0 <shadow_emulate_postprocess+0x2f0>
    acbe:	movsxd rdx,DWORD PTR [rbx+0x283a0]
    acc5:	lea    rax,[rdx*8+0x0]
    accd:	sub    rax,rdx
    acd0:	add    DWORD PTR [rbx+rax*8+0x10be8],0x1
    acd8:	test   BYTE PTR [rbx+0x28408],0x2
    acdf:	jne    ae00 <shadow_emulate_postprocess+0x210>
    ace5:	xor    esi,esi
    ace7:	test   BYTE PTR [rbx+0x28352],0x2
    acee:	jne    ae90 <shadow_emulate_postprocess+0x2a0>
    acf4:	test   BYTE PTR [rbx+0x28351],0x20
    acfb:	je     ad20 <shadow_emulate_postprocess+0x130>
    acfd:	add    DWORD PTR [rbx+0x10d00],0x1
    ad04:	test   rsi,rsi
    ad07:	je     ae2a <shadow_emulate_postprocess+0x23a>
    ad0d:	lea    rdi,[rbx+0x10d00]
    ad14:	call   4a20 <update_cycles.part.5>
    ad19:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ad20:	movzx  eax,BYTE PTR [rbx+0x28350]
    ad27:	test   al,0x20
    ad29:	je     aeb5 <shadow_emulate_postprocess+0x2c5>
    ad2f:	add    DWORD PTR [rbx+0x10d38],0x1
    ad36:	test   rsi,rsi
    ad39:	je     ad50 <shadow_emulate_postprocess+0x160>
    ad3b:	lea    rdi,[rbx+0x10d38]
    ad42:	call   4a20 <update_cycles.part.5>
    ad47:	movzx  eax,BYTE PTR [rbx+0x28350]
    ad4e:	xchg   ax,ax
    ad50:	test   al,0x40
    ad52:	je     ad6b <shadow_emulate_postprocess+0x17b>
    ad54:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ad5b:	add    DWORD PTR [rbx+0x10da8],0x1
    ad62:	test   rsi,rsi
    ad65:	jne    b1a8 <shadow_emulate_postprocess+0x5b8>
    ad6b:	test   al,al
    ad6d:	js     ae60 <shadow_emulate_postprocess+0x270>
    ad73:	movzx  eax,BYTE PTR [rbx+0x28351]
    ad7a:	test   al,0x2
    ad7c:	je     ad95 <shadow_emulate_postprocess+0x1a5>
    ad7e:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ad85:	add    DWORD PTR [rbx+0x10e18],0x1
    ad8c:	test   rsi,rsi
    ad8f:	jne    b1c0 <shadow_emulate_postprocess+0x5d0>
    ad95:	test   al,0x1
    ad97:	je     adb0 <shadow_emulate_postprocess+0x1c0>
    ad99:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ada0:	add    DWORD PTR [rbx+0x10e50],0x1
    ada7:	test   rsi,rsi
    adaa:	jne    b190 <shadow_emulate_postprocess+0x5a0>
    adb0:	xor    esi,esi
    adb2:	mov    rdi,rbx
    adb5:	call   9800 <hvm_update_short_summary>
    adba:	jmp    ac0b <shadow_emulate_postprocess+0x1b>
    adbf:	nop
    adc0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    adc7:	mov    rsi,0xfffffffffffffff6
    adce:	call   7700 <scatterplot_vs_time>
    add3:	test   BYTE PTR [rbx+0x28408],0x2
    adda:	je     ac2e <shadow_emulate_postprocess+0x3e>
    ade0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    ade7:	xor    esi,esi
    ade9:	call   7700 <scatterplot_vs_time>
    adee:	test   BYTE PTR [rbx+0x28351],0x2
    adf5:	jne    ac37 <shadow_emulate_postprocess+0x47>
    adfb:	jmp    ac70 <shadow_emulate_postprocess+0x80>
    ae00:	add    DWORD PTR [rbx+0x10e88],0x1
    ae07:	test   BYTE PTR [rbx+0x28352],0x2
    ae0e:	jne    ae90 <shadow_emulate_postprocess+0x2a0>
    ae14:	xor    esi,esi
    ae16:	test   BYTE PTR [rbx+0x28351],0x20
    ae1d:	je     ad20 <shadow_emulate_postprocess+0x130>
    ae23:	add    DWORD PTR [rbx+0x10d00],0x1
    ae2a:	movzx  eax,BYTE PTR [rbx+0x28350]
    ae31:	test   al,0x20
    ae33:	jne    afb0 <shadow_emulate_postprocess+0x3c0>
    ae39:	add    DWORD PTR [rbx+0x10d70],0x1
    ae40:	jmp    ad50 <shadow_emulate_postprocess+0x160>
    ae45:	nop    DWORD PTR [rax]
    ae48:	mov    rdi,QWORD PTR [rbx+0x283e0]
    ae4f:	mov    esi,0x2
    ae54:	jmp    ac5c <shadow_emulate_postprocess+0x6c>
    ae59:	nop    DWORD PTR [rax+0x0]
    ae60:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ae67:	add    DWORD PTR [rbx+0x10de0],0x1
    ae6e:	test   rsi,rsi
    ae71:	je     ad73 <shadow_emulate_postprocess+0x183>
    ae77:	lea    rdi,[rbx+0x10de0]
    ae7e:	call   4a20 <update_cycles.part.5>
    ae83:	jmp    ad73 <shadow_emulate_postprocess+0x183>
    ae88:	nop    DWORD PTR [rax+rax*1+0x0]
    ae90:	add    DWORD PTR [rbx+0x10ec0],0x1
    ae97:	test   BYTE PTR [rbx+0x28351],0x20
    ae9e:	jne    ae23 <shadow_emulate_postprocess+0x233>
    aea4:	movzx  eax,BYTE PTR [rbx+0x28350]
    aeab:	xor    esi,esi
    aead:	test   al,0x20
    aeaf:	jne    afb0 <shadow_emulate_postprocess+0x3c0>
    aeb5:	add    DWORD PTR [rbx+0x10d70],0x1
    aebc:	test   rsi,rsi
    aebf:	je     ad50 <shadow_emulate_postprocess+0x160>
    aec5:	lea    rdi,[rbx+0x10d70]
    aecc:	call   4a20 <update_cycles.part.5>
    aed1:	movzx  eax,BYTE PTR [rbx+0x28350]
    aed8:	jmp    ad50 <shadow_emulate_postprocess+0x160>
    aedd:	nop    DWORD PTR [rax]
    aee0:	mov    edx,DWORD PTR [rip+0x21e1f2]        # 2290d8 <opt+0x38>
    aee6:	movsxd rcx,DWORD PTR [rbx+0x10a9c]
    aeed:	test   edx,edx
    aeef:	mov    eax,ecx
    aef1:	je     afc0 <shadow_emulate_postprocess+0x3d0>
    aef7:	mov    eax,DWORD PTR [rbx+0x10aa0]
    aefd:	cmp    eax,ecx
    aeff:	jg     b210 <shadow_emulate_postprocess+0x620>
    af05:	test   ecx,ecx
    af07:	mov    r12d,DWORD PTR [rip+0x21e1ce]        # 2290dc <opt+0x3c>
    af0e:	je     af1e <shadow_emulate_postprocess+0x32e>
    af10:	cmp    eax,r12d
    af13:	jl     af1e <shadow_emulate_postprocess+0x32e>
    af15:	test   r12d,r12d
    af18:	jne    b2a0 <shadow_emulate_postprocess+0x6b0>
    af1e:	add    eax,eax
    af20:	cmovne edx,eax
    af23:	test   r12d,r12d
    af26:	je     b298 <shadow_emulate_postprocess+0x6a8>
    af2c:	cmp    edx,r12d
    af2f:	jle    b298 <shadow_emulate_postprocess+0x6a8>
    af35:	mov    rdi,QWORD PTR [rbx+0x10ab0]
    af3c:	movsxd rsi,r12d
    af3f:	shl    rsi,0x3
    af43:	call   44c0 <realloc@plt>
    af48:	test   rax,rax
    af4b:	je     b278 <shadow_emulate_postprocess+0x688>
    af51:	mov    QWORD PTR [rbx+0x10ab0],rax
    af58:	mov    DWORD PTR [rbx+0x10aa0],r12d
    af5f:	movsxd rcx,DWORD PTR [rbx+0x10a9c]
    af66:	cmp    ecx,r12d
    af69:	jl     b210 <shadow_emulate_postprocess+0x620>
    af6f:	mov    eax,ecx
    af71:	cdq    
    af72:	idiv   r12d
    af75:	lea    esi,[rax+0x1]
    af78:	movsxd rdi,edx
    af7b:	mov    edx,0x55555556
    af80:	mov    eax,esi
    af82:	imul   edx
    af84:	mov    eax,esi
    af86:	sar    eax,0x1f
    af89:	sub    eax,edx
    af8b:	add    eax,edi
    af8d:	cdq    
    af8e:	idiv   esi
    af90:	test   edx,edx
    af92:	je     b258 <shadow_emulate_postprocess+0x668>
    af98:	mov    r13,QWORD PTR [rbx+0x283e8]
    af9f:	mov    eax,ecx
    afa1:	mov    r12,r13
    afa4:	jmp    afc6 <shadow_emulate_postprocess+0x3d6>
    afa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    afb0:	add    DWORD PTR [rbx+0x10d38],0x1
    afb7:	jmp    ad50 <shadow_emulate_postprocess+0x160>
    afbc:	nop    DWORD PTR [rax+0x0]
    afc0:	mov    r12,rbp
    afc3:	mov    r13,rbp
    afc6:	add    QWORD PTR [rbx+0x10aa8],rbp
    afcd:	add    QWORD PTR [rbx+0x10ac0],rbp
    afd4:	add    eax,0x1
    afd7:	movsxd rbp,DWORD PTR [rbx+0x283a0]
    afde:	mov    DWORD PTR [rbx+0x10a9c],eax
    afe4:	add    DWORD PTR [rbx+0x10ab8],0x1
    afeb:	lea    rax,[rbp*8+0x0]
    aff3:	sub    rax,rbp
    aff6:	lea    rdx,[rbx+rax*8]
    affa:	add    DWORD PTR [rdx+0x10be8],0x1
    b001:	test   r12,r12
    b004:	je     b2b0 <shadow_emulate_postprocess+0x6c0>
    b00a:	mov    ecx,DWORD PTR [rip+0x21e0c8]        # 2290d8 <opt+0x38>
    b010:	movsxd rax,DWORD PTR [rdx+0x10bec]
    b017:	mov    rsi,r12
    b01a:	test   ecx,ecx
    b01c:	je     b0f8 <shadow_emulate_postprocess+0x508>
    b022:	mov    edx,DWORD PTR [rdx+0x10bf0]
    b028:	cmp    edx,eax
    b02a:	jg     b1e0 <shadow_emulate_postprocess+0x5f0>
    b030:	test   eax,eax
    b032:	mov    r14d,DWORD PTR [rip+0x21e0a3]        # 2290dc <opt+0x3c>
    b039:	je     b049 <shadow_emulate_postprocess+0x459>
    b03b:	test   r14d,r14d
    b03e:	je     b049 <shadow_emulate_postprocess+0x459>
    b040:	cmp    edx,r14d
    b043:	jge    b2a8 <shadow_emulate_postprocess+0x6b8>
    b049:	add    edx,edx
    b04b:	cmovne ecx,edx
    b04e:	cmp    ecx,r14d
    b051:	jle    b290 <shadow_emulate_postprocess+0x6a0>
    b057:	test   r14d,r14d
    b05a:	je     b290 <shadow_emulate_postprocess+0x6a0>
    b060:	lea    rax,[rbp*8+0x0]
    b068:	movsxd rsi,r14d
    b06b:	shl    rsi,0x3
    b06f:	sub    rax,rbp
    b072:	lea    r15,[rbx+rax*8]
    b076:	mov    rdi,QWORD PTR [r15+0x10c00]
    b07d:	call   44c0 <realloc@plt>
    b082:	test   rax,rax
    b085:	je     b284 <shadow_emulate_postprocess+0x694>
    b08b:	mov    QWORD PTR [r15+0x10c00],rax
    b092:	mov    DWORD PTR [r15+0x10bf0],r14d
    b099:	lea    rax,[rbp*8+0x0]
    b0a1:	sub    rax,rbp
    b0a4:	movsxd rax,DWORD PTR [rbx+rax*8+0x10bec]
    b0ac:	cmp    eax,r14d
    b0af:	jl     b1e0 <shadow_emulate_postprocess+0x5f0>
    b0b5:	cdq    
    b0b6:	idiv   r14d
    b0b9:	lea    ecx,[rax+0x1]
    b0bc:	mov    esi,edx
    b0be:	mov    edx,0x55555556
    b0c3:	mov    eax,ecx
    b0c5:	imul   edx
    b0c7:	mov    eax,ecx
    b0c9:	sar    eax,0x1f
    b0cc:	sub    eax,edx
    b0ce:	add    eax,esi
    b0d0:	cdq    
    b0d1:	idiv   ecx
    b0d3:	lea    rax,[rbp*8+0x0]
    b0db:	sub    rax,rbp
    b0de:	test   edx,edx
    b0e0:	je     b230 <shadow_emulate_postprocess+0x640>
    b0e6:	mov    eax,DWORD PTR [rbx+rax*8+0x10bec]
    b0ed:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b0f4:	nop    DWORD PTR [rax+0x0]
    b0f8:	lea    rdx,[rbp*8+0x0]
    b100:	add    eax,0x1
    b103:	sub    rdx,rbp
    b106:	lea    rdx,[rbx+rdx*8]
    b10a:	add    QWORD PTR [rdx+0x10bf8],r13
    b111:	add    DWORD PTR [rdx+0x10c08],0x1
    b118:	mov    DWORD PTR [rdx+0x10bec],eax
    b11e:	add    QWORD PTR [rdx+0x10c10],r12
    b125:	test   BYTE PTR [rbx+0x28408],0x2
    b12c:	je     b151 <shadow_emulate_postprocess+0x561>
    b12e:	add    DWORD PTR [rbx+0x10e88],0x1
    b135:	test   rsi,rsi
    b138:	je     ae07 <shadow_emulate_postprocess+0x217>
    b13e:	lea    rdi,[rbx+0x10e88]
    b145:	call   4a20 <update_cycles.part.5>
    b14a:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b151:	test   BYTE PTR [rbx+0x28352],0x2
    b158:	je     acf4 <shadow_emulate_postprocess+0x104>
    b15e:	add    DWORD PTR [rbx+0x10ec0],0x1
    b165:	test   rsi,rsi
    b168:	je     ae97 <shadow_emulate_postprocess+0x2a7>
    b16e:	lea    rdi,[rbx+0x10ec0]
    b175:	call   4a20 <update_cycles.part.5>
    b17a:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b181:	jmp    acf4 <shadow_emulate_postprocess+0x104>
    b186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b190:	lea    rdi,[rbx+0x10e50]
    b197:	call   4a20 <update_cycles.part.5>
    b19c:	jmp    adb0 <shadow_emulate_postprocess+0x1c0>
    b1a1:	nop    DWORD PTR [rax+0x0]
    b1a8:	lea    rdi,[rbx+0x10da8]
    b1af:	call   4a20 <update_cycles.part.5>
    b1b4:	movzx  eax,BYTE PTR [rbx+0x28350]
    b1bb:	jmp    ad6b <shadow_emulate_postprocess+0x17b>
    b1c0:	lea    rdi,[rbx+0x10e18]
    b1c7:	call   4a20 <update_cycles.part.5>
    b1cc:	movzx  eax,BYTE PTR [rbx+0x28351]
    b1d3:	jmp    ad95 <shadow_emulate_postprocess+0x1a5>
    b1d8:	nop    DWORD PTR [rax+rax*1+0x0]
    b1e0:	lea    rdx,[rbp*8+0x0]
    b1e8:	sub    rdx,rbp
    b1eb:	lea    rdx,[rbx+rdx*8]
    b1ef:	mov    rcx,QWORD PTR [rdx+0x10c00]
    b1f6:	mov    QWORD PTR [rcx+rax*8],r12
    b1fa:	mov    eax,DWORD PTR [rdx+0x10bec]
    b200:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b207:	jmp    b0f8 <shadow_emulate_postprocess+0x508>
    b20c:	nop    DWORD PTR [rax+0x0]
    b210:	mov    rax,QWORD PTR [rbx+0x10ab0]
    b217:	mov    QWORD PTR [rax+rcx*8],rbp
    b21b:	mov    r13,QWORD PTR [rbx+0x283e8]
    b222:	mov    eax,DWORD PTR [rbx+0x10a9c]
    b228:	mov    r12,r13
    b22b:	jmp    afc6 <shadow_emulate_postprocess+0x3d6>
    b230:	lea    rdx,[rbx+rax*8]
    b234:	movsxd rax,esi
    b237:	mov    rcx,QWORD PTR [rdx+0x10c00]
    b23e:	mov    QWORD PTR [rcx+rax*8],r12
    b242:	mov    eax,DWORD PTR [rdx+0x10bec]
    b248:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b24f:	jmp    b0f8 <shadow_emulate_postprocess+0x508>
    b254:	nop    DWORD PTR [rax+0x0]
    b258:	mov    rax,QWORD PTR [rbx+0x10ab0]
    b25f:	mov    QWORD PTR [rax+rdi*8],rbp
    b263:	mov    r13,QWORD PTR [rbx+0x283e8]
    b26a:	mov    eax,DWORD PTR [rbx+0x10a9c]
    b270:	mov    r12,r13
    b273:	jmp    afc6 <shadow_emulate_postprocess+0x3d6>
    b278:	mov    r12d,DWORD PTR [rbx+0x10aa0]
    b27f:	jmp    af5f <shadow_emulate_postprocess+0x36f>
    b284:	mov    r14d,DWORD PTR [r15+0x10bf0]
    b28b:	jmp    b099 <shadow_emulate_postprocess+0x4a9>
    b290:	mov    r14d,ecx
    b293:	jmp    b060 <shadow_emulate_postprocess+0x470>
    b298:	mov    r12d,edx
    b29b:	jmp    af35 <shadow_emulate_postprocess+0x345>
    b2a0:	mov    r12d,eax
    b2a3:	jmp    af6f <shadow_emulate_postprocess+0x37f>
    b2a8:	mov    r14d,edx
    b2ab:	jmp    b0b5 <shadow_emulate_postprocess+0x4c5>
    b2b0:	test   BYTE PTR [rbx+0x28408],0x2
    b2b7:	je     ace5 <shadow_emulate_postprocess+0xf5>
    b2bd:	add    DWORD PTR [rbx+0x10e88],0x1
    b2c4:	jmp    ace5 <shadow_emulate_postprocess+0xf5>
    b2c9:	nop    DWORD PTR [rax+0x0]

000000000000b2d0 <hvm_short_summary>:
    b2d0:	push   r15
    b2d2:	push   r14
    b2d4:	lea    r15,[rdi+0x4]
    b2d8:	push   r13
    b2da:	push   r12
    b2dc:	mov    r14,rdx
    b2df:	push   rbp
    b2e0:	push   rbx
    b2e1:	mov    r12,rsi
    b2e4:	lea    r13,[rip+0x21e215]        # 229500 <hvm_short_summary_name>
    b2eb:	sub    rsp,0x98
    b2f2:	mov    rax,QWORD PTR fs:0x28
    b2fb:	mov    QWORD PTR [rsp+0x88],rax
    b303:	xor    eax,eax
    b305:	mov    rax,rsi
    b308:	lea    rbp,[rsp+0x30]
    b30d:	and    eax,0x1
    b310:	mov    QWORD PTR [rsp+0x28],rax
    b315:	jmp    b424 <hvm_short_summary+0x154>
    b31a:	nop    WORD PTR [rax+rax*1+0x0]
    b320:	pxor   xmm0,xmm0
    b324:	cvtsi2sd xmm0,rsi
    b329:	lea    rax,[rsi+rsi*4]
    b32d:	pxor   xmm1,xmm1
    b331:	lea    rax,[rax+rax*4]
    b335:	cvtsi2sd xmm1,QWORD PTR [rip+0x21dd72]        # 2290b0 <opt+0x10>
    b33e:	divsd  xmm0,xmm1
    b342:	shl    rax,0x2
    b346:	test   rax,rax
    b349:	js     b4e0 <hvm_short_summary+0x210>
    b34f:	pxor   xmm1,xmm1
    b353:	cvtsi2sd xmm1,rax
    b358:	test   r12,r12
    b35b:	js     b498 <hvm_short_summary+0x1c8>
    b361:	pxor   xmm2,xmm2
    b365:	mov    esi,DWORD PTR [rip+0x21dd6d]        # 2290d8 <opt+0x38>
    b36b:	cvtsi2sd xmm2,r12
    b370:	test   esi,esi
    b372:	divsd  xmm1,xmm2
    b376:	je     b4c2 <hvm_short_summary+0x1f2>
    b37c:	cmp    DWORD PTR [r15+0x4],ecx
    b380:	mov    ebx,ecx
    b382:	mov    rdi,QWORD PTR [r15+0x14]
    b386:	cmovle ebx,DWORD PTR [r15+0x4]
    b38b:	mov    edx,0x32
    b390:	mov    QWORD PTR [rsp+0x20],r8
    b395:	movsd  QWORD PTR [rsp+0x18],xmm1
    b39b:	movsd  QWORD PTR [rsp+0x10],xmm0
    b3a1:	mov    esi,ebx
    b3a3:	call   79c0 <self_weighted_percentile>
    b3a8:	mov    rdi,QWORD PTR [r15+0x14]
    b3ac:	mov    edx,0x5
    b3b1:	mov    esi,ebx
    b3b3:	mov    QWORD PTR [rsp+0x8],rax
    b3b8:	call   79c0 <self_weighted_percentile>
    b3bd:	mov    rdi,QWORD PTR [r15+0x14]
    b3c1:	mov    edx,0x5f
    b3c6:	mov    esi,ebx
    b3c8:	mov    QWORD PTR [rsp],rax
    b3cc:	call   79c0 <self_weighted_percentile>
    b3d1:	push   rax
    b3d2:	mov    rcx,QWORD PTR [rsp+0x10]
    b3d7:	lea    rsi,[rip+0x1465a]        # 1fa38 <_IO_stdin_used+0x2a78>
    b3de:	mov    rdx,rbp
    b3e1:	mov    edi,0x1
    b3e6:	mov    eax,0x2
    b3eb:	push   rcx
    b3ec:	mov    r9,QWORD PTR [rsp+0x10]
    b3f1:	mov    r8,QWORD PTR [rsp+0x30]
    b3f6:	mov    ecx,DWORD PTR [r15]
    b3f9:	movsd  xmm1,QWORD PTR [rsp+0x28]
    b3ff:	movsd  xmm0,QWORD PTR [rsp+0x20]
    b405:	call   44f0 <__printf_chk@plt>
    b40a:	pop    rax
    b40b:	pop    rdx
    b40c:	lea    rax,[rip+0x21e13d]        # 229550 <hvm_short_summary_name+0x50>
    b413:	add    r13,0x8
    b417:	add    r15,0x38
    b41b:	cmp    r13,rax
    b41e:	je     b4f8 <hvm_short_summary+0x228>
    b424:	sub    rsp,0x8
    b428:	lea    r8,[rip+0x11f13]        # 1d342 <_IO_stdin_used+0x382>
    b42f:	push   QWORD PTR [r13+0x0]
    b433:	mov    ecx,0x50
    b438:	mov    rdi,rbp
    b43b:	xor    eax,eax
    b43d:	mov    r9,r14
    b440:	mov    edx,0x1
    b445:	mov    esi,0x50
    b44a:	call   4320 <__snprintf_chk@plt>
    b44f:	mov    ecx,DWORD PTR [r15]
    b452:	pop    rdi
    b453:	pop    r8
    b455:	test   ecx,ecx
    b457:	je     b40c <hvm_short_summary+0x13c>
    b459:	mov    rsi,QWORD PTR [r15+0xc]
    b45d:	xor    edx,edx
    b45f:	movsxd rdi,ecx
    b462:	mov    rax,rsi
    b465:	div    rdi
    b468:	test   rsi,rsi
    b46b:	mov    r8,rax
    b46e:	jns    b320 <hvm_short_summary+0x50>
    b474:	mov    rax,rsi
    b477:	mov    rdx,rsi
    b47a:	pxor   xmm0,xmm0
    b47e:	shr    rax,1
    b481:	and    edx,0x1
    b484:	or     rax,rdx
    b487:	cvtsi2sd xmm0,rax
    b48c:	addsd  xmm0,xmm0
    b490:	jmp    b329 <hvm_short_summary+0x59>
    b495:	nop    DWORD PTR [rax]
    b498:	mov    rax,r12
    b49b:	pxor   xmm2,xmm2
    b49f:	shr    rax,1
    b4a2:	or     rax,QWORD PTR [rsp+0x28]
    b4a7:	mov    esi,DWORD PTR [rip+0x21dc2b]        # 2290d8 <opt+0x38>
    b4ad:	test   esi,esi
    b4af:	cvtsi2sd xmm2,rax
    b4b4:	addsd  xmm2,xmm2
    b4b8:	divsd  xmm1,xmm2
    b4bc:	jne    b37c <hvm_short_summary+0xac>
    b4c2:	lea    rsi,[rip+0x145a7]        # 1fa70 <_IO_stdin_used+0x2ab0>
    b4c9:	mov    rdx,rbp
    b4cc:	mov    edi,0x1
    b4d1:	mov    eax,0x2
    b4d6:	call   44f0 <__printf_chk@plt>
    b4db:	jmp    b40c <hvm_short_summary+0x13c>
    b4e0:	pxor   xmm1,xmm1
    b4e4:	shr    rax,1
    b4e7:	cvtsi2sd xmm1,rax
    b4ec:	addsd  xmm1,xmm1
    b4f0:	jmp    b358 <hvm_short_summary+0x88>
    b4f5:	nop    DWORD PTR [rax]
    b4f8:	mov    rax,QWORD PTR [rsp+0x88]
    b500:	xor    rax,QWORD PTR fs:0x28
    b509:	jne    b51d <hvm_short_summary+0x24d>
    b50b:	add    rsp,0x98
    b512:	pop    rbx
    b513:	pop    rbp
    b514:	pop    r12
    b516:	pop    r13
    b518:	pop    r14
    b51a:	pop    r15
    b51c:	ret    
    b51d:	call   43c0 <__stack_chk_fail@plt>
    b522:	nop    DWORD PTR [rax+0x0]
    b526:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b530 <cr3_dump_list.part.15>:
    b530:	push   r15
    b532:	push   r14
    b534:	push   r13
    b536:	push   r12
    b538:	push   rbp
    b539:	push   rbx
    b53a:	sub    rsp,0x78
    b53e:	mov    rax,QWORD PTR fs:0x28
    b547:	mov    QWORD PTR [rsp+0x68],rax
    b54c:	xor    eax,eax
    b54e:	test   rdi,rdi
    b551:	je     bcb0 <cr3_dump_list.part.15+0x780>
    b557:	mov    rbx,rdi
    b55a:	mov    rax,rdi
    b55d:	xor    ebp,ebp
    b55f:	nop
    b560:	mov    rax,QWORD PTR [rax]
    b563:	add    ebp,0x1
    b566:	test   rax,rax
    b569:	jne    b560 <cr3_dump_list.part.15+0x30>
    b56b:	movsxd r12,ebp
    b56e:	lea    rdi,[r12*8+0x0]
    b576:	call   4490 <malloc@plt>
    b57b:	mov    QWORD PTR [rsp+0x38],rax
    b580:	mov    QWORD PTR [rax],rbx
    b583:	mov    rbx,QWORD PTR [rbx]
    b586:	add    rax,0x8
    b58a:	test   rbx,rbx
    b58d:	jne    b580 <cr3_dump_list.part.15+0x50>
    b58f:	mov    rbx,QWORD PTR [rsp+0x38]
    b594:	lea    rcx,[rip+0xffffffffffff9375]        # 4910 <cr3_compare_start>
    b59b:	mov    edx,0x8
    b5a0:	mov    rsi,r12
    b5a3:	lea    r13,[rsp+0x40]
    b5a8:	mov    rdi,rbx
    b5ab:	mov    r14,rbx
    b5ae:	call   4390 <qsort@plt>
    b5b3:	lea    rdi,[rip+0x11d8d]        # 1d347 <_IO_stdin_used+0x387>
    b5ba:	call   4380 <puts@plt>
    b5bf:	lea    eax,[rbp-0x1]
    b5c2:	lea    rax,[rbx+rax*8+0x8]
    b5c7:	mov    QWORD PTR [rsp+0x8],rax
    b5cc:	jmp    ba58 <cr3_dump_list.part.15+0x528>
    b5d1:	nop    DWORD PTR [rax+0x0]
    b5d8:	sub    rax,rsi
    b5db:	xor    edx,edx
    b5dd:	shl    rax,0xa
    b5e1:	div    QWORD PTR [rip+0x21dac0]        # 2290a8 <opt+0x8>
    b5e8:	mov    rdx,rax
    b5eb:	mov    rcx,rax
    b5ee:	movabs rax,0x44b82fa09b5a53
    b5f8:	shr    rdx,0x9
    b5fc:	mul    rdx
    b5ff:	mov    eax,ecx
    b601:	shr    rdx,0xb
    b605:	mov    DWORD PTR [rsp],edx
    b608:	imul   edx,edx,0x3b9aca00
    b60e:	sub    eax,edx
    b610:	mov    DWORD PTR [rsp+0x4],eax
    b614:	mov    rax,QWORD PTR [r12+0x28]
    b619:	cmp    rsi,rax
    b61c:	jae    ba8d <cr3_dump_list.part.15+0x55d>
    b622:	sub    rax,rsi
    b625:	xor    edx,edx
    b627:	mov    rbx,rax
    b62a:	shl    rbx,0xa
    b62e:	mov    rax,rbx
    b631:	div    QWORD PTR [rip+0x21da70]        # 2290a8 <opt+0x8>
    b638:	mov    rdx,rax
    b63b:	mov    rbx,rax
    b63e:	movabs rax,0x44b82fa09b5a53
    b648:	shr    rdx,0x9
    b64c:	mul    rdx
    b64f:	shr    rdx,0xb
    b653:	mov    r15d,edx
    b656:	imul   edx,edx,0x3b9aca00
    b65c:	sub    ebx,edx
    b65e:	mov    eax,DWORD PTR [r12+0x18]
    b663:	sub    rsp,0x8
    b667:	lea    r8,[rip+0x11ce9]        # 1d357 <_IO_stdin_used+0x397>
    b66e:	mov    ecx,0x1e
    b673:	mov    edx,0x1
    b678:	mov    esi,0x1e
    b67d:	mov    rdi,r13
    b680:	push   rax
    b681:	mov    r9,QWORD PTR [r12+0x10]
    b686:	xor    eax,eax
    b688:	call   4320 <__snprintf_chk@plt>
    b68d:	mov    ecx,DWORD PTR [r12+0x3c]
    b692:	pop    r8
    b694:	pop    r9
    b696:	test   ecx,ecx
    b698:	je     b768 <cr3_dump_list.part.15+0x238>
    b69e:	mov    rsi,QWORD PTR [r12+0x48]
    b6a3:	movsxd rdi,ecx
    b6a6:	xor    edx,edx
    b6a8:	mov    rax,rsi
    b6ab:	div    rdi
    b6ae:	mov    edi,DWORD PTR [rip+0x21da24]        # 2290d8 <opt+0x38>
    b6b4:	test   edi,edi
    b6b6:	mov    r8,rax
    b6b9:	je     bc30 <cr3_dump_list.part.15+0x700>
    b6bf:	cmp    DWORD PTR [r12+0x40],ecx
    b6c4:	mov    rdi,QWORD PTR [r12+0x50]
    b6c9:	mov    edx,0x32
    b6ce:	cmovle ecx,DWORD PTR [r12+0x40]
    b6d4:	mov    QWORD PTR [rsp+0x20],rax
    b6d9:	mov    esi,ecx
    b6db:	mov    ebp,ecx
    b6dd:	call   79c0 <self_weighted_percentile>
    b6e2:	mov    rdi,QWORD PTR [r12+0x50]
    b6e7:	mov    edx,0x5
    b6ec:	mov    esi,ebp
    b6ee:	mov    QWORD PTR [rsp+0x18],rax
    b6f3:	call   79c0 <self_weighted_percentile>
    b6f8:	mov    rdi,QWORD PTR [r12+0x50]
    b6fd:	mov    edx,0x5f
    b702:	mov    esi,ebp
    b704:	mov    QWORD PTR [rsp+0x10],rax
    b709:	call   79c0 <self_weighted_percentile>
    b70e:	mov    rdx,QWORD PTR [r12+0x48]
    b713:	mov    r9,QWORD PTR [rsp+0x10]
    b718:	mov    r11,QWORD PTR [rsp+0x18]
    b71d:	mov    r8,QWORD PTR [rsp+0x20]
    b722:	test   rdx,rdx
    b725:	js     bc70 <cr3_dump_list.part.15+0x740>
    b72b:	pxor   xmm0,xmm0
    b72f:	cvtsi2sd xmm0,rdx
    b734:	pxor   xmm1,xmm1
    b738:	mov    ecx,DWORD PTR [r12+0x3c]
    b73d:	lea    rsi,[rip+0x141f4]        # 1f938 <_IO_stdin_used+0x2978>
    b744:	push   rax
    b745:	push   r11
    b747:	mov    rdx,r13
    b74a:	mov    edi,0x1
    b74f:	mov    eax,0x1
    b754:	cvtsi2sd xmm1,QWORD PTR [rip+0x21d953]        # 2290b0 <opt+0x10>
    b75d:	divsd  xmm0,xmm1
    b761:	call   44f0 <__printf_chk@plt>
    b766:	pop    rax
    b767:	pop    rdx
    b768:	mov    ecx,DWORD PTR [r12+0x74]
    b76d:	mov    rsi,QWORD PTR [r12+0x30]
    b772:	movdqa xmm0,XMMWORD PTR [rip+0x18136]        # 238b0 <__PRETTY_FUNCTION__.5713+0x20>
    b77a:	test   ecx,ecx
    b77c:	movaps XMMWORD PTR [r13+0x0],xmm0
    b781:	je     b8ab <cr3_dump_list.part.15+0x37b>
    b787:	movsxd r8,ecx
    b78a:	xor    edx,edx
    b78c:	mov    rdi,QWORD PTR [r12+0x80]
    b794:	mov    rax,rdi
    b797:	div    r8
    b79a:	test   rdi,rdi
    b79d:	mov    r8,rax
    b7a0:	js     bc08 <cr3_dump_list.part.15+0x6d8>
    b7a6:	pxor   xmm0,xmm0
    b7aa:	cvtsi2sd xmm0,rdi
    b7af:	lea    rax,[rdi+rdi*4]
    b7b3:	pxor   xmm1,xmm1
    b7b7:	lea    rax,[rax+rax*4]
    b7bb:	cvtsi2sd xmm1,QWORD PTR [rip+0x21d8ec]        # 2290b0 <opt+0x10>
    b7c4:	divsd  xmm0,xmm1
    b7c8:	shl    rax,0x2
    b7cc:	test   rax,rax
    b7cf:	js     bbf0 <cr3_dump_list.part.15+0x6c0>
    b7d5:	pxor   xmm1,xmm1
    b7d9:	cvtsi2sd xmm1,rax
    b7de:	test   rsi,rsi
    b7e1:	js     bba0 <cr3_dump_list.part.15+0x670>
    b7e7:	pxor   xmm2,xmm2
    b7eb:	mov    ebp,DWORD PTR [rip+0x21d8e7]        # 2290d8 <opt+0x38>
    b7f1:	cvtsi2sd xmm2,rsi
    b7f6:	test   ebp,ebp
    b7f8:	divsd  xmm1,xmm2
    b7fc:	je     bbcb <cr3_dump_list.part.15+0x69b>
    b802:	cmp    DWORD PTR [r12+0x78],ecx
    b807:	mov    rdi,QWORD PTR [r12+0x88]
    b80f:	mov    edx,0x32
    b814:	cmovle ecx,DWORD PTR [r12+0x78]
    b81a:	mov    QWORD PTR [rsp+0x30],r8
    b81f:	movsd  QWORD PTR [rsp+0x28],xmm1
    b825:	movsd  QWORD PTR [rsp+0x20],xmm0
    b82b:	mov    esi,ecx
    b82d:	mov    ebp,ecx
    b82f:	call   79c0 <self_weighted_percentile>
    b834:	mov    rdi,QWORD PTR [r12+0x88]
    b83c:	mov    edx,0x5
    b841:	mov    esi,ebp
    b843:	mov    QWORD PTR [rsp+0x18],rax
    b848:	call   79c0 <self_weighted_percentile>
    b84d:	mov    rdi,QWORD PTR [r12+0x88]
    b855:	mov    edx,0x5f
    b85a:	mov    esi,ebp
    b85c:	mov    QWORD PTR [rsp+0x10],rax
    b861:	call   79c0 <self_weighted_percentile>
    b866:	mov    ecx,DWORD PTR [r12+0x74]
    b86b:	push   rax
    b86c:	lea    rsi,[rip+0x141c5]        # 1fa38 <_IO_stdin_used+0x2a78>
    b873:	mov    r11,QWORD PTR [rsp+0x20]
    b878:	mov    rdx,r13
    b87b:	mov    edi,0x1
    b880:	mov    eax,0x2
    b885:	push   r11
    b887:	mov    r9,QWORD PTR [rsp+0x20]
    b88c:	mov    r8,QWORD PTR [rsp+0x40]
    b891:	movsd  xmm1,QWORD PTR [rsp+0x38]
    b897:	movsd  xmm0,QWORD PTR [rsp+0x30]
    b89d:	call   44f0 <__printf_chk@plt>
    b8a2:	pop    r10
    b8a4:	pop    r11
    b8a6:	mov    rsi,QWORD PTR [r12+0x30]
    b8ab:	mov    ecx,DWORD PTR [r12+0xac]
    b8b3:	movdqa xmm0,XMMWORD PTR [rip+0x18005]        # 238c0 <__PRETTY_FUNCTION__.5713+0x30>
    b8bb:	test   ecx,ecx
    b8bd:	movaps XMMWORD PTR [r13+0x0],xmm0
    b8c2:	je     b9f5 <cr3_dump_list.part.15+0x4c5>
    b8c8:	movsxd r8,ecx
    b8cb:	xor    edx,edx
    b8cd:	mov    rdi,QWORD PTR [r12+0xb8]
    b8d5:	mov    rax,rdi
    b8d8:	div    r8
    b8db:	test   rdi,rdi
    b8de:	mov    r8,rax
    b8e1:	js     bb78 <cr3_dump_list.part.15+0x648>
    b8e7:	pxor   xmm0,xmm0
    b8eb:	cvtsi2sd xmm0,rdi
    b8f0:	lea    rax,[rdi+rdi*4]
    b8f4:	pxor   xmm1,xmm1
    b8f8:	lea    rax,[rax+rax*4]
    b8fc:	cvtsi2sd xmm1,QWORD PTR [rip+0x21d7ab]        # 2290b0 <opt+0x10>
    b905:	divsd  xmm0,xmm1
    b909:	shl    rax,0x2
    b90d:	test   rax,rax
    b910:	js     bb60 <cr3_dump_list.part.15+0x630>
    b916:	pxor   xmm1,xmm1
    b91a:	cvtsi2sd xmm1,rax
    b91f:	test   rsi,rsi
    b922:	js     bb10 <cr3_dump_list.part.15+0x5e0>
    b928:	pxor   xmm2,xmm2
    b92c:	mov    r9d,DWORD PTR [rip+0x21d7a5]        # 2290d8 <opt+0x38>
    b933:	cvtsi2sd xmm2,rsi
    b938:	test   r9d,r9d
    b93b:	divsd  xmm1,xmm2
    b93f:	je     bb3d <cr3_dump_list.part.15+0x60d>
    b945:	cmp    DWORD PTR [r12+0xb0],ecx
    b94d:	mov    rdi,QWORD PTR [r12+0xc0]
    b955:	mov    edx,0x32
    b95a:	cmovle ecx,DWORD PTR [r12+0xb0]
    b963:	mov    QWORD PTR [rsp+0x30],r8
    b968:	movsd  QWORD PTR [rsp+0x28],xmm1
    b96e:	movsd  QWORD PTR [rsp+0x20],xmm0
    b974:	mov    esi,ecx
    b976:	mov    ebp,ecx
    b978:	call   79c0 <self_weighted_percentile>
    b97d:	mov    rdi,QWORD PTR [r12+0xc0]
    b985:	mov    edx,0x5
    b98a:	mov    esi,ebp
    b98c:	mov    QWORD PTR [rsp+0x18],rax
    b991:	call   79c0 <self_weighted_percentile>
    b996:	mov    rdi,QWORD PTR [r12+0xc0]
    b99e:	mov    edx,0x5f
    b9a3:	mov    esi,ebp
    b9a5:	mov    QWORD PTR [rsp+0x10],rax
    b9aa:	call   79c0 <self_weighted_percentile>
    b9af:	mov    ecx,DWORD PTR [r12+0xac]
    b9b7:	push   rax
    b9b8:	lea    rsi,[rip+0x14079]        # 1fa38 <_IO_stdin_used+0x2a78>
    b9bf:	mov    r11,QWORD PTR [rsp+0x20]
    b9c4:	mov    edi,0x1
    b9c9:	mov    rdx,r13
    b9cc:	mov    eax,0x2
    b9d1:	push   r11
    b9d3:	mov    r9,QWORD PTR [rsp+0x20]
    b9d8:	mov    r8,QWORD PTR [rsp+0x40]
    b9dd:	movsd  xmm1,QWORD PTR [rsp+0x38]
    b9e3:	movsd  xmm0,QWORD PTR [rsp+0x30]
    b9e9:	call   44f0 <__printf_chk@plt>
    b9ee:	pop    rcx
    b9ef:	pop    rdi
    b9f0:	mov    rsi,QWORD PTR [r12+0x30]
    b9f5:	lea    rdi,[r12+0xe8]
    b9fd:	lea    rdx,[rip+0x11963]        # 1d367 <_IO_stdin_used+0x3a7>
    ba04:	call   b2d0 <hvm_short_summary>
    ba09:	mov    eax,DWORD PTR [r12+0xe4]
    ba11:	lea    rsi,[rip+0x14078]        # 1fa90 <_IO_stdin_used+0x2ad0>
    ba18:	mov    r9d,ebx
    ba1b:	mov    r8d,r15d
    ba1e:	mov    edi,0x1
    ba23:	push   rax
    ba24:	mov    eax,DWORD PTR [r12+0xe0]
    ba2c:	push   rax
    ba2d:	mov    ecx,DWORD PTR [rsp+0x14]
    ba31:	xor    eax,eax
    ba33:	mov    edx,DWORD PTR [rsp+0x10]
    ba37:	call   44f0 <__printf_chk@plt>
    ba3c:	test   BYTE PTR [r12+0x320],0x1
    ba45:	pop    rax
    ba46:	pop    rdx
    ba47:	jne    baa0 <cr3_dump_list.part.15+0x570>
    ba49:	add    r14,0x8
    ba4d:	cmp    QWORD PTR [rsp+0x8],r14
    ba52:	je     bae2 <cr3_dump_list.part.15+0x5b2>
    ba58:	mov    r12,QWORD PTR [r14]
    ba5b:	mov    rsi,QWORD PTR [rip+0x22175e]        # 22d1c0 <P+0x20>
    ba62:	mov    rax,QWORD PTR [r12+0x20]
    ba67:	cmp    rax,rsi
    ba6a:	ja     b5d8 <cr3_dump_list.part.15+0xa8>
    ba70:	mov    rax,QWORD PTR [r12+0x28]
    ba75:	mov    DWORD PTR [rsp+0x4],0x0
    ba7d:	mov    DWORD PTR [rsp],0x0
    ba84:	cmp    rsi,rax
    ba87:	jb     b622 <cr3_dump_list.part.15+0xf2>
    ba8d:	xor    ebx,ebx
    ba8f:	xor    r15d,r15d
    ba92:	jmp    b65e <cr3_dump_list.part.15+0x12e>
    ba97:	nop    WORD PTR [rax+rax*1+0x0]
    baa0:	mov    ecx,DWORD PTR [r12+0x328]
    baa8:	mov    edx,DWORD PTR [r12+0x324]
    bab0:	lea    rsi,[rip+0x14011]        # 1fac8 <_IO_stdin_used+0x2b08>
    bab7:	mov    r9d,DWORD PTR [r12+0x330]
    babf:	mov    r8d,DWORD PTR [r12+0x32c]
    bac7:	xor    eax,eax
    bac9:	mov    edi,0x1
    bace:	add    r14,0x8
    bad2:	call   44f0 <__printf_chk@plt>
    bad7:	cmp    QWORD PTR [rsp+0x8],r14
    badc:	jne    ba58 <cr3_dump_list.part.15+0x528>
    bae2:	mov    rax,QWORD PTR [rsp+0x68]
    bae7:	xor    rax,QWORD PTR fs:0x28
    baf0:	jne    bce3 <cr3_dump_list.part.15+0x7b3>
    baf6:	mov    rdi,QWORD PTR [rsp+0x38]
    bafb:	add    rsp,0x78
    baff:	pop    rbx
    bb00:	pop    rbp
    bb01:	pop    r12
    bb03:	pop    r13
    bb05:	pop    r14
    bb07:	pop    r15
    bb09:	jmp    4330 <free@plt>
    bb0e:	xchg   ax,ax
    bb10:	mov    rax,rsi
    bb13:	pxor   xmm2,xmm2
    bb17:	shr    rax,1
    bb1a:	and    esi,0x1
    bb1d:	mov    r9d,DWORD PTR [rip+0x21d5b4]        # 2290d8 <opt+0x38>
    bb24:	or     rax,rsi
    bb27:	cvtsi2sd xmm2,rax
    bb2c:	test   r9d,r9d
    bb2f:	addsd  xmm2,xmm2
    bb33:	divsd  xmm1,xmm2
    bb37:	jne    b945 <cr3_dump_list.part.15+0x415>
    bb3d:	lea    rsi,[rip+0x13f2c]        # 1fa70 <_IO_stdin_used+0x2ab0>
    bb44:	mov    rdx,r13
    bb47:	mov    edi,0x1
    bb4c:	mov    eax,0x2
    bb51:	call   44f0 <__printf_chk@plt>
    bb56:	mov    rsi,QWORD PTR [r12+0x30]
    bb5b:	jmp    b9f5 <cr3_dump_list.part.15+0x4c5>
    bb60:	pxor   xmm1,xmm1
    bb64:	shr    rax,1
    bb67:	cvtsi2sd xmm1,rax
    bb6c:	addsd  xmm1,xmm1
    bb70:	jmp    b91f <cr3_dump_list.part.15+0x3ef>
    bb75:	nop    DWORD PTR [rax]
    bb78:	mov    rax,rdi
    bb7b:	mov    rdx,rdi
    bb7e:	pxor   xmm0,xmm0
    bb82:	shr    rax,1
    bb85:	and    edx,0x1
    bb88:	or     rax,rdx
    bb8b:	cvtsi2sd xmm0,rax
    bb90:	addsd  xmm0,xmm0
    bb94:	jmp    b8f0 <cr3_dump_list.part.15+0x3c0>
    bb99:	nop    DWORD PTR [rax+0x0]
    bba0:	mov    rax,rsi
    bba3:	pxor   xmm2,xmm2
    bba7:	shr    rax,1
    bbaa:	and    esi,0x1
    bbad:	mov    ebp,DWORD PTR [rip+0x21d525]        # 2290d8 <opt+0x38>
    bbb3:	or     rax,rsi
    bbb6:	cvtsi2sd xmm2,rax
    bbbb:	test   ebp,ebp
    bbbd:	addsd  xmm2,xmm2
    bbc1:	divsd  xmm1,xmm2
    bbc5:	jne    b802 <cr3_dump_list.part.15+0x2d2>
    bbcb:	lea    rsi,[rip+0x13e9e]        # 1fa70 <_IO_stdin_used+0x2ab0>
    bbd2:	mov    rdx,r13
    bbd5:	mov    edi,0x1
    bbda:	mov    eax,0x2
    bbdf:	call   44f0 <__printf_chk@plt>
    bbe4:	mov    rsi,QWORD PTR [r12+0x30]
    bbe9:	jmp    b8ab <cr3_dump_list.part.15+0x37b>
    bbee:	xchg   ax,ax
    bbf0:	pxor   xmm1,xmm1
    bbf4:	shr    rax,1
    bbf7:	cvtsi2sd xmm1,rax
    bbfc:	addsd  xmm1,xmm1
    bc00:	jmp    b7de <cr3_dump_list.part.15+0x2ae>
    bc05:	nop    DWORD PTR [rax]
    bc08:	mov    rax,rdi
    bc0b:	mov    rdx,rdi
    bc0e:	pxor   xmm0,xmm0
    bc12:	shr    rax,1
    bc15:	and    edx,0x1
    bc18:	or     rax,rdx
    bc1b:	cvtsi2sd xmm0,rax
    bc20:	addsd  xmm0,xmm0
    bc24:	jmp    b7af <cr3_dump_list.part.15+0x27f>
    bc29:	nop    DWORD PTR [rax+0x0]
    bc30:	test   rsi,rsi
    bc33:	js     bc90 <cr3_dump_list.part.15+0x760>
    bc35:	pxor   xmm0,xmm0
    bc39:	cvtsi2sd xmm0,rsi
    bc3e:	pxor   xmm1,xmm1
    bc42:	lea    rsi,[rip+0x11583]        # 1d1cc <_IO_stdin_used+0x20c>
    bc49:	mov    rdx,r13
    bc4c:	mov    edi,0x1
    bc51:	mov    eax,0x1
    bc56:	cvtsi2sd xmm1,QWORD PTR [rip+0x21d451]        # 2290b0 <opt+0x10>
    bc5f:	divsd  xmm0,xmm1
    bc63:	call   44f0 <__printf_chk@plt>
    bc68:	jmp    b768 <cr3_dump_list.part.15+0x238>
    bc6d:	nop    DWORD PTR [rax]
    bc70:	mov    rcx,rdx
    bc73:	pxor   xmm0,xmm0
    bc77:	shr    rcx,1
    bc7a:	and    edx,0x1
    bc7d:	or     rcx,rdx
    bc80:	cvtsi2sd xmm0,rcx
    bc85:	addsd  xmm0,xmm0
    bc89:	jmp    b734 <cr3_dump_list.part.15+0x204>
    bc8e:	xchg   ax,ax
    bc90:	mov    rax,rsi
    bc93:	pxor   xmm0,xmm0
    bc97:	shr    rax,1
    bc9a:	and    esi,0x1
    bc9d:	or     rax,rsi
    bca0:	cvtsi2sd xmm0,rax
    bca5:	addsd  xmm0,xmm0
    bca9:	jmp    bc3e <cr3_dump_list.part.15+0x70e>
    bcab:	nop    DWORD PTR [rax+rax*1+0x0]
    bcb0:	xor    edi,edi
    bcb2:	call   4490 <malloc@plt>
    bcb7:	lea    rcx,[rip+0xffffffffffff8c52]        # 4910 <cr3_compare_start>
    bcbe:	mov    edx,0x8
    bcc3:	xor    esi,esi
    bcc5:	mov    rdi,rax
    bcc8:	mov    QWORD PTR [rsp+0x38],rax
    bccd:	call   4390 <qsort@plt>
    bcd2:	lea    rdi,[rip+0x1166e]        # 1d347 <_IO_stdin_used+0x387>
    bcd9:	call   4380 <puts@plt>
    bcde:	jmp    bae2 <cr3_dump_list.part.15+0x5b2>
    bce3:	call   43c0 <__stack_chk_fail@plt>
    bce8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bcf0 <__hvm_set_summary_handler>:
    bcf0:	mov    eax,DWORD PTR [rdi+0x28400]
    bcf6:	cmp    eax,DWORD PTR [rdi+0x20]
    bcf9:	jae    bdf7 <__hvm_set_summary_handler+0x107>
    bcff:	push   r13
    bd01:	push   r12
    bd03:	mov    r12,rdx
    bd06:	push   rbp
    bd07:	push   rbx
    bd08:	mov    edx,eax
    bd0a:	mov    rbp,rsi
    bd0d:	sub    rsp,0x8
    bd11:	mov    rax,QWORD PTR [rdi+rdx*8+0x28]
    bd16:	test   rax,rax
    bd19:	jne    bd2c <__hvm_set_summary_handler+0x3c>
    bd1b:	jmp    bdf0 <__hvm_set_summary_handler+0x100>
    bd20:	mov    rcx,QWORD PTR [rax+0x10]
    bd24:	test   rcx,rcx
    bd27:	je     bd80 <__hvm_set_summary_handler+0x90>
    bd29:	mov    rax,rcx
    bd2c:	cmp    QWORD PTR [rax],rbp
    bd2f:	jne    bd20 <__hvm_set_summary_handler+0x30>
    bd31:	cmp    QWORD PTR [rax+0x8],r12
    bd35:	jne    bd20 <__hvm_set_summary_handler+0x30>
    bd37:	mov    rdi,QWORD PTR [rip+0x220702]        # 22c440 <stderr@@GLIBC_2.2.5>
    bd3e:	lea    rcx,[rip+0x17aab]        # 237f0 <__func__.6063>
    bd45:	lea    rdx,[rip+0x13dbc]        # 1fb08 <_IO_stdin_used+0x2b48>
    bd4c:	xor    eax,eax
    bd4e:	mov    r9,r12
    bd51:	mov    r8,rbp
    bd54:	mov    esi,0x1
    bd59:	call   4560 <__fprintf_chk@plt>
    bd5e:	mov    eax,DWORD PTR [rip+0x21d37c]        # 2290e0 <opt+0x40>
    bd64:	test   eax,eax
    bd66:	je     bde2 <__hvm_set_summary_handler+0xf2>
    bd68:	add    rsp,0x8
    bd6c:	mov    eax,0xfffffff0
    bd71:	pop    rbx
    bd72:	pop    rbp
    bd73:	pop    r12
    bd75:	pop    r13
    bd77:	ret    
    bd78:	nop    DWORD PTR [rax+rax*1+0x0]
    bd80:	lea    rbx,[rax+0x10]
    bd84:	mov    edi,0x18
    bd89:	call   4490 <malloc@plt>
    bd8e:	test   rax,rax
    bd91:	mov    r13,rax
    bd94:	je     bdb8 <__hvm_set_summary_handler+0xc8>
    bd96:	mov    QWORD PTR [r13+0x0],rbp
    bd9a:	mov    QWORD PTR [r13+0x8],r12
    bd9e:	mov    rax,QWORD PTR [rbx]
    bda1:	mov    QWORD PTR [r13+0x10],rax
    bda5:	mov    QWORD PTR [rbx],r13
    bda8:	add    rsp,0x8
    bdac:	pop    rbx
    bdad:	xor    eax,eax
    bdaf:	pop    rbp
    bdb0:	pop    r12
    bdb2:	pop    r13
    bdb4:	ret    
    bdb5:	nop    DWORD PTR [rax]
    bdb8:	mov    rdi,QWORD PTR [rip+0x220681]        # 22c440 <stderr@@GLIBC_2.2.5>
    bdbf:	lea    rcx,[rip+0x17a2a]        # 237f0 <__func__.6063>
    bdc6:	lea    rdx,[rip+0x115a8]        # 1d375 <_IO_stdin_used+0x3b5>
    bdcd:	xor    eax,eax
    bdcf:	mov    esi,0x1
    bdd4:	call   4560 <__fprintf_chk@plt>
    bdd9:	cmp    DWORD PTR [rip+0x21d300],0x7        # 2290e0 <opt+0x40>
    bde0:	ja     bd96 <__hvm_set_summary_handler+0xa6>
    bde2:	mov    edi,0x1
    bde7:	call   4540 <exit@plt>
    bdec:	nop    DWORD PTR [rax+0x0]
    bdf0:	lea    rbx,[rdi+rdx*8+0x28]
    bdf5:	jmp    bd84 <__hvm_set_summary_handler+0x94>
    bdf7:	mov    eax,0xffffffea
    bdfc:	ret    
    bdfd:	nop    DWORD PTR [rax]

000000000000be00 <hvm_pf_xen_postprocess>:
    be00:	mov    edx,DWORD PTR [rip+0x21d29e]        # 2290a4 <opt+0x4>
    be06:	test   edx,edx
    be08:	je     bf08 <hvm_pf_xen_postprocess+0x108>
    be0e:	push   r14
    be10:	push   r13
    be12:	push   r12
    be14:	push   rbp
    be15:	push   rbx
    be16:	mov    ecx,DWORD PTR [rdi+0x28358]
    be1c:	mov    rbx,rdi
    be1f:	test   ecx,ecx
    be21:	je     bf10 <hvm_pf_xen_postprocess+0x110>
    be27:	movsxd rbp,ecx
    be2a:	mov    r12,QWORD PTR [rdi+0x283e8]
    be31:	lea    rax,[rbp*8+0x0]
    be39:	sub    rax,rbp
    be3c:	lea    rsi,[rdi+rax*8]
    be40:	add    DWORD PTR [rsi+0x108d8],0x1
    be47:	test   r12,r12
    be4a:	jne    c1e0 <hvm_pf_xen_postprocess+0x3e0>
    be50:	cmp    ecx,0x8
    be53:	je     bf3c <hvm_pf_xen_postprocess+0x13c>
    be59:	cmp    ecx,0xc
    be5c:	jne    bef0 <hvm_pf_xen_postprocess+0xf0>
    be62:	mov    rdx,QWORD PTR [rbx+0x10]
    be66:	mov    rcx,QWORD PTR [rbx+0x283f8]
    be6d:	mov    eax,DWORD PTR [rdx+0x14]
    be70:	cmp    eax,0x2
    be73:	jl     be8e <hvm_pf_xen_postprocess+0x8e>
    be75:	cmp    eax,0x3
    be78:	jle    c0a8 <hvm_pf_xen_postprocess+0x2a8>
    be7e:	cmp    eax,0x4
    be81:	jne    be8e <hvm_pf_xen_postprocess+0x8e>
    be83:	bt     rcx,0x2f
    be88:	jb     c0b4 <hvm_pf_xen_postprocess+0x2b4>
    be8e:	mov    rbp,QWORD PTR [rbx+0x283e8]
    be95:	add    DWORD PTR [rbx+0x11080],0x1
    be9c:	test   rbp,rbp
    be9f:	jne    c468 <hvm_pf_xen_postprocess+0x668>
    bea5:	mov    eax,DWORD PTR [rdx+0x14]
    bea8:	mov    rcx,QWORD PTR [rbx+0x28348]
    beaf:	cmp    eax,0x2
    beb2:	jl     c368 <hvm_pf_xen_postprocess+0x568>
    beb8:	xor    r13d,r13d
    bebb:	xor    r12d,r12d
    bebe:	cmp    eax,0x3
    bec1:	jle    bfa0 <hvm_pf_xen_postprocess+0x1a0>
    bec7:	cmp    eax,0x4
    beca:	jne    c368 <hvm_pf_xen_postprocess+0x568>
    bed0:	bt     rcx,0x2f
    bed5:	jae    bfac <hvm_pf_xen_postprocess+0x1ac>
    bedb:	add    DWORD PTR [rbx+0x11048],0x1
    bee2:	test   r12,r12
    bee5:	jne    c378 <hvm_pf_xen_postprocess+0x578>
    beeb:	nop    DWORD PTR [rax+rax*1+0x0]
    bef0:	mov    eax,DWORD PTR [rip+0x25b50e]        # 267404 <done.6178>
    bef6:	test   eax,eax
    bef8:	je     bf6d <hvm_pf_xen_postprocess+0x16d>
    befa:	pop    rbx
    befb:	pop    rbp
    befc:	pop    r12
    befe:	pop    r13
    bf00:	pop    r14
    bf02:	ret    
    bf03:	nop    DWORD PTR [rax+rax*1+0x0]
    bf08:	repz ret 
    bf0a:	nop    WORD PTR [rax+rax*1+0x0]
    bf10:	mov    rcx,QWORD PTR [rip+0x259341]        # 265258 <warn>
    bf17:	lea    rdi,[rip+0x1140f]        # 1d32d <_IO_stdin_used+0x36d>
    bf1e:	mov    edx,0x14
    bf23:	mov    esi,0x1
    bf28:	call   4550 <fwrite@plt>
    bf2d:	mov    ecx,DWORD PTR [rbx+0x28358]
    bf33:	cmp    ecx,0x8
    bf36:	jne    be59 <hvm_pf_xen_postprocess+0x59>
    bf3c:	mov    rax,QWORD PTR [rbx+0x10]
    bf40:	mov    rdx,QWORD PTR [rbx+0x283e8]
    bf47:	xor    r8d,r8d
    bf4a:	mov    rsi,QWORD PTR [rbx+0x283f8]
    bf51:	xor    ecx,ecx
    bf53:	mov    rdi,QWORD PTR [rax+0x8]
    bf57:	add    rdi,0x9e8
    bf5e:	call   91f0 <update_eip>
    bf63:	mov    eax,DWORD PTR [rip+0x25b49b]        # 267404 <done.6178>
    bf69:	test   eax,eax
    bf6b:	jne    befa <hvm_pf_xen_postprocess+0xfa>
    bf6d:	lea    rsi,[rip+0xffffffffffff8c9c]        # 4c10 <hvm_pf_xen_summary>
    bf74:	xor    edx,edx
    bf76:	mov    rdi,rbx
    bf79:	call   bcf0 <__hvm_set_summary_handler>
    bf7e:	test   eax,eax
    bf80:	jne    c308 <hvm_pf_xen_postprocess+0x508>
    bf86:	pop    rbx
    bf87:	mov    DWORD PTR [rip+0x25b473],0x1        # 267404 <done.6178>
    bf91:	pop    rbp
    bf92:	pop    r12
    bf94:	pop    r13
    bf96:	pop    r14
    bf98:	ret    
    bf99:	nop    DWORD PTR [rax+0x0]
    bfa0:	test   ecx,0x80000000
    bfa6:	jne    bedb <hvm_pf_xen_postprocess+0xdb>
    bfac:	add    DWORD PTR [rbx+0x11010],0x1
    bfb3:	test   r12,r12
    bfb6:	je     bef0 <hvm_pf_xen_postprocess+0xf0>
    bfbc:	mov    edx,DWORD PTR [rip+0x21d116]        # 2290d8 <opt+0x38>
    bfc2:	movsxd rcx,DWORD PTR [rbx+0x11014]
    bfc9:	test   edx,edx
    bfcb:	mov    eax,ecx
    bfcd:	je     c080 <hvm_pf_xen_postprocess+0x280>
    bfd3:	mov    eax,DWORD PTR [rbx+0x11018]
    bfd9:	cmp    eax,ecx
    bfdb:	jg     c5a4 <hvm_pf_xen_postprocess+0x7a4>
    bfe1:	test   ecx,ecx
    bfe3:	mov    ebp,DWORD PTR [rip+0x21d0f3]        # 2290dc <opt+0x3c>
    bfe9:	je     bff7 <hvm_pf_xen_postprocess+0x1f7>
    bfeb:	cmp    eax,ebp
    bfed:	jl     bff7 <hvm_pf_xen_postprocess+0x1f7>
    bfef:	test   ebp,ebp
    bff1:	jne    c6a0 <hvm_pf_xen_postprocess+0x8a0>
    bff7:	add    eax,eax
    bff9:	cmovne edx,eax
    bffc:	cmp    edx,ebp
    bffe:	jle    c682 <hvm_pf_xen_postprocess+0x882>
    c004:	test   ebp,ebp
    c006:	je     c682 <hvm_pf_xen_postprocess+0x882>
    c00c:	mov    rdi,QWORD PTR [rbx+0x11028]
    c013:	movsxd rsi,ebp
    c016:	shl    rsi,0x3
    c01a:	call   44c0 <realloc@plt>
    c01f:	test   rax,rax
    c022:	je     c63f <hvm_pf_xen_postprocess+0x83f>
    c028:	mov    QWORD PTR [rbx+0x11028],rax
    c02f:	mov    DWORD PTR [rbx+0x11018],ebp
    c035:	movsxd rcx,DWORD PTR [rbx+0x11014]
    c03c:	cmp    ecx,ebp
    c03e:	jl     c5a4 <hvm_pf_xen_postprocess+0x7a4>
    c044:	mov    eax,ecx
    c046:	cdq    
    c047:	idiv   ebp
    c049:	lea    esi,[rax+0x1]
    c04c:	movsxd rdi,edx
    c04f:	mov    edx,0x55555556
    c054:	mov    eax,esi
    c056:	imul   edx
    c058:	mov    eax,esi
    c05a:	sar    eax,0x1f
    c05d:	sub    eax,edx
    c05f:	add    eax,edi
    c061:	cdq    
    c062:	idiv   esi
    c064:	mov    eax,ecx
    c066:	test   edx,edx
    c068:	jne    c080 <hvm_pf_xen_postprocess+0x280>
    c06a:	mov    rax,QWORD PTR [rbx+0x11028]
    c071:	mov    QWORD PTR [rax+rdi*8],r12
    c075:	mov    eax,DWORD PTR [rbx+0x11014]
    c07b:	nop    DWORD PTR [rax+rax*1+0x0]
    c080:	add    eax,0x1
    c083:	add    QWORD PTR [rbx+0x11020],r13
    c08a:	add    DWORD PTR [rbx+0x11030],0x1
    c091:	mov    DWORD PTR [rbx+0x11014],eax
    c097:	add    QWORD PTR [rbx+0x11038],r12
    c09e:	jmp    bef0 <hvm_pf_xen_postprocess+0xf0>
    c0a3:	nop    DWORD PTR [rax+rax*1+0x0]
    c0a8:	test   ecx,0x80000000
    c0ae:	je     be8e <hvm_pf_xen_postprocess+0x8e>
    c0b4:	mov    rbp,QWORD PTR [rbx+0x283e8]
    c0bb:	add    DWORD PTR [rbx+0x110b8],0x1
    c0c2:	test   rbp,rbp
    c0c5:	je     bea5 <hvm_pf_xen_postprocess+0xa5>
    c0cb:	mov    esi,DWORD PTR [rip+0x21d007]        # 2290d8 <opt+0x38>
    c0d1:	movsxd rcx,DWORD PTR [rbx+0x110bc]
    c0d8:	test   esi,esi
    c0da:	mov    eax,ecx
    c0dc:	je     c5ba <hvm_pf_xen_postprocess+0x7ba>
    c0e2:	mov    eax,DWORD PTR [rbx+0x110c0]
    c0e8:	cmp    eax,ecx
    c0ea:	jg     c5d9 <hvm_pf_xen_postprocess+0x7d9>
    c0f0:	test   ecx,ecx
    c0f2:	mov    r12d,DWORD PTR [rip+0x21cfe3]        # 2290dc <opt+0x3c>
    c0f9:	je     c109 <hvm_pf_xen_postprocess+0x309>
    c0fb:	cmp    eax,r12d
    c0fe:	jl     c109 <hvm_pf_xen_postprocess+0x309>
    c100:	test   r12d,r12d
    c103:	jne    c6be <hvm_pf_xen_postprocess+0x8be>
    c109:	add    eax,eax
    c10b:	cmovne esi,eax
    c10e:	test   r12d,r12d
    c111:	je     c6af <hvm_pf_xen_postprocess+0x8af>
    c117:	cmp    esi,r12d
    c11a:	jle    c6af <hvm_pf_xen_postprocess+0x8af>
    c120:	mov    rdi,QWORD PTR [rbx+0x110d0]
    c127:	movsxd rsi,r12d
    c12a:	shl    rsi,0x3
    c12e:	call   44c0 <realloc@plt>
    c133:	test   rax,rax
    c136:	je     c689 <hvm_pf_xen_postprocess+0x889>
    c13c:	mov    QWORD PTR [rbx+0x110d0],rax
    c143:	mov    DWORD PTR [rbx+0x110c0],r12d
    c14a:	movsxd rcx,DWORD PTR [rbx+0x110bc]
    c151:	cmp    ecx,r12d
    c154:	jl     c5d9 <hvm_pf_xen_postprocess+0x7d9>
    c15a:	mov    eax,ecx
    c15c:	cdq    
    c15d:	idiv   r12d
    c160:	lea    esi,[rax+0x1]
    c163:	movsxd rdi,edx
    c166:	mov    edx,0x55555556
    c16b:	mov    eax,esi
    c16d:	imul   edx
    c16f:	mov    eax,esi
    c171:	sar    eax,0x1f
    c174:	sub    eax,edx
    c176:	add    eax,edi
    c178:	cdq    
    c179:	idiv   esi
    c17b:	test   edx,edx
    c17d:	je     c656 <hvm_pf_xen_postprocess+0x856>
    c183:	mov    r13,QWORD PTR [rbx+0x283e8]
    c18a:	mov    rdx,QWORD PTR [rbx+0x10]
    c18e:	mov    eax,ecx
    c190:	mov    r12,r13
    c193:	nop    DWORD PTR [rax+rax*1+0x0]
    c198:	add    QWORD PTR [rbx+0x110c8],rbp
    c19f:	add    DWORD PTR [rbx+0x110d8],0x1
    c1a6:	add    eax,0x1
    c1a9:	mov    DWORD PTR [rbx+0x110bc],eax
    c1af:	add    QWORD PTR [rbx+0x110e0],rbp
    c1b6:	mov    eax,DWORD PTR [rdx+0x14]
    c1b9:	mov    rcx,QWORD PTR [rbx+0x28348]
    c1c0:	cmp    eax,0x2
    c1c3:	jl     bfac <hvm_pf_xen_postprocess+0x1ac>
    c1c9:	cmp    eax,0x3
    c1cc:	jle    bfa0 <hvm_pf_xen_postprocess+0x1a0>
    c1d2:	cmp    eax,0x4
    c1d5:	je     bed0 <hvm_pf_xen_postprocess+0xd0>
    c1db:	jmp    bfac <hvm_pf_xen_postprocess+0x1ac>
    c1e0:	mov    edx,DWORD PTR [rip+0x21cef2]        # 2290d8 <opt+0x38>
    c1e6:	movsxd rax,DWORD PTR [rsi+0x108dc]
    c1ed:	test   edx,edx
    c1ef:	je     c2d0 <hvm_pf_xen_postprocess+0x4d0>
    c1f5:	mov    ecx,DWORD PTR [rsi+0x108e0]
    c1fb:	cmp    ecx,eax
    c1fd:	jg     c338 <hvm_pf_xen_postprocess+0x538>
    c203:	test   eax,eax
    c205:	mov    r13d,DWORD PTR [rip+0x21ced0]        # 2290dc <opt+0x3c>
    c20c:	je     c21c <hvm_pf_xen_postprocess+0x41c>
    c20e:	cmp    ecx,r13d
    c211:	jl     c21c <hvm_pf_xen_postprocess+0x41c>
    c213:	test   r13d,r13d
    c216:	jne    c637 <hvm_pf_xen_postprocess+0x837>
    c21c:	add    ecx,ecx
    c21e:	cmovne edx,ecx
    c221:	test   r13d,r13d
    c224:	je     c5d1 <hvm_pf_xen_postprocess+0x7d1>
    c22a:	cmp    edx,r13d
    c22d:	jle    c5d1 <hvm_pf_xen_postprocess+0x7d1>
    c233:	lea    rax,[rbp*8+0x0]
    c23b:	movsxd rsi,r13d
    c23e:	shl    rsi,0x3
    c242:	sub    rax,rbp
    c245:	lea    r14,[rbx+rax*8]
    c249:	mov    rdi,QWORD PTR [r14+0x108f0]
    c250:	call   44c0 <realloc@plt>
    c255:	test   rax,rax
    c258:	je     c5c5 <hvm_pf_xen_postprocess+0x7c5>
    c25e:	mov    QWORD PTR [r14+0x108f0],rax
    c265:	mov    DWORD PTR [r14+0x108e0],r13d
    c26c:	lea    rax,[rbp*8+0x0]
    c274:	sub    rax,rbp
    c277:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    c27f:	cmp    eax,r13d
    c282:	jl     c338 <hvm_pf_xen_postprocess+0x538>
    c288:	cdq    
    c289:	idiv   r13d
    c28c:	lea    ecx,[rax+0x1]
    c28f:	mov    esi,edx
    c291:	mov    edx,0x55555556
    c296:	mov    eax,ecx
    c298:	imul   edx
    c29a:	mov    eax,ecx
    c29c:	sar    eax,0x1f
    c29f:	sub    eax,edx
    c2a1:	add    eax,esi
    c2a3:	cdq    
    c2a4:	idiv   ecx
    c2a6:	lea    rax,[rbp*8+0x0]
    c2ae:	sub    rax,rbp
    c2b1:	test   edx,edx
    c2b3:	je     c560 <hvm_pf_xen_postprocess+0x760>
    c2b9:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    c2c0:	mov    ecx,DWORD PTR [rbx+0x28358]
    c2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c2d0:	lea    rdx,[rbp*8+0x0]
    c2d8:	add    eax,0x1
    c2db:	sub    rdx,rbp
    c2de:	lea    rdx,[rbx+rdx*8]
    c2e2:	mov    DWORD PTR [rdx+0x108dc],eax
    c2e8:	add    QWORD PTR [rdx+0x108e8],r12
    c2ef:	add    DWORD PTR [rdx+0x108f8],0x1
    c2f6:	add    QWORD PTR [rdx+0x10900],r12
    c2fd:	jmp    be50 <hvm_pf_xen_postprocess+0x50>
    c302:	nop    WORD PTR [rax+rax*1+0x0]
    c308:	mov    rdi,QWORD PTR [rip+0x220131]        # 22c440 <stderr@@GLIBC_2.2.5>
    c30f:	lea    rcx,[rip+0x1749a]        # 237b0 <__func__.6180>
    c316:	lea    rdx,[rip+0x13813]        # 1fb30 <_IO_stdin_used+0x2b70>
    c31d:	mov    r8d,eax
    c320:	mov    esi,0x1
    c325:	xor    eax,eax
    c327:	call   4560 <__fprintf_chk@plt>
    c32c:	jmp    bf86 <hvm_pf_xen_postprocess+0x186>
    c331:	nop    DWORD PTR [rax+0x0]
    c338:	lea    rdx,[rbp*8+0x0]
    c340:	sub    rdx,rbp
    c343:	lea    rdx,[rbx+rdx*8]
    c347:	mov    rcx,QWORD PTR [rdx+0x108f0]
    c34e:	mov    QWORD PTR [rcx+rax*8],r12
    c352:	mov    eax,DWORD PTR [rdx+0x108dc]
    c358:	mov    ecx,DWORD PTR [rbx+0x28358]
    c35e:	jmp    c2d0 <hvm_pf_xen_postprocess+0x4d0>
    c363:	nop    DWORD PTR [rax+rax*1+0x0]
    c368:	add    DWORD PTR [rbx+0x11010],0x1
    c36f:	jmp    bef0 <hvm_pf_xen_postprocess+0xf0>
    c374:	nop    DWORD PTR [rax+0x0]
    c378:	mov    edx,DWORD PTR [rip+0x21cd5a]        # 2290d8 <opt+0x38>
    c37e:	movsxd rcx,DWORD PTR [rbx+0x1104c]
    c385:	test   edx,edx
    c387:	mov    eax,ecx
    c389:	je     c440 <hvm_pf_xen_postprocess+0x640>
    c38f:	mov    eax,DWORD PTR [rbx+0x11050]
    c395:	cmp    eax,ecx
    c397:	jg     c5fd <hvm_pf_xen_postprocess+0x7fd>
    c39d:	test   ecx,ecx
    c39f:	mov    ebp,DWORD PTR [rip+0x21cd37]        # 2290dc <opt+0x3c>
    c3a5:	je     c3b3 <hvm_pf_xen_postprocess+0x5b3>
    c3a7:	cmp    eax,ebp
    c3a9:	jl     c3b3 <hvm_pf_xen_postprocess+0x5b3>
    c3ab:	test   ebp,ebp
    c3ad:	jne    c6c6 <hvm_pf_xen_postprocess+0x8c6>
    c3b3:	add    eax,eax
    c3b5:	cmovne edx,eax
    c3b8:	test   ebp,ebp
    c3ba:	je     c6b7 <hvm_pf_xen_postprocess+0x8b7>
    c3c0:	cmp    edx,ebp
    c3c2:	jle    c6b7 <hvm_pf_xen_postprocess+0x8b7>
    c3c8:	mov    rdi,QWORD PTR [rbx+0x11060]
    c3cf:	movsxd rsi,ebp
    c3d2:	shl    rsi,0x3
    c3d6:	call   44c0 <realloc@plt>
    c3db:	test   rax,rax
    c3de:	je     c695 <hvm_pf_xen_postprocess+0x895>
    c3e4:	mov    QWORD PTR [rbx+0x11060],rax
    c3eb:	mov    DWORD PTR [rbx+0x11050],ebp
    c3f1:	movsxd rcx,DWORD PTR [rbx+0x1104c]
    c3f8:	cmp    ecx,ebp
    c3fa:	jl     c5fd <hvm_pf_xen_postprocess+0x7fd>
    c400:	mov    eax,ecx
    c402:	cdq    
    c403:	idiv   ebp
    c405:	lea    esi,[rax+0x1]
    c408:	movsxd rdi,edx
    c40b:	mov    edx,0x55555556
    c410:	mov    eax,esi
    c412:	imul   edx
    c414:	mov    eax,esi
    c416:	sar    eax,0x1f
    c419:	sub    eax,edx
    c41b:	add    eax,edi
    c41d:	cdq    
    c41e:	idiv   esi
    c420:	mov    eax,ecx
    c422:	test   edx,edx
    c424:	jne    c440 <hvm_pf_xen_postprocess+0x640>
    c426:	mov    rax,QWORD PTR [rbx+0x11060]
    c42d:	mov    QWORD PTR [rax+rdi*8],r12
    c431:	mov    eax,DWORD PTR [rbx+0x1104c]
    c437:	nop    WORD PTR [rax+rax*1+0x0]
    c440:	add    eax,0x1
    c443:	add    QWORD PTR [rbx+0x11058],r13
    c44a:	add    DWORD PTR [rbx+0x11068],0x1
    c451:	mov    DWORD PTR [rbx+0x1104c],eax
    c457:	add    QWORD PTR [rbx+0x11070],r12
    c45e:	jmp    bef0 <hvm_pf_xen_postprocess+0xf0>
    c463:	nop    DWORD PTR [rax+rax*1+0x0]
    c468:	mov    esi,DWORD PTR [rip+0x21cc6a]        # 2290d8 <opt+0x38>
    c46e:	movsxd rcx,DWORD PTR [rbx+0x11084]
    c475:	test   esi,esi
    c477:	mov    eax,ecx
    c479:	je     c558 <hvm_pf_xen_postprocess+0x758>
    c47f:	mov    eax,DWORD PTR [rbx+0x11088]
    c485:	cmp    eax,ecx
    c487:	jg     c583 <hvm_pf_xen_postprocess+0x783>
    c48d:	test   ecx,ecx
    c48f:	mov    r12d,DWORD PTR [rip+0x21cc46]        # 2290dc <opt+0x3c>
    c496:	je     c4a6 <hvm_pf_xen_postprocess+0x6a6>
    c498:	test   r12d,r12d
    c49b:	je     c4a6 <hvm_pf_xen_postprocess+0x6a6>
    c49d:	cmp    eax,r12d
    c4a0:	jge    c6a7 <hvm_pf_xen_postprocess+0x8a7>
    c4a6:	add    eax,eax
    c4a8:	cmovne esi,eax
    c4ab:	test   r12d,r12d
    c4ae:	je     c67a <hvm_pf_xen_postprocess+0x87a>
    c4b4:	cmp    esi,r12d
    c4b7:	jle    c67a <hvm_pf_xen_postprocess+0x87a>
    c4bd:	mov    rdi,QWORD PTR [rbx+0x11098]
    c4c4:	movsxd rsi,r12d
    c4c7:	shl    rsi,0x3
    c4cb:	call   44c0 <realloc@plt>
    c4d0:	test   rax,rax
    c4d3:	je     c64a <hvm_pf_xen_postprocess+0x84a>
    c4d9:	mov    QWORD PTR [rbx+0x11098],rax
    c4e0:	mov    DWORD PTR [rbx+0x11088],r12d
    c4e7:	movsxd rcx,DWORD PTR [rbx+0x11084]
    c4ee:	cmp    ecx,r12d
    c4f1:	jl     c583 <hvm_pf_xen_postprocess+0x783>
    c4f7:	mov    eax,ecx
    c4f9:	cdq    
    c4fa:	idiv   r12d
    c4fd:	lea    esi,[rax+0x1]
    c500:	movsxd rdi,edx
    c503:	mov    edx,0x55555556
    c508:	mov    eax,esi
    c50a:	imul   edx
    c50c:	mov    eax,esi
    c50e:	sar    eax,0x1f
    c511:	sub    eax,edx
    c513:	add    eax,edi
    c515:	cdq    
    c516:	idiv   esi
    c518:	test   edx,edx
    c51a:	je     c613 <hvm_pf_xen_postprocess+0x813>
    c520:	mov    r13,QWORD PTR [rbx+0x283e8]
    c527:	mov    rdx,QWORD PTR [rbx+0x10]
    c52b:	mov    eax,ecx
    c52d:	mov    r12,r13
    c530:	add    eax,0x1
    c533:	add    QWORD PTR [rbx+0x11090],rbp
    c53a:	add    DWORD PTR [rbx+0x110a0],0x1
    c541:	mov    DWORD PTR [rbx+0x11084],eax
    c547:	add    QWORD PTR [rbx+0x110a8],rbp
    c54e:	jmp    c1b6 <hvm_pf_xen_postprocess+0x3b6>
    c553:	nop    DWORD PTR [rax+rax*1+0x0]
    c558:	mov    r12,rbp
    c55b:	mov    r13,rbp
    c55e:	jmp    c530 <hvm_pf_xen_postprocess+0x730>
    c560:	lea    rdx,[rbx+rax*8]
    c564:	movsxd rax,esi
    c567:	mov    rcx,QWORD PTR [rdx+0x108f0]
    c56e:	mov    QWORD PTR [rcx+rax*8],r12
    c572:	mov    eax,DWORD PTR [rdx+0x108dc]
    c578:	mov    ecx,DWORD PTR [rbx+0x28358]
    c57e:	jmp    c2d0 <hvm_pf_xen_postprocess+0x4d0>
    c583:	mov    rax,QWORD PTR [rbx+0x11098]
    c58a:	mov    QWORD PTR [rax+rcx*8],rbp
    c58e:	mov    r13,QWORD PTR [rbx+0x283e8]
    c595:	mov    eax,DWORD PTR [rbx+0x11084]
    c59b:	mov    rdx,QWORD PTR [rbx+0x10]
    c59f:	mov    r12,r13
    c5a2:	jmp    c530 <hvm_pf_xen_postprocess+0x730>
    c5a4:	mov    rax,QWORD PTR [rbx+0x11028]
    c5ab:	mov    QWORD PTR [rax+rcx*8],r12
    c5af:	mov    eax,DWORD PTR [rbx+0x11014]
    c5b5:	jmp    c080 <hvm_pf_xen_postprocess+0x280>
    c5ba:	mov    r12,rbp
    c5bd:	mov    r13,rbp
    c5c0:	jmp    c198 <hvm_pf_xen_postprocess+0x398>
    c5c5:	mov    r13d,DWORD PTR [r14+0x108e0]
    c5cc:	jmp    c26c <hvm_pf_xen_postprocess+0x46c>
    c5d1:	mov    r13d,edx
    c5d4:	jmp    c233 <hvm_pf_xen_postprocess+0x433>
    c5d9:	mov    rax,QWORD PTR [rbx+0x110d0]
    c5e0:	mov    QWORD PTR [rax+rcx*8],rbp
    c5e4:	mov    r13,QWORD PTR [rbx+0x283e8]
    c5eb:	mov    eax,DWORD PTR [rbx+0x110bc]
    c5f1:	mov    rdx,QWORD PTR [rbx+0x10]
    c5f5:	mov    r12,r13
    c5f8:	jmp    c198 <hvm_pf_xen_postprocess+0x398>
    c5fd:	mov    rax,QWORD PTR [rbx+0x11060]
    c604:	mov    QWORD PTR [rax+rcx*8],r12
    c608:	mov    eax,DWORD PTR [rbx+0x1104c]
    c60e:	jmp    c440 <hvm_pf_xen_postprocess+0x640>
    c613:	mov    rax,QWORD PTR [rbx+0x11098]
    c61a:	mov    QWORD PTR [rax+rdi*8],rbp
    c61e:	mov    r13,QWORD PTR [rbx+0x283e8]
    c625:	mov    eax,DWORD PTR [rbx+0x11084]
    c62b:	mov    rdx,QWORD PTR [rbx+0x10]
    c62f:	mov    r12,r13
    c632:	jmp    c530 <hvm_pf_xen_postprocess+0x730>
    c637:	mov    r13d,ecx
    c63a:	jmp    c288 <hvm_pf_xen_postprocess+0x488>
    c63f:	mov    ebp,DWORD PTR [rbx+0x11018]
    c645:	jmp    c035 <hvm_pf_xen_postprocess+0x235>
    c64a:	mov    r12d,DWORD PTR [rbx+0x11088]
    c651:	jmp    c4e7 <hvm_pf_xen_postprocess+0x6e7>
    c656:	mov    rax,QWORD PTR [rbx+0x110d0]
    c65d:	mov    QWORD PTR [rax+rdi*8],rbp
    c661:	mov    r13,QWORD PTR [rbx+0x283e8]
    c668:	mov    eax,DWORD PTR [rbx+0x110bc]
    c66e:	mov    rdx,QWORD PTR [rbx+0x10]
    c672:	mov    r12,r13
    c675:	jmp    c198 <hvm_pf_xen_postprocess+0x398>
    c67a:	mov    r12d,esi
    c67d:	jmp    c4bd <hvm_pf_xen_postprocess+0x6bd>
    c682:	mov    ebp,edx
    c684:	jmp    c00c <hvm_pf_xen_postprocess+0x20c>
    c689:	mov    r12d,DWORD PTR [rbx+0x110c0]
    c690:	jmp    c14a <hvm_pf_xen_postprocess+0x34a>
    c695:	mov    ebp,DWORD PTR [rbx+0x11050]
    c69b:	jmp    c3f1 <hvm_pf_xen_postprocess+0x5f1>
    c6a0:	mov    ebp,eax
    c6a2:	jmp    c044 <hvm_pf_xen_postprocess+0x244>
    c6a7:	mov    r12d,eax
    c6aa:	jmp    c4f7 <hvm_pf_xen_postprocess+0x6f7>
    c6af:	mov    r12d,esi
    c6b2:	jmp    c120 <hvm_pf_xen_postprocess+0x320>
    c6b7:	mov    ebp,edx
    c6b9:	jmp    c3c8 <hvm_pf_xen_postprocess+0x5c8>
    c6be:	mov    r12d,eax
    c6c1:	jmp    c15a <hvm_pf_xen_postprocess+0x35a>
    c6c6:	mov    ebp,eax
    c6c8:	jmp    c400 <hvm_pf_xen_postprocess+0x600>
    c6cd:	nop    DWORD PTR [rax]

000000000000c6d0 <hvm_msr_write_postprocess>:
    c6d0:	mov    eax,DWORD PTR [rip+0x25acda]        # 2673b0 <done.6548>
    c6d6:	test   eax,eax
    c6d8:	je     c6e0 <hvm_msr_write_postprocess+0x10>
    c6da:	repz ret 
    c6dc:	nop    DWORD PTR [rax+0x0]
    c6e0:	lea    rsi,[rip+0xffffffffffff8249]        # 4930 <hvm_msr_write_summary>
    c6e7:	sub    rsp,0x8
    c6eb:	xor    edx,edx
    c6ed:	call   bcf0 <__hvm_set_summary_handler>
    c6f2:	test   eax,eax
    c6f4:	jne    c708 <hvm_msr_write_postprocess+0x38>
    c6f6:	mov    DWORD PTR [rip+0x25acb0],0x1        # 2673b0 <done.6548>
    c700:	add    rsp,0x8
    c704:	ret    
    c705:	nop    DWORD PTR [rax]
    c708:	mov    rdi,QWORD PTR [rip+0x21fd31]        # 22c440 <stderr@@GLIBC_2.2.5>
    c70f:	lea    rcx,[rip+0x16faa]        # 236c0 <__func__.6550>
    c716:	lea    rdx,[rip+0x13413]        # 1fb30 <_IO_stdin_used+0x2b70>
    c71d:	mov    r8d,eax
    c720:	mov    esi,0x1
    c725:	xor    eax,eax
    c727:	call   4560 <__fprintf_chk@plt>
    c72c:	mov    DWORD PTR [rip+0x25ac7a],0x1        # 2673b0 <done.6548>
    c736:	add    rsp,0x8
    c73a:	ret    
    c73b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c740 <hvm_msr_read_postprocess>:
    c740:	mov    eax,DWORD PTR [rip+0x25ac66]        # 2673ac <done.6567>
    c746:	test   eax,eax
    c748:	je     c750 <hvm_msr_read_postprocess+0x10>
    c74a:	repz ret 
    c74c:	nop    DWORD PTR [rax+0x0]
    c750:	lea    rsi,[rip+0xffffffffffffa999]        # 70f0 <hvm_msr_read_summary>
    c757:	sub    rsp,0x8
    c75b:	xor    edx,edx
    c75d:	call   bcf0 <__hvm_set_summary_handler>
    c762:	test   eax,eax
    c764:	jne    c778 <hvm_msr_read_postprocess+0x38>
    c766:	mov    DWORD PTR [rip+0x25ac3c],0x1        # 2673ac <done.6567>
    c770:	add    rsp,0x8
    c774:	ret    
    c775:	nop    DWORD PTR [rax]
    c778:	mov    rdi,QWORD PTR [rip+0x21fcc1]        # 22c440 <stderr@@GLIBC_2.2.5>
    c77f:	lea    rcx,[rip+0x16efa]        # 23680 <__func__.6569>
    c786:	lea    rdx,[rip+0x133a3]        # 1fb30 <_IO_stdin_used+0x2b70>
    c78d:	mov    r8d,eax
    c790:	mov    esi,0x1
    c795:	xor    eax,eax
    c797:	call   4560 <__fprintf_chk@plt>
    c79c:	mov    DWORD PTR [rip+0x25ac06],0x1        # 2673ac <done.6567>
    c7a6:	add    rsp,0x8
    c7aa:	ret    
    c7ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c7b0 <hvm_vmcall_postprocess>:
    c7b0:	test   BYTE PTR [rip+0x21c8ec],0x20        # 2290a3 <opt+0x3>
    c7b7:	je     c910 <hvm_vmcall_postprocess+0x160>
    c7bd:	push   r14
    c7bf:	push   r13
    c7c1:	push   r12
    c7c3:	push   rbp
    c7c4:	push   rbx
    c7c5:	mov    eax,DWORD PTR [rdi+0x28348]
    c7cb:	mov    rbx,rdi
    c7ce:	mov    r12,QWORD PTR [rdi+0x283e8]
    c7d5:	cmp    eax,0x25
    c7d8:	ja     c818 <hvm_vmcall_postprocess+0x68>
    c7da:	mov    ebp,eax
    c7dc:	lea    rax,[rbp*8+0x0]
    c7e4:	sub    rax,rbp
    c7e7:	lea    rdx,[rdi+rax*8]
    c7eb:	add    DWORD PTR [rdx+0x11978],0x1
    c7f2:	test   r12,r12
    c7f5:	jne    c918 <hvm_vmcall_postprocess+0x168>
    c7fb:	mov    eax,DWORD PTR [rip+0x25aba7]        # 2673a8 <done.6599>
    c801:	test   eax,eax
    c803:	je     ca38 <hvm_vmcall_postprocess+0x288>
    c809:	pop    rbx
    c80a:	pop    rbp
    c80b:	pop    r12
    c80d:	pop    r13
    c80f:	pop    r14
    c811:	ret    
    c812:	nop    WORD PTR [rax+rax*1+0x0]
    c818:	add    DWORD PTR [rdi+0x121c8],0x1
    c81f:	test   r12,r12
    c822:	je     c7fb <hvm_vmcall_postprocess+0x4b>
    c824:	mov    edx,DWORD PTR [rip+0x21c8ae]        # 2290d8 <opt+0x38>
    c82a:	movsxd rcx,DWORD PTR [rdi+0x121cc]
    c831:	test   edx,edx
    c833:	mov    eax,ecx
    c835:	je     c8e8 <hvm_vmcall_postprocess+0x138>
    c83b:	mov    eax,DWORD PTR [rdi+0x121d0]
    c841:	cmp    eax,ecx
    c843:	jg     cab8 <hvm_vmcall_postprocess+0x308>
    c849:	test   ecx,ecx
    c84b:	mov    ebp,DWORD PTR [rip+0x21c88b]        # 2290dc <opt+0x3c>
    c851:	je     c85f <hvm_vmcall_postprocess+0xaf>
    c853:	test   ebp,ebp
    c855:	je     c85f <hvm_vmcall_postprocess+0xaf>
    c857:	cmp    eax,ebp
    c859:	jge    cb13 <hvm_vmcall_postprocess+0x363>
    c85f:	add    eax,eax
    c861:	cmovne edx,eax
    c864:	test   ebp,ebp
    c866:	je     cb04 <hvm_vmcall_postprocess+0x354>
    c86c:	cmp    edx,ebp
    c86e:	jle    cb04 <hvm_vmcall_postprocess+0x354>
    c874:	mov    rdi,QWORD PTR [rbx+0x121e0]
    c87b:	movsxd rsi,ebp
    c87e:	shl    rsi,0x3
    c882:	call   44c0 <realloc@plt>
    c887:	test   rax,rax
    c88a:	je     caed <hvm_vmcall_postprocess+0x33d>
    c890:	mov    QWORD PTR [rbx+0x121e0],rax
    c897:	mov    DWORD PTR [rbx+0x121d0],ebp
    c89d:	movsxd rcx,DWORD PTR [rbx+0x121cc]
    c8a4:	cmp    ecx,ebp
    c8a6:	jl     cab8 <hvm_vmcall_postprocess+0x308>
    c8ac:	mov    eax,ecx
    c8ae:	cdq    
    c8af:	idiv   ebp
    c8b1:	lea    esi,[rax+0x1]
    c8b4:	movsxd rdi,edx
    c8b7:	mov    edx,0x55555556
    c8bc:	mov    eax,esi
    c8be:	imul   edx
    c8c0:	mov    eax,esi
    c8c2:	sar    eax,0x1f
    c8c5:	sub    eax,edx
    c8c7:	add    eax,edi
    c8c9:	cdq    
    c8ca:	idiv   esi
    c8cc:	mov    eax,ecx
    c8ce:	test   edx,edx
    c8d0:	jne    c8e8 <hvm_vmcall_postprocess+0x138>
    c8d2:	mov    rax,QWORD PTR [rbx+0x121e0]
    c8d9:	mov    QWORD PTR [rax+rdi*8],r12
    c8dd:	mov    eax,DWORD PTR [rbx+0x121cc]
    c8e3:	nop    DWORD PTR [rax+rax*1+0x0]
    c8e8:	add    eax,0x1
    c8eb:	add    QWORD PTR [rbx+0x121d8],r12
    c8f2:	add    DWORD PTR [rbx+0x121e8],0x1
    c8f9:	mov    DWORD PTR [rbx+0x121cc],eax
    c8ff:	add    QWORD PTR [rbx+0x121f0],r12
    c906:	jmp    c7fb <hvm_vmcall_postprocess+0x4b>
    c90b:	nop    DWORD PTR [rax+rax*1+0x0]
    c910:	repz ret 
    c912:	nop    WORD PTR [rax+rax*1+0x0]
    c918:	mov    ecx,DWORD PTR [rip+0x21c7ba]        # 2290d8 <opt+0x38>
    c91e:	movsxd rax,DWORD PTR [rdx+0x1197c]
    c925:	test   ecx,ecx
    c927:	je     ca00 <hvm_vmcall_postprocess+0x250>
    c92d:	mov    edx,DWORD PTR [rdx+0x11980]
    c933:	cmp    edx,eax
    c935:	jg     ca90 <hvm_vmcall_postprocess+0x2e0>
    c93b:	test   eax,eax
    c93d:	mov    r13d,DWORD PTR [rip+0x21c798]        # 2290dc <opt+0x3c>
    c944:	je     c954 <hvm_vmcall_postprocess+0x1a4>
    c946:	test   r13d,r13d
    c949:	je     c954 <hvm_vmcall_postprocess+0x1a4>
    c94b:	cmp    edx,r13d
    c94e:	jge    cb1a <hvm_vmcall_postprocess+0x36a>
    c954:	add    edx,edx
    c956:	cmovne ecx,edx
    c959:	cmp    ecx,r13d
    c95c:	jle    cb0b <hvm_vmcall_postprocess+0x35b>
    c962:	test   r13d,r13d
    c965:	je     cb0b <hvm_vmcall_postprocess+0x35b>
    c96b:	lea    rax,[rbp*8+0x0]
    c973:	movsxd rsi,r13d
    c976:	shl    rsi,0x3
    c97a:	sub    rax,rbp
    c97d:	lea    r14,[rbx+rax*8]
    c981:	mov    rdi,QWORD PTR [r14+0x11990]
    c988:	call   44c0 <realloc@plt>
    c98d:	test   rax,rax
    c990:	je     caf8 <hvm_vmcall_postprocess+0x348>
    c996:	mov    QWORD PTR [r14+0x11990],rax
    c99d:	mov    DWORD PTR [r14+0x11980],r13d
    c9a4:	lea    rax,[rbp*8+0x0]
    c9ac:	sub    rax,rbp
    c9af:	movsxd rax,DWORD PTR [rbx+rax*8+0x1197c]
    c9b7:	cmp    eax,r13d
    c9ba:	jl     ca90 <hvm_vmcall_postprocess+0x2e0>
    c9c0:	cdq    
    c9c1:	idiv   r13d
    c9c4:	lea    ecx,[rax+0x1]
    c9c7:	mov    esi,edx
    c9c9:	mov    edx,0x55555556
    c9ce:	mov    eax,ecx
    c9d0:	imul   edx
    c9d2:	mov    eax,ecx
    c9d4:	sar    eax,0x1f
    c9d7:	sub    eax,edx
    c9d9:	add    eax,esi
    c9db:	cdq    
    c9dc:	idiv   ecx
    c9de:	lea    rax,[rbp*8+0x0]
    c9e6:	sub    rax,rbp
    c9e9:	test   edx,edx
    c9eb:	je     cad0 <hvm_vmcall_postprocess+0x320>
    c9f1:	mov    eax,DWORD PTR [rbx+rax*8+0x1197c]
    c9f8:	nop    DWORD PTR [rax+rax*1+0x0]
    ca00:	lea    rdx,[rbp*8+0x0]
    ca08:	add    eax,0x1
    ca0b:	sub    rdx,rbp
    ca0e:	lea    rdx,[rbx+rdx*8]
    ca12:	mov    DWORD PTR [rdx+0x1197c],eax
    ca18:	add    QWORD PTR [rdx+0x11988],r12
    ca1f:	add    DWORD PTR [rdx+0x11998],0x1
    ca26:	add    QWORD PTR [rdx+0x119a0],r12
    ca2d:	jmp    c7fb <hvm_vmcall_postprocess+0x4b>
    ca32:	nop    WORD PTR [rax+rax*1+0x0]
    ca38:	lea    rsi,[rip+0xffffffffffff9631]        # 6070 <hvm_vmcall_summary>
    ca3f:	xor    edx,edx
    ca41:	mov    rdi,rbx
    ca44:	call   bcf0 <__hvm_set_summary_handler>
    ca49:	test   eax,eax
    ca4b:	jne    ca60 <hvm_vmcall_postprocess+0x2b0>
    ca4d:	pop    rbx
    ca4e:	mov    DWORD PTR [rip+0x25a950],0x1        # 2673a8 <done.6599>
    ca58:	pop    rbp
    ca59:	pop    r12
    ca5b:	pop    r13
    ca5d:	pop    r14
    ca5f:	ret    
    ca60:	mov    rdi,QWORD PTR [rip+0x21f9d9]        # 22c440 <stderr@@GLIBC_2.2.5>
    ca67:	lea    rcx,[rip+0x16bd2]        # 23640 <__func__.6601>
    ca6e:	lea    rdx,[rip+0x130bb]        # 1fb30 <_IO_stdin_used+0x2b70>
    ca75:	mov    r8d,eax
    ca78:	mov    esi,0x1
    ca7d:	xor    eax,eax
    ca7f:	call   4560 <__fprintf_chk@plt>
    ca84:	jmp    ca4d <hvm_vmcall_postprocess+0x29d>
    ca86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ca90:	lea    rdx,[rbp*8+0x0]
    ca98:	sub    rdx,rbp
    ca9b:	lea    rdx,[rbx+rdx*8]
    ca9f:	mov    rcx,QWORD PTR [rdx+0x11990]
    caa6:	mov    QWORD PTR [rcx+rax*8],r12
    caaa:	mov    eax,DWORD PTR [rdx+0x1197c]
    cab0:	jmp    ca00 <hvm_vmcall_postprocess+0x250>
    cab5:	nop    DWORD PTR [rax]
    cab8:	mov    rax,QWORD PTR [rbx+0x121e0]
    cabf:	mov    QWORD PTR [rax+rcx*8],r12
    cac3:	mov    eax,DWORD PTR [rbx+0x121cc]
    cac9:	jmp    c8e8 <hvm_vmcall_postprocess+0x138>
    cace:	xchg   ax,ax
    cad0:	lea    rdx,[rbx+rax*8]
    cad4:	movsxd rax,esi
    cad7:	mov    rcx,QWORD PTR [rdx+0x11990]
    cade:	mov    QWORD PTR [rcx+rax*8],r12
    cae2:	mov    eax,DWORD PTR [rdx+0x1197c]
    cae8:	jmp    ca00 <hvm_vmcall_postprocess+0x250>
    caed:	mov    ebp,DWORD PTR [rbx+0x121d0]
    caf3:	jmp    c89d <hvm_vmcall_postprocess+0xed>
    caf8:	mov    r13d,DWORD PTR [r14+0x11980]
    caff:	jmp    c9a4 <hvm_vmcall_postprocess+0x1f4>
    cb04:	mov    ebp,edx
    cb06:	jmp    c874 <hvm_vmcall_postprocess+0xc4>
    cb0b:	mov    r13d,ecx
    cb0e:	jmp    c96b <hvm_vmcall_postprocess+0x1bb>
    cb13:	mov    ebp,eax
    cb15:	jmp    c8ac <hvm_vmcall_postprocess+0xfc>
    cb1a:	mov    r13d,edx
    cb1d:	jmp    c9c0 <hvm_vmcall_postprocess+0x210>
    cb22:	nop    DWORD PTR [rax+0x0]
    cb26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cb30 <hvm_generic_postprocess>:
    cb30:	push   r14
    cb32:	push   r13
    cb34:	push   r12
    cb36:	push   rbp
    cb37:	push   rbx
    cb38:	mov    r9d,DWORD PTR [rdi+0x28348]
    cb3f:	mov    rbx,rdi
    cb42:	test   r9d,r9d
    cb45:	je     cba0 <hvm_generic_postprocess+0x70>
    cb47:	lea    eax,[r9-0x82000]
    cb4e:	and    ah,0xfc
    cb51:	cmp    eax,0x25
    cb54:	mov    ebp,eax
    cb56:	jbe    cc2a <hvm_generic_postprocess+0xfa>
    cb5c:	mov    rdi,QWORD PTR [rip+0x2586f5]        # 265258 <warn>
    cb63:	lea    rcx,[rip+0x16a36]        # 235a0 <__func__.6713>
    cb6a:	lea    rdx,[rip+0x1301f]        # 1fb90 <_IO_stdin_used+0x2bd0>
    cb71:	xor    eax,eax
    cb73:	mov    r8,rbp
    cb76:	mov    esi,0x1
    cb7b:	call   4560 <__fprintf_chk@plt>
    cb80:	cmp    DWORD PTR [rip+0x21c559],0x3        # 2290e0 <opt+0x40>
    cb87:	jbe    ce4a <hvm_generic_postprocess+0x31a>
    cb8d:	pop    rbx
    cb8e:	pop    rbp
    cb8f:	pop    r12
    cb91:	pop    r13
    cb93:	pop    r14
    cb95:	ret    
    cb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cba0:	test   BYTE PTR [rip+0x21c4fc],0x10        # 2290a3 <opt+0x3>
    cba7:	mov    r8d,DWORD PTR [rdi+0x28400]
    cbae:	jne    cbd0 <hvm_generic_postprocess+0xa0>
    cbb0:	cmp    r8d,0x36
    cbb4:	ja     cbd0 <hvm_generic_postprocess+0xa0>
    cbb6:	movabs rax,0x40080000000080
    cbc0:	bt     rax,r8
    cbc4:	jb     cb8d <hvm_generic_postprocess+0x5d>
    cbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cbd0:	lea    r12,[rip+0x2597c9]        # 2663a0 <warned.6707>
    cbd7:	mov    eax,r8d
    cbda:	xor    ebp,ebp
    cbdc:	mov    edi,DWORD PTR [r12+rax*4]
    cbe0:	test   edi,edi
    cbe2:	jne    cc2a <hvm_generic_postprocess+0xfa>
    cbe4:	cmp    DWORD PTR [rbx+0x20],r8d
    cbe8:	lea    r9,[rip+0x1079a]        # 1d389 <_IO_stdin_used+0x3c9>
    cbef:	jb     cbf9 <hvm_generic_postprocess+0xc9>
    cbf1:	mov    rdx,QWORD PTR [rbx+0x18]
    cbf5:	mov    r9,QWORD PTR [rdx+rax*8]
    cbf9:	mov    rdi,QWORD PTR [rip+0x258658]        # 265258 <warn>
    cc00:	lea    rcx,[rip+0x16999]        # 235a0 <__func__.6713>
    cc07:	lea    rdx,[rip+0x12f52]        # 1fb60 <_IO_stdin_used+0x2ba0>
    cc0e:	mov    esi,0x1
    cc13:	xor    eax,eax
    cc15:	xor    ebp,ebp
    cc17:	call   4560 <__fprintf_chk@plt>
    cc1c:	mov    eax,DWORD PTR [rbx+0x28400]
    cc22:	mov    DWORD PTR [r12+rax*4],0x1
    cc2a:	mov    esi,DWORD PTR [rip+0x21c474]        # 2290a4 <opt+0x4>
    cc30:	test   esi,esi
    cc32:	je     cb8d <hvm_generic_postprocess+0x5d>
    cc38:	lea    rax,[rbp*8+0x0]
    cc40:	mov    r12,QWORD PTR [rbx+0x283e8]
    cc47:	sub    rax,rbp
    cc4a:	lea    rcx,[rbx+rax*8]
    cc4e:	add    DWORD PTR [rcx+0x12200],0x1
    cc55:	test   r12,r12
    cc58:	jne    cd10 <hvm_generic_postprocess+0x1e0>
    cc5e:	lea    r12,[rip+0x25969b]        # 266300 <registered.6706>
    cc65:	mov    eax,DWORD PTR [r12+rbp*4]
    cc69:	test   eax,eax
    cc6b:	je     ccd8 <hvm_generic_postprocess+0x1a8>
    cc6d:	mov    edx,DWORD PTR [rbx+0x28400]
    cc73:	lea    ecx,[rdx+0x1]
    cc76:	cmp    eax,ecx
    cc78:	je     cb8d <hvm_generic_postprocess+0x5d>
    cc7e:	lea    r12,[rip+0x25865b]        # 2652e0 <warned.6714>
    cc85:	mov    ecx,edx
    cc87:	mov    ecx,DWORD PTR [r12+rcx*4]
    cc8b:	test   ecx,ecx
    cc8d:	jne    cb8d <hvm_generic_postprocess+0x5d>
    cc93:	sub    rsp,0x8
    cc97:	mov    rdi,QWORD PTR [rip+0x2585ba]        # 265258 <warn>
    cc9e:	lea    r9d,[rax-0x1]
    cca2:	push   rdx
    cca3:	lea    rcx,[rip+0x168f6]        # 235a0 <__func__.6713>
    ccaa:	lea    rdx,[rip+0x12eff]        # 1fbb0 <_IO_stdin_used+0x2bf0>
    ccb1:	mov    r8,rbp
    ccb4:	mov    esi,0x1
    ccb9:	xor    eax,eax
    ccbb:	call   4560 <__fprintf_chk@plt>
    ccc0:	mov    eax,DWORD PTR [rbx+0x28400]
    ccc6:	mov    DWORD PTR [r12+rax*4],0x1
    ccce:	pop    rax
    cccf:	pop    rdx
    ccd0:	jmp    cb8d <hvm_generic_postprocess+0x5d>
    ccd5:	nop    DWORD PTR [rax]
    ccd8:	lea    rsi,[rip+0xffffffffffff9861]        # 6540 <hvm_generic_summary>
    ccdf:	mov    rdx,rbp
    cce2:	mov    rdi,rbx
    cce5:	call   bcf0 <__hvm_set_summary_handler>
    ccea:	test   eax,eax
    ccec:	jne    ce58 <hvm_generic_postprocess+0x328>
    ccf2:	mov    eax,DWORD PTR [rbx+0x28400]
    ccf8:	add    eax,0x1
    ccfb:	mov    DWORD PTR [r12+rbp*4],eax
    ccff:	pop    rbx
    cd00:	pop    rbp
    cd01:	pop    r12
    cd03:	pop    r13
    cd05:	pop    r14
    cd07:	ret    
    cd08:	nop    DWORD PTR [rax+rax*1+0x0]
    cd10:	mov    edx,DWORD PTR [rip+0x21c3c2]        # 2290d8 <opt+0x38>
    cd16:	movsxd rax,DWORD PTR [rcx+0x12204]
    cd1d:	test   edx,edx
    cd1f:	je     cdf0 <hvm_generic_postprocess+0x2c0>
    cd25:	mov    ecx,DWORD PTR [rcx+0x12208]
    cd2b:	cmp    ecx,eax
    cd2d:	jg     ce28 <hvm_generic_postprocess+0x2f8>
    cd33:	test   eax,eax
    cd35:	mov    r13d,DWORD PTR [rip+0x21c3a0]        # 2290dc <opt+0x3c>
    cd3c:	je     cd4c <hvm_generic_postprocess+0x21c>
    cd3e:	test   r13d,r13d
    cd41:	je     cd4c <hvm_generic_postprocess+0x21c>
    cd43:	cmp    ecx,r13d
    cd46:	jge    ceb9 <hvm_generic_postprocess+0x389>
    cd4c:	add    ecx,ecx
    cd4e:	cmovne edx,ecx
    cd51:	test   r13d,r13d
    cd54:	je     ceb1 <hvm_generic_postprocess+0x381>
    cd5a:	cmp    edx,r13d
    cd5d:	jle    ceb1 <hvm_generic_postprocess+0x381>
    cd63:	lea    rax,[rbp*8+0x0]
    cd6b:	movsxd rsi,r13d
    cd6e:	shl    rsi,0x3
    cd72:	sub    rax,rbp
    cd75:	lea    r14,[rbx+rax*8]
    cd79:	mov    rdi,QWORD PTR [r14+0x12218]
    cd80:	call   44c0 <realloc@plt>
    cd85:	test   rax,rax
    cd88:	je     cea5 <hvm_generic_postprocess+0x375>
    cd8e:	mov    QWORD PTR [r14+0x12218],rax
    cd95:	mov    DWORD PTR [r14+0x12208],r13d
    cd9c:	lea    rax,[rbp*8+0x0]
    cda4:	sub    rax,rbp
    cda7:	movsxd rax,DWORD PTR [rbx+rax*8+0x12204]
    cdaf:	cmp    eax,r13d
    cdb2:	jl     ce28 <hvm_generic_postprocess+0x2f8>
    cdb4:	cdq    
    cdb5:	idiv   r13d
    cdb8:	lea    ecx,[rax+0x1]
    cdbb:	mov    esi,edx
    cdbd:	mov    edx,0x55555556
    cdc2:	mov    eax,ecx
    cdc4:	imul   edx
    cdc6:	mov    eax,ecx
    cdc8:	sar    eax,0x1f
    cdcb:	sub    eax,edx
    cdcd:	add    eax,esi
    cdcf:	cdq    
    cdd0:	idiv   ecx
    cdd2:	lea    rax,[rbp*8+0x0]
    cdda:	sub    rax,rbp
    cddd:	test   edx,edx
    cddf:	je     ce88 <hvm_generic_postprocess+0x358>
    cde5:	mov    eax,DWORD PTR [rbx+rax*8+0x12204]
    cdec:	nop    DWORD PTR [rax+0x0]
    cdf0:	lea    rdx,[rbp*8+0x0]
    cdf8:	add    eax,0x1
    cdfb:	sub    rdx,rbp
    cdfe:	lea    rdx,[rbx+rdx*8]
    ce02:	mov    DWORD PTR [rdx+0x12204],eax
    ce08:	add    QWORD PTR [rdx+0x12210],r12
    ce0f:	add    DWORD PTR [rdx+0x12220],0x1
    ce16:	add    QWORD PTR [rdx+0x12228],r12
    ce1d:	jmp    cc5e <hvm_generic_postprocess+0x12e>
    ce22:	nop    WORD PTR [rax+rax*1+0x0]
    ce28:	lea    rdx,[rbp*8+0x0]
    ce30:	sub    rdx,rbp
    ce33:	lea    rdx,[rbx+rdx*8]
    ce37:	mov    rcx,QWORD PTR [rdx+0x12218]
    ce3e:	mov    QWORD PTR [rcx+rax*8],r12
    ce42:	mov    eax,DWORD PTR [rdx+0x12204]
    ce48:	jmp    cdf0 <hvm_generic_postprocess+0x2c0>
    ce4a:	mov    edi,0x1
    ce4f:	call   4540 <exit@plt>
    ce54:	nop    DWORD PTR [rax+0x0]
    ce58:	mov    rdi,QWORD PTR [rip+0x21f5e1]        # 22c440 <stderr@@GLIBC_2.2.5>
    ce5f:	lea    rcx,[rip+0x1673a]        # 235a0 <__func__.6713>
    ce66:	lea    rdx,[rip+0x12cc3]        # 1fb30 <_IO_stdin_used+0x2b70>
    ce6d:	mov    r8d,eax
    ce70:	mov    esi,0x1
    ce75:	xor    eax,eax
    ce77:	call   4560 <__fprintf_chk@plt>
    ce7c:	jmp    ccf2 <hvm_generic_postprocess+0x1c2>
    ce81:	nop    DWORD PTR [rax+0x0]
    ce88:	lea    rdx,[rbx+rax*8]
    ce8c:	movsxd rax,esi
    ce8f:	mov    rcx,QWORD PTR [rdx+0x12218]
    ce96:	mov    QWORD PTR [rcx+rax*8],r12
    ce9a:	mov    eax,DWORD PTR [rdx+0x12204]
    cea0:	jmp    cdf0 <hvm_generic_postprocess+0x2c0>
    cea5:	mov    r13d,DWORD PTR [r14+0x12208]
    ceac:	jmp    cd9c <hvm_generic_postprocess+0x26c>
    ceb1:	mov    r13d,edx
    ceb4:	jmp    cd63 <hvm_generic_postprocess+0x233>
    ceb9:	mov    r13d,ecx
    cebc:	jmp    cdb4 <hvm_generic_postprocess+0x284>
    cec1:	nop    DWORD PTR [rax+rax*1+0x0]
    cec6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ced0 <pf_preprocess>:
    ced0:	cmp    esi,0x2
    ced3:	je     d0b8 <pf_preprocess+0x1e8>
    ced9:	push   rbx
    ceda:	mov    rbx,rdi
    cedd:	jle    d0a0 <pf_preprocess+0x1d0>
    cee3:	cmp    esi,0x3
    cee6:	je     d010 <pf_preprocess+0x140>
    ceec:	cmp    esi,0x4
    ceef:	jne    d100 <pf_preprocess+0x230>
    cef5:	mov    rcx,QWORD PTR [rdi]
    cef8:	movabs rax,0xffff000000000000
    cf02:	mov    rdx,rcx
    cf05:	and    rdx,rax
    cf08:	bt     rcx,0x2f
    cf0d:	jae    d120 <pf_preprocess+0x250>
    cf13:	cmp    rdx,rax
    cf16:	je     cf35 <pf_preprocess+0x65>
    cf18:	mov    rdi,QWORD PTR [rip+0x258339]        # 265258 <warn>
    cf1f:	lea    rdx,[rip+0x12caa]        # 1fbd0 <_IO_stdin_used+0x2c10>
    cf26:	mov    esi,0x1
    cf2b:	xor    eax,eax
    cf2d:	call   4560 <__fprintf_chk@plt>
    cf32:	mov    rcx,QWORD PTR [rbx]
    cf35:	mov    rdx,rcx
    cf38:	mov    r8,rcx
    cf3b:	mov    rdi,rcx
    cf3e:	mov    rsi,rcx
    cf41:	mov    rax,rcx
    cf44:	shr    rdx,0x27
    cf48:	shr    r8,0x1e
    cf4c:	shr    rdi,0x15
    cf50:	shr    rsi,0xc
    cf54:	shr    rax,0x3
    cf58:	and    edx,0x1ff
    cf5e:	and    r8d,0x1ff
    cf65:	and    edi,0x1ff
    cf6b:	and    esi,0x1ff
    cf71:	and    eax,0x1ff
    cf76:	and    ecx,0x4
    cf79:	mov    DWORD PTR [rbx+0x50],edx
    cf7c:	mov    DWORD PTR [rbx+0x4c],r8d
    cf80:	mov    DWORD PTR [rbx+0x48],edi
    cf83:	mov    DWORD PTR [rbx+0x44],esi
    cf86:	mov    DWORD PTR [rbx+0x40],eax
    cf89:	je     cf92 <pf_preprocess+0xc2>
    cf8b:	mov    DWORD PTR [rbx+0x54],0x0
    cf92:	cmp    edx,0x1ed
    cf98:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    cfa0:	jne    d0ac <pf_preprocess+0x1dc>
    cfa6:	cmp    r8d,0x1ed
    cfad:	mov    edx,eax
    cfaf:	je     d1a8 <pf_preprocess+0x2d8>
    cfb5:	mov    rax,rdx
    cfb8:	mov    edx,esi
    cfba:	shl    rdi,0x1e
    cfbe:	shl    rax,0xc
    cfc2:	shl    rdx,0x15
    cfc6:	shl    r8,0x27
    cfca:	or     rax,rdx
    cfcd:	mov    DWORD PTR [rbx+0x58],0x1
    cfd4:	or     rax,0xfff
    cfda:	or     rax,rdi
    cfdd:	or     rax,r8
    cfe0:	mov    QWORD PTR [rbx+0x38],rax
    cfe4:	movabs rdx,0x800000000000
    cfee:	test   rax,rdx
    cff1:	je     d004 <pf_preprocess+0x134>
    cff3:	movabs rdx,0xffff000000000000
    cffd:	or     rax,rdx
    d000:	mov    QWORD PTR [rbx+0x38],rax
    d004:	pop    rbx
    d005:	ret    
    d006:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d010:	mov    rax,QWORD PTR [rdi]
    d013:	mov    rcx,rax
    d016:	mov    rsi,rax
    d019:	mov    rdx,rax
    d01c:	shr    rcx,0x15
    d020:	shr    rsi,0xc
    d024:	shr    rdx,0x3
    d028:	mov    edi,eax
    d02a:	and    ecx,0x1ff
    d030:	and    esi,0x1ff
    d036:	shr    edi,0x1e
    d039:	and    edx,0x1ff
    d03f:	test   al,0x4
    d041:	mov    DWORD PTR [rbx+0x4c],edi
    d044:	mov    DWORD PTR [rbx+0x48],ecx
    d047:	mov    DWORD PTR [rbx+0x44],esi
    d04a:	mov    DWORD PTR [rbx+0x40],edx
    d04d:	je     d056 <pf_preprocess+0x186>
    d04f:	mov    DWORD PTR [rbx+0x54],0x0
    d056:	cmp    edi,0x3
    d059:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    d061:	mov    DWORD PTR [rbx+0x58],0x0
    d068:	jne    d004 <pf_preprocess+0x134>
    d06a:	mov    eax,ecx
    d06c:	shr    eax,0x2
    d06f:	test   eax,eax
    d071:	jne    d004 <pf_preprocess+0x134>
    d073:	cmp    ecx,0x3
    d076:	je     d158 <pf_preprocess+0x288>
    d07c:	shl    edx,0xc
    d07f:	shl    esi,0x15
    d082:	shl    ecx,0x1e
    d085:	or     edx,esi
    d087:	mov    DWORD PTR [rbx+0x58],0x1
    d08e:	or     edx,0xfff
    d094:	or     edx,ecx
    d096:	mov    eax,edx
    d098:	mov    QWORD PTR [rbx+0x38],rax
    d09c:	pop    rbx
    d09d:	ret    
    d09e:	xchg   ax,ax
    d0a0:	test   esi,esi
    d0a2:	jne    d100 <pf_preprocess+0x230>
    d0a4:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    d0ac:	mov    DWORD PTR [rbx+0x58],0x0
    d0b3:	pop    rbx
    d0b4:	ret    
    d0b5:	nop    DWORD PTR [rax]
    d0b8:	mov    rax,QWORD PTR [rdi]
    d0bb:	mov    QWORD PTR [rdi+0x38],0xffffffffffffffff
    d0c3:	mov    ecx,eax
    d0c5:	mov    rdx,rax
    d0c8:	shr    rax,0x2
    d0cc:	shr    ecx,0x16
    d0cf:	shr    rdx,0xc
    d0d3:	and    eax,0x3ff
    d0d8:	and    edx,0x3ff
    d0de:	cmp    ecx,0x300
    d0e4:	mov    DWORD PTR [rdi+0x48],ecx
    d0e7:	mov    DWORD PTR [rdi+0x44],edx
    d0ea:	mov    DWORD PTR [rdi+0x40],eax
    d0ed:	je     d130 <pf_preprocess+0x260>
    d0ef:	mov    DWORD PTR [rdi+0x58],0x0
    d0f6:	ret    
    d0f7:	nop    WORD PTR [rax+rax*1+0x0]
    d100:	mov    rdi,QWORD PTR [rip+0x258151]        # 265258 <warn>
    d107:	lea    rdx,[rip+0x12b0a]        # 1fc18 <_IO_stdin_used+0x2c58>
    d10e:	mov    ecx,esi
    d110:	xor    eax,eax
    d112:	mov    esi,0x1
    d117:	call   4560 <__fprintf_chk@plt>
    d11c:	jmp    d0a4 <pf_preprocess+0x1d4>
    d11e:	xchg   ax,ax
    d120:	test   rdx,rdx
    d123:	je     cf35 <pf_preprocess+0x65>
    d129:	jmp    cf18 <pf_preprocess+0x48>
    d12e:	xchg   ax,ax
    d130:	cmp    edx,0x300
    d136:	je     d190 <pf_preprocess+0x2c0>
    d138:	shl    edx,0x16
    d13b:	shl    eax,0xc
    d13e:	mov    DWORD PTR [rdi+0x58],0x1
    d145:	or     eax,edx
    d147:	or     eax,0xfff
    d14c:	mov    QWORD PTR [rdi+0x38],rax
    d150:	ret    
    d151:	nop    DWORD PTR [rax+0x0]
    d158:	mov    eax,esi
    d15a:	shr    eax,0x2
    d15d:	test   eax,eax
    d15f:	jne    d07c <pf_preprocess+0x1ac>
    d165:	cmp    esi,0x3
    d168:	je     d20c <pf_preprocess+0x33c>
    d16e:	shl    esi,0x1e
    d171:	mov    DWORD PTR [rbx+0x58],0x2
    d178:	or     esi,0x7fffff
    d17e:	mov    eax,esi
    d180:	mov    QWORD PTR [rbx+0x38],rax
    d184:	pop    rbx
    d185:	ret    
    d186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d190:	shl    eax,0x16
    d193:	mov    DWORD PTR [rdi+0x58],0x2
    d19a:	or     eax,0x3fffff
    d19f:	mov    QWORD PTR [rdi+0x38],rax
    d1a3:	ret    
    d1a4:	nop    DWORD PTR [rax+0x0]
    d1a8:	cmp    edi,0x1ed
    d1ae:	je     d1e0 <pf_preprocess+0x310>
    d1b0:	mov    rax,rdx
    d1b3:	mov    edx,esi
    d1b5:	shl    rdi,0x27
    d1b9:	shl    rax,0x15
    d1bd:	shl    rdx,0x1e
    d1c1:	mov    DWORD PTR [rbx+0x58],0x2
    d1c8:	or     rax,rdx
    d1cb:	or     rax,0x1fffff
    d1d1:	or     rax,rdi
    d1d4:	mov    QWORD PTR [rbx+0x38],rax
    d1d8:	jmp    cfe4 <pf_preprocess+0x114>
    d1dd:	nop    DWORD PTR [rax]
    d1e0:	cmp    esi,0x1ed
    d1e6:	je     d230 <pf_preprocess+0x360>
    d1e8:	mov    rax,rdx
    d1eb:	shl    rsi,0x27
    d1ef:	mov    DWORD PTR [rbx+0x58],0x3
    d1f6:	shl    rax,0x1e
    d1fa:	or     rax,rsi
    d1fd:	or     rax,0x3fffffff
    d203:	mov    QWORD PTR [rbx+0x38],rax
    d207:	jmp    cfe4 <pf_preprocess+0x114>
    d20c:	mov    eax,edx
    d20e:	shr    eax,0x2
    d211:	test   eax,eax
    d213:	jne    d16e <pf_preprocess+0x29e>
    d219:	mov    eax,edx
    d21b:	mov    DWORD PTR [rbx+0x58],0x3
    d222:	shl    eax,0x1e
    d225:	or     eax,0x3fffffff
    d22a:	mov    QWORD PTR [rbx+0x38],rax
    d22e:	pop    rbx
    d22f:	ret    
    d230:	mov    rax,rdx
    d233:	movabs rdx,0x7fffffffff
    d23d:	mov    DWORD PTR [rbx+0x58],0x4
    d244:	shl    rax,0x27
    d248:	or     rax,rdx
    d24b:	mov    QWORD PTR [rbx+0x38],rax
    d24f:	jmp    cfe4 <pf_preprocess+0x114>
    d254:	xchg   ax,ax
    d256:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d260 <hvm_pf_xen_preprocess>:
    d260:	push   rbp
    d261:	push   rbx
    d262:	mov    rbx,rsi
    d265:	sub    rsp,0x8
    d269:	cmp    edi,0x82101
    d26f:	mov    rbp,QWORD PTR [rsi+0x28410]
    d276:	je     d2e0 <hvm_pf_xen_preprocess+0x80>
    d278:	mov    eax,DWORD PTR [rbp+0x0]
    d27b:	mov    QWORD PTR [rsi+0x28348],rax
    d282:	mov    eax,DWORD PTR [rbp+0x4]
    d285:	mov    DWORD PTR [rsi+0x28354],eax
    d28b:	test   BYTE PTR [rbx+0x283cc],0x1
    d292:	je     d2a8 <hvm_pf_xen_preprocess+0x48>
    d294:	mov    DWORD PTR [rbx+0x28358],0x5
    d29e:	add    rsp,0x8
    d2a2:	pop    rbx
    d2a3:	pop    rbp
    d2a4:	ret    
    d2a5:	nop    DWORD PTR [rax]
    d2a8:	mov    rax,QWORD PTR [rbx+0x10]
    d2ac:	lea    rdi,[rbx+0x28348]
    d2b3:	mov    esi,DWORD PTR [rax+0x14]
    d2b6:	call   ced0 <pf_preprocess>
    d2bb:	mov    eax,DWORD PTR [rbx+0x283a0]
    d2c1:	test   eax,eax
    d2c3:	jle    d358 <hvm_pf_xen_preprocess+0xf8>
    d2c9:	mov    DWORD PTR [rbx+0x28358],0x8
    d2d3:	add    rsp,0x8
    d2d7:	pop    rbx
    d2d8:	pop    rbp
    d2d9:	ret    
    d2da:	nop    WORD PTR [rax+rax*1+0x0]
    d2e0:	mov    r8,QWORD PTR [rbp+0x0]
    d2e4:	movabs rax,0xffff000000000000
    d2ee:	mov    rdx,r8
    d2f1:	and    rdx,rax
    d2f4:	bt     r8,0x2f
    d2f9:	jb     d320 <hvm_pf_xen_preprocess+0xc0>
    d2fb:	xor    eax,eax
    d2fd:	test   rdx,rdx
    d300:	sete   al
    d303:	test   eax,eax
    d305:	je     d32d <hvm_pf_xen_preprocess+0xcd>
    d307:	mov    QWORD PTR [rbx+0x28348],r8
    d30e:	mov    eax,DWORD PTR [rbp+0x8]
    d311:	mov    DWORD PTR [rbx+0x28354],eax
    d317:	jmp    d28b <hvm_pf_xen_preprocess+0x2b>
    d31c:	nop    DWORD PTR [rax+0x0]
    d320:	cmp    rdx,rax
    d323:	sete   al
    d326:	movzx  eax,al
    d329:	test   eax,eax
    d32b:	jne    d307 <hvm_pf_xen_preprocess+0xa7>
    d32d:	mov    rdi,QWORD PTR [rip+0x257f24]        # 265258 <warn>
    d334:	lea    rcx,[rip+0x16495]        # 237d0 <__func__.6162>
    d33b:	lea    rdx,[rip+0x10051]        # 1d393 <_IO_stdin_used+0x3d3>
    d342:	mov    esi,0x1
    d347:	call   4560 <__fprintf_chk@plt>
    d34c:	mov    r8,QWORD PTR [rbp+0x0]
    d350:	jmp    d307 <hvm_pf_xen_preprocess+0xa7>
    d352:	nop    WORD PTR [rax+rax*1+0x0]
    d358:	mov    DWORD PTR [rbx+0x28358],0xc
    d362:	add    rsp,0x8
    d366:	pop    rbx
    d367:	pop    rbp
    d368:	ret    
    d369:	nop    DWORD PTR [rax+0x0]

000000000000d370 <hvm_pf_xen_process>:
    d370:	push   rbp
    d371:	push   rbx
    d372:	mov    rbp,rdi
    d375:	mov    rbx,rsi
    d378:	sub    rsp,0x8
    d37c:	mov    edi,DWORD PTR [rdi+0x10]
    d37f:	cmp    edi,0x82101
    d385:	je     d498 <hvm_pf_xen_process+0x128>
    d38b:	cmp    edi,0x82001
    d391:	je     d460 <hvm_pf_xen_process+0xf0>
    d397:	mov    rsi,rbx
    d39a:	call   d260 <hvm_pf_xen_preprocess>
    d39f:	test   BYTE PTR [rip+0x21bcfb],0x40        # 2290a1 <opt+0x1>
    d3a6:	je     d403 <hvm_pf_xen_process+0x93>
    d3a8:	cmp    DWORD PTR [rbx+0x28358],0x8
    d3af:	mov    r10d,DWORD PTR [rbx+0x28398]
    d3b6:	lea    rdx,[rbp+0x28]
    d3ba:	mov    edi,DWORD PTR [rbx+0x28394]
    d3c0:	mov    esi,DWORD PTR [rbx+0x28390]
    d3c6:	mov    eax,DWORD PTR [rbx+0x2838c]
    d3cc:	mov    r9d,DWORD PTR [rbx+0x28388]
    d3d3:	mov    r8d,DWORD PTR [rbx+0x28354]
    d3da:	mov    rcx,QWORD PTR [rbx+0x28348]
    d3e1:	je     d4b8 <hvm_pf_xen_process+0x148>
    d3e7:	push   r10
    d3e9:	push   rdi
    d3ea:	mov    edi,0x1
    d3ef:	push   rsi
    d3f0:	lea    rsi,[rip+0x12909]        # 1fd00 <_IO_stdin_used+0x2d40>
    d3f7:	push   rax
    d3f8:	xor    eax,eax
    d3fa:	call   44f0 <__printf_chk@plt>
    d3ff:	add    rsp,0x20
    d403:	mov    rax,QWORD PTR [rbx+0x283d8]
    d40a:	test   rax,rax
    d40d:	je     d448 <hvm_pf_xen_process+0xd8>
    d40f:	lea    rdx,[rip+0xfffffffffffff71a]        # cb30 <hvm_generic_postprocess>
    d416:	cmp    rax,rdx
    d419:	je     d448 <hvm_pf_xen_process+0xd8>
    d41b:	mov    rdi,QWORD PTR [rip+0x257e36]        # 265258 <warn>
    d422:	add    rsp,0x8
    d426:	lea    rcx,[rip+0x16363]        # 23790 <__func__.6186>
    d42d:	pop    rbx
    d42e:	pop    rbp
    d42f:	lea    rdx,[rip+0x12902]        # 1fd38 <_IO_stdin_used+0x2d78>
    d436:	mov    esi,0x1
    d43b:	xor    eax,eax
    d43d:	jmp    4560 <__fprintf_chk@plt>
    d442:	nop    WORD PTR [rax+rax*1+0x0]
    d448:	lea    rax,[rip+0xffffffffffffe9b1]        # be00 <hvm_pf_xen_postprocess>
    d44f:	mov    QWORD PTR [rbx+0x283d8],rax
    d456:	add    rsp,0x8
    d45a:	pop    rbx
    d45b:	pop    rbp
    d45c:	ret    
    d45d:	nop    DWORD PTR [rax]
    d460:	mov    rax,QWORD PTR [rsi+0x10]
    d464:	cmp    DWORD PTR [rax+0x14],0x4
    d468:	jne    d397 <hvm_pf_xen_process+0x27>
    d46e:	lea    rdx,[rip+0x12803]        # 1fc78 <_IO_stdin_used+0x2cb8>
    d475:	mov    ecx,0x4
    d47a:	mov    rdi,QWORD PTR [rip+0x257dd7]        # 265258 <warn>
    d481:	mov    esi,0x1
    d486:	xor    eax,eax
    d488:	call   4560 <__fprintf_chk@plt>
    d48d:	mov    edi,DWORD PTR [rbp+0x10]
    d490:	jmp    d397 <hvm_pf_xen_process+0x27>
    d495:	nop    DWORD PTR [rax]
    d498:	mov    rax,QWORD PTR [rsi+0x10]
    d49c:	lea    rdx,[rip+0x127a5]        # 1fc48 <_IO_stdin_used+0x2c88>
    d4a3:	mov    ecx,DWORD PTR [rax+0x14]
    d4a6:	cmp    ecx,0x4
    d4a9:	je     d397 <hvm_pf_xen_process+0x27>
    d4af:	jmp    d47a <hvm_pf_xen_process+0x10a>
    d4b1:	nop    DWORD PTR [rax+0x0]
    d4b8:	push   r10
    d4ba:	push   rdi
    d4bb:	mov    edi,0x1
    d4c0:	push   rsi
    d4c1:	push   rax
    d4c2:	lea    rsi,[rip+0x127df]        # 1fca8 <_IO_stdin_used+0x2ce8>
    d4c9:	push   r9
    d4cb:	mov    r9d,DWORD PTR [rbx+0x283a0]
    d4d2:	xor    eax,eax
    d4d4:	push   QWORD PTR [rbx+0x28380]
    d4da:	call   44f0 <__printf_chk@plt>
    d4df:	add    rsp,0x30
    d4e3:	jmp    d403 <hvm_pf_xen_process+0x93>
    d4e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d4f0 <hvm_vlapic_vmentry_cleanup>:
    d4f0:	push   r14
    d4f2:	mov    r14,rdi
    d4f5:	push   r13
    d4f7:	mov    r13,rsi
    d4fa:	push   r12
    d4fc:	movabs r12,0x44b82fa09b5a53
    d506:	push   rbp
    d507:	lea    rbp,[rdi+0x138]
    d50e:	push   rbx
    d50f:	lea    rbx,[rdi+0x78]
    d513:	jmp    d5d4 <hvm_vlapic_vmentry_cleanup+0xe4>
    d518:	nop    DWORD PTR [rax+rax*1+0x0]
    d520:	mov    rsi,r13
    d523:	sub    rsi,r8
    d526:	test   BYTE PTR [rip+0x21bb75],0x4        # 2290a2 <opt+0x2>
    d52d:	jne    d61d <hvm_vlapic_vmentry_cleanup+0x12d>
    d533:	test   BYTE PTR [rip+0x21bb67],0x40        # 2290a1 <opt+0x1>
    d53a:	je     d5a8 <hvm_vlapic_vmentry_cleanup+0xb8>
    d53c:	mov    r9d,DWORD PTR [rbx+0xc]
    d540:	cmp    r9d,0x1
    d544:	jle    d5a8 <hvm_vlapic_vmentry_cleanup+0xb8>
    d546:	mov    rax,rsi
    d549:	sub    rax,QWORD PTR [rip+0x21fc70]        # 22d1c0 <P+0x20>
    d550:	xor    edx,edx
    d552:	sub    rsp,0x8
    d556:	shl    rax,0xa
    d55a:	div    QWORD PTR [rip+0x21bb47]        # 2290a8 <opt+0x8>
    d561:	mov    rcx,rax
    d564:	mov    rdi,rax
    d567:	shr    rcx,0x9
    d56b:	mov    rax,rcx
    d56e:	mul    r12
    d571:	mov    rax,QWORD PTR [r14+0x8]
    d575:	mov    rcx,rdx
    d578:	mov    edx,DWORD PTR [rax+0x8]
    d57b:	shr    rcx,0xb
    d57f:	imul   eax,ecx,0x3b9aca00
    d585:	sub    edi,eax
    d587:	xor    eax,eax
    d589:	push   rdi
    d58a:	push   rcx
    d58b:	mov    edi,0x1
    d590:	push   rsi
    d591:	mov    ecx,DWORD PTR [r14]
    d594:	lea    rsi,[rip+0x127f5]        # 1fd90 <_IO_stdin_used+0x2dd0>
    d59b:	mov    r8d,DWORD PTR [rbx+0x8]
    d59f:	call   44f0 <__printf_chk@plt>
    d5a4:	add    rsp,0x20
    d5a8:	mov    QWORD PTR [rbx],0x0
    d5af:	mov    DWORD PTR [rbx+0x14],0x0
    d5b6:	mov    DWORD PTR [rbx+0x10],0x0
    d5bd:	mov    DWORD PTR [rbx+0xc],0x0
    d5c4:	mov    DWORD PTR [rbx+0x8],0x0
    d5cb:	add    rbx,0x18
    d5cf:	cmp    rbx,rbp
    d5d2:	je     d630 <hvm_vlapic_vmentry_cleanup+0x140>
    d5d4:	mov    edx,DWORD PTR [rbx+0x14]
    d5d7:	test   edx,edx
    d5d9:	je     d5cb <hvm_vlapic_vmentry_cleanup+0xdb>
    d5db:	mov    eax,DWORD PTR [rbx+0x10]
    d5de:	test   eax,eax
    d5e0:	je     d5cb <hvm_vlapic_vmentry_cleanup+0xdb>
    d5e2:	mov    r8,QWORD PTR [rbx]
    d5e5:	cmp    r8,r13
    d5e8:	jbe    d520 <hvm_vlapic_vmentry_cleanup+0x30>
    d5ee:	mov    ecx,DWORD PTR [rbx+0x8]
    d5f1:	mov    rdi,QWORD PTR [rip+0x257c60]        # 265258 <warn>
    d5f8:	lea    rdx,[rip+0x12761]        # 1fd60 <_IO_stdin_used+0x2da0>
    d5ff:	mov    esi,0x1
    d604:	xor    eax,eax
    d606:	mov    r9,r13
    d609:	call   4560 <__fprintf_chk@plt>
    d60e:	xor    esi,esi
    d610:	test   BYTE PTR [rip+0x21ba8b],0x4        # 2290a2 <opt+0x2>
    d617:	je     d533 <hvm_vlapic_vmentry_cleanup+0x43>
    d61d:	mov    r9d,DWORD PTR [rbx+0xc]
    d621:	jmp    d546 <hvm_vlapic_vmentry_cleanup+0x56>
    d626:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d630:	pop    rbx
    d631:	pop    rbp
    d632:	pop    r12
    d634:	pop    r13
    d636:	pop    r14
    d638:	ret    
    d639:	nop    DWORD PTR [rax+0x0]

000000000000d640 <hvm_vlapic_clear>:
    d640:	mov    QWORD PTR [rdi],0x0
    d647:	mov    QWORD PTR [rdi+0xb8],0x0
    d652:	mov    rcx,rdi
    d655:	lea    rdi,[rdi+0x8]
    d659:	xor    eax,eax
    d65b:	and    rdi,0xfffffffffffffff8
    d65f:	sub    rcx,rdi
    d662:	add    ecx,0xc0
    d668:	shr    ecx,0x3
    d66b:	rep stos QWORD PTR es:[rdi],rax
    d66e:	ret    
    d66f:	nop

000000000000d670 <find_vec>:
    d670:	lea    rdx,[rdi+0x8]
    d674:	xor    ecx,ecx
    d676:	xor    eax,eax
    d678:	jmp    d690 <find_vec+0x20>
    d67a:	nop    WORD PTR [rax+rax*1+0x0]
    d680:	cmp    DWORD PTR [rdx],esi
    d682:	je     d6d0 <find_vec+0x60>
    d684:	add    ecx,0x1
    d687:	add    rdx,0x18
    d68b:	cmp    ecx,0x8
    d68e:	je     d6b0 <find_vec+0x40>
    d690:	mov    r8d,DWORD PTR [rdx+0xc]
    d694:	test   r8d,r8d
    d697:	jne    d680 <find_vec+0x10>
    d699:	lea    r8,[rdx-0x8]
    d69d:	test   rax,rax
    d6a0:	cmove  rax,r8
    d6a4:	add    ecx,0x1
    d6a7:	add    rdx,0x18
    d6ab:	cmp    ecx,0x8
    d6ae:	jne    d690 <find_vec+0x20>
    d6b0:	test   rax,rax
    d6b3:	je     d6c6 <find_vec+0x56>
    d6b5:	mov    edx,DWORD PTR [rax+0x14]
    d6b8:	test   edx,edx
    d6ba:	jne    d6c6 <find_vec+0x56>
    d6bc:	mov    DWORD PTR [rax+0x8],esi
    d6bf:	mov    DWORD PTR [rax+0x14],0x1
    d6c6:	repz ret 
    d6c8:	nop    DWORD PTR [rax+rax*1+0x0]
    d6d0:	movsxd rcx,ecx
    d6d3:	lea    rax,[rcx+rcx*2]
    d6d7:	lea    rax,[rdi+rax*8]
    d6db:	jmp    d6b0 <find_vec+0x40>
    d6dd:	nop    DWORD PTR [rax]

000000000000d6e0 <ipi_send>:
    d6e0:	cmp    DWORD PTR [rdi+0x18],0x4
    d6e4:	jne    d6f8 <ipi_send+0x18>
    d6e6:	test   BYTE PTR [rip+0x21b9b4],0x40        # 2290a1 <opt+0x1>
    d6ed:	jne    d790 <ipi_send+0xb0>
    d6f3:	repz ret 
    d6f5:	nop    DWORD PTR [rax]
    d6f8:	push   rbp
    d6f9:	push   rbx
    d6fa:	mov    rbp,rdi
    d6fd:	lea    rdi,[rdi+0x78]
    d701:	sub    rsp,0x8
    d705:	call   d670 <find_vec>
    d70a:	test   rax,rax
    d70d:	mov    rbx,rax
    d710:	je     d7f0 <ipi_send+0x110>
    d716:	cmp    QWORD PTR [rax],0x0
    d71a:	jne    d726 <ipi_send+0x46>
    d71c:	mov    rax,QWORD PTR [rip+0x21fa95]        # 22d1b8 <P+0x18>
    d723:	mov    QWORD PTR [rbx],rax
    d726:	test   BYTE PTR [rip+0x21b974],0x40        # 2290a1 <opt+0x1>
    d72d:	mov    eax,DWORD PTR [rbx+0xc]
    d730:	je     d780 <ipi_send+0xa0>
    d732:	test   eax,eax
    d734:	je     d7b8 <ipi_send+0xd8>
    d73a:	add    eax,0x1
    d73d:	mov    DWORD PTR [rbx+0xc],eax
    d740:	mov    rdx,QWORD PTR [rbp+0x8]
    d744:	movsxd rcx,DWORD PTR [rbp+0x18]
    d748:	sub    rsp,0x8
    d74c:	lea    rsi,[rip+0x126d5]        # 1fe28 <_IO_stdin_used+0x2e68>
    d753:	mov    edi,0x1
    d758:	mov    edx,DWORD PTR [rdx+0x8]
    d75b:	push   rax
    d75c:	lea    rax,[rip+0x21bcdd]        # 229440 <runstate_name>
    d763:	mov    r8d,DWORD PTR [rbx+0x8]
    d767:	mov    r9,QWORD PTR [rax+rcx*8]
    d76b:	mov    ecx,DWORD PTR [rbp+0x0]
    d76e:	xor    eax,eax
    d770:	call   44f0 <__printf_chk@plt>
    d775:	pop    rax
    d776:	pop    rdx
    d777:	add    rsp,0x8
    d77b:	pop    rbx
    d77c:	pop    rbp
    d77d:	ret    
    d77e:	xchg   ax,ax
    d780:	add    eax,0x1
    d783:	mov    DWORD PTR [rbx+0xc],eax
    d786:	add    rsp,0x8
    d78a:	pop    rbx
    d78b:	pop    rbp
    d78c:	ret    
    d78d:	nop    DWORD PTR [rax]
    d790:	mov    r8d,DWORD PTR [rdi]
    d793:	mov    rdi,QWORD PTR [rip+0x257abe]        # 265258 <warn>
    d79a:	lea    rcx,[rip+0x15fd7]        # 23778 <__func__.6219>
    d7a1:	lea    rdx,[rip+0x12620]        # 1fdc8 <_IO_stdin_used+0x2e08>
    d7a8:	mov    esi,0x1
    d7ad:	xor    eax,eax
    d7af:	jmp    4560 <__fprintf_chk@plt>
    d7b4:	nop    DWORD PTR [rax+0x0]
    d7b8:	mov    eax,DWORD PTR [rbx+0x10]
    d7bb:	test   eax,eax
    d7bd:	je     d73a <ipi_send+0x5a>
    d7c3:	lea    rdi,[rip+0xfbdd]        # 1d3a7 <_IO_stdin_used+0x3e7>
    d7ca:	call   4380 <puts@plt>
    d7cf:	movzx  edx,BYTE PTR [rip+0x21b8cb]        # 2290a1 <opt+0x1>
    d7d6:	mov    eax,DWORD PTR [rbx+0xc]
    d7d9:	add    eax,0x1
    d7dc:	and    edx,0x40
    d7df:	mov    DWORD PTR [rbx+0xc],eax
    d7e2:	je     d786 <ipi_send+0xa6>
    d7e4:	jmp    d740 <ipi_send+0x60>
    d7e9:	nop    DWORD PTR [rax+0x0]
    d7f0:	mov    rdi,QWORD PTR [rip+0x257a61]        # 265258 <warn>
    d7f7:	add    rsp,0x8
    d7fb:	lea    rcx,[rip+0x15f76]        # 23778 <__func__.6219>
    d802:	pop    rbx
    d803:	pop    rbp
    d804:	lea    rdx,[rip+0x125f5]        # 1fe00 <_IO_stdin_used+0x2e40>
    d80b:	mov    esi,0x1
    d810:	xor    eax,eax
    d812:	jmp    4560 <__fprintf_chk@plt>
    d817:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d820 <hvm_vlapic_icr_handler>:
    d820:	push   r13
    d822:	push   r12
    d824:	push   rbp
    d825:	push   rbx
    d826:	sub    rsp,0x8
    d82a:	movzx  eax,BYTE PTR [rip+0x21b870]        # 2290a1 <opt+0x1>
    d831:	mov    r13d,DWORD PTR [rdi+0x283c8]
    d838:	and    eax,0x40
    d83b:	test   BYTE PTR [rdi+0x283cc],0x2
    d842:	je     d870 <hvm_vlapic_icr_handler+0x50>
    d844:	test   al,al
    d846:	mov    rbx,rdi
    d849:	jne    d909 <hvm_vlapic_icr_handler+0xe9>
    d84f:	mov    eax,r13d
    d852:	shr    eax,0x10
    d855:	and    eax,0xc
    d858:	cmp    al,0xc
    d85a:	je     d8c0 <hvm_vlapic_icr_handler+0xa0>
    d85c:	add    rsp,0x8
    d860:	pop    rbx
    d861:	pop    rbp
    d862:	pop    r12
    d864:	pop    r13
    d866:	ret    
    d867:	nop    WORD PTR [rax+rax*1+0x0]
    d870:	test   al,al
    d872:	je     d85c <hvm_vlapic_icr_handler+0x3c>
    d874:	mov    rax,QWORD PTR [rdi+0x10]
    d878:	lea    rcx,[rip+0xfb3d]        # 1d3bc <_IO_stdin_used+0x3fc>
    d87f:	lea    r8,[rip+0x1070e]        # 1df94 <_IO_stdin_used+0xfd4>
    d886:	test   r13w,0x1000
    d88c:	lea    rsi,[rip+0x125fd]        # 1fe90 <_IO_stdin_used+0x2ed0>
    d893:	mov    edi,0x1
    d898:	cmovne r8,rcx
    d89c:	mov    rdx,QWORD PTR [rax+0x8]
    d8a0:	mov    ecx,DWORD PTR [rax]
    d8a2:	xor    eax,eax
    d8a4:	mov    edx,DWORD PTR [rdx+0x8]
    d8a7:	add    rsp,0x8
    d8ab:	pop    rbx
    d8ac:	pop    rbp
    d8ad:	pop    r12
    d8af:	pop    r13
    d8b1:	jmp    44f0 <__printf_chk@plt>
    d8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d8c0:	mov    r12,QWORD PTR [rbx+0x10]
    d8c4:	movzx  r13d,r13b
    d8c8:	mov    rbp,QWORD PTR [r12+0x8]
    d8cd:	lea    rbx,[rbp+0x10]
    d8d1:	add    rbp,0x810
    d8d8:	nop    DWORD PTR [rax+rax*1+0x0]
    d8e0:	mov    rdi,QWORD PTR [rbx]
    d8e3:	test   rdi,rdi
    d8e6:	je     d8f5 <hvm_vlapic_icr_handler+0xd5>
    d8e8:	cmp    r12,rdi
    d8eb:	je     d8f5 <hvm_vlapic_icr_handler+0xd5>
    d8ed:	mov    esi,r13d
    d8f0:	call   d6e0 <ipi_send>
    d8f5:	add    rbx,0x8
    d8f9:	cmp    rbp,rbx
    d8fc:	jne    d8e0 <hvm_vlapic_icr_handler+0xc0>
    d8fe:	add    rsp,0x8
    d902:	pop    rbx
    d903:	pop    rbp
    d904:	pop    r12
    d906:	pop    r13
    d908:	ret    
    d909:	mov    rcx,QWORD PTR [rdi+0x10]
    d90d:	mov    eax,r13d
    d910:	lea    rsi,[rip+0x21b9a9]        # 2292c0 <hvm_vlapic_icr_dest_shorthand_name>
    d917:	shr    eax,0x12
    d91a:	movzx  r8d,r13b
    d91e:	mov    edi,0x1
    d923:	and    eax,0x3
    d926:	mov    rdx,QWORD PTR [rcx+0x8]
    d92a:	mov    r9,QWORD PTR [rsi+rax*8]
    d92e:	lea    rsi,[rip+0x1252b]        # 1fe60 <_IO_stdin_used+0x2ea0>
    d935:	mov    ecx,DWORD PTR [rcx]
    d937:	xor    eax,eax
    d939:	mov    edx,DWORD PTR [rdx+0x8]
    d93c:	call   44f0 <__printf_chk@plt>
    d941:	mov    eax,r13d
    d944:	shr    eax,0x10
    d947:	and    eax,0xc
    d94a:	cmp    al,0xc
    d94c:	jne    d85c <hvm_vlapic_icr_handler+0x3c>
    d952:	jmp    d8c0 <hvm_vlapic_icr_handler+0xa0>
    d957:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d960 <hvm_vlapic_inject>:
    d960:	push   rbx
    d961:	mov    r9,rdi
    d964:	add    rdi,0x78
    d968:	call   d670 <find_vec>
    d96d:	test   rax,rax
    d970:	je     d9b0 <hvm_vlapic_inject+0x50>
    d972:	test   BYTE PTR [rip+0x21b728],0x40        # 2290a1 <opt+0x1>
    d979:	mov    rbx,rax
    d97c:	je     d99e <hvm_vlapic_inject+0x3e>
    d97e:	mov    rax,QWORD PTR [r9+0x8]
    d982:	mov    ecx,DWORD PTR [r9]
    d985:	mov    r8d,esi
    d988:	lea    rsi,[rip+0x12531]        # 1fec0 <_IO_stdin_used+0x2f00>
    d98f:	mov    edi,0x1
    d994:	mov    edx,DWORD PTR [rax+0x8]
    d997:	xor    eax,eax
    d999:	call   44f0 <__printf_chk@plt>
    d99e:	mov    DWORD PTR [rbx+0x10],0x1
    d9a5:	pop    rbx
    d9a6:	ret    
    d9a7:	nop    WORD PTR [rax+rax*1+0x0]
    d9b0:	pop    rbx
    d9b1:	mov    rdi,QWORD PTR [rip+0x21ea88]        # 22c440 <stderr@@GLIBC_2.2.5>
    d9b8:	lea    rcx,[rip+0x15da1]        # 23760 <__func__.6253>
    d9bf:	lea    rdx,[rip+0x12522]        # 1fee8 <_IO_stdin_used+0x2f28>
    d9c6:	mov    esi,0x1
    d9cb:	xor    eax,eax
    d9cd:	jmp    4560 <__fprintf_chk@plt>
    d9d2:	nop    DWORD PTR [rax+0x0]
    d9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d9e0 <hvm_vlapic_eoi_handler>:
    d9e0:	test   BYTE PTR [rip+0x21b6ba],0x40        # 2290a1 <opt+0x1>
    d9e7:	jne    d9f0 <hvm_vlapic_eoi_handler+0x10>
    d9e9:	repz ret 
    d9eb:	nop    DWORD PTR [rax+rax*1+0x0]
    d9f0:	jmp    6830 <hvm_vlapic_eoi_handler.part.12>
    d9f5:	nop
    d9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000da00 <hvm_vlapic_handler>:
    da00:	mov    rax,QWORD PTR [rdi+0x283b8]
    da07:	mov    edx,0xfee000b0
    da0c:	cmp    rax,rdx
    da0f:	je     da28 <hvm_vlapic_handler+0x28>
    da11:	add    rdx,0x250
    da18:	cmp    rax,rdx
    da1b:	jne    da31 <hvm_vlapic_handler+0x31>
    da1d:	jmp    d820 <hvm_vlapic_icr_handler>
    da22:	nop    WORD PTR [rax+rax*1+0x0]
    da28:	test   BYTE PTR [rip+0x21b672],0x40        # 2290a1 <opt+0x1>
    da2f:	jne    da38 <hvm_vlapic_handler+0x38>
    da31:	repz ret 
    da33:	nop    DWORD PTR [rax+rax*1+0x0]
    da38:	jmp    6830 <hvm_vlapic_eoi_handler.part.12>
    da3d:	nop    DWORD PTR [rax]

000000000000da40 <hvm_mmio_assist_process>:
    da40:	push   rbx
    da41:	mov    edx,DWORD PTR [rdi+0x10]
    da44:	mov    rbx,rsi
    da47:	mov    rax,QWORD PTR [rsi+0x28410]
    da4e:	test   dh,0x1
    da51:	je     db20 <hvm_mmio_assist_process+0xe0>
    da57:	mov    r8,QWORD PTR [rax]
    da5a:	mov    QWORD PTR [rsi+0x283b8],r8
    da61:	mov    eax,DWORD PTR [rax+0x8]
    da64:	mov    DWORD PTR [rsi+0x283c8],eax
    da6a:	movsxd rax,DWORD PTR [rdi+0x14]
    da6e:	shl    rax,0x2
    da72:	cmp    rax,0x10
    da76:	je     db45 <hvm_mmio_assist_process+0x105>
    da7c:	mov    eax,edx
    da7e:	shr    eax,0x9
    da81:	and    eax,0x1
    da84:	lea    ecx,[rax+rax*1]
    da87:	movzx  eax,BYTE PTR [rbx+0x283cc]
    da8e:	and    eax,0xfffffffd
    da91:	or     eax,ecx
    da93:	test   BYTE PTR [rip+0x21b607],0x40        # 2290a1 <opt+0x1>
    da9a:	mov    BYTE PTR [rbx+0x283cc],al
    daa0:	je     dae0 <hvm_mmio_assist_process+0xa0>
    daa2:	movzx  edx,dh
    daa5:	and    edx,0x6
    daa8:	cmp    dl,0x1
    daab:	lea    rdx,[rdi+0x28]
    daaf:	sbb    ecx,ecx
    dab1:	and    ecx,0xfffffffb
    dab4:	add    ecx,0x77
    dab7:	test   al,0x1
    dab9:	je     db58 <hvm_mmio_assist_process+0x118>
    dabf:	mov    r9d,DWORD PTR [rbx+0x283c8]
    dac6:	lea    rsi,[rip+0x12443]        # 1ff10 <_IO_stdin_used+0x2f50>
    dacd:	mov    edi,0x1
    dad2:	xor    eax,eax
    dad4:	call   44f0 <__printf_chk@plt>
    dad9:	mov    r8,QWORD PTR [rbx+0x283b8]
    dae0:	and    r8d,0xfffff000
    dae7:	mov    eax,0xfee00000
    daec:	cmp    r8,rax
    daef:	je     db80 <hvm_mmio_assist_process+0x140>
    daf5:	mov    rax,QWORD PTR [rbx+0x283d8]
    dafc:	test   rax,rax
    daff:	je     db10 <hvm_mmio_assist_process+0xd0>
    db01:	lea    rdx,[rip+0xfffffffffffff028]        # cb30 <hvm_generic_postprocess>
    db08:	cmp    rax,rdx
    db0b:	je     db10 <hvm_mmio_assist_process+0xd0>
    db0d:	pop    rbx
    db0e:	ret    
    db0f:	nop
    db10:	lea    rax,[rip+0x699]        # e1b0 <hvm_mmio_assist_postprocess>
    db17:	mov    QWORD PTR [rbx+0x283d8],rax
    db1e:	pop    rbx
    db1f:	ret    
    db20:	mov    r8d,DWORD PTR [rax]
    db23:	mov    QWORD PTR [rsi+0x283b8],r8
    db2a:	mov    eax,DWORD PTR [rax+0x4]
    db2d:	mov    DWORD PTR [rsi+0x283c8],eax
    db33:	movsxd rax,DWORD PTR [rdi+0x14]
    db37:	shl    rax,0x2
    db3b:	cmp    rax,0x8
    db3f:	jne    da7c <hvm_mmio_assist_process+0x3c>
    db45:	or     BYTE PTR [rbx+0x283cc],0x1
    db4c:	jmp    da7c <hvm_mmio_assist_process+0x3c>
    db51:	nop    DWORD PTR [rax+0x0]
    db58:	lea    rsi,[rip+0x123d9]        # 1ff38 <_IO_stdin_used+0x2f78>
    db5f:	mov    edi,0x1
    db64:	xor    eax,eax
    db66:	call   44f0 <__printf_chk@plt>
    db6b:	mov    r8,QWORD PTR [rbx+0x283b8]
    db72:	jmp    dae0 <hvm_mmio_assist_process+0xa0>
    db77:	nop    WORD PTR [rax+rax*1+0x0]
    db80:	mov    rdi,rbx
    db83:	call   da00 <hvm_vlapic_handler>
    db88:	jmp    daf5 <hvm_mmio_assist_process+0xb5>
    db8d:	nop    DWORD PTR [rax]

000000000000db90 <hvm_inj_virq_process>:
    db90:	push   r13
    db92:	push   r12
    db94:	push   rbp
    db95:	push   rbx
    db96:	mov    rbx,rsi
    db99:	sub    rsp,0x8
    db9d:	test   BYTE PTR [rip+0x21b4fd],0x40        # 2290a1 <opt+0x1>
    dba4:	mov    r12,QWORD PTR [rsi+0x28410]
    dbab:	je     dbe2 <hvm_inj_virq_process+0x52>
    dbad:	mov    r8d,DWORD PTR [r12+0x4]
    dbb2:	lea    rax,[rip+0xf80b]        # 1d3c4 <_IO_stdin_used+0x404>
    dbb9:	mov    ecx,DWORD PTR [r12]
    dbbd:	lea    rdx,[rdi+0x28]
    dbc1:	lea    rsi,[rip+0xf806]        # 1d3ce <_IO_stdin_used+0x40e>
    dbc8:	mov    edi,0x1
    dbcd:	test   r8d,r8d
    dbd0:	lea    r8,[rip+0xf7f2]        # 1d3c9 <_IO_stdin_used+0x409>
    dbd7:	cmovne r8,rax
    dbdb:	xor    eax,eax
    dbdd:	call   44f0 <__printf_chk@plt>
    dbe2:	mov    esi,DWORD PTR [rip+0x21b4bc]        # 2290a4 <opt+0x4>
    dbe8:	mov    ebp,DWORD PTR [r12]
    dbec:	test   esi,esi
    dbee:	je     dc24 <hvm_inj_virq_process+0x94>
    dbf0:	cmp    ebp,0x15e
    dbf6:	mov    esi,0x15e
    dbfb:	cmovle esi,ebp
    dbfe:	movsxd rdx,esi
    dc01:	mov    rax,rdx
    dc04:	shl    rax,0x5
    dc08:	sub    rax,rdx
    dc0b:	add    DWORD PTR [rbx+rax*8+0x12af8],0x1
    dc13:	cmp    DWORD PTR [rip+0x21b4da],0x5        # 2290f4 <opt+0x54>
    dc1a:	je     dd60 <hvm_inj_virq_process+0x1d0>
    dc20:	mov    ebp,DWORD PTR [r12]
    dc24:	cmp    ebp,0x15d
    dc2a:	jg     dd1b <hvm_inj_virq_process+0x18b>
    dc30:	movsxd r13,ebp
    dc33:	mov    rax,r13
    dc36:	shl    rax,0x5
    dc3a:	sub    rax,r13
    dc3d:	mov    rdx,QWORD PTR [rbx+rax*8+0x12be8]
    dc45:	movabs rax,0xffffffff00000001
    dc4f:	and    rax,QWORD PTR [rbx+0x28418]
    dc56:	cmp    rax,0x1
    dc5a:	je     dcb0 <hvm_inj_virq_process+0x120>
    dc5c:	test   rdx,rdx
    dc5f:	mov    rdi,QWORD PTR [rbx+0x10]
    dc63:	jne    dc92 <hvm_inj_virq_process+0x102>
    dc65:	mov    rax,r13
    dc68:	shl    rax,0x5
    dc6c:	sub    rax,r13
    dc6f:	mov    QWORD PTR [rbx+rax*8+0x12be8],0x1
    dc7b:	add    DWORD PTR [rbx+0x28424],0x1
    dc82:	add    DWORD PTR [rbx+0x28420],0x1
    dc89:	test   BYTE PTR [rip+0x21b411],0x40        # 2290a1 <opt+0x1>
    dc90:	jne    dcf8 <hvm_inj_virq_process+0x168>
    dc92:	mov    ebp,DWORD PTR [r12]
    dc96:	add    rsp,0x8
    dc9a:	mov    esi,ebp
    dc9c:	pop    rbx
    dc9d:	pop    rbp
    dc9e:	pop    r12
    dca0:	pop    r13
    dca2:	jmp    d960 <hvm_vlapic_inject>
    dca7:	nop    WORD PTR [rax+rax*1+0x0]
    dcb0:	test   rdx,rdx
    dcb3:	jne    ddc0 <hvm_inj_virq_process+0x230>
    dcb9:	mov    ecx,DWORD PTR [rbx+0x28420]
    dcbf:	test   ecx,ecx
    dcc1:	jne    dda0 <hvm_inj_virq_process+0x210>
    dcc7:	test   BYTE PTR [rip+0x21b3d3],0x40        # 2290a1 <opt+0x1>
    dcce:	jne    dd70 <hvm_inj_virq_process+0x1e0>
    dcd4:	test   BYTE PTR [rip+0x21b3c8],0x10        # 2290a3 <opt+0x3>
    dcdb:	je     dd28 <hvm_inj_virq_process+0x198>
    dcdd:	mov    eax,DWORD PTR [r12+0x4]
    dce2:	test   eax,eax
    dce4:	je     dd28 <hvm_inj_virq_process+0x198>
    dce6:	mov    DWORD PTR [rbx+0x2841c],0x15d
    dcf0:	jmp    dd2e <hvm_inj_virq_process+0x19e>
    dcf2:	nop    WORD PTR [rax+rax*1+0x0]
    dcf8:	mov    rax,QWORD PTR [rdi+0x8]
    dcfc:	mov    ecx,DWORD PTR [rdi]
    dcfe:	lea    rsi,[rip+0x12313]        # 20018 <_IO_stdin_used+0x3058>
    dd05:	mov    r8d,ebp
    dd08:	mov    edi,0x1
    dd0d:	mov    edx,DWORD PTR [rax+0x8]
    dd10:	xor    eax,eax
    dd12:	call   44f0 <__printf_chk@plt>
    dd17:	mov    ebp,DWORD PTR [r12]
    dd1b:	mov    rdi,QWORD PTR [rbx+0x10]
    dd1f:	jmp    dc96 <hvm_inj_virq_process+0x106>
    dd24:	nop    DWORD PTR [rax+0x0]
    dd28:	mov    DWORD PTR [rbx+0x2841c],ebp
    dd2e:	mov    rax,r13
    dd31:	shl    rax,0x5
    dd35:	sub    rax,r13
    dd38:	lea    rax,[rbx+rax*8]
    dd3c:	mov    rdx,QWORD PTR [rax+0x12be8]
    dd43:	mov    DWORD PTR [rax+0x12be0],0x1
    dd4d:	mov    rdi,QWORD PTR [rbx+0x10]
    dd51:	test   rdx,rdx
    dd54:	je     dc65 <hvm_inj_virq_process+0xd5>
    dd5a:	jmp    dc92 <hvm_inj_virq_process+0x102>
    dd5f:	nop
    dd60:	mov    rdi,rbx
    dd63:	call   8f50 <interval_domain_guest_interrupt>
    dd68:	jmp    dc20 <hvm_inj_virq_process+0x90>
    dd6d:	nop    DWORD PTR [rax]
    dd70:	mov    rax,QWORD PTR [rbx+0x10]
    dd74:	lea    rsi,[rip+0x12275]        # 1fff0 <_IO_stdin_used+0x3030>
    dd7b:	mov    r8d,ebp
    dd7e:	mov    edi,0x1
    dd83:	mov    rdx,QWORD PTR [rax+0x8]
    dd87:	mov    ecx,DWORD PTR [rax]
    dd89:	xor    eax,eax
    dd8b:	mov    edx,DWORD PTR [rdx+0x8]
    dd8e:	call   44f0 <__printf_chk@plt>
    dd93:	jmp    dcd4 <hvm_inj_virq_process+0x144>
    dd98:	nop    DWORD PTR [rax+rax*1+0x0]
    dda0:	mov    rdi,QWORD PTR [rip+0x2574b1]        # 265258 <warn>
    dda7:	lea    rdx,[rip+0x121fa]        # 1ffa8 <_IO_stdin_used+0x2fe8>
    ddae:	mov    esi,0x1
    ddb3:	xor    eax,eax
    ddb5:	call   4560 <__fprintf_chk@plt>
    ddba:	jmp    dcc7 <hvm_inj_virq_process+0x137>
    ddbf:	nop
    ddc0:	mov    rax,QWORD PTR [rbx+0x10]
    ddc4:	sub    rsp,0x8
    ddc8:	mov    rdi,QWORD PTR [rip+0x257489]        # 265258 <warn>
    ddcf:	mov    r9d,ebp
    ddd2:	mov    esi,0x1
    ddd7:	mov    rcx,QWORD PTR [rax+0x8]
    dddb:	mov    ecx,DWORD PTR [rcx+0x8]
    ddde:	push   rdx
    dddf:	lea    rdx,[rip+0x1217a]        # 1ff60 <_IO_stdin_used+0x2fa0>
    dde6:	mov    r8d,DWORD PTR [rax]
    dde9:	xor    eax,eax
    ddeb:	call   4560 <__fprintf_chk@plt>
    ddf0:	cmp    DWORD PTR [rip+0x21b2e9],0x1        # 2290e0 <opt+0x40>
    ddf7:	pop    rdx
    ddf8:	pop    rcx
    ddf9:	ja     dcb9 <hvm_inj_virq_process+0x129>
    ddff:	mov    edi,0x1
    de04:	call   4540 <exit@plt>
    de09:	nop    DWORD PTR [rax+0x0]

000000000000de10 <update_io_address>:
    de10:	push   r15
    de12:	push   r14
    de14:	mov    r15,rdi
    de17:	push   r13
    de19:	push   r12
    de1b:	mov    r13d,edx
    de1e:	push   rbp
    de1f:	push   rbx
    de20:	mov    r12d,esi
    de23:	mov    r14,rcx
    de26:	sub    rsp,0x18
    de2a:	mov    rbp,QWORD PTR [rdi]
    de2d:	test   rbp,rbp
    de30:	je     e007 <update_io_address+0x1f7>
    de36:	mov    eax,DWORD PTR [rbp+0x8]
    de39:	cmp    eax,esi
    de3b:	jb     de4b <update_io_address+0x3b>
    de3d:	jmp    e0a0 <update_io_address+0x290>
    de42:	nop    WORD PTR [rax+rax*1+0x0]
    de48:	mov    rbp,rbx
    de4b:	mov    rbx,QWORD PTR [rbp+0x0]
    de4f:	test   rbx,rbx
    de52:	je     de61 <update_io_address+0x51>
    de54:	mov    eax,DWORD PTR [rbx+0x8]
    de57:	cmp    eax,r12d
    de5a:	jb     de48 <update_io_address+0x38>
    de5c:	cmp    r12d,eax
    de5f:	je     dea6 <update_io_address+0x96>
    de61:	mov    edi,0x80
    de66:	mov    DWORD PTR [rsp+0xc],r8d
    de6b:	call   4490 <malloc@plt>
    de70:	test   rax,rax
    de73:	mov    rbx,rax
    de76:	mov    r8d,DWORD PTR [rsp+0xc]
    de7b:	je     ded0 <update_io_address+0xc0>
    de7d:	xor    eax,eax
    de7f:	mov    ecx,0x10
    de84:	mov    rdi,rbx
    de87:	test   rbp,rbp
    de8a:	rep stos QWORD PTR es:[rdi],rax
    de8d:	mov    DWORD PTR [rbx+0x8],r12d
    de91:	mov    DWORD PTR [rbx+0xc],r8d
    de95:	je     e090 <update_io_address+0x280>
    de9b:	mov    rax,QWORD PTR [rbp+0x0]
    de9f:	mov    QWORD PTR [rbx],rax
    dea2:	mov    QWORD PTR [rbp+0x0],rbx
    dea6:	movsxd rbp,r13d
    dea9:	lea    rax,[rbp*8+0x0]
    deb1:	sub    rax,rbp
    deb4:	lea    rdx,[rbx+rax*8]
    deb8:	add    DWORD PTR [rdx+0x10],0x1
    debc:	test   r14,r14
    debf:	jne    df08 <update_io_address+0xf8>
    dec1:	add    rsp,0x18
    dec5:	pop    rbx
    dec6:	pop    rbp
    dec7:	pop    r12
    dec9:	pop    r13
    decb:	pop    r14
    decd:	pop    r15
    decf:	ret    
    ded0:	mov    rcx,QWORD PTR [rip+0x21e569]        # 22c440 <stderr@@GLIBC_2.2.5>
    ded7:	lea    rdi,[rip+0xf39c]        # 1d27a <_IO_stdin_used+0x2ba>
    dede:	mov    edx,0x11
    dee3:	mov    esi,0x1
    dee8:	call   4550 <fwrite@plt>
    deed:	cmp    DWORD PTR [rip+0x21b1ec],0x7        # 2290e0 <opt+0x40>
    def4:	mov    r8d,DWORD PTR [rsp+0xc]
    def9:	ja     de7d <update_io_address+0x6d>
    defb:	mov    edi,0x1
    df00:	call   4540 <exit@plt>
    df05:	nop    DWORD PTR [rax]
    df08:	mov    ecx,DWORD PTR [rip+0x21b1ca]        # 2290d8 <opt+0x38>
    df0e:	movsxd rax,DWORD PTR [rdx+0x14]
    df12:	test   ecx,ecx
    df14:	je     dfd7 <update_io_address+0x1c7>
    df1a:	mov    edx,DWORD PTR [rdx+0x18]
    df1d:	cmp    edx,eax
    df1f:	jg     e0b0 <update_io_address+0x2a0>
    df25:	test   eax,eax
    df27:	mov    r12d,DWORD PTR [rip+0x21b1ae]        # 2290dc <opt+0x3c>
    df2e:	jne    e0d8 <update_io_address+0x2c8>
    df34:	add    edx,edx
    df36:	cmovne ecx,edx
    df39:	test   r12d,r12d
    df3c:	je     e105 <update_io_address+0x2f5>
    df42:	cmp    ecx,r12d
    df45:	jle    e105 <update_io_address+0x2f5>
    df4b:	lea    rax,[rbp*8+0x0]
    df53:	movsxd rsi,r12d
    df56:	shl    rsi,0x3
    df5a:	sub    rax,rbp
    df5d:	lea    r13,[rbx+rax*8]
    df61:	mov    rdi,QWORD PTR [r13+0x28]
    df65:	call   44c0 <realloc@plt>
    df6a:	test   rax,rax
    df6d:	je     e0fc <update_io_address+0x2ec>
    df73:	mov    QWORD PTR [r13+0x28],rax
    df77:	mov    DWORD PTR [r13+0x18],r12d
    df7b:	lea    rax,[rbp*8+0x0]
    df83:	sub    rax,rbp
    df86:	movsxd rax,DWORD PTR [rbx+rax*8+0x14]
    df8b:	cmp    eax,r12d
    df8e:	jl     e0b0 <update_io_address+0x2a0>
    df94:	cdq    
    df95:	idiv   r12d
    df98:	lea    ecx,[rax+0x1]
    df9b:	mov    esi,edx
    df9d:	mov    edx,0x55555556
    dfa2:	mov    eax,ecx
    dfa4:	imul   edx
    dfa6:	mov    eax,ecx
    dfa8:	sar    eax,0x1f
    dfab:	sub    eax,edx
    dfad:	add    eax,esi
    dfaf:	cdq    
    dfb0:	idiv   ecx
    dfb2:	lea    rax,[rbp*8+0x0]
    dfba:	sub    rax,rbp
    dfbd:	test   edx,edx
    dfbf:	jne    e0cf <update_io_address+0x2bf>
    dfc5:	lea    rdx,[rbx+rax*8]
    dfc9:	movsxd rax,esi
    dfcc:	mov    rcx,QWORD PTR [rdx+0x28]
    dfd0:	mov    QWORD PTR [rcx+rax*8],r14
    dfd4:	mov    eax,DWORD PTR [rdx+0x14]
    dfd7:	lea    rdx,[rbp*8+0x0]
    dfdf:	add    eax,0x1
    dfe2:	sub    rdx,rbp
    dfe5:	lea    rdx,[rbx+rdx*8]
    dfe9:	mov    DWORD PTR [rdx+0x14],eax
    dfec:	add    QWORD PTR [rdx+0x20],r14
    dff0:	add    DWORD PTR [rdx+0x30],0x1
    dff4:	add    QWORD PTR [rdx+0x38],r14
    dff8:	add    rsp,0x18
    dffc:	pop    rbx
    dffd:	pop    rbp
    dffe:	pop    r12
    e000:	pop    r13
    e002:	pop    r14
    e004:	pop    r15
    e006:	ret    
    e007:	mov    esi,0x1
    e00c:	mov    edi,0x80
    e011:	mov    DWORD PTR [rsp+0xc],r8d
    e016:	call   4460 <calloc@plt>
    e01b:	test   rax,rax
    e01e:	mov    rbx,rax
    e021:	mov    r8d,DWORD PTR [rsp+0xc]
    e026:	jne    e0f2 <update_io_address+0x2e2>
    e02c:	mov    rcx,QWORD PTR [rip+0x21e40d]        # 22c440 <stderr@@GLIBC_2.2.5>
    e033:	lea    rdi,[rip+0xf240]        # 1d27a <_IO_stdin_used+0x2ba>
    e03a:	mov    edx,0x11
    e03f:	mov    esi,0x1
    e044:	mov    DWORD PTR [rsp+0xc],r8d
    e049:	call   4550 <fwrite@plt>
    e04e:	cmp    DWORD PTR [rip+0x21b08b],0x7        # 2290e0 <opt+0x40>
    e055:	mov    r8d,DWORD PTR [rsp+0xc]
    e05a:	jbe    defb <update_io_address+0xeb>
    e060:	mov    edx,0x80
    e065:	xor    esi,esi
    e067:	xor    edi,edi
    e069:	mov    DWORD PTR [rsp+0xc],r8d
    e06e:	call   4420 <memset@plt>
    e073:	mov    DWORD PTR ds:0x8,r12d
    e07b:	mov    r8d,DWORD PTR [rsp+0xc]
    e080:	mov    DWORD PTR ds:0xc,r8d
    e088:	nop    DWORD PTR [rax+rax*1+0x0]
    e090:	mov    rbp,QWORD PTR [r15]
    e093:	mov    QWORD PTR [rbx],rbp
    e096:	mov    QWORD PTR [r15],rbx
    e099:	jmp    dea6 <update_io_address+0x96>
    e09e:	xchg   ax,ax
    e0a0:	mov    rbx,rbp
    e0a3:	xor    ebp,ebp
    e0a5:	jmp    de5c <update_io_address+0x4c>
    e0aa:	nop    WORD PTR [rax+rax*1+0x0]
    e0b0:	lea    rdx,[rbp*8+0x0]
    e0b8:	sub    rdx,rbp
    e0bb:	lea    rdx,[rbx+rdx*8]
    e0bf:	mov    rcx,QWORD PTR [rdx+0x28]
    e0c3:	mov    QWORD PTR [rcx+rax*8],r14
    e0c7:	mov    eax,DWORD PTR [rdx+0x14]
    e0ca:	jmp    dfd7 <update_io_address+0x1c7>
    e0cf:	mov    eax,DWORD PTR [rbx+rax*8+0x14]
    e0d3:	jmp    dfd7 <update_io_address+0x1c7>
    e0d8:	test   r12d,r12d
    e0db:	je     df34 <update_io_address+0x124>
    e0e1:	cmp    edx,r12d
    e0e4:	jl     df34 <update_io_address+0x124>
    e0ea:	mov    r12d,edx
    e0ed:	jmp    df94 <update_io_address+0x184>
    e0f2:	mov    DWORD PTR [rbx+0x8],r12d
    e0f6:	mov    DWORD PTR [rbx+0xc],r8d
    e0fa:	jmp    e093 <update_io_address+0x283>
    e0fc:	mov    r12d,DWORD PTR [r13+0x18]
    e100:	jmp    df7b <update_io_address+0x16b>
    e105:	mov    r12d,ecx
    e108:	jmp    df4b <update_io_address+0x13b>
    e10d:	nop    DWORD PTR [rax]

000000000000e110 <enumerate_mmio>:
    e110:	test   BYTE PTR [rip+0x21af8c],0x4        # 2290a3 <opt+0x3>
    e117:	je     e12e <enumerate_mmio+0x1e>
    e119:	mov    rax,QWORD PTR [rdi+0x283b8]
    e120:	sub    rax,0xa0000
    e126:	cmp    rax,0x1fffe
    e12c:	jbe    e170 <enumerate_mmio+0x60>
    e12e:	movzx  edx,BYTE PTR [rdi+0x283cc]
    e135:	test   dl,0x1
    e138:	jne    e140 <enumerate_mmio+0x30>
    e13a:	repz ret 
    e13c:	nop    DWORD PTR [rax+0x0]
    e140:	mov    rcx,QWORD PTR [rdi+0x283e8]
    e147:	mov    rsi,QWORD PTR [rdi+0x283b8]
    e14e:	lea    rax,[rdi+0x28338]
    e155:	mov    r8d,DWORD PTR [rdi+0x283c0]
    e15c:	shr    dl,1
    e15e:	and    edx,0x1
    e161:	mov    rdi,rax
    e164:	jmp    de10 <update_io_address>
    e169:	nop    DWORD PTR [rax+0x0]
    e170:	mov    eax,DWORD PTR [rip+0x21aeb6]        # 22902c <_w.6268>
    e176:	test   eax,eax
    e178:	je     e13a <enumerate_mmio+0x2a>
    e17a:	mov    rcx,QWORD PTR [rip+0x2570d7]        # 265258 <warn>
    e181:	lea    rdi,[rip+0x11eb0]        # 20038 <_IO_stdin_used+0x3078>
    e188:	mov    edx,0x5d
    e18d:	mov    esi,0x1
    e192:	mov    DWORD PTR [rip+0x21ae90],0x0        # 22902c <_w.6268>
    e19c:	jmp    4550 <fwrite@plt>
    e1a1:	nop    DWORD PTR [rax+rax*1+0x0]
    e1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e1b0 <hvm_mmio_assist_postprocess>:
    e1b0:	push   r14
    e1b2:	push   r13
    e1b4:	push   r12
    e1b6:	push   rbp
    e1b7:	push   rbx
    e1b8:	mov    r8d,DWORD PTR [rdi+0x28400]
    e1bf:	mov    rbx,rdi
    e1c2:	cmp    r8d,0x30
    e1c6:	je     e280 <hvm_mmio_assist_postprocess+0xd0>
    e1cc:	cmp    r8d,0x400
    e1d3:	je     e280 <hvm_mmio_assist_postprocess+0xd0>
    e1d9:	cmp    r8d,0x2c
    e1dd:	je     e250 <hvm_mmio_assist_postprocess+0xa0>
    e1df:	mov    ecx,DWORD PTR [rip+0x259213]        # 2673f8 <warned.6292>
    e1e5:	test   ecx,ecx
    e1e7:	je     e430 <hvm_mmio_assist_postprocess+0x280>
    e1ed:	mov    edx,DWORD PTR [rip+0x259201]        # 2673f4 <done.6293>
    e1f3:	mov    ebp,0x2
    e1f8:	test   edx,edx
    e1fa:	je     e3f8 <hvm_mmio_assist_postprocess+0x248>
    e200:	mov    eax,DWORD PTR [rip+0x21ae9e]        # 2290a4 <opt+0x4>
    e206:	test   eax,eax
    e208:	je     e230 <hvm_mmio_assist_postprocess+0x80>
    e20a:	lea    rax,[rbp*8+0x0]
    e212:	mov    r12,QWORD PTR [rbx+0x283e8]
    e219:	sub    rax,rbp
    e21c:	lea    rcx,[rbx+rax*8]
    e220:	add    DWORD PTR [rcx+0x12a50],0x1
    e227:	test   r12,r12
    e22a:	jne    e2e0 <hvm_mmio_assist_postprocess+0x130>
    e230:	cmp    BYTE PTR [rip+0x21ae6b],0x0        # 2290a2 <opt+0x2>
    e237:	js     e2c8 <hvm_mmio_assist_postprocess+0x118>
    e23d:	pop    rbx
    e23e:	pop    rbp
    e23f:	pop    r12
    e241:	pop    r13
    e243:	pop    r14
    e245:	ret    
    e246:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e250:	mov    esi,DWORD PTR [rip+0x2591a6]        # 2673fc <done.6289>
    e256:	xor    ebp,ebp
    e258:	test   esi,esi
    e25a:	jne    e200 <hvm_mmio_assist_postprocess+0x50>
    e25c:	lea    rsi,[rip+0xffffffffffff7b5d]        # 5dc0 <hvm_mmio_summary>
    e263:	xor    edx,edx
    e265:	call   bcf0 <__hvm_set_summary_handler>
    e26a:	test   eax,eax
    e26c:	jne    e4b8 <hvm_mmio_assist_postprocess+0x308>
    e272:	mov    DWORD PTR [rip+0x259180],0x1        # 2673fc <done.6289>
    e27c:	xor    ebp,ebp
    e27e:	jmp    e200 <hvm_mmio_assist_postprocess+0x50>
    e280:	mov    edi,DWORD PTR [rip+0x25917a]        # 267400 <done.6284>
    e286:	mov    ebp,0x1
    e28b:	test   edi,edi
    e28d:	jne    e200 <hvm_mmio_assist_postprocess+0x50>
    e293:	lea    rsi,[rip+0xffffffffffff7b26]        # 5dc0 <hvm_mmio_summary>
    e29a:	mov    edx,0x1
    e29f:	mov    rdi,rbx
    e2a2:	call   bcf0 <__hvm_set_summary_handler>
    e2a7:	test   eax,eax
    e2a9:	jne    e488 <hvm_mmio_assist_postprocess+0x2d8>
    e2af:	mov    DWORD PTR [rip+0x259147],0x1        # 267400 <done.6284>
    e2b9:	mov    ebp,0x1
    e2be:	jmp    e200 <hvm_mmio_assist_postprocess+0x50>
    e2c3:	nop    DWORD PTR [rax+rax*1+0x0]
    e2c8:	mov    rdi,rbx
    e2cb:	pop    rbx
    e2cc:	pop    rbp
    e2cd:	pop    r12
    e2cf:	pop    r13
    e2d1:	pop    r14
    e2d3:	jmp    e110 <enumerate_mmio>
    e2d8:	nop    DWORD PTR [rax+rax*1+0x0]
    e2e0:	mov    edx,DWORD PTR [rip+0x21adf2]        # 2290d8 <opt+0x38>
    e2e6:	movsxd rax,DWORD PTR [rcx+0x12a54]
    e2ed:	test   edx,edx
    e2ef:	je     e3c0 <hvm_mmio_assist_postprocess+0x210>
    e2f5:	mov    ecx,DWORD PTR [rcx+0x12a58]
    e2fb:	cmp    ecx,eax
    e2fd:	jg     e460 <hvm_mmio_assist_postprocess+0x2b0>
    e303:	test   eax,eax
    e305:	mov    r13d,DWORD PTR [rip+0x21add0]        # 2290dc <opt+0x3c>
    e30c:	je     e31c <hvm_mmio_assist_postprocess+0x16c>
    e30e:	cmp    ecx,r13d
    e311:	jl     e31c <hvm_mmio_assist_postprocess+0x16c>
    e313:	test   r13d,r13d
    e316:	jne    e54c <hvm_mmio_assist_postprocess+0x39c>
    e31c:	add    ecx,ecx
    e31e:	cmovne edx,ecx
    e321:	test   r13d,r13d
    e324:	je     e544 <hvm_mmio_assist_postprocess+0x394>
    e32a:	cmp    edx,r13d
    e32d:	jle    e544 <hvm_mmio_assist_postprocess+0x394>
    e333:	lea    rax,[rbp*8+0x0]
    e33b:	movsxd rsi,r13d
    e33e:	shl    rsi,0x3
    e342:	sub    rax,rbp
    e345:	lea    r14,[rbx+rax*8]
    e349:	mov    rdi,QWORD PTR [r14+0x12a68]
    e350:	call   44c0 <realloc@plt>
    e355:	test   rax,rax
    e358:	je     e538 <hvm_mmio_assist_postprocess+0x388>
    e35e:	mov    QWORD PTR [r14+0x12a68],rax
    e365:	mov    DWORD PTR [r14+0x12a58],r13d
    e36c:	lea    rax,[rbp*8+0x0]
    e374:	sub    rax,rbp
    e377:	movsxd rax,DWORD PTR [rbx+rax*8+0x12a54]
    e37f:	cmp    eax,r13d
    e382:	jl     e460 <hvm_mmio_assist_postprocess+0x2b0>
    e388:	cdq    
    e389:	idiv   r13d
    e38c:	lea    ecx,[rax+0x1]
    e38f:	mov    esi,edx
    e391:	mov    edx,0x55555556
    e396:	mov    eax,ecx
    e398:	imul   edx
    e39a:	mov    eax,ecx
    e39c:	sar    eax,0x1f
    e39f:	sub    eax,edx
    e3a1:	add    eax,esi
    e3a3:	cdq    
    e3a4:	idiv   ecx
    e3a6:	lea    rax,[rbp*8+0x0]
    e3ae:	sub    rax,rbp
    e3b1:	test   edx,edx
    e3b3:	je     e518 <hvm_mmio_assist_postprocess+0x368>
    e3b9:	mov    eax,DWORD PTR [rbx+rax*8+0x12a54]
    e3c0:	lea    rdx,[rbp*8+0x0]
    e3c8:	add    eax,0x1
    e3cb:	sub    rdx,rbp
    e3ce:	lea    rdx,[rbx+rdx*8]
    e3d2:	mov    DWORD PTR [rdx+0x12a54],eax
    e3d8:	add    QWORD PTR [rdx+0x12a60],r12
    e3df:	add    DWORD PTR [rdx+0x12a70],0x1
    e3e6:	add    QWORD PTR [rdx+0x12a78],r12
    e3ed:	jmp    e230 <hvm_mmio_assist_postprocess+0x80>
    e3f2:	nop    WORD PTR [rax+rax*1+0x0]
    e3f8:	lea    rsi,[rip+0xffffffffffff79c1]        # 5dc0 <hvm_mmio_summary>
    e3ff:	mov    edx,0x2
    e404:	mov    rdi,rbx
    e407:	call   bcf0 <__hvm_set_summary_handler>
    e40c:	test   eax,eax
    e40e:	jne    e4e8 <hvm_mmio_assist_postprocess+0x338>
    e414:	mov    DWORD PTR [rip+0x258fd6],0x1        # 2673f4 <done.6293>
    e41e:	mov    ebp,0x2
    e423:	jmp    e200 <hvm_mmio_assist_postprocess+0x50>
    e428:	nop    DWORD PTR [rax+rax*1+0x0]
    e430:	mov    rdi,QWORD PTR [rip+0x256e21]        # 265258 <warn>
    e437:	lea    rcx,[rip+0x15302]        # 23740 <__func__.6286>
    e43e:	lea    rdx,[rip+0x11c53]        # 20098 <_IO_stdin_used+0x30d8>
    e445:	mov    esi,0x1
    e44a:	xor    eax,eax
    e44c:	call   4560 <__fprintf_chk@plt>
    e451:	mov    DWORD PTR [rip+0x258f9d],0x1        # 2673f8 <warned.6292>
    e45b:	jmp    e1ed <hvm_mmio_assist_postprocess+0x3d>
    e460:	lea    rdx,[rbp*8+0x0]
    e468:	sub    rdx,rbp
    e46b:	lea    rdx,[rbx+rdx*8]
    e46f:	mov    rcx,QWORD PTR [rdx+0x12a68]
    e476:	mov    QWORD PTR [rcx+rax*8],r12
    e47a:	mov    eax,DWORD PTR [rdx+0x12a54]
    e480:	jmp    e3c0 <hvm_mmio_assist_postprocess+0x210>
    e485:	nop    DWORD PTR [rax]
    e488:	mov    rdi,QWORD PTR [rip+0x21dfb1]        # 22c440 <stderr@@GLIBC_2.2.5>
    e48f:	lea    rcx,[rip+0x152aa]        # 23740 <__func__.6286>
    e496:	lea    rdx,[rip+0x11693]        # 1fb30 <_IO_stdin_used+0x2b70>
    e49d:	mov    r8d,eax
    e4a0:	mov    esi,0x1
    e4a5:	xor    eax,eax
    e4a7:	call   4560 <__fprintf_chk@plt>
    e4ac:	jmp    e2af <hvm_mmio_assist_postprocess+0xff>
    e4b1:	nop    DWORD PTR [rax+0x0]
    e4b8:	mov    rdi,QWORD PTR [rip+0x21df81]        # 22c440 <stderr@@GLIBC_2.2.5>
    e4bf:	lea    rcx,[rip+0x1527a]        # 23740 <__func__.6286>
    e4c6:	lea    rdx,[rip+0x11663]        # 1fb30 <_IO_stdin_used+0x2b70>
    e4cd:	mov    r8d,eax
    e4d0:	mov    esi,0x1
    e4d5:	xor    eax,eax
    e4d7:	call   4560 <__fprintf_chk@plt>
    e4dc:	jmp    e272 <hvm_mmio_assist_postprocess+0xc2>
    e4e1:	nop    DWORD PTR [rax+0x0]
    e4e8:	mov    rdi,QWORD PTR [rip+0x21df51]        # 22c440 <stderr@@GLIBC_2.2.5>
    e4ef:	lea    rcx,[rip+0x1524a]        # 23740 <__func__.6286>
    e4f6:	lea    rdx,[rip+0x11633]        # 1fb30 <_IO_stdin_used+0x2b70>
    e4fd:	mov    r8d,eax
    e500:	mov    esi,0x1
    e505:	xor    eax,eax
    e507:	call   4560 <__fprintf_chk@plt>
    e50c:	jmp    e414 <hvm_mmio_assist_postprocess+0x264>
    e511:	nop    DWORD PTR [rax+0x0]
    e518:	lea    rdx,[rbx+rax*8]
    e51c:	movsxd rax,esi
    e51f:	mov    rcx,QWORD PTR [rdx+0x12a68]
    e526:	mov    QWORD PTR [rcx+rax*8],r12
    e52a:	mov    eax,DWORD PTR [rdx+0x12a54]
    e530:	jmp    e3c0 <hvm_mmio_assist_postprocess+0x210>
    e535:	nop    DWORD PTR [rax]
    e538:	mov    r13d,DWORD PTR [r14+0x12a58]
    e53f:	jmp    e36c <hvm_mmio_assist_postprocess+0x1bc>
    e544:	mov    r13d,edx
    e547:	jmp    e333 <hvm_mmio_assist_postprocess+0x183>
    e54c:	mov    r13d,ecx
    e54f:	jmp    e388 <hvm_mmio_assist_postprocess+0x1d8>
    e554:	xchg   ax,ax
    e556:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e560 <shadow_mmio_postprocess>:
    e560:	mov    eax,DWORD PTR [rip+0x21ab3e]        # 2290a4 <opt+0x4>
    e566:	push   r14
    e568:	push   r13
    e56a:	push   r12
    e56c:	push   rbp
    e56d:	push   rbx
    e56e:	mov    rbx,rdi
    e571:	test   eax,eax
    e573:	je     e5af <shadow_mmio_postprocess+0x4f>
    e575:	movsxd rbp,DWORD PTR [rdi+0x28358]
    e57c:	test   ebp,ebp
    e57e:	je     e5e0 <shadow_mmio_postprocess+0x80>
    e580:	lea    rax,[rbp*8+0x0]
    e588:	mov    r12,QWORD PTR [rdi+0x283e8]
    e58f:	sub    rax,rbp
    e592:	lea    rcx,[rdi+rax*8]
    e596:	add    DWORD PTR [rcx+0x108d8],0x1
    e59d:	test   r12,r12
    e5a0:	jne    e600 <shadow_mmio_postprocess+0xa0>
    e5a2:	mov    esi,0x3
    e5a7:	mov    rdi,rbx
    e5aa:	call   9800 <hvm_update_short_summary>
    e5af:	cmp    BYTE PTR [rip+0x21aaec],0x0        # 2290a2 <opt+0x2>
    e5b6:	js     e5c8 <shadow_mmio_postprocess+0x68>
    e5b8:	pop    rbx
    e5b9:	pop    rbp
    e5ba:	pop    r12
    e5bc:	pop    r13
    e5be:	pop    r14
    e5c0:	ret    
    e5c1:	nop    DWORD PTR [rax+0x0]
    e5c8:	mov    rdi,rbx
    e5cb:	pop    rbx
    e5cc:	pop    rbp
    e5cd:	pop    r12
    e5cf:	pop    r13
    e5d1:	pop    r14
    e5d3:	jmp    e110 <enumerate_mmio>
    e5d8:	nop    DWORD PTR [rax+rax*1+0x0]
    e5e0:	mov    rcx,QWORD PTR [rip+0x256c71]        # 265258 <warn>
    e5e7:	lea    rdi,[rip+0xed3f]        # 1d32d <_IO_stdin_used+0x36d>
    e5ee:	mov    edx,0x14
    e5f3:	mov    esi,0x1
    e5f8:	call   4550 <fwrite@plt>
    e5fd:	jmp    e5a2 <shadow_mmio_postprocess+0x42>
    e5ff:	nop
    e600:	mov    edx,DWORD PTR [rip+0x21aad2]        # 2290d8 <opt+0x38>
    e606:	movsxd rax,DWORD PTR [rcx+0x108dc]
    e60d:	test   edx,edx
    e60f:	je     e6e0 <shadow_mmio_postprocess+0x180>
    e615:	mov    ecx,DWORD PTR [rcx+0x108e0]
    e61b:	cmp    ecx,eax
    e61d:	jg     e718 <shadow_mmio_postprocess+0x1b8>
    e623:	test   eax,eax
    e625:	mov    r13d,DWORD PTR [rip+0x21aab0]        # 2290dc <opt+0x3c>
    e62c:	je     e63c <shadow_mmio_postprocess+0xdc>
    e62e:	cmp    ecx,r13d
    e631:	jl     e63c <shadow_mmio_postprocess+0xdc>
    e633:	test   r13d,r13d
    e636:	jne    e76e <shadow_mmio_postprocess+0x20e>
    e63c:	add    ecx,ecx
    e63e:	cmovne edx,ecx
    e641:	test   r13d,r13d
    e644:	je     e766 <shadow_mmio_postprocess+0x206>
    e64a:	cmp    edx,r13d
    e64d:	jle    e766 <shadow_mmio_postprocess+0x206>
    e653:	lea    rax,[rbp*8+0x0]
    e65b:	movsxd rsi,r13d
    e65e:	shl    rsi,0x3
    e662:	sub    rax,rbp
    e665:	lea    r14,[rbx+rax*8]
    e669:	mov    rdi,QWORD PTR [r14+0x108f0]
    e670:	call   44c0 <realloc@plt>
    e675:	test   rax,rax
    e678:	je     e75a <shadow_mmio_postprocess+0x1fa>
    e67e:	mov    QWORD PTR [r14+0x108f0],rax
    e685:	mov    DWORD PTR [r14+0x108e0],r13d
    e68c:	lea    rax,[rbp*8+0x0]
    e694:	sub    rax,rbp
    e697:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    e69f:	cmp    eax,r13d
    e6a2:	jl     e718 <shadow_mmio_postprocess+0x1b8>
    e6a4:	cdq    
    e6a5:	idiv   r13d
    e6a8:	lea    ecx,[rax+0x1]
    e6ab:	mov    esi,edx
    e6ad:	mov    edx,0x55555556
    e6b2:	mov    eax,ecx
    e6b4:	imul   edx
    e6b6:	mov    eax,ecx
    e6b8:	sar    eax,0x1f
    e6bb:	sub    eax,edx
    e6bd:	add    eax,esi
    e6bf:	cdq    
    e6c0:	idiv   ecx
    e6c2:	lea    rax,[rbp*8+0x0]
    e6ca:	sub    rax,rbp
    e6cd:	test   edx,edx
    e6cf:	je     e740 <shadow_mmio_postprocess+0x1e0>
    e6d1:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    e6d8:	nop    DWORD PTR [rax+rax*1+0x0]
    e6e0:	lea    rdx,[rbp*8+0x0]
    e6e8:	add    eax,0x1
    e6eb:	sub    rdx,rbp
    e6ee:	lea    rdx,[rbx+rdx*8]
    e6f2:	mov    DWORD PTR [rdx+0x108dc],eax
    e6f8:	add    QWORD PTR [rdx+0x108e8],r12
    e6ff:	add    DWORD PTR [rdx+0x108f8],0x1
    e706:	add    QWORD PTR [rdx+0x10900],r12
    e70d:	jmp    e5a2 <shadow_mmio_postprocess+0x42>
    e712:	nop    WORD PTR [rax+rax*1+0x0]
    e718:	lea    rdx,[rbp*8+0x0]
    e720:	sub    rdx,rbp
    e723:	lea    rdx,[rbx+rdx*8]
    e727:	mov    rcx,QWORD PTR [rdx+0x108f0]
    e72e:	mov    QWORD PTR [rcx+rax*8],r12
    e732:	mov    eax,DWORD PTR [rdx+0x108dc]
    e738:	jmp    e6e0 <shadow_mmio_postprocess+0x180>
    e73a:	nop    WORD PTR [rax+rax*1+0x0]
    e740:	lea    rdx,[rbx+rax*8]
    e744:	movsxd rax,esi
    e747:	mov    rcx,QWORD PTR [rdx+0x108f0]
    e74e:	mov    QWORD PTR [rcx+rax*8],r12
    e752:	mov    eax,DWORD PTR [rdx+0x108dc]
    e758:	jmp    e6e0 <shadow_mmio_postprocess+0x180>
    e75a:	mov    r13d,DWORD PTR [r14+0x108e0]
    e761:	jmp    e68c <shadow_mmio_postprocess+0x12c>
    e766:	mov    r13d,edx
    e769:	jmp    e653 <shadow_mmio_postprocess+0xf3>
    e76e:	mov    r13d,ecx
    e771:	jmp    e6a4 <shadow_mmio_postprocess+0x144>
    e776:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e780 <hvm_io_write_postprocess>:
    e780:	test   BYTE PTR [rip+0x21a91b],0x40        # 2290a2 <opt+0x2>
    e787:	jne    e790 <hvm_io_write_postprocess+0x10>
    e789:	repz ret 
    e78b:	nop    DWORD PTR [rax+rax*1+0x0]
    e790:	mov    esi,DWORD PTR [rdi+0x28348]
    e796:	mov    rcx,QWORD PTR [rdi+0x283e8]
    e79d:	xor    r8d,r8d
    e7a0:	add    rdi,0x28340
    e7a7:	mov    edx,0x1
    e7ac:	and    esi,0x7fffffff
    e7b2:	jmp    de10 <update_io_address>
    e7b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000e7c0 <hvm_io_read_postprocess>:
    e7c0:	test   BYTE PTR [rip+0x21a8db],0x40        # 2290a2 <opt+0x2>
    e7c7:	push   rbx
    e7c8:	mov    rbx,rdi
    e7cb:	jne    e7f0 <hvm_io_read_postprocess+0x30>
    e7cd:	test   BYTE PTR [rip+0x21a8cc],0x10        # 2290a0 <opt>
    e7d4:	je     e7e9 <hvm_io_read_postprocess+0x29>
    e7d6:	mov    eax,DWORD PTR [rbx+0x28348]
    e7dc:	and    eax,0x7fffffff
    e7e1:	cmp    eax,DWORD PTR [rip+0x21a8d9]        # 2290c0 <opt+0x20>
    e7e7:	je     e820 <hvm_io_read_postprocess+0x60>
    e7e9:	pop    rbx
    e7ea:	ret    
    e7eb:	nop    DWORD PTR [rax+rax*1+0x0]
    e7f0:	mov    esi,DWORD PTR [rdi+0x28348]
    e7f6:	mov    rcx,QWORD PTR [rdi+0x283e8]
    e7fd:	lea    rdi,[rdi+0x28340]
    e804:	xor    r8d,r8d
    e807:	xor    edx,edx
    e809:	and    esi,0x7fffffff
    e80f:	call   de10 <update_io_address>
    e814:	jmp    e7cd <hvm_io_read_postprocess+0xd>
    e816:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e820:	mov    rdi,QWORD PTR [rbx+0x283e0]
    e827:	mov    rsi,QWORD PTR [rip+0x21e98a]        # 22d1b8 <P+0x18>
    e82e:	pop    rbx
    e82f:	sub    rsi,rdi
    e832:	jmp    7700 <scatterplot_vs_time>
    e837:	nop    WORD PTR [rax+rax*1+0x0]

000000000000e840 <hvm_io_address_summary>:
    e840:	test   rdi,rdi
    e843:	je     e850 <hvm_io_address_summary+0x10>
    e845:	jmp    6850 <hvm_io_address_summary.part.14>
    e84a:	nop    WORD PTR [rax+rax*1+0x0]
    e850:	repz ret 
    e852:	nop    DWORD PTR [rax+0x0]
    e856:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e860 <cr3_switch>:
    e860:	mov    ecx,DWORD PTR [rsi]
    e862:	test   ecx,ecx
    e864:	je     ea30 <cr3_switch+0x1d0>
    e86a:	push   r15
    e86c:	push   r14
    e86e:	mov    r15,rdi
    e871:	push   r13
    e873:	push   r12
    e875:	shr    r15,0xc
    e879:	push   rbp
    e87a:	push   rbx
    e87b:	mov    r12,rsi
    e87e:	mov    rbp,rdi
    e881:	sub    rsp,0x18
    e885:	test   BYTE PTR [rip+0x21a816],0x20        # 2290a2 <opt+0x2>
    e88c:	mov    r14,QWORD PTR [rsi+0x10]
    e890:	je     ea10 <cr3_switch+0x1b0>
    e896:	mov    rbx,QWORD PTR [r14+0x70]
    e89a:	mov    r8,QWORD PTR [rip+0x21e917]        # 22d1b8 <P+0x18>
    e8a1:	test   rbx,rbx
    e8a4:	je     e8c8 <cr3_switch+0x68>
    e8a6:	mov    edx,DWORD PTR [rip+0x21a7f8]        # 2290a4 <opt+0x4>
    e8ac:	test   edx,edx
    e8ae:	je     e8c4 <cr3_switch+0x64>
    e8b0:	mov    rsi,r8
    e8b3:	sub    rsi,QWORD PTR [r14+0x68]
    e8b7:	add    DWORD PTR [rbx+0x38],0x1
    e8bb:	test   rsi,rsi
    e8be:	jne    eaf8 <cr3_switch+0x298>
    e8c4:	mov    QWORD PTR [rbx+0x28],r8
    e8c8:	test   r15,r15
    e8cb:	je     ea38 <cr3_switch+0x1d8>
    e8d1:	mov    r13,QWORD PTR [r14+0x8]
    e8d5:	mov    rax,QWORD PTR [r13+0x9e0]
    e8dc:	test   rax,rax
    e8df:	je     eb10 <cr3_switch+0x2b0>
    e8e5:	cmp    r15,QWORD PTR [rax+0x10]
    e8e9:	jne    e8fd <cr3_switch+0x9d>
    e8eb:	jmp    eb1c <cr3_switch+0x2bc>
    e8f0:	cmp    QWORD PTR [rbx+0x10],r15
    e8f4:	mov    rax,rbx
    e8f7:	je     e9b0 <cr3_switch+0x150>
    e8fd:	mov    rbx,QWORD PTR [rax]
    e900:	test   rbx,rbx
    e903:	jne    e8f0 <cr3_switch+0x90>
    e905:	mov    r13,rax
    e908:	mov    edi,0x338
    e90d:	mov    QWORD PTR [rsp],r8
    e911:	call   4490 <malloc@plt>
    e916:	test   rax,rax
    e919:	mov    r9,rax
    e91c:	mov    rbx,rax
    e91f:	mov    r8,QWORD PTR [rsp]
    e923:	je     ea50 <cr3_switch+0x1f0>
    e929:	xor    eax,eax
    e92b:	mov    ecx,0x67
    e930:	mov    rdi,r9
    e933:	rep stos QWORD PTR es:[rdi],rax
    e936:	mov    eax,DWORD PTR [rip+0x2568a4]        # 2651e0 <P+0x38040>
    e93c:	mov    QWORD PTR [r9+0x10],r15
    e940:	mov    QWORD PTR [r9+0x20],r8
    e944:	mov    DWORD PTR [r9+0x18],eax
    e948:	mov    rax,QWORD PTR [r13+0x0]
    e94c:	mov    QWORD PTR [r9],rax
    e94f:	mov    QWORD PTR [r13+0x0],r9
    e953:	cmp    QWORD PTR [rip+0x25688d],0x0        # 2651e8 <P+0x38048>
    e95b:	mov    QWORD PTR [r9+0x8],0x0
    e963:	je     eaa0 <cr3_switch+0x240>
    e969:	mov    rax,QWORD PTR [rip+0x256880]        # 2651f0 <P+0x38050>
    e970:	mov    QWORD PTR [rax],r9
    e973:	add    DWORD PTR [rip+0x256866],0x1        # 2651e0 <P+0x38040>
    e97a:	cmp    DWORD PTR [rip+0x21a77b],0x1        # 2290fc <opt+0x5c>
    e981:	lea    rax,[r9+0x8]
    e985:	mov    QWORD PTR [rip+0x256864],rax        # 2651f0 <P+0x38050>
    e98c:	jne    e9b0 <cr3_switch+0x150>
    e98e:	mov    rax,QWORD PTR [r14+0x8]
    e992:	cmp    DWORD PTR [rax+0x8],0x8000
    e999:	je     e9b0 <cr3_switch+0x150>
    e99b:	mov    rdi,r9
    e99e:	mov    QWORD PTR [rsp],r8
    e9a2:	call   8940 <interval_cr3_value_check>
    e9a7:	mov    r8,QWORD PTR [rsp]
    e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
    e9b0:	mov    eax,DWORD PTR [rbx+0x318]
    e9b6:	test   eax,eax
    e9b8:	jne    eab0 <cr3_switch+0x250>
    e9be:	mov    QWORD PTR [r14+0x68],r8
    e9c2:	add    DWORD PTR [rbx+0xe0],0x1
    e9c9:	test   BYTE PTR [rbx+0x320],0x1
    e9d0:	je     e9d9 <cr3_switch+0x179>
    e9d2:	add    DWORD PTR [rbx+0x328],0x1
    e9d9:	mov    QWORD PTR [r14+0x70],rbx
    e9dd:	test   BYTE PTR [rip+0x21a6bc],0x4        # 2290a0 <opt>
    e9e4:	je     e9f7 <cr3_switch+0x197>
    e9e6:	movsxd rsi,DWORD PTR [rbx+0x18]
    e9ea:	mov    rdi,QWORD PTR [r12+0x283e0]
    e9f2:	call   7700 <scatterplot_vs_time>
    e9f7:	mov    QWORD PTR [r14+0x60],rbp
    e9fb:	add    rsp,0x18
    e9ff:	pop    rbx
    ea00:	pop    rbp
    ea01:	pop    r12
    ea03:	pop    r13
    ea05:	pop    r14
    ea07:	pop    r15
    ea09:	ret    
    ea0a:	nop    WORD PTR [rax+rax*1+0x0]
    ea10:	test   BYTE PTR [rip+0x21a689],0x4        # 2290a0 <opt>
    ea17:	je     e9f7 <cr3_switch+0x197>
    ea19:	mov    rdi,QWORD PTR [rsi+0x283e0]
    ea20:	mov    rsi,r15
    ea23:	call   7700 <scatterplot_vs_time>
    ea28:	jmp    e9f7 <cr3_switch+0x197>
    ea2a:	nop    WORD PTR [rax+rax*1+0x0]
    ea30:	repz ret 
    ea32:	nop    WORD PTR [rax+rax*1+0x0]
    ea38:	mov    QWORD PTR [r14+0x70],0x0
    ea40:	test   BYTE PTR [rip+0x21a659],0x4        # 2290a0 <opt>
    ea47:	je     e9f7 <cr3_switch+0x197>
    ea49:	xor    esi,esi
    ea4b:	jmp    e9ea <cr3_switch+0x18a>
    ea4d:	nop    DWORD PTR [rax]
    ea50:	mov    rcx,QWORD PTR [rip+0x21d9e9]        # 22c440 <stderr@@GLIBC_2.2.5>
    ea57:	lea    rdi,[rip+0xe81c]        # 1d27a <_IO_stdin_used+0x2ba>
    ea5e:	mov    edx,0x11
    ea63:	mov    esi,0x1
    ea68:	mov    QWORD PTR [rsp+0x8],r9
    ea6d:	mov    QWORD PTR [rsp],r8
    ea71:	call   4550 <fwrite@plt>
    ea76:	cmp    DWORD PTR [rip+0x21a663],0x7        # 2290e0 <opt+0x40>
    ea7d:	mov    r8,QWORD PTR [rsp]
    ea81:	mov    r9,QWORD PTR [rsp+0x8]
    ea86:	ja     e929 <cr3_switch+0xc9>
    ea8c:	mov    edi,0x1
    ea91:	call   4540 <exit@plt>
    ea96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eaa0:	mov    QWORD PTR [rip+0x256741],r9        # 2651e8 <P+0x38048>
    eaa7:	jmp    e973 <cr3_switch+0x113>
    eaac:	nop    DWORD PTR [rax+0x0]
    eab0:	mov    rcx,QWORD PTR [rbx+0x10]
    eab4:	mov    rdi,QWORD PTR [rip+0x25679d]        # 265258 <warn>
    eabb:	lea    rdx,[rip+0x1160e]        # 200d0 <_IO_stdin_used+0x3110>
    eac2:	mov    esi,0x1
    eac7:	xor    eax,eax
    eac9:	mov    QWORD PTR [rsp],r8
    eacd:	call   4560 <__fprintf_chk@plt>
    ead2:	mov    DWORD PTR [rbx+0x318],0x0
    eadc:	mov    r8,QWORD PTR [rsp]
    eae0:	mov    DWORD PTR [r12+0x28358],0x1
    eaec:	jmp    e9be <cr3_switch+0x15e>
    eaf1:	nop    DWORD PTR [rax+0x0]
    eaf8:	lea    rdi,[rbx+0x38]
    eafc:	mov    QWORD PTR [rsp],r8
    eb00:	call   4a20 <update_cycles.part.5>
    eb05:	mov    r8,QWORD PTR [rsp]
    eb09:	jmp    e8c4 <cr3_switch+0x64>
    eb0e:	xchg   ax,ax
    eb10:	add    r13,0x9e0
    eb17:	jmp    e908 <cr3_switch+0xa8>
    eb1c:	mov    rbx,rax
    eb1f:	jmp    e9b0 <cr3_switch+0x150>
    eb24:	xchg   ax,ax
    eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000eb30 <hvm_cr_write_postprocess>:
    eb30:	push   r12
    eb32:	push   rbp
    eb33:	push   rbx
    eb34:	mov    eax,DWORD PTR [rdi+0x28348]
    eb3a:	mov    rbx,rdi
    eb3d:	mov    edx,DWORD PTR [rip+0x21a561]        # 2290a4 <opt+0x4>
    eb43:	cmp    eax,0x3
    eb46:	je     ebe0 <hvm_cr_write_postprocess+0xb0>
    eb4c:	cmp    eax,0x8
    eb4f:	ja     eb59 <hvm_cr_write_postprocess+0x29>
    eb51:	test   edx,edx
    eb53:	jne    ecc0 <hvm_cr_write_postprocess+0x190>
    eb59:	mov    eax,DWORD PTR [rbx+0x20]
    eb5c:	cmp    DWORD PTR [rbx+0x28400],eax
    eb62:	jae    ebd8 <hvm_cr_write_postprocess+0xa8>
    eb64:	mov    ecx,DWORD PTR [rbx+0x28348]
    eb6a:	cmp    ecx,0xf
    eb6d:	ja     f2d0 <hvm_cr_write_postprocess+0x7a0>
    eb73:	lea    rdx,[rip+0x143e2]        # 22f5c <_IO_stdin_used+0x5f9c>
    eb7a:	movsxd rax,DWORD PTR [rdx+rcx*4]
    eb7e:	add    rax,rdx
    eb81:	jmp    rax
    eb83:	nop    DWORD PTR [rax+rax*1+0x0]
    eb88:	mov    edx,DWORD PTR [rip+0x25882a]        # 2673b8 <done.6518>
    eb8e:	test   edx,edx
    eb90:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    eb92:	lea    rsi,[rip+0xca7]        # f840 <hvm_cr_write_summary>
    eb99:	mov    edx,0xe
    eb9e:	mov    rdi,rbx
    eba1:	call   bcf0 <__hvm_set_summary_handler>
    eba6:	test   eax,eax
    eba8:	je     ebce <hvm_cr_write_postprocess+0x9e>
    ebaa:	mov    rdi,QWORD PTR [rip+0x21d88f]        # 22c440 <stderr@@GLIBC_2.2.5>
    ebb1:	lea    rcx,[rip+0x14b48]        # 23700 <__func__.6476>
    ebb8:	lea    rdx,[rip+0x10f71]        # 1fb30 <_IO_stdin_used+0x2b70>
    ebbf:	mov    r8d,eax
    ebc2:	mov    esi,0x1
    ebc7:	xor    eax,eax
    ebc9:	call   4560 <__fprintf_chk@plt>
    ebce:	mov    DWORD PTR [rip+0x2587e0],0x1        # 2673b8 <done.6518>
    ebd8:	pop    rbx
    ebd9:	pop    rbp
    ebda:	pop    r12
    ebdc:	ret    
    ebdd:	nop    DWORD PTR [rax]
    ebe0:	mov    rcx,QWORD PTR [rdi+0x10]
    ebe4:	mov    rbp,QWORD PTR [rdi+0x28350]
    ebeb:	mov    rax,QWORD PTR [rcx+0x60]
    ebef:	test   rax,rax
    ebf2:	je     eca8 <hvm_cr_write_postprocess+0x178>
    ebf8:	cmp    rbp,rax
    ebfb:	jne    eca8 <hvm_cr_write_postprocess+0x178>
    ec01:	mov    rax,QWORD PTR [rcx+0x70]
    ec05:	test   rax,rax
    ec08:	je     ec25 <hvm_cr_write_postprocess+0xf5>
    ec0a:	add    DWORD PTR [rax+0xe4],0x1
    ec11:	mov    rax,QWORD PTR [rcx+0x70]
    ec15:	test   BYTE PTR [rax+0x320],0x1
    ec1c:	je     ec25 <hvm_cr_write_postprocess+0xf5>
    ec1e:	add    DWORD PTR [rax+0x324],0x1
    ec25:	test   edx,edx
    ec27:	je     eb59 <hvm_cr_write_postprocess+0x29>
    ec2d:	mov    r12d,0x1
    ec33:	nop    DWORD PTR [rax+rax*1+0x0]
    ec38:	movsxd rax,DWORD PTR [rbx+0x283d0]
    ec3f:	mov    edx,0x11
    ec44:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ec4b:	cmp    eax,0x11
    ec4e:	cmovg  rax,rdx
    ec52:	lea    rdx,[rax*8+0x0]
    ec5a:	sub    rdx,rax
    ec5d:	mov    rax,rdx
    ec60:	shl    rax,0x3
    ec64:	add    DWORD PTR [rbx+rax*1+0x11588],0x1
    ec6c:	test   rsi,rsi
    ec6f:	jne    ed00 <hvm_cr_write_postprocess+0x1d0>
    ec75:	add    DWORD PTR [rbx+0x11438],0x1
    ec7c:	mov    esi,0x5
    ec81:	mov    rdi,rbx
    ec84:	call   9800 <hvm_update_short_summary>
    ec89:	test   r12d,r12d
    ec8c:	jne    eb59 <hvm_cr_write_postprocess+0x29>
    ec92:	mov    rsi,rbx
    ec95:	mov    rdi,rbp
    ec98:	call   e860 <cr3_switch>
    ec9d:	jmp    eb59 <hvm_cr_write_postprocess+0x29>
    eca2:	nop    WORD PTR [rax+rax*1+0x0]
    eca8:	xor    r12d,r12d
    ecab:	test   edx,edx
    ecad:	jne    ec38 <hvm_cr_write_postprocess+0x108>
    ecaf:	mov    rsi,rbx
    ecb2:	mov    rdi,rbp
    ecb5:	call   e860 <cr3_switch>
    ecba:	jmp    eb59 <hvm_cr_write_postprocess+0x29>
    ecbf:	nop
    ecc0:	lea    rdx,[rax*8+0x0]
    ecc8:	mov    rsi,QWORD PTR [rdi+0x283e8]
    eccf:	sub    rdx,rax
    ecd2:	mov    rax,rdx
    ecd5:	shl    rax,0x3
    ecd9:	add    DWORD PTR [rdi+rax*1+0x11390],0x1
    ece1:	test   rsi,rsi
    ece4:	je     eb59 <hvm_cr_write_postprocess+0x29>
    ecea:	lea    rdi,[rdi+rax*1+0x11390]
    ecf2:	call   4a20 <update_cycles.part.5>
    ecf7:	jmp    eb59 <hvm_cr_write_postprocess+0x29>
    ecfc:	nop    DWORD PTR [rax+0x0]
    ed00:	lea    rdi,[rbx+rax*1+0x11588]
    ed08:	call   4a20 <update_cycles.part.5>
    ed0d:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ed14:	add    DWORD PTR [rbx+0x11438],0x1
    ed1b:	lea    rdi,[rbx+0x11438]
    ed22:	test   rsi,rsi
    ed25:	je     ec7c <hvm_cr_write_postprocess+0x14c>
    ed2b:	call   4a20 <update_cycles.part.5>
    ed30:	jmp    ec7c <hvm_cr_write_postprocess+0x14c>
    ed35:	nop    DWORD PTR [rax]
    ed38:	mov    r9d,DWORD PTR [rip+0x25868d]        # 2673cc <done.6503>
    ed3f:	test   r9d,r9d
    ed42:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    ed48:	lea    rsi,[rip+0xaf1]        # f840 <hvm_cr_write_summary>
    ed4f:	mov    edx,0x9
    ed54:	mov    rdi,rbx
    ed57:	call   bcf0 <__hvm_set_summary_handler>
    ed5c:	test   eax,eax
    ed5e:	je     ed84 <hvm_cr_write_postprocess+0x254>
    ed60:	mov    rdi,QWORD PTR [rip+0x21d6d9]        # 22c440 <stderr@@GLIBC_2.2.5>
    ed67:	lea    rcx,[rip+0x14992]        # 23700 <__func__.6476>
    ed6e:	lea    rdx,[rip+0x10dbb]        # 1fb30 <_IO_stdin_used+0x2b70>
    ed75:	mov    r8d,eax
    ed78:	mov    esi,0x1
    ed7d:	xor    eax,eax
    ed7f:	call   4560 <__fprintf_chk@plt>
    ed84:	mov    DWORD PTR [rip+0x25863e],0x1        # 2673cc <done.6503>
    ed8e:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    ed93:	nop    DWORD PTR [rax+rax*1+0x0]
    ed98:	mov    r10d,DWORD PTR [rip+0x258631]        # 2673d0 <done.6500>
    ed9f:	test   r10d,r10d
    eda2:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    eda8:	lea    rsi,[rip+0xa91]        # f840 <hvm_cr_write_summary>
    edaf:	mov    edx,0x8
    edb4:	mov    rdi,rbx
    edb7:	call   bcf0 <__hvm_set_summary_handler>
    edbc:	test   eax,eax
    edbe:	je     ede4 <hvm_cr_write_postprocess+0x2b4>
    edc0:	mov    rdi,QWORD PTR [rip+0x21d679]        # 22c440 <stderr@@GLIBC_2.2.5>
    edc7:	lea    rcx,[rip+0x14932]        # 23700 <__func__.6476>
    edce:	lea    rdx,[rip+0x10d5b]        # 1fb30 <_IO_stdin_used+0x2b70>
    edd5:	mov    r8d,eax
    edd8:	mov    esi,0x1
    eddd:	xor    eax,eax
    eddf:	call   4560 <__fprintf_chk@plt>
    ede4:	mov    DWORD PTR [rip+0x2585e2],0x1        # 2673d0 <done.6500>
    edee:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    edf3:	nop    DWORD PTR [rax+rax*1+0x0]
    edf8:	mov    r11d,DWORD PTR [rip+0x2585d5]        # 2673d4 <done.6497>
    edff:	test   r11d,r11d
    ee02:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    ee08:	lea    rsi,[rip+0xa31]        # f840 <hvm_cr_write_summary>
    ee0f:	mov    edx,0x7
    ee14:	mov    rdi,rbx
    ee17:	call   bcf0 <__hvm_set_summary_handler>
    ee1c:	test   eax,eax
    ee1e:	je     ee44 <hvm_cr_write_postprocess+0x314>
    ee20:	mov    rdi,QWORD PTR [rip+0x21d619]        # 22c440 <stderr@@GLIBC_2.2.5>
    ee27:	lea    rcx,[rip+0x148d2]        # 23700 <__func__.6476>
    ee2e:	lea    rdx,[rip+0x10cfb]        # 1fb30 <_IO_stdin_used+0x2b70>
    ee35:	mov    r8d,eax
    ee38:	mov    esi,0x1
    ee3d:	xor    eax,eax
    ee3f:	call   4560 <__fprintf_chk@plt>
    ee44:	mov    DWORD PTR [rip+0x258586],0x1        # 2673d4 <done.6497>
    ee4e:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    ee53:	nop    DWORD PTR [rax+rax*1+0x0]
    ee58:	mov    ebp,DWORD PTR [rip+0x25857a]        # 2673d8 <done.6494>
    ee5e:	test   ebp,ebp
    ee60:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    ee66:	lea    rsi,[rip+0x9d3]        # f840 <hvm_cr_write_summary>
    ee6d:	mov    edx,0x6
    ee72:	mov    rdi,rbx
    ee75:	call   bcf0 <__hvm_set_summary_handler>
    ee7a:	test   eax,eax
    ee7c:	je     eea2 <hvm_cr_write_postprocess+0x372>
    ee7e:	mov    rdi,QWORD PTR [rip+0x21d5bb]        # 22c440 <stderr@@GLIBC_2.2.5>
    ee85:	lea    rcx,[rip+0x14874]        # 23700 <__func__.6476>
    ee8c:	lea    rdx,[rip+0x10c9d]        # 1fb30 <_IO_stdin_used+0x2b70>
    ee93:	mov    r8d,eax
    ee96:	mov    esi,0x1
    ee9b:	xor    eax,eax
    ee9d:	call   4560 <__fprintf_chk@plt>
    eea2:	mov    DWORD PTR [rip+0x25852c],0x1        # 2673d8 <done.6494>
    eeac:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    eeb1:	nop    DWORD PTR [rax+0x0]
    eeb8:	mov    r12d,DWORD PTR [rip+0x25851d]        # 2673dc <done.6491>
    eebf:	test   r12d,r12d
    eec2:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    eec8:	lea    rsi,[rip+0x971]        # f840 <hvm_cr_write_summary>
    eecf:	mov    edx,0x5
    eed4:	mov    rdi,rbx
    eed7:	call   bcf0 <__hvm_set_summary_handler>
    eedc:	test   eax,eax
    eede:	je     ef04 <hvm_cr_write_postprocess+0x3d4>
    eee0:	mov    rdi,QWORD PTR [rip+0x21d559]        # 22c440 <stderr@@GLIBC_2.2.5>
    eee7:	lea    rcx,[rip+0x14812]        # 23700 <__func__.6476>
    eeee:	lea    rdx,[rip+0x10c3b]        # 1fb30 <_IO_stdin_used+0x2b70>
    eef5:	mov    r8d,eax
    eef8:	mov    esi,0x1
    eefd:	xor    eax,eax
    eeff:	call   4560 <__fprintf_chk@plt>
    ef04:	mov    DWORD PTR [rip+0x2584ce],0x1        # 2673dc <done.6491>
    ef0e:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    ef13:	nop    DWORD PTR [rax+rax*1+0x0]
    ef18:	mov    eax,DWORD PTR [rip+0x2584c2]        # 2673e0 <done.6488>
    ef1e:	test   eax,eax
    ef20:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    ef26:	lea    rsi,[rip+0x913]        # f840 <hvm_cr_write_summary>
    ef2d:	mov    edx,0x4
    ef32:	mov    rdi,rbx
    ef35:	call   bcf0 <__hvm_set_summary_handler>
    ef3a:	test   eax,eax
    ef3c:	je     ef62 <hvm_cr_write_postprocess+0x432>
    ef3e:	mov    rdi,QWORD PTR [rip+0x21d4fb]        # 22c440 <stderr@@GLIBC_2.2.5>
    ef45:	lea    rcx,[rip+0x147b4]        # 23700 <__func__.6476>
    ef4c:	lea    rdx,[rip+0x10bdd]        # 1fb30 <_IO_stdin_used+0x2b70>
    ef53:	mov    r8d,eax
    ef56:	mov    esi,0x1
    ef5b:	xor    eax,eax
    ef5d:	call   4560 <__fprintf_chk@plt>
    ef62:	mov    DWORD PTR [rip+0x258474],0x1        # 2673e0 <done.6488>
    ef6c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    ef71:	nop    DWORD PTR [rax+0x0]
    ef78:	mov    eax,DWORD PTR [rip+0x258466]        # 2673e4 <done.6485>
    ef7e:	test   eax,eax
    ef80:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    ef86:	lea    rsi,[rip+0x8b3]        # f840 <hvm_cr_write_summary>
    ef8d:	mov    edx,0x3
    ef92:	mov    rdi,rbx
    ef95:	call   bcf0 <__hvm_set_summary_handler>
    ef9a:	test   eax,eax
    ef9c:	je     efc2 <hvm_cr_write_postprocess+0x492>
    ef9e:	mov    rdi,QWORD PTR [rip+0x21d49b]        # 22c440 <stderr@@GLIBC_2.2.5>
    efa5:	lea    rcx,[rip+0x14754]        # 23700 <__func__.6476>
    efac:	lea    rdx,[rip+0x10b7d]        # 1fb30 <_IO_stdin_used+0x2b70>
    efb3:	mov    r8d,eax
    efb6:	mov    esi,0x1
    efbb:	xor    eax,eax
    efbd:	call   4560 <__fprintf_chk@plt>
    efc2:	mov    DWORD PTR [rip+0x258418],0x1        # 2673e4 <done.6485>
    efcc:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    efd1:	nop    DWORD PTR [rax+0x0]
    efd8:	mov    eax,DWORD PTR [rip+0x25840a]        # 2673e8 <done.6482>
    efde:	test   eax,eax
    efe0:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    efe6:	lea    rsi,[rip+0x853]        # f840 <hvm_cr_write_summary>
    efed:	mov    edx,0x2
    eff2:	mov    rdi,rbx
    eff5:	call   bcf0 <__hvm_set_summary_handler>
    effa:	test   eax,eax
    effc:	je     f022 <hvm_cr_write_postprocess+0x4f2>
    effe:	mov    rdi,QWORD PTR [rip+0x21d43b]        # 22c440 <stderr@@GLIBC_2.2.5>
    f005:	lea    rcx,[rip+0x146f4]        # 23700 <__func__.6476>
    f00c:	lea    rdx,[rip+0x10b1d]        # 1fb30 <_IO_stdin_used+0x2b70>
    f013:	mov    r8d,eax
    f016:	mov    esi,0x1
    f01b:	xor    eax,eax
    f01d:	call   4560 <__fprintf_chk@plt>
    f022:	mov    DWORD PTR [rip+0x2583bc],0x1        # 2673e8 <done.6482>
    f02c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f031:	nop    DWORD PTR [rax+0x0]
    f038:	mov    ecx,DWORD PTR [rip+0x25837e]        # 2673bc <done.6515>
    f03e:	test   ecx,ecx
    f040:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f046:	lea    rsi,[rip+0x7f3]        # f840 <hvm_cr_write_summary>
    f04d:	mov    edx,0xd
    f052:	mov    rdi,rbx
    f055:	call   bcf0 <__hvm_set_summary_handler>
    f05a:	test   eax,eax
    f05c:	je     f082 <hvm_cr_write_postprocess+0x552>
    f05e:	mov    rdi,QWORD PTR [rip+0x21d3db]        # 22c440 <stderr@@GLIBC_2.2.5>
    f065:	lea    rcx,[rip+0x14694]        # 23700 <__func__.6476>
    f06c:	lea    rdx,[rip+0x10abd]        # 1fb30 <_IO_stdin_used+0x2b70>
    f073:	mov    r8d,eax
    f076:	mov    esi,0x1
    f07b:	xor    eax,eax
    f07d:	call   4560 <__fprintf_chk@plt>
    f082:	mov    DWORD PTR [rip+0x258330],0x1        # 2673bc <done.6515>
    f08c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f091:	nop    DWORD PTR [rax+0x0]
    f098:	mov    esi,DWORD PTR [rip+0x258322]        # 2673c0 <done.6512>
    f09e:	test   esi,esi
    f0a0:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f0a6:	lea    rsi,[rip+0x793]        # f840 <hvm_cr_write_summary>
    f0ad:	mov    edx,0xc
    f0b2:	mov    rdi,rbx
    f0b5:	call   bcf0 <__hvm_set_summary_handler>
    f0ba:	test   eax,eax
    f0bc:	je     f0e2 <hvm_cr_write_postprocess+0x5b2>
    f0be:	mov    rdi,QWORD PTR [rip+0x21d37b]        # 22c440 <stderr@@GLIBC_2.2.5>
    f0c5:	lea    rcx,[rip+0x14634]        # 23700 <__func__.6476>
    f0cc:	lea    rdx,[rip+0x10a5d]        # 1fb30 <_IO_stdin_used+0x2b70>
    f0d3:	mov    r8d,eax
    f0d6:	mov    esi,0x1
    f0db:	xor    eax,eax
    f0dd:	call   4560 <__fprintf_chk@plt>
    f0e2:	mov    DWORD PTR [rip+0x2582d4],0x1        # 2673c0 <done.6512>
    f0ec:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f0f1:	nop    DWORD PTR [rax+0x0]
    f0f8:	mov    edi,DWORD PTR [rip+0x2582c6]        # 2673c4 <done.6509>
    f0fe:	test   edi,edi
    f100:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f106:	lea    rsi,[rip+0x733]        # f840 <hvm_cr_write_summary>
    f10d:	mov    edx,0xb
    f112:	mov    rdi,rbx
    f115:	call   bcf0 <__hvm_set_summary_handler>
    f11a:	test   eax,eax
    f11c:	je     f142 <hvm_cr_write_postprocess+0x612>
    f11e:	mov    rdi,QWORD PTR [rip+0x21d31b]        # 22c440 <stderr@@GLIBC_2.2.5>
    f125:	lea    rcx,[rip+0x145d4]        # 23700 <__func__.6476>
    f12c:	lea    rdx,[rip+0x109fd]        # 1fb30 <_IO_stdin_used+0x2b70>
    f133:	mov    r8d,eax
    f136:	mov    esi,0x1
    f13b:	xor    eax,eax
    f13d:	call   4560 <__fprintf_chk@plt>
    f142:	mov    DWORD PTR [rip+0x258278],0x1        # 2673c4 <done.6509>
    f14c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f151:	nop    DWORD PTR [rax+0x0]
    f158:	mov    r8d,DWORD PTR [rip+0x258269]        # 2673c8 <done.6506>
    f15f:	test   r8d,r8d
    f162:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f168:	lea    rsi,[rip+0x6d1]        # f840 <hvm_cr_write_summary>
    f16f:	mov    edx,0xa
    f174:	mov    rdi,rbx
    f177:	call   bcf0 <__hvm_set_summary_handler>
    f17c:	test   eax,eax
    f17e:	je     f1a4 <hvm_cr_write_postprocess+0x674>
    f180:	mov    rdi,QWORD PTR [rip+0x21d2b9]        # 22c440 <stderr@@GLIBC_2.2.5>
    f187:	lea    rcx,[rip+0x14572]        # 23700 <__func__.6476>
    f18e:	lea    rdx,[rip+0x1099b]        # 1fb30 <_IO_stdin_used+0x2b70>
    f195:	mov    r8d,eax
    f198:	mov    esi,0x1
    f19d:	xor    eax,eax
    f19f:	call   4560 <__fprintf_chk@plt>
    f1a4:	mov    DWORD PTR [rip+0x25821a],0x1        # 2673c8 <done.6506>
    f1ae:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f1b3:	nop    DWORD PTR [rax+rax*1+0x0]
    f1b8:	mov    eax,DWORD PTR [rip+0x2581f6]        # 2673b4 <done.6521>
    f1be:	test   eax,eax
    f1c0:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f1c6:	lea    rsi,[rip+0x673]        # f840 <hvm_cr_write_summary>
    f1cd:	mov    edx,0xf
    f1d2:	mov    rdi,rbx
    f1d5:	call   bcf0 <__hvm_set_summary_handler>
    f1da:	test   eax,eax
    f1dc:	je     f202 <hvm_cr_write_postprocess+0x6d2>
    f1de:	mov    rdi,QWORD PTR [rip+0x21d25b]        # 22c440 <stderr@@GLIBC_2.2.5>
    f1e5:	lea    rcx,[rip+0x14514]        # 23700 <__func__.6476>
    f1ec:	lea    rdx,[rip+0x1093d]        # 1fb30 <_IO_stdin_used+0x2b70>
    f1f3:	mov    r8d,eax
    f1f6:	mov    esi,0x1
    f1fb:	xor    eax,eax
    f1fd:	call   4560 <__fprintf_chk@plt>
    f202:	mov    DWORD PTR [rip+0x2581a8],0x1        # 2673b4 <done.6521>
    f20c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f211:	nop    DWORD PTR [rax+0x0]
    f218:	mov    eax,DWORD PTR [rip+0x2581ce]        # 2673ec <done.6479>
    f21e:	test   eax,eax
    f220:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f226:	lea    rsi,[rip+0x613]        # f840 <hvm_cr_write_summary>
    f22d:	mov    edx,0x1
    f232:	mov    rdi,rbx
    f235:	call   bcf0 <__hvm_set_summary_handler>
    f23a:	test   eax,eax
    f23c:	je     f262 <hvm_cr_write_postprocess+0x732>
    f23e:	mov    rdi,QWORD PTR [rip+0x21d1fb]        # 22c440 <stderr@@GLIBC_2.2.5>
    f245:	lea    rcx,[rip+0x144b4]        # 23700 <__func__.6476>
    f24c:	lea    rdx,[rip+0x108dd]        # 1fb30 <_IO_stdin_used+0x2b70>
    f253:	mov    r8d,eax
    f256:	mov    esi,0x1
    f25b:	xor    eax,eax
    f25d:	call   4560 <__fprintf_chk@plt>
    f262:	mov    DWORD PTR [rip+0x258180],0x1        # 2673ec <done.6479>
    f26c:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f271:	nop    DWORD PTR [rax+0x0]
    f278:	mov    eax,DWORD PTR [rip+0x258172]        # 2673f0 <done.6474>
    f27e:	test   eax,eax
    f280:	jne    ebd8 <hvm_cr_write_postprocess+0xa8>
    f286:	lea    rsi,[rip+0x5b3]        # f840 <hvm_cr_write_summary>
    f28d:	xor    edx,edx
    f28f:	mov    rdi,rbx
    f292:	call   bcf0 <__hvm_set_summary_handler>
    f297:	test   eax,eax
    f299:	je     f2bf <hvm_cr_write_postprocess+0x78f>
    f29b:	mov    rdi,QWORD PTR [rip+0x21d19e]        # 22c440 <stderr@@GLIBC_2.2.5>
    f2a2:	lea    rcx,[rip+0x14457]        # 23700 <__func__.6476>
    f2a9:	lea    rdx,[rip+0x10880]        # 1fb30 <_IO_stdin_used+0x2b70>
    f2b0:	mov    r8d,eax
    f2b3:	mov    esi,0x1
    f2b8:	xor    eax,eax
    f2ba:	call   4560 <__fprintf_chk@plt>
    f2bf:	mov    DWORD PTR [rip+0x258127],0x1        # 2673f0 <done.6474>
    f2c9:	jmp    ebd8 <hvm_cr_write_postprocess+0xa8>
    f2ce:	xchg   ax,ax
    f2d0:	mov    rdi,QWORD PTR [rip+0x21d169]        # 22c440 <stderr@@GLIBC_2.2.5>
    f2d7:	lea    rdx,[rip+0xe109]        # 1d3e7 <_IO_stdin_used+0x427>
    f2de:	xor    eax,eax
    f2e0:	mov    esi,0x1
    f2e5:	call   4560 <__fprintf_chk@plt>
    f2ea:	cmp    DWORD PTR [rip+0x219def],0x2        # 2290e0 <opt+0x40>
    f2f1:	ja     ebd8 <hvm_cr_write_postprocess+0xa8>
    f2f7:	mov    edi,0x1
    f2fc:	call   4540 <exit@plt>
    f301:	nop    DWORD PTR [rax+rax*1+0x0]
    f306:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f310 <cr3_prealloc_unpin>:
    f310:	push   rbp
    f311:	push   rbx
    f312:	sub    rsp,0x8
    f316:	mov    rax,QWORD PTR [rdi+0x8]
    f31a:	mov    rbx,QWORD PTR [rax+0x9e0]
    f321:	test   rbx,rbx
    f324:	je     f33e <cr3_prealloc_unpin+0x2e>
    f326:	cmp    rsi,QWORD PTR [rbx+0x10]
    f32a:	jne    f336 <cr3_prealloc_unpin+0x26>
    f32c:	jmp    f348 <cr3_prealloc_unpin+0x38>
    f32e:	xchg   ax,ax
    f330:	cmp    QWORD PTR [rbx+0x10],rsi
    f334:	je     f348 <cr3_prealloc_unpin+0x38>
    f336:	mov    rbx,QWORD PTR [rbx]
    f339:	test   rbx,rbx
    f33c:	jne    f330 <cr3_prealloc_unpin+0x20>
    f33e:	add    rsp,0x8
    f342:	pop    rbx
    f343:	pop    rbp
    f344:	ret    
    f345:	nop    DWORD PTR [rax]
    f348:	mov    eax,DWORD PTR [rbx+0x318]
    f34e:	mov    rbp,rsi
    f351:	test   eax,eax
    f353:	jne    f398 <cr3_prealloc_unpin+0x88>
    f355:	mov    eax,DWORD PTR [rbx+0x31c]
    f35b:	test   BYTE PTR [rip+0x219d3f],0x40        # 2290a1 <opt+0x1>
    f362:	mov    DWORD PTR [rbx+0x318],0x1
    f36c:	lea    ecx,[rax+0x1]
    f36f:	mov    DWORD PTR [rbx+0x31c],ecx
    f375:	je     f33e <cr3_prealloc_unpin+0x2e>
    f377:	add    rsp,0x8
    f37b:	mov    rdx,rbp
    f37e:	lea    rsi,[rip+0xe075]        # 1d3fa <_IO_stdin_used+0x43a>
    f385:	pop    rbx
    f386:	pop    rbp
    f387:	mov    edi,0x1
    f38c:	xor    eax,eax
    f38e:	jmp    44f0 <__printf_chk@plt>
    f393:	nop    DWORD PTR [rax+rax*1+0x0]
    f398:	mov    rdi,QWORD PTR [rip+0x255eb9]        # 265258 <warn>
    f39f:	lea    rdx,[rip+0x10d5a]        # 20100 <_IO_stdin_used+0x3140>
    f3a6:	mov    rcx,rbp
    f3a9:	mov    esi,0x1
    f3ae:	xor    eax,eax
    f3b0:	call   4560 <__fprintf_chk@plt>
    f3b5:	jmp    f355 <cr3_prealloc_unpin+0x45>
    f3b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f3c0 <cr3_dump_list>:
    f3c0:	test   rdi,rdi
    f3c3:	je     f3ca <cr3_dump_list+0xa>
    f3c5:	jmp    b530 <cr3_dump_list.part.15>
    f3ca:	ret    
    f3cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f3d0 <hvm_cr3_write_summary>:
    f3d0:	push   r15
    f3d2:	push   r14
    f3d4:	push   r13
    f3d6:	push   r12
    f3d8:	mov    r12,rdi
    f3db:	push   rbp
    f3dc:	push   rbx
    f3dd:	xor    ebp,ebp
    f3df:	lea    rbx,[rdi+0x11588]
    f3e6:	sub    rsp,0x8
    f3ea:	jmp    f4be <hvm_cr3_write_summary+0xee>
    f3ef:	nop
    f3f0:	mov    esi,DWORD PTR [rbx+0x4]
    f3f3:	cmp    DWORD PTR [rbx+0x8],esi
    f3f6:	cmovle esi,DWORD PTR [rbx+0x8]
    f3fa:	test   esi,esi
    f3fc:	mov    r15d,esi
    f3ff:	jne    f6b0 <hvm_cr3_write_summary+0x2e0>
    f405:	xor    r15d,r15d
    f408:	xor    r13d,r13d
    f40b:	xor    r14d,r14d
    f40e:	lea    rsi,[rip+0xe002]        # 1d417 <_IO_stdin_used+0x457>
    f415:	xor    eax,eax
    f417:	mov    edx,ebp
    f419:	mov    edi,0x1
    f41e:	call   44f0 <__printf_chk@plt>
    f423:	mov    eax,DWORD PTR [rbx+0x4]
    f426:	xor    ecx,ecx
    f428:	mov    rsi,QWORD PTR [rbx+0x10]
    f42c:	test   eax,eax
    f42e:	je     f43e <hvm_cr3_write_summary+0x6e>
    f430:	movsxd rcx,eax
    f433:	xor    edx,edx
    f435:	mov    rax,rsi
    f438:	div    rcx
    f43b:	mov    rcx,rax
    f43e:	lea    rdx,[rsi+rsi*4]
    f442:	pxor   xmm1,xmm1
    f446:	pxor   xmm0,xmm0
    f44a:	lea    rdx,[rdx+rdx*4]
    f44e:	shl    rdx,0x2
    f452:	test   rsi,rsi
    f455:	cvtsi2sd xmm0,QWORD PTR [rip+0x21dd72]        # 22d1d0 <P+0x30>
    f45e:	cvtsi2sd xmm1,rdx
    f463:	divsd  xmm1,xmm0
    f467:	js     f688 <hvm_cr3_write_summary+0x2b8>
    f46d:	pxor   xmm0,xmm0
    f471:	cvtsi2sd xmm0,rsi
    f476:	pxor   xmm2,xmm2
    f47a:	sub    rsp,0x8
    f47e:	lea    rsi,[rip+0x10353]        # 1f7d8 <_IO_stdin_used+0x2818>
    f485:	push   r15
    f487:	mov    edx,DWORD PTR [rbx]
    f489:	mov    r8,r13
    f48c:	mov    edi,0x1
    f491:	mov    r9,r14
    f494:	mov    eax,0x2
    f499:	cvtsi2sd xmm2,QWORD PTR [rip+0x219c0e]        # 2290b0 <opt+0x10>
    f4a2:	divsd  xmm0,xmm2
    f4a6:	call   44f0 <__printf_chk@plt>
    f4ab:	pop    rdi
    f4ac:	pop    r8
    f4ae:	add    ebp,0x1
    f4b1:	add    rbx,0x38
    f4b5:	cmp    ebp,0x11
    f4b8:	je     f580 <hvm_cr3_write_summary+0x1b0>
    f4be:	mov    r10d,DWORD PTR [rbx]
    f4c1:	test   r10d,r10d
    f4c4:	je     f4ae <hvm_cr3_write_summary+0xde>
    f4c6:	mov    r9d,DWORD PTR [rip+0x219c0b]        # 2290d8 <opt+0x38>
    f4cd:	test   r9d,r9d
    f4d0:	jne    f3f0 <hvm_cr3_write_summary+0x20>
    f4d6:	lea    rsi,[rip+0xdf3a]        # 1d417 <_IO_stdin_used+0x457>
    f4dd:	xor    eax,eax
    f4df:	mov    edx,ebp
    f4e1:	mov    edi,0x1
    f4e6:	call   44f0 <__printf_chk@plt>
    f4eb:	mov    eax,DWORD PTR [rbx+0x4]
    f4ee:	xor    ecx,ecx
    f4f0:	mov    rsi,QWORD PTR [rbx+0x10]
    f4f4:	test   eax,eax
    f4f6:	je     f506 <hvm_cr3_write_summary+0x136>
    f4f8:	movsxd rcx,eax
    f4fb:	xor    edx,edx
    f4fd:	mov    rax,rsi
    f500:	div    rcx
    f503:	mov    rcx,rax
    f506:	lea    rdx,[rsi+rsi*4]
    f50a:	pxor   xmm1,xmm1
    f50e:	pxor   xmm0,xmm0
    f512:	lea    rdx,[rdx+rdx*4]
    f516:	shl    rdx,0x2
    f51a:	test   rsi,rsi
    f51d:	cvtsi2sd xmm0,QWORD PTR [rip+0x21dcaa]        # 22d1d0 <P+0x30>
    f526:	cvtsi2sd xmm1,rdx
    f52b:	divsd  xmm1,xmm0
    f52f:	js     f6f0 <hvm_cr3_write_summary+0x320>
    f535:	pxor   xmm0,xmm0
    f539:	cvtsi2sd xmm0,rsi
    f53e:	pxor   xmm2,xmm2
    f542:	mov    edx,DWORD PTR [rbx]
    f544:	lea    rsi,[rip+0x102c5]        # 1f810 <_IO_stdin_used+0x2850>
    f54b:	mov    edi,0x1
    f550:	mov    eax,0x2
    f555:	add    ebp,0x1
    f558:	add    rbx,0x38
    f55c:	cvtsi2sd xmm2,QWORD PTR [rip+0x219b4b]        # 2290b0 <opt+0x10>
    f565:	divsd  xmm0,xmm2
    f569:	call   44f0 <__printf_chk@plt>
    f56e:	cmp    ebp,0x11
    f571:	jne    f4be <hvm_cr3_write_summary+0xee>
    f577:	nop    WORD PTR [rax+rax*1+0x0]
    f580:	mov    esi,DWORD PTR [r12+0x11940]
    f588:	test   esi,esi
    f58a:	je     f673 <hvm_cr3_write_summary+0x2a3>
    f590:	mov    ecx,DWORD PTR [rip+0x219b42]        # 2290d8 <opt+0x38>
    f596:	test   ecx,ecx
    f598:	je     f710 <hvm_cr3_write_summary+0x340>
    f59e:	mov    esi,DWORD PTR [r12+0x11944]
    f5a6:	cmp    DWORD PTR [r12+0x11948],esi
    f5ae:	cmovle esi,DWORD PTR [r12+0x11948]
    f5b7:	test   esi,esi
    f5b9:	mov    ebp,esi
    f5bb:	jne    f7da <hvm_cr3_write_summary+0x40a>
    f5c1:	xor    ebp,ebp
    f5c3:	xor    ebx,ebx
    f5c5:	xor    r13d,r13d
    f5c8:	lea    rsi,[rip+0xde55]        # 1d424 <_IO_stdin_used+0x464>
    f5cf:	xor    eax,eax
    f5d1:	mov    edi,0x1
    f5d6:	call   44f0 <__printf_chk@plt>
    f5db:	mov    eax,DWORD PTR [r12+0x11944]
    f5e3:	xor    ecx,ecx
    f5e5:	mov    rsi,QWORD PTR [r12+0x11950]
    f5ed:	test   eax,eax
    f5ef:	je     f5ff <hvm_cr3_write_summary+0x22f>
    f5f1:	movsxd rcx,eax
    f5f4:	xor    edx,edx
    f5f6:	mov    rax,rsi
    f5f9:	div    rcx
    f5fc:	mov    rcx,rax
    f5ff:	lea    rdx,[rsi+rsi*4]
    f603:	pxor   xmm1,xmm1
    f607:	pxor   xmm0,xmm0
    f60b:	lea    rdx,[rdx+rdx*4]
    f60f:	shl    rdx,0x2
    f613:	test   rsi,rsi
    f616:	cvtsi2sd xmm0,QWORD PTR [rip+0x21dbb1]        # 22d1d0 <P+0x30>
    f61f:	cvtsi2sd xmm1,rdx
    f624:	divsd  xmm1,xmm0
    f628:	js     f7bc <hvm_cr3_write_summary+0x3ec>
    f62e:	pxor   xmm0,xmm0
    f632:	cvtsi2sd xmm0,rsi
    f637:	pxor   xmm2,xmm2
    f63b:	sub    rsp,0x8
    f63f:	mov    edx,DWORD PTR [r12+0x11940]
    f647:	push   rbp
    f648:	lea    rsi,[rip+0x10189]        # 1f7d8 <_IO_stdin_used+0x2818>
    f64f:	mov    r9,r13
    f652:	mov    r8,rbx
    f655:	mov    edi,0x1
    f65a:	mov    eax,0x2
    f65f:	cvtsi2sd xmm2,QWORD PTR [rip+0x219a48]        # 2290b0 <opt+0x10>
    f668:	divsd  xmm0,xmm2
    f66c:	call   44f0 <__printf_chk@plt>
    f671:	pop    rax
    f672:	pop    rdx
    f673:	add    rsp,0x8
    f677:	pop    rbx
    f678:	pop    rbp
    f679:	pop    r12
    f67b:	pop    r13
    f67d:	pop    r14
    f67f:	pop    r15
    f681:	ret    
    f682:	nop    WORD PTR [rax+rax*1+0x0]
    f688:	mov    rdx,rsi
    f68b:	pxor   xmm0,xmm0
    f68f:	shr    rdx,1
    f692:	and    esi,0x1
    f695:	or     rdx,rsi
    f698:	cvtsi2sd xmm0,rdx
    f69d:	addsd  xmm0,xmm0
    f6a1:	jmp    f476 <hvm_cr3_write_summary+0xa6>
    f6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f6b0:	mov    rdi,QWORD PTR [rbx+0x18]
    f6b4:	mov    edx,0x32
    f6b9:	call   4b30 <percentile.part.6>
    f6be:	mov    rdi,QWORD PTR [rbx+0x18]
    f6c2:	mov    esi,r15d
    f6c5:	mov    edx,0x5
    f6ca:	mov    r14,rax
    f6cd:	call   4b30 <percentile.part.6>
    f6d2:	mov    rdi,QWORD PTR [rbx+0x18]
    f6d6:	mov    esi,r15d
    f6d9:	mov    edx,0x5f
    f6de:	mov    r13,rax
    f6e1:	call   4b30 <percentile.part.6>
    f6e6:	mov    r15,rax
    f6e9:	jmp    f40e <hvm_cr3_write_summary+0x3e>
    f6ee:	xchg   ax,ax
    f6f0:	mov    rax,rsi
    f6f3:	pxor   xmm0,xmm0
    f6f7:	shr    rax,1
    f6fa:	and    esi,0x1
    f6fd:	or     rax,rsi
    f700:	cvtsi2sd xmm0,rax
    f705:	addsd  xmm0,xmm0
    f709:	jmp    f53e <hvm_cr3_write_summary+0x16e>
    f70e:	xchg   ax,ax
    f710:	lea    rsi,[rip+0xdd0d]        # 1d424 <_IO_stdin_used+0x464>
    f717:	xor    eax,eax
    f719:	mov    edi,0x1
    f71e:	call   44f0 <__printf_chk@plt>
    f723:	mov    eax,DWORD PTR [r12+0x11944]
    f72b:	xor    ecx,ecx
    f72d:	mov    rsi,QWORD PTR [r12+0x11950]
    f735:	test   eax,eax
    f737:	je     f747 <hvm_cr3_write_summary+0x377>
    f739:	movsxd rcx,eax
    f73c:	xor    edx,edx
    f73e:	mov    rax,rsi
    f741:	div    rcx
    f744:	mov    rcx,rax
    f747:	lea    rdx,[rsi+rsi*4]
    f74b:	pxor   xmm1,xmm1
    f74f:	pxor   xmm0,xmm0
    f753:	lea    rdx,[rdx+rdx*4]
    f757:	shl    rdx,0x2
    f75b:	test   rsi,rsi
    f75e:	cvtsi2sd xmm0,QWORD PTR [rip+0x21da69]        # 22d1d0 <P+0x30>
    f767:	cvtsi2sd xmm1,rdx
    f76c:	divsd  xmm1,xmm0
    f770:	js     f822 <hvm_cr3_write_summary+0x452>
    f776:	pxor   xmm0,xmm0
    f77a:	cvtsi2sd xmm0,rsi
    f77f:	pxor   xmm2,xmm2
    f783:	mov    edx,DWORD PTR [r12+0x11940]
    f78b:	lea    rsi,[rip+0x1007e]        # 1f810 <_IO_stdin_used+0x2850>
    f792:	mov    edi,0x1
    f797:	mov    eax,0x2
    f79c:	cvtsi2sd xmm2,QWORD PTR [rip+0x21990b]        # 2290b0 <opt+0x10>
    f7a5:	divsd  xmm0,xmm2
    f7a9:	add    rsp,0x8
    f7ad:	pop    rbx
    f7ae:	pop    rbp
    f7af:	pop    r12
    f7b1:	pop    r13
    f7b3:	pop    r14
    f7b5:	pop    r15
    f7b7:	jmp    44f0 <__printf_chk@plt>
    f7bc:	mov    rdx,rsi
    f7bf:	pxor   xmm0,xmm0
    f7c3:	shr    rdx,1
    f7c6:	and    esi,0x1
    f7c9:	or     rdx,rsi
    f7cc:	cvtsi2sd xmm0,rdx
    f7d1:	addsd  xmm0,xmm0
    f7d5:	jmp    f637 <hvm_cr3_write_summary+0x267>
    f7da:	mov    rdi,QWORD PTR [r12+0x11958]
    f7e2:	mov    edx,0x32
    f7e7:	call   4b30 <percentile.part.6>
    f7ec:	mov    rdi,QWORD PTR [r12+0x11958]
    f7f4:	mov    esi,ebp
    f7f6:	mov    edx,0x5
    f7fb:	mov    r13,rax
    f7fe:	call   4b30 <percentile.part.6>
    f803:	mov    rdi,QWORD PTR [r12+0x11958]
    f80b:	mov    esi,ebp
    f80d:	mov    edx,0x5f
    f812:	mov    rbx,rax
    f815:	call   4b30 <percentile.part.6>
    f81a:	mov    rbp,rax
    f81d:	jmp    f5c8 <hvm_cr3_write_summary+0x1f8>
    f822:	mov    rdx,rsi
    f825:	pxor   xmm0,xmm0
    f829:	shr    rdx,1
    f82c:	and    esi,0x1
    f82f:	or     rdx,rsi
    f832:	cvtsi2sd xmm0,rdx
    f837:	addsd  xmm0,xmm0
    f83b:	jmp    f77f <hvm_cr3_write_summary+0x3af>

000000000000f840 <hvm_cr_write_summary>:
    f840:	lea    rax,[rsi*8+0x0]
    f848:	push   r15
    f84a:	push   r14
    f84c:	push   r13
    f84e:	push   r12
    f850:	mov    r12,rdi
    f853:	sub    rax,rsi
    f856:	push   rbp
    f857:	push   rbx
    f858:	lea    rbp,[rdi+rax*8]
    f85c:	mov    rbx,rsi
    f85f:	sub    rsp,0x8
    f863:	mov    esi,DWORD PTR [rbp+0x11390]
    f869:	test   esi,esi
    f86b:	je     f973 <hvm_cr_write_summary+0x133>
    f871:	mov    ecx,DWORD PTR [rip+0x219861]        # 2290d8 <opt+0x38>
    f877:	test   ecx,ecx
    f879:	je     f9a8 <hvm_cr_write_summary+0x168>
    f87f:	mov    esi,DWORD PTR [rbp+0x11394]
    f885:	cmp    DWORD PTR [rbp+0x11398],esi
    f88b:	cmovle esi,DWORD PTR [rbp+0x11398]
    f892:	test   esi,esi
    f894:	mov    r15d,esi
    f897:	jne    fab0 <hvm_cr_write_summary+0x270>
    f89d:	xor    ebp,ebp
    f89f:	xor    r13d,r13d
    f8a2:	xor    r14d,r14d
    f8a5:	lea    rsi,[rip+0xdb85]        # 1d431 <_IO_stdin_used+0x471>
    f8ac:	mov    rdx,rbx
    f8af:	xor    eax,eax
    f8b1:	mov    edi,0x1
    f8b6:	call   44f0 <__printf_chk@plt>
    f8bb:	lea    rax,[rbx*8+0x0]
    f8c3:	xor    ecx,ecx
    f8c5:	sub    rax,rbx
    f8c8:	lea    rdx,[r12+rax*8]
    f8cc:	mov    eax,DWORD PTR [rdx+0x11394]
    f8d2:	mov    rsi,QWORD PTR [rdx+0x113a0]
    f8d9:	test   eax,eax
    f8db:	jne    f990 <hvm_cr_write_summary+0x150>
    f8e1:	lea    rax,[rbx*8+0x0]
    f8e9:	pxor   xmm1,xmm1
    f8ed:	pxor   xmm0,xmm0
    f8f1:	sub    rax,rbx
    f8f4:	mov    rax,QWORD PTR [r12+rax*8+0x113a0]
    f8fc:	cvtsi2sd xmm0,QWORD PTR [rip+0x21d8cb]        # 22d1d0 <P+0x30>
    f905:	lea    rax,[rax+rax*4]
    f909:	lea    rdx,[rax+rax*4]
    f90d:	shl    rdx,0x2
    f911:	test   rsi,rsi
    f914:	cvtsi2sd xmm1,rdx
    f919:	divsd  xmm1,xmm0
    f91d:	js     fa88 <hvm_cr_write_summary+0x248>
    f923:	pxor   xmm0,xmm0
    f927:	cvtsi2sd xmm0,rsi
    f92c:	pxor   xmm2,xmm2
    f930:	lea    rdx,[rbx*8+0x0]
    f938:	sub    rsp,0x8
    f93c:	push   rbp
    f93d:	lea    rsi,[rip+0xfe94]        # 1f7d8 <_IO_stdin_used+0x2818>
    f944:	mov    r9,r14
    f947:	sub    rdx,rbx
    f94a:	mov    r8,r13
    f94d:	mov    edi,0x1
    f952:	cvtsi2sd xmm2,QWORD PTR [rip+0x219755]        # 2290b0 <opt+0x10>
    f95b:	divsd  xmm0,xmm2
    f95f:	mov    edx,DWORD PTR [r12+rdx*8+0x11390]
    f967:	mov    eax,0x2
    f96c:	call   44f0 <__printf_chk@plt>
    f971:	pop    rax
    f972:	pop    rdx
    f973:	cmp    rbx,0x3
    f977:	je     fa6e <hvm_cr_write_summary+0x22e>
    f97d:	add    rsp,0x8
    f981:	pop    rbx
    f982:	pop    rbp
    f983:	pop    r12
    f985:	pop    r13
    f987:	pop    r14
    f989:	pop    r15
    f98b:	ret    
    f98c:	nop    DWORD PTR [rax+0x0]
    f990:	movsxd rcx,eax
    f993:	xor    edx,edx
    f995:	mov    rax,rsi
    f998:	div    rcx
    f99b:	mov    rcx,rax
    f99e:	jmp    f8e1 <hvm_cr_write_summary+0xa1>
    f9a3:	nop    DWORD PTR [rax+rax*1+0x0]
    f9a8:	lea    rsi,[rip+0xda82]        # 1d431 <_IO_stdin_used+0x471>
    f9af:	xor    eax,eax
    f9b1:	mov    rdx,rbx
    f9b4:	mov    edi,0x1
    f9b9:	call   44f0 <__printf_chk@plt>
    f9be:	mov    eax,DWORD PTR [rbp+0x11394]
    f9c4:	xor    ecx,ecx
    f9c6:	mov    rsi,QWORD PTR [rbp+0x113a0]
    f9cd:	test   eax,eax
    f9cf:	je     f9df <hvm_cr_write_summary+0x19f>
    f9d1:	movsxd rcx,eax
    f9d4:	xor    edx,edx
    f9d6:	mov    rax,rsi
    f9d9:	div    rcx
    f9dc:	mov    rcx,rax
    f9df:	lea    rdx,[rbx*8+0x0]
    f9e7:	pxor   xmm1,xmm1
    f9eb:	pxor   xmm0,xmm0
    f9ef:	sub    rdx,rbx
    f9f2:	mov    rdx,QWORD PTR [r12+rdx*8+0x113a0]
    f9fa:	cvtsi2sd xmm0,QWORD PTR [rip+0x21d7cd]        # 22d1d0 <P+0x30>
    fa03:	lea    rdx,[rdx+rdx*4]
    fa07:	lea    rdx,[rdx+rdx*4]
    fa0b:	shl    rdx,0x2
    fa0f:	test   rsi,rsi
    fa12:	cvtsi2sd xmm1,rdx
    fa17:	divsd  xmm1,xmm0
    fa1b:	js     fb00 <hvm_cr_write_summary+0x2c0>
    fa21:	pxor   xmm0,xmm0
    fa25:	cvtsi2sd xmm0,rsi
    fa2a:	pxor   xmm2,xmm2
    fa2e:	lea    rdx,[rbx*8+0x0]
    fa36:	lea    rsi,[rip+0xfdd3]        # 1f810 <_IO_stdin_used+0x2850>
    fa3d:	mov    edi,0x1
    fa42:	mov    eax,0x2
    fa47:	sub    rdx,rbx
    fa4a:	cvtsi2sd xmm2,QWORD PTR [rip+0x21965d]        # 2290b0 <opt+0x10>
    fa53:	divsd  xmm0,xmm2
    fa57:	mov    edx,DWORD PTR [r12+rdx*8+0x11390]
    fa5f:	call   44f0 <__printf_chk@plt>
    fa64:	cmp    rbx,0x3
    fa68:	jne    f97d <hvm_cr_write_summary+0x13d>
    fa6e:	add    rsp,0x8
    fa72:	mov    rdi,r12
    fa75:	pop    rbx
    fa76:	pop    rbp
    fa77:	pop    r12
    fa79:	pop    r13
    fa7b:	pop    r14
    fa7d:	pop    r15
    fa7f:	jmp    f3d0 <hvm_cr3_write_summary>
    fa84:	nop    DWORD PTR [rax+0x0]
    fa88:	mov    rax,rsi
    fa8b:	pxor   xmm0,xmm0
    fa8f:	shr    rax,1
    fa92:	and    esi,0x1
    fa95:	or     rax,rsi
    fa98:	cvtsi2sd xmm0,rax
    fa9d:	addsd  xmm0,xmm0
    faa1:	jmp    f92c <hvm_cr_write_summary+0xec>
    faa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    fab0:	mov    rdi,QWORD PTR [rbp+0x113a8]
    fab7:	mov    edx,0x32
    fabc:	call   4b30 <percentile.part.6>
    fac1:	mov    rdi,QWORD PTR [rbp+0x113a8]
    fac8:	mov    edx,0x5
    facd:	mov    esi,r15d
    fad0:	mov    r14,rax
    fad3:	call   4b30 <percentile.part.6>
    fad8:	mov    rdi,QWORD PTR [rbp+0x113a8]
    fadf:	mov    edx,0x5f
    fae4:	mov    esi,r15d
    fae7:	mov    r13,rax
    faea:	call   4b30 <percentile.part.6>
    faef:	mov    rbp,rax
    faf2:	jmp    f8a5 <hvm_cr_write_summary+0x65>
    faf7:	nop    WORD PTR [rax+rax*1+0x0]
    fb00:	mov    rax,rsi
    fb03:	pxor   xmm0,xmm0
    fb07:	shr    rax,1
    fb0a:	and    esi,0x1
    fb0d:	or     rax,rsi
    fb10:	cvtsi2sd xmm0,rax
    fb15:	addsd  xmm0,xmm0
    fb19:	jmp    fa2a <hvm_cr_write_summary+0x1ea>
    fb1e:	xchg   ax,ax

000000000000fb20 <hvm_cr_write_process>:
    fb20:	push   r13
    fb22:	push   r12
    fb24:	push   rbp
    fb25:	push   rbx
    fb26:	mov    rbp,rdi
    fb29:	mov    rbx,rsi
    fb2c:	sub    rsp,0x8
    fb30:	mov    rax,QWORD PTR [rsi+0x28410]
    fb37:	test   BYTE PTR [rdi+0x11],0x1
    fb3b:	mov    r12d,DWORD PTR [rax]
    fb3e:	mov    DWORD PTR [rsi+0x28348],r12d
    fb45:	je     fc10 <hvm_cr_write_process+0xf0>
    fb4b:	mov    r13,QWORD PTR [rax+0x4]
    fb4f:	mov    QWORD PTR [rsi+0x28350],r13
    fb56:	mov    rax,QWORD PTR [rbx+0x283d8]
    fb5d:	lea    rdx,[rip+0xffffffffffffcfcc]        # cb30 <hvm_generic_postprocess>
    fb64:	cmp    rax,rdx
    fb67:	je     fba8 <hvm_cr_write_process+0x88>
    fb69:	test   rax,rax
    fb6c:	je     fba8 <hvm_cr_write_process+0x88>
    fb6e:	mov    rdi,QWORD PTR [rip+0x2556e3]        # 265258 <warn>
    fb75:	lea    rcx,[rip+0x13b64]        # 236e0 <__func__.6540>
    fb7c:	lea    rdx,[rip+0x105ad]        # 20130 <_IO_stdin_used+0x3170>
    fb83:	xor    eax,eax
    fb85:	mov    esi,0x1
    fb8a:	call   4560 <__fprintf_chk@plt>
    fb8f:	test   BYTE PTR [rip+0x21950b],0x40        # 2290a1 <opt+0x1>
    fb96:	jne    fbbf <hvm_cr_write_process+0x9f>
    fb98:	add    rsp,0x8
    fb9c:	pop    rbx
    fb9d:	pop    rbp
    fb9e:	pop    r12
    fba0:	pop    r13
    fba2:	ret    
    fba3:	nop    DWORD PTR [rax+rax*1+0x0]
    fba8:	test   BYTE PTR [rip+0x2194f2],0x40        # 2290a1 <opt+0x1>
    fbaf:	lea    rax,[rip+0xffffffffffffef7a]        # eb30 <hvm_cr_write_postprocess>
    fbb6:	mov    QWORD PTR [rbx+0x283d8],rax
    fbbd:	je     fb98 <hvm_cr_write_process+0x78>
    fbbf:	cmp    r12d,0x3
    fbc3:	jne    fc20 <hvm_cr_write_process+0x100>
    fbc5:	mov    rax,QWORD PTR [rbx+0x10]
    fbc9:	mov    r8,QWORD PTR [rax+0x60]
    fbcd:	test   r8,r8
    fbd0:	je     fc20 <hvm_cr_write_process+0x100>
    fbd2:	lea    rax,[rip+0xd862]        # 1d43b <_IO_stdin_used+0x47b>
    fbd9:	lea    r9,[rip+0xe594]        # 1e174 <_IO_stdin_used+0x11b4>
    fbe0:	cmp    r8,r13
    fbe3:	lea    rdx,[rbp+0x28]
    fbe7:	mov    rcx,r13
    fbea:	lea    rsi,[rip+0x1056f]        # 20160 <_IO_stdin_used+0x31a0>
    fbf1:	cmove  r9,rax
    fbf5:	add    rsp,0x8
    fbf9:	mov    edi,0x1
    fbfe:	pop    rbx
    fbff:	pop    rbp
    fc00:	pop    r12
    fc02:	pop    r13
    fc04:	xor    eax,eax
    fc06:	jmp    44f0 <__printf_chk@plt>
    fc0b:	nop    DWORD PTR [rax+rax*1+0x0]
    fc10:	mov    r13d,DWORD PTR [rax+0x4]
    fc14:	mov    QWORD PTR [rsi+0x28350],r13
    fc1b:	jmp    fb56 <hvm_cr_write_process+0x36>
    fc20:	add    rsp,0x8
    fc24:	lea    rdx,[rbp+0x28]
    fc28:	mov    r8,r13
    fc2b:	pop    rbx
    fc2c:	mov    ecx,r12d
    fc2f:	lea    rsi,[rip+0xd80b]        # 1d441 <_IO_stdin_used+0x481>
    fc36:	mov    edi,0x1
    fc3b:	pop    rbp
    fc3c:	pop    r12
    fc3e:	pop    r13
    fc40:	xor    eax,eax
    fc42:	jmp    44f0 <__printf_chk@plt>
    fc47:	nop    WORD PTR [rax+rax*1+0x0]

000000000000fc50 <hvm_vmcall_process>:
    fc50:	push   rbp
    fc51:	push   rbx
    fc52:	mov    rbx,rsi
    fc55:	sub    rsp,0x8
    fc59:	test   BYTE PTR [rip+0x219441],0x40        # 2290a1 <opt+0x1>
    fc60:	mov    rbp,QWORD PTR [rsi+0x28410]
    fc67:	mov    ecx,DWORD PTR [rbp+0x0]
    fc6a:	je     fc9c <hvm_vmcall_process+0x4c>
    fc6c:	cmp    ecx,0x25
    fc6f:	lea    rdx,[rdi+0x28]
    fc73:	ja     fd00 <hvm_vmcall_process+0xb0>
    fc79:	lea    rax,[rip+0x219a60]        # 2296e0 <hypercall_name>
    fc80:	mov    esi,ecx
    fc82:	mov    edi,0x1
    fc87:	mov    r8,QWORD PTR [rax+rsi*8]
    fc8b:	lea    rsi,[rip+0xd7cb]        # 1d45d <_IO_stdin_used+0x49d>
    fc92:	xor    eax,eax
    fc94:	call   44f0 <__printf_chk@plt>
    fc99:	mov    ecx,DWORD PTR [rbp+0x0]
    fc9c:	mov    rax,QWORD PTR [rbx+0x283d8]
    fca3:	mov    DWORD PTR [rbx+0x28348],ecx
    fca9:	test   rax,rax
    fcac:	je     fce8 <hvm_vmcall_process+0x98>
    fcae:	lea    rdx,[rip+0xffffffffffffce7b]        # cb30 <hvm_generic_postprocess>
    fcb5:	cmp    rax,rdx
    fcb8:	je     fce8 <hvm_vmcall_process+0x98>
    fcba:	mov    rdi,QWORD PTR [rip+0x255597]        # 265258 <warn>
    fcc1:	add    rsp,0x8
    fcc5:	lea    rcx,[rip+0x13954]        # 23620 <__func__.6609>
    fccc:	pop    rbx
    fccd:	pop    rbp
    fcce:	lea    rdx,[rip+0x10063]        # 1fd38 <_IO_stdin_used+0x2d78>
    fcd5:	mov    esi,0x1
    fcda:	xor    eax,eax
    fcdc:	jmp    4560 <__fprintf_chk@plt>
    fce1:	nop    DWORD PTR [rax+0x0]
    fce8:	lea    rax,[rip+0xffffffffffffcac1]        # c7b0 <hvm_vmcall_postprocess>
    fcef:	mov    QWORD PTR [rbx+0x283d8],rax
    fcf6:	add    rsp,0x8
    fcfa:	pop    rbx
    fcfb:	pop    rbp
    fcfc:	ret    
    fcfd:	nop    DWORD PTR [rax]
    fd00:	lea    rsi,[rip+0xd76b]        # 1d472 <_IO_stdin_used+0x4b2>
    fd07:	mov    edi,0x1
    fd0c:	xor    eax,eax
    fd0e:	call   44f0 <__printf_chk@plt>
    fd13:	mov    ecx,DWORD PTR [rbp+0x0]
    fd16:	jmp    fc9c <hvm_vmcall_process+0x4c>
    fd18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fd20 <hvm_intr_process>:
    fd20:	push   r12
    fd22:	push   rbp
    fd23:	mov    r12,rdi
    fd26:	push   rbx
    fd27:	mov    rax,QWORD PTR [rsi+0x28410]
    fd2e:	mov    rbp,rsi
    fd31:	test   BYTE PTR [rip+0x21936b],0x10        # 2290a3 <opt+0x3>
    fd38:	mov    rcx,QWORD PTR [rsi+0x283f8]
    fd3f:	mov    ebx,DWORD PTR [rax]
    fd41:	mov    eax,0x0
    fd46:	mov    r8,rcx
    fd49:	cmovne rbx,rax
    fd4d:	shr    r8,0x30
    fd51:	test   r8,r8
    fd54:	je     fd63 <hvm_intr_process+0x43>
    fd56:	cmp    r8,0xffff
    fd5d:	jne    fe30 <hvm_intr_process+0x110>
    fd63:	test   BYTE PTR [rip+0x219337],0x40        # 2290a1 <opt+0x1>
    fd6a:	mov    DWORD PTR [rbp+0x28348],ebx
    fd70:	je     fdb0 <hvm_intr_process+0x90>
    fd72:	cmp    ebx,0xff
    fd78:	lea    rdx,[r12+0x28]
    fd7d:	ja     fe70 <hvm_intr_process+0x150>
    fd83:	lea    rcx,[rip+0x219cb6]        # 229a40 <hvm_extint_vector_name>
    fd8a:	mov    eax,ebx
    fd8c:	mov    rcx,QWORD PTR [rcx+rax*8]
    fd90:	test   rcx,rcx
    fd93:	je     fe70 <hvm_intr_process+0x150>
    fd99:	lea    rsi,[rip+0xd6e2]        # 1d482 <_IO_stdin_used+0x4c2>
    fda0:	mov    r8d,ebx
    fda3:	mov    edi,0x1
    fda8:	xor    eax,eax
    fdaa:	call   44f0 <__printf_chk@plt>
    fdaf:	nop
    fdb0:	test   BYTE PTR [rip+0x2192e9],0x1        # 2290a0 <opt>
    fdb7:	je     fdc5 <hvm_intr_process+0xa5>
    fdb9:	cmp    DWORD PTR [rip+0x2192f9],ebx        # 2290b8 <opt+0x18>
    fdbf:	je     fe90 <hvm_intr_process+0x170>
    fdc5:	test   BYTE PTR [rip+0x2192d5],0x10        # 2290a1 <opt+0x1>
    fdcc:	je     fdda <hvm_intr_process+0xba>
    fdce:	cmp    DWORD PTR [rip+0x2192f0],ebx        # 2290c4 <opt+0x24>
    fdd4:	je     ff28 <hvm_intr_process+0x208>
    fdda:	test   BYTE PTR [rip+0x2192c2],0x1        # 2290a3 <opt+0x3>
    fde1:	je     fdef <hvm_intr_process+0xcf>
    fde3:	cmp    DWORD PTR [rip+0x2192e7],ebx        # 2290d0 <opt+0x30>
    fde9:	je     ff58 <hvm_intr_process+0x238>
    fdef:	mov    edx,DWORD PTR [rip+0x2192af]        # 2290a4 <opt+0x4>
    fdf5:	mov    QWORD PTR [rbp+0x283d8],0x0
    fe00:	test   edx,edx
    fe02:	je     fe2a <hvm_intr_process+0x10a>
    fe04:	test   BYTE PTR [rip+0x219298],0x20        # 2290a3 <opt+0x3>
    fe0b:	je     fe1b <hvm_intr_process+0xfb>
    fe0d:	mov    eax,DWORD PTR [rip+0x257591]        # 2673a4 <done.6636>
    fe13:	test   eax,eax
    fe15:	je     ff90 <hvm_intr_process+0x270>
    fe1b:	cmp    ebx,0xff
    fe21:	jbe    fe60 <hvm_intr_process+0x140>
    fe23:	add    DWORD PTR [rbp+0x10468],0x1
    fe2a:	pop    rbx
    fe2b:	pop    rbp
    fe2c:	pop    r12
    fe2e:	ret    
    fe2f:	nop
    fe30:	mov    rdi,QWORD PTR [rip+0x21c609]        # 22c440 <stderr@@GLIBC_2.2.5>
    fe37:	lea    rdx,[rip+0x1034a]        # 20188 <_IO_stdin_used+0x31c8>
    fe3e:	mov    esi,0x1
    fe43:	call   4560 <__fprintf_chk@plt>
    fe48:	cmp    DWORD PTR [rip+0x219291],0x3        # 2290e0 <opt+0x40>
    fe4f:	ja     fd63 <hvm_intr_process+0x43>
    fe55:	mov    edi,0x1
    fe5a:	call   4540 <exit@plt>
    fe5f:	nop
    fe60:	add    DWORD PTR [rbp+rbx*4+0x10068],0x1
    fe68:	pop    rbx
    fe69:	pop    rbp
    fe6a:	pop    r12
    fe6c:	ret    
    fe6d:	nop    DWORD PTR [rax]
    fe70:	lea    rsi,[rip+0xd620]        # 1d497 <_IO_stdin_used+0x4d7>
    fe77:	mov    ecx,ebx
    fe79:	mov    edi,0x1
    fe7e:	xor    eax,eax
    fe80:	call   44f0 <__printf_chk@plt>
    fe85:	jmp    fdb0 <hvm_intr_process+0x90>
    fe8a:	nop    WORD PTR [rax+rax*1+0x0]
    fe90:	mov    rax,QWORD PTR [rbp+0x283e0]
    fe97:	mov    rdx,QWORD PTR [rip+0x21d322]        # 22d1c0 <P+0x20>
    fe9e:	movabs rcx,0xffffffffffff
    fea8:	and    rcx,QWORD PTR [rbp+0x283f8]
    feaf:	cmp    rax,rdx
    feb2:	jbe    ffb8 <hvm_intr_process+0x298>
    feb8:	sub    rax,rdx
    febb:	xor    edx,edx
    febd:	movabs rsi,0x44b82fa09b5a53
    fec7:	mov    r9,rax
    feca:	shl    r9,0xa
    fece:	mov    rax,r9
    fed1:	div    QWORD PTR [rip+0x2191d0]        # 2290a8 <opt+0x8>
    fed8:	mov    rdx,rax
    fedb:	mov    r9,rax
    fede:	shr    rdx,0x9
    fee2:	mov    rax,rdx
    fee5:	mul    rsi
    fee8:	shr    rdx,0xb
    feec:	mov    r8d,edx
    feef:	imul   edx,edx,0x3b9aca00
    fef5:	sub    r9d,edx
    fef8:	mov    rax,QWORD PTR [rbp+0x10]
    fefc:	sub    rsp,0x8
    ff00:	lea    rsi,[rip+0xd5a1]        # 1d4a8 <_IO_stdin_used+0x4e8>
    ff07:	mov    edi,0x1
    ff0c:	mov    rdx,QWORD PTR [rax+0x8]
    ff10:	mov    edx,DWORD PTR [rdx+0x8]
    ff13:	push   rcx
    ff14:	mov    ecx,DWORD PTR [rax]
    ff16:	xor    eax,eax
    ff18:	call   44f0 <__printf_chk@plt>
    ff1d:	pop    rcx
    ff1e:	pop    rsi
    ff1f:	jmp    fdc5 <hvm_intr_process+0xa5>
    ff24:	nop    DWORD PTR [rax+0x0]
    ff28:	movabs rax,0xffffffffffff
    ff32:	and    rax,QWORD PTR [rbp+0x283f8]
    ff39:	xor    edx,edx
    ff3b:	div    QWORD PTR [rip+0x219186]        # 2290c8 <opt+0x28>
    ff42:	mov    rdx,QWORD PTR [rbp+0x10470]
    ff49:	mov    eax,eax
    ff4b:	add    DWORD PTR [rdx+rax*4],0x1
    ff4f:	jmp    fdda <hvm_intr_process+0xba>
    ff54:	nop    DWORD PTR [rax+0x0]
    ff58:	mov    rax,QWORD PTR [rbp+0x10]
    ff5c:	movabs rsi,0xffffffffffff
    ff66:	and    rsi,QWORD PTR [rbp+0x283f8]
    ff6d:	xor    r8d,r8d
    ff70:	xor    ecx,ecx
    ff72:	xor    edx,edx
    ff74:	mov    rdi,QWORD PTR [rax+0x8]
    ff78:	add    rdi,0x9f0
    ff7f:	call   91f0 <update_eip>
    ff84:	jmp    fdef <hvm_intr_process+0xcf>
    ff89:	nop    DWORD PTR [rax+0x0]
    ff90:	lea    rsi,[rip+0xffffffffffff49a9]        # 4940 <hvm_intr_summary>
    ff97:	xor    edx,edx
    ff99:	mov    rdi,rbp
    ff9c:	call   bcf0 <__hvm_set_summary_handler>
    ffa1:	test   eax,eax
    ffa3:	jne    ffc8 <hvm_intr_process+0x2a8>
    ffa5:	mov    DWORD PTR [rip+0x2573f5],0x1        # 2673a4 <done.6636>
    ffaf:	jmp    fe1b <hvm_intr_process+0xfb>
    ffb4:	nop    DWORD PTR [rax+0x0]
    ffb8:	xor    r9d,r9d
    ffbb:	xor    r8d,r8d
    ffbe:	jmp    fef8 <hvm_intr_process+0x1d8>
    ffc3:	nop    DWORD PTR [rax+rax*1+0x0]
    ffc8:	mov    rdi,QWORD PTR [rip+0x21c471]        # 22c440 <stderr@@GLIBC_2.2.5>
    ffcf:	lea    rcx,[rip+0x1362a]        # 23600 <__func__.6638>
    ffd6:	lea    rdx,[rip+0xfb53]        # 1fb30 <_IO_stdin_used+0x2b70>
    ffdd:	mov    r8d,eax
    ffe0:	mov    esi,0x1
    ffe5:	xor    eax,eax
    ffe7:	call   4560 <__fprintf_chk@plt>
    ffec:	jmp    ffa5 <hvm_intr_process+0x285>
    ffee:	xchg   ax,ax

000000000000fff0 <hvm_intr_window_process>:
    fff0:	push   rbx
    fff1:	sub    rsp,0x40
    fff5:	mov    rbx,QWORD PTR [rsi+0x28410]
    fffc:	mov    rax,QWORD PTR fs:0x28
   10005:	mov    QWORD PTR [rsp+0x38],rax
   1000a:	xor    eax,eax
   1000c:	lea    rax,[rip+0xd4aa]        # 1d4bd <_IO_stdin_used+0x4fd>
   10013:	test   BYTE PTR [rip+0x219087],0x40        # 2290a1 <opt+0x1>
   1001a:	mov    QWORD PTR [rsp],rax
   1001e:	lea    rax,[rip+0xeb6a]        # 1eb8f <_IO_stdin_used+0x1bcf>
   10025:	mov    QWORD PTR [rsp+0x8],rax
   1002a:	lea    rax,[rip+0xeb5c]        # 1eb8d <_IO_stdin_used+0x1bcd>
   10031:	mov    QWORD PTR [rsp+0x10],rax
   10036:	lea    rax,[rip+0xe4cc]        # 1e509 <_IO_stdin_used+0x1549>
   1003d:	mov    QWORD PTR [rsp+0x18],rax
   10042:	lea    rax,[rip+0xd479]        # 1d4c2 <_IO_stdin_used+0x502>
   10049:	mov    QWORD PTR [rsp+0x20],rax
   1004e:	lea    rax,[rip+0xd471]        # 1d4c6 <_IO_stdin_used+0x506>
   10055:	mov    QWORD PTR [rsp+0x28],rax
   1005a:	je     100e8 <hvm_intr_window_process+0xf8>
   10060:	mov    r8d,DWORD PTR [rbx+0x4]
   10064:	lea    r9,[rip+0xd67e]        # 1d6e9 <_IO_stdin_used+0x729>
   1006b:	cmp    r8d,0x5
   1006f:	ja     10078 <hvm_intr_window_process+0x88>
   10071:	mov    eax,r8d
   10074:	mov    r9,QWORD PTR [rsp+rax*8]
   10078:	mov    ecx,DWORD PTR [rbx]
   1007a:	lea    rdx,[rdi+0x28]
   1007e:	lea    rsi,[rip+0x1012b]        # 201b0 <_IO_stdin_used+0x31f0>
   10085:	xor    eax,eax
   10087:	mov    edi,0x1
   1008c:	call   44f0 <__printf_chk@plt>
   10091:	mov    edx,DWORD PTR [rbx+0x8]
   10094:	test   edx,edx
   10096:	jle    100c0 <hvm_intr_window_process+0xd0>
   10098:	mov    rax,QWORD PTR [rsp+0x38]
   1009d:	xor    rax,QWORD PTR fs:0x28
   100a6:	jne    100fe <hvm_intr_window_process+0x10e>
   100a8:	add    rsp,0x40
   100ac:	lea    rsi,[rip+0xd41a]        # 1d4cd <_IO_stdin_used+0x50d>
   100b3:	mov    edi,0x1
   100b8:	pop    rbx
   100b9:	xor    eax,eax
   100bb:	jmp    44f0 <__printf_chk@plt>
   100c0:	mov    rax,QWORD PTR [rsp+0x38]
   100c5:	xor    rax,QWORD PTR fs:0x28
   100ce:	jne    100fe <hvm_intr_window_process+0x10e>
   100d0:	add    rsp,0x40
   100d4:	lea    rdi,[rip+0xd3fb]        # 1d4d6 <_IO_stdin_used+0x516>
   100db:	pop    rbx
   100dc:	jmp    4380 <puts@plt>
   100e1:	nop    DWORD PTR [rax+0x0]
   100e8:	mov    rax,QWORD PTR [rsp+0x38]
   100ed:	xor    rax,QWORD PTR fs:0x28
   100f6:	jne    100fe <hvm_intr_window_process+0x10e>
   100f8:	add    rsp,0x40
   100fc:	pop    rbx
   100fd:	ret    
   100fe:	call   43c0 <__stack_chk_fail@plt>
   10103:	nop    DWORD PTR [rax]
   10106:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010110 <hvm_rdtsc_process>:
   10110:	movzx  eax,BYTE PTR [rip+0x218f8a]        # 2290a1 <opt+0x1>
   10117:	push   r12
   10119:	mov    r12,rdi
   1011c:	push   rbp
   1011d:	push   rbx
   1011e:	mov    rbx,rsi
   10121:	mov    rbp,QWORD PTR [rsi+0x28410]
   10128:	test   al,0x40
   1012a:	mov    rcx,QWORD PTR [rbp+0x0]
   1012e:	je     1016e <hvm_rdtsc_process+0x5e>
   10130:	cmp    QWORD PTR [rsi+0x28428],rcx
   10137:	lea    rax,[rip+0xd39f]        # 1d4dd <_IO_stdin_used+0x51d>
   1013e:	lea    r9,[rip+0xd940]        # 1da85 <_IO_stdin_used+0xac5>
   10145:	lea    rdx,[rdi+0x28]
   10149:	lea    rsi,[rip+0xd397]        # 1d4e7 <_IO_stdin_used+0x527>
   10150:	mov    r8,rcx
   10153:	mov    edi,0x1
   10158:	cmova  r9,rax
   1015c:	xor    eax,eax
   1015e:	call   44f0 <__printf_chk@plt>
   10163:	movzx  eax,BYTE PTR [rip+0x218f37]        # 2290a1 <opt+0x1>
   1016a:	mov    rcx,QWORD PTR [rbp+0x0]
   1016e:	test   al,0x4
   10170:	je     101b4 <hvm_rdtsc_process+0xa4>
   10172:	mov    rax,QWORD PTR [r12+0x8]
   10177:	mov    rdx,QWORD PTR [rip+0x21d042]        # 22d1c0 <P+0x20>
   1017e:	cmp    rax,rdx
   10181:	ja     101c0 <hvm_rdtsc_process+0xb0>
   10183:	xor    r9d,r9d
   10186:	xor    r8d,r8d
   10189:	mov    rax,QWORD PTR [rbx+0x10]
   1018d:	sub    rsp,0x8
   10191:	lea    rsi,[rip+0xd367]        # 1d4ff <_IO_stdin_used+0x53f>
   10198:	mov    edi,0x1
   1019d:	mov    rdx,QWORD PTR [rax+0x8]
   101a1:	mov    edx,DWORD PTR [rdx+0x8]
   101a4:	push   rcx
   101a5:	mov    ecx,DWORD PTR [rax]
   101a7:	xor    eax,eax
   101a9:	call   44f0 <__printf_chk@plt>
   101ae:	pop    rax
   101af:	pop    rdx
   101b0:	mov    rcx,QWORD PTR [rbp+0x0]
   101b4:	mov    QWORD PTR [rbx+0x28428],rcx
   101bb:	pop    rbx
   101bc:	pop    rbp
   101bd:	pop    r12
   101bf:	ret    
   101c0:	sub    rax,rdx
   101c3:	xor    edx,edx
   101c5:	movabs rsi,0x44b82fa09b5a53
   101cf:	mov    r9,rax
   101d2:	shl    r9,0xa
   101d6:	mov    rax,r9
   101d9:	div    QWORD PTR [rip+0x218ec8]        # 2290a8 <opt+0x8>
   101e0:	mov    rdx,rax
   101e3:	mov    r9,rax
   101e6:	shr    rdx,0x9
   101ea:	mov    rax,rdx
   101ed:	mul    rsi
   101f0:	shr    rdx,0xb
   101f4:	mov    r8d,edx
   101f7:	imul   edx,edx,0x3b9aca00
   101fd:	sub    r9d,edx
   10200:	jmp    10189 <hvm_rdtsc_process+0x79>
   10202:	nop    DWORD PTR [rax+0x0]
   10206:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010210 <hvm_generic_postprocess_init>:
   10210:	push   rbp
   10211:	push   rbx
   10212:	lea    rax,[rip+0xffffffffffffc917]        # cb30 <hvm_generic_postprocess>
   10219:	mov    rbp,rdi
   1021c:	mov    rbx,rsi
   1021f:	sub    rsp,0x8
   10223:	cmp    QWORD PTR [rsi+0x283d8],rax
   1022a:	je     1024d <hvm_generic_postprocess_init+0x3d>
   1022c:	mov    rdi,QWORD PTR [rip+0x255025]        # 265258 <warn>
   10233:	lea    rcx,[rip+0x13386]        # 235c0 <__func__.6701>
   1023a:	lea    rdx,[rip+0xff97]        # 201d8 <_IO_stdin_used+0x3218>
   10241:	mov    esi,0x1
   10246:	xor    eax,eax
   10248:	call   4560 <__fprintf_chk@plt>
   1024d:	mov    eax,DWORD PTR [rbp+0x10]
   10250:	mov    DWORD PTR [rbx+0x28348],eax
   10256:	mov    rax,QWORD PTR [rbx+0x28410]
   1025d:	movdqu xmm0,XMMWORD PTR [rax]
   10261:	movups XMMWORD PTR [rbx+0x2834c],xmm0
   10268:	add    rsp,0x8
   1026c:	pop    rbx
   1026d:	pop    rbp
   1026e:	ret    
   1026f:	nop

0000000000010270 <hvm_npf_process>:
   10270:	push   rbp
   10271:	push   rbx
   10272:	mov    rbp,rsi
   10275:	mov    rbx,rdi
   10278:	sub    rsp,0x8
   1027c:	test   BYTE PTR [rip+0x218e1e],0x40        # 2290a1 <opt+0x1>
   10283:	jne    102b8 <hvm_npf_process+0x48>
   10285:	mov    eax,DWORD PTR [rip+0x218e19]        # 2290a4 <opt+0x4>
   1028b:	test   eax,eax
   1028d:	jne    102a0 <hvm_npf_process+0x30>
   1028f:	add    rsp,0x8
   10293:	pop    rbx
   10294:	pop    rbp
   10295:	ret    
   10296:	nop    WORD PTR cs:[rax+rax*1+0x0]
   102a0:	add    rsp,0x8
   102a4:	mov    rsi,rbp
   102a7:	mov    rdi,rbx
   102aa:	pop    rbx
   102ab:	pop    rbp
   102ac:	jmp    10210 <hvm_generic_postprocess_init>
   102b1:	nop    DWORD PTR [rax+0x0]
   102b8:	mov    rax,QWORD PTR [rsi+0x28410]
   102bf:	sub    rsp,0x8
   102c3:	lea    rdx,[rdi+0x28]
   102c7:	lea    rsi,[rip+0xff32]        # 20200 <_IO_stdin_used+0x3240>
   102ce:	mov    edi,0x1
   102d3:	mov    ecx,DWORD PTR [rax+0x14]
   102d6:	push   rcx
   102d7:	mov    rcx,QWORD PTR [rax]
   102da:	mov    r9,QWORD PTR [rax+0x8]
   102de:	mov    r8d,DWORD PTR [rax+0x10]
   102e2:	xor    eax,eax
   102e4:	call   44f0 <__printf_chk@plt>
   102e9:	pop    rdx
   102ea:	pop    rcx
   102eb:	jmp    10285 <hvm_npf_process+0x15>
   102ed:	nop    DWORD PTR [rax]

00000000000102f0 <hvm_generic_dump>:
   102f0:	push   r13
   102f2:	push   r12
   102f4:	mov    r12,rdi
   102f7:	push   rbp
   102f8:	push   rbx
   102f9:	mov    rbp,rsi
   102fc:	sub    rsp,0x118
   10303:	mov    rax,QWORD PTR fs:0x28
   1030c:	mov    QWORD PTR [rsp+0x108],rax
   10314:	xor    eax,eax
   10316:	mov    eax,DWORD PTR [rdi+0x10]
   10319:	lea    r9d,[rax-0x82000]
   10320:	mov    r13d,r9d
   10323:	and    r13d,0x100
   1032a:	je     10339 <hvm_generic_dump+0x49>
   1032c:	and    r9d,0xfffffeff
   10333:	mov    r13d,0x1
   10339:	cmp    r9d,0x25
   1033d:	jg     103f0 <hvm_generic_dump+0x100>
   10343:	lea    rax,[rip+0x219516]        # 229860 <hvm_event_handler_name>
   1034a:	movsxd r9,r9d
   1034d:	mov    r8,QWORD PTR [rax+r9*8]
   10351:	lea    rax,[rip+0xd72d]        # 1da85 <_IO_stdin_used+0xac5>
   10358:	lea    r9,[rip+0xd1b4]        # 1d513 <_IO_stdin_used+0x553>
   1035f:	test   r13d,r13d
   10362:	lea    rcx,[r12+0x28]
   10367:	lea    rsi,[rip+0xd1b7]        # 1d525 <_IO_stdin_used+0x565>
   1036e:	mov    rdx,rbp
   10371:	cmove  r9,rax
   10375:	mov    edi,0x1
   1037a:	xor    eax,eax
   1037c:	call   44f0 <__printf_chk@plt>
   10381:	mov    eax,DWORD PTR [r12+0x14]
   10386:	test   eax,eax
   10388:	jle    103bd <hvm_generic_dump+0xcd>
   1038a:	lea    r13,[rip+0xd1a0]        # 1d531 <_IO_stdin_used+0x571>
   10391:	xor    ebp,ebp
   10393:	xor    ebx,ebx
   10395:	nop    DWORD PTR [rax]
   10398:	mov    rax,QWORD PTR [r12+0x20]
   1039d:	mov    rsi,r13
   103a0:	mov    edi,0x1
   103a5:	add    ebx,0x1
   103a8:	mov    edx,DWORD PTR [rax+rbp*1]
   103ab:	xor    eax,eax
   103ad:	add    rbp,0x4
   103b1:	call   44f0 <__printf_chk@plt>
   103b6:	cmp    DWORD PTR [r12+0x14],ebx
   103bb:	jg     10398 <hvm_generic_dump+0xa8>
   103bd:	lea    rdi,[rip+0xd171]        # 1d535 <_IO_stdin_used+0x575>
   103c4:	call   4380 <puts@plt>
   103c9:	mov    rax,QWORD PTR [rsp+0x108]
   103d1:	xor    rax,QWORD PTR fs:0x28
   103da:	jne    1041b <hvm_generic_dump+0x12b>
   103dc:	add    rsp,0x118
   103e3:	pop    rbx
   103e4:	pop    rbp
   103e5:	pop    r12
   103e7:	pop    r13
   103e9:	ret    
   103ea:	nop    WORD PTR [rax+rax*1+0x0]
   103f0:	mov    rbx,rsp
   103f3:	lea    r8,[rip+0xd11c]        # 1d516 <_IO_stdin_used+0x556>
   103fa:	mov    ecx,0x100
   103ff:	mov    edx,0x1
   10404:	mov    esi,0x100
   10409:	mov    rdi,rbx
   1040c:	xor    eax,eax
   1040e:	call   4320 <__snprintf_chk@plt>
   10413:	mov    r8,rbx
   10416:	jmp    10351 <hvm_generic_dump+0x61>
   1041b:	call   43c0 <__stack_chk_fail@plt>

0000000000010420 <domain_runstate>:
   10420:	push   r14
   10422:	push   r13
   10424:	push   r12
   10426:	push   rbp
   10427:	push   rbx
   10428:	sub    rsp,0x30
   1042c:	mov    ecx,DWORD PTR [rdi+0x8]
   1042f:	mov    rax,QWORD PTR fs:0x28
   10438:	mov    QWORD PTR [rsp+0x28],rax
   1043d:	xor    eax,eax
   1043f:	cmp    ecx,0x8000
   10445:	je     10540 <domain_runstate+0x120>
   1044b:	movsxd rdx,DWORD PTR [rdi+0x810]
   10452:	mov    rbp,rdi
   10455:	mov    QWORD PTR [rsp],0x0
   1045d:	mov    QWORD PTR [rsp+0x8],0x0
   10466:	mov    QWORD PTR [rsp+0x10],0x0
   1046f:	mov    DWORD PTR [rsp+0x18],0x0
   10477:	test   edx,edx
   10479:	js     104f0 <domain_runstate+0xd0>
   1047b:	lea    rax,[rdi+0x10]
   1047f:	lea    rsi,[rdi+rdx*8+0x18]
   10484:	xor    ebx,ebx
   10486:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10490:	mov    rdx,QWORD PTR [rax]
   10493:	test   rdx,rdx
   10496:	je     104a8 <domain_runstate+0x88>
   10498:	movsxd rdx,DWORD PTR [rdx+0x18]
   1049c:	cmp    edx,0x6
   1049f:	je     104a8 <domain_runstate+0x88>
   104a1:	add    DWORD PTR [rsp+rdx*4],0x1
   104a5:	add    ebx,0x1
   104a8:	add    rax,0x8
   104ac:	cmp    rsi,rax
   104af:	jne    10490 <domain_runstate+0x70>
   104b1:	cmp    DWORD PTR [rsp+0x10],ebx
   104b5:	je     104f0 <domain_runstate+0xd0>
   104b7:	mov    esi,DWORD PTR [rsp]
   104ba:	mov    edx,DWORD PTR [rsp+0x4]
   104be:	test   esi,esi
   104c0:	je     10520 <domain_runstate+0x100>
   104c2:	test   edx,edx
   104c4:	mov    eax,0x4
   104c9:	jne    104f8 <domain_runstate+0xd8>
   104cb:	mov    edx,DWORD PTR [rsp+0x8]
   104cf:	mov    eax,0x1
   104d4:	test   edx,edx
   104d6:	jne    104f8 <domain_runstate+0xd8>
   104d8:	cmp    DWORD PTR [rsp+0xc],0x1
   104dd:	sbb    eax,eax
   104df:	not    eax
   104e1:	add    eax,0x2
   104e4:	jmp    104f8 <domain_runstate+0xd8>
   104e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   104f0:	mov    eax,0x6
   104f5:	nop    DWORD PTR [rax]
   104f8:	mov    rdi,QWORD PTR [rsp+0x28]
   104fd:	xor    rdi,QWORD PTR fs:0x28
   10506:	jne    10647 <domain_runstate+0x227>
   1050c:	add    rsp,0x30
   10510:	pop    rbx
   10511:	pop    rbp
   10512:	pop    r12
   10514:	pop    r13
   10516:	pop    r14
   10518:	ret    
   10519:	nop    DWORD PTR [rax+0x0]
   10520:	test   edx,edx
   10522:	mov    esi,DWORD PTR [rsp+0x8]
   10526:	jne    10548 <domain_runstate+0x128>
   10528:	test   esi,esi
   1052a:	jne    10540 <domain_runstate+0x120>
   1052c:	mov    r12d,DWORD PTR [rsp+0xc]
   10531:	test   r12d,r12d
   10534:	je     10560 <domain_runstate+0x140>
   10536:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10540:	xor    eax,eax
   10542:	jmp    104f8 <domain_runstate+0xd8>
   10544:	nop    DWORD PTR [rax+0x0]
   10548:	test   esi,esi
   1054a:	mov    eax,0x3
   1054f:	jne    104f8 <domain_runstate+0xd8>
   10551:	cmp    DWORD PTR [rsp+0xc],0x1
   10556:	sbb    eax,eax
   10558:	and    eax,0x2
   1055b:	add    eax,0x3
   1055e:	jmp    104f8 <domain_runstate+0xd8>
   10560:	mov    rdi,QWORD PTR [rip+0x254cf1]        # 265258 <warn>
   10567:	lea    rdx,[rip+0xfcba]        # 20228 <_IO_stdin_used+0x3268>
   1056e:	mov    esi,0x1
   10573:	xor    eax,eax
   10575:	lea    r13,[rip+0x218ec4]        # 229440 <runstate_name>
   1057c:	call   4560 <__fprintf_chk@plt>
   10581:	mov    edx,DWORD PTR [rbp+0x810]
   10587:	lea    rsi,[rip+0xcfaa]        # 1d538 <_IO_stdin_used+0x578>
   1058e:	mov    edi,0x1
   10593:	xor    eax,eax
   10595:	mov    ecx,ebx
   10597:	call   44f0 <__printf_chk@plt>
   1059c:	mov    eax,DWORD PTR [rbp+0x810]
   105a2:	mov    rdi,QWORD PTR [rip+0x254caf]        # 265258 <warn>
   105a9:	test   eax,eax
   105ab:	js     105fa <domain_runstate+0x1da>
   105ad:	lea    r13,[rip+0x218e8c]        # 229440 <runstate_name>
   105b4:	lea    r14,[rip+0xcf9a]        # 1d555 <_IO_stdin_used+0x595>
   105bb:	xor    ebx,ebx
   105bd:	nop    DWORD PTR [rax]
   105c0:	mov    rax,QWORD PTR [rbp+rbx*8+0x10]
   105c5:	test   rax,rax
   105c8:	je     105eb <domain_runstate+0x1cb>
   105ca:	movsxd rax,DWORD PTR [rax+0x18]
   105ce:	mov    ecx,ebx
   105d0:	mov    rdx,r14
   105d3:	mov    esi,0x1
   105d8:	mov    r8,QWORD PTR [r13+rax*8+0x0]
   105dd:	xor    eax,eax
   105df:	call   4560 <__fprintf_chk@plt>
   105e4:	mov    rdi,QWORD PTR [rip+0x254c6d]        # 265258 <warn>
   105eb:	lea    eax,[rbx+0x1]
   105ee:	add    rbx,0x1
   105f2:	cmp    DWORD PTR [rbp+0x810],eax
   105f8:	jge    105c0 <domain_runstate+0x1a0>
   105fa:	xor    ebx,ebx
   105fc:	lea    rbp,[rip+0xcf5c]        # 1d55f <_IO_stdin_used+0x59f>
   10603:	jmp    10613 <domain_runstate+0x1f3>
   10605:	nop    DWORD PTR [rax]
   10608:	mov    r12d,DWORD PTR [rsp+rbx*1]
   1060c:	mov    rdi,QWORD PTR [rip+0x254c45]        # 265258 <warn>
   10613:	mov    rcx,QWORD PTR [r13+rbx*2+0x0]
   10618:	xor    eax,eax
   1061a:	mov    r8d,r12d
   1061d:	mov    rdx,rbp
   10620:	mov    esi,0x1
   10625:	add    rbx,0x4
   10629:	call   4560 <__fprintf_chk@plt>
   1062e:	cmp    rbx,0x1c
   10632:	jne    10608 <domain_runstate+0x1e8>
   10634:	cmp    DWORD PTR [rip+0x218aa5],0x6        # 2290e0 <opt+0x40>
   1063b:	jbe    1064c <domain_runstate+0x22c>
   1063d:	mov    eax,0xffffffff
   10642:	jmp    104f8 <domain_runstate+0xd8>
   10647:	call   43c0 <__stack_chk_fail@plt>
   1064c:	mov    edi,0x1
   10651:	call   4540 <exit@plt>
   10656:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010660 <runstate_update>:
   10660:	push   r15
   10662:	push   r14
   10664:	push   r13
   10666:	push   r12
   10668:	mov    r12d,esi
   1066b:	push   rbp
   1066c:	push   rbx
   1066d:	mov    rbp,rdx
   10670:	mov    rbx,rdi
   10673:	sub    rsp,0x18
   10677:	test   BYTE PTR [rip+0x218a22],0x40        # 2290a0 <opt>
   1067e:	mov    r13,QWORD PTR [rdi+0x8]
   10682:	je     10702 <runstate_update+0xa2>
   10684:	mov    rax,QWORD PTR [rip+0x21cb35]        # 22d1c0 <P+0x20>
   1068b:	cmp    rdx,rax
   1068e:	ja     10770 <runstate_update+0x110>
   10694:	xor    r14d,r14d
   10697:	xor    r15d,r15d
   1069a:	movsxd rax,DWORD PTR [rbx+0x18]
   1069e:	lea    r10,[rip+0x2189db]        # 229080 <runstate_graph>
   106a5:	sub    rsp,0x8
   106a9:	mov    edx,DWORD PTR [r13+0x8]
   106ad:	lea    rsi,[rip+0xceb4]        # 1d568 <_IO_stdin_used+0x5a8>
   106b4:	mov    r9d,r14d
   106b7:	mov    QWORD PTR [rsp+0x10],r10
   106bc:	mov    r8d,r15d
   106bf:	mov    edi,0x1
   106c4:	mov    eax,DWORD PTR [r10+rax*4]
   106c8:	push   rax
   106c9:	mov    ecx,DWORD PTR [rbx]
   106cb:	xor    eax,eax
   106cd:	call   44f0 <__printf_chk@plt>
   106d2:	mov    r10,QWORD PTR [rsp+0x18]
   106d7:	movsxd rax,r12d
   106da:	mov    edx,DWORD PTR [r13+0x8]
   106de:	lea    rsi,[rip+0xce83]        # 1d568 <_IO_stdin_used+0x5a8>
   106e5:	mov    edi,0x1
   106ea:	mov    r9d,r14d
   106ed:	mov    r8d,r15d
   106f0:	mov    eax,DWORD PTR [r10+rax*4]
   106f4:	mov    DWORD PTR [rsp],eax
   106f7:	mov    ecx,DWORD PTR [rbx]
   106f9:	xor    eax,eax
   106fb:	call   44f0 <__printf_chk@plt>
   10700:	pop    rsi
   10701:	pop    rdi
   10702:	mov    rax,QWORD PTR [rbx+0x20]
   10706:	test   rax,rax
   10709:	je     10714 <runstate_update+0xb4>
   1070b:	cmp    rax,rbp
   1070e:	jb     108d0 <runstate_update+0x270>
   10714:	cmp    r12d,0x1
   10718:	je     107b8 <runstate_update+0x158>
   1071e:	mov    DWORD PTR [rbx+0x1c],0x0
   10725:	mov    DWORD PTR [rbx+0x18],r12d
   10729:	mov    QWORD PTR [rbx+0x20],rbp
   1072d:	mov    rax,QWORD PTR [r13+0x818]
   10734:	cmp    rax,rbp
   10737:	jae    10742 <runstate_update+0xe2>
   10739:	test   rax,rax
   1073c:	jne    107e8 <runstate_update+0x188>
   10742:	mov    rdi,r13
   10745:	call   10420 <domain_runstate>
   1074a:	mov    QWORD PTR [r13+0x818],rbp
   10751:	mov    DWORD PTR [r13+0x814],eax
   10758:	add    rsp,0x18
   1075c:	pop    rbx
   1075d:	pop    rbp
   1075e:	pop    r12
   10760:	pop    r13
   10762:	pop    r14
   10764:	pop    r15
   10766:	ret    
   10767:	nop    WORD PTR [rax+rax*1+0x0]
   10770:	mov    r14,rdx
   10773:	xor    edx,edx
   10775:	movabs rcx,0x44b82fa09b5a53
   1077f:	sub    r14,rax
   10782:	shl    r14,0xa
   10786:	mov    rax,r14
   10789:	div    QWORD PTR [rip+0x218918]        # 2290a8 <opt+0x8>
   10790:	mov    rdx,rax
   10793:	mov    r14,rax
   10796:	shr    rdx,0x9
   1079a:	mov    rax,rdx
   1079d:	mul    rcx
   107a0:	shr    rdx,0xb
   107a4:	mov    r15d,edx
   107a7:	imul   edx,edx,0x3b9aca00
   107ad:	sub    r14d,edx
   107b0:	jmp    1069a <runstate_update+0x3a>
   107b5:	nop    DWORD PTR [rax]
   107b8:	mov    eax,DWORD PTR [rbx+0x18]
   107bb:	test   eax,eax
   107bd:	je     10a78 <runstate_update+0x418>
   107c3:	js     10a68 <runstate_update+0x408>
   107c9:	sub    eax,0x2
   107cc:	cmp    eax,0x1
   107cf:	ja     10a68 <runstate_update+0x408>
   107d5:	mov    DWORD PTR [rbx+0x1c],0x1
   107dc:	jmp    10725 <runstate_update+0xc5>
   107e1:	nop    DWORD PTR [rax+0x0]
   107e8:	movsxd rdx,DWORD PTR [r13+0x814]
   107ef:	mov    r12,rbp
   107f2:	sub    r12,rax
   107f5:	lea    rax,[rdx*8+0x0]
   107fd:	sub    rax,rdx
   10800:	lea    rbx,[r13+rax*8+0x858]
   10808:	add    DWORD PTR [rbx],0x1
   1080b:	movsxd rcx,DWORD PTR [rbx+0x4]
   1080f:	mov    edx,DWORD PTR [rip+0x2188c3]        # 2290d8 <opt+0x38>
   10815:	test   edx,edx
   10817:	mov    eax,ecx
   10819:	je     108b0 <runstate_update+0x250>
   1081f:	mov    eax,DWORD PTR [rbx+0x8]
   10822:	cmp    eax,ecx
   10824:	jg     10b33 <runstate_update+0x4d3>
   1082a:	test   ecx,ecx
   1082c:	mov    r14d,DWORD PTR [rip+0x2188a9]        # 2290dc <opt+0x3c>
   10833:	jne    10b92 <runstate_update+0x532>
   10839:	add    eax,eax
   1083b:	cmovne edx,eax
   1083e:	test   r14d,r14d
   10841:	je     10bc6 <runstate_update+0x566>
   10847:	cmp    edx,r14d
   1084a:	jle    10bc6 <runstate_update+0x566>
   10850:	mov    rdi,QWORD PTR [rbx+0x18]
   10854:	movsxd rsi,r14d
   10857:	shl    rsi,0x3
   1085b:	call   44c0 <realloc@plt>
   10860:	test   rax,rax
   10863:	je     10bbd <runstate_update+0x55d>
   10869:	mov    QWORD PTR [rbx+0x18],rax
   1086d:	mov    DWORD PTR [rbx+0x8],r14d
   10871:	movsxd rcx,DWORD PTR [rbx+0x4]
   10875:	cmp    ecx,r14d
   10878:	jl     10b33 <runstate_update+0x4d3>
   1087e:	mov    eax,ecx
   10880:	cdq    
   10881:	idiv   r14d
   10884:	lea    esi,[rax+0x1]
   10887:	movsxd rdi,edx
   1088a:	mov    edx,0x55555556
   1088f:	mov    eax,esi
   10891:	imul   edx
   10893:	mov    eax,esi
   10895:	sar    eax,0x1f
   10898:	sub    eax,edx
   1089a:	add    eax,edi
   1089c:	cdq    
   1089d:	idiv   esi
   1089f:	mov    eax,ecx
   108a1:	test   edx,edx
   108a3:	jne    108b0 <runstate_update+0x250>
   108a5:	mov    rax,QWORD PTR [rbx+0x18]
   108a9:	mov    QWORD PTR [rax+rdi*8],r12
   108ad:	mov    eax,DWORD PTR [rbx+0x4]
   108b0:	add    eax,0x1
   108b3:	add    QWORD PTR [rbx+0x10],r12
   108b7:	add    DWORD PTR [rbx+0x20],0x1
   108bb:	mov    DWORD PTR [rbx+0x4],eax
   108be:	add    QWORD PTR [rbx+0x28],r12
   108c2:	jmp    10742 <runstate_update+0xe2>
   108c7:	nop    WORD PTR [rax+rax*1+0x0]
   108d0:	movsxd rdx,DWORD PTR [rbx+0x18]
   108d4:	mov    r15,rbp
   108d7:	sub    r15,rax
   108da:	lea    rax,[rdx*8+0x0]
   108e2:	sub    rax,rdx
   108e5:	lea    r14,[rbx+rax*8+0x150]
   108ed:	add    DWORD PTR [r14],0x1
   108f1:	movsxd rcx,DWORD PTR [r14+0x4]
   108f5:	mov    edx,DWORD PTR [rip+0x2187dd]        # 2290d8 <opt+0x38>
   108fb:	test   edx,edx
   108fd:	mov    eax,ecx
   108ff:	je     109b0 <runstate_update+0x350>
   10905:	mov    eax,DWORD PTR [r14+0x8]
   10909:	cmp    eax,ecx
   1090b:	jg     10b43 <runstate_update+0x4e3>
   10911:	test   ecx,ecx
   10913:	mov    r8d,DWORD PTR [rip+0x2187c2]        # 2290dc <opt+0x3c>
   1091a:	je     1092a <runstate_update+0x2ca>
   1091c:	cmp    eax,r8d
   1091f:	jl     1092a <runstate_update+0x2ca>
   10921:	test   r8d,r8d
   10924:	jne    10bdf <runstate_update+0x57f>
   1092a:	add    eax,eax
   1092c:	cmovne edx,eax
   1092f:	test   r8d,r8d
   10932:	je     10bd7 <runstate_update+0x577>
   10938:	cmp    edx,r8d
   1093b:	jle    10bd7 <runstate_update+0x577>
   10941:	mov    rdi,QWORD PTR [r14+0x18]
   10945:	movsxd rsi,r8d
   10948:	mov    DWORD PTR [rsp+0x8],r8d
   1094d:	shl    rsi,0x3
   10951:	call   44c0 <realloc@plt>
   10956:	test   rax,rax
   10959:	mov    r8d,DWORD PTR [rsp+0x8]
   1095e:	je     10bce <runstate_update+0x56e>
   10964:	mov    QWORD PTR [r14+0x18],rax
   10968:	mov    DWORD PTR [r14+0x8],r8d
   1096c:	movsxd rcx,DWORD PTR [r14+0x4]
   10970:	cmp    ecx,r8d
   10973:	jl     10b43 <runstate_update+0x4e3>
   10979:	mov    eax,ecx
   1097b:	cdq    
   1097c:	idiv   r8d
   1097f:	lea    edi,[rax+0x1]
   10982:	movsxd rsi,edx
   10985:	mov    edx,0x55555556
   1098a:	mov    eax,edi
   1098c:	imul   edx
   1098e:	mov    eax,edi
   10990:	sar    eax,0x1f
   10993:	sub    eax,edx
   10995:	add    eax,esi
   10997:	cdq    
   10998:	idiv   edi
   1099a:	mov    eax,ecx
   1099c:	test   edx,edx
   1099e:	jne    109b0 <runstate_update+0x350>
   109a0:	mov    rax,QWORD PTR [r14+0x18]
   109a4:	mov    QWORD PTR [rax+rsi*8],r15
   109a8:	mov    eax,DWORD PTR [r14+0x4]
   109ac:	nop    DWORD PTR [rax+0x0]
   109b0:	add    eax,0x1
   109b3:	add    QWORD PTR [r14+0x10],r15
   109b7:	add    DWORD PTR [r14+0x20],0x1
   109bc:	mov    DWORD PTR [r14+0x4],eax
   109c0:	add    QWORD PTR [r14+0x28],r15
   109c4:	cmp    BYTE PTR [rip+0x2186d5],0x0        # 2290a0 <opt>
   109cb:	js     10a84 <runstate_update+0x424>
   109d1:	mov    eax,DWORD PTR [rbx+0x18]
   109d4:	test   eax,eax
   109d6:	jne    109f6 <runstate_update+0x396>
   109d8:	mov    rsi,rbp
   109db:	sub    rsi,QWORD PTR [rbx+0x20]
   109df:	mov    rax,QWORD PTR [rbx+0x8]
   109e3:	add    DWORD PTR [rax+0x820],0x1
   109ea:	test   rsi,rsi
   109ed:	jne    10bac <runstate_update+0x54c>
   109f3:	mov    eax,DWORD PTR [rbx+0x18]
   109f6:	cmp    eax,0x1
   109f9:	je     10aff <runstate_update+0x49f>
   109ff:	mov    rax,QWORD PTR [rbx+0x8]
   10a03:	mov    eax,DWORD PTR [rax+0x8]
   10a06:	test   eax,eax
   10a08:	jne    10714 <runstate_update+0xb4>
   10a0e:	lea    rax,[rip+0x21c7cb]        # 22d1e0 <P+0x40>
   10a15:	lea    rsi,[rax+0x38000]
   10a1c:	nop    DWORD PTR [rax+0x0]
   10a20:	test   BYTE PTR [rax],0x1
   10a23:	je     10a55 <runstate_update+0x3f5>
   10a25:	mov    rdx,QWORD PTR [rax+0x1c0]
   10a2c:	cmp    QWORD PTR [rbx+0x20],rdx
   10a30:	mov    rdi,rbp
   10a33:	cmovae rdx,QWORD PTR [rbx+0x20]
   10a38:	movsxd rcx,DWORD PTR [rbx+0x18]
   10a3c:	sub    rdi,rdx
   10a3f:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   10a47:	mov    DWORD PTR [rax+0x208],r12d
   10a4e:	mov    QWORD PTR [rax+0x1c8],rbp
   10a55:	add    rax,0x380
   10a5b:	cmp    rsi,rax
   10a5e:	jne    10a20 <runstate_update+0x3c0>
   10a60:	jmp    10714 <runstate_update+0xb4>
   10a65:	nop    DWORD PTR [rax]
   10a68:	mov    DWORD PTR [rbx+0x1c],0x3
   10a6f:	jmp    10725 <runstate_update+0xc5>
   10a74:	nop    DWORD PTR [rax+0x0]
   10a78:	mov    DWORD PTR [rbx+0x1c],0x2
   10a7f:	jmp    10725 <runstate_update+0xc5>
   10a84:	mov    rsi,QWORD PTR [rip+0x21c735]        # 22d1c0 <P+0x20>
   10a8b:	mov    rcx,QWORD PTR [rip+0x218616]        # 2290a8 <opt+0x8>
   10a92:	cmp    rbp,rsi
   10a95:	ja     10b54 <runstate_update+0x4f4>
   10a9b:	xor    r9d,r9d
   10a9e:	xor    r8d,r8d
   10aa1:	mov    rax,rbp
   10aa4:	sub    rax,QWORD PTR [rbx+0x20]
   10aa8:	xor    edx,edx
   10aaa:	mov    edi,0x1
   10aaf:	sub    rax,rsi
   10ab2:	shl    rax,0xa
   10ab6:	div    rcx
   10ab9:	movabs rcx,0x44b82fa09b5a53
   10ac3:	mov    rdx,rax
   10ac6:	mov    rsi,rax
   10ac9:	shr    rdx,0x9
   10acd:	mov    rax,rdx
   10ad0:	mul    rcx
   10ad3:	mov    rcx,rdx
   10ad6:	mov    edx,DWORD PTR [r13+0x8]
   10ada:	shr    rcx,0xb
   10ade:	imul   eax,ecx,0x3b9aca00
   10ae4:	sub    esi,eax
   10ae6:	xor    eax,eax
   10ae8:	push   rsi
   10ae9:	push   rcx
   10aea:	lea    rsi,[rip+0xca89]        # 1d57a <_IO_stdin_used+0x5ba>
   10af1:	mov    ecx,DWORD PTR [rbx]
   10af3:	call   44f0 <__printf_chk@plt>
   10af8:	pop    rdx
   10af9:	pop    rcx
   10afa:	jmp    109d1 <runstate_update+0x371>
   10aff:	movsxd rdx,DWORD PTR [rbx+0x1c]
   10b03:	mov    rsi,rbp
   10b06:	sub    rsi,QWORD PTR [rbx+0x20]
   10b0a:	lea    rax,[rdx*8+0x0]
   10b12:	sub    rax,rdx
   10b15:	lea    rdi,[rbx+rax*8+0x2d8]
   10b1d:	add    DWORD PTR [rdi],0x1
   10b20:	test   rsi,rsi
   10b23:	je     109ff <runstate_update+0x39f>
   10b29:	call   4a20 <update_cycles.part.5>
   10b2e:	jmp    109ff <runstate_update+0x39f>
   10b33:	mov    rax,QWORD PTR [rbx+0x18]
   10b37:	mov    QWORD PTR [rax+rcx*8],r12
   10b3b:	mov    eax,DWORD PTR [rbx+0x4]
   10b3e:	jmp    108b0 <runstate_update+0x250>
   10b43:	mov    rax,QWORD PTR [r14+0x18]
   10b47:	mov    QWORD PTR [rax+rcx*8],r15
   10b4b:	mov    eax,DWORD PTR [r14+0x4]
   10b4f:	jmp    109b0 <runstate_update+0x350>
   10b54:	mov    rax,rbp
   10b57:	xor    edx,edx
   10b59:	movabs rdi,0x44b82fa09b5a53
   10b63:	sub    rax,rsi
   10b66:	shl    rax,0xa
   10b6a:	div    rcx
   10b6d:	mov    rdx,rax
   10b70:	mov    r9,rax
   10b73:	shr    rdx,0x9
   10b77:	mov    rax,rdx
   10b7a:	mul    rdi
   10b7d:	shr    rdx,0xb
   10b81:	mov    r8d,edx
   10b84:	imul   edx,edx,0x3b9aca00
   10b8a:	sub    r9d,edx
   10b8d:	jmp    10aa1 <runstate_update+0x441>
   10b92:	test   r14d,r14d
   10b95:	je     10839 <runstate_update+0x1d9>
   10b9b:	cmp    eax,r14d
   10b9e:	jl     10839 <runstate_update+0x1d9>
   10ba4:	mov    r14d,eax
   10ba7:	jmp    1087e <runstate_update+0x21e>
   10bac:	lea    rdi,[rax+0x820]
   10bb3:	call   4a20 <update_cycles.part.5>
   10bb8:	jmp    109f3 <runstate_update+0x393>
   10bbd:	mov    r14d,DWORD PTR [rbx+0x8]
   10bc1:	jmp    10871 <runstate_update+0x211>
   10bc6:	mov    r14d,edx
   10bc9:	jmp    10850 <runstate_update+0x1f0>
   10bce:	mov    r8d,DWORD PTR [r14+0x8]
   10bd2:	jmp    1096c <runstate_update+0x30c>
   10bd7:	mov    r8d,edx
   10bda:	jmp    10941 <runstate_update+0x2e1>
   10bdf:	mov    r8d,eax
   10be2:	jmp    10979 <runstate_update+0x319>
   10be7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000010bf0 <hvm_close_vmexit>:
   10bf0:	push   r13
   10bf2:	push   r12
   10bf4:	push   rbp
   10bf5:	push   rbx
   10bf6:	mov    rbx,rdi
   10bf9:	sub    rsp,0x8
   10bfd:	mov    rax,QWORD PTR [rdi+0x283e0]
   10c04:	test   rax,rax
   10c07:	je     10d48 <hvm_close_vmexit+0x158>
   10c0d:	cmp    rax,rsi
   10c10:	mov    rbp,rsi
   10c13:	jbe    10c60 <hvm_close_vmexit+0x70>
   10c15:	mov    rax,QWORD PTR [rdi+0x283d8]
   10c1c:	mov    QWORD PTR [rdi+0x283e8],0x0
   10c27:	test   rax,rax
   10c2a:	jne    10d54 <hvm_close_vmexit+0x164>
   10c30:	mov    QWORD PTR [rbx+0x283e0],0x0
   10c3b:	mov    DWORD PTR [rbx+0x4],0x0
   10c42:	mov    QWORD PTR [rbx+0x283d8],0x0
   10c4d:	add    rsp,0x8
   10c51:	pop    rbx
   10c52:	pop    rbp
   10c53:	pop    r12
   10c55:	pop    r13
   10c57:	ret    
   10c58:	nop    DWORD PTR [rax+rax*1+0x0]
   10c60:	sub    rsi,rax
   10c63:	mov    QWORD PTR [rdi+0x283e8],rsi
   10c6a:	mov    edi,DWORD PTR [rip+0x218434]        # 2290a4 <opt+0x4>
   10c70:	test   edi,edi
   10c72:	je     10ca1 <hvm_close_vmexit+0xb1>
   10c74:	mov    edx,DWORD PTR [rbx+0x28400]
   10c7a:	lea    rax,[rdx*8+0x0]
   10c82:	sub    rax,rdx
   10c85:	shl    rax,0x3
   10c89:	add    DWORD PTR [rbx+rax*1+0x2030],0x1
   10c91:	test   rsi,rsi
   10c94:	jne    10f00 <hvm_close_vmexit+0x310>
   10c9a:	mov    DWORD PTR [rbx+0x8],0x1
   10ca1:	test   BYTE PTR [rip+0x2183f9],0x2        # 2290a1 <opt+0x1>
   10ca8:	je     10d48 <hvm_close_vmexit+0x158>
   10cae:	cmp    DWORD PTR [rbx+0x28400],0x1
   10cb5:	jne    10d48 <hvm_close_vmexit+0x158>
   10cbb:	mov    eax,DWORD PTR [rip+0x2183fb]        # 2290bc <opt+0x1c>
   10cc1:	cmp    DWORD PTR [rbx+0x28348],eax
   10cc7:	jne    10d48 <hvm_close_vmexit+0x158>
   10cc9:	mov    rax,QWORD PTR [rip+0x21c4f0]        # 22d1c0 <P+0x20>
   10cd0:	cmp    rbp,rax
   10cd3:	jbe    10f5e <hvm_close_vmexit+0x36e>
   10cd9:	mov    r9,rbp
   10cdc:	xor    edx,edx
   10cde:	movabs rcx,0x44b82fa09b5a53
   10ce8:	sub    r9,rax
   10ceb:	shl    r9,0xa
   10cef:	mov    rax,r9
   10cf2:	div    QWORD PTR [rip+0x2183af]        # 2290a8 <opt+0x8>
   10cf9:	mov    rdx,rax
   10cfc:	mov    r9,rax
   10cff:	shr    rdx,0x9
   10d03:	mov    rax,rdx
   10d06:	mul    rcx
   10d09:	shr    rdx,0xb
   10d0d:	mov    r8d,edx
   10d10:	imul   edx,edx,0x3b9aca00
   10d16:	sub    r9d,edx
   10d19:	mov    rax,QWORD PTR [rbx+0x10]
   10d1d:	sub    rsp,0x8
   10d21:	lea    rsi,[rip+0xc780]        # 1d4a8 <_IO_stdin_used+0x4e8>
   10d28:	mov    edi,0x1
   10d2d:	mov    rdx,QWORD PTR [rax+0x8]
   10d31:	mov    edx,DWORD PTR [rdx+0x8]
   10d34:	push   QWORD PTR [rbx+0x283e8]
   10d3a:	mov    ecx,DWORD PTR [rax]
   10d3c:	xor    eax,eax
   10d3e:	call   44f0 <__printf_chk@plt>
   10d43:	pop    rcx
   10d44:	pop    rsi
   10d45:	nop    DWORD PTR [rax]
   10d48:	mov    rax,QWORD PTR [rbx+0x283d8]
   10d4f:	test   rax,rax
   10d52:	je     10d59 <hvm_close_vmexit+0x169>
   10d54:	mov    rdi,rbx
   10d57:	call   rax
   10d59:	cmp    QWORD PTR [rbx+0x283e8],0x0
   10d61:	je     10c30 <hvm_close_vmexit+0x40>
   10d67:	mov    edx,DWORD PTR [rip+0x218337]        # 2290a4 <opt+0x4>
   10d6d:	test   edx,edx
   10d6f:	je     10db0 <hvm_close_vmexit+0x1c0>
   10d71:	test   BYTE PTR [rbx+0x28408],0x1
   10d78:	jne    10db0 <hvm_close_vmexit+0x1c0>
   10d7a:	mov    eax,DWORD PTR [rbx+0x28404]
   10d80:	cmp    eax,0x12
   10d83:	je     10f30 <hvm_close_vmexit+0x340>
   10d89:	cmp    eax,0x13
   10d8c:	je     10f18 <hvm_close_vmexit+0x328>
   10d92:	cmp    eax,0xf
   10d95:	je     10ee8 <hvm_close_vmexit+0x2f8>
   10d9b:	mov    esi,0x9
   10da0:	mov    rdi,rbx
   10da3:	call   9800 <hvm_update_short_summary>
   10da8:	nop    DWORD PTR [rax+rax*1+0x0]
   10db0:	mov    rax,QWORD PTR [rbx+0x10]
   10db4:	mov    rax,QWORD PTR [rax+0x70]
   10db8:	test   rax,rax
   10dbb:	je     10c30 <hvm_close_vmexit+0x40>
   10dc1:	mov    rdx,QWORD PTR [rbx+0x283e8]
   10dc8:	add    QWORD PTR [rax+0x30],rdx
   10dcc:	mov    eax,DWORD PTR [rip+0x2182d2]        # 2290a4 <opt+0x4>
   10dd2:	test   eax,eax
   10dd4:	je     10c30 <hvm_close_vmexit+0x40>
   10dda:	mov    rax,QWORD PTR [rbx+0x10]
   10dde:	mov    r12,QWORD PTR [rbx+0x283e8]
   10de5:	mov    rbp,QWORD PTR [rax+0x70]
   10de9:	add    DWORD PTR [rbp+0xa8],0x1
   10df0:	test   r12,r12
   10df3:	je     10c30 <hvm_close_vmexit+0x40>
   10df9:	mov    edx,DWORD PTR [rip+0x2182d9]        # 2290d8 <opt+0x38>
   10dff:	movsxd rcx,DWORD PTR [rbp+0xac]
   10e06:	test   edx,edx
   10e08:	mov    eax,ecx
   10e0a:	je     10ec0 <hvm_close_vmexit+0x2d0>
   10e10:	mov    eax,DWORD PTR [rbp+0xb0]
   10e16:	cmp    eax,ecx
   10e18:	jg     10f48 <hvm_close_vmexit+0x358>
   10e1e:	test   ecx,ecx
   10e20:	mov    r13d,DWORD PTR [rip+0x2182b5]        # 2290dc <opt+0x3c>
   10e27:	je     10e37 <hvm_close_vmexit+0x247>
   10e29:	cmp    eax,r13d
   10e2c:	jl     10e37 <hvm_close_vmexit+0x247>
   10e2e:	test   r13d,r13d
   10e31:	jne    10f7d <hvm_close_vmexit+0x38d>
   10e37:	add    eax,eax
   10e39:	cmovne edx,eax
   10e3c:	test   r13d,r13d
   10e3f:	je     10f75 <hvm_close_vmexit+0x385>
   10e45:	cmp    edx,r13d
   10e48:	jle    10f75 <hvm_close_vmexit+0x385>
   10e4e:	mov    rdi,QWORD PTR [rbp+0xc0]
   10e55:	movsxd rsi,r13d
   10e58:	shl    rsi,0x3
   10e5c:	call   44c0 <realloc@plt>
   10e61:	test   rax,rax
   10e64:	je     10f69 <hvm_close_vmexit+0x379>
   10e6a:	mov    QWORD PTR [rbp+0xc0],rax
   10e71:	mov    DWORD PTR [rbp+0xb0],r13d
   10e78:	movsxd rcx,DWORD PTR [rbp+0xac]
   10e7f:	cmp    ecx,r13d
   10e82:	jl     10f48 <hvm_close_vmexit+0x358>
   10e88:	mov    eax,ecx
   10e8a:	cdq    
   10e8b:	idiv   r13d
   10e8e:	lea    esi,[rax+0x1]
   10e91:	movsxd rdi,edx
   10e94:	mov    edx,0x55555556
   10e99:	mov    eax,esi
   10e9b:	imul   edx
   10e9d:	mov    eax,esi
   10e9f:	sar    eax,0x1f
   10ea2:	sub    eax,edx
   10ea4:	add    eax,edi
   10ea6:	cdq    
   10ea7:	idiv   esi
   10ea9:	mov    eax,ecx
   10eab:	test   edx,edx
   10ead:	jne    10ec0 <hvm_close_vmexit+0x2d0>
   10eaf:	mov    rax,QWORD PTR [rbp+0xc0]
   10eb6:	mov    QWORD PTR [rax+rdi*8],r12
   10eba:	mov    eax,DWORD PTR [rbp+0xac]
   10ec0:	add    eax,0x1
   10ec3:	add    QWORD PTR [rbp+0xb8],r12
   10eca:	add    DWORD PTR [rbp+0xc8],0x1
   10ed1:	mov    DWORD PTR [rbp+0xac],eax
   10ed7:	add    QWORD PTR [rbp+0xd0],r12
   10ede:	jmp    10c30 <hvm_close_vmexit+0x40>
   10ee3:	nop    DWORD PTR [rax+rax*1+0x0]
   10ee8:	mov    esi,0x7
   10eed:	mov    rdi,rbx
   10ef0:	call   9800 <hvm_update_short_summary>
   10ef5:	jmp    10db0 <hvm_close_vmexit+0x1c0>
   10efa:	nop    WORD PTR [rax+rax*1+0x0]
   10f00:	lea    rdi,[rbx+rax*1+0x2030]
   10f08:	call   4a20 <update_cycles.part.5>
   10f0d:	jmp    10c9a <hvm_close_vmexit+0xaa>
   10f12:	nop    WORD PTR [rax+rax*1+0x0]
   10f18:	mov    esi,0x8
   10f1d:	mov    rdi,rbx
   10f20:	call   9800 <hvm_update_short_summary>
   10f25:	jmp    10db0 <hvm_close_vmexit+0x1c0>
   10f2a:	nop    WORD PTR [rax+rax*1+0x0]
   10f30:	mov    esi,0x6
   10f35:	mov    rdi,rbx
   10f38:	call   9800 <hvm_update_short_summary>
   10f3d:	jmp    10db0 <hvm_close_vmexit+0x1c0>
   10f42:	nop    WORD PTR [rax+rax*1+0x0]
   10f48:	mov    rax,QWORD PTR [rbp+0xc0]
   10f4f:	mov    QWORD PTR [rax+rcx*8],r12
   10f53:	mov    eax,DWORD PTR [rbp+0xac]
   10f59:	jmp    10ec0 <hvm_close_vmexit+0x2d0>
   10f5e:	xor    r9d,r9d
   10f61:	xor    r8d,r8d
   10f64:	jmp    10d19 <hvm_close_vmexit+0x129>
   10f69:	mov    r13d,DWORD PTR [rbp+0xb0]
   10f70:	jmp    10e78 <hvm_close_vmexit+0x288>
   10f75:	mov    r13d,edx
   10f78:	jmp    10e4e <hvm_close_vmexit+0x25e>
   10f7d:	mov    r13d,eax
   10f80:	jmp    10e88 <hvm_close_vmexit+0x298>
   10f85:	nop
   10f86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010f90 <hvm_vmentry_process>:
   10f90:	push   r14
   10f92:	push   r13
   10f94:	mov    r14,rdi
   10f97:	push   r12
   10f99:	push   rbp
   10f9a:	push   rbx
   10f9b:	mov    ecx,DWORD PTR [rsi]
   10f9d:	test   ecx,ecx
   10f9f:	jne    10fc0 <hvm_vmentry_process+0x30>
   10fa1:	test   BYTE PTR [rip+0x2180f9],0x40        # 2290a1 <opt+0x1>
   10fa8:	jne    11042 <hvm_vmentry_process+0xb2>
   10fae:	pop    rbx
   10faf:	pop    rbp
   10fb0:	pop    r12
   10fb2:	pop    r13
   10fb4:	pop    r14
   10fb6:	ret    
   10fb7:	nop    WORD PTR [rax+rax*1+0x0]
   10fc0:	mov    r12,rsi
   10fc3:	mov    rsi,QWORD PTR [rdi+0x8]
   10fc7:	mov    rdi,QWORD PTR [r12+0x10]
   10fcc:	call   d4f0 <hvm_vlapic_vmentry_cleanup>
   10fd1:	movzx  ecx,BYTE PTR [rip+0x2180c9]        # 2290a1 <opt+0x1>
   10fd8:	test   BYTE PTR [r12+0x28418],0x1
   10fe1:	mov    edi,ecx
   10fe3:	je     11014 <hvm_vmentry_process+0x84>
   10fe5:	and    edi,0x40
   10fe8:	je     11017 <hvm_vmentry_process+0x87>
   10fea:	mov    rax,QWORD PTR [r12+0x10]
   10fef:	lea    rsi,[rip+0xf262]        # 20258 <_IO_stdin_used+0x3298>
   10ff6:	mov    edi,0x1
   10ffb:	mov    rdx,QWORD PTR [rax+0x8]
   10fff:	mov    ecx,DWORD PTR [rax]
   11001:	xor    eax,eax
   11003:	mov    edx,DWORD PTR [rdx+0x8]
   11006:	call   44f0 <__printf_chk@plt>
   1100b:	movzx  ecx,BYTE PTR [rip+0x21808f]        # 2290a1 <opt+0x1>
   11012:	mov    edi,ecx
   11014:	and    edi,0x40
   11017:	mov    edx,DWORD PTR [r12+0x28424]
   1101f:	and    BYTE PTR [r12+0x28418],0xfe
   11028:	test   edx,edx
   1102a:	jne    11068 <hvm_vmentry_process+0xd8>
   1102c:	mov    eax,DWORD PTR [r12+0x4]
   11031:	test   eax,eax
   11033:	jne    110c5 <hvm_vmentry_process+0x135>
   11039:	test   dil,dil
   1103c:	je     10fae <hvm_vmentry_process+0x1e>
   11042:	pop    rbx
   11043:	lea    rdx,[r14+0x28]
   11047:	lea    rsi,[rip+0xc545]        # 1d593 <_IO_stdin_used+0x5d3>
   1104e:	mov    edi,0x1
   11053:	pop    rbp
   11054:	pop    r12
   11056:	pop    r13
   11058:	pop    r14
   1105a:	xor    eax,eax
   1105c:	jmp    44f0 <__printf_chk@plt>
   11061:	nop    DWORD PTR [rax+0x0]
   11068:	lea    rbx,[r12+0x12be8]
   11070:	xor    ebp,ebp
   11072:	lea    r13,[rip+0xf1ff]        # 20278 <_IO_stdin_used+0x32b8>
   11079:	jmp    11092 <hvm_vmentry_process+0x102>
   1107b:	nop    DWORD PTR [rax+rax*1+0x0]
   11080:	add    ebp,0x1
   11083:	add    rbx,0xf8
   1108a:	cmp    ebp,0x15e
   11090:	je     1102c <hvm_vmentry_process+0x9c>
   11092:	mov    edi,ecx
   11094:	and    edi,0x40
   11097:	cmp    QWORD PTR [rbx],0x1
   1109b:	jne    11080 <hvm_vmentry_process+0xf0>
   1109d:	test   dil,dil
   110a0:	mov    r9,QWORD PTR [r14+0x8]
   110a4:	jne    11130 <hvm_vmentry_process+0x1a0>
   110aa:	mov    QWORD PTR [rbx],r9
   110ad:	sub    DWORD PTR [r12+0x28424],0x1
   110b6:	jne    11080 <hvm_vmentry_process+0xf0>
   110b8:	mov    eax,DWORD PTR [r12+0x4]
   110bd:	test   eax,eax
   110bf:	je     11039 <hvm_vmentry_process+0xa9>
   110c5:	test   dil,dil
   110c8:	mov    rsi,QWORD PTR [r14+0x8]
   110cc:	je     1110d <hvm_vmentry_process+0x17d>
   110ce:	sub    rsi,QWORD PTR [r12+0x283e0]
   110d6:	lea    rax,[rip+0xc4b4]        # 1d591 <_IO_stdin_used+0x5d1>
   110dd:	lea    r8,[rip+0xc9a1]        # 1da85 <_IO_stdin_used+0xac5>
   110e4:	lea    rdx,[r14+0x28]
   110e8:	mov    edi,0x1
   110ed:	cmp    rsi,0x2711
   110f4:	mov    rcx,rsi
   110f7:	lea    rsi,[rip+0xc4a2]        # 1d5a0 <_IO_stdin_used+0x5e0>
   110fe:	cmovae r8,rax
   11102:	xor    eax,eax
   11104:	call   44f0 <__printf_chk@plt>
   11109:	mov    rsi,QWORD PTR [r14+0x8]
   1110d:	mov    rdi,r12
   11110:	call   10bf0 <hvm_close_vmexit>
   11115:	mov    rax,QWORD PTR [r14+0x8]
   11119:	mov    QWORD PTR [r12+0x283f0],rax
   11121:	pop    rbx
   11122:	pop    rbp
   11123:	pop    r12
   11125:	pop    r13
   11127:	pop    r14
   11129:	ret    
   1112a:	nop    WORD PTR [rax+rax*1+0x0]
   11130:	mov    rax,QWORD PTR [r12+0x10]
   11135:	mov    edi,0x1
   1113a:	mov    r8d,ebp
   1113d:	mov    rsi,r13
   11140:	mov    rdx,QWORD PTR [rax+0x8]
   11144:	mov    ecx,DWORD PTR [rax]
   11146:	xor    eax,eax
   11148:	mov    edx,DWORD PTR [rdx+0x8]
   1114b:	call   44f0 <__printf_chk@plt>
   11150:	movzx  ecx,BYTE PTR [rip+0x217f4a]        # 2290a1 <opt+0x1>
   11157:	mov    r9,QWORD PTR [r14+0x8]
   1115b:	mov    edi,ecx
   1115d:	and    edi,0x40
   11160:	jmp    110aa <hvm_vmentry_process+0x11a>
   11165:	nop
   11166:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011170 <hvm_summary>:
   11170:	mov    eax,DWORD PTR [rdi+0x8]
   11173:	test   eax,eax
   11175:	jne    11180 <hvm_summary+0x10>
   11177:	repz ret 
   11179:	nop    DWORD PTR [rax+0x0]
   11180:	jmp    7bd0 <hvm_summary.part.19>
   11185:	nop
   11186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011190 <flag_string>:
   11190:	lea    rax,[rip+0x254129]        # 2652c0 <flagstring.6937>
   11197:	lea    rdx,[rax+0x20]
   1119b:	nop    DWORD PTR [rax+rax*1+0x0]
   111a0:	mov    BYTE PTR [rax],0x2d
   111a3:	add    rax,0x1
   111a7:	cmp    rdx,rax
   111aa:	jne    111a0 <flag_string+0x10>
   111ac:	movzx  eax,BYTE PTR [rdi+0x8]
   111b0:	test   al,0x1
   111b2:	je     11258 <flag_string+0xc8>
   111b8:	mov    BYTE PTR [rip+0x254101],0x64        # 2652c0 <flagstring.6937>
   111bf:	test   al,0x4
   111c1:	je     111ca <flag_string+0x3a>
   111c3:	mov    BYTE PTR [rip+0x2540f7],0x67        # 2652c1 <flagstring.6937+0x1>
   111ca:	test   al,0x8
   111cc:	je     111d5 <flag_string+0x45>
   111ce:	mov    BYTE PTR [rip+0x2540ed],0x70        # 2652c2 <flagstring.6937+0x2>
   111d5:	movzx  eax,BYTE PTR [rdi+0x9]
   111d9:	test   al,0x1
   111db:	je     111e4 <flag_string+0x54>
   111dd:	mov    BYTE PTR [rip+0x2540df],0x44        # 2652c3 <flagstring.6937+0x3>
   111e4:	test   al,0x2
   111e6:	je     111ef <flag_string+0x5f>
   111e8:	mov    BYTE PTR [rip+0x2540d5],0x50        # 2652c4 <flagstring.6937+0x4>
   111ef:	test   al,0x4
   111f1:	je     111fa <flag_string+0x6a>
   111f3:	mov    BYTE PTR [rip+0x2540cb],0x77        # 2652c5 <flagstring.6937+0x5>
   111fa:	test   al,0x8
   111fc:	je     11205 <flag_string+0x75>
   111fe:	mov    BYTE PTR [rip+0x2540c1],0x47        # 2652c6 <flagstring.6937+0x6>
   11205:	test   al,0x20
   11207:	je     11210 <flag_string+0x80>
   11209:	mov    BYTE PTR [rip+0x2540b7],0x65        # 2652c7 <flagstring.6937+0x7>
   11210:	movzx  eax,BYTE PTR [rdi+0xa]
   11214:	test   al,0x2
   11216:	je     1121f <flag_string+0x8f>
   11218:	mov    BYTE PTR [rip+0x2540a9],0x48        # 2652c8 <flagstring.6937+0x8>
   1121f:	test   al,0x4
   11221:	je     1122a <flag_string+0x9a>
   11223:	mov    BYTE PTR [rip+0x25409f],0x75        # 2652c9 <flagstring.6937+0x9>
   1122a:	test   al,0x8
   1122c:	je     11239 <flag_string+0xa9>
   1122e:	mov    BYTE PTR [rip+0x254095],0x61        # 2652ca <flagstring.6937+0xa>
   11235:	movzx  eax,BYTE PTR [rdi+0xa]
   11239:	test   al,0x10
   1123b:	je     11244 <flag_string+0xb4>
   1123d:	mov    BYTE PTR [rip+0x254087],0x78        # 2652cb <flagstring.6937+0xb>
   11244:	mov    BYTE PTR [rip+0x254081],0x0        # 2652cc <flagstring.6937+0xc>
   1124b:	lea    rax,[rip+0x25406e]        # 2652c0 <flagstring.6937>
   11252:	ret    
   11253:	nop    DWORD PTR [rax+rax*1+0x0]
   11258:	test   al,0x2
   1125a:	je     111bf <flag_string+0x2f>
   11260:	mov    BYTE PTR [rip+0x254059],0x61        # 2652c0 <flagstring.6937>
   11267:	jmp    111bf <flag_string+0x2f>
   1126c:	nop    DWORD PTR [rax+0x0]

0000000000011270 <shadow_fault_generic_dump>:
   11270:	push   r14
   11272:	push   r13
   11274:	mov    r14,rcx
   11277:	push   r12
   11279:	push   rbp
   1127a:	mov    r13,rdx
   1127d:	push   rbx
   1127e:	mov    ebp,edi
   11280:	mov    rbx,rsi
   11283:	movzx  r9d,dil
   11287:	sub    rsp,0x20
   1128b:	mov    rax,QWORD PTR fs:0x28
   11294:	mov    QWORD PTR [rsp+0x18],rax
   11299:	xor    eax,eax
   1129b:	cmp    dil,0xd
   1129f:	ja     11330 <shadow_fault_generic_dump+0xc0>
   112a5:	lea    rdx,[rip+0x2182b4]        # 229560 <pf_xen_name>
   112ac:	movsxd rax,r9d
   112af:	mov    r8,QWORD PTR [rdx+rax*8]
   112b3:	test   r8,r8
   112b6:	je     11330 <shadow_fault_generic_dump+0xc0>
   112b8:	mov    r9d,ebp
   112bb:	lea    rsi,[rip+0xc2fa]        # 1d5bc <_IO_stdin_used+0x5fc>
   112c2:	lea    r12,[rbx+0x10]
   112c6:	shr    r9d,0x8
   112ca:	lea    rbp,[rip+0xc260]        # 1d531 <_IO_stdin_used+0x571>
   112d1:	mov    rcx,r14
   112d4:	and    r9d,0xf
   112d8:	mov    rdx,r13
   112db:	mov    edi,0x1
   112e0:	xor    eax,eax
   112e2:	call   44f0 <__printf_chk@plt>
   112e7:	mov    edx,DWORD PTR [rbx]
   112e9:	xor    eax,eax
   112eb:	mov    rsi,rbp
   112ee:	mov    edi,0x1
   112f3:	add    rbx,0x4
   112f7:	call   44f0 <__printf_chk@plt>
   112fc:	cmp    r12,rbx
   112ff:	jne    112e7 <shadow_fault_generic_dump+0x77>
   11301:	lea    rdi,[rip+0xc22d]        # 1d535 <_IO_stdin_used+0x575>
   11308:	call   4380 <puts@plt>
   1130d:	mov    rax,QWORD PTR [rsp+0x18]
   11312:	xor    rax,QWORD PTR fs:0x28
   1131b:	jne    1135d <shadow_fault_generic_dump+0xed>
   1131d:	add    rsp,0x20
   11321:	pop    rbx
   11322:	pop    rbp
   11323:	pop    r12
   11325:	pop    r13
   11327:	pop    r14
   11329:	ret    
   1132a:	nop    WORD PTR [rax+rax*1+0x0]
   11330:	lea    r12,[rsp+0xe]
   11335:	lea    r8,[rip+0xc1e6]        # 1d522 <_IO_stdin_used+0x562>
   1133c:	mov    ecx,0xa
   11341:	mov    edx,0x1
   11346:	mov    esi,0xa
   1134b:	xor    eax,eax
   1134d:	mov    rdi,r12
   11350:	call   4320 <__snprintf_chk@plt>
   11355:	mov    r8,r12
   11358:	jmp    112b8 <shadow_fault_generic_dump+0x48>
   1135d:	call   43c0 <__stack_chk_fail@plt>
   11362:	nop    DWORD PTR [rax+0x0]
   11366:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011370 <shadow_fault_generic_process>:
   11370:	push   rbp
   11371:	push   rbx
   11372:	mov    rbx,rsi
   11375:	sub    rsp,0x8
   11379:	mov    ebp,DWORD PTR [rdi+0x10]
   1137c:	test   BYTE PTR [rip+0x217d1e],0x40        # 2290a1 <opt+0x1>
   11383:	mov    DWORD PTR [rsi+0x28348],ebp
   11389:	mov    rax,QWORD PTR [rdi+0x20]
   1138d:	movdqu xmm0,XMMWORD PTR [rax]
   11391:	movups XMMWORD PTR [rsi+0x2834c],xmm0
   11398:	jne    11400 <shadow_fault_generic_process+0x90>
   1139a:	lea    rdx,[rip+0xffffffffffffb78f]        # cb30 <hvm_generic_postprocess>
   113a1:	and    ebp,0xff
   113a7:	mov    rax,QWORD PTR [rbx+0x283d8]
   113ae:	mov    DWORD PTR [rbx+0x28358],ebp
   113b4:	cmp    rax,rdx
   113b7:	je     113e8 <shadow_fault_generic_process+0x78>
   113b9:	test   rax,rax
   113bc:	je     113e8 <shadow_fault_generic_process+0x78>
   113be:	mov    rdi,QWORD PTR [rip+0x253e93]        # 265258 <warn>
   113c5:	add    rsp,0x8
   113c9:	lea    rcx,[rip+0x12080]        # 23450 <__func__.7137>
   113d0:	pop    rbx
   113d1:	pop    rbp
   113d2:	lea    rdx,[rip+0xe95f]        # 1fd38 <_IO_stdin_used+0x2d78>
   113d9:	mov    esi,0x1
   113de:	xor    eax,eax
   113e0:	jmp    4560 <__fprintf_chk@plt>
   113e5:	nop    DWORD PTR [rax]
   113e8:	lea    rax,[rip+0xffffffffffff95f1]        # a9e0 <shadow_fault_generic_postprocess>
   113ef:	mov    QWORD PTR [rbx+0x283d8],rax
   113f6:	add    rsp,0x8
   113fa:	pop    rbx
   113fb:	pop    rbp
   113fc:	ret    
   113fd:	nop    DWORD PTR [rax]
   11400:	lea    rcx,[rdi+0x28]
   11404:	lea    rsi,[rsi+0x2834c]
   1140b:	lea    rdx,[rip+0xc124]        # 1d536 <_IO_stdin_used+0x576>
   11412:	mov    edi,ebp
   11414:	call   11270 <shadow_fault_generic_dump>
   11419:	jmp    1139a <shadow_fault_generic_process+0x2a>
   1141e:	xchg   ax,ax

0000000000011420 <shadow_resync_process>:
   11420:	test   BYTE PTR [rip+0x217c7a],0x40        # 2290a1 <opt+0x1>
   11427:	push   rbx
   11428:	mov    rbx,rsi
   1142b:	je     11464 <shadow_resync_process+0x44>
   1142d:	mov    rax,QWORD PTR [rdi+0x20]
   11431:	cmp    DWORD PTR [rdi+0x10],0x40f00e
   11438:	lea    rdx,[rip+0xc199]        # 1d5d8 <_IO_stdin_used+0x618>
   1143f:	lea    rcx,[rip+0xc18d]        # 1d5d3 <_IO_stdin_used+0x613>
   11446:	lea    rsi,[rip+0xc190]        # 1d5dd <_IO_stdin_used+0x61d>
   1144d:	mov    r8,QWORD PTR [rax]
   11450:	cmovne rcx,rdx
   11454:	lea    rdx,[rdi+0x28]
   11458:	xor    eax,eax
   1145a:	mov    edi,0x1
   1145f:	call   44f0 <__printf_chk@plt>
   11464:	add    DWORD PTR [rbx+0x283d0],0x1
   1146b:	pop    rbx
   1146c:	ret    
   1146d:	nop    DWORD PTR [rax]

0000000000011470 <shadow_prealloc_unpin_process>:
   11470:	push   rbp
   11471:	push   rbx
   11472:	mov    rbx,rsi
   11475:	sub    rsp,0x8
   11479:	test   BYTE PTR [rip+0x217c21],0x40        # 2290a1 <opt+0x1>
   11480:	mov    rbp,QWORD PTR [rdi+0x20]
   11484:	jne    114f0 <shadow_prealloc_unpin_process+0x80>
   11486:	test   BYTE PTR [rbx+0x28408],0x2
   1148d:	jne    114c8 <shadow_prealloc_unpin_process+0x58>
   1148f:	or     BYTE PTR [rbx+0x28408],0x2
   11496:	test   BYTE PTR [rip+0x217c05],0x20        # 2290a2 <opt+0x2>
   1149d:	jne    114b0 <shadow_prealloc_unpin_process+0x40>
   1149f:	add    rsp,0x8
   114a3:	pop    rbx
   114a4:	pop    rbp
   114a5:	ret    
   114a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   114b0:	mov    rdi,QWORD PTR [rbx+0x10]
   114b4:	mov    rsi,QWORD PTR [rbp+0x0]
   114b8:	add    rsp,0x8
   114bc:	pop    rbx
   114bd:	pop    rbp
   114be:	jmp    f310 <cr3_prealloc_unpin>
   114c3:	nop    DWORD PTR [rax+rax*1+0x0]
   114c8:	mov    rcx,QWORD PTR [rip+0x253d89]        # 265258 <warn>
   114cf:	lea    rdi,[rip+0xedd2]        # 202a8 <_IO_stdin_used+0x32e8>
   114d6:	mov    edx,0x2f
   114db:	mov    esi,0x1
   114e0:	call   4550 <fwrite@plt>
   114e5:	jmp    1148f <shadow_prealloc_unpin_process+0x1f>
   114e7:	nop    WORD PTR [rax+rax*1+0x0]
   114f0:	mov    rcx,QWORD PTR [rbp+0x0]
   114f4:	lea    rdx,[rdi+0x28]
   114f8:	lea    rsi,[rip+0xc0fa]        # 1d5f9 <_IO_stdin_used+0x639>
   114ff:	mov    edi,0x1
   11504:	xor    eax,eax
   11506:	call   44f0 <__printf_chk@plt>
   1150b:	jmp    11486 <shadow_prealloc_unpin_process+0x16>

0000000000011510 <shadow_wrmap_bf_process>:
   11510:	test   BYTE PTR [rip+0x217b8a],0x40        # 2290a1 <opt+0x1>
   11517:	push   rbx
   11518:	mov    rbx,rsi
   1151b:	je     1153b <shadow_wrmap_bf_process+0x2b>
   1151d:	mov    rax,QWORD PTR [rdi+0x20]
   11521:	lea    rdx,[rdi+0x28]
   11525:	lea    rsi,[rip+0xc0ea]        # 1d616 <_IO_stdin_used+0x656>
   1152c:	mov    edi,0x1
   11531:	mov    rcx,QWORD PTR [rax]
   11534:	xor    eax,eax
   11536:	call   44f0 <__printf_chk@plt>
   1153b:	or     BYTE PTR [rbx+0x28408],0x4
   11542:	pop    rbx
   11543:	ret    
   11544:	xchg   ax,ax
   11546:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011550 <pv_hypercall_process>:
   11550:	test   BYTE PTR [rdi+0x11],0x1
   11554:	mov    rax,QWORD PTR [rdi+0x20]
   11558:	je     11598 <pv_hypercall_process+0x48>
   1155a:	mov    r8,QWORD PTR [rax]
   1155d:	mov    ecx,DWORD PTR [rax+0x8]
   11560:	mov    eax,DWORD PTR [rip+0x217b3e]        # 2290a4 <opt+0x4>
   11566:	test   eax,eax
   11568:	je     1156f <pv_hypercall_process+0x1f>
   1156a:	cmp    ecx,0x37
   1156d:	jbe    115a0 <pv_hypercall_process+0x50>
   1156f:	test   BYTE PTR [rip+0x217b2b],0x40        # 2290a1 <opt+0x1>
   11576:	je     115b0 <pv_hypercall_process+0x60>
   11578:	cmp    ecx,0x25
   1157b:	lea    rdx,[rdi+0x28]
   1157f:	jbe    115b8 <pv_hypercall_process+0x68>
   11581:	lea    rsi,[rip+0xc0a5]        # 1d62d <_IO_stdin_used+0x66d>
   11588:	mov    edi,0x1
   1158d:	xor    eax,eax
   1158f:	jmp    44f0 <__printf_chk@plt>
   11594:	nop    DWORD PTR [rax+0x0]
   11598:	mov    r8d,DWORD PTR [rax]
   1159b:	mov    ecx,DWORD PTR [rax+0x4]
   1159e:	jmp    11560 <pv_hypercall_process+0x10>
   115a0:	mov    eax,ecx
   115a2:	add    DWORD PTR [rsi+rax*4+0x40],0x1
   115a7:	test   BYTE PTR [rip+0x217af3],0x40        # 2290a1 <opt+0x1>
   115ae:	jne    11578 <pv_hypercall_process+0x28>
   115b0:	repz ret 
   115b2:	nop    WORD PTR [rax+rax*1+0x0]
   115b8:	lea    rax,[rip+0x218121]        # 2296e0 <hypercall_name>
   115bf:	mov    esi,ecx
   115c1:	mov    r9,r8
   115c4:	mov    edi,0x1
   115c9:	mov    r8,QWORD PTR [rax+rsi*8]
   115cd:	lea    rsi,[rip+0xed04]        # 202d8 <_IO_stdin_used+0x3318>
   115d4:	xor    eax,eax
   115d6:	jmp    44f0 <__printf_chk@plt>
   115db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115e0 <pv_trap_process>:
   115e0:	push   rbp
   115e1:	push   rbx
   115e2:	sub    rsp,0x8
   115e6:	test   BYTE PTR [rdi+0x11],0x1
   115ea:	mov    rax,QWORD PTR [rdi+0x20]
   115ee:	je     11630 <pv_trap_process+0x50>
   115f0:	movzx  ebx,BYTE PTR [rax+0x9]
   115f4:	movzx  ecx,WORD PTR [rax+0x8]
   115f8:	movzx  ebp,WORD PTR [rax+0xa]
   115fc:	mov    r8,QWORD PTR [rax]
   115ff:	shr    bl,0x7
   11602:	and    ecx,0x7fff
   11608:	movzx  ebx,bl
   1160b:	mov    eax,DWORD PTR [rip+0x217a93]        # 2290a4 <opt+0x4>
   11611:	test   eax,eax
   11613:	je     1161a <pv_trap_process+0x3a>
   11615:	cmp    ecx,0x13
   11618:	jbe    11650 <pv_trap_process+0x70>
   1161a:	test   BYTE PTR [rip+0x217a80],0x40        # 2290a1 <opt+0x1>
   11621:	jne    11663 <pv_trap_process+0x83>
   11623:	add    rsp,0x8
   11627:	pop    rbx
   11628:	pop    rbp
   11629:	ret    
   1162a:	nop    WORD PTR [rax+rax*1+0x0]
   11630:	movzx  ebx,BYTE PTR [rax+0x5]
   11634:	movzx  ecx,WORD PTR [rax+0x4]
   11638:	mov    r8d,DWORD PTR [rax]
   1163b:	movzx  ebp,WORD PTR [rax+0x6]
   1163f:	shr    bl,0x7
   11642:	and    ecx,0x7fff
   11648:	movzx  ebx,bl
   1164b:	jmp    1160b <pv_trap_process+0x2b>
   1164d:	nop    DWORD PTR [rax]
   11650:	mov    eax,ecx
   11652:	add    DWORD PTR [rsi+rax*4+0x120],0x1
   1165a:	test   BYTE PTR [rip+0x217a40],0x40        # 2290a1 <opt+0x1>
   11661:	je     11623 <pv_trap_process+0x43>
   11663:	lea    rdx,[rdi+0x28]
   11667:	lea    rsi,[rip+0xbfda]        # 1d648 <_IO_stdin_used+0x688>
   1166e:	xor    eax,eax
   11670:	mov    edi,0x1
   11675:	call   44f0 <__printf_chk@plt>
   1167a:	test   ebx,ebx
   1167c:	jne    11690 <pv_trap_process+0xb0>
   1167e:	add    rsp,0x8
   11682:	mov    edi,0xa
   11687:	pop    rbx
   11688:	pop    rbp
   11689:	jmp    4340 <putchar@plt>
   1168e:	xchg   ax,ax
   11690:	add    rsp,0x8
   11694:	mov    edx,ebp
   11696:	lea    rsi,[rip+0xbfc0]        # 1d65d <_IO_stdin_used+0x69d>
   1169d:	pop    rbx
   1169e:	pop    rbp
   1169f:	mov    edi,0x1
   116a4:	xor    eax,eax
   116a6:	jmp    44f0 <__printf_chk@plt>
   116ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116b0 <pv_generic_process>:
   116b0:	test   BYTE PTR [rip+0x2179ea],0x40        # 2290a1 <opt+0x1>
   116b7:	je     117a0 <pv_generic_process+0xf0>
   116bd:	push   r13
   116bf:	push   r12
   116c1:	lea    rdx,[rdi+0x28]
   116c5:	push   rbp
   116c6:	push   rbx
   116c7:	mov    rbx,rdi
   116ca:	sub    rsp,0x8
   116ce:	mov    eax,DWORD PTR [rdi+0x10]
   116d1:	cmp    al,0xe
   116d3:	movzx  ecx,al
   116d6:	ja     11770 <pv_generic_process+0xc0>
   116dc:	lea    rsi,[rip+0x217d9d]        # 229480 <pv_name>
   116e3:	movsxd rax,ecx
   116e6:	mov    rax,QWORD PTR [rsi+rax*8]
   116ea:	test   rax,rax
   116ed:	je     11770 <pv_generic_process+0xc0>
   116f3:	lea    rsi,[rip+0xbf6b]        # 1d665 <_IO_stdin_used+0x6a5>
   116fa:	mov    rcx,rax
   116fd:	mov    edi,0x1
   11702:	xor    eax,eax
   11704:	call   44f0 <__printf_chk@plt>
   11709:	mov    edx,DWORD PTR [rbx+0x14]
   1170c:	test   edx,edx
   1170e:	je     1178a <pv_generic_process+0xda>
   11710:	lea    rsi,[rip+0xbf60]        # 1d677 <_IO_stdin_used+0x6b7>
   11717:	xor    eax,eax
   11719:	mov    edi,0x1
   1171e:	call   44f0 <__printf_chk@plt>
   11723:	mov    eax,DWORD PTR [rbx+0x14]
   11726:	test   eax,eax
   11728:	jle    11763 <pv_generic_process+0xb3>
   1172a:	lea    r13,[rip+0xbf49]        # 1d67a <_IO_stdin_used+0x6ba>
   11731:	xor    r12d,r12d
   11734:	xor    ebp,ebp
   11736:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11740:	mov    rax,QWORD PTR [rbx+0x20]
   11744:	mov    rsi,r13
   11747:	mov    edi,0x1
   1174c:	add    ebp,0x1
   1174f:	mov    edx,DWORD PTR [rax+r12*1]
   11753:	xor    eax,eax
   11755:	add    r12,0x4
   11759:	call   44f0 <__printf_chk@plt>
   1175e:	cmp    ebp,DWORD PTR [rbx+0x14]
   11761:	jl     11740 <pv_generic_process+0x90>
   11763:	mov    edi,0x5d
   11768:	call   4340 <putchar@plt>
   1176d:	jmp    1178a <pv_generic_process+0xda>
   1176f:	nop
   11770:	lea    rsi,[rip+0xbef5]        # 1d66c <_IO_stdin_used+0x6ac>
   11777:	xor    eax,eax
   11779:	mov    edi,0x1
   1177e:	call   44f0 <__printf_chk@plt>
   11783:	mov    edx,DWORD PTR [rbx+0x14]
   11786:	test   edx,edx
   11788:	jne    11710 <pv_generic_process+0x60>
   1178a:	add    rsp,0x8
   1178e:	mov    edi,0xa
   11793:	pop    rbx
   11794:	pop    rbp
   11795:	pop    r12
   11797:	pop    r13
   11799:	jmp    4340 <putchar@plt>
   1179e:	xchg   ax,ax
   117a0:	repz ret 
   117a2:	nop    DWORD PTR [rax+0x0]
   117a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000117b0 <pv_summary>:
   117b0:	test   BYTE PTR [rdi],0x1
   117b3:	jne    117c0 <pv_summary+0x10>
   117b5:	repz ret 
   117b7:	nop    WORD PTR [rax+rax*1+0x0]
   117c0:	jmp    6f80 <pv_summary.part.22>
   117c5:	nop
   117c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000117d0 <pv_hypercall_gather_args>:
   117d0:	pxor   xmm0,xmm0
   117d4:	mov    ecx,0x14
   117d9:	mov    edx,0x1
   117de:	movups XMMWORD PTR [rsi],xmm0
   117e1:	movups XMMWORD PTR [rsi+0x10],xmm0
   117e5:	movups XMMWORD PTR [rsi+0x20],xmm0
   117e9:	cmp    DWORD PTR [rdi+0x14],edx
   117ec:	jle    1182c <pv_hypercall_gather_args+0x5c>
   117ee:	mov    r8,QWORD PTR [rdi+0x20]
   117f2:	mov    eax,DWORD PTR [r8]
   117f5:	shr    eax,cl
   117f7:	and    eax,0x3
   117fa:	cmp    eax,0x1
   117fd:	je     11830 <pv_hypercall_gather_args+0x60>
   117ff:	cmp    eax,0x2
   11802:	jne    1181e <pv_hypercall_gather_args+0x4e>
   11804:	movsxd r10,edx
   11807:	add    r10,0x1
   1180b:	mov    r9d,DWORD PTR [r8+r10*4]
   1180f:	mov    r8d,DWORD PTR [r8+r10*4-0x4]
   11814:	shl    r9,0x20
   11818:	or     r8,r9
   1181b:	mov    QWORD PTR [rsi],r8
   1181e:	add    ecx,0x2
   11821:	add    edx,eax
   11823:	add    rsi,0x8
   11827:	cmp    ecx,0x20
   1182a:	jne    117e9 <pv_hypercall_gather_args+0x19>
   1182c:	repz ret 
   1182e:	xchg   ax,ax
   11830:	movsxd r9,edx
   11833:	mov    r11d,DWORD PTR [r8+r9*4]
   11837:	mov    QWORD PTR [rsi],r11
   1183a:	jmp    1181e <pv_hypercall_gather_args+0x4e>
   1183c:	nop    DWORD PTR [rax+0x0]

0000000000011840 <pv_hypercall_v2_process>:
   11840:	push   r14
   11842:	push   r13
   11844:	mov    rcx,rdx
   11847:	push   r12
   11849:	push   rbp
   1184a:	mov    rbp,rdi
   1184d:	push   rbx
   1184e:	sub    rsp,0x40
   11852:	mov    rax,QWORD PTR fs:0x28
   1185b:	mov    QWORD PTR [rsp+0x38],rax
   11860:	xor    eax,eax
   11862:	mov    rax,QWORD PTR [rdi+0x20]
   11866:	mov    ebx,DWORD PTR [rax]
   11868:	mov    eax,DWORD PTR [rip+0x217836]        # 2290a4 <opt+0x4>
   1186e:	and    ebx,0xfffff
   11874:	test   eax,eax
   11876:	je     11881 <pv_hypercall_v2_process+0x41>
   11878:	cmp    ebx,0x37
   1187b:	jbe    11980 <pv_hypercall_v2_process+0x140>
   11881:	test   BYTE PTR [rip+0x217819],0x40        # 2290a1 <opt+0x1>
   11888:	je     1191a <pv_hypercall_v2_process+0xda>
   1188e:	cmp    ebx,0x25
   11891:	lea    rdx,[rbp+0x28]
   11895:	jbe    11940 <pv_hypercall_v2_process+0x100>
   1189b:	lea    rsi,[rip+0xbe02]        # 1d6a4 <_IO_stdin_used+0x6e4>
   118a2:	mov    r8d,ebx
   118a5:	mov    edi,0x1
   118aa:	xor    eax,eax
   118ac:	call   44f0 <__printf_chk@plt>
   118b1:	lea    r14,[rip+0xbe33]        # 1d6eb <_IO_stdin_used+0x72b>
   118b8:	mov    r12d,0x14
   118be:	mov    r13d,0x1
   118c4:	cmp    DWORD PTR [rbp+0x14],r13d
   118c8:	jle    11910 <pv_hypercall_v2_process+0xd0>
   118ca:	mov    rax,QWORD PTR [rbp+0x20]
   118ce:	mov    ecx,r12d
   118d1:	mov    ebx,DWORD PTR [rax]
   118d3:	shr    ebx,cl
   118d5:	and    ebx,0x3
   118d8:	cmp    ebx,0x1
   118db:	je     11b40 <pv_hypercall_v2_process+0x300>
   118e1:	cmp    ebx,0x2
   118e4:	je     11990 <pv_hypercall_v2_process+0x150>
   118ea:	test   ebx,ebx
   118ec:	jne    11901 <pv_hypercall_v2_process+0xc1>
   118ee:	lea    rsi,[rip+0xbdf2]        # 1d6e7 <_IO_stdin_used+0x727>
   118f5:	mov    edi,0x1
   118fa:	xor    eax,eax
   118fc:	call   44f0 <__printf_chk@plt>
   11901:	add    r12d,0x2
   11905:	add    r13d,ebx
   11908:	cmp    r12d,0x20
   1190c:	jne    118c4 <pv_hypercall_v2_process+0x84>
   1190e:	xchg   ax,ax
   11910:	mov    edi,0xa
   11915:	call   4340 <putchar@plt>
   1191a:	mov    rax,QWORD PTR [rsp+0x38]
   1191f:	xor    rax,QWORD PTR fs:0x28
   11928:	jne    11b8d <pv_hypercall_v2_process+0x34d>
   1192e:	add    rsp,0x40
   11932:	pop    rbx
   11933:	pop    rbp
   11934:	pop    r12
   11936:	pop    r13
   11938:	pop    r14
   1193a:	ret    
   1193b:	nop    DWORD PTR [rax+rax*1+0x0]
   11940:	lea    rsi,[rip+0x217d99]        # 2296e0 <hypercall_name>
   11947:	movsxd rax,ebx
   1194a:	mov    r8d,ebx
   1194d:	mov    edi,0x1
   11952:	mov    r9,QWORD PTR [rsi+rax*8]
   11956:	lea    rsi,[rip+0xbd2e]        # 1d68b <_IO_stdin_used+0x6cb>
   1195d:	xor    eax,eax
   1195f:	call   44f0 <__printf_chk@plt>
   11964:	cmp    ebx,0x1d
   11967:	ja     118b1 <pv_hypercall_v2_process+0x71>
   1196d:	lea    rdx,[rip+0x11628]        # 22f9c <_IO_stdin_used+0x5fdc>
   11974:	movsxd rax,DWORD PTR [rdx+rbx*4]
   11978:	add    rax,rdx
   1197b:	jmp    rax
   1197d:	nop    DWORD PTR [rax]
   11980:	mov    eax,ebx
   11982:	add    DWORD PTR [rsi+rax*4+0x40],0x1
   11987:	jmp    11881 <pv_hypercall_v2_process+0x41>
   1198c:	nop    DWORD PTR [rax+0x0]
   11990:	movsxd rcx,r13d
   11993:	lea    rsi,[rip+0xbd57]        # 1d6f1 <_IO_stdin_used+0x731>
   1199a:	mov    edi,0x1
   1199f:	add    rcx,0x1
   119a3:	mov    edx,DWORD PTR [rax+rcx*4]
   119a6:	mov    eax,DWORD PTR [rax+rcx*4-0x4]
   119aa:	shl    rdx,0x20
   119ae:	or     rdx,rax
   119b1:	xor    eax,eax
   119b3:	call   44f0 <__printf_chk@plt>
   119b8:	jmp    11901 <pv_hypercall_v2_process+0xc1>
   119bd:	nop    DWORD PTR [rax]
   119c0:	mov    rdi,rbp
   119c3:	mov    rsi,rsp
   119c6:	call   117d0 <pv_hypercall_gather_args>
   119cb:	mov    rdi,QWORD PTR [rsp]
   119cf:	mov    eax,edi
   119d1:	cmp    rax,0x6
   119d5:	ja     11b60 <pv_hypercall_v2_process+0x320>
   119db:	lea    rdx,[rip+0x2177be]        # 2291a0 <sched_op_str>
   119e2:	mov    rdx,QWORD PTR [rdx+rax*8]
   119e6:	lea    rsi,[rip+0xb7db]        # 1d1c8 <_IO_stdin_used+0x208>
   119ed:	mov    edi,0x1
   119f2:	xor    eax,eax
   119f4:	call   44f0 <__printf_chk@plt>
   119f9:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   119fe:	xchg   ax,ax
   11a00:	mov    rsi,rsp
   11a03:	mov    rdi,rbp
   11a06:	call   117d0 <pv_hypercall_gather_args>
   11a0b:	mov    edx,DWORD PTR [rsp+0x8]
   11a0f:	lea    rsi,[rip+0xbcbd]        # 1d6d3 <_IO_stdin_used+0x713>
   11a16:	mov    edi,0x1
   11a1b:	xor    eax,eax
   11a1d:	call   44f0 <__printf_chk@plt>
   11a22:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   11a27:	nop    WORD PTR [rax+rax*1+0x0]
   11a30:	mov    rdi,rbp
   11a33:	mov    rsi,rsp
   11a36:	call   117d0 <pv_hypercall_gather_args>
   11a3b:	mov    rdi,QWORD PTR [rsp]
   11a3f:	mov    rbx,QWORD PTR [rsp+0x8]
   11a44:	mov    eax,edi
   11a46:	cmp    rax,0xd
   11a4a:	ja     11b80 <pv_hypercall_v2_process+0x340>
   11a50:	lea    rdx,[rip+0x217789]        # 2291e0 <vcpu_op_str>
   11a57:	mov    rdx,QWORD PTR [rdx+rax*8]
   11a5b:	lea    rsi,[rip+0xbc79]        # 1d6db <_IO_stdin_used+0x71b>
   11a62:	mov    ecx,ebx
   11a64:	mov    edi,0x1
   11a69:	xor    eax,eax
   11a6b:	call   44f0 <__printf_chk@plt>
   11a70:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   11a75:	nop    DWORD PTR [rax]
   11a78:	mov    rdi,rbp
   11a7b:	mov    rsi,rsp
   11a7e:	call   117d0 <pv_hypercall_gather_args>
   11a83:	mov    rdi,QWORD PTR [rsp]
   11a87:	mov    rbx,QWORD PTR [rsp+0x10]
   11a8c:	mov    eax,edi
   11a8e:	cmp    rax,0xb
   11a92:	ja     11b70 <pv_hypercall_v2_process+0x330>
   11a98:	lea    rdx,[rip+0x2177c1]        # 229260 <grant_table_op_str>
   11a9f:	mov    rdx,QWORD PTR [rdx+rax*8]
   11aa3:	lea    rsi,[rip+0xbc26]        # 1d6d0 <_IO_stdin_used+0x710>
   11aaa:	mov    ecx,ebx
   11aac:	mov    edi,0x1
   11ab1:	xor    eax,eax
   11ab3:	call   44f0 <__printf_chk@plt>
   11ab8:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   11abd:	nop    DWORD PTR [rax]
   11ac0:	mov    rsi,rsp
   11ac3:	mov    rdi,rbp
   11ac6:	call   117d0 <pv_hypercall_gather_args>
   11acb:	mov    edx,DWORD PTR [rsp+0x8]
   11acf:	lea    rsi,[rip+0xbbf0]        # 1d6c6 <_IO_stdin_used+0x706>
   11ad6:	mov    edi,0x1
   11adb:	xor    eax,eax
   11add:	call   44f0 <__printf_chk@plt>
   11ae2:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   11ae7:	nop    WORD PTR [rax+rax*1+0x0]
   11af0:	mov    rsi,rsp
   11af3:	mov    rdi,rbp
   11af6:	call   117d0 <pv_hypercall_gather_args>
   11afb:	mov    rdx,QWORD PTR [rsp+0x8]
   11b00:	lea    rax,[rip+0xbb77]        # 1d67e <_IO_stdin_used+0x6be>
   11b07:	lea    rcx,[rip+0xbf77]        # 1da85 <_IO_stdin_used+0xac5>
   11b0e:	lea    rsi,[rip+0xbba3]        # 1d6b8 <_IO_stdin_used+0x6f8>
   11b15:	mov    edi,0x1
   11b1a:	test   edx,0x80000000
   11b20:	cmovne rcx,rax
   11b24:	and    edx,0x7fffffff
   11b2a:	xor    eax,eax
   11b2c:	call   44f0 <__printf_chk@plt>
   11b31:	jmp    11910 <pv_hypercall_v2_process+0xd0>
   11b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11b40:	movsxd rdx,r13d
   11b43:	mov    rsi,r14
   11b46:	mov    edi,0x1
   11b4b:	mov    edx,DWORD PTR [rax+rdx*4]
   11b4e:	xor    eax,eax
   11b50:	call   44f0 <__printf_chk@plt>
   11b55:	jmp    11901 <pv_hypercall_v2_process+0xc1>
   11b5a:	nop    WORD PTR [rax+rax*1+0x0]
   11b60:	call   49e0 <cmd_to_str.part.4>
   11b65:	mov    rdx,rax
   11b68:	jmp    119e6 <pv_hypercall_v2_process+0x1a6>
   11b6d:	nop    DWORD PTR [rax]
   11b70:	call   49e0 <cmd_to_str.part.4>
   11b75:	mov    rdx,rax
   11b78:	jmp    11aa3 <pv_hypercall_v2_process+0x263>
   11b7d:	nop    DWORD PTR [rax]
   11b80:	call   49e0 <cmd_to_str.part.4>
   11b85:	mov    rdx,rax
   11b88:	jmp    11a5b <pv_hypercall_v2_process+0x21b>
   11b8d:	call   43c0 <__stack_chk_fail@plt>
   11b92:	nop    DWORD PTR [rax+0x0]
   11b96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011ba0 <vcpu_create>:
   11ba0:	movsxd rax,esi
   11ba3:	push   r13
   11ba5:	push   r12
   11ba7:	lea    r13,[rdi+rax*8]
   11bab:	push   rbp
   11bac:	push   rbx
   11bad:	sub    rsp,0x8
   11bb1:	cmp    QWORD PTR [r13+0x10],0x0
   11bb6:	jne    11c86 <vcpu_create+0xe6>
   11bbc:	mov    r8d,DWORD PTR [rdi+0x8]
   11bc0:	mov    rbp,rdi
   11bc3:	mov    rdi,QWORD PTR [rip+0x25368e]        # 265258 <warn>
   11bca:	lea    rdx,[rip+0xbb3d]        # 1d70e <_IO_stdin_used+0x74e>
   11bd1:	mov    ecx,eax
   11bd3:	mov    esi,0x1
   11bd8:	mov    r12,rax
   11bdb:	xor    eax,eax
   11bdd:	call   4560 <__fprintf_chk@plt>
   11be2:	mov    edi,0x2c028
   11be7:	call   4490 <malloc@plt>
   11bec:	test   rax,rax
   11bef:	mov    rbx,rax
   11bf2:	je     11c48 <vcpu_create+0xa8>
   11bf4:	xor    esi,esi
   11bf6:	mov    edx,0x2c028
   11bfb:	mov    rdi,rbx
   11bfe:	call   4420 <memset@plt>
   11c03:	mov    QWORD PTR [r13+0x10],rbx
   11c07:	cmp    DWORD PTR [rbp+0x810],r12d
   11c0e:	mov    DWORD PTR [rbx],r12d
   11c11:	mov    QWORD PTR [rbx+0x8],rbp
   11c15:	mov    QWORD PTR [rbx+0x50],0x0
   11c1d:	mov    DWORD PTR [rbx+0x18],0x6
   11c24:	mov    DWORD PTR [rbx+0x28],0x6
   11c2b:	jge    11c34 <vcpu_create+0x94>
   11c2d:	mov    DWORD PTR [rbp+0x810],r12d
   11c34:	add    rsp,0x8
   11c38:	mov    rax,rbx
   11c3b:	pop    rbx
   11c3c:	pop    rbp
   11c3d:	pop    r12
   11c3f:	pop    r13
   11c41:	ret    
   11c42:	nop    WORD PTR [rax+rax*1+0x0]
   11c48:	mov    rdi,QWORD PTR [rip+0x21a7f1]        # 22c440 <stderr@@GLIBC_2.2.5>
   11c4f:	lea    rcx,[rip+0x117b2]        # 23408 <__func__.7373>
   11c56:	lea    rdx,[rip+0xbace]        # 1d72b <_IO_stdin_used+0x76b>
   11c5d:	xor    eax,eax
   11c5f:	mov    r8d,0x1338
   11c65:	mov    esi,0x1
   11c6a:	call   4560 <__fprintf_chk@plt>
   11c6f:	cmp    DWORD PTR [rip+0x21746a],0x7        # 2290e0 <opt+0x40>
   11c76:	ja     11bf4 <vcpu_create+0x54>
   11c7c:	mov    edi,0x1
   11c81:	call   4540 <exit@plt>
   11c86:	lea    rcx,[rip+0x1178b]        # 23418 <__PRETTY_FUNCTION__.7372>
   11c8d:	lea    rsi,[rip+0xb3f4]        # 1d088 <_IO_stdin_used+0xc8>
   11c94:	lea    rdi,[rip+0xba5e]        # 1d6f9 <_IO_stdin_used+0x739>
   11c9b:	mov    edx,0x19f9
   11ca0:	call   4400 <__assert_fail@plt>
   11ca5:	nop
   11ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011cb0 <domain_init>:
   11cb0:	mov    QWORD PTR [rdi+0x1330],0x0
   11cbb:	mov    rdx,rdi
   11cbe:	lea    rdi,[rdi+0x8]
   11cc2:	mov    rcx,rdx
   11cc5:	xor    eax,eax
   11cc7:	and    rdi,0xfffffffffffffff8
   11ccb:	sub    rcx,rdi
   11cce:	add    ecx,0x1338
   11cd4:	shr    ecx,0x3
   11cd7:	rep stos QWORD PTR es:[rdi],rax
   11cda:	mov    DWORD PTR [rdx+0x8],esi
   11cdd:	mov    QWORD PTR [rdx],0x0
   11ce4:	cmp    DWORD PTR [rip+0x217411],0x2        # 2290fc <opt+0x5c>
   11ceb:	je     11cf0 <domain_init+0x40>
   11ced:	repz ret 
   11cef:	nop
   11cf0:	mov    rdi,rdx
   11cf3:	jmp    8d30 <interval_domain_value_check>
   11cf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d00 <domain_create>:
   11d00:	push   rbp
   11d01:	push   rbx
   11d02:	mov    ecx,edi
   11d04:	mov    ebp,edi
   11d06:	lea    rdx,[rip+0xba36]        # 1d743 <_IO_stdin_used+0x783>
   11d0d:	mov    esi,0x1
   11d12:	sub    rsp,0x8
   11d16:	mov    rdi,QWORD PTR [rip+0x25353b]        # 265258 <warn>
   11d1d:	xor    eax,eax
   11d1f:	call   4560 <__fprintf_chk@plt>
   11d24:	mov    edi,0x1338
   11d29:	call   4490 <malloc@plt>
   11d2e:	test   rax,rax
   11d31:	mov    rbx,rax
   11d34:	je     11d50 <domain_create+0x50>
   11d36:	mov    esi,ebp
   11d38:	mov    rdi,rbx
   11d3b:	call   11cb0 <domain_init>
   11d40:	add    rsp,0x8
   11d44:	mov    rax,rbx
   11d47:	pop    rbx
   11d48:	pop    rbp
   11d49:	ret    
   11d4a:	nop    WORD PTR [rax+rax*1+0x0]
   11d50:	mov    rdi,QWORD PTR [rip+0x21a6e9]        # 22c440 <stderr@@GLIBC_2.2.5>
   11d57:	lea    rcx,[rip+0x1169a]        # 233f8 <__func__.7382>
   11d5e:	lea    rdx,[rip+0xb9c6]        # 1d72b <_IO_stdin_used+0x76b>
   11d65:	xor    eax,eax
   11d67:	mov    r8d,0x1338
   11d6d:	mov    esi,0x1
   11d72:	call   4560 <__fprintf_chk@plt>
   11d77:	cmp    DWORD PTR [rip+0x217362],0x7        # 2290e0 <opt+0x40>
   11d7e:	ja     11d36 <domain_create+0x36>
   11d80:	mov    edi,0x1
   11d85:	call   4540 <exit@plt>
   11d8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000011d90 <domain_find>:
   11d90:	push   rbp
   11d91:	push   rbx
   11d92:	sub    rsp,0x8
   11d96:	mov    rbx,QWORD PTR [rip+0x253493]        # 265230 <domain_list>
   11d9d:	test   rbx,rbx
   11da0:	je     11df0 <domain_find+0x60>
   11da2:	mov    edx,DWORD PTR [rbx+0x8]
   11da5:	cmp    edi,edx
   11da7:	jg     11db7 <domain_find+0x27>
   11da9:	jmp    11dd8 <domain_find+0x48>
   11dab:	nop    DWORD PTR [rax+rax*1+0x0]
   11db0:	mov    edx,DWORD PTR [rbx+0x8]
   11db3:	cmp    edx,edi
   11db5:	jge    11de0 <domain_find+0x50>
   11db7:	mov    rbp,rbx
   11dba:	mov    rbx,QWORD PTR [rbx]
   11dbd:	test   rbx,rbx
   11dc0:	jne    11db0 <domain_find+0x20>
   11dc2:	call   11d00 <domain_create>
   11dc7:	mov    QWORD PTR [rax],rbx
   11dca:	mov    QWORD PTR [rbp+0x0],rax
   11dce:	add    rsp,0x8
   11dd2:	pop    rbx
   11dd3:	pop    rbp
   11dd4:	ret    
   11dd5:	nop    DWORD PTR [rax]
   11dd8:	lea    rbp,[rip+0x253451]        # 265230 <domain_list>
   11ddf:	nop
   11de0:	cmp    edx,edi
   11de2:	mov    rax,rbx
   11de5:	jne    11dc2 <domain_find+0x32>
   11de7:	add    rsp,0x8
   11deb:	pop    rbx
   11dec:	pop    rbp
   11ded:	ret    
   11dee:	xchg   ax,ax
   11df0:	lea    rbp,[rip+0x253439]        # 265230 <domain_list>
   11df7:	jmp    11dc2 <domain_find+0x32>
   11df9:	nop    DWORD PTR [rax+0x0]

0000000000011e00 <vcpu_find>:
   11e00:	push   rbx
   11e01:	mov    ebx,esi
   11e03:	call   11d90 <domain_find>
   11e08:	movsxd rdx,ebx
   11e0b:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   11e10:	test   rdx,rdx
   11e13:	je     11e20 <vcpu_find+0x20>
   11e15:	mov    rax,rdx
   11e18:	pop    rbx
   11e19:	ret    
   11e1a:	nop    WORD PTR [rax+rax*1+0x0]
   11e20:	mov    esi,ebx
   11e22:	mov    rdi,rax
   11e25:	pop    rbx
   11e26:	jmp    11ba0 <vcpu_create>
   11e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e30 <pcpu_runstate_update>:
   11e30:	mov    rax,QWORD PTR [rdi+0x2d0]
   11e37:	test   rax,rax
   11e3a:	je     11e80 <pcpu_runstate_update+0x50>
   11e3c:	push   r12
   11e3e:	sub    rsi,rax
   11e41:	push   rbp
   11e42:	push   rbx
   11e43:	mov    rax,QWORD PTR [rdi+0x1a8]
   11e4a:	mov    rbx,rdi
   11e4d:	mov    rbp,rsi
   11e50:	mov    rax,QWORD PTR [rax+0x8]
   11e54:	cmp    DWORD PTR [rax+0x8],0x7fff
   11e5b:	je     11e88 <pcpu_runstate_update+0x58>
   11e5d:	add    DWORD PTR [rdi+0x310],0x1
   11e64:	test   rsi,rsi
   11e67:	jne    11f88 <pcpu_runstate_update+0x158>
   11e6d:	mov    QWORD PTR [rbx+0x2d0],0x0
   11e78:	pop    rbx
   11e79:	pop    rbp
   11e7a:	pop    r12
   11e7c:	ret    
   11e7d:	nop    DWORD PTR [rax]
   11e80:	repz ret 
   11e82:	nop    WORD PTR [rax+rax*1+0x0]
   11e88:	add    DWORD PTR [rdi+0x2d8],0x1
   11e8f:	test   rsi,rsi
   11e92:	je     11e6d <pcpu_runstate_update+0x3d>
   11e94:	mov    edx,DWORD PTR [rip+0x21723e]        # 2290d8 <opt+0x38>
   11e9a:	movsxd rcx,DWORD PTR [rdi+0x2dc]
   11ea1:	test   edx,edx
   11ea3:	mov    eax,ecx
   11ea5:	je     11f60 <pcpu_runstate_update+0x130>
   11eab:	mov    eax,DWORD PTR [rdi+0x2e0]
   11eb1:	cmp    eax,ecx
   11eb3:	jg     12098 <pcpu_runstate_update+0x268>
   11eb9:	test   ecx,ecx
   11ebb:	mov    r12d,DWORD PTR [rip+0x21721a]        # 2290dc <opt+0x3c>
   11ec2:	je     11ed2 <pcpu_runstate_update+0xa2>
   11ec4:	test   r12d,r12d
   11ec7:	je     11ed2 <pcpu_runstate_update+0xa2>
   11ec9:	cmp    eax,r12d
   11ecc:	jge    120de <pcpu_runstate_update+0x2ae>
   11ed2:	add    eax,eax
   11ed4:	cmovne edx,eax
   11ed7:	test   r12d,r12d
   11eda:	je     120d6 <pcpu_runstate_update+0x2a6>
   11ee0:	cmp    edx,r12d
   11ee3:	jle    120d6 <pcpu_runstate_update+0x2a6>
   11ee9:	mov    rdi,QWORD PTR [rbx+0x2f0]
   11ef0:	movsxd rsi,r12d
   11ef3:	shl    rsi,0x3
   11ef7:	call   44c0 <realloc@plt>
   11efc:	test   rax,rax
   11eff:	je     120c2 <pcpu_runstate_update+0x292>
   11f05:	mov    QWORD PTR [rbx+0x2f0],rax
   11f0c:	mov    DWORD PTR [rbx+0x2e0],r12d
   11f13:	movsxd rcx,DWORD PTR [rbx+0x2dc]
   11f1a:	cmp    ecx,r12d
   11f1d:	jl     12098 <pcpu_runstate_update+0x268>
   11f23:	mov    eax,ecx
   11f25:	cdq    
   11f26:	idiv   r12d
   11f29:	lea    esi,[rax+0x1]
   11f2c:	movsxd rdi,edx
   11f2f:	mov    edx,0x55555556
   11f34:	mov    eax,esi
   11f36:	imul   edx
   11f38:	mov    eax,esi
   11f3a:	sar    eax,0x1f
   11f3d:	sub    eax,edx
   11f3f:	add    eax,edi
   11f41:	cdq    
   11f42:	idiv   esi
   11f44:	mov    eax,ecx
   11f46:	test   edx,edx
   11f48:	jne    11f60 <pcpu_runstate_update+0x130>
   11f4a:	mov    rax,QWORD PTR [rbx+0x2f0]
   11f51:	mov    QWORD PTR [rax+rdi*8],rbp
   11f55:	mov    eax,DWORD PTR [rbx+0x2dc]
   11f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   11f60:	add    eax,0x1
   11f63:	add    QWORD PTR [rbx+0x2e8],rbp
   11f6a:	add    DWORD PTR [rbx+0x2f8],0x1
   11f71:	mov    DWORD PTR [rbx+0x2dc],eax
   11f77:	add    QWORD PTR [rbx+0x300],rbp
   11f7e:	jmp    11e6d <pcpu_runstate_update+0x3d>
   11f83:	nop    DWORD PTR [rax+rax*1+0x0]
   11f88:	mov    edx,DWORD PTR [rip+0x21714a]        # 2290d8 <opt+0x38>
   11f8e:	movsxd rcx,DWORD PTR [rdi+0x314]
   11f95:	test   edx,edx
   11f97:	mov    eax,ecx
   11f99:	je     1204b <pcpu_runstate_update+0x21b>
   11f9f:	mov    eax,DWORD PTR [rdi+0x318]
   11fa5:	cmp    eax,ecx
   11fa7:	jg     12080 <pcpu_runstate_update+0x250>
   11fad:	test   ecx,ecx
   11faf:	mov    r12d,DWORD PTR [rip+0x217126]        # 2290dc <opt+0x3c>
   11fb6:	je     11fc6 <pcpu_runstate_update+0x196>
   11fb8:	test   r12d,r12d
   11fbb:	je     11fc6 <pcpu_runstate_update+0x196>
   11fbd:	cmp    eax,r12d
   11fc0:	jge    120ce <pcpu_runstate_update+0x29e>
   11fc6:	add    eax,eax
   11fc8:	cmovne edx,eax
   11fcb:	cmp    edx,r12d
   11fce:	jle    120ba <pcpu_runstate_update+0x28a>
   11fd4:	test   r12d,r12d
   11fd7:	je     120ba <pcpu_runstate_update+0x28a>
   11fdd:	mov    rdi,QWORD PTR [rbx+0x328]
   11fe4:	movsxd rsi,r12d
   11fe7:	shl    rsi,0x3
   11feb:	call   44c0 <realloc@plt>
   11ff0:	test   rax,rax
   11ff3:	je     120ae <pcpu_runstate_update+0x27e>
   11ff9:	mov    QWORD PTR [rbx+0x328],rax
   12000:	mov    DWORD PTR [rbx+0x318],r12d
   12007:	movsxd rcx,DWORD PTR [rbx+0x314]
   1200e:	cmp    ecx,r12d
   12011:	jl     12080 <pcpu_runstate_update+0x250>
   12013:	mov    eax,ecx
   12015:	cdq    
   12016:	idiv   r12d
   12019:	lea    esi,[rax+0x1]
   1201c:	movsxd rdi,edx
   1201f:	mov    edx,0x55555556
   12024:	mov    eax,esi
   12026:	imul   edx
   12028:	mov    eax,esi
   1202a:	sar    eax,0x1f
   1202d:	sub    eax,edx
   1202f:	add    eax,edi
   12031:	cdq    
   12032:	idiv   esi
   12034:	mov    eax,ecx
   12036:	test   edx,edx
   12038:	jne    1204b <pcpu_runstate_update+0x21b>
   1203a:	mov    rax,QWORD PTR [rbx+0x328]
   12041:	mov    QWORD PTR [rax+rdi*8],rbp
   12045:	mov    eax,DWORD PTR [rbx+0x314]
   1204b:	add    QWORD PTR [rbx+0x320],rbp
   12052:	add    DWORD PTR [rbx+0x330],0x1
   12059:	add    eax,0x1
   1205c:	mov    DWORD PTR [rbx+0x314],eax
   12062:	mov    QWORD PTR [rbx+0x2d0],0x0
   1206d:	add    QWORD PTR [rbx+0x338],rbp
   12074:	pop    rbx
   12075:	pop    rbp
   12076:	pop    r12
   12078:	ret    
   12079:	nop    DWORD PTR [rax+0x0]
   12080:	mov    rax,QWORD PTR [rbx+0x328]
   12087:	mov    QWORD PTR [rax+rcx*8],rbp
   1208b:	mov    eax,DWORD PTR [rbx+0x314]
   12091:	jmp    1204b <pcpu_runstate_update+0x21b>
   12093:	nop    DWORD PTR [rax+rax*1+0x0]
   12098:	mov    rax,QWORD PTR [rbx+0x2f0]
   1209f:	mov    QWORD PTR [rax+rcx*8],rbp
   120a3:	mov    eax,DWORD PTR [rbx+0x2dc]
   120a9:	jmp    11f60 <pcpu_runstate_update+0x130>
   120ae:	mov    r12d,DWORD PTR [rbx+0x318]
   120b5:	jmp    12007 <pcpu_runstate_update+0x1d7>
   120ba:	mov    r12d,edx
   120bd:	jmp    11fdd <pcpu_runstate_update+0x1ad>
   120c2:	mov    r12d,DWORD PTR [rbx+0x2e0]
   120c9:	jmp    11f13 <pcpu_runstate_update+0xe3>
   120ce:	mov    r12d,eax
   120d1:	jmp    12013 <pcpu_runstate_update+0x1e3>
   120d6:	mov    r12d,edx
   120d9:	jmp    11ee9 <pcpu_runstate_update+0xb9>
   120de:	mov    r12d,eax
   120e1:	jmp    11f23 <pcpu_runstate_update+0xf3>
   120e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000120f0 <dump_sched_switch>:
   120f0:	sub    rsp,0x10
   120f4:	mov    rax,QWORD PTR [rdi+0x20]
   120f8:	lea    rdx,[rdi+0x28]
   120fc:	lea    rsi,[rip+0xe1fd]        # 20300 <_IO_stdin_used+0x3340>
   12103:	mov    edi,0x1
   12108:	mov    ecx,DWORD PTR [rax+0xc]
   1210b:	push   rcx
   1210c:	mov    r9d,DWORD PTR [rax+0x8]
   12110:	mov    r8d,DWORD PTR [rax+0x4]
   12114:	mov    ecx,DWORD PTR [rax]
   12116:	xor    eax,eax
   12118:	call   44f0 <__printf_chk@plt>
   1211d:	add    rsp,0x18
   12121:	ret    
   12122:	nop    DWORD PTR [rax+0x0]
   12126:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012130 <sched_default_domain_init>:
   12130:	lea    rdi,[rip+0x257409]        # 269540 <default_domain>
   12137:	mov    esi,0x8000
   1213c:	jmp    11cb0 <domain_init>
   12141:	nop    DWORD PTR [rax+rax*1+0x0]
   12146:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012150 <runstate_clear>:
   12150:	lea    rax,[rdi+0x38]
   12154:	nop    DWORD PTR [rax+0x0]
   12158:	mov    QWORD PTR [rdi],0x0
   1215f:	add    rdi,0x8
   12163:	cmp    rdi,rax
   12166:	jne    12158 <runstate_clear+0x8>
   12168:	repz ret 
   1216a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012170 <runstate_summary>:
   12170:	push   r14
   12172:	lea    r14,[rip+0x2172c7]        # 229440 <runstate_name>
   12179:	push   r13
   1217b:	mov    r13,rdi
   1217e:	push   r12
   12180:	xor    r12d,r12d
   12183:	push   rbp
   12184:	movabs rbp,0x44b82fa09b5a53
   1218e:	push   rbx
   1218f:	lea    rbx,[rip+0xb5c1]        # 1d757 <_IO_stdin_used+0x797>
   12196:	jmp    121aa <runstate_summary+0x3a>
   12198:	nop    DWORD PTR [rax+rax*1+0x0]
   121a0:	add    r12,0x8
   121a4:	cmp    r12,0x38
   121a8:	je     12205 <runstate_summary+0x95>
   121aa:	mov    rax,QWORD PTR [r13+r12*1+0x0]
   121af:	test   rax,rax
   121b2:	je     121a0 <runstate_summary+0x30>
   121b4:	sub    rax,QWORD PTR [rip+0x21b005]        # 22d1c0 <P+0x20>
   121bb:	xor    edx,edx
   121bd:	mov    rsi,rbx
   121c0:	mov    edi,0x1
   121c5:	shl    rax,0xa
   121c9:	div    QWORD PTR [rip+0x216ed8]        # 2290a8 <opt+0x8>
   121d0:	mov    rcx,rax
   121d3:	mov    r8,rax
   121d6:	shr    rcx,0x9
   121da:	mov    rax,rcx
   121dd:	mul    rbp
   121e0:	mov    rcx,rdx
   121e3:	mov    rdx,QWORD PTR [r14+r12*1]
   121e7:	add    r12,0x8
   121eb:	shr    rcx,0xb
   121ef:	imul   eax,ecx,0x3b9aca00
   121f5:	sub    r8d,eax
   121f8:	xor    eax,eax
   121fa:	call   44f0 <__printf_chk@plt>
   121ff:	cmp    r12,0x38
   12203:	jne    121aa <runstate_summary+0x3a>
   12205:	pop    rbx
   12206:	pop    rbp
   12207:	pop    r12
   12209:	pop    r13
   1220b:	pop    r14
   1220d:	ret    
   1220e:	xchg   ax,ax

0000000000012210 <sched_summary_vcpu>:
   12210:	push   r15
   12212:	push   r14
   12214:	push   r13
   12216:	push   r12
   12218:	push   rbp
   12219:	push   rbx
   1221a:	mov    rbx,rdi
   1221d:	sub    rsp,0x68
   12221:	mov    rax,QWORD PTR fs:0x28
   1222a:	mov    QWORD PTR [rsp+0x58],rax
   1222f:	xor    eax,eax
   12231:	mov    rax,QWORD PTR [rdi+0x58]
   12235:	test   rax,rax
   12238:	je     1226c <sched_summary_vcpu+0x5c>
   1223a:	mov    rbp,QWORD PTR [rip+0x21af87]        # 22d1c8 <P+0x28>
   12241:	add    DWORD PTR [rdi+0x3b8],0x1
   12248:	sub    rbp,rax
   1224b:	jne    12663 <sched_summary_vcpu+0x453>
   12251:	mov    rax,QWORD PTR [rdi+0x50]
   12255:	movsxd rdx,DWORD PTR [rax+0x4]
   12259:	lea    rax,[rdx*8+0x0]
   12261:	sub    rax,rdx
   12264:	add    DWORD PTR [rdi+rax*8+0x3f0],0x1
   1226c:	lea    rdi,[rip+0xb4f5]        # 1d768 <_IO_stdin_used+0x7a8>
   12273:	lea    r12,[rbx+0x154]
   1227a:	xor    r15d,r15d
   1227d:	lea    r13,[rip+0x2171bc]        # 229440 <runstate_name>
   12284:	lea    rbp,[rsp+0x30]
   12289:	call   4380 <puts@plt>
   1228e:	mov    QWORD PTR [rsp+0x18],rbx
   12293:	jmp    12360 <sched_summary_vcpu+0x150>
   12298:	nop    DWORD PTR [rax+rax*1+0x0]
   122a0:	cmp    DWORD PTR [r12+0x4],ecx
   122a5:	mov    rdi,QWORD PTR [r12+0x14]
   122aa:	mov    edx,0x32
   122af:	cmovle ecx,DWORD PTR [r12+0x4]
   122b5:	mov    QWORD PTR [rsp+0x10],r8
   122ba:	mov    esi,ecx
   122bc:	mov    r14d,ecx
   122bf:	call   79c0 <self_weighted_percentile>
   122c4:	mov    rdi,QWORD PTR [r12+0x14]
   122c9:	mov    edx,0x5
   122ce:	mov    esi,r14d
   122d1:	mov    rbx,rax
   122d4:	call   79c0 <self_weighted_percentile>
   122d9:	mov    rdi,QWORD PTR [r12+0x14]
   122de:	mov    edx,0x5f
   122e3:	mov    esi,r14d
   122e6:	mov    QWORD PTR [rsp+0x8],rax
   122eb:	call   79c0 <self_weighted_percentile>
   122f0:	mov    rdx,QWORD PTR [r12+0xc]
   122f5:	mov    r9,QWORD PTR [rsp+0x8]
   122fa:	mov    r8,QWORD PTR [rsp+0x10]
   122ff:	test   rdx,rdx
   12302:	js     125a3 <sched_summary_vcpu+0x393>
   12308:	pxor   xmm0,xmm0
   1230c:	cvtsi2sd xmm0,rdx
   12311:	pxor   xmm1,xmm1
   12315:	push   rax
   12316:	push   rbx
   12317:	mov    ecx,DWORD PTR [r12]
   1231b:	lea    rsi,[rip+0xd616]        # 1f938 <_IO_stdin_used+0x2978>
   12322:	mov    rdx,rbp
   12325:	mov    edi,0x1
   1232a:	mov    eax,0x1
   1232f:	cvtsi2sd xmm1,QWORD PTR [rip+0x216d78]        # 2290b0 <opt+0x10>
   12338:	divsd  xmm0,xmm1
   1233c:	call   44f0 <__printf_chk@plt>
   12341:	pop    r14
   12343:	pop    rax
   12344:	cmp    r15,0x1
   12348:	je     128cc <sched_summary_vcpu+0x6bc>
   1234e:	cmp    r15d,0x6
   12352:	je     123f0 <sched_summary_vcpu+0x1e0>
   12358:	add    r15,0x1
   1235c:	add    r12,0x38
   12360:	mov    r9,QWORD PTR [r13+r15*8+0x0]
   12365:	lea    r8,[rip+0xb40a]        # 1d776 <_IO_stdin_used+0x7b6>
   1236c:	mov    ecx,0x1e
   12371:	xor    eax,eax
   12373:	mov    edx,0x1
   12378:	mov    esi,0x1e
   1237d:	mov    rdi,rbp
   12380:	call   4320 <__snprintf_chk@plt>
   12385:	mov    ecx,DWORD PTR [r12]
   12389:	test   ecx,ecx
   1238b:	je     12344 <sched_summary_vcpu+0x134>
   1238d:	mov    rsi,QWORD PTR [r12+0xc]
   12392:	xor    edx,edx
   12394:	movsxd rdi,ecx
   12397:	mov    rax,rsi
   1239a:	div    rdi
   1239d:	mov    r8,rax
   123a0:	mov    eax,DWORD PTR [rip+0x216d32]        # 2290d8 <opt+0x38>
   123a6:	test   eax,eax
   123a8:	jne    122a0 <sched_summary_vcpu+0x90>
   123ae:	test   rsi,rsi
   123b1:	js     125c1 <sched_summary_vcpu+0x3b1>
   123b7:	pxor   xmm0,xmm0
   123bb:	cvtsi2sd xmm0,rsi
   123c0:	pxor   xmm1,xmm1
   123c4:	lea    rsi,[rip+0xae01]        # 1d1cc <_IO_stdin_used+0x20c>
   123cb:	mov    rdx,rbp
   123ce:	mov    edi,0x1
   123d3:	mov    eax,0x1
   123d8:	cvtsi2sd xmm1,QWORD PTR [rip+0x216ccf]        # 2290b0 <opt+0x10>
   123e1:	divsd  xmm0,xmm1
   123e5:	call   44f0 <__printf_chk@plt>
   123ea:	jmp    12344 <sched_summary_vcpu+0x134>
   123ef:	nop
   123f0:	mov    rbx,QWORD PTR [rsp+0x18]
   123f5:	mov    r12d,DWORD PTR [rbx+0x3bc]
   123fc:	test   r12d,r12d
   123ff:	je     12464 <sched_summary_vcpu+0x254>
   12401:	mov    rax,QWORD PTR [rbx+0x3c8]
   12408:	xor    edx,edx
   1240a:	movsxd rcx,r12d
   1240d:	mov    r9d,DWORD PTR [rip+0x216cc4]        # 2290d8 <opt+0x38>
   12414:	div    rcx
   12417:	test   r9d,r9d
   1241a:	mov    r8,rax
   1241d:	je     125df <sched_summary_vcpu+0x3cf>
   12423:	mov    eax,DWORD PTR [rbx+0x3c0]
   12429:	cmp    r12d,eax
   1242c:	jle    12604 <sched_summary_vcpu+0x3f4>
   12432:	test   eax,eax
   12434:	jne    12601 <sched_summary_vcpu+0x3f1>
   1243a:	xor    r13d,r13d
   1243d:	xor    r9d,r9d
   12440:	xor    eax,eax
   12442:	push   rax
   12443:	lea    rsi,[rip+0xdee6]        # 20330 <_IO_stdin_used+0x3370>
   1244a:	push   r13
   1244c:	lea    rdx,[rip+0xb329]        # 1d77c <_IO_stdin_used+0x7bc>
   12453:	mov    edi,0x1
   12458:	mov    ecx,r12d
   1245b:	xor    eax,eax
   1245d:	call   44f0 <__printf_chk@plt>
   12462:	pop    rsi
   12463:	pop    rdi
   12464:	add    rbx,0x3f4
   1246b:	xor    r12d,r12d
   1246e:	jmp    124f8 <sched_summary_vcpu+0x2e8>
   12473:	nop    DWORD PTR [rax+rax*1+0x0]
   12478:	mov    rdi,QWORD PTR [rbx+0x14]
   1247c:	mov    esi,r13d
   1247f:	mov    edx,0x32
   12484:	mov    QWORD PTR [rsp+0x10],r8
   12489:	call   4b30 <percentile.part.6>
   1248e:	mov    rdi,QWORD PTR [rbx+0x14]
   12492:	mov    esi,r13d
   12495:	mov    edx,0x5
   1249a:	mov    r14,rax
   1249d:	call   4b30 <percentile.part.6>
   124a2:	mov    rdi,QWORD PTR [rbx+0x14]
   124a6:	mov    esi,r13d
   124a9:	mov    edx,0x5f
   124ae:	mov    QWORD PTR [rsp+0x8],rax
   124b3:	call   4b30 <percentile.part.6>
   124b8:	mov    r13d,DWORD PTR [rbx]
   124bb:	mov    r9,QWORD PTR [rsp+0x8]
   124c0:	mov    r8,QWORD PTR [rsp+0x10]
   124c5:	push   rax
   124c6:	lea    rsi,[rip+0xde63]        # 20330 <_IO_stdin_used+0x3370>
   124cd:	push   r14
   124cf:	mov    rdx,rbp
   124d2:	mov    ecx,r13d
   124d5:	mov    edi,0x1
   124da:	xor    eax,eax
   124dc:	call   44f0 <__printf_chk@plt>
   124e1:	pop    rax
   124e2:	pop    rdx
   124e3:	add    r12d,0x1
   124e7:	add    rbx,0x38
   124eb:	cmp    r12d,0x100
   124f2:	je     12580 <sched_summary_vcpu+0x370>
   124f8:	lea    r8,[rip+0xb29a]        # 1d799 <_IO_stdin_used+0x7d9>
   124ff:	xor    eax,eax
   12501:	mov    r9d,r12d
   12504:	mov    ecx,0x1e
   12509:	mov    edx,0x1
   1250e:	mov    esi,0x1e
   12513:	mov    rdi,rbp
   12516:	call   4320 <__snprintf_chk@plt>
   1251b:	mov    r13d,DWORD PTR [rbx]
   1251e:	test   r13d,r13d
   12521:	je     124e3 <sched_summary_vcpu+0x2d3>
   12523:	mov    rax,QWORD PTR [rbx+0xc]
   12527:	movsxd rcx,r13d
   1252a:	xor    edx,edx
   1252c:	div    rcx
   1252f:	mov    ecx,DWORD PTR [rip+0x216ba3]        # 2290d8 <opt+0x38>
   12535:	test   ecx,ecx
   12537:	mov    r8,rax
   1253a:	je     12560 <sched_summary_vcpu+0x350>
   1253c:	mov    eax,DWORD PTR [rbx+0x4]
   1253f:	cmp    r13d,eax
   12542:	jle    12478 <sched_summary_vcpu+0x268>
   12548:	test   eax,eax
   1254a:	jne    12ad9 <sched_summary_vcpu+0x8c9>
   12550:	xor    r14d,r14d
   12553:	xor    r9d,r9d
   12556:	xor    eax,eax
   12558:	jmp    124c5 <sched_summary_vcpu+0x2b5>
   1255d:	nop    DWORD PTR [rax]
   12560:	lea    rsi,[rip+0xb223]        # 1d78a <_IO_stdin_used+0x7ca>
   12567:	mov    ecx,r13d
   1256a:	mov    rdx,rbp
   1256d:	mov    edi,0x1
   12572:	xor    eax,eax
   12574:	call   44f0 <__printf_chk@plt>
   12579:	jmp    124e3 <sched_summary_vcpu+0x2d3>
   1257e:	xchg   ax,ax
   12580:	mov    rax,QWORD PTR [rsp+0x58]
   12585:	xor    rax,QWORD PTR fs:0x28
   1258e:	jne    12afc <sched_summary_vcpu+0x8ec>
   12594:	add    rsp,0x68
   12598:	pop    rbx
   12599:	pop    rbp
   1259a:	pop    r12
   1259c:	pop    r13
   1259e:	pop    r14
   125a0:	pop    r15
   125a2:	ret    
   125a3:	mov    rsi,rdx
   125a6:	pxor   xmm0,xmm0
   125aa:	shr    rsi,1
   125ad:	and    edx,0x1
   125b0:	or     rsi,rdx
   125b3:	cvtsi2sd xmm0,rsi
   125b8:	addsd  xmm0,xmm0
   125bc:	jmp    12311 <sched_summary_vcpu+0x101>
   125c1:	mov    rax,rsi
   125c4:	pxor   xmm0,xmm0
   125c8:	shr    rax,1
   125cb:	and    esi,0x1
   125ce:	or     rax,rsi
   125d1:	cvtsi2sd xmm0,rax
   125d6:	addsd  xmm0,xmm0
   125da:	jmp    123c0 <sched_summary_vcpu+0x1b0>
   125df:	lea    rdx,[rip+0xb196]        # 1d77c <_IO_stdin_used+0x7bc>
   125e6:	lea    rsi,[rip+0xb19d]        # 1d78a <_IO_stdin_used+0x7ca>
   125ed:	mov    ecx,r12d
   125f0:	mov    edi,0x1
   125f5:	xor    eax,eax
   125f7:	call   44f0 <__printf_chk@plt>
   125fc:	jmp    12464 <sched_summary_vcpu+0x254>
   12601:	mov    r12d,eax
   12604:	mov    rdi,QWORD PTR [rbx+0x3d0]
   1260b:	mov    esi,r12d
   1260e:	mov    edx,0x32
   12613:	mov    QWORD PTR [rsp+0x10],r8
   12618:	call   4b30 <percentile.part.6>
   1261d:	mov    rdi,QWORD PTR [rbx+0x3d0]
   12624:	mov    esi,r12d
   12627:	mov    edx,0x5
   1262c:	mov    r13,rax
   1262f:	call   4b30 <percentile.part.6>
   12634:	mov    rdi,QWORD PTR [rbx+0x3d0]
   1263b:	mov    esi,r12d
   1263e:	mov    edx,0x5f
   12643:	mov    QWORD PTR [rsp+0x8],rax
   12648:	call   4b30 <percentile.part.6>
   1264d:	mov    r12d,DWORD PTR [rbx+0x3bc]
   12654:	mov    r9,QWORD PTR [rsp+0x8]
   12659:	mov    r8,QWORD PTR [rsp+0x10]
   1265e:	jmp    12442 <sched_summary_vcpu+0x232>
   12663:	mov    edx,DWORD PTR [rip+0x216a6f]        # 2290d8 <opt+0x38>
   12669:	movsxd rcx,DWORD PTR [rdi+0x3bc]
   12670:	test   edx,edx
   12672:	mov    eax,ecx
   12674:	je     1272d <sched_summary_vcpu+0x51d>
   1267a:	mov    eax,DWORD PTR [rdi+0x3c0]
   12680:	cmp    eax,ecx
   12682:	jg     128a8 <sched_summary_vcpu+0x698>
   12688:	test   ecx,ecx
   1268a:	mov    r12d,DWORD PTR [rip+0x216a4b]        # 2290dc <opt+0x3c>
   12691:	je     126a1 <sched_summary_vcpu+0x491>
   12693:	test   r12d,r12d
   12696:	je     126a1 <sched_summary_vcpu+0x491>
   12698:	cmp    eax,r12d
   1269b:	jge    12ab5 <sched_summary_vcpu+0x8a5>
   126a1:	add    eax,eax
   126a3:	cmovne edx,eax
   126a6:	cmp    edx,r12d
   126a9:	jle    12a52 <sched_summary_vcpu+0x842>
   126af:	test   r12d,r12d
   126b2:	je     12a52 <sched_summary_vcpu+0x842>
   126b8:	mov    rdi,QWORD PTR [rbx+0x3d0]
   126bf:	movsxd rsi,r12d
   126c2:	shl    rsi,0x3
   126c6:	call   44c0 <realloc@plt>
   126cb:	test   rax,rax
   126ce:	je     12a46 <sched_summary_vcpu+0x836>
   126d4:	mov    QWORD PTR [rbx+0x3d0],rax
   126db:	mov    DWORD PTR [rbx+0x3c0],r12d
   126e2:	movsxd rcx,DWORD PTR [rbx+0x3bc]
   126e9:	cmp    ecx,r12d
   126ec:	jl     128a8 <sched_summary_vcpu+0x698>
   126f2:	mov    eax,ecx
   126f4:	cdq    
   126f5:	idiv   r12d
   126f8:	lea    esi,[rax+0x1]
   126fb:	movsxd rdi,edx
   126fe:	mov    edx,0x55555556
   12703:	mov    eax,esi
   12705:	imul   edx
   12707:	mov    eax,esi
   12709:	sar    eax,0x1f
   1270c:	sub    eax,edx
   1270e:	add    eax,edi
   12710:	cdq    
   12711:	idiv   esi
   12713:	test   edx,edx
   12715:	je     12a22 <sched_summary_vcpu+0x812>
   1271b:	mov    r12,QWORD PTR [rip+0x21aaa6]        # 22d1c8 <P+0x28>
   12722:	sub    r12,QWORD PTR [rbx+0x58]
   12726:	mov    eax,ecx
   12728:	mov    r14,r12
   1272b:	jmp    12733 <sched_summary_vcpu+0x523>
   1272d:	mov    r14,rbp
   12730:	mov    r12,rbp
   12733:	add    eax,0x1
   12736:	add    QWORD PTR [rbx+0x3c8],rbp
   1273d:	add    DWORD PTR [rbx+0x3d8],0x1
   12744:	mov    DWORD PTR [rbx+0x3bc],eax
   1274a:	mov    rax,QWORD PTR [rbx+0x50]
   1274e:	add    QWORD PTR [rbx+0x3e0],rbp
   12755:	movsxd rbp,DWORD PTR [rax+0x4]
   12759:	lea    rax,[rbp*8+0x0]
   12761:	sub    rax,rbp
   12764:	lea    rdx,[rbx+rax*8]
   12768:	add    DWORD PTR [rdx+0x3f0],0x1
   1276f:	test   r14,r14
   12772:	je     1226c <sched_summary_vcpu+0x5c>
   12778:	mov    ecx,DWORD PTR [rip+0x21695a]        # 2290d8 <opt+0x38>
   1277e:	movsxd rax,DWORD PTR [rdx+0x3f4]
   12785:	test   ecx,ecx
   12787:	je     12854 <sched_summary_vcpu+0x644>
   1278d:	mov    edx,DWORD PTR [rdx+0x3f8]
   12793:	cmp    edx,eax
   12795:	jg     12886 <sched_summary_vcpu+0x676>
   1279b:	test   eax,eax
   1279d:	mov    r13d,DWORD PTR [rip+0x216938]        # 2290dc <opt+0x3c>
   127a4:	je     127b4 <sched_summary_vcpu+0x5a4>
   127a6:	cmp    edx,r13d
   127a9:	jl     127b4 <sched_summary_vcpu+0x5a4>
   127ab:	test   r13d,r13d
   127ae:	jne    12ad1 <sched_summary_vcpu+0x8c1>
   127b4:	add    edx,edx
   127b6:	cmovne ecx,edx
   127b9:	test   r13d,r13d
   127bc:	je     12ac9 <sched_summary_vcpu+0x8b9>
   127c2:	cmp    ecx,r13d
   127c5:	jle    12ac9 <sched_summary_vcpu+0x8b9>
   127cb:	lea    rax,[rbp*8+0x0]
   127d3:	movsxd rsi,r13d
   127d6:	shl    rsi,0x3
   127da:	sub    rax,rbp
   127dd:	lea    r15,[rbx+rax*8]
   127e1:	mov    rdi,QWORD PTR [r15+0x408]
   127e8:	call   44c0 <realloc@plt>
   127ed:	test   rax,rax
   127f0:	je     12abd <sched_summary_vcpu+0x8ad>
   127f6:	mov    QWORD PTR [r15+0x408],rax
   127fd:	mov    DWORD PTR [r15+0x3f8],r13d
   12804:	lea    rax,[rbp*8+0x0]
   1280c:	sub    rax,rbp
   1280f:	movsxd rax,DWORD PTR [rbx+rax*8+0x3f4]
   12817:	cmp    eax,r13d
   1281a:	jl     12886 <sched_summary_vcpu+0x676>
   1281c:	cdq    
   1281d:	idiv   r13d
   12820:	lea    ecx,[rax+0x1]
   12823:	mov    esi,edx
   12825:	mov    edx,0x55555556
   1282a:	mov    eax,ecx
   1282c:	imul   edx
   1282e:	mov    eax,ecx
   12830:	sar    eax,0x1f
   12833:	sub    eax,edx
   12835:	add    eax,esi
   12837:	cdq    
   12838:	idiv   ecx
   1283a:	lea    rax,[rbp*8+0x0]
   12842:	sub    rax,rbp
   12845:	test   edx,edx
   12847:	je     12a05 <sched_summary_vcpu+0x7f5>
   1284d:	mov    eax,DWORD PTR [rbx+rax*8+0x3f4]
   12854:	lea    rdx,[rbp*8+0x0]
   1285c:	add    eax,0x1
   1285f:	sub    rdx,rbp
   12862:	lea    rdx,[rbx+rdx*8]
   12866:	mov    DWORD PTR [rdx+0x3f4],eax
   1286c:	add    QWORD PTR [rdx+0x400],r12
   12873:	add    DWORD PTR [rdx+0x410],0x1
   1287a:	add    QWORD PTR [rdx+0x418],r14
   12881:	jmp    1226c <sched_summary_vcpu+0x5c>
   12886:	lea    rdx,[rbp*8+0x0]
   1288e:	sub    rdx,rbp
   12891:	lea    rdx,[rbx+rdx*8]
   12895:	mov    rcx,QWORD PTR [rdx+0x408]
   1289c:	mov    QWORD PTR [rcx+rax*8],r14
   128a0:	mov    eax,DWORD PTR [rdx+0x3f4]
   128a6:	jmp    12854 <sched_summary_vcpu+0x644>
   128a8:	mov    rax,QWORD PTR [rbx+0x3d0]
   128af:	mov    QWORD PTR [rax+rcx*8],rbp
   128b3:	mov    r12,QWORD PTR [rip+0x21a90e]        # 22d1c8 <P+0x28>
   128ba:	sub    r12,QWORD PTR [rbx+0x58]
   128be:	mov    eax,DWORD PTR [rbx+0x3bc]
   128c4:	mov    r14,r12
   128c7:	jmp    12733 <sched_summary_vcpu+0x523>
   128cc:	mov    rax,QWORD PTR [rsp+0x18]
   128d1:	mov    QWORD PTR [rsp+0x8],r12
   128d6:	mov    r12,rbp
   128d9:	lea    r14,[rax+0x2dc]
   128e0:	xor    eax,eax
   128e2:	mov    rbp,rax
   128e5:	test   rbp,rbp
   128e8:	je     129f8 <sched_summary_vcpu+0x7e8>
   128ee:	lea    rax,[rip+0x216b2b]        # 229420 <runnable_state_name>
   128f5:	lea    r8,[rip+0xae78]        # 1d774 <_IO_stdin_used+0x7b4>
   128fc:	mov    ecx,0x1e
   12901:	mov    edx,0x1
   12906:	mov    esi,0x1e
   1290b:	mov    rdi,r12
   1290e:	mov    r9,QWORD PTR [rax+rbp*8]
   12912:	xor    eax,eax
   12914:	call   4320 <__snprintf_chk@plt>
   12919:	mov    ecx,DWORD PTR [r14]
   1291c:	test   ecx,ecx
   1291e:	je     129e6 <sched_summary_vcpu+0x7d6>
   12924:	mov    rsi,QWORD PTR [r14+0xc]
   12928:	xor    edx,edx
   1292a:	movsxd rdi,ecx
   1292d:	mov    ebx,DWORD PTR [rip+0x2167a5]        # 2290d8 <opt+0x38>
   12933:	mov    rax,rsi
   12936:	div    rdi
   12939:	test   ebx,ebx
   1293b:	mov    r8,rax
   1293e:	je     12a78 <sched_summary_vcpu+0x868>
   12944:	cmp    DWORD PTR [r14+0x4],ecx
   12948:	mov    ebx,ecx
   1294a:	mov    rdi,QWORD PTR [r14+0x14]
   1294e:	cmovle ebx,DWORD PTR [r14+0x4]
   12953:	mov    edx,0x32
   12958:	mov    QWORD PTR [rsp+0x28],rax
   1295d:	mov    esi,ebx
   1295f:	call   79c0 <self_weighted_percentile>
   12964:	mov    rdi,QWORD PTR [r14+0x14]
   12968:	mov    edx,0x5
   1296d:	mov    esi,ebx
   1296f:	mov    QWORD PTR [rsp+0x20],rax
   12974:	call   79c0 <self_weighted_percentile>
   12979:	mov    rdi,QWORD PTR [r14+0x14]
   1297d:	mov    edx,0x5f
   12982:	mov    esi,ebx
   12984:	mov    QWORD PTR [rsp+0x10],rax
   12989:	call   79c0 <self_weighted_percentile>
   1298e:	mov    rdx,QWORD PTR [r14+0xc]
   12992:	mov    r9,QWORD PTR [rsp+0x10]
   12997:	mov    rcx,QWORD PTR [rsp+0x20]
   1299c:	mov    r8,QWORD PTR [rsp+0x28]
   129a1:	test   rdx,rdx
   129a4:	js     12a5a <sched_summary_vcpu+0x84a>
   129aa:	pxor   xmm0,xmm0
   129ae:	cvtsi2sd xmm0,rdx
   129b3:	pxor   xmm1,xmm1
   129b7:	push   rax
   129b8:	push   rcx
   129b9:	mov    ecx,DWORD PTR [r14]
   129bc:	lea    rsi,[rip+0xcf75]        # 1f938 <_IO_stdin_used+0x2978>
   129c3:	mov    rdx,r12
   129c6:	mov    edi,0x1
   129cb:	mov    eax,0x1
   129d0:	cvtsi2sd xmm1,QWORD PTR [rip+0x2166d7]        # 2290b0 <opt+0x10>
   129d9:	divsd  xmm0,xmm1
   129dd:	call   44f0 <__printf_chk@plt>
   129e2:	pop    r10
   129e4:	pop    r11
   129e6:	cmp    ebp,0x3
   129e9:	jne    129f8 <sched_summary_vcpu+0x7e8>
   129eb:	mov    rbp,r12
   129ee:	mov    r12,QWORD PTR [rsp+0x8]
   129f3:	jmp    12358 <sched_summary_vcpu+0x148>
   129f8:	add    rbp,0x1
   129fc:	add    r14,0x38
   12a00:	jmp    128e5 <sched_summary_vcpu+0x6d5>
   12a05:	lea    rdx,[rbx+rax*8]
   12a09:	movsxd rax,esi
   12a0c:	mov    rcx,QWORD PTR [rdx+0x408]
   12a13:	mov    QWORD PTR [rcx+rax*8],r14
   12a17:	mov    eax,DWORD PTR [rdx+0x3f4]
   12a1d:	jmp    12854 <sched_summary_vcpu+0x644>
   12a22:	mov    rax,QWORD PTR [rbx+0x3d0]
   12a29:	mov    QWORD PTR [rax+rdi*8],rbp
   12a2d:	mov    r12,QWORD PTR [rip+0x21a794]        # 22d1c8 <P+0x28>
   12a34:	sub    r12,QWORD PTR [rbx+0x58]
   12a38:	mov    eax,DWORD PTR [rbx+0x3bc]
   12a3e:	mov    r14,r12
   12a41:	jmp    12733 <sched_summary_vcpu+0x523>
   12a46:	mov    r12d,DWORD PTR [rbx+0x3c0]
   12a4d:	jmp    126e2 <sched_summary_vcpu+0x4d2>
   12a52:	mov    r12d,edx
   12a55:	jmp    126b8 <sched_summary_vcpu+0x4a8>
   12a5a:	mov    rsi,rdx
   12a5d:	pxor   xmm0,xmm0
   12a61:	shr    rsi,1
   12a64:	and    edx,0x1
   12a67:	or     rsi,rdx
   12a6a:	cvtsi2sd xmm0,rsi
   12a6f:	addsd  xmm0,xmm0
   12a73:	jmp    129b3 <sched_summary_vcpu+0x7a3>
   12a78:	test   rsi,rsi
   12a7b:	js     12ae1 <sched_summary_vcpu+0x8d1>
   12a7d:	pxor   xmm0,xmm0
   12a81:	cvtsi2sd xmm0,rsi
   12a86:	pxor   xmm1,xmm1
   12a8a:	lea    rsi,[rip+0xa73b]        # 1d1cc <_IO_stdin_used+0x20c>
   12a91:	mov    rdx,r12
   12a94:	mov    edi,0x1
   12a99:	mov    eax,0x1
   12a9e:	cvtsi2sd xmm1,QWORD PTR [rip+0x216609]        # 2290b0 <opt+0x10>
   12aa7:	divsd  xmm0,xmm1
   12aab:	call   44f0 <__printf_chk@plt>
   12ab0:	jmp    129e6 <sched_summary_vcpu+0x7d6>
   12ab5:	mov    r12d,eax
   12ab8:	jmp    126f2 <sched_summary_vcpu+0x4e2>
   12abd:	mov    r13d,DWORD PTR [r15+0x3f8]
   12ac4:	jmp    12804 <sched_summary_vcpu+0x5f4>
   12ac9:	mov    r13d,ecx
   12acc:	jmp    127cb <sched_summary_vcpu+0x5bb>
   12ad1:	mov    r13d,edx
   12ad4:	jmp    1281c <sched_summary_vcpu+0x60c>
   12ad9:	mov    r13d,eax
   12adc:	jmp    12478 <sched_summary_vcpu+0x268>
   12ae1:	mov    rax,rsi
   12ae4:	pxor   xmm0,xmm0
   12ae8:	shr    rax,1
   12aeb:	and    esi,0x1
   12aee:	or     rax,rsi
   12af1:	cvtsi2sd xmm0,rax
   12af6:	addsd  xmm0,xmm0
   12afa:	jmp    12a86 <sched_summary_vcpu+0x876>
   12afc:	call   43c0 <__stack_chk_fail@plt>
   12b01:	nop    DWORD PTR [rax+rax*1+0x0]
   12b06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012b10 <sched_summary_domain>:
   12b10:	push   r15
   12b12:	push   r14
   12b14:	lea    r14,[rip+0xac5b]        # 1d776 <_IO_stdin_used+0x7b6>
   12b1b:	push   r13
   12b1d:	push   r12
   12b1f:	mov    r13,rdi
   12b22:	push   rbp
   12b23:	push   rbx
   12b24:	lea    rdi,[rip+0xac3d]        # 1d768 <_IO_stdin_used+0x7a8>
   12b2b:	lea    rbx,[r13+0x85c]
   12b32:	lea    rbp,[rip+0x216807]        # 229340 <domain_runstate_name>
   12b39:	add    r13,0x9e4
   12b40:	sub    rsp,0x58
   12b44:	mov    rax,QWORD PTR fs:0x28
   12b4d:	mov    QWORD PTR [rsp+0x48],rax
   12b52:	xor    eax,eax
   12b54:	lea    r12,[rsp+0x20]
   12b59:	call   4380 <puts@plt>
   12b5e:	jmp    12c19 <sched_summary_domain+0x109>
   12b63:	nop    DWORD PTR [rax+rax*1+0x0]
   12b68:	cmp    DWORD PTR [rbx+0x4],ecx
   12b6b:	mov    rdi,QWORD PTR [rbx+0x14]
   12b6f:	mov    edx,0x32
   12b74:	cmovle ecx,DWORD PTR [rbx+0x4]
   12b78:	mov    QWORD PTR [rsp+0x18],rax
   12b7d:	mov    esi,ecx
   12b7f:	mov    r15d,ecx
   12b82:	call   79c0 <self_weighted_percentile>
   12b87:	mov    rdi,QWORD PTR [rbx+0x14]
   12b8b:	mov    edx,0x5
   12b90:	mov    esi,r15d
   12b93:	mov    QWORD PTR [rsp+0x10],rax
   12b98:	call   79c0 <self_weighted_percentile>
   12b9d:	mov    rdi,QWORD PTR [rbx+0x14]
   12ba1:	mov    edx,0x5f
   12ba6:	mov    esi,r15d
   12ba9:	mov    QWORD PTR [rsp+0x8],rax
   12bae:	call   79c0 <self_weighted_percentile>
   12bb3:	mov    rdx,QWORD PTR [rbx+0xc]
   12bb7:	mov    r9,QWORD PTR [rsp+0x8]
   12bbc:	mov    rcx,QWORD PTR [rsp+0x10]
   12bc1:	mov    r8,QWORD PTR [rsp+0x18]
   12bc6:	test   rdx,rdx
   12bc9:	js     12cd0 <sched_summary_domain+0x1c0>
   12bcf:	pxor   xmm0,xmm0
   12bd3:	cvtsi2sd xmm0,rdx
   12bd8:	pxor   xmm1,xmm1
   12bdc:	push   rax
   12bdd:	push   rcx
   12bde:	mov    ecx,DWORD PTR [rbx]
   12be0:	lea    rsi,[rip+0xcd51]        # 1f938 <_IO_stdin_used+0x2978>
   12be7:	mov    rdx,r12
   12bea:	mov    edi,0x1
   12bef:	mov    eax,0x1
   12bf4:	cvtsi2sd xmm1,QWORD PTR [rip+0x2164b3]        # 2290b0 <opt+0x10>
   12bfd:	divsd  xmm0,xmm1
   12c01:	call   44f0 <__printf_chk@plt>
   12c06:	pop    rax
   12c07:	pop    rdx
   12c08:	add    rbx,0x38
   12c0c:	add    rbp,0x8
   12c10:	cmp    rbx,r13
   12c13:	je     12cb0 <sched_summary_domain+0x1a0>
   12c19:	mov    r9,QWORD PTR [rbp+0x0]
   12c1d:	mov    ecx,0x1e
   12c22:	xor    eax,eax
   12c24:	mov    r8,r14
   12c27:	mov    edx,0x1
   12c2c:	mov    esi,0x1e
   12c31:	mov    rdi,r12
   12c34:	call   4320 <__snprintf_chk@plt>
   12c39:	mov    ecx,DWORD PTR [rbx]
   12c3b:	test   ecx,ecx
   12c3d:	je     12c08 <sched_summary_domain+0xf8>
   12c3f:	mov    rsi,QWORD PTR [rbx+0xc]
   12c43:	movsxd rdi,ecx
   12c46:	xor    edx,edx
   12c48:	mov    rax,rsi
   12c4b:	div    rdi
   12c4e:	mov    edi,DWORD PTR [rip+0x216484]        # 2290d8 <opt+0x38>
   12c54:	test   edi,edi
   12c56:	mov    r8,rax
   12c59:	jne    12b68 <sched_summary_domain+0x58>
   12c5f:	test   rsi,rsi
   12c62:	js     12cf0 <sched_summary_domain+0x1e0>
   12c68:	pxor   xmm0,xmm0
   12c6c:	cvtsi2sd xmm0,rsi
   12c71:	pxor   xmm1,xmm1
   12c75:	lea    rsi,[rip+0xa550]        # 1d1cc <_IO_stdin_used+0x20c>
   12c7c:	mov    rdx,r12
   12c7f:	mov    edi,0x1
   12c84:	mov    eax,0x1
   12c89:	add    rbx,0x38
   12c8d:	add    rbp,0x8
   12c91:	cvtsi2sd xmm1,QWORD PTR [rip+0x216416]        # 2290b0 <opt+0x10>
   12c9a:	divsd  xmm0,xmm1
   12c9e:	call   44f0 <__printf_chk@plt>
   12ca3:	cmp    rbx,r13
   12ca6:	jne    12c19 <sched_summary_domain+0x109>
   12cac:	nop    DWORD PTR [rax+0x0]
   12cb0:	mov    rax,QWORD PTR [rsp+0x48]
   12cb5:	xor    rax,QWORD PTR fs:0x28
   12cbe:	jne    12d0e <sched_summary_domain+0x1fe>
   12cc0:	add    rsp,0x58
   12cc4:	pop    rbx
   12cc5:	pop    rbp
   12cc6:	pop    r12
   12cc8:	pop    r13
   12cca:	pop    r14
   12ccc:	pop    r15
   12cce:	ret    
   12ccf:	nop
   12cd0:	mov    rsi,rdx
   12cd3:	pxor   xmm0,xmm0
   12cd7:	shr    rsi,1
   12cda:	and    edx,0x1
   12cdd:	or     rsi,rdx
   12ce0:	cvtsi2sd xmm0,rsi
   12ce5:	addsd  xmm0,xmm0
   12ce9:	jmp    12bd8 <sched_summary_domain+0xc8>
   12cee:	xchg   ax,ax
   12cf0:	mov    rax,rsi
   12cf3:	pxor   xmm0,xmm0
   12cf7:	shr    rax,1
   12cfa:	and    esi,0x1
   12cfd:	or     rax,rsi
   12d00:	cvtsi2sd xmm0,rax
   12d05:	addsd  xmm0,xmm0
   12d09:	jmp    12c71 <sched_summary_domain+0x161>
   12d0e:	call   43c0 <__stack_chk_fail@plt>
   12d13:	nop    DWORD PTR [rax]
   12d16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012d20 <dump_sched_vcpu_action>:
   12d20:	mov    rax,QWORD PTR [rdi+0x20]
   12d24:	mov    rcx,rsi
   12d27:	lea    rdx,[rdi+0x28]
   12d2b:	lea    rsi,[rip+0xaa6f]        # 1d7a1 <_IO_stdin_used+0x7e1>
   12d32:	mov    edi,0x1
   12d37:	mov    r9d,DWORD PTR [rax+0x4]
   12d3b:	mov    r8d,DWORD PTR [rax]
   12d3e:	xor    eax,eax
   12d40:	jmp    44f0 <__printf_chk@plt>
   12d45:	nop
   12d46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012d50 <mem_summary_domain>:
   12d50:	push   r15
   12d52:	push   r14
   12d54:	push   r13
   12d56:	push   r12
   12d58:	lea    r12,[rip+0x216621]        # 229380 <mem_name>
   12d5f:	push   rbp
   12d60:	push   rbx
   12d61:	mov    rbp,rdi
   12d64:	lea    rdi,[rip+0xaa45]        # 1d7b0 <_IO_stdin_used+0x7f0>
   12d6b:	xor    ebx,ebx
   12d6d:	sub    rsp,0x8
   12d71:	call   4380 <puts@plt>
   12d76:	lea    rdi,[rip+0xaa45]        # 1d7c2 <_IO_stdin_used+0x802>
   12d7d:	call   4380 <puts@plt>
   12d82:	jmp    12d92 <mem_summary_domain+0x42>
   12d84:	nop    DWORD PTR [rax+0x0]
   12d88:	add    rbx,0x4
   12d8c:	cmp    rbx,0x4c
   12d90:	je     12dbe <mem_summary_domain+0x6e>
   12d92:	mov    ecx,DWORD PTR [rbp+rbx*1+0x11a8]
   12d99:	test   ecx,ecx
   12d9b:	je     12d88 <mem_summary_domain+0x38>
   12d9d:	mov    rdx,QWORD PTR [r12+rbx*2]
   12da1:	lea    rsi,[rip+0xaa25]        # 1d7cd <_IO_stdin_used+0x80d>
   12da8:	xor    eax,eax
   12daa:	mov    edi,0x1
   12daf:	add    rbx,0x4
   12db3:	call   44f0 <__printf_chk@plt>
   12db8:	cmp    rbx,0x4c
   12dbc:	jne    12d92 <mem_summary_domain+0x42>
   12dbe:	lea    rdi,[rip+0xaa16]        # 1d7db <_IO_stdin_used+0x81b>
   12dc5:	xor    ebx,ebx
   12dc7:	lea    r12,[rip+0x2165b2]        # 229380 <mem_name>
   12dce:	call   4380 <puts@plt>
   12dd3:	jmp    12de2 <mem_summary_domain+0x92>
   12dd5:	nop    DWORD PTR [rax]
   12dd8:	add    rbx,0x4
   12ddc:	cmp    rbx,0x4c
   12de0:	je     12e0e <mem_summary_domain+0xbe>
   12de2:	mov    ecx,DWORD PTR [rbp+rbx*1+0x1240]
   12de9:	test   ecx,ecx
   12deb:	je     12dd8 <mem_summary_domain+0x88>
   12ded:	mov    rdx,QWORD PTR [r12+rbx*2]
   12df1:	lea    rsi,[rip+0xa9d5]        # 1d7cd <_IO_stdin_used+0x80d>
   12df8:	xor    eax,eax
   12dfa:	mov    edi,0x1
   12dff:	add    rbx,0x4
   12e03:	call   44f0 <__printf_chk@plt>
   12e08:	cmp    rbx,0x4c
   12e0c:	jne    12de2 <mem_summary_domain+0x92>
   12e0e:	lea    rdi,[rip+0xa9d2]        # 1d7e7 <_IO_stdin_used+0x827>
   12e15:	lea    r12,[rip+0xa2df]        # 1d0fb <_IO_stdin_used+0x13b>
   12e1c:	xor    ebx,ebx
   12e1e:	call   4380 <puts@plt>
   12e23:	lea    rdi,[rip+0xa9d2]        # 1d7fc <_IO_stdin_used+0x83c>
   12e2a:	call   4380 <puts@plt>
   12e2f:	mov    ecx,DWORD PTR [rbp+rbx*4+0x1324]
   12e36:	test   ecx,ecx
   12e38:	jne    12ed0 <mem_summary_domain+0x180>
   12e3e:	add    rbx,0x1
   12e42:	cmp    rbx,0x4
   12e46:	jne    12e2f <mem_summary_domain+0xdf>
   12e48:	lea    rdi,[rip+0xa9ba]        # 1d809 <_IO_stdin_used+0x849>
   12e4f:	lea    r12,[rip+0xa2a5]        # 1d0fb <_IO_stdin_used+0x13b>
   12e56:	xor    ebx,ebx
   12e58:	call   4380 <puts@plt>
   12e5d:	mov    ecx,DWORD PTR [rbp+rbx*4+0x12d8]
   12e64:	test   ecx,ecx
   12e66:	jne    12eb8 <mem_summary_domain+0x168>
   12e68:	add    rbx,0x1
   12e6c:	cmp    rbx,0x4
   12e70:	jne    12e5d <mem_summary_domain+0x10d>
   12e72:	lea    rdi,[rip+0xa9a1]        # 1d81a <_IO_stdin_used+0x85a>
   12e79:	lea    r15,[rip+0x2164a0]        # 229320 <pod_reclaim_context_name>
   12e80:	lea    r13,[rip+0xa273]        # 1d0fa <_IO_stdin_used+0x13a>
   12e87:	xor    ebx,ebx
   12e89:	call   4380 <puts@plt>
   12e8e:	mov    ecx,DWORD PTR [rbp+rbx*1+0x12e8]
   12e95:	test   ecx,ecx
   12e97:	jne    12ef0 <mem_summary_domain+0x1a0>
   12e99:	add    rbx,0x4
   12e9d:	cmp    rbx,0xc
   12ea1:	jne    12e8e <mem_summary_domain+0x13e>
   12ea3:	add    rsp,0x8
   12ea7:	pop    rbx
   12ea8:	pop    rbp
   12ea9:	pop    r12
   12eab:	pop    r13
   12ead:	pop    r14
   12eaf:	pop    r15
   12eb1:	ret    
   12eb2:	nop    WORD PTR [rax+rax*1+0x0]
   12eb8:	mov    edx,ebx
   12eba:	mov    rsi,r12
   12ebd:	mov    edi,0x1
   12ec2:	xor    eax,eax
   12ec4:	call   44f0 <__printf_chk@plt>
   12ec9:	jmp    12e68 <mem_summary_domain+0x118>
   12ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   12ed0:	mov    edx,ebx
   12ed2:	mov    rsi,r12
   12ed5:	mov    edi,0x1
   12eda:	xor    eax,eax
   12edc:	call   44f0 <__printf_chk@plt>
   12ee1:	jmp    12e3e <mem_summary_domain+0xee>
   12ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12ef0:	mov    rdx,QWORD PTR [r15+rbx*2]
   12ef4:	lea    rsi,[rip+0xa933]        # 1d82e <_IO_stdin_used+0x86e>
   12efb:	lea    r14,[rbp+rbx*4+0x0]
   12f00:	xor    eax,eax
   12f02:	xor    r12d,r12d
   12f05:	mov    edi,0x1
   12f0a:	call   44f0 <__printf_chk@plt>
   12f0f:	mov    ecx,DWORD PTR [r14+r12*4+0x12f4]
   12f17:	test   ecx,ecx
   12f19:	jne    12f3a <mem_summary_domain+0x1ea>
   12f1b:	nop    DWORD PTR [rax+rax*1+0x0]
   12f20:	add    r12,0x1
   12f24:	cmp    r12,0x4
   12f28:	je     12e99 <mem_summary_domain+0x149>
   12f2e:	mov    ecx,DWORD PTR [r14+r12*4+0x12f4]
   12f36:	test   ecx,ecx
   12f38:	je     12f20 <mem_summary_domain+0x1d0>
   12f3a:	mov    edx,r12d
   12f3d:	mov    rsi,r13
   12f40:	mov    edi,0x1
   12f45:	xor    eax,eax
   12f47:	call   44f0 <__printf_chk@plt>
   12f4c:	jmp    12f20 <mem_summary_domain+0x1d0>
   12f4e:	xchg   ax,ax

0000000000012f50 <p2m_canonical_order>:
   12f50:	mov    eax,edi
   12f52:	mov    edx,0x38e38e39
   12f57:	imul   edx
   12f59:	mov    eax,edx
   12f5b:	mov    edx,edi
   12f5d:	sar    edx,0x1f
   12f60:	sar    eax,1
   12f62:	sub    eax,edx
   12f64:	lea    edx,[rax+rax*8]
   12f67:	cmp    edi,edx
   12f69:	jne    12f78 <p2m_canonical_order+0x28>
   12f6b:	cmp    edi,0x1a
   12f6e:	jg     12f78 <p2m_canonical_order+0x28>
   12f70:	repz ret 
   12f72:	nop    WORD PTR [rax+rax*1+0x0]
   12f78:	jmp    70b0 <p2m_canonical_order.part.23>
   12f7d:	nop    DWORD PTR [rax]

0000000000012f80 <mem_pod_zero_reclaim_process>:
   12f80:	push   r12
   12f82:	push   rbp
   12f83:	push   rbx
   12f84:	mov    rbp,QWORD PTR [rdi+0x1a8]
   12f8b:	xor    ebx,ebx
   12f8d:	mov    r12,QWORD PTR [rdi+0x50]
   12f91:	test   rbp,rbp
   12f94:	je     12fa1 <mem_pod_zero_reclaim_process+0x21>
   12f96:	movsxd rbx,DWORD PTR [rbp+0x3bfc]
   12f9d:	test   ebx,ebx
   12f9f:	jne    13020 <mem_pod_zero_reclaim_process+0xa0>
   12fa1:	test   BYTE PTR [rip+0x2160f9],0x40        # 2290a1 <opt+0x1>
   12fa8:	jne    13058 <mem_pod_zero_reclaim_process+0xd8>
   12fae:	mov    eax,DWORD PTR [rip+0x2160f0]        # 2290a4 <opt+0x4>
   12fb4:	test   eax,eax
   12fb6:	je     13012 <mem_pod_zero_reclaim_process+0x92>
   12fb8:	test   rbp,rbp
   12fbb:	je     13012 <mem_pod_zero_reclaim_process+0x92>
   12fbd:	mov    rbp,QWORD PTR [rbp+0x8]
   12fc1:	test   rbp,rbp
   12fc4:	je     13012 <mem_pod_zero_reclaim_process+0x92>
   12fc6:	movsx  edi,WORD PTR [r12+0x12]
   12fcc:	mov    edx,0x38e38e39
   12fd1:	mov    eax,edi
   12fd3:	imul   edx
   12fd5:	mov    eax,edx
   12fd7:	mov    edx,edi
   12fd9:	sar    edx,0x1f
   12fdc:	sar    eax,1
   12fde:	sub    eax,edx
   12fe0:	lea    edx,[rax+rax*8]
   12fe3:	cmp    edi,edx
   12fe5:	jne    12fec <mem_pod_zero_reclaim_process+0x6c>
   12fe7:	cmp    edi,0x1a
   12fea:	jle    12ff1 <mem_pod_zero_reclaim_process+0x71>
   12fec:	call   70b0 <p2m_canonical_order.part.23>
   12ff1:	cdqe   
   12ff3:	shl    rbx,0x2
   12ff7:	add    DWORD PTR [rbp+rax*4+0x12d8],0x1
   12fff:	add    DWORD PTR [rbp+rbx*1+0x12e8],0x1
   13007:	add    rbx,rax
   1300a:	add    DWORD PTR [rbp+rbx*4+0x12f4],0x1
   13012:	pop    rbx
   13013:	pop    rbp
   13014:	pop    r12
   13016:	ret    
   13017:	nop    WORD PTR [rax+rax*1+0x0]
   13020:	mov    eax,DWORD PTR [rbp+0x2bff8]
   13026:	mov    ebx,0x2
   1302b:	cmp    eax,0x12
   1302e:	je     12fa1 <mem_pod_zero_reclaim_process+0x21>
   13034:	cmp    eax,0x30
   13037:	je     13043 <mem_pod_zero_reclaim_process+0xc3>
   13039:	xor    ebx,ebx
   1303b:	test   eax,eax
   1303d:	jne    12fa1 <mem_pod_zero_reclaim_process+0x21>
   13043:	test   BYTE PTR [rip+0x216057],0x40        # 2290a1 <opt+0x1>
   1304a:	mov    ebx,0x1
   1304f:	je     12fae <mem_pod_zero_reclaim_process+0x2e>
   13055:	nop    DWORD PTR [rax]
   13058:	lea    rsi,[rip+0x2162c1]        # 229320 <pod_reclaim_context_name>
   1305f:	movsxd rax,ebx
   13062:	movsx  ecx,WORD PTR [r12+0x10]
   13068:	lea    rdx,[rdi+0x58]
   1306c:	mov    edi,0x1
   13071:	push   QWORD PTR [rsi+rax*8]
   13074:	push   QWORD PTR [r12+0x8]
   13079:	lea    rsi,[rip+0xd2d8]        # 20358 <_IO_stdin_used+0x3398>
   13080:	movsx  r8d,WORD PTR [r12+0x12]
   13086:	mov    r9,QWORD PTR [r12]
   1308a:	xor    eax,eax
   1308c:	call   44f0 <__printf_chk@plt>
   13091:	pop    rdx
   13092:	pop    rcx
   13093:	jmp    12fae <mem_pod_zero_reclaim_process+0x2e>
   13098:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000130a0 <mem_pod_populate_process>:
   130a0:	push   rbp
   130a1:	push   rbx
   130a2:	mov    rbx,rdi
   130a5:	sub    rsp,0x8
   130a9:	test   BYTE PTR [rip+0x215ff1],0x40        # 2290a1 <opt+0x1>
   130b0:	mov    rbp,QWORD PTR [rdi+0x50]
   130b4:	jne    13110 <mem_pod_populate_process+0x70>
   130b6:	mov    eax,DWORD PTR [rip+0x215fe8]        # 2290a4 <opt+0x4>
   130bc:	test   eax,eax
   130be:	je     13108 <mem_pod_populate_process+0x68>
   130c0:	mov    rax,QWORD PTR [rbx+0x1a8]
   130c7:	test   rax,rax
   130ca:	je     13108 <mem_pod_populate_process+0x68>
   130cc:	mov    rbx,QWORD PTR [rax+0x8]
   130d0:	test   rbx,rbx
   130d3:	je     13108 <mem_pod_populate_process+0x68>
   130d5:	movsx  edi,WORD PTR [rbp+0x12]
   130d9:	mov    edx,0x38e38e39
   130de:	mov    eax,edi
   130e0:	imul   edx
   130e2:	mov    eax,edx
   130e4:	mov    edx,edi
   130e6:	sar    edx,0x1f
   130e9:	sar    eax,1
   130eb:	sub    eax,edx
   130ed:	lea    edx,[rax+rax*8]
   130f0:	cmp    edi,edx
   130f2:	jne    130f9 <mem_pod_populate_process+0x59>
   130f4:	cmp    edi,0x1a
   130f7:	jle    130fe <mem_pod_populate_process+0x5e>
   130f9:	call   70b0 <p2m_canonical_order.part.23>
   130fe:	cdqe   
   13100:	add    DWORD PTR [rbx+rax*4+0x1324],0x1
   13108:	add    rsp,0x8
   1310c:	pop    rbx
   1310d:	pop    rbp
   1310e:	ret    
   1310f:	nop
   13110:	sub    rsp,0x8
   13114:	movsx  ecx,WORD PTR [rbp+0x10]
   13118:	push   QWORD PTR [rbp+0x8]
   1311b:	movsx  r8d,WORD PTR [rbp+0x12]
   13120:	mov    r9,QWORD PTR [rbp+0x0]
   13124:	lea    rdx,[rdi+0x58]
   13128:	lea    rsi,[rip+0xd261]        # 20390 <_IO_stdin_used+0x33d0>
   1312f:	mov    edi,0x1
   13134:	xor    eax,eax
   13136:	call   44f0 <__printf_chk@plt>
   1313b:	pop    rdx
   1313c:	pop    rcx
   1313d:	jmp    130b6 <mem_pod_populate_process+0x16>
   13142:	nop    DWORD PTR [rax+0x0]
   13146:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013150 <mem_pod_superpage_splinter_process>:
   13150:	test   BYTE PTR [rip+0x215f4a],0x40        # 2290a1 <opt+0x1>
   13157:	jne    13160 <mem_pod_superpage_splinter_process+0x10>
   13159:	repz ret 
   1315b:	nop    DWORD PTR [rax+rax*1+0x0]
   13160:	mov    rax,QWORD PTR [rdi+0x50]
   13164:	lea    rdx,[rdi+0x58]
   13168:	lea    rsi,[rip+0xd249]        # 203b8 <_IO_stdin_used+0x33f8>
   1316f:	mov    edi,0x1
   13174:	movsx  ecx,WORD PTR [rax+0x8]
   13178:	mov    r8,QWORD PTR [rax]
   1317b:	xor    eax,eax
   1317d:	jmp    44f0 <__printf_chk@plt>
   13182:	nop    DWORD PTR [rax+0x0]
   13186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013190 <mem_page_grant>:
   13190:	test   BYTE PTR [rip+0x215f0a],0x40        # 2290a1 <opt+0x1>
   13197:	jne    131a0 <mem_page_grant+0x10>
   13199:	repz ret 
   1319b:	nop    DWORD PTR [rax+rax*1+0x0]
   131a0:	movzx  ecx,BYTE PTR [rdi+0x40]
   131a4:	mov    rax,QWORD PTR [rdi+0x50]
   131a8:	lea    rdx,[rip+0x2161d1]        # 229380 <mem_name>
   131af:	lea    rsi,[rip+0xa686]        # 1d83c <_IO_stdin_used+0x87c>
   131b6:	mov    r8d,DWORD PTR [rax]
   131b9:	xor    eax,eax
   131bb:	mov    rcx,QWORD PTR [rdx+rcx*8]
   131bf:	lea    rdx,[rdi+0x58]
   131c3:	mov    edi,0x1
   131c8:	jmp    44f0 <__printf_chk@plt>
   131cd:	nop    DWORD PTR [rax]

00000000000131d0 <mem_set_p2m_entry_process>:
   131d0:	test   BYTE PTR [rip+0x215eca],0x40        # 2290a1 <opt+0x1>
   131d7:	jne    131e0 <mem_set_p2m_entry_process+0x10>
   131d9:	repz ret 
   131db:	nop    DWORD PTR [rax+rax*1+0x0]
   131e0:	sub    rsp,0x8
   131e4:	mov    rax,QWORD PTR [rdi+0x50]
   131e8:	lea    rdx,[rdi+0x58]
   131ec:	lea    rsi,[rip+0xd1ed]        # 203e0 <_IO_stdin_used+0x3420>
   131f3:	mov    edi,0x1
   131f8:	movsx  ecx,WORD PTR [rax+0x14]
   131fc:	push   QWORD PTR [rax+0x8]
   131ff:	push   QWORD PTR [rax]
   13201:	movsx  r8d,WORD PTR [rax+0x16]
   13206:	mov    r9d,DWORD PTR [rax+0x10]
   1320a:	xor    eax,eax
   1320c:	call   44f0 <__printf_chk@plt>
   13211:	add    rsp,0x18
   13215:	ret    
   13216:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013220 <mem_decrease_reservation_process>:
   13220:	test   BYTE PTR [rip+0x215e7a],0x40        # 2290a1 <opt+0x1>
   13227:	jne    13230 <mem_decrease_reservation_process+0x10>
   13229:	repz ret 
   1322b:	nop    DWORD PTR [rax+rax*1+0x0]
   13230:	mov    rax,QWORD PTR [rdi+0x50]
   13234:	lea    rdx,[rdi+0x58]
   13238:	lea    rsi,[rip+0xd1d1]        # 20410 <_IO_stdin_used+0x3450>
   1323f:	mov    edi,0x1
   13244:	movsx  ecx,WORD PTR [rax+0x8]
   13248:	movsx  r8d,WORD PTR [rax+0xa]
   1324d:	mov    r9,QWORD PTR [rax]
   13250:	xor    eax,eax
   13252:	jmp    44f0 <__printf_chk@plt>
   13257:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013260 <pdev_find>:
   13260:	push   r15
   13262:	push   r14
   13264:	mov    eax,edi
   13266:	push   r13
   13268:	push   r12
   1326a:	mov    ecx,esi
   1326c:	push   rbp
   1326d:	push   rbx
   1326e:	lea    rbp,[rip+0x2542ab]        # 267520 <pdev_list>
   13275:	sub    rsp,0x8
   13279:	mov    rbx,QWORD PTR [rip+0x2542a0]        # 267520 <pdev_list>
   13280:	test   rbx,rbx
   13283:	je     132ad <pdev_find+0x4d>
   13285:	nop    DWORD PTR [rax]
   13288:	cmp    BYTE PTR [rbx],al
   1328a:	jb     1329a <pdev_find+0x3a>
   1328c:	jne    132ad <pdev_find+0x4d>
   1328e:	movzx  edx,BYTE PTR [rbx+0x1]
   13292:	cmp    dl,cl
   13294:	jae    13330 <pdev_find+0xd0>
   1329a:	lea    rbp,[rbx+0x408]
   132a1:	mov    rbx,QWORD PTR [rbx+0x408]
   132a8:	test   rbx,rbx
   132ab:	jne    13288 <pdev_find+0x28>
   132ad:	movzx  ecx,dil
   132b1:	mov    r8d,esi
   132b4:	mov    r14d,edi
   132b7:	mov    rdi,QWORD PTR [rip+0x251f9a]        # 265258 <warn>
   132be:	shr    r8b,0x4
   132c2:	mov    r9d,esi
   132c5:	lea    rdx,[rip+0xa582]        # 1d84e <_IO_stdin_used+0x88e>
   132cc:	and    r9d,0x3
   132d0:	and    r8d,0xf
   132d4:	xor    eax,eax
   132d6:	mov    r13d,esi
   132d9:	mov    esi,0x1
   132de:	call   4560 <__fprintf_chk@plt>
   132e3:	mov    edi,0x410
   132e8:	call   4490 <malloc@plt>
   132ed:	test   rax,rax
   132f0:	mov    r12,rax
   132f3:	mov    r15,rax
   132f6:	je     13340 <pdev_find+0xe0>
   132f8:	mov    ecx,0x82
   132fd:	xor    eax,eax
   132ff:	mov    rdi,r12
   13302:	rep stos QWORD PTR es:[rdi],rax
   13305:	mov    BYTE PTR [r12],r14b
   13309:	mov    BYTE PTR [r12+0x1],r13b
   1330e:	mov    QWORD PTR [r12+0x408],rbx
   13316:	mov    QWORD PTR [rbp+0x0],r12
   1331a:	add    rsp,0x8
   1331e:	mov    rax,r15
   13321:	pop    rbx
   13322:	pop    rbp
   13323:	pop    r12
   13325:	pop    r13
   13327:	pop    r14
   13329:	pop    r15
   1332b:	ret    
   1332c:	nop    DWORD PTR [rax+0x0]
   13330:	cmp    dl,sil
   13333:	jne    132ad <pdev_find+0x4d>
   13339:	mov    r15,rbx
   1333c:	jmp    1331a <pdev_find+0xba>
   1333e:	xchg   ax,ax
   13340:	mov    rdi,QWORD PTR [rip+0x2190f9]        # 22c440 <stderr@@GLIBC_2.2.5>
   13347:	lea    rcx,[rip+0xff9a]        # 232e8 <__func__.8040>
   1334e:	lea    rdx,[rip+0xa3d6]        # 1d72b <_IO_stdin_used+0x76b>
   13355:	xor    eax,eax
   13357:	mov    r8d,0x410
   1335d:	mov    esi,0x1
   13362:	call   4560 <__fprintf_chk@plt>
   13367:	cmp    DWORD PTR [rip+0x215d72],0x7        # 2290e0 <opt+0x40>
   1336e:	ja     132f8 <pdev_find+0x98>
   13370:	mov    edi,0x1
   13375:	call   4540 <exit@plt>
   1337a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013380 <dump_generic>:
   13380:	push   r13
   13382:	push   r12
   13384:	lea    rcx,[rsi+0x28]
   13388:	push   rbp
   13389:	push   rbx
   1338a:	lea    rdx,[rip+0xa4d9]        # 1d86a <_IO_stdin_used+0x8aa>
   13391:	mov    rbp,rsi
   13394:	mov    r12,rdi
   13397:	sub    rsp,0x10
   1339b:	mov    eax,DWORD PTR [rsi+0x14]
   1339e:	movzx  r9d,WORD PTR [rsi+0x12]
   133a3:	push   rax
   133a4:	movzx  eax,WORD PTR [rsi+0x10]
   133a8:	and    r9d,0xfff
   133af:	and    eax,0xfff
   133b4:	push   rax
   133b5:	movzx  eax,BYTE PTR [rsi+0x11]
   133b9:	shr    al,0x4
   133bc:	movzx  eax,al
   133bf:	push   rax
   133c0:	mov    r8d,DWORD PTR [rsi+0x10]
   133c4:	xor    eax,eax
   133c6:	mov    esi,0x1
   133cb:	call   4560 <__fprintf_chk@plt>
   133d0:	mov    eax,DWORD PTR [rbp+0x14]
   133d3:	add    rsp,0x20
   133d7:	test   eax,eax
   133d9:	jle    1340d <dump_generic+0x8d>
   133db:	lea    r13,[rip+0xa14f]        # 1d531 <_IO_stdin_used+0x571>
   133e2:	xor    ebx,ebx
   133e4:	nop    DWORD PTR [rax+0x0]
   133e8:	mov    rax,QWORD PTR [rbp+0x20]
   133ec:	mov    rdx,r13
   133ef:	mov    esi,0x1
   133f4:	mov    rdi,r12
   133f7:	mov    ecx,DWORD PTR [rax+rbx*4]
   133fa:	xor    eax,eax
   133fc:	call   4560 <__fprintf_chk@plt>
   13401:	lea    eax,[rbx+0x1]
   13404:	add    rbx,0x1
   13408:	cmp    DWORD PTR [rbp+0x14],eax
   1340b:	jg     133e8 <dump_generic+0x68>
   1340d:	add    rsp,0x8
   13411:	mov    rcx,r12
   13414:	lea    rdi,[rip+0xa466]        # 1d881 <_IO_stdin_used+0x8c1>
   1341b:	pop    rbx
   1341c:	pop    rbp
   1341d:	pop    r12
   1341f:	pop    r13
   13421:	mov    edx,0x3
   13426:	mov    esi,0x1
   1342b:	jmp    4550 <fwrite@plt>

0000000000013430 <irq_process>:
   13430:	movzx  edx,BYTE PTR [rip+0x215c6a]        # 2290a1 <opt+0x1>
   13437:	mov    eax,DWORD PTR [rdi+0x40]
   1343a:	sub    eax,0x802001
   1343f:	mov    esi,edx
   13441:	and    esi,0x40
   13444:	cmp    eax,0x7
   13447:	ja     137e0 <irq_process+0x3b0>
   1344d:	lea    rcx,[rip+0xfbc0]        # 23014 <_IO_stdin_used+0x6054>
   13454:	push   r12
   13456:	push   rbp
   13457:	push   rbx
   13458:	mov    rbx,rdi
   1345b:	movsxd rax,DWORD PTR [rcx+rax*4]
   1345f:	add    rax,rcx
   13462:	jmp    rax
   13464:	nop    DWORD PTR [rax+0x0]
   13468:	test   sil,sil
   1346b:	mov    rbp,QWORD PTR [rdi+0x50]
   1346f:	jne    136c8 <irq_process+0x298>
   13475:	and    edx,0x8
   13478:	je     134f9 <irq_process+0xc9>
   1347a:	mov    rax,QWORD PTR [rbx+0x38]
   1347e:	mov    rdx,QWORD PTR [rip+0x219d3b]        # 22d1c0 <P+0x20>
   13485:	cmp    rax,rdx
   13488:	jbe    136b8 <irq_process+0x288>
   1348e:	sub    rax,rdx
   13491:	xor    edx,edx
   13493:	movabs rcx,0x44b82fa09b5a53
   1349d:	mov    r8,rax
   134a0:	shl    r8,0xa
   134a4:	mov    rax,r8
   134a7:	div    QWORD PTR [rip+0x215bfa]        # 2290a8 <opt+0x8>
   134ae:	mov    rdx,rax
   134b1:	mov    r8,rax
   134b4:	shr    rdx,0x9
   134b8:	mov    rax,rdx
   134bb:	mul    rcx
   134be:	shr    rdx,0xb
   134c2:	mov    ecx,edx
   134c4:	imul   edx,edx,0x3b9aca00
   134ca:	sub    r8d,edx
   134cd:	mov    r9d,DWORD PTR [rbx+0x4]
   134d1:	mov    edx,DWORD PTR [rbp+0x0]
   134d4:	lea    rsi,[rip+0xa3aa]        # 1d885 <_IO_stdin_used+0x8c5>
   134db:	pop    rbx
   134dc:	pop    rbp
   134dd:	pop    r12
   134df:	mov    edi,0x1
   134e4:	xor    eax,eax
   134e6:	jmp    44f0 <__printf_chk@plt>
   134eb:	nop    DWORD PTR [rax+rax*1+0x0]
   134f0:	test   sil,sil
   134f3:	jne    13770 <irq_process+0x340>
   134f9:	pop    rbx
   134fa:	pop    rbp
   134fb:	pop    r12
   134fd:	ret    
   134fe:	xchg   ax,ax
   13500:	mov    rbp,QWORD PTR [rdi+0x50]
   13504:	test   sil,sil
   13507:	movsxd rcx,DWORD PTR [rbp+0x0]
   1350b:	jne    13748 <irq_process+0x318>
   13511:	cmp    ecx,0x1ff
   13517:	jg     134f9 <irq_process+0xc9>
   13519:	movsxd rax,DWORD PTR [rbp+0x4]
   1351d:	cmp    eax,0xff
   13522:	jg     134f9 <irq_process+0xc9>
   13524:	lea    rbx,[rip+0x254015]        # 267540 <irq_table>
   1352b:	mov    rdx,rcx
   1352e:	shl    rdx,0x4
   13532:	cmp    DWORD PTR [rbx+rdx*1],0x1
   13536:	je     137a0 <irq_process+0x370>
   1353c:	shl    rcx,0x4
   13540:	mov    rbx,QWORD PTR [rbx+rcx*1+0x8]
   13545:	test   rbx,rbx
   13548:	je     134f9 <irq_process+0xc9>
   1354a:	movsxd rax,DWORD PTR [rbp+0x4]
   1354e:	mov    edx,DWORD PTR [rbx+rax*4+0x4]
   13552:	test   edx,edx
   13554:	jne    13577 <irq_process+0x147>
   13556:	mov    rcx,QWORD PTR [rip+0x251cfb]        # 265258 <warn>
   1355d:	lea    rdi,[rip+0xd03c]        # 205a0 <_IO_stdin_used+0x35e0>
   13564:	mov    edx,0x26
   13569:	mov    esi,0x1
   1356e:	call   4550 <fwrite@plt>
   13573:	movsxd rax,DWORD PTR [rbp+0x4]
   13577:	mov    DWORD PTR [rbx+rax*4+0x4],0x0
   1357f:	jmp    134f9 <irq_process+0xc9>
   13584:	nop    DWORD PTR [rax+0x0]
   13588:	test   sil,sil
   1358b:	je     134f9 <irq_process+0xc9>
   13591:	mov    rax,QWORD PTR [rdi+0x50]
   13595:	sub    rsp,0x8
   13599:	lea    rdx,[rdi+0x58]
   1359d:	lea    rsi,[rip+0xce9c]        # 20440 <_IO_stdin_used+0x3480>
   135a4:	mov    edi,0x1
   135a9:	mov    ecx,DWORD PTR [rax+0x8]
   135ac:	push   rcx
   135ad:	mov    ecx,DWORD PTR [rax+0xc]
   135b0:	push   rcx
   135b1:	mov    ecx,DWORD PTR [rax+0x10]
   135b4:	push   rcx
   135b5:	mov    r9d,DWORD PTR [rax+0x14]
   135b9:	mov    r8d,DWORD PTR [rax+0x4]
   135bd:	mov    ecx,DWORD PTR [rax]
   135bf:	xor    eax,eax
   135c1:	call   44f0 <__printf_chk@plt>
   135c6:	add    rsp,0x20
   135ca:	jmp    134f9 <irq_process+0xc9>
   135cf:	nop
   135d0:	mov    rbp,QWORD PTR [rdi+0x50]
   135d4:	test   sil,sil
   135d7:	movsxd rcx,DWORD PTR [rbp+0x0]
   135db:	jne    13708 <irq_process+0x2d8>
   135e1:	cmp    ecx,0x1ff
   135e7:	jg     134f9 <irq_process+0xc9>
   135ed:	movsxd rax,DWORD PTR [rbp+0x4]
   135f1:	cmp    eax,0xff
   135f6:	jg     134f9 <irq_process+0xc9>
   135fc:	lea    rbx,[rip+0x253f3d]        # 267540 <irq_table>
   13603:	mov    rdx,rcx
   13606:	shl    rdx,0x4
   1360a:	cmp    DWORD PTR [rbx+rdx*1],0x1
   1360e:	je     137c0 <irq_process+0x390>
   13614:	shl    rcx,0x4
   13618:	mov    rbx,QWORD PTR [rbx+rcx*1+0x8]
   1361d:	test   rbx,rbx
   13620:	je     134f9 <irq_process+0xc9>
   13626:	movsxd rax,DWORD PTR [rbp+0x4]
   1362a:	mov    esi,DWORD PTR [rbx+rax*4+0x4]
   1362e:	test   esi,esi
   13630:	je     13658 <irq_process+0x228>
   13632:	movzx  ecx,BYTE PTR [rbx]
   13635:	movzx  r8d,BYTE PTR [rbx+0x1]
   1363a:	lea    rdx,[rip+0xcecf]        # 20510 <_IO_stdin_used+0x3550>
   13641:	mov    rdi,QWORD PTR [rip+0x251c10]        # 265258 <warn>
   13648:	mov    esi,0x1
   1364d:	xor    eax,eax
   1364f:	call   4560 <__fprintf_chk@plt>
   13654:	movsxd rax,DWORD PTR [rbp+0x4]
   13658:	mov    DWORD PTR [rbx+rax*4+0x4],0x1
   13660:	jmp    134f9 <irq_process+0xc9>
   13665:	nop    DWORD PTR [rax]
   13668:	test   sil,sil
   1366b:	je     134f9 <irq_process+0xc9>
   13671:	mov    rax,QWORD PTR [rdi+0x50]
   13675:	lea    rdx,[rdi+0x58]
   13679:	lea    rsi,[rip+0xcf48]        # 205c8 <_IO_stdin_used+0x3608>
   13680:	pop    rbx
   13681:	pop    rbp
   13682:	pop    r12
   13684:	mov    ecx,DWORD PTR [rax]
   13686:	mov    edi,0x1
   1368b:	xor    eax,eax
   1368d:	jmp    44f0 <__printf_chk@plt>
   13692:	nop    WORD PTR [rax+rax*1+0x0]
   13698:	test   sil,sil
   1369b:	je     134f9 <irq_process+0xc9>
   136a1:	pop    rbx
   136a2:	pop    rbp
   136a3:	pop    r12
   136a5:	lea    rsi,[rdi+0x30]
   136a9:	mov    rdi,QWORD PTR [rip+0x218d70]        # 22c420 <stdout@@GLIBC_2.2.5>
   136b0:	jmp    13380 <dump_generic>
   136b5:	nop    DWORD PTR [rax]
   136b8:	xor    r8d,r8d
   136bb:	xor    ecx,ecx
   136bd:	jmp    134cd <irq_process+0x9d>
   136c2:	nop    WORD PTR [rax+rax*1+0x0]
   136c8:	mov    r8d,DWORD PTR [rbp+0x8]
   136cc:	mov    eax,DWORD PTR [rbp+0x4]
   136cf:	sub    rsp,0x8
   136d3:	lea    rdx,[rdi+0x58]
   136d7:	lea    rsi,[rip+0xcda2]        # 20480 <_IO_stdin_used+0x34c0>
   136de:	mov    edi,0x1
   136e3:	push   r8
   136e5:	mov    ecx,DWORD PTR [rbp+0x0]
   136e8:	mov    r9d,eax
   136eb:	sub    r8d,eax
   136ee:	xor    eax,eax
   136f0:	call   44f0 <__printf_chk@plt>
   136f5:	pop    r8
   136f7:	movzx  edx,BYTE PTR [rip+0x2159a3]        # 2290a1 <opt+0x1>
   136fe:	pop    r9
   13700:	jmp    13475 <irq_process+0x45>
   13705:	nop    DWORD PTR [rax]
   13708:	mov    eax,DWORD PTR [rbp+0x8]
   1370b:	sub    rsp,0x8
   1370f:	lea    rdx,[rdi+0x58]
   13713:	lea    rsi,[rip+0xcd8e]        # 204a8 <_IO_stdin_used+0x34e8>
   1371a:	mov    edi,0x1
   1371f:	push   rax
   13720:	mov    eax,DWORD PTR [rbp+0xc]
   13723:	push   rax
   13724:	mov    eax,DWORD PTR [rbp+0x10]
   13727:	push   rax
   13728:	mov    r9d,DWORD PTR [rbp+0x14]
   1372c:	xor    eax,eax
   1372e:	mov    r8d,DWORD PTR [rbp+0x4]
   13732:	call   44f0 <__printf_chk@plt>
   13737:	movsxd rcx,DWORD PTR [rbp+0x0]
   1373b:	add    rsp,0x20
   1373f:	jmp    135e1 <irq_process+0x1b1>
   13744:	nop    DWORD PTR [rax+0x0]
   13748:	mov    r9d,DWORD PTR [rbp+0x8]
   1374c:	mov    r8d,DWORD PTR [rbp+0x4]
   13750:	lea    rdx,[rdi+0x58]
   13754:	lea    rsi,[rip+0xce15]        # 20570 <_IO_stdin_used+0x35b0>
   1375b:	mov    edi,0x1
   13760:	xor    eax,eax
   13762:	call   44f0 <__printf_chk@plt>
   13767:	movsxd rcx,DWORD PTR [rbp+0x0]
   1376b:	jmp    13511 <irq_process+0xe1>
   13770:	mov    rax,QWORD PTR [rdi+0x50]
   13774:	lea    rdx,[rdi+0x58]
   13778:	lea    rsi,[rip+0xcdb9]        # 20538 <_IO_stdin_used+0x3578>
   1377f:	pop    rbx
   13780:	pop    rbp
   13781:	pop    r12
   13783:	mov    r9d,DWORD PTR [rax+0x8]
   13787:	mov    r8d,DWORD PTR [rax+0x4]
   1378b:	mov    edi,0x1
   13790:	mov    ecx,DWORD PTR [rax]
   13792:	xor    eax,eax
   13794:	jmp    44f0 <__printf_chk@plt>
   13799:	nop    DWORD PTR [rax+0x0]
   137a0:	lea    r12,[rip+0x2195f9]        # 22cda0 <global_vector_used>
   137a7:	mov    ecx,DWORD PTR [r12+rax*4]
   137ab:	test   ecx,ecx
   137ad:	je     137e7 <irq_process+0x3b7>
   137af:	mov    DWORD PTR [r12+rax*4],0x0
   137b7:	movsxd rcx,DWORD PTR [rbp+0x0]
   137bb:	jmp    1353c <irq_process+0x10c>
   137c0:	lea    r12,[rip+0x2195d9]        # 22cda0 <global_vector_used>
   137c7:	mov    edi,DWORD PTR [r12+rax*4]
   137cb:	test   edi,edi
   137cd:	jne    1380a <irq_process+0x3da>
   137cf:	mov    DWORD PTR [r12+rax*4],0x1
   137d7:	movsxd rcx,DWORD PTR [rbp+0x0]
   137db:	jmp    13614 <irq_process+0x1e4>
   137e0:	test   sil,sil
   137e3:	jne    1382d <irq_process+0x3fd>
   137e5:	repz ret 
   137e7:	mov    rcx,QWORD PTR [rip+0x251a6a]        # 265258 <warn>
   137ee:	lea    rdi,[rip+0xcdab]        # 205a0 <_IO_stdin_used+0x35e0>
   137f5:	mov    edx,0x26
   137fa:	mov    esi,0x1
   137ff:	call   4550 <fwrite@plt>
   13804:	movsxd rax,DWORD PTR [rbp+0x4]
   13808:	jmp    137af <irq_process+0x37f>
   1380a:	mov    rcx,QWORD PTR [rip+0x251a47]        # 265258 <warn>
   13811:	lea    rdi,[rip+0xccd0]        # 204e8 <_IO_stdin_used+0x3528>
   13818:	mov    edx,0x24
   1381d:	mov    esi,0x1
   13822:	call   4550 <fwrite@plt>
   13827:	movsxd rax,DWORD PTR [rbp+0x4]
   1382b:	jmp    137cf <irq_process+0x39f>
   1382d:	lea    rsi,[rdi+0x30]
   13831:	mov    rdi,QWORD PTR [rip+0x218be8]        # 22c420 <stdout@@GLIBC_2.2.5>
   13838:	jmp    13380 <dump_generic>
   1383d:	nop    DWORD PTR [rax]

0000000000013840 <error.part.24>:
   13840:	sub    rsp,0x8
   13844:	test   rdi,rdi
   13847:	je     13858 <error.part.24+0x18>
   13849:	mov    rsi,rdi
   1384c:	mov    rdi,QWORD PTR [rip+0x251a05]        # 265258 <warn>
   13853:	call   13380 <dump_generic>
   13858:	mov    edi,0x1
   1385d:	call   4540 <exit@plt>
   13862:	nop    DWORD PTR [rax+0x0]
   13866:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013870 <hvm_io_assist_process>:
   13870:	push   rbp
   13871:	push   rbx
   13872:	mov    rbx,rdi
   13875:	sub    rsp,0x8
   13879:	movzx  ecx,BYTE PTR [rdi+0x11]
   1387d:	test   cl,0x1
   13880:	jne    13970 <hvm_io_assist_process+0x100>
   13886:	mov    rbp,QWORD PTR [rsi+0x28410]
   1388d:	mov    eax,DWORD PTR [rsi+0x28348]
   13893:	mov    edx,DWORD PTR [rbp+0x0]
   13896:	and    eax,0x80000000
   1389b:	and    edx,0x7fffffff
   138a1:	or     eax,edx
   138a3:	mov    rdx,QWORD PTR [rsi+0x283d8]
   138aa:	mov    DWORD PTR [rsi+0x28348],eax
   138b0:	mov    eax,DWORD PTR [rbp+0x4]
   138b3:	mov    DWORD PTR [rsi+0x2834c],eax
   138b9:	lea    rax,[rip+0xffffffffffff9270]        # cb30 <hvm_generic_postprocess>
   138c0:	cmp    rdx,rax
   138c3:	sete   al
   138c6:	test   rdx,rdx
   138c9:	sete   dl
   138cc:	or     eax,edx
   138ce:	and    ecx,0x6
   138d1:	je     13930 <hvm_io_assist_process+0xc0>
   138d3:	or     BYTE PTR [rsi+0x2834b],0x80
   138da:	test   al,al
   138dc:	je     139a0 <hvm_io_assist_process+0x130>
   138e2:	test   BYTE PTR [rip+0x2157b8],0x40        # 2290a1 <opt+0x1>
   138e9:	lea    rax,[rip+0xffffffffffffae90]        # e780 <hvm_io_write_postprocess>
   138f0:	mov    QWORD PTR [rsi+0x283d8],rax
   138f7:	je     13996 <hvm_io_assist_process+0x126>
   138fd:	mov    r9d,DWORD PTR [rbp+0x4]
   13901:	mov    r8d,DWORD PTR [rbp+0x0]
   13905:	lea    rcx,[rip+0xb205]        # 1eb11 <_IO_stdin_used+0x1b51>
   1390c:	add    rsp,0x8
   13910:	lea    rdx,[rbx+0x28]
   13914:	lea    rsi,[rip+0x9f98]        # 1d8b3 <_IO_stdin_used+0x8f3>
   1391b:	pop    rbx
   1391c:	pop    rbp
   1391d:	mov    edi,0x1
   13922:	xor    eax,eax
   13924:	jmp    44f0 <__printf_chk@plt>
   13929:	nop    DWORD PTR [rax+0x0]
   13930:	and    BYTE PTR [rsi+0x2834b],0x7f
   13937:	test   al,al
   13939:	je     139d0 <hvm_io_assist_process+0x160>
   1393f:	test   BYTE PTR [rip+0x21575b],0x40        # 2290a1 <opt+0x1>
   13946:	lea    rax,[rip+0xffffffffffffae73]        # e7c0 <hvm_io_read_postprocess>
   1394d:	mov    QWORD PTR [rsi+0x283d8],rax
   13954:	je     13996 <hvm_io_assist_process+0x126>
   13956:	mov    r9d,DWORD PTR [rbp+0x4]
   1395a:	mov    r8d,DWORD PTR [rbp+0x0]
   1395e:	lea    rcx,[rip+0xb1a4]        # 1eb09 <_IO_stdin_used+0x1b49>
   13965:	jmp    1390c <hvm_io_assist_process+0x9c>
   13967:	nop    WORD PTR [rax+rax*1+0x0]
   13970:	mov    rcx,QWORD PTR [rip+0x218ac9]        # 22c440 <stderr@@GLIBC_2.2.5>
   13977:	lea    rdi,[rip+0x9f17]        # 1d895 <_IO_stdin_used+0x8d5>
   1397e:	mov    edx,0x1d
   13983:	mov    esi,0x1
   13988:	call   4550 <fwrite@plt>
   1398d:	cmp    DWORD PTR [rip+0x21574c],0x3        # 2290e0 <opt+0x40>
   13994:	jbe    13a00 <hvm_io_assist_process+0x190>
   13996:	add    rsp,0x8
   1399a:	pop    rbx
   1399b:	pop    rbp
   1399c:	ret    
   1399d:	nop    DWORD PTR [rax]
   139a0:	mov    rdi,QWORD PTR [rip+0x2518b1]        # 265258 <warn>
   139a7:	lea    rcx,[rip+0xfd72]        # 23720 <__func__.6393>
   139ae:	lea    rdx,[rip+0xc383]        # 1fd38 <_IO_stdin_used+0x2d78>
   139b5:	mov    esi,0x1
   139ba:	call   4560 <__fprintf_chk@plt>
   139bf:	test   BYTE PTR [rip+0x2156db],0x40        # 2290a1 <opt+0x1>
   139c6:	jne    138fd <hvm_io_assist_process+0x8d>
   139cc:	jmp    13996 <hvm_io_assist_process+0x126>
   139ce:	xchg   ax,ax
   139d0:	mov    rdi,QWORD PTR [rip+0x251881]        # 265258 <warn>
   139d7:	lea    rcx,[rip+0xfd42]        # 23720 <__func__.6393>
   139de:	lea    rdx,[rip+0xc353]        # 1fd38 <_IO_stdin_used+0x2d78>
   139e5:	xor    eax,eax
   139e7:	mov    esi,0x1
   139ec:	call   4560 <__fprintf_chk@plt>
   139f1:	test   BYTE PTR [rip+0x2156a9],0x40        # 2290a1 <opt+0x1>
   139f8:	jne    13956 <hvm_io_assist_process+0xe6>
   139fe:	jmp    13996 <hvm_io_assist_process+0x126>
   13a00:	mov    rdi,rbx
   13a03:	call   13840 <error.part.24>
   13a08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013a10 <shadow_emulate_process>:
   13a10:	push   r13
   13a12:	push   r12
   13a14:	mov    r12,rdi
   13a17:	push   rbp
   13a18:	push   rbx
   13a19:	mov    rbp,rsi
   13a1c:	sub    rsp,0x8
   13a20:	mov    ebx,DWORD PTR [rdi+0x10]
   13a23:	mov    rax,QWORD PTR [rsi+0x10]
   13a27:	mov    r13,QWORD PTR [rdi+0x20]
   13a2b:	shr    ebx,0x8
   13a2e:	mov    r9d,DWORD PTR [rax+0x14]
   13a32:	and    ebx,0xf
   13a35:	add    ebx,0x2
   13a38:	cmp    r9d,ebx
   13a3b:	je     13a68 <shadow_emulate_process+0x58>
   13a3d:	mov    rdi,QWORD PTR [rip+0x251814]        # 265258 <warn>
   13a44:	lea    rcx,[rip+0xfb05]        # 23550 <__func__.6979>
   13a4b:	lea    rdx,[rip+0xcb96]        # 205e8 <_IO_stdin_used+0x3628>
   13a52:	mov    r8d,ebx
   13a55:	mov    esi,0x1
   13a5a:	xor    eax,eax
   13a5c:	call   4560 <__fprintf_chk@plt>
   13a61:	mov    rax,QWORD PTR [rbp+0x10]
   13a65:	mov    DWORD PTR [rax+0x14],ebx
   13a68:	cmp    ebx,0x3
   13a6b:	je     13be8 <shadow_emulate_process+0x1d8>
   13a71:	cmp    ebx,0x4
   13a74:	je     13bc0 <shadow_emulate_process+0x1b0>
   13a7a:	cmp    ebx,0x2
   13a7d:	je     13b78 <shadow_emulate_process+0x168>
   13a83:	lea    r13,[rbp+0x28348]
   13a8a:	mov    esi,ebx
   13a8c:	mov    rdi,r13
   13a8f:	call   ced0 <pf_preprocess>
   13a94:	test   BYTE PTR [rip+0x215606],0x40        # 2290a1 <opt+0x1>
   13a9b:	jne    13af0 <shadow_emulate_process+0xe0>
   13a9d:	mov    rax,QWORD PTR [rbp+0x283d8]
   13aa4:	test   rax,rax
   13aa7:	je     13b58 <shadow_emulate_process+0x148>
   13aad:	lea    rdx,[rip+0xffffffffffff907c]        # cb30 <hvm_generic_postprocess>
   13ab4:	cmp    rax,rdx
   13ab7:	je     13b58 <shadow_emulate_process+0x148>
   13abd:	mov    rdi,QWORD PTR [rip+0x251794]        # 265258 <warn>
   13ac4:	add    rsp,0x8
   13ac8:	lea    rcx,[rip+0xfa81]        # 23550 <__func__.6979>
   13acf:	pop    rbx
   13ad0:	pop    rbp
   13ad1:	pop    r12
   13ad3:	pop    r13
   13ad5:	lea    rdx,[rip+0xc25c]        # 1fd38 <_IO_stdin_used+0x2d78>
   13adc:	mov    esi,0x1
   13ae1:	xor    eax,eax
   13ae3:	jmp    4560 <__fprintf_chk@plt>
   13ae8:	nop    DWORD PTR [rax+rax*1+0x0]
   13af0:	mov    r9,QWORD PTR [rbp+0x28380]
   13af7:	mov    r8d,DWORD PTR [rbp+0x283a0]
   13afe:	mov    rdi,r13
   13b01:	mov    esi,DWORD PTR [rbp+0x28350]
   13b07:	call   11190 <flag_string>
   13b0c:	mov    rcx,QWORD PTR [rbp+0x28348]
   13b13:	push   r9
   13b15:	lea    rdx,[r12+0x28]
   13b1a:	push   r8
   13b1c:	push   rsi
   13b1d:	lea    rsi,[rip+0xcb44]        # 20668 <_IO_stdin_used+0x36a8>
   13b24:	push   rax
   13b25:	mov    r9,QWORD PTR [rbp+0x28378]
   13b2c:	xor    eax,eax
   13b2e:	mov    r8,QWORD PTR [rbp+0x28370]
   13b35:	mov    edi,0x1
   13b3a:	call   44f0 <__printf_chk@plt>
   13b3f:	mov    rax,QWORD PTR [rbp+0x283d8]
   13b46:	add    rsp,0x20
   13b4a:	test   rax,rax
   13b4d:	jne    13aad <shadow_emulate_process+0x9d>
   13b53:	nop    DWORD PTR [rax+rax*1+0x0]
   13b58:	lea    rax,[rip+0xffffffffffff7091]        # abf0 <shadow_emulate_postprocess>
   13b5f:	mov    QWORD PTR [rbp+0x283d8],rax
   13b66:	add    rsp,0x8
   13b6a:	pop    rbx
   13b6b:	pop    rbp
   13b6c:	pop    r12
   13b6e:	pop    r13
   13b70:	ret    
   13b71:	nop    DWORD PTR [rax+0x0]
   13b78:	mov    eax,DWORD PTR [r12+0x14]
   13b7d:	shl    eax,0x2
   13b80:	cmp    eax,0x10
   13b83:	jne    13c30 <shadow_emulate_process+0x220>
   13b89:	mov    eax,DWORD PTR [r13+0x8]
   13b8d:	mov    QWORD PTR [rbp+0x28348],rax
   13b94:	mov    eax,DWORD PTR [r13+0xc]
   13b98:	and    eax,0x1fffffff
   13b9d:	mov    DWORD PTR [rbp+0x28350],eax
   13ba3:	mov    eax,DWORD PTR [r13+0x0]
   13ba7:	mov    QWORD PTR [rbp+0x28370],rax
   13bae:	mov    eax,DWORD PTR [r13+0x4]
   13bb2:	mov    QWORD PTR [rbp+0x28378],rax
   13bb9:	jmp    13a83 <shadow_emulate_process+0x73>
   13bbe:	xchg   ax,ax
   13bc0:	mov    eax,DWORD PTR [r12+0x14]
   13bc5:	shl    eax,0x2
   13bc8:	cmp    eax,0x20
   13bcb:	jne    13c98 <shadow_emulate_process+0x288>
   13bd1:	mov    rax,QWORD PTR [r13+0x10]
   13bd5:	mov    QWORD PTR [rbp+0x28348],rax
   13bdc:	mov    eax,DWORD PTR [r13+0x18]
   13be0:	jmp    13c08 <shadow_emulate_process+0x1f8>
   13be2:	nop    WORD PTR [rax+rax*1+0x0]
   13be8:	mov    eax,DWORD PTR [r12+0x14]
   13bed:	shl    eax,0x2
   13bf0:	cmp    eax,0x18
   13bf3:	jne    13c80 <shadow_emulate_process+0x270>
   13bf9:	mov    eax,DWORD PTR [r13+0x10]
   13bfd:	mov    QWORD PTR [rbp+0x28348],rax
   13c04:	mov    eax,DWORD PTR [r13+0x14]
   13c08:	and    eax,0x1fffffff
   13c0d:	mov    DWORD PTR [rbp+0x28350],eax
   13c13:	mov    rax,QWORD PTR [r13+0x0]
   13c17:	mov    QWORD PTR [rbp+0x28370],rax
   13c1e:	mov    rax,QWORD PTR [r13+0x8]
   13c22:	mov    QWORD PTR [rbp+0x28378],rax
   13c29:	jmp    13a83 <shadow_emulate_process+0x73>
   13c2e:	xchg   ax,ax
   13c30:	mov    rdx,QWORD PTR [rbp+0x10]
   13c34:	sub    rsp,0x8
   13c38:	mov    r8d,0x10
   13c3e:	push   rax
   13c3f:	mov    r9d,DWORD PTR [rdx+0x14]
   13c43:	mov    rdi,QWORD PTR [rip+0x25160e]        # 265258 <warn>
   13c4a:	lea    rdx,[rip+0xc9df]        # 20630 <_IO_stdin_used+0x3670>
   13c51:	lea    rcx,[rip+0xf8f8]        # 23550 <__func__.6979>
   13c58:	xor    eax,eax
   13c5a:	mov    esi,0x1
   13c5f:	call   4560 <__fprintf_chk@plt>
   13c64:	cmp    DWORD PTR [rip+0x215475],0x3        # 2290e0 <opt+0x40>
   13c6b:	pop    rax
   13c6c:	pop    rdx
   13c6d:	ja     13b66 <shadow_emulate_process+0x156>
   13c73:	mov    rdi,r12
   13c76:	call   13840 <error.part.24>
   13c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   13c80:	mov    rdx,QWORD PTR [rbp+0x10]
   13c84:	sub    rsp,0x8
   13c88:	mov    r8d,0x18
   13c8e:	push   rax
   13c8f:	mov    r9d,DWORD PTR [rdx+0x14]
   13c93:	jmp    13c43 <shadow_emulate_process+0x233>
   13c95:	nop    DWORD PTR [rax]
   13c98:	mov    rdx,QWORD PTR [rbp+0x10]
   13c9c:	sub    rsp,0x8
   13ca0:	mov    r8d,0x20
   13ca6:	push   rax
   13ca7:	mov    r9d,DWORD PTR [rdx+0x14]
   13cab:	jmp    13c43 <shadow_emulate_process+0x233>
   13cad:	nop    DWORD PTR [rax]

0000000000013cb0 <shadow_parse_other>:
   13cb0:	push   r14
   13cb2:	push   r13
   13cb4:	mov    r13,rsi
   13cb7:	push   r12
   13cb9:	push   rbp
   13cba:	mov    rbp,rdi
   13cbd:	push   rbx
   13cbe:	mov    ebx,DWORD PTR [rdi+0x10]
   13cc1:	mov    rax,QWORD PTR [rdx+0x10]
   13cc5:	mov    r14,QWORD PTR [rdi+0x20]
   13cc9:	shr    ebx,0x8
   13ccc:	mov    r9d,DWORD PTR [rax+0x14]
   13cd0:	and    ebx,0xf
   13cd3:	add    ebx,0x2
   13cd6:	cmp    r9d,ebx
   13cd9:	je     13d0a <shadow_parse_other+0x5a>
   13cdb:	mov    rdi,QWORD PTR [rip+0x251576]        # 265258 <warn>
   13ce2:	mov    r12,rdx
   13ce5:	lea    rcx,[rip+0xf844]        # 23530 <__func__.7008>
   13cec:	lea    rdx,[rip+0xc8f5]        # 205e8 <_IO_stdin_used+0x3628>
   13cf3:	mov    r8d,ebx
   13cf6:	mov    esi,0x1
   13cfb:	xor    eax,eax
   13cfd:	call   4560 <__fprintf_chk@plt>
   13d02:	mov    rax,QWORD PTR [r12+0x10]
   13d07:	mov    DWORD PTR [rax+0x14],ebx
   13d0a:	cmp    ebx,0x3
   13d0d:	je     13d80 <shadow_parse_other+0xd0>
   13d0f:	cmp    ebx,0x4
   13d12:	je     13d50 <shadow_parse_other+0xa0>
   13d14:	cmp    ebx,0x2
   13d17:	je     13d28 <shadow_parse_other+0x78>
   13d19:	pop    rbx
   13d1a:	pop    rbp
   13d1b:	pop    r12
   13d1d:	pop    r13
   13d1f:	pop    r14
   13d21:	ret    
   13d22:	nop    WORD PTR [rax+rax*1+0x0]
   13d28:	mov    eax,DWORD PTR [rbp+0x14]
   13d2b:	shl    eax,0x2
   13d2e:	cmp    eax,0x8
   13d31:	jne    13da8 <shadow_parse_other+0xf8>
   13d33:	mov    eax,DWORD PTR [r14+0x4]
   13d37:	pop    rbx
   13d38:	pop    rbp
   13d39:	pop    r12
   13d3b:	mov    QWORD PTR [r13+0x8],rax
   13d3f:	mov    eax,DWORD PTR [r14]
   13d42:	mov    QWORD PTR [r13+0x0],rax
   13d46:	pop    r13
   13d48:	pop    r14
   13d4a:	ret    
   13d4b:	nop    DWORD PTR [rax+rax*1+0x0]
   13d50:	mov    eax,DWORD PTR [rbp+0x14]
   13d53:	shl    eax,0x2
   13d56:	cmp    eax,0x10
   13d59:	jne    13e10 <shadow_parse_other+0x160>
   13d5f:	mov    rax,QWORD PTR [r14+0x8]
   13d63:	pop    rbx
   13d64:	pop    rbp
   13d65:	mov    QWORD PTR [r13+0x8],rax
   13d69:	mov    rax,QWORD PTR [r14]
   13d6c:	pop    r12
   13d6e:	mov    QWORD PTR [r13+0x0],rax
   13d72:	pop    r13
   13d74:	pop    r14
   13d76:	ret    
   13d77:	nop    WORD PTR [rax+rax*1+0x0]
   13d80:	mov    eax,DWORD PTR [rbp+0x14]
   13d83:	shl    eax,0x2
   13d86:	cmp    eax,0x10
   13d89:	jne    13df8 <shadow_parse_other+0x148>
   13d8b:	mov    eax,DWORD PTR [r14+0x8]
   13d8f:	pop    rbx
   13d90:	pop    rbp
   13d91:	pop    r12
   13d93:	mov    QWORD PTR [r13+0x8],rax
   13d97:	mov    rax,QWORD PTR [r14]
   13d9a:	mov    QWORD PTR [r13+0x0],rax
   13d9e:	pop    r13
   13da0:	pop    r14
   13da2:	ret    
   13da3:	nop    DWORD PTR [rax+rax*1+0x0]
   13da8:	sub    rsp,0x8
   13dac:	mov    r9d,0x2
   13db2:	mov    r8d,0x8
   13db8:	push   rax
   13db9:	mov    rdi,QWORD PTR [rip+0x251498]        # 265258 <warn>
   13dc0:	lea    rdx,[rip+0xc869]        # 20630 <_IO_stdin_used+0x3670>
   13dc7:	lea    rcx,[rip+0xf762]        # 23530 <__func__.7008>
   13dce:	xor    eax,eax
   13dd0:	mov    esi,0x1
   13dd5:	call   4560 <__fprintf_chk@plt>
   13dda:	cmp    DWORD PTR [rip+0x2152ff],0x3        # 2290e0 <opt+0x40>
   13de1:	pop    rax
   13de2:	pop    rdx
   13de3:	ja     13d19 <shadow_parse_other+0x69>
   13de9:	mov    rdi,rbp
   13dec:	call   13840 <error.part.24>
   13df1:	nop    DWORD PTR [rax+0x0]
   13df8:	sub    rsp,0x8
   13dfc:	mov    r9d,0x3
   13e02:	mov    r8d,0x10
   13e08:	push   rax
   13e09:	jmp    13db9 <shadow_parse_other+0x109>
   13e0b:	nop    DWORD PTR [rax+rax*1+0x0]
   13e10:	sub    rsp,0x8
   13e14:	mov    r9d,0x4
   13e1a:	mov    r8d,0x10
   13e20:	push   rax
   13e21:	jmp    13db9 <shadow_parse_other+0x109>
   13e23:	nop    DWORD PTR [rax]
   13e26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013e30 <shadow_emulate_other_process>:
   13e30:	push   r12
   13e32:	push   rbp
   13e33:	mov    r12,rdi
   13e36:	push   rbx
   13e37:	mov    rbx,rsi
   13e3a:	mov    rdx,rbx
   13e3d:	sub    rsp,0x20
   13e41:	mov    ebp,DWORD PTR [rdi+0x10]
   13e44:	mov    rsi,rsp
   13e47:	mov    rax,QWORD PTR fs:0x28
   13e50:	mov    QWORD PTR [rsp+0x18],rax
   13e55:	xor    eax,eax
   13e57:	call   13cb0 <shadow_parse_other>
   13e5c:	mov    rax,QWORD PTR [rsp]
   13e60:	movzx  ebp,bpl
   13e64:	lea    rdi,[rbx+0x28348]
   13e6b:	mov    DWORD PTR [rbx+0x28358],ebp
   13e71:	mov    QWORD PTR [rbx+0x283a8],rax
   13e78:	mov    rax,QWORD PTR [rsp+0x8]
   13e7d:	mov    QWORD PTR [rbx+0x28348],rax
   13e84:	mov    rax,QWORD PTR [rbx+0x10]
   13e88:	mov    esi,DWORD PTR [rax+0x14]
   13e8b:	call   ced0 <pf_preprocess>
   13e90:	test   BYTE PTR [rip+0x21520a],0x40        # 2290a1 <opt+0x1>
   13e97:	jne    13f00 <shadow_emulate_other_process+0xd0>
   13e99:	mov    rax,QWORD PTR [rbx+0x283d8]
   13ea0:	lea    rdx,[rip+0xffffffffffff8c89]        # cb30 <hvm_generic_postprocess>
   13ea7:	cmp    rax,rdx
   13eaa:	je     13ed8 <shadow_emulate_other_process+0xa8>
   13eac:	test   rax,rax
   13eaf:	je     13ed8 <shadow_emulate_other_process+0xa8>
   13eb1:	mov    rdi,QWORD PTR [rip+0x2513a0]        # 265258 <warn>
   13eb8:	lea    rcx,[rip+0xf651]        # 23510 <__func__.7022>
   13ebf:	lea    rdx,[rip+0xbe72]        # 1fd38 <_IO_stdin_used+0x2d78>
   13ec6:	mov    esi,0x1
   13ecb:	xor    eax,eax
   13ecd:	call   4560 <__fprintf_chk@plt>
   13ed2:	jmp    13ee6 <shadow_emulate_other_process+0xb6>
   13ed4:	nop    DWORD PTR [rax+0x0]
   13ed8:	lea    rax,[rip+0xffffffffffff6b01]        # a9e0 <shadow_fault_generic_postprocess>
   13edf:	mov    QWORD PTR [rbx+0x283d8],rax
   13ee6:	mov    rax,QWORD PTR [rsp+0x18]
   13eeb:	xor    rax,QWORD PTR fs:0x28
   13ef4:	jne    13f36 <shadow_emulate_other_process+0x106>
   13ef6:	add    rsp,0x20
   13efa:	pop    rbx
   13efb:	pop    rbp
   13efc:	pop    r12
   13efe:	ret    
   13eff:	nop
   13f00:	lea    rax,[rip+0x215659]        # 229560 <pf_xen_name>
   13f07:	mov    r9,QWORD PTR [rbx+0x28348]
   13f0e:	mov    r8,QWORD PTR [rbx+0x283a8]
   13f15:	lea    rdx,[r12+0x28]
   13f1a:	lea    rsi,[rip+0xc797]        # 206b8 <_IO_stdin_used+0x36f8>
   13f21:	mov    edi,0x1
   13f26:	mov    rcx,QWORD PTR [rax+rbp*8]
   13f2a:	xor    eax,eax
   13f2c:	call   44f0 <__printf_chk@plt>
   13f31:	jmp    13e99 <shadow_emulate_other_process+0x69>
   13f36:	call   43c0 <__stack_chk_fail@plt>
   13f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013f40 <shadow_fixup_process>:
   13f40:	push   r13
   13f42:	push   r12
   13f44:	mov    r12,rdi
   13f47:	push   rbp
   13f48:	push   rbx
   13f49:	mov    rbp,rsi
   13f4c:	sub    rsp,0x8
   13f50:	mov    ebx,DWORD PTR [rdi+0x10]
   13f53:	mov    rax,QWORD PTR [rsi+0x10]
   13f57:	mov    r13,QWORD PTR [rdi+0x20]
   13f5b:	shr    ebx,0x8
   13f5e:	mov    r9d,DWORD PTR [rax+0x14]
   13f62:	and    ebx,0xf
   13f65:	add    ebx,0x2
   13f68:	cmp    r9d,ebx
   13f6b:	je     13f98 <shadow_fixup_process+0x58>
   13f6d:	mov    rdi,QWORD PTR [rip+0x2512e4]        # 265258 <warn>
   13f74:	lea    rcx,[rip+0xf575]        # 234f0 <__func__.7051>
   13f7b:	lea    rdx,[rip+0xc666]        # 205e8 <_IO_stdin_used+0x3628>
   13f82:	mov    r8d,ebx
   13f85:	mov    esi,0x1
   13f8a:	xor    eax,eax
   13f8c:	call   4560 <__fprintf_chk@plt>
   13f91:	mov    rax,QWORD PTR [rbp+0x10]
   13f95:	mov    DWORD PTR [rax+0x14],ebx
   13f98:	cmp    ebx,0x3
   13f9b:	je     14100 <shadow_fixup_process+0x1c0>
   13fa1:	cmp    ebx,0x4
   13fa4:	je     140c0 <shadow_fixup_process+0x180>
   13faa:	cmp    ebx,0x2
   13fad:	je     14080 <shadow_fixup_process+0x140>
   13fb3:	lea    r13,[rbp+0x28348]
   13fba:	mov    esi,ebx
   13fbc:	mov    rdi,r13
   13fbf:	call   ced0 <pf_preprocess>
   13fc4:	test   BYTE PTR [rip+0x2150d6],0x40        # 2290a1 <opt+0x1>
   13fcb:	je     1401b <shadow_fixup_process+0xdb>
   13fcd:	add    r12,0x28
   13fd1:	test   BYTE PTR [rbp+0x28352],0x4
   13fd8:	mov    rdi,r13
   13fdb:	je     14140 <shadow_fixup_process+0x200>
   13fe1:	call   11190 <flag_string>
   13fe6:	mov    rcx,QWORD PTR [rbp+0x28348]
   13fed:	push   rax
   13fee:	lea    rsi,[rip+0xc6e3]        # 206d8 <_IO_stdin_used+0x3718>
   13ff5:	mov    eax,DWORD PTR [rbp+0x28350]
   13ffb:	mov    rdx,r12
   13ffe:	mov    edi,0x1
   14003:	push   rax
   14004:	mov    r9,QWORD PTR [rbp+0x28380]
   1400b:	xor    eax,eax
   1400d:	mov    r8,QWORD PTR [rbp+0x28370]
   14014:	call   44f0 <__printf_chk@plt>
   14019:	pop    rcx
   1401a:	pop    rsi
   1401b:	mov    rax,QWORD PTR [rbp+0x283d8]
   14022:	test   rax,rax
   14025:	je     14060 <shadow_fixup_process+0x120>
   14027:	lea    rdx,[rip+0xffffffffffff8b02]        # cb30 <hvm_generic_postprocess>
   1402e:	cmp    rax,rdx
   14031:	je     14060 <shadow_fixup_process+0x120>
   14033:	mov    rdi,QWORD PTR [rip+0x25121e]        # 265258 <warn>
   1403a:	add    rsp,0x8
   1403e:	lea    rcx,[rip+0xf4ab]        # 234f0 <__func__.7051>
   14045:	pop    rbx
   14046:	pop    rbp
   14047:	pop    r12
   14049:	pop    r13
   1404b:	lea    rdx,[rip+0xbce6]        # 1fd38 <_IO_stdin_used+0x2d78>
   14052:	mov    esi,0x1
   14057:	xor    eax,eax
   14059:	jmp    4560 <__fprintf_chk@plt>
   1405e:	xchg   ax,ax
   14060:	lea    rax,[rip+0xffffffffffff5b59]        # 9bc0 <shadow_fixup_postprocess>
   14067:	mov    QWORD PTR [rbp+0x283d8],rax
   1406e:	add    rsp,0x8
   14072:	pop    rbx
   14073:	pop    rbp
   14074:	pop    r12
   14076:	pop    r13
   14078:	ret    
   14079:	nop    DWORD PTR [rax+0x0]
   14080:	mov    eax,DWORD PTR [r12+0x14]
   14085:	shl    eax,0x2
   14088:	cmp    eax,0xc
   1408b:	jne    14190 <shadow_fixup_process+0x250>
   14091:	mov    eax,DWORD PTR [r13+0x4]
   14095:	mov    QWORD PTR [rbp+0x28348],rax
   1409c:	mov    eax,DWORD PTR [r13+0x8]
   140a0:	mov    DWORD PTR [rbp+0x28350],eax
   140a6:	mov    eax,DWORD PTR [r13+0x0]
   140aa:	mov    QWORD PTR [rbp+0x28370],rax
   140b1:	jmp    13fb3 <shadow_fixup_process+0x73>
   140b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   140c0:	mov    eax,DWORD PTR [r12+0x14]
   140c5:	shl    eax,0x2
   140c8:	cmp    eax,0x18
   140cb:	jne    141f8 <shadow_fixup_process+0x2b8>
   140d1:	mov    rax,QWORD PTR [r13+0x8]
   140d5:	mov    QWORD PTR [rbp+0x28348],rax
   140dc:	mov    eax,DWORD PTR [r13+0x10]
   140e0:	mov    DWORD PTR [rbp+0x28350],eax
   140e6:	mov    rax,QWORD PTR [r13+0x0]
   140ea:	mov    QWORD PTR [rbp+0x28370],rax
   140f1:	jmp    13fb3 <shadow_fixup_process+0x73>
   140f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14100:	mov    eax,DWORD PTR [r12+0x14]
   14105:	shl    eax,0x2
   14108:	cmp    eax,0x10
   1410b:	jne    141e0 <shadow_fixup_process+0x2a0>
   14111:	mov    eax,DWORD PTR [r13+0x8]
   14115:	mov    QWORD PTR [rbp+0x28348],rax
   1411c:	mov    eax,DWORD PTR [r13+0xc]
   14120:	mov    DWORD PTR [rbp+0x28350],eax
   14126:	mov    rax,QWORD PTR [r13+0x0]
   1412a:	mov    QWORD PTR [rbp+0x28370],rax
   14131:	jmp    13fb3 <shadow_fixup_process+0x73>
   14136:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14140:	call   11190 <flag_string>
   14145:	sub    rsp,0x8
   14149:	mov    rcx,QWORD PTR [rbp+0x28348]
   14150:	lea    rsi,[rip+0xc5c1]        # 20718 <_IO_stdin_used+0x3758>
   14157:	push   rax
   14158:	mov    r9d,DWORD PTR [rbp+0x28350]
   1415f:	mov    rdx,r12
   14162:	mov    r8,QWORD PTR [rbp+0x28370]
   14169:	xor    eax,eax
   1416b:	mov    edi,0x1
   14170:	call   44f0 <__printf_chk@plt>
   14175:	pop    rax
   14176:	mov    rax,QWORD PTR [rbp+0x283d8]
   1417d:	pop    rdx
   1417e:	test   rax,rax
   14181:	jne    14027 <shadow_fixup_process+0xe7>
   14187:	jmp    14060 <shadow_fixup_process+0x120>
   1418c:	nop    DWORD PTR [rax+0x0]
   14190:	mov    rdx,QWORD PTR [rbp+0x10]
   14194:	sub    rsp,0x8
   14198:	mov    r8d,0xc
   1419e:	push   rax
   1419f:	mov    r9d,DWORD PTR [rdx+0x14]
   141a3:	mov    rdi,QWORD PTR [rip+0x2510ae]        # 265258 <warn>
   141aa:	lea    rcx,[rip+0xf33f]        # 234f0 <__func__.7051>
   141b1:	lea    rdx,[rip+0xc478]        # 20630 <_IO_stdin_used+0x3670>
   141b8:	xor    eax,eax
   141ba:	mov    esi,0x1
   141bf:	call   4560 <__fprintf_chk@plt>
   141c4:	cmp    DWORD PTR [rip+0x214f15],0x3        # 2290e0 <opt+0x40>
   141cb:	pop    rdi
   141cc:	pop    r8
   141ce:	ja     1406e <shadow_fixup_process+0x12e>
   141d4:	mov    rdi,r12
   141d7:	call   13840 <error.part.24>
   141dc:	nop    DWORD PTR [rax+0x0]
   141e0:	mov    rdx,QWORD PTR [rbp+0x10]
   141e4:	sub    rsp,0x8
   141e8:	mov    r8d,0x10
   141ee:	push   rax
   141ef:	mov    r9d,DWORD PTR [rdx+0x14]
   141f3:	jmp    141a3 <shadow_fixup_process+0x263>
   141f5:	nop    DWORD PTR [rax]
   141f8:	mov    rdx,QWORD PTR [rbp+0x10]
   141fc:	sub    rsp,0x8
   14200:	mov    r8d,0x18
   14206:	push   rax
   14207:	mov    r9d,DWORD PTR [rdx+0x14]
   1420b:	jmp    141a3 <shadow_fixup_process+0x263>
   1420d:	nop    DWORD PTR [rax]

0000000000014210 <shadow_mmio_process>:
   14210:	push   r13
   14212:	push   r12
   14214:	mov    r12,rdi
   14217:	push   rbp
   14218:	push   rbx
   14219:	mov    rbp,rsi
   1421c:	sub    rsp,0x8
   14220:	mov    ebx,DWORD PTR [rdi+0x10]
   14223:	mov    rax,QWORD PTR [rsi+0x10]
   14227:	mov    r13,QWORD PTR [rdi+0x20]
   1422b:	shr    ebx,0x8
   1422e:	mov    r9d,DWORD PTR [rax+0x14]
   14232:	and    ebx,0xf
   14235:	add    ebx,0x2
   14238:	cmp    r9d,ebx
   1423b:	je     14268 <shadow_mmio_process+0x58>
   1423d:	mov    rdi,QWORD PTR [rip+0x251014]        # 265258 <warn>
   14244:	lea    rcx,[rip+0xf285]        # 234d0 <__func__.7076>
   1424b:	lea    rdx,[rip+0xc396]        # 205e8 <_IO_stdin_used+0x3628>
   14252:	mov    r8d,ebx
   14255:	mov    esi,0x1
   1425a:	xor    eax,eax
   1425c:	call   4560 <__fprintf_chk@plt>
   14261:	mov    rax,QWORD PTR [rbp+0x10]
   14265:	mov    DWORD PTR [rax+0x14],ebx
   14268:	cmp    ebx,0x2
   1426b:	jl     1429e <shadow_mmio_process+0x8e>
   1426d:	cmp    ebx,0x3
   14270:	jle    14348 <shadow_mmio_process+0x138>
   14276:	cmp    ebx,0x4
   14279:	jne    1429e <shadow_mmio_process+0x8e>
   1427b:	mov    eax,DWORD PTR [r12+0x14]
   14280:	shl    eax,0x2
   14283:	cmp    eax,0x8
   14286:	jne    143d0 <shadow_mmio_process+0x1c0>
   1428c:	mov    rax,QWORD PTR [r13+0x0]
   14290:	mov    QWORD PTR [rbp+0x283c0],rax
   14297:	mov    QWORD PTR [rbp+0x28348],rax
   1429e:	test   BYTE PTR [rip+0x214dfc],0x40        # 2290a1 <opt+0x1>
   142a5:	je     142df <shadow_mmio_process+0xcf>
   142a7:	cmp    DWORD PTR [rbp+0x28358],0x3
   142ae:	lea    rax,[rip+0x97d0]        # 1da85 <_IO_stdin_used+0xac5>
   142b5:	lea    rcx,[rip+0x9611]        # 1d8cd <_IO_stdin_used+0x90d>
   142bc:	mov    r8,QWORD PTR [rbp+0x28348]
   142c3:	lea    rdx,[r12+0x28]
   142c8:	lea    rsi,[rip+0x9604]        # 1d8d3 <_IO_stdin_used+0x913>
   142cf:	mov    edi,0x1
   142d4:	cmovne rcx,rax
   142d8:	xor    eax,eax
   142da:	call   44f0 <__printf_chk@plt>
   142df:	mov    rax,QWORD PTR [rbp+0x283d8]
   142e6:	test   rax,rax
   142e9:	je     14328 <shadow_mmio_process+0x118>
   142eb:	lea    rdx,[rip+0xffffffffffff883e]        # cb30 <hvm_generic_postprocess>
   142f2:	cmp    rax,rdx
   142f5:	je     14328 <shadow_mmio_process+0x118>
   142f7:	mov    rdi,QWORD PTR [rip+0x250f5a]        # 265258 <warn>
   142fe:	add    rsp,0x8
   14302:	lea    rcx,[rip+0xf1c7]        # 234d0 <__func__.7076>
   14309:	pop    rbx
   1430a:	pop    rbp
   1430b:	pop    r12
   1430d:	pop    r13
   1430f:	lea    rdx,[rip+0xba22]        # 1fd38 <_IO_stdin_used+0x2d78>
   14316:	mov    esi,0x1
   1431b:	xor    eax,eax
   1431d:	jmp    4560 <__fprintf_chk@plt>
   14322:	nop    WORD PTR [rax+rax*1+0x0]
   14328:	lea    rax,[rip+0xffffffffffffa231]        # e560 <shadow_mmio_postprocess>
   1432f:	mov    QWORD PTR [rbp+0x283d8],rax
   14336:	add    rsp,0x8
   1433a:	pop    rbx
   1433b:	pop    rbp
   1433c:	pop    r12
   1433e:	pop    r13
   14340:	ret    
   14341:	nop    DWORD PTR [rax+0x0]
   14348:	mov    eax,DWORD PTR [r12+0x14]
   1434d:	shl    eax,0x2
   14350:	cmp    eax,0x4
   14353:	jne    14380 <shadow_mmio_process+0x170>
   14355:	mov    eax,DWORD PTR [r13+0x0]
   14359:	test   BYTE PTR [rip+0x214d41],0x40        # 2290a1 <opt+0x1>
   14360:	mov    QWORD PTR [rbp+0x283c0],rax
   14367:	mov    QWORD PTR [rbp+0x28348],rax
   1436e:	je     142df <shadow_mmio_process+0xcf>
   14374:	jmp    142a7 <shadow_mmio_process+0x97>
   14379:	nop    DWORD PTR [rax+0x0]
   14380:	mov    rdx,QWORD PTR [rbp+0x10]
   14384:	sub    rsp,0x8
   14388:	mov    r8d,0x4
   1438e:	push   rax
   1438f:	mov    r9d,DWORD PTR [rdx+0x14]
   14393:	mov    rdi,QWORD PTR [rip+0x250ebe]        # 265258 <warn>
   1439a:	lea    rdx,[rip+0xc28f]        # 20630 <_IO_stdin_used+0x3670>
   143a1:	lea    rcx,[rip+0xf128]        # 234d0 <__func__.7076>
   143a8:	xor    eax,eax
   143aa:	mov    esi,0x1
   143af:	call   4560 <__fprintf_chk@plt>
   143b4:	cmp    DWORD PTR [rip+0x214d25],0x3        # 2290e0 <opt+0x40>
   143bb:	pop    rax
   143bc:	pop    rdx
   143bd:	ja     14336 <shadow_mmio_process+0x126>
   143c3:	mov    rdi,r12
   143c6:	call   13840 <error.part.24>
   143cb:	nop    DWORD PTR [rax+rax*1+0x0]
   143d0:	mov    rdx,QWORD PTR [rbp+0x10]
   143d4:	sub    rsp,0x8
   143d8:	mov    r8d,0x8
   143de:	push   rax
   143df:	mov    r9d,DWORD PTR [rdx+0x14]
   143e3:	jmp    14393 <shadow_mmio_process+0x183>
   143e5:	nop
   143e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000143f0 <shadow_propagate_process>:
   143f0:	push   r13
   143f2:	push   r12
   143f4:	mov    r12,rdi
   143f7:	push   rbp
   143f8:	push   rbx
   143f9:	mov    rbp,rsi
   143fc:	sub    rsp,0x8
   14400:	mov    ebx,DWORD PTR [rdi+0x10]
   14403:	mov    rax,QWORD PTR [rsi+0x10]
   14407:	mov    r13,QWORD PTR [rdi+0x20]
   1440b:	shr    ebx,0x8
   1440e:	mov    r9d,DWORD PTR [rax+0x14]
   14412:	and    ebx,0xf
   14415:	add    ebx,0x2
   14418:	cmp    r9d,ebx
   1441b:	je     14448 <shadow_propagate_process+0x58>
   1441d:	mov    rdi,QWORD PTR [rip+0x250e34]        # 265258 <warn>
   14424:	lea    rcx,[rip+0xf085]        # 234b0 <__func__.7109>
   1442b:	lea    rdx,[rip+0xc1b6]        # 205e8 <_IO_stdin_used+0x3628>
   14432:	mov    r8d,ebx
   14435:	mov    esi,0x1
   1443a:	xor    eax,eax
   1443c:	call   4560 <__fprintf_chk@plt>
   14441:	mov    rax,QWORD PTR [rbp+0x10]
   14445:	mov    DWORD PTR [rax+0x14],ebx
   14448:	cmp    ebx,0x3
   1444b:	je     145c0 <shadow_propagate_process+0x1d0>
   14451:	cmp    ebx,0x4
   14454:	je     14578 <shadow_propagate_process+0x188>
   1445a:	cmp    ebx,0x2
   1445d:	je     14530 <shadow_propagate_process+0x140>
   14463:	test   BYTE PTR [rip+0x214c37],0x40        # 2290a1 <opt+0x1>
   1446a:	jne    144c0 <shadow_propagate_process+0xd0>
   1446c:	mov    rax,QWORD PTR [rbp+0x283d8]
   14473:	test   rax,rax
   14476:	je     14510 <shadow_propagate_process+0x120>
   1447c:	lea    rdx,[rip+0xffffffffffff86ad]        # cb30 <hvm_generic_postprocess>
   14483:	cmp    rax,rdx
   14486:	je     14510 <shadow_propagate_process+0x120>
   1448c:	mov    rdi,QWORD PTR [rip+0x250dc5]        # 265258 <warn>
   14493:	add    rsp,0x8
   14497:	lea    rcx,[rip+0xf012]        # 234b0 <__func__.7109>
   1449e:	pop    rbx
   1449f:	pop    rbp
   144a0:	pop    r12
   144a2:	pop    r13
   144a4:	lea    rdx,[rip+0xb88d]        # 1fd38 <_IO_stdin_used+0x2d78>
   144ab:	mov    esi,0x1
   144b0:	xor    eax,eax
   144b2:	jmp    4560 <__fprintf_chk@plt>
   144b7:	nop    WORD PTR [rax+rax*1+0x0]
   144c0:	lea    rdi,[rbp+0x28348]
   144c7:	call   11190 <flag_string>
   144cc:	sub    rsp,0x8
   144d0:	mov    rcx,QWORD PTR [rbp+0x28348]
   144d7:	lea    rdx,[r12+0x28]
   144dc:	push   rax
   144dd:	mov    r9d,DWORD PTR [rbp+0x28350]
   144e4:	lea    rsi,[rip+0xc25d]        # 20748 <_IO_stdin_used+0x3788>
   144eb:	mov    r8,QWORD PTR [rbp+0x28370]
   144f2:	xor    eax,eax
   144f4:	mov    edi,0x1
   144f9:	call   44f0 <__printf_chk@plt>
   144fe:	pop    rax
   144ff:	mov    rax,QWORD PTR [rbp+0x283d8]
   14506:	pop    rdx
   14507:	test   rax,rax
   1450a:	jne    1447c <shadow_propagate_process+0x8c>
   14510:	lea    rax,[rip+0xffffffffffff62b9]        # a7d0 <shadow_propagate_postprocess>
   14517:	mov    QWORD PTR [rbp+0x283d8],rax
   1451e:	add    rsp,0x8
   14522:	pop    rbx
   14523:	pop    rbp
   14524:	pop    r12
   14526:	pop    r13
   14528:	ret    
   14529:	nop    DWORD PTR [rax+0x0]
   14530:	mov    eax,DWORD PTR [r12+0x14]
   14535:	shl    eax,0x2
   14538:	cmp    eax,0xc
   1453b:	jne    14608 <shadow_propagate_process+0x218>
   14541:	mov    eax,DWORD PTR [r13+0x4]
   14545:	test   BYTE PTR [rip+0x214b55],0x40        # 2290a1 <opt+0x1>
   1454c:	mov    QWORD PTR [rbp+0x28348],rax
   14553:	mov    eax,DWORD PTR [r13+0x8]
   14557:	mov    DWORD PTR [rbp+0x28350],eax
   1455d:	mov    eax,DWORD PTR [r13+0x0]
   14561:	mov    QWORD PTR [rbp+0x28370],rax
   14568:	je     1446c <shadow_propagate_process+0x7c>
   1456e:	jmp    144c0 <shadow_propagate_process+0xd0>
   14573:	nop    DWORD PTR [rax+rax*1+0x0]
   14578:	mov    eax,DWORD PTR [r12+0x14]
   1457d:	shl    eax,0x2
   14580:	cmp    eax,0x18
   14583:	jne    14670 <shadow_propagate_process+0x280>
   14589:	mov    rax,QWORD PTR [r13+0x8]
   1458d:	test   BYTE PTR [rip+0x214b0d],0x40        # 2290a1 <opt+0x1>
   14594:	mov    QWORD PTR [rbp+0x28348],rax
   1459b:	mov    eax,DWORD PTR [r13+0x10]
   1459f:	mov    DWORD PTR [rbp+0x28350],eax
   145a5:	mov    rax,QWORD PTR [r13+0x0]
   145a9:	mov    QWORD PTR [rbp+0x28370],rax
   145b0:	je     1446c <shadow_propagate_process+0x7c>
   145b6:	jmp    144c0 <shadow_propagate_process+0xd0>
   145bb:	nop    DWORD PTR [rax+rax*1+0x0]
   145c0:	mov    eax,DWORD PTR [r12+0x14]
   145c5:	shl    eax,0x2
   145c8:	cmp    eax,0x10
   145cb:	jne    14658 <shadow_propagate_process+0x268>
   145d1:	mov    eax,DWORD PTR [r13+0x8]
   145d5:	test   BYTE PTR [rip+0x214ac5],0x40        # 2290a1 <opt+0x1>
   145dc:	mov    QWORD PTR [rbp+0x28348],rax
   145e3:	mov    eax,DWORD PTR [r13+0xc]
   145e7:	mov    DWORD PTR [rbp+0x28350],eax
   145ed:	mov    rax,QWORD PTR [r13+0x0]
   145f1:	mov    QWORD PTR [rbp+0x28370],rax
   145f8:	je     1446c <shadow_propagate_process+0x7c>
   145fe:	jmp    144c0 <shadow_propagate_process+0xd0>
   14603:	nop    DWORD PTR [rax+rax*1+0x0]
   14608:	mov    rdx,QWORD PTR [rbp+0x10]
   1460c:	sub    rsp,0x8
   14610:	mov    r8d,0xc
   14616:	push   rax
   14617:	mov    r9d,DWORD PTR [rdx+0x14]
   1461b:	mov    rdi,QWORD PTR [rip+0x250c36]        # 265258 <warn>
   14622:	lea    rcx,[rip+0xee87]        # 234b0 <__func__.7109>
   14629:	lea    rdx,[rip+0xc000]        # 20630 <_IO_stdin_used+0x3670>
   14630:	mov    esi,0x1
   14635:	xor    eax,eax
   14637:	call   4560 <__fprintf_chk@plt>
   1463c:	cmp    DWORD PTR [rip+0x214a9d],0x3        # 2290e0 <opt+0x40>
   14643:	pop    rcx
   14644:	pop    rsi
   14645:	ja     1451e <shadow_propagate_process+0x12e>
   1464b:	mov    rdi,r12
   1464e:	call   13840 <error.part.24>
   14653:	nop    DWORD PTR [rax+rax*1+0x0]
   14658:	mov    rdx,QWORD PTR [rbp+0x10]
   1465c:	sub    rsp,0x8
   14660:	mov    r8d,0x10
   14666:	push   rax
   14667:	mov    r9d,DWORD PTR [rdx+0x14]
   1466b:	jmp    1461b <shadow_propagate_process+0x22b>
   1466d:	nop    DWORD PTR [rax]
   14670:	mov    rdx,QWORD PTR [rbp+0x10]
   14674:	sub    rsp,0x8
   14678:	mov    r8d,0x18
   1467e:	push   rax
   1467f:	mov    r9d,DWORD PTR [rdx+0x14]
   14683:	jmp    1461b <shadow_propagate_process+0x22b>
   14685:	nop
   14686:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014690 <pv_ptwr_emulation_process>:
   14690:	push   rbp
   14691:	push   rbx
   14692:	mov    rbx,rdi
   14695:	sub    rsp,0x8
   14699:	mov    ecx,DWORD PTR [rdi+0x10]
   1469c:	mov    rbp,QWORD PTR [rdi+0x20]
   146a0:	cmp    cl,0xb
   146a3:	je     14718 <pv_ptwr_emulation_process+0x88>
   146a5:	cmp    cl,0xc
   146a8:	jne    146e8 <pv_ptwr_emulation_process+0x58>
   146aa:	test   ch,0x1
   146ad:	jne    14730 <pv_ptwr_emulation_process+0xa0>
   146b3:	mov    r9d,DWORD PTR [rbp+0x8]
   146b7:	mov    r8d,DWORD PTR [rbp+0xc]
   146bb:	mov    rcx,QWORD PTR [rbp+0x0]
   146bf:	test   BYTE PTR [rip+0x2149db],0x40        # 2290a1 <opt+0x1>
   146c6:	je     1470e <pv_ptwr_emulation_process+0x7e>
   146c8:	add    rsp,0x8
   146cc:	lea    rdx,[rbx+0x28]
   146d0:	lea    rsi,[rip+0xc129]        # 20800 <_IO_stdin_used+0x3840>
   146d7:	pop    rbx
   146d8:	pop    rbp
   146d9:	mov    edi,0x1
   146de:	xor    eax,eax
   146e0:	jmp    44f0 <__printf_chk@plt>
   146e5:	nop    DWORD PTR [rax]
   146e8:	mov    rdi,QWORD PTR [rip+0x250b69]        # 265258 <warn>
   146ef:	lea    rdx,[rip+0xc0e2]        # 207d8 <_IO_stdin_used+0x3818>
   146f6:	xor    eax,eax
   146f8:	movzx  ecx,cl
   146fb:	mov    esi,0x1
   14700:	call   4560 <__fprintf_chk@plt>
   14705:	cmp    DWORD PTR [rip+0x2149d4],0x3        # 2290e0 <opt+0x40>
   1470c:	jbe    14757 <pv_ptwr_emulation_process+0xc7>
   1470e:	add    rsp,0x8
   14712:	pop    rbx
   14713:	pop    rbp
   14714:	ret    
   14715:	nop    DWORD PTR [rax]
   14718:	test   ch,0x1
   1471b:	je     14760 <pv_ptwr_emulation_process+0xd0>
   1471d:	mov    rcx,QWORD PTR [rbp+0x0]
   14721:	mov    r9,QWORD PTR [rbp+0x8]
   14725:	mov    r8,QWORD PTR [rbp+0x10]
   14729:	jmp    146bf <pv_ptwr_emulation_process+0x2f>
   1472b:	nop    DWORD PTR [rax+rax*1+0x0]
   14730:	mov    rdi,QWORD PTR [rip+0x250b21]        # 265258 <warn>
   14737:	lea    rdx,[rip+0xc03a]        # 20778 <_IO_stdin_used+0x37b8>
   1473e:	xor    eax,eax
   14740:	mov    esi,0x1
   14745:	call   4560 <__fprintf_chk@plt>
   1474a:	cmp    DWORD PTR [rip+0x21498f],0x3        # 2290e0 <opt+0x40>
   14751:	ja     146b3 <pv_ptwr_emulation_process+0x23>
   14757:	mov    rdi,rbx
   1475a:	call   13840 <error.part.24>
   1475f:	nop
   14760:	mov    rdi,QWORD PTR [rip+0x250af1]        # 265258 <warn>
   14767:	lea    rdx,[rip+0xc03a]        # 207a8 <_IO_stdin_used+0x37e8>
   1476e:	xor    eax,eax
   14770:	mov    esi,0x1
   14775:	call   4560 <__fprintf_chk@plt>
   1477a:	cmp    DWORD PTR [rip+0x21495f],0x3        # 2290e0 <opt+0x40>
   14781:	ja     1471d <pv_ptwr_emulation_process+0x8d>
   14783:	jmp    14757 <pv_ptwr_emulation_process+0xc7>
   14785:	nop
   14786:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014790 <pv_process>:
   14790:	mov    rdx,rdi
   14793:	add    rdi,0x30
   14797:	mov    rax,QWORD PTR [rdx+0x1a8]
   1479e:	mov    edx,DWORD PTR [rdx+0x40]
   147a1:	mov    ecx,DWORD PTR [rax+0x3bf0]
   147a7:	lea    rsi,[rax+0x3bf8]
   147ae:	test   ecx,ecx
   147b0:	jne    14800 <pv_process+0x70>
   147b2:	mov    DWORD PTR [rax+0x3bf0],0x2
   147bc:	mov    r8d,DWORD PTR [rip+0x2148e1]        # 2290a4 <opt+0x4>
   147c3:	movzx  ecx,dl
   147c6:	test   r8d,r8d
   147c9:	je     147e4 <pv_process+0x54>
   147cb:	or     BYTE PTR [rax+0x3bf8],0x1
   147d2:	cmp    dl,0xc
   147d5:	je     14848 <pv_process+0xb8>
   147d7:	movzx  r8d,dl
   147db:	add    DWORD PTR [rax+r8*4+0x3bfc],0x1
   147e4:	cmp    dl,0xe
   147e7:	ja     14840 <pv_process+0xb0>
   147e9:	lea    rdx,[rip+0xe844]        # 23034 <_IO_stdin_used+0x6074>
   147f0:	movsxd rax,DWORD PTR [rdx+rcx*4]
   147f4:	add    rax,rdx
   147f7:	jmp    rax
   147f9:	nop    DWORD PTR [rax+0x0]
   14800:	cmp    ecx,0x2
   14803:	je     147bc <pv_process+0x2c>
   14805:	sub    rsp,0x8
   14809:	call   45c0 <vcpu_set_data_type.part.43>
   1480e:	xchg   ax,ax
   14810:	lea    rdx,[rip+0x9101]        # 1d918 <_IO_stdin_used+0x958>
   14817:	jmp    11840 <pv_hypercall_v2_process>
   1481c:	nop    DWORD PTR [rax+0x0]
   14820:	jmp    11550 <pv_hypercall_process>
   14825:	nop    DWORD PTR [rax]
   14828:	jmp    115e0 <pv_trap_process>
   1482d:	nop    DWORD PTR [rax]
   14830:	lea    rdx,[rip+0x924e]        # 1da85 <_IO_stdin_used+0xac5>
   14837:	jmp    11840 <pv_hypercall_v2_process>
   1483c:	nop    DWORD PTR [rax+0x0]
   14840:	jmp    116b0 <pv_generic_process>
   14845:	nop    DWORD PTR [rax]
   14848:	add    DWORD PTR [rax+0x3c28],0x1
   1484f:	jmp    14690 <pv_ptwr_emulation_process>
   14854:	xchg   ax,ax
   14856:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014860 <mem_process>:
   14860:	push   r12
   14862:	push   rbp
   14863:	push   rbx
   14864:	movzx  ebx,WORD PTR [rdi+0x40]
   14868:	and    bx,0xfff
   1486d:	cmp    bx,0x12
   14871:	ja     148f0 <mem_process+0x90>
   14873:	lea    rcx,[rip+0xe7f6]        # 23070 <_IO_stdin_used+0x60b0>
   1487a:	movzx  edx,bx
   1487d:	movsxd rax,DWORD PTR [rcx+rdx*4]
   14881:	add    rax,rcx
   14884:	jmp    rax
   14886:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14890:	pop    rbx
   14891:	pop    rbp
   14892:	pop    r12
   14894:	jmp    13150 <mem_pod_superpage_splinter_process>
   14899:	nop    DWORD PTR [rax+0x0]
   148a0:	pop    rbx
   148a1:	pop    rbp
   148a2:	pop    r12
   148a4:	jmp    13190 <mem_page_grant>
   148a9:	nop    DWORD PTR [rax+0x0]
   148b0:	pop    rbx
   148b1:	pop    rbp
   148b2:	pop    r12
   148b4:	jmp    131d0 <mem_set_p2m_entry_process>
   148b9:	nop    DWORD PTR [rax+0x0]
   148c0:	pop    rbx
   148c1:	pop    rbp
   148c2:	pop    r12
   148c4:	jmp    13220 <mem_decrease_reservation_process>
   148c9:	nop    DWORD PTR [rax+0x0]
   148d0:	pop    rbx
   148d1:	pop    rbp
   148d2:	pop    r12
   148d4:	jmp    130a0 <mem_pod_populate_process>
   148d9:	nop    DWORD PTR [rax+0x0]
   148e0:	pop    rbx
   148e1:	pop    rbp
   148e2:	pop    r12
   148e4:	jmp    12f80 <mem_pod_zero_reclaim_process>
   148e9:	nop    DWORD PTR [rax+0x0]
   148f0:	test   BYTE PTR [rip+0x2147aa],0x40        # 2290a1 <opt+0x1>
   148f7:	mov    rbp,rdi
   148fa:	mov    r12,QWORD PTR [rdi+0x50]
   148fe:	jne    14920 <mem_process+0xc0>
   14900:	mov    eax,DWORD PTR [rip+0x21479e]        # 2290a4 <opt+0x4>
   14906:	test   eax,eax
   14908:	je     14912 <mem_process+0xb2>
   1490a:	movzx  eax,bx
   1490d:	cmp    eax,0x12
   14910:	jle    14938 <mem_process+0xd8>
   14912:	pop    rbx
   14913:	pop    rbp
   14914:	pop    r12
   14916:	ret    
   14917:	nop    WORD PTR [rax+rax*1+0x0]
   14920:	lea    rsi,[rdi+0x30]
   14924:	mov    rdi,QWORD PTR [rip+0x217af5]        # 22c420 <stdout@@GLIBC_2.2.5>
   1492b:	call   13380 <dump_generic>
   14930:	jmp    14900 <mem_process+0xa0>
   14932:	nop    WORD PTR [rax+rax*1+0x0]
   14938:	mov    rax,QWORD PTR [rbp+0x1a8]
   1493f:	test   rax,rax
   14942:	je     14912 <mem_process+0xb2>
   14944:	mov    rdx,QWORD PTR [rax+0x8]
   14948:	test   rdx,rdx
   1494b:	je     1496e <mem_process+0x10e>
   1494d:	movzx  eax,bx
   14950:	shl    rax,0x2
   14954:	add    DWORD PTR [rdx+rax*1+0x11a8],0x1
   1495c:	mov    rdx,QWORD PTR [rbp+0x1a8]
   14963:	add    rax,QWORD PTR [rdx+0x8]
   14967:	add    DWORD PTR [rax+0x11f4],0x1
   1496e:	mov    edi,DWORD PTR [r12]
   14972:	call   11d90 <domain_find>
   14977:	test   rax,rax
   1497a:	je     14912 <mem_process+0xb2>
   1497c:	movzx  ebx,bx
   1497f:	lea    rax,[rax+rbx*4]
   14983:	add    DWORD PTR [rax+0x1240],0x1
   1498a:	add    DWORD PTR [rax+0x128c],0x1
   14991:	jmp    14912 <mem_process+0xb2>
   14996:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000149a0 <dump_raw>:
   149a0:	push   r12
   149a2:	push   rbp
   149a3:	mov    rdx,rdi
   149a6:	push   rbx
   149a7:	cmp    BYTE PTR [rsi+0x13b],0x0
   149ae:	mov    rbp,rsi
   149b1:	mov    r8d,DWORD PTR [rsi+0x14]
   149b5:	mov    ecx,DWORD PTR [rsi+0x10]
   149b8:	js     14a88 <dump_raw+0xe8>
   149be:	lea    r9,[rip+0x963f]        # 1e004 <_IO_stdin_used+0x1044>
   149c5:	lea    rsi,[rip+0x8f2e]        # 1d8fa <_IO_stdin_used+0x93a>
   149cc:	mov    edi,0x1
   149d1:	xor    eax,eax
   149d3:	call   44f0 <__printf_chk@plt>
   149d8:	xor    ebx,ebx
   149da:	lea    r12,[rip+0x8f2f]        # 1d910 <_IO_stdin_used+0x950>
   149e1:	jmp    14a0c <dump_raw+0x6c>
   149e3:	nop    DWORD PTR [rax+rax*1+0x0]
   149e8:	mov    rax,QWORD PTR [rbp+0x20]
   149ec:	lea    rsi,[rip+0x8f18]        # 1d90b <_IO_stdin_used+0x94b>
   149f3:	mov    edi,0x1
   149f8:	mov    edx,DWORD PTR [rax+rbx*4]
   149fb:	xor    eax,eax
   149fd:	add    rbx,0x1
   14a01:	call   44f0 <__printf_chk@plt>
   14a06:	cmp    rbx,0x7
   14a0a:	je     14a2a <dump_raw+0x8a>
   14a0c:	cmp    DWORD PTR [rbp+0x14],ebx
   14a0f:	jg     149e8 <dump_raw+0x48>
   14a11:	xor    eax,eax
   14a13:	mov    rsi,r12
   14a16:	mov    edi,0x1
   14a1b:	add    rbx,0x1
   14a1f:	call   44f0 <__printf_chk@plt>
   14a24:	cmp    rbx,0x7
   14a28:	jne    14a0c <dump_raw+0x6c>
   14a2a:	lea    rsi,[rip+0x8ee9]        # 1d91a <_IO_stdin_used+0x95a>
   14a31:	lea    r12,[rip+0x8cb3]        # 1d6eb <_IO_stdin_used+0x72b>
   14a38:	mov    edi,0x1
   14a3d:	xor    eax,eax
   14a3f:	lea    rbx,[rbp+0x138]
   14a46:	add    rbp,0x158
   14a4d:	call   44f0 <__printf_chk@plt>
   14a52:	nop    WORD PTR [rax+rax*1+0x0]
   14a58:	mov    edx,DWORD PTR [rbx]
   14a5a:	xor    eax,eax
   14a5c:	mov    rsi,r12
   14a5f:	mov    edi,0x1
   14a64:	add    rbx,0x4
   14a68:	call   44f0 <__printf_chk@plt>
   14a6d:	cmp    rbx,rbp
   14a70:	jne    14a58 <dump_raw+0xb8>
   14a72:	pop    rbx
   14a73:	pop    rbp
   14a74:	pop    r12
   14a76:	lea    rdi,[rip+0x8ea3]        # 1d920 <_IO_stdin_used+0x960>
   14a7d:	jmp    4380 <puts@plt>
   14a82:	nop    WORD PTR [rax+rax*1+0x0]
   14a88:	mov    r9,QWORD PTR [rsi+0x8]
   14a8c:	lea    rsi,[rip+0x8e54]        # 1d8e7 <_IO_stdin_used+0x927>
   14a93:	mov    edi,0x1
   14a98:	xor    eax,eax
   14a9a:	call   44f0 <__printf_chk@plt>
   14a9f:	jmp    149d8 <dump_raw+0x38>
   14aa4:	xchg   ax,ax
   14aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014ab0 <error>:
   14ab0:	cmp    DWORD PTR [rip+0x21462a],edi        # 2290e0 <opt+0x40>
   14ab6:	jb     14aba <error+0xa>
   14ab8:	repz ret 
   14aba:	sub    rsp,0x8
   14abe:	mov    rdi,rsi
   14ac1:	call   13840 <error.part.24>
   14ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014ad0 <check_extra_words>:
   14ad0:	push   rbp
   14ad1:	push   rbx
   14ad2:	movsxd r9,esi
   14ad5:	shr    r9,0x2
   14ad9:	sub    rsp,0x8
   14add:	mov    r8d,DWORD PTR [rdi+0x14]
   14ae1:	cmp    r8d,r9d
   14ae4:	je     14b35 <check_extra_words+0x65>
   14ae6:	mov    ebx,DWORD PTR [rip+0x25078c]        # 265278 <off_by_one.8132>
   14aec:	mov    rbp,rdi
   14aef:	mov    rcx,rdx
   14af2:	lea    eax,[r9+0x1]
   14af6:	mov    rdi,QWORD PTR [rip+0x25075b]        # 265258 <warn>
   14afd:	test   ebx,ebx
   14aff:	jne    14b30 <check_extra_words+0x60>
   14b01:	cmp    r8d,eax
   14b04:	je     14b40 <check_extra_words+0x70>
   14b06:	lea    rdx,[rip+0xbd4b]        # 20858 <_IO_stdin_used+0x3898>
   14b0d:	xor    eax,eax
   14b0f:	mov    esi,0x1
   14b14:	call   4560 <__fprintf_chk@plt>
   14b19:	cmp    DWORD PTR [rip+0x2145c0],0x3        # 2290e0 <opt+0x40>
   14b20:	jbe    14b65 <check_extra_words+0x95>
   14b22:	mov    ebx,0x1
   14b27:	add    rsp,0x8
   14b2b:	mov    eax,ebx
   14b2d:	pop    rbx
   14b2e:	pop    rbp
   14b2f:	ret    
   14b30:	cmp    r8d,eax
   14b33:	jne    14b06 <check_extra_words+0x36>
   14b35:	xor    ebx,ebx
   14b37:	add    rsp,0x8
   14b3b:	mov    eax,ebx
   14b3d:	pop    rbx
   14b3e:	pop    rbp
   14b3f:	ret    
   14b40:	mov    rcx,rdi
   14b43:	lea    rdi,[rip+0xbcde]        # 20828 <_IO_stdin_used+0x3868>
   14b4a:	mov    edx,0x2f
   14b4f:	mov    esi,0x1
   14b54:	call   4550 <fwrite@plt>
   14b59:	mov    DWORD PTR [rip+0x250715],0x1        # 265278 <off_by_one.8132>
   14b63:	jmp    14b27 <check_extra_words+0x57>
   14b65:	mov    rdi,rbp
   14b68:	call   13840 <error.part.24>
   14b6d:	nop    DWORD PTR [rax]

0000000000014b70 <hvm_msr_write_process>:
   14b70:	push   r12
   14b72:	lea    rdx,[rip+0x8daa]        # 1d923 <_IO_stdin_used+0x963>
   14b79:	push   rbp
   14b7a:	push   rbx
   14b7b:	mov    rbx,rsi
   14b7e:	mov    r12,QWORD PTR [rsi+0x28410]
   14b85:	mov    esi,0xc
   14b8a:	mov    rbp,rdi
   14b8d:	call   14ad0 <check_extra_words>
   14b92:	test   eax,eax
   14b94:	jne    14c06 <hvm_msr_write_process+0x96>
   14b96:	mov    eax,DWORD PTR [r12]
   14b9a:	test   BYTE PTR [rip+0x214500],0x40        # 2290a1 <opt+0x1>
   14ba1:	mov    DWORD PTR [rbx+0x28348],eax
   14ba7:	mov    rax,QWORD PTR [r12+0x4]
   14bac:	mov    QWORD PTR [rbx+0x28350],rax
   14bb3:	jne    14c10 <hvm_msr_write_process+0xa0>
   14bb5:	mov    rax,QWORD PTR [rbx+0x283d8]
   14bbc:	test   rax,rax
   14bbf:	je     14bf8 <hvm_msr_write_process+0x88>
   14bc1:	lea    rdx,[rip+0xffffffffffff7f68]        # cb30 <hvm_generic_postprocess>
   14bc8:	cmp    rax,rdx
   14bcb:	je     14bf8 <hvm_msr_write_process+0x88>
   14bcd:	pop    rbx
   14bce:	pop    rbp
   14bcf:	pop    r12
   14bd1:	mov    rdi,QWORD PTR [rip+0x250680]        # 265258 <warn>
   14bd8:	lea    rcx,[rip+0xeac1]        # 236a0 <__func__.6559>
   14bdf:	lea    rdx,[rip+0xb152]        # 1fd38 <_IO_stdin_used+0x2d78>
   14be6:	mov    esi,0x1
   14beb:	xor    eax,eax
   14bed:	jmp    4560 <__fprintf_chk@plt>
   14bf2:	nop    WORD PTR [rax+rax*1+0x0]
   14bf8:	lea    rax,[rip+0xffffffffffff7ad1]        # c6d0 <hvm_msr_write_postprocess>
   14bff:	mov    QWORD PTR [rbx+0x283d8],rax
   14c06:	pop    rbx
   14c07:	pop    rbp
   14c08:	pop    r12
   14c0a:	ret    
   14c0b:	nop    DWORD PTR [rax+rax*1+0x0]
   14c10:	mov    r8,QWORD PTR [r12+0x4]
   14c15:	mov    ecx,DWORD PTR [r12]
   14c19:	lea    rdx,[rbp+0x28]
   14c1d:	lea    rsi,[rip+0xbc5c]        # 20880 <_IO_stdin_used+0x38c0>
   14c24:	xor    eax,eax
   14c26:	mov    edi,0x1
   14c2b:	call   44f0 <__printf_chk@plt>
   14c30:	mov    rax,QWORD PTR [rbx+0x283d8]
   14c37:	test   rax,rax
   14c3a:	jne    14bc1 <hvm_msr_write_process+0x51>
   14c3c:	jmp    14bf8 <hvm_msr_write_process+0x88>
   14c3e:	xchg   ax,ax

0000000000014c40 <hvm_msr_read_process>:
   14c40:	push   r12
   14c42:	lea    rdx,[rip+0x8ce4]        # 1d92d <_IO_stdin_used+0x96d>
   14c49:	push   rbp
   14c4a:	push   rbx
   14c4b:	mov    rbx,rsi
   14c4e:	mov    r12,QWORD PTR [rsi+0x28410]
   14c55:	mov    esi,0xc
   14c5a:	mov    rbp,rdi
   14c5d:	call   14ad0 <check_extra_words>
   14c62:	test   eax,eax
   14c64:	jne    14cd6 <hvm_msr_read_process+0x96>
   14c66:	mov    eax,DWORD PTR [r12]
   14c6a:	test   BYTE PTR [rip+0x214430],0x40        # 2290a1 <opt+0x1>
   14c71:	mov    DWORD PTR [rbx+0x28348],eax
   14c77:	mov    rax,QWORD PTR [r12+0x4]
   14c7c:	mov    QWORD PTR [rbx+0x28350],rax
   14c83:	jne    14ce0 <hvm_msr_read_process+0xa0>
   14c85:	mov    rax,QWORD PTR [rbx+0x283d8]
   14c8c:	test   rax,rax
   14c8f:	je     14cc8 <hvm_msr_read_process+0x88>
   14c91:	lea    rdx,[rip+0xffffffffffff7e98]        # cb30 <hvm_generic_postprocess>
   14c98:	cmp    rax,rdx
   14c9b:	je     14cc8 <hvm_msr_read_process+0x88>
   14c9d:	pop    rbx
   14c9e:	pop    rbp
   14c9f:	pop    r12
   14ca1:	mov    rdi,QWORD PTR [rip+0x2505b0]        # 265258 <warn>
   14ca8:	lea    rcx,[rip+0xe9b1]        # 23660 <__func__.6578>
   14caf:	lea    rdx,[rip+0xb082]        # 1fd38 <_IO_stdin_used+0x2d78>
   14cb6:	mov    esi,0x1
   14cbb:	xor    eax,eax
   14cbd:	jmp    4560 <__fprintf_chk@plt>
   14cc2:	nop    WORD PTR [rax+rax*1+0x0]
   14cc8:	lea    rax,[rip+0xffffffffffff7a71]        # c740 <hvm_msr_read_postprocess>
   14ccf:	mov    QWORD PTR [rbx+0x283d8],rax
   14cd6:	pop    rbx
   14cd7:	pop    rbp
   14cd8:	pop    r12
   14cda:	ret    
   14cdb:	nop    DWORD PTR [rax+rax*1+0x0]
   14ce0:	mov    r8,QWORD PTR [r12+0x4]
   14ce5:	mov    ecx,DWORD PTR [r12]
   14ce9:	lea    rdx,[rbp+0x28]
   14ced:	lea    rsi,[rip+0xbbac]        # 208a0 <_IO_stdin_used+0x38e0>
   14cf4:	xor    eax,eax
   14cf6:	mov    edi,0x1
   14cfb:	call   44f0 <__printf_chk@plt>
   14d00:	mov    rax,QWORD PTR [rbx+0x283d8]
   14d07:	test   rax,rax
   14d0a:	jne    14c91 <hvm_msr_read_process+0x51>
   14d0c:	jmp    14cc8 <hvm_msr_read_process+0x88>
   14d0e:	xchg   ax,ax

0000000000014d10 <hvm_vmexit_process>:
   14d10:	push   r14
   14d12:	push   r13
   14d14:	push   r12
   14d16:	push   rbp
   14d17:	mov    r12,rdx
   14d1a:	push   rbx
   14d1b:	test   BYTE PTR [rdi+0x11],0x1
   14d1f:	mov    rbp,rdi
   14d22:	mov    rbx,rsi
   14d25:	lea    rdx,[rip+0x8c0a]        # 1d936 <_IO_stdin_used+0x976>
   14d2c:	je     14ed0 <hvm_vmexit_process+0x1c0>
   14d32:	mov    esi,0xc
   14d37:	call   14ad0 <check_extra_words>
   14d3c:	test   eax,eax
   14d3e:	jne    14ec5 <hvm_vmexit_process+0x1b5>
   14d44:	mov    eax,DWORD PTR [rbx]
   14d46:	mov    r13,QWORD PTR [rbp+0x20]
   14d4a:	test   eax,eax
   14d4c:	je     14fc0 <hvm_vmexit_process+0x2b0>
   14d52:	lea    rdi,[rbx+0x28350]
   14d59:	mov    eax,ebx
   14d5b:	mov    DWORD PTR [rbx+0x4],0x1
   14d62:	mov    QWORD PTR [rbx+0x28348],0x0
   14d6d:	mov    QWORD PTR [rbx+0x283c8],0x0
   14d78:	and    rdi,0xfffffffffffffff8
   14d7c:	sub    eax,edi
   14d7e:	lea    ecx,[rax+0x283d0]
   14d84:	xor    eax,eax
   14d86:	shr    ecx,0x3
   14d89:	rep stos QWORD PTR es:[rdi],rax
   14d8c:	cmp    DWORD PTR [rbp+0x10],0x81102
   14d93:	je     14ef8 <hvm_vmexit_process+0x1e8>
   14d99:	cmp    DWORD PTR [r12+0x14],0x4
   14d9f:	je     14fd0 <hvm_vmexit_process+0x2c0>
   14da5:	mov    eax,DWORD PTR [r13+0x4]
   14da9:	test   BYTE PTR [rip+0x2142f0],0x20        # 2290a0 <opt>
   14db0:	mov    QWORD PTR [rbx+0x283f8],rax
   14db7:	mov    eax,DWORD PTR [r13+0x0]
   14dbb:	mov    DWORD PTR [rbx+0x28400],eax
   14dc1:	jne    14f67 <hvm_vmexit_process+0x257>
   14dc7:	mov    ecx,DWORD PTR [rbx+0x28400]
   14dcd:	mov    r8d,DWORD PTR [rbx+0x20]
   14dd1:	cmp    ecx,r8d
   14dd4:	ja     14f8a <hvm_vmexit_process+0x27a>
   14dda:	test   BYTE PTR [rip+0x2142c0],0x40        # 2290a1 <opt+0x1>
   14de1:	je     14e40 <hvm_vmexit_process+0x130>
   14de3:	cmp    ecx,r8d
   14de6:	mov    rdi,QWORD PTR [rbx+0x283f8]
   14ded:	lea    r12,[rbp+0x28]
   14df1:	jae    15000 <hvm_vmexit_process+0x2f0>
   14df7:	mov    rax,QWORD PTR [rbx+0x18]
   14dfb:	cmp    QWORD PTR [rax+rcx*8],0x0
   14e00:	je     15000 <hvm_vmexit_process+0x2f0>
   14e06:	call   73e0 <find_symbol>
   14e0b:	mov    edx,DWORD PTR [rbx+0x28400]
   14e11:	mov    r9,rax
   14e14:	mov    rax,QWORD PTR [rbx+0x18]
   14e18:	mov    r8,QWORD PTR [rbx+0x283f8]
   14e1f:	lea    rsi,[rip+0xbb52]        # 20978 <_IO_stdin_used+0x39b8>
   14e26:	mov    edi,0x1
   14e2b:	mov    rcx,QWORD PTR [rax+rdx*8]
   14e2f:	mov    rdx,r12
   14e32:	xor    eax,eax
   14e34:	call   44f0 <__printf_chk@plt>
   14e39:	nop    DWORD PTR [rax+0x0]
   14e40:	mov    rax,QWORD PTR [rbx+0x10]
   14e44:	mov    r12,QWORD PTR [rax+0x70]
   14e48:	mov    rax,QWORD PTR [rbp+0x8]
   14e4c:	test   r12,r12
   14e4f:	je     14e8a <hvm_vmexit_process+0x17a>
   14e51:	mov    rdx,QWORD PTR [rbx+0x283f0]
   14e58:	test   rdx,rdx
   14e5b:	je     14e8a <hvm_vmexit_process+0x17a>
   14e5d:	add    DWORD PTR [r12+0x70],0x1
   14e63:	sub    rax,rdx
   14e66:	mov    r13,rax
   14e69:	jne    15070 <hvm_vmexit_process+0x360>
   14e6f:	mov    rax,QWORD PTR [rbx+0x10]
   14e73:	mov    rdx,QWORD PTR [rax+0x70]
   14e77:	mov    rax,QWORD PTR [rbp+0x8]
   14e7b:	sub    rax,QWORD PTR [rbx+0x283f0]
   14e82:	add    QWORD PTR [rdx+0x30],rax
   14e86:	mov    rax,QWORD PTR [rbp+0x8]
   14e8a:	and    BYTE PTR [rbx+0x28408],0xf8
   14e91:	mov    QWORD PTR [rbx+0x283e0],rax
   14e98:	lea    rax,[rip+0xffffffffffff7c91]        # cb30 <hvm_generic_postprocess>
   14e9f:	mov    QWORD PTR [rbx+0x283f0],0x0
   14eaa:	mov    DWORD PTR [rbx+0x283d0],0x0
   14eb4:	mov    QWORD PTR [rbx+0x283d8],rax
   14ebb:	mov    DWORD PTR [rbx+0x28348],0x0
   14ec5:	pop    rbx
   14ec6:	pop    rbp
   14ec7:	pop    r12
   14ec9:	pop    r13
   14ecb:	pop    r14
   14ecd:	ret    
   14ece:	xchg   ax,ax
   14ed0:	mov    esi,0x8
   14ed5:	call   14ad0 <check_extra_words>
   14eda:	test   eax,eax
   14edc:	jne    14ec5 <hvm_vmexit_process+0x1b5>
   14ede:	mov    eax,DWORD PTR [rbx]
   14ee0:	mov    r13,QWORD PTR [rbp+0x20]
   14ee4:	test   eax,eax
   14ee6:	jne    14d52 <hvm_vmexit_process+0x42>
   14eec:	jmp    14fc0 <hvm_vmexit_process+0x2b0>
   14ef1:	nop    DWORD PTR [rax+0x0]
   14ef8:	mov    r8d,DWORD PTR [r12+0x14]
   14efd:	cmp    r8d,0x4
   14f01:	je     14f19 <hvm_vmexit_process+0x209>
   14f03:	cmp    DWORD PTR [rip+0x21420e],0x5        # 229118 <verbosity>
   14f0a:	jg     15160 <hvm_vmexit_process+0x450>
   14f10:	mov    DWORD PTR [r12+0x14],0x4
   14f19:	mov    r8,QWORD PTR [r13+0x4]
   14f1d:	movabs rax,0xffff000000000000
   14f27:	mov    rdx,r8
   14f2a:	and    rdx,rax
   14f2d:	bt     r8,0x2f
   14f32:	jae    15030 <hvm_vmexit_process+0x320>
   14f38:	cmp    rdx,rax
   14f3b:	sete   al
   14f3e:	movzx  eax,al
   14f41:	test   eax,eax
   14f43:	je     15040 <hvm_vmexit_process+0x330>
   14f49:	test   BYTE PTR [rip+0x214150],0x20        # 2290a0 <opt>
   14f50:	mov    QWORD PTR [rbx+0x283f8],r8
   14f57:	mov    eax,DWORD PTR [r13+0x0]
   14f5b:	mov    DWORD PTR [rbx+0x28400],eax
   14f61:	je     14dc7 <hvm_vmexit_process+0xb7>
   14f67:	mov    rsi,QWORD PTR [rbx+0x283f8]
   14f6e:	mov    rdi,QWORD PTR [rbp+0x8]
   14f72:	call   7700 <scatterplot_vs_time>
   14f77:	mov    ecx,DWORD PTR [rbx+0x28400]
   14f7d:	mov    r8d,DWORD PTR [rbx+0x20]
   14f81:	cmp    ecx,r8d
   14f84:	jbe    14dda <hvm_vmexit_process+0xca>
   14f8a:	mov    rdi,QWORD PTR [rip+0x2502c7]        # 265258 <warn>
   14f91:	lea    rdx,[rip+0xb9b0]        # 20948 <_IO_stdin_used+0x3988>
   14f98:	xor    eax,eax
   14f9a:	mov    esi,0x1
   14f9f:	call   4560 <__fprintf_chk@plt>
   14fa4:	cmp    DWORD PTR [rip+0x214135],0x3        # 2290e0 <opt+0x40>
   14fab:	ja     14ec5 <hvm_vmexit_process+0x1b5>
   14fb1:	mov    rdi,rbp
   14fb4:	call   13840 <error.part.24>
   14fb9:	nop    DWORD PTR [rax+0x0]
   14fc0:	mov    rsi,r12
   14fc3:	mov    rdi,rbx
   14fc6:	call   7100 <init_hvm_data.part.25>
   14fcb:	jmp    14d52 <hvm_vmexit_process+0x42>
   14fd0:	mov    r14d,DWORD PTR [rip+0x2140fd]        # 2290d4 <opt+0x34>
   14fd7:	mov    eax,0x2
   14fdc:	cmp    r14d,0x4
   14fe0:	cmove  r14d,eax
   14fe4:	cmp    DWORD PTR [rip+0x21412d],0x5        # 229118 <verbosity>
   14feb:	jg     15188 <hvm_vmexit_process+0x478>
   14ff1:	mov    DWORD PTR [r12+0x14],r14d
   14ff6:	jmp    14da5 <hvm_vmexit_process+0x95>
   14ffb:	nop    DWORD PTR [rax+rax*1+0x0]
   15000:	call   73e0 <find_symbol>
   15005:	mov    ecx,DWORD PTR [rbx+0x28400]
   1500b:	mov    r8,QWORD PTR [rbx+0x283f8]
   15012:	lea    rsi,[rip+0xb987]        # 209a0 <_IO_stdin_used+0x39e0>
   15019:	mov    r9,rax
   1501c:	mov    rdx,r12
   1501f:	mov    edi,0x1
   15024:	xor    eax,eax
   15026:	call   44f0 <__printf_chk@plt>
   1502b:	jmp    14e40 <hvm_vmexit_process+0x130>
   15030:	xor    eax,eax
   15032:	test   rdx,rdx
   15035:	sete   al
   15038:	jmp    14f41 <hvm_vmexit_process+0x231>
   1503d:	nop    DWORD PTR [rax]
   15040:	mov    rdi,QWORD PTR [rip+0x250211]        # 265258 <warn>
   15047:	lea    rcx,[rip+0xe532]        # 23580 <__func__.6856>
   1504e:	lea    rdx,[rip+0x88e8]        # 1d93d <_IO_stdin_used+0x97d>
   15055:	mov    esi,0x1
   1505a:	call   4560 <__fprintf_chk@plt>
   1505f:	mov    r8,QWORD PTR [r13+0x4]
   15063:	jmp    14f49 <hvm_vmexit_process+0x239>
   15068:	nop    DWORD PTR [rax+rax*1+0x0]
   15070:	mov    edx,DWORD PTR [rip+0x214062]        # 2290d8 <opt+0x38>
   15076:	movsxd rcx,DWORD PTR [r12+0x74]
   1507b:	test   edx,edx
   1507d:	mov    eax,ecx
   1507f:	je     15138 <hvm_vmexit_process+0x428>
   15085:	mov    eax,DWORD PTR [r12+0x78]
   1508a:	cmp    eax,ecx
   1508c:	jg     151c0 <hvm_vmexit_process+0x4b0>
   15092:	test   ecx,ecx
   15094:	mov    r14d,DWORD PTR [rip+0x214041]        # 2290dc <opt+0x3c>
   1509b:	je     150ab <hvm_vmexit_process+0x39b>
   1509d:	cmp    eax,r14d
   150a0:	jl     150ab <hvm_vmexit_process+0x39b>
   150a2:	test   r14d,r14d
   150a5:	jne    151e8 <hvm_vmexit_process+0x4d8>
   150ab:	add    eax,eax
   150ad:	cmovne edx,eax
   150b0:	cmp    edx,r14d
   150b3:	jle    151e0 <hvm_vmexit_process+0x4d0>
   150b9:	test   r14d,r14d
   150bc:	je     151e0 <hvm_vmexit_process+0x4d0>
   150c2:	mov    rdi,QWORD PTR [r12+0x88]
   150ca:	movsxd rsi,r14d
   150cd:	shl    rsi,0x3
   150d1:	call   44c0 <realloc@plt>
   150d6:	test   rax,rax
   150d9:	je     151d6 <hvm_vmexit_process+0x4c6>
   150df:	mov    QWORD PTR [r12+0x88],rax
   150e7:	mov    DWORD PTR [r12+0x78],r14d
   150ec:	movsxd rcx,DWORD PTR [r12+0x74]
   150f1:	cmp    ecx,r14d
   150f4:	jl     151c0 <hvm_vmexit_process+0x4b0>
   150fa:	mov    eax,ecx
   150fc:	cdq    
   150fd:	idiv   r14d
   15100:	lea    esi,[rax+0x1]
   15103:	movsxd rdi,edx
   15106:	mov    edx,0x55555556
   1510b:	mov    eax,esi
   1510d:	imul   edx
   1510f:	mov    eax,esi
   15111:	sar    eax,0x1f
   15114:	sub    eax,edx
   15116:	add    eax,edi
   15118:	cdq    
   15119:	idiv   esi
   1511b:	mov    eax,ecx
   1511d:	test   edx,edx
   1511f:	jne    15138 <hvm_vmexit_process+0x428>
   15121:	mov    rax,QWORD PTR [r12+0x88]
   15129:	mov    QWORD PTR [rax+rdi*8],r13
   1512d:	mov    eax,DWORD PTR [r12+0x74]
   15132:	nop    WORD PTR [rax+rax*1+0x0]
   15138:	add    eax,0x1
   1513b:	add    QWORD PTR [r12+0x80],r13
   15143:	add    DWORD PTR [r12+0x90],0x1
   1514c:	mov    DWORD PTR [r12+0x74],eax
   15151:	add    QWORD PTR [r12+0x98],r13
   15159:	jmp    14e6f <hvm_vmexit_process+0x15f>
   1515e:	xchg   ax,ax
   15160:	mov    rdi,QWORD PTR [rip+0x2500f1]        # 265258 <warn>
   15167:	lea    rcx,[rip+0xe412]        # 23580 <__func__.6856>
   1516e:	lea    rdx,[rip+0xb74b]        # 208c0 <_IO_stdin_used+0x3900>
   15175:	mov    esi,0x1
   1517a:	call   4560 <__fprintf_chk@plt>
   1517f:	jmp    14f10 <hvm_vmexit_process+0x200>
   15184:	nop    DWORD PTR [rax+0x0]
   15188:	mov    rdi,QWORD PTR [rip+0x2500c9]        # 265258 <warn>
   1518f:	lea    rcx,[rip+0xe3ea]        # 23580 <__func__.6856>
   15196:	lea    rdx,[rip+0xb763]        # 20900 <_IO_stdin_used+0x3940>
   1519d:	mov    r9d,r14d
   151a0:	mov    r8d,0x4
   151a6:	mov    esi,0x1
   151ab:	xor    eax,eax
   151ad:	call   4560 <__fprintf_chk@plt>
   151b2:	jmp    14ff1 <hvm_vmexit_process+0x2e1>
   151b7:	nop    WORD PTR [rax+rax*1+0x0]
   151c0:	mov    rax,QWORD PTR [r12+0x88]
   151c8:	mov    QWORD PTR [rax+rcx*8],r13
   151cc:	mov    eax,DWORD PTR [r12+0x74]
   151d1:	jmp    15138 <hvm_vmexit_process+0x428>
   151d6:	mov    r14d,DWORD PTR [r12+0x78]
   151db:	jmp    150ec <hvm_vmexit_process+0x3dc>
   151e0:	mov    r14d,edx
   151e3:	jmp    150c2 <hvm_vmexit_process+0x3b2>
   151e8:	mov    r14d,eax
   151eb:	jmp    150fa <hvm_vmexit_process+0x3ea>

00000000000151f0 <process_generic>:
   151f0:	mov    eax,DWORD PTR [rip+0x213eea]        # 2290e0 <opt+0x40>
   151f6:	test   eax,eax
   151f8:	je     15217 <process_generic+0x27>
   151fa:	test   BYTE PTR [rip+0x213ea0],0x40        # 2290a1 <opt+0x1>
   15201:	jne    15208 <process_generic+0x18>
   15203:	repz ret 
   15205:	nop    DWORD PTR [rax]
   15208:	mov    rsi,rdi
   1520b:	mov    rdi,QWORD PTR [rip+0x21720e]        # 22c420 <stdout@@GLIBC_2.2.5>
   15212:	jmp    13380 <dump_generic>
   15217:	sub    rsp,0x8
   1521b:	call   13840 <error.part.24>

0000000000015220 <dom0_process>:
   15220:	movzx  eax,BYTE PTR [rdi+0x41]
   15224:	shr    al,0x4
   15227:	cmp    al,0x1
   15229:	jne    15278 <dom0_process+0x58>
   1522b:	test   BYTE PTR [rip+0x213e6f],0x40        # 2290a1 <opt+0x1>
   15232:	je     15270 <dom0_process+0x50>
   15234:	mov    rax,QWORD PTR [rdi+0x50]
   15238:	cmp    DWORD PTR [rdi+0x40],0x41001
   1523f:	lea    rdx,[rip+0x8715]        # 1d95b <_IO_stdin_used+0x99b>
   15246:	lea    rcx,[rip+0x8705]        # 1d952 <_IO_stdin_used+0x992>
   1524d:	lea    rsi,[rip+0x8712]        # 1d966 <_IO_stdin_used+0x9a6>
   15254:	mov    r8d,DWORD PTR [rax]
   15257:	cmovne rcx,rdx
   1525b:	lea    rdx,[rdi+0x58]
   1525f:	xor    eax,eax
   15261:	mov    edi,0x1
   15266:	jmp    44f0 <__printf_chk@plt>
   1526b:	nop    DWORD PTR [rax+rax*1+0x0]
   15270:	repz ret 
   15272:	nop    WORD PTR [rax+rax*1+0x0]
   15278:	add    rdi,0x30
   1527c:	jmp    151f0 <process_generic>
   15281:	nop    DWORD PTR [rax+rax*1+0x0]
   15286:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015290 <vcpu_set_data_type>:
   15290:	sub    rsp,0x8
   15294:	mov    eax,DWORD PTR [rdi+0x3bf0]
   1529a:	test   eax,eax
   1529c:	jne    152c0 <vcpu_set_data_type+0x30>
   1529e:	cmp    esi,0x1
   152a1:	mov    DWORD PTR [rdi+0x3bf0],esi
   152a7:	jne    152b3 <vcpu_set_data_type+0x23>
   152a9:	mov    eax,DWORD PTR [rdi+0x3bf8]
   152af:	test   eax,eax
   152b1:	je     152d0 <vcpu_set_data_type+0x40>
   152b3:	xor    eax,eax
   152b5:	add    rsp,0x8
   152b9:	ret    
   152ba:	nop    WORD PTR [rax+rax*1+0x0]
   152c0:	cmp    eax,esi
   152c2:	je     152b3 <vcpu_set_data_type+0x23>
   152c4:	call   45c0 <vcpu_set_data_type.part.43>
   152c9:	nop    DWORD PTR [rax+0x0]
   152d0:	lea    rax,[rdi+0x3bf8]
   152d7:	mov    rsi,rdi
   152da:	mov    rdi,rax
   152dd:	call   7100 <init_hvm_data.part.25>
   152e2:	jmp    152b3 <vcpu_set_data_type+0x23>
   152e4:	xchg   ax,ax
   152e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000152f0 <shadow_process>:
   152f0:	push   r15
   152f2:	push   r14
   152f4:	push   r13
   152f6:	push   r12
   152f8:	push   rbp
   152f9:	push   rbx
   152fa:	mov    rbx,rdi
   152fd:	sub    rsp,0x18
   15301:	mov    ebp,DWORD PTR [rdi+0x40]
   15304:	mov    rdi,QWORD PTR [rdi+0x1a8]
   1530b:	mov    eax,ebp
   1530d:	shr    eax,0x8
   15310:	mov    r12d,eax
   15313:	and    r12d,0xf
   15317:	test   rdi,rdi
   1531a:	je     15605 <shadow_process+0x315>
   15320:	mov    esi,0x1
   15325:	call   15290 <vcpu_set_data_type>
   1532a:	test   eax,eax
   1532c:	jne    153b1 <shadow_process+0xc1>
   15332:	mov    r13,QWORD PTR [rbx+0x1a8]
   15339:	mov    esi,DWORD PTR [r13+0x3bf8]
   15340:	test   esi,esi
   15342:	je     153a8 <shadow_process+0xb8>
   15344:	mov    ecx,DWORD PTR [r13+0x3bfc]
   1534b:	test   ecx,ecx
   1534d:	je     153a8 <shadow_process+0xb8>
   1534f:	cmp    bpl,0x1
   15353:	lea    r9,[rbx+0x30]
   15357:	lea    r15,[r13+0x3bf8]
   1535e:	movzx  r14d,bpl
   15362:	jbe    153e8 <shadow_process+0xf8>
   15368:	cmp    bpl,0xb
   1536c:	jbe    1542f <shadow_process+0x13f>
   15372:	cmp    bpl,0xd
   15376:	je     154a0 <shadow_process+0x1b0>
   1537c:	ja     15580 <shadow_process+0x290>
   15382:	cmp    bpl,0xc
   15386:	jne    15586 <shadow_process+0x296>
   1538c:	add    rsp,0x18
   15390:	mov    rsi,r15
   15393:	mov    rdi,r9
   15396:	pop    rbx
   15397:	pop    rbp
   15398:	pop    r12
   1539a:	pop    r13
   1539c:	pop    r14
   1539e:	pop    r15
   153a0:	jmp    11510 <shadow_wrmap_bf_process>
   153a5:	nop    DWORD PTR [rax]
   153a8:	test   BYTE PTR [rip+0x213cf2],0x40        # 2290a1 <opt+0x1>
   153af:	jne    153c0 <shadow_process+0xd0>
   153b1:	add    rsp,0x18
   153b5:	pop    rbx
   153b6:	pop    rbp
   153b7:	pop    r12
   153b9:	pop    r13
   153bb:	pop    r14
   153bd:	pop    r15
   153bf:	ret    
   153c0:	mov    rsi,QWORD PTR [rbx+0x50]
   153c4:	mov    edi,DWORD PTR [rbx+0x40]
   153c7:	add    rsp,0x18
   153cb:	lea    rcx,[rbx+0x58]
   153cf:	lea    rdx,[rip+0x81bb]        # 1d591 <_IO_stdin_used+0x5d1>
   153d6:	pop    rbx
   153d7:	pop    rbp
   153d8:	pop    r12
   153da:	pop    r13
   153dc:	pop    r14
   153de:	pop    r15
   153e0:	jmp    11270 <shadow_fault_generic_dump>
   153e5:	nop    DWORD PTR [rax]
   153e8:	movzx  r12d,r12b
   153ec:	add    r12d,0x2
   153f0:	cmp    DWORD PTR [r13+0x14],r12d
   153f4:	je     1542f <shadow_process+0x13f>
   153f6:	mov    rdi,QWORD PTR [rip+0x24fe5b]        # 265258 <warn>
   153fd:	lea    rcx,[rip+0xe024]        # 23428 <__func__.7167>
   15404:	lea    rdx,[rip+0xb5bd]        # 209c8 <_IO_stdin_used+0x3a08>
   1540b:	mov    r8d,r12d
   1540e:	mov    esi,0x1
   15413:	xor    eax,eax
   15415:	mov    QWORD PTR [rsp+0x8],r9
   1541a:	call   4560 <__fprintf_chk@plt>
   1541f:	mov    rax,QWORD PTR [rbx+0x1a8]
   15426:	mov    r9,QWORD PTR [rsp+0x8]
   1542b:	mov    DWORD PTR [rax+0x14],r12d
   1542f:	test   BYTE PTR [rip+0x213c6d],0x20        # 2290a3 <opt+0x3>
   15436:	movzx  eax,bpl
   1543a:	mov    DWORD PTR [r13+0x2bf50],eax
   15441:	je     15480 <shadow_process+0x190>
   15443:	mov    edx,DWORD PTR [rip+0x24fe57]        # 2652a0 <done.7168>
   15449:	test   edx,edx
   1544b:	jne    15480 <shadow_process+0x190>
   1544d:	lea    rsi,[rip+0xfffffffffffef7bc]        # 4c10 <hvm_pf_xen_summary>
   15454:	xor    edx,edx
   15456:	mov    rdi,r15
   15459:	mov    QWORD PTR [rsp+0x8],r9
   1545e:	call   bcf0 <__hvm_set_summary_handler>
   15463:	test   eax,eax
   15465:	mov    r9,QWORD PTR [rsp+0x8]
   1546a:	jne    155d7 <shadow_process+0x2e7>
   15470:	mov    DWORD PTR [rip+0x24fe26],0x1        # 2652a0 <done.7168>
   1547a:	nop    WORD PTR [rax+rax*1+0x0]
   15480:	cmp    bpl,0xf
   15484:	ja     15559 <shadow_process+0x269>
   1548a:	lea    rdx,[rip+0xdc2b]        # 230bc <_IO_stdin_used+0x60fc>
   15491:	movsxd rax,DWORD PTR [rdx+r14*4]
   15495:	add    rax,rdx
   15498:	jmp    rax
   1549a:	nop    WORD PTR [rax+rax*1+0x0]
   154a0:	add    rsp,0x18
   154a4:	mov    rsi,r15
   154a7:	mov    rdi,r9
   154aa:	pop    rbx
   154ab:	pop    rbp
   154ac:	pop    r12
   154ae:	pop    r13
   154b0:	pop    r14
   154b2:	pop    r15
   154b4:	jmp    11470 <shadow_prealloc_unpin_process>
   154b9:	add    rsp,0x18
   154bd:	mov    rsi,r15
   154c0:	mov    rdi,r9
   154c3:	pop    rbx
   154c4:	pop    rbp
   154c5:	pop    r12
   154c7:	pop    r13
   154c9:	pop    r14
   154cb:	pop    r15
   154cd:	jmp    13e30 <shadow_emulate_other_process>
   154d2:	add    rsp,0x18
   154d6:	mov    rsi,r15
   154d9:	mov    rdi,r9
   154dc:	pop    rbx
   154dd:	pop    rbp
   154de:	pop    r12
   154e0:	pop    r13
   154e2:	pop    r14
   154e4:	pop    r15
   154e6:	jmp    13a10 <shadow_emulate_process>
   154eb:	add    rsp,0x18
   154ef:	mov    rsi,r15
   154f2:	mov    rdi,r9
   154f5:	pop    rbx
   154f6:	pop    rbp
   154f7:	pop    r12
   154f9:	pop    r13
   154fb:	pop    r14
   154fd:	pop    r15
   154ff:	jmp    13f40 <shadow_fixup_process>
   15504:	add    rsp,0x18
   15508:	mov    rsi,r15
   1550b:	mov    rdi,r9
   1550e:	pop    rbx
   1550f:	pop    rbp
   15510:	pop    r12
   15512:	pop    r13
   15514:	pop    r14
   15516:	pop    r15
   15518:	jmp    14210 <shadow_mmio_process>
   1551d:	add    rsp,0x18
   15521:	mov    rsi,r15
   15524:	mov    rdi,r9
   15527:	pop    rbx
   15528:	pop    rbp
   15529:	pop    r12
   1552b:	pop    r13
   1552d:	pop    r14
   1552f:	pop    r15
   15531:	jmp    143f0 <shadow_propagate_process>
   15536:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15540:	add    rsp,0x18
   15544:	mov    rsi,r15
   15547:	mov    rdi,r9
   1554a:	pop    rbx
   1554b:	pop    rbp
   1554c:	pop    r12
   1554e:	pop    r13
   15550:	pop    r14
   15552:	pop    r15
   15554:	jmp    11420 <shadow_resync_process>
   15559:	cmp    bpl,0xb
   1555d:	ja     15586 <shadow_process+0x296>
   1555f:	add    rsp,0x18
   15563:	mov    rsi,r15
   15566:	mov    rdi,r9
   15569:	pop    rbx
   1556a:	pop    rbp
   1556b:	pop    r12
   1556d:	pop    r13
   1556f:	pop    r14
   15571:	pop    r15
   15573:	jmp    11370 <shadow_fault_generic_process>
   15578:	nop    DWORD PTR [rax+rax*1+0x0]
   15580:	cmp    bpl,0xf
   15584:	jbe    15540 <shadow_process+0x250>
   15586:	mov    eax,DWORD PTR [rip+0x213a9c]        # 229028 <_w.7184>
   1558c:	test   eax,eax
   1558e:	je     155c1 <shadow_process+0x2d1>
   15590:	mov    rcx,QWORD PTR [rip+0x24fcc1]        # 265258 <warn>
   15597:	lea    rdi,[rip+0xb452]        # 209f0 <_IO_stdin_used+0x3a30>
   1559e:	mov    edx,0x26
   155a3:	mov    esi,0x1
   155a8:	mov    QWORD PTR [rsp+0x8],r9
   155ad:	mov    DWORD PTR [rip+0x213a71],0x0        # 229028 <_w.7184>
   155b7:	call   4550 <fwrite@plt>
   155bc:	mov    r9,QWORD PTR [rsp+0x8]
   155c1:	add    rsp,0x18
   155c5:	mov    rdi,r9
   155c8:	pop    rbx
   155c9:	pop    rbp
   155ca:	pop    r12
   155cc:	pop    r13
   155ce:	pop    r14
   155d0:	pop    r15
   155d2:	jmp    151f0 <process_generic>
   155d7:	mov    rdi,QWORD PTR [rip+0x216e62]        # 22c440 <stderr@@GLIBC_2.2.5>
   155de:	lea    rcx,[rip+0xde43]        # 23428 <__func__.7167>
   155e5:	lea    rdx,[rip+0xa544]        # 1fb30 <_IO_stdin_used+0x2b70>
   155ec:	mov    r8d,eax
   155ef:	mov    esi,0x1
   155f4:	xor    eax,eax
   155f6:	call   4560 <__fprintf_chk@plt>
   155fb:	mov    r9,QWORD PTR [rsp+0x8]
   15600:	jmp    15470 <shadow_process+0x180>
   15605:	lea    rcx,[rip+0xde2c]        # 23438 <__PRETTY_FUNCTION__.7166>
   1560c:	lea    rsi,[rip+0x7a75]        # 1d088 <_IO_stdin_used+0xc8>
   15613:	lea    rdi,[rip+0x835f]        # 1d979 <_IO_stdin_used+0x9b9>
   1561a:	mov    edx,0x1816
   1561f:	call   4400 <__assert_fail@plt>
   15624:	xchg   ax,ax
   15626:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015630 <lose_vcpu>:
   15630:	push   r15
   15632:	push   r14
   15634:	push   r13
   15636:	push   r12
   15638:	push   rbp
   15639:	push   rbx
   1563a:	mov    rbp,rsi
   1563d:	mov    rbx,rdi
   15640:	sub    rsp,0x8
   15644:	cmp    DWORD PTR [rdi+0x3bf0],0x1
   1564b:	jne    15657 <lose_vcpu+0x27>
   1564d:	mov    DWORD PTR [rdi+0x3bfc],0x0
   15657:	test   BYTE PTR [rip+0x213a42],0x40        # 2290a0 <opt>
   1565e:	mov    r12,QWORD PTR [rbx+0x8]
   15662:	je     156d8 <lose_vcpu+0xa8>
   15664:	mov    rax,QWORD PTR [rip+0x217b55]        # 22d1c0 <P+0x20>
   1566b:	cmp    rbp,rax
   1566e:	ja     15770 <lose_vcpu+0x140>
   15674:	xor    r13d,r13d
   15677:	xor    r14d,r14d
   1567a:	movsxd rcx,DWORD PTR [rbx+0x18]
   1567e:	lea    rax,[rip+0x2139fb]        # 229080 <runstate_graph>
   15685:	sub    rsp,0x8
   15689:	mov    edx,DWORD PTR [r12+0x8]
   1568e:	lea    rsi,[rip+0x7ed3]        # 1d568 <_IO_stdin_used+0x5a8>
   15695:	mov    r9d,r13d
   15698:	mov    r8d,r14d
   1569b:	mov    edi,0x1
   156a0:	mov    eax,DWORD PTR [rax+rcx*4]
   156a3:	push   rax
   156a4:	mov    ecx,DWORD PTR [rbx]
   156a6:	xor    eax,eax
   156a8:	call   44f0 <__printf_chk@plt>
   156ad:	mov    eax,DWORD PTR [rip+0x2139dd]        # 229090 <runstate_graph+0x10>
   156b3:	mov    edx,DWORD PTR [r12+0x8]
   156b8:	lea    rsi,[rip+0x7ea9]        # 1d568 <_IO_stdin_used+0x5a8>
   156bf:	mov    edi,0x1
   156c4:	mov    r9d,r13d
   156c7:	mov    r8d,r14d
   156ca:	mov    DWORD PTR [rsp],eax
   156cd:	mov    ecx,DWORD PTR [rbx]
   156cf:	xor    eax,eax
   156d1:	call   44f0 <__printf_chk@plt>
   156d6:	pop    rsi
   156d7:	pop    rdi
   156d8:	mov    rax,QWORD PTR [rbx+0x20]
   156dc:	test   rax,rax
   156df:	je     156ea <lose_vcpu+0xba>
   156e1:	cmp    rbp,rax
   156e4:	ja     1591b <lose_vcpu+0x2eb>
   156ea:	mov    QWORD PTR [rbx+0x18],0x4
   156f2:	mov    QWORD PTR [rbx+0x20],rbp
   156f6:	mov    rax,QWORD PTR [r12+0x818]
   156fe:	test   rax,rax
   15701:	je     1570c <lose_vcpu+0xdc>
   15703:	cmp    rbp,rax
   15706:	ja     157b5 <lose_vcpu+0x185>
   1570c:	mov    rdi,r12
   1570f:	call   10420 <domain_runstate>
   15714:	lea    rdi,[rbx+0x80]
   1571b:	mov    DWORD PTR [r12+0x814],eax
   15723:	mov    eax,ebx
   15725:	mov    QWORD PTR [r12+0x818],rbp
   1572d:	mov    QWORD PTR [rbx+0x78],0x0
   15735:	and    rdi,0xfffffffffffffff8
   15739:	mov    QWORD PTR [rbx+0x130],0x0
   15744:	sub    eax,edi
   15746:	lea    ecx,[rax+0x138]
   1574c:	xor    eax,eax
   1574e:	shr    ecx,0x3
   15751:	rep stos QWORD PTR es:[rdi],rax
   15754:	cmp    DWORD PTR [rbx+0x3bf0],0x1
   1575b:	je     158a0 <lose_vcpu+0x270>
   15761:	add    rsp,0x8
   15765:	pop    rbx
   15766:	pop    rbp
   15767:	pop    r12
   15769:	pop    r13
   1576b:	pop    r14
   1576d:	pop    r15
   1576f:	ret    
   15770:	mov    r13,rbp
   15773:	xor    edx,edx
   15775:	movabs rcx,0x44b82fa09b5a53
   1577f:	sub    r13,rax
   15782:	shl    r13,0xa
   15786:	mov    rax,r13
   15789:	div    QWORD PTR [rip+0x213918]        # 2290a8 <opt+0x8>
   15790:	mov    rdx,rax
   15793:	mov    r13,rax
   15796:	shr    rdx,0x9
   1579a:	mov    rax,rdx
   1579d:	mul    rcx
   157a0:	shr    rdx,0xb
   157a4:	mov    r14d,edx
   157a7:	imul   edx,edx,0x3b9aca00
   157ad:	sub    r13d,edx
   157b0:	jmp    1567a <lose_vcpu+0x4a>
   157b5:	movsxd rdx,DWORD PTR [r12+0x814]
   157bd:	mov    r14,rbp
   157c0:	sub    r14,rax
   157c3:	lea    rax,[rdx*8+0x0]
   157cb:	sub    rax,rdx
   157ce:	lea    r13,[r12+rax*8+0x858]
   157d6:	add    DWORD PTR [r13+0x0],0x1
   157db:	movsxd rcx,DWORD PTR [r13+0x4]
   157df:	mov    edx,DWORD PTR [rip+0x2138f3]        # 2290d8 <opt+0x38>
   157e5:	test   edx,edx
   157e7:	mov    eax,ecx
   157e9:	je     15882 <lose_vcpu+0x252>
   157ef:	mov    eax,DWORD PTR [r13+0x8]
   157f3:	cmp    eax,ecx
   157f5:	jg     15b7a <lose_vcpu+0x54a>
   157fb:	test   ecx,ecx
   157fd:	mov    r15d,DWORD PTR [rip+0x2138d8]        # 2290dc <opt+0x3c>
   15804:	jne    15bda <lose_vcpu+0x5aa>
   1580a:	add    eax,eax
   1580c:	cmovne edx,eax
   1580f:	test   r15d,r15d
   15812:	je     15ce4 <lose_vcpu+0x6b4>
   15818:	cmp    edx,r15d
   1581b:	jle    15ce4 <lose_vcpu+0x6b4>
   15821:	mov    rdi,QWORD PTR [r13+0x18]
   15825:	movsxd rsi,r15d
   15828:	shl    rsi,0x3
   1582c:	call   44c0 <realloc@plt>
   15831:	test   rax,rax
   15834:	je     15cdb <lose_vcpu+0x6ab>
   1583a:	mov    QWORD PTR [r13+0x18],rax
   1583e:	mov    DWORD PTR [r13+0x8],r15d
   15842:	movsxd rcx,DWORD PTR [r13+0x4]
   15846:	cmp    ecx,r15d
   15849:	jl     15b7a <lose_vcpu+0x54a>
   1584f:	mov    eax,ecx
   15851:	cdq    
   15852:	idiv   r15d
   15855:	lea    esi,[rax+0x1]
   15858:	movsxd rdi,edx
   1585b:	mov    edx,0x55555556
   15860:	mov    eax,esi
   15862:	imul   edx
   15864:	mov    eax,esi
   15866:	sar    eax,0x1f
   15869:	sub    eax,edx
   1586b:	add    eax,edi
   1586d:	cdq    
   1586e:	idiv   esi
   15870:	mov    eax,ecx
   15872:	test   edx,edx
   15874:	jne    15882 <lose_vcpu+0x252>
   15876:	mov    rax,QWORD PTR [r13+0x18]
   1587a:	mov    QWORD PTR [rax+rdi*8],r14
   1587e:	mov    eax,DWORD PTR [r13+0x4]
   15882:	add    eax,0x1
   15885:	add    QWORD PTR [r13+0x10],r14
   15889:	add    DWORD PTR [r13+0x20],0x1
   1588e:	mov    DWORD PTR [r13+0x4],eax
   15892:	add    QWORD PTR [r13+0x28],r14
   15896:	jmp    1570c <lose_vcpu+0xdc>
   1589b:	nop    DWORD PTR [rax+rax*1+0x0]
   158a0:	movzx  eax,BYTE PTR [rip+0x2137fa]        # 2290a1 <opt+0x1>
   158a7:	test   al,0x40
   158a9:	jne    15aa8 <lose_vcpu+0x478>
   158af:	mov    QWORD PTR [rbx+0x2c014],0x0
   158ba:	and    BYTE PTR [rbx+0x2c010],0xfe
   158c1:	xor    ebp,ebp
   158c3:	add    rbx,0x167e0
   158ca:	lea    r12,[rip+0xb16f]        # 20a40 <_IO_stdin_used+0x3a80>
   158d1:	jmp    158fc <lose_vcpu+0x2cc>
   158d3:	nop    DWORD PTR [rax+rax*1+0x0]
   158d8:	add    ebp,0x1
   158db:	mov    QWORD PTR [rbx],0x0
   158e2:	add    rbx,0xf8
   158e9:	cmp    ebp,0x15e
   158ef:	je     15761 <lose_vcpu+0x131>
   158f5:	movzx  eax,BYTE PTR [rip+0x2137a5]        # 2290a1 <opt+0x1>
   158fc:	test   al,0x40
   158fe:	je     158d8 <lose_vcpu+0x2a8>
   15900:	mov    rcx,QWORD PTR [rbx]
   15903:	test   rcx,rcx
   15906:	je     158d8 <lose_vcpu+0x2a8>
   15908:	mov    edx,ebp
   1590a:	mov    rsi,r12
   1590d:	mov    edi,0x1
   15912:	xor    eax,eax
   15914:	call   44f0 <__printf_chk@plt>
   15919:	jmp    158d8 <lose_vcpu+0x2a8>
   1591b:	movsxd rdx,DWORD PTR [rbx+0x18]
   1591f:	mov    r14,rbp
   15922:	sub    r14,rax
   15925:	lea    rax,[rdx*8+0x0]
   1592d:	sub    rax,rdx
   15930:	lea    r13,[rbx+rax*8+0x150]
   15938:	add    DWORD PTR [r13+0x0],0x1
   1593d:	movsxd rcx,DWORD PTR [r13+0x4]
   15941:	mov    edx,DWORD PTR [rip+0x213791]        # 2290d8 <opt+0x38>
   15947:	test   edx,edx
   15949:	mov    eax,ecx
   1594b:	je     159ee <lose_vcpu+0x3be>
   15951:	mov    eax,DWORD PTR [r13+0x8]
   15955:	cmp    eax,ecx
   15957:	jg     15b8b <lose_vcpu+0x55b>
   1595d:	test   ecx,ecx
   1595f:	mov    r15d,DWORD PTR [rip+0x213776]        # 2290dc <opt+0x3c>
   15966:	je     15976 <lose_vcpu+0x346>
   15968:	cmp    eax,r15d
   1596b:	jl     15976 <lose_vcpu+0x346>
   1596d:	test   r15d,r15d
   15970:	jne    15d25 <lose_vcpu+0x6f5>
   15976:	add    eax,eax
   15978:	cmovne edx,eax
   1597b:	test   r15d,r15d
   1597e:	je     15cf5 <lose_vcpu+0x6c5>
   15984:	cmp    edx,r15d
   15987:	jle    15cf5 <lose_vcpu+0x6c5>
   1598d:	mov    rdi,QWORD PTR [r13+0x18]
   15991:	movsxd rsi,r15d
   15994:	shl    rsi,0x3
   15998:	call   44c0 <realloc@plt>
   1599d:	test   rax,rax
   159a0:	je     15cec <lose_vcpu+0x6bc>
   159a6:	mov    QWORD PTR [r13+0x18],rax
   159aa:	mov    DWORD PTR [r13+0x8],r15d
   159ae:	movsxd rcx,DWORD PTR [r13+0x4]
   159b2:	cmp    ecx,r15d
   159b5:	jl     15b8b <lose_vcpu+0x55b>
   159bb:	mov    eax,ecx
   159bd:	cdq    
   159be:	idiv   r15d
   159c1:	lea    esi,[rax+0x1]
   159c4:	movsxd rdi,edx
   159c7:	mov    edx,0x55555556
   159cc:	mov    eax,esi
   159ce:	imul   edx
   159d0:	mov    eax,esi
   159d2:	sar    eax,0x1f
   159d5:	sub    eax,edx
   159d7:	add    eax,edi
   159d9:	cdq    
   159da:	idiv   esi
   159dc:	mov    eax,ecx
   159de:	test   edx,edx
   159e0:	jne    159ee <lose_vcpu+0x3be>
   159e2:	mov    rax,QWORD PTR [r13+0x18]
   159e6:	mov    QWORD PTR [rax+rdi*8],r14
   159ea:	mov    eax,DWORD PTR [r13+0x4]
   159ee:	add    eax,0x1
   159f1:	add    QWORD PTR [r13+0x10],r14
   159f5:	add    DWORD PTR [r13+0x20],0x1
   159fa:	mov    DWORD PTR [r13+0x4],eax
   159fe:	add    QWORD PTR [r13+0x28],r14
   15a02:	cmp    BYTE PTR [rip+0x213697],0x0        # 2290a0 <opt>
   15a09:	js     15ad0 <lose_vcpu+0x4a0>
   15a0f:	mov    eax,DWORD PTR [rbx+0x18]
   15a12:	test   eax,eax
   15a14:	jne    15a35 <lose_vcpu+0x405>
   15a16:	mov    r15,rbp
   15a19:	sub    r15,QWORD PTR [rbx+0x20]
   15a1d:	mov    r13,QWORD PTR [rbx+0x8]
   15a21:	add    DWORD PTR [r13+0x820],0x1
   15a29:	test   r15,r15
   15a2c:	jne    15bf4 <lose_vcpu+0x5c4>
   15a32:	mov    eax,DWORD PTR [rbx+0x18]
   15a35:	cmp    eax,0x1
   15a38:	je     15b46 <lose_vcpu+0x516>
   15a3e:	mov    rax,QWORD PTR [rbx+0x8]
   15a42:	mov    eax,DWORD PTR [rax+0x8]
   15a45:	test   eax,eax
   15a47:	jne    156ea <lose_vcpu+0xba>
   15a4d:	lea    rax,[rip+0x21778c]        # 22d1e0 <P+0x40>
   15a54:	lea    rsi,[rax+0x38000]
   15a5b:	nop    DWORD PTR [rax+rax*1+0x0]
   15a60:	test   BYTE PTR [rax],0x1
   15a63:	je     15a98 <lose_vcpu+0x468>
   15a65:	mov    rdx,QWORD PTR [rax+0x1c0]
   15a6c:	cmp    QWORD PTR [rbx+0x20],rdx
   15a70:	mov    rdi,rbp
   15a73:	cmovae rdx,QWORD PTR [rbx+0x20]
   15a78:	movsxd rcx,DWORD PTR [rbx+0x18]
   15a7c:	sub    rdi,rdx
   15a7f:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   15a87:	mov    DWORD PTR [rax+0x208],0x4
   15a91:	mov    QWORD PTR [rax+0x1c8],rbp
   15a98:	add    rax,0x380
   15a9e:	cmp    rsi,rax
   15aa1:	jne    15a60 <lose_vcpu+0x430>
   15aa3:	jmp    156ea <lose_vcpu+0xba>
   15aa8:	mov    rax,QWORD PTR [rbx+0x8]
   15aac:	mov    ecx,DWORD PTR [rbx]
   15aae:	lea    rsi,[rip+0xaf63]        # 20a18 <_IO_stdin_used+0x3a58>
   15ab5:	mov    edi,0x1
   15aba:	mov    edx,DWORD PTR [rax+0x8]
   15abd:	xor    eax,eax
   15abf:	call   44f0 <__printf_chk@plt>
   15ac4:	movzx  eax,BYTE PTR [rip+0x2135d6]        # 2290a1 <opt+0x1>
   15acb:	jmp    158af <lose_vcpu+0x27f>
   15ad0:	mov    rsi,QWORD PTR [rip+0x2176e9]        # 22d1c0 <P+0x20>
   15ad7:	mov    rcx,QWORD PTR [rip+0x2135ca]        # 2290a8 <opt+0x8>
   15ade:	cmp    rbp,rsi
   15ae1:	ja     15b9c <lose_vcpu+0x56c>
   15ae7:	xor    r9d,r9d
   15aea:	xor    r8d,r8d
   15aed:	mov    rax,rbp
   15af0:	sub    rax,QWORD PTR [rbx+0x20]
   15af4:	xor    edx,edx
   15af6:	mov    edi,0x1
   15afb:	sub    rax,rsi
   15afe:	shl    rax,0xa
   15b02:	div    rcx
   15b05:	movabs rdx,0x44b82fa09b5a53
   15b0f:	mov    rcx,rax
   15b12:	shr    rax,0x9
   15b16:	mul    rdx
   15b19:	mov    rax,rdx
   15b1c:	mov    edx,DWORD PTR [r12+0x8]
   15b21:	shr    rax,0xb
   15b25:	imul   esi,eax,0x3b9aca00
   15b2b:	sub    ecx,esi
   15b2d:	lea    rsi,[rip+0x7a46]        # 1d57a <_IO_stdin_used+0x5ba>
   15b34:	push   rcx
   15b35:	push   rax
   15b36:	xor    eax,eax
   15b38:	mov    ecx,DWORD PTR [rbx]
   15b3a:	call   44f0 <__printf_chk@plt>
   15b3f:	pop    rdx
   15b40:	pop    rcx
   15b41:	jmp    15a0f <lose_vcpu+0x3df>
   15b46:	movsxd rdx,DWORD PTR [rbx+0x1c]
   15b4a:	mov    rsi,rbp
   15b4d:	sub    rsi,QWORD PTR [rbx+0x20]
   15b51:	lea    rax,[rdx*8+0x0]
   15b59:	sub    rax,rdx
   15b5c:	lea    rdi,[rbx+rax*8+0x2d8]
   15b64:	add    DWORD PTR [rdi],0x1
   15b67:	test   rsi,rsi
   15b6a:	je     15a3e <lose_vcpu+0x40e>
   15b70:	call   4a20 <update_cycles.part.5>
   15b75:	jmp    15a3e <lose_vcpu+0x40e>
   15b7a:	mov    rax,QWORD PTR [r13+0x18]
   15b7e:	mov    QWORD PTR [rax+rcx*8],r14
   15b82:	mov    eax,DWORD PTR [r13+0x4]
   15b86:	jmp    15882 <lose_vcpu+0x252>
   15b8b:	mov    rax,QWORD PTR [r13+0x18]
   15b8f:	mov    QWORD PTR [rax+rcx*8],r14
   15b93:	mov    eax,DWORD PTR [r13+0x4]
   15b97:	jmp    159ee <lose_vcpu+0x3be>
   15b9c:	mov    r9,rbp
   15b9f:	xor    edx,edx
   15ba1:	sub    r9,rsi
   15ba4:	shl    r9,0xa
   15ba8:	mov    rax,r9
   15bab:	div    rcx
   15bae:	movabs rdx,0x44b82fa09b5a53
   15bb8:	mov    r9,rax
   15bbb:	shr    rax,0x9
   15bbf:	mul    rdx
   15bc2:	mov    rax,rdx
   15bc5:	shr    rax,0xb
   15bc9:	mov    r8d,eax
   15bcc:	imul   eax,eax,0x3b9aca00
   15bd2:	sub    r9d,eax
   15bd5:	jmp    15aed <lose_vcpu+0x4bd>
   15bda:	cmp    eax,r15d
   15bdd:	jl     1580a <lose_vcpu+0x1da>
   15be3:	test   r15d,r15d
   15be6:	je     1580a <lose_vcpu+0x1da>
   15bec:	mov    r15d,eax
   15bef:	jmp    1584f <lose_vcpu+0x21f>
   15bf4:	mov    esi,DWORD PTR [rip+0x2134de]        # 2290d8 <opt+0x38>
   15bfa:	movsxd rcx,DWORD PTR [r13+0x824]
   15c01:	test   esi,esi
   15c03:	mov    eax,ecx
   15c05:	je     15cb6 <lose_vcpu+0x686>
   15c0b:	mov    edi,DWORD PTR [r13+0x828]
   15c12:	cmp    edi,ecx
   15c14:	jg     15cfd <lose_vcpu+0x6cd>
   15c1a:	test   ecx,ecx
   15c1c:	mov    r14d,DWORD PTR [rip+0x2134b9]        # 2290dc <opt+0x3c>
   15c23:	je     15c2f <lose_vcpu+0x5ff>
   15c25:	cmp    edi,r14d
   15c28:	jl     15c2f <lose_vcpu+0x5ff>
   15c2a:	test   r14d,r14d
   15c2d:	jne    15c7e <lose_vcpu+0x64e>
   15c2f:	add    edi,edi
   15c31:	cmovne esi,edi
   15c34:	cmp    esi,r14d
   15c37:	jle    15d1d <lose_vcpu+0x6ed>
   15c3d:	test   r14d,r14d
   15c40:	je     15d1d <lose_vcpu+0x6ed>
   15c46:	mov    rdi,QWORD PTR [r13+0x838]
   15c4d:	movsxd rsi,r14d
   15c50:	shl    rsi,0x3
   15c54:	call   44c0 <realloc@plt>
   15c59:	test   rax,rax
   15c5c:	je     15d11 <lose_vcpu+0x6e1>
   15c62:	mov    QWORD PTR [r13+0x838],rax
   15c69:	mov    DWORD PTR [r13+0x828],r14d
   15c70:	mov    edi,r14d
   15c73:	movsxd rcx,DWORD PTR [r13+0x824]
   15c7a:	cmp    ecx,edi
   15c7c:	jl     15cfd <lose_vcpu+0x6cd>
   15c7e:	mov    eax,ecx
   15c80:	cdq    
   15c81:	idiv   edi
   15c83:	lea    esi,[rax+0x1]
   15c86:	movsxd rdi,edx
   15c89:	mov    edx,0x55555556
   15c8e:	mov    eax,esi
   15c90:	imul   edx
   15c92:	mov    eax,esi
   15c94:	sar    eax,0x1f
   15c97:	sub    eax,edx
   15c99:	add    eax,edi
   15c9b:	cdq    
   15c9c:	idiv   esi
   15c9e:	mov    eax,ecx
   15ca0:	test   edx,edx
   15ca2:	jne    15cb6 <lose_vcpu+0x686>
   15ca4:	mov    rax,QWORD PTR [r13+0x838]
   15cab:	mov    QWORD PTR [rax+rdi*8],r15
   15caf:	mov    eax,DWORD PTR [r13+0x824]
   15cb6:	add    eax,0x1
   15cb9:	add    QWORD PTR [r13+0x830],r15
   15cc0:	add    DWORD PTR [r13+0x840],0x1
   15cc8:	mov    DWORD PTR [r13+0x824],eax
   15ccf:	add    QWORD PTR [r13+0x848],r15
   15cd6:	jmp    15a32 <lose_vcpu+0x402>
   15cdb:	mov    r15d,DWORD PTR [r13+0x8]
   15cdf:	jmp    15842 <lose_vcpu+0x212>
   15ce4:	mov    r15d,edx
   15ce7:	jmp    15821 <lose_vcpu+0x1f1>
   15cec:	mov    r15d,DWORD PTR [r13+0x8]
   15cf0:	jmp    159ae <lose_vcpu+0x37e>
   15cf5:	mov    r15d,edx
   15cf8:	jmp    1598d <lose_vcpu+0x35d>
   15cfd:	mov    rax,QWORD PTR [r13+0x838]
   15d04:	mov    QWORD PTR [rax+rcx*8],r15
   15d08:	mov    eax,DWORD PTR [r13+0x824]
   15d0f:	jmp    15cb6 <lose_vcpu+0x686>
   15d11:	mov    edi,DWORD PTR [r13+0x828]
   15d18:	jmp    15c73 <lose_vcpu+0x643>
   15d1d:	mov    r14d,esi
   15d20:	jmp    15c46 <lose_vcpu+0x616>
   15d25:	mov    r15d,eax
   15d28:	jmp    159bb <lose_vcpu+0x38b>
   15d2d:	nop    DWORD PTR [rax]

0000000000015d30 <activate_early_eof>:
   15d30:	push   r13
   15d32:	push   r12
   15d34:	lea    rdi,[rip+0xad2d]        # 20a68 <_IO_stdin_used+0x3aa8>
   15d3b:	push   rbp
   15d3c:	push   rbx
   15d3d:	mov    edx,0x2e
   15d42:	mov    esi,0x1
   15d47:	sub    rsp,0x8
   15d4b:	mov    rcx,QWORD PTR [rip+0x24f506]        # 265258 <warn>
   15d52:	call   4550 <fwrite@plt>
   15d57:	mov    eax,DWORD PTR [rip+0x217443]        # 22d1a0 <P>
   15d5d:	mov    DWORD PTR [rip+0x217449],0x1        # 22d1b0 <P+0x10>
   15d67:	test   eax,eax
   15d69:	js     15dd6 <activate_early_eof+0xa6>
   15d6b:	lea    rbx,[rip+0x21746e]        # 22d1e0 <P+0x40>
   15d72:	xor    ebp,ebp
   15d74:	lea    r13,[rip+0x7c09]        # 1d984 <_IO_stdin_used+0x9c4>
   15d7b:	lea    r12,[rbx-0x40]
   15d7f:	jmp    15d98 <activate_early_eof+0x68>
   15d81:	nop    DWORD PTR [rax+0x0]
   15d88:	add    ebp,0x1
   15d8b:	add    rbx,0x380
   15d92:	cmp    DWORD PTR [r12],ebp
   15d96:	jl     15dd6 <activate_early_eof+0xa6>
   15d98:	test   BYTE PTR [rbx],0x1
   15d9b:	je     15d88 <activate_early_eof+0x58>
   15d9d:	mov    rax,QWORD PTR [rip+0x217404]        # 22d1a8 <P+0x8>
   15da4:	cmp    QWORD PTR [rbx+0x20],rax
   15da8:	jle    15d88 <activate_early_eof+0x58>
   15daa:	mov    ecx,DWORD PTR [rbx+0x4]
   15dad:	mov    rdi,QWORD PTR [rip+0x24f4a4]        # 265258 <warn>
   15db4:	xor    eax,eax
   15db6:	mov    rdx,r13
   15db9:	mov    esi,0x1
   15dbe:	add    ebp,0x1
   15dc1:	call   4560 <__fprintf_chk@plt>
   15dc6:	and    BYTE PTR [rbx],0xfe
   15dc9:	add    rbx,0x380
   15dd0:	cmp    DWORD PTR [r12],ebp
   15dd4:	jge    15d98 <activate_early_eof+0x68>
   15dd6:	add    rsp,0x8
   15dda:	pop    rbx
   15ddb:	pop    rbp
   15ddc:	pop    r12
   15dde:	pop    r13
   15de0:	ret    
   15de1:	nop    DWORD PTR [rax+rax*1+0x0]
   15de6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015df0 <process_record_tsc>:
   15df0:	mov    rax,QWORD PTR [rsi+0x8]
   15df4:	test   rax,rax
   15df7:	je     15e48 <process_record_tsc+0x58>
   15df9:	mov    rdx,QWORD PTR [rip+0x2173c0]        # 22d1c0 <P+0x20>
   15e00:	cmp    rax,rdx
   15e03:	jb     15e48 <process_record_tsc+0x58>
   15e05:	movzx  eax,BYTE PTR [rip+0x213295]        # 2290a1 <opt+0x1>
   15e0c:	push   rbx
   15e0d:	mov    rbx,rdi
   15e10:	and    eax,0x20
   15e13:	test   rdx,rdx
   15e16:	jne    15e50 <process_record_tsc+0x60>
   15e18:	test   al,al
   15e1a:	mov    QWORD PTR [rip+0x21739f],rdi        # 22d1c0 <P+0x20>
   15e21:	je     15e2a <process_record_tsc+0x3a>
   15e23:	mov    QWORD PTR [rip+0x24f3ce],rdi        # 2651f8 <P+0x38058>
   15e2a:	mov    QWORD PTR [rip+0x217397],rbx        # 22d1c8 <P+0x28>
   15e31:	mov    QWORD PTR [rip+0x217380],rbx        # 22d1b8 <P+0x18>
   15e38:	mov    QWORD PTR [rip+0x217391],rdx        # 22d1d0 <P+0x30>
   15e3f:	pop    rbx
   15e40:	ret    
   15e41:	nop    DWORD PTR [rax+0x0]
   15e48:	repz ret 
   15e4a:	nop    WORD PTR [rax+rax*1+0x0]
   15e50:	test   al,al
   15e52:	je     15ea8 <process_record_tsc+0xb8>
   15e54:	mov    r8,QWORD PTR [rip+0x24f39d]        # 2651f8 <P+0x38058>
   15e5b:	cmp    r8,rdi
   15e5e:	ja     15ec0 <process_record_tsc+0xd0>
   15e60:	mov    rax,rdi
   15e63:	sub    rax,r8
   15e66:	cmp    QWORD PTR [rip+0x21327b],rax        # 2290e8 <opt+0x48>
   15e6d:	jae    15ea8 <process_record_tsc+0xb8>
   15e6f:	nop
   15e70:	call   9120 <interval_callback>
   15e75:	mov    rax,QWORD PTR [rip+0x21326c]        # 2290e8 <opt+0x48>
   15e7c:	mov    rdx,QWORD PTR [rip+0x24f375]        # 2651f8 <P+0x38058>
   15e83:	mov    rcx,rbx
   15e86:	add    rdx,rax
   15e89:	sub    rcx,rdx
   15e8c:	mov    QWORD PTR [rip+0x24f365],rdx        # 2651f8 <P+0x38058>
   15e93:	cmp    rax,rcx
   15e96:	jb     15e70 <process_record_tsc+0x80>
   15e98:	mov    rdx,rbx
   15e9b:	sub    rdx,QWORD PTR [rip+0x21731e]        # 22d1c0 <P+0x20>
   15ea2:	jmp    15e2a <process_record_tsc+0x3a>
   15ea4:	nop    DWORD PTR [rax+0x0]
   15ea8:	mov    rax,rbx
   15eab:	sub    rax,rdx
   15eae:	mov    rdx,rax
   15eb1:	jmp    15e2a <process_record_tsc+0x3a>
   15eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15ec0:	mov    rcx,rdi
   15ec3:	mov    rdi,QWORD PTR [rip+0x24f38e]        # 265258 <warn>
   15eca:	lea    rdx,[rip+0xabc7]        # 20a98 <_IO_stdin_used+0x3ad8>
   15ed1:	xor    eax,eax
   15ed3:	mov    esi,0x1
   15ed8:	call   4560 <__fprintf_chk@plt>
   15edd:	cmp    DWORD PTR [rip+0x2131fc],0x4        # 2290e0 <opt+0x40>
   15ee4:	ja     15e98 <process_record_tsc+0xa8>
   15ee6:	mov    edi,0x1
   15eeb:	call   4540 <exit@plt>

0000000000015ef0 <find_toplevel_event>:
   15ef0:	movzx  r9d,WORD PTR [rdi+0x12]
   15ef5:	xor    ecx,ecx
   15ef7:	xor    edx,edx
   15ef9:	xor    eax,eax
   15efb:	and    r9w,0xfff
   15f01:	movzx  esi,r9w
   15f05:	nop    DWORD PTR [rax]
   15f08:	bt     rsi,rdx
   15f0c:	jae    15f13 <find_toplevel_event+0x23>
   15f0e:	add    ecx,0x1
   15f11:	mov    eax,edx
   15f13:	add    edx,0x1
   15f16:	cmp    edx,0x8
   15f19:	jne    15f08 <find_toplevel_event+0x18>
   15f1b:	cmp    ecx,0x1
   15f1e:	je     15f78 <find_toplevel_event+0x88>
   15f20:	sub    rsp,0x8
   15f24:	movzx  eax,WORD PTR [rdi+0x10]
   15f28:	lea    rdx,[rip+0xaba1]        # 20ad0 <_IO_stdin_used+0x3b10>
   15f2f:	and    r9d,0xfff
   15f36:	mov    esi,0x1
   15f3b:	and    eax,0xfff
   15f40:	push   rax
   15f41:	movzx  eax,BYTE PTR [rdi+0x11]
   15f45:	shr    al,0x4
   15f48:	movzx  eax,al
   15f4b:	push   rax
   15f4c:	mov    r8d,DWORD PTR [rdi+0x10]
   15f50:	xor    eax,eax
   15f52:	mov    rdi,QWORD PTR [rip+0x24f2ff]        # 265258 <warn>
   15f59:	call   4560 <__fprintf_chk@plt>
   15f5e:	cmp    DWORD PTR [rip+0x21317b],0x3        # 2290e0 <opt+0x40>
   15f65:	pop    rax
   15f66:	pop    rdx
   15f67:	jbe    15f7a <find_toplevel_event+0x8a>
   15f69:	mov    eax,0xffffffff
   15f6e:	add    rsp,0x8
   15f72:	ret    
   15f73:	nop    DWORD PTR [rax+rax*1+0x0]
   15f78:	repz ret 
   15f7a:	mov    edi,0x1
   15f7f:	call   4540 <exit@plt>
   15f84:	xchg   ax,ax
   15f86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015f90 <toplevel_assert_check>:
   15f90:	lea    rax,[rip+0x2130a9]        # 229040 <tl_assert_checks>
   15f97:	movsxd rdi,edi
   15f9a:	push   rbx
   15f9b:	mov    rbx,rsi
   15f9e:	mov    rdx,QWORD PTR [rax+rdi*8]
   15fa2:	mov    esi,DWORD PTR [rax+rdi*8+0x4]
   15fa6:	test   dl,0x1
   15fa9:	je     16030 <toplevel_assert_check+0xa0>
   15faf:	mov    rdi,QWORD PTR [rbx+0x1a8]
   15fb6:	test   rdi,rdi
   15fb9:	je     16040 <toplevel_assert_check+0xb0>
   15fbf:	and    edx,0x2
   15fc2:	je     15fd5 <toplevel_assert_check+0x45>
   15fc4:	mov    rax,QWORD PTR [rdi+0x8]
   15fc8:	cmp    DWORD PTR [rax+0x8],0x7fff
   15fcf:	je     16060 <toplevel_assert_check+0xd0>
   15fd5:	test   esi,esi
   15fd7:	je     16039 <toplevel_assert_check+0xa9>
   15fd9:	mov    edx,DWORD PTR [rdi+0x3bf0]
   15fdf:	mov    eax,0x1
   15fe4:	test   edx,edx
   15fe6:	je     1602a <toplevel_assert_check+0x9a>
   15fe8:	cmp    edx,esi
   15fea:	je     1602a <toplevel_assert_check+0x9a>
   15fec:	mov    rax,QWORD PTR [rdi+0x8]
   15ff0:	mov    r9d,DWORD PTR [rbx+0x4]
   15ff4:	mov    ecx,DWORD PTR [rax+0x8]
   15ff7:	push   rdx
   15ff8:	lea    rdx,[rip+0xab99]        # 20b98 <_IO_stdin_used+0x3bd8>
   15fff:	push   rsi
   16000:	mov    r8d,DWORD PTR [rdi]
   16003:	mov    esi,0x1
   16008:	mov    rdi,QWORD PTR [rip+0x24f249]        # 265258 <warn>
   1600f:	xor    eax,eax
   16011:	call   4560 <__fprintf_chk@plt>
   16016:	pop    rax
   16017:	pop    rdx
   16018:	mov    rdi,QWORD PTR [rip+0x24f239]        # 265258 <warn>
   1601f:	lea    rsi,[rbx+0x30]
   16023:	call   13380 <dump_generic>
   16028:	xor    eax,eax
   1602a:	pop    rbx
   1602b:	ret    
   1602c:	nop    DWORD PTR [rax+0x0]
   16030:	and    edx,0x2
   16033:	jne    1607f <toplevel_assert_check+0xef>
   16035:	test   esi,esi
   16037:	jne    1609e <toplevel_assert_check+0x10e>
   16039:	mov    eax,0x1
   1603e:	pop    rbx
   1603f:	ret    
   16040:	mov    rcx,QWORD PTR [rip+0x24f211]        # 265258 <warn>
   16047:	lea    rdi,[rip+0xaada]        # 20b28 <_IO_stdin_used+0x3b68>
   1604e:	mov    edx,0x2a
   16053:	mov    esi,0x1
   16058:	call   4550 <fwrite@plt>
   1605d:	jmp    16018 <toplevel_assert_check+0x88>
   1605f:	nop
   16060:	mov    rcx,QWORD PTR [rip+0x24f1f1]        # 265258 <warn>
   16067:	lea    rdi,[rip+0xaaea]        # 20b58 <_IO_stdin_used+0x3b98>
   1606e:	mov    edx,0x3b
   16073:	mov    esi,0x1
   16078:	call   4550 <fwrite@plt>
   1607d:	jmp    16018 <toplevel_assert_check+0x88>
   1607f:	lea    rcx,[rip+0xd1ba]        # 23240 <__PRETTY_FUNCTION__.8270>
   16086:	lea    rsi,[rip+0x6ffb]        # 1d088 <_IO_stdin_used+0xc8>
   1608d:	lea    rdi,[rip+0x7906]        # 1d99a <_IO_stdin_used+0x9da>
   16094:	mov    edx,0x24a1
   16099:	call   4400 <__assert_fail@plt>
   1609e:	lea    rcx,[rip+0xd19b]        # 23240 <__PRETTY_FUNCTION__.8270>
   160a5:	lea    rsi,[rip+0x6fdc]        # 1d088 <_IO_stdin_used+0xc8>
   160ac:	lea    rdi,[rip+0x78e7]        # 1d99a <_IO_stdin_used+0x9da>
   160b3:	mov    edx,0x24ac
   160b8:	call   4400 <__assert_fail@plt>
   160bd:	nop    DWORD PTR [rax]

00000000000160c0 <progress_child_exec>:
   160c0:	sub    rsp,0x8
   160c4:	mov    rdi,QWORD PTR [rip+0x216365]        # 22c430 <stdin@@GLIBC_2.2.5>
   160cb:	call   43b0 <fclose@plt>
   160d0:	mov    edi,DWORD PTR [rip+0x21308a]        # 229160 <G+0x40>
   160d6:	xor    esi,esi
   160d8:	call   43e0 <dup2@plt>
   160dd:	lea    rax,[rip+0x78f6]        # 1d9da <_IO_stdin_used+0xa1a>
   160e4:	push   0x0
   160e6:	lea    rsi,[rip+0x78e6]        # 1d9d3 <_IO_stdin_used+0xa13>
   160ed:	lea    r9,[rip+0x78b5]        # 1d9a9 <_IO_stdin_used+0x9e9>
   160f4:	lea    r8,[rip+0x78b8]        # 1d9b3 <_IO_stdin_used+0x9f3>
   160fb:	lea    rcx,[rip+0x78b9]        # 1d9bb <_IO_stdin_used+0x9fb>
   16102:	push   rax
   16103:	lea    rax,[rip+0x78dc]        # 1d9e6 <_IO_stdin_used+0xa26>
   1610a:	push   QWORD PTR [rip+0x213030]        # 229140 <G+0x20>
   16110:	lea    rdx,[rip+0x78b1]        # 1d9c8 <_IO_stdin_used+0xa08>
   16117:	mov    rdi,rsi
   1611a:	push   rax
   1611b:	xor    eax,eax
   1611d:	call   4570 <execlp@plt>
   16122:	add    rsp,0x28
   16126:	ret    
   16127:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016130 <progress_init>:
   16130:	lea    rdi,[rip+0x213029]        # 229160 <G+0x40>
   16137:	sub    rsp,0x8
   1613b:	call   4430 <pipe@plt>
   16140:	test   eax,eax
   16142:	js     16180 <progress_init+0x50>
   16144:	call   45a0 <fork@plt>
   16149:	test   eax,eax
   1614b:	je     1620c <progress_init+0xdc>
   16151:	js     16190 <progress_init+0x60>
   16153:	mov    edi,DWORD PTR [rip+0x21300b]        # 229164 <G+0x44>
   16159:	lea    rsi,[rip+0x7d6c]        # 1decc <_IO_stdin_used+0xf0c>
   16160:	call   44d0 <fdopen@plt>
   16165:	test   rax,rax
   16168:	mov    QWORD PTR [rip+0x212ff9],rax        # 229168 <G+0x48>
   1616f:	je     161d0 <progress_init+0xa0>
   16171:	add    rsp,0x8
   16175:	ret    
   16176:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16180:	lea    rdi,[rip+0x7866]        # 1d9ed <_IO_stdin_used+0xa2d>
   16187:	call   4530 <perror@plt>
   1618c:	jmp    16144 <progress_init+0x14>
   1618e:	xchg   ax,ax
   16190:	call   4350 <__errno_location@plt>
   16195:	mov    edi,DWORD PTR [rax]
   16197:	call   4580 <strerror@plt>
   1619c:	mov    rdi,QWORD PTR [rip+0x21629d]        # 22c440 <stderr@@GLIBC_2.2.5>
   161a3:	lea    rcx,[rip+0xd07e]        # 23228 <__func__.8299>
   161aa:	lea    rdx,[rip+0xaa77]        # 20c28 <_IO_stdin_used+0x3c68>
   161b1:	mov    r8,rax
   161b4:	mov    esi,0x1
   161b9:	xor    eax,eax
   161bb:	call   4560 <__fprintf_chk@plt>
   161c0:	and    BYTE PTR [rip+0x212edc],0xf7        # 2290a3 <opt+0x3>
   161c7:	jmp    16153 <progress_init+0x23>
   161c9:	nop    DWORD PTR [rax+0x0]
   161d0:	call   4350 <__errno_location@plt>
   161d5:	mov    edi,DWORD PTR [rax]
   161d7:	call   4580 <strerror@plt>
   161dc:	mov    rdi,QWORD PTR [rip+0x21625d]        # 22c440 <stderr@@GLIBC_2.2.5>
   161e3:	lea    rcx,[rip+0xd03e]        # 23228 <__func__.8299>
   161ea:	lea    rdx,[rip+0xaa67]        # 20c58 <_IO_stdin_used+0x3c98>
   161f1:	mov    r8,rax
   161f4:	mov    esi,0x1
   161f9:	xor    eax,eax
   161fb:	call   4560 <__fprintf_chk@plt>
   16200:	and    BYTE PTR [rip+0x212e9c],0xf7        # 2290a3 <opt+0x3>
   16207:	add    rsp,0x8
   1620b:	ret    
   1620c:	call   160c0 <progress_child_exec>
   16211:	call   4350 <__errno_location@plt>
   16216:	mov    edi,DWORD PTR [rax]
   16218:	call   4580 <strerror@plt>
   1621d:	mov    rdi,QWORD PTR [rip+0x21621c]        # 22c440 <stderr@@GLIBC_2.2.5>
   16224:	lea    rcx,[rip+0xcffd]        # 23228 <__func__.8299>
   1622b:	lea    rdx,[rip+0xa9c6]        # 20bf8 <_IO_stdin_used+0x3c38>
   16232:	mov    r8,rax
   16235:	mov    esi,0x1
   1623a:	xor    eax,eax
   1623c:	call   4560 <__fprintf_chk@plt>
   16241:	mov    edi,0x1
   16246:	and    BYTE PTR [rip+0x212e56],0xf7        # 2290a3 <opt+0x3>
   1624d:	call   4540 <exit@plt>
   16252:	nop    DWORD PTR [rax+0x0]
   16256:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016260 <progress_update>:
   16260:	lea    rax,[rdi+rdi*4]
   16264:	mov    rdi,QWORD PTR [rip+0x212efd]        # 229168 <G+0x48>
   1626b:	push   rbx
   1626c:	mov    esi,0x1
   16271:	lea    rax,[rax+rax*4]
   16275:	shl    rax,0x2
   16279:	cqo    
   1627b:	idiv   QWORD PTR [rip+0x212ece]        # 229150 <G+0x30>
   16282:	lea    rdx,[rip+0x722e]        # 1d4b7 <_IO_stdin_used+0x4f7>
   16289:	mov    rcx,rax
   1628c:	mov    rbx,rax
   1628f:	xor    eax,eax
   16291:	call   4560 <__fprintf_chk@plt>
   16296:	mov    rdi,QWORD PTR [rip+0x212ecb]        # 229168 <G+0x48>
   1629d:	call   44a0 <fflush@plt>
   162a2:	lea    rcx,[rbx+0x1]
   162a6:	movabs rdx,0xa3d70a3d70a3d70b
   162b0:	imul   rcx,QWORD PTR [rip+0x212e98]        # 229150 <G+0x30>
   162b8:	pop    rbx
   162b9:	mov    rax,rcx
   162bc:	imul   rdx
   162bf:	add    rdx,rcx
   162c2:	sar    rcx,0x3f
   162c6:	sar    rdx,0x6
   162ca:	sub    rdx,rcx
   162cd:	mov    QWORD PTR [rip+0x212e84],rdx        # 229158 <G+0x38>
   162d4:	ret    
   162d5:	nop
   162d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000162e0 <progress_finish>:
   162e0:	push   rbx
   162e1:	lea    rdi,[rip+0x770a]        # 1d9f2 <_IO_stdin_used+0xa32>
   162e8:	mov    edx,0x4
   162ed:	mov    esi,0x1
   162f2:	sub    rsp,0x90
   162f9:	mov    rcx,QWORD PTR [rip+0x212e68]        # 229168 <G+0x48>
   16300:	mov    rax,QWORD PTR fs:0x28
   16309:	mov    QWORD PTR [rsp+0x88],rax
   16311:	xor    eax,eax
   16313:	call   4550 <fwrite@plt>
   16318:	mov    rdi,QWORD PTR [rip+0x212e49]        # 229168 <G+0x48>
   1631f:	call   44a0 <fflush@plt>
   16324:	mov    rdi,QWORD PTR [rip+0x212e3d]        # 229168 <G+0x48>
   1632b:	call   43b0 <fclose@plt>
   16330:	xor    edi,edi
   16332:	call   4590 <wait@plt>
   16337:	call   45a0 <fork@plt>
   1633c:	test   eax,eax
   1633e:	jne    1638d <progress_finish+0xad>
   16340:	mov    r9,QWORD PTR [rip+0x212df9]        # 229140 <G+0x20>
   16347:	mov    rbx,rsp
   1634a:	lea    r8,[rip+0x76a6]        # 1d9f7 <_IO_stdin_used+0xa37>
   16351:	mov    ecx,0x80
   16356:	mov    edx,0x1
   1635b:	mov    esi,0x80
   16360:	mov    rdi,rbx
   16363:	call   4320 <__snprintf_chk@plt>
   16368:	lea    rsi,[rip+0x7664]        # 1d9d3 <_IO_stdin_used+0xa13>
   1636f:	lea    rcx,[rip+0x7670]        # 1d9e6 <_IO_stdin_used+0xa26>
   16376:	lea    rdx,[rip+0x7690]        # 1da0d <_IO_stdin_used+0xa4d>
   1637d:	xor    r9d,r9d
   16380:	mov    r8,rbx
   16383:	xor    eax,eax
   16385:	mov    rdi,rsi
   16388:	call   4570 <execlp@plt>
   1638d:	mov    rax,QWORD PTR [rsp+0x88]
   16395:	xor    rax,QWORD PTR fs:0x28
   1639e:	jne    163a9 <progress_finish+0xc9>
   163a0:	add    rsp,0x90
   163a7:	pop    rbx
   163a8:	ret    
   163a9:	call   43c0 <__stack_chk_fail@plt>
   163ae:	xchg   ax,ax

00000000000163b0 <__read_record>:
   163b0:	push   r12
   163b2:	mov    rcx,rsi
   163b5:	push   rbp
   163b6:	mov    r12,rsi
   163b9:	mov    rbp,rdi
   163bc:	mov    rsi,rdi
   163bf:	mov    rdi,QWORD PTR [rip+0x212d62]        # 229128 <G+0x8>
   163c6:	push   rbx
   163c7:	mov    edx,0x28
   163cc:	call   1cd30 <mread64>
   163d1:	test   rax,rax
   163d4:	js     16410 <__read_record+0x60>
   163d6:	mov    rbx,rax
   163d9:	je     16408 <__read_record+0x58>
   163db:	cmp    rax,0x3
   163df:	jle    16480 <__read_record+0xd0>
   163e5:	movsx  rax,BYTE PTR [rbp+0x3]
   163ea:	movzx  edx,BYTE PTR [rbp+0x3]
   163ee:	sar    rax,0x3f
   163f2:	shr    dl,0x4
   163f5:	and    eax,0x8
   163f8:	and    edx,0x7
   163fb:	lea    r9,[rax+rdx*4+0x4]
   16400:	cmp    rbx,r9
   16403:	jl     16448 <__read_record+0x98>
   16405:	mov    rbx,r9
   16408:	mov    rax,rbx
   1640b:	pop    rbx
   1640c:	pop    rbp
   1640d:	pop    r12
   1640f:	ret    
   16410:	lea    rdi,[rip+0x86f2]        # 1eb09 <_IO_stdin_used+0x1b49>
   16417:	xor    ebx,ebx
   16419:	call   4530 <perror@plt>
   1641e:	mov    rdi,QWORD PTR [rip+0x21601b]        # 22c440 <stderr@@GLIBC_2.2.5>
   16425:	lea    rdx,[rip+0x75e8]        # 1da14 <_IO_stdin_used+0xa54>
   1642c:	mov    rcx,r12
   1642f:	mov    esi,0x1
   16434:	xor    eax,eax
   16436:	call   4560 <__fprintf_chk@plt>
   1643b:	mov    rax,rbx
   1643e:	pop    rbx
   1643f:	pop    rbp
   16440:	pop    r12
   16442:	ret    
   16443:	nop    DWORD PTR [rax+rax*1+0x0]
   16448:	mov    rdi,QWORD PTR [rip+0x215ff1]        # 22c440 <stderr@@GLIBC_2.2.5>
   1644f:	lea    rcx,[rip+0xcdc2]        # 23218 <__func__.8315>
   16456:	lea    rdx,[rip+0xa833]        # 20c90 <_IO_stdin_used+0x3cd0>
   1645d:	mov    r8,rbx
   16460:	mov    esi,0x1
   16465:	xor    ebx,ebx
   16467:	xor    eax,eax
   16469:	call   4560 <__fprintf_chk@plt>
   1646e:	mov    rax,rbx
   16471:	pop    rbx
   16472:	pop    rbp
   16473:	pop    r12
   16475:	ret    
   16476:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16480:	mov    rdi,QWORD PTR [rip+0x215fb9]        # 22c440 <stderr@@GLIBC_2.2.5>
   16487:	lea    rcx,[rip+0xcd8a]        # 23218 <__func__.8315>
   1648e:	lea    rdx,[rip+0x758c]        # 1da21 <_IO_stdin_used+0xa61>
   16495:	mov    r8,rax
   16498:	mov    esi,0x1
   1649d:	xor    eax,eax
   1649f:	call   4560 <__fprintf_chk@plt>
   164a4:	cmp    DWORD PTR [rip+0x212c35],0x7        # 2290e0 <opt+0x40>
   164ab:	ja     163e5 <__read_record+0x35>
   164b1:	mov    edi,0x1
   164b6:	call   4540 <exit@plt>
   164bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000164c0 <__fill_in_record_info>:
   164c0:	push   rbp
   164c1:	push   rbx
   164c2:	mov    rbx,rdi
   164c5:	sub    rsp,0x118
   164cc:	mov    rax,QWORD PTR fs:0x28
   164d5:	mov    QWORD PTR [rsp+0x108],rax
   164dd:	xor    eax,eax
   164df:	mov    eax,DWORD PTR [rdi+0x168]
   164e5:	and    eax,0xfffffff
   164ea:	mov    DWORD PTR [rdi+0x40],eax
   164ed:	movzx  eax,BYTE PTR [rdi+0x16b]
   164f4:	shr    al,0x4
   164f7:	and    eax,0x7
   164fa:	cmp    BYTE PTR [rdi+0x16b],0x0
   16501:	mov    DWORD PTR [rdi+0x44],eax
   16504:	js     16590 <__fill_in_record_info+0xd0>
   1650a:	mov    rdx,QWORD PTR [rdi+0x10]
   1650e:	lea    rax,[rdi+0x16c]
   16515:	mov    QWORD PTR [rdi+0x50],rax
   16519:	mov    QWORD PTR [rdi+0x38],rdx
   1651d:	test   BYTE PTR [rip+0x212b7e],0x1        # 2290a2 <opt+0x2>
   16524:	mov    r9d,DWORD PTR [rbx+0x4]
   16528:	je     16566 <__fill_in_record_info+0xa6>
   1652a:	mov    rbp,rsp
   1652d:	lea    r8,[rip+0x7509]        # 1da3d <_IO_stdin_used+0xa7d>
   16534:	sub    rsp,0x8
   16538:	push   QWORD PTR [rbx+0x20]
   1653b:	mov    edx,0x1
   16540:	mov    ecx,0x100
   16545:	mov    esi,0x100
   1654a:	mov    rdi,rbp
   1654d:	xor    eax,eax
   1654f:	call   4320 <__snprintf_chk@plt>
   16554:	lea    rsi,[rbx+0x30]
   16558:	mov    rdi,rbp
   1655b:	call   149a0 <dump_raw>
   16560:	pop    rax
   16561:	pop    rdx
   16562:	mov    r9d,DWORD PTR [rbx+0x4]
   16566:	mov    rax,QWORD PTR [rsp+0x108]
   1656e:	xor    rax,QWORD PTR fs:0x28
   16577:	mov    DWORD PTR [rbx+0x30],r9d
   1657b:	jne    165f9 <__fill_in_record_info+0x139>
   1657d:	add    rsp,0x118
   16584:	pop    rbx
   16585:	pop    rbp
   16586:	ret    
   16587:	nop    WORD PTR [rax+rax*1+0x0]
   16590:	mov    rdx,QWORD PTR [rdi+0x198]
   16597:	mov    rax,QWORD PTR [rdi+0x16c]
   1659e:	lea    rcx,[rdi+0x174]
   165a5:	mov    QWORD PTR [rdi+0x50],rcx
   165a9:	add    rax,rdx
   165ac:	cmp    QWORD PTR [rdi+0x8],0x0
   165b1:	mov    QWORD PTR [rdi+0x38],rax
   165b5:	je     165d8 <__fill_in_record_info+0x118>
   165b7:	movabs rcx,0x40001f001
   165c1:	cmp    QWORD PTR [rbx+0x40],rcx
   165c5:	je     165ec <__fill_in_record_info+0x12c>
   165c7:	mov    QWORD PTR [rbx+0x18],rax
   165cb:	mov    QWORD PTR [rbx+0x10],rax
   165cf:	jmp    1651d <__fill_in_record_info+0x5d>
   165d4:	nop    DWORD PTR [rax+0x0]
   165d8:	mov    QWORD PTR [rdi+0x8],rax
   165dc:	movabs rcx,0x40001f001
   165e6:	cmp    QWORD PTR [rbx+0x40],rcx
   165ea:	jne    165c7 <__fill_in_record_info+0x107>
   165ec:	add    rdx,QWORD PTR [rbx+0x17c]
   165f3:	mov    QWORD PTR [rbx+0x18],rdx
   165f7:	jmp    165cb <__fill_in_record_info+0x10b>
   165f9:	call   43c0 <__stack_chk_fail@plt>
   165fe:	xchg   ax,ax

0000000000016600 <pcpu_string_draw>:
   16600:	movsxd rax,DWORD PTR [rdi+0x4]
   16604:	lea    rdx,[rip+0x216675]        # 22cc80 <__pcpu_string>
   1660b:	add    rax,rdx
   1660e:	test   BYTE PTR [rdi+0x1b0],0x1
   16615:	jne    16640 <pcpu_string_draw+0x40>
   16617:	mov    rdx,QWORD PTR [rdi+0x1a8]
   1661e:	test   rdx,rdx
   16621:	je     16648 <pcpu_string_draw+0x48>
   16623:	mov    rdx,QWORD PTR [rdx+0x8]
   16627:	mov    edx,DWORD PTR [rdx+0x8]
   1662a:	cmp    edx,0x8000
   16630:	je     16668 <pcpu_string_draw+0x68>
   16632:	cmp    edx,0x7fff
   16638:	je     16650 <pcpu_string_draw+0x50>
   1663a:	mov    BYTE PTR [rax],0x7c
   1663d:	ret    
   1663e:	xchg   ax,ax
   16640:	mov    BYTE PTR [rax],0x6c
   16643:	ret    
   16644:	nop    DWORD PTR [rax+0x0]
   16648:	mov    BYTE PTR [rax],0x20
   1664b:	ret    
   1664c:	nop    DWORD PTR [rax+0x0]
   16650:	test   BYTE PTR [rip+0x212a4b],0x10        # 2290a2 <opt+0x2>
   16657:	je     16670 <pcpu_string_draw+0x70>
   16659:	mov    edx,DWORD PTR [rdi+0x194]
   1665f:	add    edx,0x30
   16662:	mov    BYTE PTR [rax],dl
   16664:	ret    
   16665:	nop    DWORD PTR [rax]
   16668:	mov    BYTE PTR [rax],0x2e
   1666b:	ret    
   1666c:	nop    DWORD PTR [rax+0x0]
   16670:	mov    BYTE PTR [rax],0x2d
   16673:	ret    
   16674:	xchg   ax,ax
   16676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016680 <vcpu_prev_update>:
   16680:	push   r15
   16682:	push   r14
   16684:	push   r13
   16686:	push   r12
   16688:	push   rbp
   16689:	push   rbx
   1668a:	mov    rbp,rdx
   1668d:	sub    rsp,0x18
   16691:	movsxd rdx,DWORD PTR [rsi]
   16694:	mov    rax,QWORD PTR [rsi+0x8]
   16698:	cmp    QWORD PTR [rax+rdx*8+0x10],rsi
   1669d:	jne    16d31 <vcpu_prev_update+0x6b1>
   166a3:	mov    rax,QWORD PTR [rsi+0x50]
   166a7:	mov    r13,rdi
   166aa:	mov    rbx,rsi
   166ad:	mov    r12d,ecx
   166b0:	cmp    rax,rdi
   166b3:	jne    16880 <vcpu_prev_update+0x200>
   166b9:	mov    rax,QWORD PTR [rdi+0x1a8]
   166c0:	test   rax,rax
   166c3:	je     168e8 <vcpu_prev_update+0x268>
   166c9:	cmp    rbx,rax
   166cc:	jne    166f0 <vcpu_prev_update+0x70>
   166ce:	mov    r8d,DWORD PTR [rbx+0x18]
   166d2:	test   r8d,r8d
   166d5:	je     1672f <vcpu_prev_update+0xaf>
   166d7:	mov    rax,QWORD PTR [rbx+0x8]
   166db:	mov    r8d,DWORD PTR [rbx]
   166de:	lea    rdx,[rip+0xa673]        # 20d58 <_IO_stdin_used+0x3d98>
   166e5:	mov    ecx,DWORD PTR [rax+0x8]
   166e8:	jmp    1688e <vcpu_prev_update+0x20e>
   166ed:	nop    DWORD PTR [rax]
   166f0:	mov    rdx,QWORD PTR [rbx+0x8]
   166f4:	mov    rdi,QWORD PTR [rip+0x24eb5d]        # 265258 <warn>
   166fb:	mov    esi,0x1
   16700:	mov    ecx,DWORD PTR [rdx+0x8]
   16703:	mov    edx,DWORD PTR [rax]
   16705:	push   rdx
   16706:	mov    rax,QWORD PTR [rax+0x8]
   1670a:	lea    rdx,[rip+0xa607]        # 20d18 <_IO_stdin_used+0x3d58>
   16711:	mov    eax,DWORD PTR [rax+0x8]
   16714:	push   rax
   16715:	mov    r9d,DWORD PTR [r13+0x4]
   16719:	xor    eax,eax
   1671b:	mov    r8d,DWORD PTR [rbx]
   1671e:	call   4560 <__fprintf_chk@plt>
   16723:	mov    QWORD PTR [rbx+0x20],0x0
   1672b:	pop    r9
   1672d:	pop    r10
   1672f:	mov    rdi,r13
   16732:	mov    rsi,rbp
   16735:	call   11e30 <pcpu_runstate_update>
   1673a:	mov    QWORD PTR [r13+0x1a8],0x0
   16745:	mov    rdi,r13
   16748:	call   16600 <pcpu_string_draw>
   1674d:	test   BYTE PTR [rip+0x21294c],0x40        # 2290a0 <opt>
   16754:	mov    r13,QWORD PTR [rbx+0x8]
   16758:	je     16816 <vcpu_prev_update+0x196>
   1675e:	mov    rax,QWORD PTR [rip+0x216a5b]        # 22d1c0 <P+0x20>
   16765:	cmp    rbp,rax
   16768:	jbe    168d8 <vcpu_prev_update+0x258>
   1676e:	mov    r14,rbp
   16771:	xor    edx,edx
   16773:	movabs rcx,0x44b82fa09b5a53
   1677d:	sub    r14,rax
   16780:	shl    r14,0xa
   16784:	mov    rax,r14
   16787:	div    QWORD PTR [rip+0x21291a]        # 2290a8 <opt+0x8>
   1678e:	mov    rdx,rax
   16791:	mov    r14,rax
   16794:	shr    rdx,0x9
   16798:	mov    rax,rdx
   1679b:	mul    rcx
   1679e:	shr    rdx,0xb
   167a2:	mov    r15d,edx
   167a5:	imul   edx,edx,0x3b9aca00
   167ab:	sub    r14d,edx
   167ae:	movsxd rax,DWORD PTR [rbx+0x18]
   167b2:	lea    r10,[rip+0x2128c7]        # 229080 <runstate_graph>
   167b9:	sub    rsp,0x8
   167bd:	mov    edx,DWORD PTR [r13+0x8]
   167c1:	lea    rsi,[rip+0x6da0]        # 1d568 <_IO_stdin_used+0x5a8>
   167c8:	mov    r9d,r14d
   167cb:	mov    QWORD PTR [rsp+0x10],r10
   167d0:	mov    r8d,r15d
   167d3:	mov    edi,0x1
   167d8:	mov    eax,DWORD PTR [r10+rax*4]
   167dc:	push   rax
   167dd:	mov    ecx,DWORD PTR [rbx]
   167df:	xor    eax,eax
   167e1:	call   44f0 <__printf_chk@plt>
   167e6:	mov    r10,QWORD PTR [rsp+0x18]
   167eb:	movsxd rax,r12d
   167ee:	mov    edx,DWORD PTR [r13+0x8]
   167f2:	lea    rsi,[rip+0x6d6f]        # 1d568 <_IO_stdin_used+0x5a8>
   167f9:	mov    edi,0x1
   167fe:	mov    r9d,r14d
   16801:	mov    r8d,r15d
   16804:	mov    eax,DWORD PTR [r10+rax*4]
   16808:	mov    DWORD PTR [rsp],eax
   1680b:	mov    ecx,DWORD PTR [rbx]
   1680d:	xor    eax,eax
   1680f:	call   44f0 <__printf_chk@plt>
   16814:	pop    rsi
   16815:	pop    rdi
   16816:	mov    rax,QWORD PTR [rbx+0x20]
   1681a:	test   rax,rax
   1681d:	je     16828 <vcpu_prev_update+0x1a8>
   1681f:	cmp    rbp,rax
   16822:	ja     16a20 <vcpu_prev_update+0x3a0>
   16828:	cmp    r12d,0x1
   1682c:	je     168b0 <vcpu_prev_update+0x230>
   16832:	mov    DWORD PTR [rbx+0x1c],0x0
   16839:	mov    DWORD PTR [rbx+0x18],r12d
   1683d:	mov    QWORD PTR [rbx+0x20],rbp
   16841:	mov    rax,QWORD PTR [r13+0x818]
   16848:	cmp    rbp,rax
   1684b:	jbe    16856 <vcpu_prev_update+0x1d6>
   1684d:	test   rax,rax
   16850:	jne    16930 <vcpu_prev_update+0x2b0>
   16856:	mov    rdi,r13
   16859:	call   10420 <domain_runstate>
   1685e:	mov    QWORD PTR [r13+0x818],rbp
   16865:	mov    DWORD PTR [r13+0x814],eax
   1686c:	add    rsp,0x18
   16870:	pop    rbx
   16871:	pop    rbp
   16872:	pop    r12
   16874:	pop    r13
   16876:	pop    r14
   16878:	pop    r15
   1687a:	ret    
   1687b:	nop    DWORD PTR [rax+rax*1+0x0]
   16880:	mov    ecx,DWORD PTR [rdi+0x4]
   16883:	mov    r8d,DWORD PTR [rax+0x4]
   16887:	lea    rdx,[rip+0xa452]        # 20ce0 <_IO_stdin_used+0x3d20>
   1688e:	mov    rdi,QWORD PTR [rip+0x24e9c3]        # 265258 <warn>
   16895:	mov    esi,0x1
   1689a:	xor    eax,eax
   1689c:	call   4560 <__fprintf_chk@plt>
   168a1:	mov    QWORD PTR [rbx+0x20],0x0
   168a9:	jmp    1672f <vcpu_prev_update+0xaf>
   168ae:	xchg   ax,ax
   168b0:	mov    eax,DWORD PTR [rbx+0x18]
   168b3:	test   eax,eax
   168b5:	je     16bb8 <vcpu_prev_update+0x538>
   168bb:	js     16920 <vcpu_prev_update+0x2a0>
   168bd:	sub    eax,0x2
   168c0:	cmp    eax,0x1
   168c3:	ja     16920 <vcpu_prev_update+0x2a0>
   168c5:	mov    DWORD PTR [rbx+0x1c],0x1
   168cc:	jmp    16839 <vcpu_prev_update+0x1b9>
   168d1:	nop    DWORD PTR [rax+0x0]
   168d8:	xor    r14d,r14d
   168db:	xor    r15d,r15d
   168de:	jmp    167ae <vcpu_prev_update+0x12e>
   168e3:	nop    DWORD PTR [rax+rax*1+0x0]
   168e8:	mov    rdi,QWORD PTR [rip+0x24e969]        # 265258 <warn>
   168ef:	lea    rcx,[rip+0xcaca]        # 233c0 <__func__.7410>
   168f6:	lea    rdx,[rip+0x7151]        # 1da4e <_IO_stdin_used+0xa8e>
   168fd:	mov    esi,0x1
   16902:	call   4560 <__fprintf_chk@plt>
   16907:	cmp    DWORD PTR [rip+0x2127d2],0x6        # 2290e0 <opt+0x40>
   1690e:	jbe    16d27 <vcpu_prev_update+0x6a7>
   16914:	mov    rax,QWORD PTR [r13+0x1a8]
   1691b:	jmp    166c9 <vcpu_prev_update+0x49>
   16920:	mov    DWORD PTR [rbx+0x1c],0x3
   16927:	jmp    16839 <vcpu_prev_update+0x1b9>
   1692c:	nop    DWORD PTR [rax+0x0]
   16930:	movsxd rdx,DWORD PTR [r13+0x814]
   16937:	mov    r12,rbp
   1693a:	sub    r12,rax
   1693d:	lea    rax,[rdx*8+0x0]
   16945:	sub    rax,rdx
   16948:	lea    rbx,[r13+rax*8+0x858]
   16950:	add    DWORD PTR [rbx],0x1
   16953:	movsxd rcx,DWORD PTR [rbx+0x4]
   16957:	mov    edx,DWORD PTR [rip+0x21277b]        # 2290d8 <opt+0x38>
   1695d:	test   edx,edx
   1695f:	mov    eax,ecx
   16961:	je     16a00 <vcpu_prev_update+0x380>
   16967:	mov    eax,DWORD PTR [rbx+0x8]
   1696a:	cmp    eax,ecx
   1696c:	jg     16c73 <vcpu_prev_update+0x5f3>
   16972:	test   ecx,ecx
   16974:	mov    r14d,DWORD PTR [rip+0x212761]        # 2290dc <opt+0x3c>
   1697b:	jne    16cd2 <vcpu_prev_update+0x652>
   16981:	add    eax,eax
   16983:	cmovne edx,eax
   16986:	test   r14d,r14d
   16989:	je     16d0f <vcpu_prev_update+0x68f>
   1698f:	cmp    edx,r14d
   16992:	jle    16d0f <vcpu_prev_update+0x68f>
   16998:	mov    rdi,QWORD PTR [rbx+0x18]
   1699c:	movsxd rsi,r14d
   1699f:	shl    rsi,0x3
   169a3:	call   44c0 <realloc@plt>
   169a8:	test   rax,rax
   169ab:	je     16cfd <vcpu_prev_update+0x67d>
   169b1:	mov    QWORD PTR [rbx+0x18],rax
   169b5:	mov    DWORD PTR [rbx+0x8],r14d
   169b9:	movsxd rcx,DWORD PTR [rbx+0x4]
   169bd:	cmp    ecx,r14d
   169c0:	jl     16c73 <vcpu_prev_update+0x5f3>
   169c6:	mov    eax,ecx
   169c8:	cdq    
   169c9:	idiv   r14d
   169cc:	lea    esi,[rax+0x1]
   169cf:	movsxd rdi,edx
   169d2:	mov    edx,0x55555556
   169d7:	mov    eax,esi
   169d9:	imul   edx
   169db:	mov    eax,esi
   169dd:	sar    eax,0x1f
   169e0:	sub    eax,edx
   169e2:	add    eax,edi
   169e4:	cdq    
   169e5:	idiv   esi
   169e7:	mov    eax,ecx
   169e9:	test   edx,edx
   169eb:	jne    16a00 <vcpu_prev_update+0x380>
   169ed:	mov    rax,QWORD PTR [rbx+0x18]
   169f1:	mov    QWORD PTR [rax+rdi*8],r12
   169f5:	mov    eax,DWORD PTR [rbx+0x4]
   169f8:	nop    DWORD PTR [rax+rax*1+0x0]
   16a00:	add    eax,0x1
   16a03:	add    QWORD PTR [rbx+0x10],r12
   16a07:	add    DWORD PTR [rbx+0x20],0x1
   16a0b:	mov    DWORD PTR [rbx+0x4],eax
   16a0e:	add    QWORD PTR [rbx+0x28],r12
   16a12:	jmp    16856 <vcpu_prev_update+0x1d6>
   16a17:	nop    WORD PTR [rax+rax*1+0x0]
   16a20:	movsxd rdx,DWORD PTR [rbx+0x18]
   16a24:	mov    r15,rbp
   16a27:	sub    r15,rax
   16a2a:	lea    rax,[rdx*8+0x0]
   16a32:	sub    rax,rdx
   16a35:	lea    r14,[rbx+rax*8+0x150]
   16a3d:	add    DWORD PTR [r14],0x1
   16a41:	movsxd rcx,DWORD PTR [r14+0x4]
   16a45:	mov    edx,DWORD PTR [rip+0x21268d]        # 2290d8 <opt+0x38>
   16a4b:	test   edx,edx
   16a4d:	mov    eax,ecx
   16a4f:	je     16b00 <vcpu_prev_update+0x480>
   16a55:	mov    eax,DWORD PTR [r14+0x8]
   16a59:	cmp    eax,ecx
   16a5b:	jg     16c83 <vcpu_prev_update+0x603>
   16a61:	test   ecx,ecx
   16a63:	mov    r8d,DWORD PTR [rip+0x212672]        # 2290dc <opt+0x3c>
   16a6a:	je     16a7a <vcpu_prev_update+0x3fa>
   16a6c:	cmp    eax,r8d
   16a6f:	jl     16a7a <vcpu_prev_update+0x3fa>
   16a71:	test   r8d,r8d
   16a74:	jne    16d1f <vcpu_prev_update+0x69f>
   16a7a:	add    eax,eax
   16a7c:	cmovne edx,eax
   16a7f:	test   r8d,r8d
   16a82:	je     16d17 <vcpu_prev_update+0x697>
   16a88:	cmp    edx,r8d
   16a8b:	jle    16d17 <vcpu_prev_update+0x697>
   16a91:	mov    rdi,QWORD PTR [r14+0x18]
   16a95:	movsxd rsi,r8d
   16a98:	mov    DWORD PTR [rsp+0x8],r8d
   16a9d:	shl    rsi,0x3
   16aa1:	call   44c0 <realloc@plt>
   16aa6:	test   rax,rax
   16aa9:	mov    r8d,DWORD PTR [rsp+0x8]
   16aae:	je     16d06 <vcpu_prev_update+0x686>
   16ab4:	mov    QWORD PTR [r14+0x18],rax
   16ab8:	mov    DWORD PTR [r14+0x8],r8d
   16abc:	movsxd rcx,DWORD PTR [r14+0x4]
   16ac0:	cmp    ecx,r8d
   16ac3:	jl     16c83 <vcpu_prev_update+0x603>
   16ac9:	mov    eax,ecx
   16acb:	cdq    
   16acc:	idiv   r8d
   16acf:	lea    edi,[rax+0x1]
   16ad2:	movsxd rsi,edx
   16ad5:	mov    edx,0x55555556
   16ada:	mov    eax,edi
   16adc:	imul   edx
   16ade:	mov    eax,edi
   16ae0:	sar    eax,0x1f
   16ae3:	sub    eax,edx
   16ae5:	add    eax,esi
   16ae7:	cdq    
   16ae8:	idiv   edi
   16aea:	mov    eax,ecx
   16aec:	test   edx,edx
   16aee:	jne    16b00 <vcpu_prev_update+0x480>
   16af0:	mov    rax,QWORD PTR [r14+0x18]
   16af4:	mov    QWORD PTR [rax+rsi*8],r15
   16af8:	mov    eax,DWORD PTR [r14+0x4]
   16afc:	nop    DWORD PTR [rax+0x0]
   16b00:	add    eax,0x1
   16b03:	add    QWORD PTR [r14+0x10],r15
   16b07:	add    DWORD PTR [r14+0x20],0x1
   16b0c:	mov    DWORD PTR [r14+0x4],eax
   16b10:	add    QWORD PTR [r14+0x28],r15
   16b14:	cmp    BYTE PTR [rip+0x212585],0x0        # 2290a0 <opt>
   16b1b:	js     16bc4 <vcpu_prev_update+0x544>
   16b21:	mov    eax,DWORD PTR [rbx+0x18]
   16b24:	test   eax,eax
   16b26:	jne    16b46 <vcpu_prev_update+0x4c6>
   16b28:	mov    rsi,rbp
   16b2b:	sub    rsi,QWORD PTR [rbx+0x20]
   16b2f:	mov    rax,QWORD PTR [rbx+0x8]
   16b33:	add    DWORD PTR [rax+0x820],0x1
   16b3a:	test   rsi,rsi
   16b3d:	jne    16cec <vcpu_prev_update+0x66c>
   16b43:	mov    eax,DWORD PTR [rbx+0x18]
   16b46:	cmp    eax,0x1
   16b49:	je     16c3f <vcpu_prev_update+0x5bf>
   16b4f:	mov    rax,QWORD PTR [rbx+0x8]
   16b53:	mov    eax,DWORD PTR [rax+0x8]
   16b56:	test   eax,eax
   16b58:	jne    16828 <vcpu_prev_update+0x1a8>
   16b5e:	lea    rax,[rip+0x21667b]        # 22d1e0 <P+0x40>
   16b65:	lea    rsi,[rax+0x38000]
   16b6c:	nop    DWORD PTR [rax+0x0]
   16b70:	test   BYTE PTR [rax],0x1
   16b73:	je     16ba5 <vcpu_prev_update+0x525>
   16b75:	mov    rdx,QWORD PTR [rax+0x1c0]
   16b7c:	cmp    QWORD PTR [rbx+0x20],rdx
   16b80:	mov    rdi,rbp
   16b83:	cmovae rdx,QWORD PTR [rbx+0x20]
   16b88:	movsxd rcx,DWORD PTR [rbx+0x18]
   16b8c:	sub    rdi,rdx
   16b8f:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   16b97:	mov    DWORD PTR [rax+0x208],r12d
   16b9e:	mov    QWORD PTR [rax+0x1c8],rbp
   16ba5:	add    rax,0x380
   16bab:	cmp    rsi,rax
   16bae:	jne    16b70 <vcpu_prev_update+0x4f0>
   16bb0:	jmp    16828 <vcpu_prev_update+0x1a8>
   16bb5:	nop    DWORD PTR [rax]
   16bb8:	mov    DWORD PTR [rbx+0x1c],0x2
   16bbf:	jmp    16839 <vcpu_prev_update+0x1b9>
   16bc4:	mov    rsi,QWORD PTR [rip+0x2165f5]        # 22d1c0 <P+0x20>
   16bcb:	mov    rcx,QWORD PTR [rip+0x2124d6]        # 2290a8 <opt+0x8>
   16bd2:	cmp    rbp,rsi
   16bd5:	ja     16c94 <vcpu_prev_update+0x614>
   16bdb:	xor    r9d,r9d
   16bde:	xor    r8d,r8d
   16be1:	mov    rax,rbp
   16be4:	sub    rax,QWORD PTR [rbx+0x20]
   16be8:	xor    edx,edx
   16bea:	mov    edi,0x1
   16bef:	sub    rax,rsi
   16bf2:	shl    rax,0xa
   16bf6:	div    rcx
   16bf9:	movabs rcx,0x44b82fa09b5a53
   16c03:	mov    rdx,rax
   16c06:	mov    rsi,rax
   16c09:	shr    rdx,0x9
   16c0d:	mov    rax,rdx
   16c10:	mul    rcx
   16c13:	mov    rcx,rdx
   16c16:	mov    edx,DWORD PTR [r13+0x8]
   16c1a:	shr    rcx,0xb
   16c1e:	imul   eax,ecx,0x3b9aca00
   16c24:	sub    esi,eax
   16c26:	xor    eax,eax
   16c28:	push   rsi
   16c29:	push   rcx
   16c2a:	lea    rsi,[rip+0x6949]        # 1d57a <_IO_stdin_used+0x5ba>
   16c31:	mov    ecx,DWORD PTR [rbx]
   16c33:	call   44f0 <__printf_chk@plt>
   16c38:	pop    rdx
   16c39:	pop    rcx
   16c3a:	jmp    16b21 <vcpu_prev_update+0x4a1>
   16c3f:	movsxd rdx,DWORD PTR [rbx+0x1c]
   16c43:	mov    rsi,rbp
   16c46:	sub    rsi,QWORD PTR [rbx+0x20]
   16c4a:	lea    rax,[rdx*8+0x0]
   16c52:	sub    rax,rdx
   16c55:	lea    rdi,[rbx+rax*8+0x2d8]
   16c5d:	add    DWORD PTR [rdi],0x1
   16c60:	test   rsi,rsi
   16c63:	je     16b4f <vcpu_prev_update+0x4cf>
   16c69:	call   4a20 <update_cycles.part.5>
   16c6e:	jmp    16b4f <vcpu_prev_update+0x4cf>
   16c73:	mov    rax,QWORD PTR [rbx+0x18]
   16c77:	mov    QWORD PTR [rax+rcx*8],r12
   16c7b:	mov    eax,DWORD PTR [rbx+0x4]
   16c7e:	jmp    16a00 <vcpu_prev_update+0x380>
   16c83:	mov    rax,QWORD PTR [r14+0x18]
   16c87:	mov    QWORD PTR [rax+rcx*8],r15
   16c8b:	mov    eax,DWORD PTR [r14+0x4]
   16c8f:	jmp    16b00 <vcpu_prev_update+0x480>
   16c94:	mov    rax,rbp
   16c97:	xor    edx,edx
   16c99:	movabs rdi,0x44b82fa09b5a53
   16ca3:	sub    rax,rsi
   16ca6:	shl    rax,0xa
   16caa:	div    rcx
   16cad:	mov    rdx,rax
   16cb0:	mov    r9,rax
   16cb3:	shr    rdx,0x9
   16cb7:	mov    rax,rdx
   16cba:	mul    rdi
   16cbd:	shr    rdx,0xb
   16cc1:	mov    r8d,edx
   16cc4:	imul   edx,edx,0x3b9aca00
   16cca:	sub    r9d,edx
   16ccd:	jmp    16be1 <vcpu_prev_update+0x561>
   16cd2:	test   r14d,r14d
   16cd5:	je     16981 <vcpu_prev_update+0x301>
   16cdb:	cmp    eax,r14d
   16cde:	jl     16981 <vcpu_prev_update+0x301>
   16ce4:	mov    r14d,eax
   16ce7:	jmp    169c6 <vcpu_prev_update+0x346>
   16cec:	lea    rdi,[rax+0x820]
   16cf3:	call   4a20 <update_cycles.part.5>
   16cf8:	jmp    16b43 <vcpu_prev_update+0x4c3>
   16cfd:	mov    r14d,DWORD PTR [rbx+0x8]
   16d01:	jmp    169b9 <vcpu_prev_update+0x339>
   16d06:	mov    r8d,DWORD PTR [r14+0x8]
   16d0a:	jmp    16abc <vcpu_prev_update+0x43c>
   16d0f:	mov    r14d,edx
   16d12:	jmp    16998 <vcpu_prev_update+0x318>
   16d17:	mov    r8d,edx
   16d1a:	jmp    16a91 <vcpu_prev_update+0x411>
   16d1f:	mov    r8d,eax
   16d22:	jmp    16ac9 <vcpu_prev_update+0x449>
   16d27:	mov    edi,0x1
   16d2c:	call   4540 <exit@plt>
   16d31:	lea    rcx,[rip+0xc6a8]        # 233e0 <__PRETTY_FUNCTION__.7408>
   16d38:	lea    rsi,[rip+0x6349]        # 1d088 <_IO_stdin_used+0xc8>
   16d3f:	lea    rdi,[rip+0x9f72]        # 20cb8 <_IO_stdin_used+0x3cf8>
   16d46:	mov    edx,0x1a68
   16d4b:	call   4400 <__assert_fail@plt>

0000000000016d50 <vcpu_next_update>:
   16d50:	push   r15
   16d52:	push   r14
   16d54:	push   r13
   16d56:	push   r12
   16d58:	push   rbp
   16d59:	push   rbx
   16d5a:	mov    rbp,rdx
   16d5d:	sub    rsp,0x18
   16d61:	movsxd rdx,DWORD PTR [rsi]
   16d64:	mov    rax,QWORD PTR [rsi+0x8]
   16d68:	cmp    QWORD PTR [rax+rdx*8+0x10],rsi
   16d6d:	jne    1768f <vcpu_next_update+0x93f>
   16d73:	mov    rax,QWORD PTR [rdi+0x1a8]
   16d7a:	mov    r12,rdi
   16d7d:	mov    rbx,rsi
   16d80:	test   rax,rax
   16d83:	je     16dd6 <vcpu_next_update+0x86>
   16d85:	test   BYTE PTR [r12+0x1b0],0x4
   16d8e:	mov    rdi,QWORD PTR [rip+0x24e4c3]        # 265258 <warn>
   16d95:	jne    16f80 <vcpu_next_update+0x230>
   16d9b:	lea    rcx,[rip+0xc5de]        # 23380 <__func__.7417>
   16da2:	lea    rdx,[rip+0x9fff]        # 20da8 <_IO_stdin_used+0x3de8>
   16da9:	mov    esi,0x1
   16dae:	xor    eax,eax
   16db0:	call   4560 <__fprintf_chk@plt>
   16db5:	mov    rdi,QWORD PTR [r12+0x1a8]
   16dbd:	mov    rdx,rbp
   16dc0:	mov    esi,0x4
   16dc5:	call   10660 <runstate_update>
   16dca:	mov    QWORD PTR [r12+0x1a8],0x0
   16dd6:	movzx  eax,BYTE PTR [rbx+0x10]
   16dda:	test   al,0x1
   16ddc:	je     16f68 <vcpu_next_update+0x218>
   16de2:	mov    edx,DWORD PTR [rbx+0x18]
   16de5:	mov    rax,QWORD PTR [rbx+0x50]
   16de9:	test   edx,edx
   16deb:	jne    16e00 <vcpu_next_update+0xb0>
   16ded:	mov    rdx,QWORD PTR [rbx+0x8]
   16df1:	mov    ecx,DWORD PTR [rdx+0x8]
   16df4:	cmp    ecx,0x8000
   16dfa:	jne    17378 <vcpu_next_update+0x628>
   16e00:	cmp    r12,rax
   16e03:	je     16e48 <vcpu_next_update+0xf8>
   16e05:	mov    rax,QWORD PTR [rbx+0x58]
   16e09:	test   rax,rax
   16e0c:	je     16f77 <vcpu_next_update+0x227>
   16e12:	mov    r13,rbp
   16e15:	add    DWORD PTR [rbx+0x3b8],0x1
   16e1c:	sub    r13,rax
   16e1f:	jne    17430 <vcpu_next_update+0x6e0>
   16e25:	movsxd rdx,DWORD PTR [r12+0x4]
   16e2a:	lea    rax,[rdx*8+0x0]
   16e32:	sub    rax,rdx
   16e35:	add    DWORD PTR [rbx+rax*8+0x3f0],0x1
   16e3d:	mov    QWORD PTR [rbx+0x58],rbp
   16e41:	nop    DWORD PTR [rax+0x0]
   16e48:	test   BYTE PTR [rip+0x212251],0x40        # 2290a0 <opt>
   16e4f:	mov    r13,QWORD PTR [rbx+0x8]
   16e53:	je     16ec9 <vcpu_next_update+0x179>
   16e55:	mov    rax,QWORD PTR [rip+0x216364]        # 22d1c0 <P+0x20>
   16e5c:	cmp    rbp,rax
   16e5f:	ja     17050 <vcpu_next_update+0x300>
   16e65:	xor    r14d,r14d
   16e68:	xor    r15d,r15d
   16e6b:	movsxd rcx,DWORD PTR [rbx+0x18]
   16e6f:	lea    rax,[rip+0x21220a]        # 229080 <runstate_graph>
   16e76:	sub    rsp,0x8
   16e7a:	mov    edx,DWORD PTR [r13+0x8]
   16e7e:	lea    rsi,[rip+0x66e3]        # 1d568 <_IO_stdin_used+0x5a8>
   16e85:	mov    r9d,r14d
   16e88:	mov    r8d,r15d
   16e8b:	mov    edi,0x1
   16e90:	mov    eax,DWORD PTR [rax+rcx*4]
   16e93:	push   rax
   16e94:	mov    ecx,DWORD PTR [rbx]
   16e96:	xor    eax,eax
   16e98:	call   44f0 <__printf_chk@plt>
   16e9d:	mov    eax,DWORD PTR [rip+0x2121dd]        # 229080 <runstate_graph>
   16ea3:	mov    edx,DWORD PTR [r13+0x8]
   16ea7:	lea    rsi,[rip+0x66ba]        # 1d568 <_IO_stdin_used+0x5a8>
   16eae:	mov    r9d,r14d
   16eb1:	mov    r8d,r15d
   16eb4:	mov    edi,0x1
   16eb9:	mov    DWORD PTR [rsp],eax
   16ebc:	mov    ecx,DWORD PTR [rbx]
   16ebe:	xor    eax,eax
   16ec0:	call   44f0 <__printf_chk@plt>
   16ec5:	pop    r14
   16ec7:	pop    r15
   16ec9:	mov    rax,QWORD PTR [rbx+0x20]
   16ecd:	test   rax,rax
   16ed0:	je     16edb <vcpu_next_update+0x18b>
   16ed2:	cmp    rbp,rax
   16ed5:	ja     17190 <vcpu_next_update+0x440>
   16edb:	mov    QWORD PTR [rbx+0x18],0x0
   16ee3:	mov    QWORD PTR [rbx+0x20],rbp
   16ee7:	mov    rax,QWORD PTR [r13+0x818]
   16eee:	test   rax,rax
   16ef1:	je     16efc <vcpu_next_update+0x1ac>
   16ef3:	cmp    rbp,rax
   16ef6:	ja     17098 <vcpu_next_update+0x348>
   16efc:	mov    rdi,r13
   16eff:	call   10420 <domain_runstate>
   16f04:	test   BYTE PTR [rip+0x212196],0x1        # 2290a1 <opt+0x1>
   16f0b:	mov    DWORD PTR [r13+0x814],eax
   16f12:	mov    QWORD PTR [r13+0x818],rbp
   16f19:	je     16f31 <vcpu_next_update+0x1e1>
   16f1b:	mov    rax,QWORD PTR [rbx+0x8]
   16f1f:	mov    esi,DWORD PTR [rax+0x8]
   16f22:	lea    eax,[rsi-0x7fff]
   16f28:	cmp    eax,0x1
   16f2b:	ja     16fd0 <vcpu_next_update+0x280>
   16f31:	mov    QWORD PTR [rbx+0x50],r12
   16f35:	mov    rdi,r12
   16f38:	mov    QWORD PTR [r12+0x1a8],rbx
   16f40:	call   16600 <pcpu_string_draw>
   16f45:	mov    QWORD PTR [r12+0x2d0],rbp
   16f4d:	or     BYTE PTR [r12+0x1b0],0x4
   16f56:	add    rsp,0x18
   16f5a:	pop    rbx
   16f5b:	pop    rbp
   16f5c:	pop    r12
   16f5e:	pop    r13
   16f60:	pop    r14
   16f62:	pop    r15
   16f64:	ret    
   16f65:	nop    DWORD PTR [rax]
   16f68:	mov    edx,DWORD PTR [rip+0x212166]        # 2290d4 <opt+0x34>
   16f6e:	or     eax,0x1
   16f71:	mov    BYTE PTR [rbx+0x10],al
   16f74:	mov    DWORD PTR [rbx+0x14],edx
   16f77:	mov    QWORD PTR [rbx+0x58],rbp
   16f7b:	jmp    16e48 <vcpu_next_update+0xf8>
   16f80:	movsxd rsi,DWORD PTR [rax+0x18]
   16f84:	mov    rdx,QWORD PTR [rax+0x8]
   16f88:	lea    rcx,[rip+0x2124b1]        # 229440 <runstate_name>
   16f8f:	sub    rsp,0x8
   16f93:	push   QWORD PTR [rcx+rsi*8]
   16f96:	mov    r9d,DWORD PTR [rax]
   16f99:	lea    rcx,[rip+0xc3e0]        # 23380 <__func__.7417>
   16fa0:	mov    r8d,DWORD PTR [rdx+0x8]
   16fa4:	lea    rdx,[rip+0x9e3d]        # 20de8 <_IO_stdin_used+0x3e28>
   16fab:	mov    esi,0x1
   16fb0:	xor    eax,eax
   16fb2:	call   4560 <__fprintf_chk@plt>
   16fb7:	cmp    DWORD PTR [rip+0x212122],0x6        # 2290e0 <opt+0x40>
   16fbe:	pop    rcx
   16fbf:	pop    rsi
   16fc0:	ja     16dd6 <vcpu_next_update+0x86>
   16fc6:	mov    edi,0x1
   16fcb:	call   4540 <exit@plt>
   16fd0:	mov    rax,QWORD PTR [rip+0x2161e9]        # 22d1c0 <P+0x20>
   16fd7:	cmp    rbp,rax
   16fda:	ja     17330 <vcpu_next_update+0x5e0>
   16fe0:	xor    r13d,r13d
   16fe3:	xor    r14d,r14d
   16fe6:	mov    rax,QWORD PTR [rbx+0x50]
   16fea:	mov    ecx,DWORD PTR [rbx]
   16fec:	test   rax,rax
   16fef:	je     17020 <vcpu_next_update+0x2d0>
   16ff1:	mov    eax,DWORD PTR [rax+0x4]
   16ff4:	sub    rsp,0x8
   16ff8:	mov    edx,esi
   16ffa:	lea    rsi,[rip+0x6567]        # 1d568 <_IO_stdin_used+0x5a8>
   17001:	mov    r8d,r14d
   17004:	mov    edi,0x1
   17009:	mov    r9d,r13d
   1700c:	push   rax
   1700d:	xor    eax,eax
   1700f:	call   44f0 <__printf_chk@plt>
   17014:	mov    rax,QWORD PTR [rbx+0x8]
   17018:	mov    ecx,DWORD PTR [rbx]
   1701a:	pop    rdi
   1701b:	pop    r8
   1701d:	mov    esi,DWORD PTR [rax+0x8]
   17020:	mov    eax,DWORD PTR [r12+0x4]
   17025:	sub    rsp,0x8
   17029:	mov    edx,esi
   1702b:	lea    rsi,[rip+0x6536]        # 1d568 <_IO_stdin_used+0x5a8>
   17032:	mov    r9d,r13d
   17035:	mov    r8d,r14d
   17038:	mov    edi,0x1
   1703d:	push   rax
   1703e:	xor    eax,eax
   17040:	call   44f0 <__printf_chk@plt>
   17045:	pop    rax
   17046:	pop    rdx
   17047:	jmp    16f31 <vcpu_next_update+0x1e1>
   1704c:	nop    DWORD PTR [rax+0x0]
   17050:	mov    r14,rbp
   17053:	xor    edx,edx
   17055:	movabs rcx,0x44b82fa09b5a53
   1705f:	sub    r14,rax
   17062:	shl    r14,0xa
   17066:	mov    rax,r14
   17069:	div    QWORD PTR [rip+0x212038]        # 2290a8 <opt+0x8>
   17070:	mov    rdx,rax
   17073:	mov    r14,rax
   17076:	shr    rdx,0x9
   1707a:	mov    rax,rdx
   1707d:	mul    rcx
   17080:	shr    rdx,0xb
   17084:	mov    r15d,edx
   17087:	imul   edx,edx,0x3b9aca00
   1708d:	sub    r14d,edx
   17090:	jmp    16e6b <vcpu_next_update+0x11b>
   17095:	nop    DWORD PTR [rax]
   17098:	movsxd rdx,DWORD PTR [r13+0x814]
   1709f:	mov    r15,rbp
   170a2:	sub    r15,rax
   170a5:	lea    rax,[rdx*8+0x0]
   170ad:	sub    rax,rdx
   170b0:	lea    r14,[r13+rax*8+0x858]
   170b8:	add    DWORD PTR [r14],0x1
   170bc:	movsxd rcx,DWORD PTR [r14+0x4]
   170c0:	mov    edx,DWORD PTR [rip+0x212012]        # 2290d8 <opt+0x38>
   170c6:	test   edx,edx
   170c8:	mov    eax,ecx
   170ca:	je     17170 <vcpu_next_update+0x420>
   170d0:	mov    eax,DWORD PTR [r14+0x8]
   170d4:	cmp    eax,ecx
   170d6:	jg     1757d <vcpu_next_update+0x82d>
   170dc:	test   ecx,ecx
   170de:	mov    r8d,DWORD PTR [rip+0x211ff7]        # 2290dc <opt+0x3c>
   170e5:	jne    175dd <vcpu_next_update+0x88d>
   170eb:	add    eax,eax
   170ed:	cmovne edx,eax
   170f0:	cmp    edx,r8d
   170f3:	jle    1762e <vcpu_next_update+0x8de>
   170f9:	test   r8d,r8d
   170fc:	je     1762e <vcpu_next_update+0x8de>
   17102:	mov    rdi,QWORD PTR [r14+0x18]
   17106:	movsxd rsi,r8d
   17109:	mov    DWORD PTR [rsp+0xc],r8d
   1710e:	shl    rsi,0x3
   17112:	call   44c0 <realloc@plt>
   17117:	test   rax,rax
   1711a:	mov    r8d,DWORD PTR [rsp+0xc]
   1711f:	je     17625 <vcpu_next_update+0x8d5>
   17125:	mov    QWORD PTR [r14+0x18],rax
   17129:	mov    DWORD PTR [r14+0x8],r8d
   1712d:	movsxd rcx,DWORD PTR [r14+0x4]
   17131:	cmp    ecx,r8d
   17134:	jl     1757d <vcpu_next_update+0x82d>
   1713a:	mov    eax,ecx
   1713c:	cdq    
   1713d:	idiv   r8d
   17140:	lea    edi,[rax+0x1]
   17143:	movsxd rsi,edx
   17146:	mov    edx,0x55555556
   1714b:	mov    eax,edi
   1714d:	imul   edx
   1714f:	mov    eax,edi
   17151:	sar    eax,0x1f
   17154:	sub    eax,edx
   17156:	add    eax,esi
   17158:	cdq    
   17159:	idiv   edi
   1715b:	mov    eax,ecx
   1715d:	test   edx,edx
   1715f:	jne    17170 <vcpu_next_update+0x420>
   17161:	mov    rax,QWORD PTR [r14+0x18]
   17165:	mov    QWORD PTR [rax+rsi*8],r15
   17169:	mov    eax,DWORD PTR [r14+0x4]
   1716d:	nop    DWORD PTR [rax]
   17170:	add    eax,0x1
   17173:	add    QWORD PTR [r14+0x10],r15
   17177:	add    DWORD PTR [r14+0x20],0x1
   1717c:	mov    DWORD PTR [r14+0x4],eax
   17180:	add    QWORD PTR [r14+0x28],r15
   17184:	jmp    16efc <vcpu_next_update+0x1ac>
   17189:	nop    DWORD PTR [rax+0x0]
   17190:	movsxd rdx,DWORD PTR [rbx+0x18]
   17194:	mov    r15,rbp
   17197:	sub    r15,rax
   1719a:	lea    rax,[rdx*8+0x0]
   171a2:	sub    rax,rdx
   171a5:	lea    r14,[rbx+rax*8+0x150]
   171ad:	add    DWORD PTR [r14],0x1
   171b1:	movsxd rcx,DWORD PTR [r14+0x4]
   171b5:	mov    edx,DWORD PTR [rip+0x211f1d]        # 2290d8 <opt+0x38>
   171bb:	test   edx,edx
   171bd:	mov    eax,ecx
   171bf:	je     17270 <vcpu_next_update+0x520>
   171c5:	mov    eax,DWORD PTR [r14+0x8]
   171c9:	cmp    eax,ecx
   171cb:	jg     1758e <vcpu_next_update+0x83e>
   171d1:	test   ecx,ecx
   171d3:	mov    r8d,DWORD PTR [rip+0x211f02]        # 2290dc <opt+0x3c>
   171da:	je     171ea <vcpu_next_update+0x49a>
   171dc:	cmp    eax,r8d
   171df:	jl     171ea <vcpu_next_update+0x49a>
   171e1:	test   r8d,r8d
   171e4:	jne    17664 <vcpu_next_update+0x914>
   171ea:	add    eax,eax
   171ec:	cmovne edx,eax
   171ef:	cmp    edx,r8d
   171f2:	jle    1763f <vcpu_next_update+0x8ef>
   171f8:	test   r8d,r8d
   171fb:	je     1763f <vcpu_next_update+0x8ef>
   17201:	mov    rdi,QWORD PTR [r14+0x18]
   17205:	movsxd rsi,r8d
   17208:	mov    DWORD PTR [rsp+0xc],r8d
   1720d:	shl    rsi,0x3
   17211:	call   44c0 <realloc@plt>
   17216:	test   rax,rax
   17219:	mov    r8d,DWORD PTR [rsp+0xc]
   1721e:	je     17636 <vcpu_next_update+0x8e6>
   17224:	mov    QWORD PTR [r14+0x18],rax
   17228:	mov    DWORD PTR [r14+0x8],r8d
   1722c:	movsxd rcx,DWORD PTR [r14+0x4]
   17230:	cmp    ecx,r8d
   17233:	jl     1758e <vcpu_next_update+0x83e>
   17239:	mov    eax,ecx
   1723b:	cdq    
   1723c:	idiv   r8d
   1723f:	lea    edi,[rax+0x1]
   17242:	movsxd rsi,edx
   17245:	mov    edx,0x55555556
   1724a:	mov    eax,edi
   1724c:	imul   edx
   1724e:	mov    eax,edi
   17250:	sar    eax,0x1f
   17253:	sub    eax,edx
   17255:	add    eax,esi
   17257:	cdq    
   17258:	idiv   edi
   1725a:	mov    eax,ecx
   1725c:	test   edx,edx
   1725e:	jne    17270 <vcpu_next_update+0x520>
   17260:	mov    rax,QWORD PTR [r14+0x18]
   17264:	mov    QWORD PTR [rax+rsi*8],r15
   17268:	mov    eax,DWORD PTR [r14+0x4]
   1726c:	nop    DWORD PTR [rax+0x0]
   17270:	add    eax,0x1
   17273:	add    QWORD PTR [r14+0x10],r15
   17277:	add    DWORD PTR [r14+0x20],0x1
   1727c:	mov    DWORD PTR [r14+0x4],eax
   17280:	add    QWORD PTR [r14+0x28],r15
   17284:	cmp    BYTE PTR [rip+0x211e15],0x0        # 2290a0 <opt>
   1728b:	js     173b3 <vcpu_next_update+0x663>
   17291:	mov    eax,DWORD PTR [rbx+0x18]
   17294:	test   eax,eax
   17296:	jne    172b6 <vcpu_next_update+0x566>
   17298:	mov    rsi,rbp
   1729b:	sub    rsi,QWORD PTR [rbx+0x20]
   1729f:	mov    rax,QWORD PTR [rbx+0x8]
   172a3:	add    DWORD PTR [rax+0x820],0x1
   172aa:	test   rsi,rsi
   172ad:	jne    175f7 <vcpu_next_update+0x8a7>
   172b3:	mov    eax,DWORD PTR [rbx+0x18]
   172b6:	cmp    eax,0x1
   172b9:	je     17549 <vcpu_next_update+0x7f9>
   172bf:	mov    rax,QWORD PTR [rbx+0x8]
   172c3:	mov    r9d,DWORD PTR [rax+0x8]
   172c7:	test   r9d,r9d
   172ca:	jne    16edb <vcpu_next_update+0x18b>
   172d0:	lea    rax,[rip+0x215f09]        # 22d1e0 <P+0x40>
   172d7:	lea    rsi,[rax+0x38000]
   172de:	xchg   ax,ax
   172e0:	test   BYTE PTR [rax],0x1
   172e3:	je     17318 <vcpu_next_update+0x5c8>
   172e5:	mov    rdx,QWORD PTR [rax+0x1c0]
   172ec:	cmp    QWORD PTR [rbx+0x20],rdx
   172f0:	mov    rdi,rbp
   172f3:	cmovae rdx,QWORD PTR [rbx+0x20]
   172f8:	movsxd rcx,DWORD PTR [rbx+0x18]
   172fc:	sub    rdi,rdx
   172ff:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   17307:	mov    DWORD PTR [rax+0x208],0x0
   17311:	mov    QWORD PTR [rax+0x1c8],rbp
   17318:	add    rax,0x380
   1731e:	cmp    rsi,rax
   17321:	jne    172e0 <vcpu_next_update+0x590>
   17323:	jmp    16edb <vcpu_next_update+0x18b>
   17328:	nop    DWORD PTR [rax+rax*1+0x0]
   17330:	mov    r13,rbp
   17333:	xor    edx,edx
   17335:	movabs rcx,0x44b82fa09b5a53
   1733f:	sub    r13,rax
   17342:	shl    r13,0xa
   17346:	mov    rax,r13
   17349:	div    QWORD PTR [rip+0x211d58]        # 2290a8 <opt+0x8>
   17350:	mov    rdx,rax
   17353:	mov    r13,rax
   17356:	shr    rdx,0x9
   1735a:	mov    rax,rdx
   1735d:	mul    rcx
   17360:	shr    rdx,0xb
   17364:	mov    r14d,edx
   17367:	imul   edx,edx,0x3b9aca00
   1736d:	sub    r13d,edx
   17370:	jmp    16fe6 <vcpu_next_update+0x296>
   17375:	nop    DWORD PTR [rax]
   17378:	mov    r9d,DWORD PTR [rax+0x4]
   1737c:	mov    r8d,DWORD PTR [rbx]
   1737f:	lea    rdx,[rip+0x9a9a]        # 20e20 <_IO_stdin_used+0x3e60>
   17386:	mov    rdi,QWORD PTR [rip+0x24decb]        # 265258 <warn>
   1738d:	xor    eax,eax
   1738f:	mov    esi,0x1
   17394:	call   4560 <__fprintf_chk@plt>
   17399:	mov    rax,QWORD PTR [rbx+0x50]
   1739d:	mov    QWORD PTR [rbx+0x20],0x0
   173a5:	cmp    r12,rax
   173a8:	jne    16e05 <vcpu_next_update+0xb5>
   173ae:	jmp    16e48 <vcpu_next_update+0xf8>
   173b3:	mov    rsi,QWORD PTR [rip+0x215e06]        # 22d1c0 <P+0x20>
   173ba:	mov    rcx,QWORD PTR [rip+0x211ce7]        # 2290a8 <opt+0x8>
   173c1:	cmp    rbp,rsi
   173c4:	ja     1759f <vcpu_next_update+0x84f>
   173ca:	xor    r9d,r9d
   173cd:	xor    r8d,r8d
   173d0:	mov    rax,rbp
   173d3:	sub    rax,QWORD PTR [rbx+0x20]
   173d7:	xor    edx,edx
   173d9:	mov    edi,0x1
   173de:	sub    rax,rsi
   173e1:	shl    rax,0xa
   173e5:	div    rcx
   173e8:	movabs rcx,0x44b82fa09b5a53
   173f2:	mov    rdx,rax
   173f5:	mov    rsi,rax
   173f8:	shr    rdx,0x9
   173fc:	mov    rax,rdx
   173ff:	mul    rcx
   17402:	mov    rcx,rdx
   17405:	mov    edx,DWORD PTR [r13+0x8]
   17409:	shr    rcx,0xb
   1740d:	imul   eax,ecx,0x3b9aca00
   17413:	sub    esi,eax
   17415:	xor    eax,eax
   17417:	push   rsi
   17418:	push   rcx
   17419:	lea    rsi,[rip+0x615a]        # 1d57a <_IO_stdin_used+0x5ba>
   17420:	mov    ecx,DWORD PTR [rbx]
   17422:	call   44f0 <__printf_chk@plt>
   17427:	pop    r10
   17429:	pop    r11
   1742b:	jmp    17291 <vcpu_next_update+0x541>
   17430:	mov    edx,DWORD PTR [rip+0x211ca2]        # 2290d8 <opt+0x38>
   17436:	movsxd rcx,DWORD PTR [rbx+0x3bc]
   1743d:	mov    rsi,r13
   17440:	test   edx,edx
   17442:	mov    eax,ecx
   17444:	je     174f4 <vcpu_next_update+0x7a4>
   1744a:	mov    eax,DWORD PTR [rbx+0x3c0]
   17450:	cmp    eax,ecx
   17452:	jg     17608 <vcpu_next_update+0x8b8>
   17458:	test   ecx,ecx
   1745a:	mov    r14d,DWORD PTR [rip+0x211c7b]        # 2290dc <opt+0x3c>
   17461:	je     17471 <vcpu_next_update+0x721>
   17463:	test   r14d,r14d
   17466:	je     17471 <vcpu_next_update+0x721>
   17468:	cmp    eax,r14d
   1746b:	jge    17687 <vcpu_next_update+0x937>
   17471:	add    eax,eax
   17473:	cmovne edx,eax
   17476:	test   r14d,r14d
   17479:	je     1767f <vcpu_next_update+0x92f>
   1747f:	cmp    edx,r14d
   17482:	jle    1767f <vcpu_next_update+0x92f>
   17488:	mov    rdi,QWORD PTR [rbx+0x3d0]
   1748f:	movsxd rsi,r14d
   17492:	shl    rsi,0x3
   17496:	call   44c0 <realloc@plt>
   1749b:	test   rax,rax
   1749e:	je     1766c <vcpu_next_update+0x91c>
   174a4:	movsxd rcx,DWORD PTR [rbx+0x3bc]
   174ab:	mov    QWORD PTR [rbx+0x3d0],rax
   174b2:	mov    DWORD PTR [rbx+0x3c0],r14d
   174b9:	cmp    ecx,r14d
   174bc:	jl     17608 <vcpu_next_update+0x8b8>
   174c2:	mov    eax,ecx
   174c4:	cdq    
   174c5:	idiv   r14d
   174c8:	lea    esi,[rax+0x1]
   174cb:	movsxd rdi,edx
   174ce:	mov    edx,0x55555556
   174d3:	mov    eax,esi
   174d5:	imul   edx
   174d7:	mov    eax,esi
   174d9:	sar    eax,0x1f
   174dc:	sub    eax,edx
   174de:	add    eax,edi
   174e0:	cdq    
   174e1:	idiv   esi
   174e3:	test   edx,edx
   174e5:	je     17647 <vcpu_next_update+0x8f7>
   174eb:	mov    rsi,rbp
   174ee:	sub    rsi,QWORD PTR [rbx+0x58]
   174f2:	mov    eax,ecx
   174f4:	add    eax,0x1
   174f7:	add    QWORD PTR [rbx+0x3c8],r13
   174fe:	add    DWORD PTR [rbx+0x3d8],0x1
   17505:	mov    DWORD PTR [rbx+0x3bc],eax
   1750b:	add    QWORD PTR [rbx+0x3e0],r13
   17512:	movsxd rdx,DWORD PTR [r12+0x4]
   17517:	lea    rax,[rdx*8+0x0]
   1751f:	sub    rax,rdx
   17522:	shl    rax,0x3
   17526:	add    DWORD PTR [rbx+rax*1+0x3f0],0x1
   1752e:	test   rsi,rsi
   17531:	je     16f77 <vcpu_next_update+0x227>
   17537:	lea    rdi,[rbx+rax*1+0x3f0]
   1753f:	call   4a20 <update_cycles.part.5>
   17544:	jmp    16f77 <vcpu_next_update+0x227>
   17549:	movsxd rdx,DWORD PTR [rbx+0x1c]
   1754d:	mov    rsi,rbp
   17550:	sub    rsi,QWORD PTR [rbx+0x20]
   17554:	lea    rax,[rdx*8+0x0]
   1755c:	sub    rax,rdx
   1755f:	lea    rdi,[rbx+rax*8+0x2d8]
   17567:	add    DWORD PTR [rdi],0x1
   1756a:	test   rsi,rsi
   1756d:	je     172bf <vcpu_next_update+0x56f>
   17573:	call   4a20 <update_cycles.part.5>
   17578:	jmp    172bf <vcpu_next_update+0x56f>
   1757d:	mov    rax,QWORD PTR [r14+0x18]
   17581:	mov    QWORD PTR [rax+rcx*8],r15
   17585:	mov    eax,DWORD PTR [r14+0x4]
   17589:	jmp    17170 <vcpu_next_update+0x420>
   1758e:	mov    rax,QWORD PTR [r14+0x18]
   17592:	mov    QWORD PTR [rax+rcx*8],r15
   17596:	mov    eax,DWORD PTR [r14+0x4]
   1759a:	jmp    17270 <vcpu_next_update+0x520>
   1759f:	mov    rax,rbp
   175a2:	xor    edx,edx
   175a4:	movabs rdi,0x44b82fa09b5a53
   175ae:	sub    rax,rsi
   175b1:	shl    rax,0xa
   175b5:	div    rcx
   175b8:	mov    rdx,rax
   175bb:	mov    r9,rax
   175be:	shr    rdx,0x9
   175c2:	mov    rax,rdx
   175c5:	mul    rdi
   175c8:	shr    rdx,0xb
   175cc:	mov    r8d,edx
   175cf:	imul   edx,edx,0x3b9aca00
   175d5:	sub    r9d,edx
   175d8:	jmp    173d0 <vcpu_next_update+0x680>
   175dd:	test   r8d,r8d
   175e0:	je     170eb <vcpu_next_update+0x39b>
   175e6:	cmp    eax,r8d
   175e9:	jl     170eb <vcpu_next_update+0x39b>
   175ef:	mov    r8d,eax
   175f2:	jmp    1713a <vcpu_next_update+0x3ea>
   175f7:	lea    rdi,[rax+0x820]
   175fe:	call   4a20 <update_cycles.part.5>
   17603:	jmp    172b3 <vcpu_next_update+0x563>
   17608:	mov    rax,QWORD PTR [rbx+0x3d0]
   1760f:	mov    rsi,rbp
   17612:	mov    QWORD PTR [rax+rcx*8],r13
   17616:	mov    eax,DWORD PTR [rbx+0x3bc]
   1761c:	sub    rsi,QWORD PTR [rbx+0x58]
   17620:	jmp    174f4 <vcpu_next_update+0x7a4>
   17625:	mov    r8d,DWORD PTR [r14+0x8]
   17629:	jmp    1712d <vcpu_next_update+0x3dd>
   1762e:	mov    r8d,edx
   17631:	jmp    17102 <vcpu_next_update+0x3b2>
   17636:	mov    r8d,DWORD PTR [r14+0x8]
   1763a:	jmp    1722c <vcpu_next_update+0x4dc>
   1763f:	mov    r8d,edx
   17642:	jmp    17201 <vcpu_next_update+0x4b1>
   17647:	mov    rax,QWORD PTR [rbx+0x3d0]
   1764e:	mov    rsi,rbp
   17651:	mov    QWORD PTR [rax+rdi*8],r13
   17655:	mov    eax,DWORD PTR [rbx+0x3bc]
   1765b:	sub    rsi,QWORD PTR [rbx+0x58]
   1765f:	jmp    174f4 <vcpu_next_update+0x7a4>
   17664:	mov    r8d,eax
   17667:	jmp    17239 <vcpu_next_update+0x4e9>
   1766c:	movsxd rcx,DWORD PTR [rbx+0x3bc]
   17673:	mov    r14d,DWORD PTR [rbx+0x3c0]
   1767a:	jmp    174b9 <vcpu_next_update+0x769>
   1767f:	mov    r14d,edx
   17682:	jmp    17488 <vcpu_next_update+0x738>
   17687:	mov    r14d,eax
   1768a:	jmp    174c2 <vcpu_next_update+0x772>
   1768f:	lea    rcx,[rip+0xbd0a]        # 233a0 <__PRETTY_FUNCTION__.7416>
   17696:	lea    rsi,[rip+0x59eb]        # 1d088 <_IO_stdin_used+0xc8>
   1769d:	lea    rdi,[rip+0x96dc]        # 20d80 <_IO_stdin_used+0x3dc0>
   176a4:	mov    edx,0x1a94
   176a9:	call   4400 <__assert_fail@plt>
   176ae:	xchg   ax,ax

00000000000176b0 <sched_switch_process>:
   176b0:	test   BYTE PTR [rip+0x2119ea],0x40        # 2290a1 <opt+0x1>
   176b7:	push   r12
   176b9:	push   rbp
   176ba:	push   rbx
   176bb:	mov    rbx,rdi
   176be:	mov    rbp,QWORD PTR [rdi+0x50]
   176c2:	jne    17758 <sched_switch_process+0xa8>
   176c8:	mov    esi,DWORD PTR [rbp+0x4]
   176cb:	cmp    esi,0x100
   176d1:	ja     17770 <sched_switch_process+0xc0>
   176d7:	mov    r8d,DWORD PTR [rbp+0xc]
   176db:	cmp    r8d,0x100
   176e2:	ja     17728 <sched_switch_process+0x78>
   176e4:	mov    edi,DWORD PTR [rbp+0x0]
   176e7:	call   11e00 <vcpu_find>
   176ec:	mov    esi,DWORD PTR [rbp+0xc]
   176ef:	mov    edi,DWORD PTR [rbp+0x8]
   176f2:	mov    r12,rax
   176f5:	call   11e00 <vcpu_find>
   176fa:	mov    rdx,QWORD PTR [rbx+0x38]
   176fe:	mov    rbp,rax
   17701:	mov    rsi,r12
   17704:	mov    rdi,rbx
   17707:	mov    ecx,0x5
   1770c:	call   16680 <vcpu_prev_update>
   17711:	mov    rdx,QWORD PTR [rbx+0x38]
   17715:	mov    rsi,rbp
   17718:	mov    rdi,rbx
   1771b:	pop    rbx
   1771c:	pop    rbp
   1771d:	pop    r12
   1771f:	jmp    16d50 <vcpu_next_update>
   17724:	nop    DWORD PTR [rax+0x0]
   17728:	lea    rcx,[rip+0xbc11]        # 23340 <__func__.7500>
   1772f:	lea    rdx,[rip+0x974a]        # 20e80 <_IO_stdin_used+0x3ec0>
   17736:	mov    r9d,0x100
   1773c:	pop    rbx
   1773d:	pop    rbp
   1773e:	pop    r12
   17740:	mov    rdi,QWORD PTR [rip+0x24db11]        # 265258 <warn>
   17747:	mov    esi,0x1
   1774c:	xor    eax,eax
   1774e:	jmp    4560 <__fprintf_chk@plt>
   17753:	nop    DWORD PTR [rax+rax*1+0x0]
   17758:	lea    rdi,[rdi+0x30]
   1775c:	call   120f0 <dump_sched_switch>
   17761:	mov    esi,DWORD PTR [rbp+0x4]
   17764:	cmp    esi,0x100
   1776a:	jbe    176d7 <sched_switch_process+0x27>
   17770:	mov    r9d,0x100
   17776:	mov    r8d,esi
   17779:	lea    rcx,[rip+0xbbc0]        # 23340 <__func__.7500>
   17780:	lea    rdx,[rip+0x96d1]        # 20e58 <_IO_stdin_used+0x3e98>
   17787:	jmp    1773c <sched_switch_process+0x8c>
   17789:	nop    DWORD PTR [rax+0x0]

0000000000017790 <vcpu_start>:
   17790:	push   rbp
   17791:	push   rbx
   17792:	mov    rbx,rdi
   17795:	sub    rsp,0x8
   17799:	mov    rdi,QWORD PTR [rdi+0x1a8]
   177a0:	test   rdi,rdi
   177a3:	je     177b2 <vcpu_start+0x22>
   177a5:	mov    rax,QWORD PTR [rdi+0x8]
   177a9:	cmp    DWORD PTR [rax+0x8],0x8000
   177b0:	je     177e8 <vcpu_start+0x58>
   177b2:	mov    rcx,QWORD PTR [rip+0x214c87]        # 22c440 <stderr@@GLIBC_2.2.5>
   177b9:	lea    rdi,[rip+0x96e8]        # 20ea8 <_IO_stdin_used+0x3ee8>
   177c0:	mov    edx,0x28
   177c5:	mov    esi,0x1
   177ca:	call   4550 <fwrite@plt>
   177cf:	cmp    DWORD PTR [rip+0x21190a],0x4        # 2290e0 <opt+0x40>
   177d6:	jbe    178d6 <vcpu_start+0x146>
   177dc:	add    rsp,0x8
   177e0:	pop    rbx
   177e1:	pop    rbp
   177e2:	ret    
   177e3:	nop    DWORD PTR [rax+rax*1+0x0]
   177e8:	mov    rdx,QWORD PTR [rbx+0x8]
   177ec:	mov    rbp,rsi
   177ef:	test   rdx,rdx
   177f2:	je     178a0 <vcpu_start+0x110>
   177f8:	mov    r8,QWORD PTR [rdi+0x20]
   177fc:	cmp    rdx,r8
   177ff:	ja     17836 <vcpu_start+0xa6>
   17801:	mov    rdi,QWORD PTR [rip+0x214c38]        # 22c440 <stderr@@GLIBC_2.2.5>
   17808:	mov    rcx,rdx
   1780b:	lea    rdx,[rip+0x96c6]        # 20ed8 <_IO_stdin_used+0x3f18>
   17812:	xor    eax,eax
   17814:	mov    esi,0x1
   17819:	call   4560 <__fprintf_chk@plt>
   1781e:	cmp    DWORD PTR [rip+0x2118bb],0x4        # 2290e0 <opt+0x40>
   17825:	jbe    178d6 <vcpu_start+0x146>
   1782b:	mov    rdx,QWORD PTR [rbx+0x8]
   1782f:	mov    rdi,QWORD PTR [rbx+0x1a8]
   17836:	mov    esi,0x5
   1783b:	call   10660 <runstate_update>
   17840:	mov    rax,QWORD PTR [rbp+0x8]
   17844:	mov    r9,QWORD PTR [rbx+0x10]
   17848:	lea    rdx,[rip+0x96c9]        # 20f18 <_IO_stdin_used+0x3f58>
   1784f:	sub    r9,QWORD PTR [rbx+0x8]
   17853:	mov    r8d,DWORD PTR [rbp+0x0]
   17857:	mov    esi,0x1
   1785c:	mov    rdi,QWORD PTR [rip+0x24d9f5]        # 265258 <warn>
   17863:	mov    ecx,DWORD PTR [rax+0x8]
   17866:	xor    eax,eax
   17868:	call   4560 <__fprintf_chk@plt>
   1786d:	mov    rdx,QWORD PTR [rbx+0x8]
   17871:	mov    rdi,rbp
   17874:	xor    esi,esi
   17876:	call   10660 <runstate_update>
   1787b:	mov    rax,QWORD PTR [rbx+0x8]
   1787f:	mov    QWORD PTR [rbx+0x1a8],rbp
   17886:	mov    rdi,rbx
   17889:	mov    QWORD PTR [rbx+0x2d0],rax
   17890:	call   16600 <pcpu_string_draw>
   17895:	mov    QWORD PTR [rbp+0x50],rbx
   17899:	add    rsp,0x8
   1789d:	pop    rbx
   1789e:	pop    rbp
   1789f:	ret    
   178a0:	mov    ecx,DWORD PTR [rbx+0x4]
   178a3:	mov    rdi,QWORD PTR [rip+0x214b96]        # 22c440 <stderr@@GLIBC_2.2.5>
   178aa:	lea    rdx,[rip+0x61ba]        # 1da6b <_IO_stdin_used+0xaab>
   178b1:	xor    eax,eax
   178b3:	mov    esi,0x1
   178b8:	call   4560 <__fprintf_chk@plt>
   178bd:	cmp    DWORD PTR [rip+0x21181c],0x4        # 2290e0 <opt+0x40>
   178c4:	jbe    178d6 <vcpu_start+0x146>
   178c6:	mov    rdx,QWORD PTR [rbx+0x8]
   178ca:	mov    rdi,QWORD PTR [rbx+0x1a8]
   178d1:	jmp    177f8 <vcpu_start+0x68>
   178d6:	mov    edi,0x1
   178db:	call   4540 <exit@plt>

00000000000178e0 <sched_runstate_process>:
   178e0:	push   r15
   178e2:	push   r14
   178e4:	push   r13
   178e6:	push   r12
   178e8:	push   rbp
   178e9:	push   rbx
   178ea:	mov    rbp,rdi
   178ed:	sub    rsp,0x38
   178f1:	mov    ebx,DWORD PTR [rdi+0x40]
   178f4:	mov    r13,QWORD PTR [rdi+0x50]
   178f8:	mov    ecx,ebx
   178fa:	and    ecx,0xf
   178fd:	cmp    cl,0x1
   17900:	je     17998 <sched_runstate_process+0xb8>
   17906:	cmp    cl,0x2
   17909:	je     17948 <sched_runstate_process+0x68>
   1790b:	mov    rdi,QWORD PTR [rip+0x24d946]        # 265258 <warn>
   17912:	lea    rdx,[rip+0x962f]        # 20f48 <_IO_stdin_used+0x3f88>
   17919:	xor    eax,eax
   1791b:	movzx  ecx,cl
   1791e:	mov    esi,0x1
   17923:	call   4560 <__fprintf_chk@plt>
   17928:	cmp    DWORD PTR [rip+0x2117b1],0x3        # 2290e0 <opt+0x40>
   1792f:	jbe    17f26 <sched_runstate_process+0x646>
   17935:	add    rsp,0x38
   17939:	pop    rbx
   1793a:	pop    rbp
   1793b:	pop    r12
   1793d:	pop    r13
   1793f:	pop    r14
   17941:	pop    r15
   17943:	ret    
   17944:	nop    DWORD PTR [rax+0x0]
   17948:	movzx  esi,WORD PTR [r13+0x0]
   1794d:	test   BYTE PTR [rip+0x21174d],0x40        # 2290a1 <opt+0x1>
   17954:	mov    eax,DWORD PTR [rdi+0x44]
   17957:	mov    DWORD PTR [rsp+0x8],eax
   1795b:	mov    eax,esi
   1795d:	je     17ba0 <sched_runstate_process+0x2c0>
   17963:	cmp    DWORD PTR [rsp+0x8],0x5
   17968:	mov    rax,QWORD PTR [rip+0x211ad1]        # 229440 <runstate_name>
   1796f:	movzx  r8d,WORD PTR [r13+0x2]
   17974:	je     17de0 <sched_runstate_process+0x500>
   1797a:	mov    rdi,rax
   1797d:	mov    r15d,0x1
   17983:	xor    ebx,ebx
   17985:	xor    r14d,r14d
   17988:	lea    rcx,[rip+0x60f7]        # 1da86 <_IO_stdin_used+0xac6>
   1798f:	jmp    179ef <sched_runstate_process+0x10f>
   17991:	nop    DWORD PTR [rax+0x0]
   17998:	mov    r14d,ebx
   1799b:	shr    ebx,0x8
   1799e:	movzx  esi,WORD PTR [r13+0x0]
   179a3:	shr    r14b,0x4
   179a7:	and    ebx,0xf
   179aa:	test   BYTE PTR [rip+0x2116f0],0x40        # 2290a1 <opt+0x1>
   179b1:	mov    eax,DWORD PTR [rdi+0x44]
   179b4:	movzx  r14d,r14b
   179b8:	mov    DWORD PTR [rsp+0x8],eax
   179bc:	mov    eax,esi
   179be:	je     17a1b <sched_runstate_process+0x13b>
   179c0:	cmp    DWORD PTR [rsp+0x8],0x5
   179c5:	lea    rax,[rip+0x211a74]        # 229440 <runstate_name>
   179cc:	movsxd rdx,ebx
   179cf:	movzx  r8d,WORD PTR [r13+0x2]
   179d4:	mov    rdi,QWORD PTR [rax+rdx*8]
   179d8:	movsxd rdx,r14d
   179db:	mov    rax,QWORD PTR [rax+rdx*8]
   179df:	je     17d98 <sched_runstate_process+0x4b8>
   179e5:	lea    rcx,[rip+0x60ac]        # 1da98 <_IO_stdin_used+0xad8>
   179ec:	xor    r15d,r15d
   179ef:	push   rax
   179f0:	mov    r9d,esi
   179f3:	push   rdi
   179f4:	lea    rdx,[rbp+0x58]
   179f8:	lea    rsi,[rip+0x60a9]        # 1daa8 <_IO_stdin_used+0xae8>
   179ff:	mov    edi,0x1
   17a04:	xor    eax,eax
   17a06:	call   44f0 <__printf_chk@plt>
   17a0b:	pop    r9
   17a0d:	pop    r10
   17a0f:	movzx  esi,WORD PTR [r13+0x0]
   17a14:	test   r15d,r15d
   17a17:	mov    eax,esi
   17a19:	jne    17a74 <sched_runstate_process+0x194>
   17a1b:	test   r14d,r14d
   17a1e:	jne    17bf0 <sched_runstate_process+0x310>
   17a24:	cmp    ebx,0x1
   17a27:	je     17bff <sched_runstate_process+0x31f>
   17a2d:	lea    rdx,[rip+0x211a0c]        # 229440 <runstate_name>
   17a34:	movsxd rax,ebx
   17a37:	movzx  ecx,WORD PTR [r13+0x2]
   17a3c:	movsxd rdi,r14d
   17a3f:	sub    rsp,0x8
   17a43:	mov    r8d,esi
   17a46:	push   QWORD PTR [rdx+rdi*8]
   17a49:	mov    rdi,QWORD PTR [rip+0x24d808]        # 265258 <warn>
   17a50:	mov    esi,0x1
   17a55:	mov    r9,QWORD PTR [rdx+rax*8]
   17a59:	lea    rdx,[rip+0x9540]        # 20fa0 <_IO_stdin_used+0x3fe0>
   17a60:	xor    eax,eax
   17a62:	xor    r15d,r15d
   17a65:	call   4560 <__fprintf_chk@plt>
   17a6a:	movzx  esi,WORD PTR [r13+0x0]
   17a6f:	pop    rdi
   17a70:	pop    r8
   17a72:	mov    eax,esi
   17a74:	cmp    ax,0x100
   17a78:	ja     17bb5 <sched_runstate_process+0x2d5>
   17a7e:	movzx  edi,WORD PTR [r13+0x2]
   17a83:	call   11e00 <vcpu_find>
   17a88:	mov    r12,rax
   17a8b:	mov    eax,DWORD PTR [rax+0x28]
   17a8e:	cmp    r14d,0x1
   17a92:	mov    DWORD PTR [r12+0x28],0x6
   17a9b:	mov    DWORD PTR [rsp+0xc],eax
   17a9f:	mov    eax,DWORD PTR [r12+0x2c]
   17aa4:	mov    DWORD PTR [rsp+0x18],eax
   17aa8:	mov    eax,DWORD PTR [r12+0x30]
   17aad:	mov    DWORD PTR [rsp+0x1c],eax
   17ab1:	mov    rax,QWORD PTR [r12+0x38]
   17ab6:	mov    QWORD PTR [rsp+0x10],rax
   17abb:	je     17c10 <sched_runstate_process+0x330>
   17ac1:	movsxd rax,DWORD PTR [r12+0x18]
   17ac6:	cmp    DWORD PTR [r12+0x3bf0],0x1
   17acf:	movsxd rdx,eax
   17ad2:	je     17c30 <sched_runstate_process+0x350>
   17ad8:	cmp    eax,0x6
   17adb:	je     17b6a <sched_runstate_process+0x28a>
   17ae1:	cmp    eax,ebx
   17ae3:	je     17b6a <sched_runstate_process+0x28a>
   17ae9:	cmp    eax,0x4
   17aec:	je     17e00 <sched_runstate_process+0x520>
   17af2:	cmp    DWORD PTR [rsp+0xc],r14d
   17af7:	jne    17b03 <sched_runstate_process+0x223>
   17af9:	cmp    DWORD PTR [rsp+0x18],ebx
   17afd:	je     17f68 <sched_runstate_process+0x688>
   17b03:	mov    rsi,QWORD PTR [r12+0x8]
   17b08:	lea    rdx,[rip+0x211931]        # 229440 <runstate_name>
   17b0f:	movsxd rcx,ebx
   17b12:	sub    rsp,0x8
   17b16:	mov    rdi,QWORD PTR [rip+0x24d73b]        # 265258 <warn>
   17b1d:	mov    rcx,QWORD PTR [rdx+rcx*8]
   17b21:	push   QWORD PTR [rdx+rax*8]
   17b24:	lea    rdx,[rip+0x9655]        # 21180 <_IO_stdin_used+0x41c0>
   17b2b:	mov    r8d,DWORD PTR [rsi+0x8]
   17b2f:	mov    r9d,DWORD PTR [r12]
   17b33:	xor    eax,eax
   17b35:	mov    esi,0x1
   17b3a:	call   4560 <__fprintf_chk@plt>
   17b3f:	movsxd rdx,DWORD PTR [r12+0x18]
   17b44:	mov    DWORD PTR [r12+0x28],ebx
   17b49:	mov    DWORD PTR [r12+0x2c],edx
   17b4e:	mov    rax,QWORD PTR [rbp+0x38]
   17b52:	test   edx,edx
   17b54:	mov    QWORD PTR [r12+0x38],rax
   17b59:	mov    eax,DWORD PTR [rbp+0x4]
   17b5c:	mov    DWORD PTR [r12+0x30],eax
   17b61:	pop    rdi
   17b62:	pop    r8
   17b64:	je     18220 <sched_runstate_process+0x940>
   17b6a:	cmp    r15d,0x1
   17b6e:	je     17d08 <sched_runstate_process+0x428>
   17b74:	test   ebx,ebx
   17b76:	je     17c90 <sched_runstate_process+0x3b0>
   17b7c:	test   edx,edx
   17b7e:	jne    17e70 <sched_runstate_process+0x590>
   17b84:	mov    rdx,QWORD PTR [rbp+0x38]
   17b88:	mov    rdi,QWORD PTR [r12+0x50]
   17b8d:	mov    ecx,r14d
   17b90:	mov    rsi,r12
   17b93:	call   16680 <vcpu_prev_update>
   17b98:	jmp    17cb7 <sched_runstate_process+0x3d7>
   17b9d:	nop    DWORD PTR [rax]
   17ba0:	xor    r14d,r14d
   17ba3:	xor    ebx,ebx
   17ba5:	cmp    ax,0x100
   17ba9:	mov    r15d,0x1
   17baf:	jbe    17a7e <sched_runstate_process+0x19e>
   17bb5:	mov    rdi,QWORD PTR [rip+0x24d69c]        # 265258 <warn>
   17bbc:	add    rsp,0x38
   17bc0:	lea    rcx,[rip+0xb799]        # 23360 <__func__.7461>
   17bc7:	pop    rbx
   17bc8:	pop    rbp
   17bc9:	pop    r12
   17bcb:	pop    r13
   17bcd:	pop    r14
   17bcf:	pop    r15
   17bd1:	lea    rdx,[rip+0x5ee6]        # 1dabe <_IO_stdin_used+0xafe>
   17bd8:	mov    r8d,esi
   17bdb:	mov    r9d,0x100
   17be1:	mov    esi,0x1
   17be6:	xor    eax,eax
   17be8:	jmp    4560 <__fprintf_chk@plt>
   17bed:	nop    DWORD PTR [rax]
   17bf0:	cmp    ebx,0x1
   17bf3:	jne    17bff <sched_runstate_process+0x31f>
   17bf5:	cmp    r14d,0x2
   17bf9:	je     17a2d <sched_runstate_process+0x14d>
   17bff:	xor    r15d,r15d
   17c02:	jmp    17a74 <sched_runstate_process+0x194>
   17c07:	nop    WORD PTR [rax+rax*1+0x0]
   17c10:	cmp    DWORD PTR [r12+0x3bf0],0x1
   17c19:	je     18050 <sched_runstate_process+0x770>
   17c1f:	movsxd rax,DWORD PTR [r12+0x18]
   17c24:	movsxd rdx,eax
   17c27:	jmp    17ad8 <sched_runstate_process+0x1f8>
   17c2c:	nop    DWORD PTR [rax+0x0]
   17c30:	cmp    eax,0x4
   17c33:	je     18090 <sched_runstate_process+0x7b0>
   17c39:	cmp    r14d,0x1
   17c3d:	je     1806d <sched_runstate_process+0x78d>
   17c43:	test   r14d,r14d
   17c46:	jne    17c4d <sched_runstate_process+0x36d>
   17c48:	cmp    ebx,0x1
   17c4b:	je     17c72 <sched_runstate_process+0x392>
   17c4d:	test   ebx,ebx
   17c4f:	sete   r10b
   17c53:	test   BYTE PTR [r12+0x2c010],0x1
   17c5c:	je     180f3 <sched_runstate_process+0x813>
   17c62:	cmp    r14d,0x3
   17c66:	setne  cl
   17c69:	and    r10b,cl
   17c6c:	jne    180e2 <sched_runstate_process+0x802>
   17c72:	cmp    eax,0x6
   17c75:	je     17b6a <sched_runstate_process+0x28a>
   17c7b:	cmp    eax,ebx
   17c7d:	jne    17af2 <sched_runstate_process+0x212>
   17c83:	jmp    17b6a <sched_runstate_process+0x28a>
   17c88:	nop    DWORD PTR [rax+rax*1+0x0]
   17c90:	cmp    edx,0x6
   17c93:	je     182d0 <sched_runstate_process+0x9f0>
   17c99:	test   edx,0xfffffffb
   17c9f:	jne    18250 <sched_runstate_process+0x970>
   17ca5:	mov    rdx,QWORD PTR [rbp+0x38]
   17ca9:	mov    ecx,r14d
   17cac:	mov    rsi,r12
   17caf:	mov    rdi,rbp
   17cb2:	call   16680 <vcpu_prev_update>
   17cb7:	mov    r8d,DWORD PTR [rip+0x2154f6]        # 22d1b4 <P+0x14>
   17cbe:	test   r8d,r8d
   17cc1:	je     17935 <sched_runstate_process+0x55>
   17cc7:	mov    rax,QWORD PTR [r12+0x8]
   17ccc:	mov    r9d,DWORD PTR [rax+0x8]
   17cd0:	cmp    r9d,0x7fff
   17cd7:	je     17935 <sched_runstate_process+0x55>
   17cdd:	test   BYTE PTR [rip+0x2113bd],0x40        # 2290a1 <opt+0x1>
   17ce4:	jne    17f30 <sched_runstate_process+0x650>
   17cea:	mov    rsi,QWORD PTR [rbp+0x38]
   17cee:	add    rsp,0x38
   17cf2:	mov    rdi,r12
   17cf5:	pop    rbx
   17cf6:	pop    rbp
   17cf7:	pop    r12
   17cf9:	pop    r13
   17cfb:	pop    r14
   17cfd:	pop    r15
   17cff:	jmp    15630 <lose_vcpu>
   17d04:	nop    DWORD PTR [rax+0x0]
   17d08:	cmp    edx,0x6
   17d0b:	je     182e0 <sched_runstate_process+0xa00>
   17d11:	cmp    edx,0x4
   17d14:	je     17e18 <sched_runstate_process+0x538>
   17d1a:	test   edx,edx
   17d1c:	jne    17ee8 <sched_runstate_process+0x608>
   17d22:	mov    rax,QWORD PTR [r12+0x50]
   17d27:	cmp    rax,rbp
   17d2a:	je     17d77 <sched_runstate_process+0x497>
   17d2c:	test   rax,rax
   17d2f:	mov    edx,0xffffffff
   17d34:	je     17d39 <sched_runstate_process+0x459>
   17d36:	mov    edx,DWORD PTR [rax+0x4]
   17d39:	mov    rax,QWORD PTR [r12+0x8]
   17d3e:	sub    rsp,0x8
   17d42:	mov    ecx,DWORD PTR [rbp+0x4]
   17d45:	mov    rdi,QWORD PTR [rip+0x24d50c]        # 265258 <warn>
   17d4c:	push   rdx
   17d4d:	lea    rdx,[rip+0x9504]        # 21258 <_IO_stdin_used+0x4298>
   17d54:	mov    r9d,DWORD PTR [r12]
   17d58:	mov    esi,0x1
   17d5d:	mov    r8d,DWORD PTR [rax+0x8]
   17d61:	xor    eax,eax
   17d63:	call   4560 <__fprintf_chk@plt>
   17d68:	cmp    DWORD PTR [rip+0x211371],0x4        # 2290e0 <opt+0x40>
   17d6f:	pop    rcx
   17d70:	pop    rsi
   17d71:	jbe    17f26 <sched_runstate_process+0x646>
   17d77:	mov    rdx,QWORD PTR [rbp+0x38]
   17d7b:	xor    esi,esi
   17d7d:	add    rsp,0x38
   17d81:	mov    rdi,r12
   17d84:	pop    rbx
   17d85:	pop    rbp
   17d86:	pop    r12
   17d88:	pop    r13
   17d8a:	pop    r14
   17d8c:	pop    r15
   17d8e:	jmp    10660 <runstate_update>
   17d93:	nop    DWORD PTR [rax+rax*1+0x0]
   17d98:	mov    r9,QWORD PTR [r13+0xc]
   17d9c:	mov    r10,QWORD PTR [r13+0x4]
   17da0:	lea    rcx,[rip+0x5cf1]        # 1da98 <_IO_stdin_used+0xad8>
   17da7:	xor    r15d,r15d
   17daa:	push   rax
   17dab:	lea    rdx,[rbp+0x58]
   17daf:	push   rdi
   17db0:	push   rsi
   17db1:	lea    rsi,[rip+0x91c0]        # 20f78 <_IO_stdin_used+0x3fb8>
   17db8:	push   r8
   17dba:	mov    edi,0x1
   17dbf:	mov    r8,r10
   17dc2:	xor    eax,eax
   17dc4:	call   44f0 <__printf_chk@plt>
   17dc9:	add    rsp,0x20
   17dcd:	mov    DWORD PTR [rsp+0x8],0x5
   17dd5:	jmp    17a0f <sched_runstate_process+0x12f>
   17dda:	nop    WORD PTR [rax+rax*1+0x0]
   17de0:	mov    r9,QWORD PTR [r13+0xc]
   17de4:	mov    r10,QWORD PTR [r13+0x4]
   17de8:	mov    rdi,rax
   17deb:	xor    r14d,r14d
   17dee:	xor    ebx,ebx
   17df0:	mov    r15d,0x1
   17df6:	lea    rcx,[rip+0x5c89]        # 1da86 <_IO_stdin_used+0xac6>
   17dfd:	jmp    17daa <sched_runstate_process+0x4ca>
   17dff:	nop
   17e00:	test   r14d,r14d
   17e03:	jne    17e90 <sched_runstate_process+0x5b0>
   17e09:	cmp    r15d,0x1
   17e0d:	mov    edx,0x4
   17e12:	jne    17b74 <sched_runstate_process+0x294>
   17e18:	mov    rax,QWORD PTR [r12+0x8]
   17e1d:	mov    r8d,DWORD PTR [r12]
   17e21:	lea    rdx,[rip+0x93a8]        # 211d0 <_IO_stdin_used+0x4210>
   17e28:	mov    rdi,QWORD PTR [rip+0x24d429]        # 265258 <warn>
   17e2f:	mov    esi,0x1
   17e34:	mov    ecx,DWORD PTR [rax+0x8]
   17e37:	xor    eax,eax
   17e39:	call   4560 <__fprintf_chk@plt>
   17e3e:	mov    rsi,QWORD PTR [rbp+0x1a8]
   17e45:	test   rsi,rsi
   17e48:	je     17e5b <sched_runstate_process+0x57b>
   17e4a:	mov    rdx,QWORD PTR [rbp+0x38]
   17e4e:	mov    ecx,0x4
   17e53:	mov    rdi,rbp
   17e56:	call   16680 <vcpu_prev_update>
   17e5b:	mov    rdx,QWORD PTR [rbp+0x38]
   17e5f:	mov    rsi,r12
   17e62:	mov    rdi,rbp
   17e65:	call   16d50 <vcpu_next_update>
   17e6a:	jmp    17d77 <sched_runstate_process+0x497>
   17e6f:	nop
   17e70:	test   r14d,r14d
   17e73:	je     180ac <sched_runstate_process+0x7cc>
   17e79:	cmp    edx,0x6
   17e7c:	je     17935 <sched_runstate_process+0x55>
   17e82:	mov    rdx,QWORD PTR [rbp+0x38]
   17e86:	mov    esi,r14d
   17e89:	jmp    17d7d <sched_runstate_process+0x49d>
   17e8e:	xchg   ax,ax
   17e90:	test   BYTE PTR [rip+0x21120a],0x40        # 2290a1 <opt+0x1>
   17e97:	je     17935 <sched_runstate_process+0x55>
   17e9d:	mov    rax,QWORD PTR [r12+0x8]
   17ea2:	lea    rdx,[rip+0x211597]        # 229440 <runstate_name>
   17ea9:	sub    rsp,0x8
   17ead:	mov    rdi,QWORD PTR [rip+0x24d3a4]        # 265258 <warn>
   17eb4:	lea    rcx,[rip+0xb4a5]        # 23360 <__func__.7461>
   17ebb:	mov    esi,0x1
   17ec0:	push   QWORD PTR [rdx+r14*8]
   17ec4:	mov    r9d,DWORD PTR [r12]
   17ec8:	lea    rdx,[rip+0x9179]        # 21048 <_IO_stdin_used+0x4088>
   17ecf:	mov    r8d,DWORD PTR [rax+0x8]
   17ed3:	xor    eax,eax
   17ed5:	call   4560 <__fprintf_chk@plt>
   17eda:	pop    r9
   17edc:	pop    r10
   17ede:	jmp    17935 <sched_runstate_process+0x55>
   17ee3:	nop    DWORD PTR [rax+rax*1+0x0]
   17ee8:	mov    rax,QWORD PTR [r12+0x8]
   17eed:	mov    r8d,DWORD PTR [r12]
   17ef1:	mov    esi,0x1
   17ef6:	mov    rdi,QWORD PTR [rip+0x24d35b]        # 265258 <warn>
   17efd:	mov    ecx,DWORD PTR [rax+0x8]
   17f00:	lea    rax,[rip+0x211539]        # 229440 <runstate_name>
   17f07:	mov    r9,QWORD PTR [rax+rdx*8]
   17f0b:	lea    rdx,[rip+0x9306]        # 21218 <_IO_stdin_used+0x4258>
   17f12:	xor    eax,eax
   17f14:	call   4560 <__fprintf_chk@plt>
   17f19:	cmp    DWORD PTR [rip+0x2111c0],0x4        # 2290e0 <opt+0x40>
   17f20:	ja     17d77 <sched_runstate_process+0x497>
   17f26:	mov    edi,0x1
   17f2b:	call   4540 <exit@plt>
   17f30:	mov    eax,DWORD PTR [r12]
   17f34:	sub    rsp,0x8
   17f38:	mov    rdi,QWORD PTR [rip+0x24d319]        # 265258 <warn>
   17f3f:	lea    rdx,[rip+0x9342]        # 21288 <_IO_stdin_used+0x42c8>
   17f46:	lea    rcx,[rip+0xb413]        # 23360 <__func__.7461>
   17f4d:	mov    esi,0x1
   17f52:	push   rax
   17f53:	xor    eax,eax
   17f55:	call   4560 <__fprintf_chk@plt>
   17f5a:	pop    rax
   17f5b:	pop    rdx
   17f5c:	jmp    17cea <sched_runstate_process+0x40a>
   17f61:	nop    DWORD PTR [rax+0x0]
   17f68:	mov    r12,QWORD PTR [rbp+0x38]
   17f6c:	cmp    r12,QWORD PTR [rsp+0x10]
   17f71:	jb     1837d <sched_runstate_process+0xa9d>
   17f77:	movsxd rax,DWORD PTR [rsp+0x1c]
   17f7c:	mov    edx,0x1
   17f81:	lea    rbx,[rax*8+0x0]
   17f89:	sub    rbx,rax
   17f8c:	lea    rax,[rip+0x21524d]        # 22d1e0 <P+0x40>
   17f93:	shl    rbx,0x7
   17f97:	add    rbx,rax
   17f9a:	mov    eax,DWORD PTR [rbx+0x1a0]
   17fa0:	or     eax,DWORD PTR [rbp+0x1a0]
   17fa6:	mov    r8d,DWORD PTR [rbx+0x4]
   17faa:	mov    r13,QWORD PTR [rbx+0x198]
   17fb1:	mov    DWORD PTR [rbx+0x1a0],eax
   17fb7:	mov    ecx,DWORD PTR [rbp+0x4]
   17fba:	shl    rdx,cl
   17fbd:	or     eax,edx
   17fbf:	bt     rax,r8
   17fc3:	mov    DWORD PTR [rbx+0x1a0],eax
   17fc9:	jae    183cf <sched_runstate_process+0xaef>
   17fcf:	cmp    BYTE PTR [rip+0x2110cd],0x0        # 2290a3 <opt+0x3>
   17fd6:	js     18414 <sched_runstate_process+0xb34>
   17fdc:	mov    rcx,QWORD PTR [rip+0x24d275]        # 265258 <warn>
   17fe3:	lea    rdi,[rip+0x910e]        # 210f8 <_IO_stdin_used+0x4138>
   17fea:	mov    edx,0x31
   17fef:	mov    esi,0x1
   17ff4:	call   4550 <fwrite@plt>
   17ff9:	movsxd rdx,DWORD PTR [rip+0x2151a0]        # 22d1a0 <P>
   18000:	test   edx,edx
   18002:	js     17935 <sched_runstate_process+0x55>
   18008:	lea    rcx,[rdx*8+0x0]
   18010:	lea    rax,[rip+0x215361]        # 22d378 <P+0x1d8>
   18017:	sub    rcx,rdx
   1801a:	mov    rdx,rcx
   1801d:	shl    rdx,0x7
   18021:	mov    rcx,rdx
   18024:	lea    rdx,[rax+0x380]
   1802b:	add    rdx,rcx
   1802e:	xchg   ax,ax
   18030:	mov    QWORD PTR [rax],0x0
   18037:	mov    DWORD PTR [rax+0x8],0x0
   1803e:	add    rax,0x380
   18044:	cmp    rdx,rax
   18047:	jne    18030 <sched_runstate_process+0x750>
   18049:	jmp    17935 <sched_runstate_process+0x55>
   1804e:	xchg   ax,ax
   18050:	mov    ecx,DWORD PTR [r12+0x3bfc]
   18058:	test   ecx,ecx
   1805a:	jne    18300 <sched_runstate_process+0xa20>
   18060:	movsxd rax,DWORD PTR [r12+0x18]
   18065:	cmp    eax,0x4
   18068:	movsxd rdx,eax
   1806b:	je     18090 <sched_runstate_process+0x7b0>
   1806d:	cmp    ebx,0x2
   18070:	je     18316 <sched_runstate_process+0xa36>
   18076:	test   BYTE PTR [r12+0x2c010],0x1
   1807f:	je     18354 <sched_runstate_process+0xa74>
   18085:	test   ebx,ebx
   18087:	sete   r10b
   1808b:	jmp    17c62 <sched_runstate_process+0x382>
   18090:	cmp    ebx,0x4
   18093:	jne    17e00 <sched_runstate_process+0x520>
   18099:	cmp    r15d,0x1
   1809d:	je     17e18 <sched_runstate_process+0x538>
   180a3:	test   r14d,r14d
   180a6:	jne    17e82 <sched_runstate_process+0x5a2>
   180ac:	cmp    DWORD PTR [rsp+0x8],0x5
   180b1:	jne    180c5 <sched_runstate_process+0x7e5>
   180b3:	mov    rax,QWORD PTR [r13+0x4]
   180b7:	mov    QWORD PTR [r12+0x40],rax
   180bc:	mov    rax,QWORD PTR [r13+0xc]
   180c0:	mov    QWORD PTR [r12+0x48],rax
   180c5:	mov    rdx,QWORD PTR [rbp+0x38]
   180c9:	add    rsp,0x38
   180cd:	mov    rsi,r12
   180d0:	pop    rbx
   180d1:	mov    rdi,rbp
   180d4:	pop    rbp
   180d5:	pop    r12
   180d7:	pop    r13
   180d9:	pop    r14
   180db:	pop    r15
   180dd:	jmp    16d50 <vcpu_next_update>
   180e2:	test   eax,eax
   180e4:	jne    1844b <sched_runstate_process+0xb6b>
   180ea:	and    BYTE PTR [r12+0x2c010],0xfe
   180f3:	cmp    r14d,0x2
   180f7:	jne    17c1f <sched_runstate_process+0x33f>
   180fd:	test   r10b,r10b
   18100:	je     17c1f <sched_runstate_process+0x33f>
   18106:	mov    eax,DWORD PTR [r12+0x2c018]
   1810e:	test   eax,eax
   18110:	je     17c1f <sched_runstate_process+0x33f>
   18116:	lea    r9,[r12+0x16730]
   1811e:	xor    r10d,r10d
   18121:	mov    QWORD PTR [rsp+0x20],r13
   18126:	mov    DWORD PTR [rsp+0x28],ebx
   1812a:	mov    r13,rbp
   1812d:	mov    DWORD PTR [rsp+0x2c],r14d
   18132:	mov    rbx,r9
   18135:	mov    ebp,r10d
   18138:	jmp    1818b <sched_runstate_process+0x8ab>
   1813a:	nop    WORD PTR [rax+rax*1+0x0]
   18140:	test   r14,r14
   18143:	je     18160 <sched_runstate_process+0x880>
   18145:	mov    eax,DWORD PTR [rbx+0xa8]
   1814b:	test   eax,eax
   1814d:	jne    182b0 <sched_runstate_process+0x9d0>
   18153:	test   BYTE PTR [rip+0x210f49],0x20        # 2290a3 <opt+0x3>
   1815a:	jne    18298 <sched_runstate_process+0x9b8>
   18160:	mov    QWORD PTR [rbx+0xb0],0x0
   1816b:	mov    DWORD PTR [rbx+0xa8],0x0
   18175:	add    ebp,0x1
   18178:	add    rbx,0xf8
   1817f:	cmp    ebp,0x15e
   18185:	je     183ad <sched_runstate_process+0xacd>
   1818b:	mov    rax,QWORD PTR [rbx+0xb0]
   18192:	test   rax,rax
   18195:	je     18175 <sched_runstate_process+0x895>
   18197:	xor    r14d,r14d
   1819a:	cmp    rax,0x1
   1819e:	je     181a7 <sched_runstate_process+0x8c7>
   181a0:	mov    r14,QWORD PTR [r13+0x38]
   181a4:	sub    r14,rax
   181a7:	test   BYTE PTR [rip+0x210ef3],0x40        # 2290a1 <opt+0x1>
   181ae:	jne    18200 <sched_runstate_process+0x920>
   181b0:	test   BYTE PTR [rip+0x210ee9],0x8        # 2290a0 <opt>
   181b7:	jne    18140 <sched_runstate_process+0x860>
   181b9:	test   BYTE PTR [rip+0x210ee3],0x20        # 2290a3 <opt+0x3>
   181c0:	je     18160 <sched_runstate_process+0x880>
   181c2:	test   r14,r14
   181c5:	je     18160 <sched_runstate_process+0x880>
   181c7:	mov    r11d,DWORD PTR [rbx+0xa8]
   181ce:	test   r11d,r11d
   181d1:	je     18298 <sched_runstate_process+0x9b8>
   181d7:	cmp    DWORD PTR [r12+0x2c018],0x1
   181e0:	je     1836a <sched_runstate_process+0xa8a>
   181e6:	add    DWORD PTR [rbx+0x38],0x1
   181ea:	lea    rdi,[rbx+0x38]
   181ee:	mov    rsi,r14
   181f1:	call   4a20 <update_cycles.part.5>
   181f6:	jmp    18160 <sched_runstate_process+0x880>
   181fb:	nop    DWORD PTR [rax+rax*1+0x0]
   18200:	mov    ecx,DWORD PTR [rbx+0xa8]
   18206:	lea    rsi,[rip+0x8e0b]        # 21018 <_IO_stdin_used+0x4058>
   1820d:	mov    r8,r14
   18210:	mov    edx,ebp
   18212:	mov    edi,0x1
   18217:	xor    eax,eax
   18219:	call   44f0 <__printf_chk@plt>
   1821e:	jmp    181b0 <sched_runstate_process+0x8d0>
   18220:	mov    rcx,QWORD PTR [rip+0x24d031]        # 265258 <warn>
   18227:	add    rsp,0x38
   1822b:	lea    rdi,[rip+0x58c7]        # 1daf9 <_IO_stdin_used+0xb39>
   18232:	pop    rbx
   18233:	pop    rbp
   18234:	pop    r12
   18236:	pop    r13
   18238:	pop    r14
   1823a:	pop    r15
   1823c:	mov    edx,0xf
   18241:	mov    esi,0x1
   18246:	jmp    4550 <fwrite@plt>
   1824b:	nop    DWORD PTR [rax+rax*1+0x0]
   18250:	mov    rax,QWORD PTR [r12+0x8]
   18255:	mov    r8d,DWORD PTR [r12]
   18259:	mov    esi,0x1
   1825e:	mov    rdi,QWORD PTR [rip+0x24cff3]        # 265258 <warn>
   18265:	mov    ecx,DWORD PTR [rax+0x8]
   18268:	lea    rax,[rip+0x2111d1]        # 229440 <runstate_name>
   1826f:	mov    r9,QWORD PTR [rax+rdx*8]
   18273:	lea    rdx,[rip+0x8f9e]        # 21218 <_IO_stdin_used+0x4258>
   1827a:	xor    eax,eax
   1827c:	call   4560 <__fprintf_chk@plt>
   18281:	cmp    DWORD PTR [rip+0x210e58],0x4        # 2290e0 <opt+0x40>
   18288:	ja     17ca5 <sched_runstate_process+0x3c5>
   1828e:	jmp    17f26 <sched_runstate_process+0x646>
   18293:	nop    DWORD PTR [rax+rax*1+0x0]
   18298:	add    DWORD PTR [rbx+0x70],0x1
   1829c:	lea    rdi,[rbx+0x70]
   182a0:	mov    rsi,r14
   182a3:	call   4a20 <update_cycles.part.5>
   182a8:	jmp    18160 <sched_runstate_process+0x880>
   182ad:	nop    DWORD PTR [rax]
   182b0:	mov    rdi,QWORD PTR [r13+0x38]
   182b4:	mov    rsi,r14
   182b7:	call   7700 <scatterplot_vs_time>
   182bc:	test   BYTE PTR [rip+0x210de0],0x20        # 2290a3 <opt+0x3>
   182c3:	jne    181c7 <sched_runstate_process+0x8e7>
   182c9:	jmp    18160 <sched_runstate_process+0x880>
   182ce:	xchg   ax,ax
   182d0:	mov    rsi,r12
   182d3:	mov    rdi,rbp
   182d6:	call   17790 <vcpu_start>
   182db:	jmp    17ca5 <sched_runstate_process+0x3c5>
   182e0:	add    rsp,0x38
   182e4:	mov    rsi,r12
   182e7:	mov    rdi,rbp
   182ea:	pop    rbx
   182eb:	pop    rbp
   182ec:	pop    r12
   182ee:	pop    r13
   182f0:	pop    r14
   182f2:	pop    r15
   182f4:	jmp    17790 <vcpu_start>
   182f9:	nop    DWORD PTR [rax+0x0]
   18300:	mov    rsi,QWORD PTR [rbp+0x38]
   18304:	lea    rdi,[r12+0x3bf8]
   1830c:	call   10bf0 <hvm_close_vmexit>
   18311:	jmp    17ac1 <sched_runstate_process+0x1e1>
   18316:	test   BYTE PTR [rip+0x210d84],0x40        # 2290a1 <opt+0x1>
   1831d:	je     18346 <sched_runstate_process+0xa66>
   1831f:	mov    rax,QWORD PTR [r12+0x8]
   18324:	mov    ecx,DWORD PTR [r12]
   18328:	lea    rsi,[rip+0x57ac]        # 1dadb <_IO_stdin_used+0xb1b>
   1832f:	mov    edi,0x1
   18334:	mov    edx,DWORD PTR [rax+0x8]
   18337:	xor    eax,eax
   18339:	call   44f0 <__printf_chk@plt>
   1833e:	movsxd rax,DWORD PTR [r12+0x18]
   18343:	movsxd rdx,eax
   18346:	or     BYTE PTR [r12+0x2c010],0x1
   1834f:	jmp    17ad8 <sched_runstate_process+0x1f8>
   18354:	cmp    eax,ebx
   18356:	je     17b6a <sched_runstate_process+0x28a>
   1835c:	cmp    eax,0x6
   1835f:	jne    17af2 <sched_runstate_process+0x212>
   18365:	jmp    17b6a <sched_runstate_process+0x28a>
   1836a:	add    DWORD PTR [rbx],0x1
   1836d:	mov    rsi,r14
   18370:	mov    rdi,rbx
   18373:	call   4a20 <update_cycles.part.5>
   18378:	jmp    181e6 <sched_runstate_process+0x906>
   1837d:	mov    r8,QWORD PTR [rsp+0x10]
   18382:	mov    rdi,QWORD PTR [rip+0x24cecf]        # 265258 <warn>
   18389:	add    rsp,0x38
   1838d:	pop    rbx
   1838e:	mov    rcx,r12
   18391:	lea    rdx,[rip+0x8ce8]        # 21080 <_IO_stdin_used+0x40c0>
   18398:	mov    esi,0x1
   1839d:	pop    rbp
   1839e:	pop    r12
   183a0:	pop    r13
   183a2:	pop    r14
   183a4:	pop    r15
   183a6:	xor    eax,eax
   183a8:	jmp    4560 <__fprintf_chk@plt>
   183ad:	mov    rbp,r13
   183b0:	mov    ebx,DWORD PTR [rsp+0x28]
   183b4:	movsxd r14,DWORD PTR [rsp+0x2c]
   183b9:	mov    r13,QWORD PTR [rsp+0x20]
   183be:	mov    QWORD PTR [r12+0x2c014],0x0
   183ca:	jmp    17c1f <sched_runstate_process+0x33f>
   183cf:	mov    rax,r13
   183d2:	mov    r9,r12
   183d5:	sub    r9,QWORD PTR [rsp+0x10]
   183da:	mov    rdi,QWORD PTR [rip+0x24ce77]        # 265258 <warn>
   183e1:	sub    rsp,0x8
   183e5:	lea    rdx,[rip+0x8d44]        # 21130 <_IO_stdin_used+0x4170>
   183ec:	mov    esi,0x1
   183f1:	lea    rax,[rax+r9*2]
   183f5:	mov    QWORD PTR [rbx+0x198],rax
   183fc:	mov    ecx,DWORD PTR [rbp+0x4]
   183ff:	push   rax
   18400:	push   r13
   18402:	xor    eax,eax
   18404:	push   r8
   18406:	call   4560 <__fprintf_chk@plt>
   1840b:	add    rsp,0x20
   1840f:	jmp    17935 <sched_runstate_process+0x55>
   18414:	mov    rcx,QWORD PTR [rip+0x214025]        # 22c440 <stderr@@GLIBC_2.2.5>
   1841b:	lea    rdi,[rip+0x8ca6]        # 210c8 <_IO_stdin_used+0x4108>
   18422:	mov    edx,0x2a
   18427:	mov    esi,0x1
   1842c:	call   4550 <fwrite@plt>
   18431:	cmp    DWORD PTR [rip+0x210ca8],0x4        # 2290e0 <opt+0x40>
   18438:	jbe    17f26 <sched_runstate_process+0x646>
   1843e:	mov    rax,QWORD PTR [rbx+0x198]
   18445:	mov    r8d,DWORD PTR [rbx+0x4]
   18449:	jmp    183d2 <sched_runstate_process+0xaf2>
   1844b:	mov    rax,QWORD PTR [r12+0x8]
   18450:	lea    rdx,[rip+0x210fe9]        # 229440 <runstate_name>
   18457:	mov    BYTE PTR [rsp+0x20],r10b
   1845c:	mov    r9,QWORD PTR [rip+0x210fdd]        # 229440 <runstate_name>
   18463:	sub    rsp,0x8
   18467:	mov    rdi,QWORD PTR [rip+0x24cdea]        # 265258 <warn>
   1846e:	mov    esi,0x1
   18473:	mov    ecx,DWORD PTR [rax+0x8]
   18476:	movsxd rax,r14d
   18479:	push   QWORD PTR [rdx+rax*8]
   1847c:	mov    r8d,DWORD PTR [r12]
   18480:	lea    rdx,[rip+0x8b51]        # 20fd8 <_IO_stdin_used+0x4018>
   18487:	xor    eax,eax
   18489:	call   4560 <__fprintf_chk@plt>
   1848e:	pop    rax
   1848f:	pop    rdx
   18490:	movzx  r10d,BYTE PTR [rsp+0x20]
   18496:	jmp    180ea <sched_runstate_process+0x80a>
   1849b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000184a0 <sched_process>:
   184a0:	movzx  eax,BYTE PTR [rdi+0x41]
   184a4:	lea    rdx,[rdi+0x30]
   184a8:	and    eax,0xfffffff0
   184ab:	cmp    al,0xf0
   184ad:	je     18560 <sched_process+0xc0>
   184b3:	cmp    al,0x10
   184b5:	je     18668 <sched_process+0x1c8>
   184bb:	push   rbp
   184bc:	push   rbx
   184bd:	mov    rsi,rdi
   184c0:	sub    rsp,0x8
   184c4:	cmp    al,0x80
   184c6:	je     18570 <sched_process+0xd0>
   184cc:	cmp    al,0x20
   184ce:	jne    18590 <sched_process+0xf0>
   184d4:	mov    eax,DWORD PTR [rdi+0x40]
   184d7:	cmp    eax,0x2220c
   184dc:	je     185b8 <sched_process+0x118>
   184e2:	ja     18670 <sched_process+0x1d0>
   184e8:	cmp    eax,0x2200b
   184ed:	je     19271 <sched_process+0xdd1>
   184f3:	jbe    187a0 <sched_process+0x300>
   184f9:	cmp    eax,0x22206
   184fe:	je     192fd <sched_process+0xe5d>
   18504:	jbe    18c00 <sched_process+0x760>
   1850a:	cmp    eax,0x22209
   1850f:	je     18ef6 <sched_process+0xa56>
   18515:	ja     18c96 <sched_process+0x7f6>
   1851b:	cmp    eax,0x22207
   18520:	je     1922d <sched_process+0xd8d>
   18526:	cmp    eax,0x22208
   1852b:	jne    185a2 <sched_process+0x102>
   1852d:	test   BYTE PTR [rip+0x210b6d],0x40        # 2290a1 <opt+0x1>
   18534:	lea    rdx,[rdi+0x58]
   18538:	lea    rsi,[rip+0x57ab]        # 1dcea <_IO_stdin_used+0xd2a>
   1853f:	je     1865b <sched_process+0x1bb>
   18545:	add    rsp,0x8
   18549:	mov    edi,0x1
   1854e:	xor    eax,eax
   18550:	pop    rbx
   18551:	pop    rbp
   18552:	jmp    44f0 <__printf_chk@plt>
   18557:	nop    WORD PTR [rax+rax*1+0x0]
   18560:	cmp    DWORD PTR [rdi+0x40],0x2800a
   18567:	jne    185b0 <sched_process+0x110>
   18569:	jmp    176b0 <sched_switch_process>
   1856e:	xchg   ax,ax
   18570:	mov    edi,DWORD PTR [rdi+0x40]
   18573:	lea    eax,[rdi-0x28001]
   18579:	cmp    eax,0x10
   1857c:	ja     185a2 <sched_process+0x102>
   1857e:	lea    rcx,[rip+0xab77]        # 230fc <_IO_stdin_used+0x613c>
   18585:	movsxd rax,DWORD PTR [rcx+rax*4]
   18589:	add    rax,rcx
   1858c:	jmp    rax
   1858e:	xchg   ax,ax
   18590:	movsxd rax,DWORD PTR [rdi+0x48]
   18594:	add    QWORD PTR [rdi+0x250],rax
   1859b:	add    QWORD PTR [rdi+0x2b0],rax
   185a2:	add    rsp,0x8
   185a6:	mov    rdi,rdx
   185a9:	pop    rbx
   185aa:	pop    rbp
   185ab:	jmp    151f0 <process_generic>
   185b0:	mov    rdi,rdx
   185b3:	jmp    151f0 <process_generic>
   185b8:	test   BYTE PTR [rip+0x210ae2],0x40        # 2290a1 <opt+0x1>
   185bf:	je     1865b <sched_process+0x1bb>
   185c5:	mov    r8,QWORD PTR [rdi+0x50]
   185c9:	mov    edx,0x1
   185ce:	movzx  ecx,BYTE PTR [r8+0x13]
   185d3:	mov    r9,QWORD PTR [r8]
   185d6:	shl    rdx,cl
   185d9:	test   rdx,rdx
   185dc:	js     19616 <sched_process+0x1176>
   185e2:	pxor   xmm2,xmm2
   185e6:	cvtsi2sd xmm2,rdx
   185eb:	mov    r10,QWORD PTR [r8+0x8]
   185ef:	test   r10,r10
   185f2:	js     195f5 <sched_process+0x1155>
   185f8:	pxor   xmm0,xmm0
   185fc:	cvtsi2sd xmm0,r10
   18601:	movsd  xmm3,QWORD PTR [rip+0xb29f]        # 238a8 <__PRETTY_FUNCTION__.5713+0x18>
   18609:	test   r9,r9
   1860c:	mulsd  xmm0,xmm3
   18610:	movapd xmm1,xmm0
   18614:	divsd  xmm1,xmm2
   18618:	js     195c5 <sched_process+0x1125>
   1861e:	pxor   xmm0,xmm0
   18622:	cvtsi2sd xmm0,r9
   18627:	mulsd  xmm0,xmm3
   1862b:	sub    rsp,0x8
   1862f:	movzx  ecx,BYTE PTR [r8+0x12]
   18634:	push   r10
   18636:	movzx  r8d,WORD PTR [r8+0x10]
   1863b:	lea    rdx,[rsi+0x58]
   1863f:	lea    rsi,[rip+0x8f8a]        # 215d0 <_IO_stdin_used+0x4610>
   18646:	mov    edi,0x1
   1864b:	mov    eax,0x2
   18650:	divsd  xmm0,xmm2
   18654:	call   44f0 <__printf_chk@plt>
   18659:	pop    rcx
   1865a:	pop    rsi
   1865b:	add    rsp,0x8
   1865f:	pop    rbx
   18660:	pop    rbp
   18661:	ret    
   18662:	nop    WORD PTR [rax+rax*1+0x0]
   18668:	jmp    178e0 <sched_runstate_process>
   1866d:	nop    DWORD PTR [rax]
   18670:	cmp    eax,0x22801
   18675:	je     193d2 <sched_process+0xf32>
   1867b:	jbe    18700 <sched_process+0x260>
   18681:	cmp    eax,0x22a01
   18686:	je     18fd0 <sched_process+0xb30>
   1868c:	ja     18b40 <sched_process+0x6a0>
   18692:	cmp    eax,0x22804
   18697:	je     190a9 <sched_process+0xc09>
   1869d:	ja     18d26 <sched_process+0x886>
   186a3:	cmp    eax,0x22802
   186a8:	je     192bb <sched_process+0xe1b>
   186ae:	cmp    eax,0x22803
   186b3:	jne    185a2 <sched_process+0x102>
   186b9:	test   BYTE PTR [rip+0x2109e1],0x40        # 2290a1 <opt+0x1>
   186c0:	je     1865b <sched_process+0x1bb>
   186c2:	mov    rax,QWORD PTR [rdi+0x50]
   186c6:	sub    rsp,0x8
   186ca:	lea    rdx,[rdi+0x58]
   186ce:	mov    edi,0x1
   186d3:	mov    esi,DWORD PTR [rax+0xc]
   186d6:	movzx  ecx,WORD PTR [rax+0x2]
   186da:	push   rsi
   186db:	movzx  r8d,WORD PTR [rax]
   186df:	lea    rsi,[rip+0x91da]        # 218c0 <_IO_stdin_used+0x4900>
   186e6:	mov    r9,QWORD PTR [rax+0x4]
   186ea:	xor    eax,eax
   186ec:	call   44f0 <__printf_chk@plt>
   186f1:	pop    r10
   186f3:	pop    r11
   186f5:	jmp    1865b <sched_process+0x1bb>
   186fa:	nop    WORD PTR [rax+rax*1+0x0]
   18700:	cmp    eax,0x22211
   18705:	je     1911b <sched_process+0xc7b>
   1870b:	jbe    18ba8 <sched_process+0x708>
   18711:	cmp    eax,0x22215
   18716:	je     18f13 <sched_process+0xa73>
   1871c:	ja     18db7 <sched_process+0x917>
   18722:	cmp    eax,0x22213
   18727:	je     19419 <sched_process+0xf79>
   1872d:	cmp    eax,0x22214
   18732:	jne    185a2 <sched_process+0x102>
   18738:	test   BYTE PTR [rip+0x210962],0x40        # 2290a1 <opt+0x1>
   1873f:	je     1865b <sched_process+0x1bb>
   18745:	mov    rbx,QWORD PTR [rdi+0x50]
   18749:	sub    rsp,0x8
   1874d:	lea    rdx,[rdi+0x58]
   18751:	lea    rsi,[rip+0x9058]        # 217b0 <_IO_stdin_used+0x47f0>
   18758:	mov    edi,0x1
   1875d:	mov    eax,DWORD PTR [rbx+0x8]
   18760:	movzx  ecx,WORD PTR [rbx+0x2]
   18764:	push   rax
   18765:	movzx  r8d,WORD PTR [rbx]
   18769:	xor    eax,eax
   1876b:	mov    r9d,DWORD PTR [rbx+0xc]
   1876f:	call   44f0 <__printf_chk@plt>
   18774:	mov    edx,DWORD PTR [rbx+0x4]
   18777:	pop    rsi
   18778:	lea    rsi,[rip+0x55b2]        # 1dd31 <_IO_stdin_used+0xd71>
   1877f:	cmp    edx,0xffffffff
   18782:	pop    rdi
   18783:	je     195e6 <sched_process+0x1146>
   18789:	add    rsp,0x8
   1878d:	mov    edi,0x1
   18792:	xor    eax,eax
   18794:	pop    rbx
   18795:	pop    rbp
   18796:	jmp    44f0 <__printf_chk@plt>
   1879b:	nop    DWORD PTR [rax+rax*1+0x0]
   187a0:	cmp    eax,0x22005
   187a5:	je     18ffd <sched_process+0xb5d>
   187ab:	jbe    18c58 <sched_process+0x7b8>
   187b1:	cmp    eax,0x22008
   187b6:	je     19461 <sched_process+0xfc1>
   187bc:	ja     18e29 <sched_process+0x989>
   187c2:	cmp    eax,0x22006
   187c7:	je     193f6 <sched_process+0xf56>
   187cd:	cmp    eax,0x22007
   187d2:	jne    185a2 <sched_process+0x102>
   187d8:	test   BYTE PTR [rip+0x2108c2],0x40        # 2290a1 <opt+0x1>
   187df:	je     1865b <sched_process+0x1bb>
   187e5:	mov    rax,QWORD PTR [rdi+0x50]
   187e9:	lea    rdx,[rdi+0x58]
   187ed:	lea    rsi,[rip+0x54a2]        # 1dc96 <_IO_stdin_used+0xcd6>
   187f4:	mov    r8d,DWORD PTR [rax+0x4]
   187f8:	mov    ecx,DWORD PTR [rax]
   187fa:	add    rsp,0x8
   187fe:	mov    edi,0x1
   18803:	xor    eax,eax
   18805:	pop    rbx
   18806:	pop    rbp
   18807:	jmp    44f0 <__printf_chk@plt>
   1880c:	nop    DWORD PTR [rax+0x0]
   18810:	test   BYTE PTR [rip+0x21088a],0x40        # 2290a1 <opt+0x1>
   18817:	je     1865b <sched_process+0x1bb>
   1881d:	mov    r10,QWORD PTR [rsi+0x50]
   18821:	mov    edx,0x10624dd3
   18826:	sub    rsp,0x8
   1882a:	mov    edi,0x1
   1882f:	mov    ecx,DWORD PTR [r10+0x8]
   18833:	mov    eax,ecx
   18835:	mul    edx
   18837:	shr    edx,0x6
   1883a:	mov    r9d,edx
   1883d:	lea    rdx,[rsi+0x58]
   18841:	lea    rsi,[rip+0x8a80]        # 212c8 <_IO_stdin_used+0x4308>
   18848:	imul   eax,r9d,0x3e8
   1884f:	sub    ecx,eax
   18851:	xor    eax,eax
   18853:	push   rcx
   18854:	mov    r8d,DWORD PTR [r10+0x4]
   18858:	mov    ecx,DWORD PTR [r10]
   1885b:	call   44f0 <__printf_chk@plt>
   18860:	pop    r8
   18862:	pop    r9
   18864:	jmp    1865b <sched_process+0x1bb>
   18869:	nop    DWORD PTR [rax+0x0]
   18870:	test   BYTE PTR [rip+0x21082a],0x40        # 2290a1 <opt+0x1>
   18877:	je     1865b <sched_process+0x1bb>
   1887d:	mov    rax,QWORD PTR [rsi+0x50]
   18881:	lea    rdx,[rsi+0x58]
   18885:	lea    rcx,[rip+0x5366]        # 1dbf2 <_IO_stdin_used+0xc32>
   1888c:	mov    r9d,DWORD PTR [rax+0x4]
   18890:	mov    r8d,DWORD PTR [rax]
   18893:	add    rsp,0x8
   18897:	lea    rsi,[rip+0x4f03]        # 1d7a1 <_IO_stdin_used+0x7e1>
   1889e:	mov    edi,0x1
   188a3:	pop    rbx
   188a4:	pop    rbp
   188a5:	xor    eax,eax
   188a7:	jmp    44f0 <__printf_chk@plt>
   188ac:	nop    DWORD PTR [rax+0x0]
   188b0:	test   BYTE PTR [rip+0x2107ea],0x40        # 2290a1 <opt+0x1>
   188b7:	je     1865b <sched_process+0x1bb>
   188bd:	mov    rax,QWORD PTR [rsi+0x50]
   188c1:	lea    rdx,[rsi+0x58]
   188c5:	lea    rcx,[rip+0x531b]        # 1dbe7 <_IO_stdin_used+0xc27>
   188cc:	mov    r9d,DWORD PTR [rax+0x4]
   188d0:	mov    r8d,DWORD PTR [rax]
   188d3:	jmp    18893 <sched_process+0x3f3>
   188d5:	nop    DWORD PTR [rax]
   188d8:	test   BYTE PTR [rip+0x2107c2],0x40        # 2290a1 <opt+0x1>
   188df:	je     1865b <sched_process+0x1bb>
   188e5:	mov    rax,QWORD PTR [rsi+0x50]
   188e9:	lea    rdx,[rsi+0x58]
   188ed:	lea    rcx,[rip+0x52e9]        # 1dbdd <_IO_stdin_used+0xc1d>
   188f4:	mov    r9d,DWORD PTR [rax+0x4]
   188f8:	mov    r8d,DWORD PTR [rax]
   188fb:	jmp    18893 <sched_process+0x3f3>
   188fd:	nop    DWORD PTR [rax]
   18900:	test   BYTE PTR [rip+0x21079a],0x40        # 2290a1 <opt+0x1>
   18907:	je     1865b <sched_process+0x1bb>
   1890d:	mov    rax,QWORD PTR [rsi+0x50]
   18911:	lea    rdx,[rsi+0x58]
   18915:	lea    rcx,[rip+0x52b6]        # 1dbd2 <_IO_stdin_used+0xc12>
   1891c:	mov    r9d,DWORD PTR [rax+0x4]
   18920:	mov    r8d,DWORD PTR [rax]
   18923:	jmp    18893 <sched_process+0x3f3>
   18928:	nop    DWORD PTR [rax+rax*1+0x0]
   18930:	test   BYTE PTR [rip+0x21076a],0x40        # 2290a1 <opt+0x1>
   18937:	je     1865b <sched_process+0x1bb>
   1893d:	mov    rax,QWORD PTR [rsi+0x50]
   18941:	lea    rdx,[rsi+0x58]
   18945:	lea    rsi,[rip+0x52cd]        # 1dc19 <_IO_stdin_used+0xc59>
   1894c:	mov    ecx,DWORD PTR [rax]
   1894e:	add    rsp,0x8
   18952:	mov    edi,0x1
   18957:	xor    eax,eax
   18959:	pop    rbx
   1895a:	pop    rbp
   1895b:	jmp    44f0 <__printf_chk@plt>
   18960:	test   BYTE PTR [rip+0x21073a],0x40        # 2290a1 <opt+0x1>
   18967:	je     1865b <sched_process+0x1bb>
   1896d:	mov    rax,QWORD PTR [rsi+0x50]
   18971:	lea    rdx,[rip+0x51a0]        # 1db18 <_IO_stdin_used+0xb58>
   18978:	lea    rcx,[rip+0x518a]        # 1db09 <_IO_stdin_used+0xb49>
   1897f:	cmp    edi,0x28007
   18985:	mov    edi,0x1
   1898a:	cmovne rcx,rdx
   1898e:	sub    rsp,0x8
   18992:	lea    rdx,[rsi+0x58]
   18996:	mov    r8d,DWORD PTR [rax+0x8]
   1899a:	lea    rsi,[rip+0x525c]        # 1dbfd <_IO_stdin_used+0xc3d>
   189a1:	push   r8
   189a3:	mov    r9d,DWORD PTR [rax+0x4]
   189a7:	mov    r8d,DWORD PTR [rax]
   189aa:	xor    eax,eax
   189ac:	call   44f0 <__printf_chk@plt>
   189b1:	pop    r10
   189b3:	pop    r11
   189b5:	jmp    1865b <sched_process+0x1bb>
   189ba:	nop    WORD PTR [rax+rax*1+0x0]
   189c0:	test   BYTE PTR [rip+0x2106da],0x40        # 2290a1 <opt+0x1>
   189c7:	je     1865b <sched_process+0x1bb>
   189cd:	add    rsp,0x8
   189d1:	mov    rdi,rdx
   189d4:	pop    rbx
   189d5:	pop    rbp
   189d6:	jmp    120f0 <dump_sched_switch>
   189db:	nop    DWORD PTR [rax+rax*1+0x0]
   189e0:	test   BYTE PTR [rip+0x2106ba],0x40        # 2290a1 <opt+0x1>
   189e7:	je     1865b <sched_process+0x1bb>
   189ed:	mov    rbx,QWORD PTR [rsi+0x50]
   189f1:	lea    rdx,[rsi+0x58]
   189f5:	lea    rsi,[rip+0x5233]        # 1dc2f <_IO_stdin_used+0xc6f>
   189fc:	xor    eax,eax
   189fe:	mov    edi,0x1
   18a03:	mov    ecx,DWORD PTR [rbx]
   18a05:	mov    r8d,DWORD PTR [rbx+0x4]
   18a09:	call   44f0 <__printf_chk@plt>
   18a0e:	mov    ecx,DWORD PTR [rbx+0x8]
   18a11:	test   ecx,ecx
   18a13:	je     18a3c <sched_process+0x59c>
   18a15:	mov    eax,ecx
   18a17:	mov    edx,0x10624dd3
   18a1c:	lea    rsi,[rip+0x5229]        # 1dc4c <_IO_stdin_used+0xc8c>
   18a23:	mul    edx
   18a25:	mov    edi,0x1
   18a2a:	shr    edx,0x6
   18a2d:	imul   eax,edx,0x3e8
   18a33:	sub    ecx,eax
   18a35:	xor    eax,eax
   18a37:	call   44f0 <__printf_chk@plt>
   18a3c:	mov    ecx,DWORD PTR [rbx+0xc]
   18a3f:	test   ecx,ecx
   18a41:	jle    18a71 <sched_process+0x5d1>
   18a43:	mov    edx,0x10624dd3
   18a48:	mov    eax,ecx
   18a4a:	imul   edx
   18a4c:	mov    eax,ecx
   18a4e:	sar    edx,0x6
   18a51:	lea    rsi,[rip+0x520f]        # 1dc67 <_IO_stdin_used+0xca7>
   18a58:	sar    eax,0x1f
   18a5b:	mov    edi,0x1
   18a60:	sub    edx,eax
   18a62:	imul   eax,edx,0x3e8
   18a68:	sub    ecx,eax
   18a6a:	xor    eax,eax
   18a6c:	call   44f0 <__printf_chk@plt>
   18a71:	add    rsp,0x8
   18a75:	mov    edi,0xa
   18a7a:	pop    rbx
   18a7b:	pop    rbp
   18a7c:	jmp    4340 <putchar@plt>
   18a81:	nop    DWORD PTR [rax+0x0]
   18a88:	test   BYTE PTR [rip+0x210612],0x40        # 2290a1 <opt+0x1>
   18a8f:	je     1865b <sched_process+0x1bb>
   18a95:	mov    rax,QWORD PTR [rsi+0x50]
   18a99:	lea    rdx,[rsi+0x58]
   18a9d:	lea    rsi,[rip+0x5110]        # 1dbb4 <_IO_stdin_used+0xbf4>
   18aa4:	mov    ecx,DWORD PTR [rax]
   18aa6:	jmp    1894e <sched_process+0x4ae>
   18aab:	nop    DWORD PTR [rax+rax*1+0x0]
   18ab0:	test   BYTE PTR [rip+0x2105ea],0x40        # 2290a1 <opt+0x1>
   18ab7:	je     1865b <sched_process+0x1bb>
   18abd:	mov    rax,QWORD PTR [rsi+0x50]
   18ac1:	lea    rdx,[rsi+0x58]
   18ac5:	lea    rsi,[rip+0x50cd]        # 1db99 <_IO_stdin_used+0xbd9>
   18acc:	mov    ecx,DWORD PTR [rax]
   18ace:	jmp    1894e <sched_process+0x4ae>
   18ad3:	nop    DWORD PTR [rax+rax*1+0x0]
   18ad8:	test   BYTE PTR [rip+0x2105c2],0x40        # 2290a1 <opt+0x1>
   18adf:	je     1865b <sched_process+0x1bb>
   18ae5:	mov    rbp,QWORD PTR [rsi+0x50]
   18ae9:	mov    ebx,0x10624dd3
   18aee:	sub    rsp,0x8
   18af2:	mov    edi,0x1
   18af7:	mov    ecx,DWORD PTR [rbp+0x8]
   18afa:	mov    eax,ecx
   18afc:	mul    ebx
   18afe:	shr    edx,0x6
   18b01:	mov    r9d,edx
   18b04:	lea    rdx,[rsi+0x58]
   18b08:	lea    rsi,[rip+0x87e9]        # 212f8 <_IO_stdin_used+0x4338>
   18b0f:	imul   eax,r9d,0x3e8
   18b16:	sub    ecx,eax
   18b18:	xor    eax,eax
   18b1a:	push   rcx
   18b1b:	mov    ecx,DWORD PTR [rbp+0x0]
   18b1e:	mov    r8d,DWORD PTR [rbp+0x4]
   18b22:	call   44f0 <__printf_chk@plt>
   18b27:	mov    ecx,DWORD PTR [rbp+0xc]
   18b2a:	pop    rsi
   18b2b:	pop    rdi
   18b2c:	test   ecx,ecx
   18b2e:	jle    18a71 <sched_process+0x5d1>
   18b34:	mov    eax,ecx
   18b36:	imul   ebx
   18b38:	jmp    18a4c <sched_process+0x5ac>
   18b3d:	nop    DWORD PTR [rax]
   18b40:	cmp    eax,0x22a04
   18b45:	je     1918c <sched_process+0xcec>
   18b4b:	ja     18df6 <sched_process+0x956>
   18b51:	cmp    eax,0x22a02
   18b56:	je     1915f <sched_process+0xcbf>
   18b5c:	cmp    eax,0x22a03
   18b61:	jne    185a2 <sched_process+0x102>
   18b67:	test   BYTE PTR [rip+0x210533],0x40        # 2290a1 <opt+0x1>
   18b6e:	je     1865b <sched_process+0x1bb>
   18b74:	mov    rax,QWORD PTR [rdi+0x50]
   18b78:	lea    rdx,[rdi+0x58]
   18b7c:	lea    rsi,[rip+0x8e2d]        # 219b0 <_IO_stdin_used+0x49f0>
   18b83:	movzx  ecx,WORD PTR [rax+0x2]
   18b87:	movzx  r8d,WORD PTR [rax]
   18b8b:	mov    r9d,DWORD PTR [rax+0x4]
   18b8f:	add    rsp,0x8
   18b93:	mov    edi,0x1
   18b98:	xor    eax,eax
   18b9a:	pop    rbx
   18b9b:	pop    rbp
   18b9c:	jmp    44f0 <__printf_chk@plt>
   18ba1:	nop    DWORD PTR [rax+0x0]
   18ba8:	cmp    eax,0x2220e
   18bad:	je     193a9 <sched_process+0xf09>
   18bb3:	jb     19366 <sched_process+0xec6>
   18bb9:	cmp    eax,0x2220f
   18bbe:	je     19321 <sched_process+0xe81>
   18bc4:	cmp    eax,0x22210
   18bc9:	jne    185a2 <sched_process+0x102>
   18bcf:	test   BYTE PTR [rip+0x2104cb],0x40        # 2290a1 <opt+0x1>
   18bd6:	je     1865b <sched_process+0x1bb>
   18bdc:	mov    rax,QWORD PTR [rdi+0x50]
   18be0:	lea    rdx,[rdi+0x58]
   18be4:	lea    rsi,[rip+0x8afd]        # 216e8 <_IO_stdin_used+0x4728>
   18beb:	movzx  ecx,WORD PTR [rax]
   18bee:	mov    r9d,DWORD PTR [rax+0x4]
   18bf2:	movzx  r8d,WORD PTR [rax+0x2]
   18bf7:	jmp    18b8f <sched_process+0x6ef>
   18bf9:	nop    DWORD PTR [rax+0x0]
   18c00:	cmp    eax,0x22203
   18c05:	je     194f8 <sched_process+0x1058>
   18c0b:	ja     18e9b <sched_process+0x9fb>
   18c11:	cmp    eax,0x22201
   18c16:	je     1865b <sched_process+0x1bb>
   18c1c:	cmp    eax,0x22202
   18c21:	jne    185a2 <sched_process+0x102>
   18c27:	test   BYTE PTR [rip+0x210473],0x40        # 2290a1 <opt+0x1>
   18c2e:	je     1865b <sched_process+0x1bb>
   18c34:	mov    rax,QWORD PTR [rdi+0x50]
   18c38:	lea    rdx,[rdi+0x58]
   18c3c:	lea    rsi,[rip+0x8805]        # 21448 <_IO_stdin_used+0x4488>
   18c43:	movzx  ecx,WORD PTR [rax+0x2]
   18c47:	mov    r9d,DWORD PTR [rax+0x4]
   18c4b:	movzx  r8d,WORD PTR [rax]
   18c4f:	jmp    18b8f <sched_process+0x6ef>
   18c54:	nop    DWORD PTR [rax+0x0]
   18c58:	cmp    eax,0x22003
   18c5d:	ja     1907e <sched_process+0xbde>
   18c63:	cmp    eax,0x22002
   18c68:	jae    19028 <sched_process+0xb88>
   18c6e:	cmp    eax,0x22001
   18c73:	jne    185a2 <sched_process+0x102>
   18c79:	test   BYTE PTR [rip+0x210421],0x40        # 2290a1 <opt+0x1>
   18c80:	lea    rdx,[rdi+0x58]
   18c84:	lea    rsi,[rip+0x4ff1]        # 1dc7c <_IO_stdin_used+0xcbc>
   18c8b:	je     1865b <sched_process+0x1bb>
   18c91:	jmp    18545 <sched_process+0xa5>
   18c96:	cmp    eax,0x2220a
   18c9b:	je     190ed <sched_process+0xc4d>
   18ca1:	cmp    eax,0x2220b
   18ca6:	jne    185a2 <sched_process+0x102>
   18cac:	test   BYTE PTR [rip+0x2103ee],0x40        # 2290a1 <opt+0x1>
   18cb3:	je     1865b <sched_process+0x1bb>
   18cb9:	mov    r8,QWORD PTR [rdi+0x50]
   18cbd:	mov    r9,QWORD PTR [r8]
   18cc0:	test   r9,r9
   18cc3:	js     19652 <sched_process+0x11b2>
   18cc9:	pxor   xmm0,xmm0
   18ccd:	cvtsi2sd xmm0,r9
   18cd2:	mov    ecx,DWORD PTR [r8+0xc]
   18cd6:	mov    edx,0x1
   18cdb:	mulsd  xmm0,QWORD PTR [rip+0xabc5]        # 238a8 <__PRETTY_FUNCTION__.5713+0x18>
   18ce3:	shl    rdx,cl
   18ce6:	test   rdx,rdx
   18ce9:	js     19634 <sched_process+0x1194>
   18cef:	pxor   xmm1,xmm1
   18cf3:	cvtsi2sd xmm1,rdx
   18cf8:	divsd  xmm0,xmm1
   18cfc:	movzx  ecx,WORD PTR [r8+0xa]
   18d01:	movzx  r8d,WORD PTR [r8+0x8]
   18d06:	add    rsp,0x8
   18d0a:	lea    rdx,[rsi+0x58]
   18d0e:	lea    rsi,[rip+0x887b]        # 21590 <_IO_stdin_used+0x45d0>
   18d15:	pop    rbx
   18d16:	pop    rbp
   18d17:	mov    edi,0x1
   18d1c:	mov    eax,0x1
   18d21:	jmp    44f0 <__printf_chk@plt>
   18d26:	cmp    eax,0x22805
   18d2b:	je     18fb3 <sched_process+0xb13>
   18d31:	cmp    eax,0x22806
   18d36:	jne    185a2 <sched_process+0x102>
   18d3c:	test   BYTE PTR [rip+0x21035e],0x40        # 2290a1 <opt+0x1>
   18d43:	je     1865b <sched_process+0x1bb>
   18d49:	mov    rdx,QWORD PTR [rdi+0x50]
   18d4d:	lea    rax,[rip+0x4e17]        # 1db6b <_IO_stdin_used+0xbab>
   18d54:	lea    rdi,[rip+0x4e1a]        # 1db75 <_IO_stdin_used+0xbb5>
   18d5b:	lea    r9,[rip+0x4dd5]        # 1db37 <_IO_stdin_used+0xb77>
   18d62:	lea    r8,[rip+0x4ddc]        # 1db45 <_IO_stdin_used+0xb85>
   18d69:	movzx  ecx,BYTE PTR [rdx+0x3]
   18d6d:	test   cl,0xf0
   18d70:	cmove  rax,rdi
   18d74:	and    ecx,0xf
   18d77:	lea    rcx,[rip+0x4dc0]        # 1db3e <_IO_stdin_used+0xb7e>
   18d7e:	mov    edi,0x1
   18d83:	cmove  r9,rcx
   18d87:	cmp    BYTE PTR [rdx+0x2],0x0
   18d8b:	lea    rcx,[rip+0x4cf3]        # 1da85 <_IO_stdin_used+0xac5>
   18d92:	cmove  r8,rcx
   18d96:	movzx  ecx,WORD PTR [rdx]
   18d99:	sub    rsp,0x8
   18d9d:	push   rax
   18d9e:	lea    rdx,[rsi+0x58]
   18da2:	lea    rsi,[rip+0x8b8f]        # 21938 <_IO_stdin_used+0x4978>
   18da9:	xor    eax,eax
   18dab:	call   44f0 <__printf_chk@plt>
   18db0:	pop    rsi
   18db1:	pop    rdi
   18db2:	jmp    1865b <sched_process+0x1bb>
   18db7:	cmp    eax,0x22216
   18dbc:	je     191d1 <sched_process+0xd31>
   18dc2:	cmp    eax,0x22217
   18dc7:	jne    185a2 <sched_process+0x102>
   18dcd:	test   BYTE PTR [rip+0x2102cd],0x40        # 2290a1 <opt+0x1>
   18dd4:	je     1865b <sched_process+0x1bb>
   18dda:	mov    rax,QWORD PTR [rdi+0x50]
   18dde:	lea    rdx,[rdi+0x58]
   18de2:	lea    rsi,[rip+0x8a6f]        # 21858 <_IO_stdin_used+0x4898>
   18de9:	movzx  ecx,WORD PTR [rax+0x2]
   18ded:	movzx  r8d,WORD PTR [rax]
   18df1:	jmp    187fa <sched_process+0x35a>
   18df6:	cmp    eax,0x22a05
   18dfb:	je     19488 <sched_process+0xfe8>
   18e01:	cmp    eax,0x22a06
   18e06:	jne    185a2 <sched_process+0x102>
   18e0c:	test   BYTE PTR [rip+0x21028e],0x40        # 2290a1 <opt+0x1>
   18e13:	je     1865b <sched_process+0x1bb>
   18e19:	lea    rdx,[rdi+0x58]
   18e1d:	lea    rsi,[rip+0x4f8a]        # 1ddae <_IO_stdin_used+0xdee>
   18e24:	jmp    18545 <sched_process+0xa5>
   18e29:	cmp    eax,0x22009
   18e2e:	je     19559 <sched_process+0x10b9>
   18e34:	cmp    eax,0x2200a
   18e39:	jne    185a2 <sched_process+0x102>
   18e3f:	test   BYTE PTR [rip+0x21025b],0x40        # 2290a1 <opt+0x1>
   18e46:	je     1865b <sched_process+0x1bb>
   18e4c:	mov    r10,QWORD PTR [rdi+0x50]
   18e50:	mov    edx,0x10624dd3
   18e55:	sub    rsp,0x8
   18e59:	lea    rsi,[rip+0x8598]        # 213f8 <_IO_stdin_used+0x4438>
   18e60:	mov    r8d,DWORD PTR [r10+0x4]
   18e64:	movzx  ecx,WORD PTR [r10+0x2]
   18e69:	mov    eax,r8d
   18e6c:	mul    edx
   18e6e:	shr    edx,0x6
   18e71:	mov    r9d,edx
   18e74:	lea    rdx,[rdi+0x58]
   18e78:	mov    edi,0x1
   18e7d:	imul   eax,r9d,0x3e8
   18e84:	sub    r8d,eax
   18e87:	xor    eax,eax
   18e89:	push   r8
   18e8b:	movzx  r8d,WORD PTR [r10]
   18e8f:	call   44f0 <__printf_chk@plt>
   18e94:	pop    rbx
   18e95:	pop    rbp
   18e96:	jmp    1865b <sched_process+0x1bb>
   18e9b:	cmp    eax,0x22204
   18ea0:	je     1865b <sched_process+0x1bb>
   18ea6:	cmp    eax,0x22205
   18eab:	jne    185a2 <sched_process+0x102>
   18eb1:	test   BYTE PTR [rip+0x2101e9],0x40        # 2290a1 <opt+0x1>
   18eb8:	je     1865b <sched_process+0x1bb>
   18ebe:	mov    rax,QWORD PTR [rdi+0x50]
   18ec2:	sub    rsp,0x8
   18ec6:	lea    rdx,[rdi+0x58]
   18eca:	mov    edi,0x1
   18ecf:	mov    esi,DWORD PTR [rax+0x8]
   18ed2:	movzx  ecx,WORD PTR [rax+0x2]
   18ed6:	push   rsi
   18ed7:	movzx  r8d,WORD PTR [rax]
   18edb:	lea    rsi,[rip+0x85c6]        # 214a8 <_IO_stdin_used+0x44e8>
   18ee2:	mov    r9d,DWORD PTR [rax+0x4]
   18ee6:	xor    eax,eax
   18ee8:	call   44f0 <__printf_chk@plt>
   18eed:	pop    r9
   18eef:	pop    r10
   18ef1:	jmp    1865b <sched_process+0x1bb>
   18ef6:	test   BYTE PTR [rip+0x2101a4],0x40        # 2290a1 <opt+0x1>
   18efd:	lea    rdx,[rdi+0x58]
   18f01:	lea    rsi,[rip+0x4dfd]        # 1dd05 <_IO_stdin_used+0xd45>
   18f08:	je     1865b <sched_process+0x1bb>
   18f0e:	jmp    18545 <sched_process+0xa5>
   18f13:	test   BYTE PTR [rip+0x210187],0x40        # 2290a1 <opt+0x1>
   18f1a:	je     1865b <sched_process+0x1bb>
   18f20:	mov    rax,QWORD PTR [rdi+0x50]
   18f24:	lea    r8,[rip+0x4c40]        # 1db6b <_IO_stdin_used+0xbab>
   18f2b:	lea    rdx,[rip+0x4c43]        # 1db75 <_IO_stdin_used+0xbb5>
   18f32:	lea    r10,[rip+0x4b4c]        # 1da85 <_IO_stdin_used+0xac5>
   18f39:	lea    r11,[rip+0x4bfe]        # 1db3e <_IO_stdin_used+0xb7e>
   18f40:	cmp    BYTE PTR [rax+0x7],0x0
   18f44:	cmove  r8,rdx
   18f48:	cmp    BYTE PTR [rax+0x5],0x0
   18f4c:	je     18f6b <sched_process+0xacb>
   18f4e:	cmp    BYTE PTR [rax+0x6],0x0
   18f52:	lea    r10,[rip+0x4c35]        # 1db8e <_IO_stdin_used+0xbce>
   18f59:	lea    rdx,[rip+0x4c23]        # 1db83 <_IO_stdin_used+0xbc3>
   18f60:	lea    r11,[rip+0x4bd0]        # 1db37 <_IO_stdin_used+0xb77>
   18f67:	cmove  r10,rdx
   18f6b:	cmp    BYTE PTR [rax+0x4],0x0
   18f6f:	lea    rdx,[rip+0x4b0f]        # 1da85 <_IO_stdin_used+0xac5>
   18f76:	lea    r9,[rip+0x4bc8]        # 1db45 <_IO_stdin_used+0xb85>
   18f7d:	movzx  ecx,WORD PTR [rax]
   18f80:	mov    edi,0x1
   18f85:	cmove  r9,rdx
   18f89:	sub    rsp,0x8
   18f8d:	lea    rdx,[rsi+0x58]
   18f91:	push   r8
   18f93:	push   r10
   18f95:	lea    rsi,[rip+0x885c]        # 217f8 <_IO_stdin_used+0x4838>
   18f9c:	push   r11
   18f9e:	movzx  r8d,WORD PTR [rax+0x2]
   18fa3:	xor    eax,eax
   18fa5:	call   44f0 <__printf_chk@plt>
   18faa:	add    rsp,0x20
   18fae:	jmp    1865b <sched_process+0x1bb>
   18fb3:	test   BYTE PTR [rip+0x2100e7],0x40        # 2290a1 <opt+0x1>
   18fba:	lea    rdx,[rdi+0x58]
   18fbe:	lea    rsi,[rip+0x4d9d]        # 1dd62 <_IO_stdin_used+0xda2>
   18fc5:	je     1865b <sched_process+0x1bb>
   18fcb:	jmp    18545 <sched_process+0xa5>
   18fd0:	test   BYTE PTR [rip+0x2100ca],0x40        # 2290a1 <opt+0x1>
   18fd7:	je     1865b <sched_process+0x1bb>
   18fdd:	mov    rax,QWORD PTR [rdi+0x50]
   18fe1:	lea    rdx,[rdi+0x58]
   18fe5:	lea    rsi,[rip+0x8974]        # 21960 <_IO_stdin_used+0x49a0>
   18fec:	movzx  ecx,WORD PTR [rax+0x2]
   18ff0:	mov    r9d,DWORD PTR [rax+0x4]
   18ff4:	movzx  r8d,WORD PTR [rax]
   18ff8:	jmp    18b8f <sched_process+0x6ef>
   18ffd:	test   BYTE PTR [rip+0x21009d],0x40        # 2290a1 <opt+0x1>
   19004:	je     1865b <sched_process+0x1bb>
   1900a:	mov    rax,QWORD PTR [rdi+0x50]
   1900e:	lea    rdx,[rdi+0x58]
   19012:	lea    rsi,[rip+0x8377]        # 21390 <_IO_stdin_used+0x43d0>
   19019:	mov    ecx,DWORD PTR [rax+0x8]
   1901c:	mov    r9d,DWORD PTR [rax+0x4]
   19020:	mov    r8d,DWORD PTR [rax]
   19023:	jmp    18b8f <sched_process+0x6ef>
   19028:	test   BYTE PTR [rip+0x210072],0x40        # 2290a1 <opt+0x1>
   1902f:	je     1865b <sched_process+0x1bb>
   19035:	mov    r8,QWORD PTR [rdi+0x50]
   19039:	cmp    eax,0x22002
   1903e:	lea    rcx,[rip+0x4ae7]        # 1db2c <_IO_stdin_used+0xb6c>
   19045:	lea    rax,[rip+0x4ae6]        # 1db32 <_IO_stdin_used+0xb72>
   1904c:	lea    rdx,[rsi+0x58]
   19050:	lea    rsi,[rip+0x82d9]        # 21330 <_IO_stdin_used+0x4370>
   19057:	mov    edi,DWORD PTR [r8+0x8]
   1905b:	cmovne rcx,rax
   1905f:	sub    rsp,0x8
   19063:	xor    eax,eax
   19065:	push   rdi
   19066:	mov    r9d,DWORD PTR [r8+0x4]
   1906a:	mov    edi,0x1
   1906f:	mov    r8d,DWORD PTR [r8]
   19072:	call   44f0 <__printf_chk@plt>
   19077:	pop    rax
   19078:	pop    rdx
   19079:	jmp    1865b <sched_process+0x1bb>
   1907e:	test   BYTE PTR [rip+0x21001c],0x40        # 2290a1 <opt+0x1>
   19085:	je     1865b <sched_process+0x1bb>
   1908b:	mov    rax,QWORD PTR [rdi+0x50]
   1908f:	lea    rdx,[rdi+0x58]
   19093:	lea    rsi,[rip+0x82c6]        # 21360 <_IO_stdin_used+0x43a0>
   1909a:	mov    ecx,DWORD PTR [rax+0x4]
   1909d:	mov    r9d,DWORD PTR [rax]
   190a0:	mov    r8d,DWORD PTR [rax+0x8]
   190a4:	jmp    18b8f <sched_process+0x6ef>
   190a9:	test   BYTE PTR [rip+0x20fff1],0x40        # 2290a1 <opt+0x1>
   190b0:	je     1865b <sched_process+0x1bb>
   190b6:	mov    rax,QWORD PTR [rdi+0x50]
   190ba:	sub    rsp,0x8
   190be:	lea    rdx,[rdi+0x58]
   190c2:	lea    rsi,[rip+0x882f]        # 218f8 <_IO_stdin_used+0x4938>
   190c9:	mov    edi,0x1
   190ce:	movzx  ecx,WORD PTR [rax+0x2]
   190d2:	push   QWORD PTR [rax+0xc]
   190d5:	movzx  r8d,WORD PTR [rax]
   190d9:	mov    r9,QWORD PTR [rax+0x4]
   190dd:	xor    eax,eax
   190df:	call   44f0 <__printf_chk@plt>
   190e4:	pop    r8
   190e6:	pop    r9
   190e8:	jmp    1865b <sched_process+0x1bb>
   190ed:	test   BYTE PTR [rip+0x20ffad],0x40        # 2290a1 <opt+0x1>
   190f4:	je     1865b <sched_process+0x1bb>
   190fa:	mov    rax,QWORD PTR [rdi+0x50]
   190fe:	lea    rdx,[rdi+0x58]
   19102:	lea    rsi,[rip+0x8457]        # 21560 <_IO_stdin_used+0x45a0>
   19109:	movzx  ecx,WORD PTR [rax+0x2]
   1910d:	movzx  r9d,WORD PTR [rax+0x4]
   19112:	movzx  r8d,WORD PTR [rax]
   19116:	jmp    18b8f <sched_process+0x6ef>
   1911b:	test   BYTE PTR [rip+0x20ff7f],0x40        # 2290a1 <opt+0x1>
   19122:	je     1865b <sched_process+0x1bb>
   19128:	mov    rax,QWORD PTR [rdi+0x50]
   1912c:	sub    rsp,0x8
   19130:	lea    rdx,[rdi+0x58]
   19134:	lea    rsi,[rip+0x85ed]        # 21728 <_IO_stdin_used+0x4768>
   1913b:	mov    edi,0x1
   19140:	movzx  ecx,WORD PTR [rax+0x10]
   19144:	push   QWORD PTR [rax+0x8]
   19147:	movzx  r9d,WORD PTR [rax+0x12]
   1914c:	mov    r8,QWORD PTR [rax]
   1914f:	xor    eax,eax
   19151:	call   44f0 <__printf_chk@plt>
   19156:	pop    r10
   19158:	pop    r11
   1915a:	jmp    1865b <sched_process+0x1bb>
   1915f:	test   BYTE PTR [rip+0x20ff3b],0x40        # 2290a1 <opt+0x1>
   19166:	je     1865b <sched_process+0x1bb>
   1916c:	mov    rax,QWORD PTR [rdi+0x50]
   19170:	lea    rdx,[rdi+0x58]
   19174:	lea    rsi,[rip+0x880d]        # 21988 <_IO_stdin_used+0x49c8>
   1917b:	movzx  ecx,WORD PTR [rax+0x2]
   1917f:	mov    r9d,DWORD PTR [rax+0x4]
   19183:	movzx  r8d,WORD PTR [rax]
   19187:	jmp    18b8f <sched_process+0x6ef>
   1918c:	test   BYTE PTR [rip+0x20ff0e],0x40        # 2290a1 <opt+0x1>
   19193:	je     1865b <sched_process+0x1bb>
   19199:	mov    rax,QWORD PTR [rdi+0x50]
   1919d:	sub    rsp,0x8
   191a1:	lea    rdx,[rdi+0x58]
   191a5:	mov    edi,0x1
   191aa:	movzx  esi,WORD PTR [rax+0x6]
   191ae:	movzx  ecx,WORD PTR [rax+0x2]
   191b2:	push   rsi
   191b3:	movzx  r9d,WORD PTR [rax+0x4]
   191b8:	lea    rsi,[rip+0x8821]        # 219e0 <_IO_stdin_used+0x4a20>
   191bf:	movzx  r8d,WORD PTR [rax]
   191c3:	xor    eax,eax
   191c5:	call   44f0 <__printf_chk@plt>
   191ca:	pop    rdx
   191cb:	pop    rcx
   191cc:	jmp    1865b <sched_process+0x1bb>
   191d1:	test   BYTE PTR [rip+0x20fec9],0x40        # 2290a1 <opt+0x1>
   191d8:	je     1865b <sched_process+0x1bb>
   191de:	mov    r10,QWORD PTR [rdi+0x50]
   191e2:	mov    edx,0x10624dd3
   191e7:	sub    rsp,0x8
   191eb:	lea    rsi,[rip+0x8636]        # 21828 <_IO_stdin_used+0x4868>
   191f2:	mov    r8d,DWORD PTR [r10+0x4]
   191f6:	movzx  ecx,WORD PTR [r10+0x2]
   191fb:	mov    eax,r8d
   191fe:	mul    edx
   19200:	shr    edx,0x6
   19203:	mov    r9d,edx
   19206:	lea    rdx,[rdi+0x58]
   1920a:	mov    edi,0x1
   1920f:	imul   eax,r9d,0x3e8
   19216:	sub    r8d,eax
   19219:	xor    eax,eax
   1921b:	push   r8
   1921d:	movzx  r8d,WORD PTR [r10]
   19221:	call   44f0 <__printf_chk@plt>
   19226:	pop    rax
   19227:	pop    rdx
   19228:	jmp    1865b <sched_process+0x1bb>
   1922d:	test   BYTE PTR [rip+0x20fe6d],0x40        # 2290a1 <opt+0x1>
   19234:	je     1865b <sched_process+0x1bb>
   1923a:	mov    rax,QWORD PTR [rdi+0x50]
   1923e:	lea    rdx,[rdi+0x58]
   19242:	mov    edi,0x1
   19247:	mov    esi,DWORD PTR [rax+0xc]
   1924a:	movzx  ecx,WORD PTR [rax+0x2]
   1924e:	push   rsi
   1924f:	mov    esi,DWORD PTR [rax+0x8]
   19252:	push   rsi
   19253:	movzx  r8d,WORD PTR [rax]
   19257:	lea    rsi,[rip+0x82aa]        # 21508 <_IO_stdin_used+0x4548>
   1925e:	mov    r9d,DWORD PTR [rax+0x4]
   19262:	xor    eax,eax
   19264:	call   44f0 <__printf_chk@plt>
   19269:	pop    rdi
   1926a:	pop    r8
   1926c:	jmp    1865b <sched_process+0x1bb>
   19271:	test   BYTE PTR [rip+0x20fe29],0x40        # 2290a1 <opt+0x1>
   19278:	je     1865b <sched_process+0x1bb>
   1927e:	mov    rax,QWORD PTR [rdi+0x50]
   19282:	lea    rdx,[rip+0x48d9]        # 1db62 <_IO_stdin_used+0xba2>
   19289:	lea    rcx,[rip+0x48c9]        # 1db59 <_IO_stdin_used+0xb99>
   19290:	lea    rsi,[rip+0x8191]        # 21428 <_IO_stdin_used+0x4468>
   19297:	mov    r11d,DWORD PTR [rax+0x4]
   1929b:	mov    r8d,DWORD PTR [rax]
   1929e:	test   r11d,r11d
   192a1:	cmove  rcx,rdx
   192a5:	add    rsp,0x8
   192a9:	lea    rdx,[rdi+0x58]
   192ad:	pop    rbx
   192ae:	pop    rbp
   192af:	mov    edi,0x1
   192b4:	xor    eax,eax
   192b6:	jmp    44f0 <__printf_chk@plt>
   192bb:	test   BYTE PTR [rip+0x20fddf],0x40        # 2290a1 <opt+0x1>
   192c2:	je     1865b <sched_process+0x1bb>
   192c8:	mov    rax,QWORD PTR [rdi+0x50]
   192cc:	sub    rsp,0x8
   192d0:	lea    rdx,[rdi+0x58]
   192d4:	lea    rsi,[rip+0x85a5]        # 21880 <_IO_stdin_used+0x48c0>
   192db:	mov    edi,0x1
   192e0:	movzx  ecx,WORD PTR [rax+0x2]
   192e4:	push   QWORD PTR [rax+0xc]
   192e7:	movzx  r8d,WORD PTR [rax]
   192eb:	mov    r9,QWORD PTR [rax+0x4]
   192ef:	xor    eax,eax
   192f1:	call   44f0 <__printf_chk@plt>
   192f6:	pop    rbx
   192f7:	pop    rbp
   192f8:	jmp    1865b <sched_process+0x1bb>
   192fd:	test   BYTE PTR [rip+0x20fd9d],0x40        # 2290a1 <opt+0x1>
   19304:	je     1865b <sched_process+0x1bb>
   1930a:	mov    rax,QWORD PTR [rdi+0x50]
   1930e:	lea    rdx,[rdi+0x58]
   19312:	lea    rsi,[rip+0x81cf]        # 214e8 <_IO_stdin_used+0x4528>
   19319:	movzx  ecx,WORD PTR [rax]
   1931c:	jmp    1894e <sched_process+0x4ae>
   19321:	test   BYTE PTR [rip+0x20fd79],0x40        # 2290a1 <opt+0x1>
   19328:	je     1865b <sched_process+0x1bb>
   1932e:	mov    rax,QWORD PTR [rdi+0x50]
   19332:	sub    rsp,0x8
   19336:	lea    rdx,[rdi+0x58]
   1933a:	mov    edi,0x1
   1933f:	movzx  esi,WORD PTR [rax+0x6]
   19343:	movzx  ecx,WORD PTR [rax+0x2]
   19347:	push   rsi
   19348:	movzx  r9d,WORD PTR [rax+0x4]
   1934d:	lea    rsi,[rip+0x8364]        # 216b8 <_IO_stdin_used+0x46f8>
   19354:	movzx  r8d,WORD PTR [rax]
   19358:	xor    eax,eax
   1935a:	call   44f0 <__printf_chk@plt>
   1935f:	pop    rbx
   19360:	pop    rbp
   19361:	jmp    1865b <sched_process+0x1bb>
   19366:	test   BYTE PTR [rip+0x20fd34],0x40        # 2290a1 <opt+0x1>
   1936d:	je     1865b <sched_process+0x1bb>
   19373:	mov    rax,QWORD PTR [rdi+0x50]
   19377:	sub    rsp,0x8
   1937b:	lea    rdx,[rdi+0x58]
   1937f:	mov    edi,0x1
   19384:	mov    esi,DWORD PTR [rax+0x8]
   19387:	movzx  ecx,WORD PTR [rax+0x2]
   1938b:	push   rsi
   1938c:	movzx  r8d,WORD PTR [rax]
   19390:	lea    rsi,[rip+0x82a1]        # 21638 <_IO_stdin_used+0x4678>
   19397:	mov    r9d,DWORD PTR [rax+0x4]
   1939b:	xor    eax,eax
   1939d:	call   44f0 <__printf_chk@plt>
   193a2:	pop    rax
   193a3:	pop    rdx
   193a4:	jmp    1865b <sched_process+0x1bb>
   193a9:	test   BYTE PTR [rip+0x20fcf1],0x40        # 2290a1 <opt+0x1>
   193b0:	je     1865b <sched_process+0x1bb>
   193b6:	mov    rax,QWORD PTR [rdi+0x50]
   193ba:	lea    rdx,[rdi+0x58]
   193be:	lea    rsi,[rip+0x82bb]        # 21680 <_IO_stdin_used+0x46c0>
   193c5:	movzx  ecx,WORD PTR [rax]
   193c8:	movzx  r8d,WORD PTR [rax+0x2]
   193cd:	jmp    187fa <sched_process+0x35a>
   193d2:	test   BYTE PTR [rip+0x20fcc8],0x40        # 2290a1 <opt+0x1>
   193d9:	je     1865b <sched_process+0x1bb>
   193df:	mov    rax,QWORD PTR [rdi+0x50]
   193e3:	lea    rdx,[rdi+0x58]
   193e7:	lea    rsi,[rip+0x4957]        # 1dd45 <_IO_stdin_used+0xd85>
   193ee:	movzx  ecx,WORD PTR [rax]
   193f1:	jmp    1894e <sched_process+0x4ae>
   193f6:	test   BYTE PTR [rip+0x20fca4],0x40        # 2290a1 <opt+0x1>
   193fd:	je     1865b <sched_process+0x1bb>
   19403:	mov    rax,QWORD PTR [rdi+0x50]
   19407:	lea    rdx,[rdi+0x58]
   1940b:	lea    rsi,[rip+0x7fa6]        # 213b8 <_IO_stdin_used+0x43f8>
   19412:	mov    ecx,DWORD PTR [rax]
   19414:	jmp    1894e <sched_process+0x4ae>
   19419:	test   BYTE PTR [rip+0x20fc81],0x40        # 2290a1 <opt+0x1>
   19420:	je     1865b <sched_process+0x1bb>
   19426:	mov    rax,QWORD PTR [rdi+0x50]
   1942a:	sub    rsp,0x8
   1942e:	lea    rdx,[rdi+0x58]
   19432:	mov    edi,0x1
   19437:	movzx  esi,WORD PTR [rax+0xe]
   1943b:	movzx  ecx,WORD PTR [rax+0xa]
   1943f:	push   rsi
   19440:	movzx  r9d,WORD PTR [rax+0xc]
   19445:	lea    rsi,[rip+0x8334]        # 21780 <_IO_stdin_used+0x47c0>
   1944c:	movzx  r8d,WORD PTR [rax+0x8]
   19451:	xor    eax,eax
   19453:	call   44f0 <__printf_chk@plt>
   19458:	pop    r8
   1945a:	pop    r9
   1945c:	jmp    1865b <sched_process+0x1bb>
   19461:	test   BYTE PTR [rip+0x20fc39],0x40        # 2290a1 <opt+0x1>
   19468:	je     1865b <sched_process+0x1bb>
   1946e:	mov    rax,QWORD PTR [rdi+0x50]
   19472:	lea    rdx,[rdi+0x58]
   19476:	lea    rsi,[rip+0x4835]        # 1dcb2 <_IO_stdin_used+0xcf2>
   1947d:	mov    r8d,DWORD PTR [rax+0x4]
   19481:	mov    ecx,DWORD PTR [rax]
   19483:	jmp    187fa <sched_process+0x35a>
   19488:	test   BYTE PTR [rip+0x20fc12],0x40        # 2290a1 <opt+0x1>
   1948f:	je     1865b <sched_process+0x1bb>
   19495:	mov    rbx,QWORD PTR [rdi+0x50]
   19499:	lea    rax,[rip+0x45e5]        # 1da85 <_IO_stdin_used+0xac5>
   194a0:	lea    r8,[rip+0x469e]        # 1db45 <_IO_stdin_used+0xb85>
   194a7:	lea    rdx,[rdi+0x58]
   194ab:	lea    rsi,[rip+0x48c8]        # 1dd7a <_IO_stdin_used+0xdba>
   194b2:	mov    edi,0x1
   194b7:	cmp    WORD PTR [rbx],0x0
   194bb:	movzx  ecx,WORD PTR [rbx+0x2]
   194bf:	cmove  r8,rax
   194c3:	xor    eax,eax
   194c5:	call   44f0 <__printf_chk@plt>
   194ca:	movzx  eax,WORD PTR [rbx+0x4]
   194ce:	cmp    ax,0xffff
   194d2:	je     195b6 <sched_process+0x1116>
   194d8:	movsx  edx,WORD PTR [rbx+0x6]
   194dc:	add    rsp,0x8
   194e0:	lea    rsi,[rip+0x48ae]        # 1dd95 <_IO_stdin_used+0xdd5>
   194e7:	pop    rbx
   194e8:	pop    rbp
   194e9:	movsx  ecx,ax
   194ec:	mov    edi,0x1
   194f1:	xor    eax,eax
   194f3:	jmp    44f0 <__printf_chk@plt>
   194f8:	test   BYTE PTR [rip+0x20fba2],0x40        # 2290a1 <opt+0x1>
   194ff:	je     1865b <sched_process+0x1bb>
   19505:	mov    rbx,QWORD PTR [rdi+0x50]
   19509:	lea    rdx,[rdi+0x58]
   1950d:	lea    rsi,[rip+0x7f64]        # 21478 <_IO_stdin_used+0x44b8>
   19514:	xor    eax,eax
   19516:	mov    edi,0x1
   1951b:	movzx  ecx,WORD PTR [rbx+0x2]
   1951f:	movzx  r8d,WORD PTR [rbx]
   19523:	mov    r9d,DWORD PTR [rbx+0x4]
   19527:	call   44f0 <__printf_chk@plt>
   1952c:	mov    edx,DWORD PTR [rbx+0x8]
   1952f:	cmp    edx,0x80000000
   19535:	je     1954a <sched_process+0x10aa>
   19537:	lea    rsi,[rip+0x4792]        # 1dcd0 <_IO_stdin_used+0xd10>
   1953e:	mov    edi,0x1
   19543:	xor    eax,eax
   19545:	call   44f0 <__printf_chk@plt>
   1954a:	mov    edx,DWORD PTR [rbx+0xc]
   1954d:	lea    rsi,[rip+0x478a]        # 1dcde <_IO_stdin_used+0xd1e>
   19554:	jmp    18789 <sched_process+0x2e9>
   19559:	test   BYTE PTR [rip+0x20fb41],0x40        # 2290a1 <opt+0x1>
   19560:	je     1865b <sched_process+0x1bb>
   19566:	mov    rax,QWORD PTR [rdi+0x50]
   1956a:	lea    rdx,[rip+0x45cd]        # 1db3e <_IO_stdin_used+0xb7e>
   19571:	lea    r9,[rip+0x45bf]        # 1db37 <_IO_stdin_used+0xb77>
   19578:	lea    r8,[rip+0x45c6]        # 1db45 <_IO_stdin_used+0xb85>
   1957f:	lea    rsi,[rip+0x7e52]        # 213d8 <_IO_stdin_used+0x4418>
   19586:	cmp    BYTE PTR [rax+0x3],0x0
   1958a:	movzx  ecx,WORD PTR [rax]
   1958d:	cmove  r9,rdx
   19591:	cmp    BYTE PTR [rax+0x2],0x0
   19595:	lea    rdx,[rip+0x44e9]        # 1da85 <_IO_stdin_used+0xac5>
   1959c:	cmove  r8,rdx
   195a0:	add    rsp,0x8
   195a4:	lea    rdx,[rdi+0x58]
   195a8:	pop    rbx
   195a9:	pop    rbp
   195aa:	mov    edi,0x1
   195af:	xor    eax,eax
   195b1:	jmp    44f0 <__printf_chk@plt>
   195b6:	pop    rax
   195b7:	pop    rbx
   195b8:	pop    rbp
   195b9:	lea    rdi,[rip+0x47e4]        # 1dda4 <_IO_stdin_used+0xde4>
   195c0:	jmp    4380 <puts@plt>
   195c5:	mov    rax,r9
   195c8:	mov    rdx,r9
   195cb:	pxor   xmm0,xmm0
   195cf:	shr    rax,1
   195d2:	and    edx,0x1
   195d5:	or     rax,rdx
   195d8:	cvtsi2sd xmm0,rax
   195dd:	addsd  xmm0,xmm0
   195e1:	jmp    18627 <sched_process+0x187>
   195e6:	pop    rcx
   195e7:	pop    rbx
   195e8:	pop    rbp
   195e9:	lea    rdi,[rip+0x472e]        # 1dd1e <_IO_stdin_used+0xd5e>
   195f0:	jmp    4380 <puts@plt>
   195f5:	mov    rax,r10
   195f8:	mov    rdx,r10
   195fb:	pxor   xmm0,xmm0
   195ff:	shr    rax,1
   19602:	and    edx,0x1
   19605:	or     rax,rdx
   19608:	cvtsi2sd xmm0,rax
   1960d:	addsd  xmm0,xmm0
   19611:	jmp    18601 <sched_process+0x161>
   19616:	mov    rax,rdx
   19619:	pxor   xmm2,xmm2
   1961d:	shr    rax,1
   19620:	and    edx,0x1
   19623:	or     rax,rdx
   19626:	cvtsi2sd xmm2,rax
   1962b:	addsd  xmm2,xmm2
   1962f:	jmp    185eb <sched_process+0x14b>
   19634:	mov    rax,rdx
   19637:	pxor   xmm1,xmm1
   1963b:	shr    rax,1
   1963e:	and    edx,0x1
   19641:	or     rax,rdx
   19644:	cvtsi2sd xmm1,rax
   19649:	addsd  xmm1,xmm1
   1964d:	jmp    18cf8 <sched_process+0x858>
   19652:	mov    rax,r9
   19655:	mov    rdx,r9
   19658:	pxor   xmm0,xmm0
   1965c:	shr    rax,1
   1965f:	and    edx,0x1
   19662:	or     rax,rdx
   19665:	cvtsi2sd xmm0,rax
   1966a:	addsd  xmm0,xmm0
   1966e:	jmp    18cd2 <sched_process+0x832>
   19673:	nop    DWORD PTR [rax]
   19676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019680 <sched_default_vcpu_activate>:
   19680:	push   rbx
   19681:	movsxd rax,DWORD PTR [rdi+0x4]
   19685:	mov    rbx,rdi
   19688:	lea    rdi,[rip+0x24feb1]        # 269540 <default_domain>
   1968f:	mov    rsi,rax
   19692:	mov    rax,QWORD PTR [rdi+rax*8+0x10]
   19697:	test   rax,rax
   1969a:	je     196d8 <sched_default_vcpu_activate+0x58>
   1969c:	movsxd rcx,DWORD PTR [rax]
   1969f:	mov    rdx,QWORD PTR [rax+0x8]
   196a3:	cmp    QWORD PTR [rdx+rcx*8+0x10],rax
   196a8:	jne    196df <sched_default_vcpu_activate+0x5f>
   196aa:	or     BYTE PTR [rax+0x10],0x1
   196ae:	mov    QWORD PTR [rax+0x50],rbx
   196b2:	mov    rdi,rbx
   196b5:	mov    edx,DWORD PTR [rip+0x20fa19]        # 2290d4 <opt+0x34>
   196bb:	mov    DWORD PTR [rax+0x18],0x0
   196c2:	mov    DWORD PTR [rax+0x14],edx
   196c5:	mov    QWORD PTR [rbx+0x1a8],rax
   196cc:	pop    rbx
   196cd:	jmp    16600 <pcpu_string_draw>
   196d2:	nop    WORD PTR [rax+rax*1+0x0]
   196d8:	call   11ba0 <vcpu_create>
   196dd:	jmp    1969c <sched_default_vcpu_activate+0x1c>
   196df:	lea    rcx,[rip+0x9c3a]        # 23320 <__PRETTY_FUNCTION__.7505>
   196e6:	lea    rsi,[rip+0x399b]        # 1d088 <_IO_stdin_used+0xc8>
   196ed:	lea    rdi,[rip+0x46d2]        # 1ddc6 <_IO_stdin_used+0xe06>
   196f4:	mov    edx,0x1c9f
   196f9:	call   4400 <__assert_fail@plt>
   196fe:	xchg   ax,ax

0000000000019700 <pm_process>:
   19700:	movzx  eax,BYTE PTR [rip+0x20f99a]        # 2290a1 <opt+0x1>
   19707:	push   rbx
   19708:	mov    rbx,rdi
   1970b:	mov    edx,DWORD PTR [rdi+0x40]
   1970e:	and    eax,0x40
   19711:	cmp    edx,0x801002
   19717:	je     197b8 <pm_process+0xb8>
   1971d:	cmp    edx,0x801003
   19723:	je     19770 <pm_process+0x70>
   19725:	cmp    edx,0x801001
   1972b:	je     19740 <pm_process+0x40>
   1972d:	test   al,al
   1972f:	jne    197e0 <pm_process+0xe0>
   19735:	pop    rbx
   19736:	ret    
   19737:	nop    WORD PTR [rax+rax*1+0x0]
   19740:	test   al,al
   19742:	je     19735 <pm_process+0x35>
   19744:	mov    rax,QWORD PTR [rdi+0x50]
   19748:	lea    rdx,[rdi+0x58]
   1974c:	lea    rsi,[rip+0x468b]        # 1ddde <_IO_stdin_used+0xe1e>
   19753:	pop    rbx
   19754:	mov    edi,0x1
   19759:	mov    r8d,DWORD PTR [rax+0x4]
   1975d:	mov    ecx,DWORD PTR [rax]
   1975f:	xor    eax,eax
   19761:	jmp    44f0 <__printf_chk@plt>
   19766:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19770:	mov    rdx,QWORD PTR [rdi+0x50]
   19774:	test   al,al
   19776:	mov    esi,DWORD PTR [rdx]
   19778:	jne    197f8 <pm_process+0xf8>
   1977a:	mov    ecx,DWORD PTR [rbx+0x194]
   19780:	cmp    ecx,0x6
   19783:	je     1979e <pm_process+0x9e>
   19785:	cmp    ecx,esi
   19787:	je     1979e <pm_process+0x9e>
   19789:	mov    edx,esi
   1978b:	lea    rsi,[rip+0x827e]        # 21a10 <_IO_stdin_used+0x4a50>
   19792:	mov    edi,0x1
   19797:	xor    eax,eax
   19799:	call   44f0 <__printf_chk@plt>
   1979e:	mov    DWORD PTR [rbx+0x194],0x0
   197a8:	mov    rdi,rbx
   197ab:	pop    rbx
   197ac:	jmp    16600 <pcpu_string_draw>
   197b1:	nop    DWORD PTR [rax+0x0]
   197b8:	mov    rdx,QWORD PTR [rdi+0x50]
   197bc:	test   al,al
   197be:	mov    ecx,DWORD PTR [rdx]
   197c0:	jne    19820 <pm_process+0x120>
   197c2:	cmp    ecx,0x5
   197c5:	ja     19735 <pm_process+0x35>
   197cb:	mov    DWORD PTR [rbx+0x194],ecx
   197d1:	mov    rdi,rbx
   197d4:	pop    rbx
   197d5:	jmp    16600 <pcpu_string_draw>
   197da:	nop    WORD PTR [rax+rax*1+0x0]
   197e0:	pop    rbx
   197e1:	lea    rsi,[rdi+0x30]
   197e5:	mov    rdi,QWORD PTR [rip+0x212c34]        # 22c420 <stdout@@GLIBC_2.2.5>
   197ec:	jmp    13380 <dump_generic>
   197f1:	nop    DWORD PTR [rax+0x0]
   197f8:	lea    rdx,[rdi+0x58]
   197fc:	mov    ecx,esi
   197fe:	lea    rsi,[rip+0x460c]        # 1de11 <_IO_stdin_used+0xe51>
   19805:	mov    edi,0x1
   1980a:	xor    eax,eax
   1980c:	call   44f0 <__printf_chk@plt>
   19811:	mov    rax,QWORD PTR [rbx+0x50]
   19815:	mov    esi,DWORD PTR [rax]
   19817:	jmp    1977a <pm_process+0x7a>
   1981c:	nop    DWORD PTR [rax+0x0]
   19820:	lea    rdx,[rdi+0x58]
   19824:	lea    rsi,[rip+0x45cf]        # 1ddfa <_IO_stdin_used+0xe3a>
   1982b:	mov    edi,0x1
   19830:	xor    eax,eax
   19832:	call   44f0 <__printf_chk@plt>
   19837:	mov    rax,QWORD PTR [rbx+0x50]
   1983b:	mov    ecx,DWORD PTR [rax]
   1983d:	jmp    197c2 <pm_process+0xc2>
   1983f:	nop

0000000000019840 <hw_process>:
   19840:	movzx  eax,BYTE PTR [rdi+0x41]
   19844:	shr    al,0x4
   19847:	cmp    al,0x1
   19849:	je     19860 <hw_process+0x20>
   1984b:	cmp    al,0x2
   1984d:	jne    19858 <hw_process+0x18>
   1984f:	jmp    13430 <irq_process>
   19854:	nop    DWORD PTR [rax+0x0]
   19858:	repz ret 
   1985a:	nop    WORD PTR [rax+rax*1+0x0]
   19860:	jmp    19700 <pm_process>
   19865:	nop
   19866:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019870 <process_lost_records>:
   19870:	push   r15
   19872:	push   r14
   19874:	push   r13
   19876:	push   r12
   19878:	mov    r13,rdi
   1987b:	push   rbp
   1987c:	push   rbx
   1987d:	sub    rsp,0x8
   19881:	mov    ecx,DWORD PTR [rdi+0x44]
   19884:	cmp    ecx,0x4
   19887:	je     198bf <process_lost_records+0x4f>
   19889:	mov    rdi,QWORD PTR [rip+0x24b9c8]        # 265258 <warn>
   19890:	lea    rdx,[rip+0x81a9]        # 21a40 <_IO_stdin_used+0x4a80>
   19897:	xor    eax,eax
   19899:	mov    esi,0x1
   1989e:	call   4560 <__fprintf_chk@plt>
   198a3:	cmp    DWORD PTR [rip+0x20f836],0x3        # 2290e0 <opt+0x40>
   198aa:	jbe    19b39 <process_lost_records+0x2c9>
   198b0:	add    rsp,0x8
   198b4:	pop    rbx
   198b5:	pop    rbp
   198b6:	pop    r12
   198b8:	pop    r13
   198ba:	pop    r14
   198bc:	pop    r15
   198be:	ret    
   198bf:	test   BYTE PTR [rip+0x20f7db],0x40        # 2290a1 <opt+0x1>
   198c6:	mov    r14,QWORD PTR [rdi+0x50]
   198ca:	mov    rax,QWORD PTR [rdi+0x1a8]
   198d1:	mov    rbp,QWORD PTR [r14+0x8]
   198d5:	je     1991f <process_lost_records+0xaf>
   198d7:	test   rax,rax
   198da:	movzx  r9d,WORD PTR [r14+0x6]
   198df:	movzx  r8d,WORD PTR [r14+0x4]
   198e4:	mov    ecx,DWORD PTR [r14]
   198e7:	lea    rdx,[rdi+0x58]
   198eb:	je     19ae8 <process_lost_records+0x278>
   198f1:	sub    rsp,0x8
   198f5:	mov    edi,0x1
   198fa:	push   rbp
   198fb:	mov    esi,DWORD PTR [rax]
   198fd:	push   rsi
   198fe:	mov    rax,QWORD PTR [rax+0x8]
   19902:	lea    rsi,[rip+0x816f]        # 21a78 <_IO_stdin_used+0x4ab8>
   19909:	mov    eax,DWORD PTR [rax+0x8]
   1990c:	push   rax
   1990d:	xor    eax,eax
   1990f:	call   44f0 <__printf_chk@plt>
   19914:	mov    rax,QWORD PTR [r13+0x1a8]
   1991b:	add    rsp,0x20
   1991f:	test   rax,rax
   19922:	je     19976 <process_lost_records+0x106>
   19924:	lea    rdi,[rax+0x80]
   1992b:	mov    QWORD PTR [rax+0x78],0x0
   19933:	mov    QWORD PTR [rax+0x130],0x0
   1993e:	and    rdi,0xfffffffffffffff8
   19942:	sub    eax,edi
   19944:	lea    ecx,[rax+0x138]
   1994a:	xor    eax,eax
   1994c:	shr    ecx,0x3
   1994f:	rep stos QWORD PTR es:[rdi],rax
   19952:	mov    rsi,QWORD PTR [r13+0x1a8]
   19959:	cmp    DWORD PTR [rsi+0x3bf0],0x1
   19960:	je     19b0e <process_lost_records+0x29e>
   19966:	mov    ecx,0x4
   1996b:	mov    rdx,rbp
   1996e:	mov    rdi,r13
   19971:	call   16680 <vcpu_prev_update>
   19976:	test   BYTE PTR [r13+0x1b0],0x1
   1997e:	jne    19a8d <process_lost_records+0x21d>
   19984:	mov    eax,DWORD PTR [rip+0x21382a]        # 22d1b4 <P+0x14>
   1998a:	lea    ecx,[rax+0x1]
   1998d:	mov    eax,DWORD PTR [rip+0x21380d]        # 22d1a0 <P>
   19993:	mov    DWORD PTR [rip+0x21381b],ecx        # 22d1b4 <P+0x14>
   19999:	lea    r8d,[rax+0x1]
   1999d:	cmp    ecx,r8d
   199a0:	jg     19ab0 <process_lost_records+0x240>
   199a6:	or     BYTE PTR [r13+0x1b0],0x1
   199ae:	mov    QWORD PTR [r13+0x1b8],rbp
   199b5:	mov    rdi,r13
   199b8:	call   16600 <pcpu_string_draw>
   199bd:	mov    r15,QWORD PTR [rip+0x24b86c]        # 265230 <domain_list>
   199c4:	test   r15,r15
   199c7:	je     19a48 <process_lost_records+0x1d8>
   199c9:	lea    r12,[rip+0x98e0]        # 232b0 <__func__.8167>
   199d0:	cmp    DWORD PTR [r15+0x8],0x8000
   199d8:	je     19a40 <process_lost_records+0x1d0>
   199da:	xor    ebx,ebx
   199dc:	jmp    199f5 <process_lost_records+0x185>
   199de:	xchg   ax,ax
   199e0:	mov    rsi,rbp
   199e3:	call   15630 <lose_vcpu>
   199e8:	add    rbx,0x1
   199ec:	cmp    rbx,0x100
   199f3:	je     19a40 <process_lost_records+0x1d0>
   199f5:	mov    rdi,QWORD PTR [r15+rbx*8+0x10]
   199fa:	test   rdi,rdi
   199fd:	je     199e8 <process_lost_records+0x178>
   199ff:	mov    eax,DWORD PTR [rdi+0x18]
   19a02:	test   eax,eax
   19a04:	je     199e8 <process_lost_records+0x178>
   19a06:	test   BYTE PTR [rip+0x20f694],0x40        # 2290a1 <opt+0x1>
   19a0d:	je     199e0 <process_lost_records+0x170>
   19a0f:	mov    rdi,QWORD PTR [rip+0x24b842]        # 265258 <warn>
   19a16:	mov    r8d,DWORD PTR [r15+0x8]
   19a1a:	lea    rdx,[rip+0x8157]        # 21b78 <_IO_stdin_used+0x4bb8>
   19a21:	mov    r9d,ebx
   19a24:	mov    rcx,r12
   19a27:	mov    esi,0x1
   19a2c:	xor    eax,eax
   19a2e:	call   4560 <__fprintf_chk@plt>
   19a33:	mov    rdi,QWORD PTR [r15+rbx*8+0x10]
   19a38:	jmp    199e0 <process_lost_records+0x170>
   19a3a:	nop    WORD PTR [rax+rax*1+0x0]
   19a40:	mov    r15,QWORD PTR [r15]
   19a43:	test   r15,r15
   19a46:	jne    199d0 <process_lost_records+0x160>
   19a48:	or     BYTE PTR [r13+0x1b0],0x2
   19a50:	movzx  eax,WORD PTR [r14+0x4]
   19a55:	lea    edx,[rax*8+0x0]
   19a5c:	mov    eax,DWORD PTR [r13+0x1b0]
   19a63:	and    eax,0xfff80007
   19a68:	or     eax,edx
   19a6a:	mov    DWORD PTR [r13+0x1b0],eax
   19a71:	movzx  eax,WORD PTR [r14+0x6]
   19a76:	mov    WORD PTR [r13+0x1b4],ax
   19a7e:	add    rsp,0x8
   19a82:	pop    rbx
   19a83:	pop    rbp
   19a84:	pop    r12
   19a86:	pop    r13
   19a88:	pop    r14
   19a8a:	pop    r15
   19a8c:	ret    
   19a8d:	mov    ecx,DWORD PTR [r13+0x4]
   19a91:	mov    rdi,QWORD PTR [rip+0x24b7c0]        # 265258 <warn>
   19a98:	lea    rdx,[rip+0x8091]        # 21b30 <_IO_stdin_used+0x4b70>
   19a9f:	mov    esi,0x1
   19aa4:	xor    eax,eax
   19aa6:	call   4560 <__fprintf_chk@plt>
   19aab:	jmp    199a6 <process_lost_records+0x136>
   19ab0:	mov    rdi,QWORD PTR [rip+0x24b7a1]        # 265258 <warn>
   19ab7:	lea    rdx,[rip+0x803a]        # 21af8 <_IO_stdin_used+0x4b38>
   19abe:	xor    eax,eax
   19ac0:	mov    esi,0x1
   19ac5:	call   4560 <__fprintf_chk@plt>
   19aca:	cmp    DWORD PTR [rip+0x20f60f],0x6        # 2290e0 <opt+0x40>
   19ad1:	ja     199a6 <process_lost_records+0x136>
   19ad7:	mov    edi,0x1
   19adc:	call   4540 <exit@plt>
   19ae1:	nop    DWORD PTR [rax+0x0]
   19ae8:	sub    rsp,0x8
   19aec:	lea    rsi,[rip+0x7fc5]        # 21ab8 <_IO_stdin_used+0x4af8>
   19af3:	mov    edi,0x1
   19af8:	push   rbp
   19af9:	xor    eax,eax
   19afb:	call   44f0 <__printf_chk@plt>
   19b00:	pop    rdx
   19b01:	mov    rax,QWORD PTR [r13+0x1a8]
   19b08:	pop    rcx
   19b09:	jmp    1991f <process_lost_records+0xaf>
   19b0e:	mov    DWORD PTR [rsi+0x3bfc],0x0
   19b18:	mov    rax,QWORD PTR [r13+0x1a8]
   19b1f:	xor    edi,edi
   19b21:	lea    rsi,[rax+0x3bf8]
   19b28:	call   e860 <cr3_switch>
   19b2d:	mov    rsi,QWORD PTR [r13+0x1a8]
   19b34:	jmp    19966 <process_lost_records+0xf6>
   19b39:	lea    rdi,[r13+0x30]
   19b3d:	call   13840 <error.part.24>
   19b42:	nop    DWORD PTR [rax+0x0]
   19b46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019b50 <pcpu_string>:
   19b50:	sub    rsp,0x8
   19b54:	mov    eax,DWORD PTR [rip+0x213646]        # 22d1a0 <P>
   19b5a:	cmp    eax,0xff
   19b5f:	jg     19c28 <pcpu_string+0xd8>
   19b65:	cmp    eax,edi
   19b67:	mov    r8d,edi
   19b6a:	jl     19c09 <pcpu_string+0xb9>
   19b70:	movsxd rdx,DWORD PTR [rip+0x20f4ad]        # 229024 <last_pcpu.8340>
   19b77:	test   edx,edx
   19b79:	js     19b9f <pcpu_string+0x4f>
   19b7b:	lea    rdi,[rdx*8+0x0]
   19b83:	lea    rax,[rip+0x213656]        # 22d1e0 <P+0x40>
   19b8a:	sub    rdi,rdx
   19b8d:	shl    rdi,0x7
   19b91:	add    rdi,rax
   19b94:	call   16600 <pcpu_string_draw>
   19b99:	mov    eax,DWORD PTR [rip+0x213601]        # 22d1a0 <P>
   19b9f:	mov    ecx,DWORD PTR [rip+0x20f47b]        # 229020 <max_active_pcpu.8339>
   19ba5:	cmp    ecx,eax
   19ba7:	jge    19bef <pcpu_string+0x9f>
   19ba9:	add    ecx,0x1
   19bac:	cmp    ecx,eax
   19bae:	jg     19be9 <pcpu_string+0x99>
   19bb0:	movsxd rdx,ecx
   19bb3:	lea    r9,[rip+0x2135e6]        # 22d1a0 <P>
   19bba:	lea    rax,[rdx*8+0x0]
   19bc2:	sub    rax,rdx
   19bc5:	shl    rax,0x7
   19bc9:	lea    rsi,[r9+rax*1+0x40]
   19bce:	xchg   ax,ax
   19bd0:	mov    rdi,rsi
   19bd3:	call   16600 <pcpu_string_draw>
   19bd8:	mov    eax,DWORD PTR [r9]
   19bdb:	add    ecx,0x1
   19bde:	add    rsi,0x380
   19be5:	cmp    eax,ecx
   19be7:	jge    19bd0 <pcpu_string+0x80>
   19be9:	mov    DWORD PTR [rip+0x20f431],eax        # 229020 <max_active_pcpu.8339>
   19bef:	lea    rax,[rip+0x21308a]        # 22cc80 <__pcpu_string>
   19bf6:	movsxd rdx,r8d
   19bf9:	mov    DWORD PTR [rip+0x20f424],r8d        # 229024 <last_pcpu.8340>
   19c00:	mov    BYTE PTR [rax+rdx*1],0x78
   19c04:	add    rsp,0x8
   19c08:	ret    
   19c09:	lea    rcx,[rip+0x95e8]        # 231f8 <__PRETTY_FUNCTION__.8341>
   19c10:	lea    rsi,[rip+0x3471]        # 1d088 <_IO_stdin_used+0xc8>
   19c17:	lea    rdi,[rip+0x4225]        # 1de43 <_IO_stdin_used+0xe83>
   19c1e:	mov    edx,0x25f5
   19c23:	call   4400 <__assert_fail@plt>
   19c28:	lea    rcx,[rip+0x95c9]        # 231f8 <__PRETTY_FUNCTION__.8341>
   19c2f:	lea    rsi,[rip+0x3452]        # 1d088 <_IO_stdin_used+0xc8>
   19c36:	lea    rdi,[rip+0x41e9]        # 1de26 <_IO_stdin_used+0xe66>
   19c3d:	mov    edx,0x25f4
   19c42:	call   4400 <__assert_fail@plt>
   19c47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019c50 <hvm_inj_exc_process>:
   19c50:	test   BYTE PTR [rip+0x20f44a],0x40        # 2290a1 <opt+0x1>
   19c57:	je     19cf8 <hvm_inj_exc_process+0xa8>
   19c5d:	push   r12
   19c5f:	push   rbp
   19c60:	push   rbx
   19c61:	mov    rax,QWORD PTR [rsi+0x28410]
   19c68:	mov    rbx,rdi
   19c6b:	mov    edi,DWORD PTR [rdi]
   19c6d:	mov    ebp,DWORD PTR [rax]
   19c6f:	mov    r12d,DWORD PTR [rax+0x4]
   19c73:	cmp    ebp,0x13
   19c76:	jbe    19cb0 <hvm_inj_exc_process+0x60>
   19c78:	call   19b50 <pcpu_string>
   19c7d:	sub    rsp,0x8
   19c81:	mov    edx,DWORD PTR [rbx+0x130]
   19c87:	mov    ecx,DWORD PTR [rbx+0x134]
   19c8d:	lea    rsi,[rip+0x7f34]        # 21bc8 <_IO_stdin_used+0x4c08>
   19c94:	push   r12
   19c96:	mov    r8,rax
   19c99:	mov    r9d,ebp
   19c9c:	mov    edi,0x1
   19ca1:	xor    eax,eax
   19ca3:	call   44f0 <__printf_chk@plt>
   19ca8:	pop    rax
   19ca9:	pop    rdx
   19caa:	pop    rbx
   19cab:	pop    rbp
   19cac:	pop    r12
   19cae:	ret    
   19caf:	nop
   19cb0:	lea    rax,[rip+0x20fce9]        # 2299a0 <hvm_trap_name>
   19cb7:	mov    rbp,QWORD PTR [rax+rbp*8]
   19cbb:	call   19b50 <pcpu_string>
   19cc0:	sub    rsp,0x8
   19cc4:	mov    ecx,DWORD PTR [rbx+0x134]
   19cca:	mov    edx,DWORD PTR [rbx+0x130]
   19cd0:	lea    rsi,[rip+0x7ec9]        # 21ba0 <_IO_stdin_used+0x4be0>
   19cd7:	push   r12
   19cd9:	mov    r8,rax
   19cdc:	mov    r9,rbp
   19cdf:	mov    edi,0x1
   19ce4:	xor    eax,eax
   19ce6:	call   44f0 <__printf_chk@plt>
   19ceb:	pop    rcx
   19cec:	pop    rsi
   19ced:	pop    rbx
   19cee:	pop    rbp
   19cef:	pop    r12
   19cf1:	ret    
   19cf2:	nop    WORD PTR [rax+rax*1+0x0]
   19cf8:	repz ret 
   19cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019d00 <hvm_pf_inject_process>:
   19d00:	push   r13
   19d02:	push   r12
   19d04:	push   rbp
   19d05:	push   rbx
   19d06:	sub    rsp,0x8
   19d0a:	movzx  eax,BYTE PTR [rip+0x20f390]        # 2290a1 <opt+0x1>
   19d11:	mov    rdx,QWORD PTR [rsi+0x28410]
   19d18:	and    eax,0x40
   19d1b:	test   BYTE PTR [rdi+0x11],0x1
   19d1f:	je     19d78 <hvm_pf_inject_process+0x78>
   19d21:	test   al,al
   19d23:	mov    rbp,QWORD PTR [rdx+0x4]
   19d27:	lea    r12,[rip+0x37e5]        # 1d513 <_IO_stdin_used+0x553>
   19d2e:	je     19d67 <hvm_pf_inject_process+0x67>
   19d30:	mov    rbx,rdi
   19d33:	mov    edi,DWORD PTR [rdi]
   19d35:	mov    r13d,DWORD PTR [rdx]
   19d38:	call   19b50 <pcpu_string>
   19d3d:	mov    edx,DWORD PTR [rbx+0x130]
   19d43:	mov    ecx,DWORD PTR [rbx+0x134]
   19d49:	lea    rsi,[rip+0x7ea0]        # 21bf0 <_IO_stdin_used+0x4c30>
   19d50:	push   r13
   19d52:	push   rbp
   19d53:	mov    r8,rax
   19d56:	mov    r9,r12
   19d59:	mov    edi,0x1
   19d5e:	xor    eax,eax
   19d60:	call   44f0 <__printf_chk@plt>
   19d65:	pop    rax
   19d66:	pop    rdx
   19d67:	add    rsp,0x8
   19d6b:	pop    rbx
   19d6c:	pop    rbp
   19d6d:	pop    r12
   19d6f:	pop    r13
   19d71:	ret    
   19d72:	nop    WORD PTR [rax+rax*1+0x0]
   19d78:	test   al,al
   19d7a:	mov    ebp,DWORD PTR [rdx+0x4]
   19d7d:	je     19d67 <hvm_pf_inject_process+0x67>
   19d7f:	lea    r12,[rip+0x3cff]        # 1da85 <_IO_stdin_used+0xac5>
   19d86:	jmp    19d30 <hvm_pf_inject_process+0x30>
   19d88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019d90 <hvm_handler_process>:
   19d90:	mov    ecx,DWORD PTR [rsi]
   19d92:	test   ecx,ecx
   19d94:	jne    19da8 <hvm_handler_process+0x18>
   19d96:	test   BYTE PTR [rip+0x20f304],0x40        # 2290a1 <opt+0x1>
   19d9d:	jne    19e28 <hvm_handler_process+0x98>
   19da3:	repz ret 
   19da5:	nop    DWORD PTR [rax]
   19da8:	push   r12
   19daa:	push   rbp
   19dab:	mov    rbp,rdi
   19dae:	push   rbx
   19daf:	mov    rdx,QWORD PTR [rdi+0x20]
   19db3:	mov    rbx,rsi
   19db6:	mov    QWORD PTR [rsi+0x28410],rdx
   19dbd:	mov    eax,DWORD PTR [rdi+0x10]
   19dc0:	cmp    eax,0x82005
   19dc5:	je     19e78 <hvm_handler_process+0xe8>
   19dcb:	ja     19e00 <hvm_handler_process+0x70>
   19dcd:	cmp    eax,0x82003
   19dd2:	je     19eb8 <hvm_handler_process+0x128>
   19dd8:	ja     19f30 <hvm_handler_process+0x1a0>
   19dde:	cmp    eax,0x82002
   19de3:	jne    19ec8 <hvm_handler_process+0x138>
   19de9:	mov    rsi,rbx
   19dec:	mov    rdi,rbp
   19def:	pop    rbx
   19df0:	pop    rbp
   19df1:	pop    r12
   19df3:	jmp    19d00 <hvm_pf_inject_process>
   19df8:	nop    DWORD PTR [rax+rax*1+0x0]
   19e00:	cmp    eax,0x82100
   19e05:	je     19e38 <hvm_handler_process+0xa8>
   19e07:	cmp    eax,0x82102
   19e0c:	je     19de9 <hvm_handler_process+0x59>
   19e0e:	cmp    eax,0x82020
   19e13:	jne    19ec8 <hvm_handler_process+0x138>
   19e19:	pop    rbx
   19e1a:	pop    rbp
   19e1b:	pop    r12
   19e1d:	jmp    fff0 <hvm_intr_window_process>
   19e22:	nop    WORD PTR [rax+rax*1+0x0]
   19e28:	lea    rsi,[rip+0x3762]        # 1d591 <_IO_stdin_used+0x5d1>
   19e2f:	jmp    102f0 <hvm_generic_dump>
   19e34:	nop    DWORD PTR [rax+0x0]
   19e38:	mov    rax,QWORD PTR [rsi+0x10]
   19e3c:	mov    r12,QWORD PTR [rax+0x70]
   19e40:	test   r12,r12
   19e43:	je     19fc8 <hvm_handler_process+0x238>
   19e49:	test   BYTE PTR [r12+0x320],0x1
   19e52:	jne    19fa0 <hvm_handler_process+0x210>
   19e58:	or     BYTE PTR [r12+0x320],0x1
   19e61:	test   BYTE PTR [rip+0x20f239],0x40        # 2290a1 <opt+0x1>
   19e68:	jne    19f60 <hvm_handler_process+0x1d0>
   19e6e:	pop    rbx
   19e6f:	pop    rbp
   19e70:	pop    r12
   19e72:	ret    
   19e73:	nop    DWORD PTR [rax+rax*1+0x0]
   19e78:	test   BYTE PTR [rip+0x20f222],0x40        # 2290a1 <opt+0x1>
   19e7f:	je     19e6e <hvm_handler_process+0xde>
   19e81:	mov    ebx,DWORD PTR [rdx]
   19e83:	mov    edi,DWORD PTR [rdi]
   19e85:	call   19b50 <pcpu_string>
   19e8a:	mov    ecx,DWORD PTR [rbp+0x134]
   19e90:	mov    edx,DWORD PTR [rbp+0x130]
   19e96:	mov    r9d,ebx
   19e99:	pop    rbx
   19e9a:	pop    rbp
   19e9b:	pop    r12
   19e9d:	lea    rsi,[rip+0x3fb9]        # 1de5d <_IO_stdin_used+0xe9d>
   19ea4:	mov    r8,rax
   19ea7:	mov    edi,0x1
   19eac:	xor    eax,eax
   19eae:	jmp    44f0 <__printf_chk@plt>
   19eb3:	nop    DWORD PTR [rax+rax*1+0x0]
   19eb8:	pop    rbx
   19eb9:	pop    rbp
   19eba:	pop    r12
   19ebc:	jmp    19c50 <hvm_inj_exc_process>
   19ec1:	nop    DWORD PTR [rax+0x0]
   19ec8:	mov    edx,DWORD PTR [rbx+0x4]
   19ecb:	test   edx,edx
   19ecd:	je     19f40 <hvm_handler_process+0x1b0>
   19ecf:	sub    eax,0x82000
   19ed4:	mov    DWORD PTR [rbx+0x28404],eax
   19eda:	mov    eax,DWORD PTR [rbp+0x10]
   19edd:	cmp    eax,0x82017
   19ee2:	je     1a075 <hvm_handler_process+0x2e5>
   19ee8:	ja     1a000 <hvm_handler_process+0x270>
   19eee:	cmp    eax,0x8200d
   19ef3:	je     1a084 <hvm_handler_process+0x2f4>
   19ef9:	jbe    1a039 <hvm_handler_process+0x2a9>
   19eff:	cmp    eax,0x82012
   19f04:	je     1a0de <hvm_handler_process+0x34e>
   19f0a:	cmp    eax,0x82016
   19f0f:	je     1a093 <hvm_handler_process+0x303>
   19f15:	cmp    eax,0x8200f
   19f1a:	jne    1a0a9 <hvm_handler_process+0x319>
   19f20:	mov    rsi,rbx
   19f23:	mov    rdi,rbp
   19f26:	pop    rbx
   19f27:	pop    rbp
   19f28:	pop    r12
   19f2a:	jmp    fd20 <hvm_intr_process>
   19f2f:	nop
   19f30:	pop    rbx
   19f31:	pop    rbp
   19f32:	pop    r12
   19f34:	jmp    db90 <hvm_inj_virq_process>
   19f39:	nop    DWORD PTR [rax+0x0]
   19f40:	test   BYTE PTR [rip+0x20f15a],0x40        # 2290a1 <opt+0x1>
   19f47:	je     19e6e <hvm_handler_process+0xde>
   19f4d:	pop    rbx
   19f4e:	pop    rbp
   19f4f:	pop    r12
   19f51:	lea    rsi,[rip+0x3639]        # 1d591 <_IO_stdin_used+0x5d1>
   19f58:	jmp    102f0 <hvm_generic_dump>
   19f5d:	nop    DWORD PTR [rax]
   19f60:	mov    rax,QWORD PTR [rbx+0x10]
   19f64:	mov    edi,DWORD PTR [rbp+0x0]
   19f67:	mov    rbx,QWORD PTR [rax+0x60]
   19f6b:	call   19b50 <pcpu_string>
   19f70:	mov    ecx,DWORD PTR [rbp+0x134]
   19f76:	mov    edx,DWORD PTR [rbp+0x130]
   19f7c:	lea    rsi,[rip+0x7d05]        # 21c88 <_IO_stdin_used+0x4cc8>
   19f83:	mov    r9,rbx
   19f86:	mov    r8,rax
   19f89:	mov    edi,0x1
   19f8e:	pop    rbx
   19f8f:	pop    rbp
   19f90:	pop    r12
   19f92:	xor    eax,eax
   19f94:	jmp    44f0 <__printf_chk@plt>
   19f99:	nop    DWORD PTR [rax+0x0]
   19fa0:	mov    rcx,QWORD PTR [r12+0x10]
   19fa5:	mov    rdi,QWORD PTR [rip+0x24b2ac]        # 265258 <warn>
   19fac:	lea    rdx,[rip+0x7c75]        # 21c28 <_IO_stdin_used+0x4c68>
   19fb3:	mov    esi,0x1
   19fb8:	xor    eax,eax
   19fba:	call   4560 <__fprintf_chk@plt>
   19fbf:	jmp    19e58 <hvm_handler_process+0xc8>
   19fc4:	nop    DWORD PTR [rax+0x0]
   19fc8:	test   BYTE PTR [rip+0x20f0d3],0x20        # 2290a2 <opt+0x2>
   19fcf:	je     19e61 <hvm_handler_process+0xd1>
   19fd5:	mov    rcx,QWORD PTR [rip+0x24b27c]        # 265258 <warn>
   19fdc:	lea    rdi,[rip+0x7c75]        # 21c58 <_IO_stdin_used+0x4c98>
   19fe3:	mov    edx,0x2e
   19fe8:	mov    esi,0x1
   19fed:	call   4550 <fwrite@plt>
   19ff2:	jmp    19e61 <hvm_handler_process+0xd1>
   19ff7:	nop    WORD PTR [rax+rax*1+0x0]
   1a000:	cmp    eax,0x82109
   1a005:	je     1a10b <hvm_handler_process+0x37b>
   1a00b:	ja     1a05a <hvm_handler_process+0x2ca>
   1a00d:	cmp    eax,0x82021
   1a012:	je     1a0fc <hvm_handler_process+0x36c>
   1a018:	cmp    eax,0x82101
   1a01d:	je     1a0ed <hvm_handler_process+0x35d>
   1a023:	cmp    eax,0x8201a
   1a028:	jne    1a0a9 <hvm_handler_process+0x319>
   1a02a:	mov    rsi,rbx
   1a02d:	mov    rdi,rbp
   1a030:	pop    rbx
   1a031:	pop    rbp
   1a032:	pop    r12
   1a034:	jmp    10110 <hvm_rdtsc_process>
   1a039:	cmp    eax,0x82009
   1a03e:	je     1a10b <hvm_handler_process+0x37b>
   1a044:	cmp    eax,0x8200c
   1a049:	jne    1a0a2 <hvm_handler_process+0x312>
   1a04b:	mov    rsi,rbx
   1a04e:	mov    rdi,rbp
   1a051:	pop    rbx
   1a052:	pop    rbp
   1a053:	pop    r12
   1a055:	jmp    14c40 <hvm_msr_read_process>
   1a05a:	cmp    eax,0x82216
   1a05f:	je     1a093 <hvm_handler_process+0x303>
   1a061:	jbe    1a11a <hvm_handler_process+0x38a>
   1a067:	cmp    eax,0x82217
   1a06c:	je     1a075 <hvm_handler_process+0x2e5>
   1a06e:	cmp    eax,0x82317
   1a073:	jne    1a0a9 <hvm_handler_process+0x319>
   1a075:	mov    rsi,rbx
   1a078:	mov    rdi,rbp
   1a07b:	pop    rbx
   1a07c:	pop    rbp
   1a07d:	pop    r12
   1a07f:	jmp    da40 <hvm_mmio_assist_process>
   1a084:	mov    rsi,rbx
   1a087:	mov    rdi,rbp
   1a08a:	pop    rbx
   1a08b:	pop    rbp
   1a08c:	pop    r12
   1a08e:	jmp    14b70 <hvm_msr_write_process>
   1a093:	mov    rsi,rbx
   1a096:	mov    rdi,rbp
   1a099:	pop    rbx
   1a09a:	pop    rbp
   1a09b:	pop    r12
   1a09d:	jmp    13870 <hvm_io_assist_process>
   1a0a2:	cmp    eax,0x82001
   1a0a7:	je     1a0ed <hvm_handler_process+0x35d>
   1a0a9:	test   BYTE PTR [rip+0x20eff1],0x40        # 2290a1 <opt+0x1>
   1a0b0:	je     1a0c1 <hvm_handler_process+0x331>
   1a0b2:	lea    rsi,[rip+0x347d]        # 1d536 <_IO_stdin_used+0x576>
   1a0b9:	mov    rdi,rbp
   1a0bc:	call   102f0 <hvm_generic_dump>
   1a0c1:	mov    eax,DWORD PTR [rip+0x20efdd]        # 2290a4 <opt+0x4>
   1a0c7:	test   eax,eax
   1a0c9:	je     19e6e <hvm_handler_process+0xde>
   1a0cf:	mov    rsi,rbx
   1a0d2:	mov    rdi,rbp
   1a0d5:	pop    rbx
   1a0d6:	pop    rbp
   1a0d7:	pop    r12
   1a0d9:	jmp    10210 <hvm_generic_postprocess_init>
   1a0de:	mov    rsi,rbx
   1a0e1:	mov    rdi,rbp
   1a0e4:	pop    rbx
   1a0e5:	pop    rbp
   1a0e6:	pop    r12
   1a0e8:	jmp    fc50 <hvm_vmcall_process>
   1a0ed:	mov    rsi,rbx
   1a0f0:	mov    rdi,rbp
   1a0f3:	pop    rbx
   1a0f4:	pop    rbp
   1a0f5:	pop    r12
   1a0f7:	jmp    d370 <hvm_pf_xen_process>
   1a0fc:	mov    rsi,rbx
   1a0ff:	mov    rdi,rbp
   1a102:	pop    rbx
   1a103:	pop    rbp
   1a104:	pop    r12
   1a106:	jmp    10270 <hvm_npf_process>
   1a10b:	mov    rsi,rbx
   1a10e:	mov    rdi,rbp
   1a111:	pop    rbx
   1a112:	pop    rbp
   1a113:	pop    r12
   1a115:	jmp    fb20 <hvm_cr_write_process>
   1a11a:	cmp    eax,0x82117
   1a11f:	je     1a075 <hvm_handler_process+0x2e5>
   1a125:	jmp    1a0a9 <hvm_handler_process+0x319>
   1a127:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a130 <hvm_process>:
   1a130:	push   rbp
   1a131:	push   rbx
   1a132:	sub    rsp,0x8
   1a136:	mov    rbp,QWORD PTR [rdi+0x1a8]
   1a13d:	test   rbp,rbp
   1a140:	je     1a240 <hvm_process+0x110>
   1a146:	mov    rbx,rdi
   1a149:	mov    esi,0x1
   1a14e:	mov    rdi,rbp
   1a151:	call   15290 <vcpu_set_data_type>
   1a156:	test   eax,eax
   1a158:	jne    1a1c0 <hvm_process+0x90>
   1a15a:	movzx  eax,BYTE PTR [rbx+0x41]
   1a15e:	lea    rdi,[rbx+0x30]
   1a162:	lea    rsi,[rbp+0x3bf8]
   1a169:	and    eax,0xfffffff0
   1a16c:	cmp    al,0x20
   1a16e:	je     1a200 <hvm_process+0xd0>
   1a174:	mov    ecx,DWORD PTR [rbx+0x40]
   1a177:	cmp    ecx,0x81002
   1a17d:	je     1a220 <hvm_process+0xf0>
   1a183:	cmp    ecx,0x81102
   1a189:	je     1a220 <hvm_process+0xf0>
   1a18f:	cmp    ecx,0x81001
   1a195:	je     1a1d0 <hvm_process+0xa0>
   1a197:	mov    rdi,QWORD PTR [rip+0x24b0ba]        # 265258 <warn>
   1a19e:	add    rsp,0x8
   1a1a2:	lea    rdx,[rip+0x3cd2]        # 1de7b <_IO_stdin_used+0xebb>
   1a1a9:	pop    rbx
   1a1aa:	pop    rbp
   1a1ab:	mov    esi,0x1
   1a1b0:	xor    eax,eax
   1a1b2:	jmp    4560 <__fprintf_chk@plt>
   1a1b7:	nop    WORD PTR [rax+rax*1+0x0]
   1a1c0:	add    rsp,0x8
   1a1c4:	pop    rbx
   1a1c5:	pop    rbp
   1a1c6:	ret    
   1a1c7:	nop    WORD PTR [rax+rax*1+0x0]
   1a1d0:	movsxd rax,DWORD PTR [rbx+0x48]
   1a1d4:	mov    rsi,QWORD PTR [rbx+0x1a8]
   1a1db:	add    QWORD PTR [rbx+0x258],rax
   1a1e2:	add    QWORD PTR [rbx+0x2b8],rax
   1a1e9:	add    rsp,0x8
   1a1ed:	pop    rbx
   1a1ee:	pop    rbp
   1a1ef:	add    rsi,0x3bf8
   1a1f6:	jmp    10f90 <hvm_vmentry_process>
   1a1fb:	nop    DWORD PTR [rax+rax*1+0x0]
   1a200:	movsxd rax,DWORD PTR [rbx+0x48]
   1a204:	add    QWORD PTR [rbx+0x268],rax
   1a20b:	add    QWORD PTR [rbx+0x2c8],rax
   1a212:	add    rsp,0x8
   1a216:	pop    rbx
   1a217:	pop    rbp
   1a218:	jmp    19d90 <hvm_handler_process>
   1a21d:	nop    DWORD PTR [rax]
   1a220:	movsxd rax,DWORD PTR [rbx+0x48]
   1a224:	mov    rdx,rbp
   1a227:	add    QWORD PTR [rbx+0x260],rax
   1a22e:	add    QWORD PTR [rbx+0x2c0],rax
   1a235:	add    rsp,0x8
   1a239:	pop    rbx
   1a23a:	pop    rbp
   1a23b:	jmp    14d10 <hvm_vmexit_process>
   1a240:	lea    rcx,[rip+0x9321]        # 23568 <__PRETTY_FUNCTION__.6883>
   1a247:	lea    rsi,[rip+0x2e3a]        # 1d088 <_IO_stdin_used+0xc8>
   1a24e:	lea    rdi,[rip+0x3724]        # 1d979 <_IO_stdin_used+0x9b9>
   1a255:	mov    edx,0x1497
   1a25a:	call   4400 <__assert_fail@plt>
   1a25f:	nop

000000000001a260 <process_lost_records_end>:
   1a260:	push   r13
   1a262:	push   r12
   1a264:	push   rbp
   1a265:	push   rbx
   1a266:	mov    rbx,rdi
   1a269:	sub    rsp,0x8
   1a26d:	test   BYTE PTR [rdi+0x1b0],0x1
   1a274:	je     1a338 <process_lost_records_end+0xd8>
   1a27a:	mov    rdx,QWORD PTR [rdi+0x38]
   1a27e:	mov    rax,QWORD PTR [rdi+0x1b8]
   1a285:	cmp    rdx,rax
   1a288:	jbe    1a32a <process_lost_records_end+0xca>
   1a28e:	test   BYTE PTR [rip+0x20ee0c],0x40        # 2290a1 <opt+0x1>
   1a295:	jne    1a3c0 <process_lost_records_end+0x160>
   1a29b:	add    DWORD PTR [rbx+0x348],0x1
   1a2a2:	sub    rdx,rax
   1a2a5:	mov    rbp,rdx
   1a2a8:	jne    1a3fc <process_lost_records_end+0x19c>
   1a2ae:	movzx  eax,BYTE PTR [rip+0x20edec]        # 2290a1 <opt+0x1>
   1a2b5:	and    eax,0x40
   1a2b8:	test   BYTE PTR [rbx+0x1b0],0x2
   1a2bf:	je     1a370 <process_lost_records_end+0x110>
   1a2c5:	mov    ebp,DWORD PTR [rbx+0x1b0]
   1a2cb:	movzx  r12d,WORD PTR [rbx+0x1b4]
   1a2d3:	shr    ebp,0x3
   1a2d6:	test   al,al
   1a2d8:	movzx  ebp,bp
   1a2db:	jne    1a4f0 <process_lost_records_end+0x290>
   1a2e1:	mov    rax,QWORD PTR [rbx+0x1a8]
   1a2e8:	test   rax,rax
   1a2eb:	je     1a54f <process_lost_records_end+0x2ef>
   1a2f1:	mov    rdx,QWORD PTR [rax+0x8]
   1a2f5:	mov    eax,DWORD PTR [rax]
   1a2f7:	sub    rsp,0x8
   1a2fb:	mov    rdi,QWORD PTR [rip+0x24af56]        # 265258 <warn>
   1a302:	mov    r8d,r12d
   1a305:	mov    ecx,ebp
   1a307:	mov    esi,0x1
   1a30c:	push   rax
   1a30d:	mov    r9d,DWORD PTR [rdx+0x8]
   1a311:	lea    rdx,[rip+0x7a20]        # 21d38 <_IO_stdin_used+0x4d78>
   1a318:	xor    eax,eax
   1a31a:	call   4560 <__fprintf_chk@plt>
   1a31f:	cmp    DWORD PTR [rip+0x20edba],0x4        # 2290e0 <opt+0x40>
   1a326:	pop    rax
   1a327:	pop    rdx
   1a328:	jbe    1a35e <process_lost_records_end+0xfe>
   1a32a:	add    rsp,0x8
   1a32e:	pop    rbx
   1a32f:	pop    rbp
   1a330:	pop    r12
   1a332:	pop    r13
   1a334:	ret    
   1a335:	nop    DWORD PTR [rax]
   1a338:	mov    ecx,DWORD PTR [rdi+0x4]
   1a33b:	mov    rdi,QWORD PTR [rip+0x24af16]        # 265258 <warn>
   1a342:	lea    rdx,[rip+0x7967]        # 21cb0 <_IO_stdin_used+0x4cf0>
   1a349:	xor    eax,eax
   1a34b:	mov    esi,0x1
   1a350:	call   4560 <__fprintf_chk@plt>
   1a355:	cmp    DWORD PTR [rip+0x20ed84],0x4        # 2290e0 <opt+0x40>
   1a35c:	ja     1a32a <process_lost_records_end+0xca>
   1a35e:	mov    edi,0x1
   1a363:	call   4540 <exit@plt>
   1a368:	nop    DWORD PTR [rax+rax*1+0x0]
   1a370:	test   al,al
   1a372:	jne    1a580 <process_lost_records_end+0x320>
   1a378:	and    BYTE PTR [rbx+0x1b0],0xfe
   1a37f:	mov    rdi,rbx
   1a382:	call   16600 <pcpu_string_draw>
   1a387:	sub    DWORD PTR [rip+0x212e26],0x1        # 22d1b4 <P+0x14>
   1a38e:	jns    1a32a <process_lost_records_end+0xca>
   1a390:	mov    ecx,DWORD PTR [rbx+0x4]
   1a393:	mov    rdi,QWORD PTR [rip+0x24aebe]        # 265258 <warn>
   1a39a:	lea    rdx,[rip+0x7a27]        # 21dc8 <_IO_stdin_used+0x4e08>
   1a3a1:	xor    eax,eax
   1a3a3:	mov    esi,0x1
   1a3a8:	call   4560 <__fprintf_chk@plt>
   1a3ad:	cmp    DWORD PTR [rip+0x20ed2c],0x6        # 2290e0 <opt+0x40>
   1a3b4:	ja     1a32a <process_lost_records_end+0xca>
   1a3ba:	jmp    1a35e <process_lost_records_end+0xfe>
   1a3bc:	nop    DWORD PTR [rax+0x0]
   1a3c0:	mov    edi,DWORD PTR [rdi+0x4]
   1a3c3:	call   19b50 <pcpu_string>
   1a3c8:	lea    rsi,[rip+0x7911]        # 21ce0 <_IO_stdin_used+0x4d20>
   1a3cf:	mov    rdx,rax
   1a3d2:	mov    edi,0x1
   1a3d7:	xor    eax,eax
   1a3d9:	call   44f0 <__printf_chk@plt>
   1a3de:	mov    rdx,QWORD PTR [rbx+0x38]
   1a3e2:	mov    rax,QWORD PTR [rbx+0x1b8]
   1a3e9:	add    DWORD PTR [rbx+0x348],0x1
   1a3f0:	sub    rdx,rax
   1a3f3:	mov    rbp,rdx
   1a3f6:	je     1a2ae <process_lost_records_end+0x4e>
   1a3fc:	mov    edx,DWORD PTR [rip+0x20ecd6]        # 2290d8 <opt+0x38>
   1a402:	movsxd rcx,DWORD PTR [rbx+0x34c]
   1a409:	test   edx,edx
   1a40b:	mov    eax,ecx
   1a40d:	je     1a4c8 <process_lost_records_end+0x268>
   1a413:	mov    eax,DWORD PTR [rbx+0x350]
   1a419:	cmp    eax,ecx
   1a41b:	jg     1a5a8 <process_lost_records_end+0x348>
   1a421:	test   ecx,ecx
   1a423:	mov    r12d,DWORD PTR [rip+0x20ecb2]        # 2290dc <opt+0x3c>
   1a42a:	je     1a43a <process_lost_records_end+0x1da>
   1a42c:	cmp    eax,r12d
   1a42f:	jl     1a43a <process_lost_records_end+0x1da>
   1a431:	test   r12d,r12d
   1a434:	jne    1a5d2 <process_lost_records_end+0x372>
   1a43a:	add    eax,eax
   1a43c:	cmovne edx,eax
   1a43f:	test   r12d,r12d
   1a442:	je     1a5ca <process_lost_records_end+0x36a>
   1a448:	cmp    edx,r12d
   1a44b:	jle    1a5ca <process_lost_records_end+0x36a>
   1a451:	mov    rdi,QWORD PTR [rbx+0x360]
   1a458:	movsxd rsi,r12d
   1a45b:	shl    rsi,0x3
   1a45f:	call   44c0 <realloc@plt>
   1a464:	test   rax,rax
   1a467:	je     1a5be <process_lost_records_end+0x35e>
   1a46d:	mov    QWORD PTR [rbx+0x360],rax
   1a474:	mov    DWORD PTR [rbx+0x350],r12d
   1a47b:	movsxd rcx,DWORD PTR [rbx+0x34c]
   1a482:	cmp    ecx,r12d
   1a485:	jl     1a5a8 <process_lost_records_end+0x348>
   1a48b:	mov    eax,ecx
   1a48d:	cdq    
   1a48e:	idiv   r12d
   1a491:	lea    esi,[rax+0x1]
   1a494:	movsxd rdi,edx
   1a497:	mov    edx,0x55555556
   1a49c:	mov    eax,esi
   1a49e:	imul   edx
   1a4a0:	mov    eax,esi
   1a4a2:	sar    eax,0x1f
   1a4a5:	sub    eax,edx
   1a4a7:	add    eax,edi
   1a4a9:	cdq    
   1a4aa:	idiv   esi
   1a4ac:	mov    eax,ecx
   1a4ae:	test   edx,edx
   1a4b0:	jne    1a4c8 <process_lost_records_end+0x268>
   1a4b2:	mov    rax,QWORD PTR [rbx+0x360]
   1a4b9:	mov    QWORD PTR [rax+rdi*8],rbp
   1a4bd:	mov    eax,DWORD PTR [rbx+0x34c]
   1a4c3:	nop    DWORD PTR [rax+rax*1+0x0]
   1a4c8:	add    eax,0x1
   1a4cb:	add    QWORD PTR [rbx+0x358],rbp
   1a4d2:	add    DWORD PTR [rbx+0x368],0x1
   1a4d9:	mov    DWORD PTR [rbx+0x34c],eax
   1a4df:	add    QWORD PTR [rbx+0x370],rbp
   1a4e6:	jmp    1a2ae <process_lost_records_end+0x4e>
   1a4eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1a4f0:	mov    edi,DWORD PTR [rbx+0x4]
   1a4f3:	call   19b50 <pcpu_string>
   1a4f8:	lea    rsi,[rip+0x7809]        # 21d08 <_IO_stdin_used+0x4d48>
   1a4ff:	mov    rdx,rax
   1a502:	mov    r8d,r12d
   1a505:	xor    eax,eax
   1a507:	mov    ecx,ebp
   1a509:	mov    edi,0x1
   1a50e:	call   44f0 <__printf_chk@plt>
   1a513:	mov    rax,QWORD PTR [rbx+0x1a8]
   1a51a:	test   rax,rax
   1a51d:	jne    1a2f1 <process_lost_records_end+0x91>
   1a523:	test   BYTE PTR [rip+0x20eb77],0x40        # 2290a1 <opt+0x1>
   1a52a:	je     1a54f <process_lost_records_end+0x2ef>
   1a52c:	mov    ecx,DWORD PTR [rbx+0x4]
   1a52f:	mov    rdi,QWORD PTR [rip+0x24ad22]        # 265258 <warn>
   1a536:	lea    rdx,[rip+0x7833]        # 21d70 <_IO_stdin_used+0x4db0>
   1a53d:	mov    r9d,r12d
   1a540:	mov    r8d,ebp
   1a543:	mov    esi,0x1
   1a548:	xor    eax,eax
   1a54a:	call   4560 <__fprintf_chk@plt>
   1a54f:	mov    r13,QWORD PTR [rbx+0x38]
   1a553:	mov    esi,r12d
   1a556:	mov    edi,ebp
   1a558:	call   11e00 <vcpu_find>
   1a55d:	mov    rdi,rbx
   1a560:	mov    rsi,rax
   1a563:	mov    rdx,r13
   1a566:	call   16d50 <vcpu_next_update>
   1a56b:	and    BYTE PTR [rbx+0x1b0],0xf9
   1a572:	jmp    1a378 <process_lost_records_end+0x118>
   1a577:	nop    WORD PTR [rax+rax*1+0x0]
   1a580:	mov    edi,DWORD PTR [rbx+0x4]
   1a583:	call   19b50 <pcpu_string>
   1a588:	lea    rsi,[rip+0x7801]        # 21d90 <_IO_stdin_used+0x4dd0>
   1a58f:	mov    rdx,rax
   1a592:	mov    edi,0x1
   1a597:	xor    eax,eax
   1a599:	call   44f0 <__printf_chk@plt>
   1a59e:	jmp    1a378 <process_lost_records_end+0x118>
   1a5a3:	nop    DWORD PTR [rax+rax*1+0x0]
   1a5a8:	mov    rax,QWORD PTR [rbx+0x360]
   1a5af:	mov    QWORD PTR [rax+rcx*8],rbp
   1a5b3:	mov    eax,DWORD PTR [rbx+0x34c]
   1a5b9:	jmp    1a4c8 <process_lost_records_end+0x268>
   1a5be:	mov    r12d,DWORD PTR [rbx+0x350]
   1a5c5:	jmp    1a47b <process_lost_records_end+0x21b>
   1a5ca:	mov    r12d,edx
   1a5cd:	jmp    1a451 <process_lost_records_end+0x1f1>
   1a5d2:	mov    r12d,eax
   1a5d5:	jmp    1a48b <process_lost_records_end+0x22b>
   1a5da:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a5e0 <base_process>:
   1a5e0:	mov    eax,DWORD PTR [rdi+0x40]
   1a5e3:	cmp    eax,0x1f002
   1a5e8:	je     1a618 <base_process+0x38>
   1a5ea:	cmp    eax,0x1f032
   1a5ef:	je     1a610 <base_process+0x30>
   1a5f1:	cmp    eax,0x1f001
   1a5f6:	je     1a608 <base_process+0x28>
   1a5f8:	add    rdi,0x30
   1a5fc:	jmp    151f0 <process_generic>
   1a601:	nop    DWORD PTR [rax+0x0]
   1a608:	jmp    19870 <process_lost_records>
   1a60d:	nop    DWORD PTR [rax]
   1a610:	jmp    1a260 <process_lost_records_end>
   1a615:	nop    DWORD PTR [rax]
   1a618:	repz ret 
   1a61a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a620 <create_dump_header>:
   1a620:	push   r14
   1a622:	mov    rdx,QWORD PTR [rip+0x212b97]        # 22d1c0 <P+0x20>
   1a629:	push   r13
   1a62b:	push   r12
   1a62d:	lea    r12,[rdi+0x28]
   1a631:	push   rbp
   1a632:	push   rbx
   1a633:	mov    rbp,rsi
   1a636:	mov    rax,QWORD PTR [rdi+0x8]
   1a63a:	mov    rbx,rdi
   1a63d:	cmp    rax,rdx
   1a640:	jbe    1a750 <create_dump_header+0x130>
   1a646:	sub    rax,rdx
   1a649:	xor    edx,edx
   1a64b:	shl    rax,0xa
   1a64f:	div    QWORD PTR [rip+0x20ea52]        # 2290a8 <opt+0x8>
   1a656:	movabs rdx,0x44b82fa09b5a53
   1a660:	mov    r9,rax
   1a663:	mov    rcx,rax
   1a666:	mov    QWORD PTR [rbx+0x128],rax
   1a66d:	shr    r9,0x9
   1a671:	mov    esi,ecx
   1a673:	mov    rax,r9
   1a676:	mul    rdx
   1a679:	shr    rdx,0xb
   1a67d:	imul   eax,edx,0x3b9aca00
   1a683:	mov    r9,rdx
   1a686:	mov    DWORD PTR [rbx+0x130],edx
   1a68c:	sub    esi,eax
   1a68e:	test   rcx,rcx
   1a691:	mov    DWORD PTR [rbx+0x134],esi
   1a697:	je     1a766 <create_dump_header+0x146>
   1a69d:	sub    rsp,0x8
   1a6a1:	lea    r8,[rip+0x37ea]        # 1de92 <_IO_stdin_used+0xed2>
   1a6a8:	mov    rdi,r12
   1a6ab:	push   rsi
   1a6ac:	mov    ecx,0x100
   1a6b1:	mov    esi,0x100
   1a6b6:	mov    edx,0x1
   1a6bb:	xor    eax,eax
   1a6bd:	call   4320 <__snprintf_chk@plt>
   1a6c2:	pop    rsi
   1a6c3:	movsxd r13,eax
   1a6c6:	pop    rdi
   1a6c7:	add    r13,r12
   1a6ca:	mov    r12d,0x100
   1a6d0:	sub    r12d,eax
   1a6d3:	movsxd r14,r12d
   1a6d6:	mov    edi,DWORD PTR [rbx]
   1a6d8:	call   19b50 <pcpu_string>
   1a6dd:	lea    r8,[rip+0x2ae4]        # 1d1c8 <_IO_stdin_used+0x208>
   1a6e4:	mov    r9,rax
   1a6e7:	mov    edx,0x1
   1a6ec:	mov    rsi,r14
   1a6ef:	mov    rdi,r13
   1a6f2:	xor    eax,eax
   1a6f4:	mov    rcx,0xffffffffffffffff
   1a6fb:	call   4320 <__snprintf_chk@plt>
   1a700:	mov    rdx,QWORD PTR [rbp+0x1a8]
   1a707:	movsxd rdi,eax
   1a70a:	sub    r12d,eax
   1a70d:	add    rdi,r13
   1a710:	movsxd rsi,r12d
   1a713:	test   rdx,rdx
   1a716:	je     1a7a8 <create_dump_header+0x188>
   1a71c:	mov    rax,QWORD PTR [rdx+0x8]
   1a720:	mov    edx,DWORD PTR [rdx]
   1a722:	sub    rsp,0x8
   1a726:	lea    r8,[rip+0x376e]        # 1de9b <_IO_stdin_used+0xedb>
   1a72d:	mov    rcx,0xffffffffffffffff
   1a734:	push   rdx
   1a735:	mov    r9d,DWORD PTR [rax+0x8]
   1a739:	mov    edx,0x1
   1a73e:	xor    eax,eax
   1a740:	call   4320 <__snprintf_chk@plt>
   1a745:	pop    rax
   1a746:	pop    rdx
   1a747:	pop    rbx
   1a748:	pop    rbp
   1a749:	pop    r12
   1a74b:	pop    r13
   1a74d:	pop    r14
   1a74f:	ret    
   1a750:	mov    QWORD PTR [rdi+0x128],0x0
   1a75b:	mov    QWORD PTR [rdi+0x130],0x0
   1a766:	movabs rax,0x2020202020202020
   1a770:	mov    ecx,0x2020
   1a775:	lea    r13,[rbx+0x36]
   1a779:	mov    QWORD PTR [rbx+0x28],rax
   1a77d:	mov    r14d,0xf2
   1a783:	mov    DWORD PTR [r12+0x8],0x20202020
   1a78c:	mov    WORD PTR [r12+0xc],cx
   1a792:	mov    BYTE PTR [r12+0xe],0x0
   1a798:	mov    r12d,0xf2
   1a79e:	jmp    1a6d6 <create_dump_header+0xb6>
   1a7a3:	nop    DWORD PTR [rax+rax*1+0x0]
   1a7a8:	pop    rbx
   1a7a9:	pop    rbp
   1a7aa:	pop    r12
   1a7ac:	pop    r13
   1a7ae:	pop    r14
   1a7b0:	lea    rdx,[rip+0x36ec]        # 1dea3 <_IO_stdin_used+0xee3>
   1a7b7:	xor    eax,eax
   1a7b9:	jmp    43f0 <snprintf@plt>
   1a7be:	xchg   ax,ax

000000000001a7c0 <record_order_bubble>:
   1a7c0:	mov    rax,QWORD PTR [rip+0x211c99]        # 22c460 <record_order>
   1a7c7:	test   rax,rax
   1a7ca:	je     1a7fd <record_order_bubble+0x3d>
   1a7cc:	cmp    rdi,rax
   1a7cf:	je     1a888 <record_order_bubble+0xc8>
   1a7d5:	mov    edx,0x1
   1a7da:	lea    r8,[rip+0x211c7f]        # 22c460 <record_order>
   1a7e1:	jmp    1a7f1 <record_order_bubble+0x31>
   1a7e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1a7e8:	add    rdx,0x1
   1a7ec:	cmp    rcx,rdi
   1a7ef:	je     1a820 <record_order_bubble+0x60>
   1a7f1:	mov    rcx,QWORD PTR [r8+rdx*8]
   1a7f5:	movsxd rax,edx
   1a7f8:	test   rcx,rcx
   1a7fb:	jne    1a7e8 <record_order_bubble+0x28>
   1a7fd:	lea    rcx,[rip+0x89dc]        # 231e0 <__PRETTY_FUNCTION__.8354>
   1a804:	lea    rsi,[rip+0x287d]        # 1d088 <_IO_stdin_used+0xc8>
   1a80b:	lea    rdi,[rip+0x3697]        # 1dea9 <_IO_stdin_used+0xee9>
   1a812:	sub    rsp,0x8
   1a816:	mov    edx,0x2622
   1a81b:	call   4400 <__assert_fail@plt>
   1a820:	lea    esi,[rax+0x1]
   1a823:	movsxd rdx,esi
   1a826:	mov    rcx,QWORD PTR [r8+rdx*8]
   1a82a:	test   rcx,rcx
   1a82d:	je     1a880 <record_order_bubble+0xc0>
   1a82f:	mov    r11,QWORD PTR [rcx+0x18]
   1a833:	cmp    QWORD PTR [rdi+0x18],r11
   1a837:	jbe    1a880 <record_order_bubble+0xc0>
   1a839:	add    esi,0x1
   1a83c:	movsxd rsi,esi
   1a83f:	sub    rsi,rdx
   1a842:	lea    r9,[r8+rsi*8]
   1a846:	jmp    1a861 <record_order_bubble+0xa1>
   1a848:	nop    DWORD PTR [rax+rax*1+0x0]
   1a850:	add    rdx,0x1
   1a854:	mov    r10,QWORD PTR [rdi+0x18]
   1a858:	cmp    QWORD PTR [rcx+0x18],r10
   1a85c:	movsxd rax,esi
   1a85f:	jae    1a871 <record_order_bubble+0xb1>
   1a861:	mov    QWORD PTR [r8+rax*8],rcx
   1a865:	mov    rcx,QWORD PTR [r9+rdx*8]
   1a869:	movsxd rsi,edx
   1a86c:	test   rcx,rcx
   1a86f:	jne    1a850 <record_order_bubble+0x90>
   1a871:	mov    QWORD PTR [r8+rsi*8],rdi
   1a875:	ret    
   1a876:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a880:	movsxd rsi,eax
   1a883:	jmp    1a871 <record_order_bubble+0xb1>
   1a885:	nop    DWORD PTR [rax]
   1a888:	mov    esi,0x1
   1a88d:	xor    eax,eax
   1a88f:	lea    r8,[rip+0x211bca]        # 22c460 <record_order>
   1a896:	jmp    1a823 <record_order_bubble+0x63>
   1a898:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001a8a0 <record_order_insert>:
   1a8a0:	mov    rcx,QWORD PTR [rip+0x211bb9]        # 22c460 <record_order>
   1a8a7:	test   rcx,rcx
   1a8aa:	je     1a940 <record_order_insert+0xa0>
   1a8b0:	cmp    rdi,rcx
   1a8b3:	je     1a944 <record_order_insert+0xa4>
   1a8b9:	lea    rdx,[rip+0x211ba8]        # 22c468 <record_order+0x8>
   1a8c0:	jmp    1a8d1 <record_order_insert+0x31>
   1a8c2:	nop    WORD PTR [rax+rax*1+0x0]
   1a8c8:	add    rdx,0x8
   1a8cc:	cmp    rax,rdi
   1a8cf:	je     1a944 <record_order_insert+0xa4>
   1a8d1:	mov    rax,QWORD PTR [rdx]
   1a8d4:	test   rax,rax
   1a8d7:	jne    1a8c8 <record_order_insert+0x28>
   1a8d9:	mov    rsi,QWORD PTR [rdi+0x18]
   1a8dd:	cmp    QWORD PTR [rcx+0x18],rsi
   1a8e1:	mov    eax,0x1
   1a8e6:	lea    r8,[rip+0x211b73]        # 22c460 <record_order>
   1a8ed:	jb     1a902 <record_order_insert+0x62>
   1a8ef:	jmp    1a940 <record_order_insert+0xa0>
   1a8f1:	nop    DWORD PTR [rax+0x0]
   1a8f8:	add    rax,0x1
   1a8fc:	cmp    QWORD PTR [rdx+0x18],rsi
   1a900:	jae    1a90e <record_order_insert+0x6e>
   1a902:	mov    rdx,QWORD PTR [r8+rax*8]
   1a906:	movsxd rcx,eax
   1a909:	test   rdx,rdx
   1a90c:	jne    1a8f8 <record_order_insert+0x58>
   1a90e:	lea    rax,[rip+0x211b4b]        # 22c460 <record_order>
   1a915:	test   rdi,rdi
   1a918:	lea    rax,[rax+rcx*8]
   1a91c:	je     1a938 <record_order_insert+0x98>
   1a91e:	xchg   ax,ax
   1a920:	mov    rdx,QWORD PTR [rax]
   1a923:	mov    QWORD PTR [rax],rdi
   1a926:	add    rax,0x8
   1a92a:	test   rdx,rdx
   1a92d:	mov    rdi,rdx
   1a930:	jne    1a920 <record_order_insert+0x80>
   1a932:	repz ret 
   1a934:	nop    DWORD PTR [rax+0x0]
   1a938:	repz ret 
   1a93a:	nop    WORD PTR [rax+rax*1+0x0]
   1a940:	xor    ecx,ecx
   1a942:	jmp    1a90e <record_order_insert+0x6e>
   1a944:	lea    rcx,[rip+0x8875]        # 231c0 <__PRETTY_FUNCTION__.8364>
   1a94b:	lea    rsi,[rip+0x2736]        # 1d088 <_IO_stdin_used+0xc8>
   1a952:	lea    rdi,[rip+0x3560]        # 1deb9 <_IO_stdin_used+0xef9>
   1a959:	sub    rsp,0x8
   1a95d:	mov    edx,0x2639
   1a962:	call   4400 <__assert_fail@plt>
   1a967:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a970 <scan_for_new_pcpu>:
   1a970:	push   r12
   1a972:	push   rbp
   1a973:	mov    rbp,rdi
   1a976:	push   rbx
   1a977:	mov    rsi,rbp
   1a97a:	sub    rsp,0x30
   1a97e:	mov    rdi,rsp
   1a981:	mov    rax,QWORD PTR fs:0x28
   1a98a:	mov    QWORD PTR [rsp+0x28],rax
   1a98f:	xor    eax,eax
   1a991:	call   163b0 <__read_record>
   1a996:	test   rax,rax
   1a999:	je     1aaa0 <scan_for_new_pcpu+0x130>
   1a99f:	mov    r8d,DWORD PTR [rsp]
   1a9a3:	mov    r12,rax
   1a9a6:	mov    eax,r8d
   1a9a9:	and    eax,0x8fffffff
   1a9ae:	cmp    eax,0x1f003
   1a9b3:	jne    1aac8 <scan_for_new_pcpu+0x158>
   1a9b9:	mov    r8d,DWORD PTR [rsp+0x4]
   1a9be:	cmp    r8d,0x100
   1a9c5:	jg     1ab10 <scan_for_new_pcpu+0x1a0>
   1a9cb:	cmp    DWORD PTR [rip+0x2127ce],r8d        # 22d1a0 <P>
   1a9d2:	movsxd rcx,r8d
   1a9d5:	lea    rdx,[rip+0x212804]        # 22d1e0 <P+0x40>
   1a9dc:	jl     1a9f7 <scan_for_new_pcpu+0x87>
   1a9de:	lea    rax,[rcx*8+0x0]
   1a9e6:	sub    rax,rcx
   1a9e9:	shl    rax,0x7
   1a9ed:	test   BYTE PTR [rdx+rax*1],0x1
   1a9f1:	jne    1aaa0 <scan_for_new_pcpu+0x130>
   1a9f7:	lea    rbx,[rcx*8+0x0]
   1a9ff:	mov    rdi,QWORD PTR [rip+0x24a852]        # 265258 <warn>
   1aa06:	mov    r9,rbp
   1aa09:	mov    esi,0x1
   1aa0e:	xor    eax,eax
   1aa10:	sub    rbx,rcx
   1aa13:	lea    rcx,[rip+0x8876]        # 23290 <__func__.8213>
   1aa1a:	shl    rbx,0x7
   1aa1e:	add    rbx,rdx
   1aa21:	lea    rdx,[rip+0x7418]        # 21e40 <_IO_stdin_used+0x4e80>
   1aa28:	call   4560 <__fprintf_chk@plt>
   1aa2d:	movdqa xmm0,XMMWORD PTR [rsp]
   1aa32:	mov    rdi,rbx
   1aa35:	mov    rax,QWORD PTR [rsp+0x20]
   1aa3a:	or     BYTE PTR [rbx],0x1
   1aa3d:	mov    DWORD PTR [rbx+0x48],r12d
   1aa41:	movups XMMWORD PTR [rbx+0x168],xmm0
   1aa48:	mov    QWORD PTR [rbx+0x188],rax
   1aa4f:	movdqa xmm0,XMMWORD PTR [rsp+0x10]
   1aa55:	movups XMMWORD PTR [rbx+0x178],xmm0
   1aa5c:	call   164c0 <__fill_in_record_info>
   1aa61:	mov    QWORD PTR [rbx+0x20],rbp
   1aa65:	mov    QWORD PTR [rbx+0x28],rbp
   1aa69:	mov    rdi,rbx
   1aa6c:	call   1a8a0 <record_order_insert>
   1aa71:	mov    eax,DWORD PTR [rsp+0x8]
   1aa75:	mov    rdi,rbx
   1aa78:	add    rax,r12
   1aa7b:	add    rbp,rax
   1aa7e:	call   19680 <sched_default_vcpu_activate>
   1aa83:	mov    eax,DWORD PTR [rsp+0x4]
   1aa87:	cmp    eax,DWORD PTR [rip+0x212713]        # 22d1a0 <P>
   1aa8d:	jle    1aaa2 <scan_for_new_pcpu+0x132>
   1aa93:	mov    DWORD PTR [rip+0x212707],eax        # 22d1a0 <P>
   1aa99:	jmp    1aaa2 <scan_for_new_pcpu+0x132>
   1aa9b:	nop    DWORD PTR [rax+rax*1+0x0]
   1aaa0:	xor    ebp,ebp
   1aaa2:	mov    rsi,QWORD PTR [rsp+0x28]
   1aaa7:	xor    rsi,QWORD PTR fs:0x28
   1aab0:	mov    rax,rbp
   1aab3:	jne    1ab4a <scan_for_new_pcpu+0x1da>
   1aab9:	add    rsp,0x30
   1aabd:	pop    rbx
   1aabe:	pop    rbp
   1aabf:	pop    r12
   1aac1:	ret    
   1aac2:	nop    WORD PTR [rax+rax*1+0x0]
   1aac8:	mov    rdi,QWORD PTR [rip+0x211971]        # 22c440 <stderr@@GLIBC_2.2.5>
   1aacf:	lea    rcx,[rip+0x87ba]        # 23290 <__func__.8213>
   1aad6:	lea    rdx,[rip+0x731b]        # 21df8 <_IO_stdin_used+0x4e38>
   1aadd:	and    r8d,0xfffffff
   1aae4:	xor    eax,eax
   1aae6:	mov    esi,0x1
   1aaeb:	call   4560 <__fprintf_chk@plt>
   1aaf0:	cmp    DWORD PTR [rip+0x20e5e9],0x6        # 2290e0 <opt+0x40>
   1aaf7:	ja     1a9b9 <scan_for_new_pcpu+0x49>
   1aafd:	mov    edi,0x1
   1ab02:	call   4540 <exit@plt>
   1ab07:	nop    WORD PTR [rax+rax*1+0x0]
   1ab10:	mov    rdi,QWORD PTR [rip+0x211929]        # 22c440 <stderr@@GLIBC_2.2.5>
   1ab17:	lea    rcx,[rip+0x8772]        # 23290 <__func__.8213>
   1ab1e:	lea    rdx,[rip+0x72fb]        # 21e20 <_IO_stdin_used+0x4e60>
   1ab25:	xor    eax,eax
   1ab27:	mov    r9d,0x100
   1ab2d:	mov    esi,0x1
   1ab32:	call   4560 <__fprintf_chk@plt>
   1ab37:	cmp    DWORD PTR [rip+0x20e5a2],0x6        # 2290e0 <opt+0x40>
   1ab3e:	jbe    1aafd <scan_for_new_pcpu+0x18d>
   1ab40:	mov    r8d,DWORD PTR [rsp+0x4]
   1ab45:	jmp    1a9cb <scan_for_new_pcpu+0x5b>
   1ab4a:	call   43c0 <__stack_chk_fail@plt>
   1ab4f:	nop

000000000001ab50 <record_order_remove>:
   1ab50:	mov    rax,QWORD PTR [rip+0x211909]        # 22c460 <record_order>
   1ab57:	test   rax,rax
   1ab5a:	je     1ab84 <record_order_remove+0x34>
   1ab5c:	cmp    rdi,rax
   1ab5f:	je     1abb0 <record_order_remove+0x60>
   1ab61:	mov    eax,0x1
   1ab66:	lea    rsi,[rip+0x2118f3]        # 22c460 <record_order>
   1ab6d:	jmp    1ab79 <record_order_remove+0x29>
   1ab6f:	nop
   1ab70:	add    rax,0x1
   1ab74:	cmp    rdx,rdi
   1ab77:	je     1abc0 <record_order_remove+0x70>
   1ab79:	mov    rdx,QWORD PTR [rsi+rax*8]
   1ab7d:	mov    ecx,eax
   1ab7f:	test   rdx,rdx
   1ab82:	jne    1ab70 <record_order_remove+0x20>
   1ab84:	lea    rcx,[rip+0x8615]        # 231a0 <__PRETTY_FUNCTION__.8381>
   1ab8b:	lea    rsi,[rip+0x24f6]        # 1d088 <_IO_stdin_used+0xc8>
   1ab92:	lea    rdi,[rip+0x3310]        # 1dea9 <_IO_stdin_used+0xee9>
   1ab99:	sub    rsp,0x8
   1ab9d:	mov    edx,0x2659
   1aba2:	call   4400 <__assert_fail@plt>
   1aba7:	nop    WORD PTR [rax+rax*1+0x0]
   1abb0:	lea    rsi,[rip+0x2118a9]        # 22c460 <record_order>
   1abb7:	xor    ecx,ecx
   1abb9:	nop    DWORD PTR [rax+0x0]
   1abc0:	add    ecx,0x1
   1abc3:	movsxd rcx,ecx
   1abc6:	lea    rax,[rsi+rcx*8]
   1abca:	nop    WORD PTR [rax+rax*1+0x0]
   1abd0:	mov    rdx,QWORD PTR [rax]
   1abd3:	add    rax,0x8
   1abd7:	mov    QWORD PTR [rax-0x10],rdx
   1abdb:	test   rdx,rdx
   1abde:	jne    1abd0 <record_order_remove+0x80>
   1abe0:	repz ret 
   1abe2:	nop    DWORD PTR [rax+0x0]
   1abe6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001abf0 <deactivate_pcpu>:
   1abf0:	push   rbx
   1abf1:	cmp    QWORD PTR [rdi+0x1a8],0x0
   1abf9:	mov    rbx,rdi
   1abfc:	je     1ac4a <deactivate_pcpu+0x5a>
   1abfe:	mov    rsi,QWORD PTR [rdi+0x10]
   1ac02:	call   11e30 <pcpu_runstate_update>
   1ac07:	mov    rax,QWORD PTR [rbx+0x1a8]
   1ac0e:	mov    rdi,QWORD PTR [rip+0x24a643]        # 265258 <warn>
   1ac15:	lea    rcx,[rip+0x8664]        # 23280 <__func__.8218>
   1ac1c:	mov    esi,0x1
   1ac21:	mov    rdx,QWORD PTR [rax+0x8]
   1ac25:	mov    r9d,DWORD PTR [rax]
   1ac28:	xor    eax,eax
   1ac2a:	mov    r8d,DWORD PTR [rdx+0x8]
   1ac2e:	lea    rdx,[rip+0x7233]        # 21e68 <_IO_stdin_used+0x4ea8>
   1ac35:	call   4560 <__fprintf_chk@plt>
   1ac3a:	mov    rsi,QWORD PTR [rbx+0x10]
   1ac3e:	mov    rdi,QWORD PTR [rbx+0x1a8]
   1ac45:	call   15630 <lose_vcpu>
   1ac4a:	and    BYTE PTR [rbx],0xfe
   1ac4d:	mov    rdi,rbx
   1ac50:	call   1ab50 <record_order_remove>
   1ac55:	mov    eax,DWORD PTR [rbx+0x4]
   1ac58:	cmp    eax,DWORD PTR [rip+0x212542]        # 22d1a0 <P>
   1ac5e:	je     1ac68 <deactivate_pcpu+0x78>
   1ac60:	pop    rbx
   1ac61:	ret    
   1ac62:	nop    WORD PTR [rax+rax*1+0x0]
   1ac68:	test   eax,eax
   1ac6a:	mov    r8d,0xffffffff
   1ac70:	js     1aca1 <deactivate_pcpu+0xb1>
   1ac72:	lea    esi,[rax+0x1]
   1ac75:	lea    rdi,[rip+0x212564]        # 22d1e0 <P+0x40>
   1ac7c:	xor    edx,edx
   1ac7e:	xchg   ax,ax
   1ac80:	movsxd rcx,edx
   1ac83:	lea    rax,[rcx*8+0x0]
   1ac8b:	sub    rax,rcx
   1ac8e:	shl    rax,0x7
   1ac92:	test   BYTE PTR [rdi+rax*1],0x1
   1ac96:	cmovne r8d,edx
   1ac9a:	add    edx,0x1
   1ac9d:	cmp    esi,edx
   1ac9f:	jne    1ac80 <deactivate_pcpu+0x90>
   1aca1:	pop    rbx
   1aca2:	mov    rdi,QWORD PTR [rip+0x24a5af]        # 265258 <warn>
   1aca9:	lea    rcx,[rip+0x85d0]        # 23280 <__func__.8218>
   1acb0:	lea    rdx,[rip+0x71d9]        # 21e90 <_IO_stdin_used+0x4ed0>
   1acb7:	mov    esi,0x1
   1acbc:	xor    eax,eax
   1acbe:	mov    DWORD PTR [rip+0x2124db],r8d        # 22d1a0 <P>
   1acc5:	jmp    4560 <__fprintf_chk@plt>
   1acca:	nop    WORD PTR [rax+rax*1+0x0]

000000000001acd0 <process_cpu_change>:
   1acd0:	push   r13
   1acd2:	push   r12
   1acd4:	push   rbp
   1acd5:	push   rbx
   1acd6:	mov    rbx,rdi
   1acd9:	sub    rsp,0x8
   1acdd:	test   BYTE PTR [rip+0x20e3bd],0x40        # 2290a1 <opt+0x1>
   1ace4:	mov    r12,QWORD PTR [rdi+0x50]
   1ace8:	je     1acf7 <process_cpu_change+0x27>
   1acea:	cmp    DWORD PTR [rip+0x20e427],0x5        # 229118 <verbosity>
   1acf1:	jg     1af30 <process_cpu_change+0x260>
   1acf7:	mov    r9,QWORD PTR [rbx+0x20]
   1acfb:	mov    r8,QWORD PTR [rbx+0x28]
   1acff:	cmp    r9,r8
   1ad02:	je     1ad21 <process_cpu_change+0x51>
   1ad04:	mov    ecx,DWORD PTR [rbx+0x4]
   1ad07:	mov    rdi,QWORD PTR [rip+0x24a54a]        # 265258 <warn>
   1ad0e:	lea    rdx,[rip+0x71eb]        # 21f00 <_IO_stdin_used+0x4f40>
   1ad15:	mov    esi,0x1
   1ad1a:	xor    eax,eax
   1ad1c:	call   4560 <__fprintf_chk@plt>
   1ad21:	mov    ecx,DWORD PTR [r12]
   1ad25:	cmp    ecx,0x100
   1ad2b:	jg     1aef0 <process_cpu_change+0x220>
   1ad31:	cmp    DWORD PTR [rbx+0x190],ecx
   1ad37:	jle    1ad4a <process_cpu_change+0x7a>
   1ad39:	mov    rax,QWORD PTR [rbx+0x20]
   1ad3d:	cmp    rax,QWORD PTR [rip+0x212464]        # 22d1a8 <P+0x8>
   1ad44:	jg     1aed0 <process_cpu_change+0x200>
   1ad4a:	movsxd rdx,ecx
   1ad4d:	lea    rbp,[rip+0x21248c]        # 22d1e0 <P+0x40>
   1ad54:	lea    rax,[rdx*8+0x0]
   1ad5c:	sub    rax,rdx
   1ad5f:	shl    rax,0x7
   1ad63:	add    rbp,rax
   1ad66:	movzx  edx,BYTE PTR [rbp+0x0]
   1ad6a:	test   dl,0x1
   1ad6d:	jne    1ad7e <process_cpu_change+0xae>
   1ad6f:	lea    rsi,[rip+0x21242a]        # 22d1a0 <P>
   1ad76:	cmp    QWORD PTR [rsi+rax*1+0x60],0x0
   1ad7c:	je     1ade0 <process_cpu_change+0x110>
   1ad7e:	mov    DWORD PTR [rbx+0x190],ecx
   1ad84:	mov    edx,DWORD PTR [rbx+0x4]
   1ad87:	cmp    edx,DWORD PTR [r12]
   1ad8b:	je     1ae7a <process_cpu_change+0x1aa>
   1ad91:	mov    eax,DWORD PTR [r12+0x4]
   1ad96:	add    eax,DWORD PTR [rbx+0x48]
   1ad99:	add    rax,QWORD PTR [rbx+0x20]
   1ad9d:	mov    QWORD PTR [rbx+0x20],rax
   1ada1:	mov    QWORD PTR [rbx+0x28],rax
   1ada5:	cmp    rax,QWORD PTR [rip+0x20e3a4]        # 229150 <G+0x30>
   1adac:	jg     1aee0 <process_cpu_change+0x210>
   1adb2:	mov    ecx,DWORD PTR [rip+0x2123f8]        # 22d1b0 <P+0x10>
   1adb8:	test   ecx,ecx
   1adba:	je     1adcc <process_cpu_change+0xfc>
   1adbc:	mov    r9,QWORD PTR [rip+0x2123e5]        # 22d1a8 <P+0x8>
   1adc3:	cmp    rax,r9
   1adc6:	jg     1af60 <process_cpu_change+0x290>
   1adcc:	add    rsp,0x8
   1add0:	pop    rbx
   1add1:	pop    rbp
   1add2:	pop    r12
   1add4:	pop    r13
   1add6:	ret    
   1add7:	nop    WORD PTR [rax+rax*1+0x0]
   1ade0:	or     edx,0x1
   1ade3:	mov    BYTE PTR [rbp+0x0],dl
   1ade6:	mov    eax,DWORD PTR [r12]
   1adea:	cmp    eax,DWORD PTR [rip+0x2123b0]        # 22d1a0 <P>
   1adf0:	jle    1adf8 <process_cpu_change+0x128>
   1adf2:	mov    DWORD PTR [rip+0x2123a8],eax        # 22d1a0 <P>
   1adf8:	lea    rdi,[rbp+0x30]
   1adfc:	lea    rsi,[rbx+0x30]
   1ae00:	mov    ecx,0x2c
   1ae05:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1ae08:	mov    rdi,QWORD PTR [rip+0x24a449]        # 265258 <warn>
   1ae0f:	lea    rcx,[rip+0x844a]        # 23260 <__func__.8255>
   1ae16:	lea    rdx,[rip+0x7023]        # 21e40 <_IO_stdin_used+0x4e80>
   1ae1d:	mov    esi,0x1
   1ae22:	mov    eax,DWORD PTR [r12]
   1ae26:	mov    DWORD PTR [rbp+0x30],eax
   1ae29:	lea    rax,[rbp+0x16c]
   1ae30:	mov    QWORD PTR [rbp+0x50],rax
   1ae34:	mov    rax,QWORD PTR [rbx+0x20]
   1ae38:	mov    QWORD PTR [rbp+0x20],rax
   1ae3c:	mov    rax,QWORD PTR [rbx+0x20]
   1ae40:	mov    QWORD PTR [rbp+0x28],rax
   1ae44:	mov    r9,QWORD PTR [rbx+0x20]
   1ae48:	xor    eax,eax
   1ae4a:	mov    r8d,DWORD PTR [r12]
   1ae4e:	call   4560 <__fprintf_chk@plt>
   1ae53:	mov    rdi,rbp
   1ae56:	call   1a8a0 <record_order_insert>
   1ae5b:	mov    rdi,rbp
   1ae5e:	call   19680 <sched_default_vcpu_activate>
   1ae63:	mov    ecx,DWORD PTR [r12]
   1ae67:	mov    edx,DWORD PTR [rbx+0x4]
   1ae6a:	mov    DWORD PTR [rbx+0x190],ecx
   1ae70:	cmp    edx,DWORD PTR [r12]
   1ae74:	jne    1ad91 <process_cpu_change+0xc1>
   1ae7a:	test   BYTE PTR [rip+0x20e221],0x8        # 2290a2 <opt+0x2>
   1ae81:	jne    1afa0 <process_cpu_change+0x2d0>
   1ae87:	movsxd rdi,DWORD PTR [rbx+0x48]
   1ae8b:	mov    rax,QWORD PTR [rbx+0x20]
   1ae8f:	add    rax,rdi
   1ae92:	mov    QWORD PTR [rbx+0x20],rax
   1ae96:	mov    edi,DWORD PTR [r12+0x4]
   1ae9b:	add    rdi,rax
   1ae9e:	mov    QWORD PTR [rbx+0x28],rdi
   1aea2:	cmp    rdi,QWORD PTR [rip+0x20e2a7]        # 229150 <G+0x30>
   1aea9:	jg     1aee0 <process_cpu_change+0x210>
   1aeab:	mov    eax,DWORD PTR [rip+0x2122ef]        # 22d1a0 <P>
   1aeb1:	cmp    DWORD PTR [rbx+0x4],eax
   1aeb4:	jne    1adcc <process_cpu_change+0xfc>
   1aeba:	add    rsp,0x8
   1aebe:	pop    rbx
   1aebf:	pop    rbp
   1aec0:	pop    r12
   1aec2:	pop    r13
   1aec4:	jmp    1a970 <scan_for_new_pcpu>
   1aec9:	nop    DWORD PTR [rax+0x0]
   1aed0:	mov    QWORD PTR [rip+0x2122d1],rax        # 22d1a8 <P+0x8>
   1aed7:	mov    ecx,DWORD PTR [r12]
   1aedb:	jmp    1ad4a <process_cpu_change+0x7a>
   1aee0:	add    rsp,0x8
   1aee4:	pop    rbx
   1aee5:	pop    rbp
   1aee6:	pop    r12
   1aee8:	pop    r13
   1aeea:	jmp    15d30 <activate_early_eof>
   1aeef:	nop
   1aef0:	mov    rdi,QWORD PTR [rip+0x211549]        # 22c440 <stderr@@GLIBC_2.2.5>
   1aef7:	lea    rdx,[rip+0x2fd0]        # 1dece <_IO_stdin_used+0xf0e>
   1aefe:	xor    eax,eax
   1af00:	mov    r8d,0x100
   1af06:	mov    esi,0x1
   1af0b:	call   4560 <__fprintf_chk@plt>
   1af10:	cmp    DWORD PTR [rip+0x20e1c9],0x6        # 2290e0 <opt+0x40>
   1af17:	jbe    1b1ad <process_cpu_change+0x4dd>
   1af1d:	mov    ecx,DWORD PTR [r12]
   1af21:	jmp    1ad31 <process_cpu_change+0x61>
   1af26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1af30:	mov    r9d,DWORD PTR [r12+0x4]
   1af35:	sub    rsp,0x8
   1af39:	mov    ecx,DWORD PTR [rdi+0x4]
   1af3c:	lea    rdx,[rdi+0x58]
   1af40:	lea    rsi,[rip+0x6f71]        # 21eb8 <_IO_stdin_used+0x4ef8>
   1af47:	mov    edi,0x1
   1af4c:	xor    eax,eax
   1af4e:	push   r9
   1af50:	mov    r8d,DWORD PTR [r12]
   1af54:	call   44f0 <__printf_chk@plt>
   1af59:	pop    rsi
   1af5a:	pop    rdi
   1af5b:	jmp    1acf7 <process_cpu_change+0x27>
   1af60:	mov    rdi,QWORD PTR [rip+0x24a2f1]        # 265258 <warn>
   1af67:	mov    r8d,edx
   1af6a:	lea    rcx,[rip+0x82ef]        # 23260 <__func__.8255>
   1af71:	lea    rdx,[rip+0x6fc0]        # 21f38 <_IO_stdin_used+0x4f78>
   1af78:	mov    esi,0x1
   1af7d:	xor    eax,eax
   1af7f:	call   4560 <__fprintf_chk@plt>
   1af84:	add    rsp,0x8
   1af88:	mov    rdi,rbx
   1af8b:	pop    rbx
   1af8c:	pop    rbp
   1af8d:	pop    r12
   1af8f:	pop    r13
   1af91:	jmp    1abf0 <deactivate_pcpu>
   1af96:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1afa0:	movsxd rcx,DWORD PTR [rbx+0x208]
   1afa7:	mov    rax,QWORD PTR [rbx+0x1c0]
   1afae:	mov    edi,0x1
   1afb3:	cmp    QWORD PTR [rbx+0x1c8],rax
   1afba:	mov    r9,QWORD PTR [rbx+0x38]
   1afbe:	cmovae rax,QWORD PTR [rbx+0x1c8]
   1afc6:	lea    rsi,[rbx+rcx*8]
   1afca:	mov    r8,QWORD PTR [rsi+0x1d0]
   1afd1:	sub    r9,rax
   1afd4:	lea    rax,[rip+0x20e465]        # 229440 <runstate_name>
   1afdb:	mov    rcx,QWORD PTR [rax+rcx*8]
   1afdf:	xor    eax,eax
   1afe1:	add    r8,r9
   1afe4:	mov    QWORD PTR [rsi+0x1d0],r8
   1afeb:	lea    rsi,[rip+0x6f96]        # 21f88 <_IO_stdin_used+0x4fc8>
   1aff2:	call   44f0 <__printf_chk@plt>
   1aff7:	mov    rbp,QWORD PTR [rbx+0x38]
   1affb:	sub    rbp,QWORD PTR [rbx+0x1c0]
   1b002:	xor    edx,edx
   1b004:	movabs rsi,0x44b82fa09b5a53
   1b00e:	mov    edi,0x1
   1b013:	mov    rcx,rbp
   1b016:	sub    rcx,QWORD PTR [rip+0x2121a3]        # 22d1c0 <P+0x20>
   1b01d:	mov    r8,rbp
   1b020:	shl    rcx,0xa
   1b024:	mov    rax,rcx
   1b027:	div    QWORD PTR [rip+0x20e07a]        # 2290a8 <opt+0x8>
   1b02e:	mov    rdx,rax
   1b031:	mov    rcx,rax
   1b034:	shr    rdx,0x9
   1b038:	mov    rax,rdx
   1b03b:	mul    rsi
   1b03e:	lea    rsi,[rip+0x6f7b]        # 21fc0 <_IO_stdin_used+0x5000>
   1b045:	shr    rdx,0xb
   1b049:	imul   eax,edx,0x3b9aca00
   1b04f:	sub    ecx,eax
   1b051:	xor    eax,eax
   1b053:	call   44f0 <__printf_chk@plt>
   1b058:	mov    eax,DWORD PTR [rbx+0x20c]
   1b05e:	test   eax,eax
   1b060:	jne    1b188 <process_cpu_change+0x4b8>
   1b066:	mov    rax,QWORD PTR [rip+0x21216b]        # 22d1d8 <P+0x38>
   1b06d:	test   rax,rax
   1b070:	je     1b170 <process_cpu_change+0x4a0>
   1b076:	mov    r8,QWORD PTR [rbx+0x38]
   1b07a:	xor    edx,edx
   1b07c:	movabs rsi,0x44b82fa09b5a53
   1b086:	mov    edi,0x1
   1b08b:	sub    r8,rax
   1b08e:	mov    rcx,r8
   1b091:	sub    rcx,QWORD PTR [rip+0x212128]        # 22d1c0 <P+0x20>
   1b098:	shl    rcx,0xa
   1b09c:	mov    rax,rcx
   1b09f:	div    QWORD PTR [rip+0x20e002]        # 2290a8 <opt+0x8>
   1b0a6:	mov    rdx,rax
   1b0a9:	mov    rcx,rax
   1b0ac:	shr    rdx,0x9
   1b0b0:	mov    rax,rdx
   1b0b3:	mul    rsi
   1b0b6:	lea    rsi,[rip+0x6f2b]        # 21fe8 <_IO_stdin_used+0x5028>
   1b0bd:	shr    rdx,0xb
   1b0c1:	imul   eax,edx,0x3b9aca00
   1b0c7:	sub    ecx,eax
   1b0c9:	xor    eax,eax
   1b0cb:	call   44f0 <__printf_chk@plt>
   1b0d0:	mov    QWORD PTR [rip+0x2120fd],0x0        # 22d1d8 <P+0x38>
   1b0db:	lea    rdi,[rip+0x2e40]        # 1df22 <_IO_stdin_used+0xf62>
   1b0e2:	lea    rbp,[rbx+0x1d0]
   1b0e9:	lea    r13,[rbx+0x270]
   1b0f0:	call   4380 <puts@plt>
   1b0f5:	mov    rdi,rbp
   1b0f8:	call   12170 <runstate_summary>
   1b0fd:	mov    rdi,r13
   1b100:	call   74f0 <volume_summary>
   1b105:	mov    QWORD PTR [rbx+0x1c0],0x0
   1b110:	mov    eax,DWORD PTR [r12+0x4]
   1b115:	mov    rdi,rbp
   1b118:	mov    DWORD PTR [rbx+0x20c],eax
   1b11e:	lea    rax,[rbx+0x208]
   1b125:	nop    DWORD PTR [rax]
   1b128:	mov    QWORD PTR [rdi],0x0
   1b12f:	add    rdi,0x8
   1b133:	cmp    rax,rdi
   1b136:	jne    1b128 <process_cpu_change+0x458>
   1b138:	lea    rdi,[r13+0x8]
   1b13c:	mov    QWORD PTR [rbx+0x270],0x0
   1b147:	mov    QWORD PTR [r13+0x58],0x0
   1b14f:	xor    eax,eax
   1b151:	and    rdi,0xfffffffffffffff8
   1b155:	sub    r13,rdi
   1b158:	lea    ecx,[r13+0x60]
   1b15c:	shr    ecx,0x3
   1b15f:	rep stos QWORD PTR es:[rdi],rax
   1b162:	jmp    1ae87 <process_cpu_change+0x1b7>
   1b167:	nop    WORD PTR [rax+rax*1+0x0]
   1b170:	lea    rdi,[rip+0x2d8f]        # 1df06 <_IO_stdin_used+0xf46>
   1b177:	call   4380 <puts@plt>
   1b17c:	jmp    1b0db <process_cpu_change+0x40b>
   1b181:	nop    DWORD PTR [rax+0x0]
   1b188:	mov    ecx,eax
   1b18a:	xor    edx,edx
   1b18c:	mov    rax,rbp
   1b18f:	div    rcx
   1b192:	lea    rsi,[rip+0x2d53]        # 1deec <_IO_stdin_used+0xf2c>
   1b199:	mov    edi,0x1
   1b19e:	mov    rdx,rax
   1b1a1:	xor    eax,eax
   1b1a3:	call   44f0 <__printf_chk@plt>
   1b1a8:	jmp    1b066 <process_cpu_change+0x396>
   1b1ad:	mov    edi,0x1
   1b1b2:	call   4540 <exit@plt>
   1b1b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b1c0 <process_record>:
   1b1c0:	mov    eax,DWORD PTR [rdi+0x40]
   1b1c3:	cmp    eax,0x1f003
   1b1c8:	je     1b298 <process_record+0xd8>
   1b1ce:	test   BYTE PTR [rip+0x20decd],0x2        # 2290a2 <opt+0x2>
   1b1d5:	push   r12
   1b1d7:	push   rbp
   1b1d8:	push   rbx
   1b1d9:	mov    rbx,rdi
   1b1dc:	jne    1b281 <process_record+0xc1>
   1b1e2:	or     BYTE PTR [rdi],0x2
   1b1e5:	lea    r12,[rdi+0x30]
   1b1e9:	cmp    BYTE PTR [rip+0x20deb1],0x0        # 2290a1 <opt+0x1>
   1b1f0:	js     1b2b0 <process_record+0xf0>
   1b1f6:	mov    rdi,QWORD PTR [rbx+0x18]
   1b1fa:	mov    rsi,r12
   1b1fd:	call   15df0 <process_record_tsc>
   1b202:	test   BYTE PTR [rip+0x20de98],0x40        # 2290a1 <opt+0x1>
   1b209:	jne    1b2a0 <process_record+0xe0>
   1b20f:	mov    rdi,r12
   1b212:	call   15ef0 <find_toplevel_event>
   1b217:	test   eax,eax
   1b219:	mov    ebp,eax
   1b21b:	js     1b290 <process_record+0xd0>
   1b21d:	mov    rsi,rbx
   1b220:	mov    edi,eax
   1b222:	call   15f90 <toplevel_assert_check>
   1b227:	test   eax,eax
   1b229:	je     1b250 <process_record+0x90>
   1b22b:	cmp    ebp,0x7
   1b22e:	ja     1b248 <process_record+0x88>
   1b230:	lea    rcx,[rip+0x7f09]        # 23140 <_IO_stdin_used+0x6180>
   1b237:	mov    edx,ebp
   1b239:	mov    rdi,rbx
   1b23c:	movsxd rax,DWORD PTR [rcx+rdx*4]
   1b240:	add    rax,rcx
   1b243:	jmp    rax
   1b245:	nop    DWORD PTR [rax]
   1b248:	mov    rdi,r12
   1b24b:	call   151f0 <process_generic>
   1b250:	movsxd rbp,ebp
   1b253:	movsxd rdx,DWORD PTR [rbx+0x48]
   1b257:	lea    rax,[rbx+rbp*8]
   1b25b:	add    QWORD PTR [rax+0x210],rdx
   1b262:	add    QWORD PTR [rax+0x270],rdx
   1b269:	cmp    QWORD PTR [rbx+0x1c0],0x0
   1b271:	jne    1b27e <process_record+0xbe>
   1b273:	mov    rax,QWORD PTR [rbx+0x38]
   1b277:	mov    QWORD PTR [rbx+0x1c0],rax
   1b27e:	mov    eax,DWORD PTR [rbx+0x40]
   1b281:	cmp    eax,0x1f001
   1b286:	je     1b290 <process_record+0xd0>
   1b288:	movsxd rax,DWORD PTR [rbx+0x48]
   1b28c:	add    QWORD PTR [rbx+0x20],rax
   1b290:	pop    rbx
   1b291:	pop    rbp
   1b292:	pop    r12
   1b294:	ret    
   1b295:	nop    DWORD PTR [rax]
   1b298:	jmp    1acd0 <process_cpu_change>
   1b29d:	nop    DWORD PTR [rax]
   1b2a0:	mov    rsi,rbx
   1b2a3:	mov    rdi,r12
   1b2a6:	call   1a620 <create_dump_header>
   1b2ab:	jmp    1b20f <process_record+0x4f>
   1b2b0:	lea    rdi,[rip+0x2c87]        # 1df3e <_IO_stdin_used+0xf7e>
   1b2b7:	mov    rsi,r12
   1b2ba:	call   149a0 <dump_raw>
   1b2bf:	jmp    1b1f6 <process_record+0x36>
   1b2c4:	nop    DWORD PTR [rax+0x0]
   1b2c8:	call   152f0 <shadow_process>
   1b2cd:	jmp    1b250 <process_record+0x90>
   1b2cf:	nop
   1b2d0:	call   14790 <pv_process>
   1b2d5:	jmp    1b250 <process_record+0x90>
   1b2da:	nop    WORD PTR [rax+rax*1+0x0]
   1b2e0:	call   14860 <mem_process>
   1b2e5:	jmp    1b250 <process_record+0x90>
   1b2ea:	nop    WORD PTR [rax+rax*1+0x0]
   1b2f0:	call   1a130 <hvm_process>
   1b2f5:	jmp    1b250 <process_record+0x90>
   1b2fa:	nop    WORD PTR [rax+rax*1+0x0]
   1b300:	call   15220 <dom0_process>
   1b305:	jmp    1b250 <process_record+0x90>
   1b30a:	nop    WORD PTR [rax+rax*1+0x0]
   1b310:	call   184a0 <sched_process>
   1b315:	jmp    1b250 <process_record+0x90>
   1b31a:	nop    WORD PTR [rax+rax*1+0x0]
   1b320:	call   1a5e0 <base_process>
   1b325:	jmp    1b250 <process_record+0x90>
   1b32a:	nop    WORD PTR [rax+rax*1+0x0]
   1b330:	call   19840 <hw_process>
   1b335:	jmp    1b250 <process_record+0x90>
   1b33a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b340 <read_record>:
   1b340:	push   rbx
   1b341:	mov    rsi,QWORD PTR [rdi+0x20]
   1b345:	mov    rbx,rdi
   1b348:	add    rdi,0x168
   1b34f:	call   163b0 <__read_record>
   1b354:	test   eax,eax
   1b356:	mov    DWORD PTR [rbx+0x48],eax
   1b359:	jne    1b390 <read_record+0x50>
   1b35b:	mov    r8d,DWORD PTR [rbx+0x4]
   1b35f:	mov    rdi,QWORD PTR [rip+0x249ef2]        # 265258 <warn>
   1b366:	lea    rcx,[rip+0x7e9b]        # 23208 <__func__.8328>
   1b36d:	lea    rdx,[rip+0x6ca4]        # 22018 <_IO_stdin_used+0x5058>
   1b374:	mov    esi,0x1
   1b379:	xor    eax,eax
   1b37b:	call   4560 <__fprintf_chk@plt>
   1b380:	mov    rdi,rbx
   1b383:	call   1abf0 <deactivate_pcpu>
   1b388:	movsxd rax,DWORD PTR [rbx+0x48]
   1b38c:	pop    rbx
   1b38d:	ret    
   1b38e:	xchg   ax,ax
   1b390:	mov    rdi,rbx
   1b393:	call   164c0 <__fill_in_record_info>
   1b398:	movsxd rax,DWORD PTR [rbx+0x48]
   1b39c:	pop    rbx
   1b39d:	ret    
   1b39e:	xchg   ax,ax

000000000001b3a0 <choose_next_record>:
   1b3a0:	sub    rsp,0x18
   1b3a4:	test   BYTE PTR [rip+0x20dcf8],0x8        # 2290a3 <opt+0x3>
   1b3ab:	mov    rax,QWORD PTR [rip+0x2110ae]        # 22c460 <record_order>
   1b3b2:	je     1b3d0 <choose_next_record+0x30>
   1b3b4:	test   rax,rax
   1b3b7:	je     1b3d5 <choose_next_record+0x35>
   1b3b9:	mov    rdi,QWORD PTR [rax+0x20]
   1b3bd:	cmp    rdi,QWORD PTR [rip+0x20dd94]        # 229158 <G+0x38>
   1b3c4:	jge    1b400 <choose_next_record+0x60>
   1b3c6:	add    rsp,0x18
   1b3ca:	ret    
   1b3cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1b3d0:	test   rax,rax
   1b3d3:	jne    1b3c6 <choose_next_record+0x26>
   1b3d5:	cmp    DWORD PTR [rip+0x211dc4],0xffffffff        # 22d1a0 <P>
   1b3dc:	je     1b3c6 <choose_next_record+0x26>
   1b3de:	lea    rcx,[rip+0x7d9b]        # 23180 <__PRETTY_FUNCTION__.8389>
   1b3e5:	lea    rsi,[rip+0x1c9c]        # 1d088 <_IO_stdin_used+0xc8>
   1b3ec:	lea    rdi,[rip+0x6c55]        # 22048 <_IO_stdin_used+0x5088>
   1b3f3:	mov    edx,0x266a
   1b3f8:	call   4400 <__assert_fail@plt>
   1b3fd:	nop    DWORD PTR [rax]
   1b400:	mov    QWORD PTR [rsp+0x8],rax
   1b405:	call   16260 <progress_update>
   1b40a:	mov    rax,QWORD PTR [rsp+0x8]
   1b40f:	add    rsp,0x18
   1b413:	ret    
   1b414:	xchg   ax,ax
   1b416:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001b420 <process_records>:
   1b420:	push   rbp
   1b421:	push   rbx
   1b422:	lea    rbp,[rip+0x6c47]        # 22070 <_IO_stdin_used+0x50b0>
   1b429:	sub    rsp,0x8
   1b42d:	jmp    1b44d <process_records+0x2d>
   1b42f:	nop
   1b430:	mov    rcx,QWORD PTR [rbx+0x38]
   1b434:	mov    r8,QWORD PTR [rbx+0x18]
   1b438:	mov    DWORD PTR [rbx+0x40],0x1f032
   1b43f:	cmp    rcx,r8
   1b442:	jbe    1b498 <process_records+0x78>
   1b444:	mov    QWORD PTR [rbx+0x18],rcx
   1b448:	test   BYTE PTR [rbx],0x1
   1b44b:	jne    1b478 <process_records+0x58>
   1b44d:	call   1b3a0 <choose_next_record>
   1b452:	test   rax,rax
   1b455:	mov    rbx,rax
   1b458:	je     1b48d <process_records+0x6d>
   1b45a:	mov    rdi,rax
   1b45d:	call   1b1c0 <process_record>
   1b462:	cmp    DWORD PTR [rbx+0x40],0x1f001
   1b469:	je     1b430 <process_records+0x10>
   1b46b:	mov    rdi,rbx
   1b46e:	call   1b340 <read_record>
   1b473:	test   BYTE PTR [rbx],0x1
   1b476:	je     1b44d <process_records+0x2d>
   1b478:	mov    rdi,rbx
   1b47b:	call   1a7c0 <record_order_bubble>
   1b480:	call   1b3a0 <choose_next_record>
   1b485:	test   rax,rax
   1b488:	mov    rbx,rax
   1b48b:	jne    1b45a <process_records+0x3a>
   1b48d:	add    rsp,0x8
   1b491:	pop    rbx
   1b492:	pop    rbp
   1b493:	ret    
   1b494:	nop    DWORD PTR [rax+0x0]
   1b498:	mov    rdi,QWORD PTR [rip+0x249db9]        # 265258 <warn>
   1b49f:	xor    eax,eax
   1b4a1:	mov    rdx,rbp
   1b4a4:	mov    esi,0x1
   1b4a9:	call   4560 <__fprintf_chk@plt>
   1b4ae:	cmp    DWORD PTR [rip+0x20dc2b],0x4        # 2290e0 <opt+0x40>
   1b4b5:	ja     1b448 <process_records+0x28>
   1b4b7:	mov    edi,0x1
   1b4bc:	call   4540 <exit@plt>
   1b4c1:	nop    DWORD PTR [rax+rax*1+0x0]
   1b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001b4d0 <vcpu_summary>:
   1b4d0:	push   rbx
   1b4d1:	mov    edx,DWORD PTR [rdi]
   1b4d3:	lea    rsi,[rip+0x2a67]        # 1df41 <_IO_stdin_used+0xf81>
   1b4da:	mov    rbx,rdi
   1b4dd:	xor    eax,eax
   1b4df:	mov    edi,0x1
   1b4e4:	call   44f0 <__printf_chk@plt>
   1b4e9:	mov    rdi,rbx
   1b4ec:	call   12210 <sched_summary_vcpu>
   1b4f1:	mov    eax,DWORD PTR [rbx+0x3bf0]
   1b4f7:	cmp    eax,0x1
   1b4fa:	je     1b510 <vcpu_summary+0x40>
   1b4fc:	cmp    eax,0x2
   1b4ff:	jne    1b50a <vcpu_summary+0x3a>
   1b501:	test   BYTE PTR [rbx+0x3bf8],0x1
   1b508:	jne    1b530 <vcpu_summary+0x60>
   1b50a:	pop    rbx
   1b50b:	ret    
   1b50c:	nop    DWORD PTR [rax+0x0]
   1b510:	mov    eax,DWORD PTR [rbx+0x3c00]
   1b516:	test   eax,eax
   1b518:	je     1b50a <vcpu_summary+0x3a>
   1b51a:	lea    rdi,[rbx+0x3bf8]
   1b521:	pop    rbx
   1b522:	jmp    7bd0 <hvm_summary.part.19>
   1b527:	nop    WORD PTR [rax+rax*1+0x0]
   1b530:	lea    rdi,[rbx+0x3bf8]
   1b537:	pop    rbx
   1b538:	jmp    6f80 <pv_summary.part.22>
   1b53d:	nop    DWORD PTR [rax]

000000000001b540 <domain_summary>:
   1b540:	test   BYTE PTR [rip+0x20db5c],0x2        # 2290a3 <opt+0x3>
   1b547:	push   r14
   1b549:	push   r13
   1b54b:	push   r12
   1b54d:	push   rbp
   1b54e:	push   rbx
   1b54f:	jne    1b635 <domain_summary+0xf5>
   1b555:	mov    r12,QWORD PTR [rip+0x249cd4]        # 265230 <domain_list>
   1b55c:	test   r12,r12
   1b55f:	je     1b604 <domain_summary+0xc4>
   1b565:	lea    r14,[rip+0x20db37]        # 2290a3 <opt+0x3>
   1b56c:	lea    r13,[rip+0x29f0]        # 1df63 <_IO_stdin_used+0xfa3>
   1b573:	nop    DWORD PTR [rax+rax*1+0x0]
   1b578:	mov    edx,DWORD PTR [r12+0x8]
   1b57d:	mov    rsi,r13
   1b580:	mov    edi,0x1
   1b585:	xor    eax,eax
   1b587:	lea    rbx,[r12+0x10]
   1b58c:	lea    rbp,[r12+0x810]
   1b594:	call   44f0 <__printf_chk@plt>
   1b599:	mov    rdi,r12
   1b59c:	call   12b10 <sched_summary_domain>
   1b5a1:	mov    rdi,r12
   1b5a4:	call   12d50 <mem_summary_domain>
   1b5a9:	nop    DWORD PTR [rax+0x0]
   1b5b0:	mov    rdi,QWORD PTR [rbx]
   1b5b3:	test   rdi,rdi
   1b5b6:	je     1b5bd <domain_summary+0x7d>
   1b5b8:	call   1b4d0 <vcpu_summary>
   1b5bd:	add    rbx,0x8
   1b5c1:	cmp    rbx,rbp
   1b5c4:	jne    1b5b0 <domain_summary+0x70>
   1b5c6:	lea    rdi,[rip+0x29a9]        # 1df76 <_IO_stdin_used+0xfb6>
   1b5cd:	call   4380 <puts@plt>
   1b5d2:	mov    rdi,QWORD PTR [r12+0x9e8]
   1b5da:	call   9450 <dump_eip>
   1b5df:	test   BYTE PTR [r14],0x1
   1b5e3:	jne    1b60d <domain_summary+0xcd>
   1b5e5:	mov    rdi,QWORD PTR [r12+0x9e0]
   1b5ed:	test   rdi,rdi
   1b5f0:	je     1b5f7 <domain_summary+0xb7>
   1b5f2:	call   b530 <cr3_dump_list.part.15>
   1b5f7:	mov    r12,QWORD PTR [r12]
   1b5fb:	test   r12,r12
   1b5fe:	jne    1b578 <domain_summary+0x38>
   1b604:	pop    rbx
   1b605:	pop    rbp
   1b606:	pop    r12
   1b608:	pop    r13
   1b60a:	pop    r14
   1b60c:	ret    
   1b60d:	mov    edx,DWORD PTR [rip+0x20dabd]        # 2290d0 <opt+0x30>
   1b613:	lea    rsi,[rip+0x6a96]        # 220b0 <_IO_stdin_used+0x50f0>
   1b61a:	mov    edi,0x1
   1b61f:	xor    eax,eax
   1b621:	call   44f0 <__printf_chk@plt>
   1b626:	mov    rdi,QWORD PTR [r12+0x9f0]
   1b62e:	call   9450 <dump_eip>
   1b633:	jmp    1b5e5 <domain_summary+0xa5>
   1b635:	lea    rbx,[rip+0x24df14]        # 269550 <default_domain+0x10>
   1b63c:	lea    rdi,[rip+0x2909]        # 1df4c <_IO_stdin_used+0xf8c>
   1b643:	lea    rbp,[rbx+0x800]
   1b64a:	call   4380 <puts@plt>
   1b64f:	nop
   1b650:	mov    rdi,QWORD PTR [rbx]
   1b653:	test   rdi,rdi
   1b656:	je     1b65d <domain_summary+0x11d>
   1b658:	call   1b4d0 <vcpu_summary>
   1b65d:	add    rbx,0x8
   1b661:	cmp    rbx,rbp
   1b664:	jne    1b650 <domain_summary+0x110>
   1b666:	jmp    1b555 <domain_summary+0x15>
   1b66b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b670 <report_pcpu>:
   1b670:	push   r15
   1b672:	push   r14
   1b674:	lea    r14,[rip+0x290c]        # 1df87 <_IO_stdin_used+0xfc7>
   1b67b:	push   r13
   1b67d:	push   r12
   1b67f:	xor    r13d,r13d
   1b682:	push   rbp
   1b683:	push   rbx
   1b684:	xor    ebp,ebp
   1b686:	lea    rbx,[rip+0x211b53]        # 22d1e0 <P+0x40>
   1b68d:	sub    rsp,0x18
   1b691:	jmp    1b942 <report_pcpu+0x2d2>
   1b696:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1b6a0:	cmp    DWORD PTR [rbx+0x318],ecx
   1b6a6:	mov    rdi,QWORD PTR [rbx+0x328]
   1b6ad:	mov    edx,0x32
   1b6b2:	cmovle ecx,DWORD PTR [rbx+0x318]
   1b6b9:	mov    QWORD PTR [rsp+0x8],rax
   1b6be:	mov    esi,ecx
   1b6c0:	mov    r12d,ecx
   1b6c3:	call   79c0 <self_weighted_percentile>
   1b6c8:	mov    rdi,QWORD PTR [rbx+0x328]
   1b6cf:	mov    edx,0x5
   1b6d4:	mov    esi,r12d
   1b6d7:	mov    r15,rax
   1b6da:	call   79c0 <self_weighted_percentile>
   1b6df:	mov    rdi,QWORD PTR [rbx+0x328]
   1b6e6:	mov    edx,0x5f
   1b6eb:	mov    esi,r12d
   1b6ee:	mov    QWORD PTR [rsp],rax
   1b6f2:	call   79c0 <self_weighted_percentile>
   1b6f7:	mov    rdx,QWORD PTR [rbx+0x320]
   1b6fe:	mov    r9,QWORD PTR [rsp]
   1b702:	mov    r8,QWORD PTR [rsp+0x8]
   1b707:	test   rdx,rdx
   1b70a:	js     1ba80 <report_pcpu+0x410>
   1b710:	pxor   xmm0,xmm0
   1b714:	cvtsi2sd xmm0,rdx
   1b719:	pxor   xmm1,xmm1
   1b71d:	mov    ecx,DWORD PTR [rbx+0x314]
   1b723:	push   rax
   1b724:	lea    rdx,[rip+0x1b98]        # 1d2c3 <_IO_stdin_used+0x303>
   1b72b:	push   r15
   1b72d:	lea    rsi,[rip+0x4204]        # 1f938 <_IO_stdin_used+0x2978>
   1b734:	mov    edi,0x1
   1b739:	mov    eax,0x1
   1b73e:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d969]        # 2290b0 <opt+0x10>
   1b747:	divsd  xmm0,xmm1
   1b74b:	call   44f0 <__printf_chk@plt>
   1b750:	pop    r11
   1b752:	pop    r12
   1b754:	mov    ecx,DWORD PTR [rbx+0x2dc]
   1b75a:	test   ecx,ecx
   1b75c:	je     1b83b <report_pcpu+0x1cb>
   1b762:	mov    rsi,QWORD PTR [rbx+0x2e8]
   1b769:	xor    edx,edx
   1b76b:	movsxd rdi,ecx
   1b76e:	mov    r10d,DWORD PTR [rip+0x20d963]        # 2290d8 <opt+0x38>
   1b775:	mov    rax,rsi
   1b778:	div    rdi
   1b77b:	test   r10d,r10d
   1b77e:	mov    r8,rax
   1b781:	je     1ba18 <report_pcpu+0x3a8>
   1b787:	cmp    DWORD PTR [rbx+0x2e0],ecx
   1b78d:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1b794:	mov    edx,0x32
   1b799:	cmovle ecx,DWORD PTR [rbx+0x2e0]
   1b7a0:	mov    QWORD PTR [rsp+0x8],rax
   1b7a5:	mov    esi,ecx
   1b7a7:	mov    r12d,ecx
   1b7aa:	call   79c0 <self_weighted_percentile>
   1b7af:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1b7b6:	mov    edx,0x5
   1b7bb:	mov    esi,r12d
   1b7be:	mov    r15,rax
   1b7c1:	call   79c0 <self_weighted_percentile>
   1b7c6:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1b7cd:	mov    edx,0x5f
   1b7d2:	mov    esi,r12d
   1b7d5:	mov    QWORD PTR [rsp],rax
   1b7d9:	call   79c0 <self_weighted_percentile>
   1b7de:	mov    rdx,QWORD PTR [rbx+0x2e8]
   1b7e5:	mov    r9,QWORD PTR [rsp]
   1b7e9:	mov    r8,QWORD PTR [rsp+0x8]
   1b7ee:	test   rdx,rdx
   1b7f1:	js     1baa0 <report_pcpu+0x430>
   1b7f7:	pxor   xmm0,xmm0
   1b7fb:	cvtsi2sd xmm0,rdx
   1b800:	pxor   xmm1,xmm1
   1b804:	mov    ecx,DWORD PTR [rbx+0x2dc]
   1b80a:	push   rax
   1b80b:	lea    rdx,[rip+0x277e]        # 1df90 <_IO_stdin_used+0xfd0>
   1b812:	push   r15
   1b814:	lea    rsi,[rip+0x411d]        # 1f938 <_IO_stdin_used+0x2978>
   1b81b:	mov    edi,0x1
   1b820:	mov    eax,0x1
   1b825:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d882]        # 2290b0 <opt+0x10>
   1b82e:	divsd  xmm0,xmm1
   1b832:	call   44f0 <__printf_chk@plt>
   1b837:	pop    r8
   1b839:	pop    r9
   1b83b:	mov    ecx,DWORD PTR [rbx+0x34c]
   1b841:	test   ecx,ecx
   1b843:	je     1b91e <report_pcpu+0x2ae>
   1b849:	mov    rsi,QWORD PTR [rbx+0x358]
   1b850:	movsxd rdi,ecx
   1b853:	xor    edx,edx
   1b855:	mov    rax,rsi
   1b858:	div    rdi
   1b85b:	mov    edi,DWORD PTR [rip+0x20d877]        # 2290d8 <opt+0x38>
   1b861:	test   edi,edi
   1b863:	mov    r8,rax
   1b866:	je     1b9d0 <report_pcpu+0x360>
   1b86c:	cmp    DWORD PTR [rbx+0x350],ecx
   1b872:	mov    rdi,QWORD PTR [rbx+0x360]
   1b879:	mov    edx,0x32
   1b87e:	cmovle ecx,DWORD PTR [rbx+0x350]
   1b885:	mov    QWORD PTR [rsp+0x8],rax
   1b88a:	mov    esi,ecx
   1b88c:	mov    r12d,ecx
   1b88f:	call   79c0 <self_weighted_percentile>
   1b894:	mov    rdi,QWORD PTR [rbx+0x360]
   1b89b:	mov    edx,0x5
   1b8a0:	mov    esi,r12d
   1b8a3:	mov    r15,rax
   1b8a6:	call   79c0 <self_weighted_percentile>
   1b8ab:	mov    rdi,QWORD PTR [rbx+0x360]
   1b8b2:	mov    edx,0x5f
   1b8b7:	mov    esi,r12d
   1b8ba:	mov    QWORD PTR [rsp],rax
   1b8be:	call   79c0 <self_weighted_percentile>
   1b8c3:	mov    rdx,QWORD PTR [rbx+0x358]
   1b8ca:	mov    r9,QWORD PTR [rsp]
   1b8ce:	mov    r8,QWORD PTR [rsp+0x8]
   1b8d3:	test   rdx,rdx
   1b8d6:	js     1ba60 <report_pcpu+0x3f0>
   1b8dc:	pxor   xmm0,xmm0
   1b8e0:	cvtsi2sd xmm0,rdx
   1b8e5:	pxor   xmm1,xmm1
   1b8e9:	mov    ecx,DWORD PTR [rbx+0x34c]
   1b8ef:	push   rax
   1b8f0:	lea    rdx,[rip+0x26a2]        # 1df99 <_IO_stdin_used+0xfd9>
   1b8f7:	push   r15
   1b8f9:	lea    rsi,[rip+0x4038]        # 1f938 <_IO_stdin_used+0x2978>
   1b900:	mov    edi,0x1
   1b905:	mov    eax,0x1
   1b90a:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d79d]        # 2290b0 <opt+0x10>
   1b913:	divsd  xmm0,xmm1
   1b917:	call   44f0 <__printf_chk@plt>
   1b91c:	pop    rdx
   1b91d:	pop    rcx
   1b91e:	mov    eax,DWORD PTR [rbx+0x314]
   1b924:	test   eax,eax
   1b926:	je     1b92c <report_pcpu+0x2bc>
   1b928:	add    r13d,0x1
   1b92c:	add    ebp,0x1
   1b92f:	add    rbx,0x380
   1b936:	cmp    ebp,0x100
   1b93c:	je     1bb20 <report_pcpu+0x4b0>
   1b942:	test   BYTE PTR [rbx],0x2
   1b945:	je     1b92c <report_pcpu+0x2bc>
   1b947:	xor    eax,eax
   1b949:	mov    edx,ebp
   1b94b:	mov    rsi,r14
   1b94e:	mov    edi,0x1
   1b953:	call   44f0 <__printf_chk@plt>
   1b958:	mov    ecx,DWORD PTR [rbx+0x314]
   1b95e:	test   ecx,ecx
   1b960:	je     1b754 <report_pcpu+0xe4>
   1b966:	mov    rsi,QWORD PTR [rbx+0x320]
   1b96d:	xor    edx,edx
   1b96f:	movsxd rdi,ecx
   1b972:	mov    r15d,DWORD PTR [rip+0x20d75f]        # 2290d8 <opt+0x38>
   1b979:	mov    rax,rsi
   1b97c:	div    rdi
   1b97f:	test   r15d,r15d
   1b982:	mov    r8,rax
   1b985:	jne    1b6a0 <report_pcpu+0x30>
   1b98b:	test   rsi,rsi
   1b98e:	js     1bae0 <report_pcpu+0x470>
   1b994:	pxor   xmm0,xmm0
   1b998:	cvtsi2sd xmm0,rsi
   1b99d:	pxor   xmm1,xmm1
   1b9a1:	lea    rdx,[rip+0x191b]        # 1d2c3 <_IO_stdin_used+0x303>
   1b9a8:	lea    rsi,[rip+0x181d]        # 1d1cc <_IO_stdin_used+0x20c>
   1b9af:	mov    edi,0x1
   1b9b4:	mov    eax,0x1
   1b9b9:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d6ee]        # 2290b0 <opt+0x10>
   1b9c2:	divsd  xmm0,xmm1
   1b9c6:	call   44f0 <__printf_chk@plt>
   1b9cb:	jmp    1b754 <report_pcpu+0xe4>
   1b9d0:	test   rsi,rsi
   1b9d3:	js     1bac0 <report_pcpu+0x450>
   1b9d9:	pxor   xmm0,xmm0
   1b9dd:	cvtsi2sd xmm0,rsi
   1b9e2:	pxor   xmm1,xmm1
   1b9e6:	lea    rdx,[rip+0x25ac]        # 1df99 <_IO_stdin_used+0xfd9>
   1b9ed:	lea    rsi,[rip+0x17d8]        # 1d1cc <_IO_stdin_used+0x20c>
   1b9f4:	mov    edi,0x1
   1b9f9:	mov    eax,0x1
   1b9fe:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d6a9]        # 2290b0 <opt+0x10>
   1ba07:	divsd  xmm0,xmm1
   1ba0b:	call   44f0 <__printf_chk@plt>
   1ba10:	jmp    1b91e <report_pcpu+0x2ae>
   1ba15:	nop    DWORD PTR [rax]
   1ba18:	test   rsi,rsi
   1ba1b:	js     1bb00 <report_pcpu+0x490>
   1ba21:	pxor   xmm0,xmm0
   1ba25:	cvtsi2sd xmm0,rsi
   1ba2a:	pxor   xmm1,xmm1
   1ba2e:	lea    rdx,[rip+0x255b]        # 1df90 <_IO_stdin_used+0xfd0>
   1ba35:	lea    rsi,[rip+0x1790]        # 1d1cc <_IO_stdin_used+0x20c>
   1ba3c:	mov    edi,0x1
   1ba41:	mov    eax,0x1
   1ba46:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d661]        # 2290b0 <opt+0x10>
   1ba4f:	divsd  xmm0,xmm1
   1ba53:	call   44f0 <__printf_chk@plt>
   1ba58:	jmp    1b83b <report_pcpu+0x1cb>
   1ba5d:	nop    DWORD PTR [rax]
   1ba60:	mov    rcx,rdx
   1ba63:	pxor   xmm0,xmm0
   1ba67:	shr    rcx,1
   1ba6a:	and    edx,0x1
   1ba6d:	or     rcx,rdx
   1ba70:	cvtsi2sd xmm0,rcx
   1ba75:	addsd  xmm0,xmm0
   1ba79:	jmp    1b8e5 <report_pcpu+0x275>
   1ba7e:	xchg   ax,ax
   1ba80:	mov    rcx,rdx
   1ba83:	pxor   xmm0,xmm0
   1ba87:	shr    rcx,1
   1ba8a:	and    edx,0x1
   1ba8d:	or     rcx,rdx
   1ba90:	cvtsi2sd xmm0,rcx
   1ba95:	addsd  xmm0,xmm0
   1ba99:	jmp    1b719 <report_pcpu+0xa9>
   1ba9e:	xchg   ax,ax
   1baa0:	mov    rcx,rdx
   1baa3:	pxor   xmm0,xmm0
   1baa7:	shr    rcx,1
   1baaa:	and    edx,0x1
   1baad:	or     rcx,rdx
   1bab0:	cvtsi2sd xmm0,rcx
   1bab5:	addsd  xmm0,xmm0
   1bab9:	jmp    1b800 <report_pcpu+0x190>
   1babe:	xchg   ax,ax
   1bac0:	mov    rax,rsi
   1bac3:	pxor   xmm0,xmm0
   1bac7:	shr    rax,1
   1baca:	and    esi,0x1
   1bacd:	or     rax,rsi
   1bad0:	cvtsi2sd xmm0,rax
   1bad5:	addsd  xmm0,xmm0
   1bad9:	jmp    1b9e2 <report_pcpu+0x372>
   1bade:	xchg   ax,ax
   1bae0:	mov    rax,rsi
   1bae3:	pxor   xmm0,xmm0
   1bae7:	shr    rax,1
   1baea:	and    esi,0x1
   1baed:	or     rax,rsi
   1baf0:	cvtsi2sd xmm0,rax
   1baf5:	addsd  xmm0,xmm0
   1baf9:	jmp    1b99d <report_pcpu+0x32d>
   1bafe:	xchg   ax,ax
   1bb00:	mov    rax,rsi
   1bb03:	pxor   xmm0,xmm0
   1bb07:	shr    rax,1
   1bb0a:	and    esi,0x1
   1bb0d:	or     rax,rsi
   1bb10:	cvtsi2sd xmm0,rax
   1bb15:	addsd  xmm0,xmm0
   1bb19:	jmp    1ba2a <report_pcpu+0x3ba>
   1bb1e:	xchg   ax,ax
   1bb20:	add    rsp,0x18
   1bb24:	mov    edx,r13d
   1bb27:	lea    rsi,[rip+0x2474]        # 1dfa2 <_IO_stdin_used+0xfe2>
   1bb2e:	pop    rbx
   1bb2f:	pop    rbp
   1bb30:	pop    r12
   1bb32:	pop    r13
   1bb34:	pop    r14
   1bb36:	pop    r15
   1bb38:	mov    edi,0x1
   1bb3d:	xor    eax,eax
   1bb3f:	jmp    44f0 <__printf_chk@plt>
   1bb44:	xchg   ax,ax
   1bb46:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001bb50 <init_pcpus>:
   1bb50:	lea    rcx,[rip+0x21168d]        # 22d1e4 <P+0x44>
   1bb57:	sub    rsp,0x8
   1bb5b:	xor    edx,edx
   1bb5d:	lea    rdi,[rcx+0x1ac]
   1bb64:	nop    DWORD PTR [rax+0x0]
   1bb68:	movsxd rsi,edx
   1bb6b:	mov    DWORD PTR [rcx],edx
   1bb6d:	add    edx,0x1
   1bb70:	lea    rax,[rsi*8+0x0]
   1bb78:	add    rcx,0x380
   1bb7f:	sub    rax,rsi
   1bb82:	shl    rax,0x7
   1bb86:	or     BYTE PTR [rdi+rax*1],0x4
   1bb8a:	mov    DWORD PTR [rcx-0x1f0],0x6
   1bb94:	cmp    edx,0x100
   1bb9a:	jne    1bb68 <init_pcpus+0x18>
   1bb9c:	lea    rdi,[rip+0x24d99d]        # 269540 <default_domain>
   1bba3:	mov    esi,0x8000
   1bba8:	mov    DWORD PTR [rip+0x2115ee],0xffffffff        # 22d1a0 <P>
   1bbb2:	call   11cb0 <domain_init>
   1bbb7:	xor    eax,eax
   1bbb9:	nop    DWORD PTR [rax+0x0]
   1bbc0:	mov    rdi,rax
   1bbc3:	call   1a970 <scan_for_new_pcpu>
   1bbc8:	test   rax,rax
   1bbcb:	jne    1bbc0 <init_pcpus+0x70>
   1bbcd:	mov    rdi,QWORD PTR [rip+0x249684]        # 265258 <warn>
   1bbd4:	lea    rcx,[rip+0x7595]        # 23170 <__func__.8446>
   1bbdb:	lea    rdx,[rip+0x64ee]        # 220d0 <_IO_stdin_used+0x5110>
   1bbe2:	mov    esi,0x1
   1bbe7:	add    rsp,0x8
   1bbeb:	jmp    4560 <__fprintf_chk@plt>

000000000001bbf0 <parse_cpu_hz>:
   1bbf0:	push   rbx
   1bbf1:	mov    rbx,rdi
   1bbf4:	sub    rsp,0x10
   1bbf8:	mov    rsi,rsp
   1bbfb:	mov    rax,QWORD PTR fs:0x28
   1bc04:	mov    QWORD PTR [rsp+0x8],rax
   1bc09:	xor    eax,eax
   1bc0b:	call   4410 <strtof@plt>
   1bc10:	mov    rcx,QWORD PTR [rsp]
   1bc14:	cmp    rcx,rbx
   1bc17:	je     1bcfe <parse_cpu_hz+0x10e>
   1bc1d:	movzx  eax,BYTE PTR [rcx]
   1bc20:	cmp    al,0x47
   1bc22:	je     1bcc0 <parse_cpu_hz+0xd0>
   1bc28:	jle    1bc90 <parse_cpu_hz+0xa0>
   1bc2a:	cmp    al,0x4b
   1bc2c:	je     1bce0 <parse_cpu_hz+0xf0>
   1bc32:	cmp    al,0x4d
   1bc34:	jne    1bc94 <parse_cpu_hz+0xa4>
   1bc36:	mulss  xmm0,DWORD PTR [rip+0x7c96]        # 238d4 <__PRETTY_FUNCTION__.5713+0x44>
   1bc3e:	cvttss2si rcx,xmm0
   1bc43:	mov    QWORD PTR [rip+0x20d466],rcx        # 2290b0 <opt+0x10>
   1bc4a:	shl    rcx,0xa
   1bc4e:	movabs rdx,0x112e0be826d694b3
   1bc58:	mov    rax,rcx
   1bc5b:	sar    rcx,0x3f
   1bc5f:	imul   rdx
   1bc62:	sar    rdx,0x1a
   1bc66:	sub    rdx,rcx
   1bc69:	mov    rax,QWORD PTR [rsp+0x8]
   1bc6e:	xor    rax,QWORD PTR fs:0x28
   1bc77:	mov    QWORD PTR [rip+0x20d42a],rdx        # 2290a8 <opt+0x8>
   1bc7e:	jne    1bcf9 <parse_cpu_hz+0x109>
   1bc80:	add    rsp,0x10
   1bc84:	pop    rbx
   1bc85:	ret    
   1bc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1bc90:	test   al,al
   1bc92:	je     1bc3e <parse_cpu_hz+0x4e>
   1bc94:	mov    rdi,QWORD PTR [rip+0x2107a5]        # 22c440 <stderr@@GLIBC_2.2.5>
   1bc9b:	lea    rdx,[rip+0x232a]        # 1dfcc <_IO_stdin_used+0x100c>
   1bca2:	movsx  ecx,al
   1bca5:	mov    esi,0x1
   1bcaa:	xor    eax,eax
   1bcac:	call   4560 <__fprintf_chk@plt>
   1bcb1:	mov    edi,0x1
   1bcb6:	call   4540 <exit@plt>
   1bcbb:	nop    DWORD PTR [rax+rax*1+0x0]
   1bcc0:	mulss  xmm0,DWORD PTR [rip+0x7c08]        # 238d0 <__PRETTY_FUNCTION__.5713+0x40>
   1bcc8:	cvttss2si rcx,xmm0
   1bccd:	mov    QWORD PTR [rip+0x20d3dc],rcx        # 2290b0 <opt+0x10>
   1bcd4:	jmp    1bc4a <parse_cpu_hz+0x5a>
   1bcd9:	nop    DWORD PTR [rax+0x0]
   1bce0:	mulss  xmm0,DWORD PTR [rip+0x7bf0]        # 238d8 <__PRETTY_FUNCTION__.5713+0x48>
   1bce8:	cvttss2si rcx,xmm0
   1bced:	mov    QWORD PTR [rip+0x20d3bc],rcx        # 2290b0 <opt+0x10>
   1bcf4:	jmp    1bc4a <parse_cpu_hz+0x5a>
   1bcf9:	call   43c0 <__stack_chk_fail@plt>
   1bcfe:	mov    rdi,QWORD PTR [rip+0x21073b]        # 22c440 <stderr@@GLIBC_2.2.5>
   1bd05:	lea    rdx,[rip+0x22ad]        # 1dfb9 <_IO_stdin_used+0xff9>
   1bd0c:	mov    esi,0x1
   1bd11:	xor    eax,eax
   1bd13:	call   4560 <__fprintf_chk@plt>
   1bd18:	mov    edi,0x1
   1bd1d:	call   4540 <exit@plt>
   1bd22:	nop    DWORD PTR [rax+0x0]
   1bd26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001bd30 <stringify_cpu_hz>:
   1bd30:	pxor   xmm0,xmm0
   1bd34:	sub    rsp,0x8
   1bd38:	cmp    rdi,0x3b9aca00
   1bd3f:	cvtsi2ss xmm0,rdi
   1bd44:	jg     1bdc0 <stringify_cpu_hz+0x90>
   1bd46:	cmp    rdi,0xf4240
   1bd4d:	jg     1bd70 <stringify_cpu_hz+0x40>
   1bd4f:	cmp    rdi,0x3e8
   1bd56:	jg     1bde0 <stringify_cpu_hz+0xb0>
   1bd5c:	mov    BYTE PTR [rip+0x249511],0x20        # 265274 <suffix.8520>
   1bd63:	mov    r9d,0x20
   1bd69:	jmp    1bd85 <stringify_cpu_hz+0x55>
   1bd6b:	nop    DWORD PTR [rax+rax*1+0x0]
   1bd70:	divss  xmm0,DWORD PTR [rip+0x7b5c]        # 238d4 <__PRETTY_FUNCTION__.5713+0x44>
   1bd78:	mov    BYTE PTR [rip+0x2494f5],0x4d        # 265274 <suffix.8520>
   1bd7f:	mov    r9d,0x4d
   1bd85:	cvtss2sd xmm0,xmm0
   1bd89:	lea    r8,[rip+0x224f]        # 1dfdf <_IO_stdin_used+0x101f>
   1bd90:	lea    rdi,[rip+0x2494c9]        # 265260 <cpu_string.8519>
   1bd97:	mov    ecx,0x14
   1bd9c:	mov    edx,0x1
   1bda1:	mov    esi,0x14
   1bda6:	mov    eax,0x1
   1bdab:	call   4320 <__snprintf_chk@plt>
   1bdb0:	lea    rax,[rip+0x2494a9]        # 265260 <cpu_string.8519>
   1bdb7:	add    rsp,0x8
   1bdbb:	ret    
   1bdbc:	nop    DWORD PTR [rax+0x0]
   1bdc0:	divss  xmm0,DWORD PTR [rip+0x7b08]        # 238d0 <__PRETTY_FUNCTION__.5713+0x40>
   1bdc8:	mov    BYTE PTR [rip+0x2494a5],0x47        # 265274 <suffix.8520>
   1bdcf:	mov    r9d,0x47
   1bdd5:	jmp    1bd85 <stringify_cpu_hz+0x55>
   1bdd7:	nop    WORD PTR [rax+rax*1+0x0]
   1bde0:	divss  xmm0,DWORD PTR [rip+0x7af0]        # 238d8 <__PRETTY_FUNCTION__.5713+0x48>
   1bde8:	mov    BYTE PTR [rip+0x249485],0x6b        # 265274 <suffix.8520>
   1bdef:	mov    r9d,0x6b
   1bdf5:	jmp    1bd85 <stringify_cpu_hz+0x55>
   1bdf7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001be00 <summary>:
   1be00:	mov    rdi,QWORD PTR [rip+0x20d2a9]        # 2290b0 <opt+0x10>
   1be07:	push   r12
   1be09:	push   rbp
   1be0a:	push   rbx
   1be0b:	call   1bd30 <stringify_cpu_hz>
   1be10:	mov    rsi,QWORD PTR [rip+0x2113b9]        # 22d1d0 <P+0x30>
   1be17:	test   rsi,rsi
   1be1a:	js     1beae <summary+0xae>
   1be20:	pxor   xmm0,xmm0
   1be24:	cvtsi2sd xmm0,rsi
   1be29:	pxor   xmm1,xmm1
   1be2d:	lea    rsi,[rip+0x62cc]        # 22100 <_IO_stdin_used+0x5140>
   1be34:	mov    rdx,rax
   1be37:	mov    edi,0x1
   1be3c:	mov    eax,0x1
   1be41:	lea    rbp,[rip+0x211398]        # 22d1e0 <P+0x40>
   1be48:	lea    r12,[rip+0x21b7]        # 1e006 <_IO_stdin_used+0x1046>
   1be4f:	xor    ebx,ebx
   1be51:	cvtsi2sd xmm1,QWORD PTR [rip+0x20d256]        # 2290b0 <opt+0x10>
   1be5a:	divsd  xmm0,xmm1
   1be5e:	call   44f0 <__printf_chk@plt>
   1be63:	lea    rdi,[rip+0x2181]        # 1dfeb <_IO_stdin_used+0x102b>
   1be6a:	call   4380 <puts@plt>
   1be6f:	nop
   1be70:	test   BYTE PTR [rbp+0x0],0x2
   1be74:	je     1be93 <summary+0x93>
   1be76:	mov    edi,0x1
   1be7b:	mov    edx,ebx
   1be7d:	mov    rsi,r12
   1be80:	xor    eax,eax
   1be82:	call   44f0 <__printf_chk@plt>
   1be87:	lea    rdi,[rbp+0x210]
   1be8e:	call   74f0 <volume_summary>
   1be93:	add    ebx,0x1
   1be96:	add    rbp,0x380
   1be9d:	cmp    ebx,0x100
   1bea3:	jne    1be70 <summary+0x70>
   1bea5:	pop    rbx
   1bea6:	pop    rbp
   1bea7:	pop    r12
   1bea9:	jmp    1b540 <domain_summary>
   1beae:	mov    rcx,rsi
   1beb1:	pxor   xmm0,xmm0
   1beb5:	shr    rcx,1
   1beb8:	and    esi,0x1
   1bebb:	or     rcx,rsi
   1bebe:	cvtsi2sd xmm0,rcx
   1bec3:	addsd  xmm0,xmm0
   1bec7:	jmp    1be29 <summary+0x29>
   1becc:	nop    DWORD PTR [rax+0x0]

000000000001bed0 <parse_array>:
   1bed0:	push   r15
   1bed2:	push   r14
   1bed4:	mov    r15,rdi
   1bed7:	push   r13
   1bed9:	push   r12
   1bedb:	mov    r13,rsi
   1bede:	push   rbp
   1bedf:	push   rbx
   1bee0:	sub    rsp,0x28
   1bee4:	mov    rax,QWORD PTR fs:0x28
   1beed:	mov    QWORD PTR [rsp+0x18],rax
   1bef2:	xor    eax,eax
   1bef4:	movzx  eax,BYTE PTR [rdi]
   1bef7:	test   al,al
   1bef9:	je     1c0b0 <parse_array+0x1e0>
   1beff:	mov    rdx,rdi
   1bf02:	mov    r12d,0x1
   1bf08:	nop    DWORD PTR [rax+rax*1+0x0]
   1bf10:	cmp    al,0x2c
   1bf12:	sete   al
   1bf15:	add    rdx,0x1
   1bf19:	movzx  eax,al
   1bf1c:	add    r12d,eax
   1bf1f:	movzx  eax,BYTE PTR [rdx]
   1bf22:	test   al,al
   1bf24:	jne    1bf10 <parse_array+0x40>
   1bf26:	movsxd rbx,r12d
   1bf29:	shl    rbx,0x3
   1bf2d:	mov    rdi,QWORD PTR [rip+0x249324]        # 265258 <warn>
   1bf34:	lea    rcx,[rip+0x7225]        # 23160 <__func__.8533>
   1bf3b:	lea    rdx,[rip+0x20d1]        # 1e013 <_IO_stdin_used+0x1053>
   1bf42:	mov    r8d,r12d
   1bf45:	mov    esi,0x1
   1bf4a:	xor    eax,eax
   1bf4c:	call   4560 <__fprintf_chk@plt>
   1bf51:	mov    rdi,QWORD PTR [rip+0x249300]        # 265258 <warn>
   1bf58:	call   44a0 <fflush@plt>
   1bf5d:	mov    DWORD PTR [r13+0x8],r12d
   1bf61:	mov    rdi,rbx
   1bf64:	call   4490 <malloc@plt>
   1bf69:	test   rax,rax
   1bf6c:	mov    QWORD PTR [r13+0x0],rax
   1bf70:	je     1c080 <parse_array+0x1b0>
   1bf76:	lea    edx,[r12-0x1]
   1bf7b:	mov    QWORD PTR [rsp+0x10],r15
   1bf80:	xor    ebx,ebx
   1bf82:	lea    r14,[rsp+0x10]
   1bf87:	lea    rcx,[rdx*8+0x8]
   1bf8f:	mov    QWORD PTR [rsp+0x8],rcx
   1bf94:	jmp    1bfb7 <parse_array+0xe7>
   1bf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1bfa0:	test   al,al
   1bfa2:	jne    1c058 <parse_array+0x188>
   1bfa8:	add    rbx,0x8
   1bfac:	cmp    rbx,QWORD PTR [rsp+0x8]
   1bfb1:	je     1c030 <parse_array+0x160>
   1bfb3:	mov    rax,QWORD PTR [r13+0x0]
   1bfb7:	lea    rbp,[rax+rbx*1]
   1bfbb:	xor    edx,edx
   1bfbd:	mov    rsi,r14
   1bfc0:	mov    rdi,r15
   1bfc3:	call   4450 <strtoull@plt>
   1bfc8:	mov    QWORD PTR [rbp+0x0],rax
   1bfcc:	cmp    QWORD PTR [rsp+0x10],r15
   1bfd1:	je     1c058 <parse_array+0x188>
   1bfd7:	mov    rax,QWORD PTR [r13+0x0]
   1bfdb:	mov    rdi,QWORD PTR [rip+0x249276]        # 265258 <warn>
   1bfe2:	lea    rcx,[rip+0x7177]        # 23160 <__func__.8533>
   1bfe9:	lea    rdx,[rip+0x6140]        # 22130 <_IO_stdin_used+0x5170>
   1bff0:	mov    esi,0x1
   1bff5:	mov    r8,QWORD PTR [rax+rbx*1]
   1bff9:	xor    eax,eax
   1bffb:	mov    r9,r8
   1bffe:	call   4560 <__fprintf_chk@plt>
   1c003:	mov    rdi,QWORD PTR [rip+0x24924e]        # 265258 <warn>
   1c00a:	call   44a0 <fflush@plt>
   1c00f:	mov    r15,QWORD PTR [rsp+0x10]
   1c014:	movzx  eax,BYTE PTR [r15]
   1c018:	cmp    al,0x2c
   1c01a:	jne    1bfa0 <parse_array+0xd0>
   1c01c:	add    r15,0x1
   1c020:	add    rbx,0x8
   1c024:	cmp    rbx,QWORD PTR [rsp+0x8]
   1c029:	mov    QWORD PTR [rsp+0x10],r15
   1c02e:	jne    1bfb3 <parse_array+0xe3>
   1c030:	mov    rcx,QWORD PTR [rsp+0x18]
   1c035:	xor    rcx,QWORD PTR fs:0x28
   1c03e:	mov    eax,r12d
   1c041:	jne    1c0c0 <parse_array+0x1f0>
   1c043:	add    rsp,0x28
   1c047:	pop    rbx
   1c048:	pop    rbp
   1c049:	pop    r12
   1c04b:	pop    r13
   1c04d:	pop    r14
   1c04f:	pop    r15
   1c051:	ret    
   1c052:	nop    WORD PTR [rax+rax*1+0x0]
   1c058:	mov    rdi,QWORD PTR [rip+0x2103e1]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c05f:	lea    rdx,[rip+0x1fc4]        # 1e02a <_IO_stdin_used+0x106a>
   1c066:	mov    rcx,r15
   1c069:	mov    esi,0x1
   1c06e:	xor    eax,eax
   1c070:	mov    r12d,0xffffffff
   1c076:	call   4560 <__fprintf_chk@plt>
   1c07b:	jmp    1c030 <parse_array+0x160>
   1c07d:	nop    DWORD PTR [rax]
   1c080:	mov    rcx,QWORD PTR [rip+0x2103b9]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c087:	lea    rdi,[rip+0x12eb]        # 1d379 <_IO_stdin_used+0x3b9>
   1c08e:	mov    edx,0xf
   1c093:	mov    esi,0x1
   1c098:	call   4550 <fwrite@plt>
   1c09d:	cmp    DWORD PTR [rip+0x20d03c],0x7        # 2290e0 <opt+0x40>
   1c0a4:	jbe    1c0c5 <parse_array+0x1f5>
   1c0a6:	mov    rax,QWORD PTR [r13+0x0]
   1c0aa:	jmp    1bf76 <parse_array+0xa6>
   1c0af:	nop
   1c0b0:	mov    ebx,0x8
   1c0b5:	mov    r12d,0x1
   1c0bb:	jmp    1bf2d <parse_array+0x5d>
   1c0c0:	call   43c0 <__stack_chk_fail@plt>
   1c0c5:	mov    edi,0x1
   1c0ca:	call   4540 <exit@plt>
   1c0cf:	nop

000000000001c0d0 <cmd_parser>:
   1c0d0:	push   r12
   1c0d2:	push   rbp
   1c0d3:	mov    rbp,rdx
   1c0d6:	push   rbx
   1c0d7:	mov    rbx,rsi
   1c0da:	sub    rsp,0x10
   1c0de:	mov    rax,QWORD PTR fs:0x28
   1c0e7:	mov    QWORD PTR [rsp+0x8],rax
   1c0ec:	xor    eax,eax
   1c0ee:	cmp    edi,0x18
   1c0f1:	je     1c9d0 <cmd_parser+0x900>
   1c0f7:	jle    1c1a0 <cmd_parser+0xd0>
   1c0fd:	cmp    edi,0x24
   1c100:	je     1c8e0 <cmd_parser+0x810>
   1c106:	jg     1c2a0 <cmd_parser+0x1d0>
   1c10c:	cmp    edi,0x1e
   1c10f:	je     1c908 <cmd_parser+0x838>
   1c115:	jle    1c350 <cmd_parser+0x280>
   1c11b:	cmp    edi,0x21
   1c11e:	je     1c7b0 <cmd_parser+0x6e0>
   1c124:	jg     1c4b0 <cmd_parser+0x3e0>
   1c12a:	cmp    edi,0x1f
   1c12d:	je     1c710 <cmd_parser+0x640>
   1c133:	cmp    edi,0x20
   1c136:	jne    1ca18 <cmd_parser+0x948>
   1c13c:	lea    rsi,[rip+0x20cfbd]        # 229100 <opt+0x60>
   1c143:	mov    rdi,rbx
   1c146:	call   1bed0 <parse_array>
   1c14b:	test   eax,eax
   1c14d:	js     1c158 <cmd_parser+0x88>
   1c14f:	cmp    DWORD PTR [rip+0x20cfb2],0x1        # 229108 <opt+0x68>
   1c156:	je     1c16c <cmd_parser+0x9c>
   1c158:	mov    rsi,QWORD PTR [rip+0x2102e1]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c15f:	mov    edx,0x106
   1c164:	mov    rdi,rbp
   1c167:	call   43a0 <argp_state_help@plt>
   1c16c:	mov    DWORD PTR [rip+0x20cf7e],0x6        # 2290f4 <opt+0x54>
   1c176:	mov    DWORD PTR [rip+0x20cf7c],0x2        # 2290fc <opt+0x5c>
   1c180:	or     BYTE PTR [rip+0x20cf1a],0x20        # 2290a1 <opt+0x1>
   1c187:	xor    eax,eax
   1c189:	mov    DWORD PTR [rip+0x20cf11],0x1        # 2290a4 <opt+0x4>
   1c193:	mov    DWORD PTR [rip+0x20cfab],0x1        # 229148 <G+0x28>
   1c19d:	jmp    1c1e8 <cmd_parser+0x118>
   1c19f:	nop
   1c1a0:	cmp    edi,0xb
   1c1a3:	je     1c980 <cmd_parser+0x8b0>
   1c1a9:	jg     1c208 <cmd_parser+0x138>
   1c1ab:	cmp    edi,0x5
   1c1ae:	je     1c9b8 <cmd_parser+0x8e8>
   1c1b4:	jle    1c3b0 <cmd_parser+0x2e0>
   1c1ba:	cmp    edi,0x8
   1c1bd:	je     1c750 <cmd_parser+0x680>
   1c1c3:	jg     1c458 <cmd_parser+0x388>
   1c1c9:	cmp    edi,0x6
   1c1cc:	je     1c7a0 <cmd_parser+0x6d0>
   1c1d2:	cmp    edi,0x7
   1c1d5:	jne    1ca18 <cmd_parser+0x948>
   1c1db:	or     BYTE PTR [rip+0x20cec0],0x20        # 2290a2 <opt+0x2>
   1c1e2:	xor    eax,eax
   1c1e4:	nop    DWORD PTR [rax+0x0]
   1c1e8:	mov    rcx,QWORD PTR [rsp+0x8]
   1c1ed:	xor    rcx,QWORD PTR fs:0x28
   1c1f6:	jne    1cc4f <cmd_parser+0xb7f>
   1c1fc:	add    rsp,0x10
   1c200:	pop    rbx
   1c201:	pop    rbp
   1c202:	pop    r12
   1c204:	ret    
   1c205:	nop    DWORD PTR [rax]
   1c208:	cmp    edi,0x11
   1c20b:	je     1c960 <cmd_parser+0x890>
   1c211:	jle    1c310 <cmd_parser+0x240>
   1c217:	cmp    edi,0x14
   1c21a:	je     1c630 <cmd_parser+0x560>
   1c220:	jle    1c600 <cmd_parser+0x530>
   1c226:	cmp    edi,0x16
   1c229:	je     1c598 <cmd_parser+0x4c8>
   1c22f:	jle    1c780 <cmd_parser+0x6b0>
   1c235:	mov    r12,rsp
   1c238:	xor    edx,edx
   1c23a:	mov    rdi,rbx
   1c23d:	mov    rsi,r12
   1c240:	or     BYTE PTR [rip+0x20ce5a],0x10        # 2290a1 <opt+0x1>
   1c247:	call   4480 <strtol@plt>
   1c24c:	mov    DWORD PTR [rip+0x20ce72],eax        # 2290c4 <opt+0x24>
   1c252:	mov    rax,QWORD PTR [rsp]
   1c256:	cmp    rax,rbx
   1c259:	je     1cc13 <cmd_parser+0xb43>
   1c25f:	cmp    BYTE PTR [rax],0x2c
   1c262:	je     1cbf6 <cmd_parser+0xb26>
   1c268:	mov    QWORD PTR [rip+0x20ce55],0x1000000        # 2290c8 <opt+0x28>
   1c273:	mov    ecx,0x1000000
   1c278:	mov    edx,DWORD PTR [rip+0x20ce46]        # 2290c4 <opt+0x24>
   1c27e:	lea    rsi,[rip+0x5ed3]        # 22158 <_IO_stdin_used+0x5198>
   1c285:	mov    edi,0x1
   1c28a:	xor    eax,eax
   1c28c:	call   44f0 <__printf_chk@plt>
   1c291:	xor    eax,eax
   1c293:	jmp    1c1e8 <cmd_parser+0x118>
   1c298:	nop    DWORD PTR [rax+rax*1+0x0]
   1c2a0:	cmp    edi,0x2a
   1c2a3:	je     1c950 <cmd_parser+0x880>
   1c2a9:	jle    1c3f0 <cmd_parser+0x320>
   1c2af:	cmp    edi,0x61
   1c2b2:	je     1c8c0 <cmd_parser+0x7f0>
   1c2b8:	jle    1c5d8 <cmd_parser+0x508>
   1c2be:	cmp    edi,0x73
   1c2c1:	je     1c5b0 <cmd_parser+0x4e0>
   1c2c7:	cmp    edi,0x1000001
   1c2cd:	je     1c848 <cmd_parser+0x778>
   1c2d3:	cmp    edi,0x69
   1c2d6:	jne    1ca18 <cmd_parser+0x948>
   1c2dc:	mov    rsi,rsp
   1c2df:	mov    rdi,rbx
   1c2e2:	call   4410 <strtof@plt>
   1c2e7:	mulss  xmm0,DWORD PTR [rip+0x75e9]        # 238d8 <__PRETTY_FUNCTION__.5713+0x48>
   1c2ef:	cmp    QWORD PTR [rsp],rbx
   1c2f3:	cvttss2si rax,xmm0
   1c2f8:	mov    DWORD PTR [rip+0x20cdf2],eax        # 2290f0 <opt+0x50>
   1c2fe:	je     1c490 <cmd_parser+0x3c0>
   1c304:	xor    eax,eax
   1c306:	jmp    1c1e8 <cmd_parser+0x118>
   1c30b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c310:	cmp    edi,0xe
   1c313:	je     1ca80 <cmd_parser+0x9b0>
   1c319:	jg     1c568 <cmd_parser+0x498>
   1c31f:	cmp    edi,0xc
   1c322:	je     1c7c0 <cmd_parser+0x6f0>
   1c328:	cmp    edi,0xd
   1c32b:	jne    1ca18 <cmd_parser+0x948>
   1c331:	mov    DWORD PTR [rip+0x20ce0d],0x1        # 229148 <G+0x28>
   1c33b:	or     BYTE PTR [rip+0x20cd5e],0x4        # 2290a0 <opt>
   1c342:	xor    eax,eax
   1c344:	jmp    1c1e8 <cmd_parser+0x118>
   1c349:	nop    DWORD PTR [rax+0x0]
   1c350:	cmp    edi,0x1b
   1c353:	je     1c7e0 <cmd_parser+0x710>
   1c359:	jg     1c510 <cmd_parser+0x440>
   1c35f:	cmp    edi,0x19
   1c362:	je     1ca40 <cmd_parser+0x970>
   1c368:	cmp    edi,0x1a
   1c36b:	jne    1ca18 <cmd_parser+0x948>
   1c371:	mov    DWORD PTR [rip+0x20cd79],0x1        # 2290f4 <opt+0x54>
   1c37b:	mov    DWORD PTR [rip+0x20cd77],0x1        # 2290fc <opt+0x5c>
   1c385:	or     BYTE PTR [rip+0x20cd15],0x20        # 2290a1 <opt+0x1>
   1c38c:	mov    DWORD PTR [rip+0x20cd0e],0x1        # 2290a4 <opt+0x4>
   1c396:	xor    eax,eax
   1c398:	or     BYTE PTR [rip+0x20cd03],0x20        # 2290a2 <opt+0x2>
   1c39f:	mov    DWORD PTR [rip+0x20cd9f],0x1        # 229148 <G+0x28>
   1c3a9:	jmp    1c1e8 <cmd_parser+0x118>
   1c3ae:	xchg   ax,ax
   1c3b0:	cmp    edi,0x2
   1c3b3:	je     1c760 <cmd_parser+0x690>
   1c3b9:	jg     1c4e8 <cmd_parser+0x418>
   1c3bf:	test   edi,edi
   1c3c1:	je     1c828 <cmd_parser+0x758>
   1c3c7:	cmp    edi,0x1
   1c3ca:	jne    1ca18 <cmd_parser+0x948>
   1c3d0:	or     BYTE PTR [rip+0x20cccb],0x1        # 2290a2 <opt+0x2>
   1c3d7:	mov    DWORD PTR [rip+0x20cd67],0x1        # 229148 <G+0x28>
   1c3e1:	xor    eax,eax
   1c3e3:	jmp    1c1e8 <cmd_parser+0x118>
   1c3e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c3f0:	cmp    edi,0x27
   1c3f3:	je     1c6f0 <cmd_parser+0x620>
   1c3f9:	jg     1c430 <cmd_parser+0x360>
   1c3fb:	cmp    edi,0x25
   1c3fe:	je     1ca28 <cmd_parser+0x958>
   1c404:	cmp    edi,0x26
   1c407:	jne    1ca18 <cmd_parser+0x948>
   1c40d:	xor    edx,edx
   1c40f:	mov    rsi,rsp
   1c412:	mov    rdi,rbx
   1c415:	call   4480 <strtol@plt>
   1c41a:	cmp    QWORD PTR [rsp],rbx
   1c41e:	mov    DWORD PTR [rip+0x20ccb0],eax        # 2290d4 <opt+0x34>
   1c424:	je     1c490 <cmd_parser+0x3c0>
   1c426:	xor    eax,eax
   1c428:	jmp    1c1e8 <cmd_parser+0x118>
   1c42d:	nop    DWORD PTR [rax]
   1c430:	cmp    edi,0x28
   1c433:	je     1c700 <cmd_parser+0x630>
   1c439:	cmp    edi,0x29
   1c43c:	jne    1ca18 <cmd_parser+0x948>
   1c442:	mov    rdi,rsi
   1c445:	call   1bbf0 <parse_cpu_hz>
   1c44a:	xor    eax,eax
   1c44c:	jmp    1c1e8 <cmd_parser+0x118>
   1c451:	nop    DWORD PTR [rax+0x0]
   1c458:	cmp    edi,0x9
   1c45b:	je     1ca68 <cmd_parser+0x998>
   1c461:	cmp    edi,0xa
   1c464:	jne    1ca18 <cmd_parser+0x948>
   1c46a:	xor    edx,edx
   1c46c:	mov    rsi,rsp
   1c46f:	mov    rdi,rbx
   1c472:	or     BYTE PTR [rip+0x20cc2a],0x1        # 2290a3 <opt+0x3>
   1c479:	call   4480 <strtol@plt>
   1c47e:	cmp    QWORD PTR [rsp],rbx
   1c482:	mov    DWORD PTR [rip+0x20cc48],eax        # 2290d0 <opt+0x30>
   1c488:	jne    1c304 <cmd_parser+0x234>
   1c48e:	xchg   ax,ax
   1c490:	mov    rsi,QWORD PTR [rip+0x20ffa9]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c497:	mov    edx,0x106
   1c49c:	mov    rdi,rbp
   1c49f:	call   43a0 <argp_state_help@plt>
   1c4a4:	xor    eax,eax
   1c4a6:	jmp    1c1e8 <cmd_parser+0x118>
   1c4ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1c4b0:	cmp    edi,0x22
   1c4b3:	je     1caa0 <cmd_parser+0x9d0>
   1c4b9:	cmp    edi,0x23
   1c4bc:	jne    1ca18 <cmd_parser+0x948>
   1c4c2:	xor    edx,edx
   1c4c4:	mov    rsi,rsp
   1c4c7:	mov    rdi,rbx
   1c4ca:	call   4480 <strtol@plt>
   1c4cf:	cmp    QWORD PTR [rsp],rbx
   1c4d3:	mov    DWORD PTR [rip+0x20cbff],eax        # 2290d8 <opt+0x38>
   1c4d9:	je     1c490 <cmd_parser+0x3c0>
   1c4db:	xor    eax,eax
   1c4dd:	jmp    1c1e8 <cmd_parser+0x118>
   1c4e2:	nop    WORD PTR [rax+rax*1+0x0]
   1c4e8:	cmp    edi,0x3
   1c4eb:	je     1c8a0 <cmd_parser+0x7d0>
   1c4f1:	cmp    edi,0x4
   1c4f4:	jne    1ca18 <cmd_parser+0x948>
   1c4fa:	or     BYTE PTR [rip+0x20cba1],0x4        # 2290a2 <opt+0x2>
   1c501:	xor    eax,eax
   1c503:	jmp    1c1e8 <cmd_parser+0x118>
   1c508:	nop    DWORD PTR [rax+rax*1+0x0]
   1c510:	cmp    edi,0x1c
   1c513:	je     1c668 <cmd_parser+0x598>
   1c519:	cmp    edi,0x1d
   1c51c:	jne    1ca18 <cmd_parser+0x948>
   1c522:	mov    DWORD PTR [rip+0x20cbc8],0x3        # 2290f4 <opt+0x54>
   1c52c:	mov    DWORD PTR [rip+0x20cbc6],0x2        # 2290fc <opt+0x5c>
   1c536:	xor    eax,eax
   1c538:	mov    DWORD PTR [rip+0x20cbb6],0x2        # 2290f8 <opt+0x58>
   1c542:	or     BYTE PTR [rip+0x20cb58],0x20        # 2290a1 <opt+0x1>
   1c549:	mov    DWORD PTR [rip+0x20cb51],0x1        # 2290a4 <opt+0x4>
   1c553:	mov    DWORD PTR [rip+0x20cbeb],0x1        # 229148 <G+0x28>
   1c55d:	jmp    1c1e8 <cmd_parser+0x118>
   1c562:	nop    WORD PTR [rax+rax*1+0x0]
   1c568:	cmp    edi,0xf
   1c56b:	je     1cae0 <cmd_parser+0xa10>
   1c571:	cmp    edi,0x10
   1c574:	jne    1ca18 <cmd_parser+0x948>
   1c57a:	mov    DWORD PTR [rip+0x20cbc4],0x1        # 229148 <G+0x28>
   1c584:	or     BYTE PTR [rip+0x20cb15],0x20        # 2290a0 <opt>
   1c58b:	xor    eax,eax
   1c58d:	jmp    1c1e8 <cmd_parser+0x118>
   1c592:	nop    WORD PTR [rax+rax*1+0x0]
   1c598:	mov    DWORD PTR [rip+0x20cba6],0x1        # 229148 <G+0x28>
   1c5a2:	or     BYTE PTR [rip+0x20caf8],0x8        # 2290a1 <opt+0x1>
   1c5a9:	xor    eax,eax
   1c5ab:	jmp    1c1e8 <cmd_parser+0x118>
   1c5b0:	or     BYTE PTR [rip+0x20caec],0x20        # 2290a3 <opt+0x3>
   1c5b7:	mov    DWORD PTR [rip+0x20cae3],0x1        # 2290a4 <opt+0x4>
   1c5c1:	xor    eax,eax
   1c5c3:	mov    DWORD PTR [rip+0x20cb7b],0x1        # 229148 <G+0x28>
   1c5cd:	jmp    1c1e8 <cmd_parser+0x118>
   1c5d2:	nop    WORD PTR [rax+rax*1+0x0]
   1c5d8:	cmp    edi,0x2b
   1c5db:	je     1cb18 <cmd_parser+0xa48>
   1c5e1:	cmp    edi,0x2c
   1c5e4:	jne    1ca18 <cmd_parser+0x948>
   1c5ea:	or     BYTE PTR [rip+0x20cab2],0x80        # 2290a3 <opt+0x3>
   1c5f1:	xor    eax,eax
   1c5f3:	jmp    1c1e8 <cmd_parser+0x118>
   1c5f8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c600:	cmp    edi,0x12
   1c603:	je     1c6d0 <cmd_parser+0x600>
   1c609:	cmp    edi,0x13
   1c60c:	jne    1ca18 <cmd_parser+0x948>
   1c612:	mov    DWORD PTR [rip+0x20cb2c],0x1        # 229148 <G+0x28>
   1c61c:	or     BYTE PTR [rip+0x20ca7e],0x1        # 2290a1 <opt+0x1>
   1c623:	xor    eax,eax
   1c625:	jmp    1c1e8 <cmd_parser+0x118>
   1c62a:	nop    WORD PTR [rax+rax*1+0x0]
   1c630:	xor    edx,edx
   1c632:	mov    rsi,rsp
   1c635:	mov    rdi,rbx
   1c638:	or     BYTE PTR [rip+0x20ca62],0x2        # 2290a1 <opt+0x1>
   1c63f:	mov    DWORD PTR [rip+0x20caff],0x1        # 229148 <G+0x28>
   1c649:	call   4480 <strtol@plt>
   1c64e:	cmp    QWORD PTR [rsp],rbx
   1c652:	mov    DWORD PTR [rip+0x20ca64],eax        # 2290bc <opt+0x1c>
   1c658:	je     1c490 <cmd_parser+0x3c0>
   1c65e:	xor    eax,eax
   1c660:	jmp    1c1e8 <cmd_parser+0x118>
   1c665:	nop    DWORD PTR [rax]
   1c668:	lea    rsi,[rip+0x20ca91]        # 229100 <opt+0x60>
   1c66f:	mov    rdi,rbx
   1c672:	call   1bed0 <parse_array>
   1c677:	test   eax,eax
   1c679:	js     1cb5a <cmd_parser+0xa8a>
   1c67f:	mov    edi,DWORD PTR [rip+0x20ca83]        # 229108 <opt+0x68>
   1c685:	call   8750 <interval_table_alloc>
   1c68a:	mov    DWORD PTR [rip+0x20ca60],0x3        # 2290f4 <opt+0x54>
   1c694:	mov    DWORD PTR [rip+0x20ca5e],0x2        # 2290fc <opt+0x5c>
   1c69e:	xor    eax,eax
   1c6a0:	mov    DWORD PTR [rip+0x20ca4e],0x1        # 2290f8 <opt+0x58>
   1c6aa:	or     BYTE PTR [rip+0x20c9f0],0x20        # 2290a1 <opt+0x1>
   1c6b1:	mov    DWORD PTR [rip+0x20c9e9],0x1        # 2290a4 <opt+0x4>
   1c6bb:	mov    DWORD PTR [rip+0x20ca83],0x1        # 229148 <G+0x28>
   1c6c5:	jmp    1c1e8 <cmd_parser+0x118>
   1c6ca:	nop    WORD PTR [rax+rax*1+0x0]
   1c6d0:	mov    DWORD PTR [rip+0x20ca6e],0x1        # 229148 <G+0x28>
   1c6da:	or     BYTE PTR [rip+0x20c9bf],0x80        # 2290a0 <opt>
   1c6e1:	xor    eax,eax
   1c6e3:	jmp    1c1e8 <cmd_parser+0x118>
   1c6e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c6f0:	mov    QWORD PTR [rip+0x20ca41],rsi        # 229138 <G+0x18>
   1c6f7:	xor    eax,eax
   1c6f9:	jmp    1c1e8 <cmd_parser+0x118>
   1c6fe:	xchg   ax,ax
   1c700:	or     BYTE PTR [rip+0x20c99c],0x10        # 2290a3 <opt+0x3>
   1c707:	xor    eax,eax
   1c709:	jmp    1c1e8 <cmd_parser+0x118>
   1c70e:	xchg   ax,ax
   1c710:	lea    rsi,[rip+0x20c9e9]        # 229100 <opt+0x60>
   1c717:	mov    rdi,rbx
   1c71a:	call   1bed0 <parse_array>
   1c71f:	test   eax,eax
   1c721:	js     1c72c <cmd_parser+0x65c>
   1c723:	cmp    DWORD PTR [rip+0x20c9de],0x1        # 229108 <opt+0x68>
   1c72a:	je     1c740 <cmd_parser+0x670>
   1c72c:	mov    rsi,QWORD PTR [rip+0x20fd0d]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c733:	mov    edx,0x106
   1c738:	mov    rdi,rbp
   1c73b:	call   43a0 <argp_state_help@plt>
   1c740:	mov    DWORD PTR [rip+0x20c9aa],0x5        # 2290f4 <opt+0x54>
   1c74a:	jmp    1c176 <cmd_parser+0xa6>
   1c74f:	nop
   1c750:	or     BYTE PTR [rip+0x20c94b],0x40        # 2290a2 <opt+0x2>
   1c757:	xor    eax,eax
   1c759:	jmp    1c1e8 <cmd_parser+0x118>
   1c75e:	xchg   ax,ax
   1c760:	or     BYTE PTR [rip+0x20c93a],0x80        # 2290a1 <opt+0x1>
   1c767:	mov    DWORD PTR [rip+0x20c9d7],0x1        # 229148 <G+0x28>
   1c771:	xor    eax,eax
   1c773:	jmp    1c1e8 <cmd_parser+0x118>
   1c778:	nop    DWORD PTR [rax+rax*1+0x0]
   1c780:	mov    DWORD PTR [rip+0x20c9be],0x1        # 229148 <G+0x28>
   1c78a:	or     BYTE PTR [rip+0x20c910],0x4        # 2290a1 <opt+0x1>
   1c791:	xor    eax,eax
   1c793:	jmp    1c1e8 <cmd_parser+0x118>
   1c798:	nop    DWORD PTR [rax+rax*1+0x0]
   1c7a0:	or     BYTE PTR [rip+0x20c8fb],0x10        # 2290a2 <opt+0x2>
   1c7a7:	xor    eax,eax
   1c7a9:	jmp    1c1e8 <cmd_parser+0x118>
   1c7ae:	xchg   ax,ax
   1c7b0:	or     BYTE PTR [rip+0x20c8ec],0x2        # 2290a3 <opt+0x3>
   1c7b7:	xor    eax,eax
   1c7b9:	jmp    1c1e8 <cmd_parser+0x118>
   1c7be:	xchg   ax,ax
   1c7c0:	mov    DWORD PTR [rip+0x20c97e],0x1        # 229148 <G+0x28>
   1c7ca:	or     BYTE PTR [rip+0x20c8cf],0x2        # 2290a0 <opt>
   1c7d1:	xor    eax,eax
   1c7d3:	jmp    1c1e8 <cmd_parser+0x118>
   1c7d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c7e0:	lea    rsi,[rip+0x20c919]        # 229100 <opt+0x60>
   1c7e7:	mov    rdi,rbx
   1c7ea:	call   1bed0 <parse_array>
   1c7ef:	test   eax,eax
   1c7f1:	js     1c800 <cmd_parser+0x730>
   1c7f3:	cmp    DWORD PTR [rip+0x20c90e],0x1        # 229108 <opt+0x68>
   1c7fa:	je     1cbe7 <cmd_parser+0xb17>
   1c800:	mov    rcx,QWORD PTR [rip+0x20fc39]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c807:	lea    rdi,[rip+0x598a]        # 22198 <_IO_stdin_used+0x51d8>
   1c80e:	mov    edx,0x24
   1c813:	mov    esi,0x1
   1c818:	call   4550 <fwrite@plt>
   1c81d:	jmp    1c490 <cmd_parser+0x3c0>
   1c822:	nop    WORD PTR [rax+rax*1+0x0]
   1c828:	mov    edx,DWORD PTR [rdx+0x20]
   1c82b:	test   edx,edx
   1c82d:	jne    1c490 <cmd_parser+0x3c0>
   1c833:	mov    QWORD PTR [rip+0x20c906],rsi        # 229140 <G+0x20>
   1c83a:	xor    eax,eax
   1c83c:	jmp    1c1e8 <cmd_parser+0x118>
   1c841:	nop    DWORD PTR [rax+0x0]
   1c848:	test   BYTE PTR [rip+0x20c852],0x20        # 2290a1 <opt+0x1>
   1c84f:	jne    1cbad <cmd_parser+0xadd>
   1c855:	mov    eax,DWORD PTR [rip+0x20c8ed]        # 229148 <G+0x28>
   1c85b:	mov    rdi,QWORD PTR [rip+0x20fbde]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c862:	test   eax,eax
   1c864:	je     1cb77 <cmd_parser+0xaa7>
   1c86a:	test   BYTE PTR [rip+0x20c832],0x10        # 2290a3 <opt+0x3>
   1c871:	lea    rax,[rip+0x17c2]        # 1e03a <_IO_stdin_used+0x107a>
   1c878:	lea    rcx,[rip+0x17bf]        # 1e03e <_IO_stdin_used+0x107e>
   1c87f:	lea    rdx,[rip+0x59d2]        # 22258 <_IO_stdin_used+0x5298>
   1c886:	mov    esi,0x1
   1c88b:	cmovne rcx,rax
   1c88f:	xor    eax,eax
   1c891:	call   4560 <__fprintf_chk@plt>
   1c896:	xor    eax,eax
   1c898:	jmp    1c1e8 <cmd_parser+0x118>
   1c89d:	nop    DWORD PTR [rax]
   1c8a0:	or     BYTE PTR [rip+0x20c7fb],0x3        # 2290a2 <opt+0x2>
   1c8a7:	mov    DWORD PTR [rip+0x20c897],0x1        # 229148 <G+0x28>
   1c8b1:	xor    eax,eax
   1c8b3:	jmp    1c1e8 <cmd_parser+0x118>
   1c8b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c8c0:	or     BYTE PTR [rip+0x20c7da],0x40        # 2290a1 <opt+0x1>
   1c8c7:	mov    DWORD PTR [rip+0x20c877],0x1        # 229148 <G+0x28>
   1c8d1:	xor    eax,eax
   1c8d3:	jmp    1c1e8 <cmd_parser+0x118>
   1c8d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c8e0:	xor    edx,edx
   1c8e2:	mov    rsi,rsp
   1c8e5:	mov    rdi,rbx
   1c8e8:	call   4480 <strtol@plt>
   1c8ed:	cmp    QWORD PTR [rsp],rbx
   1c8f1:	mov    DWORD PTR [rip+0x20c7e5],eax        # 2290dc <opt+0x3c>
   1c8f7:	je     1c490 <cmd_parser+0x3c0>
   1c8fd:	xor    eax,eax
   1c8ff:	jmp    1c1e8 <cmd_parser+0x118>
   1c904:	nop    DWORD PTR [rax+0x0]
   1c908:	lea    rsi,[rip+0x20c7f1]        # 229100 <opt+0x60>
   1c90f:	mov    rdi,rbx
   1c912:	call   1bed0 <parse_array>
   1c917:	test   eax,eax
   1c919:	js     1c924 <cmd_parser+0x854>
   1c91b:	cmp    DWORD PTR [rip+0x20c7e6],0x1        # 229108 <opt+0x68>
   1c922:	je     1c938 <cmd_parser+0x868>
   1c924:	mov    rsi,QWORD PTR [rip+0x20fb15]        # 22c440 <stderr@@GLIBC_2.2.5>
   1c92b:	mov    edx,0x106
   1c930:	mov    rdi,rbp
   1c933:	call   43a0 <argp_state_help@plt>
   1c938:	mov    DWORD PTR [rip+0x20c7b2],0x4        # 2290f4 <opt+0x54>
   1c942:	jmp    1c176 <cmd_parser+0xa6>
   1c947:	nop    WORD PTR [rax+rax*1+0x0]
   1c950:	or     BYTE PTR [rip+0x20c74c],0x8        # 2290a3 <opt+0x3>
   1c957:	xor    eax,eax
   1c959:	jmp    1c1e8 <cmd_parser+0x118>
   1c95e:	xchg   ax,ax
   1c960:	mov    DWORD PTR [rip+0x20c7de],0x1        # 229148 <G+0x28>
   1c96a:	or     BYTE PTR [rip+0x20c72f],0x40        # 2290a0 <opt>
   1c971:	xor    eax,eax
   1c973:	jmp    1c1e8 <cmd_parser+0x118>
   1c978:	nop    DWORD PTR [rax+rax*1+0x0]
   1c980:	xor    edx,edx
   1c982:	mov    rsi,rsp
   1c985:	mov    rdi,rbx
   1c988:	or     BYTE PTR [rip+0x20c711],0x1        # 2290a0 <opt>
   1c98f:	mov    DWORD PTR [rip+0x20c7af],0x1        # 229148 <G+0x28>
   1c999:	call   4480 <strtol@plt>
   1c99e:	cmp    QWORD PTR [rsp],rbx
   1c9a2:	mov    DWORD PTR [rip+0x20c710],eax        # 2290b8 <opt+0x18>
   1c9a8:	je     1c490 <cmd_parser+0x3c0>
   1c9ae:	xor    eax,eax
   1c9b0:	jmp    1c1e8 <cmd_parser+0x118>
   1c9b5:	nop    DWORD PTR [rax]
   1c9b8:	or     BYTE PTR [rip+0x20c6e3],0x8        # 2290a2 <opt+0x2>
   1c9bf:	xor    eax,eax
   1c9c1:	jmp    1c1e8 <cmd_parser+0x118>
   1c9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1c9d0:	lea    rsi,[rip+0x20c729]        # 229100 <opt+0x60>
   1c9d7:	mov    rdi,rbx
   1c9da:	call   1bed0 <parse_array>
   1c9df:	test   eax,eax
   1c9e1:	js     1c800 <cmd_parser+0x730>
   1c9e7:	mov    edi,DWORD PTR [rip+0x20c71b]        # 229108 <opt+0x68>
   1c9ed:	call   8750 <interval_table_alloc>
   1c9f2:	mov    DWORD PTR [rip+0x20c6f8],0x0        # 2290f4 <opt+0x54>
   1c9fc:	mov    DWORD PTR [rip+0x20c6f6],0x1        # 2290fc <opt+0x5c>
   1ca06:	mov    DWORD PTR [rip+0x20c6e8],0x1        # 2290f8 <opt+0x58>
   1ca10:	jmp    1c385 <cmd_parser+0x2b5>
   1ca15:	nop    DWORD PTR [rax]
   1ca18:	mov    eax,0x7
   1ca1d:	jmp    1c1e8 <cmd_parser+0x118>
   1ca22:	nop    WORD PTR [rax+rax*1+0x0]
   1ca28:	or     BYTE PTR [rip+0x20c674],0x40        # 2290a3 <opt+0x3>
   1ca2f:	mov    DWORD PTR [rip+0x20c70f],0x1        # 229148 <G+0x28>
   1ca39:	xor    eax,eax
   1ca3b:	jmp    1c1e8 <cmd_parser+0x118>
   1ca40:	mov    DWORD PTR [rip+0x20c6aa],0x0        # 2290f4 <opt+0x54>
   1ca4a:	mov    DWORD PTR [rip+0x20c6a8],0x1        # 2290fc <opt+0x5c>
   1ca54:	mov    DWORD PTR [rip+0x20c69a],0x2        # 2290f8 <opt+0x58>
   1ca5e:	jmp    1c385 <cmd_parser+0x2b5>
   1ca63:	nop    DWORD PTR [rax+rax*1+0x0]
   1ca68:	or     BYTE PTR [rip+0x20c633],0x80        # 2290a2 <opt+0x2>
   1ca6f:	xor    eax,eax
   1ca71:	jmp    1c1e8 <cmd_parser+0x118>
   1ca76:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ca80:	mov    DWORD PTR [rip+0x20c6be],0x1        # 229148 <G+0x28>
   1ca8a:	or     BYTE PTR [rip+0x20c60f],0x8        # 2290a0 <opt>
   1ca91:	xor    eax,eax
   1ca93:	jmp    1c1e8 <cmd_parser+0x118>
   1ca98:	nop    DWORD PTR [rax+rax*1+0x0]
   1caa0:	xor    edx,edx
   1caa2:	mov    rsi,rsp
   1caa5:	mov    rdi,rbx
   1caa8:	call   4480 <strtol@plt>
   1caad:	and    eax,0x1
   1cab0:	lea    edx,[rax*4+0x0]
   1cab7:	movzx  eax,BYTE PTR [rip+0x20c5e5]        # 2290a3 <opt+0x3>
   1cabe:	and    eax,0xfffffffb
   1cac1:	or     eax,edx
   1cac3:	cmp    QWORD PTR [rsp],rbx
   1cac7:	mov    BYTE PTR [rip+0x20c5d6],al        # 2290a3 <opt+0x3>
   1cacd:	je     1c490 <cmd_parser+0x3c0>
   1cad3:	xor    eax,eax
   1cad5:	jmp    1c1e8 <cmd_parser+0x118>
   1cada:	nop    WORD PTR [rax+rax*1+0x0]
   1cae0:	xor    edx,edx
   1cae2:	mov    rsi,rsp
   1cae5:	mov    rdi,rbx
   1cae8:	or     BYTE PTR [rip+0x20c5b1],0x10        # 2290a0 <opt>
   1caef:	mov    DWORD PTR [rip+0x20c64f],0x1        # 229148 <G+0x28>
   1caf9:	call   4480 <strtol@plt>
   1cafe:	cmp    QWORD PTR [rsp],rbx
   1cb02:	mov    DWORD PTR [rip+0x20c5b8],eax        # 2290c0 <opt+0x20>
   1cb08:	je     1c490 <cmd_parser+0x3c0>
   1cb0e:	xor    eax,eax
   1cb10:	jmp    1c1e8 <cmd_parser+0x118>
   1cb15:	nop    DWORD PTR [rax]
   1cb18:	xor    edx,edx
   1cb1a:	mov    rsi,rsp
   1cb1d:	mov    rdi,rbx
   1cb20:	call   4480 <strtol@plt>
   1cb25:	cmp    QWORD PTR [rsp],rbx
   1cb29:	mov    edx,eax
   1cb2b:	mov    DWORD PTR [rip+0x20c5af],eax        # 2290e0 <opt+0x40>
   1cb31:	je     1cc30 <cmd_parser+0xb60>
   1cb37:	cmp    edx,0x6
   1cb3a:	ja     1cc54 <cmd_parser+0xb84>
   1cb40:	lea    rsi,[rip+0x56c1]        # 22208 <_IO_stdin_used+0x5248>
   1cb47:	mov    edi,0x1
   1cb4c:	xor    eax,eax
   1cb4e:	call   44f0 <__printf_chk@plt>
   1cb53:	xor    eax,eax
   1cb55:	jmp    1c1e8 <cmd_parser+0x118>
   1cb5a:	mov    rcx,QWORD PTR [rip+0x20f8df]        # 22c440 <stderr@@GLIBC_2.2.5>
   1cb61:	mov    edx,0x24
   1cb66:	mov    esi,0x1
   1cb6b:	lea    rdi,[rip+0x564e]        # 221c0 <_IO_stdin_used+0x5200>
   1cb72:	jmp    1c818 <cmd_parser+0x748>
   1cb77:	mov    rcx,rdi
   1cb7a:	lea    rdi,[rip+0x56af]        # 22230 <_IO_stdin_used+0x5270>
   1cb81:	mov    edx,0x22
   1cb86:	mov    esi,0x1
   1cb8b:	call   4550 <fwrite@plt>
   1cb90:	or     BYTE PTR [rip+0x20c50c],0x20        # 2290a3 <opt+0x3>
   1cb97:	mov    DWORD PTR [rip+0x20c503],0x1        # 2290a4 <opt+0x4>
   1cba1:	mov    rdi,QWORD PTR [rip+0x20f898]        # 22c440 <stderr@@GLIBC_2.2.5>
   1cba8:	jmp    1c86a <cmd_parser+0x79a>
   1cbad:	mov    ecx,DWORD PTR [rip+0x20c53d]        # 2290f0 <opt+0x50>
   1cbb3:	movabs rdx,0x20c49ba5e353f7cf
   1cbbd:	imul   rcx,QWORD PTR [rip+0x20c4eb]        # 2290b0 <opt+0x10>
   1cbc5:	mov    rax,rcx
   1cbc8:	sar    rcx,0x3f
   1cbcc:	imul   rdx
   1cbcf:	sar    rdx,0x7
   1cbd3:	sub    rdx,rcx
   1cbd6:	mov    QWORD PTR [rip+0x20c50b],rdx        # 2290e8 <opt+0x48>
   1cbdd:	call   9190 <interval_header>
   1cbe2:	jmp    1c855 <cmd_parser+0x785>
   1cbe7:	mov    DWORD PTR [rip+0x20c503],0x2        # 2290f4 <opt+0x54>
   1cbf1:	jmp    1c37b <cmd_parser+0x2ab>
   1cbf6:	lea    rdi,[rax+0x1]
   1cbfa:	xor    edx,edx
   1cbfc:	mov    rsi,r12
   1cbff:	call   4450 <strtoull@plt>
   1cc04:	mov    rcx,rax
   1cc07:	mov    QWORD PTR [rip+0x20c4ba],rax        # 2290c8 <opt+0x28>
   1cc0e:	jmp    1c278 <cmd_parser+0x1a8>
   1cc13:	mov    rsi,QWORD PTR [rip+0x20f826]        # 22c440 <stderr@@GLIBC_2.2.5>
   1cc1a:	mov    edx,0x106
   1cc1f:	mov    rdi,rbp
   1cc22:	call   43a0 <argp_state_help@plt>
   1cc27:	mov    rax,QWORD PTR [rsp]
   1cc2b:	jmp    1c25f <cmd_parser+0x18f>
   1cc30:	mov    rsi,QWORD PTR [rip+0x20f809]        # 22c440 <stderr@@GLIBC_2.2.5>
   1cc37:	mov    edx,0x106
   1cc3c:	mov    rdi,rbp
   1cc3f:	call   43a0 <argp_state_help@plt>
   1cc44:	mov    edx,DWORD PTR [rip+0x20c496]        # 2290e0 <opt+0x40>
   1cc4a:	jmp    1cb37 <cmd_parser+0xa67>
   1cc4f:	call   43c0 <__stack_chk_fail@plt>
   1cc54:	mov    rdi,QWORD PTR [rip+0x20f7e5]        # 22c440 <stderr@@GLIBC_2.2.5>
   1cc5b:	lea    rdx,[rip+0x5586]        # 221e8 <_IO_stdin_used+0x5228>
   1cc62:	mov    ecx,0x6
   1cc67:	mov    esi,0x1
   1cc6c:	xor    eax,eax
   1cc6e:	call   4560 <__fprintf_chk@plt>
   1cc73:	mov    edi,0x1
   1cc78:	call   4540 <exit@plt>
   1cc7d:	nop    DWORD PTR [rax]

000000000001cc80 <mread_init>:
   1cc80:	push   rbp
   1cc81:	push   rbx
   1cc82:	mov    ebp,edi
   1cc84:	mov    edi,0xd8
   1cc89:	sub    rsp,0xa8
   1cc90:	mov    rax,QWORD PTR fs:0x28
   1cc99:	mov    QWORD PTR [rsp+0x98],rax
   1cca1:	xor    eax,eax
   1cca3:	call   4490 <malloc@plt>
   1cca8:	test   rax,rax
   1ccab:	je     1cd15 <mread_init+0x95>
   1ccad:	lea    rdi,[rax+0xc]
   1ccb1:	mov    rbx,rax
   1ccb4:	mov    QWORD PTR [rax+0x4],0x0
   1ccbc:	mov    QWORD PTR [rax+0xd0],0x0
   1ccc7:	mov    esi,ebp
   1ccc9:	mov    rdx,rsp
   1cccc:	and    rdi,0xfffffffffffffff8
   1ccd0:	sub    eax,edi
   1ccd2:	lea    ecx,[rax+0xd8]
   1ccd8:	xor    eax,eax
   1ccda:	shr    ecx,0x3
   1ccdd:	rep stos QWORD PTR es:[rdi],rax
   1cce0:	mov    DWORD PTR [rbx],ebp
   1cce2:	mov    edi,0x1
   1cce7:	call   44b0 <__fxstat@plt>
   1ccec:	mov    rax,QWORD PTR [rsp+0x30]
   1ccf1:	mov    rsi,QWORD PTR [rsp+0x98]
   1ccf9:	xor    rsi,QWORD PTR fs:0x28
   1cd02:	mov    QWORD PTR [rbx+0x8],rax
   1cd06:	mov    rax,rbx
   1cd09:	jne    1cd2b <mread_init+0xab>
   1cd0b:	add    rsp,0xa8
   1cd12:	pop    rbx
   1cd13:	pop    rbp
   1cd14:	ret    
   1cd15:	lea    rdi,[rip+0x6bc0]        # 238dc <__PRETTY_FUNCTION__.5713+0x4c>
   1cd1c:	call   4530 <perror@plt>
   1cd21:	mov    edi,0x1
   1cd26:	call   4540 <exit@plt>
   1cd2b:	call   43c0 <__stack_chk_fail@plt>

000000000001cd30 <mread64>:
   1cd30:	push   r14
   1cd32:	push   r13
   1cd34:	push   r12
   1cd36:	push   rbp
   1cd37:	push   rbx
   1cd38:	mov    rax,QWORD PTR [rdi+0x8]
   1cd3c:	cmp    rax,rcx
   1cd3f:	jl     1ce60 <mread64+0x130>
   1cd45:	mov    rbp,rcx
   1cd48:	lea    rcx,[rcx+rdx*1]
   1cd4c:	mov    r12,rax
   1cd4f:	sub    r12,rbp
   1cd52:	mov    r13,rsi
   1cd55:	mov    rbx,rdi
   1cd58:	cmp    rax,rcx
   1cd5b:	movsxd rax,DWORD PTR [rdi+0xd4]
   1cd62:	cmovge r12,rdx
   1cd66:	lea    rdx,[rax+rax*2]
   1cd6a:	lea    rdx,[rdi+rdx*8]
   1cd6e:	cmp    QWORD PTR [rdx+0x10],0x0
   1cd73:	je     1cd89 <mread64+0x59>
   1cd75:	mov    rcx,rbp
   1cd78:	and    rcx,0xffffffffffe00000
   1cd7f:	cmp    rcx,QWORD PTR [rdx+0x18]
   1cd83:	je     1ce11 <mread64+0xe1>
   1cd89:	mov    rcx,rbp
   1cd8c:	lea    rax,[rbx+0x10]
   1cd90:	xor    edx,edx
   1cd92:	and    rcx,0xffffffffffe00000
   1cd99:	nop    DWORD PTR [rax+0x0]
   1cda0:	cmp    QWORD PTR [rax],0x0
   1cda4:	je     1cdac <mread64+0x7c>
   1cda6:	cmp    rcx,QWORD PTR [rax+0x8]
   1cdaa:	je     1ce08 <mread64+0xd8>
   1cdac:	add    edx,0x1
   1cdaf:	add    rax,0x18
   1cdb3:	cmp    edx,0x8
   1cdb6:	jne    1cda0 <mread64+0x70>
   1cdb8:	mov    eax,DWORD PTR [rbx+0xd0]
   1cdbe:	xor    esi,esi
   1cdc0:	jmp    1cdda <mread64+0xaa>
   1cdc2:	nop    WORD PTR [rax+rax*1+0x0]
   1cdc8:	mov    ecx,DWORD PTR [rdx+0x20]
   1cdcb:	test   ecx,ecx
   1cdcd:	je     1ceb0 <mread64+0x180>
   1cdd3:	mov    DWORD PTR [rdx+0x20],0x0
   1cdda:	add    eax,0x1
   1cddd:	cmp    eax,0x8
   1cde0:	cmovge eax,esi
   1cde3:	movsxd rcx,eax
   1cde6:	lea    rdx,[rcx+rcx*2]
   1cdea:	lea    rdx,[rbx+rdx*8]
   1cdee:	mov    rdi,QWORD PTR [rdx+0x10]
   1cdf2:	test   rdi,rdi
   1cdf5:	jne    1cdc8 <mread64+0x98>
   1cdf7:	mov    DWORD PTR [rbx+0xd0],eax
   1cdfd:	jmp    1cec7 <mread64+0x197>
   1ce02:	nop    WORD PTR [rax+rax*1+0x0]
   1ce08:	movsxd rax,edx
   1ce0b:	mov    DWORD PTR [rbx+0xd4],edx
   1ce11:	lea    rax,[rax+rax*2]
   1ce15:	mov    rdi,rbp
   1ce18:	lea    rax,[rbx+rax*8]
   1ce1c:	sub    rdi,QWORD PTR [rax+0x18]
   1ce20:	mov    DWORD PTR [rax+0x20],0x1
   1ce27:	mov    rsi,QWORD PTR [rax+0x10]
   1ce2b:	lea    rdx,[r12+rdi*1]
   1ce2f:	cmp    rdx,0x200000
   1ce36:	jbe    1ce70 <mread64+0x140>
   1ce38:	mov    r14d,0x200000
   1ce3e:	add    rsi,rdi
   1ce41:	sub    r14,rdi
   1ce44:	mov    rdi,r13
   1ce47:	mov    rdx,r14
   1ce4a:	call   4500 <memmove@plt>
   1ce4f:	cmp    r12,r14
   1ce52:	jg     1ce90 <mread64+0x160>
   1ce54:	pop    rbx
   1ce55:	mov    rax,r12
   1ce58:	pop    rbp
   1ce59:	pop    r12
   1ce5b:	pop    r13
   1ce5d:	pop    r14
   1ce5f:	ret    
   1ce60:	xor    r12d,r12d
   1ce63:	pop    rbx
   1ce64:	mov    rax,r12
   1ce67:	pop    rbp
   1ce68:	pop    r12
   1ce6a:	pop    r13
   1ce6c:	pop    r14
   1ce6e:	ret    
   1ce6f:	nop
   1ce70:	add    rsi,rdi
   1ce73:	mov    rdx,r12
   1ce76:	mov    rdi,r13
   1ce79:	call   4500 <memmove@plt>
   1ce7e:	pop    rbx
   1ce7f:	mov    rax,r12
   1ce82:	pop    rbp
   1ce83:	pop    r12
   1ce85:	pop    r13
   1ce87:	pop    r14
   1ce89:	ret    
   1ce8a:	nop    WORD PTR [rax+rax*1+0x0]
   1ce90:	mov    rdx,r12
   1ce93:	lea    rcx,[rbp+r14*1+0x0]
   1ce98:	lea    rsi,[r13+r14*1+0x0]
   1ce9d:	sub    rdx,r14
   1cea0:	mov    rdi,rbx
   1cea3:	call   1cd30 <mread64>
   1cea8:	jmp    1ce54 <mread64+0x124>
   1ceaa:	nop    WORD PTR [rax+rax*1+0x0]
   1ceb0:	mov    DWORD PTR [rbx+0xd0],eax
   1ceb6:	mov    esi,0x200000
   1cebb:	call   44e0 <munmap@plt>
   1cec0:	movsxd rcx,DWORD PTR [rbx+0xd0]
   1cec7:	lea    rax,[rcx+rcx*2]
   1cecb:	mov    r9,rbp
   1cece:	mov    ecx,0x1
   1ced3:	and    r9,0xffffffffffe00000
   1ceda:	mov    edx,0x1
   1cedf:	xor    edi,edi
   1cee1:	lea    r14,[rbx+rax*8]
   1cee5:	mov    esi,0x200000
   1ceea:	mov    QWORD PTR [r14+0x18],r9
   1ceee:	mov    r8d,DWORD PTR [rbx]
   1cef1:	call   43d0 <mmap@plt>
   1cef6:	mov    QWORD PTR [r14+0x10],rax
   1cefa:	movsxd rax,DWORD PTR [rbx+0xd0]
   1cf01:	lea    rcx,[rax+rax*2]
   1cf05:	mov    rdx,rax
   1cf08:	cmp    QWORD PTR [rbx+rcx*8+0x10],0xffffffffffffffff
   1cf0e:	jne    1ce0b <mread64+0xdb>
   1cf14:	imul   rax,rax,0x18
   1cf18:	lea    rdi,[rip+0x69c4]        # 238e3 <__PRETTY_FUNCTION__.5713+0x53>
   1cf1f:	mov    QWORD PTR [rbx+rax*1+0x10],0x0
   1cf28:	call   4530 <perror@plt>
   1cf2d:	mov    edi,0x1
   1cf32:	call   4540 <exit@plt>
   1cf37:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cf40 <__libc_csu_init>:
   1cf40:	push   r15
   1cf42:	push   r14
   1cf44:	mov    r15,rdx
   1cf47:	push   r13
   1cf49:	push   r12
   1cf4b:	lea    r12,[rip+0x20b3de]        # 228330 <__frame_dummy_init_array_entry>
   1cf52:	push   rbp
   1cf53:	lea    rbp,[rip+0x20b3de]        # 228338 <__init_array_end>
   1cf5a:	push   rbx
   1cf5b:	mov    r13d,edi
   1cf5e:	mov    r14,rsi
   1cf61:	sub    rbp,r12
   1cf64:	sub    rsp,0x8
   1cf68:	sar    rbp,0x3
   1cf6c:	call   42f8 <_init>
   1cf71:	test   rbp,rbp
   1cf74:	je     1cf96 <__libc_csu_init+0x56>
   1cf76:	xor    ebx,ebx
   1cf78:	nop    DWORD PTR [rax+rax*1+0x0]
   1cf80:	mov    rdx,r15
   1cf83:	mov    rsi,r14
   1cf86:	mov    edi,r13d
   1cf89:	call   QWORD PTR [r12+rbx*8]
   1cf8d:	add    rbx,0x1
   1cf91:	cmp    rbp,rbx
   1cf94:	jne    1cf80 <__libc_csu_init+0x40>
   1cf96:	add    rsp,0x8
   1cf9a:	pop    rbx
   1cf9b:	pop    rbp
   1cf9c:	pop    r12
   1cf9e:	pop    r13
   1cfa0:	pop    r14
   1cfa2:	pop    r15
   1cfa4:	ret    
   1cfa5:	nop
   1cfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001cfb0 <__libc_csu_fini>:
   1cfb0:	repz ret 

Disassembly of section .fini:

000000000001cfb4 <_fini>:
   1cfb4:	sub    rsp,0x8
   1cfb8:	add    rsp,0x8
   1cfbc:	ret    
