Number of assembly instructions     = 149
Number of indirect branches         = 1
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 154
Number of edges: 173

ba0 (False): 0

980: PUSH Reg R15 2
982: PUSH Reg R14 2
984: PUSH Reg R13 2
986: PUSH Reg R12 2
988: MOV Reg R13, Reg RSI 3
98b: PUSH Reg RBP 1
98c: PUSH Reg RBX 1
98d: SUB Reg RSP, Immediate 24 4
991: CMP Reg EDI, Immediate 1 3
994: JLE add (resolved immediate)
  |
  `- 99a,add
99a: XOR Reg EBP, Reg EBP 2
99c: XOR Reg R14D, Reg R14D 3
99f: CMP Reg EDI, Immediate 2 3
9a2: JE a2d (resolved immediate)
  |
  `- 9a8,a2d
9a8: LEA Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDI) (AddrImm 3))) 3
9ab: LEA Reg R12, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 16))) 4
9af: XOR Reg EBP, Reg EBP 2
9b1: LEA Reg R14, Address (SizeDir 64 (AddrPlus (AddrPlus (FromReg RSI) (AddrTimes (AddrImm 8) (FromReg RAX))) (AddrImm 24))) 5
9b6: MOV Reg RBX, Reg R12 3
9b9: NOP  7
9c0: MOV Reg RDI, Address (SizeDir 64 (FromReg RBX)) 3
9c3: ADD Reg RBX, Immediate 8 4
9c7: CALL strlen (external)
9cc: CMP Reg RBX, Reg R14 3
9cf: LEA Reg EBP, Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RBP) (AddrTimes (AddrImm 1) (FromReg RAX))) (AddrImm 1))) 4
9d3: JNE 9c0 (resolved immediate)
  |
  `- 9c0,9d5
9d5: TEST Reg EBP, Reg EBP 2
9d7: JE a7a (resolved immediate)
  |
  `- 9dd,a7a
9dd: MOV Reg EDI, Reg EBP 2
9df: XOR Reg EBP, Reg EBP 2
9e1: CALL malloc (external)
9e6: TEST Reg RAX, Reg RAX 3
9e9: MOV Reg R14, Reg RAX 3
9ec: JE b07 (resolved immediate)
  |
  `- 9f2,b07
9f2: NOP  6
9f8: MOV Reg RSI, Address (SizeDir 64 (FromReg R12)) 4
9fc: ADD Reg R12, Immediate 8 4
a00: MOV Reg RDI, Reg RSI 3
a03: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RSI 5
a08: CALL strlen (external)
a0d: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
a12: MOV Reg EDI, Reg EBP 2
a14: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrImm 1))) 4
a18: ADD Reg RDI, Reg R14 3
a1b: MOV Reg R15, Reg RAX 3
a1e: LEA Reg EBP, Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RBP) (AddrTimes (AddrImm 1) (FromReg R15))) (AddrImm 1))) 5
a23: CALL memcpy (external)
a28: CMP Reg RBX, Reg R12 3
a2b: JNE 9f8 (resolved immediate)
  |
  `- 9f8,a2d
a2d: XOR Reg EDI, Reg EDI 2
a2f: CALL xs_open (external)
a34: TEST Reg RAX, Reg RAX 3
a37: MOV Reg RBX, Reg RAX 3
a3a: JE a7f (resolved immediate)
  |
  `- a3c,a7f
a3c: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg R13) (AddrImm 8))) 4
a40: MOV Reg ECX, Reg EBP 2
a42: MOV Reg RDX, Reg R14 3
a45: MOV Reg RDI, Reg RAX 3
a48: CALL xs_control_command (external)
a4d: TEST Reg RAX, Reg RAX 3
a50: JE aa3 (resolved immediate)
  |
  `- a52,aa3
a52: XOR Reg EBP, Reg EBP 2
a54: CMP Address (SizeDir 8 (FromReg RAX)), Immediate 0 3
a57: JNE ad0 (resolved immediate)
  |
  `- a59,ad0
a59: MOV Reg RDI, Reg RBX 3
a5c: CALL xs_close (external)
a61: MOV Reg RDI, Reg R14 3
a64: CALL free (external)
a69: ADD Reg RSP, Immediate 24 4
a6d: MOV Reg EAX, Reg EBP 2
a6f: POP Reg RBX 1
a70: POP Reg RBP 1
a71: POP Reg R12 2
a73: POP Reg R13 2
a75: POP Reg R14 2
a77: POP Reg R15 2
a79: RET  1
  |
  `- 
a7a: XOR Reg R14D, Reg R14D 3
a7d: JMP a2d (resolved immediate)
  |
  `- a2d
a7f: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102682))) 7
a86: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 862))) 7
a8d: MOV Reg EDX, Immediate 29 5
a92: MOV Reg ESI, Immediate 1 5
a97: MOV Reg EBP, Immediate 1 5
a9c: CALL fwrite (external)
aa1: JMP a61 (resolved immediate)
  |
  `- a61
aa3: CALL __errno_location (external)
aa8: MOV Reg ECX, Address (SizeDir 32 (FromReg RAX)) 2
aaa: CMP Reg ECX, Immediate 22 3
aad: JE b2e (resolved immediate)
  |
  `- aaf,b2e
aaf: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102634))) 7
ab6: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 747))) 7
abd: MOV Reg ESI, Immediate 1 5
ac2: XOR Reg EAX, Reg EAX 2
ac4: MOV Reg EBP, Immediate 3 5
ac9: CALL __fprintf_chk (external)
ace: JMP a59 (resolved immediate)
  |
  `- a59
ad0: MOV Reg RDI, Reg RAX 3
ad3: CALL puts (external)
ad8: JMP a59 (resolved immediate)
  |
  `- a59
add: MOV Reg RCX, Address (SizeDir 64 (FromReg RSI)) 3
ae0: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102585))) 7
ae7: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 586))) 7
aee: MOV Reg ESI, Immediate 1 5
af3: XOR Reg EAX, Reg EAX 2
af5: MOV Reg EBP, Immediate 2 5
afa: XOR Reg R14D, Reg R14D 3
afd: CALL __fprintf_chk (external)
b02: JMP a61 (resolved immediate)
  |
  `- a61
b07: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102546))) 7
b0e: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 707))) 7
b15: MOV Reg EDX, Immediate 18 5
b1a: MOV Reg ESI, Immediate 1 5
b1f: MOV Reg EBP, Immediate 1 5
b24: CALL fwrite (external)
b29: JMP a61 (resolved immediate)
  |
  `- a61
b2e: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 724))) 7
b35: XOR Reg ECX, Reg ECX 2
b37: XOR Reg EDX, Reg EDX 2
b39: MOV Reg RDI, Reg RBX 3
b3c: CALL xs_control_command (external)
b41: TEST Reg RAX, Reg RAX 3
b44: JE b6d (resolved immediate)
  |
  `- b46,b6d
b46: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102483))) 7
b4d: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 516))) 7
b54: MOV Reg RCX, Reg RAX 3
b57: MOV Reg ESI, Immediate 1 5
b5c: XOR Reg EAX, Reg EAX 2
b5e: MOV Reg EBP, Immediate 3 5
b63: CALL __fprintf_chk (external)
b68: JMP a59 (resolved immediate)
  |
  `- a59
b6d: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102444))) 7
b74: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 525))) 7
b7b: MOV Reg EDX, Immediate 30 5
b80: MOV Reg ESI, Immediate 1 5
b85: MOV Reg EBP, Immediate 3 5
b8a: CALL fwrite (external)
b8f: JMP a59 (resolved immediate)
  |
  `- a59
ba0: XOR Reg EBP, Reg EBP 2
ba2: MOV Reg R9, Reg RDX 3
ba5: POP Reg RSI 1
ba6: MOV Reg RDX, Reg RSP 3
ba9: AND Reg RSP, Immediate 18446744073709551600 4
bad: PUSH Reg RAX 1
bae: PUSH Reg RSP 1
baf: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 362))) 7
bb6: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 243))) 7
bbd: LEA Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RIP) (AddrImm 580))) 7
bc4: CALL __libc_start_main (external)
  |
  `- 980
