Number of assembly instructions     = 67
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 67
Number of edges: 67

eab0 (False): 0

eab0: PUSH Reg R14 2
eab2: PUSH Reg R13 2
eab4: MOV Reg R14D, Reg ESI 3
eab7: PUSH Reg R12 2
eab9: PUSH Reg RBP 1
eaba: MOV Reg R13D, Reg EDX 3
eabd: PUSH Reg RBX 1
eabe: MOV Reg EDX, Immediate 8 5
eac3: MOV Reg RBX, Immediate 18446744073709551615 7
eaca: MOV Reg RBP, Reg RDI 3
eacd: SUB Reg RSP, Immediate 48 4
ead1: MOV Reg R12, Reg RSP 3
ead4: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
eadc: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
eae5: MOV Reg RSI, Reg R12 3
eae8: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 0 8
eaf0: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RBX 5
eaf5: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
eafe: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg RAX 5
eb03: XOR Reg EAX, Reg EAX 2
eb05: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 9
eb0e: CALL xc__hypercall_buffer_alloc (external)
eb13: TEST Reg RAX, Reg RAX 3
eb16: JE eb79 (resolved immediate)
  |
  `- eb18,eb79
eb18: MOV Address (SizeDir 32 (FromReg RAX)), Reg R14D 3
eb1b: MOV Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 4))), Reg R13D 4
eb1f: MOV Reg ESI, Immediate 29 5
eb24: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
eb29: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 1088))) 7
eb30: MOV Reg EDX, Immediate 6 5
eb35: TEST Reg RAX, Reg RAX 3
eb38: CMOVE Reg RAX, Reg R12 4
eb3c: MOV Reg RCX, Address (SizeDir 64 (FromReg RAX)) 3
eb3f: CALL xencall2 (external)
eb44: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
eb49: MOV Reg RDI, Reg RBP 3
eb4c: MOV Reg EBX, Reg EAX 2
eb4e: TEST Reg RSI, Reg RSI 3
eb51: CMOVE Reg RSI, Reg R12 4
eb55: CALL xc__hypercall_buffer_free (external)
eb5a: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
eb5f: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
eb68: MOV Reg EAX, Reg EBX 2
eb6a: JNE ebb2 (resolved immediate)
  |
  `- eb6c,ebb2
eb6c: ADD Reg RSP, Immediate 48 4
eb70: POP Reg RBX 1
eb71: POP Reg RBP 1
eb72: POP Reg R12 2
eb74: POP Reg R13 2
eb76: POP Reg R14 2
eb78: RET  1
  |
  `- 
eb79: CALL __errno_location (external)
eb7e: MOV Reg R13D, Address (SizeDir 32 (FromReg RAX)) 3
eb81: MOV Reg R12, Reg RAX 3
eb84: MOV Reg RDI, Reg RBP 3
eb87: MOV Reg ESI, Reg R13D 3
eb8a: CALL xc_strerror (external)
eb8f: MOV Reg ECX, Address (SizeDir 32 (FromReg R12)) 4
eb93: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 92718))) 7
eb9a: MOV Reg R8, Reg RAX 3
eb9d: MOV Reg ESI, Immediate 1 5
eba2: MOV Reg RDI, Reg RBP 3
eba5: XOR Reg EAX, Reg EAX 2
eba7: CALL xc_report_error (external)
ebac: MOV Address (SizeDir 32 (FromReg R12)), Reg R13D 4
ebb0: JMP eb5a (resolved immediate)
  |
  `- eb5a
ebb2: CALL __stack_chk_fail (external)
  |
  `- 
