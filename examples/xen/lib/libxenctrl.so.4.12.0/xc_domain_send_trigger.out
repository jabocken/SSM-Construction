Number of assembly instructions     = 80
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 80
Number of edges: 82

10e40 (False): 0

10e40: PUSH Reg R13 2
10e42: PUSH Reg R12 2
10e44: PUSH Reg RBP 1
10e45: PUSH Reg RBX 1
10e46: MOV Reg RBX, Reg RDI 3
10e49: SUB Reg RSP, Immediate 216 7
10e50: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
10e59: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))), Reg RAX 8
10e61: XOR Reg EAX, Reg EAX 2
10e63: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 48)) 5
10e68: MOV Reg RBP, Reg RSP 3
10e6b: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg SI 5
10e70: MOV Reg RSI, Reg RBP 3
10e73: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 64))), Reg EDX 4
10e77: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 68))), Reg ECX 4
10e7b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
10e80: MOV Reg RAX, Immediate 73014444060 10
10e8a: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
10e92: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
10e9b: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 3 8
10ea3: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 144 9
10eac: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Reg RAX 5
10eb1: CALL xc__hypercall_bounce_pre (external)
10eb6: TEST Reg EAX, Reg EAX 2
10eb8: JNZ 10f56 (resolved immediate)
  |
  `- 10ebe,10f56
10ebe: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
10ec3: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
10eca: MOV Reg ESI, Immediate 36 5
10ecf: TEST Reg RAX, Reg RAX 3
10ed2: CMOVZ Reg RAX, Reg RBP 4
10ed6: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
10ed9: CALL xencall1 (external)
10ede: TEST Reg EAX, Reg EAX 2
10ee0: MOV Reg R12D, Reg EAX 3
10ee3: JNS 10ef2 (resolved immediate)
  |
  `- 10ee5,10ef2
10ee5: CALL __errno_location (external)
10eea: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
10eed: MOV Reg R13, Reg RAX 3
10ef0: JZ 10f30 (resolved immediate)
  |
  `- 10ef2,10f30
10ef2: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
10ef7: MOV Reg RDI, Reg RBX 3
10efa: TEST Reg RSI, Reg RSI 3
10efd: CMOVZ Reg RSI, Reg RBP 4
10f01: CALL xc__hypercall_bounce_post (external)
10f06: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))) 8
10f0e: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
10f17: MOV Reg EAX, Reg R12D 3
10f1a: JNZ 10f97 (resolved immediate)
  |
  `- 10f1c,10f97
10f1c: ADD Reg RSP, Immediate 216 7
10f23: POP Reg RBX 1
10f24: POP Reg RBP 1
10f25: POP Reg R12 2
10f27: POP Reg R13 2
10f29: RET  1
  |
  `- 
10f30: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
10f34: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 83045)) 7
10f3b: XOR Reg ECX, Reg ECX 2
10f3d: MOV Reg EDX, Immediate 3 5
10f42: MOV Reg RDI, Reg RBX 3
10f45: XOR Reg EAX, Reg EAX 2
10f47: CALL xc_report (external)
10f4c: MOV Address (SizeDir 32 (AddrPlus (FromReg R13) (AddrImm 0))), Immediate 13 8
10f54: JMP 10ef2 (resolved immediate)
  |
  `- 10ef2
10f56: CALL __errno_location (external)
10f5b: MOV Reg R12D, Address (SizeDir 32 (FromReg RAX)) 3
10f5e: MOV Reg RBP, Reg RAX 3
10f61: MOV Reg RDI, Reg RBX 3
10f64: MOV Reg ESI, Reg R12D 3
10f67: CALL xc_strerror (external)
10f6c: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))) 3
10f6f: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 82930)) 7
10f76: MOV Reg R8, Reg RAX 3
10f79: MOV Reg ESI, Immediate 1 5
10f7e: MOV Reg RDI, Reg RBX 3
10f81: XOR Reg EAX, Reg EAX 2
10f83: CALL xc_report_error (external)
10f88: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))), Reg R12D 4
10f8c: MOV Reg R12D, Immediate 4294967295 6
10f92: JMP 10f06 (resolved immediate)
  |
  `- 10f06
10f97: CALL __stack_chk_fail (external)
  |
  `- 
