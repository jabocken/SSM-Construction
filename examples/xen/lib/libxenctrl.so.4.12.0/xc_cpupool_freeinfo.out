Number of assembly instructions     = 188
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 188
Number of edges: 194

b710 (True): bdc2
bd00 (False): 0

b710: PUSH Reg R15 2
b712: PUSH Reg R14 2
b714: MOV Reg R14D, Immediate 4294967295 6
b71a: PUSH Reg R13 2
b71c: PUSH Reg R12 2
b71e: MOV Reg R12, Reg RSI 3
b721: PUSH Reg RBP 1
b722: PUSH Reg RBX 1
b723: MOV Reg RBX, Reg RDI 3
b726: SUB Reg RSP, Immediate 56 4
b72a: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
b733: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg RAX 5
b738: XOR Reg EAX, Reg EAX 2
b73a: MOV Reg RBP, Reg RSP 3
b73d: NOP  3
b740: MOV Address (SizeDir 32 (AddrPlus (FromReg R12) (AddrImm 4))), Immediate 18 9
b749: MOV Reg RSI, Reg RBP 3
b74c: MOV Reg RDI, Reg RBX 3
b74f: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
b757: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
b760: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 3 8
b768: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg R12 5
b76d: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 136 9
b776: CALL xc__hypercall_bounce_pre (external)
b77b: TEST Reg EAX, Reg EAX 2
b77d: JNZ b865 (resolved immediate)
  |
  `- b783,b865
b783: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
b788: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
b78f: MOV Reg ESI, Immediate 35 5
b794: TEST Reg RAX, Reg RAX 3
b797: CMOVZ Reg RAX, Reg RBP 4
b79b: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
b79e: CALL xencall1 (external)
b7a3: TEST Reg EAX, Reg EAX 2
b7a5: MOV Reg R13D, Reg EAX 3
b7a8: JS b7e8 (resolved immediate)
  |
  `- b7aa,b7e8
b7aa: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
b7af: TEST Reg RSI, Reg RSI 3
b7b2: JZ b830 (resolved immediate)
  |
  `- b830
b7bc: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
b7c1: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
b7ca: MOV Reg EAX, Reg R13D 3
b7cd: JNZ b8a4 (resolved immediate)
  |
  `- b7d3,b8a4
b7d3: ADD Reg RSP, Immediate 56 4
b7d7: POP Reg RBX 1
b7d8: POP Reg RBP 1
b7d9: POP Reg R12 2
b7db: POP Reg R13 2
b7dd: POP Reg R14 2
b7df: POP Reg R15 2
b7e1: RET  1
  |
  `- 
b7e8: CALL __errno_location (external)
b7ed: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
b7f0: MOV Reg R15, Reg RAX 3
b7f3: JZ b840 (resolved immediate)
  |
  `- b7f5,b840
b7f5: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
b7fa: TEST Reg RSI, Reg RSI 3
b7fd: JZ b816 (resolved immediate)
  |
  `- b816
b80a: CMP Reg R15D, Immediate 11 4
b80e: JZ b740 (resolved immediate)
  |
  `- b740,b814
b814: JMP b7bc (resolved immediate)
  |
  `- b7bc
b816: MOV Reg RSI, Reg RBP 3
b819: MOV Reg RDI, Reg RBX 3
b81c: CALL xc__hypercall_bounce_post (external)
b821: CALL __errno_location (external)
b826: MOV Reg R15D, Address (SizeDir 32 (FromReg RAX)) 3
b829: JMP b80a (resolved immediate)
  |
  `- b80a
b830: MOV Reg RSI, Reg RBP 3
b833: MOV Reg RDI, Reg RBX 3
b836: CALL xc__hypercall_bounce_post (external)
b83b: JMP b7bc (resolved immediate)
  |
  `- b7bc
b840: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
b844: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 104909)) 7
b84b: XOR Reg ECX, Reg ECX 2
b84d: MOV Reg EDX, Immediate 3 5
b852: MOV Reg RDI, Reg RBX 3
b855: XOR Reg EAX, Reg EAX 2
b857: CALL xc_report (external)
b85c: MOV Address (SizeDir 32 (FromReg R15)), Immediate 13 7
b863: JMP b7f5 (resolved immediate)
  |
  `- b7f5
b865: CALL __errno_location (external)
b86a: MOV Reg R15D, Address (SizeDir 32 (FromReg RAX)) 3
b86d: MOV Reg R13, Reg RAX 3
b870: MOV Reg RDI, Reg RBX 3
b873: MOV Reg ESI, Reg R15D 3
b876: CALL xc_strerror (external)
b87b: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg R13) (AddrImm 0))) 4
b87f: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 104794)) 7
b886: MOV Reg R8, Reg RAX 3
b889: MOV Reg ESI, Immediate 1 5
b88e: MOV Reg RDI, Reg RBX 3
b891: XOR Reg EAX, Reg EAX 2
b893: CALL xc_report_error (external)
b898: MOV Address (SizeDir 32 (AddrPlus (FromReg R13) (AddrImm 0))), Reg R15D 4
b89c: MOV Reg R13D, Reg R14D 3
b89f: JMP b80a (resolved immediate)
  |
  `- b80a
b8a4: CALL __stack_chk_fail (external)
  |
  `- 
bd00: PUSH Reg R14 2
bd02: PUSH Reg R13 2
bd04: PUSH Reg R12 2
bd06: PUSH Reg RBP 1
bd07: MOV Reg RBP, Reg RDI 3
bd0a: PUSH Reg RBX 1
bd0b: SUB Reg RSP, Immediate 192 7
bd12: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
bd1b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 184))), Reg RAX 8
bd23: XOR Reg EAX, Reg EAX 2
bd25: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
bd2d: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
bd36: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 0 8
bd3e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Immediate 18446744073709551615 9
bd47: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 9
bd50: CALL xc_get_cpumap_size (external)
bd55: TEST Reg EAX, Reg EAX 2
bd57: JLE be30 (resolved immediate)
  |
  `- bd5d,be30
bd5d: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
bd62: MOVSXD Reg R12, Reg EAX 3
bd65: MOV Reg R14, Reg RSP 3
bd68: MOV Reg RDX, Reg R12 3
bd6b: MOV Reg RDI, Reg RBP 3
bd6e: MOV Reg EBX, Reg EAX 2
bd70: TEST Reg RSI, Reg RSI 3
bd73: CMOVZ Reg RSI, Reg R14 4
bd77: CALL xc__hypercall_buffer_alloc (external)
bd7c: TEST Reg RAX, Reg RAX 3
bd7f: MOV Reg R13, Reg RAX 3
bd82: JZ be38 (resolved immediate)
  |
  `- bd88,be38
bd88: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
bd8d: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 18 8
bd95: LEA Reg RSI, Address (AddrPlus (FromReg RSP) (AddrImm 48)) 5
bd9a: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 56))), Immediate 7 8
bda2: MOV Reg RDI, Reg RBP 3
bda5: TEST Reg RAX, Reg RAX 3
bda8: CMOVZ Reg RAX, Reg R14 4
bdac: SHL Reg EBX, Immediate 3 3
bdaf: MOV Reg RAX, Address (SizeDir 64 (FromReg RAX)) 3
bdb2: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 88))), Reg EBX 4
bdb6: XOR Reg EBX, Reg EBX 2
bdb8: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 80))), Reg RAX 5
bdbd: CALL do_sysctl_save (internal)
  |
  `- b710
bdc2: TEST Reg EAX, Reg EAX 2
bdc4: JNS be10 (resolved immediate)
  |
  `- bdc6,be10
bdc6: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
bdcb: MOV Reg RAX, Reg RSP 3
bdce: MOV Reg RDI, Reg RBP 3
bdd1: TEST Reg RSI, Reg RSI 3
bdd4: CMOVZ Reg RSI, Reg RAX 4
bdd8: CALL xc__hypercall_buffer_free (external)
bddd: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 184))) 8
bde5: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
bdee: MOV Reg RAX, Reg RBX 3
bdf1: JNZ be73 (resolved immediate)
  |
  `- bdf7,be73
bdf7: ADD Reg RSP, Immediate 192 7
bdfe: POP Reg RBX 1
bdff: POP Reg RBP 1
be00: POP Reg R12 2
be02: POP Reg R13 2
be04: POP Reg R14 2
be06: RET  1
  |
  `- 
be10: MOV Reg RDI, Reg RBP 3
be13: CALL xc_cpumap_alloc (external)
be18: TEST Reg RAX, Reg RAX 3
be1b: MOV Reg RBX, Reg RAX 3
be1e: JZ bdc6 (resolved immediate)
  |
  `- bdc6,be20
be20: MOV Reg RDX, Reg R12 3
be23: MOV Reg RSI, Reg R13 3
be26: MOV Reg RDI, Reg RAX 3
be29: CALL memcpy (external)
be2e: JMP bdc6 (resolved immediate)
  |
  `- bdc6
be30: XOR Reg EBX, Reg EBX 2
be32: JMP bddd (resolved immediate)
  |
  `- bddd
be38: CALL __errno_location (external)
be3d: MOV Reg R12D, Address (SizeDir 32 (FromReg RAX)) 3
be40: MOV Reg RBX, Reg RAX 3
be43: MOV Reg RDI, Reg RBP 3
be46: MOV Reg ESI, Reg R12D 3
be49: CALL xc_strerror (external)
be4e: MOV Reg ECX, Address (SizeDir 32 (FromReg RBX)) 2
be50: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 103545)) 7
be57: MOV Reg R8, Reg RAX 3
be5a: MOV Reg ESI, Immediate 1 5
be5f: MOV Reg RDI, Reg RBP 3
be62: XOR Reg EAX, Reg EAX 2
be64: CALL xc_report_error (external)
be69: MOV Address (SizeDir 32 (FromReg RBX)), Reg R12D 3
be6c: XOR Reg EBX, Reg EBX 2
be6e: JMP bddd (resolved immediate)
  |
  `- bddd
be73: CALL __stack_chk_fail (external)
  |
  `- 
