Number of assembly instructions     = 85
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 85
Number of edges: 87

be80 (True): 1036f
10350 (False): 0

be80: PUSH Reg R15 2
be82: PXOR Reg XMM0, Reg XMM0 4
be86: PUSH Reg R14 2
be88: PUSH Reg R13 2
be8a: MOV Reg R14D, Reg EDX 3
be8d: PUSH Reg R12 2
be8f: PUSH Reg RBP 1
be90: MOV Reg R13, Reg RDI 3
be93: PUSH Reg RBX 1
be94: MOV Reg R15D, Reg ESI 3
be97: MOV Reg R12, Reg R8 3
be9a: MOV Reg RBP, Reg R9 3
be9d: SUB Reg RSP, Immediate 72 4
bea1: MOVUPS Address (SizeDir 128 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg XMM0 5
bea6: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 48))), Reg DX 5
beab: LEA Reg RDX, Address (AddrPlus (FromReg RSP) (AddrImm 16)) 5
beb0: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg RCX 5
beb5: MOV Reg ECX, Immediate 40 5
beba: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
bec3: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg RAX 5
bec8: XOR Reg EAX, Reg EAX 2
beca: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 128))) 8
bed2: MOVUPS Address (SizeDir 128 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg XMM0 5
bed7: CALL do_memory_op (external)
bedc: TEST Reg EAX, Reg EAX 2
bede: JS bf30 (resolved immediate)
  |
  `- bee0,bf30
bee0: XOR Reg EAX, Reg EAX 2
bee2: TEST Reg R12, Reg R12 3
bee5: JZ bef0 (resolved immediate)
  |
  `- bee7,bef0
bee7: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
beec: MOV Address (SizeDir 64 (FromReg R12)), Reg RDX 4
bef0: TEST Reg RBP, Reg RBP 3
bef3: JZ befe (resolved immediate)
  |
  `- bef5,befe
bef5: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))) 5
befa: MOV Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 0))), Reg RDX 4
befe: TEST Reg RBX, Reg RBX 3
bf01: JZ bf0b (resolved immediate)
  |
  `- bf03,bf0b
bf03: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
bf08: MOV Address (SizeDir 64 (FromReg RBX)), Reg RDX 3
bf0b: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
bf10: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
bf19: JNZ bf92 (resolved immediate)
  |
  `- bf1b,bf92
bf1b: ADD Reg RSP, Immediate 72 4
bf1f: POP Reg RBX 1
bf20: POP Reg RBP 1
bf21: POP Reg R12 2
bf23: POP Reg R13 2
bf25: POP Reg R14 2
bf27: POP Reg R15 2
bf29: RET  1
  |
  `- 
bf30: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
bf35: CALL __errno_location (external)
bf3a: LEA Reg R9, Address (AddrPlus (FromReg RIP) (AddrImm 103378)) 7
bf41: MOV Address (SizeDir 64 (FromReg RSP)), Reg RAX 4
bf45: LEA Reg RAX, Address (AddrPlus (FromReg RIP) (AddrImm 103371)) 7
bf4c: CMP Reg R15D, Immediate 16 4
bf50: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg R13) (AddrImm 8))) 4
bf54: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 103360)) 7
bf5b: CMOVNZ Reg R9, Reg RAX 4
bf5f: SUB Reg RSP, Immediate 8 4
bf63: MOV Reg EDX, Immediate 3 5
bf68: PUSH Reg R14 2
bf6a: XOR Reg EAX, Reg EAX 2
bf6c: XOR Reg ECX, Reg ECX 2
bf6e: MOV Reg RDI, Reg R13 3
bf71: CALL xc_report (external)
bf76: MOV Reg R10, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
bf7b: MOV Reg R11, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
bf80: NEG Reg R10D 3
bf83: MOV Address (SizeDir 32 (FromReg R11)), Reg R10D 3
bf86: POP Reg RAX 1
bf87: MOV Reg EAX, Immediate 4294967295 5
bf8c: POP Reg RDX 1
bf8d: JMP bee2 (resolved immediate)
  |
  `- bee2
bf92: CALL __stack_chk_fail (external)
  |
  `- 
10350: SUB Reg RSP, Immediate 16 4
10354: MOV Reg R9, Reg RCX 3
10357: MOV Reg RCX, Immediate 18446744073709551615 7
1035e: PUSH Reg R8 2
10360: MOV Reg R8, Reg RDX 3
10363: MOV Reg EDX, Reg ESI 2
10365: MOV Reg ESI, Immediate 17 5
1036a: CALL xc_domain_pod_target (internal)
  |
  `- be80
1036f: ADD Reg RSP, Immediate 24 4
10373: RET  1
  |
  `- 
