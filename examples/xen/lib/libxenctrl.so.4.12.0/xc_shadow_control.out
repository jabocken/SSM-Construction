Number of assembly instructions     = 114
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 114
Number of edges: 121

ebc0 (False): 0

ebc0: PUSH Reg R15 2
ebc2: PUSH Reg R14 2
ebc4: MOV Reg R10, Reg RCX 3
ebc7: PUSH Reg R13 2
ebc9: PUSH Reg R12 2
ebcb: MOV Reg ECX, Immediate 17 5
ebd0: PUSH Reg RBP 1
ebd1: PUSH Reg RBX 1
ebd2: MOV Reg RBX, Reg R9 3
ebd5: MOV Reg RBP, Reg RDI 3
ebd8: SUB Reg RSP, Immediate 216 7
ebdf: LEA Reg R9, Address (AddrPlus (FromReg RSP) (AddrImm 48)) 5
ebe4: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 52))), Immediate 0 9
ebed: MOV Reg R13, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 280))) 8
ebf5: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
ebfe: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))), Reg RAX 8
ec06: XOR Reg EAX, Reg EAX 2
ec08: LEA Reg RDI, Address (AddrPlus (FromReg R9) (AddrImm 8)) 4
ec0c: TEST Reg RBX, Reg RBX 3
ec0f: MOV Address (SizeDir 64 (AddrPlus (FromReg R9) (AddrImm 136))), Immediate 0 11
ec1a: REP STOSQ  3
ec1d: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 10 8
ec25: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg SI 5
ec2a: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 64))), Reg EDX 4
ec2e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 88))), Reg R8 5
ec33: JZ ec37 (resolved immediate)
  |
  `- ec35,ec37
ec35: MOV Reg EAX, Address (SizeDir 32 (FromReg RBX)) 2
ec37: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 72))), Reg EAX 4
ec3b: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 272))) 7
ec42: TEST Reg R10, Reg R10 3
ec45: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 68))), Reg EAX 4
ec49: JZ ec53 (resolved immediate)
  |
  `- ec4b,ec53
ec4b: MOV Reg RAX, Address (SizeDir 64 (FromReg R10)) 3
ec4e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 80))), Reg RAX 5
ec53: MOV Reg R12, Reg RSP 3
ec56: MOV Reg RDI, Reg RBP 3
ec59: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
ec61: MOV Reg RSI, Reg R12 3
ec64: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
ec6d: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 3 8
ec75: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg R9 5
ec7a: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 144 9
ec83: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 52))), Immediate 17 8
ec8b: CALL xc__hypercall_bounce_pre (external)
ec90: TEST Reg EAX, Reg EAX 2
ec92: JNZ ed58 (resolved immediate)
  |
  `- ec98,ed58
ec98: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
ec9d: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 1088))) 7
eca4: MOV Reg ESI, Immediate 36 5
eca9: TEST Reg RAX, Reg RAX 3
ecac: CMOVZ Reg RAX, Reg R12 4
ecb0: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
ecb3: CALL xencall1 (external)
ecb8: TEST Reg EAX, Reg EAX 2
ecba: MOV Reg R14D, Reg EAX 3
ecbd: JNS eccc (resolved immediate)
  |
  `- ecbf,eccc
ecbf: CALL __errno_location (external)
ecc4: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
ecc7: MOV Reg R15, Reg RAX 3
ecca: JZ ed30 (resolved immediate)
  |
  `- eccc,ed30
eccc: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
ecd1: MOV Reg RDI, Reg RBP 3
ecd4: TEST Reg RSI, Reg RSI 3
ecd7: CMOVZ Reg RSI, Reg R12 4
ecdb: CALL xc__hypercall_bounce_post (external)
ece0: TEST Reg R13, Reg R13 3
ece3: JZ ecee (resolved immediate)
  |
  `- ece5,ecee
ece5: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 96))) 5
ecea: MOV Address (SizeDir 64 (AddrPlus (FromReg R13) (AddrImm 0))), Reg RAX 4
ecee: TEST Reg RBX, Reg RBX 3
ecf1: JZ ecfa (resolved immediate)
  |
  `- ecf3,ecfa
ecf3: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 72))) 4
ecf7: MOV Address (SizeDir 64 (FromReg RBX)), Reg RAX 3
ecfa: TEST Reg R14D, Reg R14D 3
ecfd: JNZ ed04 (resolved immediate)
  |
  `- ecff,ed04
ecff: MOV Reg R14D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 88))) 5
ed04: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))) 8
ed0c: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
ed15: MOV Reg EAX, Reg R14D 3
ed18: JNZ ed9a (resolved immediate)
  |
  `- ed1e,ed9a
ed1e: ADD Reg RSP, Immediate 216 7
ed25: POP Reg RBX 1
ed26: POP Reg RBP 1
ed27: POP Reg R12 2
ed29: POP Reg R13 2
ed2b: POP Reg R14 2
ed2d: POP Reg R15 2
ed2f: RET  1
  |
  `- 
ed30: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 8))) 4
ed34: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 91749)) 7
ed3b: XOR Reg ECX, Reg ECX 2
ed3d: MOV Reg EDX, Immediate 3 5
ed42: MOV Reg RDI, Reg RBP 3
ed45: XOR Reg EAX, Reg EAX 2
ed47: CALL xc_report (external)
ed4c: MOV Address (SizeDir 32 (FromReg R15)), Immediate 13 7
ed53: JMP eccc (resolved immediate)
  |
  `- eccc
ed58: CALL __errno_location (external)
ed5d: MOV Reg R14D, Address (SizeDir 32 (FromReg RAX)) 3
ed60: MOV Reg R12, Reg RAX 3
ed63: MOV Reg RDI, Reg RBP 3
ed66: MOV Reg ESI, Reg R14D 3
ed69: CALL xc_strerror (external)
ed6e: MOV Reg ECX, Address (SizeDir 32 (FromReg R12)) 4
ed72: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 91631)) 7
ed79: MOV Reg R8, Reg RAX 3
ed7c: MOV Reg ESI, Immediate 1 5
ed81: MOV Reg RDI, Reg RBP 3
ed84: XOR Reg EAX, Reg EAX 2
ed86: CALL xc_report_error (external)
ed8b: MOV Address (SizeDir 32 (FromReg R12)), Reg R14D 4
ed8f: MOV Reg R14D, Immediate 4294967295 6
ed95: JMP ece0 (resolved immediate)
  |
  `- ece0
ed9a: CALL __stack_chk_fail (external)
  |
  `- 
