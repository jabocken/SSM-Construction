Number of assembly instructions     = 152
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 152
Number of edges: 156

cd40 (False): 0

cd40: PUSH Reg R15 2
cd42: PUSH Reg R14 2
cd44: MOV Reg R15D, Reg ESI 3
cd47: PUSH Reg R13 2
cd49: PUSH Reg R12 2
cd4b: PUSH Reg RBP 1
cd4c: PUSH Reg RBX 1
cd4d: MOV Reg RBP, Immediate 18446744073709551615 7
cd54: MOV Reg RBX, Reg RDI 3
cd57: SUB Reg RSP, Immediate 280 7
cd5e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
cd67: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 264))), Reg RAX 8
cd6f: XOR Reg EAX, Reg EAX 2
cd71: MOV Address (SizeDir 64 (FromReg RSP)), Reg RDX 4
cd75: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 0 9
cd7e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Immediate 0 9
cd87: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 8
cd8f: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg RBP 5
cd94: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 0 9
cd9d: CALL xc_get_nodemap_size (external)
cda2: TEST Reg EAX, Reg EAX 2
cda4: JLE cf76 (resolved immediate)
  |
  `- cdaa,cf76
cdaa: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
cdaf: LEA Reg R8, Address (AddrPlus (FromReg RSP) (AddrImm 16)) 5
cdb4: MOVSXD Reg R13, Reg EAX 3
cdb7: MOV Reg RDX, Reg R13 3
cdba: MOV Reg RDI, Reg RBX 3
cdbd: MOV Reg R14D, Reg EAX 3
cdc0: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg R8 5
cdc5: TEST Reg RSI, Reg RSI 3
cdc8: CMOVZ Reg RSI, Reg R8 4
cdcc: CALL xc__hypercall_buffer_alloc (external)
cdd1: TEST Reg RAX, Reg RAX 3
cdd4: MOV Reg R12, Reg RAX 3
cdd7: MOV Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
cddc: JZ cfb2 (resolved immediate)
  |
  `- cde2,cfb2
cde2: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
cde7: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 120))), Reg R15W 6
cded: LEA Reg R15, Address (AddrPlus (FromReg RSP) (AddrImm 64)) 5
cdf2: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 112))), Immediate 69 8
cdfa: LEA Reg ECX, Address (AddrPlus (AddrTimes (AddrImm 8) (FromReg R14)) (AddrImm 0)) 8
ce02: MOV Reg RDI, Reg RBX 3
ce05: MOV Reg RSI, Reg R15 3
ce08: TEST Reg RAX, Reg RAX 3
ce0b: CMOVZ Reg RAX, Reg R8 4
ce0f: MOV Reg RAX, Address (SizeDir 64 (FromReg RAX)) 3
ce12: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 136))), Reg ECX 7
ce19: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 64))), Immediate 0 9
ce22: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))), Immediate 0 9
ce2b: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 80))), Immediate 3 8
ce33: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 96))), Immediate 144 9
ce3c: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 128))), Reg RAX 8
ce44: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 112)) 5
ce49: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 116))), Immediate 17 8
ce51: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 88))), Reg RAX 5
ce56: CALL xc__hypercall_bounce_pre (external)
ce5b: TEST Reg EAX, Reg EAX 2
ce5d: JNZ cf32 (resolved immediate)
  |
  `- ce63,cf32
ce63: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))) 5
ce68: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
ce6f: MOV Reg ESI, Immediate 36 5
ce74: TEST Reg RAX, Reg RAX 3
ce77: CMOVZ Reg RAX, Reg R15 4
ce7b: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
ce7e: CALL xencall1 (external)
ce83: TEST Reg EAX, Reg EAX 2
ce85: MOV Reg EBP, Reg EAX 2
ce87: JNS ce93 (resolved immediate)
  |
  `- ce89,ce93
ce89: CALL __errno_location (external)
ce8e: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
ce91: JZ cf00 (resolved immediate)
  |
  `- ce93,cf00
ce93: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))) 5
ce98: MOV Reg RDI, Reg RBX 3
ce9b: TEST Reg RSI, Reg RSI 3
ce9e: CMOVZ Reg RSI, Reg R15 4
cea2: CALL xc__hypercall_bounce_post (external)
cea7: MOV Reg RDI, Address (SizeDir 64 (FromReg RSP)) 4
ceab: MOV Reg RSI, Reg R12 3
ceae: MOV Reg RDX, Reg R13 3
ceb1: CALL memcpy (external)
ceb6: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
cebb: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 16)) 5
cec0: MOV Reg RDI, Reg RBX 3
cec3: TEST Reg RSI, Reg RSI 3
cec6: CMOVZ Reg RSI, Reg RAX 4
ceca: CALL xc__hypercall_buffer_free (external)
cecf: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 264))) 8
ced7: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
cee0: MOV Reg EAX, Reg EBP 2
cee2: JNZ cfd8 (resolved immediate)
  |
  `- cee8,cfd8
cee8: ADD Reg RSP, Immediate 280 7
ceef: POP Reg RBX 1
cef0: POP Reg RBP 1
cef1: POP Reg R12 2
cef3: POP Reg R13 2
cef5: POP Reg R14 2
cef7: POP Reg R15 2
cef9: RET  1
  |
  `- 
cf00: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
cf04: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 99477)) 7
cf0b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
cf10: XOR Reg ECX, Reg ECX 2
cf12: MOV Reg EDX, Immediate 3 5
cf17: MOV Reg RDI, Reg RBX 3
cf1a: XOR Reg EAX, Reg EAX 2
cf1c: CALL xc_report (external)
cf21: MOV Reg R9, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
cf26: MOV Address (SizeDir 32 (FromReg R9)), Immediate 13 7
cf2d: JMP ce93 (resolved immediate)
  |
  `- ce93
cf32: CALL __errno_location (external)
cf37: MOV Reg R9D, Address (SizeDir 32 (FromReg RAX)) 3
cf3a: MOV Reg R15, Reg RAX 3
cf3d: MOV Reg RDI, Reg RBX 3
cf40: MOV Reg ESI, Reg R9D 3
cf43: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg R9D 5
cf48: CALL xc_strerror (external)
cf4d: MOV Reg ECX, Address (SizeDir 32 (FromReg R15)) 3
cf50: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 99345)) 7
cf57: MOV Reg R8, Reg RAX 3
cf5a: MOV Reg ESI, Immediate 1 5
cf5f: MOV Reg RDI, Reg RBX 3
cf62: XOR Reg EAX, Reg EAX 2
cf64: CALL xc_report_error (external)
cf69: MOV Reg R9D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
cf6e: MOV Address (SizeDir 32 (FromReg R15)), Reg R9D 3
cf71: JMP cea7 (resolved immediate)
  |
  `- cea7
cf76: CALL __errno_location (external)
cf7b: MOV Reg R13D, Address (SizeDir 32 (FromReg RAX)) 3
cf7e: MOV Reg R12, Reg RAX 3
cf81: MOV Reg RDI, Reg RBX 3
cf84: MOV Reg ESI, Reg R13D 3
cf87: CALL xc_strerror (external)
cf8c: MOV Reg ECX, Address (SizeDir 32 (FromReg R12)) 4
cf90: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 99481)) 7
cf97: MOV Reg R8, Reg RAX 3
cf9a: MOV Reg ESI, Immediate 1 5
cf9f: MOV Reg RDI, Reg RBX 3
cfa2: XOR Reg EAX, Reg EAX 2
cfa4: CALL xc_report_error (external)
cfa9: MOV Address (SizeDir 32 (FromReg R12)), Reg R13D 4
cfad: JMP cecf (resolved immediate)
  |
  `- cecf
cfb2: CALL __errno_location (external)
cfb7: MOV Reg R13D, Address (SizeDir 32 (FromReg RAX)) 3
cfba: MOV Reg R12, Reg RAX 3
cfbd: MOV Reg RDI, Reg RBX 3
cfc0: MOV Reg ESI, Reg R13D 3
cfc3: CALL xc_strerror (external)
cfc8: MOV Reg ECX, Address (SizeDir 32 (FromReg R12)) 4
cfcc: MOV Reg R8, Reg RAX 3
cfcf: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 99538)) 7
cfd6: JMP cf9a (resolved immediate)
  |
  `- cf9a
cfd8: CALL __stack_chk_fail (external)
  |
  `- 
