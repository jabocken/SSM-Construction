Number of assembly instructions     = 80
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 80
Number of edges: 82

f250 (False): 0

f250: PUSH Reg R13 2
f252: PUSH Reg R12 2
f254: MOVSXD Reg RDX, Reg EDX 3
f257: PUSH Reg RBP 1
f258: PUSH Reg RBX 1
f259: MOV Reg RBX, Reg RDI 3
f25c: SUB Reg RSP, Immediate 216 7
f263: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
f26c: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))), Reg RAX 8
f274: XOR Reg EAX, Reg EAX 2
f276: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 48)) 5
f27b: MOV Reg RBP, Reg RSP 3
f27e: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg SI 5
f283: MOV Reg RSI, Reg RBP 3
f286: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 64))), Reg RDX 5
f28b: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
f293: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
f298: MOV Reg RAX, Immediate 73014444056 10
f2a2: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
f2ab: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 3 8
f2b3: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 144 9
f2bc: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Reg RAX 5
f2c1: CALL xc__hypercall_bounce_pre (external)
f2c6: TEST Reg EAX, Reg EAX 2
f2c8: JNZ f366 (resolved immediate)
  |
  `- f2ce,f366
f2ce: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
f2d3: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
f2da: MOV Reg ESI, Immediate 36 5
f2df: TEST Reg RAX, Reg RAX 3
f2e2: CMOVZ Reg RAX, Reg RBP 4
f2e6: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
f2e9: CALL xencall1 (external)
f2ee: TEST Reg EAX, Reg EAX 2
f2f0: MOV Reg R12D, Reg EAX 3
f2f3: JNS f302 (resolved immediate)
  |
  `- f2f5,f302
f2f5: CALL __errno_location (external)
f2fa: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
f2fd: MOV Reg R13, Reg RAX 3
f300: JZ f340 (resolved immediate)
  |
  `- f302,f340
f302: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
f307: MOV Reg RDI, Reg RBX 3
f30a: TEST Reg RSI, Reg RSI 3
f30d: CMOVZ Reg RSI, Reg RBP 4
f311: CALL xc__hypercall_bounce_post (external)
f316: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 200))) 8
f31e: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
f327: MOV Reg EAX, Reg R12D 3
f32a: JNZ f3a7 (resolved immediate)
  |
  `- f32c,f3a7
f32c: ADD Reg RSP, Immediate 216 7
f333: POP Reg RBX 1
f334: POP Reg RBP 1
f335: POP Reg R12 2
f337: POP Reg R13 2
f339: RET  1
  |
  `- 
f340: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
f344: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 90197)) 7
f34b: XOR Reg ECX, Reg ECX 2
f34d: MOV Reg EDX, Immediate 3 5
f352: MOV Reg RDI, Reg RBX 3
f355: XOR Reg EAX, Reg EAX 2
f357: CALL xc_report (external)
f35c: MOV Address (SizeDir 32 (AddrPlus (FromReg R13) (AddrImm 0))), Immediate 13 8
f364: JMP f302 (resolved immediate)
  |
  `- f302
f366: CALL __errno_location (external)
f36b: MOV Reg R12D, Address (SizeDir 32 (FromReg RAX)) 3
f36e: MOV Reg RBP, Reg RAX 3
f371: MOV Reg RDI, Reg RBX 3
f374: MOV Reg ESI, Reg R12D 3
f377: CALL xc_strerror (external)
f37c: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))) 3
f37f: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 90082)) 7
f386: MOV Reg R8, Reg RAX 3
f389: MOV Reg ESI, Immediate 1 5
f38e: MOV Reg RDI, Reg RBX 3
f391: XOR Reg EAX, Reg EAX 2
f393: CALL xc_report_error (external)
f398: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))), Reg R12D 4
f39c: MOV Reg R12D, Immediate 4294967295 6
f3a2: JMP f316 (resolved immediate)
  |
  `- f316
f3a7: CALL __stack_chk_fail (external)
  |
  `- 
