Number of assembly instructions     = 114
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 114
Number of edges: 118

dfc0 (False): 0

dfc0: PUSH Reg R14 2
dfc2: PUSH Reg R13 2
dfc4: MOV Reg R13D, Reg ESI 3
dfc7: PUSH Reg R12 2
dfc9: PUSH Reg RBP 1
dfca: MOV Reg R12D, Reg ECX 3
dfcd: PUSH Reg RBX 1
dfce: MOV Reg RBX, Reg RDI 3
dfd1: SUB Reg RSP, Immediate 256 7
dfd8: MOV Reg RBP, Reg RSP 3
dfdb: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
dfe3: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
dfec: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
dff5: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 248))), Reg RAX 8
dffd: XOR Reg EAX, Reg EAX 2
dfff: MOV Reg RSI, Reg RBP 3
e002: MOV Reg EAX, Reg ECX 2
e004: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 2 8
e00c: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RDX 5
e011: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Reg RAX 5
e016: CALL xc__hypercall_bounce_pre (external)
e01b: TEST Reg EAX, Reg EAX 2
e01d: JNZ e1a1 (resolved immediate)
  |
  `- e023,e1a1
e023: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
e028: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 112))), Reg R12D 5
e02d: LEA Reg R12, Address (AddrPlus (FromReg RSP) (AddrImm 48)) 5
e032: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 96))), Immediate 33 8
e03a: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 104))), Reg R13W 6
e040: MOV Reg RDI, Reg RBX 3
e043: MOV Reg RSI, Reg R12 3
e046: TEST Reg RAX, Reg RAX 3
e049: CMOVZ Reg RAX, Reg RBP 4
e04d: MOV Reg RAX, Address (SizeDir 64 (FromReg RAX)) 3
e050: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 0 9
e059: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))), Immediate 0 9
e062: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 64))), Immediate 3 8
e06a: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 80))), Immediate 144 9
e073: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 100))), Immediate 17 8
e07b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 120))), Reg RAX 5
e080: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 96)) 5
e085: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))), Reg RAX 5
e08a: CALL xc__hypercall_bounce_pre (external)
e08f: TEST Reg EAX, Reg EAX 2
e091: JNZ e158 (resolved immediate)
  |
  `- e097,e158
e097: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e09c: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
e0a3: MOV Reg ESI, Immediate 36 5
e0a8: TEST Reg RAX, Reg RAX 3
e0ab: CMOVZ Reg RAX, Reg R12 4
e0af: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
e0b2: CALL xencall1 (external)
e0b7: TEST Reg EAX, Reg EAX 2
e0b9: MOV Reg R13D, Reg EAX 3
e0bc: JNS e0cb (resolved immediate)
  |
  `- e0be,e0cb
e0be: CALL __errno_location (external)
e0c3: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
e0c6: MOV Reg R14, Reg RAX 3
e0c9: JZ e130 (resolved immediate)
  |
  `- e0cb,e130
e0cb: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e0d0: MOV Reg RDI, Reg RBX 3
e0d3: TEST Reg RSI, Reg RSI 3
e0d6: CMOVZ Reg RSI, Reg R12 4
e0da: CALL xc__hypercall_bounce_post (external)
e0df: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
e0e4: MOV Reg RDI, Reg RBX 3
e0e7: TEST Reg RSI, Reg RSI 3
e0ea: CMOVZ Reg RSI, Reg RBP 4
e0ee: CALL xc__hypercall_bounce_post (external)
e0f3: TEST Reg R13D, Reg R13D 3
e0f6: JS e1a1 (resolved immediate)
  |
  `- e0fc,e1a1
e0fc: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 112))) 4
e100: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 248))) 8
e108: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
e111: JNZ e1b8 (resolved immediate)
  |
  `- e117,e1b8
e117: ADD Reg RSP, Immediate 256 7
e11e: POP Reg RBX 1
e11f: POP Reg RBP 1
e120: POP Reg R12 2
e122: POP Reg R13 2
e124: POP Reg R14 2
e126: RET  1
  |
  `- 
e130: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
e134: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 94821)) 7
e13b: XOR Reg ECX, Reg ECX 2
e13d: MOV Reg EDX, Immediate 3 5
e142: MOV Reg RDI, Reg RBX 3
e145: XOR Reg EAX, Reg EAX 2
e147: CALL xc_report (external)
e14c: MOV Address (SizeDir 32 (FromReg R14)), Immediate 13 7
e153: JMP e0cb (resolved immediate)
  |
  `- e0cb
e158: CALL __errno_location (external)
e15d: MOV Reg R13D, Address (SizeDir 32 (FromReg RAX)) 3
e160: MOV Reg R12, Reg RAX 3
e163: MOV Reg RDI, Reg RBX 3
e166: MOV Reg ESI, Reg R13D 3
e169: CALL xc_strerror (external)
e16e: MOV Reg ECX, Address (SizeDir 32 (FromReg R12)) 4
e172: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 94703)) 7
e179: MOV Reg R8, Reg RAX 3
e17c: MOV Reg ESI, Immediate 1 5
e181: XOR Reg EAX, Reg EAX 2
e183: MOV Reg RDI, Reg RBX 3
e186: CALL xc_report_error (external)
e18b: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
e190: MOV Address (SizeDir 32 (FromReg R12)), Reg R13D 4
e194: TEST Reg RSI, Reg RSI 3
e197: JZ e1ab (resolved immediate)
  |
  `- e1ab
e1a1: MOV Reg EAX, Immediate 4294967295 5
e1a6: JMP e100 (resolved immediate)
  |
  `- e100
e1ab: MOV Reg RSI, Reg RBP 3
e1ae: MOV Reg RDI, Reg RBX 3
e1b1: CALL xc__hypercall_bounce_post (external)
e1b6: JMP e1a1 (resolved immediate)
  |
  `- e1a1
e1b8: CALL __stack_chk_fail (external)
  |
  `- 
