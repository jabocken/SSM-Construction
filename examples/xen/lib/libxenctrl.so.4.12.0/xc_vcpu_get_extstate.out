Number of assembly instructions     = 169
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 169
Number of edges: 179

e7a0 (False): 0

e7a0: PUSH Reg R15 2
e7a2: PUSH Reg R14 2
e7a4: PUSH Reg R13 2
e7a6: PUSH Reg R12 2
e7a8: PUSH Reg RBP 1
e7a9: PUSH Reg RBX 1
e7aa: SUB Reg RSP, Immediate 264 7
e7b1: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
e7ba: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 248))), Reg RAX 8
e7c2: XOR Reg EAX, Reg EAX 2
e7c4: TEST Reg RCX, Reg RCX 3
e7c7: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
e7cf: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
e7d8: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Immediate 0 8
e7e0: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Immediate 18446744073709551615 9
e7e9: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 9
e7f2: JE ea96 (resolved immediate)
  |
  `- e7f8,ea96
e7f8: MOVZX Reg EAX, Reg DX 3
e7fb: MOV Reg R12, Address (SizeDir 64 (AddrPlus (FromReg RCX) (AddrImm 8))) 4
e7ff: MOV Reg RBX, Reg RDI 3
e802: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 112))), Reg EAX 4
e806: MOV Reg RAX, Address (SizeDir 64 (FromReg RCX)) 3
e809: MOV Reg R13D, Reg EDX 3
e80c: MOV Reg RBP, Reg RCX 3
e80f: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 96))), Immediate 63 8
e817: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 104))), Reg SI 5
e81c: TEST Reg R12, Reg R12 3
e81f: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 128))), Reg R12 8
e827: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 120))), Reg RAX 5
e82c: JNE e920 (resolved immediate)
  |
  `- e832,e920
e832: XOR Reg R14D, Reg R14D 3
e835: LEA Reg R13, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
e83a: LEA Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 96))) 5
e83f: MOV Reg RDI, Reg RBX 3
e842: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 0 9
e84b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))), Immediate 0 9
e854: MOV Reg RSI, Reg R13 3
e857: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 64))), Immediate 3 8
e85f: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))), Reg RAX 5
e864: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 80))), Immediate 144 9
e86d: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 100))), Immediate 17 8
e875: CALL xc__hypercall_bounce_pre (external)
e87a: TEST Reg EAX, Reg EAX 2
e87c: JNE ea55 (resolved immediate)
  |
  `- e882,ea55
e882: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e887: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1088))) 7
e88e: MOV Reg ESI, Immediate 36 5
e893: TEST Reg RAX, Reg RAX 3
e896: CMOVE Reg RAX, Reg R13 4
e89a: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
e89d: CALL xencall1 (external)
e8a2: TEST Reg EAX, Reg EAX 2
e8a4: MOV Reg R15D, Reg EAX 3
e8a7: JNS e9a0 (resolved immediate)
  |
  `- e8ad,e9a0
e8ad: CALL __errno_location (external)
e8b2: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 13 3
e8b5: MOV Reg RBP, Reg RAX 3
e8b8: JE e960 (resolved immediate)
  |
  `- e8be,e960
e8be: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e8c3: TEST Reg RSI, Reg RSI 3
e8c6: JE e998 (resolved immediate)
  |
  `- e998
e8cc: MOV Reg RDI, Reg RBX 3
e8cf: CALL xc__hypercall_bounce_post (external)
e8d4: TEST Reg R12, Reg R12 3
e8d7: JE e8f0 (resolved immediate)
  |
  `- e8d9,e8f0
e8d9: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
e8de: MOV Reg RAX, Reg RSP 3
e8e1: MOV Reg RDI, Reg RBX 3
e8e4: TEST Reg RSI, Reg RSI 3
e8e7: CMOVE Reg RSI, Reg RAX 4
e8eb: CALL xc__hypercall_buffer_free (external)
e8f0: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 248))) 8
e8f8: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
e901: MOV Reg EAX, Reg R15D 3
e904: JNE eaa1 (resolved immediate)
  |
  `- e90a,eaa1
e90a: ADD Reg RSP, Immediate 264 7
e911: POP Reg RBX 1
e912: POP Reg RBP 1
e913: POP Reg R12 2
e915: POP Reg R13 2
e917: POP Reg R14 2
e919: POP Reg R15 2
e91b: RET  1
  |
  `- 
e920: MOV Reg R15, Reg RSP 3
e923: MOV Reg RDX, Reg R12 3
e926: MOV Reg RSI, Reg R15 3
e929: CALL xc__hypercall_buffer_alloc (external)
e92e: TEST Reg RAX, Reg RAX 3
e931: MOV Reg R14, Reg RAX 3
e934: JE ea10 (resolved immediate)
  |
  `- e93a,ea10
e93a: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
e93f: TEST Reg RAX, Reg RAX 3
e942: CMOVE Reg RAX, Reg R15 4
e946: MOV Reg RAX, Address (SizeDir 64 (FromReg RAX)) 3
e949: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 136))), Reg RAX 8
e951: JMP e835 (resolved immediate)
  |
  `- e835
e960: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
e964: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 92725))) 7
e96b: XOR Reg ECX, Reg ECX 2
e96d: XOR Reg EAX, Reg EAX 2
e96f: MOV Reg EDX, Immediate 3 5
e974: MOV Reg RDI, Reg RBX 3
e977: CALL xc_report (external)
e97c: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e981: MOV Address (SizeDir 32 (FromReg RBP)), Immediate 13 7
e988: TEST Reg RSI, Reg RSI 3
e98b: JNE e8cc (resolved immediate)
e991: NOP  7
e998: MOV Reg RSI, Reg R13 3
e99b: JMP e8cc (resolved immediate)
  |
  `- e8cc
e9a0: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
e9a5: MOV Reg RDI, Reg RBX 3
e9a8: TEST Reg RSI, Reg RSI 3
e9ab: CMOVE Reg RSI, Reg R13 4
e9af: CALL xc__hypercall_bounce_post (external)
e9b4: TEST Reg R15D, Reg R15D 3
e9b7: JNE e8d4 (resolved immediate)
  |
  `- e8d4,e9bd
e9bd: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 8))) 4
e9c1: TEST Reg RDX, Reg RDX 3
e9c4: JNE e9f0 (resolved immediate)
  |
  `- e9c6,e9f0
e9c6: CMP Address (SizeDir 64 (FromReg RBP)), Immediate 0 5
e9cb: JNE e9f0 (resolved immediate)
  |
  `- e9cd,e9f0
e9cd: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 120))) 5
e9d2: MOV Address (SizeDir 64 (FromReg RBP)), Reg RAX 4
e9d6: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 128))) 8
e9de: MOV Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 8))), Reg RAX 4
e9e2: JMP e8d4 (resolved immediate)
  |
  `- e8d4
e9f0: TEST Reg R12, Reg R12 3
e9f3: JE e8f0 (resolved immediate)
  |
  `- e8f0,e9f9
e9f9: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 16))) 4
e9fd: MOV Reg RSI, Reg R14 3
ea00: CALL memcpy (external)
ea05: JMP e8d9 (resolved immediate)
  |
  `- e8d9
ea10: CALL __errno_location (external)
ea15: MOV Reg R12D, Address (SizeDir 32 (FromReg RAX)) 3
ea18: MOV Reg RBP, Reg RAX 3
ea1b: MOV Reg RDI, Reg RBX 3
ea1e: MOV Reg R15D, Immediate 4294967284 6
ea24: MOV Reg ESI, Reg R12D 3
ea27: CALL xc_strerror (external)
ea2c: MOV Reg R8D, Address (SizeDir 32 (FromReg RBP)) 4
ea30: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 93009))) 7
ea37: MOV Reg R9, Reg RAX 3
ea3a: MOV Reg ECX, Reg R13D 3
ea3d: MOV Reg ESI, Immediate 1 5
ea42: MOV Reg RDI, Reg RBX 3
ea45: XOR Reg EAX, Reg EAX 2
ea47: CALL xc_report_error (external)
ea4c: MOV Address (SizeDir 32 (FromReg RBP)), Reg R12D 4
ea50: JMP e8d9 (resolved immediate)
  |
  `- e8d9
ea55: CALL __errno_location (external)
ea5a: MOV Reg R13D, Address (SizeDir 32 (FromReg RAX)) 3
ea5d: MOV Reg RBP, Reg RAX 3
ea60: MOV Reg RDI, Reg RBX 3
ea63: MOV Reg R15D, Immediate 4294967295 6
ea69: MOV Reg ESI, Reg R13D 3
ea6c: CALL xc_strerror (external)
ea71: MOV Reg ECX, Address (SizeDir 32 (FromReg RBP)) 3
ea74: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 92397))) 7
ea7b: MOV Reg R8, Reg RAX 3
ea7e: MOV Reg ESI, Immediate 1 5
ea83: MOV Reg RDI, Reg RBX 3
ea86: XOR Reg EAX, Reg EAX 2
ea88: CALL xc_report_error (external)
ea8d: MOV Address (SizeDir 32 (FromReg RBP)), Reg R13D 4
ea91: JMP e8d4 (resolved immediate)
  |
  `- e8d4
ea96: MOV Reg R15D, Immediate 4294967274 6
ea9c: JMP e8f0 (resolved immediate)
  |
  `- e8f0
eaa1: CALL __stack_chk_fail (external)
  |
  `- 
