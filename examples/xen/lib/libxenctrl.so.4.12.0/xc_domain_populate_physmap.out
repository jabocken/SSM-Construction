Number of assembly instructions     = 68
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 68
Number of edges: 68

ffe0 (False): 0

ffe0: PUSH Reg R12 2
ffe2: PUSH Reg RBP 1
ffe3: PUSH Reg RBX 1
ffe4: PXOR Reg XMM0, Reg XMM0 4
ffe8: MOV Reg RBX, Reg RDI 3
ffeb: SUB Reg RSP, Immediate 80 4
ffef: LEA Reg R12, Address (AddrPlus (FromReg RSP) (AddrImm 32)) 5
fff4: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 9
fffd: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Immediate 0 9
10006: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
1000f: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))), Reg RAX 5
10014: XOR Reg EAX, Reg EAX 2
10016: LEA Reg RAX, Address (AddrPlus (AddrTimes (AddrImm 8) (FromReg RDX)) (AddrImm 0)) 8
1001e: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 48))), Immediate 3 8
10026: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg R9 5
1002b: MOVAPS Address (SizeDir 128 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg XMM0 5
10030: MOV Address (SizeDir 16 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg SI 5
10035: MOV Reg RSI, Reg R12 3
10038: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 64))), Reg RAX 5
1003d: MOVAPS Address (SizeDir 128 (FromReg RSP)), Reg XMM0 4
10041: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg ECX 4
10045: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RDX 5
1004a: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))), Reg R8D 5
1004f: CALL xc__hypercall_bounce_pre (external)
10054: TEST Reg EAX, Reg EAX 2
10056: JNZ 100b1 (resolved immediate)
  |
  `- 10058,100b1
10058: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
1005d: MOV Reg ESI, Immediate 6 5
10062: MOV Reg RDI, Reg RBX 3
10065: MOV Reg RDX, Reg RSP 3
10068: MOV Reg ECX, Immediate 32 5
1006d: TEST Reg RAX, Reg RAX 3
10070: CMOVZ Reg RAX, Reg R12 4
10074: MOV Reg RAX, Address (SizeDir 64 (FromReg RAX)) 3
10077: MOV Address (SizeDir 64 (FromReg RSP)), Reg RAX 4
1007b: CALL do_memory_op (external)
10080: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
10085: MOV Reg RDI, Reg RBX 3
10088: MOV Reg EBP, Reg EAX 2
1008a: TEST Reg RSI, Reg RSI 3
1008d: CMOVZ Reg RSI, Reg R12 4
10091: CALL xc__hypercall_bounce_post (external)
10096: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 72))) 5
1009b: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
100a4: MOV Reg EAX, Reg EBP 2
100a6: JNZ 100ee (resolved immediate)
  |
  `- 100a8,100ee
100a8: ADD Reg RSP, Immediate 80 4
100ac: POP Reg RBX 1
100ad: POP Reg RBP 1
100ae: POP Reg R12 2
100b0: RET  1
  |
  `- 
100b1: CALL __errno_location (external)
100b6: MOV Reg R12D, Address (SizeDir 32 (FromReg RAX)) 3
100b9: MOV Reg RBP, Reg RAX 3
100bc: MOV Reg RDI, Reg RBX 3
100bf: MOV Reg ESI, Reg R12D 3
100c2: CALL xc_strerror (external)
100c7: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))) 3
100ca: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 87767)) 7
100d1: MOV Reg R8, Reg RAX 3
100d4: MOV Reg ESI, Immediate 1 5
100d9: MOV Reg RDI, Reg RBX 3
100dc: XOR Reg EAX, Reg EAX 2
100de: CALL xc_report_error (external)
100e3: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 0))), Reg R12D 4
100e7: MOV Reg EBP, Immediate 4294967295 5
100ec: JMP 10096 (resolved immediate)
  |
  `- 10096
100ee: CALL __stack_chk_fail (external)
  |
  `- 
