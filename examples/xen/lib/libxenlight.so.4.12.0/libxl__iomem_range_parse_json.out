Number of assembly instructions     = 99
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 99
Number of edges: 104

20500 (True): 41528
41490 (True): 7644e, 76479, 764a5
76430 (False): 0

20500: CMP Address (SizeDir 32 (FromReg RDI)), Reg ESI 2
20502: MOV Reg EAX, Immediate 1 5
20507: JLE 20519 (resolved immediate)
  |
  `- 20509,20519
20509: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
2050d: MOVSXD Reg RSI, Reg ESI 3
20510: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 8) (FromReg RSI)))) 4
20514: MOV Address (SizeDir 64 (FromReg RDX)), Reg RAX 3
20517: XOR Reg EAX, Reg EAX 2
20519: REPZ RET  2
  |
  `- 
41490: PUSH Reg R15 2
41492: PUSH Reg R14 2
41494: PUSH Reg R13 2
41496: PUSH Reg R12 2
41498: PUSH Reg RBP 1
41499: PUSH Reg RBX 1
4149a: SUB Reg RSP, Immediate 24 4
4149e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414a7: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
414ac: XOR Reg EAX, Reg EAX 2
414ae: TEST Reg RSI, Reg RSI 3
414b1: JZ 414b8 (resolved immediate)
  |
  `- 414b3,414b8
414b3: CMP Address (SizeDir 32 (FromReg RSI)), Immediate 64 3
414b6: JZ 414e0 (resolved immediate)
  |
  `- 414b8,414e0
414b8: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
414bd: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414c6: JNZ 4155b (resolved immediate)
  |
  `- 414cc,4155b
414cc: ADD Reg RSP, Immediate 24 4
414d0: POP Reg RBX 1
414d1: POP Reg RBP 1
414d2: POP Reg R12 2
414d4: POP Reg R13 2
414d6: POP Reg R14 2
414d8: POP Reg R15 2
414da: RET  1
  |
  `- 
414e0: MOV Reg RBP, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 8))) 4
414e4: XOR Reg EBX, Reg EBX 2
414e6: MOV Reg R13, Reg RDI 3
414e9: MOV Reg R14D, Reg EDX 3
414ec: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
414f4: MOV Reg R12, Reg RSP 3
414f7: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))) 3
414fa: TEST Reg EAX, Reg EAX 2
414fc: JNZ 4151b (resolved immediate)
  |
  `- 414fe,4151b
414fe: JMP 4152c (resolved immediate)
  |
  `- 4152c
4151b: MOV Reg RDX, Reg R12 3
4151e: MOV Reg ESI, Reg EBX 2
41520: MOV Reg RDI, Reg RBP 3
41523: CALL flexarray_get (internal)
  |
  `- 20500
41528: TEST Reg EAX, Reg EAX 2
4152a: JZ 41500 (resolved immediate)
4152c: XOR Reg EAX, Reg EAX 2
4152e: JMP 414b8 (resolved immediate)
  |
  `- 414b8
4155b: CALL __stack_chk_fail (external)
  |
  `- 
76430: PUSH Reg R12 2
76432: MOV Reg R12, Reg RDI 3
76435: PUSH Reg RBP 1
76436: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 153509)) 7
7643d: PUSH Reg RBX 1
7643e: MOV Reg RBP, Reg RDX 3
76441: MOV Reg EDX, Immediate 4 5
76446: MOV Reg RBX, Reg RSI 3
76449: CALL libxl__json_map_get (internal)
  |
  `- 41490
7644e: TEST Reg RAX, Reg RAX 3
76451: JZ 76465 (resolved immediate)
  |
  `- 76453,76465
76453: MOV Reg RDX, Reg RBP 3
76456: MOV Reg RSI, Reg RAX 3
76459: MOV Reg RDI, Reg R12 3
7645c: CALL libxl__uint64_parse_json (external)
76461: TEST Reg EAX, Reg EAX 2
76463: JNZ 764c0 (resolved immediate)
  |
  `- 76465,764c0
76465: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 150408)) 7
7646c: MOV Reg EDX, Immediate 4 5
76471: MOV Reg RSI, Reg RBX 3
76474: CALL libxl__json_map_get (internal)
76479: TEST Reg RAX, Reg RAX 3
7647c: JZ 76491 (resolved immediate)
  |
  `- 7647e,76491
7647e: LEA Reg RDX, Address (AddrPlus (FromReg RBP) (AddrImm 8)) 4
76482: MOV Reg RSI, Reg RAX 3
76485: MOV Reg RDI, Reg R12 3
76488: CALL libxl__uint64_parse_json (external)
7648d: TEST Reg EAX, Reg EAX 2
7648f: JNZ 764c0 (resolved immediate)
  |
  `- 76491,764c0
76491: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 197808)) 7
76498: MOV Reg EDX, Immediate 4 5
7649d: MOV Reg RSI, Reg RBX 3
764a0: CALL libxl__json_map_get (internal)
764a5: TEST Reg RAX, Reg RAX 3
764a8: JZ 764c0 (resolved immediate)
  |
  `- 764aa,764c0
764aa: POP Reg RBX 1
764ab: LEA Reg RDX, Address (AddrPlus (FromReg RBP) (AddrImm 16)) 4
764af: MOV Reg RDI, Reg R12 3
764b2: MOV Reg RSI, Reg RAX 3
764b5: POP Reg RBP 1
764b6: POP Reg R12 2
764b8: JMP libxl__uint64_parse_json (jmp to external function)
  |
  `- 
764c0: POP Reg RBX 1
764c1: POP Reg RBP 1
764c2: POP Reg R12 2
764c4: RET  1
  |
  `- 
