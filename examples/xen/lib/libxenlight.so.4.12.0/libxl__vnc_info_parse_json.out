Number of assembly instructions     = 123
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 123
Number of edges: 132

20500 (True): 41528
41490 (True): 766ae, 766dd, 7670d, 76739, 76765
76690 (False): 0

20500: CMP Address (SizeDir 32 (FromReg RDI)), Reg ESI 2
20502: MOV Reg EAX, Immediate 1 5
20507: JLE 20519 (resolved immediate)
  |
  `- 20509,20519
20509: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
2050d: MOVSXD Reg RSI, Reg ESI 3
20510: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 8) (FromReg RSI)))) 4
20514: MOV Address (SizeDir 64 (FromReg RDX)), Reg RAX 3
20517: XOR Reg EAX, Reg EAX 2
20519: RET  2
  |
  `- 
41490: PUSH Reg R15 2
41492: PUSH Reg R14 2
41494: PUSH Reg R13 2
41496: PUSH Reg R12 2
41498: PUSH Reg RBP 1
41499: PUSH Reg RBX 1
4149a: SUB Reg RSP, Immediate 24 4
4149e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414a7: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
414ac: XOR Reg EAX, Reg EAX 2
414ae: TEST Reg RSI, Reg RSI 3
414b1: JE 414b8 (resolved immediate)
  |
  `- 414b3,414b8
414b3: CMP Address (SizeDir 32 (FromReg RSI)), Immediate 64 3
414b6: JE 414e0 (resolved immediate)
  |
  `- 414b8,414e0
414b8: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
414bd: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414c6: JNE 4155b (resolved immediate)
  |
  `- 414cc,4155b
414cc: ADD Reg RSP, Immediate 24 4
414d0: POP Reg RBX 1
414d1: POP Reg RBP 1
414d2: POP Reg R12 2
414d4: POP Reg R13 2
414d6: POP Reg R14 2
414d8: POP Reg R15 2
414da: RET  1
  |
  `- 
414e0: MOV Reg RBP, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 8))) 4
414e4: XOR Reg EBX, Reg EBX 2
414e6: MOV Reg R13, Reg RDI 3
414e9: MOV Reg R14D, Reg EDX 3
414ec: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
414f4: MOV Reg R12, Reg RSP 3
414f7: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))) 3
414fa: TEST Reg EAX, Reg EAX 2
414fc: JNE 4151b (resolved immediate)
  |
  `- 414fe,4151b
414fe: JMP 4152c (resolved immediate)
  |
  `- 4152c
4151b: MOV Reg RDX, Reg R12 3
4151e: MOV Reg ESI, Reg EBX 2
41520: MOV Reg RDI, Reg RBP 3
41523: CALL flexarray_get (internal)
  |
  `- 20500
41528: TEST Reg EAX, Reg EAX 2
4152a: JE 41500 (resolved immediate)
4152c: XOR Reg EAX, Reg EAX 2
4152e: JMP 414b8 (resolved immediate)
  |
  `- 414b8
4155b: CALL __stack_chk_fail (external)
  |
  `- 
76690: PUSH Reg R12 2
76692: MOV Reg R12, Reg RDI 3
76695: PUSH Reg RBP 1
76696: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 175949))) 7
7669d: PUSH Reg RBX 1
7669e: MOV Reg RBP, Reg RDX 3
766a1: MOV Reg EDX, Immediate 32 5
766a6: MOV Reg RBX, Reg RSI 3
766a9: CALL libxl__json_map_get (internal)
  |
  `- 41490
766ae: TEST Reg RAX, Reg RAX 3
766b1: JE 766c9 (resolved immediate)
  |
  `- 766b3,766c9
766b3: MOV Reg RDX, Reg RBP 3
766b6: MOV Reg RSI, Reg RAX 3
766b9: MOV Reg RDI, Reg R12 3
766bc: CALL libxl__defbool_parse_json (external)
766c1: TEST Reg EAX, Reg EAX 2
766c3: JNE 76780 (resolved immediate)
  |
  `- 766c9,76780
766c9: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 156938))) 7
766d0: MOV Reg EDX, Immediate 33 5
766d5: MOV Reg RSI, Reg RBX 3
766d8: CALL libxl__json_map_get (internal)
766dd: TEST Reg RAX, Reg RAX 3
766e0: JE 766f9 (resolved immediate)
  |
  `- 766e2,766f9
766e2: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 8))) 4
766e6: MOV Reg RSI, Reg RAX 3
766e9: MOV Reg RDI, Reg R12 3
766ec: CALL libxl__string_parse_json (external)
766f1: TEST Reg EAX, Reg EAX 2
766f3: JNE 76780 (resolved immediate)
  |
  `- 766f9,76780
766f9: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 124346))) 7
76700: MOV Reg EDX, Immediate 33 5
76705: MOV Reg RSI, Reg RBX 3
76708: CALL libxl__json_map_get (internal)
7670d: TEST Reg RAX, Reg RAX 3
76710: JE 76725 (resolved immediate)
  |
  `- 76712,76725
76712: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 16))) 4
76716: MOV Reg RSI, Reg RAX 3
76719: MOV Reg RDI, Reg R12 3
7671c: CALL libxl__string_parse_json (external)
76721: TEST Reg EAX, Reg EAX 2
76723: JNE 76780 (resolved immediate)
  |
  `- 76725,76780
76725: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 123225))) 7
7672c: MOV Reg EDX, Immediate 4 5
76731: MOV Reg RSI, Reg RBX 3
76734: CALL libxl__json_map_get (internal)
76739: TEST Reg RAX, Reg RAX 3
7673c: JE 76751 (resolved immediate)
  |
  `- 7673e,76751
7673e: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 24))) 4
76742: MOV Reg RSI, Reg RAX 3
76745: MOV Reg RDI, Reg R12 3
76748: CALL libxl__int_parse_json (external)
7674d: TEST Reg EAX, Reg EAX 2
7674f: JNE 76780 (resolved immediate)
  |
  `- 76751,76780
76751: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 197118))) 7
76758: MOV Reg EDX, Immediate 32 5
7675d: MOV Reg RSI, Reg RBX 3
76760: CALL libxl__json_map_get (internal)
76765: TEST Reg RAX, Reg RAX 3
76768: JE 76780 (resolved immediate)
  |
  `- 7676a,76780
7676a: POP Reg RBX 1
7676b: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 28))) 4
7676f: MOV Reg RDI, Reg R12 3
76772: MOV Reg RSI, Reg RAX 3
76775: POP Reg RBP 1
76776: POP Reg R12 2
76778: JMP libxl__defbool_parse_json (jmp to external function)
  |
  `- 
76780: POP Reg RBX 1
76781: POP Reg RBP 1
76782: POP Reg R12 2
76784: RET  1
  |
  `- 
