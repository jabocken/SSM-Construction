Number of assembly instructions     = 88
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 88
Number of edges: 88

3bdb0 (True): 7e6bb
7e610 (False): 0

3bdb0: PUSH Reg R12 2
3bdb2: PUSH Reg RBP 1
3bdb3: PUSH Reg RBX 1
3bdb4: MOV Reg EAX, Address (SizeDir 32 (FromReg RDI)) 2
3bdb6: TEST Reg EAX, Reg EAX 2
3bdb8: JS 3be14 (resolved immediate)
  |
  `- 3bdba,3be14
3bdba: MOV Reg R12, Reg RDI 3
3bdbd: MOV Reg EBP, Immediate 0 5
3bdc2: MOV Reg EBX, Immediate 0 5
3bdc7: JE 3bdf4 (resolved immediate)
  |
  `- 3bdc9,3bdf4
3bdc9: NOP  7
3bdd0: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdd5: ADD Reg EBX, Immediate 1 3
3bdd8: ADD Reg RAX, Reg RBP 3
3bddb: ADD Reg RBP, Immediate 8 4
3bddf: MOV Reg RDI, Address (SizeDir 64 (FromReg RAX)) 3
3bde2: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
3bde9: CALL free (external)
3bdee: CMP Address (SizeDir 32 (FromReg R12)), Reg EBX 4
3bdf2: JG 3bdd0 (resolved immediate)
  |
  `- 3bdd0,3bdf4
3bdf4: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdf9: CALL free (external)
3bdfe: MOV Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))), Immediate 0 9
3be07: MOV Address (SizeDir 32 (FromReg R12)), Immediate 0 8
3be0f: POP Reg RBX 1
3be10: POP Reg RBP 1
3be11: POP Reg R12 2
3be13: RET  1
  |
  `- 
3be14: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 387253))) 7
3be1b: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386238))) 7
3be22: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386248))) 7
3be29: MOV Reg EDX, Immediate 80 5
3be2e: CALL __assert_fail (external)
  |
  `- 
7e610: PUSH Reg R12 2
7e612: PUSH Reg RBP 1
7e613: MOV Reg RBP, Reg RDX 3
7e616: PUSH Reg RBX 1
7e617: ADD Reg RDX, Immediate 16 4
7e61b: MOV Reg RBX, Reg RSI 3
7e61e: ADD Reg RSI, Immediate 16 4
7e622: MOV Reg R12, Reg RDI 3
7e625: SUB Reg RSP, Immediate 32 4
7e629: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
7e632: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
7e637: XOR Reg EAX, Reg EAX 2
7e639: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDX) (AddrImm 16))) 3
7e63c: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg RDI 5
7e641: MOV Address (SizeDir 32 (FromReg RSP)), Immediate 0 7
7e648: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
7e651: MOV Address (SizeDir 32 (AddrMinus (FromReg RSI) (AddrImm 16))), Reg EAX 3
7e654: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDX) (AddrImm 12))) 3
7e657: MOV Address (SizeDir 32 (AddrMinus (FromReg RSI) (AddrImm 12))), Reg EAX 3
7e65a: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDX) (AddrImm 8))) 3
7e65d: MOV Address (SizeDir 32 (AddrMinus (FromReg RSI) (AddrImm 8))), Reg EAX 3
7e660: CALL libxl_string_copy (external)
7e665: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 24))) 3
7e668: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 32))) 4
7e66c: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 32))) 4
7e670: MOV Reg RDI, Reg R12 3
7e673: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 24))), Reg EAX 3
7e676: CALL libxl_string_copy (external)
7e67b: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 40))) 3
7e67e: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 56))) 4
7e682: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 56))) 4
7e686: MOV Reg RDI, Reg R12 3
7e689: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 40))), Reg EAX 3
7e68c: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 44))) 3
7e68f: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 44))), Reg EAX 3
7e692: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 48))) 3
7e695: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 48))), Reg EAX 3
7e698: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 52))) 3
7e69b: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 52))), Reg EAX 3
7e69e: CALL libxl_string_copy (external)
7e6a3: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 64))) 4
7e6a7: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 64))) 4
7e6ab: MOV Reg RDI, Reg R12 3
7e6ae: CALL libxl_string_copy (external)
7e6b3: MOV Reg RDI, Reg RSP 3
7e6b6: CALL libxl__free_all (internal)
  |
  `- 3bdb0
7e6bb: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
7e6c0: XOR Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
7e6c9: JNE 7e6d4 (resolved immediate)
  |
  `- 7e6cb,7e6d4
7e6cb: ADD Reg RSP, Immediate 32 4
7e6cf: POP Reg RBX 1
7e6d0: POP Reg RBP 1
7e6d1: POP Reg R12 2
7e6d3: RET  1
  |
  `- 
7e6d4: CALL __stack_chk_fail (external)
  |
  `- 
