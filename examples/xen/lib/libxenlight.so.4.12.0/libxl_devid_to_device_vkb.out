Number of assembly instructions     = 110
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 128
Number of edges: 167

3bdb0 (True): 6dafa
6da30 (False): 0

3bdb0: PUSH Reg R12 2
3bdb2: PUSH Reg RBP 1
3bdb3: PUSH Reg RBX 1
3bdb4: MOV Reg EAX, Address (SizeDir 32 (FromReg RDI)) 2
3bdb6: TEST Reg EAX, Reg EAX 2
3bdb8: JS 3be14 (resolved immediate)
  |
  `- 3bdba,3be14
3bdba: MOV Reg R12, Reg RDI 3
3bdbd: MOV Reg EBP, Immediate 0 5
3bdc2: MOV Reg EBX, Immediate 0 5
3bdc7: JE 3bdf4 (resolved immediate)
  |
  `- 3bdc9,3bdf4
3bdc9: NOP  7
3bdd0: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdd5: ADD Reg EBX, Immediate 1 3
3bdd8: ADD Reg RAX, Reg RBP 3
3bddb: ADD Reg RBP, Immediate 8 4
3bddf: MOV Reg RDI, Address (SizeDir 64 (FromReg RAX)) 3
3bde2: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
3bde9: CALL free (external)
3bdee: CMP Address (SizeDir 32 (FromReg R12)), Reg EBX 4
3bdf2: JG 3bdd0 (resolved immediate)
  |
  `- 3bdd0,3bdf4
3bdf4: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdf9: CALL free (external)
3bdfe: MOV Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))), Immediate 0 9
3be07: MOV Address (SizeDir 32 (FromReg R12)), Immediate 0 8
3be0f: POP Reg RBX 1
3be10: POP Reg RBP 1
3be11: POP Reg R12 2
3be13: RET  1
  |
  `- 
3be14: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 387253))) 7
3be1b: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386238))) 7
3be22: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386248))) 7
3be29: MOV Reg EDX, Immediate 80 5
3be2e: CALL __assert_fail (external)
  |
  `- 
6da30: PUSH Reg R15 2
6da32: PUSH Reg R14 2
6da34: MOV Reg R15, Reg RDI 3
6da37: PUSH Reg R13 2
6da39: PUSH Reg R12 2
6da3b: MOV Reg R12D, Reg ESI 3
6da3e: PUSH Reg RBP 1
6da3f: PUSH Reg RBX 1
6da40: MOV Reg EBX, Reg EDX 2
6da42: SUB Reg RSP, Immediate 72 4
6da46: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Reg RDI 5
6da4b: MOV Reg RDI, Reg RCX 3
6da4e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RCX 5
6da53: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
6da5c: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg RAX 5
6da61: XOR Reg EAX, Reg EAX 2
6da63: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 32))), Immediate 0 8
6da6b: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Immediate 0 9
6da74: LEA Reg RBP, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))) 5
6da79: CALL libxl_device_vkb_init (external)
6da7e: MOV Reg EDX, Reg R12D 3
6da81: MOV Reg R12, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2461096))) 7
6da88: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 28))) 5
6da8d: MOV Reg RDI, Reg RBP 3
6da90: MOV Reg RSI, Reg R12 3
6da93: CALL libxl__device_list (external)
6da98: TEST Reg RAX, Reg RAX 3
6da9b: JE 6db3f (resolved immediate)
  |
  `- 6daa1,6db3f
6daa1: MOV Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 28))) 4
6daa5: MOV Reg R13, Reg RAX 3
6daa8: MOV Reg R14D, Immediate 4294967273 6
6daae: TEST Reg EDX, Reg EDX 2
6dab0: JLE 6dae7 (resolved immediate)
  |
  `- 6dab2,6dae7
6dab2: CMP Reg EBX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 16))) 3
6dab5: MOV Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
6daba: JE 6db20 (resolved immediate)
  |
  `- 6dabc,6db20
6dabc: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrImm 64))) 4
6dac0: LEA Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDX) (AddrImm 1))) 3
6dac3: SHL Reg RAX, Immediate 6 4
6dac7: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (AddrPlus (FromReg R13) (AddrTimes (AddrImm 1) (FromReg RAX))) (AddrImm 64))) 5
6dacc: JMP 6dadc (resolved immediate)
  |
  `- 6dadc
6dad0: MOV Reg RDI, Reg RCX 3
6dad3: ADD Reg RCX, Immediate 64 4
6dad7: CMP Address (SizeDir 32 (AddrMinus (FromReg RCX) (AddrImm 48))), Reg EBX 3
6dada: JE 6db28 (resolved immediate)
  |
  `- 6dadc,6db28
6dadc: CMP Reg RCX, Reg RSI 3
6dadf: JNE 6dad0 (resolved immediate)
  |
  `- 6dad0,6dae1
6dae1: MOV Reg R14D, Immediate 4294967273 6
6dae7: MOV Reg RSI, Reg R13 3
6daea: MOV Reg RDI, Reg R12 3
6daed: CALL libxl__device_list_free (external)
6daf2: MOV Reg RDI, Reg RBP 3
6daf5: CALL libxl__free_all (internal)
  |
  `- 3bdb0
6dafa: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
6daff: XOR Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
6db08: MOV Reg EAX, Reg R14D 3
6db0b: JNE 6db47 (resolved immediate)
  |
  `- 6db0d,6db47
6db0d: ADD Reg RSP, Immediate 72 4
6db11: POP Reg RBX 1
6db12: POP Reg RBP 1
6db13: POP Reg R12 2
6db15: POP Reg R13 2
6db17: POP Reg R14 2
6db19: POP Reg R15 2
6db1b: RET  1
  |
  `- 
6db20: MOV Reg RDI, Reg RAX 3
6db23: NOP  5
6db28: MOV Reg RDX, Reg RDI 3
6db2b: MOV Reg RSI, Reg R8 3
6db2e: MOV Reg RDI, Reg R15 3
6db31: CALL libxl_device_vkb_copy (external)
6db36: XOR Reg R14D, Reg R14D 3
6db39: MOV Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 28))) 4
6db3d: JMP 6dae7 (resolved immediate)
  |
  `- 6dae7
6db3f: MOV Reg R14D, Immediate 4294967273 6
6db45: JMP 6daf2 (resolved immediate)
  |
  `- 6daf2
6db47: CALL __stack_chk_fail (external)
  |
  `- 
