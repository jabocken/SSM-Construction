Number of assembly instructions     = 36
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 36
Number of edges: 37

7dac0 (False): 0

7dac0: TEST Reg RDI, Reg RDI 3
7dac3: JE 7db38 (resolved immediate)
  |
  `- 7dac5,7db38
7dac5: PUSH Reg R12 2
7dac7: PUSH Reg RBP 1
7dac8: PUSH Reg RBX 1
7dac9: MOV Reg RBX, Reg RDI 3
7dacc: MOV Reg RDI, Address (SizeDir 64 (FromReg RDI)) 3
7dacf: CALL free (external)
7dad4: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
7dad8: CALL libxl_vsnd_params_dispose (external)
7dadd: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 56))) 3
7dae0: TEST Reg EAX, Reg EAX 2
7dae2: JLE 7db08 (resolved immediate)
  |
  `- 7dae4,7db08
7dae4: XOR Reg R12D, Reg R12D 3
7dae7: XOR Reg EBP, Reg EBP 2
7dae9: NOP  7
7daf0: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 64))) 4
7daf4: ADD Reg EBP, Immediate 1 3
7daf7: ADD Reg RDI, Reg R12 3
7dafa: ADD Reg R12, Immediate 64 4
7dafe: CALL libxl_vsnd_stream_dispose (external)
7db03: CMP Reg EBP, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 56))) 3
7db06: JL 7daf0 (resolved immediate)
  |
  `- 7daf0,7db08
7db08: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 64))) 4
7db0c: CALL free (external)
7db11: PXOR Reg XMM0, Reg XMM0 4
7db15: MOV Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 64))), Immediate 0 8
7db1d: MOVUPS Address (SizeDir 128 (FromReg RBX)), Reg XMM0 3
7db20: MOVUPS Address (SizeDir 128 (AddrPlus (FromReg RBX) (AddrImm 16))), Reg XMM0 4
7db24: MOVUPS Address (SizeDir 128 (AddrPlus (FromReg RBX) (AddrImm 32))), Reg XMM0 4
7db28: MOVUPS Address (SizeDir 128 (AddrPlus (FromReg RBX) (AddrImm 48))), Reg XMM0 4
7db2c: POP Reg RBX 1
7db2d: POP Reg RBP 1
7db2e: POP Reg R12 2
7db30: RET  1
  |
  `- 
7db38: RET  2
  |
  `- 
