Number of assembly instructions     = 94
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 94
Number of edges: 98

20500 (True): 41528
41490 (True): 840fd, 8413c
840e0 (False): 0

20500: CMP Address (SizeDir 32 (FromReg RDI)), Reg ESI 2
20502: MOV Reg EAX, Immediate 1 5
20507: JLE 20519 (resolved immediate)
  |
  `- 20509,20519
20509: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
2050d: MOVSXD Reg RSI, Reg ESI 3
20510: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 8) (FromReg RSI)))) 4
20514: MOV Address (SizeDir 64 (FromReg RDX)), Reg RAX 3
20517: XOR Reg EAX, Reg EAX 2
20519: RET  2
  |
  `- 
41490: PUSH Reg R15 2
41492: PUSH Reg R14 2
41494: PUSH Reg R13 2
41496: PUSH Reg R12 2
41498: PUSH Reg RBP 1
41499: PUSH Reg RBX 1
4149a: SUB Reg RSP, Immediate 24 4
4149e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414a7: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
414ac: XOR Reg EAX, Reg EAX 2
414ae: TEST Reg RSI, Reg RSI 3
414b1: JE 414b8 (resolved immediate)
  |
  `- 414b3,414b8
414b3: CMP Address (SizeDir 32 (FromReg RSI)), Immediate 64 3
414b6: JE 414e0 (resolved immediate)
  |
  `- 414b8,414e0
414b8: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
414bd: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
414c6: JNE 4155b (resolved immediate)
  |
  `- 414cc,4155b
414cc: ADD Reg RSP, Immediate 24 4
414d0: POP Reg RBX 1
414d1: POP Reg RBP 1
414d2: POP Reg R12 2
414d4: POP Reg R13 2
414d6: POP Reg R14 2
414d8: POP Reg R15 2
414da: RET  1
  |
  `- 
414e0: MOV Reg RBP, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 8))) 4
414e4: XOR Reg EBX, Reg EBX 2
414e6: MOV Reg R13, Reg RDI 3
414e9: MOV Reg R14D, Reg EDX 3
414ec: MOV Address (SizeDir 64 (FromReg RSP)), Immediate 0 8
414f4: MOV Reg R12, Reg RSP 3
414f7: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))) 3
414fa: TEST Reg EAX, Reg EAX 2
414fc: JNE 4151b (resolved immediate)
  |
  `- 414fe,4151b
414fe: JMP 4152c (resolved immediate)
  |
  `- 4152c
4151b: MOV Reg RDX, Reg R12 3
4151e: MOV Reg ESI, Reg EBX 2
41520: MOV Reg RDI, Reg RBP 3
41523: CALL flexarray_get (internal)
  |
  `- 20500
41528: TEST Reg EAX, Reg EAX 2
4152a: JE 41500 (resolved immediate)
4152c: XOR Reg EAX, Reg EAX 2
4152e: JMP 414b8 (resolved immediate)
  |
  `- 414b8
4155b: CALL __stack_chk_fail (external)
  |
  `- 
840e0: PUSH Reg RBP 1
840e1: PUSH Reg RBX 1
840e2: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 145438))) 7
840e9: MOV Reg RBX, Reg RDX 3
840ec: MOV Reg EDX, Immediate 32 5
840f1: MOV Reg RBP, Reg RSI 3
840f4: SUB Reg RSP, Immediate 8 4
840f8: CALL libxl__json_map_get (internal)
  |
  `- 41490
840fd: TEST Reg RAX, Reg RAX 3
84100: JE 84128 (resolved immediate)
  |
  `- 84102,84128
84102: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 32 3
84105: JE 84118 (resolved immediate)
  |
  `- 84107,84118
84107: MOV Reg EAX, Immediate 4294967295 5
8410c: ADD Reg RSP, Immediate 8 4
84110: POP Reg RBX 1
84111: POP Reg RBP 1
84112: RET  1
  |
  `- 
84118: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrImm 8))) 4
8411c: MOV Reg RSI, Reg RBX 3
8411f: CALL libxl_rdm_reserve_strategy_from_string (external)
84124: TEST Reg EAX, Reg EAX 2
84126: JNE 8410c (resolved immediate)
  |
  `- 8410c,84128
84128: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 145395))) 7
8412f: MOV Reg EDX, Immediate 32 5
84134: MOV Reg RSI, Reg RBP 3
84137: CALL libxl__json_map_get (internal)
8413c: TEST Reg RAX, Reg RAX 3
8413f: JE 84160 (resolved immediate)
  |
  `- 84141,84160
84141: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 32 3
84144: JNE 84107 (resolved immediate)
  |
  `- 84107,84146
84146: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrImm 8))) 4
8414a: ADD Reg RSP, Immediate 8 4
8414e: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 4))) 4
84152: POP Reg RBX 1
84153: POP Reg RBP 1
84154: JMP libxl_rdm_reserve_policy_from_string (jmp to external function)
  |
  `- 
84160: ADD Reg RSP, Immediate 8 4
84164: XOR Reg EAX, Reg EAX 2
84166: POP Reg RBX 1
84167: POP Reg RBP 1
84168: RET  1
  |
  `- 
