Number of assembly instructions     = 101
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 101
Number of edges: 107

3bdb0 (True): 3ecc2
3ec00 (False): 0

3bdb0: PUSH Reg R12 2
3bdb2: PUSH Reg RBP 1
3bdb3: PUSH Reg RBX 1
3bdb4: MOV Reg EAX, Address (SizeDir 32 (FromReg RDI)) 2
3bdb6: TEST Reg EAX, Reg EAX 2
3bdb8: JS 3be14 (resolved immediate)
  |
  `- 3bdba,3be14
3bdba: MOV Reg R12, Reg RDI 3
3bdbd: MOV Reg EBP, Immediate 0 5
3bdc2: MOV Reg EBX, Immediate 0 5
3bdc7: JE 3bdf4 (resolved immediate)
  |
  `- 3bdc9,3bdf4
3bdc9: NOP  7
3bdd0: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdd5: ADD Reg EBX, Immediate 1 3
3bdd8: ADD Reg RAX, Reg RBP 3
3bddb: ADD Reg RBP, Immediate 8 4
3bddf: MOV Reg RDI, Address (SizeDir 64 (FromReg RAX)) 3
3bde2: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
3bde9: CALL free (external)
3bdee: CMP Address (SizeDir 32 (FromReg R12)), Reg EBX 4
3bdf2: JG 3bdd0 (resolved immediate)
  |
  `- 3bdd0,3bdf4
3bdf4: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdf9: CALL free (external)
3bdfe: MOV Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))), Immediate 0 9
3be07: MOV Address (SizeDir 32 (FromReg R12)), Immediate 0 8
3be0f: POP Reg RBX 1
3be10: POP Reg RBP 1
3be11: POP Reg R12 2
3be13: RET  1
  |
  `- 
3be14: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 387253))) 7
3be1b: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386238))) 7
3be22: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386248))) 7
3be29: MOV Reg EDX, Immediate 80 5
3be2e: CALL __assert_fail (external)
  |
  `- 
3ec00: PUSH Reg R13 2
3ec02: PUSH Reg R12 2
3ec04: MOV Reg R12, Reg RSI 3
3ec07: PUSH Reg RBP 1
3ec08: PUSH Reg RBX 1
3ec09: MOV Reg RBX, Reg RDX 3
3ec0c: MOV Reg RBP, Reg RCX 3
3ec0f: SUB Reg RSP, Immediate 40 4
3ec13: MOV Reg EDX, Address (SizeDir 32 (FromReg RDX)) 2
3ec15: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
3ec1e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
3ec23: XOR Reg EAX, Reg EAX 2
3ec25: MOV Reg EAX, Address (SizeDir 32 (FromReg RCX)) 2
3ec27: MOV Address (SizeDir 32 (FromReg RSP)), Immediate 0 7
3ec2e: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
3ec37: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg RDI 5
3ec3c: CMP Reg EDX, Reg EAX 2
3ec3e: JA 3ec4b (resolved immediate)
  |
  `- 3ec40,3ec4b
3ec40: MOV Reg EDX, Reg EAX 2
3ec42: MOV Reg RAX, Reg RBX 3
3ec45: MOV Reg RBX, Reg RCX 3
3ec48: MOV Reg RBP, Reg RAX 3
3ec4b: SHL Reg EDX, Immediate 3 3
3ec4e: MOV Reg RSI, Reg R12 3
3ec51: CALL libxl_bitmap_alloc (external)
3ec56: TEST Reg EAX, Reg EAX 2
3ec58: MOV Reg R13D, Reg EAX 3
3ec5b: JNE 3ecba (resolved immediate)
  |
  `- 3ec5d,3ecba
3ec5d: MOV Reg EDX, Address (SizeDir 32 (FromReg RBP)) 3
3ec60: TEST Reg EDX, Reg EDX 2
3ec62: JE 3ecb6 (resolved immediate)
  |
  `- 3ec64,3ecb6
3ec64: XOR Reg ESI, Reg ESI 2
3ec66: NOP  10
3ec70: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 8))) 4
3ec74: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
3ec78: MOV Reg EDX, Reg ESI 2
3ec7a: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3ec7f: ADD Reg ESI, Immediate 1 3
3ec82: MOVZX Reg EDI, Address (SizeDir 8 (AddrPlus (FromReg RDI) (AddrTimes (AddrImm 1) (FromReg RDX)))) 4
3ec86: OR Reg DIL, Address (SizeDir 8 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 1) (FromReg RDX)))) 4
3ec8a: MOV Address (SizeDir 8 (AddrPlus (FromReg RCX) (AddrTimes (AddrImm 1) (FromReg RDX)))), Reg DIL 4
3ec8e: MOV Reg EDX, Address (SizeDir 32 (FromReg RBP)) 3
3ec91: CMP Reg EDX, Reg ESI 2
3ec93: JA 3ec70 (resolved immediate)
  |
  `- 3ec70,3ec95
3ec95: CMP Address (SizeDir 32 (FromReg RBX)), Reg EDX 2
3ec97: JBE 3ecba (resolved immediate)
  |
  `- 3ec99,3ecba
3ec99: NOP  7
3eca0: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
3eca4: MOV Reg ECX, Reg EDX 2
3eca6: ADD Reg EDX, Immediate 1 3
3eca9: MOVZX Reg EDI, Address (SizeDir 8 (AddrPlus (FromReg RSI) (AddrTimes (AddrImm 1) (FromReg RCX)))) 4
3ecad: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3ecb2: MOV Address (SizeDir 8 (AddrPlus (FromReg RSI) (AddrTimes (AddrImm 1) (FromReg RCX)))), Reg DIL 4
3ecb6: CMP Address (SizeDir 32 (FromReg RBX)), Reg EDX 2
3ecb8: JA 3eca0 (resolved immediate)
  |
  `- 3eca0,3ecba
3ecba: MOV Reg RDI, Reg RSP 3
3ecbd: CALL libxl__free_all (internal)
  |
  `- 3bdb0
3ecc2: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
3ecc7: XOR Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
3ecd0: MOV Reg EAX, Reg R13D 3
3ecd3: JNE 3ece0 (resolved immediate)
  |
  `- 3ecd5,3ece0
3ecd5: ADD Reg RSP, Immediate 40 4
3ecd9: POP Reg RBX 1
3ecda: POP Reg RBP 1
3ecdb: POP Reg R12 2
3ecdd: POP Reg R13 2
3ecdf: RET  1
  |
  `- 
3ece0: CALL __stack_chk_fail (external)
  |
  `- 
