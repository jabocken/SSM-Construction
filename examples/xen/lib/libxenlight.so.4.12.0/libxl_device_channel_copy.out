Number of assembly instructions     = 76
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 76
Number of edges: 77

3bdb0 (True): 80553
804d0 (False): 0

3bdb0: PUSH Reg R12 2
3bdb2: PUSH Reg RBP 1
3bdb3: PUSH Reg RBX 1
3bdb4: MOV Reg EAX, Address (SizeDir 32 (FromReg RDI)) 2
3bdb6: TEST Reg EAX, Reg EAX 2
3bdb8: JS 3be14 (resolved immediate)
  |
  `- 3bdba,3be14
3bdba: MOV Reg R12, Reg RDI 3
3bdbd: MOV Reg EBP, Immediate 0 5
3bdc2: MOV Reg EBX, Immediate 0 5
3bdc7: JE 3bdf4 (resolved immediate)
  |
  `- 3bdc9,3bdf4
3bdc9: NOP  7
3bdd0: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdd5: ADD Reg EBX, Immediate 1 3
3bdd8: ADD Reg RAX, Reg RBP 3
3bddb: ADD Reg RBP, Immediate 8 4
3bddf: MOV Reg RDI, Address (SizeDir 64 (FromReg RAX)) 3
3bde2: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
3bde9: CALL free (external)
3bdee: CMP Address (SizeDir 32 (FromReg R12)), Reg EBX 4
3bdf2: JG 3bdd0 (resolved immediate)
  |
  `- 3bdd0,3bdf4
3bdf4: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
3bdf9: CALL free (external)
3bdfe: MOV Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))), Immediate 0 9
3be07: MOV Address (SizeDir 32 (FromReg R12)), Immediate 0 8
3be0f: POP Reg RBX 1
3be10: POP Reg RBP 1
3be11: POP Reg R12 2
3be13: RET  1
  |
  `- 
3be14: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 387253))) 7
3be1b: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386238))) 7
3be22: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 386248))) 7
3be29: MOV Reg EDX, Immediate 80 5
3be2e: CALL __assert_fail (external)
  |
  `- 
804d0: PUSH Reg R12 2
804d2: PUSH Reg RBP 1
804d3: MOV Reg RBP, Reg RSI 3
804d6: PUSH Reg RBX 1
804d7: ADD Reg RSI, Immediate 8 4
804db: MOV Reg RBX, Reg RDX 3
804de: ADD Reg RDX, Immediate 8 4
804e2: MOV Reg R12, Reg RDI 3
804e5: SUB Reg RSP, Immediate 32 4
804e9: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
804f2: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
804f7: XOR Reg EAX, Reg EAX 2
804f9: MOV Reg EAX, Address (SizeDir 32 (AddrMinus (FromReg RDX) (AddrImm 8))) 3
804fc: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg RDI 5
80501: MOV Address (SizeDir 32 (FromReg RSP)), Immediate 0 7
80508: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Immediate 0 9
80511: MOV Address (SizeDir 32 (AddrMinus (FromReg RSI) (AddrImm 8))), Reg EAX 3
80514: CALL libxl_string_copy (external)
80519: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 16))) 3
8051c: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 24))) 4
80520: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 24))) 4
80524: MOV Reg RDI, Reg R12 3
80527: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 16))), Reg EAX 3
8052a: CALL libxl_string_copy (external)
8052f: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 32))) 3
80532: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 32))), Reg EAX 3
80535: CMP Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 32))), Immediate 2 4
80539: JNE 8054b (resolved immediate)
  |
  `- 8053b,8054b
8053b: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 40))) 4
8053f: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 40))) 4
80543: MOV Reg RDI, Reg R12 3
80546: CALL libxl_string_copy (external)
8054b: MOV Reg RDI, Reg RSP 3
8054e: CALL libxl__free_all (internal)
  |
  `- 3bdb0
80553: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
80558: XOR Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
80561: JNE 8056c (resolved immediate)
  |
  `- 80563,8056c
80563: ADD Reg RSP, Immediate 32 4
80567: POP Reg RBX 1
80568: POP Reg RBP 1
80569: POP Reg R12 2
8056b: RET  1
  |
  `- 
8056c: CALL __stack_chk_fail (external)
  |
  `- 
