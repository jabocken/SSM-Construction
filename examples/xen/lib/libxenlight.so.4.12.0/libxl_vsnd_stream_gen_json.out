Number of assembly instructions     = 76
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 93
Number of edges: 133

40c90 (True): 8df5c
40cd0 (True): 8df92
8df10 (False): 0

40c90: TEST Reg RSI, Reg RSI 3
40c93: JZ 40cc0 (resolved immediate)
  |
  `- 40c95,40cc0
40c95: PUSH Reg RBP 1
40c96: PUSH Reg RBX 1
40c97: MOV Reg RBP, Reg RDI 3
40c9a: MOV Reg RDI, Reg RSI 3
40c9d: MOV Reg RBX, Reg RSI 3
40ca0: SUB Reg RSP, Immediate 8 4
40ca4: CALL strlen (external)
40ca9: ADD Reg RSP, Immediate 8 4
40cad: MOV Reg RSI, Reg RBX 3
40cb0: MOV Reg RDI, Reg RBP 3
40cb3: POP Reg RBX 1
40cb4: POP Reg RBP 1
40cb5: MOV Reg RDX, Reg RAX 3
40cb8: JMP yajl_gen_string (jmp to external function)
  |
  `- 
40cc0: JMP yajl_gen_null (jmp to external function)
  |
  `- 
40cd0: JMP 40c90 (resolved immediate)
  |
  `- 40c90
8df10: PUSH Reg RBP 1
8df11: PUSH Reg RBX 1
8df12: MOV Reg RBP, Reg RSI 3
8df15: MOV Reg RBX, Reg RDI 3
8df18: SUB Reg RSP, Immediate 8 4
8df1c: CALL yajl_gen_map_open (external)
8df21: TEST Reg EAX, Reg EAX 2
8df23: JNZ 8df44 (resolved immediate)
  |
  `- 8df25,8df44
8df25: CMP Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 0))), Immediate 0 5
8df2a: JZ 8df60 (resolved immediate)
  |
  `- 8df2c,8df60
8df2c: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 100889)) 7
8df33: MOV Reg EDX, Immediate 9 5
8df38: MOV Reg RDI, Reg RBX 3
8df3b: CALL yajl_gen_string (external)
8df40: TEST Reg EAX, Reg EAX 2
8df42: JZ 8df50 (resolved immediate)
  |
  `- 8df44,8df50
8df44: ADD Reg RSP, Immediate 8 4
8df48: POP Reg RBX 1
8df49: POP Reg RBP 1
8df4a: RET  1
  |
  `- 
8df50: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RBP) (AddrImm 0))) 4
8df54: MOV Reg RDI, Reg RBX 3
8df57: CALL libxl__string_gen_json (internal)
  |
  `- 40c90
8df5c: TEST Reg EAX, Reg EAX 2
8df5e: JNZ 8df44 (resolved immediate)
  |
  `- 8df44,8df60
8df60: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))) 3
8df63: TEST Reg EAX, Reg EAX 2
8df65: JZ 8dfa0 (resolved immediate)
  |
  `- 8df67,8dfa0
8df67: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 100079)) 7
8df6e: MOV Reg EDX, Immediate 4 5
8df73: MOV Reg RDI, Reg RBX 3
8df76: CALL yajl_gen_string (external)
8df7b: TEST Reg EAX, Reg EAX 2
8df7d: JNZ 8df44 (resolved immediate)
  |
  `- 8df44,8df7f
8df7f: MOV Reg EDI, Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))) 3
8df82: CALL libxl_vsnd_stream_type_to_string (external)
8df87: MOV Reg RDI, Reg RBX 3
8df8a: MOV Reg RSI, Reg RAX 3
8df8d: CALL libxl__yajl_gen_enum (internal)
  |
  `- 8df92,40cd0
8df92: TEST Reg EAX, Reg EAX 2
8df94: JNZ 8df44 (resolved immediate)
  |
  `- 8df44,8df96
8df96: NOP  10
8dfa0: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 46491)) 7
8dfa7: MOV Reg EDX, Immediate 6 5
8dfac: MOV Reg RDI, Reg RBX 3
8dfaf: CALL yajl_gen_string (external)
8dfb4: TEST Reg EAX, Reg EAX 2
8dfb6: JNZ 8df44 (resolved immediate)
  |
  `- 8df44,8dfb8
8dfb8: LEA Reg RSI, Address (AddrPlus (FromReg RBP) (AddrImm 16)) 4
8dfbc: MOV Reg RDI, Reg RBX 3
8dfbf: CALL libxl_vsnd_params_gen_json (external)
8dfc4: TEST Reg EAX, Reg EAX 2
8dfc6: JNZ 8df44 (resolved immediate)
  |
  `- 8df44,8dfcc
8dfcc: ADD Reg RSP, Immediate 8 4
8dfd0: MOV Reg RDI, Reg RBX 3
8dfd3: POP Reg RBX 1
8dfd4: POP Reg RBP 1
8dfd5: JMP yajl_gen_map_close (jmp to external function)
  |
  `- 
