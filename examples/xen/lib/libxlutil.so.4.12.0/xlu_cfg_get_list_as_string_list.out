Number of assembly instructions     = 63
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 63
Number of edges: 67

6110 (False): 0

6110: PUSH Reg R14 2
6112: PUSH Reg R13 2
6114: MOV Reg R8D, Reg ECX 3
6117: PUSH Reg R12 2
6119: PUSH Reg RBP 1
611a: MOV Reg R14, Reg RDX 3
611d: PUSH Reg RBX 1
611e: SUB Reg RSP, Immediate 32 4
6122: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
6127: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
612c: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
6135: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
613a: XOR Reg EAX, Reg EAX 2
613c: CALL xlu_cfg_get_list (external)
6141: TEST Reg EAX, Reg EAX 2
6143: MOV Reg R12D, Reg EAX 3
6146: JE 6170 (resolved immediate)
  |
  `- 6148,6170
6148: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
614d: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
6156: MOV Reg EAX, Reg R12D 3
6159: JNE 61f3 (resolved immediate)
  |
  `- 615f,61f3
615f: ADD Reg RSP, Immediate 32 4
6163: POP Reg RBX 1
6164: POP Reg RBP 1
6165: POP Reg R12 2
6167: POP Reg R13 2
6169: POP Reg R14 2
616b: RET  1
  |
  `- 
6170: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 4
6174: LEA Reg EDI, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 1))) 3
6177: MOVSXD Reg RDI, Reg EDI 3
617a: SHL Reg RDI, Immediate 3 4
617e: CALL malloc (external)
6183: TEST Reg RAX, Reg RAX 3
6186: MOV Reg R13, Reg RAX 3
6189: JE 61e8 (resolved immediate)
  |
  `- 618b,61e8
618b: MOVSXD Reg RAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
6190: TEST Reg EAX, Reg EAX 2
6192: JLE 61d2 (resolved immediate)
  |
  `- 6194,61d2
6194: MOV Reg RBP, Reg R13 3
6197: XOR Reg EBX, Reg EBX 2
6199: NOP  7
61a0: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
61a5: MOV Reg ESI, Reg EBX 2
61a7: CALL xlu_cfg_get_listitem (external)
61ac: XOR Reg EDX, Reg EDX 2
61ae: TEST Reg RAX, Reg RAX 3
61b1: JE 61be (resolved immediate)
  |
  `- 61b3,61be
61b3: MOV Reg RDI, Reg RAX 3
61b6: CALL strdup (external)
61bb: MOV Reg RDX, Reg RAX 3
61be: MOVSXD Reg RAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
61c3: ADD Reg EBX, Immediate 1 3
61c6: MOV Address (SizeDir 64 (FromReg RBP)), Reg RDX 4
61ca: ADD Reg RBP, Immediate 8 4
61ce: CMP Reg EAX, Reg EBX 2
61d0: JG 61a0 (resolved immediate)
  |
  `- 61a0,61d2
61d2: MOV Address (SizeDir 64 (AddrPlus (FromReg R13) (AddrTimes (AddrImm 8) (FromReg RAX)))), Immediate 0 9
61db: MOV Address (SizeDir 64 (FromReg R14)), Reg R13 3
61de: JMP 6148 (resolved immediate)
  |
  `- 6148
61e8: MOV Reg R12D, Immediate 12 6
61ee: JMP 6148 (resolved immediate)
  |
  `- 6148
61f3: CALL __stack_chk_fail (external)
  |
  `- 
