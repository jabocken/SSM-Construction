Number of assembly instructions     = 34
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 34
Number of edges: 37

8de0 (False): 0

8de0: TEST Reg RDI, Reg RDI 3
8de3: JZ 8e50 (resolved immediate)
  |
  `- 8de5,8e50
8de5: PUSH Reg RBP 1
8de6: PUSH Reg RBX 1
8de7: SUB Reg RSP, Immediate 8 4
8deb: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 40))) 4
8def: TEST Reg RAX, Reg RAX 3
8df2: JZ 8e01 (resolved immediate)
  |
  `- 8df4,8e01
8df4: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 24))) 4
8df8: LEA Reg RAX, Address (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 8) (FromReg RDX))) 4
8dfc: CMP Reg RDI, Address (SizeDir 64 (FromReg RAX)) 3
8dff: JZ 8e30 (resolved immediate)
  |
  `- 8e01,8e30
8e01: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RDI) (AddrImm 40))) 3
8e04: MOV Reg RBP, Reg RSI 3
8e07: MOV Reg RBX, Reg RDI 3
8e0a: TEST Reg EAX, Reg EAX 2
8e0c: JNZ 8e20 (resolved immediate)
  |
  `- 8e0e,8e20
8e0e: ADD Reg RSP, Immediate 8 4
8e12: MOV Reg RSI, Reg RBP 3
8e15: MOV Reg RDI, Reg RBX 3
8e18: POP Reg RBX 1
8e19: POP Reg RBP 1
8e1a: JMP xlu__disk_yyfree (jmp to external function)
  |
  `- 
8e20: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 8))) 4
8e24: CALL xlu__disk_yyfree (external)
8e29: JMP 8e0e (resolved immediate)
  |
  `- 8e0e
8e30: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
8e37: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RDI) (AddrImm 40))) 3
8e3a: MOV Reg RBP, Reg RSI 3
8e3d: MOV Reg RBX, Reg RDI 3
8e40: TEST Reg EAX, Reg EAX 2
8e42: JZ 8e0e (resolved immediate)
  |
  `- 8e0e,8e44
8e44: JMP 8e20 (resolved immediate)
  |
  `- 8e20
8e50: REPZ RET  2
  |
  `- 
