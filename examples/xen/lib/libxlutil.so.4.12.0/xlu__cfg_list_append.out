Number of assembly instructions     = 64
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 64
Number of edges: 65

6310 (False): 0

6310: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RDI) (AddrImm 8))) 3
6313: TEST Reg EAX, Reg EAX 2
6315: JNE 63a0 (resolved immediate)
  |
  `- 631b,63a0
631b: PUSH Reg R13 2
631d: PUSH Reg R12 2
631f: MOV Reg R12, Reg RDX 3
6322: PUSH Reg RBP 1
6323: PUSH Reg RBX 1
6324: MOV Reg RBP, Reg RDI 3
6327: MOV Reg RBX, Reg RSI 3
632a: SUB Reg RSP, Immediate 8 4
632e: TEST Reg RDX, Reg RDX 3
6331: JE 63f3 (resolved immediate)
  |
  `- 6337,63f3
6337: CMP Address (SizeDir 32 (FromReg RSI)), Immediate 1 3
633a: JNE 63d4 (resolved immediate)
  |
  `- 6340,63d4
6340: MOVSXD Reg RDX, Address (SizeDir 32 (AddrPlus (FromReg RSI) (AddrImm 12))) 4
6344: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSI) (AddrImm 8))) 3
6347: CMP Reg EDX, Reg EAX 2
6349: JGE 6368 (resolved immediate)
  |
  `- 634b,6368
634b: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 16))) 4
634f: MOV Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 8) (FromReg RDX)))), Reg R12 4
6353: ADD Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 12))), Immediate 1 4
6357: ADD Reg RSP, Immediate 8 4
635b: POP Reg RBX 1
635c: POP Reg RBP 1
635d: POP Reg R12 2
635f: POP Reg R13 2
6361: RET  1
  |
  `- 
6368: CMP Reg EAX, Immediate 21474836 5
636d: JG 63a8 (resolved immediate)
  |
  `- 636f,63a8
636f: LEA Reg R13D, Address (SizeDir 32 (AddrTimes (AddrImm 4) (FromReg RAX))) 8
6377: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 16))) 4
637b: MOVSXD Reg RSI, Reg R13D 3
637e: SHL Reg RSI, Immediate 3 4
6382: CALL realloc (external)
6387: TEST Reg RAX, Reg RAX 3
638a: JE 63c8 (resolved immediate)
  |
  `- 638c,63c8
638c: MOV Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 8))), Reg R13D 4
6390: MOV Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 16))), Reg RAX 4
6394: MOVSXD Reg RDX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 12))) 4
6398: JMP 634f (resolved immediate)
  |
  `- 634f
63a0: RET  2
  |
  `- 
63a8: MOV Address (SizeDir 32 (AddrPlus (FromReg RDI) (AddrImm 8))), Immediate 34 7
63af: ADD Reg RSP, Immediate 8 4
63b3: MOV Reg RDI, Reg R12 3
63b6: POP Reg RBX 1
63b7: POP Reg RBP 1
63b8: POP Reg R12 2
63ba: POP Reg R13 2
63bc: JMP xlu__cfg_value_free (jmp to external function)
  |
  `- 
63c8: CALL __errno_location (external)
63cd: MOV Reg EAX, Address (SizeDir 32 (FromReg RAX)) 2
63cf: MOV Address (SizeDir 32 (AddrPlus (FromReg RBP) (AddrImm 8))), Reg EAX 3
63d2: JMP 63af (resolved immediate)
  |
  `- 63af
63d4: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20357))) 7
63db: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20128))) 7
63e2: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20170))) 7
63e9: MOV Reg EDX, Immediate 424 5
63ee: CALL __assert_fail (external)
  |
  `- 
63f3: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20326))) 7
63fa: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20097))) 7
6401: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 20135))) 7
6408: MOV Reg EDX, Immediate 423 5
640d: CALL __assert_fail (external)
  |
  `- 
