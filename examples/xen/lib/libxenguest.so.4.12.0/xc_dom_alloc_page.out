Number of assembly instructions     = 82
Number of indirect branches         = 1
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 1: 162f9
Number of symbolic states (representative of non-determinism): 82
Number of edges: 85

16290 (True): 173ba
17380 (False): 0

16290: SUB Reg RSP, Immediate 8 4
16294: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 2328))) 7
1629b: MOV Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1040))) 7
162a2: MOV Reg R9, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1128))) 7
162a9: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 96))) 3
162ac: MOV Reg EAX, Immediate 1 5
162b1: MOV Reg R10, Reg R8 3
162b4: SHL Reg RAX, Reg CL 3
162b7: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1120))) 7
162be: SUB Reg R10, Reg RCX 3
162c1: CMP Reg R9, Reg RDX 3
162c4: JB 16310 (resolved immediate)
  |
  `- 162c6,16310
162c6: CMP Reg R9, Reg R10 3
162c9: JB 16310 (resolved immediate)
  |
  `- 162cb,16310
162cb: ADD Reg RCX, Reg R9 3
162ce: SUB Reg RCX, Reg R8 3
162d1: CMP Reg RCX, Reg RDX 3
162d4: JB 16310 (resolved immediate)
  |
  `- 162d6,16310
162d6: MOV Reg EAX, Reg EAX 2
162d8: ADD Reg R8, Reg RDX 3
162db: IMUL Reg RAX, Reg RDX 4
162df: MOV Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1040))), Reg R8 7
162e6: ADD Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1048))), Reg RAX 7
162ed: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 2336))) 7
162f4: TEST Reg RAX, Reg RAX 3
162f7: JZ 16308 (resolved immediate)
  |
  `- 162f9,16308
162f9: CALL Reg RAX 2
162fb: XOR Reg EAX, Reg EAX 2
162fd: ADD Reg RSP, Immediate 8 4
16301: RET  1
  |
  `- 
16308: XOR Reg EAX, Reg EAX 2
1630a: JMP 162fd (resolved immediate)
  |
  `- 162fd
16310: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1224))) 7
16317: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 62154)) 7
1631e: PUSH Reg R10 2
16320: PUSH Reg R9 2
16322: LEA Reg R9, Address (AddrPlus (FromReg RIP) (AddrImm 63911)) 7
16329: PUSH Reg RDX 1
1632a: PUSH Reg RSI 1
1632b: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 61061)) 7
16332: XOR Reg EAX, Reg EAX 2
16334: MOV Reg ECX, Immediate 4 5
16339: MOV Reg EDX, Immediate 542 5
1633e: CALL xc_dom_panic_func (external)
16343: ADD Reg RSP, Immediate 32 4
16347: MOV Reg EAX, Immediate 4294967295 5
1634c: JMP 162fd (resolved immediate)
  |
  `- 162fd
17380: PUSH Reg R15 2
17382: PUSH Reg R14 2
17384: MOV Reg EDX, Immediate 1 5
17389: PUSH Reg R13 2
1738b: PUSH Reg R12 2
1738d: MOV Reg R12, Reg RSI 3
17390: PUSH Reg RBP 1
17391: PUSH Reg RBX 1
17392: MOV Reg RBX, Reg RDI 3
17395: MOV Reg RBP, Immediate 18446744073709551615 7
1739c: SUB Reg RSP, Immediate 8 4
173a0: MOV Reg R13, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1048))) 7
173a7: MOV Reg R15, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1040))) 7
173ae: MOV Reg R14, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 1120))) 7
173b5: CALL xc_dom_chk_alloc_pages (internal)
  |
  `- 16290
173ba: TEST Reg EAX, Reg EAX 2
173bc: JNZ 173e7 (resolved immediate)
  |
  `- 173be,173e7
173be: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1224))) 7
173c5: SUB Reg R15, Reg R14 3
173c8: LEA Reg RDX, Address (AddrPlus (FromReg RIP) (AddrImm 59617)) 7
173cf: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 58674)) 7
173d6: MOV Reg R9, Reg R15 3
173d9: MOV Reg R8, Reg R13 3
173dc: MOV Reg RCX, Reg R12 3
173df: MOV Reg RBP, Reg R15 3
173e2: CALL xc_dom_printf (external)
173e7: ADD Reg RSP, Immediate 8 4
173eb: MOV Reg RAX, Reg RBP 3
173ee: POP Reg RBX 1
173ef: POP Reg RBP 1
173f0: POP Reg R12 2
173f2: POP Reg R13 2
173f4: POP Reg R14 2
173f6: POP Reg R15 2
173f8: RET  1
  |
  `- 
