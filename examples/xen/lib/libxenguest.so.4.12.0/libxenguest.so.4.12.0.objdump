
libxenguest.so.4.12.0:     file format elf64-x86-64


Disassembly of section .init:

0000000000005848 <_init>:
    5848:	sub    rsp,0x8
    584c:	mov    rax,QWORD PTR [rip+0x22777d]        # 22cfd0 <__gmon_start__>
    5853:	test   rax,rax
    5856:	je     585a <_init+0x12>
    5858:	call   rax
    585a:	add    rsp,0x8
    585e:	ret    

Disassembly of section .plt:

0000000000005860 <.plt>:
    5860:	push   QWORD PTR [rip+0x2277a2]        # 22d008 <_GLOBAL_OFFSET_TABLE_+0x8>
    5866:	jmp    QWORD PTR [rip+0x2277a4]        # 22d010 <_GLOBAL_OFFSET_TABLE_+0x10>
    586c:	nop    DWORD PTR [rax+0x0]

0000000000005870 <write_split_record@plt>:
    5870:	jmp    QWORD PTR [rip+0x2277a2]        # 22d018 <write_split_record@@Base+0x225dd8>
    5876:	push   0x0
    587b:	jmp    5860 <.plt>

0000000000005880 <writev_exact@plt>:
    5880:	jmp    QWORD PTR [rip+0x22779a]        # 22d020 <writev_exact>
    5886:	push   0x1
    588b:	jmp    5860 <.plt>

0000000000005890 <elf_xen_parse_guest_info@plt>:
    5890:	jmp    QWORD PTR [rip+0x227792]        # 22d028 <elf_xen_parse_guest_info@@Base+0x2183e8>
    5896:	push   0x2
    589b:	jmp    5860 <.plt>

00000000000058a0 <elf_check_broken@plt>:
    58a0:	jmp    QWORD PTR [rip+0x22778a]        # 22d030 <elf_check_broken@@Base+0x21a850>
    58a6:	push   0x3
    58ab:	jmp    5860 <.plt>

00000000000058b0 <xc_await_suspend@plt>:
    58b0:	jmp    QWORD PTR [rip+0x227782]        # 22d038 <xc_await_suspend@@Base+0x226158>
    58b6:	push   0x4
    58bb:	jmp    5860 <.plt>

00000000000058c0 <xc_suspend_evtchn_init_sane@plt>:
    58c0:	jmp    QWORD PTR [rip+0x22777a]        # 22d040 <xc_suspend_evtchn_init_sane@@Base+0x225fa0>
    58c6:	push   0x5
    58cb:	jmp    5860 <.plt>

00000000000058d0 <xc_domain_memory_exchange_pages@plt>:
    58d0:	jmp    QWORD PTR [rip+0x227772]        # 22d048 <xc_domain_memory_exchange_pages>
    58d6:	push   0x6
    58db:	jmp    5860 <.plt>

00000000000058e0 <gzclose@plt>:
    58e0:	jmp    QWORD PTR [rip+0x22776a]        # 22d050 <gzclose>
    58e6:	push   0x7
    58eb:	jmp    5860 <.plt>

00000000000058f0 <__snprintf_chk@plt>:
    58f0:	jmp    QWORD PTR [rip+0x227762]        # 22d058 <__snprintf_chk@GLIBC_2.3.4>
    58f6:	push   0x8
    58fb:	jmp    5860 <.plt>

0000000000005900 <free@plt>:
    5900:	jmp    QWORD PTR [rip+0x22775a]        # 22d060 <free@GLIBC_2.2.5>
    5906:	push   0x9
    590b:	jmp    5860 <.plt>

0000000000005910 <xc_clear_domain_pages@plt>:
    5910:	jmp    QWORD PTR [rip+0x227752]        # 22d068 <xc_clear_domain_pages>
    5916:	push   0xa
    591b:	jmp    5860 <.plt>

0000000000005920 <xc_unmap_domain_meminfo@plt>:
    5920:	jmp    QWORD PTR [rip+0x22774a]        # 22d070 <xc_unmap_domain_meminfo>
    5926:	push   0xb
    592b:	jmp    5860 <.plt>

0000000000005930 <elf_xen_parse_features@plt>:
    5930:	jmp    QWORD PTR [rip+0x227742]        # 22d078 <elf_xen_parse_features@@Base+0x218a38>
    5936:	push   0xc
    593b:	jmp    5860 <.plt>

0000000000005940 <__errno_location@plt>:
    5940:	jmp    QWORD PTR [rip+0x22773a]        # 22d080 <__errno_location@GLIBC_2.2.5>
    5946:	push   0xd
    594b:	jmp    5860 <.plt>

0000000000005950 <xc_vcpu_getinfo@plt>:
    5950:	jmp    QWORD PTR [rip+0x227732]        # 22d088 <xc_vcpu_getinfo>
    5956:	push   0xe
    595b:	jmp    5860 <.plt>

0000000000005960 <unlink@plt>:
    5960:	jmp    QWORD PTR [rip+0x22772a]        # 22d090 <unlink@GLIBC_2.2.5>
    5966:	push   0xf
    596b:	jmp    5860 <.plt>

0000000000005970 <xc_dom_update_guest_p2m@plt>:
    5970:	jmp    QWORD PTR [rip+0x227722]        # 22d098 <xc_dom_update_guest_p2m@@Base+0x215238>
    5976:	push   0x10
    597b:	jmp    5860 <.plt>

0000000000005980 <strncpy@plt>:
    5980:	jmp    QWORD PTR [rip+0x22771a]        # 22d0a0 <strncpy@GLIBC_2.2.5>
    5986:	push   0x11
    598b:	jmp    5860 <.plt>

0000000000005990 <mfn_in_pseudophysmap@plt>:
    5990:	jmp    QWORD PTR [rip+0x227712]        # 22d0a8 <mfn_in_pseudophysmap@@Base+0x2258b8>
    5996:	push   0x12
    599b:	jmp    5860 <.plt>

00000000000059a0 <xc_gnttab_op@plt>:
    59a0:	jmp    QWORD PTR [rip+0x22770a]        # 22d0b0 <xc_gnttab_op>
    59a6:	push   0x13
    59ab:	jmp    5860 <.plt>

00000000000059b0 <lzma_code@plt>:
    59b0:	jmp    QWORD PTR [rip+0x227702]        # 22d0b8 <lzma_code@XZ_5.0>
    59b6:	push   0x14
    59bb:	jmp    5860 <.plt>

00000000000059c0 <xenforeignmemory_map@plt>:
    59c0:	jmp    QWORD PTR [rip+0x2276fa]        # 22d0c0 <xenforeignmemory_map>
    59c6:	push   0x15
    59cb:	jmp    5860 <.plt>

00000000000059d0 <xc_domctl@plt>:
    59d0:	jmp    QWORD PTR [rip+0x2276f2]        # 22d0c8 <xc_domctl>
    59d6:	push   0x16
    59db:	jmp    5860 <.plt>

00000000000059e0 <xc_dom_do_gunzip@plt>:
    59e0:	jmp    QWORD PTR [rip+0x2276ea]        # 22d0d0 <xc_dom_do_gunzip@@Base+0x2165a0>
    59e6:	push   0x17
    59eb:	jmp    5860 <.plt>

00000000000059f0 <inflate@plt>:
    59f0:	jmp    QWORD PTR [rip+0x2276e2]        # 22d0d8 <inflate>
    59f6:	push   0x18
    59fb:	jmp    5860 <.plt>

0000000000005a00 <xc_dom_alloc_segment@plt>:
    5a00:	jmp    QWORD PTR [rip+0x2276da]        # 22d0e0 <xc_dom_alloc_segment@@Base+0x2160c0>
    5a06:	push   0x19
    5a0b:	jmp    5860 <.plt>

0000000000005a10 <xenforeignmemory_unmap_resource@plt>:
    5a10:	jmp    QWORD PTR [rip+0x2276d2]        # 22d0e8 <xenforeignmemory_unmap_resource>
    5a16:	push   0x1a
    5a1b:	jmp    5860 <.plt>

0000000000005a20 <xc_set_progress_prefix@plt>:
    5a20:	jmp    QWORD PTR [rip+0x2276ca]        # 22d0f0 <xc_set_progress_prefix>
    5a26:	push   0x1b
    5a2b:	jmp    5860 <.plt>

0000000000005a30 <xc_get_cpu_featureset_size@plt>:
    5a30:	jmp    QWORD PTR [rip+0x2276c2]        # 22d0f8 <xc_get_cpu_featureset_size@@Base+0x20d5e8>
    5a36:	push   0x1c
    5a3b:	jmp    5860 <.plt>

0000000000005a40 <xc__hypercall_bounce_pre@plt>:
    5a40:	jmp    QWORD PTR [rip+0x2276ba]        # 22d100 <xc__hypercall_bounce_pre>
    5a46:	push   0x1d
    5a4b:	jmp    5860 <.plt>

0000000000005a50 <xc_dom_strdup@plt>:
    5a50:	jmp    QWORD PTR [rip+0x2276b2]        # 22d108 <xc_dom_strdup@@Base+0x2166e8>
    5a56:	push   0x1e
    5a5b:	jmp    5860 <.plt>

0000000000005a60 <xc_dom_malloc@plt>:
    5a60:	jmp    QWORD PTR [rip+0x2276aa]        # 22d110 <xc_dom_malloc@@Base+0x216c50>
    5a66:	push   0x1f
    5a6b:	jmp    5860 <.plt>

0000000000005a70 <elf_mark_broken@plt>:
    5a70:	jmp    QWORD PTR [rip+0x2276a2]        # 22d118 <elf_mark_broken@@Base+0x21a958>
    5a76:	push   0x20
    5a7b:	jmp    5860 <.plt>

0000000000005a80 <x86_cpuid_lookup_deep_deps@plt>:
    5a80:	jmp    QWORD PTR [rip+0x22769a]        # 22d120 <x86_cpuid_lookup_deep_deps@@Base+0x2175e0>
    5a86:	push   0x21
    5a8b:	jmp    5860 <.plt>

0000000000005a90 <elf_shdr_count@plt>:
    5a90:	jmp    QWORD PTR [rip+0x227692]        # 22d128 <elf_shdr_count@@Base+0x21a718>
    5a96:	push   0x22
    5a9b:	jmp    5860 <.plt>

0000000000005aa0 <fcntl@plt>:
    5aa0:	jmp    QWORD PTR [rip+0x22768a]        # 22d130 <fcntl@GLIBC_2.2.5>
    5aa6:	push   0x23
    5aab:	jmp    5860 <.plt>

0000000000005ab0 <xc_gnttab_map_table_v2@plt>:
    5ab0:	jmp    QWORD PTR [rip+0x227682]        # 22d138 <xc_gnttab_map_table_v2>
    5ab6:	push   0x24
    5abb:	jmp    5860 <.plt>

0000000000005ac0 <xc_dom_boot_image@plt>:
    5ac0:	jmp    QWORD PTR [rip+0x22767a]        # 22d140 <xc_dom_boot_image@@Base+0x214470>
    5ac6:	push   0x25
    5acb:	jmp    5860 <.plt>

0000000000005ad0 <xc_dom_register_external@plt>:
    5ad0:	jmp    QWORD PTR [rip+0x227672]        # 22d148 <xc_dom_register_external@@Base+0x216a98>
    5ad6:	push   0x26
    5adb:	jmp    5860 <.plt>

0000000000005ae0 <gzdopen@plt>:
    5ae0:	jmp    QWORD PTR [rip+0x22766a]        # 22d150 <gzdopen>
    5ae6:	push   0x27
    5aeb:	jmp    5860 <.plt>

0000000000005af0 <xc_dom_translated@plt>:
    5af0:	jmp    QWORD PTR [rip+0x227662]        # 22d158 <xc_dom_translated@@Base+0x20f348>
    5af6:	push   0x28
    5afb:	jmp    5860 <.plt>

0000000000005b00 <xc_make_page_below_4G@plt>:
    5b00:	jmp    QWORD PTR [rip+0x22765a]        # 22d160 <xc_make_page_below_4G>
    5b06:	push   0x29
    5b0b:	jmp    5860 <.plt>

0000000000005b10 <xc_core_arch_get_scratch_gpfn@plt>:
    5b10:	jmp    QWORD PTR [rip+0x227652]        # 22d168 <xc_core_arch_get_scratch_gpfn>
    5b16:	push   0x2a
    5b1b:	jmp    5860 <.plt>

0000000000005b20 <elf_init@plt>:
    5b20:	jmp    QWORD PTR [rip+0x22764a]        # 22d170 <elf_init@@Base+0x219db0>
    5b26:	push   0x2b
    5b2b:	jmp    5860 <.plt>

0000000000005b30 <elf_xen_parse@plt>:
    5b30:	jmp    QWORD PTR [rip+0x227642]        # 22d178 <elf_xen_parse@@Base+0x218048>
    5b36:	push   0x2c
    5b3b:	jmp    5860 <.plt>

0000000000005b40 <xc_domain_getinfo@plt>:
    5b40:	jmp    QWORD PTR [rip+0x22763a]        # 22d180 <xc_domain_getinfo>
    5b46:	push   0x2d
    5b4b:	jmp    5860 <.plt>

0000000000005b50 <strlen@plt>:
    5b50:	jmp    QWORD PTR [rip+0x227632]        # 22d188 <strlen@GLIBC_2.2.5>
    5b56:	push   0x2e
    5b5b:	jmp    5860 <.plt>

0000000000005b60 <xc_dom_printf@plt>:
    5b60:	jmp    QWORD PTR [rip+0x22762a]        # 22d190 <xc_dom_printf@@Base+0x217230>
    5b66:	push   0x2f
    5b6b:	jmp    5860 <.plt>

0000000000005b70 <populate_pfns@plt>:
    5b70:	jmp    QWORD PTR [rip+0x227622]        # 22d198 <populate_pfns@@Base+0x220448>
    5b76:	push   0x30
    5b7b:	jmp    5860 <.plt>

0000000000005b80 <__stack_chk_fail@plt>:
    5b80:	jmp    QWORD PTR [rip+0x22761a]        # 22d1a0 <__stack_chk_fail@GLIBC_2.4>
    5b86:	push   0x31
    5b8b:	jmp    5860 <.plt>

0000000000005b90 <xenevtchn_bind_interdomain@plt>:
    5b90:	jmp    QWORD PTR [rip+0x227612]        # 22d1a8 <xenevtchn_bind_interdomain@VERS_1.0>
    5b96:	push   0x32
    5b9b:	jmp    5860 <.plt>

0000000000005ba0 <mmap@plt>:
    5ba0:	jmp    QWORD PTR [rip+0x22760a]        # 22d1b0 <mmap@GLIBC_2.2.5>
    5ba6:	push   0x33
    5bab:	jmp    5860 <.plt>

0000000000005bb0 <xtl_logv@plt>:
    5bb0:	jmp    QWORD PTR [rip+0x227602]        # 22d1b8 <xtl_logv>
    5bb6:	push   0x34
    5bbb:	jmp    5860 <.plt>

0000000000005bc0 <read_record@plt>:
    5bc0:	jmp    QWORD PTR [rip+0x2275fa]        # 22d1c0 <read_record@@Base+0x225db0>
    5bc6:	push   0x35
    5bcb:	jmp    5860 <.plt>

0000000000005bd0 <elf_note_name@plt>:
    5bd0:	jmp    QWORD PTR [rip+0x2275f2]        # 22d1c8 <elf_note_name@@Base+0x21a178>
    5bd6:	push   0x36
    5bdb:	jmp    5860 <.plt>

0000000000005be0 <xc_version@plt>:
    5be0:	jmp    QWORD PTR [rip+0x2275ea]        # 22d1d0 <xc_version>
    5be6:	push   0x37
    5beb:	jmp    5860 <.plt>

0000000000005bf0 <strchr@plt>:
    5bf0:	jmp    QWORD PTR [rip+0x2275e2]        # 22d1d8 <strchr@GLIBC_2.2.5>
    5bf6:	push   0x38
    5bfb:	jmp    5860 <.plt>

0000000000005c00 <elf_memcpy_safe@plt>:
    5c00:	jmp    QWORD PTR [rip+0x2275da]        # 22d1e0 <elf_memcpy_safe@@Base+0x21a940>
    5c06:	push   0x39
    5c0b:	jmp    5860 <.plt>

0000000000005c10 <xc_report_progress_single@plt>:
    5c10:	jmp    QWORD PTR [rip+0x2275d2]        # 22d1e8 <xc_report_progress_single>
    5c16:	push   0x3a
    5c1b:	jmp    5860 <.plt>

0000000000005c20 <xenevtchn_unmask@plt>:
    5c20:	jmp    QWORD PTR [rip+0x2275ca]        # 22d1f0 <xenevtchn_unmask@VERS_1.0>
    5c26:	push   0x3b
    5c2b:	jmp    5860 <.plt>

0000000000005c30 <xc_domain_subscribe_for_suspend@plt>:
    5c30:	jmp    QWORD PTR [rip+0x2275c2]        # 22d1f8 <xc_domain_subscribe_for_suspend>
    5c36:	push   0x3c
    5c3b:	jmp    5860 <.plt>

0000000000005c40 <xc_report_progress_step@plt>:
    5c40:	jmp    QWORD PTR [rip+0x2275ba]        # 22d200 <xc_report_progress_step>
    5c46:	push   0x3d
    5c4b:	jmp    5860 <.plt>

0000000000005c50 <xc_domain_hvm_getcontext@plt>:
    5c50:	jmp    QWORD PTR [rip+0x2275b2]        # 22d208 <xc_domain_hvm_getcontext>
    5c56:	push   0x3e
    5c5b:	jmp    5860 <.plt>

0000000000005c60 <lseek@plt>:
    5c60:	jmp    QWORD PTR [rip+0x2275aa]        # 22d210 <lseek@GLIBC_2.2.5>
    5c66:	push   0x3f
    5c6b:	jmp    5860 <.plt>

0000000000005c70 <__assert_fail@plt>:
    5c70:	jmp    QWORD PTR [rip+0x2275a2]        # 22d218 <__assert_fail@GLIBC_2.2.5>
    5c76:	push   0x40
    5c7b:	jmp    5860 <.plt>

0000000000005c80 <xenevtchn_pending@plt>:
    5c80:	jmp    QWORD PTR [rip+0x22759a]        # 22d220 <xenevtchn_pending@VERS_1.0>
    5c86:	push   0x41
    5c8b:	jmp    5860 <.plt>

0000000000005c90 <elf_phdr_is_loadable@plt>:
    5c90:	jmp    QWORD PTR [rip+0x227592]        # 22d228 <elf_phdr_is_loadable@@Base+0x21a028>
    5c96:	push   0x42
    5c9b:	jmp    5860 <.plt>

0000000000005ca0 <memset@plt>:
    5ca0:	jmp    QWORD PTR [rip+0x22758a]        # 22d230 <memset@GLIBC_2.2.5>
    5ca6:	push   0x43
    5cab:	jmp    5860 <.plt>

0000000000005cb0 <xc_try_lz4_decode@plt>:
    5cb0:	jmp    QWORD PTR [rip+0x227582]        # 22d238 <xc_try_lz4_decode@@Base+0x212b18>
    5cb6:	push   0x44
    5cbb:	jmp    5860 <.plt>

0000000000005cc0 <strnlen@plt>:
    5cc0:	jmp    QWORD PTR [rip+0x22757a]        # 22d240 <strnlen@GLIBC_2.2.5>
    5cc6:	push   0x45
    5ccb:	jmp    5860 <.plt>

0000000000005cd0 <x86_pv_domain_info@plt>:
    5cd0:	jmp    QWORD PTR [rip+0x227572]        # 22d248 <x86_pv_domain_info@@Base+0x225848>
    5cd6:	push   0x46
    5cdb:	jmp    5860 <.plt>

0000000000005ce0 <xc_dom_pfn_to_ptr_retcount@plt>:
    5ce0:	jmp    QWORD PTR [rip+0x22756a]        # 22d250 <xc_dom_pfn_to_ptr_retcount@@Base+0x216530>
    5ce6:	push   0x47
    5ceb:	jmp    5860 <.plt>

0000000000005cf0 <close@plt>:
    5cf0:	jmp    QWORD PTR [rip+0x227562]        # 22d258 <close@GLIBC_2.2.5>
    5cf6:	push   0x48
    5cfb:	jmp    5860 <.plt>

0000000000005d00 <elf_note_numeric_array@plt>:
    5d00:	jmp    QWORD PTR [rip+0x22755a]        # 22d260 <elf_note_numeric_array@@Base+0x21a180>
    5d06:	push   0x49
    5d0b:	jmp    5860 <.plt>

0000000000005d10 <xc_vcpu_setcontext@plt>:
    5d10:	jmp    QWORD PTR [rip+0x227552]        # 22d268 <xc_vcpu_setcontext>
    5d16:	push   0x4a
    5d1b:	jmp    5860 <.plt>

0000000000005d20 <xc_domain_populate_physmap_exact@plt>:
    5d20:	jmp    QWORD PTR [rip+0x22754a]        # 22d270 <xc_domain_populate_physmap_exact>
    5d26:	push   0x4b
    5d2b:	jmp    5860 <.plt>

0000000000005d30 <dhdr_type_to_str@plt>:
    5d30:	jmp    QWORD PTR [rip+0x227542]        # 22d278 <dhdr_type_to_str@@Base+0x226098>
    5d36:	push   0x4c
    5d3b:	jmp    5860 <.plt>

0000000000005d40 <strtok_r@plt>:
    5d40:	jmp    QWORD PTR [rip+0x22753a]        # 22d280 <strtok_r@GLIBC_2.2.5>
    5d46:	push   0x4d
    5d4b:	jmp    5860 <.plt>

0000000000005d50 <xc_report_error@plt>:
    5d50:	jmp    QWORD PTR [rip+0x227532]        # 22d288 <xc_report_error>
    5d56:	push   0x4e
    5d5b:	jmp    5860 <.plt>

0000000000005d60 <xc_elf_set_logfile@plt>:
    5d60:	jmp    QWORD PTR [rip+0x22752a]        # 22d290 <xc_elf_set_logfile@@Base+0x213b00>
    5d66:	push   0x4f
    5d6b:	jmp    5860 <.plt>

0000000000005d70 <memcmp@plt>:
    5d70:	jmp    QWORD PTR [rip+0x227522]        # 22d298 <memcmp@GLIBC_2.2.5>
    5d76:	push   0x50
    5d7b:	jmp    5860 <.plt>

0000000000005d80 <xc_dom_unmap_one@plt>:
    5d80:	jmp    QWORD PTR [rip+0x22751a]        # 22d2a0 <xc_dom_unmap_one@@Base+0x215ea0>
    5d86:	push   0x51
    5d8b:	jmp    5860 <.plt>

0000000000005d90 <dump_bad_pseudophysmap_entry@plt>:
    5d90:	jmp    QWORD PTR [rip+0x227512]        # 22d2a8 <dump_bad_pseudophysmap_entry@@Base+0x225a28>
    5d96:	push   0x52
    5d9b:	jmp    5860 <.plt>

0000000000005da0 <x86_pv_map_m2p@plt>:
    5da0:	jmp    QWORD PTR [rip+0x22750a]        # 22d2b0 <x86_pv_map_m2p@@Base+0x225780>
    5da6:	push   0x53
    5dab:	jmp    5860 <.plt>

0000000000005db0 <strtoull@plt>:
    5db0:	jmp    QWORD PTR [rip+0x227502]        # 22d2b8 <strtoull@GLIBC_2.2.5>
    5db6:	push   0x54
    5dbb:	jmp    5860 <.plt>

0000000000005dc0 <__asprintf_chk@plt>:
    5dc0:	jmp    QWORD PTR [rip+0x2274fa]        # 22d2c0 <__asprintf_chk@GLIBC_2.8>
    5dc6:	push   0x55
    5dcb:	jmp    5860 <.plt>

0000000000005dd0 <xc_domain_nr_gpfns@plt>:
    5dd0:	jmp    QWORD PTR [rip+0x2274f2]        # 22d2c8 <xc_domain_nr_gpfns>
    5dd6:	push   0x56
    5ddb:	jmp    5860 <.plt>

0000000000005de0 <calloc@plt>:
    5de0:	jmp    QWORD PTR [rip+0x2274ea]        # 22d2d0 <calloc@GLIBC_2.2.5>
    5de6:	push   0x57
    5deb:	jmp    5860 <.plt>

0000000000005df0 <xenevtchn_unbind@plt>:
    5df0:	jmp    QWORD PTR [rip+0x2274e2]        # 22d2d8 <xenevtchn_unbind@VERS_1.0>
    5df6:	push   0x58
    5dfb:	jmp    5860 <.plt>

0000000000005e00 <xc_map_domain_meminfo@plt>:
    5e00:	jmp    QWORD PTR [rip+0x2274da]        # 22d2e0 <xc_map_domain_meminfo>
    5e06:	push   0x59
    5e0b:	jmp    5860 <.plt>

0000000000005e10 <strcmp@plt>:
    5e10:	jmp    QWORD PTR [rip+0x2274d2]        # 22d2e8 <strcmp@GLIBC_2.2.5>
    5e16:	push   0x5a
    5e1b:	jmp    5860 <.plt>

0000000000005e20 <xc_dom_module_file@plt>:
    5e20:	jmp    QWORD PTR [rip+0x2274ca]        # 22d2f0 <xc_dom_module_file@@Base+0x215960>
    5e26:	push   0x5b
    5e2b:	jmp    5860 <.plt>

0000000000005e30 <xencall1@plt>:
    5e30:	jmp    QWORD PTR [rip+0x2274c2]        # 22d2f8 <xencall1>
    5e36:	push   0x5c
    5e3b:	jmp    5860 <.plt>

0000000000005e40 <xenforeignmemory_unmap@plt>:
    5e40:	jmp    QWORD PTR [rip+0x2274ba]        # 22d300 <xenforeignmemory_unmap>
    5e46:	push   0x5d
    5e4b:	jmp    5860 <.plt>

0000000000005e50 <cr3_to_mfn@plt>:
    5e50:	jmp    QWORD PTR [rip+0x2274b2]        # 22d308 <cr3_to_mfn@@Base+0x225988>
    5e56:	push   0x5e
    5e5b:	jmp    5860 <.plt>

0000000000005e60 <gzread@plt>:
    5e60:	jmp    QWORD PTR [rip+0x2274aa]        # 22d310 <gzread>
    5e66:	push   0x5f
    5e6b:	jmp    5860 <.plt>

0000000000005e70 <__memcpy_chk@plt>:
    5e70:	jmp    QWORD PTR [rip+0x2274a2]        # 22d318 <__memcpy_chk@GLIBC_2.3.4>
    5e76:	push   0x60
    5e7b:	jmp    5860 <.plt>

0000000000005e80 <xc_get_pfn_type_batch@plt>:
    5e80:	jmp    QWORD PTR [rip+0x22749a]        # 22d320 <xc_get_pfn_type_batch>
    5e86:	push   0x61
    5e8b:	jmp    5860 <.plt>

0000000000005e90 <elf_call_log_callback@plt>:
    5e90:	jmp    QWORD PTR [rip+0x227492]        # 22d328 <elf_call_log_callback@@Base+0x21a048>
    5e96:	push   0x62
    5e9b:	jmp    5860 <.plt>

0000000000005ea0 <rec_type_to_str@plt>:
    5ea0:	jmp    QWORD PTR [rip+0x22748a]        # 22d330 <rec_type_to_str@@Base+0x226120>
    5ea6:	push   0x63
    5eab:	jmp    5860 <.plt>

0000000000005eb0 <memcpy@plt>:
    5eb0:	jmp    QWORD PTR [rip+0x227482]        # 22d338 <memcpy@GLIBC_2.14>
    5eb6:	push   0x64
    5ebb:	jmp    5860 <.plt>

0000000000005ec0 <xc_dom_mem_init@plt>:
    5ec0:	jmp    QWORD PTR [rip+0x22747a]        # 22d340 <xc_dom_mem_init@@Base+0x2155b0>
    5ec6:	push   0x65
    5ecb:	jmp    5860 <.plt>

0000000000005ed0 <elf_parse_binary@plt>:
    5ed0:	jmp    QWORD PTR [rip+0x227472]        # 22d348 <elf_parse_binary@@Base+0x219a78>
    5ed6:	push   0x66
    5edb:	jmp    5860 <.plt>

0000000000005ee0 <elf_round_up@plt>:
    5ee0:	jmp    QWORD PTR [rip+0x22746a]        # 22d350 <elf_round_up@@Base+0x21a960>
    5ee6:	push   0x67
    5eeb:	jmp    5860 <.plt>

0000000000005ef0 <xc_add_mmu_update@plt>:
    5ef0:	jmp    QWORD PTR [rip+0x227462]        # 22d358 <xc_add_mmu_update>
    5ef6:	push   0x68
    5efb:	jmp    5860 <.plt>

0000000000005f00 <inflateEnd@plt>:
    5f00:	jmp    QWORD PTR [rip+0x22745a]        # 22d360 <inflateEnd>
    5f06:	push   0x69
    5f0b:	jmp    5860 <.plt>

0000000000005f10 <elf_strval@plt>:
    5f10:	jmp    QWORD PTR [rip+0x227452]        # 22d368 <elf_strval@@Base+0x21a758>
    5f16:	push   0x6a
    5f1b:	jmp    5860 <.plt>

0000000000005f20 <xc_dom_boot_domU_map@plt>:
    5f20:	jmp    QWORD PTR [rip+0x22744a]        # 22d370 <xc_dom_boot_domU_map@@Base+0x214840>
    5f26:	push   0x6b
    5f2b:	jmp    5860 <.plt>

0000000000005f30 <xc_alloc_mmu_updates@plt>:
    5f30:	jmp    QWORD PTR [rip+0x227442]        # 22d378 <xc_alloc_mmu_updates>
    5f36:	push   0x6c
    5f3b:	jmp    5860 <.plt>

0000000000005f40 <xc_dom_gnttab_init@plt>:
    5f40:	jmp    QWORD PTR [rip+0x22743a]        # 22d380 <xc_dom_gnttab_init@@Base+0x213f20>
    5f46:	push   0x6d
    5f4b:	jmp    5860 <.plt>

0000000000005f50 <xc_map_foreign_pages@plt>:
    5f50:	jmp    QWORD PTR [rip+0x227432]        # 22d388 <xc_map_foreign_pages>
    5f56:	push   0x6e
    5f5b:	jmp    5860 <.plt>

0000000000005f60 <xc_mmuext_op@plt>:
    5f60:	jmp    QWORD PTR [rip+0x22742a]        # 22d390 <xc_mmuext_op>
    5f66:	push   0x6f
    5f6b:	jmp    5860 <.plt>

0000000000005f70 <xc_dom_boot_mem_init@plt>:
    5f70:	jmp    QWORD PTR [rip+0x227422]        # 22d398 <xc_dom_boot_mem_init@@Base+0x2148d8>
    5f76:	push   0x70
    5f7b:	jmp    5860 <.plt>

0000000000005f80 <elf_sym_by_name@plt>:
    5f80:	jmp    QWORD PTR [rip+0x22741a]        # 22d3a0 <elf_sym_by_name@@Base+0x21a470>
    5f86:	push   0x71
    5f8b:	jmp    5860 <.plt>

0000000000005f90 <lzma_stream_decoder@plt>:
    5f90:	jmp    QWORD PTR [rip+0x227412]        # 22d3a8 <lzma_stream_decoder@XZ_5.0>
    5f96:	push   0x72
    5f9b:	jmp    5860 <.plt>

0000000000005fa0 <handle_tsc_info@plt>:
    5fa0:	jmp    QWORD PTR [rip+0x22740a]        # 22d3b0 <handle_tsc_info@@Base+0x225cc0>
    5fa6:	push   0x73
    5fab:	jmp    5860 <.plt>

0000000000005fb0 <__xstat@plt>:
    5fb0:	jmp    QWORD PTR [rip+0x227402]        # 22d3b8 <__xstat@GLIBC_2.2.5>
    5fb6:	push   0x74
    5fbb:	jmp    5860 <.plt>

0000000000005fc0 <lzma_alone_decoder@plt>:
    5fc0:	jmp    QWORD PTR [rip+0x2273fa]        # 22d3c0 <lzma_alone_decoder@XZ_5.0>
    5fc6:	push   0x75
    5fcb:	jmp    5860 <.plt>

0000000000005fd0 <xc_dom_release@plt>:
    5fd0:	jmp    QWORD PTR [rip+0x2273f2]        # 22d3c8 <xc_dom_release@@Base+0x215d98>
    5fd6:	push   0x76
    5fdb:	jmp    5860 <.plt>

0000000000005fe0 <lzma_end@plt>:
    5fe0:	jmp    QWORD PTR [rip+0x2273ea]        # 22d3d0 <lzma_end@XZ_5.0>
    5fe6:	push   0x77
    5feb:	jmp    5860 <.plt>

0000000000005ff0 <malloc@plt>:
    5ff0:	jmp    QWORD PTR [rip+0x2273e2]        # 22d3d8 <malloc@GLIBC_2.2.5>
    5ff6:	push   0x78
    5ffb:	jmp    5860 <.plt>

0000000000006000 <xtl_createlogger_stdiostream@plt>:
    6000:	jmp    QWORD PTR [rip+0x2273da]        # 22d3e0 <xtl_createlogger_stdiostream>
    6006:	push   0x79
    600b:	jmp    5860 <.plt>

0000000000006010 <xc_domain_set_pod_target@plt>:
    6010:	jmp    QWORD PTR [rip+0x2273d2]        # 22d3e8 <xc_domain_set_pod_target>
    6016:	push   0x7a
    601b:	jmp    5860 <.plt>

0000000000006020 <pin_table@plt>:
    6020:	jmp    QWORD PTR [rip+0x2273ca]        # 22d3f0 <pin_table@@Base+0x226840>
    6026:	push   0x7b
    602b:	jmp    5860 <.plt>

0000000000006030 <write_exact@plt>:
    6030:	jmp    QWORD PTR [rip+0x2273c2]        # 22d3f8 <write_exact>
    6036:	push   0x7c
    603b:	jmp    5860 <.plt>

0000000000006040 <elf_segment_end@plt>:
    6040:	jmp    QWORD PTR [rip+0x2273ba]        # 22d400 <elf_segment_end@@Base+0x21a560>
    6046:	push   0x7d
    604b:	jmp    5860 <.plt>

0000000000006050 <xc_hvm_param_set@plt>:
    6050:	jmp    QWORD PTR [rip+0x2273b2]        # 22d408 <xc_hvm_param_set>
    6056:	push   0x7e
    605b:	jmp    5860 <.plt>

0000000000006060 <__fxstat@plt>:
    6060:	jmp    QWORD PTR [rip+0x2273aa]        # 22d410 <__fxstat@GLIBC_2.2.5>
    6066:	push   0x7f
    606b:	jmp    5860 <.plt>

0000000000006070 <elf_shdr_by_index@plt>:
    6070:	jmp    QWORD PTR [rip+0x2273a2]        # 22d418 <elf_shdr_by_index@@Base+0x21a948>
    6076:	push   0x80
    607b:	jmp    5860 <.plt>

0000000000006080 <elf_strfmt@plt>:
    6080:	jmp    QWORD PTR [rip+0x22739a]        # 22d420 <elf_strfmt@@Base+0x21a6b0>
    6086:	push   0x81
    608b:	jmp    5860 <.plt>

0000000000006090 <do_memory_op@plt>:
    6090:	jmp    QWORD PTR [rip+0x227392]        # 22d428 <do_memory_op>
    6096:	push   0x82
    609b:	jmp    5860 <.plt>

00000000000060a0 <xc_dom_panic_func@plt>:
    60a0:	jmp    QWORD PTR [rip+0x22738a]        # 22d430 <xc_dom_panic_func@@Base+0x2172d0>
    60a6:	push   0x83
    60ab:	jmp    5860 <.plt>

00000000000060b0 <write_tsc_info@plt>:
    60b0:	jmp    QWORD PTR [rip+0x227382]        # 22d438 <write_tsc_info@@Base+0x225e18>
    60b6:	push   0x84
    60bb:	jmp    5860 <.plt>

00000000000060c0 <xc_memalign@plt>:
    60c0:	jmp    QWORD PTR [rip+0x22737a]        # 22d440 <xc_memalign>
    60c6:	push   0x85
    60cb:	jmp    5860 <.plt>

00000000000060d0 <elf_note_next@plt>:
    60d0:	jmp    QWORD PTR [rip+0x227372]        # 22d448 <elf_note_next@@Base+0x21a2e8>
    60d6:	push   0x86
    60db:	jmp    5860 <.plt>

00000000000060e0 <__vsnprintf_chk@plt>:
    60e0:	jmp    QWORD PTR [rip+0x22736a]        # 22d450 <__vsnprintf_chk@GLIBC_2.3.4>
    60e6:	push   0x87
    60eb:	jmp    5860 <.plt>

00000000000060f0 <xc_domain_claim_pages@plt>:
    60f0:	jmp    QWORD PTR [rip+0x227362]        # 22d458 <xc_domain_claim_pages>
    60f6:	push   0x88
    60fb:	jmp    5860 <.plt>

0000000000006100 <xc_gnttab_map_table_v1@plt>:
    6100:	jmp    QWORD PTR [rip+0x22735a]        # 22d460 <xc_gnttab_map_table_v1>
    6106:	push   0x89
    610b:	jmp    5860 <.plt>

0000000000006110 <elf_note_numeric@plt>:
    6110:	jmp    QWORD PTR [rip+0x227352]        # 22d468 <elf_note_numeric@@Base+0x21a3e8>
    6116:	push   0x8a
    611b:	jmp    5860 <.plt>

0000000000006120 <elf_is_elfbinary@plt>:
    6120:	jmp    QWORD PTR [rip+0x22734a]        # 22d470 <elf_is_elfbinary@@Base+0x21a290>
    6126:	push   0x8b
    612b:	jmp    5860 <.plt>

0000000000006130 <elf_segment_start@plt>:
    6130:	jmp    QWORD PTR [rip+0x227342]        # 22d478 <elf_segment_start@@Base+0x21a618>
    6136:	push   0x8c
    613b:	jmp    5860 <.plt>

0000000000006140 <elf_access_unsigned@plt>:
    6140:	jmp    QWORD PTR [rip+0x22733a]        # 22d480 <elf_access_unsigned@@Base+0x21ab40>
    6146:	push   0x8d
    614b:	jmp    5860 <.plt>

0000000000006150 <elf_shdr_by_name@plt>:
    6150:	jmp    QWORD PTR [rip+0x227332]        # 22d488 <elf_shdr_by_name@@Base+0x21a7a8>
    6156:	push   0x8e
    615b:	jmp    5860 <.plt>

0000000000006160 <realloc@plt>:
    6160:	jmp    QWORD PTR [rip+0x22732a]        # 22d490 <realloc@GLIBC_2.2.5>
    6166:	push   0x8f
    616b:	jmp    5860 <.plt>

0000000000006170 <xc_domain_get_guest_width@plt>:
    6170:	jmp    QWORD PTR [rip+0x227322]        # 22d498 <xc_domain_get_guest_width>
    6176:	push   0x90
    617b:	jmp    5860 <.plt>

0000000000006180 <elf_get_ptr@plt>:
    6180:	jmp    QWORD PTR [rip+0x22731a]        # 22d4a0 <elf_get_ptr@@Base+0x219a60>
    6186:	push   0x91
    618b:	jmp    5860 <.plt>

0000000000006190 <xc__hypercall_buffer_free@plt>:
    6190:	jmp    QWORD PTR [rip+0x227312]        # 22d4a8 <xc__hypercall_buffer_free>
    6196:	push   0x92
    619b:	jmp    5860 <.plt>

00000000000061a0 <elf_xen_parse_note@plt>:
    61a0:	jmp    QWORD PTR [rip+0x22730a]        # 22d4b0 <elf_xen_parse_note@@Base+0x218cd0>
    61a6:	push   0x93
    61ab:	jmp    5860 <.plt>

00000000000061b0 <munmap@plt>:
    61b0:	jmp    QWORD PTR [rip+0x227302]        # 22d4b8 <munmap@GLIBC_2.2.5>
    61b6:	push   0x94
    61bb:	jmp    5860 <.plt>

00000000000061c0 <elf_set_log@plt>:
    61c0:	jmp    QWORD PTR [rip+0x2272fa]        # 22d4c0 <elf_set_log@@Base+0x219d90>
    61c6:	push   0x95
    61cb:	jmp    5860 <.plt>

00000000000061d0 <xc_domain_hvm_setcontext@plt>:
    61d0:	jmp    QWORD PTR [rip+0x2272f2]        # 22d4c8 <xc_domain_hvm_setcontext>
    61d6:	push   0x96
    61db:	jmp    5860 <.plt>

00000000000061e0 <xc_dom_gnttab_seed@plt>:
    61e0:	jmp    QWORD PTR [rip+0x2272ea]        # 22d4d0 <xc_dom_gnttab_seed@@Base+0x2143a0>
    61e6:	push   0x97
    61eb:	jmp    5860 <.plt>

00000000000061f0 <xc_flush_mmu_updates@plt>:
    61f0:	jmp    QWORD PTR [rip+0x2272e2]        # 22d4d8 <xc_flush_mmu_updates>
    61f6:	push   0x98
    61fb:	jmp    5860 <.plt>

0000000000006200 <xc_dom_log_memory_footprint@plt>:
    6200:	jmp    QWORD PTR [rip+0x2272da]        # 22d4e0 <xc_dom_log_memory_footprint@@Base+0x2170d0>
    6206:	push   0x99
    620b:	jmp    5860 <.plt>

0000000000006210 <xc__hypercall_bounce_post@plt>:
    6210:	jmp    QWORD PTR [rip+0x2272d2]        # 22d4e8 <xc__hypercall_bounce_post>
    6216:	push   0x9a
    621b:	jmp    5860 <.plt>

0000000000006220 <xc__hypercall_buffer_alloc@plt>:
    6220:	jmp    QWORD PTR [rip+0x2272ca]        # 22d4f0 <xc__hypercall_buffer_alloc>
    6226:	push   0x9b
    622b:	jmp    5860 <.plt>

0000000000006230 <memmove@plt>:
    6230:	jmp    QWORD PTR [rip+0x2272c2]        # 22d4f8 <memmove@GLIBC_2.2.5>
    6236:	push   0x9c
    623b:	jmp    5860 <.plt>

0000000000006240 <xc_dom_unmap_all@plt>:
    6240:	jmp    QWORD PTR [rip+0x2272ba]        # 22d500 <xc_dom_unmap_all@@Base+0x216040>
    6246:	push   0x9d
    624b:	jmp    5860 <.plt>

0000000000006250 <lz4_decompress_unknownoutputsize@plt>:
    6250:	jmp    QWORD PTR [rip+0x2272b2]        # 22d508 <lz4_decompress_unknownoutputsize@@Base+0x213198>
    6256:	push   0x9e
    625b:	jmp    5860 <.plt>

0000000000006260 <elf_memset_safe@plt>:
    6260:	jmp    QWORD PTR [rip+0x2272aa]        # 22d510 <elf_memset_safe@@Base+0x21ac10>
    6266:	push   0x9f
    626b:	jmp    5860 <.plt>

0000000000006270 <xc_dom_check_gzip@plt>:
    6270:	jmp    QWORD PTR [rip+0x2272a2]        # 22d518 <xc_dom_check_gzip@@Base+0x216a58>
    6276:	push   0xa0
    627b:	jmp    5860 <.plt>

0000000000006280 <elf_phdr_count@plt>:
    6280:	jmp    QWORD PTR [rip+0x22729a]        # 22d520 <elf_phdr_count@@Base+0x21aa90>
    6286:	push   0xa1
    628b:	jmp    5860 <.plt>

0000000000006290 <xc_vcpu_getcontext@plt>:
    6290:	jmp    QWORD PTR [rip+0x227292]        # 22d528 <xc_vcpu_getcontext>
    6296:	push   0xa2
    629b:	jmp    5860 <.plt>

00000000000062a0 <xc_domain_set_tsc_info@plt>:
    62a0:	jmp    QWORD PTR [rip+0x22728a]        # 22d530 <xc_domain_set_tsc_info>
    62a6:	push   0xa3
    62ab:	jmp    5860 <.plt>

00000000000062b0 <xc_dom_parse_image@plt>:
    62b0:	jmp    QWORD PTR [rip+0x227282]        # 22d538 <xc_dom_parse_image@@Base+0x215998>
    62b6:	push   0xa4
    62bb:	jmp    5860 <.plt>

00000000000062c0 <open@plt>:
    62c0:	jmp    QWORD PTR [rip+0x22727a]        # 22d540 <open@GLIBC_2.2.5>
    62c6:	push   0xa5
    62cb:	jmp    5860 <.plt>

00000000000062d0 <elf_note_desc@plt>:
    62d0:	jmp    QWORD PTR [rip+0x227272]        # 22d548 <elf_note_desc@@Base+0x21a4e8>
    62d6:	push   0xa6
    62db:	jmp    5860 <.plt>

00000000000062e0 <elf_section_end@plt>:
    62e0:	jmp    QWORD PTR [rip+0x22726a]        # 22d550 <elf_section_end@@Base+0x21a780>
    62e6:	push   0xa7
    62eb:	jmp    5860 <.plt>

00000000000062f0 <xc_machphys_mfn_list@plt>:
    62f0:	jmp    QWORD PTR [rip+0x227262]        # 22d558 <xc_machphys_mfn_list>
    62f6:	push   0xa8
    62fb:	jmp    5860 <.plt>

0000000000006300 <fopen@plt>:
    6300:	jmp    QWORD PTR [rip+0x22725a]        # 22d560 <fopen@GLIBC_2.2.5>
    6306:	push   0xa9
    630b:	jmp    5860 <.plt>

0000000000006310 <inflateInit2_@plt>:
    6310:	jmp    QWORD PTR [rip+0x227252]        # 22d568 <inflateInit2_>
    6316:	push   0xaa
    631b:	jmp    5860 <.plt>

0000000000006320 <xc_dom_pfn_to_ptr@plt>:
    6320:	jmp    QWORD PTR [rip+0x22724a]        # 22d570 <xc_dom_pfn_to_ptr@@Base+0x216590>
    6326:	push   0xab
    632b:	jmp    5860 <.plt>

0000000000006330 <xc__hypercall_buffer_free_pages@plt>:
    6330:	jmp    QWORD PTR [rip+0x227242]        # 22d578 <xc__hypercall_buffer_free_pages>
    6336:	push   0xac
    633b:	jmp    5860 <.plt>

0000000000006340 <xc_dom_compat_check@plt>:
    6340:	jmp    QWORD PTR [rip+0x22723a]        # 22d580 <xc_dom_compat_check@@Base+0x214ce0>
    6346:	push   0xad
    634b:	jmp    5860 <.plt>

0000000000006350 <elf_phdr_by_index@plt>:
    6350:	jmp    QWORD PTR [rip+0x227232]        # 22d588 <elf_phdr_by_index@@Base+0x21aa18>
    6356:	push   0xae
    635b:	jmp    5860 <.plt>

0000000000006360 <elf_set_xdest@plt>:
    6360:	jmp    QWORD PTR [rip+0x22722a]        # 22d590 <elf_set_xdest@@Base+0x21a320>
    6366:	push   0xaf
    636b:	jmp    5860 <.plt>

0000000000006370 <read_exact@plt>:
    6370:	jmp    QWORD PTR [rip+0x227222]        # 22d598 <read_exact>
    6376:	push   0xb0
    637b:	jmp    5860 <.plt>

0000000000006380 <xc_domain_populate_physmap@plt>:
    6380:	jmp    QWORD PTR [rip+0x22721a]        # 22d5a0 <xc_domain_populate_physmap>
    6386:	push   0xb1
    638b:	jmp    5860 <.plt>

0000000000006390 <xc_dom_register_arch_hooks@plt>:
    6390:	jmp    QWORD PTR [rip+0x227212]        # 22d5a8 <xc_dom_register_arch_hooks@@Base+0x216088>
    6396:	push   0xb2
    639b:	jmp    5860 <.plt>

00000000000063a0 <xc_dom_loginit@plt>:
    63a0:	jmp    QWORD PTR [rip+0x22720a]        # 22d5b0 <xc_dom_loginit@@Base+0x217580>
    63a6:	push   0xb3
    63ab:	jmp    5860 <.plt>

00000000000063b0 <xenforeignmemory_map_resource@plt>:
    63b0:	jmp    QWORD PTR [rip+0x227202]        # 22d5b8 <xenforeignmemory_map_resource>
    63b6:	push   0xb4
    63bb:	jmp    5860 <.plt>

00000000000063c0 <xc_dom_alloc_page@plt>:
    63c0:	jmp    QWORD PTR [rip+0x2271fa]        # 22d5c0 <xc_dom_alloc_page@@Base+0x216240>
    63c6:	push   0xb5
    63cb:	jmp    5860 <.plt>

00000000000063d0 <xc__hypercall_buffer_alloc_pages@plt>:
    63d0:	jmp    QWORD PTR [rip+0x2271f2]        # 22d5c8 <xc__hypercall_buffer_alloc_pages>
    63d6:	push   0xb6
    63db:	jmp    5860 <.plt>

00000000000063e0 <xc_dom_kernel_check_size@plt>:
    63e0:	jmp    QWORD PTR [rip+0x2271ea]        # 22d5d0 <xc_dom_kernel_check_size@@Base+0x216b60>
    63e6:	push   0xb7
    63eb:	jmp    5860 <.plt>

00000000000063f0 <xc_dom_boot_xen_init@plt>:
    63f0:	jmp    QWORD PTR [rip+0x2271e2]        # 22d5d8 <xc_dom_boot_xen_init@@Base+0x214bc8>
    63f6:	push   0xb8
    63fb:	jmp    5860 <.plt>

0000000000006400 <xc_dom_kernel_file@plt>:
    6400:	jmp    QWORD PTR [rip+0x2271da]        # 22d5e0 <xc_dom_kernel_file@@Base+0x215cc0>
    6406:	push   0xb9
    640b:	jmp    5860 <.plt>

0000000000006410 <xc_query_page_offline_status@plt>:
    6410:	jmp    QWORD PTR [rip+0x2271d2]        # 22d5e8 <xc_query_page_offline_status@@Base+0x21c6c8>
    6416:	push   0xba
    641b:	jmp    5860 <.plt>

0000000000006420 <xc_maximum_ram_page@plt>:
    6420:	jmp    QWORD PTR [rip+0x2271ca]        # 22d5f0 <xc_maximum_ram_page>
    6426:	push   0xbb
    642b:	jmp    5860 <.plt>

0000000000006430 <xc_dom_try_gunzip@plt>:
    6430:	jmp    QWORD PTR [rip+0x2271c2]        # 22d5f8 <xc_dom_try_gunzip@@Base+0x216978>
    6436:	push   0xbc
    643b:	jmp    5860 <.plt>

0000000000006440 <elf_access_ok@plt>:
    6440:	jmp    QWORD PTR [rip+0x2271ba]        # 22d600 <elf_access_ok@@Base+0x21ae10>
    6446:	push   0xbd
    644b:	jmp    5860 <.plt>

0000000000006450 <mfn_to_pfn@plt>:
    6450:	jmp    QWORD PTR [rip+0x2271b2]        # 22d608 <mfn_to_pfn@@Base+0x225e58>
    6456:	push   0xbe
    645b:	jmp    5860 <.plt>

0000000000006460 <elf_load_binary@plt>:
    6460:	jmp    QWORD PTR [rip+0x2271aa]        # 22d610 <elf_load_binary@@Base+0x2192b0>
    6466:	push   0xbf
    646b:	jmp    5860 <.plt>

0000000000006470 <xc_dom_register_loader@plt>:
    6470:	jmp    QWORD PTR [rip+0x2271a2]        # 22d618 <xc_dom_register_loader@@Base+0x216118>
    6476:	push   0xc0
    647b:	jmp    5860 <.plt>

0000000000006480 <elf_parse_bsdsyms@plt>:
    6480:	jmp    QWORD PTR [rip+0x22719a]        # 22d620 <elf_parse_bsdsyms@@Base+0x219ed0>
    6486:	push   0xc1
    648b:	jmp    5860 <.plt>

0000000000006490 <xc_dom_build_image@plt>:
    6490:	jmp    QWORD PTR [rip+0x227192]        # 22d628 <xc_dom_build_image@@Base+0x2156a8>
    6496:	push   0xc2
    649b:	jmp    5860 <.plt>

00000000000064a0 <mfn_to_cr3@plt>:
    64a0:	jmp    QWORD PTR [rip+0x22718a]        # 22d630 <mfn_to_cr3@@Base+0x225c70>
    64a6:	push   0xc3
    64ab:	jmp    5860 <.plt>

00000000000064b0 <xc_shadow_control@plt>:
    64b0:	jmp    QWORD PTR [rip+0x227182]        # 22d638 <xc_shadow_control>
    64b6:	push   0xc4
    64bb:	jmp    5860 <.plt>

00000000000064c0 <xc_map_m2p@plt>:
    64c0:	jmp    QWORD PTR [rip+0x22717a]        # 22d640 <xc_map_m2p@@Base+0x21c5e0>
    64c6:	push   0xc5
    64cb:	jmp    5860 <.plt>

00000000000064d0 <xc_dom_allocate@plt>:
    64d0:	jmp    QWORD PTR [rip+0x227172]        # 22d648 <xc_dom_allocate@@Base+0x215f68>
    64d6:	push   0xc6
    64db:	jmp    5860 <.plt>

00000000000064e0 <xc_domain_add_to_physmap@plt>:
    64e0:	jmp    QWORD PTR [rip+0x22716a]        # 22d650 <xc_domain_add_to_physmap>
    64e6:	push   0xc7
    64eb:	jmp    5860 <.plt>

00000000000064f0 <elf_section_name@plt>:
    64f0:	jmp    QWORD PTR [rip+0x227162]        # 22d658 <elf_section_name@@Base+0x21a9c8>
    64f6:	push   0xc8
    64fb:	jmp    5860 <.plt>

0000000000006500 <xc_sysctl@plt>:
    6500:	jmp    QWORD PTR [rip+0x22715a]        # 22d660 <xc_sysctl>
    6506:	push   0xc9
    650b:	jmp    5860 <.plt>

0000000000006510 <xc_compression_free_context@plt>:
    6510:	jmp    QWORD PTR [rip+0x227152]        # 22d668 <xc_compression_free_context@@Base+0x21b118>
    6516:	push   0xca
    651b:	jmp    5860 <.plt>

0000000000006520 <strerror@plt>:
    6520:	jmp    QWORD PTR [rip+0x22714a]        # 22d670 <strerror@GLIBC_2.2.5>
    6526:	push   0xcb
    652b:	jmp    5860 <.plt>

0000000000006530 <xc_get_cpu_featureset@plt>:
    6530:	jmp    QWORD PTR [rip+0x227142]        # 22d678 <xc_get_cpu_featureset@@Base+0x20dd88>
    6536:	push   0xcc
    653b:	jmp    5860 <.plt>

0000000000006540 <xc_report@plt>:
    6540:	jmp    QWORD PTR [rip+0x22713a]        # 22d680 <xc_report>
    6546:	push   0xcd
    654b:	jmp    5860 <.plt>

0000000000006550 <xc_hvm_param_get@plt>:
    6550:	jmp    QWORD PTR [rip+0x227132]        # 22d688 <xc_hvm_param_get>
    6556:	push   0xce
    655b:	jmp    5860 <.plt>

0000000000006560 <xc_reportv@plt>:
    6560:	jmp    QWORD PTR [rip+0x22712a]        # 22d690 <xc_reportv>
    6566:	push   0xcf
    656b:	jmp    5860 <.plt>

0000000000006570 <xc_strerror@plt>:
    6570:	jmp    QWORD PTR [rip+0x227122]        # 22d698 <xc_strerror>
    6576:	push   0xd0
    657b:	jmp    5860 <.plt>

0000000000006580 <xc_map_foreign_ranges@plt>:
    6580:	jmp    QWORD PTR [rip+0x22711a]        # 22d6a0 <xc_map_foreign_ranges>
    6586:	push   0xd1
    658b:	jmp    5860 <.plt>

0000000000006590 <xc_map_foreign_range@plt>:
    6590:	jmp    QWORD PTR [rip+0x227112]        # 22d6a8 <xc_map_foreign_range>
    6596:	push   0xd2
    659b:	jmp    5860 <.plt>

00000000000065a0 <xc_suspend_evtchn_release@plt>:
    65a0:	jmp    QWORD PTR [rip+0x22710a]        # 22d6b0 <xc_suspend_evtchn_release@@Base+0x226720>
    65a6:	push   0xd3
    65ab:	jmp    5860 <.plt>

00000000000065b0 <xc_domain_cacheflush@plt>:
    65b0:	jmp    QWORD PTR [rip+0x227102]        # 22d6b8 <xc_domain_cacheflush>
    65b6:	push   0xd4
    65bb:	jmp    5860 <.plt>

00000000000065c0 <strstr@plt>:
    65c0:	jmp    QWORD PTR [rip+0x2270fa]        # 22d6c0 <strstr@GLIBC_2.2.5>
    65c6:	push   0xd5
    65cb:	jmp    5860 <.plt>

00000000000065d0 <xc_dom_malloc_filemap@plt>:
    65d0:	jmp    QWORD PTR [rip+0x2270f2]        # 22d6c8 <xc_dom_malloc_filemap@@Base+0x216f98>
    65d6:	push   0xd6
    65db:	jmp    5860 <.plt>

00000000000065e0 <xc_dom_set_arch_hooks@plt>:
    65e0:	jmp    QWORD PTR [rip+0x2270ea]        # 22d6d0 <xc_dom_set_arch_hooks@@Base+0x216190>
    65e6:	push   0xd7
    65eb:	jmp    5860 <.plt>

00000000000065f0 <elf_section_start@plt>:
    65f0:	jmp    QWORD PTR [rip+0x2270e2]        # 22d6d8 <elf_section_start@@Base+0x21a948>
    65f6:	push   0xd8
    65fb:	jmp    5860 <.plt>

0000000000006600 <xc_domain_get_tsc_info@plt>:
    6600:	jmp    QWORD PTR [rip+0x2270da]        # 22d6e0 <xc_domain_get_tsc_info>
    6606:	push   0xd9
    660b:	jmp    5860 <.plt>

Disassembly of section .plt.got:

0000000000006610 <__cxa_finalize@plt>:
    6610:	jmp    QWORD PTR [rip+0x2269e2]        # 22cff8 <__cxa_finalize@GLIBC_2.2.5>
    6616:	xchg   ax,ax

Disassembly of section .text:

0000000000006620 <xc_dom_p2m>:
    6620:	push   rbp
    6621:	push   rbx
    6622:	mov    rbp,rdi
    6625:	mov    rbx,rsi
    6628:	sub    rsp,0x8
    662c:	call   5af0 <xc_dom_translated@plt>
    6631:	test   al,al
    6633:	jne    6664 <xc_dom_p2m+0x44>
    6635:	mov    rax,QWORD PTR [rbp+0x460]
    663c:	cmp    rbx,rax
    663f:	jb     6660 <xc_dom_p2m+0x40>
    6641:	mov    rdx,QWORD PTR [rbp+0x468]
    6648:	add    rdx,rax
    664b:	cmp    rbx,rdx
    664e:	jae    6660 <xc_dom_p2m+0x40>
    6650:	sub    rbx,rax
    6653:	mov    rax,QWORD PTR [rbp+0x450]
    665a:	mov    rbx,QWORD PTR [rax+rbx*8]
    665e:	jmp    6664 <xc_dom_p2m+0x44>
    6660:	or     rbx,0xffffffffffffffff
    6664:	mov    rax,rbx
    6667:	pop    rdx
    6668:	pop    rbx
    6669:	pop    rbp
    666a:	ret    
    666b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006670 <register_loader>:
    6670:	mov    rdi,QWORD PTR [rip+0x226941]        # 22cfb8 <elf_loader@@Base-0x8a8>
    6677:	jmp    6470 <xc_dom_register_loader@plt>
    667c:	nop    DWORD PTR [rax+0x0]

0000000000006680 <register_loader>:
    6680:	lea    rdi,[rip+0x227219]        # 22d8a0 <bzimage_loader>
    6687:	jmp    6470 <xc_dom_register_loader@plt>
    668c:	nop    DWORD PTR [rax+0x0]

0000000000006690 <register_loader>:
    6690:	mov    rdi,QWORD PTR [rip+0x226959]        # 22cff0 <hvm_loader@@Base-0x8f0>
    6697:	jmp    6470 <xc_dom_register_loader@plt>
    669c:	nop    DWORD PTR [rax+0x0]

00000000000066a0 <register_loader>:
    66a0:	lea    rdi,[rip+0x227279]        # 22d920 <bin_loader>
    66a7:	jmp    6470 <xc_dom_register_loader@plt>
    66ac:	nop    DWORD PTR [rax+0x0]

00000000000066b0 <register_arch_hooks>:
    66b0:	lea    rdi,[rip+0x227429]        # 22dae0 <xc_dom_32_pae>
    66b7:	sub    rsp,0x8
    66bb:	call   6390 <xc_dom_register_arch_hooks@plt>
    66c0:	lea    rdi,[rip+0x227399]        # 22da60 <xc_dom_64>
    66c7:	call   6390 <xc_dom_register_arch_hooks@plt>
    66cc:	lea    rdi,[rip+0x22730d]        # 22d9e0 <xc_hvm_32>
    66d3:	add    rsp,0x8
    66d7:	jmp    6390 <xc_dom_register_arch_hooks@plt>
    66dc:	nop    DWORD PTR [rax+0x0]

00000000000066e0 <deregister_tm_clones>:
    66e0:	lea    rdi,[rip+0x227471]        # 22db58 <__TMC_END__>
    66e7:	push   rbp
    66e8:	lea    rax,[rip+0x227469]        # 22db58 <__TMC_END__>
    66ef:	cmp    rax,rdi
    66f2:	mov    rbp,rsp
    66f5:	je     6710 <deregister_tm_clones+0x30>
    66f7:	mov    rax,QWORD PTR [rip+0x2268c2]        # 22cfc0 <_ITM_deregisterTMCloneTable>
    66fe:	test   rax,rax
    6701:	je     6710 <deregister_tm_clones+0x30>
    6703:	pop    rbp
    6704:	jmp    rax
    6706:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6710:	pop    rbp
    6711:	ret    
    6712:	nop    DWORD PTR [rax+0x0]
    6716:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006720 <register_tm_clones>:
    6720:	lea    rdi,[rip+0x227431]        # 22db58 <__TMC_END__>
    6727:	lea    rsi,[rip+0x22742a]        # 22db58 <__TMC_END__>
    672e:	push   rbp
    672f:	sub    rsi,rdi
    6732:	mov    rbp,rsp
    6735:	sar    rsi,0x3
    6739:	mov    rax,rsi
    673c:	shr    rax,0x3f
    6740:	add    rsi,rax
    6743:	sar    rsi,1
    6746:	je     6760 <register_tm_clones+0x40>
    6748:	mov    rax,QWORD PTR [rip+0x226899]        # 22cfe8 <_ITM_registerTMCloneTable>
    674f:	test   rax,rax
    6752:	je     6760 <register_tm_clones+0x40>
    6754:	pop    rbp
    6755:	jmp    rax
    6757:	nop    WORD PTR [rax+rax*1+0x0]
    6760:	pop    rbp
    6761:	ret    
    6762:	nop    DWORD PTR [rax+0x0]
    6766:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006770 <__do_global_dtors_aux>:
    6770:	cmp    BYTE PTR [rip+0x2273e9],0x0        # 22db60 <completed.7697>
    6777:	jne    67a8 <__do_global_dtors_aux+0x38>
    6779:	cmp    QWORD PTR [rip+0x226877],0x0        # 22cff8 <__cxa_finalize@GLIBC_2.2.5>
    6781:	push   rbp
    6782:	mov    rbp,rsp
    6785:	je     6793 <__do_global_dtors_aux+0x23>
    6787:	mov    rdi,QWORD PTR [rip+0x226f72]        # 22d700 <__dso_handle>
    678e:	call   6610 <__cxa_finalize@plt>
    6793:	call   66e0 <deregister_tm_clones>
    6798:	mov    BYTE PTR [rip+0x2273c1],0x1        # 22db60 <completed.7697>
    679f:	pop    rbp
    67a0:	ret    
    67a1:	nop    DWORD PTR [rax+0x0]
    67a8:	repz ret 
    67aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000067b0 <frame_dummy>:
    67b0:	push   rbp
    67b1:	mov    rbp,rsp
    67b4:	pop    rbp
    67b5:	jmp    6720 <register_tm_clones>
    67ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000000067c0 <xc_read_image>:
    67c0:	push   r15
    67c2:	push   r14
    67c4:	push   r13
    67c6:	push   r12
    67c8:	push   rbp
    67c9:	push   rbx
    67ca:	sub    rsp,0x8
    67ce:	test   rsi,rsi
    67d1:	je     69b0 <xc_read_image+0x1f0>
    67d7:	test   rdx,rdx
    67da:	je     69b0 <xc_read_image+0x1f0>
    67e0:	mov    rbx,rsi
    67e3:	xor    eax,eax
    67e5:	xor    esi,esi
    67e7:	mov    r12,rdi
    67ea:	mov    rdi,rbx
    67ed:	mov    rbp,rdx
    67f0:	call   62c0 <open@plt>
    67f5:	test   eax,eax
    67f7:	mov    r14d,eax
    67fa:	js     6900 <xc_read_image+0x140>
    6800:	lea    rsi,[rip+0x1a6cf]        # 20ed6 <_fini+0x10a>
    6807:	mov    edi,eax
    6809:	call   5ae0 <gzdopen@plt>
    680e:	test   rax,rax
    6811:	mov    r13,rax
    6814:	je     68c0 <xc_read_image+0x100>
    681a:	mov    QWORD PTR [rbp+0x0],0x0
    6822:	xor    ebx,ebx
    6824:	xor    r15d,r15d
    6827:	lea    rsi,[rbx+0x100000]
    682e:	mov    rdi,r15
    6831:	call   6160 <realloc@plt>
    6836:	test   rax,rax
    6839:	mov    r14,rax
    683c:	je     69c0 <xc_read_image+0x200>
    6842:	lea    rsi,[rax+rbx*1]
    6846:	mov    edx,0x100000
    684b:	mov    rdi,r13
    684e:	call   5e60 <gzread@plt>
    6853:	test   eax,eax
    6855:	je     6960 <xc_read_image+0x1a0>
    685b:	cmp    eax,0xffffffff
    685e:	jne    6948 <xc_read_image+0x188>
    6864:	call   5940 <__errno_location@plt>
    6869:	mov    ebp,DWORD PTR [rax]
    686b:	mov    rbx,rax
    686e:	mov    rdi,r12
    6871:	mov    esi,ebp
    6873:	call   6570 <xc_strerror@plt>
    6878:	mov    ecx,DWORD PTR [rbx]
    687a:	lea    rdx,[rip+0x1a607]        # 20e88 <_fini+0xbc>
    6881:	mov    r8,rax
    6884:	mov    esi,0x1
    6889:	mov    rdi,r12
    688c:	xor    eax,eax
    688e:	call   5d50 <xc_report_error@plt>
    6893:	mov    DWORD PTR [rbx],ebp
    6895:	mov    rdi,r14
    6898:	xor    ebx,ebx
    689a:	call   5900 <free@plt>
    689f:	mov    rdi,r13
    68a2:	call   58e0 <gzclose@plt>
    68a7:	add    rsp,0x8
    68ab:	mov    rax,rbx
    68ae:	pop    rbx
    68af:	pop    rbp
    68b0:	pop    r12
    68b2:	pop    r13
    68b4:	pop    r14
    68b6:	pop    r15
    68b8:	ret    
    68b9:	nop    DWORD PTR [rax+0x0]
    68c0:	call   5940 <__errno_location@plt>
    68c5:	mov    ebp,DWORD PTR [rax]
    68c7:	mov    rbx,rax
    68ca:	mov    rdi,r12
    68cd:	mov    esi,ebp
    68cf:	call   6570 <xc_strerror@plt>
    68d4:	mov    ecx,DWORD PTR [rbx]
    68d6:	lea    rdx,[rip+0x1a533]        # 20e10 <_fini+0x44>
    68dd:	mov    r8,rax
    68e0:	mov    esi,0x1
    68e5:	mov    rdi,r12
    68e8:	xor    eax,eax
    68ea:	call   5d50 <xc_report_error@plt>
    68ef:	mov    DWORD PTR [rbx],ebp
    68f1:	mov    edi,r14d
    68f4:	xor    ebx,ebx
    68f6:	call   5cf0 <close@plt>
    68fb:	jmp    68a7 <xc_read_image+0xe7>
    68fd:	nop    DWORD PTR [rax]
    6900:	call   5940 <__errno_location@plt>
    6905:	mov    r13d,DWORD PTR [rax]
    6908:	mov    rbp,rax
    690b:	mov    rdi,r12
    690e:	mov    esi,r13d
    6911:	call   6570 <xc_strerror@plt>
    6916:	mov    r8d,DWORD PTR [rbp+0x0]
    691a:	lea    rdx,[rip+0x1a4bf]        # 20de0 <_fini+0x14>
    6921:	mov    r9,rax
    6924:	mov    rcx,rbx
    6927:	mov    esi,0x1
    692c:	mov    rdi,r12
    692f:	xor    eax,eax
    6931:	xor    ebx,ebx
    6933:	call   5d50 <xc_report_error@plt>
    6938:	mov    DWORD PTR [rbp+0x0],r13d
    693c:	jmp    68a7 <xc_read_image+0xe7>
    6941:	nop    DWORD PTR [rax+0x0]
    6948:	mov    eax,eax
    694a:	add    rax,QWORD PTR [rbp+0x0]
    694e:	mov    r15,r14
    6951:	mov    rbx,rax
    6954:	mov    QWORD PTR [rbp+0x0],rax
    6958:	jmp    6827 <xc_read_image+0x67>
    695d:	nop    DWORD PTR [rax]
    6960:	mov    rsi,QWORD PTR [rbp+0x0]
    6964:	test   rsi,rsi
    6967:	jne    6990 <xc_read_image+0x1d0>
    6969:	call   5940 <__errno_location@plt>
    696e:	mov    ebp,DWORD PTR [rax]
    6970:	mov    rbx,rax
    6973:	mov    rdi,r12
    6976:	mov    esi,ebp
    6978:	call   6570 <xc_strerror@plt>
    697d:	mov    ecx,DWORD PTR [rbx]
    697f:	mov    r8,rax
    6982:	lea    rdx,[rip+0x1a527]        # 20eb0 <_fini+0xe4>
    6989:	jmp    6884 <xc_read_image+0xc4>
    698e:	xchg   ax,ax
    6990:	mov    rdi,r14
    6993:	call   6160 <realloc@plt>
    6998:	mov    rbx,rax
    699b:	test   rax,rax
    699e:	cmove  rbx,r14
    69a2:	jmp    689f <xc_read_image+0xdf>
    69a7:	nop    WORD PTR [rax+rax*1+0x0]
    69b0:	xor    ebx,ebx
    69b2:	jmp    68a7 <xc_read_image+0xe7>
    69b7:	nop    WORD PTR [rax+rax*1+0x0]
    69c0:	call   5940 <__errno_location@plt>
    69c5:	mov    ebp,DWORD PTR [rax]
    69c7:	mov    rbx,rax
    69ca:	mov    rdi,r12
    69cd:	mov    esi,ebp
    69cf:	call   6570 <xc_strerror@plt>
    69d4:	mov    ecx,DWORD PTR [rbx]
    69d6:	lea    rdx,[rip+0x1a473]        # 20e50 <_fini+0x84>
    69dd:	mov    r8,rax
    69e0:	mov    esi,0x1
    69e5:	mov    rdi,r12
    69e8:	xor    eax,eax
    69ea:	call   5d50 <xc_report_error@plt>
    69ef:	mov    DWORD PTR [rbx],ebp
    69f1:	mov    rdi,r15
    69f4:	xor    ebx,ebx
    69f6:	call   5900 <free@plt>
    69fb:	jmp    689f <xc_read_image+0xdf>

0000000000006a00 <xc_inflate_buffer>:
    6a00:	push   r15
    6a02:	push   r14
    6a04:	push   r13
    6a06:	push   r12
    6a08:	push   rbp
    6a09:	push   rbx
    6a0a:	mov    rbx,rcx
    6a0d:	sub    rsp,0x98
    6a14:	mov    rax,QWORD PTR fs:0x28
    6a1d:	mov    QWORD PTR [rsp+0x88],rax
    6a25:	xor    eax,eax
    6a27:	cmp    BYTE PTR [rsi],0x1f
    6a2a:	je     6a60 <xc_inflate_buffer+0x60>
    6a2c:	test   rbx,rbx
    6a2f:	je     6a34 <xc_inflate_buffer+0x34>
    6a31:	mov    QWORD PTR [rbx],rdx
    6a34:	mov    rcx,QWORD PTR [rsp+0x88]
    6a3c:	xor    rcx,QWORD PTR fs:0x28
    6a45:	mov    rax,rsi
    6a48:	jne    6bab <xc_inflate_buffer+0x1ab>
    6a4e:	add    rsp,0x98
    6a55:	pop    rbx
    6a56:	pop    rbp
    6a57:	pop    r12
    6a59:	pop    r13
    6a5b:	pop    r14
    6a5d:	pop    r15
    6a5f:	ret    
    6a60:	cmp    BYTE PTR [rsi+0x1],0x8b
    6a64:	jne    6a2c <xc_inflate_buffer+0x2c>
    6a66:	movzx  r14d,BYTE PTR [rsi+rdx*1-0x1]
    6a6c:	movzx  eax,BYTE PTR [rsi+rdx*1-0x2]
    6a71:	lea    rbp,[rsp+0x10]
    6a76:	mov    r15,rdi
    6a79:	mov    ecx,0xe
    6a7e:	mov    QWORD PTR [rsp+0x8],rdx
    6a83:	mov    rdi,rbp
    6a86:	mov    QWORD PTR [rsp],rsi
    6a8a:	shl    r14d,0x8
    6a8e:	add    r14d,eax
    6a91:	movzx  eax,BYTE PTR [rsi+rdx*1-0x3]
    6a96:	shl    r14d,0x8
    6a9a:	add    r14d,eax
    6a9d:	movzx  eax,BYTE PTR [rsi+rdx*1-0x4]
    6aa2:	shl    r14d,0x8
    6aa6:	add    r14d,eax
    6aa9:	xor    eax,eax
    6aab:	rep stos QWORD PTR es:[rdi],rax
    6aae:	movsxd r13,r14d
    6ab1:	lea    rdi,[r13+0x10]
    6ab5:	call   5ff0 <malloc@plt>
    6aba:	test   rax,rax
    6abd:	mov    r12,rax
    6ac0:	mov    rsi,QWORD PTR [rsp]
    6ac4:	mov    rdx,QWORD PTR [rsp+0x8]
    6ac9:	je     6b82 <xc_inflate_buffer+0x182>
    6acf:	mov    DWORD PTR [rsp+0x18],edx
    6ad3:	lea    rdx,[rip+0x1a417]        # 20ef1 <_fini+0x125>
    6ada:	add    r14d,0x10
    6ade:	mov    QWORD PTR [rsp+0x10],rsi
    6ae3:	mov    ecx,0x70
    6ae8:	mov    esi,0x2f
    6aed:	mov    rdi,rbp
    6af0:	mov    DWORD PTR [rsp+0x30],r14d
    6af5:	mov    QWORD PTR [rsp+0x28],rax
    6afa:	call   6310 <inflateInit2_@plt>
    6aff:	test   eax,eax
    6b01:	mov    r14d,eax
    6b04:	jne    6b38 <xc_inflate_buffer+0x138>
    6b06:	mov    esi,0x4
    6b0b:	mov    rdi,rbp
    6b0e:	call   59f0 <inflate@plt>
    6b13:	mov    rdi,rbp
    6b16:	mov    r14d,eax
    6b19:	call   5f00 <inflateEnd@plt>
    6b1e:	cmp    r14d,0x1
    6b22:	jne    6b6c <xc_inflate_buffer+0x16c>
    6b24:	test   rbx,rbx
    6b27:	mov    rsi,r12
    6b2a:	je     6a34 <xc_inflate_buffer+0x34>
    6b30:	mov    QWORD PTR [rbx],r13
    6b33:	jmp    6a34 <xc_inflate_buffer+0x34>
    6b38:	call   5940 <__errno_location@plt>
    6b3d:	mov    ebp,DWORD PTR [rax]
    6b3f:	lea    rdx,[rip+0x1a3b2]        # 20ef8 <_fini+0x12c>
    6b46:	mov    rbx,rax
    6b49:	mov    ecx,r14d
    6b4c:	mov    esi,0x1
    6b51:	mov    rdi,r15
    6b54:	xor    eax,eax
    6b56:	call   5d50 <xc_report_error@plt>
    6b5b:	mov    DWORD PTR [rbx],ebp
    6b5d:	mov    rdi,r12
    6b60:	call   5900 <free@plt>
    6b65:	xor    esi,esi
    6b67:	jmp    6a34 <xc_inflate_buffer+0x34>
    6b6c:	call   5940 <__errno_location@plt>
    6b71:	mov    ecx,r14d
    6b74:	mov    rbx,rax
    6b77:	mov    ebp,DWORD PTR [rax]
    6b79:	lea    rdx,[rip+0x1a394]        # 20f14 <_fini+0x148>
    6b80:	jmp    6b4c <xc_inflate_buffer+0x14c>
    6b82:	call   5940 <__errno_location@plt>
    6b87:	mov    ebp,DWORD PTR [rax]
    6b89:	lea    rdx,[rip+0x1a349]        # 20ed9 <_fini+0x10d>
    6b90:	mov    rbx,rax
    6b93:	mov    esi,0x1
    6b98:	mov    rdi,r15
    6b9b:	xor    eax,eax
    6b9d:	call   5d50 <xc_report_error@plt>
    6ba2:	mov    DWORD PTR [rbx],ebp
    6ba4:	xor    esi,esi
    6ba6:	jmp    6a34 <xc_inflate_buffer+0x34>
    6bab:	call   5b80 <__stack_chk_fail@plt>

0000000000006bb0 <pin_table>:
    6bb0:	sub    rsp,0x28
    6bb4:	mov    DWORD PTR [rsp],esi
    6bb7:	mov    QWORD PTR [rsp+0x8],rdx
    6bbc:	mov    rsi,rsp
    6bbf:	mov    edx,0x1
    6bc4:	mov    rax,QWORD PTR fs:0x28
    6bcd:	mov    QWORD PTR [rsp+0x18],rax
    6bd2:	xor    eax,eax
    6bd4:	call   5f60 <xc_mmuext_op@plt>
    6bd9:	shr    eax,0x1f
    6bdc:	mov    rdx,QWORD PTR [rsp+0x18]
    6be1:	xor    rdx,QWORD PTR fs:0x28
    6bea:	jne    6bf1 <pin_table+0x41>
    6bec:	add    rsp,0x28
    6bf0:	ret    
    6bf1:	call   5b80 <__stack_chk_fail@plt>
    6bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006c00 <csum_page>:
    6c00:	lea    rdx,[rdi+0x1000]
    6c07:	xor    eax,eax
    6c09:	nop    DWORD PTR [rax+0x0]
    6c10:	add    rax,QWORD PTR [rdi]
    6c13:	add    rdi,0x8
    6c17:	cmp    rdx,rdi
    6c1a:	jne    6c10 <csum_page+0x10>
    6c1c:	mov    rdx,rax
    6c1f:	shr    rdx,0x20
    6c23:	xor    rax,rdx
    6c26:	ret    
    6c27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006c30 <lock_suspend_event>:
    6c30:	push   r15
    6c32:	push   r14
    6c34:	lea    r8,[rip+0x1a2f5]        # 20f30 <_fini+0x164>
    6c3b:	push   r13
    6c3d:	push   r12
    6c3f:	mov    r9d,esi
    6c42:	push   rbp
    6c43:	push   rbx
    6c44:	mov    r15,rdx
    6c47:	mov    ecx,0x2e
    6c4c:	mov    edx,0x1
    6c51:	mov    esi,0x2e
    6c56:	sub    rsp,0x1a8
    6c5d:	lea    rbp,[rsp+0x160]
    6c65:	mov    QWORD PTR [rsp+0x8],rdi
    6c6a:	lea    r12,[rsp+0x20]
    6c6f:	mov    rax,QWORD PTR fs:0x28
    6c78:	mov    QWORD PTR [rsp+0x198],rax
    6c80:	xor    eax,eax
    6c82:	mov    rdi,rbp
    6c85:	lea    r13,[rsp+0x40]
    6c8a:	lea    r14,[rsp+0xd0]
    6c92:	call   58f0 <__snprintf_chk@plt>
    6c97:	mov    DWORD PTR [r15],0xffffffff
    6c9e:	xor    eax,eax
    6ca0:	mov    edx,0x180
    6ca5:	mov    esi,0x42
    6caa:	mov    rdi,rbp
    6cad:	call   62c0 <open@plt>
    6cb2:	test   eax,eax
    6cb4:	mov    ebx,eax
    6cb6:	js     6e08 <lock_suspend_event+0x1d8>
    6cbc:	mov    edi,eax
    6cbe:	mov    edx,0x1
    6cc3:	xor    eax,eax
    6cc5:	mov    esi,0x2
    6cca:	call   5aa0 <fcntl@plt>
    6ccf:	test   eax,eax
    6cd1:	jne    6e50 <lock_suspend_event+0x220>
    6cd7:	pxor   xmm0,xmm0
    6cdb:	xor    eax,eax
    6cdd:	mov    edx,0x1
    6ce2:	mov    QWORD PTR [r12+0x12],0x0
    6ceb:	mov    WORD PTR [r12+0x1e],ax
    6cf1:	mov    esi,0x6
    6cf6:	mov    WORD PTR [rsp+0x20],dx
    6cfb:	xor    eax,eax
    6cfd:	mov    DWORD PTR [r12+0x1a],0x0
    6d06:	movups XMMWORD PTR [r12+0x2],xmm0
    6d0c:	mov    rdx,r12
    6d0f:	mov    edi,ebx
    6d11:	mov    QWORD PTR [rsp+0x30],0x1
    6d1a:	call   5aa0 <fcntl@plt>
    6d1f:	test   eax,eax
    6d21:	jne    6e90 <lock_suspend_event+0x260>
    6d27:	mov    rdx,r13
    6d2a:	mov    esi,ebx
    6d2c:	mov    edi,0x1
    6d31:	call   6060 <__fxstat@plt>
    6d36:	test   eax,eax
    6d38:	jne    6eb8 <lock_suspend_event+0x288>
    6d3e:	mov    rdx,r14
    6d41:	mov    rsi,rbp
    6d44:	mov    edi,0x1
    6d49:	call   5fb0 <__xstat@plt>
    6d4e:	test   eax,eax
    6d50:	je     6de0 <lock_suspend_event+0x1b0>
    6d56:	call   5940 <__errno_location@plt>
    6d5b:	mov    r9d,DWORD PTR [rax]
    6d5e:	mov    QWORD PTR [rsp+0x10],rax
    6d63:	cmp    r9d,0x2
    6d67:	je     6def <lock_suspend_event+0x1bf>
    6d6d:	mov    edi,r9d
    6d70:	mov    DWORD PTR [rsp+0x1c],r9d
    6d75:	call   6520 <strerror@plt>
    6d7a:	mov    rdi,QWORD PTR [rsp+0x8]
    6d7f:	lea    rdx,[rip+0x1a2ea]        # 21070 <_fini+0x2a4>
    6d86:	mov    r8,rax
    6d89:	mov    rcx,rbp
    6d8c:	mov    esi,0x1
    6d91:	xor    eax,eax
    6d93:	call   5d50 <xc_report_error@plt>
    6d98:	mov    r9d,DWORD PTR [rsp+0x1c]
    6d9d:	mov    r10,QWORD PTR [rsp+0x10]
    6da2:	mov    DWORD PTR [r10],r9d
    6da5:	mov    edi,ebx
    6da7:	call   5cf0 <close@plt>
    6dac:	mov    eax,0xffffffff
    6db1:	mov    rcx,QWORD PTR [rsp+0x198]
    6db9:	xor    rcx,QWORD PTR fs:0x28
    6dc2:	jne    6eda <lock_suspend_event+0x2aa>
    6dc8:	add    rsp,0x1a8
    6dcf:	pop    rbx
    6dd0:	pop    rbp
    6dd1:	pop    r12
    6dd3:	pop    r13
    6dd5:	pop    r14
    6dd7:	pop    r15
    6dd9:	ret    
    6dda:	nop    WORD PTR [rax+rax*1+0x0]
    6de0:	mov    rcx,QWORD PTR [rsp+0xd8]
    6de8:	cmp    QWORD PTR [rsp+0x48],rcx
    6ded:	je     6e00 <lock_suspend_event+0x1d0>
    6def:	mov    edi,ebx
    6df1:	call   5cf0 <close@plt>
    6df6:	jmp    6c9e <lock_suspend_event+0x6e>
    6dfb:	nop    DWORD PTR [rax+rax*1+0x0]
    6e00:	mov    DWORD PTR [r15],ebx
    6e03:	jmp    6db1 <lock_suspend_event+0x181>
    6e05:	nop    DWORD PTR [rax]
    6e08:	call   5940 <__errno_location@plt>
    6e0d:	mov    r12d,DWORD PTR [rax]
    6e10:	mov    rbx,rax
    6e13:	mov    edi,r12d
    6e16:	call   6520 <strerror@plt>
    6e1b:	mov    rdi,QWORD PTR [rsp+0x8]
    6e20:	lea    rdx,[rip+0x1a131]        # 20f58 <_fini+0x18c>
    6e27:	mov    r8,rax
    6e2a:	mov    rcx,rbp
    6e2d:	xor    eax,eax
    6e2f:	mov    esi,0x1
    6e34:	call   5d50 <xc_report_error@plt>
    6e39:	mov    DWORD PTR [rbx],r12d
    6e3c:	mov    eax,0xffffffff
    6e41:	jmp    6db1 <lock_suspend_event+0x181>
    6e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6e50:	call   5940 <__errno_location@plt>
    6e55:	mov    r13d,DWORD PTR [rax]
    6e58:	mov    r12,rax
    6e5b:	mov    edi,r13d
    6e5e:	call   6520 <strerror@plt>
    6e63:	lea    rdx,[rip+0x1a12e]        # 20f98 <_fini+0x1cc>
    6e6a:	mov    r8,rax
    6e6d:	mov    rcx,rbp
    6e70:	mov    rdi,QWORD PTR [rsp+0x8]
    6e75:	mov    esi,0x1
    6e7a:	xor    eax,eax
    6e7c:	call   5d50 <xc_report_error@plt>
    6e81:	mov    DWORD PTR [r12],r13d
    6e85:	jmp    6da5 <lock_suspend_event+0x175>
    6e8a:	nop    WORD PTR [rax+rax*1+0x0]
    6e90:	call   5940 <__errno_location@plt>
    6e95:	mov    r13d,DWORD PTR [rax]
    6e98:	mov    r12,rax
    6e9b:	mov    edi,r13d
    6e9e:	call   6520 <strerror@plt>
    6ea3:	mov    rcx,rbp
    6ea6:	mov    r8,rax
    6ea9:	lea    rdx,[rip+0x1a138]        # 20fe8 <_fini+0x21c>
    6eb0:	jmp    6e70 <lock_suspend_event+0x240>
    6eb2:	nop    WORD PTR [rax+rax*1+0x0]
    6eb8:	call   5940 <__errno_location@plt>
    6ebd:	mov    r13d,DWORD PTR [rax]
    6ec0:	mov    r12,rax
    6ec3:	mov    edi,r13d
    6ec6:	call   6520 <strerror@plt>
    6ecb:	mov    rcx,rbp
    6ece:	mov    r8,rax
    6ed1:	lea    rdx,[rip+0x1a158]        # 21030 <_fini+0x264>
    6ed8:	jmp    6e70 <lock_suspend_event+0x240>
    6eda:	call   5b80 <__stack_chk_fail@plt>
    6edf:	nop

0000000000006ee0 <xc_await_suspend>:
    6ee0:	push   r14
    6ee2:	push   r13
    6ee4:	mov    r13,rdi
    6ee7:	push   r12
    6ee9:	mov    r12d,edx
    6eec:	push   rbp
    6eed:	mov    rbp,rsi
    6ef0:	push   rbx
    6ef1:	jmp    6efd <xc_await_suspend+0x1d>
    6ef3:	nop    DWORD PTR [rax+rax*1+0x0]
    6ef8:	cmp    eax,r12d
    6efb:	je     6f48 <xc_await_suspend+0x68>
    6efd:	mov    rdi,rbp
    6f00:	call   5c80 <xenevtchn_pending@plt>
    6f05:	test   eax,eax
    6f07:	mov    ebx,eax
    6f09:	jns    6ef8 <xc_await_suspend+0x18>
    6f0b:	call   5940 <__errno_location@plt>
    6f10:	mov    r12d,DWORD PTR [rax]
    6f13:	lea    rdx,[rip+0x1a196]        # 210b0 <_fini+0x2e4>
    6f1a:	mov    rbp,rax
    6f1d:	mov    ecx,ebx
    6f1f:	mov    esi,0x1
    6f24:	mov    rdi,r13
    6f27:	xor    eax,eax
    6f29:	mov    ebx,0xffffffff
    6f2e:	call   5d50 <xc_report_error@plt>
    6f33:	mov    DWORD PTR [rbp+0x0],r12d
    6f37:	mov    eax,ebx
    6f39:	pop    rbx
    6f3a:	pop    rbp
    6f3b:	pop    r12
    6f3d:	pop    r13
    6f3f:	pop    r14
    6f41:	ret    
    6f42:	nop    WORD PTR [rax+rax*1+0x0]
    6f48:	mov    esi,r12d
    6f4b:	mov    rdi,rbp
    6f4e:	xor    ebx,ebx
    6f50:	call   5c20 <xenevtchn_unmask@plt>
    6f55:	test   eax,eax
    6f57:	jns    6f37 <xc_await_suspend+0x57>
    6f59:	call   5940 <__errno_location@plt>
    6f5e:	mov    r14d,DWORD PTR [rax]
    6f61:	lea    rdx,[rip+0x1a178]        # 210e0 <_fini+0x314>
    6f68:	mov    rbp,rax
    6f6b:	mov    ecx,r12d
    6f6e:	mov    rdi,r13
    6f71:	xor    eax,eax
    6f73:	mov    esi,0x1
    6f78:	call   5d50 <xc_report_error@plt>
    6f7d:	mov    DWORD PTR [rbp+0x0],r14d
    6f81:	mov    eax,ebx
    6f83:	pop    rbx
    6f84:	pop    rbp
    6f85:	pop    r12
    6f87:	pop    r13
    6f89:	pop    r14
    6f8b:	ret    
    6f8c:	nop    DWORD PTR [rax+0x0]

0000000000006f90 <xc_suspend_evtchn_release>:
    6f90:	push   r14
    6f92:	push   r13
    6f94:	mov    r13,rdi
    6f97:	push   r12
    6f99:	push   rbp
    6f9a:	mov    r12d,edx
    6f9d:	push   rbx
    6f9e:	mov    rbx,r8
    6fa1:	sub    rsp,0x40
    6fa5:	mov    rax,QWORD PTR fs:0x28
    6fae:	mov    QWORD PTR [rsp+0x38],rax
    6fb3:	xor    eax,eax
    6fb5:	test   ecx,ecx
    6fb7:	js     6fc3 <xc_suspend_evtchn_release+0x33>
    6fb9:	mov    rdi,rsi
    6fbc:	mov    esi,ecx
    6fbe:	call   5df0 <xenevtchn_unbind@plt>
    6fc3:	mov    edx,DWORD PTR [rbx]
    6fc5:	xor    eax,eax
    6fc7:	test   edx,edx
    6fc9:	js     703e <xc_suspend_evtchn_release+0xae>
    6fcb:	mov    rbp,rsp
    6fce:	lea    r8,[rip+0x19f5b]        # 20f30 <_fini+0x164>
    6fd5:	mov    r9d,r12d
    6fd8:	mov    ecx,0x2e
    6fdd:	mov    edx,0x1
    6fe2:	mov    esi,0x2e
    6fe7:	mov    rdi,rbp
    6fea:	call   58f0 <__snprintf_chk@plt>
    6fef:	mov    rdi,rbp
    6ff2:	call   5960 <unlink@plt>
    6ff7:	test   eax,eax
    6ff9:	je     7060 <xc_suspend_evtchn_release+0xd0>
    6ffb:	call   5940 <__errno_location@plt>
    7000:	mov    r14d,DWORD PTR [rax]
    7003:	mov    r12,rax
    7006:	mov    edi,r14d
    7009:	call   6520 <strerror@plt>
    700e:	lea    rdx,[rip+0x1a103]        # 21118 <_fini+0x34c>
    7015:	mov    r8,rax
    7018:	mov    rcx,rbp
    701b:	mov    rdi,r13
    701e:	xor    eax,eax
    7020:	mov    esi,0x1
    7025:	call   5d50 <xc_report_error@plt>
    702a:	mov    DWORD PTR [r12],r14d
    702e:	mov    edi,DWORD PTR [rbx]
    7030:	test   edi,edi
    7032:	js     7039 <xc_suspend_evtchn_release+0xa9>
    7034:	call   5cf0 <close@plt>
    7039:	mov    eax,0xffffffff
    703e:	mov    rdx,QWORD PTR [rsp+0x38]
    7043:	xor    rdx,QWORD PTR fs:0x28
    704c:	jne    7093 <xc_suspend_evtchn_release+0x103>
    704e:	add    rsp,0x40
    7052:	pop    rbx
    7053:	pop    rbp
    7054:	pop    r12
    7056:	pop    r13
    7058:	pop    r14
    705a:	ret    
    705b:	nop    DWORD PTR [rax+rax*1+0x0]
    7060:	mov    edi,DWORD PTR [rbx]
    7062:	call   5cf0 <close@plt>
    7067:	test   eax,eax
    7069:	mov    DWORD PTR [rbx],0xffffffff
    706f:	je     7039 <xc_suspend_evtchn_release+0xa9>
    7071:	call   5940 <__errno_location@plt>
    7076:	mov    r14d,DWORD PTR [rax]
    7079:	mov    r12,rax
    707c:	mov    edi,r14d
    707f:	call   6520 <strerror@plt>
    7084:	mov    rcx,rbp
    7087:	mov    r8,rax
    708a:	lea    rdx,[rip+0x1a0c7]        # 21158 <_fini+0x38c>
    7091:	jmp    701b <xc_suspend_evtchn_release+0x8b>
    7093:	call   5b80 <__stack_chk_fail@plt>
    7098:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000070a0 <xc_suspend_evtchn_init_sane>:
    70a0:	push   r15
    70a2:	push   r14
    70a4:	mov    r15,rsi
    70a7:	push   r13
    70a9:	push   r12
    70ab:	mov    r13d,ecx
    70ae:	push   rbp
    70af:	push   rbx
    70b0:	mov    ebx,edx
    70b2:	mov    esi,ebx
    70b4:	mov    rdx,r8
    70b7:	mov    r12,rdi
    70ba:	sub    rsp,0x18
    70be:	mov    r14,r8
    70c1:	call   6c30 <lock_suspend_event>
    70c6:	test   eax,eax
    70c8:	jne    7108 <xc_suspend_evtchn_init_sane+0x68>
    70ca:	mov    edx,r13d
    70cd:	mov    esi,ebx
    70cf:	mov    rdi,r15
    70d2:	call   5b90 <xenevtchn_bind_interdomain@plt>
    70d7:	test   eax,eax
    70d9:	mov    ebp,eax
    70db:	js     7138 <xc_suspend_evtchn_init_sane+0x98>
    70dd:	mov    edx,r13d
    70e0:	mov    esi,ebx
    70e2:	mov    rdi,r12
    70e5:	call   5c30 <xc_domain_subscribe_for_suspend@plt>
    70ea:	test   eax,eax
    70ec:	mov    r13d,eax
    70ef:	js     716b <xc_suspend_evtchn_init_sane+0xcb>
    70f1:	add    rsp,0x18
    70f5:	mov    eax,ebp
    70f7:	pop    rbx
    70f8:	pop    rbp
    70f9:	pop    r12
    70fb:	pop    r13
    70fd:	pop    r14
    70ff:	pop    r15
    7101:	ret    
    7102:	nop    WORD PTR [rax+rax*1+0x0]
    7108:	call   5940 <__errno_location@plt>
    710d:	mov    ebp,0xffffffff
    7112:	mov    DWORD PTR [rax],0x16
    7118:	mov    ecx,ebp
    711a:	mov    r8,r14
    711d:	mov    edx,ebx
    711f:	mov    rsi,r15
    7122:	mov    rdi,r12
    7125:	mov    ebp,0xffffffff
    712a:	call   65a0 <xc_suspend_evtchn_release@plt>
    712f:	jmp    70f1 <xc_suspend_evtchn_init_sane+0x51>
    7131:	nop    DWORD PTR [rax+0x0]
    7138:	call   5940 <__errno_location@plt>
    713d:	mov    r8d,DWORD PTR [rax]
    7140:	lea    rdx,[rip+0x1a051]        # 21198 <_fini+0x3cc>
    7147:	mov    r13,rax
    714a:	mov    ecx,ebp
    714c:	mov    esi,0x1
    7151:	mov    rdi,r12
    7154:	xor    eax,eax
    7156:	mov    DWORD PTR [rsp+0x4],r8d
    715b:	call   5d50 <xc_report_error@plt>
    7160:	mov    r8d,DWORD PTR [rsp+0x4]
    7165:	mov    DWORD PTR [r13+0x0],r8d
    7169:	jmp    7118 <xc_suspend_evtchn_init_sane+0x78>
    716b:	call   5940 <__errno_location@plt>
    7170:	mov    r9d,DWORD PTR [rax]
    7173:	lea    rdx,[rip+0x1a04e]        # 211c8 <_fini+0x3fc>
    717a:	mov    QWORD PTR [rsp+0x8],rax
    717f:	mov    ecx,r13d
    7182:	mov    esi,0x1
    7187:	mov    rdi,r12
    718a:	xor    eax,eax
    718c:	mov    DWORD PTR [rsp+0x4],r9d
    7191:	call   5d50 <xc_report_error@plt>
    7196:	mov    r9d,DWORD PTR [rsp+0x4]
    719b:	mov    r8,QWORD PTR [rsp+0x8]
    71a0:	mov    DWORD PTR [r8],r9d
    71a3:	jmp    7118 <xc_suspend_evtchn_init_sane+0x78>
    71a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000071b0 <xc_suspend_evtchn_init_exclusive>:
    71b0:	push   r12
    71b2:	push   rbp
    71b3:	mov    r12,rsi
    71b6:	push   rbx
    71b7:	mov    rbp,rdi
    71ba:	call   58c0 <xc_suspend_evtchn_init_sane@plt>
    71bf:	test   eax,eax
    71c1:	mov    ebx,eax
    71c3:	js     71d2 <xc_suspend_evtchn_init_exclusive+0x22>
    71c5:	mov    edx,eax
    71c7:	mov    rsi,r12
    71ca:	mov    rdi,rbp
    71cd:	call   58b0 <xc_await_suspend@plt>
    71d2:	mov    eax,ebx
    71d4:	pop    rbx
    71d5:	pop    rbp
    71d6:	pop    r12
    71d8:	ret    
    71d9:	nop    DWORD PTR [rax+0x0]

00000000000071e0 <dhdr_type_to_str>:
    71e0:	cmp    edi,0x4
    71e3:	lea    rax,[rip+0x1a000]        # 211ea <_fini+0x41e>
    71ea:	ja     7207 <dhdr_type_to_str+0x27>
    71ec:	lea    rax,[rip+0x2259cd]        # 22cbc0 <dhdr_types>
    71f3:	mov    edi,edi
    71f5:	lea    rdx,[rip+0x19fee]        # 211ea <_fini+0x41e>
    71fc:	mov    rax,QWORD PTR [rax+rdi*8]
    7200:	test   rax,rax
    7203:	cmove  rax,rdx
    7207:	repz ret 
    7209:	nop    DWORD PTR [rax+0x0]

0000000000007210 <rec_type_to_str>:
    7210:	cmp    edi,0xf
    7213:	lea    rax,[rip+0x19fd0]        # 211ea <_fini+0x41e>
    721a:	jbe    7220 <rec_type_to_str+0x10>
    721c:	repz ret 
    721e:	xchg   ax,ax
    7220:	lea    rax,[rip+0x225919]        # 22cb40 <mandatory_rec_types>
    7227:	mov    edi,edi
    7229:	lea    rdx,[rip+0x19fba]        # 211ea <_fini+0x41e>
    7230:	mov    rax,QWORD PTR [rax+rdi*8]
    7234:	test   rax,rax
    7237:	cmove  rax,rdx
    723b:	ret    
    723c:	nop    DWORD PTR [rax+0x0]

0000000000007240 <write_split_record>:
    7240:	push   r13
    7242:	push   r12
    7244:	push   rbp
    7245:	push   rbx
    7246:	sub    rsp,0x88
    724d:	mov    r11d,DWORD PTR [rsi+0x4]
    7251:	mov    rbp,QWORD PTR [rdi]
    7254:	mov    rax,QWORD PTR fs:0x28
    725d:	mov    QWORD PTR [rsp+0x78],rax
    7262:	xor    eax,eax
    7264:	lea    r9,[rsp+0x1c]
    7269:	mov    QWORD PTR [rsp+0x20],rsi
    726e:	mov    QWORD PTR [rsp+0x28],0x4
    7277:	mov    QWORD PTR [rsp+0x38],0x4
    7280:	mov    QWORD PTR [rsp+0x50],rdx
    7285:	lea    eax,[r11+rcx*1]
    7289:	mov    QWORD PTR [rsp+0x30],r9
    728e:	mov    r9,QWORD PTR [rsi+0x8]
    7292:	mov    r8,r11
    7295:	mov    QWORD PTR [rsp+0x48],r11
    729a:	lea    r11,[rip+0x1a1e2]        # 21483 <zeroes.12794>
    72a1:	lea    rbx,[rax+0x7]
    72a5:	mov    DWORD PTR [rsp+0x1c],eax
    72a9:	mov    QWORD PTR [rsp+0x58],rcx
    72ae:	mov    QWORD PTR [rsp+0x40],r9
    72b3:	mov    QWORD PTR [rsp+0x60],r11
    72b8:	and    rbx,0xfffffffffffffff8
    72bc:	mov    r10,rbx
    72bf:	sub    r10,rax
    72c2:	cmp    rbx,0x8000000
    72c9:	mov    QWORD PTR [rsp+0x68],r10
    72ce:	ja     7368 <write_split_record+0x128>
    72d4:	test   r8d,r8d
    72d7:	je     72de <write_split_record+0x9e>
    72d9:	test   r9,r9
    72dc:	je     7343 <write_split_record+0x103>
    72de:	test   rcx,rcx
    72e1:	je     72e8 <write_split_record+0xa8>
    72e3:	test   rdx,rdx
    72e6:	je     7324 <write_split_record+0xe4>
    72e8:	mov    edi,DWORD PTR [rdi+0xc]
    72eb:	lea    rsi,[rsp+0x20]
    72f0:	mov    edx,0x5
    72f5:	call   5880 <writev_exact@plt>
    72fa:	test   eax,eax
    72fc:	jne    73c0 <write_split_record+0x180>
    7302:	mov    rdx,QWORD PTR [rsp+0x78]
    7307:	xor    rdx,QWORD PTR fs:0x28
    7310:	jne    73fe <write_split_record+0x1be>
    7316:	add    rsp,0x88
    731d:	pop    rbx
    731e:	pop    rbp
    731f:	pop    r12
    7321:	pop    r13
    7323:	ret    
    7324:	lea    rcx,[rip+0x1a145]        # 21470 <__PRETTY_FUNCTION__.12800>
    732b:	lea    rsi,[rip+0x19ec1]        # 211f3 <_fini+0x427>
    7332:	lea    rdi,[rip+0x19ed3]        # 2120c <_fini+0x440>
    7339:	mov    edx,0x52
    733e:	call   5c70 <__assert_fail@plt>
    7343:	lea    rcx,[rip+0x1a126]        # 21470 <__PRETTY_FUNCTION__.12800>
    734a:	lea    rsi,[rip+0x19ea2]        # 211f3 <_fini+0x427>
    7351:	lea    rdi,[rip+0x19eaa]        # 21202 <_fini+0x436>
    7358:	mov    edx,0x50
    735d:	call   5c70 <__assert_fail@plt>
    7362:	nop    WORD PTR [rax+rax*1+0x0]
    7368:	mov    QWORD PTR [rsp+0x8],rsi
    736d:	call   5940 <__errno_location@plt>
    7372:	mov    rsi,QWORD PTR [rsp+0x8]
    7377:	mov    r12,rax
    737a:	mov    r13d,DWORD PTR [rax]
    737d:	mov    edi,DWORD PTR [rsi]
    737f:	call   5ea0 <rec_type_to_str@plt>
    7384:	sub    rsp,0x8
    7388:	lea    rdx,[rip+0x19f79]        # 21308 <_fini+0x53c>
    738f:	mov    r8,rax
    7392:	push   0x8000000
    7397:	mov    rsi,QWORD PTR [rsp+0x18]
    739c:	xor    eax,eax
    739e:	mov    r9,rbx
    73a1:	mov    rdi,rbp
    73a4:	mov    ecx,DWORD PTR [rsi]
    73a6:	mov    esi,0x1
    73ab:	call   5d50 <xc_report_error@plt>
    73b0:	mov    DWORD PTR [r12],r13d
    73b4:	pop    rax
    73b5:	mov    eax,0xffffffff
    73ba:	pop    rdx
    73bb:	jmp    7302 <write_split_record+0xc2>
    73c0:	call   5940 <__errno_location@plt>
    73c5:	mov    r12d,DWORD PTR [rax]
    73c8:	mov    rbx,rax
    73cb:	mov    rdi,rbp
    73ce:	mov    esi,r12d
    73d1:	call   6570 <xc_strerror@plt>
    73d6:	mov    ecx,DWORD PTR [rbx]
    73d8:	lea    rdx,[rip+0x19f61]        # 21340 <_fini+0x574>
    73df:	mov    r8,rax
    73e2:	mov    esi,0x1
    73e7:	xor    eax,eax
    73e9:	mov    rdi,rbp
    73ec:	call   5d50 <xc_report_error@plt>
    73f1:	mov    DWORD PTR [rbx],r12d
    73f4:	mov    eax,0xffffffff
    73f9:	jmp    7302 <write_split_record+0xc2>
    73fe:	call   5b80 <__stack_chk_fail@plt>
    7403:	nop    DWORD PTR [rax]
    7406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007410 <read_record>:
    7410:	push   r15
    7412:	push   r14
    7414:	mov    r14,rdx
    7417:	push   r13
    7419:	push   r12
    741b:	mov    r12d,esi
    741e:	push   rbp
    741f:	push   rbx
    7420:	mov    edx,0x8
    7425:	sub    rsp,0x18
    7429:	mov    r13,QWORD PTR [rdi]
    742c:	mov    edi,r12d
    742f:	mov    rsi,rsp
    7432:	mov    rax,QWORD PTR fs:0x28
    743b:	mov    QWORD PTR [rsp+0x8],rax
    7440:	xor    eax,eax
    7442:	call   6370 <read_exact@plt>
    7447:	test   eax,eax
    7449:	jne    74e1 <read_record+0xd1>
    744f:	mov    ebp,DWORD PTR [rsp+0x4]
    7453:	cmp    ebp,0x8000000
    7459:	ja     751d <read_record+0x10d>
    745f:	mov    ecx,ebp
    7461:	mov    r15d,eax
    7464:	add    rcx,0x7
    7468:	mov    rbx,rcx
    746b:	and    rbx,0xfffffffffffffff8
    746f:	jne    74b0 <read_record+0xa0>
    7471:	mov    QWORD PTR [r14+0x8],0x0
    7479:	mov    eax,DWORD PTR [rsp]
    747c:	mov    DWORD PTR [r14+0x4],ebp
    7480:	mov    DWORD PTR [r14],eax
    7483:	mov    rdx,QWORD PTR [rsp+0x8]
    7488:	xor    rdx,QWORD PTR fs:0x28
    7491:	mov    eax,r15d
    7494:	jne    7617 <read_record+0x207>
    749a:	add    rsp,0x18
    749e:	pop    rbx
    749f:	pop    rbp
    74a0:	pop    r12
    74a2:	pop    r13
    74a4:	pop    r14
    74a6:	pop    r15
    74a8:	ret    
    74a9:	nop    DWORD PTR [rax+0x0]
    74b0:	mov    rdi,rbx
    74b3:	call   5ff0 <malloc@plt>
    74b8:	test   rax,rax
    74bb:	mov    QWORD PTR [r14+0x8],rax
    74bf:	je     75d5 <read_record+0x1c5>
    74c5:	mov    rdx,rbx
    74c8:	mov    rsi,rax
    74cb:	mov    edi,r12d
    74ce:	call   6370 <read_exact@plt>
    74d3:	test   eax,eax
    74d5:	jne    7569 <read_record+0x159>
    74db:	mov    ebp,DWORD PTR [rsp+0x4]
    74df:	jmp    7479 <read_record+0x69>
    74e1:	call   5940 <__errno_location@plt>
    74e6:	mov    ebp,DWORD PTR [rax]
    74e8:	mov    rbx,rax
    74eb:	mov    rdi,r13
    74ee:	mov    r15d,0xffffffff
    74f4:	mov    esi,ebp
    74f6:	call   6570 <xc_strerror@plt>
    74fb:	mov    ecx,DWORD PTR [rbx]
    74fd:	lea    rdx,[rip+0x19e6c]        # 21370 <_fini+0x5a4>
    7504:	mov    r8,rax
    7507:	mov    esi,0x1
    750c:	mov    rdi,r13
    750f:	xor    eax,eax
    7511:	call   5d50 <xc_report_error@plt>
    7516:	mov    DWORD PTR [rbx],ebp
    7518:	jmp    7483 <read_record+0x73>
    751d:	call   5940 <__errno_location@plt>
    7522:	mov    edi,DWORD PTR [rsp]
    7525:	mov    rbx,rax
    7528:	mov    r12d,DWORD PTR [rax]
    752b:	mov    r15d,0xffffffff
    7531:	call   5ea0 <rec_type_to_str@plt>
    7536:	sub    rsp,0x8
    753a:	lea    rdx,[rip+0x19e67]        # 213a8 <_fini+0x5dc>
    7541:	mov    r8,rax
    7544:	push   0x8000000
    7549:	mov    ecx,DWORD PTR [rsp+0x10]
    754d:	mov    esi,0x1
    7552:	mov    r9d,ebp
    7555:	mov    rdi,r13
    7558:	xor    eax,eax
    755a:	call   5d50 <xc_report_error@plt>
    755f:	mov    DWORD PTR [rbx],r12d
    7562:	pop    rcx
    7563:	pop    rsi
    7564:	jmp    7483 <read_record+0x73>
    7569:	mov    rdi,QWORD PTR [r14+0x8]
    756d:	call   5900 <free@plt>
    7572:	mov    QWORD PTR [r14+0x8],0x0
    757a:	call   5940 <__errno_location@plt>
    757f:	mov    r12d,DWORD PTR [rax]
    7582:	mov    rbp,rax
    7585:	mov    rdi,r13
    7588:	mov    esi,r12d
    758b:	call   6570 <xc_strerror@plt>
    7590:	mov    edi,DWORD PTR [rsp]
    7593:	mov    r14d,DWORD PTR [rbp+0x0]
    7597:	mov    r15,rax
    759a:	call   5ea0 <rec_type_to_str@plt>
    759f:	push   r15
    75a1:	push   r14
    75a3:	lea    rdx,[rip+0x19e76]        # 21420 <_fini+0x654>
    75aa:	mov    r8d,DWORD PTR [rsp+0x10]
    75af:	mov    r9,rax
    75b2:	mov    rcx,rbx
    75b5:	xor    eax,eax
    75b7:	mov    esi,0x1
    75bc:	mov    rdi,r13
    75bf:	mov    r15d,0xffffffff
    75c5:	call   5d50 <xc_report_error@plt>
    75ca:	mov    DWORD PTR [rbp+0x0],r12d
    75ce:	pop    rax
    75cf:	pop    rdx
    75d0:	jmp    7483 <read_record+0x73>
    75d5:	call   5940 <__errno_location@plt>
    75da:	mov    edi,DWORD PTR [rsp]
    75dd:	mov    rbp,rax
    75e0:	mov    r12d,DWORD PTR [rax]
    75e3:	mov    r15d,0xffffffff
    75e9:	call   5ea0 <rec_type_to_str@plt>
    75ee:	mov    r8d,DWORD PTR [rsp]
    75f2:	lea    rdx,[rip+0x19de7]        # 213e0 <_fini+0x614>
    75f9:	mov    r9,rax
    75fc:	mov    rcx,rbx
    75ff:	mov    esi,0x1
    7604:	mov    rdi,r13
    7607:	xor    eax,eax
    7609:	call   5d50 <xc_report_error@plt>
    760e:	mov    DWORD PTR [rbp+0x0],r12d
    7612:	jmp    7483 <read_record+0x73>
    7617:	call   5b80 <__stack_chk_fail@plt>
    761c:	nop    DWORD PTR [rax+0x0]

0000000000007620 <write_tsc_info>:
    7620:	push   r12
    7622:	push   rbp
    7623:	push   rbx
    7624:	pxor   xmm0,xmm0
    7628:	mov    rbx,rdi
    762b:	sub    rsp,0x30
    762f:	mov    rbp,QWORD PTR [rdi]
    7632:	mov    esi,DWORD PTR [rdi+0x8]
    7635:	lea    rdx,[rsp+0x10]
    763a:	mov    QWORD PTR [rsp+0x20],0x0
    7643:	mov    rax,QWORD PTR fs:0x28
    764c:	mov    QWORD PTR [rsp+0x28],rax
    7651:	xor    eax,eax
    7653:	lea    rcx,[rdx+0x8]
    7657:	lea    r9,[rdx+0x10]
    765b:	lea    r8,[rdx+0x4]
    765f:	movabs rax,0x1800000008
    7669:	mov    rdi,rbp
    766c:	mov    QWORD PTR [rsp+0x8],rdx
    7671:	movaps XMMWORD PTR [rsp+0x10],xmm0
    7676:	mov    QWORD PTR [rsp],rax
    767a:	call   6600 <xc_domain_get_tsc_info@plt>
    767f:	test   eax,eax
    7681:	js     76b0 <write_tsc_info+0x90>
    7683:	mov    rsi,rsp
    7686:	xor    ecx,ecx
    7688:	xor    edx,edx
    768a:	mov    rdi,rbx
    768d:	call   5870 <write_split_record@plt>
    7692:	mov    rdi,QWORD PTR [rsp+0x28]
    7697:	xor    rdi,QWORD PTR fs:0x28
    76a0:	jne    76eb <write_tsc_info+0xcb>
    76a2:	add    rsp,0x30
    76a6:	pop    rbx
    76a7:	pop    rbp
    76a8:	pop    r12
    76aa:	ret    
    76ab:	nop    DWORD PTR [rax+rax*1+0x0]
    76b0:	call   5940 <__errno_location@plt>
    76b5:	mov    r12d,DWORD PTR [rax]
    76b8:	mov    rbx,rax
    76bb:	mov    rdi,rbp
    76be:	mov    esi,r12d
    76c1:	call   6570 <xc_strerror@plt>
    76c6:	mov    ecx,DWORD PTR [rbx]
    76c8:	lea    rdx,[rip+0x19dc1]        # 21490 <zeroes.12794+0xd>
    76cf:	mov    r8,rax
    76d2:	mov    esi,0x1
    76d7:	xor    eax,eax
    76d9:	mov    rdi,rbp
    76dc:	call   5d50 <xc_report_error@plt>
    76e1:	mov    DWORD PTR [rbx],r12d
    76e4:	mov    eax,0xffffffff
    76e9:	jmp    7692 <write_tsc_info+0x72>
    76eb:	call   5b80 <__stack_chk_fail@plt>

00000000000076f0 <handle_tsc_info>:
    76f0:	push   r13
    76f2:	push   r12
    76f4:	push   rbp
    76f5:	push   rbx
    76f6:	sub    rsp,0x8
    76fa:	mov    ebx,DWORD PTR [rsi+0x4]
    76fd:	mov    rbp,QWORD PTR [rdi]
    7700:	mov    rax,QWORD PTR [rsi+0x8]
    7704:	cmp    ebx,0x18
    7707:	jne    7738 <handle_tsc_info+0x48>
    7709:	mov    esi,DWORD PTR [rdi+0x8]
    770c:	mov    rcx,QWORD PTR [rax+0x8]
    7710:	mov    rdi,rbp
    7713:	mov    r9d,DWORD PTR [rax+0x10]
    7717:	mov    r8d,DWORD PTR [rax+0x4]
    771b:	mov    edx,DWORD PTR [rax]
    771d:	call   62a0 <xc_domain_set_tsc_info@plt>
    7722:	test   eax,eax
    7724:	jne    776c <handle_tsc_info+0x7c>
    7726:	add    rsp,0x8
    772a:	pop    rbx
    772b:	pop    rbp
    772c:	pop    r12
    772e:	pop    r13
    7730:	ret    
    7731:	nop    DWORD PTR [rax+0x0]
    7738:	call   5940 <__errno_location@plt>
    773d:	mov    r13d,DWORD PTR [rax]
    7740:	lea    rdx,[rip+0x19d79]        # 214c0 <zeroes.12794+0x3d>
    7747:	mov    r12,rax
    774a:	mov    r8d,0x18
    7750:	xor    eax,eax
    7752:	mov    ecx,ebx
    7754:	mov    esi,0x1
    7759:	mov    rdi,rbp
    775c:	call   5d50 <xc_report_error@plt>
    7761:	mov    DWORD PTR [r12],r13d
    7765:	mov    eax,0xffffffff
    776a:	jmp    7726 <handle_tsc_info+0x36>
    776c:	call   5940 <__errno_location@plt>
    7771:	mov    r12d,DWORD PTR [rax]
    7774:	mov    rbx,rax
    7777:	mov    rdi,rbp
    777a:	mov    esi,r12d
    777d:	call   6570 <xc_strerror@plt>
    7782:	mov    ecx,DWORD PTR [rbx]
    7784:	lea    rdx,[rip+0x19d6d]        # 214f8 <zeroes.12794+0x75>
    778b:	mov    r8,rax
    778e:	mov    esi,0x1
    7793:	xor    eax,eax
    7795:	mov    rdi,rbp
    7798:	call   5d50 <xc_report_error@plt>
    779d:	mov    DWORD PTR [rbx],r12d
    77a0:	mov    eax,0xffffffff
    77a5:	jmp    7726 <handle_tsc_info+0x36>
    77aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000077b0 <mfn_to_pfn>:
    77b0:	cmp    QWORD PTR [rdi+0x168],rsi
    77b7:	jb     77c5 <mfn_to_pfn+0x15>
    77b9:	mov    rax,QWORD PTR [rdi+0x170]
    77c0:	mov    rax,QWORD PTR [rax+rsi*8]
    77c4:	ret    
    77c5:	lea    rcx,[rip+0x19f74]        # 21740 <__PRETTY_FUNCTION__.12816>
    77cc:	lea    rsi,[rip+0x19d4d]        # 21520 <zeroes.12794+0x9d>
    77d3:	lea    rdi,[rip+0x19d5c]        # 21536 <zeroes.12794+0xb3>
    77da:	sub    rsp,0x8
    77de:	mov    edx,0x7
    77e3:	call   5c70 <__assert_fail@plt>
    77e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000077f0 <mfn_in_pseudophysmap>:
    77f0:	cmp    QWORD PTR [rdi+0x168],rsi
    77f7:	jae    7800 <mfn_in_pseudophysmap+0x10>
    77f9:	xor    eax,eax
    77fb:	ret    
    77fc:	nop    DWORD PTR [rax+0x0]
    7800:	push   r13
    7802:	push   r12
    7804:	push   rbp
    7805:	push   rbx
    7806:	mov    rbx,rdi
    7809:	mov    rbp,rsi
    780c:	sub    rsp,0x8
    7810:	call   6450 <mfn_to_pfn@plt>
    7815:	cmp    rax,QWORD PTR [rbx+0x188]
    781c:	jbe    7830 <mfn_in_pseudophysmap+0x40>
    781e:	add    rsp,0x8
    7822:	xor    eax,eax
    7824:	pop    rbx
    7825:	pop    rbp
    7826:	pop    r12
    7828:	pop    r13
    782a:	ret    
    782b:	nop    DWORD PTR [rax+rax*1+0x0]
    7830:	mov    r12d,DWORD PTR [rbx+0x160]
    7837:	mov    rsi,rbp
    783a:	mov    rdi,rbx
    783d:	mov    r13,QWORD PTR [rbx+0x198]
    7844:	call   6450 <mfn_to_pfn@plt>
    7849:	cmp    r12d,0x8
    784d:	je     7878 <mfn_in_pseudophysmap+0x88>
    784f:	mov    eax,DWORD PTR [r13+rax*4+0x0]
    7854:	mov    rdx,0xffffffffffffffff
    785b:	cmp    eax,0xffffffff
    785e:	cmove  rax,rdx
    7862:	cmp    rbp,rax
    7865:	sete   al
    7868:	add    rsp,0x8
    786c:	pop    rbx
    786d:	pop    rbp
    786e:	pop    r12
    7870:	pop    r13
    7872:	ret    
    7873:	nop    DWORD PTR [rax+rax*1+0x0]
    7878:	mov    rax,QWORD PTR [r13+rax*8+0x0]
    787d:	jmp    7862 <mfn_in_pseudophysmap+0x72>
    787f:	nop

0000000000007880 <dump_bad_pseudophysmap_entry>:
    7880:	push   r15
    7882:	push   r14
    7884:	push   r13
    7886:	push   r12
    7888:	push   rbp
    7889:	push   rbx
    788a:	mov    rbx,rdi
    788d:	mov    rbp,rsi
    7890:	sub    rsp,0x8
    7894:	mov    r14,QWORD PTR [rdi]
    7897:	call   5940 <__errno_location@plt>
    789c:	mov    r8,QWORD PTR [rbx+0x168]
    78a3:	mov    r13d,DWORD PTR [rax]
    78a6:	lea    rdx,[rip+0x19ca4]        # 21551 <zeroes.12794+0xce>
    78ad:	mov    r12,rax
    78b0:	mov    rcx,rbp
    78b3:	xor    eax,eax
    78b5:	mov    esi,0x1
    78ba:	mov    rdi,r14
    78bd:	call   5d50 <xc_report_error@plt>
    78c2:	cmp    rbp,0xffffffffffffffff
    78c6:	mov    DWORD PTR [r12],r13d
    78ca:	je     78d5 <dump_bad_pseudophysmap_entry+0x55>
    78cc:	cmp    QWORD PTR [rbx+0x168],rbp
    78d3:	jae    78e8 <dump_bad_pseudophysmap_entry+0x68>
    78d5:	add    rsp,0x8
    78d9:	pop    rbx
    78da:	pop    rbp
    78db:	pop    r12
    78dd:	pop    r13
    78df:	pop    r14
    78e1:	pop    r15
    78e3:	ret    
    78e4:	nop    DWORD PTR [rax+0x0]
    78e8:	mov    rax,QWORD PTR [rbx+0x170]
    78ef:	mov    r9,QWORD PTR [rbx+0x188]
    78f6:	lea    rdx,[rip+0x19c9b]        # 21598 <zeroes.12794+0x115>
    78fd:	mov    rcx,rbp
    7900:	mov    esi,0x1
    7905:	mov    rdi,r14
    7908:	mov    r15,QWORD PTR [rax+rbp*8]
    790c:	xor    eax,eax
    790e:	mov    r8,r15
    7911:	call   5d50 <xc_report_error@plt>
    7916:	cmp    r15,0xffffffffffffffff
    791a:	mov    DWORD PTR [r12],r13d
    791e:	je     78d5 <dump_bad_pseudophysmap_entry+0x55>
    7920:	cmp    QWORD PTR [rbx+0x188],r15
    7927:	jb     78d5 <dump_bad_pseudophysmap_entry+0x55>
    7929:	cmp    DWORD PTR [rbx+0x160],0x8
    7930:	mov    rax,QWORD PTR [rbx+0x198]
    7937:	je     7970 <dump_bad_pseudophysmap_entry+0xf0>
    7939:	mov    r8d,DWORD PTR [rax+r15*4]
    793d:	mov    rax,0xffffffffffffffff
    7944:	cmp    r8d,0xffffffff
    7948:	cmove  r8,rax
    794c:	lea    rdx,[rip+0x19c11]        # 21564 <zeroes.12794+0xe1>
    7953:	mov    rcx,r15
    7956:	mov    esi,0x1
    795b:	mov    rdi,r14
    795e:	xor    eax,eax
    7960:	call   5d50 <xc_report_error@plt>
    7965:	mov    DWORD PTR [r12],r13d
    7969:	jmp    78d5 <dump_bad_pseudophysmap_entry+0x55>
    796e:	xchg   ax,ax
    7970:	mov    r8,QWORD PTR [rax+r15*8]
    7974:	jmp    794c <dump_bad_pseudophysmap_entry+0xcc>
    7976:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007980 <cr3_to_mfn>:
    7980:	cmp    DWORD PTR [rdi+0x160],0x8
    7987:	je     79b0 <cr3_to_mfn+0x30>
    7989:	movabs rdx,0xffffffff00000000
    7993:	mov    rax,0xffffffffffffffff
    799a:	test   rsi,rdx
    799d:	jne    79ab <cr3_to_mfn+0x2b>
    799f:	mov    rax,rsi
    79a2:	shl    esi,0x14
    79a5:	shr    rax,0xc
    79a9:	or     eax,esi
    79ab:	repz ret 
    79ad:	nop    DWORD PTR [rax]
    79b0:	mov    rax,rsi
    79b3:	shr    rax,0xc
    79b7:	ret    
    79b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000079c0 <mfn_to_cr3>:
    79c0:	cmp    DWORD PTR [rdi+0x160],0x8
    79c7:	je     79f0 <mfn_to_cr3+0x30>
    79c9:	movabs rdx,0xffffffff00000000
    79d3:	mov    rax,0xffffffffffffffff
    79da:	test   rsi,rdx
    79dd:	jne    79ea <mfn_to_cr3+0x2a>
    79df:	mov    eax,esi
    79e1:	shr    rsi,0x14
    79e5:	shl    eax,0xc
    79e8:	or     eax,esi
    79ea:	repz ret 
    79ec:	nop    DWORD PTR [rax+0x0]
    79f0:	mov    rax,rsi
    79f3:	shl    rax,0xc
    79f7:	ret    
    79f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007a00 <x86_pv_domain_info>:
    7a00:	push   r13
    7a02:	push   r12
    7a04:	push   rbp
    7a05:	push   rbx
    7a06:	mov    rbx,rdi
    7a09:	sub    rsp,0x18
    7a0d:	mov    rbp,QWORD PTR [rdi]
    7a10:	mov    esi,DWORD PTR [rdi+0x8]
    7a13:	lea    rdx,[rsp+0x4]
    7a18:	mov    rax,QWORD PTR fs:0x28
    7a21:	mov    QWORD PTR [rsp+0x8],rax
    7a26:	xor    eax,eax
    7a28:	mov    rdi,rbp
    7a2b:	call   6170 <xc_domain_get_guest_width@plt>
    7a30:	mov    r12d,eax
    7a33:	call   5940 <__errno_location@plt>
    7a38:	test   r12d,r12d
    7a3b:	mov    r13,rax
    7a3e:	jne    7ae9 <x86_pv_domain_info+0xe9>
    7a44:	mov    eax,DWORD PTR [rsp+0x4]
    7a48:	cmp    eax,0x4
    7a4b:	lea    r9d,[rax*8+0x0]
    7a53:	je     7ab8 <x86_pv_domain_info+0xb8>
    7a55:	cmp    eax,0x8
    7a58:	jne    7ac0 <x86_pv_domain_info+0xc0>
    7a5a:	mov    edx,0x4
    7a5f:	mov    DWORD PTR [rbx+0x160],eax
    7a65:	mov    DWORD PTR [rbx+0x164],edx
    7a6b:	sub    rsp,0x8
    7a6f:	mov    ebx,DWORD PTR [r13+0x0]
    7a73:	mov    rsi,QWORD PTR [rbp+0x8]
    7a77:	lea    r8,[rip+0x19af9]        # 21577 <zeroes.12794+0xf4>
    7a7e:	push   rdx
    7a7f:	xor    eax,eax
    7a81:	mov    edx,0x3
    7a86:	xor    ecx,ecx
    7a88:	mov    rdi,rbp
    7a8b:	call   6540 <xc_report@plt>
    7a90:	mov    DWORD PTR [r13+0x0],ebx
    7a94:	pop    rax
    7a95:	pop    rdx
    7a96:	mov    rcx,QWORD PTR [rsp+0x8]
    7a9b:	xor    rcx,QWORD PTR fs:0x28
    7aa4:	mov    eax,r12d
    7aa7:	jne    7b26 <x86_pv_domain_info+0x126>
    7aa9:	add    rsp,0x18
    7aad:	pop    rbx
    7aae:	pop    rbp
    7aaf:	pop    r12
    7ab1:	pop    r13
    7ab3:	ret    
    7ab4:	nop    DWORD PTR [rax+0x0]
    7ab8:	mov    edx,0x3
    7abd:	jmp    7a5f <x86_pv_domain_info+0x5f>
    7abf:	nop
    7ac0:	mov    ebx,DWORD PTR [r13+0x0]
    7ac4:	lea    rdx,[rip+0x19b25]        # 215f0 <zeroes.12794+0x16d>
    7acb:	mov    ecx,r9d
    7ace:	mov    esi,0x1
    7ad3:	mov    rdi,rbp
    7ad6:	xor    eax,eax
    7ad8:	call   5d50 <xc_report_error@plt>
    7add:	mov    r12d,0xffffffff
    7ae3:	mov    DWORD PTR [r13+0x0],ebx
    7ae7:	jmp    7a96 <x86_pv_domain_info+0x96>
    7ae9:	mov    r12d,DWORD PTR [rax]
    7aec:	mov    rdi,rbp
    7aef:	mov    esi,r12d
    7af2:	call   6570 <xc_strerror@plt>
    7af7:	mov    ecx,DWORD PTR [rbx+0x8]
    7afa:	mov    r8d,DWORD PTR [r13+0x0]
    7afe:	lea    rdx,[rip+0x19abb]        # 215c0 <zeroes.12794+0x13d>
    7b05:	mov    r9,rax
    7b08:	mov    esi,0x1
    7b0d:	mov    rdi,rbp
    7b10:	xor    eax,eax
    7b12:	call   5d50 <xc_report_error@plt>
    7b17:	mov    DWORD PTR [r13+0x0],r12d
    7b1b:	mov    r12d,0xffffffff
    7b21:	jmp    7a96 <x86_pv_domain_info+0x96>
    7b26:	call   5b80 <__stack_chk_fail@plt>
    7b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007b30 <x86_pv_map_m2p>:
    7b30:	push   r15
    7b32:	push   r14
    7b34:	push   r13
    7b36:	push   r12
    7b38:	mov    r12,rdi
    7b3b:	push   rbp
    7b3c:	push   rbx
    7b3d:	sub    rsp,0x48
    7b41:	mov    rbp,QWORD PTR [rdi]
    7b44:	lea    rsi,[rsp+0x18]
    7b49:	mov    rax,QWORD PTR fs:0x28
    7b52:	mov    QWORD PTR [rsp+0x38],rax
    7b57:	xor    eax,eax
    7b59:	mov    rdi,rbp
    7b5c:	call   6420 <xc_maximum_ram_page@plt>
    7b61:	mov    ebx,eax
    7b63:	call   5940 <__errno_location@plt>
    7b68:	test   ebx,ebx
    7b6a:	mov    r15,rax
    7b6d:	js     7d7d <x86_pv_map_m2p+0x24d>
    7b73:	mov    rax,QWORD PTR [rsp+0x18]
    7b78:	lea    rbx,[rax*8+0x1fffff]
    7b80:	mov    QWORD PTR [r12+0x168],rax
    7b88:	mov    rax,rbx
    7b8b:	shr    rbx,0x15
    7b8f:	lea    r13,[rbx*8+0x0]
    7b97:	and    rax,0xffffffffffe00000
    7b9d:	mov    QWORD PTR [rsp],rax
    7ba1:	mov    rdi,r13
    7ba4:	call   5ff0 <malloc@plt>
    7ba9:	test   rax,rax
    7bac:	mov    r14,rax
    7baf:	je     7dd9 <x86_pv_map_m2p+0x2a9>
    7bb5:	mov    rdx,rax
    7bb8:	mov    rsi,rbx
    7bbb:	mov    rdi,rbp
    7bbe:	call   62f0 <xc_machphys_mfn_list@plt>
    7bc3:	test   eax,eax
    7bc5:	jne    7d42 <x86_pv_map_m2p+0x212>
    7bcb:	lea    rcx,[rbx+rbx*2]
    7bcf:	shl    rcx,0x3
    7bd3:	mov    rdi,rcx
    7bd6:	mov    QWORD PTR [rsp+0x8],rcx
    7bdb:	call   5ff0 <malloc@plt>
    7be0:	test   rax,rax
    7be3:	mov    r13,rax
    7be6:	mov    rcx,QWORD PTR [rsp+0x8]
    7beb:	je     7e07 <x86_pv_map_m2p+0x2d7>
    7bf1:	test   rbx,rbx
    7bf4:	je     7c1c <x86_pv_map_m2p+0xec>
    7bf6:	lea    rax,[rax+0x8]
    7bfa:	lea    rsi,[r13+rcx*1+0x8]
    7bff:	mov    rdx,r14
    7c02:	nop    WORD PTR [rax+rax*1+0x0]
    7c08:	mov    rcx,QWORD PTR [rdx]
    7c0b:	add    rax,0x18
    7c0f:	add    rdx,0x8
    7c13:	mov    QWORD PTR [rax-0x18],rcx
    7c17:	cmp    rax,rsi
    7c1a:	jne    7c08 <x86_pv_map_m2p+0xd8>
    7c1c:	sub    rsp,0x8
    7c20:	mov    ecx,0x1
    7c25:	mov    r9,r13
    7c28:	push   rbx
    7c29:	mov    rdx,QWORD PTR [rsp+0x10]
    7c2e:	mov    r8d,0x200000
    7c34:	mov    esi,0x7ff2
    7c39:	mov    rdi,rbp
    7c3c:	call   6580 <xc_map_foreign_ranges@plt>
    7c41:	test   rax,rax
    7c44:	mov    QWORD PTR [r12+0x170],rax
    7c4c:	pop    rdx
    7c4d:	pop    rcx
    7c4e:	je     7dba <x86_pv_map_m2p+0x28a>
    7c54:	pxor   xmm0,xmm0
    7c58:	shl    rbx,0x9
    7c5c:	lea    rax,[r12+0x178]
    7c64:	lea    rdx,[rsp+0x20]
    7c69:	mov    QWORD PTR [r12+0x180],rbx
    7c71:	mov    ecx,0x18
    7c76:	mov    esi,0x19
    7c7b:	mov    rdi,rbp
    7c7e:	mov    DWORD PTR [rsp+0x34],0x0
    7c86:	movups XMMWORD PTR [rsp+0x24],xmm0
    7c8b:	mov    DWORD PTR [rsp+0x20],0x1
    7c93:	mov    QWORD PTR [rsp+0x28],rax
    7c98:	call   6090 <do_memory_op@plt>
    7c9d:	test   eax,eax
    7c9f:	mov    DWORD PTR [rsp],eax
    7ca2:	mov    ebx,DWORD PTR [r15]
    7ca5:	jne    7d10 <x86_pv_map_m2p+0x1e0>
    7ca7:	cmp    DWORD PTR [rsp+0x30],0x1
    7cac:	jne    7d10 <x86_pv_map_m2p+0x1e0>
    7cae:	mov    rsi,QWORD PTR [rbp+0x8]
    7cb2:	mov    r9,QWORD PTR [r12+0x168]
    7cba:	lea    r8,[rip+0x198c9]        # 2158a <zeroes.12794+0x107>
    7cc1:	xor    ecx,ecx
    7cc3:	mov    edx,0x3
    7cc8:	mov    rdi,rbp
    7ccb:	xor    eax,eax
    7ccd:	call   6540 <xc_report@plt>
    7cd2:	mov    DWORD PTR [r15],ebx
    7cd5:	mov    rdi,r13
    7cd8:	call   5900 <free@plt>
    7cdd:	mov    rdi,r14
    7ce0:	call   5900 <free@plt>
    7ce5:	mov    rdi,QWORD PTR [rsp+0x38]
    7cea:	xor    rdi,QWORD PTR fs:0x28
    7cf3:	mov    eax,DWORD PTR [rsp]
    7cf6:	jne    7e2f <x86_pv_map_m2p+0x2ff>
    7cfc:	add    rsp,0x48
    7d00:	pop    rbx
    7d01:	pop    rbp
    7d02:	pop    r12
    7d04:	pop    r13
    7d06:	pop    r14
    7d08:	pop    r15
    7d0a:	ret    
    7d0b:	nop    DWORD PTR [rax+rax*1+0x0]
    7d10:	mov    esi,ebx
    7d12:	mov    rdi,rbp
    7d15:	call   6570 <xc_strerror@plt>
    7d1a:	mov    ecx,DWORD PTR [r15]
    7d1d:	lea    rdx,[rip+0x199e4]        # 21708 <zeroes.12794+0x285>
    7d24:	mov    r8,rax
    7d27:	mov    esi,0x1
    7d2c:	mov    rdi,rbp
    7d2f:	xor    eax,eax
    7d31:	call   5d50 <xc_report_error@plt>
    7d36:	mov    DWORD PTR [r15],ebx
    7d39:	mov    DWORD PTR [rsp],0xffffffff
    7d40:	jmp    7cd5 <x86_pv_map_m2p+0x1a5>
    7d42:	mov    ebx,DWORD PTR [r15]
    7d45:	mov    rdi,rbp
    7d48:	xor    r13d,r13d
    7d4b:	mov    esi,ebx
    7d4d:	call   6570 <xc_strerror@plt>
    7d52:	mov    ecx,DWORD PTR [r15]
    7d55:	lea    rdx,[rip+0x19924]        # 21680 <zeroes.12794+0x1fd>
    7d5c:	mov    r8,rax
    7d5f:	mov    esi,0x1
    7d64:	mov    rdi,rbp
    7d67:	xor    eax,eax
    7d69:	call   5d50 <xc_report_error@plt>
    7d6e:	mov    DWORD PTR [r15],ebx
    7d71:	mov    DWORD PTR [rsp],0xffffffff
    7d78:	jmp    7cd5 <x86_pv_map_m2p+0x1a5>
    7d7d:	mov    ebx,DWORD PTR [rax]
    7d7f:	mov    rdi,rbp
    7d82:	xor    r14d,r14d
    7d85:	xor    r13d,r13d
    7d88:	mov    esi,ebx
    7d8a:	call   6570 <xc_strerror@plt>
    7d8f:	mov    ecx,DWORD PTR [r15]
    7d92:	lea    rdx,[rip+0x19887]        # 21620 <zeroes.12794+0x19d>
    7d99:	mov    r8,rax
    7d9c:	mov    esi,0x1
    7da1:	mov    rdi,rbp
    7da4:	xor    eax,eax
    7da6:	call   5d50 <xc_report_error@plt>
    7dab:	mov    DWORD PTR [r15],ebx
    7dae:	mov    DWORD PTR [rsp],0xffffffff
    7db5:	jmp    7cd5 <x86_pv_map_m2p+0x1a5>
    7dba:	mov    ebx,DWORD PTR [r15]
    7dbd:	mov    rdi,rbp
    7dc0:	mov    esi,ebx
    7dc2:	call   6570 <xc_strerror@plt>
    7dc7:	mov    ecx,DWORD PTR [r15]
    7dca:	mov    r8,rax
    7dcd:	lea    rdx,[rip+0x1990c]        # 216e0 <zeroes.12794+0x25d>
    7dd4:	jmp    7d27 <x86_pv_map_m2p+0x1f7>
    7dd9:	mov    ebx,DWORD PTR [r15]
    7ddc:	lea    rdx,[rip+0x1986d]        # 21650 <zeroes.12794+0x1cd>
    7de3:	mov    rcx,r13
    7de6:	mov    esi,0x1
    7deb:	mov    rdi,rbp
    7dee:	xor    eax,eax
    7df0:	call   5d50 <xc_report_error@plt>
    7df5:	xor    r13d,r13d
    7df8:	mov    DWORD PTR [r15],ebx
    7dfb:	mov    DWORD PTR [rsp],0xffffffff
    7e02:	jmp    7cd5 <x86_pv_map_m2p+0x1a5>
    7e07:	mov    ebx,DWORD PTR [r15]
    7e0a:	lea    rdx,[rip+0x19897]        # 216a8 <zeroes.12794+0x225>
    7e11:	mov    esi,0x1
    7e16:	mov    rdi,rbp
    7e19:	xor    eax,eax
    7e1b:	call   5d50 <xc_report_error@plt>
    7e20:	mov    DWORD PTR [r15],ebx
    7e23:	mov    DWORD PTR [rsp],0xffffffff
    7e2a:	jmp    7cd5 <x86_pv_map_m2p+0x1a5>
    7e2f:	call   5b80 <__stack_chk_fail@plt>
    7e34:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7e3e:	xchg   ax,ax

0000000000007e40 <x86_pv_pfn_is_valid>:
    7e40:	cmp    QWORD PTR [rdi+0x188],rsi
    7e47:	setae  al
    7e4a:	ret    
    7e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007e50 <x86_pv_cleanup>:
    7e50:	push   r12
    7e52:	mov    r12,rdi
    7e55:	push   rbp
    7e56:	push   rbx
    7e57:	mov    rdi,QWORD PTR [rdi+0x198]
    7e5e:	call   5900 <free@plt>
    7e63:	mov    rdi,QWORD PTR [r12+0x1a0]
    7e6b:	call   5900 <free@plt>
    7e70:	mov    rdi,QWORD PTR [r12+0x1c8]
    7e78:	test   rdi,rdi
    7e7b:	je     7ed6 <x86_pv_cleanup+0x86>
    7e7d:	mov    eax,DWORD PTR [r12+0x1d0]
    7e85:	test   eax,eax
    7e87:	je     7ed1 <x86_pv_cleanup+0x81>
    7e89:	xor    ebp,ebp
    7e8b:	nop    DWORD PTR [rax+rax*1+0x0]
    7e90:	mov    ebx,ebp
    7e92:	add    ebp,0x1
    7e95:	shl    rbx,0x6
    7e99:	add    rbx,rdi
    7e9c:	mov    rdi,QWORD PTR [rbx]
    7e9f:	call   5900 <free@plt>
    7ea4:	mov    rdi,QWORD PTR [rbx+0x8]
    7ea8:	call   5900 <free@plt>
    7ead:	mov    rdi,QWORD PTR [rbx+0x10]
    7eb1:	call   5900 <free@plt>
    7eb6:	mov    rdi,QWORD PTR [rbx+0x18]
    7eba:	call   5900 <free@plt>
    7ebf:	cmp    DWORD PTR [r12+0x1d0],ebp
    7ec7:	mov    rdi,QWORD PTR [r12+0x1c8]
    7ecf:	ja     7e90 <x86_pv_cleanup+0x40>
    7ed1:	call   5900 <free@plt>
    7ed6:	mov    rdi,QWORD PTR [r12+0x1c0]
    7ede:	call   5900 <free@plt>
    7ee3:	mov    rdi,QWORD PTR [r12+0x170]
    7eeb:	test   rdi,rdi
    7eee:	je     7f01 <x86_pv_cleanup+0xb1>
    7ef0:	mov    rsi,QWORD PTR [r12+0x180]
    7ef8:	shl    rsi,0xc
    7efc:	call   61b0 <munmap@plt>
    7f01:	pop    rbx
    7f02:	xor    eax,eax
    7f04:	pop    rbp
    7f05:	pop    r12
    7f07:	ret    
    7f08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007f10 <x86_pv_set_page_type>:
    7f10:	cmp    QWORD PTR [rdi+0x188],rsi
    7f17:	jb     7f24 <x86_pv_set_page_type+0x14>
    7f19:	mov    rax,QWORD PTR [rdi+0x1c0]
    7f20:	mov    DWORD PTR [rax+rsi*4],edx
    7f23:	ret    
    7f24:	lea    rcx,[rip+0x1a3d5]        # 22300 <__PRETTY_FUNCTION__.13083>
    7f2b:	lea    rsi,[rip+0x19819]        # 2174b <__PRETTY_FUNCTION__.12816+0xb>
    7f32:	lea    rdi,[rip+0x19829]        # 21762 <__PRETTY_FUNCTION__.12816+0x22>
    7f39:	sub    rsp,0x8
    7f3d:	mov    edx,0x399
    7f42:	call   5c70 <__assert_fail@plt>
    7f47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007f50 <x86_pv_set_gfn>:
    7f50:	cmp    QWORD PTR [rdi+0x188],rsi
    7f57:	jb     7f75 <x86_pv_set_gfn+0x25>
    7f59:	cmp    DWORD PTR [rdi+0x160],0x8
    7f60:	mov    rax,QWORD PTR [rdi+0x198]
    7f67:	je     7f70 <x86_pv_set_gfn+0x20>
    7f69:	mov    DWORD PTR [rax+rsi*4],edx
    7f6c:	ret    
    7f6d:	nop    DWORD PTR [rax]
    7f70:	mov    QWORD PTR [rax+rsi*8],rdx
    7f74:	ret    
    7f75:	lea    rcx,[rip+0x1a36c]        # 222e8 <__PRETTY_FUNCTION__.13089>
    7f7c:	lea    rsi,[rip+0x197c8]        # 2174b <__PRETTY_FUNCTION__.12816+0xb>
    7f83:	lea    rdi,[rip+0x197d8]        # 21762 <__PRETTY_FUNCTION__.12816+0x22>
    7f8a:	sub    rsp,0x8
    7f8e:	mov    edx,0x3a2
    7f93:	call   5c70 <__assert_fail@plt>
    7f98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007fa0 <pfn_to_mfn>:
    7fa0:	cmp    QWORD PTR [rdi+0x188],rsi
    7fa7:	jb     7fd5 <pfn_to_mfn+0x35>
    7fa9:	cmp    DWORD PTR [rdi+0x160],0x8
    7fb0:	mov    rax,QWORD PTR [rdi+0x198]
    7fb7:	je     7fd0 <pfn_to_mfn+0x30>
    7fb9:	mov    eax,DWORD PTR [rax+rsi*4]
    7fbc:	mov    rdx,0xffffffffffffffff
    7fc3:	cmp    eax,0xffffffff
    7fc6:	cmove  rax,rdx
    7fca:	ret    
    7fcb:	nop    DWORD PTR [rax+rax*1+0x0]
    7fd0:	mov    rax,QWORD PTR [rax+rsi*8]
    7fd4:	ret    
    7fd5:	lea    rcx,[rip+0x1a2fc]        # 222d8 <__PRETTY_FUNCTION__.12816>
    7fdc:	lea    rsi,[rip+0x19768]        # 2174b <__PRETTY_FUNCTION__.12816+0xb>
    7fe3:	lea    rdi,[rip+0x19778]        # 21762 <__PRETTY_FUNCTION__.12816+0x22>
    7fea:	sub    rsp,0x8
    7fee:	mov    edx,0x7
    7ff3:	call   5c70 <__assert_fail@plt>
    7ff8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008000 <pin_pagetables>:
    8000:	push   r14
    8002:	push   r13
    8004:	mov    r14,rdi
    8007:	push   r12
    8009:	push   rbp
    800a:	xor    ebp,ebp
    800c:	push   rbx
    800d:	xor    ebx,ebx
    800f:	sub    rsp,0x6010
    8016:	mov    r12,QWORD PTR [rdi]
    8019:	mov    rax,QWORD PTR fs:0x28
    8022:	mov    QWORD PTR [rsp+0x6008],rax
    802a:	xor    eax,eax
    802c:	mov    r13,rsp
    802f:	jmp    8089 <pin_pagetables+0x89>
    8031:	nop    DWORD PTR [rax+0x0]
    8038:	cmp    eax,0x30000000
    803d:	je     80c0 <pin_pagetables+0xc0>
    8043:	cmp    eax,0x40000000
    8048:	jne    8078 <pin_pagetables+0x78>
    804a:	lea    rax,[rbp+rbp*2+0x0]
    804f:	mov    DWORD PTR [rsp+rax*8],0x3
    8056:	mov    rsi,rbx
    8059:	mov    rdi,r14
    805c:	call   7fa0 <pfn_to_mfn>
    8061:	lea    rdx,[rbp+rbp*2+0x0]
    8066:	add    rbp,0x1
    806a:	cmp    rbp,0x400
    8071:	mov    QWORD PTR [rsp+rdx*8+0x8],rax
    8076:	je     80e8 <pin_pagetables+0xe8>
    8078:	add    rbx,0x1
    807c:	cmp    QWORD PTR [r14+0x188],rbx
    8083:	jb     8118 <pin_pagetables+0x118>
    8089:	mov    rax,QWORD PTR [r14+0x1c0]
    8090:	mov    eax,DWORD PTR [rax+rbx*4]
    8093:	test   eax,eax
    8095:	jns    8078 <pin_pagetables+0x78>
    8097:	and    eax,0x70000000
    809c:	cmp    eax,0x20000000
    80a1:	je     80d0 <pin_pagetables+0xd0>
    80a3:	ja     8038 <pin_pagetables+0x38>
    80a5:	cmp    eax,0x10000000
    80aa:	jne    8078 <pin_pagetables+0x78>
    80ac:	lea    rax,[rbp+rbp*2+0x0]
    80b1:	mov    DWORD PTR [rsp+rax*8],0x0
    80b8:	jmp    8056 <pin_pagetables+0x56>
    80ba:	nop    WORD PTR [rax+rax*1+0x0]
    80c0:	lea    rax,[rbp+rbp*2+0x0]
    80c5:	mov    DWORD PTR [rsp+rax*8],0x2
    80cc:	jmp    8056 <pin_pagetables+0x56>
    80ce:	xchg   ax,ax
    80d0:	lea    rax,[rbp+rbp*2+0x0]
    80d5:	mov    DWORD PTR [rsp+rax*8],0x1
    80dc:	jmp    8056 <pin_pagetables+0x56>
    80e1:	nop    DWORD PTR [rax+0x0]
    80e8:	mov    ecx,DWORD PTR [r14+0x8]
    80ec:	mov    edx,0x400
    80f1:	mov    rsi,r13
    80f4:	mov    rdi,r12
    80f7:	call   5f60 <xc_mmuext_op@plt>
    80fc:	test   eax,eax
    80fe:	jne    815d <pin_pagetables+0x15d>
    8100:	xor    ebp,ebp
    8102:	add    rbx,0x1
    8106:	cmp    QWORD PTR [r14+0x188],rbx
    810d:	jae    8089 <pin_pagetables+0x89>
    8113:	nop    DWORD PTR [rax+rax*1+0x0]
    8118:	test   rbp,rbp
    811b:	jne    8148 <pin_pagetables+0x148>
    811d:	xor    eax,eax
    811f:	mov    rcx,QWORD PTR [rsp+0x6008]
    8127:	xor    rcx,QWORD PTR fs:0x28
    8130:	jne    8195 <pin_pagetables+0x195>
    8132:	add    rsp,0x6010
    8139:	pop    rbx
    813a:	pop    rbp
    813b:	pop    r12
    813d:	pop    r13
    813f:	pop    r14
    8141:	ret    
    8142:	nop    WORD PTR [rax+rax*1+0x0]
    8148:	mov    ecx,DWORD PTR [r14+0x8]
    814c:	mov    rsi,rsp
    814f:	mov    edx,ebp
    8151:	mov    rdi,r12
    8154:	call   5f60 <xc_mmuext_op@plt>
    8159:	test   eax,eax
    815b:	jns    811d <pin_pagetables+0x11d>
    815d:	call   5940 <__errno_location@plt>
    8162:	mov    ebp,DWORD PTR [rax]
    8164:	mov    rbx,rax
    8167:	mov    rdi,r12
    816a:	mov    esi,ebp
    816c:	call   6570 <xc_strerror@plt>
    8171:	mov    ecx,DWORD PTR [rbx]
    8173:	lea    rdx,[rip+0x19746]        # 218c0 <__PRETTY_FUNCTION__.12816+0x180>
    817a:	mov    r8,rax
    817d:	mov    esi,0x1
    8182:	xor    eax,eax
    8184:	mov    rdi,r12
    8187:	call   5d50 <xc_report_error@plt>
    818c:	mov    DWORD PTR [rbx],ebp
    818e:	mov    eax,0xffffffff
    8193:	jmp    811f <pin_pagetables+0x11f>
    8195:	call   5b80 <__stack_chk_fail@plt>
    819a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000081a0 <x86_pv_localise_page>:
    81a0:	push   r15
    81a2:	push   r14
    81a4:	and    esi,0x70000000
    81aa:	push   r13
    81ac:	push   r12
    81ae:	push   rbp
    81af:	push   rbx
    81b0:	sub    rsp,0x1028
    81b7:	mov    rax,QWORD PTR fs:0x28
    81c0:	mov    QWORD PTR [rsp+0x1018],rax
    81c8:	xor    eax,eax
    81ca:	lea    eax,[rsi-0x10000000]
    81d0:	mov    DWORD PTR [rsp+0x4],esi
    81d4:	cmp    eax,0x30000000
    81d9:	ja     82d8 <x86_pv_localise_page+0x138>
    81df:	mov    rax,QWORD PTR [rdi]
    81e2:	mov    rbp,rdi
    81e5:	mov    r12,rdx
    81e8:	mov    r14,rdx
    81eb:	lea    r15,[rdx+0x1000]
    81f2:	xor    r13d,r13d
    81f5:	mov    QWORD PTR [rsp+0x8],rax
    81fa:	jmp    8209 <x86_pv_localise_page+0x69>
    81fc:	nop    DWORD PTR [rax+0x0]
    8200:	add    r14,0x8
    8204:	cmp    r15,r14
    8207:	je     8250 <x86_pv_localise_page+0xb0>
    8209:	mov    rbx,QWORD PTR [r14]
    820c:	test   bl,0x1
    820f:	je     8200 <x86_pv_localise_page+0x60>
    8211:	shr    rbx,0xc
    8215:	movabs rax,0xffffffffff
    821f:	mov    rdi,rbp
    8222:	and    rbx,rax
    8225:	mov    rsi,rbx
    8228:	call   7fa0 <pfn_to_mfn>
    822d:	cmp    rax,0xffffffffffffffff
    8231:	jne    8200 <x86_pv_localise_page+0x60>
    8233:	add    r14,0x8
    8237:	mov    eax,r13d
    823a:	add    r13d,0x1
    823e:	cmp    r15,r14
    8241:	mov    QWORD PTR [rsp+rax*8+0x10],rbx
    8246:	jne    8209 <x86_pv_localise_page+0x69>
    8248:	nop    DWORD PTR [rax+rax*1+0x0]
    8250:	test   r13d,r13d
    8253:	jne    834e <x86_pv_localise_page+0x1ae>
    8259:	xor    r14d,r14d
    825c:	movabs rbx,0xffffffffff
    8266:	jmp    827d <x86_pv_localise_page+0xdd>
    8268:	nop    DWORD PTR [rax+rax*1+0x0]
    8270:	add    r14,0x1
    8274:	cmp    r14,0x200
    827b:	je     82d8 <x86_pv_localise_page+0x138>
    827d:	mov    r13,QWORD PTR [r12+r14*8]
    8281:	test   r13b,0x1
    8285:	je     8270 <x86_pv_localise_page+0xd0>
    8287:	mov    rsi,r13
    828a:	mov    rdi,rbp
    828d:	shr    rsi,0xc
    8291:	and    rsi,rbx
    8294:	call   7fa0 <pfn_to_mfn>
    8299:	mov    rdi,rbp
    829c:	mov    rsi,rax
    829f:	mov    r15,rax
    82a2:	call   5990 <mfn_in_pseudophysmap@plt>
    82a7:	test   al,al
    82a9:	je     8303 <x86_pv_localise_page+0x163>
    82ab:	movabs r9,0xfff0000000000fff
    82b5:	mov    r10,r15
    82b8:	and    r9,r13
    82bb:	shl    r10,0xc
    82bf:	or     r9,r10
    82c2:	mov    QWORD PTR [r12+r14*8],r9
    82c6:	add    r14,0x1
    82ca:	cmp    r14,0x200
    82d1:	jne    827d <x86_pv_localise_page+0xdd>
    82d3:	nop    DWORD PTR [rax+rax*1+0x0]
    82d8:	xor    eax,eax
    82da:	mov    rdx,QWORD PTR [rsp+0x1018]
    82e2:	xor    rdx,QWORD PTR fs:0x28
    82eb:	jne    8372 <x86_pv_localise_page+0x1d2>
    82f1:	add    rsp,0x1028
    82f8:	pop    rbx
    82f9:	pop    rbp
    82fa:	pop    r12
    82fc:	pop    r13
    82fe:	pop    r14
    8300:	pop    r15
    8302:	ret    
    8303:	call   5940 <__errno_location@plt>
    8308:	mov    ecx,DWORD PTR [rsp+0x4]
    830c:	mov    r12d,DWORD PTR [rax]
    830f:	lea    rdx,[rip+0x19467]        # 2177d <__PRETTY_FUNCTION__.12816+0x3d>
    8316:	mov    rdi,QWORD PTR [rsp+0x8]
    831b:	mov    rbx,rax
    831e:	mov    r9,r13
    8321:	xor    eax,eax
    8323:	mov    r8d,r14d
    8326:	mov    esi,0x1
    832b:	shr    ecx,0x1c
    832e:	call   5d50 <xc_report_error@plt>
    8333:	mov    DWORD PTR [rbx],r12d
    8336:	mov    rsi,r15
    8339:	mov    rdi,rbp
    833c:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    8341:	mov    DWORD PTR [rbx],0x22
    8347:	mov    eax,0xffffffff
    834c:	jmp    82da <x86_pv_localise_page+0x13a>
    834e:	lea    rdx,[rsp+0x10]
    8353:	xor    ecx,ecx
    8355:	mov    esi,r13d
    8358:	mov    rdi,rbp
    835b:	call   5b70 <populate_pfns@plt>
    8360:	test   eax,eax
    8362:	je     8259 <x86_pv_localise_page+0xb9>
    8368:	mov    eax,0xffffffff
    836d:	jmp    82da <x86_pv_localise_page+0x13a>
    8372:	call   5b80 <__stack_chk_fail@plt>
    8377:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008380 <process_vcpu_basic>:
    8380:	push   r15
    8382:	push   r14
    8384:	mov    r15d,esi
    8387:	push   r13
    8389:	push   r12
    838b:	mov    ecx,0x1430
    8390:	push   rbp
    8391:	push   rbx
    8392:	mov    rbx,rdi
    8395:	sub    rsp,0x1458
    839c:	mov    rax,QWORD PTR fs:0x28
    83a5:	mov    QWORD PTR [rsp+0x1448],rax
    83ad:	xor    eax,eax
    83af:	mov    rax,QWORD PTR [rdi]
    83b2:	mov    DWORD PTR [rsp+0x8],esi
    83b6:	lea    rbp,[rsp+0x10]
    83bb:	mov    QWORD PTR [rsp],rax
    83bf:	mov    eax,esi
    83c1:	shl    rax,0x6
    83c5:	add    rax,QWORD PTR [rdi+0x1c8]
    83cc:	mov    rdi,rbp
    83cf:	mov    rdx,QWORD PTR [rax+0x20]
    83d3:	mov    rsi,QWORD PTR [rax]
    83d6:	call   5e70 <__memcpy_chk@plt>
    83db:	test   r15d,r15d
    83de:	mov    eax,DWORD PTR [rbx+0x160]
    83e4:	je     86a0 <process_vcpu_basic+0x320>
    83ea:	cmp    eax,0x8
    83ed:	je     8790 <process_vcpu_basic+0x410>
    83f3:	or     DWORD PTR [rsp+0x210],0x20
    83fb:	mov    r12d,DWORD PTR [rsp+0xaa0]
    8403:	cmp    r12d,0x1c00
    840a:	ja     8ac4 <process_vcpu_basic+0x744>
    8410:	add    r12d,0x1ff
    8417:	shr    r12d,0x9
    841b:	test   r12d,r12d
    841e:	je     8535 <process_vcpu_basic+0x1b5>
    8424:	sub    r12d,0x1
    8428:	xor    r14d,r14d
    842b:	add    r12,0x1
    842f:	jmp    849f <process_vcpu_basic+0x11f>
    8431:	nop    DWORD PTR [rax+0x0]
    8438:	mov    esi,DWORD PTR [rbp+r14*4+0xa50]
    8440:	cmp    QWORD PTR [rbx+0x188],rsi
    8447:	jb     84b8 <process_vcpu_basic+0x138>
    8449:	mov    rax,QWORD PTR [rbx+0x1c0]
    8450:	mov    r15d,DWORD PTR [rax+rsi*4]
    8454:	test   r15d,r15d
    8457:	jne    87b0 <process_vcpu_basic+0x430>
    845d:	mov    rdi,rbx
    8460:	call   7fa0 <pfn_to_mfn>
    8465:	mov    rdi,rbx
    8468:	mov    rsi,rax
    846b:	mov    r15,rax
    846e:	call   5990 <mfn_in_pseudophysmap@plt>
    8473:	test   al,al
    8475:	je     8820 <process_vcpu_basic+0x4a0>
    847b:	mov    eax,DWORD PTR [rbx+0x160]
    8481:	cmp    eax,0x8
    8484:	je     8520 <process_vcpu_basic+0x1a0>
    848a:	mov    DWORD PTR [rbp+r14*4+0xa50],r15d
    8492:	add    r14,0x1
    8496:	cmp    r14,r12
    8499:	je     8535 <process_vcpu_basic+0x1b5>
    849f:	cmp    eax,0x8
    84a2:	mov    r13d,r14d
    84a5:	jne    8438 <process_vcpu_basic+0xb8>
    84a7:	mov    rsi,QWORD PTR [rbp+r14*8+0x12e0]
    84af:	cmp    QWORD PTR [rbx+0x188],rsi
    84b6:	jae    8449 <process_vcpu_basic+0xc9>
    84b8:	mov    QWORD PTR [rsp+0x8],rsi
    84bd:	call   5940 <__errno_location@plt>
    84c2:	mov    rsi,QWORD PTR [rsp+0x8]
    84c7:	mov    ebp,DWORD PTR [rax]
    84c9:	lea    rdx,[rip+0x194f0]        # 219c0 <__PRETTY_FUNCTION__.12816+0x280>
    84d0:	mov    rdi,QWORD PTR [rsp]
    84d4:	mov    rbx,rax
    84d7:	mov    ecx,r13d
    84da:	xor    eax,eax
    84dc:	mov    r8,rsi
    84df:	mov    esi,0x1
    84e4:	call   5d50 <xc_report_error@plt>
    84e9:	mov    DWORD PTR [rbx],ebp
    84eb:	mov    eax,0xffffffff
    84f0:	mov    rcx,QWORD PTR [rsp+0x1448]
    84f8:	xor    rcx,QWORD PTR fs:0x28
    8501:	jne    8cbe <process_vcpu_basic+0x93e>
    8507:	add    rsp,0x1458
    850e:	pop    rbx
    850f:	pop    rbp
    8510:	pop    r12
    8512:	pop    r13
    8514:	pop    r14
    8516:	pop    r15
    8518:	ret    
    8519:	nop    DWORD PTR [rax+0x0]
    8520:	mov    QWORD PTR [rbp+r14*8+0x12e0],r15
    8528:	add    r14,0x1
    852c:	cmp    r14,r12
    852f:	jne    849f <process_vcpu_basic+0x11f>
    8535:	cmp    eax,0x8
    8538:	mov    rsi,QWORD PTR [rsp+0x13a0]
    8540:	je     8549 <process_vcpu_basic+0x1c9>
    8542:	mov    esi,DWORD PTR [rsp+0xab8]
    8549:	mov    rdi,rbx
    854c:	call   5e50 <cr3_to_mfn@plt>
    8551:	cmp    QWORD PTR [rbx+0x188],rax
    8558:	mov    rsi,rax
    855b:	jb     8c31 <process_vcpu_basic+0x8b1>
    8561:	mov    rax,QWORD PTR [rbx+0x1c0]
    8568:	mov    r12d,DWORD PTR [rax+rsi*4]
    856c:	mov    eax,DWORD PTR [rbx+0x164]
    8572:	mov    edx,r12d
    8575:	mov    r13,rax
    8578:	and    edx,0x70000000
    857e:	shl    rax,0x1c
    8582:	cmp    rdx,rax
    8585:	jne    8afc <process_vcpu_basic+0x77c>
    858b:	mov    rdi,rbx
    858e:	call   7fa0 <pfn_to_mfn>
    8593:	mov    rdi,rbx
    8596:	mov    rsi,rax
    8599:	mov    r12,rax
    859c:	call   5990 <mfn_in_pseudophysmap@plt>
    85a1:	test   al,al
    85a3:	je     8bf6 <process_vcpu_basic+0x876>
    85a9:	cmp    DWORD PTR [rbx+0x160],0x8
    85b0:	mov    rsi,r12
    85b3:	mov    rdi,rbx
    85b6:	je     8808 <process_vcpu_basic+0x488>
    85bc:	call   64a0 <mfn_to_cr3@plt>
    85c1:	mov    DWORD PTR [rsp+0xab8],eax
    85c8:	cmp    DWORD PTR [rbx+0x164],0x4
    85cf:	jne    8638 <process_vcpu_basic+0x2b8>
    85d1:	mov    rsi,QWORD PTR [rsp+0x1390]
    85d9:	test   sil,0x1
    85dd:	je     8638 <process_vcpu_basic+0x2b8>
    85df:	shr    rsi,0xc
    85e3:	cmp    QWORD PTR [rbx+0x188],rsi
    85ea:	jb     8c84 <process_vcpu_basic+0x904>
    85f0:	mov    rax,QWORD PTR [rbx+0x1c0]
    85f7:	mov    r12d,DWORD PTR [rax+rsi*4]
    85fb:	mov    eax,r12d
    85fe:	and    eax,0x70000000
    8603:	cmp    eax,0x40000000
    8608:	jne    8c54 <process_vcpu_basic+0x8d4>
    860e:	mov    rdi,rbx
    8611:	call   7fa0 <pfn_to_mfn>
    8616:	mov    rdi,rbx
    8619:	mov    rsi,rax
    861c:	mov    r12,rax
    861f:	call   5990 <mfn_in_pseudophysmap@plt>
    8624:	test   al,al
    8626:	je     8ca7 <process_vcpu_basic+0x927>
    862c:	shl    r12,0xc
    8630:	mov    QWORD PTR [rsp+0x1390],r12
    8638:	mov    esi,DWORD PTR [rbx+0x8]
    863b:	mov    edx,DWORD PTR [rsp+0x8]
    863f:	mov    rcx,rbp
    8642:	mov    rdi,QWORD PTR [rsp]
    8646:	call   5d10 <xc_vcpu_setcontext@plt>
    864b:	test   eax,eax
    864d:	je     84f0 <process_vcpu_basic+0x170>
    8653:	call   5940 <__errno_location@plt>
    8658:	mov    r14,QWORD PTR [rsp]
    865c:	mov    ebp,DWORD PTR [rax]
    865e:	mov    rbx,rax
    8661:	mov    esi,ebp
    8663:	mov    rdi,r14
    8666:	call   6570 <xc_strerror@plt>
    866b:	mov    r8d,DWORD PTR [rbx]
    866e:	mov    ecx,DWORD PTR [rsp+0x8]
    8672:	lea    rdx,[rip+0x193f7]        # 21a70 <__PRETTY_FUNCTION__.12816+0x330>
    8679:	mov    r9,rax
    867c:	mov    esi,0x1
    8681:	xor    eax,eax
    8683:	mov    rdi,r14
    8686:	call   5d50 <xc_report_error@plt>
    868b:	mov    DWORD PTR [rbx],ebp
    868d:	mov    eax,0xffffffff
    8692:	jmp    84f0 <process_vcpu_basic+0x170>
    8697:	nop    WORD PTR [rax+rax*1+0x0]
    86a0:	cmp    eax,0x8
    86a3:	mov    rsi,QWORD PTR [rsp+0x278]
    86ab:	je     86b4 <process_vcpu_basic+0x334>
    86ad:	mov    esi,DWORD PTR [rsp+0x21c]
    86b4:	cmp    QWORD PTR [rbx+0x188],rsi
    86bb:	jb     8b81 <process_vcpu_basic+0x801>
    86c1:	mov    rax,QWORD PTR [rbx+0x1c0]
    86c8:	mov    r12d,DWORD PTR [rax+rsi*4]
    86cc:	test   r12d,r12d
    86cf:	jne    8b40 <process_vcpu_basic+0x7c0>
    86d5:	mov    rdi,rbx
    86d8:	call   7fa0 <pfn_to_mfn>
    86dd:	mov    rdi,rbx
    86e0:	mov    rsi,rax
    86e3:	mov    r13,rax
    86e6:	call   5990 <mfn_in_pseudophysmap@plt>
    86eb:	test   al,al
    86ed:	je     8bbb <process_vcpu_basic+0x83b>
    86f3:	cmp    DWORD PTR [rbx+0x160],0x8
    86fa:	je     8990 <process_vcpu_basic+0x610>
    8700:	mov    DWORD PTR [rsp+0x21c],r13d
    8708:	mov    esi,DWORD PTR [rbx+0x8]
    870b:	mov    rdi,QWORD PTR [rsp]
    870f:	mov    r8,r13
    8712:	mov    ecx,0x3
    8717:	mov    edx,0x1000
    871c:	call   6590 <xc_map_foreign_range@plt>
    8721:	test   rax,rax
    8724:	mov    r12,rax
    8727:	je     899d <process_vcpu_basic+0x61d>
    872d:	cmp    DWORD PTR [rbx+0x160],0x8
    8734:	je     87f8 <process_vcpu_basic+0x478>
    873a:	mov    r13d,DWORD PTR [rax+0x2c]
    873e:	cmp    QWORD PTR [rbx+0x188],r13
    8745:	jae    8860 <process_vcpu_basic+0x4e0>
    874b:	call   5940 <__errno_location@plt>
    8750:	mov    ebp,DWORD PTR [rax]
    8752:	lea    rdx,[rip+0x19217]        # 21970 <__PRETTY_FUNCTION__.12816+0x230>
    8759:	mov    rbx,rax
    875c:	mov    rcx,r13
    875f:	mov    rdi,QWORD PTR [rsp]
    8763:	mov    esi,0x1
    8768:	xor    eax,eax
    876a:	call   5d50 <xc_report_error@plt>
    876f:	mov    DWORD PTR [rbx],ebp
    8771:	mov    esi,0x1000
    8776:	mov    rdi,r12
    8779:	call   61b0 <munmap@plt>
    877e:	mov    eax,0xffffffff
    8783:	jmp    84f0 <process_vcpu_basic+0x170>
    8788:	nop    DWORD PTR [rax+rax*1+0x0]
    8790:	or     QWORD PTR [rsp+0x210],0x20
    8799:	mov    r12d,DWORD PTR [rsp+0x1370]
    87a1:	jmp    8403 <process_vcpu_basic+0x83>
    87a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    87b0:	mov    QWORD PTR [rsp+0x8],rsi
    87b5:	call   5940 <__errno_location@plt>
    87ba:	mov    rsi,QWORD PTR [rsp+0x8]
    87bf:	mov    ebp,DWORD PTR [rax]
    87c1:	mov    r9d,r15d
    87c4:	mov    rdi,QWORD PTR [rsp]
    87c8:	lea    rdx,[rip+0x19219]        # 219e8 <__PRETTY_FUNCTION__.12816+0x2a8>
    87cf:	mov    rbx,rax
    87d2:	shr    r9d,0x1c
    87d6:	xor    eax,eax
    87d8:	mov    ecx,r13d
    87db:	mov    r8,rsi
    87de:	mov    esi,0x1
    87e3:	call   5d50 <xc_report_error@plt>
    87e8:	mov    DWORD PTR [rbx],ebp
    87ea:	mov    eax,0xffffffff
    87ef:	jmp    84f0 <process_vcpu_basic+0x170>
    87f4:	nop    DWORD PTR [rax+0x0]
    87f8:	mov    r13,QWORD PTR [rax+0x38]
    87fc:	jmp    873e <process_vcpu_basic+0x3be>
    8801:	nop    DWORD PTR [rax+0x0]
    8808:	call   64a0 <mfn_to_cr3@plt>
    880d:	mov    QWORD PTR [rsp+0x13a0],rax
    8815:	jmp    85c8 <process_vcpu_basic+0x248>
    881a:	nop    WORD PTR [rax+rax*1+0x0]
    8820:	call   5940 <__errno_location@plt>
    8825:	mov    rdi,QWORD PTR [rsp]
    8829:	mov    r12d,DWORD PTR [rax]
    882c:	lea    rdx,[rip+0x18fce]        # 21801 <__PRETTY_FUNCTION__.12816+0xc1>
    8833:	mov    rbp,rax
    8836:	mov    ecx,r13d
    8839:	xor    eax,eax
    883b:	mov    esi,0x1
    8840:	call   5d50 <xc_report_error@plt>
    8845:	mov    DWORD PTR [rbp+0x0],r12d
    8849:	mov    rsi,r15
    884c:	mov    rdi,rbx
    884f:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    8854:	mov    eax,0xffffffff
    8859:	jmp    84f0 <process_vcpu_basic+0x170>
    885e:	xchg   ax,ax
    8860:	mov    rsi,r13
    8863:	mov    rdi,rbx
    8866:	call   7fa0 <pfn_to_mfn>
    886b:	mov    rdi,rbx
    886e:	mov    rsi,rax
    8871:	mov    r13,rax
    8874:	call   5990 <mfn_in_pseudophysmap@plt>
    8879:	test   al,al
    887b:	je     89f9 <process_vcpu_basic+0x679>
    8881:	cmp    DWORD PTR [rbx+0x160],0x8
    8888:	mov    QWORD PTR [rbx+0x128],r13
    888f:	je     8a41 <process_vcpu_basic+0x6c1>
    8895:	mov    DWORD PTR [r12+0x2c],r13d
    889a:	cmp    DWORD PTR [rbx+0x160],0x8
    88a1:	mov    eax,DWORD PTR [rbx+0x138]
    88a7:	je     8a55 <process_vcpu_basic+0x6d5>
    88ad:	mov    DWORD PTR [r12+0x30],eax
    88b2:	cmp    DWORD PTR [rbx+0x160],0x8
    88b9:	je     8a4b <process_vcpu_basic+0x6cb>
    88bf:	mov    r13d,DWORD PTR [r12+0x34]
    88c4:	cmp    QWORD PTR [rbx+0x188],r13
    88cb:	jb     89e0 <process_vcpu_basic+0x660>
    88d1:	mov    rsi,r13
    88d4:	mov    rdi,rbx
    88d7:	call   7fa0 <pfn_to_mfn>
    88dc:	mov    rdi,rbx
    88df:	mov    rsi,rax
    88e2:	mov    r13,rax
    88e5:	call   5990 <mfn_in_pseudophysmap@plt>
    88ea:	test   al,al
    88ec:	je     8a5f <process_vcpu_basic+0x6df>
    88f2:	cmp    DWORD PTR [rbx+0x160],0x8
    88f9:	mov    QWORD PTR [rbx+0x130],r13
    8900:	je     8a73 <process_vcpu_basic+0x6f3>
    8906:	mov    DWORD PTR [r12+0x34],r13d
    890b:	cmp    DWORD PTR [rbx+0x160],0x8
    8912:	mov    eax,DWORD PTR [rbx+0x13c]
    8918:	je     8a8b <process_vcpu_basic+0x70b>
    891e:	mov    DWORD PTR [r12+0x38],eax
    8923:	cmp    DWORD PTR [rbx+0x160],0x8
    892a:	mov    rax,QWORD PTR [rbx+0x188]
    8931:	je     8a7d <process_vcpu_basic+0x6fd>
    8937:	add    eax,0x1
    893a:	mov    DWORD PTR [r12+0x20],eax
    893f:	cmp    DWORD PTR [rbx+0x160],0x8
    8946:	mov    rax,QWORD PTR [rbx+0x40]
    894a:	je     8ab6 <process_vcpu_basic+0x736>
    8950:	shl    eax,0xc
    8953:	mov    DWORD PTR [r12+0x24],eax
    8958:	cmp    DWORD PTR [rbx+0x160],0x8
    895f:	je     8a95 <process_vcpu_basic+0x715>
    8965:	mov    DWORD PTR [r12+0x28],0x0
    896e:	mov    esi,0x1000
    8973:	mov    rdi,r12
    8976:	call   61b0 <munmap@plt>
    897b:	mov    eax,DWORD PTR [rbx+0x160]
    8981:	jmp    83ea <process_vcpu_basic+0x6a>
    8986:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8990:	mov    QWORD PTR [rsp+0x278],r13
    8998:	jmp    8708 <process_vcpu_basic+0x388>
    899d:	call   5940 <__errno_location@plt>
    89a2:	mov    r14,QWORD PTR [rsp]
    89a6:	mov    ebp,DWORD PTR [rax]
    89a8:	mov    rbx,rax
    89ab:	mov    esi,ebp
    89ad:	mov    rdi,r14
    89b0:	call   6570 <xc_strerror@plt>
    89b5:	mov    r8d,DWORD PTR [rbx]
    89b8:	lea    rdx,[rip+0x18f81]        # 21940 <__PRETTY_FUNCTION__.12816+0x200>
    89bf:	mov    r9,rax
    89c2:	mov    rcx,r13
    89c5:	xor    eax,eax
    89c7:	mov    esi,0x1
    89cc:	mov    rdi,r14
    89cf:	call   5d50 <xc_report_error@plt>
    89d4:	mov    DWORD PTR [rbx],ebp
    89d6:	mov    eax,0xffffffff
    89db:	jmp    84f0 <process_vcpu_basic+0x170>
    89e0:	call   5940 <__errno_location@plt>
    89e5:	mov    rcx,r13
    89e8:	mov    rbx,rax
    89eb:	mov    ebp,DWORD PTR [rax]
    89ed:	lea    rdx,[rip+0x18dd7]        # 217cb <__PRETTY_FUNCTION__.12816+0x8b>
    89f4:	jmp    875f <process_vcpu_basic+0x3df>
    89f9:	call   5940 <__errno_location@plt>
    89fe:	mov    r14d,DWORD PTR [rax]
    8a01:	lea    rdx,[rip+0x18daa]        # 217b2 <__PRETTY_FUNCTION__.12816+0x72>
    8a08:	mov    rbp,rax
    8a0b:	mov    rdi,QWORD PTR [rsp]
    8a0f:	xor    eax,eax
    8a11:	mov    esi,0x1
    8a16:	call   5d50 <xc_report_error@plt>
    8a1b:	mov    rsi,r13
    8a1e:	mov    rdi,rbx
    8a21:	mov    DWORD PTR [rbp+0x0],r14d
    8a25:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    8a2a:	mov    esi,0x1000
    8a2f:	mov    rdi,r12
    8a32:	call   61b0 <munmap@plt>
    8a37:	mov    eax,0xffffffff
    8a3c:	jmp    84f0 <process_vcpu_basic+0x170>
    8a41:	mov    QWORD PTR [r12+0x38],r13
    8a46:	jmp    889a <process_vcpu_basic+0x51a>
    8a4b:	mov    r13,QWORD PTR [r12+0x48]
    8a50:	jmp    88c4 <process_vcpu_basic+0x544>
    8a55:	mov    DWORD PTR [r12+0x40],eax
    8a5a:	jmp    88b2 <process_vcpu_basic+0x532>
    8a5f:	call   5940 <__errno_location@plt>
    8a64:	lea    rdx,[rip+0x18d7e]        # 217e9 <__PRETTY_FUNCTION__.12816+0xa9>
    8a6b:	mov    rbp,rax
    8a6e:	mov    r14d,DWORD PTR [rax]
    8a71:	jmp    8a0b <process_vcpu_basic+0x68b>
    8a73:	mov    QWORD PTR [r12+0x48],r13
    8a78:	jmp    890b <process_vcpu_basic+0x58b>
    8a7d:	add    rax,0x1
    8a81:	mov    QWORD PTR [r12+0x20],rax
    8a86:	jmp    893f <process_vcpu_basic+0x5bf>
    8a8b:	mov    DWORD PTR [r12+0x50],eax
    8a90:	jmp    8923 <process_vcpu_basic+0x5a3>
    8a95:	mov    DWORD PTR [r12+0x30],0x0
    8a9e:	mov    esi,0x1000
    8aa3:	mov    rdi,r12
    8aa6:	call   61b0 <munmap@plt>
    8aab:	mov    eax,DWORD PTR [rbx+0x160]
    8ab1:	jmp    83ea <process_vcpu_basic+0x6a>
    8ab6:	shl    rax,0xc
    8aba:	mov    QWORD PTR [r12+0x28],rax
    8abf:	jmp    8958 <process_vcpu_basic+0x5d8>
    8ac4:	call   5940 <__errno_location@plt>
    8ac9:	mov    rdi,QWORD PTR [rsp]
    8acd:	lea    rdx,[rip+0x18ebc]        # 21990 <__PRETTY_FUNCTION__.12816+0x250>
    8ad4:	mov    rbx,rax
    8ad7:	mov    r8d,0x1c00
    8add:	xor    eax,eax
    8adf:	mov    ecx,r12d
    8ae2:	mov    esi,0x1
    8ae7:	call   5d50 <xc_report_error@plt>
    8aec:	mov    DWORD PTR [rbx],0x22
    8af2:	mov    eax,0xffffffff
    8af7:	jmp    84f0 <process_vcpu_basic+0x170>
    8afc:	mov    QWORD PTR [rsp+0x8],rsi
    8b01:	call   5940 <__errno_location@plt>
    8b06:	mov    rsi,QWORD PTR [rsp+0x8]
    8b0b:	mov    ebp,DWORD PTR [rax]
    8b0d:	mov    r8d,r12d
    8b10:	lea    rdx,[rip+0x18ef9]        # 21a10 <__PRETTY_FUNCTION__.12816+0x2d0>
    8b17:	mov    rbx,rax
    8b1a:	mov    r9d,r13d
    8b1d:	shr    r8d,0x1c
    8b21:	mov    rcx,rsi
    8b24:	mov    rdi,QWORD PTR [rsp]
    8b28:	xor    eax,eax
    8b2a:	mov    esi,0x1
    8b2f:	call   5d50 <xc_report_error@plt>
    8b34:	mov    DWORD PTR [rbx],ebp
    8b36:	mov    eax,0xffffffff
    8b3b:	jmp    84f0 <process_vcpu_basic+0x170>
    8b40:	mov    QWORD PTR [rsp+0x8],rsi
    8b45:	call   5940 <__errno_location@plt>
    8b4a:	mov    rsi,QWORD PTR [rsp+0x8]
    8b4f:	mov    ebp,DWORD PTR [rax]
    8b51:	mov    r8d,r12d
    8b54:	mov    rdi,QWORD PTR [rsp]
    8b58:	lea    rdx,[rip+0x18db9]        # 21918 <__PRETTY_FUNCTION__.12816+0x1d8>
    8b5f:	mov    rbx,rax
    8b62:	shr    r8d,0x1c
    8b66:	xor    eax,eax
    8b68:	mov    rcx,rsi
    8b6b:	mov    esi,0x1
    8b70:	call   5d50 <xc_report_error@plt>
    8b75:	mov    DWORD PTR [rbx],ebp
    8b77:	mov    eax,0xffffffff
    8b7c:	jmp    84f0 <process_vcpu_basic+0x170>
    8b81:	mov    QWORD PTR [rsp+0x8],rsi
    8b86:	call   5940 <__errno_location@plt>
    8b8b:	mov    rsi,QWORD PTR [rsp+0x8]
    8b90:	mov    ebp,DWORD PTR [rax]
    8b92:	lea    rdx,[rip+0x18d57]        # 218f0 <__PRETTY_FUNCTION__.12816+0x1b0>
    8b99:	mov    rbx,rax
    8b9c:	mov    rcx,rsi
    8b9f:	mov    rdi,QWORD PTR [rsp]
    8ba3:	xor    eax,eax
    8ba5:	mov    esi,0x1
    8baa:	call   5d50 <xc_report_error@plt>
    8baf:	mov    DWORD PTR [rbx],ebp
    8bb1:	mov    eax,0xffffffff
    8bb6:	jmp    84f0 <process_vcpu_basic+0x170>
    8bbb:	call   5940 <__errno_location@plt>
    8bc0:	mov    rdi,QWORD PTR [rsp]
    8bc4:	mov    r12d,DWORD PTR [rax]
    8bc7:	lea    rdx,[rip+0x18bcd]        # 2179b <__PRETTY_FUNCTION__.12816+0x5b>
    8bce:	mov    rbp,rax
    8bd1:	mov    esi,0x1
    8bd6:	xor    eax,eax
    8bd8:	call   5d50 <xc_report_error@plt>
    8bdd:	mov    DWORD PTR [rbp+0x0],r12d
    8be1:	mov    rsi,r13
    8be4:	mov    rdi,rbx
    8be7:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    8bec:	mov    eax,0xffffffff
    8bf1:	jmp    84f0 <process_vcpu_basic+0x170>
    8bf6:	call   5940 <__errno_location@plt>
    8bfb:	mov    r13d,DWORD PTR [rax]
    8bfe:	lea    rdx,[rip+0x18c31]        # 21836 <__PRETTY_FUNCTION__.12816+0xf6>
    8c05:	mov    rbp,rax
    8c08:	mov    rdi,QWORD PTR [rsp]
    8c0c:	xor    eax,eax
    8c0e:	mov    esi,0x1
    8c13:	call   5d50 <xc_report_error@plt>
    8c18:	mov    DWORD PTR [rbp+0x0],r13d
    8c1c:	mov    rsi,r12
    8c1f:	mov    rdi,rbx
    8c22:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    8c27:	mov    eax,0xffffffff
    8c2c:	jmp    84f0 <process_vcpu_basic+0x170>
    8c31:	mov    QWORD PTR [rsp+0x8],rax
    8c36:	call   5940 <__errno_location@plt>
    8c3b:	mov    rsi,QWORD PTR [rsp+0x8]
    8c40:	mov    rbx,rax
    8c43:	mov    ebp,DWORD PTR [rax]
    8c45:	lea    rdx,[rip+0x18bce]        # 2181a <__PRETTY_FUNCTION__.12816+0xda>
    8c4c:	mov    rcx,rsi
    8c4f:	jmp    8b9f <process_vcpu_basic+0x81f>
    8c54:	mov    QWORD PTR [rsp+0x8],rsi
    8c59:	call   5940 <__errno_location@plt>
    8c5e:	mov    rsi,QWORD PTR [rsp+0x8]
    8c63:	mov    r8d,r12d
    8c66:	mov    rbx,rax
    8c69:	mov    ebp,DWORD PTR [rax]
    8c6b:	mov    r9d,0x4
    8c71:	shr    r8d,0x1c
    8c75:	lea    rdx,[rip+0x18dc4]        # 21a40 <__PRETTY_FUNCTION__.12816+0x300>
    8c7c:	mov    rcx,rsi
    8c7f:	jmp    8b24 <process_vcpu_basic+0x7a4>
    8c84:	mov    QWORD PTR [rsp+0x8],rsi
    8c89:	call   5940 <__errno_location@plt>
    8c8e:	mov    rsi,QWORD PTR [rsp+0x8]
    8c93:	mov    rbx,rax
    8c96:	mov    ebp,DWORD PTR [rax]
    8c98:	lea    rdx,[rip+0x18ba7]        # 21846 <__PRETTY_FUNCTION__.12816+0x106>
    8c9f:	mov    rcx,rsi
    8ca2:	jmp    8b9f <process_vcpu_basic+0x81f>
    8ca7:	call   5940 <__errno_location@plt>
    8cac:	lea    rdx,[rip+0x18baf]        # 21862 <__PRETTY_FUNCTION__.12816+0x122>
    8cb3:	mov    rbp,rax
    8cb6:	mov    r13d,DWORD PTR [rax]
    8cb9:	jmp    8c08 <process_vcpu_basic+0x888>
    8cbe:	call   5b80 <__stack_chk_fail@plt>
    8cc3:	nop    DWORD PTR [rax]
    8cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008cd0 <x86_pv_stream_complete>:
    8cd0:	push   r15
    8cd2:	push   r14
    8cd4:	mov    r15,rdi
    8cd7:	push   r13
    8cd9:	push   r12
    8cdb:	push   rbp
    8cdc:	push   rbx
    8cdd:	sub    rsp,0xf8
    8ce4:	mov    rax,QWORD PTR fs:0x28
    8ced:	mov    QWORD PTR [rsp+0xe8],rax
    8cf5:	xor    eax,eax
    8cf7:	mov    rax,QWORD PTR [rdi]
    8cfa:	mov    edi,DWORD PTR [rdi+0x1d0]
    8d00:	test   edi,edi
    8d02:	mov    QWORD PTR [rsp+0x8],rax
    8d07:	je     8f4d <x86_pv_stream_complete+0x27d>
    8d0d:	lea    r12,[rsp+0x50]
    8d12:	xor    ebp,ebp
    8d14:	lea    rax,[r12+0x10]
    8d19:	mov    QWORD PTR [rsp+0x10],rax
    8d1e:	lea    rax,[rsp+0x20]
    8d23:	mov    QWORD PTR [rsp],rax
    8d27:	mov    r13,QWORD PTR [r15+0x1c8]
    8d2e:	mov    ebx,ebp
    8d30:	shl    rbx,0x6
    8d34:	add    r13,rbx
    8d37:	cmp    QWORD PTR [r13+0x0],0x0
    8d3c:	je     8f90 <x86_pv_stream_complete+0x2c0>
    8d42:	mov    esi,ebp
    8d44:	mov    rdi,r15
    8d47:	call   8380 <process_vcpu_basic>
    8d4c:	test   eax,eax
    8d4e:	mov    r11d,eax
    8d51:	jne    8f60 <x86_pv_stream_complete+0x290>
    8d57:	cmp    QWORD PTR [r13+0x8],0x0
    8d5c:	je     8da6 <x86_pv_stream_complete+0xd6>
    8d5e:	mov    rax,QWORD PTR [r15+0x1c8]
    8d65:	mov    edx,DWORD PTR [r15+0x8]
    8d69:	mov    ecx,0x80
    8d6e:	mov    DWORD PTR [rsp+0x50],0x2a
    8d76:	mov    r14,QWORD PTR [r15]
    8d79:	mov    rdi,QWORD PTR [rsp+0x10]
    8d7e:	add    rax,rbx
    8d81:	mov    WORD PTR [rsp+0x58],dx
    8d86:	mov    rdx,QWORD PTR [rax+0x28]
    8d8a:	mov    rsi,QWORD PTR [rax+0x8]
    8d8e:	call   5e70 <__memcpy_chk@plt>
    8d93:	mov    rsi,r12
    8d96:	mov    rdi,r14
    8d99:	call   59d0 <xc_domctl@plt>
    8d9e:	test   eax,eax
    8da0:	jne    932c <x86_pv_stream_complete+0x65c>
    8da6:	cmp    QWORD PTR [r13+0x10],0x0
    8dab:	je     8e75 <x86_pv_stream_complete+0x1a5>
    8db1:	mov    r9,QWORD PTR [r15+0x1c8]
    8db8:	mov    r14,QWORD PTR [r15]
    8dbb:	mov    QWORD PTR [rsp+0x20],0x0
    8dc4:	mov    QWORD PTR [rsp+0x28],0x0
    8dcd:	mov    DWORD PTR [rsp+0x30],0x0
    8dd5:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
    8dde:	add    r9,rbx
    8de1:	mov    QWORD PTR [rsp+0x40],0x0
    8dea:	mov    rsi,QWORD PTR [rsp]
    8dee:	mov    rdx,QWORD PTR [r9+0x30]
    8df2:	mov    rdi,r14
    8df5:	mov    QWORD PTR [rsp+0x18],r9
    8dfa:	call   6220 <xc__hypercall_buffer_alloc@plt>
    8dff:	test   rax,rax
    8e02:	mov    r9,QWORD PTR [rsp+0x18]
    8e07:	je     936e <x86_pv_stream_complete+0x69e>
    8e0d:	mov    rcx,QWORD PTR [rsp+0x28]
    8e12:	mov    edx,DWORD PTR [r15+0x8]
    8e16:	mov    rdi,rax
    8e19:	mov    DWORD PTR [rsp+0x50],0x3e
    8e21:	mov    DWORD PTR [rsp+0x60],ebp
    8e25:	test   rcx,rcx
    8e28:	cmove  rcx,QWORD PTR [rsp]
    8e2d:	mov    WORD PTR [rsp+0x58],dx
    8e32:	mov    rdx,QWORD PTR [r9+0x30]
    8e36:	mov    QWORD PTR [rsp+0x70],rdx
    8e3b:	mov    rcx,QWORD PTR [rcx]
    8e3e:	mov    QWORD PTR [rsp+0x78],rcx
    8e43:	mov    rsi,QWORD PTR [r9+0x10]
    8e47:	call   5eb0 <memcpy@plt>
    8e4c:	mov    rsi,r12
    8e4f:	mov    rdi,r14
    8e52:	call   59d0 <xc_domctl@plt>
    8e57:	test   eax,eax
    8e59:	jne    8fc8 <x86_pv_stream_complete+0x2f8>
    8e5f:	mov    rsi,QWORD PTR [rsp+0x28]
    8e64:	test   rsi,rsi
    8e67:	je     93e0 <x86_pv_stream_complete+0x710>
    8e6d:	mov    rdi,r14
    8e70:	call   6190 <xc__hypercall_buffer_free@plt>
    8e75:	cmp    QWORD PTR [r13+0x18],0x0
    8e7a:	je     8f3d <x86_pv_stream_complete+0x26d>
    8e80:	add    rbx,QWORD PTR [r15+0x1c8]
    8e87:	mov    r14,QWORD PTR [r15]
    8e8a:	mov    QWORD PTR [rsp+0x20],0x0
    8e93:	mov    QWORD PTR [rsp+0x28],0x0
    8e9c:	mov    DWORD PTR [rsp+0x30],0x0
    8ea4:	mov    QWORD PTR [rsp+0x38],0xffffffffffffffff
    8ead:	mov    QWORD PTR [rsp+0x40],0x0
    8eb6:	mov    rsi,QWORD PTR [rsp]
    8eba:	mov    rdi,r14
    8ebd:	mov    rdx,QWORD PTR [rbx+0x38]
    8ec1:	call   6220 <xc__hypercall_buffer_alloc@plt>
    8ec6:	test   rax,rax
    8ec9:	je     93a7 <x86_pv_stream_complete+0x6d7>
    8ecf:	mov    edx,DWORD PTR [r15+0x8]
    8ed3:	mov    DWORD PTR [rsp+0x50],0x49
    8edb:	mov    rdi,rax
    8ede:	mov    DWORD PTR [rsp+0x60],ebp
    8ee2:	mov    WORD PTR [rsp+0x58],dx
    8ee7:	mov    rdx,QWORD PTR [rbx+0x38]
    8eeb:	mov    rcx,rdx
    8eee:	shr    rcx,0x4
    8ef2:	mov    DWORD PTR [rsp+0x64],ecx
    8ef6:	mov    rcx,QWORD PTR [rsp+0x28]
    8efb:	test   rcx,rcx
    8efe:	cmove  rcx,QWORD PTR [rsp]
    8f03:	mov    rcx,QWORD PTR [rcx]
    8f06:	mov    QWORD PTR [rsp+0x68],rcx
    8f0b:	mov    rsi,QWORD PTR [rbx+0x18]
    8f0f:	call   5eb0 <memcpy@plt>
    8f14:	mov    rsi,r12
    8f17:	mov    rdi,r14
    8f1a:	call   59d0 <xc_domctl@plt>
    8f1f:	test   eax,eax
    8f21:	jne    9038 <x86_pv_stream_complete+0x368>
    8f27:	mov    rsi,QWORD PTR [rsp+0x28]
    8f2c:	test   rsi,rsi
    8f2f:	je     93e9 <x86_pv_stream_complete+0x719>
    8f35:	mov    rdi,r14
    8f38:	call   6190 <xc__hypercall_buffer_free@plt>
    8f3d:	add    ebp,0x1
    8f40:	cmp    ebp,DWORD PTR [r15+0x1d0]
    8f47:	jb     8d27 <x86_pv_stream_complete+0x57>
    8f4d:	mov    rdi,r15
    8f50:	call   8000 <pin_pagetables>
    8f55:	test   eax,eax
    8f57:	mov    r11d,eax
    8f5a:	je     9068 <x86_pv_stream_complete+0x398>
    8f60:	mov    rcx,QWORD PTR [rsp+0xe8]
    8f68:	xor    rcx,QWORD PTR fs:0x28
    8f71:	mov    eax,r11d
    8f74:	jne    93db <x86_pv_stream_complete+0x70b>
    8f7a:	add    rsp,0xf8
    8f81:	pop    rbx
    8f82:	pop    rbp
    8f83:	pop    r12
    8f85:	pop    r13
    8f87:	pop    r14
    8f89:	pop    r15
    8f8b:	ret    
    8f8c:	nop    DWORD PTR [rax+0x0]
    8f90:	test   ebp,ebp
    8f92:	jne    8d57 <x86_pv_stream_complete+0x87>
    8f98:	call   5940 <__errno_location@plt>
    8f9d:	mov    rdi,QWORD PTR [rsp+0x8]
    8fa2:	mov    ebp,DWORD PTR [rax]
    8fa4:	lea    rdx,[rip+0x18af5]        # 21aa0 <__PRETTY_FUNCTION__.12816+0x360>
    8fab:	mov    rbx,rax
    8fae:	mov    esi,0x1
    8fb3:	xor    eax,eax
    8fb5:	call   5d50 <xc_report_error@plt>
    8fba:	mov    DWORD PTR [rbx],ebp
    8fbc:	mov    r11d,0xffffffff
    8fc2:	jmp    8f60 <x86_pv_stream_complete+0x290>
    8fc4:	nop    DWORD PTR [rax+0x0]
    8fc8:	mov    DWORD PTR [rsp+0x8],eax
    8fcc:	call   5940 <__errno_location@plt>
    8fd1:	mov    r12d,DWORD PTR [rax]
    8fd4:	mov    rbx,rax
    8fd7:	mov    rdi,r14
    8fda:	mov    esi,r12d
    8fdd:	call   6570 <xc_strerror@plt>
    8fe2:	mov    r8d,DWORD PTR [rbx]
    8fe5:	lea    rdx,[rip+0x18b44]        # 21b30 <__PRETTY_FUNCTION__.12816+0x3f0>
    8fec:	mov    r9,rax
    8fef:	mov    ecx,ebp
    8ff1:	mov    esi,0x1
    8ff6:	xor    eax,eax
    8ff8:	mov    rdi,r14
    8ffb:	call   5d50 <xc_report_error@plt>
    9000:	mov    DWORD PTR [rbx],r12d
    9003:	mov    rsi,QWORD PTR [rsp+0x28]
    9008:	mov    r11d,DWORD PTR [rsp+0x8]
    900d:	test   rsi,rsi
    9010:	jne    92d8 <x86_pv_stream_complete+0x608>
    9016:	mov    rsi,QWORD PTR [rsp]
    901a:	mov    rdi,r14
    901d:	mov    DWORD PTR [rsp+0x8],r11d
    9022:	call   6190 <xc__hypercall_buffer_free@plt>
    9027:	mov    r11d,DWORD PTR [rsp+0x8]
    902c:	jmp    8f60 <x86_pv_stream_complete+0x290>
    9031:	nop    DWORD PTR [rax+0x0]
    9038:	mov    DWORD PTR [rsp+0x8],eax
    903c:	call   5940 <__errno_location@plt>
    9041:	mov    r12d,DWORD PTR [rax]
    9044:	mov    rbx,rax
    9047:	mov    rdi,r14
    904a:	mov    esi,r12d
    904d:	call   6570 <xc_strerror@plt>
    9052:	mov    r8d,DWORD PTR [rbx]
    9055:	mov    r9,rax
    9058:	mov    ecx,ebp
    905a:	lea    rdx,[rip+0x18b37]        # 21b98 <__PRETTY_FUNCTION__.12816+0x458>
    9061:	jmp    8ff1 <x86_pv_stream_complete+0x321>
    9063:	nop    DWORD PTR [rax+rax*1+0x0]
    9068:	mov    esi,DWORD PTR [r15+0x190]
    906f:	mov    rbp,QWORD PTR [r15]
    9072:	mov    rcx,QWORD PTR [r15+0x1a0]
    9079:	test   esi,esi
    907b:	je     9167 <x86_pv_stream_complete+0x497>
    9081:	mov    rsi,QWORD PTR [rcx]
    9084:	cmp    QWORD PTR [r15+0x188],rsi
    908b:	jb     9241 <x86_pv_stream_complete+0x571>
    9091:	mov    rax,QWORD PTR [r15+0x1c0]
    9098:	mov    r12d,DWORD PTR [rax+rsi*4]
    909c:	test   r12d,r12d
    909f:	jne    9286 <x86_pv_stream_complete+0x5b6>
    90a5:	xor    r13d,r13d
    90a8:	xor    ebx,ebx
    90aa:	jmp    9104 <x86_pv_stream_complete+0x434>
    90ac:	nop    DWORD PTR [rax+0x0]
    90b0:	mov    rax,QWORD PTR [r15+0x1a0]
    90b7:	add    ebx,0x1
    90ba:	mov    QWORD PTR [rax+r13*1],r12
    90be:	mov    r11d,DWORD PTR [r15+0x190]
    90c5:	cmp    ebx,r11d
    90c8:	jae    9160 <x86_pv_stream_complete+0x490>
    90ce:	mov    rdx,QWORD PTR [r15+0x1a0]
    90d5:	mov    eax,ebx
    90d7:	lea    r13,[rax*8+0x0]
    90df:	mov    rsi,QWORD PTR [rdx+rax*8]
    90e3:	cmp    rsi,QWORD PTR [r15+0x188]
    90ea:	ja     9248 <x86_pv_stream_complete+0x578>
    90f0:	mov    rax,QWORD PTR [r15+0x1c0]
    90f7:	mov    r12d,DWORD PTR [rax+rsi*4]
    90fb:	test   r12d,r12d
    90fe:	jne    9290 <x86_pv_stream_complete+0x5c0>
    9104:	mov    rdi,r15
    9107:	call   7fa0 <pfn_to_mfn>
    910c:	mov    rdi,r15
    910f:	mov    rsi,rax
    9112:	mov    r12,rax
    9115:	call   5990 <mfn_in_pseudophysmap@plt>
    911a:	test   al,al
    911c:	jne    90b0 <x86_pv_stream_complete+0x3e0>
    911e:	call   5940 <__errno_location@plt>
    9123:	mov    r14d,DWORD PTR [rax]
    9126:	lea    rdx,[rip+0x18afb]        # 21c28 <__PRETTY_FUNCTION__.12816+0x4e8>
    912d:	mov    r13,rax
    9130:	mov    ecx,ebx
    9132:	mov    esi,0x1
    9137:	mov    rdi,rbp
    913a:	xor    eax,eax
    913c:	call   5d50 <xc_report_error@plt>
    9141:	mov    DWORD PTR [r13+0x0],r14d
    9145:	mov    rsi,r12
    9148:	mov    rdi,r15
    914b:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    9150:	mov    r11d,0xffffffff
    9156:	jmp    8f60 <x86_pv_stream_complete+0x290>
    915b:	nop    DWORD PTR [rax+rax*1+0x0]
    9160:	mov    rcx,QWORD PTR [r15+0x1a0]
    9167:	mov    esi,DWORD PTR [r15+0x8]
    916b:	mov    r8d,r11d
    916e:	mov    edx,0x2
    9173:	mov    rdi,rbp
    9176:	call   5f50 <xc_map_foreign_pages@plt>
    917b:	test   rax,rax
    917e:	mov    rcx,rax
    9181:	je     92ed <x86_pv_stream_complete+0x61d>
    9187:	mov    rax,QWORD PTR [r15+0x188]
    918e:	mov    rsi,QWORD PTR [r15+0x198]
    9195:	mov    rdi,rcx
    9198:	lea    rdx,[rax+0x1]
    919c:	mov    eax,DWORD PTR [r15+0x160]
    91a3:	imul   rdx,rax
    91a7:	call   5eb0 <memcpy@plt>
    91ac:	mov    esi,DWORD PTR [r15+0x190]
    91b3:	mov    rdi,rax
    91b6:	shl    rsi,0xc
    91ba:	call   61b0 <munmap@plt>
    91bf:	mov    eax,DWORD PTR [r15+0x140]
    91c6:	sub    rsp,0x8
    91ca:	mov    rcx,QWORD PTR [r15+0x130]
    91d1:	mov    esi,DWORD PTR [r15+0x8]
    91d5:	mov    r9d,DWORD PTR [r15+0x144]
    91dc:	xor    edx,edx
    91de:	mov    r8,QWORD PTR [r15+0x128]
    91e5:	push   rax
    91e6:	mov    rdi,QWORD PTR [rsp+0x18]
    91eb:	call   61e0 <xc_dom_gnttab_seed@plt>
    91f0:	mov    r11d,eax
    91f3:	test   r11d,r11d
    91f6:	pop    rax
    91f7:	pop    rdx
    91f8:	je     8f60 <x86_pv_stream_complete+0x290>
    91fe:	mov    DWORD PTR [rsp],r11d
    9202:	call   5940 <__errno_location@plt>
    9207:	mov    r14,QWORD PTR [rsp+0x8]
    920c:	mov    ebp,DWORD PTR [rax]
    920e:	mov    rbx,rax
    9211:	mov    esi,ebp
    9213:	mov    rdi,r14
    9216:	call   6570 <xc_strerror@plt>
    921b:	mov    ecx,DWORD PTR [rbx]
    921d:	lea    rdx,[rip+0x18a4c]        # 21c70 <__PRETTY_FUNCTION__.12816+0x530>
    9224:	mov    r8,rax
    9227:	mov    esi,0x1
    922c:	mov    rdi,r14
    922f:	xor    eax,eax
    9231:	call   5d50 <xc_report_error@plt>
    9236:	mov    DWORD PTR [rbx],ebp
    9238:	mov    r11d,DWORD PTR [rsp]
    923c:	jmp    8f60 <x86_pv_stream_complete+0x290>
    9241:	xor    ebx,ebx
    9243:	nop    DWORD PTR [rax+rax*1+0x0]
    9248:	mov    QWORD PTR [rsp],rsi
    924c:	call   5940 <__errno_location@plt>
    9251:	mov    rsi,QWORD PTR [rsp]
    9255:	mov    r13d,DWORD PTR [rax]
    9258:	lea    rdx,[rip+0x18961]        # 21bc0 <__PRETTY_FUNCTION__.12816+0x480>
    925f:	mov    r12,rax
    9262:	mov    r8d,ebx
    9265:	mov    rdi,rbp
    9268:	xor    eax,eax
    926a:	mov    rcx,rsi
    926d:	mov    esi,0x1
    9272:	call   5d50 <xc_report_error@plt>
    9277:	mov    DWORD PTR [r12],r13d
    927b:	mov    r11d,0xffffffff
    9281:	jmp    8f60 <x86_pv_stream_complete+0x290>
    9286:	xor    ebx,ebx
    9288:	nop    DWORD PTR [rax+rax*1+0x0]
    9290:	mov    QWORD PTR [rsp],rsi
    9294:	call   5940 <__errno_location@plt>
    9299:	mov    rsi,QWORD PTR [rsp]
    929d:	mov    r14d,DWORD PTR [rax]
    92a0:	mov    r9d,r12d
    92a3:	lea    rdx,[rip+0x18946]        # 21bf0 <__PRETTY_FUNCTION__.12816+0x4b0>
    92aa:	mov    r13,rax
    92ad:	shr    r9d,0x1c
    92b1:	mov    r8d,ebx
    92b4:	mov    rdi,rbp
    92b7:	xor    eax,eax
    92b9:	mov    rcx,rsi
    92bc:	mov    esi,0x1
    92c1:	call   5d50 <xc_report_error@plt>
    92c6:	mov    DWORD PTR [r13+0x0],r14d
    92ca:	mov    r11d,0xffffffff
    92d0:	jmp    8f60 <x86_pv_stream_complete+0x290>
    92d5:	nop    DWORD PTR [rax]
    92d8:	mov    rdi,r14
    92db:	mov    DWORD PTR [rsp],r11d
    92df:	call   6190 <xc__hypercall_buffer_free@plt>
    92e4:	mov    r11d,DWORD PTR [rsp]
    92e8:	jmp    8f60 <x86_pv_stream_complete+0x290>
    92ed:	call   5940 <__errno_location@plt>
    92f2:	mov    r12d,DWORD PTR [rax]
    92f5:	mov    rbx,rax
    92f8:	mov    rdi,rbp
    92fb:	mov    esi,r12d
    92fe:	call   6570 <xc_strerror@plt>
    9303:	mov    ecx,DWORD PTR [rbx]
    9305:	lea    rdx,[rip+0x1893c]        # 21c48 <__PRETTY_FUNCTION__.12816+0x508>
    930c:	mov    r8,rax
    930f:	mov    esi,0x1
    9314:	mov    rdi,rbp
    9317:	xor    eax,eax
    9319:	call   5d50 <xc_report_error@plt>
    931e:	mov    DWORD PTR [rbx],r12d
    9321:	mov    r11d,0xffffffff
    9327:	jmp    8f60 <x86_pv_stream_complete+0x290>
    932c:	call   5940 <__errno_location@plt>
    9331:	mov    r12d,DWORD PTR [rax]
    9334:	mov    rbx,rax
    9337:	mov    rdi,r14
    933a:	mov    esi,r12d
    933d:	call   6570 <xc_strerror@plt>
    9342:	mov    r8d,DWORD PTR [rbx]
    9345:	lea    rdx,[rip+0x1877c]        # 21ac8 <__PRETTY_FUNCTION__.12816+0x388>
    934c:	mov    r9,rax
    934f:	mov    ecx,ebp
    9351:	mov    esi,0x1
    9356:	mov    rdi,r14
    9359:	xor    eax,eax
    935b:	call   5d50 <xc_report_error@plt>
    9360:	mov    DWORD PTR [rbx],r12d
    9363:	mov    r11d,0xffffffff
    9369:	jmp    8f60 <x86_pv_stream_complete+0x290>
    936e:	mov    QWORD PTR [rsp],r9
    9372:	call   5940 <__errno_location@plt>
    9377:	mov    r9,QWORD PTR [rsp]
    937b:	mov    ebp,DWORD PTR [rax]
    937d:	lea    rdx,[rip+0x18774]        # 21af8 <__PRETTY_FUNCTION__.12816+0x3b8>
    9384:	mov    rbx,rax
    9387:	mov    esi,0x1
    938c:	mov    rdi,r14
    938f:	xor    eax,eax
    9391:	mov    rcx,QWORD PTR [r9+0x30]
    9395:	call   5d50 <xc_report_error@plt>
    939a:	mov    DWORD PTR [rbx],ebp
    939c:	mov    r11d,0xffffffff
    93a2:	jmp    8f60 <x86_pv_stream_complete+0x290>
    93a7:	call   5940 <__errno_location@plt>
    93ac:	mov    rcx,QWORD PTR [rbx+0x38]
    93b0:	mov    r12d,DWORD PTR [rax]
    93b3:	lea    rdx,[rip+0x187a6]        # 21b60 <__PRETTY_FUNCTION__.12816+0x420>
    93ba:	mov    rbp,rax
    93bd:	mov    esi,0x1
    93c2:	mov    rdi,r14
    93c5:	xor    eax,eax
    93c7:	call   5d50 <xc_report_error@plt>
    93cc:	mov    DWORD PTR [rbp+0x0],r12d
    93d0:	mov    r11d,0xffffffff
    93d6:	jmp    8f60 <x86_pv_stream_complete+0x290>
    93db:	call   5b80 <__stack_chk_fail@plt>
    93e0:	mov    rsi,QWORD PTR [rsp]
    93e4:	jmp    8e6d <x86_pv_stream_complete+0x19d>
    93e9:	mov    rsi,QWORD PTR [rsp]
    93ed:	mov    rdi,r14
    93f0:	call   6190 <xc__hypercall_buffer_free@plt>
    93f5:	jmp    8f3d <x86_pv_stream_complete+0x26d>
    93fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009400 <x86_pv_setup>:
    9400:	push   r13
    9402:	push   r12
    9404:	push   rbp
    9405:	push   rbx
    9406:	sub    rsp,0x8
    940a:	mov    ebp,DWORD PTR [rdi+0x104]
    9410:	mov    r12,QWORD PTR [rdi]
    9413:	cmp    ebp,0x1
    9416:	jne    94b0 <x86_pv_setup+0xb0>
    941c:	mov    ebp,DWORD PTR [rdi+0x108]
    9422:	mov    rbx,rdi
    9425:	cmp    ebp,0x1000
    942b:	jne    9480 <x86_pv_setup+0x80>
    942d:	call   5cd0 <x86_pv_domain_info@plt>
    9432:	test   eax,eax
    9434:	je     9448 <x86_pv_setup+0x48>
    9436:	add    rsp,0x8
    943a:	pop    rbx
    943b:	pop    rbp
    943c:	pop    r12
    943e:	pop    r13
    9440:	ret    
    9441:	nop    DWORD PTR [rax+0x0]
    9448:	mov    eax,DWORD PTR [rbx+0x5c]
    944b:	mov    edi,0x40
    9450:	lea    esi,[rax+0x1]
    9453:	mov    DWORD PTR [rbx+0x1d0],esi
    9459:	call   5de0 <calloc@plt>
    945e:	test   rax,rax
    9461:	mov    QWORD PTR [rbx+0x1c8],rax
    9468:	je     94e8 <x86_pv_setup+0xe8>
    946a:	add    rsp,0x8
    946e:	mov    rdi,rbx
    9471:	pop    rbx
    9472:	pop    rbp
    9473:	pop    r12
    9475:	pop    r13
    9477:	jmp    5da0 <x86_pv_map_m2p@plt>
    947c:	nop    DWORD PTR [rax+0x0]
    9480:	call   5940 <__errno_location@plt>
    9485:	mov    r13d,DWORD PTR [rax]
    9488:	lea    rdx,[rip+0x18841]        # 21cd0 <__PRETTY_FUNCTION__.12816+0x590>
    948f:	mov    rbx,rax
    9492:	mov    ecx,ebp
    9494:	xor    eax,eax
    9496:	mov    esi,0x1
    949b:	mov    rdi,r12
    949e:	call   5d50 <xc_report_error@plt>
    94a3:	mov    DWORD PTR [rbx],r13d
    94a6:	mov    eax,0xffffffff
    94ab:	jmp    9436 <x86_pv_setup+0x36>
    94ad:	nop    DWORD PTR [rax]
    94b0:	call   5940 <__errno_location@plt>
    94b5:	mov    edi,ebp
    94b7:	mov    r13d,DWORD PTR [rax]
    94ba:	mov    rbx,rax
    94bd:	call   5d30 <dhdr_type_to_str@plt>
    94c2:	lea    rdx,[rip+0x187cf]        # 21c98 <__PRETTY_FUNCTION__.12816+0x558>
    94c9:	mov    rcx,rax
    94cc:	mov    esi,0x1
    94d1:	xor    eax,eax
    94d3:	mov    rdi,r12
    94d6:	call   5d50 <xc_report_error@plt>
    94db:	mov    DWORD PTR [rbx],r13d
    94de:	mov    eax,0xffffffff
    94e3:	jmp    9436 <x86_pv_setup+0x36>
    94e8:	call   5940 <__errno_location@plt>
    94ed:	mov    DWORD PTR [rax],0xc
    94f3:	mov    eax,0xffffffff
    94f8:	jmp    9436 <x86_pv_setup+0x36>
    94fd:	nop    DWORD PTR [rax]

0000000000009500 <x86_pv_process_record>:
    9500:	push   r15
    9502:	push   r14
    9504:	push   r13
    9506:	push   r12
    9508:	push   rbp
    9509:	push   rbx
    950a:	sub    rsp,0x128
    9511:	mov    ebx,DWORD PTR [rsi]
    9513:	mov    rax,QWORD PTR fs:0x28
    951c:	mov    QWORD PTR [rsp+0x118],rax
    9524:	xor    eax,eax
    9526:	cmp    ebx,0xc
    9529:	ja     9a50 <x86_pv_process_record+0x550>
    952f:	lea    rcx,[rip+0x18d6a]        # 222a0 <__PRETTY_FUNCTION__.12816+0xb60>
    9536:	mov    edx,ebx
    9538:	mov    r15,rdi
    953b:	movsxd rax,DWORD PTR [rcx+rdx*4]
    953f:	add    rax,rcx
    9542:	jmp    rax
    9544:	nop    DWORD PTR [rax+0x0]
    9548:	call   5fa0 <handle_tsc_info@plt>
    954d:	nop    DWORD PTR [rax]
    9550:	mov    rdi,QWORD PTR [rsp+0x118]
    9558:	xor    rdi,QWORD PTR fs:0x28
    9561:	jne    a39a <x86_pv_process_record+0xe9a>
    9567:	add    rsp,0x128
    956e:	pop    rbx
    956f:	pop    rbp
    9570:	pop    r12
    9572:	pop    r13
    9574:	pop    r14
    9576:	pop    r15
    9578:	ret    
    9579:	nop    DWORD PTR [rax+0x0]
    9580:	cmp    BYTE PTR [rdi+0x1b8],0x0
    9587:	mov    ebx,DWORD PTR [rsi+0x4]
    958a:	mov    rbp,QWORD PTR [rsi+0x8]
    958e:	mov    r12,QWORD PTR [rdi]
    9591:	jne    a1be <x86_pv_process_record+0xcbe>
    9597:	cmp    ebx,0x7
    959a:	jbe    a187 <x86_pv_process_record+0xc87>
    95a0:	movzx  ebx,BYTE PTR [rbp+0x0]
    95a4:	lea    eax,[rbx-0x4]
    95a7:	test   al,0xfb
    95a9:	jne    a15a <x86_pv_process_record+0xc5a>
    95af:	cmp    ebx,DWORD PTR [rdi+0x160]
    95b5:	je     9a60 <x86_pv_process_record+0x560>
    95bb:	lea    rdi,[rsp+0x88]
    95c3:	xor    eax,eax
    95c5:	mov    ecx,0x11
    95ca:	mov    QWORD PTR [rsp+0x84],0x0
    95d6:	mov    QWORD PTR [rsp+0x108],0x0
    95e2:	lea    rbx,[rsp+0x50]
    95e7:	rep stos QWORD PTR es:[rdi],rax
    95ea:	mov    DWORD PTR [rsp+0x80],0x23
    95f5:	lea    rdx,[rsp+0x80]
    95fd:	mov    rsi,rbx
    9600:	mov    rdi,r12
    9603:	mov    eax,DWORD PTR [r15+0x8]
    9607:	mov    WORD PTR [rsp+0x88],ax
    960f:	movzx  eax,BYTE PTR [rbp+0x0]
    9613:	mov    QWORD PTR [rsp+0x50],0x0
    961c:	mov    QWORD PTR [rsp+0x58],0x0
    9625:	mov    DWORD PTR [rsp+0x60],0x3
    962d:	mov    QWORD PTR [rsp+0x68],rdx
    9632:	mov    QWORD PTR [rsp+0x70],0x90
    963b:	mov    DWORD PTR [rsp+0x84],0x11
    9646:	shl    eax,0x3
    9649:	mov    DWORD PTR [rsp+0x90],eax
    9650:	call   5a40 <xc__hypercall_bounce_pre@plt>
    9655:	test   eax,eax
    9657:	jne    a265 <x86_pv_process_record+0xd65>
    965d:	mov    rax,QWORD PTR [rsp+0x58]
    9662:	mov    rdi,QWORD PTR [r12+0x440]
    966a:	mov    esi,0x24
    966f:	test   rax,rax
    9672:	cmove  rax,rbx
    9676:	mov    rdx,QWORD PTR [rax]
    9679:	call   5e30 <xencall1@plt>
    967e:	test   eax,eax
    9680:	jns    9f00 <x86_pv_process_record+0xa00>
    9686:	call   5940 <__errno_location@plt>
    968b:	cmp    DWORD PTR [rax],0xd
    968e:	mov    r13,rax
    9691:	je     9fc5 <x86_pv_process_record+0xac5>
    9697:	mov    rsi,QWORD PTR [rsp+0x58]
    969c:	test   rsi,rsi
    969f:	je     9ff8 <x86_pv_process_record+0xaf8>
    96a5:	mov    rdi,r12
    96a8:	call   6210 <xc__hypercall_bounce_post@plt>
    96ad:	call   5940 <__errno_location@plt>
    96b2:	movzx  ecx,BYTE PTR [rbp+0x0]
    96b6:	mov    r8d,DWORD PTR [r15+0x160]
    96bd:	lea    rdx,[rip+0x18744]        # 21e08 <__PRETTY_FUNCTION__.12816+0x6c8>
    96c4:	mov    r13d,DWORD PTR [rax]
    96c7:	mov    rbx,rax
    96ca:	mov    esi,0x1
    96cf:	mov    rdi,r12
    96d2:	xor    eax,eax
    96d4:	shl    r8d,0x3
    96d8:	shl    ecx,0x3
    96db:	call   5d50 <xc_report_error@plt>
    96e0:	mov    DWORD PTR [rbx],r13d
    96e3:	mov    eax,0xffffffff
    96e8:	jmp    9550 <x86_pv_process_record+0x50>
    96ed:	nop    DWORD PTR [rax]
    96f0:	mov    rax,QWORD PTR [rdi]
    96f3:	mov    r13d,DWORD PTR [rsi+0x4]
    96f7:	xor    edx,edx
    96f9:	mov    rbx,QWORD PTR [rsi+0x8]
    96fd:	mov    esi,DWORD PTR [rdi+0x160]
    9703:	mov    QWORD PTR [rsp+0x18],rax
    9708:	mov    eax,0x1000
    970d:	div    esi
    970f:	cmp    BYTE PTR [rdi+0x1b8],0x0
    9716:	mov    ecx,eax
    9718:	je     a12c <x86_pv_process_record+0xc2c>
    971e:	cmp    r13d,0x7
    9722:	jbe    a093 <x86_pv_process_record+0xb93>
    9728:	mov    ebp,DWORD PTR [rbx+0x4]
    972b:	mov    edi,DWORD PTR [rbx]
    972d:	cmp    edi,ebp
    972f:	ja     a056 <x86_pv_process_record+0xb56>
    9735:	xor    edx,edx
    9737:	mov    eax,edi
    9739:	div    ecx
    973b:	xor    edx,edx
    973d:	mov    r8d,eax
    9740:	mov    r14d,eax
    9743:	mov    eax,ebp
    9745:	div    ecx
    9747:	lea    r12d,[rax+0x1]
    974b:	mov    eax,r12d
    974e:	sub    eax,r8d
    9751:	mov    edx,eax
    9753:	mov    eax,r13d
    9756:	mov    DWORD PTR [rsp+0x8],edx
    975a:	lea    rdx,[rdx*8+0x8]
    9762:	cmp    rax,rdx
    9765:	jne    a000 <x86_pv_process_record+0xb00>
    976b:	mov    rax,QWORD PTR [r15+0x188]
    9772:	cmp    rbp,rax
    9775:	mov    QWORD PTR [rsp+0x10],rax
    977a:	ja     9a90 <x86_pv_process_record+0x590>
    9780:	mov    ecx,DWORD PTR [rsp+0x8]
    9784:	add    rbx,0x8
    9788:	test   ecx,ecx
    978a:	je     97ae <x86_pv_process_record+0x2ae>
    978c:	nop    DWORD PTR [rax+0x0]
    9790:	mov    rcx,QWORD PTR [rbx]
    9793:	mov    rax,QWORD PTR [r15+0x1a0]
    979a:	mov    edx,r14d
    979d:	add    r14d,0x1
    97a1:	add    rbx,0x8
    97a5:	cmp    r12d,r14d
    97a8:	mov    QWORD PTR [rax+rdx*8],rcx
    97ac:	jne    9790 <x86_pv_process_record+0x290>
    97ae:	xor    eax,eax
    97b0:	jmp    9550 <x86_pv_process_record+0x50>
    97b5:	nop    DWORD PTR [rax]
    97b8:	cmp    ebx,0x5
    97bb:	mov    r12,QWORD PTR [rdi]
    97be:	je     9dd3 <x86_pv_process_record+0x8d3>
    97c4:	jbe    9c30 <x86_pv_process_record+0x730>
    97ca:	cmp    ebx,0x6
    97cd:	je     9de4 <x86_pv_process_record+0x8e4>
    97d3:	lea    rax,[rip+0x180d1]        # 218ab <__PRETTY_FUNCTION__.12816+0x16b>
    97da:	cmp    ebx,0xc
    97dd:	mov    QWORD PTR [rsp+0x8],rax
    97e2:	jne    9c45 <x86_pv_process_record+0x745>
    97e8:	mov    r8d,DWORD PTR [rsi+0x4]
    97ec:	cmp    r8d,0x7
    97f0:	jbe    a1d4 <x86_pv_process_record+0xcd4>
    97f6:	mov    rsi,QWORD PTR [rsi+0x8]
    97fa:	mov    ebp,r8d
    97fd:	sub    rbp,0x8
    9801:	mov    r13d,DWORD PTR [rsi]
    9804:	je     9d8e <x86_pv_process_record+0x88e>
    980a:	mov    r14d,DWORD PTR [r15+0x1d0]
    9811:	cmp    r13d,r14d
    9814:	jae    a22f <x86_pv_process_record+0xd2f>
    981a:	mov    r14d,r13d
    981d:	shl    r14,0x6
    9821:	add    r14,QWORD PTR [r15+0x1c8]
    9828:	cmp    ebx,0x5
    982b:	je     9e3f <x86_pv_process_record+0x93f>
    9831:	cmp    ebx,0x6
    9834:	je     9c93 <x86_pv_process_record+0x793>
    983a:	cmp    ebx,0x4
    983d:	je     9e91 <x86_pv_process_record+0x991>
    9843:	mov    rdi,rbp
    9846:	mov    QWORD PTR [rsp+0x10],rsi
    984b:	call   5ff0 <malloc@plt>
    9850:	test   rax,rax
    9853:	mov    r15,rax
    9856:	mov    rsi,QWORD PTR [rsp+0x10]
    985b:	je     9f5b <x86_pv_process_record+0xa5b>
    9861:	add    rsi,0x8
    9865:	mov    rdx,rbp
    9868:	mov    rdi,rax
    986b:	call   5eb0 <memcpy@plt>
    9870:	cmp    ebx,0xc
    9873:	jne    97ae <x86_pv_process_record+0x2ae>
    9879:	mov    rdi,QWORD PTR [r14+0x18]
    987d:	call   5900 <free@plt>
    9882:	mov    QWORD PTR [r14+0x18],r15
    9886:	mov    QWORD PTR [r14+0x38],rbp
    988a:	xor    eax,eax
    988c:	jmp    9550 <x86_pv_process_record+0x50>
    9891:	nop    DWORD PTR [rax+0x0]
    9898:	cmp    BYTE PTR [rdi+0x1b8],0x0
    989f:	mov    r12d,DWORD PTR [rsi+0x4]
    98a3:	mov    rbx,QWORD PTR [rsi+0x8]
    98a7:	mov    rbp,QWORD PTR [rdi]
    98aa:	je     a0fe <x86_pv_process_record+0xbfe>
    98b0:	cmp    r12d,0x1000
    98b7:	jne    9f94 <x86_pv_process_record+0xa94>
    98bd:	mov    r8,QWORD PTR [rdi+0x40]
    98c1:	mov    esi,DWORD PTR [rdi+0x8]
    98c4:	mov    ecx,0x3
    98c9:	mov    edx,0x1000
    98ce:	mov    rdi,rbp
    98d1:	call   6590 <xc_map_foreign_range@plt>
    98d6:	test   rax,rax
    98d9:	mov    r8,rax
    98dc:	je     9df5 <x86_pv_process_record+0x8f5>
    98e2:	mov    rax,QWORD PTR [rbx]
    98e5:	lea    rdx,[r8+0x808]
    98ec:	lea    rdi,[r8+0x8]
    98f0:	mov    rsi,rbx
    98f3:	and    rdi,0xfffffffffffffff8
    98f7:	mov    QWORD PTR [r8],rax
    98fa:	mov    rax,QWORD PTR [rbx+0x7f8]
    9901:	mov    QWORD PTR [rdx-0x10],rax
    9905:	mov    rax,r8
    9908:	sub    rax,rdi
    990b:	lea    ecx,[rax+0x800]
    9911:	sub    rsi,rax
    9914:	mov    eax,ecx
    9916:	shr    eax,0x3
    9919:	mov    ecx,eax
    991b:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    991e:	cmp    DWORD PTR [r15+0x160],0x8
    9926:	je     9d20 <x86_pv_process_record+0x820>
    992c:	movdqu xmm0,XMMWORD PTR [rbx+0x90c]
    9934:	movups XMMWORD PTR [r8+0x90c],xmm0
    993c:	mov    rsi,QWORD PTR [rbx+0x91c]
    9943:	mov    QWORD PTR [r8+0x91c],rsi
    994a:	mov    ecx,DWORD PTR [rbx+0x924]
    9950:	mov    DWORD PTR [r8+0x924],ecx
    9957:	cmp    DWORD PTR [r15+0x160],0x8
    995f:	je     9d10 <x86_pv_process_record+0x810>
    9965:	mov    DWORD PTR [r8+0x910],0x0
    9970:	cmp    DWORD PTR [r15+0x160],0x8
    9978:	lea    rax,[r8+0x800]
    997f:	mov    QWORD PTR [r8+0x800],0x0
    998a:	je     9ce8 <x86_pv_process_record+0x7e8>
    9990:	mov    rdi,rdx
    9993:	mov    QWORD PTR [r8+0x878],0x0
    999e:	and    rdi,0xfffffffffffffff8
    99a2:	sub    rax,rdi
    99a5:	lea    ecx,[rax+0x80]
    99ab:	xor    eax,eax
    99ad:	shr    ecx,0x3
    99b0:	rep stos QWORD PTR es:[rdi],rax
    99b3:	lea    rax,[r8+0x4]
    99b7:	lea    rdx,[r8+0x804]
    99be:	jmp    99cf <x86_pv_process_record+0x4cf>
    99c0:	mov    DWORD PTR [rax],0x0
    99c6:	add    rax,0x40
    99ca:	cmp    rdx,rax
    99cd:	je     99ea <x86_pv_process_record+0x4ea>
    99cf:	cmp    DWORD PTR [r15+0x160],0x8
    99d7:	jne    99c0 <x86_pv_process_record+0x4c0>
    99d9:	mov    QWORD PTR [rax+0x4],0x0
    99e1:	add    rax,0x40
    99e5:	cmp    rdx,rax
    99e8:	jne    99cf <x86_pv_process_record+0x4cf>
    99ea:	cmp    DWORD PTR [r15+0x160],0x8
    99f2:	je     9d58 <x86_pv_process_record+0x858>
    99f8:	pcmpeqd xmm0,xmm0
    99fc:	movups XMMWORD PTR [r8+0x880],xmm0
    9a04:	movups XMMWORD PTR [r8+0x890],xmm0
    9a0c:	movups XMMWORD PTR [r8+0x8a0],xmm0
    9a14:	movups XMMWORD PTR [r8+0x8b0],xmm0
    9a1c:	movups XMMWORD PTR [r8+0x8c0],xmm0
    9a24:	movups XMMWORD PTR [r8+0x8d0],xmm0
    9a2c:	movups XMMWORD PTR [r8+0x8e0],xmm0
    9a34:	movups XMMWORD PTR [r8+0x8f0],xmm0
    9a3c:	mov    esi,0x1000
    9a41:	mov    rdi,r8
    9a44:	call   61b0 <munmap@plt>
    9a49:	xor    eax,eax
    9a4b:	jmp    9550 <x86_pv_process_record+0x50>
    9a50:	mov    eax,0x1
    9a55:	jmp    9550 <x86_pv_process_record+0x50>
    9a5a:	nop    WORD PTR [rax+rax*1+0x0]
    9a60:	movzx  ebx,BYTE PTR [rbp+0x1]
    9a64:	lea    eax,[rbx-0x3]
    9a67:	cmp    al,0x1
    9a69:	ja     a215 <x86_pv_process_record+0xd15>
    9a6f:	mov    ebp,DWORD PTR [rdi+0x164]
    9a75:	cmp    ebx,ebp
    9a77:	jne    a0ca <x86_pv_process_record+0xbca>
    9a7d:	mov    BYTE PTR [r15+0x1b8],0x1
    9a85:	xor    eax,eax
    9a87:	jmp    9550 <x86_pv_process_record+0x50>
    9a8c:	nop    DWORD PTR [rax+0x0]
    9a90:	xor    edx,edx
    9a92:	mov    rax,rbp
    9a95:	mov    r13d,esi
    9a98:	div    rcx
    9a9b:	xor    edx,edx
    9a9d:	mov    rdi,QWORD PTR [r15+0x198]
    9aa4:	mov    QWORD PTR [rsp+0x40],rax
    9aa9:	add    rax,0x1
    9aad:	mov    QWORD PTR [rsp+0x20],rax
    9ab2:	mov    rax,QWORD PTR [rsp+0x10]
    9ab7:	div    rcx
    9aba:	lea    rdx,[rbp+0x1]
    9abe:	mov    QWORD PTR [rsp+0x38],rdx
    9ac3:	imul   r13,rdx
    9ac7:	mov    QWORD PTR [rsp+0x48],rax
    9acc:	mov    rsi,r13
    9acf:	call   6160 <realloc@plt>
    9ad4:	mov    QWORD PTR [rsp+0x30],rax
    9ad9:	call   5940 <__errno_location@plt>
    9ade:	mov    rcx,QWORD PTR [rsp+0x30]
    9ae3:	mov    QWORD PTR [rsp+0x28],rax
    9ae8:	mov    rdx,QWORD PTR [rsp+0x38]
    9aed:	test   rcx,rcx
    9af0:	je     a39f <x86_pv_process_record+0xe9f>
    9af6:	lea    r13,[rdx*4+0x0]
    9afe:	mov    rdi,QWORD PTR [r15+0x1c0]
    9b05:	mov    QWORD PTR [r15+0x198],rcx
    9b0c:	mov    rsi,r13
    9b0f:	call   6160 <realloc@plt>
    9b14:	test   rax,rax
    9b17:	je     a30a <x86_pv_process_record+0xe0a>
    9b1d:	mov    QWORD PTR [r15+0x1c0],rax
    9b24:	mov    rax,QWORD PTR [rsp+0x40]
    9b29:	mov    rdi,QWORD PTR [r15+0x1a0]
    9b30:	lea    r13,[rax*8+0x10]
    9b38:	mov    rsi,r13
    9b3b:	call   6160 <realloc@plt>
    9b40:	test   rax,rax
    9b43:	je     a2e1 <x86_pv_process_record+0xde1>
    9b49:	mov    QWORD PTR [r15+0x1a0],rax
    9b50:	mov    rax,QWORD PTR [rsp+0x10]
    9b55:	mov    edi,DWORD PTR [rsp+0x20]
    9b59:	mov    QWORD PTR [r15+0x188],rbp
    9b60:	test   rax,rax
    9b63:	mov    DWORD PTR [r15+0x190],edi
    9b6a:	jne    9c81 <x86_pv_process_record+0x781>
    9b70:	xor    r13d,r13d
    9b73:	nop    DWORD PTR [rax+rax*1+0x0]
    9b78:	mov    rsi,r13
    9b7b:	mov    rdx,0xffffffffffffffff
    9b82:	mov    rdi,r15
    9b85:	call   QWORD PTR [r15+0x88]
    9b8c:	mov    rsi,r13
    9b8f:	add    r13,0x1
    9b93:	xor    edx,edx
    9b95:	mov    rdi,r15
    9b98:	call   QWORD PTR [r15+0x90]
    9b9f:	cmp    rbp,r13
    9ba2:	jae    9b78 <x86_pv_process_record+0x678>
    9ba4:	mov    rax,QWORD PTR [rsp+0x48]
    9ba9:	cmp    rax,0xffffffffffffffff
    9bad:	je     9e38 <x86_pv_process_record+0x938>
    9bb3:	add    rax,0x2
    9bb7:	cmp    QWORD PTR [rsp+0x20],rax
    9bbc:	jb     9bf0 <x86_pv_process_record+0x6f0>
    9bbe:	mov    rdi,QWORD PTR [rsp+0x20]
    9bc3:	lea    rdx,[rax*8+0x0]
    9bcb:	mov    rsi,0xffffffffffffffff
    9bd2:	nop    WORD PTR [rax+rax*1+0x0]
    9bd8:	mov    rcx,QWORD PTR [r15+0x1a0]
    9bdf:	add    rax,0x1
    9be3:	mov    QWORD PTR [rcx+rdx*1],rsi
    9be7:	add    rdx,0x8
    9beb:	cmp    rdi,rax
    9bee:	jae    9bd8 <x86_pv_process_record+0x6d8>
    9bf0:	mov    rax,QWORD PTR [rsp+0x28]
    9bf5:	mov    rdi,QWORD PTR [rsp+0x18]
    9bfa:	sub    rsp,0x8
    9bfe:	lea    r8,[rip+0x18483]        # 22088 <__PRETTY_FUNCTION__.12816+0x948>
    9c05:	xor    ecx,ecx
    9c07:	mov    edx,0x3
    9c0c:	mov    r13d,DWORD PTR [rax]
    9c0f:	mov    rsi,QWORD PTR [rdi+0x8]
    9c13:	xor    eax,eax
    9c15:	push   rbp
    9c16:	mov    r9,QWORD PTR [rsp+0x20]
    9c1b:	call   6540 <xc_report@plt>
    9c20:	mov    rax,QWORD PTR [rsp+0x38]
    9c25:	mov    DWORD PTR [rax],r13d
    9c28:	pop    rsi
    9c29:	pop    rdi
    9c2a:	jmp    9780 <x86_pv_process_record+0x280>
    9c2f:	nop
    9c30:	lea    rax,[rip+0x17c3b]        # 21872 <__PRETTY_FUNCTION__.12816+0x132>
    9c37:	cmp    ebx,0x4
    9c3a:	mov    QWORD PTR [rsp+0x8],rax
    9c3f:	je     97e8 <x86_pv_process_record+0x2e8>
    9c45:	call   5940 <__errno_location@plt>
    9c4a:	mov    edi,ebx
    9c4c:	mov    r13d,DWORD PTR [rax]
    9c4f:	mov    rbp,rax
    9c52:	call   5ea0 <rec_type_to_str@plt>
    9c57:	lea    rdx,[rip+0x18452]        # 220b0 <__PRETTY_FUNCTION__.12816+0x970>
    9c5e:	mov    rcx,rax
    9c61:	mov    r8d,ebx
    9c64:	xor    eax,eax
    9c66:	mov    esi,0x1
    9c6b:	mov    rdi,r12
    9c6e:	call   5d50 <xc_report_error@plt>
    9c73:	mov    DWORD PTR [rbp+0x0],r13d
    9c77:	mov    eax,0xffffffff
    9c7c:	jmp    9550 <x86_pv_process_record+0x50>
    9c81:	lea    r13,[rax+0x1]
    9c85:	cmp    rbp,r13
    9c88:	jae    9b78 <x86_pv_process_record+0x678>
    9c8e:	jmp    9ba4 <x86_pv_process_record+0x6a4>
    9c93:	test   bpl,0xf
    9c97:	jne    a31e <x86_pv_process_record+0xe1e>
    9c9d:	mov    rdi,rbp
    9ca0:	mov    QWORD PTR [rsp+0x10],rsi
    9ca5:	call   5ff0 <malloc@plt>
    9caa:	test   rax,rax
    9cad:	mov    rbx,rax
    9cb0:	mov    rsi,QWORD PTR [rsp+0x10]
    9cb5:	je     9f5b <x86_pv_process_record+0xa5b>
    9cbb:	add    rsi,0x8
    9cbf:	mov    rdx,rbp
    9cc2:	mov    rdi,rbx
    9cc5:	call   5eb0 <memcpy@plt>
    9cca:	mov    rdi,QWORD PTR [r14+0x10]
    9cce:	call   5900 <free@plt>
    9cd3:	mov    QWORD PTR [r14+0x10],rbx
    9cd7:	mov    QWORD PTR [r14+0x30],rbp
    9cdb:	xor    eax,eax
    9cdd:	jmp    9550 <x86_pv_process_record+0x50>
    9ce2:	nop    WORD PTR [rax+rax*1+0x0]
    9ce8:	mov    rdi,rdx
    9ceb:	mov    QWORD PTR [r8+0x9f8],0x0
    9cf6:	and    rdi,0xfffffffffffffff8
    9cfa:	sub    rax,rdi
    9cfd:	lea    ecx,[rax+0x200]
    9d03:	xor    eax,eax
    9d05:	shr    ecx,0x3
    9d08:	rep stos QWORD PTR es:[rdi],rax
    9d0b:	jmp    99b3 <x86_pv_process_record+0x4b3>
    9d10:	mov    QWORD PTR [r8+0xc18],0x0
    9d1b:	jmp    9970 <x86_pv_process_record+0x470>
    9d20:	movdqu xmm0,XMMWORD PTR [rbx+0xc10]
    9d28:	movups XMMWORD PTR [r8+0xc10],xmm0
    9d30:	movdqu xmm0,XMMWORD PTR [rbx+0xc20]
    9d38:	movups XMMWORD PTR [r8+0xc20],xmm0
    9d40:	movdqu xmm0,XMMWORD PTR [rbx+0xc30]
    9d48:	movups XMMWORD PTR [r8+0xc30],xmm0
    9d50:	jmp    9957 <x86_pv_process_record+0x457>
    9d55:	nop    DWORD PTR [rax]
    9d58:	lea    rdi,[r8+0xa08]
    9d5f:	mov    edx,r8d
    9d62:	mov    rax,0xffffffffffffffff
    9d69:	mov    QWORD PTR [r8+0xa00],rax
    9d70:	mov    QWORD PTR [r8+0xbf8],rax
    9d77:	and    rdi,0xfffffffffffffff8
    9d7b:	sub    edx,edi
    9d7d:	lea    ecx,[rdx+0xc00]
    9d83:	shr    ecx,0x3
    9d86:	rep stos QWORD PTR es:[rdi],rax
    9d89:	jmp    9a3c <x86_pv_process_record+0x53c>
    9d8e:	call   5940 <__errno_location@plt>
    9d93:	mov    edi,ebx
    9d95:	mov    rbp,rax
    9d98:	mov    r14d,DWORD PTR [rax]
    9d9b:	call   5ea0 <rec_type_to_str@plt>
    9da0:	sub    rsp,0x8
    9da4:	mov    rsi,QWORD PTR [r12+0x8]
    9da9:	lea    r8,[rip+0x18358]        # 22108 <__PRETTY_FUNCTION__.12816+0x9c8>
    9db0:	push   r13
    9db2:	mov    r9,rax
    9db5:	mov    edx,0x1
    9dba:	xor    eax,eax
    9dbc:	xor    ecx,ecx
    9dbe:	mov    rdi,r12
    9dc1:	call   6540 <xc_report@plt>
    9dc6:	mov    DWORD PTR [rbp+0x0],r14d
    9dca:	pop    rax
    9dcb:	xor    eax,eax
    9dcd:	pop    rdx
    9dce:	jmp    9550 <x86_pv_process_record+0x50>
    9dd3:	lea    rax,[rip+0x17aaa]        # 21884 <__PRETTY_FUNCTION__.12816+0x144>
    9dda:	mov    QWORD PTR [rsp+0x8],rax
    9ddf:	jmp    97e8 <x86_pv_process_record+0x2e8>
    9de4:	lea    rax,[rip+0x17aae]        # 21899 <__PRETTY_FUNCTION__.12816+0x159>
    9deb:	mov    QWORD PTR [rsp+0x8],rax
    9df0:	jmp    97e8 <x86_pv_process_record+0x2e8>
    9df5:	call   5940 <__errno_location@plt>
    9dfa:	mov    r12d,DWORD PTR [rax]
    9dfd:	mov    rbx,rax
    9e00:	mov    rdi,rbp
    9e03:	mov    esi,r12d
    9e06:	call   6570 <xc_strerror@plt>
    9e0b:	mov    rcx,QWORD PTR [r15+0x40]
    9e0f:	mov    r8d,DWORD PTR [rbx]
    9e12:	lea    rdx,[rip+0x1844f]        # 22268 <__PRETTY_FUNCTION__.12816+0xb28>
    9e19:	mov    r9,rax
    9e1c:	mov    esi,0x1
    9e21:	xor    eax,eax
    9e23:	mov    rdi,rbp
    9e26:	call   5d50 <xc_report_error@plt>
    9e2b:	mov    DWORD PTR [rbx],r12d
    9e2e:	mov    eax,0xffffffff
    9e33:	jmp    9550 <x86_pv_process_record+0x50>
    9e38:	xor    eax,eax
    9e3a:	jmp    9bbe <x86_pv_process_record+0x6be>
    9e3f:	cmp    rbp,0x80
    9e46:	ja     a358 <x86_pv_process_record+0xe58>
    9e4c:	mov    rdi,rbp
    9e4f:	mov    QWORD PTR [rsp+0x10],rsi
    9e54:	call   5ff0 <malloc@plt>
    9e59:	test   rax,rax
    9e5c:	mov    rbx,rax
    9e5f:	mov    rsi,QWORD PTR [rsp+0x10]
    9e64:	je     9f5b <x86_pv_process_record+0xa5b>
    9e6a:	add    rsi,0x8
    9e6e:	mov    rdx,rbp
    9e71:	mov    rdi,rbx
    9e74:	call   5eb0 <memcpy@plt>
    9e79:	mov    rdi,QWORD PTR [r14+0x8]
    9e7d:	call   5900 <free@plt>
    9e82:	mov    QWORD PTR [r14+0x8],rbx
    9e86:	mov    QWORD PTR [r14+0x28],rbp
    9e8a:	xor    eax,eax
    9e8c:	jmp    9550 <x86_pv_process_record+0x50>
    9e91:	cmp    DWORD PTR [r15+0x160],0x8
    9e99:	mov    ebx,0xaf0
    9e9e:	mov    eax,0x1430
    9ea3:	cmove  rbx,rax
    9ea7:	cmp    rbp,rbx
    9eaa:	jne    a29e <x86_pv_process_record+0xd9e>
    9eb0:	mov    rdi,rbp
    9eb3:	mov    QWORD PTR [rsp+0x10],rsi
    9eb8:	call   5ff0 <malloc@plt>
    9ebd:	test   rax,rax
    9ec0:	mov    rbx,rax
    9ec3:	mov    rsi,QWORD PTR [rsp+0x10]
    9ec8:	je     9f5b <x86_pv_process_record+0xa5b>
    9ece:	mov    eax,ebp
    9ed0:	lea    ecx,[rbp-0x1]
    9ed3:	add    rsi,0x8
    9ed7:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
    9edc:	mov    rdi,rbx
    9edf:	shr    ecx,0x3
    9ee2:	mov    QWORD PTR [rbx+rax*1-0x8],rdx
    9ee7:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    9eea:	mov    rdi,QWORD PTR [r14]
    9eed:	call   5900 <free@plt>
    9ef2:	mov    QWORD PTR [r14],rbx
    9ef5:	mov    QWORD PTR [r14+0x20],rbp
    9ef9:	xor    eax,eax
    9efb:	jmp    9550 <x86_pv_process_record+0x50>
    9f00:	mov    rsi,QWORD PTR [rsp+0x58]
    9f05:	mov    rdi,r12
    9f08:	mov    DWORD PTR [rsp+0x8],eax
    9f0c:	test   rsi,rsi
    9f0f:	cmove  rsi,rbx
    9f13:	call   6210 <xc__hypercall_bounce_post@plt>
    9f18:	mov    eax,DWORD PTR [rsp+0x8]
    9f1c:	test   eax,eax
    9f1e:	jne    96ad <x86_pv_process_record+0x1ad>
    9f24:	mov    rdi,r15
    9f27:	call   5cd0 <x86_pv_domain_info@plt>
    9f2c:	test   eax,eax
    9f2e:	je     9a7d <x86_pv_process_record+0x57d>
    9f34:	call   5940 <__errno_location@plt>
    9f39:	mov    ebp,DWORD PTR [rax]
    9f3b:	lea    rdx,[rip+0x17f16]        # 21e58 <__PRETTY_FUNCTION__.12816+0x718>
    9f42:	mov    rbx,rax
    9f45:	mov    esi,0x1
    9f4a:	mov    rdi,r12
    9f4d:	xor    eax,eax
    9f4f:	call   5d50 <xc_report_error@plt>
    9f54:	mov    DWORD PTR [rbx],ebp
    9f56:	jmp    96e3 <x86_pv_process_record+0x1e3>
    9f5b:	call   5940 <__errno_location@plt>
    9f60:	mov    r9,QWORD PTR [rsp+0x8]
    9f65:	mov    r14d,DWORD PTR [rax]
    9f68:	lea    rdx,[rip+0x18289]        # 221f8 <__PRETTY_FUNCTION__.12816+0xab8>
    9f6f:	mov    rbx,rax
    9f72:	mov    r8d,r13d
    9f75:	xor    eax,eax
    9f77:	mov    rcx,rbp
    9f7a:	mov    esi,0x1
    9f7f:	mov    rdi,r12
    9f82:	call   5d50 <xc_report_error@plt>
    9f87:	mov    DWORD PTR [rbx],r14d
    9f8a:	mov    eax,0xffffffff
    9f8f:	jmp    9550 <x86_pv_process_record+0x50>
    9f94:	call   5940 <__errno_location@plt>
    9f99:	mov    r13d,DWORD PTR [rax]
    9f9c:	lea    rdx,[rip+0x18285]        # 22228 <__PRETTY_FUNCTION__.12816+0xae8>
    9fa3:	mov    rbx,rax
    9fa6:	mov    ecx,r12d
    9fa9:	xor    eax,eax
    9fab:	mov    esi,0x1
    9fb0:	mov    rdi,rbp
    9fb3:	call   5d50 <xc_report_error@plt>
    9fb8:	mov    DWORD PTR [rbx],r13d
    9fbb:	mov    eax,0xffffffff
    9fc0:	jmp    9550 <x86_pv_process_record+0x50>
    9fc5:	mov    rsi,QWORD PTR [r12+0x8]
    9fca:	lea    r8,[rip+0x17def]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
    9fd1:	xor    ecx,ecx
    9fd3:	xor    eax,eax
    9fd5:	mov    edx,0x3
    9fda:	mov    rdi,r12
    9fdd:	call   6540 <xc_report@plt>
    9fe2:	mov    rsi,QWORD PTR [rsp+0x58]
    9fe7:	mov    DWORD PTR [r13+0x0],0xd
    9fef:	test   rsi,rsi
    9ff2:	jne    96a5 <x86_pv_process_record+0x1a5>
    9ff8:	mov    rsi,rbx
    9ffb:	jmp    96a5 <x86_pv_process_record+0x1a5>
    a000:	mov    DWORD PTR [rsp+0x10],r8d
    a005:	mov    DWORD PTR [rsp+0x8],edi
    a009:	call   5940 <__errno_location@plt>
    a00e:	mov    r14d,DWORD PTR [rax]
    a011:	push   0x8
    a013:	lea    rdx,[rip+0x17f6e]        # 21f88 <__PRETTY_FUNCTION__.12816+0x848>
    a01a:	mov    r8d,DWORD PTR [rsp+0x18]
    a01f:	mov    rbx,rax
    a022:	mov    r9d,r13d
    a025:	xor    eax,eax
    a027:	mov    esi,0x1
    a02c:	push   r8
    a02e:	push   r12
    a030:	mov    r8d,ebp
    a033:	push   0x8
    a035:	mov    edi,DWORD PTR [rsp+0x28]
    a039:	mov    ecx,edi
    a03b:	mov    rdi,QWORD PTR [rsp+0x38]
    a040:	call   5d50 <xc_report_error@plt>
    a045:	mov    DWORD PTR [rbx],r14d
    a048:	add    rsp,0x20
    a04c:	mov    eax,0xffffffff
    a051:	jmp    9550 <x86_pv_process_record+0x50>
    a056:	mov    DWORD PTR [rsp+0x8],edi
    a05a:	call   5940 <__errno_location@plt>
    a05f:	mov    edi,DWORD PTR [rsp+0x8]
    a063:	mov    r12d,DWORD PTR [rax]
    a066:	lea    rdx,[rip+0x17eeb]        # 21f58 <__PRETTY_FUNCTION__.12816+0x818>
    a06d:	mov    rbx,rax
    a070:	mov    ecx,ebp
    a072:	xor    eax,eax
    a074:	mov    esi,0x1
    a079:	mov    r8d,edi
    a07c:	mov    rdi,QWORD PTR [rsp+0x18]
    a081:	call   5d50 <xc_report_error@plt>
    a086:	mov    DWORD PTR [rbx],r12d
    a089:	mov    eax,0xffffffff
    a08e:	jmp    9550 <x86_pv_process_record+0x50>
    a093:	call   5940 <__errno_location@plt>
    a098:	mov    rdi,QWORD PTR [rsp+0x18]
    a09d:	mov    ebp,DWORD PTR [rax]
    a09f:	lea    rdx,[rip+0x17e7a]        # 21f20 <__PRETTY_FUNCTION__.12816+0x7e0>
    a0a6:	mov    rbx,rax
    a0a9:	mov    r8d,0x10
    a0af:	xor    eax,eax
    a0b1:	mov    ecx,r13d
    a0b4:	mov    esi,0x1
    a0b9:	call   5d50 <xc_report_error@plt>
    a0be:	mov    DWORD PTR [rbx],ebp
    a0c0:	mov    eax,0xffffffff
    a0c5:	jmp    9550 <x86_pv_process_record+0x50>
    a0ca:	call   5940 <__errno_location@plt>
    a0cf:	mov    r14d,DWORD PTR [rax]
    a0d2:	lea    rdx,[rip+0x17dd7]        # 21eb0 <__PRETTY_FUNCTION__.12816+0x770>
    a0d9:	mov    r13,rax
    a0dc:	mov    r8d,ebp
    a0df:	xor    eax,eax
    a0e1:	mov    ecx,ebx
    a0e3:	mov    esi,0x1
    a0e8:	mov    rdi,r12
    a0eb:	call   5d50 <xc_report_error@plt>
    a0f0:	mov    DWORD PTR [r13+0x0],r14d
    a0f4:	mov    eax,0xffffffff
    a0f9:	jmp    9550 <x86_pv_process_record+0x50>
    a0fe:	call   5940 <__errno_location@plt>
    a103:	mov    r12d,DWORD PTR [rax]
    a106:	lea    rdx,[rip+0x17deb]        # 21ef8 <__PRETTY_FUNCTION__.12816+0x7b8>
    a10d:	mov    rbx,rax
    a110:	mov    esi,0x1
    a115:	xor    eax,eax
    a117:	mov    rdi,rbp
    a11a:	call   5d50 <xc_report_error@plt>
    a11f:	mov    DWORD PTR [rbx],r12d
    a122:	mov    eax,0xffffffff
    a127:	jmp    9550 <x86_pv_process_record+0x50>
    a12c:	call   5940 <__errno_location@plt>
    a131:	mov    rdi,QWORD PTR [rsp+0x18]
    a136:	mov    ebp,DWORD PTR [rax]
    a138:	lea    rdx,[rip+0x17db9]        # 21ef8 <__PRETTY_FUNCTION__.12816+0x7b8>
    a13f:	mov    rbx,rax
    a142:	mov    esi,0x1
    a147:	xor    eax,eax
    a149:	call   5d50 <xc_report_error@plt>
    a14e:	mov    DWORD PTR [rbx],ebp
    a150:	mov    eax,0xffffffff
    a155:	jmp    9550 <x86_pv_process_record+0x50>
    a15a:	call   5940 <__errno_location@plt>
    a15f:	mov    r13d,DWORD PTR [rax]
    a162:	lea    rdx,[rip+0x17bef]        # 21d58 <__PRETTY_FUNCTION__.12816+0x618>
    a169:	mov    rbp,rax
    a16c:	movzx  ecx,bl
    a16f:	mov    esi,0x1
    a174:	mov    rdi,r12
    a177:	xor    eax,eax
    a179:	call   5d50 <xc_report_error@plt>
    a17e:	mov    DWORD PTR [rbp+0x0],r13d
    a182:	jmp    96e3 <x86_pv_process_record+0x1e3>
    a187:	call   5940 <__errno_location@plt>
    a18c:	mov    r13d,DWORD PTR [rax]
    a18f:	lea    rdx,[rip+0x17b8a]        # 21d20 <__PRETTY_FUNCTION__.12816+0x5e0>
    a196:	mov    rbp,rax
    a199:	mov    r8d,0x8
    a19f:	xor    eax,eax
    a1a1:	mov    ecx,ebx
    a1a3:	mov    esi,0x1
    a1a8:	mov    rdi,r12
    a1ab:	call   5d50 <xc_report_error@plt>
    a1b0:	mov    DWORD PTR [rbp+0x0],r13d
    a1b4:	mov    eax,0xffffffff
    a1b9:	jmp    9550 <x86_pv_process_record+0x50>
    a1be:	call   5940 <__errno_location@plt>
    a1c3:	lea    rdx,[rip+0x17b2e]        # 21cf8 <__PRETTY_FUNCTION__.12816+0x5b8>
    a1ca:	mov    rbx,rax
    a1cd:	mov    ebp,DWORD PTR [rax]
    a1cf:	jmp    9f45 <x86_pv_process_record+0xa45>
    a1d4:	mov    DWORD PTR [rsp+0x10],r8d
    a1d9:	call   5940 <__errno_location@plt>
    a1de:	mov    r8d,DWORD PTR [rsp+0x10]
    a1e3:	mov    ebp,DWORD PTR [rax]
    a1e5:	lea    rdx,[rip+0x17eec]        # 220d8 <__PRETTY_FUNCTION__.12816+0x998>
    a1ec:	mov    rcx,QWORD PTR [rsp+0x8]
    a1f1:	mov    rbx,rax
    a1f4:	mov    r9d,0x8
    a1fa:	xor    eax,eax
    a1fc:	mov    esi,0x1
    a201:	mov    rdi,r12
    a204:	call   5d50 <xc_report_error@plt>
    a209:	mov    DWORD PTR [rbx],ebp
    a20b:	mov    eax,0xffffffff
    a210:	jmp    9550 <x86_pv_process_record+0x50>
    a215:	call   5940 <__errno_location@plt>
    a21a:	movzx  ecx,bl
    a21d:	mov    rbp,rax
    a220:	mov    r13d,DWORD PTR [rax]
    a223:	lea    rdx,[rip+0x17c56]        # 21e80 <__PRETTY_FUNCTION__.12816+0x740>
    a22a:	jmp    a16f <x86_pv_process_record+0xc6f>
    a22f:	call   5940 <__errno_location@plt>
    a234:	mov    rcx,QWORD PTR [rsp+0x8]
    a239:	mov    ebp,DWORD PTR [rax]
    a23b:	lea    r9d,[r14-0x1]
    a23f:	lea    rdx,[rip+0x17eea]        # 22130 <__PRETTY_FUNCTION__.12816+0x9f0>
    a246:	mov    rbx,rax
    a249:	mov    r8d,r13d
    a24c:	xor    eax,eax
    a24e:	mov    esi,0x1
    a253:	mov    rdi,r12
    a256:	call   5d50 <xc_report_error@plt>
    a25b:	mov    DWORD PTR [rbx],ebp
    a25d:	or     eax,0xffffffff
    a260:	jmp    9550 <x86_pv_process_record+0x50>
    a265:	call   5940 <__errno_location@plt>
    a26a:	mov    r13d,DWORD PTR [rax]
    a26d:	mov    rbx,rax
    a270:	mov    rdi,r12
    a273:	mov    esi,r13d
    a276:	call   6570 <xc_strerror@plt>
    a27b:	mov    ecx,DWORD PTR [rbx]
    a27d:	lea    rdx,[rip+0x17b04]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
    a284:	mov    r8,rax
    a287:	mov    esi,0x1
    a28c:	mov    rdi,r12
    a28f:	xor    eax,eax
    a291:	call   5d50 <xc_report_error@plt>
    a296:	mov    DWORD PTR [rbx],r13d
    a299:	jmp    96ad <x86_pv_process_record+0x1ad>
    a29e:	mov    DWORD PTR [rsp+0x10],r8d
    a2a3:	call   5940 <__errno_location@plt>
    a2a8:	mov    r8d,DWORD PTR [rsp+0x10]
    a2ad:	mov    r14d,DWORD PTR [rax]
    a2b0:	lea    rdx,[rip+0x17ea9]        # 22160 <__PRETTY_FUNCTION__.12816+0xa20>
    a2b7:	mov    rcx,QWORD PTR [rsp+0x8]
    a2bc:	mov    rbp,rax
    a2bf:	mov    esi,0x1
    a2c4:	xor    eax,eax
    a2c6:	mov    rdi,r12
    a2c9:	mov    r9d,r8d
    a2cc:	lea    r8,[rbx+0x8]
    a2d0:	call   5d50 <xc_report_error@plt>
    a2d5:	mov    DWORD PTR [rbp+0x0],r14d
    a2d9:	or     eax,0xffffffff
    a2dc:	jmp    9550 <x86_pv_process_record+0x50>
    a2e1:	mov    r14,QWORD PTR [rsp+0x28]
    a2e6:	lea    rdx,[rip+0x17d63]        # 22050 <__PRETTY_FUNCTION__.12816+0x910>
    a2ed:	mov    rcx,r13
    a2f0:	mov    ebx,DWORD PTR [r14]
    a2f3:	mov    rdi,QWORD PTR [rsp+0x18]
    a2f8:	mov    esi,0x1
    a2fd:	call   5d50 <xc_report_error@plt>
    a302:	mov    DWORD PTR [r14],ebx
    a305:	jmp    96e3 <x86_pv_process_record+0x1e3>
    a30a:	mov    r14,QWORD PTR [rsp+0x28]
    a30f:	mov    rcx,r13
    a312:	lea    rdx,[rip+0x17d07]        # 22020 <__PRETTY_FUNCTION__.12816+0x8e0>
    a319:	mov    ebx,DWORD PTR [r14]
    a31c:	jmp    a2f3 <x86_pv_process_record+0xdf3>
    a31e:	call   5940 <__errno_location@plt>
    a323:	mov    rcx,QWORD PTR [rsp+0x8]
    a328:	mov    r14d,DWORD PTR [rax]
    a32b:	lea    rdx,[rip+0x17e86]        # 221b8 <__PRETTY_FUNCTION__.12816+0xa78>
    a332:	mov    rbx,rax
    a335:	mov    r9d,0x10
    a33b:	xor    eax,eax
    a33d:	mov    r8,rbp
    a340:	mov    esi,0x1
    a345:	mov    rdi,r12
    a348:	call   5d50 <xc_report_error@plt>
    a34d:	mov    DWORD PTR [rbx],r14d
    a350:	or     eax,0xffffffff
    a353:	jmp    9550 <x86_pv_process_record+0x50>
    a358:	mov    DWORD PTR [rsp+0x10],r8d
    a35d:	call   5940 <__errno_location@plt>
    a362:	mov    r8d,DWORD PTR [rsp+0x10]
    a367:	mov    ebp,DWORD PTR [rax]
    a369:	lea    rdx,[rip+0x17e20]        # 22190 <__PRETTY_FUNCTION__.12816+0xa50>
    a370:	mov    rcx,QWORD PTR [rsp+0x8]
    a375:	mov    rbx,rax
    a378:	mov    esi,0x1
    a37d:	xor    eax,eax
    a37f:	mov    rdi,r12
    a382:	mov    r9d,r8d
    a385:	mov    r8d,0x88
    a38b:	call   5d50 <xc_report_error@plt>
    a390:	mov    DWORD PTR [rbx],ebp
    a392:	or     eax,0xffffffff
    a395:	jmp    9550 <x86_pv_process_record+0x50>
    a39a:	call   5b80 <__stack_chk_fail@plt>
    a39f:	mov    ebx,DWORD PTR [rax]
    a3a1:	mov    rdi,QWORD PTR [rsp+0x18]
    a3a6:	lea    rdx,[rip+0x17c4b]        # 21ff8 <__PRETTY_FUNCTION__.12816+0x8b8>
    a3ad:	mov    r14,rax
    a3b0:	mov    rcx,r13
    a3b3:	xor    eax,eax
    a3b5:	mov    esi,0x1
    a3ba:	call   5d50 <xc_report_error@plt>
    a3bf:	mov    DWORD PTR [r14],ebx
    a3c2:	or     eax,0xffffffff
    a3c5:	jmp    9550 <x86_pv_process_record+0x50>
    a3ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a3d0 <x86_hvm_pfn_is_valid>:
    a3d0:	mov    eax,0x1
    a3d5:	ret    
    a3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a3e0 <x86_hvm_pfn_to_gfn>:
    a3e0:	mov    rax,rsi
    a3e3:	ret    
    a3e4:	xchg   ax,ax
    a3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a3f0 <x86_hvm_set_gfn>:
    a3f0:	repz ret 
    a3f2:	nop    DWORD PTR [rax+0x0]
    a3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a400 <x86_hvm_localise_page>:
    a400:	xor    eax,eax
    a402:	ret    
    a403:	nop    DWORD PTR [rax]
    a406:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a410 <x86_hvm_cleanup>:
    a410:	sub    rsp,0x8
    a414:	mov    rdi,QWORD PTR [rdi+0x160]
    a41b:	call   5900 <free@plt>
    a420:	xor    eax,eax
    a422:	add    rsp,0x8
    a426:	ret    
    a427:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a430 <x86_hvm_stream_complete>:
    a430:	push   r13
    a432:	push   r12
    a434:	mov    edx,0x2
    a439:	push   rbp
    a43a:	push   rbx
    a43b:	mov    rbx,rdi
    a43e:	sub    rsp,0x8
    a442:	mov    r12,QWORD PTR [rdi]
    a445:	mov    ecx,DWORD PTR [rdi+0x138]
    a44b:	mov    esi,DWORD PTR [rdi+0x8]
    a44e:	mov    rdi,r12
    a451:	call   6050 <xc_hvm_param_set@plt>
    a456:	test   eax,eax
    a458:	jne    a548 <x86_hvm_stream_complete+0x118>
    a45e:	mov    ecx,DWORD PTR [rbx+0x13c]
    a464:	mov    esi,DWORD PTR [rbx+0x8]
    a467:	mov    edx,0x12
    a46c:	mov    rdi,r12
    a46f:	call   6050 <xc_hvm_param_set@plt>
    a474:	test   eax,eax
    a476:	mov    ebp,eax
    a478:	jne    a500 <x86_hvm_stream_complete+0xd0>
    a47e:	mov    rdx,QWORD PTR [rbx+0x160]
    a485:	mov    esi,DWORD PTR [rbx+0x8]
    a488:	mov    rdi,r12
    a48b:	mov    ecx,DWORD PTR [rbx+0x168]
    a491:	call   61d0 <xc_domain_hvm_setcontext@plt>
    a496:	test   eax,eax
    a498:	mov    ebp,eax
    a49a:	js     a570 <x86_hvm_stream_complete+0x140>
    a4a0:	mov    eax,DWORD PTR [rbx+0x140]
    a4a6:	sub    rsp,0x8
    a4aa:	mov    rcx,QWORD PTR [rbx+0x130]
    a4b1:	mov    esi,DWORD PTR [rbx+0x8]
    a4b4:	mov    edx,0x1
    a4b9:	mov    rdi,r12
    a4bc:	push   rax
    a4bd:	mov    r9d,DWORD PTR [rbx+0x144]
    a4c4:	mov    r8,QWORD PTR [rbx+0x128]
    a4cb:	call   61e0 <xc_dom_gnttab_seed@plt>
    a4d0:	mov    ebp,eax
    a4d2:	test   ebp,ebp
    a4d4:	pop    rax
    a4d5:	pop    rdx
    a4d6:	je     a534 <x86_hvm_stream_complete+0x104>
    a4d8:	call   5940 <__errno_location@plt>
    a4dd:	mov    r13d,DWORD PTR [rax]
    a4e0:	mov    rbx,rax
    a4e3:	mov    rdi,r12
    a4e6:	mov    esi,r13d
    a4e9:	call   6570 <xc_strerror@plt>
    a4ee:	mov    ecx,DWORD PTR [rbx]
    a4f0:	mov    r8,rax
    a4f3:	lea    rdx,[rip+0x17776]        # 21c70 <__PRETTY_FUNCTION__.12816+0x530>
    a4fa:	jmp    a522 <x86_hvm_stream_complete+0xf2>
    a4fc:	nop    DWORD PTR [rax+0x0]
    a500:	call   5940 <__errno_location@plt>
    a505:	mov    r13d,DWORD PTR [rax]
    a508:	mov    rbx,rax
    a50b:	mov    rdi,r12
    a50e:	mov    esi,r13d
    a511:	call   6570 <xc_strerror@plt>
    a516:	mov    ecx,DWORD PTR [rbx]
    a518:	lea    rdx,[rip+0x17e29]        # 22348 <__PRETTY_FUNCTION__.13083+0x48>
    a51f:	mov    r8,rax
    a522:	mov    esi,0x1
    a527:	mov    rdi,r12
    a52a:	xor    eax,eax
    a52c:	call   5d50 <xc_report_error@plt>
    a531:	mov    DWORD PTR [rbx],r13d
    a534:	add    rsp,0x8
    a538:	mov    eax,ebp
    a53a:	pop    rbx
    a53b:	pop    rbp
    a53c:	pop    r12
    a53e:	pop    r13
    a540:	ret    
    a541:	nop    DWORD PTR [rax+0x0]
    a548:	mov    ebp,eax
    a54a:	call   5940 <__errno_location@plt>
    a54f:	mov    r13d,DWORD PTR [rax]
    a552:	mov    rbx,rax
    a555:	mov    rdi,r12
    a558:	mov    esi,r13d
    a55b:	call   6570 <xc_strerror@plt>
    a560:	mov    ecx,DWORD PTR [rbx]
    a562:	mov    r8,rax
    a565:	lea    rdx,[rip+0x17dac]        # 22318 <__PRETTY_FUNCTION__.13083+0x18>
    a56c:	jmp    a522 <x86_hvm_stream_complete+0xf2>
    a56e:	xchg   ax,ax
    a570:	call   5940 <__errno_location@plt>
    a575:	mov    r13d,DWORD PTR [rax]
    a578:	mov    rbx,rax
    a57b:	mov    rdi,r12
    a57e:	mov    esi,r13d
    a581:	call   6570 <xc_strerror@plt>
    a586:	mov    ecx,DWORD PTR [rbx]
    a588:	mov    r8,rax
    a58b:	lea    rdx,[rip+0x17dee]        # 22380 <__PRETTY_FUNCTION__.13083+0x80>
    a592:	jmp    a522 <x86_hvm_stream_complete+0xf2>
    a594:	xchg   ax,ax
    a596:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a5a0 <x86_hvm_setup>:
    a5a0:	push   r13
    a5a2:	push   r12
    a5a4:	push   rbp
    a5a5:	push   rbx
    a5a6:	sub    rsp,0x8
    a5aa:	mov    ebx,DWORD PTR [rdi+0x104]
    a5b0:	mov    rbp,QWORD PTR [rdi]
    a5b3:	cmp    ebx,0x2
    a5b6:	jne    a5d8 <x86_hvm_setup+0x38>
    a5b8:	mov    ebx,DWORD PTR [rdi+0x108]
    a5be:	cmp    ebx,0x1000
    a5c4:	jne    a610 <x86_hvm_setup+0x70>
    a5c6:	xor    eax,eax
    a5c8:	add    rsp,0x8
    a5cc:	pop    rbx
    a5cd:	pop    rbp
    a5ce:	pop    r12
    a5d0:	pop    r13
    a5d2:	ret    
    a5d3:	nop    DWORD PTR [rax+rax*1+0x0]
    a5d8:	call   5940 <__errno_location@plt>
    a5dd:	mov    edi,ebx
    a5df:	mov    r13d,DWORD PTR [rax]
    a5e2:	mov    r12,rax
    a5e5:	call   5d30 <dhdr_type_to_str@plt>
    a5ea:	lea    rdx,[rip+0x17db7]        # 223a8 <__PRETTY_FUNCTION__.13083+0xa8>
    a5f1:	mov    rcx,rax
    a5f4:	mov    esi,0x1
    a5f9:	xor    eax,eax
    a5fb:	mov    rdi,rbp
    a5fe:	call   5d50 <xc_report_error@plt>
    a603:	mov    DWORD PTR [r12],r13d
    a607:	mov    eax,0xffffffff
    a60c:	jmp    a5c8 <x86_hvm_setup+0x28>
    a60e:	xchg   ax,ax
    a610:	call   5940 <__errno_location@plt>
    a615:	mov    r13d,DWORD PTR [rax]
    a618:	lea    rdx,[rip+0x17dc1]        # 223e0 <__PRETTY_FUNCTION__.13083+0xe0>
    a61f:	mov    r12,rax
    a622:	mov    ecx,ebx
    a624:	xor    eax,eax
    a626:	mov    esi,0x1
    a62b:	mov    rdi,rbp
    a62e:	call   5d50 <xc_report_error@plt>
    a633:	mov    DWORD PTR [r12],r13d
    a637:	mov    eax,0xffffffff
    a63c:	jmp    a5c8 <x86_hvm_setup+0x28>
    a63e:	xchg   ax,ax

000000000000a640 <x86_hvm_process_record>:
    a640:	push   r15
    a642:	push   r14
    a644:	push   r13
    a646:	push   r12
    a648:	push   rbp
    a649:	push   rbx
    a64a:	mov    rbp,rdi
    a64d:	mov    rbx,rsi
    a650:	sub    rsp,0x8
    a654:	mov    eax,DWORD PTR [rsi]
    a656:	cmp    eax,0x9
    a659:	je     a7a0 <x86_hvm_process_record+0x160>
    a65f:	cmp    eax,0xa
    a662:	je     a6a0 <x86_hvm_process_record+0x60>
    a664:	cmp    eax,0x8
    a667:	mov    r15d,0x1
    a66d:	je     a688 <x86_hvm_process_record+0x48>
    a66f:	add    rsp,0x8
    a673:	mov    eax,r15d
    a676:	pop    rbx
    a677:	pop    rbp
    a678:	pop    r12
    a67a:	pop    r13
    a67c:	pop    r14
    a67e:	pop    r15
    a680:	ret    
    a681:	nop    DWORD PTR [rax+0x0]
    a688:	add    rsp,0x8
    a68c:	pop    rbx
    a68d:	pop    rbp
    a68e:	pop    r12
    a690:	pop    r13
    a692:	pop    r14
    a694:	pop    r15
    a696:	jmp    5fa0 <handle_tsc_info@plt>
    a69b:	nop    DWORD PTR [rax+rax*1+0x0]
    a6a0:	mov    r12d,DWORD PTR [rsi+0x4]
    a6a4:	mov    r14,QWORD PTR [rsi+0x8]
    a6a8:	mov    r13,QWORD PTR [rdi]
    a6ab:	cmp    r12d,0x7
    a6af:	jbe    a88b <x86_hvm_process_record+0x24b>
    a6b5:	mov    ebx,DWORD PTR [r14]
    a6b8:	mov    eax,r12d
    a6bb:	mov    r15,rbx
    a6be:	shl    rbx,0x4
    a6c2:	lea    rdx,[rbx+0x8]
    a6c6:	cmp    rax,rdx
    a6c9:	jne    a848 <x86_hvm_process_record+0x208>
    a6cf:	xor    r12d,r12d
    a6d2:	test   r15d,r15d
    a6d5:	lea    rbx,[r14+0x8]
    a6d9:	jne    a765 <x86_hvm_process_record+0x125>
    a6df:	call   5940 <__errno_location@plt>
    a6e4:	mov    rsi,QWORD PTR [r13+0x8]
    a6e8:	mov    ebp,DWORD PTR [rax]
    a6ea:	lea    r8,[rip+0x17dd7]        # 224c8 <__PRETTY_FUNCTION__.13083+0x1c8>
    a6f1:	mov    rbx,rax
    a6f4:	xor    ecx,ecx
    a6f6:	mov    edx,0x1
    a6fb:	mov    rdi,r13
    a6fe:	xor    eax,eax
    a700:	call   6540 <xc_report@plt>
    a705:	mov    DWORD PTR [rbx],ebp
    a707:	jmp    a66f <x86_hvm_process_record+0x2f>
    a70c:	nop    DWORD PTR [rax+0x0]
    a710:	cmp    rdx,0x5
    a714:	jae    a790 <x86_hvm_process_record+0x150>
    a716:	cmp    rdx,0x1
    a71a:	jne    a73e <x86_hvm_process_record+0xfe>
    a71c:	mov    QWORD PTR [rbp+0x128],rax
    a723:	mov    rdx,QWORD PTR [rbx+0x8]
    a727:	mov    ecx,0x1
    a72c:	mov    rdi,r13
    a72f:	call   5910 <xc_clear_domain_pages@plt>
    a734:	mov    rax,QWORD PTR [rbx+0x8]
    a738:	mov    rdx,QWORD PTR [rbx]
    a73b:	mov    esi,DWORD PTR [rbp+0x8]
    a73e:	mov    rcx,rax
    a741:	mov    rdi,r13
    a744:	call   6050 <xc_hvm_param_set@plt>
    a749:	test   eax,eax
    a74b:	mov    r15d,eax
    a74e:	js     a7f0 <x86_hvm_process_record+0x1b0>
    a754:	add    r12d,0x1
    a758:	add    rbx,0x10
    a75c:	cmp    r12d,DWORD PTR [r14]
    a75f:	jae    a840 <x86_hvm_process_record+0x200>
    a765:	mov    rdx,QWORD PTR [rbx]
    a768:	mov    rax,QWORD PTR [rbx+0x8]
    a76c:	mov    esi,DWORD PTR [rbp+0x8]
    a76f:	cmp    rdx,0x6
    a773:	jbe    a710 <x86_hvm_process_record+0xd0>
    a775:	cmp    rdx,0x11
    a779:	jne    a73e <x86_hvm_process_record+0xfe>
    a77b:	mov    QWORD PTR [rbp+0x130],rax
    a782:	mov    ecx,0x1
    a787:	mov    rdx,QWORD PTR [rbx+0x8]
    a78b:	jmp    a72c <x86_hvm_process_record+0xec>
    a78d:	nop    DWORD PTR [rax]
    a790:	mov    ecx,0x1
    a795:	mov    rdx,rax
    a798:	jmp    a72c <x86_hvm_process_record+0xec>
    a79a:	nop    WORD PTR [rax+rax*1+0x0]
    a7a0:	mov    r14,QWORD PTR [rdi]
    a7a3:	mov    edi,DWORD PTR [rsi+0x4]
    a7a6:	mov    r13,rdi
    a7a9:	call   5ff0 <malloc@plt>
    a7ae:	test   rax,rax
    a7b1:	mov    r12,rax
    a7b4:	je     a8c1 <x86_hvm_process_record+0x281>
    a7ba:	mov    rdi,QWORD PTR [rbp+0x160]
    a7c1:	xor    r15d,r15d
    a7c4:	call   5900 <free@plt>
    a7c9:	mov    edx,DWORD PTR [rbx+0x4]
    a7cc:	mov    rsi,QWORD PTR [rbx+0x8]
    a7d0:	mov    rdi,r12
    a7d3:	call   5eb0 <memcpy@plt>
    a7d8:	mov    QWORD PTR [rbp+0x160],r12
    a7df:	mov    eax,DWORD PTR [rbx+0x4]
    a7e2:	mov    QWORD PTR [rbp+0x168],rax
    a7e9:	jmp    a66f <x86_hvm_process_record+0x2f>
    a7ee:	xchg   ax,ax
    a7f0:	call   5940 <__errno_location@plt>
    a7f5:	mov    r12d,DWORD PTR [rax]
    a7f8:	mov    rdi,r13
    a7fb:	mov    rbp,rax
    a7fe:	mov    esi,r12d
    a801:	call   6570 <xc_strerror@plt>
    a806:	sub    rsp,0x8
    a80a:	lea    rdx,[rip+0x17cdf]        # 224f0 <__PRETTY_FUNCTION__.13083+0x1f0>
    a811:	mov    esi,0x1
    a816:	push   rax
    a817:	mov    r9d,DWORD PTR [rbp+0x0]
    a81b:	xor    eax,eax
    a81d:	mov    r8,QWORD PTR [rbx+0x8]
    a821:	mov    rcx,QWORD PTR [rbx]
    a824:	mov    rdi,r13
    a827:	call   5d50 <xc_report_error@plt>
    a82c:	mov    DWORD PTR [rbp+0x0],r12d
    a830:	pop    rax
    a831:	pop    rdx
    a832:	jmp    a66f <x86_hvm_process_record+0x2f>
    a837:	nop    WORD PTR [rax+rax*1+0x0]
    a840:	xor    r15d,r15d
    a843:	jmp    a66f <x86_hvm_process_record+0x2f>
    a848:	call   5940 <__errno_location@plt>
    a84d:	sub    rsp,0x8
    a851:	mov    r14d,DWORD PTR [rax]
    a854:	lea    rdx,[rip+0x17c1d]        # 22478 <__PRETTY_FUNCTION__.13083+0x178>
    a85b:	push   r12
    a85d:	mov    rbp,rax
    a860:	mov    r8d,r15d
    a863:	mov    ecx,0x8
    a868:	mov    esi,0x1
    a86d:	mov    r9,rbx
    a870:	mov    rdi,r13
    a873:	xor    eax,eax
    a875:	mov    r15d,0xffffffff
    a87b:	call   5d50 <xc_report_error@plt>
    a880:	mov    DWORD PTR [rbp+0x0],r14d
    a884:	pop    rcx
    a885:	pop    rsi
    a886:	jmp    a66f <x86_hvm_process_record+0x2f>
    a88b:	call   5940 <__errno_location@plt>
    a890:	mov    ebp,DWORD PTR [rax]
    a892:	lea    rdx,[rip+0x17ba7]        # 22440 <__PRETTY_FUNCTION__.13083+0x140>
    a899:	mov    rbx,rax
    a89c:	mov    r8d,0x8
    a8a2:	mov    ecx,r12d
    a8a5:	mov    esi,0x1
    a8aa:	mov    rdi,r13
    a8ad:	xor    eax,eax
    a8af:	mov    r15d,0xffffffff
    a8b5:	call   5d50 <xc_report_error@plt>
    a8ba:	mov    DWORD PTR [rbx],ebp
    a8bc:	jmp    a66f <x86_hvm_process_record+0x2f>
    a8c1:	call   5940 <__errno_location@plt>
    a8c6:	mov    ebp,DWORD PTR [rax]
    a8c8:	lea    rdx,[rip+0x17b41]        # 22410 <__PRETTY_FUNCTION__.13083+0x110>
    a8cf:	mov    rbx,rax
    a8d2:	mov    ecx,r13d
    a8d5:	mov    esi,0x1
    a8da:	mov    rdi,r14
    a8dd:	xor    eax,eax
    a8df:	mov    r15d,0xffffffff
    a8e5:	call   5d50 <xc_report_error@plt>
    a8ea:	mov    DWORD PTR [rbx],ebp
    a8ec:	jmp    a66f <x86_hvm_process_record+0x2f>
    a8f1:	nop    DWORD PTR [rax+rax*1+0x0]
    a8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a900 <x86_hvm_set_page_type>:
    a900:	repz ret 
    a902:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a90c:	nop    DWORD PTR [rax+0x0]

000000000000a910 <x86_pv_start_of_checkpoint>:
    a910:	xor    eax,eax
    a912:	ret    
    a913:	nop    DWORD PTR [rax]
    a916:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a920 <x86_pv_cleanup>:
    a920:	push   rbx
    a921:	mov    rbx,rdi
    a924:	mov    rdi,QWORD PTR [rdi+0x1a0]
    a92b:	call   5900 <free@plt>
    a930:	mov    rdi,QWORD PTR [rbx+0x198]
    a937:	test   rdi,rdi
    a93a:	je     a94b <x86_pv_cleanup+0x2b>
    a93c:	mov    esi,DWORD PTR [rbx+0x190]
    a942:	shl    rsi,0xc
    a946:	call   61b0 <munmap@plt>
    a94b:	mov    rdi,QWORD PTR [rbx+0x1a8]
    a952:	test   rdi,rdi
    a955:	je     a961 <x86_pv_cleanup+0x41>
    a957:	mov    esi,0x1000
    a95c:	call   61b0 <munmap@plt>
    a961:	mov    rdi,QWORD PTR [rbx+0x170]
    a968:	test   rdi,rdi
    a96b:	je     a97d <x86_pv_cleanup+0x5d>
    a96d:	mov    rsi,QWORD PTR [rbx+0x180]
    a974:	shl    rsi,0xc
    a978:	call   61b0 <munmap@plt>
    a97d:	xor    eax,eax
    a97f:	pop    rbx
    a980:	ret    
    a981:	nop    DWORD PTR [rax+rax*1+0x0]
    a986:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a990 <x86_pv_check_vm_state>:
    a990:	mov    rdx,QWORD PTR [rdi+0x1b0]
    a997:	xor    eax,eax
    a999:	cmp    rdx,0xffffffffffffffff
    a99d:	je     a9d0 <x86_pv_check_vm_state+0x40>
    a99f:	cmp    BYTE PTR [rdi+0xc8],0x0
    a9a6:	je     a9d0 <x86_pv_check_vm_state+0x40>
    a9a8:	cmp    DWORD PTR [rdi+0x160],0x8
    a9af:	mov    rax,QWORD PTR [rdi+0x1a8]
    a9b6:	je     a9d8 <x86_pv_check_vm_state+0x48>
    a9b8:	mov    ecx,DWORD PTR [rax+0x920]
    a9be:	cmp    rdx,rcx
    a9c1:	jne    a9e1 <x86_pv_check_vm_state+0x51>
    a9c3:	xor    eax,eax
    a9c5:	ret    
    a9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a9d0:	repz ret 
    a9d2:	nop    WORD PTR [rax+rax*1+0x0]
    a9d8:	mov    rcx,QWORD PTR [rax+0xc38]
    a9df:	jmp    a9be <x86_pv_check_vm_state+0x2e>
    a9e1:	push   r12
    a9e3:	push   rbp
    a9e4:	push   rbx
    a9e5:	mov    QWORD PTR [rdi+0x1b0],rcx
    a9ec:	mov    r12,QWORD PTR [rdi]
    a9ef:	call   5940 <__errno_location@plt>
    a9f4:	mov    ebp,DWORD PTR [rax]
    a9f6:	lea    rdx,[rip+0x17b1b]        # 22518 <__PRETTY_FUNCTION__.13083+0x218>
    a9fd:	mov    rbx,rax
    aa00:	mov    rdi,r12
    aa03:	xor    eax,eax
    aa05:	mov    esi,0x1
    aa0a:	call   5d50 <xc_report_error@plt>
    aa0f:	mov    DWORD PTR [rbx],ebp
    aa11:	mov    eax,0xffffffff
    aa16:	pop    rbx
    aa17:	pop    rbp
    aa18:	pop    r12
    aa1a:	ret    
    aa1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000aa20 <write_one_vcpu_basic>:
    aa20:	push   r15
    aa22:	push   r14
    aa24:	mov    edx,esi
    aa26:	push   r13
    aa28:	push   r12
    aa2a:	push   rbp
    aa2b:	push   rbx
    aa2c:	mov    rbx,rdi
    aa2f:	sub    rsp,0x1478
    aa36:	mov    rdi,QWORD PTR [rdi]
    aa39:	mov    rax,QWORD PTR fs:0x28
    aa42:	mov    QWORD PTR [rsp+0x1468],rax
    aa4a:	xor    eax,eax
    aa4c:	mov    DWORD PTR [rsp+0x4],esi
    aa50:	mov    DWORD PTR [rsp+0x28],esi
    aa54:	movabs rax,0x800000004
    aa5e:	lea    rbp,[rsp+0x30]
    aa63:	mov    esi,DWORD PTR [rbx+0x8]
    aa66:	mov    QWORD PTR [rsp+0x10],rax
    aa6b:	lea    rax,[rsp+0x28]
    aa70:	mov    QWORD PTR [rsp+0x8],rdi
    aa75:	mov    DWORD PTR [rsp+0x2c],0x0
    aa7d:	mov    rcx,rbp
    aa80:	mov    QWORD PTR [rsp+0x18],rax
    aa85:	call   6290 <xc_vcpu_getcontext@plt>
    aa8a:	test   eax,eax
    aa8c:	jne    adac <write_one_vcpu_basic+0x38c>
    aa92:	mov    edx,DWORD PTR [rsp+0x4]
    aa96:	mov    eax,DWORD PTR [rbx+0x160]
    aa9c:	test   edx,edx
    aa9e:	je     ac80 <write_one_vcpu_basic+0x260>
    aaa4:	cmp    eax,0x8
    aaa7:	mov    r12d,DWORD PTR [rsp+0x1390]
    aaaf:	je     aab9 <write_one_vcpu_basic+0x99>
    aab1:	mov    r12d,DWORD PTR [rsp+0xac0]
    aab9:	cmp    r12d,0x1c00
    aac0:	ja     adf1 <write_one_vcpu_basic+0x3d1>
    aac6:	add    r12d,0x1ff
    aacd:	shr    r12d,0x9
    aad1:	test   r12d,r12d
    aad4:	je     abc8 <write_one_vcpu_basic+0x1a8>
    aada:	sub    r12d,0x1
    aade:	xor    r14d,r14d
    aae1:	add    r12,0x1
    aae5:	jmp    ab3a <write_one_vcpu_basic+0x11a>
    aae7:	nop    WORD PTR [rax+rax*1+0x0]
    aaf0:	mov    r15d,DWORD PTR [rbp+r14*4+0xa50]
    aaf8:	mov    rdi,rbx
    aafb:	mov    rsi,r15
    aafe:	call   5990 <mfn_in_pseudophysmap@plt>
    ab03:	test   al,al
    ab05:	je     ab59 <write_one_vcpu_basic+0x139>
    ab07:	cmp    DWORD PTR [rbx+0x160],0x8
    ab0e:	mov    rsi,r15
    ab11:	mov    rdi,rbx
    ab14:	je     aba8 <write_one_vcpu_basic+0x188>
    ab1a:	call   6450 <mfn_to_pfn@plt>
    ab1f:	mov    DWORD PTR [rbp+r14*4+0xa50],eax
    ab27:	add    r14,0x1
    ab2b:	mov    eax,DWORD PTR [rbx+0x160]
    ab31:	cmp    r14,r12
    ab34:	je     abc8 <write_one_vcpu_basic+0x1a8>
    ab3a:	cmp    eax,0x8
    ab3d:	mov    r13d,r14d
    ab40:	jne    aaf0 <write_one_vcpu_basic+0xd0>
    ab42:	mov    r15,QWORD PTR [rbp+r14*8+0x12e0]
    ab4a:	mov    rdi,rbx
    ab4d:	mov    rsi,r15
    ab50:	call   5990 <mfn_in_pseudophysmap@plt>
    ab55:	test   al,al
    ab57:	jne    ab07 <write_one_vcpu_basic+0xe7>
    ab59:	call   5940 <__errno_location@plt>
    ab5e:	mov    r8d,DWORD PTR [rsp+0x4]
    ab63:	mov    r12d,DWORD PTR [rax]
    ab66:	lea    rdx,[rip+0x17a0b]        # 22578 <__PRETTY_FUNCTION__.13083+0x278>
    ab6d:	mov    rdi,QWORD PTR [rsp+0x8]
    ab72:	mov    rbp,rax
    ab75:	mov    ecx,r13d
    ab78:	xor    eax,eax
    ab7a:	mov    esi,0x1
    ab7f:	call   5d50 <xc_report_error@plt>
    ab84:	mov    DWORD PTR [rbp+0x0],r12d
    ab88:	mov    rsi,r15
    ab8b:	mov    rdi,rbx
    ab8e:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    ab93:	mov    DWORD PTR [rbp+0x0],0x22
    ab9a:	mov    eax,0xffffffff
    ab9f:	jmp    ac53 <write_one_vcpu_basic+0x233>
    aba4:	nop    DWORD PTR [rax+0x0]
    aba8:	call   6450 <mfn_to_pfn@plt>
    abad:	mov    QWORD PTR [rbp+r14*8+0x12e0],rax
    abb5:	add    r14,0x1
    abb9:	mov    eax,DWORD PTR [rbx+0x160]
    abbf:	cmp    r14,r12
    abc2:	jne    ab3a <write_one_vcpu_basic+0x11a>
    abc8:	cmp    eax,0x8
    abcb:	mov    rsi,QWORD PTR [rsp+0x13c0]
    abd3:	je     abdc <write_one_vcpu_basic+0x1bc>
    abd5:	mov    esi,DWORD PTR [rsp+0xad8]
    abdc:	mov    rdi,rbx
    abdf:	call   5e50 <cr3_to_mfn@plt>
    abe4:	mov    rdi,rbx
    abe7:	mov    rsi,rax
    abea:	mov    r12,rax
    abed:	call   5990 <mfn_in_pseudophysmap@plt>
    abf2:	test   al,al
    abf4:	je     ad65 <write_one_vcpu_basic+0x345>
    abfa:	mov    rsi,r12
    abfd:	mov    rdi,rbx
    ac00:	call   6450 <mfn_to_pfn@plt>
    ac05:	cmp    DWORD PTR [rbx+0x160],0x8
    ac0c:	mov    rsi,rax
    ac0f:	mov    rdi,rbx
    ac12:	je     ad20 <write_one_vcpu_basic+0x300>
    ac18:	call   64a0 <mfn_to_cr3@plt>
    ac1d:	mov    DWORD PTR [rsp+0xad8],eax
    ac24:	cmp    DWORD PTR [rbx+0x164],0x4
    ac2b:	je     acd8 <write_one_vcpu_basic+0x2b8>
    ac31:	cmp    DWORD PTR [rbx+0x160],0x8
    ac38:	lea    rsi,[rsp+0x10]
    ac3d:	je     ad50 <write_one_vcpu_basic+0x330>
    ac43:	mov    ecx,0xaf0
    ac48:	mov    rdx,rbp
    ac4b:	mov    rdi,rbx
    ac4e:	call   5870 <write_split_record@plt>
    ac53:	mov    rcx,QWORD PTR [rsp+0x1468]
    ac5b:	xor    rcx,QWORD PTR fs:0x28
    ac64:	jne    ae6d <write_one_vcpu_basic+0x44d>
    ac6a:	add    rsp,0x1478
    ac71:	pop    rbx
    ac72:	pop    rbp
    ac73:	pop    r12
    ac75:	pop    r13
    ac77:	pop    r14
    ac79:	pop    r15
    ac7b:	ret    
    ac7c:	nop    DWORD PTR [rax+0x0]
    ac80:	cmp    eax,0x8
    ac83:	mov    r12,QWORD PTR [rsp+0x298]
    ac8b:	je     ac95 <write_one_vcpu_basic+0x275>
    ac8d:	mov    r12d,DWORD PTR [rsp+0x23c]
    ac95:	mov    rsi,r12
    ac98:	mov    rdi,rbx
    ac9b:	call   5990 <mfn_in_pseudophysmap@plt>
    aca0:	test   al,al
    aca2:	je     ae2a <write_one_vcpu_basic+0x40a>
    aca8:	cmp    DWORD PTR [rbx+0x160],0x8
    acaf:	mov    rsi,r12
    acb2:	mov    rdi,rbx
    acb5:	je     ad38 <write_one_vcpu_basic+0x318>
    acbb:	call   6450 <mfn_to_pfn@plt>
    acc0:	mov    DWORD PTR [rsp+0x23c],eax
    acc7:	mov    eax,DWORD PTR [rbx+0x160]
    accd:	jmp    aaa4 <write_one_vcpu_basic+0x84>
    acd2:	nop    WORD PTR [rax+rax*1+0x0]
    acd8:	mov    rsi,QWORD PTR [rsp+0x13b0]
    ace0:	test   rsi,rsi
    ace3:	je     ac31 <write_one_vcpu_basic+0x211>
    ace9:	shr    rsi,0xc
    aced:	mov    rdi,rbx
    acf0:	mov    r12,rsi
    acf3:	call   5990 <mfn_in_pseudophysmap@plt>
    acf8:	test   al,al
    acfa:	je     ae52 <write_one_vcpu_basic+0x432>
    ad00:	mov    rsi,r12
    ad03:	mov    rdi,rbx
    ad06:	call   6450 <mfn_to_pfn@plt>
    ad0b:	shl    rax,0xc
    ad0f:	or     rax,0x1
    ad13:	mov    QWORD PTR [rsp+0x13b0],rax
    ad1b:	jmp    ac31 <write_one_vcpu_basic+0x211>
    ad20:	call   64a0 <mfn_to_cr3@plt>
    ad25:	mov    QWORD PTR [rsp+0x13c0],rax
    ad2d:	jmp    ac24 <write_one_vcpu_basic+0x204>
    ad32:	nop    WORD PTR [rax+rax*1+0x0]
    ad38:	call   6450 <mfn_to_pfn@plt>
    ad3d:	mov    QWORD PTR [rsp+0x298],rax
    ad45:	mov    eax,DWORD PTR [rbx+0x160]
    ad4b:	jmp    aaa4 <write_one_vcpu_basic+0x84>
    ad50:	mov    ecx,0x1430
    ad55:	mov    rdx,rbp
    ad58:	mov    rdi,rbx
    ad5b:	call   5870 <write_split_record@plt>
    ad60:	jmp    ac53 <write_one_vcpu_basic+0x233>
    ad65:	call   5940 <__errno_location@plt>
    ad6a:	mov    ecx,DWORD PTR [rsp+0x4]
    ad6e:	mov    r13d,DWORD PTR [rax]
    ad71:	lea    rdx,[rip+0x17d46]        # 22abe <__PRETTY_FUNCTION__.13083+0x7be>
    ad78:	mov    rbp,rax
    ad7b:	mov    rdi,QWORD PTR [rsp+0x8]
    ad80:	mov    esi,0x1
    ad85:	xor    eax,eax
    ad87:	call   5d50 <xc_report_error@plt>
    ad8c:	mov    DWORD PTR [rbp+0x0],r13d
    ad90:	mov    rsi,r12
    ad93:	mov    rdi,rbx
    ad96:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    ad9b:	mov    DWORD PTR [rbp+0x0],0x22
    ada2:	mov    eax,0xffffffff
    ada7:	jmp    ac53 <write_one_vcpu_basic+0x233>
    adac:	call   5940 <__errno_location@plt>
    adb1:	mov    r15,QWORD PTR [rsp+0x8]
    adb6:	mov    ebp,DWORD PTR [rax]
    adb8:	mov    rbx,rax
    adbb:	mov    esi,ebp
    adbd:	mov    rdi,r15
    adc0:	call   6570 <xc_strerror@plt>
    adc5:	mov    r8d,DWORD PTR [rbx]
    adc8:	mov    ecx,DWORD PTR [rsp+0x4]
    adcc:	lea    rdx,[rip+0x1777d]        # 22550 <__PRETTY_FUNCTION__.13083+0x250>
    add3:	mov    r9,rax
    add6:	mov    esi,0x1
    addb:	xor    eax,eax
    addd:	mov    rdi,r15
    ade0:	call   5d50 <xc_report_error@plt>
    ade5:	mov    DWORD PTR [rbx],ebp
    ade7:	mov    eax,0xffffffff
    adec:	jmp    ac53 <write_one_vcpu_basic+0x233>
    adf1:	call   5940 <__errno_location@plt>
    adf6:	mov    rdi,QWORD PTR [rsp+0x8]
    adfb:	lea    rdx,[rip+0x16b8e]        # 21990 <__PRETTY_FUNCTION__.12816+0x250>
    ae02:	mov    rbx,rax
    ae05:	mov    r8d,0x1c00
    ae0b:	xor    eax,eax
    ae0d:	mov    ecx,r12d
    ae10:	mov    esi,0x1
    ae15:	call   5d50 <xc_report_error@plt>
    ae1a:	mov    DWORD PTR [rbx],0x22
    ae20:	mov    eax,0xffffffff
    ae25:	jmp    ac53 <write_one_vcpu_basic+0x233>
    ae2a:	call   5940 <__errno_location@plt>
    ae2f:	mov    rdi,QWORD PTR [rsp+0x8]
    ae34:	lea    rdx,[rip+0x17c68]        # 22aa3 <__PRETTY_FUNCTION__.13083+0x7a3>
    ae3b:	mov    rbp,rax
    ae3e:	mov    r13d,DWORD PTR [rax]
    ae41:	mov    esi,0x1
    ae46:	xor    eax,eax
    ae48:	call   5d50 <xc_report_error@plt>
    ae4d:	jmp    ad8c <write_one_vcpu_basic+0x36c>
    ae52:	call   5940 <__errno_location@plt>
    ae57:	mov    ecx,DWORD PTR [rsp+0x4]
    ae5b:	mov    rbp,rax
    ae5e:	mov    r13d,DWORD PTR [rax]
    ae61:	lea    rdx,[rip+0x17c6f]        # 22ad7 <__PRETTY_FUNCTION__.13083+0x7d7>
    ae68:	jmp    ad7b <write_one_vcpu_basic+0x35b>
    ae6d:	call   5b80 <__stack_chk_fail@plt>
    ae72:	nop    DWORD PTR [rax+0x0]
    ae76:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ae80 <write_all_vcpu_information>:
    ae80:	push   r15
    ae82:	push   r14
    ae84:	push   r13
    ae86:	push   r12
    ae88:	push   rbp
    ae89:	push   rbx
    ae8a:	mov    rbp,rdi
    ae8d:	xor    ebx,ebx
    ae8f:	sub    rsp,0x138
    ae96:	mov    rax,QWORD PTR fs:0x28
    ae9f:	mov    QWORD PTR [rsp+0x128],rax
    aea7:	xor    eax,eax
    aea9:	mov    rax,QWORD PTR [rdi]
    aeac:	mov    QWORD PTR [rsp+0x8],rax
    aeb1:	lea    rax,[rsp+0x40]
    aeb6:	mov    QWORD PTR [rsp+0x10],rax
    aebb:	lea    rax,[rsp+0x90]
    aec3:	mov    QWORD PTR [rsp],rax
    aec7:	lea    rax,[rsp+0xa0]
    aecf:	mov    QWORD PTR [rsp+0x28],rax
    aed4:	jmp    b185 <write_all_vcpu_information+0x305>
    aed9:	nop    DWORD PTR [rax+0x0]
    aee0:	lea    rdi,[r15+0x8]
    aee4:	mov    rcx,r15
    aee7:	movabs rax,0x800000006
    aef1:	mov    QWORD PTR [rsp+0x30],rax
    aef6:	xor    eax,eax
    aef8:	mov    r14,QWORD PTR [rbp+0x0]
    aefc:	and    rdi,0xfffffffffffffff8
    af00:	mov    QWORD PTR [rsp+0x60],0x0
    af09:	mov    QWORD PTR [rsp+0x68],0x0
    af12:	sub    rcx,rdi
    af15:	mov    DWORD PTR [rsp+0x70],0x0
    af1d:	mov    QWORD PTR [rsp+0x78],0xffffffffffffffff
    af26:	add    ecx,0x8c
    af2c:	mov    QWORD PTR [rsp+0x80],0x0
    af38:	mov    DWORD PTR [rsp+0x8c],0x0
    af43:	shr    ecx,0x3
    af46:	mov    DWORD PTR [rsp+0x88],ebx
    af4d:	mov    QWORD PTR [rsp+0x38],r13
    af52:	mov    QWORD PTR [r15],0x0
    af59:	mov    QWORD PTR [r15+0x84],0x0
    af64:	rep stos QWORD PTR es:[rdi],rax
    af67:	mov    rdi,r14
    af6a:	mov    DWORD PTR [rsp+0x90],0x3f
    af75:	mov    DWORD PTR [rsp+0xa0],ebx
    af7c:	mov    eax,DWORD PTR [rbp+0x8]
    af7f:	mov    rsi,QWORD PTR [rsp]
    af83:	mov    WORD PTR [rsp+0x98],ax
    af8b:	call   59d0 <xc_domctl@plt>
    af90:	test   eax,eax
    af92:	js     b393 <write_all_vcpu_information+0x513>
    af98:	cmp    QWORD PTR [rsp+0xa8],0x0
    afa1:	mov    rsi,QWORD PTR [rsp+0x68]
    afa6:	je     b01f <write_all_vcpu_information+0x19f>
    afa8:	lea    rax,[rsp+0x60]
    afad:	mov    rdx,QWORD PTR [rsp+0xb0]
    afb5:	test   rsi,rsi
    afb8:	mov    rdi,r14
    afbb:	cmove  rsi,rax
    afbf:	mov    QWORD PTR [rsp+0x18],rax
    afc4:	call   6220 <xc__hypercall_buffer_alloc@plt>
    afc9:	test   rax,rax
    afcc:	je     b4a3 <write_all_vcpu_information+0x623>
    afd2:	mov    QWORD PTR [rsp+0x20],rax
    afd7:	mov    rax,QWORD PTR [rsp+0x68]
    afdc:	mov    rdi,r14
    afdf:	mov    rsi,QWORD PTR [rsp]
    afe3:	test   rax,rax
    afe6:	cmove  rax,QWORD PTR [rsp+0x18]
    afec:	mov    rax,QWORD PTR [rax]
    afef:	mov    QWORD PTR [rsp+0xb8],rax
    aff7:	call   59d0 <xc_domctl@plt>
    affc:	test   eax,eax
    affe:	mov    rdx,QWORD PTR [rsp+0x20]
    b003:	js     b393 <write_all_vcpu_information+0x513>
    b009:	mov    rcx,QWORD PTR [rsp+0xb0]
    b011:	test   rcx,rcx
    b014:	jne    b2b8 <write_all_vcpu_information+0x438>
    b01a:	mov    rsi,QWORD PTR [rsp+0x68]
    b01f:	test   rsi,rsi
    b022:	je     b330 <write_all_vcpu_information+0x4b0>
    b028:	mov    rdi,r14
    b02b:	call   6190 <xc__hypercall_buffer_free@plt>
    b030:	lea    rdi,[r15+0x8]
    b034:	mov    r8,r15
    b037:	movabs rax,0x80000000c
    b041:	mov    QWORD PTR [rsp+0x30],rax
    b046:	xor    eax,eax
    b048:	mov    r14,QWORD PTR [rbp+0x0]
    b04c:	and    rdi,0xfffffffffffffff8
    b050:	mov    QWORD PTR [rsp+0x60],0x0
    b059:	mov    QWORD PTR [rsp+0x68],0x0
    b062:	sub    r8,rdi
    b065:	mov    DWORD PTR [rsp+0x70],0x0
    b06d:	mov    QWORD PTR [rsp+0x78],0xffffffffffffffff
    b076:	lea    ecx,[r8+0x8c]
    b07d:	mov    QWORD PTR [rsp+0x80],0x0
    b089:	mov    DWORD PTR [rsp+0x8c],0x0
    b094:	mov    DWORD PTR [rsp+0x88],ebx
    b09b:	mov    QWORD PTR [rsp+0x38],r13
    b0a0:	shr    ecx,0x3
    b0a3:	mov    QWORD PTR [r15],0x0
    b0aa:	mov    QWORD PTR [r15+0x84],0x0
    b0b5:	rep stos QWORD PTR es:[rdi],rax
    b0b8:	mov    rdi,r14
    b0bb:	mov    DWORD PTR [rsp+0x90],0x48
    b0c6:	mov    DWORD PTR [rsp+0xa0],ebx
    b0cd:	mov    eax,DWORD PTR [rbp+0x8]
    b0d0:	mov    rsi,QWORD PTR [rsp]
    b0d4:	mov    WORD PTR [rsp+0x98],ax
    b0dc:	call   59d0 <xc_domctl@plt>
    b0e1:	test   eax,eax
    b0e3:	js     b3ed <write_all_vcpu_information+0x56d>
    b0e9:	mov    r13d,DWORD PTR [rsp+0xa4]
    b0f1:	mov    rsi,QWORD PTR [rsp+0x68]
    b0f6:	test   r13d,r13d
    b0f9:	je     b168 <write_all_vcpu_information+0x2e8>
    b0fb:	lea    r15,[rsp+0x60]
    b100:	shl    r13,0x4
    b104:	test   rsi,rsi
    b107:	mov    rdx,r13
    b10a:	mov    rdi,r14
    b10d:	cmove  rsi,r15
    b111:	call   6220 <xc__hypercall_buffer_alloc@plt>
    b116:	test   rax,rax
    b119:	je     b4d8 <write_all_vcpu_information+0x658>
    b11f:	mov    QWORD PTR [rsp+0x18],rax
    b124:	mov    rax,QWORD PTR [rsp+0x68]
    b129:	mov    rdi,r14
    b12c:	mov    rsi,QWORD PTR [rsp]
    b130:	test   rax,rax
    b133:	cmove  rax,r15
    b137:	mov    rax,QWORD PTR [rax]
    b13a:	mov    QWORD PTR [rsp+0xa8],rax
    b142:	call   59d0 <xc_domctl@plt>
    b147:	test   eax,eax
    b149:	mov    rdx,QWORD PTR [rsp+0x18]
    b14e:	js     b3ed <write_all_vcpu_information+0x56d>
    b154:	mov    ecx,DWORD PTR [rsp+0xa4]
    b15b:	test   ecx,ecx
    b15d:	jne    b2f0 <write_all_vcpu_information+0x470>
    b163:	mov    rsi,QWORD PTR [rsp+0x68]
    b168:	test   rsi,rsi
    b16b:	je     b340 <write_all_vcpu_information+0x4c0>
    b171:	mov    rdi,r14
    b174:	call   6190 <xc__hypercall_buffer_free@plt>
    b179:	add    ebx,0x1
    b17c:	cmp    DWORD PTR [rbp+0x5c],ebx
    b17f:	jb     b287 <write_all_vcpu_information+0x407>
    b185:	mov    esi,DWORD PTR [rbp+0x8]
    b188:	mov    rcx,QWORD PTR [rsp+0x10]
    b18d:	mov    edx,ebx
    b18f:	mov    rdi,QWORD PTR [rsp+0x8]
    b194:	call   5950 <xc_vcpu_getinfo@plt>
    b199:	test   eax,eax
    b19b:	mov    r12d,eax
    b19e:	jne    b350 <write_all_vcpu_information+0x4d0>
    b1a4:	cmp    BYTE PTR [rsp+0x44],0x0
    b1a9:	je     b179 <write_all_vcpu_information+0x2f9>
    b1ab:	mov    esi,ebx
    b1ad:	mov    rdi,rbp
    b1b0:	call   aa20 <write_one_vcpu_basic>
    b1b5:	test   eax,eax
    b1b7:	jne    b284 <write_all_vcpu_information+0x404>
    b1bd:	lea    r15,[rsp+0x94]
    b1c5:	movabs rax,0x800000005
    b1cf:	lea    r13,[rsp+0x88]
    b1d7:	mov    QWORD PTR [rsp+0x60],rax
    b1dc:	xor    eax,eax
    b1de:	mov    r14,QWORD PTR [rbp+0x0]
    b1e2:	lea    rdi,[r15+0x8]
    b1e6:	mov    rcx,r15
    b1e9:	mov    QWORD PTR [rsp+0x94],0x0
    b1f5:	mov    DWORD PTR [rsp+0x8c],0x0
    b200:	mov    DWORD PTR [rsp+0x88],ebx
    b207:	and    rdi,0xfffffffffffffff8
    b20b:	mov    QWORD PTR [rsp+0x68],r13
    b210:	mov    QWORD PTR [r15+0x84],0x0
    b21b:	sub    rcx,rdi
    b21e:	add    ecx,0x8c
    b224:	shr    ecx,0x3
    b227:	rep stos QWORD PTR es:[rdi],rax
    b22a:	mov    rdi,r14
    b22d:	mov    DWORD PTR [rsp+0x90],0x2b
    b238:	mov    DWORD PTR [rsp+0xa0],ebx
    b23f:	mov    eax,DWORD PTR [rbp+0x8]
    b242:	mov    rsi,QWORD PTR [rsp]
    b246:	mov    WORD PTR [rsp+0x98],ax
    b24e:	call   59d0 <xc_domctl@plt>
    b253:	test   eax,eax
    b255:	js     b448 <write_all_vcpu_information+0x5c8>
    b25b:	mov    ecx,DWORD PTR [rsp+0xa4]
    b262:	test   ecx,ecx
    b264:	je     aee0 <write_all_vcpu_information+0x60>
    b26a:	mov    rdx,QWORD PTR [rsp+0x28]
    b26f:	lea    rsi,[rsp+0x60]
    b274:	mov    rdi,rbp
    b277:	call   5870 <write_split_record@plt>
    b27c:	test   eax,eax
    b27e:	je     aee0 <write_all_vcpu_information+0x60>
    b284:	mov    r12d,eax
    b287:	mov    rdx,QWORD PTR [rsp+0x128]
    b28f:	xor    rdx,QWORD PTR fs:0x28
    b298:	mov    eax,r12d
    b29b:	jne    b508 <write_all_vcpu_information+0x688>
    b2a1:	add    rsp,0x138
    b2a8:	pop    rbx
    b2a9:	pop    rbp
    b2aa:	pop    r12
    b2ac:	pop    r13
    b2ae:	pop    r14
    b2b0:	pop    r15
    b2b2:	ret    
    b2b3:	nop    DWORD PTR [rax+rax*1+0x0]
    b2b8:	lea    rsi,[rsp+0x30]
    b2bd:	mov    rdi,rbp
    b2c0:	call   5870 <write_split_record@plt>
    b2c5:	mov    rsi,QWORD PTR [rsp+0x68]
    b2ca:	mov    rdi,r14
    b2cd:	mov    DWORD PTR [rsp+0x20],eax
    b2d1:	test   rsi,rsi
    b2d4:	cmove  rsi,QWORD PTR [rsp+0x18]
    b2da:	call   6190 <xc__hypercall_buffer_free@plt>
    b2df:	mov    eax,DWORD PTR [rsp+0x20]
    b2e3:	test   eax,eax
    b2e5:	je     b030 <write_all_vcpu_information+0x1b0>
    b2eb:	mov    r12d,eax
    b2ee:	jmp    b287 <write_all_vcpu_information+0x407>
    b2f0:	lea    rsi,[rsp+0x30]
    b2f5:	shl    rcx,0x4
    b2f9:	mov    rdi,rbp
    b2fc:	call   5870 <write_split_record@plt>
    b301:	mov    rsi,QWORD PTR [rsp+0x68]
    b306:	mov    r13d,eax
    b309:	mov    rdi,r14
    b30c:	test   rsi,rsi
    b30f:	cmove  rsi,r15
    b313:	call   6190 <xc__hypercall_buffer_free@plt>
    b318:	test   r13d,r13d
    b31b:	je     b179 <write_all_vcpu_information+0x2f9>
    b321:	mov    r12d,r13d
    b324:	jmp    b287 <write_all_vcpu_information+0x407>
    b329:	nop    DWORD PTR [rax+0x0]
    b330:	lea    rsi,[rsp+0x60]
    b335:	jmp    b028 <write_all_vcpu_information+0x1a8>
    b33a:	nop    WORD PTR [rax+rax*1+0x0]
    b340:	lea    rsi,[rsp+0x60]
    b345:	jmp    b171 <write_all_vcpu_information+0x2f1>
    b34a:	nop    WORD PTR [rax+rax*1+0x0]
    b350:	call   5940 <__errno_location@plt>
    b355:	mov    r14,QWORD PTR [rsp+0x8]
    b35a:	mov    r13d,DWORD PTR [rax]
    b35d:	mov    rbp,rax
    b360:	mov    esi,r13d
    b363:	mov    rdi,r14
    b366:	call   6570 <xc_strerror@plt>
    b36b:	mov    r8d,DWORD PTR [rbp+0x0]
    b36f:	lea    rdx,[rip+0x1722a]        # 225a0 <__PRETTY_FUNCTION__.13083+0x2a0>
    b376:	mov    r9,rax
    b379:	mov    ecx,ebx
    b37b:	mov    esi,0x1
    b380:	mov    rdi,r14
    b383:	xor    eax,eax
    b385:	call   5d50 <xc_report_error@plt>
    b38a:	mov    DWORD PTR [rbp+0x0],r13d
    b38e:	jmp    b287 <write_all_vcpu_information+0x407>
    b393:	call   5940 <__errno_location@plt>
    b398:	mov    r12d,DWORD PTR [rax]
    b39b:	mov    rbp,rax
    b39e:	mov    rdi,r14
    b3a1:	mov    esi,r12d
    b3a4:	call   6570 <xc_strerror@plt>
    b3a9:	mov    r8d,DWORD PTR [rbp+0x0]
    b3ad:	lea    rdx,[rip+0x1724c]        # 22600 <__PRETTY_FUNCTION__.13083+0x300>
    b3b4:	mov    r9,rax
    b3b7:	mov    ecx,ebx
    b3b9:	mov    esi,0x1
    b3be:	mov    rdi,r14
    b3c1:	xor    eax,eax
    b3c3:	call   5d50 <xc_report_error@plt>
    b3c8:	mov    DWORD PTR [rbp+0x0],r12d
    b3cc:	mov    rsi,QWORD PTR [rsp+0x68]
    b3d1:	test   rsi,rsi
    b3d4:	je     b48c <write_all_vcpu_information+0x60c>
    b3da:	mov    rdi,r14
    b3dd:	mov    r12d,0xffffffff
    b3e3:	call   6190 <xc__hypercall_buffer_free@plt>
    b3e8:	jmp    b287 <write_all_vcpu_information+0x407>
    b3ed:	call   5940 <__errno_location@plt>
    b3f2:	mov    r12d,DWORD PTR [rax]
    b3f5:	mov    rbp,rax
    b3f8:	mov    rdi,r14
    b3fb:	mov    esi,r12d
    b3fe:	call   6570 <xc_strerror@plt>
    b403:	mov    r8d,DWORD PTR [rbp+0x0]
    b407:	lea    rdx,[rip+0x1725a]        # 22668 <__PRETTY_FUNCTION__.13083+0x368>
    b40e:	mov    r9,rax
    b411:	mov    ecx,ebx
    b413:	mov    esi,0x1
    b418:	mov    rdi,r14
    b41b:	xor    eax,eax
    b41d:	call   5d50 <xc_report_error@plt>
    b422:	mov    DWORD PTR [rbp+0x0],r12d
    b426:	mov    rsi,QWORD PTR [rsp+0x68]
    b42b:	test   rsi,rsi
    b42e:	jne    b3da <write_all_vcpu_information+0x55a>
    b430:	lea    rsi,[rsp+0x60]
    b435:	mov    rdi,r14
    b438:	mov    r13d,0xffffffff
    b43e:	call   6190 <xc__hypercall_buffer_free@plt>
    b443:	jmp    b321 <write_all_vcpu_information+0x4a1>
    b448:	call   5940 <__errno_location@plt>
    b44d:	mov    r12d,DWORD PTR [rax]
    b450:	mov    rbp,rax
    b453:	mov    rdi,r14
    b456:	mov    esi,r12d
    b459:	call   6570 <xc_strerror@plt>
    b45e:	mov    r8d,DWORD PTR [rbp+0x0]
    b462:	lea    rdx,[rip+0x17167]        # 225d0 <__PRETTY_FUNCTION__.13083+0x2d0>
    b469:	mov    r9,rax
    b46c:	mov    ecx,ebx
    b46e:	mov    esi,0x1
    b473:	mov    rdi,r14
    b476:	xor    eax,eax
    b478:	call   5d50 <xc_report_error@plt>
    b47d:	mov    DWORD PTR [rbp+0x0],r12d
    b481:	mov    r12d,0xffffffff
    b487:	jmp    b287 <write_all_vcpu_information+0x407>
    b48c:	lea    rsi,[rsp+0x60]
    b491:	mov    rdi,r14
    b494:	call   6190 <xc__hypercall_buffer_free@plt>
    b499:	mov    eax,0xffffffff
    b49e:	jmp    b284 <write_all_vcpu_information+0x404>
    b4a3:	call   5940 <__errno_location@plt>
    b4a8:	mov    rcx,QWORD PTR [rsp+0xb0]
    b4b0:	mov    r12d,DWORD PTR [rax]
    b4b3:	lea    rdx,[rip+0x17176]        # 22630 <__PRETTY_FUNCTION__.13083+0x330>
    b4ba:	mov    rbp,rax
    b4bd:	mov    r8d,ebx
    b4c0:	mov    esi,0x1
    b4c5:	mov    rdi,r14
    b4c8:	xor    eax,eax
    b4ca:	call   5d50 <xc_report_error@plt>
    b4cf:	mov    DWORD PTR [rbp+0x0],r12d
    b4d3:	jmp    b3cc <write_all_vcpu_information+0x54c>
    b4d8:	call   5940 <__errno_location@plt>
    b4dd:	mov    r12d,DWORD PTR [rax]
    b4e0:	lea    rdx,[rip+0x171a9]        # 22690 <__PRETTY_FUNCTION__.13083+0x390>
    b4e7:	mov    rbp,rax
    b4ea:	mov    r8d,ebx
    b4ed:	mov    rcx,r13
    b4f0:	mov    esi,0x1
    b4f5:	mov    rdi,r14
    b4f8:	xor    eax,eax
    b4fa:	call   5d50 <xc_report_error@plt>
    b4ff:	mov    DWORD PTR [rbp+0x0],r12d
    b503:	jmp    b426 <write_all_vcpu_information+0x5a6>
    b508:	call   5b80 <__stack_chk_fail@plt>
    b50d:	nop    DWORD PTR [rax]

000000000000b510 <x86_pv_normalise_page>:
    b510:	and    esi,0x70000000
    b516:	push   r15
    b518:	push   r14
    b51a:	lea    rcx,[rsi-0x10000000]
    b521:	push   r13
    b523:	push   r12
    b525:	push   rbp
    b526:	push   rbx
    b527:	xor    eax,eax
    b529:	sub    rsp,0x38
    b52d:	cmp    rcx,0x30000000
    b534:	mov    QWORD PTR [rsp+0x10],rsi
    b539:	jbe    b550 <x86_pv_normalise_page+0x40>
    b53b:	add    rsp,0x38
    b53f:	pop    rbx
    b540:	pop    rbp
    b541:	pop    r12
    b543:	pop    r13
    b545:	pop    r14
    b547:	pop    r15
    b549:	ret    
    b54a:	nop    WORD PTR [rax+rax*1+0x0]
    b550:	mov    rax,QWORD PTR [rdi]
    b553:	mov    rbx,rdi
    b556:	mov    edi,0x1000
    b55b:	mov    QWORD PTR [rsp+0x20],rdx
    b560:	mov    QWORD PTR [rsp+0x28],rax
    b565:	call   5ff0 <malloc@plt>
    b56a:	test   rax,rax
    b56d:	mov    r12,rax
    b570:	je     b7f7 <x86_pv_normalise_page+0x2e7>
    b576:	mov    rax,QWORD PTR [rsp+0x20]
    b57b:	cmp    DWORD PTR [rbx+0x164],0x4
    b582:	mov    rax,QWORD PTR [rax]
    b585:	mov    QWORD PTR [rsp+0x18],rax
    b58a:	je     b6c0 <x86_pv_normalise_page+0x1b0>
    b590:	mov    rax,QWORD PTR [rsp+0x10]
    b595:	cmp    rax,0x30000000
    b59b:	je     b668 <x86_pv_normalise_page+0x158>
    b5a1:	cmp    rax,0x40000000
    b5a7:	je     b780 <x86_pv_normalise_page+0x270>
    b5ad:	cmp    rax,0x20000000
    b5b3:	je     b737 <x86_pv_normalise_page+0x227>
    b5b9:	mov    eax,0xffffffff
    b5be:	mov    DWORD PTR [rsp+0xc],eax
    b5c2:	mov    DWORD PTR [rsp],eax
    b5c5:	xor    r13d,r13d
    b5c8:	jmp    b5ee <x86_pv_normalise_page+0xde>
    b5ca:	nop    WORD PTR [rax+rax*1+0x0]
    b5d0:	xor    ebp,ebp
    b5d2:	cmp    DWORD PTR [rsp+0xc],r13d
    b5d7:	jb     b5f7 <x86_pv_normalise_page+0xe7>
    b5d9:	mov    QWORD PTR [r12+r13*8],rbp
    b5dd:	add    r13,0x1
    b5e1:	cmp    r13,0x200
    b5e8:	je     b730 <x86_pv_normalise_page+0x220>
    b5ee:	cmp    DWORD PTR [rsp],r13d
    b5f2:	mov    r15d,r13d
    b5f5:	jbe    b5d0 <x86_pv_normalise_page+0xc0>
    b5f7:	mov    rax,QWORD PTR [rsp+0x18]
    b5fc:	mov    rbp,QWORD PTR [rax+r13*8]
    b600:	test   bpl,0x1
    b604:	je     b5d9 <x86_pv_normalise_page+0xc9>
    b606:	mov    r8,rbp
    b609:	movabs r14,0xffffffffff
    b613:	shr    r8,0xc
    b617:	and    r14,r8
    b61a:	cmp    QWORD PTR [rsp+0x10],0x10000000
    b623:	je     b62f <x86_pv_normalise_page+0x11f>
    b625:	test   bpl,0x80
    b629:	jne    b6e8 <x86_pv_normalise_page+0x1d8>
    b62f:	mov    rsi,r14
    b632:	mov    rdi,rbx
    b635:	call   5990 <mfn_in_pseudophysmap@plt>
    b63a:	test   al,al
    b63c:	je     b680 <x86_pv_normalise_page+0x170>
    b63e:	mov    rsi,r14
    b641:	mov    rdi,rbx
    b644:	call   6450 <mfn_to_pfn@plt>
    b649:	movabs rcx,0xfff0000000000fff
    b653:	shl    rax,0xc
    b657:	and    rcx,rbp
    b65a:	or     rcx,rax
    b65d:	mov    rbp,rcx
    b660:	jmp    b5d9 <x86_pv_normalise_page+0xc9>
    b665:	nop    DWORD PTR [rax]
    b668:	mov    DWORD PTR [rsp+0xc],0x1ff
    b670:	mov    DWORD PTR [rsp],0x4
    b677:	jmp    b5c5 <x86_pv_normalise_page+0xb5>
    b67c:	nop    DWORD PTR [rax+0x0]
    b680:	mov    eax,r15d
    b683:	mov    r15,r14
    b686:	mov    r14d,eax
    b689:	call   5940 <__errno_location@plt>
    b68e:	test   BYTE PTR [rbx+0x18],0x8
    b692:	mov    r13,rax
    b695:	jne    b7b0 <x86_pv_normalise_page+0x2a0>
    b69b:	mov    DWORD PTR [rax],0xb
    b6a1:	mov    eax,0xffffffff
    b6a6:	mov    rdx,QWORD PTR [rsp+0x20]
    b6ab:	mov    QWORD PTR [rdx],r12
    b6ae:	add    rsp,0x38
    b6b2:	pop    rbx
    b6b3:	pop    rbp
    b6b4:	pop    r12
    b6b6:	pop    r13
    b6b8:	pop    r14
    b6ba:	pop    r15
    b6bc:	ret    
    b6bd:	nop    DWORD PTR [rax]
    b6c0:	cmp    QWORD PTR [rsp+0x10],0x40000000
    b6c9:	jne    b5b9 <x86_pv_normalise_page+0xa9>
    b6cf:	mov    DWORD PTR [rsp+0xc],0x10f
    b6d7:	mov    DWORD PTR [rsp],0x100
    b6de:	jmp    b5c5 <x86_pv_normalise_page+0xb5>
    b6e3:	nop    DWORD PTR [rax+rax*1+0x0]
    b6e8:	call   5940 <__errno_location@plt>
    b6ed:	mov    rcx,QWORD PTR [rsp+0x10]
    b6f2:	mov    rdi,QWORD PTR [rsp+0x28]
    b6f7:	lea    rdx,[rip+0x1700a]        # 22708 <__PRETTY_FUNCTION__.13083+0x408>
    b6fe:	mov    rbx,rax
    b701:	mov    r9,rbp
    b704:	xor    eax,eax
    b706:	mov    r8d,r15d
    b709:	mov    esi,0x1
    b70e:	shr    rcx,0x1c
    b712:	call   5d50 <xc_report_error@plt>
    b717:	mov    DWORD PTR [rbx],0x7
    b71d:	mov    eax,0xffffffff
    b722:	jmp    b6a6 <x86_pv_normalise_page+0x196>
    b727:	nop    WORD PTR [rax+rax*1+0x0]
    b730:	xor    eax,eax
    b732:	jmp    b6a6 <x86_pv_normalise_page+0x196>
    b737:	mov    rax,QWORD PTR [rsp+0x18]
    b73c:	mov    esi,0xffffffff
    b741:	mov    edx,0x1ff
    b746:	mov    rax,QWORD PTR [rax+0xd60]
    b74d:	mov    QWORD PTR [rsp],rax
    b751:	shl    rax,0xc
    b755:	shr    rax,0x18
    b759:	cmp    rax,QWORD PTR [rbx+0x178]
    b760:	mov    eax,0x1ac
    b765:	cmovne edx,esi
    b768:	cmovne eax,esi
    b76b:	mov    DWORD PTR [rsp+0xc],edx
    b76f:	mov    DWORD PTR [rsp],eax
    b772:	jmp    b5c5 <x86_pv_normalise_page+0xb5>
    b777:	nop    WORD PTR [rax+rax*1+0x0]
    b780:	call   5940 <__errno_location@plt>
    b785:	mov    rdi,QWORD PTR [rsp+0x28]
    b78a:	lea    rdx,[rip+0x16f4f]        # 226e0 <__PRETTY_FUNCTION__.13083+0x3e0>
    b791:	mov    rbx,rax
    b794:	mov    esi,0x1
    b799:	xor    eax,eax
    b79b:	call   5d50 <xc_report_error@plt>
    b7a0:	mov    DWORD PTR [rbx],0x16
    b7a6:	mov    eax,0xffffffff
    b7ab:	jmp    b6a6 <x86_pv_normalise_page+0x196>
    b7b0:	mov    rcx,QWORD PTR [rsp+0x10]
    b7b5:	mov    ebp,DWORD PTR [rax]
    b7b7:	lea    rdx,[rip+0x17332]        # 22af0 <__PRETTY_FUNCTION__.13083+0x7f0>
    b7be:	mov    rdi,QWORD PTR [rsp+0x28]
    b7c3:	xor    eax,eax
    b7c5:	mov    r8d,r14d
    b7c8:	mov    esi,0x1
    b7cd:	shr    rcx,0x1c
    b7d1:	call   5d50 <xc_report_error@plt>
    b7d6:	mov    DWORD PTR [r13+0x0],ebp
    b7da:	mov    rsi,r15
    b7dd:	mov    rdi,rbx
    b7e0:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    b7e5:	mov    DWORD PTR [r13+0x0],0x22
    b7ed:	mov    eax,0xffffffff
    b7f2:	jmp    b6a6 <x86_pv_normalise_page+0x196>
    b7f7:	call   5940 <__errno_location@plt>
    b7fc:	mov    rdi,QWORD PTR [rsp+0x28]
    b801:	mov    ebp,DWORD PTR [rax]
    b803:	lea    rdx,[rip+0x16eb6]        # 226c0 <__PRETTY_FUNCTION__.13083+0x3c0>
    b80a:	mov    rbx,rax
    b80d:	mov    esi,0x1
    b812:	xor    eax,eax
    b814:	call   5d50 <xc_report_error@plt>
    b819:	mov    DWORD PTR [rbx],ebp
    b81b:	mov    eax,0xffffffff
    b820:	jmp    b53b <x86_pv_normalise_page+0x2b>
    b825:	nop
    b826:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b830 <map_p2m_leaves>:
    b830:	push   r15
    b832:	push   r14
    b834:	mov    r8d,edx
    b837:	push   r13
    b839:	push   r12
    b83b:	mov    r13,rsi
    b83e:	push   rbp
    b83f:	push   rbx
    b840:	mov    r12,rdx
    b843:	mov    rbx,rdi
    b846:	mov    rcx,r13
    b849:	mov    edx,0x1
    b84e:	sub    rsp,0x18
    b852:	mov    rax,QWORD PTR [rdi]
    b855:	mov    esi,DWORD PTR [rdi+0x8]
    b858:	mov    rdi,rax
    b85b:	mov    QWORD PTR [rsp+0x8],rax
    b860:	call   5f50 <xc_map_foreign_pages@plt>
    b865:	test   rax,rax
    b868:	mov    QWORD PTR [rbx+0x198],rax
    b86f:	je     b961 <map_p2m_leaves+0x131>
    b875:	mov    rax,QWORD PTR [rbx+0x188]
    b87c:	lea    rbp,[r12*8+0x0]
    b884:	mov    DWORD PTR [rbx+0x190],r12d
    b88b:	mov    rdi,rbp
    b88e:	add    rax,0x1
    b892:	mov    QWORD PTR [rbx+0xd8],rax
    b899:	call   5ff0 <malloc@plt>
    b89e:	test   rax,rax
    b8a1:	mov    QWORD PTR [rbx+0x1a0],rax
    b8a8:	je     b99e <map_p2m_leaves+0x16e>
    b8ae:	xor    ebp,ebp
    b8b0:	xor    eax,eax
    b8b2:	test   r12,r12
    b8b5:	jne    b8e0 <map_p2m_leaves+0xb0>
    b8b7:	jmp    b950 <map_p2m_leaves+0x120>
    b8bc:	nop    DWORD PTR [rax+0x0]
    b8c0:	add    r15,QWORD PTR [rbx+0x1a0]
    b8c7:	mov    rsi,QWORD PTR [r14]
    b8ca:	mov    rdi,rbx
    b8cd:	call   6450 <mfn_to_pfn@plt>
    b8d2:	mov    QWORD PTR [r15],rax
    b8d5:	lea    eax,[rbp+0x1]
    b8d8:	cmp    rax,r12
    b8db:	mov    rbp,rax
    b8de:	jae    b950 <map_p2m_leaves+0x120>
    b8e0:	lea    r15,[rax*8+0x0]
    b8e8:	mov    rdi,rbx
    b8eb:	lea    r14,[r13+r15*1+0x0]
    b8f0:	mov    rsi,QWORD PTR [r14]
    b8f3:	call   5990 <mfn_in_pseudophysmap@plt>
    b8f8:	test   al,al
    b8fa:	jne    b8c0 <map_p2m_leaves+0x90>
    b8fc:	call   5940 <__errno_location@plt>
    b901:	mov    rdi,QWORD PTR [rsp+0x8]
    b906:	mov    r13d,DWORD PTR [rax]
    b909:	lea    rdx,[rip+0x171f5]        # 22b05 <__PRETTY_FUNCTION__.13083+0x805>
    b910:	mov    r12,rax
    b913:	mov    ecx,ebp
    b915:	xor    eax,eax
    b917:	mov    esi,0x1
    b91c:	call   5d50 <xc_report_error@plt>
    b921:	mov    DWORD PTR [r12],r13d
    b925:	mov    rsi,QWORD PTR [r14]
    b928:	mov    rdi,rbx
    b92b:	call   5d90 <dump_bad_pseudophysmap_entry@plt>
    b930:	mov    DWORD PTR [r12],0x22
    b938:	add    rsp,0x18
    b93c:	mov    eax,0xffffffff
    b941:	pop    rbx
    b942:	pop    rbp
    b943:	pop    r12
    b945:	pop    r13
    b947:	pop    r14
    b949:	pop    r15
    b94b:	ret    
    b94c:	nop    DWORD PTR [rax+0x0]
    b950:	xor    eax,eax
    b952:	add    rsp,0x18
    b956:	pop    rbx
    b957:	pop    rbp
    b958:	pop    r12
    b95a:	pop    r13
    b95c:	pop    r14
    b95e:	pop    r15
    b960:	ret    
    b961:	call   5940 <__errno_location@plt>
    b966:	mov    r14,QWORD PTR [rsp+0x8]
    b96b:	mov    ebp,DWORD PTR [rax]
    b96d:	mov    rbx,rax
    b970:	mov    esi,ebp
    b972:	mov    rdi,r14
    b975:	call   6570 <xc_strerror@plt>
    b97a:	mov    ecx,DWORD PTR [rbx]
    b97c:	lea    rdx,[rip+0x162c5]        # 21c48 <__PRETTY_FUNCTION__.12816+0x508>
    b983:	mov    r8,rax
    b986:	mov    esi,0x1
    b98b:	xor    eax,eax
    b98d:	mov    rdi,r14
    b990:	call   5d50 <xc_report_error@plt>
    b995:	mov    DWORD PTR [rbx],ebp
    b997:	mov    eax,0xffffffff
    b99c:	jmp    b952 <map_p2m_leaves+0x122>
    b99e:	call   5940 <__errno_location@plt>
    b9a3:	mov    rdi,QWORD PTR [rsp+0x8]
    b9a8:	mov    r12d,DWORD PTR [rax]
    b9ab:	lea    rdx,[rip+0x16d86]        # 22738 <__PRETTY_FUNCTION__.13083+0x438>
    b9b2:	mov    rbx,rax
    b9b5:	mov    rcx,rbp
    b9b8:	xor    eax,eax
    b9ba:	mov    esi,0x1
    b9bf:	call   5d50 <xc_report_error@plt>
    b9c4:	mov    DWORD PTR [rbx],r12d
    b9c7:	mov    eax,0xffffffff
    b9cc:	jmp    b952 <map_p2m_leaves+0x122>
    b9ce:	xchg   ax,ax

000000000000b9d0 <copy_mfns_from_guest.isra.0>:
    b9d0:	cmp    edi,0x8
    b9d3:	je     ba08 <copy_mfns_from_guest.isra.0+0x38>
    b9d5:	xor    eax,eax
    b9d7:	test   rcx,rcx
    b9da:	mov    rdi,0xffffffffffffffff
    b9e1:	je     ba01 <copy_mfns_from_guest.isra.0+0x31>
    b9e3:	nop    DWORD PTR [rax+rax*1+0x0]
    b9e8:	mov    r8d,DWORD PTR [rdx+rax*4]
    b9ec:	cmp    r8d,0xffffffff
    b9f0:	cmove  r8,rdi
    b9f4:	mov    QWORD PTR [rsi+rax*8],r8
    b9f8:	add    rax,0x1
    b9fc:	cmp    rcx,rax
    b9ff:	jne    b9e8 <copy_mfns_from_guest.isra.0+0x18>
    ba01:	xor    eax,eax
    ba03:	ret    
    ba04:	nop    DWORD PTR [rax+0x0]
    ba08:	mov    rax,rdx
    ba0b:	lea    rdx,[rcx*8+0x0]
    ba13:	sub    rsp,0x8
    ba17:	mov    rdi,rsi
    ba1a:	mov    rsi,rax
    ba1d:	call   5eb0 <memcpy@plt>
    ba22:	xor    eax,eax
    ba24:	add    rsp,0x8
    ba28:	ret    
    ba29:	nop    DWORD PTR [rax+0x0]

000000000000ba30 <x86_pv_start_of_stream>:
    ba30:	push   r12
    ba32:	push   rbp
    ba33:	xor    ecx,ecx
    ba35:	push   rbx
    ba36:	xor    edx,edx
    ba38:	mov    rbx,rdi
    ba3b:	sub    rsp,0x30
    ba3f:	mov    rax,QWORD PTR fs:0x28
    ba48:	mov    QWORD PTR [rsp+0x28],rax
    ba4d:	xor    eax,eax
    ba4f:	xor    eax,eax
    ba51:	lea    rbp,[rsp+0x10]
    ba56:	lea    r12,[rsp+0x20]
    ba5b:	mov    WORD PTR [rsp+0x26],ax
    ba60:	mov    eax,DWORD PTR [rdi+0x160]
    ba66:	mov    rsi,rbp
    ba69:	mov    DWORD PTR [rsp+0x22],0x0
    ba71:	mov    QWORD PTR [rsp+0x18],r12
    ba76:	mov    BYTE PTR [rsp+0x20],al
    ba7a:	mov    eax,DWORD PTR [rdi+0x164]
    ba80:	mov    BYTE PTR [rsp+0x21],al
    ba84:	movabs rax,0x800000002
    ba8e:	mov    QWORD PTR [rsp+0x10],rax
    ba93:	call   5870 <write_split_record@plt>
    ba98:	test   eax,eax
    ba9a:	je     bab8 <x86_pv_start_of_stream+0x88>
    ba9c:	mov    rdx,QWORD PTR [rsp+0x28]
    baa1:	xor    rdx,QWORD PTR fs:0x28
    baaa:	jne    bb19 <x86_pv_start_of_stream+0xe9>
    baac:	add    rsp,0x30
    bab0:	pop    rbx
    bab1:	pop    rbp
    bab2:	pop    r12
    bab4:	ret    
    bab5:	nop    DWORD PTR [rax]
    bab8:	mov    ecx,DWORD PTR [rbx+0x190]
    babe:	mov    rax,QWORD PTR [rbx+0x188]
    bac5:	mov    rsi,rbp
    bac8:	mov    QWORD PTR [rsp+0x18],r12
    bacd:	mov    r12,QWORD PTR [rbx+0x1a0]
    bad4:	mov    rdi,rbx
    bad7:	mov    DWORD PTR [rsp+0x20],0x0
    badf:	mov    DWORD PTR [rsp+0x24],eax
    bae3:	movabs rax,0x800000003
    baed:	shl    rcx,0x3
    baf1:	mov    rdx,r12
    baf4:	mov    QWORD PTR [rsp+0x10],rax
    baf9:	call   5870 <write_split_record@plt>
    bafe:	cmp    r12,QWORD PTR [rbx+0x1a0]
    bb05:	je     ba9c <x86_pv_start_of_stream+0x6c>
    bb07:	mov    rdi,r12
    bb0a:	mov    DWORD PTR [rsp+0xc],eax
    bb0e:	call   5900 <free@plt>
    bb13:	mov    eax,DWORD PTR [rsp+0xc]
    bb17:	jmp    ba9c <x86_pv_start_of_stream+0x6c>
    bb19:	call   5b80 <__stack_chk_fail@plt>
    bb1e:	xchg   ax,ax

000000000000bb20 <x86_pv_end_of_checkpoint>:
    bb20:	push   rbx
    bb21:	mov    rbx,rdi
    bb24:	sub    rsp,0x20
    bb28:	mov    rax,QWORD PTR fs:0x28
    bb31:	mov    QWORD PTR [rsp+0x18],rax
    bb36:	xor    eax,eax
    bb38:	call   60b0 <write_tsc_info@plt>
    bb3d:	test   eax,eax
    bb3f:	je     bb60 <x86_pv_end_of_checkpoint+0x40>
    bb41:	mov    rdx,QWORD PTR [rsp+0x18]
    bb46:	xor    rdx,QWORD PTR fs:0x28
    bb4f:	jne    bb97 <x86_pv_end_of_checkpoint+0x77>
    bb51:	add    rsp,0x20
    bb55:	pop    rbx
    bb56:	ret    
    bb57:	nop    WORD PTR [rax+rax*1+0x0]
    bb60:	movabs rax,0x100000000007
    bb6a:	xor    ecx,ecx
    bb6c:	xor    edx,edx
    bb6e:	mov    QWORD PTR [rsp],rax
    bb72:	mov    rax,QWORD PTR [rbx+0x1a8]
    bb79:	mov    rsi,rsp
    bb7c:	mov    rdi,rbx
    bb7f:	mov    QWORD PTR [rsp+0x8],rax
    bb84:	call   5870 <write_split_record@plt>
    bb89:	test   eax,eax
    bb8b:	jne    bb41 <x86_pv_end_of_checkpoint+0x21>
    bb8d:	mov    rdi,rbx
    bb90:	call   ae80 <write_all_vcpu_information>
    bb95:	jmp    bb41 <x86_pv_end_of_checkpoint+0x21>
    bb97:	call   5b80 <__stack_chk_fail@plt>
    bb9c:	nop    DWORD PTR [rax+0x0]

000000000000bba0 <x86_pv_pfn_to_gfn>:
    bba0:	cmp    QWORD PTR [rdi+0x188],rsi
    bba7:	jb     bbd5 <x86_pv_pfn_to_gfn+0x35>
    bba9:	cmp    DWORD PTR [rdi+0x160],0x8
    bbb0:	mov    rax,QWORD PTR [rdi+0x198]
    bbb7:	je     bbd0 <x86_pv_pfn_to_gfn+0x30>
    bbb9:	mov    eax,DWORD PTR [rax+rsi*4]
    bbbc:	mov    rdx,0xffffffffffffffff
    bbc3:	cmp    eax,0xffffffff
    bbc6:	cmove  rax,rdx
    bbca:	ret    
    bbcb:	nop    DWORD PTR [rax+rax*1+0x0]
    bbd0:	mov    rax,QWORD PTR [rax+rsi*8]
    bbd4:	ret    
    bbd5:	lea    rcx,[rip+0x16fa4]        # 22b80 <__PRETTY_FUNCTION__.13085>
    bbdc:	lea    rsi,[rip+0x16f40]        # 22b23 <__PRETTY_FUNCTION__.13083+0x823>
    bbe3:	lea    rdi,[rip+0x15b78]        # 21762 <__PRETTY_FUNCTION__.12816+0x22>
    bbea:	sub    rsp,0x8
    bbee:	mov    edx,0x3f3
    bbf3:	call   5c70 <__assert_fail@plt>
    bbf8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bc00 <x86_pv_setup>:
    bc00:	push   r15
    bc02:	push   r14
    bc04:	mov    r15,rdi
    bc07:	push   r13
    bc09:	push   r12
    bc0b:	push   rbp
    bc0c:	push   rbx
    bc0d:	sub    rsp,0x88
    bc14:	call   5cd0 <x86_pv_domain_info@plt>
    bc19:	test   eax,eax
    bc1b:	mov    r14d,eax
    bc1e:	je     bc38 <x86_pv_setup+0x38>
    bc20:	add    rsp,0x88
    bc27:	mov    eax,r14d
    bc2a:	pop    rbx
    bc2b:	pop    rbp
    bc2c:	pop    r12
    bc2e:	pop    r13
    bc30:	pop    r14
    bc32:	pop    r15
    bc34:	ret    
    bc35:	nop    DWORD PTR [rax]
    bc38:	mov    rdi,r15
    bc3b:	call   5da0 <x86_pv_map_m2p@plt>
    bc40:	test   eax,eax
    bc42:	mov    r14d,eax
    bc45:	jne    bc20 <x86_pv_setup+0x20>
    bc47:	mov    rbx,QWORD PTR [r15]
    bc4a:	mov    esi,DWORD PTR [r15+0x8]
    bc4e:	mov    ecx,0x1
    bc53:	mov    r8,QWORD PTR [r15+0x40]
    bc57:	mov    edx,0x1000
    bc5c:	mov    rdi,rbx
    bc5f:	call   6590 <xc_map_foreign_range@plt>
    bc64:	test   rax,rax
    bc67:	mov    r12,rax
    bc6a:	mov    QWORD PTR [r15+0x1a8],rax
    bc71:	je     c5c5 <x86_pv_setup+0x9c5>
    bc77:	mov    r13d,DWORD PTR [r15+0x160]
    bc7e:	mov    QWORD PTR [r15+0x1b0],0xffffffffffffffff
    bc89:	cmp    r13d,0x8
    bc8d:	je     c2e8 <x86_pv_setup+0x6e8>
    bc93:	mov    esi,DWORD PTR [rax+0x90c]
    bc99:	sub    rsi,0x1
    bc9d:	mov    QWORD PTR [r15+0x188],rsi
    bca4:	mov    ebx,DWORD PTR [rax+0x918]
    bcaa:	mov    rax,QWORD PTR [r15]
    bcad:	test   rbx,rbx
    bcb0:	mov    QWORD PTR [rsp+0x8],rax
    bcb5:	jne    bfa0 <x86_pv_setup+0x3a0>
    bcbb:	xor    edx,edx
    bcbd:	mov    eax,0x1000
    bcc2:	mov    QWORD PTR [rsp+0x10],rsi
    bcc7:	div    r13d
    bcca:	mov    ebp,eax
    bccc:	imul   eax,ebp
    bccf:	mov    edx,eax
    bcd1:	mov    DWORD PTR [rsp+0x18],eax
    bcd5:	mov    rax,rsi
    bcd8:	mov    rcx,rdx
    bcdb:	mov    QWORD PTR [rsp+0x20],rdx
    bce0:	xor    edx,edx
    bce2:	div    rcx
    bce5:	lea    ebx,[rax+0x1]
    bce8:	call   5940 <__errno_location@plt>
    bced:	cmp    ebp,ebx
    bcef:	mov    r14,rax
    bcf2:	mov    rsi,QWORD PTR [rsp+0x10]
    bcf7:	jb     c609 <x86_pv_setup+0xa09>
    bcfd:	cmp    r13d,0x8
    bd01:	je     c3a2 <x86_pv_setup+0x7a2>
    bd07:	mov    r12d,DWORD PTR [r12+0x910]
    bd0f:	test   r12,r12
    bd12:	je     c4e3 <x86_pv_setup+0x8e3>
    bd18:	cmp    r12,QWORD PTR [r15+0x168]
    bd1f:	ja     c4e3 <x86_pv_setup+0x8e3>
    bd25:	mov    esi,DWORD PTR [r15+0x8]
    bd29:	mov    rdi,QWORD PTR [rsp+0x8]
    bd2e:	mov    r8,r12
    bd31:	mov    ecx,0x1
    bd36:	mov    edx,0x1000
    bd3b:	call   6590 <xc_map_foreign_range@plt>
    bd40:	test   rax,rax
    bd43:	mov    r13,rax
    bd46:	je     c65b <x86_pv_setup+0xa5b>
    bd4c:	mov    ecx,ebx
    bd4e:	lea    rax,[rcx*8+0x0]
    bd56:	mov    QWORD PTR [rsp+0x10],rcx
    bd5b:	mov    rdi,rax
    bd5e:	mov    QWORD PTR [rsp+0x28],rax
    bd63:	call   5ff0 <malloc@plt>
    bd68:	test   rax,rax
    bd6b:	mov    r12,rax
    bd6e:	mov    rcx,QWORD PTR [rsp+0x10]
    bd73:	je     c6bb <x86_pv_setup+0xabb>
    bd79:	mov    edi,DWORD PTR [r15+0x160]
    bd80:	mov    rdx,r13
    bd83:	mov    rsi,rax
    bd86:	call   b9d0 <copy_mfns_from_guest.isra.0>
    bd8b:	test   eax,eax
    bd8d:	jne    c694 <x86_pv_setup+0xa94>
    bd93:	test   ebx,ebx
    bd95:	je     bdf8 <x86_pv_setup+0x1f8>
    bd97:	mov    rdx,QWORD PTR [r12]
    bd9b:	test   rdx,rdx
    bd9e:	je     c307 <x86_pv_setup+0x707>
    bda4:	mov    rdi,QWORD PTR [r15+0x168]
    bdab:	cmp    rdx,rdi
    bdae:	ja     c50f <x86_pv_setup+0x90f>
    bdb4:	lea    rax,[r12+0x8]
    bdb9:	xor    r8d,r8d
    bdbc:	xor    esi,esi
    bdbe:	jmp    bde3 <x86_pv_setup+0x1e3>
    bdc0:	mov    rcx,QWORD PTR [rax]
    bdc3:	test   rcx,rcx
    bdc6:	je     c310 <x86_pv_setup+0x710>
    bdcc:	cmp    rcx,rdi
    bdcf:	ja     c310 <x86_pv_setup+0x710>
    bdd5:	cmp    rcx,rdx
    bdd8:	mov    rdx,rcx
    bddb:	cmovne esi,r8d
    bddf:	add    rax,0x8
    bde3:	add    r8d,0x1
    bde7:	cmp    ebx,r8d
    bdea:	jne    bdc0 <x86_pv_setup+0x1c0>
    bdec:	add    esi,0x1
    bdef:	imul   esi,DWORD PTR [rsp+0x18]
    bdf4:	mov    DWORD PTR [rsp+0x18],esi
    bdf8:	mov    eax,DWORD PTR [rsp+0x18]
    bdfc:	mov    r9,QWORD PTR [r15+0x188]
    be03:	lea    ecx,[rax-0x1]
    be06:	cmp    rcx,r9
    be09:	jae    be22 <x86_pv_setup+0x222>
    be0b:	mov    rax,rcx
    be0e:	xor    edx,edx
    be10:	mov    QWORD PTR [r15+0x188],rcx
    be17:	div    QWORD PTR [rsp+0x20]
    be1c:	mov    r9,rcx
    be1f:	lea    ebx,[rax+0x1]
    be22:	lea    rax,[rbp+r9*1+0x0]
    be27:	xor    edx,edx
    be29:	mov    rdi,QWORD PTR [rsp+0x8]
    be2e:	sub    rsp,0x8
    be32:	lea    r8,[rip+0x16d22]        # 22b5b <__PRETTY_FUNCTION__.13083+0x85b>
    be39:	xor    ecx,ecx
    be3b:	div    rbp
    be3e:	mov    edx,0x3
    be43:	mov    DWORD PTR [r15+0x190],eax
    be4a:	mov    r10d,DWORD PTR [r14]
    be4d:	mov    rsi,QWORD PTR [rdi+0x8]
    be51:	mov    DWORD PTR [rsp+0x18],r10d
    be56:	push   rax
    be57:	xor    eax,eax
    be59:	mov    QWORD PTR [rsp+0x18],rdi
    be5e:	call   6540 <xc_report@plt>
    be63:	mov    r10d,DWORD PTR [rsp+0x20]
    be68:	xor    edx,edx
    be6a:	mov    rdi,QWORD PTR [rsp+0x18]
    be6f:	mov    rcx,r12
    be72:	mov    r8d,ebx
    be75:	mov    DWORD PTR [r14],r10d
    be78:	mov    rax,QWORD PTR [r15+0x188]
    be7f:	mov    esi,DWORD PTR [r15+0x8]
    be83:	div    rbp
    be86:	mov    edx,0x1
    be8b:	lea    r9d,[rax+0x1]
    be8f:	mov    DWORD PTR [rsp+0x28],r9d
    be94:	call   5f50 <xc_map_foreign_pages@plt>
    be99:	mov    QWORD PTR [rsp+0x20],rax
    be9e:	test   rax,rax
    bea1:	pop    rdx
    bea2:	pop    rcx
    bea3:	mov    r9d,DWORD PTR [rsp+0x18]
    bea8:	je     c713 <x86_pv_setup+0xb13>
    beae:	mov    eax,r9d
    beb1:	mov    DWORD PTR [rsp+0x20],r9d
    beb6:	mov    QWORD PTR [rsp+0x18],rax
    bebb:	shl    rax,0x3
    bebf:	mov    rdi,rax
    bec2:	mov    QWORD PTR [rsp+0x28],rax
    bec7:	call   5ff0 <malloc@plt>
    becc:	test   rax,rax
    becf:	mov    rbp,rax
    bed2:	mov    r9d,DWORD PTR [rsp+0x20]
    bed7:	je     c6e7 <x86_pv_setup+0xae7>
    bedd:	mov    edi,DWORD PTR [r15+0x160]
    bee4:	mov    rcx,QWORD PTR [rsp+0x18]
    bee9:	mov    rsi,rax
    beec:	mov    rdx,QWORD PTR [rsp+0x10]
    bef1:	mov    DWORD PTR [rsp+0x20],r9d
    bef6:	call   b9d0 <copy_mfns_from_guest.isra.0>
    befb:	test   eax,eax
    befd:	jne    c80c <x86_pv_setup+0xc0c>
    bf03:	mov    r9d,DWORD PTR [rsp+0x20]
    bf08:	test   r9d,r9d
    bf0b:	je     bf5a <x86_pv_setup+0x35a>
    bf0d:	mov    rcx,QWORD PTR [rbp+0x0]
    bf11:	test   rcx,rcx
    bf14:	je     c45d <x86_pv_setup+0x85d>
    bf1a:	mov    rdx,QWORD PTR [r15+0x168]
    bf21:	xor    r8d,r8d
    bf24:	lea    rax,[rbp+0x8]
    bf28:	cmp    rcx,rdx
    bf2b:	jbe    bf51 <x86_pv_setup+0x351>
    bf2d:	jmp    c45d <x86_pv_setup+0x85d>
    bf32:	nop    WORD PTR [rax+rax*1+0x0]
    bf38:	mov    rcx,QWORD PTR [rax]
    bf3b:	test   rcx,rcx
    bf3e:	je     c460 <x86_pv_setup+0x860>
    bf44:	add    rax,0x8
    bf48:	cmp    rcx,rdx
    bf4b:	ja     c460 <x86_pv_setup+0x860>
    bf51:	add    r8d,0x1
    bf55:	cmp    r9d,r8d
    bf58:	jne    bf38 <x86_pv_setup+0x338>
    bf5a:	mov    rdx,QWORD PTR [rsp+0x18]
    bf5f:	mov    rsi,rbp
    bf62:	mov    rdi,r15
    bf65:	call   b830 <map_p2m_leaves>
    bf6a:	mov    r14d,eax
    bf6d:	mov    rdi,rbp
    bf70:	call   5900 <free@plt>
    bf75:	mov    rdi,QWORD PTR [rsp+0x10]
    bf7a:	mov    esi,ebx
    bf7c:	shl    rsi,0xc
    bf80:	call   61b0 <munmap@plt>
    bf85:	mov    rdi,r12
    bf88:	call   5900 <free@plt>
    bf8d:	mov    esi,0x1000
    bf92:	mov    rdi,r13
    bf95:	call   61b0 <munmap@plt>
    bf9a:	jmp    bc20 <x86_pv_setup+0x20>
    bf9f:	nop
    bfa0:	mov    rsi,rbx
    bfa3:	mov    rdi,r15
    bfa6:	call   5e50 <cr3_to_mfn@plt>
    bfab:	test   rax,rax
    bfae:	mov    r12,rax
    bfb1:	je     c833 <x86_pv_setup+0xc33>
    bfb7:	call   5940 <__errno_location@plt>
    bfbc:	cmp    r12,QWORD PTR [r15+0x168]
    bfc3:	mov    QWORD PTR [rsp+0x40],rax
    bfc8:	ja     c62c <x86_pv_setup+0xa2c>
    bfce:	mov    esi,DWORD PTR [r15+0x160]
    bfd5:	mov    rax,QWORD PTR [r15+0x1a8]
    bfdc:	mov    rcx,QWORD PTR [r15+0x188]
    bfe3:	cmp    esi,0x8
    bfe6:	je     c3af <x86_pv_setup+0x7af>
    bfec:	mov    ebx,DWORD PTR [rax+0x920]
    bff2:	xor    edx,edx
    bff4:	mov    QWORD PTR [r15+0x1b0],rbx
    bffb:	mov    ebx,DWORD PTR [rax+0x91c]
    c001:	mov    eax,0x1000
    c006:	div    esi
    c008:	mov    QWORD PTR [rsp+0x20],rbx
    c00d:	mov    edx,eax
    c00f:	mov    rax,rcx
    c012:	lea    rcx,[rbx-0x1]
    c016:	mov    rsi,rdx
    c019:	mov    QWORD PTR [rsp+0x78],rdx
    c01e:	xor    edx,edx
    c020:	div    rsi
    c023:	mov    QWORD PTR [rsp+0x70],rcx
    c028:	add    eax,0x1
    c02b:	mov    DWORD PTR [r15+0x190],eax
    c032:	shl    rax,0xc
    c036:	add    rax,rcx
    c039:	cmp    rbx,rax
    c03c:	mov    QWORD PTR [rsp+0x10],rax
    c041:	ja     c489 <x86_pv_setup+0x889>
    c047:	mov    eax,0xf5800000
    c04c:	cmp    QWORD PTR [rsp+0x10],rax
    c051:	ja     c489 <x86_pv_setup+0x889>
    c057:	mov    eax,0xffffffff
    c05c:	mov    QWORD PTR [rsp+0x48],rax
    c061:	mov    rbp,QWORD PTR [rsp+0x40]
    c066:	mov    r14,QWORD PTR [rsp+0x8]
    c06b:	lea    r8,[rip+0x16756]        # 227c8 <__PRETTY_FUNCTION__.13083+0x4c8>
    c072:	xor    ecx,ecx
    c074:	xor    eax,eax
    c076:	mov    edx,0x3
    c07b:	mov    ebx,DWORD PTR [rbp+0x0]
    c07e:	mov    rsi,QWORD PTR [r14+0x8]
    c082:	mov    rdi,r14
    c085:	push   r12
    c087:	push   QWORD PTR [rsp+0x18]
    c08b:	mov    r9,QWORD PTR [rsp+0x30]
    c090:	call   6540 <xc_report@plt>
    c095:	mov    DWORD PTR [rbp+0x0],ebx
    c098:	mov    eax,DWORD PTR [r15+0x190]
    c09f:	lea    r8,[rip+0x16ab5]        # 22b5b <__PRETTY_FUNCTION__.13083+0x85b>
    c0a6:	mov    rsi,QWORD PTR [r14+0x8]
    c0aa:	xor    ecx,ecx
    c0ac:	mov    rdi,r14
    c0af:	mov    edx,0x3
    c0b4:	mov    DWORD PTR [rsp],eax
    c0b7:	mov    r9,QWORD PTR [r15+0x188]
    c0be:	xor    eax,eax
    c0c0:	call   6540 <xc_report@plt>
    c0c5:	mov    DWORD PTR [rbp+0x0],ebx
    c0c8:	mov    edi,0x8
    c0cd:	call   5ff0 <malloc@plt>
    c0d2:	test   rax,rax
    c0d5:	mov    rbp,rax
    c0d8:	pop    rsi
    c0d9:	pop    rdi
    c0da:	je     c7db <x86_pv_setup+0xbdb>
    c0e0:	mov    QWORD PTR [rax],r12
    c0e3:	mov    eax,DWORD PTR [r15+0x164]
    c0ea:	test   eax,eax
    c0ec:	mov    DWORD PTR [rsp+0x18],eax
    c0f0:	je     c592 <x86_pv_setup+0x992>
    c0f6:	lea    eax,[rax+rax*8+0x3]
    c0fa:	xor    r12d,r12d
    c0fd:	xor    r10d,r10d
    c100:	mov    DWORD PTR [rsp+0x68],0x0
    c108:	xor    r13d,r13d
    c10b:	mov    QWORD PTR [rsp+0x30],0x0
    c114:	mov    DWORD PTR [rsp+0x28],eax
    c118:	mov    r14d,r10d
    c11b:	mov    r8d,r12d
    c11e:	mov    QWORD PTR [rsp+0x38],r15
    c123:	mov    rax,QWORD PTR [rsp+0x38]
    c128:	add    r14d,0x1
    c12c:	mov    rdi,QWORD PTR [rsp+0x8]
    c131:	sub    r14d,r8d
    c134:	mov    rcx,rbp
    c137:	mov    edx,0x1
    c13c:	mov    r8d,r14d
    c13f:	mov    DWORD PTR [rsp+0x60],r14d
    c144:	mov    esi,DWORD PTR [rax+0x8]
    c147:	call   5f50 <xc_map_foreign_pages@plt>
    c14c:	test   rax,rax
    c14f:	mov    r12,rax
    c152:	je     c547 <x86_pv_setup+0x947>
    c158:	mov    rdi,rbp
    c15b:	call   5900 <free@plt>
    c160:	mov    rax,QWORD PTR [rsp+0x30]
    c165:	mov    rsi,QWORD PTR [rsp+0x20]
    c16a:	mov    ebx,DWORD PTR [rsp+0x28]
    c16e:	mov    rdx,QWORD PTR [rsp+0x48]
    c173:	sub    rsi,rax
    c176:	and    rsi,rdx
    c179:	mov    ecx,ebx
    c17b:	shr    rsi,cl
    c17e:	mov    rcx,QWORD PTR [rsp+0x10]
    c183:	mov    DWORD PTR [rsp+0x64],esi
    c187:	mov    QWORD PTR [rsp+0x50],rsi
    c18c:	sub    rcx,rax
    c18f:	mov    rax,rcx
    c192:	mov    ecx,ebx
    c194:	and    rax,rdx
    c197:	shr    rax,cl
    c19a:	mov    rcx,rax
    c19d:	mov    r14d,eax
    c1a0:	lea    eax,[rax+0x1]
    c1a3:	mov    QWORD PTR [rsp+0x58],rcx
    c1a8:	mov    ebx,eax
    c1aa:	mov    DWORD PTR [rsp+0x6c],eax
    c1ae:	sub    ebx,esi
    c1b0:	mov    edi,ebx
    c1b2:	shl    rdi,0x3
    c1b6:	call   5ff0 <malloc@plt>
    c1bb:	test   rax,rax
    c1be:	mov    rbp,rax
    c1c1:	je     c51a <x86_pv_setup+0x91a>
    c1c7:	mov    rsi,QWORD PTR [rsp+0x50]
    c1cc:	mov    rcx,QWORD PTR [rsp+0x58]
    c1d1:	mov    r8d,DWORD PTR [rsp+0x64]
    c1d6:	cmp    esi,ecx
    c1d8:	ja     c4c1 <x86_pv_setup+0x8c1>
    c1de:	mov    edi,esi
    c1e0:	movabs rax,0xffffffffff
    c1ea:	mov    rbx,QWORD PTR [r12+rdi*8]
    c1ee:	shr    rbx,0xc
    c1f2:	and    rbx,rax
    c1f5:	je     c4d9 <x86_pv_setup+0x8d9>
    c1fb:	mov    rax,QWORD PTR [rsp+0x38]
    c200:	mov    r10,QWORD PTR [rax+0x168]
    c207:	cmp    rbx,r10
    c20a:	ja     c4ce <x86_pv_setup+0x8ce>
    c210:	cmp    DWORD PTR [rsp+0x18],0x2
    c215:	mov    edx,esi
    c217:	mov    r9d,DWORD PTR [rsp+0x68]
    c21c:	sete   r11b
    c220:	jmp    c257 <x86_pv_setup+0x657>
    c222:	nop    WORD PTR [rax+rax*1+0x0]
    c228:	mov    edi,edx
    c22a:	movabs r9,0xffffffffff
    c234:	mov    rax,QWORD PTR [r12+rdi*8]
    c238:	shr    rax,0xc
    c23c:	and    rax,r9
    c23f:	je     c340 <x86_pv_setup+0x740>
    c245:	cmp    rax,r10
    c248:	ja     c340 <x86_pv_setup+0x740>
    c24e:	mov    r13,rbx
    c251:	mov    r9d,r15d
    c254:	mov    rbx,rax
    c257:	mov    r15d,edx
    c25a:	sub    r15d,r8d
    c25d:	cmp    r13,rbx
    c260:	mov    eax,r15d
    c263:	mov    QWORD PTR [rbp+rax*8+0x0],rbx
    c268:	je     c5ba <x86_pv_setup+0x9ba>
    c26e:	test   r11b,r11b
    c271:	je     c5ba <x86_pv_setup+0x9ba>
    c277:	add    edx,0x1
    c27a:	cmp    r14d,edx
    c27d:	jae    c228 <x86_pv_setup+0x628>
    c27f:	cmp    DWORD PTR [rsp+0x18],0x2
    c284:	je     c74d <x86_pv_setup+0xb4d>
    c28a:	mov    esi,DWORD PTR [rsp+0x60]
    c28e:	mov    rdi,r12
    c291:	mov    DWORD PTR [rsp+0x50],r8d
    c296:	shl    rsi,0xc
    c29a:	call   61b0 <munmap@plt>
    c29f:	mov    esi,DWORD PTR [rsp+0x28]
    c2a3:	mov    rax,QWORD PTR [rsp+0x48]
    c2a8:	mov    r8d,DWORD PTR [rsp+0x50]
    c2ad:	mov    ecx,esi
    c2af:	shr    rax,cl
    c2b2:	shl    rax,cl
    c2b5:	and    rax,QWORD PTR [rsp+0x20]
    c2ba:	cmp    DWORD PTR [rsp+0x18],0x1
    c2bf:	mov    QWORD PTR [rsp+0x30],rax
    c2c4:	je     c61a <x86_pv_setup+0xa1a>
    c2ca:	sub    DWORD PTR [rsp+0x18],0x1
    c2cf:	sub    DWORD PTR [rsp+0x28],0x9
    c2d4:	mov    r13,rbx
    c2d7:	mov    DWORD PTR [rsp+0x68],r15d
    c2dc:	jmp    c123 <x86_pv_setup+0x523>
    c2e1:	nop    DWORD PTR [rax+0x0]
    c2e8:	mov    rax,QWORD PTR [rax+0xc10]
    c2ef:	lea    rsi,[rax-0x1]
    c2f3:	mov    QWORD PTR [r15+0x188],rsi
    c2fa:	mov    rbx,QWORD PTR [r12+0xc28]
    c302:	jmp    bcaa <x86_pv_setup+0xaa>
    c307:	xor    ecx,ecx
    c309:	xor    r8d,r8d
    c30c:	nop    DWORD PTR [rax+0x0]
    c310:	mov    ebp,DWORD PTR [r14]
    c313:	mov    rdi,QWORD PTR [rsp+0x8]
    c318:	lea    rdx,[rip+0x16689]        # 229a8 <__PRETTY_FUNCTION__.13083+0x6a8>
    c31f:	mov    r9d,ebx
    c322:	mov    esi,0x1
    c327:	xor    eax,eax
    c329:	call   5d50 <xc_report_error@plt>
    c32e:	mov    DWORD PTR [r14],ebp
    c331:	mov    r14d,0xffffffff
    c337:	jmp    bf85 <x86_pv_setup+0x385>
    c33c:	nop    DWORD PTR [rax+0x0]
    c340:	mov    r14,r12
    c343:	movzx  ecx,BYTE PTR [rsp+0x28]
    c348:	mov    rsi,QWORD PTR [rsp+0x30]
    c34d:	lea    rdx,[rip+0x16514]        # 22868 <__PRETTY_FUNCTION__.13083+0x568>
    c354:	mov    r9d,DWORD PTR [rsp+0x18]
    c359:	shl    rdi,cl
    c35c:	mov    rcx,rax
    c35f:	xor    eax,eax
    c361:	lea    r8,[rdi+rsi*1]
    c365:	mov    rdi,QWORD PTR [rsp+0x8]
    c36a:	mov    esi,0x1
    c36f:	call   5d50 <xc_report_error@plt>
    c374:	mov    rax,QWORD PTR [rsp+0x40]
    c379:	mov    DWORD PTR [rax],0x22
    c37f:	mov    rdi,rbp
    c382:	call   5900 <free@plt>
    c387:	mov    esi,DWORD PTR [rsp+0x60]
    c38b:	mov    rdi,r14
    c38e:	mov    r14d,0xffffffff
    c394:	shl    rsi,0xc
    c398:	call   61b0 <munmap@plt>
    c39d:	jmp    bc20 <x86_pv_setup+0x20>
    c3a2:	mov    r12,QWORD PTR [r12+0xc18]
    c3aa:	jmp    bd0f <x86_pv_setup+0x10f>
    c3af:	mov    rdx,QWORD PTR [rax+0xc38]
    c3b6:	shr    rcx,0x9
    c3ba:	mov    QWORD PTR [r15+0x1b0],rdx
    c3c1:	mov    rdx,QWORD PTR [rax+0xc30]
    c3c8:	lea    eax,[rcx+0x1]
    c3cb:	mov    DWORD PTR [r15+0x190],eax
    c3d2:	shl    rax,0xc
    c3d6:	lea    rbx,[rdx-0x1]
    c3da:	mov    QWORD PTR [rsp+0x20],rdx
    c3df:	add    rax,rbx
    c3e2:	mov    QWORD PTR [rsp+0x70],rbx
    c3e7:	mov    QWORD PTR [rsp+0x10],rax
    c3ec:	mov    rax,rdx
    c3ef:	sar    rdx,0x2f
    c3f3:	sar    rax,0x3f
    c3f7:	cmp    rdx,rax
    c3fa:	jne    c489 <x86_pv_setup+0x889>
    c400:	mov    rcx,QWORD PTR [rsp+0x10]
    c405:	mov    rdx,rcx
    c408:	mov    rax,rcx
    c40b:	sar    rdx,0x2f
    c40f:	sar    rax,0x3f
    c413:	cmp    rdx,rax
    c416:	jne    c489 <x86_pv_setup+0x889>
    c418:	mov    rdx,QWORD PTR [rsp+0x20]
    c41d:	cmp    rdx,rcx
    c420:	ja     c489 <x86_pv_setup+0x889>
    c422:	movabs rax,0xffff87ffffffffff
    c42c:	cmp    rdx,rax
    c42f:	ja     c440 <x86_pv_setup+0x840>
    c431:	movabs rax,0xffff800000000000
    c43b:	cmp    rcx,rax
    c43e:	ja     c489 <x86_pv_setup+0x889>
    c440:	movabs rax,0xffffffffffff
    c44a:	mov    QWORD PTR [rsp+0x78],0x200
    c453:	mov    QWORD PTR [rsp+0x48],rax
    c458:	jmp    c061 <x86_pv_setup+0x461>
    c45d:	xor    r8d,r8d
    c460:	mov    r15d,DWORD PTR [r14]
    c463:	mov    rdi,QWORD PTR [rsp+0x8]
    c468:	lea    rdx,[rip+0x16601]        # 22a70 <__PRETTY_FUNCTION__.13083+0x770>
    c46f:	mov    esi,0x1
    c474:	xor    eax,eax
    c476:	call   5d50 <xc_report_error@plt>
    c47b:	mov    DWORD PTR [r14],r15d
    c47e:	mov    r14d,0xffffffff
    c484:	jmp    bf6d <x86_pv_setup+0x36d>
    c489:	mov    r8,QWORD PTR [rsp+0x10]
    c48e:	mov    rcx,QWORD PTR [rsp+0x20]
    c493:	lea    rdx,[rip+0x16306]        # 227a0 <__PRETTY_FUNCTION__.13083+0x4a0>
    c49a:	mov    rdi,QWORD PTR [rsp+0x8]
    c49f:	xor    eax,eax
    c4a1:	mov    esi,0x1
    c4a6:	mov    r14d,0xffffffff
    c4ac:	call   5d50 <xc_report_error@plt>
    c4b1:	mov    rax,QWORD PTR [rsp+0x40]
    c4b6:	mov    DWORD PTR [rax],0x22
    c4bc:	jmp    bc20 <x86_pv_setup+0x20>
    c4c1:	mov    r15d,DWORD PTR [rsp+0x68]
    c4c6:	mov    rbx,r13
    c4c9:	jmp    c27f <x86_pv_setup+0x67f>
    c4ce:	mov    r14,r12
    c4d1:	mov    rax,rbx
    c4d4:	jmp    c343 <x86_pv_setup+0x743>
    c4d9:	mov    r14,r12
    c4dc:	xor    eax,eax
    c4de:	jmp    c343 <x86_pv_setup+0x743>
    c4e3:	mov    ebx,DWORD PTR [r14]
    c4e6:	lea    rdx,[rip+0x163f3]        # 228e0 <__PRETTY_FUNCTION__.13083+0x5e0>
    c4ed:	mov    rcx,r12
    c4f0:	mov    rdi,QWORD PTR [rsp+0x8]
    c4f5:	mov    esi,0x1
    c4fa:	xor    eax,eax
    c4fc:	call   5d50 <xc_report_error@plt>
    c501:	mov    DWORD PTR [r14],ebx
    c504:	mov    r14d,0xffffffff
    c50a:	jmp    bc20 <x86_pv_setup+0x20>
    c50f:	mov    rcx,rdx
    c512:	xor    r8d,r8d
    c515:	jmp    c310 <x86_pv_setup+0x710>
    c51a:	mov    r15,QWORD PTR [rsp+0x40]
    c51f:	mov    r14,r12
    c522:	mov    rdi,QWORD PTR [rsp+0x8]
    c527:	lea    rdx,[rip+0x162ca]        # 227f8 <__PRETTY_FUNCTION__.13083+0x4f8>
    c52e:	mov    ecx,ebx
    c530:	mov    esi,0x1
    c535:	xor    eax,eax
    c537:	mov    r12d,DWORD PTR [r15]
    c53a:	call   5d50 <xc_report_error@plt>
    c53f:	mov    DWORD PTR [r15],r12d
    c542:	jmp    c37f <x86_pv_setup+0x77f>
    c547:	mov    r14,QWORD PTR [rsp+0x40]
    c54c:	mov    r15,QWORD PTR [rsp+0x8]
    c551:	mov    ebx,DWORD PTR [r14]
    c554:	mov    rdi,r15
    c557:	mov    esi,ebx
    c559:	call   6570 <xc_strerror@plt>
    c55e:	mov    r8d,DWORD PTR [r14]
    c561:	mov    ecx,DWORD PTR [rsp+0x60]
    c565:	lea    rdx,[rip+0x162bc]        # 22828 <__PRETTY_FUNCTION__.13083+0x528>
    c56c:	mov    r9,rax
    c56f:	mov    esi,0x1
    c574:	mov    rdi,r15
    c577:	xor    eax,eax
    c579:	call   5d50 <xc_report_error@plt>
    c57e:	mov    DWORD PTR [r14],ebx
    c581:	mov    rdi,rbp
    c584:	or     r14d,0xffffffff
    c588:	call   5900 <free@plt>
    c58d:	jmp    bc20 <x86_pv_setup+0x20>
    c592:	xor    r12d,r12d
    c595:	mov    edx,DWORD PTR [rsp+0x18]
    c599:	mov    rdi,r15
    c59c:	mov    rsi,rbp
    c59f:	add    edx,0x1
    c5a2:	sub    edx,r12d
    c5a5:	call   b830 <map_p2m_leaves>
    c5aa:	mov    rdi,rbp
    c5ad:	mov    r14d,eax
    c5b0:	call   5900 <free@plt>
    c5b5:	jmp    bc20 <x86_pv_setup+0x20>
    c5ba:	mov    r15d,r9d
    c5bd:	mov    rbx,r13
    c5c0:	jmp    c277 <x86_pv_setup+0x677>
    c5c5:	call   5940 <__errno_location@plt>
    c5ca:	mov    r12d,DWORD PTR [rax]
    c5cd:	mov    rbp,rax
    c5d0:	mov    rdi,rbx
    c5d3:	or     r14d,0xffffffff
    c5d7:	mov    esi,r12d
    c5da:	call   6570 <xc_strerror@plt>
    c5df:	mov    rcx,QWORD PTR [r15+0x40]
    c5e3:	mov    r8d,DWORD PTR [rbp+0x0]
    c5e7:	lea    rdx,[rip+0x1617a]        # 22768 <__PRETTY_FUNCTION__.13083+0x468>
    c5ee:	mov    r9,rax
    c5f1:	mov    esi,0x1
    c5f6:	mov    rdi,rbx
    c5f9:	xor    eax,eax
    c5fb:	call   5d50 <xc_report_error@plt>
    c600:	mov    DWORD PTR [rbp+0x0],r12d
    c604:	jmp    bc20 <x86_pv_setup+0x20>
    c609:	mov    ebx,DWORD PTR [rax]
    c60b:	mov    rcx,rsi
    c60e:	lea    rdx,[rip+0x162a3]        # 228b8 <__PRETTY_FUNCTION__.13083+0x5b8>
    c615:	jmp    c4f0 <x86_pv_setup+0x8f0>
    c61a:	mov    r12d,r8d
    c61d:	mov    r15,QWORD PTR [rsp+0x38]
    c622:	mov    DWORD PTR [rsp+0x18],r14d
    c627:	jmp    c595 <x86_pv_setup+0x995>
    c62c:	mov    rdi,QWORD PTR [rsp+0x8]
    c631:	lea    rdx,[rip+0x1650c]        # 22b44 <__PRETTY_FUNCTION__.13083+0x844>
    c638:	xor    eax,eax
    c63a:	mov    rcx,rbx
    c63d:	mov    esi,0x1
    c642:	or     r14d,0xffffffff
    c646:	call   5d50 <xc_report_error@plt>
    c64b:	mov    rax,QWORD PTR [rsp+0x40]
    c650:	mov    DWORD PTR [rax],0x22
    c656:	jmp    bc20 <x86_pv_setup+0x20>
    c65b:	mov    ebx,DWORD PTR [r14]
    c65e:	mov    r15,QWORD PTR [rsp+0x8]
    c663:	mov    esi,ebx
    c665:	mov    rdi,r15
    c668:	call   6570 <xc_strerror@plt>
    c66d:	mov    r8d,DWORD PTR [r14]
    c670:	lea    rdx,[rip+0x16291]        # 22908 <__PRETTY_FUNCTION__.13083+0x608>
    c677:	mov    r9,rax
    c67a:	mov    rcx,r12
    c67d:	mov    esi,0x1
    c682:	mov    rdi,r15
    c685:	xor    eax,eax
    c687:	call   5d50 <xc_report_error@plt>
    c68c:	mov    DWORD PTR [r14],ebx
    c68f:	jmp    c504 <x86_pv_setup+0x904>
    c694:	mov    ebx,DWORD PTR [r14]
    c697:	mov    rdi,QWORD PTR [rsp+0x8]
    c69c:	lea    rdx,[rip+0x162d5]        # 22978 <__PRETTY_FUNCTION__.13083+0x678>
    c6a3:	mov    esi,0x1
    c6a8:	xor    eax,eax
    c6aa:	call   5d50 <xc_report_error@plt>
    c6af:	mov    DWORD PTR [r14],ebx
    c6b2:	or     r14d,0xffffffff
    c6b6:	jmp    bf85 <x86_pv_setup+0x385>
    c6bb:	mov    ebx,DWORD PTR [r14]
    c6be:	mov    rcx,QWORD PTR [rsp+0x28]
    c6c3:	lea    rdx,[rip+0x16276]        # 22940 <__PRETTY_FUNCTION__.13083+0x640>
    c6ca:	mov    rdi,QWORD PTR [rsp+0x8]
    c6cf:	mov    esi,0x1
    c6d4:	xor    eax,eax
    c6d6:	call   5d50 <xc_report_error@plt>
    c6db:	mov    DWORD PTR [r14],ebx
    c6de:	or     r14d,0xffffffff
    c6e2:	jmp    bf85 <x86_pv_setup+0x385>
    c6e7:	mov    r15d,DWORD PTR [r14]
    c6ea:	mov    rcx,QWORD PTR [rsp+0x28]
    c6ef:	lea    rdx,[rip+0x16312]        # 22a08 <__PRETTY_FUNCTION__.13083+0x708>
    c6f6:	mov    rdi,QWORD PTR [rsp+0x8]
    c6fb:	mov    esi,0x1
    c700:	xor    eax,eax
    c702:	call   5d50 <xc_report_error@plt>
    c707:	mov    DWORD PTR [r14],r15d
    c70a:	or     r14d,0xffffffff
    c70e:	jmp    bf6d <x86_pv_setup+0x36d>
    c713:	mov    ebx,DWORD PTR [r14]
    c716:	mov    r15,QWORD PTR [rsp+0x8]
    c71b:	mov    esi,ebx
    c71d:	mov    rdi,r15
    c720:	call   6570 <xc_strerror@plt>
    c725:	mov    ecx,DWORD PTR [r14]
    c728:	lea    rdx,[rip+0x162b1]        # 229e0 <__PRETTY_FUNCTION__.13083+0x6e0>
    c72f:	mov    r8,rax
    c732:	mov    esi,0x1
    c737:	mov    rdi,r15
    c73a:	xor    eax,eax
    c73c:	call   5d50 <xc_report_error@plt>
    c741:	mov    DWORD PTR [r14],ebx
    c744:	or     r14d,0xffffffff
    c748:	jmp    bf85 <x86_pv_setup+0x385>
    c74d:	cmp    r15d,ecx
    c750:	cmove  r15d,DWORD PTR [rsp+0x6c]
    c756:	mov    rcx,QWORD PTR [rsp+0x78]
    c75b:	mov    rdi,QWORD PTR [rsp+0x38]
    c760:	mov    eax,r15d
    c763:	shl    rax,0x9
    c767:	imul   rax,rcx
    c76b:	sub    rax,0x1
    c76f:	cmp    rax,QWORD PTR [rdi+0x188]
    c776:	jae    c7a1 <x86_pv_setup+0xba1>
    c778:	mov    QWORD PTR [rdi+0x188],rax
    c77f:	xor    edx,edx
    c781:	add    rax,rcx
    c784:	div    rcx
    c787:	lea    r14d,[r15+rsi*1]
    c78b:	mov    DWORD PTR [rdi+0x190],eax
    c791:	mov    eax,eax
    c793:	shl    rax,0xc
    c797:	add    rax,QWORD PTR [rsp+0x70]
    c79c:	mov    QWORD PTR [rsp+0x10],rax
    c7a1:	mov    esi,DWORD PTR [rsp+0x60]
    c7a5:	mov    rdi,r12
    c7a8:	mov    DWORD PTR [rsp+0x50],r8d
    c7ad:	shl    rsi,0xc
    c7b1:	call   61b0 <munmap@plt>
    c7b6:	mov    esi,DWORD PTR [rsp+0x28]
    c7ba:	mov    rax,QWORD PTR [rsp+0x48]
    c7bf:	mov    r8d,DWORD PTR [rsp+0x50]
    c7c4:	mov    ecx,esi
    c7c6:	shr    rax,cl
    c7c9:	shl    rax,cl
    c7cc:	and    rax,QWORD PTR [rsp+0x20]
    c7d1:	mov    QWORD PTR [rsp+0x30],rax
    c7d6:	jmp    c2ca <x86_pv_setup+0x6ca>
    c7db:	mov    r14,QWORD PTR [rsp+0x40]
    c7e0:	mov    rdi,QWORD PTR [rsp+0x8]
    c7e5:	lea    rdx,[rip+0x1600c]        # 227f8 <__PRETTY_FUNCTION__.13083+0x4f8>
    c7ec:	mov    ecx,0x1
    c7f1:	mov    esi,0x1
    c7f6:	xor    eax,eax
    c7f8:	mov    ebx,DWORD PTR [r14]
    c7fb:	call   5d50 <xc_report_error@plt>
    c800:	mov    DWORD PTR [r14],ebx
    c803:	or     r14d,0xffffffff
    c807:	jmp    bc20 <x86_pv_setup+0x20>
    c80c:	mov    r15d,DWORD PTR [r14]
    c80f:	mov    rdi,QWORD PTR [rsp+0x8]
    c814:	lea    rdx,[rip+0x16225]        # 22a40 <__PRETTY_FUNCTION__.13083+0x740>
    c81b:	mov    esi,0x1
    c820:	xor    eax,eax
    c822:	call   5d50 <xc_report_error@plt>
    c827:	mov    DWORD PTR [r14],r15d
    c82a:	or     r14d,0xffffffff
    c82e:	jmp    bf6d <x86_pv_setup+0x36d>
    c833:	lea    rcx,[rip+0x1635e]        # 22b98 <__PRETTY_FUNCTION__.12916>
    c83a:	lea    rsi,[rip+0x162e2]        # 22b23 <__PRETTY_FUNCTION__.13083+0x823>
    c841:	lea    rdi,[rip+0x162ef]        # 22b37 <__PRETTY_FUNCTION__.13083+0x837>
    c848:	mov    edx,0x145
    c84d:	call   5c70 <__assert_fail@plt>
    c852:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c85c:	nop    DWORD PTR [rax+0x0]

000000000000c860 <x86_hvm_pfn_to_gfn>:
    c860:	mov    rax,rsi
    c863:	ret    
    c864:	xchg   ax,ax
    c866:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c870 <x86_hvm_normalise_page>:
    c870:	xor    eax,eax
    c872:	ret    
    c873:	nop    DWORD PTR [rax]
    c876:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c880 <x86_hvm_start_of_stream>:
    c880:	xor    eax,eax
    c882:	ret    
    c883:	nop    DWORD PTR [rax]
    c886:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c890 <x86_hvm_cleanup>:
    c890:	push   r12
    c892:	push   rbp
    c893:	push   rbx
    c894:	cmp    BYTE PTR [rdi+0x160],0x0
    c89b:	mov    rbx,QWORD PTR [rdi]
    c89e:	je     c8b7 <x86_hvm_cleanup+0x27>
    c8a0:	mov    rax,QWORD PTR [rdi+0xc0]
    c8a7:	xor    esi,esi
    c8a9:	mov    edi,DWORD PTR [rdi+0x8]
    c8ac:	mov    rdx,QWORD PTR [rax+0x30]
    c8b0:	call   QWORD PTR [rax+0x28]
    c8b3:	test   eax,eax
    c8b5:	jne    c8be <x86_hvm_cleanup+0x2e>
    c8b7:	xor    eax,eax
    c8b9:	pop    rbx
    c8ba:	pop    rbp
    c8bb:	pop    r12
    c8bd:	ret    
    c8be:	call   5940 <__errno_location@plt>
    c8c3:	mov    r12d,DWORD PTR [rax]
    c8c6:	mov    rbp,rax
    c8c9:	mov    rdi,rbx
    c8cc:	mov    esi,r12d
    c8cf:	call   6570 <xc_strerror@plt>
    c8d4:	mov    ecx,DWORD PTR [rbp+0x0]
    c8d7:	lea    rdx,[rip+0x162ca]        # 22ba8 <__PRETTY_FUNCTION__.12916+0x10>
    c8de:	mov    r8,rax
    c8e1:	mov    esi,0x1
    c8e6:	xor    eax,eax
    c8e8:	mov    rdi,rbx
    c8eb:	call   5d50 <xc_report_error@plt>
    c8f0:	mov    DWORD PTR [rbp+0x0],r12d
    c8f4:	mov    eax,0xffffffff
    c8f9:	jmp    c8b9 <x86_hvm_cleanup+0x29>
    c8fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c900 <write_hvm_params>:
    c900:	push   r15
    c902:	push   r14
    c904:	mov    r14,rdi
    c907:	push   r13
    c909:	push   r12
    c90b:	push   rbp
    c90c:	push   rbx
    c90d:	mov    ebp,0x1
    c912:	lea    rbx,[rip+0x1644b]        # 22d64 <params.12800+0x4>
    c919:	sub    rsp,0x158
    c920:	mov    r12,QWORD PTR [rdi]
    c923:	mov    rax,QWORD PTR fs:0x28
    c92c:	mov    QWORD PTR [rsp+0x148],rax
    c934:	xor    eax,eax
    c936:	movabs rax,0x80000000a
    c940:	mov    QWORD PTR [rsp+0x28],0x0
    c949:	lea    r13,[rsp+0x8]
    c94e:	mov    QWORD PTR [rsp+0x10],rax
    c953:	lea    rax,[rsp+0x28]
    c958:	mov    QWORD PTR [rsp+0x18],rax
    c95d:	jmp    c99e <write_hvm_params+0x9e>
    c95f:	nop
    c960:	mov    rax,QWORD PTR [rsp+0x8]
    c965:	test   rax,rax
    c968:	je     c988 <write_hvm_params+0x88>
    c96a:	mov    ecx,DWORD PTR [rsp+0x28]
    c96e:	mov    edi,ebp
    c970:	mov    rdx,rcx
    c973:	shl    rcx,0x4
    c977:	add    edx,0x1
    c97a:	mov    QWORD PTR [rsp+rcx*1+0x30],rdi
    c97f:	mov    QWORD PTR [rsp+rcx*1+0x38],rax
    c984:	mov    DWORD PTR [rsp+0x28],edx
    c988:	lea    rax,[rip+0x16415]        # 22da4 <params.12800+0x44>
    c98f:	cmp    rbx,rax
    c992:	je     ca18 <write_hvm_params+0x118>
    c998:	mov    ebp,DWORD PTR [rbx]
    c99a:	add    rbx,0x4
    c99e:	mov    esi,DWORD PTR [r14+0x8]
    c9a2:	mov    rcx,r13
    c9a5:	mov    edx,ebp
    c9a7:	mov    rdi,r12
    c9aa:	call   6550 <xc_hvm_param_get@plt>
    c9af:	test   eax,eax
    c9b1:	mov    r15d,eax
    c9b4:	je     c960 <write_hvm_params+0x60>
    c9b6:	call   5940 <__errno_location@plt>
    c9bb:	mov    r13d,DWORD PTR [rax]
    c9be:	mov    rbx,rax
    c9c1:	mov    rdi,r12
    c9c4:	mov    esi,r13d
    c9c7:	call   6570 <xc_strerror@plt>
    c9cc:	mov    r8d,DWORD PTR [rbx]
    c9cf:	lea    rdx,[rip+0x16202]        # 22bd8 <__PRETTY_FUNCTION__.12916+0x40>
    c9d6:	mov    r9,rax
    c9d9:	mov    ecx,ebp
    c9db:	mov    esi,0x1
    c9e0:	mov    rdi,r12
    c9e3:	xor    eax,eax
    c9e5:	call   5d50 <xc_report_error@plt>
    c9ea:	mov    DWORD PTR [rbx],r13d
    c9ed:	mov    rdi,QWORD PTR [rsp+0x148]
    c9f5:	xor    rdi,QWORD PTR fs:0x28
    c9fe:	mov    eax,r15d
    ca01:	jne    ca75 <write_hvm_params+0x175>
    ca03:	add    rsp,0x158
    ca0a:	pop    rbx
    ca0b:	pop    rbp
    ca0c:	pop    r12
    ca0e:	pop    r13
    ca10:	pop    r14
    ca12:	pop    r15
    ca14:	ret    
    ca15:	nop    DWORD PTR [rax]
    ca18:	mov    eax,DWORD PTR [rsp+0x28]
    ca1c:	test   eax,eax
    ca1e:	je     c9ed <write_hvm_params+0xed>
    ca20:	mov    ecx,eax
    ca22:	lea    rdx,[rsp+0x30]
    ca27:	lea    rsi,[rsp+0x10]
    ca2c:	shl    rcx,0x4
    ca30:	mov    rdi,r14
    ca33:	call   5870 <write_split_record@plt>
    ca38:	test   eax,eax
    ca3a:	mov    r15d,eax
    ca3d:	je     c9ed <write_hvm_params+0xed>
    ca3f:	call   5940 <__errno_location@plt>
    ca44:	mov    ebp,DWORD PTR [rax]
    ca46:	mov    rbx,rax
    ca49:	mov    rdi,r12
    ca4c:	mov    esi,ebp
    ca4e:	call   6570 <xc_strerror@plt>
    ca53:	mov    ecx,DWORD PTR [rbx]
    ca55:	lea    rdx,[rip+0x161ac]        # 22c08 <__PRETTY_FUNCTION__.12916+0x70>
    ca5c:	mov    r8,rax
    ca5f:	mov    esi,0x1
    ca64:	mov    rdi,r12
    ca67:	xor    eax,eax
    ca69:	call   5d50 <xc_report_error@plt>
    ca6e:	mov    DWORD PTR [rbx],ebp
    ca70:	jmp    c9ed <write_hvm_params+0xed>
    ca75:	call   5b80 <__stack_chk_fail@plt>
    ca7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000ca80 <x86_hvm_setup>:
    ca80:	push   r12
    ca82:	push   rbp
    ca83:	push   rbx
    ca84:	mov    rbx,rdi
    ca87:	sub    rsp,0x10
    ca8b:	mov    rbp,QWORD PTR [rdi]
    ca8e:	mov    esi,DWORD PTR [rdi+0x8]
    ca91:	mov    rdx,rsp
    ca94:	mov    rax,QWORD PTR fs:0x28
    ca9d:	mov    QWORD PTR [rsp+0x8],rax
    caa2:	xor    eax,eax
    caa4:	mov    rdi,rbp
    caa7:	call   5dd0 <xc_domain_nr_gpfns@plt>
    caac:	test   eax,eax
    caae:	js     cb34 <x86_hvm_setup+0xb4>
    cab4:	mov    rax,QWORD PTR [rsp]
    cab8:	mov    edi,DWORD PTR [rbx+0x8]
    cabb:	mov    esi,0x1
    cac0:	mov    QWORD PTR [rbx+0xd8],rax
    cac7:	mov    rax,QWORD PTR [rbx+0xc0]
    cace:	mov    rdx,QWORD PTR [rax+0x30]
    cad2:	call   QWORD PTR [rax+0x28]
    cad5:	test   eax,eax
    cad7:	jne    caf9 <x86_hvm_setup+0x79>
    cad9:	mov    BYTE PTR [rbx+0x160],0x1
    cae0:	mov    rcx,QWORD PTR [rsp+0x8]
    cae5:	xor    rcx,QWORD PTR fs:0x28
    caee:	jne    cb58 <x86_hvm_setup+0xd8>
    caf0:	add    rsp,0x10
    caf4:	pop    rbx
    caf5:	pop    rbp
    caf6:	pop    r12
    caf8:	ret    
    caf9:	call   5940 <__errno_location@plt>
    cafe:	mov    r12d,DWORD PTR [rax]
    cb01:	mov    rbx,rax
    cb04:	mov    rdi,rbp
    cb07:	mov    esi,r12d
    cb0a:	call   6570 <xc_strerror@plt>
    cb0f:	mov    ecx,DWORD PTR [rbx]
    cb11:	lea    rdx,[rip+0x16150]        # 22c68 <__PRETTY_FUNCTION__.12916+0xd0>
    cb18:	mov    r8,rax
    cb1b:	xor    eax,eax
    cb1d:	mov    esi,0x1
    cb22:	mov    rdi,rbp
    cb25:	call   5d50 <xc_report_error@plt>
    cb2a:	mov    DWORD PTR [rbx],r12d
    cb2d:	mov    eax,0xffffffff
    cb32:	jmp    cae0 <x86_hvm_setup+0x60>
    cb34:	call   5940 <__errno_location@plt>
    cb39:	mov    r12d,DWORD PTR [rax]
    cb3c:	mov    rbx,rax
    cb3f:	mov    rdi,rbp
    cb42:	mov    esi,r12d
    cb45:	call   6570 <xc_strerror@plt>
    cb4a:	mov    ecx,DWORD PTR [rbx]
    cb4c:	mov    r8,rax
    cb4f:	lea    rdx,[rip+0x160e2]        # 22c38 <__PRETTY_FUNCTION__.12916+0xa0>
    cb56:	jmp    cb1b <x86_hvm_setup+0x9b>
    cb58:	call   5b80 <__stack_chk_fail@plt>
    cb5d:	nop    DWORD PTR [rax]

000000000000cb60 <x86_hvm_end_of_checkpoint>:
    cb60:	push   r13
    cb62:	push   r12
    cb64:	push   rbp
    cb65:	push   rbx
    cb66:	mov    rbp,rdi
    cb69:	sub    rsp,0x28
    cb6d:	mov    rax,QWORD PTR fs:0x28
    cb76:	mov    QWORD PTR [rsp+0x18],rax
    cb7b:	xor    eax,eax
    cb7d:	call   60b0 <write_tsc_info@plt>
    cb82:	test   eax,eax
    cb84:	mov    ebx,eax
    cb86:	je     cbb0 <x86_hvm_end_of_checkpoint+0x50>
    cb88:	mov    rdx,QWORD PTR [rsp+0x18]
    cb8d:	xor    rdx,QWORD PTR fs:0x28
    cb96:	mov    eax,ebx
    cb98:	jne    cd1e <x86_hvm_end_of_checkpoint+0x1be>
    cb9e:	add    rsp,0x28
    cba2:	pop    rbx
    cba3:	pop    rbp
    cba4:	pop    r12
    cba6:	pop    r13
    cba8:	ret    
    cba9:	nop    DWORD PTR [rax+0x0]
    cbb0:	mov    r12,QWORD PTR [rbp+0x0]
    cbb4:	mov    esi,DWORD PTR [rbp+0x8]
    cbb7:	xor    ecx,ecx
    cbb9:	xor    edx,edx
    cbbb:	mov    QWORD PTR [rsp+0x4],0x0
    cbc4:	mov    DWORD PTR [rsp+0xc],0x0
    cbcc:	mov    DWORD PTR [rsp],0x9
    cbd3:	mov    rdi,r12
    cbd6:	call   5c50 <xc_domain_hvm_getcontext@plt>
    cbdb:	test   eax,eax
    cbdd:	mov    ebx,eax
    cbdf:	js     ccda <x86_hvm_end_of_checkpoint+0x17a>
    cbe5:	movsxd rdi,eax
    cbe8:	call   5ff0 <malloc@plt>
    cbed:	test   rax,rax
    cbf0:	mov    QWORD PTR [rsp+0x8],rax
    cbf5:	je     ccfc <x86_hvm_end_of_checkpoint+0x19c>
    cbfb:	mov    esi,DWORD PTR [rbp+0x8]
    cbfe:	mov    ecx,ebx
    cc00:	mov    rdx,rax
    cc03:	mov    rdi,r12
    cc06:	call   5c50 <xc_domain_hvm_getcontext@plt>
    cc0b:	test   eax,eax
    cc0d:	js     cc95 <x86_hvm_end_of_checkpoint+0x135>
    cc13:	xor    ecx,ecx
    cc15:	xor    edx,edx
    cc17:	mov    rsi,rsp
    cc1a:	mov    rdi,rbp
    cc1d:	mov    DWORD PTR [rsp+0x4],eax
    cc21:	call   5870 <write_split_record@plt>
    cc26:	test   eax,eax
    cc28:	mov    ebx,eax
    cc2a:	js     cc50 <x86_hvm_end_of_checkpoint+0xf0>
    cc2c:	mov    rdi,QWORD PTR [rsp+0x8]
    cc31:	call   5900 <free@plt>
    cc36:	test   ebx,ebx
    cc38:	jne    cb88 <x86_hvm_end_of_checkpoint+0x28>
    cc3e:	mov    rdi,rbp
    cc41:	call   c900 <write_hvm_params>
    cc46:	mov    ebx,eax
    cc48:	jmp    cb88 <x86_hvm_end_of_checkpoint+0x28>
    cc4d:	nop    DWORD PTR [rax]
    cc50:	call   5940 <__errno_location@plt>
    cc55:	mov    r13d,DWORD PTR [rax]
    cc58:	mov    rbp,rax
    cc5b:	mov    rdi,r12
    cc5e:	mov    esi,r13d
    cc61:	call   6570 <xc_strerror@plt>
    cc66:	mov    ecx,DWORD PTR [rbp+0x0]
    cc69:	lea    rdx,[rip+0x160b8]        # 22d28 <__PRETTY_FUNCTION__.12916+0x190>
    cc70:	mov    r8,rax
    cc73:	mov    rdi,r12
    cc76:	mov    esi,0x1
    cc7b:	xor    eax,eax
    cc7d:	call   5d50 <xc_report_error@plt>
    cc82:	mov    rdi,QWORD PTR [rsp+0x8]
    cc87:	mov    DWORD PTR [rbp+0x0],r13d
    cc8b:	call   5900 <free@plt>
    cc90:	jmp    cb88 <x86_hvm_end_of_checkpoint+0x28>
    cc95:	call   5940 <__errno_location@plt>
    cc9a:	mov    ebp,DWORD PTR [rax]
    cc9c:	mov    rbx,rax
    cc9f:	mov    rdi,r12
    cca2:	mov    esi,ebp
    cca4:	call   6570 <xc_strerror@plt>
    cca9:	mov    ecx,DWORD PTR [rbx]
    ccab:	lea    rdx,[rip+0x16046]        # 22cf8 <__PRETTY_FUNCTION__.12916+0x160>
    ccb2:	mov    r8,rax
    ccb5:	mov    esi,0x1
    ccba:	mov    rdi,r12
    ccbd:	xor    eax,eax
    ccbf:	call   5d50 <xc_report_error@plt>
    ccc4:	mov    DWORD PTR [rbx],ebp
    ccc6:	mov    rdi,QWORD PTR [rsp+0x8]
    cccb:	mov    ebx,0xffffffff
    ccd0:	call   5900 <free@plt>
    ccd5:	jmp    cb88 <x86_hvm_end_of_checkpoint+0x28>
    ccda:	call   5940 <__errno_location@plt>
    ccdf:	mov    ebp,DWORD PTR [rax]
    cce1:	mov    rbx,rax
    cce4:	mov    rdi,r12
    cce7:	mov    esi,ebp
    cce9:	call   6570 <xc_strerror@plt>
    ccee:	mov    ecx,DWORD PTR [rbx]
    ccf0:	mov    r8,rax
    ccf3:	lea    rdx,[rip+0x15f9e]        # 22c98 <__PRETTY_FUNCTION__.12916+0x100>
    ccfa:	jmp    ccb5 <x86_hvm_end_of_checkpoint+0x155>
    ccfc:	call   5940 <__errno_location@plt>
    cd01:	mov    ebp,DWORD PTR [rax]
    cd03:	mov    rbx,rax
    cd06:	mov    rdi,r12
    cd09:	mov    esi,ebp
    cd0b:	call   6570 <xc_strerror@plt>
    cd10:	mov    ecx,DWORD PTR [rbx]
    cd12:	mov    r8,rax
    cd15:	lea    rdx,[rip+0x15fb4]        # 22cd0 <__PRETTY_FUNCTION__.12916+0x138>
    cd1c:	jmp    ccb5 <x86_hvm_end_of_checkpoint+0x155>
    cd1e:	call   5b80 <__stack_chk_fail@plt>
    cd23:	nop    DWORD PTR [rax]
    cd26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cd30 <x86_hvm_check_vm_state>:
    cd30:	xor    eax,eax
    cd32:	ret    
    cd33:	nop    DWORD PTR [rax]
    cd36:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cd40 <x86_hvm_start_of_checkpoint>:
    cd40:	xor    eax,eax
    cd42:	ret    
    cd43:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cd4d:	nop    DWORD PTR [rax]

000000000000cd50 <populate_pfns>:
    cd50:	push   r15
    cd52:	push   r14
    cd54:	mov    r15,rdi
    cd57:	push   r13
    cd59:	push   r12
    cd5b:	push   rbp
    cd5c:	push   rbx
    cd5d:	mov    ebx,esi
    cd5f:	mov    rbp,rbx
    cd62:	shl    rbx,0x3
    cd66:	sub    rsp,0x48
    cd6a:	mov    rax,QWORD PTR [rdi]
    cd6d:	mov    rdi,rbx
    cd70:	mov    QWORD PTR [rsp+0x18],rdx
    cd75:	mov    QWORD PTR [rsp],rcx
    cd79:	mov    QWORD PTR [rsp+0x38],rax
    cd7e:	call   5ff0 <malloc@plt>
    cd83:	mov    rdi,rbx
    cd86:	mov    r14,rax
    cd89:	mov    QWORD PTR [rsp+0x8],rax
    cd8e:	call   5ff0 <malloc@plt>
    cd93:	test   r14,r14
    cd96:	mov    QWORD PTR [rsp+0x10],rax
    cd9b:	je     d0e1 <populate_pfns+0x391>
    cda1:	test   rax,rax
    cda4:	je     d0e1 <populate_pfns+0x391>
    cdaa:	test   ebp,ebp
    cdac:	mov    r8,QWORD PTR [rsp]
    cdb0:	mov    r9,QWORD PTR [rsp+0x18]
    cdb5:	je     cfa6 <populate_pfns+0x256>
    cdbb:	lea    eax,[rbp-0x1]
    cdbe:	xor    r14d,r14d
    cdc1:	xor    r13d,r13d
    cdc4:	add    rax,0x1
    cdc8:	mov    QWORD PTR [rsp],rax
    cdcc:	mov    rax,r15
    cdcf:	mov    r15d,r14d
    cdd2:	mov    r14,rax
    cdd5:	jmp    ce43 <populate_pfns+0xf3>
    cdd7:	nop    WORD PTR [rax+rax*1+0x0]
    cde0:	lea    ecx,[rbx+0x7]
    cde3:	test   ebx,ebx
    cde5:	mov    edx,ebx
    cde7:	cmovns ecx,ebx
    cdea:	sar    edx,0x1f
    cded:	sar    ecx,0x3
    cdf0:	shr    edx,0x1d
    cdf3:	movsxd rcx,ecx
    cdf6:	add    rdi,rcx
    cdf9:	lea    ecx,[rdx+rbx*1]
    cdfc:	movzx  eax,BYTE PTR [rdi]
    cdff:	and    ecx,0x7
    ce02:	sub    ecx,edx
    ce04:	movsx  edx,al
    ce07:	bt     edx,ecx
    ce0a:	jb     ce35 <populate_pfns+0xe5>
    ce0c:	mov    edx,0x1
    ce11:	mov    rsi,QWORD PTR [rsp+0x8]
    ce16:	shl    rdx,cl
    ce19:	or     eax,edx
    ce1b:	mov    BYTE PTR [rdi],al
    ce1d:	mov    rdx,QWORD PTR [r9+r13*8]
    ce21:	mov    eax,r15d
    ce24:	add    r15d,0x1
    ce28:	mov    QWORD PTR [rsi+rax*8],rdx
    ce2c:	mov    rsi,QWORD PTR [rsp+0x10]
    ce31:	mov    QWORD PTR [rsi+rax*8],rdx
    ce35:	add    r13,0x1
    ce39:	cmp    QWORD PTR [rsp],r13
    ce3d:	je     cf98 <populate_pfns+0x248>
    ce43:	test   r8,r8
    ce46:	je     ce58 <populate_pfns+0x108>
    ce48:	mov    eax,DWORD PTR [r8+r13*4]
    ce4c:	and    eax,0xdfffffff
    ce51:	cmp    eax,0xd0000000
    ce56:	je     ce35 <populate_pfns+0xe5>
    ce58:	mov    rbx,QWORD PTR [r9+r13*8]
    ce5c:	mov    r12,QWORD PTR [r14+0x150]
    ce63:	mov    rdi,QWORD PTR [r14+0x148]
    ce6a:	cmp    rbx,r12
    ce6d:	jbe    cde0 <populate_pfns+0x90>
    ce73:	mov    rax,QWORD PTR [r14]
    ce76:	mov    rbp,rbx
    ce79:	mov    QWORD PTR [rsp+0x28],r8
    ce7e:	shr    rbp,1
    ce81:	mov    QWORD PTR [rsp+0x20],r9
    ce86:	or     rbp,rbx
    ce89:	mov    QWORD PTR [rsp+0x30],rax
    ce8e:	mov    rax,rbp
    ce91:	shr    rax,0x2
    ce95:	or     rbp,rax
    ce98:	mov    rax,rbp
    ce9b:	shr    rax,0x4
    ce9f:	or     rbp,rax
    cea2:	mov    rax,rbp
    cea5:	shr    rax,0x8
    cea9:	or     rbp,rax
    ceac:	mov    rax,rbp
    ceaf:	shr    rax,0x10
    ceb3:	or     rbp,rax
    ceb6:	mov    rax,rbp
    ceb9:	shr    rax,0x20
    cebd:	or     rbp,rax
    cec0:	lea    edx,[rbp+0xf]
    cec3:	mov    eax,ebp
    cec5:	add    eax,0x8
    cec8:	cmovns edx,eax
    cecb:	sar    edx,0x3
    cece:	movsxd rdx,edx
    ced1:	mov    rsi,rdx
    ced4:	mov    QWORD PTR [rsp+0x18],rdx
    ced9:	call   6160 <realloc@plt>
    cede:	test   rax,rax
    cee1:	mov    rcx,rax
    cee4:	mov    rdx,QWORD PTR [rsp+0x18]
    cee9:	mov    r9,QWORD PTR [rsp+0x20]
    ceee:	mov    r8,QWORD PTR [rsp+0x28]
    cef3:	je     d0b1 <populate_pfns+0x361>
    cef9:	lea    edi,[r12+0xf]
    cefe:	add    r12d,0x8
    cf02:	mov    QWORD PTR [rsp+0x28],r8
    cf07:	mov    QWORD PTR [rsp+0x20],r9
    cf0c:	mov    QWORD PTR [rsp+0x18],rcx
    cf11:	cmovns edi,r12d
    cf15:	xor    esi,esi
    cf17:	sar    edi,0x3
    cf1a:	movsxd rdi,edi
    cf1d:	sub    rdx,rdi
    cf20:	add    rdi,rcx
    cf23:	call   5ca0 <memset@plt>
    cf28:	lea    edi,[rbx+0x7]
    cf2b:	test   ebx,ebx
    cf2d:	mov    rcx,QWORD PTR [rsp+0x18]
    cf32:	mov    edx,ebx
    cf34:	mov    QWORD PTR [r14+0x150],rbp
    cf3b:	mov    r9,QWORD PTR [rsp+0x20]
    cf40:	cmovns edi,ebx
    cf43:	sar    edx,0x1f
    cf46:	mov    r8,QWORD PTR [rsp+0x28]
    cf4b:	sar    edi,0x3
    cf4e:	mov    QWORD PTR [r14+0x148],rcx
    cf55:	shr    edx,0x1d
    cf58:	movsxd rdi,edi
    cf5b:	add    ebx,edx
    cf5d:	add    rdi,rcx
    cf60:	and    ebx,0x7
    cf63:	movzx  eax,BYTE PTR [rdi]
    cf66:	sub    ebx,edx
    cf68:	mov    ecx,ebx
    cf6a:	movsx  edx,al
    cf6d:	bt     edx,ebx
    cf70:	jae    ce0c <populate_pfns+0xbc>
    cf76:	lea    rcx,[rip+0x16793]        # 23710 <__PRETTY_FUNCTION__.13419>
    cf7d:	lea    rsi,[rip+0x1664e]        # 235d2 <params.12800+0x872>
    cf84:	lea    rdi,[rip+0x15e7d]        # 22e08 <params.12800+0xa8>
    cf8b:	mov    edx,0x7b
    cf90:	call   5c70 <__assert_fail@plt>
    cf95:	nop    DWORD PTR [rax]
    cf98:	mov    rax,r14
    cf9b:	mov    r14d,r15d
    cf9e:	test   r14d,r14d
    cfa1:	mov    r15,rax
    cfa4:	jne    cfd0 <populate_pfns+0x280>
    cfa6:	xor    ebx,ebx
    cfa8:	mov    rdi,QWORD PTR [rsp+0x10]
    cfad:	call   5900 <free@plt>
    cfb2:	mov    rdi,QWORD PTR [rsp+0x8]
    cfb7:	call   5900 <free@plt>
    cfbc:	add    rsp,0x48
    cfc0:	mov    eax,ebx
    cfc2:	pop    rbx
    cfc3:	pop    rbp
    cfc4:	pop    r12
    cfc6:	pop    r13
    cfc8:	pop    r14
    cfca:	pop    r15
    cfcc:	ret    
    cfcd:	nop    DWORD PTR [rax]
    cfd0:	mov    rbp,QWORD PTR [rsp+0x8]
    cfd5:	mov    esi,DWORD PTR [rax+0x8]
    cfd8:	xor    r8d,r8d
    cfdb:	mov    rdi,QWORD PTR [rsp+0x38]
    cfe0:	xor    ecx,ecx
    cfe2:	mov    edx,r14d
    cfe5:	mov    r9,rbp
    cfe8:	call   5d20 <xc_domain_populate_physmap_exact@plt>
    cfed:	test   eax,eax
    cfef:	mov    ebx,eax
    cff1:	jne    d03b <populate_pfns+0x2eb>
    cff3:	mov    rdx,QWORD PTR [rbp+0x0]
    cff7:	cmp    rdx,0xffffffffffffffff
    cffb:	je     d07b <populate_pfns+0x32b>
    cffd:	lea    ebp,[r14-0x1]
    d001:	xor    ebx,ebx
    d003:	mov    r14,QWORD PTR [rsp+0x8]
    d008:	mov    r13,QWORD PTR [rsp+0x10]
    d00d:	jmp    d01e <populate_pfns+0x2ce>
    d00f:	nop
    d010:	add    rbx,0x1
    d014:	mov    rdx,QWORD PTR [r14+rbx*8]
    d018:	cmp    rdx,0xffffffffffffffff
    d01c:	je     d080 <populate_pfns+0x330>
    d01e:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
    d023:	mov    rdi,r15
    d026:	lea    r12d,[rbx+0x1]
    d02a:	call   QWORD PTR [r15+0x88]
    d031:	cmp    rbp,rbx
    d034:	jne    d010 <populate_pfns+0x2c0>
    d036:	jmp    cfa6 <populate_pfns+0x256>
    d03b:	call   5940 <__errno_location@plt>
    d040:	mov    r15,QWORD PTR [rsp+0x38]
    d045:	mov    r12d,DWORD PTR [rax]
    d048:	mov    rbp,rax
    d04b:	mov    esi,r12d
    d04e:	mov    rdi,r15
    d051:	call   6570 <xc_strerror@plt>
    d056:	mov    ecx,DWORD PTR [rbp+0x0]
    d059:	lea    rdx,[rip+0x15dd8]        # 22e38 <params.12800+0xd8>
    d060:	mov    r8,rax
    d063:	mov    esi,0x1
    d068:	mov    rdi,r15
    d06b:	xor    eax,eax
    d06d:	call   5d50 <xc_report_error@plt>
    d072:	mov    DWORD PTR [rbp+0x0],r12d
    d076:	jmp    cfa8 <populate_pfns+0x258>
    d07b:	xor    r12d,r12d
    d07e:	xchg   ax,ax
    d080:	call   5940 <__errno_location@plt>
    d085:	mov    rdi,QWORD PTR [rsp+0x38]
    d08a:	mov    ebp,DWORD PTR [rax]
    d08c:	lea    rdx,[rip+0x15dcd]        # 22e60 <params.12800+0x100>
    d093:	mov    rbx,rax
    d096:	mov    ecx,r12d
    d099:	mov    esi,0x1
    d09e:	xor    eax,eax
    d0a0:	call   5d50 <xc_report_error@plt>
    d0a5:	mov    DWORD PTR [rbx],ebp
    d0a7:	mov    ebx,0xffffffff
    d0ac:	jmp    cfa8 <populate_pfns+0x258>
    d0b1:	call   5940 <__errno_location@plt>
    d0b6:	mov    rdi,QWORD PTR [rsp+0x30]
    d0bb:	lea    rdx,[rip+0x15d1e]        # 22de0 <params.12800+0x80>
    d0c2:	mov    rbx,rax
    d0c5:	mov    esi,0x1
    d0ca:	xor    eax,eax
    d0cc:	call   5d50 <xc_report_error@plt>
    d0d1:	mov    DWORD PTR [rbx],0xc
    d0d7:	mov    ebx,0xffffffff
    d0dc:	jmp    cfa8 <populate_pfns+0x258>
    d0e1:	call   5940 <__errno_location@plt>
    d0e6:	lea    ecx,[rbp+rbp*1+0x0]
    d0ea:	mov    r12d,DWORD PTR [rax]
    d0ed:	mov    rdi,QWORD PTR [rsp+0x38]
    d0f2:	lea    rdx,[rip+0x15caf]        # 22da8 <params.12800+0x48>
    d0f9:	mov    rbx,rax
    d0fc:	mov    esi,0x1
    d101:	shl    rcx,0x3
    d105:	xor    eax,eax
    d107:	call   5d50 <xc_report_error@plt>
    d10c:	mov    DWORD PTR [rbx],r12d
    d10f:	mov    ebx,0xffffffff
    d114:	jmp    cfa8 <populate_pfns+0x258>
    d119:	nop    DWORD PTR [rax+0x0]

000000000000d120 <process_record>:
    d120:	push   r15
    d122:	push   r14
    d124:	mov    r14,rdi
    d127:	push   r13
    d129:	push   r12
    d12b:	push   rbp
    d12c:	push   rbx
    d12d:	mov    rbx,rsi
    d130:	sub    rsp,0xa8
    d137:	mov    rax,QWORD PTR fs:0x28
    d140:	mov    QWORD PTR [rsp+0x98],rax
    d148:	xor    eax,eax
    d14a:	mov    rax,QWORD PTR [rdi]
    d14d:	mov    QWORD PTR [rsp+0x20],rax
    d152:	mov    eax,DWORD PTR [rsi]
    d154:	cmp    eax,0x1
    d157:	je     d250 <process_record+0x130>
    d15d:	mov    ebp,0x0
    d162:	jb     d1c0 <process_record+0xa0>
    d164:	cmp    eax,0xd
    d167:	je     d200 <process_record+0xe0>
    d16d:	cmp    eax,0xe
    d170:	jne    d240 <process_record+0x120>
    d176:	mov    esi,DWORD PTR [rdi+0x10c]
    d17c:	test   esi,esi
    d17e:	je     d751 <process_record+0x631>
    d184:	mov    rax,QWORD PTR [rdi+0xc0]
    d18b:	mov    rdi,QWORD PTR [rax+0x28]
    d18f:	call   QWORD PTR [rax+0x10]
    d192:	cmp    eax,0x1
    d195:	je     d3a0 <process_record+0x280>
    d19b:	cmp    eax,0x2
    d19e:	jne    d440 <process_record+0x320>
    d1a4:	cmp    BYTE PTR [r14+0x110],0x0
    d1ac:	je     d440 <process_record+0x320>
    d1b2:	mov    ebp,0x2
    d1b7:	nop    WORD PTR [rax+rax*1+0x0]
    d1c0:	mov    rdi,QWORD PTR [rbx+0x8]
    d1c4:	call   5900 <free@plt>
    d1c9:	mov    rcx,QWORD PTR [rsp+0x98]
    d1d1:	xor    rcx,QWORD PTR fs:0x28
    d1da:	mov    QWORD PTR [rbx+0x8],0x0
    d1e2:	mov    eax,ebp
    d1e4:	jne    de07 <process_record+0xce7>
    d1ea:	add    rsp,0xa8
    d1f1:	pop    rbx
    d1f2:	pop    rbp
    d1f3:	pop    r12
    d1f5:	pop    r13
    d1f7:	pop    r14
    d1f9:	pop    r15
    d1fb:	ret    
    d1fc:	nop    DWORD PTR [rax+0x0]
    d200:	call   5940 <__errno_location@plt>
    d205:	mov    rdi,QWORD PTR [rsp+0x20]
    d20a:	mov    r13d,DWORD PTR [rax]
    d20d:	lea    r8,[rip+0x163ce]        # 235e2 <params.12800+0x882>
    d214:	mov    r12,rax
    d217:	xor    ecx,ecx
    d219:	mov    edx,0x3
    d21e:	xor    eax,eax
    d220:	mov    rsi,QWORD PTR [rdi+0x8]
    d224:	call   6540 <xc_report@plt>
    d229:	mov    DWORD PTR [r12],r13d
    d22d:	mov    BYTE PTR [r14+0x158],0x1
    d235:	jmp    d1c0 <process_record+0xa0>
    d237:	nop    WORD PTR [rax+rax*1+0x0]
    d240:	call   QWORD PTR [rdi+0xa8]
    d246:	mov    ebp,eax
    d248:	jmp    d1c0 <process_record+0xa0>
    d24d:	nop    DWORD PTR [rax]
    d250:	mov    r13d,DWORD PTR [rsi+0x4]
    d254:	mov    r12,QWORD PTR [rsi+0x8]
    d258:	cmp    r13d,0x7
    d25c:	jbe    d705 <process_record+0x5e5>
    d262:	mov    r15d,DWORD PTR [r12]
    d266:	test   r15d,r15d
    d269:	je     dcd0 <process_record+0xbb0>
    d26f:	mov    ebp,r15d
    d272:	mov    eax,r13d
    d275:	lea    rdi,[rbp*8+0x8]
    d27d:	cmp    rax,rdi
    d280:	jb     dbec <process_record+0xacc>
    d286:	sub    rdi,0x8
    d28a:	call   5ff0 <malloc@plt>
    d28f:	lea    rdi,[rbp*4+0x0]
    d297:	mov    r13,rax
    d29a:	mov    QWORD PTR [rsp+0x8],rax
    d29f:	call   5ff0 <malloc@plt>
    d2a4:	test   r13,r13
    d2a7:	mov    QWORD PTR [rsp+0x10],rax
    d2ac:	je     dd13 <process_record+0xbf3>
    d2b2:	test   rax,rax
    d2b5:	je     dd13 <process_record+0xbf3>
    d2bb:	xor    r13d,r13d
    d2be:	mov    QWORD PTR [rsp+0x28],rbx
    d2c3:	mov    DWORD PTR [rsp+0x18],0x0
    d2cb:	mov    rbx,r12
    d2ce:	mov    r12d,r13d
    d2d1:	jmp    d31f <process_record+0x1ff>
    d2d3:	nop    DWORD PTR [rax+rax*1+0x0]
    d2d8:	mov    edx,DWORD PTR [rbp+0xc]
    d2db:	and    edx,0xf0000000
    d2e1:	mov    eax,edx
    d2e3:	shr    eax,0x1c
    d2e6:	sub    eax,0x5
    d2e9:	cmp    eax,0x3
    d2ec:	jbe    d5e8 <process_record+0x4c8>
    d2f2:	mov    rax,QWORD PTR [rsp+0x8]
    d2f7:	cmp    edx,0xd0000000
    d2fd:	adc    DWORD PTR [rsp+0x18],0x0
    d302:	add    r12d,0x1
    d306:	mov    QWORD PTR [rax+r13*8],r15
    d30a:	mov    rax,QWORD PTR [rsp+0x10]
    d30f:	mov    DWORD PTR [rax+r13*4],edx
    d313:	mov    r11d,DWORD PTR [rbx]
    d316:	cmp    r12d,r11d
    d319:	jae    d450 <process_record+0x330>
    d31f:	mov    r13d,r12d
    d322:	movabs r15,0xfffffffffffff
    d32c:	mov    rdi,r14
    d32f:	lea    rbp,[rbx+r13*8]
    d333:	and    r15,QWORD PTR [rbp+0x8]
    d337:	mov    rsi,r15
    d33a:	call   QWORD PTR [r14+0x80]
    d341:	test   al,al
    d343:	jne    d2d8 <process_record+0x1b8>
    d345:	call   5940 <__errno_location@plt>
    d34a:	mov    r13d,r12d
    d34d:	mov    rdi,QWORD PTR [rsp+0x20]
    d352:	mov    r12d,DWORD PTR [rax]
    d355:	lea    rdx,[rip+0x15c0c]        # 22f68 <params.12800+0x208>
    d35c:	mov    rbp,rax
    d35f:	mov    r8d,r13d
    d362:	mov    rcx,r15
    d365:	mov    esi,0x1
    d36a:	xor    eax,eax
    d36c:	mov    rbx,QWORD PTR [rsp+0x28]
    d371:	call   5d50 <xc_report_error@plt>
    d376:	mov    DWORD PTR [rbp+0x0],r12d
    d37a:	mov    ebp,0xffffffff
    d37f:	mov    rdi,QWORD PTR [rsp+0x10]
    d384:	call   5900 <free@plt>
    d389:	mov    rdi,QWORD PTR [rsp+0x8]
    d38e:	call   5900 <free@plt>
    d393:	jmp    d1c0 <process_record+0xa0>
    d398:	nop    DWORD PTR [rax+rax*1+0x0]
    d3a0:	cmp    BYTE PTR [r14+0x110],0x0
    d3a8:	jne    d638 <process_record+0x518>
    d3ae:	mov    BYTE PTR [r14+0x110],0x1
    d3b6:	xor    ebp,ebp
    d3b8:	cmp    DWORD PTR [r14+0x10c],0x2
    d3c0:	jne    d1c0 <process_record+0xa0>
    d3c6:	mov    rdi,r14
    d3c9:	call   QWORD PTR [r14+0xb0]
    d3d0:	test   eax,eax
    d3d2:	mov    ebp,eax
    d3d4:	jne    d1c0 <process_record+0xa0>
    d3da:	mov    rax,QWORD PTR [r14+0xc0]
    d3e1:	mov    rsi,QWORD PTR [r14+0x130]
    d3e8:	mov    rdi,QWORD PTR [r14+0x128]
    d3ef:	mov    rdx,QWORD PTR [rax+0x28]
    d3f3:	call   QWORD PTR [rax+0x20]
    d3f6:	mov    rax,QWORD PTR [r14+0xc0]
    d3fd:	mov    rdi,QWORD PTR [rax+0x28]
    d401:	call   QWORD PTR [rax+0x8]
    d404:	cmp    eax,0x1
    d407:	jne    d432 <process_record+0x312>
    d409:	mov    rax,QWORD PTR [r14+0xc0]
    d410:	mov    rdi,QWORD PTR [rax+0x28]
    d414:	call   QWORD PTR [rax+0x18]
    d417:	cmp    eax,0x1
    d41a:	jne    d432 <process_record+0x312>
    d41c:	mov    rax,QWORD PTR [r14+0xc0]
    d423:	mov    rdi,QWORD PTR [rax+0x28]
    d427:	call   QWORD PTR [rax]
    d429:	cmp    eax,0x1
    d42c:	je     d9bb <process_record+0x89b>
    d432:	cmp    eax,0x2
    d435:	je     d1b2 <process_record+0x92>
    d43b:	nop    DWORD PTR [rax+rax*1+0x0]
    d440:	mov    ebp,0xffffffff
    d445:	jmp    d1c0 <process_record+0xa0>
    d44a:	nop    WORD PTR [rax+rax*1+0x0]
    d450:	mov    ebp,DWORD PTR [rsp+0x18]
    d454:	mov    r15d,r11d
    d457:	mov    r12,rbx
    d45a:	lea    rax,[r15*8+0x0]
    d462:	mov    rbx,QWORD PTR [rsp+0x28]
    d467:	mov    QWORD PTR [rsp+0x38],rax
    d46c:	mov    rax,rbp
    d46f:	mov    edx,DWORD PTR [rbx+0x4]
    d472:	shl    rax,0x9
    d476:	lea    rax,[r15+rax*1+0x1]
    d47b:	shl    rax,0x3
    d47f:	cmp    rdx,rax
    d482:	jne    dc80 <process_record+0xb60>
    d488:	mov    rax,QWORD PTR [r14]
    d48b:	lea    rdi,[r15*8+0x0]
    d493:	mov    DWORD PTR [rsp+0x30],r11d
    d498:	mov    QWORD PTR [rsp+0x28],rax
    d49d:	call   5ff0 <malloc@plt>
    d4a2:	lea    rdi,[r15*4+0x0]
    d4aa:	mov    rbp,rax
    d4ad:	mov    QWORD PTR [rsp+0x18],rax
    d4b2:	call   5ff0 <malloc@plt>
    d4b7:	test   rbp,rbp
    d4ba:	mov    QWORD PTR [rsp+0x20],rax
    d4bf:	je     dd83 <process_record+0xc63>
    d4c5:	test   rax,rax
    d4c8:	mov    r11d,DWORD PTR [rsp+0x30]
    d4cd:	je     dd83 <process_record+0xc63>
    d4d3:	mov    rcx,QWORD PTR [rsp+0x10]
    d4d8:	mov    rdx,QWORD PTR [rsp+0x8]
    d4dd:	mov    esi,r11d
    d4e0:	mov    rdi,r14
    d4e3:	mov    DWORD PTR [rsp+0x30],r11d
    d4e8:	call   5b70 <populate_pfns@plt>
    d4ed:	test   eax,eax
    d4ef:	mov    ebp,eax
    d4f1:	mov    r11d,DWORD PTR [rsp+0x30]
    d4f6:	jne    d6b8 <process_record+0x598>
    d4fc:	test   r11d,r11d
    d4ff:	je     d6ec <process_record+0x5cc>
    d505:	mov    rax,QWORD PTR [rsp+0x10]
    d50a:	lea    ecx,[r11-0x1]
    d50e:	mov    rsi,QWORD PTR [rsp+0x8]
    d513:	mov    QWORD PTR [rsp+0x30],r12
    d518:	mov    DWORD PTR [rsp+0x48],ebp
    d51c:	xor    r13d,r13d
    d51f:	mov    QWORD PTR [rsp+0x58],rcx
    d524:	mov    DWORD PTR [rsp+0x40],r11d
    d529:	lea    rcx,[rax+rcx*4+0x4]
    d52e:	mov    QWORD PTR [rsp+0x60],rax
    d533:	mov    r12,rax
    d536:	mov    r15,rsi
    d539:	mov    QWORD PTR [rsp+0x50],rbx
    d53e:	mov    rbp,rcx
    d541:	jmp    d5a2 <process_record+0x482>
    d543:	nop    DWORD PTR [rax+rax*1+0x0]
    d548:	cmp    edx,0x10000000
    d54e:	je     d570 <process_record+0x450>
    d550:	jbe    d8e8 <process_record+0x7c8>
    d556:	cmp    edx,0x20000000
    d55c:	je     d570 <process_record+0x450>
    d55e:	cmp    edx,0x30000000
    d564:	jne    d591 <process_record+0x471>
    d566:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d570:	mov    rcx,QWORD PTR [rsp+0x18]
    d575:	mov    eax,r13d
    d578:	lea    ebx,[r13+0x1]
    d57c:	mov    rsi,QWORD PTR [r15]
    d57f:	mov    rdi,r14
    d582:	lea    r13,[rcx+rax*8]
    d586:	call   QWORD PTR [r14+0x78]
    d58a:	mov    QWORD PTR [r13+0x0],rax
    d58e:	mov    r13d,ebx
    d591:	add    r12,0x4
    d595:	add    r15,0x8
    d599:	cmp    rbp,r12
    d59c:	je     d780 <process_record+0x660>
    d5a2:	mov    edx,DWORD PTR [r12]
    d5a6:	mov    rsi,QWORD PTR [r15]
    d5a9:	mov    rdi,r14
    d5ac:	call   QWORD PTR [r14+0x90]
    d5b3:	mov    edx,DWORD PTR [r12]
    d5b7:	cmp    edx,0x40000000
    d5bd:	je     d570 <process_record+0x450>
    d5bf:	jbe    d548 <process_record+0x428>
    d5c1:	cmp    edx,0xa0000000
    d5c7:	je     d570 <process_record+0x450>
    d5c9:	jbe    d8f8 <process_record+0x7d8>
    d5cf:	cmp    edx,0xb0000000
    d5d5:	je     d570 <process_record+0x450>
    d5d7:	cmp    edx,0xc0000000
    d5dd:	je     d570 <process_record+0x450>
    d5df:	jmp    d591 <process_record+0x471>
    d5e1:	nop    DWORD PTR [rax+0x0]
    d5e8:	mov    DWORD PTR [rsp+0x18],edx
    d5ec:	mov    r13d,r12d
    d5ef:	mov    rbx,QWORD PTR [rsp+0x28]
    d5f4:	call   5940 <__errno_location@plt>
    d5f9:	mov    edx,DWORD PTR [rsp+0x18]
    d5fd:	mov    r12d,DWORD PTR [rax]
    d600:	mov    rbp,rax
    d603:	mov    rdi,QWORD PTR [rsp+0x20]
    d608:	mov    r9d,r13d
    d60b:	mov    r8,r15
    d60e:	mov    esi,0x1
    d613:	xor    eax,eax
    d615:	mov    ecx,edx
    d617:	lea    rdx,[rip+0x1597a]        # 22f98 <params.12800+0x238>
    d61e:	call   5d50 <xc_report_error@plt>
    d623:	mov    DWORD PTR [rbp+0x0],r12d
    d627:	mov    ebp,0xffffffff
    d62c:	jmp    d37f <process_record+0x25f>
    d631:	nop    DWORD PTR [rax+0x0]
    d638:	call   5940 <__errno_location@plt>
    d63d:	mov    rdi,QWORD PTR [rsp+0x20]
    d642:	mov    ebp,DWORD PTR [rax]
    d644:	lea    r8,[rip+0x15fab]        # 235f6 <params.12800+0x896>
    d64b:	xor    ecx,ecx
    d64d:	mov    r12,rax
    d650:	mov    edx,0x5
    d655:	xor    eax,eax
    d657:	mov    rsi,QWORD PTR [rdi+0x8]
    d65b:	call   6540 <xc_report@plt>
    d660:	mov    DWORD PTR [r12],ebp
    d664:	mov    ecx,DWORD PTR [r14+0x124]
    d66b:	test   ecx,ecx
    d66d:	je     d95c <process_record+0x83c>
    d673:	xor    r13d,r13d
    d676:	jmp    d691 <process_record+0x571>
    d678:	nop    DWORD PTR [rax+rax*1+0x0]
    d680:	add    r13d,0x1
    d684:	cmp    r13d,DWORD PTR [r14+0x124]
    d68b:	jae    d95c <process_record+0x83c>
    d691:	mov    esi,r13d
    d694:	mov    rdi,r14
    d697:	shl    rsi,0x4
    d69b:	add    rsi,QWORD PTR [r14+0x118]
    d6a2:	call   d120 <process_record>
    d6a7:	test   eax,eax
    d6a9:	je     d680 <process_record+0x560>
    d6ab:	mov    ebp,eax
    d6ad:	jmp    d1c0 <process_record+0xa0>
    d6b2:	nop    WORD PTR [rax+rax*1+0x0]
    d6b8:	mov    DWORD PTR [rsp+0x30],r11d
    d6bd:	call   5940 <__errno_location@plt>
    d6c2:	mov    r11d,DWORD PTR [rsp+0x30]
    d6c7:	mov    r14d,DWORD PTR [rax]
    d6ca:	lea    rdx,[rip+0x15977]        # 23048 <params.12800+0x2e8>
    d6d1:	mov    rdi,QWORD PTR [rsp+0x28]
    d6d6:	mov    r12,rax
    d6d9:	mov    esi,0x1
    d6de:	xor    eax,eax
    d6e0:	mov    ecx,r11d
    d6e3:	call   5d50 <xc_report_error@plt>
    d6e8:	mov    DWORD PTR [r12],r14d
    d6ec:	mov    rdi,QWORD PTR [rsp+0x20]
    d6f1:	call   5900 <free@plt>
    d6f6:	mov    rdi,QWORD PTR [rsp+0x18]
    d6fb:	call   5900 <free@plt>
    d700:	jmp    d37f <process_record+0x25f>
    d705:	call   5940 <__errno_location@plt>
    d70a:	mov    rdi,QWORD PTR [rsp+0x20]
    d70f:	mov    r12d,DWORD PTR [rax]
    d712:	lea    rdx,[rip+0x1576f]        # 22e88 <params.12800+0x128>
    d719:	mov    rbp,rax
    d71c:	mov    r8d,0x8
    d722:	mov    ecx,r13d
    d725:	mov    esi,0x1
    d72a:	xor    eax,eax
    d72c:	call   5d50 <xc_report_error@plt>
    d731:	mov    DWORD PTR [rbp+0x0],r12d
    d735:	mov    QWORD PTR [rsp+0x10],0x0
    d73e:	mov    ebp,0xffffffff
    d743:	mov    QWORD PTR [rsp+0x8],0x0
    d74c:	jmp    d37f <process_record+0x25f>
    d751:	call   5940 <__errno_location@plt>
    d756:	mov    rdi,QWORD PTR [rsp+0x20]
    d75b:	mov    r12d,DWORD PTR [rax]
    d75e:	lea    rdx,[rip+0x159d3]        # 23138 <params.12800+0x3d8>
    d765:	mov    rbp,rax
    d768:	mov    esi,0x1
    d76d:	xor    eax,eax
    d76f:	call   5d50 <xc_report_error@plt>
    d774:	mov    DWORD PTR [rbp+0x0],r12d
    d778:	or     ebp,0xffffffff
    d77b:	jmp    d1c0 <process_record+0xa0>
    d780:	test   r13d,r13d
    d783:	mov    r12,QWORD PTR [rsp+0x30]
    d788:	mov    r11d,DWORD PTR [rsp+0x40]
    d78d:	mov    ebp,DWORD PTR [rsp+0x48]
    d791:	mov    rbx,QWORD PTR [rsp+0x50]
    d796:	je     d6ec <process_record+0x5cc>
    d79c:	mov    rax,QWORD PTR [rsp+0x28]
    d7a1:	mov    esi,DWORD PTR [r14+0x8]
    d7a5:	mov    ecx,r13d
    d7a8:	mov    r9,QWORD PTR [rsp+0x20]
    d7ad:	mov    r8,QWORD PTR [rsp+0x18]
    d7b2:	mov    edx,0x3
    d7b7:	mov    DWORD PTR [rsp+0x30],r11d
    d7bc:	mov    QWORD PTR [rsp+0x48],rcx
    d7c1:	mov    rdi,QWORD PTR [rax+0x448]
    d7c8:	call   59c0 <xenforeignmemory_map@plt>
    d7cd:	test   rax,rax
    d7d0:	mov    QWORD PTR [rsp+0x40],rax
    d7d5:	je     de50 <process_record+0xd30>
    d7db:	mov    rax,QWORD PTR [rsp+0x38]
    d7e0:	mov    DWORD PTR [rsp+0x6c],ebp
    d7e4:	xor    r13d,r13d
    d7e7:	lea    r9,[r12+rax*1+0x8]
    d7ec:	mov    rax,QWORD PTR [rsp+0x58]
    d7f1:	xor    r12d,r12d
    d7f4:	mov    QWORD PTR [rsp+0x58],rbx
    d7f9:	mov    rbx,QWORD PTR [rsp+0x60]
    d7fe:	mov    r15,r9
    d801:	add    rax,0x1
    d805:	mov    QWORD PTR [rsp+0x30],rax
    d80a:	mov    rax,QWORD PTR [rsp+0x40]
    d80f:	mov    rbp,rax
    d812:	jmp    d855 <process_record+0x735>
    d814:	nop    DWORD PTR [rax+0x0]
    d818:	mov    edx,0x1000
    d81d:	mov    rsi,r15
    d820:	mov    rdi,rbp
    d823:	call   5d70 <memcmp@plt>
    d828:	test   eax,eax
    d82a:	jne    d910 <process_record+0x7f0>
    d830:	add    r13d,0x1
    d834:	add    rbp,0x1000
    d83b:	add    r15,0x1000
    d842:	add    r12,0x1
    d846:	add    rbx,0x4
    d84a:	cmp    QWORD PTR [rsp+0x30],r12
    d84f:	je     d992 <process_record+0x872>
    d855:	mov    esi,DWORD PTR [rbx]
    d857:	cmp    esi,0xe0000000
    d85d:	je     d842 <process_record+0x722>
    d85f:	cmp    esi,0xf0000000
    d865:	je     d842 <process_record+0x722>
    d867:	cmp    esi,0xd0000000
    d86d:	je     d842 <process_record+0x722>
    d86f:	mov    rcx,QWORD PTR [rsp+0x20]
    d874:	mov    eax,r13d
    d877:	mov    edx,DWORD PTR [rcx+rax*4]
    d87a:	test   edx,edx
    d87c:	jne    db86 <process_record+0xa66>
    d882:	mov    rdx,r15
    d885:	mov    rdi,r14
    d888:	call   QWORD PTR [r14+0x98]
    d88f:	test   eax,eax
    d891:	jne    dc35 <process_record+0xb15>
    d897:	cmp    BYTE PTR [r14+0x158],0x0
    d89f:	jne    d818 <process_record+0x6f8>
    d8a5:	mov    rax,QWORD PTR [r15]
    d8a8:	lea    rdi,[rbp+0x8]
    d8ac:	mov    rsi,r15
    d8af:	and    rdi,0xfffffffffffffff8
    d8b3:	mov    QWORD PTR [rbp+0x0],rax
    d8b7:	mov    rax,QWORD PTR [r15+0xff8]
    d8be:	mov    QWORD PTR [rbp+0xff8],rax
    d8c5:	mov    rax,rbp
    d8c8:	sub    rax,rdi
    d8cb:	lea    ecx,[rax+0x1000]
    d8d1:	sub    rsi,rax
    d8d4:	mov    eax,ecx
    d8d6:	shr    eax,0x3
    d8d9:	mov    ecx,eax
    d8db:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    d8de:	jmp    d830 <process_record+0x710>
    d8e3:	nop    DWORD PTR [rax+rax*1+0x0]
    d8e8:	test   edx,edx
    d8ea:	je     d570 <process_record+0x450>
    d8f0:	jmp    d591 <process_record+0x471>
    d8f5:	nop    DWORD PTR [rax]
    d8f8:	cmp    edx,0x90000000
    d8fe:	je     d570 <process_record+0x450>
    d904:	jmp    d591 <process_record+0x471>
    d909:	nop    DWORD PTR [rax+0x0]
    d910:	call   5940 <__errno_location@plt>
    d915:	mov    r11d,DWORD PTR [rax]
    d918:	mov    QWORD PTR [rsp+0x50],rax
    d91d:	lea    rdx,[rip+0x157ec]        # 23110 <params.12800+0x3b0>
    d924:	mov    rax,QWORD PTR [rsp+0x8]
    d929:	mov    r8d,DWORD PTR [rbx]
    d92c:	mov    esi,0x1
    d931:	mov    rdi,QWORD PTR [rsp+0x28]
    d936:	mov    DWORD PTR [rsp+0x38],r11d
    d93b:	mov    rcx,QWORD PTR [rax+r12*8]
    d93f:	shr    r8d,0x1c
    d943:	xor    eax,eax
    d945:	call   5d50 <xc_report_error@plt>
    d94a:	mov    r11d,DWORD PTR [rsp+0x38]
    d94f:	mov    r10,QWORD PTR [rsp+0x50]
    d954:	mov    DWORD PTR [r10],r11d
    d957:	jmp    d830 <process_record+0x710>
    d95c:	mov    rdi,QWORD PTR [rsp+0x20]
    d961:	mov    DWORD PTR [r14+0x124],0x0
    d96c:	lea    r8,[rip+0x15c98]        # 2360b <params.12800+0x8ab>
    d973:	mov    ebp,DWORD PTR [r12]
    d977:	xor    ecx,ecx
    d979:	mov    edx,0x5
    d97e:	xor    eax,eax
    d980:	mov    rsi,QWORD PTR [rdi+0x8]
    d984:	call   6540 <xc_report@plt>
    d989:	mov    DWORD PTR [r12],ebp
    d98d:	jmp    d3b6 <process_record+0x296>
    d992:	mov    ebp,DWORD PTR [rsp+0x6c]
    d996:	mov    rbx,QWORD PTR [rsp+0x58]
    d99b:	mov    rax,QWORD PTR [rsp+0x28]
    d9a0:	mov    rdx,QWORD PTR [rsp+0x48]
    d9a5:	mov    rsi,QWORD PTR [rsp+0x40]
    d9aa:	mov    rdi,QWORD PTR [rax+0x448]
    d9b1:	call   5e40 <xenforeignmemory_unmap@plt>
    d9b6:	jmp    d6ec <process_record+0x5cc>
    d9bb:	mov    r8,QWORD PTR [r14+0xd0]
    d9c2:	lea    rax,[rsp+0x78]
    d9c7:	mov    r12,QWORD PTR [r14]
    d9ca:	mov    esi,DWORD PTR [r14+0x8]
    d9ce:	mov    DWORD PTR [rsp+0x78],0x0
    d9d6:	lea    rcx,[r14+0xd8]
    d9dd:	mov    QWORD PTR [rsp+0x84],0x0
    d9e9:	mov    DWORD PTR [rsp+0x8c],0x0
    d9f4:	xor    r9d,r9d
    d9f7:	mov    DWORD PTR [rsp+0x7c],r8d
    d9fc:	mov    DWORD PTR [rsp+0x80],0xf
    da07:	mov    edx,0xb
    da0c:	mov    r13,QWORD PTR [r14+0xd8]
    da13:	push   rax
    da14:	mov    rdi,r12
    da17:	push   0x0
    da19:	call   64b0 <xc_shadow_control@plt>
    da1e:	movsxd rsi,eax
    da21:	cmp    rsi,QWORD PTR [r14+0xd0]
    da28:	pop    rax
    da29:	pop    rdx
    da2a:	jne    de0c <process_record+0xcec>
    da30:	xor    r15d,r15d
    da33:	xor    eax,eax
    da35:	test   rsi,rsi
    da38:	je     ddbc <process_record+0xc9c>
    da3e:	xchg   ax,ax
    da40:	lea    edx,[rax+0x7]
    da43:	test   eax,eax
    da45:	mov    edi,eax
    da47:	cmovns edx,eax
    da4a:	sar    edi,0x1f
    da4d:	sar    edx,0x3
    da50:	shr    edi,0x1d
    da53:	movsxd rdx,edx
    da56:	lea    ecx,[rdi+rax*1]
    da59:	movsx  edx,BYTE PTR [r13+rdx*1+0x0]
    da5f:	and    ecx,0x7
    da62:	sub    ecx,edi
    da64:	sar    edx,cl
    da66:	and    edx,0x1
    da69:	cmp    edx,0x1
    da6c:	sbb    r15d,0xffffffff
    da70:	add    rax,0x1
    da74:	cmp    rsi,rax
    da77:	jne    da40 <process_record+0x920>
    da79:	mov    ebp,r15d
    da7c:	mov    QWORD PTR [rsp+0x8],rsi
    da81:	shl    rbp,0x3
    da85:	mov    rdi,rbp
    da88:	call   5ff0 <malloc@plt>
    da8d:	test   rax,rax
    da90:	mov    r9,rax
    da93:	mov    rsi,QWORD PTR [rsp+0x8]
    da98:	je     ddd1 <process_record+0xcb1>
    da9e:	xor    ecx,ecx
    daa0:	xor    eax,eax
    daa2:	nop    WORD PTR [rax+rax*1+0x0]
    daa8:	lea    edx,[rax+0x7]
    daab:	test   eax,eax
    daad:	mov    edi,eax
    daaf:	cmovns edx,eax
    dab2:	sar    edi,0x1f
    dab5:	sar    edx,0x3
    dab8:	shr    edi,0x1d
    dabb:	movsxd rdx,edx
    dabe:	movsx  r8d,BYTE PTR [r13+rdx*1+0x0]
    dac4:	lea    edx,[rdi+rax*1]
    dac7:	and    edx,0x7
    daca:	sub    edx,edi
    dacc:	bt     r8d,edx
    dad0:	jae    dae4 <process_record+0x9c4>
    dad2:	cmp    r15d,ecx
    dad5:	jb     dd47 <process_record+0xc27>
    dadb:	mov    edx,ecx
    dadd:	add    ecx,0x1
    dae0:	mov    QWORD PTR [r9+rdx*8],rax
    dae4:	add    rax,0x1
    dae8:	cmp    rsi,rax
    daeb:	jne    daa8 <process_record+0x988>
    daed:	mov    edi,0x30
    daf2:	mov    QWORD PTR [rsp+0x8],r9
    daf7:	call   5ff0 <malloc@plt>
    dafc:	test   rax,rax
    daff:	mov    r13,rax
    db02:	mov    r9,QWORD PTR [rsp+0x8]
    db07:	je     dee8 <process_record+0xdc8>
    db0d:	lea    rax,[rsp+0x80]
    db15:	mov    edi,DWORD PTR [r14+0xc8]
    db1c:	shl    r15d,0x3
    db20:	mov    QWORD PTR [r13+0x20],r9
    db24:	mov    QWORD PTR [r13+0x28],rbp
    db28:	mov    edx,0x3
    db2d:	mov    QWORD PTR [r13+0x0],rax
    db31:	lea    rax,[rsp+0x84]
    db39:	mov    QWORD PTR [r13+0x8],0x4
    db41:	mov    QWORD PTR [r13+0x18],0x4
    db49:	mov    rsi,r13
    db4c:	mov    QWORD PTR [rsp+0x8],r9
    db51:	mov    QWORD PTR [r13+0x10],rax
    db55:	mov    DWORD PTR [rsp+0x84],r15d
    db5d:	call   5880 <writev_exact@plt>
    db62:	test   eax,eax
    db64:	mov    ebp,eax
    db66:	mov    r9,QWORD PTR [rsp+0x8]
    db6b:	jne    dea5 <process_record+0xd85>
    db71:	mov    rdi,r9
    db74:	call   5900 <free@plt>
    db79:	mov    rdi,r13
    db7c:	call   5900 <free@plt>
    db81:	jmp    d1c0 <process_record+0xa0>
    db86:	mov    DWORD PTR [rsp+0x38],esi
    db8a:	mov    DWORD PTR [rsp+0x30],edx
    db8e:	mov    r15,rax
    db91:	mov    rbx,QWORD PTR [rsp+0x58]
    db96:	call   5940 <__errno_location@plt>
    db9b:	sub    rsp,0x8
    db9f:	mov    r14d,DWORD PTR [rax]
    dba2:	mov    rbp,rax
    dba5:	mov    rax,QWORD PTR [rsp+0x10]
    dbaa:	mov    edx,DWORD PTR [rsp+0x38]
    dbae:	mov    rcx,QWORD PTR [rax+r12*8]
    dbb2:	push   rdx
    dbb3:	lea    rdx,[rip+0x154f6]        # 230b0 <params.12800+0x350>
    dbba:	mov    rax,QWORD PTR [rsp+0x28]
    dbbf:	mov    esi,DWORD PTR [rsp+0x48]
    dbc3:	mov    rdi,QWORD PTR [rsp+0x38]
    dbc8:	mov    r8,QWORD PTR [rax+r15*8]
    dbcc:	mov    r9d,esi
    dbcf:	xor    eax,eax
    dbd1:	mov    esi,0x1
    dbd6:	call   5d50 <xc_report_error@plt>
    dbdb:	mov    DWORD PTR [rbp+0x0],r14d
    dbdf:	mov    ebp,0xffffffff
    dbe4:	pop    rdi
    dbe5:	pop    r8
    dbe7:	jmp    d99b <process_record+0x87b>
    dbec:	call   5940 <__errno_location@plt>
    dbf1:	mov    rdi,QWORD PTR [rsp+0x20]
    dbf6:	mov    r12d,DWORD PTR [rax]
    dbf9:	lea    rdx,[rip+0x152e8]        # 22ee8 <params.12800+0x188>
    dc00:	mov    rbp,rax
    dc03:	mov    r8d,r15d
    dc06:	mov    ecx,r13d
    dc09:	mov    esi,0x1
    dc0e:	xor    eax,eax
    dc10:	call   5d50 <xc_report_error@plt>
    dc15:	mov    DWORD PTR [rbp+0x0],r12d
    dc19:	mov    QWORD PTR [rsp+0x10],0x0
    dc22:	mov    ebp,0xffffffff
    dc27:	mov    QWORD PTR [rsp+0x8],0x0
    dc30:	jmp    d37f <process_record+0x25f>
    dc35:	mov    r15d,eax
    dc38:	mov    r13,rbx
    dc3b:	mov    rbx,QWORD PTR [rsp+0x58]
    dc40:	call   5940 <__errno_location@plt>
    dc45:	mov    rbp,rax
    dc48:	mov    r14d,DWORD PTR [rax]
    dc4b:	mov    rax,QWORD PTR [rsp+0x8]
    dc50:	mov    r8d,DWORD PTR [r13+0x0]
    dc54:	mov    rdi,QWORD PTR [rsp+0x28]
    dc59:	lea    rdx,[rip+0x15488]        # 230e8 <params.12800+0x388>
    dc60:	mov    esi,0x1
    dc65:	mov    rcx,QWORD PTR [rax+r12*8]
    dc69:	xor    eax,eax
    dc6b:	shr    r8d,0x1c
    dc6f:	call   5d50 <xc_report_error@plt>
    dc74:	mov    DWORD PTR [rbp+0x0],r14d
    dc78:	mov    ebp,r15d
    dc7b:	jmp    d99b <process_record+0x87b>
    dc80:	mov    DWORD PTR [rsp+0x18],edx
    dc84:	shl    rbp,0xc
    dc88:	call   5940 <__errno_location@plt>
    dc8d:	sub    rsp,0x8
    dc91:	mov    r15d,DWORD PTR [rax]
    dc94:	lea    rdx,[rip+0x1532d]        # 22fc8 <params.12800+0x268>
    dc9b:	push   rbp
    dc9c:	mov    r9,QWORD PTR [rsp+0x48]
    dca1:	mov    r12,rax
    dca4:	mov    ecx,DWORD PTR [rsp+0x28]
    dca8:	mov    rdi,QWORD PTR [rsp+0x30]
    dcad:	mov    r8d,0x8
    dcb3:	mov    esi,0x1
    dcb8:	xor    eax,eax
    dcba:	call   5d50 <xc_report_error@plt>
    dcbf:	mov    DWORD PTR [r12],r15d
    dcc3:	pop    r11
    dcc5:	pop    rbp
    dcc6:	mov    ebp,0xffffffff
    dccb:	jmp    d37f <process_record+0x25f>
    dcd0:	call   5940 <__errno_location@plt>
    dcd5:	mov    rdi,QWORD PTR [rsp+0x20]
    dcda:	mov    r12d,DWORD PTR [rax]
    dcdd:	lea    rdx,[rip+0x151d4]        # 22eb8 <params.12800+0x158>
    dce4:	mov    rbp,rax
    dce7:	mov    esi,0x1
    dcec:	xor    eax,eax
    dcee:	call   5d50 <xc_report_error@plt>
    dcf3:	mov    DWORD PTR [rbp+0x0],r12d
    dcf7:	mov    QWORD PTR [rsp+0x10],0x0
    dd00:	mov    ebp,0xffffffff
    dd05:	mov    QWORD PTR [rsp+0x8],0x0
    dd0e:	jmp    d37f <process_record+0x25f>
    dd13:	call   5940 <__errno_location@plt>
    dd18:	mov    rdi,QWORD PTR [rsp+0x20]
    dd1d:	mov    r12d,DWORD PTR [rax]
    dd20:	lea    rdx,[rip+0x15211]        # 22f38 <params.12800+0x1d8>
    dd27:	mov    rbp,rax
    dd2a:	mov    ecx,r15d
    dd2d:	mov    esi,0x1
    dd32:	xor    eax,eax
    dd34:	call   5d50 <xc_report_error@plt>
    dd39:	mov    DWORD PTR [rbp+0x0],r12d
    dd3d:	mov    ebp,0xffffffff
    dd42:	jmp    d37f <process_record+0x25f>
    dd47:	mov    QWORD PTR [rsp+0x8],r9
    dd4c:	call   5940 <__errno_location@plt>
    dd51:	mov    r13d,DWORD PTR [rax]
    dd54:	lea    rdx,[rip+0x158c6]        # 23621 <params.12800+0x8c1>
    dd5b:	mov    rbp,rax
    dd5e:	mov    esi,0x1
    dd63:	mov    rdi,r12
    dd66:	xor    eax,eax
    dd68:	call   5d50 <xc_report_error@plt>
    dd6d:	mov    DWORD PTR [rbp+0x0],r13d
    dd71:	mov    r9,QWORD PTR [rsp+0x8]
    dd76:	xor    r13d,r13d
    dd79:	mov    ebp,0xffffffff
    dd7e:	jmp    db71 <process_record+0xa51>
    dd83:	call   5940 <__errno_location@plt>
    dd88:	lea    rcx,[r15+r15*2]
    dd8c:	mov    r12d,DWORD PTR [rax]
    dd8f:	mov    rdi,QWORD PTR [rsp+0x28]
    dd94:	lea    rdx,[rip+0x15275]        # 23010 <params.12800+0x2b0>
    dd9b:	mov    rbp,rax
    dd9e:	mov    esi,0x1
    dda3:	shl    rcx,0x2
    dda7:	xor    eax,eax
    dda9:	call   5d50 <xc_report_error@plt>
    ddae:	mov    DWORD PTR [rbp+0x0],r12d
    ddb2:	mov    ebp,0xffffffff
    ddb7:	jmp    d6ec <process_record+0x5cc>
    ddbc:	xor    edi,edi
    ddbe:	xor    ebp,ebp
    ddc0:	call   5ff0 <malloc@plt>
    ddc5:	test   rax,rax
    ddc8:	mov    r9,rax
    ddcb:	jne    daed <process_record+0x9cd>
    ddd1:	call   5940 <__errno_location@plt>
    ddd6:	mov    r14d,DWORD PTR [rax]
    ddd9:	lea    rdx,[rip+0x153b8]        # 23198 <params.12800+0x438>
    dde0:	mov    r13,rax
    dde3:	mov    rcx,rbp
    dde6:	mov    esi,0x1
    ddeb:	mov    rdi,r12
    ddee:	xor    eax,eax
    ddf0:	or     ebp,0xffffffff
    ddf3:	call   5d50 <xc_report_error@plt>
    ddf8:	mov    DWORD PTR [r13+0x0],r14d
    ddfc:	xor    r9d,r9d
    ddff:	xor    r13d,r13d
    de02:	jmp    db71 <process_record+0xa51>
    de07:	call   5b80 <__stack_chk_fail@plt>
    de0c:	call   5940 <__errno_location@plt>
    de11:	mov    r13d,DWORD PTR [rax]
    de14:	mov    rbp,rax
    de17:	mov    rdi,r12
    de1a:	mov    esi,r13d
    de1d:	call   6570 <xc_strerror@plt>
    de22:	mov    ecx,DWORD PTR [rbp+0x0]
    de25:	lea    rdx,[rip+0x1533c]        # 23168 <params.12800+0x408>
    de2c:	mov    r8,rax
    de2f:	mov    esi,0x1
    de34:	mov    rdi,r12
    de37:	xor    eax,eax
    de39:	call   5d50 <xc_report_error@plt>
    de3e:	mov    DWORD PTR [rbp+0x0],r13d
    de42:	xor    r9d,r9d
    de45:	xor    r13d,r13d
    de48:	or     ebp,0xffffffff
    de4b:	jmp    db71 <process_record+0xa51>
    de50:	call   5940 <__errno_location@plt>
    de55:	mov    r14,QWORD PTR [rsp+0x28]
    de5a:	mov    r12d,DWORD PTR [rax]
    de5d:	mov    rbp,rax
    de60:	mov    esi,r12d
    de63:	mov    rdi,r14
    de66:	call   6570 <xc_strerror@plt>
    de6b:	sub    rsp,0x8
    de6f:	lea    rdx,[rip+0x15202]        # 23078 <params.12800+0x318>
    de76:	mov    ecx,r13d
    de79:	push   rax
    de7a:	mov    r11d,DWORD PTR [rsp+0x40]
    de7f:	mov    esi,0x1
    de84:	mov    r9d,DWORD PTR [rbp+0x0]
    de88:	mov    rdi,r14
    de8b:	xor    eax,eax
    de8d:	mov    r8d,r11d
    de90:	call   5d50 <xc_report_error@plt>
    de95:	mov    DWORD PTR [rbp+0x0],r12d
    de99:	or     ebp,0xffffffff
    de9c:	pop    r9
    de9e:	pop    r10
    dea0:	jmp    d6ec <process_record+0x5cc>
    dea5:	call   5940 <__errno_location@plt>
    deaa:	mov    r15d,DWORD PTR [rax]
    dead:	mov    rbp,rax
    deb0:	mov    rdi,r12
    deb3:	mov    esi,r15d
    deb6:	call   6570 <xc_strerror@plt>
    debb:	mov    ecx,DWORD PTR [rbp+0x0]
    debe:	lea    rdx,[rip+0x1534b]        # 23210 <params.12800+0x4b0>
    dec5:	mov    r8,rax
    dec8:	mov    esi,0x1
    decd:	mov    rdi,r12
    ded0:	xor    eax,eax
    ded2:	call   5d50 <xc_report_error@plt>
    ded7:	mov    DWORD PTR [rbp+0x0],r15d
    dedb:	or     ebp,0xffffffff
    dede:	mov    r9,QWORD PTR [rsp+0x8]
    dee3:	jmp    db71 <process_record+0xa51>
    dee8:	call   5940 <__errno_location@plt>
    deed:	mov    r15d,DWORD PTR [rax]
    def0:	lea    rdx,[rip+0x152e1]        # 231d8 <params.12800+0x478>
    def7:	mov    rbp,rax
    defa:	mov    esi,0x1
    deff:	mov    rdi,r12
    df02:	xor    eax,eax
    df04:	call   5d50 <xc_report_error@plt>
    df09:	mov    DWORD PTR [rbp+0x0],r15d
    df0d:	or     ebp,0xffffffff
    df10:	mov    r9,QWORD PTR [rsp+0x8]
    df15:	jmp    db71 <process_record+0xa51>
    df1a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000df20 <restore>:
    df20:	push   r15
    df22:	push   r14
    df24:	mov    r14,rdi
    df27:	push   r13
    df29:	push   r12
    df2b:	push   rbp
    df2c:	push   rbx
    df2d:	sub    rsp,0x68
    df31:	mov    r12,QWORD PTR [rdi]
    df34:	mov    rax,QWORD PTR fs:0x28
    df3d:	mov    QWORD PTR [rsp+0x58],rax
    df42:	xor    eax,eax
    df44:	call   5940 <__errno_location@plt>
    df49:	mov    rsi,QWORD PTR [r12+0x8]
    df4e:	mov    ebx,DWORD PTR [rax]
    df50:	lea    r8,[rip+0x156e0]        # 23637 <params.12800+0x8d7>
    df57:	mov    rbp,rax
    df5a:	xor    ecx,ecx
    df5c:	xor    eax,eax
    df5e:	mov    edx,0x5
    df63:	mov    rdi,r12
    df66:	call   6540 <xc_report@plt>
    df6b:	mov    DWORD PTR [rbp+0x0],ebx
    df6e:	cmp    DWORD PTR [r14+0x10c],0x2
    df76:	lea    rax,[r14+0xd8]
    df7d:	mov    rbx,QWORD PTR [r14]
    df80:	mov    QWORD PTR [rsp+0x10],rax
    df85:	je     e346 <restore+0x426>
    df8b:	mov    rdi,r14
    df8e:	call   QWORD PTR [r14+0xa0]
    df95:	test   eax,eax
    df97:	mov    DWORD PTR [rsp+0xc],eax
    df9b:	je     e120 <restore+0x200>
    dfa1:	mov    r13d,DWORD PTR [rbp+0x0]
    dfa5:	mov    esi,r13d
    dfa8:	mov    rdi,r12
    dfab:	call   6570 <xc_strerror@plt>
    dfb0:	mov    ecx,DWORD PTR [rbp+0x0]
    dfb3:	lea    rdx,[rip+0x156af]        # 23669 <params.12800+0x909>
    dfba:	mov    r8,rax
    dfbd:	mov    esi,0x1
    dfc2:	mov    rdi,r12
    dfc5:	xor    eax,eax
    dfc7:	call   5d50 <xc_report_error@plt>
    dfcc:	mov    DWORD PTR [rbp+0x0],r13d
    dfd0:	mov    edx,DWORD PTR [r14+0x124]
    dfd7:	mov    rcx,QWORD PTR [rsp+0x10]
    dfdc:	mov    rax,0xffffffffffffffff
    dfe3:	mov    rbx,QWORD PTR [r14]
    dfe6:	mov    r12,QWORD PTR [r14+0xd8]
    dfed:	mov    QWORD PTR [rsp+0x30],rax
    dff2:	mov    DWORD PTR [rsp+0x40],0x0
    dffa:	test   edx,edx
    dffc:	mov    QWORD PTR [rsp+0x38],rcx
    e001:	mov    QWORD PTR [rsp+0x48],rax
    e006:	mov    QWORD PTR [rsp+0x50],0x0
    e00f:	je     e03c <restore+0x11c>
    e011:	xor    r15d,r15d
    e014:	nop    DWORD PTR [rax+0x0]
    e018:	mov    eax,r15d
    e01b:	add    r15d,0x1
    e01f:	shl    rax,0x4
    e023:	add    rax,QWORD PTR [r14+0x118]
    e02a:	mov    rdi,QWORD PTR [rax+0x8]
    e02e:	call   5900 <free@plt>
    e033:	cmp    r15d,DWORD PTR [r14+0x124]
    e03a:	jb     e018 <restore+0xf8>
    e03c:	cmp    DWORD PTR [r14+0x10c],0x2
    e044:	jne    e04f <restore+0x12f>
    e046:	test   r12,r12
    e049:	jne    e0e0 <restore+0x1c0>
    e04f:	mov    rdi,QWORD PTR [r14+0x118]
    e056:	call   5900 <free@plt>
    e05b:	mov    rdi,QWORD PTR [r14+0x148]
    e062:	call   5900 <free@plt>
    e067:	mov    rdi,r14
    e06a:	call   QWORD PTR [r14+0xb8]
    e071:	test   eax,eax
    e073:	je     e0a4 <restore+0x184>
    e075:	mov    r12d,DWORD PTR [rbp+0x0]
    e079:	mov    rdi,rbx
    e07c:	mov    esi,r12d
    e07f:	call   6570 <xc_strerror@plt>
    e084:	mov    ecx,DWORD PTR [rbp+0x0]
    e087:	lea    rdx,[rip+0x155f4]        # 23682 <params.12800+0x922>
    e08e:	mov    r8,rax
    e091:	mov    esi,0x1
    e096:	mov    rdi,rbx
    e099:	xor    eax,eax
    e09b:	call   5d50 <xc_report_error@plt>
    e0a0:	mov    DWORD PTR [rbp+0x0],r12d
    e0a4:	mov    eax,DWORD PTR [rsp+0xc]
    e0a8:	test   eax,eax
    e0aa:	je     e0b0 <restore+0x190>
    e0ac:	mov    DWORD PTR [rbp+0x0],r13d
    e0b0:	mov    rcx,QWORD PTR [rsp+0x58]
    e0b5:	xor    rcx,QWORD PTR fs:0x28
    e0be:	mov    eax,DWORD PTR [rsp+0xc]
    e0c2:	jne    e401 <restore+0x4e1>
    e0c8:	add    rsp,0x68
    e0cc:	pop    rbx
    e0cd:	pop    rbp
    e0ce:	pop    r12
    e0d0:	pop    r13
    e0d2:	pop    r14
    e0d4:	pop    r15
    e0d6:	ret    
    e0d7:	nop    WORD PTR [rax+rax*1+0x0]
    e0e0:	mov    rax,QWORD PTR [r14+0xd0]
    e0e7:	mov    rsi,QWORD PTR [rsp+0x38]
    e0ec:	mov    rdi,rbx
    e0ef:	lea    edx,[rax+0xe]
    e0f2:	add    eax,0x7
    e0f5:	cmovns edx,eax
    e0f8:	lea    rax,[rsp+0x30]
    e0fd:	sar    edx,0x3
    e100:	movsxd rdx,edx
    e103:	add    rdx,0xfff
    e10a:	shr    rdx,0xc
    e10e:	test   rsi,rsi
    e111:	cmove  rsi,rax
    e115:	call   6330 <xc__hypercall_buffer_free_pages@plt>
    e11a:	jmp    e04f <restore+0x12f>
    e11f:	nop
    e120:	mov    QWORD PTR [r14+0x150],0x1fff
    e12b:	mov    esi,0x400
    e130:	mov    edi,0x1
    e135:	call   5de0 <calloc@plt>
    e13a:	test   rax,rax
    e13d:	mov    QWORD PTR [r14+0x148],rax
    e144:	je     e3bc <restore+0x49c>
    e14a:	mov    edi,0x4000
    e14f:	call   5ff0 <malloc@plt>
    e154:	test   rax,rax
    e157:	mov    QWORD PTR [r14+0x118],rax
    e15e:	je     e3f4 <restore+0x4d4>
    e164:	mov    DWORD PTR [r14+0x120],0x400
    e16f:	lea    rbx,[rsp+0x20]
    e174:	lea    r15,[rip+0x15195]        # 23310 <params.12800+0x5b0>
    e17b:	jmp    e19d <restore+0x27d>
    e17d:	nop    DWORD PTR [rax]
    e180:	cmp    eax,0x2
    e183:	je     e230 <restore+0x310>
    e189:	test   eax,eax
    e18b:	jne    e306 <restore+0x3e6>
    e191:	mov    ecx,DWORD PTR [rsp+0x20]
    e195:	test   ecx,ecx
    e197:	je     e230 <restore+0x310>
    e19d:	mov    esi,DWORD PTR [r14+0xc]
    e1a1:	mov    rdx,rbx
    e1a4:	mov    rdi,r14
    e1a7:	call   5bc0 <read_record@plt>
    e1ac:	test   eax,eax
    e1ae:	jne    e2f8 <restore+0x3d8>
    e1b4:	cmp    BYTE PTR [r14+0x110],0x0
    e1bc:	je     e1cf <restore+0x2af>
    e1be:	mov    eax,DWORD PTR [rsp+0x20]
    e1c2:	test   eax,eax
    e1c4:	je     e1cf <restore+0x2af>
    e1c6:	cmp    eax,0xe
    e1c9:	jne    e280 <restore+0x360>
    e1cf:	mov    rsi,rbx
    e1d2:	mov    rdi,r14
    e1d5:	call   d120 <process_record>
    e1da:	cmp    eax,0x1
    e1dd:	jne    e180 <restore+0x260>
    e1df:	mov    edi,DWORD PTR [rsp+0x20]
    e1e3:	mov    r13d,DWORD PTR [rbp+0x0]
    e1e7:	test   edi,edi
    e1e9:	jns    e313 <restore+0x3f3>
    e1ef:	call   5ea0 <rec_type_to_str@plt>
    e1f4:	sub    rsp,0x8
    e1f8:	mov    rsi,QWORD PTR [r12+0x8]
    e1fd:	xor    ecx,ecx
    e1ff:	push   rax
    e200:	mov    r9d,DWORD PTR [rsp+0x30]
    e205:	mov    rdi,r12
    e208:	xor    eax,eax
    e20a:	mov    r8,r15
    e20d:	mov    edx,0x3
    e212:	call   6540 <xc_report@plt>
    e217:	mov    DWORD PTR [rbp+0x0],r13d
    e21b:	pop    rsi
    e21c:	pop    rdi
    e21d:	mov    ecx,DWORD PTR [rsp+0x20]
    e221:	test   ecx,ecx
    e223:	jne    e19d <restore+0x27d>
    e229:	nop    DWORD PTR [rax+0x0]
    e230:	cmp    DWORD PTR [r14+0x10c],0x2
    e238:	je     e3a8 <restore+0x488>
    e23e:	mov    rdi,r14
    e241:	call   QWORD PTR [r14+0xb0]
    e248:	test   eax,eax
    e24a:	mov    DWORD PTR [rsp+0xc],eax
    e24e:	jne    dfa1 <restore+0x81>
    e254:	mov    ebx,DWORD PTR [rbp+0x0]
    e257:	mov    rsi,QWORD PTR [r12+0x8]
    e25c:	lea    r8,[rip+0x153f3]        # 23656 <params.12800+0x8f6>
    e263:	xor    ecx,ecx
    e265:	mov    edx,0x5
    e26a:	mov    rdi,r12
    e26d:	xor    eax,eax
    e26f:	xor    r13d,r13d
    e272:	call   6540 <xc_report@plt>
    e277:	mov    DWORD PTR [rbp+0x0],ebx
    e27a:	jmp    dfd0 <restore+0xb0>
    e27f:	nop
    e280:	mov    edx,DWORD PTR [r14+0x124]
    e287:	mov    ecx,DWORD PTR [r14+0x120]
    e28e:	mov    rax,QWORD PTR [r14+0x118]
    e295:	cmp    edx,ecx
    e297:	jb     e2d4 <restore+0x3b4>
    e299:	lea    esi,[rcx+0x400]
    e29f:	mov    rdx,QWORD PTR [r14]
    e2a2:	mov    rdi,rax
    e2a5:	mov    r13,rsi
    e2a8:	shl    rsi,0x4
    e2ac:	mov    QWORD PTR [rsp+0x18],rdx
    e2b1:	call   6160 <realloc@plt>
    e2b6:	test   rax,rax
    e2b9:	je     e3c9 <restore+0x4a9>
    e2bf:	mov    edx,DWORD PTR [r14+0x124]
    e2c6:	mov    QWORD PTR [r14+0x118],rax
    e2cd:	mov    DWORD PTR [r14+0x120],r13d
    e2d4:	lea    ecx,[rdx+0x1]
    e2d7:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
    e2dd:	shl    rdx,0x4
    e2e1:	mov    DWORD PTR [r14+0x124],ecx
    e2e8:	movups XMMWORD PTR [rax+rdx*1],xmm0
    e2ec:	jmp    e191 <restore+0x271>
    e2f1:	nop    DWORD PTR [rax+0x0]
    e2f8:	cmp    BYTE PTR [r14+0x110],0x0
    e300:	jne    e230 <restore+0x310>
    e306:	mov    r13d,DWORD PTR [rbp+0x0]
    e30a:	mov    DWORD PTR [rsp+0xc],eax
    e30e:	jmp    dfa5 <restore+0x85>
    e313:	call   5ea0 <rec_type_to_str@plt>
    e318:	mov    ecx,DWORD PTR [rsp+0x20]
    e31c:	lea    rdx,[rip+0x15015]        # 23338 <params.12800+0x5d8>
    e323:	mov    r8,rax
    e326:	mov    esi,0x1
    e32b:	mov    rdi,r12
    e32e:	xor    eax,eax
    e330:	call   5d50 <xc_report_error@plt>
    e335:	mov    DWORD PTR [rbp+0x0],r13d
    e339:	mov    DWORD PTR [rsp+0xc],0xffffffff
    e341:	jmp    dfa5 <restore+0x85>
    e346:	mov    rax,QWORD PTR [r14+0xd0]
    e34d:	lea    rsi,[r14+0xd8]
    e354:	mov    rdi,rbx
    e357:	lea    edx,[rax+0xe]
    e35a:	add    eax,0x7
    e35d:	cmovns edx,eax
    e360:	sar    edx,0x3
    e363:	movsxd rdx,edx
    e366:	add    rdx,0xfff
    e36d:	shr    rdx,0xc
    e371:	call   63d0 <xc__hypercall_buffer_alloc_pages@plt>
    e376:	test   rax,rax
    e379:	jne    df8b <restore+0x6b>
    e37f:	mov    r13d,DWORD PTR [rbp+0x0]
    e383:	lea    rdx,[rip+0x14ebe]        # 23248 <params.12800+0x4e8>
    e38a:	mov    esi,0x1
    e38f:	mov    rdi,rbx
    e392:	call   5d50 <xc_report_error@plt>
    e397:	mov    DWORD PTR [rbp+0x0],r13d
    e39b:	mov    DWORD PTR [rsp+0xc],0xffffffff
    e3a3:	jmp    dfa5 <restore+0x85>
    e3a8:	mov    ebx,DWORD PTR [rbp+0x0]
    e3ab:	mov    rsi,QWORD PTR [r12+0x8]
    e3b0:	lea    r8,[rip+0x15291]        # 23648 <params.12800+0x8e8>
    e3b7:	jmp    e263 <restore+0x343>
    e3bc:	mov    r13d,DWORD PTR [rbp+0x0]
    e3c0:	lea    rdx,[rip+0x14eb1]        # 23278 <params.12800+0x518>
    e3c7:	jmp    e38a <restore+0x46a>
    e3c9:	mov    r13d,DWORD PTR [rbp+0x0]
    e3cd:	mov    rdi,QWORD PTR [rsp+0x18]
    e3d2:	lea    rdx,[rip+0x14f07]        # 232e0 <params.12800+0x580>
    e3d9:	mov    esi,0x1
    e3de:	call   5d50 <xc_report_error@plt>
    e3e3:	mov    DWORD PTR [rbp+0x0],r13d
    e3e7:	mov    DWORD PTR [rsp+0xc],0xffffffff
    e3ef:	jmp    dfa5 <restore+0x85>
    e3f4:	mov    r13d,DWORD PTR [rbp+0x0]
    e3f8:	lea    rdx,[rip+0x14eb1]        # 232b0 <params.12800+0x550>
    e3ff:	jmp    e38a <restore+0x46a>
    e401:	call   5b80 <__stack_chk_fail@plt>
    e406:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e410 <xc_domain_restore>:
    e410:	push   r15
    e412:	push   r14
    e414:	push   r13
    e416:	push   r12
    e418:	mov    r13d,esi
    e41b:	push   rbp
    e41c:	push   rbx
    e41d:	mov    rbx,rdi
    e420:	mov    esi,ecx
    e422:	mov    ecx,0x3b
    e427:	mov    r12d,edx
    e42a:	sub    rsp,0x248
    e431:	mov    rax,QWORD PTR [rsp+0x288]
    e439:	lea    rdi,[rsp+0x60]
    e43e:	mov    r15d,DWORD PTR [rsp+0x2a8]
    e446:	mov    rdx,QWORD PTR [rsp+0x2b0]
    e44e:	mov    QWORD PTR [rsp+0x10],r8
    e453:	mov    QWORD PTR [rsp+0x8],rdi
    e458:	mov    QWORD PTR [rsp+0x18],rax
    e45d:	mov    rax,QWORD PTR fs:0x28
    e466:	mov    QWORD PTR [rsp+0x238],rax
    e46e:	xor    eax,eax
    e470:	test   r15d,r15d
    e473:	rep stos QWORD PTR es:[rdi],rax
    e476:	mov    eax,DWORD PTR [rsp+0x280]
    e47d:	mov    QWORD PTR [rsp+0x60],rbx
    e482:	mov    DWORD PTR [rsp+0x6c],r13d
    e487:	mov    DWORD PTR [rsp+0x198],esi
    e48e:	mov    DWORD PTR [rsp+0x1a0],r9d
    e496:	mov    DWORD PTR [rsp+0x16c],r15d
    e49e:	mov    DWORD PTR [rsp+0x19c],eax
    e4a5:	mov    eax,DWORD PTR [rsp+0x290]
    e4ac:	mov    QWORD PTR [rsp+0x120],rdx
    e4b4:	mov    DWORD PTR [rsp+0x1a4],eax
    e4bb:	mov    eax,DWORD PTR [rsp+0x2b8]
    e4c2:	mov    DWORD PTR [rsp+0x128],eax
    e4c9:	je     e507 <xc_domain_restore+0xf7>
    e4cb:	cmp    QWORD PTR [rdx+0x10],0x0
    e4d0:	je     e863 <xc_domain_restore+0x453>
    e4d6:	cmp    r15d,0x2
    e4da:	jne    e507 <xc_domain_restore+0xf7>
    e4dc:	cmp    QWORD PTR [rdx],0x0
    e4e0:	je     e844 <xc_domain_restore+0x434>
    e4e6:	cmp    QWORD PTR [rdx+0x8],0x0
    e4eb:	je     e844 <xc_domain_restore+0x434>
    e4f1:	cmp    QWORD PTR [rdx+0x18],0x0
    e4f6:	je     e844 <xc_domain_restore+0x434>
    e4fc:	cmp    QWORD PTR [rdx+0x20],0x0
    e501:	je     e844 <xc_domain_restore+0x434>
    e507:	call   5940 <__errno_location@plt>
    e50c:	mov    rsi,QWORD PTR [rbx+0x8]
    e510:	mov    r14d,DWORD PTR [rax]
    e513:	mov    rbp,rax
    e516:	push   r15
    e518:	mov    eax,DWORD PTR [rsp+0x2a8]
    e51f:	lea    r8,[rip+0x14ea2]        # 233c8 <params.12800+0x668>
    e526:	mov    r9d,r13d
    e529:	xor    ecx,ecx
    e52b:	mov    edx,0x3
    e530:	mov    rdi,rbx
    e533:	push   rax
    e534:	mov    eax,DWORD PTR [rsp+0x2a8]
    e53b:	push   rax
    e53c:	push   r12
    e53e:	xor    eax,eax
    e540:	call   6540 <xc_report@plt>
    e545:	add    rsp,0x20
    e549:	mov    rax,QWORD PTR [rsp+0x8]
    e54e:	mov    DWORD PTR [rbp+0x0],r14d
    e552:	mov    edx,0x1
    e557:	mov    esi,r12d
    e55a:	mov    rdi,rbx
    e55d:	lea    rcx,[rax+0x10]
    e561:	call   5b40 <xc_domain_getinfo@plt>
    e566:	cmp    eax,0x1
    e569:	mov    r13d,eax
    e56c:	jne    e888 <xc_domain_restore+0x478>
    e572:	cmp    DWORD PTR [rsp+0x70],r12d
    e577:	jne    e8c8 <xc_domain_restore+0x4b8>
    e57d:	lea    rax,[rsp+0x40]
    e582:	mov    edi,DWORD PTR [rsp+0x6c]
    e586:	mov    edx,0x18
    e58b:	mov    DWORD PTR [rsp+0x68],r12d
    e590:	mov    r14,QWORD PTR [rsp+0x60]
    e595:	mov    rsi,rax
    e598:	mov    QWORD PTR [rsp+0x20],rax
    e59d:	call   6370 <read_exact@plt>
    e5a2:	test   eax,eax
    e5a4:	jne    e9a2 <xc_domain_restore+0x592>
    e5aa:	mov    r8d,DWORD PTR [rsp+0x48]
    e5af:	mov    ecx,DWORD PTR [rsp+0x4c]
    e5b3:	mov    r15,QWORD PTR [rsp+0x40]
    e5b8:	movzx  eax,WORD PTR [rsp+0x50]
    e5bd:	ror    ax,0x8
    e5c1:	bswap  r8d
    e5c4:	bswap  ecx
    e5c6:	mov    WORD PTR [rsp+0x50],ax
    e5cb:	cmp    r15,0xffffffffffffffff
    e5cf:	mov    DWORD PTR [rsp+0x48],r8d
    e5d4:	mov    DWORD PTR [rsp+0x4c],ecx
    e5d8:	jne    e900 <xc_domain_restore+0x4f0>
    e5de:	cmp    r8d,0x58454e46
    e5e5:	jne    e960 <xc_domain_restore+0x550>
    e5eb:	cmp    ecx,0x2
    e5ee:	jne    e990 <xc_domain_restore+0x580>
    e5f4:	test   al,0x1
    e5f6:	jne    e930 <xc_domain_restore+0x520>
    e5fc:	mov    edi,DWORD PTR [rsp+0x6c]
    e600:	lea    rsi,[rsp+0x30]
    e605:	mov    edx,0x10
    e60a:	mov    DWORD PTR [rsp+0x160],0x2
    e615:	call   6370 <read_exact@plt>
    e61a:	test   eax,eax
    e61c:	mov    DWORD PTR [rsp+0x28],eax
    e620:	jne    e9db <xc_domain_restore+0x5cb>
    e626:	movzx  ecx,WORD PTR [rsp+0x34]
    e62b:	mov    r15d,DWORD PTR [rsp+0x38]
    e630:	mov    edi,DWORD PTR [rsp+0x30]
    e634:	shl    r13d,cl
    e637:	test   r15d,r15d
    e63a:	mov    DWORD PTR [rsp+0x164],edi
    e641:	mov    DWORD PTR [rsp+0x168],r13d
    e649:	mov    r13d,DWORD PTR [rbp+0x0]
    e64d:	je     e7e0 <xc_domain_restore+0x3d0>
    e653:	mov    edx,DWORD PTR [rsp+0x3c]
    e657:	mov    DWORD PTR [rsp+0x2c],edx
    e65b:	call   5d30 <dhdr_type_to_str@plt>
    e660:	mov    edx,DWORD PTR [rsp+0x2c]
    e664:	mov    rsi,QWORD PTR [r14+0x8]
    e668:	lea    r8,[rip+0x14ef9]        # 23568 <params.12800+0x808>
    e66f:	mov    r9,rax
    e672:	xor    ecx,ecx
    e674:	xor    eax,eax
    e676:	mov    rdi,r14
    e679:	push   rdx
    e67a:	push   r15
    e67c:	mov    edx,0x5
    e681:	call   6540 <xc_report@plt>
    e686:	mov    DWORD PTR [rbp+0x0],r13d
    e68a:	pop    rax
    e68b:	pop    rdx
    e68c:	mov    rdx,QWORD PTR [rsp+0x20]
    e691:	mov    esi,r12d
    e694:	mov    rdi,rbx
    e697:	call   5dd0 <xc_domain_nr_gpfns@plt>
    e69c:	test   eax,eax
    e69e:	js     ea11 <xc_domain_restore+0x601>
    e6a4:	test   BYTE PTR [rsp+0x78],0x40
    e6a9:	mov    rax,QWORD PTR [rsp+0x40]
    e6ae:	mov    QWORD PTR [rsp+0x130],rax
    e6b6:	je     e838 <xc_domain_restore+0x428>
    e6bc:	mov    rax,QWORD PTR [rip+0x21e8ed]        # 22cfb0 <restore_ops_x86_hvm@@Base-0x7d0>
    e6c3:	movdqu xmm0,XMMWORD PTR [rax]
    e6c7:	mov    rdi,QWORD PTR [rsp+0x8]
    e6cc:	movups XMMWORD PTR [rsp+0xd8],xmm0
    e6d4:	movdqu xmm0,XMMWORD PTR [rax+0x10]
    e6d9:	movups XMMWORD PTR [rsp+0xe8],xmm0
    e6e1:	movdqu xmm0,XMMWORD PTR [rax+0x20]
    e6e6:	movups XMMWORD PTR [rsp+0xf8],xmm0
    e6ee:	movdqu xmm0,XMMWORD PTR [rax+0x30]
    e6f3:	movups XMMWORD PTR [rsp+0x108],xmm0
    e6fb:	mov    rax,QWORD PTR [rax+0x40]
    e6ff:	mov    QWORD PTR [rsp+0x118],rax
    e707:	call   df20 <restore>
    e70c:	test   eax,eax
    e70e:	jne    e8b7 <xc_domain_restore+0x4a7>
    e714:	mov    eax,DWORD PTR [rsp+0x198]
    e71b:	mov    r12d,DWORD PTR [rbp+0x0]
    e71f:	lea    r8,[rip+0x14e62]        # 23588 <params.12800+0x828>
    e726:	mov    rsi,QWORD PTR [rbx+0x8]
    e72a:	mov    rdi,rbx
    e72d:	xor    ecx,ecx
    e72f:	mov    edx,0x5
    e734:	push   rax
    e735:	mov    eax,DWORD PTR [rsp+0x1a8]
    e73c:	push   rax
    e73d:	mov    r9,QWORD PTR [rsp+0x198]
    e745:	xor    eax,eax
    e747:	call   6540 <xc_report@plt>
    e74c:	mov    eax,DWORD PTR [rsp+0x1ac]
    e753:	mov    DWORD PTR [rbp+0x0],r12d
    e757:	lea    r8,[rip+0x14e52]        # 235b0 <params.12800+0x850>
    e75e:	mov    rsi,QWORD PTR [rbx+0x8]
    e762:	mov    rdi,rbx
    e765:	xor    ecx,ecx
    e767:	mov    edx,0x5
    e76c:	push   rax
    e76d:	mov    eax,DWORD PTR [rsp+0x1bc]
    e774:	push   rax
    e775:	mov    r9,QWORD PTR [rsp+0x1b0]
    e77d:	xor    eax,eax
    e77f:	call   6540 <xc_report@plt>
    e784:	mov    rax,QWORD PTR [rsp+0x1b0]
    e78c:	mov    rbx,QWORD PTR [rsp+0x38]
    e791:	mov    DWORD PTR [rbp+0x0],r12d
    e795:	mov    QWORD PTR [rbx],rax
    e798:	mov    rax,QWORD PTR [rsp+0x1a8]
    e7a0:	mov    rbx,QWORD PTR [rsp+0x30]
    e7a5:	add    rsp,0x20
    e7a9:	mov    QWORD PTR [rbx],rax
    e7ac:	mov    rbx,QWORD PTR [rsp+0x238]
    e7b4:	xor    rbx,QWORD PTR fs:0x28
    e7bd:	mov    eax,DWORD PTR [rsp+0x28]
    e7c1:	jne    ea32 <xc_domain_restore+0x622>
    e7c7:	add    rsp,0x248
    e7ce:	pop    rbx
    e7cf:	pop    rbp
    e7d0:	pop    r12
    e7d2:	pop    r13
    e7d4:	pop    r14
    e7d6:	pop    r15
    e7d8:	ret    
    e7d9:	nop    DWORD PTR [rax+0x0]
    e7e0:	call   5d30 <dhdr_type_to_str@plt>
    e7e5:	mov    rsi,QWORD PTR [r14+0x8]
    e7e9:	lea    r8,[rip+0x14d18]        # 23508 <params.12800+0x7a8>
    e7f0:	mov    r9,rax
    e7f3:	xor    ecx,ecx
    e7f5:	mov    edx,0x5
    e7fa:	mov    rdi,r14
    e7fd:	xor    eax,eax
    e7ff:	call   6540 <xc_report@plt>
    e804:	mov    DWORD PTR [rbp+0x0],r13d
    e808:	mov    r9d,DWORD PTR [rsp+0x3c]
    e80d:	lea    r8,[rip+0x14d2c]        # 23540 <params.12800+0x7e0>
    e814:	mov    rsi,QWORD PTR [r14+0x8]
    e818:	xor    ecx,ecx
    e81a:	mov    edx,0x3
    e81f:	mov    rdi,r14
    e822:	xor    eax,eax
    e824:	call   6540 <xc_report@plt>
    e829:	mov    DWORD PTR [rbp+0x0],r13d
    e82d:	jmp    e68c <xc_domain_restore+0x27c>
    e832:	nop    WORD PTR [rax+rax*1+0x0]
    e838:	mov    rax,QWORD PTR [rip+0x21e789]        # 22cfc8 <restore_ops_x86_pv@@Base-0x758>
    e83f:	jmp    e6c3 <xc_domain_restore+0x2b3>
    e844:	lea    rcx,[rip+0x14ea5]        # 236f0 <__PRETTY_FUNCTION__.13647>
    e84b:	lea    rsi,[rip+0x14d80]        # 235d2 <params.12800+0x872>
    e852:	lea    rdi,[rip+0x14b07]        # 23360 <params.12800+0x600>
    e859:	mov    edx,0x35c
    e85e:	call   5c70 <__assert_fail@plt>
    e863:	lea    rcx,[rip+0x14e86]        # 236f0 <__PRETTY_FUNCTION__.13647>
    e86a:	lea    rsi,[rip+0x14d61]        # 235d2 <params.12800+0x872>
    e871:	lea    rdi,[rip+0x14e27]        # 2369f <params.12800+0x93f>
    e878:	mov    edx,0x354
    e87d:	call   5c70 <__assert_fail@plt>
    e882:	nop    WORD PTR [rax+rax*1+0x0]
    e888:	mov    r12d,DWORD PTR [rbp+0x0]
    e88c:	mov    rdi,rbx
    e88f:	mov    esi,r12d
    e892:	call   6570 <xc_strerror@plt>
    e897:	mov    ecx,DWORD PTR [rbp+0x0]
    e89a:	lea    rdx,[rip+0x14b57]        # 233f8 <params.12800+0x698>
    e8a1:	mov    r8,rax
    e8a4:	mov    esi,0x1
    e8a9:	mov    rdi,rbx
    e8ac:	xor    eax,eax
    e8ae:	call   5d50 <xc_report_error@plt>
    e8b3:	mov    DWORD PTR [rbp+0x0],r12d
    e8b7:	mov    DWORD PTR [rsp+0x28],0xffffffff
    e8bf:	jmp    e7ac <xc_domain_restore+0x39c>
    e8c4:	nop    DWORD PTR [rax+0x0]
    e8c8:	mov    r13d,DWORD PTR [rbp+0x0]
    e8cc:	lea    rdx,[rip+0x14de2]        # 236b5 <params.12800+0x955>
    e8d3:	mov    ecx,r12d
    e8d6:	mov    esi,0x1
    e8db:	mov    rdi,rbx
    e8de:	xor    eax,eax
    e8e0:	call   5d50 <xc_report_error@plt>
    e8e5:	mov    DWORD PTR [rbp+0x0],r13d
    e8e9:	mov    DWORD PTR [rsp+0x28],0xffffffff
    e8f1:	jmp    e7ac <xc_domain_restore+0x39c>
    e8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e900:	mov    ebx,DWORD PTR [rbp+0x0]
    e903:	lea    rdx,[rip+0x14dc4]        # 236ce <params.12800+0x96e>
    e90a:	mov    rcx,r15
    e90d:	mov    esi,0x1
    e912:	mov    rdi,r14
    e915:	xor    eax,eax
    e917:	call   5d50 <xc_report_error@plt>
    e91c:	mov    DWORD PTR [rbp+0x0],ebx
    e91f:	mov    DWORD PTR [rsp+0x28],0xffffffff
    e927:	jmp    e7ac <xc_domain_restore+0x39c>
    e92c:	nop    DWORD PTR [rax+0x0]
    e930:	mov    ebx,DWORD PTR [rbp+0x0]
    e933:	lea    rdx,[rip+0x14b6e]        # 234a8 <params.12800+0x748>
    e93a:	mov    esi,0x1
    e93f:	mov    rdi,r14
    e942:	xor    eax,eax
    e944:	call   5d50 <xc_report_error@plt>
    e949:	mov    DWORD PTR [rbp+0x0],ebx
    e94c:	mov    DWORD PTR [rsp+0x28],r15d
    e951:	jmp    e7ac <xc_domain_restore+0x39c>
    e956:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e960:	mov    ebx,DWORD PTR [rbp+0x0]
    e963:	lea    rdx,[rip+0x14aee]        # 23458 <params.12800+0x6f8>
    e96a:	mov    ecx,0x58454e46
    e96f:	mov    esi,0x1
    e974:	mov    rdi,r14
    e977:	xor    eax,eax
    e979:	call   5d50 <xc_report_error@plt>
    e97e:	mov    DWORD PTR [rbp+0x0],ebx
    e981:	mov    DWORD PTR [rsp+0x28],r15d
    e986:	jmp    e7ac <xc_domain_restore+0x39c>
    e98b:	nop    DWORD PTR [rax+rax*1+0x0]
    e990:	mov    ebx,DWORD PTR [rbp+0x0]
    e993:	mov    r8d,0x2
    e999:	lea    rdx,[rip+0x14ae0]        # 23480 <params.12800+0x720>
    e9a0:	jmp    e96f <xc_domain_restore+0x55f>
    e9a2:	mov    ebx,DWORD PTR [rbp+0x0]
    e9a5:	mov    rdi,r14
    e9a8:	mov    esi,ebx
    e9aa:	call   6570 <xc_strerror@plt>
    e9af:	mov    ecx,DWORD PTR [rbp+0x0]
    e9b2:	lea    rdx,[rip+0x14a67]        # 23420 <params.12800+0x6c0>
    e9b9:	mov    r8,rax
    e9bc:	mov    esi,0x1
    e9c1:	mov    rdi,r14
    e9c4:	xor    eax,eax
    e9c6:	call   5d50 <xc_report_error@plt>
    e9cb:	mov    DWORD PTR [rbp+0x0],ebx
    e9ce:	mov    DWORD PTR [rsp+0x28],0xffffffff
    e9d6:	jmp    e7ac <xc_domain_restore+0x39c>
    e9db:	mov    ebx,DWORD PTR [rbp+0x0]
    e9de:	mov    rdi,r14
    e9e1:	mov    esi,ebx
    e9e3:	call   6570 <xc_strerror@plt>
    e9e8:	mov    ecx,DWORD PTR [rbp+0x0]
    e9eb:	lea    rdx,[rip+0x14ade]        # 234d0 <params.12800+0x770>
    e9f2:	mov    r8,rax
    e9f5:	mov    esi,0x1
    e9fa:	mov    rdi,r14
    e9fd:	xor    eax,eax
    e9ff:	call   5d50 <xc_report_error@plt>
    ea04:	mov    DWORD PTR [rbp+0x0],ebx
    ea07:	mov    DWORD PTR [rsp+0x28],r15d
    ea0c:	jmp    e7ac <xc_domain_restore+0x39c>
    ea11:	mov    r12d,DWORD PTR [rbp+0x0]
    ea15:	mov    rdi,rbx
    ea18:	mov    esi,r12d
    ea1b:	call   6570 <xc_strerror@plt>
    ea20:	mov    ecx,DWORD PTR [rbp+0x0]
    ea23:	mov    r8,rax
    ea26:	lea    rdx,[rip+0x1420b]        # 22c38 <__PRETTY_FUNCTION__.12916+0xa0>
    ea2d:	jmp    e8a4 <xc_domain_restore+0x494>
    ea32:	call   5b80 <__stack_chk_fail@plt>
    ea37:	nop    WORD PTR [rax+rax*1+0x0]

000000000000ea40 <simple_precopy_policy>:
    ea40:	cmp    rsi,0x31
    ea44:	mov    eax,0x1
    ea49:	jbe    ea53 <simple_precopy_policy+0x13>
    ea4b:	xor    eax,eax
    ea4d:	cmp    edi,0x4
    ea50:	seta   al
    ea53:	repz ret 
    ea55:	nop
    ea56:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ea60 <suspend_domain>:
    ea60:	push   r13
    ea62:	push   r12
    ea64:	push   rbp
    ea65:	push   rbx
    ea66:	mov    rbx,rdi
    ea69:	sub    rsp,0x8
    ea6d:	mov    rax,QWORD PTR [rdi+0xc0]
    ea74:	mov    rbp,QWORD PTR [rdi]
    ea77:	mov    rdi,QWORD PTR [rax+0x30]
    ea7b:	call   QWORD PTR [rax]
    ea7d:	test   eax,eax
    ea7f:	je     eb60 <suspend_domain+0x100>
    ea85:	mov    esi,DWORD PTR [rbx+0x8]
    ea88:	lea    rcx,[rbx+0x10]
    ea8c:	mov    edx,0x1
    ea91:	mov    rdi,rbp
    ea94:	call   5b40 <xc_domain_getinfo@plt>
    ea99:	cmp    eax,0x1
    ea9c:	jne    eae0 <suspend_domain+0x80>
    ea9e:	mov    eax,DWORD PTR [rbx+0x8]
    eaa1:	cmp    DWORD PTR [rbx+0x10],eax
    eaa4:	jne    eae0 <suspend_domain+0x80>
    eaa6:	movabs rax,0xffffffff00000004
    eab0:	and    rax,QWORD PTR [rbx+0x18]
    eab4:	movabs rdx,0x200000004
    eabe:	cmp    rax,rdx
    eac1:	jne    eb20 <suspend_domain+0xc0>
    eac3:	lea    rsi,[rip+0x1514e]        # 23c18 <__PRETTY_FUNCTION__.13419+0x508>
    eaca:	mov    rdi,rbp
    eacd:	call   5c10 <xc_report_progress_single@plt>
    ead2:	xor    eax,eax
    ead4:	add    rsp,0x8
    ead8:	pop    rbx
    ead9:	pop    rbp
    eada:	pop    r12
    eadc:	pop    r13
    eade:	ret    
    eadf:	nop
    eae0:	call   5940 <__errno_location@plt>
    eae5:	mov    r12d,DWORD PTR [rax]
    eae8:	mov    rbx,rax
    eaeb:	mov    rdi,rbp
    eaee:	mov    esi,r12d
    eaf1:	call   6570 <xc_strerror@plt>
    eaf6:	mov    ecx,DWORD PTR [rbx]
    eaf8:	lea    rdx,[rip+0x14c51]        # 23750 <__PRETTY_FUNCTION__.13419+0x40>
    eaff:	mov    r8,rax
    eb02:	mov    esi,0x1
    eb07:	xor    eax,eax
    eb09:	mov    rdi,rbp
    eb0c:	call   5d50 <xc_report_error@plt>
    eb11:	mov    DWORD PTR [rbx],r12d
    eb14:	mov    eax,0xffffffff
    eb19:	jmp    ead4 <suspend_domain+0x74>
    eb1b:	nop    DWORD PTR [rax+rax*1+0x0]
    eb20:	call   5940 <__errno_location@plt>
    eb25:	movzx  ecx,BYTE PTR [rbx+0x18]
    eb29:	mov    r13d,DWORD PTR [rax]
    eb2c:	lea    rdx,[rip+0x14c4d]        # 23780 <__PRETTY_FUNCTION__.13419+0x70>
    eb33:	mov    r8d,DWORD PTR [rbx+0x1c]
    eb37:	mov    r12,rax
    eb3a:	mov    esi,0x1
    eb3f:	xor    eax,eax
    eb41:	mov    rdi,rbp
    eb44:	shr    cl,0x2
    eb47:	and    ecx,0x1
    eb4a:	call   5d50 <xc_report_error@plt>
    eb4f:	mov    DWORD PTR [r12],r13d
    eb53:	mov    eax,0xffffffff
    eb58:	jmp    ead4 <suspend_domain+0x74>
    eb5d:	nop    DWORD PTR [rax]
    eb60:	call   5940 <__errno_location@plt>
    eb65:	mov    r12d,DWORD PTR [rax]
    eb68:	lea    rdx,[rip+0x14bb9]        # 23728 <__PRETTY_FUNCTION__.13419+0x18>
    eb6f:	mov    rbx,rax
    eb72:	xor    ecx,ecx
    eb74:	xor    eax,eax
    eb76:	mov    esi,0x1
    eb7b:	mov    rdi,rbp
    eb7e:	call   5d50 <xc_report_error@plt>
    eb83:	mov    DWORD PTR [rbx],r12d
    eb86:	mov    eax,0xffffffff
    eb8b:	jmp    ead4 <suspend_domain+0x74>

000000000000eb90 <write_batch>:
    eb90:	push   r15
    eb92:	push   r14
    eb94:	push   r13
    eb96:	push   r12
    eb98:	push   rbp
    eb99:	push   rbx
    eb9a:	sub    rsp,0xb8
    eba1:	mov    rax,QWORD PTR fs:0x28
    ebaa:	mov    QWORD PTR [rsp+0xa8],rax
    ebb2:	xor    eax,eax
    ebb4:	mov    rax,QWORD PTR [rdi]
    ebb7:	mov    QWORD PTR [rsp+0xa0],0x0
    ebc3:	mov    QWORD PTR [rsp+0x94],0x0
    ebcf:	mov    DWORD PTR [rsp+0x9c],0x0
    ebda:	mov    DWORD PTR [rsp+0x90],0x1
    ebe5:	mov    QWORD PTR [rsp+0x30],rax
    ebea:	mov    eax,DWORD PTR [rdi+0xf8]
    ebf0:	test   eax,eax
    ebf2:	mov    DWORD PTR [rsp+0x50],eax
    ebf6:	je     f372 <write_batch+0x7e2>
    ebfc:	mov    r13d,DWORD PTR [rsp+0x50]
    ec01:	mov    r12,rdi
    ec04:	lea    rax,[r13*8+0x0]
    ec0c:	mov    r14,r13
    ec0f:	mov    rbx,rax
    ec12:	mov    rdi,rax
    ec15:	mov    QWORD PTR [rsp+0x58],rax
    ec1a:	call   5ff0 <malloc@plt>
    ec1f:	mov    rdi,rbx
    ec22:	mov    rbp,rax
    ec25:	call   5ff0 <malloc@plt>
    ec2a:	lea    rdi,[r13*4+0x0]
    ec32:	mov    rbx,rax
    ec35:	call   5ff0 <malloc@plt>
    ec3a:	mov    rdi,r13
    ec3d:	mov    esi,0x8
    ec42:	mov    r15,rax
    ec45:	mov    QWORD PTR [rsp+0x8],rax
    ec4a:	call   5de0 <calloc@plt>
    ec4f:	mov    rdi,r13
    ec52:	mov    esi,0x8
    ec57:	mov    QWORD PTR [rsp+0x18],rax
    ec5c:	call   5de0 <calloc@plt>
    ec61:	lea    edi,[r14+0x4]
    ec65:	mov    r13,rax
    ec68:	mov    QWORD PTR [rsp+0x10],rax
    ec6d:	shl    rdi,0x4
    ec71:	call   5ff0 <malloc@plt>
    ec76:	test   rbp,rbp
    ec79:	mov    QWORD PTR [rsp+0x40],rax
    ec7e:	je     f29f <write_batch+0x70f>
    ec84:	test   rbx,rbx
    ec87:	je     f29f <write_batch+0x70f>
    ec8d:	test   r15,r15
    ec90:	je     f29f <write_batch+0x70f>
    ec96:	cmp    QWORD PTR [rsp+0x18],0x0
    ec9c:	je     f29f <write_batch+0x70f>
    eca2:	test   r13,r13
    eca5:	je     f29f <write_batch+0x70f>
    ecab:	test   rax,rax
    ecae:	je     f29f <write_batch+0x70f>
    ecb4:	mov    eax,DWORD PTR [rsp+0x50]
    ecb8:	xor    r15d,r15d
    ecbb:	mov    r14d,0x1
    ecc1:	sub    eax,0x1
    ecc4:	lea    r13,[rax*8+0x8]
    eccc:	mov    DWORD PTR [rsp+0x78],eax
    ecd0:	mov    rax,QWORD PTR [r12+0xf0]
    ecd8:	mov    rdi,r12
    ecdb:	mov    rsi,QWORD PTR [rax+r15*1]
    ecdf:	call   QWORD PTR [r12+0x80]
    ece7:	cmp    rax,0xffffffffffffffff
    eceb:	mov    QWORD PTR [rbp+r15*1+0x0],rax
    ecf0:	mov    QWORD PTR [rbx+r15*1],rax
    ecf4:	jne    ed37 <write_batch+0x1a7>
    ecf6:	mov    rax,QWORD PTR [r12+0xf0]
    ecfe:	mov    rcx,QWORD PTR [rax+r15*1]
    ed02:	lea    eax,[rcx+0x7]
    ed05:	test   ecx,ecx
    ed07:	mov    edx,ecx
    ed09:	cmovns eax,ecx
    ed0c:	sar    edx,0x1f
    ed0f:	sar    eax,0x3
    ed12:	shr    edx,0x1d
    ed15:	cdqe   
    ed17:	add    rax,QWORD PTR [r12+0x100]
    ed1f:	add    ecx,edx
    ed21:	and    ecx,0x7
    ed24:	sub    ecx,edx
    ed26:	mov    rdx,r14
    ed29:	shl    rdx,cl
    ed2c:	or     BYTE PTR [rax],dl
    ed2e:	add    QWORD PTR [r12+0x108],0x1
    ed37:	add    r15,0x8
    ed3b:	cmp    r13,r15
    ed3e:	jne    ecd0 <write_batch+0x140>
    ed40:	mov    esi,DWORD PTR [r12+0x8]
    ed45:	mov    rcx,rbx
    ed48:	xor    r13d,r13d
    ed4b:	mov    rdi,QWORD PTR [rsp+0x30]
    ed50:	mov    edx,DWORD PTR [rsp+0x50]
    ed54:	call   5e80 <xc_get_pfn_type_batch@plt>
    ed59:	xor    r11d,r11d
    ed5c:	test   eax,eax
    ed5e:	mov    DWORD PTR [rsp+0x54],eax
    ed62:	mov    ecx,0xe0000000
    ed67:	mov    esi,0xf0000000
    ed6c:	mov    edi,0xd0000000
    ed71:	jne    f160 <write_batch+0x5d0>
    ed77:	nop    WORD PTR [rax+rax*1+0x0]
    ed80:	mov    rax,QWORD PTR [rbx+r11*1]
    ed84:	cmp    rax,rcx
    ed87:	je     eda4 <write_batch+0x214>
    ed89:	cmp    rax,rsi
    ed8c:	je     eda4 <write_batch+0x214>
    ed8e:	cmp    rax,rdi
    ed91:	je     eda4 <write_batch+0x214>
    ed93:	mov    rdx,QWORD PTR [rbp+r11*1+0x0]
    ed98:	mov    eax,r13d
    ed9b:	add    r13d,0x1
    ed9f:	mov    QWORD PTR [rbp+rax*8+0x0],rdx
    eda4:	add    r11,0x8
    eda8:	cmp    r11,r15
    edab:	jne    ed80 <write_batch+0x1f0>
    edad:	test   r13d,r13d
    edb0:	je     ef50 <write_batch+0x3c0>
    edb6:	mov    rax,QWORD PTR [rsp+0x30]
    edbb:	mov    esi,DWORD PTR [r12+0x8]
    edc0:	mov    ecx,r13d
    edc3:	mov    r9,QWORD PTR [rsp+0x8]
    edc8:	mov    r8,rbp
    edcb:	mov    edx,0x1
    edd0:	mov    QWORD PTR [rsp+0x28],r11
    edd5:	mov    QWORD PTR [rsp+0x60],rcx
    edda:	mov    rdi,QWORD PTR [rax+0x448]
    ede1:	call   59c0 <xenforeignmemory_map@plt>
    ede6:	test   rax,rax
    ede9:	mov    QWORD PTR [rsp+0x20],rax
    edee:	mov    r11,QWORD PTR [rsp+0x28]
    edf3:	je     f329 <write_batch+0x799>
    edf9:	lea    rax,[rsp+0x88]
    ee01:	xor    r15d,r15d
    ee04:	mov    QWORD PTR [rsp+0x68],rbp
    ee09:	mov    DWORD PTR [rsp+0x38],r13d
    ee0e:	xor    r14d,r14d
    ee11:	mov    QWORD PTR [rsp+0x70],r11
    ee16:	mov    QWORD PTR [rsp+0x48],rax
    ee1b:	mov    DWORD PTR [rsp+0x7c],r13d
    ee20:	mov    rbp,r15
    ee23:	jmp    eeb5 <write_batch+0x325>
    ee28:	nop    DWORD PTR [rax+rax*1+0x0]
    ee30:	cmp    r15d,0xffffffff
    ee34:	jne    f290 <write_batch+0x700>
    ee3a:	call   5940 <__errno_location@plt>
    ee3f:	cmp    DWORD PTR [rax],0xb
    ee42:	jne    f290 <write_batch+0x700>
    ee48:	mov    rax,QWORD PTR [r12+0xf0]
    ee50:	lea    rcx,[rbp*8+0x0]
    ee58:	mov    rax,QWORD PTR [rax+rcx*1]
    ee5c:	lea    edx,[rax+0x7]
    ee5f:	test   eax,eax
    ee61:	mov    esi,eax
    ee63:	cmovns edx,eax
    ee66:	sar    esi,0x1f
    ee69:	sub    DWORD PTR [rsp+0x38],0x1
    ee6e:	shr    esi,0x1d
    ee71:	sar    edx,0x3
    ee74:	lea    ecx,[rsi+rax*1]
    ee77:	movsxd rdx,edx
    ee7a:	add    rdx,QWORD PTR [r12+0x100]
    ee82:	mov    eax,0x1
    ee87:	and    ecx,0x7
    ee8a:	sub    ecx,esi
    ee8c:	shl    rax,cl
    ee8f:	or     BYTE PTR [rdx],al
    ee91:	mov    eax,0xf0000000
    ee96:	add    QWORD PTR [r12+0x108],0x1
    ee9f:	mov    QWORD PTR [rbx+rbp*8],rax
    eea3:	add    r14d,0x1
    eea7:	add    rbp,0x1
    eeab:	cmp    DWORD PTR [rsp+0x50],ebp
    eeaf:	jbe    f210 <write_batch+0x680>
    eeb5:	lea    rax,[rbp*8+0x0]
    eebd:	mov    rsi,QWORD PTR [rbx+rbp*8]
    eec1:	mov    QWORD PTR [rsp+0x28],rax
    eec6:	mov    eax,0xe0000000
    eecb:	cmp    rsi,rax
    eece:	je     eea7 <write_batch+0x317>
    eed0:	add    rax,0x10000000
    eed6:	cmp    rsi,rax
    eed9:	je     eea7 <write_batch+0x317>
    eedb:	sub    rax,0x20000000
    eee1:	cmp    rsi,rax
    eee4:	je     eea7 <write_batch+0x317>
    eee6:	mov    rax,QWORD PTR [rsp+0x8]
    eeeb:	mov    edx,r14d
    eeee:	mov    r9d,DWORD PTR [rax+rdx*4]
    eef2:	test   r9d,r9d
    eef5:	jne    f228 <write_batch+0x698>
    eefb:	mov    rax,QWORD PTR [rsp+0x20]
    ef00:	shl    rdx,0xc
    ef04:	mov    rdi,r12
    ef07:	lea    r13,[rax+rdx*1]
    ef0b:	mov    rdx,QWORD PTR [rsp+0x48]
    ef10:	mov    QWORD PTR [rsp+0x88],r13
    ef18:	call   QWORD PTR [r12+0x88]
    ef20:	mov    r15d,eax
    ef23:	mov    rax,QWORD PTR [rsp+0x88]
    ef2b:	cmp    r13,rax
    ef2e:	je     ef39 <write_batch+0x3a9>
    ef30:	mov    rcx,QWORD PTR [rsp+0x10]
    ef35:	mov    QWORD PTR [rcx+rbp*8],rax
    ef39:	test   r15d,r15d
    ef3c:	jne    ee30 <write_batch+0x2a0>
    ef42:	mov    rcx,QWORD PTR [rsp+0x18]
    ef47:	mov    QWORD PTR [rcx+rbp*8],rax
    ef4b:	jmp    eea3 <write_batch+0x313>
    ef50:	mov    DWORD PTR [rsp+0x38],0x0
    ef58:	mov    QWORD PTR [rsp+0x20],0x0
    ef61:	mov    rdi,QWORD PTR [rsp+0x58]
    ef66:	mov    QWORD PTR [rsp+0x28],r11
    ef6b:	call   5ff0 <malloc@plt>
    ef70:	test   rax,rax
    ef73:	mov    r14,rax
    ef76:	mov    r11,QWORD PTR [rsp+0x28]
    ef7b:	je     f2f0 <write_batch+0x760>
    ef81:	mov    eax,DWORD PTR [rsp+0x38]
    ef85:	mov    edi,DWORD PTR [rsp+0x50]
    ef89:	mov    rcx,QWORD PTR [r12+0xf0]
    ef91:	shl    eax,0xc
    ef94:	mov    DWORD PTR [rsp+0xa0],edi
    ef9b:	lea    eax,[rax+rdi*8+0x8]
    ef9f:	mov    DWORD PTR [rsp+0x94],eax
    efa6:	xor    eax,eax
    efa8:	nop    DWORD PTR [rax+rax*1+0x0]
    efb0:	mov    rdx,QWORD PTR [rbx+rax*1]
    efb4:	shl    rdx,0x20
    efb8:	or     rdx,QWORD PTR [rcx+rax*1]
    efbc:	mov    QWORD PTR [r14+rax*1],rdx
    efc0:	add    rax,0x8
    efc4:	cmp    r11,rax
    efc7:	jne    efb0 <write_batch+0x420>
    efc9:	mov    r11,QWORD PTR [rsp+0x40]
    efce:	lea    rax,[rsp+0x90]
    efd6:	mov    r8d,DWORD PTR [rsp+0x38]
    efdb:	mov    edi,DWORD PTR [r12+0xc]
    efe0:	mov    QWORD PTR [r11],rax
    efe3:	lea    rax,[rsp+0x94]
    efeb:	test   r8d,r8d
    efee:	mov    QWORD PTR [r11+0x8],0x4
    eff6:	mov    QWORD PTR [r11+0x18],0x4
    effe:	mov    QWORD PTR [r11+0x10],rax
    f002:	lea    rax,[rsp+0xa0]
    f00a:	mov    QWORD PTR [r11+0x28],0x8
    f012:	mov    QWORD PTR [r11+0x30],r14
    f016:	mov    QWORD PTR [r11+0x20],rax
    f01a:	mov    rax,QWORD PTR [rsp+0x58]
    f01f:	mov    QWORD PTR [r11+0x38],rax
    f023:	je     f1a8 <write_batch+0x618>
    f029:	mov    r9d,DWORD PTR [rsp+0x50]
    f02e:	mov    r10,QWORD PTR [rsp+0x18]
    f033:	xor    ecx,ecx
    f035:	mov    edx,0x4
    f03a:	nop    WORD PTR [rax+rax*1+0x0]
    f040:	mov    rsi,QWORD PTR [r10+rcx*8]
    f044:	test   rsi,rsi
    f047:	je     f065 <write_batch+0x4d5>
    f049:	movsxd rax,edx
    f04c:	sub    r8d,0x1
    f050:	add    edx,0x1
    f053:	shl    rax,0x4
    f057:	add    rax,r11
    f05a:	mov    QWORD PTR [rax],rsi
    f05d:	mov    QWORD PTR [rax+0x8],0x1000
    f065:	add    rcx,0x1
    f069:	cmp    r9d,ecx
    f06c:	ja     f040 <write_batch+0x4b0>
    f06e:	mov    rsi,QWORD PTR [rsp+0x40]
    f073:	mov    DWORD PTR [rsp+0x38],r8d
    f078:	call   5880 <writev_exact@plt>
    f07d:	test   eax,eax
    f07f:	jne    f1bf <write_batch+0x62f>
    f085:	mov    eax,DWORD PTR [rsp+0x38]
    f089:	test   eax,eax
    f08b:	jne    f396 <write_batch+0x806>
    f091:	mov    DWORD PTR [r12+0xf8],0x0
    f09d:	mov    rdi,r14
    f0a0:	call   5900 <free@plt>
    f0a5:	cmp    QWORD PTR [rsp+0x20],0x0
    f0ab:	je     f0d0 <write_batch+0x540>
    f0ad:	mov    eax,r13d
    f0b0:	mov    QWORD PTR [rsp+0x60],rax
    f0b5:	mov    rax,QWORD PTR [rsp+0x30]
    f0ba:	mov    rdx,QWORD PTR [rsp+0x60]
    f0bf:	mov    rsi,QWORD PTR [rsp+0x20]
    f0c4:	mov    rdi,QWORD PTR [rax+0x448]
    f0cb:	call   5e40 <xenforeignmemory_unmap@plt>
    f0d0:	mov    eax,DWORD PTR [rsp+0x78]
    f0d4:	mov    rdi,QWORD PTR [rsp+0x10]
    f0d9:	mov    r13,rdi
    f0dc:	lea    r12,[rdi+rax*8+0x8]
    f0e1:	nop    DWORD PTR [rax+0x0]
    f0e8:	mov    rdi,QWORD PTR [r13+0x0]
    f0ec:	add    r13,0x8
    f0f0:	call   5900 <free@plt>
    f0f5:	cmp    r12,r13
    f0f8:	jne    f0e8 <write_batch+0x558>
    f0fa:	mov    rdi,QWORD PTR [rsp+0x40]
    f0ff:	call   5900 <free@plt>
    f104:	mov    rdi,QWORD PTR [rsp+0x10]
    f109:	call   5900 <free@plt>
    f10e:	mov    rdi,QWORD PTR [rsp+0x18]
    f113:	call   5900 <free@plt>
    f118:	mov    rdi,QWORD PTR [rsp+0x8]
    f11d:	call   5900 <free@plt>
    f122:	mov    rdi,rbx
    f125:	call   5900 <free@plt>
    f12a:	mov    rdi,rbp
    f12d:	call   5900 <free@plt>
    f132:	mov    rbx,QWORD PTR [rsp+0xa8]
    f13a:	xor    rbx,QWORD PTR fs:0x28
    f143:	mov    eax,DWORD PTR [rsp+0x54]
    f147:	jne    f391 <write_batch+0x801>
    f14d:	add    rsp,0xb8
    f154:	pop    rbx
    f155:	pop    rbp
    f156:	pop    r12
    f158:	pop    r13
    f15a:	pop    r14
    f15c:	pop    r15
    f15e:	ret    
    f15f:	nop
    f160:	call   5940 <__errno_location@plt>
    f165:	mov    r14,QWORD PTR [rsp+0x30]
    f16a:	mov    r13d,DWORD PTR [rax]
    f16d:	mov    r12,rax
    f170:	mov    esi,r13d
    f173:	mov    rdi,r14
    f176:	call   6570 <xc_strerror@plt>
    f17b:	mov    ecx,DWORD PTR [r12]
    f17f:	lea    rdx,[rip+0x1466a]        # 237f0 <__PRETTY_FUNCTION__.13419+0xe0>
    f186:	mov    r8,rax
    f189:	mov    esi,0x1
    f18e:	mov    rdi,r14
    f191:	xor    eax,eax
    f193:	call   5d50 <xc_report_error@plt>
    f198:	mov    DWORD PTR [r12],r13d
    f19c:	jmp    f0d0 <write_batch+0x540>
    f1a1:	nop    DWORD PTR [rax+0x0]
    f1a8:	mov    rsi,QWORD PTR [rsp+0x40]
    f1ad:	mov    edx,0x4
    f1b2:	call   5880 <writev_exact@plt>
    f1b7:	test   eax,eax
    f1b9:	je     f091 <write_batch+0x501>
    f1bf:	call   5940 <__errno_location@plt>
    f1c4:	mov    r15d,DWORD PTR [rax]
    f1c7:	mov    rdi,QWORD PTR [rsp+0x30]
    f1cc:	mov    r12,rax
    f1cf:	mov    esi,r15d
    f1d2:	call   6570 <xc_strerror@plt>
    f1d7:	mov    ecx,DWORD PTR [r12]
    f1db:	mov    rdi,QWORD PTR [rsp+0x30]
    f1e0:	lea    rdx,[rip+0x146d1]        # 238b8 <__PRETTY_FUNCTION__.13419+0x1a8>
    f1e7:	mov    r8,rax
    f1ea:	mov    esi,0x1
    f1ef:	xor    eax,eax
    f1f1:	call   5d50 <xc_report_error@plt>
    f1f6:	mov    DWORD PTR [r12],r15d
    f1fa:	mov    DWORD PTR [rsp+0x54],0xffffffff
    f202:	jmp    f09d <write_batch+0x50d>
    f207:	nop    WORD PTR [rax+rax*1+0x0]
    f210:	mov    r11,QWORD PTR [rsp+0x70]
    f215:	mov    r13d,DWORD PTR [rsp+0x7c]
    f21a:	mov    rbp,QWORD PTR [rsp+0x68]
    f21f:	jmp    ef61 <write_batch+0x3d1>
    f224:	nop    DWORD PTR [rax+0x0]
    f228:	mov    QWORD PTR [rsp+0x38],rdx
    f22d:	mov    DWORD PTR [rsp+0x50],r9d
    f232:	mov    rbp,QWORD PTR [rsp+0x68]
    f237:	call   5940 <__errno_location@plt>
    f23c:	mov    rdx,QWORD PTR [rsp+0x38]
    f241:	mov    r13d,DWORD PTR [rax]
    f244:	mov    r14,rax
    f247:	mov    rcx,QWORD PTR [rsp+0x28]
    f24c:	mov    rax,QWORD PTR [r12+0xf0]
    f254:	mov    esi,0x1
    f259:	mov    r9d,DWORD PTR [rsp+0x50]
    f25e:	mov    rdi,QWORD PTR [rsp+0x30]
    f263:	mov    r8,QWORD PTR [rbp+rdx*8+0x0]
    f268:	lea    rdx,[rip+0x145d9]        # 23848 <__PRETTY_FUNCTION__.13419+0x138>
    f26f:	mov    rcx,QWORD PTR [rax+rcx*1]
    f273:	xor    eax,eax
    f275:	call   5d50 <xc_report_error@plt>
    f27a:	mov    DWORD PTR [r14],r13d
    f27d:	mov    DWORD PTR [rsp+0x54],0xffffffff
    f285:	jmp    f0b5 <write_batch+0x525>
    f28a:	nop    WORD PTR [rax+rax*1+0x0]
    f290:	mov    rbp,QWORD PTR [rsp+0x68]
    f295:	mov    DWORD PTR [rsp+0x54],r15d
    f29a:	jmp    f0b5 <write_batch+0x525>
    f29f:	call   5940 <__errno_location@plt>
    f2a4:	mov    ecx,DWORD PTR [rsp+0x50]
    f2a8:	mov    rdi,QWORD PTR [rsp+0x30]
    f2ad:	lea    rdx,[rip+0x14504]        # 237b8 <__PRETTY_FUNCTION__.13419+0xa8>
    f2b4:	mov    r14d,DWORD PTR [rax]
    f2b7:	mov    r13,rax
    f2ba:	mov    esi,0x1
    f2bf:	xor    eax,eax
    f2c1:	call   5d50 <xc_report_error@plt>
    f2c6:	cmp    QWORD PTR [rsp+0x10],0x0
    f2cc:	mov    DWORD PTR [r13+0x0],r14d
    f2d0:	mov    DWORD PTR [rsp+0x54],0xffffffff
    f2d8:	je     f0fa <write_batch+0x56a>
    f2de:	mov    eax,DWORD PTR [rsp+0x50]
    f2e2:	sub    eax,0x1
    f2e5:	mov    DWORD PTR [rsp+0x78],eax
    f2e9:	jmp    f0d0 <write_batch+0x540>
    f2ee:	xchg   ax,ax
    f2f0:	call   5940 <__errno_location@plt>
    f2f5:	mov    rcx,QWORD PTR [rsp+0x58]
    f2fa:	mov    r15d,DWORD PTR [rax]
    f2fd:	lea    rdx,[rip+0x14574]        # 23878 <__PRETTY_FUNCTION__.13419+0x168>
    f304:	mov    rdi,QWORD PTR [rsp+0x30]
    f309:	mov    r12,rax
    f30c:	mov    esi,0x1
    f311:	xor    eax,eax
    f313:	call   5d50 <xc_report_error@plt>
    f318:	mov    DWORD PTR [r12],r15d
    f31c:	mov    DWORD PTR [rsp+0x54],0xffffffff
    f324:	jmp    f09d <write_batch+0x50d>
    f329:	call   5940 <__errno_location@plt>
    f32e:	mov    r14,QWORD PTR [rsp+0x30]
    f333:	mov    r13d,DWORD PTR [rax]
    f336:	mov    r12,rax
    f339:	mov    esi,r13d
    f33c:	mov    rdi,r14
    f33f:	call   6570 <xc_strerror@plt>
    f344:	mov    ecx,DWORD PTR [r12]
    f348:	lea    rdx,[rip+0x144d1]        # 23820 <__PRETTY_FUNCTION__.13419+0x110>
    f34f:	mov    r8,rax
    f352:	mov    esi,0x1
    f357:	mov    rdi,r14
    f35a:	xor    eax,eax
    f35c:	call   5d50 <xc_report_error@plt>
    f361:	mov    DWORD PTR [r12],r13d
    f365:	mov    DWORD PTR [rsp+0x54],0xffffffff
    f36d:	jmp    f0d0 <write_batch+0x540>
    f372:	lea    rcx,[rip+0x149f7]        # 23d70 <__PRETTY_FUNCTION__.13432>
    f379:	lea    rsi,[rip+0x148ad]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
    f380:	lea    rdi,[rip+0x148b3]        # 23c3a <__PRETTY_FUNCTION__.13419+0x52a>
    f387:	mov    edx,0x62
    f38c:	call   5c70 <__assert_fail@plt>
    f391:	call   5b80 <__stack_chk_fail@plt>
    f396:	lea    rcx,[rip+0x149d3]        # 23d70 <__PRETTY_FUNCTION__.13432>
    f39d:	lea    rsi,[rip+0x14889]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
    f3a4:	lea    rdi,[rip+0x1489c]        # 23c47 <__PRETTY_FUNCTION__.13419+0x537>
    f3ab:	mov    edx,0x104
    f3b0:	call   5c70 <__assert_fail@plt>
    f3b5:	nop
    f3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f3c0 <send_dirty_pages>:
    f3c0:	push   r15
    f3c2:	push   r14
    f3c4:	push   r13
    f3c6:	push   r12
    f3c8:	mov    r13,rdi
    f3cb:	push   rbp
    f3cc:	push   rbx
    f3cd:	mov    rbp,rsi
    f3d0:	sub    rsp,0x8
    f3d4:	cmp    QWORD PTR [rdi+0xd8],0x0
    f3dc:	mov    r12,QWORD PTR [rdi]
    f3df:	mov    r15,QWORD PTR [rdi+0x110]
    f3e6:	mov    ecx,DWORD PTR [rdi+0xf8]
    f3ec:	je     f4e1 <send_dirty_pages+0x121>
    f3f2:	xor    r14d,r14d
    f3f5:	xor    ebx,ebx
    f3f7:	jmp    f41c <send_dirty_pages+0x5c>
    f3f9:	nop    DWORD PTR [rax+0x0]
    f400:	mov    ecx,DWORD PTR [r13+0xf8]
    f407:	add    r14,0x1
    f40b:	add    rbx,0x1
    f40f:	cmp    QWORD PTR [r13+0xd8],rbx
    f416:	jbe    f4b0 <send_dirty_pages+0xf0>
    f41c:	lea    eax,[rbx+0x7]
    f41f:	test   ebx,ebx
    f421:	mov    edx,ebx
    f423:	cmovns eax,ebx
    f426:	sar    edx,0x1f
    f429:	sar    eax,0x3
    f42c:	shr    edx,0x1d
    f42f:	cdqe   
    f431:	movsx  esi,BYTE PTR [r15+rax*1]
    f436:	lea    eax,[rdx+rbx*1]
    f439:	and    eax,0x7
    f43c:	sub    eax,edx
    f43e:	bt     esi,eax
    f441:	jae    f40b <send_dirty_pages+0x4b>
    f443:	cmp    ecx,0x400
    f449:	je     f480 <send_dirty_pages+0xc0>
    f44b:	mov    rax,QWORD PTR [r13+0xf0]
    f452:	lea    edx,[rcx+0x1]
    f455:	mov    DWORD PTR [r13+0xf8],edx
    f45c:	mov    QWORD PTR [rax+rcx*8],rbx
    f460:	test   r14d,0x3ff
    f467:	jne    f400 <send_dirty_pages+0x40>
    f469:	mov    rdx,rbp
    f46c:	mov    rsi,r14
    f46f:	mov    rdi,r12
    f472:	call   5c40 <xc_report_progress_step@plt>
    f477:	jmp    f400 <send_dirty_pages+0x40>
    f479:	nop    DWORD PTR [rax+0x0]
    f480:	mov    rdi,r13
    f483:	call   eb90 <write_batch>
    f488:	test   eax,eax
    f48a:	jne    f4ee <send_dirty_pages+0x12e>
    f48c:	mov    eax,DWORD PTR [r13+0xf8]
    f493:	mov    rdx,QWORD PTR [r13+0xf0]
    f49a:	lea    ecx,[rax+0x1]
    f49d:	mov    DWORD PTR [r13+0xf8],ecx
    f4a4:	mov    QWORD PTR [rdx+rax*8],rbx
    f4a8:	jmp    f460 <send_dirty_pages+0xa0>
    f4aa:	nop    WORD PTR [rax+rax*1+0x0]
    f4b0:	test   ecx,ecx
    f4b2:	jne    f500 <send_dirty_pages+0x140>
    f4b4:	cmp    r14,rbp
    f4b7:	ja     f511 <send_dirty_pages+0x151>
    f4b9:	mov    rdi,r12
    f4bc:	mov    rdx,rbp
    f4bf:	mov    rsi,rbp
    f4c2:	call   5c40 <xc_report_progress_step@plt>
    f4c7:	mov    rax,QWORD PTR [r13+0xb0]
    f4ce:	add    rsp,0x8
    f4d2:	mov    rdi,r13
    f4d5:	pop    rbx
    f4d6:	pop    rbp
    f4d7:	pop    r12
    f4d9:	pop    r13
    f4db:	pop    r14
    f4dd:	pop    r15
    f4df:	jmp    rax
    f4e1:	test   ecx,ecx
    f4e3:	je     f4b9 <send_dirty_pages+0xf9>
    f4e5:	call   eb90 <write_batch>
    f4ea:	test   eax,eax
    f4ec:	je     f4b9 <send_dirty_pages+0xf9>
    f4ee:	add    rsp,0x8
    f4f2:	pop    rbx
    f4f3:	pop    rbp
    f4f4:	pop    r12
    f4f6:	pop    r13
    f4f8:	pop    r14
    f4fa:	pop    r15
    f4fc:	ret    
    f4fd:	nop    DWORD PTR [rax]
    f500:	mov    rdi,r13
    f503:	call   eb90 <write_batch>
    f508:	test   eax,eax
    f50a:	jne    f4ee <send_dirty_pages+0x12e>
    f50c:	cmp    r14,rbp
    f50f:	jbe    f4b9 <send_dirty_pages+0xf9>
    f511:	call   5940 <__errno_location@plt>
    f516:	mov    rsi,QWORD PTR [r12+0x8]
    f51b:	mov    r14d,DWORD PTR [rax]
    f51e:	lea    r8,[rip+0x143c3]        # 238e8 <__PRETTY_FUNCTION__.13419+0x1d8>
    f525:	mov    rbx,rax
    f528:	xor    ecx,ecx
    f52a:	mov    edx,0x3
    f52f:	mov    rdi,r12
    f532:	xor    eax,eax
    f534:	call   6540 <xc_report@plt>
    f539:	mov    DWORD PTR [rbx],r14d
    f53c:	jmp    f4b9 <send_dirty_pages+0xf9>
    f541:	nop    DWORD PTR [rax+rax*1+0x0]
    f546:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f550 <send_all_pages>:
    f550:	push   rbx
    f551:	mov    rax,QWORD PTR [rdi+0xd8]
    f558:	mov    rbx,rdi
    f55b:	mov    rdi,QWORD PTR [rdi+0x110]
    f562:	mov    esi,0xff
    f567:	lea    edx,[rax+0xe]
    f56a:	add    eax,0x7
    f56d:	cmovns edx,eax
    f570:	sar    edx,0x3
    f573:	movsxd rdx,edx
    f576:	call   5ca0 <memset@plt>
    f57b:	mov    rsi,QWORD PTR [rbx+0xd8]
    f582:	mov    rdi,rbx
    f585:	pop    rbx
    f586:	jmp    f3c0 <send_dirty_pages>
    f58b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f590 <update_progress_string.isra.1>:
    f590:	push   r13
    f592:	push   r12
    f594:	mov    ecx,esi
    f596:	push   rbp
    f597:	push   rbx
    f598:	mov    rbp,rdx
    f59b:	lea    rdx,[rip+0x146b3]        # 23c55 <__PRETTY_FUNCTION__.13419+0x545>
    f5a2:	mov    r12,rdi
    f5a5:	mov    esi,0x1
    f5aa:	sub    rsp,0x18
    f5ae:	mov    rax,QWORD PTR fs:0x28
    f5b7:	mov    QWORD PTR [rsp+0x8],rax
    f5bc:	xor    eax,eax
    f5be:	mov    rdi,rsp
    f5c1:	mov    QWORD PTR [rsp],0x0
    f5c9:	call   5dc0 <__asprintf_chk@plt>
    f5ce:	cmp    eax,0xffffffff
    f5d1:	je     f610 <update_progress_string.isra.1+0x80>
    f5d3:	mov    rdi,QWORD PTR [rbp+0x0]
    f5d7:	xor    ebx,ebx
    f5d9:	call   5900 <free@plt>
    f5de:	mov    rsi,QWORD PTR [rsp]
    f5e2:	mov    rdi,r12
    f5e5:	mov    QWORD PTR [rbp+0x0],rsi
    f5e9:	call   5a20 <xc_set_progress_prefix@plt>
    f5ee:	mov    rdx,QWORD PTR [rsp+0x8]
    f5f3:	xor    rdx,QWORD PTR fs:0x28
    f5fc:	mov    eax,ebx
    f5fe:	jne    f64a <update_progress_string.isra.1+0xba>
    f600:	add    rsp,0x18
    f604:	pop    rbx
    f605:	pop    rbp
    f606:	pop    r12
    f608:	pop    r13
    f60a:	ret    
    f60b:	nop    DWORD PTR [rax+rax*1+0x0]
    f610:	mov    ebx,eax
    f612:	call   5940 <__errno_location@plt>
    f617:	mov    r13d,DWORD PTR [rax]
    f61a:	mov    rbp,rax
    f61d:	mov    rdi,r12
    f620:	mov    esi,r13d
    f623:	call   6570 <xc_strerror@plt>
    f628:	mov    ecx,DWORD PTR [rbp+0x0]
    f62b:	lea    rdx,[rip+0x142e6]        # 23918 <__PRETTY_FUNCTION__.13419+0x208>
    f632:	mov    r8,rax
    f635:	mov    esi,0x1
    f63a:	mov    rdi,r12
    f63d:	xor    eax,eax
    f63f:	call   5d50 <xc_report_error@plt>
    f644:	mov    DWORD PTR [rbp+0x0],r13d
    f648:	jmp    f5ee <update_progress_string.isra.1+0x5e>
    f64a:	call   5b80 <__stack_chk_fail@plt>
    f64f:	nop

000000000000f650 <suspend_and_send_dirty>:
    f650:	push   r15
    f652:	push   r14
    f654:	mov    r14,0xffffffffffffffff
    f65b:	push   r13
    f65d:	push   r12
    f65f:	push   rbp
    f660:	push   rbx
    f661:	mov    rbx,rdi
    f664:	sub    rsp,0x58
    f668:	mov    r13,QWORD PTR [rdi]
    f66b:	mov    rbp,QWORD PTR [rdi+0x110]
    f672:	mov    rax,QWORD PTR fs:0x28
    f67b:	mov    QWORD PTR [rsp+0x48],rax
    f680:	xor    eax,eax
    f682:	mov    rax,QWORD PTR [rdi+0xd8]
    f689:	mov    DWORD PTR [rsp+0x8],0x0
    f691:	mov    QWORD PTR [rsp],0x0
    f699:	mov    QWORD PTR [rsp+0x20],r14
    f69e:	mov    DWORD PTR [rsp+0x30],0x0
    f6a6:	mov    QWORD PTR [rsp+0x38],r14
    f6ab:	mov    DWORD PTR [rsp+0xc],eax
    f6af:	lea    rax,[rdi+0x110]
    f6b6:	mov    QWORD PTR [rsp+0x40],0x0
    f6bf:	mov    QWORD PTR [rsp+0x28],rax
    f6c4:	call   ea60 <suspend_domain>
    f6c9:	test   eax,eax
    f6cb:	mov    r12d,eax
    f6ce:	jne    f7a1 <suspend_and_send_dirty+0x151>
    f6d4:	mov    rcx,QWORD PTR [rsp+0x28]
    f6d9:	lea    rax,[rsp+0x20]
    f6de:	mov    esi,DWORD PTR [rbx+0x8]
    f6e1:	mov    edx,0xb
    f6e6:	mov    rdi,r13
    f6e9:	test   rcx,rcx
    f6ec:	cmove  rcx,rax
    f6f0:	lea    rax,[rsp+0x8]
    f6f5:	xor    r9d,r9d
    f6f8:	push   rax
    f6f9:	push   0x1
    f6fb:	mov    r8,QWORD PTR [rbx+0xd8]
    f702:	call   64b0 <xc_shadow_control@plt>
    f707:	cdqe   
    f709:	cmp    rax,QWORD PTR [rbx+0xd8]
    f710:	pop    rdx
    f711:	pop    rcx
    f712:	jne    f99a <suspend_and_send_dirty+0x34a>
    f718:	cmp    BYTE PTR [rbx+0xc8],0x0
    f71f:	jne    f7e0 <suspend_and_send_dirty+0x190>
    f725:	lea    rsi,[rip+0x1453d]        # 23c69 <__PRETTY_FUNCTION__.13419+0x559>
    f72c:	mov    rdi,r13
    f72f:	call   5a20 <xc_set_progress_prefix@plt>
    f734:	mov    rdx,QWORD PTR [rbx+0xd8]
    f73b:	mov    rsi,QWORD PTR [rbx+0x100]
    f742:	lea    eax,[rdx+0xe]
    f745:	add    edx,0x7
    f748:	cmovns eax,edx
    f74b:	sar    eax,0x3
    f74e:	test   eax,eax
    f750:	jle    f771 <suspend_and_send_dirty+0x121>
    f752:	lea    ecx,[rax-0x1]
    f755:	xor    eax,eax
    f757:	add    rcx,0x1
    f75b:	nop    DWORD PTR [rax+rax*1+0x0]
    f760:	movzx  edx,BYTE PTR [rsi+rax*1]
    f764:	or     BYTE PTR [rbp+rax*1+0x0],dl
    f768:	add    rax,0x1
    f76c:	cmp    rcx,rax
    f76f:	jne    f760 <suspend_and_send_dirty+0x110>
    f771:	cmp    BYTE PTR [rbx+0xc8],0x0
    f778:	jne    f787 <suspend_and_send_dirty+0x137>
    f77a:	cmp    DWORD PTR [rbx+0xcc],0x2
    f781:	je     f838 <suspend_and_send_dirty+0x1e8>
    f787:	mov    esi,DWORD PTR [rsp+0xc]
    f78b:	mov    rdi,rbx
    f78e:	add    rsi,QWORD PTR [rbx+0x108]
    f795:	call   f3c0 <send_dirty_pages>
    f79a:	test   eax,eax
    f79c:	mov    r12d,eax
    f79f:	je     f800 <suspend_and_send_dirty+0x1b0>
    f7a1:	xor    esi,esi
    f7a3:	mov    rdi,r13
    f7a6:	call   5a20 <xc_set_progress_prefix@plt>
    f7ab:	mov    rdi,QWORD PTR [rsp]
    f7af:	call   5900 <free@plt>
    f7b4:	mov    rdi,QWORD PTR [rsp+0x48]
    f7b9:	xor    rdi,QWORD PTR fs:0x28
    f7c2:	mov    eax,r12d
    f7c5:	jne    fa1c <suspend_and_send_dirty+0x3cc>
    f7cb:	add    rsp,0x58
    f7cf:	pop    rbx
    f7d0:	pop    rbp
    f7d1:	pop    r12
    f7d3:	pop    r13
    f7d5:	pop    r14
    f7d7:	pop    r15
    f7d9:	ret    
    f7da:	nop    WORD PTR [rax+rax*1+0x0]
    f7e0:	mov    esi,DWORD PTR [rbx+0xe0]
    f7e6:	mov    rdi,QWORD PTR [rbx]
    f7e9:	mov    rdx,rsp
    f7ec:	call   f590 <update_progress_string.isra.1>
    f7f1:	test   eax,eax
    f7f3:	mov    r12d,eax
    f7f6:	je     f734 <suspend_and_send_dirty+0xe4>
    f7fc:	jmp    f7a1 <suspend_and_send_dirty+0x151>
    f7fe:	xchg   ax,ax
    f800:	mov    rax,QWORD PTR [rbx+0xd8]
    f807:	mov    rdi,QWORD PTR [rbx+0x100]
    f80e:	lea    edx,[rax+0xe]
    f811:	add    eax,0x7
    f814:	cmovns edx,eax
    f817:	xor    esi,esi
    f819:	sar    edx,0x3
    f81c:	movsxd rdx,edx
    f81f:	call   5ca0 <memset@plt>
    f824:	mov    QWORD PTR [rbx+0x108],0x0
    f82f:	jmp    f7a1 <suspend_and_send_dirty+0x151>
    f834:	nop    DWORD PTR [rax+0x0]
    f838:	mov    esi,DWORD PTR [rbx+0x78]
    f83b:	lea    rdx,[rsp+0x10]
    f840:	mov    rdi,rbx
    f843:	mov    r14,QWORD PTR [rbx]
    f846:	mov    QWORD PTR [rsp+0x10],0x0
    f84f:	mov    QWORD PTR [rsp+0x18],0x0
    f858:	mov    r15,QWORD PTR [rbx+0x110]
    f85f:	call   5bc0 <read_record@plt>
    f864:	test   eax,eax
    f866:	mov    r12d,eax
    f869:	jne    f910 <suspend_and_send_dirty+0x2c0>
    f86f:	cmp    DWORD PTR [rsp+0x10],0xf
    f874:	jne    f9d3 <suspend_and_send_dirty+0x383>
    f87a:	mov    eax,DWORD PTR [rsp+0x14]
    f87e:	test   al,0x7
    f880:	jne    fa21 <suspend_and_send_dirty+0x3d1>
    f886:	shr    eax,0x3
    f889:	mov    rdi,QWORD PTR [rsp+0x18]
    f88e:	test   eax,eax
    f890:	je     f902 <suspend_and_send_dirty+0x2b2>
    f892:	mov    rbp,QWORD PTR [rdi]
    f895:	cmp    rbp,QWORD PTR [rbx+0xd8]
    f89c:	ja     f950 <suspend_and_send_dirty+0x300>
    f8a2:	lea    rdx,[rdi+0x8]
    f8a6:	sub    eax,0x1
    f8a9:	mov    esi,0x1
    f8ae:	lea    rdi,[rdx+rax*8]
    f8b2:	jmp    f8cc <suspend_and_send_dirty+0x27c>
    f8b4:	nop    DWORD PTR [rax+0x0]
    f8b8:	mov    rbp,QWORD PTR [rdx]
    f8bb:	add    rdx,0x8
    f8bf:	cmp    rbp,QWORD PTR [rbx+0xd8]
    f8c6:	ja     f950 <suspend_and_send_dirty+0x300>
    f8cc:	lea    eax,[rbp+0x7]
    f8cf:	test   ebp,ebp
    f8d1:	mov    r8d,ebp
    f8d4:	mov    r10,rsi
    f8d7:	cmovns eax,ebp
    f8da:	sar    r8d,0x1f
    f8de:	shr    r8d,0x1d
    f8e2:	sar    eax,0x3
    f8e5:	lea    ecx,[r8+rbp*1]
    f8e9:	cdqe   
    f8eb:	and    ecx,0x7
    f8ee:	sub    ecx,r8d
    f8f1:	shl    r10,cl
    f8f4:	or     BYTE PTR [r15+rax*1],r10b
    f8f8:	cmp    rdi,rdx
    f8fb:	jne    f8b8 <suspend_and_send_dirty+0x268>
    f8fd:	mov    rdi,QWORD PTR [rsp+0x18]
    f902:	call   5900 <free@plt>
    f907:	jmp    f787 <suspend_and_send_dirty+0x137>
    f90c:	nop    DWORD PTR [rax+0x0]
    f910:	mov    rdi,QWORD PTR [rsp+0x18]
    f915:	call   5900 <free@plt>
    f91a:	call   5940 <__errno_location@plt>
    f91f:	mov    rbx,rax
    f922:	mov    ebp,DWORD PTR [rbx]
    f924:	mov    rdi,r13
    f927:	mov    esi,ebp
    f929:	call   6570 <xc_strerror@plt>
    f92e:	mov    ecx,DWORD PTR [rbx]
    f930:	lea    rdx,[rip+0x14089]        # 239c0 <__PRETTY_FUNCTION__.13419+0x2b0>
    f937:	mov    r8,rax
    f93a:	mov    esi,0x1
    f93f:	mov    rdi,r13
    f942:	xor    eax,eax
    f944:	call   5d50 <xc_report_error@plt>
    f949:	mov    DWORD PTR [rbx],ebp
    f94b:	jmp    f7a1 <suspend_and_send_dirty+0x151>
    f950:	call   5940 <__errno_location@plt>
    f955:	mov    r12d,DWORD PTR [rax]
    f958:	mov    rbx,rax
    f95b:	mov    rdi,r14
    f95e:	mov    esi,r12d
    f961:	call   6570 <xc_strerror@plt>
    f966:	mov    r8d,DWORD PTR [rbx]
    f969:	lea    rdx,[rip+0x1430b]        # 23c7b <__PRETTY_FUNCTION__.13419+0x56b>
    f970:	mov    r9,rax
    f973:	mov    rcx,rbp
    f976:	mov    esi,0x1
    f97b:	mov    rdi,r14
    f97e:	xor    eax,eax
    f980:	call   5d50 <xc_report_error@plt>
    f985:	mov    rdi,QWORD PTR [rsp+0x18]
    f98a:	mov    DWORD PTR [rbx],r12d
    f98d:	mov    r12d,0xffffffff
    f993:	call   5900 <free@plt>
    f998:	jmp    f922 <suspend_and_send_dirty+0x2d2>
    f99a:	call   5940 <__errno_location@plt>
    f99f:	mov    ebp,DWORD PTR [rax]
    f9a1:	mov    rbx,rax
    f9a4:	mov    rdi,r13
    f9a7:	mov    r12d,r14d
    f9aa:	mov    esi,ebp
    f9ac:	call   6570 <xc_strerror@plt>
    f9b1:	mov    ecx,DWORD PTR [rbx]
    f9b3:	lea    rdx,[rip+0x137ae]        # 23168 <params.12800+0x408>
    f9ba:	mov    r8,rax
    f9bd:	mov    esi,0x1
    f9c2:	mov    rdi,r13
    f9c5:	xor    eax,eax
    f9c7:	call   5d50 <xc_report_error@plt>
    f9cc:	mov    DWORD PTR [rbx],ebp
    f9ce:	jmp    f7a1 <suspend_and_send_dirty+0x151>
    f9d3:	call   5940 <__errno_location@plt>
    f9d8:	mov    ebp,DWORD PTR [rax]
    f9da:	mov    rbx,rax
    f9dd:	mov    rdi,r14
    f9e0:	mov    esi,ebp
    f9e2:	call   6570 <xc_strerror@plt>
    f9e7:	mov    r8d,DWORD PTR [rbx]
    f9ea:	mov    ecx,DWORD PTR [rsp+0x10]
    f9ee:	lea    rdx,[rip+0x13f5b]        # 23950 <__PRETTY_FUNCTION__.13419+0x240>
    f9f5:	mov    r9,rax
    f9f8:	mov    esi,0x1
    f9fd:	mov    rdi,r14
    fa00:	xor    eax,eax
    fa02:	call   5d50 <xc_report_error@plt>
    fa07:	mov    DWORD PTR [rbx],ebp
    fa09:	mov    rdi,QWORD PTR [rsp+0x18]
    fa0e:	or     r12d,0xffffffff
    fa12:	call   5900 <free@plt>
    fa17:	jmp    f922 <suspend_and_send_dirty+0x2d2>
    fa1c:	call   5b80 <__stack_chk_fail@plt>
    fa21:	call   5940 <__errno_location@plt>
    fa26:	mov    ebp,DWORD PTR [rax]
    fa28:	mov    rbx,rax
    fa2b:	mov    rdi,r14
    fa2e:	mov    esi,ebp
    fa30:	call   6570 <xc_strerror@plt>
    fa35:	mov    r8d,DWORD PTR [rbx]
    fa38:	mov    r9,rax
    fa3b:	mov    ecx,DWORD PTR [rsp+0x14]
    fa3f:	lea    rdx,[rip+0x13f42]        # 23988 <__PRETTY_FUNCTION__.13419+0x278>
    fa46:	jmp    f9f8 <suspend_and_send_dirty+0x3a8>
    fa48:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000fa50 <save>:
    fa50:	push   r15
    fa52:	push   r14
    fa54:	mov    r14,0xffffffffffffffff
    fa5b:	push   r13
    fa5d:	push   r12
    fa5f:	mov    r13d,esi
    fa62:	push   rbp
    fa63:	push   rbx
    fa64:	movzx  r13d,r13w
    fa68:	mov    rbx,rdi
    fa6b:	sub    rsp,0x88
    fa72:	mov    r15,QWORD PTR [rdi]
    fa75:	mov    rax,QWORD PTR fs:0x28
    fa7e:	mov    QWORD PTR [rsp+0x78],rax
    fa83:	xor    eax,eax
    fa85:	call   5940 <__errno_location@plt>
    fa8a:	mov    edi,r13d
    fa8d:	mov    r12,rax
    fa90:	mov    ebp,DWORD PTR [rax]
    fa92:	call   5d30 <dhdr_type_to_str@plt>
    fa97:	sub    rsp,0x8
    fa9b:	mov    rsi,QWORD PTR [r15+0x8]
    fa9f:	lea    r8,[rip+0x141f1]        # 23c97 <__PRETTY_FUNCTION__.13419+0x587>
    faa6:	push   rax
    faa7:	mov    r9d,DWORD PTR [rbx+0x8]
    faab:	mov    rdi,r15
    faae:	xor    ecx,ecx
    fab0:	xor    eax,eax
    fab2:	mov    edx,0x5
    fab7:	mov    QWORD PTR [rsp+0x18],r15
    fabc:	call   6540 <xc_report@plt>
    fac1:	lea    rax,[rbx+0x110]
    fac8:	mov    QWORD PTR [rsp+0x60],r14
    facd:	mov    DWORD PTR [rsp+0x70],0x0
    fad5:	mov    QWORD PTR [rsp+0x78],r14
    fada:	mov    QWORD PTR [rsp+0x80],0x0
    fae6:	mov    rdi,rbx
    fae9:	mov    QWORD PTR [rsp+0x20],rax
    faee:	mov    QWORD PTR [rsp+0x68],rax
    faf3:	mov    DWORD PTR [r12],ebp
    faf7:	mov    r15,QWORD PTR [rbx]
    fafa:	call   QWORD PTR [rbx+0x90]
    fb00:	test   eax,eax
    fb02:	pop    rsi
    fb03:	pop    rdi
    fb04:	jne    fd53 <save+0x303>
    fb0a:	mov    rax,QWORD PTR [rbx+0xd8]
    fb11:	mov    rsi,QWORD PTR [rsp+0x58]
    fb16:	lea    rbp,[rsp+0x50]
    fb1b:	mov    rdi,r15
    fb1e:	lea    edx,[rax+0xe]
    fb21:	add    eax,0x7
    fb24:	cmovns edx,eax
    fb27:	sar    edx,0x3
    fb2a:	movsxd rdx,edx
    fb2d:	add    rdx,0xfff
    fb34:	shr    rdx,0xc
    fb38:	test   rsi,rsi
    fb3b:	cmove  rsi,rbp
    fb3f:	call   63d0 <xc__hypercall_buffer_alloc_pages@plt>
    fb44:	mov    edi,0x2000
    fb49:	mov    QWORD PTR [rsp+0x20],rax
    fb4e:	call   5ff0 <malloc@plt>
    fb53:	mov    QWORD PTR [rbx+0xf0],rax
    fb5a:	mov    QWORD PTR [rsp+0x18],rax
    fb5f:	mov    edi,0x1
    fb64:	mov    rax,QWORD PTR [rbx+0xd8]
    fb6b:	lea    esi,[rax+0xe]
    fb6e:	add    eax,0x7
    fb71:	cmovns esi,eax
    fb74:	sar    esi,0x3
    fb77:	movsxd rsi,esi
    fb7a:	call   5de0 <calloc@plt>
    fb7f:	mov    rcx,QWORD PTR [rsp+0x20]
    fb84:	mov    rdx,QWORD PTR [rsp+0x18]
    fb89:	mov    QWORD PTR [rbx+0x100],rax
    fb90:	test   rcx,rcx
    fb93:	sete   cl
    fb96:	test   rdx,rdx
    fb99:	sete   dl
    fb9c:	or     cl,dl
    fb9e:	jne    1048e <save+0xa3e>
    fba4:	test   rax,rax
    fba7:	je     1048e <save+0xa3e>
    fbad:	mov    rdi,QWORD PTR [rsp+0x8]
    fbb2:	lea    rsi,[rip+0x140f8]        # 23cb1 <__PRETTY_FUNCTION__.13419+0x5a1>
    fbb9:	call   5c10 <xc_report_progress_single@plt>
    fbbe:	mov    r15,QWORD PTR [rbx]
    fbc1:	xor    edx,edx
    fbc3:	xor    esi,esi
    fbc5:	mov    rdi,r15
    fbc8:	call   5be0 <xc_version@plt>
    fbcd:	xor    edx,edx
    fbcf:	movabs rcx,0x2000000464e4558
    fbd9:	mov    QWORD PTR [rsp+0x60],0x0
    fbe2:	mov    WORD PTR [rsp+0x46],dx
    fbe7:	mov    edx,eax
    fbe9:	mov    QWORD PTR [rsp+0x58],rcx
    fbee:	shr    edx,0x10
    fbf1:	mov    ecx,0xc
    fbf6:	test   eax,eax
    fbf8:	mov    DWORD PTR [rsp+0x48],edx
    fbfc:	movzx  edx,ax
    fbff:	mov    QWORD PTR [rsp+0x50],r14
    fc04:	mov    DWORD PTR [rsp+0x40],r13d
    fc09:	mov    WORD PTR [rsp+0x44],cx
    fc0e:	mov    DWORD PTR [rsp+0x4c],edx
    fc12:	js     104d9 <save+0xa89>
    fc18:	mov    edi,DWORD PTR [rbx+0xc]
    fc1b:	mov    rsi,rbp
    fc1e:	mov    edx,0x18
    fc23:	mov    QWORD PTR [rsp+0x18],rbp
    fc28:	call   6030 <write_exact@plt>
    fc2d:	test   eax,eax
    fc2f:	jne    103a5 <save+0x955>
    fc35:	mov    edi,DWORD PTR [rbx+0xc]
    fc38:	lea    rsi,[rsp+0x40]
    fc3d:	mov    edx,0x10
    fc42:	mov    QWORD PTR [rsp+0x30],rsi
    fc47:	call   6030 <write_exact@plt>
    fc4c:	test   eax,eax
    fc4e:	jne    104fb <save+0xaab>
    fc54:	mov    rdi,rbx
    fc57:	call   QWORD PTR [rbx+0x98]
    fc5d:	test   eax,eax
    fc5f:	mov    ebp,eax
    fc61:	jne    fd3a <save+0x2ea>
    fc67:	mov    QWORD PTR [rsp+0x28],r14
    fc6c:	mov    rdi,rbx
    fc6f:	call   QWORD PTR [rbx+0xa0]
    fc75:	test   eax,eax
    fc77:	jne    fd53 <save+0x303>
    fc7d:	mov    rdi,rbx
    fc80:	call   QWORD PTR [rbx+0xb0]
    fc86:	test   eax,eax
    fc88:	mov    r15d,eax
    fc8b:	jne    103f0 <save+0x9a0>
    fc91:	cmp    BYTE PTR [rbx+0xc8],0x0
    fc98:	jne    fe78 <save+0x428>
    fc9e:	mov    r9d,DWORD PTR [rbx+0xcc]
    fca5:	test   r9d,r9d
    fca8:	je     fd40 <save+0x2f0>
    fcae:	mov    rdi,rbx
    fcb1:	call   f650 <suspend_and_send_dirty>
    fcb6:	test   eax,eax
    fcb8:	jne    fd53 <save+0x303>
    fcbe:	movabs rdx,0xffffffff00000004
    fcc8:	and    rdx,QWORD PTR [rbx+0x18]
    fccc:	movabs rax,0x200000004
    fcd6:	cmp    rdx,rax
    fcd9:	jne    10400 <save+0x9b0>
    fcdf:	mov    rdi,rbx
    fce2:	call   QWORD PTR [rbx+0xa8]
    fce8:	test   eax,eax
    fcea:	jne    fd53 <save+0x303>
    fcec:	mov    r8d,DWORD PTR [rbx+0xcc]
    fcf3:	test   r8d,r8d
    fcf6:	jne    10190 <save+0x740>
    fcfc:	mov    rdi,QWORD PTR [rsp+0x8]
    fd01:	lea    rsi,[rip+0x1401d]        # 23d25 <__PRETTY_FUNCTION__.13419+0x615>
    fd08:	call   5c10 <xc_report_progress_single@plt>
    fd0d:	mov    rsi,QWORD PTR [rsp+0x18]
    fd12:	xor    ecx,ecx
    fd14:	xor    edx,edx
    fd16:	mov    rdi,rbx
    fd19:	mov    QWORD PTR [rsp+0x50],0x0
    fd22:	mov    QWORD PTR [rsp+0x58],0x0
    fd2b:	call   5870 <write_split_record@plt>
    fd30:	test   eax,eax
    fd32:	mov    ebp,eax
    fd34:	je     104c0 <save+0xa70>
    fd3a:	mov    r13d,DWORD PTR [r12]
    fd3e:	jmp    fd59 <save+0x309>
    fd40:	mov    rdi,rbx
    fd43:	mov    rbp,QWORD PTR [rbx]
    fd46:	call   ea60 <suspend_domain>
    fd4b:	test   eax,eax
    fd4d:	je     10260 <save+0x810>
    fd53:	mov    r13d,DWORD PTR [r12]
    fd57:	mov    ebp,eax
    fd59:	mov    r14,QWORD PTR [rsp+0x8]
    fd5e:	mov    esi,r13d
    fd61:	mov    rdi,r14
    fd64:	call   6570 <xc_strerror@plt>
    fd69:	mov    ecx,DWORD PTR [r12]
    fd6d:	lea    rdx,[rip+0x13fc8]        # 23d3c <__PRETTY_FUNCTION__.13419+0x62c>
    fd74:	mov    r8,rax
    fd77:	mov    esi,0x1
    fd7c:	mov    rdi,r14
    fd7f:	xor    eax,eax
    fd81:	call   5d50 <xc_report_error@plt>
    fd86:	mov    DWORD PTR [r12],r13d
    fd8a:	mov    rcx,QWORD PTR [rsp+0x10]
    fd8f:	mov    r14,QWORD PTR [rbx]
    fd92:	mov    rax,0xffffffffffffffff
    fd99:	mov    esi,DWORD PTR [rbx+0x8]
    fd9c:	mov    QWORD PTR [rsp+0x50],rax
    fda1:	xor    r9d,r9d
    fda4:	mov    DWORD PTR [rsp+0x60],0x0
    fdac:	mov    QWORD PTR [rsp+0x68],rax
    fdb1:	xor    r8d,r8d
    fdb4:	mov    QWORD PTR [rsp+0x58],rcx
    fdb9:	mov    QWORD PTR [rsp+0x70],0x0
    fdc2:	xor    ecx,ecx
    fdc4:	mov    r15,QWORD PTR [rbx+0x110]
    fdcb:	push   0x0
    fdcd:	xor    edx,edx
    fdcf:	push   0x0
    fdd1:	mov    rdi,r14
    fdd4:	call   64b0 <xc_shadow_control@plt>
    fdd9:	mov    rdi,rbx
    fddc:	call   QWORD PTR [rbx+0xb8]
    fde2:	test   eax,eax
    fde4:	pop    rcx
    fde5:	pop    rsi
    fde6:	jne    10220 <save+0x7d0>
    fdec:	test   r15,r15
    fdef:	je     fe2b <save+0x3db>
    fdf1:	mov    rax,QWORD PTR [rbx+0xd8]
    fdf8:	mov    rsi,QWORD PTR [rsp+0x58]
    fdfd:	mov    rdi,r14
    fe00:	lea    edx,[rax+0xe]
    fe03:	add    eax,0x7
    fe06:	cmovns edx,eax
    fe09:	lea    rax,[rsp+0x50]
    fe0e:	sar    edx,0x3
    fe11:	movsxd rdx,edx
    fe14:	add    rdx,0xfff
    fe1b:	shr    rdx,0xc
    fe1f:	test   rsi,rsi
    fe22:	cmove  rsi,rax
    fe26:	call   6330 <xc__hypercall_buffer_free_pages@plt>
    fe2b:	mov    rdi,QWORD PTR [rbx+0x100]
    fe32:	call   5900 <free@plt>
    fe37:	mov    rdi,QWORD PTR [rbx+0xf0]
    fe3e:	call   5900 <free@plt>
    fe43:	test   ebp,ebp
    fe45:	je     fe4b <save+0x3fb>
    fe47:	mov    DWORD PTR [r12],r13d
    fe4b:	mov    rcx,QWORD PTR [rsp+0x78]
    fe50:	xor    rcx,QWORD PTR fs:0x28
    fe59:	mov    eax,ebp
    fe5b:	jne    1053b <save+0xaeb>
    fe61:	add    rsp,0x88
    fe68:	pop    rbx
    fe69:	pop    rbp
    fe6a:	pop    r12
    fe6c:	pop    r13
    fe6e:	pop    r14
    fe70:	pop    r15
    fe72:	ret    
    fe73:	nop    DWORD PTR [rax+rax*1+0x0]
    fe78:	mov    r14,QWORD PTR [rbx]
    fe7b:	mov    esi,DWORD PTR [rbx+0x8]
    fe7e:	xor    r9d,r9d
    fe81:	push   0x0
    fe83:	push   0x0
    fe85:	xor    r8d,r8d
    fe88:	xor    ecx,ecx
    fe8a:	mov    edx,0x2
    fe8f:	mov    rdi,r14
    fe92:	call   64b0 <xc_shadow_control@plt>
    fe97:	test   eax,eax
    fe99:	pop    r11
    fe9b:	pop    rbp
    fe9c:	js     102c8 <save+0x878>
    fea2:	mov    rax,QWORD PTR [rbx+0xd8]
    fea9:	mov    rdi,QWORD PTR [rbx]
    feac:	mov    esi,DWORD PTR [rbx+0xe0]
    feb2:	mov    rdx,QWORD PTR [rsp+0x30]
    feb7:	mov    DWORD PTR [rsp+0x50],0x0
    febf:	mov    QWORD PTR [rsp+0x40],0x0
    fec8:	mov    DWORD PTR [rsp+0x54],eax
    fecc:	mov    rax,QWORD PTR [rbx+0xc0]
    fed3:	mov    QWORD PTR [rsp+0x20],rdi
    fed8:	mov    r13,QWORD PTR [rbx+0x110]
    fedf:	mov    r14,QWORD PTR [rax+0x8]
    fee3:	mov    r15,QWORD PTR [rax+0x30]
    fee7:	call   f590 <update_progress_string.isra.1>
    feec:	test   eax,eax
    feee:	jne    10280 <save+0x830>
    fef4:	mov    rax,QWORD PTR [rbx+0xd8]
    fefb:	pxor   xmm0,xmm0
    feff:	lea    rcx,[rip+0xffffffffffffeb3a]        # ea40 <simple_precopy_policy>
    ff06:	test   r14,r14
    ff09:	mov    rdi,r13
    ff0c:	mov    esi,0xff
    ff11:	lea    rbp,[rbx+0xe0]
    ff18:	lea    edx,[rax+0xe]
    ff1b:	cmove  r14,rcx
    ff1f:	movaps XMMWORD PTR [rbx+0xe0],xmm0
    ff26:	mov    QWORD PTR [rbx+0xe8],rax
    ff2d:	add    eax,0x7
    ff30:	cmovns edx,eax
    ff33:	xor    r13d,r13d
    ff36:	sar    edx,0x3
    ff39:	movsxd rdx,edx
    ff3c:	call   5ca0 <memset@plt>
    ff41:	mov    QWORD PTR [rsp+0x38],r12
    ff46:	mov    r12,rbx
    ff49:	nop    DWORD PTR [rax+0x0]
    ff50:	mov    rsi,QWORD PTR [rbp+0x8]
    ff54:	mov    rdi,QWORD PTR [rbp+0x0]
    ff58:	mov    rdx,r15
    ff5b:	call   r14
    ff5e:	mov    esi,DWORD PTR [rsp+0x54]
    ff62:	add    r13d,0x1
    ff66:	mov    ebx,eax
    ff68:	test   esi,esi
    ff6a:	je     100fa <save+0x6aa>
    ff70:	cmp    eax,0xffffffff
    ff73:	jne    100c8 <save+0x678>
    ff79:	mov    rdi,QWORD PTR [rsp+0x20]
    ff7e:	xor    esi,esi
    ff80:	mov    rbx,r12
    ff83:	mov    r12,QWORD PTR [rsp+0x38]
    ff88:	call   5a20 <xc_set_progress_prefix@plt>
    ff8d:	mov    rdi,QWORD PTR [rsp+0x40]
    ff92:	call   5900 <free@plt>
    ff97:	mov    rdi,rbx
    ff9a:	call   f650 <suspend_and_send_dirty>
    ff9f:	test   eax,eax
    ffa1:	jne    fd53 <save+0x303>
    ffa7:	cmp    BYTE PTR [rbx+0xd0],0x0
    ffae:	je     fcbe <save+0x26e>
    ffb4:	mov    r14d,DWORD PTR [rbx+0xcc]
    ffbb:	test   r14d,r14d
    ffbe:	je     fcbe <save+0x26e>
    ffc4:	mov    r14,QWORD PTR [rbx]
    ffc7:	mov    rax,QWORD PTR [rbx+0xd8]
    ffce:	lea    r8,[rip+0x13cec]        # 23cc1 <__PRETTY_FUNCTION__.13419+0x5b1>
    ffd5:	mov    DWORD PTR [rsp+0x40],0x0
    ffdd:	mov    QWORD PTR [rsp+0x54],0x0
    ffe6:	xor    ecx,ecx
    ffe8:	mov    DWORD PTR [rsp+0x5c],0x0
    fff0:	mov    DWORD PTR [rsp+0x50],0xd
    fff8:	mov    edx,0x3
    fffd:	mov    DWORD PTR [rsp+0x44],eax
   10001:	mov    rsi,QWORD PTR [r14+0x8]
   10005:	xor    eax,eax
   10007:	mov    ebp,DWORD PTR [r12]
   1000b:	mov    rdi,r14
   1000e:	call   6540 <xc_report@plt>
   10013:	mov    rsi,QWORD PTR [rsp+0x18]
   10018:	xor    ecx,ecx
   1001a:	xor    edx,edx
   1001c:	mov    DWORD PTR [r12],ebp
   10020:	mov    rdi,rbx
   10023:	call   5870 <write_split_record@plt>
   10028:	test   eax,eax
   1002a:	jne    fd53 <save+0x303>
   10030:	lea    rsi,[rip+0x13c9f]        # 23cd6 <__PRETTY_FUNCTION__.13419+0x5c6>
   10037:	mov    rdi,r14
   1003a:	call   5a20 <xc_set_progress_prefix@plt>
   1003f:	mov    rdi,rbx
   10042:	call   f550 <send_all_pages>
   10047:	test   eax,eax
   10049:	jne    fd53 <save+0x303>
   1004f:	mov    esi,DWORD PTR [rbx+0x8]
   10052:	push   QWORD PTR [rsp+0x30]
   10056:	xor    r9d,r9d
   10059:	push   0x0
   1005b:	mov    rcx,QWORD PTR [rsp+0x20]
   10060:	mov    edx,0xc
   10065:	mov    r8,QWORD PTR [rbx+0xd8]
   1006c:	mov    rdi,r14
   1006f:	call   64b0 <xc_shadow_control@plt>
   10074:	cdqe   
   10076:	cmp    rax,QWORD PTR [rbx+0xd8]
   1007d:	pop    rbp
   1007e:	pop    r13
   10080:	jne    10540 <save+0xaf0>
   10086:	sub    rsp,0x8
   1008a:	mov    ebp,DWORD PTR [r12]
   1008e:	mov    rsi,QWORD PTR [r14+0x8]
   10092:	mov    eax,DWORD PTR [rsp+0x4c]
   10096:	lea    r8,[rip+0x13a43]        # 23ae0 <__PRETTY_FUNCTION__.13419+0x3d0>
   1009d:	xor    ecx,ecx
   1009f:	mov    edx,0x3
   100a4:	mov    rdi,r14
   100a7:	push   rax
   100a8:	mov    r9d,DWORD PTR [rsp+0x50]
   100ad:	xor    eax,eax
   100af:	call   6540 <xc_report@plt>
   100b4:	mov    DWORD PTR [r12],ebp
   100b8:	pop    r10
   100ba:	pop    r11
   100bc:	jmp    fcbe <save+0x26e>
   100c1:	nop    DWORD PTR [rax+0x0]
   100c8:	mov    esi,DWORD PTR [r12+0xe0]
   100d0:	mov    rdx,QWORD PTR [rsp+0x30]
   100d5:	mov    rdi,QWORD PTR [r12]
   100d9:	call   f590 <update_progress_string.isra.1>
   100de:	test   eax,eax
   100e0:	jne    103dd <save+0x98d>
   100e6:	mov    esi,DWORD PTR [rsp+0x54]
   100ea:	mov    rdi,r12
   100ed:	call   f3c0 <send_dirty_pages>
   100f2:	test   eax,eax
   100f4:	jne    103dd <save+0x98d>
   100fa:	test   ebx,ebx
   100fc:	jne    ff79 <save+0x529>
   10102:	mov    rax,QWORD PTR [r12+0xe8]
   1010a:	add    DWORD PTR [r12+0xe4],eax
   10112:	mov    rdx,r15
   10115:	mov    rax,QWORD PTR [rsp+0x28]
   1011a:	mov    DWORD PTR [r12+0xe0],r13d
   10122:	mov    QWORD PTR [r12+0xe8],rax
   1012a:	mov    rdi,QWORD PTR [rbp+0x0]
   1012e:	mov    rsi,QWORD PTR [rbp+0x8]
   10132:	call   r14
   10135:	test   eax,eax
   10137:	jne    ff79 <save+0x529>
   1013d:	mov    esi,DWORD PTR [r12+0x8]
   10142:	push   QWORD PTR [rsp+0x18]
   10146:	xor    r9d,r9d
   10149:	push   0x0
   1014b:	mov    rcx,QWORD PTR [rsp+0x20]
   10150:	mov    edx,0xb
   10155:	mov    rdi,QWORD PTR [rsp+0x30]
   1015a:	mov    r8,QWORD PTR [r12+0xd8]
   10162:	call   64b0 <xc_shadow_control@plt>
   10167:	cdqe   
   10169:	cmp    rax,QWORD PTR [r12+0xd8]
   10171:	pop    rdx
   10172:	pop    rcx
   10173:	jne    10430 <save+0x9e0>
   10179:	mov    eax,DWORD PTR [rsp+0x54]
   1017d:	mov    QWORD PTR [r12+0xe8],rax
   10185:	jmp    ff50 <save+0x500>
   1018a:	nop    WORD PTR [rax+rax*1+0x0]
   10190:	mov    rsi,QWORD PTR [rsp+0x18]
   10195:	xor    ecx,ecx
   10197:	xor    edx,edx
   10199:	mov    BYTE PTR [rbx+0xc8],0x0
   101a0:	mov    rdi,rbx
   101a3:	mov    QWORD PTR [rsp+0x50],0xe
   101ac:	mov    QWORD PTR [rsp+0x58],0x0
   101b5:	call   5870 <write_split_record@plt>
   101ba:	test   eax,eax
   101bc:	jne    fd53 <save+0x303>
   101c2:	cmp    DWORD PTR [rbx+0xcc],0x2
   101c9:	mov    rax,QWORD PTR [rbx+0xc0]
   101d0:	mov    rdi,QWORD PTR [rax+0x30]
   101d4:	je     102a8 <save+0x858>
   101da:	call   QWORD PTR [rax+0x10]
   101dd:	test   eax,eax
   101df:	jle    fd53 <save+0x303>
   101e5:	mov    eax,DWORD PTR [rbx+0xcc]
   101eb:	cmp    eax,0x2
   101ee:	jne    10340 <save+0x8f0>
   101f4:	mov    rax,QWORD PTR [rbx+0xc0]
   101fb:	mov    rdi,QWORD PTR [rax+0x30]
   101ff:	call   QWORD PTR [rax+0x20]
   10202:	test   eax,eax
   10204:	jle    fd53 <save+0x303>
   1020a:	mov    edi,DWORD PTR [rbx+0xcc]
   10210:	test   edi,edi
   10212:	jne    fc6c <save+0x21c>
   10218:	jmp    fcfc <save+0x2ac>
   1021d:	nop    DWORD PTR [rax]
   10220:	mov    r9d,DWORD PTR [r12]
   10224:	mov    rdi,r14
   10227:	mov    esi,r9d
   1022a:	mov    DWORD PTR [rsp+0x8],r9d
   1022f:	call   6570 <xc_strerror@plt>
   10234:	mov    ecx,DWORD PTR [r12]
   10238:	lea    rdx,[rip+0x13443]        # 23682 <params.12800+0x922>
   1023f:	mov    r8,rax
   10242:	mov    esi,0x1
   10247:	mov    rdi,r14
   1024a:	xor    eax,eax
   1024c:	call   5d50 <xc_report_error@plt>
   10251:	mov    r9d,DWORD PTR [rsp+0x8]
   10256:	mov    DWORD PTR [r12],r9d
   1025a:	jmp    fdec <save+0x39c>
   1025f:	nop
   10260:	lea    rsi,[rip+0x13a7d]        # 23ce4 <__PRETTY_FUNCTION__.13419+0x5d4>
   10267:	mov    rdi,rbp
   1026a:	call   5a20 <xc_set_progress_prefix@plt>
   1026f:	mov    rdi,rbx
   10272:	call   f550 <send_all_pages>
   10277:	jmp    fcb6 <save+0x266>
   1027c:	nop    DWORD PTR [rax+0x0]
   10280:	mov    ebp,eax
   10282:	mov    rdi,QWORD PTR [rsp+0x20]
   10287:	xor    esi,esi
   10289:	call   5a20 <xc_set_progress_prefix@plt>
   1028e:	mov    rdi,QWORD PTR [rsp+0x40]
   10293:	call   5900 <free@plt>
   10298:	mov    r13d,DWORD PTR [r12]
   1029c:	jmp    fd59 <save+0x309>
   102a1:	nop    DWORD PTR [rax+0x0]
   102a8:	call   QWORD PTR [rax+0x18]
   102ab:	test   eax,eax
   102ad:	je     1051d <save+0xacd>
   102b3:	mov    rax,QWORD PTR [rbx+0xc0]
   102ba:	mov    rdi,QWORD PTR [rax+0x30]
   102be:	jmp    101da <save+0x78a>
   102c3:	nop    DWORD PTR [rax+rax*1+0x0]
   102c8:	mov    esi,DWORD PTR [rbx+0x8]
   102cb:	mov    r13d,DWORD PTR [r12]
   102cf:	xor    r9d,r9d
   102d2:	push   0x0
   102d4:	push   0x0
   102d6:	xor    r8d,r8d
   102d9:	xor    ecx,ecx
   102db:	xor    edx,edx
   102dd:	mov    rdi,r14
   102e0:	call   64b0 <xc_shadow_control@plt>
   102e5:	test   eax,eax
   102e7:	pop    r9
   102e9:	pop    r10
   102eb:	jns    10368 <save+0x918>
   102ed:	mov    r8d,DWORD PTR [r12]
   102f1:	mov    DWORD PTR [rsp+0x18],r13d
   102f6:	mov    ebp,eax
   102f8:	mov    r13d,r8d
   102fb:	mov    esi,r13d
   102fe:	mov    rdi,r14
   10301:	mov    DWORD PTR [rsp+0x20],r8d
   10306:	call   6570 <xc_strerror@plt>
   1030b:	push   rax
   1030c:	mov    eax,DWORD PTR [r12]
   10310:	lea    rdx,[rip+0x137f1]        # 23b08 <__PRETTY_FUNCTION__.13419+0x3f8>
   10317:	mov    r9d,r15d
   1031a:	mov    esi,0x1
   1031f:	mov    rdi,r14
   10322:	push   rax
   10323:	mov    r8d,DWORD PTR [rsp+0x30]
   10328:	xor    eax,eax
   1032a:	mov    ecx,DWORD PTR [rsp+0x28]
   1032e:	call   5d50 <xc_report_error@plt>
   10333:	mov    DWORD PTR [r12],r13d
   10337:	pop    rax
   10338:	pop    rdx
   10339:	jmp    fd59 <save+0x309>
   1033e:	xchg   ax,ax
   10340:	cmp    eax,0x1
   10343:	jne    1052b <save+0xadb>
   10349:	mov    rax,QWORD PTR [rbx+0xc0]
   10350:	mov    rdi,QWORD PTR [rax+0x30]
   10354:	call   QWORD PTR [rax+0x18]
   10357:	test   eax,eax
   10359:	jg     1020a <save+0x7ba>
   1035f:	jmp    fd53 <save+0x303>
   10364:	nop    DWORD PTR [rax+0x0]
   10368:	mov    esi,DWORD PTR [rbx+0x8]
   1036b:	push   0x0
   1036d:	xor    r8d,r8d
   10370:	push   0x0
   10372:	xor    r9d,r9d
   10375:	xor    ecx,ecx
   10377:	mov    rdi,r14
   1037a:	mov    edx,0x2
   1037f:	call   64b0 <xc_shadow_control@plt>
   10384:	test   eax,eax
   10386:	pop    rdi
   10387:	pop    r8
   10389:	jns    fea2 <save+0x452>
   1038f:	mov    DWORD PTR [rsp+0x18],r13d
   10394:	mov    r13d,DWORD PTR [r12]
   10398:	mov    ebp,eax
   1039a:	xor    r8d,r8d
   1039d:	mov    r15d,r13d
   103a0:	jmp    102fb <save+0x8ab>
   103a5:	mov    r13d,DWORD PTR [r12]
   103a9:	mov    rdi,r15
   103ac:	mov    esi,r13d
   103af:	call   6570 <xc_strerror@plt>
   103b4:	mov    ecx,DWORD PTR [r12]
   103b8:	lea    rdx,[rip+0x136b1]        # 23a70 <__PRETTY_FUNCTION__.13419+0x360>
   103bf:	mov    r8,rax
   103c2:	mov    esi,0x1
   103c7:	mov    rdi,r15
   103ca:	xor    eax,eax
   103cc:	call   5d50 <xc_report_error@plt>
   103d1:	mov    ebp,r14d
   103d4:	mov    DWORD PTR [r12],r13d
   103d8:	jmp    fd59 <save+0x309>
   103dd:	mov    rbx,r12
   103e0:	mov    ebp,eax
   103e2:	mov    r12,QWORD PTR [rsp+0x38]
   103e7:	jmp    10282 <save+0x832>
   103ec:	nop    DWORD PTR [rax+0x0]
   103f0:	mov    r13d,DWORD PTR [r12]
   103f4:	mov    ebp,eax
   103f6:	jmp    fd59 <save+0x309>
   103fb:	nop    DWORD PTR [rax+rax*1+0x0]
   10400:	mov    r13d,DWORD PTR [r12]
   10404:	lea    rdx,[rip+0x138e0]        # 23ceb <__PRETTY_FUNCTION__.13419+0x5db>
   1040b:	mov    rdi,QWORD PTR [rsp+0x8]
   10410:	mov    esi,0x1
   10415:	xor    eax,eax
   10417:	mov    ebp,0xffffffff
   1041c:	call   5d50 <xc_report_error@plt>
   10421:	mov    DWORD PTR [r12],r13d
   10425:	jmp    fd59 <save+0x309>
   1042a:	nop    WORD PTR [rax+rax*1+0x0]
   10430:	mov    rbx,r12
   10433:	mov    r12,QWORD PTR [rsp+0x38]
   10438:	mov    r14,QWORD PTR [rsp+0x20]
   1043d:	mov    ebp,DWORD PTR [r12]
   10441:	mov    rdi,r14
   10444:	mov    esi,ebp
   10446:	call   6570 <xc_strerror@plt>
   1044b:	mov    ecx,DWORD PTR [r12]
   1044f:	lea    rdx,[rip+0x12d12]        # 23168 <params.12800+0x408>
   10456:	mov    r8,rax
   10459:	mov    esi,0x1
   1045e:	mov    rdi,r14
   10461:	xor    eax,eax
   10463:	call   5d50 <xc_report_error@plt>
   10468:	mov    DWORD PTR [r12],ebp
   1046c:	xor    esi,esi
   1046e:	mov    rdi,r14
   10471:	call   5a20 <xc_set_progress_prefix@plt>
   10476:	mov    rdi,QWORD PTR [rsp+0x40]
   1047b:	mov    ebp,0xffffffff
   10480:	call   5900 <free@plt>
   10485:	mov    r13d,DWORD PTR [r12]
   10489:	jmp    fd59 <save+0x309>
   1048e:	lea    rdx,[rip+0x13563]        # 239f8 <__PRETTY_FUNCTION__.13419+0x2e8>
   10495:	mov    esi,0x1
   1049a:	mov    rdi,r15
   1049d:	xor    eax,eax
   1049f:	mov    r13d,0xc
   104a5:	mov    ebp,0xffffffff
   104aa:	call   5d50 <xc_report_error@plt>
   104af:	mov    DWORD PTR [r12],0xc
   104b7:	jmp    fd59 <save+0x309>
   104bc:	nop    DWORD PTR [rax+0x0]
   104c0:	mov    rdi,QWORD PTR [rsp+0x8]
   104c5:	lea    rsi,[rip+0x13867]        # 23d33 <__PRETTY_FUNCTION__.13419+0x623>
   104cc:	xor    r13d,r13d
   104cf:	call   5c10 <xc_report_progress_single@plt>
   104d4:	jmp    fd8a <save+0x33a>
   104d9:	mov    r13d,DWORD PTR [r12]
   104dd:	mov    rdi,r15
   104e0:	mov    esi,r13d
   104e3:	call   6570 <xc_strerror@plt>
   104e8:	mov    ecx,DWORD PTR [r12]
   104ec:	mov    r8,rax
   104ef:	lea    rdx,[rip+0x13552]        # 23a48 <__PRETTY_FUNCTION__.13419+0x338>
   104f6:	jmp    103c2 <save+0x972>
   104fb:	mov    r13d,DWORD PTR [r12]
   104ff:	mov    rdi,r15
   10502:	mov    esi,r13d
   10505:	call   6570 <xc_strerror@plt>
   1050a:	mov    ecx,DWORD PTR [r12]
   1050e:	mov    r8,rax
   10511:	lea    rdx,[rip+0x13590]        # 23aa8 <__PRETTY_FUNCTION__.13419+0x398>
   10518:	jmp    103c2 <save+0x972>
   1051d:	mov    r13d,DWORD PTR [r12]
   10521:	mov    ebp,0xffffffff
   10526:	jmp    fd59 <save+0x309>
   1052b:	mov    r13d,DWORD PTR [r12]
   1052f:	lea    rdx,[rip+0x137d3]        # 23d09 <__PRETTY_FUNCTION__.13419+0x5f9>
   10536:	jmp    1040b <save+0x9bb>
   1053b:	call   5b80 <__stack_chk_fail@plt>
   10540:	mov    r13d,DWORD PTR [r12]
   10544:	mov    rdi,r14
   10547:	or     ebp,0xffffffff
   1054a:	mov    esi,r13d
   1054d:	call   6570 <xc_strerror@plt>
   10552:	mov    ecx,DWORD PTR [r12]
   10556:	lea    rdx,[rip+0x12c0b]        # 23168 <params.12800+0x408>
   1055d:	mov    r8,rax
   10560:	mov    esi,0x1
   10565:	mov    rdi,r14
   10568:	xor    eax,eax
   1056a:	call   5d50 <xc_report_error@plt>
   1056f:	mov    DWORD PTR [r12],r13d
   10573:	jmp    fd59 <save+0x309>
   10578:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010580 <xc_domain_save>:
   10580:	push   r15
   10582:	push   r14
   10584:	mov    r14d,ecx
   10587:	push   r13
   10589:	push   r12
   1058b:	mov    ecx,0x3b
   10590:	push   rbp
   10591:	push   rbx
   10592:	mov    rbx,rdi
   10595:	mov    r12d,edx
   10598:	sub    rsp,0x1f8
   1059f:	lea    rbp,[rsp+0x10]
   105a4:	mov    edx,DWORD PTR [rsp+0x230]
   105ab:	mov    rax,QWORD PTR fs:0x28
   105b4:	mov    QWORD PTR [rsp+0x1e8],rax
   105bc:	xor    eax,eax
   105be:	mov    rdi,rbp
   105c1:	rep stos QWORD PTR es:[rdi],rax
   105c4:	mov    eax,r14d
   105c7:	mov    BYTE PTR [rsp+0xd8],r14b
   105cf:	mov    QWORD PTR [rsp+0x10],rbx
   105d4:	shr    eax,1
   105d6:	mov    DWORD PTR [rsp+0x1c],esi
   105da:	mov    QWORD PTR [rsp+0xd0],r8
   105e2:	and    eax,0x1
   105e5:	and    BYTE PTR [rsp+0xd8],0x1
   105ed:	cmp    edx,0x2
   105f0:	mov    BYTE PTR [rsp+0xe0],al
   105f7:	mov    eax,DWORD PTR [rsp+0x238]
   105fe:	mov    DWORD PTR [rsp+0xdc],edx
   10605:	mov    DWORD PTR [rsp+0x88],eax
   1060c:	ja     10868 <xc_domain_save+0x2e8>
   10612:	test   r9d,r9d
   10615:	mov    r13d,esi
   10618:	je     10625 <xc_domain_save+0xa5>
   1061a:	cmp    QWORD PTR [r8+0x28],0x0
   1061f:	je     107c4 <xc_domain_save+0x244>
   10625:	test   edx,edx
   10627:	jne    10728 <xc_domain_save+0x1a8>
   1062d:	mov    DWORD PTR [rsp+0xc],r9d
   10632:	call   5940 <__errno_location@plt>
   10637:	mov    r10d,DWORD PTR [rax]
   1063a:	sub    rsp,0x8
   1063e:	mov    rsi,QWORD PTR [rbx+0x8]
   10642:	lea    r8,[rip+0x135af]        # 23bf8 <__PRETTY_FUNCTION__.13419+0x4e8>
   10649:	xor    ecx,ecx
   1064b:	mov    r15,rax
   1064e:	mov    edx,0x3
   10653:	xor    eax,eax
   10655:	mov    rdi,rbx
   10658:	mov    DWORD PTR [rsp+0x10],r10d
   1065d:	mov    r9d,DWORD PTR [rsp+0x14]
   10662:	push   r9
   10664:	push   r14
   10666:	mov    r9d,r13d
   10669:	push   r12
   1066b:	call   6540 <xc_report@plt>
   10670:	mov    r10d,DWORD PTR [rsp+0x28]
   10675:	lea    rcx,[rbp+0x10]
   10679:	add    rsp,0x20
   1067d:	mov    edx,0x1
   10682:	mov    esi,r12d
   10685:	mov    rdi,rbx
   10688:	mov    DWORD PTR [r15],r10d
   1068b:	call   5b40 <xc_domain_getinfo@plt>
   10690:	cmp    eax,0x1
   10693:	jne    107e8 <xc_domain_save+0x268>
   10699:	cmp    DWORD PTR [rsp+0x20],r12d
   1069e:	jne    10820 <xc_domain_save+0x2a0>
   106a4:	test   BYTE PTR [rsp+0x28],0x40
   106a9:	mov    DWORD PTR [rsp+0x18],r12d
   106ae:	jne    10778 <xc_domain_save+0x1f8>
   106b4:	mov    rax,QWORD PTR [rip+0x21c91d]        # 22cfd8 <save_ops_x86_pv@@Base-0x808>
   106bb:	mov    esi,0x1
   106c0:	mov    rdi,rbp
   106c3:	movdqu xmm0,XMMWORD PTR [rax]
   106c7:	movaps XMMWORD PTR [rsp+0x90],xmm0
   106cf:	movdqu xmm0,XMMWORD PTR [rax+0x10]
   106d4:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   106dc:	movdqu xmm0,XMMWORD PTR [rax+0x20]
   106e1:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   106e9:	movdqu xmm0,XMMWORD PTR [rax+0x30]
   106ee:	movaps XMMWORD PTR [rsp+0xc0],xmm0
   106f6:	call   fa50 <save>
   106fb:	mov    rbx,QWORD PTR [rsp+0x1e8]
   10703:	xor    rbx,QWORD PTR fs:0x28
   1070c:	jne    10887 <xc_domain_save+0x307>
   10712:	add    rsp,0x1f8
   10719:	pop    rbx
   1071a:	pop    rbp
   1071b:	pop    r12
   1071d:	pop    r13
   1071f:	pop    r14
   10721:	pop    r15
   10723:	ret    
   10724:	nop    DWORD PTR [rax+0x0]
   10728:	cmp    QWORD PTR [r8+0x18],0x0
   1072d:	je     10849 <xc_domain_save+0x2c9>
   10733:	cmp    QWORD PTR [r8+0x10],0x0
   10738:	je     10849 <xc_domain_save+0x2c9>
   1073e:	cmp    edx,0x2
   10741:	jne    1062d <xc_domain_save+0xad>
   10747:	cmp    QWORD PTR [r8+0x20],0x0
   1074c:	jne    1062d <xc_domain_save+0xad>
   10752:	lea    rcx,[rip+0x13627]        # 23d80 <__PRETTY_FUNCTION__.13651>
   10759:	lea    rsi,[rip+0x134cd]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
   10760:	lea    rdi,[rip+0x135eb]        # 23d52 <__PRETTY_FUNCTION__.13419+0x642>
   10767:	mov    edx,0x3e4
   1076c:	call   5c70 <__assert_fail@plt>
   10771:	nop    DWORD PTR [rax+0x0]
   10778:	mov    rax,QWORD PTR [rip+0x21c861]        # 22cfe0 <save_ops_x86_hvm@@Base-0x840>
   1077f:	mov    esi,0x2
   10784:	mov    rdi,rbp
   10787:	movdqu xmm0,XMMWORD PTR [rax]
   1078b:	movaps XMMWORD PTR [rsp+0x90],xmm0
   10793:	movdqu xmm0,XMMWORD PTR [rax+0x10]
   10798:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   107a0:	movdqu xmm0,XMMWORD PTR [rax+0x20]
   107a5:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   107ad:	movdqu xmm0,XMMWORD PTR [rax+0x30]
   107b2:	movaps XMMWORD PTR [rsp+0xc0],xmm0
   107ba:	call   fa50 <save>
   107bf:	jmp    106fb <xc_domain_save+0x17b>
   107c4:	lea    rcx,[rip+0x135b5]        # 23d80 <__PRETTY_FUNCTION__.13651>
   107cb:	lea    rsi,[rip+0x1345b]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
   107d2:	lea    rdi,[rip+0x133cf]        # 23ba8 <__PRETTY_FUNCTION__.13419+0x498>
   107d9:	mov    edx,0x3e0
   107de:	call   5c70 <__assert_fail@plt>
   107e3:	nop    DWORD PTR [rax+rax*1+0x0]
   107e8:	mov    ebp,DWORD PTR [r15]
   107eb:	mov    rdi,rbx
   107ee:	mov    esi,ebp
   107f0:	call   6570 <xc_strerror@plt>
   107f5:	mov    ecx,DWORD PTR [r15]
   107f8:	lea    rdx,[rip+0x12bf9]        # 233f8 <params.12800+0x698>
   107ff:	mov    r8,rax
   10802:	mov    esi,0x1
   10807:	xor    eax,eax
   10809:	mov    rdi,rbx
   1080c:	call   5d50 <xc_report_error@plt>
   10811:	mov    DWORD PTR [r15],ebp
   10814:	mov    eax,0xffffffff
   10819:	jmp    106fb <xc_domain_save+0x17b>
   1081e:	xchg   ax,ax
   10820:	mov    ebp,DWORD PTR [r15]
   10823:	lea    rdx,[rip+0x12e8b]        # 236b5 <params.12800+0x955>
   1082a:	xor    eax,eax
   1082c:	mov    ecx,r12d
   1082f:	mov    esi,0x1
   10834:	mov    rdi,rbx
   10837:	call   5d50 <xc_report_error@plt>
   1083c:	mov    DWORD PTR [r15],ebp
   1083f:	mov    eax,0xffffffff
   10844:	jmp    106fb <xc_domain_save+0x17b>
   10849:	lea    rcx,[rip+0x13530]        # 23d80 <__PRETTY_FUNCTION__.13651>
   10850:	lea    rsi,[rip+0x133d6]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
   10857:	lea    rdi,[rip+0x1336a]        # 23bc8 <__PRETTY_FUNCTION__.13419+0x4b8>
   1085e:	mov    edx,0x3e2
   10863:	call   5c70 <__assert_fail@plt>
   10868:	lea    rcx,[rip+0x13511]        # 23d80 <__PRETTY_FUNCTION__.13651>
   1086f:	lea    rsi,[rip+0x133b7]        # 23c2d <__PRETTY_FUNCTION__.13419+0x51d>
   10876:	lea    rdi,[rip+0x132bb]        # 23b38 <__PRETTY_FUNCTION__.13419+0x428>
   1087d:	mov    edx,0x3dc
   10882:	call   5c70 <__assert_fail@plt>
   10887:	call   5b80 <__stack_chk_fail@plt>
   1088c:	nop    DWORD PTR [rax+0x0]

0000000000010890 <change_pte>:
   10890:	push   r15
   10892:	push   r14
   10894:	push   r13
   10896:	push   r12
   10898:	push   rbp
   10899:	push   rbx
   1089a:	mov    rbp,rdx
   1089d:	sub    rsp,0x68
   108a1:	mov    rax,QWORD PTR fs:0x28
   108aa:	mov    QWORD PTR [rsp+0x58],rax
   108af:	xor    eax,eax
   108b1:	cmp    DWORD PTR [rdx],0x2
   108b4:	mov    eax,0x200
   108b9:	mov    edx,0x400
   108be:	mov    QWORD PTR [rsp+0x8],rdi
   108c3:	mov    DWORD PTR [rsp+0x3c],esi
   108c7:	mov    QWORD PTR [rsp+0x10],rcx
   108cc:	mov    QWORD PTR [rsp+0x30],r8
   108d1:	mov    QWORD PTR [rsp+0x18],r9
   108d6:	cmove  eax,edx
   108d9:	cmp    QWORD PTR [rbp+0x18],0x0
   108de:	je     10968 <change_pte+0xd8>
   108e4:	sub    eax,0x1
   108e7:	xor    ebx,ebx
   108e9:	mov    r12d,0xf0000000
   108ef:	add    rax,0x1
   108f3:	mov    QWORD PTR [rsp+0x28],rax
   108f8:	jmp    1093c <change_pte+0xac>
   108fa:	nop    WORD PTR [rax+rax*1+0x0]
   10900:	mov    r10d,DWORD PTR [rax+rbx*4]
   10904:	cmp    r10d,0xffffffff
   10908:	je     10932 <change_pte+0xa2>
   1090a:	lea    rdx,[rbx*8+0x0]
   10912:	mov    r15d,r10d
   10915:	mov    rax,QWORD PTR [rbp+0x8]
   10919:	mov    rax,QWORD PTR [rax+rdx*1]
   1091d:	mov    rdx,rax
   10920:	and    edx,0xf0000000
   10926:	cmp    rdx,r12
   10929:	je     10932 <change_pte+0xa2>
   1092b:	test   eax,0x70000000
   10930:	jne    109a8 <change_pte+0x118>
   10932:	add    rbx,0x1
   10936:	cmp    QWORD PTR [rbp+0x18],rbx
   1093a:	jbe    10968 <change_pte+0xd8>
   1093c:	cmp    DWORD PTR [rbp+0x4],0x8
   10940:	mov    rax,QWORD PTR [rbp+0x10]
   10944:	jne    10900 <change_pte+0x70>
   10946:	mov    r15,QWORD PTR [rax+rbx*8]
   1094a:	lea    rdx,[rbx*8+0x0]
   10952:	cmp    r15,0xffffffffffffffff
   10956:	jne    10915 <change_pte+0x85>
   10958:	add    rbx,0x1
   1095c:	cmp    QWORD PTR [rbp+0x18],rbx
   10960:	ja     1093c <change_pte+0xac>
   10962:	nop    WORD PTR [rax+rax*1+0x0]
   10968:	mov    rsi,QWORD PTR [rsp+0x30]
   1096d:	mov    rdi,QWORD PTR [rsp+0x8]
   10972:	call   61f0 <xc_flush_mmu_updates@plt>
   10977:	test   eax,eax
   10979:	setne  al
   1097c:	movzx  eax,al
   1097f:	neg    eax
   10981:	mov    rcx,QWORD PTR [rsp+0x58]
   10986:	xor    rcx,QWORD PTR fs:0x28
   1098f:	jne    10ac4 <change_pte+0x234>
   10995:	add    rsp,0x68
   10999:	pop    rbx
   1099a:	pop    rbp
   1099b:	pop    r12
   1099d:	pop    r13
   1099f:	pop    r14
   109a1:	pop    r15
   109a3:	ret    
   109a4:	nop    DWORD PTR [rax+0x0]
   109a8:	mov    esi,DWORD PTR [rsp+0x3c]
   109ac:	mov    rdi,QWORD PTR [rsp+0x8]
   109b1:	mov    r8,r15
   109b4:	mov    ecx,0x1
   109b9:	mov    edx,0x1000
   109be:	call   6590 <xc_map_foreign_range@plt>
   109c3:	test   rax,rax
   109c6:	mov    r13,rax
   109c9:	je     10aba <change_pte+0x22a>
   109cf:	mov    r14,r15
   109d2:	lea    rax,[rsp+0x50]
   109d7:	mov    QWORD PTR [rsp+0x48],rbx
   109dc:	shl    r14,0xc
   109e0:	or     r14,0x2
   109e4:	mov    QWORD PTR [rsp+0x20],rax
   109e9:	mov    QWORD PTR [rsp+0x40],r14
   109ee:	xor    r14d,r14d
   109f1:	mov    rbx,r14
   109f4:	mov    r14,QWORD PTR [rsp+0xa0]
   109fc:	cmp    DWORD PTR [rbp+0x0],0x2
   10a00:	mov    r8d,ebx
   10a03:	je     10ab0 <change_pte+0x220>
   10a09:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
   10a0e:	sub    rsp,0x8
   10a12:	mov    rcx,r15
   10a15:	push   r14
   10a17:	mov    r9,QWORD PTR [rsp+0x20]
   10a1c:	mov    rdx,QWORD PTR [rsp+0x30]
   10a21:	mov    rdi,QWORD PTR [rsp+0x18]
   10a26:	mov    rax,QWORD PTR [rsp+0x28]
   10a2b:	call   rax
   10a2d:	test   eax,eax
   10a2f:	pop    rdx
   10a30:	pop    rcx
   10a31:	je     10a82 <change_pte+0x1f2>
   10a33:	cmp    eax,0x1
   10a36:	je     10a50 <change_pte+0x1c0>
   10a38:	mov    esi,0x1000
   10a3d:	mov    rdi,r13
   10a40:	call   61b0 <munmap@plt>
   10a45:	mov    eax,0xffffffff
   10a4a:	jmp    10981 <change_pte+0xf1>
   10a4f:	nop
   10a50:	xor    edx,edx
   10a52:	cmp    DWORD PTR [rbp+0x0],0x2
   10a56:	mov    rcx,QWORD PTR [rsp+0x50]
   10a5b:	mov    rsi,QWORD PTR [rsp+0x30]
   10a60:	mov    rdi,QWORD PTR [rsp+0x8]
   10a65:	setne  dl
   10a68:	lea    rdx,[rdx*4+0x4]
   10a70:	imul   rdx,rbx
   10a74:	or     rdx,QWORD PTR [rsp+0x40]
   10a79:	call   5ef0 <xc_add_mmu_update@plt>
   10a7e:	test   eax,eax
   10a80:	jne    10a38 <change_pte+0x1a8>
   10a82:	add    rbx,0x1
   10a86:	cmp    QWORD PTR [rsp+0x28],rbx
   10a8b:	jne    109fc <change_pte+0x16c>
   10a91:	mov    esi,0x1000
   10a96:	mov    rdi,r13
   10a99:	mov    rbx,QWORD PTR [rsp+0x48]
   10a9e:	call   61b0 <munmap@plt>
   10aa3:	jmp    10932 <change_pte+0xa2>
   10aa8:	nop    DWORD PTR [rax+rax*1+0x0]
   10ab0:	mov    esi,DWORD PTR [r13+rbx*4+0x0]
   10ab5:	jmp    10a0e <change_pte+0x17e>
   10aba:	mov    eax,0xffffffff
   10abf:	jmp    10981 <change_pte+0xf1>
   10ac4:	call   5b80 <__stack_chk_fail@plt>
   10ac9:	nop    DWORD PTR [rax+0x0]

0000000000010ad0 <__update_pte>:
   10ad0:	xor    eax,eax
   10ad2:	test   rdx,rdx
   10ad5:	je     10b66 <__update_pte+0x96>
   10adb:	mov    eax,DWORD PTR [r9+0xc]
   10adf:	cmp    eax,0x0
   10ae2:	jle    10b64 <__update_pte+0x94>
   10ae8:	mov    r9,QWORD PTR [r9]
   10aeb:	xor    r10d,r10d
   10aee:	jmp    10afd <__update_pte+0x2d>
   10af0:	add    r10d,0x1
   10af4:	add    r9,0x10
   10af8:	cmp    eax,r10d
   10afb:	je     10b70 <__update_pte+0xa0>
   10afd:	cmp    QWORD PTR [r9],rcx
   10b00:	jne    10af0 <__update_pte+0x20>
   10b02:	cmp    DWORD PTR [r9+0x8],r8d
   10b06:	jne    10af0 <__update_pte+0x20>
   10b08:	push   r13
   10b0a:	push   r12
   10b0c:	push   rbp
   10b0d:	push   rbx
   10b0e:	mov    rbp,rdx
   10b11:	mov    rbx,rsi
   10b14:	sub    rsp,0x18
   10b18:	test   sil,0x1
   10b1c:	jne    10b78 <__update_pte+0xa8>
   10b1e:	cmp    DWORD PTR [rip+0x21d04b],0x8        # 22db70 <_dinfo>
   10b25:	movabs rax,0xffffffff00000000
   10b2f:	movabs rsi,0xffffff0000000000
   10b39:	cmovne rsi,rax
   10b3d:	mov    eax,0x1
   10b42:	and    rbx,rsi
   10b45:	mov    rsi,QWORD PTR [rsp+0x40]
   10b4a:	shl    rsi,0xc
   10b4e:	or     rsi,0x1
   10b52:	or     rsi,rbx
   10b55:	mov    QWORD PTR [rbp+0x0],rsi
   10b59:	add    rsp,0x18
   10b5d:	pop    rbx
   10b5e:	pop    rbp
   10b5f:	pop    r12
   10b61:	pop    r13
   10b63:	ret    
   10b64:	jne    10b08 <__update_pte+0x38>
   10b66:	repz ret 
   10b68:	nop    DWORD PTR [rax+rax*1+0x0]
   10b70:	xor    eax,eax
   10b72:	ret    
   10b73:	nop    DWORD PTR [rax+rax*1+0x0]
   10b78:	mov    QWORD PTR [rsp+0x8],rdi
   10b7d:	call   5940 <__errno_location@plt>
   10b82:	mov    rdi,QWORD PTR [rsp+0x8]
   10b87:	mov    r13d,DWORD PTR [rax]
   10b8a:	lea    rdx,[rip+0x131ff]        # 23d90 <__PRETTY_FUNCTION__.13651+0x10>
   10b91:	mov    r12,rax
   10b94:	mov    esi,0x1
   10b99:	xor    eax,eax
   10b9b:	call   5d50 <xc_report_error@plt>
   10ba0:	mov    DWORD PTR [r12],r13d
   10ba4:	jmp    10b1e <__update_pte+0x4e>
   10ba9:	nop    DWORD PTR [rax+0x0]

0000000000010bb0 <__clear_pte>:
   10bb0:	test   rdx,rdx
   10bb3:	je     10c90 <__clear_pte+0xe0>
   10bb9:	test   r9,r9
   10bbc:	je     10c90 <__clear_pte+0xe0>
   10bc2:	test   sil,0x1
   10bc6:	je     10c00 <__clear_pte+0x50>
   10bc8:	mov    rax,rsi
   10bcb:	sub    rsp,0x28
   10bcf:	movabs rdi,0xffffffffff
   10bd9:	shr    rax,0xc
   10bdd:	cmp    DWORD PTR [rip+0x21cf8c],0x8        # 22db70 <_dinfo>
   10be4:	mov    r10d,0xffffffff
   10bea:	cmovne rdi,r10
   10bee:	and    rax,rdi
   10bf1:	cmp    QWORD PTR [rsp+0x30],rax
   10bf6:	je     10c08 <__clear_pte+0x58>
   10bf8:	xor    eax,eax
   10bfa:	add    rsp,0x28
   10bfe:	ret    
   10bff:	nop
   10c00:	xor    eax,eax
   10c02:	ret    
   10c03:	nop    DWORD PTR [rax+rax*1+0x0]
   10c08:	and    rsi,0xfffffffffffffffe
   10c0c:	mov    QWORD PTR [rdx],rsi
   10c0f:	movsxd rdx,DWORD PTR [r9+0xc]
   10c13:	cmp    DWORD PTR [r9+0x8],edx
   10c17:	je     10c48 <__clear_pte+0x98>
   10c19:	mov    rax,QWORD PTR [r9]
   10c1c:	shl    rdx,0x4
   10c20:	mov    QWORD PTR [rax+rdx*1],rcx
   10c24:	movsxd rax,DWORD PTR [r9+0xc]
   10c28:	mov    rdx,QWORD PTR [r9]
   10c2b:	lea    ecx,[rax+0x1]
   10c2e:	shl    rax,0x4
   10c32:	mov    DWORD PTR [r9+0xc],ecx
   10c36:	mov    DWORD PTR [rdx+rax*1+0x8],r8d
   10c3b:	mov    eax,0x1
   10c40:	add    rsp,0x28
   10c44:	ret    
   10c45:	nop    DWORD PTR [rax]
   10c48:	lea    esi,[rdx+rdx*1]
   10c4b:	mov    rdi,QWORD PTR [r9]
   10c4e:	mov    QWORD PTR [rsp+0x8],r9
   10c53:	mov    DWORD PTR [rsp+0x1c],r8d
   10c58:	mov    QWORD PTR [rsp+0x10],rcx
   10c5d:	movsxd rsi,esi
   10c60:	shl    rsi,0x4
   10c64:	call   6160 <realloc@plt>
   10c69:	mov    r9,QWORD PTR [rsp+0x8]
   10c6e:	test   rax,rax
   10c71:	mov    QWORD PTR [r9],rax
   10c74:	je     10bf8 <__clear_pte+0x48>
   10c76:	shl    DWORD PTR [r9+0x8],1
   10c7a:	movsxd rdx,DWORD PTR [r9+0xc]
   10c7e:	mov    r8d,DWORD PTR [rsp+0x1c]
   10c83:	mov    rcx,QWORD PTR [rsp+0x10]
   10c88:	jmp    10c1c <__clear_pte+0x6c>
   10c8a:	nop    WORD PTR [rax+rax*1+0x0]
   10c90:	mov    eax,0xffffffea
   10c95:	ret    
   10c96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010ca0 <xc_mark_page_online>:
   10ca0:	push   r13
   10ca2:	push   r12
   10ca4:	push   rbp
   10ca5:	push   rbx
   10ca6:	sub    rsp,0xc8
   10cad:	mov    rax,QWORD PTR fs:0x28
   10cb6:	mov    QWORD PTR [rsp+0xb8],rax
   10cbe:	xor    eax,eax
   10cc0:	mov    rax,rdx
   10cc3:	mov    QWORD PTR [rsp],0x0
   10ccb:	mov    QWORD PTR [rsp+0x8],0x0
   10cd4:	sub    rax,rsi
   10cd7:	test   rcx,rcx
   10cda:	mov    DWORD PTR [rsp+0x10],0x3
   10ce2:	lea    rax,[rax*4+0x4]
   10cea:	mov    QWORD PTR [rsp+0x18],rcx
   10cef:	mov    QWORD PTR [rsp+0x20],rax
   10cf4:	je     10d98 <xc_mark_page_online+0xf8>
   10cfa:	cmp    rdx,rsi
   10cfd:	mov    rbp,rsi
   10d00:	mov    rbx,rdx
   10d03:	jb     10d98 <xc_mark_page_online+0xf8>
   10d09:	mov    r13,rsp
   10d0c:	mov    r12,rdi
   10d0f:	mov    rsi,r13
   10d12:	call   5a40 <xc__hypercall_bounce_pre@plt>
   10d17:	test   eax,eax
   10d19:	jne    10daa <xc_mark_page_online+0x10a>
   10d1f:	mov    rax,QWORD PTR [rsp+0x8]
   10d24:	mov    DWORD PTR [rsp+0x40],ebx
   10d28:	lea    rsi,[rsp+0x30]
   10d2d:	mov    DWORD PTR [rsp+0x30],0xe
   10d35:	mov    DWORD PTR [rsp+0x3c],ebp
   10d39:	mov    rdi,r12
   10d3c:	mov    DWORD PTR [rsp+0x38],0x2
   10d44:	test   rax,rax
   10d47:	cmove  rax,r13
   10d4b:	mov    rax,QWORD PTR [rax]
   10d4e:	mov    QWORD PTR [rsp+0x48],rax
   10d53:	call   6500 <xc_sysctl@plt>
   10d58:	mov    rsi,QWORD PTR [rsp+0x8]
   10d5d:	mov    rdi,r12
   10d60:	mov    ebx,eax
   10d62:	test   rsi,rsi
   10d65:	cmove  rsi,r13
   10d69:	call   6210 <xc__hypercall_bounce_post@plt>
   10d6e:	mov    rdx,QWORD PTR [rsp+0xb8]
   10d76:	xor    rdx,QWORD PTR fs:0x28
   10d7f:	mov    eax,ebx
   10d81:	jne    10dd3 <xc_mark_page_online+0x133>
   10d83:	add    rsp,0xc8
   10d8a:	pop    rbx
   10d8b:	pop    rbp
   10d8c:	pop    r12
   10d8e:	pop    r13
   10d90:	ret    
   10d91:	nop    DWORD PTR [rax+0x0]
   10d98:	call   5940 <__errno_location@plt>
   10d9d:	mov    ebx,0xffffffff
   10da2:	mov    DWORD PTR [rax],0x16
   10da8:	jmp    10d6e <xc_mark_page_online+0xce>
   10daa:	call   5940 <__errno_location@plt>
   10daf:	mov    ebp,DWORD PTR [rax]
   10db1:	lea    rdx,[rip+0x13000]        # 23db8 <__PRETTY_FUNCTION__.13651+0x38>
   10db8:	mov    rbx,rax
   10dbb:	mov    esi,0x1
   10dc0:	mov    rdi,r12
   10dc3:	xor    eax,eax
   10dc5:	call   5d50 <xc_report_error@plt>
   10dca:	mov    DWORD PTR [rbx],ebp
   10dcc:	mov    ebx,0xffffffff
   10dd1:	jmp    10d6e <xc_mark_page_online+0xce>
   10dd3:	call   5b80 <__stack_chk_fail@plt>
   10dd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010de0 <xc_mark_page_offline>:
   10de0:	push   r13
   10de2:	push   r12
   10de4:	push   rbp
   10de5:	push   rbx
   10de6:	sub    rsp,0xc8
   10ded:	mov    rax,QWORD PTR fs:0x28
   10df6:	mov    QWORD PTR [rsp+0xb8],rax
   10dfe:	xor    eax,eax
   10e00:	mov    rax,rdx
   10e03:	mov    QWORD PTR [rsp],0x0
   10e0b:	mov    QWORD PTR [rsp+0x8],0x0
   10e14:	sub    rax,rsi
   10e17:	test   rcx,rcx
   10e1a:	mov    DWORD PTR [rsp+0x10],0x3
   10e22:	lea    rax,[rax*4+0x4]
   10e2a:	mov    QWORD PTR [rsp+0x18],rcx
   10e2f:	mov    QWORD PTR [rsp+0x20],rax
   10e34:	je     10ed8 <xc_mark_page_offline+0xf8>
   10e3a:	cmp    rdx,rsi
   10e3d:	mov    rbp,rsi
   10e40:	mov    rbx,rdx
   10e43:	jb     10ed8 <xc_mark_page_offline+0xf8>
   10e49:	mov    r13,rsp
   10e4c:	mov    r12,rdi
   10e4f:	mov    rsi,r13
   10e52:	call   5a40 <xc__hypercall_bounce_pre@plt>
   10e57:	test   eax,eax
   10e59:	jne    10eea <xc_mark_page_offline+0x10a>
   10e5f:	mov    rax,QWORD PTR [rsp+0x8]
   10e64:	mov    DWORD PTR [rsp+0x40],ebx
   10e68:	lea    rsi,[rsp+0x30]
   10e6d:	mov    DWORD PTR [rsp+0x30],0xe
   10e75:	mov    DWORD PTR [rsp+0x3c],ebp
   10e79:	mov    rdi,r12
   10e7c:	mov    DWORD PTR [rsp+0x38],0x1
   10e84:	test   rax,rax
   10e87:	cmove  rax,r13
   10e8b:	mov    rax,QWORD PTR [rax]
   10e8e:	mov    QWORD PTR [rsp+0x48],rax
   10e93:	call   6500 <xc_sysctl@plt>
   10e98:	mov    rsi,QWORD PTR [rsp+0x8]
   10e9d:	mov    rdi,r12
   10ea0:	mov    ebx,eax
   10ea2:	test   rsi,rsi
   10ea5:	cmove  rsi,r13
   10ea9:	call   6210 <xc__hypercall_bounce_post@plt>
   10eae:	mov    rdx,QWORD PTR [rsp+0xb8]
   10eb6:	xor    rdx,QWORD PTR fs:0x28
   10ebf:	mov    eax,ebx
   10ec1:	jne    10f13 <xc_mark_page_offline+0x133>
   10ec3:	add    rsp,0xc8
   10eca:	pop    rbx
   10ecb:	pop    rbp
   10ecc:	pop    r12
   10ece:	pop    r13
   10ed0:	ret    
   10ed1:	nop    DWORD PTR [rax+0x0]
   10ed8:	call   5940 <__errno_location@plt>
   10edd:	mov    ebx,0xffffffff
   10ee2:	mov    DWORD PTR [rax],0x16
   10ee8:	jmp    10eae <xc_mark_page_offline+0xce>
   10eea:	call   5940 <__errno_location@plt>
   10eef:	mov    ebp,DWORD PTR [rax]
   10ef1:	lea    rdx,[rip+0x12ef8]        # 23df0 <__PRETTY_FUNCTION__.13651+0x70>
   10ef8:	mov    rbx,rax
   10efb:	mov    esi,0x1
   10f00:	mov    rdi,r12
   10f03:	xor    eax,eax
   10f05:	call   5d50 <xc_report_error@plt>
   10f0a:	mov    DWORD PTR [rbx],ebp
   10f0c:	mov    ebx,0xffffffff
   10f11:	jmp    10eae <xc_mark_page_offline+0xce>
   10f13:	call   5b80 <__stack_chk_fail@plt>
   10f18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f20 <xc_query_page_offline_status>:
   10f20:	push   r13
   10f22:	push   r12
   10f24:	push   rbp
   10f25:	push   rbx
   10f26:	sub    rsp,0xc8
   10f2d:	mov    rax,QWORD PTR fs:0x28
   10f36:	mov    QWORD PTR [rsp+0xb8],rax
   10f3e:	xor    eax,eax
   10f40:	mov    rax,rdx
   10f43:	mov    QWORD PTR [rsp],0x0
   10f4b:	mov    QWORD PTR [rsp+0x8],0x0
   10f54:	sub    rax,rsi
   10f57:	test   rcx,rcx
   10f5a:	mov    DWORD PTR [rsp+0x10],0x3
   10f62:	lea    rax,[rax*4+0x4]
   10f6a:	mov    QWORD PTR [rsp+0x18],rcx
   10f6f:	mov    QWORD PTR [rsp+0x20],rax
   10f74:	je     11018 <xc_query_page_offline_status+0xf8>
   10f7a:	cmp    rdx,rsi
   10f7d:	mov    rbp,rsi
   10f80:	mov    rbx,rdx
   10f83:	jb     11018 <xc_query_page_offline_status+0xf8>
   10f89:	mov    r13,rsp
   10f8c:	mov    r12,rdi
   10f8f:	mov    rsi,r13
   10f92:	call   5a40 <xc__hypercall_bounce_pre@plt>
   10f97:	test   eax,eax
   10f99:	jne    1102a <xc_query_page_offline_status+0x10a>
   10f9f:	mov    rax,QWORD PTR [rsp+0x8]
   10fa4:	mov    DWORD PTR [rsp+0x40],ebx
   10fa8:	lea    rsi,[rsp+0x30]
   10fad:	mov    DWORD PTR [rsp+0x30],0xe
   10fb5:	mov    DWORD PTR [rsp+0x3c],ebp
   10fb9:	mov    rdi,r12
   10fbc:	mov    DWORD PTR [rsp+0x38],0x3
   10fc4:	test   rax,rax
   10fc7:	cmove  rax,r13
   10fcb:	mov    rax,QWORD PTR [rax]
   10fce:	mov    QWORD PTR [rsp+0x48],rax
   10fd3:	call   6500 <xc_sysctl@plt>
   10fd8:	mov    rsi,QWORD PTR [rsp+0x8]
   10fdd:	mov    rdi,r12
   10fe0:	mov    ebx,eax
   10fe2:	test   rsi,rsi
   10fe5:	cmove  rsi,r13
   10fe9:	call   6210 <xc__hypercall_bounce_post@plt>
   10fee:	mov    rdx,QWORD PTR [rsp+0xb8]
   10ff6:	xor    rdx,QWORD PTR fs:0x28
   10fff:	mov    eax,ebx
   11001:	jne    11053 <xc_query_page_offline_status+0x133>
   11003:	add    rsp,0xc8
   1100a:	pop    rbx
   1100b:	pop    rbp
   1100c:	pop    r12
   1100e:	pop    r13
   11010:	ret    
   11011:	nop    DWORD PTR [rax+0x0]
   11018:	call   5940 <__errno_location@plt>
   1101d:	mov    ebx,0xffffffff
   11022:	mov    DWORD PTR [rax],0x16
   11028:	jmp    10fee <xc_query_page_offline_status+0xce>
   1102a:	call   5940 <__errno_location@plt>
   1102f:	mov    ebp,DWORD PTR [rax]
   11031:	lea    rdx,[rip+0x12df0]        # 23e28 <__PRETTY_FUNCTION__.13651+0xa8>
   11038:	mov    rbx,rax
   1103b:	mov    esi,0x1
   11040:	mov    rdi,r12
   11043:	xor    eax,eax
   11045:	call   5d50 <xc_report_error@plt>
   1104a:	mov    DWORD PTR [rbx],ebp
   1104c:	mov    ebx,0xffffffff
   11051:	jmp    10fee <xc_query_page_offline_status+0xce>
   11053:	call   5b80 <__stack_chk_fail@plt>
   11058:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011060 <xc_map_m2p>:
   11060:	push   r15
   11062:	push   r14
   11064:	mov    r15d,edx
   11067:	push   r13
   11069:	lea    r13,[rsi*8+0x1fffff]
   11071:	push   r12
   11073:	push   rbp
   11074:	push   rbx
   11075:	mov    r12,rdi
   11078:	mov    rbx,r13
   1107b:	mov    esi,0x8
   11080:	mov    r14,rcx
   11083:	shr    rbx,0x15
   11087:	sub    rsp,0x18
   1108b:	mov    rdi,rbx
   1108e:	call   5de0 <calloc@plt>
   11093:	test   rax,rax
   11096:	je     11228 <xc_map_m2p+0x1c8>
   1109c:	mov    rdx,rax
   1109f:	mov    rsi,rbx
   110a2:	mov    rdi,r12
   110a5:	mov    rbp,rax
   110a8:	call   62f0 <xc_machphys_mfn_list@plt>
   110ad:	test   eax,eax
   110af:	jne    11158 <xc_map_m2p+0xf8>
   110b5:	mov    esi,0x18
   110ba:	mov    rdi,rbx
   110bd:	call   5de0 <calloc@plt>
   110c2:	test   rax,rax
   110c5:	mov    r10,rax
   110c8:	je     111b0 <xc_map_m2p+0x150>
   110ce:	test   rbx,rbx
   110d1:	je     110fc <xc_map_m2p+0x9c>
   110d3:	lea    rcx,[rbx+rbx*2]
   110d7:	lea    rax,[rax+0x8]
   110db:	mov    rdx,rbp
   110de:	lea    rsi,[r10+rcx*8+0x8]
   110e3:	nop    DWORD PTR [rax+rax*1+0x0]
   110e8:	mov    rcx,QWORD PTR [rdx]
   110eb:	add    rax,0x18
   110ef:	add    rdx,0x8
   110f3:	mov    QWORD PTR [rax-0x18],rcx
   110f7:	cmp    rax,rsi
   110fa:	jne    110e8 <xc_map_m2p+0x88>
   110fc:	sub    rsp,0x8
   11100:	mov    rdx,r13
   11103:	mov    r9,r10
   11106:	push   rbx
   11107:	and    rdx,0xffffffffffe00000
   1110e:	mov    r8d,0x200000
   11114:	mov    ecx,r15d
   11117:	mov    esi,0x7ff2
   1111c:	mov    rdi,r12
   1111f:	mov    QWORD PTR [rsp+0x18],r10
   11124:	call   6580 <xc_map_foreign_ranges@plt>
   11129:	mov    rbx,rax
   1112c:	test   rbx,rbx
   1112f:	pop    rax
   11130:	pop    rdx
   11131:	mov    r10,QWORD PTR [rsp+0x8]
   11136:	je     111e0 <xc_map_m2p+0x180>
   1113c:	test   r14,r14
   1113f:	je     11148 <xc_map_m2p+0xe8>
   11141:	mov    rax,QWORD PTR [r10+0x8]
   11145:	mov    QWORD PTR [r14],rax
   11148:	mov    rdi,r10
   1114b:	call   5900 <free@plt>
   11150:	jmp    1118e <xc_map_m2p+0x12e>
   11152:	nop    WORD PTR [rax+rax*1+0x0]
   11158:	call   5940 <__errno_location@plt>
   1115d:	mov    r13d,DWORD PTR [rax]
   11160:	mov    rbx,rax
   11163:	mov    rdi,r12
   11166:	mov    esi,r13d
   11169:	call   6570 <xc_strerror@plt>
   1116e:	mov    ecx,DWORD PTR [rbx]
   11170:	lea    rdx,[rip+0x12f62]        # 240d9 <__PRETTY_FUNCTION__.13651+0x359>
   11177:	mov    r8,rax
   1117a:	mov    esi,0x1
   1117f:	mov    rdi,r12
   11182:	xor    eax,eax
   11184:	call   5d50 <xc_report_error@plt>
   11189:	mov    DWORD PTR [rbx],r13d
   1118c:	xor    ebx,ebx
   1118e:	mov    rdi,rbp
   11191:	call   5900 <free@plt>
   11196:	add    rsp,0x18
   1119a:	mov    rax,rbx
   1119d:	pop    rbx
   1119e:	pop    rbp
   1119f:	pop    r12
   111a1:	pop    r13
   111a3:	pop    r14
   111a5:	pop    r15
   111a7:	ret    
   111a8:	nop    DWORD PTR [rax+rax*1+0x0]
   111b0:	call   5940 <__errno_location@plt>
   111b5:	mov    r13d,DWORD PTR [rax]
   111b8:	lea    rdx,[rip+0x12cd1]        # 23e90 <__PRETTY_FUNCTION__.13651+0x110>
   111bf:	mov    rbx,rax
   111c2:	mov    esi,0x1
   111c7:	mov    rdi,r12
   111ca:	xor    eax,eax
   111cc:	call   5d50 <xc_report_error@plt>
   111d1:	mov    DWORD PTR [rbx],r13d
   111d4:	xor    ebx,ebx
   111d6:	jmp    1118e <xc_map_m2p+0x12e>
   111d8:	nop    DWORD PTR [rax+rax*1+0x0]
   111e0:	call   5940 <__errno_location@plt>
   111e5:	mov    r14d,DWORD PTR [rax]
   111e8:	mov    r13,rax
   111eb:	mov    rdi,r12
   111ee:	mov    esi,r14d
   111f1:	call   6570 <xc_strerror@plt>
   111f6:	mov    ecx,DWORD PTR [r13+0x0]
   111fa:	lea    rdx,[rip+0x12cbf]        # 23ec0 <__PRETTY_FUNCTION__.13651+0x140>
   11201:	mov    r8,rax
   11204:	mov    esi,0x1
   11209:	mov    rdi,r12
   1120c:	xor    eax,eax
   1120e:	call   5d50 <xc_report_error@plt>
   11213:	mov    DWORD PTR [r13+0x0],r14d
   11217:	mov    r10,QWORD PTR [rsp+0x8]
   1121c:	jmp    11148 <xc_map_m2p+0xe8>
   11221:	nop    DWORD PTR [rax+0x0]
   11228:	call   5940 <__errno_location@plt>
   1122d:	mov    ebp,DWORD PTR [rax]
   1122f:	lea    rdx,[rip+0x12c32]        # 23e68 <__PRETTY_FUNCTION__.13651+0xe8>
   11236:	mov    rbx,rax
   11239:	mov    esi,0x1
   1123e:	mov    rdi,r12
   11241:	xor    eax,eax
   11243:	call   5d50 <xc_report_error@plt>
   11248:	mov    DWORD PTR [rbx],ebp
   1124a:	xor    ebx,ebx
   1124c:	jmp    11196 <xc_map_m2p+0x136>
   11251:	nop    DWORD PTR [rax+rax*1+0x0]
   11256:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011260 <xc_exchange_page>:
   11260:	push   r15
   11262:	push   r14
   11264:	push   r13
   11266:	push   r12
   11268:	push   rbp
   11269:	push   rbx
   1126a:	mov    ebp,esi
   1126c:	mov    rbx,rdi
   1126f:	sub    rsp,0x128
   11276:	lea    rcx,[rsp+0xb0]
   1127e:	mov    QWORD PTR [rsp+0x38],rdx
   11283:	mov    edx,0x1
   11288:	mov    rax,QWORD PTR fs:0x28
   11291:	mov    QWORD PTR [rsp+0x118],rax
   11299:	xor    eax,eax
   1129b:	mov    QWORD PTR [rsp+0x60],0x0
   112a4:	mov    QWORD PTR [rsp+0x68],0x0
   112ad:	call   5b40 <xc_domain_getinfo@plt>
   112b2:	cmp    eax,0x1
   112b5:	jne    11ab3 <xc_exchange_page+0x853>
   112bb:	movabs rax,0xffffffff00000004
   112c5:	and    rax,QWORD PTR [rsp+0xb8]
   112cd:	movabs rdx,0x200000004
   112d7:	cmp    rax,rdx
   112da:	jne    119a8 <xc_exchange_page+0x748>
   112e0:	lea    eax,[rbp-0x1]
   112e3:	cmp    eax,0x7fef
   112e8:	ja     115f8 <xc_exchange_page+0x398>
   112ee:	test   BYTE PTR [rsp+0xb8],0x40
   112f6:	jne    11360 <xc_exchange_page+0x100>
   112f8:	mov    r13,QWORD PTR [rsp+0x38]
   112fd:	lea    r12,[rsp+0x90]
   11305:	mov    rdi,rbx
   11308:	mov    rcx,r12
   1130b:	mov    rdx,r13
   1130e:	mov    rsi,r13
   11311:	call   6410 <xc_query_page_offline_status@plt>
   11316:	test   eax,eax
   11318:	mov    r14d,DWORD PTR [rsp+0x90]
   11320:	jne    1132c <xc_exchange_page+0xcc>
   11322:	test   r14b,0x8
   11326:	jne    113b0 <xc_exchange_page+0x150>
   1132c:	call   5940 <__errno_location@plt>
   11331:	mov    r12d,DWORD PTR [rax]
   11334:	lea    rdx,[rip+0x12c15]        # 23f50 <__PRETTY_FUNCTION__.13651+0x1d0>
   1133b:	mov    rbp,rax
   1133e:	mov    r8d,r14d
   11341:	mov    rcx,r13
   11344:	mov    esi,0x1
   11349:	mov    rdi,rbx
   1134c:	xor    eax,eax
   1134e:	call   5d50 <xc_report_error@plt>
   11353:	mov    DWORD PTR [rbp+0x0],r12d
   11357:	jmp    1138b <xc_exchange_page+0x12b>
   11359:	nop    DWORD PTR [rax+0x0]
   11360:	call   5940 <__errno_location@plt>
   11365:	mov    rsi,QWORD PTR [rbx+0x8]
   11369:	mov    r12d,DWORD PTR [rax]
   1136c:	lea    r8,[rip+0x12ba5]        # 23f18 <__PRETTY_FUNCTION__.13651+0x198>
   11373:	mov    rbp,rax
   11376:	xor    ecx,ecx
   11378:	mov    edx,0x3
   1137d:	mov    rdi,rbx
   11380:	xor    eax,eax
   11382:	call   6540 <xc_report@plt>
   11387:	mov    DWORD PTR [rbp+0x0],r12d
   1138b:	lea    rdx,[rip+0x12d93]        # 24125 <__PRETTY_FUNCTION__.13651+0x3a5>
   11392:	mov    esi,0x1
   11397:	mov    rdi,rbx
   1139a:	xor    eax,eax
   1139c:	call   5d50 <xc_report_error@plt>
   113a1:	mov    r15d,0xffffffff
   113a7:	mov    DWORD PTR [rbp+0x0],r12d
   113ab:	jmp    11578 <xc_exchange_page+0x318>
   113b0:	lea    rsi,[rsp+0x58]
   113b5:	mov    rdi,rbx
   113b8:	call   6420 <xc_maximum_ram_page@plt>
   113bd:	test   eax,eax
   113bf:	jne    11a20 <xc_exchange_page+0x7c0>
   113c5:	mov    rsi,QWORD PTR [rsp+0x58]
   113ca:	xor    ecx,ecx
   113cc:	mov    edx,0x1
   113d1:	mov    rdi,rbx
   113d4:	call   64c0 <xc_map_m2p@plt>
   113d9:	test   rax,rax
   113dc:	mov    r13,rax
   113df:	je     11a20 <xc_exchange_page+0x7c0>
   113e5:	pxor   xmm0,xmm0
   113e9:	mov    rax,QWORD PTR [rsp+0x38]
   113ee:	mov    rdx,r12
   113f1:	mov    esi,ebp
   113f3:	mov    rdi,rbx
   113f6:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   113fb:	movaps XMMWORD PTR [r12],xmm0
   11400:	movaps XMMWORD PTR [r12+0x10],xmm0
   11406:	mov    QWORD PTR [rsp+0x8],rax
   1140b:	call   5e00 <xc_map_domain_meminfo@plt>
   11410:	test   eax,eax
   11412:	mov    DWORD PTR [rsp+0x30],eax
   11416:	jne    115a8 <xc_exchange_page+0x348>
   1141c:	mov    eax,DWORD PTR [rsp+0x94]
   11423:	mov    rdx,QWORD PTR [rsp+0xa8]
   1142b:	cmp    eax,0x8
   1142e:	mov    DWORD PTR [rip+0x21c73c],eax        # 22db70 <_dinfo>
   11434:	mov    QWORD PTR [rip+0x21c73d],rdx        # 22db78 <_dinfo+0x8>
   1143b:	jbe    1145f <xc_exchange_page+0x1ff>
   1143d:	mov    rax,QWORD PTR [rsp+0x98]
   11445:	mov    rcx,QWORD PTR [rsp+0x8]
   1144a:	mov    rax,QWORD PTR [rax+rcx*8]
   1144e:	and    eax,0x70000000
   11453:	cmp    rax,0x30000000
   11459:	je     115de <xc_exchange_page+0x37e>
   1145f:	lea    r15,[rsp+0x48]
   11464:	mov    esi,ebp
   11466:	mov    rdi,rbx
   11469:	mov    rdx,r15
   1146c:	call   5ab0 <xc_gnttab_map_table_v2@plt>
   11471:	mov    r14,rax
   11474:	call   5940 <__errno_location@plt>
   11479:	test   r14,r14
   1147c:	mov    QWORD PTR [rsp+0x10],rax
   11481:	je     118a8 <xc_exchange_page+0x648>
   11487:	mov    esi,DWORD PTR [rsp+0x48]
   1148b:	xor    edx,edx
   1148d:	mov    rcx,QWORD PTR [rsp+0x38]
   11492:	mov    rax,r14
   11495:	test   esi,esi
   11497:	jle    114b6 <xc_exchange_page+0x256>
   11499:	nop    DWORD PTR [rax+0x0]
   114a0:	test   BYTE PTR [rax],0x3
   114a3:	je     114ab <xc_exchange_page+0x24b>
   114a5:	cmp    rcx,QWORD PTR [rax+0x8]
   114a9:	je     114b6 <xc_exchange_page+0x256>
   114ab:	add    edx,0x1
   114ae:	add    rax,0x10
   114b2:	cmp    esi,edx
   114b4:	jne    114a0 <xc_exchange_page+0x240>
   114b6:	cmp    esi,edx
   114b8:	mov    QWORD PTR [rsp+0x28],0x0
   114c1:	setne  al
   114c4:	test   al,al
   114c6:	je     11618 <xc_exchange_page+0x3b8>
   114cc:	mov    r15,QWORD PTR [rsp+0x10]
   114d1:	lea    rdx,[rip+0x12c81]        # 24159 <__PRETTY_FUNCTION__.13651+0x3d9>
   114d8:	mov    esi,0x1
   114dd:	mov    rdi,rbx
   114e0:	xor    eax,eax
   114e2:	mov    ebp,DWORD PTR [r15]
   114e5:	call   5d50 <xc_report_error@plt>
   114ea:	mov    QWORD PTR [rsp+0x18],0x0
   114f3:	mov    QWORD PTR [rsp+0x20],0x0
   114fc:	mov    DWORD PTR [r15],ebp
   114ff:	mov    r15d,0xffffffff
   11505:	mov    rdi,QWORD PTR [rsp+0x20]
   1150a:	call   5900 <free@plt>
   1150f:	mov    rdi,QWORD PTR [rsp+0x60]
   11514:	call   5900 <free@plt>
   11519:	mov    rdi,QWORD PTR [rsp+0x18]
   1151e:	call   5900 <free@plt>
   11523:	mov    rdi,QWORD PTR [rsp+0x28]
   11528:	test   rdi,rdi
   1152b:	je     1153b <xc_exchange_page+0x2db>
   1152d:	movsxd rsi,DWORD PTR [rsp+0x48]
   11532:	shr    rsi,0x9
   11536:	call   61b0 <munmap@plt>
   1153b:	test   r14,r14
   1153e:	je     11551 <xc_exchange_page+0x2f1>
   11540:	movsxd rsi,DWORD PTR [rsp+0x48]
   11545:	mov    rdi,r14
   11548:	shr    rsi,0x8
   1154c:	call   61b0 <munmap@plt>
   11551:	mov    rsi,r12
   11554:	mov    rdi,rbx
   11557:	call   5920 <xc_unmap_domain_meminfo@plt>
   1155c:	mov    rax,QWORD PTR [rsp+0x58]
   11561:	mov    rdi,r13
   11564:	lea    rsi,[rax*8+0x1fffff]
   1156c:	and    rsi,0xffffffffffe00000
   11573:	call   61b0 <munmap@plt>
   11578:	mov    rcx,QWORD PTR [rsp+0x118]
   11580:	xor    rcx,QWORD PTR fs:0x28
   11589:	mov    eax,r15d
   1158c:	jne    11cc1 <xc_exchange_page+0xa61>
   11592:	add    rsp,0x128
   11599:	pop    rbx
   1159a:	pop    rbp
   1159b:	pop    r12
   1159d:	pop    r13
   1159f:	pop    r14
   115a1:	pop    r15
   115a3:	ret    
   115a4:	nop    DWORD PTR [rax+0x0]
   115a8:	call   5940 <__errno_location@plt>
   115ad:	mov    r14d,DWORD PTR [rax]
   115b0:	mov    rbp,rax
   115b3:	mov    rdi,rbx
   115b6:	mov    esi,r14d
   115b9:	call   6570 <xc_strerror@plt>
   115be:	mov    ecx,DWORD PTR [rbp+0x0]
   115c1:	lea    rdx,[rip+0x129d8]        # 23fa0 <__PRETTY_FUNCTION__.13651+0x220>
   115c8:	mov    r8,rax
   115cb:	mov    esi,0x1
   115d0:	mov    rdi,rbx
   115d3:	xor    eax,eax
   115d5:	call   5d50 <xc_report_error@plt>
   115da:	mov    DWORD PTR [rbp+0x0],r14d
   115de:	mov    rdi,QWORD PTR [rsp+0x60]
   115e3:	mov    r15d,0xffffffff
   115e9:	call   5900 <free@plt>
   115ee:	jmp    11551 <xc_exchange_page+0x2f1>
   115f3:	nop    DWORD PTR [rax+rax*1+0x0]
   115f8:	call   5940 <__errno_location@plt>
   115fd:	mov    rsi,QWORD PTR [rbx+0x8]
   11601:	mov    rbp,rax
   11604:	mov    r12d,DWORD PTR [rax]
   11607:	lea    r8,[rip+0x12aff]        # 2410d <__PRETTY_FUNCTION__.13651+0x38d>
   1160e:	jmp    11376 <xc_exchange_page+0x116>
   11613:	nop    DWORD PTR [rax+rax*1+0x0]
   11618:	mov    edi,0x1000
   1161d:	call   5ff0 <malloc@plt>
   11622:	test   rax,rax
   11625:	mov    QWORD PTR [rsp+0x18],rax
   1162a:	je     11870 <xc_exchange_page+0x610>
   11630:	mov    edi,0x4000
   11635:	mov    DWORD PTR [rsp+0x68],0x400
   1163d:	call   5ff0 <malloc@plt>
   11642:	test   rax,rax
   11645:	mov    QWORD PTR [rsp+0x60],rax
   1164a:	je     11a61 <xc_exchange_page+0x801>
   11650:	mov    rax,QWORD PTR [rsp+0x98]
   11658:	mov    rcx,QWORD PTR [rsp+0x8]
   1165d:	mov    DWORD PTR [rsp+0x6c],0x0
   11665:	mov    r8,QWORD PTR [rsp+0x38]
   1166a:	test   BYTE PTR [rax+rcx*8+0x3],0x80
   1166f:	je     116ac <xc_exchange_page+0x44c>
   11671:	lea    rsi,[rsp+0x70]
   11676:	mov    ecx,ebp
   11678:	mov    edx,0x1
   1167d:	mov    rdi,rbx
   11680:	mov    DWORD PTR [rsp+0x70],0x4
   11688:	mov    QWORD PTR [rsp+0x78],r8
   1168d:	call   5f60 <xc_mmuext_op@plt>
   11692:	test   eax,eax
   11694:	js     11aca <xc_exchange_page+0x86a>
   1169a:	mov    r8,QWORD PTR [rsp+0x38]
   1169f:	mov    DWORD PTR [rsp+0x30],0x1
   116a7:	mov    QWORD PTR [rsp+0x78],r8
   116ac:	mov    ecx,0x1
   116b1:	mov    edx,0x1000
   116b6:	mov    esi,ebp
   116b8:	mov    rdi,rbx
   116bb:	call   6590 <xc_map_foreign_range@plt>
   116c0:	test   rax,rax
   116c3:	je     119e0 <xc_exchange_page+0x780>
   116c9:	mov    rdi,QWORD PTR [rsp+0x18]
   116ce:	mov    rsi,rax
   116d1:	mov    ecx,0x200
   116d6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   116d9:	mov    esi,0x1000
   116de:	mov    rdi,rax
   116e1:	call   61b0 <munmap@plt>
   116e6:	mov    esi,ebp
   116e8:	mov    rdi,rbx
   116eb:	call   5f30 <xc_alloc_mmu_updates@plt>
   116f0:	test   rax,rax
   116f3:	mov    QWORD PTR [rsp+0x20],rax
   116f8:	je     11a75 <xc_exchange_page+0x815>
   116fe:	lea    r15,[rsp+0x60]
   11703:	sub    rsp,0x8
   11707:	lea    r9,[rip+0xfffffffffffff4a2]        # 10bb0 <__clear_pte>
   1170e:	push   QWORD PTR [rsp+0x40]
   11712:	mov    r8,QWORD PTR [rsp+0x30]
   11717:	mov    rdx,r12
   1171a:	mov    rcx,r15
   1171d:	mov    esi,ebp
   1171f:	mov    rdi,rbx
   11722:	call   10890 <change_pte>
   11727:	test   eax,eax
   11729:	pop    r10
   1172b:	pop    r11
   1172d:	jne    11902 <xc_exchange_page+0x6a2>
   11733:	lea    rax,[rsp+0x50]
   11738:	mov    r9d,0x1
   1173e:	xor    ecx,ecx
   11740:	mov    edx,0x1
   11745:	mov    esi,ebp
   11747:	mov    rdi,rbx
   1174a:	push   rax
   1174b:	push   0x0
   1174d:	lea    r8,[rsp+0x48]
   11752:	call   58d0 <xc_domain_memory_exchange_pages@plt>
   11757:	test   eax,eax
   11759:	pop    r8
   1175b:	pop    r9
   1175d:	je     11b04 <xc_exchange_page+0x8a4>
   11763:	mov    rax,QWORD PTR [rsp+0x10]
   11768:	lea    rdx,[rip+0x12a5b]        # 241ca <__PRETTY_FUNCTION__.13651+0x44a>
   1176f:	mov    esi,0x1
   11774:	mov    rdi,rbx
   11777:	mov    ecx,DWORD PTR [rax]
   11779:	xor    eax,eax
   1177b:	mov    DWORD PTR [rsp+0x8],ecx
   1177f:	call   5d50 <xc_report_error@plt>
   11784:	mov    ecx,DWORD PTR [rsp+0x8]
   11788:	mov    rax,QWORD PTR [rsp+0x10]
   1178d:	sub    rsp,0x8
   11791:	lea    r9,[rip+0xfffffffffffff338]        # 10ad0 <__update_pte>
   11798:	mov    esi,ebp
   1179a:	mov    rdi,rbx
   1179d:	mov    rdx,r12
   117a0:	mov    DWORD PTR [rax],ecx
   117a2:	push   QWORD PTR [rsp+0x40]
   117a6:	mov    rcx,r15
   117a9:	mov    r8,QWORD PTR [rsp+0x30]
   117ae:	xor    r15d,r15d
   117b1:	call   10890 <change_pte>
   117b6:	pop    rsi
   117b7:	pop    rdi
   117b8:	test   eax,eax
   117ba:	sete   r15b
   117be:	sub    r15d,0x2
   117c2:	nop    WORD PTR [rax+rax*1+0x0]
   117c8:	mov    eax,DWORD PTR [rsp+0x30]
   117cc:	test   eax,eax
   117ce:	je     11505 <xc_exchange_page+0x2a5>
   117d4:	mov    rdx,QWORD PTR [rsp+0x38]
   117d9:	mov    rax,QWORD PTR [rsp+0x98]
   117e1:	mov    rax,QWORD PTR [rax+rdx*8]
   117e5:	test   eax,0x80000000
   117ea:	je     11505 <xc_exchange_page+0x2a5>
   117f0:	and    eax,0x70000000
   117f5:	cmp    rax,0x20000000
   117fb:	je     11960 <xc_exchange_page+0x700>
   11801:	jbe    11938 <xc_exchange_page+0x6d8>
   11807:	cmp    rax,0x30000000
   1180d:	je     11950 <xc_exchange_page+0x6f0>
   11813:	cmp    rax,0x40000000
   11819:	jne    11970 <xc_exchange_page+0x710>
   1181f:	mov    DWORD PTR [rsp+0x70],0x3
   11827:	lea    rsi,[rsp+0x70]
   1182c:	mov    ecx,ebp
   1182e:	mov    edx,0x1
   11833:	mov    rdi,rbx
   11836:	call   5f60 <xc_mmuext_op@plt>
   1183b:	test   eax,eax
   1183d:	jns    11505 <xc_exchange_page+0x2a5>
   11843:	mov    r15,QWORD PTR [rsp+0x10]
   11848:	lea    rdx,[rip+0x129cd]        # 2421c <__PRETTY_FUNCTION__.13651+0x49c>
   1184f:	mov    esi,0x1
   11854:	mov    rdi,rbx
   11857:	xor    eax,eax
   11859:	mov    ebp,DWORD PTR [r15]
   1185c:	call   5d50 <xc_report_error@plt>
   11861:	mov    DWORD PTR [r15],ebp
   11864:	mov    r15d,0xfffffffe
   1186a:	jmp    11505 <xc_exchange_page+0x2a5>
   1186f:	nop
   11870:	mov    r15,QWORD PTR [rsp+0x10]
   11875:	lea    rdx,[rip+0x1275c]        # 23fd8 <__PRETTY_FUNCTION__.13651+0x258>
   1187c:	mov    ebp,DWORD PTR [r15]
   1187f:	mov    esi,0x1
   11884:	mov    rdi,rbx
   11887:	call   5d50 <xc_report_error@plt>
   1188c:	mov    DWORD PTR [r15],ebp
   1188f:	mov    QWORD PTR [rsp+0x20],0x0
   11898:	mov    r15d,0xffffffff
   1189e:	jmp    11505 <xc_exchange_page+0x2a5>
   118a3:	nop    DWORD PTR [rax+rax*1+0x0]
   118a8:	mov    rdx,r15
   118ab:	mov    esi,ebp
   118ad:	mov    rdi,rbx
   118b0:	call   6100 <xc_gnttab_map_table_v1@plt>
   118b5:	test   rax,rax
   118b8:	mov    QWORD PTR [rsp+0x28],rax
   118bd:	je     11b5f <xc_exchange_page+0x8ff>
   118c3:	mov    esi,DWORD PTR [rsp+0x48]
   118c7:	mov    rcx,QWORD PTR [rsp+0x38]
   118cc:	test   esi,esi
   118ce:	jle    11be2 <xc_exchange_page+0x982>
   118d4:	mov    rax,QWORD PTR [rsp+0x28]
   118d9:	xor    edx,edx
   118db:	add    rax,0x4
   118df:	nop
   118e0:	test   BYTE PTR [rax-0x4],0x3
   118e4:	je     118ed <xc_exchange_page+0x68d>
   118e6:	mov    edi,DWORD PTR [rax]
   118e8:	cmp    rcx,rdi
   118eb:	je     118f8 <xc_exchange_page+0x698>
   118ed:	add    edx,0x1
   118f0:	add    rax,0x8
   118f4:	cmp    esi,edx
   118f6:	jne    118e0 <xc_exchange_page+0x680>
   118f8:	cmp    esi,edx
   118fa:	setne  al
   118fd:	jmp    114c4 <xc_exchange_page+0x264>
   11902:	mov    rax,QWORD PTR [rsp+0x10]
   11907:	lea    rdx,[rip+0x128aa]        # 241b8 <__PRETTY_FUNCTION__.13651+0x438>
   1190e:	mov    r15d,DWORD PTR [rax]
   11911:	xor    eax,eax
   11913:	mov    esi,0x1
   11918:	mov    rdi,rbx
   1191b:	call   5d50 <xc_report_error@plt>
   11920:	mov    rax,QWORD PTR [rsp+0x10]
   11925:	mov    DWORD PTR [rax],r15d
   11928:	mov    r15d,0xffffffff
   1192e:	jmp    117c8 <xc_exchange_page+0x568>
   11933:	nop    DWORD PTR [rax+rax*1+0x0]
   11938:	cmp    rax,0x10000000
   1193e:	jne    11970 <xc_exchange_page+0x710>
   11940:	mov    DWORD PTR [rsp+0x70],0x0
   11948:	jmp    11827 <xc_exchange_page+0x5c7>
   1194d:	nop    DWORD PTR [rax]
   11950:	mov    DWORD PTR [rsp+0x70],0x2
   11958:	jmp    11827 <xc_exchange_page+0x5c7>
   1195d:	nop    DWORD PTR [rax]
   11960:	mov    DWORD PTR [rsp+0x70],0x1
   11968:	jmp    11827 <xc_exchange_page+0x5c7>
   1196d:	nop    DWORD PTR [rax]
   11970:	mov    rax,QWORD PTR [rsp+0x10]
   11975:	lea    rdx,[rip+0x1273c]        # 240b8 <__PRETTY_FUNCTION__.13651+0x338>
   1197c:	mov    esi,0x1
   11981:	mov    rdi,rbx
   11984:	mov    ecx,DWORD PTR [rax]
   11986:	xor    eax,eax
   11988:	mov    DWORD PTR [rsp+0x8],ecx
   1198c:	call   5d50 <xc_report_error@plt>
   11991:	mov    rax,QWORD PTR [rsp+0x10]
   11996:	mov    ecx,DWORD PTR [rsp+0x8]
   1199a:	mov    DWORD PTR [rax],ecx
   1199c:	jmp    11827 <xc_exchange_page+0x5c7>
   119a1:	nop    DWORD PTR [rax+0x0]
   119a8:	call   5940 <__errno_location@plt>
   119ad:	lea    rdx,[rip+0x12534]        # 23ee8 <__PRETTY_FUNCTION__.13651+0x168>
   119b4:	mov    rbp,rax
   119b7:	mov    DWORD PTR [rax],0x16
   119bd:	mov    esi,0x1
   119c2:	mov    rdi,rbx
   119c5:	xor    eax,eax
   119c7:	call   5d50 <xc_report_error@plt>
   119cc:	mov    r15d,0xffffffff
   119d2:	mov    DWORD PTR [rbp+0x0],0x16
   119d9:	jmp    11578 <xc_exchange_page+0x318>
   119de:	xchg   ax,ax
   119e0:	mov    rax,QWORD PTR [rsp+0x10]
   119e5:	mov    rcx,QWORD PTR [rsp+0x38]
   119ea:	lea    rdx,[rip+0x12617]        # 24008 <__PRETTY_FUNCTION__.13651+0x288>
   119f1:	mov    esi,0x1
   119f6:	mov    rdi,rbx
   119f9:	mov    r15d,DWORD PTR [rax]
   119fc:	xor    eax,eax
   119fe:	call   5d50 <xc_report_error@plt>
   11a03:	mov    rax,QWORD PTR [rsp+0x10]
   11a08:	mov    QWORD PTR [rsp+0x20],0x0
   11a11:	mov    DWORD PTR [rax],r15d
   11a14:	mov    r15d,0xffffffff
   11a1a:	jmp    117c8 <xc_exchange_page+0x568>
   11a1f:	nop
   11a20:	call   5940 <__errno_location@plt>
   11a25:	mov    r12d,DWORD PTR [rax]
   11a28:	mov    rbp,rax
   11a2b:	mov    rdi,rbx
   11a2e:	mov    r15d,0xffffffff
   11a34:	mov    esi,r12d
   11a37:	call   6570 <xc_strerror@plt>
   11a3c:	mov    ecx,DWORD PTR [rbp+0x0]
   11a3f:	lea    rdx,[rip+0x12532]        # 23f78 <__PRETTY_FUNCTION__.13651+0x1f8>
   11a46:	mov    r8,rax
   11a49:	mov    esi,0x1
   11a4e:	mov    rdi,rbx
   11a51:	xor    eax,eax
   11a53:	call   5d50 <xc_report_error@plt>
   11a58:	mov    DWORD PTR [rbp+0x0],r12d
   11a5c:	jmp    11578 <xc_exchange_page+0x318>
   11a61:	mov    r15,QWORD PTR [rsp+0x10]
   11a66:	lea    rdx,[rip+0x12705]        # 24172 <__PRETTY_FUNCTION__.13651+0x3f2>
   11a6d:	mov    ebp,DWORD PTR [r15]
   11a70:	jmp    1187f <xc_exchange_page+0x61f>
   11a75:	mov    rax,QWORD PTR [rsp+0x10]
   11a7a:	lea    rcx,[rip+0x127bf]        # 24240 <__FUNCTION__.13043>
   11a81:	lea    rdx,[rip+0x1271e]        # 241a6 <__PRETTY_FUNCTION__.13651+0x426>
   11a88:	mov    r8d,0x24e
   11a8e:	mov    esi,0x1
   11a93:	mov    rdi,rbx
   11a96:	mov    r15d,DWORD PTR [rax]
   11a99:	xor    eax,eax
   11a9b:	call   5d50 <xc_report_error@plt>
   11aa0:	mov    rax,QWORD PTR [rsp+0x10]
   11aa5:	mov    DWORD PTR [rax],r15d
   11aa8:	mov    r15d,0xffffffff
   11aae:	jmp    117c8 <xc_exchange_page+0x568>
   11ab3:	call   5940 <__errno_location@plt>
   11ab8:	lea    rdx,[rip+0x12634]        # 240f3 <__PRETTY_FUNCTION__.13651+0x373>
   11abf:	mov    rbp,rax
   11ac2:	mov    r12d,DWORD PTR [rax]
   11ac5:	jmp    11392 <xc_exchange_page+0x132>
   11aca:	mov    r15,QWORD PTR [rsp+0x10]
   11acf:	mov    rcx,QWORD PTR [rsp+0x38]
   11ad4:	lea    rdx,[rip+0x126b2]        # 2418d <__PRETTY_FUNCTION__.13651+0x40d>
   11adb:	mov    esi,0x1
   11ae0:	mov    rdi,rbx
   11ae3:	xor    eax,eax
   11ae5:	mov    ebp,DWORD PTR [r15]
   11ae8:	call   5d50 <xc_report_error@plt>
   11aed:	mov    QWORD PTR [rsp+0x20],0x0
   11af6:	mov    DWORD PTR [r15],ebp
   11af9:	mov    r15d,0xffffffff
   11aff:	jmp    11505 <xc_exchange_page+0x2a5>
   11b04:	sub    rsp,0x8
   11b08:	lea    r9,[rip+0xffffffffffffefc1]        # 10ad0 <__update_pte>
   11b0f:	mov    rcx,r15
   11b12:	push   QWORD PTR [rsp+0x58]
   11b16:	mov    r8,QWORD PTR [rsp+0x30]
   11b1b:	mov    rdx,r12
   11b1e:	mov    esi,ebp
   11b20:	mov    rdi,rbx
   11b23:	call   10890 <change_pte>
   11b28:	test   eax,eax
   11b2a:	pop    rdx
   11b2b:	pop    rcx
   11b2c:	je     11b83 <xc_exchange_page+0x923>
   11b2e:	mov    rax,QWORD PTR [rsp+0x10]
   11b33:	lea    rdx,[rip+0x124ee]        # 24028 <__PRETTY_FUNCTION__.13651+0x2a8>
   11b3a:	mov    esi,0x1
   11b3f:	mov    rdi,rbx
   11b42:	mov    r15d,DWORD PTR [rax]
   11b45:	xor    eax,eax
   11b47:	call   5d50 <xc_report_error@plt>
   11b4c:	mov    rax,QWORD PTR [rsp+0x10]
   11b51:	mov    DWORD PTR [rax],r15d
   11b54:	mov    r15d,0xfffffffe
   11b5a:	jmp    117c8 <xc_exchange_page+0x568>
   11b5f:	mov    r14,QWORD PTR [rsp+0x10]
   11b64:	lea    rdx,[rip+0x125d3]        # 2413e <__PRETTY_FUNCTION__.13651+0x3be>
   11b6b:	mov    esi,0x1
   11b70:	mov    rdi,rbx
   11b73:	mov    ebp,DWORD PTR [r14]
   11b76:	call   5d50 <xc_report_error@plt>
   11b7b:	mov    DWORD PTR [r14],ebp
   11b7e:	jmp    115de <xc_exchange_page+0x37e>
   11b83:	mov    rsi,QWORD PTR [rsp+0x38]
   11b88:	lea    rcx,[rsp+0x4c]
   11b8d:	mov    rdi,rbx
   11b90:	mov    rdx,rsi
   11b93:	call   6410 <xc_query_page_offline_status@plt>
   11b98:	mov    r15d,eax
   11b9b:	mov    rax,QWORD PTR [rsp+0x10]
   11ba0:	test   r15d,r15d
   11ba3:	jne    11c9e <xc_exchange_page+0xa3e>
   11ba9:	test   BYTE PTR [rsp+0x4c],0x2
   11bae:	mov    ecx,DWORD PTR [rax]
   11bb0:	mov    DWORD PTR [rsp+0x34],ecx
   11bb4:	jne    11be9 <xc_exchange_page+0x989>
   11bb6:	lea    rdx,[rip+0x1249b]        # 24058 <__PRETTY_FUNCTION__.13651+0x2d8>
   11bbd:	xor    eax,eax
   11bbf:	mov    esi,0x1
   11bc4:	mov    rdi,rbx
   11bc7:	mov    r15d,0xffffffff
   11bcd:	call   5d50 <xc_report_error@plt>
   11bd2:	mov    rax,QWORD PTR [rsp+0x10]
   11bd7:	mov    ecx,DWORD PTR [rsp+0x34]
   11bdb:	mov    DWORD PTR [rax],ecx
   11bdd:	jmp    117c8 <xc_exchange_page+0x568>
   11be2:	xor    edx,edx
   11be4:	jmp    118f8 <xc_exchange_page+0x698>
   11be9:	mov    rsi,QWORD PTR [rbx+0x8]
   11bed:	mov    r9,QWORD PTR [rsp+0x38]
   11bf2:	lea    r8,[rip+0x12609]        # 24202 <__PRETTY_FUNCTION__.13651+0x482>
   11bf9:	xor    ecx,ecx
   11bfb:	xor    eax,eax
   11bfd:	mov    edx,0x5
   11c02:	mov    rdi,rbx
   11c05:	call   6540 <xc_report@plt>
   11c0a:	mov    rax,QWORD PTR [rsp+0x10]
   11c0f:	mov    ecx,DWORD PTR [rsp+0x34]
   11c13:	mov    esi,ebp
   11c15:	mov    rdx,QWORD PTR [rsp+0x50]
   11c1a:	mov    rdi,rbx
   11c1d:	mov    DWORD PTR [rax],ecx
   11c1f:	mov    rcx,QWORD PTR [rsp+0x8]
   11c24:	mov    rax,QWORD PTR [rsp+0xa0]
   11c2c:	mov    QWORD PTR [rax+rcx*8],rdx
   11c30:	mov    r8,QWORD PTR [rsp+0x50]
   11c35:	mov    ecx,0x3
   11c3a:	mov    edx,0x1000
   11c3f:	call   6590 <xc_map_foreign_range@plt>
   11c44:	test   rax,rax
   11c47:	je     11cad <xc_exchange_page+0xa4d>
   11c49:	mov    rcx,QWORD PTR [rsp+0x18]
   11c4e:	lea    rdi,[rax+0x8]
   11c52:	and    rdi,0xfffffffffffffff8
   11c56:	mov    rdx,QWORD PTR [rcx]
   11c59:	mov    QWORD PTR [rax],rdx
   11c5c:	mov    rdx,QWORD PTR [rcx+0xff8]
   11c63:	mov    QWORD PTR [rax+0xff8],rdx
   11c6a:	mov    rdx,rax
   11c6d:	sub    rdx,rdi
   11c70:	sub    rcx,rdx
   11c73:	mov    rsi,rcx
   11c76:	lea    ecx,[rdx+0x1000]
   11c7c:	shr    ecx,0x3
   11c7f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   11c82:	mov    esi,0x1000
   11c87:	mov    rdi,rax
   11c8a:	call   61b0 <munmap@plt>
   11c8f:	mov    rax,QWORD PTR [rsp+0x50]
   11c94:	mov    QWORD PTR [rsp+0x78],rax
   11c99:	jmp    117c8 <xc_exchange_page+0x568>
   11c9e:	mov    r15d,DWORD PTR [rax]
   11ca1:	lea    rdx,[rip+0x1253c]        # 241e4 <__PRETTY_FUNCTION__.13651+0x464>
   11ca8:	jmp    11911 <xc_exchange_page+0x6b1>
   11cad:	mov    rax,QWORD PTR [rsp+0x10]
   11cb2:	lea    rdx,[rip+0x123c7]        # 24080 <__PRETTY_FUNCTION__.13651+0x300>
   11cb9:	mov    r15d,DWORD PTR [rax]
   11cbc:	jmp    11911 <xc_exchange_page+0x6b1>
   11cc1:	call   5b80 <__stack_chk_fail@plt>
   11cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011cd0 <xc_compression_add_page>:
   11cd0:	push   rbp
   11cd1:	push   rbx
   11cd2:	sub    rsp,0x18
   11cd6:	cmp    QWORD PTR [rsi+0x58],rcx
   11cda:	jb     11de6 <xc_compression_add_page+0x116>
   11ce0:	test   r8d,r8d
   11ce3:	mov    rax,rsi
   11ce6:	jne    11d50 <xc_compression_add_page+0x80>
   11ce8:	mov    edi,DWORD PTR [rax+0x28]
   11ceb:	mov    rsi,QWORD PTR [rax+0x20]
   11cef:	mov    QWORD PTR [rsi+rdi*8],rcx
   11cf3:	mov    ecx,DWORD PTR [rax+0x28]
   11cf6:	mov    rsi,QWORD PTR [rdx]
   11cf9:	shl    rcx,0xc
   11cfd:	add    rcx,QWORD PTR [rax+0x18]
   11d01:	mov    QWORD PTR [rcx],rsi
   11d04:	lea    rdi,[rcx+0x8]
   11d08:	mov    rsi,QWORD PTR [rdx+0xff8]
   11d0f:	and    rdi,0xfffffffffffffff8
   11d13:	mov    QWORD PTR [rcx+0xff8],rsi
   11d1a:	sub    rcx,rdi
   11d1d:	sub    rdx,rcx
   11d20:	add    ecx,0x1000
   11d26:	mov    rsi,rdx
   11d29:	shr    ecx,0x3
   11d2c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   11d2f:	mov    ebx,DWORD PTR [rax+0x28]
   11d32:	lea    edx,[rbx+0x1]
   11d35:	mov    DWORD PTR [rax+0x28],edx
   11d38:	xor    eax,eax
   11d3a:	cmp    edx,0x2000
   11d40:	sete   al
   11d43:	neg    eax
   11d45:	add    rsp,0x18
   11d49:	pop    rbx
   11d4a:	pop    rbp
   11d4b:	ret    
   11d4c:	nop    DWORD PTR [rax+0x0]
   11d50:	mov    rdi,QWORD PTR [rsi+0x38]
   11d54:	lea    r8,[rcx*8+0x0]
   11d5c:	mov    rcx,0xffffffffffffffff
   11d63:	add    rdi,r8
   11d66:	mov    rsi,QWORD PTR [rdi]
   11d69:	test   rsi,rsi
   11d6c:	je     11ce8 <xc_compression_add_page+0x18>
   11d72:	cmp    rsi,QWORD PTR [rax+0x50]
   11d76:	je     11db9 <xc_compression_add_page+0xe9>
   11d78:	cmp    rsi,QWORD PTR [rax+0x48]
   11d7c:	mov    rcx,QWORD PTR [rsi+0x10]
   11d80:	je     11dd8 <xc_compression_add_page+0x108>
   11d82:	mov    rdi,QWORD PTR [rsi+0x18]
   11d86:	mov    QWORD PTR [rdi+0x10],rcx
   11d8a:	mov    rcx,QWORD PTR [rsi+0x10]
   11d8e:	mov    rdi,QWORD PTR [rsi+0x18]
   11d92:	mov    QWORD PTR [rcx+0x18],rdi
   11d96:	mov    QWORD PTR [rsi+0x10],0x0
   11d9e:	mov    rcx,QWORD PTR [rax+0x50]
   11da2:	mov    QWORD PTR [rsi+0x18],rcx
   11da6:	mov    rcx,QWORD PTR [rax+0x50]
   11daa:	mov    QWORD PTR [rcx+0x10],rsi
   11dae:	mov    rdi,QWORD PTR [rax+0x38]
   11db2:	mov    QWORD PTR [rax+0x50],rsi
   11db6:	add    rdi,r8
   11db9:	mov    QWORD PTR [rdi],0x0
   11dc0:	mov    rsi,QWORD PTR [rax+0x50]
   11dc4:	mov    rcx,0xffffffffffffffff
   11dcb:	mov    QWORD PTR [rsi+0x8],rcx
   11dcf:	jmp    11ce8 <xc_compression_add_page+0x18>
   11dd4:	nop    DWORD PTR [rax+0x0]
   11dd8:	mov    QWORD PTR [rax+0x48],rcx
   11ddc:	mov    QWORD PTR [rcx+0x18],0x0
   11de4:	jmp    11d96 <xc_compression_add_page+0xc6>
   11de6:	mov    QWORD PTR [rsp+0x8],rcx
   11deb:	mov    QWORD PTR [rsp],rdi
   11def:	call   5940 <__errno_location@plt>
   11df4:	mov    rcx,QWORD PTR [rsp+0x8]
   11df9:	mov    ebp,DWORD PTR [rax]
   11dfb:	lea    rdx,[rip+0x12456]        # 24258 <__FUNCTION__.13043+0x18>
   11e02:	mov    rdi,QWORD PTR [rsp]
   11e06:	mov    rbx,rax
   11e09:	mov    esi,0x1
   11e0e:	xor    eax,eax
   11e10:	call   5d50 <xc_report_error@plt>
   11e15:	mov    DWORD PTR [rbx],ebp
   11e17:	mov    eax,0xfffffffe
   11e1c:	jmp    11d45 <xc_compression_add_page+0x75>
   11e21:	nop    DWORD PTR [rax+rax*1+0x0]
   11e26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011e30 <xc_compression_compress_pages>:
   11e30:	push   r15
   11e32:	mov    r15,rsi
   11e35:	push   r14
   11e37:	push   r13
   11e39:	push   r12
   11e3b:	push   rbp
   11e3c:	push   rbx
   11e3d:	mov    esi,DWORD PTR [rsi+0x28]
   11e40:	mov    QWORD PTR [rsp-0x8],r8
   11e45:	test   esi,esi
   11e47:	je     11fac <xc_compression_compress_pages+0x17c>
   11e4d:	mov    eax,DWORD PTR [r15+0x2c]
   11e51:	cmp    esi,eax
   11e53:	je     11fac <xc_compression_compress_pages+0x17c>
   11e59:	mov    QWORD PTR [r15+0x10],0x0
   11e61:	mov    QWORD PTR [r15],rdx
   11e64:	mov    QWORD PTR [r15+0x8],rcx
   11e68:	jbe    11fa2 <xc_compression_compress_pages+0x172>
   11e6e:	xchg   ax,ax
   11e70:	mov    rdx,QWORD PTR [r15+0x20]
   11e74:	mov    r11,rax
   11e77:	shl    r11,0xc
   11e7b:	add    r11,QWORD PTR [r15+0x18]
   11e7f:	mov    rdx,QWORD PTR [rdx+rax*8]
   11e83:	cmp    rdx,0xffffffffffffffff
   11e87:	je     120d0 <xc_compression_compress_pages+0x2a0>
   11e8d:	mov    rcx,QWORD PTR [r15+0x38]
   11e91:	mov    rax,QWORD PTR [rcx+rdx*8]
   11e95:	test   rax,rax
   11e98:	je     12193 <xc_compression_compress_pages+0x363>
   11e9e:	xor    ecx,ecx
   11ea0:	cmp    QWORD PTR [r15+0x48],rax
   11ea4:	je     12245 <xc_compression_compress_pages+0x415>
   11eaa:	cmp    QWORD PTR [r15+0x50],rax
   11eae:	mov    rdx,QWORD PTR [rax+0x18]
   11eb2:	je     12220 <xc_compression_compress_pages+0x3f0>
   11eb8:	mov    rsi,QWORD PTR [rax+0x10]
   11ebc:	mov    QWORD PTR [rdx+0x10],rsi
   11ec0:	mov    rdx,QWORD PTR [rax+0x10]
   11ec4:	mov    rsi,QWORD PTR [rax+0x18]
   11ec8:	mov    QWORD PTR [rdx+0x18],rsi
   11ecc:	mov    QWORD PTR [rax+0x18],0x0
   11ed4:	mov    rdx,QWORD PTR [r15+0x48]
   11ed8:	test   ecx,ecx
   11eda:	mov    QWORD PTR [rax+0x10],rdx
   11ede:	mov    rdx,QWORD PTR [r15+0x48]
   11ee2:	mov    QWORD PTR [rdx+0x18],rax
   11ee6:	mov    QWORD PTR [r15+0x48],rax
   11eea:	mov    rbx,QWORD PTR [rax]
   11eed:	jne    121be <xc_compression_compress_pages+0x38e>
   11ef3:	mov    rax,QWORD PTR [r15+0x10]
   11ef7:	mov    r13,QWORD PTR [r15]
   11efa:	add    r13,rax
   11efd:	add    rax,0x1009
   11f03:	cmp    rax,QWORD PTR [r15+0x8]
   11f07:	ja     120e1 <xc_compression_compress_pages+0x2b1>
   11f0d:	xor    eax,eax
   11f0f:	xor    r14d,r14d
   11f12:	xor    r8d,r8d
   11f15:	xor    ebp,ebp
   11f17:	xor    ecx,ecx
   11f19:	xor    esi,esi
   11f1b:	jmp    11f47 <xc_compression_compress_pages+0x117>
   11f1d:	nop    DWORD PTR [rax]
   11f20:	mov    edi,edx
   11f22:	xor    edi,esi
   11f24:	and    edi,0x1
   11f27:	jne    11fc8 <xc_compression_compress_pages+0x198>
   11f2d:	cmp    cl,0x7f
   11f30:	je     11fc8 <xc_compression_compress_pages+0x198>
   11f36:	add    ecx,0x1
   11f39:	add    rax,0x1
   11f3d:	mov    esi,edx
   11f3f:	cmp    rax,0x401
   11f45:	je     11f79 <xc_compression_compress_pages+0x149>
   11f47:	cmp    rax,0x400
   11f4d:	mov    r10d,eax
   11f50:	je     1223b <xc_compression_compress_pages+0x40b>
   11f56:	xor    edx,edx
   11f58:	mov    edi,DWORD PTR [r11+rax*4]
   11f5c:	cmp    DWORD PTR [rbx+rax*4],edi
   11f5f:	setne  dl
   11f62:	test   cl,cl
   11f64:	jne    11f20 <xc_compression_compress_pages+0xf0>
   11f66:	add    rax,0x1
   11f6a:	mov    ecx,0x1
   11f6f:	mov    esi,edx
   11f71:	cmp    rax,0x401
   11f77:	jne    11f47 <xc_compression_compress_pages+0x117>
   11f79:	cmp    r14d,0x1000
   11f80:	je     12184 <xc_compression_compress_pages+0x354>
   11f86:	movsxd rbp,ebp
   11f89:	add    QWORD PTR [r15+0x10],rbp
   11f8d:	mov    eax,DWORD PTR [r15+0x2c]
   11f91:	add    eax,0x1
   11f94:	cmp    eax,DWORD PTR [r15+0x28]
   11f98:	mov    DWORD PTR [r15+0x2c],eax
   11f9c:	jb     11e70 <xc_compression_compress_pages+0x40>
   11fa2:	mov    eax,0x1
   11fa7:	jmp    120e6 <xc_compression_compress_pages+0x2b6>
   11fac:	mov    QWORD PTR [r15+0x28],0x0
   11fb4:	xor    eax,eax
   11fb6:	pop    rbx
   11fb7:	pop    rbp
   11fb8:	pop    r12
   11fba:	pop    r13
   11fbc:	pop    r14
   11fbe:	pop    r15
   11fc0:	ret    
   11fc1:	nop    DWORD PTR [rax+0x0]
   11fc8:	movsxd rdi,ebp
   11fcb:	movsx  r9d,cl
   11fcf:	add    ebp,0x1
   11fd2:	shl    r9d,0x2
   11fd6:	add    rdi,r13
   11fd9:	test   esi,esi
   11fdb:	je     12048 <xc_compression_compress_pages+0x218>
   11fdd:	shl    r8d,0x2
   11fe1:	mov    BYTE PTR [rdi],cl
   11fe3:	movsxd rcx,ebp
   11fe6:	movsxd r8,r8d
   11fe9:	add    rcx,r13
   11fec:	cmp    r9d,0x8
   11ff0:	lea    r12,[r11+r8*1]
   11ff4:	jae    12098 <xc_compression_compress_pages+0x268>
   11ffa:	test   r9b,0x4
   11ffe:	jne    1211f <xc_compression_compress_pages+0x2ef>
   12004:	test   r9d,r9d
   12007:	je     12011 <xc_compression_compress_pages+0x1e1>
   12009:	movzx  esi,BYTE PTR [r12]
   1200e:	mov    BYTE PTR [rcx],sil
   12011:	add    r8,rbx
   12014:	cmp    r9d,0x8
   12018:	jae    12060 <xc_compression_compress_pages+0x230>
   1201a:	test   r9b,0x4
   1201e:	jne    12106 <xc_compression_compress_pages+0x2d6>
   12024:	test   r9d,r9d
   12027:	je     12031 <xc_compression_compress_pages+0x201>
   12029:	movzx  ecx,BYTE PTR [r12]
   1202e:	mov    BYTE PTR [r8],cl
   12031:	add    ebp,r9d
   12034:	mov    r8d,r10d
   12037:	mov    ecx,0x1
   1203c:	jmp    11f39 <xc_compression_compress_pages+0x109>
   12041:	nop    DWORD PTR [rax+0x0]
   12048:	or     ecx,0xffffff80
   1204b:	add    r14d,r9d
   1204e:	mov    r8d,r10d
   12051:	mov    BYTE PTR [rdi],cl
   12053:	mov    ecx,0x1
   12058:	jmp    11f39 <xc_compression_compress_pages+0x109>
   1205d:	nop    DWORD PTR [rax]
   12060:	mov    rcx,QWORD PTR [r12]
   12064:	lea    rdi,[r8+0x8]
   12068:	and    rdi,0xfffffffffffffff8
   1206c:	mov    QWORD PTR [r8],rcx
   1206f:	mov    ecx,r9d
   12072:	mov    rsi,QWORD PTR [r12+rcx*1-0x8]
   12077:	mov    QWORD PTR [r8+rcx*1-0x8],rsi
   1207c:	sub    r8,rdi
   1207f:	mov    rsi,r12
   12082:	sub    rsi,r8
   12085:	add    r8d,r9d
   12088:	shr    r8d,0x3
   1208c:	mov    ecx,r8d
   1208f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   12092:	jmp    12031 <xc_compression_compress_pages+0x201>
   12094:	nop    DWORD PTR [rax+0x0]
   12098:	mov    rsi,QWORD PTR [r12]
   1209c:	mov    QWORD PTR [rcx],rsi
   1209f:	mov    esi,r9d
   120a2:	mov    rdi,QWORD PTR [r12+rsi*1-0x8]
   120a7:	mov    QWORD PTR [rcx+rsi*1-0x8],rdi
   120ac:	lea    rdi,[rcx+0x8]
   120b0:	mov    rsi,r12
   120b3:	and    rdi,0xfffffffffffffff8
   120b7:	sub    rcx,rdi
   120ba:	sub    rsi,rcx
   120bd:	add    ecx,r9d
   120c0:	shr    ecx,0x3
   120c3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   120c6:	jmp    12011 <xc_compression_compress_pages+0x1e1>
   120cb:	nop    DWORD PTR [rax+rax*1+0x0]
   120d0:	mov    rdx,QWORD PTR [r15+0x10]
   120d4:	lea    rax,[rdx+0x1001]
   120db:	cmp    rax,QWORD PTR [r15+0x8]
   120df:	jbe    12136 <xc_compression_compress_pages+0x306>
   120e1:	mov    eax,0xffffffff
   120e6:	mov    rbx,QWORD PTR [rsp-0x8]
   120eb:	test   rbx,rbx
   120ee:	je     11fb6 <xc_compression_compress_pages+0x186>
   120f4:	mov    rdx,QWORD PTR [r15+0x10]
   120f8:	mov    QWORD PTR [rbx],rdx
   120fb:	pop    rbx
   120fc:	pop    rbp
   120fd:	pop    r12
   120ff:	pop    r13
   12101:	pop    r14
   12103:	pop    r15
   12105:	ret    
   12106:	mov    ecx,DWORD PTR [r12]
   1210a:	mov    DWORD PTR [r8],ecx
   1210d:	mov    ecx,r9d
   12110:	mov    esi,DWORD PTR [r12+rcx*1-0x4]
   12115:	mov    DWORD PTR [r8+rcx*1-0x4],esi
   1211a:	jmp    12031 <xc_compression_compress_pages+0x201>
   1211f:	mov    esi,DWORD PTR [r12]
   12123:	mov    DWORD PTR [rcx],esi
   12125:	mov    esi,r9d
   12128:	mov    edi,DWORD PTR [r12+rsi*1-0x4]
   1212d:	mov    DWORD PTR [rcx+rsi*1-0x4],edi
   12131:	jmp    12011 <xc_compression_compress_pages+0x1e1>
   12136:	add    rdx,QWORD PTR [r15]
   12139:	lea    r8,[r11+0x1008]
   12140:	mov    BYTE PTR [rdx],0x80
   12143:	lea    rdi,[rdx+0x9]
   12147:	mov    rcx,QWORD PTR [r11]
   1214a:	lea    rax,[rdx+0x1]
   1214e:	mov    rsi,r11
   12151:	and    rdi,0xfffffffffffffff8
   12155:	mov    QWORD PTR [rdx+0x1],rcx
   12159:	sub    rax,rdi
   1215c:	mov    rcx,QWORD PTR [r8-0x10]
   12160:	sub    rsi,rax
   12163:	add    eax,0x1000
   12168:	shr    eax,0x3
   1216b:	mov    QWORD PTR [rdx+0xff9],rcx
   12172:	mov    ecx,eax
   12174:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   12177:	add    QWORD PTR [r15+0x10],0x1001
   1217f:	jmp    11f8d <xc_compression_compress_pages+0x15d>
   12184:	mov    BYTE PTR [r13+0x0],0x0
   12189:	add    QWORD PTR [r15+0x10],0x1
   1218e:	jmp    11f8d <xc_compression_compress_pages+0x15d>
   12193:	mov    rax,QWORD PTR [r15+0x50]
   12197:	mov    rsi,QWORD PTR [rax+0x8]
   1219b:	cmp    rsi,0xffffffffffffffff
   1219f:	je     121a9 <xc_compression_compress_pages+0x379>
   121a1:	mov    QWORD PTR [rcx+rsi*8],0x0
   121a9:	mov    QWORD PTR [rax+0x8],rdx
   121ad:	mov    rcx,QWORD PTR [r15+0x38]
   121b1:	mov    QWORD PTR [rcx+rdx*8],rax
   121b5:	cmp    rax,QWORD PTR [r15+0x48]
   121b9:	jne    12231 <xc_compression_compress_pages+0x401>
   121bb:	mov    rbx,QWORD PTR [rax]
   121be:	mov    rax,QWORD PTR [r15+0x10]
   121c2:	mov    rdx,QWORD PTR [r15]
   121c5:	add    rdx,rax
   121c8:	add    rax,0x1001
   121ce:	cmp    rax,QWORD PTR [r15+0x8]
   121d2:	ja     120e1 <xc_compression_compress_pages+0x2b1>
   121d8:	test   rbx,rbx
   121db:	je     12139 <xc_compression_compress_pages+0x309>
   121e1:	mov    rax,QWORD PTR [r11]
   121e4:	lea    rdi,[rbx+0x8]
   121e8:	mov    rsi,r11
   121eb:	lea    r8,[r11+0x1008]
   121f2:	and    rdi,0xfffffffffffffff8
   121f6:	mov    QWORD PTR [rbx],rax
   121f9:	mov    rax,QWORD PTR [r11+0xff8]
   12200:	mov    QWORD PTR [rbx+0xff8],rax
   12207:	sub    rbx,rdi
   1220a:	sub    rsi,rbx
   1220d:	add    ebx,0x1000
   12213:	shr    ebx,0x3
   12216:	mov    ecx,ebx
   12218:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1221b:	jmp    12140 <xc_compression_compress_pages+0x310>
   12220:	mov    QWORD PTR [r15+0x50],rdx
   12224:	mov    QWORD PTR [rdx+0x10],0x0
   1222c:	jmp    11ecc <xc_compression_compress_pages+0x9c>
   12231:	mov    ecx,0x1
   12236:	jmp    11eaa <xc_compression_compress_pages+0x7a>
   1223b:	mov    edx,esi
   1223d:	xor    edx,0x1
   12240:	jmp    11f62 <xc_compression_compress_pages+0x132>
   12245:	mov    rbx,QWORD PTR [rax]
   12248:	jmp    11ef3 <xc_compression_compress_pages+0xc3>
   1224d:	nop    DWORD PTR [rax]

0000000000012250 <xc_compression_reset_pagebuf>:
   12250:	mov    QWORD PTR [rsi+0x28],0x0
   12258:	ret    
   12259:	nop    DWORD PTR [rax+0x0]

0000000000012260 <xc_compression_uncompress_page>:
   12260:	push   r15
   12262:	push   r14
   12264:	push   r13
   12266:	push   r12
   12268:	mov    r12,rdi
   1226b:	push   rbp
   1226c:	push   rbx
   1226d:	sub    rsp,0x18
   12271:	mov    rbp,QWORD PTR [rcx]
   12274:	cmp    rbp,rdx
   12277:	jae    124a1 <xc_compression_uncompress_page+0x241>
   1227d:	movzx  r15d,BYTE PTR [rsi+rbp*1]
   12282:	mov    rax,rsi
   12285:	mov    r10,rcx
   12288:	cmp    r15b,0x80
   1228c:	je     12390 <xc_compression_uncompress_page+0x130>
   12292:	test   r15b,r15b
   12295:	lea    r9,[rbp+0x1]
   12299:	je     12340 <xc_compression_uncompress_page+0xe0>
   1229f:	xor    ebx,ebx
   122a1:	jmp    12303 <xc_compression_uncompress_page+0xa3>
   122a3:	nop    DWORD PTR [rax+rax*1+0x0]
   122a8:	mov    ecx,r13d
   122ab:	lea    rbp,[rcx+r14*1]
   122af:	cmp    rbp,rdx
   122b2:	ja     123e0 <xc_compression_uncompress_page+0x180>
   122b8:	lea    r11d,[rbx+r13*1]
   122bc:	cmp    r11d,0x1000
   122c3:	ja     123e0 <xc_compression_uncompress_page+0x180>
   122c9:	add    rbx,r8
   122cc:	cmp    r13d,0x8
   122d0:	lea    rsi,[rax+r14*1]
   122d4:	jae    12358 <xc_compression_uncompress_page+0xf8>
   122da:	test   r13b,0x4
   122de:	jne    12490 <xc_compression_uncompress_page+0x230>
   122e4:	test   r13d,r13d
   122e7:	je     122ee <xc_compression_uncompress_page+0x8e>
   122e9:	movzx  ecx,BYTE PTR [rsi]
   122ec:	mov    BYTE PTR [rbx],cl
   122ee:	mov    ebx,r11d
   122f1:	cmp    ebx,0xfff
   122f7:	ja     12330 <xc_compression_uncompress_page+0xd0>
   122f9:	cmp    rbp,rdx
   122fc:	jae    12330 <xc_compression_uncompress_page+0xd0>
   122fe:	movzx  r15d,BYTE PTR [rax+rbp*1]
   12303:	mov    r13d,r15d
   12306:	and    r13d,0x7f
   1230a:	shl    r13d,0x2
   1230e:	test   r13d,r13d
   12311:	je     12438 <xc_compression_uncompress_page+0x1d8>
   12317:	test   r15b,r15b
   1231a:	lea    r14,[rbp+0x1]
   1231e:	jns    122a8 <xc_compression_uncompress_page+0x48>
   12320:	add    ebx,r13d
   12323:	mov    rbp,r14
   12326:	jmp    122f1 <xc_compression_uncompress_page+0x91>
   12328:	nop    DWORD PTR [rax+rax*1+0x0]
   12330:	cmp    ebx,0x1000
   12336:	jne    12503 <xc_compression_uncompress_page+0x2a3>
   1233c:	mov    r9,rbp
   1233f:	nop
   12340:	mov    QWORD PTR [r10],r9
   12343:	xor    eax,eax
   12345:	add    rsp,0x18
   12349:	pop    rbx
   1234a:	pop    rbp
   1234b:	pop    r12
   1234d:	pop    r13
   1234f:	pop    r14
   12351:	pop    r15
   12353:	ret    
   12354:	nop    DWORD PTR [rax+0x0]
   12358:	mov    rdi,QWORD PTR [rsi]
   1235b:	mov    QWORD PTR [rbx],rdi
   1235e:	mov    rdi,QWORD PTR [rsi+rcx*1-0x8]
   12363:	mov    QWORD PTR [rbx+rcx*1-0x8],rdi
   12368:	lea    rdi,[rbx+0x8]
   1236c:	and    rdi,0xfffffffffffffff8
   12370:	sub    rbx,rdi
   12373:	sub    rsi,rbx
   12376:	add    ebx,r13d
   12379:	shr    ebx,0x3
   1237c:	mov    ecx,ebx
   1237e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   12381:	jmp    122ee <xc_compression_uncompress_page+0x8e>
   12386:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12390:	lea    r9,[rbp+0x1001]
   12397:	cmp    r9,rdx
   1239a:	ja     124df <xc_compression_uncompress_page+0x27f>
   123a0:	lea    rsi,[rsi+rbp*1+0x1]
   123a5:	lea    rdi,[r8+0x8]
   123a9:	mov    rax,QWORD PTR [rsi]
   123ac:	and    rdi,0xfffffffffffffff8
   123b0:	mov    QWORD PTR [r8],rax
   123b3:	mov    rax,QWORD PTR [rsi+0xff8]
   123ba:	mov    QWORD PTR [r8+0xff8],rax
   123c1:	sub    r8,rdi
   123c4:	sub    rsi,r8
   123c7:	add    r8d,0x1000
   123ce:	shr    r8d,0x3
   123d2:	mov    ecx,r8d
   123d5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   123d8:	jmp    12340 <xc_compression_uncompress_page+0xe0>
   123dd:	nop    DWORD PTR [rax]
   123e0:	mov    QWORD PTR [rsp+0x8],rdx
   123e5:	call   5940 <__errno_location@plt>
   123ea:	sub    rsp,0x8
   123ee:	mov    r15d,DWORD PTR [rax]
   123f1:	mov    rbp,rax
   123f4:	push   rbx
   123f5:	mov    rdx,QWORD PTR [rsp+0x18]
   123fa:	mov    r8d,r13d
   123fd:	mov    rcx,r14
   12400:	mov    rdi,r12
   12403:	xor    eax,eax
   12405:	mov    esi,0x1
   1240a:	mov    r9,rdx
   1240d:	lea    rdx,[rip+0x11f94]        # 243a8 <__FUNCTION__.13043+0x168>
   12414:	call   5d50 <xc_report_error@plt>
   12419:	mov    DWORD PTR [rbp+0x0],r15d
   1241d:	pop    rax
   1241e:	pop    rdx
   1241f:	mov    eax,0xffffffff
   12424:	add    rsp,0x18
   12428:	pop    rbx
   12429:	pop    rbp
   1242a:	pop    r12
   1242c:	pop    r13
   1242e:	pop    r14
   12430:	pop    r15
   12432:	ret    
   12433:	nop    DWORD PTR [rax+rax*1+0x0]
   12438:	mov    QWORD PTR [rsp+0x8],rdx
   1243d:	and    r15d,0xffffff80
   12441:	call   5940 <__errno_location@plt>
   12446:	sub    rsp,0x8
   1244a:	mov    r14d,DWORD PTR [rax]
   1244d:	mov    r13,rax
   12450:	push   rbx
   12451:	mov    rdx,QWORD PTR [rsp+0x18]
   12456:	mov    rcx,rbp
   12459:	movsx  r8d,r15b
   1245d:	mov    esi,0x1
   12462:	mov    rdi,r12
   12465:	xor    eax,eax
   12467:	mov    r9,rdx
   1246a:	lea    rdx,[rip+0x11ec7]        # 24338 <__FUNCTION__.13043+0xf8>
   12471:	call   5d50 <xc_report_error@plt>
   12476:	mov    DWORD PTR [r13+0x0],r14d
   1247a:	mov    eax,0xffffffff
   1247f:	pop    rcx
   12480:	pop    rsi
   12481:	add    rsp,0x18
   12485:	pop    rbx
   12486:	pop    rbp
   12487:	pop    r12
   12489:	pop    r13
   1248b:	pop    r14
   1248d:	pop    r15
   1248f:	ret    
   12490:	mov    edi,DWORD PTR [rsi]
   12492:	mov    DWORD PTR [rbx],edi
   12494:	mov    esi,DWORD PTR [rsi+rcx*1-0x4]
   12498:	mov    DWORD PTR [rbx+rcx*1-0x4],esi
   1249c:	jmp    122ee <xc_compression_uncompress_page+0x8e>
   124a1:	mov    QWORD PTR [rsp+0x8],rdx
   124a6:	call   5940 <__errno_location@plt>
   124ab:	mov    rdx,QWORD PTR [rsp+0x8]
   124b0:	mov    r13d,DWORD PTR [rax]
   124b3:	mov    rbx,rax
   124b6:	mov    rcx,rbp
   124b9:	mov    r8,rdx
   124bc:	lea    rdx,[rip+0x11dcd]        # 24290 <__FUNCTION__.13043+0x50>
   124c3:	xor    eax,eax
   124c5:	mov    esi,0x1
   124ca:	mov    rdi,r12
   124cd:	call   5d50 <xc_report_error@plt>
   124d2:	mov    DWORD PTR [rbx],r13d
   124d5:	mov    eax,0xffffffff
   124da:	jmp    12345 <xc_compression_uncompress_page+0xe5>
   124df:	mov    QWORD PTR [rsp+0x8],rdx
   124e4:	call   5940 <__errno_location@plt>
   124e9:	mov    rdx,QWORD PTR [rsp+0x8]
   124ee:	mov    rbx,rax
   124f1:	mov    r13d,DWORD PTR [rax]
   124f4:	mov    rcx,rbp
   124f7:	mov    r8,rdx
   124fa:	lea    rdx,[rip+0x11ddf]        # 242e0 <__FUNCTION__.13043+0xa0>
   12501:	jmp    124c3 <xc_compression_uncompress_page+0x263>
   12503:	mov    QWORD PTR [rsp+0x8],rdx
   12508:	call   5940 <__errno_location@plt>
   1250d:	mov    rdx,QWORD PTR [rsp+0x8]
   12512:	mov    r14d,DWORD PTR [rax]
   12515:	mov    r13,rax
   12518:	mov    r9d,ebx
   1251b:	xor    eax,eax
   1251d:	mov    rcx,rbp
   12520:	mov    esi,0x1
   12525:	mov    rdi,r12
   12528:	mov    r8,rdx
   1252b:	lea    rdx,[rip+0x11ee6]        # 24418 <__FUNCTION__.13043+0x1d8>
   12532:	call   5d50 <xc_report_error@plt>
   12537:	mov    DWORD PTR [r13+0x0],r14d
   1253b:	mov    eax,0xffffffff
   12540:	jmp    12345 <xc_compression_uncompress_page+0xe5>
   12545:	nop
   12546:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012550 <xc_compression_free_context>:
   12550:	test   rsi,rsi
   12553:	je     12590 <xc_compression_free_context+0x40>
   12555:	mov    rdi,QWORD PTR [rsi+0x18]
   12559:	push   rbx
   1255a:	mov    rbx,rsi
   1255d:	call   5900 <free@plt>
   12562:	mov    rdi,QWORD PTR [rbx+0x20]
   12566:	call   5900 <free@plt>
   1256b:	mov    rdi,QWORD PTR [rbx+0x30]
   1256f:	call   5900 <free@plt>
   12574:	mov    rdi,QWORD PTR [rbx+0x38]
   12578:	call   5900 <free@plt>
   1257d:	mov    rdi,QWORD PTR [rbx+0x40]
   12581:	call   5900 <free@plt>
   12586:	mov    rdi,rbx
   12589:	pop    rbx
   1258a:	jmp    5900 <free@plt>
   1258f:	nop
   12590:	repz ret 
   12592:	nop    DWORD PTR [rax+0x0]
   12596:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000125a0 <xc_compression_create_context>:
   125a0:	push   r13
   125a2:	push   r12
   125a4:	mov    r12,rdi
   125a7:	push   rbp
   125a8:	push   rbx
   125a9:	mov    rbp,rsi
   125ac:	mov    edi,0x60
   125b1:	mov    esi,0x1
   125b6:	sub    rsp,0x8
   125ba:	call   5de0 <calloc@plt>
   125bf:	test   rax,rax
   125c2:	mov    rbx,rax
   125c5:	je     12719 <xc_compression_create_context+0x179>
   125cb:	mov    edx,0x2000000
   125d0:	mov    esi,0x1000
   125d5:	mov    rdi,r12
   125d8:	call   60c0 <xc_memalign@plt>
   125dd:	test   rax,rax
   125e0:	mov    QWORD PTR [rbx+0x18],rax
   125e4:	je     12781 <xc_compression_create_context+0x1e1>
   125ea:	mov    edx,0x2000000
   125ef:	mov    esi,0x1000
   125f4:	mov    rdi,r12
   125f7:	call   60c0 <xc_memalign@plt>
   125fc:	test   rax,rax
   125ff:	mov    QWORD PTR [rbx+0x30],rax
   12603:	je     1276d <xc_compression_create_context+0x1cd>
   12609:	mov    edi,0x10000
   1260e:	call   5ff0 <malloc@plt>
   12613:	test   rax,rax
   12616:	mov    QWORD PTR [rbx+0x20],rax
   1261a:	je     12759 <xc_compression_create_context+0x1b9>
   12620:	mov    edx,0x10000
   12625:	mov    esi,0xffffffff
   1262a:	mov    rdi,rax
   1262d:	call   5ca0 <memset@plt>
   12632:	mov    esi,0x8
   12637:	mov    rdi,rbp
   1263a:	call   5de0 <calloc@plt>
   1263f:	test   rax,rax
   12642:	mov    QWORD PTR [rbx+0x38],rax
   12646:	je     12795 <xc_compression_create_context+0x1f5>
   1264c:	mov    edi,0x40000
   12651:	call   5ff0 <malloc@plt>
   12656:	xor    edx,edx
   12658:	xor    ecx,ecx
   1265a:	test   rax,rax
   1265d:	mov    QWORD PTR [rbx+0x40],rax
   12661:	mov    r8,0xffffffffffffffff
   12668:	jne    1269f <xc_compression_create_context+0xff>
   1266a:	jmp    127a9 <xc_compression_create_context+0x209>
   1266f:	nop
   12670:	lea    rsi,[rax+rdx*1-0x20]
   12675:	cmp    rcx,0x1fff
   1267c:	mov    QWORD PTR [rax+rdx*1+0x18],rsi
   12681:	je     126e8 <xc_compression_create_context+0x148>
   12683:	mov    rsi,QWORD PTR [rbx+0x40]
   12687:	lea    rax,[rdx+0x20]
   1268b:	add    rcx,0x1
   1268f:	lea    rdi,[rsi+rax*1]
   12693:	mov    QWORD PTR [rsi+rdx*1+0x10],rdi
   12698:	mov    rdx,rax
   1269b:	mov    rax,QWORD PTR [rbx+0x40]
   1269f:	mov    QWORD PTR [rax+rdx*1+0x8],r8
   126a4:	mov    rax,rcx
   126a7:	mov    rsi,QWORD PTR [rbx+0x40]
   126ab:	shl    rax,0xc
   126af:	add    rax,QWORD PTR [rbx+0x30]
   126b3:	test   rcx,rcx
   126b6:	mov    QWORD PTR [rsi+rdx*1],rax
   126ba:	mov    rax,QWORD PTR [rbx+0x40]
   126be:	jne    12670 <xc_compression_create_context+0xd0>
   126c0:	mov    QWORD PTR [rax+rdx*1+0x18],0x0
   126c9:	mov    rcx,QWORD PTR [rbx+0x40]
   126cd:	lea    rax,[rdx+0x20]
   126d1:	lea    rsi,[rcx+rax*1]
   126d5:	mov    QWORD PTR [rcx+rdx*1+0x10],rsi
   126da:	mov    rdx,rax
   126dd:	mov    ecx,0x1
   126e2:	jmp    1269b <xc_compression_create_context+0xfb>
   126e4:	nop    DWORD PTR [rax+0x0]
   126e8:	mov    rax,QWORD PTR [rbx+0x40]
   126ec:	mov    QWORD PTR [rax+rdx*1+0x10],0x0
   126f5:	mov    rax,QWORD PTR [rbx+0x40]
   126f9:	mov    QWORD PTR [rbx+0x58],rbp
   126fd:	mov    QWORD PTR [rbx+0x48],rax
   12701:	add    rax,0x3ffe0
   12707:	mov    QWORD PTR [rbx+0x50],rax
   1270b:	add    rsp,0x8
   1270f:	mov    rax,rbx
   12712:	pop    rbx
   12713:	pop    rbp
   12714:	pop    r12
   12716:	pop    r13
   12718:	ret    
   12719:	call   5940 <__errno_location@plt>
   1271e:	mov    r13d,DWORD PTR [rax]
   12721:	lea    rdx,[rip+0x11d40]        # 24468 <__FUNCTION__.13043+0x228>
   12728:	mov    rbp,rax
   1272b:	mov    rdi,r12
   1272e:	xor    eax,eax
   12730:	mov    esi,0x1
   12735:	call   5d50 <xc_report_error@plt>
   1273a:	mov    DWORD PTR [rbp+0x0],r13d
   1273e:	mov    rsi,rbx
   12741:	mov    rdi,r12
   12744:	call   6510 <xc_compression_free_context@plt>
   12749:	xor    ebx,ebx
   1274b:	add    rsp,0x8
   1274f:	mov    rax,rbx
   12752:	pop    rbx
   12753:	pop    rbp
   12754:	pop    r12
   12756:	pop    r13
   12758:	ret    
   12759:	call   5940 <__errno_location@plt>
   1275e:	lea    rdx,[rip+0x11dae]        # 24513 <__FUNCTION__.13043+0x2d3>
   12765:	mov    rbp,rax
   12768:	mov    r13d,DWORD PTR [rax]
   1276b:	jmp    1272b <xc_compression_create_context+0x18b>
   1276d:	call   5940 <__errno_location@plt>
   12772:	lea    rdx,[rip+0x11d37]        # 244b0 <__FUNCTION__.13043+0x270>
   12779:	mov    rbp,rax
   1277c:	mov    r13d,DWORD PTR [rax]
   1277f:	jmp    1272b <xc_compression_create_context+0x18b>
   12781:	call   5940 <__errno_location@plt>
   12786:	lea    rdx,[rip+0x11d03]        # 24490 <__FUNCTION__.13043+0x250>
   1278d:	mov    rbp,rax
   12790:	mov    r13d,DWORD PTR [rax]
   12793:	jmp    1272b <xc_compression_create_context+0x18b>
   12795:	call   5940 <__errno_location@plt>
   1279a:	lea    rdx,[rip+0x11d2f]        # 244d0 <__FUNCTION__.13043+0x290>
   127a1:	mov    rbp,rax
   127a4:	mov    r13d,DWORD PTR [rax]
   127a7:	jmp    1272b <xc_compression_create_context+0x18b>
   127a9:	call   5940 <__errno_location@plt>
   127ae:	lea    rdx,[rip+0x11d3b]        # 244f0 <__FUNCTION__.13043+0x2b0>
   127b5:	mov    rbp,rax
   127b8:	mov    r13d,DWORD PTR [rax]
   127bb:	jmp    1272b <xc_compression_create_context+0x18b>

00000000000127c0 <elf_mark_broken>:
   127c0:	cmp    QWORD PTR [rdi+0x98],0x0
   127c8:	je     127d0 <elf_mark_broken+0x10>
   127ca:	repz ret 
   127cc:	nop    DWORD PTR [rax+0x0]
   127d0:	mov    QWORD PTR [rdi+0x98],rsi
   127d7:	ret    
   127d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127e0 <elf_check_broken>:
   127e0:	mov    rax,QWORD PTR [rdi+0x98]
   127e7:	ret    
   127e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127f0 <elf_access_ok>:
   127f0:	mov    rax,QWORD PTR [rdi]
   127f3:	mov    rcx,QWORD PTR [rdi+0x8]
   127f7:	cmp    rax,rsi
   127fa:	ja     1280a <elf_access_ok+0x1a>
   127fc:	test   rax,rax
   127ff:	je     1280a <elf_access_ok+0x1a>
   12801:	lea    r8,[rcx+rax*1]
   12805:	cmp    rsi,r8
   12808:	jbe    12888 <elf_access_ok+0x98>
   1280a:	mov    rax,QWORD PTR [rdi+0x38]
   1280e:	mov    rcx,QWORD PTR [rdi+0x40]
   12812:	test   rax,rax
   12815:	je     12838 <elf_access_ok+0x48>
   12817:	cmp    rax,rsi
   1281a:	ja     12838 <elf_access_ok+0x48>
   1281c:	lea    r8,[rcx+rax*1]
   12820:	cmp    rsi,r8
   12823:	ja     12838 <elf_access_ok+0x48>
   12825:	sub    rcx,rsi
   12828:	add    rcx,rax
   1282b:	mov    eax,0x1
   12830:	cmp    rdx,rcx
   12833:	jbe    12880 <elf_access_ok+0x90>
   12835:	nop    DWORD PTR [rax]
   12838:	mov    rax,QWORD PTR [rdi+0x70]
   1283c:	mov    rcx,QWORD PTR [rdi+0x78]
   12840:	test   rax,rax
   12843:	je     12853 <elf_access_ok+0x63>
   12845:	cmp    rax,rsi
   12848:	ja     12853 <elf_access_ok+0x63>
   1284a:	lea    r8,[rcx+rax*1]
   1284e:	cmp    rsi,r8
   12851:	jbe    12870 <elf_access_ok+0x80>
   12853:	lea    rsi,[rip+0x11cd7]        # 24531 <__FUNCTION__.13043+0x2f1>
   1285a:	sub    rsp,0x8
   1285e:	call   5a70 <elf_mark_broken@plt>
   12863:	xor    eax,eax
   12865:	add    rsp,0x8
   12869:	ret    
   1286a:	nop    WORD PTR [rax+rax*1+0x0]
   12870:	sub    rcx,rsi
   12873:	add    rcx,rax
   12876:	mov    eax,0x1
   1287b:	cmp    rdx,rcx
   1287e:	ja     12853 <elf_access_ok+0x63>
   12880:	repz ret 
   12882:	nop    WORD PTR [rax+rax*1+0x0]
   12888:	sub    rcx,rsi
   1288b:	add    rcx,rax
   1288e:	mov    eax,0x1
   12893:	cmp    rdx,rcx
   12896:	ja     1280a <elf_access_ok+0x1a>
   1289c:	repz ret 
   1289e:	xchg   ax,ax

00000000000128a0 <elf_memcpy_safe>:
   128a0:	push   r13
   128a2:	push   r12
   128a4:	mov    r13,rdx
   128a7:	push   rbp
   128a8:	push   rbx
   128a9:	mov    rdx,rcx
   128ac:	mov    rbp,rdi
   128af:	mov    r12,rsi
   128b2:	mov    rbx,rcx
   128b5:	sub    rsp,0x8
   128b9:	call   6440 <elf_access_ok@plt>
   128be:	test   al,al
   128c0:	jne    128d0 <elf_memcpy_safe+0x30>
   128c2:	add    rsp,0x8
   128c6:	pop    rbx
   128c7:	pop    rbp
   128c8:	pop    r12
   128ca:	pop    r13
   128cc:	ret    
   128cd:	nop    DWORD PTR [rax]
   128d0:	mov    rdx,rbx
   128d3:	mov    rsi,r13
   128d6:	mov    rdi,rbp
   128d9:	call   6440 <elf_access_ok@plt>
   128de:	test   al,al
   128e0:	je     128c2 <elf_memcpy_safe+0x22>
   128e2:	add    rsp,0x8
   128e6:	mov    rdx,rbx
   128e9:	mov    rsi,r13
   128ec:	pop    rbx
   128ed:	mov    rdi,r12
   128f0:	pop    rbp
   128f1:	pop    r12
   128f3:	pop    r13
   128f5:	jmp    6230 <memmove@plt>
   128fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012900 <elf_memset_safe>:
   12900:	push   r12
   12902:	push   rbp
   12903:	mov    r12d,edx
   12906:	push   rbx
   12907:	mov    rdx,rcx
   1290a:	mov    rbx,rsi
   1290d:	mov    rbp,rcx
   12910:	call   6440 <elf_access_ok@plt>
   12915:	test   al,al
   12917:	jne    12920 <elf_memset_safe+0x20>
   12919:	pop    rbx
   1291a:	pop    rbp
   1291b:	pop    r12
   1291d:	ret    
   1291e:	xchg   ax,ax
   12920:	mov    rdx,rbp
   12923:	mov    esi,r12d
   12926:	mov    rdi,rbx
   12929:	pop    rbx
   1292a:	pop    rbp
   1292b:	pop    r12
   1292d:	jmp    5ca0 <memset@plt>
   12932:	nop    DWORD PTR [rax+0x0]
   12936:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012940 <elf_access_unsigned>:
   12940:	push   r12
   12942:	push   rbp
   12943:	mov    rbp,rcx
   12946:	push   rbx
   12947:	lea    rbx,[rsi+rdx*1]
   1294b:	mov    rdx,rcx
   1294e:	movzx  r12d,BYTE PTR [rdi+0x11]
   12953:	mov    rsi,rbx
   12956:	call   6440 <elf_access_ok@plt>
   1295b:	xor    edx,edx
   1295d:	test   al,al
   1295f:	je     12986 <elf_access_unsigned+0x46>
   12961:	cmp    rbp,0x2
   12965:	je     129a8 <elf_access_unsigned+0x68>
   12967:	jbe    129c0 <elf_access_unsigned+0x80>
   12969:	cmp    rbp,0x4
   1296d:	je     12990 <elf_access_unsigned+0x50>
   1296f:	cmp    rbp,0x8
   12973:	jne    129d8 <elf_access_unsigned+0x98>
   12975:	mov    rdx,QWORD PTR [rbx]
   12978:	cmp    r12b,0x1
   1297c:	mov    rax,rdx
   1297f:	bswap  rax
   12982:	cmovne rdx,rax
   12986:	pop    rbx
   12987:	mov    rax,rdx
   1298a:	pop    rbp
   1298b:	pop    r12
   1298d:	ret    
   1298e:	xchg   ax,ax
   12990:	mov    edx,DWORD PTR [rbx]
   12992:	cmp    r12b,0x1
   12996:	pop    rbx
   12997:	pop    rbp
   12998:	mov    eax,edx
   1299a:	bswap  eax
   1299c:	cmovne edx,eax
   1299f:	mov    rax,rdx
   129a2:	pop    r12
   129a4:	ret    
   129a5:	nop    DWORD PTR [rax]
   129a8:	cmp    r12b,0x1
   129ac:	movzx  edx,WORD PTR [rbx]
   129af:	je     12986 <elf_access_unsigned+0x46>
   129b1:	ror    dx,0x8
   129b5:	movzx  edx,dx
   129b8:	jmp    12986 <elf_access_unsigned+0x46>
   129ba:	nop    WORD PTR [rax+rax*1+0x0]
   129c0:	cmp    rbp,0x1
   129c4:	jne    129d8 <elf_access_unsigned+0x98>
   129c6:	movzx  edx,BYTE PTR [rbx]
   129c9:	pop    rbx
   129ca:	pop    rbp
   129cb:	pop    r12
   129cd:	mov    rax,rdx
   129d0:	ret    
   129d1:	nop    DWORD PTR [rax+0x0]
   129d8:	xor    edx,edx
   129da:	pop    rbx
   129db:	mov    rax,rdx
   129de:	pop    rbp
   129df:	pop    r12
   129e1:	ret    
   129e2:	nop    DWORD PTR [rax+0x0]
   129e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000129f0 <elf_round_up>:
   129f0:	xor    edx,edx
   129f2:	cmp    BYTE PTR [rdi+0x10],0x2
   129f6:	sete   al
   129f9:	setne  dl
   129fc:	movzx  eax,al
   129ff:	lea    rdx,[rdx*4-0x8]
   12a07:	lea    rax,[rsi+rax*4+0x3]
   12a0c:	and    rax,rdx
   12a0f:	ret    

0000000000012a10 <elf_shdr_count>:
   12a10:	push   rbp
   12a11:	push   rbx
   12a12:	mov    rbp,rdi
   12a15:	mov    ecx,0x2
   12a1a:	sub    rsp,0x8
   12a1e:	cmp    BYTE PTR [rdi+0x10],0x2
   12a22:	mov    rsi,QWORD PTR [rdi+0x18]
   12a26:	je     12a80 <elf_shdr_count+0x70>
   12a28:	mov    edx,0x30
   12a2d:	call   6140 <elf_access_unsigned@plt>
   12a32:	mov    ecx,eax
   12a34:	movabs rdx,0xcccccccccccccccd
   12a3e:	mov    rax,rdx
   12a41:	mul    QWORD PTR [rbp+0x8]
   12a45:	mov    eax,0xffffffff
   12a4a:	mov    rbx,rdx
   12a4d:	shr    rbx,0x5
   12a51:	cmp    rbx,rax
   12a54:	ja     12a6e <elf_shdr_count+0x5e>
   12a56:	mov    eax,ecx
   12a58:	cmp    rax,rbx
   12a5b:	jbe    12a6e <elf_shdr_count+0x5e>
   12a5d:	lea    rsi,[rip+0x11ae1]        # 24545 <__FUNCTION__.13043+0x305>
   12a64:	mov    rdi,rbp
   12a67:	call   5a70 <elf_mark_broken@plt>
   12a6c:	mov    ecx,ebx
   12a6e:	add    rsp,0x8
   12a72:	mov    eax,ecx
   12a74:	pop    rbx
   12a75:	pop    rbp
   12a76:	ret    
   12a77:	nop    WORD PTR [rax+rax*1+0x0]
   12a80:	mov    edx,0x3c
   12a85:	call   6140 <elf_access_unsigned@plt>
   12a8a:	mov    ecx,eax
   12a8c:	jmp    12a34 <elf_shdr_count+0x24>
   12a8e:	xchg   ax,ax

0000000000012a90 <elf_phdr_count>:
   12a90:	sub    rsp,0x8
   12a94:	cmp    BYTE PTR [rdi+0x10],0x2
   12a98:	mov    rsi,QWORD PTR [rdi+0x18]
   12a9c:	mov    ecx,0x2
   12aa1:	je     12ab8 <elf_phdr_count+0x28>
   12aa3:	mov    edx,0x2c
   12aa8:	call   6140 <elf_access_unsigned@plt>
   12aad:	add    rsp,0x8
   12ab1:	ret    
   12ab2:	nop    WORD PTR [rax+rax*1+0x0]
   12ab8:	mov    edx,0x38
   12abd:	call   6140 <elf_access_unsigned@plt>
   12ac2:	add    rsp,0x8
   12ac6:	ret    
   12ac7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012ad0 <elf_shdr_by_index>:
   12ad0:	push   r12
   12ad2:	push   rbp
   12ad3:	mov    rbp,rdi
   12ad6:	push   rbx
   12ad7:	mov    ebx,esi
   12ad9:	call   5a90 <elf_shdr_count@plt>
   12ade:	cmp    eax,ebx
   12ae0:	jbe    12b30 <elf_shdr_by_index+0x60>
   12ae2:	cmp    BYTE PTR [rbp+0x10],0x2
   12ae6:	mov    r12,QWORD PTR [rbp+0x0]
   12aea:	mov    rsi,QWORD PTR [rbp+0x18]
   12aee:	je     12b40 <elf_shdr_by_index+0x70>
   12af0:	mov    ecx,0x4
   12af5:	mov    edx,0x20
   12afa:	mov    rdi,rbp
   12afd:	call   6140 <elf_access_unsigned@plt>
   12b02:	add    r12,rax
   12b05:	cmp    BYTE PTR [rbp+0x10],0x2
   12b09:	mov    rsi,QWORD PTR [rbp+0x18]
   12b0d:	mov    ecx,0x2
   12b12:	je     12b58 <elf_shdr_by_index+0x88>
   12b14:	mov    edx,0x2e
   12b19:	mov    rdi,rbp
   12b1c:	call   6140 <elf_access_unsigned@plt>
   12b21:	imul   rax,rbx
   12b25:	pop    rbx
   12b26:	pop    rbp
   12b27:	add    rax,r12
   12b2a:	pop    r12
   12b2c:	ret    
   12b2d:	nop    DWORD PTR [rax]
   12b30:	pop    rbx
   12b31:	xor    eax,eax
   12b33:	pop    rbp
   12b34:	pop    r12
   12b36:	ret    
   12b37:	nop    WORD PTR [rax+rax*1+0x0]
   12b40:	mov    ecx,0x8
   12b45:	mov    edx,0x28
   12b4a:	mov    rdi,rbp
   12b4d:	call   6140 <elf_access_unsigned@plt>
   12b52:	jmp    12b02 <elf_shdr_by_index+0x32>
   12b54:	nop    DWORD PTR [rax+0x0]
   12b58:	mov    edx,0x3a
   12b5d:	mov    rdi,rbp
   12b60:	call   6140 <elf_access_unsigned@plt>
   12b65:	jmp    12b21 <elf_shdr_by_index+0x51>
   12b67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012b70 <elf_phdr_by_index>:
   12b70:	push   r12
   12b72:	push   rbp
   12b73:	mov    rbp,rdi
   12b76:	push   rbx
   12b77:	mov    ebx,esi
   12b79:	call   6280 <elf_phdr_count@plt>
   12b7e:	cmp    eax,ebx
   12b80:	jbe    12bd0 <elf_phdr_by_index+0x60>
   12b82:	cmp    BYTE PTR [rbp+0x10],0x2
   12b86:	mov    r12,QWORD PTR [rbp+0x0]
   12b8a:	mov    rsi,QWORD PTR [rbp+0x18]
   12b8e:	je     12be0 <elf_phdr_by_index+0x70>
   12b90:	mov    ecx,0x4
   12b95:	mov    edx,0x1c
   12b9a:	mov    rdi,rbp
   12b9d:	call   6140 <elf_access_unsigned@plt>
   12ba2:	add    r12,rax
   12ba5:	cmp    BYTE PTR [rbp+0x10],0x2
   12ba9:	mov    rsi,QWORD PTR [rbp+0x18]
   12bad:	mov    ecx,0x2
   12bb2:	je     12bf8 <elf_phdr_by_index+0x88>
   12bb4:	mov    edx,0x2a
   12bb9:	mov    rdi,rbp
   12bbc:	call   6140 <elf_access_unsigned@plt>
   12bc1:	imul   rax,rbx
   12bc5:	pop    rbx
   12bc6:	pop    rbp
   12bc7:	add    rax,r12
   12bca:	pop    r12
   12bcc:	ret    
   12bcd:	nop    DWORD PTR [rax]
   12bd0:	pop    rbx
   12bd1:	xor    eax,eax
   12bd3:	pop    rbp
   12bd4:	pop    r12
   12bd6:	ret    
   12bd7:	nop    WORD PTR [rax+rax*1+0x0]
   12be0:	mov    ecx,0x8
   12be5:	mov    edx,0x20
   12bea:	mov    rdi,rbp
   12bed:	call   6140 <elf_access_unsigned@plt>
   12bf2:	jmp    12ba2 <elf_phdr_by_index+0x32>
   12bf4:	nop    DWORD PTR [rax+0x0]
   12bf8:	mov    edx,0x36
   12bfd:	mov    rdi,rbp
   12c00:	call   6140 <elf_access_unsigned@plt>
   12c05:	jmp    12bc1 <elf_phdr_by_index+0x51>
   12c07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012c10 <elf_strval>:
   12c10:	push   r12
   12c12:	mov    r12,rdi
   12c15:	push   rbp
   12c16:	mov    rbp,rsi
   12c19:	push   rbx
   12c1a:	xor    ebx,ebx
   12c1c:	jmp    12c45 <elf_strval+0x35>
   12c1e:	xchg   ax,ax
   12c20:	mov    ecx,0x1
   12c25:	mov    rdx,rbx
   12c28:	mov    rsi,rbp
   12c2b:	mov    rdi,r12
   12c2e:	call   6140 <elf_access_unsigned@plt>
   12c33:	test   rax,rax
   12c36:	je     12c68 <elf_strval+0x58>
   12c38:	cmp    rbx,0x1000
   12c3f:	je     12c70 <elf_strval+0x60>
   12c41:	add    rbx,0x1
   12c45:	lea    rsi,[rbx+rbp*1]
   12c49:	mov    edx,0x1
   12c4e:	mov    rdi,r12
   12c51:	call   6440 <elf_access_ok@plt>
   12c56:	test   al,al
   12c58:	jne    12c20 <elf_strval+0x10>
   12c5a:	xor    eax,eax
   12c5c:	pop    rbx
   12c5d:	pop    rbp
   12c5e:	pop    r12
   12c60:	ret    
   12c61:	nop    DWORD PTR [rax+0x0]
   12c68:	mov    rax,rbp
   12c6b:	pop    rbx
   12c6c:	pop    rbp
   12c6d:	pop    r12
   12c6f:	ret    
   12c70:	lea    rsi,[rip+0x118eb]        # 24562 <__FUNCTION__.13043+0x322>
   12c77:	mov    rdi,r12
   12c7a:	call   5a70 <elf_mark_broken@plt>
   12c7f:	xor    eax,eax
   12c81:	jmp    12c5c <elf_strval+0x4c>
   12c83:	nop    DWORD PTR [rax]
   12c86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012c90 <elf_section_name>:
   12c90:	push   rbp
   12c91:	push   rbx
   12c92:	sub    rsp,0x8
   12c96:	mov    rbp,QWORD PTR [rdi+0x20]
   12c9a:	test   rbp,rbp
   12c9d:	je     12cc8 <elf_section_name+0x38>
   12c9f:	mov    ecx,0x4
   12ca4:	xor    edx,edx
   12ca6:	mov    rbx,rdi
   12ca9:	call   6140 <elf_access_unsigned@plt>
   12cae:	add    rsp,0x8
   12cb2:	lea    rsi,[rbp+rax*1+0x0]
   12cb7:	mov    rdi,rbx
   12cba:	pop    rbx
   12cbb:	pop    rbp
   12cbc:	jmp    5f10 <elf_strval@plt>
   12cc1:	nop    DWORD PTR [rax+0x0]
   12cc8:	add    rsp,0x8
   12ccc:	lea    rax,[rip+0x118a7]        # 2457a <__FUNCTION__.13043+0x33a>
   12cd3:	pop    rbx
   12cd4:	pop    rbp
   12cd5:	ret    
   12cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012ce0 <elf_shdr_by_name>:
   12ce0:	push   r14
   12ce2:	push   r13
   12ce4:	mov    r14,rsi
   12ce7:	push   r12
   12ce9:	push   rbp
   12cea:	mov    r12,rdi
   12ced:	push   rbx
   12cee:	call   5a90 <elf_shdr_count@plt>
   12cf3:	cmp    eax,0x1
   12cf6:	jbe    12d50 <elf_shdr_by_name+0x70>
   12cf8:	mov    r13d,eax
   12cfb:	mov    ebx,0x1
   12d00:	jmp    12d2f <elf_shdr_by_name+0x4f>
   12d02:	nop    WORD PTR [rax+rax*1+0x0]
   12d08:	mov    rsi,rbp
   12d0b:	mov    rdi,r12
   12d0e:	call   64f0 <elf_section_name@plt>
   12d13:	test   rax,rax
   12d16:	je     12d27 <elf_shdr_by_name+0x47>
   12d18:	mov    rsi,r14
   12d1b:	mov    rdi,rax
   12d1e:	call   5e10 <strcmp@plt>
   12d23:	test   eax,eax
   12d25:	je     12d60 <elf_shdr_by_name+0x80>
   12d27:	add    ebx,0x1
   12d2a:	cmp    r13d,ebx
   12d2d:	je     12d50 <elf_shdr_by_name+0x70>
   12d2f:	mov    esi,ebx
   12d31:	mov    rdi,r12
   12d34:	call   6070 <elf_shdr_by_index@plt>
   12d39:	mov    edx,0x1
   12d3e:	mov    rsi,rax
   12d41:	mov    rdi,r12
   12d44:	mov    rbp,rax
   12d47:	call   6440 <elf_access_ok@plt>
   12d4c:	test   al,al
   12d4e:	jne    12d08 <elf_shdr_by_name+0x28>
   12d50:	pop    rbx
   12d51:	xor    eax,eax
   12d53:	pop    rbp
   12d54:	pop    r12
   12d56:	pop    r13
   12d58:	pop    r14
   12d5a:	ret    
   12d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   12d60:	pop    rbx
   12d61:	mov    rax,rbp
   12d64:	pop    rbp
   12d65:	pop    r12
   12d67:	pop    r13
   12d69:	pop    r14
   12d6b:	ret    
   12d6c:	nop    DWORD PTR [rax+0x0]

0000000000012d70 <elf_strfmt>:
   12d70:	sub    rsp,0x8
   12d74:	call   5f10 <elf_strval@plt>
   12d79:	lea    rdx,[rip+0x11802]        # 24582 <__FUNCTION__.13043+0x342>
   12d80:	test   rax,rax
   12d83:	cmove  rax,rdx
   12d87:	add    rsp,0x8
   12d8b:	ret    
   12d8c:	nop    DWORD PTR [rax+0x0]

0000000000012d90 <elf_section_start>:
   12d90:	cmp    BYTE PTR [rdi+0x10],0x2
   12d94:	push   rbx
   12d95:	mov    rbx,QWORD PTR [rdi]
   12d98:	je     12db0 <elf_section_start+0x20>
   12d9a:	mov    ecx,0x4
   12d9f:	mov    edx,0x10
   12da4:	call   6140 <elf_access_unsigned@plt>
   12da9:	add    rax,rbx
   12dac:	pop    rbx
   12dad:	ret    
   12dae:	xchg   ax,ax
   12db0:	mov    ecx,0x8
   12db5:	mov    edx,0x18
   12dba:	call   6140 <elf_access_unsigned@plt>
   12dbf:	add    rax,rbx
   12dc2:	pop    rbx
   12dc3:	ret    
   12dc4:	xchg   ax,ax
   12dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012dd0 <elf_section_end>:
   12dd0:	push   r12
   12dd2:	push   rbp
   12dd3:	mov    r12,rsi
   12dd6:	push   rbx
   12dd7:	cmp    BYTE PTR [rdi+0x10],0x2
   12ddb:	mov    rbp,rdi
   12dde:	mov    rbx,QWORD PTR [rdi]
   12de1:	je     12e20 <elf_section_end+0x50>
   12de3:	mov    ecx,0x4
   12de8:	mov    edx,0x10
   12ded:	call   6140 <elf_access_unsigned@plt>
   12df2:	add    rbx,rax
   12df5:	cmp    BYTE PTR [rbp+0x10],0x2
   12df9:	je     12e38 <elf_section_end+0x68>
   12dfb:	mov    rsi,r12
   12dfe:	mov    rdi,rbp
   12e01:	mov    ecx,0x4
   12e06:	mov    edx,0x14
   12e0b:	call   6140 <elf_access_unsigned@plt>
   12e10:	add    rax,rbx
   12e13:	pop    rbx
   12e14:	pop    rbp
   12e15:	pop    r12
   12e17:	ret    
   12e18:	nop    DWORD PTR [rax+rax*1+0x0]
   12e20:	mov    ecx,0x8
   12e25:	mov    edx,0x18
   12e2a:	call   6140 <elf_access_unsigned@plt>
   12e2f:	add    rbx,rax
   12e32:	cmp    BYTE PTR [rbp+0x10],0x2
   12e36:	jne    12dfb <elf_section_end+0x2b>
   12e38:	mov    rsi,r12
   12e3b:	mov    rdi,rbp
   12e3e:	mov    ecx,0x8
   12e43:	mov    edx,0x20
   12e48:	call   6140 <elf_access_unsigned@plt>
   12e4d:	add    rax,rbx
   12e50:	pop    rbx
   12e51:	pop    rbp
   12e52:	pop    r12
   12e54:	ret    
   12e55:	nop
   12e56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012e60 <elf_segment_start>:
   12e60:	cmp    BYTE PTR [rdi+0x10],0x2
   12e64:	push   rbx
   12e65:	mov    rbx,QWORD PTR [rdi]
   12e68:	je     12e80 <elf_segment_start+0x20>
   12e6a:	mov    ecx,0x4
   12e6f:	mov    edx,0x4
   12e74:	call   6140 <elf_access_unsigned@plt>
   12e79:	add    rax,rbx
   12e7c:	pop    rbx
   12e7d:	ret    
   12e7e:	xchg   ax,ax
   12e80:	mov    ecx,0x8
   12e85:	mov    edx,0x8
   12e8a:	call   6140 <elf_access_unsigned@plt>
   12e8f:	add    rax,rbx
   12e92:	pop    rbx
   12e93:	ret    
   12e94:	xchg   ax,ax
   12e96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012ea0 <elf_segment_end>:
   12ea0:	push   r12
   12ea2:	push   rbp
   12ea3:	mov    r12,rsi
   12ea6:	push   rbx
   12ea7:	cmp    BYTE PTR [rdi+0x10],0x2
   12eab:	mov    rbp,rdi
   12eae:	mov    rbx,QWORD PTR [rdi]
   12eb1:	je     12ef0 <elf_segment_end+0x50>
   12eb3:	mov    ecx,0x4
   12eb8:	mov    edx,0x4
   12ebd:	call   6140 <elf_access_unsigned@plt>
   12ec2:	add    rbx,rax
   12ec5:	cmp    BYTE PTR [rbp+0x10],0x2
   12ec9:	je     12f08 <elf_segment_end+0x68>
   12ecb:	mov    rsi,r12
   12ece:	mov    rdi,rbp
   12ed1:	mov    ecx,0x4
   12ed6:	mov    edx,0x10
   12edb:	call   6140 <elf_access_unsigned@plt>
   12ee0:	add    rax,rbx
   12ee3:	pop    rbx
   12ee4:	pop    rbp
   12ee5:	pop    r12
   12ee7:	ret    
   12ee8:	nop    DWORD PTR [rax+rax*1+0x0]
   12ef0:	mov    ecx,0x8
   12ef5:	mov    edx,0x8
   12efa:	call   6140 <elf_access_unsigned@plt>
   12eff:	add    rbx,rax
   12f02:	cmp    BYTE PTR [rbp+0x10],0x2
   12f06:	jne    12ecb <elf_segment_end+0x2b>
   12f08:	mov    rsi,r12
   12f0b:	mov    rdi,rbp
   12f0e:	mov    ecx,0x8
   12f13:	mov    edx,0x20
   12f18:	call   6140 <elf_access_unsigned@plt>
   12f1d:	add    rax,rbx
   12f20:	pop    rbx
   12f21:	pop    rbp
   12f22:	pop    r12
   12f24:	ret    
   12f25:	nop
   12f26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012f30 <elf_sym_by_name>:
   12f30:	push   r14
   12f32:	mov    r14,rsi
   12f35:	push   r13
   12f37:	push   r12
   12f39:	push   rbp
   12f3a:	push   rbx
   12f3b:	mov    rsi,QWORD PTR [rdi+0x28]
   12f3f:	mov    rbx,rdi
   12f42:	call   65f0 <elf_section_start@plt>
   12f47:	mov    rsi,QWORD PTR [rbx+0x28]
   12f4b:	mov    rbp,rax
   12f4e:	mov    rdi,rbx
   12f51:	call   62e0 <elf_section_end@plt>
   12f56:	cmp    rbp,rax
   12f59:	jae    12faf <elf_sym_by_name+0x7f>
   12f5b:	mov    r13,rax
   12f5e:	movzx  eax,BYTE PTR [rbx+0x10]
   12f62:	cmp    al,0x2
   12f64:	mov    ecx,0x1
   12f69:	je     12fc0 <elf_sym_by_name+0x90>
   12f6b:	mov    edx,0xc
   12f70:	mov    rsi,rbp
   12f73:	mov    rdi,rbx
   12f76:	call   6140 <elf_access_unsigned@plt>
   12f7b:	mov    r12,rax
   12f7e:	xor    edx,edx
   12f80:	mov    ecx,0x4
   12f85:	mov    rsi,rbp
   12f88:	mov    rdi,rbx
   12f8b:	shr    r12,0x4
   12f8f:	call   6140 <elf_access_unsigned@plt>
   12f94:	cmp    r12,0x1
   12f98:	je     12fd8 <elf_sym_by_name+0xa8>
   12f9a:	movzx  eax,BYTE PTR [rbx+0x10]
   12f9e:	xor    edx,edx
   12fa0:	cmp    al,0x2
   12fa2:	sete   dl
   12fa5:	lea    rbp,[rbp+rdx*8+0x10]
   12faa:	cmp    r13,rbp
   12fad:	ja     12f62 <elf_sym_by_name+0x32>
   12faf:	pop    rbx
   12fb0:	xor    eax,eax
   12fb2:	pop    rbp
   12fb3:	pop    r12
   12fb5:	pop    r13
   12fb7:	pop    r14
   12fb9:	ret    
   12fba:	nop    WORD PTR [rax+rax*1+0x0]
   12fc0:	mov    edx,0x4
   12fc5:	mov    rsi,rbp
   12fc8:	mov    rdi,rbx
   12fcb:	call   6140 <elf_access_unsigned@plt>
   12fd0:	mov    r12,rax
   12fd3:	jmp    12f7e <elf_sym_by_name+0x4e>
   12fd5:	nop    DWORD PTR [rax]
   12fd8:	add    rax,QWORD PTR [rbx+0x30]
   12fdc:	mov    rdi,rbx
   12fdf:	mov    rsi,rax
   12fe2:	call   5f10 <elf_strval@plt>
   12fe7:	test   rax,rax
   12fea:	je     12faf <elf_sym_by_name+0x7f>
   12fec:	mov    rsi,r14
   12fef:	mov    rdi,rax
   12ff2:	call   5e10 <strcmp@plt>
   12ff7:	test   eax,eax
   12ff9:	jne    12f9a <elf_sym_by_name+0x6a>
   12ffb:	pop    rbx
   12ffc:	mov    rax,rbp
   12fff:	pop    rbp
   13000:	pop    r12
   13002:	pop    r13
   13004:	pop    r14
   13006:	ret    
   13007:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013010 <elf_sym_by_index>:
   13010:	push   rbp
   13011:	push   rbx
   13012:	mov    ebx,esi
   13014:	mov    rbp,rdi
   13017:	sub    rsp,0x8
   1301b:	mov    rsi,QWORD PTR [rdi+0x28]
   1301f:	call   65f0 <elf_section_start@plt>
   13024:	xor    edx,edx
   13026:	cmp    BYTE PTR [rbp+0x10],0x2
   1302a:	sete   dl
   1302d:	add    rsp,0x8
   13031:	lea    rdx,[rdx*8+0x10]
   13039:	imul   rbx,rdx
   1303d:	add    rax,rbx
   13040:	pop    rbx
   13041:	pop    rbp
   13042:	ret    
   13043:	nop    DWORD PTR [rax]
   13046:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013050 <elf_note_name>:
   13050:	add    rsi,0xc
   13054:	jmp    5f10 <elf_strval@plt>
   13059:	nop    DWORD PTR [rax+0x0]

0000000000013060 <elf_note_desc>:
   13060:	push   rbx
   13061:	mov    ecx,0x4
   13066:	xor    edx,edx
   13068:	mov    rbx,rsi
   1306b:	call   6140 <elf_access_unsigned@plt>
   13070:	add    eax,0x3
   13073:	and    eax,0xfffffffc
   13076:	lea    rax,[rbx+rax*1+0xc]
   1307b:	pop    rbx
   1307c:	ret    
   1307d:	nop    DWORD PTR [rax]

0000000000013080 <elf_note_numeric>:
   13080:	push   r12
   13082:	push   rbp
   13083:	mov    rbp,rsi
   13086:	push   rbx
   13087:	mov    rbx,rdi
   1308a:	call   62d0 <elf_note_desc@plt>
   1308f:	mov    ecx,0x4
   13094:	mov    edx,0x4
   13099:	mov    rsi,rbp
   1309c:	mov    rdi,rbx
   1309f:	mov    r12,rax
   130a2:	call   6140 <elf_access_unsigned@plt>
   130a7:	cmp    eax,0x8
   130aa:	ja     130be <elf_note_numeric+0x3e>
   130ac:	mov    edx,0x1
   130b1:	mov    ecx,eax
   130b3:	shl    rdx,cl
   130b6:	test   edx,0x116
   130bc:	jne    130c8 <elf_note_numeric+0x48>
   130be:	pop    rbx
   130bf:	xor    eax,eax
   130c1:	pop    rbp
   130c2:	pop    r12
   130c4:	ret    
   130c5:	nop    DWORD PTR [rax]
   130c8:	mov    rsi,r12
   130cb:	mov    rdi,rbx
   130ce:	mov    ecx,eax
   130d0:	pop    rbx
   130d1:	pop    rbp
   130d2:	pop    r12
   130d4:	xor    edx,edx
   130d6:	jmp    6140 <elf_access_unsigned@plt>
   130db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000130e0 <elf_note_numeric_array>:
   130e0:	push   r14
   130e2:	push   r13
   130e4:	mov    r14,rsi
   130e7:	push   r12
   130e9:	push   rbp
   130ea:	mov    rbp,rdi
   130ed:	push   rbx
   130ee:	mov    r13d,ecx
   130f1:	mov    ebx,edx
   130f3:	call   62d0 <elf_note_desc@plt>
   130f8:	mov    edx,0x4
   130fd:	mov    ecx,0x4
   13102:	mov    rsi,r14
   13105:	mov    rdi,rbp
   13108:	mov    r12,rax
   1310b:	call   6140 <elf_access_unsigned@plt>
   13110:	xor    edx,edx
   13112:	div    ebx
   13114:	test   edx,edx
   13116:	jne    13122 <elf_note_numeric_array+0x42>
   13118:	cmp    ebx,0x8
   1311b:	ja     13122 <elf_note_numeric_array+0x42>
   1311d:	cmp    eax,r13d
   13120:	ja     13130 <elf_note_numeric_array+0x50>
   13122:	pop    rbx
   13123:	xor    eax,eax
   13125:	pop    rbp
   13126:	pop    r12
   13128:	pop    r13
   1312a:	pop    r14
   1312c:	ret    
   1312d:	nop    DWORD PTR [rax]
   13130:	mov    eax,0x1
   13135:	mov    ecx,ebx
   13137:	shl    rax,cl
   1313a:	test   eax,0x116
   1313f:	je     13122 <elf_note_numeric_array+0x42>
   13141:	mov    edx,ebx
   13143:	mov    ecx,ebx
   13145:	mov    rsi,r12
   13148:	pop    rbx
   13149:	imul   edx,r13d
   1314d:	mov    rdi,rbp
   13150:	pop    rbp
   13151:	pop    r12
   13153:	pop    r13
   13155:	pop    r14
   13157:	jmp    6140 <elf_access_unsigned@plt>
   1315c:	nop    DWORD PTR [rax+0x0]

0000000000013160 <elf_note_next>:
   13160:	push   r12
   13162:	push   rbp
   13163:	xor    edx,edx
   13165:	push   rbx
   13166:	mov    ecx,0x4
   1316b:	mov    r12,rsi
   1316e:	mov    rbx,rdi
   13171:	call   6140 <elf_access_unsigned@plt>
   13176:	lea    ebp,[rax+0x3]
   13179:	mov    ecx,0x4
   1317e:	mov    edx,0x4
   13183:	mov    rsi,r12
   13186:	mov    rdi,rbx
   13189:	and    ebp,0xfffffffc
   1318c:	call   6140 <elf_access_unsigned@plt>
   13191:	lea    rbp,[r12+rbp*1+0xc]
   13196:	add    eax,0x3
   13199:	and    eax,0xfffffffc
   1319c:	add    rbp,rax
   1319f:	cmp    r12,rbp
   131a2:	jb     131b8 <elf_note_next+0x58>
   131a4:	mov    rbp,0xffffffffffffffff
   131ab:	mov    rax,rbp
   131ae:	pop    rbx
   131af:	pop    rbp
   131b0:	pop    r12
   131b2:	ret    
   131b3:	nop    DWORD PTR [rax+rax*1+0x0]
   131b8:	mov    edx,0x1
   131bd:	mov    rsi,r12
   131c0:	mov    rdi,rbx
   131c3:	call   6440 <elf_access_ok@plt>
   131c8:	test   al,al
   131ca:	je     131a4 <elf_note_next+0x44>
   131cc:	mov    rax,rbp
   131cf:	pop    rbx
   131d0:	pop    rbp
   131d1:	pop    r12
   131d3:	ret    
   131d4:	xchg   ax,ax
   131d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000131e0 <elf_is_elfbinary>:
   131e0:	xor    eax,eax
   131e2:	cmp    rsi,0x33
   131e6:	jbe    131f1 <elf_is_elfbinary+0x11>
   131e8:	cmp    DWORD PTR [rdi],0x464c457f
   131ee:	sete   al
   131f1:	repz ret 
   131f3:	nop    DWORD PTR [rax]
   131f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013200 <elf_phdr_is_loadable>:
   13200:	push   r12
   13202:	push   rbp
   13203:	mov    ecx,0x4
   13208:	push   rbx
   13209:	xor    edx,edx
   1320b:	mov    rbx,rdi
   1320e:	mov    rbp,rsi
   13211:	call   6140 <elf_access_unsigned@plt>
   13216:	cmp    BYTE PTR [rbx+0x10],0x2
   1321a:	mov    r12,rax
   1321d:	mov    ecx,0x4
   13222:	je     13250 <elf_phdr_is_loadable+0x50>
   13224:	mov    edx,0x18
   13229:	mov    rsi,rbp
   1322c:	mov    rdi,rbx
   1322f:	call   6140 <elf_access_unsigned@plt>
   13234:	xor    edx,edx
   13236:	cmp    r12,0x1
   1323a:	jne    13241 <elf_phdr_is_loadable+0x41>
   1323c:	test   al,0x7
   1323e:	setne  dl
   13241:	pop    rbx
   13242:	mov    eax,edx
   13244:	pop    rbp
   13245:	pop    r12
   13247:	ret    
   13248:	nop    DWORD PTR [rax+rax*1+0x0]
   13250:	mov    edx,0x4
   13255:	mov    rsi,rbp
   13258:	mov    rdi,rbx
   1325b:	call   6140 <elf_access_unsigned@plt>
   13260:	jmp    13234 <elf_phdr_is_loadable+0x34>
   13262:	nop    DWORD PTR [rax+0x0]
   13266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013270 <elf_set_xdest>:
   13270:	test   rsi,rsi
   13273:	mov    QWORD PTR [rdi+0x70],rsi
   13277:	mov    QWORD PTR [rdi+0x78],rdx
   1327b:	je     13290 <elf_set_xdest+0x20>
   1327d:	mov    rcx,rdx
   13280:	xor    edx,edx
   13282:	jmp    6260 <elf_memset_safe@plt>
   13287:	nop    WORD PTR [rax+rax*1+0x0]
   13290:	repz ret 
   13292:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1329c:	nop    DWORD PTR [rax+0x0]

00000000000132a0 <elf_load_image>:
   132a0:	push   r13
   132a2:	push   r12
   132a4:	mov    r12,rcx
   132a7:	push   rbp
   132a8:	push   rbx
   132a9:	mov    rbp,r8
   132ac:	mov    rbx,rsi
   132af:	mov    r13,rdi
   132b2:	sub    rsp,0x8
   132b6:	call   5c00 <elf_memcpy_safe@plt>
   132bb:	lea    rsi,[rbx+r12*1]
   132bf:	mov    rcx,rbp
   132c2:	mov    rdi,r13
   132c5:	sub    rcx,r12
   132c8:	xor    edx,edx
   132ca:	call   6260 <elf_memset_safe@plt>
   132cf:	add    rsp,0x8
   132d3:	xor    eax,eax
   132d5:	pop    rbx
   132d6:	pop    rbp
   132d7:	pop    r12
   132d9:	pop    r13
   132db:	ret    
   132dc:	nop    DWORD PTR [rax+0x0]

00000000000132e0 <elf_call_log_callback>:
   132e0:	sub    rsp,0xd8
   132e7:	test   al,al
   132e9:	mov    r10,rdi
   132ec:	mov    QWORD PTR [rsp+0x38],rcx
   132f1:	mov    QWORD PTR [rsp+0x40],r8
   132f6:	mov    QWORD PTR [rsp+0x48],r9
   132fb:	je     13334 <elf_call_log_callback+0x54>
   132fd:	movaps XMMWORD PTR [rsp+0x50],xmm0
   13302:	movaps XMMWORD PTR [rsp+0x60],xmm1
   13307:	movaps XMMWORD PTR [rsp+0x70],xmm2
   1330c:	movaps XMMWORD PTR [rsp+0x80],xmm3
   13314:	movaps XMMWORD PTR [rsp+0x90],xmm4
   1331c:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   13324:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   1332c:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   13334:	mov    rax,QWORD PTR fs:0x28
   1333d:	mov    QWORD PTR [rsp+0x18],rax
   13342:	xor    eax,eax
   13344:	cmp    QWORD PTR [r10+0x80],0x0
   1334c:	je     133a0 <elf_call_log_callback+0xc0>
   1334e:	test   sil,sil
   13351:	jne    1335d <elf_call_log_callback+0x7d>
   13353:	cmp    BYTE PTR [r10+0x90],0x0
   1335b:	je     133a0 <elf_call_log_callback+0xc0>
   1335d:	lea    rax,[rsp+0xe0]
   13365:	mov    rcx,rdx
   13368:	mov    DWORD PTR [rsp],0x18
   1336f:	mov    DWORD PTR [rsp+0x4],0x30
   13377:	mov    r8,rsp
   1337a:	mov    rdi,r10
   1337d:	mov    QWORD PTR [rsp+0x8],rax
   13382:	lea    rax,[rsp+0x20]
   13387:	mov    QWORD PTR [rsp+0x10],rax
   1338c:	movzx  eax,sil
   13390:	mov    rsi,QWORD PTR [r10+0x88]
   13397:	mov    edx,eax
   13399:	call   QWORD PTR [r10+0x80]
   133a0:	mov    rax,QWORD PTR [rsp+0x18]
   133a5:	xor    rax,QWORD PTR fs:0x28
   133ae:	jne    133b8 <elf_call_log_callback+0xd8>
   133b0:	add    rsp,0xd8
   133b7:	ret    
   133b8:	call   5b80 <__stack_chk_fail@plt>
   133bd:	nop    DWORD PTR [rax]

00000000000133c0 <elf_init>:
   133c0:	push   r13
   133c2:	push   r12
   133c4:	mov    r12,rdx
   133c7:	push   rbp
   133c8:	push   rbx
   133c9:	mov    rbp,rsi
   133cc:	mov    rbx,rdi
   133cf:	mov    rsi,rdx
   133d2:	mov    rdi,rbp
   133d5:	sub    rsp,0x8
   133d9:	call   6120 <elf_is_elfbinary@plt>
   133de:	test   al,al
   133e0:	je     136dc <elf_init+0x31c>
   133e6:	lea    rdi,[rbx+0x18]
   133ea:	mov    eax,ebx
   133ec:	mov    QWORD PTR [rbx+0x10],0x0
   133f4:	mov    QWORD PTR [rbx+0x98],0x0
   133ff:	mov    edx,0x4
   13404:	mov    rsi,rbp
   13407:	and    rdi,0xfffffffffffffff8
   1340b:	sub    eax,edi
   1340d:	lea    ecx,[rax+0xa0]
   13413:	xor    eax,eax
   13415:	shr    ecx,0x3
   13418:	rep stos QWORD PTR es:[rdi],rax
   1341b:	mov    ecx,0x1
   13420:	mov    rdi,rbx
   13423:	mov    QWORD PTR [rbx],rbp
   13426:	mov    QWORD PTR [rbx+0x8],r12
   1342a:	mov    QWORD PTR [rbx+0x18],rbp
   1342e:	call   6140 <elf_access_unsigned@plt>
   13433:	mov    rsi,QWORD PTR [rbx+0x18]
   13437:	mov    BYTE PTR [rbx+0x10],al
   1343a:	mov    ecx,0x1
   1343f:	mov    edx,0x5
   13444:	mov    rdi,rbx
   13447:	call   6140 <elf_access_unsigned@plt>
   1344c:	cmp    BYTE PTR [rbx+0x10],0x2
   13450:	mov    BYTE PTR [rbx+0x11],al
   13453:	mov    rsi,QWORD PTR [rbx+0x18]
   13457:	je     13650 <elf_init+0x290>
   1345d:	mov    ecx,0x4
   13462:	mov    edx,0x1c
   13467:	mov    rdi,rbx
   1346a:	call   6140 <elf_access_unsigned@plt>
   1346f:	mov    rbp,rax
   13472:	cmp    BYTE PTR [rbx+0x10],0x2
   13476:	mov    rsi,QWORD PTR [rbx+0x18]
   1347a:	mov    ecx,0x2
   1347f:	je     13638 <elf_init+0x278>
   13485:	mov    edx,0x2a
   1348a:	mov    rdi,rbx
   1348d:	call   6140 <elf_access_unsigned@plt>
   13492:	mov    r12,rax
   13495:	mov    rdi,rbx
   13498:	call   6280 <elf_phdr_count@plt>
   1349d:	mov    eax,eax
   1349f:	mov    r8,QWORD PTR [rbx+0x8]
   134a3:	imul   rax,r12
   134a7:	add    rax,rbp
   134aa:	cmp    r8,rax
   134ad:	jb     136fa <elf_init+0x33a>
   134b3:	cmp    BYTE PTR [rbx+0x10],0x2
   134b7:	mov    rsi,QWORD PTR [rbx+0x18]
   134bb:	je     13688 <elf_init+0x2c8>
   134c1:	mov    ecx,0x4
   134c6:	mov    edx,0x20
   134cb:	mov    rdi,rbx
   134ce:	call   6140 <elf_access_unsigned@plt>
   134d3:	mov    rbp,rax
   134d6:	cmp    BYTE PTR [rbx+0x10],0x2
   134da:	mov    rsi,QWORD PTR [rbx+0x18]
   134de:	mov    ecx,0x2
   134e3:	je     13670 <elf_init+0x2b0>
   134e9:	mov    edx,0x2e
   134ee:	mov    rdi,rbx
   134f1:	call   6140 <elf_access_unsigned@plt>
   134f6:	mov    r12,rax
   134f9:	mov    rdi,rbx
   134fc:	call   5a90 <elf_shdr_count@plt>
   13501:	mov    eax,eax
   13503:	mov    r8,QWORD PTR [rbx+0x8]
   13507:	imul   rax,r12
   1350b:	add    rax,rbp
   1350e:	cmp    r8,rax
   13511:	jb     1371d <elf_init+0x35d>
   13517:	cmp    BYTE PTR [rbx+0x10],0x2
   1351b:	mov    rsi,QWORD PTR [rbx+0x18]
   1351f:	mov    ecx,0x2
   13524:	je     136a8 <elf_init+0x2e8>
   1352a:	mov    edx,0x32
   1352f:	mov    rdi,rbx
   13532:	call   6140 <elf_access_unsigned@plt>
   13537:	mov    rdi,rbx
   1353a:	mov    esi,eax
   1353c:	call   6070 <elf_shdr_by_index@plt>
   13541:	test   rax,rax
   13544:	jne    136c8 <elf_init+0x308>
   1354a:	mov    rdi,rbx
   1354d:	call   5a90 <elf_shdr_count@plt>
   13552:	cmp    eax,0x1
   13555:	mov    r13d,eax
   13558:	jbe    135f2 <elf_init+0x232>
   1355e:	mov    r12d,0x1
   13564:	mov    esi,r12d
   13567:	mov    rdi,rbx
   1356a:	call   6070 <elf_shdr_by_index@plt>
   1356f:	mov    edx,0x1
   13574:	mov    rsi,rax
   13577:	mov    rdi,rbx
   1357a:	mov    rbp,rax
   1357d:	call   6440 <elf_access_ok@plt>
   13582:	test   al,al
   13584:	je     135f2 <elf_init+0x232>
   13586:	mov    ecx,0x4
   1358b:	mov    edx,0x4
   13590:	mov    rsi,rbp
   13593:	mov    rdi,rbx
   13596:	call   6140 <elf_access_unsigned@plt>
   1359b:	cmp    rax,0x2
   1359f:	setne  al
   135a2:	test   al,al
   135a4:	jne    135e5 <elf_init+0x225>
   135a6:	cmp    BYTE PTR [rbx+0x10],0x2
   135aa:	mov    ecx,0x4
   135af:	je     13620 <elf_init+0x260>
   135b1:	mov    rsi,rbp
   135b4:	mov    edx,0x18
   135b9:	mov    rdi,rbx
   135bc:	call   6140 <elf_access_unsigned@plt>
   135c1:	mov    esi,eax
   135c3:	test   esi,esi
   135c5:	je     135f2 <elf_init+0x232>
   135c7:	cmp    esi,r13d
   135ca:	jae    135f2 <elf_init+0x232>
   135cc:	mov    QWORD PTR [rbx+0x28],rbp
   135d0:	mov    rdi,rbx
   135d3:	call   6070 <elf_shdr_by_index@plt>
   135d8:	test   rax,rax
   135db:	jne    13600 <elf_init+0x240>
   135dd:	mov    QWORD PTR [rbx+0x28],0x0
   135e5:	add    r12d,0x1
   135e9:	cmp    r13d,r12d
   135ec:	jne    13564 <elf_init+0x1a4>
   135f2:	add    rsp,0x8
   135f6:	xor    eax,eax
   135f8:	pop    rbx
   135f9:	pop    rbp
   135fa:	pop    r12
   135fc:	pop    r13
   135fe:	ret    
   135ff:	nop
   13600:	mov    rsi,rax
   13603:	mov    rdi,rbx
   13606:	call   65f0 <elf_section_start@plt>
   1360b:	mov    QWORD PTR [rbx+0x30],rax
   1360f:	xor    eax,eax
   13611:	add    rsp,0x8
   13615:	pop    rbx
   13616:	pop    rbp
   13617:	pop    r12
   13619:	pop    r13
   1361b:	ret    
   1361c:	nop    DWORD PTR [rax+0x0]
   13620:	mov    rsi,rbp
   13623:	mov    edx,0x28
   13628:	mov    rdi,rbx
   1362b:	call   6140 <elf_access_unsigned@plt>
   13630:	mov    esi,eax
   13632:	jmp    135c3 <elf_init+0x203>
   13634:	nop    DWORD PTR [rax+0x0]
   13638:	mov    edx,0x36
   1363d:	mov    rdi,rbx
   13640:	call   6140 <elf_access_unsigned@plt>
   13645:	mov    r12,rax
   13648:	jmp    13495 <elf_init+0xd5>
   1364d:	nop    DWORD PTR [rax]
   13650:	mov    ecx,0x8
   13655:	mov    edx,0x20
   1365a:	mov    rdi,rbx
   1365d:	call   6140 <elf_access_unsigned@plt>
   13662:	mov    rbp,rax
   13665:	jmp    13472 <elf_init+0xb2>
   1366a:	nop    WORD PTR [rax+rax*1+0x0]
   13670:	mov    edx,0x3a
   13675:	mov    rdi,rbx
   13678:	call   6140 <elf_access_unsigned@plt>
   1367d:	mov    r12,rax
   13680:	jmp    134f9 <elf_init+0x139>
   13685:	nop    DWORD PTR [rax]
   13688:	mov    ecx,0x8
   1368d:	mov    edx,0x28
   13692:	mov    rdi,rbx
   13695:	call   6140 <elf_access_unsigned@plt>
   1369a:	mov    rbp,rax
   1369d:	jmp    134d6 <elf_init+0x116>
   136a2:	nop    WORD PTR [rax+rax*1+0x0]
   136a8:	mov    edx,0x3e
   136ad:	mov    rdi,rbx
   136b0:	call   6140 <elf_access_unsigned@plt>
   136b5:	mov    rdi,rbx
   136b8:	mov    esi,eax
   136ba:	call   6070 <elf_shdr_by_index@plt>
   136bf:	test   rax,rax
   136c2:	je     1354a <elf_init+0x18a>
   136c8:	mov    rsi,rax
   136cb:	mov    rdi,rbx
   136ce:	call   65f0 <elf_section_start@plt>
   136d3:	mov    QWORD PTR [rbx+0x20],rax
   136d7:	jmp    1354a <elf_init+0x18a>
   136dc:	lea    rdx,[rip+0x10ea9]        # 2458c <__FUNCTION__.13043+0x34c>
   136e3:	mov    esi,0x1
   136e8:	mov    rdi,rbx
   136eb:	call   5e90 <elf_call_log_callback@plt>
   136f0:	mov    eax,0xffffffff
   136f5:	jmp    13611 <elf_init+0x251>
   136fa:	lea    rdx,[rip+0x10f1f]        # 24620 <__FUNCTION__.13043+0x3e0>
   13701:	mov    rcx,rax
   13704:	xor    eax,eax
   13706:	mov    esi,0x1
   1370b:	mov    rdi,rbx
   1370e:	call   5e90 <elf_call_log_callback@plt>
   13713:	mov    eax,0xffffffff
   13718:	jmp    13611 <elf_init+0x251>
   1371d:	mov    rcx,rax
   13720:	lea    rdx,[rip+0x10f29]        # 24650 <__FUNCTION__.13043+0x410>
   13727:	jmp    13704 <elf_init+0x344>
   13729:	nop    DWORD PTR [rax+0x0]

0000000000013730 <elf_set_log>:
   13730:	mov    QWORD PTR [rdi+0x80],rsi
   13737:	mov    QWORD PTR [rdi+0x88],rdx
   1373e:	mov    BYTE PTR [rdi+0x90],cl
   13744:	ret    
   13745:	nop
   13746:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013750 <elf_parse_bsdsyms>:
   13750:	cmp    QWORD PTR [rdi+0x28],0x0
   13755:	je     13860 <elf_parse_bsdsyms+0x110>
   1375b:	push   r13
   1375d:	push   r12
   1375f:	push   rbp
   13760:	push   rbx
   13761:	mov    rbx,rdi
   13764:	sub    rsp,0x8
   13768:	call   5ee0 <elf_round_up@plt>
   1376d:	cmp    BYTE PTR [rbx+0x10],0x2
   13771:	mov    rbp,rax
   13774:	mov    esi,0xc0
   13779:	mov    eax,0x108
   1377e:	mov    rdi,rbx
   13781:	cmove  rsi,rax
   13785:	call   5ee0 <elf_round_up@plt>
   1378a:	cmp    BYTE PTR [rbx+0x10],0x2
   1378e:	mov    r12,rax
   13791:	mov    rsi,QWORD PTR [rbx+0x28]
   13795:	je     13870 <elf_parse_bsdsyms+0x120>
   1379b:	mov    ecx,0x4
   137a0:	mov    edx,0x14
   137a5:	mov    rdi,rbx
   137a8:	call   6140 <elf_access_unsigned@plt>
   137ad:	lea    rsi,[rax+r12*1]
   137b1:	mov    rdi,rbx
   137b4:	call   5ee0 <elf_round_up@plt>
   137b9:	cmp    BYTE PTR [rbx+0x10],0x2
   137bd:	mov    r12,rax
   137c0:	mov    rsi,QWORD PTR [rbx+0x28]
   137c4:	mov    ecx,0x4
   137c9:	je     13890 <elf_parse_bsdsyms+0x140>
   137cf:	mov    edx,0x18
   137d4:	mov    rdi,rbx
   137d7:	call   6140 <elf_access_unsigned@plt>
   137dc:	mov    esi,eax
   137de:	mov    rdi,rbx
   137e1:	call   6070 <elf_shdr_by_index@plt>
   137e6:	mov    edx,0x1
   137eb:	mov    rsi,rax
   137ee:	mov    rdi,rbx
   137f1:	mov    r13,rax
   137f4:	call   6440 <elf_access_ok@plt>
   137f9:	test   al,al
   137fb:	je     13853 <elf_parse_bsdsyms+0x103>
   137fd:	mov    ecx,0x4
   13802:	mov    edx,0x4
   13807:	mov    rsi,r13
   1380a:	mov    rdi,rbx
   1380d:	call   6140 <elf_access_unsigned@plt>
   13812:	cmp    rax,0x3
   13816:	setne  al
   13819:	test   al,al
   1381b:	jne    13853 <elf_parse_bsdsyms+0x103>
   1381d:	cmp    BYTE PTR [rbx+0x10],0x2
   13821:	je     138a8 <elf_parse_bsdsyms+0x158>
   13827:	mov    ecx,0x4
   1382c:	mov    edx,0x14
   13831:	mov    rsi,r13
   13834:	mov    rdi,rbx
   13837:	call   6140 <elf_access_unsigned@plt>
   1383c:	lea    rsi,[rax+r12*1]
   13840:	mov    rdi,rbx
   13843:	call   5ee0 <elf_round_up@plt>
   13848:	mov    QWORD PTR [rbx+0x60],rbp
   1384c:	add    rbp,rax
   1384f:	mov    QWORD PTR [rbx+0x68],rbp
   13853:	add    rsp,0x8
   13857:	pop    rbx
   13858:	pop    rbp
   13859:	pop    r12
   1385b:	pop    r13
   1385d:	ret    
   1385e:	xchg   ax,ax
   13860:	lea    rsi,[rip+0x10e19]        # 24680 <__FUNCTION__.13043+0x440>
   13867:	jmp    5a70 <elf_mark_broken@plt>
   1386c:	nop    DWORD PTR [rax+0x0]
   13870:	mov    ecx,0x8
   13875:	mov    edx,0x20
   1387a:	mov    rdi,rbx
   1387d:	call   6140 <elf_access_unsigned@plt>
   13882:	jmp    137ad <elf_parse_bsdsyms+0x5d>
   13887:	nop    WORD PTR [rax+rax*1+0x0]
   13890:	mov    edx,0x28
   13895:	mov    rdi,rbx
   13898:	call   6140 <elf_access_unsigned@plt>
   1389d:	mov    esi,eax
   1389f:	jmp    137de <elf_parse_bsdsyms+0x8e>
   138a4:	nop    DWORD PTR [rax+0x0]
   138a8:	mov    ecx,0x8
   138ad:	mov    edx,0x20
   138b2:	mov    rsi,r13
   138b5:	mov    rdi,rbx
   138b8:	call   6140 <elf_access_unsigned@plt>
   138bd:	jmp    1383c <elf_parse_bsdsyms+0xec>
   138c2:	nop    DWORD PTR [rax+0x0]
   138c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000138d0 <elf_parse_binary>:
   138d0:	push   r15
   138d2:	push   r14
   138d4:	push   r13
   138d6:	push   r12
   138d8:	push   rbp
   138d9:	push   rbx
   138da:	mov    rbx,rdi
   138dd:	sub    rsp,0x18
   138e1:	call   6280 <elf_phdr_count@plt>
   138e6:	test   eax,eax
   138e8:	mov    DWORD PTR [rsp+0xc],eax
   138ec:	je     13a00 <elf_parse_binary+0x130>
   138f2:	xor    r12d,r12d
   138f5:	xor    r14d,r14d
   138f8:	mov    r13,0xffffffffffffffff
   138ff:	jmp    1397c <elf_parse_binary+0xac>
   13901:	nop    DWORD PTR [rax+0x0]
   13908:	mov    ecx,0x4
   1390d:	mov    edx,0xc
   13912:	mov    rsi,rbp
   13915:	mov    rdi,rbx
   13918:	call   6140 <elf_access_unsigned@plt>
   1391d:	cmp    BYTE PTR [rbx+0x10],0x2
   13921:	mov    r15,rax
   13924:	je     139d9 <elf_parse_binary+0x109>
   1392a:	mov    rsi,rbp
   1392d:	mov    ecx,0x4
   13932:	mov    edx,0x14
   13937:	mov    rdi,rbx
   1393a:	call   6140 <elf_access_unsigned@plt>
   1393f:	mov    rbp,rax
   13942:	lea    rdx,[rip+0x10d5f]        # 246a8 <__FUNCTION__.13043+0x468>
   13949:	xor    esi,esi
   1394b:	xor    eax,eax
   1394d:	mov    r8,rbp
   13950:	mov    rcx,r15
   13953:	mov    rdi,rbx
   13956:	call   5e90 <elf_call_log_callback@plt>
   1395b:	lea    r9,[r15+rbp*1]
   1395f:	cmp    r13,r15
   13962:	cmova  r13,r15
   13966:	cmp    r14,r9
   13969:	cmovb  r14,r9
   1396d:	add    r12d,0x1
   13971:	cmp    DWORD PTR [rsp+0xc],r12d
   13976:	je     13a0a <elf_parse_binary+0x13a>
   1397c:	mov    esi,r12d
   1397f:	mov    rdi,rbx
   13982:	call   6350 <elf_phdr_by_index@plt>
   13987:	mov    edx,0x1
   1398c:	mov    rsi,rax
   1398f:	mov    rdi,rbx
   13992:	mov    rbp,rax
   13995:	call   6440 <elf_access_ok@plt>
   1399a:	test   al,al
   1399c:	je     13a0a <elf_parse_binary+0x13a>
   1399e:	mov    rsi,rbp
   139a1:	mov    rdi,rbx
   139a4:	call   5c90 <elf_phdr_is_loadable@plt>
   139a9:	test   al,al
   139ab:	je     1396d <elf_parse_binary+0x9d>
   139ad:	cmp    BYTE PTR [rbx+0x10],0x2
   139b1:	jne    13908 <elf_parse_binary+0x38>
   139b7:	mov    ecx,0x8
   139bc:	mov    edx,0x18
   139c1:	mov    rsi,rbp
   139c4:	mov    rdi,rbx
   139c7:	call   6140 <elf_access_unsigned@plt>
   139cc:	cmp    BYTE PTR [rbx+0x10],0x2
   139d0:	mov    r15,rax
   139d3:	jne    1392a <elf_parse_binary+0x5a>
   139d9:	mov    rsi,rbp
   139dc:	mov    ecx,0x8
   139e1:	mov    edx,0x28
   139e6:	mov    rdi,rbx
   139e9:	call   6140 <elf_access_unsigned@plt>
   139ee:	mov    rbp,rax
   139f1:	jmp    13942 <elf_parse_binary+0x72>
   139f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13a00:	xor    r14d,r14d
   13a03:	mov    r13,0xffffffffffffffff
   13a0a:	mov    QWORD PTR [rbx+0x48],r13
   13a0e:	mov    QWORD PTR [rbx+0x50],r14
   13a12:	add    rsp,0x18
   13a16:	mov    r8,r14
   13a19:	mov    rcx,r13
   13a1c:	mov    rdi,rbx
   13a1f:	pop    rbx
   13a20:	pop    rbp
   13a21:	pop    r12
   13a23:	pop    r13
   13a25:	pop    r14
   13a27:	pop    r15
   13a29:	lea    rdx,[rip+0x10b74]        # 245a4 <__FUNCTION__.13043+0x364>
   13a30:	xor    esi,esi
   13a32:	xor    eax,eax
   13a34:	jmp    5e90 <elf_call_log_callback@plt>
   13a39:	nop    DWORD PTR [rax+0x0]

0000000000013a40 <elf_get_ptr>:
   13a40:	mov    rax,QWORD PTR [rdi+0x38]
   13a44:	add    rax,rsi
   13a47:	sub    rax,QWORD PTR [rdi+0x48]
   13a4b:	ret    
   13a4c:	nop    DWORD PTR [rax+0x0]

0000000000013a50 <elf_load_bsdsyms>:
   13a50:	push   r15
   13a52:	push   r14
   13a54:	push   r13
   13a56:	push   r12
   13a58:	push   rbp
   13a59:	push   rbx
   13a5a:	sub    rsp,0x138
   13a61:	mov    rax,QWORD PTR fs:0x28
   13a6a:	mov    QWORD PTR [rsp+0x128],rax
   13a72:	xor    eax,eax
   13a74:	cmp    QWORD PTR [rdi+0x60],0x0
   13a79:	jne    13aa8 <elf_load_bsdsyms+0x58>
   13a7b:	mov    rax,QWORD PTR [rsp+0x128]
   13a83:	xor    rax,QWORD PTR fs:0x28
   13a8c:	jne    1434c <elf_load_bsdsyms+0x8fc>
   13a92:	add    rsp,0x138
   13a99:	pop    rbx
   13a9a:	pop    rbp
   13a9b:	pop    r12
   13a9d:	pop    r13
   13a9f:	pop    r14
   13aa1:	pop    r15
   13aa3:	ret    
   13aa4:	nop    DWORD PTR [rax+0x0]
   13aa8:	lea    r12,[rsp+0x20]
   13aad:	mov    rbx,rdi
   13ab0:	mov    edx,0x104
   13ab5:	mov    r13d,0x28
   13abb:	mov    rsi,r12
   13abe:	lea    rbp,[r12+0x4]
   13ac3:	call   6360 <elf_set_xdest@plt>
   13ac8:	mov    rsi,QWORD PTR [rbx+0x60]
   13acc:	mov    rdi,rbx
   13acf:	call   6180 <elf_get_ptr@plt>
   13ad4:	mov    rsi,QWORD PTR [rbx+0x60]
   13ad8:	mov    r14,rax
   13adb:	mov    rdi,rbx
   13ade:	call   6180 <elf_get_ptr@plt>
   13ae3:	lea    rsi,[r14+0x104]
   13aea:	mov    rdi,rbx
   13aed:	mov    QWORD PTR [rsp+0x10],rax
   13af2:	call   5ee0 <elf_round_up@plt>
   13af7:	cmp    BYTE PTR [rbx+0x10],0x2
   13afb:	mov    r15,rax
   13afe:	mov    edx,0x28
   13b03:	mov    eax,0x40
   13b08:	mov    ecx,0x34
   13b0d:	mov    rsi,rbp
   13b10:	mov    rdi,rbx
   13b13:	cmove  edx,eax
   13b16:	mov    WORD PTR [rsp+0x8],dx
   13b1b:	mov    edx,0x34
   13b20:	cmovne eax,edx
   13b23:	mov    rdx,QWORD PTR [rbx+0x18]
   13b27:	mov    WORD PTR [rsp],ax
   13b2b:	mov    eax,0x40
   13b30:	cmove  rcx,rax
   13b34:	cmove  r13,rax
   13b38:	call   5c00 <elf_memcpy_safe@plt>
   13b3d:	cmp    BYTE PTR [rbx+0x10],0x2
   13b41:	je     140c0 <elf_load_bsdsyms+0x670>
   13b47:	lea    rsi,[r12+0x2c]
   13b4c:	mov    edx,0x2
   13b51:	mov    rdi,rbx
   13b54:	call   6440 <elf_access_ok@plt>
   13b59:	test   al,al
   13b5b:	jne    13fc0 <elf_load_bsdsyms+0x570>
   13b61:	cmp    BYTE PTR [rbx+0x10],0x2
   13b65:	je     14090 <elf_load_bsdsyms+0x640>
   13b6b:	lea    rsi,[rbp+0x2e]
   13b6f:	mov    edx,0x2
   13b74:	mov    rdi,rbx
   13b77:	call   6440 <elf_access_ok@plt>
   13b7c:	test   al,al
   13b7e:	jne    13fb0 <elf_load_bsdsyms+0x560>
   13b84:	lea    rsi,[rbp+0x14]
   13b88:	mov    edx,0x4
   13b8d:	mov    rdi,rbx
   13b90:	call   6440 <elf_access_ok@plt>
   13b95:	test   al,al
   13b97:	jne    141c8 <elf_load_bsdsyms+0x778>
   13b9d:	cmp    BYTE PTR [rbx+0x10],0x2
   13ba1:	je     14180 <elf_load_bsdsyms+0x730>
   13ba7:	lea    rsi,[rbp+0x20]
   13bab:	mov    edx,0x4
   13bb0:	mov    rdi,rbx
   13bb3:	call   6440 <elf_access_ok@plt>
   13bb8:	test   al,al
   13bba:	jne    13fa0 <elf_load_bsdsyms+0x550>
   13bc0:	cmp    BYTE PTR [rbx+0x10],0x2
   13bc4:	je     14150 <elf_load_bsdsyms+0x700>
   13bca:	lea    rsi,[rbp+0x30]
   13bce:	mov    edx,0x2
   13bd3:	mov    rdi,rbx
   13bd6:	call   6440 <elf_access_ok@plt>
   13bdb:	test   al,al
   13bdd:	jne    13f90 <elf_load_bsdsyms+0x540>
   13be3:	cmp    BYTE PTR [rbx+0x10],0x2
   13be7:	je     14120 <elf_load_bsdsyms+0x6d0>
   13bed:	lea    rsi,[rbp+0x1c]
   13bf1:	mov    edx,0x4
   13bf6:	mov    rdi,rbx
   13bf9:	call   6440 <elf_access_ok@plt>
   13bfe:	test   al,al
   13c00:	jne    13f80 <elf_load_bsdsyms+0x530>
   13c06:	cmp    BYTE PTR [rbx+0x10],0x2
   13c0a:	je     140f0 <elf_load_bsdsyms+0x6a0>
   13c10:	lea    rsi,[rbp+0x2a]
   13c14:	mov    edx,0x2
   13c19:	mov    rdi,rbx
   13c1c:	call   6440 <elf_access_ok@plt>
   13c21:	test   al,al
   13c23:	jne    13f70 <elf_load_bsdsyms+0x520>
   13c29:	cmp    BYTE PTR [rbx+0x10],0x2
   13c2d:	je     14068 <elf_load_bsdsyms+0x618>
   13c33:	lea    rsi,[rbp+0x2c]
   13c37:	mov    edx,0x2
   13c3c:	mov    rdi,rbx
   13c3f:	call   6440 <elf_access_ok@plt>
   13c44:	test   al,al
   13c46:	jne    13f60 <elf_load_bsdsyms+0x510>
   13c4c:	cmp    BYTE PTR [rbx+0x10],0x2
   13c50:	je     14040 <elf_load_bsdsyms+0x5f0>
   13c56:	lea    rsi,[rbp+0x32]
   13c5a:	mov    edx,0x2
   13c5f:	mov    rdi,rbx
   13c62:	call   6440 <elf_access_ok@plt>
   13c67:	test   al,al
   13c69:	jne    13f50 <elf_load_bsdsyms+0x500>
   13c6f:	lea    rbp,[r12+0x84]
   13c77:	mov    rdx,QWORD PTR [rbx+0x28]
   13c7b:	mov    rcx,r13
   13c7e:	mov    rdi,rbx
   13c81:	mov    rsi,rbp
   13c84:	call   5c00 <elf_memcpy_safe@plt>
   13c89:	cmp    BYTE PTR [rbx+0x10],0x2
   13c8d:	je     14018 <elf_load_bsdsyms+0x5c8>
   13c93:	mov    ecx,0x4
   13c98:	mov    edx,0x18
   13c9d:	mov    rsi,rbp
   13ca0:	mov    rdi,rbx
   13ca3:	call   6140 <elf_access_unsigned@plt>
   13ca8:	mov    DWORD PTR [rsp+0x1c],eax
   13cac:	cmp    BYTE PTR [rbx+0x10],0x2
   13cb0:	je     13fd0 <elf_load_bsdsyms+0x580>
   13cb6:	mov    ecx,0x4
   13cbb:	mov    edx,0x14
   13cc0:	mov    rsi,rbp
   13cc3:	mov    rdi,rbx
   13cc6:	call   6140 <elf_access_unsigned@plt>
   13ccb:	cmp    BYTE PTR [rbx+0x10],0x2
   13ccf:	mov    QWORD PTR [rsp+0x8],rax
   13cd4:	je     13ff4 <elf_load_bsdsyms+0x5a4>
   13cda:	mov    ecx,0x4
   13cdf:	mov    edx,0x14
   13ce4:	mov    rsi,rbp
   13ce7:	mov    rdi,rbx
   13cea:	call   6140 <elf_access_unsigned@plt>
   13cef:	mov    rcx,rax
   13cf2:	mov    rsi,rbp
   13cf5:	mov    rdi,rbx
   13cf8:	mov    QWORD PTR [rsp],rcx
   13cfc:	call   65f0 <elf_section_start@plt>
   13d01:	mov    r8,QWORD PTR [rsp+0x8]
   13d06:	mov    rcx,QWORD PTR [rsp]
   13d0a:	mov    rdx,rax
   13d0d:	mov    rsi,r15
   13d10:	mov    rdi,rbx
   13d13:	call   132a0 <elf_load_image>
   13d18:	test   eax,eax
   13d1a:	jne    141b0 <elf_load_bsdsyms+0x760>
   13d20:	mov    rax,QWORD PTR [rsp+0x10]
   13d25:	add    rax,0x4
   13d29:	cmp    BYTE PTR [rbx+0x10],0x2
   13d2d:	mov    QWORD PTR [rsp],rax
   13d31:	je     13f20 <elf_load_bsdsyms+0x4d0>
   13d37:	lea    rsi,[rbp+0x10]
   13d3b:	mov    edx,0x4
   13d40:	mov    rdi,rbx
   13d43:	call   6440 <elf_access_ok@plt>
   13d48:	test   al,al
   13d4a:	jne    142b8 <elf_load_bsdsyms+0x868>
   13d50:	cmp    BYTE PTR [rbx+0x10],0x2
   13d54:	je     141f8 <elf_load_bsdsyms+0x7a8>
   13d5a:	lea    rsi,[rbp+0x18]
   13d5e:	mov    edx,0x4
   13d63:	mov    rdi,rbx
   13d66:	call   6440 <elf_access_ok@plt>
   13d6b:	test   al,al
   13d6d:	jne    142a8 <elf_load_bsdsyms+0x858>
   13d73:	cmp    BYTE PTR [rbx+0x10],0x2
   13d77:	je     141d8 <elf_load_bsdsyms+0x788>
   13d7d:	mov    ecx,0x4
   13d82:	mov    edx,0x14
   13d87:	mov    rsi,rbp
   13d8a:	mov    rdi,rbx
   13d8d:	call   6140 <elf_access_unsigned@plt>
   13d92:	lea    rsi,[rax+r15*1]
   13d96:	mov    rdi,rbx
   13d99:	lea    rbp,[r12+0xc4]
   13da1:	call   5ee0 <elf_round_up@plt>
   13da6:	mov    esi,DWORD PTR [rsp+0x1c]
   13daa:	mov    rdi,rbx
   13dad:	mov    r15,rax
   13db0:	call   6070 <elf_shdr_by_index@plt>
   13db5:	mov    rcx,r13
   13db8:	mov    rdx,rax
   13dbb:	mov    rsi,rbp
   13dbe:	mov    rdi,rbx
   13dc1:	call   5c00 <elf_memcpy_safe@plt>
   13dc6:	mov    ecx,0x4
   13dcb:	mov    edx,0x4
   13dd0:	mov    rsi,rbp
   13dd3:	mov    rdi,rbx
   13dd6:	call   6140 <elf_access_unsigned@plt>
   13ddb:	cmp    rax,0x3
   13ddf:	jne    14220 <elf_load_bsdsyms+0x7d0>
   13de5:	cmp    BYTE PTR [rbx+0x10],0x2
   13de9:	je     14238 <elf_load_bsdsyms+0x7e8>
   13def:	mov    ecx,0x4
   13df4:	mov    edx,0x14
   13df9:	mov    rsi,rbp
   13dfc:	mov    rdi,rbx
   13dff:	call   6140 <elf_access_unsigned@plt>
   13e04:	mov    QWORD PTR [rsp+0x10],rax
   13e09:	cmp    BYTE PTR [rbx+0x10],0x2
   13e0d:	je     14260 <elf_load_bsdsyms+0x810>
   13e13:	mov    ecx,0x4
   13e18:	mov    edx,0x14
   13e1d:	mov    rsi,rbp
   13e20:	mov    rdi,rbx
   13e23:	call   6140 <elf_access_unsigned@plt>
   13e28:	mov    rcx,rax
   13e2b:	mov    rsi,rbp
   13e2e:	mov    rdi,rbx
   13e31:	mov    QWORD PTR [rsp+0x8],rcx
   13e36:	call   65f0 <elf_section_start@plt>
   13e3b:	mov    r8,QWORD PTR [rsp+0x10]
   13e40:	mov    rcx,QWORD PTR [rsp+0x8]
   13e45:	mov    rdx,rax
   13e48:	mov    rsi,r15
   13e4b:	mov    rdi,rbx
   13e4e:	call   132a0 <elf_load_image>
   13e53:	test   eax,eax
   13e55:	jne    14290 <elf_load_bsdsyms+0x840>
   13e5b:	mov    eax,r15d
   13e5e:	sub    eax,DWORD PTR [rsp]
   13e61:	cmp    BYTE PTR [rbx+0x10],0x2
   13e65:	mov    DWORD PTR [rsp+0x8],eax
   13e69:	je     142d0 <elf_load_bsdsyms+0x880>
   13e6f:	lea    rsi,[rbp+0x10]
   13e73:	mov    edx,0x4
   13e78:	mov    rdi,rbx
   13e7b:	call   6440 <elf_access_ok@plt>
   13e80:	test   al,al
   13e82:	jne    14280 <elf_load_bsdsyms+0x830>
   13e88:	cmp    BYTE PTR [rbx+0x10],0x2
   13e8c:	je     14300 <elf_load_bsdsyms+0x8b0>
   13e92:	mov    ecx,0x4
   13e97:	mov    edx,0x14
   13e9c:	mov    rsi,rbp
   13e9f:	mov    rdi,rbx
   13ea2:	call   6140 <elf_access_unsigned@plt>
   13ea7:	add    eax,DWORD PTR [rsp+0x8]
   13eab:	mov    r8d,0x44
   13eb1:	mov    ecx,0x44
   13eb6:	mov    rdx,r12
   13eb9:	mov    rsi,r14
   13ebc:	mov    rdi,rbx
   13ebf:	mov    DWORD PTR [rsp+0x20],eax
   13ec3:	call   132a0 <elf_load_image>
   13ec8:	test   eax,eax
   13eca:	jne    14320 <elf_load_bsdsyms+0x8d0>
   13ed0:	lea    rbp,[r12+0x44]
   13ed5:	add    r14,0x44
   13ed9:	add    r12,0x104
   13ee0:	mov    r8,r13
   13ee3:	mov    rcx,r13
   13ee6:	mov    rdx,rbp
   13ee9:	mov    rsi,r14
   13eec:	mov    rdi,rbx
   13eef:	call   132a0 <elf_load_image>
   13ef4:	test   eax,eax
   13ef6:	jne    14338 <elf_load_bsdsyms+0x8e8>
   13efc:	add    rbp,0x40
   13f00:	add    r14,r13
   13f03:	cmp    r12,rbp
   13f06:	jne    13ee0 <elf_load_bsdsyms+0x490>
   13f08:	xor    edx,edx
   13f0a:	xor    esi,esi
   13f0c:	mov    rdi,rbx
   13f0f:	call   6360 <elf_set_xdest@plt>
   13f14:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   13f19:	nop    DWORD PTR [rax+0x0]
   13f20:	lea    rsi,[rbp+0x18]
   13f24:	mov    edx,0x8
   13f29:	mov    rdi,rbx
   13f2c:	call   6440 <elf_access_ok@plt>
   13f31:	test   al,al
   13f33:	je     13d50 <elf_load_bsdsyms+0x300>
   13f39:	mov    rax,r15
   13f3c:	sub    rax,QWORD PTR [rsp]
   13f40:	mov    QWORD PTR [rbp+0x18],rax
   13f44:	jmp    13d50 <elf_load_bsdsyms+0x300>
   13f49:	nop    DWORD PTR [rax+0x0]
   13f50:	xor    eax,eax
   13f52:	mov    WORD PTR [rbp+0x32],ax
   13f56:	jmp    13c6f <elf_load_bsdsyms+0x21f>
   13f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   13f60:	xor    ecx,ecx
   13f62:	mov    WORD PTR [rbp+0x2c],cx
   13f66:	jmp    13c4c <elf_load_bsdsyms+0x1fc>
   13f6b:	nop    DWORD PTR [rax+rax*1+0x0]
   13f70:	xor    edi,edi
   13f72:	mov    WORD PTR [rbp+0x2a],di
   13f76:	jmp    13c29 <elf_load_bsdsyms+0x1d9>
   13f7b:	nop    DWORD PTR [rax+rax*1+0x0]
   13f80:	mov    DWORD PTR [rbp+0x1c],0x0
   13f87:	jmp    13c06 <elf_load_bsdsyms+0x1b6>
   13f8c:	nop    DWORD PTR [rax+0x0]
   13f90:	mov    r9d,0x3
   13f96:	mov    WORD PTR [rbp+0x30],r9w
   13f9b:	jmp    13be3 <elf_load_bsdsyms+0x193>
   13fa0:	mov    DWORD PTR [rbp+0x20],0x40
   13fa7:	jmp    13bc0 <elf_load_bsdsyms+0x170>
   13fac:	nop    DWORD PTR [rax+0x0]
   13fb0:	movzx  eax,WORD PTR [rsp+0x8]
   13fb5:	mov    WORD PTR [rbp+0x2e],ax
   13fb9:	jmp    13b84 <elf_load_bsdsyms+0x134>
   13fbe:	xchg   ax,ax
   13fc0:	movzx  eax,WORD PTR [rsp]
   13fc4:	mov    WORD PTR [r12+0x2c],ax
   13fca:	jmp    13b61 <elf_load_bsdsyms+0x111>
   13fcf:	nop
   13fd0:	mov    ecx,0x8
   13fd5:	mov    edx,0x20
   13fda:	mov    rsi,rbp
   13fdd:	mov    rdi,rbx
   13fe0:	call   6140 <elf_access_unsigned@plt>
   13fe5:	cmp    BYTE PTR [rbx+0x10],0x2
   13fe9:	mov    QWORD PTR [rsp+0x8],rax
   13fee:	jne    13cda <elf_load_bsdsyms+0x28a>
   13ff4:	mov    ecx,0x8
   13ff9:	mov    edx,0x20
   13ffe:	mov    rsi,rbp
   14001:	mov    rdi,rbx
   14004:	call   6140 <elf_access_unsigned@plt>
   14009:	mov    rcx,rax
   1400c:	jmp    13cf2 <elf_load_bsdsyms+0x2a2>
   14011:	nop    DWORD PTR [rax+0x0]
   14018:	mov    ecx,0x4
   1401d:	mov    edx,0x28
   14022:	mov    rsi,rbp
   14025:	mov    rdi,rbx
   14028:	call   6140 <elf_access_unsigned@plt>
   1402d:	mov    DWORD PTR [rsp+0x1c],eax
   14031:	jmp    13cac <elf_load_bsdsyms+0x25c>
   14036:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14040:	lea    rsi,[rbp+0x3e]
   14044:	mov    edx,0x2
   14049:	mov    rdi,rbx
   1404c:	call   6440 <elf_access_ok@plt>
   14051:	test   al,al
   14053:	je     13c6f <elf_load_bsdsyms+0x21f>
   14059:	xor    edx,edx
   1405b:	mov    WORD PTR [rbp+0x3e],dx
   1405f:	jmp    13c6f <elf_load_bsdsyms+0x21f>
   14064:	nop    DWORD PTR [rax+0x0]
   14068:	lea    rsi,[rbp+0x38]
   1406c:	mov    edx,0x2
   14071:	mov    rdi,rbx
   14074:	call   6440 <elf_access_ok@plt>
   14079:	test   al,al
   1407b:	je     13c4c <elf_load_bsdsyms+0x1fc>
   14081:	xor    esi,esi
   14083:	mov    WORD PTR [rbp+0x38],si
   14087:	jmp    13c4c <elf_load_bsdsyms+0x1fc>
   1408c:	nop    DWORD PTR [rax+0x0]
   14090:	lea    rsi,[rbp+0x3a]
   14094:	mov    edx,0x2
   14099:	mov    rdi,rbx
   1409c:	call   6440 <elf_access_ok@plt>
   140a1:	test   al,al
   140a3:	je     13b84 <elf_load_bsdsyms+0x134>
   140a9:	movzx  eax,WORD PTR [rsp+0x8]
   140ae:	mov    WORD PTR [rbp+0x3a],ax
   140b2:	jmp    13b84 <elf_load_bsdsyms+0x134>
   140b7:	nop    WORD PTR [rax+rax*1+0x0]
   140c0:	lea    rsi,[r12+0x38]
   140c5:	mov    edx,0x2
   140ca:	mov    rdi,rbx
   140cd:	call   6440 <elf_access_ok@plt>
   140d2:	test   al,al
   140d4:	je     13b61 <elf_load_bsdsyms+0x111>
   140da:	movzx  eax,WORD PTR [rsp]
   140de:	mov    WORD PTR [r12+0x38],ax
   140e4:	jmp    13b61 <elf_load_bsdsyms+0x111>
   140e9:	nop    DWORD PTR [rax+0x0]
   140f0:	lea    rsi,[rbp+0x36]
   140f4:	mov    edx,0x2
   140f9:	mov    rdi,rbx
   140fc:	call   6440 <elf_access_ok@plt>
   14101:	test   al,al
   14103:	je     13c29 <elf_load_bsdsyms+0x1d9>
   14109:	xor    r8d,r8d
   1410c:	mov    WORD PTR [rbp+0x36],r8w
   14111:	jmp    13c29 <elf_load_bsdsyms+0x1d9>
   14116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14120:	lea    rsi,[rbp+0x20]
   14124:	mov    edx,0x8
   14129:	mov    rdi,rbx
   1412c:	call   6440 <elf_access_ok@plt>
   14131:	test   al,al
   14133:	je     13c06 <elf_load_bsdsyms+0x1b6>
   14139:	mov    QWORD PTR [rbp+0x20],0x0
   14141:	jmp    13c06 <elf_load_bsdsyms+0x1b6>
   14146:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14150:	lea    rsi,[rbp+0x3c]
   14154:	mov    edx,0x2
   14159:	mov    rdi,rbx
   1415c:	call   6440 <elf_access_ok@plt>
   14161:	test   al,al
   14163:	je     13be3 <elf_load_bsdsyms+0x193>
   14169:	mov    r10d,0x3
   1416f:	mov    WORD PTR [rbp+0x3c],r10w
   14174:	jmp    13be3 <elf_load_bsdsyms+0x193>
   14179:	nop    DWORD PTR [rax+0x0]
   14180:	lea    rsi,[rbp+0x28]
   14184:	mov    edx,0x8
   14189:	mov    rdi,rbx
   1418c:	call   6440 <elf_access_ok@plt>
   14191:	test   al,al
   14193:	je     13bc0 <elf_load_bsdsyms+0x170>
   14199:	mov    QWORD PTR [rbp+0x28],0x40
   141a1:	jmp    13bc0 <elf_load_bsdsyms+0x170>
   141a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   141b0:	lea    rsi,[rip+0x10519]        # 246d0 <__FUNCTION__.13043+0x490>
   141b7:	mov    rdi,rbx
   141ba:	call   5a70 <elf_mark_broken@plt>
   141bf:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   141c4:	nop    DWORD PTR [rax+0x0]
   141c8:	mov    DWORD PTR [rbp+0x14],0x1
   141cf:	jmp    13b9d <elf_load_bsdsyms+0x14d>
   141d4:	nop    DWORD PTR [rax+0x0]
   141d8:	mov    ecx,0x8
   141dd:	mov    edx,0x20
   141e2:	mov    rsi,rbp
   141e5:	mov    rdi,rbx
   141e8:	call   6140 <elf_access_unsigned@plt>
   141ed:	jmp    13d92 <elf_load_bsdsyms+0x342>
   141f2:	nop    WORD PTR [rax+rax*1+0x0]
   141f8:	lea    rsi,[rbp+0x28]
   141fc:	mov    edx,0x4
   14201:	mov    rdi,rbx
   14204:	call   6440 <elf_access_ok@plt>
   14209:	test   al,al
   1420b:	je     13d73 <elf_load_bsdsyms+0x323>
   14211:	mov    DWORD PTR [rbp+0x28],0x2
   14218:	jmp    13d73 <elf_load_bsdsyms+0x323>
   1421d:	nop    DWORD PTR [rax]
   14220:	lea    rsi,[rip+0x10398]        # 245bf <__FUNCTION__.13043+0x37f>
   14227:	mov    rdi,rbx
   1422a:	call   5a70 <elf_mark_broken@plt>
   1422f:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   14234:	nop    DWORD PTR [rax+0x0]
   14238:	mov    ecx,0x8
   1423d:	mov    edx,0x20
   14242:	mov    rsi,rbp
   14245:	mov    rdi,rbx
   14248:	call   6140 <elf_access_unsigned@plt>
   1424d:	mov    QWORD PTR [rsp+0x10],rax
   14252:	jmp    13e09 <elf_load_bsdsyms+0x3b9>
   14257:	nop    WORD PTR [rax+rax*1+0x0]
   14260:	mov    ecx,0x8
   14265:	mov    edx,0x20
   1426a:	mov    rsi,rbp
   1426d:	mov    rdi,rbx
   14270:	call   6140 <elf_access_unsigned@plt>
   14275:	mov    rcx,rax
   14278:	jmp    13e2b <elf_load_bsdsyms+0x3db>
   1427d:	nop    DWORD PTR [rax]
   14280:	mov    eax,DWORD PTR [rsp+0x8]
   14284:	mov    DWORD PTR [rbp+0x10],eax
   14287:	jmp    13e88 <elf_load_bsdsyms+0x438>
   1428c:	nop    DWORD PTR [rax+0x0]
   14290:	lea    rsi,[rip+0x10461]        # 246f8 <__FUNCTION__.13043+0x4b8>
   14297:	mov    rdi,rbx
   1429a:	call   5a70 <elf_mark_broken@plt>
   1429f:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   142a4:	nop    DWORD PTR [rax+0x0]
   142a8:	mov    DWORD PTR [rbp+0x18],0x2
   142af:	jmp    13d73 <elf_load_bsdsyms+0x323>
   142b4:	nop    DWORD PTR [rax+0x0]
   142b8:	mov    eax,r15d
   142bb:	sub    eax,DWORD PTR [rsp]
   142be:	mov    DWORD PTR [rbp+0x10],eax
   142c1:	jmp    13d50 <elf_load_bsdsyms+0x300>
   142c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   142d0:	lea    rsi,[rbp+0x18]
   142d4:	mov    edx,0x8
   142d9:	mov    rdi,rbx
   142dc:	call   6440 <elf_access_ok@plt>
   142e1:	test   al,al
   142e3:	je     13e88 <elf_load_bsdsyms+0x438>
   142e9:	sub    r15,QWORD PTR [rsp]
   142ed:	mov    QWORD PTR [rbp+0x18],r15
   142f1:	jmp    13e88 <elf_load_bsdsyms+0x438>
   142f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14300:	mov    ecx,0x8
   14305:	mov    edx,0x20
   1430a:	mov    rsi,rbp
   1430d:	mov    rdi,rbx
   14310:	call   6140 <elf_access_unsigned@plt>
   14315:	jmp    13ea7 <elf_load_bsdsyms+0x457>
   1431a:	nop    WORD PTR [rax+rax*1+0x0]
   14320:	lea    rsi,[rip+0x103f9]        # 24720 <__FUNCTION__.13043+0x4e0>
   14327:	mov    rdi,rbx
   1432a:	call   5a70 <elf_mark_broken@plt>
   1432f:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   14334:	nop    DWORD PTR [rax+0x0]
   14338:	lea    rsi,[rip+0x10411]        # 24750 <__FUNCTION__.13043+0x510>
   1433f:	mov    rdi,rbx
   14342:	call   5a70 <elf_mark_broken@plt>
   14347:	jmp    13a7b <elf_load_bsdsyms+0x2b>
   1434c:	call   5b80 <__stack_chk_fail@plt>
   14351:	nop    DWORD PTR [rax+rax*1+0x0]
   14356:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014360 <elf_load_binary>:
   14360:	push   r15
   14362:	push   r14
   14364:	push   r13
   14366:	push   r12
   14368:	push   rbp
   14369:	push   rbx
   1436a:	mov    rbx,rdi
   1436d:	sub    rsp,0x18
   14371:	mov    rax,QWORD PTR [rdi+0x40]
   14375:	lea    r13,[rax+rax*1]
   14379:	call   6280 <elf_phdr_count@plt>
   1437e:	test   eax,eax
   14380:	mov    DWORD PTR [rsp+0xc],eax
   14384:	je     1454f <elf_load_binary+0x1ef>
   1438a:	xor    r12d,r12d
   1438d:	jmp    1447d <elf_load_binary+0x11d>
   14392:	nop    WORD PTR [rax+rax*1+0x0]
   14398:	mov    ecx,0x4
   1439d:	mov    edx,0xc
   143a2:	mov    rsi,rbp
   143a5:	mov    rdi,rbx
   143a8:	call   6140 <elf_access_unsigned@plt>
   143ad:	cmp    BYTE PTR [rbx+0x10],0x2
   143b1:	mov    r15,rax
   143b4:	je     144de <elf_load_binary+0x17e>
   143ba:	mov    ecx,0x4
   143bf:	mov    edx,0x4
   143c4:	mov    rsi,rbp
   143c7:	mov    rdi,rbx
   143ca:	call   6140 <elf_access_unsigned@plt>
   143cf:	cmp    BYTE PTR [rbx+0x10],0x2
   143d3:	mov    QWORD PTR [rsp],rax
   143d7:	je     14501 <elf_load_binary+0x1a1>
   143dd:	mov    ecx,0x4
   143e2:	mov    edx,0x10
   143e7:	mov    rsi,rbp
   143ea:	mov    rdi,rbx
   143ed:	call   6140 <elf_access_unsigned@plt>
   143f2:	cmp    BYTE PTR [rbx+0x10],0x2
   143f6:	mov    r14,rax
   143f9:	je     14523 <elf_load_binary+0x1c3>
   143ff:	mov    rsi,rbp
   14402:	mov    ecx,0x4
   14407:	mov    edx,0x14
   1440c:	mov    rdi,rbx
   1440f:	call   6140 <elf_access_unsigned@plt>
   14414:	mov    rbp,rax
   14417:	mov    rsi,r15
   1441a:	mov    rdi,rbx
   1441d:	call   6180 <elf_get_ptr@plt>
   14422:	cmp    rbp,r13
   14425:	mov    r15,rax
   14428:	ja     14540 <elf_load_binary+0x1e0>
   1442e:	lea    r9,[r14+rax*1]
   14432:	lea    rdx,[rip+0x10197]        # 245d0 <__FUNCTION__.13043+0x390>
   14439:	mov    r8,rax
   1443c:	xor    esi,esi
   1443e:	xor    eax,eax
   14440:	mov    ecx,r12d
   14443:	mov    rdi,rbx
   14446:	sub    r13,rbp
   14449:	call   5e90 <elf_call_log_callback@plt>
   1444e:	mov    rdx,QWORD PTR [rsp]
   14452:	add    rdx,QWORD PTR [rbx]
   14455:	mov    r8,rbp
   14458:	mov    rcx,r14
   1445b:	mov    rsi,r15
   1445e:	mov    rdi,rbx
   14461:	call   132a0 <elf_load_image>
   14466:	test   eax,eax
   14468:	jne    14570 <elf_load_binary+0x210>
   1446e:	add    r12d,0x1
   14472:	cmp    DWORD PTR [rsp+0xc],r12d
   14477:	je     1454f <elf_load_binary+0x1ef>
   1447d:	mov    esi,r12d
   14480:	mov    rdi,rbx
   14483:	call   6350 <elf_phdr_by_index@plt>
   14488:	mov    edx,0x1
   1448d:	mov    rsi,rax
   14490:	mov    rdi,rbx
   14493:	mov    rbp,rax
   14496:	call   6440 <elf_access_ok@plt>
   1449b:	test   al,al
   1449d:	je     1454f <elf_load_binary+0x1ef>
   144a3:	mov    rsi,rbp
   144a6:	mov    rdi,rbx
   144a9:	call   5c90 <elf_phdr_is_loadable@plt>
   144ae:	test   al,al
   144b0:	je     1446e <elf_load_binary+0x10e>
   144b2:	cmp    BYTE PTR [rbx+0x10],0x2
   144b6:	jne    14398 <elf_load_binary+0x38>
   144bc:	mov    ecx,0x8
   144c1:	mov    edx,0x18
   144c6:	mov    rsi,rbp
   144c9:	mov    rdi,rbx
   144cc:	call   6140 <elf_access_unsigned@plt>
   144d1:	cmp    BYTE PTR [rbx+0x10],0x2
   144d5:	mov    r15,rax
   144d8:	jne    143ba <elf_load_binary+0x5a>
   144de:	mov    ecx,0x8
   144e3:	mov    edx,0x8
   144e8:	mov    rsi,rbp
   144eb:	mov    rdi,rbx
   144ee:	call   6140 <elf_access_unsigned@plt>
   144f3:	cmp    BYTE PTR [rbx+0x10],0x2
   144f7:	mov    QWORD PTR [rsp],rax
   144fb:	jne    143dd <elf_load_binary+0x7d>
   14501:	mov    ecx,0x8
   14506:	mov    edx,0x20
   1450b:	mov    rsi,rbp
   1450e:	mov    rdi,rbx
   14511:	call   6140 <elf_access_unsigned@plt>
   14516:	cmp    BYTE PTR [rbx+0x10],0x2
   1451a:	mov    r14,rax
   1451d:	jne    143ff <elf_load_binary+0x9f>
   14523:	mov    rsi,rbp
   14526:	mov    ecx,0x8
   1452b:	mov    edx,0x28
   14530:	mov    rdi,rbx
   14533:	call   6140 <elf_access_unsigned@plt>
   14538:	mov    rbp,rax
   1453b:	jmp    14417 <elf_load_binary+0xb7>
   14540:	lea    rsi,[rip+0x10241]        # 24788 <__FUNCTION__.13043+0x548>
   14547:	mov    rdi,rbx
   1454a:	call   5a70 <elf_mark_broken@plt>
   1454f:	mov    rdi,rbx
   14552:	call   13a50 <elf_load_bsdsyms>
   14557:	add    rsp,0x18
   1455b:	xor    eax,eax
   1455d:	pop    rbx
   1455e:	pop    rbp
   1455f:	pop    r12
   14561:	pop    r13
   14563:	pop    r14
   14565:	pop    r15
   14567:	ret    
   14568:	nop    DWORD PTR [rax+rax*1+0x0]
   14570:	add    rsp,0x18
   14574:	mov    eax,0xffffffff
   14579:	pop    rbx
   1457a:	pop    rbp
   1457b:	pop    r12
   1457d:	pop    r13
   1457f:	pop    r14
   14581:	pop    r15
   14583:	ret    
   14584:	xchg   ax,ax
   14586:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014590 <elf_lookup_addr>:
   14590:	push   r12
   14592:	push   rbp
   14593:	mov    rbp,rsi
   14596:	push   rbx
   14597:	mov    rbx,rdi
   1459a:	call   5f80 <elf_sym_by_name@plt>
   1459f:	test   rax,rax
   145a2:	je     14610 <elf_lookup_addr+0x80>
   145a4:	cmp    BYTE PTR [rbx+0x10],0x2
   145a8:	je     145f0 <elf_lookup_addr+0x60>
   145aa:	mov    ecx,0x4
   145af:	mov    edx,0x4
   145b4:	mov    rsi,rax
   145b7:	mov    rdi,rbx
   145ba:	call   6140 <elf_access_unsigned@plt>
   145bf:	mov    r12,rax
   145c2:	lea    rcx,[rip+0x10207]        # 247d0 <__func__.12147>
   145c9:	lea    rdx,[rip+0x10031]        # 24601 <__FUNCTION__.13043+0x3c1>
   145d0:	mov    r9,r12
   145d3:	mov    r8,rbp
   145d6:	mov    rdi,rbx
   145d9:	xor    eax,eax
   145db:	xor    esi,esi
   145dd:	call   5e90 <elf_call_log_callback@plt>
   145e2:	mov    rax,r12
   145e5:	pop    rbx
   145e6:	pop    rbp
   145e7:	pop    r12
   145e9:	ret    
   145ea:	nop    WORD PTR [rax+rax*1+0x0]
   145f0:	mov    ecx,0x8
   145f5:	mov    edx,0x8
   145fa:	mov    rsi,rax
   145fd:	mov    rdi,rbx
   14600:	call   6140 <elf_access_unsigned@plt>
   14605:	mov    r12,rax
   14608:	jmp    145c2 <elf_lookup_addr+0x32>
   1460a:	nop    WORD PTR [rax+rax*1+0x0]
   14610:	lea    rcx,[rip+0x101b9]        # 247d0 <__func__.12147>
   14617:	lea    rdx,[rip+0xffd0]        # 245ee <__FUNCTION__.13043+0x3ae>
   1461e:	mov    r8,rbp
   14621:	mov    rdi,rbx
   14624:	mov    r12,0xffffffffffffffff
   1462b:	mov    esi,0x1
   14630:	call   5e90 <elf_call_log_callback@plt>
   14635:	mov    rax,r12
   14638:	pop    rbx
   14639:	pop    rbp
   1463a:	pop    r12
   1463c:	ret    
   1463d:	nop    DWORD PTR [rax]

0000000000014640 <elf_xen_parse_features>:
   14640:	push   r15
   14642:	push   r14
   14644:	push   r13
   14646:	push   r12
   14648:	push   rbp
   14649:	push   rbx
   1464a:	sub    rsp,0x78
   1464e:	mov    rax,QWORD PTR fs:0x28
   14657:	mov    QWORD PTR [rsp+0x68],rax
   1465c:	xor    eax,eax
   1465e:	test   rdi,rdi
   14661:	mov    QWORD PTR [rsp+0x18],rsi
   14666:	mov    QWORD PTR [rsp+0x10],rdx
   1466b:	je     1476a <elf_xen_parse_features+0x12a>
   14671:	cmp    BYTE PTR [rdi],0x0
   14674:	mov    rbp,rdi
   14677:	je     14768 <elf_xen_parse_features+0x128>
   1467d:	lea    r15,[rsp+0x20]
   14682:	lea    r13,[rip+0x2186b7]        # 22cd40 <elf_xen_feature_names>
   14689:	xor    ebx,ebx
   1468b:	lea    rax,[r15+0x1]
   1468f:	mov    QWORD PTR [rsp+0x8],rax
   14694:	nop    DWORD PTR [rax+0x0]
   14698:	pxor   xmm0,xmm0
   1469c:	xor    eax,eax
   1469e:	movaps XMMWORD PTR [r15],xmm0
   146a2:	movaps XMMWORD PTR [r15+0x10],xmm0
   146a7:	movaps XMMWORD PTR [r15+0x20],xmm0
   146ac:	movaps XMMWORD PTR [r15+0x30],xmm0
   146b1:	jmp    146d3 <elf_xen_parse_features+0x93>
   146b3:	nop    DWORD PTR [rax+rax*1+0x0]
   146b8:	cmp    dl,0x7c
   146bb:	lea    r14d,[rax+0x1]
   146bf:	je     146e2 <elf_xen_parse_features+0xa2>
   146c1:	mov    BYTE PTR [r15+rax*1],dl
   146c5:	add    rax,0x1
   146c9:	cmp    rax,0x3f
   146cd:	je     147c8 <elf_xen_parse_features+0x188>
   146d3:	lea    edx,[rbx+rax*1]
   146d6:	mov    r14d,eax
   146d9:	movzx  edx,BYTE PTR [rbp+rdx*1+0x0]
   146de:	test   dl,dl
   146e0:	jne    146b8 <elf_xen_parse_features+0x78>
   146e2:	movzx  eax,BYTE PTR [rsp+0x20]
   146e7:	xor    r12d,r12d
   146ea:	lea    rsi,[rip+0x100ef]        # 247e0 <__func__.12147+0x10>
   146f1:	mov    BYTE PTR [rsp+0x7],al
   146f5:	jmp    1471f <elf_xen_parse_features+0xdf>
   146f7:	nop    WORD PTR [rax+rax*1+0x0]
   14700:	mov    rdi,r15
   14703:	call   5e10 <strcmp@plt>
   14708:	test   eax,eax
   1470a:	je     147b0 <elf_xen_parse_features+0x170>
   14710:	add    r12,0x1
   14714:	cmp    r12,0xc
   14718:	je     14790 <elf_xen_parse_features+0x150>
   1471a:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   1471f:	test   rsi,rsi
   14722:	je     14710 <elf_xen_parse_features+0xd0>
   14724:	cmp    BYTE PTR [rsp+0x7],0x21
   14729:	jne    14700 <elf_xen_parse_features+0xc0>
   1472b:	mov    rdi,QWORD PTR [rsp+0x8]
   14730:	call   5e10 <strcmp@plt>
   14735:	test   eax,eax
   14737:	jne    14710 <elf_xen_parse_features+0xd0>
   14739:	mov    ecx,r12d
   1473c:	mov    eax,0x1
   14741:	shl    eax,cl
   14743:	mov    rcx,QWORD PTR [rsp+0x18]
   14748:	or     DWORD PTR [rcx],eax
   1474a:	mov    rcx,QWORD PTR [rsp+0x10]
   1474f:	test   rcx,rcx
   14752:	je     14756 <elf_xen_parse_features+0x116>
   14754:	or     DWORD PTR [rcx],eax
   14756:	lea    eax,[rbx+r14*1]
   1475a:	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
   1475f:	mov    rbx,rax
   14762:	jne    14698 <elf_xen_parse_features+0x58>
   14768:	xor    eax,eax
   1476a:	mov    rcx,QWORD PTR [rsp+0x68]
   1476f:	xor    rcx,QWORD PTR fs:0x28
   14778:	jne    147d3 <elf_xen_parse_features+0x193>
   1477a:	add    rsp,0x78
   1477e:	pop    rbx
   1477f:	pop    rbp
   14780:	pop    r12
   14782:	pop    r13
   14784:	pop    r14
   14786:	pop    r15
   14788:	ret    
   14789:	nop    DWORD PTR [rax+0x0]
   14790:	cmp    QWORD PTR [rsp+0x10],0x0
   14796:	je     14756 <elf_xen_parse_features+0x116>
   14798:	cmp    BYTE PTR [rsp+0x7],0x21
   1479d:	jne    14756 <elf_xen_parse_features+0x116>
   1479f:	mov    eax,0xffffffff
   147a4:	jmp    1476a <elf_xen_parse_features+0x12a>
   147a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   147b0:	mov    ecx,r12d
   147b3:	mov    eax,0x1
   147b8:	shl    eax,cl
   147ba:	mov    rcx,QWORD PTR [rsp+0x18]
   147bf:	jmp    14754 <elf_xen_parse_features+0x114>
   147c1:	nop    DWORD PTR [rax+0x0]
   147c8:	mov    r14d,0x3f
   147ce:	jmp    146e2 <elf_xen_parse_features+0xa2>
   147d3:	call   5b80 <__stack_chk_fail@plt>
   147d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000147e0 <elf_xen_parse_note>:
   147e0:	push   r15
   147e2:	push   r14
   147e4:	mov    ecx,0x4
   147e9:	push   r13
   147eb:	push   r12
   147ed:	mov    r13,rdx
   147f0:	push   rbp
   147f1:	push   rbx
   147f2:	mov    r14,rsi
   147f5:	mov    edx,0x8
   147fa:	mov    rsi,r13
   147fd:	mov    rbx,rdi
   14800:	sub    rsp,0x18
   14804:	call   6140 <elf_access_unsigned@plt>
   14809:	cmp    eax,0x12
   1480c:	mov    rbp,rax
   1480f:	ja     14900 <elf_xen_parse_note+0x120>
   14815:	mov    r12d,eax
   14818:	lea    rax,[rip+0x2183e1]        # 22cc00 <note_desc.12017>
   1481f:	mov    rdx,r12
   14822:	shl    rdx,0x4
   14826:	add    rax,rdx
   14829:	mov    r15,QWORD PTR [rax]
   1482c:	test   r15,r15
   1482f:	je     14900 <elf_xen_parse_note+0x120>
   14835:	cmp    BYTE PTR [rax+0x8],0x0
   14839:	mov    rsi,r13
   1483c:	mov    rdi,rbx
   1483f:	jne    148a8 <elf_xen_parse_note+0xc8>
   14841:	call   6110 <elf_note_numeric@plt>
   14846:	lea    rdx,[rip+0xffd8]        # 24825 <__func__.12147+0x55>
   1484d:	mov    r8,rax
   14850:	mov    QWORD PTR [rsp+0x8],rax
   14855:	mov    rcx,r15
   14858:	xor    eax,eax
   1485a:	xor    esi,esi
   1485c:	mov    rdi,rbx
   1485f:	call   5e90 <elf_call_log_callback@plt>
   14864:	lea    rax,[r12+r12*2]
   14868:	mov    r10,QWORD PTR [rsp+0x8]
   1486d:	xor    r9d,r9d
   14870:	lea    rax,[r14+rax*8]
   14874:	mov    DWORD PTR [rax+0x18],0x1
   1487b:	mov    QWORD PTR [rax+0x28],r10
   1487f:	lea    rax,[r12+r12*2]
   14883:	cmp    ebp,0x12
   14886:	mov    QWORD PTR [r14+rax*8+0x20],r15
   1488b:	ja     14930 <elf_xen_parse_note+0x150>
   14891:	lea    rdx,[rip+0x10264]        # 24afc <__func__.12147+0x32c>
   14898:	movsxd rax,DWORD PTR [rdx+r12*4]
   1489c:	add    rax,rdx
   1489f:	jmp    rax
   148a1:	nop    DWORD PTR [rax+0x0]
   148a8:	call   62d0 <elf_note_desc@plt>
   148ad:	mov    rdi,rbx
   148b0:	mov    rsi,rax
   148b3:	call   5f10 <elf_strval@plt>
   148b8:	test   rax,rax
   148bb:	je     14930 <elf_xen_parse_note+0x150>
   148bd:	lea    rdx,[rip+0xff4b]        # 2480f <__func__.12147+0x3f>
   148c4:	mov    r8,rax
   148c7:	mov    QWORD PTR [rsp+0x8],rax
   148cc:	mov    rcx,r15
   148cf:	xor    eax,eax
   148d1:	xor    esi,esi
   148d3:	mov    rdi,rbx
   148d6:	call   5e90 <elf_call_log_callback@plt>
   148db:	lea    rax,[r12+r12*2]
   148df:	mov    r9,QWORD PTR [rsp+0x8]
   148e4:	xor    r10d,r10d
   148e7:	lea    rax,[r14+rax*8]
   148eb:	mov    DWORD PTR [rax+0x18],0x2
   148f2:	mov    QWORD PTR [rax+0x28],r9
   148f6:	jmp    1487f <elf_xen_parse_note+0x9f>
   148f8:	nop    DWORD PTR [rax+rax*1+0x0]
   14900:	lea    rdx,[rip+0xfeee]        # 247f5 <__func__.12147+0x25>
   14907:	xor    eax,eax
   14909:	mov    ecx,ebp
   1490b:	xor    esi,esi
   1490d:	mov    rdi,rbx
   14910:	call   5e90 <elf_call_log_callback@plt>
   14915:	xor    eax,eax
   14917:	add    rsp,0x18
   1491b:	pop    rbx
   1491c:	pop    rbp
   1491d:	pop    r12
   1491f:	pop    r13
   14921:	pop    r14
   14923:	pop    r15
   14925:	ret    
   14926:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14930:	add    rsp,0x18
   14934:	xor    eax,eax
   14936:	pop    rbx
   14937:	pop    rbp
   14938:	pop    r12
   1493a:	pop    r13
   1493c:	pop    r14
   1493e:	pop    r15
   14940:	ret    
   14941:	nop    DWORD PTR [rax+0x0]
   14948:	mov    DWORD PTR [r14+0x260],r10d
   1494f:	xor    eax,eax
   14951:	jmp    14917 <elf_xen_parse_note+0x137>
   14953:	nop    DWORD PTR [rax+rax*1+0x0]
   14958:	lea    rdi,[r14+0x210]
   1495f:	mov    edx,0xf
   14964:	mov    rsi,r9
   14967:	call   5980 <strncpy@plt>
   1496c:	mov    BYTE PTR [r14+0x21f],0x0
   14974:	xor    eax,eax
   14976:	jmp    14917 <elf_xen_parse_note+0x137>
   14978:	nop    DWORD PTR [rax+rax*1+0x0]
   14980:	lea    rdi,[rip+0xfeb4]        # 2483b <__func__.12147+0x6b>
   14987:	mov    ecx,0x4
   1498c:	mov    rsi,r9
   1498f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14991:	seta   al
   14994:	sbb    al,0x0
   14996:	test   al,al
   14998:	jne    149a5 <elf_xen_parse_note+0x1c5>
   1499a:	mov    DWORD PTR [r14+0x220],0x2
   149a5:	lea    rsi,[rip+0xfe93]        # 2483f <__func__.12147+0x6f>
   149ac:	mov    rdi,r9
   149af:	call   65c0 <strstr@plt>
   149b4:	test   rax,rax
   149b7:	je     14930 <elf_xen_parse_note+0x150>
   149bd:	mov    DWORD PTR [r14+0x220],0x3
   149c8:	xor    eax,eax
   149ca:	jmp    14917 <elf_xen_parse_note+0x137>
   149cf:	nop
   149d0:	lea    rdx,[r14+0x25c]
   149d7:	lea    rsi,[r14+0x258]
   149de:	mov    rdi,r9
   149e1:	call   5930 <elf_xen_parse_features@plt>
   149e6:	test   eax,eax
   149e8:	setne  al
   149eb:	movzx  eax,al
   149ee:	neg    eax
   149f0:	jmp    14917 <elf_xen_parse_note+0x137>
   149f5:	nop    DWORD PTR [rax]
   149f8:	lea    rdi,[rip+0xfe3c]        # 2483b <__func__.12147+0x6b>
   149ff:	mov    ecx,0x4
   14a04:	mov    rsi,r9
   14a07:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14a09:	seta   al
   14a0c:	sbb    al,0x0
   14a0e:	movsx  eax,al
   14a11:	test   eax,eax
   14a13:	jne    14930 <elf_xen_parse_note+0x150>
   14a19:	mov    BYTE PTR [r14+0x224],0x1
   14a21:	jmp    14917 <elf_xen_parse_note+0x137>
   14a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14a30:	mov    QWORD PTR [r14+0x240],r10
   14a37:	xor    eax,eax
   14a39:	jmp    14917 <elf_xen_parse_note+0x137>
   14a3e:	xchg   ax,ax
   14a40:	mov    QWORD PTR [r14+0x248],r10
   14a47:	xor    eax,eax
   14a49:	jmp    14917 <elf_xen_parse_note+0x137>
   14a4e:	xchg   ax,ax
   14a50:	test   r10,r10
   14a53:	setne  BYTE PTR [r14+0x225]
   14a5b:	xor    eax,eax
   14a5d:	jmp    14917 <elf_xen_parse_note+0x137>
   14a62:	nop    WORD PTR [rax+rax*1+0x0]
   14a68:	xor    ecx,ecx
   14a6a:	mov    edx,0x4
   14a6f:	mov    rsi,r13
   14a72:	mov    rdi,rbx
   14a75:	call   5d00 <elf_note_numeric_array@plt>
   14a7a:	or     DWORD PTR [r14+0x258],eax
   14a81:	xor    eax,eax
   14a83:	jmp    14917 <elf_xen_parse_note+0x137>
   14a88:	nop    DWORD PTR [rax+rax*1+0x0]
   14a90:	mov    QWORD PTR [r14+0x250],r10
   14a97:	xor    eax,eax
   14a99:	jmp    14917 <elf_xen_parse_note+0x137>
   14a9e:	xchg   ax,ax
   14aa0:	lea    rdi,[r14+0x200]
   14aa7:	mov    edx,0xf
   14aac:	mov    rsi,r9
   14aaf:	call   5980 <strncpy@plt>
   14ab4:	mov    BYTE PTR [r14+0x20f],0x0
   14abc:	xor    eax,eax
   14abe:	jmp    14917 <elf_xen_parse_note+0x137>
   14ac3:	nop    DWORD PTR [rax+rax*1+0x0]
   14ac8:	lea    rdi,[r14+0x1e0]
   14acf:	mov    edx,0xf
   14ad4:	mov    rsi,r9
   14ad7:	call   5980 <strncpy@plt>
   14adc:	mov    BYTE PTR [r14+0x1ef],0x0
   14ae4:	xor    eax,eax
   14ae6:	jmp    14917 <elf_xen_parse_note+0x137>
   14aeb:	nop    DWORD PTR [rax+rax*1+0x0]
   14af0:	lea    rdi,[r14+0x1f0]
   14af7:	mov    edx,0xf
   14afc:	mov    rsi,r9
   14aff:	call   5980 <strncpy@plt>
   14b04:	mov    BYTE PTR [r14+0x1ff],0x0
   14b0c:	xor    eax,eax
   14b0e:	jmp    14917 <elf_xen_parse_note+0x137>
   14b13:	nop    DWORD PTR [rax+rax*1+0x0]
   14b18:	mov    QWORD PTR [r14+0x238],r10
   14b1f:	xor    eax,eax
   14b21:	jmp    14917 <elf_xen_parse_note+0x137>
   14b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14b30:	mov    QWORD PTR [r14+0x228],r10
   14b37:	xor    eax,eax
   14b39:	jmp    14917 <elf_xen_parse_note+0x137>
   14b3e:	xchg   ax,ax
   14b40:	mov    QWORD PTR [r14+0x230],r10
   14b47:	xor    eax,eax
   14b49:	jmp    14917 <elf_xen_parse_note+0x137>
   14b4e:	xchg   ax,ax

0000000000014b50 <elf_xen_parse_notes>:
   14b50:	push   r15
   14b52:	push   r14
   14b54:	push   r13
   14b56:	push   r12
   14b58:	mov    r12,rsi
   14b5b:	push   rbp
   14b5c:	push   rbx
   14b5d:	sub    rsp,0x8
   14b61:	cmp    rdx,rcx
   14b64:	mov    QWORD PTR [rsi+0x8],rdx
   14b68:	mov    QWORD PTR [rsi+0x10],rcx
   14b6c:	jae    14c30 <elf_xen_parse_notes+0xe0>
   14b72:	mov    eax,DWORD PTR [r8]
   14b75:	mov    rbx,rdi
   14b78:	mov    rbp,r8
   14b7b:	cmp    eax,0xffff
   14b80:	ja     14c0b <elf_xen_parse_notes+0xbb>
   14b86:	mov    r15,rdx
   14b89:	xor    r13d,r13d
   14b8c:	lea    r14,[rip+0xfcc7]        # 2485a <__func__.12147+0x8a>
   14b93:	jmp    14ba2 <elf_xen_parse_notes+0x52>
   14b95:	nop    DWORD PTR [rax]
   14b98:	mov    eax,DWORD PTR [rbp+0x0]
   14b9b:	cmp    eax,0xffff
   14ba0:	ja     14c10 <elf_xen_parse_notes+0xc0>
   14ba2:	add    eax,0x1
   14ba5:	mov    rsi,r15
   14ba8:	mov    rdi,rbx
   14bab:	mov    DWORD PTR [rbp+0x0],eax
   14bae:	call   5bd0 <elf_note_name@plt>
   14bb3:	test   rax,rax
   14bb6:	mov    rsi,rax
   14bb9:	je     14be4 <elf_xen_parse_notes+0x94>
   14bbb:	mov    ecx,0x4
   14bc0:	mov    rdi,r14
   14bc3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14bc5:	seta   al
   14bc8:	sbb    al,0x0
   14bca:	test   al,al
   14bcc:	jne    14be4 <elf_xen_parse_notes+0x94>
   14bce:	mov    rdx,r15
   14bd1:	mov    rsi,r12
   14bd4:	mov    rdi,rbx
   14bd7:	call   61a0 <elf_xen_parse_note@plt>
   14bdc:	test   eax,eax
   14bde:	jne    14c28 <elf_xen_parse_notes+0xd8>
   14be0:	add    r13d,0x1
   14be4:	mov    rsi,r15
   14be7:	mov    rdi,rbx
   14bea:	call   60d0 <elf_note_next@plt>
   14bef:	cmp    QWORD PTR [r12+0x10],rax
   14bf4:	mov    r15,rax
   14bf7:	ja     14b98 <elf_xen_parse_notes+0x48>
   14bf9:	add    rsp,0x8
   14bfd:	mov    eax,r13d
   14c00:	pop    rbx
   14c01:	pop    rbp
   14c02:	pop    r12
   14c04:	pop    r13
   14c06:	pop    r14
   14c08:	pop    r15
   14c0a:	ret    
   14c0b:	xor    r13d,r13d
   14c0e:	xchg   ax,ax
   14c10:	lea    rsi,[rip+0xfc30]        # 24847 <__func__.12147+0x77>
   14c17:	mov    rdi,rbx
   14c1a:	call   5a70 <elf_mark_broken@plt>
   14c1f:	jmp    14bf9 <elf_xen_parse_notes+0xa9>
   14c21:	nop    DWORD PTR [rax+0x0]
   14c28:	mov    r13d,0xffffffff
   14c2e:	jmp    14bf9 <elf_xen_parse_notes+0xa9>
   14c30:	xor    r13d,r13d
   14c33:	jmp    14bf9 <elf_xen_parse_notes+0xa9>
   14c35:	nop
   14c36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014c40 <elf_xen_parse_guest_info>:
   14c40:	push   r15
   14c42:	push   r14
   14c44:	mov    r15,rsi
   14c47:	push   r13
   14c49:	push   r12
   14c4b:	push   rbp
   14c4c:	push   rbx
   14c4d:	mov    rbp,rdi
   14c50:	sub    rsp,0xd8
   14c57:	mov    rbx,QWORD PTR [rsi]
   14c5a:	lea    r14,[rsp+0x20]
   14c5f:	mov    rax,QWORD PTR fs:0x28
   14c68:	mov    QWORD PTR [rsp+0xc8],rax
   14c70:	xor    eax,eax
   14c72:	lea    rax,[r14+0x1f]
   14c76:	mov    QWORD PTR [rsp+0x8],rax
   14c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14c80:	xor    edx,edx
   14c82:	mov    ecx,0x1
   14c87:	mov    rsi,rbx
   14c8a:	mov    rdi,rbp
   14c8d:	call   6140 <elf_access_unsigned@plt>
   14c92:	test   rax,rax
   14c95:	je     14ef5 <elf_xen_parse_guest_info+0x2b5>
   14c9b:	pxor   xmm0,xmm0
   14c9f:	lea    rdi,[rsp+0x40]
   14ca4:	mov    ecx,0x10
   14ca9:	xor    eax,eax
   14cab:	mov    r12,r14
   14cae:	mov    QWORD PTR [rsp+0x10],rdi
   14cb3:	movaps XMMWORD PTR [r14],xmm0
   14cb7:	rep stos QWORD PTR es:[rdi],rax
   14cba:	movaps XMMWORD PTR [r14+0x10],xmm0
   14cbf:	jmp    14d29 <elf_xen_parse_guest_info+0xe9>
   14cc1:	nop    DWORD PTR [rax+0x0]
   14cc8:	xor    edx,edx
   14cca:	mov    ecx,0x1
   14ccf:	mov    rsi,rbx
   14cd2:	mov    rdi,rbp
   14cd5:	lea    r13,[rbx+0x1]
   14cd9:	call   6140 <elf_access_unsigned@plt>
   14cde:	cmp    rax,0x2c
   14ce2:	je     14fc0 <elf_xen_parse_guest_info+0x380>
   14ce8:	xor    edx,edx
   14cea:	mov    ecx,0x1
   14cef:	mov    rsi,rbx
   14cf2:	mov    rdi,rbp
   14cf5:	call   6140 <elf_access_unsigned@plt>
   14cfa:	cmp    rax,0x3d
   14cfe:	je     14f48 <elf_xen_parse_guest_info+0x308>
   14d04:	xor    edx,edx
   14d06:	mov    rsi,rbx
   14d09:	mov    ecx,0x1
   14d0e:	mov    rdi,rbp
   14d11:	add    r12,0x1
   14d15:	mov    rbx,r13
   14d18:	call   6140 <elf_access_unsigned@plt>
   14d1d:	mov    BYTE PTR [r12-0x1],al
   14d22:	cmp    r12,QWORD PTR [rsp+0x8]
   14d27:	je     14d40 <elf_xen_parse_guest_info+0x100>
   14d29:	xor    edx,edx
   14d2b:	mov    ecx,0x1
   14d30:	mov    rsi,rbx
   14d33:	mov    rdi,rbp
   14d36:	call   6140 <elf_access_unsigned@plt>
   14d3b:	test   rax,rax
   14d3e:	jne    14cc8 <elf_xen_parse_guest_info+0x88>
   14d40:	mov    r8,QWORD PTR [rsp+0x10]
   14d45:	lea    rdx,[rip+0xfb12]        # 2485e <__func__.12147+0x8e>
   14d4c:	xor    esi,esi
   14d4e:	xor    eax,eax
   14d50:	mov    rcx,r14
   14d53:	mov    rdi,rbp
   14d56:	call   5e90 <elf_call_log_callback@plt>
   14d5b:	lea    rdi,[rip+0xfb0a]        # 2486c <__func__.12147+0x9c>
   14d62:	mov    ecx,0x7
   14d67:	mov    rsi,r14
   14d6a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14d6c:	seta   al
   14d6f:	sbb    al,0x0
   14d71:	test   al,al
   14d73:	je     150c8 <elf_xen_parse_guest_info+0x488>
   14d79:	lea    rdi,[rip+0xfaf3]        # 24873 <__func__.12147+0xa3>
   14d80:	mov    ecx,0x9
   14d85:	mov    rsi,r14
   14d88:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14d8a:	seta   al
   14d8d:	sbb    al,0x0
   14d8f:	test   al,al
   14d91:	je     150a0 <elf_xen_parse_guest_info+0x460>
   14d97:	lea    rdi,[rip+0xfade]        # 2487c <__func__.12147+0xac>
   14d9e:	mov    ecx,0xa
   14da3:	mov    rsi,r14
   14da6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14da8:	seta   al
   14dab:	sbb    al,0x0
   14dad:	test   al,al
   14daf:	je     15078 <elf_xen_parse_guest_info+0x438>
   14db5:	lea    rdi,[rip+0xfaca]        # 24886 <__func__.12147+0xb6>
   14dbc:	mov    ecx,0x8
   14dc1:	mov    rsi,r14
   14dc4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14dc6:	seta   al
   14dc9:	sbb    al,0x0
   14dcb:	test   al,al
   14dcd:	je     15050 <elf_xen_parse_guest_info+0x410>
   14dd3:	lea    rdi,[rip+0xfab4]        # 2488e <__func__.12147+0xbe>
   14dda:	mov    ecx,0x4
   14ddf:	mov    rsi,r14
   14de2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14de4:	seta   al
   14de7:	sbb    al,0x0
   14de9:	test   al,al
   14deb:	jne    14e18 <elf_xen_parse_guest_info+0x1d8>
   14ded:	mov    rsi,QWORD PTR [rsp+0x10]
   14df2:	lea    rdi,[rip+0xfa99]        # 24892 <__func__.12147+0xc2>
   14df9:	mov    ecx,0x12
   14dfe:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e00:	seta   al
   14e03:	sbb    al,0x0
   14e05:	test   al,al
   14e07:	jne    150f0 <elf_xen_parse_guest_info+0x4b0>
   14e0d:	mov    DWORD PTR [r15+0x220],0x2
   14e18:	lea    rdi,[rip+0xfa85]        # 248a4 <__func__.12147+0xd4>
   14e1f:	mov    ecx,0xb
   14e24:	mov    rsi,r14
   14e27:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e29:	seta   al
   14e2c:	sbb    al,0x0
   14e2e:	test   al,al
   14e30:	jne    14e3a <elf_xen_parse_guest_info+0x1fa>
   14e32:	mov    BYTE PTR [r15+0x224],0x1
   14e3a:	lea    rdi,[rip+0xfa6e]        # 248af <__func__.12147+0xdf>
   14e41:	mov    ecx,0xa
   14e46:	mov    rsi,r14
   14e49:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e4b:	seta   al
   14e4e:	sbb    al,0x0
   14e50:	test   al,al
   14e52:	je     15030 <elf_xen_parse_guest_info+0x3f0>
   14e58:	lea    rdi,[rip+0xfa5a]        # 248b9 <__func__.12147+0xe9>
   14e5f:	mov    ecx,0xb
   14e64:	mov    rsi,r14
   14e67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e69:	seta   al
   14e6c:	sbb    al,0x0
   14e6e:	test   al,al
   14e70:	je     15010 <elf_xen_parse_guest_info+0x3d0>
   14e76:	lea    rdi,[rip+0xfa47]        # 248c4 <__func__.12147+0xf4>
   14e7d:	mov    ecx,0x11
   14e82:	mov    rsi,r14
   14e85:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e87:	seta   al
   14e8a:	sbb    al,0x0
   14e8c:	test   al,al
   14e8e:	je     14ff0 <elf_xen_parse_guest_info+0x3b0>
   14e94:	lea    rdi,[rip+0xfa3a]        # 248d5 <__func__.12147+0x105>
   14e9b:	mov    ecx,0xf
   14ea0:	mov    rsi,r14
   14ea3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14ea5:	seta   al
   14ea8:	sbb    al,0x0
   14eaa:	test   al,al
   14eac:	je     14fd0 <elf_xen_parse_guest_info+0x390>
   14eb2:	lea    rdi,[rip+0xfbb6]        # 24a6f <__func__.12147+0x29f>
   14eb9:	mov    ecx,0x9
   14ebe:	mov    rsi,r14
   14ec1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14ec3:	seta   al
   14ec6:	sbb    al,0x0
   14ec8:	test   al,al
   14eca:	jne    14c80 <elf_xen_parse_guest_info+0x40>
   14ed0:	mov    rdi,QWORD PTR [rsp+0x10]
   14ed5:	lea    rdx,[r15+0x25c]
   14edc:	lea    rsi,[r15+0x258]
   14ee3:	call   5930 <elf_xen_parse_features@plt>
   14ee8:	test   eax,eax
   14eea:	je     14c80 <elf_xen_parse_guest_info+0x40>
   14ef0:	mov    eax,0xffffffff
   14ef5:	mov    rdx,QWORD PTR [r15+0x228]
   14efc:	cmp    rdx,0xffffffffffffffff
   14f00:	je     14f19 <elf_xen_parse_guest_info+0x2d9>
   14f02:	mov    rcx,QWORD PTR [r15+0x238]
   14f09:	cmp    rcx,0xffffffffffffffff
   14f0d:	je     14f19 <elf_xen_parse_guest_info+0x2d9>
   14f0f:	add    rdx,rcx
   14f12:	mov    QWORD PTR [r15+0x238],rdx
   14f19:	mov    rdx,QWORD PTR [rsp+0xc8]
   14f21:	xor    rdx,QWORD PTR fs:0x28
   14f2a:	jne    15120 <elf_xen_parse_guest_info+0x4e0>
   14f30:	add    rsp,0xd8
   14f37:	pop    rbx
   14f38:	pop    rbp
   14f39:	pop    r12
   14f3b:	pop    r13
   14f3d:	pop    r14
   14f3f:	pop    r15
   14f41:	ret    
   14f42:	nop    WORD PTR [rax+rax*1+0x0]
   14f48:	mov    rax,QWORD PTR [rsp+0x10]
   14f4d:	mov    r12,rax
   14f50:	add    rax,0x7f
   14f54:	mov    QWORD PTR [rsp+0x18],rax
   14f59:	jmp    14fa9 <elf_xen_parse_guest_info+0x369>
   14f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   14f60:	xor    edx,edx
   14f62:	mov    ecx,0x1
   14f67:	mov    rsi,r13
   14f6a:	mov    rdi,rbp
   14f6d:	lea    rbx,[r13+0x1]
   14f71:	call   6140 <elf_access_unsigned@plt>
   14f76:	cmp    rax,0x2c
   14f7a:	je     14d40 <elf_xen_parse_guest_info+0x100>
   14f80:	xor    edx,edx
   14f82:	mov    rsi,r13
   14f85:	mov    ecx,0x1
   14f8a:	mov    rdi,rbp
   14f8d:	add    r12,0x1
   14f91:	mov    r13,rbx
   14f94:	call   6140 <elf_access_unsigned@plt>
   14f99:	mov    BYTE PTR [r12-0x1],al
   14f9e:	cmp    r12,QWORD PTR [rsp+0x18]
   14fa3:	je     14d40 <elf_xen_parse_guest_info+0x100>
   14fa9:	xor    edx,edx
   14fab:	mov    ecx,0x1
   14fb0:	mov    rsi,r13
   14fb3:	mov    rdi,rbp
   14fb6:	call   6140 <elf_access_unsigned@plt>
   14fbb:	test   rax,rax
   14fbe:	jne    14f60 <elf_xen_parse_guest_info+0x320>
   14fc0:	mov    rbx,r13
   14fc3:	jmp    14d40 <elf_xen_parse_guest_info+0x100>
   14fc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14fd0:	mov    rdi,QWORD PTR [rsp+0x10]
   14fd5:	xor    edx,edx
   14fd7:	xor    esi,esi
   14fd9:	call   5db0 <strtoull@plt>
   14fde:	shl    rax,0xc
   14fe2:	mov    QWORD PTR [r15+0x238],rax
   14fe9:	jmp    14eb2 <elf_xen_parse_guest_info+0x272>
   14fee:	xchg   ax,ax
   14ff0:	mov    rdi,QWORD PTR [rsp+0x10]
   14ff5:	xor    edx,edx
   14ff7:	xor    esi,esi
   14ff9:	call   5db0 <strtoull@plt>
   14ffe:	mov    QWORD PTR [r15+0x250],rax
   15005:	jmp    14e94 <elf_xen_parse_guest_info+0x254>
   1500a:	nop    WORD PTR [rax+rax*1+0x0]
   15010:	mov    rdi,QWORD PTR [rsp+0x10]
   15015:	xor    edx,edx
   15017:	xor    esi,esi
   15019:	call   5db0 <strtoull@plt>
   1501e:	mov    QWORD PTR [r15+0x230],rax
   15025:	jmp    14e76 <elf_xen_parse_guest_info+0x236>
   1502a:	nop    WORD PTR [rax+rax*1+0x0]
   15030:	mov    rdi,QWORD PTR [rsp+0x10]
   15035:	xor    edx,edx
   15037:	xor    esi,esi
   15039:	call   5db0 <strtoull@plt>
   1503e:	mov    QWORD PTR [r15+0x228],rax
   15045:	jmp    14e58 <elf_xen_parse_guest_info+0x218>
   1504a:	nop    WORD PTR [rax+rax*1+0x0]
   15050:	mov    rsi,QWORD PTR [rsp+0x10]
   15055:	lea    rdi,[r15+0x200]
   1505c:	mov    edx,0xf
   15061:	call   5980 <strncpy@plt>
   15066:	mov    BYTE PTR [r15+0x20f],0x0
   1506e:	jmp    14dd3 <elf_xen_parse_guest_info+0x193>
   15073:	nop    DWORD PTR [rax+rax*1+0x0]
   15078:	mov    rsi,QWORD PTR [rsp+0x10]
   1507d:	lea    rdi,[r15+0x1f0]
   15084:	mov    edx,0xf
   15089:	call   5980 <strncpy@plt>
   1508e:	mov    BYTE PTR [r15+0x1ff],0x0
   15096:	jmp    14db5 <elf_xen_parse_guest_info+0x175>
   1509b:	nop    DWORD PTR [rax+rax*1+0x0]
   150a0:	mov    rsi,QWORD PTR [rsp+0x10]
   150a5:	lea    rdi,[r15+0x1e0]
   150ac:	mov    edx,0xf
   150b1:	call   5980 <strncpy@plt>
   150b6:	mov    BYTE PTR [r15+0x1ef],0x0
   150be:	jmp    14d97 <elf_xen_parse_guest_info+0x157>
   150c3:	nop    DWORD PTR [rax+rax*1+0x0]
   150c8:	mov    rsi,QWORD PTR [rsp+0x10]
   150cd:	lea    rdi,[r15+0x210]
   150d4:	mov    edx,0xf
   150d9:	call   5980 <strncpy@plt>
   150de:	mov    BYTE PTR [r15+0x21f],0x0
   150e6:	jmp    14d79 <elf_xen_parse_guest_info+0x139>
   150eb:	nop    DWORD PTR [rax+rax*1+0x0]
   150f0:	mov    rsi,QWORD PTR [rsp+0x10]
   150f5:	lea    rdi,[rip+0xf73f]        # 2483b <__func__.12147+0x6b>
   150fc:	mov    ecx,0x3
   15101:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15103:	seta   al
   15106:	sbb    al,0x0
   15108:	test   al,al
   1510a:	jne    14e18 <elf_xen_parse_guest_info+0x1d8>
   15110:	mov    DWORD PTR [r15+0x220],0x1
   1511b:	jmp    14e18 <elf_xen_parse_guest_info+0x1d8>
   15120:	call   5b80 <__stack_chk_fail@plt>
   15125:	nop
   15126:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015130 <elf_xen_parse>:
   15130:	push   r15
   15132:	push   r14
   15134:	mov    rcx,rsi
   15137:	push   r13
   15139:	push   r12
   1513b:	mov    r12,rsi
   1513e:	push   rbp
   1513f:	push   rbx
   15140:	mov    rbx,rdi
   15143:	lea    rdi,[rsi+0x8]
   15147:	xor    r13d,r13d
   1514a:	xor    r15d,r15d
   1514d:	sub    rsp,0x28
   15151:	and    rdi,0xfffffffffffffff8
   15155:	mov    DWORD PTR [rsp+0x14],0x0
   1515d:	sub    rcx,rdi
   15160:	mov    rax,QWORD PTR fs:0x28
   15169:	mov    QWORD PTR [rsp+0x18],rax
   1516e:	xor    eax,eax
   15170:	add    ecx,0x278
   15176:	mov    QWORD PTR [rsi],0x0
   1517d:	mov    QWORD PTR [rsi+0x270],0x0
   15188:	shr    ecx,0x3
   1518b:	rep stos QWORD PTR es:[rdi],rax
   1518e:	mov    rax,0xffffffffffffffff
   15195:	mov    rdi,rbx
   15198:	mov    QWORD PTR [rsi+0x228],rax
   1519f:	mov    QWORD PTR [rsi+0x230],rax
   151a6:	mov    QWORD PTR [rsi+0x238],rax
   151ad:	mov    QWORD PTR [rsi+0x240],rax
   151b4:	mov    QWORD PTR [rsi+0x248],rax
   151bb:	mov    QWORD PTR [rsi+0x250],rax
   151c2:	mov    DWORD PTR [rsi+0x260],eax
   151c8:	call   6280 <elf_phdr_count@plt>
   151cd:	mov    r14d,eax
   151d0:	lea    rax,[rsp+0x14]
   151d5:	test   r14d,r14d
   151d8:	mov    QWORD PTR [rsp+0x8],rax
   151dd:	jne    15282 <elf_xen_parse+0x152>
   151e3:	jmp    15570 <elf_xen_parse+0x440>
   151e8:	nop    DWORD PTR [rax+rax*1+0x0]
   151f0:	xor    edx,edx
   151f2:	mov    ecx,0x4
   151f7:	mov    rsi,rbp
   151fa:	mov    rdi,rbx
   151fd:	call   6140 <elf_access_unsigned@plt>
   15202:	cmp    rax,0x4
   15206:	setne  al
   15209:	test   al,al
   1520b:	jne    15279 <elf_xen_parse+0x149>
   1520d:	cmp    BYTE PTR [rbx+0x10],0x2
   15211:	mov    ecx,0x8
   15216:	mov    edx,0x8
   1521b:	je     15227 <elf_xen_parse+0xf7>
   1521d:	mov    ecx,0x4
   15222:	mov    edx,0x4
   15227:	mov    rsi,rbp
   1522a:	mov    rdi,rbx
   1522d:	call   6140 <elf_access_unsigned@plt>
   15232:	test   rax,rax
   15235:	sete   al
   15238:	test   al,al
   1523a:	jne    15279 <elf_xen_parse+0x149>
   1523c:	mov    rsi,rbp
   1523f:	mov    rdi,rbx
   15242:	call   6040 <elf_segment_end@plt>
   15247:	mov    rsi,rbp
   1524a:	mov    rdi,rbx
   1524d:	mov    QWORD PTR [rsp],rax
   15251:	call   6130 <elf_segment_start@plt>
   15256:	mov    r8,QWORD PTR [rsp+0x8]
   1525b:	mov    rcx,QWORD PTR [rsp]
   1525f:	mov    rdx,rax
   15262:	mov    rsi,r12
   15265:	mov    rdi,rbx
   15268:	call   14b50 <elf_xen_parse_notes>
   1526d:	cmp    eax,0xffffffff
   15270:	je     157b6 <elf_xen_parse+0x686>
   15276:	add    r15d,eax
   15279:	add    r13d,0x1
   1527d:	cmp    r14d,r13d
   15280:	je     152a8 <elf_xen_parse+0x178>
   15282:	mov    esi,r13d
   15285:	mov    rdi,rbx
   15288:	call   6350 <elf_phdr_by_index@plt>
   1528d:	mov    edx,0x1
   15292:	mov    rsi,rax
   15295:	mov    rdi,rbx
   15298:	mov    rbp,rax
   1529b:	call   6440 <elf_access_ok@plt>
   152a0:	test   al,al
   152a2:	jne    151f0 <elf_xen_parse+0xc0>
   152a8:	test   r15d,r15d
   152ab:	je     15570 <elf_xen_parse+0x440>
   152b1:	cmp    QWORD PTR [r12+0x8],0x0
   152b7:	mov    rsi,QWORD PTR [rbx+0x18]
   152bb:	mov    ecx,0x2
   152c0:	mov    edx,0x12
   152c5:	mov    rdi,rbx
   152c8:	jne    154b0 <elf_xen_parse+0x380>
   152ce:	cmp    QWORD PTR [r12],0x0
   152d3:	jne    154b0 <elf_xen_parse+0x380>
   152d9:	call   6140 <elf_access_unsigned@plt>
   152de:	cmp    eax,0x3
   152e1:	je     158aa <elf_xen_parse+0x77a>
   152e7:	cmp    eax,0x3e
   152ea:	je     158aa <elf_xen_parse+0x77a>
   152f0:	mov    rax,QWORD PTR [r12+0x250]
   152f8:	mov    rbp,QWORD PTR [r12+0x228]
   15300:	cmp    rax,0xffffffffffffffff
   15304:	je     156c0 <elf_xen_parse+0x590>
   1530a:	cmp    rbp,0xffffffffffffffff
   1530e:	je     1589e <elf_xen_parse+0x76e>
   15314:	sub    rbp,rax
   15317:	mov    rax,QWORD PTR [rbx+0x48]
   1531b:	add    rax,rbp
   1531e:	mov    QWORD PTR [r12+0x268],rax
   15326:	mov    rax,QWORD PTR [rbx+0x50]
   1532a:	add    rax,rbp
   1532d:	cmp    QWORD PTR [r12+0x230],0xffffffffffffffff
   15336:	mov    QWORD PTR [r12+0x270],rax
   1533e:	je     15740 <elf_xen_parse+0x610>
   15344:	cmp    BYTE PTR [r12+0x224],0x0
   1534d:	jne    15777 <elf_xen_parse+0x647>
   15353:	lea    rdx,[rip+0xf5d2]        # 2492c <__func__.12147+0x15c>
   1535a:	xor    esi,esi
   1535c:	xor    eax,eax
   1535e:	mov    rdi,rbx
   15361:	call   5e90 <elf_call_log_callback@plt>
   15366:	mov    rcx,QWORD PTR [r12+0x228]
   1536e:	lea    rdx,[rip+0xf5c8]        # 2493d <__func__.12147+0x16d>
   15375:	xor    esi,esi
   15377:	xor    eax,eax
   15379:	mov    rdi,rbx
   1537c:	call   5e90 <elf_call_log_callback@plt>
   15381:	mov    rcx,QWORD PTR [r12+0x250]
   15389:	lea    rdx,[rip+0xf5cb]        # 2495b <__func__.12147+0x18b>
   15390:	xor    esi,esi
   15392:	xor    eax,eax
   15394:	mov    rdi,rbx
   15397:	call   5e90 <elf_call_log_callback@plt>
   1539c:	lea    rdx,[rip+0xf5d6]        # 24979 <__func__.12147+0x1a9>
   153a3:	xor    esi,esi
   153a5:	xor    eax,eax
   153a7:	mov    rcx,rbp
   153aa:	mov    rdi,rbx
   153ad:	call   5e90 <elf_call_log_callback@plt>
   153b2:	mov    rcx,QWORD PTR [r12+0x268]
   153ba:	lea    rdx,[rip+0xf5d6]        # 24997 <__func__.12147+0x1c7>
   153c1:	xor    esi,esi
   153c3:	xor    eax,eax
   153c5:	mov    rdi,rbx
   153c8:	call   5e90 <elf_call_log_callback@plt>
   153cd:	mov    rcx,QWORD PTR [r12+0x270]
   153d5:	lea    rdx,[rip+0xf5d9]        # 249b5 <__func__.12147+0x1e5>
   153dc:	xor    esi,esi
   153de:	xor    eax,eax
   153e0:	mov    rdi,rbx
   153e3:	call   5e90 <elf_call_log_callback@plt>
   153e8:	mov    rcx,QWORD PTR [r12+0x230]
   153f0:	lea    rdx,[rip+0xf5dc]        # 249d3 <__func__.12147+0x203>
   153f7:	xor    esi,esi
   153f9:	xor    eax,eax
   153fb:	mov    rdi,rbx
   153fe:	call   5e90 <elf_call_log_callback@plt>
   15403:	mov    rcx,QWORD PTR [r12+0x248]
   1540b:	lea    rdx,[rip+0xf5df]        # 249f1 <__func__.12147+0x221>
   15412:	xor    eax,eax
   15414:	xor    esi,esi
   15416:	mov    rdi,rbx
   15419:	call   5e90 <elf_call_log_callback@plt>
   1541e:	mov    rax,QWORD PTR [r12+0x268]
   15426:	mov    rdx,QWORD PTR [r12+0x270]
   1542e:	cmp    rax,rdx
   15431:	ja     157a0 <elf_xen_parse+0x670>
   15437:	mov    rcx,QWORD PTR [r12+0x230]
   1543f:	cmp    rax,rcx
   15442:	ja     157a0 <elf_xen_parse+0x670>
   15448:	cmp    rdx,rcx
   1544b:	jb     157a0 <elf_xen_parse+0x670>
   15451:	cmp    rax,QWORD PTR [r12+0x228]
   15459:	jb     157a0 <elf_xen_parse+0x670>
   1545f:	mov    rcx,QWORD PTR [r12+0x248]
   15467:	cmp    rcx,0xffffffffffffffff
   1546b:	setne  sil
   1546f:	cmp    rax,rcx
   15472:	setbe  al
   15475:	test   sil,al
   15478:	je     15483 <elf_xen_parse+0x353>
   1547a:	cmp    rdx,rcx
   1547d:	ja     15858 <elf_xen_parse+0x728>
   15483:	xor    eax,eax
   15485:	mov    rdx,QWORD PTR [rsp+0x18]
   1548a:	xor    rdx,QWORD PTR fs:0x28
   15493:	jne    158b6 <elf_xen_parse+0x786>
   15499:	add    rsp,0x28
   1549d:	pop    rbx
   1549e:	pop    rbp
   1549f:	pop    r12
   154a1:	pop    r13
   154a3:	pop    r14
   154a5:	pop    r15
   154a7:	ret    
   154a8:	nop    DWORD PTR [rax+rax*1+0x0]
   154b0:	call   6140 <elf_access_unsigned@plt>
   154b5:	cmp    rax,0x28
   154b9:	sete   al
   154bc:	test   al,al
   154be:	jne    157c0 <elf_xen_parse+0x690>
   154c4:	cmp    DWORD PTR [r12+0x260],0xffffffff
   154cd:	jne    15840 <elf_xen_parse+0x710>
   154d3:	cmp    BYTE PTR [r12+0x210],0x0
   154dc:	jne    157f8 <elf_xen_parse+0x6c8>
   154e2:	cmp    BYTE PTR [r12+0x1e0],0x0
   154eb:	lea    rdx,[r12+0x1e0]
   154f3:	je     15864 <elf_xen_parse+0x734>
   154f9:	lea    rdi,[rip+0xf41e]        # 2491e <__func__.12147+0x14e>
   15500:	mov    ecx,0x5
   15505:	mov    rsi,rdx
   15508:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1550a:	seta   al
   1550d:	sbb    al,0x0
   1550f:	test   al,al
   15511:	jne    15864 <elf_xen_parse+0x734>
   15517:	cmp    BYTE PTR [r12+0x200],0x0
   15520:	lea    r8,[r12+0x200]
   15528:	je     15548 <elf_xen_parse+0x418>
   1552a:	lea    rdi,[rip+0xf3f3]        # 24924 <__func__.12147+0x154>
   15531:	mov    ecx,0x7
   15536:	mov    rsi,r8
   15539:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1553b:	seta   al
   1553e:	sbb    al,0x0
   15540:	test   al,al
   15542:	je     152f0 <elf_xen_parse+0x1c0>
   15548:	lea    rdx,[rip+0xf719]        # 24c68 <__func__.12147+0x498>
   1554f:	xor    eax,eax
   15551:	mov    ecx,0x10
   15556:	mov    esi,0x1
   1555b:	mov    rdi,rbx
   1555e:	call   5e90 <elf_call_log_callback@plt>
   15563:	mov    eax,0xffffffff
   15568:	jmp    15485 <elf_xen_parse+0x355>
   1556d:	nop    DWORD PTR [rax]
   15570:	mov    rdi,rbx
   15573:	xor    r14d,r14d
   15576:	mov    r13d,0x1
   1557c:	call   5a90 <elf_shdr_count@plt>
   15581:	mov    r15d,eax
   15584:	lea    rax,[rsp+0x14]
   15589:	cmp    r15d,0x1
   1558d:	mov    QWORD PTR [rsp+0x8],rax
   15592:	ja     15624 <elf_xen_parse+0x4f4>
   15598:	jmp    15653 <elf_xen_parse+0x523>
   1559d:	nop    DWORD PTR [rax]
   155a0:	mov    ecx,0x4
   155a5:	mov    edx,0x4
   155aa:	mov    rsi,rbp
   155ad:	mov    rdi,rbx
   155b0:	call   6140 <elf_access_unsigned@plt>
   155b5:	cmp    rax,0x7
   155b9:	setne  al
   155bc:	test   al,al
   155be:	jne    1561b <elf_xen_parse+0x4eb>
   155c0:	mov    rsi,rbp
   155c3:	mov    rdi,rbx
   155c6:	call   62e0 <elf_section_end@plt>
   155cb:	mov    rsi,rbp
   155ce:	mov    rdi,rbx
   155d1:	mov    QWORD PTR [rsp],rax
   155d5:	call   65f0 <elf_section_start@plt>
   155da:	mov    r8,QWORD PTR [rsp+0x8]
   155df:	mov    rcx,QWORD PTR [rsp]
   155e3:	mov    rdx,rax
   155e6:	mov    rsi,r12
   155e9:	mov    rdi,rbx
   155ec:	call   14b50 <elf_xen_parse_notes>
   155f1:	cmp    eax,0xffffffff
   155f4:	mov    ebp,eax
   155f6:	je     157b6 <elf_xen_parse+0x686>
   155fc:	test   r14d,r14d
   155ff:	jne    15618 <elf_xen_parse+0x4e8>
   15601:	test   eax,eax
   15603:	je     15618 <elf_xen_parse+0x4e8>
   15605:	lea    rdx,[rip+0xf53c]        # 24b48 <__func__.12147+0x378>
   1560c:	xor    esi,esi
   1560e:	mov    rdi,rbx
   15611:	xor    eax,eax
   15613:	call   5e90 <elf_call_log_callback@plt>
   15618:	add    r14d,ebp
   1561b:	add    r13d,0x1
   1561f:	cmp    r15d,r13d
   15622:	je     1564a <elf_xen_parse+0x51a>
   15624:	mov    esi,r13d
   15627:	mov    rdi,rbx
   1562a:	call   6070 <elf_shdr_by_index@plt>
   1562f:	mov    edx,0x1
   15634:	mov    rsi,rax
   15637:	mov    rdi,rbx
   1563a:	mov    rbp,rax
   1563d:	call   6440 <elf_access_ok@plt>
   15642:	test   al,al
   15644:	jne    155a0 <elf_xen_parse+0x470>
   1564a:	test   r14d,r14d
   1564d:	jne    152b1 <elf_xen_parse+0x181>
   15653:	lea    rsi,[rip+0xf28a]        # 248e4 <__func__.12147+0x114>
   1565a:	mov    rdi,rbx
   1565d:	call   6150 <elf_shdr_by_name@plt>
   15662:	test   rax,rax
   15665:	je     152b1 <elf_xen_parse+0x181>
   1566b:	mov    rdi,rbx
   1566e:	mov    rsi,rax
   15671:	call   65f0 <elf_section_start@plt>
   15676:	mov    rdi,rbx
   15679:	mov    QWORD PTR [r12],rax
   1567d:	mov    QWORD PTR [r12+0x8],0x0
   15686:	mov    QWORD PTR [r12+0x10],0x0
   1568f:	mov    rsi,rax
   15692:	call   6080 <elf_strfmt@plt>
   15697:	lea    rdx,[rip+0xf252]        # 248f0 <__func__.12147+0x120>
   1569e:	mov    rcx,rax
   156a1:	xor    esi,esi
   156a3:	mov    rdi,rbx
   156a6:	xor    eax,eax
   156a8:	call   5e90 <elf_call_log_callback@plt>
   156ad:	mov    rsi,r12
   156b0:	mov    rdi,rbx
   156b3:	call   5890 <elf_xen_parse_guest_info@plt>
   156b8:	jmp    152b1 <elf_xen_parse+0x181>
   156bd:	nop    DWORD PTR [rax]
   156c0:	cmp    rbp,0xffffffffffffffff
   156c4:	jne    156f5 <elf_xen_parse+0x5c5>
   156c6:	lea    rdx,[rip+0xf613]        # 24ce0 <__func__.12147+0x510>
   156cd:	xor    eax,eax
   156cf:	xor    ecx,ecx
   156d1:	xor    esi,esi
   156d3:	mov    QWORD PTR [r12+0x228],0x0
   156df:	mov    rdi,rbx
   156e2:	call   5e90 <elf_call_log_callback@plt>
   156e7:	mov    rax,QWORD PTR [r12+0x250]
   156ef:	cmp    rax,0xffffffffffffffff
   156f3:	jne    1572c <elf_xen_parse+0x5fc>
   156f5:	cmp    QWORD PTR [r12+0x8],0x0
   156fb:	jne    157e0 <elf_xen_parse+0x6b0>
   15701:	mov    rcx,QWORD PTR [r12+0x228]
   15709:	mov    QWORD PTR [r12+0x250],rcx
   15711:	lea    rdx,[rip+0xf5f0]        # 24d08 <__func__.12147+0x538>
   15718:	xor    eax,eax
   1571a:	xor    esi,esi
   1571c:	mov    rdi,rbx
   1571f:	call   5e90 <elf_call_log_callback@plt>
   15724:	mov    rax,QWORD PTR [r12+0x250]
   1572c:	mov    rbp,QWORD PTR [r12+0x228]
   15734:	jmp    15314 <elf_xen_parse+0x1e4>
   15739:	nop    DWORD PTR [rax+0x0]
   15740:	cmp    BYTE PTR [rbx+0x10],0x2
   15744:	mov    rsi,QWORD PTR [rbx+0x18]
   15748:	je     15820 <elf_xen_parse+0x6f0>
   1574e:	mov    ecx,0x4
   15753:	mov    edx,0x18
   15758:	mov    rdi,rbx
   1575b:	call   6140 <elf_access_unsigned@plt>
   15760:	cmp    BYTE PTR [r12+0x224],0x0
   15769:	mov    QWORD PTR [r12+0x230],rax
   15771:	je     15353 <elf_xen_parse+0x223>
   15777:	mov    rsi,QWORD PTR [rbx+0x50]
   1577b:	mov    rdi,rbx
   1577e:	call   6480 <elf_parse_bsdsyms@plt>
   15783:	mov    rax,QWORD PTR [rbx+0x68]
   15787:	test   rax,rax
   1578a:	je     15353 <elf_xen_parse+0x223>
   15790:	add    rax,rbp
   15793:	mov    QWORD PTR [r12+0x270],rax
   1579b:	jmp    15353 <elf_xen_parse+0x223>
   157a0:	lea    rdx,[rip+0xf589]        # 24d30 <__func__.12147+0x560>
   157a7:	mov    esi,0x1
   157ac:	mov    rdi,rbx
   157af:	xor    eax,eax
   157b1:	call   5e90 <elf_call_log_callback@plt>
   157b6:	mov    eax,0xffffffff
   157bb:	jmp    15485 <elf_xen_parse+0x355>
   157c0:	lea    rdx,[rip+0xf3f9]        # 24bc0 <__func__.12147+0x3f0>
   157c7:	xor    esi,esi
   157c9:	mov    rdi,rbx
   157cc:	xor    eax,eax
   157ce:	call   5e90 <elf_call_log_callback@plt>
   157d3:	jmp    152f0 <elf_xen_parse+0x1c0>
   157d8:	nop    DWORD PTR [rax+rax*1+0x0]
   157e0:	mov    QWORD PTR [r12+0x250],0x0
   157ec:	xor    ecx,ecx
   157ee:	jmp    15711 <elf_xen_parse+0x5e1>
   157f3:	nop    DWORD PTR [rax+rax*1+0x0]
   157f8:	lea    rsi,[r12+0x210]
   15800:	lea    rdi,[rip+0x10c45]        # 2644c <__FUNCTION__.12951+0x11c>
   15807:	mov    ecx,0x7
   1580c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1580e:	seta   al
   15811:	sbb    al,0x0
   15813:	test   al,al
   15815:	je     15517 <elf_xen_parse+0x3e7>
   1581b:	jmp    154e2 <elf_xen_parse+0x3b2>
   15820:	mov    ecx,0x8
   15825:	mov    edx,0x18
   1582a:	mov    rdi,rbx
   1582d:	call   6140 <elf_access_unsigned@plt>
   15832:	jmp    15760 <elf_xen_parse+0x630>
   15837:	nop    WORD PTR [rax+rax*1+0x0]
   15840:	lea    rdx,[rip+0xf0c1]        # 24908 <__func__.12147+0x138>
   15847:	xor    esi,esi
   15849:	mov    rdi,rbx
   1584c:	xor    eax,eax
   1584e:	call   5e90 <elf_call_log_callback@plt>
   15853:	jmp    152f0 <elf_xen_parse+0x1c0>
   15858:	lea    rdx,[rip+0xf501]        # 24d60 <__func__.12147+0x590>
   1585f:	jmp    157a7 <elf_xen_parse+0x677>
   15864:	sub    rsp,0x8
   15868:	lea    r8,[r12+0x210]
   15870:	xor    eax,eax
   15872:	push   rdx
   15873:	lea    rdx,[rip+0xf36e]        # 24be8 <__func__.12147+0x418>
   1587a:	mov    r9d,0x10
   15880:	mov    ecx,0x10
   15885:	mov    esi,0x1
   1588a:	mov    rdi,rbx
   1588d:	call   5e90 <elf_call_log_callback@plt>
   15892:	pop    rax
   15893:	mov    eax,0xffffffff
   15898:	pop    rdx
   15899:	jmp    15485 <elf_xen_parse+0x355>
   1589e:	lea    rdx,[rip+0xf40b]        # 24cb0 <__func__.12147+0x4e0>
   158a5:	jmp    157a7 <elf_xen_parse+0x677>
   158aa:	lea    rdx,[rip+0xf2bf]        # 24b70 <__func__.12147+0x3a0>
   158b1:	jmp    157a7 <elf_xen_parse+0x677>
   158b6:	call   5b80 <__stack_chk_fail@plt>
   158bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000158c0 <x86_cpuid_policy_fill_native>:
   158c0:	xor    eax,eax
   158c2:	push   rbx
   158c3:	cpuid  
   158c5:	cmp    eax,0x1
   158c8:	mov    DWORD PTR [rdi],eax
   158ca:	mov    DWORD PTR [rdi+0x4],ebx
   158cd:	mov    DWORD PTR [rdi+0x8],ecx
   158d0:	mov    DWORD PTR [rdi+0xc],edx
   158d3:	ja     15aa0 <x86_cpuid_policy_fill_native+0x1e0>
   158d9:	cmp    DWORD PTR [rdi],0x6
   158dc:	jbe    15a28 <x86_cpuid_policy_fill_native+0x168>
   158e2:	xor    esi,esi
   158e4:	mov    eax,0x7
   158e9:	mov    ecx,esi
   158eb:	cpuid  
   158ed:	cmp    DWORD PTR [rdi],0xa
   158f0:	mov    DWORD PTR [rdi+0x140],eax
   158f6:	mov    DWORD PTR [rdi+0x144],ebx
   158fc:	mov    DWORD PTR [rdi+0x148],ecx
   15902:	mov    DWORD PTR [rdi+0x14c],edx
   15908:	jbe    15a28 <x86_cpuid_policy_fill_native+0x168>
   1590e:	mov    r8d,0xb
   15914:	mov    ecx,esi
   15916:	mov    eax,r8d
   15919:	cpuid  
   1591b:	mov    ecx,ecx
   1591d:	mov    esi,ebx
   1591f:	test   ch,0xff
   15922:	je     1598a <x86_cpuid_policy_fill_native+0xca>
   15924:	shl    rsi,0x20
   15928:	mov    eax,eax
   1592a:	or     rax,rsi
   1592d:	mov    rsi,rdx
   15930:	shl    rsi,0x20
   15934:	mov    QWORD PTR [rdi+0x150],rax
   1593b:	mov    eax,r8d
   1593e:	or     rsi,rcx
   15941:	mov    ecx,0x1
   15946:	cpuid  
   15948:	mov    r8d,ecx
   1594b:	movabs rcx,0xffffffff00000000
   15955:	mov    QWORD PTR [rdi+0x158],rsi
   1595c:	and    rcx,rsi
   1595f:	or     rcx,r8
   15962:	test   ch,0xff
   15965:	je     1598a <x86_cpuid_policy_fill_native+0xca>
   15967:	mov    r8,rbx
   1596a:	mov    eax,eax
   1596c:	shl    rdx,0x20
   15970:	shl    r8,0x20
   15974:	mov    ecx,ecx
   15976:	or     rax,r8
   15979:	or     rcx,rdx
   1597c:	mov    QWORD PTR [rdi+0x160],rax
   15983:	mov    QWORD PTR [rdi+0x168],rcx
   1598a:	cmp    DWORD PTR [rdi],0xc
   1598d:	jbe    15a28 <x86_cpuid_policy_fill_native+0x168>
   15993:	mov    r8d,0xd
   15999:	xor    ecx,ecx
   1599b:	mov    eax,r8d
   1599e:	cpuid  
   159a0:	mov    r9d,edx
   159a3:	mov    esi,eax
   159a5:	mov    DWORD PTR [rdi+0x170],eax
   159ab:	mov    DWORD PTR [rdi+0x174],ebx
   159b1:	mov    eax,r8d
   159b4:	mov    DWORD PTR [rdi+0x178],ecx
   159ba:	mov    DWORD PTR [rdi+0x17c],edx
   159c0:	mov    ecx,0x1
   159c5:	lea    r8,[rdi+0x190]
   159cc:	cpuid  
   159ce:	mov    r10d,edx
   159d1:	or     esi,ecx
   159d3:	mov    DWORD PTR [rdi+0x180],eax
   159d9:	or     r10d,r9d
   159dc:	mov    DWORD PTR [rdi+0x184],ebx
   159e2:	mov    DWORD PTR [rdi+0x188],ecx
   159e8:	shl    r10,0x20
   159ec:	mov    DWORD PTR [rdi+0x18c],edx
   159f2:	mov    r9d,0xd
   159f8:	or     r10,rsi
   159fb:	mov    esi,0x2
   15a00:	bt     r10,rsi
   15a04:	jae    15a1c <x86_cpuid_policy_fill_native+0x15c>
   15a06:	mov    eax,r9d
   15a09:	mov    ecx,esi
   15a0b:	cpuid  
   15a0d:	mov    DWORD PTR [r8],eax
   15a10:	mov    DWORD PTR [r8+0x4],ebx
   15a14:	mov    DWORD PTR [r8+0x8],ecx
   15a18:	mov    DWORD PTR [r8+0xc],edx
   15a1c:	add    esi,0x1
   15a1f:	add    r8,0x10
   15a23:	cmp    esi,0x3f
   15a26:	jne    15a00 <x86_cpuid_policy_fill_native+0x140>
   15a28:	mov    eax,0x80000000
   15a2d:	cpuid  
   15a2f:	mov    DWORD PTR [rdi+0x560],eax
   15a35:	sub    eax,0x7fffffff
   15a3a:	mov    DWORD PTR [rdi+0x564],ebx
   15a40:	cmp    eax,0x1
   15a43:	mov    DWORD PTR [rdi+0x568],ecx
   15a49:	mov    DWORD PTR [rdi+0x56c],edx
   15a4f:	jbe    15a9d <x86_cpuid_policy_fill_native+0x1dd>
   15a51:	mov    r8d,0x1
   15a57:	mov    r9d,0x1d
   15a5d:	nop    DWORD PTR [rax]
   15a60:	mov    esi,r8d
   15a63:	lea    eax,[r8-0x80000000]
   15a6a:	add    r8d,0x1
   15a6e:	add    rsi,0x56
   15a72:	shl    rsi,0x4
   15a76:	add    rsi,rdi
   15a79:	cpuid  
   15a7b:	mov    DWORD PTR [rsi],eax
   15a7d:	mov    DWORD PTR [rsi+0x4],ebx
   15a80:	mov    DWORD PTR [rsi+0x8],ecx
   15a83:	mov    DWORD PTR [rsi+0xc],edx
   15a86:	mov    eax,DWORD PTR [rdi+0x560]
   15a8c:	sub    eax,0x7fffffff
   15a91:	cmp    eax,0x1d
   15a94:	cmova  eax,r9d
   15a98:	cmp    eax,r8d
   15a9b:	ja     15a60 <x86_cpuid_policy_fill_native+0x1a0>
   15a9d:	pop    rbx
   15a9e:	ret    
   15a9f:	nop
   15aa0:	mov    esi,0x1
   15aa5:	mov    r10d,0x1
   15aab:	mov    r9d,0xe
   15ab1:	nop    DWORD PTR [rax+0x0]
   15ab8:	mov    rax,r10
   15abb:	mov    ecx,esi
   15abd:	shl    rax,cl
   15ac0:	test   eax,0x2890
   15ac5:	jne    15ae4 <x86_cpuid_policy_fill_native+0x224>
   15ac7:	mov    r8d,esi
   15aca:	mov    eax,esi
   15acc:	shl    r8,0x4
   15ad0:	add    r8,rdi
   15ad3:	cpuid  
   15ad5:	mov    DWORD PTR [r8],eax
   15ad8:	mov    DWORD PTR [r8+0x4],ebx
   15adc:	mov    DWORD PTR [r8+0x8],ecx
   15ae0:	mov    DWORD PTR [r8+0xc],edx
   15ae4:	mov    eax,DWORD PTR [rdi]
   15ae6:	add    esi,0x1
   15ae9:	mov    edx,r9d
   15aec:	cmp    eax,0xe
   15aef:	cmovbe edx,eax
   15af2:	cmp    esi,edx
   15af4:	jb     15ab8 <x86_cpuid_policy_fill_native+0x1f8>
   15af6:	cmp    eax,0x3
   15af9:	jbe    158d9 <x86_cpuid_policy_fill_native+0x19>
   15aff:	lea    r8,[rdi+0xe0]
   15b06:	xor    esi,esi
   15b08:	mov    r9d,0x4
   15b0e:	mov    eax,r9d
   15b11:	mov    ecx,esi
   15b13:	cpuid  
   15b15:	test   al,0x1f
   15b17:	je     158d9 <x86_cpuid_policy_fill_native+0x19>
   15b1d:	add    esi,0x1
   15b20:	mov    DWORD PTR [r8],eax
   15b23:	mov    DWORD PTR [r8+0x4],ebx
   15b27:	mov    DWORD PTR [r8+0x8],ecx
   15b2b:	mov    DWORD PTR [r8+0xc],edx
   15b2f:	add    r8,0x10
   15b33:	cmp    esi,0x6
   15b36:	jne    15b0e <x86_cpuid_policy_fill_native+0x24e>
   15b38:	jmp    158d9 <x86_cpuid_policy_fill_native+0x19>
   15b3d:	nop    DWORD PTR [rax]

0000000000015b40 <x86_cpuid_lookup_deep_deps>:
   15b40:	mov    eax,edi
   15b42:	lea    rdx,[rip+0xf5f7]        # 25140 <deep_features.2995>
   15b49:	shr    eax,0x3
   15b4c:	movsx  edx,BYTE PTR [rdx+rax*1]
   15b50:	mov    eax,edi
   15b52:	and    eax,0x7
   15b55:	bt     edx,eax
   15b58:	jae    15ba5 <x86_cpuid_lookup_deep_deps+0x65>
   15b5a:	lea    r9,[rip+0xf23f]        # 24da0 <deep_deps.2999>
   15b61:	mov    ecx,0x29
   15b66:	mov    esi,0x15
   15b6b:	xor    r8d,r8d
   15b6e:	mov    edx,esi
   15b70:	sub    edx,r8d
   15b73:	shr    edx,1
   15b75:	add    edx,r8d
   15b78:	cmp    edi,ecx
   15b7a:	jb     15ba0 <x86_cpuid_lookup_deep_deps+0x60>
   15b7c:	jmp    15bb0 <x86_cpuid_lookup_deep_deps+0x70>
   15b7e:	xchg   ax,ax
   15b80:	mov    eax,edx
   15b82:	sub    eax,r8d
   15b85:	shr    eax,1
   15b87:	lea    ecx,[rax+r8*1]
   15b8b:	lea    rsi,[rcx+rcx*4]
   15b8f:	mov    rax,rcx
   15b92:	lea    rcx,[rcx+rsi*2]
   15b96:	mov    ecx,DWORD PTR [r9+rcx*4]
   15b9a:	cmp    ecx,edi
   15b9c:	jbe    15bb8 <x86_cpuid_lookup_deep_deps+0x78>
   15b9e:	mov    edx,eax
   15ba0:	cmp    r8d,edx
   15ba3:	jb     15b80 <x86_cpuid_lookup_deep_deps+0x40>
   15ba5:	xor    eax,eax
   15ba7:	ret    
   15ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   15bb0:	mov    eax,edx
   15bb2:	mov    edx,esi
   15bb4:	nop    DWORD PTR [rax+0x0]
   15bb8:	cmp    edi,ecx
   15bba:	jbe    15bdf <x86_cpuid_lookup_deep_deps+0x9f>
   15bbc:	lea    r8d,[rax+0x1]
   15bc0:	cmp    r8d,edx
   15bc3:	jae    15ba5 <x86_cpuid_lookup_deep_deps+0x65>
   15bc5:	mov    eax,edx
   15bc7:	mov    esi,edx
   15bc9:	sub    eax,r8d
   15bcc:	shr    eax,1
   15bce:	add    eax,r8d
   15bd1:	lea    rcx,[rax+rax*4]
   15bd5:	lea    rax,[rax+rcx*2]
   15bd9:	mov    ecx,DWORD PTR [r9+rax*4]
   15bdd:	jmp    15b6e <x86_cpuid_lookup_deep_deps+0x2e>
   15bdf:	lea    rdx,[rax+rax*4]
   15be3:	lea    rdx,[rax+rdx*2]
   15be7:	lea    rax,[rip+0xf1b2]        # 24da0 <deep_deps.2999>
   15bee:	lea    rax,[rax+rdx*4+0x4]
   15bf3:	ret    
   15bf4:	xchg   ax,ax
   15bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015c00 <x86_cpuid_copy_to_buffer>:
   15c00:	mov    r11d,DWORD PTR [rdx]
   15c03:	push   r14
   15c05:	xor    eax,eax
   15c07:	push   r13
   15c09:	push   r12
   15c0b:	xor    r10d,r10d
   15c0e:	push   rbp
   15c0f:	push   rbx
   15c10:	mov    r12d,0xd
   15c16:	cmp    r10d,0x7
   15c1a:	je     15ee8 <x86_cpuid_copy_to_buffer+0x2e8>
   15c20:	jbe    15e20 <x86_cpuid_copy_to_buffer+0x220>
   15c26:	cmp    r10d,0xb
   15c2a:	je     15e88 <x86_cpuid_copy_to_buffer+0x288>
   15c30:	xor    r9d,r9d
   15c33:	cmp    r10d,0xd
   15c37:	lea    r8,[rdi+0x170]
   15c3e:	je     15c7b <x86_cpuid_copy_to_buffer+0x7b>
   15c40:	jmp    15ca0 <x86_cpuid_copy_to_buffer+0xa0>
   15c42:	nop    WORD PTR [rax+rax*1+0x0]
   15c48:	mov    ecx,eax
   15c4a:	add    r8,0x10
   15c4e:	add    eax,0x1
   15c51:	lea    rcx,[rcx+rcx*2]
   15c55:	lea    rcx,[rsi+rcx*8]
   15c59:	mov    DWORD PTR [rcx+0x4],r9d
   15c5d:	add    r9d,0x1
   15c61:	mov    DWORD PTR [rcx],0xd
   15c67:	cmp    r9d,0x3f
   15c6b:	mov    DWORD PTR [rcx+0x8],r14d
   15c6f:	mov    DWORD PTR [rcx+0xc],r13d
   15c73:	mov    DWORD PTR [rcx+0x10],ebp
   15c76:	mov    DWORD PTR [rcx+0x14],ebx
   15c79:	je     15ce1 <x86_cpuid_copy_to_buffer+0xe1>
   15c7b:	cmp    r11d,eax
   15c7e:	mov    r14d,DWORD PTR [r8]
   15c81:	mov    r13d,DWORD PTR [r8+0x4]
   15c85:	mov    ebp,DWORD PTR [r8+0x8]
   15c89:	mov    ebx,DWORD PTR [r8+0xc]
   15c8d:	jne    15c48 <x86_cpuid_copy_to_buffer+0x48>
   15c8f:	mov    eax,0xffffff97
   15c94:	pop    rbx
   15c95:	pop    rbp
   15c96:	pop    r12
   15c98:	pop    r13
   15c9a:	pop    r14
   15c9c:	ret    
   15c9d:	nop    DWORD PTR [rax]
   15ca0:	mov    ecx,r10d
   15ca3:	shl    rcx,0x4
   15ca7:	add    rcx,rdi
   15caa:	cmp    r11d,eax
   15cad:	mov    ebp,DWORD PTR [rcx]
   15caf:	mov    ebx,DWORD PTR [rcx+0x4]
   15cb2:	mov    r9d,DWORD PTR [rcx+0x8]
   15cb6:	mov    r8d,DWORD PTR [rcx+0xc]
   15cba:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15cbc:	mov    ecx,eax
   15cbe:	lea    rcx,[rcx+rcx*2]
   15cc2:	lea    rcx,[rsi+rcx*8]
   15cc6:	mov    DWORD PTR [rcx],r10d
   15cc9:	mov    DWORD PTR [rcx+0x4],0xffffffff
   15cd0:	mov    DWORD PTR [rcx+0x8],ebp
   15cd3:	mov    DWORD PTR [rcx+0xc],ebx
   15cd6:	add    eax,0x1
   15cd9:	mov    DWORD PTR [rcx+0x10],r9d
   15cdd:	mov    DWORD PTR [rcx+0x14],r8d
   15ce1:	add    r10d,0x1
   15ce5:	cmp    DWORD PTR [rdi],0xd
   15ce8:	mov    ecx,r12d
   15ceb:	cmovbe ecx,DWORD PTR [rdi]
   15cee:	cmp    ecx,r10d
   15cf1:	jae    15c16 <x86_cpuid_copy_to_buffer+0x16>
   15cf7:	cmp    r11d,eax
   15cfa:	movzx  r8d,BYTE PTR [rdi+0x730]
   15d02:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15d04:	mov    ecx,eax
   15d06:	movabs rbx,0xffffffff40000000
   15d10:	lea    rcx,[rcx+rcx*2]
   15d14:	lea    rcx,[rsi+rcx*8]
   15d18:	mov    QWORD PTR [rcx],rbx
   15d1b:	mov    DWORD PTR [rcx+0x8],r8d
   15d1f:	mov    QWORD PTR [rcx+0xc],0x0
   15d27:	mov    DWORD PTR [rcx+0x14],0x0
   15d2e:	lea    ecx,[rax+0x1]
   15d31:	movzx  r8d,BYTE PTR [rdi+0x731]
   15d39:	cmp    r11d,ecx
   15d3c:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15d42:	lea    rcx,[rcx+rcx*2]
   15d46:	add    eax,0x2
   15d49:	add    rbx,0x100
   15d50:	cmp    r11d,eax
   15d53:	lea    rcx,[rsi+rcx*8]
   15d57:	mov    QWORD PTR [rcx],rbx
   15d5a:	mov    DWORD PTR [rcx+0x8],r8d
   15d5e:	mov    QWORD PTR [rcx+0xc],0x0
   15d66:	mov    DWORD PTR [rcx+0x14],0x0
   15d6d:	mov    r10d,DWORD PTR [rdi+0x560]
   15d74:	mov    ebx,DWORD PTR [rdi+0x564]
   15d7a:	mov    ebp,DWORD PTR [rdi+0x568]
   15d80:	mov    r12d,DWORD PTR [rdi+0x56c]
   15d87:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15d8d:	lea    r8,[rdi+0x570]
   15d94:	mov    r9d,0x1
   15d9a:	mov    r14d,0x80000000
   15da0:	mov    r13d,0x1c
   15da6:	jmp    15dda <x86_cpuid_copy_to_buffer+0x1da>
   15da8:	nop    DWORD PTR [rax+rax*1+0x0]
   15db0:	mov    r14d,r9d
   15db3:	mov    r10d,DWORD PTR [r8]
   15db6:	mov    ebx,DWORD PTR [r8+0x4]
   15dba:	mov    ebp,DWORD PTR [r8+0x8]
   15dbe:	mov    r12d,DWORD PTR [r8+0xc]
   15dc2:	or     r14d,0x80000000
   15dc9:	add    r9,0x1
   15dcd:	add    r8,0x10
   15dd1:	cmp    r11d,eax
   15dd4:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15dda:	mov    ecx,eax
   15ddc:	add    eax,0x1
   15ddf:	lea    rcx,[rcx+rcx*2]
   15de3:	lea    rcx,[rsi+rcx*8]
   15de7:	mov    DWORD PTR [rcx],r14d
   15dea:	mov    DWORD PTR [rcx+0x4],0xffffffff
   15df1:	mov    DWORD PTR [rcx+0x8],r10d
   15df5:	mov    DWORD PTR [rcx+0xc],ebx
   15df8:	mov    DWORD PTR [rcx+0x10],ebp
   15dfb:	mov    DWORD PTR [rcx+0x14],r12d
   15dff:	movzx  ecx,WORD PTR [rdi+0x560]
   15e06:	cmp    rcx,0x1c
   15e0a:	cmova  rcx,r13
   15e0e:	cmp    rcx,r9
   15e11:	jae    15db0 <x86_cpuid_copy_to_buffer+0x1b0>
   15e13:	mov    DWORD PTR [rdx],eax
   15e15:	xor    eax,eax
   15e17:	jmp    15c94 <x86_cpuid_copy_to_buffer+0x94>
   15e1c:	nop    DWORD PTR [rax+0x0]
   15e20:	xor    r9d,r9d
   15e23:	cmp    r10d,0x4
   15e27:	lea    r8,[rdi+0xe0]
   15e2e:	jne    15ca0 <x86_cpuid_copy_to_buffer+0xa0>
   15e34:	cmp    r11d,eax
   15e37:	mov    r14d,DWORD PTR [r8]
   15e3a:	mov    r13d,DWORD PTR [r8+0x4]
   15e3e:	mov    ebp,DWORD PTR [r8+0x8]
   15e42:	mov    ebx,DWORD PTR [r8+0xc]
   15e46:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15e4c:	mov    ecx,eax
   15e4e:	add    r8,0x10
   15e52:	add    eax,0x1
   15e55:	lea    rcx,[rcx+rcx*2]
   15e59:	lea    rcx,[rsi+rcx*8]
   15e5d:	mov    DWORD PTR [rcx+0x4],r9d
   15e61:	add    r9d,0x1
   15e65:	mov    DWORD PTR [rcx],0x4
   15e6b:	cmp    r9d,0x6
   15e6f:	mov    DWORD PTR [rcx+0x8],r14d
   15e73:	mov    DWORD PTR [rcx+0xc],r13d
   15e77:	mov    DWORD PTR [rcx+0x10],ebp
   15e7a:	mov    DWORD PTR [rcx+0x14],ebx
   15e7d:	jne    15e34 <x86_cpuid_copy_to_buffer+0x234>
   15e7f:	jmp    15ce1 <x86_cpuid_copy_to_buffer+0xe1>
   15e84:	nop    DWORD PTR [rax+0x0]
   15e88:	lea    r8,[rdi+0x150]
   15e8f:	xor    r9d,r9d
   15e92:	cmp    r11d,eax
   15e95:	mov    r14d,DWORD PTR [r8]
   15e98:	mov    r13d,DWORD PTR [r8+0x4]
   15e9c:	mov    ebp,DWORD PTR [r8+0x8]
   15ea0:	mov    ebx,DWORD PTR [r8+0xc]
   15ea4:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15eaa:	mov    ecx,eax
   15eac:	add    r8,0x10
   15eb0:	add    eax,0x1
   15eb3:	lea    rcx,[rcx+rcx*2]
   15eb7:	cmp    r9d,0x1
   15ebb:	lea    rcx,[rsi+rcx*8]
   15ebf:	mov    DWORD PTR [rcx],0xb
   15ec5:	mov    DWORD PTR [rcx+0x4],r9d
   15ec9:	mov    DWORD PTR [rcx+0x8],r14d
   15ecd:	mov    DWORD PTR [rcx+0xc],r13d
   15ed1:	mov    DWORD PTR [rcx+0x10],ebp
   15ed4:	mov    DWORD PTR [rcx+0x14],ebx
   15ed7:	je     15ce1 <x86_cpuid_copy_to_buffer+0xe1>
   15edd:	mov    r9d,0x1
   15ee3:	jmp    15e92 <x86_cpuid_copy_to_buffer+0x292>
   15ee5:	nop    DWORD PTR [rax]
   15ee8:	cmp    r11d,eax
   15eeb:	je     15c8f <x86_cpuid_copy_to_buffer+0x8f>
   15ef1:	mov    ecx,eax
   15ef3:	mov    ebp,DWORD PTR [rdi+0x140]
   15ef9:	mov    ebx,DWORD PTR [rdi+0x144]
   15eff:	lea    rcx,[rcx+rcx*2]
   15f03:	mov    r9d,DWORD PTR [rdi+0x148]
   15f0a:	mov    r8d,DWORD PTR [rdi+0x14c]
   15f11:	lea    rcx,[rsi+rcx*8]
   15f15:	mov    QWORD PTR [rcx],0x7
   15f1c:	jmp    15cd0 <x86_cpuid_copy_to_buffer+0xd0>
   15f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015f30 <x86_msr_copy_to_buffer>:
   15f30:	mov    ecx,DWORD PTR [rdx]
   15f32:	mov    eax,DWORD PTR [rdi]
   15f34:	test   ecx,ecx
   15f36:	je     15f50 <x86_msr_copy_to_buffer+0x20>
   15f38:	mov    QWORD PTR [rsi+0x8],rax
   15f3c:	mov    QWORD PTR [rsi],0xce
   15f43:	xor    eax,eax
   15f45:	mov    DWORD PTR [rdx],0x1
   15f4b:	ret    
   15f4c:	nop    DWORD PTR [rax+0x0]
   15f50:	mov    eax,0xffffff97
   15f55:	ret    
   15f56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000015f60 <xc_dom_printf>:
   15f60:	sub    rsp,0xd8
   15f67:	test   al,al
   15f69:	mov    QWORD PTR [rsp+0x30],rdx
   15f6e:	mov    QWORD PTR [rsp+0x38],rcx
   15f73:	mov    QWORD PTR [rsp+0x40],r8
   15f78:	mov    QWORD PTR [rsp+0x48],r9
   15f7d:	je     15fb6 <xc_dom_printf+0x56>
   15f7f:	movaps XMMWORD PTR [rsp+0x50],xmm0
   15f84:	movaps XMMWORD PTR [rsp+0x60],xmm1
   15f89:	movaps XMMWORD PTR [rsp+0x70],xmm2
   15f8e:	movaps XMMWORD PTR [rsp+0x80],xmm3
   15f96:	movaps XMMWORD PTR [rsp+0x90],xmm4
   15f9e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   15fa6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   15fae:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   15fb6:	mov    rax,QWORD PTR fs:0x28
   15fbf:	mov    QWORD PTR [rsp+0x18],rax
   15fc4:	xor    eax,eax
   15fc6:	cmp    QWORD PTR [rdi+0x18],0x0
   15fcb:	je     16013 <xc_dom_printf+0xb3>
   15fcd:	lea    rax,[rsp+0xe0]
   15fd5:	mov    rdi,QWORD PTR [rdi+0x18]
   15fd9:	lea    rcx,[rip+0xf188]        # 25168 <deep_features.2995+0x28>
   15fe0:	mov    r8,rsi
   15fe3:	mov    r9,rsp
   15fe6:	mov    edx,0xffffffff
   15feb:	mov    QWORD PTR [rsp+0x8],rax
   15ff0:	lea    rax,[rsp+0x20]
   15ff5:	mov    esi,0x3
   15ffa:	mov    DWORD PTR [rsp],0x10
   16001:	mov    DWORD PTR [rsp+0x4],0x30
   16009:	mov    QWORD PTR [rsp+0x10],rax
   1600e:	call   5bb0 <xtl_logv@plt>
   16013:	mov    rax,QWORD PTR [rsp+0x18]
   16018:	xor    rax,QWORD PTR fs:0x28
   16021:	jne    1602b <xc_dom_printf+0xcb>
   16023:	add    rsp,0xd8
   1602a:	ret    
   1602b:	call   5b80 <__stack_chk_fail@plt>

0000000000016030 <xc_dom_loginit>:
   16030:	xor    eax,eax
   16032:	cmp    QWORD PTR [rdi+0x18],0x0
   16037:	je     16040 <xc_dom_loginit+0x10>
   16039:	repz ret 
   1603b:	nop    DWORD PTR [rax+rax*1+0x0]
   16040:	push   r12
   16042:	push   rbp
   16043:	push   rbx
   16044:	mov    rbx,rdi
   16047:	mov    rdi,QWORD PTR [rdi+0x430]
   1604e:	test   rdi,rdi
   16051:	je     16090 <xc_dom_loginit+0x60>
   16053:	mov    edx,0x3
   16058:	mov    esi,0x3
   1605d:	call   6000 <xtl_createlogger_stdiostream@plt>
   16062:	test   rax,rax
   16065:	mov    QWORD PTR [rbx+0x20],rax
   16069:	mov    QWORD PTR [rbx+0x18],rax
   1606d:	je     160f8 <xc_dom_loginit+0xc8>
   16073:	lea    rsi,[rip+0xf536]        # 255b0 <deep_features.2995+0x470>
   1607a:	xor    eax,eax
   1607c:	mov    rdi,rbx
   1607f:	call   5b60 <xc_dom_printf@plt>
   16084:	xor    eax,eax
   16086:	pop    rbx
   16087:	pop    rbp
   16088:	pop    r12
   1608a:	ret    
   1608b:	nop    DWORD PTR [rax+rax*1+0x0]
   16090:	lea    rdi,[rip+0xf4c9]        # 25560 <deep_features.2995+0x420>
   16097:	lea    rsi,[rip+0xb17e]        # 2121c <_fini+0x450>
   1609e:	call   6300 <fopen@plt>
   160a3:	test   rax,rax
   160a6:	mov    rdi,rax
   160a9:	mov    QWORD PTR [rbx+0x430],rax
   160b0:	jne    16053 <xc_dom_loginit+0x23>
   160b2:	call   5940 <__errno_location@plt>
   160b7:	mov    r12d,DWORD PTR [rax]
   160ba:	mov    rbp,rax
   160bd:	mov    rdi,rbx
   160c0:	mov    esi,r12d
   160c3:	call   6570 <xc_strerror@plt>
   160c8:	mov    r8d,DWORD PTR [rbp+0x0]
   160cc:	lea    rcx,[rip+0xf48d]        # 25560 <deep_features.2995+0x420>
   160d3:	lea    rdx,[rip+0xf4ae]        # 25588 <deep_features.2995+0x448>
   160da:	mov    r9,rax
   160dd:	mov    esi,0x1
   160e2:	xor    eax,eax
   160e4:	mov    rdi,rbx
   160e7:	call   5d50 <xc_report_error@plt>
   160ec:	mov    DWORD PTR [rbp+0x0],r12d
   160f0:	or     eax,0xffffffff
   160f3:	jmp    16086 <xc_dom_loginit+0x56>
   160f5:	nop    DWORD PTR [rax]
   160f8:	mov    eax,0xffffffff
   160fd:	jmp    16086 <xc_dom_loginit+0x56>
   160ff:	nop

0000000000016100 <print_mem.isra.1>:
   16100:	cmp    rdx,0x2000000
   16107:	mov    rcx,rdx
   1610a:	ja     16148 <print_mem.isra.1+0x48>
   1610c:	cmp    rdx,0x8000
   16113:	ja     16130 <print_mem.isra.1+0x30>
   16115:	mov    rdx,rsi
   16118:	lea    rsi,[rip+0xf075]        # 25194 <deep_features.2995+0x54>
   1611f:	xor    eax,eax
   16121:	jmp    5b60 <xc_dom_printf@plt>
   16126:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16130:	mov    rdx,rsi
   16133:	lea    rsi,[rip+0xf04b]        # 25185 <deep_features.2995+0x45>
   1613a:	shr    rcx,0xa
   1613e:	xor    eax,eax
   16140:	jmp    5b60 <xc_dom_printf@plt>
   16145:	nop    DWORD PTR [rax]
   16148:	mov    rdx,rsi
   1614b:	lea    rsi,[rip+0xf024]        # 25176 <deep_features.2995+0x36>
   16152:	shr    rcx,0x14
   16156:	xor    eax,eax
   16158:	jmp    5b60 <xc_dom_printf@plt>
   1615d:	nop    DWORD PTR [rax]

0000000000016160 <xc_dom_panic_func>:
   16160:	push   r14
   16162:	push   r13
   16164:	mov    r14d,edx
   16167:	push   r12
   16169:	push   rbp
   1616a:	mov    r13,rsi
   1616d:	push   rbx
   1616e:	mov    r12d,ecx
   16171:	mov    rbx,rdi
   16174:	sub    rsp,0x4e0
   1617b:	test   al,al
   1617d:	mov    QWORD PTR [rsp+0x458],r9
   16185:	je     161c7 <xc_dom_panic_func+0x67>
   16187:	movaps XMMWORD PTR [rsp+0x460],xmm0
   1618f:	movaps XMMWORD PTR [rsp+0x470],xmm1
   16197:	movaps XMMWORD PTR [rsp+0x480],xmm2
   1619f:	movaps XMMWORD PTR [rsp+0x490],xmm3
   161a7:	movaps XMMWORD PTR [rsp+0x4a0],xmm4
   161af:	movaps XMMWORD PTR [rsp+0x4b0],xmm5
   161b7:	movaps XMMWORD PTR [rsp+0x4c0],xmm6
   161bf:	movaps XMMWORD PTR [rsp+0x4d0],xmm7
   161c7:	mov    rax,QWORD PTR fs:0x28
   161d0:	mov    QWORD PTR [rsp+0x428],rax
   161d8:	xor    eax,eax
   161da:	lea    rax,[rsp+0x510]
   161e2:	lea    rbp,[rsp+0x20]
   161e7:	lea    r9,[rsp+0x8]
   161ec:	mov    esi,0x400
   161f1:	mov    ecx,0x400
   161f6:	mov    edx,0x1
   161fb:	mov    QWORD PTR [rsp+0x10],rax
   16200:	lea    rax,[rsp+0x430]
   16208:	mov    rdi,rbp
   1620b:	mov    DWORD PTR [rsp+0x8],0x28
   16213:	mov    DWORD PTR [rsp+0xc],0x30
   1621b:	mov    QWORD PTR [rsp+0x18],rax
   16220:	call   60e0 <__vsnprintf_chk@plt>
   16225:	mov    rsi,QWORD PTR [rbx+0x18]
   16229:	mov    BYTE PTR [rsp+0x41f],0x0
   16231:	test   rsi,rsi
   16234:	jne    1623a <xc_dom_panic_func+0xda>
   16236:	mov    rsi,QWORD PTR [rbx+0x8]
   1623a:	push   rbp
   1623b:	lea    r8,[rip+0xef64]        # 251a6 <deep_features.2995+0x66>
   16242:	push   r14
   16244:	xor    eax,eax
   16246:	mov    edx,0x8
   1624b:	mov    r9,r13
   1624e:	mov    ecx,r12d
   16251:	mov    rdi,rbx
   16254:	call   6540 <xc_report@plt>
   16259:	pop    rax
   1625a:	pop    rdx
   1625b:	mov    rax,QWORD PTR [rsp+0x428]
   16263:	xor    rax,QWORD PTR fs:0x28
   1626c:	jne    1627e <xc_dom_panic_func+0x11e>
   1626e:	add    rsp,0x4e0
   16275:	pop    rbx
   16276:	pop    rbp
   16277:	pop    r12
   16279:	pop    r13
   1627b:	pop    r14
   1627d:	ret    
   1627e:	call   5b80 <__stack_chk_fail@plt>
   16283:	nop    DWORD PTR [rax]
   16286:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016290 <xc_dom_chk_alloc_pages>:
   16290:	sub    rsp,0x8
   16294:	mov    rax,QWORD PTR [rdi+0x918]
   1629b:	mov    r8,QWORD PTR [rdi+0x410]
   162a2:	mov    r9,QWORD PTR [rdi+0x468]
   162a9:	mov    ecx,DWORD PTR [rax+0x60]
   162ac:	mov    eax,0x1
   162b1:	mov    r10,r8
   162b4:	shl    rax,cl
   162b7:	mov    rcx,QWORD PTR [rdi+0x460]
   162be:	sub    r10,rcx
   162c1:	cmp    r9,rdx
   162c4:	jb     16310 <xc_dom_chk_alloc_pages+0x80>
   162c6:	cmp    r9,r10
   162c9:	jb     16310 <xc_dom_chk_alloc_pages+0x80>
   162cb:	add    rcx,r9
   162ce:	sub    rcx,r8
   162d1:	cmp    rcx,rdx
   162d4:	jb     16310 <xc_dom_chk_alloc_pages+0x80>
   162d6:	mov    eax,eax
   162d8:	add    r8,rdx
   162db:	imul   rax,rdx
   162df:	mov    QWORD PTR [rdi+0x410],r8
   162e6:	add    QWORD PTR [rdi+0x418],rax
   162ed:	mov    rax,QWORD PTR [rdi+0x920]
   162f4:	test   rax,rax
   162f7:	je     16308 <xc_dom_chk_alloc_pages+0x78>
   162f9:	call   rax
   162fb:	xor    eax,eax
   162fd:	add    rsp,0x8
   16301:	ret    
   16302:	nop    WORD PTR [rax+rax*1+0x0]
   16308:	xor    eax,eax
   1630a:	jmp    162fd <xc_dom_chk_alloc_pages+0x6d>
   1630c:	nop    DWORD PTR [rax+0x0]
   16310:	mov    rdi,QWORD PTR [rdi+0x4c8]
   16317:	lea    r8,[rip+0xf2ca]        # 255e8 <deep_features.2995+0x4a8>
   1631e:	push   r10
   16320:	push   r9
   16322:	lea    r9,[rip+0xf9a7]        # 25cd0 <__FUNCTION__.12986>
   16329:	push   rdx
   1632a:	push   rsi
   1632b:	lea    rsi,[rip+0xee85]        # 251b7 <deep_features.2995+0x77>
   16332:	xor    eax,eax
   16334:	mov    ecx,0x4
   16339:	mov    edx,0x21e
   1633e:	call   60a0 <xc_dom_panic_func@plt>
   16343:	add    rsp,0x20
   16347:	mov    eax,0xffffffff
   1634c:	jmp    162fd <xc_dom_chk_alloc_pages+0x6d>
   1634e:	xchg   ax,ax

0000000000016350 <xc_dom_alloc_pad>:
   16350:	sub    rsp,0x8
   16354:	mov    rax,QWORD PTR [rdi+0x918]
   1635b:	mov    edx,0x1
   16360:	mov    ecx,DWORD PTR [rax+0x60]
   16363:	shl    rdx,cl
   16366:	lea    eax,[rdx-0x1]
   16369:	test   rax,rsi
   1636c:	jne    163db <xc_dom_alloc_pad+0x8b>
   1636e:	mov    rax,QWORD PTR [rdi+0x418]
   16375:	cmp    rax,rsi
   16378:	ja     163a0 <xc_dom_alloc_pad+0x50>
   1637a:	sub    rsi,rax
   1637d:	mov    ecx,edx
   1637f:	xor    edx,edx
   16381:	mov    rax,rsi
   16384:	lea    rsi,[rip+0xee3a]        # 251c5 <deep_features.2995+0x85>
   1638b:	add    rsp,0x8
   1638f:	div    rcx
   16392:	mov    rdx,rax
   16395:	jmp    16290 <xc_dom_chk_alloc_pages>
   1639a:	nop    WORD PTR [rax+rax*1+0x0]
   163a0:	mov    rdi,QWORD PTR [rdi+0x4c8]
   163a7:	lea    r9,[rip+0xf942]        # 25cf0 <__FUNCTION__.12993>
   163ae:	push   rax
   163af:	lea    r8,[rip+0xf29a]        # 25650 <deep_features.2995+0x510>
   163b6:	push   rsi
   163b7:	mov    ecx,0x1
   163bc:	mov    edx,0x23b
   163c1:	lea    rsi,[rip+0xedef]        # 251b7 <deep_features.2995+0x77>
   163c8:	xor    eax,eax
   163ca:	call   60a0 <xc_dom_panic_func@plt>
   163cf:	pop    rax
   163d0:	pop    rdx
   163d1:	mov    eax,0xffffffff
   163d6:	add    rsp,0x8
   163da:	ret    
   163db:	sub    rsp,0x8
   163df:	mov    rdi,QWORD PTR [rdi+0x4c8]
   163e6:	lea    r9,[rip+0xf903]        # 25cf0 <__FUNCTION__.12993>
   163ed:	push   rsi
   163ee:	lea    r8,[rip+0xf22b]        # 25620 <deep_features.2995+0x4e0>
   163f5:	mov    ecx,0x1
   163fa:	mov    edx,0x234
   163ff:	jmp    163c1 <xc_dom_alloc_pad+0x71>
   16401:	nop    DWORD PTR [rax+rax*1+0x0]
   16406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016410 <xc_dom_log_memory_footprint>:
   16410:	push   rbx
   16411:	mov    rbx,rdi
   16414:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1641b:	lea    rsi,[rip+0xf25e]        # 25680 <deep_features.2995+0x540>
   16422:	xor    eax,eax
   16424:	call   5b60 <xc_dom_printf@plt>
   16429:	mov    rdi,QWORD PTR [rbx+0x4c8]
   16430:	lea    rsi,[rip+0xed96]        # 251cd <deep_features.2995+0x8d>
   16437:	xor    eax,eax
   16439:	call   5b60 <xc_dom_printf@plt>
   1643e:	mov    rdx,QWORD PTR [rbx+0x488]
   16445:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1644c:	lea    rsi,[rip+0xed87]        # 251da <deep_features.2995+0x9a>
   16453:	call   16100 <print_mem.isra.1>
   16458:	mov    rdx,QWORD PTR [rbx+0x490]
   1645f:	mov    rdi,QWORD PTR [rbx+0x4c8]
   16466:	lea    rsi,[rip+0xed7a]        # 251e7 <deep_features.2995+0xa7>
   1646d:	call   16100 <print_mem.isra.1>
   16472:	mov    rdi,QWORD PTR [rbx+0x4c8]
   16479:	lea    rsi,[rip+0xed77]        # 251f7 <deep_features.2995+0xb7>
   16480:	xor    eax,eax
   16482:	call   5b60 <xc_dom_printf@plt>
   16487:	mov    rdx,QWORD PTR [rbx+0x498]
   1648e:	mov    rdi,QWORD PTR [rbx+0x4c8]
   16495:	lea    rsi,[rip+0xed65]        # 25201 <deep_features.2995+0xc1>
   1649c:	call   16100 <print_mem.isra.1>
   164a1:	mov    rdx,QWORD PTR [rbx+0x4a0]
   164a8:	mov    rdi,QWORD PTR [rbx+0x4c8]
   164af:	lea    rsi,[rip+0xed5b]        # 25211 <deep_features.2995+0xd1>
   164b6:	pop    rbx
   164b7:	jmp    16100 <print_mem.isra.1>
   164bc:	nop    DWORD PTR [rax+0x0]

00000000000164c0 <xc_dom_malloc>:
   164c0:	push   rbp
   164c1:	push   rbx
   164c2:	mov    rbp,rdi
   164c5:	sub    rsp,0x18
   164c9:	cmp    rsi,0xffffffffffffffdf
   164cd:	ja     16558 <xc_dom_malloc+0x98>
   164d3:	lea    rdi,[rsi+0x20]
   164d7:	mov    rbx,rsi
   164da:	mov    esi,0x1
   164df:	call   5de0 <calloc@plt>
   164e4:	test   rax,rax
   164e7:	je     16580 <xc_dom_malloc+0xc0>
   164ed:	mov    rdx,QWORD PTR [rbp+0x480]
   164f4:	cmp    rbx,0x19000
   164fb:	mov    DWORD PTR [rax+0x10],0x0
   16502:	mov    QWORD PTR [rbp+0x480],rax
   16509:	mov    QWORD PTR [rax],rdx
   1650c:	mov    rdx,QWORD PTR [rbp+0x488]
   16513:	lea    rdx,[rbx+rdx*1+0x20]
   16518:	mov    QWORD PTR [rbp+0x488],rdx
   1651f:	ja     16530 <xc_dom_malloc+0x70>
   16521:	add    rax,0x20
   16525:	add    rsp,0x18
   16529:	pop    rbx
   1652a:	pop    rbp
   1652b:	ret    
   1652c:	nop    DWORD PTR [rax+0x0]
   16530:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16537:	lea    rsi,[rip+0xf8b2]        # 25df0 <__FUNCTION__.12887>
   1653e:	mov    rdx,rbx
   16541:	mov    QWORD PTR [rsp+0x8],rax
   16546:	call   16100 <print_mem.isra.1>
   1654b:	mov    rax,QWORD PTR [rsp+0x8]
   16550:	jmp    16521 <xc_dom_malloc+0x61>
   16552:	nop    WORD PTR [rax+rax*1+0x0]
   16558:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1655f:	lea    rdx,[rip+0xf88a]        # 25df0 <__FUNCTION__.12887>
   16566:	lea    rsi,[rip+0xf133]        # 256a0 <deep_features.2995+0x560>
   1656d:	xor    eax,eax
   1656f:	call   5b60 <xc_dom_printf@plt>
   16574:	xor    eax,eax
   16576:	jmp    16525 <xc_dom_malloc+0x65>
   16578:	nop    DWORD PTR [rax+rax*1+0x0]
   16580:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16587:	lea    rdx,[rip+0xf862]        # 25df0 <__FUNCTION__.12887>
   1658e:	lea    rsi,[rip+0xec8c]        # 25221 <deep_features.2995+0xe1>
   16595:	call   5b60 <xc_dom_printf@plt>
   1659a:	xor    eax,eax
   1659c:	jmp    16525 <xc_dom_malloc+0x65>
   1659e:	xchg   ax,ax

00000000000165a0 <xc_dom_malloc_page_aligned>:
   165a0:	push   r12
   165a2:	push   rbp
   165a3:	mov    rbp,rdi
   165a6:	push   rbx
   165a7:	mov    edi,0x20
   165ac:	mov    r12,rsi
   165af:	call   5ff0 <malloc@plt>
   165b4:	test   rax,rax
   165b7:	je     16660 <xc_dom_malloc_page_aligned+0xc0>
   165bd:	pxor   xmm0,xmm0
   165c1:	xor    r9d,r9d
   165c4:	xor    edi,edi
   165c6:	mov    QWORD PTR [rax+0x10],0x0
   165ce:	mov    QWORD PTR [rax+0x18],r12
   165d2:	mov    r8d,0xffffffff
   165d8:	mov    ecx,0x22
   165dd:	mov    edx,0x3
   165e2:	mov    rsi,r12
   165e5:	movups XMMWORD PTR [rax],xmm0
   165e8:	mov    rbx,rax
   165eb:	call   5ba0 <mmap@plt>
   165f0:	cmp    rax,0xffffffffffffffff
   165f4:	mov    QWORD PTR [rbx+0x8],rax
   165f8:	je     16680 <xc_dom_malloc_page_aligned+0xe0>
   165fe:	mov    rdx,QWORD PTR [rbp+0x480]
   16605:	add    QWORD PTR [rbp+0x488],0x20
   1660d:	mov    DWORD PTR [rbx+0x10],0x2
   16614:	mov    QWORD PTR [rbp+0x480],rbx
   1661b:	mov    QWORD PTR [rbx],rdx
   1661e:	mov    rdx,QWORD PTR [rbx+0x18]
   16622:	add    QWORD PTR [rbp+0x490],rdx
   16629:	cmp    r12,0x19000
   16630:	ja     16640 <xc_dom_malloc_page_aligned+0xa0>
   16632:	pop    rbx
   16633:	pop    rbp
   16634:	pop    r12
   16636:	ret    
   16637:	nop    WORD PTR [rax+rax*1+0x0]
   16640:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16647:	lea    rsi,[rip+0xf782]        # 25dd0 <__FUNCTION__.12893>
   1664e:	mov    rdx,r12
   16651:	call   16100 <print_mem.isra.1>
   16656:	mov    rax,QWORD PTR [rbx+0x8]
   1665a:	pop    rbx
   1665b:	pop    rbp
   1665c:	pop    r12
   1665e:	ret    
   1665f:	nop
   16660:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16667:	lea    rdx,[rip+0xf762]        # 25dd0 <__FUNCTION__.12893>
   1666e:	lea    rsi,[rip+0xebac]        # 25221 <deep_features.2995+0xe1>
   16675:	xor    eax,eax
   16677:	call   5b60 <xc_dom_printf@plt>
   1667c:	xor    eax,eax
   1667e:	jmp    16632 <xc_dom_malloc_page_aligned+0x92>
   16680:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16687:	lea    rdx,[rip+0xf742]        # 25dd0 <__FUNCTION__.12893>
   1668e:	lea    rsi,[rip+0xeba2]        # 25237 <deep_features.2995+0xf7>
   16695:	xor    eax,eax
   16697:	call   5b60 <xc_dom_printf@plt>
   1669c:	mov    rdi,rbx
   1669f:	call   5900 <free@plt>
   166a4:	xor    eax,eax
   166a6:	jmp    16632 <xc_dom_malloc_page_aligned+0x92>
   166a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000166b0 <xc_dom_register_external>:
   166b0:	push   r12
   166b2:	push   rbp
   166b3:	mov    r12,rsi
   166b6:	push   rbx
   166b7:	mov    rbx,rdi
   166ba:	mov    edi,0x20
   166bf:	mov    rbp,rdx
   166c2:	call   5ff0 <malloc@plt>
   166c7:	test   rax,rax
   166ca:	je     16709 <xc_dom_register_external+0x59>
   166cc:	mov    rdx,QWORD PTR [rbx+0x480]
   166d3:	add    QWORD PTR [rbx+0x488],0x20
   166db:	add    QWORD PTR [rbx+0x490],rbp
   166e2:	mov    DWORD PTR [rax+0x14],0x0
   166e9:	mov    QWORD PTR [rax+0x8],r12
   166ed:	mov    QWORD PTR [rax+0x18],rbp
   166f1:	mov    DWORD PTR [rax+0x10],0x1
   166f8:	mov    QWORD PTR [rax],rdx
   166fb:	mov    QWORD PTR [rbx+0x480],rax
   16702:	xor    eax,eax
   16704:	pop    rbx
   16705:	pop    rbp
   16706:	pop    r12
   16708:	ret    
   16709:	mov    rdi,QWORD PTR [rbx+0x4c8]
   16710:	lea    rdx,[rip+0xf699]        # 25db0 <__FUNCTION__.12900>
   16717:	lea    rsi,[rip+0xeb03]        # 25221 <deep_features.2995+0xe1>
   1671e:	call   5b60 <xc_dom_printf@plt>
   16723:	mov    eax,0xffffffff
   16728:	jmp    16704 <xc_dom_register_external+0x54>
   1672a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016730 <xc_dom_malloc_filemap>:
   16730:	push   r15
   16732:	push   r14
   16734:	mov    r15,rsi
   16737:	push   r13
   16739:	push   r12
   1673b:	xor    esi,esi
   1673d:	push   rbp
   1673e:	push   rbx
   1673f:	xor    eax,eax
   16741:	mov    rbp,rdi
   16744:	mov    rdi,r15
   16747:	mov    r14,rdx
   1674a:	sub    rsp,0x8
   1674e:	mov    rbx,rcx
   16751:	call   62c0 <open@plt>
   16756:	cmp    eax,0xffffffff
   16759:	je     16950 <xc_dom_malloc_filemap+0x220>
   1675f:	xor    edx,edx
   16761:	xor    esi,esi
   16763:	mov    edi,eax
   16765:	mov    r13d,eax
   16768:	call   5c60 <lseek@plt>
   1676d:	cmp    rax,0xffffffffffffffff
   16771:	je     16868 <xc_dom_malloc_filemap+0x138>
   16777:	xor    esi,esi
   16779:	mov    edx,0x2
   1677e:	mov    edi,r13d
   16781:	call   5c60 <lseek@plt>
   16786:	cmp    rax,0xffffffffffffffff
   1678a:	mov    r12,rax
   1678d:	je     16868 <xc_dom_malloc_filemap+0x138>
   16793:	cmp    rax,rbx
   16796:	mov    QWORD PTR [r14],rax
   16799:	jbe    167a4 <xc_dom_malloc_filemap+0x74>
   1679b:	test   rbx,rbx
   1679e:	jne    16920 <xc_dom_malloc_filemap+0x1f0>
   167a4:	test   r12,r12
   167a7:	je     168f0 <xc_dom_malloc_filemap+0x1c0>
   167ad:	mov    edi,0x20
   167b2:	call   5ff0 <malloc@plt>
   167b7:	test   rax,rax
   167ba:	mov    rbx,rax
   167bd:	je     16998 <xc_dom_malloc_filemap+0x268>
   167c3:	pxor   xmm0,xmm0
   167c7:	xor    r9d,r9d
   167ca:	xor    edi,edi
   167cc:	mov    QWORD PTR [rax+0x10],0x0
   167d4:	mov    QWORD PTR [rax+0x18],r12
   167d8:	mov    r8d,r13d
   167db:	mov    ecx,0x1
   167e0:	mov    edx,0x1
   167e5:	mov    rsi,r12
   167e8:	movups XMMWORD PTR [rax],xmm0
   167eb:	call   5ba0 <mmap@plt>
   167f0:	cmp    rax,0xffffffffffffffff
   167f4:	mov    QWORD PTR [rbx+0x8],rax
   167f8:	je     169d0 <xc_dom_malloc_filemap+0x2a0>
   167fe:	mov    rax,QWORD PTR [rbp+0x480]
   16805:	add    QWORD PTR [rbp+0x488],0x20
   1680d:	mov    edi,r13d
   16810:	mov    DWORD PTR [rbx+0x10],0x2
   16817:	mov    QWORD PTR [rbp+0x480],rbx
   1681e:	mov    QWORD PTR [rbx],rax
   16821:	mov    rax,QWORD PTR [rbx+0x18]
   16825:	add    QWORD PTR [rbp+0x498],rax
   1682c:	call   5cf0 <close@plt>
   16831:	mov    rdx,QWORD PTR [r14]
   16834:	cmp    rdx,0x19000
   1683b:	ja     16850 <xc_dom_malloc_filemap+0x120>
   1683d:	mov    rax,QWORD PTR [rbx+0x8]
   16841:	add    rsp,0x8
   16845:	pop    rbx
   16846:	pop    rbp
   16847:	pop    r12
   16849:	pop    r13
   1684b:	pop    r14
   1684d:	pop    r15
   1684f:	ret    
   16850:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16857:	lea    rsi,[rip+0xf532]        # 25d90 <__FUNCTION__.12911>
   1685e:	call   16100 <print_mem.isra.1>
   16863:	jmp    1683d <xc_dom_malloc_filemap+0x10d>
   16865:	nop    DWORD PTR [rax]
   16868:	call   5940 <__errno_location@plt>
   1686d:	mov    edi,DWORD PTR [rax]
   1686f:	xor    ebx,ebx
   16871:	call   6520 <strerror@plt>
   16876:	sub    rsp,0x8
   1687a:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16881:	lea    rsi,[rip+0xe92f]        # 251b7 <deep_features.2995+0x77>
   16888:	push   rax
   16889:	lea    r8,[rip+0xee38]        # 256c8 <deep_features.2995+0x588>
   16890:	mov    ecx,0x1
   16895:	mov    r9,r15
   16898:	mov    edx,0xd8
   1689d:	xor    eax,eax
   1689f:	call   60a0 <xc_dom_panic_func@plt>
   168a4:	pop    rcx
   168a5:	pop    rsi
   168a6:	mov    edi,r13d
   168a9:	call   5cf0 <close@plt>
   168ae:	mov    rdi,rbx
   168b1:	call   5900 <free@plt>
   168b6:	mov    rdi,QWORD PTR [rbp+0x4c8]
   168bd:	lea    rdx,[rip+0xf4cc]        # 25d90 <__FUNCTION__.12911>
   168c4:	lea    rsi,[rip+0xe9cd]        # 25298 <deep_features.2995+0x158>
   168cb:	mov    rcx,r15
   168ce:	xor    eax,eax
   168d0:	call   5b60 <xc_dom_printf@plt>
   168d5:	add    rsp,0x8
   168d9:	xor    eax,eax
   168db:	pop    rbx
   168dc:	pop    rbp
   168dd:	pop    r12
   168df:	pop    r13
   168e1:	pop    r14
   168e3:	pop    r15
   168e5:	ret    
   168e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   168f0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   168f7:	lea    r8,[rip+0xe966]        # 25264 <deep_features.2995+0x124>
   168fe:	lea    rsi,[rip+0xe8b2]        # 251b7 <deep_features.2995+0x77>
   16905:	mov    r9,r15
   16908:	mov    ecx,0x1
   1690d:	mov    edx,0xe7
   16912:	xor    eax,eax
   16914:	xor    ebx,ebx
   16916:	call   60a0 <xc_dom_panic_func@plt>
   1691b:	jmp    168a6 <xc_dom_malloc_filemap+0x176>
   1691d:	nop    DWORD PTR [rax]
   16920:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16927:	lea    r8,[rip+0xedba]        # 256e8 <deep_features.2995+0x5a8>
   1692e:	lea    rsi,[rip+0xe882]        # 251b7 <deep_features.2995+0x77>
   16935:	mov    ecx,0x4
   1693a:	mov    edx,0xe1
   1693f:	xor    eax,eax
   16941:	xor    ebx,ebx
   16943:	call   60a0 <xc_dom_panic_func@plt>
   16948:	jmp    168a6 <xc_dom_malloc_filemap+0x176>
   1694d:	nop    DWORD PTR [rax]
   16950:	call   5940 <__errno_location@plt>
   16955:	mov    edi,DWORD PTR [rax]
   16957:	xor    ebx,ebx
   16959:	call   6520 <strerror@plt>
   1695e:	sub    rsp,0x8
   16962:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16969:	lea    r8,[rip+0xe8d7]        # 25247 <deep_features.2995+0x107>
   16970:	push   rax
   16971:	lea    rsi,[rip+0xe83f]        # 251b7 <deep_features.2995+0x77>
   16978:	mov    r9,r15
   1697b:	mov    ecx,0x1
   16980:	mov    edx,0xd0
   16985:	xor    eax,eax
   16987:	call   60a0 <xc_dom_panic_func@plt>
   1698c:	pop    rdi
   1698d:	pop    r8
   1698f:	jmp    168ae <xc_dom_malloc_filemap+0x17e>
   16994:	nop    DWORD PTR [rax+0x0]
   16998:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1699f:	lea    r8,[rip+0xed6a]        # 25710 <deep_features.2995+0x5d0>
   169a6:	lea    rsi,[rip+0xe80a]        # 251b7 <deep_features.2995+0x77>
   169ad:	mov    r9d,0x20
   169b3:	mov    ecx,0x4
   169b8:	mov    edx,0xef
   169bd:	xor    eax,eax
   169bf:	call   60a0 <xc_dom_panic_func@plt>
   169c4:	jmp    168a6 <xc_dom_malloc_filemap+0x176>
   169c9:	nop    DWORD PTR [rax+0x0]
   169d0:	call   5940 <__errno_location@plt>
   169d5:	mov    edi,DWORD PTR [rax]
   169d7:	call   6520 <strerror@plt>
   169dc:	sub    rsp,0x8
   169e0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   169e7:	lea    r8,[rip+0xe88d]        # 2527b <deep_features.2995+0x13b>
   169ee:	push   rax
   169ef:	lea    rsi,[rip+0xe7c1]        # 251b7 <deep_features.2995+0x77>
   169f6:	mov    edx,0xfa
   169fb:	xor    eax,eax
   169fd:	mov    r9,r15
   16a00:	mov    ecx,0x1
   16a05:	call   60a0 <xc_dom_panic_func@plt>
   16a0a:	pop    rax
   16a0b:	pop    rdx
   16a0c:	jmp    168a6 <xc_dom_malloc_filemap+0x176>
   16a11:	nop    DWORD PTR [rax+rax*1+0x0]
   16a16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016a20 <xc_dom_strdup>:
   16a20:	push   r12
   16a22:	push   rbp
   16a23:	mov    r12,rdi
   16a26:	push   rbx
   16a27:	mov    rdi,rsi
   16a2a:	mov    rbp,rsi
   16a2d:	call   5b50 <strlen@plt>
   16a32:	lea    rbx,[rax+0x1]
   16a36:	mov    rdi,r12
   16a39:	mov    rsi,rbx
   16a3c:	call   5a60 <xc_dom_malloc@plt>
   16a41:	test   rax,rax
   16a44:	mov    rcx,rax
   16a47:	je     16a5a <xc_dom_strdup+0x3a>
   16a49:	mov    rdx,rbx
   16a4c:	mov    rsi,rbp
   16a4f:	mov    rdi,rax
   16a52:	call   5eb0 <memcpy@plt>
   16a57:	mov    rcx,rax
   16a5a:	pop    rbx
   16a5b:	mov    rax,rcx
   16a5e:	pop    rbp
   16a5f:	pop    r12
   16a61:	ret    
   16a62:	nop    DWORD PTR [rax+0x0]
   16a66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016a70 <xc_dom_kernel_check_size>:
   16a70:	mov    rax,QWORD PTR [rdi+0x98]
   16a77:	test   rax,rax
   16a7a:	je     16a81 <xc_dom_kernel_check_size+0x11>
   16a7c:	cmp    rax,rsi
   16a7f:	jb     16a88 <xc_dom_kernel_check_size+0x18>
   16a81:	xor    eax,eax
   16a83:	ret    
   16a84:	nop    DWORD PTR [rax+0x0]
   16a88:	sub    rsp,0x8
   16a8c:	mov    rdi,QWORD PTR [rdi+0x4c8]
   16a93:	lea    r8,[rip+0xe818]        # 252b2 <deep_features.2995+0x172>
   16a9a:	lea    rsi,[rip+0xe716]        # 251b7 <deep_features.2995+0x77>
   16aa1:	xor    eax,eax
   16aa3:	mov    ecx,0x2
   16aa8:	mov    edx,0x13c
   16aad:	call   60a0 <xc_dom_panic_func@plt>
   16ab2:	mov    eax,0x1
   16ab7:	add    rsp,0x8
   16abb:	ret    
   16abc:	nop    DWORD PTR [rax+0x0]

0000000000016ac0 <xc_dom_check_gzip>:
   16ac0:	xor    eax,eax
   16ac2:	cmp    rdx,0x5
   16ac6:	jbe    16af8 <xc_dom_check_gzip+0x38>
   16ac8:	mov    r9,rdi
   16acb:	lea    rdi,[rip+0xe7f7]        # 252c9 <deep_features.2995+0x189>
   16ad2:	mov    ecx,0x2
   16ad7:	mov    r8,rsi
   16ada:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16adc:	seta   cl
   16adf:	sbb    cl,0x0
   16ae2:	test   cl,cl
   16ae4:	jne    16af8 <xc_dom_check_gzip+0x38>
   16ae6:	mov    r8d,DWORD PTR [r8+rdx*1-0x4]
   16aeb:	cmp    r8,0x40000000
   16af2:	lea    rax,[r8+0x10]
   16af6:	ja     16b00 <xc_dom_check_gzip+0x40>
   16af8:	repz ret 
   16afa:	nop    WORD PTR [rax+rax*1+0x0]
   16b00:	mov    rcx,rdx
   16b03:	lea    rsi,[rip+0xec2e]        # 25738 <deep_features.2995+0x5f8>
   16b0a:	lea    rdx,[rip+0xf25f]        # 25d70 <__FUNCTION__.12940>
   16b11:	sub    rsp,0x8
   16b15:	xor    eax,eax
   16b17:	mov    rdi,r9
   16b1a:	call   5b60 <xc_dom_printf@plt>
   16b1f:	xor    eax,eax
   16b21:	add    rsp,0x8
   16b25:	ret    
   16b26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016b30 <xc_dom_do_gunzip>:
   16b30:	push   r15
   16b32:	push   r14
   16b34:	mov    r14,r8
   16b37:	push   r13
   16b39:	push   r12
   16b3b:	mov    r13,rdi
   16b3e:	push   rbp
   16b3f:	push   rbx
   16b40:	mov    r12,rdx
   16b43:	mov    rdx,rcx
   16b46:	mov    ecx,0xc
   16b4b:	sub    rsp,0x88
   16b52:	mov    rbx,rsp
   16b55:	mov    QWORD PTR [rsp+0xc],0x0
   16b5e:	mov    rax,QWORD PTR fs:0x28
   16b67:	mov    QWORD PTR [rsp+0x78],rax
   16b6c:	xor    eax,eax
   16b6e:	lea    rdi,[rbx+0x10]
   16b72:	mov    QWORD PTR [rbx+0x68],0x0
   16b7a:	rep stos QWORD PTR es:[rdi],rax
   16b7d:	mov    QWORD PTR [rsp+0x18],rdx
   16b82:	lea    rdx,[rip+0xa368]        # 20ef1 <_fini+0x125>
   16b89:	mov    QWORD PTR [rsp],rsi
   16b8d:	mov    ecx,0x70
   16b92:	mov    esi,0x2f
   16b97:	mov    rdi,rbx
   16b9a:	mov    DWORD PTR [rsp+0x8],r12d
   16b9f:	mov    DWORD PTR [rsp+0x20],r8d
   16ba4:	call   6310 <inflateInit2_@plt>
   16ba9:	test   eax,eax
   16bab:	mov    ebp,eax
   16bad:	jne    16c50 <xc_dom_do_gunzip+0x120>
   16bb3:	mov    esi,0x4
   16bb8:	mov    rdi,rbx
   16bbb:	call   59f0 <inflate@plt>
   16bc0:	mov    rdi,rbx
   16bc3:	mov    r15d,eax
   16bc6:	call   5f00 <inflateEnd@plt>
   16bcb:	cmp    r15d,0x1
   16bcf:	jne    16c18 <xc_dom_do_gunzip+0xe8>
   16bd1:	lea    rdx,[rip+0xf178]        # 25d50 <__FUNCTION__.12950>
   16bd8:	lea    rsi,[rip+0xe708]        # 252e7 <deep_features.2995+0x1a7>
   16bdf:	mov    r8,r14
   16be2:	mov    rcx,r12
   16be5:	mov    rdi,r13
   16be8:	xor    eax,eax
   16bea:	call   5b60 <xc_dom_printf@plt>
   16bef:	mov    rdx,QWORD PTR [rsp+0x78]
   16bf4:	xor    rdx,QWORD PTR fs:0x28
   16bfd:	mov    eax,ebp
   16bff:	jne    16c6f <xc_dom_do_gunzip+0x13f>
   16c01:	add    rsp,0x88
   16c08:	pop    rbx
   16c09:	pop    rbp
   16c0a:	pop    r12
   16c0c:	pop    r13
   16c0e:	pop    r14
   16c10:	pop    r15
   16c12:	ret    
   16c13:	nop    DWORD PTR [rax+rax*1+0x0]
   16c18:	sub    rsp,0x8
   16c1c:	lea    r9,[rip+0xf12d]        # 25d50 <__FUNCTION__.12950>
   16c23:	lea    r8,[rip+0xe6a2]        # 252cc <deep_features.2995+0x18c>
   16c2a:	push   r15
   16c2c:	mov    ecx,0x1
   16c31:	mov    edx,0x179
   16c36:	lea    rsi,[rip+0xe57a]        # 251b7 <deep_features.2995+0x77>
   16c3d:	xor    eax,eax
   16c3f:	mov    rdi,r13
   16c42:	mov    ebp,0xffffffff
   16c47:	call   60a0 <xc_dom_panic_func@plt>
   16c4c:	pop    rax
   16c4d:	pop    rdx
   16c4e:	jmp    16bef <xc_dom_do_gunzip+0xbf>
   16c50:	sub    rsp,0x8
   16c54:	lea    r9,[rip+0xf0f5]        # 25d50 <__FUNCTION__.12950>
   16c5b:	lea    r8,[rip+0xeb0e]        # 25770 <deep_features.2995+0x630>
   16c62:	push   rax
   16c63:	mov    ecx,0x1
   16c68:	mov    edx,0x171
   16c6d:	jmp    16c36 <xc_dom_do_gunzip+0x106>
   16c6f:	call   5b80 <__stack_chk_fail@plt>
   16c74:	xchg   ax,ax
   16c76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016c80 <xc_dom_try_gunzip>:
   16c80:	push   r15
   16c82:	push   r14
   16c84:	mov    r14,rsi
   16c87:	push   r13
   16c89:	push   r12
   16c8b:	mov    r13,rdx
   16c8e:	push   rbp
   16c8f:	push   rbx
   16c90:	mov    rbp,rdi
   16c93:	sub    rsp,0x8
   16c97:	mov    rdi,QWORD PTR [rdi+0x4c8]
   16c9e:	mov    rdx,QWORD PTR [rdx]
   16ca1:	mov    rsi,QWORD PTR [rsi]
   16ca4:	call   6270 <xc_dom_check_gzip@plt>
   16ca9:	test   rax,rax
   16cac:	jne    16cc8 <xc_dom_try_gunzip+0x48>
   16cae:	xor    r12d,r12d
   16cb1:	add    rsp,0x8
   16cb5:	mov    eax,r12d
   16cb8:	pop    rbx
   16cb9:	pop    rbp
   16cba:	pop    r12
   16cbc:	pop    r13
   16cbe:	pop    r14
   16cc0:	pop    r15
   16cc2:	ret    
   16cc3:	nop    DWORD PTR [rax+rax*1+0x0]
   16cc8:	mov    rsi,rax
   16ccb:	mov    rdi,rbp
   16cce:	mov    rbx,rax
   16cd1:	call   63e0 <xc_dom_kernel_check_size@plt>
   16cd6:	test   eax,eax
   16cd8:	mov    r12d,eax
   16cdb:	jne    16cae <xc_dom_try_gunzip+0x2e>
   16cdd:	mov    rsi,rbx
   16ce0:	mov    rdi,rbp
   16ce3:	call   5a60 <xc_dom_malloc@plt>
   16ce8:	test   rax,rax
   16ceb:	mov    r15,rax
   16cee:	je     16d17 <xc_dom_try_gunzip+0x97>
   16cf0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16cf7:	mov    rdx,QWORD PTR [r13+0x0]
   16cfb:	mov    r8,rbx
   16cfe:	mov    rsi,QWORD PTR [r14]
   16d01:	mov    rcx,rax
   16d04:	call   59e0 <xc_dom_do_gunzip@plt>
   16d09:	cmp    eax,0xffffffff
   16d0c:	je     16d17 <xc_dom_try_gunzip+0x97>
   16d0e:	mov    QWORD PTR [r14],r15
   16d11:	mov    QWORD PTR [r13+0x0],rbx
   16d15:	jmp    16cb1 <xc_dom_try_gunzip+0x31>
   16d17:	mov    r12d,0xffffffff
   16d1d:	jmp    16cb1 <xc_dom_try_gunzip+0x31>
   16d1f:	nop

0000000000016d20 <xc_dom_pfn_to_ptr_retcount>:
   16d20:	push   r14
   16d22:	push   r13
   16d24:	mov    r8,rsi
   16d27:	push   r12
   16d29:	push   rbp
   16d2a:	mov    rbp,rdi
   16d2d:	push   rbx
   16d2e:	mov    rax,QWORD PTR [rdi+0x918]
   16d35:	mov    rbx,rsi
   16d38:	mov    r13d,DWORD PTR [rax+0x60]
   16d3c:	mov    QWORD PTR [rcx],0x0
   16d43:	sub    r8,QWORD PTR [rdi+0x460]
   16d4a:	mov    r9,QWORD PTR [rdi+0x468]
   16d51:	cmp    r9,r8
   16d54:	jb     16ec0 <xc_dom_pfn_to_ptr_retcount+0x1a0>
   16d5a:	cmp    r9,rdx
   16d5d:	mov    r12,rdx
   16d60:	jb     16ec0 <xc_dom_pfn_to_ptr_retcount+0x1a0>
   16d66:	mov    rax,r9
   16d69:	sub    rax,rdx
   16d6c:	cmp    rax,r8
   16d6f:	jb     16ec0 <xc_dom_pfn_to_ptr_retcount+0x1a0>
   16d75:	mov    rdx,QWORD PTR [rdi+0x478]
   16d7c:	test   rdx,rdx
   16d7f:	je     16dd1 <xc_dom_pfn_to_ptr_retcount+0xb1>
   16d81:	lea    rdi,[rsi+r12*1]
   16d85:	mov    r9,QWORD PTR [rdx+0x10]
   16d89:	mov    rsi,QWORD PTR [rdx+0x18]
   16d8d:	lea    rax,[r9+rsi*1]
   16d91:	cmp    rax,rbx
   16d94:	jbe    16dc9 <xc_dom_pfn_to_ptr_retcount+0xa9>
   16d96:	test   r12,r12
   16d99:	je     16dc0 <xc_dom_pfn_to_ptr_retcount+0xa0>
   16d9b:	cmp    r9,rdi
   16d9e:	jae    16dc9 <xc_dom_pfn_to_ptr_retcount+0xa9>
   16da0:	cmp    rax,rdi
   16da3:	jb     16f30 <xc_dom_pfn_to_ptr_retcount+0x210>
   16da9:	cmp    r9,rbx
   16dac:	ja     16f30 <xc_dom_pfn_to_ptr_retcount+0x210>
   16db2:	mov    QWORD PTR [rcx],r12
   16db5:	jmp    16ea6 <xc_dom_pfn_to_ptr_retcount+0x186>
   16dba:	nop    WORD PTR [rax+rax*1+0x0]
   16dc0:	cmp    r9,rbx
   16dc3:	jbe    16ea0 <xc_dom_pfn_to_ptr_retcount+0x180>
   16dc9:	mov    rdx,QWORD PTR [rdx]
   16dcc:	test   rdx,rdx
   16dcf:	jne    16d85 <xc_dom_pfn_to_ptr_retcount+0x65>
   16dd1:	test   r12,r12
   16dd4:	je     16faf <xc_dom_pfn_to_ptr_retcount+0x28f>
   16dda:	mov    esi,0x20
   16ddf:	mov    rdi,rbp
   16de2:	call   5a60 <xc_dom_malloc@plt>
   16de7:	test   rax,rax
   16dea:	mov    r14,rax
   16ded:	je     16fa8 <xc_dom_pfn_to_ptr_retcount+0x288>
   16df3:	pxor   xmm0,xmm0
   16df7:	mov    QWORD PTR [rax+0x10],rbx
   16dfb:	mov    QWORD PTR [rax+0x18],r12
   16dff:	movups XMMWORD PTR [rax],xmm0
   16e02:	mov    esi,DWORD PTR [rbp+0x4d0]
   16e08:	test   esi,esi
   16e0a:	jne    16ef0 <xc_dom_pfn_to_ptr_retcount+0x1d0>
   16e10:	mov    ecx,r13d
   16e13:	mov    rsi,r12
   16e16:	xor    r9d,r9d
   16e19:	shl    rsi,cl
   16e1c:	xor    edi,edi
   16e1e:	mov    r8d,0xffffffff
   16e24:	mov    ecx,0x22
   16e29:	mov    edx,0x3
   16e2e:	call   5ba0 <mmap@plt>
   16e33:	cmp    rax,0xffffffffffffffff
   16e37:	mov    QWORD PTR [r14+0x8],rax
   16e3b:	je     16f61 <xc_dom_pfn_to_ptr_retcount+0x241>
   16e41:	mov    rax,QWORD PTR [r14+0x18]
   16e45:	mov    ecx,r13d
   16e48:	shl    rax,cl
   16e4b:	add    QWORD PTR [rbp+0x490],rax
   16e52:	lea    rcx,[rip+0xe4b8]        # 25311 <deep_features.2995+0x1d1>
   16e59:	sub    rsp,0x8
   16e5d:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16e64:	push   QWORD PTR [r14+0x8]
   16e68:	mov    r9,QWORD PTR [r14+0x18]
   16e6c:	mov    r8,QWORD PTR [r14+0x10]
   16e70:	lea    rdx,[rip+0xeeb9]        # 25d30 <__FUNCTION__.12974>
   16e77:	lea    rsi,[rip+0xe4a4]        # 25322 <deep_features.2995+0x1e2>
   16e7e:	xor    eax,eax
   16e80:	call   5b60 <xc_dom_printf@plt>
   16e85:	mov    rax,QWORD PTR [rbp+0x478]
   16e8c:	mov    QWORD PTR [r14],rax
   16e8f:	mov    QWORD PTR [rbp+0x478],r14
   16e96:	pop    rdx
   16e97:	mov    rax,QWORD PTR [r14+0x8]
   16e9b:	pop    rcx
   16e9c:	jmp    16eb7 <xc_dom_pfn_to_ptr_retcount+0x197>
   16e9e:	xchg   ax,ax
   16ea0:	sub    rax,rbx
   16ea3:	mov    QWORD PTR [rcx],rax
   16ea6:	sub    rbx,QWORD PTR [rdx+0x10]
   16eaa:	mov    rax,QWORD PTR [rdx+0x8]
   16eae:	mov    ecx,r13d
   16eb1:	shl    rbx,cl
   16eb4:	add    rax,rbx
   16eb7:	pop    rbx
   16eb8:	pop    rbp
   16eb9:	pop    r12
   16ebb:	pop    r13
   16ebd:	pop    r14
   16ebf:	ret    
   16ec0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16ec7:	lea    rdx,[rip+0xee62]        # 25d30 <__FUNCTION__.12974>
   16ece:	lea    rsi,[rip+0xe8bb]        # 25790 <deep_features.2995+0x650>
   16ed5:	mov    rcx,rbx
   16ed8:	xor    eax,eax
   16eda:	call   5b60 <xc_dom_printf@plt>
   16edf:	pop    rbx
   16ee0:	xor    eax,eax
   16ee2:	pop    rbp
   16ee3:	pop    r12
   16ee5:	pop    r13
   16ee7:	pop    r14
   16ee9:	ret    
   16eea:	nop    WORD PTR [rax+rax*1+0x0]
   16ef0:	mov    rdx,r12
   16ef3:	mov    rsi,rbx
   16ef6:	mov    rdi,rbp
   16ef9:	call   5f20 <xc_dom_boot_domU_map@plt>
   16efe:	test   rax,rax
   16f01:	mov    QWORD PTR [r14+0x8],rax
   16f05:	je     16fa8 <xc_dom_pfn_to_ptr_retcount+0x288>
   16f0b:	mov    rax,QWORD PTR [r14+0x18]
   16f0f:	mov    ecx,r13d
   16f12:	shl    rax,cl
   16f15:	lea    rcx,[rip+0xe3e8]        # 25304 <deep_features.2995+0x1c4>
   16f1c:	add    QWORD PTR [rbp+0x4a0],rax
   16f23:	jmp    16e59 <xc_dom_pfn_to_ptr_retcount+0x139>
   16f28:	nop    DWORD PTR [rax+rax*1+0x0]
   16f30:	sub    rsp,0x8
   16f34:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16f3b:	lea    rdx,[rip+0xedee]        # 25d30 <__FUNCTION__.12974>
   16f42:	push   rsi
   16f43:	lea    rsi,[rip+0xe876]        # 257c0 <deep_features.2995+0x680>
   16f4a:	mov    r8,r12
   16f4d:	xor    eax,eax
   16f4f:	mov    rcx,rbx
   16f52:	call   5b60 <xc_dom_printf@plt>
   16f57:	pop    rdi
   16f58:	xor    eax,eax
   16f5a:	pop    r8
   16f5c:	jmp    16eb7 <xc_dom_pfn_to_ptr_retcount+0x197>
   16f61:	call   5940 <__errno_location@plt>
   16f66:	mov    ebx,DWORD PTR [rax]
   16f68:	mov    edi,ebx
   16f6a:	call   6520 <strerror@plt>
   16f6f:	sub    rsp,0x8
   16f73:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16f7a:	lea    r9,[rip+0xedaf]        # 25d30 <__FUNCTION__.12974>
   16f81:	push   rax
   16f82:	lea    r8,[rip+0xe8bf]        # 25848 <deep_features.2995+0x708>
   16f89:	push   rbx
   16f8a:	lea    rsi,[rip+0xe226]        # 251b7 <deep_features.2995+0x77>
   16f91:	push   r12
   16f93:	mov    ecx,0x4
   16f98:	mov    edx,0x202
   16f9d:	xor    eax,eax
   16f9f:	call   60a0 <xc_dom_panic_func@plt>
   16fa4:	add    rsp,0x20
   16fa8:	xor    eax,eax
   16faa:	jmp    16eb7 <xc_dom_pfn_to_ptr_retcount+0x197>
   16faf:	mov    rdi,QWORD PTR [rbp+0x4c8]
   16fb6:	lea    rdx,[rip+0xed73]        # 25d30 <__FUNCTION__.12974>
   16fbd:	lea    rsi,[rip+0xe844]        # 25808 <deep_features.2995+0x6c8>
   16fc4:	xor    eax,eax
   16fc6:	mov    rcx,rbx
   16fc9:	call   5b60 <xc_dom_printf@plt>
   16fce:	xor    eax,eax
   16fd0:	jmp    16eb7 <xc_dom_pfn_to_ptr_retcount+0x197>
   16fd5:	nop
   16fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000016fe0 <xc_dom_pfn_to_ptr>:
   16fe0:	sub    rsp,0x18
   16fe4:	mov    rcx,rsp
   16fe7:	mov    rax,QWORD PTR fs:0x28
   16ff0:	mov    QWORD PTR [rsp+0x8],rax
   16ff5:	xor    eax,eax
   16ff7:	call   5ce0 <xc_dom_pfn_to_ptr_retcount@plt>
   16ffc:	mov    rcx,QWORD PTR [rsp+0x8]
   17001:	xor    rcx,QWORD PTR fs:0x28
   1700a:	jne    17011 <xc_dom_pfn_to_ptr+0x31>
   1700c:	add    rsp,0x18
   17010:	ret    
   17011:	call   5b80 <__stack_chk_fail@plt>
   17016:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017020 <xc_dom_alloc_segment>:
   17020:	push   r15
   17022:	push   r14
   17024:	mov    r14,rsi
   17027:	push   r13
   17029:	push   r12
   1702b:	mov    rsi,rcx
   1702e:	push   rbp
   1702f:	push   rbx
   17030:	mov    ebx,0x1
   17035:	mov    rbp,rdi
   17038:	sub    rsp,0x18
   1703c:	mov    rax,QWORD PTR [rdi+0x918]
   17043:	mov    QWORD PTR [rsp],rdx
   17047:	mov    ecx,DWORD PTR [rax+0x60]
   1704a:	shl    rbx,cl
   1704d:	test   rsi,rsi
   17050:	je     17069 <xc_dom_alloc_segment+0x49>
   17052:	mov    QWORD PTR [rsp+0x8],r8
   17057:	call   16350 <xc_dom_alloc_pad>
   1705c:	test   eax,eax
   1705e:	mov    r8,QWORD PTR [rsp+0x8]
   17063:	jne    17120 <xc_dom_alloc_segment+0x100>
   17069:	mov    ebx,ebx
   1706b:	xor    edx,edx
   1706d:	mov    rsi,QWORD PTR [rsp]
   17071:	lea    rax,[rbx+r8*1-0x1]
   17076:	mov    r15,QWORD PTR [rbp+0x418]
   1707d:	mov    rdi,rbp
   17080:	div    rbx
   17083:	mov    r12,rax
   17086:	mov    rax,QWORD PTR [rbp+0x410]
   1708d:	mov    rdx,r12
   17090:	mov    QWORD PTR [r14+0x18],r12
   17094:	mov    QWORD PTR [r14+0x10],rax
   17098:	call   16290 <xc_dom_chk_alloc_pages>
   1709d:	test   eax,eax
   1709f:	mov    r13d,eax
   170a2:	jne    17120 <xc_dom_alloc_segment+0x100>
   170a4:	mov    rdx,QWORD PTR [r14+0x18]
   170a8:	mov    rsi,QWORD PTR [r14+0x10]
   170ac:	mov    rdi,rbp
   170af:	call   6320 <xc_dom_pfn_to_ptr@plt>
   170b4:	test   rax,rax
   170b7:	je     17120 <xc_dom_alloc_segment+0x100>
   170b9:	imul   rbx,r12
   170bd:	xor    esi,esi
   170bf:	mov    rdi,rax
   170c2:	mov    rdx,rbx
   170c5:	call   5ca0 <memset@plt>
   170ca:	mov    QWORD PTR [r14],r15
   170cd:	mov    r9,QWORD PTR [rbp+0x418]
   170d4:	lea    rdx,[rip+0xec35]        # 25d10 <__FUNCTION__.13004>
   170db:	lea    rsi,[rip+0xe7a6]        # 25888 <deep_features.2995+0x748>
   170e2:	xor    eax,eax
   170e4:	mov    r8,r15
   170e7:	mov    QWORD PTR [r14+0x8],r9
   170eb:	mov    rdi,QWORD PTR [rbp+0x4c8]
   170f2:	push   r12
   170f4:	push   QWORD PTR [r14+0x10]
   170f8:	mov    rcx,QWORD PTR [rsp+0x10]
   170fd:	call   5b60 <xc_dom_printf@plt>
   17102:	pop    rax
   17103:	pop    rdx
   17104:	add    rsp,0x18
   17108:	mov    eax,r13d
   1710b:	pop    rbx
   1710c:	pop    rbp
   1710d:	pop    r12
   1710f:	pop    r13
   17111:	pop    r14
   17113:	pop    r15
   17115:	ret    
   17116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17120:	mov    r13d,0xffffffff
   17126:	jmp    17104 <xc_dom_alloc_segment+0xe4>
   17128:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017130 <xc_dom_build_module>:
   17130:	push   r15
   17132:	push   r14
   17134:	mov    r15d,esi
   17137:	push   r13
   17139:	push   r12
   1713b:	mov    r14,rdi
   1713e:	push   rbp
   1713f:	push   rbx
   17140:	mov    r13,r15
   17143:	sub    rsp,0x38
   17147:	mov    rax,QWORD PTR fs:0x28
   17150:	mov    QWORD PTR [rsp+0x28],rax
   17155:	xor    eax,eax
   17157:	lea    rax,[r15*8+0x0]
   1715f:	sub    rax,r15
   17162:	lea    rbx,[rdi+rax*8]
   17166:	cmp    QWORD PTR [rbx+0x30],0x0
   1716b:	mov    r12,QWORD PTR [rbx+0x20]
   1716f:	je     172b0 <xc_dom_build_module+0x180>
   17175:	mov    rax,QWORD PTR [rdi+0xa0]
   1717c:	xor    ebp,ebp
   1717e:	test   rax,rax
   17181:	je     1718c <xc_dom_build_module+0x5c>
   17183:	cmp    r12,rax
   17186:	ja     17315 <xc_dom_build_module+0x1e5>
   1718c:	lea    rbx,[r15*8+0x0]
   17194:	lea    r10,[rsp+0x1e]
   17199:	lea    r8,[rip+0xe1ba]        # 2535a <deep_features.2995+0x21a>
   171a0:	mov    r9d,r13d
   171a3:	mov    ecx,0xa
   171a8:	mov    edx,0x1
   171ad:	sub    rbx,r15
   171b0:	mov    rdi,r10
   171b3:	mov    esi,0xa
   171b8:	shl    rbx,0x3
   171bc:	xor    eax,eax
   171be:	mov    QWORD PTR [rsp+0x8],r10
   171c3:	call   58f0 <__snprintf_chk@plt>
   171c8:	lea    r9,[r14+rbx*1+0x30]
   171cd:	mov    r10,QWORD PTR [rsp+0x8]
   171d2:	add    rbx,r14
   171d5:	mov    rcx,QWORD PTR [rbx+0x30]
   171d9:	mov    r8,r12
   171dc:	mov    rdi,r14
   171df:	mov    rsi,r9
   171e2:	mov    QWORD PTR [rsp+0x8],r9
   171e7:	mov    rdx,r10
   171ea:	call   5a00 <xc_dom_alloc_segment@plt>
   171ef:	test   eax,eax
   171f1:	mov    r15d,eax
   171f4:	mov    r9,QWORD PTR [rsp+0x8]
   171f9:	jne    17370 <xc_dom_build_module+0x240>
   171ff:	mov    rdx,QWORD PTR [r9+0x18]
   17203:	mov    rsi,QWORD PTR [r9+0x10]
   17207:	mov    rdi,r14
   1720a:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1720f:	test   rax,rax
   17212:	je     17349 <xc_dom_build_module+0x219>
   17218:	test   rbp,rbp
   1721b:	mov    rdx,QWORD PTR [rbx+0x20]
   1721f:	mov    rsi,QWORD PTR [rbx+0x18]
   17223:	jne    17258 <xc_dom_build_module+0x128>
   17225:	mov    rdi,rax
   17228:	call   5eb0 <memcpy@plt>
   1722d:	mov    rcx,QWORD PTR [rsp+0x28]
   17232:	xor    rcx,QWORD PTR fs:0x28
   1723b:	mov    eax,r15d
   1723e:	jne    1737b <xc_dom_build_module+0x24b>
   17244:	add    rsp,0x38
   17248:	pop    rbx
   17249:	pop    rbp
   1724a:	pop    r12
   1724c:	pop    r13
   1724e:	pop    r14
   17250:	pop    r15
   17252:	ret    
   17253:	nop    DWORD PTR [rax+rax*1+0x0]
   17258:	mov    rdi,QWORD PTR [r14+0x4c8]
   1725f:	mov    r8,rbp
   17262:	mov    rcx,rax
   17265:	mov    QWORD PTR [rsp+0x8],rax
   1726a:	call   59e0 <xc_dom_do_gunzip@plt>
   1726f:	cmp    eax,0xffffffff
   17272:	mov    r9,QWORD PTR [rsp+0x8]
   17277:	jne    1722d <xc_dom_build_module+0xfd>
   17279:	mov    rdx,QWORD PTR [rbx+0x20]
   1727d:	cmp    rdx,r12
   17280:	ja     17370 <xc_dom_build_module+0x240>
   17286:	mov    rsi,QWORD PTR [rbx+0x18]
   1728a:	mov    rdi,r9
   1728d:	call   5eb0 <memcpy@plt>
   17292:	mov    rdi,QWORD PTR [rbx+0x20]
   17296:	cmp    rdi,rbp
   17299:	jae    1722d <xc_dom_build_module+0xfd>
   1729b:	mov    rdx,rbp
   1729e:	xor    esi,esi
   172a0:	sub    rdx,rdi
   172a3:	add    rdi,rax
   172a6:	call   5ca0 <memset@plt>
   172ab:	jmp    1722d <xc_dom_build_module+0xfd>
   172ad:	nop    DWORD PTR [rax]
   172b0:	mov    rdi,QWORD PTR [rdi+0x4c8]
   172b7:	mov    rsi,QWORD PTR [rbx+0x18]
   172bb:	mov    rdx,r12
   172be:	call   6270 <xc_dom_check_gzip@plt>
   172c3:	mov    rdx,QWORD PTR [rbx+0x20]
   172c7:	mov    r12,rax
   172ca:	mov    rbp,rax
   172cd:	cmp    rdx,rax
   172d0:	mov    rax,QWORD PTR [r14+0xa0]
   172d7:	cmovae r12,rdx
   172db:	test   rax,rax
   172de:	je     1718c <xc_dom_build_module+0x5c>
   172e4:	test   rbp,rbp
   172e7:	je     17183 <xc_dom_build_module+0x53>
   172ed:	cmp    rax,r12
   172f0:	jae    1718c <xc_dom_build_module+0x5c>
   172f6:	cmp    rdx,rbp
   172f9:	cmova  rdx,rbp
   172fd:	cmp    rbp,rdx
   17300:	mov    r12,rdx
   17303:	mov    edx,0x0
   17308:	cmova  rbp,rdx
   1730c:	cmp    r12,rax
   1730f:	jbe    1718c <xc_dom_build_module+0x5c>
   17315:	mov    rdi,QWORD PTR [r14+0x4c8]
   1731c:	lea    r8,[rip+0xe01d]        # 25340 <deep_features.2995+0x200>
   17323:	lea    rsi,[rip+0xde8d]        # 251b7 <deep_features.2995+0x77>
   1732a:	mov    r9d,r13d
   1732d:	mov    ecx,0x2
   17332:	mov    edx,0x40c
   17337:	xor    eax,eax
   17339:	mov    r15d,0xffffffff
   1733f:	call   60a0 <xc_dom_panic_func@plt>
   17344:	jmp    1722d <xc_dom_build_module+0xfd>
   17349:	mov    rdi,QWORD PTR [r14+0x4c8]
   17350:	lea    rdx,[rip+0xe709]        # 25a60 <__FUNCTION__.13169>
   17357:	lea    rsi,[rip+0xe56a]        # 258c8 <deep_features.2995+0x788>
   1735e:	mov    ecx,r13d
   17361:	xor    eax,eax
   17363:	call   5b60 <xc_dom_printf@plt>
   17368:	nop    DWORD PTR [rax+rax*1+0x0]
   17370:	mov    r15d,0xffffffff
   17376:	jmp    1722d <xc_dom_build_module+0xfd>
   1737b:	call   5b80 <__stack_chk_fail@plt>

0000000000017380 <xc_dom_alloc_page>:
   17380:	push   r15
   17382:	push   r14
   17384:	mov    edx,0x1
   17389:	push   r13
   1738b:	push   r12
   1738d:	mov    r12,rsi
   17390:	push   rbp
   17391:	push   rbx
   17392:	mov    rbx,rdi
   17395:	mov    rbp,0xffffffffffffffff
   1739c:	sub    rsp,0x8
   173a0:	mov    r13,QWORD PTR [rdi+0x418]
   173a7:	mov    r15,QWORD PTR [rdi+0x410]
   173ae:	mov    r14,QWORD PTR [rdi+0x460]
   173b5:	call   16290 <xc_dom_chk_alloc_pages>
   173ba:	test   eax,eax
   173bc:	jne    173e7 <xc_dom_alloc_page+0x67>
   173be:	mov    rdi,QWORD PTR [rbx+0x4c8]
   173c5:	sub    r15,r14
   173c8:	lea    rdx,[rip+0xe8e1]        # 25cb0 <__FUNCTION__.13011>
   173cf:	lea    rsi,[rip+0xe532]        # 25908 <deep_features.2995+0x7c8>
   173d6:	mov    r9,r15
   173d9:	mov    r8,r13
   173dc:	mov    rcx,r12
   173df:	mov    rbp,r15
   173e2:	call   5b60 <xc_dom_printf@plt>
   173e7:	add    rsp,0x8
   173eb:	mov    rax,rbp
   173ee:	pop    rbx
   173ef:	pop    rbp
   173f0:	pop    r12
   173f2:	pop    r13
   173f4:	pop    r14
   173f6:	pop    r15
   173f8:	ret    
   173f9:	nop    DWORD PTR [rax+0x0]

0000000000017400 <xc_dom_unmap_one>:
   17400:	push   r12
   17402:	push   rbp
   17403:	push   rbx
   17404:	mov    rbx,QWORD PTR [rdi+0x478]
   1740b:	test   rbx,rbx
   1740e:	je     1743b <xc_dom_unmap_one+0x3b>
   17410:	xor    ebp,ebp
   17412:	jmp    1741b <xc_dom_unmap_one+0x1b>
   17414:	nop    DWORD PTR [rax+0x0]
   17418:	mov    rbx,rax
   1741b:	mov    rax,QWORD PTR [rbx+0x10]
   1741f:	cmp    rax,rsi
   17422:	ja     17430 <xc_dom_unmap_one+0x30>
   17424:	mov    rdx,QWORD PTR [rbx+0x18]
   17428:	add    rax,rdx
   1742b:	cmp    rax,rsi
   1742e:	ja     17460 <xc_dom_unmap_one+0x60>
   17430:	mov    rax,QWORD PTR [rbx]
   17433:	mov    rbp,rbx
   17436:	test   rax,rax
   17439:	jne    17418 <xc_dom_unmap_one+0x18>
   1743b:	pop    rbx
   1743c:	pop    rbp
   1743d:	pop    r12
   1743f:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17446:	mov    rcx,rsi
   17449:	lea    rdx,[rip+0xe840]        # 25c90 <__FUNCTION__.13022>
   17450:	lea    rsi,[rip+0xe4d9]        # 25930 <deep_features.2995+0x7f0>
   17457:	xor    eax,eax
   17459:	jmp    5b60 <xc_dom_printf@plt>
   1745e:	xchg   ax,ax
   17460:	mov    rax,QWORD PTR [rdi+0x918]
   17467:	mov    r12,rdi
   1746a:	mov    rdi,QWORD PTR [rbx+0x8]
   1746e:	mov    ecx,DWORD PTR [rax+0x60]
   17471:	shl    rdx,cl
   17474:	mov    rsi,rdx
   17477:	call   61b0 <munmap@plt>
   1747c:	test   rbp,rbp
   1747f:	je     174b0 <xc_dom_unmap_one+0xb0>
   17481:	mov    rax,QWORD PTR [rbx]
   17484:	mov    QWORD PTR [rbp+0x0],rax
   17488:	mov    rcx,QWORD PTR [rbx+0x18]
   1748c:	mov    rdx,QWORD PTR [rbx+0x10]
   17490:	mov    esi,DWORD PTR [r12+0x4d0]
   17498:	mov    rdi,QWORD PTR [r12+0x4c8]
   174a0:	pop    rbx
   174a1:	pop    rbp
   174a2:	pop    r12
   174a4:	jmp    65b0 <xc_domain_cacheflush@plt>
   174a9:	nop    DWORD PTR [rax+0x0]
   174b0:	mov    rax,QWORD PTR [rbx]
   174b3:	mov    QWORD PTR [r12+0x478],rax
   174bb:	jmp    17488 <xc_dom_unmap_one+0x88>
   174bd:	nop    DWORD PTR [rax]

00000000000174c0 <xc_dom_unmap_all>:
   174c0:	mov    rax,QWORD PTR [rdi+0x478]
   174c7:	test   rax,rax
   174ca:	je     174f0 <xc_dom_unmap_all+0x30>
   174cc:	push   rbx
   174cd:	mov    rbx,rdi
   174d0:	mov    rsi,QWORD PTR [rax+0x10]
   174d4:	mov    rdi,rbx
   174d7:	call   5d80 <xc_dom_unmap_one@plt>
   174dc:	mov    rax,QWORD PTR [rbx+0x478]
   174e3:	test   rax,rax
   174e6:	jne    174d0 <xc_dom_unmap_all+0x10>
   174e8:	pop    rbx
   174e9:	ret    
   174ea:	nop    WORD PTR [rax+rax*1+0x0]
   174f0:	repz ret 
   174f2:	nop    DWORD PTR [rax+0x0]
   174f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017500 <xc_dom_register_loader>:
   17500:	mov    rax,QWORD PTR [rip+0x216681]        # 22db88 <first_loader>
   17507:	mov    QWORD PTR [rip+0x21667a],rdi        # 22db88 <first_loader>
   1750e:	mov    QWORD PTR [rdi+0x20],rax
   17512:	ret    
   17513:	nop    DWORD PTR [rax]
   17516:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017520 <xc_dom_register_arch_hooks>:
   17520:	mov    rax,QWORD PTR [rip+0x216659]        # 22db80 <first_hook>
   17527:	mov    QWORD PTR [rip+0x216652],rdi        # 22db80 <first_hook>
   1752e:	mov    QWORD PTR [rdi+0x70],rax
   17532:	ret    
   17533:	nop    DWORD PTR [rax]
   17536:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017540 <xc_dom_set_arch_hooks>:
   17540:	push   r13
   17542:	push   r12
   17544:	mov    r13,rdi
   17547:	push   rbp
   17548:	push   rbx
   17549:	sub    rsp,0x8
   1754d:	mov    rbx,QWORD PTR [rip+0x21662c]        # 22db80 <first_hook>
   17554:	mov    r12,QWORD PTR [rdi+0x340]
   1755b:	test   rbx,rbx
   1755e:	jne    17571 <xc_dom_set_arch_hooks+0x31>
   17560:	jmp    175a0 <xc_dom_set_arch_hooks+0x60>
   17562:	nop    WORD PTR [rax+rax*1+0x0]
   17568:	mov    rbx,QWORD PTR [rbx+0x70]
   1756c:	test   rbx,rbx
   1756f:	je     175a0 <xc_dom_set_arch_hooks+0x60>
   17571:	mov    rdi,QWORD PTR [rbx+0x50]
   17575:	mov    rsi,r12
   17578:	call   5e10 <strcmp@plt>
   1757d:	test   eax,eax
   1757f:	mov    ebp,eax
   17581:	jne    17568 <xc_dom_set_arch_hooks+0x28>
   17583:	movsxd rdi,DWORD PTR [rbx+0x6c]
   17587:	test   edi,edi
   17589:	jne    175f0 <xc_dom_set_arch_hooks+0xb0>
   1758b:	mov    QWORD PTR [r13+0x918],rbx
   17592:	add    rsp,0x8
   17596:	mov    eax,ebp
   17598:	pop    rbx
   17599:	pop    rbp
   1759a:	pop    r12
   1759c:	pop    r13
   1759e:	ret    
   1759f:	nop
   175a0:	sub    rsp,0x8
   175a4:	mov    rdi,QWORD PTR [r13+0x4c8]
   175ab:	lea    r9,[rip+0xe6be]        # 25c70 <__FUNCTION__.13052>
   175b2:	push   r12
   175b4:	lea    r8,[rip+0xdda8]        # 25363 <deep_features.2995+0x223>
   175bb:	lea    rsi,[rip+0xdbf5]        # 251b7 <deep_features.2995+0x77>
   175c2:	mov    edx,0x2d4
   175c7:	xor    eax,eax
   175c9:	mov    ecx,0x2
   175ce:	call   60a0 <xc_dom_panic_func@plt>
   175d3:	pop    rax
   175d4:	pop    rdx
   175d5:	mov    ebp,0xffffffff
   175da:	add    rsp,0x8
   175de:	mov    eax,ebp
   175e0:	pop    rbx
   175e1:	pop    rbp
   175e2:	pop    r12
   175e4:	pop    r13
   175e6:	ret    
   175e7:	nop    WORD PTR [rax+rax*1+0x0]
   175f0:	call   5ff0 <malloc@plt>
   175f5:	test   rax,rax
   175f8:	mov    QWORD PTR [r13+0x910],rax
   175ff:	je     1761f <xc_dom_set_arch_hooks+0xdf>
   17601:	movsxd rdx,DWORD PTR [rbx+0x6c]
   17605:	xor    esi,esi
   17607:	mov    rdi,rax
   1760a:	call   5ca0 <memset@plt>
   1760f:	movsxd rax,DWORD PTR [rbx+0x6c]
   17613:	add    QWORD PTR [r13+0x488],rax
   1761a:	jmp    1758b <xc_dom_set_arch_hooks+0x4b>
   1761f:	mov    ebp,0xffffffff
   17624:	jmp    175da <xc_dom_set_arch_hooks+0x9a>
   17626:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017630 <xc_dom_release>:
   17630:	push   rbp
   17631:	push   rbx
   17632:	mov    rbp,rdi
   17635:	lea    rdx,[rip+0xe624]        # 25c60 <__FUNCTION__.13056>
   1763c:	lea    rsi,[rip+0xdd38]        # 2537b <deep_features.2995+0x23b>
   17643:	xor    eax,eax
   17645:	sub    rsp,0x8
   17649:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17650:	call   5b60 <xc_dom_printf@plt>
   17655:	cmp    QWORD PTR [rbp+0x478],0x0
   1765d:	je     1768a <xc_dom_release+0x5a>
   1765f:	mov    rdi,rbp
   17662:	call   6240 <xc_dom_unmap_all@plt>
   17667:	jmp    1768a <xc_dom_release+0x5a>
   17669:	nop    DWORD PTR [rax+0x0]
   17670:	cmp    eax,0x2
   17673:	jne    17682 <xc_dom_release+0x52>
   17675:	mov    rsi,QWORD PTR [rbx+0x18]
   17679:	mov    rdi,QWORD PTR [rbx+0x8]
   1767d:	call   61b0 <munmap@plt>
   17682:	mov    rdi,rbx
   17685:	call   5900 <free@plt>
   1768a:	mov    rbx,QWORD PTR [rbp+0x480]
   17691:	test   rbx,rbx
   17694:	je     176b8 <xc_dom_release+0x88>
   17696:	mov    rax,QWORD PTR [rbx]
   17699:	mov    QWORD PTR [rbp+0x480],rax
   176a0:	mov    eax,DWORD PTR [rbx+0x10]
   176a3:	cmp    eax,0x1
   176a6:	jne    17670 <xc_dom_release+0x40>
   176a8:	mov    rdi,QWORD PTR [rbx+0x8]
   176ac:	call   5900 <free@plt>
   176b1:	jmp    17682 <xc_dom_release+0x52>
   176b3:	nop    DWORD PTR [rax+rax*1+0x0]
   176b8:	mov    rdi,QWORD PTR [rbp+0x910]
   176bf:	call   5900 <free@plt>
   176c4:	add    rsp,0x8
   176c8:	mov    rdi,rbp
   176cb:	pop    rbx
   176cc:	pop    rbp
   176cd:	jmp    5900 <free@plt>
   176d2:	nop    DWORD PTR [rax+0x0]
   176d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000176e0 <xc_dom_allocate>:
   176e0:	push   r13
   176e2:	lea    rcx,[rip+0xd21e]        # 24907 <__func__.12147+0x137>
   176e9:	push   r12
   176eb:	push   rbp
   176ec:	push   rbx
   176ed:	mov    r13,rdi
   176f0:	mov    r8,rcx
   176f3:	mov    rbp,rdx
   176f6:	sub    rsp,0x8
   176fa:	test   rdx,rdx
   176fd:	cmovne r8,rdx
   17701:	test   rsi,rsi
   17704:	je     17800 <xc_dom_allocate+0x120>
   1770a:	mov    rcx,rsi
   1770d:	lea    rdx,[rip+0xe53c]        # 25c50 <__FUNCTION__.13063>
   17714:	mov    r12,rsi
   17717:	lea    rsi,[rip+0xe23a]        # 25958 <deep_features.2995+0x818>
   1771e:	xor    eax,eax
   17720:	call   5b60 <xc_dom_printf@plt>
   17725:	mov    esi,0x1
   1772a:	mov    edi,0xa18
   1772f:	call   5de0 <calloc@plt>
   17734:	test   rax,rax
   17737:	mov    rbx,rax
   1773a:	je     177e8 <xc_dom_allocate+0x108>
   17740:	mov    QWORD PTR [rbx+0x4c8],r13
   17747:	mov    QWORD PTR [rbx+0x98],0x40000000
   17752:	mov    rsi,r12
   17755:	mov    QWORD PTR [rbx+0xa0],0x40000000
   17760:	mov    QWORD PTR [rbx+0xa8],0x40000000
   1776b:	mov    rdi,rbx
   1776e:	call   5a50 <xc_dom_strdup@plt>
   17773:	mov    QWORD PTR [rbx+0xb0],rax
   1777a:	test   rbp,rbp
   1777d:	je     17790 <xc_dom_allocate+0xb0>
   1777f:	lea    rsi,[rbx+0xc0]
   17786:	xor    edx,edx
   17788:	mov    rdi,rbp
   1778b:	call   5930 <elf_xen_parse_features@plt>
   17790:	mov    rax,0xffffffffffffffff
   17797:	mov    QWORD PTR [rbx+0x4a8],0x10
   177a2:	add    QWORD PTR [rbx+0x488],0xa18
   177ad:	mov    QWORD PTR [rbx+0x2f0],rax
   177b4:	mov    QWORD PTR [rbx+0x2f8],rax
   177bb:	mov    QWORD PTR [rbx+0x300],rax
   177c2:	mov    QWORD PTR [rbx+0x308],rax
   177c9:	mov    QWORD PTR [rbx+0x318],rax
   177d0:	mov    QWORD PTR [rbx+0x310],rax
   177d7:	add    rsp,0x8
   177db:	mov    rax,rbx
   177de:	pop    rbx
   177df:	pop    rbp
   177e0:	pop    r12
   177e2:	pop    r13
   177e4:	ret    
   177e5:	nop    DWORD PTR [rax]
   177e8:	add    rsp,0x8
   177ec:	xor    ebx,ebx
   177ee:	mov    rax,rbx
   177f1:	pop    rbx
   177f2:	pop    rbp
   177f3:	pop    r12
   177f5:	pop    r13
   177f7:	ret    
   177f8:	nop    DWORD PTR [rax+rax*1+0x0]
   17800:	lea    rdx,[rip+0xe449]        # 25c50 <__FUNCTION__.13063>
   17807:	lea    rsi,[rip+0xe14a]        # 25958 <deep_features.2995+0x818>
   1780e:	xor    eax,eax
   17810:	call   5b60 <xc_dom_printf@plt>
   17815:	mov    esi,0x1
   1781a:	mov    edi,0xa18
   1781f:	call   5de0 <calloc@plt>
   17824:	test   rax,rax
   17827:	mov    rbx,rax
   1782a:	je     177e8 <xc_dom_allocate+0x108>
   1782c:	mov    QWORD PTR [rbx+0x4c8],r13
   17833:	mov    QWORD PTR [rbx+0x98],0x40000000
   1783e:	mov    QWORD PTR [rbx+0xa0],0x40000000
   17849:	mov    QWORD PTR [rbx+0xa8],0x40000000
   17854:	jmp    1777a <xc_dom_allocate+0x9a>
   17859:	nop    DWORD PTR [rax+0x0]

0000000000017860 <xc_dom_kernel_max_size>:
   17860:	push   rbp
   17861:	push   rbx
   17862:	mov    rbx,rdi
   17865:	mov    rbp,rsi
   17868:	mov    rcx,rsi
   1786b:	lea    rdx,[rip+0xe3be]        # 25c30 <__FUNCTION__.13069>
   17872:	sub    rsp,0x8
   17876:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1787d:	lea    rsi,[rip+0xdb02]        # 25386 <deep_features.2995+0x246>
   17884:	xor    eax,eax
   17886:	call   5b60 <xc_dom_printf@plt>
   1788b:	mov    QWORD PTR [rbx+0x98],rbp
   17892:	add    rsp,0x8
   17896:	xor    eax,eax
   17898:	pop    rbx
   17899:	pop    rbp
   1789a:	ret    
   1789b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000178a0 <xc_dom_module_max_size>:
   178a0:	push   rbp
   178a1:	push   rbx
   178a2:	mov    rbx,rdi
   178a5:	mov    rbp,rsi
   178a8:	mov    rcx,rsi
   178ab:	lea    rdx,[rip+0xe35e]        # 25c10 <__FUNCTION__.13074>
   178b2:	sub    rsp,0x8
   178b6:	mov    rdi,QWORD PTR [rdi+0x4c8]
   178bd:	lea    rsi,[rip+0xdada]        # 2539e <deep_features.2995+0x25e>
   178c4:	xor    eax,eax
   178c6:	call   5b60 <xc_dom_printf@plt>
   178cb:	mov    QWORD PTR [rbx+0xa0],rbp
   178d2:	add    rsp,0x8
   178d6:	xor    eax,eax
   178d8:	pop    rbx
   178d9:	pop    rbp
   178da:	ret    
   178db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000178e0 <xc_dom_devicetree_max_size>:
   178e0:	push   rbp
   178e1:	push   rbx
   178e2:	mov    rbx,rdi
   178e5:	mov    rbp,rsi
   178e8:	mov    rcx,rsi
   178eb:	lea    rdx,[rip+0xe2fe]        # 25bf0 <__FUNCTION__.13079>
   178f2:	sub    rsp,0x8
   178f6:	mov    rdi,QWORD PTR [rdi+0x4c8]
   178fd:	lea    rsi,[rip+0xdab2]        # 253b6 <deep_features.2995+0x276>
   17904:	xor    eax,eax
   17906:	call   5b60 <xc_dom_printf@plt>
   1790b:	mov    QWORD PTR [rbx+0xa8],rbp
   17912:	add    rsp,0x8
   17916:	xor    eax,eax
   17918:	pop    rbx
   17919:	pop    rbp
   1791a:	ret    
   1791b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017920 <xc_dom_kernel_file>:
   17920:	push   r12
   17922:	push   rbp
   17923:	mov    rcx,rsi
   17926:	push   rbx
   17927:	mov    rbx,rdi
   1792a:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17931:	mov    rbp,rsi
   17934:	lea    rdx,[rip+0xe295]        # 25bd0 <__FUNCTION__.13084>
   1793b:	lea    rsi,[rip+0xda90]        # 253d2 <deep_features.2995+0x292>
   17942:	xor    eax,eax
   17944:	lea    r12,[rbx+0x8]
   17948:	call   5b60 <xc_dom_printf@plt>
   1794d:	mov    rcx,QWORD PTR [rbx+0x98]
   17954:	mov    rdx,r12
   17957:	mov    rsi,rbp
   1795a:	mov    rdi,rbx
   1795d:	call   65d0 <xc_dom_malloc_filemap@plt>
   17962:	test   rax,rax
   17965:	mov    QWORD PTR [rbx],rax
   17968:	je     17980 <xc_dom_kernel_file+0x60>
   1796a:	mov    rdx,r12
   1796d:	mov    rsi,rbx
   17970:	mov    rdi,rbx
   17973:	pop    rbx
   17974:	pop    rbp
   17975:	pop    r12
   17977:	jmp    6430 <xc_dom_try_gunzip@plt>
   1797c:	nop    DWORD PTR [rax+0x0]
   17980:	pop    rbx
   17981:	mov    eax,0xffffffff
   17986:	pop    rbp
   17987:	pop    r12
   17989:	ret    
   1798a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017990 <xc_dom_module_file>:
   17990:	push   r13
   17992:	push   r12
   17994:	mov    rcx,rsi
   17997:	push   rbp
   17998:	push   rbx
   17999:	mov    rbp,rdi
   1799c:	mov    r12,rsi
   1799f:	mov    r13,rdx
   179a2:	lea    rsi,[rip+0xda29]        # 253d2 <deep_features.2995+0x292>
   179a9:	sub    rsp,0x8
   179ad:	mov    ebx,DWORD PTR [rdi+0x10]
   179b0:	lea    rdx,[rip+0xe1f9]        # 25bb0 <__FUNCTION__.13091>
   179b7:	lea    eax,[rbx+0x1]
   179ba:	mov    DWORD PTR [rdi+0x10],eax
   179bd:	mov    rdi,QWORD PTR [rdi+0x4c8]
   179c4:	xor    eax,eax
   179c6:	call   5b60 <xc_dom_printf@plt>
   179cb:	mov    eax,ebx
   179cd:	mov    rcx,QWORD PTR [rbp+0xa0]
   179d4:	mov    rsi,r12
   179d7:	lea    rbx,[rax*8+0x0]
   179df:	mov    rdi,rbp
   179e2:	sub    rbx,rax
   179e5:	shl    rbx,0x3
   179e9:	lea    rdx,[rbp+rbx*1+0x20]
   179ee:	add    rbx,rbp
   179f1:	call   65d0 <xc_dom_malloc_filemap@plt>
   179f6:	test   rax,rax
   179f9:	mov    QWORD PTR [rbx+0x18],rax
   179fd:	je     17a45 <xc_dom_module_file+0xb5>
   179ff:	test   r13,r13
   17a02:	je     17a30 <xc_dom_module_file+0xa0>
   17a04:	mov    rsi,r13
   17a07:	mov    rdi,rbp
   17a0a:	call   5a50 <xc_dom_strdup@plt>
   17a0f:	test   rax,rax
   17a12:	mov    QWORD PTR [rbx+0x28],rax
   17a16:	sete   al
   17a19:	movzx  eax,al
   17a1c:	neg    eax
   17a1e:	add    rsp,0x8
   17a22:	pop    rbx
   17a23:	pop    rbp
   17a24:	pop    r12
   17a26:	pop    r13
   17a28:	ret    
   17a29:	nop    DWORD PTR [rax+0x0]
   17a30:	mov    QWORD PTR [rbx+0x28],0x0
   17a38:	add    rsp,0x8
   17a3c:	xor    eax,eax
   17a3e:	pop    rbx
   17a3f:	pop    rbp
   17a40:	pop    r12
   17a42:	pop    r13
   17a44:	ret    
   17a45:	mov    eax,0xffffffff
   17a4a:	jmp    17a1e <xc_dom_module_file+0x8e>
   17a4c:	nop    DWORD PTR [rax+0x0]

0000000000017a50 <xc_dom_devicetree_file>:
   17a50:	sub    rsp,0x8
   17a54:	call   5940 <__errno_location@plt>
   17a59:	mov    DWORD PTR [rax],0xffffffea
   17a5f:	mov    eax,0xffffffff
   17a64:	add    rsp,0x8
   17a68:	ret    
   17a69:	nop    DWORD PTR [rax+0x0]

0000000000017a70 <xc_dom_kernel_mem>:
   17a70:	push   r12
   17a72:	push   rbp
   17a73:	mov    r12,rsi
   17a76:	push   rbx
   17a77:	mov    rbx,rdi
   17a7a:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17a81:	mov    rbp,rdx
   17a84:	lea    rsi,[rip+0xd8f0]        # 2537b <deep_features.2995+0x23b>
   17a8b:	lea    rdx,[rip+0xe0fe]        # 25b90 <__FUNCTION__.13101>
   17a92:	xor    eax,eax
   17a94:	call   5b60 <xc_dom_printf@plt>
   17a99:	mov    QWORD PTR [rbx],r12
   17a9c:	mov    QWORD PTR [rbx+0x8],rbp
   17aa0:	lea    rdx,[rbx+0x8]
   17aa4:	mov    rsi,rbx
   17aa7:	mov    rdi,rbx
   17aaa:	pop    rbx
   17aab:	pop    rbp
   17aac:	pop    r12
   17aae:	jmp    6430 <xc_dom_try_gunzip@plt>
   17ab3:	nop    DWORD PTR [rax]
   17ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017ac0 <xc_dom_module_mem>:
   17ac0:	push   r14
   17ac2:	push   r13
   17ac4:	mov    r14,rsi
   17ac7:	push   r12
   17ac9:	push   rbp
   17aca:	mov    rbp,rdi
   17acd:	push   rbx
   17ace:	mov    ebx,DWORD PTR [rdi+0x10]
   17ad1:	mov    r13,rdx
   17ad4:	lea    rsi,[rip+0xd8a0]        # 2537b <deep_features.2995+0x23b>
   17adb:	lea    rdx,[rip+0xe08e]        # 25b70 <__FUNCTION__.13109>
   17ae2:	mov    r12,rcx
   17ae5:	lea    eax,[rbx+0x1]
   17ae8:	mov    DWORD PTR [rdi+0x10],eax
   17aeb:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17af2:	xor    eax,eax
   17af4:	call   5b60 <xc_dom_printf@plt>
   17af9:	lea    rax,[rbx*8+0x0]
   17b01:	sub    rax,rbx
   17b04:	test   r12,r12
   17b07:	lea    rbx,[rbp+rax*8+0x0]
   17b0c:	mov    QWORD PTR [rbx+0x18],r14
   17b10:	mov    QWORD PTR [rbx+0x20],r13
   17b14:	je     17b40 <xc_dom_module_mem+0x80>
   17b16:	mov    rsi,r12
   17b19:	mov    rdi,rbp
   17b1c:	call   5a50 <xc_dom_strdup@plt>
   17b21:	test   rax,rax
   17b24:	mov    QWORD PTR [rbx+0x28],rax
   17b28:	sete   al
   17b2b:	movzx  eax,al
   17b2e:	pop    rbx
   17b2f:	neg    eax
   17b31:	pop    rbp
   17b32:	pop    r12
   17b34:	pop    r13
   17b36:	pop    r14
   17b38:	ret    
   17b39:	nop    DWORD PTR [rax+0x0]
   17b40:	mov    QWORD PTR [rbx+0x28],0x0
   17b48:	xor    eax,eax
   17b4a:	pop    rbx
   17b4b:	pop    rbp
   17b4c:	pop    r12
   17b4e:	pop    r13
   17b50:	pop    r14
   17b52:	ret    
   17b53:	nop    DWORD PTR [rax]
   17b56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017b60 <xc_dom_devicetree_mem>:
   17b60:	push   r12
   17b62:	push   rbp
   17b63:	mov    r12,rsi
   17b66:	push   rbx
   17b67:	mov    rbx,rdi
   17b6a:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17b71:	mov    rbp,rdx
   17b74:	lea    rsi,[rip+0xd800]        # 2537b <deep_features.2995+0x23b>
   17b7b:	lea    rdx,[rip+0xdfce]        # 25b50 <__FUNCTION__.13115>
   17b82:	xor    eax,eax
   17b84:	call   5b60 <xc_dom_printf@plt>
   17b89:	mov    QWORD PTR [rbx+0x88],r12
   17b90:	mov    QWORD PTR [rbx+0x90],rbp
   17b97:	xor    eax,eax
   17b99:	pop    rbx
   17b9a:	pop    rbp
   17b9b:	pop    r12
   17b9d:	ret    
   17b9e:	xchg   ax,ax

0000000000017ba0 <xc_dom_parse_image>:
   17ba0:	push   r12
   17ba2:	push   rbp
   17ba3:	mov    rbp,rdi
   17ba6:	push   rbx
   17ba7:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17bae:	lea    rdx,[rip+0xdf7b]        # 25b30 <__FUNCTION__.13120>
   17bb5:	lea    rsi,[rip+0xd7bf]        # 2537b <deep_features.2995+0x23b>
   17bbc:	xor    eax,eax
   17bbe:	call   5b60 <xc_dom_printf@plt>
   17bc3:	mov    rbx,QWORD PTR [rip+0x215fbe]        # 22db88 <first_loader>
   17bca:	test   rbx,rbx
   17bcd:	je     17c90 <xc_dom_parse_image+0xf0>
   17bd3:	lea    r12,[rip+0xdf36]        # 25b10 <__FUNCTION__.13038>
   17bda:	jmp    17bfb <xc_dom_parse_image+0x5b>
   17bdc:	nop    DWORD PTR [rax+0x0]
   17be0:	lea    rsi,[rip+0xd827]        # 2540e <deep_features.2995+0x2ce>
   17be7:	xor    eax,eax
   17be9:	call   5b60 <xc_dom_printf@plt>
   17bee:	mov    rbx,QWORD PTR [rbx+0x20]
   17bf2:	test   rbx,rbx
   17bf5:	je     17c90 <xc_dom_parse_image+0xf0>
   17bfb:	mov    rdi,QWORD PTR [rbp+0x4c8]
   17c02:	mov    rcx,QWORD PTR [rbx]
   17c05:	lea    rsi,[rip+0xd7d8]        # 253e4 <deep_features.2995+0x2a4>
   17c0c:	xor    eax,eax
   17c0e:	mov    rdx,r12
   17c11:	call   5b60 <xc_dom_printf@plt>
   17c16:	mov    rdi,rbp
   17c19:	call   QWORD PTR [rbx+0x8]
   17c1c:	test   eax,eax
   17c1e:	mov    rdi,QWORD PTR [rbp+0x4c8]
   17c25:	jne    17be0 <xc_dom_parse_image+0x40>
   17c27:	lea    rsi,[rip+0xd7d0]        # 253fe <deep_features.2995+0x2be>
   17c2e:	call   5b60 <xc_dom_printf@plt>
   17c33:	mov    QWORD PTR [rbp+0x8e0],rbx
   17c3a:	mov    rdi,rbp
   17c3d:	call   QWORD PTR [rbx+0x10]
   17c40:	test   eax,eax
   17c42:	jne    17d03 <xc_dom_parse_image+0x163>
   17c48:	cmp    QWORD PTR [rbp+0x340],0x0
   17c50:	jne    17cd8 <xc_dom_parse_image+0x138>
   17c56:	mov    rdi,QWORD PTR [rbp+0x4c8]
   17c5d:	lea    r9,[rip+0xdecc]        # 25b30 <__FUNCTION__.13120>
   17c64:	lea    r8,[rip+0xd7cb]        # 25436 <deep_features.2995+0x2f6>
   17c6b:	lea    rsi,[rip+0xd545]        # 251b7 <deep_features.2995+0x77>
   17c72:	xor    eax,eax
   17c74:	mov    ecx,0x1
   17c79:	mov    edx,0x393
   17c7e:	call   60a0 <xc_dom_panic_func@plt>
   17c83:	mov    eax,0xffffffff
   17c88:	pop    rbx
   17c89:	pop    rbp
   17c8a:	pop    r12
   17c8c:	ret    
   17c8d:	nop    DWORD PTR [rax]
   17c90:	mov    rdi,QWORD PTR [rbp+0x4c8]
   17c97:	lea    r9,[rip+0xde72]        # 25b10 <__FUNCTION__.13038>
   17c9e:	lea    r8,[rip+0xd77d]        # 25422 <deep_features.2995+0x2e2>
   17ca5:	lea    rsi,[rip+0xd50b]        # 251b7 <deep_features.2995+0x77>
   17cac:	xor    eax,eax
   17cae:	mov    ecx,0x2
   17cb3:	mov    edx,0x2b4
   17cb8:	call   60a0 <xc_dom_panic_func@plt>
   17cbd:	mov    QWORD PTR [rbp+0x8e0],0x0
   17cc8:	mov    eax,0xffffffff
   17ccd:	pop    rbx
   17cce:	pop    rbp
   17ccf:	pop    r12
   17cd1:	ret    
   17cd2:	nop    WORD PTR [rax+rax*1+0x0]
   17cd8:	mov    eax,DWORD PTR [rbp+0x448]
   17cde:	or     eax,DWORD PTR [rbp+0xc0]
   17ce4:	or     eax,DWORD PTR [rbp+0x324]
   17cea:	mov    edx,DWORD PTR [rbp+0x320]
   17cf0:	and    edx,eax
   17cf2:	mov    DWORD PTR [rbp+0x448],eax
   17cf8:	cmp    eax,edx
   17cfa:	jne    17d0d <xc_dom_parse_image+0x16d>
   17cfc:	pop    rbx
   17cfd:	xor    eax,eax
   17cff:	pop    rbp
   17d00:	pop    r12
   17d02:	ret    
   17d03:	mov    eax,0xffffffff
   17d08:	jmp    17c88 <xc_dom_parse_image+0xe8>
   17d0d:	mov    rdi,QWORD PTR [rbp+0x4c8]
   17d14:	lea    r9,[rip+0xde15]        # 25b30 <__FUNCTION__.13120>
   17d1b:	lea    r8,[rip+0xdc56]        # 25978 <deep_features.2995+0x838>
   17d22:	lea    rsi,[rip+0xd48e]        # 251b7 <deep_features.2995+0x77>
   17d29:	xor    eax,eax
   17d2b:	mov    ecx,0x3
   17d30:	mov    edx,0x3a0
   17d35:	call   60a0 <xc_dom_panic_func@plt>
   17d3a:	mov    eax,0xffffffff
   17d3f:	jmp    17c88 <xc_dom_parse_image+0xe8>
   17d44:	xchg   ax,ax
   17d46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017d50 <xc_dom_rambase_init>:
   17d50:	shr    rsi,0xc
   17d54:	sub    rsp,0x8
   17d58:	lea    rdx,[rip+0xdd91]        # 25af0 <__FUNCTION__.13129>
   17d5f:	mov    QWORD PTR [rdi+0x460],rsi
   17d66:	mov    QWORD PTR [rdi+0x410],rsi
   17d6d:	mov    rcx,rsi
   17d70:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17d77:	lea    rsi,[rip+0xd6cf]        # 2544d <deep_features.2995+0x30d>
   17d7e:	xor    eax,eax
   17d80:	call   5b60 <xc_dom_printf@plt>
   17d85:	xor    eax,eax
   17d87:	add    rsp,0x8
   17d8b:	ret    
   17d8c:	nop    DWORD PTR [rax+0x0]

0000000000017d90 <xc_dom_mem_init>:
   17d90:	push   r13
   17d92:	push   r12
   17d94:	mov    r13d,esi
   17d97:	push   rbp
   17d98:	push   rbx
   17d99:	mov    rbx,rdi
   17d9c:	sub    rsp,0x8
   17da0:	call   65e0 <xc_dom_set_arch_hooks@plt>
   17da5:	test   eax,eax
   17da7:	jne    17e28 <xc_dom_mem_init+0x98>
   17da9:	mov    r12d,eax
   17dac:	mov    rax,QWORD PTR [rbx+0x918]
   17db3:	mov    ecx,0x14
   17db8:	mov    ebp,r13d
   17dbb:	mov    rdi,QWORD PTR [rbx+0x4c8]
   17dc2:	lea    rdx,[rip+0xdd17]        # 25ae0 <__FUNCTION__.13136>
   17dc9:	lea    rsi,[rip+0xdbd0]        # 259a0 <deep_features.2995+0x860>
   17dd0:	mov    r9d,0x1
   17dd6:	mov    eax,DWORD PTR [rax+0x60]
   17dd9:	sub    ecx,eax
   17ddb:	shl    ebp,cl
   17ddd:	lea    ecx,[rax-0xa]
   17de0:	xor    eax,eax
   17de2:	mov    r8,rbp
   17de5:	shl    r9d,cl
   17de8:	mov    ecx,r13d
   17deb:	call   5b60 <xc_dom_printf@plt>
   17df0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   17df7:	lea    rdx,[rip+0xdce2]        # 25ae0 <__FUNCTION__.13136>
   17dfe:	lea    rsi,[rip+0xd675]        # 2547a <deep_features.2995+0x33a>
   17e05:	mov    QWORD PTR [rbx+0x468],rbp
   17e0c:	mov    rcx,rbp
   17e0f:	xor    eax,eax
   17e11:	call   5b60 <xc_dom_printf@plt>
   17e16:	add    rsp,0x8
   17e1a:	mov    eax,r12d
   17e1d:	pop    rbx
   17e1e:	pop    rbp
   17e1f:	pop    r12
   17e21:	pop    r13
   17e23:	ret    
   17e24:	nop    DWORD PTR [rax+0x0]
   17e28:	mov    rdi,QWORD PTR [rbx+0x4c8]
   17e2f:	lea    r9,[rip+0xdcaa]        # 25ae0 <__FUNCTION__.13136>
   17e36:	lea    r8,[rip+0xd626]        # 25463 <deep_features.2995+0x323>
   17e3d:	lea    rsi,[rip+0xd373]        # 251b7 <deep_features.2995+0x77>
   17e44:	mov    ecx,0x1
   17e49:	mov    edx,0x3bb
   17e4e:	xor    eax,eax
   17e50:	mov    r12d,0xffffffff
   17e56:	call   60a0 <xc_dom_panic_func@plt>
   17e5b:	jmp    17e16 <xc_dom_mem_init+0x86>
   17e5d:	nop    DWORD PTR [rax]

0000000000017e60 <xc_dom_update_guest_p2m>:
   17e60:	cmp    QWORD PTR [rdi+0x458],0x0
   17e68:	je     17f70 <xc_dom_update_guest_p2m+0x110>
   17e6e:	push   rbx
   17e6f:	mov    rax,QWORD PTR [rdi+0x918]
   17e76:	mov    rbx,rdi
   17e79:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17e80:	mov    r9d,DWORD PTR [rax+0x64]
   17e84:	cmp    r9d,0x4
   17e88:	je     17ef0 <xc_dom_update_guest_p2m+0x90>
   17e8a:	cmp    r9d,0x8
   17e8e:	jne    17f40 <xc_dom_update_guest_p2m+0xe0>
   17e94:	mov    rcx,QWORD PTR [rbx+0x470]
   17e9b:	lea    rdx,[rip+0xdc1e]        # 25ac0 <__FUNCTION__.13144>
   17ea2:	lea    rsi,[rip+0xd5fc]        # 254a5 <deep_features.2995+0x365>
   17ea9:	xor    eax,eax
   17eab:	call   5b60 <xc_dom_printf@plt>
   17eb0:	cmp    QWORD PTR [rbx+0x470],0x0
   17eb8:	mov    rcx,QWORD PTR [rbx+0x458]
   17ebf:	je     17ee4 <xc_dom_update_guest_p2m+0x84>
   17ec1:	xor    eax,eax
   17ec3:	nop    DWORD PTR [rax+rax*1+0x0]
   17ec8:	mov    rdx,QWORD PTR [rbx+0x450]
   17ecf:	mov    rdx,QWORD PTR [rdx+rax*8]
   17ed3:	mov    QWORD PTR [rcx+rax*8],rdx
   17ed7:	add    rax,0x1
   17edb:	cmp    QWORD PTR [rbx+0x470],rax
   17ee2:	ja     17ec8 <xc_dom_update_guest_p2m+0x68>
   17ee4:	xor    eax,eax
   17ee6:	pop    rbx
   17ee7:	ret    
   17ee8:	nop    DWORD PTR [rax+rax*1+0x0]
   17ef0:	mov    rcx,QWORD PTR [rbx+0x470]
   17ef7:	lea    rdx,[rip+0xdbc2]        # 25ac0 <__FUNCTION__.13144>
   17efe:	lea    rsi,[rip+0xd585]        # 2548a <deep_features.2995+0x34a>
   17f05:	xor    eax,eax
   17f07:	call   5b60 <xc_dom_printf@plt>
   17f0c:	cmp    QWORD PTR [rbx+0x470],0x0
   17f14:	mov    rcx,QWORD PTR [rbx+0x458]
   17f1b:	je     17ee4 <xc_dom_update_guest_p2m+0x84>
   17f1d:	xor    eax,eax
   17f1f:	nop
   17f20:	mov    rdx,QWORD PTR [rbx+0x450]
   17f27:	mov    rdx,QWORD PTR [rdx+rax*8]
   17f2b:	mov    DWORD PTR [rcx+rax*4],edx
   17f2e:	add    rax,0x1
   17f32:	cmp    QWORD PTR [rbx+0x470],rax
   17f39:	ja     17f20 <xc_dom_update_guest_p2m+0xc0>
   17f3b:	xor    eax,eax
   17f3d:	jmp    17ee6 <xc_dom_update_guest_p2m+0x86>
   17f3f:	nop
   17f40:	lea    r8,[rip+0xda89]        # 259d0 <deep_features.2995+0x890>
   17f47:	lea    rsi,[rip+0xd269]        # 251b7 <deep_features.2995+0x77>
   17f4e:	xor    eax,eax
   17f50:	mov    ecx,0x1
   17f55:	mov    edx,0x3ee
   17f5a:	call   60a0 <xc_dom_panic_func@plt>
   17f5f:	mov    eax,0xffffffff
   17f64:	pop    rbx
   17f65:	ret    
   17f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17f70:	xor    eax,eax
   17f72:	ret    
   17f73:	nop    DWORD PTR [rax]
   17f76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000017f80 <xc_dom_build_image>:
   17f80:	push   r15
   17f82:	push   r14
   17f84:	mov    r15,rdi
   17f87:	push   r13
   17f89:	push   r12
   17f8b:	lea    rdx,[rip+0xdb0e]        # 25aa0 <__FUNCTION__.13207>
   17f92:	push   rbp
   17f93:	push   rbx
   17f94:	lea    rsi,[rip+0xd3e0]        # 2537b <deep_features.2995+0x23b>
   17f9b:	xor    eax,eax
   17f9d:	sub    rsp,0x38
   17fa1:	mov    rdi,QWORD PTR [rdi+0x4c8]
   17fa8:	call   5b60 <xc_dom_printf@plt>
   17fad:	mov    rax,QWORD PTR [r15+0x918]
   17fb4:	test   rax,rax
   17fb7:	je     18571 <xc_dom_build_image+0x5f1>
   17fbd:	mov    eax,DWORD PTR [rax+0x60]
   17fc0:	mov    DWORD PTR [rsp+0x2c],eax
   17fc4:	mov    rax,QWORD PTR [r15+0x2f0]
   17fcb:	cmp    rax,0xffffffffffffffff
   17fcf:	je     17fd8 <xc_dom_build_image+0x58>
   17fd1:	mov    QWORD PTR [r15+0x418],rax
   17fd8:	mov    rcx,QWORD PTR [r15+0x348]
   17fdf:	mov    r8,QWORD PTR [r15+0x350]
   17fe6:	lea    rsi,[r15+0x348]
   17fed:	lea    rdx,[rip+0xcad4]        # 24ac8 <__func__.12147+0x2f8>
   17ff4:	mov    rdi,r15
   17ff7:	sub    r8,rcx
   17ffa:	call   5a00 <xc_dom_alloc_segment@plt>
   17fff:	test   eax,eax
   18001:	jne    1849e <xc_dom_build_image+0x51e>
   18007:	mov    rax,QWORD PTR [r15+0x8e0]
   1800e:	mov    rdi,r15
   18011:	call   QWORD PTR [rax+0x18]
   18014:	test   eax,eax
   18016:	jne    1849e <xc_dom_build_image+0x51e>
   1801c:	mov    edi,DWORD PTR [r15+0x10]
   18020:	test   edi,edi
   18022:	je     18098 <xc_dom_build_image+0x118>
   18024:	lea    rbp,[r15+0x18]
   18028:	xor    ebx,ebx
   1802a:	jmp    1803d <xc_dom_build_image+0xbd>
   1802c:	nop    DWORD PTR [rax+0x0]
   18030:	add    ebx,0x1
   18033:	add    rbp,0x38
   18037:	cmp    DWORD PTR [r15+0x10],ebx
   1803b:	jbe    18098 <xc_dom_build_image+0x118>
   1803d:	cmp    BYTE PTR [r15+0x2ed],0x0
   18045:	je     1804e <xc_dom_build_image+0xce>
   18047:	cmp    QWORD PTR [rbp+0x18],0x0
   1804c:	je     18030 <xc_dom_build_image+0xb0>
   1804e:	cmp    QWORD PTR [rbp+0x0],0x0
   18053:	je     18030 <xc_dom_build_image+0xb0>
   18055:	mov    esi,ebx
   18057:	mov    rdi,r15
   1805a:	call   17130 <xc_dom_build_module>
   1805f:	test   eax,eax
   18061:	jne    1849e <xc_dom_build_image+0x51e>
   18067:	test   ebx,ebx
   18069:	jne    18030 <xc_dom_build_image+0xb0>
   1806b:	mov    rax,QWORD PTR [r15+0x30]
   1806f:	mov    rsi,QWORD PTR [r15+0x38]
   18073:	add    ebx,0x1
   18076:	add    rbp,0x38
   1807a:	sub    rsi,rax
   1807d:	cmp    DWORD PTR [r15+0x10],ebx
   18081:	mov    QWORD PTR [r15+0x428],rax
   18088:	mov    QWORD PTR [r15+0x430],rsi
   1808f:	ja     1803d <xc_dom_build_image+0xbd>
   18091:	nop    DWORD PTR [rax+0x0]
   18098:	cmp    QWORD PTR [r15+0x88],0x0
   180a0:	je     18103 <xc_dom_build_image+0x183>
   180a2:	mov    rcx,QWORD PTR [r15+0x3a8]
   180a9:	mov    r8,QWORD PTR [r15+0x90]
   180b0:	lea    rsi,[r15+0x3a8]
   180b7:	lea    rdx,[rip+0xd402]        # 254c0 <deep_features.2995+0x380>
   180be:	mov    rdi,r15
   180c1:	call   5a00 <xc_dom_alloc_segment@plt>
   180c6:	test   eax,eax
   180c8:	jne    1849e <xc_dom_build_image+0x51e>
   180ce:	mov    rdx,QWORD PTR [r15+0x3c0]
   180d5:	mov    rsi,QWORD PTR [r15+0x3b8]
   180dc:	mov    rdi,r15
   180df:	call   6320 <xc_dom_pfn_to_ptr@plt>
   180e4:	test   rax,rax
   180e7:	je     185a7 <xc_dom_build_image+0x627>
   180ed:	mov    rsi,QWORD PTR [r15+0x88]
   180f4:	mov    rdx,QWORD PTR [r15+0x90]
   180fb:	mov    rdi,rax
   180fe:	call   5eb0 <memcpy@plt>
   18103:	lea    rax,[r15+0x9e0]
   1810a:	lea    r13,[r15+0x980]
   18111:	mov    QWORD PTR [rsp+0x20],rax
   18116:	mov    ecx,DWORD PTR [r13+0x8]
   1811a:	test   ecx,ecx
   1811c:	je     182de <xc_dom_build_image+0x35e>
   18122:	mov    rdi,QWORD PTR [r15+0x4c8]
   18129:	mov    r8,QWORD PTR [r13+0x10]
   1812d:	lea    rdx,[rip+0xd94c]        # 25a80 <__FUNCTION__.13193>
   18134:	lea    rsi,[rip+0xd390]        # 254cb <deep_features.2995+0x38b>
   1813b:	xor    eax,eax
   1813d:	call   5b60 <xc_dom_printf@plt>
   18142:	mov    rbx,QWORD PTR [r13+0x10]
   18146:	mov    edx,DWORD PTR [r13+0x8]
   1814a:	mov    rax,rbx
   1814d:	and    eax,0xfff
   18152:	lea    r12,[rdx+rax*1+0xfff]
   1815a:	shr    r12,0xc
   1815e:	lea    rdi,[r12*8+0x0]
   18166:	mov    DWORD PTR [rsp+0x28],r12d
   1816b:	call   5ff0 <malloc@plt>
   18170:	test   rax,rax
   18173:	mov    QWORD PTR [rsp+0x8],rax
   18178:	je     18528 <xc_dom_build_image+0x5a8>
   1817e:	shr    rbx,0xc
   18182:	test   r12,r12
   18185:	mov    QWORD PTR [rsp+0x10],rbx
   1818a:	je     1826d <xc_dom_build_image+0x2ed>
   18190:	lea    esi,[r12-0x1]
   18195:	mov    rdx,QWORD PTR [rsp+0x8]
   1819a:	mov    rax,rbx
   1819d:	neg    rax
   181a0:	lea    rcx,[rsi+rbx*1+0x1]
   181a5:	lea    rdx,[rdx+rax*8]
   181a9:	mov    rax,rbx
   181ac:	nop    DWORD PTR [rax+0x0]
   181b0:	mov    QWORD PTR [rdx+rax*8],rax
   181b4:	add    rax,0x1
   181b8:	cmp    rcx,rax
   181bb:	jne    181b0 <xc_dom_build_image+0x230>
   181bd:	mov    rax,QWORD PTR [rsp+0x8]
   181c2:	mov    QWORD PTR [rsp+0x18],r12
   181c7:	mov    rbp,QWORD PTR [r15+0x4c8]
   181ce:	mov    ebx,DWORD PTR [r15+0x4d0]
   181d5:	lea    rdx,[rax+rsi*8+0x8]
   181da:	mov    r12,rax
   181dd:	mov    r14,rdx
   181e0:	jmp    18227 <xc_dom_build_image+0x2a7>
   181e2:	nop    WORD PTR [rax+rax*1+0x0]
   181e8:	sub    rcx,0x1
   181ec:	mov    eax,0x0
   181f1:	cmp    rcx,0x100000
   181f8:	cmovne rax,rcx
   181fc:	mov    QWORD PTR [r15+0x950],rax
   18203:	mov    r8,QWORD PTR [r12]
   18207:	mov    edx,0x2
   1820c:	mov    esi,ebx
   1820e:	mov    rdi,rbp
   18211:	call   64e0 <xc_domain_add_to_physmap@plt>
   18216:	test   eax,eax
   18218:	jne    18478 <xc_dom_build_image+0x4f8>
   1821e:	add    r12,0x8
   18222:	cmp    r14,r12
   18225:	je     18268 <xc_dom_build_image+0x2e8>
   18227:	xor    r8d,r8d
   1822a:	xor    ecx,ecx
   1822c:	mov    r9,r12
   1822f:	mov    edx,0x1
   18234:	mov    esi,ebx
   18236:	mov    rdi,rbp
   18239:	call   6380 <xc_domain_populate_physmap@plt>
   1823e:	cmp    eax,0x1
   18241:	je     1821e <xc_dom_build_image+0x29e>
   18243:	mov    rcx,QWORD PTR [r15+0x950]
   1824a:	test   rcx,rcx
   1824d:	jne    181e8 <xc_dom_build_image+0x268>
   1824f:	mov    rax,QWORD PTR [r15+0x948]
   18256:	lea    rcx,[rax-0x1]
   1825a:	mov    QWORD PTR [r15+0x948],rcx
   18261:	jmp    18203 <xc_dom_build_image+0x283>
   18263:	nop    DWORD PTR [rax+rax*1+0x0]
   18268:	mov    r12,QWORD PTR [rsp+0x18]
   1826d:	mov    esi,DWORD PTR [r15+0x4d0]
   18274:	mov    rdi,QWORD PTR [r15+0x4c8]
   1827b:	mov    edx,r12d
   1827e:	mov    r8,QWORD PTR [rsp+0x10]
   18283:	shl    edx,0xc
   18286:	mov    ecx,0x3
   1828b:	call   6590 <xc_map_foreign_range@plt>
   18290:	test   rax,rax
   18293:	mov    rbx,rax
   18296:	je     18547 <xc_dom_build_image+0x5c7>
   1829c:	mov    rdi,QWORD PTR [r13+0x10]
   182a0:	mov    edx,DWORD PTR [r13+0x8]
   182a4:	add    r13,0x18
   182a8:	mov    rsi,QWORD PTR [r13-0x18]
   182ac:	and    edi,0xfff
   182b2:	add    rdi,rbx
   182b5:	call   5eb0 <memcpy@plt>
   182ba:	mov    rsi,r12
   182bd:	mov    rdi,rbx
   182c0:	shl    rsi,0xc
   182c4:	call   61b0 <munmap@plt>
   182c9:	mov    rdi,QWORD PTR [rsp+0x8]
   182ce:	call   5900 <free@plt>
   182d3:	cmp    r13,QWORD PTR [rsp+0x20]
   182d8:	jne    18116 <xc_dom_build_image+0x196>
   182de:	mov    rax,QWORD PTR [r15+0x918]
   182e5:	mov    edx,DWORD PTR [rax+0x68]
   182e8:	test   edx,edx
   182ea:	jne    184b0 <xc_dom_build_image+0x530>
   182f0:	mov    QWORD PTR [r15+0x310],0xffffffffffffffff
   182fb:	mov    rdx,QWORD PTR [rax+0x10]
   182ff:	test   rdx,rdx
   18302:	jne    184f8 <xc_dom_build_image+0x578>
   18308:	mov    rdi,r15
   1830b:	call   QWORD PTR [rax]
   1830d:	test   eax,eax
   1830f:	jne    1849e <xc_dom_build_image+0x51e>
   18315:	mov    rax,QWORD PTR [r15+0x918]
   1831c:	mov    rdi,r15
   1831f:	call   QWORD PTR [rax+0x8]
   18322:	test   eax,eax
   18324:	mov    r13d,eax
   18327:	jne    1849e <xc_dom_build_image+0x51e>
   1832d:	mov    esi,DWORD PTR [r15+0x438]
   18334:	test   esi,esi
   18336:	je     18358 <xc_dom_build_image+0x3d8>
   18338:	lea    rsi,[rip+0xd1f6]        # 25535 <deep_features.2995+0x3f5>
   1833f:	mov    rdi,r15
   18342:	call   63c0 <xc_dom_alloc_page@plt>
   18347:	cmp    rax,0xffffffffffffffff
   1834b:	mov    QWORD PTR [r15+0x408],rax
   18352:	je     1849e <xc_dom_build_image+0x51e>
   18358:	mov    rcx,QWORD PTR [r15+0x418]
   1835f:	mov    rdi,QWORD PTR [r15+0x4c8]
   18366:	lea    rdx,[rip+0xd733]        # 25aa0 <__FUNCTION__.13207>
   1836d:	lea    rsi,[rip+0xd185]        # 254f9 <deep_features.2995+0x3b9>
   18374:	xor    eax,eax
   18376:	call   5b60 <xc_dom_printf@plt>
   1837b:	mov    rcx,QWORD PTR [r15+0x440]
   18382:	mov    rdi,QWORD PTR [r15+0x4c8]
   18389:	lea    rsi,[rip+0xd187]        # 25517 <deep_features.2995+0x3d7>
   18390:	lea    rdx,[rip+0xd709]        # 25aa0 <__FUNCTION__.13207>
   18397:	xor    eax,eax
   18399:	call   5b60 <xc_dom_printf@plt>
   1839e:	mov    rsi,QWORD PTR [r15+0x440]
   183a5:	test   rsi,rsi
   183a8:	jne    18510 <xc_dom_build_image+0x590>
   183ae:	mov    ecx,DWORD PTR [r15+0x10]
   183b2:	test   ecx,ecx
   183b4:	je     1842d <xc_dom_build_image+0x4ad>
   183b6:	movzx  ecx,BYTE PTR [rsp+0x2c]
   183bb:	mov    r12d,0x1
   183c1:	lea    rbp,[r15+0x18]
   183c5:	xor    ebx,ebx
   183c7:	shl    r12,cl
   183ca:	mov    r12d,r12d
   183cd:	nop    DWORD PTR [rax]
   183d0:	cmp    BYTE PTR [r15+0x2ed],0x0
   183d8:	je     18420 <xc_dom_build_image+0x4a0>
   183da:	cmp    QWORD PTR [rbp+0x18],0x0
   183df:	jne    18420 <xc_dom_build_image+0x4a0>
   183e1:	cmp    QWORD PTR [rbp+0x0],0x0
   183e6:	je     18420 <xc_dom_build_image+0x4a0>
   183e8:	mov    esi,ebx
   183ea:	mov    rdi,r15
   183ed:	call   17130 <xc_dom_build_module>
   183f2:	test   eax,eax
   183f4:	jne    1849e <xc_dom_build_image+0x51e>
   183fa:	test   ebx,ebx
   183fc:	jne    18420 <xc_dom_build_image+0x4a0>
   183fe:	mov    rax,QWORD PTR [r15+0x40]
   18402:	or     QWORD PTR [r15+0x4a8],0x8
   1840a:	mov    QWORD PTR [r15+0x428],rax
   18411:	mov    rax,QWORD PTR [r15+0x48]
   18415:	imul   rax,r12
   18419:	mov    QWORD PTR [r15+0x430],rax
   18420:	add    ebx,0x1
   18423:	add    rbp,0x38
   18427:	cmp    DWORD PTR [r15+0x10],ebx
   1842b:	ja     183d0 <xc_dom_build_image+0x450>
   1842d:	mov    rax,QWORD PTR [r15+0x918]
   18434:	mov    rax,QWORD PTR [rax+0x10]
   18438:	test   rax,rax
   1843b:	je     18461 <xc_dom_build_image+0x4e1>
   1843d:	cmp    QWORD PTR [r15+0x310],0xffffffffffffffff
   18445:	je     18461 <xc_dom_build_image+0x4e1>
   18447:	mov    rdi,r15
   1844a:	call   rax
   1844c:	test   eax,eax
   1844e:	mov    r13d,eax
   18451:	jne    1849e <xc_dom_build_image+0x51e>
   18453:	mov    rax,QWORD PTR [r15+0x310]
   1845a:	mov    QWORD PTR [r15+0x368],rax
   18461:	add    rsp,0x38
   18465:	mov    eax,r13d
   18468:	pop    rbx
   18469:	pop    rbp
   1846a:	pop    r12
   1846c:	pop    r13
   1846e:	pop    r14
   18470:	pop    r15
   18472:	ret    
   18473:	nop    DWORD PTR [rax+rax*1+0x0]
   18478:	mov    rdi,QWORD PTR [r15+0x4c8]
   1847f:	lea    rdx,[rip+0xd5fa]        # 25a80 <__FUNCTION__.13193>
   18486:	lea    rsi,[rip+0xd0b3]        # 25540 <deep_features.2995+0x400>
   1848d:	xor    eax,eax
   1848f:	call   5b60 <xc_dom_printf@plt>
   18494:	mov    rdi,QWORD PTR [rsp+0x8]
   18499:	call   5900 <free@plt>
   1849e:	mov    r13d,0xffffffff
   184a4:	jmp    18461 <xc_dom_build_image+0x4e1>
   184a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   184b0:	mov    rsi,QWORD PTR [r15+0x310]
   184b7:	cmp    rsi,QWORD PTR [r15+0x2f0]
   184be:	jae    182f0 <xc_dom_build_image+0x370>
   184c4:	mov    ecx,DWORD PTR [rax+0x60]
   184c7:	mov    edx,0x1
   184cc:	shl    rdx,cl
   184cf:	sub    rdx,0x1
   184d3:	test   rdx,rsi
   184d6:	jne    182f0 <xc_dom_build_image+0x370>
   184dc:	mov    rdx,QWORD PTR [rax+0x10]
   184e0:	test   rdx,rdx
   184e3:	je     18308 <xc_dom_build_image+0x388>
   184e9:	cmp    rsi,0xffffffffffffffff
   184ed:	jne    18308 <xc_dom_build_image+0x388>
   184f3:	nop    DWORD PTR [rax+rax*1+0x0]
   184f8:	mov    rdi,r15
   184fb:	call   rdx
   184fd:	test   eax,eax
   184ff:	jne    1849e <xc_dom_build_image+0x51e>
   18501:	mov    rax,QWORD PTR [r15+0x918]
   18508:	jmp    18308 <xc_dom_build_image+0x388>
   1850d:	nop    DWORD PTR [rax]
   18510:	mov    rdi,r15
   18513:	call   16350 <xc_dom_alloc_pad>
   18518:	test   eax,eax
   1851a:	je     183ae <xc_dom_build_image+0x42e>
   18520:	jmp    1849e <xc_dom_build_image+0x51e>
   18525:	nop    DWORD PTR [rax]
   18528:	mov    rdi,QWORD PTR [r15+0x4c8]
   1852f:	lea    rdx,[rip+0xd54a]        # 25a80 <__FUNCTION__.13193>
   18536:	lea    rsi,[rip+0xcfaa]        # 254e7 <deep_features.2995+0x3a7>
   1853d:	call   5b60 <xc_dom_printf@plt>
   18542:	jmp    18494 <xc_dom_build_image+0x514>
   18547:	mov    rdi,QWORD PTR [r15+0x4c8]
   1854e:	mov    r8,QWORD PTR [rsp+0x10]
   18553:	lea    rdx,[rip+0xd526]        # 25a80 <__FUNCTION__.13193>
   1855a:	mov    ecx,DWORD PTR [rsp+0x28]
   1855e:	lea    rsi,[rip+0xd4db]        # 25a40 <deep_features.2995+0x900>
   18565:	xor    eax,eax
   18567:	call   5b60 <xc_dom_printf@plt>
   1856c:	jmp    18494 <xc_dom_build_image+0x514>
   18571:	mov    rdi,QWORD PTR [r15+0x4c8]
   18578:	lea    r9,[rip+0xd521]        # 25aa0 <__FUNCTION__.13207>
   1857f:	lea    r8,[rip+0xcedd]        # 25463 <deep_features.2995+0x323>
   18586:	lea    rsi,[rip+0xcc2a]        # 251b7 <deep_features.2995+0x77>
   1858d:	mov    ecx,0x1
   18592:	mov    edx,0x49d
   18597:	mov    r13d,0xffffffff
   1859d:	call   60a0 <xc_dom_panic_func@plt>
   185a2:	jmp    18461 <xc_dom_build_image+0x4e1>
   185a7:	mov    rdi,QWORD PTR [r15+0x4c8]
   185ae:	lea    rdx,[rip+0xd4eb]        # 25aa0 <__FUNCTION__.13207>
   185b5:	lea    rsi,[rip+0xd444]        # 25a00 <deep_features.2995+0x8c0>
   185bc:	mov    r13d,0xffffffff
   185c2:	call   5b60 <xc_dom_printf@plt>
   185c7:	jmp    18461 <xc_dom_build_image+0x4e1>
   185cc:	nop    DWORD PTR [rax+0x0]

00000000000185d0 <xc_dom_set_gnttab_entry.part.0>:
   185d0:	push   r13
   185d2:	push   r12
   185d4:	mov    r13,rsi
   185d7:	push   rbp
   185d8:	push   rbx
   185d9:	lea    rsi,[rip+0xd81e]        # 25dfe <__FUNCTION__.12887+0xe>
   185e0:	mov    ebx,edx
   185e2:	lea    rdx,[rip+0xdc07]        # 261f0 <__func__.13015>
   185e9:	mov    r12d,r8d
   185ec:	sub    rsp,0x10
   185f0:	mov    rbp,r9
   185f3:	xor    eax,eax
   185f5:	push   r9
   185f7:	mov    r9d,r8d
   185fa:	mov    r8d,ebx
   185fd:	call   5b60 <xc_dom_printf@plt>
   18602:	lea    rax,[r13+rbx*8+0x0]
   18607:	mov    edx,0x1
   1860c:	mov    WORD PTR [rax],dx
   1860f:	mov    WORD PTR [rax+0x2],r12w
   18614:	mov    DWORD PTR [rax+0x4],ebp
   18617:	add    rsp,0x18
   1861b:	pop    rbx
   1861c:	pop    rbp
   1861d:	pop    r12
   1861f:	pop    r13
   18621:	ret    
   18622:	nop    DWORD PTR [rax+0x0]
   18626:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000018630 <compat_gnttab_seed>:
   18630:	push   r15
   18632:	push   r14
   18634:	mov    r15,0xffffffffffffffff
   1863b:	push   r13
   1863d:	push   r12
   1863f:	push   rbp
   18640:	push   rbx
   18641:	mov    ebp,esi
   18643:	mov    rbx,rdi
   18646:	sub    rsp,0x78
   1864a:	lea    r13,[rsp+0x40]
   1864f:	mov    QWORD PTR [rsp+0x10],rdx
   18654:	mov    edx,0x8
   18659:	mov    rax,QWORD PTR fs:0x28
   18662:	mov    QWORD PTR [rsp+0x68],rax
   18667:	xor    eax,eax
   18669:	mov    rsi,r13
   1866c:	mov    QWORD PTR [rsp+0x18],rcx
   18671:	mov    DWORD PTR [rsp+0x8],r8d
   18676:	mov    DWORD PTR [rsp+0xc],r9d
   1867b:	mov    QWORD PTR [rsp+0x40],0x0
   18684:	mov    QWORD PTR [rsp+0x48],0x0
   1868d:	mov    DWORD PTR [rsp+0x50],0x0
   18695:	mov    QWORD PTR [rsp+0x58],r15
   1869a:	mov    QWORD PTR [rsp+0x60],0x0
   186a3:	call   6220 <xc__hypercall_buffer_alloc@plt>
   186a8:	test   rax,rax
   186ab:	je     18813 <compat_gnttab_seed+0x1e3>
   186b1:	mov    r14,rax
   186b4:	mov    rax,QWORD PTR [rsp+0x48]
   186b9:	mov    WORD PTR [rsp+0x20],bp
   186be:	mov    DWORD PTR [rsp+0x24],0x1
   186c6:	lea    rdx,[rsp+0x20]
   186cb:	mov    r8d,0x1
   186d1:	mov    esi,0x2
   186d6:	mov    rdi,rbx
   186d9:	test   rax,rax
   186dc:	cmove  rax,r13
   186e0:	xor    ecx,ecx
   186e2:	mov    rax,QWORD PTR [rax]
   186e5:	mov    WORD PTR [rsp+0x28],cx
   186ea:	mov    ecx,0x18
   186ef:	mov    QWORD PTR [rsp+0x30],rax
   186f4:	call   59a0 <xc_gnttab_op@plt>
   186f9:	mov    rsi,QWORD PTR [rsp+0x48]
   186fe:	mov    r12d,eax
   18701:	mov    rdi,rbx
   18704:	mov    r14,QWORD PTR [r14]
   18707:	test   rsi,rsi
   1870a:	cmove  rsi,r13
   1870e:	call   6190 <xc__hypercall_buffer_free@plt>
   18713:	test   r12d,r12d
   18716:	jne    187d8 <compat_gnttab_seed+0x1a8>
   1871c:	movzx  eax,WORD PTR [rsp+0x28]
   18721:	test   ax,ax
   18724:	jne    18840 <compat_gnttab_seed+0x210>
   1872a:	cmp    r14,0xffffffffffffffff
   1872e:	je     18813 <compat_gnttab_seed+0x1e3>
   18734:	mov    r8,r14
   18737:	mov    ecx,0x3
   1873c:	mov    edx,0x1000
   18741:	mov    esi,ebp
   18743:	mov    rdi,rbx
   18746:	call   6590 <xc_map_foreign_range@plt>
   1874b:	test   rax,rax
   1874e:	mov    r13,rax
   18751:	je     1886b <compat_gnttab_seed+0x23b>
   18757:	mov    r8d,DWORD PTR [rsp+0x8]
   1875c:	cmp    ebp,r8d
   1875f:	je     1877e <compat_gnttab_seed+0x14e>
   18761:	mov    rax,QWORD PTR [rsp+0x10]
   18766:	cmp    rax,0xffffffffffffffff
   1876a:	je     1877e <compat_gnttab_seed+0x14e>
   1876c:	mov    r9,rax
   1876f:	mov    ecx,ebp
   18771:	xor    edx,edx
   18773:	mov    rsi,r13
   18776:	mov    rdi,rbx
   18779:	call   185d0 <xc_dom_set_gnttab_entry.part.0>
   1877e:	mov    r8d,DWORD PTR [rsp+0xc]
   18783:	cmp    ebp,r8d
   18786:	je     187a8 <compat_gnttab_seed+0x178>
   18788:	mov    rax,QWORD PTR [rsp+0x18]
   1878d:	cmp    rax,0xffffffffffffffff
   18791:	je     187a8 <compat_gnttab_seed+0x178>
   18793:	mov    r9,rax
   18796:	mov    ecx,ebp
   18798:	mov    edx,0x1
   1879d:	mov    rsi,r13
   187a0:	mov    rdi,rbx
   187a3:	call   185d0 <xc_dom_set_gnttab_entry.part.0>
   187a8:	mov    esi,0x1000
   187ad:	mov    rdi,r13
   187b0:	call   61b0 <munmap@plt>
   187b5:	cmp    eax,0xffffffff
   187b8:	je     18848 <compat_gnttab_seed+0x218>
   187be:	mov    ecx,0x1
   187c3:	mov    rdx,r14
   187c6:	mov    esi,ebp
   187c8:	mov    rdi,rbx
   187cb:	call   65b0 <xc_domain_cacheflush@plt>
   187d0:	jmp    18819 <compat_gnttab_seed+0x1e9>
   187d2:	nop    WORD PTR [rax+rax*1+0x0]
   187d8:	movsx  ebp,WORD PTR [rsp+0x28]
   187dd:	call   5940 <__errno_location@plt>
   187e2:	mov    r12d,DWORD PTR [rax]
   187e5:	push   rbp
   187e6:	lea    r9,[rip+0xda23]        # 26210 <__FUNCTION__.13006>
   187ed:	push   r12
   187ef:	lea    r8,[rip+0xd6a2]        # 25e98 <__FUNCTION__.12887+0xa8>
   187f6:	mov    ecx,0x1
   187fb:	mov    edx,0xfc
   18800:	lea    rsi,[rip+0xd614]        # 25e1b <__FUNCTION__.12887+0x2b>
   18807:	xor    eax,eax
   18809:	mov    rdi,rbx
   1880c:	call   60a0 <xc_dom_panic_func@plt>
   18811:	pop    rax
   18812:	pop    rdx
   18813:	mov    r12d,0xffffffff
   18819:	mov    rcx,QWORD PTR [rsp+0x68]
   1881e:	xor    rcx,QWORD PTR fs:0x28
   18827:	mov    eax,r12d
   1882a:	jne    18891 <compat_gnttab_seed+0x261>
   1882c:	add    rsp,0x78
   18830:	pop    rbx
   18831:	pop    rbp
   18832:	pop    r12
   18834:	pop    r13
   18836:	pop    r14
   18838:	pop    r15
   1883a:	ret    
   1883b:	nop    DWORD PTR [rax+rax*1+0x0]
   18840:	movsx  ebp,ax
   18843:	jmp    187e5 <compat_gnttab_seed+0x1b5>
   18845:	nop    DWORD PTR [rax]
   18848:	call   5940 <__errno_location@plt>
   1884d:	mov    eax,DWORD PTR [rax]
   1884f:	lea    r9,[rip+0xd9da]        # 26230 <__func__.13026>
   18856:	lea    r8,[rip+0xd6ab]        # 25f08 <__FUNCTION__.12887+0x118>
   1885d:	mov    ecx,0x1
   18862:	mov    edx,0x13b
   18867:	push   rax
   18868:	push   rbp
   18869:	jmp    18800 <compat_gnttab_seed+0x1d0>
   1886b:	call   5940 <__errno_location@plt>
   18870:	mov    eax,DWORD PTR [rax]
   18872:	lea    r9,[rip+0xd9b7]        # 26230 <__func__.13026>
   18879:	lea    r8,[rip+0xd658]        # 25ed8 <__FUNCTION__.12887+0xe8>
   18880:	mov    ecx,0x1
   18885:	mov    edx,0x12d
   1888a:	push   rax
   1888b:	push   rbp
   1888c:	jmp    18800 <compat_gnttab_seed+0x1d0>
   18891:	call   5b80 <__stack_chk_fail@plt>
   18896:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000188a0 <xc_dom_compat_check>:
   188a0:	push   r14
   188a2:	push   r13
   188a4:	lea    rsi,[rdi+0x4dc]
   188ab:	push   r12
   188ad:	push   rbp
   188ae:	mov    edx,0x3ff
   188b3:	push   rbx
   188b4:	mov    rbp,rdi
   188b7:	sub    rsp,0x420
   188be:	lea    rcx,[rsp+0x10]
   188c3:	lea    r13,[rsp+0x8]
   188c8:	mov    rax,QWORD PTR fs:0x28
   188d1:	mov    QWORD PTR [rsp+0x418],rax
   188d9:	xor    eax,eax
   188db:	mov    rdi,rcx
   188de:	call   5980 <strncpy@plt>
   188e3:	lea    rsi,[rip+0xcb12]        # 253fc <deep_features.2995+0x2bc>
   188ea:	mov    rdx,r13
   188ed:	mov    rdi,rax
   188f0:	mov    BYTE PTR [rsp+0x40f],0x0
   188f8:	call   5d40 <strtok_r@plt>
   188fd:	test   rax,rax
   18900:	je     189c0 <xc_dom_compat_check+0x120>
   18906:	mov    rbx,rax
   18909:	xor    r12d,r12d
   1890c:	lea    r14,[rip+0xd516]        # 25e29 <__FUNCTION__.12887+0x39>
   18913:	jmp    18950 <xc_dom_compat_check+0xb0>
   18915:	nop    DWORD PTR [rax]
   18918:	lea    rdx,[rip+0xda11]        # 26330 <__FUNCTION__.12951>
   1891f:	lea    rsi,[rip+0xd64a]        # 25f70 <__FUNCTION__.12887+0x180>
   18926:	mov    r8,r14
   18929:	mov    rcx,rbx
   1892c:	xor    eax,eax
   1892e:	add    r12d,0x1
   18932:	call   5b60 <xc_dom_printf@plt>
   18937:	lea    rsi,[rip+0xcabe]        # 253fc <deep_features.2995+0x2bc>
   1893e:	xor    edi,edi
   18940:	mov    rdx,r13
   18943:	call   5d40 <strtok_r@plt>
   18948:	test   rax,rax
   1894b:	mov    rbx,rax
   1894e:	je     18990 <xc_dom_compat_check+0xf0>
   18950:	mov    rdi,QWORD PTR [rbp+0x340]
   18957:	mov    rsi,rbx
   1895a:	call   5e10 <strcmp@plt>
   1895f:	test   eax,eax
   18961:	mov    rdi,QWORD PTR [rbp+0x4c8]
   18968:	je     18918 <xc_dom_compat_check+0x78>
   1896a:	lea    r8,[rip+0xbf96]        # 24907 <__func__.12147+0x137>
   18971:	lea    rdx,[rip+0xd9b8]        # 26330 <__FUNCTION__.12951>
   18978:	lea    rsi,[rip+0xd5f1]        # 25f70 <__FUNCTION__.12887+0x180>
   1897f:	mov    rcx,rbx
   18982:	xor    eax,eax
   18984:	call   5b60 <xc_dom_printf@plt>
   18989:	jmp    18937 <xc_dom_compat_check+0x97>
   1898b:	nop    DWORD PTR [rax+rax*1+0x0]
   18990:	test   r12d,r12d
   18993:	je     189c0 <xc_dom_compat_check+0x120>
   18995:	mov    rcx,QWORD PTR [rsp+0x418]
   1899d:	xor    rcx,QWORD PTR fs:0x28
   189a6:	mov    eax,r12d
   189a9:	jne    189fe <xc_dom_compat_check+0x15e>
   189ab:	add    rsp,0x420
   189b2:	pop    rbx
   189b3:	pop    rbp
   189b4:	pop    r12
   189b6:	pop    r13
   189b8:	pop    r14
   189ba:	ret    
   189bb:	nop    DWORD PTR [rax+rax*1+0x0]
   189c0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   189c7:	sub    rsp,0x8
   189cb:	lea    r9,[rip+0xd95e]        # 26330 <__FUNCTION__.12951>
   189d2:	push   QWORD PTR [rbp+0x340]
   189d8:	lea    r8,[rip+0xd559]        # 25f38 <__FUNCTION__.12887+0x148>
   189df:	lea    rsi,[rip+0xd435]        # 25e1b <__FUNCTION__.12887+0x2b>
   189e6:	mov    edx,0x59
   189eb:	xor    eax,eax
   189ed:	mov    ecx,0x2
   189f2:	call   60a0 <xc_dom_panic_func@plt>
   189f7:	xor    r12d,r12d
   189fa:	pop    rax
   189fb:	pop    rdx
   189fc:	jmp    18995 <xc_dom_compat_check+0xf5>
   189fe:	call   5b80 <__stack_chk_fail@plt>
   18a03:	nop    DWORD PTR [rax]
   18a06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000018a10 <xc_dom_boot_xen_init>:
   18a10:	push   r12
   18a12:	push   rbp
   18a13:	mov    rbp,rsi
   18a16:	push   rbx
   18a17:	mov    rbx,rdi
   18a1a:	mov    QWORD PTR [rdi+0x4c8],rsi
   18a21:	lea    r12,[rbx+0x4dc]
   18a28:	mov    DWORD PTR [rdi+0x4d0],edx
   18a2e:	xor    esi,esi
   18a30:	xor    edx,edx
   18a32:	mov    rdi,rbp
   18a35:	call   5be0 <xc_version@plt>
   18a3a:	mov    rdx,r12
   18a3d:	mov    DWORD PTR [rbx+0x4d8],eax
   18a43:	mov    esi,0x3
   18a48:	mov    rdi,rbp
   18a4b:	call   5be0 <xc_version@plt>
   18a50:	test   eax,eax
   18a52:	js     18a90 <xc_dom_boot_xen_init+0x80>
   18a54:	mov    r8d,DWORD PTR [rbx+0x4d8]
   18a5b:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18a62:	lea    rdx,[rip+0xd8a7]        # 26310 <__FUNCTION__.12960>
   18a69:	lea    rsi,[rip+0xd3e0]        # 25e50 <__FUNCTION__.12887+0x60>
   18a70:	xor    eax,eax
   18a72:	mov    r9,r12
   18a75:	mov    ecx,r8d
   18a78:	movzx  r8d,r8b
   18a7c:	sar    ecx,0x10
   18a7f:	call   5b60 <xc_dom_printf@plt>
   18a84:	xor    eax,eax
   18a86:	pop    rbx
   18a87:	pop    rbp
   18a88:	pop    r12
   18a8a:	ret    
   18a8b:	nop    DWORD PTR [rax+rax*1+0x0]
   18a90:	lea    r8,[rip+0xd39e]        # 25e35 <__FUNCTION__.12887+0x45>
   18a97:	lea    rsi,[rip+0xd37d]        # 25e1b <__FUNCTION__.12887+0x2b>
   18a9e:	xor    eax,eax
   18aa0:	mov    ecx,0x1
   18aa5:	mov    edx,0x66
   18aaa:	mov    rdi,rbp
   18aad:	call   60a0 <xc_dom_panic_func@plt>
   18ab2:	mov    eax,0xffffffff
   18ab7:	jmp    18a86 <xc_dom_boot_xen_init+0x76>
   18ab9:	nop    DWORD PTR [rax+0x0]

0000000000018ac0 <xc_dom_boot_mem_init>:
   18ac0:	push   rbp
   18ac1:	push   rbx
   18ac2:	mov    rbx,rdi
   18ac5:	lea    rdx,[rip+0xd824]        # 262f0 <__FUNCTION__.12965>
   18acc:	lea    rsi,[rip+0xc8a8]        # 2537b <deep_features.2995+0x23b>
   18ad3:	xor    eax,eax
   18ad5:	sub    rsp,0x8
   18ad9:	mov    rdi,QWORD PTR [rdi+0x4c8]
   18ae0:	call   5b60 <xc_dom_printf@plt>
   18ae5:	mov    rax,QWORD PTR [rbx+0x918]
   18aec:	mov    rdi,rbx
   18aef:	call   QWORD PTR [rax+0x48]
   18af2:	test   eax,eax
   18af4:	mov    ebp,eax
   18af6:	je     18b25 <xc_dom_boot_mem_init+0x65>
   18af8:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18aff:	lea    r9,[rip+0xd7ea]        # 262f0 <__FUNCTION__.12965>
   18b06:	lea    r8,[rip+0xd483]        # 25f90 <__FUNCTION__.12887+0x1a0>
   18b0d:	lea    rsi,[rip+0xd307]        # 25e1b <__FUNCTION__.12887+0x2b>
   18b14:	mov    ecx,0x4
   18b19:	mov    edx,0x7a
   18b1e:	xor    eax,eax
   18b20:	call   60a0 <xc_dom_panic_func@plt>
   18b25:	add    rsp,0x8
   18b29:	mov    eax,ebp
   18b2b:	pop    rbx
   18b2c:	pop    rbp
   18b2d:	ret    
   18b2e:	xchg   ax,ax

0000000000018b30 <xc_dom_boot_domU_map>:
   18b30:	push   r15
   18b32:	push   r14
   18b34:	mov    r15,rdi
   18b37:	push   r13
   18b39:	push   r12
   18b3b:	push   rbp
   18b3c:	push   rbx
   18b3d:	lea    rbx,[rdx+rdx*2]
   18b41:	mov    rbp,rdx
   18b44:	sub    rsp,0x28
   18b48:	mov    rax,QWORD PTR [rdi+0x918]
   18b4f:	shl    rbx,0x3
   18b53:	mov    QWORD PTR [rsp+0x18],rsi
   18b58:	mov    rsi,rbx
   18b5b:	mov    eax,DWORD PTR [rax+0x60]
   18b5e:	mov    DWORD PTR [rsp+0x14],eax
   18b62:	call   5a60 <xc_dom_malloc@plt>
   18b67:	test   rax,rax
   18b6a:	mov    QWORD PTR [rsp+0x8],rax
   18b6f:	je     18c3d <xc_dom_boot_domU_map+0x10d>
   18b75:	test   rbp,rbp
   18b78:	je     18be7 <xc_dom_boot_domU_map+0xb7>
   18b7a:	mov    rax,QWORD PTR [rsp+0x8]
   18b7f:	mov    r14,QWORD PTR [rsp+0x18]
   18b84:	mov    r12,0xffffffffffffffff
   18b8b:	lea    r13,[rax+0x8]
   18b8f:	lea    rbx,[rax+rbx*1+0x8]
   18b94:	nop    DWORD PTR [rax+0x0]
   18b98:	mov    rdi,r15
   18b9b:	call   5af0 <xc_dom_translated@plt>
   18ba0:	test   al,al
   18ba2:	mov    rsi,r14
   18ba5:	jne    18bd6 <xc_dom_boot_domU_map+0xa6>
   18ba7:	mov    rax,QWORD PTR [r15+0x460]
   18bae:	mov    rsi,r12
   18bb1:	cmp    rax,r14
   18bb4:	ja     18bd6 <xc_dom_boot_domU_map+0xa6>
   18bb6:	mov    rdi,QWORD PTR [r15+0x468]
   18bbd:	add    rdi,rax
   18bc0:	cmp    rdi,r14
   18bc3:	jbe    18bd6 <xc_dom_boot_domU_map+0xa6>
   18bc5:	mov    rsi,r14
   18bc8:	sub    rsi,rax
   18bcb:	mov    rax,QWORD PTR [r15+0x450]
   18bd2:	mov    rsi,QWORD PTR [rax+rsi*8]
   18bd6:	mov    QWORD PTR [r13+0x0],rsi
   18bda:	add    r13,0x18
   18bde:	add    r14,0x1
   18be2:	cmp    r13,rbx
   18be5:	jne    18b98 <xc_dom_boot_domU_map+0x68>
   18be7:	mov    eax,DWORD PTR [rsp+0x14]
   18beb:	sub    rsp,0x8
   18bef:	mov    r8d,0x1
   18bf5:	push   rbp
   18bf6:	mov    esi,DWORD PTR [r15+0x4d0]
   18bfd:	mov    rdx,rbp
   18c00:	mov    r9,QWORD PTR [rsp+0x18]
   18c05:	mov    rdi,QWORD PTR [r15+0x4c8]
   18c0c:	mov    ecx,eax
   18c0e:	shl    r8d,cl
   18c11:	shl    rdx,cl
   18c14:	mov    ecx,0x3
   18c19:	movsxd r8,r8d
   18c1c:	call   6580 <xc_map_foreign_ranges@plt>
   18c21:	mov    rbx,rax
   18c24:	test   rbx,rbx
   18c27:	pop    rax
   18c28:	pop    rdx
   18c29:	je     18c75 <xc_dom_boot_domU_map+0x145>
   18c2b:	add    rsp,0x28
   18c2f:	mov    rax,rbx
   18c32:	pop    rbx
   18c33:	pop    rbp
   18c34:	pop    r12
   18c36:	pop    r13
   18c38:	pop    r14
   18c3a:	pop    r15
   18c3c:	ret    
   18c3d:	mov    rdi,QWORD PTR [r15+0x4c8]
   18c44:	push   rbp
   18c45:	lea    rsi,[rip+0xd1cf]        # 25e1b <__FUNCTION__.12887+0x2b>
   18c4c:	push   QWORD PTR [rsp+0x20]
   18c50:	lea    r9,[rip+0xd679]        # 262d0 <__FUNCTION__.12976>
   18c57:	lea    r8,[rip+0xd362]        # 25fc0 <__FUNCTION__.12887+0x1d0>
   18c5e:	mov    ecx,0x1
   18c63:	mov    edx,0x8f
   18c68:	xor    eax,eax
   18c6a:	call   60a0 <xc_dom_panic_func@plt>
   18c6f:	xor    ebx,ebx
   18c71:	pop    rcx
   18c72:	pop    rsi
   18c73:	jmp    18c2b <xc_dom_boot_domU_map+0xfb>
   18c75:	call   5940 <__errno_location@plt>
   18c7a:	mov    r12d,DWORD PTR [rax]
   18c7d:	mov    edi,r12d
   18c80:	call   6520 <strerror@plt>
   18c85:	mov    rdi,QWORD PTR [r15+0x4c8]
   18c8c:	push   rax
   18c8d:	lea    r9,[rip+0xd63c]        # 262d0 <__FUNCTION__.12976>
   18c94:	push   r12
   18c96:	lea    r8,[rip+0xd35b]        # 25ff8 <__FUNCTION__.12887+0x208>
   18c9d:	push   rbp
   18c9e:	lea    rsi,[rip+0xd176]        # 25e1b <__FUNCTION__.12887+0x2b>
   18ca5:	push   QWORD PTR [rsp+0x30]
   18ca9:	mov    ecx,0x1
   18cae:	mov    edx,0x9f
   18cb3:	xor    eax,eax
   18cb5:	call   60a0 <xc_dom_panic_func@plt>
   18cba:	add    rsp,0x20
   18cbe:	jmp    18c2b <xc_dom_boot_domU_map+0xfb>
   18cc3:	nop    DWORD PTR [rax]
   18cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000018cd0 <xc_dom_boot_image>:
   18cd0:	push   r14
   18cd2:	push   r13
   18cd4:	lea    rdx,[rip+0xd5d5]        # 262b0 <__FUNCTION__.12985>
   18cdb:	push   r12
   18cdd:	push   rbp
   18cde:	lea    rsi,[rip+0xc696]        # 2537b <deep_features.2995+0x23b>
   18ce5:	push   rbx
   18ce6:	mov    rbx,rdi
   18ce9:	sub    rsp,0x140
   18cf0:	mov    rdi,QWORD PTR [rdi+0x4c8]
   18cf7:	mov    rax,QWORD PTR fs:0x28
   18d00:	mov    QWORD PTR [rsp+0x138],rax
   18d08:	xor    eax,eax
   18d0a:	call   5b60 <xc_dom_printf@plt>
   18d0f:	mov    rax,QWORD PTR [rbx+0x918]
   18d16:	mov    rdi,rbx
   18d19:	call   QWORD PTR [rax+0x38]
   18d1c:	test   eax,eax
   18d1e:	mov    ebp,eax
   18d20:	je     18d50 <xc_dom_boot_image+0x80>
   18d22:	mov    rcx,QWORD PTR [rsp+0x138]
   18d2a:	xor    rcx,QWORD PTR fs:0x28
   18d33:	mov    eax,ebp
   18d35:	jne    19120 <xc_dom_boot_image+0x450>
   18d3b:	add    rsp,0x140
   18d42:	pop    rbx
   18d43:	pop    rbp
   18d44:	pop    r12
   18d46:	pop    r13
   18d48:	pop    r14
   18d4a:	ret    
   18d4b:	nop    DWORD PTR [rax+rax*1+0x0]
   18d50:	mov    esi,DWORD PTR [rbx+0x4d0]
   18d56:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18d5d:	lea    rcx,[rsp+0x30]
   18d62:	mov    edx,0x1
   18d67:	call   5b40 <xc_domain_getinfo@plt>
   18d6c:	test   eax,eax
   18d6e:	mov    ebp,eax
   18d70:	js     18fe8 <xc_dom_boot_image+0x318>
   18d76:	mov    eax,DWORD PTR [rsp+0x30]
   18d7a:	mov    edx,DWORD PTR [rbx+0x4d0]
   18d80:	je     19028 <xc_dom_boot_image+0x358>
   18d86:	cmp    edx,eax
   18d88:	jne    19028 <xc_dom_boot_image+0x358>
   18d8e:	mov    rax,QWORD PTR [rsp+0x60]
   18d93:	mov    rdi,rbx
   18d96:	mov    QWORD PTR [rbx+0x4c0],rax
   18d9d:	call   6340 <xc_dom_compat_check@plt>
   18da2:	test   eax,eax
   18da4:	je     19080 <xc_dom_boot_image+0x3b0>
   18daa:	mov    rdi,rbx
   18dad:	call   5970 <xc_dom_update_guest_p2m@plt>
   18db2:	test   eax,eax
   18db4:	mov    ebp,eax
   18db6:	jne    18d22 <xc_dom_boot_image+0x52>
   18dbc:	mov    rax,QWORD PTR [rbx+0x918]
   18dc3:	mov    rdx,QWORD PTR [rax+0x18]
   18dc7:	test   rdx,rdx
   18dca:	je     18de2 <xc_dom_boot_image+0x112>
   18dcc:	mov    rdi,rbx
   18dcf:	call   rdx
   18dd1:	test   eax,eax
   18dd3:	mov    ebp,eax
   18dd5:	jne    18d22 <xc_dom_boot_image+0x52>
   18ddb:	mov    rax,QWORD PTR [rbx+0x918]
   18de2:	mov    rax,QWORD PTR [rax+0x20]
   18de6:	test   rax,rax
   18de9:	je     18df0 <xc_dom_boot_image+0x120>
   18deb:	mov    rdi,rbx
   18dee:	call   rax
   18df0:	mov    rax,QWORD PTR [rbx+0x300]
   18df7:	cmp    rax,0xffffffffffffffff
   18dfb:	je     18fa0 <xc_dom_boot_image+0x2d0>
   18e01:	mov    rdx,QWORD PTR [rbx+0x918]
   18e08:	mov    rbp,rax
   18e0b:	sub    rbp,QWORD PTR [rbx+0x2f0]
   18e12:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18e19:	lea    rsi,[rip+0xd047]        # 25e67 <__FUNCTION__.12887+0x77>
   18e20:	mov    ecx,DWORD PTR [rdx+0x60]
   18e23:	lea    rdx,[rip+0xd466]        # 26290 <__FUNCTION__.12942>
   18e2a:	shr    rbp,cl
   18e2d:	mov    rcx,rax
   18e30:	xor    eax,eax
   18e32:	mov    r8,rbp
   18e35:	call   5b60 <xc_dom_printf@plt>
   18e3a:	mov    eax,DWORD PTR [rbx+0x4d0]
   18e40:	mov    rdi,rbx
   18e43:	mov    DWORD PTR [rsp+0xa0],0x16
   18e4e:	mov    WORD PTR [rsp+0xa8],ax
   18e56:	call   5af0 <xc_dom_translated@plt>
   18e5b:	test   al,al
   18e5d:	jne    18e90 <xc_dom_boot_image+0x1c0>
   18e5f:	mov    rax,QWORD PTR [rbx+0x460]
   18e66:	cmp    rbp,rax
   18e69:	jb     19070 <xc_dom_boot_image+0x3a0>
   18e6f:	mov    rdx,QWORD PTR [rbx+0x468]
   18e76:	add    rdx,rax
   18e79:	cmp    rbp,rdx
   18e7c:	jae    19070 <xc_dom_boot_image+0x3a0>
   18e82:	sub    rbp,rax
   18e85:	mov    rax,QWORD PTR [rbx+0x450]
   18e8c:	mov    rbp,QWORD PTR [rax+rbp*8]
   18e90:	mov    r12,QWORD PTR [rbx+0x4c8]
   18e97:	lea    rax,[rsp+0xa0]
   18e9f:	mov    r13,rsp
   18ea2:	mov    rsi,r13
   18ea5:	mov    QWORD PTR [rsp+0xb0],rbp
   18ead:	mov    QWORD PTR [rsp],0x0
   18eb5:	mov    QWORD PTR [rsp+0x8],0x0
   18ebe:	mov    DWORD PTR [rsp+0x10],0x3
   18ec6:	mov    rdi,r12
   18ec9:	mov    QWORD PTR [rsp+0x18],rax
   18ece:	mov    QWORD PTR [rsp+0x20],0x90
   18ed7:	mov    DWORD PTR [rsp+0xa4],0x11
   18ee2:	call   5a40 <xc__hypercall_bounce_pre@plt>
   18ee7:	test   eax,eax
   18ee9:	jne    190e5 <xc_dom_boot_image+0x415>
   18eef:	mov    rax,QWORD PTR [rsp+0x8]
   18ef4:	mov    rdi,QWORD PTR [r12+0x440]
   18efc:	mov    esi,0x24
   18f01:	test   rax,rax
   18f04:	cmove  rax,r13
   18f08:	mov    rdx,QWORD PTR [rax]
   18f0b:	call   5e30 <xencall1@plt>
   18f10:	test   eax,eax
   18f12:	mov    ebp,eax
   18f14:	jns    18f86 <xc_dom_boot_image+0x2b6>
   18f16:	call   5940 <__errno_location@plt>
   18f1b:	cmp    DWORD PTR [rax],0xd
   18f1e:	mov    r14,rax
   18f21:	je     1909a <xc_dom_boot_image+0x3ca>
   18f27:	mov    rsi,QWORD PTR [rsp+0x8]
   18f2c:	test   rsi,rsi
   18f2f:	je     1908a <xc_dom_boot_image+0x3ba>
   18f35:	mov    rdi,r12
   18f38:	call   6210 <xc__hypercall_bounce_post@plt>
   18f3d:	call   5940 <__errno_location@plt>
   18f42:	mov    r14,rax
   18f45:	mov    edi,DWORD PTR [r14]
   18f48:	call   6520 <strerror@plt>
   18f4d:	push   rax
   18f4e:	mov    eax,DWORD PTR [r14]
   18f51:	lea    r9,[rip+0xd338]        # 26290 <__FUNCTION__.12942>
   18f58:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18f5f:	lea    r8,[rip+0xd142]        # 260a8 <__FUNCTION__.12887+0x2b8>
   18f66:	lea    rsi,[rip+0xceae]        # 25e1b <__FUNCTION__.12887+0x2b>
   18f6d:	mov    edx,0x3d
   18f72:	mov    ecx,0x1
   18f77:	push   rax
   18f78:	xor    eax,eax
   18f7a:	call   60a0 <xc_dom_panic_func@plt>
   18f7f:	pop    rax
   18f80:	pop    rdx
   18f81:	jmp    18d22 <xc_dom_boot_image+0x52>
   18f86:	mov    rsi,QWORD PTR [rsp+0x8]
   18f8b:	mov    rdi,r12
   18f8e:	test   rsi,rsi
   18f91:	cmove  rsi,r13
   18f95:	call   6210 <xc__hypercall_bounce_post@plt>
   18f9a:	test   ebp,ebp
   18f9c:	jne    18f3d <xc_dom_boot_image+0x26d>
   18f9e:	xchg   ax,ax
   18fa0:	mov    rdi,rbx
   18fa3:	call   6200 <xc_dom_log_memory_footprint@plt>
   18fa8:	mov    rax,QWORD PTR [rbx+0x918]
   18faf:	mov    rdi,rbx
   18fb2:	call   QWORD PTR [rax+0x40]
   18fb5:	test   eax,eax
   18fb7:	mov    ebp,eax
   18fb9:	jne    18d22 <xc_dom_boot_image+0x52>
   18fbf:	mov    rax,QWORD PTR [rbx+0x918]
   18fc6:	mov    rdi,rbx
   18fc9:	call   QWORD PTR [rax+0x30]
   18fcc:	test   eax,eax
   18fce:	mov    ebp,eax
   18fd0:	jne    18d22 <xc_dom_boot_image+0x52>
   18fd6:	mov    rdi,rbx
   18fd9:	call   6240 <xc_dom_unmap_all@plt>
   18fde:	jmp    18d22 <xc_dom_boot_image+0x52>
   18fe3:	nop    DWORD PTR [rax+rax*1+0x0]
   18fe8:	sub    rsp,0x8
   18fec:	mov    rdi,QWORD PTR [rbx+0x4c8]
   18ff3:	lea    rsi,[rip+0xce21]        # 25e1b <__FUNCTION__.12887+0x2b>
   18ffa:	push   rax
   18ffb:	lea    r9,[rip+0xd2ae]        # 262b0 <__FUNCTION__.12985>
   19002:	lea    r8,[rip+0xd02f]        # 26038 <__FUNCTION__.12887+0x248>
   19009:	mov    ecx,0x1
   1900e:	mov    edx,0xb6
   19013:	xor    eax,eax
   19015:	call   60a0 <xc_dom_panic_func@plt>
   1901a:	pop    rcx
   1901b:	pop    rsi
   1901c:	jmp    18d22 <xc_dom_boot_image+0x52>
   19021:	nop    DWORD PTR [rax+0x0]
   19028:	sub    rsp,0x8
   1902c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19033:	lea    r9,[rip+0xd276]        # 262b0 <__FUNCTION__.12985>
   1903a:	push   rdx
   1903b:	lea    r8,[rip+0xd01e]        # 26060 <__FUNCTION__.12887+0x270>
   19042:	push   rax
   19043:	lea    rsi,[rip+0xcdd1]        # 25e1b <__FUNCTION__.12887+0x2b>
   1904a:	push   rbp
   1904b:	mov    ecx,0x1
   19050:	mov    edx,0xbe
   19055:	xor    eax,eax
   19057:	mov    ebp,0xffffffff
   1905c:	call   60a0 <xc_dom_panic_func@plt>
   19061:	add    rsp,0x20
   19065:	jmp    18d22 <xc_dom_boot_image+0x52>
   1906a:	nop    WORD PTR [rax+rax*1+0x0]
   19070:	mov    rbp,0xffffffffffffffff
   19077:	jmp    18e90 <xc_dom_boot_image+0x1c0>
   1907c:	nop    DWORD PTR [rax+0x0]
   19080:	mov    ebp,0xffffffff
   19085:	jmp    18d22 <xc_dom_boot_image+0x52>
   1908a:	mov    rsi,r13
   1908d:	mov    rdi,r12
   19090:	call   6210 <xc__hypercall_bounce_post@plt>
   19095:	jmp    18f45 <xc_dom_boot_image+0x275>
   1909a:	mov    rsi,QWORD PTR [r12+0x8]
   1909f:	lea    r8,[rip+0x8d1a]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
   190a6:	xor    ecx,ecx
   190a8:	xor    eax,eax
   190aa:	mov    edx,0x3
   190af:	mov    rdi,r12
   190b2:	call   6540 <xc_report@plt>
   190b7:	mov    rsi,QWORD PTR [rsp+0x8]
   190bc:	mov    DWORD PTR [r14],0xd
   190c3:	test   rsi,rsi
   190c6:	je     190d5 <xc_dom_boot_image+0x405>
   190c8:	mov    rdi,r12
   190cb:	call   6210 <xc__hypercall_bounce_post@plt>
   190d0:	jmp    18f45 <xc_dom_boot_image+0x275>
   190d5:	mov    rsi,r13
   190d8:	mov    rdi,r12
   190db:	call   6210 <xc__hypercall_bounce_post@plt>
   190e0:	jmp    18f3d <xc_dom_boot_image+0x26d>
   190e5:	call   5940 <__errno_location@plt>
   190ea:	mov    ebp,DWORD PTR [rax]
   190ec:	mov    r14,rax
   190ef:	mov    rdi,r12
   190f2:	mov    esi,ebp
   190f4:	call   6570 <xc_strerror@plt>
   190f9:	mov    ecx,DWORD PTR [r14]
   190fc:	lea    rdx,[rip+0x8c85]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
   19103:	mov    r8,rax
   19106:	mov    esi,0x1
   1910b:	mov    rdi,r12
   1910e:	xor    eax,eax
   19110:	call   5d50 <xc_report_error@plt>
   19115:	mov    DWORD PTR [r14],ebp
   19118:	or     ebp,0xffffffff
   1911b:	jmp    18f45 <xc_dom_boot_image+0x275>
   19120:	call   5b80 <__stack_chk_fail@plt>
   19125:	nop
   19126:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019130 <xc_dom_gnttab_seed>:
   19130:	push   r15
   19132:	push   r14
   19134:	mov    r15,rcx
   19137:	push   r13
   19139:	push   r12
   1913b:	xor    ecx,ecx
   1913d:	push   rbp
   1913e:	push   rbx
   1913f:	mov    rbp,rdi
   19142:	mov    ebx,esi
   19144:	mov    r14,r8
   19147:	mov    r13d,r9d
   1914a:	sub    rsp,0x60
   1914e:	mov    r12,QWORD PTR [rdi+0x448]
   19155:	xor    r8d,r8d
   19158:	mov    rax,QWORD PTR fs:0x28
   19161:	mov    QWORD PTR [rsp+0x50],rax
   19166:	xor    eax,eax
   19168:	mov    DWORD PTR [rsp+0x10],edx
   1916c:	mov    QWORD PTR [rsp+0x18],0x0
   19175:	movzx  esi,si
   19178:	push   0x0
   1917a:	push   0x3
   1917c:	mov    r9d,0x1
   19182:	mov    edx,0x1
   19187:	mov    rdi,r12
   1918a:	lea    rax,[rsp+0x28]
   1918f:	push   rax
   19190:	call   63b0 <xenforeignmemory_map_resource@plt>
   19195:	add    rsp,0x20
   19199:	test   rax,rax
   1919c:	je     19240 <xc_dom_gnttab_seed+0x110>
   191a2:	cmp    ebx,r13d
   191a5:	mov    rsi,QWORD PTR [rsp+0x10]
   191aa:	je     191d3 <xc_dom_gnttab_seed+0xa3>
   191ac:	cmp    r15,0xffffffffffffffff
   191b0:	je     191d3 <xc_dom_gnttab_seed+0xa3>
   191b2:	mov    r9,r15
   191b5:	mov    r8d,r13d
   191b8:	mov    ecx,ebx
   191ba:	xor    edx,edx
   191bc:	mov    rdi,rbp
   191bf:	mov    QWORD PTR [rsp+0x8],rax
   191c4:	call   185d0 <xc_dom_set_gnttab_entry.part.0>
   191c9:	mov    rsi,QWORD PTR [rsp+0x10]
   191ce:	mov    rax,QWORD PTR [rsp+0x8]
   191d3:	cmp    ebx,DWORD PTR [rsp+0x90]
   191da:	je     19206 <xc_dom_gnttab_seed+0xd6>
   191dc:	cmp    r14,0xffffffffffffffff
   191e0:	je     19206 <xc_dom_gnttab_seed+0xd6>
   191e2:	mov    r8d,DWORD PTR [rsp+0x90]
   191ea:	mov    r9,r14
   191ed:	mov    ecx,ebx
   191ef:	mov    edx,0x1
   191f4:	mov    rdi,rbp
   191f7:	mov    QWORD PTR [rsp+0x8],rax
   191fc:	call   185d0 <xc_dom_set_gnttab_entry.part.0>
   19201:	mov    rax,QWORD PTR [rsp+0x8]
   19206:	mov    rsi,rax
   19209:	mov    rdi,r12
   1920c:	call   5a10 <xenforeignmemory_unmap_resource@plt>
   19211:	xor    eax,eax
   19213:	mov    rcx,QWORD PTR [rsp+0x48]
   19218:	xor    rcx,QWORD PTR fs:0x28
   19221:	jne    1945b <xc_dom_gnttab_seed+0x32b>
   19227:	add    rsp,0x58
   1922b:	pop    rbx
   1922c:	pop    rbp
   1922d:	pop    r12
   1922f:	pop    r13
   19231:	pop    r14
   19233:	pop    r15
   19235:	ret    
   19236:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19240:	call   5940 <__errno_location@plt>
   19245:	mov    r12,rax
   19248:	mov    eax,DWORD PTR [rax]
   1924a:	cmp    eax,0x5f
   1924d:	jne    193a8 <xc_dom_gnttab_seed+0x278>
   19253:	cmp    BYTE PTR [rsp+0x8],0x0
   19258:	je     19388 <xc_dom_gnttab_seed+0x258>
   1925e:	pxor   xmm0,xmm0
   19262:	xor    edi,edi
   19264:	lea    rdx,[rsp+0x18]
   19269:	xor    r8d,r8d
   1926c:	mov    WORD PTR [rsp+0x46],di
   19271:	mov    esi,ebx
   19273:	mov    rdi,rbp
   19276:	mov    DWORD PTR [rsp+0x42],0x0
   1927e:	mov    WORD PTR [rsp+0x30],bx
   19283:	movups XMMWORD PTR [rsp+0x32],xmm0
   19288:	mov    QWORD PTR [rsp+0x22],0x0
   19291:	mov    DWORD PTR [rsp+0x34],0x1
   19299:	mov    DWORD PTR [rsp+0x2a],0x0
   192a1:	mov    WORD PTR [rsp+0x2e],r8w
   192a7:	mov    WORD PTR [rsp+0x20],bx
   192ac:	call   5b10 <xc_core_arch_get_scratch_gpfn@plt>
   192b1:	test   eax,eax
   192b3:	js     19438 <xc_dom_gnttab_seed+0x308>
   192b9:	mov    r8,QWORD PTR [rsp+0x18]
   192be:	lea    rdx,[rip+0xcf8b]        # 26250 <__func__.13039>
   192c5:	lea    rsi,[rip+0xcbb5]        # 25e81 <__FUNCTION__.12887+0x91>
   192cc:	xor    eax,eax
   192ce:	mov    ecx,ebx
   192d0:	mov    rdi,rbp
   192d3:	mov    QWORD PTR [rsp+0x40],r8
   192d8:	mov    QWORD PTR [rsp+0x28],r8
   192dd:	call   5b60 <xc_dom_printf@plt>
   192e2:	lea    rdx,[rsp+0x30]
   192e7:	mov    ecx,0x18
   192ec:	mov    esi,0x7
   192f1:	mov    rdi,rbp
   192f4:	call   6090 <do_memory_op@plt>
   192f9:	test   eax,eax
   192fb:	jne    19415 <xc_dom_gnttab_seed+0x2e5>
   19301:	mov    r9d,DWORD PTR [rsp+0x90]
   19309:	mov    r8d,r13d
   1930c:	mov    rcx,r14
   1930f:	mov    rdx,r15
   19312:	mov    esi,ebx
   19314:	mov    rdi,rbp
   19317:	call   18630 <compat_gnttab_seed>
   1931c:	test   eax,eax
   1931e:	jne    193c4 <xc_dom_gnttab_seed+0x294>
   19324:	lea    rdx,[rsp+0x20]
   19329:	mov    ecx,0x10
   1932e:	mov    esi,0xf
   19333:	mov    rdi,rbp
   19336:	call   6090 <do_memory_op@plt>
   1933b:	test   eax,eax
   1933d:	je     19213 <xc_dom_gnttab_seed+0xe3>
   19343:	mov    eax,DWORD PTR [r12]
   19347:	lea    r9,[rip+0xcf02]        # 26250 <__func__.13039>
   1934e:	lea    r8,[rip+0xce1b]        # 26170 <__FUNCTION__.12887+0x380>
   19355:	mov    ecx,0x1
   1935a:	mov    edx,0x183
   1935f:	push   rax
   19360:	push   rbx
   19361:	nop    DWORD PTR [rax+0x0]
   19368:	lea    rsi,[rip+0xcaac]        # 25e1b <__FUNCTION__.12887+0x2b>
   1936f:	xor    eax,eax
   19371:	mov    rdi,rbp
   19374:	call   60a0 <xc_dom_panic_func@plt>
   19379:	pop    rcx
   1937a:	mov    eax,0xffffffff
   1937f:	pop    rsi
   19380:	jmp    19213 <xc_dom_gnttab_seed+0xe3>
   19385:	nop    DWORD PTR [rax]
   19388:	mov    r9d,DWORD PTR [rsp+0x90]
   19390:	mov    r8d,r13d
   19393:	mov    rcx,r14
   19396:	mov    rdx,r15
   19399:	mov    esi,ebx
   1939b:	mov    rdi,rbp
   1939e:	call   18630 <compat_gnttab_seed>
   193a3:	jmp    19213 <xc_dom_gnttab_seed+0xe3>
   193a8:	push   rax
   193a9:	lea    r9,[rip+0xcec0]        # 26270 <__func__.13052>
   193b0:	push   rbx
   193b1:	lea    r8,[rip+0xcdf8]        # 261b0 <__FUNCTION__.12887+0x3c0>
   193b8:	mov    ecx,0x1
   193bd:	mov    edx,0x1a4
   193c2:	jmp    19368 <xc_dom_gnttab_seed+0x238>
   193c4:	sub    rsp,0x8
   193c8:	lea    r9,[rip+0xce81]        # 26250 <__func__.13039>
   193cf:	lea    r8,[rip+0xcd6a]        # 26140 <__FUNCTION__.12887+0x350>
   193d6:	push   rbx
   193d7:	lea    rsi,[rip+0xca3d]        # 25e1b <__FUNCTION__.12887+0x2b>
   193de:	mov    ecx,0x1
   193e3:	mov    edx,0x177
   193e8:	mov    rdi,rbp
   193eb:	xor    eax,eax
   193ed:	call   60a0 <xc_dom_panic_func@plt>
   193f2:	lea    rdx,[rsp+0x30]
   193f7:	mov    ecx,0x10
   193fc:	mov    esi,0xf
   19401:	mov    rdi,rbp
   19404:	call   6090 <do_memory_op@plt>
   19409:	pop    rax
   1940a:	mov    eax,0xffffffff
   1940f:	pop    rdx
   19410:	jmp    19213 <xc_dom_gnttab_seed+0xe3>
   19415:	mov    eax,DWORD PTR [r12]
   19419:	lea    r9,[rip+0xce30]        # 26250 <__func__.13039>
   19420:	lea    r8,[rip+0xcce1]        # 26108 <__FUNCTION__.12887+0x318>
   19427:	mov    ecx,0x1
   1942c:	mov    edx,0x16c
   19431:	push   rax
   19432:	push   rbx
   19433:	jmp    19368 <xc_dom_gnttab_seed+0x238>
   19438:	mov    eax,DWORD PTR [r12]
   1943c:	lea    r9,[rip+0xce0d]        # 26250 <__func__.13039>
   19443:	lea    r8,[rip+0xcc86]        # 260d0 <__FUNCTION__.12887+0x2e0>
   1944a:	mov    ecx,0x1
   1944f:	mov    edx,0x15d
   19454:	push   rax
   19455:	push   rbx
   19456:	jmp    19368 <xc_dom_gnttab_seed+0x238>
   1945b:	call   5b80 <__stack_chk_fail@plt>

0000000000019460 <xc_dom_gnttab_init>:
   19460:	push   r13
   19462:	push   r12
   19464:	push   rbp
   19465:	push   rbx
   19466:	mov    rbx,rdi
   19469:	sub    rsp,0x8
   1946d:	call   5af0 <xc_dom_translated@plt>
   19472:	mov    rdi,rbx
   19475:	mov    r13d,eax
   19478:	mov    rbp,QWORD PTR [rbx+0x3f0]
   1947f:	call   5af0 <xc_dom_translated@plt>
   19484:	test   al,al
   19486:	jne    194b9 <xc_dom_gnttab_init+0x59>
   19488:	mov    rax,QWORD PTR [rbx+0x460]
   1948f:	cmp    rbp,rax
   19492:	jb     19540 <xc_dom_gnttab_init+0xe0>
   19498:	mov    rdx,QWORD PTR [rbx+0x468]
   1949f:	add    rdx,rax
   194a2:	cmp    rbp,rdx
   194a5:	jae    19540 <xc_dom_gnttab_init+0xe0>
   194ab:	sub    rbp,rax
   194ae:	mov    rax,QWORD PTR [rbx+0x450]
   194b5:	mov    rbp,QWORD PTR [rax+rbp*8]
   194b9:	mov    rdi,rbx
   194bc:	mov    r12,QWORD PTR [rbx+0x3f8]
   194c3:	call   5af0 <xc_dom_translated@plt>
   194c8:	test   al,al
   194ca:	jne    194f5 <xc_dom_gnttab_init+0x95>
   194cc:	mov    rax,QWORD PTR [rbx+0x460]
   194d3:	cmp    r12,rax
   194d6:	jb     19530 <xc_dom_gnttab_init+0xd0>
   194d8:	mov    rdx,QWORD PTR [rbx+0x468]
   194df:	add    rdx,rax
   194e2:	cmp    r12,rdx
   194e5:	jae    19530 <xc_dom_gnttab_init+0xd0>
   194e7:	sub    r12,rax
   194ea:	mov    rax,QWORD PTR [rbx+0x450]
   194f1:	mov    r12,QWORD PTR [rax+r12*8]
   194f5:	mov    eax,DWORD PTR [rbx+0x4bc]
   194fb:	sub    rsp,0x8
   194ff:	mov    esi,DWORD PTR [rbx+0x4d0]
   19505:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1950c:	mov    r9d,DWORD PTR [rbx+0x4b8]
   19513:	movzx  edx,r13b
   19517:	mov    r8,r12
   1951a:	mov    rcx,rbp
   1951d:	push   rax
   1951e:	call   61e0 <xc_dom_gnttab_seed@plt>
   19523:	add    rsp,0x18
   19527:	pop    rbx
   19528:	pop    rbp
   19529:	pop    r12
   1952b:	pop    r13
   1952d:	ret    
   1952e:	xchg   ax,ax
   19530:	mov    r12,0xffffffffffffffff
   19537:	jmp    194f5 <xc_dom_gnttab_init+0x95>
   19539:	nop    DWORD PTR [rax+0x0]
   19540:	mov    rbp,0xffffffffffffffff
   19547:	jmp    194b9 <xc_dom_gnttab_init+0x59>
   1954c:	nop    DWORD PTR [rax+0x0]

0000000000019550 <log_callback>:
   19550:	cmp    dl,0x1
   19553:	mov    rdi,rsi
   19556:	mov    rsi,QWORD PTR [rsi+0x18]
   1955a:	sbb    eax,eax
   1955c:	not    eax
   1955e:	and    eax,0x2
   19561:	cmp    dl,0x1
   19564:	sbb    edx,edx
   19566:	and    edx,0xfffffffb
   19569:	add    edx,0x8
   1956c:	test   rsi,rsi
   1956f:	jne    19575 <log_callback+0x25>
   19571:	mov    rsi,QWORD PTR [rdi+0x8]
   19575:	mov    r9,r8
   19578:	mov    r8,rcx
   1957b:	mov    ecx,eax
   1957d:	jmp    6560 <xc_reportv@plt>
   19582:	nop    DWORD PTR [rax+0x0]
   19586:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019590 <xc_dom_load_elf_kernel>:
   19590:	push   rbp
   19591:	push   rbx
   19592:	mov    rbx,rdi
   19595:	sub    rsp,0x8
   19599:	mov    rdx,QWORD PTR [rdi+0x360]
   195a0:	mov    rsi,QWORD PTR [rdi+0x358]
   195a7:	mov    rbp,QWORD PTR [rdi+0x8e8]
   195ae:	call   6320 <xc_dom_pfn_to_ptr@plt>
   195b3:	test   rax,rax
   195b6:	je     195f0 <xc_dom_load_elf_kernel+0x60>
   195b8:	mov    rdx,QWORD PTR [rbx+0x360]
   195bf:	mov    QWORD PTR [rbp+0x38],rax
   195c3:	mov    rdi,rbp
   195c6:	mov    rax,QWORD PTR [rbx+0x918]
   195cd:	mov    ecx,DWORD PTR [rax+0x60]
   195d0:	shl    rdx,cl
   195d3:	mov    QWORD PTR [rbp+0x40],rdx
   195d7:	call   6460 <elf_load_binary@plt>
   195dc:	test   eax,eax
   195de:	mov    ebp,eax
   195e0:	js     19628 <xc_dom_load_elf_kernel+0x98>
   195e2:	xor    ebp,ebp
   195e4:	add    rsp,0x8
   195e8:	mov    eax,ebp
   195ea:	pop    rbx
   195eb:	pop    rbp
   195ec:	ret    
   195ed:	nop    DWORD PTR [rax]
   195f0:	mov    QWORD PTR [rbp+0x38],0x0
   195f8:	mov    rdi,QWORD PTR [rbx+0x4c8]
   195ff:	lea    rdx,[rip+0xcf8a]        # 26590 <__FUNCTION__.12593>
   19606:	lea    rsi,[rip+0xce4b]        # 26458 <__FUNCTION__.12951+0x128>
   1960d:	xor    eax,eax
   1960f:	mov    ebp,0xffffffff
   19614:	call   5b60 <xc_dom_printf@plt>
   19619:	add    rsp,0x8
   1961d:	mov    eax,ebp
   1961f:	pop    rbx
   19620:	pop    rbp
   19621:	ret    
   19622:	nop    WORD PTR [rax+rax*1+0x0]
   19628:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1962f:	lea    rdx,[rip+0xcf5a]        # 26590 <__FUNCTION__.12593>
   19636:	lea    rsi,[rip+0xcd07]        # 26344 <__FUNCTION__.12951+0x14>
   1963d:	xor    eax,eax
   1963f:	call   5b60 <xc_dom_printf@plt>
   19644:	add    rsp,0x8
   19648:	mov    eax,ebp
   1964a:	pop    rbx
   1964b:	pop    rbp
   1964c:	ret    
   1964d:	nop    DWORD PTR [rax]

0000000000019650 <check_elf_kernel>:
   19650:	push   rbp
   19651:	push   rbx
   19652:	mov    rbx,rdi
   19655:	mov    ebp,esi
   19657:	sub    rsp,0x8
   1965b:	mov    rdi,QWORD PTR [rdi]
   1965e:	test   rdi,rdi
   19661:	je     19688 <check_elf_kernel+0x38>
   19663:	mov    rsi,QWORD PTR [rbx+0x8]
   19667:	call   6120 <elf_is_elfbinary@plt>
   1966c:	mov    edx,eax
   1966e:	xor    eax,eax
   19670:	test   dl,dl
   19672:	jne    1967e <check_elf_kernel+0x2e>
   19674:	test   bpl,bpl
   19677:	jne    196d0 <check_elf_kernel+0x80>
   19679:	mov    eax,0xffffffea
   1967e:	add    rsp,0x8
   19682:	pop    rbx
   19683:	pop    rbp
   19684:	ret    
   19685:	nop    DWORD PTR [rax]
   19688:	test   sil,sil
   1968b:	je     19679 <check_elf_kernel+0x29>
   1968d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19694:	lea    r9,[rip+0xceb5]        # 26550 <__FUNCTION__.12574>
   1969b:	lea    r8,[rip+0xccc0]        # 26362 <__FUNCTION__.12951+0x32>
   196a2:	lea    rsi,[rip+0xccd4]        # 2637d <__FUNCTION__.12951+0x4d>
   196a9:	xor    eax,eax
   196ab:	mov    ecx,0x1
   196b0:	mov    edx,0x6a
   196b5:	call   60a0 <xc_dom_panic_func@plt>
   196ba:	add    rsp,0x8
   196be:	mov    eax,0xffffffea
   196c3:	pop    rbx
   196c4:	pop    rbp
   196c5:	ret    
   196c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   196d0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   196d7:	lea    r9,[rip+0xce72]        # 26550 <__FUNCTION__.12574>
   196de:	lea    r8,[rip+0xcdab]        # 26490 <__FUNCTION__.12951+0x160>
   196e5:	lea    rsi,[rip+0xcc91]        # 2637d <__FUNCTION__.12951+0x4d>
   196ec:	mov    ecx,0x2
   196f1:	mov    edx,0x73
   196f6:	call   60a0 <xc_dom_panic_func@plt>
   196fb:	jmp    19679 <check_elf_kernel+0x29>

0000000000019700 <xc_dom_probe_elf_kernel>:
   19700:	push   rbp
   19701:	push   rbx
   19702:	xor    esi,esi
   19704:	mov    rbx,rdi
   19707:	sub    rsp,0xb8
   1970e:	mov    rax,QWORD PTR fs:0x28
   19717:	mov    QWORD PTR [rsp+0xa8],rax
   1971f:	xor    eax,eax
   19721:	call   19650 <check_elf_kernel>
   19726:	test   eax,eax
   19728:	je     19750 <xc_dom_probe_elf_kernel+0x50>
   1972a:	mov    rcx,QWORD PTR [rsp+0xa8]
   19732:	xor    rcx,QWORD PTR fs:0x28
   1973b:	jne    1977f <xc_dom_probe_elf_kernel+0x7f>
   1973d:	add    rsp,0xb8
   19744:	pop    rbx
   19745:	pop    rbp
   19746:	ret    
   19747:	nop    WORD PTR [rax+rax*1+0x0]
   19750:	mov    rdx,QWORD PTR [rbx+0x8]
   19754:	mov    rsi,QWORD PTR [rbx]
   19757:	mov    rbp,rsp
   1975a:	mov    rdi,rbp
   1975d:	call   5b20 <elf_init@plt>
   19762:	test   eax,eax
   19764:	jne    1972a <xc_dom_probe_elf_kernel+0x2a>
   19766:	mov    rdi,rbp
   19769:	call   5ed0 <elf_parse_binary@plt>
   1976e:	lea    rsi,[rbx+0xc8]
   19775:	mov    rdi,rbp
   19778:	call   5b30 <elf_xen_parse@plt>
   1977d:	jmp    1972a <xc_dom_probe_elf_kernel+0x2a>
   1977f:	call   5b80 <__stack_chk_fail@plt>
   19784:	xchg   ax,ax
   19786:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019790 <xc_elf_set_logfile>:
   19790:	mov    rax,rdi
   19793:	xor    ecx,ecx
   19795:	mov    rdi,rsi
   19798:	test   edx,edx
   1979a:	lea    rsi,[rip+0xfffffffffffffdaf]        # 19550 <log_callback>
   197a1:	mov    rdx,rax
   197a4:	setne  cl
   197a7:	jmp    61c0 <elf_set_log@plt>
   197ac:	nop    DWORD PTR [rax+0x0]

00000000000197b0 <xc_dom_parse_elf_kernel>:
   197b0:	push   r12
   197b2:	push   rbp
   197b3:	mov    esi,0x1
   197b8:	push   rbx
   197b9:	mov    rbx,rdi
   197bc:	call   19650 <check_elf_kernel>
   197c1:	test   eax,eax
   197c3:	mov    ebp,eax
   197c5:	je     197d0 <xc_dom_parse_elf_kernel+0x20>
   197c7:	mov    eax,ebp
   197c9:	pop    rbx
   197ca:	pop    rbp
   197cb:	pop    r12
   197cd:	ret    
   197ce:	xchg   ax,ax
   197d0:	mov    esi,0xa0
   197d5:	mov    rdi,rbx
   197d8:	call   5a60 <xc_dom_malloc@plt>
   197dd:	test   rax,rax
   197e0:	mov    r12,rax
   197e3:	je     19ade <xc_dom_parse_elf_kernel+0x32e>
   197e9:	mov    rdx,QWORD PTR [rbx+0x8]
   197ed:	mov    rsi,QWORD PTR [rbx]
   197f0:	mov    rdi,rax
   197f3:	mov    QWORD PTR [rbx+0x8e8],rax
   197fa:	call   5b20 <elf_init@plt>
   197ff:	test   eax,eax
   19801:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19808:	mov    edx,0x1
   1980d:	mov    rsi,r12
   19810:	je     19850 <xc_dom_parse_elf_kernel+0xa0>
   19812:	call   5d60 <xc_elf_set_logfile@plt>
   19817:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1981e:	lea    r9,[rip+0xcd4b]        # 26570 <__FUNCTION__.12585>
   19825:	lea    r8,[rip+0xcba1]        # 263cd <__FUNCTION__.12951+0x9d>
   1982c:	lea    rsi,[rip+0xcb4a]        # 2637d <__FUNCTION__.12951+0x4d>
   19833:	xor    eax,eax
   19835:	mov    ebp,0xffffffea
   1983a:	mov    ecx,0x2
   1983f:	mov    edx,0xa4
   19844:	call   60a0 <xc_dom_panic_func@plt>
   19849:	mov    eax,ebp
   1984b:	pop    rbx
   1984c:	pop    rbp
   1984d:	pop    r12
   1984f:	ret    
   19850:	call   5d60 <xc_elf_set_logfile@plt>
   19855:	cmp    QWORD PTR [r12+0x20],0x0
   1985b:	jne    198d0 <xc_dom_parse_elf_kernel+0x120>
   1985d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19864:	lea    r9,[rip+0xcd05]        # 26570 <__FUNCTION__.12585>
   1986b:	lea    r8,[rip+0xcb73]        # 263e5 <__FUNCTION__.12951+0xb5>
   19872:	lea    rsi,[rip+0xcb04]        # 2637d <__FUNCTION__.12951+0x4d>
   19879:	mov    ecx,0x2
   1987e:	mov    edx,0xac
   19883:	xor    eax,eax
   19885:	mov    ebp,0xffffffea
   1988a:	call   60a0 <xc_dom_panic_func@plt>
   1988f:	mov    rdi,r12
   19892:	call   58a0 <elf_check_broken@plt>
   19897:	test   rax,rax
   1989a:	je     197c7 <xc_dom_parse_elf_kernel+0x17>
   198a0:	mov    rdi,r12
   198a3:	call   58a0 <elf_check_broken@plt>
   198a8:	mov    rdi,QWORD PTR [rbx+0x4c8]
   198af:	lea    rdx,[rip+0xccba]        # 26570 <__FUNCTION__.12585>
   198b6:	lea    rsi,[rip+0xcb78]        # 26435 <__FUNCTION__.12951+0x105>
   198bd:	mov    rcx,rax
   198c0:	xor    eax,eax
   198c2:	call   5b60 <xc_dom_printf@plt>
   198c7:	mov    eax,ebp
   198c9:	pop    rbx
   198ca:	pop    rbp
   198cb:	pop    r12
   198cd:	ret    
   198ce:	xchg   ax,ax
   198d0:	mov    rdi,r12
   198d3:	call   5ed0 <elf_parse_binary@plt>
   198d8:	lea    rsi,[rbx+0xc8]
   198df:	mov    rdi,r12
   198e2:	call   5b30 <elf_xen_parse@plt>
   198e7:	test   eax,eax
   198e9:	mov    ebp,eax
   198eb:	jne    19990 <xc_dom_parse_elf_kernel+0x1e0>
   198f1:	test   BYTE PTR [rbx+0x325],0x8
   198f8:	jne    199a0 <xc_dom_parse_elf_kernel+0x1f0>
   198fe:	mov    rax,QWORD PTR [rbx+0x330]
   19905:	mov    ecx,0x2
   1990a:	mov    edx,0x12
   1990f:	mov    rdi,r12
   19912:	mov    QWORD PTR [rbx+0x348],rax
   19919:	mov    rax,QWORD PTR [rbx+0x338]
   19920:	mov    QWORD PTR [rbx+0x350],rax
   19927:	mov    rsi,QWORD PTR [r12+0x18]
   1992c:	call   6140 <elf_access_unsigned@plt>
   19931:	cmp    DWORD PTR [rbx+0x928],0x1
   19938:	je     199e0 <xc_dom_parse_elf_kernel+0x230>
   1993e:	cmp    rax,0x3
   19942:	je     19a40 <xc_dom_parse_elf_kernel+0x290>
   19948:	cmp    rax,0x3e
   1994c:	jne    19a95 <xc_dom_parse_elf_kernel+0x2e5>
   19952:	lea    rcx,[rip+0xca37]        # 26390 <__FUNCTION__.12951+0x60>
   19959:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19960:	mov    r9,QWORD PTR [rbx+0x350]
   19967:	lea    rdx,[rip+0xcc02]        # 26570 <__FUNCTION__.12585>
   1996e:	mov    r8,QWORD PTR [rbx+0x348]
   19975:	lea    rsi,[rip+0xcaa2]        # 2641e <__FUNCTION__.12951+0xee>
   1997c:	mov    QWORD PTR [rbx+0x340],rcx
   19983:	xor    eax,eax
   19985:	call   5b60 <xc_dom_printf@plt>
   1998a:	jmp    1988f <xc_dom_parse_elf_kernel+0xdf>
   1998f:	nop
   19990:	mov    ebp,0xffffffea
   19995:	jmp    1988f <xc_dom_parse_elf_kernel+0xdf>
   1999a:	nop    WORD PTR [rax+rax*1+0x0]
   199a0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   199a7:	lea    r9,[rip+0xcbc2]        # 26570 <__FUNCTION__.12585>
   199ae:	lea    r8,[rip+0xcafb]        # 264b0 <__FUNCTION__.12951+0x180>
   199b5:	lea    rsi,[rip+0xc9c1]        # 2637d <__FUNCTION__.12951+0x4d>
   199bc:	mov    ecx,0x2
   199c1:	mov    edx,0xbc
   199c6:	xor    eax,eax
   199c8:	mov    ebp,0xffffffea
   199cd:	call   60a0 <xc_dom_panic_func@plt>
   199d2:	jmp    1988f <xc_dom_parse_elf_kernel+0xdf>
   199d7:	nop    WORD PTR [rax+rax*1+0x0]
   199e0:	cmp    DWORD PTR [rbx+0x328],0xffffffff
   199e7:	lea    rcx,[rip+0xc9d0]        # 263be <__FUNCTION__.12951+0x8e>
   199ee:	jne    19959 <xc_dom_parse_elf_kernel+0x1a9>
   199f4:	mov    rdi,QWORD PTR [rbx+0x4c8]
   199fb:	lea    r9,[rip+0xcb2e]        # 26530 <__FUNCTION__.12561>
   19a02:	lea    r8,[rip+0xcae7]        # 264f0 <__FUNCTION__.12951+0x1c0>
   19a09:	lea    rsi,[rip+0xc96d]        # 2637d <__FUNCTION__.12951+0x4d>
   19a10:	mov    ecx,0x2
   19a15:	mov    edx,0x42
   19a1a:	xor    eax,eax
   19a1c:	mov    ebp,0xffffffea
   19a21:	call   60a0 <xc_dom_panic_func@plt>
   19a26:	mov    QWORD PTR [rbx+0x340],0x0
   19a31:	jmp    197c7 <xc_dom_parse_elf_kernel+0x17>
   19a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19a40:	mov    eax,DWORD PTR [rbx+0x2e8]
   19a46:	cmp    eax,0x1
   19a49:	jb     19ae8 <xc_dom_parse_elf_kernel+0x338>
   19a4f:	cmp    eax,0x2
   19a52:	lea    rcx,[rip+0xc946]        # 2639f <__FUNCTION__.12951+0x6f>
   19a59:	jbe    19959 <xc_dom_parse_elf_kernel+0x1a9>
   19a5f:	cmp    eax,0x3
   19a62:	jne    19ae8 <xc_dom_parse_elf_kernel+0x338>
   19a68:	lea    rdi,[rbx+0x4dc]
   19a6f:	lea    rsi,[rip+0xc929]        # 2639f <__FUNCTION__.12951+0x6f>
   19a76:	call   65c0 <strstr@plt>
   19a7b:	lea    rcx,[rip+0xc91d]        # 2639f <__FUNCTION__.12951+0x6f>
   19a82:	test   rax,rax
   19a85:	lea    rax,[rip+0xc923]        # 263af <__FUNCTION__.12951+0x7f>
   19a8c:	cmove  rcx,rax
   19a90:	jmp    19959 <xc_dom_parse_elf_kernel+0x1a9>
   19a95:	sub    rsp,0x8
   19a99:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19aa0:	lea    r9,[rip+0xca89]        # 26530 <__FUNCTION__.12561>
   19aa7:	push   rax
   19aa8:	lea    r8,[rip+0xc954]        # 26403 <__FUNCTION__.12951+0xd3>
   19aaf:	lea    rsi,[rip+0xc8c7]        # 2637d <__FUNCTION__.12951+0x4d>
   19ab6:	mov    edx,0x5b
   19abb:	xor    eax,eax
   19abd:	mov    ecx,0x2
   19ac2:	call   60a0 <xc_dom_panic_func@plt>
   19ac7:	mov    ebp,0xffffffea
   19acc:	mov    QWORD PTR [rbx+0x340],0x0
   19ad7:	pop    rax
   19ad8:	pop    rdx
   19ad9:	jmp    197c7 <xc_dom_parse_elf_kernel+0x17>
   19ade:	mov    ebp,0xfffffff4
   19ae3:	jmp    197c7 <xc_dom_parse_elf_kernel+0x17>
   19ae8:	lea    rcx,[rip+0xc8c0]        # 263af <__FUNCTION__.12951+0x7f>
   19aef:	jmp    19959 <xc_dom_parse_elf_kernel+0x1a9>
   19af4:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19afe:	xchg   ax,ax

0000000000019b00 <xc_dom_parse_bzimage_kernel>:
   19b00:	mov    rax,QWORD PTR [rip+0x2134b1]        # 22cfb8 <elf_loader@@Base-0x8a8>
   19b07:	jmp    QWORD PTR [rax+0x10]
   19b0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019b10 <xc_dom_load_bzimage_kernel>:
   19b10:	mov    rax,QWORD PTR [rip+0x2134a1]        # 22cfb8 <elf_loader@@Base-0x8a8>
   19b17:	jmp    QWORD PTR [rax+0x18]
   19b1a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019b20 <_xc_try_lzma_decode>:
   19b20:	push   r15
   19b22:	push   r14
   19b24:	mov    r14,r8
   19b27:	push   r13
   19b29:	push   r12
   19b2b:	push   rbp
   19b2c:	push   rbx
   19b2d:	mov    rbp,rdi
   19b30:	sub    rsp,0x18
   19b34:	mov    r12,QWORD PTR [rdi+0x8]
   19b38:	mov    QWORD PTR [rsp],rsi
   19b3c:	test   r12,r12
   19b3f:	je     19d6b <_xc_try_lzma_decode+0x24b>
   19b45:	mov    rdi,r12
   19b48:	mov    r15,rdx
   19b4b:	mov    rbx,rcx
   19b4e:	call   5ff0 <malloc@plt>
   19b53:	test   rax,rax
   19b56:	mov    r13,rax
   19b59:	je     19d48 <_xc_try_lzma_decode+0x228>
   19b5f:	mov    rax,QWORD PTR [rbp+0x0]
   19b63:	mov    QWORD PTR [rbx],rax
   19b66:	mov    rax,QWORD PTR [rbp+0x8]
   19b6a:	mov    QWORD PTR [rbx+0x18],r13
   19b6e:	mov    QWORD PTR [rbx+0x8],rax
   19b72:	mov    rax,QWORD PTR [rbp+0x8]
   19b76:	mov    QWORD PTR [rbx+0x20],rax
   19b7a:	jmp    19b93 <_xc_try_lzma_decode+0x73>
   19b7c:	nop    DWORD PTR [rax+0x0]
   19b80:	test   eax,eax
   19b82:	jne    19c18 <_xc_try_lzma_decode+0xf8>
   19b88:	cmp    QWORD PTR [rbx+0x20],0x0
   19b8d:	je     19c70 <_xc_try_lzma_decode+0x150>
   19b93:	xor    esi,esi
   19b95:	mov    rdi,rbx
   19b98:	call   59b0 <lzma_code@plt>
   19b9d:	cmp    eax,0x1
   19ba0:	jne    19b80 <_xc_try_lzma_decode+0x60>
   19ba2:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19ba9:	lea    rsi,[rip+0xcaa1]        # 26651 <__FUNCTION__.12593+0xc1>
   19bb0:	xor    eax,eax
   19bb2:	mov    rdx,r14
   19bb5:	call   5b60 <xc_dom_printf@plt>
   19bba:	mov    rdx,QWORD PTR [rbx+0x28]
   19bbe:	mov    rsi,r13
   19bc1:	mov    rdi,rbp
   19bc4:	call   5ad0 <xc_dom_register_external@plt>
   19bc9:	test   eax,eax
   19bcb:	mov    r12d,eax
   19bce:	je     19cc8 <_xc_try_lzma_decode+0x1a8>
   19bd4:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19bdb:	lea    rsi,[rip+0xcbf6]        # 267d8 <__FUNCTION__.12593+0x248>
   19be2:	mov    rdx,r14
   19be5:	xor    eax,eax
   19be7:	xor    r12d,r12d
   19bea:	call   5b60 <xc_dom_printf@plt>
   19bef:	mov    rdi,r13
   19bf2:	call   5900 <free@plt>
   19bf7:	mov    rdi,rbx
   19bfa:	call   5fe0 <lzma_end@plt>
   19bff:	add    rsp,0x18
   19c03:	mov    eax,r12d
   19c06:	pop    rbx
   19c07:	pop    rbp
   19c08:	pop    r12
   19c0a:	pop    r13
   19c0c:	pop    r14
   19c0e:	pop    r15
   19c10:	ret    
   19c11:	nop    DWORD PTR [rax+0x0]
   19c18:	lea    edx,[rax-0x5]
   19c1b:	lea    r8,[rip+0xc9e3]        # 26605 <__FUNCTION__.12593+0x75>
   19c22:	cmp    edx,0x5
   19c25:	ja     19c40 <_xc_try_lzma_decode+0x120>
   19c27:	mov    eax,edx
   19c29:	lea    rdx,[rip+0xcd90]        # 269c0 <__FUNCTION__.12593+0x430>
   19c30:	movsxd rax,DWORD PTR [rdx+rax*4]
   19c34:	add    rax,rdx
   19c37:	jmp    rax
   19c39:	lea    r8,[rip+0xc982]        # 265c2 <__FUNCTION__.12593+0x32>
   19c40:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19c47:	lea    rdx,[rip+0xcdb2]        # 26a00 <__FUNCTION__.13113>
   19c4e:	lea    rsi,[rip+0xcb63]        # 267b8 <__FUNCTION__.12593+0x228>
   19c55:	mov    rcx,r14
   19c58:	xor    eax,eax
   19c5a:	mov    r12d,0xffffffff
   19c60:	call   5b60 <xc_dom_printf@plt>
   19c65:	mov    rdi,r13
   19c68:	call   5900 <free@plt>
   19c6d:	jmp    19bf7 <_xc_try_lzma_decode+0xd7>
   19c6f:	nop
   19c70:	test   r12,r12
   19c73:	js     19d8e <_xc_try_lzma_decode+0x26e>
   19c79:	lea    rax,[r12+r12*1]
   19c7d:	mov    rdi,rbp
   19c80:	mov    rsi,rax
   19c83:	mov    QWORD PTR [rsp+0x8],rax
   19c88:	call   63e0 <xc_dom_kernel_check_size@plt>
   19c8d:	test   eax,eax
   19c8f:	jne    19db9 <_xc_try_lzma_decode+0x299>
   19c95:	mov    rsi,QWORD PTR [rsp+0x8]
   19c9a:	mov    rdi,r13
   19c9d:	call   6160 <realloc@plt>
   19ca2:	test   rax,rax
   19ca5:	je     19dcc <_xc_try_lzma_decode+0x2ac>
   19cab:	lea    rdx,[rax+r12*1]
   19caf:	mov    QWORD PTR [rbx+0x20],r12
   19cb3:	mov    r13,rax
   19cb6:	mov    r12,QWORD PTR [rsp+0x8]
   19cbb:	mov    QWORD PTR [rbx+0x18],rdx
   19cbf:	jmp    19b93 <_xc_try_lzma_decode+0x73>
   19cc4:	nop    DWORD PTR [rax+0x0]
   19cc8:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19ccf:	mov    r9,QWORD PTR [rbx+0x28]
   19cd3:	lea    rdx,[rip+0xcd26]        # 26a00 <__FUNCTION__.13113>
   19cda:	mov    r8,QWORD PTR [r15]
   19cdd:	lea    rsi,[rip+0xcb1c]        # 26800 <__FUNCTION__.12593+0x270>
   19ce4:	xor    eax,eax
   19ce6:	mov    rcx,r14
   19ce9:	call   5b60 <xc_dom_printf@plt>
   19cee:	mov    rax,QWORD PTR [rsp]
   19cf2:	mov    QWORD PTR [rax],r13
   19cf5:	mov    rax,QWORD PTR [rbx+0x28]
   19cf9:	mov    QWORD PTR [r15],rax
   19cfc:	jmp    19bf7 <_xc_try_lzma_decode+0xd7>
   19d01:	lea    r8,[rip+0xc89f]        # 265a7 <__FUNCTION__.12593+0x17>
   19d08:	jmp    19c40 <_xc_try_lzma_decode+0x120>
   19d0d:	mov    edi,0xc
   19d12:	call   6520 <strerror@plt>
   19d17:	mov    r8,rax
   19d1a:	jmp    19c40 <_xc_try_lzma_decode+0x120>
   19d1f:	lea    r8,[rip+0xc8c7]        # 265ed <__FUNCTION__.12593+0x5d>
   19d26:	jmp    19c40 <_xc_try_lzma_decode+0x120>
   19d2b:	lea    r8,[rip+0xc8ab]        # 265dd <__FUNCTION__.12593+0x4d>
   19d32:	jmp    19c40 <_xc_try_lzma_decode+0x120>
   19d37:	lea    r8,[rip+0xca5a]        # 26798 <__FUNCTION__.12593+0x208>
   19d3e:	jmp    19c40 <_xc_try_lzma_decode+0x120>
   19d43:	nop    DWORD PTR [rax+rax*1+0x0]
   19d48:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19d4f:	lea    rsi,[rip+0xc8e0]        # 26636 <__FUNCTION__.12593+0xa6>
   19d56:	mov    rdx,r14
   19d59:	xor    eax,eax
   19d5b:	mov    r12d,0xffffffff
   19d61:	call   5b60 <xc_dom_printf@plt>
   19d66:	jmp    19bf7 <_xc_try_lzma_decode+0xd7>
   19d6b:	mov    rdi,QWORD PTR [rdi+0x4c8]
   19d72:	lea    rsi,[rip+0xc8a9]        # 26622 <__FUNCTION__.12593+0x92>
   19d79:	mov    rdx,r8
   19d7c:	xor    eax,eax
   19d7e:	mov    r12d,0xffffffff
   19d84:	call   5b60 <xc_dom_printf@plt>
   19d89:	jmp    19bff <_xc_try_lzma_decode+0xdf>
   19d8e:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19d95:	lea    rsi,[rip+0xc8cd]        # 26669 <__FUNCTION__.12593+0xd9>
   19d9c:	mov    rdx,r14
   19d9f:	xor    eax,eax
   19da1:	mov    r12d,0xffffffff
   19da7:	call   5b60 <xc_dom_printf@plt>
   19dac:	mov    rdi,r13
   19daf:	call   5900 <free@plt>
   19db4:	jmp    19bf7 <_xc_try_lzma_decode+0xd7>
   19db9:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19dc0:	mov    rdx,r14
   19dc3:	lea    rsi,[rip+0xc8ba]        # 26684 <__FUNCTION__.12593+0xf4>
   19dca:	jmp    19d9f <_xc_try_lzma_decode+0x27f>
   19dcc:	mov    rdi,QWORD PTR [rbp+0x4c8]
   19dd3:	lea    rsi,[rip+0xc8bf]        # 26699 <__FUNCTION__.12593+0x109>
   19dda:	mov    rdx,r14
   19ddd:	mov    r12d,0xffffffff
   19de3:	call   5b60 <xc_dom_printf@plt>
   19de8:	mov    rdi,r13
   19deb:	call   5900 <free@plt>
   19df0:	jmp    19bf7 <_xc_try_lzma_decode+0xd7>
   19df5:	nop
   19df6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019e00 <xc_dom_probe_bzimage_kernel>:
   19e00:	push   r12
   19e02:	push   rbp
   19e03:	push   rbx
   19e04:	mov    rbx,rdi
   19e07:	sub    rsp,0xa0
   19e0e:	mov    rax,QWORD PTR fs:0x28
   19e17:	mov    QWORD PTR [rsp+0x98],rax
   19e1f:	xor    eax,eax
   19e21:	mov    rax,QWORD PTR [rdi]
   19e24:	test   rax,rax
   19e27:	je     1a2ff <xc_dom_probe_bzimage_kernel+0x4ff>
   19e2d:	mov    rsi,QWORD PTR [rdi+0x8]
   19e31:	cmp    rsi,0x24f
   19e38:	jbe    1a207 <xc_dom_probe_bzimage_kernel+0x407>
   19e3e:	cmp    DWORD PTR [rax+0x202],0x53726448
   19e48:	jne    1a22d <xc_dom_probe_bzimage_kernel+0x42d>
   19e4e:	movzx  edx,WORD PTR [rax+0x206]
   19e55:	cmp    dx,0x207
   19e5a:	jbe    1a253 <xc_dom_probe_bzimage_kernel+0x453>
   19e60:	movzx  edx,BYTE PTR [rax+0x1f1]
   19e67:	mov    ecx,DWORD PTR [rax+0x248]
   19e6d:	add    edx,0x1
   19e70:	shl    edx,0x9
   19e73:	movsxd rdx,edx
   19e76:	add    rdx,rcx
   19e79:	mov    ecx,DWORD PTR [rax+0x24c]
   19e7f:	cmp    rsi,rdx
   19e82:	jbe    1a291 <xc_dom_probe_bzimage_kernel+0x491>
   19e88:	lea    rdi,[rdx+rcx*1]
   19e8c:	cmp    rsi,rdi
   19e8f:	jb     1a2c8 <xc_dom_probe_bzimage_kernel+0x4c8>
   19e95:	add    rax,rdx
   19e98:	cmp    rcx,0x1
   19e9c:	mov    QWORD PTR [rbx+0x8],rcx
   19ea0:	mov    QWORD PTR [rbx],rax
   19ea3:	jbe    1a1d0 <xc_dom_probe_bzimage_kernel+0x3d0>
   19ea9:	cmp    WORD PTR [rax],0x8b1f
   19eae:	je     19f48 <xc_dom_probe_bzimage_kernel+0x148>
   19eb4:	cmp    rcx,0x2
   19eb8:	je     19ed7 <xc_dom_probe_bzimage_kernel+0xd7>
   19eba:	cmp    WORD PTR [rax],0x5a42
   19ebf:	je     1a088 <xc_dom_probe_bzimage_kernel+0x288>
   19ec5:	cmp    rcx,0x5
   19ec9:	jbe    19ed7 <xc_dom_probe_bzimage_kernel+0xd7>
   19ecb:	cmp    DWORD PTR [rax],0x587a37fd
   19ed1:	je     1a100 <xc_dom_probe_bzimage_kernel+0x300>
   19ed7:	cmp    WORD PTR [rax],0x5d
   19edb:	je     1a000 <xc_dom_probe_bzimage_kernel+0x200>
   19ee1:	cmp    rcx,0x4
   19ee5:	jbe    19ef3 <xc_dom_probe_bzimage_kernel+0xf3>
   19ee7:	cmp    DWORD PTR [rax],0x4f5a4c89
   19eed:	je     19f90 <xc_dom_probe_bzimage_kernel+0x190>
   19ef3:	cmp    WORD PTR [rax],0x2102
   19ef8:	jne    1a1d0 <xc_dom_probe_bzimage_kernel+0x3d0>
   19efe:	lea    rdx,[rbx+0x8]
   19f02:	mov    rsi,rbx
   19f05:	mov    rdi,rbx
   19f08:	call   5cb0 <xc_try_lz4_decode@plt>
   19f0d:	test   eax,eax
   19f0f:	js     1a198 <xc_dom_probe_bzimage_kernel+0x398>
   19f15:	mov    rax,QWORD PTR [rip+0x21309c]        # 22cfb8 <elf_loader@@Base-0x8a8>
   19f1c:	mov    rdi,rbx
   19f1f:	call   QWORD PTR [rax+0x8]
   19f22:	mov    rsi,QWORD PTR [rsp+0x98]
   19f2a:	xor    rsi,QWORD PTR fs:0x28
   19f33:	jne    1a368 <xc_dom_probe_bzimage_kernel+0x568>
   19f39:	add    rsp,0xa0
   19f40:	pop    rbx
   19f41:	pop    rbp
   19f42:	pop    r12
   19f44:	ret    
   19f45:	nop    DWORD PTR [rax]
   19f48:	lea    rdx,[rbx+0x8]
   19f4c:	mov    rsi,rbx
   19f4f:	mov    rdi,rbx
   19f52:	call   6430 <xc_dom_try_gunzip@plt>
   19f57:	cmp    eax,0xffffffff
   19f5a:	jne    19f15 <xc_dom_probe_bzimage_kernel+0x115>
   19f5c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19f63:	lea    r9,[rip+0xcad6]        # 26a40 <__FUNCTION__.13180>
   19f6a:	lea    r8,[rip+0xc8df]        # 26850 <__FUNCTION__.12593+0x2c0>
   19f71:	lea    rsi,[rip+0xc73e]        # 266b6 <__FUNCTION__.12593+0x126>
   19f78:	xor    eax,eax
   19f7a:	mov    ecx,0x2
   19f7f:	mov    edx,0x2c9
   19f84:	call   60a0 <xc_dom_panic_func@plt>
   19f89:	mov    eax,0xffffffea
   19f8e:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   19f90:	cmp    BYTE PTR [rax+0x4],0x0
   19f94:	jne    19ef3 <xc_dom_probe_bzimage_kernel+0xf3>
   19f9a:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19fa1:	lea    r9,[rip+0xca38]        # 269e0 <__FUNCTION__.13132>
   19fa8:	lea    r8,[rip+0xc971]        # 26920 <__FUNCTION__.12593+0x390>
   19faf:	lea    rsi,[rip+0xc700]        # 266b6 <__FUNCTION__.12593+0x126>
   19fb6:	mov    ecx,0x1
   19fbb:	mov    edx,0x24a
   19fc0:	xor    eax,eax
   19fc2:	call   60a0 <xc_dom_panic_func@plt>
   19fc7:	mov    rdi,QWORD PTR [rbx+0x4c8]
   19fce:	lea    r9,[rip+0xca6b]        # 26a40 <__FUNCTION__.13180>
   19fd5:	lea    r8,[rip+0xc974]        # 26950 <__FUNCTION__.12593+0x3c0>
   19fdc:	lea    rsi,[rip+0xc6d3]        # 266b6 <__FUNCTION__.12593+0x126>
   19fe3:	xor    eax,eax
   19fe5:	mov    ecx,0x2
   19fea:	mov    edx,0x2f5
   19fef:	call   60a0 <xc_dom_panic_func@plt>
   19ff4:	mov    eax,0xffffffea
   19ff9:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   19ffe:	xchg   ax,ax
   1a000:	lea    rdi,[rsp+0x10]
   1a005:	lea    rbp,[rsp+0x10]
   1a00a:	xor    eax,eax
   1a00c:	mov    ecx,0x11
   1a011:	mov    esi,0x8000000
   1a016:	lea    r12,[rbx+0x8]
   1a01a:	rep stos QWORD PTR es:[rdi],rax
   1a01d:	mov    rdi,rbp
   1a020:	call   5fc0 <lzma_alone_decoder@plt>
   1a025:	test   eax,eax
   1a027:	jne    1a334 <xc_dom_probe_bzimage_kernel+0x534>
   1a02d:	lea    r8,[rip+0xc74a]        # 2677e <__FUNCTION__.12593+0x1ee>
   1a034:	mov    rcx,rbp
   1a037:	mov    rdx,r12
   1a03a:	mov    rsi,rbx
   1a03d:	mov    rdi,rbx
   1a040:	call   19b20 <_xc_try_lzma_decode>
   1a045:	test   eax,eax
   1a047:	jns    19f15 <xc_dom_probe_bzimage_kernel+0x115>
   1a04d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a054:	lea    r9,[rip+0xc9e5]        # 26a40 <__FUNCTION__.13180>
   1a05b:	lea    r8,[rip+0xc896]        # 268f8 <__FUNCTION__.12593+0x368>
   1a062:	lea    rsi,[rip+0xc64d]        # 266b6 <__FUNCTION__.12593+0x126>
   1a069:	xor    eax,eax
   1a06b:	mov    ecx,0x2
   1a070:	mov    edx,0x2ea
   1a075:	call   60a0 <xc_dom_panic_func@plt>
   1a07a:	mov    eax,0xffffffea
   1a07f:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a084:	nop    DWORD PTR [rax+0x0]
   1a088:	cmp    BYTE PTR [rax+0x2],0x68
   1a08c:	jne    19ec5 <xc_dom_probe_bzimage_kernel+0xc5>
   1a092:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a099:	lea    r9,[rip+0xc980]        # 26a20 <__FUNCTION__.12502>
   1a0a0:	lea    r8,[rip+0xc7d1]        # 26878 <__FUNCTION__.12593+0x2e8>
   1a0a7:	lea    rsi,[rip+0xc608]        # 266b6 <__FUNCTION__.12593+0x126>
   1a0ae:	mov    ecx,0x1
   1a0b3:	mov    edx,0xbf
   1a0b8:	xor    eax,eax
   1a0ba:	call   60a0 <xc_dom_panic_func@plt>
   1a0bf:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a0c6:	lea    r9,[rip+0xc973]        # 26a40 <__FUNCTION__.13180>
   1a0cd:	lea    r8,[rip+0xc7d4]        # 268a8 <__FUNCTION__.12593+0x318>
   1a0d4:	lea    rsi,[rip+0xc5db]        # 266b6 <__FUNCTION__.12593+0x126>
   1a0db:	xor    eax,eax
   1a0dd:	mov    ecx,0x2
   1a0e2:	mov    edx,0x2d4
   1a0e7:	call   60a0 <xc_dom_panic_func@plt>
   1a0ec:	mov    eax,0xffffffea
   1a0f1:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a100:	cmp    WORD PTR [rax+0x4],0x5a
   1a105:	jne    19ed7 <xc_dom_probe_bzimage_kernel+0xd7>
   1a10b:	lea    rdi,[rsp+0x10]
   1a110:	xor    eax,eax
   1a112:	mov    ecx,0x11
   1a117:	xor    edx,edx
   1a119:	mov    esi,0x8000000
   1a11e:	lea    rbp,[rbx+0x8]
   1a122:	rep stos QWORD PTR es:[rdi],rax
   1a125:	lea    rcx,[rsp+0x10]
   1a12a:	mov    rdi,rcx
   1a12d:	mov    QWORD PTR [rsp+0x8],rcx
   1a132:	call   5f90 <lzma_stream_decoder@plt>
   1a137:	test   eax,eax
   1a139:	mov    rcx,QWORD PTR [rsp+0x8]
   1a13e:	jne    1a34e <xc_dom_probe_bzimage_kernel+0x54e>
   1a144:	lea    r8,[rip+0xc5f8]        # 26743 <__FUNCTION__.12593+0x1b3>
   1a14b:	mov    rdx,rbp
   1a14e:	mov    rsi,rbx
   1a151:	mov    rdi,rbx
   1a154:	call   19b20 <_xc_try_lzma_decode>
   1a159:	test   eax,eax
   1a15b:	jns    19f15 <xc_dom_probe_bzimage_kernel+0x115>
   1a161:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a168:	lea    r9,[rip+0xc8d1]        # 26a40 <__FUNCTION__.13180>
   1a16f:	lea    r8,[rip+0xc75a]        # 268d0 <__FUNCTION__.12593+0x340>
   1a176:	lea    rsi,[rip+0xc539]        # 266b6 <__FUNCTION__.12593+0x126>
   1a17d:	xor    eax,eax
   1a17f:	mov    ecx,0x2
   1a184:	mov    edx,0x2df
   1a189:	call   60a0 <xc_dom_panic_func@plt>
   1a18e:	mov    eax,0xffffffea
   1a193:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a198:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a19f:	lea    r9,[rip+0xc89a]        # 26a40 <__FUNCTION__.13180>
   1a1a6:	lea    r8,[rip+0xc7cb]        # 26978 <__FUNCTION__.12593+0x3e8>
   1a1ad:	lea    rsi,[rip+0xc502]        # 266b6 <__FUNCTION__.12593+0x126>
   1a1b4:	xor    eax,eax
   1a1b6:	mov    ecx,0x2
   1a1bb:	mov    edx,0x300
   1a1c0:	call   60a0 <xc_dom_panic_func@plt>
   1a1c5:	mov    eax,0xffffffea
   1a1ca:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a1cf:	nop
   1a1d0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a1d7:	lea    r9,[rip+0xc862]        # 26a40 <__FUNCTION__.13180>
   1a1de:	lea    r8,[rip+0xc7bb]        # 269a0 <__FUNCTION__.12593+0x410>
   1a1e5:	lea    rsi,[rip+0xc4ca]        # 266b6 <__FUNCTION__.12593+0x126>
   1a1ec:	xor    eax,eax
   1a1ee:	mov    ecx,0x2
   1a1f3:	mov    edx,0x307
   1a1f8:	call   60a0 <xc_dom_panic_func@plt>
   1a1fd:	mov    eax,0xffffffea
   1a202:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a207:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1a20e:	lea    rdx,[rip+0xc82b]        # 26a40 <__FUNCTION__.13180>
   1a215:	lea    rsi,[rip+0xc4b1]        # 266cd <__FUNCTION__.12593+0x13d>
   1a21c:	xor    eax,eax
   1a21e:	call   5b60 <xc_dom_printf@plt>
   1a223:	mov    eax,0xffffffea
   1a228:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a22d:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1a234:	lea    rdx,[rip+0xc805]        # 26a40 <__FUNCTION__.13180>
   1a23b:	lea    rsi,[rip+0xc4a6]        # 266e8 <__FUNCTION__.12593+0x158>
   1a242:	xor    eax,eax
   1a244:	call   5b60 <xc_dom_printf@plt>
   1a249:	mov    eax,0xffffffea
   1a24e:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a253:	sub    rsp,0x8
   1a257:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1a25e:	lea    r9,[rip+0xc7db]        # 26a40 <__FUNCTION__.13180>
   1a265:	push   rdx
   1a266:	lea    r8,[rip+0xc5bb]        # 26828 <__FUNCTION__.12593+0x298>
   1a26d:	lea    rsi,[rip+0xc442]        # 266b6 <__FUNCTION__.12593+0x126>
   1a274:	mov    edx,0x2a8
   1a279:	xor    eax,eax
   1a27b:	mov    ecx,0x2
   1a280:	call   60a0 <xc_dom_panic_func@plt>
   1a285:	pop    rax
   1a286:	mov    eax,0xffffffea
   1a28b:	pop    rdx
   1a28c:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a291:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1a298:	lea    r9,[rip+0xc7a1]        # 26a40 <__FUNCTION__.13180>
   1a29f:	lea    r8,[rip+0xc45e]        # 26704 <__FUNCTION__.12593+0x174>
   1a2a6:	lea    rsi,[rip+0xc409]        # 266b6 <__FUNCTION__.12593+0x126>
   1a2ad:	xor    eax,eax
   1a2af:	mov    ecx,0x2
   1a2b4:	mov    edx,0x2b6
   1a2b9:	call   60a0 <xc_dom_panic_func@plt>
   1a2be:	mov    eax,0xffffffea
   1a2c3:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a2c8:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a2cf:	lea    r9,[rip+0xc76a]        # 26a40 <__FUNCTION__.13180>
   1a2d6:	lea    r8,[rip+0xc443]        # 26720 <__FUNCTION__.12593+0x190>
   1a2dd:	lea    rsi,[rip+0xc3d2]        # 266b6 <__FUNCTION__.12593+0x126>
   1a2e4:	xor    eax,eax
   1a2e6:	mov    ecx,0x2
   1a2eb:	mov    edx,0x2bc
   1a2f0:	call   60a0 <xc_dom_panic_func@plt>
   1a2f5:	mov    eax,0xffffffea
   1a2fa:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a2ff:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1a306:	lea    r9,[rip+0xc733]        # 26a40 <__FUNCTION__.13180>
   1a30d:	lea    r8,[rip+0xc04e]        # 26362 <__FUNCTION__.12951+0x32>
   1a314:	lea    rsi,[rip+0xc39b]        # 266b6 <__FUNCTION__.12593+0x126>
   1a31b:	mov    ecx,0x1
   1a320:	mov    edx,0x293
   1a325:	call   60a0 <xc_dom_panic_func@plt>
   1a32a:	mov    eax,0xffffffea
   1a32f:	jmp    19f22 <xc_dom_probe_bzimage_kernel+0x122>
   1a334:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a33b:	lea    rsi,[rip+0xc41f]        # 26761 <__FUNCTION__.12593+0x1d1>
   1a342:	xor    eax,eax
   1a344:	call   5b60 <xc_dom_printf@plt>
   1a349:	jmp    1a04d <xc_dom_probe_bzimage_kernel+0x24d>
   1a34e:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1a355:	lea    rsi,[rip+0xc3ea]        # 26746 <__FUNCTION__.12593+0x1b6>
   1a35c:	xor    eax,eax
   1a35e:	call   5b60 <xc_dom_printf@plt>
   1a363:	jmp    1a161 <xc_dom_probe_bzimage_kernel+0x361>
   1a368:	call   5b80 <__stack_chk_fail@plt>
   1a36d:	nop    DWORD PTR [rax]

000000000001a370 <lz4_decompress_unknownoutputsize>:
   1a370:	push   r15
   1a372:	push   r14
   1a374:	movsxd rsi,esi
   1a377:	push   r13
   1a379:	push   r12
   1a37b:	lea    r10,[rdi+rsi*1]
   1a37f:	push   rbp
   1a380:	push   rbx
   1a381:	sub    rsp,0xa8
   1a388:	mov    r14,QWORD PTR [rcx]
   1a38b:	mov    rax,QWORD PTR fs:0x28
   1a394:	mov    QWORD PTR [rsp+0x98],rax
   1a39c:	xor    eax,eax
   1a39e:	mov    QWORD PTR [rsp+0x10],0x0
   1a3a7:	mov    QWORD PTR [rsp+0x18],0x3
   1a3b0:	add    r14,rdx
   1a3b3:	cmp    rdi,r10
   1a3b6:	mov    QWORD PTR [rsp+0x20],0x2
   1a3bf:	mov    QWORD PTR [rsp+0x28],0x3
   1a3c8:	mov    QWORD PTR [rsp+0x30],0x0
   1a3d1:	mov    QWORD PTR [rsp+0x38],0x0
   1a3da:	mov    QWORD PTR [rsp+0x40],0x0
   1a3e3:	mov    QWORD PTR [rsp+0x48],0x0
   1a3ec:	mov    QWORD PTR [rsp+0x50],0x0
   1a3f5:	mov    QWORD PTR [rsp+0x58],0x0
   1a3fe:	mov    QWORD PTR [rsp+0x60],0x0
   1a407:	mov    QWORD PTR [rsp+0x68],0xffffffffffffffff
   1a410:	mov    QWORD PTR [rsp+0x70],0x0
   1a419:	mov    QWORD PTR [rsp+0x78],0x1
   1a422:	mov    QWORD PTR [rsp+0x80],0x2
   1a42e:	mov    QWORD PTR [rsp+0x88],0x3
   1a43a:	jae    1a700 <lz4_decompress_unknownoutputsize+0x390>
   1a440:	lea    r11,[r14-0x8]
   1a444:	lea    r13,[r10-0x8]
   1a448:	mov    rbp,rdi
   1a44b:	mov    r12,rdx
   1a44e:	mov    rax,rdx
   1a451:	mov    r9,rdi
   1a454:	lea    rbx,[r11+0x7]
   1a458:	mov    QWORD PTR [rsp+0x8],rbx
   1a45d:	movzx  edi,BYTE PTR [r9]
   1a461:	lea    rsi,[r9+0x1]
   1a465:	mov    r8d,edi
   1a468:	shr    edi,0x4
   1a46b:	cmp    edi,0xf
   1a46e:	mov    edx,edi
   1a470:	je     1a600 <lz4_decompress_unknownoutputsize+0x290>
   1a476:	lea    rdi,[rax+rdx*1]
   1a47a:	cmp    rdi,r11
   1a47d:	ja     1a6bc <lz4_decompress_unknownoutputsize+0x34c>
   1a483:	lea    r9,[rsi+rdx*1]
   1a487:	cmp    r9,r13
   1a48a:	ja     1a6bc <lz4_decompress_unknownoutputsize+0x34c>
   1a490:	cmp    rdi,rax
   1a493:	jb     1a6b4 <lz4_decompress_unknownoutputsize+0x344>
   1a499:	nop    DWORD PTR [rax+0x0]
   1a4a0:	mov    rdx,QWORD PTR [rsi]
   1a4a3:	add    rax,0x8
   1a4a7:	add    rsi,0x8
   1a4ab:	mov    QWORD PTR [rax-0x8],rdx
   1a4af:	cmp    rdi,rax
   1a4b2:	ja     1a4a0 <lz4_decompress_unknownoutputsize+0x130>
   1a4b4:	sub    rax,rdi
   1a4b7:	mov    rdx,rdi
   1a4ba:	sub    rsi,rax
   1a4bd:	movzx  r15d,WORD PTR [rsi]
   1a4c1:	lea    r9,[rsi+0x2]
   1a4c5:	sub    rdx,r15
   1a4c8:	mov    rbx,r15
   1a4cb:	cmp    r12,rdx
   1a4ce:	ja     1a5bb <lz4_decompress_unknownoutputsize+0x24b>
   1a4d4:	and    r8d,0xf
   1a4d8:	cmp    r8b,0xf
   1a4dc:	movzx  eax,r8b
   1a4e0:	je     1a630 <lz4_decompress_unknownoutputsize+0x2c0>
   1a4e6:	sub    rax,0x4
   1a4ea:	cmp    r15d,0x7
   1a4ee:	jg     1a580 <lz4_decompress_unknownoutputsize+0x210>
   1a4f4:	movzx  esi,BYTE PTR [rdx]
   1a4f7:	mov    r8,QWORD PTR [rsp+rbx*8+0x50]
   1a4fc:	mov    BYTE PTR [rdi],sil
   1a4ff:	movzx  esi,BYTE PTR [rdx+0x1]
   1a503:	mov    BYTE PTR [rdi+0x1],sil
   1a507:	movzx  esi,BYTE PTR [rdx+0x2]
   1a50b:	mov    BYTE PTR [rdi+0x2],sil
   1a50f:	movzx  esi,BYTE PTR [rdx+0x3]
   1a513:	mov    BYTE PTR [rdi+0x3],sil
   1a517:	mov    rsi,rdi
   1a51a:	add    rdi,0x8
   1a51e:	sub    rsi,rdx
   1a521:	sub    rdx,QWORD PTR [rsp+rsi*8+0x10]
   1a526:	mov    rsi,rdx
   1a529:	mov    edx,DWORD PTR [rdx+0x4]
   1a52c:	add    rsi,0x4
   1a530:	sub    rsi,r8
   1a533:	mov    DWORD PTR [rdi-0x4],edx
   1a536:	add    rax,rdi
   1a539:	cmp    rax,r11
   1a53c:	ja     1a597 <lz4_decompress_unknownoutputsize+0x227>
   1a53e:	cmp    rax,rdi
   1a541:	jb     1a5bb <lz4_decompress_unknownoutputsize+0x24b>
   1a543:	cmp    rdi,rax
   1a546:	jb     1a560 <lz4_decompress_unknownoutputsize+0x1f0>
   1a548:	cmp    r10,r9
   1a54b:	ja     1a45d <lz4_decompress_unknownoutputsize+0xed>
   1a551:	mov    ebp,eax
   1a553:	sub    ebp,r12d
   1a556:	jmp    1a5be <lz4_decompress_unknownoutputsize+0x24e>
   1a558:	nop    DWORD PTR [rax+rax*1+0x0]
   1a560:	mov    rdx,QWORD PTR [rsi]
   1a563:	add    rdi,0x8
   1a567:	add    rsi,0x8
   1a56b:	mov    QWORD PTR [rdi-0x8],rdx
   1a56f:	cmp    rax,rdi
   1a572:	ja     1a560 <lz4_decompress_unknownoutputsize+0x1f0>
   1a574:	jmp    1a548 <lz4_decompress_unknownoutputsize+0x1d8>
   1a576:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a580:	mov    rsi,QWORD PTR [rdx]
   1a583:	add    rdi,0x8
   1a587:	mov    QWORD PTR [rdi-0x8],rsi
   1a58b:	add    rax,rdi
   1a58e:	lea    rsi,[rdx+0x8]
   1a592:	cmp    rax,r11
   1a595:	jbe    1a53e <lz4_decompress_unknownoutputsize+0x1ce>
   1a597:	cmp    r14,rax
   1a59a:	jb     1a5bb <lz4_decompress_unknownoutputsize+0x24b>
   1a59c:	cmp    rdi,r11
   1a59f:	jb     1a658 <lz4_decompress_unknownoutputsize+0x2e8>
   1a5a5:	cmp    rdi,rax
   1a5a8:	jae    1a5b6 <lz4_decompress_unknownoutputsize+0x246>
   1a5aa:	nop    WORD PTR [rax+rax*1+0x0]
   1a5b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1a5b1:	cmp    rax,rdi
   1a5b4:	jne    1a5b0 <lz4_decompress_unknownoutputsize+0x240>
   1a5b6:	cmp    r14,rax
   1a5b9:	jne    1a548 <lz4_decompress_unknownoutputsize+0x1d8>
   1a5bb:	sub    ebp,r9d
   1a5be:	test   ebp,ebp
   1a5c0:	js     1a707 <lz4_decompress_unknownoutputsize+0x397>
   1a5c6:	movsxd rbp,ebp
   1a5c9:	xor    eax,eax
   1a5cb:	mov    QWORD PTR [rcx],rbp
   1a5ce:	mov    rbx,QWORD PTR [rsp+0x98]
   1a5d6:	xor    rbx,QWORD PTR fs:0x28
   1a5df:	jne    1a711 <lz4_decompress_unknownoutputsize+0x3a1>
   1a5e5:	add    rsp,0xa8
   1a5ec:	pop    rbx
   1a5ed:	pop    rbp
   1a5ee:	pop    r12
   1a5f0:	pop    r13
   1a5f2:	pop    r14
   1a5f4:	pop    r15
   1a5f6:	ret    
   1a5f7:	nop    WORD PTR [rax+rax*1+0x0]
   1a600:	cmp    r10,rsi
   1a603:	mov    edx,0xf
   1a608:	ja     1a61a <lz4_decompress_unknownoutputsize+0x2aa>
   1a60a:	jmp    1a476 <lz4_decompress_unknownoutputsize+0x106>
   1a60f:	nop
   1a610:	cmp    r9b,0xff
   1a614:	jne    1a476 <lz4_decompress_unknownoutputsize+0x106>
   1a61a:	add    rsi,0x1
   1a61e:	movzx  r9d,BYTE PTR [rsi-0x1]
   1a623:	add    rdx,r9
   1a626:	cmp    r10,rsi
   1a629:	ja     1a610 <lz4_decompress_unknownoutputsize+0x2a0>
   1a62b:	jmp    1a476 <lz4_decompress_unknownoutputsize+0x106>
   1a630:	cmp    r10,r9
   1a633:	jbe    1a6f6 <lz4_decompress_unknownoutputsize+0x386>
   1a639:	movzx  eax,BYTE PTR [rsi+0x2]
   1a63d:	lea    r9,[rsi+0x3]
   1a641:	cmp    al,0xff
   1a643:	lea    r8,[rax+0xf]
   1a647:	je     1a694 <lz4_decompress_unknownoutputsize+0x324>
   1a649:	add    rax,0xb
   1a64d:	jmp    1a4ea <lz4_decompress_unknownoutputsize+0x17a>
   1a652:	nop    WORD PTR [rax+rax*1+0x0]
   1a658:	mov    rbx,QWORD PTR [rsp+0x8]
   1a65d:	lea    rdx,[rdi+0x8]
   1a661:	sub    rbx,rdx
   1a664:	mov    rdx,rbx
   1a667:	shr    rdx,0x3
   1a66b:	lea    rbx,[rdx*8+0x8]
   1a673:	xor    edx,edx
   1a675:	nop    DWORD PTR [rax]
   1a678:	mov    r8,QWORD PTR [rsi+rdx*1]
   1a67c:	mov    QWORD PTR [rdi+rdx*1],r8
   1a680:	add    rdx,0x8
   1a684:	cmp    rbx,rdx
   1a687:	jne    1a678 <lz4_decompress_unknownoutputsize+0x308>
   1a689:	add    rsi,rbx
   1a68c:	add    rdi,rbx
   1a68f:	jmp    1a5a5 <lz4_decompress_unknownoutputsize+0x235>
   1a694:	cmp    r10,r9
   1a697:	jbe    1a6ab <lz4_decompress_unknownoutputsize+0x33b>
   1a699:	add    r9,0x1
   1a69d:	movzx  esi,BYTE PTR [r9-0x1]
   1a6a2:	add    r8,rsi
   1a6a5:	cmp    sil,0xff
   1a6a9:	je     1a694 <lz4_decompress_unknownoutputsize+0x324>
   1a6ab:	lea    rax,[r8-0x4]
   1a6af:	jmp    1a4ea <lz4_decompress_unknownoutputsize+0x17a>
   1a6b4:	mov    r9,rsi
   1a6b7:	jmp    1a5bb <lz4_decompress_unknownoutputsize+0x24b>
   1a6bc:	mov    rbx,rdi
   1a6bf:	mov    rdi,rdx
   1a6c2:	cmp    r14,rbx
   1a6c5:	jb     1a6b4 <lz4_decompress_unknownoutputsize+0x344>
   1a6c7:	lea    rdx,[rsi+rdx*1]
   1a6cb:	mov    r9,rsi
   1a6ce:	cmp    r10,rdx
   1a6d1:	jne    1a5bb <lz4_decompress_unknownoutputsize+0x24b>
   1a6d7:	mov    rdx,rdi
   1a6da:	mov    ebp,ebx
   1a6dc:	mov    rdi,rax
   1a6df:	mov    QWORD PTR [rsp+0x8],rcx
   1a6e4:	sub    ebp,r12d
   1a6e7:	call   5eb0 <memcpy@plt>
   1a6ec:	mov    rcx,QWORD PTR [rsp+0x8]
   1a6f1:	jmp    1a5be <lz4_decompress_unknownoutputsize+0x24e>
   1a6f6:	mov    eax,0xb
   1a6fb:	jmp    1a4ea <lz4_decompress_unknownoutputsize+0x17a>
   1a700:	xor    ebp,ebp
   1a702:	jmp    1a5c6 <lz4_decompress_unknownoutputsize+0x256>
   1a707:	mov    eax,0xffffffff
   1a70c:	jmp    1a5ce <lz4_decompress_unknownoutputsize+0x25e>
   1a711:	call   5b80 <__stack_chk_fail@plt>
   1a716:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001a720 <xc_try_lz4_decode>:
   1a720:	push   r15
   1a722:	push   r14
   1a724:	push   r13
   1a726:	push   r12
   1a728:	mov    r13,rdi
   1a72b:	push   rbp
   1a72c:	push   rbx
   1a72d:	sub    rsp,0x48
   1a731:	mov    rbx,QWORD PTR [rdx]
   1a734:	mov    rax,QWORD PTR fs:0x28
   1a73d:	mov    QWORD PTR [rsp+0x38],rax
   1a742:	xor    eax,eax
   1a744:	lea    rax,[rbx-0x4]
   1a748:	cmp    rax,0x3
   1a74c:	jle    1a7b8 <xc_try_lz4_decode+0x98>
   1a74e:	mov    rbp,QWORD PTR [rsi]
   1a751:	mov    r14,rsi
   1a754:	mov    r12,rdx
   1a757:	mov    r15d,0xffffffff
   1a75d:	mov    eax,DWORD PTR [rbp+rbx*1-0x4]
   1a761:	mov    rsi,rax
   1a764:	mov    QWORD PTR [rsp+0x8],rax
   1a769:	call   63e0 <xc_dom_kernel_check_size@plt>
   1a76e:	test   eax,eax
   1a770:	lea    rdx,[rip+0xc348]        # 26abf <__FUNCTION__.13180+0x7f>
   1a777:	je     1a7d0 <xc_try_lz4_decode+0xb0>
   1a779:	mov    rdi,QWORD PTR [r13+0x4c8]
   1a780:	lea    rsi,[rip+0xc355]        # 26adc <__FUNCTION__.13180+0x9c>
   1a787:	xor    eax,eax
   1a789:	call   5b60 <xc_dom_printf@plt>
   1a78e:	mov    rcx,QWORD PTR [rsp+0x38]
   1a793:	xor    rcx,QWORD PTR fs:0x28
   1a79c:	mov    eax,r15d
   1a79f:	jne    1a95e <xc_try_lz4_decode+0x23e>
   1a7a5:	add    rsp,0x48
   1a7a9:	pop    rbx
   1a7aa:	pop    rbp
   1a7ab:	pop    r12
   1a7ad:	pop    r13
   1a7af:	pop    r14
   1a7b1:	pop    r15
   1a7b3:	ret    
   1a7b4:	nop    DWORD PTR [rax+0x0]
   1a7b8:	lea    rdx,[rip+0xc2f0]        # 26aaf <__FUNCTION__.13180+0x6f>
   1a7bf:	mov    r15d,0xffffffff
   1a7c5:	jmp    1a779 <xc_try_lz4_decode+0x59>
   1a7c7:	nop    WORD PTR [rax+rax*1+0x0]
   1a7d0:	mov    rdi,QWORD PTR [rsp+0x8]
   1a7d5:	call   5ff0 <malloc@plt>
   1a7da:	test   rax,rax
   1a7dd:	mov    r10,rax
   1a7e0:	je     1a8d0 <xc_try_lz4_decode+0x1b0>
   1a7e6:	cmp    DWORD PTR [rbp+0x0],0x184c2102
   1a7ed:	jne    1a8b0 <xc_try_lz4_decode+0x190>
   1a7f3:	mov    r11,rax
   1a7f6:	lea    rax,[rsp+0x30]
   1a7fb:	add    rbp,0x4
   1a7ff:	sub    rbx,0x8
   1a803:	mov    QWORD PTR [rsp+0x28],rax
   1a808:	cmp    rbx,0x3
   1a80c:	jle    1a898 <xc_try_lz4_decode+0x178>
   1a812:	mov    r8d,DWORD PTR [rbp+0x0]
   1a816:	sub    rbx,0x4
   1a81a:	add    rbp,0x4
   1a81e:	cmp    r8,0x184c2102
   1a825:	je     1a808 <xc_try_lz4_decode+0xe8>
   1a827:	cmp    rbx,r8
   1a82a:	jb     1a8e0 <xc_try_lz4_decode+0x1c0>
   1a830:	mov    rcx,QWORD PTR [rsp+0x8]
   1a835:	mov    rax,r11
   1a838:	mov    rdx,r11
   1a83b:	sub    rax,r10
   1a83e:	mov    rsi,r8
   1a841:	mov    rdi,rbp
   1a844:	mov    QWORD PTR [rsp+0x10],r10
   1a849:	mov    QWORD PTR [rsp+0x20],r11
   1a84e:	sub    rcx,rax
   1a851:	mov    QWORD PTR [rsp+0x18],r8
   1a856:	mov    QWORD PTR [rsp+0x30],rcx
   1a85b:	mov    rcx,QWORD PTR [rsp+0x28]
   1a860:	call   6250 <lz4_decompress_unknownoutputsize@plt>
   1a865:	test   eax,eax
   1a867:	mov    r15d,eax
   1a86a:	mov    r10,QWORD PTR [rsp+0x10]
   1a86f:	js     1a8f0 <xc_try_lz4_decode+0x1d0>
   1a871:	mov    r8,QWORD PTR [rsp+0x18]
   1a876:	mov    r11,QWORD PTR [rsp+0x20]
   1a87b:	add    r11,QWORD PTR [rsp+0x30]
   1a880:	sub    rbx,r8
   1a883:	je     1a900 <xc_try_lz4_decode+0x1e0>
   1a885:	js     1a940 <xc_try_lz4_decode+0x220>
   1a88b:	add    rbp,r8
   1a88e:	cmp    rbx,0x3
   1a892:	jg     1a812 <xc_try_lz4_decode+0xf2>
   1a898:	lea    rdx,[rip+0xc1cc]        # 26a6b <__FUNCTION__.13180+0x2b>
   1a89f:	mov    r15d,0xffffffff
   1a8a5:	jmp    1a8b7 <xc_try_lz4_decode+0x197>
   1a8a7:	nop    WORD PTR [rax+rax*1+0x0]
   1a8b0:	lea    rdx,[rip+0xc1a5]        # 26a5c <__FUNCTION__.13180+0x1c>
   1a8b7:	mov    rdi,r10
   1a8ba:	mov    QWORD PTR [rsp+0x8],rdx
   1a8bf:	call   5900 <free@plt>
   1a8c4:	mov    rdx,QWORD PTR [rsp+0x8]
   1a8c9:	jmp    1a779 <xc_try_lz4_decode+0x59>
   1a8ce:	xchg   ax,ax
   1a8d0:	lea    rdx,[rip+0xc249]        # 26b20 <__FUNCTION__.13180+0xe0>
   1a8d7:	jmp    1a779 <xc_try_lz4_decode+0x59>
   1a8dc:	nop    DWORD PTR [rax+0x0]
   1a8e0:	lea    rdx,[rip+0xc191]        # 26a78 <__FUNCTION__.13180+0x38>
   1a8e7:	mov    r15d,0xffffffff
   1a8ed:	jmp    1a8b7 <xc_try_lz4_decode+0x197>
   1a8ef:	nop
   1a8f0:	lea    rdx,[rip+0xc199]        # 26a90 <__FUNCTION__.13180+0x50>
   1a8f7:	jmp    1a8b7 <xc_try_lz4_decode+0x197>
   1a8f9:	nop    DWORD PTR [rax+0x0]
   1a900:	mov    rbx,QWORD PTR [rsp+0x8]
   1a905:	mov    rsi,r10
   1a908:	mov    rdi,r13
   1a90b:	mov    QWORD PTR [rsp+0x8],r10
   1a910:	mov    rdx,rbx
   1a913:	call   5ad0 <xc_dom_register_external@plt>
   1a918:	test   eax,eax
   1a91a:	mov    r15d,eax
   1a91d:	mov    r10,QWORD PTR [rsp+0x8]
   1a922:	je     1a952 <xc_try_lz4_decode+0x232>
   1a924:	lea    rdx,[rip+0xc1d5]        # 26b00 <__FUNCTION__.13180+0xc0>
   1a92b:	mov    r15d,0xffffffff
   1a931:	jmp    1a8b7 <xc_try_lz4_decode+0x197>
   1a936:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a940:	lea    rdx,[rip+0xc159]        # 26aa0 <__FUNCTION__.13180+0x60>
   1a947:	mov    r15d,0xffffffff
   1a94d:	jmp    1a8b7 <xc_try_lz4_decode+0x197>
   1a952:	mov    QWORD PTR [r14],r10
   1a955:	mov    QWORD PTR [r12],rbx
   1a959:	jmp    1a78e <xc_try_lz4_decode+0x6e>
   1a95e:	call   5b80 <__stack_chk_fail@plt>
   1a963:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a96d:	nop    DWORD PTR [rax]

000000000001a970 <module_init_one>:
   1a970:	push   r12
   1a972:	push   rbp
   1a973:	push   rbx
   1a974:	sub    rsp,0x30
   1a978:	mov    r8d,DWORD PTR [rsi+0x8]
   1a97c:	mov    rax,QWORD PTR fs:0x28
   1a985:	mov    QWORD PTR [rsp+0x28],rax
   1a98a:	xor    eax,eax
   1a98c:	test   r8d,r8d
   1a98f:	je     1a99b <module_init_one+0x2b>
   1a991:	cmp    QWORD PTR [rsi+0x10],0x0
   1a996:	mov    rbx,rsi
   1a999:	je     1a9c0 <module_init_one+0x50>
   1a99b:	xor    eax,eax
   1a99d:	mov    rcx,QWORD PTR [rsp+0x28]
   1a9a2:	xor    rcx,QWORD PTR fs:0x28
   1a9ab:	jne    1aa81 <module_init_one+0x111>
   1a9b1:	add    rsp,0x30
   1a9b5:	pop    rbx
   1a9b6:	pop    rbp
   1a9b7:	pop    r12
   1a9b9:	ret    
   1a9ba:	nop    WORD PTR [rax+rax*1+0x0]
   1a9c0:	xor    ecx,ecx
   1a9c2:	mov    rsi,rsp
   1a9c5:	mov    rbp,rdi
   1a9c8:	mov    r12,rdx
   1a9cb:	call   5a00 <xc_dom_alloc_segment@plt>
   1a9d0:	test   eax,eax
   1a9d2:	jne    1aa53 <module_init_one+0xe3>
   1a9d4:	mov    rdx,QWORD PTR [rsp+0x18]
   1a9d9:	mov    rsi,QWORD PTR [rsp+0x10]
   1a9de:	mov    rdi,rbp
   1a9e1:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1a9e6:	test   rax,rax
   1a9e9:	je     1aa5d <module_init_one+0xed>
   1a9eb:	mov    edx,DWORD PTR [rbx+0x8]
   1a9ee:	mov    rsi,QWORD PTR [rbx]
   1a9f1:	mov    rdi,rax
   1a9f4:	call   5eb0 <memcpy@plt>
   1a9f9:	mov    rdx,QWORD PTR [rsp]
   1a9fd:	mov    ecx,0xfffffffd
   1aa02:	mov    QWORD PTR [rbx+0x10],rdx
   1aa06:	mov    rax,QWORD PTR [rbp+0x938]
   1aa0d:	lea    rsi,[rax-0x1]
   1aa11:	cmp    rsi,rcx
   1aa14:	ja     1aa86 <module_init_one+0x116>
   1aa16:	cmp    rdx,rax
   1aa19:	ja     1aa2a <module_init_one+0xba>
   1aa1b:	mov    ecx,DWORD PTR [rbx+0x8]
   1aa1e:	add    rdx,rcx
   1aa21:	cmp    rax,rdx
   1aa24:	jae    1a99b <module_init_one+0x2b>
   1aa2a:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1aa31:	lea    rdx,[rip+0xc2a8]        # 26ce0 <__FUNCTION__.12581>
   1aa38:	lea    rsi,[rip+0xc171]        # 26bb0 <__FUNCTION__.13180+0x170>
   1aa3f:	xor    eax,eax
   1aa41:	mov    rcx,r12
   1aa44:	call   5b60 <xc_dom_printf@plt>
   1aa49:	mov    eax,0xffffffff
   1aa4e:	jmp    1a99d <module_init_one+0x2d>
   1aa53:	mov    eax,0xffffffff
   1aa58:	jmp    1a99d <module_init_one+0x2d>
   1aa5d:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1aa64:	lea    rdx,[rip+0xc275]        # 26ce0 <__FUNCTION__.12581>
   1aa6b:	lea    rsi,[rip+0xc0d6]        # 26b48 <__FUNCTION__.13180+0x108>
   1aa72:	call   5b60 <xc_dom_printf@plt>
   1aa77:	mov    eax,0xffffffff
   1aa7c:	jmp    1a99d <module_init_one+0x2d>
   1aa81:	call   5b80 <__stack_chk_fail@plt>
   1aa86:	lea    rcx,[rip+0xc243]        # 26cd0 <__PRETTY_FUNCTION__.12582>
   1aa8d:	lea    rsi,[rip+0xc171]        # 26c05 <__FUNCTION__.13180+0x1c5>
   1aa94:	lea    rdi,[rip+0xc0dd]        # 26b78 <__FUNCTION__.13180+0x138>
   1aa9b:	mov    edx,0x99
   1aaa0:	call   5c70 <__assert_fail@plt>
   1aaa5:	nop
   1aaa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001aab0 <xc_dom_load_hvm_kernel>:
   1aab0:	push   r15
   1aab2:	push   r14
   1aab4:	mov    esi,0x18
   1aab9:	push   r13
   1aabb:	push   r12
   1aabd:	mov    r14,rdi
   1aac0:	push   rbp
   1aac1:	push   rbx
   1aac2:	sub    rsp,0x8
   1aac6:	mov    rbp,QWORD PTR [rdi+0x8e8]
   1aacd:	mov    rax,QWORD PTR [rbp+0x50]
   1aad1:	mov    rbx,QWORD PTR [rbp+0x48]
   1aad5:	lea    r15,[rax+0xfff]
   1aadc:	sub    r15,rbx
   1aadf:	mov    r13,r15
   1aae2:	shr    r13,0xc
   1aae6:	mov    rdi,r13
   1aae9:	call   5de0 <calloc@plt>
   1aaee:	test   rax,rax
   1aaf1:	je     1accf <xc_dom_load_hvm_kernel+0x21f>
   1aaf7:	test   r13,r13
   1aafa:	mov    r12,rax
   1aafd:	je     1ab2c <xc_dom_load_hvm_kernel+0x7c>
   1aaff:	lea    rcx,[rax+0x8]
   1ab03:	xor    eax,eax
   1ab05:	jmp    1ab14 <xc_dom_load_hvm_kernel+0x64>
   1ab07:	nop    WORD PTR [rax+rax*1+0x0]
   1ab10:	mov    rbx,QWORD PTR [rbp+0x48]
   1ab14:	shr    rbx,0xc
   1ab18:	add    rcx,0x18
   1ab1c:	add    rbx,rax
   1ab1f:	add    rax,0x1
   1ab23:	mov    QWORD PTR [rcx-0x18],rbx
   1ab27:	cmp    rax,r13
   1ab2a:	jne    1ab10 <xc_dom_load_hvm_kernel+0x60>
   1ab2c:	sub    rsp,0x8
   1ab30:	mov    esi,DWORD PTR [r14+0x4d0]
   1ab37:	mov    rdi,QWORD PTR [r14+0x4c8]
   1ab3e:	push   r13
   1ab40:	mov    rdx,r15
   1ab43:	mov    ecx,0x3
   1ab48:	and    rdx,0xfffffffffffff000
   1ab4f:	mov    r9,r12
   1ab52:	mov    r8d,0x1000
   1ab58:	call   6580 <xc_map_foreign_ranges@plt>
   1ab5d:	test   rax,rax
   1ab60:	mov    QWORD PTR [rbp+0x38],rax
   1ab64:	pop    rdx
   1ab65:	pop    rcx
   1ab66:	je     1ac70 <xc_dom_load_hvm_kernel+0x1c0>
   1ab6c:	mov    rax,QWORD PTR [r14+0x918]
   1ab73:	mov    rdi,rbp
   1ab76:	mov    ecx,DWORD PTR [rax+0x60]
   1ab79:	shl    r13,cl
   1ab7c:	mov    QWORD PTR [rbp+0x40],r13
   1ab80:	call   6460 <elf_load_binary@plt>
   1ab85:	test   eax,eax
   1ab87:	mov    ebx,eax
   1ab89:	js     1ac40 <xc_dom_load_hvm_kernel+0x190>
   1ab8f:	mov    rsi,QWORD PTR [rbp+0x40]
   1ab93:	mov    rdi,QWORD PTR [rbp+0x38]
   1ab97:	call   61b0 <munmap@plt>
   1ab9c:	lea    rsi,[r14+0x968]
   1aba3:	lea    rdx,[rip+0xc06e]        # 26c18 <__FUNCTION__.13180+0x1d8>
   1abaa:	mov    rdi,r14
   1abad:	call   1a970 <module_init_one>
   1abb2:	test   eax,eax
   1abb4:	jne    1ac91 <xc_dom_load_hvm_kernel+0x1e1>
   1abba:	lea    rsi,[r14+0x980]
   1abc1:	lea    rdx,[rip+0xc067]        # 26c2f <__FUNCTION__.13180+0x1ef>
   1abc8:	mov    rdi,r14
   1abcb:	call   1a970 <module_init_one>
   1abd0:	test   eax,eax
   1abd2:	jne    1ac91 <xc_dom_load_hvm_kernel+0x1e1>
   1abd8:	lea    rsi,[r14+0x9e0]
   1abdf:	lea    rdx,[rip+0xc055]        # 26c3b <__FUNCTION__.13180+0x1fb>
   1abe6:	mov    rdi,r14
   1abe9:	call   1a970 <module_init_one>
   1abee:	test   eax,eax
   1abf0:	jne    1ac91 <xc_dom_load_hvm_kernel+0x1e1>
   1abf6:	cmp    BYTE PTR [rbp+0x10],0x2
   1abfa:	mov    rsi,QWORD PTR [rbp+0x18]
   1abfe:	je     1acb8 <xc_dom_load_hvm_kernel+0x208>
   1ac04:	mov    ecx,0x4
   1ac09:	mov    edx,0x18
   1ac0e:	mov    rdi,rbp
   1ac11:	call   6140 <elf_access_unsigned@plt>
   1ac16:	mov    DWORD PTR [r14+0x328],eax
   1ac1d:	mov    rdi,r12
   1ac20:	xor    ebx,ebx
   1ac22:	call   5900 <free@plt>
   1ac27:	add    rsp,0x8
   1ac2b:	mov    eax,ebx
   1ac2d:	pop    rbx
   1ac2e:	pop    rbp
   1ac2f:	pop    r12
   1ac31:	pop    r13
   1ac33:	pop    r14
   1ac35:	pop    r15
   1ac37:	ret    
   1ac38:	nop    DWORD PTR [rax+rax*1+0x0]
   1ac40:	mov    rdi,QWORD PTR [r14+0x4c8]
   1ac47:	lea    rdx,[rip+0xc0a2]        # 26cf0 <__func__.12599>
   1ac4e:	lea    rsi,[rip+0xb6ef]        # 26344 <__FUNCTION__.12951+0x14>
   1ac55:	xor    eax,eax
   1ac57:	call   5b60 <xc_dom_printf@plt>
   1ac5c:	mov    rdi,r12
   1ac5f:	call   5900 <free@plt>
   1ac64:	jmp    1ac27 <xc_dom_load_hvm_kernel+0x177>
   1ac66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ac70:	mov    rdi,QWORD PTR [r14+0x4c8]
   1ac77:	lea    rdx,[rip+0xc072]        # 26cf0 <__func__.12599>
   1ac7e:	lea    rsi,[rip+0xbf5b]        # 26be0 <__FUNCTION__.13180+0x1a0>
   1ac85:	mov    ebx,0xfffffff2
   1ac8a:	call   5b60 <xc_dom_printf@plt>
   1ac8f:	jmp    1ac5c <xc_dom_load_hvm_kernel+0x1ac>
   1ac91:	mov    rdi,QWORD PTR [r14+0x4c8]
   1ac98:	lea    rdx,[rip+0xc051]        # 26cf0 <__func__.12599>
   1ac9f:	lea    rsi,[rip+0xbfa3]        # 26c49 <__FUNCTION__.13180+0x209>
   1aca6:	xor    eax,eax
   1aca8:	mov    ebx,0xffffffff
   1acad:	call   5b60 <xc_dom_printf@plt>
   1acb2:	jmp    1ac5c <xc_dom_load_hvm_kernel+0x1ac>
   1acb4:	nop    DWORD PTR [rax+0x0]
   1acb8:	mov    ecx,0x8
   1acbd:	mov    edx,0x18
   1acc2:	mov    rdi,rbp
   1acc5:	call   6140 <elf_access_unsigned@plt>
   1acca:	jmp    1ac16 <xc_dom_load_hvm_kernel+0x166>
   1accf:	mov    ebx,0xfffffff4
   1acd4:	jmp    1ac27 <xc_dom_load_hvm_kernel+0x177>
   1acd9:	nop    DWORD PTR [rax+0x0]

000000000001ace0 <check_elf_kernel>:
   1ace0:	push   rbp
   1ace1:	push   rbx
   1ace2:	mov    rbx,rdi
   1ace5:	mov    ebp,esi
   1ace7:	sub    rsp,0x8
   1aceb:	mov    rdi,QWORD PTR [rdi]
   1acee:	test   rdi,rdi
   1acf1:	je     1ad18 <check_elf_kernel+0x38>
   1acf3:	mov    rsi,QWORD PTR [rbx+0x8]
   1acf7:	call   6120 <elf_is_elfbinary@plt>
   1acfc:	mov    edx,eax
   1acfe:	xor    eax,eax
   1ad00:	test   dl,dl
   1ad02:	jne    1ad0e <check_elf_kernel+0x2e>
   1ad04:	test   bpl,bpl
   1ad07:	jne    1ad60 <check_elf_kernel+0x80>
   1ad09:	mov    eax,0xffffffea
   1ad0e:	add    rsp,0x8
   1ad12:	pop    rbx
   1ad13:	pop    rbp
   1ad14:	ret    
   1ad15:	nop    DWORD PTR [rax]
   1ad18:	test   sil,sil
   1ad1b:	je     1ad09 <check_elf_kernel+0x29>
   1ad1d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ad24:	lea    r9,[rip+0xbf65]        # 26c90 <__func__.12561>
   1ad2b:	lea    r8,[rip+0xb630]        # 26362 <__FUNCTION__.12951+0x32>
   1ad32:	lea    rsi,[rip+0xbecc]        # 26c05 <__FUNCTION__.13180+0x1c5>
   1ad39:	xor    eax,eax
   1ad3b:	mov    ecx,0x1
   1ad40:	mov    edx,0x29
   1ad45:	call   60a0 <xc_dom_panic_func@plt>
   1ad4a:	add    rsp,0x8
   1ad4e:	mov    eax,0xffffffea
   1ad53:	pop    rbx
   1ad54:	pop    rbp
   1ad55:	ret    
   1ad56:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ad60:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ad67:	lea    r9,[rip+0xbf22]        # 26c90 <__func__.12561>
   1ad6e:	lea    r8,[rip+0xb71b]        # 26490 <__FUNCTION__.12951+0x160>
   1ad75:	lea    rsi,[rip+0xbe89]        # 26c05 <__FUNCTION__.13180+0x1c5>
   1ad7c:	mov    ecx,0x2
   1ad81:	mov    edx,0x31
   1ad86:	call   60a0 <xc_dom_panic_func@plt>
   1ad8b:	jmp    1ad09 <check_elf_kernel+0x29>

000000000001ad90 <xc_dom_parse_hvm_kernel>:
   1ad90:	push   r12
   1ad92:	push   rbp
   1ad93:	mov    esi,0x1
   1ad98:	push   rbx
   1ad99:	mov    rbx,rdi
   1ad9c:	call   1ace0 <check_elf_kernel>
   1ada1:	test   eax,eax
   1ada3:	mov    ebp,eax
   1ada5:	je     1adb0 <xc_dom_parse_hvm_kernel+0x20>
   1ada7:	mov    eax,ebp
   1ada9:	pop    rbx
   1adaa:	pop    rbp
   1adab:	pop    r12
   1adad:	ret    
   1adae:	xchg   ax,ax
   1adb0:	mov    esi,0xa0
   1adb5:	mov    rdi,rbx
   1adb8:	call   5a60 <xc_dom_malloc@plt>
   1adbd:	test   rax,rax
   1adc0:	mov    r12,rax
   1adc3:	je     1aee3 <xc_dom_parse_hvm_kernel+0x153>
   1adc9:	mov    rdx,QWORD PTR [rbx+0x8]
   1adcd:	mov    rsi,QWORD PTR [rbx]
   1add0:	mov    rdi,rax
   1add3:	mov    QWORD PTR [rbx+0x8e8],rax
   1adda:	call   5b20 <elf_init@plt>
   1addf:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ade6:	mov    ebp,eax
   1ade8:	mov    edx,0x1
   1aded:	mov    rsi,r12
   1adf0:	call   5d60 <xc_elf_set_logfile@plt>
   1adf5:	test   ebp,ebp
   1adf7:	jne    1ae78 <xc_dom_parse_hvm_kernel+0xe8>
   1adf9:	cmp    BYTE PTR [r12+0x10],0x1
   1adff:	jne    1aeac <xc_dom_parse_hvm_kernel+0x11c>
   1ae05:	mov    rdi,r12
   1ae08:	call   5ed0 <elf_parse_binary@plt>
   1ae0d:	mov    rax,QWORD PTR [r12+0x48]
   1ae12:	mov    rdi,r12
   1ae15:	mov    QWORD PTR [rbx+0x348],rax
   1ae1c:	mov    rax,QWORD PTR [r12+0x50]
   1ae21:	mov    QWORD PTR [rbx+0x350],rax
   1ae28:	lea    rax,[rip+0xb58f]        # 263be <__FUNCTION__.12951+0x8e>
   1ae2f:	mov    QWORD PTR [rbx+0x340],rax
   1ae36:	call   58a0 <elf_check_broken@plt>
   1ae3b:	test   rax,rax
   1ae3e:	je     1ada7 <xc_dom_parse_hvm_kernel+0x17>
   1ae44:	mov    rdi,r12
   1ae47:	call   58a0 <elf_check_broken@plt>
   1ae4c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ae53:	lea    rdx,[rip+0xbe56]        # 26cb0 <__func__.12572>
   1ae5a:	lea    rsi,[rip+0xb5d4]        # 26435 <__FUNCTION__.12951+0x105>
   1ae61:	mov    rcx,rax
   1ae64:	xor    eax,eax
   1ae66:	call   5b60 <xc_dom_printf@plt>
   1ae6b:	mov    eax,ebp
   1ae6d:	pop    rbx
   1ae6e:	pop    rbp
   1ae6f:	pop    r12
   1ae71:	ret    
   1ae72:	nop    WORD PTR [rax+rax*1+0x0]
   1ae78:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ae7f:	lea    r9,[rip+0xbe2a]        # 26cb0 <__func__.12572>
   1ae86:	lea    r8,[rip+0xb540]        # 263cd <__FUNCTION__.12951+0x9d>
   1ae8d:	lea    rsi,[rip+0xbd71]        # 26c05 <__FUNCTION__.13180+0x1c5>
   1ae94:	xor    eax,eax
   1ae96:	mov    ecx,0x2
   1ae9b:	mov    edx,0x6a
   1aea0:	call   60a0 <xc_dom_panic_func@plt>
   1aea5:	mov    eax,ebp
   1aea7:	pop    rbx
   1aea8:	pop    rbp
   1aea9:	pop    r12
   1aeab:	ret    
   1aeac:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1aeb3:	lea    r9,[rip+0xbdf6]        # 26cb0 <__func__.12572>
   1aeba:	lea    r8,[rip+0xbda4]        # 26c65 <__FUNCTION__.13180+0x225>
   1aec1:	lea    rsi,[rip+0xbd3d]        # 26c05 <__FUNCTION__.13180+0x1c5>
   1aec8:	mov    ecx,0x2
   1aecd:	mov    edx,0x71
   1aed2:	xor    eax,eax
   1aed4:	mov    ebp,0xffffffea
   1aed9:	call   60a0 <xc_dom_panic_func@plt>
   1aede:	jmp    1ada7 <xc_dom_parse_hvm_kernel+0x17>
   1aee3:	mov    ebp,0xffffffff
   1aee8:	jmp    1ada7 <xc_dom_parse_hvm_kernel+0x17>
   1aeed:	nop    DWORD PTR [rax]

000000000001aef0 <xc_dom_probe_hvm_kernel>:
   1aef0:	push   r12
   1aef2:	push   rbp
   1aef3:	push   rbx
   1aef4:	mov    ebx,0xffffffea
   1aef9:	sub    rsp,0xb0
   1af00:	mov    rax,QWORD PTR fs:0x28
   1af09:	mov    QWORD PTR [rsp+0xa8],rax
   1af11:	xor    eax,eax
   1af13:	cmp    DWORD PTR [rdi+0x928],0x1
   1af1a:	jne    1af2c <xc_dom_probe_hvm_kernel+0x3c>
   1af1c:	xor    esi,esi
   1af1e:	mov    rbp,rdi
   1af21:	call   1ace0 <check_elf_kernel>
   1af26:	test   eax,eax
   1af28:	mov    ebx,eax
   1af2a:	je     1af50 <xc_dom_probe_hvm_kernel+0x60>
   1af2c:	mov    rcx,QWORD PTR [rsp+0xa8]
   1af34:	xor    rcx,QWORD PTR fs:0x28
   1af3d:	mov    eax,ebx
   1af3f:	jne    1af8c <xc_dom_probe_hvm_kernel+0x9c>
   1af41:	add    rsp,0xb0
   1af48:	pop    rbx
   1af49:	pop    rbp
   1af4a:	pop    r12
   1af4c:	ret    
   1af4d:	nop    DWORD PTR [rax]
   1af50:	mov    rdx,QWORD PTR [rbp+0x8]
   1af54:	mov    rsi,QWORD PTR [rbp+0x0]
   1af58:	mov    r12,rsp
   1af5b:	mov    rdi,r12
   1af5e:	call   5b20 <elf_init@plt>
   1af63:	test   eax,eax
   1af65:	mov    ebx,eax
   1af67:	jne    1af2c <xc_dom_probe_hvm_kernel+0x3c>
   1af69:	mov    rdi,r12
   1af6c:	call   5ed0 <elf_parse_binary@plt>
   1af71:	lea    rsi,[rbp+0xc8]
   1af78:	mov    rdi,r12
   1af7b:	call   5b30 <elf_xen_parse@plt>
   1af80:	test   eax,eax
   1af82:	mov    eax,0xffffffea
   1af87:	cmove  ebx,eax
   1af8a:	jmp    1af2c <xc_dom_probe_hvm_kernel+0x3c>
   1af8c:	call   5b80 <__stack_chk_fail@plt>
   1af91:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1af9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001afa0 <find_table.isra.0>:
   1afa0:	cmp    rsi,0x1f
   1afa4:	jbe    1aff0 <find_table.isra.0+0x50>
   1afa6:	lea    rdx,[rdi+0x2000]
   1afad:	lea    rax,[rdi+rsi*1-0x20]
   1afb2:	cmp    rsi,0x2021
   1afb9:	cmovae rax,rdx
   1afbd:	cmp    rax,rdi
   1afc0:	ja     1afd1 <find_table.isra.0+0x31>
   1afc2:	jmp    1aff0 <find_table.isra.0+0x50>
   1afc4:	nop    DWORD PTR [rax+0x0]
   1afc8:	add    rdi,0x4
   1afcc:	cmp    rdi,rax
   1afcf:	jae    1aff0 <find_table.isra.0+0x50>
   1afd1:	cmp    DWORD PTR [rdi],0x336ec578
   1afd7:	jne    1afc8 <find_table.isra.0+0x28>
   1afd9:	mov    edx,DWORD PTR [rdi+0x8]
   1afdc:	add    edx,DWORD PTR [rdi+0x4]
   1afdf:	cmp    edx,0xcc913a88
   1afe5:	jne    1afc8 <find_table.isra.0+0x28>
   1afe7:	mov    rax,rdi
   1afea:	ret    
   1afeb:	nop    DWORD PTR [rax+rax*1+0x0]
   1aff0:	xor    eax,eax
   1aff2:	ret    
   1aff3:	nop    DWORD PTR [rax]
   1aff6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001b000 <xc_dom_probe_bin_kernel>:
   1b000:	mov    rsi,QWORD PTR [rdi+0x8]
   1b004:	mov    rdi,QWORD PTR [rdi]
   1b007:	call   1afa0 <find_table.isra.0>
   1b00c:	cmp    rax,0x1
   1b010:	sbb    eax,eax
   1b012:	and    eax,0xffffffea
   1b015:	ret    
   1b016:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001b020 <xc_dom_load_bin_kernel>:
   1b020:	push   r15
   1b022:	push   r14
   1b024:	push   r13
   1b026:	push   r12
   1b028:	push   rbp
   1b029:	push   rbx
   1b02a:	mov    rbp,rdi
   1b02d:	sub    rsp,0x28
   1b031:	mov    rcx,QWORD PTR [rdi]
   1b034:	mov    r14,QWORD PTR [rdi+0x8]
   1b038:	mov    rax,QWORD PTR fs:0x28
   1b041:	mov    QWORD PTR [rsp+0x18],rax
   1b046:	xor    eax,eax
   1b048:	mov    rsi,r14
   1b04b:	mov    rdi,rcx
   1b04e:	mov    QWORD PTR [rsp+0x8],rcx
   1b053:	call   1afa0 <find_table.isra.0>
   1b058:	test   rax,rax
   1b05b:	je     1b20b <xc_dom_load_bin_kernel+0x1eb>
   1b061:	mov    esi,DWORD PTR [rax+0xc]
   1b064:	mov    rdx,rax
   1b067:	mov    r12d,DWORD PTR [rax+0x18]
   1b06b:	sub    rdx,rcx
   1b06e:	mov    ebx,DWORD PTR [rax+0x14]
   1b071:	mov    eax,DWORD PTR [rax+0x10]
   1b074:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b07b:	sub    esi,edx
   1b07d:	lea    rdx,[rip+0xbf2c]        # 26fb0 <__FUNCTION__.12544>
   1b084:	lea    ecx,[rsi+r14*1]
   1b088:	test   ebx,ebx
   1b08a:	mov    r13d,eax
   1b08d:	cmove  ebx,ecx
   1b090:	mov    ecx,r12d
   1b093:	sub    ecx,ebx
   1b095:	test   r12d,r12d
   1b098:	cmovne r12,rcx
   1b09c:	sub    r13d,esi
   1b09f:	lea    rsi,[rip+0xbc61]        # 26d07 <__func__.12599+0x17>
   1b0a6:	sub    ebx,eax
   1b0a8:	xor    eax,eax
   1b0aa:	call   5b60 <xc_dom_printf@plt>
   1b0af:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b0b6:	lea    rsi,[rip+0xbc5f]        # 26d1c <__func__.12599+0x2c>
   1b0bd:	xor    eax,eax
   1b0bf:	mov    edx,r13d
   1b0c2:	call   5b60 <xc_dom_printf@plt>
   1b0c7:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b0ce:	lea    rsi,[rip+0xbc59]        # 26d2e <__func__.12599+0x3e>
   1b0d5:	xor    eax,eax
   1b0d7:	mov    edx,ebx
   1b0d9:	call   5b60 <xc_dom_printf@plt>
   1b0de:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b0e5:	lea    rsi,[rip+0xbc54]        # 26d40 <__func__.12599+0x50>
   1b0ec:	xor    eax,eax
   1b0ee:	mov    edx,r12d
   1b0f1:	call   5b60 <xc_dom_printf@plt>
   1b0f6:	mov    rdx,QWORD PTR [rbp+0x918]
   1b0fd:	mov    rax,QWORD PTR [rbp+0x348]
   1b104:	mov    rdi,rbp
   1b107:	sub    rax,QWORD PTR [rbp+0x2f0]
   1b10e:	mov    ecx,DWORD PTR [rdx+0x60]
   1b111:	mov    edx,0x1
   1b116:	shl    rdx,cl
   1b119:	lea    rcx,[rsp+0x10]
   1b11e:	mov    esi,edx
   1b120:	xor    edx,edx
   1b122:	div    rsi
   1b125:	mov    r15,rdx
   1b128:	mov    rsi,rax
   1b12b:	xor    edx,edx
   1b12d:	call   5ce0 <xc_dom_pfn_to_ptr_retcount@plt>
   1b132:	test   rax,rax
   1b135:	je     1b218 <xc_dom_load_bin_kernel+0x1f8>
   1b13b:	mov    rdx,QWORD PTR [rbp+0x918]
   1b142:	mov    ecx,DWORD PTR [rdx+0x60]
   1b145:	mov    rdx,QWORD PTR [rsp+0x10]
   1b14a:	shl    rdx,cl
   1b14d:	sub    rdx,r15
   1b150:	add    r15,rax
   1b153:	je     1b218 <xc_dom_load_bin_kernel+0x1f8>
   1b159:	cmp    rbx,rdx
   1b15c:	ja     1b1e8 <xc_dom_load_bin_kernel+0x1c8>
   1b162:	sub    rdx,rbx
   1b165:	cmp    rdx,r12
   1b168:	jb     1b1e8 <xc_dom_load_bin_kernel+0x1c8>
   1b16a:	cmp    r13,r14
   1b16d:	ja     1b1c0 <xc_dom_load_bin_kernel+0x1a0>
   1b16f:	mov    r8,r14
   1b172:	sub    r8,r13
   1b175:	cmp    rbx,r8
   1b178:	ja     1b1c0 <xc_dom_load_bin_kernel+0x1a0>
   1b17a:	mov    rsi,QWORD PTR [rsp+0x8]
   1b17f:	mov    rdx,rbx
   1b182:	mov    rdi,r15
   1b185:	add    rsi,r13
   1b188:	call   5eb0 <memcpy@plt>
   1b18d:	lea    rdi,[r15+rbx*1]
   1b191:	mov    rdx,r12
   1b194:	xor    esi,esi
   1b196:	call   5ca0 <memset@plt>
   1b19b:	xor    eax,eax
   1b19d:	mov    rbx,QWORD PTR [rsp+0x18]
   1b1a2:	xor    rbx,QWORD PTR fs:0x28
   1b1ab:	jne    1b23e <xc_dom_load_bin_kernel+0x21e>
   1b1b1:	add    rsp,0x28
   1b1b5:	pop    rbx
   1b1b6:	pop    rbp
   1b1b7:	pop    r12
   1b1b9:	pop    r13
   1b1bb:	pop    r14
   1b1bd:	pop    r15
   1b1bf:	ret    
   1b1c0:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b1c7:	lea    rdx,[rip+0xbde2]        # 26fb0 <__FUNCTION__.12544>
   1b1ce:	lea    rsi,[rip+0xbd43]        # 26f18 <__func__.12599+0x228>
   1b1d5:	xor    eax,eax
   1b1d7:	call   5b60 <xc_dom_printf@plt>
   1b1dc:	mov    eax,0xffffffea
   1b1e1:	jmp    1b19d <xc_dom_load_bin_kernel+0x17d>
   1b1e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1b1e8:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b1ef:	lea    rdx,[rip+0xbdba]        # 26fb0 <__FUNCTION__.12544>
   1b1f6:	lea    rsi,[rip+0xbceb]        # 26ee8 <__func__.12599+0x1f8>
   1b1fd:	xor    eax,eax
   1b1ff:	call   5b60 <xc_dom_printf@plt>
   1b204:	mov    eax,0xffffffea
   1b209:	jmp    1b19d <xc_dom_load_bin_kernel+0x17d>
   1b20b:	mov    eax,0xffffffea
   1b210:	jmp    1b19d <xc_dom_load_bin_kernel+0x17d>
   1b212:	nop    WORD PTR [rax+rax*1+0x0]
   1b218:	mov    rdi,QWORD PTR [rbp+0x4c8]
   1b21f:	lea    rdx,[rip+0xbd8a]        # 26fb0 <__FUNCTION__.12544>
   1b226:	lea    rsi,[rip+0xbc7b]        # 26ea8 <__func__.12599+0x1b8>
   1b22d:	xor    eax,eax
   1b22f:	call   5b60 <xc_dom_printf@plt>
   1b234:	mov    eax,0xffffffea
   1b239:	jmp    1b19d <xc_dom_load_bin_kernel+0x17d>
   1b23e:	call   5b80 <__stack_chk_fail@plt>
   1b243:	nop    DWORD PTR [rax]
   1b246:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001b250 <xc_dom_parse_bin_kernel>:
   1b250:	push   r15
   1b252:	push   r14
   1b254:	push   r13
   1b256:	push   r12
   1b258:	push   rbp
   1b259:	push   rbx
   1b25a:	mov    rbx,rdi
   1b25d:	sub    rsp,0x18
   1b261:	mov    r14,QWORD PTR [rdi+0x8]
   1b265:	mov    r12,QWORD PTR [rdi]
   1b268:	mov    rsi,r14
   1b26b:	mov    rdi,r12
   1b26e:	call   1afa0 <find_table.isra.0>
   1b273:	test   rax,rax
   1b276:	je     1b5f0 <xc_dom_parse_bin_kernel+0x3a0>
   1b27c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b283:	lea    rdx,[rip+0xbd06]        # 26f90 <__FUNCTION__.12524>
   1b28a:	lea    rsi,[rip+0xbac1]        # 26d52 <__func__.12599+0x62>
   1b291:	mov    rbp,rax
   1b294:	xor    eax,eax
   1b296:	call   5b60 <xc_dom_printf@plt>
   1b29b:	mov    edx,DWORD PTR [rbp+0x4]
   1b29e:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b2a5:	lea    rsi,[rip+0xbac2]        # 26d6e <__func__.12599+0x7e>
   1b2ac:	xor    eax,eax
   1b2ae:	call   5b60 <xc_dom_printf@plt>
   1b2b3:	mov    edx,DWORD PTR [rbp+0xc]
   1b2b6:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b2bd:	lea    rsi,[rip+0xbac0]        # 26d84 <__func__.12599+0x94>
   1b2c4:	xor    eax,eax
   1b2c6:	call   5b60 <xc_dom_printf@plt>
   1b2cb:	mov    edx,DWORD PTR [rbp+0x10]
   1b2ce:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b2d5:	lea    rsi,[rip+0xbabe]        # 26d9a <__func__.12599+0xaa>
   1b2dc:	xor    eax,eax
   1b2de:	call   5b60 <xc_dom_printf@plt>
   1b2e3:	mov    edx,DWORD PTR [rbp+0x14]
   1b2e6:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b2ed:	lea    rsi,[rip+0xbabc]        # 26db0 <__func__.12599+0xc0>
   1b2f4:	xor    eax,eax
   1b2f6:	call   5b60 <xc_dom_printf@plt>
   1b2fb:	mov    edx,DWORD PTR [rbp+0x18]
   1b2fe:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b305:	lea    rsi,[rip+0xbaba]        # 26dc6 <__func__.12599+0xd6>
   1b30c:	xor    eax,eax
   1b30e:	call   5b60 <xc_dom_printf@plt>
   1b313:	mov    edx,DWORD PTR [rbp+0x1c]
   1b316:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b31d:	lea    rsi,[rip+0xbab8]        # 26ddc <__func__.12599+0xec>
   1b324:	xor    eax,eax
   1b326:	call   5b60 <xc_dom_printf@plt>
   1b32b:	mov    eax,DWORD PTR [rbp+0x4]
   1b32e:	and    eax,0xffff3ffe
   1b333:	cmp    eax,0x10000
   1b338:	jne    1b5b0 <xc_dom_parse_bin_kernel+0x360>
   1b33e:	mov    edx,DWORD PTR [rbp+0xc]
   1b341:	mov    eax,DWORD PTR [rbp+0x10]
   1b344:	cmp    edx,eax
   1b346:	jb     1b578 <xc_dom_parse_bin_kernel+0x328>
   1b34c:	mov    rcx,rbp
   1b34f:	mov    esi,edx
   1b351:	sub    rcx,r12
   1b354:	sub    esi,eax
   1b356:	cmp    rcx,rsi
   1b359:	jl     1b578 <xc_dom_parse_bin_kernel+0x328>
   1b35f:	sub    edx,ecx
   1b361:	mov    r13d,DWORD PTR [rbp+0x14]
   1b365:	mov    r15d,DWORD PTR [rbp+0x18]
   1b369:	mov    r8d,edx
   1b36c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b373:	lea    rdx,[rip+0xbc16]        # 26f90 <__FUNCTION__.12524>
   1b37a:	lea    eax,[r8+r14*1]
   1b37e:	mov    r12,r8
   1b381:	mov    QWORD PTR [rsp+0x8],r8
   1b386:	test   r13d,r13d
   1b389:	lea    rsi,[rip+0xba8e]        # 26e1e <__func__.12599+0x12e>
   1b390:	cmove  r13d,eax
   1b394:	lea    rax,[r14+r8*1]
   1b398:	mov    r14d,r13d
   1b39b:	mov    QWORD PTR [rsp],rax
   1b39f:	xor    eax,eax
   1b3a1:	test   r15d,r15d
   1b3a4:	jne    1b470 <xc_dom_parse_bin_kernel+0x220>
   1b3aa:	call   5b60 <xc_dom_printf@plt>
   1b3af:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b3b6:	lea    rsi,[rip+0xba7a]        # 26e37 <__func__.12599+0x147>
   1b3bd:	xor    eax,eax
   1b3bf:	mov    edx,r12d
   1b3c2:	call   5b60 <xc_dom_printf@plt>
   1b3c7:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b3ce:	lea    rsi,[rip+0xb9db]        # 26db0 <__func__.12599+0xc0>
   1b3d5:	xor    eax,eax
   1b3d7:	mov    edx,r13d
   1b3da:	call   5b60 <xc_dom_printf@plt>
   1b3df:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b3e6:	lea    rsi,[rip+0xb9d9]        # 26dc6 <__func__.12599+0xd6>
   1b3ed:	xor    eax,eax
   1b3ef:	mov    edx,r13d
   1b3f2:	call   5b60 <xc_dom_printf@plt>
   1b3f7:	cmp    r14,QWORD PTR [rsp]
   1b3fb:	mov    r8,QWORD PTR [rsp+0x8]
   1b400:	ja     1b5fa <xc_dom_parse_bin_kernel+0x3aa>
   1b406:	mov    eax,DWORD PTR [rbp+0x10]
   1b409:	mov    QWORD PTR [rbx+0x350],r14
   1b410:	mov    QWORD PTR [rbx+0x2f0],r8
   1b417:	mov    QWORD PTR [rbx+0x348],rax
   1b41e:	mov    eax,DWORD PTR [rbp+0x1c]
   1b421:	mov    QWORD PTR [rbx+0x2f8],rax
   1b428:	mov    eax,DWORD PTR [rbp+0x4]
   1b42b:	shr    eax,0xe
   1b42e:	and    eax,0x3
   1b431:	cmp    eax,0x2
   1b434:	je     1b4f8 <xc_dom_parse_bin_kernel+0x2a8>
   1b43a:	cmp    eax,0x3
   1b43d:	je     1b510 <xc_dom_parse_bin_kernel+0x2c0>
   1b443:	cmp    eax,0x1
   1b446:	je     1b4e0 <xc_dom_parse_bin_kernel+0x290>
   1b44c:	lea    rax,[rip+0xaf5c]        # 263af <__FUNCTION__.12951+0x7f>
   1b453:	xor    ebp,ebp
   1b455:	mov    QWORD PTR [rbx+0x340],rax
   1b45c:	add    rsp,0x18
   1b460:	mov    eax,ebp
   1b462:	pop    rbx
   1b463:	pop    rbp
   1b464:	pop    r12
   1b466:	pop    r13
   1b468:	pop    r14
   1b46a:	pop    r15
   1b46c:	ret    
   1b46d:	nop    DWORD PTR [rax]
   1b470:	call   5b60 <xc_dom_printf@plt>
   1b475:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b47c:	lea    rsi,[rip+0xb9b4]        # 26e37 <__func__.12599+0x147>
   1b483:	xor    eax,eax
   1b485:	mov    edx,r12d
   1b488:	call   5b60 <xc_dom_printf@plt>
   1b48d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b494:	lea    rsi,[rip+0xb915]        # 26db0 <__func__.12599+0xc0>
   1b49b:	xor    eax,eax
   1b49d:	mov    edx,r13d
   1b4a0:	call   5b60 <xc_dom_printf@plt>
   1b4a5:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b4ac:	lea    rsi,[rip+0xb913]        # 26dc6 <__func__.12599+0xd6>
   1b4b3:	xor    eax,eax
   1b4b5:	mov    edx,r15d
   1b4b8:	call   5b60 <xc_dom_printf@plt>
   1b4bd:	cmp    r14,QWORD PTR [rsp]
   1b4c1:	mov    r8,QWORD PTR [rsp+0x8]
   1b4c6:	ja     1b5fa <xc_dom_parse_bin_kernel+0x3aa>
   1b4cc:	cmp    r13d,r15d
   1b4cf:	ja     1b631 <xc_dom_parse_bin_kernel+0x3e1>
   1b4d5:	mov    r14d,r15d
   1b4d8:	jmp    1b406 <xc_dom_parse_bin_kernel+0x1b6>
   1b4dd:	nop    DWORD PTR [rax]
   1b4e0:	lea    rax,[rip+0xaeb8]        # 2639f <__FUNCTION__.12951+0x6f>
   1b4e7:	xor    ebp,ebp
   1b4e9:	mov    QWORD PTR [rbx+0x340],rax
   1b4f0:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b4f5:	nop    DWORD PTR [rax]
   1b4f8:	lea    rax,[rip+0xae91]        # 26390 <__FUNCTION__.12951+0x60>
   1b4ff:	xor    ebp,ebp
   1b501:	mov    QWORD PTR [rbx+0x340],rax
   1b508:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b50d:	nop    DWORD PTR [rax]
   1b510:	lea    rax,[rip+0xae98]        # 263af <__FUNCTION__.12951+0x7f>
   1b517:	lea    rdi,[rbx+0x4dc]
   1b51e:	lea    rsi,[rip+0xae7a]        # 2639f <__FUNCTION__.12951+0x6f>
   1b525:	xor    ebp,ebp
   1b527:	mov    QWORD PTR [rbx+0x340],rax
   1b52e:	call   65c0 <strstr@plt>
   1b533:	test   rax,rax
   1b536:	je     1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b53c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b543:	lea    rdx,[rip+0xba46]        # 26f90 <__FUNCTION__.12524>
   1b54a:	lea    rsi,[rip+0xb931]        # 26e82 <__func__.12599+0x192>
   1b551:	xor    eax,eax
   1b553:	call   5b60 <xc_dom_printf@plt>
   1b558:	lea    rax,[rip+0xae40]        # 2639f <__FUNCTION__.12951+0x6f>
   1b55f:	mov    DWORD PTR [rbx+0x2e8],0x2
   1b569:	mov    QWORD PTR [rbx+0x340],rax
   1b570:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b575:	nop    DWORD PTR [rax]
   1b578:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b57f:	lea    r9,[rip+0xba0a]        # 26f90 <__FUNCTION__.12524>
   1b586:	lea    r8,[rip+0xb878]        # 26e05 <__func__.12599+0x115>
   1b58d:	lea    rsi,[rip+0xb85e]        # 26df2 <__func__.12599+0x102>
   1b594:	mov    ecx,0x2
   1b599:	mov    edx,0xbd
   1b59e:	xor    eax,eax
   1b5a0:	mov    ebp,0xffffffea
   1b5a5:	call   60a0 <xc_dom_panic_func@plt>
   1b5aa:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b5af:	nop
   1b5b0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b5b7:	push   rax
   1b5b8:	lea    r9,[rip+0xb9d1]        # 26f90 <__FUNCTION__.12524>
   1b5bf:	push   0x10000
   1b5c4:	lea    r8,[rip+0xb97d]        # 26f48 <__func__.12599+0x258>
   1b5cb:	lea    rsi,[rip+0xb820]        # 26df2 <__func__.12599+0x102>
   1b5d2:	mov    edx,0xb3
   1b5d7:	xor    eax,eax
   1b5d9:	mov    ecx,0x2
   1b5de:	call   60a0 <xc_dom_panic_func@plt>
   1b5e3:	mov    ebp,0xffffffea
   1b5e8:	pop    rax
   1b5e9:	pop    rdx
   1b5ea:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b5ef:	nop
   1b5f0:	mov    ebp,0xffffffea
   1b5f5:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b5fa:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b601:	lea    r9,[rip+0xb988]        # 26f90 <__FUNCTION__.12524>
   1b608:	lea    r8,[rip+0xb83e]        # 26e4d <__func__.12599+0x15d>
   1b60f:	lea    rsi,[rip+0xb7dc]        # 26df2 <__func__.12599+0x102>
   1b616:	mov    ecx,0x2
   1b61b:	mov    edx,0xcd
   1b620:	xor    eax,eax
   1b622:	mov    ebp,0xffffffea
   1b627:	call   60a0 <xc_dom_panic_func@plt>
   1b62c:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b631:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1b638:	lea    r9,[rip+0xb951]        # 26f90 <__FUNCTION__.12524>
   1b63f:	lea    r8,[rip+0xb822]        # 26e68 <__func__.12599+0x178>
   1b646:	lea    rsi,[rip+0xb7a5]        # 26df2 <__func__.12599+0x102>
   1b64d:	mov    ecx,0x2
   1b652:	mov    edx,0xd4
   1b657:	xor    eax,eax
   1b659:	mov    ebp,0xffffffea
   1b65e:	call   60a0 <xc_dom_panic_func@plt>
   1b663:	jmp    1b45c <xc_dom_parse_bin_kernel+0x20c>
   1b668:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b670 <xc_linux_build>:
   1b670:	push   r15
   1b672:	push   r14
   1b674:	mov    r15d,edx
   1b677:	push   r13
   1b679:	push   r12
   1b67b:	mov    r14d,esi
   1b67e:	push   rbp
   1b67f:	push   rbx
   1b680:	mov    r12,rdi
   1b683:	mov    rbx,r9
   1b686:	mov    rbp,rcx
   1b689:	mov    r13,r8
   1b68c:	sub    rsp,0x8
   1b690:	call   63a0 <xc_dom_loginit@plt>
   1b695:	mov    rdx,QWORD PTR [rsp+0x40]
   1b69a:	mov    rsi,rbx
   1b69d:	mov    rdi,r12
   1b6a0:	call   64d0 <xc_dom_allocate@plt>
   1b6a5:	test   rax,rax
   1b6a8:	je     1b7d0 <xc_linux_build+0x160>
   1b6ae:	mov    rsi,rbp
   1b6b1:	mov    rdi,rax
   1b6b4:	mov    rbx,rax
   1b6b7:	call   6400 <xc_dom_kernel_file@plt>
   1b6bc:	test   eax,eax
   1b6be:	mov    ebp,eax
   1b6c0:	jne    1b706 <xc_linux_build+0x96>
   1b6c2:	test   r13,r13
   1b6c5:	je     1b6d2 <xc_linux_build+0x62>
   1b6c7:	cmp    BYTE PTR [r13+0x0],0x0
   1b6cc:	jne    1b7b0 <xc_linux_build+0x140>
   1b6d2:	mov    rax,QWORD PTR [rsp+0x48]
   1b6d7:	or     QWORD PTR [rbx+0x4a8],rax
   1b6de:	mov    edx,r14d
   1b6e1:	mov    eax,DWORD PTR [rsp+0x60]
   1b6e5:	mov    rsi,r12
   1b6e8:	mov    rdi,rbx
   1b6eb:	mov    DWORD PTR [rbx+0x4b0],eax
   1b6f1:	mov    eax,DWORD PTR [rsp+0x50]
   1b6f5:	mov    DWORD PTR [rbx+0x4b4],eax
   1b6fb:	call   63f0 <xc_dom_boot_xen_init@plt>
   1b700:	test   eax,eax
   1b702:	mov    ebp,eax
   1b704:	je     1b720 <xc_linux_build+0xb0>
   1b706:	mov    rdi,rbx
   1b709:	call   5fd0 <xc_dom_release@plt>
   1b70e:	add    rsp,0x8
   1b712:	mov    eax,ebp
   1b714:	pop    rbx
   1b715:	pop    rbp
   1b716:	pop    r12
   1b718:	pop    r13
   1b71a:	pop    r14
   1b71c:	pop    r15
   1b71e:	ret    
   1b71f:	nop
   1b720:	mov    rdi,rbx
   1b723:	call   62b0 <xc_dom_parse_image@plt>
   1b728:	test   eax,eax
   1b72a:	mov    ebp,eax
   1b72c:	jne    1b706 <xc_linux_build+0x96>
   1b72e:	mov    esi,r15d
   1b731:	mov    rdi,rbx
   1b734:	call   5ec0 <xc_dom_mem_init@plt>
   1b739:	test   eax,eax
   1b73b:	mov    ebp,eax
   1b73d:	jne    1b706 <xc_linux_build+0x96>
   1b73f:	mov    rdi,rbx
   1b742:	call   5f70 <xc_dom_boot_mem_init@plt>
   1b747:	test   eax,eax
   1b749:	mov    ebp,eax
   1b74b:	jne    1b706 <xc_linux_build+0x96>
   1b74d:	mov    rdi,rbx
   1b750:	call   6490 <xc_dom_build_image@plt>
   1b755:	test   eax,eax
   1b757:	mov    ebp,eax
   1b759:	jne    1b706 <xc_linux_build+0x96>
   1b75b:	mov    rdi,rbx
   1b75e:	call   5ac0 <xc_dom_boot_image@plt>
   1b763:	test   eax,eax
   1b765:	mov    ebp,eax
   1b767:	jne    1b706 <xc_linux_build+0x96>
   1b769:	mov    rdi,rbx
   1b76c:	call   5f40 <xc_dom_gnttab_init@plt>
   1b771:	test   eax,eax
   1b773:	mov    ebp,eax
   1b775:	jne    1b706 <xc_linux_build+0x96>
   1b777:	mov    rsi,QWORD PTR [rbx+0x3f0]
   1b77e:	mov    rdi,rbx
   1b781:	call   6620 <xc_dom_p2m>
   1b786:	mov    rdx,QWORD PTR [rsp+0x68]
   1b78b:	mov    rdi,rbx
   1b78e:	mov    QWORD PTR [rdx],rax
   1b791:	mov    rsi,QWORD PTR [rbx+0x3f8]
   1b798:	call   6620 <xc_dom_p2m>
   1b79d:	mov    rdx,QWORD PTR [rsp+0x58]
   1b7a2:	mov    QWORD PTR [rdx],rax
   1b7a5:	jmp    1b706 <xc_linux_build+0x96>
   1b7aa:	nop    WORD PTR [rax+rax*1+0x0]
   1b7b0:	xor    edx,edx
   1b7b2:	mov    rsi,r13
   1b7b5:	mov    rdi,rbx
   1b7b8:	call   5e20 <xc_dom_module_file@plt>
   1b7bd:	test   eax,eax
   1b7bf:	mov    ebp,eax
   1b7c1:	jne    1b706 <xc_linux_build+0x96>
   1b7c7:	jmp    1b6d2 <xc_linux_build+0x62>
   1b7cc:	nop    DWORD PTR [rax+0x0]
   1b7d0:	mov    ebp,0xffffffff
   1b7d5:	jmp    1b70e <xc_linux_build+0x9e>
   1b7da:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b7e0 <alloc_pgtables_hvm>:
   1b7e0:	sub    rsp,0x8
   1b7e4:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1b7eb:	lea    rdx,[rip+0xc1ae]        # 279a0 <__func__.13014>
   1b7f2:	lea    rsi,[rip+0xb7ce]        # 26fc7 <__FUNCTION__.12544+0x17>
   1b7f9:	xor    eax,eax
   1b7fb:	call   5b60 <xc_dom_printf@plt>
   1b800:	xor    eax,eax
   1b802:	add    rsp,0x8
   1b806:	ret    
   1b807:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b810 <meminit_hvm>:
   1b810:	push   rbp
   1b811:	mov    rbp,rsp
   1b814:	push   r15
   1b816:	push   r14
   1b818:	push   r13
   1b81a:	push   r12
   1b81c:	mov    r13,rdi
   1b81f:	push   rbx
   1b820:	sub    rsp,0xb8
   1b827:	mov    ecx,DWORD PTR [rdi+0x4d4]
   1b82d:	mov    rsi,QWORD PTR [rdi+0x930]
   1b834:	mov    rax,QWORD PTR fs:0x28
   1b83d:	mov    QWORD PTR [rbp-0x38],rax
   1b841:	xor    eax,eax
   1b843:	mov    rax,QWORD PTR [rdi+0x468]
   1b84a:	mov    DWORD PTR [rbp-0xb0],ecx
   1b850:	mov    rcx,QWORD PTR [rdi+0x4c8]
   1b857:	mov    edi,DWORD PTR [rdi+0x4d0]
   1b85d:	mov    QWORD PTR [rbp-0xb8],rsi
   1b864:	cmp    rax,rsi
   1b867:	mov    QWORD PTR [rbp-0xa8],rax
   1b86e:	mov    QWORD PTR [rbp-0x90],rcx
   1b875:	mov    ecx,DWORD PTR [r13+0x8f8]
   1b87c:	mov    DWORD PTR [rbp-0x9c],edi
   1b882:	mov    DWORD PTR [rbp-0xa0],ecx
   1b888:	jbe    1b915 <meminit_hvm+0x105>
   1b88e:	mov    edx,DWORD PTR [rbp-0xa0]
   1b894:	test   edx,edx
   1b896:	jne    1c14a <meminit_hvm+0x93a>
   1b89c:	mov    DWORD PTR [rbp-0xa0],0x10000
   1b8a6:	mov    rax,QWORD PTR [r13+0x948]
   1b8ad:	movabs rdx,0x100000000
   1b8b7:	mov    QWORD PTR [rbp-0x70],0x0
   1b8bf:	mov    QWORD PTR [rbp-0x60],0x0
   1b8c7:	mov    QWORD PTR [rbp-0x68],rax
   1b8cb:	mov    rax,QWORD PTR [r13+0x950]
   1b8d2:	cmp    rax,rdx
   1b8d5:	jbe    1bfe5 <meminit_hvm+0x7d5>
   1b8db:	mov    QWORD PTR [rbp-0x50],rax
   1b8df:	lea    rax,[rbp-0x74]
   1b8e3:	mov    QWORD PTR [rbp-0x58],rdx
   1b8e7:	mov    QWORD PTR [rbp-0x48],0x0
   1b8ef:	mov    DWORD PTR [rbp-0x74],0xffffffff
   1b8f6:	mov    QWORD PTR [rbp-0xc0],rax
   1b8fd:	lea    rax,[rbp-0x70]
   1b901:	mov    QWORD PTR [rbp-0x98],0x2
   1b90c:	mov    QWORD PTR [rbp-0x88],rax
   1b913:	jmp    1b952 <meminit_hvm+0x142>
   1b915:	mov    eax,DWORD PTR [rbp-0xa0]
   1b91b:	test   eax,eax
   1b91d:	je     1b8a6 <meminit_hvm+0x96>
   1b91f:	mov    rax,QWORD PTR [r13+0x8f0]
   1b926:	mov    QWORD PTR [rbp-0x88],rax
   1b92d:	mov    rax,QWORD PTR [r13+0x900]
   1b934:	mov    QWORD PTR [rbp-0xc0],rax
   1b93b:	mov    eax,DWORD PTR [rbp-0xa0]
   1b941:	mov    DWORD PTR [rbp-0xa0],0x0
   1b94b:	mov    QWORD PTR [rbp-0x98],rax
   1b952:	mov    rax,QWORD PTR [rbp-0x98]
   1b959:	mov    rsi,QWORD PTR [rbp-0x88]
   1b960:	xor    ebx,ebx
   1b962:	mov    rdi,QWORD PTR [rbp-0x90]
   1b969:	xor    r15d,r15d
   1b96c:	lea    rax,[rax+rax*2]
   1b970:	mov    r12,rsi
   1b973:	lea    r14,[rsi+rax*8]
   1b977:	jmp    1b987 <meminit_hvm+0x177>
   1b979:	nop    DWORD PTR [rax+0x0]
   1b980:	mov    rdi,QWORD PTR [r13+0x4c8]
   1b987:	mov    rdx,QWORD PTR [r12]
   1b98b:	mov    rcx,QWORD PTR [r12+0x8]
   1b990:	lea    rsi,[rip+0xb642]        # 26fd9 <__FUNCTION__.12544+0x29>
   1b997:	xor    eax,eax
   1b999:	call   5b60 <xc_dom_printf@plt>
   1b99e:	mov    rax,QWORD PTR [r12+0x8]
   1b9a3:	mov    rdx,rax
   1b9a6:	sub    rdx,QWORD PTR [r12]
   1b9aa:	shr    rax,0xc
   1b9ae:	shr    rdx,0xc
   1b9b2:	add    rbx,rdx
   1b9b5:	cmp    r15,rax
   1b9b8:	cmovb  r15,rax
   1b9bc:	add    r12,0x18
   1b9c0:	cmp    r14,r12
   1b9c3:	jne    1b980 <meminit_hvm+0x170>
   1b9c5:	cmp    QWORD PTR [rbp-0xa8],rbx
   1b9cc:	jne    1c120 <meminit_hvm+0x910>
   1b9d2:	lea    rbx,[r15*8+0x0]
   1b9da:	mov    QWORD PTR [r13+0x470],r15
   1b9e1:	mov    rdi,r13
   1b9e4:	mov    rsi,rbx
   1b9e7:	call   5a60 <xc_dom_malloc@plt>
   1b9ec:	test   rax,rax
   1b9ef:	mov    QWORD PTR [r13+0x450],rax
   1b9f6:	je     1c16a <meminit_hvm+0x95a>
   1b9fc:	xor    edx,edx
   1b9fe:	test   r15,r15
   1ba01:	mov    rcx,0xffffffffffffffff
   1ba08:	jne    1ba17 <meminit_hvm+0x207>
   1ba0a:	jmp    1ba24 <meminit_hvm+0x214>
   1ba0c:	nop    DWORD PTR [rax+0x0]
   1ba10:	mov    rax,QWORD PTR [r13+0x450]
   1ba17:	mov    QWORD PTR [rax+rdx*1],rcx
   1ba1b:	add    rdx,0x8
   1ba1f:	cmp    rbx,rdx
   1ba22:	jne    1ba10 <meminit_hvm+0x200>
   1ba24:	mov    rdi,QWORD PTR [rbp-0x98]
   1ba2b:	mov    rax,QWORD PTR [rbp-0x88]
   1ba32:	lea    rbx,[rdi+rdi*2]
   1ba36:	lea    rsi,[rax+0x8]
   1ba3a:	mov    QWORD PTR [rbp-0x98],rax
   1ba41:	shl    rbx,0x3
   1ba45:	lea    rdi,[rsi+rbx*1]
   1ba49:	nop    DWORD PTR [rax+0x0]
   1ba50:	mov    rax,QWORD PTR [rsi-0x8]
   1ba54:	mov    rdx,QWORD PTR [rsi]
   1ba57:	shr    rax,0xc
   1ba5b:	shr    rdx,0xc
   1ba5f:	cmp    rdx,rax
   1ba62:	jbe    1ba8f <meminit_hvm+0x27f>
   1ba64:	lea    rcx,[rax*8+0x0]
   1ba6c:	nop    DWORD PTR [rax+0x0]
   1ba70:	mov    rdx,QWORD PTR [r13+0x450]
   1ba77:	mov    QWORD PTR [rdx+rcx*1],rax
   1ba7b:	mov    rdx,QWORD PTR [rsi]
   1ba7e:	add    rax,0x1
   1ba82:	add    rcx,0x8
   1ba86:	shr    rdx,0xc
   1ba8a:	cmp    rdx,rax
   1ba8d:	ja     1ba70 <meminit_hvm+0x260>
   1ba8f:	add    rsi,0x18
   1ba93:	cmp    rdi,rsi
   1ba96:	jne    1ba50 <meminit_hvm+0x240>
   1ba98:	mov    esi,DWORD PTR [rbp-0xb0]
   1ba9e:	test   esi,esi
   1baa0:	jne    1c080 <meminit_hvm+0x870>
   1baa6:	mov    ecx,DWORD PTR [rbp-0xa0]
   1baac:	test   ecx,ecx
   1baae:	jne    1c032 <meminit_hvm+0x822>
   1bab4:	cmp    BYTE PTR [r13+0x960],0x0
   1babc:	jne    1c0d0 <meminit_hvm+0x8c0>
   1bac2:	add    rbx,QWORD PTR [rbp-0x88]
   1bac9:	mov    eax,DWORD PTR [rbp-0xa0]
   1bacf:	mov    QWORD PTR [rbp-0xb8],0x0
   1bada:	mov    QWORD PTR [rbp-0xd0],0x0
   1bae5:	mov    QWORD PTR [rbp-0xb0],0x0
   1baf0:	or     eax,0x20000
   1baf5:	mov    QWORD PTR [rbp-0xc8],rbx
   1bafc:	mov    DWORD PTR [rbp-0xd4],eax
   1bb02:	nop    WORD PTR [rax+rax*1+0x0]
   1bb08:	mov    rax,QWORD PTR [rbp-0x98]
   1bb0f:	mov    rsi,QWORD PTR [rbp-0xc0]
   1bb16:	mov    eax,DWORD PTR [rax+0x14]
   1bb19:	mov    eax,DWORD PTR [rsi+rax*4]
   1bb1c:	mov    esi,DWORD PTR [rbp-0xa0]
   1bb22:	cmp    eax,0xffffffff
   1bb25:	mov    DWORD PTR [rbp-0x88],esi
   1bb2b:	je     1bb3f <meminit_hvm+0x32f>
   1bb2d:	add    eax,0x1
   1bb30:	shl    eax,0x8
   1bb33:	or     eax,DWORD PTR [rbp-0xd4]
   1bb39:	mov    DWORD PTR [rbp-0x88],eax
   1bb3f:	mov    rax,QWORD PTR [rbp-0x98]
   1bb46:	mov    rdi,QWORD PTR [rax+0x8]
   1bb4a:	mov    r15,QWORD PTR [rax]
   1bb4d:	mov    r14,rdi
   1bb50:	mov    QWORD PTR [rbp-0xa8],rdi
   1bb57:	shr    r14,0xc
   1bb5b:	test   r15,r15
   1bb5e:	jne    1bec0 <meminit_hvm+0x6b0>
   1bb64:	cmp    BYTE PTR [r13+0x960],0x0
   1bb6c:	je     1bec0 <meminit_hvm+0x6b0>
   1bb72:	add    QWORD PTR [rbp-0xb0],0xc0
   1bb7d:	mov    r15d,0xc0
   1bb83:	xor    eax,eax
   1bb85:	test   eax,eax
   1bb87:	jne    1bca0 <meminit_hvm+0x490>
   1bb8d:	cmp    r15,r14
   1bb90:	jae    1bca0 <meminit_hvm+0x490>
   1bb96:	mov    rax,QWORD PTR [r13+0x450]
   1bb9d:	mov    rbx,r14
   1bba0:	sub    rbx,r15
   1bba3:	mov    r12,QWORD PTR [rax+r15*8]
   1bba7:	mov    rax,r12
   1bbaa:	and    eax,0x3ffff
   1bbaf:	cmp    rbx,0x40000
   1bbb6:	ja     1bda8 <meminit_hvm+0x598>
   1bbbc:	test   rax,rax
   1bbbf:	je     1bbd3 <meminit_hvm+0x3c3>
   1bbc1:	mov    rax,r12
   1bbc4:	neg    rax
   1bbc7:	and    eax,0x3ffff
   1bbcc:	cmp    rbx,rax
   1bbcf:	cmova  rbx,rax
   1bbd3:	mov    rax,rbx
   1bbd6:	or     rax,r12
   1bbd9:	test   eax,0x3ffff
   1bbde:	jne    1bc10 <meminit_hvm+0x400>
   1bbe0:	mov    rdx,r12
   1bbe3:	mov    rax,QWORD PTR [r13+0x938]
   1bbea:	shl    rdx,0xc
   1bbee:	lea    rcx,[rdx+0x40000000]
   1bbf5:	cmp    rax,rcx
   1bbf8:	jae    1be90 <meminit_hvm+0x680>
   1bbfe:	add    rax,QWORD PTR [r13+0x940]
   1bc05:	cmp    rdx,rax
   1bc08:	jae    1be90 <meminit_hvm+0x680>
   1bc0e:	xchg   ax,ax
   1bc10:	xor    eax,eax
   1bc12:	test   rbx,rbx
   1bc15:	je     1bb85 <meminit_hvm+0x375>
   1bc1b:	mov    rax,r12
   1bc1e:	and    eax,0x1ff
   1bc23:	cmp    rbx,0x800
   1bc2a:	ja     1bdc0 <meminit_hvm+0x5b0>
   1bc30:	test   rax,rax
   1bc33:	je     1bf58 <meminit_hvm+0x748>
   1bc39:	mov    rax,r12
   1bc3c:	neg    rax
   1bc3f:	and    eax,0x1ff
   1bc44:	cmp    rax,rbx
   1bc47:	jb     1c18a <meminit_hvm+0x97a>
   1bc4d:	or     r12,rbx
   1bc50:	test   r12d,0x1ff
   1bc57:	je     1bf85 <meminit_hvm+0x775>
   1bc5d:	mov    rax,QWORD PTR [r13+0x450]
   1bc64:	mov    r8d,DWORD PTR [rbp-0x88]
   1bc6b:	xor    ecx,ecx
   1bc6d:	mov    esi,DWORD PTR [rbp-0x9c]
   1bc73:	mov    rdi,QWORD PTR [rbp-0x90]
   1bc7a:	mov    rdx,rbx
   1bc7d:	lea    r9,[rax+r15*8]
   1bc81:	add    r15,rbx
   1bc84:	call   5d20 <xc_domain_populate_physmap_exact@plt>
   1bc89:	add    QWORD PTR [rbp-0xb0],rbx
   1bc90:	test   eax,eax
   1bc92:	je     1bb8d <meminit_hvm+0x37d>
   1bc98:	nop    DWORD PTR [rax+rax*1+0x0]
   1bca0:	test   eax,eax
   1bca2:	jne    1c012 <meminit_hvm+0x802>
   1bca8:	add    QWORD PTR [rbp-0x98],0x18
   1bcb0:	mov    rdi,QWORD PTR [rbp-0x98]
   1bcb7:	cmp    rdi,QWORD PTR [rbp-0xc8]
   1bcbe:	jne    1bb08 <meminit_hvm+0x2f8>
   1bcc4:	mov    r14d,eax
   1bcc7:	call   5940 <__errno_location@plt>
   1bccc:	mov    r15,QWORD PTR [rbp-0x90]
   1bcd3:	mov    r12d,DWORD PTR [rax]
   1bcd6:	lea    r8,[rip+0xb330]        # 2700d <__FUNCTION__.12544+0x5d>
   1bcdd:	mov    rbx,rax
   1bce0:	xor    ecx,ecx
   1bce2:	mov    edx,0x3
   1bce7:	xor    eax,eax
   1bce9:	mov    rsi,QWORD PTR [r15+0x8]
   1bced:	mov    rdi,r15
   1bcf0:	call   6540 <xc_report@plt>
   1bcf5:	mov    DWORD PTR [rbx],r12d
   1bcf8:	mov    r9,QWORD PTR [rbp-0xb0]
   1bcff:	lea    r8,[rip+0xb324]        # 2702a <__FUNCTION__.12544+0x7a>
   1bd06:	mov    rsi,QWORD PTR [r15+0x8]
   1bd0a:	mov    rdi,r15
   1bd0d:	xor    ecx,ecx
   1bd0f:	mov    edx,0x3
   1bd14:	xor    eax,eax
   1bd16:	call   6540 <xc_report@plt>
   1bd1b:	mov    DWORD PTR [rbx],r12d
   1bd1e:	mov    r9,QWORD PTR [rbp-0xd0]
   1bd25:	lea    r8,[rip+0xb315]        # 27041 <__FUNCTION__.12544+0x91>
   1bd2c:	mov    rsi,QWORD PTR [r15+0x8]
   1bd30:	mov    rdi,r15
   1bd33:	xor    ecx,ecx
   1bd35:	mov    edx,0x3
   1bd3a:	xor    eax,eax
   1bd3c:	call   6540 <xc_report@plt>
   1bd41:	mov    DWORD PTR [rbx],r12d
   1bd44:	mov    r9,QWORD PTR [rbp-0xb8]
   1bd4b:	lea    r8,[rip+0xb306]        # 27058 <__FUNCTION__.12544+0xa8>
   1bd52:	mov    rsi,QWORD PTR [r15+0x8]
   1bd56:	mov    rdi,r15
   1bd59:	xor    ecx,ecx
   1bd5b:	mov    edx,0x3
   1bd60:	xor    eax,eax
   1bd62:	call   6540 <xc_report@plt>
   1bd67:	mov    DWORD PTR [rbx],r12d
   1bd6a:	mov    esi,DWORD PTR [rbp-0x9c]
   1bd70:	mov    rdi,QWORD PTR [rbp-0x90]
   1bd77:	xor    edx,edx
   1bd79:	call   60f0 <xc_domain_claim_pages@plt>
   1bd7e:	mov    rsi,QWORD PTR [rbp-0x38]
   1bd82:	xor    rsi,QWORD PTR fs:0x28
   1bd8b:	mov    eax,r14d
   1bd8e:	jne    1c192 <meminit_hvm+0x982>
   1bd94:	lea    rsp,[rbp-0x28]
   1bd98:	pop    rbx
   1bd99:	pop    r12
   1bd9b:	pop    r13
   1bd9d:	pop    r14
   1bd9f:	pop    r15
   1bda1:	pop    rbp
   1bda2:	ret    
   1bda3:	nop    DWORD PTR [rax+rax*1+0x0]
   1bda8:	test   rax,rax
   1bdab:	je     1be00 <meminit_hvm+0x5f0>
   1bdad:	mov    rbx,r12
   1bdb0:	neg    rbx
   1bdb3:	and    ebx,0x3ffff
   1bdb9:	jmp    1bbd3 <meminit_hvm+0x3c3>
   1bdbe:	xchg   ax,ax
   1bdc0:	test   rax,rax
   1bdc3:	je     1bed0 <meminit_hvm+0x6c0>
   1bdc9:	mov    rbx,r12
   1bdcc:	neg    rbx
   1bdcf:	and    ebx,0x1ff
   1bdd5:	mov    rdx,r12
   1bdd8:	or     rdx,rbx
   1bddb:	and    edx,0x1ff
   1bde1:	je     1bfc0 <meminit_hvm+0x7b0>
   1bde7:	xor    eax,eax
   1bde9:	test   rbx,rbx
   1bdec:	je     1bb85 <meminit_hvm+0x375>
   1bdf2:	jmp    1bc5d <meminit_hvm+0x44d>
   1bdf7:	nop    WORD PTR [rax+rax*1+0x0]
   1be00:	mov    rdx,r12
   1be03:	mov    rax,QWORD PTR [r13+0x938]
   1be0a:	shl    rdx,0xc
   1be0e:	lea    rcx,[rdx+0x40000000]
   1be15:	cmp    rcx,rax
   1be18:	jbe    1be2f <meminit_hvm+0x61f>
   1be1a:	add    rax,QWORD PTR [r13+0x940]
   1be21:	mov    ebx,0x40000
   1be26:	cmp    rdx,rax
   1be29:	jb     1bc1b <meminit_hvm+0x40b>
   1be2f:	mov    QWORD PTR [rbp-0xa8],rsp
   1be36:	sub    rsp,0x10
   1be3a:	mov    r9,rsp
   1be3d:	mov    QWORD PTR [r9],r12
   1be40:	mov    edx,0x1
   1be45:	mov    ebx,0x40000
   1be4a:	mov    r8d,DWORD PTR [rbp-0x88]
   1be51:	mov    esi,DWORD PTR [rbp-0x9c]
   1be57:	mov    ecx,0x12
   1be5c:	mov    rdi,QWORD PTR [rbp-0x90]
   1be63:	call   6380 <xc_domain_populate_physmap@plt>
   1be68:	cdqe   
   1be6a:	test   rax,rax
   1be6d:	jle    1be80 <meminit_hvm+0x670>
   1be6f:	add    QWORD PTR [rbp-0xb8],rax
   1be76:	shl    rax,0x12
   1be7a:	add    r15,rax
   1be7d:	sub    rbx,rax
   1be80:	mov    rsp,QWORD PTR [rbp-0xa8]
   1be87:	jmp    1bc10 <meminit_hvm+0x400>
   1be8c:	nop    DWORD PTR [rax+0x0]
   1be90:	mov    rdx,rbx
   1be93:	mov    QWORD PTR [rbp-0xa8],rsp
   1be9a:	shr    rdx,0x12
   1be9e:	lea    rax,[rdx*8+0x16]
   1bea6:	shr    rax,0x4
   1beaa:	shl    rax,0x4
   1beae:	sub    rsp,rax
   1beb1:	test   rdx,rdx
   1beb4:	mov    r9,rsp
   1beb7:	jne    1be3d <meminit_hvm+0x62d>
   1beb9:	jmp    1be4a <meminit_hvm+0x63a>
   1bebb:	nop    DWORD PTR [rax+rax*1+0x0]
   1bec0:	shr    r15,0xc
   1bec4:	jmp    1bb83 <meminit_hvm+0x373>
   1bec9:	nop    DWORD PTR [rax+0x0]
   1bed0:	mov    r12,rsp
   1bed3:	sub    rsp,0x30
   1bed7:	mov    ebx,0x800
   1bedc:	mov    r9,rsp
   1bedf:	mov    edi,0x20
   1bee4:	mov    edx,0x4
   1bee9:	mov    rax,QWORD PTR [r13+0x450]
   1bef0:	add    rdi,r9
   1bef3:	lea    rcx,[rax+r15*8]
   1bef7:	mov    rax,r9
   1befa:	nop    WORD PTR [rax+rax*1+0x0]
   1bf00:	mov    rsi,QWORD PTR [rcx]
   1bf03:	add    rax,0x8
   1bf07:	add    rcx,0x1000
   1bf0e:	mov    QWORD PTR [rax-0x8],rsi
   1bf12:	cmp    rax,rdi
   1bf15:	jne    1bf00 <meminit_hvm+0x6f0>
   1bf17:	mov    r8d,DWORD PTR [rbp-0x88]
   1bf1e:	mov    esi,DWORD PTR [rbp-0x9c]
   1bf24:	mov    ecx,0x9
   1bf29:	mov    rdi,QWORD PTR [rbp-0x90]
   1bf30:	call   6380 <xc_domain_populate_physmap@plt>
   1bf35:	cdqe   
   1bf37:	test   rax,rax
   1bf3a:	jle    1bf4d <meminit_hvm+0x73d>
   1bf3c:	add    QWORD PTR [rbp-0xd0],rax
   1bf43:	shl    rax,0x9
   1bf47:	add    r15,rax
   1bf4a:	sub    rbx,rax
   1bf4d:	mov    rsp,r12
   1bf50:	jmp    1bde7 <meminit_hvm+0x5d7>
   1bf55:	nop    DWORD PTR [rax]
   1bf58:	test   ebx,0x1ff
   1bf5e:	je     1bc4d <meminit_hvm+0x43d>
   1bf64:	cmp    rbx,0x200
   1bf6b:	jbe    1bc4d <meminit_hvm+0x43d>
   1bf71:	and    rbx,0xfffffffffffffe00
   1bf78:	test   r12d,0x1ff
   1bf7f:	jne    1bde7 <meminit_hvm+0x5d7>
   1bf85:	mov    rdx,rbx
   1bf88:	mov    r12,rsp
   1bf8b:	shr    rdx,0x9
   1bf8f:	lea    rdi,[rdx*8+0x0]
   1bf97:	lea    rax,[rdi+0x16]
   1bf9b:	shr    rax,0x4
   1bf9f:	shl    rax,0x4
   1bfa3:	sub    rsp,rax
   1bfa6:	test   rdx,rdx
   1bfa9:	mov    r9,rsp
   1bfac:	jne    1bee9 <meminit_hvm+0x6d9>
   1bfb2:	jmp    1bf17 <meminit_hvm+0x707>
   1bfb7:	nop    WORD PTR [rax+rax*1+0x0]
   1bfc0:	mov    rax,rbx
   1bfc3:	mov    r12,rsp
   1bfc6:	shr    rax,0x9
   1bfca:	lea    rax,[rax*8+0x16]
   1bfd2:	shr    rax,0x4
   1bfd6:	shl    rax,0x4
   1bfda:	sub    rsp,rax
   1bfdd:	mov    r9,rsp
   1bfe0:	jmp    1bf17 <meminit_hvm+0x707>
   1bfe5:	lea    rax,[rbp-0x74]
   1bfe9:	mov    DWORD PTR [rbp-0x74],0xffffffff
   1bff0:	mov    QWORD PTR [rbp-0x98],0x1
   1bffb:	mov    QWORD PTR [rbp-0xc0],rax
   1c002:	lea    rax,[rbp-0x70]
   1c006:	mov    QWORD PTR [rbp-0x88],rax
   1c00d:	jmp    1b952 <meminit_hvm+0x142>
   1c012:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c019:	lea    rsi,[rip+0xb280]        # 272a0 <__FUNCTION__.12544+0x2f0>
   1c020:	xor    eax,eax
   1c022:	mov    r14d,0xffffffff
   1c028:	call   5b60 <xc_dom_printf@plt>
   1c02d:	jmp    1bd6a <meminit_hvm+0x55a>
   1c032:	mov    rdx,QWORD PTR [rbp-0xb8]
   1c039:	sub    rdx,QWORD PTR [r13+0x958]
   1c040:	xor    r9d,r9d
   1c043:	mov    esi,DWORD PTR [rbp-0x9c]
   1c049:	mov    rdi,QWORD PTR [rbp-0x90]
   1c050:	xor    r8d,r8d
   1c053:	xor    ecx,ecx
   1c055:	call   6010 <xc_domain_set_pod_target@plt>
   1c05a:	test   eax,eax
   1c05c:	je     1bab4 <meminit_hvm+0x2a4>
   1c062:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c069:	lea    rsi,[rip+0xb1d0]        # 27240 <__FUNCTION__.12544+0x290>
   1c070:	xor    eax,eax
   1c072:	or     r14d,0xffffffff
   1c076:	call   5b60 <xc_dom_printf@plt>
   1c07b:	jmp    1bd6a <meminit_hvm+0x55a>
   1c080:	mov    rdx,QWORD PTR [rbp-0xb8]
   1c087:	sub    rdx,QWORD PTR [r13+0x958]
   1c08e:	mov    esi,DWORD PTR [rbp-0x9c]
   1c094:	mov    rdi,QWORD PTR [rbp-0x90]
   1c09b:	call   60f0 <xc_domain_claim_pages@plt>
   1c0a0:	test   eax,eax
   1c0a2:	je     1baa6 <meminit_hvm+0x296>
   1c0a8:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c0af:	lea    rsi,[rip+0xb142]        # 271f8 <__FUNCTION__.12544+0x248>
   1c0b6:	xor    eax,eax
   1c0b8:	or     r14d,0xffffffff
   1c0bc:	call   5b60 <xc_dom_printf@plt>
   1c0c1:	jmp    1bd6a <meminit_hvm+0x55a>
   1c0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1c0d0:	mov    r9,QWORD PTR [r13+0x450]
   1c0d7:	mov    r8d,DWORD PTR [rbp-0xa0]
   1c0de:	xor    ecx,ecx
   1c0e0:	mov    esi,DWORD PTR [rbp-0x9c]
   1c0e6:	mov    rdi,QWORD PTR [rbp-0x90]
   1c0ed:	mov    edx,0xa0
   1c0f2:	call   5d20 <xc_domain_populate_physmap_exact@plt>
   1c0f7:	test   eax,eax
   1c0f9:	je     1bac2 <meminit_hvm+0x2b2>
   1c0ff:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c106:	lea    rsi,[rip+0xb163]        # 27270 <__FUNCTION__.12544+0x2c0>
   1c10d:	xor    eax,eax
   1c10f:	or     r14d,0xffffffff
   1c113:	call   5b60 <xc_dom_printf@plt>
   1c118:	jmp    1bd6a <meminit_hvm+0x55a>
   1c11d:	nop    DWORD PTR [rax]
   1c120:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c127:	mov    rcx,QWORD PTR [rbp-0xa8]
   1c12e:	lea    rsi,[rip+0xb093]        # 271c8 <__FUNCTION__.12544+0x218>
   1c135:	mov    rdx,rbx
   1c138:	xor    eax,eax
   1c13a:	mov    r14d,0xffffffff
   1c140:	call   5b60 <xc_dom_printf@plt>
   1c145:	jmp    1bd6a <meminit_hvm+0x55a>
   1c14a:	mov    rdi,QWORD PTR [rbp-0x90]
   1c151:	lea    rsi,[rip+0xb040]        # 27198 <__FUNCTION__.12544+0x1e8>
   1c158:	xor    eax,eax
   1c15a:	mov    r14d,0xffffffff
   1c160:	call   5b60 <xc_dom_printf@plt>
   1c165:	jmp    1bd6a <meminit_hvm+0x55a>
   1c16a:	mov    rdi,QWORD PTR [r13+0x4c8]
   1c171:	lea    rsi,[rip+0xae7e]        # 26ff6 <__FUNCTION__.12544+0x46>
   1c178:	xor    eax,eax
   1c17a:	mov    r14d,0xffffffff
   1c180:	call   5b60 <xc_dom_printf@plt>
   1c185:	jmp    1bd6a <meminit_hvm+0x55a>
   1c18a:	mov    rbx,rax
   1c18d:	jmp    1bdd5 <meminit_hvm+0x5c5>
   1c192:	call   5b80 <__stack_chk_fail@plt>
   1c197:	nop    WORD PTR [rax+rax*1+0x0]

000000000001c1a0 <shared_info_x86_64>:
   1c1a0:	push   rbx
   1c1a1:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1c1a8:	mov    rbx,rsi
   1c1ab:	lea    rdx,[rip+0xb77e]        # 27930 <__FUNCTION__.12779>
   1c1b2:	lea    rsi,[rip+0x91c2]        # 2537b <deep_features.2995+0x23b>
   1c1b9:	xor    eax,eax
   1c1bb:	call   5b60 <xc_dom_printf@plt>
   1c1c0:	lea    rdi,[rbx+0x8]
   1c1c4:	mov    rcx,rbx
   1c1c7:	xor    eax,eax
   1c1c9:	mov    QWORD PTR [rbx],0x0
   1c1d0:	mov    QWORD PTR [rbx+0xc38],0x0
   1c1db:	lea    rsi,[rbx+0x801]
   1c1e2:	and    rdi,0xfffffffffffffff8
   1c1e6:	sub    rcx,rdi
   1c1e9:	add    ecx,0xc40
   1c1ef:	shr    ecx,0x3
   1c1f2:	rep stos QWORD PTR es:[rdi],rax
   1c1f5:	lea    rax,[rbx+0x1]
   1c1f9:	nop    DWORD PTR [rax+0x0]
   1c200:	mov    BYTE PTR [rax],0x1
   1c203:	add    rax,0x40
   1c207:	cmp    rax,rsi
   1c20a:	jne    1c200 <shared_info_x86_64+0x60>
   1c20c:	xor    eax,eax
   1c20e:	pop    rbx
   1c20f:	ret    

000000000001c210 <shared_info_x86_32>:
   1c210:	push   rbx
   1c211:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1c218:	mov    rbx,rsi
   1c21b:	lea    rdx,[rip+0xb66e]        # 27890 <__FUNCTION__.12769>
   1c222:	lea    rsi,[rip+0x9152]        # 2537b <deep_features.2995+0x23b>
   1c229:	xor    eax,eax
   1c22b:	call   5b60 <xc_dom_printf@plt>
   1c230:	lea    rdi,[rbx+0x8]
   1c234:	mov    rcx,rbx
   1c237:	xor    eax,eax
   1c239:	mov    QWORD PTR [rbx],0x0
   1c240:	mov    QWORD PTR [rbx+0x920],0x0
   1c24b:	lea    rsi,[rbx+0x801]
   1c252:	and    rdi,0xfffffffffffffff8
   1c256:	sub    rcx,rdi
   1c259:	add    ecx,0x928
   1c25f:	shr    ecx,0x3
   1c262:	rep stos QWORD PTR es:[rdi],rax
   1c265:	lea    rax,[rbx+0x1]
   1c269:	nop    DWORD PTR [rax+0x0]
   1c270:	mov    BYTE PTR [rax],0x1
   1c273:	add    rax,0x40
   1c277:	cmp    rax,rsi
   1c27a:	jne    1c270 <shared_info_x86_32+0x60>
   1c27c:	xor    eax,eax
   1c27e:	pop    rbx
   1c27f:	ret    

000000000001c280 <count_pgtables>:
   1c280:	push   r15
   1c282:	push   r14
   1c284:	mov    r10,rdi
   1c287:	push   r13
   1c289:	push   r12
   1c28b:	push   rbp
   1c28c:	push   rbx
   1c28d:	sub    rsp,0x28
   1c291:	mov    rbp,QWORD PTR [rdi+0x910]
   1c298:	mov    QWORD PTR [rsp+0x10],rdx
   1c29d:	mov    edi,DWORD PTR [rbp+0x0]
   1c2a0:	cmp    edi,0x2
   1c2a3:	je     1c670 <count_pgtables+0x3f0>
   1c2a9:	mov    rax,QWORD PTR [rsp+0x10]
   1c2ae:	mov    rdx,QWORD PTR [r10+0x470]
   1c2b5:	lea    r8,[rbp+0x8]
   1c2b9:	sub    rax,rsi
   1c2bc:	shr    rax,0xc
   1c2c0:	add    rax,rcx
   1c2c3:	cmp    rdx,rax
   1c2c6:	jbe    1c634 <count_pgtables+0x3b4>
   1c2cc:	test   edi,edi
   1c2ce:	je     1c30a <count_pgtables+0x8a>
   1c2d0:	lea    edx,[rdi-0x1]
   1c2d3:	mov    rcx,QWORD PTR [rsp+0x10]
   1c2d8:	mov    rax,r8
   1c2db:	lea    rdx,[rdx+rdx*4]
   1c2df:	shl    rdx,0x5
   1c2e3:	lea    rdx,[rbp+rdx*1+0xa8]
   1c2eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1c2f0:	cmp    QWORD PTR [rax+0x8],rsi
   1c2f4:	jbe    1c2ff <count_pgtables+0x7f>
   1c2f6:	cmp    QWORD PTR [rax],rcx
   1c2f9:	jb     1c5d4 <count_pgtables+0x354>
   1c2ff:	add    rax,0xa0
   1c305:	cmp    rax,rdx
   1c308:	jne    1c2f0 <count_pgtables+0x70>
   1c30a:	lea    r12,[rdi+rdi*4]
   1c30e:	xor    eax,eax
   1c310:	shl    r12,0x5
   1c314:	add    r12,r8
   1c317:	lea    rdi,[r12+0x8]
   1c31c:	mov    rcx,r12
   1c31f:	mov    QWORD PTR [r12],0x0
   1c327:	mov    QWORD PTR [r12+0x98],0x0
   1c333:	and    rdi,0xfffffffffffffff8
   1c337:	sub    rcx,rdi
   1c33a:	add    ecx,0xa0
   1c340:	shr    ecx,0x3
   1c343:	rep stos QWORD PTR es:[rdi],rax
   1c346:	mov    rax,QWORD PTR [rbp+0x148]
   1c34d:	mov    rdi,QWORD PTR [rsp+0x10]
   1c352:	and    rsi,QWORD PTR [rax+0x8]
   1c356:	mov    QWORD PTR [r12],rsi
   1c35a:	mov    rax,QWORD PTR [rbp+0x148]
   1c361:	and    rdi,QWORD PTR [rax+0x8]
   1c365:	mov    QWORD PTR [r12+0x8],rdi
   1c36a:	mov    rax,QWORD PTR [rbp+0x148]
   1c371:	mov    eax,DWORD PTR [rax]
   1c373:	mov    r13d,eax
   1c376:	sub    r13d,0x1
   1c37a:	js     1c51c <count_pgtables+0x29c>
   1c380:	movsxd rdx,r13d
   1c383:	lea    r14d,[rax+rax*8+0xc]
   1c388:	shl    rdx,0x5
   1c38c:	lea    rbx,[r12+rdx*1]
   1c390:	lea    r15,[r8+rdx*1+0x28]
   1c395:	nop    DWORD PTR [rax]
   1c398:	mov    eax,DWORD PTR [r12+0x18]
   1c39d:	mov    rdx,rax
   1c3a0:	add    rax,QWORD PTR [r10+0x410]
   1c3a7:	mov    QWORD PTR [rbx+0x30],rax
   1c3ab:	mov    rax,QWORD PTR [rbp+0x148]
   1c3b2:	mov    eax,DWORD PTR [rax]
   1c3b4:	sub    eax,0x1
   1c3b7:	cmp    eax,r13d
   1c3ba:	je     1c530 <count_pgtables+0x2b0>
   1c3c0:	mov    r9d,0x1
   1c3c6:	mov    ecx,r14d
   1c3c9:	shl    r9,cl
   1c3cc:	lea    r11,[r9-0x1]
   1c3d0:	neg    r9
   1c3d3:	and    r9,QWORD PTR [r12]
   1c3d7:	mov    QWORD PTR [rbx+0x20],r9
   1c3db:	mov    r8,QWORD PTR [r12+0x8]
   1c3e0:	or     r8,r11
   1c3e3:	mov    QWORD PTR [rbx+0x28],r8
   1c3e7:	mov    rax,QWORD PTR [rbp+0x148]
   1c3ee:	cmp    DWORD PTR [rax],0x3
   1c3f1:	je     1c480 <count_pgtables+0x200>
   1c3f7:	mov    eax,DWORD PTR [rbp+0x0]
   1c3fa:	test   eax,eax
   1c3fc:	mov    r9,QWORD PTR [rbx+0x20]
   1c400:	je     1c4a8 <count_pgtables+0x228>
   1c406:	mov    rax,r15
   1c409:	xor    esi,esi
   1c40b:	jmp    1c452 <count_pgtables+0x1d2>
   1c40d:	nop    DWORD PTR [rax]
   1c410:	cmp    rcx,r8
   1c413:	jae    1c560 <count_pgtables+0x2e0>
   1c419:	cmp    rcx,r9
   1c41c:	jb     1c440 <count_pgtables+0x1c0>
   1c41e:	add    rcx,0x1
   1c422:	mov    r8,QWORD PTR [rbx+0x28]
   1c426:	mov    QWORD PTR [rbx+0x20],rcx
   1c42a:	mov    rdx,QWORD PTR [rax-0x8]
   1c42e:	cmp    r8,rdx
   1c431:	jb     1c440 <count_pgtables+0x1c0>
   1c433:	cmp    QWORD PTR [rax],r8
   1c436:	jae    1c471 <count_pgtables+0x1f1>
   1c438:	nop    DWORD PTR [rax+rax*1+0x0]
   1c440:	mov    r9,QWORD PTR [rbx+0x20]
   1c444:	add    esi,0x1
   1c447:	add    rax,0xa0
   1c44d:	cmp    DWORD PTR [rbp+0x0],esi
   1c450:	jbe    1c4a8 <count_pgtables+0x228>
   1c452:	mov    rdx,QWORD PTR [rax-0x8]
   1c456:	mov    rcx,QWORD PTR [rax]
   1c459:	cmp    rdx,rcx
   1c45c:	je     1c444 <count_pgtables+0x1c4>
   1c45e:	cmp    rdx,r9
   1c461:	jbe    1c410 <count_pgtables+0x190>
   1c463:	cmp    rcx,r8
   1c466:	jb     1c615 <count_pgtables+0x395>
   1c46c:	cmp    rdx,r8
   1c46f:	ja     1c440 <count_pgtables+0x1c0>
   1c471:	lea    r8,[rdx-0x1]
   1c475:	mov    QWORD PTR [rbx+0x28],r8
   1c479:	jmp    1c440 <count_pgtables+0x1c0>
   1c47b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c480:	mov    ecx,DWORD PTR [rbp+0x0]
   1c483:	test   ecx,ecx
   1c485:	jne    1c406 <count_pgtables+0x186>
   1c48b:	mov    edi,0xbfffffff
   1c490:	cmp    QWORD PTR [rsp+0x10],rdi
   1c495:	ja     1c4a8 <count_pgtables+0x228>
   1c497:	cmp    r13d,0x1
   1c49b:	je     1c588 <count_pgtables+0x308>
   1c4a1:	nop    DWORD PTR [rax+0x0]
   1c4a8:	cmp    r8,r9
   1c4ab:	jbe    1c580 <count_pgtables+0x300>
   1c4b1:	sub    r8,r9
   1c4b4:	mov    ecx,r14d
   1c4b7:	mov    r9,QWORD PTR [rbx+0x20]
   1c4bb:	shr    r8,cl
   1c4be:	lea    eax,[r8+0x1]
   1c4c2:	mov    r8,QWORD PTR [rbx+0x28]
   1c4c6:	mov    DWORD PTR [rbx+0x38],eax
   1c4c9:	mov    rdi,QWORD PTR [r10+0x4c8]
   1c4d0:	mov    QWORD PTR [rsp+0x8],r10
   1c4d5:	lea    rdx,[rip+0xb3fc]        # 278d8 <__FUNCTION__.12579>
   1c4dc:	push   rax
   1c4dd:	lea    rsi,[rip+0xaea4]        # 27388 <__FUNCTION__.12544+0x3d8>
   1c4e4:	push   r8
   1c4e6:	xor    eax,eax
   1c4e8:	mov    r8d,r14d
   1c4eb:	mov    rcx,r11
   1c4ee:	call   5b60 <xc_dom_printf@plt>
   1c4f3:	mov    eax,DWORD PTR [rbx+0x38]
   1c4f6:	add    DWORD PTR [r12+0x18],eax
   1c4fb:	pop    rax
   1c4fc:	pop    rdx
   1c4fd:	mov    r10,QWORD PTR [rsp+0x8]
   1c502:	sub    r13d,0x1
   1c506:	sub    rbx,0x20
   1c50a:	sub    r14d,0x9
   1c50e:	sub    r15,0x20
   1c512:	cmp    r13d,0xffffffff
   1c516:	jne    1c398 <count_pgtables+0x118>
   1c51c:	xor    eax,eax
   1c51e:	add    rsp,0x28
   1c522:	pop    rbx
   1c523:	pop    rbp
   1c524:	pop    r12
   1c526:	pop    r13
   1c528:	pop    r14
   1c52a:	pop    r15
   1c52c:	ret    
   1c52d:	nop    DWORD PTR [rax]
   1c530:	mov    esi,DWORD PTR [rbp+0x0]
   1c533:	test   esi,esi
   1c535:	jne    1c502 <count_pgtables+0x282>
   1c537:	mov    QWORD PTR [rbx+0x20],0x0
   1c53f:	mov    rax,QWORD PTR [rbp+0x148]
   1c546:	add    edx,0x1
   1c549:	mov    rax,QWORD PTR [rax+0x8]
   1c54d:	mov    DWORD PTR [rbx+0x38],0x1
   1c554:	mov    QWORD PTR [rbx+0x28],rax
   1c558:	mov    DWORD PTR [r12+0x18],edx
   1c55d:	jmp    1c502 <count_pgtables+0x282>
   1c55f:	nop
   1c560:	mov    QWORD PTR [rbx+0x20],0x0
   1c568:	mov    QWORD PTR [rbx+0x28],0x0
   1c570:	xor    r9d,r9d
   1c573:	mov    eax,DWORD PTR [rbx+0x38]
   1c576:	xor    r8d,r8d
   1c579:	jmp    1c4c9 <count_pgtables+0x249>
   1c57e:	xchg   ax,ax
   1c580:	mov    eax,DWORD PTR [rbx+0x38]
   1c583:	jmp    1c4c9 <count_pgtables+0x249>
   1c588:	mov    rdi,QWORD PTR [r10+0x4c8]
   1c58f:	lea    rdx,[rip+0xb342]        # 278d8 <__FUNCTION__.12579>
   1c596:	lea    rsi,[rip+0xad6b]        # 27308 <__FUNCTION__.12544+0x358>
   1c59d:	xor    eax,eax
   1c59f:	mov    QWORD PTR [rsp+0x18],r11
   1c5a4:	mov    QWORD PTR [rsp+0x8],r10
   1c5a9:	call   5b60 <xc_dom_printf@plt>
   1c5ae:	mov    rax,QWORD PTR [rbp+0x148]
   1c5b5:	mov    r11,QWORD PTR [rsp+0x18]
   1c5ba:	mov    r10,QWORD PTR [rsp+0x8]
   1c5bf:	mov    rax,QWORD PTR [rax+0x8]
   1c5c3:	mov    QWORD PTR [r12+0x48],rax
   1c5c8:	mov    eax,DWORD PTR [rbp+0x0]
   1c5cb:	mov    r8,QWORD PTR [rbx+0x28]
   1c5cf:	jmp    1c3fa <count_pgtables+0x17a>
   1c5d4:	mov    rdi,QWORD PTR [r10+0x4c8]
   1c5db:	lea    r9,[rip+0xb2f6]        # 278d8 <__FUNCTION__.12579>
   1c5e2:	lea    r8,[rip+0xaaaa]        # 27093 <__FUNCTION__.12544+0xe3>
   1c5e9:	lea    rsi,[rip+0xaa96]        # 27086 <__FUNCTION__.12544+0xd6>
   1c5f0:	xor    eax,eax
   1c5f2:	mov    ecx,0x1
   1c5f7:	mov    edx,0xa8
   1c5fc:	call   60a0 <xc_dom_panic_func@plt>
   1c601:	add    rsp,0x28
   1c605:	mov    eax,0xffffffea
   1c60a:	pop    rbx
   1c60b:	pop    rbp
   1c60c:	pop    r12
   1c60e:	pop    r13
   1c610:	pop    r14
   1c612:	pop    r15
   1c614:	ret    
   1c615:	lea    rcx,[rip+0xb2ac]        # 278c8 <__PRETTY_FUNCTION__.12586>
   1c61c:	lea    rsi,[rip+0xaa63]        # 27086 <__FUNCTION__.12544+0xd6>
   1c623:	lea    rdi,[rip+0xad06]        # 27330 <__FUNCTION__.12544+0x380>
   1c62a:	mov    edx,0xda
   1c62f:	call   5c70 <__assert_fail@plt>
   1c634:	mov    rdi,QWORD PTR [r10+0x4c8]
   1c63b:	lea    r8,[rip+0xac8e]        # 272d0 <__FUNCTION__.12544+0x320>
   1c642:	push   rdx
   1c643:	lea    r9,[rip+0xb28e]        # 278d8 <__FUNCTION__.12579>
   1c64a:	push   rax
   1c64b:	lea    rsi,[rip+0xaa34]        # 27086 <__FUNCTION__.12544+0xd6>
   1c652:	xor    eax,eax
   1c654:	mov    ecx,0x4
   1c659:	mov    edx,0x9f
   1c65e:	call   60a0 <xc_dom_panic_func@plt>
   1c663:	pop    rdi
   1c664:	mov    eax,0xfffffff4
   1c669:	pop    r8
   1c66b:	jmp    1c51e <count_pgtables+0x29e>
   1c670:	mov    rdi,QWORD PTR [r10+0x4c8]
   1c677:	lea    r9,[rip+0xb25a]        # 278d8 <__FUNCTION__.12579>
   1c67e:	lea    r8,[rip+0xa9ea]        # 2706f <__FUNCTION__.12544+0xbf>
   1c685:	lea    rsi,[rip+0xa9fa]        # 27086 <__FUNCTION__.12544+0xd6>
   1c68c:	xor    eax,eax
   1c68e:	mov    ecx,0x4
   1c693:	mov    edx,0x95
   1c698:	call   60a0 <xc_dom_panic_func@plt>
   1c69d:	mov    eax,0xfffffff4
   1c6a2:	jmp    1c51e <count_pgtables+0x29e>
   1c6a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001c6b0 <alloc_magic_pages_hvm>:
   1c6b0:	push   r13
   1c6b2:	push   r12
   1c6b4:	xor    r8d,r8d
   1c6b7:	push   rbp
   1c6b8:	push   rbx
   1c6b9:	xor    ecx,ecx
   1c6bb:	mov    r12,rdi
   1c6be:	mov    edx,0x8
   1c6c3:	sub    rsp,0x98
   1c6ca:	mov    ebp,DWORD PTR [rdi+0x4d0]
   1c6d0:	mov    rbx,QWORD PTR [rdi+0x4c8]
   1c6d7:	mov    r9,rsp
   1c6da:	mov    QWORD PTR [rsp],0xfeff8
   1c6e2:	mov    QWORD PTR [rsp+0x8],0xfeff9
   1c6eb:	mov    rax,QWORD PTR fs:0x28
   1c6f4:	mov    QWORD PTR [rsp+0x88],rax
   1c6fc:	xor    eax,eax
   1c6fe:	mov    esi,ebp
   1c700:	mov    rdi,rbx
   1c703:	mov    QWORD PTR [rsp+0x10],0xfeffa
   1c70c:	mov    QWORD PTR [rsp+0x18],0xfeffb
   1c715:	mov    QWORD PTR [rsp+0x20],0xfeffc
   1c71e:	mov    QWORD PTR [rsp+0x28],0xfeffd
   1c727:	mov    QWORD PTR [rsp+0x30],0xfeffe
   1c730:	mov    QWORD PTR [rsp+0x38],0xfefff
   1c739:	call   5d20 <xc_domain_populate_physmap_exact@plt>
   1c73e:	test   eax,eax
   1c740:	jne    1ca3a <alloc_magic_pages_hvm+0x38a>
   1c746:	mov    ecx,0x8
   1c74b:	mov    edx,0xfeff8
   1c750:	mov    esi,ebp
   1c752:	mov    rdi,rbx
   1c755:	call   5910 <xc_clear_domain_pages@plt>
   1c75a:	test   eax,eax
   1c75c:	jne    1ca2f <alloc_magic_pages_hvm+0x37f>
   1c762:	mov    ecx,0xfeffc
   1c767:	mov    edx,0x1
   1c76c:	mov    esi,ebp
   1c76e:	mov    rdi,rbx
   1c771:	call   6050 <xc_hvm_param_set@plt>
   1c776:	mov    ecx,0xfeffb
   1c77b:	mov    edx,0x6
   1c780:	mov    esi,ebp
   1c782:	mov    rdi,rbx
   1c785:	call   6050 <xc_hvm_param_set@plt>
   1c78a:	mov    ecx,0xfeffd
   1c78f:	mov    edx,0x5
   1c794:	mov    esi,ebp
   1c796:	mov    rdi,rbx
   1c799:	call   6050 <xc_hvm_param_set@plt>
   1c79e:	mov    ecx,0xfefff
   1c7a3:	mov    edx,0x11
   1c7a8:	mov    esi,ebp
   1c7aa:	mov    rdi,rbx
   1c7ad:	call   6050 <xc_hvm_param_set@plt>
   1c7b2:	mov    ecx,0xfeff8
   1c7b7:	mov    edx,0x1b
   1c7bc:	mov    esi,ebp
   1c7be:	mov    rdi,rbx
   1c7c1:	call   6050 <xc_hvm_param_set@plt>
   1c7c6:	mov    ecx,0xfeff9
   1c7cb:	mov    edx,0x1c
   1c7d0:	mov    esi,ebp
   1c7d2:	mov    rdi,rbx
   1c7d5:	call   6050 <xc_hvm_param_set@plt>
   1c7da:	mov    ecx,0xfeffa
   1c7df:	mov    edx,0x1d
   1c7e4:	mov    esi,ebp
   1c7e6:	mov    rdi,rbx
   1c7e9:	call   6050 <xc_hvm_param_set@plt>
   1c7ee:	mov    eax,DWORD PTR [r12+0xa00]
   1c7f6:	cmp    BYTE PTR [r12+0x960],0x0
   1c7ff:	lea    rax,[rax+rax*2]
   1c803:	lea    r13,[rax*8+0x878]
   1c80b:	je     1c9d3 <alloc_magic_pages_hvm+0x323>
   1c811:	lea    r9,[rsp+0x40]
   1c816:	xor    r8d,r8d
   1c819:	xor    ecx,ecx
   1c81b:	mov    edx,0x8
   1c820:	mov    esi,ebp
   1c822:	mov    rdi,rbx
   1c825:	mov    QWORD PTR [rsp+0x40],0xfeff0
   1c82e:	mov    QWORD PTR [rsp+0x48],0xfeff1
   1c837:	mov    QWORD PTR [rsp+0x50],0xfeff2
   1c840:	mov    QWORD PTR [rsp+0x58],0xfeff3
   1c849:	mov    QWORD PTR [rsp+0x60],0xfeff4
   1c852:	mov    QWORD PTR [rsp+0x68],0xfeff5
   1c85b:	mov    QWORD PTR [rsp+0x70],0xfeff6
   1c864:	mov    QWORD PTR [rsp+0x78],0xfeff7
   1c86d:	call   5d20 <xc_domain_populate_physmap_exact@plt>
   1c872:	test   eax,eax
   1c874:	jne    1ca19 <alloc_magic_pages_hvm+0x369>
   1c87a:	mov    ecx,0x8
   1c87f:	mov    edx,0xfeff0
   1c884:	mov    esi,ebp
   1c886:	mov    rdi,rbx
   1c889:	call   5910 <xc_clear_domain_pages@plt>
   1c88e:	test   eax,eax
   1c890:	jne    1ca2f <alloc_magic_pages_hvm+0x37f>
   1c896:	mov    ecx,0xfeff0
   1c89b:	mov    edx,0x20
   1c8a0:	mov    esi,ebp
   1c8a2:	mov    rdi,rbx
   1c8a5:	call   6050 <xc_hvm_param_set@plt>
   1c8aa:	mov    ecx,0x8
   1c8af:	mov    edx,0x21
   1c8b4:	mov    esi,ebp
   1c8b6:	mov    rdi,rbx
   1c8b9:	call   6050 <xc_hvm_param_set@plt>
   1c8be:	lea    rsi,[r12+0x3c8]
   1c8c6:	lea    rdx,[rip+0xa7e0]        # 270ad <__FUNCTION__.12544+0xfd>
   1c8cd:	mov    r8,r13
   1c8d0:	xor    ecx,ecx
   1c8d2:	mov    rdi,r12
   1c8d5:	call   5a00 <xc_dom_alloc_segment@plt>
   1c8da:	test   eax,eax
   1c8dc:	mov    r13d,eax
   1c8df:	jne    1ca01 <alloc_magic_pages_hvm+0x351>
   1c8e5:	mov    r8d,0xfeffe
   1c8eb:	mov    ecx,0x3
   1c8f0:	mov    edx,0x1000
   1c8f5:	mov    esi,ebp
   1c8f7:	mov    rdi,rbx
   1c8fa:	call   6590 <xc_map_foreign_range@plt>
   1c8ff:	test   rax,rax
   1c902:	je     1ca2f <alloc_magic_pages_hvm+0x37f>
   1c908:	xor    edx,edx
   1c90a:	nop    WORD PTR [rax+rax*1+0x0]
   1c910:	mov    ecx,edx
   1c912:	shl    ecx,0x16
   1c915:	or     cl,0xe7
   1c918:	mov    DWORD PTR [rax+rdx*4],ecx
   1c91b:	add    rdx,0x1
   1c91f:	cmp    rdx,0x400
   1c926:	jne    1c910 <alloc_magic_pages_hvm+0x260>
   1c928:	mov    esi,0x1000
   1c92d:	mov    rdi,rax
   1c930:	call   61b0 <munmap@plt>
   1c935:	mov    ecx,0xfeffe000
   1c93a:	mov    edx,0xc
   1c93f:	mov    esi,ebp
   1c941:	mov    rdi,rbx
   1c944:	call   6050 <xc_hvm_param_set@plt>
   1c949:	mov    esi,DWORD PTR [r12+0x4d0]
   1c951:	mov    rdi,QWORD PTR [r12+0x4c8]
   1c959:	mov    ecx,0x1
   1c95e:	mov    edx,0xfefff
   1c963:	mov    QWORD PTR [r12+0x3f0],0xfefff
   1c96f:	call   5910 <xc_clear_domain_pages@plt>
   1c974:	mov    esi,DWORD PTR [r12+0x4d0]
   1c97c:	mov    rdi,QWORD PTR [r12+0x4c8]
   1c984:	mov    ecx,0x1
   1c989:	mov    QWORD PTR [r12+0x3f8],0xfeffc
   1c995:	mov    edx,0xfeffc
   1c99a:	call   5910 <xc_clear_domain_pages@plt>
   1c99f:	mov    QWORD PTR [r12+0x300],0xffffffffffffffff
   1c9ab:	mov    rbx,QWORD PTR [rsp+0x88]
   1c9b3:	xor    rbx,QWORD PTR fs:0x28
   1c9bc:	mov    eax,r13d
   1c9bf:	jne    1ca5b <alloc_magic_pages_hvm+0x3ab>
   1c9c5:	add    rsp,0x98
   1c9cc:	pop    rbx
   1c9cd:	pop    rbp
   1c9ce:	pop    r12
   1c9d0:	pop    r13
   1c9d2:	ret    
   1c9d3:	mov    rdi,QWORD PTR [r12+0xb0]
   1c9db:	test   rdi,rdi
   1c9de:	je     1c8be <alloc_magic_pages_hvm+0x20e>
   1c9e4:	call   5b50 <strlen@plt>
   1c9e9:	add    rax,0x100
   1c9ef:	xor    al,al
   1c9f1:	mov    QWORD PTR [r12+0xb8],rax
   1c9f9:	add    r13,rax
   1c9fc:	jmp    1c8be <alloc_magic_pages_hvm+0x20e>
   1ca01:	mov    rdi,QWORD PTR [r12+0x4c8]
   1ca09:	lea    rsi,[rip+0xaa00]        # 27410 <__FUNCTION__.12544+0x460>
   1ca10:	xor    eax,eax
   1ca12:	call   5b60 <xc_dom_printf@plt>
   1ca17:	jmp    1c9ab <alloc_magic_pages_hvm+0x2fb>
   1ca19:	mov    rdi,QWORD PTR [r12+0x4c8]
   1ca21:	lea    rsi,[rip+0xa9c0]        # 273e8 <__FUNCTION__.12544+0x438>
   1ca28:	xor    eax,eax
   1ca2a:	call   5b60 <xc_dom_printf@plt>
   1ca2f:	mov    r13d,0xffffffff
   1ca35:	jmp    1c9ab <alloc_magic_pages_hvm+0x2fb>
   1ca3a:	mov    rdi,QWORD PTR [r12+0x4c8]
   1ca42:	lea    rsi,[rip+0xa977]        # 273c0 <__FUNCTION__.12544+0x410>
   1ca49:	xor    eax,eax
   1ca4b:	mov    r13d,0xffffffff
   1ca51:	call   5b60 <xc_dom_printf@plt>
   1ca56:	jmp    1c9ab <alloc_magic_pages_hvm+0x2fb>
   1ca5b:	call   5b80 <__stack_chk_fail@plt>

000000000001ca60 <alloc_pgtables>:
   1ca60:	push   r14
   1ca62:	push   r13
   1ca64:	mov    r14,rdi
   1ca67:	push   r12
   1ca69:	push   rbp
   1ca6a:	xor    ebp,ebp
   1ca6c:	push   rbx
   1ca6d:	mov    r13,QWORD PTR [rdi+0x910]
   1ca74:	mov    rcx,QWORD PTR [rdi+0x418]
   1ca7b:	mov    eax,DWORD PTR [r13+0x0]
   1ca7f:	lea    rax,[rax+rax*4]
   1ca83:	shl    rax,0x5
   1ca87:	lea    r12,[r13+rax*1+0x8]
   1ca8c:	mov    eax,DWORD PTR [rdi+0x438]
   1ca92:	test   eax,eax
   1ca94:	setne  bpl
   1ca98:	sub    ebp,0xffffff80
   1ca9b:	movsxd rax,ebp
   1ca9e:	jmp    1cac3 <alloc_pgtables+0x63>
   1caa0:	mov    eax,DWORD PTR [r12+0x18]
   1caa5:	mov    rcx,QWORD PTR [r14+0x418]
   1caac:	add    rbx,0x1
   1cab0:	add    eax,ebp
   1cab2:	cdqe   
   1cab4:	mov    rdx,rax
   1cab7:	shl    rdx,0xc
   1cabb:	add    rdx,rcx
   1cabe:	cmp    rdx,rbx
   1cac1:	jbe    1cb00 <alloc_pgtables+0xa0>
   1cac3:	shl    rax,0xc
   1cac7:	mov    rsi,QWORD PTR [r14+0x2f0]
   1cace:	mov    rdi,r14
   1cad1:	lea    rbx,[rax+rcx*1]
   1cad5:	xor    ecx,ecx
   1cad7:	or     rbx,0x3fffff
   1cade:	mov    rdx,rbx
   1cae1:	call   1c280 <count_pgtables>
   1cae6:	test   eax,eax
   1cae8:	je     1caa0 <alloc_pgtables+0x40>
   1caea:	pop    rbx
   1caeb:	mov    eax,0xffffffff
   1caf0:	pop    rbp
   1caf1:	pop    r12
   1caf3:	pop    r13
   1caf5:	pop    r14
   1caf7:	ret    
   1caf8:	nop    DWORD PTR [rax+rax*1+0x0]
   1cb00:	mov    QWORD PTR [r12+0x10],0x0
   1cb09:	add    DWORD PTR [r13+0x0],0x1
   1cb0e:	lea    rsi,[r14+0x388]
   1cb15:	mov    QWORD PTR [r14+0x440],rbx
   1cb1c:	mov    r8d,DWORD PTR [r12+0x18]
   1cb21:	mov    rdi,r14
   1cb24:	pop    rbx
   1cb25:	pop    rbp
   1cb26:	pop    r12
   1cb28:	pop    r13
   1cb2a:	pop    r14
   1cb2c:	lea    rdx,[rip+0xa589]        # 270bc <__FUNCTION__.12544+0x10c>
   1cb33:	shl    r8,0xc
   1cb37:	xor    ecx,ecx
   1cb39:	jmp    5a00 <xc_dom_alloc_segment@plt>
   1cb3e:	xchg   ax,ax

000000000001cb40 <alloc_pgtables_x86_64>:
   1cb40:	mov    rax,QWORD PTR [rdi+0x910]
   1cb47:	lea    rdx,[rip+0x210e12]        # 22d960 <x86_64_params>
   1cb4e:	mov    QWORD PTR [rax+0x148],rdx
   1cb55:	jmp    1ca60 <alloc_pgtables>
   1cb5a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cb60 <alloc_pgtables_x86_32_pae>:
   1cb60:	mov    rax,QWORD PTR [rdi+0x910]
   1cb67:	lea    rdx,[rip+0x210e32]        # 22d9a0 <x86_32_params>
   1cb6e:	mov    QWORD PTR [rax+0x148],rdx
   1cb75:	jmp    1ca60 <alloc_pgtables>
   1cb7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cb80 <alloc_p2m_list>:
   1cb80:	push   rbx
   1cb81:	mov    r8,rsi
   1cb84:	lea    rdx,[rip+0xa53d]        # 270c8 <__FUNCTION__.12544+0x118>
   1cb8b:	lea    rsi,[rdi+0x368]
   1cb92:	xor    ecx,ecx
   1cb94:	mov    rbx,rdi
   1cb97:	call   5a00 <xc_dom_alloc_segment@plt>
   1cb9c:	test   eax,eax
   1cb9e:	jne    1cbd0 <alloc_p2m_list+0x50>
   1cba0:	mov    rdx,QWORD PTR [rbx+0x380]
   1cba7:	mov    rsi,QWORD PTR [rbx+0x378]
   1cbae:	mov    rdi,rbx
   1cbb1:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1cbb6:	test   rax,rax
   1cbb9:	mov    QWORD PTR [rbx+0x458],rax
   1cbc0:	sete   al
   1cbc3:	movzx  eax,al
   1cbc6:	neg    eax
   1cbc8:	pop    rbx
   1cbc9:	ret    
   1cbca:	nop    WORD PTR [rax+rax*1+0x0]
   1cbd0:	mov    eax,0xffffffff
   1cbd5:	pop    rbx
   1cbd6:	ret    
   1cbd7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cbe0 <alloc_p2m_list_x86_64>:
   1cbe0:	push   r13
   1cbe2:	push   r12
   1cbe4:	push   rbp
   1cbe5:	push   rbx
   1cbe6:	mov    rbp,rdi
   1cbe9:	sub    rsp,0x8
   1cbed:	mov    rax,QWORD PTR [rdi+0x918]
   1cbf4:	mov    rsi,QWORD PTR [rdi+0x310]
   1cbfb:	movsxd rbx,DWORD PTR [rax+0x64]
   1cbff:	imul   rbx,QWORD PTR [rdi+0x470]
   1cc07:	add    rbx,0xfff
   1cc0e:	and    rbx,0xfffffffffffff000
   1cc15:	cmp    rsi,0xffffffffffffffff
   1cc19:	je     1cc82 <alloc_p2m_list_x86_64+0xa2>
   1cc1b:	mov    r12,QWORD PTR [rdi+0x910]
   1cc22:	mov    rcx,QWORD PTR [rdi+0x410]
   1cc29:	lea    rdx,[rsi+rbx*1-0x1]
   1cc2e:	mov    r13d,DWORD PTR [r12]
   1cc32:	call   1c280 <count_pgtables>
   1cc37:	test   eax,eax
   1cc39:	jne    1cc97 <alloc_p2m_list_x86_64+0xb7>
   1cc3b:	mov    eax,r13d
   1cc3e:	mov    rsi,rbx
   1cc41:	lea    rax,[rax+rax*4]
   1cc45:	shr    rsi,0xc
   1cc49:	shl    rax,0x5
   1cc4d:	lea    rdx,[r12+rax*1+0x8]
   1cc52:	mov    rax,QWORD PTR [rbp+0x410]
   1cc59:	lea    rcx,[rdx+0xb0]
   1cc60:	mov    QWORD PTR [rdx+0x10],rax
   1cc64:	lea    rax,[rdx+0x30]
   1cc68:	add    QWORD PTR [rax],rsi
   1cc6b:	add    rax,0x20
   1cc6f:	cmp    rax,rcx
   1cc72:	jne    1cc68 <alloc_p2m_list_x86_64+0x88>
   1cc74:	add    DWORD PTR [r12],0x1
   1cc79:	mov    eax,DWORD PTR [rdx+0x18]
   1cc7c:	shl    eax,0xc
   1cc7f:	add    rbx,rax
   1cc82:	add    rsp,0x8
   1cc86:	mov    rsi,rbx
   1cc89:	mov    rdi,rbp
   1cc8c:	pop    rbx
   1cc8d:	pop    rbp
   1cc8e:	pop    r12
   1cc90:	pop    r13
   1cc92:	jmp    1cb80 <alloc_p2m_list>
   1cc97:	add    rsp,0x8
   1cc9b:	mov    eax,0xffffffff
   1cca0:	pop    rbx
   1cca1:	pop    rbp
   1cca2:	pop    r12
   1cca4:	pop    r13
   1cca6:	ret    
   1cca7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001ccb0 <alloc_p2m_list_x86_32>:
   1ccb0:	mov    rax,QWORD PTR [rdi+0x918]
   1ccb7:	movsxd rsi,DWORD PTR [rax+0x64]
   1ccbb:	imul   rsi,QWORD PTR [rdi+0x470]
   1ccc3:	add    rsi,0xfff
   1ccca:	and    rsi,0xfffffffffffff000
   1ccd1:	jmp    1cb80 <alloc_p2m_list>
   1ccd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001cce0 <bootearly>:
   1cce0:	mov    edx,DWORD PTR [rdi+0x928]
   1cce6:	xor    eax,eax
   1cce8:	test   edx,edx
   1ccea:	jne    1ccf5 <bootearly+0x15>
   1ccec:	test   BYTE PTR [rdi+0x448],0x4
   1ccf3:	jne    1ccf7 <bootearly+0x17>
   1ccf5:	repz ret 
   1ccf7:	sub    rsp,0x8
   1ccfb:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1cd02:	lea    rsi,[rip+0xa737]        # 27440 <__FUNCTION__.12544+0x490>
   1cd09:	call   5b60 <xc_dom_printf@plt>
   1cd0e:	call   5940 <__errno_location@plt>
   1cd13:	mov    DWORD PTR [rax],0x5f
   1cd19:	mov    eax,0xffffffff
   1cd1e:	add    rsp,0x8
   1cd22:	ret    
   1cd23:	nop    DWORD PTR [rax]
   1cd26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001cd30 <add_module_to_list.isra.3>:
   1cd30:	mov    eax,DWORD PTR [rsi]
   1cd32:	test   eax,eax
   1cd34:	je     1cdd0 <add_module_to_list.isra.3+0xa0>
   1cd3a:	push   r15
   1cd3c:	push   r14
   1cd3e:	mov    r15,rcx
   1cd41:	push   r13
   1cd43:	push   r12
   1cd45:	mov    r14,r8
   1cd48:	push   rbp
   1cd49:	push   rbx
   1cd4a:	mov    rbp,r9
   1cd4d:	mov    r13,rdi
   1cd50:	sub    rsp,0x8
   1cd54:	mov    r12d,DWORD PTR [r9+0xc]
   1cd58:	cmp    r12d,0x1
   1cd5c:	ja     1cdf1 <add_module_to_list.isra.3+0xc1>
   1cd62:	mov    rax,QWORD PTR [rdx]
   1cd65:	mov    ebx,r12d
   1cd68:	shl    rbx,0x5
   1cd6c:	add    rbx,r8
   1cd6f:	test   rcx,rcx
   1cd72:	mov    QWORD PTR [rbx],rax
   1cd75:	mov    eax,DWORD PTR [rsi]
   1cd77:	mov    QWORD PTR [rbx+0x8],rax
   1cd7b:	je     1cdbb <add_module_to_list.isra.3+0x8b>
   1cd7d:	mov    esi,0x400
   1cd82:	mov    rdi,rcx
   1cd85:	call   5cc0 <strnlen@plt>
   1cd8a:	cmp    rax,0x3ff
   1cd90:	ja     1cdd2 <add_module_to_list.isra.3+0xa2>
   1cd92:	shl    r12d,0xa
   1cd96:	mov    edx,0x400
   1cd9b:	mov    rsi,r15
   1cd9e:	lea    rdi,[r14+r12*1+0x40]
   1cda3:	shl    r13,0xc
   1cda7:	call   5980 <strncpy@plt>
   1cdac:	lea    rax,[r14+r13*1+0x40]
   1cdb1:	sub    rax,rbp
   1cdb4:	add    r12,rax
   1cdb7:	mov    QWORD PTR [rbx+0x10],r12
   1cdbb:	add    DWORD PTR [rbp+0xc],0x1
   1cdbf:	add    rsp,0x8
   1cdc3:	pop    rbx
   1cdc4:	pop    rbp
   1cdc5:	pop    r12
   1cdc7:	pop    r13
   1cdc9:	pop    r14
   1cdcb:	pop    r15
   1cdcd:	ret    
   1cdce:	xchg   ax,ax
   1cdd0:	repz ret 
   1cdd2:	lea    rcx,[rip+0xac17]        # 279f0 <__PRETTY_FUNCTION__.13026>
   1cdd9:	lea    rsi,[rip+0xa2a6]        # 27086 <__FUNCTION__.12544+0xd6>
   1cde0:	lea    rdi,[rip+0xa6c1]        # 274a8 <__FUNCTION__.12544+0x4f8>
   1cde7:	mov    edx,0x6cd
   1cdec:	call   5c70 <__assert_fail@plt>
   1cdf1:	lea    rcx,[rip+0xabf8]        # 279f0 <__PRETTY_FUNCTION__.13026>
   1cdf8:	lea    rsi,[rip+0xa287]        # 27086 <__FUNCTION__.12544+0xd6>
   1cdff:	lea    rdi,[rip+0xa66a]        # 27470 <__FUNCTION__.12544+0x4c0>
   1ce06:	mov    edx,0x6c5
   1ce0b:	call   5c70 <__assert_fail@plt>

000000000001ce10 <bootlate_hvm>:
   1ce10:	push   r15
   1ce12:	push   r14
   1ce14:	push   r13
   1ce16:	push   r12
   1ce18:	push   rbp
   1ce19:	push   rbx
   1ce1a:	mov    rbx,rdi
   1ce1d:	sub    rsp,0x48
   1ce21:	mov    rdx,QWORD PTR [rbx+0x3e0]
   1ce28:	mov    esi,DWORD PTR [rdi+0x4d0]
   1ce2e:	mov    rax,QWORD PTR fs:0x28
   1ce37:	mov    QWORD PTR [rsp+0x38],rax
   1ce3c:	xor    eax,eax
   1ce3e:	mov    rax,QWORD PTR [rbx+0x918]
   1ce45:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1ce4c:	mov    r8,QWORD PTR [rbx+0x3d8]
   1ce53:	mov    DWORD PTR [rsp+0x14],esi
   1ce57:	mov    ecx,DWORD PTR [rax+0x60]
   1ce5a:	mov    QWORD PTR [rsp+0x18],rdi
   1ce5f:	shl    rdx,cl
   1ce62:	mov    ecx,0x3
   1ce67:	call   6590 <xc_map_foreign_range@plt>
   1ce6c:	test   rax,rax
   1ce6f:	je     1d186 <bootlate_hvm+0x376>
   1ce75:	mov    rdx,QWORD PTR [rbx+0xb8]
   1ce7c:	cmp    BYTE PTR [rbx+0x960],0x0
   1ce83:	mov    rbp,rax
   1ce86:	lea    rax,[rdx+0x38]
   1ce8a:	mov    QWORD PTR [rsp+0x8],rax
   1ce8f:	lea    r12,[rbp+rax*1+0x0]
   1ce94:	jne    1d150 <bootlate_hvm+0x340>
   1ce9a:	mov    rsi,QWORD PTR [rbx+0xb0]
   1cea1:	test   rsi,rsi
   1cea4:	je     1cec2 <bootlate_hvm+0xb2>
   1cea6:	lea    rdi,[rbp+0x38]
   1ceaa:	call   5980 <strncpy@plt>
   1ceaf:	mov    rax,QWORD PTR [rbx+0x3d8]
   1ceb6:	shl    rax,0xc
   1ceba:	add    rax,0x38
   1cebe:	mov    QWORD PTR [rbp+0x18],rax
   1cec2:	mov    rax,QWORD PTR [rbx+0x990]
   1cec9:	mov    QWORD PTR [rbp+0x20],rax
   1cecd:	mov    ecx,DWORD PTR [rbx+0x10]
   1ced0:	test   ecx,ecx
   1ced2:	je     1cf52 <bootlate_hvm+0x142>
   1ced4:	lea    r14,[rbx+0x28]
   1ced8:	lea    r13,[rsp+0x20]
   1cedd:	xor    r15d,r15d
   1cee0:	mov    rax,QWORD PTR [rbx+0x2f0]
   1cee7:	mov    rdx,QWORD PTR [r14+0x8]
   1ceeb:	mov    edi,0x0
   1cef0:	mov    r8d,DWORD PTR [r14+0x10]
   1cef4:	lea    rsi,[rip+0xa625]        # 27520 <__FUNCTION__.12544+0x570>
   1cefb:	cmp    rax,0xffffffffffffffff
   1ceff:	mov    rcx,rdx
   1cf02:	cmove  rax,rdi
   1cf06:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1cf0d:	sub    r8d,edx
   1cf10:	sub    rcx,rax
   1cf13:	mov    edx,r15d
   1cf16:	xor    eax,eax
   1cf18:	mov    QWORD PTR [rsp+0x30],rcx
   1cf1d:	mov    DWORD PTR [rsp+0x28],r8d
   1cf22:	add    r15d,0x1
   1cf26:	call   5b60 <xc_dom_printf@plt>
   1cf2b:	mov    rcx,QWORD PTR [r14]
   1cf2e:	mov    rdi,QWORD PTR [rbx+0x3d8]
   1cf35:	lea    rdx,[r13+0x10]
   1cf39:	lea    rsi,[r13+0x8]
   1cf3d:	mov    r9,rbp
   1cf40:	mov    r8,r12
   1cf43:	add    r14,0x38
   1cf47:	call   1cd30 <add_module_to_list.isra.3>
   1cf4c:	cmp    DWORD PTR [rbx+0x10],r15d
   1cf50:	ja     1cee0 <bootlate_hvm+0xd0>
   1cf52:	mov    rax,QWORD PTR [rbx+0x3d8]
   1cf59:	mov    rdi,QWORD PTR [rsp+0x8]
   1cf5e:	mov    edx,DWORD PTR [rbp+0xc]
   1cf61:	shl    rax,0xc
   1cf65:	add    rax,rdi
   1cf68:	test   edx,edx
   1cf6a:	je     1cf7e <bootlate_hvm+0x16e>
   1cf6c:	mov    QWORD PTR [rbp+0x10],rax
   1cf70:	mov    rax,QWORD PTR [rbx+0x3d8]
   1cf77:	shl    rax,0xc
   1cf7b:	add    rax,rdi
   1cf7e:	add    rax,0x840
   1cf84:	mov    QWORD PTR [rbp+0x28],rax
   1cf88:	mov    eax,DWORD PTR [rbx+0xa00]
   1cf8e:	mov    DWORD PTR [rbp+0x30],eax
   1cf91:	mov    eax,DWORD PTR [rbx+0xa00]
   1cf97:	test   eax,eax
   1cf99:	je     1cff1 <bootlate_hvm+0x1e1>
   1cf9b:	xor    edx,edx
   1cf9d:	nop    DWORD PTR [rax]
   1cfa0:	mov    rdi,QWORD PTR [rbx+0x9f8]
   1cfa7:	mov    eax,edx
   1cfa9:	add    edx,0x1
   1cfac:	lea    rsi,[rax+rax*4]
   1cfb0:	lea    rax,[rax+rax*2]
   1cfb4:	lea    rcx,[rsi*4+0x0]
   1cfbc:	mov    rsi,QWORD PTR [rdi+rsi*4]
   1cfc0:	lea    rax,[r12+rax*8+0x840]
   1cfc8:	mov    QWORD PTR [rax],rsi
   1cfcb:	mov    rsi,QWORD PTR [rbx+0x9f8]
   1cfd2:	mov    rsi,QWORD PTR [rsi+rcx*1+0x8]
   1cfd7:	mov    QWORD PTR [rax+0x8],rsi
   1cfdb:	mov    rsi,QWORD PTR [rbx+0x9f8]
   1cfe2:	mov    ecx,DWORD PTR [rsi+rcx*1+0x10]
   1cfe6:	mov    DWORD PTR [rax+0x10],ecx
   1cfe9:	cmp    DWORD PTR [rbx+0xa00],edx
   1cfef:	ja     1cfa0 <bootlate_hvm+0x190>
   1cff1:	movabs rax,0x1336ec578
   1cffb:	mov    rdi,rbp
   1cffe:	mov    QWORD PTR [rbp+0x0],rax
   1d002:	mov    rax,QWORD PTR [rbx+0x918]
   1d009:	mov    rsi,QWORD PTR [rbx+0x3e0]
   1d010:	mov    ecx,DWORD PTR [rax+0x60]
   1d013:	shl    rsi,cl
   1d016:	call   61b0 <munmap@plt>
   1d01b:	xor    eax,eax
   1d01d:	cmp    BYTE PTR [rbx+0x960],0x0
   1d024:	jne    1d050 <bootlate_hvm+0x240>
   1d026:	mov    rdi,QWORD PTR [rsp+0x38]
   1d02b:	xor    rdi,QWORD PTR fs:0x28
   1d034:	jne    1d1a5 <bootlate_hvm+0x395>
   1d03a:	add    rsp,0x48
   1d03e:	pop    rbx
   1d03f:	pop    rbp
   1d040:	pop    r12
   1d042:	pop    r13
   1d044:	pop    r14
   1d046:	pop    r15
   1d048:	ret    
   1d049:	nop    DWORD PTR [rax+0x0]
   1d050:	mov    esi,DWORD PTR [rsp+0x14]
   1d054:	mov    rdi,QWORD PTR [rsp+0x18]
   1d059:	mov    r8d,0x9f
   1d05f:	mov    ecx,0x3
   1d064:	mov    edx,0x1000
   1d069:	call   6590 <xc_map_foreign_range@plt>
   1d06e:	test   rax,rax
   1d071:	mov    r8,rax
   1d074:	je     1d17c <bootlate_hvm+0x36c>
   1d07a:	lea    rdi,[rax+0x8]
   1d07e:	mov    rcx,rax
   1d081:	mov    QWORD PTR [rax],0x0
   1d088:	mov    QWORD PTR [rax+0xff8],0x0
   1d093:	xor    eax,eax
   1d095:	xor    edx,edx
   1d097:	and    rdi,0xfffffffffffffff8
   1d09b:	pcmpeqd xmm0,xmm0
   1d09f:	sub    rcx,rdi
   1d0a2:	add    ecx,0x1000
   1d0a8:	shr    ecx,0x3
   1d0ab:	rep stos QWORD PTR es:[rdi],rax
   1d0ae:	movabs rax,0x4f464e49204d5648
   1d0b8:	mov    DWORD PTR [r8+0x808],0x30
   1d0c3:	mov    BYTE PTR [r8+0x80d],0x1
   1d0cb:	mov    QWORD PTR [r8+0x800],rax
   1d0d2:	mov    DWORD PTR [r8+0x810],0x1
   1d0dd:	lea    rcx,[r8+0x830]
   1d0e4:	movups XMMWORD PTR [r8+0x820],xmm0
   1d0ec:	mov    rax,QWORD PTR [rbx+0x948]
   1d0f3:	shr    rax,0xc
   1d0f7:	mov    DWORD PTR [r8+0x814],eax
   1d0fe:	mov    rax,QWORD PTR [rbx+0x950]
   1d105:	mov    DWORD PTR [r8+0x818],0xfeff0
   1d110:	shr    rax,0xc
   1d114:	mov    DWORD PTR [r8+0x81c],eax
   1d11b:	lea    rax,[r8+0x800]
   1d122:	nop    WORD PTR [rax+rax*1+0x0]
   1d128:	add    dl,BYTE PTR [rax]
   1d12a:	add    rax,0x1
   1d12e:	cmp    rcx,rax
   1d131:	jne    1d128 <bootlate_hvm+0x318>
   1d133:	neg    edx
   1d135:	mov    esi,0x1000
   1d13a:	mov    rdi,r8
   1d13d:	mov    BYTE PTR [r8+0x80c],dl
   1d144:	call   61b0 <munmap@plt>
   1d149:	xor    eax,eax
   1d14b:	jmp    1d026 <bootlate_hvm+0x216>
   1d150:	mov    rdi,QWORD PTR [rbx+0x3d8]
   1d157:	lea    rdx,[rbx+0x978]
   1d15e:	lea    rsi,[rbx+0x970]
   1d165:	lea    rcx,[rip+0x9f66]        # 270d2 <__FUNCTION__.12544+0x122>
   1d16c:	mov    r9,rbp
   1d16f:	mov    r8,r12
   1d172:	call   1cd30 <add_module_to_list.isra.3>
   1d177:	jmp    1cecd <bootlate_hvm+0xbd>
   1d17c:	mov    eax,0xffffffff
   1d181:	jmp    1d026 <bootlate_hvm+0x216>
   1d186:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d18d:	lea    rsi,[rip+0xa364]        # 274f8 <__FUNCTION__.12544+0x548>
   1d194:	xor    eax,eax
   1d196:	call   5b60 <xc_dom_printf@plt>
   1d19b:	mov    eax,0xffffffff
   1d1a0:	jmp    1d026 <bootlate_hvm+0x216>
   1d1a5:	call   5b80 <__stack_chk_fail@plt>
   1d1aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000001d1b0 <vcpu_hvm>:
   1d1b0:	push   r15
   1d1b2:	push   r14
   1d1b4:	lea    rdx,[rip+0xa81d]        # 279d8 <__FUNCTION__.12823>
   1d1bb:	push   r13
   1d1bd:	push   r12
   1d1bf:	lea    rsi,[rip+0x81b5]        # 2537b <deep_features.2995+0x23b>
   1d1c6:	push   rbp
   1d1c7:	push   rbx
   1d1c8:	mov    rbx,rdi
   1d1cb:	sub    rsp,0x568
   1d1d2:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1d1d9:	mov    rax,QWORD PTR fs:0x28
   1d1e2:	mov    QWORD PTR [rsp+0x558],rax
   1d1ea:	xor    eax,eax
   1d1ec:	call   5b60 <xc_dom_printf@plt>
   1d1f1:	mov    eax,DWORD PTR [rbx+0xa10]
   1d1f7:	test   eax,eax
   1d1f9:	je     1d6bc <vcpu_hvm+0x50c>
   1d1ff:	mov    esi,DWORD PTR [rbx+0x4d0]
   1d205:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d20c:	xor    ecx,ecx
   1d20e:	xor    edx,edx
   1d210:	call   5c50 <xc_domain_hvm_getcontext@plt>
   1d215:	test   eax,eax
   1d217:	mov    r14d,eax
   1d21a:	jle    1d610 <vcpu_hvm+0x460>
   1d220:	mov    edi,0x1
   1d225:	movsxd rsi,eax
   1d228:	call   5de0 <calloc@plt>
   1d22d:	test   rax,rax
   1d230:	mov    rbp,rax
   1d233:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d23a:	je     1d682 <vcpu_hvm+0x4d2>
   1d240:	mov    esi,DWORD PTR [rbx+0x4d0]
   1d246:	mov    ecx,r14d
   1d249:	mov    rdx,rax
   1d24c:	call   5c50 <xc_domain_hvm_getcontext@plt>
   1d251:	test   eax,eax
   1d253:	mov    r14d,eax
   1d256:	jle    1d5a0 <vcpu_hvm+0x3f0>
   1d25c:	lea    r13,[rsp+0x120]
   1d264:	xor    eax,eax
   1d266:	mov    ecx,0x87
   1d26b:	movdqu xmm0,XMMWORD PTR [rbp+0x0]
   1d270:	mov    r9d,0x2
   1d276:	mov    rdi,r13
   1d279:	rep stos QWORD PTR es:[rdi],rax
   1d27c:	movabs rax,0x67ffffffff
   1d286:	mov    WORD PTR [rsp+0x140],r9w
   1d28f:	mov    DWORD PTR [rsp+0x144],0x408
   1d29a:	mov    QWORD PTR [rsp+0x45c],rax
   1d2a2:	movabs rax,0xc9300000c9b
   1d2ac:	mov    QWORD PTR [rsp+0x448],0xffffffffffffffff
   1d2b8:	mov    QWORD PTR [rsp+0x4c0],rax
   1d2c0:	movabs rax,0x8b00000c93
   1d2ca:	mov    QWORD PTR [rsp+0x3d8],0x11
   1d2d6:	mov    QWORD PTR [rsp+0x4d4],rax
   1d2de:	mov    eax,DWORD PTR [rbx+0x328]
   1d2e4:	movaps XMMWORD PTR [rsp+0x120],xmm0
   1d2ec:	mov    QWORD PTR [rsp+0x420],0x400
   1d2f8:	mov    QWORD PTR [rsp+0x3c8],rax
   1d300:	mov    eax,0xffff0ff0
   1d305:	mov    QWORD PTR [rsp+0x418],rax
   1d30d:	mov    rax,QWORD PTR [rbx+0x3d8]
   1d314:	movdqu xmm0,XMMWORD PTR [rbp+0x10]
   1d319:	test   rax,rax
   1d31c:	movaps XMMWORD PTR [rsp+0x130],xmm0
   1d324:	je     1d332 <vcpu_hvm+0x182>
   1d326:	shl    rax,0xc
   1d32a:	mov    QWORD PTR [rsp+0x350],rax
   1d332:	cmp    BYTE PTR [rbx+0x960],0x0
   1d339:	jne    1d540 <vcpu_hvm+0x390>
   1d33f:	mov    r12,rsp
   1d342:	xor    eax,eax
   1d344:	mov    ecx,0x24
   1d349:	mov    rdi,r12
   1d34c:	movzx  edx,WORD PTR [rbp+0x0]
   1d350:	mov    r8d,0xe
   1d356:	rep stos QWORD PTR es:[rdi],rax
   1d359:	mov    rax,QWORD PTR [rsp+0x120]
   1d361:	mov    WORD PTR [rsp+0x20],r8w
   1d367:	movdqu xmm0,XMMWORD PTR [rsp+0x128]
   1d370:	test   dx,dx
   1d373:	mov    DWORD PTR [rsp+0x24],0xf0
   1d37b:	mov    QWORD PTR [rsp],rax
   1d37f:	mov    rax,QWORD PTR [rsp+0x138]
   1d387:	movups XMMWORD PTR [rsp+0x8],xmm0
   1d38c:	mov    QWORD PTR [rsp+0x18],rax
   1d391:	mov    rax,QWORD PTR [rsp+0x550]
   1d399:	mov    QWORD PTR [rsp+0x118],rax
   1d3a1:	je     1d650 <vcpu_hvm+0x4a0>
   1d3a7:	mov    rax,rbp
   1d3aa:	jmp    1d3c4 <vcpu_hvm+0x214>
   1d3ac:	nop    DWORD PTR [rax+0x0]
   1d3b0:	mov    edx,DWORD PTR [rax+0x4]
   1d3b3:	lea    rax,[rax+rdx*1+0x8]
   1d3b8:	movzx  edx,WORD PTR [rax]
   1d3bb:	test   dx,dx
   1d3be:	je     1d650 <vcpu_hvm+0x4a0>
   1d3c4:	cmp    dx,0xe
   1d3c8:	jne    1d3b0 <vcpu_hvm+0x200>
   1d3ca:	cmp    WORD PTR [rax+0x2],0x0
   1d3cf:	jne    1d3b0 <vcpu_hvm+0x200>
   1d3d1:	cmp    rax,0xfffffffffffffff8
   1d3d5:	je     1d650 <vcpu_hvm+0x4a0>
   1d3db:	movdqu xmm0,XMMWORD PTR [rax+0x8]
   1d3e0:	mov    edi,DWORD PTR [rbx+0xa10]
   1d3e6:	movups XMMWORD PTR [rsp+0x28],xmm0
   1d3eb:	test   edi,edi
   1d3ed:	movdqu xmm0,XMMWORD PTR [rax+0x18]
   1d3f2:	movups XMMWORD PTR [rsp+0x38],xmm0
   1d3f7:	movdqu xmm0,XMMWORD PTR [rax+0x28]
   1d3fc:	movups XMMWORD PTR [rsp+0x48],xmm0
   1d401:	movdqu xmm0,XMMWORD PTR [rax+0x38]
   1d406:	movups XMMWORD PTR [rsp+0x58],xmm0
   1d40b:	movdqu xmm0,XMMWORD PTR [rax+0x48]
   1d410:	movups XMMWORD PTR [rsp+0x68],xmm0
   1d415:	movdqu xmm0,XMMWORD PTR [rax+0x58]
   1d41a:	movups XMMWORD PTR [rsp+0x78],xmm0
   1d41f:	movdqu xmm0,XMMWORD PTR [rax+0x68]
   1d424:	movups XMMWORD PTR [rsp+0x88],xmm0
   1d42c:	movdqu xmm0,XMMWORD PTR [rax+0x78]
   1d431:	movups XMMWORD PTR [rsp+0x98],xmm0
   1d439:	movdqu xmm0,XMMWORD PTR [rax+0x88]
   1d441:	movups XMMWORD PTR [rsp+0xa8],xmm0
   1d449:	movdqu xmm0,XMMWORD PTR [rax+0x98]
   1d451:	movups XMMWORD PTR [rsp+0xb8],xmm0
   1d459:	movdqu xmm0,XMMWORD PTR [rax+0xa8]
   1d461:	movups XMMWORD PTR [rsp+0xc8],xmm0
   1d469:	movdqu xmm0,XMMWORD PTR [rax+0xb8]
   1d471:	movups XMMWORD PTR [rsp+0xd8],xmm0
   1d479:	movdqu xmm0,XMMWORD PTR [rax+0xc8]
   1d481:	movups XMMWORD PTR [rsp+0xe8],xmm0
   1d489:	movdqu xmm0,XMMWORD PTR [rax+0xd8]
   1d491:	movups XMMWORD PTR [rsp+0xf8],xmm0
   1d499:	movdqu xmm0,XMMWORD PTR [rax+0xe8]
   1d4a1:	movups XMMWORD PTR [rsp+0x108],xmm0
   1d4a9:	mov    QWORD PTR [rsp+0x110],0x806
   1d4b5:	je     1d540 <vcpu_hvm+0x390>
   1d4bb:	xor    r14d,r14d
   1d4be:	lea    r15,[rip+0xa4f3]        # 279b8 <__func__.12825>
   1d4c5:	jmp    1d4dd <vcpu_hvm+0x32d>
   1d4c7:	nop    WORD PTR [rax+rax*1+0x0]
   1d4d0:	add    r14d,0x1
   1d4d4:	cmp    DWORD PTR [rbx+0xa10],r14d
   1d4db:	jbe    1d540 <vcpu_hvm+0x390>
   1d4dd:	mov    esi,DWORD PTR [rbx+0x4d0]
   1d4e3:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d4ea:	mov    ecx,0x120
   1d4ef:	mov    rdx,r12
   1d4f2:	mov    WORD PTR [rsp+0x22],r14w
   1d4f8:	call   61d0 <xc_domain_hvm_setcontext@plt>
   1d4fd:	test   eax,eax
   1d4ff:	je     1d4d0 <vcpu_hvm+0x320>
   1d501:	sub    rsp,0x8
   1d505:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d50c:	lea    rsi,[rip+0x9b73]        # 27086 <__FUNCTION__.12544+0xd6>
   1d513:	push   rax
   1d514:	lea    r8,[rip+0xa0e5]        # 27600 <__FUNCTION__.12544+0x650>
   1d51b:	mov    ecx,0x1
   1d520:	xor    eax,eax
   1d522:	mov    r9,r15
   1d525:	mov    edx,0x449
   1d52a:	call   60a0 <xc_dom_panic_func@plt>
   1d52f:	add    r14d,0x1
   1d533:	cmp    DWORD PTR [rbx+0xa10],r14d
   1d53a:	pop    rcx
   1d53b:	pop    rsi
   1d53c:	ja     1d4dd <vcpu_hvm+0x32d>
   1d53e:	xchg   ax,ax
   1d540:	mov    esi,DWORD PTR [rbx+0x4d0]
   1d546:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d54d:	mov    ecx,0x438
   1d552:	mov    rdx,r13
   1d555:	call   61d0 <xc_domain_hvm_setcontext@plt>
   1d55a:	test   eax,eax
   1d55c:	mov    r14d,eax
   1d55f:	je     1d5d6 <vcpu_hvm+0x426>
   1d561:	sub    rsp,0x8
   1d565:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d56c:	lea    r9,[rip+0xa445]        # 279b8 <__func__.12825>
   1d573:	push   rax
   1d574:	lea    r8,[rip+0xa085]        # 27600 <__FUNCTION__.12544+0x650>
   1d57b:	lea    rsi,[rip+0x9b04]        # 27086 <__FUNCTION__.12544+0xd6>
   1d582:	mov    edx,0x455
   1d587:	xor    eax,eax
   1d589:	mov    ecx,0x1
   1d58e:	call   60a0 <xc_dom_panic_func@plt>
   1d593:	pop    rax
   1d594:	pop    rdx
   1d595:	jmp    1d5d6 <vcpu_hvm+0x426>
   1d597:	nop    WORD PTR [rax+rax*1+0x0]
   1d5a0:	sub    rsp,0x8
   1d5a4:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d5ab:	lea    r9,[rip+0xa406]        # 279b8 <__func__.12825>
   1d5b2:	push   rax
   1d5b3:	lea    r8,[rip+0x9ff6]        # 275b0 <__FUNCTION__.12544+0x600>
   1d5ba:	lea    rsi,[rip+0x9ac5]        # 27086 <__FUNCTION__.12544+0xd6>
   1d5c1:	mov    ecx,0x1
   1d5c6:	mov    edx,0x3f0
   1d5cb:	xor    eax,eax
   1d5cd:	call   60a0 <xc_dom_panic_func@plt>
   1d5d2:	pop    r10
   1d5d4:	pop    r11
   1d5d6:	mov    rdi,rbp
   1d5d9:	call   5900 <free@plt>
   1d5de:	mov    rcx,QWORD PTR [rsp+0x558]
   1d5e6:	xor    rcx,QWORD PTR fs:0x28
   1d5ef:	mov    eax,r14d
   1d5f2:	jne    1d6db <vcpu_hvm+0x52b>
   1d5f8:	add    rsp,0x568
   1d5ff:	pop    rbx
   1d600:	pop    rbp
   1d601:	pop    r12
   1d603:	pop    r13
   1d605:	pop    r14
   1d607:	pop    r15
   1d609:	ret    
   1d60a:	nop    WORD PTR [rax+rax*1+0x0]
   1d610:	sub    rsp,0x8
   1d614:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d61b:	lea    r9,[rip+0xa396]        # 279b8 <__func__.12825>
   1d622:	push   rax
   1d623:	lea    r8,[rip+0x9f1e]        # 27548 <__FUNCTION__.12544+0x598>
   1d62a:	lea    rsi,[rip+0x9a55]        # 27086 <__FUNCTION__.12544+0xd6>
   1d631:	mov    ecx,0x1
   1d636:	mov    edx,0x3dd
   1d63b:	xor    eax,eax
   1d63d:	call   60a0 <xc_dom_panic_func@plt>
   1d642:	xor    ebp,ebp
   1d644:	pop    r13
   1d646:	pop    r15
   1d648:	jmp    1d5d6 <vcpu_hvm+0x426>
   1d64a:	nop    WORD PTR [rax+rax*1+0x0]
   1d650:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1d657:	lea    r9,[rip+0xa35a]        # 279b8 <__func__.12825>
   1d65e:	lea    r8,[rip+0x9f73]        # 275d8 <__FUNCTION__.12544+0x628>
   1d665:	lea    rsi,[rip+0x9a1a]        # 27086 <__FUNCTION__.12544+0xd6>
   1d66c:	mov    ecx,0x1
   1d671:	mov    edx,0x436
   1d676:	xor    eax,eax
   1d678:	call   60a0 <xc_dom_panic_func@plt>
   1d67d:	jmp    1d5d6 <vcpu_hvm+0x426>
   1d682:	sub    rsp,0x8
   1d686:	lea    r9,[rip+0xa32b]        # 279b8 <__func__.12825>
   1d68d:	lea    r8,[rip+0x9ee4]        # 27578 <__FUNCTION__.12544+0x5c8>
   1d694:	push   r14
   1d696:	lea    rsi,[rip+0x99e9]        # 27086 <__FUNCTION__.12544+0xd6>
   1d69d:	mov    ecx,0x1
   1d6a2:	mov    edx,0x3e6
   1d6a7:	xor    eax,eax
   1d6a9:	mov    r14d,0xfffffff4
   1d6af:	call   60a0 <xc_dom_panic_func@plt>
   1d6b4:	pop    rbx
   1d6b5:	pop    r12
   1d6b7:	jmp    1d5d6 <vcpu_hvm+0x426>
   1d6bc:	lea    rcx,[rip+0xa305]        # 279c8 <__PRETTY_FUNCTION__.12824>
   1d6c3:	lea    rsi,[rip+0x99bc]        # 27086 <__FUNCTION__.12544+0xd6>
   1d6ca:	lea    rdi,[rip+0x9a0a]        # 270db <__FUNCTION__.12544+0x12b>
   1d6d1:	mov    edx,0x3cf
   1d6d6:	call   5c70 <__assert_fail@plt>
   1d6db:	call   5b80 <__stack_chk_fail@plt>

000000000001d6e0 <meminit_pv>:
   1d6e0:	push   r15
   1d6e2:	push   r14
   1d6e4:	mov    ecx,0x11
   1d6e9:	push   r13
   1d6eb:	push   r12
   1d6ed:	push   rbp
   1d6ee:	push   rbx
   1d6ef:	mov    rbx,rdi
   1d6f2:	sub    rsp,0x1088
   1d6f9:	mov    esi,DWORD PTR [rdi+0x4d0]
   1d6ff:	mov    rdx,QWORD PTR [rdi+0x340]
   1d706:	mov    rax,QWORD PTR fs:0x28
   1d70f:	mov    QWORD PTR [rsp+0x1078],rax
   1d717:	xor    eax,eax
   1d719:	lea    rax,[rsp+0x70]
   1d71e:	mov    r12,QWORD PTR [rdi+0x4c8]
   1d725:	lea    rdi,[rsp+0x78]
   1d72a:	mov    QWORD PTR [rsp+0x74],0x0
   1d733:	mov    QWORD PTR [rsp+0xf8],0x0
   1d73f:	mov    QWORD PTR [rsp],rax
   1d743:	xor    eax,eax
   1d745:	rep stos QWORD PTR es:[rdi],rax
   1d748:	mov    WORD PTR [rsp+0x78],si
   1d74d:	lea    rsi,[rip+0x8c4b]        # 2639f <__FUNCTION__.12951+0x6f>
   1d754:	mov    DWORD PTR [rsp+0x70],0x23
   1d75c:	mov    ecx,0x10
   1d761:	mov    rdi,rdx
   1d764:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1d766:	seta   al
   1d769:	sbb    al,0x0
   1d76b:	test   al,al
   1d76d:	je     1dbbe <meminit_pv+0x4de>
   1d773:	lea    rsi,[rip+0x8c16]        # 26390 <__FUNCTION__.12951+0x60>
   1d77a:	mov    ecx,0xf
   1d77f:	mov    rdi,rdx
   1d782:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1d784:	seta   al
   1d787:	sbb    al,0x0
   1d789:	test   al,al
   1d78b:	jne    1d8b3 <meminit_pv+0x1d3>
   1d791:	mov    DWORD PTR [rsp+0x80],0x40
   1d79c:	mov    r8d,0x40
   1d7a2:	mov    rcx,rdx
   1d7a5:	lea    rsi,[rip+0x993e]        # 270ea <__FUNCTION__.12544+0x13a>
   1d7ac:	lea    rdx,[rip+0xa1c5]        # 27978 <__FUNCTION__.12855>
   1d7b3:	xor    eax,eax
   1d7b5:	mov    rdi,r12
   1d7b8:	lea    r13,[rsp+0x20]
   1d7bd:	call   5b60 <xc_dom_printf@plt>
   1d7c2:	mov    rax,QWORD PTR [rsp]
   1d7c6:	mov    rsi,r13
   1d7c9:	mov    rdi,r12
   1d7cc:	mov    QWORD PTR [rsp+0x20],0x0
   1d7d5:	mov    QWORD PTR [rsp+0x28],0x0
   1d7de:	mov    DWORD PTR [rsp+0x30],0x3
   1d7e6:	mov    QWORD PTR [rsp+0x40],0x90
   1d7ef:	mov    QWORD PTR [rsp+0x38],rax
   1d7f4:	mov    DWORD PTR [rsp+0x74],0x11
   1d7fc:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1d801:	test   eax,eax
   1d803:	jne    1dd21 <meminit_pv+0x641>
   1d809:	mov    rax,QWORD PTR [rsp+0x28]
   1d80e:	mov    rdi,QWORD PTR [r12+0x440]
   1d816:	mov    esi,0x24
   1d81b:	test   rax,rax
   1d81e:	cmove  rax,r13
   1d822:	mov    rdx,QWORD PTR [rax]
   1d825:	call   5e30 <xencall1@plt>
   1d82a:	test   eax,eax
   1d82c:	mov    ebp,eax
   1d82e:	jns    1d89b <meminit_pv+0x1bb>
   1d830:	call   5940 <__errno_location@plt>
   1d835:	cmp    DWORD PTR [rax],0xd
   1d838:	mov    rbx,rax
   1d83b:	je     1dcb4 <meminit_pv+0x5d4>
   1d841:	mov    rsi,QWORD PTR [rsp+0x28]
   1d846:	test   rsi,rsi
   1d849:	jne    1d84e <meminit_pv+0x16e>
   1d84b:	mov    rsi,r13
   1d84e:	mov    rdi,r12
   1d851:	call   6210 <xc__hypercall_bounce_post@plt>
   1d856:	lea    rdx,[rip+0xa11b]        # 27978 <__FUNCTION__.12855>
   1d85d:	lea    rsi,[rip+0x98a4]        # 27108 <__FUNCTION__.12544+0x158>
   1d864:	mov    ecx,ebp
   1d866:	mov    rdi,r12
   1d869:	xor    eax,eax
   1d86b:	call   5b60 <xc_dom_printf@plt>
   1d870:	mov    rdi,QWORD PTR [rsp+0x1078]
   1d878:	xor    rdi,QWORD PTR fs:0x28
   1d881:	mov    eax,ebp
   1d883:	jne    1dd5a <meminit_pv+0x67a>
   1d889:	add    rsp,0x1088
   1d890:	pop    rbx
   1d891:	pop    rbp
   1d892:	pop    r12
   1d894:	pop    r13
   1d896:	pop    r14
   1d898:	pop    r15
   1d89a:	ret    
   1d89b:	mov    rsi,QWORD PTR [rsp+0x28]
   1d8a0:	mov    rdi,r12
   1d8a3:	test   rsi,rsi
   1d8a6:	cmove  rsi,r13
   1d8aa:	call   6210 <xc__hypercall_bounce_post@plt>
   1d8af:	test   ebp,ebp
   1d8b1:	jne    1d856 <meminit_pv+0x176>
   1d8b3:	mov    edi,DWORD PTR [rbx+0x4d4]
   1d8b9:	test   edi,edi
   1d8bb:	jne    1dbf9 <meminit_pv+0x519>
   1d8c1:	mov    eax,DWORD PTR [rbx+0x8f8]
   1d8c7:	test   eax,eax
   1d8c9:	mov    DWORD PTR [rsp+0xc],eax
   1d8cd:	jne    1dc2e <meminit_pv+0x54e>
   1d8d3:	mov    rsi,QWORD PTR [rbx+0x468]
   1d8da:	lea    rdi,[rsp+0x4c]
   1d8df:	lea    r13,[rsp+0x50]
   1d8e4:	mov    QWORD PTR [rsp+0x50],0x0
   1d8ed:	mov    QWORD PTR [rsp+0x60],0x0
   1d8f6:	xor    r9d,r9d
   1d8f9:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   1d901:	mov    DWORD PTR [rsp+0xc],0x1
   1d909:	mov    rax,rsi
   1d90c:	mov    QWORD PTR [rsp+0x10],rdi
   1d911:	shl    rax,0xc
   1d915:	mov    QWORD PTR [rsp+0x58],rax
   1d91a:	lea    rdi,[r13+0x18]
   1d91e:	xor    edx,edx
   1d920:	xor    r8d,r8d
   1d923:	xor    ecx,ecx
   1d925:	jmp    1d932 <meminit_pv+0x252>
   1d927:	mov    rax,QWORD PTR [rdi+0x8]
   1d92b:	mov    r9,QWORD PTR [rdi]
   1d92e:	add    rdi,0x18
   1d932:	mov    r10,rax
   1d935:	shr    rax,0xc
   1d939:	sub    r10,r9
   1d93c:	mov    r9,r10
   1d93f:	shr    r9,0xc
   1d943:	add    rcx,r9
   1d946:	cmp    rdx,rax
   1d949:	cmovb  rdx,rax
   1d94d:	add    r8d,0x1
   1d951:	cmp    DWORD PTR [rsp+0xc],r8d
   1d956:	mov    QWORD PTR [rbx+0x470],rdx
   1d95d:	ja     1d927 <meminit_pv+0x247>
   1d95f:	cmp    rcx,rsi
   1d962:	jne    1dcdc <meminit_pv+0x5fc>
   1d968:	lea    rsi,[rdx*8+0x0]
   1d970:	mov    rdi,rbx
   1d973:	call   5a60 <xc_dom_malloc@plt>
   1d978:	test   rax,rax
   1d97b:	mov    QWORD PTR [rbx+0x450],rax
   1d982:	je     1dd17 <meminit_pv+0x637>
   1d988:	cmp    QWORD PTR [rbx+0x470],0x0
   1d990:	je     1d9b5 <meminit_pv+0x2d5>
   1d992:	xor    edx,edx
   1d994:	mov    rcx,0xffffffffffffffff
   1d99b:	jmp    1d9a4 <meminit_pv+0x2c4>
   1d99d:	mov    rax,QWORD PTR [rbx+0x450]
   1d9a4:	mov    QWORD PTR [rax+rdx*8],rcx
   1d9a8:	add    rdx,0x1
   1d9ac:	cmp    QWORD PTR [rbx+0x470],rdx
   1d9b3:	ja     1d99d <meminit_pv+0x2bd>
   1d9b5:	mov    DWORD PTR [rsp+0x8],0x0
   1d9bd:	mov    r14,r13
   1d9c0:	mov    eax,DWORD PTR [r14+0x14]
   1d9c4:	mov    rdi,QWORD PTR [rsp+0x10]
   1d9c9:	mov    DWORD PTR [rsp+0x18],0x0
   1d9d1:	mov    eax,DWORD PTR [rdi+rax*4]
   1d9d4:	cmp    eax,0xffffffff
   1d9d7:	mov    DWORD PTR [rsp+0x1c],eax
   1d9db:	je     1d9ed <meminit_pv+0x30d>
   1d9dd:	lea    ebp,[rax+0x1]
   1d9e0:	shl    ebp,0x8
   1d9e3:	or     ebp,0x20000
   1d9e9:	mov    DWORD PTR [rsp+0x18],ebp
   1d9ed:	mov    r15,QWORD PTR [r14]
   1d9f0:	mov    r13,QWORD PTR [r14+0x8]
   1d9f4:	sub    r13,r15
   1d9f7:	shr    r15,0xc
   1d9fb:	mov    rbp,r13
   1d9fe:	shr    r13,0x15
   1da02:	shr    rbp,0xc
   1da06:	lea    rcx,[rbp+r15*1+0x0]
   1da0b:	cmp    r15,rcx
   1da0e:	jae    1da33 <meminit_pv+0x353>
   1da10:	lea    rdx,[r15*8+0x0]
   1da18:	mov    rax,r15
   1da1b:	mov    rsi,QWORD PTR [rbx+0x450]
   1da22:	mov    QWORD PTR [rsi+rdx*1],rax
   1da26:	add    rax,0x1
   1da2a:	add    rdx,0x8
   1da2e:	cmp    rax,rcx
   1da31:	jne    1da1b <meminit_pv+0x33b>
   1da33:	mov    r12,r15
   1da36:	test   r13,r13
   1da39:	je     1db12 <meminit_pv+0x432>
   1da3f:	cmp    r13,0x1ff
   1da46:	ja     1dba8 <meminit_pv+0x4c8>
   1da4c:	mov    rdi,r13
   1da4f:	mov    rdx,r13
   1da52:	xor    r13d,r13d
   1da55:	shl    rdi,0x9
   1da59:	add    rdi,r12
   1da5c:	cmp    r12,rdi
   1da5f:	jae    1da87 <meminit_pv+0x3a7>
   1da61:	mov    r8,QWORD PTR [rbx+0x450]
   1da68:	mov    rcx,QWORD PTR [rsp]
   1da6c:	mov    rax,r12
   1da6f:	nop
   1da70:	mov    rsi,QWORD PTR [r8+rax*8]
   1da74:	add    rax,0x200
   1da7a:	add    rcx,0x8
   1da7e:	mov    QWORD PTR [rcx-0x8],rsi
   1da82:	cmp    rax,rdi
   1da85:	jb     1da70 <meminit_pv+0x390>
   1da87:	mov    esi,DWORD PTR [rbx+0x4d0]
   1da8d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1da94:	mov    ecx,0x9
   1da99:	mov    r9,QWORD PTR [rsp]
   1da9d:	mov    r8d,DWORD PTR [rsp+0x18]
   1daa2:	call   6380 <xc_domain_populate_physmap@plt>
   1daa7:	test   eax,eax
   1daa9:	js     1dbf2 <meminit_pv+0x512>
   1daaf:	je     1da36 <meminit_pv+0x356>
   1dab1:	sub    eax,0x1
   1dab4:	lea    rdx,[r12*8+0x0]
   1dabc:	mov    rdi,QWORD PTR [rsp]
   1dac0:	shl    rax,0x9
   1dac4:	lea    r12,[r12+rax*1+0x200]
   1dacc:	lea    r8,[r12*8+0x0]
   1dad4:	nop    DWORD PTR [rax+0x0]
   1dad8:	mov    rax,QWORD PTR [rdi]
   1dadb:	lea    rsi,[rdx+0x1000]
   1dae2:	nop    WORD PTR [rax+rax*1+0x0]
   1dae8:	mov    rcx,QWORD PTR [rbx+0x450]
   1daef:	mov    QWORD PTR [rcx+rdx*1],rax
   1daf3:	add    rdx,0x8
   1daf7:	add    rax,0x1
   1dafb:	cmp    rdx,rsi
   1dafe:	jne    1dae8 <meminit_pv+0x408>
   1db00:	add    rdi,0x8
   1db04:	cmp    rdx,r8
   1db07:	jne    1dad8 <meminit_pv+0x3f8>
   1db09:	test   r13,r13
   1db0c:	jne    1da3f <meminit_pv+0x35f>
   1db12:	sub    r12d,r15d
   1db15:	movsxd rax,r12d
   1db18:	cmp    rbp,rax
   1db1b:	jbe    1db70 <meminit_pv+0x490>
   1db1d:	mov    r13,rbp
   1db20:	mov    rdx,QWORD PTR [rbx+0x450]
   1db27:	mov    edi,0x100000
   1db2c:	sub    r13,rax
   1db2f:	mov    esi,DWORD PTR [rbx+0x4d0]
   1db35:	mov    r8d,DWORD PTR [rsp+0x18]
   1db3a:	cmp    r13,0x100000
   1db41:	cmova  r13,rdi
   1db45:	add    rax,r15
   1db48:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1db4f:	lea    r9,[rdx+rax*8]
   1db53:	xor    ecx,ecx
   1db55:	mov    rdx,r13
   1db58:	call   5d20 <xc_domain_populate_physmap_exact@plt>
   1db5d:	test   eax,eax
   1db5f:	jne    1dc60 <meminit_pv+0x580>
   1db65:	add    r12d,r13d
   1db68:	movsxd rax,r12d
   1db6b:	cmp    rax,rbp
   1db6e:	jb     1db1d <meminit_pv+0x43d>
   1db70:	add    DWORD PTR [rsp+0x8],0x1
   1db75:	add    r14,0x18
   1db79:	mov    eax,DWORD PTR [rsp+0x8]
   1db7d:	cmp    eax,DWORD PTR [rsp+0xc]
   1db81:	jne    1d9c0 <meminit_pv+0x2e0>
   1db87:	mov    esi,DWORD PTR [rbx+0x4d0]
   1db8d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1db94:	xor    edx,edx
   1db96:	xor    ebp,ebp
   1db98:	call   60f0 <xc_domain_claim_pages@plt>
   1db9d:	jmp    1d870 <meminit_pv+0x190>
   1dba2:	nop    WORD PTR [rax+rax*1+0x0]
   1dba8:	sub    r13,0x200
   1dbaf:	mov    edi,0x40000
   1dbb4:	mov    edx,0x200
   1dbb9:	jmp    1da59 <meminit_pv+0x379>
   1dbbe:	lea    rsi,[rip+0x87cb]        # 26390 <__FUNCTION__.12951+0x60>
   1dbc5:	mov    DWORD PTR [rsp+0x80],0x20
   1dbd0:	mov    ecx,0xf
   1dbd5:	mov    rdi,rdx
   1dbd8:	mov    r8d,0x20
   1dbde:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1dbe0:	seta   al
   1dbe3:	sbb    al,0x0
   1dbe5:	test   al,al
   1dbe7:	jne    1d7a2 <meminit_pv+0xc2>
   1dbed:	jmp    1d791 <meminit_pv+0xb1>
   1dbf2:	mov    ebp,eax
   1dbf4:	jmp    1d870 <meminit_pv+0x190>
   1dbf9:	mov    rdx,QWORD PTR [rbx+0x468]
   1dc00:	mov    esi,DWORD PTR [rbx+0x4d0]
   1dc06:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1dc0d:	call   60f0 <xc_domain_claim_pages@plt>
   1dc12:	test   eax,eax
   1dc14:	mov    ebp,eax
   1dc16:	jne    1d870 <meminit_pv+0x190>
   1dc1c:	mov    eax,DWORD PTR [rbx+0x8f8]
   1dc22:	test   eax,eax
   1dc24:	mov    DWORD PTR [rsp+0xc],eax
   1dc28:	je     1d8d3 <meminit_pv+0x1f3>
   1dc2e:	mov    r13,QWORD PTR [rbx+0x8f0]
   1dc35:	mov    rax,QWORD PTR [rbx+0x900]
   1dc3c:	mov    QWORD PTR [rbx+0x470],0x0
   1dc47:	mov    rsi,QWORD PTR [rbx+0x468]
   1dc4e:	mov    QWORD PTR [rsp+0x10],rax
   1dc53:	mov    r9,QWORD PTR [r13+0x0]
   1dc57:	mov    rax,QWORD PTR [r13+0x8]
   1dc5b:	jmp    1d91a <meminit_pv+0x23a>
   1dc60:	mov    r14,rbp
   1dc63:	mov    ebp,eax
   1dc65:	mov    eax,DWORD PTR [rsp+0x1c]
   1dc69:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1dc70:	cmp    eax,0xffffffff
   1dc73:	je     1dd5f <meminit_pv+0x67f>
   1dc79:	sub    rsp,0x8
   1dc7d:	lea    r9,[rip+0x9d04]        # 27988 <__func__.12880>
   1dc84:	lea    r8,[rip+0x99cd]        # 27658 <__FUNCTION__.12544+0x6a8>
   1dc8b:	push   rax
   1dc8c:	mov    eax,DWORD PTR [rsp+0x18]
   1dc90:	lea    rsi,[rip+0x93ef]        # 27086 <__FUNCTION__.12544+0xd6>
   1dc97:	mov    ecx,0x1
   1dc9c:	mov    edx,0x503
   1dca1:	push   rax
   1dca2:	push   r14
   1dca4:	xor    eax,eax
   1dca6:	call   60a0 <xc_dom_panic_func@plt>
   1dcab:	add    rsp,0x20
   1dcaf:	jmp    1d870 <meminit_pv+0x190>
   1dcb4:	mov    rsi,QWORD PTR [r12+0x8]
   1dcb9:	lea    r8,[rip+0x4100]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
   1dcc0:	xor    ecx,ecx
   1dcc2:	mov    edx,0x3
   1dcc7:	mov    rdi,r12
   1dcca:	xor    eax,eax
   1dccc:	call   6540 <xc_report@plt>
   1dcd1:	mov    DWORD PTR [rbx],0xd
   1dcd7:	jmp    1d841 <meminit_pv+0x161>
   1dcdc:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1dce3:	lea    r9,[rip+0x9c9e]        # 27988 <__func__.12880>
   1dcea:	push   rsi
   1dceb:	lea    r8,[rip+0x9936]        # 27628 <__FUNCTION__.12544+0x678>
   1dcf2:	push   rcx
   1dcf3:	lea    rsi,[rip+0x938c]        # 27086 <__FUNCTION__.12544+0xd6>
   1dcfa:	mov    ecx,0x1
   1dcff:	mov    edx,0x4c0
   1dd04:	xor    eax,eax
   1dd06:	call   60a0 <xc_dom_panic_func@plt>
   1dd0b:	mov    ebp,0xffffffea
   1dd10:	pop    rcx
   1dd11:	pop    rsi
   1dd12:	jmp    1d870 <meminit_pv+0x190>
   1dd17:	mov    ebp,0xffffffea
   1dd1c:	jmp    1d870 <meminit_pv+0x190>
   1dd21:	call   5940 <__errno_location@plt>
   1dd26:	mov    ebp,DWORD PTR [rax]
   1dd28:	mov    rbx,rax
   1dd2b:	mov    rdi,r12
   1dd2e:	mov    esi,ebp
   1dd30:	call   6570 <xc_strerror@plt>
   1dd35:	mov    ecx,DWORD PTR [rbx]
   1dd37:	lea    rdx,[rip+0x404a]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
   1dd3e:	mov    r8,rax
   1dd41:	mov    esi,0x1
   1dd46:	mov    rdi,r12
   1dd49:	xor    eax,eax
   1dd4b:	call   5d50 <xc_report_error@plt>
   1dd50:	mov    DWORD PTR [rbx],ebp
   1dd52:	or     ebp,0xffffffff
   1dd55:	jmp    1d856 <meminit_pv+0x176>
   1dd5a:	call   5b80 <__stack_chk_fail@plt>
   1dd5f:	sub    rsp,0x8
   1dd63:	lea    r9,[rip+0x9c1e]        # 27988 <__func__.12880>
   1dd6a:	lea    r8,[rip+0x9917]        # 27688 <__FUNCTION__.12544+0x6d8>
   1dd71:	push   r14
   1dd73:	lea    rsi,[rip+0x930c]        # 27086 <__FUNCTION__.12544+0xd6>
   1dd7a:	mov    edx,0x507
   1dd7f:	xor    eax,eax
   1dd81:	mov    ecx,0x1
   1dd86:	call   60a0 <xc_dom_panic_func@plt>
   1dd8b:	pop    rax
   1dd8c:	pop    rdx
   1dd8d:	jmp    1d870 <meminit_pv+0x190>
   1dd92:	nop    DWORD PTR [rax+0x0]
   1dd96:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001dda0 <xc_domain_get_native_protocol>:
   1dda0:	sub    rsp,0x18
   1dda4:	lea    rdx,[rsp+0x4]
   1dda9:	mov    rax,QWORD PTR fs:0x28
   1ddb2:	mov    QWORD PTR [rsp+0x8],rax
   1ddb7:	xor    eax,eax
   1ddb9:	call   6170 <xc_domain_get_guest_width@plt>
   1ddbe:	test   eax,eax
   1ddc0:	jne    1de00 <xc_domain_get_native_protocol+0x60>
   1ddc2:	mov    edx,DWORD PTR [rsp+0x4]
   1ddc6:	lea    rax,[rip+0x9362]        # 2712f <__FUNCTION__.12544+0x17f>
   1ddcd:	cmp    edx,0x4
   1ddd0:	je     1dde5 <xc_domain_get_native_protocol+0x45>
   1ddd2:	lea    rax,[rip+0x934b]        # 27124 <__FUNCTION__.12544+0x174>
   1ddd9:	cmp    edx,0x8
   1dddc:	mov    edx,0x0
   1dde1:	cmovne rax,rdx
   1dde5:	mov    rcx,QWORD PTR [rsp+0x8]
   1ddea:	xor    rcx,QWORD PTR fs:0x28
   1ddf3:	jne    1de04 <xc_domain_get_native_protocol+0x64>
   1ddf5:	add    rsp,0x18
   1ddf9:	ret    
   1ddfa:	nop    WORD PTR [rax+rax*1+0x0]
   1de00:	xor    eax,eax
   1de02:	jmp    1dde5 <xc_domain_get_native_protocol+0x45>
   1de04:	call   5b80 <__stack_chk_fail@plt>
   1de09:	nop    DWORD PTR [rax+0x0]

000000000001de10 <xc_dom_translated>:
   1de10:	cmp    DWORD PTR [rdi+0x928],0x1
   1de17:	sete   al
   1de1a:	ret    
   1de1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001de20 <setup_pgtables_x86>:
   1de20:	push   r15
   1de22:	push   r14
   1de24:	push   r13
   1de26:	push   r12
   1de28:	push   rbp
   1de29:	push   rbx
   1de2a:	sub    rsp,0x68
   1de2e:	mov    rax,QWORD PTR [rdi+0x910]
   1de35:	mov    QWORD PTR [rsp+0x28],rax
   1de3a:	mov    rax,QWORD PTR [rax+0x148]
   1de41:	mov    eax,DWORD PTR [rax]
   1de43:	mov    r12d,eax
   1de46:	sub    r12d,0x1
   1de4a:	js     1e152 <setup_pgtables_x86+0x332>
   1de50:	movsxd rdx,r12d
   1de53:	lea    eax,[rax+rax*8+0x3]
   1de57:	mov    DWORD PTR [rsp+0x48],r12d
   1de5c:	shl    rdx,0x5
   1de60:	mov    r12,rdi
   1de63:	lea    rcx,[rdx-0x20]
   1de67:	mov    DWORD PTR [rsp+0x5c],eax
   1de6b:	mov    QWORD PTR [rsp+0x38],rcx
   1de70:	mov    rax,QWORD PTR [rsp+0x28]
   1de75:	mov    DWORD PTR [rsp+0x4c],0x0
   1de7d:	lea    rcx,[rax+0x8]
   1de81:	mov    eax,DWORD PTR [rax]
   1de83:	mov    QWORD PTR [rsp+0x30],rcx
   1de88:	movsxd rcx,DWORD PTR [rsp+0x48]
   1de8d:	test   eax,eax
   1de8f:	mov    QWORD PTR [rsp+0x18],rcx
   1de94:	je     1e135 <setup_pgtables_x86+0x315>
   1de9a:	nop    WORD PTR [rax+rax*1+0x0]
   1dea0:	mov    eax,DWORD PTR [rsp+0x4c]
   1dea4:	mov    rcx,QWORD PTR [rsp+0x18]
   1dea9:	xor    edx,edx
   1deab:	mov    rdi,r12
   1deae:	shl    rcx,0x5
   1deb2:	mov    rsi,rax
   1deb5:	lea    rax,[rax+rax*4]
   1deb9:	shl    rax,0x5
   1debd:	add    rax,rcx
   1dec0:	add    rax,QWORD PTR [rsp+0x30]
   1dec5:	mov    rbx,QWORD PTR [rax+0x20]
   1dec9:	mov    rax,QWORD PTR [rax+0x28]
   1decd:	mov    QWORD PTR [rsp+0x40],rax
   1ded2:	movsxd rax,esi
   1ded5:	mov    QWORD PTR [rsp+0x50],rbx
   1deda:	lea    rax,[rax+rax*4]
   1dede:	shl    rax,0x5
   1dee2:	add    rax,QWORD PTR [r12+0x910]
   1deea:	mov    rsi,QWORD PTR [rcx+rax*1+0x38]
   1deef:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1def4:	test   rax,rax
   1def7:	mov    QWORD PTR [rsp+0x20],rax
   1defc:	je     1e163 <setup_pgtables_x86+0x343>
   1df02:	mov    rax,QWORD PTR [rsp+0x28]
   1df07:	mov    esi,DWORD PTR [rax]
   1df09:	test   esi,esi
   1df0b:	je     1e135 <setup_pgtables_x86+0x315>
   1df11:	xor    r14d,r14d
   1df14:	mov    r15d,r14d
   1df17:	nop    WORD PTR [rax+rax*1+0x0]
   1df20:	mov    eax,r15d
   1df23:	mov    ecx,DWORD PTR [rsp+0x48]
   1df27:	lea    rax,[rax+rax*4]
   1df2b:	shl    rax,0x5
   1df2f:	add    rax,QWORD PTR [rsp+0x30]
   1df34:	test   ecx,ecx
   1df36:	je     1df4d <setup_pgtables_x86+0x12d>
   1df38:	mov    rbx,QWORD PTR [rsp+0x38]
   1df3d:	lea    rax,[rax+rbx*1+0x20]
   1df42:	mov    edx,DWORD PTR [rax+0x18]
   1df45:	test   edx,edx
   1df47:	je     1e110 <setup_pgtables_x86+0x2f0>
   1df4d:	mov    rsi,QWORD PTR [rax]
   1df50:	mov    rdi,QWORD PTR [rsp+0x40]
   1df55:	cmp    rsi,rdi
   1df58:	jae    1e110 <setup_pgtables_x86+0x2f0>
   1df5e:	mov    rdx,QWORD PTR [rax+0x8]
   1df62:	mov    rbx,QWORD PTR [rsp+0x50]
   1df67:	cmp    rdx,rbx
   1df6a:	jbe    1e110 <setup_pgtables_x86+0x2f0>
   1df70:	cmp    rsi,rbx
   1df73:	mov    rbp,rbx
   1df76:	mov    r8d,DWORD PTR [rsp+0x5c]
   1df7b:	cmovae rbp,rsi
   1df7f:	mov    r13,rbp
   1df82:	sub    r13,rbx
   1df85:	mov    ecx,r8d
   1df88:	shr    r13,cl
   1df8b:	cmp    rdx,rdi
   1df8e:	cmova  rdx,rdi
   1df92:	sub    rbp,rsi
   1df95:	sub    rdx,rbx
   1df98:	shr    rbp,cl
   1df9b:	add    rbp,QWORD PTR [rax+0x10]
   1df9f:	mov    rbx,rdx
   1dfa2:	shr    rbx,cl
   1dfa5:	cmp    r13,rbx
   1dfa8:	mov    QWORD PTR [rsp+0x8],rbx
   1dfad:	mov    rax,rbp
   1dfb0:	mov    QWORD PTR [rsp+0x10],rbp
   1dfb5:	ja     1e110 <setup_pgtables_x86+0x2f0>
   1dfbb:	shl    rax,0xc
   1dfbf:	mov    DWORD PTR [rsp+0x58],r15d
   1dfc4:	mov    rbx,r12
   1dfc7:	mov    rbp,rax
   1dfca:	mov    r15d,DWORD PTR [rsp+0x48]
   1dfcf:	mov    r12,r13
   1dfd2:	jmp    1dffa <setup_pgtables_x86+0x1da>
   1dfd4:	nop    DWORD PTR [rax+0x0]
   1dfd8:	mov    rax,QWORD PTR [rsp+0x20]
   1dfdd:	or     rdi,r10
   1dfe0:	add    rbp,0x1000
   1dfe7:	mov    QWORD PTR [rax+r12*8],rdi
   1dfeb:	add    r12,0x1
   1dfef:	cmp    QWORD PTR [rsp+0x8],r12
   1dff4:	jb     1e100 <setup_pgtables_x86+0x2e0>
   1dffa:	mov    r14,QWORD PTR [rsp+0x10]
   1dfff:	mov    rdi,rbx
   1e002:	call   5af0 <xc_dom_translated@plt>
   1e007:	mov    r10,rbp
   1e00a:	sub    r14,r13
   1e00d:	add    r14,r12
   1e010:	test   al,al
   1e012:	jne    1e04b <setup_pgtables_x86+0x22b>
   1e014:	mov    rax,QWORD PTR [rbx+0x460]
   1e01b:	mov    r10,0xfffffffffffff000
   1e022:	cmp    r14,rax
   1e025:	jb     1e04b <setup_pgtables_x86+0x22b>
   1e027:	mov    rdx,QWORD PTR [rbx+0x468]
   1e02e:	add    rdx,rax
   1e031:	cmp    r14,rdx
   1e034:	jae    1e04b <setup_pgtables_x86+0x22b>
   1e036:	mov    rdx,r14
   1e039:	sub    rdx,rax
   1e03c:	mov    rax,QWORD PTR [rbx+0x450]
   1e043:	mov    r10,QWORD PTR [rax+rdx*8]
   1e047:	shl    r10,0xc
   1e04b:	mov    rax,QWORD PTR [rbx+0x910]
   1e052:	mov    rdi,QWORD PTR [rsp+0x18]
   1e057:	test   r15d,r15d
   1e05a:	mov    rsi,QWORD PTR [rax+0x148]
   1e061:	mov    rdi,QWORD PTR [rsi+rdi*8+0x10]
   1e066:	jne    1dfd8 <setup_pgtables_x86+0x1b8>
   1e06c:	mov    edx,DWORD PTR [rax]
   1e06e:	test   edx,edx
   1e070:	je     1dfd8 <setup_pgtables_x86+0x1b8>
   1e076:	mov    esi,DWORD PTR [rsi]
   1e078:	lea    rcx,[rax+0x8]
   1e07c:	sub    esi,0x1
   1e07f:	mov    r11,rsi
   1e082:	shl    r11,0x5
   1e086:	mov    r11,QWORD PTR [rax+r11*1+0x38]
   1e08b:	mov    eax,DWORD PTR [rax+0x20]
   1e08e:	add    rax,r11
   1e091:	cmp    r14,rax
   1e094:	jae    1e09b <setup_pgtables_x86+0x27b>
   1e096:	cmp    r14,r11
   1e099:	jae    1e0f6 <setup_pgtables_x86+0x2d6>
   1e09b:	sub    edx,0x1
   1e09e:	mov    rax,rsi
   1e0a1:	lea    rdx,[rdx+rdx*4]
   1e0a5:	shl    rax,0x5
   1e0a9:	lea    rax,[rcx+rax*1+0xd0]
   1e0b1:	add    rdx,rsi
   1e0b4:	neg    rsi
   1e0b7:	shl    rdx,0x5
   1e0bb:	shl    rsi,0x5
   1e0bf:	lea    r11,[rcx+rdx*1+0xd0]
   1e0c7:	nop    WORD PTR [rax+rax*1+0x0]
   1e0d0:	cmp    rax,r11
   1e0d3:	je     1dfd8 <setup_pgtables_x86+0x1b8>
   1e0d9:	mov    rdx,rax
   1e0dc:	mov    rcx,QWORD PTR [rax]
   1e0df:	add    rax,0xa0
   1e0e5:	mov    edx,DWORD PTR [rdx+rsi*1-0x18]
   1e0e9:	add    rdx,rcx
   1e0ec:	cmp    r14,rdx
   1e0ef:	jae    1e0d0 <setup_pgtables_x86+0x2b0>
   1e0f1:	cmp    r14,rcx
   1e0f4:	jb     1e0d0 <setup_pgtables_x86+0x2b0>
   1e0f6:	and    rdi,0xfffffffffffffffd
   1e0fa:	jmp    1dfd8 <setup_pgtables_x86+0x1b8>
   1e0ff:	nop
   1e100:	mov    r15d,DWORD PTR [rsp+0x58]
   1e105:	mov    r12,rbx
   1e108:	nop    DWORD PTR [rax+rax*1+0x0]
   1e110:	mov    rax,QWORD PTR [rsp+0x28]
   1e115:	add    r15d,0x1
   1e119:	mov    eax,DWORD PTR [rax]
   1e11b:	cmp    eax,r15d
   1e11e:	ja     1df20 <setup_pgtables_x86+0x100>
   1e124:	add    DWORD PTR [rsp+0x4c],0x1
   1e129:	mov    ecx,DWORD PTR [rsp+0x4c]
   1e12d:	cmp    eax,ecx
   1e12f:	ja     1dea0 <setup_pgtables_x86+0x80>
   1e135:	sub    DWORD PTR [rsp+0x48],0x1
   1e13a:	sub    QWORD PTR [rsp+0x38],0x20
   1e140:	mov    eax,DWORD PTR [rsp+0x48]
   1e144:	sub    DWORD PTR [rsp+0x5c],0x9
   1e149:	cmp    eax,0xffffffff
   1e14c:	jne    1de70 <setup_pgtables_x86+0x50>
   1e152:	add    rsp,0x68
   1e156:	xor    eax,eax
   1e158:	pop    rbx
   1e159:	pop    rbp
   1e15a:	pop    r12
   1e15c:	pop    r13
   1e15e:	pop    r14
   1e160:	pop    r15
   1e162:	ret    
   1e163:	mov    rdi,QWORD PTR [r12+0x4c8]
   1e16b:	lea    r9,[rip+0x977e]        # 278f0 <__FUNCTION__.12625>
   1e172:	lea    r8,[rip+0x8fc1]        # 2713a <__FUNCTION__.12544+0x18a>
   1e179:	lea    rsi,[rip+0x8f06]        # 27086 <__FUNCTION__.12544+0xd6>
   1e180:	xor    eax,eax
   1e182:	mov    ecx,0x1
   1e187:	mov    edx,0x172
   1e18c:	call   60a0 <xc_dom_panic_func@plt>
   1e191:	add    rsp,0x68
   1e195:	mov    eax,0xffffffff
   1e19a:	pop    rbx
   1e19b:	pop    rbp
   1e19c:	pop    r12
   1e19e:	pop    r13
   1e1a0:	pop    r14
   1e1a2:	pop    r15
   1e1a4:	ret    
   1e1a5:	nop
   1e1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001e1b0 <setup_pgtables_x86_64>:
   1e1b0:	jmp    1de20 <setup_pgtables_x86>
   1e1b5:	nop
   1e1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001e1c0 <setup_pgtables_x86_32_pae>:
   1e1c0:	push   r14
   1e1c2:	push   r13
   1e1c4:	push   r12
   1e1c6:	push   rbp
   1e1c7:	push   rbx
   1e1c8:	mov    rax,QWORD PTR [rdi+0x910]
   1e1cf:	mov    rbx,rdi
   1e1d2:	mov    rbp,QWORD PTR [rax+0x78]
   1e1d6:	call   5af0 <xc_dom_translated@plt>
   1e1db:	test   al,al
   1e1dd:	jne    1e2e0 <setup_pgtables_x86_32_pae+0x120>
   1e1e3:	mov    rax,QWORD PTR [rbx+0x460]
   1e1ea:	mov    edx,DWORD PTR [rbx+0x2e8]
   1e1f0:	cmp    rbp,rax
   1e1f3:	jb     1e238 <setup_pgtables_x86_32_pae+0x78>
   1e1f5:	mov    rcx,QWORD PTR [rbx+0x468]
   1e1fc:	add    rcx,rax
   1e1ff:	cmp    rbp,rcx
   1e202:	jae    1e238 <setup_pgtables_x86_32_pae+0x78>
   1e204:	mov    rcx,rbp
   1e207:	sub    rcx,rax
   1e20a:	mov    rax,QWORD PTR [rbx+0x450]
   1e211:	mov    r12,QWORD PTR [rax+rcx*8]
   1e215:	cmp    r12,0xfffff
   1e21c:	jbe    1e223 <setup_pgtables_x86_32_pae+0x63>
   1e21e:	cmp    edx,0x1
   1e221:	je     1e244 <setup_pgtables_x86_32_pae+0x84>
   1e223:	mov    rdi,rbx
   1e226:	pop    rbx
   1e227:	pop    rbp
   1e228:	pop    r12
   1e22a:	pop    r13
   1e22c:	pop    r14
   1e22e:	jmp    1de20 <setup_pgtables_x86>
   1e233:	nop    DWORD PTR [rax+rax*1+0x0]
   1e238:	cmp    edx,0x1
   1e23b:	mov    r12,0xffffffffffffffff
   1e242:	jne    1e223 <setup_pgtables_x86_32_pae+0x63>
   1e244:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e24a:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e251:	call   5f30 <xc_alloc_mmu_updates@plt>
   1e256:	test   rax,rax
   1e259:	mov    r13,rax
   1e25c:	je     1e2f0 <setup_pgtables_x86_32_pae+0x130>
   1e262:	mov    rsi,rbp
   1e265:	mov    rdi,rbx
   1e268:	call   5d80 <xc_dom_unmap_one@plt>
   1e26d:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e273:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e27a:	mov    rdx,r12
   1e27d:	call   5b00 <xc_make_page_below_4G@plt>
   1e282:	test   rax,rax
   1e285:	mov    r14,rax
   1e288:	jne    1e320 <setup_pgtables_x86_32_pae+0x160>
   1e28e:	mov    rdi,r13
   1e291:	call   5900 <free@plt>
   1e296:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e29d:	push   r12
   1e29f:	lea    r9,[rip+0x95aa]        # 27850 <__FUNCTION__.12685>
   1e2a6:	push   rbp
   1e2a7:	lea    r8,[rip+0x947a]        # 27728 <__FUNCTION__.12544+0x778>
   1e2ae:	lea    rsi,[rip+0x8dd1]        # 27086 <__FUNCTION__.12544+0xd6>
   1e2b5:	mov    edx,0x1ce
   1e2ba:	xor    eax,eax
   1e2bc:	mov    ecx,0x1
   1e2c1:	call   60a0 <xc_dom_panic_func@plt>
   1e2c6:	pop    rax
   1e2c7:	mov    eax,0xffffffea
   1e2cc:	pop    rdx
   1e2cd:	pop    rbx
   1e2ce:	pop    rbp
   1e2cf:	pop    r12
   1e2d1:	pop    r13
   1e2d3:	pop    r14
   1e2d5:	ret    
   1e2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1e2e0:	mov    edx,DWORD PTR [rbx+0x2e8]
   1e2e6:	mov    r12,rbp
   1e2e9:	jmp    1e215 <setup_pgtables_x86_32_pae+0x55>
   1e2ee:	xchg   ax,ax
   1e2f0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e2f7:	lea    rdx,[rip+0x9532]        # 27830 <__FUNCTION__.12615>
   1e2fe:	lea    rsi,[rip+0x8e52]        # 27157 <__FUNCTION__.12544+0x1a7>
   1e305:	mov    ecx,0x132
   1e30a:	xor    eax,eax
   1e30c:	call   5b60 <xc_dom_printf@plt>
   1e311:	jmp    1e296 <setup_pgtables_x86_32_pae+0xd6>
   1e316:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1e320:	mov    rax,QWORD PTR [rbx+0x450]
   1e327:	mov    rdi,rbx
   1e32a:	mov    QWORD PTR [rax+rbp*8],r14
   1e32e:	call   5970 <xc_dom_update_guest_p2m@plt>
   1e333:	test   eax,eax
   1e335:	jne    1e28e <setup_pgtables_x86_32_pae+0xce>
   1e33b:	mov    rax,QWORD PTR [rbx+0x918]
   1e342:	mov    rdx,r14
   1e345:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e34c:	mov    rsi,r13
   1e34f:	mov    ecx,DWORD PTR [rax+0x60]
   1e352:	shl    rdx,cl
   1e355:	mov    rcx,rbp
   1e358:	or     rdx,0x1
   1e35c:	call   5ef0 <xc_add_mmu_update@plt>
   1e361:	test   eax,eax
   1e363:	jne    1e28e <setup_pgtables_x86_32_pae+0xce>
   1e369:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e370:	mov    rsi,r13
   1e373:	call   61f0 <xc_flush_mmu_updates@plt>
   1e378:	test   eax,eax
   1e37a:	jne    1e28e <setup_pgtables_x86_32_pae+0xce>
   1e380:	mov    rdx,QWORD PTR [rbx+0x3a0]
   1e387:	mov    rsi,QWORD PTR [rbx+0x398]
   1e38e:	mov    rdi,rbx
   1e391:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1e396:	test   rax,rax
   1e399:	je     1e28e <setup_pgtables_x86_32_pae+0xce>
   1e39f:	mov    edx,0x1
   1e3a4:	mov    rsi,rbp
   1e3a7:	mov    rdi,rbx
   1e3aa:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1e3af:	test   rax,rax
   1e3b2:	je     1e412 <setup_pgtables_x86_32_pae+0x252>
   1e3b4:	mov    rdx,QWORD PTR [rbx+0x918]
   1e3bb:	xor    esi,esi
   1e3bd:	mov    rdi,rax
   1e3c0:	mov    ecx,DWORD PTR [rdx+0x60]
   1e3c3:	mov    edx,0x1
   1e3c8:	shl    rdx,cl
   1e3cb:	call   5ca0 <memset@plt>
   1e3d0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e3d7:	lea    rdx,[rip+0x9452]        # 27830 <__FUNCTION__.12615>
   1e3de:	lea    rsi,[rip+0x92fb]        # 276e0 <__FUNCTION__.12544+0x730>
   1e3e5:	mov    r8,r12
   1e3e8:	xor    eax,eax
   1e3ea:	mov    r9,r14
   1e3ed:	mov    rcx,rbp
   1e3f0:	mov    r12,r14
   1e3f3:	call   5b60 <xc_dom_printf@plt>
   1e3f8:	mov    rdi,r13
   1e3fb:	call   5900 <free@plt>
   1e400:	cmp    r14,0xfffff
   1e407:	jbe    1e223 <setup_pgtables_x86_32_pae+0x63>
   1e40d:	jmp    1e296 <setup_pgtables_x86_32_pae+0xd6>
   1e412:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e419:	lea    rdx,[rip+0x9410]        # 27830 <__FUNCTION__.12615>
   1e420:	lea    rsi,[rip+0x9289]        # 276b0 <__FUNCTION__.12544+0x700>
   1e427:	call   5b60 <xc_dom_printf@plt>
   1e42c:	jmp    1e28e <setup_pgtables_x86_32_pae+0xce>
   1e431:	nop    DWORD PTR [rax+rax*1+0x0]
   1e436:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001e440 <alloc_magic_pages_pv>:
   1e440:	push   rbp
   1e441:	push   rbx
   1e442:	lea    rsi,[rip+0x8c68]        # 270b1 <__FUNCTION__.12544+0x101>
   1e449:	mov    rbx,rdi
   1e44c:	sub    rsp,0x8
   1e450:	call   63c0 <xc_dom_alloc_page@plt>
   1e455:	cmp    rax,0xffffffffffffffff
   1e459:	mov    QWORD PTR [rbx+0x3e8],rax
   1e460:	je     1e588 <alloc_magic_pages_pv+0x148>
   1e466:	lea    rsi,[rip+0x8cfb]        # 27168 <__FUNCTION__.12544+0x1b8>
   1e46d:	mov    rdi,rbx
   1e470:	call   63c0 <xc_dom_alloc_page@plt>
   1e475:	cmp    rax,0xffffffffffffffff
   1e479:	mov    rbp,rax
   1e47c:	mov    QWORD PTR [rbx+0x3f8],rax
   1e483:	je     1e588 <alloc_magic_pages_pv+0x148>
   1e489:	mov    rdi,rbx
   1e48c:	call   5af0 <xc_dom_translated@plt>
   1e491:	test   al,al
   1e493:	jne    1e4c6 <alloc_magic_pages_pv+0x86>
   1e495:	mov    rax,QWORD PTR [rbx+0x460]
   1e49c:	cmp    rbp,rax
   1e49f:	jb     1e568 <alloc_magic_pages_pv+0x128>
   1e4a5:	mov    rdx,QWORD PTR [rbx+0x468]
   1e4ac:	add    rdx,rax
   1e4af:	cmp    rbp,rdx
   1e4b2:	jae    1e568 <alloc_magic_pages_pv+0x128>
   1e4b8:	sub    rbp,rax
   1e4bb:	mov    rax,QWORD PTR [rbx+0x450]
   1e4c2:	mov    rbp,QWORD PTR [rax+rbp*8]
   1e4c6:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e4cc:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e4d3:	mov    rdx,rbp
   1e4d6:	mov    ecx,0x1
   1e4db:	call   5910 <xc_clear_domain_pages@plt>
   1e4e0:	lea    rsi,[rip+0x8c8a]        # 27171 <__FUNCTION__.12544+0x1c1>
   1e4e7:	mov    rdi,rbx
   1e4ea:	call   63c0 <xc_dom_alloc_page@plt>
   1e4ef:	cmp    rax,0xffffffffffffffff
   1e4f3:	mov    rbp,rax
   1e4f6:	mov    QWORD PTR [rbx+0x3f0],rax
   1e4fd:	je     1e588 <alloc_magic_pages_pv+0x148>
   1e503:	mov    rdi,rbx
   1e506:	call   5af0 <xc_dom_translated@plt>
   1e50b:	test   al,al
   1e50d:	jne    1e538 <alloc_magic_pages_pv+0xf8>
   1e50f:	mov    rax,QWORD PTR [rbx+0x460]
   1e516:	cmp    rbp,rax
   1e519:	jb     1e578 <alloc_magic_pages_pv+0x138>
   1e51b:	mov    rdx,QWORD PTR [rbx+0x468]
   1e522:	add    rdx,rax
   1e525:	cmp    rbp,rdx
   1e528:	jae    1e578 <alloc_magic_pages_pv+0x138>
   1e52a:	sub    rbp,rax
   1e52d:	mov    rax,QWORD PTR [rbx+0x450]
   1e534:	mov    rbp,QWORD PTR [rax+rbp*8]
   1e538:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e53e:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e545:	mov    ecx,0x1
   1e54a:	mov    rdx,rbp
   1e54d:	call   5910 <xc_clear_domain_pages@plt>
   1e552:	mov    DWORD PTR [rbx+0x438],0x1
   1e55c:	xor    eax,eax
   1e55e:	add    rsp,0x8
   1e562:	pop    rbx
   1e563:	pop    rbp
   1e564:	ret    
   1e565:	nop    DWORD PTR [rax]
   1e568:	mov    rbp,0xffffffffffffffff
   1e56f:	jmp    1e4c6 <alloc_magic_pages_pv+0x86>
   1e574:	nop    DWORD PTR [rax+0x0]
   1e578:	mov    rbp,0xffffffffffffffff
   1e57f:	jmp    1e538 <alloc_magic_pages_pv+0xf8>
   1e581:	nop    DWORD PTR [rax+0x0]
   1e588:	mov    eax,0xffffffff
   1e58d:	jmp    1e55e <alloc_magic_pages_pv+0x11e>
   1e58f:	nop

000000000001e590 <vcpu_x86_64>:
   1e590:	push   r12
   1e592:	push   rbp
   1e593:	lea    rdx,[rip+0x93be]        # 27958 <__FUNCTION__.12799>
   1e59a:	push   rbx
   1e59b:	mov    rbx,rdi
   1e59e:	lea    rsi,[rip+0x6dd6]        # 2537b <deep_features.2995+0x23b>
   1e5a5:	sub    rsp,0x1440
   1e5ac:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1e5b3:	mov    rax,QWORD PTR fs:0x28
   1e5bc:	mov    QWORD PTR [rsp+0x1438],rax
   1e5c4:	xor    eax,eax
   1e5c6:	mov    rbp,rsp
   1e5c9:	call   5b60 <xc_dom_printf@plt>
   1e5ce:	xor    eax,eax
   1e5d0:	mov    ecx,0x286
   1e5d5:	mov    rdi,rbp
   1e5d8:	rep stos QWORD PTR es:[rdi],rax
   1e5db:	mov    rax,QWORD PTR [rbx+0x2f8]
   1e5e2:	mov    rdx,QWORD PTR [rbx+0x2f0]
   1e5e9:	mov    rdi,rbx
   1e5ec:	mov    QWORD PTR [rsp+0x298],0x200
   1e5f8:	mov    QWORD PTR [rsp+0x13f0],0x400
   1e604:	mov    QWORD PTR [rsp+0x200],0x24
   1e610:	mov    r12,QWORD PTR [rbx+0x398]
   1e617:	mov    QWORD PTR [rsp+0x288],rax
   1e61f:	mov    rax,QWORD PTR [rbx+0x408]
   1e626:	add    rax,0x1
   1e62a:	shl    rax,0xc
   1e62e:	add    rax,rdx
   1e631:	mov    QWORD PTR [rsp+0x2a0],rax
   1e639:	mov    rax,QWORD PTR [rbx+0x3e8]
   1e640:	shl    rax,0xc
   1e644:	add    rax,rdx
   1e647:	mov    QWORD PTR [rsp+0x270],rax
   1e64f:	mov    eax,0xffff0ff0
   1e654:	mov    QWORD PTR [rsp+0x13e8],rax
   1e65c:	call   5af0 <xc_dom_translated@plt>
   1e661:	test   al,al
   1e663:	jne    1e696 <vcpu_x86_64+0x106>
   1e665:	mov    rax,QWORD PTR [rbx+0x460]
   1e66c:	cmp    r12,rax
   1e66f:	jb     1e7a8 <vcpu_x86_64+0x218>
   1e675:	mov    rdx,QWORD PTR [rbx+0x468]
   1e67c:	add    rdx,rax
   1e67f:	cmp    r12,rdx
   1e682:	jae    1e7a8 <vcpu_x86_64+0x218>
   1e688:	sub    r12,rax
   1e68b:	mov    rax,QWORD PTR [rbx+0x450]
   1e692:	mov    r12,QWORD PTR [rax+r12*8]
   1e696:	mov    rax,r12
   1e699:	shl    rax,0xc
   1e69d:	mov    rcx,QWORD PTR [rbx+0x398]
   1e6a4:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e6ab:	lea    rdx,[rip+0x92a6]        # 27958 <__FUNCTION__.12799>
   1e6b2:	lea    rsi,[rip+0x8ac0]        # 27179 <__FUNCTION__.12544+0x1c9>
   1e6b9:	mov    QWORD PTR [rsp+0x1390],rax
   1e6c1:	mov    r8,r12
   1e6c4:	xor    eax,eax
   1e6c6:	call   5b60 <xc_dom_printf@plt>
   1e6cb:	xor    esi,esi
   1e6cd:	xor    edi,edi
   1e6cf:	mov    rax,QWORD PTR [rsp+0x2a0]
   1e6d7:	mov    WORD PTR [rsp+0x2b0],si
   1e6df:	mov    WORD PTR [rsp+0x2c0],di
   1e6e7:	xor    ecx,ecx
   1e6e9:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e6ef:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e6f6:	xor    r8d,r8d
   1e6f9:	mov    WORD PTR [rsp+0x2b8],cx
   1e701:	mov    r9d,0xffffe02b
   1e707:	mov    r10d,0xffffe033
   1e70d:	mov    rcx,rbp
   1e710:	xor    edx,edx
   1e712:	mov    WORD PTR [rsp+0x2c8],r8w
   1e71b:	mov    WORD PTR [rsp+0x2a8],r9w
   1e724:	mov    WORD PTR [rsp+0x290],r10w
   1e72d:	mov    QWORD PTR [rsp+0x1368],0xe02b
   1e739:	mov    QWORD PTR [rsp+0x1370],rax
   1e741:	call   5d10 <xc_vcpu_setcontext@plt>
   1e746:	test   eax,eax
   1e748:	mov    ebp,eax
   1e74a:	je     1e780 <vcpu_x86_64+0x1f0>
   1e74c:	sub    rsp,0x8
   1e750:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e757:	lea    r9,[rip+0x91ea]        # 27948 <__func__.12800>
   1e75e:	push   rax
   1e75f:	lea    r8,[rip+0x9022]        # 27788 <__FUNCTION__.12544+0x7d8>
   1e766:	lea    rsi,[rip+0x8919]        # 27086 <__FUNCTION__.12544+0xd6>
   1e76d:	mov    edx,0x3ad
   1e772:	xor    eax,eax
   1e774:	mov    ecx,0x1
   1e779:	call   60a0 <xc_dom_panic_func@plt>
   1e77e:	pop    rax
   1e77f:	pop    rdx
   1e780:	mov    rsi,QWORD PTR [rsp+0x1438]
   1e788:	xor    rsi,QWORD PTR fs:0x28
   1e791:	mov    eax,ebp
   1e793:	jne    1e7bb <vcpu_x86_64+0x22b>
   1e795:	add    rsp,0x1440
   1e79c:	pop    rbx
   1e79d:	pop    rbp
   1e79e:	pop    r12
   1e7a0:	ret    
   1e7a1:	nop    DWORD PTR [rax+0x0]
   1e7a8:	mov    rax,0xfffffffffffff000
   1e7af:	mov    r12,0xffffffffffffffff
   1e7b6:	jmp    1e69d <vcpu_x86_64+0x10d>
   1e7bb:	call   5b80 <__stack_chk_fail@plt>

000000000001e7c0 <vcpu_x86_32>:
   1e7c0:	push   r12
   1e7c2:	push   rbp
   1e7c3:	lea    rdx,[rip+0x90ee]        # 278b8 <__FUNCTION__.12790>
   1e7ca:	push   rbx
   1e7cb:	mov    rbx,rdi
   1e7ce:	lea    rsi,[rip+0x6ba6]        # 2537b <deep_features.2995+0x23b>
   1e7d5:	sub    rsp,0x1440
   1e7dc:	mov    rdi,QWORD PTR [rdi+0x4c8]
   1e7e3:	mov    rax,QWORD PTR fs:0x28
   1e7ec:	mov    QWORD PTR [rsp+0x1438],rax
   1e7f4:	xor    eax,eax
   1e7f6:	mov    rbp,rsp
   1e7f9:	call   5b60 <xc_dom_printf@plt>
   1e7fe:	xor    eax,eax
   1e800:	mov    ecx,0x15e
   1e805:	mov    rdi,rbp
   1e808:	rep stos QWORD PTR es:[rdi],rax
   1e80b:	mov    rax,QWORD PTR [rbx+0x2f8]
   1e812:	mov    rdx,QWORD PTR [rbx+0x2f0]
   1e819:	mov    DWORD PTR [rsp+0x22c],0x200
   1e824:	mov    DWORD PTR [rsp+0x200],0x24
   1e82f:	mov    DWORD PTR [rsp+0x224],eax
   1e836:	mov    rax,QWORD PTR [rbx+0x408]
   1e83d:	add    rax,0x1
   1e841:	shl    eax,0xc
   1e844:	add    eax,edx
   1e846:	mov    DWORD PTR [rsp+0x230],eax
   1e84d:	mov    eax,DWORD PTR [rbx+0x3e8]
   1e853:	shl    eax,0xc
   1e856:	add    eax,edx
   1e858:	mov    DWORD PTR [rsp+0x210],eax
   1e85f:	movabs rax,0x400ffff0ff0
   1e869:	mov    QWORD PTR [rsp+0xad4],rax
   1e871:	mov    eax,DWORD PTR [rbx+0x2e8]
   1e877:	sub    eax,0x2
   1e87a:	cmp    eax,0x1
   1e87d:	ja     1e88a <vcpu_x86_32+0xca>
   1e87f:	mov    DWORD PTR [rsp+0xaec],0x8
   1e88a:	mov    rdi,rbx
   1e88d:	mov    r12,QWORD PTR [rbx+0x398]
   1e894:	call   5af0 <xc_dom_translated@plt>
   1e899:	test   al,al
   1e89b:	jne    1e8ce <vcpu_x86_32+0x10e>
   1e89d:	mov    rax,QWORD PTR [rbx+0x460]
   1e8a4:	cmp    r12,rax
   1e8a7:	jb     1e9e0 <vcpu_x86_32+0x220>
   1e8ad:	mov    rdx,QWORD PTR [rbx+0x468]
   1e8b4:	add    rdx,rax
   1e8b7:	cmp    r12,rdx
   1e8ba:	jae    1e9e0 <vcpu_x86_32+0x220>
   1e8c0:	sub    r12,rax
   1e8c3:	mov    rax,QWORD PTR [rbx+0x450]
   1e8ca:	mov    r12,QWORD PTR [rax+r12*8]
   1e8ce:	mov    eax,r12d
   1e8d1:	rol    eax,0xc
   1e8d4:	mov    rcx,QWORD PTR [rbx+0x398]
   1e8db:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e8e2:	lea    rdx,[rip+0x8fcf]        # 278b8 <__FUNCTION__.12790>
   1e8e9:	lea    rsi,[rip+0x8889]        # 27179 <__FUNCTION__.12544+0x1c9>
   1e8f0:	mov    DWORD PTR [rsp+0xaa8],eax
   1e8f7:	mov    r8,r12
   1e8fa:	xor    eax,eax
   1e8fc:	call   5b60 <xc_dom_printf@plt>
   1e901:	mov    esi,0xffffe021
   1e906:	mov    edi,0xffffe021
   1e90b:	mov    eax,DWORD PTR [rsp+0x230]
   1e912:	mov    WORD PTR [rsp+0x238],si
   1e91a:	mov    WORD PTR [rsp+0x240],di
   1e922:	mov    ecx,0xffffe021
   1e927:	mov    esi,DWORD PTR [rbx+0x4d0]
   1e92d:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e934:	mov    r8d,0xffffe021
   1e93a:	mov    WORD PTR [rsp+0x23c],cx
   1e942:	mov    r9d,0xffffe021
   1e948:	mov    r10d,0xffffe019
   1e94e:	mov    rcx,rbp
   1e951:	xor    edx,edx
   1e953:	mov    WORD PTR [rsp+0x244],r8w
   1e95c:	mov    WORD PTR [rsp+0x234],r9w
   1e965:	mov    WORD PTR [rsp+0x228],r10w
   1e96e:	mov    DWORD PTR [rsp+0xa94],0xe021
   1e979:	mov    DWORD PTR [rsp+0xa98],eax
   1e980:	call   5d10 <xc_vcpu_setcontext@plt>
   1e985:	test   eax,eax
   1e987:	mov    ebp,eax
   1e989:	je     1e9bf <vcpu_x86_32+0x1ff>
   1e98b:	sub    rsp,0x8
   1e98f:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1e996:	lea    r9,[rip+0x8f0b]        # 278a8 <__func__.12791>
   1e99d:	push   rax
   1e99e:	lea    r8,[rip+0x8de3]        # 27788 <__FUNCTION__.12544+0x7d8>
   1e9a5:	lea    rsi,[rip+0x86da]        # 27086 <__FUNCTION__.12544+0xd6>
   1e9ac:	mov    edx,0x37f
   1e9b1:	xor    eax,eax
   1e9b3:	mov    ecx,0x1
   1e9b8:	call   60a0 <xc_dom_panic_func@plt>
   1e9bd:	pop    rax
   1e9be:	pop    rdx
   1e9bf:	mov    rsi,QWORD PTR [rsp+0x1438]
   1e9c7:	xor    rsi,QWORD PTR fs:0x28
   1e9d0:	mov    eax,ebp
   1e9d2:	jne    1e9f1 <vcpu_x86_32+0x231>
   1e9d4:	add    rsp,0x1440
   1e9db:	pop    rbx
   1e9dc:	pop    rbp
   1e9dd:	pop    r12
   1e9df:	ret    
   1e9e0:	mov    eax,0xffffffff
   1e9e5:	mov    r12,0xffffffffffffffff
   1e9ec:	jmp    1e8d4 <vcpu_x86_32+0x114>
   1e9f1:	call   5b80 <__stack_chk_fail@plt>
   1e9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001ea00 <bootlate_pv>:
   1ea00:	push   r13
   1ea02:	push   r12
   1ea04:	lea    rsi,[rip+0x79a4]        # 263af <__FUNCTION__.12951+0x7f>
   1ea0b:	push   rbp
   1ea0c:	push   rbx
   1ea0d:	mov    ecx,0xf
   1ea12:	mov    rbx,rdi
   1ea15:	sub    rsp,0x8
   1ea19:	mov    rax,QWORD PTR [rdi+0x340]
   1ea20:	mov    rdi,rax
   1ea23:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1ea25:	lea    rsi,[rip+0x7973]        # 2639f <__FUNCTION__.12951+0x6f>
   1ea2c:	mov    rdi,rax
   1ea2f:	mov    ecx,0x10
   1ea34:	seta   dl
   1ea37:	sbb    dl,0x0
   1ea3a:	xor    ebp,ebp
   1ea3c:	test   dl,dl
   1ea3e:	sete   bpl
   1ea42:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1ea44:	lea    rsi,[rip+0x7945]        # 26390 <__FUNCTION__.12951+0x60>
   1ea4b:	mov    ecx,0xf
   1ea50:	mov    rdi,rax
   1ea53:	seta   dl
   1ea56:	sbb    dl,0x0
   1ea59:	test   dl,dl
   1ea5b:	mov    edx,0x2
   1ea60:	cmove  rbp,rdx
   1ea64:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1ea66:	mov    rsi,QWORD PTR [rbx+0x398]
   1ea6d:	mov    rdi,rbx
   1ea70:	seta   al
   1ea73:	sbb    al,0x0
   1ea75:	test   al,al
   1ea77:	mov    eax,0x3
   1ea7c:	cmove  rbp,rax
   1ea80:	call   5d80 <xc_dom_unmap_one@plt>
   1ea85:	mov    rsi,QWORD PTR [rbx+0x378]
   1ea8c:	mov    rdi,rbx
   1ea8f:	call   5d80 <xc_dom_unmap_one@plt>
   1ea94:	mov    rdi,rbx
   1ea97:	mov    r13d,DWORD PTR [rbx+0x4d0]
   1ea9e:	mov    r12,QWORD PTR [rbx+0x398]
   1eaa5:	call   5af0 <xc_dom_translated@plt>
   1eaaa:	test   al,al
   1eaac:	jne    1eadf <bootlate_pv+0xdf>
   1eaae:	mov    rax,QWORD PTR [rbx+0x460]
   1eab5:	cmp    r12,rax
   1eab8:	jb     1eb80 <bootlate_pv+0x180>
   1eabe:	mov    rdx,QWORD PTR [rbx+0x468]
   1eac5:	add    rdx,rax
   1eac8:	cmp    r12,rdx
   1eacb:	jae    1eb80 <bootlate_pv+0x180>
   1ead1:	sub    r12,rax
   1ead4:	mov    rax,QWORD PTR [rbx+0x450]
   1eadb:	mov    r12,QWORD PTR [rax+r12*8]
   1eadf:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1eae6:	mov    esi,ebp
   1eae8:	mov    ecx,r13d
   1eaeb:	mov    rdx,r12
   1eaee:	call   6020 <pin_table@plt>
   1eaf3:	test   eax,eax
   1eaf5:	mov    ebp,eax
   1eaf7:	jne    1eb90 <bootlate_pv+0x190>
   1eafd:	mov    r12,QWORD PTR [rbx+0x4c0]
   1eb04:	mov    rcx,QWORD PTR [rbx+0x400]
   1eb0b:	lea    rdx,[rip+0x8e56]        # 27968 <__FUNCTION__.13010>
   1eb12:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1eb19:	lea    rsi,[rip+0x8cb8]        # 277d8 <__FUNCTION__.12544+0x828>
   1eb20:	xor    eax,eax
   1eb22:	mov    r8,r12
   1eb25:	call   5b60 <xc_dom_printf@plt>
   1eb2a:	mov    esi,DWORD PTR [rbx+0x4d0]
   1eb30:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1eb37:	mov    r8,r12
   1eb3a:	mov    ecx,0x3
   1eb3f:	mov    edx,0x1000
   1eb44:	call   6590 <xc_map_foreign_range@plt>
   1eb49:	test   rax,rax
   1eb4c:	mov    r12,rax
   1eb4f:	je     1ebd3 <bootlate_pv+0x1d3>
   1eb55:	mov    rax,QWORD PTR [rbx+0x918]
   1eb5c:	mov    rsi,r12
   1eb5f:	mov    rdi,rbx
   1eb62:	call   QWORD PTR [rax+0x28]
   1eb65:	mov    esi,0x1000
   1eb6a:	mov    rdi,r12
   1eb6d:	call   61b0 <munmap@plt>
   1eb72:	add    rsp,0x8
   1eb76:	mov    eax,ebp
   1eb78:	pop    rbx
   1eb79:	pop    rbp
   1eb7a:	pop    r12
   1eb7c:	pop    r13
   1eb7e:	ret    
   1eb7f:	nop
   1eb80:	mov    r12,0xffffffffffffffff
   1eb87:	jmp    1eadf <bootlate_pv+0xdf>
   1eb8c:	nop    DWORD PTR [rax+0x0]
   1eb90:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1eb97:	push   rax
   1eb98:	lea    r9,[rip+0x8dc9]        # 27968 <__FUNCTION__.13010>
   1eb9f:	push   QWORD PTR [rbx+0x398]
   1eba5:	lea    r8,[rip+0x8c04]        # 277b0 <__FUNCTION__.12544+0x800>
   1ebac:	lea    rsi,[rip+0x84d3]        # 27086 <__FUNCTION__.12544+0xd6>
   1ebb3:	mov    edx,0x68a
   1ebb8:	xor    eax,eax
   1ebba:	mov    ecx,0x1
   1ebbf:	call   60a0 <xc_dom_panic_func@plt>
   1ebc4:	pop    rax
   1ebc5:	pop    rdx
   1ebc6:	mov    eax,ebp
   1ebc8:	add    rsp,0x8
   1ebcc:	pop    rbx
   1ebcd:	pop    rbp
   1ebce:	pop    r12
   1ebd0:	pop    r13
   1ebd2:	ret    
   1ebd3:	or     ebp,0xffffffff
   1ebd6:	jmp    1eb72 <bootlate_pv+0x172>
   1ebd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001ebe0 <start_info_x86_32>:
   1ebe0:	push   r13
   1ebe2:	push   r12
   1ebe4:	mov    edx,0x1
   1ebe9:	push   rbp
   1ebea:	push   rbx
   1ebeb:	mov    rbx,rdi
   1ebee:	sub    rsp,0x8
   1ebf2:	mov    rsi,QWORD PTR [rdi+0x3e8]
   1ebf9:	mov    r13,QWORD PTR [rdi+0x910]
   1ec00:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1ec05:	mov    rdi,rbx
   1ec08:	mov    rbp,rax
   1ec0b:	call   5af0 <xc_dom_translated@plt>
   1ec10:	test   al,al
   1ec12:	je     1edb0 <start_info_x86_32+0x1d0>
   1ec18:	mov    r12,QWORD PTR [rbx+0x400]
   1ec1f:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ec26:	lea    rdx,[rip+0x8c43]        # 27870 <__FUNCTION__.12755>
   1ec2d:	lea    rsi,[rip+0x6747]        # 2537b <deep_features.2995+0x23b>
   1ec34:	xor    eax,eax
   1ec36:	call   5b60 <xc_dom_printf@plt>
   1ec3b:	test   rbp,rbp
   1ec3e:	je     1edd0 <start_info_x86_32+0x1f0>
   1ec44:	lea    rdi,[rbp+0x8]
   1ec48:	mov    rcx,rbp
   1ec4b:	xor    eax,eax
   1ec4d:	mov    QWORD PTR [rbp+0x0],0x0
   1ec55:	mov    QWORD PTR [rbp+0x450],0x0
   1ec60:	mov    edx,0x20
   1ec65:	and    rdi,0xfffffffffffffff8
   1ec69:	shl    r12d,0xc
   1ec6d:	sub    rcx,rdi
   1ec70:	add    ecx,0x458
   1ec76:	shr    ecx,0x3
   1ec79:	rep stos QWORD PTR es:[rdi],rax
   1ec7c:	mov    rdi,rbp
   1ec7f:	mov    rsi,QWORD PTR [rbx+0x340]
   1ec86:	call   5980 <strncpy@plt>
   1ec8b:	mov    BYTE PTR [rbp+0x1f],0x0
   1ec8f:	mov    rax,QWORD PTR [rbx+0x468]
   1ec96:	mov    rdi,rbx
   1ec99:	mov    DWORD PTR [rbp+0x24],r12d
   1ec9d:	mov    DWORD PTR [rbp+0x20],eax
   1eca0:	mov    rax,QWORD PTR [rbx+0x388]
   1eca7:	mov    DWORD PTR [rbp+0x3c],eax
   1ecaa:	mov    eax,DWORD PTR [r13+0x20]
   1ecae:	mov    DWORD PTR [rbp+0x40],eax
   1ecb1:	mov    rax,QWORD PTR [rbx+0x368]
   1ecb8:	mov    DWORD PTR [rbp+0x44],eax
   1ecbb:	mov    rax,QWORD PTR [rbx+0x4a8]
   1ecc2:	mov    DWORD PTR [rbp+0x28],eax
   1ecc5:	mov    r12,QWORD PTR [rbx+0x3f8]
   1eccc:	call   5af0 <xc_dom_translated@plt>
   1ecd1:	test   al,al
   1ecd3:	jne    1edc8 <start_info_x86_32+0x1e8>
   1ecd9:	mov    rdx,QWORD PTR [rbx+0x460]
   1ece0:	mov    eax,0xffffffff
   1ece5:	cmp    r12,rdx
   1ece8:	jb     1ed07 <start_info_x86_32+0x127>
   1ecea:	mov    rcx,QWORD PTR [rbx+0x468]
   1ecf1:	add    rcx,rdx
   1ecf4:	cmp    r12,rcx
   1ecf7:	jae    1ed07 <start_info_x86_32+0x127>
   1ecf9:	mov    rax,QWORD PTR [rbx+0x450]
   1ed00:	sub    r12,rdx
   1ed03:	mov    eax,DWORD PTR [rax+r12*8]
   1ed07:	mov    DWORD PTR [rbp+0x2c],eax
   1ed0a:	mov    eax,DWORD PTR [rbx+0x4b4]
   1ed10:	mov    rdi,rbx
   1ed13:	mov    DWORD PTR [rbp+0x30],eax
   1ed16:	mov    r12,QWORD PTR [rbx+0x3f0]
   1ed1d:	call   5af0 <xc_dom_translated@plt>
   1ed22:	test   al,al
   1ed24:	jne    1edc0 <start_info_x86_32+0x1e0>
   1ed2a:	mov    rdx,QWORD PTR [rbx+0x460]
   1ed31:	mov    eax,0xffffffff
   1ed36:	cmp    r12,rdx
   1ed39:	jb     1ed58 <start_info_x86_32+0x178>
   1ed3b:	mov    rcx,QWORD PTR [rbx+0x468]
   1ed42:	add    rcx,rdx
   1ed45:	cmp    r12,rcx
   1ed48:	jae    1ed58 <start_info_x86_32+0x178>
   1ed4a:	mov    rax,QWORD PTR [rbx+0x450]
   1ed51:	sub    r12,rdx
   1ed54:	mov    eax,DWORD PTR [rax+r12*8]
   1ed58:	mov    DWORD PTR [rbp+0x34],eax
   1ed5b:	mov    eax,DWORD PTR [rbx+0x4b0]
   1ed61:	mov    DWORD PTR [rbp+0x38],eax
   1ed64:	cmp    QWORD PTR [rbx+0x18],0x0
   1ed69:	je     1ed7f <start_info_x86_32+0x19f>
   1ed6b:	mov    rax,QWORD PTR [rbx+0x428]
   1ed72:	mov    DWORD PTR [rbp+0x48],eax
   1ed75:	mov    rax,QWORD PTR [rbx+0x430]
   1ed7c:	mov    DWORD PTR [rbp+0x4c],eax
   1ed7f:	mov    rsi,QWORD PTR [rbx+0xb0]
   1ed86:	xor    ebx,ebx
   1ed88:	test   rsi,rsi
   1ed8b:	je     1eda2 <start_info_x86_32+0x1c2>
   1ed8d:	lea    rdi,[rbp+0x50]
   1ed91:	mov    edx,0x400
   1ed96:	call   5980 <strncpy@plt>
   1ed9b:	mov    BYTE PTR [rbp+0x44f],0x0
   1eda2:	add    rsp,0x8
   1eda6:	mov    eax,ebx
   1eda8:	pop    rbx
   1eda9:	pop    rbp
   1edaa:	pop    r12
   1edac:	pop    r13
   1edae:	ret    
   1edaf:	nop
   1edb0:	mov    r12,QWORD PTR [rbx+0x4c0]
   1edb7:	jmp    1ec1f <start_info_x86_32+0x3f>
   1edbc:	nop    DWORD PTR [rax+0x0]
   1edc0:	mov    eax,r12d
   1edc3:	jmp    1ed58 <start_info_x86_32+0x178>
   1edc5:	nop    DWORD PTR [rax]
   1edc8:	mov    eax,r12d
   1edcb:	jmp    1ed07 <start_info_x86_32+0x127>
   1edd0:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1edd7:	lea    rdx,[rip+0x8a92]        # 27870 <__FUNCTION__.12755>
   1edde:	lea    rsi,[rip+0x8a1b]        # 27800 <__FUNCTION__.12544+0x850>
   1ede5:	xor    eax,eax
   1ede7:	mov    ebx,0xffffffff
   1edec:	call   5b60 <xc_dom_printf@plt>
   1edf1:	jmp    1eda2 <start_info_x86_32+0x1c2>
   1edf3:	nop    DWORD PTR [rax]
   1edf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001ee00 <start_info_x86_64>:
   1ee00:	push   r13
   1ee02:	push   r12
   1ee04:	mov    edx,0x1
   1ee09:	push   rbp
   1ee0a:	push   rbx
   1ee0b:	mov    rbx,rdi
   1ee0e:	sub    rsp,0x8
   1ee12:	mov    rsi,QWORD PTR [rdi+0x3e8]
   1ee19:	mov    r13,QWORD PTR [rdi+0x910]
   1ee20:	call   6320 <xc_dom_pfn_to_ptr@plt>
   1ee25:	mov    rdi,rbx
   1ee28:	mov    rbp,rax
   1ee2b:	call   5af0 <xc_dom_translated@plt>
   1ee30:	test   al,al
   1ee32:	je     1f000 <start_info_x86_64+0x200>
   1ee38:	mov    r12,QWORD PTR [rbx+0x400]
   1ee3f:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1ee46:	lea    rdx,[rip+0x8ac3]        # 27910 <__FUNCTION__.12762>
   1ee4d:	lea    rsi,[rip+0x6527]        # 2537b <deep_features.2995+0x23b>
   1ee54:	xor    eax,eax
   1ee56:	call   5b60 <xc_dom_printf@plt>
   1ee5b:	test   rbp,rbp
   1ee5e:	je     1f02c <start_info_x86_64+0x22c>
   1ee64:	lea    rdi,[rbp+0x8]
   1ee68:	mov    rcx,rbp
   1ee6b:	xor    eax,eax
   1ee6d:	mov    QWORD PTR [rbp+0x0],0x0
   1ee75:	mov    QWORD PTR [rbp+0x488],0x0
   1ee80:	mov    edx,0x20
   1ee85:	and    rdi,0xfffffffffffffff8
   1ee89:	shl    r12,0xc
   1ee8d:	sub    rcx,rdi
   1ee90:	add    ecx,0x490
   1ee96:	shr    ecx,0x3
   1ee99:	rep stos QWORD PTR es:[rdi],rax
   1ee9c:	mov    rdi,rbp
   1ee9f:	mov    rsi,QWORD PTR [rbx+0x340]
   1eea6:	call   5980 <strncpy@plt>
   1eeab:	mov    BYTE PTR [rbp+0x1f],0x0
   1eeaf:	mov    rax,QWORD PTR [rbx+0x468]
   1eeb6:	mov    QWORD PTR [rbp+0x28],r12
   1eeba:	mov    QWORD PTR [rbp+0x20],rax
   1eebe:	mov    rax,QWORD PTR [rbx+0x388]
   1eec5:	mov    QWORD PTR [rbp+0x58],rax
   1eec9:	mov    eax,DWORD PTR [r13+0x20]
   1eecd:	mov    QWORD PTR [rbp+0x60],rax
   1eed1:	mov    rax,QWORD PTR [rbx+0x368]
   1eed8:	mov    QWORD PTR [rbp+0x68],rax
   1eedc:	cmp    QWORD PTR [rbx+0x310],0xffffffffffffffff
   1eee4:	je     1ef02 <start_info_x86_64+0x102>
   1eee6:	mov    rax,QWORD PTR [rbx+0x378]
   1eeed:	mov    QWORD PTR [rbp+0x480],rax
   1eef4:	mov    rax,QWORD PTR [rbx+0x380]
   1eefb:	mov    QWORD PTR [rbp+0x488],rax
   1ef02:	mov    rax,QWORD PTR [rbx+0x4a8]
   1ef09:	mov    rdi,rbx
   1ef0c:	mov    DWORD PTR [rbp+0x30],eax
   1ef0f:	mov    r12,QWORD PTR [rbx+0x3f8]
   1ef16:	call   5af0 <xc_dom_translated@plt>
   1ef1b:	test   al,al
   1ef1d:	jne    1ef50 <start_info_x86_64+0x150>
   1ef1f:	mov    rax,QWORD PTR [rbx+0x460]
   1ef26:	cmp    r12,rax
   1ef29:	jb     1f020 <start_info_x86_64+0x220>
   1ef2f:	mov    rdx,QWORD PTR [rbx+0x468]
   1ef36:	add    rdx,rax
   1ef39:	cmp    r12,rdx
   1ef3c:	jae    1f020 <start_info_x86_64+0x220>
   1ef42:	sub    r12,rax
   1ef45:	mov    rax,QWORD PTR [rbx+0x450]
   1ef4c:	mov    r12,QWORD PTR [rax+r12*8]
   1ef50:	mov    QWORD PTR [rbp+0x38],r12
   1ef54:	mov    eax,DWORD PTR [rbx+0x4b4]
   1ef5a:	mov    rdi,rbx
   1ef5d:	mov    DWORD PTR [rbp+0x40],eax
   1ef60:	mov    r12,QWORD PTR [rbx+0x3f0]
   1ef67:	call   5af0 <xc_dom_translated@plt>
   1ef6c:	test   al,al
   1ef6e:	jne    1efa1 <start_info_x86_64+0x1a1>
   1ef70:	mov    rax,QWORD PTR [rbx+0x460]
   1ef77:	cmp    r12,rax
   1ef7a:	jb     1f010 <start_info_x86_64+0x210>
   1ef80:	mov    rdx,QWORD PTR [rbx+0x468]
   1ef87:	add    rdx,rax
   1ef8a:	cmp    r12,rdx
   1ef8d:	jae    1f010 <start_info_x86_64+0x210>
   1ef93:	sub    r12,rax
   1ef96:	mov    rax,QWORD PTR [rbx+0x450]
   1ef9d:	mov    r12,QWORD PTR [rax+r12*8]
   1efa1:	mov    QWORD PTR [rbp+0x48],r12
   1efa5:	mov    eax,DWORD PTR [rbx+0x4b0]
   1efab:	mov    DWORD PTR [rbp+0x50],eax
   1efae:	cmp    QWORD PTR [rbx+0x18],0x0
   1efb3:	je     1efcb <start_info_x86_64+0x1cb>
   1efb5:	mov    rax,QWORD PTR [rbx+0x428]
   1efbc:	mov    QWORD PTR [rbp+0x70],rax
   1efc0:	mov    rax,QWORD PTR [rbx+0x430]
   1efc7:	mov    QWORD PTR [rbp+0x78],rax
   1efcb:	mov    rsi,QWORD PTR [rbx+0xb0]
   1efd2:	xor    ebx,ebx
   1efd4:	test   rsi,rsi
   1efd7:	je     1eff1 <start_info_x86_64+0x1f1>
   1efd9:	lea    rdi,[rbp+0x80]
   1efe0:	mov    edx,0x400
   1efe5:	call   5980 <strncpy@plt>
   1efea:	mov    BYTE PTR [rbp+0x47f],0x0
   1eff1:	add    rsp,0x8
   1eff5:	mov    eax,ebx
   1eff7:	pop    rbx
   1eff8:	pop    rbp
   1eff9:	pop    r12
   1effb:	pop    r13
   1effd:	ret    
   1effe:	xchg   ax,ax
   1f000:	mov    r12,QWORD PTR [rbx+0x4c0]
   1f007:	jmp    1ee3f <start_info_x86_64+0x3f>
   1f00c:	nop    DWORD PTR [rax+0x0]
   1f010:	mov    r12,0xffffffffffffffff
   1f017:	jmp    1efa1 <start_info_x86_64+0x1a1>
   1f019:	nop    DWORD PTR [rax+0x0]
   1f020:	mov    r12,0xffffffffffffffff
   1f027:	jmp    1ef50 <start_info_x86_64+0x150>
   1f02c:	mov    rdi,QWORD PTR [rbx+0x4c8]
   1f033:	lea    rdx,[rip+0x88d6]        # 27910 <__FUNCTION__.12762>
   1f03a:	lea    rsi,[rip+0x87bf]        # 27800 <__FUNCTION__.12544+0x850>
   1f041:	xor    eax,eax
   1f043:	mov    ebx,0xffffffff
   1f048:	call   5b60 <xc_dom_printf@plt>
   1f04d:	jmp    1eff1 <start_info_x86_64+0x1f1>
   1f04f:	nop

000000000001f050 <xc_cpuid_policy>:
   1f050:	mov    eax,DWORD PTR [rsi]
   1f052:	mov    ecx,eax
   1f054:	xor    cx,cx
   1f057:	cmp    ecx,0x40000000
   1f05d:	je     1f140 <xc_cpuid_policy+0xf0>
   1f063:	cmp    BYTE PTR [rdi+0x4],0x0
   1f067:	jne    1f0d0 <xc_cpuid_policy+0x80>
   1f069:	cmp    eax,0x80000000
   1f06e:	je     1f450 <xc_cpuid_policy+0x400>
   1f074:	ja     1f190 <xc_cpuid_policy+0x140>
   1f07a:	cmp    eax,0x5
   1f07d:	je     1f140 <xc_cpuid_policy+0xf0>
   1f083:	ja     1f1d0 <xc_cpuid_policy+0x180>
   1f089:	test   eax,eax
   1f08b:	je     1f440 <xc_cpuid_policy+0x3f0>
   1f091:	cmp    eax,0x1
   1f094:	jne    1f3c8 <xc_cpuid_policy+0x378>
   1f09a:	and    DWORD PTR [rdx+0x4],0xffffff
   1f0a1:	mov    rax,QWORD PTR [rdi+0x10]
   1f0a5:	mov    eax,DWORD PTR [rax+0x4]
   1f0a8:	mov    DWORD PTR [rdx+0x8],eax
   1f0ab:	mov    rax,QWORD PTR [rdi+0x10]
   1f0af:	mov    eax,DWORD PTR [rax]
   1f0b1:	and    eax,0xefffffff
   1f0b6:	mov    ecx,eax
   1f0b8:	or     ecx,0x10000000
   1f0be:	test   DWORD PTR [rdx+0xc],0x10000000
   1f0c5:	cmovne eax,ecx
   1f0c8:	mov    DWORD PTR [rdx+0xc],eax
   1f0cb:	ret    
   1f0cc:	nop    DWORD PTR [rax+0x0]
   1f0d0:	cmp    eax,0x80000001
   1f0d5:	je     1f470 <xc_cpuid_policy+0x420>
   1f0db:	ja     1f158 <xc_cpuid_policy+0x108>
   1f0dd:	cmp    eax,0x4
   1f0e0:	je     1f108 <xc_cpuid_policy+0xb8>
   1f0e2:	ja     1f260 <xc_cpuid_policy+0x210>
   1f0e8:	cmp    eax,0x1
   1f0eb:	je     1f320 <xc_cpuid_policy+0x2d0>
   1f0f1:	jae    1f560 <xc_cpuid_policy+0x510>
   1f0f7:	cmp    DWORD PTR [rdx],0xd
   1f0fa:	jbe    1f14f <xc_cpuid_policy+0xff>
   1f0fc:	mov    DWORD PTR [rdx],0xd
   1f102:	mov    eax,DWORD PTR [rsi]
   1f104:	nop    DWORD PTR [rax+0x0]
   1f108:	cmp    DWORD PTR [rdi],0x2
   1f10b:	je     1f220 <xc_cpuid_policy+0x1d0>
   1f111:	cmp    eax,0x80000000
   1f116:	je     1f3d0 <xc_cpuid_policy+0x380>
   1f11c:	jbe    1f2b0 <xc_cpuid_policy+0x260>
   1f122:	cmp    eax,0x80000005
   1f127:	je     1f2a0 <xc_cpuid_policy+0x250>
   1f12d:	cmp    eax,0x80000008
   1f132:	jne    1f3b0 <xc_cpuid_policy+0x360>
   1f138:	mov    DWORD PTR [rdx+0x8],0x0
   1f13f:	ret    
   1f140:	mov    QWORD PTR [rdx],0x0
   1f147:	mov    QWORD PTR [rdx+0x8],0x0
   1f14f:	repz ret 
   1f151:	nop    DWORD PTR [rax+0x0]
   1f158:	cmp    eax,0x80000008
   1f15d:	je     1f490 <xc_cpuid_policy+0x440>
   1f163:	ja     1f370 <xc_cpuid_policy+0x320>
   1f169:	cmp    eax,0x80000006
   1f16e:	jbe    1f108 <xc_cpuid_policy+0xb8>
   1f170:	and    DWORD PTR [rdx+0xc],0x100
   1f177:	mov    QWORD PTR [rdx],0x0
   1f17e:	mov    DWORD PTR [rdx+0x8],0x0
   1f185:	mov    eax,DWORD PTR [rsi]
   1f187:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f18c:	nop    DWORD PTR [rax+0x0]
   1f190:	cmp    eax,0x8000000a
   1f195:	je     1f140 <xc_cpuid_policy+0xf0>
   1f197:	ja     1f4b0 <xc_cpuid_policy+0x460>
   1f19d:	cmp    eax,0x80000001
   1f1a2:	je     1f410 <xc_cpuid_policy+0x3c0>
   1f1a8:	cmp    eax,0x80000008
   1f1ad:	jne    1f3c0 <xc_cpuid_policy+0x370>
   1f1b3:	and    DWORD PTR [rdx],0xffff
   1f1b9:	mov    rax,QWORD PTR [rdi+0x10]
   1f1bd:	mov    eax,DWORD PTR [rax+0x20]
   1f1c0:	mov    QWORD PTR [rdx+0x8],0x0
   1f1c8:	mov    DWORD PTR [rdx+0x4],eax
   1f1cb:	ret    
   1f1cc:	nop    DWORD PTR [rax+0x0]
   1f1d0:	cmp    eax,0xb
   1f1d3:	je     1f140 <xc_cpuid_policy+0xf0>
   1f1d9:	cmp    eax,0xd
   1f1dc:	je     1f3e8 <xc_cpuid_policy+0x398>
   1f1e2:	cmp    eax,0x7
   1f1e5:	jne    1f14f <xc_cpuid_policy+0xff>
   1f1eb:	mov    eax,DWORD PTR [rsi+0x4]
   1f1ee:	test   eax,eax
   1f1f0:	jne    1f4d8 <xc_cpuid_policy+0x488>
   1f1f6:	mov    rax,QWORD PTR [rdi+0x10]
   1f1fa:	mov    eax,DWORD PTR [rax+0x14]
   1f1fd:	mov    DWORD PTR [rdx+0x4],eax
   1f200:	mov    rax,QWORD PTR [rdi+0x10]
   1f204:	mov    eax,DWORD PTR [rax+0x18]
   1f207:	mov    DWORD PTR [rdx+0x8],eax
   1f20a:	mov    rax,QWORD PTR [rdi+0x10]
   1f20e:	mov    eax,DWORD PTR [rax+0x24]
   1f211:	mov    DWORD PTR [rdx+0xc],eax
   1f214:	mov    DWORD PTR [rdx],0x0
   1f21a:	ret    
   1f21b:	nop    DWORD PTR [rax+rax*1+0x0]
   1f220:	cmp    eax,0x80000000
   1f225:	je     1f4f0 <xc_cpuid_policy+0x4a0>
   1f22b:	jbe    1f358 <xc_cpuid_policy+0x308>
   1f231:	cmp    eax,0x80000008
   1f236:	je     1f508 <xc_cpuid_policy+0x4b8>
   1f23c:	cmp    eax,0x8000000a
   1f241:	jne    1f59e <xc_cpuid_policy+0x54e>
   1f247:	cmp    BYTE PTR [rdi+0x1e],0x0
   1f24b:	je     1f140 <xc_cpuid_policy+0xf0>
   1f251:	mov    eax,DWORD PTR [rdx+0xc]
   1f254:	and    eax,0x48b
   1f259:	or     eax,0x30
   1f25c:	mov    DWORD PTR [rdx+0xc],eax
   1f25f:	ret    
   1f260:	cmp    eax,0xa
   1f263:	je     1f108 <xc_cpuid_policy+0xb8>
   1f269:	jbe    1f2e0 <xc_cpuid_policy+0x290>
   1f26b:	cmp    eax,0xd
   1f26e:	jne    1f57e <xc_cpuid_policy+0x52e>
   1f274:	cmp    DWORD PTR [rsi+0x4],0x1
   1f278:	je     1f570 <xc_cpuid_policy+0x520>
   1f27e:	mov    DWORD PTR [rdx],0x0
   1f284:	mov    QWORD PTR [rdx+0x4],0x0
   1f28c:	mov    DWORD PTR [rdx+0xc],0x0
   1f293:	mov    eax,DWORD PTR [rsi]
   1f295:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f29a:	nop    WORD PTR [rax+rax*1+0x0]
   1f2a0:	mov    QWORD PTR [rdx],0x0
   1f2a7:	mov    DWORD PTR [rdx+0x8],0x0
   1f2ae:	ret    
   1f2af:	nop
   1f2b0:	cmp    eax,0x4
   1f2b3:	jne    1f3b8 <xc_cpuid_policy+0x368>
   1f2b9:	mov    eax,DWORD PTR [rdx]
   1f2bb:	and    DWORD PTR [rdx+0xc],0x3ff
   1f2c2:	lea    ecx,[rax+rax*1]
   1f2c5:	and    eax,0x3ff
   1f2ca:	or     eax,0x4000000
   1f2cf:	and    ecx,0xf8000000
   1f2d5:	or     eax,ecx
   1f2d7:	mov    DWORD PTR [rdx],eax
   1f2d9:	ret    
   1f2da:	nop    WORD PTR [rax+rax*1+0x0]
   1f2e0:	cmp    eax,0x7
   1f2e3:	jne    1f398 <xc_cpuid_policy+0x348>
   1f2e9:	mov    ecx,DWORD PTR [rsi+0x4]
   1f2ec:	test   ecx,ecx
   1f2ee:	jne    1f530 <xc_cpuid_policy+0x4e0>
   1f2f4:	mov    rax,QWORD PTR [rdi+0x10]
   1f2f8:	mov    eax,DWORD PTR [rax+0x14]
   1f2fb:	mov    DWORD PTR [rdx+0x4],eax
   1f2fe:	mov    rax,QWORD PTR [rdi+0x10]
   1f302:	mov    eax,DWORD PTR [rax+0x18]
   1f305:	mov    DWORD PTR [rdx+0x8],eax
   1f308:	mov    rax,QWORD PTR [rdi+0x10]
   1f30c:	mov    eax,DWORD PTR [rax+0x24]
   1f30f:	mov    DWORD PTR [rdx+0xc],eax
   1f312:	mov    DWORD PTR [rdx],0x0
   1f318:	mov    eax,DWORD PTR [rsi]
   1f31a:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f31f:	nop
   1f320:	mov    ecx,DWORD PTR [rdx+0x4]
   1f323:	lea    eax,[rcx+rcx*1]
   1f326:	movzx  ecx,cx
   1f329:	and    eax,0xfe0000
   1f32e:	or     eax,ecx
   1f330:	mov    DWORD PTR [rdx+0x4],eax
   1f333:	mov    rax,QWORD PTR [rdi+0x10]
   1f337:	mov    eax,DWORD PTR [rax+0x4]
   1f33a:	mov    DWORD PTR [rdx+0x8],eax
   1f33d:	mov    rax,QWORD PTR [rdi+0x10]
   1f341:	mov    eax,DWORD PTR [rax]
   1f343:	or     eax,0x10000000
   1f348:	mov    DWORD PTR [rdx+0xc],eax
   1f34b:	mov    eax,DWORD PTR [rsi]
   1f34d:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f352:	nop    WORD PTR [rax+rax*1+0x0]
   1f358:	cmp    eax,0x2
   1f35b:	je     1f2a0 <xc_cpuid_policy+0x250>
   1f361:	cmp    eax,0x4
   1f364:	je     1f2a0 <xc_cpuid_policy+0x250>
   1f36a:	repz ret 
   1f36c:	nop    DWORD PTR [rax+0x0]
   1f370:	cmp    eax,0x8000001a
   1f375:	ja     1f58e <xc_cpuid_policy+0x53e>
   1f37b:	cmp    eax,0x80000019
   1f380:	jae    1f108 <xc_cpuid_policy+0xb8>
   1f386:	cmp    eax,0x8000000a
   1f38b:	je     1f108 <xc_cpuid_policy+0xb8>
   1f391:	nop    DWORD PTR [rax+0x0]
   1f398:	mov    QWORD PTR [rdx],0x0
   1f39f:	mov    QWORD PTR [rdx+0x8],0x0
   1f3a7:	mov    eax,DWORD PTR [rsi]
   1f3a9:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f3ae:	xchg   ax,ax
   1f3b0:	repz ret 
   1f3b2:	nop    WORD PTR [rax+rax*1+0x0]
   1f3b8:	repz ret 
   1f3ba:	nop    WORD PTR [rax+rax*1+0x0]
   1f3c0:	repz ret 
   1f3c2:	nop    WORD PTR [rax+rax*1+0x0]
   1f3c8:	repz ret 
   1f3ca:	nop    WORD PTR [rax+rax*1+0x0]
   1f3d0:	cmp    DWORD PTR [rdx],0x80000008
   1f3d6:	jbe    1f14f <xc_cpuid_policy+0xff>
   1f3dc:	mov    DWORD PTR [rdx],0x80000008
   1f3e2:	ret    
   1f3e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1f3e8:	cmp    DWORD PTR [rsi+0x4],0x1
   1f3ec:	je     1f548 <xc_cpuid_policy+0x4f8>
   1f3f2:	mov    DWORD PTR [rdx],0x0
   1f3f8:	mov    QWORD PTR [rdx+0x4],0x0
   1f400:	mov    DWORD PTR [rdx+0xc],0x0
   1f407:	ret    
   1f408:	nop    DWORD PTR [rax+rax*1+0x0]
   1f410:	mov    rax,QWORD PTR [rdi+0x10]
   1f414:	mov    ecx,DWORD PTR [rdx+0x8]
   1f417:	mov    eax,DWORD PTR [rax+0xc]
   1f41a:	and    eax,0xfffffffd
   1f41d:	and    ecx,0x2
   1f420:	mov    DWORD PTR [rdx+0x8],eax
   1f423:	mov    rsi,QWORD PTR [rdi+0x10]
   1f427:	mov    esi,DWORD PTR [rsi+0x8]
   1f42a:	mov    DWORD PTR [rdx+0xc],esi
   1f42d:	je     1f14f <xc_cpuid_policy+0xff>
   1f433:	or     eax,0x2
   1f436:	mov    DWORD PTR [rdx+0x8],eax
   1f439:	ret    
   1f43a:	nop    WORD PTR [rax+rax*1+0x0]
   1f440:	cmp    DWORD PTR [rdx],0xd
   1f443:	jbe    1f14f <xc_cpuid_policy+0xff>
   1f449:	mov    DWORD PTR [rdx],0xd
   1f44f:	ret    
   1f450:	cmp    DWORD PTR [rdi],0x2
   1f453:	mov    eax,0x80000008
   1f458:	mov    ecx,0x8000001c
   1f45d:	cmove  eax,ecx
   1f460:	cmp    DWORD PTR [rdx],eax
   1f462:	jbe    1f14f <xc_cpuid_policy+0xff>
   1f468:	mov    DWORD PTR [rdx],eax
   1f46a:	ret    
   1f46b:	nop    DWORD PTR [rax+rax*1+0x0]
   1f470:	mov    rax,QWORD PTR [rdi+0x10]
   1f474:	mov    eax,DWORD PTR [rax+0xc]
   1f477:	and    eax,0xfffffffd
   1f47a:	mov    DWORD PTR [rdx+0x8],eax
   1f47d:	mov    rax,QWORD PTR [rdi+0x10]
   1f481:	mov    eax,DWORD PTR [rax+0x8]
   1f484:	mov    DWORD PTR [rdx+0xc],eax
   1f487:	mov    eax,DWORD PTR [rsi]
   1f489:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f48e:	xchg   ax,ax
   1f490:	and    DWORD PTR [rdx],0xffff
   1f496:	mov    rax,QWORD PTR [rdi+0x10]
   1f49a:	mov    eax,DWORD PTR [rax+0x20]
   1f49d:	mov    DWORD PTR [rdx+0xc],0x0
   1f4a4:	mov    DWORD PTR [rdx+0x4],eax
   1f4a7:	mov    eax,DWORD PTR [rsi]
   1f4a9:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f4ae:	xchg   ax,ax
   1f4b0:	cmp    eax,0x8000001b
   1f4b5:	jb     1f14f <xc_cpuid_policy+0xff>
   1f4bb:	cmp    eax,0x8000001c
   1f4c0:	jbe    1f140 <xc_cpuid_policy+0xf0>
   1f4c6:	cmp    eax,0x8000001e
   1f4cb:	je     1f140 <xc_cpuid_policy+0xf0>
   1f4d1:	repz ret 
   1f4d3:	nop    DWORD PTR [rax+rax*1+0x0]
   1f4d8:	mov    QWORD PTR [rdx+0x4],0x0
   1f4e0:	mov    DWORD PTR [rdx+0xc],0x0
   1f4e7:	jmp    1f214 <xc_cpuid_policy+0x1c4>
   1f4ec:	nop    DWORD PTR [rax+0x0]
   1f4f0:	cmp    DWORD PTR [rdx],0x8000001c
   1f4f6:	jbe    1f14f <xc_cpuid_policy+0xff>
   1f4fc:	mov    DWORD PTR [rdx],0x8000001c
   1f502:	ret    
   1f503:	nop    DWORD PTR [rax+rax*1+0x0]
   1f508:	mov    ecx,DWORD PTR [rdx+0x8]
   1f50b:	lea    eax,[rcx+0x1000]
   1f511:	add    ecx,ecx
   1f513:	and    ecx,0x1fe
   1f519:	and    eax,0xf000
   1f51e:	or     eax,ecx
   1f520:	or     eax,0x1
   1f523:	mov    DWORD PTR [rdx+0x8],eax
   1f526:	ret    
   1f527:	nop    WORD PTR [rax+rax*1+0x0]
   1f530:	mov    QWORD PTR [rdx+0x4],0x0
   1f538:	mov    DWORD PTR [rdx+0xc],0x0
   1f53f:	jmp    1f312 <xc_cpuid_policy+0x2c2>
   1f544:	nop    DWORD PTR [rax+0x0]
   1f548:	mov    rax,QWORD PTR [rdi+0x10]
   1f54c:	mov    eax,DWORD PTR [rax+0x10]
   1f54f:	mov    DWORD PTR [rdx],eax
   1f551:	jmp    1f3f8 <xc_cpuid_policy+0x3a8>
   1f556:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1f560:	cmp    eax,0x2
   1f563:	jne    1f398 <xc_cpuid_policy+0x348>
   1f569:	jmp    1f108 <xc_cpuid_policy+0xb8>
   1f56e:	xchg   ax,ax
   1f570:	mov    rax,QWORD PTR [rdi+0x10]
   1f574:	mov    eax,DWORD PTR [rax+0x10]
   1f577:	mov    DWORD PTR [rdx],eax
   1f579:	jmp    1f284 <xc_cpuid_policy+0x234>
   1f57e:	cmp    eax,0x80000000
   1f583:	je     1f108 <xc_cpuid_policy+0xb8>
   1f589:	jmp    1f398 <xc_cpuid_policy+0x348>
   1f58e:	cmp    eax,0x8000001c
   1f593:	je     1f108 <xc_cpuid_policy+0xb8>
   1f599:	jmp    1f398 <xc_cpuid_policy+0x348>
   1f59e:	repz ret 

000000000001f5a0 <xc_cpuid_do_domctl>:
   1f5a0:	push   r13
   1f5a2:	push   r12
   1f5a4:	mov    r8,rcx
   1f5a7:	push   rbp
   1f5a8:	push   rbx
   1f5a9:	mov    rbx,rdi
   1f5ac:	mov    ecx,0x10
   1f5b1:	sub    rsp,0xd8
   1f5b8:	mov    rax,QWORD PTR fs:0x28
   1f5c1:	mov    QWORD PTR [rsp+0xc8],rax
   1f5c9:	xor    eax,eax
   1f5cb:	lea    rdi,[rsp+0x40]
   1f5d0:	mov    QWORD PTR [rsp+0x3a],0x0
   1f5d9:	mov    QWORD PTR [rsp+0xb8],0x0
   1f5e5:	lea    r9,[rsp+0x30]
   1f5ea:	mov    rbp,rsp
   1f5ed:	rep stos QWORD PTR es:[rdi],rax
   1f5f0:	mov    WORD PTR [rsp+0x38],si
   1f5f5:	mov    rdi,rbx
   1f5f8:	mov    rsi,rbp
   1f5fb:	mov    QWORD PTR [rsp],0x0
   1f603:	mov    QWORD PTR [rsp+0x8],0x0
   1f60c:	mov    eax,DWORD PTR [rdx]
   1f60e:	mov    DWORD PTR [rsp+0x10],0x3
   1f616:	mov    QWORD PTR [rsp+0x18],r9
   1f61b:	mov    QWORD PTR [rsp+0x20],0x90
   1f624:	mov    DWORD PTR [rsp+0x40],eax
   1f628:	mov    eax,DWORD PTR [rdx+0x4]
   1f62b:	mov    DWORD PTR [rsp+0x44],eax
   1f62f:	mov    eax,DWORD PTR [r8]
   1f632:	mov    DWORD PTR [rsp+0x48],eax
   1f636:	mov    eax,DWORD PTR [r8+0x4]
   1f63a:	mov    DWORD PTR [rsp+0x4c],eax
   1f63e:	mov    eax,DWORD PTR [r8+0x8]
   1f642:	mov    DWORD PTR [rsp+0x50],eax
   1f646:	mov    eax,DWORD PTR [r8+0xc]
   1f64a:	mov    DWORD PTR [rsp+0x54],eax
   1f64e:	movabs rax,0x1100000031
   1f658:	mov    QWORD PTR [rsp+0x30],rax
   1f65d:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1f662:	test   eax,eax
   1f664:	jne    1f706 <xc_cpuid_do_domctl+0x166>
   1f66a:	mov    rax,QWORD PTR [rsp+0x8]
   1f66f:	mov    rdi,QWORD PTR [rbx+0x440]
   1f676:	mov    esi,0x24
   1f67b:	test   rax,rax
   1f67e:	cmove  rax,rbp
   1f682:	mov    rdx,QWORD PTR [rax]
   1f685:	call   5e30 <xencall1@plt>
   1f68a:	test   eax,eax
   1f68c:	mov    r12d,eax
   1f68f:	jns    1f69e <xc_cpuid_do_domctl+0xfe>
   1f691:	call   5940 <__errno_location@plt>
   1f696:	cmp    DWORD PTR [rax],0xd
   1f699:	mov    r13,rax
   1f69c:	je     1f6e0 <xc_cpuid_do_domctl+0x140>
   1f69e:	mov    rsi,QWORD PTR [rsp+0x8]
   1f6a3:	mov    rdi,rbx
   1f6a6:	test   rsi,rsi
   1f6a9:	cmove  rsi,rbp
   1f6ad:	call   6210 <xc__hypercall_bounce_post@plt>
   1f6b2:	mov    rcx,QWORD PTR [rsp+0xc8]
   1f6ba:	xor    rcx,QWORD PTR fs:0x28
   1f6c3:	mov    eax,r12d
   1f6c6:	jne    1f747 <xc_cpuid_do_domctl+0x1a7>
   1f6c8:	add    rsp,0xd8
   1f6cf:	pop    rbx
   1f6d0:	pop    rbp
   1f6d1:	pop    r12
   1f6d3:	pop    r13
   1f6d5:	ret    
   1f6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1f6e0:	mov    rsi,QWORD PTR [rbx+0x8]
   1f6e4:	lea    r8,[rip+0x26d5]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
   1f6eb:	xor    ecx,ecx
   1f6ed:	mov    edx,0x3
   1f6f2:	mov    rdi,rbx
   1f6f5:	xor    eax,eax
   1f6f7:	call   6540 <xc_report@plt>
   1f6fc:	mov    DWORD PTR [r13+0x0],0xd
   1f704:	jmp    1f69e <xc_cpuid_do_domctl+0xfe>
   1f706:	call   5940 <__errno_location@plt>
   1f70b:	mov    r12d,DWORD PTR [rax]
   1f70e:	mov    rbp,rax
   1f711:	mov    rdi,rbx
   1f714:	mov    esi,r12d
   1f717:	call   6570 <xc_strerror@plt>
   1f71c:	mov    ecx,DWORD PTR [rbp+0x0]
   1f71f:	lea    rdx,[rip+0x2662]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
   1f726:	mov    r8,rax
   1f729:	mov    esi,0x1
   1f72e:	mov    rdi,rbx
   1f731:	xor    eax,eax
   1f733:	call   5d50 <xc_report_error@plt>
   1f738:	mov    DWORD PTR [rbp+0x0],r12d
   1f73c:	mov    r12d,0xffffffff
   1f742:	jmp    1f6b2 <xc_cpuid_do_domctl+0x112>
   1f747:	call   5b80 <__stack_chk_fail@plt>
   1f74c:	nop    DWORD PTR [rax+0x0]

000000000001f750 <xc_get_cpu_levelling_caps>:
   1f750:	push   r13
   1f752:	push   r12
   1f754:	mov    r13,rsi
   1f757:	push   rbp
   1f758:	push   rbx
   1f759:	mov    rbx,rdi
   1f75c:	sub    rsp,0xc8
   1f763:	mov    rax,QWORD PTR fs:0x28
   1f76c:	mov    QWORD PTR [rsp+0xb8],rax
   1f774:	xor    eax,eax
   1f776:	lea    rax,[rsp+0x30]
   1f77b:	mov    rbp,rsp
   1f77e:	mov    QWORD PTR [rsp],0x0
   1f786:	mov    rsi,rbp
   1f789:	mov    QWORD PTR [rsp+0x8],0x0
   1f792:	mov    DWORD PTR [rsp+0x10],0x3
   1f79a:	mov    QWORD PTR [rsp+0x18],rax
   1f79f:	movabs rax,0x1200000019
   1f7a9:	mov    QWORD PTR [rsp+0x20],0x88
   1f7b2:	mov    QWORD PTR [rsp+0x30],rax
   1f7b7:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1f7bc:	test   eax,eax
   1f7be:	jne    1f89e <xc_get_cpu_levelling_caps+0x14e>
   1f7c4:	mov    rax,QWORD PTR [rsp+0x8]
   1f7c9:	mov    rdi,QWORD PTR [rbx+0x440]
   1f7d0:	mov    esi,0x23
   1f7d5:	test   rax,rax
   1f7d8:	cmove  rax,rbp
   1f7dc:	mov    rdx,QWORD PTR [rax]
   1f7df:	call   5e30 <xencall1@plt>
   1f7e4:	test   eax,eax
   1f7e6:	mov    r12d,eax
   1f7e9:	js     1f838 <xc_get_cpu_levelling_caps+0xe8>
   1f7eb:	mov    rsi,QWORD PTR [rsp+0x8]
   1f7f0:	mov    rdi,rbx
   1f7f3:	test   rsi,rsi
   1f7f6:	cmove  rsi,rbp
   1f7fa:	call   6210 <xc__hypercall_bounce_post@plt>
   1f7ff:	test   r12d,r12d
   1f802:	jne    1f80c <xc_get_cpu_levelling_caps+0xbc>
   1f804:	mov    eax,DWORD PTR [rsp+0x38]
   1f808:	mov    DWORD PTR [r13+0x0],eax
   1f80c:	mov    rcx,QWORD PTR [rsp+0xb8]
   1f814:	xor    rcx,QWORD PTR fs:0x28
   1f81d:	mov    eax,r12d
   1f820:	jne    1f8df <xc_get_cpu_levelling_caps+0x18f>
   1f826:	add    rsp,0xc8
   1f82d:	pop    rbx
   1f82e:	pop    rbp
   1f82f:	pop    r12
   1f831:	pop    r13
   1f833:	ret    
   1f834:	nop    DWORD PTR [rax+0x0]
   1f838:	call   5940 <__errno_location@plt>
   1f83d:	cmp    DWORD PTR [rax],0xd
   1f840:	mov    r13,rax
   1f843:	je     1f860 <xc_get_cpu_levelling_caps+0x110>
   1f845:	mov    rsi,QWORD PTR [rsp+0x8]
   1f84a:	test   rsi,rsi
   1f84d:	je     1f88e <xc_get_cpu_levelling_caps+0x13e>
   1f84f:	mov    rdi,rbx
   1f852:	call   6210 <xc__hypercall_bounce_post@plt>
   1f857:	jmp    1f80c <xc_get_cpu_levelling_caps+0xbc>
   1f859:	nop    DWORD PTR [rax+0x0]
   1f860:	mov    rsi,QWORD PTR [rbx+0x8]
   1f864:	lea    r8,[rip+0x81d5]        # 27a40 <__PRETTY_FUNCTION__.13026+0x50>
   1f86b:	xor    ecx,ecx
   1f86d:	xor    eax,eax
   1f86f:	mov    edx,0x3
   1f874:	mov    rdi,rbx
   1f877:	call   6540 <xc_report@plt>
   1f87c:	mov    rsi,QWORD PTR [rsp+0x8]
   1f881:	mov    DWORD PTR [r13+0x0],0xd
   1f889:	test   rsi,rsi
   1f88c:	jne    1f84f <xc_get_cpu_levelling_caps+0xff>
   1f88e:	mov    rsi,rbp
   1f891:	mov    rdi,rbx
   1f894:	call   6210 <xc__hypercall_bounce_post@plt>
   1f899:	jmp    1f80c <xc_get_cpu_levelling_caps+0xbc>
   1f89e:	call   5940 <__errno_location@plt>
   1f8a3:	mov    r12d,DWORD PTR [rax]
   1f8a6:	mov    rbp,rax
   1f8a9:	mov    rdi,rbx
   1f8ac:	mov    esi,r12d
   1f8af:	call   6570 <xc_strerror@plt>
   1f8b4:	mov    ecx,DWORD PTR [rbp+0x0]
   1f8b7:	lea    rdx,[rip+0x814a]        # 27a08 <__PRETTY_FUNCTION__.13026+0x18>
   1f8be:	mov    r8,rax
   1f8c1:	mov    esi,0x1
   1f8c6:	mov    rdi,rbx
   1f8c9:	xor    eax,eax
   1f8cb:	call   5d50 <xc_report_error@plt>
   1f8d0:	mov    DWORD PTR [rbp+0x0],r12d
   1f8d4:	mov    r12d,0xffffffff
   1f8da:	jmp    1f80c <xc_get_cpu_levelling_caps+0xbc>
   1f8df:	call   5b80 <__stack_chk_fail@plt>
   1f8e4:	xchg   ax,ax
   1f8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001f8f0 <xc_get_cpu_featureset>:
   1f8f0:	push   r15
   1f8f2:	push   r14
   1f8f4:	push   r13
   1f8f6:	push   r12
   1f8f8:	mov    r13d,esi
   1f8fb:	push   rbp
   1f8fc:	push   rbx
   1f8fd:	mov    r12,rdx
   1f900:	mov    rbx,rdi
   1f903:	sub    rsp,0xf8
   1f90a:	mov    rax,QWORD PTR fs:0x28
   1f913:	mov    QWORD PTR [rsp+0xe8],rax
   1f91b:	xor    eax,eax
   1f91d:	mov    eax,DWORD PTR [rdx]
   1f91f:	mov    rbp,rsp
   1f922:	mov    QWORD PTR [rsp],0x0
   1f92a:	mov    rsi,rbp
   1f92d:	mov    QWORD PTR [rsp+0x8],0x0
   1f936:	mov    DWORD PTR [rsp+0x10],0x2
   1f93e:	mov    QWORD PTR [rsp+0x18],rcx
   1f943:	shl    rax,0x2
   1f947:	mov    QWORD PTR [rsp+0x20],rax
   1f94c:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1f951:	test   eax,eax
   1f953:	jne    1fade <xc_get_cpu_featureset+0x1ee>
   1f959:	mov    eax,DWORD PTR [r12]
   1f95d:	mov    DWORD PTR [rsp+0x68],r13d
   1f962:	lea    r13,[rsp+0x30]
   1f967:	mov    DWORD PTR [rsp+0x60],0x1a
   1f96f:	mov    rdi,rbx
   1f972:	mov    rsi,r13
   1f975:	mov    DWORD PTR [rsp+0x6c],eax
   1f979:	mov    rax,QWORD PTR [rsp+0x8]
   1f97e:	test   rax,rax
   1f981:	cmove  rax,rbp
   1f985:	mov    rax,QWORD PTR [rax]
   1f988:	mov    QWORD PTR [rsp+0x30],0x0
   1f991:	mov    QWORD PTR [rsp+0x38],0x0
   1f99a:	mov    DWORD PTR [rsp+0x40],0x3
   1f9a2:	mov    QWORD PTR [rsp+0x50],0x88
   1f9ab:	mov    DWORD PTR [rsp+0x64],0x12
   1f9b3:	mov    QWORD PTR [rsp+0x70],rax
   1f9b8:	lea    rax,[rsp+0x60]
   1f9bd:	mov    QWORD PTR [rsp+0x48],rax
   1f9c2:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1f9c7:	test   eax,eax
   1f9c9:	jne    1fa95 <xc_get_cpu_featureset+0x1a5>
   1f9cf:	mov    rax,QWORD PTR [rsp+0x38]
   1f9d4:	mov    rdi,QWORD PTR [rbx+0x440]
   1f9db:	mov    esi,0x23
   1f9e0:	test   rax,rax
   1f9e3:	cmove  rax,r13
   1f9e7:	mov    rdx,QWORD PTR [rax]
   1f9ea:	call   5e30 <xencall1@plt>
   1f9ef:	test   eax,eax
   1f9f1:	mov    r14d,eax
   1f9f4:	js     1fa60 <xc_get_cpu_featureset+0x170>
   1f9f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1f9fb:	mov    rdi,rbx
   1f9fe:	test   rsi,rsi
   1fa01:	cmove  rsi,r13
   1fa05:	call   6210 <xc__hypercall_bounce_post@plt>
   1fa0a:	mov    rsi,QWORD PTR [rsp+0x8]
   1fa0f:	mov    rdi,rbx
   1fa12:	test   rsi,rsi
   1fa15:	cmove  rsi,rbp
   1fa19:	call   6210 <xc__hypercall_bounce_post@plt>
   1fa1e:	test   r14d,r14d
   1fa21:	jne    1fa2b <xc_get_cpu_featureset+0x13b>
   1fa23:	mov    eax,DWORD PTR [rsp+0x6c]
   1fa27:	mov    DWORD PTR [r12],eax
   1fa2b:	mov    rdx,QWORD PTR [rsp+0xe8]
   1fa33:	xor    rdx,QWORD PTR fs:0x28
   1fa3c:	mov    eax,r14d
   1fa3f:	jne    1faff <xc_get_cpu_featureset+0x20f>
   1fa45:	add    rsp,0xf8
   1fa4c:	pop    rbx
   1fa4d:	pop    rbp
   1fa4e:	pop    r12
   1fa50:	pop    r13
   1fa52:	pop    r14
   1fa54:	pop    r15
   1fa56:	ret    
   1fa57:	nop    WORD PTR [rax+rax*1+0x0]
   1fa60:	call   5940 <__errno_location@plt>
   1fa65:	cmp    DWORD PTR [rax],0xd
   1fa68:	mov    r15,rax
   1fa6b:	jne    1f9f6 <xc_get_cpu_featureset+0x106>
   1fa6d:	mov    rsi,QWORD PTR [rbx+0x8]
   1fa71:	lea    r8,[rip+0x7fc8]        # 27a40 <__PRETTY_FUNCTION__.13026+0x50>
   1fa78:	xor    ecx,ecx
   1fa7a:	mov    edx,0x3
   1fa7f:	mov    rdi,rbx
   1fa82:	xor    eax,eax
   1fa84:	call   6540 <xc_report@plt>
   1fa89:	mov    DWORD PTR [r15],0xd
   1fa90:	jmp    1f9f6 <xc_get_cpu_featureset+0x106>
   1fa95:	call   5940 <__errno_location@plt>
   1fa9a:	mov    r13d,DWORD PTR [rax]
   1fa9d:	mov    r12,rax
   1faa0:	mov    rdi,rbx
   1faa3:	mov    esi,r13d
   1faa6:	call   6570 <xc_strerror@plt>
   1faab:	mov    ecx,DWORD PTR [r12]
   1faaf:	lea    rdx,[rip+0x7f52]        # 27a08 <__PRETTY_FUNCTION__.13026+0x18>
   1fab6:	mov    r8,rax
   1fab9:	mov    esi,0x1
   1fabe:	xor    eax,eax
   1fac0:	mov    rdi,rbx
   1fac3:	call   5d50 <xc_report_error@plt>
   1fac8:	mov    rsi,QWORD PTR [rsp+0x8]
   1facd:	mov    DWORD PTR [r12],r13d
   1fad1:	test   rsi,rsi
   1fad4:	je     1fae9 <xc_get_cpu_featureset+0x1f9>
   1fad6:	mov    rdi,rbx
   1fad9:	call   6210 <xc__hypercall_bounce_post@plt>
   1fade:	mov    r14d,0xffffffff
   1fae4:	jmp    1fa2b <xc_get_cpu_featureset+0x13b>
   1fae9:	mov    rsi,rbp
   1faec:	mov    rdi,rbx
   1faef:	mov    r14d,0xffffffff
   1faf5:	call   6210 <xc__hypercall_bounce_post@plt>
   1fafa:	jmp    1fa2b <xc_get_cpu_featureset+0x13b>
   1faff:	call   5b80 <__stack_chk_fail@plt>
   1fb04:	xchg   ax,ax
   1fb06:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001fb10 <xc_get_cpu_featureset_size>:
   1fb10:	mov    eax,0xa
   1fb15:	ret    
   1fb16:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001fb20 <get_cpuid_domain_info>:
   1fb20:	push   r15
   1fb22:	push   r14
   1fb24:	mov    r15,rcx
   1fb27:	push   r13
   1fb29:	push   r12
   1fb2b:	mov    r13,rdi
   1fb2e:	push   rbp
   1fb2f:	push   rbx
   1fb30:	mov    ecx,0x12
   1fb35:	mov    r12,rdx
   1fb38:	mov    r14d,esi
   1fb3b:	mov    ebp,r8d
   1fb3e:	sub    rsp,0x168
   1fb45:	mov    rax,QWORD PTR fs:0x28
   1fb4e:	mov    QWORD PTR [rsp+0x158],rax
   1fb56:	xor    eax,eax
   1fb58:	lea    rdi,[rsp+0xc0]
   1fb60:	mov    QWORD PTR [rsp+0x8],rdi
   1fb65:	rep stos QWORD PTR es:[rdi],rax
   1fb68:	call   5a30 <xc_get_cpu_featureset_size@plt>
   1fb6d:	mov    DWORD PTR [rsp+0x1c],eax
   1fb71:	xor    eax,eax
   1fb73:	mov    ecx,eax
   1fb75:	cpuid  
   1fb77:	cmp    ebx,0x756e6547
   1fb7d:	je     1fe40 <get_cpuid_domain_info+0x320>
   1fb83:	cmp    ebx,0x68747541
   1fb89:	sete   sil
   1fb8d:	cmp    ecx,0x444d4163
   1fb93:	sete   al
   1fb96:	test   sil,al
   1fb99:	je     1fba7 <get_cpuid_domain_info+0x87>
   1fb9b:	cmp    edx,0x69746e65
   1fba1:	je     1feb8 <get_cpuid_domain_info+0x398>
   1fba7:	mov    DWORD PTR [r12],0x0
   1fbaf:	lea    rcx,[rsp+0x50]
   1fbb4:	mov    edx,0x1
   1fbb9:	mov    esi,r14d
   1fbbc:	mov    rdi,r13
   1fbbf:	call   5b40 <xc_domain_getinfo@plt>
   1fbc4:	cmp    eax,0x1
   1fbc7:	mov    eax,0xfffffffd
   1fbcc:	jne    1fd18 <get_cpuid_domain_info+0x1f8>
   1fbd2:	cmp    DWORD PTR [rsp+0x50],r14d
   1fbd7:	jne    1fd18 <get_cpuid_domain_info+0x1f8>
   1fbdd:	movzx  ebx,BYTE PTR [rsp+0x58]
   1fbe2:	mov    edi,DWORD PTR [rsp+0x1c]
   1fbe6:	mov    esi,0x4
   1fbeb:	shr    bl,0x6
   1fbee:	mov    DWORD PTR [rsp],edi
   1fbf1:	and    ebx,0x1
   1fbf4:	mov    BYTE PTR [r12+0x4],bl
   1fbf9:	call   5de0 <calloc@plt>
   1fbfe:	test   rax,rax
   1fc01:	mov    QWORD PTR [r12+0x10],rax
   1fc06:	je     1ff15 <get_cpuid_domain_info+0x3f5>
   1fc0c:	mov    edx,DWORD PTR [rsp]
   1fc0f:	test   r15,r15
   1fc12:	mov    DWORD PTR [r12+0x18],edx
   1fc17:	je     1fd48 <get_cpuid_domain_info+0x228>
   1fc1d:	cmp    edx,ebp
   1fc1f:	mov    ebx,edx
   1fc21:	mov    rsi,r15
   1fc24:	cmova  ebx,ebp
   1fc27:	mov    rdi,rax
   1fc2a:	mov    ecx,ebx
   1fc2c:	lea    rdx,[rcx*4+0x0]
   1fc34:	mov    QWORD PTR [rsp],rcx
   1fc38:	call   5eb0 <memcpy@plt>
   1fc3d:	cmp    ebp,ebx
   1fc3f:	jbe    1fd6b <get_cpuid_domain_info+0x24b>
   1fc45:	mov    rcx,QWORD PTR [rsp]
   1fc49:	mov    eax,0xffffffa1
   1fc4e:	mov    esi,DWORD PTR [r15+rcx*4]
   1fc52:	test   esi,esi
   1fc54:	jne    1fd18 <get_cpuid_domain_info+0x1f8>
   1fc5a:	lea    edx,[rbx+0x1]
   1fc5d:	sub    ebp,0x1
   1fc60:	sub    ebp,ebx
   1fc62:	add    rbp,rdx
   1fc65:	lea    rax,[r15+rdx*4]
   1fc69:	lea    rdx,[r15+rbp*4]
   1fc6d:	jmp    1fc7f <get_cpuid_domain_info+0x15f>
   1fc6f:	nop
   1fc70:	add    rax,0x4
   1fc74:	mov    ecx,DWORD PTR [rax-0x4]
   1fc77:	test   ecx,ecx
   1fc79:	jne    1fe68 <get_cpuid_domain_info+0x348>
   1fc7f:	cmp    rax,rdx
   1fc82:	jne    1fc70 <get_cpuid_domain_info+0x150>
   1fc84:	jmp    1fd6b <get_cpuid_domain_info+0x24b>
   1fc89:	mov    rsi,QWORD PTR [rsp+0x28]
   1fc8e:	mov    rdi,r13
   1fc91:	mov    DWORD PTR [rsp],eax
   1fc94:	test   rsi,rsi
   1fc97:	cmove  rsi,rbx
   1fc9b:	call   6210 <xc__hypercall_bounce_post@plt>
   1fca0:	mov    eax,DWORD PTR [rsp]
   1fca3:	test   eax,eax
   1fca5:	jne    1fe16 <get_cpuid_domain_info+0x2f6>
   1fcab:	test   BYTE PTR [rsp+0x58],0x40
   1fcb0:	mov    rax,QWORD PTR [rsp+0xd8]
   1fcb8:	mov    QWORD PTR [r12+0x8],rax
   1fcbd:	je     1fe90 <get_cpuid_domain_info+0x370>
   1fcc3:	mov    rcx,rbx
   1fcc6:	mov    edx,0x4
   1fccb:	mov    esi,r14d
   1fcce:	mov    rdi,r13
   1fcd1:	call   6550 <xc_hvm_param_get@plt>
   1fcd6:	test   eax,eax
   1fcd8:	jne    1fe30 <get_cpuid_domain_info+0x310>
   1fcde:	cmp    QWORD PTR [rsp+0x20],0x0
   1fce4:	mov    rcx,rbx
   1fce7:	mov    edx,0x18
   1fcec:	mov    esi,r14d
   1fcef:	mov    rdi,r13
   1fcf2:	setne  BYTE PTR [r12+0x1d]
   1fcf8:	call   6550 <xc_hvm_param_get@plt>
   1fcfd:	test   eax,eax
   1fcff:	jne    1fe30 <get_cpuid_domain_info+0x310>
   1fd05:	cmp    QWORD PTR [rsp+0x20],0x0
   1fd0b:	setne  BYTE PTR [r12+0x1e]
   1fd11:	nop    DWORD PTR [rax+0x0]
   1fd18:	mov    rsi,QWORD PTR [rsp+0x158]
   1fd20:	xor    rsi,QWORD PTR fs:0x28
   1fd29:	jne    1ff57 <get_cpuid_domain_info+0x437>
   1fd2f:	add    rsp,0x168
   1fd36:	pop    rbx
   1fd37:	pop    rbp
   1fd38:	pop    r12
   1fd3a:	pop    r13
   1fd3c:	pop    r14
   1fd3e:	pop    r15
   1fd40:	ret    
   1fd41:	nop    DWORD PTR [rax+0x0]
   1fd48:	xor    esi,esi
   1fd4a:	test   bl,bl
   1fd4c:	lea    rdx,[rsp+0x1c]
   1fd51:	setne  sil
   1fd55:	mov    rcx,rax
   1fd58:	mov    rdi,r13
   1fd5b:	add    esi,0x2
   1fd5e:	call   6530 <xc_get_cpu_featureset@plt>
   1fd63:	test   eax,eax
   1fd65:	jne    1fe30 <get_cpuid_domain_info+0x310>
   1fd6b:	mov    rax,QWORD PTR [rsp+0x8]
   1fd70:	lea    rbx,[rsp+0x20]
   1fd75:	mov    rdi,r13
   1fd78:	mov    WORD PTR [rsp+0xc8],r14w
   1fd81:	mov    QWORD PTR [rsp+0x20],0x0
   1fd8a:	mov    rsi,rbx
   1fd8d:	mov    QWORD PTR [rsp+0x28],0x0
   1fd96:	mov    DWORD PTR [rsp+0x30],0x3
   1fd9e:	mov    QWORD PTR [rsp+0x38],rax
   1fda3:	movabs rax,0x110000003f
   1fdad:	mov    QWORD PTR [rsp+0x40],0x90
   1fdb6:	mov    QWORD PTR [rsp+0xc0],rax
   1fdbe:	call   5a40 <xc__hypercall_bounce_pre@plt>
   1fdc3:	test   eax,eax
   1fdc5:	jne    1ff1f <get_cpuid_domain_info+0x3ff>
   1fdcb:	mov    rax,QWORD PTR [rsp+0x28]
   1fdd0:	mov    rdi,QWORD PTR [r13+0x440]
   1fdd7:	mov    esi,0x24
   1fddc:	test   rax,rax
   1fddf:	cmove  rax,rbx
   1fde3:	mov    rdx,QWORD PTR [rax]
   1fde6:	call   5e30 <xencall1@plt>
   1fdeb:	test   eax,eax
   1fded:	jns    1fc89 <get_cpuid_domain_info+0x169>
   1fdf3:	call   5940 <__errno_location@plt>
   1fdf8:	cmp    DWORD PTR [rax],0xd
   1fdfb:	mov    rbp,rax
   1fdfe:	je     1fec8 <get_cpuid_domain_info+0x3a8>
   1fe04:	mov    rsi,QWORD PTR [rsp+0x28]
   1fe09:	test   rsi,rsi
   1fe0c:	je     1fe78 <get_cpuid_domain_info+0x358>
   1fe0e:	mov    rdi,r13
   1fe11:	call   6210 <xc__hypercall_bounce_post@plt>
   1fe16:	call   5940 <__errno_location@plt>
   1fe1b:	mov    ebx,DWORD PTR [rax]
   1fe1d:	mov    eax,ebx
   1fe1f:	neg    eax
   1fe21:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1fe26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1fe30:	call   5940 <__errno_location@plt>
   1fe35:	mov    eax,DWORD PTR [rax]
   1fe37:	neg    eax
   1fe39:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1fe3e:	xchg   ax,ax
   1fe40:	cmp    edx,0x49656e69
   1fe46:	jne    1fba7 <get_cpuid_domain_info+0x87>
   1fe4c:	cmp    ecx,0x6c65746e
   1fe52:	jne    1fba7 <get_cpuid_domain_info+0x87>
   1fe58:	mov    DWORD PTR [r12],0x1
   1fe60:	jmp    1fbaf <get_cpuid_domain_info+0x8f>
   1fe65:	nop    DWORD PTR [rax]
   1fe68:	mov    eax,0xffffffa1
   1fe6d:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1fe72:	nop    WORD PTR [rax+rax*1+0x0]
   1fe78:	mov    rsi,rbx
   1fe7b:	mov    rdi,r13
   1fe7e:	call   6210 <xc__hypercall_bounce_post@plt>
   1fe83:	mov    ebx,DWORD PTR [rbp+0x0]
   1fe86:	mov    eax,ebx
   1fe88:	neg    eax
   1fe8a:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1fe8f:	nop
   1fe90:	mov    rdx,rbx
   1fe93:	mov    esi,r14d
   1fe96:	mov    rdi,r13
   1fe99:	call   6170 <xc_domain_get_guest_width@plt>
   1fe9e:	test   eax,eax
   1fea0:	jne    1fe30 <get_cpuid_domain_info+0x310>
   1fea2:	cmp    DWORD PTR [rsp+0x20],0x8
   1fea7:	sete   BYTE PTR [r12+0x1c]
   1fead:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1feb2:	nop    WORD PTR [rax+rax*1+0x0]
   1feb8:	mov    DWORD PTR [r12],0x2
   1fec0:	jmp    1fbaf <get_cpuid_domain_info+0x8f>
   1fec5:	nop    DWORD PTR [rax]
   1fec8:	mov    rsi,QWORD PTR [r13+0x8]
   1fecc:	lea    r8,[rip+0x1eed]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
   1fed3:	xor    ecx,ecx
   1fed5:	xor    eax,eax
   1fed7:	mov    edx,0x3
   1fedc:	mov    rdi,r13
   1fedf:	call   6540 <xc_report@plt>
   1fee4:	mov    rsi,QWORD PTR [rsp+0x28]
   1fee9:	mov    DWORD PTR [rbp+0x0],0xd
   1fef0:	test   rsi,rsi
   1fef3:	je     1ff05 <get_cpuid_domain_info+0x3e5>
   1fef5:	mov    rdi,r13
   1fef8:	call   6210 <xc__hypercall_bounce_post@plt>
   1fefd:	mov    ebx,DWORD PTR [rbp+0x0]
   1ff00:	jmp    1fe1d <get_cpuid_domain_info+0x2fd>
   1ff05:	mov    rsi,rbx
   1ff08:	mov    rdi,r13
   1ff0b:	call   6210 <xc__hypercall_bounce_post@plt>
   1ff10:	jmp    1fe16 <get_cpuid_domain_info+0x2f6>
   1ff15:	mov    eax,0xfffffff4
   1ff1a:	jmp    1fd18 <get_cpuid_domain_info+0x1f8>
   1ff1f:	call   5940 <__errno_location@plt>
   1ff24:	mov    ebx,DWORD PTR [rax]
   1ff26:	mov    rbp,rax
   1ff29:	mov    rdi,r13
   1ff2c:	mov    esi,ebx
   1ff2e:	call   6570 <xc_strerror@plt>
   1ff33:	mov    ecx,DWORD PTR [rbp+0x0]
   1ff36:	lea    rdx,[rip+0x1e4b]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
   1ff3d:	mov    r8,rax
   1ff40:	mov    esi,0x1
   1ff45:	mov    rdi,r13
   1ff48:	xor    eax,eax
   1ff4a:	call   5d50 <xc_report_error@plt>
   1ff4f:	mov    DWORD PTR [rbp+0x0],ebx
   1ff52:	jmp    1fe1d <get_cpuid_domain_info+0x2fd>
   1ff57:	call   5b80 <__stack_chk_fail@plt>
   1ff5c:	nop    DWORD PTR [rax+0x0]

000000000001ff60 <xc_get_static_cpu_featuremask>:
   1ff60:	cmp    edi,0x5
   1ff63:	ja     1ffe0 <xc_get_static_cpu_featuremask+0x80>
   1ff65:	lea    rdx,[rip+0x7b34]        # 27aa0 <__PRETTY_FUNCTION__.13026+0xb0>
   1ff6c:	mov    edi,edi
   1ff6e:	movsxd rax,DWORD PTR [rdx+rdi*4]
   1ff72:	add    rax,rdx
   1ff75:	jmp    rax
   1ff77:	nop    WORD PTR [rax+rax*1+0x0]
   1ff80:	lea    rax,[rip+0x7c79]        # 27c00 <known.12289>
   1ff87:	ret    
   1ff88:	nop    DWORD PTR [rax+rax*1+0x0]
   1ff90:	lea    rax,[rip+0x7c29]        # 27bc0 <special.12290>
   1ff97:	ret    
   1ff98:	nop    DWORD PTR [rax+rax*1+0x0]
   1ffa0:	lea    rax,[rip+0x7bd9]        # 27b80 <pv.12291>
   1ffa7:	ret    
   1ffa8:	nop    DWORD PTR [rax+rax*1+0x0]
   1ffb0:	lea    rax,[rip+0x7b89]        # 27b40 <hvm_shadow.12292>
   1ffb7:	ret    
   1ffb8:	nop    DWORD PTR [rax+rax*1+0x0]
   1ffc0:	lea    rax,[rip+0x7b39]        # 27b00 <hvm_hap.12293>
   1ffc7:	ret    
   1ffc8:	nop    DWORD PTR [rax+rax*1+0x0]
   1ffd0:	lea    rax,[rip+0x7ae9]        # 27ac0 <deep_features.12294>
   1ffd7:	ret    
   1ffd8:	nop    DWORD PTR [rax+rax*1+0x0]
   1ffe0:	xor    eax,eax
   1ffe2:	ret    
   1ffe3:	nop    DWORD PTR [rax]
   1ffe6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001fff0 <xc_get_cpu_policy_size>:
   1fff0:	push   r14
   1fff2:	push   r13
   1fff4:	mov    ecx,0x10
   1fff9:	push   r12
   1fffb:	push   rbp
   1fffc:	mov    r12,rsi
   1ffff:	push   rbx
   20000:	mov    rbx,rdi
   20003:	mov    rbp,rdx
   20006:	sub    rsp,0xc0
   2000d:	mov    rax,QWORD PTR fs:0x28
   20016:	mov    QWORD PTR [rsp+0xb8],rax
   2001e:	xor    eax,eax
   20020:	lea    rdi,[rsp+0x38]
   20025:	mov    r13,rsp
   20028:	mov    QWORD PTR [rsp],0x0
   20030:	mov    rsi,r13
   20033:	mov    QWORD PTR [rsp+0x8],0x0
   2003c:	mov    DWORD PTR [rsp+0x10],0x3
   20044:	rep stos QWORD PTR es:[rdi],rax
   20047:	lea    rax,[rsp+0x30]
   2004c:	mov    rdi,rbx
   2004f:	mov    QWORD PTR [rsp+0x20],0x88
   20058:	mov    QWORD PTR [rsp+0x18],rax
   2005d:	movabs rax,0x120000001d
   20067:	mov    QWORD PTR [rsp+0x30],rax
   2006c:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20071:	test   eax,eax
   20073:	jne    2015d <xc_get_cpu_policy_size+0x16d>
   20079:	mov    rax,QWORD PTR [rsp+0x8]
   2007e:	mov    rdi,QWORD PTR [rbx+0x440]
   20085:	mov    esi,0x23
   2008a:	test   rax,rax
   2008d:	cmove  rax,r13
   20091:	mov    rdx,QWORD PTR [rax]
   20094:	call   5e30 <xencall1@plt>
   20099:	test   eax,eax
   2009b:	mov    r14d,eax
   2009e:	js     200f8 <xc_get_cpu_policy_size+0x108>
   200a0:	mov    rsi,QWORD PTR [rsp+0x8]
   200a5:	mov    rdi,rbx
   200a8:	test   rsi,rsi
   200ab:	cmove  rsi,r13
   200af:	call   6210 <xc__hypercall_bounce_post@plt>
   200b4:	test   r14d,r14d
   200b7:	jne    200c8 <xc_get_cpu_policy_size+0xd8>
   200b9:	mov    eax,DWORD PTR [rsp+0x3c]
   200bd:	mov    DWORD PTR [r12],eax
   200c1:	mov    eax,DWORD PTR [rsp+0x40]
   200c5:	mov    DWORD PTR [rbp+0x0],eax
   200c8:	mov    rdx,QWORD PTR [rsp+0xb8]
   200d0:	xor    rdx,QWORD PTR fs:0x28
   200d9:	mov    eax,r14d
   200dc:	jne    2019e <xc_get_cpu_policy_size+0x1ae>
   200e2:	add    rsp,0xc0
   200e9:	pop    rbx
   200ea:	pop    rbp
   200eb:	pop    r12
   200ed:	pop    r13
   200ef:	pop    r14
   200f1:	ret    
   200f2:	nop    WORD PTR [rax+rax*1+0x0]
   200f8:	call   5940 <__errno_location@plt>
   200fd:	cmp    DWORD PTR [rax],0xd
   20100:	mov    rbp,rax
   20103:	je     20120 <xc_get_cpu_policy_size+0x130>
   20105:	mov    rsi,QWORD PTR [rsp+0x8]
   2010a:	test   rsi,rsi
   2010d:	je     2014d <xc_get_cpu_policy_size+0x15d>
   2010f:	mov    rdi,rbx
   20112:	call   6210 <xc__hypercall_bounce_post@plt>
   20117:	jmp    200c8 <xc_get_cpu_policy_size+0xd8>
   20119:	nop    DWORD PTR [rax+0x0]
   20120:	mov    rsi,QWORD PTR [rbx+0x8]
   20124:	lea    r8,[rip+0x7915]        # 27a40 <__PRETTY_FUNCTION__.13026+0x50>
   2012b:	xor    ecx,ecx
   2012d:	xor    eax,eax
   2012f:	mov    edx,0x3
   20134:	mov    rdi,rbx
   20137:	call   6540 <xc_report@plt>
   2013c:	mov    rsi,QWORD PTR [rsp+0x8]
   20141:	mov    DWORD PTR [rbp+0x0],0xd
   20148:	test   rsi,rsi
   2014b:	jne    2010f <xc_get_cpu_policy_size+0x11f>
   2014d:	mov    rsi,r13
   20150:	mov    rdi,rbx
   20153:	call   6210 <xc__hypercall_bounce_post@plt>
   20158:	jmp    200c8 <xc_get_cpu_policy_size+0xd8>
   2015d:	call   5940 <__errno_location@plt>
   20162:	mov    r12d,DWORD PTR [rax]
   20165:	mov    rbp,rax
   20168:	mov    rdi,rbx
   2016b:	mov    r14d,0xffffffff
   20171:	mov    esi,r12d
   20174:	call   6570 <xc_strerror@plt>
   20179:	mov    ecx,DWORD PTR [rbp+0x0]
   2017c:	lea    rdx,[rip+0x7885]        # 27a08 <__PRETTY_FUNCTION__.13026+0x18>
   20183:	mov    r8,rax
   20186:	mov    esi,0x1
   2018b:	mov    rdi,rbx
   2018e:	xor    eax,eax
   20190:	call   5d50 <xc_report_error@plt>
   20195:	mov    DWORD PTR [rbp+0x0],r12d
   20199:	jmp    200c8 <xc_get_cpu_policy_size+0xd8>
   2019e:	call   5b80 <__stack_chk_fail@plt>
   201a3:	nop    DWORD PTR [rax]
   201a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000201b0 <xc_get_system_cpu_policy>:
   201b0:	push   r15
   201b2:	push   r14
   201b4:	mov    r14,rdx
   201b7:	push   r13
   201b9:	push   r12
   201bb:	mov    rdx,rcx
   201be:	push   rbp
   201bf:	push   rbx
   201c0:	mov    ecx,0x11
   201c5:	mov    rbx,rdi
   201c8:	mov    r15d,esi
   201cb:	mov    r13,r8
   201ce:	sub    rsp,0x138
   201d5:	lea    rbp,[rsp+0xa0]
   201dd:	lea    r12,[rsp+0x10]
   201e2:	mov    QWORD PTR [rsp+0x10],0x0
   201eb:	mov    rax,QWORD PTR fs:0x28
   201f4:	mov    QWORD PTR [rsp+0x128],rax
   201fc:	xor    eax,eax
   201fe:	mov    rdi,rbp
   20201:	mov    rsi,r12
   20204:	mov    QWORD PTR [rsp+0x18],0x0
   2020d:	rep stos QWORD PTR es:[rdi],rax
   20210:	mov    eax,DWORD PTR [r14]
   20213:	mov    rdi,rbx
   20216:	mov    DWORD PTR [rsp+0x20],0x2
   2021e:	mov    QWORD PTR [rsp+0x28],rdx
   20223:	mov    QWORD PTR [rsp+0x40],0x0
   2022c:	mov    QWORD PTR [rsp+0x48],0x0
   20235:	mov    DWORD PTR [rsp+0x50],0x2
   2023d:	mov    QWORD PTR [rsp+0x58],r9
   20242:	lea    rax,[rax+rax*2]
   20246:	shl    rax,0x3
   2024a:	mov    QWORD PTR [rsp+0x30],rax
   2024f:	mov    eax,DWORD PTR [r8]
   20252:	shl    rax,0x4
   20256:	mov    QWORD PTR [rsp+0x60],rax
   2025b:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20260:	test   eax,eax
   20262:	jne    20430 <xc_get_system_cpu_policy+0x280>
   20268:	mov    rsi,QWORD PTR [rsp+0x48]
   2026d:	lea    rdx,[rsp+0x40]
   20272:	mov    rdi,rbx
   20275:	mov    QWORD PTR [rsp+0x8],rdx
   2027a:	test   rsi,rsi
   2027d:	cmove  rsi,rdx
   20281:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20286:	test   eax,eax
   20288:	jne    20430 <xc_get_system_cpu_policy+0x280>
   2028e:	mov    eax,DWORD PTR [r14]
   20291:	mov    DWORD PTR [rsp+0xa8],r15d
   20299:	lea    r15,[rsp+0x70]
   2029e:	mov    DWORD PTR [rsp+0xa0],0x1d
   202a9:	mov    rdx,QWORD PTR [rsp+0x8]
   202ae:	mov    rdi,rbx
   202b1:	mov    rsi,r15
   202b4:	mov    DWORD PTR [rsp+0xac],eax
   202bb:	mov    rax,QWORD PTR [rsp+0x18]
   202c0:	test   rax,rax
   202c3:	cmove  rax,r12
   202c7:	mov    rax,QWORD PTR [rax]
   202ca:	mov    QWORD PTR [rsp+0xb8],rax
   202d2:	mov    eax,DWORD PTR [r13+0x0]
   202d6:	mov    DWORD PTR [rsp+0xb0],eax
   202dd:	mov    rax,QWORD PTR [rsp+0x48]
   202e2:	test   rax,rax
   202e5:	cmove  rax,rdx
   202e9:	mov    rax,QWORD PTR [rax]
   202ec:	mov    QWORD PTR [rsp+0x70],0x0
   202f5:	mov    QWORD PTR [rsp+0x78],0x0
   202fe:	mov    DWORD PTR [rsp+0x80],0x3
   20309:	mov    QWORD PTR [rsp+0x88],rbp
   20311:	mov    QWORD PTR [rsp+0x90],0x88
   2031d:	mov    QWORD PTR [rsp+0xc0],rax
   20325:	mov    DWORD PTR [rsp+0xa4],0x12
   20330:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20335:	test   eax,eax
   20337:	jne    20437 <xc_get_system_cpu_policy+0x287>
   2033d:	mov    rax,QWORD PTR [rsp+0x78]
   20342:	mov    rdi,QWORD PTR [rbx+0x440]
   20349:	mov    esi,0x23
   2034e:	test   rax,rax
   20351:	cmove  rax,r15
   20355:	mov    rdx,QWORD PTR [rax]
   20358:	call   5e30 <xencall1@plt>
   2035d:	test   eax,eax
   2035f:	mov    ebp,eax
   20361:	js     203f0 <xc_get_system_cpu_policy+0x240>
   20367:	mov    rsi,QWORD PTR [rsp+0x78]
   2036c:	mov    rdi,rbx
   2036f:	test   rsi,rsi
   20372:	cmove  rsi,r15
   20376:	call   6210 <xc__hypercall_bounce_post@plt>
   2037b:	mov    rsi,QWORD PTR [rsp+0x18]
   20380:	mov    rdi,rbx
   20383:	test   rsi,rsi
   20386:	cmove  rsi,r12
   2038a:	call   6210 <xc__hypercall_bounce_post@plt>
   2038f:	mov    rsi,QWORD PTR [rsp+0x48]
   20394:	lea    rax,[rsp+0x40]
   20399:	mov    rdi,rbx
   2039c:	test   rsi,rsi
   2039f:	cmove  rsi,rax
   203a3:	call   6210 <xc__hypercall_bounce_post@plt>
   203a8:	test   ebp,ebp
   203aa:	jne    203c1 <xc_get_system_cpu_policy+0x211>
   203ac:	mov    eax,DWORD PTR [rsp+0xac]
   203b3:	mov    DWORD PTR [r14],eax
   203b6:	mov    eax,DWORD PTR [rsp+0xb0]
   203bd:	mov    DWORD PTR [r13+0x0],eax
   203c1:	mov    rcx,QWORD PTR [rsp+0x128]
   203c9:	xor    rcx,QWORD PTR fs:0x28
   203d2:	mov    eax,ebp
   203d4:	jne    20477 <xc_get_system_cpu_policy+0x2c7>
   203da:	add    rsp,0x138
   203e1:	pop    rbx
   203e2:	pop    rbp
   203e3:	pop    r12
   203e5:	pop    r13
   203e7:	pop    r14
   203e9:	pop    r15
   203eb:	ret    
   203ec:	nop    DWORD PTR [rax+0x0]
   203f0:	call   5940 <__errno_location@plt>
   203f5:	cmp    DWORD PTR [rax],0xd
   203f8:	jne    20367 <xc_get_system_cpu_policy+0x1b7>
   203fe:	mov    rsi,QWORD PTR [rbx+0x8]
   20402:	lea    r8,[rip+0x7637]        # 27a40 <__PRETTY_FUNCTION__.13026+0x50>
   20409:	mov    QWORD PTR [rsp+0x8],rax
   2040e:	xor    ecx,ecx
   20410:	mov    edx,0x3
   20415:	mov    rdi,rbx
   20418:	xor    eax,eax
   2041a:	call   6540 <xc_report@plt>
   2041f:	mov    r9,QWORD PTR [rsp+0x8]
   20424:	mov    DWORD PTR [r9],0xd
   2042b:	jmp    20367 <xc_get_system_cpu_policy+0x1b7>
   20430:	mov    ebp,0xffffffff
   20435:	jmp    203c1 <xc_get_system_cpu_policy+0x211>
   20437:	call   5940 <__errno_location@plt>
   2043c:	mov    r15d,DWORD PTR [rax]
   2043f:	mov    rbp,rax
   20442:	mov    rdi,rbx
   20445:	mov    esi,r15d
   20448:	call   6570 <xc_strerror@plt>
   2044d:	mov    ecx,DWORD PTR [rbp+0x0]
   20450:	lea    rdx,[rip+0x75b1]        # 27a08 <__PRETTY_FUNCTION__.13026+0x18>
   20457:	mov    r8,rax
   2045a:	mov    esi,0x1
   2045f:	mov    rdi,rbx
   20462:	xor    eax,eax
   20464:	call   5d50 <xc_report_error@plt>
   20469:	mov    DWORD PTR [rbp+0x0],r15d
   2046d:	mov    ebp,0xffffffff
   20472:	jmp    2037b <xc_get_system_cpu_policy+0x1cb>
   20477:	call   5b80 <__stack_chk_fail@plt>
   2047c:	nop    DWORD PTR [rax+0x0]

0000000000020480 <xc_get_domain_cpu_policy>:
   20480:	push   r15
   20482:	push   r14
   20484:	mov    r14d,esi
   20487:	push   r13
   20489:	push   r12
   2048b:	mov    r13,rdx
   2048e:	push   rbp
   2048f:	push   rbx
   20490:	mov    r12,r8
   20493:	mov    rbx,rdi
   20496:	sub    rsp,0x148
   2049d:	mov    rax,QWORD PTR fs:0x28
   204a6:	mov    QWORD PTR [rsp+0x138],rax
   204ae:	xor    eax,eax
   204b0:	mov    eax,DWORD PTR [rdx]
   204b2:	lea    rbp,[rsp+0x10]
   204b7:	mov    QWORD PTR [rsp+0x10],0x0
   204c0:	mov    QWORD PTR [rsp+0x18],0x0
   204c9:	mov    DWORD PTR [rsp+0x20],0x2
   204d1:	mov    rsi,rbp
   204d4:	mov    QWORD PTR [rsp+0x28],rcx
   204d9:	mov    QWORD PTR [rsp+0x40],0x0
   204e2:	mov    QWORD PTR [rsp+0x48],0x0
   204eb:	mov    DWORD PTR [rsp+0x50],0x2
   204f3:	lea    rax,[rax+rax*2]
   204f7:	mov    QWORD PTR [rsp+0x58],r9
   204fc:	shl    rax,0x3
   20500:	mov    QWORD PTR [rsp+0x30],rax
   20505:	mov    eax,DWORD PTR [r8]
   20508:	shl    rax,0x4
   2050c:	mov    QWORD PTR [rsp+0x60],rax
   20511:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20516:	test   eax,eax
   20518:	jne    206e8 <xc_get_domain_cpu_policy+0x268>
   2051e:	mov    rsi,QWORD PTR [rsp+0x48]
   20523:	lea    r15,[rsp+0x40]
   20528:	mov    rdi,rbx
   2052b:	test   rsi,rsi
   2052e:	cmove  rsi,r15
   20532:	call   5a40 <xc__hypercall_bounce_pre@plt>
   20537:	test   eax,eax
   20539:	jne    206e8 <xc_get_domain_cpu_policy+0x268>
   2053f:	mov    eax,DWORD PTR [r13+0x0]
   20543:	mov    DWORD PTR [rsp+0xa0],0x52
   2054e:	mov    rdi,rbx
   20551:	mov    WORD PTR [rsp+0xa8],r14w
   2055a:	mov    DWORD PTR [rsp+0xb0],eax
   20561:	mov    rax,QWORD PTR [rsp+0x18]
   20566:	test   rax,rax
   20569:	cmove  rax,rbp
   2056d:	mov    rax,QWORD PTR [rax]
   20570:	mov    QWORD PTR [rsp+0xb8],rax
   20578:	mov    eax,DWORD PTR [r12]
   2057c:	mov    DWORD PTR [rsp+0xb4],eax
   20583:	mov    rax,QWORD PTR [rsp+0x48]
   20588:	test   rax,rax
   2058b:	cmove  rax,r15
   2058f:	lea    r15,[rsp+0x70]
   20594:	mov    rax,QWORD PTR [rax]
   20597:	mov    QWORD PTR [rsp+0x70],0x0
   205a0:	mov    rsi,r15
   205a3:	mov    QWORD PTR [rsp+0x78],0x0
   205ac:	mov    DWORD PTR [rsp+0x80],0x3
   205b7:	mov    QWORD PTR [rsp+0x90],0x90
   205c3:	mov    DWORD PTR [rsp+0xa4],0x11
   205ce:	mov    QWORD PTR [rsp+0xc0],rax
   205d6:	lea    rax,[rsp+0xa0]
   205de:	mov    QWORD PTR [rsp+0x88],rax
   205e6:	call   5a40 <xc__hypercall_bounce_pre@plt>
   205eb:	test   eax,eax
   205ed:	jne    206f0 <xc_get_domain_cpu_policy+0x270>
   205f3:	mov    rax,QWORD PTR [rsp+0x78]
   205f8:	mov    rdi,QWORD PTR [rbx+0x440]
   205ff:	mov    esi,0x24
   20604:	test   rax,rax
   20607:	cmove  rax,r15
   2060b:	mov    rdx,QWORD PTR [rax]
   2060e:	call   5e30 <xencall1@plt>
   20613:	test   eax,eax
   20615:	mov    r14d,eax
   20618:	jns    20628 <xc_get_domain_cpu_policy+0x1a8>
   2061a:	call   5940 <__errno_location@plt>
   2061f:	cmp    DWORD PTR [rax],0xd
   20622:	je     206b0 <xc_get_domain_cpu_policy+0x230>
   20628:	mov    rsi,QWORD PTR [rsp+0x78]
   2062d:	mov    rdi,rbx
   20630:	test   rsi,rsi
   20633:	cmove  rsi,r15
   20637:	call   6210 <xc__hypercall_bounce_post@plt>
   2063c:	mov    rsi,QWORD PTR [rsp+0x18]
   20641:	mov    rdi,rbx
   20644:	test   rsi,rsi
   20647:	cmove  rsi,rbp
   2064b:	call   6210 <xc__hypercall_bounce_post@plt>
   20650:	mov    rsi,QWORD PTR [rsp+0x48]
   20655:	lea    rax,[rsp+0x40]
   2065a:	mov    rdi,rbx
   2065d:	test   rsi,rsi
   20660:	cmove  rsi,rax
   20664:	call   6210 <xc__hypercall_bounce_post@plt>
   20669:	test   r14d,r14d
   2066c:	jne    20684 <xc_get_domain_cpu_policy+0x204>
   2066e:	mov    eax,DWORD PTR [rsp+0xb0]
   20675:	mov    DWORD PTR [r13+0x0],eax
   20679:	mov    eax,DWORD PTR [rsp+0xb4]
   20680:	mov    DWORD PTR [r12],eax
   20684:	mov    rdx,QWORD PTR [rsp+0x138]
   2068c:	xor    rdx,QWORD PTR fs:0x28
   20695:	mov    eax,r14d
   20698:	jne    20730 <xc_get_domain_cpu_policy+0x2b0>
   2069e:	add    rsp,0x148
   206a5:	pop    rbx
   206a6:	pop    rbp
   206a7:	pop    r12
   206a9:	pop    r13
   206ab:	pop    r14
   206ad:	pop    r15
   206af:	ret    
   206b0:	mov    rsi,QWORD PTR [rbx+0x8]
   206b4:	lea    r8,[rip+0x1705]        # 21dc0 <__PRETTY_FUNCTION__.12816+0x680>
   206bb:	mov    QWORD PTR [rsp+0x8],rax
   206c0:	xor    ecx,ecx
   206c2:	mov    edx,0x3
   206c7:	mov    rdi,rbx
   206ca:	xor    eax,eax
   206cc:	call   6540 <xc_report@plt>
   206d1:	mov    r9,QWORD PTR [rsp+0x8]
   206d6:	mov    DWORD PTR [r9],0xd
   206dd:	jmp    20628 <xc_get_domain_cpu_policy+0x1a8>
   206e2:	nop    WORD PTR [rax+rax*1+0x0]
   206e8:	mov    r14d,0xffffffff
   206ee:	jmp    20684 <xc_get_domain_cpu_policy+0x204>
   206f0:	call   5940 <__errno_location@plt>
   206f5:	mov    r15d,DWORD PTR [rax]
   206f8:	mov    r14,rax
   206fb:	mov    rdi,rbx
   206fe:	mov    esi,r15d
   20701:	call   6570 <xc_strerror@plt>
   20706:	mov    ecx,DWORD PTR [r14]
   20709:	lea    rdx,[rip+0x1678]        # 21d88 <__PRETTY_FUNCTION__.12816+0x648>
   20710:	mov    r8,rax
   20713:	mov    esi,0x1
   20718:	mov    rdi,rbx
   2071b:	xor    eax,eax
   2071d:	call   5d50 <xc_report_error@plt>
   20722:	mov    DWORD PTR [r14],r15d
   20725:	mov    r14d,0xffffffff
   2072b:	jmp    2063c <xc_get_domain_cpu_policy+0x1bc>
   20730:	call   5b80 <__stack_chk_fail@plt>
   20735:	nop
   20736:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000020740 <xc_cpuid_apply_policy>:
   20740:	push   rbp
   20741:	pxor   xmm0,xmm0
   20745:	mov    r8d,ecx
   20748:	mov    rcx,rdx
   2074b:	mov    rbp,rsp
   2074e:	push   r15
   20750:	push   r14
   20752:	lea    r15,[rbp-0x80]
   20756:	push   r13
   20758:	push   r12
   2075a:	push   rbx
   2075b:	mov    rdx,r15
   2075e:	sub    rsp,0x78
   20762:	mov    QWORD PTR [rbp-0x88],rdi
   20769:	mov    DWORD PTR [rbp-0x8c],esi
   2076f:	mov    rax,QWORD PTR fs:0x28
   20778:	mov    QWORD PTR [rbp-0x38],rax
   2077c:	xor    eax,eax
   2077e:	movaps XMMWORD PTR [rbp-0x80],xmm0
   20782:	mov    QWORD PTR [rbp-0x58],0x0
   2078a:	movaps XMMWORD PTR [rbp-0x70],xmm0
   2078e:	call   1fb20 <get_cpuid_domain_info>
   20793:	test   eax,eax
   20795:	mov    DWORD PTR [rbp-0x98],eax
   2079b:	jne    209fa <xc_cpuid_apply_policy+0x2ba>
   207a1:	mov    ecx,DWORD PTR [rbp-0x54]
   207a4:	cmp    ecx,0xffffffff
   207a7:	mov    esi,ecx
   207a9:	cmove  esi,eax
   207ac:	mov    eax,DWORD PTR [rbp-0x58]
   207af:	mov    DWORD PTR [rbp-0x58],0x80000000
   207b6:	mov    ecx,esi
   207b8:	cpuid  
   207ba:	mov    edx,0xd
   207bf:	cmp    eax,0xd
   207c2:	mov    ecx,esi
   207c4:	cmovbe edx,eax
   207c7:	mov    eax,0x80000000
   207cc:	mov    DWORD PTR [rbp-0x90],edx
   207d2:	cpuid  
   207d4:	cmp    DWORD PTR [rbp-0x80],0x2
   207d8:	mov    DWORD PTR [rbp-0x50],eax
   207db:	mov    DWORD PTR [rbp-0x4c],ebx
   207de:	mov    DWORD PTR [rbp-0x48],ecx
   207e1:	mov    DWORD PTR [rbp-0x44],edx
   207e4:	je     20b00 <xc_cpuid_apply_policy+0x3c0>
   207ea:	cmp    DWORD PTR [rbp-0x50],0x80000008
   207f1:	mov    eax,0x80000008
   207f6:	cmovbe eax,DWORD PTR [rbp-0x50]
   207fa:	mov    DWORD PTR [rbp-0x94],eax
   20800:	mov    QWORD PTR [rbp-0xa0],rsp
   20807:	call   5a30 <xc_get_cpu_featureset_size@plt>
   2080c:	mov    r12d,eax
   2080f:	lea    rdx,[r12*4+0x12]
   20817:	shr    rdx,0x4
   2081b:	shl    rdx,0x4
   2081f:	sub    rsp,rdx
   20822:	cmp    BYTE PTR [rbp-0x7c],0x0
   20826:	mov    r13,rsp
   20829:	je     20ab8 <xc_cpuid_apply_policy+0x378>
   2082f:	cmp    BYTE PTR [rbp-0x63],0x0
   20833:	jne    2083c <xc_cpuid_apply_policy+0xfc>
   20835:	mov    rdx,QWORD PTR [rbp-0x70]
   20839:	and    BYTE PTR [rdx],0xbf
   2083c:	cmp    BYTE PTR [rbp-0x62],0x0
   20840:	je     20b20 <xc_cpuid_apply_policy+0x3e0>
   20846:	cmp    QWORD PTR [rbp-0x78],0x0
   2084b:	jne    20855 <xc_cpuid_apply_policy+0x115>
   2084d:	mov    rdx,QWORD PTR [rbp-0x70]
   20851:	and    BYTE PTR [rdx+0x7],0xfb
   20855:	test   eax,eax
   20857:	je     2090d <xc_cpuid_apply_policy+0x1cd>
   2085d:	sub    eax,0x1
   20860:	mov    r8,QWORD PTR [rbp-0x70]
   20864:	xor    ebx,ebx
   20866:	lea    rcx,[rax*4+0x4]
   2086e:	mov    edx,0x7800259
   20873:	lea    rdi,[rip+0x7246]        # 27ac0 <deep_features.12294>
   2087a:	jmp    20883 <xc_cpuid_apply_policy+0x143>
   2087c:	nop    DWORD PTR [rax+0x0]
   20880:	mov    edx,DWORD PTR [rdi+rbx*1]
   20883:	mov    eax,DWORD PTR [r8+rbx*1]
   20887:	not    eax
   20889:	and    eax,edx
   2088b:	mov    DWORD PTR [r13+rbx*1+0x0],eax
   20890:	add    rbx,0x4
   20894:	cmp    rcx,rbx
   20897:	jne    20880 <xc_cpuid_apply_policy+0x140>
   20899:	shl    r12,0x5
   2089d:	xor    r14d,r14d
   208a0:	lea    eax,[r14+0x7]
   208a4:	test   r14d,r14d
   208a7:	mov    edx,r14d
   208aa:	cmovns eax,r14d
   208ae:	sar    edx,0x1f
   208b1:	sar    eax,0x3
   208b4:	shr    edx,0x1d
   208b7:	cdqe   
   208b9:	movsx  ecx,BYTE PTR [r13+rax*1+0x0]
   208bf:	lea    eax,[r14+rdx*1]
   208c3:	and    eax,0x7
   208c6:	sub    eax,edx
   208c8:	bt     ecx,eax
   208cb:	jae    20901 <xc_cpuid_apply_policy+0x1c1>
   208cd:	mov    edi,r14d
   208d0:	call   5a80 <x86_cpuid_lookup_deep_deps@plt>
   208d5:	test   rax,rax
   208d8:	je     20901 <xc_cpuid_apply_policy+0x1c1>
   208da:	xor    edx,edx
   208dc:	nop    DWORD PTR [rax+0x0]
   208e0:	mov    rdi,QWORD PTR [rbp-0x70]
   208e4:	mov    ecx,DWORD PTR [rax+rdx*1]
   208e7:	add    rdi,rdx
   208ea:	not    ecx
   208ec:	and    DWORD PTR [rdi],ecx
   208ee:	mov    ecx,DWORD PTR [rax+rdx*1]
   208f1:	not    ecx
   208f3:	and    DWORD PTR [r13+rdx*1+0x0],ecx
   208f8:	add    rdx,0x4
   208fc:	cmp    rdx,rbx
   208ff:	jne    208e0 <xc_cpuid_apply_policy+0x1a0>
   20901:	lea    eax,[r14+0x1]
   20905:	cmp    rax,r12
   20908:	mov    r14,rax
   2090b:	jb     208a0 <xc_cpuid_apply_policy+0x160>
   2090d:	mov    rsp,QWORD PTR [rbp-0xa0]
   20914:	movabs rax,0xffffffff00000000
   2091e:	lea    r13,[rbp-0x50]
   20922:	lea    r12,[rbp-0x58]
   20926:	mov    QWORD PTR [rbp-0x58],rax
   2092a:	mov    ecx,0xffffffff
   2092f:	xor    eax,eax
   20931:	xor    r14d,r14d
   20934:	cmp    ecx,0xffffffff
   20937:	cmove  ecx,r14d
   2093b:	cpuid  
   2093d:	mov    rsi,r12
   20940:	mov    DWORD PTR [rbp-0x44],edx
   20943:	mov    rdi,r15
   20946:	mov    rdx,r13
   20949:	mov    DWORD PTR [rbp-0x50],eax
   2094c:	mov    DWORD PTR [rbp-0x4c],ebx
   2094f:	mov    DWORD PTR [rbp-0x48],ecx
   20952:	call   1f050 <xc_cpuid_policy>
   20957:	mov    esi,DWORD PTR [rbp-0x50]
   2095a:	test   esi,esi
   2095c:	jne    209d8 <xc_cpuid_apply_policy+0x298>
   2095e:	mov    ecx,DWORD PTR [rbp-0x4c]
   20961:	test   ecx,ecx
   20963:	jne    209d8 <xc_cpuid_apply_policy+0x298>
   20965:	mov    edx,DWORD PTR [rbp-0x48]
   20968:	test   edx,edx
   2096a:	jne    209d8 <xc_cpuid_apply_policy+0x298>
   2096c:	mov    eax,DWORD PTR [rbp-0x44]
   2096f:	test   eax,eax
   20971:	jne    209d8 <xc_cpuid_apply_policy+0x298>
   20973:	nop    DWORD PTR [rax+rax*1+0x0]
   20978:	mov    edx,DWORD PTR [rbp-0x58]
   2097b:	cmp    edx,0x4
   2097e:	je     20a70 <xc_cpuid_apply_policy+0x330>
   20984:	cmp    edx,0xb
   20987:	je     20a90 <xc_cpuid_apply_policy+0x350>
   2098d:	mov    eax,edx
   2098f:	add    eax,0x1
   20992:	js     20a30 <xc_cpuid_apply_policy+0x2f0>
   20998:	cmp    eax,DWORD PTR [rbp-0x90]
   2099e:	jbe    20a30 <xc_cpuid_apply_policy+0x2f0>
   209a4:	mov    DWORD PTR [rbp-0x58],0x80000000
   209ab:	mov    eax,0x80000000
   209b0:	mov    DWORD PTR [rbp-0x54],0xffffffff
   209b7:	test   eax,eax
   209b9:	jns    209c3 <xc_cpuid_apply_policy+0x283>
   209bb:	cmp    DWORD PTR [rbp-0x94],eax
   209c1:	jb     209fa <xc_cpuid_apply_policy+0x2ba>
   209c3:	mov    ecx,DWORD PTR [rbp-0x54]
   209c6:	cmp    ecx,0xffffffff
   209c9:	cmove  ecx,r14d
   209cd:	jmp    2093b <xc_cpuid_apply_policy+0x1fb>
   209d2:	nop    WORD PTR [rax+rax*1+0x0]
   209d8:	mov    esi,DWORD PTR [rbp-0x8c]
   209de:	mov    rdi,QWORD PTR [rbp-0x88]
   209e5:	mov    rcx,r13
   209e8:	mov    rdx,r12
   209eb:	call   1f5a0 <xc_cpuid_do_domctl>
   209f0:	test   eax,eax
   209f2:	je     20978 <xc_cpuid_apply_policy+0x238>
   209f4:	mov    DWORD PTR [rbp-0x98],eax
   209fa:	mov    rdi,QWORD PTR [rbp-0x70]
   209fe:	call   5900 <free@plt>
   20a03:	mov    rsi,QWORD PTR [rbp-0x38]
   20a07:	xor    rsi,QWORD PTR fs:0x28
   20a10:	mov    eax,DWORD PTR [rbp-0x98]
   20a16:	jne    20b35 <xc_cpuid_apply_policy+0x3f5>
   20a1c:	lea    rsp,[rbp-0x28]
   20a20:	pop    rbx
   20a21:	pop    r12
   20a23:	pop    r13
   20a25:	pop    r14
   20a27:	pop    r15
   20a29:	pop    rbp
   20a2a:	ret    
   20a2b:	nop    DWORD PTR [rax+rax*1+0x0]
   20a30:	sub    edx,0x6
   20a33:	mov    DWORD PTR [rbp-0x58],eax
   20a36:	and    edx,0xfffffffb
   20a39:	je     20a60 <xc_cpuid_apply_policy+0x320>
   20a3b:	cmp    eax,0x4
   20a3e:	je     20a60 <xc_cpuid_apply_policy+0x320>
   20a40:	cmp    eax,0xd
   20a43:	jne    209b0 <xc_cpuid_apply_policy+0x270>
   20a49:	mov    DWORD PTR [rbp-0x54],0x1
   20a50:	mov    ecx,0x1
   20a55:	jmp    2093b <xc_cpuid_apply_policy+0x1fb>
   20a5a:	nop    WORD PTR [rax+rax*1+0x0]
   20a60:	mov    DWORD PTR [rbp-0x54],r14d
   20a64:	jmp    209b7 <xc_cpuid_apply_policy+0x277>
   20a69:	nop    DWORD PTR [rax+0x0]
   20a70:	mov    eax,DWORD PTR [rbp-0x54]
   20a73:	test   BYTE PTR [rbp-0x50],0x1f
   20a77:	lea    ecx,[rax+0x1]
   20a7a:	mov    DWORD PTR [rbp-0x54],ecx
   20a7d:	je     2098d <xc_cpuid_apply_policy+0x24d>
   20a83:	mov    eax,0x4
   20a88:	jmp    20934 <xc_cpuid_apply_policy+0x1f4>
   20a8d:	nop    DWORD PTR [rax]
   20a90:	mov    eax,DWORD PTR [rbp-0x48]
   20a93:	mov    esi,DWORD PTR [rbp-0x54]
   20a96:	shr    eax,0x8
   20a99:	lea    ecx,[rsi+0x1]
   20a9c:	sub    eax,0x1
   20a9f:	cmp    al,0x1
   20aa1:	mov    DWORD PTR [rbp-0x54],ecx
   20aa4:	ja     2098d <xc_cpuid_apply_policy+0x24d>
   20aaa:	mov    eax,0xb
   20aaf:	jmp    20934 <xc_cpuid_apply_policy+0x1f4>
   20ab4:	nop    DWORD PTR [rax+0x0]
   20ab8:	cmp    BYTE PTR [rbp-0x64],0x0
   20abc:	mov    rdx,QWORD PTR [rbp-0x70]
   20ac0:	jne    20ad8 <xc_cpuid_apply_policy+0x398>
   20ac2:	and    BYTE PTR [rdx+0xb],0xdf
   20ac6:	cmp    DWORD PTR [rbp-0x80],0x2
   20aca:	mov    rdx,QWORD PTR [rbp-0x70]
   20ace:	je     20ad8 <xc_cpuid_apply_policy+0x398>
   20ad0:	and    BYTE PTR [rdx+0x9],0xf7
   20ad4:	mov    rdx,QWORD PTR [rbp-0x70]
   20ad8:	and    BYTE PTR [rdx],0xf7
   20adb:	mov    rdx,QWORD PTR [rbp-0x70]
   20adf:	and    BYTE PTR [rdx+0x2],0xfd
   20ae3:	mov    rdx,QWORD PTR [rbp-0x70]
   20ae7:	and    BYTE PTR [rdx+0x1],0xdf
   20aeb:	mov    rdx,QWORD PTR [rbp-0x70]
   20aef:	and    BYTE PTR [rdx+0xb],0xfb
   20af3:	jmp    20846 <xc_cpuid_apply_policy+0x106>
   20af8:	nop    DWORD PTR [rax+rax*1+0x0]
   20b00:	cmp    eax,0x8000001c
   20b05:	mov    eax,0x8000001c
   20b0a:	cmovbe eax,DWORD PTR [rbp-0x50]
   20b0e:	mov    DWORD PTR [rbp-0x94],eax
   20b14:	jmp    20800 <xc_cpuid_apply_policy+0xc0>
   20b19:	nop    DWORD PTR [rax+0x0]
   20b20:	mov    rdx,QWORD PTR [rbp-0x70]
   20b24:	and    BYTE PTR [rdx+0xc],0xfb
   20b28:	mov    rdx,QWORD PTR [rbp-0x70]
   20b2c:	and    BYTE PTR [rdx+0x4],0xdf
   20b30:	jmp    20846 <xc_cpuid_apply_policy+0x106>
   20b35:	call   5b80 <__stack_chk_fail@plt>
   20b3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000020b40 <xc_cpuid_set>:
   20b40:	push   r15
   20b42:	pxor   xmm0,xmm0
   20b46:	push   r14
   20b48:	push   r13
   20b4a:	mov    r15,rcx
   20b4d:	push   r12
   20b4f:	push   rbp
   20b50:	xor    ecx,ecx
   20b52:	push   rbx
   20b53:	mov    r14,r8
   20b56:	mov    rbx,rdx
   20b59:	sub    rsp,0x88
   20b60:	lea    r13,[rsp+0x30]
   20b65:	mov    QWORD PTR [rsp+0x28],rdx
   20b6a:	mov    QWORD PTR [rsp+0x18],rdi
   20b6f:	movups XMMWORD PTR [r8],xmm0
   20b73:	mov    rdx,r13
   20b76:	mov    DWORD PTR [rsp+0x24],esi
   20b7a:	movups XMMWORD PTR [r8+0x10],xmm0
   20b7f:	xor    r8d,r8d
   20b82:	mov    rax,QWORD PTR fs:0x28
   20b8b:	mov    QWORD PTR [rsp+0x78],rax
   20b90:	xor    eax,eax
   20b92:	movaps XMMWORD PTR [rsp+0x30],xmm0
   20b97:	movaps XMMWORD PTR [rsp+0x40],xmm0
   20b9c:	call   1fb20 <get_cpuid_domain_info>
   20ba1:	test   eax,eax
   20ba3:	mov    r12d,eax
   20ba6:	jne    20d48 <xc_cpuid_set+0x208>
   20bac:	mov    ecx,DWORD PTR [rbx+0x4]
   20baf:	mov    rsi,rbx
   20bb2:	mov    rdi,r13
   20bb5:	mov    r13,r14
   20bb8:	mov    r14,r15
   20bbb:	cmp    ecx,0xffffffff
   20bbe:	cmove  ecx,eax
   20bc1:	mov    eax,DWORD PTR [rbx]
   20bc3:	xor    r12d,r12d
   20bc6:	mov    DWORD PTR [rsp],eax
   20bc9:	cpuid  
   20bcb:	mov    DWORD PTR [rsp+0x50],eax
   20bcf:	mov    DWORD PTR [rsp+0x5c],edx
   20bd3:	lea    rax,[rsp+0x60]
   20bd8:	mov    DWORD PTR [rsp+0x54],ebx
   20bdc:	mov    DWORD PTR [rsp+0x58],ecx
   20be0:	movdqa xmm0,XMMWORD PTR [rsp+0x50]
   20be6:	mov    rdx,rax
   20be9:	mov    QWORD PTR [rsp+0x10],rax
   20bee:	movaps XMMWORD PTR [rsp+0x60],xmm0
   20bf3:	call   1f050 <xc_cpuid_policy>
   20bf8:	cmp    QWORD PTR [r14],0x0
   20bfc:	je     20d00 <xc_cpuid_set+0x1c0>
   20c02:	mov    esi,0x1
   20c07:	mov    edi,0x21
   20c0c:	call   5de0 <calloc@plt>
   20c11:	test   rax,rax
   20c14:	mov    QWORD PTR [r13+r12*2+0x0],rax
   20c19:	je     20dbb <xc_cpuid_set+0x27b>
   20c1f:	mov    r9,r13
   20c22:	xor    ebx,ebx
   20c24:	lea    rdx,[rsp+0x50]
   20c29:	mov    r13,r14
   20c2c:	jmp    20c95 <xc_cpuid_set+0x155>
   20c2e:	xchg   ax,ax
   20c30:	mov    rax,QWORD PTR [rsp+0x10]
   20c35:	cmp    bpl,0x30
   20c39:	mov    eax,DWORD PTR [rax+r12*1]
   20c3d:	je     20c55 <xc_cpuid_set+0x115>
   20c3f:	mov    esi,r14d
   20c42:	shr    eax,cl
   20c44:	shr    esi,cl
   20c46:	cmp    bpl,0x78
   20c4a:	cmovne eax,esi
   20c4d:	test   al,0x1
   20c4f:	jne    20ce6 <xc_cpuid_set+0x1a6>
   20c55:	mov    eax,0x1
   20c5a:	shl    eax,cl
   20c5c:	not    eax
   20c5e:	and    r14d,eax
   20c61:	xor    eax,eax
   20c63:	mov    DWORD PTR [rdx+r12*1],r14d
   20c67:	movzx  esi,BYTE PTR [r15]
   20c6b:	mov    rcx,QWORD PTR [r9+r12*2]
   20c6f:	mov    BYTE PTR [rcx+rbx*1],sil
   20c73:	mov    rcx,QWORD PTR [r13+0x0]
   20c77:	cmp    BYTE PTR [rcx+rbx*1],0x73
   20c7b:	jne    20c87 <xc_cpuid_set+0x147>
   20c7d:	mov    rcx,QWORD PTR [r9+r12*2]
   20c81:	add    eax,0x30
   20c84:	mov    BYTE PTR [rcx+rbx*1],al
   20c87:	add    rbx,0x1
   20c8b:	cmp    rbx,0x20
   20c8f:	je     20db0 <xc_cpuid_set+0x270>
   20c95:	mov    r15,QWORD PTR [r13+0x0]
   20c99:	mov    ecx,0x1f
   20c9e:	lea    rdi,[rip+0x6f83]        # 27c28 <known.12289+0x28>
   20ca5:	sub    ecx,ebx
   20ca7:	mov    QWORD PTR [rsp],r9
   20cab:	mov    r14d,DWORD PTR [rdx+r12*1]
   20caf:	mov    QWORD PTR [rsp+0x8],rdx
   20cb4:	mov    DWORD PTR [rsp+0x20],ecx
   20cb8:	add    r15,rbx
   20cbb:	movsx  esi,BYTE PTR [r15]
   20cbf:	mov    ebp,esi
   20cc1:	call   5bf0 <strchr@plt>
   20cc6:	test   rax,rax
   20cc9:	mov    r9,QWORD PTR [rsp]
   20ccd:	je     20d80 <xc_cpuid_set+0x240>
   20cd3:	cmp    bpl,0x31
   20cd7:	mov    ecx,DWORD PTR [rsp+0x20]
   20cdb:	mov    rdx,QWORD PTR [rsp+0x8]
   20ce0:	jne    20c30 <xc_cpuid_set+0xf0>
   20ce6:	mov    eax,0x1
   20ceb:	shl    eax,cl
   20ced:	or     r14d,eax
   20cf0:	mov    eax,0x1
   20cf5:	mov    DWORD PTR [rdx+r12*1],r14d
   20cf9:	jmp    20c67 <xc_cpuid_set+0x127>
   20cfe:	xchg   ax,ax
   20d00:	mov    rax,QWORD PTR [rsp+0x10]
   20d05:	lea    rdx,[rsp+0x50]
   20d0a:	mov    eax,DWORD PTR [rax+r12*1]
   20d0e:	mov    DWORD PTR [rsp+r12*1+0x50],eax
   20d13:	add    r12,0x4
   20d17:	add    r14,0x8
   20d1b:	cmp    r12,0x10
   20d1f:	jne    20bf8 <xc_cpuid_set+0xb8>
   20d25:	mov    rcx,rdx
   20d28:	mov    esi,DWORD PTR [rsp+0x24]
   20d2c:	mov    rdx,QWORD PTR [rsp+0x28]
   20d31:	mov    rdi,QWORD PTR [rsp+0x18]
   20d36:	mov    r14,r13
   20d39:	call   1f5a0 <xc_cpuid_do_domctl>
   20d3e:	test   eax,eax
   20d40:	mov    r12d,eax
   20d43:	jne    20d89 <xc_cpuid_set+0x249>
   20d45:	nop    DWORD PTR [rax]
   20d48:	mov    rdi,QWORD PTR [rsp+0x40]
   20d4d:	call   5900 <free@plt>
   20d52:	mov    rdi,QWORD PTR [rsp+0x78]
   20d57:	xor    rdi,QWORD PTR fs:0x28
   20d60:	mov    eax,r12d
   20d63:	jne    20dc6 <xc_cpuid_set+0x286>
   20d65:	add    rsp,0x88
   20d6c:	pop    rbx
   20d6d:	pop    rbp
   20d6e:	pop    r12
   20d70:	pop    r13
   20d72:	pop    r14
   20d74:	pop    r15
   20d76:	ret    
   20d77:	nop    WORD PTR [rax+rax*1+0x0]
   20d80:	mov    r14,r9
   20d83:	mov    r12d,0xffffffea
   20d89:	lea    rbp,[r14+0x20]
   20d8d:	mov    rbx,r14
   20d90:	mov    rdi,QWORD PTR [rbx]
   20d93:	add    rbx,0x8
   20d97:	call   5900 <free@plt>
   20d9c:	mov    QWORD PTR [rbx-0x8],0x0
   20da4:	cmp    rbp,rbx
   20da7:	jne    20d90 <xc_cpuid_set+0x250>
   20da9:	jmp    20d48 <xc_cpuid_set+0x208>
   20dab:	nop    DWORD PTR [rax+rax*1+0x0]
   20db0:	mov    r14,r13
   20db3:	mov    r13,r9
   20db6:	jmp    20d13 <xc_cpuid_set+0x1d3>
   20dbb:	mov    r14,r13
   20dbe:	mov    r12d,0xfffffff4
   20dc4:	jmp    20d89 <xc_cpuid_set+0x249>
   20dc6:	call   5b80 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000020dcc <_fini>:
   20dcc:	sub    rsp,0x8
   20dd0:	add    rsp,0x8
   20dd4:	ret    
