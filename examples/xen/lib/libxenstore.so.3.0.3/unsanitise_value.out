Number of assembly instructions     = 107
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 107
Number of edges: 118

4a20 (False): 0

4a20: PUSH Reg R15 2
4a22: PUSH Reg R14 2
4a24: PUSH Reg R13 2
4a26: PUSH Reg R12 2
4a28: MOV Reg R13, Reg RDI 3
4a2b: PUSH Reg RBP 1
4a2c: PUSH Reg RBX 1
4a2d: MOV Reg R12, Reg RSI 3
4a30: MOV Reg RBX, Reg RDX 3
4a33: SUB Reg RSP, Immediate 40 4
4a37: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
4a40: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
4a45: XOR Reg EAX, Reg EAX 2
4a47: MOVSX Reg EAX, Address (SizeDir 8 (FromReg RDX)) 3
4a4a: TEST Reg EAX, Reg EAX 2
4a4c: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg EAX 4
4a50: JE 4ac8 (resolved immediate)
  |
  `- 4a52,4ac8
4a52: ADD Reg RDX, Immediate 1 4
4a56: MOV Reg RBP, Reg RDI 3
4a59: LEA Reg R15, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 20))) 5
4a5e: LEA Reg R14, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
4a63: JMP 4a86 (resolved immediate)
  |
  `- 4a86
4a68: MOVZX Reg EAX, Address (SizeDir 8 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
4a6d: MOV Reg RBX, Reg RDX 3
4a70: ADD Reg RBP, Immediate 1 4
4a74: MOV Address (SizeDir 8 (AddrMinus (FromReg RBP) (AddrImm 1))), Reg AL 3
4a77: MOVSX Reg EAX, Address (SizeDir 8 (FromReg RBX)) 3
4a7a: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 1))) 4
4a7e: TEST Reg EAX, Reg EAX 2
4a80: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg EAX 4
4a84: JE 4ad0 (resolved immediate)
  |
  `- 4a86,4ad0
4a86: CMP Reg EAX, Immediate 92 3
4a89: JNE 4a68 (resolved immediate)
  |
  `- 4a68,4a8b
4a8b: MOVSX Reg ECX, Address (SizeDir 8 (AddrPlus (FromReg RBX) (AddrImm 1))) 4
4a8f: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 2))) 4
4a93: CMP Reg CL, Immediate 110 3
4a96: MOV Reg EAX, Reg ECX 2
4a98: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg ECX 4
4a9c: JE 4bb0 (resolved immediate)
  |
  `- 4aa2,4bb0
4aa2: JLE 4b08 (resolved immediate)
  |
  `- 4aa4,4b08
4aa4: CMP Reg CL, Immediate 116 3
4aa7: JE 4b90 (resolved immediate)
  |
  `- 4aad,4b90
4aad: CMP Reg CL, Immediate 120 3
4ab0: JE 4b50 (resolved immediate)
  |
  `- 4ab6,4b50
4ab6: CMP Reg CL, Immediate 114 3
4ab9: JE 4ba0 (resolved immediate)
  |
  `- 4abf,4ba0
4abf: MOV Reg RBX, Reg R8 3
4ac2: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4ac8: MOV Reg RBP, Reg RDI 3
4acb: NOP  5
4ad0: TEST Reg R12, Reg R12 3
4ad3: MOV Address (SizeDir 8 (FromReg RBP)), Immediate 0 4
4ad7: JE 4ae0 (resolved immediate)
  |
  `- 4ad9,4ae0
4ad9: SUB Reg RBP, Reg R13 3
4adc: MOV Address (SizeDir 32 (FromReg R12)), Reg EBP 4
4ae0: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
4ae5: XOR Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
4aee: JNE 4bbd (resolved immediate)
  |
  `- 4af4,4bbd
4af4: ADD Reg RSP, Immediate 40 4
4af8: POP Reg RBX 1
4af9: POP Reg RBP 1
4afa: POP Reg R12 2
4afc: POP Reg R13 2
4afe: POP Reg R14 2
4b00: POP Reg R15 2
4b02: RET  1
  |
  `- 
4b08: TEST Reg CL, Reg CL 2
4b0a: MOV Reg RBX, Reg RDX 3
4b0d: JE 4a70 (resolved immediate)
  |
  `- 4a70,4b13
4b13: JS 4abf (resolved immediate)
  |
  `- 4abf,4b15
4b15: LEA Reg EDX, Address (SizeDir 32 (AddrMinus (FromReg RCX) (AddrImm 48))) 3
4b18: CMP Reg DL, Immediate 7 3
4b1b: JA 4abf (resolved immediate)
  |
  `- 4abf,4b1d
4b1d: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 1329))) 7
4b24: MOV Reg RDI, Reg RBX 3
4b27: MOV Reg RCX, Reg R15 3
4b2a: MOV Reg RDX, Reg R14 3
4b2d: XOR Reg EAX, Reg EAX 2
4b2f: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))), Immediate 0 8
4b37: CALL sscanf (external)
4b3c: MOVSXD Reg RAX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))) 5
4b41: ADD Reg RBX, Reg RAX 3
4b44: MOVZX Reg EAX, Address (SizeDir 8 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
4b49: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4b50: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 1272))) 7
4b57: MOV Reg RDI, Reg R8 3
4b5a: MOV Reg RCX, Reg R15 3
4b5d: MOV Reg RDX, Reg R14 3
4b60: XOR Reg EAX, Reg EAX 2
4b62: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg R8 5
4b67: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))), Immediate 0 8
4b6f: CALL sscanf (external)
4b74: MOVSXD Reg RBX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))) 5
4b79: MOV Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
4b7e: MOVZX Reg EAX, Address (SizeDir 8 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
4b83: ADD Reg RBX, Reg R8 3
4b86: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4b90: MOV Reg RBX, Reg R8 3
4b93: MOV Reg EAX, Immediate 9 5
4b98: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4ba0: MOV Reg RBX, Reg R8 3
4ba3: MOV Reg EAX, Immediate 13 5
4ba8: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4bb0: MOV Reg RBX, Reg R8 3
4bb3: MOV Reg EAX, Immediate 10 5
4bb8: JMP 4a70 (resolved immediate)
  |
  `- 4a70
4bbd: CALL __stack_chk_fail (external)
  |
  `- 
