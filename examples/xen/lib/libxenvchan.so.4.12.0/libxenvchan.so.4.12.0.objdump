
libxenvchan.so.4.12.0:     file format elf64-x86-64


Disassembly of section .init:

0000000000001160 <_init>:
    1160:	sub    rsp,0x8
    1164:	mov    rax,QWORD PTR [rip+0x201e7d]        # 202fe8 <__gmon_start__>
    116b:	test   rax,rax
    116e:	je     1172 <_init+0x12>
    1170:	call   rax
    1172:	add    rsp,0x8
    1176:	ret    

Disassembly of section .plt:

0000000000001180 <.plt>:
    1180:	push   QWORD PTR [rip+0x201e82]        # 203008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1186:	jmp    QWORD PTR [rip+0x201e84]        # 203010 <_GLOBAL_OFFSET_TABLE_+0x10>
    118c:	nop    DWORD PTR [rax+0x0]

0000000000001190 <xenevtchn_open@plt>:
    1190:	jmp    QWORD PTR [rip+0x201e82]        # 203018 <xenevtchn_open@VERS_1.0>
    1196:	push   0x0
    119b:	jmp    1180 <.plt>

00000000000011a0 <__snprintf_chk@plt>:
    11a0:	jmp    QWORD PTR [rip+0x201e7a]        # 203020 <__snprintf_chk@GLIBC_2.3.4>
    11a6:	push   0x1
    11ab:	jmp    1180 <.plt>

00000000000011b0 <free@plt>:
    11b0:	jmp    QWORD PTR [rip+0x201e72]        # 203028 <free@GLIBC_2.2.5>
    11b6:	push   0x2
    11bb:	jmp    1180 <.plt>

00000000000011c0 <libxenvchan_close@plt>:
    11c0:	jmp    QWORD PTR [rip+0x201e6a]        # 203030 <libxenvchan_close@@Base+0x200980>
    11c6:	push   0x3
    11cb:	jmp    1180 <.plt>

00000000000011d0 <xenevtchn_notify@plt>:
    11d0:	jmp    QWORD PTR [rip+0x201e62]        # 203038 <xenevtchn_notify@VERS_1.0>
    11d6:	push   0x4
    11db:	jmp    1180 <.plt>

00000000000011e0 <__errno_location@plt>:
    11e0:	jmp    QWORD PTR [rip+0x201e5a]        # 203040 <__errno_location@GLIBC_2.2.5>
    11e6:	push   0x5
    11eb:	jmp    1180 <.plt>

00000000000011f0 <xengntshr_share_page_notify@plt>:
    11f0:	jmp    QWORD PTR [rip+0x201e52]        # 203048 <xengntshr_share_page_notify@VERS_1.0>
    11f6:	push   0x6
    11fb:	jmp    1180 <.plt>

0000000000001200 <xengntshr_close@plt>:
    1200:	jmp    QWORD PTR [rip+0x201e4a]        # 203050 <xengntshr_close@VERS_1.0>
    1206:	push   0x7
    120b:	jmp    1180 <.plt>

0000000000001210 <xs_transaction_start@plt>:
    1210:	jmp    QWORD PTR [rip+0x201e42]        # 203058 <xs_transaction_start>
    1216:	push   0x8
    121b:	jmp    1180 <.plt>

0000000000001220 <xs_daemon_close@plt>:
    1220:	jmp    QWORD PTR [rip+0x201e3a]        # 203060 <xs_daemon_close>
    1226:	push   0x9
    122b:	jmp    1180 <.plt>

0000000000001230 <xengnttab_map_grant_ref_notify@plt>:
    1230:	jmp    QWORD PTR [rip+0x201e32]        # 203068 <xengnttab_map_grant_ref_notify@VERS_1.0>
    1236:	push   0xa
    123b:	jmp    1180 <.plt>

0000000000001240 <__stack_chk_fail@plt>:
    1240:	jmp    QWORD PTR [rip+0x201e2a]        # 203070 <__stack_chk_fail@GLIBC_2.4>
    1246:	push   0xb
    124b:	jmp    1180 <.plt>

0000000000001250 <xenevtchn_bind_interdomain@plt>:
    1250:	jmp    QWORD PTR [rip+0x201e22]        # 203078 <xenevtchn_bind_interdomain@VERS_1.0>
    1256:	push   0xc
    125b:	jmp    1180 <.plt>

0000000000001260 <xenevtchn_unmask@plt>:
    1260:	jmp    QWORD PTR [rip+0x201e1a]        # 203080 <xenevtchn_unmask@VERS_1.0>
    1266:	push   0xd
    126b:	jmp    1180 <.plt>

0000000000001270 <xenevtchn_pending@plt>:
    1270:	jmp    QWORD PTR [rip+0x201e12]        # 203088 <xenevtchn_pending@VERS_1.0>
    1276:	push   0xe
    127b:	jmp    1180 <.plt>

0000000000001280 <xs_set_permissions@plt>:
    1280:	jmp    QWORD PTR [rip+0x201e0a]        # 203090 <xs_set_permissions>
    1286:	push   0xf
    128b:	jmp    1180 <.plt>

0000000000001290 <xengnttab_open@plt>:
    1290:	jmp    QWORD PTR [rip+0x201e02]        # 203098 <xengnttab_open@VERS_1.0>
    1296:	push   0x10
    129b:	jmp    1180 <.plt>

00000000000012a0 <xs_transaction_end@plt>:
    12a0:	jmp    QWORD PTR [rip+0x201dfa]        # 2030a0 <xs_transaction_end>
    12a6:	push   0x11
    12ab:	jmp    1180 <.plt>

00000000000012b0 <xenevtchn_unbind@plt>:
    12b0:	jmp    QWORD PTR [rip+0x201df2]        # 2030a8 <xenevtchn_unbind@VERS_1.0>
    12b6:	push   0x12
    12bb:	jmp    1180 <.plt>

00000000000012c0 <xs_daemon_open@plt>:
    12c0:	jmp    QWORD PTR [rip+0x201dea]        # 2030b0 <xs_daemon_open>
    12c6:	push   0x13
    12cb:	jmp    1180 <.plt>

00000000000012d0 <strtol@plt>:
    12d0:	jmp    QWORD PTR [rip+0x201de2]        # 2030b8 <strtol@GLIBC_2.2.5>
    12d6:	push   0x14
    12db:	jmp    1180 <.plt>

00000000000012e0 <memcpy@plt>:
    12e0:	jmp    QWORD PTR [rip+0x201dda]        # 2030c0 <memcpy@GLIBC_2.14>
    12e6:	push   0x15
    12eb:	jmp    1180 <.plt>

00000000000012f0 <xengnttab_unmap@plt>:
    12f0:	jmp    QWORD PTR [rip+0x201dd2]        # 2030c8 <xengnttab_unmap@VERS_1.0>
    12f6:	push   0x16
    12fb:	jmp    1180 <.plt>

0000000000001300 <malloc@plt>:
    1300:	jmp    QWORD PTR [rip+0x201dca]        # 2030d0 <malloc@GLIBC_2.2.5>
    1306:	push   0x17
    130b:	jmp    1180 <.plt>

0000000000001310 <libxenvchan_wait@plt>:
    1310:	jmp    QWORD PTR [rip+0x201dc2]        # 2030d8 <libxenvchan_wait@@Base+0x200f58>
    1316:	push   0x18
    131b:	jmp    1180 <.plt>

0000000000001320 <xengnttab_map_domain_grant_refs@plt>:
    1320:	jmp    QWORD PTR [rip+0x201dba]        # 2030e0 <xengnttab_map_domain_grant_refs@VERS_1.0>
    1326:	push   0x19
    132b:	jmp    1180 <.plt>

0000000000001330 <xenevtchn_close@plt>:
    1330:	jmp    QWORD PTR [rip+0x201db2]        # 2030e8 <xenevtchn_close@VERS_1.0>
    1336:	push   0x1a
    133b:	jmp    1180 <.plt>

0000000000001340 <xenevtchn_fd@plt>:
    1340:	jmp    QWORD PTR [rip+0x201daa]        # 2030f0 <xenevtchn_fd@VERS_1.0>
    1346:	push   0x1b
    134b:	jmp    1180 <.plt>

0000000000001350 <xs_domain_open@plt>:
    1350:	jmp    QWORD PTR [rip+0x201da2]        # 2030f8 <xs_domain_open>
    1356:	push   0x1c
    135b:	jmp    1180 <.plt>

0000000000001360 <libxenvchan_is_open@plt>:
    1360:	jmp    QWORD PTR [rip+0x201d9a]        # 203100 <libxenvchan_is_open@@Base+0x200f50>
    1366:	push   0x1d
    136b:	jmp    1180 <.plt>

0000000000001370 <xengnttab_close@plt>:
    1370:	jmp    QWORD PTR [rip+0x201d92]        # 203108 <xengnttab_close@VERS_1.0>
    1376:	push   0x1e
    137b:	jmp    1180 <.plt>

0000000000001380 <munmap@plt>:
    1380:	jmp    QWORD PTR [rip+0x201d8a]        # 203110 <munmap@GLIBC_2.2.5>
    1386:	push   0x1f
    138b:	jmp    1180 <.plt>

0000000000001390 <xengntshr_open@plt>:
    1390:	jmp    QWORD PTR [rip+0x201d82]        # 203118 <xengntshr_open@VERS_1.0>
    1396:	push   0x20
    139b:	jmp    1180 <.plt>

00000000000013a0 <xs_read@plt>:
    13a0:	jmp    QWORD PTR [rip+0x201d7a]        # 203120 <xs_read>
    13a6:	push   0x21
    13ab:	jmp    1180 <.plt>

00000000000013b0 <xenevtchn_bind_unbound_port@plt>:
    13b0:	jmp    QWORD PTR [rip+0x201d72]        # 203128 <xenevtchn_bind_unbound_port@VERS_1.0>
    13b6:	push   0x22
    13bb:	jmp    1180 <.plt>

00000000000013c0 <xengntshr_unshare@plt>:
    13c0:	jmp    QWORD PTR [rip+0x201d6a]        # 203130 <xengntshr_unshare@VERS_1.0>
    13c6:	push   0x23
    13cb:	jmp    1180 <.plt>

00000000000013d0 <xengntshr_share_pages@plt>:
    13d0:	jmp    QWORD PTR [rip+0x201d62]        # 203138 <xengntshr_share_pages@VERS_1.0>
    13d6:	push   0x24
    13db:	jmp    1180 <.plt>

00000000000013e0 <xs_write@plt>:
    13e0:	jmp    QWORD PTR [rip+0x201d5a]        # 203140 <xs_write>
    13e6:	push   0x25
    13eb:	jmp    1180 <.plt>

Disassembly of section .plt.got:

00000000000013f0 <__cxa_finalize@plt>:
    13f0:	jmp    QWORD PTR [rip+0x201c02]        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
    13f6:	xchg   ax,ax

Disassembly of section .text:

0000000000001400 <deregister_tm_clones>:
    1400:	lea    rdi,[rip+0x201d49]        # 203150 <completed.7697>
    1407:	push   rbp
    1408:	lea    rax,[rip+0x201d41]        # 203150 <completed.7697>
    140f:	cmp    rax,rdi
    1412:	mov    rbp,rsp
    1415:	je     1430 <deregister_tm_clones+0x30>
    1417:	mov    rax,QWORD PTR [rip+0x201bc2]        # 202fe0 <_ITM_deregisterTMCloneTable>
    141e:	test   rax,rax
    1421:	je     1430 <deregister_tm_clones+0x30>
    1423:	pop    rbp
    1424:	jmp    rax
    1426:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1430:	pop    rbp
    1431:	ret    
    1432:	nop    DWORD PTR [rax+0x0]
    1436:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001440 <register_tm_clones>:
    1440:	lea    rdi,[rip+0x201d09]        # 203150 <completed.7697>
    1447:	lea    rsi,[rip+0x201d02]        # 203150 <completed.7697>
    144e:	push   rbp
    144f:	sub    rsi,rdi
    1452:	mov    rbp,rsp
    1455:	sar    rsi,0x3
    1459:	mov    rax,rsi
    145c:	shr    rax,0x3f
    1460:	add    rsi,rax
    1463:	sar    rsi,1
    1466:	je     1480 <register_tm_clones+0x40>
    1468:	mov    rax,QWORD PTR [rip+0x201b81]        # 202ff0 <_ITM_registerTMCloneTable>
    146f:	test   rax,rax
    1472:	je     1480 <register_tm_clones+0x40>
    1474:	pop    rbp
    1475:	jmp    rax
    1477:	nop    WORD PTR [rax+rax*1+0x0]
    1480:	pop    rbp
    1481:	ret    
    1482:	nop    DWORD PTR [rax+0x0]
    1486:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001490 <__do_global_dtors_aux>:
    1490:	cmp    BYTE PTR [rip+0x201cb9],0x0        # 203150 <completed.7697>
    1497:	jne    14c8 <__do_global_dtors_aux+0x38>
    1499:	cmp    QWORD PTR [rip+0x201b57],0x0        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
    14a1:	push   rbp
    14a2:	mov    rbp,rsp
    14a5:	je     14b3 <__do_global_dtors_aux+0x23>
    14a7:	mov    rdi,QWORD PTR [rip+0x201c9a]        # 203148 <__dso_handle>
    14ae:	call   13f0 <__cxa_finalize@plt>
    14b3:	call   1400 <deregister_tm_clones>
    14b8:	mov    BYTE PTR [rip+0x201c91],0x1        # 203150 <completed.7697>
    14bf:	pop    rbp
    14c0:	ret    
    14c1:	nop    DWORD PTR [rax+0x0]
    14c8:	repz ret 
    14ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000014d0 <frame_dummy>:
    14d0:	push   rbp
    14d1:	mov    rbp,rsp
    14d4:	pop    rbp
    14d5:	jmp    1440 <register_tm_clones>
    14da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000014e0 <libxenvchan_server_init>:
    14e0:	push   r15
    14e2:	push   r14
    14e4:	push   r13
    14e6:	push   r12
    14e8:	push   rbp
    14e9:	push   rbx
    14ea:	sub    rsp,0xa8
    14f1:	mov    rax,QWORD PTR fs:0x28
    14fa:	mov    QWORD PTR [rsp+0x98],rax
    1502:	xor    eax,eax
    1504:	cmp    rcx,0x100000
    150b:	ja     1a28 <libxenvchan_server_init+0x548>
    1511:	cmp    r8,0x100000
    1518:	mov    r14,r8
    151b:	ja     1a28 <libxenvchan_server_init+0x548>
    1521:	mov    r12,rdi
    1524:	mov    edi,0x50
    1529:	mov    ebp,esi
    152b:	mov    r15,rdx
    152e:	mov    r13,rcx
    1531:	call   1300 <malloc@plt>
    1536:	test   rax,rax
    1539:	mov    rbx,rax
    153c:	je     1a28 <libxenvchan_server_init+0x548>
    1542:	mov    QWORD PTR [rax+0x8],0x0
    154a:	mov    QWORD PTR [rax+0x10],0x0
    1552:	mov    ecx,0xc
    1557:	movzx  eax,BYTE PTR [rax+0x1c]
    155b:	or     eax,0x1
    155e:	and    eax,0xfffffffd
    1561:	cmp    r13,0x1000
    1568:	mov    BYTE PTR [rbx+0x1c],al
    156b:	jbe    1586 <libxenvchan_server_init+0xa6>
    156d:	mov    edx,0x1
    1572:	nop    WORD PTR [rax+rax*1+0x0]
    1578:	add    ecx,0x1
    157b:	mov    eax,edx
    157d:	shl    eax,cl
    157f:	cdqe   
    1581:	cmp    r13,rax
    1584:	ja     1578 <libxenvchan_server_init+0x98>
    1586:	cmp    r14,0x1000
    158d:	mov    DWORD PTR [rbx+0x30],ecx
    1590:	jbe    1ae0 <libxenvchan_server_init+0x600>
    1596:	mov    ecx,0xc
    159b:	mov    edx,0x1
    15a0:	add    ecx,0x1
    15a3:	mov    eax,edx
    15a5:	shl    eax,cl
    15a7:	cdqe   
    15a9:	cmp    r14,rax
    15ac:	ja     15a0 <libxenvchan_server_init+0xc0>
    15ae:	cmp    r14,0x800
    15b5:	mov    DWORD PTR [rbx+0x48],ecx
    15b8:	setbe  al
    15bb:	cmp    r13,0x800
    15c2:	ja     19f0 <libxenvchan_server_init+0x510>
    15c8:	cmp    r14,0x400
    15cf:	ja     19f0 <libxenvchan_server_init+0x510>
    15d5:	mov    DWORD PTR [rbx+0x30],0xb
    15dc:	mov    DWORD PTR [rbx+0x48],0xa
    15e3:	xor    esi,esi
    15e5:	mov    rdi,r12
    15e8:	call   1390 <xengntshr_open@plt>
    15ed:	test   rax,rax
    15f0:	mov    QWORD PTR [rbx],rax
    15f3:	je     1a1a <libxenvchan_server_init+0x53a>
    15f9:	xor    esi,esi
    15fb:	mov    rdi,r12
    15fe:	call   1190 <xenevtchn_open@plt>
    1603:	test   rax,rax
    1606:	mov    QWORD PTR [rbx+0x10],rax
    160a:	je     19b5 <libxenvchan_server_init+0x4d5>
    1610:	mov    esi,ebp
    1612:	mov    rdi,rax
    1615:	call   13b0 <xenevtchn_bind_unbound_port@plt>
    161a:	test   eax,eax
    161c:	mov    r12d,eax
    161f:	js     1b54 <libxenvchan_server_init+0x674>
    1625:	mov    rdi,QWORD PTR [rbx+0x10]
    1629:	mov    DWORD PTR [rbx+0x18],eax
    162c:	mov    esi,eax
    162e:	call   1260 <xenevtchn_unmask@plt>
    1633:	test   eax,eax
    1635:	mov    r14d,eax
    1638:	jne    1b48 <libxenvchan_server_init+0x668>
    163e:	mov    ecx,DWORD PTR [rbx+0x30]
    1641:	xor    r13d,r13d
    1644:	cmp    ecx,0xb
    1647:	jle    1655 <libxenvchan_server_init+0x175>
    1649:	sub    ecx,0xc
    164c:	mov    r13d,0x1
    1652:	shl    r13d,cl
    1655:	mov    ecx,DWORD PTR [rbx+0x48]
    1658:	cmp    ecx,0xb
    165b:	jle    1669 <libxenvchan_server_init+0x189>
    165d:	sub    ecx,0xc
    1660:	mov    r14d,0x1
    1666:	shl    r14d,cl
    1669:	mov    r9d,DWORD PTR [rbx+0x18]
    166d:	mov    rdi,QWORD PTR [rbx]
    1670:	lea    rdx,[rsp+0x2c]
    1675:	mov    r8d,0x15
    167b:	mov    ecx,0x1
    1680:	mov    esi,ebp
    1682:	mov    DWORD PTR [rsp+0x2c],0xffffffff
    168a:	call   11f0 <xengntshr_share_page_notify@plt>
    168f:	test   rax,rax
    1692:	mov    r12,rax
    1695:	je     1770 <libxenvchan_server_init+0x290>
    169b:	lea    rdi,[rax+0x8]
    169f:	mov    rcx,rax
    16a2:	mov    QWORD PTR [rax],0x0
    16a9:	mov    QWORD PTR [rax+0xff8],0x0
    16b4:	xor    eax,eax
    16b6:	and    rdi,0xfffffffffffffff8
    16ba:	sub    rcx,rdi
    16bd:	add    ecx,0x1000
    16c3:	shr    ecx,0x3
    16c6:	rep stos QWORD PTR es:[rdi],rax
    16c9:	lea    rax,[r12+0x8]
    16ce:	mov    QWORD PTR [rbx+0x8],r12
    16d2:	mov    QWORD PTR [rbx+0x20],r12
    16d6:	mov    QWORD PTR [rbx+0x38],rax
    16da:	mov    eax,DWORD PTR [rbx+0x30]
    16dd:	mov    WORD PTR [r12+0x10],ax
    16e3:	mov    rax,QWORD PTR [rbx+0x8]
    16e7:	mov    edx,DWORD PTR [rbx+0x48]
    16ea:	mov    WORD PTR [rax+0x12],dx
    16ee:	mov    rax,QWORD PTR [rbx+0x8]
    16f2:	mov    BYTE PTR [rax+0x14],0x2
    16f6:	mov    rax,QWORD PTR [rbx+0x8]
    16fa:	mov    BYTE PTR [rax+0x15],0x1
    16fe:	mov    rax,QWORD PTR [rbx+0x8]
    1702:	mov    BYTE PTR [rax+0x16],0x1
    1706:	mov    eax,DWORD PTR [rbx+0x30]
    1709:	cmp    eax,0xa
    170c:	je     1a70 <libxenvchan_server_init+0x590>
    1712:	cmp    eax,0xb
    1715:	je     1a30 <libxenvchan_server_init+0x550>
    171b:	mov    rax,QWORD PTR [rbx+0x8]
    171f:	mov    rdi,QWORD PTR [rbx]
    1722:	mov    r8d,0x1
    1728:	mov    edx,r13d
    172b:	mov    esi,ebp
    172d:	lea    rcx,[rax+0x18]
    1731:	call   13d0 <xengntshr_share_pages@plt>
    1736:	test   rax,rax
    1739:	mov    QWORD PTR [rbx+0x28],rax
    173d:	je     1b27 <libxenvchan_server_init+0x647>
    1743:	mov    rax,QWORD PTR [rbx+0x8]
    1747:	mov    edx,DWORD PTR [rbx+0x48]
    174a:	cmp    edx,0xa
    174d:	je     1a4b <libxenvchan_server_init+0x56b>
    1753:	cmp    edx,0xb
    1756:	jne    1a88 <libxenvchan_server_init+0x5a8>
    175c:	add    rax,0x800
    1762:	mov    QWORD PTR [rbx+0x40],rax
    1766:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1770:	mov    eax,DWORD PTR [rsp+0x2c]
    1774:	test   eax,eax
    1776:	mov    DWORD PTR [rsp+0xc],eax
    177a:	js     19b5 <libxenvchan_server_init+0x4d5>
    1780:	call   1350 <xs_domain_open@plt>
    1785:	test   rax,rax
    1788:	mov    r12,rax
    178b:	je     19b5 <libxenvchan_server_init+0x4d5>
    1791:	lea    rdx,[rip+0x1045]        # 27dd <_fini+0x9>
    1798:	xor    ecx,ecx
    179a:	xor    esi,esi
    179c:	mov    rdi,rax
    179f:	call   13a0 <xs_read@plt>
    17a4:	test   rax,rax
    17a7:	mov    QWORD PTR [rsp+0x18],rax
    17ac:	mov    rdi,rax
    17af:	je     1a10 <libxenvchan_server_init+0x530>
    17b5:	mov    edx,0xa
    17ba:	xor    esi,esi
    17bc:	lea    r14,[rsp+0x50]
    17c1:	call   12d0 <strtol@plt>
    17c6:	mov    DWORD PTR [rsp+0x30],eax
    17ca:	lea    rax,[rsp+0x30]
    17cf:	mov    DWORD PTR [rsp+0x38],ebp
    17d3:	mov    QWORD PTR [rsp+0x10],rbx
    17d8:	mov    DWORD PTR [rsp+0x34],0x0
    17e0:	lea    rbp,[rsp+0x40]
    17e5:	mov    DWORD PTR [rsp+0x3c],0x1
    17ed:	mov    rbx,rax
    17f0:	jmp    198b <libxenvchan_server_init+0x4ab>
    17f5:	nop    DWORD PTR [rax]
    17f8:	mov    r9d,DWORD PTR [rsp+0xc]
    17fd:	lea    r8,[rip+0xfdf]        # 27e3 <_fini+0xf>
    1804:	mov    ecx,0x10
    1809:	mov    edx,0x1
    180e:	mov    esi,0x10
    1813:	mov    rdi,rbp
    1816:	xor    eax,eax
    1818:	call   11a0 <__snprintf_chk@plt>
    181d:	lea    r8,[rip+0xfc2]        # 27e6 <_fini+0x12>
    1824:	mov    r9,r15
    1827:	mov    ecx,0x40
    182c:	mov    edx,0x1
    1831:	mov    esi,0x40
    1836:	mov    rdi,r14
    1839:	xor    eax,eax
    183b:	call   11a0 <__snprintf_chk@plt>
    1840:	mov    r8,rbp
    1843:	mov    edx,DWORD PTR [r8]
    1846:	add    r8,0x4
    184a:	lea    eax,[rdx-0x1010101]
    1850:	not    edx
    1852:	and    eax,edx
    1854:	and    eax,0x80808080
    1859:	je     1843 <libxenvchan_server_init+0x363>
    185b:	mov    edx,eax
    185d:	mov    rcx,rbp
    1860:	mov    rdi,r12
    1863:	shr    edx,0x10
    1866:	test   eax,0x8080
    186b:	cmove  eax,edx
    186e:	lea    rdx,[r8+0x2]
    1872:	mov    esi,eax
    1874:	cmove  r8,rdx
    1878:	add    sil,al
    187b:	mov    rdx,r14
    187e:	sbb    r8,0x3
    1882:	mov    esi,r13d
    1885:	sub    r8d,ebp
    1888:	call   13e0 <xs_write@plt>
    188d:	test   al,al
    188f:	je     199e <libxenvchan_server_init+0x4be>
    1895:	mov    r8d,0x2
    189b:	mov    rcx,rbx
    189e:	mov    rdx,r14
    18a1:	mov    esi,r13d
    18a4:	mov    rdi,r12
    18a7:	call   1280 <xs_set_permissions@plt>
    18ac:	test   al,al
    18ae:	je     199e <libxenvchan_server_init+0x4be>
    18b4:	mov    rax,QWORD PTR [rsp+0x10]
    18b9:	lea    r8,[rip+0xf23]        # 27e3 <_fini+0xf>
    18c0:	mov    ecx,0x10
    18c5:	mov    edx,0x1
    18ca:	mov    esi,0x10
    18cf:	mov    rdi,rbp
    18d2:	mov    r9d,DWORD PTR [rax+0x18]
    18d6:	xor    eax,eax
    18d8:	call   11a0 <__snprintf_chk@plt>
    18dd:	lea    r8,[rip+0xf0e]        # 27f2 <_fini+0x1e>
    18e4:	mov    r9,r15
    18e7:	mov    ecx,0x40
    18ec:	mov    edx,0x1
    18f1:	mov    esi,0x40
    18f6:	mov    rdi,r14
    18f9:	xor    eax,eax
    18fb:	call   11a0 <__snprintf_chk@plt>
    1900:	mov    r8,rbp
    1903:	mov    edx,DWORD PTR [r8]
    1906:	add    r8,0x4
    190a:	lea    eax,[rdx-0x1010101]
    1910:	not    edx
    1912:	and    eax,edx
    1914:	and    eax,0x80808080
    1919:	je     1903 <libxenvchan_server_init+0x423>
    191b:	mov    edx,eax
    191d:	mov    rcx,rbp
    1920:	mov    rdi,r12
    1923:	shr    edx,0x10
    1926:	test   eax,0x8080
    192b:	cmove  eax,edx
    192e:	lea    rdx,[r8+0x2]
    1932:	mov    esi,eax
    1934:	cmove  r8,rdx
    1938:	add    sil,al
    193b:	mov    rdx,r14
    193e:	sbb    r8,0x3
    1942:	mov    esi,r13d
    1945:	sub    r8d,ebp
    1948:	call   13e0 <xs_write@plt>
    194d:	test   al,al
    194f:	je     199e <libxenvchan_server_init+0x4be>
    1951:	mov    r8d,0x2
    1957:	mov    rcx,rbx
    195a:	mov    rdx,r14
    195d:	mov    esi,r13d
    1960:	mov    rdi,r12
    1963:	call   1280 <xs_set_permissions@plt>
    1968:	test   al,al
    196a:	je     199e <libxenvchan_server_init+0x4be>
    196c:	xor    edx,edx
    196e:	mov    esi,r13d
    1971:	mov    rdi,r12
    1974:	call   12a0 <xs_transaction_end@plt>
    1979:	test   al,al
    197b:	jne    1b2c <libxenvchan_server_init+0x64c>
    1981:	call   11e0 <__errno_location@plt>
    1986:	cmp    DWORD PTR [rax],0xb
    1989:	jne    199e <libxenvchan_server_init+0x4be>
    198b:	mov    rdi,r12
    198e:	call   1210 <xs_transaction_start@plt>
    1993:	test   eax,eax
    1995:	mov    r13d,eax
    1998:	jne    17f8 <libxenvchan_server_init+0x318>
    199e:	mov    rdi,QWORD PTR [rsp+0x18]
    19a3:	mov    rbx,QWORD PTR [rsp+0x10]
    19a8:	call   11b0 <free@plt>
    19ad:	mov    rdi,r12
    19b0:	call   1220 <xs_daemon_close@plt>
    19b5:	mov    rdi,rbx
    19b8:	xor    ebx,ebx
    19ba:	call   11c0 <libxenvchan_close@plt>
    19bf:	mov    rsi,QWORD PTR [rsp+0x98]
    19c7:	xor    rsi,QWORD PTR fs:0x28
    19d0:	mov    rax,rbx
    19d3:	jne    1b6a <libxenvchan_server_init+0x68a>
    19d9:	add    rsp,0xa8
    19e0:	pop    rbx
    19e1:	pop    rbp
    19e2:	pop    r12
    19e4:	pop    r13
    19e6:	pop    r14
    19e8:	pop    r15
    19ea:	ret    
    19eb:	nop    DWORD PTR [rax+rax*1+0x0]
    19f0:	cmp    r13,0x800
    19f7:	jbe    1a60 <libxenvchan_server_init+0x580>
    19f9:	test   al,al
    19fb:	je     15e3 <libxenvchan_server_init+0x103>
    1a01:	mov    DWORD PTR [rbx+0x48],0xb
    1a08:	jmp    15e3 <libxenvchan_server_init+0x103>
    1a0d:	nop    DWORD PTR [rax]
    1a10:	mov    rdi,r12
    1a13:	call   1220 <xs_daemon_close@plt>
    1a18:	jmp    19b5 <libxenvchan_server_init+0x4d5>
    1a1a:	mov    rdi,rbx
    1a1d:	call   11b0 <free@plt>
    1a22:	nop    WORD PTR [rax+rax*1+0x0]
    1a28:	xor    ebx,ebx
    1a2a:	jmp    19bf <libxenvchan_server_init+0x4df>
    1a2c:	nop    DWORD PTR [rax+0x0]
    1a30:	mov    rax,QWORD PTR [rbx+0x8]
    1a34:	lea    rdx,[rax+0x800]
    1a3b:	mov    QWORD PTR [rbx+0x28],rdx
    1a3f:	mov    edx,DWORD PTR [rbx+0x48]
    1a42:	cmp    edx,0xa
    1a45:	jne    1753 <libxenvchan_server_init+0x273>
    1a4b:	add    rax,0x400
    1a51:	mov    QWORD PTR [rbx+0x40],rax
    1a55:	jmp    1770 <libxenvchan_server_init+0x290>
    1a5a:	nop    WORD PTR [rax+rax*1+0x0]
    1a60:	mov    DWORD PTR [rbx+0x30],0xb
    1a67:	jmp    15e3 <libxenvchan_server_init+0x103>
    1a6c:	nop    DWORD PTR [rax+0x0]
    1a70:	mov    rax,QWORD PTR [rbx+0x8]
    1a74:	lea    rdx,[rax+0x400]
    1a7b:	mov    QWORD PTR [rbx+0x28],rdx
    1a7f:	jmp    1747 <libxenvchan_server_init+0x267>
    1a84:	nop    DWORD PTR [rax+0x0]
    1a88:	movsxd rdx,r13d
    1a8b:	mov    rdi,QWORD PTR [rbx]
    1a8e:	mov    r8d,0x1
    1a94:	lea    rcx,[rax+rdx*4+0x18]
    1a99:	mov    esi,ebp
    1a9b:	mov    edx,r14d
    1a9e:	call   13d0 <xengntshr_share_pages@plt>
    1aa3:	test   rax,rax
    1aa6:	mov    QWORD PTR [rbx+0x40],rax
    1aaa:	jne    1770 <libxenvchan_server_init+0x290>
    1ab0:	test   r13d,r13d
    1ab3:	mov    rdi,QWORD PTR [rbx]
    1ab6:	jne    1b1b <libxenvchan_server_init+0x63b>
    1ab8:	mov    edx,0x1
    1abd:	mov    rsi,r12
    1ac0:	call   13c0 <xengntshr_unshare@plt>
    1ac5:	mov    QWORD PTR [rbx+0x8],0x0
    1acd:	mov    DWORD PTR [rbx+0x30],0x0
    1ad4:	mov    DWORD PTR [rbx+0x48],0x0
    1adb:	jmp    19b5 <libxenvchan_server_init+0x4d5>
    1ae0:	cmp    r14,0x800
    1ae7:	mov    DWORD PTR [rbx+0x48],0xc
    1aee:	setbe  dl
    1af1:	cmp    r13,0x400
    1af8:	mov    eax,edx
    1afa:	ja     15bb <libxenvchan_server_init+0xdb>
    1b00:	test   dl,dl
    1b02:	je     15bb <libxenvchan_server_init+0xdb>
    1b08:	mov    DWORD PTR [rbx+0x30],0xa
    1b0f:	mov    DWORD PTR [rbx+0x48],0xb
    1b16:	jmp    15e3 <libxenvchan_server_init+0x103>
    1b1b:	mov    rsi,QWORD PTR [rbx+0x28]
    1b1f:	mov    edx,r13d
    1b22:	call   13c0 <xengntshr_unshare@plt>
    1b27:	mov    rdi,QWORD PTR [rbx]
    1b2a:	jmp    1ab8 <libxenvchan_server_init+0x5d8>
    1b2c:	mov    rdi,QWORD PTR [rsp+0x18]
    1b31:	mov    rbx,QWORD PTR [rsp+0x10]
    1b36:	call   11b0 <free@plt>
    1b3b:	mov    rdi,r12
    1b3e:	call   1220 <xs_daemon_close@plt>
    1b43:	jmp    19bf <libxenvchan_server_init+0x4df>
    1b48:	mov    rdi,QWORD PTR [rbx+0x10]
    1b4c:	mov    esi,r12d
    1b4f:	call   12b0 <xenevtchn_unbind@plt>
    1b54:	mov    rdi,QWORD PTR [rbx+0x10]
    1b58:	call   1330 <xenevtchn_close@plt>
    1b5d:	mov    QWORD PTR [rbx+0x10],0x0
    1b65:	jmp    19b5 <libxenvchan_server_init+0x4d5>
    1b6a:	call   1240 <__stack_chk_fail@plt>
    1b6f:	nop

0000000000001b70 <libxenvchan_client_init>:
    1b70:	push   r15
    1b72:	push   r14
    1b74:	mov    r14,rdi
    1b77:	push   r13
    1b79:	push   r12
    1b7b:	mov    edi,0x50
    1b80:	push   rbp
    1b81:	push   rbx
    1b82:	mov    r12,rdx
    1b85:	sub    rsp,0x88
    1b8c:	mov    rax,QWORD PTR fs:0x28
    1b95:	mov    QWORD PTR [rsp+0x78],rax
    1b9a:	xor    eax,eax
    1b9c:	mov    DWORD PTR [rsp+0xc],esi
    1ba0:	call   1300 <malloc@plt>
    1ba5:	test   rax,rax
    1ba8:	mov    r15,rax
    1bab:	je     1c71 <libxenvchan_client_init+0x101>
    1bb1:	and    BYTE PTR [rax+0x1c],0xfe
    1bb5:	mov    QWORD PTR [rax+0x8],0x0
    1bbd:	mov    QWORD PTR [rax+0x10],0x0
    1bc5:	mov    QWORD PTR [rax],0x0
    1bcc:	mov    DWORD PTR [rax+0x30],0x0
    1bd3:	mov    DWORD PTR [rax+0x48],0x0
    1bda:	call   12c0 <xs_daemon_open@plt>
    1bdf:	test   rax,rax
    1be2:	mov    rbx,rax
    1be5:	je     1e28 <libxenvchan_client_init+0x2b8>
    1beb:	lea    rbp,[rsp+0x30]
    1bf0:	lea    r8,[rip+0xbef]        # 27e6 <_fini+0x12>
    1bf7:	lea    r13,[rsp+0x2c]
    1bfc:	mov    r9,r12
    1bff:	mov    ecx,0x40
    1c04:	mov    edx,0x1
    1c09:	mov    esi,0x40
    1c0e:	mov    rdi,rbp
    1c11:	xor    eax,eax
    1c13:	call   11a0 <__snprintf_chk@plt>
    1c18:	mov    rcx,r13
    1c1b:	xor    esi,esi
    1c1d:	mov    rdx,rbp
    1c20:	mov    rdi,rbx
    1c23:	call   13a0 <xs_read@plt>
    1c28:	test   rax,rax
    1c2b:	mov    rcx,rax
    1c2e:	je     1c5e <libxenvchan_client_init+0xee>
    1c30:	mov    edx,0xa
    1c35:	xor    esi,esi
    1c37:	mov    rdi,rcx
    1c3a:	mov    QWORD PTR [rsp+0x18],rcx
    1c3f:	call   12d0 <strtol@plt>
    1c44:	mov    rcx,QWORD PTR [rsp+0x18]
    1c49:	mov    QWORD PTR [rsp+0x10],rax
    1c4e:	mov    rdi,rcx
    1c51:	call   11b0 <free@plt>
    1c56:	mov    edx,DWORD PTR [rsp+0x10]
    1c5a:	test   edx,edx
    1c5c:	jne    1ca0 <libxenvchan_client_init+0x130>
    1c5e:	mov    rdi,r15
    1c61:	xor    r15d,r15d
    1c64:	call   11c0 <libxenvchan_close@plt>
    1c69:	mov    rdi,rbx
    1c6c:	call   1220 <xs_daemon_close@plt>
    1c71:	mov    rdx,QWORD PTR [rsp+0x78]
    1c76:	xor    rdx,QWORD PTR fs:0x28
    1c7f:	mov    rax,r15
    1c82:	jne    1efa <libxenvchan_client_init+0x38a>
    1c88:	add    rsp,0x88
    1c8f:	pop    rbx
    1c90:	pop    rbp
    1c91:	pop    r12
    1c93:	pop    r13
    1c95:	pop    r14
    1c97:	pop    r15
    1c99:	ret    
    1c9a:	nop    WORD PTR [rax+rax*1+0x0]
    1ca0:	lea    r8,[rip+0xb4b]        # 27f2 <_fini+0x1e>
    1ca7:	mov    rdi,rbp
    1caa:	mov    r9,r12
    1cad:	mov    ecx,0x40
    1cb2:	mov    edx,0x1
    1cb7:	mov    esi,0x40
    1cbc:	xor    eax,eax
    1cbe:	call   11a0 <__snprintf_chk@plt>
    1cc3:	mov    rdx,rbp
    1cc6:	xor    esi,esi
    1cc8:	mov    rcx,r13
    1ccb:	mov    rdi,rbx
    1cce:	call   13a0 <xs_read@plt>
    1cd3:	test   rax,rax
    1cd6:	mov    rbp,rax
    1cd9:	je     1c5e <libxenvchan_client_init+0xee>
    1cdb:	xor    esi,esi
    1cdd:	mov    edx,0xa
    1ce2:	mov    rdi,rax
    1ce5:	call   12d0 <strtol@plt>
    1cea:	mov    rdi,rbp
    1ced:	mov    DWORD PTR [r15+0x18],eax
    1cf1:	call   11b0 <free@plt>
    1cf6:	mov    eax,DWORD PTR [r15+0x18]
    1cfa:	test   eax,eax
    1cfc:	je     1c5e <libxenvchan_client_init+0xee>
    1d02:	xor    esi,esi
    1d04:	mov    rdi,r14
    1d07:	call   1290 <xengnttab_open@plt>
    1d0c:	test   rax,rax
    1d0f:	mov    QWORD PTR [r15],rax
    1d12:	je     1c5e <libxenvchan_client_init+0xee>
    1d18:	xor    esi,esi
    1d1a:	mov    rdi,r14
    1d1d:	call   1190 <xenevtchn_open@plt>
    1d22:	test   rax,rax
    1d25:	mov    QWORD PTR [r15+0x10],rax
    1d29:	je     1c5e <libxenvchan_client_init+0xee>
    1d2f:	mov    edx,DWORD PTR [r15+0x18]
    1d33:	mov    esi,DWORD PTR [rsp+0xc]
    1d37:	mov    rdi,rax
    1d3a:	call   1250 <xenevtchn_bind_interdomain@plt>
    1d3f:	test   eax,eax
    1d41:	mov    ebp,eax
    1d43:	js     1ee4 <libxenvchan_client_init+0x374>
    1d49:	mov    rdi,QWORD PTR [r15+0x10]
    1d4d:	mov    DWORD PTR [r15+0x18],eax
    1d51:	mov    esi,eax
    1d53:	call   1260 <xenevtchn_unmask@plt>
    1d58:	test   eax,eax
    1d5a:	jne    1ed9 <libxenvchan_client_init+0x369>
    1d60:	mov    r9d,DWORD PTR [r15+0x18]
    1d64:	mov    edx,DWORD PTR [rsp+0x10]
    1d68:	mov    r8d,0x14
    1d6e:	mov    esi,DWORD PTR [rsp+0xc]
    1d72:	mov    rdi,QWORD PTR [r15]
    1d75:	mov    ecx,0x3
    1d7a:	call   1230 <xengnttab_map_grant_ref_notify@plt>
    1d7f:	test   rax,rax
    1d82:	mov    QWORD PTR [r15+0x8],rax
    1d86:	je     1c5e <libxenvchan_client_init+0xee>
    1d8c:	movzx  ecx,WORD PTR [rax+0x10]
    1d90:	lea    r8,[rax+0x8]
    1d94:	mov    DWORD PTR [r15+0x48],ecx
    1d98:	movzx  edx,WORD PTR [rax+0x12]
    1d9c:	mov    edi,ecx
    1d9e:	mov    QWORD PTR [r15+0x20],r8
    1da2:	lea    r8d,[rcx-0xa]
    1da6:	mov    QWORD PTR [r15+0x38],rax
    1daa:	cmp    r8d,0xa
    1dae:	mov    esi,edx
    1db0:	mov    DWORD PTR [r15+0x30],edx
    1db4:	ja     1f1e <libxenvchan_client_init+0x3ae>
    1dba:	lea    r8d,[rdx-0xa]
    1dbe:	cmp    r8d,0xa
    1dc2:	ja     1f1e <libxenvchan_client_init+0x3ae>
    1dc8:	cmp    ecx,edx
    1dca:	jne    1dd5 <libxenvchan_client_init+0x265>
    1dcc:	cmp    edx,0xb
    1dcf:	jle    1f1e <libxenvchan_client_init+0x3ae>
    1dd5:	cmp    di,0xa
    1dd9:	lea    rbp,[rax+0x18]
    1ddd:	je     1e49 <libxenvchan_client_init+0x2d9>
    1ddf:	cmp    di,0xb
    1de3:	jne    1e9b <libxenvchan_client_init+0x32b>
    1de9:	add    rax,0x800
    1def:	mov    QWORD PTR [r15+0x40],rax
    1df3:	cmp    esi,0xa
    1df6:	je     1e87 <libxenvchan_client_init+0x317>
    1dfc:	cmp    esi,0xb
    1dff:	jne    1e55 <libxenvchan_client_init+0x2e5>
    1e01:	mov    rax,QWORD PTR [r15+0x8]
    1e05:	lea    rdx,[rax+0x800]
    1e0c:	mov    QWORD PTR [r15+0x28],rdx
    1e10:	mov    BYTE PTR [rax+0x14],0x1
    1e14:	mov    rax,QWORD PTR [r15+0x8]
    1e18:	mov    BYTE PTR [rax+0x17],0x1
    1e1c:	jmp    1c69 <libxenvchan_client_init+0xf9>
    1e21:	nop    DWORD PTR [rax+0x0]
    1e28:	call   1350 <xs_domain_open@plt>
    1e2d:	test   rax,rax
    1e30:	mov    rbx,rax
    1e33:	jne    1beb <libxenvchan_client_init+0x7b>
    1e39:	mov    rdi,r15
    1e3c:	xor    r15d,r15d
    1e3f:	call   11c0 <libxenvchan_close@plt>
    1e44:	jmp    1c71 <libxenvchan_client_init+0x101>
    1e49:	add    rax,0x400
    1e4f:	mov    QWORD PTR [r15+0x40],rax
    1e53:	jmp    1df3 <libxenvchan_client_init+0x283>
    1e55:	lea    ecx,[rsi-0xc]
    1e58:	mov    r12d,0x1
    1e5e:	mov    edx,DWORD PTR [rsp+0xc]
    1e62:	mov    rdi,QWORD PTR [r15]
    1e65:	mov    esi,r12d
    1e68:	mov    r8d,0x1
    1e6e:	shl    esi,cl
    1e70:	mov    rcx,rbp
    1e73:	call   1320 <xengnttab_map_domain_grant_refs@plt>
    1e78:	test   rax,rax
    1e7b:	mov    QWORD PTR [r15+0x28],rax
    1e7f:	je     1eff <libxenvchan_client_init+0x38f>
    1e81:	mov    rax,QWORD PTR [r15+0x8]
    1e85:	jmp    1e10 <libxenvchan_client_init+0x2a0>
    1e87:	mov    rax,QWORD PTR [r15+0x8]
    1e8b:	lea    rdx,[rax+0x400]
    1e92:	mov    QWORD PTR [r15+0x28],rdx
    1e96:	jmp    1e10 <libxenvchan_client_init+0x2a0>
    1e9b:	sub    ecx,0xc
    1e9e:	mov    r12d,0x1
    1ea4:	mov    edx,DWORD PTR [rsp+0xc]
    1ea8:	mov    rdi,QWORD PTR [r15]
    1eab:	shl    r12d,cl
    1eae:	mov    r8d,0x3
    1eb4:	mov    rcx,rbp
    1eb7:	mov    esi,r12d
    1eba:	call   1320 <xengnttab_map_domain_grant_refs@plt>
    1ebf:	test   rax,rax
    1ec2:	mov    QWORD PTR [r15+0x40],rax
    1ec6:	je     1f1e <libxenvchan_client_init+0x3ae>
    1ec8:	movsxd r12,r12d
    1ecb:	mov    esi,DWORD PTR [r15+0x30]
    1ecf:	lea    rbp,[rbp+r12*4+0x0]
    1ed4:	jmp    1df3 <libxenvchan_client_init+0x283>
    1ed9:	mov    rdi,QWORD PTR [r15+0x10]
    1edd:	mov    esi,ebp
    1edf:	call   12b0 <xenevtchn_unbind@plt>
    1ee4:	mov    rdi,QWORD PTR [r15+0x10]
    1ee8:	call   1330 <xenevtchn_close@plt>
    1eed:	mov    QWORD PTR [r15+0x10],0x0
    1ef5:	jmp    1c5e <libxenvchan_client_init+0xee>
    1efa:	call   1240 <__stack_chk_fail@plt>
    1eff:	mov    eax,DWORD PTR [r15+0x48]
    1f03:	mov    rdi,QWORD PTR [r15]
    1f06:	cmp    eax,0xb
    1f09:	jle    1f1e <libxenvchan_client_init+0x3ae>
    1f0b:	sub    eax,0xc
    1f0e:	mov    rsi,QWORD PTR [r15+0x40]
    1f12:	mov    edx,r12d
    1f15:	mov    ecx,eax
    1f17:	shl    edx,cl
    1f19:	call   12f0 <xengnttab_unmap@plt>
    1f1e:	mov    rsi,QWORD PTR [r15+0x8]
    1f22:	mov    rdi,QWORD PTR [r15]
    1f25:	mov    edx,0x1
    1f2a:	call   12f0 <xengnttab_unmap@plt>
    1f2f:	mov    QWORD PTR [r15+0x8],0x0
    1f37:	mov    DWORD PTR [r15+0x30],0x0
    1f3f:	mov    DWORD PTR [r15+0x48],0x0
    1f47:	jmp    1c5e <libxenvchan_client_init+0xee>
    1f4c:	nop    DWORD PTR [rax+0x0]

0000000000001f50 <do_send>:
    1f50:	push   r13
    1f52:	push   r12
    1f54:	mov    r13,rdi
    1f57:	push   rbp
    1f58:	push   rbx
    1f59:	mov    ebx,0x1
    1f5e:	mov    rbp,rsi
    1f61:	mov    r12,rdx
    1f64:	sub    rsp,0x8
    1f68:	mov    ecx,DWORD PTR [rdi+0x48]
    1f6b:	mov    rax,QWORD PTR [rdi+0x38]
    1f6f:	shl    ebx,cl
    1f71:	lea    edi,[rbx-0x1]
    1f74:	and    edi,DWORD PTR [rax+0x4]
    1f77:	movsxd rax,edx
    1f7a:	sub    ebx,edi
    1f7c:	movsxd rbx,ebx
    1f7f:	cmp    rbx,rdx
    1f82:	cmova  rbx,rax
    1f86:	mfence 
    1f89:	movsxd rdi,edi
    1f8c:	add    rdi,QWORD PTR [r13+0x40]
    1f90:	mov    rdx,rbx
    1f93:	call   12e0 <memcpy@plt>
    1f98:	cmp    r12,rbx
    1f9b:	ja     2010 <do_send+0xc0>
    1f9d:	mov    rax,QWORD PTR [r13+0x38]
    1fa1:	add    DWORD PTR [rax+0x4],r12d
    1fa5:	mfence 
    1fa8:	test   BYTE PTR [r13+0x1c],0x1
    1fad:	mov    rax,QWORD PTR [r13+0x8]
    1fb1:	je     1fe0 <do_send+0x90>
    1fb3:	lea    rdx,[rax+0x17]
    1fb7:	movzx  eax,BYTE PTR [rdx]
    1fba:	mov    esi,eax
    1fbc:	mov    ecx,eax
    1fbe:	and    esi,0xfffffffe
    1fc1:	lock cmpxchg BYTE PTR [rdx],sil
    1fc6:	jne    1fba <do_send+0x6a>
    1fc8:	and    ecx,0x1
    1fcb:	jne    1ff0 <do_send+0xa0>
    1fcd:	mov    eax,r12d
    1fd0:	add    rsp,0x8
    1fd4:	pop    rbx
    1fd5:	pop    rbp
    1fd6:	pop    r12
    1fd8:	pop    r13
    1fda:	ret    
    1fdb:	nop    DWORD PTR [rax+rax*1+0x0]
    1fe0:	lea    rdx,[rax+0x16]
    1fe4:	jmp    1fb7 <do_send+0x67>
    1fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1ff0:	mov    esi,DWORD PTR [r13+0x18]
    1ff4:	mov    rdi,QWORD PTR [r13+0x10]
    1ff8:	call   11d0 <xenevtchn_notify@plt>
    1ffd:	test   eax,eax
    1fff:	je     1fcd <do_send+0x7d>
    2001:	mov    eax,0xffffffff
    2006:	jmp    1fd0 <do_send+0x80>
    2008:	nop    DWORD PTR [rax+rax*1+0x0]
    2010:	mov    rdi,QWORD PTR [r13+0x40]
    2014:	mov    rdx,r12
    2017:	lea    rsi,[rbp+rbx*1+0x0]
    201c:	sub    rdx,rbx
    201f:	call   12e0 <memcpy@plt>
    2024:	jmp    1f9d <do_send+0x4d>
    2029:	nop    DWORD PTR [rax+0x0]

0000000000002030 <do_recv>:
    2030:	push   r12
    2032:	push   rbp
    2033:	mov    r8,rsi
    2036:	push   rbx
    2037:	mov    ecx,DWORD PTR [rdi+0x30]
    203a:	mov    ebx,0x1
    203f:	mov    rax,QWORD PTR [rdi+0x20]
    2043:	mov    r12,rdi
    2046:	mov    rbp,rdx
    2049:	shl    ebx,cl
    204b:	lea    esi,[rbx-0x1]
    204e:	and    esi,DWORD PTR [rax]
    2050:	movsxd rax,edx
    2053:	sub    ebx,esi
    2055:	movsxd rbx,ebx
    2058:	cmp    rbx,rdx
    205b:	cmova  rbx,rax
    205f:	movsxd rsi,esi
    2062:	add    rsi,QWORD PTR [rdi+0x28]
    2066:	mov    rdx,rbx
    2069:	mov    rdi,r8
    206c:	call   12e0 <memcpy@plt>
    2071:	cmp    rbp,rbx
    2074:	ja     20e0 <do_recv+0xb0>
    2076:	mfence 
    2079:	mov    rax,QWORD PTR [r12+0x20]
    207e:	add    DWORD PTR [rax],ebp
    2080:	mfence 
    2083:	test   BYTE PTR [r12+0x1c],0x1
    2089:	mov    rax,QWORD PTR [r12+0x8]
    208e:	je     20b8 <do_recv+0x88>
    2090:	lea    rdx,[rax+0x17]
    2094:	movzx  eax,BYTE PTR [rdx]
    2097:	mov    esi,eax
    2099:	mov    ecx,eax
    209b:	and    esi,0xfffffffd
    209e:	lock cmpxchg BYTE PTR [rdx],sil
    20a3:	jne    2097 <do_recv+0x67>
    20a5:	and    ecx,0x2
    20a8:	jne    20c0 <do_recv+0x90>
    20aa:	mov    eax,ebp
    20ac:	pop    rbx
    20ad:	pop    rbp
    20ae:	pop    r12
    20b0:	ret    
    20b1:	nop    DWORD PTR [rax+0x0]
    20b8:	lea    rdx,[rax+0x16]
    20bc:	jmp    2094 <do_recv+0x64>
    20be:	xchg   ax,ax
    20c0:	mov    esi,DWORD PTR [r12+0x18]
    20c5:	mov    rdi,QWORD PTR [r12+0x10]
    20ca:	call   11d0 <xenevtchn_notify@plt>
    20cf:	test   eax,eax
    20d1:	je     20aa <do_recv+0x7a>
    20d3:	mov    eax,0xffffffff
    20d8:	jmp    20ac <do_recv+0x7c>
    20da:	nop    WORD PTR [rax+rax*1+0x0]
    20e0:	mov    rsi,QWORD PTR [r12+0x28]
    20e5:	mov    rdx,rbp
    20e8:	lea    rdi,[rax+rbx*1]
    20ec:	sub    rdx,rbx
    20ef:	call   12e0 <memcpy@plt>
    20f4:	jmp    2076 <do_recv+0x46>
    20f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000002100 <libxenvchan_data_ready>:
    2100:	xor    eax,eax
    2102:	test   BYTE PTR [rdi+0x1c],0x1
    2106:	sete   al
    2109:	add    rax,QWORD PTR [rdi+0x8]
    210d:	add    rax,0x16
    2111:	lock or BYTE PTR [rax],0x1
    2115:	mfence 
    2118:	mov    rdx,QWORD PTR [rdi+0x20]
    211c:	mov    eax,DWORD PTR [rdx+0x4]
    211f:	sub    eax,DWORD PTR [rdx]
    2121:	mfence 
    2124:	mov    ecx,DWORD PTR [rdi+0x30]
    2127:	mov    edx,0x1
    212c:	shl    edx,cl
    212e:	cmp    eax,edx
    2130:	mov    edx,0x0
    2135:	cmova  eax,edx
    2138:	ret    
    2139:	nop    DWORD PTR [rax+0x0]

0000000000002140 <libxenvchan_buffer_space>:
    2140:	xor    eax,eax
    2142:	test   BYTE PTR [rdi+0x1c],0x1
    2146:	sete   al
    2149:	add    rax,QWORD PTR [rdi+0x8]
    214d:	add    rax,0x16
    2151:	lock or BYTE PTR [rax],0x2
    2155:	mfence 
    2158:	mov    rsi,QWORD PTR [rdi+0x38]
    215c:	mov    ecx,DWORD PTR [rdi+0x48]
    215f:	mov    edx,0x1
    2164:	mov    eax,edx
    2166:	shl    eax,cl
    2168:	sub    eax,DWORD PTR [rsi+0x4]
    216b:	add    eax,DWORD PTR [rsi]
    216d:	mfence 
    2170:	mov    ecx,DWORD PTR [rdi+0x48]
    2173:	shl    edx,cl
    2175:	cmp    eax,edx
    2177:	mov    edx,0x0
    217c:	cmova  eax,edx
    217f:	ret    

0000000000002180 <libxenvchan_wait>:
    2180:	push   rbx
    2181:	mov    rbx,rdi
    2184:	mov    rdi,QWORD PTR [rdi+0x10]
    2188:	call   1270 <xenevtchn_pending@plt>
    218d:	test   eax,eax
    218f:	js     21a0 <libxenvchan_wait+0x20>
    2191:	mov    rdi,QWORD PTR [rbx+0x10]
    2195:	mov    esi,eax
    2197:	call   1260 <xenevtchn_unmask@plt>
    219c:	xor    eax,eax
    219e:	pop    rbx
    219f:	ret    
    21a0:	mov    eax,0xffffffff
    21a5:	pop    rbx
    21a6:	ret    
    21a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000021b0 <libxenvchan_is_open>:
    21b0:	movzx  edx,BYTE PTR [rdi+0x1c]
    21b4:	test   dl,0x1
    21b7:	je     21d0 <libxenvchan_is_open+0x20>
    21b9:	and    edx,0x2
    21bc:	mov    eax,0x1
    21c1:	jne    21d8 <libxenvchan_is_open+0x28>
    21c3:	mov    rax,QWORD PTR [rdi+0x8]
    21c7:	movzx  eax,BYTE PTR [rax+0x14]
    21cb:	ret    
    21cc:	nop    DWORD PTR [rax+0x0]
    21d0:	mov    rax,QWORD PTR [rdi+0x8]
    21d4:	movzx  eax,BYTE PTR [rax+0x15]
    21d8:	repz ret 
    21da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000021e0 <libxenvchan_send>:
    21e0:	push   r13
    21e2:	push   r12
    21e4:	mov    r13,rsi
    21e7:	push   rbp
    21e8:	push   rbx
    21e9:	mov    r12,rdx
    21ec:	mov    rbx,rdi
    21ef:	mov    ebp,0x1
    21f4:	sub    rsp,0x8
    21f8:	jmp    2257 <libxenvchan_send+0x77>
    21fa:	nop    WORD PTR [rax+rax*1+0x0]
    2200:	xor    eax,eax
    2202:	test   BYTE PTR [rbx+0x1c],0x1
    2206:	sete   al
    2209:	add    rax,QWORD PTR [rbx+0x8]
    220d:	add    rax,0x16
    2211:	lock or BYTE PTR [rax],0x2
    2215:	mfence 
    2218:	mov    rax,QWORD PTR [rbx+0x38]
    221c:	mov    ecx,DWORD PTR [rbx+0x48]
    221f:	mov    edx,ebp
    2221:	shl    edx,cl
    2223:	sub    edx,DWORD PTR [rax+0x4]
    2226:	add    edx,DWORD PTR [rax]
    2228:	mfence 
    222b:	mov    ecx,DWORD PTR [rbx+0x48]
    222e:	mov    eax,ebp
    2230:	shl    eax,cl
    2232:	movsxd rcx,edx
    2235:	cmp    edx,eax
    2237:	cmovbe rsi,rcx
    223b:	cmp    r12,rsi
    223e:	jbe    2294 <libxenvchan_send+0xb4>
    2240:	test   BYTE PTR [rbx+0x1c],0x4
    2244:	je     22c0 <libxenvchan_send+0xe0>
    2246:	cmp    rax,r12
    2249:	jb     22b0 <libxenvchan_send+0xd0>
    224b:	mov    rdi,rbx
    224e:	call   1310 <libxenvchan_wait@plt>
    2253:	test   eax,eax
    2255:	jne    22b0 <libxenvchan_send+0xd0>
    2257:	mov    rdi,rbx
    225a:	call   1360 <libxenvchan_is_open@plt>
    225f:	test   eax,eax
    2261:	je     22b0 <libxenvchan_send+0xd0>
    2263:	mov    rdx,QWORD PTR [rbx+0x38]
    2267:	mov    ecx,DWORD PTR [rbx+0x48]
    226a:	mov    eax,ebp
    226c:	shl    eax,cl
    226e:	sub    eax,DWORD PTR [rdx+0x4]
    2271:	add    eax,DWORD PTR [rdx]
    2273:	mfence 
    2276:	mov    ecx,DWORD PTR [rbx+0x48]
    2279:	mov    edi,ebp
    227b:	movsxd rdx,eax
    227e:	xor    esi,esi
    2280:	shl    edi,cl
    2282:	cmp    eax,edi
    2284:	mov    rax,rdx
    2287:	cmova  rax,rsi
    228b:	cmp    r12,rax
    228e:	ja     2200 <libxenvchan_send+0x20>
    2294:	add    rsp,0x8
    2298:	mov    rdx,r12
    229b:	mov    rsi,r13
    229e:	mov    rdi,rbx
    22a1:	pop    rbx
    22a2:	pop    rbp
    22a3:	pop    r12
    22a5:	pop    r13
    22a7:	jmp    1f50 <do_send>
    22ac:	nop    DWORD PTR [rax+0x0]
    22b0:	mov    eax,0xffffffff
    22b5:	pop    rdx
    22b6:	pop    rbx
    22b7:	pop    rbp
    22b8:	pop    r12
    22ba:	pop    r13
    22bc:	ret    
    22bd:	nop    DWORD PTR [rax]
    22c0:	xor    eax,eax
    22c2:	jmp    22b5 <libxenvchan_send+0xd5>
    22c4:	xchg   ax,ax
    22c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000022d0 <libxenvchan_write>:
    22d0:	push   r14
    22d2:	push   r13
    22d4:	mov    r14,rdi
    22d7:	push   r12
    22d9:	push   rbp
    22da:	mov    r13,rsi
    22dd:	push   rbx
    22de:	mov    rbp,rdx
    22e1:	call   1360 <libxenvchan_is_open@plt>
    22e6:	test   eax,eax
    22e8:	je     2408 <libxenvchan_write+0x138>
    22ee:	test   BYTE PTR [r14+0x1c],0x4
    22f3:	mov    rax,QWORD PTR [r14+0x38]
    22f7:	mov    ecx,DWORD PTR [r14+0x48]
    22fb:	mov    esi,DWORD PTR [rax]
    22fd:	mov    eax,DWORD PTR [rax+0x4]
    2300:	je     2420 <libxenvchan_write+0x150>
    2306:	xor    ebx,ebx
    2308:	mov    r12d,0x1
    230e:	jmp    23b2 <libxenvchan_write+0xe2>
    2313:	nop    DWORD PTR [rax+rax*1+0x0]
    2318:	test   rdi,rdi
    231b:	je     23e8 <libxenvchan_write+0x118>
    2321:	xor    eax,eax
    2323:	test   BYTE PTR [r14+0x1c],0x1
    2328:	sete   al
    232b:	add    rax,QWORD PTR [r14+0x8]
    232f:	add    rax,0x16
    2333:	lock or BYTE PTR [rax],0x2
    2337:	mfence 
    233a:	mov    rax,QWORD PTR [r14+0x38]
    233e:	mov    ecx,DWORD PTR [r14+0x48]
    2342:	mov    edx,r12d
    2345:	shl    edx,cl
    2347:	sub    edx,DWORD PTR [rax+0x4]
    234a:	add    edx,DWORD PTR [rax]
    234c:	mfence 
    234f:	mov    ecx,DWORD PTR [r14+0x48]
    2353:	mov    eax,r12d
    2356:	shl    eax,cl
    2358:	cmp    edx,eax
    235a:	ja     23e8 <libxenvchan_write+0x118>
    2360:	movsxd rax,edx
    2363:	add    rax,rbx
    2366:	cmp    rax,rbp
    2369:	jbe    236f <libxenvchan_write+0x9f>
    236b:	mov    edx,ebp
    236d:	sub    edx,ebx
    236f:	test   edx,edx
    2371:	je     2388 <libxenvchan_write+0xb8>
    2373:	lea    rsi,[r13+rbx*1+0x0]
    2378:	movsxd rdx,edx
    237b:	mov    rdi,r14
    237e:	call   1f50 <do_send>
    2383:	cdqe   
    2385:	add    rbx,rax
    2388:	cmp    rbx,rbp
    238b:	je     23f6 <libxenvchan_write+0x126>
    238d:	mov    rdi,r14
    2390:	call   1310 <libxenvchan_wait@plt>
    2395:	test   eax,eax
    2397:	jne    2408 <libxenvchan_write+0x138>
    2399:	mov    rdi,r14
    239c:	call   1360 <libxenvchan_is_open@plt>
    23a1:	test   eax,eax
    23a3:	je     2408 <libxenvchan_write+0x138>
    23a5:	mov    rax,QWORD PTR [r14+0x38]
    23a9:	mov    ecx,DWORD PTR [r14+0x48]
    23ad:	mov    esi,DWORD PTR [rax]
    23af:	mov    eax,DWORD PTR [rax+0x4]
    23b2:	mov    edx,r12d
    23b5:	mov    rdi,rbp
    23b8:	shl    edx,cl
    23ba:	sub    rdi,rbx
    23bd:	sub    edx,eax
    23bf:	add    edx,esi
    23c1:	mfence 
    23c4:	mov    ecx,DWORD PTR [r14+0x48]
    23c8:	mov    eax,r12d
    23cb:	shl    eax,cl
    23cd:	cmp    edx,eax
    23cf:	ja     2318 <libxenvchan_write+0x48>
    23d5:	movsxd rax,edx
    23d8:	cmp    rdi,rax
    23db:	ja     2321 <libxenvchan_write+0x51>
    23e1:	jmp    2363 <libxenvchan_write+0x93>
    23e3:	nop    DWORD PTR [rax+rax*1+0x0]
    23e8:	cmp    rbx,rbp
    23eb:	ja     236b <libxenvchan_write+0x9b>
    23f1:	cmp    rbx,rbp
    23f4:	jne    238d <libxenvchan_write+0xbd>
    23f6:	mov    eax,ebx
    23f8:	pop    rbx
    23f9:	pop    rbp
    23fa:	pop    r12
    23fc:	pop    r13
    23fe:	pop    r14
    2400:	ret    
    2401:	nop    DWORD PTR [rax+0x0]
    2408:	pop    rbx
    2409:	mov    eax,0xffffffff
    240e:	pop    rbp
    240f:	pop    r12
    2411:	pop    r13
    2413:	pop    r14
    2415:	ret    
    2416:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2420:	mov    edi,0x1
    2425:	mov    edx,edi
    2427:	shl    edx,cl
    2429:	sub    edx,eax
    242b:	add    edx,esi
    242d:	mfence 
    2430:	mov    ecx,DWORD PTR [r14+0x48]
    2434:	shl    edi,cl
    2436:	cmp    edi,edx
    2438:	jb     24a8 <libxenvchan_write+0x1d8>
    243a:	movsxd rdx,edx
    243d:	cmp    rbp,rdx
    2440:	jbe    2483 <libxenvchan_write+0x1b3>
    2442:	xor    eax,eax
    2444:	test   BYTE PTR [r14+0x1c],0x1
    2449:	sete   al
    244c:	add    rax,QWORD PTR [r14+0x8]
    2450:	add    rax,0x16
    2454:	lock or BYTE PTR [rax],0x2
    2458:	mfence 
    245b:	mov    rsi,QWORD PTR [r14+0x38]
    245f:	mov    ecx,DWORD PTR [r14+0x48]
    2463:	mov    edx,0x1
    2468:	mov    eax,edx
    246a:	shl    eax,cl
    246c:	sub    eax,DWORD PTR [rsi+0x4]
    246f:	add    eax,DWORD PTR [rsi]
    2471:	mfence 
    2474:	mov    ecx,DWORD PTR [r14+0x48]
    2478:	shl    edx,cl
    247a:	mov    ecx,edx
    247c:	movsxd rdx,eax
    247f:	cmp    eax,ecx
    2481:	ja     24ad <libxenvchan_write+0x1dd>
    2483:	cmp    rbp,rdx
    2486:	cmovbe rdx,rbp
    248a:	test   rdx,rdx
    248d:	je     24ad <libxenvchan_write+0x1dd>
    248f:	pop    rbx
    2490:	mov    rsi,r13
    2493:	mov    rdi,r14
    2496:	pop    rbp
    2497:	pop    r12
    2499:	pop    r13
    249b:	pop    r14
    249d:	jmp    1f50 <do_send>
    24a2:	nop    WORD PTR [rax+rax*1+0x0]
    24a8:	test   rbp,rbp
    24ab:	jne    2442 <libxenvchan_write+0x172>
    24ad:	pop    rbx
    24ae:	xor    eax,eax
    24b0:	pop    rbp
    24b1:	pop    r12
    24b3:	pop    r13
    24b5:	pop    r14
    24b7:	ret    
    24b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <libxenvchan_recv>:
    24c0:	push   r13
    24c2:	push   r12
    24c4:	mov    r13,rsi
    24c7:	push   rbp
    24c8:	push   rbx
    24c9:	mov    rbp,rdx
    24cc:	mov    rbx,rdi
    24cf:	mov    r12d,0x1
    24d5:	sub    rsp,0x8
    24d9:	jmp    2545 <libxenvchan_recv+0x85>
    24db:	nop    DWORD PTR [rax+rax*1+0x0]
    24e0:	xor    eax,eax
    24e2:	test   BYTE PTR [rbx+0x1c],0x1
    24e6:	sete   al
    24e9:	add    rax,QWORD PTR [rbx+0x8]
    24ed:	add    rax,0x16
    24f1:	lock or BYTE PTR [rax],0x1
    24f5:	mfence 
    24f8:	mov    rdx,QWORD PTR [rbx+0x20]
    24fc:	mov    eax,DWORD PTR [rdx+0x4]
    24ff:	sub    eax,DWORD PTR [rdx]
    2501:	mfence 
    2504:	mov    ecx,DWORD PTR [rbx+0x30]
    2507:	mov    edi,r12d
    250a:	movsxd rdx,eax
    250d:	shl    edi,cl
    250f:	cmp    eax,edi
    2511:	cmovbe rsi,rdx
    2515:	cmp    rbp,rsi
    2518:	jbe    2570 <libxenvchan_recv+0xb0>
    251a:	mov    rdi,rbx
    251d:	call   1360 <libxenvchan_is_open@plt>
    2522:	test   eax,eax
    2524:	je     2590 <libxenvchan_recv+0xd0>
    2526:	test   BYTE PTR [rbx+0x1c],0x4
    252a:	je     25a0 <libxenvchan_recv+0xe0>
    252c:	mov    ecx,DWORD PTR [rbx+0x30]
    252f:	mov    eax,r12d
    2532:	shl    eax,cl
    2534:	cmp    rax,rbp
    2537:	jb     2590 <libxenvchan_recv+0xd0>
    2539:	mov    rdi,rbx
    253c:	call   1310 <libxenvchan_wait@plt>
    2541:	test   eax,eax
    2543:	jne    2590 <libxenvchan_recv+0xd0>
    2545:	mov    rdx,QWORD PTR [rbx+0x20]
    2549:	mov    eax,DWORD PTR [rdx+0x4]
    254c:	sub    eax,DWORD PTR [rdx]
    254e:	mfence 
    2551:	mov    ecx,DWORD PTR [rbx+0x30]
    2554:	mov    edi,r12d
    2557:	movsxd rdx,eax
    255a:	xor    esi,esi
    255c:	shl    edi,cl
    255e:	cmp    eax,edi
    2560:	mov    rax,rdx
    2563:	cmova  rax,rsi
    2567:	cmp    rbp,rax
    256a:	ja     24e0 <libxenvchan_recv+0x20>
    2570:	add    rsp,0x8
    2574:	mov    rdx,rbp
    2577:	mov    rsi,r13
    257a:	mov    rdi,rbx
    257d:	pop    rbx
    257e:	pop    rbp
    257f:	pop    r12
    2581:	pop    r13
    2583:	jmp    2030 <do_recv>
    2588:	nop    DWORD PTR [rax+rax*1+0x0]
    2590:	mov    eax,0xffffffff
    2595:	pop    rdx
    2596:	pop    rbx
    2597:	pop    rbp
    2598:	pop    r12
    259a:	pop    r13
    259c:	ret    
    259d:	nop    DWORD PTR [rax]
    25a0:	xor    eax,eax
    25a2:	jmp    2595 <libxenvchan_recv+0xd5>
    25a4:	xchg   ax,ax
    25a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000025b0 <libxenvchan_read>:
    25b0:	push   r13
    25b2:	push   r12
    25b4:	mov    r13,rdi
    25b7:	push   rbp
    25b8:	push   rbx
    25b9:	mov    rbp,rsi
    25bc:	mov    rbx,rdx
    25bf:	mov    r12d,0x1
    25c5:	sub    rsp,0x8
    25c9:	nop    DWORD PTR [rax+0x0]
    25d0:	mov    rdx,QWORD PTR [r13+0x20]
    25d4:	mov    eax,DWORD PTR [rdx+0x4]
    25d7:	sub    eax,DWORD PTR [rdx]
    25d9:	mfence 
    25dc:	mov    ecx,DWORD PTR [r13+0x30]
    25e0:	mov    edx,r12d
    25e3:	shl    edx,cl
    25e5:	cmp    eax,edx
    25e7:	jbe    2680 <libxenvchan_read+0xd0>
    25ed:	test   rbx,rbx
    25f0:	je     2650 <libxenvchan_read+0xa0>
    25f2:	xor    eax,eax
    25f4:	test   BYTE PTR [r13+0x1c],0x1
    25f9:	sete   al
    25fc:	add    rax,QWORD PTR [r13+0x8]
    2600:	add    rax,0x16
    2604:	lock or BYTE PTR [rax],0x1
    2608:	mfence 
    260b:	mov    rdx,QWORD PTR [r13+0x20]
    260f:	mov    eax,DWORD PTR [rdx+0x4]
    2612:	sub    eax,DWORD PTR [rdx]
    2614:	mfence 
    2617:	mov    ecx,DWORD PTR [r13+0x30]
    261b:	mov    edx,r12d
    261e:	shl    edx,cl
    2620:	cmp    eax,edx
    2622:	ja     2650 <libxenvchan_read+0xa0>
    2624:	test   eax,eax
    2626:	je     2650 <libxenvchan_read+0xa0>
    2628:	cdqe   
    262a:	mov    rsi,rbp
    262d:	mov    rdi,r13
    2630:	cmp    rax,rbx
    2633:	cmovbe rbx,rax
    2637:	add    rsp,0x8
    263b:	mov    rdx,rbx
    263e:	pop    rbx
    263f:	pop    rbp
    2640:	pop    r12
    2642:	pop    r13
    2644:	jmp    2030 <do_recv>
    2649:	nop    DWORD PTR [rax+0x0]
    2650:	mov    rdi,r13
    2653:	call   1360 <libxenvchan_is_open@plt>
    2658:	test   eax,eax
    265a:	je     2673 <libxenvchan_read+0xc3>
    265c:	test   BYTE PTR [r13+0x1c],0x4
    2661:	je     2690 <libxenvchan_read+0xe0>
    2663:	mov    rdi,r13
    2666:	call   1310 <libxenvchan_wait@plt>
    266b:	test   eax,eax
    266d:	je     25d0 <libxenvchan_read+0x20>
    2673:	mov    eax,0xffffffff
    2678:	pop    rdx
    2679:	pop    rbx
    267a:	pop    rbp
    267b:	pop    r12
    267d:	pop    r13
    267f:	ret    
    2680:	movsxd rdx,eax
    2683:	cmp    rbx,rdx
    2686:	ja     25f2 <libxenvchan_read+0x42>
    268c:	jmp    2624 <libxenvchan_read+0x74>
    268e:	xchg   ax,ax
    2690:	xor    eax,eax
    2692:	jmp    2678 <libxenvchan_read+0xc8>
    2694:	xchg   ax,ax
    2696:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000026a0 <libxenvchan_fd_for_select>:
    26a0:	mov    rdi,QWORD PTR [rdi+0x10]
    26a4:	jmp    1340 <xenevtchn_fd@plt>
    26a9:	nop    DWORD PTR [rax+0x0]

00000000000026b0 <libxenvchan_close>:
    26b0:	test   rdi,rdi
    26b3:	je     27d0 <libxenvchan_close+0x120>
    26b9:	push   rbx
    26ba:	mov    ecx,DWORD PTR [rdi+0x30]
    26bd:	mov    rbx,rdi
    26c0:	cmp    ecx,0xb
    26c3:	jg     2790 <libxenvchan_close+0xe0>
    26c9:	mov    ecx,DWORD PTR [rbx+0x48]
    26cc:	cmp    ecx,0xb
    26cf:	jg     2760 <libxenvchan_close+0xb0>
    26d5:	mov    rax,QWORD PTR [rbx+0x8]
    26d9:	test   rax,rax
    26dc:	je     2780 <libxenvchan_close+0xd0>
    26e2:	test   BYTE PTR [rbx+0x1c],0x1
    26e6:	jne    2740 <libxenvchan_close+0x90>
    26e8:	mov    BYTE PTR [rax+0x14],0x0
    26ec:	mov    rsi,QWORD PTR [rbx+0x8]
    26f0:	mov    edx,0x1
    26f5:	mov    rdi,QWORD PTR [rbx]
    26f8:	call   12f0 <xengnttab_unmap@plt>
    26fd:	mov    rdi,QWORD PTR [rbx+0x10]
    2701:	test   rdi,rdi
    2704:	je     271e <libxenvchan_close+0x6e>
    2706:	cmp    QWORD PTR [rbx+0x8],0x0
    270b:	je     2719 <libxenvchan_close+0x69>
    270d:	mov    esi,DWORD PTR [rbx+0x18]
    2710:	call   11d0 <xenevtchn_notify@plt>
    2715:	mov    rdi,QWORD PTR [rbx+0x10]
    2719:	call   1330 <xenevtchn_close@plt>
    271e:	test   BYTE PTR [rbx+0x1c],0x1
    2722:	mov    rdi,QWORD PTR [rbx]
    2725:	je     27b8 <libxenvchan_close+0x108>
    272b:	test   rdi,rdi
    272e:	je     2735 <libxenvchan_close+0x85>
    2730:	call   1200 <xengntshr_close@plt>
    2735:	mov    rdi,rbx
    2738:	pop    rbx
    2739:	jmp    11b0 <free@plt>
    273e:	xchg   ax,ax
    2740:	mov    BYTE PTR [rax+0x15],0x0
    2744:	mov    rsi,QWORD PTR [rbx+0x8]
    2748:	mov    edx,0x1
    274d:	mov    rdi,QWORD PTR [rbx]
    2750:	call   13c0 <xengntshr_unshare@plt>
    2755:	jmp    26fd <libxenvchan_close+0x4d>
    2757:	nop    WORD PTR [rax+rax*1+0x0]
    2760:	mov    esi,0x1
    2765:	mov    rdi,QWORD PTR [rbx+0x40]
    2769:	shl    esi,cl
    276b:	movsxd rsi,esi
    276e:	call   1380 <munmap@plt>
    2773:	mov    rax,QWORD PTR [rbx+0x8]
    2777:	test   rax,rax
    277a:	jne    26e2 <libxenvchan_close+0x32>
    2780:	mov    rdi,QWORD PTR [rbx+0x10]
    2784:	test   rdi,rdi
    2787:	jne    2719 <libxenvchan_close+0x69>
    2789:	jmp    271e <libxenvchan_close+0x6e>
    278b:	nop    DWORD PTR [rax+rax*1+0x0]
    2790:	mov    esi,0x1
    2795:	mov    rdi,QWORD PTR [rdi+0x28]
    2799:	shl    esi,cl
    279b:	movsxd rsi,esi
    279e:	call   1380 <munmap@plt>
    27a3:	mov    ecx,DWORD PTR [rbx+0x48]
    27a6:	cmp    ecx,0xb
    27a9:	jle    26d5 <libxenvchan_close+0x25>
    27af:	jmp    2760 <libxenvchan_close+0xb0>
    27b1:	nop    DWORD PTR [rax+0x0]
    27b8:	test   rdi,rdi
    27bb:	je     2735 <libxenvchan_close+0x85>
    27c1:	call   1370 <xengnttab_close@plt>
    27c6:	mov    rdi,rbx
    27c9:	pop    rbx
    27ca:	jmp    11b0 <free@plt>
    27cf:	nop
    27d0:	repz ret 

Disassembly of section .fini:

00000000000027d4 <_fini>:
    27d4:	sub    rsp,0x8
    27d8:	add    rsp,0x8
    27dc:	ret    
