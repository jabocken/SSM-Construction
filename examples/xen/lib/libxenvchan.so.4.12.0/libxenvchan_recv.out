Number of assembly instructions     = 136
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 136
Number of edges: 144

24c0 (False): 0

2030: PUSH Reg R12 2
2032: PUSH Reg RBP 1
2033: MOV Reg R8, Reg RSI 3
2036: PUSH Reg RBX 1
2037: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RDI) (AddrImm 48))) 3
203a: MOV Reg EBX, Immediate 1 5
203f: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 32))) 4
2043: MOV Reg R12, Reg RDI 3
2046: MOV Reg RBP, Reg RDX 3
2049: SHL Reg EBX, Reg CL 2
204b: LEA Reg ESI, Address (AddrMinus (FromReg RBX) (AddrImm 1)) 3
204e: AND Reg ESI, Address (SizeDir 32 (FromReg RAX)) 2
2050: MOVSXD Reg RAX, Reg EDX 3
2053: SUB Reg EBX, Reg ESI 2
2055: MOVSXD Reg RBX, Reg EBX 3
2058: CMP Reg RBX, Reg RDX 3
205b: CMOVA Reg RBX, Reg RAX 4
205f: MOVSXD Reg RSI, Reg ESI 3
2062: ADD Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 40))) 4
2066: MOV Reg RDX, Reg RBX 3
2069: MOV Reg RDI, Reg R8 3
206c: CALL memcpy (external)
2071: CMP Reg RBP, Reg RBX 3
2074: JA 20e0 (resolved immediate)
  |
  `- 2076,20e0
2076: MFENCE  3
2079: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 32))) 5
207e: ADD Address (SizeDir 32 (FromReg RAX)), Reg EBP 2
2080: MFENCE  3
2083: TEST Address (SizeDir 8 (AddrPlus (FromReg R12) (AddrImm 28))), Immediate 1 6
2089: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
208e: JZ 20b8 (resolved immediate)
  |
  `- 2090,20b8
2090: LEA Reg RDX, Address (AddrPlus (FromReg RAX) (AddrImm 23)) 4
2094: MOVZX Reg EAX, Address (SizeDir 8 (FromReg RDX)) 3
2097: MOV Reg ESI, Reg EAX 2
2099: MOV Reg ECX, Reg EAX 2
209b: AND Reg ESI, Immediate 4294967293 3
209e: LOCK CMPXCHG Address (SizeDir 8 (FromReg RDX)), Reg SIL 5
20a3: JNZ 2097 (resolved immediate)
  |
  `- 2097,20a5
20a5: AND Reg ECX, Immediate 2 3
20a8: JNZ 20c0 (resolved immediate)
  |
  `- 20aa,20c0
20aa: MOV Reg EAX, Reg EBP 2
20ac: POP Reg RBX 1
20ad: POP Reg RBP 1
20ae: POP Reg R12 2
20b0: RET  1
  |
  `- 
20b8: LEA Reg RDX, Address (AddrPlus (FromReg RAX) (AddrImm 22)) 4
20bc: JMP 2094 (resolved immediate)
  |
  `- 2094
20c0: MOV Reg ESI, Address (SizeDir 32 (AddrPlus (FromReg R12) (AddrImm 24))) 5
20c5: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 16))) 5
20ca: CALL xenevtchn_notify (external)
20cf: TEST Reg EAX, Reg EAX 2
20d1: JZ 20aa (resolved immediate)
  |
  `- 20aa,20d3
20d3: MOV Reg EAX, Immediate 4294967295 5
20d8: JMP 20ac (resolved immediate)
  |
  `- 20ac
20e0: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 40))) 5
20e5: MOV Reg RDX, Reg RBP 3
20e8: LEA Reg RDI, Address (AddrPlus (FromReg RAX) (FromReg RBX)) 4
20ec: SUB Reg RDX, Reg RBX 3
20ef: CALL memcpy (external)
20f4: JMP 2076 (resolved immediate)
  |
  `- 2076
24c0: PUSH Reg R13 2
24c2: PUSH Reg R12 2
24c4: MOV Reg R13, Reg RSI 3
24c7: PUSH Reg RBP 1
24c8: PUSH Reg RBX 1
24c9: MOV Reg RBP, Reg RDX 3
24cc: MOV Reg RBX, Reg RDI 3
24cf: MOV Reg R12D, Immediate 1 6
24d5: SUB Reg RSP, Immediate 8 4
24d9: JMP 2545 (resolved immediate)
  |
  `- 2545
24e0: XOR Reg EAX, Reg EAX 2
24e2: TEST Address (SizeDir 8 (AddrPlus (FromReg RBX) (AddrImm 28))), Immediate 1 4
24e6: SETZ Reg AL 3
24e9: ADD Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 8))) 4
24ed: ADD Reg RAX, Immediate 22 4
24f1: LOCK OR Address (SizeDir 8 (FromReg RAX)), Immediate 1 4
24f5: MFENCE  3
24f8: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 32))) 4
24fc: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RDX) (AddrImm 4))) 3
24ff: SUB Reg EAX, Address (SizeDir 32 (FromReg RDX)) 2
2501: MFENCE  3
2504: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 48))) 3
2507: MOV Reg EDI, Reg R12D 3
250a: MOVSXD Reg RDX, Reg EAX 3
250d: SHL Reg EDI, Reg CL 2
250f: CMP Reg EAX, Reg EDI 2
2511: CMOVBE Reg RSI, Reg RDX 4
2515: CMP Reg RBP, Reg RSI 3
2518: JBE 2570 (resolved immediate)
  |
  `- 251a,2570
251a: MOV Reg RDI, Reg RBX 3
251d: CALL libxenvchan_is_open (external)
2522: TEST Reg EAX, Reg EAX 2
2524: JZ 2590 (resolved immediate)
  |
  `- 2526,2590
2526: TEST Address (SizeDir 8 (AddrPlus (FromReg RBX) (AddrImm 28))), Immediate 4 4
252a: JZ 25a0 (resolved immediate)
  |
  `- 252c,25a0
252c: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 48))) 3
252f: MOV Reg EAX, Reg R12D 3
2532: SHL Reg EAX, Reg CL 2
2534: CMP Reg RAX, Reg RBP 3
2537: JB 2590 (resolved immediate)
  |
  `- 2539,2590
2539: MOV Reg RDI, Reg RBX 3
253c: CALL libxenvchan_wait (external)
2541: TEST Reg EAX, Reg EAX 2
2543: JNZ 2590 (resolved immediate)
  |
  `- 2590
2545: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RBX) (AddrImm 32))) 4
2549: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RDX) (AddrImm 4))) 3
254c: SUB Reg EAX, Address (SizeDir 32 (FromReg RDX)) 2
254e: MFENCE  3
2551: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RBX) (AddrImm 48))) 3
2554: MOV Reg EDI, Reg R12D 3
2557: MOVSXD Reg RDX, Reg EAX 3
255a: XOR Reg ESI, Reg ESI 2
255c: SHL Reg EDI, Reg CL 2
255e: CMP Reg EAX, Reg EDI 2
2560: MOV Reg RAX, Reg RDX 3
2563: CMOVA Reg RAX, Reg RSI 4
2567: CMP Reg RBP, Reg RAX 3
256a: JA 24e0 (resolved immediate)
  |
  `- 24e0,2570
2570: ADD Reg RSP, Immediate 8 4
2574: MOV Reg RDX, Reg RBP 3
2577: MOV Reg RSI, Reg R13 3
257a: MOV Reg RDI, Reg RBX 3
257d: POP Reg RBX 1
257e: POP Reg RBP 1
257f: POP Reg R12 2
2581: POP Reg R13 2
2583: JMP 2030 (resolved immediate)
  |
  `- 2030
2590: MOV Reg EAX, Immediate 4294967295 5
2595: POP Reg RDX 1
2596: POP Reg RBX 1
2597: POP Reg RBP 1
2598: POP Reg R12 2
259a: POP Reg R13 2
259c: RET  1
  |
  `- 
25a0: XOR Reg EAX, Reg EAX 2
25a2: JMP 2595 (resolved immediate)
  |
  `- 2595
