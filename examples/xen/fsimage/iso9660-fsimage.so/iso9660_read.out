Number of assembly instructions     = 133
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 133
Number of edges: 137

9f0 (True): 10fb
1010 (False): 0

9f0: PUSH Reg R14 2
9f2: PUSH Reg R13 2
9f4: MOV Reg R14D, Reg ESI 3
9f7: PUSH Reg R12 2
9f9: PUSH Reg RBP 1
9fa: MOV Reg RBP, Reg RDI 3
9fd: PUSH Reg RBX 1
9fe: MOV Reg EDI, Immediate 512 5
a03: MOV Reg EBX, Reg EDX 2
a05: MOV Reg R13D, Reg ECX 3
a08: MOV Reg R12, Reg R8 3
a0b: CALL fsig_log2 (external)
a10: TEST Reg R14D, Reg R14D 3
a13: JS a80 (resolved immediate)
  |
  `- a15,a80
a15: TEST Reg R13D, Reg R13D 3
a18: JLE a70 (resolved immediate)
  |
  `- a1a,a70
a1a: MOV Reg ECX, Reg EAX 2
a1c: MOV Reg EAX, Reg R13D 3
a1f: MOV Reg EDX, Reg EBX 2
a21: SAR Reg EAX, Immediate 9 3
a24: ADD Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RIP) (AddrImm 2102938))) 6
a2a: SAR Reg EDX, Reg CL 2
a2c: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RIP) (AddrImm 2102870))) 6
a32: AND Reg EBX, Immediate 511 6
a38: LEA Reg ESI, Address (SizeDir 32 (AddrPlus (FromReg RDX) (AddrTimes (AddrImm 4) (FromReg R14)))) 4
a3c: MOV Reg EDX, Reg EBX 2
a3e: MOV Address (SizeDir 32 (AddrPlus (FromReg RIP) (AddrImm 2102912))), Reg EAX 6
a44: SAR Reg EAX, Immediate 11 3
a47: CMP Reg EAX, Reg ECX 2
a49: JLE a54 (resolved immediate)
  |
  `- a4b,a54
a4b: ADD Reg ECX, Immediate 2 3
a4e: MOV Address (SizeDir 32 (AddrPlus (FromReg RIP) (AddrImm 2102836))), Reg ECX 6
a54: POP Reg RBX 1
a55: MOV Reg R8, Reg R12 3
a58: MOV Reg ECX, Reg R13D 3
a5b: MOV Reg RDI, Reg RBP 3
a5e: POP Reg RBP 1
a5f: POP Reg R12 2
a61: POP Reg R13 2
a63: POP Reg R14 2
a65: JMP fsig_devread (jmp to external function)
  |
  `- 
a70: POP Reg RBX 1
a71: MOV Reg EAX, Immediate 1 5
a76: POP Reg RBP 1
a77: POP Reg R12 2
a79: POP Reg R13 2
a7b: POP Reg R14 2
a7d: RET  1
  |
  `- 
a80: MOV Reg RDI, Reg RBP 3
a83: CALL fsig_errnum (external)
a88: MOV Address (SizeDir 32 (FromReg RAX)), Immediate 1 6
a8e: XOR Reg EAX, Reg EAX 2
a90: POP Reg RBX 1
a91: POP Reg RBP 1
a92: POP Reg R12 2
a94: POP Reg R13 2
a96: POP Reg R14 2
a98: RET  1
  |
  `- 
1010: PUSH Reg R15 2
1012: PUSH Reg R14 2
1014: MOV Reg R14, Reg RSI 3
1017: PUSH Reg R13 2
1019: PUSH Reg R12 2
101b: MOV Reg R12, Reg RDI 3
101e: PUSH Reg RBP 1
101f: PUSH Reg RBX 1
1020: MOV Reg EBP, Reg EDX 2
1022: SUB Reg RSP, Immediate 24 4
1026: CALL fsig_file_buf (external)
102b: CMP Address (SizeDir 64 (AddrPlus (FromReg RAX) (AddrImm 8))), Immediate 0 5
1030: JNE 1050 (resolved immediate)
  |
  `- 1032,1050
1032: XOR Reg R15D, Reg R15D 3
1035: ADD Reg RSP, Immediate 24 4
1039: MOV Reg EAX, Reg R15D 3
103c: POP Reg RBX 1
103d: POP Reg RBP 1
103e: POP Reg R12 2
1040: POP Reg R13 2
1042: POP Reg R14 2
1044: POP Reg R15 2
1046: RET  1
  |
  `- 
1050: MOV Reg RDI, Reg R12 3
1053: CALL fsig_filepos (external)
1058: MOV Reg RDX, Address (SizeDir 64 (FromReg RAX)) 3
105b: MOV Reg RDI, Reg R12 3
105e: AND Reg EDX, Immediate 2047 6
1064: MOV Address (SizeDir 32 (FromReg RSP)), Reg EDX 3
1067: CALL fsig_filepos (external)
106c: MOV Reg R13, Address (SizeDir 64 (FromReg RAX)) 3
106f: SHR Reg R13, Immediate 11 4
1073: TEST Reg EBP, Reg EBP 2
1075: JLE 1032 (resolved immediate)
  |
  `- 1032,1077
1077: XOR Reg R15D, Reg R15D 3
107a: MOV Reg EDX, Address (SizeDir 32 (FromReg RSP)) 3
107d: JMP 10b4 (resolved immediate)
  |
  `- 10b4
1080: CALL fsig_disk_read_junk (external)
1085: SUB Reg EBP, Reg EBX 2
1087: MOVSXD Reg RDX, Reg EBX 3
108a: MOV Address (SizeDir 64 (FromReg RAX)), Immediate 0 7
1091: MOV Reg RDI, Reg R12 3
1094: ADD Reg R14, Reg RDX 3
1097: MOV Address (SizeDir 64 (FromReg RSP)), Reg RDX 4
109b: ADD Reg R15D, Reg EBX 3
109e: ADD Reg R13D, Immediate 1 4
10a2: CALL fsig_filepos (external)
10a7: MOV Reg RDX, Address (SizeDir 64 (FromReg RSP)) 4
10ab: ADD Address (SizeDir 64 (FromReg RAX)), Reg RDX 3
10ae: XOR Reg EDX, Reg EDX 2
10b0: TEST Reg EBP, Reg EBP 2
10b2: JLE 1035 (resolved immediate)
  |
  `- 1035,10b4
10b4: MOV Reg EBX, Immediate 2048 5
10b9: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))), Reg EDX 4
10bd: SUB Reg EBX, Reg EDX 2
10bf: CMP Reg EBX, Reg EBP 2
10c1: CMOVG Reg EBX, Reg EBP 3
10c4: CALL fsig_disk_read_junk (external)
10c9: MOV Address (SizeDir 64 (FromReg RSP)), Reg RAX 4
10cd: CALL fsig_disk_read_junk (external)
10d2: MOV Reg RCX, Address (SizeDir 64 (FromReg RSP)) 4
10d6: MOV Reg RDI, Reg R12 3
10d9: MOV Reg RCX, Address (SizeDir 64 (FromReg RCX)) 3
10dc: MOV Address (SizeDir 64 (FromReg RAX)), Reg RCX 3
10df: CALL fsig_file_buf (external)
10e4: MOV Reg ESI, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 8))) 3
10e7: MOV Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 4
10eb: MOV Reg R8, Reg R14 3
10ee: MOV Reg ECX, Reg EBX 2
10f0: MOV Reg RDI, Reg R12 3
10f3: ADD Reg ESI, Reg R13D 3
10f6: CALL iso9660_devread (internal)
  |
  `- 10fb,9f0
10fb: TEST Reg EAX, Reg EAX 2
10fd: JNE 1080 (resolved immediate)
  |
  `- 1080,10ff
10ff: JMP 1032 (resolved immediate)
  |
  `- 1032
