Number of assembly instructions     = 36
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 36
Number of edges: 35

b90 (False): 0

b90: PUSH Reg R14 2
b92: PUSH Reg R13 2
b94: MOV Reg R13D, Reg ESI 3
b97: PUSH Reg R12 2
b99: PUSH Reg RBP 1
b9a: MOV Reg R12, Reg RDX 3
b9d: PUSH Reg RBX 1
b9e: MOV Reg RBX, Reg RDI 3
ba1: MOV Reg R14D, Immediate 1 6
ba7: MOV Reg EBP, Reg R14D 3
baa: CALL fsig_file_buf (external)
baf: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24))) 3
bb2: MOV Reg RDI, Reg RBX 3
bb5: ADD Reg ECX, Immediate 10 3
bb8: SHL Reg EBP, Reg CL 2
bba: CALL fsig_file_buf (external)
bbf: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24))) 3
bc2: MOV Reg ESI, Reg R14D 3
bc5: MOV Reg R8, Reg R12 3
bc8: MOV Reg RDI, Reg RBX 3
bcb: POP Reg RBX 1
bcc: ADD Reg ECX, Immediate 10 3
bcf: SHL Reg ESI, Reg CL 2
bd1: MOV Reg ECX, Reg EBP 2
bd3: LEA Reg EAX, Address (SizeDir 32 (AddrPlus (FromReg RSI) (AddrImm 511))) 6
bd9: TEST Reg ESI, Reg ESI 2
bdb: POP Reg RBP 1
bdc: CMOVNS Reg EAX, Reg ESI 3
bdf: XOR Reg EDX, Reg EDX 2
be1: SAR Reg EAX, Immediate 9 3
be4: IMUL Reg EAX, Reg R13D 4
be8: POP Reg R12 2
bea: POP Reg R13 2
bec: POP Reg R14 2
bee: MOV Reg ESI, Reg EAX 2
bf0: JMP fsig_devread (jmp to external function)
  |
  `- 
