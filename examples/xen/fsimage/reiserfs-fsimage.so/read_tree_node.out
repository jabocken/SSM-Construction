Number of assembly instructions     = 264
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 264
Number of edges: 280

d20 (True): f1a, f97
d70 (True): 10b5
1030 (False): 0

d20: PUSH Reg R13 2
d22: PUSH Reg R12 2
d24: MOV Reg R13, Reg RCX 3
d27: PUSH Reg RBP 1
d28: PUSH Reg RBX 1
d29: MOV Reg RBP, Reg RDI 3
d2c: MOV Reg R12D, Reg EDX 3
d2f: MOV Reg EBX, Reg ESI 2
d31: SUB Reg RSP, Immediate 8 4
d35: CALL fsig_file_buf (external)
d3a: MOV Reg RDI, Reg RBP 3
d3d: ADD Reg EBX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24600))) 6
d43: CALL fsig_file_buf (external)
d48: MOVZX Reg ECX, Address (SizeDir 8 (AddrPlus (FromReg RAX) (AddrImm 24616))) 7
d4f: ADD Reg RSP, Immediate 8 4
d53: MOV Reg R8, Reg R13 3
d56: MOV Reg RDI, Reg RBP 3
d59: XOR Reg EDX, Reg EDX 2
d5b: MOV Reg ESI, Reg EBX 2
d5d: POP Reg RBX 1
d5e: SHL Reg ESI, Reg CL 2
d60: MOV Reg ECX, Reg R12D 3
d63: POP Reg RBP 1
d64: POP Reg R12 2
d66: POP Reg R13 2
d68: JMP fsig_devread (jmp to external function)
  |
  `- 
d70: PUSH Reg R15 2
d72: PUSH Reg R14 2
d74: PUSH Reg R13 2
d76: PUSH Reg R12 2
d78: MOV Reg R12D, Reg ESI 3
d7b: PUSH Reg RBP 1
d7c: PUSH Reg RBX 1
d7d: MOV Reg RBX, Reg RDI 3
d80: SUB Reg RSP, Immediate 8280 7
d87: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 32))), Reg EDX 4
d8b: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 36))), Reg ECX 4
d8f: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg R8 5
d94: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RDI 5
d99: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
da2: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8264))), Reg RAX 8
daa: XOR Reg EAX, Reg EAX 2
dac: CALL fsig_file_buf (external)
db1: MOV Reg RDI, Reg RBX 3
db4: MOVZX Reg EBP, Address (SizeDir 16 (AddrPlus (FromReg RAX) (AddrImm 24622))) 7
dbb: CALL fsig_file_buf (external)
dc0: MOV Reg RDI, Reg RBX 3
dc3: MOV Reg R13D, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24608))) 7
dca: CALL fsig_file_buf (external)
dcf: MOV Reg R15D, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24604))) 7
dd6: MOV Reg RDI, Reg RBX 3
dd9: LEA Reg EAX, Address (AddrMinus (FromReg R15) (AddrImm 1)) 4
ddd: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))), Reg EAX 4
de1: CALL fsig_file_buf (external)
de6: TEST Reg EBP, Reg EBP 2
de8: JZ 1022 (resolved immediate)
  |
  `- dee,1022
dee: LEA Reg RBX, Address (AddrPlus (FromReg RAX) (AddrImm 24680)) 7
df5: LEA Reg RAX, Address (AddrPlus (FromReg RSP) (AddrImm 4160)) 8
dfd: LEA Reg R14D, Address (AddrMinus (FromReg RBP) (AddrImm 1)) 4
e01: LEA Reg R15, Address (AddrPlus (FromReg RSP) (AddrImm 64)) 5
e06: MOV Reg R11D, Reg R12D 3
e09: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))), Reg RAX 5
e0e: NOP  2
e10: MOV Reg ECX, Address (SizeDir 32 (FromReg RBX)) 2
e12: CMP Reg ECX, Immediate 4294967295 3
e15: JZ f00 (resolved immediate)
  |
  `- e1b,f00
e1b: ADD Reg RBX, Immediate 4 4
e1f: MOV Reg R10D, Reg ECX 3
e22: XOR Reg EDX, Reg EDX 2
e24: JMP e3e (resolved immediate)
  |
  `- e3e
e30: ADD Reg RBX, Immediate 4 4
e34: CMP Address (SizeDir 32 (AddrMinus (FromReg RBX) (AddrImm 4))), Reg R12D 4
e38: JZ ec0 (resolved immediate)
  |
  `- e3e,ec0
e3e: ADD Reg EDX, Immediate 1 3
e41: LEA Reg EAX, Address (AddrMinus (FromReg RDX) (AddrImm 1)) 3
e44: CMP Reg ECX, Reg EAX 2
e46: JG e30 (resolved immediate)
  |
  `- e30,e48
e48: SUB Reg R14D, Immediate 1 4
e4c: LEA Reg R13D, Address (AddrPlus (AddrPlus (FromReg R10) (FromReg R13)) (AddrImm 2)) 5
e51: AND Reg R13D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
e56: CMP Reg R14D, Immediate 4294967295 4
e5a: JNZ e10 (resolved immediate)
  |
  `- e10,e5c
e5c: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
e61: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))), Reg R11D 5
e66: MOV Reg RDI, Reg RBX 3
e69: CALL fsig_file_buf (external)
e6e: MOV Reg R11D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
e73: MOVZX Reg ECX, Address (SizeDir 8 (AddrPlus (FromReg RAX) (AddrImm 24616))) 7
e7a: MOV Reg RDI, Reg RBX 3
e7d: MOV Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
e82: MOV Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 32))) 4
e86: MOV Reg ESI, Reg R11D 3
e89: SHL Reg ESI, Reg CL 2
e8b: MOV Reg ECX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 36))) 4
e8f: CALL fsig_devread (external)
e94: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8264))) 8
e9c: XOR Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
ea5: JNZ 102a (resolved immediate)
  |
  `- eab,102a
eab: ADD Reg RSP, Immediate 8280 7
eb2: POP Reg RBX 1
eb3: POP Reg RBP 1
eb4: POP Reg R12 2
eb6: POP Reg R13 2
eb8: POP Reg R14 2
eba: POP Reg R15 2
ebc: RET  1
  |
  `- 
ec0: SUB Reg ECX, Reg EDX 2
ec2: MOVSXD Reg RCX, Reg ECX 3
ec5: LEA Reg RBX, Address (AddrPlus (FromReg RBX) (AddrTimes (AddrImm 4) (FromReg RCX))) 4
ec9: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
ece: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))), Reg R10D 5
ed3: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg EDX 4
ed7: CALL fsig_file_buf (external)
edc: MOV Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))) 4
ee0: MOV Reg R10D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))) 5
ee5: ADD Reg EDX, Reg R13D 3
ee8: AND Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 4
eec: ADD Reg EDX, Address (SizeDir 32 (AddrPlus (FromReg RAX) (AddrImm 24600))) 6
ef2: MOV Reg R11D, Reg EDX 3
ef5: JMP e48 (resolved immediate)
  |
  `- e48
f00: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
f05: MOV Reg RCX, Reg R15 3
f08: MOV Reg EDX, Immediate 4096 5
f0d: MOV Reg ESI, Reg R13D 3
f10: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg R11D 5
f15: CALL journal_read (internal)
  |
  `- f1a,d20
f1a: TEST Reg EAX, Reg EAX 2
f1c: JZ 101b (resolved immediate)
  |
  `- f22,101b
f22: MOV Reg R8D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 68))) 5
f27: XOR Reg EBP, Reg EBP 2
f29: MOV Reg R11D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
f2e: MOV Reg R10D, Reg R8D 3
f31: JMP f49 (resolved immediate)
  |
  `- f49
f38: MOV Reg EAX, Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg R15) (AddrTimes (AddrImm 4) (FromReg RBP))) (AddrImm 12))) 5
f3d: LEA Reg EDX, Address (AddrPlus (FromReg RBP) (AddrImm 1)) 3
f40: ADD Reg RBP, Immediate 1 4
f44: CMP Reg EAX, Reg R12D 3
f47: JZ ec9 (resolved immediate)
  |
  `- ec9,f49
f49: CMP Reg R8D, Reg EBP 3
f4c: MOV Reg R9D, Reg EBP 3
f4f: JLE f59 (resolved immediate)
  |
  `- f51,f59
f51: CMP Reg EBP, Immediate 1017 6
f57: JLE f38 (resolved immediate)
  |
  `- f38,f59
f59: CMP Reg R8D, Immediate 1017 7
f60: JLE e48 (resolved immediate)
  |
  `- e48,f66
f66: LEA Reg ESI, Address (AddrPlus (AddrPlus (FromReg R8) (FromReg R13)) (AddrImm 1)) 5
f6b: AND Reg ESI, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 4
f6f: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
f74: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
f79: MOV Reg EDX, Immediate 4096 5
f7e: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 60))), Reg R11D 5
f83: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 56))), Reg R10D 5
f88: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))), Reg R9D 5
f8d: MOV Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))), Reg R8D 5
f92: CALL journal_read (internal)
f97: TEST Reg EAX, Reg EAX 2
f99: JZ 101b (resolved immediate)
f9f: MOV Reg R8D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
fa4: MOV Reg R9D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 20))) 5
fa9: MOV Reg R10D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 56))) 5
fae: MOV Reg R11D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 60))) 5
fb3: CMP Reg R9D, Reg R8D 3
fb6: JGE e48 (resolved immediate)
  |
  `- e48,fbc
fbc: LEA Reg EAX, Address (AddrMinus (FromReg R9) (AddrImm 1018)) 7
fc3: LEA Reg EDX, Address (AddrPlus (FromReg R9) (AddrImm 1)) 4
fc7: CDQE  2
fc9: CMP Reg R12D, Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RSP) (AddrTimes (AddrImm 4) (FromReg RAX))) (AddrImm 4168))) 8
fd1: JZ ec9 (resolved immediate)
  |
  `- ec9,fd7
fd7: LEA Reg EAX, Address (AddrMinus (FromReg RBP) (AddrImm 1017)) 6
fdd: LEA Reg ESI, Address (AddrPlus (FromReg R9) (AddrImm 2)) 4
fe1: LEA Reg ECX, Address (AddrMinus (FromReg R8) (AddrImm 1)) 4
fe5: LEA Reg EDX, Address (AddrPlus (FromReg RBP) (AddrImm 2)) 3
fe8: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
fed: CDQE  2
fef: MOVSXD Reg RSI, Reg ESI 3
ff2: SUB Reg ECX, Reg EBP 2
ff4: SUB Reg RAX, Reg RDX 3
ff7: ADD Reg RCX, Reg RSI 3
ffa: LEA Reg RAX, Address (AddrPlus (FromReg RDI) (AddrTimes (AddrImm 4) (FromReg RAX))) 4
ffe: JMP 1011 (resolved immediate)
  |
  `- 1011
1000: MOV Reg EDX, Reg ESI 2
1002: ADD Reg RSI, Immediate 1 4
1006: CMP Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RSI))) (AddrImm 4))), Reg R12D 5
100b: JZ ec9 (resolved immediate)
  |
  `- ec9,1011
1011: CMP Reg RSI, Reg RCX 3
1014: JNZ 1000 (resolved immediate)
  |
  `- 1000,1016
1016: JMP e48 (resolved immediate)
  |
  `- e48
101b: XOR Reg EAX, Reg EAX 2
101d: JMP e94 (resolved immediate)
  |
  `- e94
1022: MOV Reg R11D, Reg R12D 3
1025: JMP e5c (resolved immediate)
  |
  `- e5c
102a: CALL __stack_chk_fail (external)
  |
  `- 
1030: PUSH Reg R15 2
1032: PUSH Reg R14 2
1034: PUSH Reg R13 2
1036: PUSH Reg R12 2
1038: MOV Reg R13D, Reg EDX 3
103b: PUSH Reg RBP 1
103c: PUSH Reg RBX 1
103d: MOV Reg RBP, Reg RDI 3
1040: MOV Reg R12D, Reg ESI 3
1043: SUB Reg RSP, Immediate 8 4
1047: CALL fsig_file_buf (external)
104c: MOV Reg RDI, Reg RBP 3
104f: MOV Reg R14, Reg RAX 3
1052: CALL fsig_file_buf (external)
1057: MOV Reg RDI, Reg RBP 3
105a: MOVZX Reg R15D, Address (SizeDir 8 (AddrPlus (FromReg RAX) (AddrImm 24617))) 8
1062: CALL fsig_file_buf (external)
1067: MOVZX Reg EBX, Address (SizeDir 16 (AddrPlus (FromReg RAX) (AddrImm 24620))) 7
106e: CMP Reg R13D, Reg EBX 3
1071: JGE 10f0 (resolved immediate)
  |
  `- 1073,10f0
1073: MOV Reg ECX, Reg R15D 3
1076: MOV Reg EBX, Reg R13D 3
1079: MOV Reg RDI, Reg RBP 3
107c: SHL Reg EBX, Reg CL 2
107e: MOVSXD Reg RBX, Reg EBX 3
1081: CALL fsig_file_buf (external)
1086: MOVSXD Reg RDX, Reg R13D 3
1089: ADD Reg RBX, Reg R14 3
108c: CMP Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX))) (AddrImm 24624))), Reg R12D 8
1094: JZ 10d4 (resolved immediate)
  |
  `- 1096,10d4
1096: MOV Reg RDI, Reg RBP 3
1099: CALL fsig_file_buf (external)
109e: MOVZX Reg ECX, Address (SizeDir 16 (AddrPlus (FromReg RAX) (AddrImm 24618))) 7
10a5: XOR Reg EDX, Reg EDX 2
10a7: MOV Reg R8, Reg RBX 3
10aa: MOV Reg ESI, Reg R12D 3
10ad: MOV Reg RDI, Reg RBP 3
10b0: CALL block_read (internal)
  |
  `- d70
10b5: TEST Reg EAX, Reg EAX 2
10b7: JZ 1130 (resolved immediate)
  |
  `- 10b9,1130
10b9: MOVZX Reg EAX, Address (SizeDir 16 (FromReg RBX)) 3
10bc: MOV Reg RDI, Reg RBP 3
10bf: CMP Reg EAX, Reg R13D 3
10c2: JNZ 1118 (resolved immediate)
  |
  `- 10c4,1118
10c4: CALL fsig_file_buf (external)
10c9: MOVSXD Reg RDX, Reg R13D 3
10cc: MOV Address (SizeDir 32 (AddrPlus (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 4) (FromReg RDX))) (AddrImm 24624))), Reg R12D 8
10d4: ADD Reg RSP, Immediate 8 4
10d8: MOV Reg RAX, Reg RBX 3
10db: POP Reg RBX 1
10dc: POP Reg RBP 1
10dd: POP Reg R12 2
10df: POP Reg R13 2
10e1: POP Reg R14 2
10e3: POP Reg R15 2
10e5: RET  1
  |
  `- 
10f0: MOV Reg RDI, Reg RBP 3
10f3: CALL fsig_file_buf (external)
10f8: MOV Reg RDI, Reg RBP 3
10fb: MOV Reg R14, Reg RAX 3
10fe: CALL fsig_file_buf (external)
1103: MOVZX Reg ECX, Address (SizeDir 8 (AddrPlus (FromReg RAX) (AddrImm 24617))) 7
110a: SHL Reg EBX, Reg CL 2
110c: MOVSXD Reg RBX, Reg EBX 3
110f: ADD Reg RBX, Reg R14 3
1112: JMP 1096 (resolved immediate)
  |
  `- 1096
1118: CALL fsig_errnum (external)
111d: XOR Reg EBX, Reg EBX 2
111f: MOV Address (SizeDir 32 (FromReg RAX)), Immediate 1 6
1125: JMP 10d4 (resolved immediate)
  |
  `- 10d4
1130: XOR Reg EBX, Reg EBX 2
1132: JMP 10d4 (resolved immediate)
  |
  `- 10d4
