Number of assembly instructions     = 85
Number of indirect branches         = 1
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 90
Number of edges: 99

a40 (False): 0

910: PUSH Reg R13 2
912: PUSH Reg R12 2
914: XOR Reg EDX, Reg EDX 2
916: PUSH Reg RBP 1
917: PUSH Reg RBX 1
918: MOV Reg R12D, Reg EDI 3
91b: MOV Reg R13, Reg RSI 3
91e: XOR Reg EDI, Reg EDI 2
920: XOR Reg ESI, Reg ESI 2
922: SUB Reg RSP, Immediate 24 4
926: MOV Reg RBP, Reg RSP 3
929: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
932: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
937: XOR Reg EAX, Reg EAX 2
939: CALL xc_interface_open (external)
93e: MOV Reg RSI, Reg RBP 3
941: MOV Reg RDI, Reg RAX 3
944: MOV Reg RBX, Reg RAX 3
947: CALL xc_tbuf_get_size (external)
94c: TEST Reg EAX, Reg EAX 2
94e: JZ 9f4 (resolved immediate)
  |
  `- 954,9f4
954: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 637)) 7
95b: CALL perror (external)
960: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 681)) 7
967: CALL puts (external)
96c: CMP Reg R12D, Immediate 1 4
970: JLE a1e (resolved immediate)
  |
  `- 976,a1e
976: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R13) (AddrImm 8))) 4
97a: XOR Reg ESI, Reg ESI 2
97c: MOV Reg EDX, Immediate 10 5
981: CALL strtol (external)
986: MOV Reg RDI, Reg RBX 3
989: MOV Reg RSI, Reg RAX 3
98c: MOV Address (SizeDir 64 (FromReg RSP)), Reg RAX 4
990: CALL xc_tbuf_set_size (external)
995: TEST Reg EAX, Reg EAX 2
997: JNZ a2a (resolved immediate)
  |
  `- 99d,a2a
99d: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 801)) 7
9a4: CALL puts (external)
9a9: MOV Reg RSI, Reg RBP 3
9ac: MOV Reg RDI, Reg RBX 3
9af: CALL xc_tbuf_get_size (external)
9b4: TEST Reg EAX, Reg EAX 2
9b6: JNZ a10 (resolved immediate)
9b8: MOV Reg RDX, Address (SizeDir 64 (FromReg RSP)) 4
9bc: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 790)) 7
9c3: MOV Reg EDI, Immediate 1 5
9c8: XOR Reg EAX, Reg EAX 2
9ca: CALL __printf_chk (external)
9cf: MOV Reg RDI, Reg RBX 3
9d2: CALL xc_interface_close (external)
9d7: XOR Reg EAX, Reg EAX 2
9d9: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
9de: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
9e7: JNZ a25 (resolved immediate)
  |
  `- 9e9,a25
9e9: ADD Reg RSP, Immediate 24 4
9ed: POP Reg RBX 1
9ee: POP Reg RBP 1
9ef: POP Reg R12 2
9f1: POP Reg R13 2
9f3: RET  1
  |
  `- 
9f4: MOV Reg RDX, Address (SizeDir 64 (FromReg RSP)) 4
9f8: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 657)) 7
9ff: MOV Reg EDI, Immediate 1 5
a04: XOR Reg EAX, Reg EAX 2
a06: CALL __printf_chk (external)
a0b: JMP 96c (resolved immediate)
  |
  `- 96c
a1e: XOR Reg EDI, Reg EDI 2
a20: CALL exit (external)
  |
  `- 
a25: CALL __stack_chk_fail (external)
  |
  `- 
a2a: LEA Reg RDI, Address (AddrPlus (FromReg RIP) (AddrImm 633)) 7
a31: CALL perror (external)
a36: MOV Reg EDI, Immediate 1 5
a3b: CALL exit (external)
  |
  `- 
a40: XOR Reg EBP, Reg EBP 2
a42: MOV Reg R9, Reg RDX 3
a45: POP Reg RSI 1
a46: MOV Reg RDX, Reg RSP 3
a49: AND Reg RSP, Immediate 18446744073709551600 4
a4d: PUSH Reg RAX 1
a4e: PUSH Reg RSP 1
a4f: LEA Reg R8, Address (AddrPlus (FromReg RIP) (AddrImm 362)) 7
a56: LEA Reg RCX, Address (AddrPlus (FromReg RIP) (AddrImm 243)) 7
a5d: LEA Reg RDI, Address (AddrMinus (FromReg RIP) (AddrImm 340)) 7
a64: CALL __libc_start_main (external)
  |
  `- 910
