
xenstored:     file format elf64-x86-64


Disassembly of section .init:

00000000000026a8 <_init>:
    26a8:	sub    rsp,0x8
    26ac:	mov    rax,QWORD PTR [rip+0x213935]        # 215fe8 <__gmon_start__>
    26b3:	test   rax,rax
    26b6:	je     26ba <_init+0x12>
    26b8:	call   rax
    26ba:	add    rsp,0x8
    26be:	ret    

Disassembly of section .plt:

00000000000026c0 <.plt>:
    26c0:	push   QWORD PTR [rip+0x213622]        # 215ce8 <_GLOBAL_OFFSET_TABLE_+0x8>
    26c6:	jmp    QWORD PTR [rip+0x213624]        # 215cf0 <_GLOBAL_OFFSET_TABLE_+0x10>
    26cc:	nop    DWORD PTR [rax+0x0]

00000000000026d0 <getenv@plt>:
    26d0:	jmp    QWORD PTR [rip+0x213622]        # 215cf8 <getenv@GLIBC_2.2.5>
    26d6:	push   0x0
    26db:	jmp    26c0 <.plt>

00000000000026e0 <xenevtchn_open@plt>:
    26e0:	jmp    QWORD PTR [rip+0x21361a]        # 215d00 <xenevtchn_open@VERS_1.0>
    26e6:	push   0x1
    26eb:	jmp    26c0 <.plt>

00000000000026f0 <__snprintf_chk@plt>:
    26f0:	jmp    QWORD PTR [rip+0x213612]        # 215d08 <__snprintf_chk@GLIBC_2.3.4>
    26f6:	push   0x2
    26fb:	jmp    26c0 <.plt>

0000000000002700 <free@plt>:
    2700:	jmp    QWORD PTR [rip+0x21360a]        # 215d10 <free@GLIBC_2.2.5>
    2706:	push   0x3
    270b:	jmp    26c0 <.plt>

0000000000002710 <localtime@plt>:
    2710:	jmp    QWORD PTR [rip+0x213602]        # 215d18 <localtime@GLIBC_2.2.5>
    2716:	push   0x4
    271b:	jmp    26c0 <.plt>

0000000000002720 <__vfprintf_chk@plt>:
    2720:	jmp    QWORD PTR [rip+0x2135fa]        # 215d20 <__vfprintf_chk@GLIBC_2.3.4>
    2726:	push   0x5
    272b:	jmp    26c0 <.plt>

0000000000002730 <xenevtchn_notify@plt>:
    2730:	jmp    QWORD PTR [rip+0x2135f2]        # 215d28 <xenevtchn_notify@VERS_1.0>
    2736:	push   0x6
    273b:	jmp    26c0 <.plt>

0000000000002740 <abort@plt>:
    2740:	jmp    QWORD PTR [rip+0x2135ea]        # 215d30 <abort@GLIBC_2.2.5>
    2746:	push   0x7
    274b:	jmp    26c0 <.plt>

0000000000002750 <__errno_location@plt>:
    2750:	jmp    QWORD PTR [rip+0x2135e2]        # 215d38 <__errno_location@GLIBC_2.2.5>
    2756:	push   0x8
    275b:	jmp    26c0 <.plt>

0000000000002760 <unlink@plt>:
    2760:	jmp    QWORD PTR [rip+0x2135da]        # 215d40 <unlink@GLIBC_2.2.5>
    2766:	push   0x9
    276b:	jmp    26c0 <.plt>

0000000000002770 <strncmp@plt>:
    2770:	jmp    QWORD PTR [rip+0x2135d2]        # 215d48 <strncmp@GLIBC_2.2.5>
    2776:	push   0xa
    277b:	jmp    26c0 <.plt>

0000000000002780 <strcpy@plt>:
    2780:	jmp    QWORD PTR [rip+0x2135ca]        # 215d50 <strcpy@GLIBC_2.2.5>
    2786:	push   0xb
    278b:	jmp    26c0 <.plt>

0000000000002790 <mkdir@plt>:
    2790:	jmp    QWORD PTR [rip+0x2135c2]        # 215d58 <mkdir@GLIBC_2.2.5>
    2796:	push   0xc
    279b:	jmp    26c0 <.plt>

00000000000027a0 <fcntl@plt>:
    27a0:	jmp    QWORD PTR [rip+0x2135ba]        # 215d60 <fcntl@GLIBC_2.2.5>
    27a6:	push   0xd
    27ab:	jmp    26c0 <.plt>

00000000000027b0 <write@plt>:
    27b0:	jmp    QWORD PTR [rip+0x2135b2]        # 215d68 <write@GLIBC_2.2.5>
    27b6:	push   0xe
    27bb:	jmp    26c0 <.plt>

00000000000027c0 <getpid@plt>:
    27c0:	jmp    QWORD PTR [rip+0x2135aa]        # 215d70 <getpid@GLIBC_2.2.5>
    27c6:	push   0xf
    27cb:	jmp    26c0 <.plt>

00000000000027d0 <xc_interface_open@plt>:
    27d0:	jmp    QWORD PTR [rip+0x2135a2]        # 215d78 <xc_interface_open>
    27d6:	push   0x10
    27db:	jmp    26c0 <.plt>

00000000000027e0 <fclose@plt>:
    27e0:	jmp    QWORD PTR [rip+0x21359a]        # 215d80 <fclose@GLIBC_2.2.5>
    27e6:	push   0x11
    27eb:	jmp    26c0 <.plt>

00000000000027f0 <xc_domain_getinfo@plt>:
    27f0:	jmp    QWORD PTR [rip+0x213592]        # 215d88 <xc_domain_getinfo>
    27f6:	push   0x12
    27fb:	jmp    26c0 <.plt>

0000000000002800 <strlen@plt>:
    2800:	jmp    QWORD PTR [rip+0x21358a]        # 215d90 <strlen@GLIBC_2.2.5>
    2806:	push   0x13
    280b:	jmp    26c0 <.plt>

0000000000002810 <chdir@plt>:
    2810:	jmp    QWORD PTR [rip+0x213582]        # 215d98 <chdir@GLIBC_2.2.5>
    2816:	push   0x14
    281b:	jmp    26c0 <.plt>

0000000000002820 <__stack_chk_fail@plt>:
    2820:	jmp    QWORD PTR [rip+0x21357a]        # 215da0 <__stack_chk_fail@GLIBC_2.4>
    2826:	push   0x15
    282b:	jmp    26c0 <.plt>

0000000000002830 <xenevtchn_bind_interdomain@plt>:
    2830:	jmp    QWORD PTR [rip+0x213572]        # 215da8 <xenevtchn_bind_interdomain@VERS_1.0>
    2836:	push   0x16
    283b:	jmp    26c0 <.plt>

0000000000002840 <mmap@plt>:
    2840:	jmp    QWORD PTR [rip+0x21356a]        # 215db0 <mmap@GLIBC_2.2.5>
    2846:	push   0x17
    284b:	jmp    26c0 <.plt>

0000000000002850 <getopt_long@plt>:
    2850:	jmp    QWORD PTR [rip+0x213562]        # 215db8 <getopt_long@GLIBC_2.2.5>
    2856:	push   0x18
    285b:	jmp    26c0 <.plt>

0000000000002860 <dup2@plt>:
    2860:	jmp    QWORD PTR [rip+0x21355a]        # 215dc0 <dup2@GLIBC_2.2.5>
    2866:	push   0x19
    286b:	jmp    26c0 <.plt>

0000000000002870 <strchr@plt>:
    2870:	jmp    QWORD PTR [rip+0x213552]        # 215dc8 <strchr@GLIBC_2.2.5>
    2876:	push   0x1a
    287b:	jmp    26c0 <.plt>

0000000000002880 <xenevtchn_unmask@plt>:
    2880:	jmp    QWORD PTR [rip+0x21354a]        # 215dd0 <xenevtchn_unmask@VERS_1.0>
    2886:	push   0x1b
    288b:	jmp    26c0 <.plt>

0000000000002890 <strrchr@plt>:
    2890:	jmp    QWORD PTR [rip+0x213542]        # 215dd8 <strrchr@GLIBC_2.2.5>
    2896:	push   0x1c
    289b:	jmp    26c0 <.plt>

00000000000028a0 <ftruncate@plt>:
    28a0:	jmp    QWORD PTR [rip+0x21353a]        # 215de0 <ftruncate@GLIBC_2.2.5>
    28a6:	push   0x1d
    28ab:	jmp    26c0 <.plt>

00000000000028b0 <dup@plt>:
    28b0:	jmp    QWORD PTR [rip+0x213532]        # 215de8 <dup@GLIBC_2.2.5>
    28b6:	push   0x1e
    28bb:	jmp    26c0 <.plt>

00000000000028c0 <lseek@plt>:
    28c0:	jmp    QWORD PTR [rip+0x21352a]        # 215df0 <lseek@GLIBC_2.2.5>
    28c6:	push   0x1f
    28cb:	jmp    26c0 <.plt>

00000000000028d0 <__assert_fail@plt>:
    28d0:	jmp    QWORD PTR [rip+0x213522]        # 215df8 <__assert_fail@GLIBC_2.2.5>
    28d6:	push   0x20
    28db:	jmp    26c0 <.plt>

00000000000028e0 <xenevtchn_pending@plt>:
    28e0:	jmp    QWORD PTR [rip+0x21351a]        # 215e00 <xenevtchn_pending@VERS_1.0>
    28e6:	push   0x21
    28eb:	jmp    26c0 <.plt>

00000000000028f0 <xc_interface_close@plt>:
    28f0:	jmp    QWORD PTR [rip+0x213512]        # 215e08 <xc_interface_close>
    28f6:	push   0x22
    28fb:	jmp    26c0 <.plt>

0000000000002900 <xengnttab_open@plt>:
    2900:	jmp    QWORD PTR [rip+0x21350a]        # 215e10 <xengnttab_open@VERS_1.0>
    2906:	push   0x23
    290b:	jmp    26c0 <.plt>

0000000000002910 <lockf@plt>:
    2910:	jmp    QWORD PTR [rip+0x213502]        # 215e18 <lockf@GLIBC_2.2.5>
    2916:	push   0x24
    291b:	jmp    26c0 <.plt>

0000000000002920 <memset@plt>:
    2920:	jmp    QWORD PTR [rip+0x2134fa]        # 215e20 <memset@GLIBC_2.2.5>
    2926:	push   0x25
    292b:	jmp    26c0 <.plt>

0000000000002930 <close@plt>:
    2930:	jmp    QWORD PTR [rip+0x2134f2]        # 215e28 <close@GLIBC_2.2.5>
    2936:	push   0x26
    293b:	jmp    26c0 <.plt>

0000000000002940 <pipe@plt>:
    2940:	jmp    QWORD PTR [rip+0x2134ea]        # 215e30 <pipe@GLIBC_2.2.5>
    2946:	push   0x27
    294b:	jmp    26c0 <.plt>

0000000000002950 <setsid@plt>:
    2950:	jmp    QWORD PTR [rip+0x2134e2]        # 215e38 <setsid@GLIBC_2.2.5>
    2956:	push   0x28
    295b:	jmp    26c0 <.plt>

0000000000002960 <strspn@plt>:
    2960:	jmp    QWORD PTR [rip+0x2134da]        # 215e40 <strspn@GLIBC_2.2.5>
    2966:	push   0x29
    296b:	jmp    26c0 <.plt>

0000000000002970 <memchr@plt>:
    2970:	jmp    QWORD PTR [rip+0x2134d2]        # 215e48 <memchr@GLIBC_2.2.5>
    2976:	push   0x2a
    297b:	jmp    26c0 <.plt>

0000000000002980 <read@plt>:
    2980:	jmp    QWORD PTR [rip+0x2134ca]        # 215e50 <read@GLIBC_2.2.5>
    2986:	push   0x2b
    298b:	jmp    26c0 <.plt>

0000000000002990 <memcmp@plt>:
    2990:	jmp    QWORD PTR [rip+0x2134c2]        # 215e58 <memcmp@GLIBC_2.2.5>
    2996:	push   0x2c
    299b:	jmp    26c0 <.plt>

00000000000029a0 <calloc@plt>:
    29a0:	jmp    QWORD PTR [rip+0x2134ba]        # 215e60 <calloc@GLIBC_2.2.5>
    29a6:	push   0x2d
    29ab:	jmp    26c0 <.plt>

00000000000029b0 <xenevtchn_unbind@plt>:
    29b0:	jmp    QWORD PTR [rip+0x2134b2]        # 215e68 <xenevtchn_unbind@VERS_1.0>
    29b6:	push   0x2e
    29bb:	jmp    26c0 <.plt>

00000000000029c0 <strcmp@plt>:
    29c0:	jmp    QWORD PTR [rip+0x2134aa]        # 215e70 <strcmp@GLIBC_2.2.5>
    29c6:	push   0x2f
    29cb:	jmp    26c0 <.plt>

00000000000029d0 <xenevtchn_bind_virq@plt>:
    29d0:	jmp    QWORD PTR [rip+0x2134a2]        # 215e78 <xenevtchn_bind_virq@VERS_1.0>
    29d6:	push   0x30
    29db:	jmp    26c0 <.plt>

00000000000029e0 <signal@plt>:
    29e0:	jmp    QWORD PTR [rip+0x21349a]        # 215e80 <signal@GLIBC_2.2.5>
    29e6:	push   0x31
    29eb:	jmp    26c0 <.plt>

00000000000029f0 <__memcpy_chk@plt>:
    29f0:	jmp    QWORD PTR [rip+0x213492]        # 215e88 <__memcpy_chk@GLIBC_2.3.4>
    29f6:	push   0x32
    29fb:	jmp    26c0 <.plt>

0000000000002a00 <umask@plt>:
    2a00:	jmp    QWORD PTR [rip+0x21348a]        # 215e90 <umask@GLIBC_2.2.5>
    2a06:	push   0x33
    2a0b:	jmp    26c0 <.plt>

0000000000002a10 <strtol@plt>:
    2a10:	jmp    QWORD PTR [rip+0x213482]        # 215e98 <strtol@GLIBC_2.2.5>
    2a16:	push   0x34
    2a1b:	jmp    26c0 <.plt>

0000000000002a20 <memcpy@plt>:
    2a20:	jmp    QWORD PTR [rip+0x21347a]        # 215ea0 <memcpy@GLIBC_2.14>
    2a26:	push   0x35
    2a2b:	jmp    26c0 <.plt>

0000000000002a30 <time@plt>:
    2a30:	jmp    QWORD PTR [rip+0x213472]        # 215ea8 <time@GLIBC_2.2.5>
    2a36:	push   0x36
    2a3b:	jmp    26c0 <.plt>

0000000000002a40 <xengnttab_unmap@plt>:
    2a40:	jmp    QWORD PTR [rip+0x21346a]        # 215eb0 <xengnttab_unmap@VERS_1.0>
    2a46:	push   0x37
    2a4b:	jmp    26c0 <.plt>

0000000000002a50 <malloc@plt>:
    2a50:	jmp    QWORD PTR [rip+0x213462]        # 215eb8 <malloc@GLIBC_2.2.5>
    2a56:	push   0x38
    2a5b:	jmp    26c0 <.plt>

0000000000002a60 <fflush@plt>:
    2a60:	jmp    QWORD PTR [rip+0x21345a]        # 215ec0 <fflush@GLIBC_2.2.5>
    2a66:	push   0x39
    2a6b:	jmp    26c0 <.plt>

0000000000002a70 <__vasprintf_chk@plt>:
    2a70:	jmp    QWORD PTR [rip+0x213452]        # 215ec8 <__vasprintf_chk@GLIBC_2.8>
    2a76:	push   0x3a
    2a7b:	jmp    26c0 <.plt>

0000000000002a80 <__fxstat@plt>:
    2a80:	jmp    QWORD PTR [rip+0x21344a]        # 215ed0 <__fxstat@GLIBC_2.2.5>
    2a86:	push   0x3b
    2a8b:	jmp    26c0 <.plt>

0000000000002a90 <listen@plt>:
    2a90:	jmp    QWORD PTR [rip+0x213442]        # 215ed8 <listen@GLIBC_2.2.5>
    2a96:	push   0x3c
    2a9b:	jmp    26c0 <.plt>

0000000000002aa0 <clock_gettime@plt>:
    2aa0:	jmp    QWORD PTR [rip+0x21343a]        # 215ee0 <clock_gettime@GLIBC_2.2.5>
    2aa6:	push   0x3d
    2aab:	jmp    26c0 <.plt>

0000000000002ab0 <xenevtchn_fd@plt>:
    2ab0:	jmp    QWORD PTR [rip+0x213432]        # 215ee8 <xenevtchn_fd@VERS_1.0>
    2ab6:	push   0x3e
    2abb:	jmp    26c0 <.plt>

0000000000002ac0 <__vsnprintf_chk@plt>:
    2ac0:	jmp    QWORD PTR [rip+0x21342a]        # 215ef0 <__vsnprintf_chk@GLIBC_2.3.4>
    2ac6:	push   0x3f
    2acb:	jmp    26c0 <.plt>

0000000000002ad0 <realloc@plt>:
    2ad0:	jmp    QWORD PTR [rip+0x213422]        # 215ef8 <realloc@GLIBC_2.2.5>
    2ad6:	push   0x40
    2adb:	jmp    26c0 <.plt>

0000000000002ae0 <xengnttab_close@plt>:
    2ae0:	jmp    QWORD PTR [rip+0x21341a]        # 215f00 <xengnttab_close@VERS_1.0>
    2ae6:	push   0x41
    2aeb:	jmp    26c0 <.plt>

0000000000002af0 <fdopen@plt>:
    2af0:	jmp    QWORD PTR [rip+0x213412]        # 215f08 <fdopen@GLIBC_2.2.5>
    2af6:	push   0x42
    2afb:	jmp    26c0 <.plt>

0000000000002b00 <munmap@plt>:
    2b00:	jmp    QWORD PTR [rip+0x21340a]        # 215f10 <munmap@GLIBC_2.2.5>
    2b06:	push   0x43
    2b0b:	jmp    26c0 <.plt>

0000000000002b10 <__printf_chk@plt>:
    2b10:	jmp    QWORD PTR [rip+0x213402]        # 215f18 <__printf_chk@GLIBC_2.3.4>
    2b16:	push   0x44
    2b1b:	jmp    26c0 <.plt>

0000000000002b20 <poll@plt>:
    2b20:	jmp    QWORD PTR [rip+0x2133fa]        # 215f20 <poll@GLIBC_2.2.5>
    2b26:	push   0x45
    2b2b:	jmp    26c0 <.plt>

0000000000002b30 <chmod@plt>:
    2b30:	jmp    QWORD PTR [rip+0x2133f2]        # 215f28 <chmod@GLIBC_2.2.5>
    2b36:	push   0x46
    2b3b:	jmp    26c0 <.plt>

0000000000002b40 <bind@plt>:
    2b40:	jmp    QWORD PTR [rip+0x2133ea]        # 215f30 <bind@GLIBC_2.2.5>
    2b46:	push   0x47
    2b4b:	jmp    26c0 <.plt>

0000000000002b50 <memmove@plt>:
    2b50:	jmp    QWORD PTR [rip+0x2133e2]        # 215f38 <memmove@GLIBC_2.2.5>
    2b56:	push   0x48
    2b5b:	jmp    26c0 <.plt>

0000000000002b60 <__syslog_chk@plt>:
    2b60:	jmp    QWORD PTR [rip+0x2133da]        # 215f40 <__syslog_chk@GLIBC_2.4>
    2b66:	push   0x49
    2b6b:	jmp    26c0 <.plt>

0000000000002b70 <open@plt>:
    2b70:	jmp    QWORD PTR [rip+0x2133d2]        # 215f48 <open@GLIBC_2.2.5>
    2b76:	push   0x4a
    2b7b:	jmp    26c0 <.plt>

0000000000002b80 <access@plt>:
    2b80:	jmp    QWORD PTR [rip+0x2133ca]        # 215f50 <access@GLIBC_2.2.5>
    2b86:	push   0x4b
    2b8b:	jmp    26c0 <.plt>

0000000000002b90 <fopen@plt>:
    2b90:	jmp    QWORD PTR [rip+0x2133c2]        # 215f58 <fopen@GLIBC_2.2.5>
    2b96:	push   0x4c
    2b9b:	jmp    26c0 <.plt>

0000000000002ba0 <perror@plt>:
    2ba0:	jmp    QWORD PTR [rip+0x2133ba]        # 215f60 <perror@GLIBC_2.2.5>
    2ba6:	push   0x4d
    2bab:	jmp    26c0 <.plt>

0000000000002bb0 <accept@plt>:
    2bb0:	jmp    QWORD PTR [rip+0x2133b2]        # 215f68 <accept@GLIBC_2.2.5>
    2bb6:	push   0x4e
    2bbb:	jmp    26c0 <.plt>

0000000000002bc0 <strtoul@plt>:
    2bc0:	jmp    QWORD PTR [rip+0x2133aa]        # 215f70 <strtoul@GLIBC_2.2.5>
    2bc6:	push   0x4f
    2bcb:	jmp    26c0 <.plt>

0000000000002bd0 <__cxa_atexit@plt>:
    2bd0:	jmp    QWORD PTR [rip+0x2133a2]        # 215f78 <__cxa_atexit@GLIBC_2.2.5>
    2bd6:	push   0x50
    2bdb:	jmp    26c0 <.plt>

0000000000002be0 <openlog@plt>:
    2be0:	jmp    QWORD PTR [rip+0x21339a]        # 215f80 <openlog@GLIBC_2.2.5>
    2be6:	push   0x51
    2beb:	jmp    26c0 <.plt>

0000000000002bf0 <getpagesize@plt>:
    2bf0:	jmp    QWORD PTR [rip+0x213392]        # 215f88 <getpagesize@GLIBC_2.2.5>
    2bf6:	push   0x52
    2bfb:	jmp    26c0 <.plt>

0000000000002c00 <exit@plt>:
    2c00:	jmp    QWORD PTR [rip+0x21338a]        # 215f90 <exit@GLIBC_2.2.5>
    2c06:	push   0x53
    2c0b:	jmp    26c0 <.plt>

0000000000002c10 <fwrite@plt>:
    2c10:	jmp    QWORD PTR [rip+0x213382]        # 215f98 <fwrite@GLIBC_2.2.5>
    2c16:	push   0x54
    2c1b:	jmp    26c0 <.plt>

0000000000002c20 <__fprintf_chk@plt>:
    2c20:	jmp    QWORD PTR [rip+0x21337a]        # 215fa0 <__fprintf_chk@GLIBC_2.3.4>
    2c26:	push   0x55
    2c2b:	jmp    26c0 <.plt>

0000000000002c30 <strerror@plt>:
    2c30:	jmp    QWORD PTR [rip+0x213372]        # 215fa8 <strerror@GLIBC_2.2.5>
    2c36:	push   0x56
    2c3b:	jmp    26c0 <.plt>

0000000000002c40 <xc_map_foreign_range@plt>:
    2c40:	jmp    QWORD PTR [rip+0x21336a]        # 215fb0 <xc_map_foreign_range>
    2c46:	push   0x57
    2c4b:	jmp    26c0 <.plt>

0000000000002c50 <fork@plt>:
    2c50:	jmp    QWORD PTR [rip+0x213362]        # 215fb8 <fork@GLIBC_2.2.5>
    2c56:	push   0x58
    2c5b:	jmp    26c0 <.plt>

0000000000002c60 <strstr@plt>:
    2c60:	jmp    QWORD PTR [rip+0x21335a]        # 215fc0 <strstr@GLIBC_2.2.5>
    2c66:	push   0x59
    2c6b:	jmp    26c0 <.plt>

0000000000002c70 <xengnttab_map_grant_ref@plt>:
    2c70:	jmp    QWORD PTR [rip+0x213352]        # 215fc8 <xengnttab_map_grant_ref@VERS_1.0>
    2c76:	push   0x5a
    2c7b:	jmp    26c0 <.plt>

0000000000002c80 <socket@plt>:
    2c80:	jmp    QWORD PTR [rip+0x21334a]        # 215fd0 <socket@GLIBC_2.2.5>
    2c86:	push   0x5b
    2c8b:	jmp    26c0 <.plt>

Disassembly of section .plt.got:

0000000000002c90 <__cxa_finalize@plt>:
    2c90:	jmp    QWORD PTR [rip+0x213362]        # 215ff8 <__cxa_finalize@GLIBC_2.2.5>
    2c96:	xchg   ax,ax

Disassembly of section .text:

0000000000002ca0 <main>:
    2ca0:	push   r15
    2ca2:	push   r14
    2ca4:	mov    r14d,0x1
    2caa:	push   r13
    2cac:	push   r12
    2cae:	lea    r13,[rip+0xd7ab]        # 10460 <_IO_stdin_used+0xc00>
    2cb5:	push   rbp
    2cb6:	push   rbx
    2cb7:	mov    r12d,edi
    2cba:	mov    rbp,rsi
    2cbd:	xor    ebx,ebx
    2cbf:	sub    rsp,0xb8
    2cc6:	mov    rax,QWORD PTR fs:0x28
    2ccf:	mov    QWORD PTR [rsp+0xa8],rax
    2cd7:	xor    eax,eax
    2cd9:	mov    DWORD PTR [rsp+0x24],0xffffffff
    2ce1:	mov    DWORD PTR [rsp+0x28],0xffffffff
    2ce9:	mov    BYTE PTR [rsp+0x8],0x0
    2cee:	mov    BYTE PTR [rsp+0x10],0x0
    2cf3:	lea    rcx,[rip+0x213346]        # 216040 <options>
    2cfa:	lea    rdx,[rip+0xcd92]        # fa93 <_IO_stdin_used+0x233>
    2d01:	xor    r8d,r8d
    2d04:	mov    rsi,rbp
    2d07:	mov    edi,r12d
    2d0a:	call   2850 <getopt_long@plt>
    2d0f:	cmp    eax,0xffffffff
    2d12:	je     2ea0 <main+0x200>
    2d18:	sub    eax,0x44
    2d1b:	cmp    eax,0x30
    2d1e:	ja     2cf3 <main+0x53>
    2d20:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
    2d25:	add    rax,r13
    2d28:	jmp    rax
    2d2a:	mov    rdi,QWORD PTR [rip+0x21357f]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2d31:	mov    edx,0xa
    2d36:	xor    esi,esi
    2d38:	call   2a10 <strtol@plt>
    2d3d:	mov    DWORD PTR [rip+0x2132cd],eax        # 216010 <quota_max_transaction>
    2d43:	jmp    2cf3 <main+0x53>
    2d45:	mov    rdi,QWORD PTR [rip+0x213564]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2d4c:	mov    edx,0xa
    2d51:	xor    esi,esi
    2d53:	call   2a10 <strtol@plt>
    2d58:	mov    DWORD PTR [rip+0x213572],eax        # 2162d0 <priv_domid>
    2d5e:	jmp    2cf3 <main+0x53>
    2d60:	mov    rdi,QWORD PTR [rip+0x213549]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2d67:	mov    edx,0xa
    2d6c:	xor    esi,esi
    2d6e:	call   2a10 <strtol@plt>
    2d73:	mov    DWORD PTR [rip+0x21355f],eax        # 2162d8 <dom0_domid>
    2d79:	jmp    2cf3 <main+0x53>
    2d7e:	mov    rdi,QWORD PTR [rip+0x21352b]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2d85:	mov    edx,0xa
    2d8a:	xor    esi,esi
    2d8c:	call   2a10 <strtol@plt>
    2d91:	mov    DWORD PTR [rip+0x21353d],eax        # 2162d4 <dom0_event>
    2d97:	jmp    2cf3 <main+0x53>
    2d9c:	mov    rdi,QWORD PTR [rip+0x21350d]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2da3:	mov    edx,0xa
    2da8:	xor    esi,esi
    2daa:	call   2a10 <strtol@plt>
    2daf:	mov    DWORD PTR [rip+0x213263],eax        # 216018 <quota_nb_watch_per_domain>
    2db5:	jmp    2cf3 <main+0x53>
    2dba:	mov    BYTE PTR [rip+0x21353f],0x1        # 216300 <verbose>
    2dc1:	jmp    2cf3 <main+0x53>
    2dc6:	mov    rax,QWORD PTR [rip+0x2134e3]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2dcd:	mov    QWORD PTR [rip+0x213514],rax        # 2162e8 <tracefile>
    2dd4:	jmp    2cf3 <main+0x53>
    2dd9:	mov    rdi,QWORD PTR [rip+0x2134d0]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2de0:	mov    edx,0xa
    2de5:	xor    esi,esi
    2de7:	call   2a10 <strtol@plt>
    2dec:	mov    DWORD PTR [rip+0x213222],eax        # 216014 <quota_max_entry_size>
    2df2:	jmp    2cf3 <main+0x53>
    2df7:	mov    BYTE PTR [rip+0x213226],0x0        # 216024 <recovery>
    2dfe:	jmp    2cf3 <main+0x53>
    2e03:	mov    BYTE PTR [rsp+0x10],0x1
    2e08:	jmp    2cf3 <main+0x53>
    2e0d:	xor    r14d,r14d
    2e10:	jmp    2cf3 <main+0x53>
    2e15:	mov    DWORD PTR [rip+0x2134d1],0x6        # 2162f0 <tdb_flags>
    2e1f:	jmp    2cf3 <main+0x53>
    2e24:	mov    rcx,QWORD PTR [rip+0x213495]        # 2162c0 <stderr@@GLIBC_2.2.5>
    2e2b:	lea    rdi,[rip+0xd21e]        # 10050 <_IO_stdin_used+0x7f0>
    2e32:	mov    edx,0x3eb
    2e37:	mov    esi,0x1
    2e3c:	call   2c10 <fwrite@plt>
    2e41:	xor    eax,eax
    2e43:	mov    rcx,QWORD PTR [rsp+0xa8]
    2e4b:	xor    rcx,QWORD PTR fs:0x28
    2e54:	jne    3583 <main+0x8e3>
    2e5a:	add    rsp,0xb8
    2e61:	pop    rbx
    2e62:	pop    rbp
    2e63:	pop    r12
    2e65:	pop    r13
    2e67:	pop    r14
    2e69:	pop    r15
    2e6b:	ret    
    2e6c:	mov    rbx,QWORD PTR [rip+0x21343d]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2e73:	jmp    2cf3 <main+0x53>
    2e78:	mov    rdi,QWORD PTR [rip+0x213431]        # 2162b0 <optarg@@GLIBC_2.2.5>
    2e7f:	mov    edx,0xa
    2e84:	xor    esi,esi
    2e86:	call   2a10 <strtol@plt>
    2e8b:	mov    DWORD PTR [rip+0x21318b],eax        # 21601c <quota_nb_entry_per_domain>
    2e91:	jmp    2cf3 <main+0x53>
    2e96:	mov    BYTE PTR [rsp+0x8],0x1
    2e9b:	jmp    2cf3 <main+0x53>
    2ea0:	cmp    DWORD PTR [rip+0x213401],r12d        # 2162a8 <optind@@GLIBC_2.2.5>
    2ea7:	jne    3659 <main+0x9b9>
    2ead:	call   4930 <reopen_log>
    2eb2:	call   9d10 <xs_daemon_rundir>
    2eb7:	mov    esi,0x1ed
    2ebc:	mov    rdi,rax
    2ebf:	call   2790 <mkdir@plt>
    2ec4:	call   9ce0 <xs_daemon_rootdir>
    2ec9:	mov    esi,0x1ed
    2ece:	mov    rdi,rax
    2ed1:	call   2790 <mkdir@plt>
    2ed6:	test   r14b,r14b
    2ed9:	jne    3555 <main+0x8b5>
    2edf:	test   rbx,rbx
    2ee2:	je     2eec <main+0x24c>
    2ee4:	mov    rdi,rbx
    2ee7:	call   f480 <write_pidfile>
    2eec:	call   b240 <talloc_enable_leak_report_full>
    2ef1:	mov    esi,0x1
    2ef6:	mov    edi,0xd
    2efb:	call   29e0 <signal@plt>
    2f00:	call   b1e0 <talloc_enable_null_tracking>
    2f05:	call   9d90 <xs_daemon_socket>
    2f0a:	mov    rbp,rax
    2f0d:	call   9dc0 <xs_daemon_socket_ro>
    2f12:	mov    rbx,rax
    2f15:	call   bb70 <talloc_autofree_context>
    2f1a:	lea    rdx,[rip+0xdaa4]        # 109c5 <__PRETTY_FUNCTION__.11970+0x65>
    2f21:	mov    esi,0x4
    2f26:	mov    rdi,rax
    2f29:	call   a240 <talloc_named_const>
    2f2e:	test   rax,rax
    2f31:	mov    r12,rax
    2f34:	je     364b <main+0x9ab>
    2f3a:	xor    edx,edx
    2f3c:	mov    esi,0x1
    2f41:	mov    edi,0x1
    2f46:	call   2c80 <socket@plt>
    2f4b:	test   eax,eax
    2f4d:	mov    DWORD PTR [r12],eax
    2f51:	js     363d <main+0x99d>
    2f57:	call   bb70 <talloc_autofree_context>
    2f5c:	lea    rdx,[rip+0xda62]        # 109c5 <__PRETTY_FUNCTION__.11970+0x65>
    2f63:	mov    esi,0x4
    2f68:	mov    rdi,rax
    2f6b:	call   a240 <talloc_named_const>
    2f70:	test   rax,rax
    2f73:	mov    r13,rax
    2f76:	je     364b <main+0x9ab>
    2f7c:	xor    edx,edx
    2f7e:	mov    esi,0x1
    2f83:	mov    edi,0x1
    2f88:	call   2c80 <socket@plt>
    2f8d:	test   eax,eax
    2f8f:	mov    DWORD PTR [r13+0x0],eax
    2f93:	js     363d <main+0x99d>
    2f99:	lea    rsi,[rip+0x870]        # 3810 <destroy_fd>
    2fa0:	mov    rdi,r12
    2fa3:	call   a1f0 <talloc_set_destructor>
    2fa8:	lea    rsi,[rip+0x861]        # 3810 <destroy_fd>
    2faf:	mov    rdi,r13
    2fb2:	call   a1f0 <talloc_set_destructor>
    2fb7:	mov    rdi,rbp
    2fba:	call   2760 <unlink@plt>
    2fbf:	mov    rdi,rbx
    2fc2:	call   2760 <unlink@plt>
    2fc7:	mov    esi,0x1
    2fcc:	mov    rdi,rbp
    2fcf:	mov    WORD PTR [rsp+0x30],si
    2fd4:	call   2800 <strlen@plt>
    2fd9:	cmp    rax,0x6b
    2fdd:	ja     362c <main+0x98c>
    2fe3:	lea    r15,[rsp+0x30]
    2fe8:	lea    rdx,[rax+0x1]
    2fec:	mov    ecx,0x6c
    2ff1:	mov    rsi,rbp
    2ff4:	lea    rax,[r15+0x2]
    2ff8:	mov    rdi,rax
    2ffb:	mov    QWORD PTR [rsp+0x18],rax
    3000:	call   29f0 <__memcpy_chk@plt>
    3005:	mov    edi,DWORD PTR [r12]
    3009:	mov    edx,0x6e
    300e:	mov    rsi,r15
    3011:	call   2b40 <bind@plt>
    3016:	test   eax,eax
    3018:	jne    361b <main+0x97b>
    301e:	mov    rdi,rbx
    3021:	call   2800 <strlen@plt>
    3026:	cmp    rax,0x6b
    302a:	ja     360a <main+0x96a>
    3030:	mov    rdi,QWORD PTR [rsp+0x18]
    3035:	lea    rdx,[rax+0x1]
    3039:	mov    ecx,0x6c
    303e:	mov    rsi,rbx
    3041:	call   29f0 <__memcpy_chk@plt>
    3046:	mov    edi,DWORD PTR [r13+0x0]
    304a:	mov    edx,0x6e
    304f:	mov    rsi,r15
    3052:	call   2b40 <bind@plt>
    3057:	test   eax,eax
    3059:	jne    35f9 <main+0x959>
    305f:	mov    esi,0x180
    3064:	mov    rdi,rbp
    3067:	call   2b30 <chmod@plt>
    306c:	test   eax,eax
    306e:	jne    35eb <main+0x94b>
    3074:	mov    esi,0x1b0
    3079:	mov    rdi,rbx
    307c:	call   2b30 <chmod@plt>
    3081:	test   eax,eax
    3083:	jne    35eb <main+0x94b>
    3089:	mov    edi,DWORD PTR [r12]
    308d:	mov    esi,0x1
    3092:	call   2a90 <listen@plt>
    3097:	test   eax,eax
    3099:	jne    35dd <main+0x93d>
    309f:	mov    edi,DWORD PTR [r13+0x0]
    30a3:	mov    esi,0x1
    30a8:	call   2a90 <listen@plt>
    30ad:	test   eax,eax
    30af:	jne    35dd <main+0x93d>
    30b5:	lea    rdi,[rip+0x21323c]        # 2162f8 <reopen_log_pipe>
    30bc:	call   f640 <init_pipe>
    30c1:	call   9d40 <xs_daemon_tdb>
    30c6:	mov    rbx,rax
    30c9:	call   bb70 <talloc_autofree_context>
    30ce:	mov    rsi,rbx
    30d1:	mov    rdi,rax
    30d4:	call   b2f0 <talloc_strdup>
    30d9:	test   rax,rax
    30dc:	mov    rbx,rax
    30df:	je     35cf <main+0x92f>
    30e5:	mov    ebp,DWORD PTR [rip+0x213205]        # 2162f0 <tdb_flags>
    30eb:	test   bpl,0x2
    30ef:	jne    30f9 <main+0x459>
    30f1:	mov    rdi,rax
    30f4:	call   2760 <unlink@plt>
    30f9:	sub    rsp,0x8
    30fd:	lea    r9,[rip+0x158c]        # 4690 <tdb_logger>
    3104:	mov    ecx,0xc2
    3109:	push   0x0
    310b:	mov    edx,ebp
    310d:	mov    r8d,0x1a0
    3113:	mov    esi,0x1eef
    3118:	mov    rdi,rbx
    311b:	call   e6d0 <tdb_open_ex>
    3120:	test   rax,rax
    3123:	mov    QWORD PTR [rip+0x2131b6],rax        # 2162e0 <tdb_ctx>
    312a:	pop    rdx
    312b:	pop    rcx
    312c:	je     35c0 <main+0x920>
    3132:	lea    rsi,[rip+0xca41]        # fb7a <_IO_stdin_used+0x31a>
    3139:	lea    rdi,[rip+0xc853]        # f993 <_IO_stdin_used+0x133>
    3140:	call   5e60 <manual_node>
    3145:	lea    rsi,[rip+0xd8bd]        # 10a09 <__PRETTY_FUNCTION__.11970+0xa9>
    314c:	lea    rdi,[rip+0xca26]        # fb79 <_IO_stdin_used+0x319>
    3153:	call   5e60 <manual_node>
    3158:	lea    rdi,[rip+0xca20]        # fb7f <_IO_stdin_used+0x31f>
    315f:	xor    esi,esi
    3161:	call   5e60 <manual_node>
    3166:	call   5b90 <check_store>
    316b:	cmp    BYTE PTR [rsp+0x8],0x0
    3170:	jne    3177 <main+0x4d7>
    3172:	call   85c0 <domain_init>
    3177:	call   7ec0 <restore_existing_connections>
    317c:	cmp    BYTE PTR [rsp+0x10],0x0
    3181:	je     31aa <main+0x50a>
    3183:	call   27c0 <getpid@plt>
    3188:	lea    rsi,[rip+0xca00]        # fb8f <_IO_stdin_used+0x32f>
    318f:	movsxd rdx,eax
    3192:	mov    edi,0x1
    3197:	xor    eax,eax
    3199:	call   2b10 <__printf_chk@plt>
    319e:	mov    rdi,QWORD PTR [rip+0x2130fb]        # 2162a0 <stdout@@GLIBC_2.2.5>
    31a5:	call   2a60 <fflush@plt>
    31aa:	test   r14b,r14b
    31ad:	je     31b4 <main+0x514>
    31af:	call   f5d0 <finish_daemonize>
    31b4:	lea    rsi,[rip+0x605]        # 37c0 <trigger_reopen_log>
    31bb:	mov    edi,0x1
    31c0:	call   29e0 <signal@plt>
    31c5:	mov    rsi,QWORD PTR [rip+0x21311c]        # 2162e8 <tracefile>
    31cc:	test   rsi,rsi
    31cf:	je     31df <main+0x53f>
    31d1:	xor    edi,edi
    31d3:	call   b2f0 <talloc_strdup>
    31d8:	mov    QWORD PTR [rip+0x213109],rax        # 2162e8 <tracefile>
    31df:	lea    rax,[rsp+0x24]
    31e4:	mov    edx,DWORD PTR [r13+0x0]
    31e8:	mov    edi,DWORD PTR [r12]
    31ec:	lea    r15,[rsp+0x2c]
    31f1:	lea    rcx,[rsp+0x28]
    31f6:	lea    rbp,[rip+0x213063]        # 216260 <connections>
    31fd:	mov    rsi,rax
    3200:	mov    QWORD PTR [rsp+0x8],rax
    3205:	mov    r8,r15
    3208:	mov    QWORD PTR [rsp+0x10],rcx
    320d:	call   3b70 <initialize_fds>
    3212:	call   f7a0 <xenbus_notify_running>
    3217:	lea    rax,[rsp+0x23]
    321c:	mov    QWORD PTR [rsp+0x18],rax
    3221:	nop    DWORD PTR [rax+0x0]
    3228:	mov    esi,DWORD PTR [rip+0x2130d6]        # 216304 <nr_fds>
    322e:	mov    edx,DWORD PTR [rsp+0x2c]
    3232:	mov    rdi,QWORD PTR [rip+0x2130d7]        # 216310 <fds>
    3239:	call   2b20 <poll@plt>
    323e:	test   eax,eax
    3240:	js     3460 <main+0x7c0>
    3246:	movsxd rax,DWORD PTR [rip+0x212dd3]        # 216020 <reopen_log_pipe0_pollfd_idx>
    324d:	cmp    eax,0xffffffff
    3250:	je     327b <main+0x5db>
    3252:	mov    rdx,QWORD PTR [rip+0x2130b7]        # 216310 <fds>
    3259:	movzx  eax,WORD PTR [rdx+rax*8+0x6]
    325e:	test   ax,0xfffe
    3262:	jne    3500 <main+0x860>
    3268:	test   ax,ax
    326b:	jne    3530 <main+0x890>
    3271:	mov    DWORD PTR [rip+0x212da5],0xffffffff        # 216020 <reopen_log_pipe0_pollfd_idx>
    327b:	movsxd rax,DWORD PTR [rsp+0x24]
    3280:	cmp    eax,0xffffffff
    3283:	je     32a4 <main+0x604>
    3285:	mov    rdx,QWORD PTR [rip+0x213084]        # 216310 <fds>
    328c:	movzx  eax,WORD PTR [rdx+rax*8+0x6]
    3291:	test   ax,0xfffe
    3295:	jne    35b2 <main+0x912>
    329b:	test   ax,ax
    329e:	jne    34c8 <main+0x828>
    32a4:	movsxd rax,DWORD PTR [rsp+0x28]
    32a9:	cmp    eax,0xffffffff
    32ac:	je     32cd <main+0x62d>
    32ae:	mov    rdx,QWORD PTR [rip+0x21305b]        # 216310 <fds>
    32b5:	movzx  eax,WORD PTR [rdx+rax*8+0x6]
    32ba:	test   ax,0xfffe
    32be:	jne    35a4 <main+0x904>
    32c4:	test   ax,ax
    32c7:	jne    34e8 <main+0x848>
    32cd:	movsxd rax,DWORD PTR [rip+0x212d58]        # 21602c <xce_pollfd_idx>
    32d4:	cmp    eax,0xffffffff
    32d7:	je     32f8 <main+0x658>
    32d9:	mov    rdx,QWORD PTR [rip+0x213030]        # 216310 <fds>
    32e0:	movzx  eax,WORD PTR [rdx+rax*8+0x6]
    32e5:	test   ax,0xfffe
    32e9:	jne    3596 <main+0x8f6>
    32ef:	test   ax,ax
    32f2:	jne    34b0 <main+0x810>
    32f8:	mov    r14,QWORD PTR [rbp+0x0]
    32fc:	cmp    r14,rbp
    32ff:	je     3418 <main+0x778>
    3305:	mov    rdi,r14
    3308:	call   a200 <talloc_increase_ref_count>
    330d:	jmp    3374 <main+0x6d4>
    330f:	nop
    3310:	mov    rdi,r14
    3313:	call   7aa0 <domain_can_read>
    3318:	test   al,al
    331a:	jne    3440 <main+0x7a0>
    3320:	mov    rdi,r14
    3323:	call   a6a0 <talloc_free>
    3328:	test   eax,eax
    332a:	je     3368 <main+0x6c8>
    332c:	mov    rdi,r14
    332f:	call   a200 <talloc_increase_ref_count>
    3334:	mov    rdi,r14
    3337:	call   7b10 <domain_can_write>
    333c:	test   al,al
    333e:	je     3360 <main+0x6c0>
    3340:	lea    rax,[r14+0x28]
    3344:	cmp    QWORD PTR [r14+0x28],rax
    3348:	je     3360 <main+0x6c0>
    334a:	mov    rdi,r14
    334d:	call   43a0 <write_messages>
    3352:	test   al,al
    3354:	jne    3360 <main+0x6c0>
    3356:	mov    rdi,r14
    3359:	call   a6a0 <talloc_free>
    335e:	xchg   ax,ax
    3360:	mov    rdi,r14
    3363:	call   a6a0 <talloc_free>
    3368:	cmp    rbx,rbp
    336b:	mov    r14,rbx
    336e:	je     3418 <main+0x778>
    3374:	mov    rbx,QWORD PTR [r14]
    3377:	cmp    rbx,rbp
    337a:	je     3384 <main+0x6e4>
    337c:	mov    rdi,rbx
    337f:	call   a200 <talloc_increase_ref_count>
    3384:	cmp    QWORD PTR [r14+0x58],0x0
    3389:	jne    3310 <main+0x670>
    338b:	movsxd rax,DWORD PTR [r14+0x14]
    338f:	cmp    eax,0xffffffff
    3392:	je     33b2 <main+0x712>
    3394:	mov    rcx,QWORD PTR [rip+0x212f75]        # 216310 <fds>
    339b:	movzx  eax,WORD PTR [rcx+rax*8+0x6]
    33a0:	test   ax,0xfffa
    33a4:	jne    3450 <main+0x7b0>
    33aa:	test   al,0x1
    33ac:	jne    3480 <main+0x7e0>
    33b2:	mov    rdi,r14
    33b5:	call   a6a0 <talloc_free>
    33ba:	test   eax,eax
    33bc:	je     3368 <main+0x6c8>
    33be:	mov    rdi,r14
    33c1:	call   a200 <talloc_increase_ref_count>
    33c6:	movsxd rax,DWORD PTR [r14+0x14]
    33ca:	cmp    eax,0xffffffff
    33cd:	je     33ed <main+0x74d>
    33cf:	mov    rcx,QWORD PTR [rip+0x212f3a]        # 216310 <fds>
    33d6:	movzx  eax,WORD PTR [rcx+rax*8+0x6]
    33db:	test   ax,0xfffa
    33df:	jne    34a0 <main+0x800>
    33e5:	test   al,0x4
    33e7:	jne    3490 <main+0x7f0>
    33ed:	mov    rdi,r14
    33f0:	call   a6a0 <talloc_free>
    33f5:	test   eax,eax
    33f7:	je     3368 <main+0x6c8>
    33fd:	cmp    rbx,rbp
    3400:	mov    DWORD PTR [r14+0x14],0xffffffff
    3408:	mov    r14,rbx
    340b:	jne    3374 <main+0x6d4>
    3411:	nop    DWORD PTR [rax+0x0]
    3418:	mov    rcx,QWORD PTR [rsp+0x10]
    341d:	mov    edx,DWORD PTR [r13+0x0]
    3421:	mov    r8,r15
    3424:	mov    rsi,QWORD PTR [rsp+0x8]
    3429:	mov    edi,DWORD PTR [r12]
    342d:	call   3b70 <initialize_fds>
    3432:	jmp    3228 <main+0x588>
    3437:	nop    WORD PTR [rax+rax*1+0x0]
    3440:	mov    rdi,r14
    3443:	call   4c90 <handle_input>
    3448:	jmp    3320 <main+0x680>
    344d:	nop    DWORD PTR [rax]
    3450:	mov    rdi,r14
    3453:	call   a6a0 <talloc_free>
    3458:	jmp    33b2 <main+0x712>
    345d:	nop    DWORD PTR [rax]
    3460:	call   2750 <__errno_location@plt>
    3465:	cmp    DWORD PTR [rax],0x4
    3468:	je     3228 <main+0x588>
    346e:	lea    rdi,[rip+0xc71f]        # fb94 <_IO_stdin_used+0x334>
    3475:	xor    eax,eax
    3477:	call   bf20 <barf_perror>
    347c:	nop    DWORD PTR [rax+0x0]
    3480:	mov    rdi,r14
    3483:	call   4c90 <handle_input>
    3488:	jmp    33b2 <main+0x712>
    348d:	nop    DWORD PTR [rax]
    3490:	mov    rdi,r14
    3493:	call   43a0 <write_messages>
    3498:	test   al,al
    349a:	jne    33ed <main+0x74d>
    34a0:	mov    rdi,r14
    34a3:	call   a6a0 <talloc_free>
    34a8:	jmp    33ed <main+0x74d>
    34ad:	nop    DWORD PTR [rax]
    34b0:	call   7930 <handle_event>
    34b5:	mov    DWORD PTR [rip+0x212b6d],0xffffffff        # 21602c <xce_pollfd_idx>
    34bf:	jmp    32f8 <main+0x658>
    34c4:	nop    DWORD PTR [rax+0x0]
    34c8:	mov    edi,DWORD PTR [r12]
    34cc:	mov    esi,0x1
    34d1:	call   5190 <accept_connection>
    34d6:	mov    DWORD PTR [rsp+0x24],0xffffffff
    34de:	jmp    32a4 <main+0x604>
    34e3:	nop    DWORD PTR [rax+rax*1+0x0]
    34e8:	mov    edi,DWORD PTR [r13+0x0]
    34ec:	xor    esi,esi
    34ee:	call   5190 <accept_connection>
    34f3:	mov    DWORD PTR [rsp+0x28],0xffffffff
    34fb:	jmp    32cd <main+0x62d>
    3500:	mov    edi,DWORD PTR [rip+0x212df2]        # 2162f8 <reopen_log_pipe>
    3506:	call   2930 <close@plt>
    350b:	mov    edi,DWORD PTR [rip+0x212deb]        # 2162fc <reopen_log_pipe+0x4>
    3511:	call   2930 <close@plt>
    3516:	lea    rdi,[rip+0x212ddb]        # 2162f8 <reopen_log_pipe>
    351d:	call   f640 <init_pipe>
    3522:	jmp    3271 <main+0x5d1>
    3527:	nop    WORD PTR [rax+rax*1+0x0]
    3530:	mov    rsi,QWORD PTR [rsp+0x18]
    3535:	mov    edi,DWORD PTR [rip+0x212dbd]        # 2162f8 <reopen_log_pipe>
    353b:	mov    edx,0x1
    3540:	call   2980 <read@plt>
    3545:	cmp    rax,0x1
    3549:	jne    3588 <main+0x8e8>
    354b:	call   4930 <reopen_log>
    3550:	jmp    3271 <main+0x5d1>
    3555:	lea    rdi,[rip+0xd4ad]        # 10a09 <__PRETTY_FUNCTION__.11970+0xa9>
    355c:	xor    esi,esi
    355e:	mov    edx,0x18
    3563:	call   2be0 <openlog@plt>
    3568:	call   f560 <daemonize>
    356d:	test   rbx,rbx
    3570:	je     2ef1 <main+0x251>
    3576:	mov    rdi,rbx
    3579:	call   f480 <write_pidfile>
    357e:	jmp    2ef1 <main+0x251>
    3583:	call   2820 <__stack_chk_fail@plt>
    3588:	lea    rdi,[rip+0xc611]        # fba0 <_IO_stdin_used+0x340>
    358f:	xor    eax,eax
    3591:	call   bf20 <barf_perror>
    3596:	lea    rdi,[rip+0xc623]        # fbc0 <_IO_stdin_used+0x360>
    359d:	xor    eax,eax
    359f:	call   bf20 <barf_perror>
    35a4:	lea    rdi,[rip+0xc601]        # fbac <_IO_stdin_used+0x34c>
    35ab:	xor    eax,eax
    35ad:	call   bf20 <barf_perror>
    35b2:	lea    rdi,[rip+0xc5f6]        # fbaf <_IO_stdin_used+0x34f>
    35b9:	xor    eax,eax
    35bb:	call   bf20 <barf_perror>
    35c0:	lea    rdi,[rip+0xc595]        # fb5c <_IO_stdin_used+0x2fc>
    35c7:	mov    rsi,rbx
    35ca:	call   bf20 <barf_perror>
    35cf:	lea    rdi,[rip+0xc56d]        # fb43 <_IO_stdin_used+0x2e3>
    35d6:	xor    eax,eax
    35d8:	call   bf20 <barf_perror>
    35dd:	lea    rdi,[rip+0xc543]        # fb27 <_IO_stdin_used+0x2c7>
    35e4:	xor    eax,eax
    35e6:	call   bf20 <barf_perror>
    35eb:	lea    rdi,[rip+0xc51d]        # fb0f <_IO_stdin_used+0x2af>
    35f2:	xor    eax,eax
    35f4:	call   bf20 <barf_perror>
    35f9:	lea    rdi,[rip+0xc4f3]        # faf3 <_IO_stdin_used+0x293>
    3600:	mov    rsi,rbx
    3603:	xor    eax,eax
    3605:	call   bf20 <barf_perror>
    360a:	lea    rdi,[rip+0xc4c6]        # fad7 <_IO_stdin_used+0x277>
    3611:	mov    rsi,rbx
    3614:	xor    eax,eax
    3616:	call   bf20 <barf_perror>
    361b:	lea    rdi,[rip+0xc4d1]        # faf3 <_IO_stdin_used+0x293>
    3622:	mov    rsi,rbp
    3625:	xor    eax,eax
    3627:	call   bf20 <barf_perror>
    362c:	lea    rdi,[rip+0xc4a4]        # fad7 <_IO_stdin_used+0x277>
    3633:	mov    rsi,rbp
    3636:	xor    eax,eax
    3638:	call   bf20 <barf_perror>
    363d:	lea    rdi,[rip+0xc47b]        # fabf <_IO_stdin_used+0x25f>
    3644:	xor    eax,eax
    3646:	call   bf20 <barf_perror>
    364b:	lea    rdi,[rip+0xcdee]        # 10440 <_IO_stdin_used+0xbe0>
    3652:	xor    eax,eax
    3654:	call   bf20 <barf_perror>
    3659:	mov    rsi,QWORD PTR [rbp+0x0]
    365d:	lea    rdi,[rip+0xc442]        # faa6 <_IO_stdin_used+0x246>
    3664:	xor    eax,eax
    3666:	call   be30 <barf>
    366b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003670 <_start>:
    3670:	xor    ebp,ebp
    3672:	mov    r9,rdx
    3675:	pop    rsi
    3676:	mov    rdx,rsp
    3679:	and    rsp,0xfffffffffffffff0
    367d:	push   rax
    367e:	push   rsp
    367f:	lea    r8,[rip+0xc19a]        # f820 <__libc_csu_fini>
    3686:	lea    rcx,[rip+0xc123]        # f7b0 <__libc_csu_init>
    368d:	lea    rdi,[rip+0xfffffffffffff60c]        # 2ca0 <main>
    3694:	call   QWORD PTR [rip+0x212946]        # 215fe0 <__libc_start_main@GLIBC_2.2.5>
    369a:	hlt    
    369b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036a0 <deregister_tm_clones>:
    36a0:	lea    rdi,[rip+0x212be1]        # 216288 <__TMC_END__>
    36a7:	push   rbp
    36a8:	lea    rax,[rip+0x212bd9]        # 216288 <__TMC_END__>
    36af:	cmp    rax,rdi
    36b2:	mov    rbp,rsp
    36b5:	je     36d0 <deregister_tm_clones+0x30>
    36b7:	mov    rax,QWORD PTR [rip+0x21291a]        # 215fd8 <_ITM_deregisterTMCloneTable>
    36be:	test   rax,rax
    36c1:	je     36d0 <deregister_tm_clones+0x30>
    36c3:	pop    rbp
    36c4:	jmp    rax
    36c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    36d0:	pop    rbp
    36d1:	ret    
    36d2:	nop    DWORD PTR [rax+0x0]
    36d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000036e0 <register_tm_clones>:
    36e0:	lea    rdi,[rip+0x212ba1]        # 216288 <__TMC_END__>
    36e7:	lea    rsi,[rip+0x212b9a]        # 216288 <__TMC_END__>
    36ee:	push   rbp
    36ef:	sub    rsi,rdi
    36f2:	mov    rbp,rsp
    36f5:	sar    rsi,0x3
    36f9:	mov    rax,rsi
    36fc:	shr    rax,0x3f
    3700:	add    rsi,rax
    3703:	sar    rsi,1
    3706:	je     3720 <register_tm_clones+0x40>
    3708:	mov    rax,QWORD PTR [rip+0x2128e1]        # 215ff0 <_ITM_registerTMCloneTable>
    370f:	test   rax,rax
    3712:	je     3720 <register_tm_clones+0x40>
    3714:	pop    rbp
    3715:	jmp    rax
    3717:	nop    WORD PTR [rax+rax*1+0x0]
    3720:	pop    rbp
    3721:	ret    
    3722:	nop    DWORD PTR [rax+0x0]
    3726:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000003730 <__do_global_dtors_aux>:
    3730:	cmp    BYTE PTR [rip+0x212b91],0x0        # 2162c8 <completed.7697>
    3737:	jne    3768 <__do_global_dtors_aux+0x38>
    3739:	cmp    QWORD PTR [rip+0x2128b7],0x0        # 215ff8 <__cxa_finalize@GLIBC_2.2.5>
    3741:	push   rbp
    3742:	mov    rbp,rsp
    3745:	je     3753 <__do_global_dtors_aux+0x23>
    3747:	mov    rdi,QWORD PTR [rip+0x2128ba]        # 216008 <__dso_handle>
    374e:	call   2c90 <__cxa_finalize@plt>
    3753:	call   36a0 <deregister_tm_clones>
    3758:	mov    BYTE PTR [rip+0x212b69],0x1        # 2162c8 <completed.7697>
    375f:	pop    rbp
    3760:	ret    
    3761:	nop    DWORD PTR [rax+0x0]
    3768:	repz ret 
    376a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003770 <frame_dummy>:
    3770:	push   rbp
    3771:	mov    rbp,rsp
    3774:	pop    rbp
    3775:	jmp    36e0 <register_tm_clones>
    377a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003780 <hash_from_key_fn>:
    3780:	movsx  edx,BYTE PTR [rdi]
    3783:	lea    rsi,[rdi+0x1]
    3787:	mov    eax,0x1505
    378c:	test   dl,dl
    378e:	je     37b0 <hash_from_key_fn+0x30>
    3790:	mov    ecx,eax
    3792:	add    rsi,0x1
    3796:	shl    ecx,0x5
    3799:	add    edx,ecx
    379b:	add    eax,edx
    379d:	movsx  edx,BYTE PTR [rsi-0x1]
    37a1:	test   dl,dl
    37a3:	jne    3790 <hash_from_key_fn+0x10>
    37a5:	repz ret 
    37a7:	nop    WORD PTR [rax+rax*1+0x0]
    37b0:	repz ret 
    37b2:	nop    DWORD PTR [rax+0x0]
    37b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000037c0 <trigger_reopen_log>:
    37c0:	sub    rsp,0x18
    37c4:	mov    edi,DWORD PTR [rip+0x212b32]        # 2162fc <reopen_log_pipe+0x4>
    37ca:	mov    edx,0x1
    37cf:	lea    rsi,[rsp+0x7]
    37d4:	mov    BYTE PTR [rsp+0x7],0x41
    37d9:	mov    rax,QWORD PTR fs:0x28
    37e2:	mov    QWORD PTR [rsp+0x8],rax
    37e7:	xor    eax,eax
    37e9:	call   27b0 <write@plt>
    37ee:	mov    rax,QWORD PTR [rsp+0x8]
    37f3:	xor    rax,QWORD PTR fs:0x28
    37fc:	jne    3803 <trigger_reopen_log+0x43>
    37fe:	add    rsp,0x18
    3802:	ret    
    3803:	call   2820 <__stack_chk_fail@plt>
    3808:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003810 <destroy_fd>:
    3810:	sub    rsp,0x8
    3814:	mov    edi,DWORD PTR [rdi]
    3816:	call   2930 <close@plt>
    381b:	xor    eax,eax
    381d:	add    rsp,0x8
    3821:	ret    
    3822:	nop    DWORD PTR [rax+0x0]
    3826:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000003830 <perm_for_conn>:
    3830:	push   r13
    3832:	push   r12
    3834:	mov    r13,rsi
    3837:	push   rbp
    3838:	push   rbx
    3839:	mov    rbp,rdi
    383c:	mov    r12d,edx
    383f:	sub    rsp,0x8
    3843:	cmp    BYTE PTR [rdi+0x1c],0x1
    3847:	sbb    ebx,ebx
    3849:	and    ebx,0xfffffffe
    384c:	add    ebx,0xb
    384f:	call   7ae0 <domain_is_unprivileged>
    3854:	test   al,al
    3856:	je     38b6 <perm_for_conn+0x86>
    3858:	mov    eax,DWORD PTR [r13+0x0]
    385c:	mov    r8d,DWORD PTR [rbp+0x18]
    3860:	cmp    eax,r8d
    3863:	je     38b6 <perm_for_conn+0x86>
    3865:	mov    rdi,QWORD PTR [rbp+0x60]
    3869:	test   rdi,rdi
    386c:	je     3873 <perm_for_conn+0x43>
    386e:	cmp    eax,DWORD PTR [rdi+0x18]
    3871:	je     38b6 <perm_for_conn+0x86>
    3873:	cmp    r12d,0x1
    3877:	jbe    38b2 <perm_for_conn+0x82>
    3879:	mov    ecx,DWORD PTR [r13+0x8]
    387d:	lea    rax,[r13+0x8]
    3881:	cmp    r8d,ecx
    3884:	je     38c8 <perm_for_conn+0x98>
    3886:	lea    edx,[r12-0x2]
    388b:	lea    rdx,[r13+rdx*8+0x8]
    3890:	jmp    38a3 <perm_for_conn+0x73>
    3892:	nop    WORD PTR [rax+rax*1+0x0]
    3898:	add    rax,0x8
    389c:	mov    ecx,DWORD PTR [rax]
    389e:	cmp    r8d,ecx
    38a1:	je     38c8 <perm_for_conn+0x98>
    38a3:	test   rdi,rdi
    38a6:	je     38ad <perm_for_conn+0x7d>
    38a8:	cmp    DWORD PTR [rdi+0x18],ecx
    38ab:	je     38c8 <perm_for_conn+0x98>
    38ad:	cmp    rax,rdx
    38b0:	jne    3898 <perm_for_conn+0x68>
    38b2:	and    ebx,DWORD PTR [r13+0x4]
    38b6:	add    rsp,0x8
    38ba:	mov    eax,ebx
    38bc:	pop    rbx
    38bd:	pop    rbp
    38be:	pop    r12
    38c0:	pop    r13
    38c2:	ret    
    38c3:	nop    DWORD PTR [rax+rax*1+0x0]
    38c8:	and    ebx,DWORD PTR [rax+0x4]
    38cb:	add    rsp,0x8
    38cf:	mov    eax,ebx
    38d1:	pop    rbx
    38d2:	pop    rbp
    38d3:	pop    r12
    38d5:	pop    r13
    38d7:	ret    
    38d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000038e0 <writefd>:
    38e0:	push   r13
    38e2:	push   r12
    38e4:	mov    r13,rdi
    38e7:	push   rbp
    38e8:	push   rbx
    38e9:	mov    r12,rsi
    38ec:	mov    ebx,edx
    38ee:	sub    rsp,0x8
    38f2:	jmp    3909 <writefd+0x29>
    38f4:	nop    DWORD PTR [rax+0x0]
    38f8:	call   2750 <__errno_location@plt>
    38fd:	mov    eax,DWORD PTR [rax]
    38ff:	cmp    eax,0xb
    3902:	je     3930 <writefd+0x50>
    3904:	cmp    eax,0x4
    3907:	jne    391e <writefd+0x3e>
    3909:	mov    edi,DWORD PTR [r13+0x10]
    390d:	mov    rdx,rbx
    3910:	mov    rsi,r12
    3913:	call   27b0 <write@plt>
    3918:	test   eax,eax
    391a:	mov    ebp,eax
    391c:	js     38f8 <writefd+0x18>
    391e:	add    rsp,0x8
    3922:	mov    eax,ebp
    3924:	pop    rbx
    3925:	pop    rbp
    3926:	pop    r12
    3928:	pop    r13
    392a:	ret    
    392b:	nop    DWORD PTR [rax+rax*1+0x0]
    3930:	add    rsp,0x8
    3934:	xor    ebp,ebp
    3936:	pop    rbx
    3937:	mov    eax,ebp
    3939:	pop    rbp
    393a:	pop    r12
    393c:	pop    r13
    393e:	ret    
    393f:	nop

0000000000003940 <keys_equal_fn>:
    3940:	sub    rsp,0x8
    3944:	call   29c0 <strcmp@plt>
    3949:	test   eax,eax
    394b:	sete   al
    394e:	add    rsp,0x8
    3952:	movzx  eax,al
    3955:	ret    
    3956:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000003960 <readfd>:
    3960:	push   r14
    3962:	push   r13
    3964:	mov    r13,rdi
    3967:	push   r12
    3969:	push   rbp
    396a:	mov    ebp,edx
    396c:	push   rbx
    396d:	mov    r12,rsi
    3970:	mov    r14,rbp
    3973:	jmp    3989 <readfd+0x29>
    3975:	nop    DWORD PTR [rax]
    3978:	call   2750 <__errno_location@plt>
    397d:	mov    eax,DWORD PTR [rax]
    397f:	cmp    eax,0xb
    3982:	je     39c0 <readfd+0x60>
    3984:	cmp    eax,0x4
    3987:	jne    39ac <readfd+0x4c>
    3989:	mov    edi,DWORD PTR [r13+0x10]
    398d:	mov    rdx,rbp
    3990:	mov    rsi,r12
    3993:	call   2980 <read@plt>
    3998:	test   eax,eax
    399a:	mov    ebx,eax
    399c:	js     3978 <readfd+0x18>
    399e:	test   eax,eax
    39a0:	sete   al
    39a3:	test   r14d,r14d
    39a6:	je     39ac <readfd+0x4c>
    39a8:	test   al,al
    39aa:	jne    39c9 <readfd+0x69>
    39ac:	mov    eax,ebx
    39ae:	pop    rbx
    39af:	pop    rbp
    39b0:	pop    r12
    39b2:	pop    r13
    39b4:	pop    r14
    39b6:	ret    
    39b7:	nop    WORD PTR [rax+rax*1+0x0]
    39c0:	mov    eax,0x1
    39c5:	xor    ebx,ebx
    39c7:	jmp    39a3 <readfd+0x43>
    39c9:	call   2750 <__errno_location@plt>
    39ce:	mov    ebx,0xffffffff
    39d3:	mov    DWORD PTR [rax],0x9
    39d9:	jmp    39ac <readfd+0x4c>
    39db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000039e0 <get_parent>:
    39e0:	push   rbp
    39e1:	push   rbx
    39e2:	mov    rbp,rdi
    39e5:	lea    rdi,[rsi+0x1]
    39e9:	mov    rbx,rsi
    39ec:	mov    esi,0x2f
    39f1:	sub    rsp,0x8
    39f5:	call   2890 <strrchr@plt>
    39fa:	test   rax,rax
    39fd:	je     3a38 <get_parent+0x58>
    39ff:	sub    rax,rbx
    3a02:	lea    rsi,[rip+0xbe5b]        # f864 <_IO_stdin_used+0x4>
    3a09:	mov    rcx,rbx
    3a0c:	mov    edx,eax
    3a0e:	mov    rdi,rbp
    3a11:	xor    eax,eax
    3a13:	call   b950 <talloc_asprintf>
    3a18:	mov    rbx,rax
    3a1b:	test   rbx,rbx
    3a1e:	jne    3a2b <get_parent+0x4b>
    3a20:	call   2750 <__errno_location@plt>
    3a25:	mov    DWORD PTR [rax],0xc
    3a2b:	add    rsp,0x8
    3a2f:	mov    rax,rbx
    3a32:	pop    rbx
    3a33:	pop    rbp
    3a34:	ret    
    3a35:	nop    DWORD PTR [rax]
    3a38:	lea    rsi,[rip+0xbf54]        # f993 <_IO_stdin_used+0x133>
    3a3f:	mov    rdi,rbp
    3a42:	call   b2f0 <talloc_strdup>
    3a47:	mov    rbx,rax
    3a4a:	jmp    3a1b <get_parent+0x3b>
    3a4c:	nop    DWORD PTR [rax+0x0]

0000000000003a50 <get_string.isra.1>:
    3a50:	push   rbp
    3a51:	push   rbx
    3a52:	xor    ebx,ebx
    3a54:	sub    rsp,0x8
    3a58:	cmp    edx,edi
    3a5a:	jae    3a81 <get_string.isra.1+0x31>
    3a5c:	mov    ebp,edx
    3a5e:	add    rbp,QWORD PTR [rsi]
    3a61:	mov    eax,edi
    3a63:	sub    eax,edx
    3a65:	xor    esi,esi
    3a67:	mov    rdx,rax
    3a6a:	mov    rdi,rbp
    3a6d:	call   2970 <memchr@plt>
    3a72:	mov    rdx,rax
    3a75:	sub    rdx,rbp
    3a78:	add    edx,0x1
    3a7b:	test   rax,rax
    3a7e:	cmovne ebx,edx
    3a81:	add    rsp,0x8
    3a85:	mov    eax,ebx
    3a87:	pop    rbx
    3a88:	pop    rbp
    3a89:	ret    
    3a8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003a90 <set_fd>:
    3a90:	push   r15
    3a92:	push   r14
    3a94:	mov    r15d,edi
    3a97:	push   r13
    3a99:	push   r12
    3a9b:	mov    ecx,esi
    3a9d:	push   rbp
    3a9e:	push   rbx
    3a9f:	sub    rsp,0x18
    3aa3:	mov    ebx,DWORD PTR [rip+0x21285b]        # 216304 <nr_fds>
    3aa9:	mov    r12d,DWORD PTR [rip+0x212858]        # 216308 <current_array_size>
    3ab0:	mov    rbp,QWORD PTR [rip+0x212859]        # 216310 <fds>
    3ab7:	lea    r13d,[rbx+0x1]
    3abb:	cmp    r13d,r12d
    3abe:	ja     3af0 <set_fd+0x60>
    3ac0:	mov    eax,ebx
    3ac2:	mov    DWORD PTR [rip+0x21283b],r13d        # 216304 <nr_fds>
    3ac9:	lea    rax,[rbp+rax*8+0x0]
    3ace:	mov    DWORD PTR [rax],r15d
    3ad1:	mov    WORD PTR [rax+0x4],cx
    3ad5:	mov    eax,ebx
    3ad7:	add    rsp,0x18
    3adb:	pop    rbx
    3adc:	pop    rbp
    3add:	pop    r12
    3adf:	pop    r13
    3ae1:	pop    r14
    3ae3:	pop    r15
    3ae5:	ret    
    3ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3af0:	mov    r14d,r13d
    3af3:	mov    DWORD PTR [rsp+0xc],esi
    3af7:	mov    rdi,rbp
    3afa:	add    r14,0xff
    3b01:	xor    r14b,r14b
    3b04:	lea    rsi,[r14*8+0x0]
    3b0c:	call   2ad0 <realloc@plt>
    3b11:	test   rax,rax
    3b14:	mov    rbp,rax
    3b17:	je     3b45 <set_fd+0xb5>
    3b19:	mov    rdx,r14
    3b1c:	lea    rdi,[rax+r12*8]
    3b20:	xor    esi,esi
    3b22:	sub    rdx,r12
    3b25:	mov    QWORD PTR [rip+0x2127e4],rax        # 216310 <fds>
    3b2c:	shl    rdx,0x3
    3b30:	call   2920 <memset@plt>
    3b35:	mov    DWORD PTR [rip+0x2127cc],r14d        # 216308 <current_array_size>
    3b3c:	mov    ecx,DWORD PTR [rsp+0xc]
    3b40:	jmp    3ac0 <set_fd+0x30>
    3b45:	lea    rdx,[rip+0xc25c]        # fda8 <_IO_stdin_used+0x548>
    3b4c:	xor    eax,eax
    3b4e:	mov    ecx,r15d
    3b51:	mov    esi,0x1
    3b56:	mov    edi,0x3
    3b5b:	call   2b60 <__syslog_chk@plt>
    3b60:	mov    eax,0xffffffff
    3b65:	jmp    3ad7 <set_fd+0x47>
    3b6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000003b70 <initialize_fds>:
    3b70:	push   r14
    3b72:	push   r13
    3b74:	mov    r14,rsi
    3b77:	push   r12
    3b79:	push   rbp
    3b7a:	mov    ebp,edi
    3b7c:	push   rbx
    3b7d:	mov    r13,rcx
    3b80:	mov    ebx,edx
    3b82:	mov    r12,r8
    3b85:	sub    rsp,0x20
    3b89:	mov    rdi,QWORD PTR [rip+0x212780]        # 216310 <fds>
    3b90:	mov    rax,QWORD PTR fs:0x28
    3b99:	mov    QWORD PTR [rsp+0x18],rax
    3b9e:	xor    eax,eax
    3ba0:	test   rdi,rdi
    3ba3:	je     3bb6 <initialize_fds+0x46>
    3ba5:	mov    edx,DWORD PTR [rip+0x21275d]        # 216308 <current_array_size>
    3bab:	xor    esi,esi
    3bad:	shl    rdx,0x3
    3bb1:	call   2920 <memset@plt>
    3bb6:	cmp    ebp,0xffffffff
    3bb9:	mov    DWORD PTR [rip+0x212741],0x0        # 216304 <nr_fds>
    3bc3:	mov    DWORD PTR [r12],0xffffffff
    3bcb:	je     3bdc <initialize_fds+0x6c>
    3bcd:	mov    esi,0x3
    3bd2:	mov    edi,ebp
    3bd4:	call   3a90 <set_fd>
    3bd9:	mov    DWORD PTR [r14],eax
    3bdc:	cmp    ebx,0xffffffff
    3bdf:	je     3bf1 <initialize_fds+0x81>
    3be1:	mov    esi,0x3
    3be6:	mov    edi,ebx
    3be8:	call   3a90 <set_fd>
    3bed:	mov    DWORD PTR [r13+0x0],eax
    3bf1:	mov    edi,DWORD PTR [rip+0x212701]        # 2162f8 <reopen_log_pipe>
    3bf7:	cmp    edi,0xffffffff
    3bfa:	je     3c0c <initialize_fds+0x9c>
    3bfc:	mov    esi,0x3
    3c01:	call   3a90 <set_fd>
    3c06:	mov    DWORD PTR [rip+0x212414],eax        # 216020 <reopen_log_pipe0_pollfd_idx>
    3c0c:	mov    rdi,QWORD PTR [rip+0x212705]        # 216318 <xce_handle>
    3c13:	test   rdi,rdi
    3c16:	je     3c2f <initialize_fds+0xbf>
    3c18:	call   2ab0 <xenevtchn_fd@plt>
    3c1d:	mov    esi,0x3
    3c22:	mov    edi,eax
    3c24:	call   3a90 <set_fd>
    3c29:	mov    DWORD PTR [rip+0x2123fd],eax        # 21602c <xce_pollfd_idx>
    3c2f:	mov    rdi,rsp
    3c32:	lea    rbp,[rip+0x212627]        # 216260 <connections>
    3c39:	call   80d0 <wrl_gettime_now>
    3c3e:	mov    rdi,QWORD PTR [rsp]
    3c42:	mov    rsi,QWORD PTR [rsp+0x8]
    3c47:	call   8a50 <wrl_log_periodic>
    3c4c:	mov    rbx,QWORD PTR [rip+0x21260d]        # 216260 <connections>
    3c53:	cmp    rbx,rbp
    3c56:	jne    3c8d <initialize_fds+0x11d>
    3c58:	jmp    3cbe <initialize_fds+0x14e>
    3c5a:	nop    WORD PTR [rax+rax*1+0x0]
    3c60:	mov    rsi,QWORD PTR [rsp]
    3c64:	mov    rdx,QWORD PTR [rsp+0x8]
    3c69:	mov    rcx,r12
    3c6c:	call   8990 <wrl_check_timeout>
    3c71:	mov    rdi,rbx
    3c74:	call   7aa0 <domain_can_read>
    3c79:	test   al,al
    3c7b:	je     3ce0 <initialize_fds+0x170>
    3c7d:	mov    DWORD PTR [r12],0x0
    3c85:	mov    rbx,QWORD PTR [rbx]
    3c88:	cmp    rbx,rbp
    3c8b:	je     3cbe <initialize_fds+0x14e>
    3c8d:	mov    rdi,QWORD PTR [rbx+0x58]
    3c91:	test   rdi,rdi
    3c94:	jne    3c60 <initialize_fds+0xf0>
    3c96:	lea    rax,[rbx+0x28]
    3c9a:	xor    esi,esi
    3c9c:	cmp    QWORD PTR [rbx+0x28],rax
    3ca0:	mov    edi,DWORD PTR [rbx+0x10]
    3ca3:	setne  sil
    3ca7:	lea    esi,[rsi*4+0x3]
    3cae:	call   3a90 <set_fd>
    3cb3:	mov    DWORD PTR [rbx+0x14],eax
    3cb6:	mov    rbx,QWORD PTR [rbx]
    3cb9:	cmp    rbx,rbp
    3cbc:	jne    3c8d <initialize_fds+0x11d>
    3cbe:	mov    rax,QWORD PTR [rsp+0x18]
    3cc3:	xor    rax,QWORD PTR fs:0x28
    3ccc:	jne    3cf8 <initialize_fds+0x188>
    3cce:	add    rsp,0x20
    3cd2:	pop    rbx
    3cd3:	pop    rbp
    3cd4:	pop    r12
    3cd6:	pop    r13
    3cd8:	pop    r14
    3cda:	ret    
    3cdb:	nop    DWORD PTR [rax+rax*1+0x0]
    3ce0:	mov    rdi,rbx
    3ce3:	call   7b10 <domain_can_write>
    3ce8:	test   al,al
    3cea:	je     3c85 <initialize_fds+0x115>
    3cec:	lea    rax,[rbx+0x28]
    3cf0:	cmp    QWORD PTR [rbx+0x28],rax
    3cf4:	jne    3c7d <initialize_fds+0x10d>
    3cf6:	jmp    3c85 <initialize_fds+0x115>
    3cf8:	call   2820 <__stack_chk_fail@plt>
    3cfd:	nop    DWORD PTR [rax]

0000000000003d00 <trace>:
    3d00:	push   r12
    3d02:	push   rbp
    3d03:	push   rbx
    3d04:	mov    rbx,rdi
    3d07:	sub    rsp,0x4e0
    3d0e:	test   al,al
    3d10:	mov    QWORD PTR [rsp+0x438],rsi
    3d18:	mov    QWORD PTR [rsp+0x440],rdx
    3d20:	mov    QWORD PTR [rsp+0x448],rcx
    3d28:	mov    QWORD PTR [rsp+0x450],r8
    3d30:	mov    QWORD PTR [rsp+0x458],r9
    3d38:	je     3d7a <trace+0x7a>
    3d3a:	movaps XMMWORD PTR [rsp+0x460],xmm0
    3d42:	movaps XMMWORD PTR [rsp+0x470],xmm1
    3d4a:	movaps XMMWORD PTR [rsp+0x480],xmm2
    3d52:	movaps XMMWORD PTR [rsp+0x490],xmm3
    3d5a:	movaps XMMWORD PTR [rsp+0x4a0],xmm4
    3d62:	movaps XMMWORD PTR [rsp+0x4b0],xmm5
    3d6a:	movaps XMMWORD PTR [rsp+0x4c0],xmm6
    3d72:	movaps XMMWORD PTR [rsp+0x4d0],xmm7
    3d7a:	mov    rax,QWORD PTR fs:0x28
    3d83:	mov    QWORD PTR [rsp+0x428],rax
    3d8b:	xor    eax,eax
    3d8d:	mov    eax,DWORD PTR [rip+0x212295]        # 216028 <tracefd>
    3d93:	test   eax,eax
    3d95:	jns    3dc0 <trace+0xc0>
    3d97:	mov    rax,QWORD PTR [rsp+0x428]
    3d9f:	xor    rax,QWORD PTR fs:0x28
    3da8:	jne    3e99 <trace+0x199>
    3dae:	add    rsp,0x4e0
    3db5:	pop    rbx
    3db6:	pop    rbp
    3db7:	pop    r12
    3db9:	ret    
    3dba:	nop    WORD PTR [rax+rax*1+0x0]
    3dc0:	lea    rax,[rsp+0x500]
    3dc8:	lea    rbp,[rsp+0x8]
    3dcd:	lea    r12,[rsp+0x20]
    3dd2:	mov    r8,rbx
    3dd5:	mov    ecx,0x400
    3dda:	mov    edx,0x1
    3ddf:	mov    QWORD PTR [rsp+0x10],rax
    3de4:	lea    rax,[rsp+0x430]
    3dec:	mov    r9,rbp
    3def:	mov    esi,0x400
    3df4:	mov    rdi,r12
    3df7:	mov    DWORD PTR [rsp+0x8],0x8
    3dff:	mov    DWORD PTR [rsp+0xc],0x30
    3e07:	mov    QWORD PTR [rsp+0x18],rax
    3e0c:	call   2ac0 <__vsnprintf_chk@plt>
    3e11:	cmp    eax,0x400
    3e16:	jg     3e30 <trace+0x130>
    3e18:	mov    edi,DWORD PTR [rip+0x21220a]        # 216028 <tracefd>
    3e1e:	movsxd rdx,eax
    3e21:	mov    rsi,r12
    3e24:	call   27b0 <write@plt>
    3e29:	jmp    3d97 <trace+0x97>
    3e2e:	xchg   ax,ax
    3e30:	lea    rax,[rsp+0x500]
    3e38:	mov    rsi,rbx
    3e3b:	xor    edi,edi
    3e3d:	mov    rdx,rbp
    3e40:	mov    DWORD PTR [rsp+0x8],0x8
    3e48:	mov    DWORD PTR [rsp+0xc],0x30
    3e50:	mov    QWORD PTR [rsp+0x10],rax
    3e55:	lea    rax,[rsp+0x430]
    3e5d:	mov    QWORD PTR [rsp+0x18],rax
    3e62:	call   b460 <talloc_vasprintf>
    3e67:	test   rax,rax
    3e6a:	mov    rbx,rax
    3e6d:	je     3d97 <trace+0x97>
    3e73:	mov    rdi,rax
    3e76:	call   2800 <strlen@plt>
    3e7b:	mov    edi,DWORD PTR [rip+0x2121a7]        # 216028 <tracefd>
    3e81:	mov    rdx,rax
    3e84:	mov    rsi,rbx
    3e87:	call   27b0 <write@plt>
    3e8c:	mov    rdi,rbx
    3e8f:	call   a6a0 <talloc_free>
    3e94:	jmp    3d97 <trace+0x97>
    3e99:	call   2820 <__stack_chk_fail@plt>
    3e9e:	xchg   ax,ax

0000000000003ea0 <read_node>:
    3ea0:	push   r13
    3ea2:	push   r12
    3ea4:	mov    r12,rdi
    3ea7:	push   rbp
    3ea8:	push   rbx
    3ea9:	mov    rbp,rdx
    3eac:	lea    rdx,[rip+0xb9b6]        # f869 <_IO_stdin_used+0x9>
    3eb3:	mov    rdi,rsi
    3eb6:	mov    esi,0x48
    3ebb:	sub    rsp,0x28
    3ebf:	mov    rax,QWORD PTR fs:0x28
    3ec8:	mov    QWORD PTR [rsp+0x18],rax
    3ecd:	xor    eax,eax
    3ecf:	call   a240 <talloc_named_const>
    3ed4:	test   rax,rax
    3ed7:	mov    rbx,rax
    3eda:	je     3fb0 <read_node+0x110>
    3ee0:	mov    rsi,rbp
    3ee3:	mov    rdi,rax
    3ee6:	call   b2f0 <talloc_strdup>
    3eeb:	test   rax,rax
    3eee:	mov    QWORD PTR [rbx],rax
    3ef1:	je     3fc0 <read_node+0x120>
    3ef7:	mov    rdx,rsp
    3efa:	mov    rsi,rbp
    3efd:	mov    rdi,r12
    3f00:	call   8c30 <transaction_prepend>
    3f05:	test   eax,eax
    3f07:	jne    3fa8 <read_node+0x108>
    3f0d:	mov    rsi,QWORD PTR [rsp]
    3f11:	mov    rdx,QWORD PTR [rsp+0x8]
    3f16:	mov    rdi,QWORD PTR [rip+0x2123c3]        # 2162e0 <tdb_ctx>
    3f1d:	call   d9f0 <tdb_fetch>
    3f22:	test   rax,rax
    3f25:	mov    rbp,rax
    3f28:	je     3fe0 <read_node+0x140>
    3f2e:	mov    rsi,rax
    3f31:	mov    rdi,rbx
    3f34:	mov    QWORD PTR [rbx+0x8],0x0
    3f3c:	call   a3f0 <talloc_steal>
    3f41:	mov    rax,QWORD PTR [rbp+0x0]
    3f45:	add    rbp,0x14
    3f49:	mov    rsi,rbx
    3f4c:	mov    rdi,r12
    3f4f:	mov    QWORD PTR [rbx+0x10],rax
    3f53:	mov    eax,DWORD PTR [rbp-0xc]
    3f56:	mov    DWORD PTR [rbx+0x18],eax
    3f59:	mov    edx,DWORD PTR [rbp-0x8]
    3f5c:	mov    DWORD PTR [rbx+0x28],edx
    3f5f:	mov    ecx,DWORD PTR [rbp-0x4]
    3f62:	lea    rax,[rbp+rax*8+0x0]
    3f67:	mov    QWORD PTR [rbx+0x20],rbp
    3f6b:	mov    QWORD PTR [rbx+0x30],rax
    3f6f:	add    rax,rdx
    3f72:	xor    edx,edx
    3f74:	mov    DWORD PTR [rbx+0x38],ecx
    3f77:	mov    QWORD PTR [rbx+0x40],rax
    3f7b:	xor    ecx,ecx
    3f7d:	call   8ce0 <access_node>
    3f82:	mov    rcx,QWORD PTR [rsp+0x18]
    3f87:	xor    rcx,QWORD PTR fs:0x28
    3f90:	mov    rax,rbx
    3f93:	jne    40b9 <read_node+0x219>
    3f99:	add    rsp,0x28
    3f9d:	pop    rbx
    3f9e:	pop    rbp
    3f9f:	pop    r12
    3fa1:	pop    r13
    3fa3:	ret    
    3fa4:	nop    DWORD PTR [rax+0x0]
    3fa8:	xor    ebx,ebx
    3faa:	jmp    3f82 <read_node+0xe2>
    3fac:	nop    DWORD PTR [rax+0x0]
    3fb0:	call   2750 <__errno_location@plt>
    3fb5:	mov    DWORD PTR [rax],0xc
    3fbb:	jmp    3f82 <read_node+0xe2>
    3fbd:	nop    DWORD PTR [rax]
    3fc0:	mov    rdi,rbx
    3fc3:	xor    ebx,ebx
    3fc5:	call   a6a0 <talloc_free>
    3fca:	call   2750 <__errno_location@plt>
    3fcf:	mov    DWORD PTR [rax],0xc
    3fd5:	jmp    3f82 <read_node+0xe2>
    3fd7:	nop    WORD PTR [rax+rax*1+0x0]
    3fe0:	mov    rdi,QWORD PTR [rip+0x2122f9]        # 2162e0 <tdb_ctx>
    3fe7:	call   d9a0 <tdb_error>
    3fec:	mov    ebp,eax
    3fee:	call   2750 <__errno_location@plt>
    3ff3:	cmp    ebp,0x8
    3ff6:	mov    r13,rax
    3ff9:	je     4070 <read_node+0x1d0>
    3ffb:	mov    rdi,QWORD PTR [rip+0x2122de]        # 2162e0 <tdb_ctx>
    4002:	call   d9b0 <tdb_errorstr>
    4007:	lea    rsi,[rip+0xb867]        # f875 <_IO_stdin_used+0x15>
    400e:	mov    rdx,rax
    4011:	xor    edi,edi
    4013:	xor    eax,eax
    4015:	call   b950 <talloc_asprintf>
    401a:	test   rax,rax
    401d:	mov    rbp,rax
    4020:	je     4091 <read_node+0x1f1>
    4022:	lea    rdi,[rip+0xb8ab]        # f8d4 <_IO_stdin_used+0x74>
    4029:	mov    rsi,rax
    402c:	xor    eax,eax
    402e:	call   3d00 <trace>
    4033:	lea    rdx,[rip+0xb8a3]        # f8dd <_IO_stdin_used+0x7d>
    403a:	mov    edi,0x3
    403f:	mov    rcx,rbp
    4042:	mov    esi,0x1
    4047:	xor    eax,eax
    4049:	call   2b60 <__syslog_chk@plt>
    404e:	mov    rdi,rbp
    4051:	call   a6a0 <talloc_free>
    4056:	mov    DWORD PTR [r13+0x0],0x5
    405e:	mov    rdi,rbx
    4061:	xor    ebx,ebx
    4063:	call   a6a0 <talloc_free>
    4068:	jmp    3f82 <read_node+0xe2>
    406d:	nop    DWORD PTR [rax]
    4070:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
    4078:	xor    ecx,ecx
    407a:	xor    edx,edx
    407c:	mov    rsi,rbx
    407f:	mov    rdi,r12
    4082:	call   8ce0 <access_node>
    4087:	mov    DWORD PTR [r13+0x0],0x2
    408f:	jmp    405e <read_node+0x1be>
    4091:	lea    rdi,[rip+0xbd30]        # fdc8 <_IO_stdin_used+0x568>
    4098:	xor    eax,eax
    409a:	call   3d00 <trace>
    409f:	lea    rdx,[rip+0xbd22]        # fdc8 <_IO_stdin_used+0x568>
    40a6:	mov    esi,0x1
    40ab:	mov    edi,0x3
    40b0:	xor    eax,eax
    40b2:	call   2b60 <__syslog_chk@plt>
    40b7:	jmp    4056 <read_node+0x1b6>
    40b9:	call   2820 <__stack_chk_fail@plt>
    40be:	xchg   ax,ax

00000000000040c0 <construct_node>:
    40c0:	push   r15
    40c2:	push   r14
    40c4:	mov    r14,rsi
    40c7:	push   r13
    40c9:	push   r12
    40cb:	mov    rsi,rdx
    40ce:	push   rbp
    40cf:	push   rbx
    40d0:	mov    r12,rdi
    40d3:	mov    rdi,r14
    40d6:	mov    r13,rdx
    40d9:	sub    rsp,0x18
    40dd:	call   39e0 <get_parent>
    40e2:	test   rax,rax
    40e5:	je     424b <construct_node+0x18b>
    40eb:	mov    rdx,rax
    40ee:	mov    rsi,rax
    40f1:	mov    rdi,r12
    40f4:	mov    rbx,rax
    40f7:	call   3ea0 <read_node>
    40fc:	test   rax,rax
    40ff:	mov    rbp,rax
    4102:	je     4260 <construct_node+0x1a0>
    4108:	mov    rdi,r12
    410b:	call   8030 <domain_entry>
    4110:	cmp    eax,DWORD PTR [rip+0x211f06]        # 21601c <quota_nb_entry_per_domain>
    4116:	jge    4250 <construct_node+0x190>
    411c:	mov    esi,0x2f
    4121:	mov    rdi,r13
    4124:	call   2890 <strrchr@plt>
    4129:	add    rax,0x1
    412d:	mov    rdi,rax
    4130:	mov    QWORD PTR [rsp+0x8],rax
    4135:	call   2800 <strlen@plt>
    413a:	mov    edx,DWORD PTR [rbp+0x38]
    413d:	lea    ebx,[rax+0x1]
    4140:	lea    rcx,[rip+0xb744]        # f88b <_IO_stdin_used+0x2b>
    4147:	mov    esi,0x1
    414c:	mov    rdi,r14
    414f:	add    edx,ebx
    4151:	call   bad0 <_talloc_array>
    4156:	test   rax,rax
    4159:	mov    r15,rax
    415c:	je     4240 <construct_node+0x180>
    4162:	mov    edx,DWORD PTR [rbp+0x38]
    4165:	mov    rsi,QWORD PTR [rbp+0x40]
    4169:	mov    rdi,rax
    416c:	call   2a20 <memcpy@plt>
    4171:	mov    edi,DWORD PTR [rbp+0x38]
    4174:	mov    rsi,QWORD PTR [rsp+0x8]
    4179:	mov    edx,ebx
    417b:	add    rdi,r15
    417e:	call   2a20 <memcpy@plt>
    4183:	add    DWORD PTR [rbp+0x38],ebx
    4186:	lea    rdx,[rip+0xb6dc]        # f869 <_IO_stdin_used+0x9>
    418d:	mov    QWORD PTR [rbp+0x40],r15
    4191:	mov    esi,0x48
    4196:	mov    rdi,r14
    4199:	call   a240 <talloc_named_const>
    419e:	test   rax,rax
    41a1:	mov    rbx,rax
    41a4:	je     4240 <construct_node+0x180>
    41aa:	mov    rsi,r13
    41ad:	mov    rdi,rax
    41b0:	call   b2f0 <talloc_strdup>
    41b5:	test   rax,rax
    41b8:	mov    QWORD PTR [rbx],rax
    41bb:	je     4240 <construct_node+0x180>
    41c1:	mov    edx,DWORD PTR [rbp+0x18]
    41c4:	lea    rcx,[rip+0xb6c5]        # f890 <_IO_stdin_used+0x30>
    41cb:	mov    rdi,rbx
    41ce:	mov    DWORD PTR [rbx+0x18],edx
    41d1:	mov    rsi,QWORD PTR [rbp+0x20]
    41d5:	shl    rdx,0x3
    41d9:	call   b2b0 <_talloc_memdup>
    41de:	test   rax,rax
    41e1:	mov    QWORD PTR [rbx+0x20],rax
    41e5:	je     4240 <construct_node+0x180>
    41e7:	mov    rdi,r12
    41ea:	call   7ae0 <domain_is_unprivileged>
    41ef:	test   al,al
    41f1:	je     41fe <construct_node+0x13e>
    41f3:	mov    rax,QWORD PTR [rbx+0x20]
    41f7:	mov    edx,DWORD PTR [r12+0x18]
    41fc:	mov    DWORD PTR [rax],edx
    41fe:	mov    QWORD PTR [rbx+0x30],0x0
    4206:	mov    QWORD PTR [rbx+0x40],0x0
    420e:	mov    rsi,rbx
    4211:	mov    DWORD PTR [rbx+0x28],0x0
    4218:	mov    DWORD PTR [rbx+0x38],0x0
    421f:	mov    rdi,r12
    4222:	mov    QWORD PTR [rbx+0x8],rbp
    4226:	call   7ed0 <domain_entry_inc>
    422b:	add    rsp,0x18
    422f:	mov    rax,rbx
    4232:	pop    rbx
    4233:	pop    rbp
    4234:	pop    r12
    4236:	pop    r13
    4238:	pop    r14
    423a:	pop    r15
    423c:	ret    
    423d:	nop    DWORD PTR [rax]
    4240:	call   2750 <__errno_location@plt>
    4245:	mov    DWORD PTR [rax],0xc
    424b:	xor    ebx,ebx
    424d:	jmp    422b <construct_node+0x16b>
    424f:	nop
    4250:	call   2750 <__errno_location@plt>
    4255:	xor    ebx,ebx
    4257:	mov    DWORD PTR [rax],0x1c
    425d:	jmp    422b <construct_node+0x16b>
    425f:	nop
    4260:	mov    rdx,rbx
    4263:	mov    rsi,r14
    4266:	mov    rdi,r12
    4269:	call   40c0 <construct_node>
    426e:	test   rax,rax
    4271:	mov    rbp,rax
    4274:	jne    4108 <construct_node+0x48>
    427a:	xor    ebx,ebx
    427c:	jmp    422b <construct_node+0x16b>
    427e:	xchg   ax,ax

0000000000004280 <trace_io.part.3>:
    4280:	push   r12
    4282:	push   rbp
    4283:	mov    r12d,edx
    4286:	push   rbx
    4287:	mov    rbx,rdi
    428a:	xor    edi,edi
    428c:	mov    rbp,rsi
    428f:	sub    rsp,0x10
    4293:	mov    rax,QWORD PTR fs:0x28
    429c:	mov    QWORD PTR [rsp+0x8],rax
    42a1:	xor    eax,eax
    42a3:	call   2a30 <time@plt>
    42a8:	mov    rdi,rsp
    42ab:	mov    QWORD PTR [rsp],rax
    42af:	call   2710 <localtime@plt>
    42b4:	mov    ecx,DWORD PTR [rbp+0x18]
    42b7:	lea    rdi,[rip+0xb5e7]        # f8a5 <_IO_stdin_used+0x45>
    42be:	cmp    ecx,0x16
    42c1:	ja     42e0 <trace_io.part.3+0x60>
    42c3:	lea    rdx,[rip+0x211676]        # 215940 <wire_funcs>
    42ca:	shl    rcx,0x4
    42ce:	mov    rdi,QWORD PTR [rdx+rcx*1]
    42d2:	lea    rdx,[rip+0xb5cc]        # f8a5 <_IO_stdin_used+0x45>
    42d9:	test   rdi,rdi
    42dc:	cmove  rdi,rdx
    42e0:	mov    r9d,DWORD PTR [rax+0x8]
    42e4:	mov    r11d,DWORD PTR [rax]
    42e7:	lea    rdx,[rip+0xb5c3]        # f8b1 <_IO_stdin_used+0x51>
    42ee:	mov    r10d,DWORD PTR [rax+0x4]
    42f2:	mov    ecx,DWORD PTR [rax+0x14]
    42f5:	lea    rsi,[rip+0xba95]        # fd91 <_IO_stdin_used+0x531>
    42fc:	mov    r8d,DWORD PTR [rax+0x10]
    4300:	push   rdi
    4301:	lea    rdi,[rip+0xbae0]        # fde8 <_IO_stdin_used+0x588>
    4308:	push   r11
    430a:	push   r10
    430c:	push   r9
    430e:	add    ecx,0x76c
    4314:	mov    r9d,DWORD PTR [rax+0xc]
    4318:	test   r12d,r12d
    431b:	cmovne rsi,rdx
    431f:	xor    eax,eax
    4321:	add    r8d,0x1
    4325:	mov    rdx,rbx
    4328:	call   3d00 <trace>
    432d:	mov    eax,DWORD PTR [rbp+0x24]
    4330:	add    rsp,0x20
    4334:	test   eax,eax
    4336:	je     4367 <trace_io.part.3+0xe7>
    4338:	xor    ebx,ebx
    433a:	mov    r12d,0x20
    4340:	mov    rdx,QWORD PTR [rbp+0x28]
    4344:	mov    eax,ebx
    4346:	lea    rdi,[rip+0xb568]        # f8b5 <_IO_stdin_used+0x55>
    434d:	movsx  esi,BYTE PTR [rdx+rax*1]
    4351:	test   sil,sil
    4354:	cmove  esi,r12d
    4358:	xor    eax,eax
    435a:	add    ebx,0x1
    435d:	call   3d00 <trace>
    4362:	cmp    ebx,DWORD PTR [rbp+0x24]
    4365:	jb     4340 <trace_io.part.3+0xc0>
    4367:	lea    rdi,[rip+0xb54a]        # f8b8 <_IO_stdin_used+0x58>
    436e:	xor    eax,eax
    4370:	call   3d00 <trace>
    4375:	mov    rax,QWORD PTR [rsp+0x8]
    437a:	xor    rax,QWORD PTR fs:0x28
    4383:	jne    438e <trace_io.part.3+0x10e>
    4385:	add    rsp,0x10
    4389:	pop    rbx
    438a:	pop    rbp
    438b:	pop    r12
    438d:	ret    
    438e:	call   2820 <__stack_chk_fail@plt>
    4393:	nop    DWORD PTR [rax]
    4396:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000043a0 <write_messages>:
    43a0:	push   r12
    43a2:	push   rbp
    43a3:	lea    rax,[rdi+0x28]
    43a7:	push   rbx
    43a8:	mov    rbx,QWORD PTR [rdi+0x28]
    43ac:	cmp    rbx,rax
    43af:	sete   dl
    43b2:	test   rbx,rbx
    43b5:	sete   al
    43b8:	or     dl,al
    43ba:	jne    43f1 <write_messages+0x51>
    43bc:	cmp    BYTE PTR [rbx+0x10],0x0
    43c0:	mov    ebp,edx
    43c2:	mov    r12,rdi
    43c5:	jne    4448 <write_messages+0xa8>
    43cb:	mov    esi,DWORD PTR [rbx+0x14]
    43ce:	mov    edx,DWORD PTR [rbx+0x24]
    43d1:	mov    rax,rsi
    43d4:	add    rsi,QWORD PTR [rbx+0x28]
    43d8:	sub    edx,eax
    43da:	mov    rdi,r12
    43dd:	call   QWORD PTR [r12+0x78]
    43e2:	test   eax,eax
    43e4:	js     43f6 <write_messages+0x56>
    43e6:	add    eax,DWORD PTR [rbx+0x14]
    43e9:	cmp    eax,DWORD PTR [rbx+0x24]
    43ec:	mov    DWORD PTR [rbx+0x14],eax
    43ef:	je     4400 <write_messages+0x60>
    43f1:	mov    ebp,0x1
    43f6:	mov    eax,ebp
    43f8:	pop    rbx
    43f9:	pop    rbp
    43fa:	pop    r12
    43fc:	ret    
    43fd:	nop    DWORD PTR [rax]
    4400:	mov    eax,DWORD PTR [rip+0x211c22]        # 216028 <tracefd>
    4406:	test   eax,eax
    4408:	js     441a <write_messages+0x7a>
    440a:	mov    edx,0x1
    440f:	mov    rsi,rbx
    4412:	mov    rdi,r12
    4415:	call   4280 <trace_io.part.3>
    441a:	mov    rdx,QWORD PTR [rbx]
    441d:	mov    rax,QWORD PTR [rbx+0x8]
    4421:	mov    rdi,rbx
    4424:	mov    QWORD PTR [rdx+0x8],rax
    4428:	mov    QWORD PTR [rax],rdx
    442b:	mov    QWORD PTR [rbx],0x100100
    4432:	mov    QWORD PTR [rbx+0x8],0x200200
    443a:	call   a6a0 <talloc_free>
    443f:	jmp    43f1 <write_messages+0x51>
    4441:	nop    DWORD PTR [rax+0x0]
    4448:	cmp    BYTE PTR [rip+0x211eb1],0x0        # 216300 <verbose>
    444f:	je     449a <write_messages+0xfa>
    4451:	mov    eax,DWORD PTR [rbx+0x18]
    4454:	mov    r9,QWORD PTR [rip+0x211e25]        # 216280 <xprintf>
    445b:	lea    rsi,[rip+0xb443]        # f8a5 <_IO_stdin_used+0x45>
    4462:	mov    rcx,QWORD PTR [rbx+0x28]
    4466:	mov    edx,DWORD PTR [rbx+0x24]
    4469:	cmp    eax,0x16
    446c:	ja     448b <write_messages+0xeb>
    446e:	lea    rsi,[rip+0x2114cb]        # 215940 <wire_funcs>
    4475:	shl    rax,0x4
    4479:	mov    rsi,QWORD PTR [rsi+rax*1]
    447d:	lea    rax,[rip+0xb421]        # f8a5 <_IO_stdin_used+0x45>
    4484:	test   rsi,rsi
    4487:	cmove  rsi,rax
    448b:	mov    r8,r12
    448e:	lea    rdi,[rip+0xb97b]        # fe10 <_IO_stdin_used+0x5b0>
    4495:	xor    eax,eax
    4497:	call   r9
    449a:	mov    eax,DWORD PTR [rbx+0x14]
    449d:	mov    edx,0x10
    44a2:	mov    rdi,r12
    44a5:	sub    edx,eax
    44a7:	lea    rsi,[rbx+rax*1+0x18]
    44ac:	call   QWORD PTR [r12+0x78]
    44b1:	test   eax,eax
    44b3:	js     43f6 <write_messages+0x56>
    44b9:	add    eax,DWORD PTR [rbx+0x14]
    44bc:	cmp    eax,0xf
    44bf:	mov    DWORD PTR [rbx+0x14],eax
    44c2:	jbe    43f1 <write_messages+0x51>
    44c8:	mov    edx,DWORD PTR [rbx+0x24]
    44cb:	mov    BYTE PTR [rbx+0x10],0x0
    44cf:	mov    DWORD PTR [rbx+0x14],0x0
    44d6:	test   edx,edx
    44d8:	je     44e6 <write_messages+0x146>
    44da:	cmp    QWORD PTR [r12+0x58],0x0
    44e0:	je     43f1 <write_messages+0x51>
    44e6:	xor    esi,esi
    44e8:	xor    eax,eax
    44ea:	jmp    43d4 <write_messages+0x34>
    44ef:	nop

00000000000044f0 <clean_store_>:
    44f0:	push   r14
    44f2:	push   r13
    44f4:	mov    r14,rdi
    44f7:	push   r12
    44f9:	push   rbp
    44fa:	xor    edi,edi
    44fc:	push   rbx
    44fd:	mov    r12,rsi
    4500:	mov    rbp,rdx
    4503:	mov    r13,r9
    4506:	call   b3d0 <talloc_strndup>
    450b:	test   rax,rax
    450e:	je     4550 <clean_store_+0x60>
    4510:	cmp    BYTE PTR [rax],0x2f
    4513:	mov    rbx,rax
    4516:	je     452d <clean_store_+0x3d>
    4518:	mov    esi,0x2f
    451d:	mov    rdi,rax
    4520:	call   2870 <strchr@plt>
    4525:	test   rax,rax
    4528:	je     452d <clean_store_+0x3d>
    452a:	mov    BYTE PTR [rax],0x0
    452d:	mov    rsi,rbx
    4530:	mov    rdi,r13
    4533:	call   f240 <hashtable_search>
    4538:	test   rax,rax
    453b:	je     45b0 <clean_store_+0xc0>
    453d:	mov    rdi,rbx
    4540:	call   a6a0 <talloc_free>
    4545:	xor    eax,eax
    4547:	pop    rbx
    4548:	pop    rbp
    4549:	pop    r12
    454b:	pop    r13
    454d:	pop    r14
    454f:	ret    
    4550:	lea    rsi,[rip+0xb364]        # f8bb <_IO_stdin_used+0x5b>
    4557:	xor    edi,edi
    4559:	xor    eax,eax
    455b:	call   b950 <talloc_asprintf>
    4560:	test   rax,rax
    4563:	mov    rbx,rax
    4566:	je     4628 <clean_store_+0x138>
    456c:	lea    rdi,[rip+0xb361]        # f8d4 <_IO_stdin_used+0x74>
    4573:	mov    rsi,rax
    4576:	xor    eax,eax
    4578:	call   3d00 <trace>
    457d:	lea    rdx,[rip+0xb359]        # f8dd <_IO_stdin_used+0x7d>
    4584:	mov    rcx,rbx
    4587:	mov    esi,0x1
    458c:	mov    edi,0x3
    4591:	xor    eax,eax
    4593:	call   2b60 <__syslog_chk@plt>
    4598:	mov    rdi,rbx
    459b:	call   a6a0 <talloc_free>
    45a0:	pop    rbx
    45a1:	mov    eax,0x1
    45a6:	pop    rbp
    45a7:	pop    r12
    45a9:	pop    r13
    45ab:	pop    r14
    45ad:	ret    
    45ae:	xchg   ax,ax
    45b0:	lea    rsi,[rip+0xb881]        # fe38 <_IO_stdin_used+0x5d8>
    45b7:	xor    edi,edi
    45b9:	mov    rdx,rbx
    45bc:	call   b950 <talloc_asprintf>
    45c1:	test   rax,rax
    45c4:	mov    r13,rax
    45c7:	je     4660 <clean_store_+0x170>
    45cd:	lea    rdi,[rip+0xb300]        # f8d4 <_IO_stdin_used+0x74>
    45d4:	mov    rsi,rax
    45d7:	xor    eax,eax
    45d9:	call   3d00 <trace>
    45de:	lea    rdx,[rip+0xb2f8]        # f8dd <_IO_stdin_used+0x7d>
    45e5:	mov    edi,0x3
    45ea:	mov    rcx,r13
    45ed:	mov    esi,0x1
    45f2:	xor    eax,eax
    45f4:	call   2b60 <__syslog_chk@plt>
    45f9:	mov    rdi,r13
    45fc:	call   a6a0 <talloc_free>
    4601:	cmp    BYTE PTR [rip+0x211a1c],0x0        # 216024 <recovery>
    4608:	je     453d <clean_store_+0x4d>
    460e:	mov    rsi,r12
    4611:	mov    rdx,rbp
    4614:	mov    rdi,r14
    4617:	call   e000 <tdb_delete>
    461c:	jmp    453d <clean_store_+0x4d>
    4621:	nop    DWORD PTR [rax+0x0]
    4628:	lea    rdi,[rip+0xb799]        # fdc8 <_IO_stdin_used+0x568>
    462f:	xor    eax,eax
    4631:	call   3d00 <trace>
    4636:	lea    rdx,[rip+0xb78b]        # fdc8 <_IO_stdin_used+0x568>
    463d:	xor    eax,eax
    463f:	mov    esi,0x1
    4644:	mov    edi,0x3
    4649:	call   2b60 <__syslog_chk@plt>
    464e:	mov    eax,0x1
    4653:	jmp    4547 <clean_store_+0x57>
    4658:	nop    DWORD PTR [rax+rax*1+0x0]
    4660:	lea    rdi,[rip+0xb761]        # fdc8 <_IO_stdin_used+0x568>
    4667:	xor    eax,eax
    4669:	call   3d00 <trace>
    466e:	lea    rdx,[rip+0xb753]        # fdc8 <_IO_stdin_used+0x568>
    4675:	mov    esi,0x1
    467a:	mov    edi,0x3
    467f:	xor    eax,eax
    4681:	call   2b60 <__syslog_chk@plt>
    4686:	jmp    4601 <clean_store_+0x111>
    468b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004690 <tdb_logger>:
    4690:	push   rbx
    4691:	mov    rsi,rdx
    4694:	sub    rsp,0xd0
    469b:	test   al,al
    469d:	mov    QWORD PTR [rsp+0x38],rcx
    46a2:	mov    QWORD PTR [rsp+0x40],r8
    46a7:	mov    QWORD PTR [rsp+0x48],r9
    46ac:	je     46e5 <tdb_logger+0x55>
    46ae:	movaps XMMWORD PTR [rsp+0x50],xmm0
    46b3:	movaps XMMWORD PTR [rsp+0x60],xmm1
    46b8:	movaps XMMWORD PTR [rsp+0x70],xmm2
    46bd:	movaps XMMWORD PTR [rsp+0x80],xmm3
    46c5:	movaps XMMWORD PTR [rsp+0x90],xmm4
    46cd:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    46d5:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    46dd:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    46e5:	mov    rax,QWORD PTR fs:0x28
    46ee:	mov    QWORD PTR [rsp+0x18],rax
    46f3:	xor    eax,eax
    46f5:	lea    rax,[rsp+0xe0]
    46fd:	xor    edi,edi
    46ff:	mov    rdx,rsp
    4702:	mov    QWORD PTR [rsp+0x8],rax
    4707:	lea    rax,[rsp+0x20]
    470c:	mov    DWORD PTR [rsp],0x18
    4713:	mov    DWORD PTR [rsp+0x4],0x30
    471b:	mov    QWORD PTR [rsp+0x10],rax
    4720:	call   b460 <talloc_vasprintf>
    4725:	test   rax,rax
    4728:	mov    rbx,rax
    472b:	je     4798 <tdb_logger+0x108>
    472d:	lea    rdi,[rip+0xb19b]        # f8cf <_IO_stdin_used+0x6f>
    4734:	mov    rsi,rax
    4737:	xor    eax,eax
    4739:	call   3d00 <trace>
    473e:	lea    rdx,[rip+0xb193]        # f8d8 <_IO_stdin_used+0x78>
    4745:	xor    eax,eax
    4747:	mov    rcx,rbx
    474a:	mov    esi,0x1
    474f:	mov    edi,0x3
    4754:	call   2b60 <__syslog_chk@plt>
    4759:	cmp    BYTE PTR [rip+0x211ba0],0x0        # 216300 <verbose>
    4760:	je     4774 <tdb_logger+0xe4>
    4762:	mov    rsi,rbx
    4765:	lea    rdi,[rip+0xb16c]        # f8d8 <_IO_stdin_used+0x78>
    476c:	xor    eax,eax
    476e:	call   QWORD PTR [rip+0x211b0c]        # 216280 <xprintf>
    4774:	mov    rdi,rbx
    4777:	call   a6a0 <talloc_free>
    477c:	mov    rax,QWORD PTR [rsp+0x18]
    4781:	xor    rax,QWORD PTR fs:0x28
    478a:	jne    47c0 <tdb_logger+0x130>
    478c:	add    rsp,0xd0
    4793:	pop    rbx
    4794:	ret    
    4795:	nop    DWORD PTR [rax]
    4798:	lea    rdi,[rip+0xb629]        # fdc8 <_IO_stdin_used+0x568>
    479f:	xor    eax,eax
    47a1:	call   3d00 <trace>
    47a6:	lea    rdx,[rip+0xb61b]        # fdc8 <_IO_stdin_used+0x568>
    47ad:	mov    esi,0x1
    47b2:	mov    edi,0x3
    47b7:	xor    eax,eax
    47b9:	call   2b60 <__syslog_chk@plt>
    47be:	jmp    477c <tdb_logger+0xec>
    47c0:	call   2820 <__stack_chk_fail@plt>
    47c5:	nop
    47c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000047d0 <destroy_conn>:
    47d0:	push   r12
    47d2:	push   rbp
    47d3:	push   rbx
    47d4:	mov    rbx,rdi
    47d7:	sub    rsp,0x10
    47db:	mov    rax,QWORD PTR fs:0x28
    47e4:	mov    QWORD PTR [rsp+0x8],rax
    47e9:	xor    eax,eax
    47eb:	cmp    QWORD PTR [rdi+0x58],0x0
    47f0:	je     4858 <destroy_conn+0x88>
    47f2:	mov    rsi,QWORD PTR [rbx+0x60]
    47f6:	test   rsi,rsi
    47f9:	je     4803 <destroy_conn+0x33>
    47fb:	mov    rdi,rbx
    47fe:	call   abf0 <talloc_unlink>
    4803:	mov    rdx,QWORD PTR [rbx]
    4806:	mov    rax,QWORD PTR [rbx+0x8]
    480a:	lea    rsi,[rip+0xb191]        # f9a2 <_IO_stdin_used+0x142>
    4811:	lea    rdi,[rip+0xb0c8]        # f8e0 <_IO_stdin_used+0x80>
    4818:	mov    QWORD PTR [rdx+0x8],rax
    481c:	mov    QWORD PTR [rax],rdx
    481f:	xor    eax,eax
    4821:	mov    QWORD PTR [rbx],0x100100
    4828:	mov    QWORD PTR [rbx+0x8],0x200200
    4830:	mov    rdx,rbx
    4833:	call   3d00 <trace>
    4838:	xor    eax,eax
    483a:	mov    rcx,QWORD PTR [rsp+0x8]
    483f:	xor    rcx,QWORD PTR fs:0x28
    4848:	jne    48ab <destroy_conn+0xdb>
    484a:	add    rsp,0x10
    484e:	pop    rbx
    484f:	pop    rbp
    4850:	pop    r12
    4852:	ret    
    4853:	nop    DWORD PTR [rax+rax*1+0x0]
    4858:	mov    eax,DWORD PTR [rdi+0x10]
    485b:	lea    rbp,[rdi+0x28]
    485f:	mov    r12,rsp
    4862:	mov    DWORD PTR [rsp],eax
    4865:	mov    eax,0x4
    486a:	mov    WORD PTR [rsp+0x4],ax
    486f:	jmp    4898 <destroy_conn+0xc8>
    4871:	nop    DWORD PTR [rax+0x0]
    4878:	xor    edx,edx
    487a:	mov    esi,0x1
    487f:	mov    rdi,r12
    4882:	call   2b20 <poll@plt>
    4887:	cmp    eax,0x1
    488a:	jne    489e <destroy_conn+0xce>
    488c:	mov    rdi,rbx
    488f:	call   43a0 <write_messages>
    4894:	test   al,al
    4896:	je     489e <destroy_conn+0xce>
    4898:	cmp    QWORD PTR [rbx+0x28],rbp
    489c:	jne    4878 <destroy_conn+0xa8>
    489e:	mov    edi,DWORD PTR [rbx+0x10]
    48a1:	call   2930 <close@plt>
    48a6:	jmp    47f2 <destroy_conn+0x22>
    48ab:	call   2820 <__stack_chk_fail@plt>

00000000000048b0 <trace_create>:
    48b0:	mov    rdx,rdi
    48b3:	lea    rdi,[rip+0xb035]        # f8ef <_IO_stdin_used+0x8f>
    48ba:	xor    eax,eax
    48bc:	jmp    3d00 <trace>
    48c1:	nop    DWORD PTR [rax+rax*1+0x0]
    48c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000048d0 <trace_destroy>:
    48d0:	mov    rdx,rdi
    48d3:	lea    rdi,[rip+0xb006]        # f8e0 <_IO_stdin_used+0x80>
    48da:	xor    eax,eax
    48dc:	jmp    3d00 <trace>
    48e1:	nop    DWORD PTR [rax+rax*1+0x0]
    48e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000048f0 <close_log>:
    48f0:	mov    edi,DWORD PTR [rip+0x211732]        # 216028 <tracefd>
    48f6:	test   edi,edi
    48f8:	js     4918 <close_log+0x28>
    48fa:	sub    rsp,0x8
    48fe:	call   2930 <close@plt>
    4903:	mov    DWORD PTR [rip+0x21171b],0xffffffff        # 216028 <tracefd>
    490d:	add    rsp,0x8
    4911:	ret    
    4912:	nop    WORD PTR [rax+rax*1+0x0]
    4918:	mov    DWORD PTR [rip+0x211706],0xffffffff        # 216028 <tracefd>
    4922:	ret    
    4923:	nop    DWORD PTR [rax]
    4926:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004930 <reopen_log>:
    4930:	mov    rdi,QWORD PTR [rip+0x2119b1]        # 2162e8 <tracefile>
    4937:	test   rdi,rdi
    493a:	je     49b0 <reopen_log+0x80>
    493c:	sub    rsp,0x8
    4940:	mov    eax,DWORD PTR [rip+0x2116e2]        # 216028 <tracefd>
    4946:	test   eax,eax
    4948:	jns    4988 <reopen_log+0x58>
    494a:	xor    eax,eax
    494c:	mov    edx,0x180
    4951:	mov    esi,0x441
    4956:	mov    DWORD PTR [rip+0x2116c8],0xffffffff        # 216028 <tracefd>
    4960:	call   2b70 <open@plt>
    4965:	test   eax,eax
    4967:	mov    DWORD PTR [rip+0x2116bb],eax        # 216028 <tracefd>
    496d:	js     49a0 <reopen_log+0x70>
    496f:	lea    rdi,[rip+0xafa0]        # f916 <_IO_stdin_used+0xb6>
    4976:	xor    eax,eax
    4978:	add    rsp,0x8
    497c:	jmp    3d00 <trace>
    4981:	nop    DWORD PTR [rax+0x0]
    4988:	mov    edi,eax
    498a:	call   2930 <close@plt>
    498f:	mov    rdi,QWORD PTR [rip+0x211952]        # 2162e8 <tracefile>
    4996:	jmp    494a <reopen_log+0x1a>
    4998:	nop    DWORD PTR [rax+rax*1+0x0]
    49a0:	lea    rdi,[rip+0xaf56]        # f8fd <_IO_stdin_used+0x9d>
    49a7:	add    rsp,0x8
    49ab:	jmp    2ba0 <perror@plt>
    49b0:	repz ret 
    49b2:	nop    DWORD PTR [rax+0x0]
    49b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000049c0 <get_strings>:
    49c0:	push   r15
    49c2:	push   r14
    49c4:	xor    r15d,r15d
    49c7:	push   r13
    49c9:	push   r12
    49cb:	mov    r14d,edx
    49ce:	push   rbp
    49cf:	push   rbx
    49d0:	mov    r12,rdi
    49d3:	lea    r13,[rdi+0x28]
    49d7:	xor    ebx,ebx
    49d9:	sub    rsp,0x18
    49dd:	mov    ebp,DWORD PTR [rdi+0x14]
    49e0:	mov    QWORD PTR [rsp+0x8],rsi
    49e5:	jmp    4a13 <get_strings+0x53>
    49e7:	nop    WORD PTR [rax+rax*1+0x0]
    49f0:	cmp    ebx,r14d
    49f3:	jae    4a0d <get_strings+0x4d>
    49f5:	mov    edx,r15d
    49f8:	add    rdx,QWORD PTR [r12+0x28]
    49fd:	mov    rcx,QWORD PTR [rsp+0x8]
    4a02:	mov    esi,ebx
    4a04:	mov    QWORD PTR [rcx+rsi*8],rdx
    4a08:	mov    ebp,DWORD PTR [r12+0x14]
    4a0d:	add    ebx,0x1
    4a10:	add    r15d,eax
    4a13:	mov    edx,r15d
    4a16:	mov    rsi,r13
    4a19:	mov    edi,ebp
    4a1b:	call   3a50 <get_string.isra.1>
    4a20:	test   eax,eax
    4a22:	jne    49f0 <get_strings+0x30>
    4a24:	add    rsp,0x18
    4a28:	mov    eax,ebx
    4a2a:	pop    rbx
    4a2b:	pop    rbp
    4a2c:	pop    r12
    4a2e:	pop    r13
    4a30:	pop    r14
    4a32:	pop    r15
    4a34:	ret    
    4a35:	nop
    4a36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004a40 <send_reply>:
    4a40:	cmp    ecx,0x1000
    4a46:	ja     4b28 <send_reply+0xe8>
    4a4c:	cmp    esi,0xf
    4a4f:	push   r14
    4a51:	mov    r14,rdx
    4a54:	push   r13
    4a56:	push   r12
    4a58:	mov    r12d,esi
    4a5b:	push   rbp
    4a5c:	mov    rbp,rdi
    4a5f:	push   rbx
    4a60:	mov    ebx,ecx
    4a62:	je     4b70 <send_reply+0x130>
    4a68:	mov    r13,QWORD PTR [rdi+0x20]
    4a6c:	mov    BYTE PTR [r13+0x10],0x1
    4a71:	mov    DWORD PTR [r13+0x14],0x0
    4a79:	mov    QWORD PTR [rdi+0x20],0x0
    4a81:	cmp    ebx,0x10
    4a84:	ja     4ae0 <send_reply+0xa0>
    4a86:	lea    rax,[r13+0x30]
    4a8a:	mov    QWORD PTR [r13+0x28],rax
    4a8e:	cmp    ebx,0x8
    4a91:	mov    DWORD PTR [r13+0x18],r12d
    4a95:	mov    DWORD PTR [r13+0x24],ebx
    4a99:	jae    4b38 <send_reply+0xf8>
    4a9f:	test   bl,0x4
    4aa2:	jne    4bb0 <send_reply+0x170>
    4aa8:	test   ebx,ebx
    4aaa:	je     4abb <send_reply+0x7b>
    4aac:	movzx  edx,BYTE PTR [r14]
    4ab0:	test   bl,0x2
    4ab3:	mov    BYTE PTR [rax],dl
    4ab5:	jne    4bc3 <send_reply+0x183>
    4abb:	mov    rax,QWORD PTR [rbp+0x30]
    4abf:	mov    QWORD PTR [rbp+0x30],r13
    4ac3:	add    rbp,0x28
    4ac7:	mov    QWORD PTR [r13+0x0],rbp
    4acb:	mov    QWORD PTR [r13+0x8],rax
    4acf:	mov    QWORD PTR [rax],r13
    4ad2:	pop    rbx
    4ad3:	pop    rbp
    4ad4:	pop    r12
    4ad6:	pop    r13
    4ad8:	pop    r14
    4ada:	ret    
    4adb:	nop    DWORD PTR [rax+rax*1+0x0]
    4ae0:	lea    rcx,[rip+0xada4]        # f88b <_IO_stdin_used+0x2b>
    4ae7:	mov    edx,ebx
    4ae9:	mov    esi,0x1
    4aee:	mov    rdi,r13
    4af1:	call   bad0 <_talloc_array>
    4af6:	test   rax,rax
    4af9:	mov    QWORD PTR [r13+0x28],rax
    4afd:	jne    4a8e <send_reply+0x4e>
    4aff:	cmp    r12d,0xf
    4b03:	je     4ba0 <send_reply+0x160>
    4b09:	mov    QWORD PTR [rbp+0x20],r13
    4b0d:	mov    rdi,rbp
    4b10:	mov    esi,0xc
    4b15:	pop    rbx
    4b16:	pop    rbp
    4b17:	pop    r12
    4b19:	pop    r13
    4b1b:	pop    r14
    4b1d:	jmp    4be0 <send_error>
    4b22:	nop    WORD PTR [rax+rax*1+0x0]
    4b28:	mov    esi,0x7
    4b2d:	jmp    4be0 <send_error>
    4b32:	nop    WORD PTR [rax+rax*1+0x0]
    4b38:	mov    rdx,QWORD PTR [r14]
    4b3b:	lea    rdi,[rax+0x8]
    4b3f:	mov    rsi,r14
    4b42:	and    rdi,0xfffffffffffffff8
    4b46:	mov    QWORD PTR [rax],rdx
    4b49:	mov    edx,ebx
    4b4b:	mov    rcx,QWORD PTR [r14+rdx*1-0x8]
    4b50:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
    4b55:	sub    rax,rdi
    4b58:	lea    ecx,[rbx+rax*1]
    4b5b:	sub    rsi,rax
    4b5e:	mov    ebx,ecx
    4b60:	shr    ebx,0x3
    4b63:	mov    ecx,ebx
    4b65:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    4b68:	jmp    4abb <send_reply+0x7b>
    4b6d:	nop    DWORD PTR [rax]
    4b70:	lea    rdx,[rip+0xada5]        # f91c <_IO_stdin_used+0xbc>
    4b77:	mov    esi,0x40
    4b7c:	call   b280 <_talloc_zero>
    4b81:	test   rax,rax
    4b84:	mov    r13,rax
    4b87:	je     4ad2 <send_reply+0x92>
    4b8d:	mov    BYTE PTR [rax+0x10],0x1
    4b91:	jmp    4a81 <send_reply+0x41>
    4b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4ba0:	pop    rbx
    4ba1:	mov    rdi,r13
    4ba4:	pop    rbp
    4ba5:	pop    r12
    4ba7:	pop    r13
    4ba9:	pop    r14
    4bab:	jmp    a6a0 <talloc_free>
    4bb0:	mov    edx,DWORD PTR [r14]
    4bb3:	mov    DWORD PTR [rax],edx
    4bb5:	mov    edx,DWORD PTR [r14+rbx*1-0x4]
    4bba:	mov    DWORD PTR [rax+rbx*1-0x4],edx
    4bbe:	jmp    4abb <send_reply+0x7b>
    4bc3:	movzx  edx,WORD PTR [r14+rbx*1-0x2]
    4bc9:	mov    WORD PTR [rax+rbx*1-0x2],dx
    4bce:	jmp    4abb <send_reply+0x7b>
    4bd3:	nop    DWORD PTR [rax]
    4bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004be0 <send_error>:
    4be0:	push   rbp
    4be1:	push   rbx
    4be2:	mov    rbx,rdi
    4be5:	sub    rsp,0x8
    4be9:	cmp    esi,0x16
    4bec:	je     4c80 <send_error+0xa0>
    4bf2:	lea    rcx,[rip+0x210b47]        # 215740 <xsd_errors+0x20>
    4bf9:	mov    edi,0xd
    4bfe:	xor    eax,eax
    4c00:	jmp    4c13 <send_error+0x33>
    4c02:	nop    WORD PTR [rax+rax*1+0x0]
    4c08:	cmp    eax,0xe
    4c0b:	je     4c50 <send_error+0x70>
    4c0d:	mov    edi,DWORD PTR [rcx]
    4c0f:	add    rcx,0x10
    4c13:	add    eax,0x1
    4c16:	cmp    esi,edi
    4c18:	jne    4c08 <send_error+0x28>
    4c1a:	lea    rdx,[rip+0x210aff]        # 215720 <xsd_errors>
    4c21:	shl    rax,0x4
    4c25:	mov    rbp,QWORD PTR [rdx+rax*1+0x8]
    4c2a:	mov    rdi,rbp
    4c2d:	call   2800 <strlen@plt>
    4c32:	lea    ecx,[rax+0x1]
    4c35:	add    rsp,0x8
    4c39:	mov    rdx,rbp
    4c3c:	mov    rdi,rbx
    4c3f:	pop    rbx
    4c40:	pop    rbp
    4c41:	mov    esi,0x10
    4c46:	jmp    4a40 <send_reply>
    4c4b:	nop    DWORD PTR [rax+rax*1+0x0]
    4c50:	mov    edx,esi
    4c52:	lea    rdi,[rip+0xb1ff]        # fe58 <_IO_stdin_used+0x5f8>
    4c59:	lea    rsi,[rip+0xb908]        # 10568 <__FUNCTION__.12321>
    4c60:	xor    eax,eax
    4c62:	lea    rbp,[rip+0xacc8]        # f931 <_IO_stdin_used+0xd1>
    4c69:	call   QWORD PTR [rip+0x211611]        # 216280 <xprintf>
    4c6f:	mov    ecx,0x7
    4c74:	jmp    4c35 <send_error+0x55>
    4c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4c80:	mov    ecx,0x7
    4c85:	lea    rbp,[rip+0xaca5]        # f931 <_IO_stdin_used+0xd1>
    4c8c:	jmp    4c35 <send_error+0x55>
    4c8e:	xchg   ax,ax

0000000000004c90 <handle_input>:
    4c90:	push   r12
    4c92:	push   rbp
    4c93:	mov    rbp,rdi
    4c96:	push   rbx
    4c97:	mov    rbx,QWORD PTR [rdi+0x20]
    4c9b:	test   rbx,rbx
    4c9e:	je     4e20 <handle_input+0x190>
    4ca4:	cmp    BYTE PTR [rbx+0x10],0x0
    4ca8:	mov    ecx,DWORD PTR [rbx+0x14]
    4cab:	jne    4e50 <handle_input+0x1c0>
    4cb1:	mov    rsi,QWORD PTR [rbx+0x28]
    4cb5:	mov    edx,DWORD PTR [rbx+0x24]
    4cb8:	mov    eax,ecx
    4cba:	sub    edx,ecx
    4cbc:	add    rsi,rax
    4cbf:	mov    rdi,rbp
    4cc2:	call   QWORD PTR [rbp+0x80]
    4cc8:	test   eax,eax
    4cca:	js     4dfa <handle_input+0x16a>
    4cd0:	add    eax,DWORD PTR [rbx+0x14]
    4cd3:	cmp    eax,DWORD PTR [rbx+0x24]
    4cd6:	mov    DWORD PTR [rbx+0x14],eax
    4cd9:	je     4ce0 <handle_input+0x50>
    4cdb:	pop    rbx
    4cdc:	pop    rbp
    4cdd:	pop    r12
    4cdf:	ret    
    4ce0:	mov    eax,DWORD PTR [rip+0x211342]        # 216028 <tracefd>
    4ce6:	test   eax,eax
    4ce8:	js     4cf7 <handle_input+0x67>
    4cea:	xor    edx,edx
    4cec:	mov    rsi,rbx
    4cef:	mov    rdi,rbp
    4cf2:	call   4280 <trace_io.part.3>
    4cf7:	cmp    BYTE PTR [rip+0x211602],0x0        # 216300 <verbose>
    4cfe:	mov    r12,QWORD PTR [rbp+0x20]
    4d02:	mov    ebx,DWORD PTR [r12+0x18]
    4d07:	je     4d56 <handle_input+0xc6>
    4d09:	cmp    ebx,0x16
    4d0c:	mov    r8,QWORD PTR [rip+0x21156d]        # 216280 <xprintf>
    4d13:	mov    edx,DWORD PTR [r12+0x24]
    4d18:	lea    rsi,[rip+0xab86]        # f8a5 <_IO_stdin_used+0x45>
    4d1f:	ja     4d3e <handle_input+0xae>
    4d21:	lea    rax,[rip+0x210c18]        # 215940 <wire_funcs>
    4d28:	shl    rbx,0x4
    4d2c:	mov    rsi,QWORD PTR [rax+rbx*1]
    4d30:	lea    rax,[rip+0xab6e]        # f8a5 <_IO_stdin_used+0x45>
    4d37:	test   rsi,rsi
    4d3a:	cmove  rsi,rax
    4d3e:	mov    rcx,rbp
    4d41:	lea    rdi,[rip+0xb140]        # fe88 <_IO_stdin_used+0x628>
    4d48:	xor    eax,eax
    4d4a:	call   r8
    4d4d:	mov    r12,QWORD PTR [rbp+0x20]
    4d51:	mov    ebx,DWORD PTR [r12+0x18]
    4d56:	mov    esi,DWORD PTR [r12+0x20]
    4d5b:	mov    rdi,rbp
    4d5e:	call   8f70 <transaction_lookup>
    4d63:	cmp    rax,0xfffffffffffffc18
    4d69:	ja     4e10 <handle_input+0x180>
    4d6f:	cmp    QWORD PTR [rbp+0x38],0x0
    4d74:	jne    4f31 <handle_input+0x2a1>
    4d7a:	cmp    ebx,0x16
    4d7d:	mov    QWORD PTR [rbp+0x38],rax
    4d81:	jbe    4ec8 <handle_input+0x238>
    4d87:	lea    rsi,[rip+0xb7a2]        # 10530 <__FUNCTION__.12531>
    4d8e:	mov    edx,ebx
    4d90:	lea    rdi,[rip+0xb111]        # fea8 <_IO_stdin_used+0x648>
    4d97:	xor    eax,eax
    4d99:	call   QWORD PTR [rip+0x2114e1]        # 216280 <xprintf>
    4d9f:	mov    esi,0x26
    4da4:	mov    rdi,rbp
    4da7:	call   4be0 <send_error>
    4dac:	mov    QWORD PTR [rbp+0x38],0x0
    4db4:	cmp    QWORD PTR [rbp+0x20],0x0
    4db9:	je     4cdb <handle_input+0x4b>
    4dbf:	lea    rcx,[rip+0xb78a]        # 10550 <__PRETTY_FUNCTION__.12535>
    4dc6:	lea    rsi,[rip+0xab86]        # f953 <_IO_stdin_used+0xf3>
    4dcd:	lea    rdi,[rip+0xabaa]        # f97e <_IO_stdin_used+0x11e>
    4dd4:	mov    edx,0x53e
    4dd9:	call   28d0 <__assert_fail@plt>
    4dde:	xchg   ax,ax
    4de0:	mov    ecx,edx
    4de2:	lea    rdx,[rip+0xab4f]        # f938 <_IO_stdin_used+0xd8>
    4de9:	mov    esi,0x1
    4dee:	mov    edi,0x3
    4df3:	xor    eax,eax
    4df5:	call   2b60 <__syslog_chk@plt>
    4dfa:	pop    rbx
    4dfb:	mov    rdi,rbp
    4dfe:	pop    rbp
    4dff:	pop    r12
    4e01:	jmp    a6a0 <talloc_free>
    4e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    4e10:	mov    esi,eax
    4e12:	mov    rdi,rbp
    4e15:	neg    esi
    4e17:	call   4be0 <send_error>
    4e1c:	jmp    4db4 <handle_input+0x124>
    4e1e:	xchg   ax,ax
    4e20:	lea    rdx,[rip+0xaaf5]        # f91c <_IO_stdin_used+0xbc>
    4e27:	mov    esi,0x40
    4e2c:	call   b280 <_talloc_zero>
    4e31:	test   rax,rax
    4e34:	mov    rbx,rax
    4e37:	je     4eb8 <handle_input+0x228>
    4e39:	mov    BYTE PTR [rax+0x10],0x1
    4e3d:	mov    QWORD PTR [rbp+0x20],rax
    4e41:	cmp    BYTE PTR [rbx+0x10],0x0
    4e45:	mov    ecx,DWORD PTR [rbx+0x14]
    4e48:	je     4cb1 <handle_input+0x21>
    4e4e:	xchg   ax,ax
    4e50:	cmp    ecx,0x10
    4e53:	je     4f00 <handle_input+0x270>
    4e59:	mov    edx,0x10
    4e5e:	lea    rsi,[rbx+rcx*1+0x18]
    4e63:	mov    rdi,rbp
    4e66:	sub    edx,ecx
    4e68:	call   QWORD PTR [rbp+0x80]
    4e6e:	test   eax,eax
    4e70:	js     4dfa <handle_input+0x16a>
    4e72:	add    eax,DWORD PTR [rbx+0x14]
    4e75:	cmp    eax,0x10
    4e78:	mov    DWORD PTR [rbx+0x14],eax
    4e7b:	jne    4cdb <handle_input+0x4b>
    4e81:	mov    edx,DWORD PTR [rbx+0x24]
    4e84:	cmp    edx,0x1000
    4e8a:	ja     4de0 <handle_input+0x150>
    4e90:	cmp    edx,0x10
    4e93:	ja     4f05 <handle_input+0x275>
    4e95:	lea    rsi,[rbx+0x30]
    4e99:	mov    QWORD PTR [rbx+0x28],rsi
    4e9d:	mov    DWORD PTR [rbx+0x14],0x0
    4ea4:	mov    BYTE PTR [rbx+0x10],0x0
    4ea8:	xor    eax,eax
    4eaa:	xor    ecx,ecx
    4eac:	jmp    4cba <handle_input+0x2a>
    4eb1:	nop    DWORD PTR [rax+0x0]
    4eb8:	mov    QWORD PTR [rbp+0x20],0x0
    4ec0:	jmp    4cdb <handle_input+0x4b>
    4ec5:	nop    DWORD PTR [rax]
    4ec8:	mov    eax,ebx
    4eca:	lea    rdx,[rip+0x210a6f]        # 215940 <wire_funcs>
    4ed1:	shl    rax,0x4
    4ed5:	mov    rax,QWORD PTR [rdx+rax*1+0x8]
    4eda:	test   rax,rax
    4edd:	je     4d87 <handle_input+0xf7>
    4ee3:	mov    rsi,r12
    4ee6:	mov    rdi,rbp
    4ee9:	call   rax
    4eeb:	test   eax,eax
    4eed:	mov    esi,eax
    4eef:	jne    4da4 <handle_input+0x114>
    4ef5:	jmp    4dac <handle_input+0x11c>
    4efa:	nop    WORD PTR [rax+rax*1+0x0]
    4f00:	mov    edx,DWORD PTR [rbx+0x24]
    4f03:	jmp    4e90 <handle_input+0x200>
    4f05:	lea    rcx,[rip+0xa97f]        # f88b <_IO_stdin_used+0x2b>
    4f0c:	mov    esi,0x1
    4f11:	mov    rdi,rbx
    4f14:	call   bad0 <_talloc_array>
    4f19:	test   rax,rax
    4f1c:	mov    rsi,rax
    4f1f:	mov    QWORD PTR [rbx+0x28],rax
    4f23:	je     4cdb <handle_input+0x4b>
    4f29:	mov    edx,DWORD PTR [rbx+0x24]
    4f2c:	jmp    4e9d <handle_input+0x20d>
    4f31:	lea    rcx,[rip+0xb608]        # 10540 <__PRETTY_FUNCTION__.12530>
    4f38:	lea    rsi,[rip+0xaa14]        # f953 <_IO_stdin_used+0xf3>
    4f3f:	lea    rdi,[rip+0xaa1e]        # f964 <_IO_stdin_used+0x104>
    4f46:	mov    edx,0x526
    4f4b:	call   28d0 <__assert_fail@plt>

0000000000004f50 <send_ack>:
    4f50:	lea    rdx,[rip+0xaa38]        # f98f <_IO_stdin_used+0x12f>
    4f57:	mov    ecx,0x3
    4f5c:	jmp    4a40 <send_reply>
    4f61:	nop    DWORD PTR [rax+rax*1+0x0]
    4f66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000004f70 <is_valid_nodename>:
    4f70:	push   r12
    4f72:	push   rbp
    4f73:	xor    ebp,ebp
    4f75:	push   rbx
    4f76:	cmp    BYTE PTR [rdi],0x2f
    4f79:	je     4f88 <is_valid_nodename+0x18>
    4f7b:	mov    eax,ebp
    4f7d:	pop    rbx
    4f7e:	pop    rbp
    4f7f:	pop    r12
    4f81:	ret    
    4f82:	nop    WORD PTR [rax+rax*1+0x0]
    4f88:	mov    rbx,rdi
    4f8b:	call   2800 <strlen@plt>
    4f90:	test   rax,rax
    4f93:	mov    r12,rax
    4f96:	je     4fcd <is_valid_nodename+0x5d>
    4f98:	lea    rdx,[rip+0xa9f4]        # f993 <_IO_stdin_used+0x133>
    4f9f:	lea    rsi,[rbx+rax*1-0x1]
    4fa4:	mov    ecx,0x2
    4fa9:	mov    rdi,rdx
    4fac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4fae:	seta   al
    4fb1:	sbb    al,0x0
    4fb3:	test   al,al
    4fb5:	jne    4fcd <is_valid_nodename+0x5d>
    4fb7:	mov    ecx,0x2
    4fbc:	mov    rsi,rbx
    4fbf:	mov    rdi,rdx
    4fc2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4fc4:	seta   al
    4fc7:	sbb    al,0x0
    4fc9:	test   al,al
    4fcb:	jne    4f7b <is_valid_nodename+0xb>
    4fcd:	lea    rsi,[rip+0xa9be]        # f992 <_IO_stdin_used+0x132>
    4fd4:	mov    rdi,rbx
    4fd7:	call   2c60 <strstr@plt>
    4fdc:	test   rax,rax
    4fdf:	jne    5008 <is_valid_nodename+0x98>
    4fe1:	cmp    r12,0xc00
    4fe8:	ja     5008 <is_valid_nodename+0x98>
    4fea:	lea    rsi,[rip+0xaedf]        # fed0 <_IO_stdin_used+0x670>
    4ff1:	mov    rdi,rbx
    4ff4:	call   2960 <strspn@plt>
    4ff9:	cmp    r12,rax
    4ffc:	sete   bpl
    5000:	jmp    4f7b <is_valid_nodename+0xb>
    5005:	nop    DWORD PTR [rax]
    5008:	xor    ebp,ebp
    500a:	mov    eax,ebp
    500c:	pop    rbx
    500d:	pop    rbp
    500e:	pop    r12
    5010:	ret    
    5011:	nop    DWORD PTR [rax+rax*1+0x0]
    5016:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005020 <onearg>:
    5020:	push   rbp
    5021:	push   rbx
    5022:	sub    rsp,0x8
    5026:	mov    ebp,DWORD PTR [rdi+0x14]
    5029:	test   ebp,ebp
    502b:	je     5050 <onearg+0x30>
    502d:	lea    rsi,[rdi+0x28]
    5031:	xor    edx,edx
    5033:	mov    rbx,rdi
    5036:	mov    edi,ebp
    5038:	call   3a50 <get_string.isra.1>
    503d:	cmp    ebp,eax
    503f:	jne    5050 <onearg+0x30>
    5041:	mov    rax,QWORD PTR [rbx+0x28]
    5045:	add    rsp,0x8
    5049:	pop    rbx
    504a:	pop    rbp
    504b:	ret    
    504c:	nop    DWORD PTR [rax+0x0]
    5050:	add    rsp,0x8
    5054:	xor    eax,eax
    5056:	pop    rbx
    5057:	pop    rbp
    5058:	ret    
    5059:	nop    DWORD PTR [rax+0x0]

0000000000005060 <canonicalize>:
    5060:	test   rdx,rdx
    5063:	je     50b0 <canonicalize+0x50>
    5065:	movzx  eax,BYTE PTR [rdx]
    5068:	cmp    al,0x40
    506a:	je     50b0 <canonicalize+0x50>
    506c:	cmp    al,0x2f
    506e:	je     50b0 <canonicalize+0x50>
    5070:	push   rbx
    5071:	mov    rbx,rsi
    5074:	sub    rsp,0x10
    5078:	mov    QWORD PTR [rsp+0x8],rdx
    507d:	call   7ea0 <get_implicit_path>
    5082:	test   rax,rax
    5085:	mov    rdx,QWORD PTR [rsp+0x8]
    508a:	je     50b8 <canonicalize+0x58>
    508c:	add    rsp,0x10
    5090:	mov    rdi,rbx
    5093:	lea    rsi,[rip+0xa8fb]        # f995 <_IO_stdin_used+0x135>
    509a:	pop    rbx
    509b:	mov    rcx,rdx
    509e:	mov    rdx,rax
    50a1:	xor    eax,eax
    50a3:	jmp    b950 <talloc_asprintf>
    50a8:	nop    DWORD PTR [rax+rax*1+0x0]
    50b0:	mov    rax,rdx
    50b3:	ret    
    50b4:	nop    DWORD PTR [rax+0x0]
    50b8:	add    rsp,0x10
    50bc:	mov    rax,rdx
    50bf:	pop    rbx
    50c0:	ret    
    50c1:	nop    DWORD PTR [rax+rax*1+0x0]
    50c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000050d0 <new_connection>:
    50d0:	push   r12
    50d2:	push   rbp
    50d3:	mov    r12,rdi
    50d6:	push   rbx
    50d7:	mov    rbp,rsi
    50da:	call   bb70 <talloc_autofree_context>
    50df:	lea    rdx,[rip+0xa8b5]        # f99b <_IO_stdin_used+0x13b>
    50e6:	mov    esi,0x88
    50eb:	mov    rdi,rax
    50ee:	call   b280 <_talloc_zero>
    50f3:	test   rax,rax
    50f6:	mov    rbx,rax
    50f9:	je     5184 <new_connection+0xb4>
    50ff:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
    5107:	mov    QWORD PTR [rax+0x78],r12
    510b:	lea    rax,[rax+0x28]
    510f:	mov    QWORD PTR [rax+0x58],rbp
    5113:	mov    BYTE PTR [rax-0xc],0x1
    5117:	lea    rcx,[rip+0x211142]        # 216260 <connections>
    511e:	mov    DWORD PTR [rax+0x2c],0x0
    5125:	mov    QWORD PTR [rbx+0x28],rax
    5129:	lea    rsi,[rip+0xfffffffffffff6a0]        # 47d0 <destroy_conn>
    5130:	mov    QWORD PTR [rbx+0x30],rax
    5134:	lea    rax,[rbx+0x68]
    5138:	mov    rdi,rbx
    513b:	mov    QWORD PTR [rbx+0x68],rax
    513f:	mov    QWORD PTR [rbx+0x70],rax
    5143:	lea    rax,[rbx+0x40]
    5147:	mov    QWORD PTR [rbx+0x40],rax
    514b:	mov    QWORD PTR [rbx+0x48],rax
    514f:	mov    rax,QWORD PTR [rip+0x211112]        # 216268 <connections+0x8>
    5156:	mov    QWORD PTR [rip+0x21110b],rbx        # 216268 <connections+0x8>
    515d:	mov    QWORD PTR [rbx],rcx
    5160:	mov    QWORD PTR [rbx+0x8],rax
    5164:	mov    QWORD PTR [rax],rbx
    5167:	call   a1f0 <talloc_set_destructor>
    516c:	lea    rsi,[rip+0xa82f]        # f9a2 <_IO_stdin_used+0x142>
    5173:	lea    rdi,[rip+0xa775]        # f8ef <_IO_stdin_used+0x8f>
    517a:	mov    rdx,rbx
    517d:	xor    eax,eax
    517f:	call   3d00 <trace>
    5184:	mov    rax,rbx
    5187:	pop    rbx
    5188:	pop    rbp
    5189:	pop    r12
    518b:	ret    
    518c:	nop    DWORD PTR [rax+0x0]

0000000000005190 <accept_connection>:
    5190:	push   rbp
    5191:	push   rbx
    5192:	xor    edx,edx
    5194:	mov    ebp,esi
    5196:	xor    esi,esi
    5198:	sub    rsp,0x8
    519c:	call   2bb0 <accept@plt>
    51a1:	test   eax,eax
    51a3:	js     51c6 <accept_connection+0x36>
    51a5:	lea    rsi,[rip+0xffffffffffffe7b4]        # 3960 <readfd>
    51ac:	lea    rdi,[rip+0xffffffffffffe72d]        # 38e0 <writefd>
    51b3:	mov    ebx,eax
    51b5:	call   50d0 <new_connection>
    51ba:	test   rax,rax
    51bd:	je     51d0 <accept_connection+0x40>
    51bf:	mov    DWORD PTR [rax+0x10],ebx
    51c2:	mov    BYTE PTR [rax+0x1c],bpl
    51c6:	add    rsp,0x8
    51ca:	pop    rbx
    51cb:	pop    rbp
    51cc:	ret    
    51cd:	nop    DWORD PTR [rax]
    51d0:	add    rsp,0x8
    51d4:	mov    edi,ebx
    51d6:	pop    rbx
    51d7:	pop    rbp
    51d8:	jmp    2930 <close@plt>
    51dd:	nop    DWORD PTR [rax]

00000000000051e0 <remember_string>:
    51e0:	push   r12
    51e2:	push   rbp
    51e3:	mov    r12,rdi
    51e6:	push   rbx
    51e7:	mov    rdi,rsi
    51ea:	mov    rbp,rsi
    51ed:	call   2800 <strlen@plt>
    51f2:	lea    rbx,[rax+0x1]
    51f6:	mov    rdi,rbx
    51f9:	call   2a50 <malloc@plt>
    51fe:	test   rax,rax
    5201:	je     5228 <remember_string+0x48>
    5203:	mov    rdx,rbx
    5206:	mov    rsi,rbp
    5209:	mov    rdi,rax
    520c:	call   2a20 <memcpy@plt>
    5211:	pop    rbx
    5212:	mov    rdi,r12
    5215:	mov    edx,0x1
    521a:	mov    rsi,rax
    521d:	pop    rbp
    521e:	pop    r12
    5220:	jmp    f010 <hashtable_insert>
    5225:	nop    DWORD PTR [rax]
    5228:	pop    rbx
    5229:	xor    eax,eax
    522b:	pop    rbp
    522c:	pop    r12
    522e:	ret    
    522f:	nop

0000000000005230 <corrupt>:
    5230:	push   r12
    5232:	push   rbp
    5233:	mov    rbp,rsi
    5236:	push   rbx
    5237:	mov    rbx,rdi
    523a:	sub    rsp,0xd0
    5241:	test   al,al
    5243:	mov    QWORD PTR [rsp+0x30],rdx
    5248:	mov    QWORD PTR [rsp+0x38],rcx
    524d:	mov    QWORD PTR [rsp+0x40],r8
    5252:	mov    QWORD PTR [rsp+0x48],r9
    5257:	je     5290 <corrupt+0x60>
    5259:	movaps XMMWORD PTR [rsp+0x50],xmm0
    525e:	movaps XMMWORD PTR [rsp+0x60],xmm1
    5263:	movaps XMMWORD PTR [rsp+0x70],xmm2
    5268:	movaps XMMWORD PTR [rsp+0x80],xmm3
    5270:	movaps XMMWORD PTR [rsp+0x90],xmm4
    5278:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    5280:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    5288:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    5290:	mov    rax,QWORD PTR fs:0x28
    5299:	mov    QWORD PTR [rsp+0x18],rax
    529e:	xor    eax,eax
    52a0:	call   2750 <__errno_location@plt>
    52a5:	mov    rdx,rsp
    52a8:	mov    rsi,rbp
    52ab:	xor    edi,edi
    52ad:	mov    r12d,DWORD PTR [rax]
    52b0:	lea    rax,[rsp+0xf0]
    52b8:	mov    DWORD PTR [rsp],0x10
    52bf:	mov    DWORD PTR [rsp+0x4],0x30
    52c7:	mov    QWORD PTR [rsp+0x8],rax
    52cc:	lea    rax,[rsp+0x20]
    52d1:	mov    QWORD PTR [rsp+0x10],rax
    52d6:	call   b460 <talloc_vasprintf>
    52db:	mov    edi,r12d
    52de:	mov    rbp,rax
    52e1:	call   2c30 <strerror@plt>
    52e6:	test   rbx,rbx
    52e9:	mov    edx,0xffffffff
    52ee:	je     52f3 <corrupt+0xc3>
    52f0:	mov    edx,DWORD PTR [rbx+0x18]
    52f3:	lea    rsi,[rip+0xac1e]        # ff18 <_IO_stdin_used+0x6b8>
    52fa:	mov    rcx,rax
    52fd:	xor    edi,edi
    52ff:	xor    eax,eax
    5301:	mov    r8,rbp
    5304:	call   b950 <talloc_asprintf>
    5309:	test   rax,rax
    530c:	mov    rbx,rax
    530f:	je     5370 <corrupt+0x140>
    5311:	lea    rdi,[rip+0xa5bc]        # f8d4 <_IO_stdin_used+0x74>
    5318:	mov    rsi,rax
    531b:	xor    eax,eax
    531d:	call   3d00 <trace>
    5322:	lea    rdx,[rip+0xa5b4]        # f8dd <_IO_stdin_used+0x7d>
    5329:	mov    edi,0x3
    532e:	mov    rcx,rbx
    5331:	mov    esi,0x1
    5336:	xor    eax,eax
    5338:	call   2b60 <__syslog_chk@plt>
    533d:	mov    rdi,rbx
    5340:	call   a6a0 <talloc_free>
    5345:	call   5b90 <check_store>
    534a:	mov    rax,QWORD PTR [rsp+0x18]
    534f:	xor    rax,QWORD PTR fs:0x28
    5358:	jne    5398 <corrupt+0x168>
    535a:	add    rsp,0xd0
    5361:	pop    rbx
    5362:	pop    rbp
    5363:	pop    r12
    5365:	ret    
    5366:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5370:	lea    rdi,[rip+0xaa51]        # fdc8 <_IO_stdin_used+0x568>
    5377:	xor    eax,eax
    5379:	call   3d00 <trace>
    537e:	lea    rdx,[rip+0xaa43]        # fdc8 <_IO_stdin_used+0x568>
    5385:	mov    esi,0x1
    538a:	mov    edi,0x3
    538f:	xor    eax,eax
    5391:	call   2b60 <__syslog_chk@plt>
    5396:	jmp    5345 <corrupt+0x115>
    5398:	call   2820 <__stack_chk_fail@plt>
    539d:	nop    DWORD PTR [rax]

00000000000053a0 <write_node_raw>:
    53a0:	push   r14
    53a2:	push   r13
    53a4:	mov    r13,rdi
    53a7:	push   r12
    53a9:	push   rbp
    53aa:	mov    r12,rsi
    53ad:	push   rbx
    53ae:	mov    rbx,rdx
    53b1:	mov    edx,DWORD PTR [rdx+0x18]
    53b4:	mov    eax,DWORD PTR [rbx+0x28]
    53b7:	mov    ecx,DWORD PTR [rbx+0x38]
    53ba:	add    rax,rcx
    53bd:	lea    r14,[rax+rdx*8+0x18]
    53c2:	call   7ae0 <domain_is_unprivileged>
    53c7:	test   al,al
    53c9:	je     53db <write_node_raw+0x3b>
    53cb:	movsxd rax,DWORD PTR [rip+0x210c42]        # 216014 <quota_max_entry_size>
    53d2:	cmp    r14,rax
    53d5:	jae    5480 <write_node_raw+0xe0>
    53db:	lea    rdx,[rip+0xa5cb]        # f9ad <_IO_stdin_used+0x14d>
    53e2:	mov    rsi,r14
    53e5:	mov    rdi,rbx
    53e8:	call   a240 <talloc_named_const>
    53ed:	mov    rbp,rax
    53f0:	mov    rax,QWORD PTR [rbx+0x10]
    53f4:	lea    rcx,[rbp+0x14]
    53f8:	mov    QWORD PTR [rbp+0x0],rax
    53fc:	mov    eax,DWORD PTR [rbx+0x18]
    53ff:	mov    rdi,rcx
    5402:	mov    DWORD PTR [rbp+0x8],eax
    5405:	mov    eax,DWORD PTR [rbx+0x28]
    5408:	mov    DWORD PTR [rbp+0xc],eax
    540b:	mov    eax,DWORD PTR [rbx+0x38]
    540e:	mov    DWORD PTR [rbp+0x10],eax
    5411:	mov    edx,DWORD PTR [rbx+0x18]
    5414:	mov    rsi,QWORD PTR [rbx+0x20]
    5418:	shl    rdx,0x3
    541c:	call   2a20 <memcpy@plt>
    5421:	mov    rcx,rax
    5424:	mov    eax,DWORD PTR [rbx+0x18]
    5427:	mov    edx,DWORD PTR [rbx+0x28]
    542a:	mov    rsi,QWORD PTR [rbx+0x30]
    542e:	lea    rcx,[rcx+rax*8]
    5432:	mov    rdi,rcx
    5435:	call   2a20 <memcpy@plt>
    543a:	mov    edi,DWORD PTR [rbx+0x28]
    543d:	mov    edx,DWORD PTR [rbx+0x38]
    5440:	mov    rsi,QWORD PTR [rbx+0x40]
    5444:	add    rdi,rax
    5447:	call   2a20 <memcpy@plt>
    544c:	mov    rsi,QWORD PTR [r12]
    5450:	mov    rdx,QWORD PTR [r12+0x8]
    5455:	mov    r9d,0x1
    545b:	mov    rdi,QWORD PTR [rip+0x210e7e]        # 2162e0 <tdb_ctx>
    5462:	mov    rcx,rbp
    5465:	mov    r8,r14
    5468:	call   e040 <tdb_store>
    546d:	test   eax,eax
    546f:	jne    54a0 <write_node_raw+0x100>
    5475:	pop    rbx
    5476:	pop    rbp
    5477:	pop    r12
    5479:	pop    r13
    547b:	pop    r14
    547d:	ret    
    547e:	xchg   ax,ax
    5480:	call   2750 <__errno_location@plt>
    5485:	mov    DWORD PTR [rax],0x1c
    548b:	mov    eax,0x1c
    5490:	pop    rbx
    5491:	pop    rbp
    5492:	pop    r12
    5494:	pop    r13
    5496:	pop    r14
    5498:	ret    
    5499:	nop    DWORD PTR [rax+0x0]
    54a0:	mov    rdx,QWORD PTR [r12]
    54a4:	lea    rsi,[rip+0xa517]        # f9c2 <_IO_stdin_used+0x162>
    54ab:	mov    rdi,r13
    54ae:	xor    eax,eax
    54b0:	call   5230 <corrupt>
    54b5:	call   2750 <__errno_location@plt>
    54ba:	mov    DWORD PTR [rax],0x5
    54c0:	mov    eax,0x5
    54c5:	pop    rbx
    54c6:	pop    rbp
    54c7:	pop    r12
    54c9:	pop    r13
    54cb:	pop    r14
    54cd:	ret    
    54ce:	xchg   ax,ax

00000000000054d0 <write_node>:
    54d0:	push   r12
    54d2:	push   rbp
    54d3:	mov    edx,0x1
    54d8:	push   rbx
    54d9:	mov    r12,rsi
    54dc:	mov    rbx,rdi
    54df:	sub    rsp,0x20
    54e3:	mov    rbp,rsp
    54e6:	mov    rcx,rbp
    54e9:	mov    rax,QWORD PTR fs:0x28
    54f2:	mov    QWORD PTR [rsp+0x18],rax
    54f7:	xor    eax,eax
    54f9:	call   8ce0 <access_node>
    54fe:	test   eax,eax
    5500:	je     5528 <write_node+0x58>
    5502:	call   2750 <__errno_location@plt>
    5507:	mov    eax,DWORD PTR [rax]
    5509:	mov    rcx,QWORD PTR [rsp+0x18]
    550e:	xor    rcx,QWORD PTR fs:0x28
    5517:	jne    5538 <write_node+0x68>
    5519:	add    rsp,0x20
    551d:	pop    rbx
    551e:	pop    rbp
    551f:	pop    r12
    5521:	ret    
    5522:	nop    WORD PTR [rax+rax*1+0x0]
    5528:	mov    rdx,r12
    552b:	mov    rsi,rbp
    552e:	mov    rdi,rbx
    5531:	call   53a0 <write_node_raw>
    5536:	jmp    5509 <write_node+0x39>
    5538:	call   2820 <__stack_chk_fail@plt>
    553d:	nop    DWORD PTR [rax]

0000000000005540 <remove_child_entry>:
    5540:	push   r14
    5542:	push   r13
    5544:	mov    r14,rdx
    5547:	push   r12
    5549:	push   rbp
    554a:	mov    rbp,rdi
    554d:	push   rbx
    554e:	mov    r12,QWORD PTR [rsi+0x40]
    5552:	mov    rbx,rsi
    5555:	lea    rdi,[r12+rdx*1]
    5559:	call   2800 <strlen@plt>
    555e:	mov    edx,DWORD PTR [rbx+0x38]
    5561:	lea    esi,[rax+0x1]
    5564:	mov    edi,r14d
    5567:	mov    r13,rax
    556a:	not    r13d
    556d:	sub    edx,r14d
    5570:	sub    edx,esi
    5572:	add    rsi,rdi
    5575:	add    rdi,r12
    5578:	add    rsi,r12
    557b:	call   2b50 <memmove@plt>
    5580:	add    DWORD PTR [rbx+0x38],r13d
    5584:	mov    rsi,rbx
    5587:	mov    rdi,rbp
    558a:	pop    rbx
    558b:	pop    rbp
    558c:	pop    r12
    558e:	pop    r13
    5590:	pop    r14
    5592:	jmp    54d0 <write_node>
    5597:	nop    WORD PTR [rax+rax*1+0x0]

00000000000055a0 <check_store_>:
    55a0:	push   r15
    55a2:	push   r14
    55a4:	mov    rdx,rdi
    55a7:	push   r13
    55a9:	push   r12
    55ab:	mov    r15,rsi
    55ae:	push   rbp
    55af:	push   rbx
    55b0:	mov    rbx,rdi
    55b3:	sub    rsp,0x28
    55b7:	mov    QWORD PTR [rsp+0x18],rsi
    55bc:	mov    rsi,rdi
    55bf:	xor    edi,edi
    55c1:	call   3ea0 <read_node>
    55c6:	test   rax,rax
    55c9:	je     57f8 <check_store_+0x258>
    55cf:	lea    rdx,[rip+0xffffffffffffe36a]        # 3940 <keys_equal_fn>
    55d6:	lea    rsi,[rip+0xffffffffffffe1a3]        # 3780 <hash_from_key_fn>
    55dd:	mov    edi,0x10
    55e2:	mov    rbp,rax
    55e5:	call   eeb0 <create_hashtable>
    55ea:	mov    rsi,rbx
    55ed:	mov    rdi,r15
    55f0:	mov    QWORD PTR [rsp+0x10],rax
    55f5:	call   51e0 <remember_string>
    55fa:	test   eax,eax
    55fc:	je     5968 <check_store_+0x3c8>
    5602:	mov    eax,DWORD PTR [rbp+0x38]
    5605:	xor    r12d,r12d
    5608:	xor    r13d,r13d
    560b:	test   eax,eax
    560d:	je     5730 <check_store_+0x190>
    5613:	mov    rbx,QWORD PTR [rbp+0x40]
    5617:	add    rbx,r12
    561a:	mov    rdi,rbx
    561d:	call   2800 <strlen@plt>
    5622:	mov    rdx,QWORD PTR [rbp+0x0]
    5626:	lea    rdi,[rip+0xa366]        # f993 <_IO_stdin_used+0x133>
    562d:	mov    ecx,0x2
    5632:	mov    QWORD PTR [rsp+0x8],rax
    5637:	mov    rsi,rdx
    563a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    563c:	seta   al
    563f:	sbb    al,0x0
    5641:	test   al,al
    5643:	jne    5750 <check_store_+0x1b0>
    5649:	lea    rsi,[rip+0xa347]        # f997 <_IO_stdin_used+0x137>
    5650:	mov    rdx,rbx
    5653:	xor    edi,edi
    5655:	xor    eax,eax
    5657:	call   b950 <talloc_asprintf>
    565c:	mov    rbx,rax
    565f:	test   rbx,rbx
    5662:	je     576f <check_store_+0x1cf>
    5668:	xor    edi,edi
    566a:	mov    rdx,rbx
    566d:	mov    rsi,rbx
    5670:	call   3ea0 <read_node>
    5675:	test   rax,rax
    5678:	mov    r14,rax
    567b:	je     57d0 <check_store_+0x230>
    5681:	mov    rdi,QWORD PTR [rsp+0x10]
    5686:	mov    rsi,rbx
    5689:	call   f240 <hashtable_search>
    568e:	test   rax,rax
    5691:	je     58d0 <check_store_+0x330>
    5697:	lea    rsi,[rip+0xa8b2]        # ff50 <_IO_stdin_used+0x6f0>
    569e:	mov    rdx,rbx
    56a1:	xor    edi,edi
    56a3:	xor    eax,eax
    56a5:	call   b950 <talloc_asprintf>
    56aa:	test   rax,rax
    56ad:	mov    r13,rax
    56b0:	je     58a0 <check_store_+0x300>
    56b6:	lea    rdi,[rip+0xa217]        # f8d4 <_IO_stdin_used+0x74>
    56bd:	mov    rsi,rax
    56c0:	xor    eax,eax
    56c2:	call   3d00 <trace>
    56c7:	lea    rdx,[rip+0xa20f]        # f8dd <_IO_stdin_used+0x7d>
    56ce:	mov    edi,0x3
    56d3:	mov    rcx,r13
    56d6:	mov    esi,0x1
    56db:	xor    eax,eax
    56dd:	call   2b60 <__syslog_chk@plt>
    56e2:	mov    rdi,r13
    56e5:	call   a6a0 <talloc_free>
    56ea:	movzx  r15d,BYTE PTR [rip+0x210932]        # 216024 <recovery>
    56f2:	test   r15b,r15b
    56f5:	jne    5878 <check_store_+0x2d8>
    56fb:	mov    r15d,0x1
    5701:	xor    r13d,r13d
    5704:	mov    rdi,r14
    5707:	call   a6a0 <talloc_free>
    570c:	mov    rdi,rbx
    570f:	call   a6a0 <talloc_free>
    5714:	mov    rax,QWORD PTR [rsp+0x8]
    5719:	lea    r12,[r12+rax*1+0x1]
    571e:	mov    eax,DWORD PTR [rbp+0x38]
    5721:	cmp    rax,r12
    5724:	jbe    5730 <check_store_+0x190>
    5726:	test   r15b,r15b
    5729:	jne    5613 <check_store_+0x73>
    572f:	nop
    5730:	mov    rdi,QWORD PTR [rsp+0x10]
    5735:	xor    esi,esi
    5737:	call   f3b0 <hashtable_destroy>
    573c:	mov    rdi,rbp
    573f:	call   a6a0 <talloc_free>
    5744:	jmp    5860 <check_store_+0x2c0>
    5749:	nop    DWORD PTR [rax+0x0]
    5750:	lea    rsi,[rip+0xa23e]        # f995 <_IO_stdin_used+0x135>
    5757:	mov    rcx,rbx
    575a:	xor    edi,edi
    575c:	xor    eax,eax
    575e:	call   b950 <talloc_asprintf>
    5763:	mov    rbx,rax
    5766:	test   rbx,rbx
    5769:	jne    5668 <check_store_+0xc8>
    576f:	lea    rsi,[rip+0xa25f]        # f9d5 <_IO_stdin_used+0x175>
    5776:	xor    edi,edi
    5778:	xor    eax,eax
    577a:	call   b950 <talloc_asprintf>
    577f:	test   rax,rax
    5782:	mov    rbx,rax
    5785:	je     5ac0 <check_store_+0x520>
    578b:	lea    rdi,[rip+0xa142]        # f8d4 <_IO_stdin_used+0x74>
    5792:	mov    rsi,rax
    5795:	xor    eax,eax
    5797:	mov    r13d,0xc
    579d:	call   3d00 <trace>
    57a2:	lea    rdx,[rip+0xa134]        # f8dd <_IO_stdin_used+0x7d>
    57a9:	mov    rcx,rbx
    57ac:	mov    esi,0x1
    57b1:	mov    edi,0x3
    57b6:	xor    eax,eax
    57b8:	call   2b60 <__syslog_chk@plt>
    57bd:	mov    rdi,rbx
    57c0:	call   a6a0 <talloc_free>
    57c5:	jmp    5730 <check_store_+0x190>
    57ca:	nop    WORD PTR [rax+rax*1+0x0]
    57d0:	call   2750 <__errno_location@plt>
    57d5:	mov    r13d,DWORD PTR [rax]
    57d8:	cmp    r13d,0xc
    57dc:	je     5900 <check_store_+0x360>
    57e2:	mov    rdx,rbx
    57e5:	lea    rsi,[rip+0xa78c]        # ff78 <_IO_stdin_used+0x718>
    57ec:	jmp    56a1 <check_store_+0x101>
    57f1:	nop    DWORD PTR [rax+0x0]
    57f8:	call   2750 <__errno_location@plt>
    57fd:	mov    r13d,DWORD PTR [rax]
    5800:	cmp    r13d,0xc
    5804:	je     5a00 <check_store_+0x460>
    580a:	lea    rsi,[rip+0xa78f]        # ffa0 <_IO_stdin_used+0x740>
    5811:	mov    rdx,rbx
    5814:	xor    edi,edi
    5816:	xor    eax,eax
    5818:	call   b950 <talloc_asprintf>
    581d:	test   rax,rax
    5820:	mov    rbx,rax
    5823:	je     5a90 <check_store_+0x4f0>
    5829:	lea    rdi,[rip+0xa0a4]        # f8d4 <_IO_stdin_used+0x74>
    5830:	mov    rsi,rax
    5833:	xor    eax,eax
    5835:	xor    r13d,r13d
    5838:	call   3d00 <trace>
    583d:	lea    rdx,[rip+0xa099]        # f8dd <_IO_stdin_used+0x7d>
    5844:	mov    rcx,rbx
    5847:	mov    esi,0x1
    584c:	mov    edi,0x3
    5851:	xor    eax,eax
    5853:	call   2b60 <__syslog_chk@plt>
    5858:	mov    rdi,rbx
    585b:	call   a6a0 <talloc_free>
    5860:	add    rsp,0x28
    5864:	mov    eax,r13d
    5867:	pop    rbx
    5868:	pop    rbp
    5869:	pop    r12
    586b:	pop    r13
    586d:	pop    r14
    586f:	pop    r15
    5871:	ret    
    5872:	nop    WORD PTR [rax+rax*1+0x0]
    5878:	mov    rdx,r12
    587b:	mov    rsi,rbp
    587e:	xor    edi,edi
    5880:	call   5540 <remove_child_entry>
    5885:	sub    r12,0x1
    5889:	xor    r13d,r13d
    588c:	sub    r12,QWORD PTR [rsp+0x8]
    5891:	jmp    5704 <check_store_+0x164>
    5896:	nop    WORD PTR cs:[rax+rax*1+0x0]
    58a0:	lea    rdi,[rip+0xa521]        # fdc8 <_IO_stdin_used+0x568>
    58a7:	xor    eax,eax
    58a9:	call   3d00 <trace>
    58ae:	lea    rdx,[rip+0xa513]        # fdc8 <_IO_stdin_used+0x568>
    58b5:	mov    esi,0x1
    58ba:	mov    edi,0x3
    58bf:	xor    eax,eax
    58c1:	call   2b60 <__syslog_chk@plt>
    58c6:	jmp    56ea <check_store_+0x14a>
    58cb:	nop    DWORD PTR [rax+rax*1+0x0]
    58d0:	mov    rdi,QWORD PTR [rsp+0x10]
    58d5:	mov    rsi,rbx
    58d8:	call   51e0 <remember_string>
    58dd:	test   eax,eax
    58df:	je     5af8 <check_store_+0x558>
    58e5:	mov    rsi,QWORD PTR [rsp+0x18]
    58ea:	mov    rdi,rbx
    58ed:	call   55a0 <check_store_>
    58f2:	test   eax,eax
    58f4:	mov    r13d,eax
    58f7:	sete   r15b
    58fb:	jmp    5704 <check_store_+0x164>
    5900:	lea    rsi,[rip+0xa0ce]        # f9d5 <_IO_stdin_used+0x175>
    5907:	xor    edi,edi
    5909:	xor    eax,eax
    590b:	call   b950 <talloc_asprintf>
    5910:	test   rax,rax
    5913:	mov    r12,rax
    5916:	je     59d0 <check_store_+0x430>
    591c:	lea    rdi,[rip+0x9fb1]        # f8d4 <_IO_stdin_used+0x74>
    5923:	mov    rsi,rax
    5926:	xor    eax,eax
    5928:	call   3d00 <trace>
    592d:	lea    rdx,[rip+0x9fa9]        # f8dd <_IO_stdin_used+0x7d>
    5934:	mov    edi,0x3
    5939:	mov    rcx,r12
    593c:	mov    esi,0x1
    5941:	xor    eax,eax
    5943:	call   2b60 <__syslog_chk@plt>
    5948:	mov    rdi,r12
    594b:	call   a6a0 <talloc_free>
    5950:	xor    edi,edi
    5952:	call   a6a0 <talloc_free>
    5957:	mov    rdi,rbx
    595a:	call   a6a0 <talloc_free>
    595f:	jmp    5730 <check_store_+0x190>
    5964:	nop    DWORD PTR [rax+0x0]
    5968:	mov    rdi,QWORD PTR [rsp+0x10]
    596d:	xor    esi,esi
    596f:	call   f3b0 <hashtable_destroy>
    5974:	lea    rsi,[rip+0xa05a]        # f9d5 <_IO_stdin_used+0x175>
    597b:	xor    edi,edi
    597d:	xor    eax,eax
    597f:	call   b950 <talloc_asprintf>
    5984:	test   rax,rax
    5987:	mov    rbx,rax
    598a:	je     5a58 <check_store_+0x4b8>
    5990:	lea    rdi,[rip+0x9f3d]        # f8d4 <_IO_stdin_used+0x74>
    5997:	mov    rsi,rax
    599a:	xor    eax,eax
    599c:	mov    r13d,0xc
    59a2:	call   3d00 <trace>
    59a7:	lea    rdx,[rip+0x9f2f]        # f8dd <_IO_stdin_used+0x7d>
    59ae:	mov    rcx,rbx
    59b1:	mov    esi,0x1
    59b6:	mov    edi,0x3
    59bb:	xor    eax,eax
    59bd:	call   2b60 <__syslog_chk@plt>
    59c2:	mov    rdi,rbx
    59c5:	call   a6a0 <talloc_free>
    59ca:	jmp    5860 <check_store_+0x2c0>
    59cf:	nop
    59d0:	lea    rdi,[rip+0xa3f1]        # fdc8 <_IO_stdin_used+0x568>
    59d7:	xor    eax,eax
    59d9:	call   3d00 <trace>
    59de:	lea    rdx,[rip+0xa3e3]        # fdc8 <_IO_stdin_used+0x568>
    59e5:	mov    esi,0x1
    59ea:	mov    edi,0x3
    59ef:	xor    eax,eax
    59f1:	call   2b60 <__syslog_chk@plt>
    59f6:	jmp    5950 <check_store_+0x3b0>
    59fb:	nop    DWORD PTR [rax+rax*1+0x0]
    5a00:	lea    rsi,[rip+0x9fce]        # f9d5 <_IO_stdin_used+0x175>
    5a07:	xor    edi,edi
    5a09:	xor    eax,eax
    5a0b:	call   b950 <talloc_asprintf>
    5a10:	test   rax,rax
    5a13:	mov    rbx,rax
    5a16:	je     5a58 <check_store_+0x4b8>
    5a18:	lea    rdi,[rip+0x9eb5]        # f8d4 <_IO_stdin_used+0x74>
    5a1f:	mov    rsi,rax
    5a22:	xor    eax,eax
    5a24:	call   3d00 <trace>
    5a29:	lea    rdx,[rip+0x9ead]        # f8dd <_IO_stdin_used+0x7d>
    5a30:	mov    rcx,rbx
    5a33:	mov    esi,0x1
    5a38:	mov    edi,0x3
    5a3d:	xor    eax,eax
    5a3f:	call   2b60 <__syslog_chk@plt>
    5a44:	mov    rdi,rbx
    5a47:	call   a6a0 <talloc_free>
    5a4c:	jmp    5860 <check_store_+0x2c0>
    5a51:	nop    DWORD PTR [rax+0x0]
    5a58:	lea    rdi,[rip+0xa369]        # fdc8 <_IO_stdin_used+0x568>
    5a5f:	xor    eax,eax
    5a61:	mov    r13d,0xc
    5a67:	call   3d00 <trace>
    5a6c:	lea    rdx,[rip+0xa355]        # fdc8 <_IO_stdin_used+0x568>
    5a73:	mov    esi,0x1
    5a78:	mov    edi,0x3
    5a7d:	xor    eax,eax
    5a7f:	call   2b60 <__syslog_chk@plt>
    5a84:	jmp    5860 <check_store_+0x2c0>
    5a89:	nop    DWORD PTR [rax+0x0]
    5a90:	lea    rdi,[rip+0xa331]        # fdc8 <_IO_stdin_used+0x568>
    5a97:	xor    eax,eax
    5a99:	xor    r13d,r13d
    5a9c:	call   3d00 <trace>
    5aa1:	lea    rdx,[rip+0xa320]        # fdc8 <_IO_stdin_used+0x568>
    5aa8:	mov    esi,0x1
    5aad:	mov    edi,0x3
    5ab2:	xor    eax,eax
    5ab4:	call   2b60 <__syslog_chk@plt>
    5ab9:	jmp    5860 <check_store_+0x2c0>
    5abe:	xchg   ax,ax
    5ac0:	lea    rdi,[rip+0xa301]        # fdc8 <_IO_stdin_used+0x568>
    5ac7:	xor    eax,eax
    5ac9:	mov    r13d,0xc
    5acf:	call   3d00 <trace>
    5ad4:	lea    rdx,[rip+0xa2ed]        # fdc8 <_IO_stdin_used+0x568>
    5adb:	mov    esi,0x1
    5ae0:	mov    edi,0x3
    5ae5:	xor    eax,eax
    5ae7:	call   2b60 <__syslog_chk@plt>
    5aec:	jmp    5730 <check_store_+0x190>
    5af1:	nop    DWORD PTR [rax+0x0]
    5af8:	lea    rsi,[rip+0x9ed6]        # f9d5 <_IO_stdin_used+0x175>
    5aff:	xor    edi,edi
    5b01:	call   b950 <talloc_asprintf>
    5b06:	test   rax,rax
    5b09:	mov    r12,rax
    5b0c:	je     5b5d <check_store_+0x5bd>
    5b0e:	lea    rdi,[rip+0x9dbf]        # f8d4 <_IO_stdin_used+0x74>
    5b15:	mov    rsi,rax
    5b18:	xor    eax,eax
    5b1a:	call   3d00 <trace>
    5b1f:	lea    rdx,[rip+0x9db7]        # f8dd <_IO_stdin_used+0x7d>
    5b26:	mov    edi,0x3
    5b2b:	mov    rcx,r12
    5b2e:	mov    esi,0x1
    5b33:	xor    eax,eax
    5b35:	call   2b60 <__syslog_chk@plt>
    5b3a:	mov    rdi,r12
    5b3d:	call   a6a0 <talloc_free>
    5b42:	mov    rdi,r14
    5b45:	mov    r13d,0xc
    5b4b:	call   a6a0 <talloc_free>
    5b50:	mov    rdi,rbx
    5b53:	call   a6a0 <talloc_free>
    5b58:	jmp    5730 <check_store_+0x190>
    5b5d:	lea    rdi,[rip+0xa264]        # fdc8 <_IO_stdin_used+0x568>
    5b64:	xor    eax,eax
    5b66:	call   3d00 <trace>
    5b6b:	lea    rdx,[rip+0xa256]        # fdc8 <_IO_stdin_used+0x568>
    5b72:	mov    esi,0x1
    5b77:	mov    edi,0x3
    5b7c:	xor    eax,eax
    5b7e:	call   2b60 <__syslog_chk@plt>
    5b83:	jmp    5b42 <check_store_+0x5a2>
    5b85:	nop
    5b86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005b90 <check_store>:
    5b90:	push   r12
    5b92:	lea    rsi,[rip+0x9dfa]        # f993 <_IO_stdin_used+0x133>
    5b99:	push   rbp
    5b9a:	push   rbx
    5b9b:	xor    edi,edi
    5b9d:	call   b2f0 <talloc_strdup>
    5ba2:	lea    rdx,[rip+0xffffffffffffdd97]        # 3940 <keys_equal_fn>
    5ba9:	lea    rsi,[rip+0xffffffffffffdbd0]        # 3780 <hash_from_key_fn>
    5bb0:	mov    edi,0x10
    5bb5:	mov    r12,rax
    5bb8:	call   eeb0 <create_hashtable>
    5bbd:	test   rax,rax
    5bc0:	je     5d00 <check_store+0x170>
    5bc6:	lea    rsi,[rip+0x9e1c]        # f9e9 <_IO_stdin_used+0x189>
    5bcd:	xor    edi,edi
    5bcf:	mov    rbx,rax
    5bd2:	xor    eax,eax
    5bd4:	call   b950 <talloc_asprintf>
    5bd9:	test   rax,rax
    5bdc:	mov    rbp,rax
    5bdf:	je     5c98 <check_store+0x108>
    5be5:	lea    rdi,[rip+0x9ce8]        # f8d4 <_IO_stdin_used+0x74>
    5bec:	mov    rsi,rax
    5bef:	xor    eax,eax
    5bf1:	call   3d00 <trace>
    5bf6:	lea    rdx,[rip+0x9ce0]        # f8dd <_IO_stdin_used+0x7d>
    5bfd:	mov    rcx,rbp
    5c00:	mov    esi,0x1
    5c05:	xor    eax,eax
    5c07:	mov    edi,0x3
    5c0c:	call   2b60 <__syslog_chk@plt>
    5c11:	mov    rdi,rbp
    5c14:	call   a6a0 <talloc_free>
    5c19:	mov    rsi,rbx
    5c1c:	mov    rdi,r12
    5c1f:	call   55a0 <check_store_>
    5c24:	test   eax,eax
    5c26:	je     5cd1 <check_store+0x141>
    5c2c:	lea    rsi,[rip+0x9dc9]        # f9fc <_IO_stdin_used+0x19c>
    5c33:	xor    edi,edi
    5c35:	xor    eax,eax
    5c37:	call   b950 <talloc_asprintf>
    5c3c:	test   rax,rax
    5c3f:	mov    rbp,rax
    5c42:	je     5d50 <check_store+0x1c0>
    5c48:	lea    rdi,[rip+0x9c85]        # f8d4 <_IO_stdin_used+0x74>
    5c4f:	mov    rsi,rax
    5c52:	xor    eax,eax
    5c54:	call   3d00 <trace>
    5c59:	lea    rdx,[rip+0x9c7d]        # f8dd <_IO_stdin_used+0x7d>
    5c60:	mov    edi,0x3
    5c65:	mov    rcx,rbp
    5c68:	mov    esi,0x1
    5c6d:	xor    eax,eax
    5c6f:	call   2b60 <__syslog_chk@plt>
    5c74:	mov    rdi,rbp
    5c77:	call   a6a0 <talloc_free>
    5c7c:	mov    rdi,rbx
    5c7f:	xor    esi,esi
    5c81:	call   f3b0 <hashtable_destroy>
    5c86:	pop    rbx
    5c87:	mov    rdi,r12
    5c8a:	pop    rbp
    5c8b:	pop    r12
    5c8d:	jmp    a6a0 <talloc_free>
    5c92:	nop    WORD PTR [rax+rax*1+0x0]
    5c98:	lea    rdi,[rip+0xa129]        # fdc8 <_IO_stdin_used+0x568>
    5c9f:	xor    eax,eax
    5ca1:	call   3d00 <trace>
    5ca6:	lea    rdx,[rip+0xa11b]        # fdc8 <_IO_stdin_used+0x568>
    5cad:	xor    eax,eax
    5caf:	mov    esi,0x1
    5cb4:	mov    edi,0x3
    5cb9:	call   2b60 <__syslog_chk@plt>
    5cbe:	mov    rsi,rbx
    5cc1:	mov    rdi,r12
    5cc4:	call   55a0 <check_store_>
    5cc9:	test   eax,eax
    5ccb:	jne    5c2c <check_store+0x9c>
    5cd1:	mov    rdi,rbx
    5cd4:	call   96c0 <check_transactions>
    5cd9:	test   eax,eax
    5cdb:	jne    5c2c <check_store+0x9c>
    5ce1:	mov    rdi,QWORD PTR [rip+0x2105f8]        # 2162e0 <tdb_ctx>
    5ce8:	lea    rsi,[rip+0xffffffffffffe801]        # 44f0 <clean_store_>
    5cef:	mov    rdx,rbx
    5cf2:	call   dab0 <tdb_traverse>
    5cf7:	jmp    5c2c <check_store+0x9c>
    5cfc:	nop    DWORD PTR [rax+0x0]
    5d00:	lea    rsi,[rip+0x9cce]        # f9d5 <_IO_stdin_used+0x175>
    5d07:	xor    edi,edi
    5d09:	xor    eax,eax
    5d0b:	call   b950 <talloc_asprintf>
    5d10:	test   rax,rax
    5d13:	mov    rbx,rax
    5d16:	je     5d80 <check_store+0x1f0>
    5d18:	lea    rdi,[rip+0x9bb5]        # f8d4 <_IO_stdin_used+0x74>
    5d1f:	mov    rsi,rax
    5d22:	xor    eax,eax
    5d24:	call   3d00 <trace>
    5d29:	lea    rdx,[rip+0x9bad]        # f8dd <_IO_stdin_used+0x7d>
    5d30:	mov    rcx,rbx
    5d33:	mov    edi,0x3
    5d38:	mov    esi,0x1
    5d3d:	xor    eax,eax
    5d3f:	call   2b60 <__syslog_chk@plt>
    5d44:	mov    rdi,rbx
    5d47:	pop    rbx
    5d48:	pop    rbp
    5d49:	pop    r12
    5d4b:	jmp    a6a0 <talloc_free>
    5d50:	lea    rdi,[rip+0xa071]        # fdc8 <_IO_stdin_used+0x568>
    5d57:	xor    eax,eax
    5d59:	call   3d00 <trace>
    5d5e:	lea    rdx,[rip+0xa063]        # fdc8 <_IO_stdin_used+0x568>
    5d65:	mov    esi,0x1
    5d6a:	mov    edi,0x3
    5d6f:	xor    eax,eax
    5d71:	call   2b60 <__syslog_chk@plt>
    5d76:	jmp    5c7c <check_store+0xec>
    5d7b:	nop    DWORD PTR [rax+rax*1+0x0]
    5d80:	lea    rdi,[rip+0xa041]        # fdc8 <_IO_stdin_used+0x568>
    5d87:	xor    eax,eax
    5d89:	call   3d00 <trace>
    5d8e:	pop    rbx
    5d8f:	pop    rbp
    5d90:	pop    r12
    5d92:	lea    rdx,[rip+0xa02f]        # fdc8 <_IO_stdin_used+0x568>
    5d99:	mov    esi,0x1
    5d9e:	mov    edi,0x3
    5da3:	xor    eax,eax
    5da5:	jmp    2b60 <__syslog_chk@plt>
    5daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000005db0 <create_node>:
    5db0:	push   r13
    5db2:	push   r12
    5db4:	mov    r13,rcx
    5db7:	push   rbp
    5db8:	push   rbx
    5db9:	mov    rbp,rdi
    5dbc:	mov    ebx,r8d
    5dbf:	sub    rsp,0x8
    5dc3:	call   40c0 <construct_node>
    5dc8:	test   rax,rax
    5dcb:	mov    r12,rax
    5dce:	je     5e23 <create_node+0x73>
    5dd0:	mov    QWORD PTR [rax+0x30],r13
    5dd4:	lea    r13,[rip+0x10c5]        # 6ea0 <destroy_node>
    5ddb:	mov    DWORD PTR [rax+0x28],ebx
    5dde:	mov    rbx,rax
    5de1:	nop    DWORD PTR [rax+0x0]
    5de8:	mov    rsi,rbx
    5deb:	mov    rdi,rbp
    5dee:	call   54d0 <write_node>
    5df3:	test   eax,eax
    5df5:	jne    5e38 <create_node+0x88>
    5df7:	mov    rdi,rbx
    5dfa:	mov    rsi,r13
    5dfd:	call   a1f0 <talloc_set_destructor>
    5e02:	mov    rbx,QWORD PTR [rbx+0x8]
    5e06:	test   rbx,rbx
    5e09:	jne    5de8 <create_node+0x38>
    5e0b:	mov    rbx,r12
    5e0e:	xchg   ax,ax
    5e10:	xor    esi,esi
    5e12:	mov    rdi,rbx
    5e15:	call   a1f0 <talloc_set_destructor>
    5e1a:	mov    rbx,QWORD PTR [rbx+0x8]
    5e1e:	test   rbx,rbx
    5e21:	jne    5e10 <create_node+0x60>
    5e23:	add    rsp,0x8
    5e27:	mov    rax,r12
    5e2a:	pop    rbx
    5e2b:	pop    rbp
    5e2c:	pop    r12
    5e2e:	pop    r13
    5e30:	ret    
    5e31:	nop    DWORD PTR [rax+0x0]
    5e38:	mov    rsi,rbx
    5e3b:	mov    rdi,rbp
    5e3e:	xor    r12d,r12d
    5e41:	call   7f50 <domain_entry_dec>
    5e46:	add    rsp,0x8
    5e4a:	mov    rax,r12
    5e4d:	pop    rbx
    5e4e:	pop    rbp
    5e4f:	pop    r12
    5e51:	pop    r13
    5e53:	ret    
    5e54:	xchg   ax,ax
    5e56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005e60 <manual_node>:
    5e60:	push   r12
    5e62:	push   rbp
    5e63:	lea    rdx,[rip+0x99ff]        # f869 <_IO_stdin_used+0x9>
    5e6a:	push   rbx
    5e6b:	mov    r12,rdi
    5e6e:	mov    rbp,rsi
    5e71:	xor    edi,edi
    5e73:	mov    esi,0x48
    5e78:	sub    rsp,0x10
    5e7c:	mov    rax,QWORD PTR fs:0x28
    5e85:	mov    QWORD PTR [rsp+0x8],rax
    5e8a:	xor    eax,eax
    5e8c:	mov    DWORD PTR [rsp],0x0
    5e93:	mov    DWORD PTR [rsp+0x4],0x0
    5e9b:	call   b280 <_talloc_zero>
    5ea0:	test   rax,rax
    5ea3:	je     5eff <manual_node+0x9f>
    5ea5:	mov    rbx,rax
    5ea8:	mov    QWORD PTR [rax],r12
    5eab:	test   rbp,rbp
    5eae:	mov    rax,rsp
    5eb1:	mov    DWORD PTR [rbx+0x18],0x1
    5eb8:	mov    QWORD PTR [rbx+0x40],rbp
    5ebc:	mov    QWORD PTR [rbx+0x20],rax
    5ec0:	je     5ed0 <manual_node+0x70>
    5ec2:	mov    rdi,rbp
    5ec5:	call   2800 <strlen@plt>
    5eca:	add    eax,0x1
    5ecd:	mov    DWORD PTR [rbx+0x38],eax
    5ed0:	xor    edi,edi
    5ed2:	mov    rsi,rbx
    5ed5:	call   54d0 <write_node>
    5eda:	test   eax,eax
    5edc:	jne    5f15 <manual_node+0xb5>
    5ede:	mov    rdi,rbx
    5ee1:	call   a6a0 <talloc_free>
    5ee6:	mov    rax,QWORD PTR [rsp+0x8]
    5eeb:	xor    rax,QWORD PTR fs:0x28
    5ef4:	jne    5f10 <manual_node+0xb0>
    5ef6:	add    rsp,0x10
    5efa:	pop    rbx
    5efb:	pop    rbp
    5efc:	pop    r12
    5efe:	ret    
    5eff:	lea    rdi,[rip+0xa0ca]        # ffd0 <_IO_stdin_used+0x770>
    5f06:	mov    rsi,r12
    5f09:	xor    eax,eax
    5f0b:	call   bf20 <barf_perror>
    5f10:	call   2820 <__stack_chk_fail@plt>
    5f15:	lea    rdi,[rip+0xa0dc]        # fff8 <_IO_stdin_used+0x798>
    5f1c:	mov    rsi,r12
    5f1f:	xor    eax,eax
    5f21:	call   bf20 <barf_perror>
    5f26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000005f30 <get_node>:
    5f30:	push   r15
    5f32:	push   r14
    5f34:	push   r13
    5f36:	push   r12
    5f38:	push   rbp
    5f39:	push   rbx
    5f3a:	sub    rsp,0x18
    5f3e:	test   rdx,rdx
    5f41:	je     6058 <get_node+0x128>
    5f47:	mov    r12,rdi
    5f4a:	mov    rdi,rdx
    5f4d:	mov    rbp,rsi
    5f50:	mov    rbx,rdx
    5f53:	mov    r14d,ecx
    5f56:	call   4f70 <is_valid_nodename>
    5f5b:	test   al,al
    5f5d:	je     6058 <get_node+0x128>
    5f63:	mov    rdx,rbx
    5f66:	mov    rsi,rbp
    5f69:	mov    rdi,r12
    5f6c:	call   3ea0 <read_node>
    5f71:	test   rax,rax
    5f74:	mov    r15,rax
    5f77:	je     6028 <get_node+0xf8>
    5f7d:	mov    edx,DWORD PTR [rax+0x18]
    5f80:	mov    rsi,QWORD PTR [rax+0x20]
    5f84:	mov    rdi,r12
    5f87:	call   3830 <perm_for_conn>
    5f8c:	and    eax,r14d
    5f8f:	cmp    eax,r14d
    5f92:	je     603f <get_node+0x10f>
    5f98:	call   2750 <__errno_location@plt>
    5f9d:	mov    DWORD PTR [rsp+0xc],0xd
    5fa5:	mov    r13,rax
    5fa8:	mov    DWORD PTR [rax],0xd
    5fae:	lea    r15,[rip+0x99de]        # f993 <_IO_stdin_used+0x133>
    5fb5:	jmp    5ffe <get_node+0xce>
    5fb7:	nop    WORD PTR [rax+rax*1+0x0]
    5fc0:	mov    rdx,rax
    5fc3:	mov    rsi,rbp
    5fc6:	mov    rdi,r12
    5fc9:	call   3ea0 <read_node>
    5fce:	test   rax,rax
    5fd1:	jne    6088 <get_node+0x158>
    5fd7:	mov    eax,DWORD PTR [r13+0x0]
    5fdb:	cmp    eax,0xc
    5fde:	je     6070 <get_node+0x140>
    5fe4:	mov    ecx,0x2
    5fe9:	mov    rsi,rbx
    5fec:	mov    rdi,r15
    5fef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5ff1:	seta   al
    5ff4:	sbb    al,0x0
    5ff6:	test   al,al
    5ff8:	je     60a8 <get_node+0x178>
    5ffe:	mov    rsi,rbx
    6001:	mov    rdi,rbp
    6004:	call   39e0 <get_parent>
    6009:	test   rax,rax
    600c:	mov    rbx,rax
    600f:	jne    5fc0 <get_node+0x90>
    6011:	mov    eax,DWORD PTR [r13+0x0]
    6015:	test   eax,eax
    6017:	jne    6070 <get_node+0x140>
    6019:	mov    DWORD PTR [rsp+0xc],0xd
    6021:	jmp    6074 <get_node+0x144>
    6023:	nop    DWORD PTR [rax+rax*1+0x0]
    6028:	call   2750 <__errno_location@plt>
    602d:	mov    r13,rax
    6030:	mov    eax,DWORD PTR [rax]
    6032:	cmp    eax,0xc
    6035:	mov    DWORD PTR [rsp+0xc],eax
    6039:	jne    5fae <get_node+0x7e>
    603f:	add    rsp,0x18
    6043:	mov    rax,r15
    6046:	pop    rbx
    6047:	pop    rbp
    6048:	pop    r12
    604a:	pop    r13
    604c:	pop    r14
    604e:	pop    r15
    6050:	ret    
    6051:	nop    DWORD PTR [rax+0x0]
    6058:	call   2750 <__errno_location@plt>
    605d:	xor    r15d,r15d
    6060:	mov    DWORD PTR [rax],0x16
    6066:	jmp    603f <get_node+0x10f>
    6068:	nop    DWORD PTR [rax+rax*1+0x0]
    6070:	mov    DWORD PTR [rsp+0xc],eax
    6074:	mov    eax,DWORD PTR [rsp+0xc]
    6078:	xor    r15d,r15d
    607b:	mov    DWORD PTR [r13+0x0],eax
    607f:	jmp    603f <get_node+0x10f>
    6081:	nop    DWORD PTR [rax+0x0]
    6088:	mov    edx,DWORD PTR [rax+0x18]
    608b:	mov    rsi,QWORD PTR [rax+0x20]
    608f:	mov    rdi,r12
    6092:	call   3830 <perm_for_conn>
    6097:	test   r14d,eax
    609a:	jne    6074 <get_node+0x144>
    609c:	jmp    6019 <get_node+0xe9>
    60a1:	nop    DWORD PTR [rax+0x0]
    60a8:	lea    rsi,[rip+0x9966]        # fa15 <_IO_stdin_used+0x1b5>
    60af:	mov    rdi,r12
    60b2:	xor    eax,eax
    60b4:	call   5230 <corrupt>
    60b9:	mov    DWORD PTR [rsp+0xc],0xd
    60c1:	jmp    6074 <get_node+0x144>
    60c3:	nop    DWORD PTR [rax]
    60c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000060d0 <get_node_canonicalized>:
    60d0:	push   r12
    60d2:	push   rbp
    60d3:	mov    r12,rsi
    60d6:	push   rbx
    60d7:	mov    rbx,rcx
    60da:	mov    rbp,rdi
    60dd:	sub    rsp,0x20
    60e1:	mov    rax,QWORD PTR fs:0x28
    60ea:	mov    QWORD PTR [rsp+0x18],rax
    60ef:	xor    eax,eax
    60f1:	lea    rax,[rsp+0x10]
    60f6:	test   rcx,rcx
    60f9:	cmove  rbx,rax
    60fd:	test   rdx,rdx
    6100:	je     6150 <get_node_canonicalized+0x80>
    6102:	movzx  eax,BYTE PTR [rdx]
    6105:	cmp    al,0x2f
    6107:	je     6150 <get_node_canonicalized+0x80>
    6109:	cmp    al,0x40
    610b:	je     6150 <get_node_canonicalized+0x80>
    610d:	mov    DWORD PTR [rsp+0xc],r8d
    6112:	mov    QWORD PTR [rsp],rdx
    6116:	call   7ea0 <get_implicit_path>
    611b:	test   rax,rax
    611e:	mov    rdx,QWORD PTR [rsp]
    6122:	mov    r8d,DWORD PTR [rsp+0xc]
    6127:	je     6150 <get_node_canonicalized+0x80>
    6129:	lea    rsi,[rip+0x9865]        # f995 <_IO_stdin_used+0x135>
    6130:	mov    rcx,rdx
    6133:	mov    rdi,r12
    6136:	mov    rdx,rax
    6139:	xor    eax,eax
    613b:	mov    DWORD PTR [rsp],r8d
    613f:	call   b950 <talloc_asprintf>
    6144:	mov    r8d,DWORD PTR [rsp]
    6148:	mov    rdx,rax
    614b:	nop    DWORD PTR [rax+rax*1+0x0]
    6150:	mov    rax,QWORD PTR [rsp+0x18]
    6155:	xor    rax,QWORD PTR fs:0x28
    615e:	mov    QWORD PTR [rbx],rdx
    6161:	jne    6179 <get_node_canonicalized+0xa9>
    6163:	add    rsp,0x20
    6167:	mov    rsi,r12
    616a:	mov    rdi,rbp
    616d:	pop    rbx
    616e:	pop    rbp
    616f:	pop    r12
    6171:	mov    ecx,r8d
    6174:	jmp    5f30 <get_node>
    6179:	call   2820 <__stack_chk_fail@plt>
    617e:	xchg   ax,ax

0000000000006180 <send_directory_part>:
    6180:	push   r15
    6182:	push   r14
    6184:	push   r13
    6186:	push   r12
    6188:	mov    r13,rsi
    618b:	push   rbp
    618c:	push   rbx
    618d:	mov    rbx,rdi
    6190:	sub    rsp,0x58
    6194:	mov    esi,DWORD PTR [rsi+0x14]
    6197:	mov    rdi,QWORD PTR [r13+0x28]
    619b:	mov    rax,QWORD PTR fs:0x28
    61a4:	mov    QWORD PTR [rsp+0x48],rax
    61a9:	xor    eax,eax
    61ab:	call   a060 <xs_count_strings>
    61b0:	cmp    eax,0x2
    61b3:	mov    edx,0x16
    61b8:	je     61e0 <send_directory_part+0x60>
    61ba:	mov    rbx,QWORD PTR [rsp+0x48]
    61bf:	xor    rbx,QWORD PTR fs:0x28
    61c8:	mov    eax,edx
    61ca:	jne    6441 <send_directory_part+0x2c1>
    61d0:	add    rsp,0x58
    61d4:	pop    rbx
    61d5:	pop    rbp
    61d6:	pop    r12
    61d8:	pop    r13
    61da:	pop    r14
    61dc:	pop    r15
    61de:	ret    
    61df:	nop
    61e0:	mov    rdx,QWORD PTR [r13+0x28]
    61e4:	xor    ecx,ecx
    61e6:	mov    r8d,0x1
    61ec:	mov    rsi,r13
    61ef:	mov    rdi,rbx
    61f2:	call   60d0 <get_node_canonicalized>
    61f7:	test   rax,rax
    61fa:	mov    r12,rax
    61fd:	je     63a0 <send_directory_part+0x220>
    6203:	mov    rbp,QWORD PTR [r13+0x28]
    6207:	mov    rdi,rbp
    620a:	call   2800 <strlen@plt>
    620f:	lea    rdi,[rbp+rax*1+0x1]
    6214:	xor    esi,esi
    6216:	mov    edx,0xa
    621b:	call   2a10 <strtol@plt>
    6220:	mov    r9,QWORD PTR [r12+0x10]
    6225:	lea    rdi,[rsp+0x30]
    622a:	lea    r8,[rip+0x9800]        # fa31 <_IO_stdin_used+0x1d1>
    6231:	mov    r15,rax
    6234:	mov    QWORD PTR [rsp+0x18],rax
    6239:	mov    DWORD PTR [rsp+0xc],eax
    623d:	mov    ecx,0x18
    6242:	xor    eax,eax
    6244:	mov    edx,0x1
    6249:	mov    esi,0x18
    624e:	mov    QWORD PTR [rsp+0x20],rdi
    6253:	call   26f0 <__snprintf_chk@plt>
    6258:	lea    ecx,[rax+0x1]
    625b:	mov    DWORD PTR [rsp+0x14],ecx
    625f:	mov    ecx,DWORD PTR [r12+0x38]
    6264:	cmp    r15d,ecx
    6267:	mov    DWORD PTR [rsp+0x10],ecx
    626b:	jae    6370 <send_directory_part+0x1f0>
    6271:	mov    eax,DWORD PTR [rsp+0x18]
    6275:	mov    r15,QWORD PTR [r12+0x40]
    627a:	mov    ebp,0xfff
    627f:	xor    r14d,r14d
    6282:	sub    ebp,DWORD PTR [rsp+0x14]
    6286:	mov    QWORD PTR [rsp+0x28],rax
    628b:	add    r15,rax
    628e:	jmp    62a7 <send_directory_part+0x127>
    6290:	lea    r14d,[r14+rax*1+0x1]
    6295:	lea    r15,[r15+rax*1+0x1]
    629a:	mov    eax,DWORD PTR [rsp+0xc]
    629e:	add    eax,r14d
    62a1:	cmp    DWORD PTR [rsp+0x10],eax
    62a5:	je     62ba <send_directory_part+0x13a>
    62a7:	mov    rdi,r15
    62aa:	call   2800 <strlen@plt>
    62af:	mov    edx,r14d
    62b2:	add    rdx,rax
    62b5:	cmp    rbp,rdx
    62b8:	ja     6290 <send_directory_part+0x110>
    62ba:	mov    r15d,DWORD PTR [rsp+0x14]
    62bf:	lea    rcx,[rip+0x95c5]        # f88b <_IO_stdin_used+0x2b>
    62c6:	mov    rdi,r13
    62c9:	mov    esi,0x1
    62ce:	lea    ebp,[r15+r14*1]
    62d2:	lea    edx,[rbp+0x1]
    62d5:	call   bad0 <_talloc_array>
    62da:	test   rax,rax
    62dd:	mov    r13,rax
    62e0:	mov    edx,0xc
    62e5:	je     61ba <send_directory_part+0x3a>
    62eb:	cmp    r15d,0x8
    62ef:	movsxd rdi,r15d
    62f2:	jae    63b0 <send_directory_part+0x230>
    62f8:	and    r15d,0x4
    62fc:	jne    6424 <send_directory_part+0x2a4>
    6302:	mov    ecx,DWORD PTR [rsp+0x14]
    6306:	test   ecx,ecx
    6308:	je     6330 <send_directory_part+0x1b0>
    630a:	mov    rax,QWORD PTR [rsp+0x20]
    630f:	and    ecx,0x2
    6312:	movzx  eax,BYTE PTR [rax]
    6315:	mov    BYTE PTR [r13+0x0],al
    6319:	je     6330 <send_directory_part+0x1b0>
    631b:	mov    eax,DWORD PTR [rsp+0x14]
    631f:	mov    rsi,QWORD PTR [rsp+0x20]
    6324:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
    6329:	mov    WORD PTR [r13+rax*1-0x2],dx
    632f:	nop
    6330:	mov    rsi,QWORD PTR [rsp+0x28]
    6335:	add    rsi,QWORD PTR [r12+0x40]
    633a:	add    rdi,r13
    633d:	mov    edx,r14d
    6340:	call   2a20 <memcpy@plt>
    6345:	mov    eax,DWORD PTR [rsp+0x18]
    6349:	add    eax,r14d
    634c:	cmp    eax,DWORD PTR [r12+0x38]
    6351:	je     6410 <send_directory_part+0x290>
    6357:	mov    rdx,r13
    635a:	mov    ecx,ebp
    635c:	mov    esi,0x16
    6361:	mov    rdi,rbx
    6364:	call   4a40 <send_reply>
    6369:	xor    edx,edx
    636b:	jmp    61ba <send_directory_part+0x3a>
    6370:	mov    r14d,DWORD PTR [rsp+0x14]
    6375:	mov    rdx,QWORD PTR [rsp+0x20]
    637a:	lea    ecx,[rax+0x2]
    637d:	mov    esi,0x16
    6382:	mov    rdi,rbx
    6385:	mov    BYTE PTR [rsp+r14*1+0x30],0x0
    638b:	call   4a40 <send_reply>
    6390:	xor    edx,edx
    6392:	jmp    61ba <send_directory_part+0x3a>
    6397:	nop    WORD PTR [rax+rax*1+0x0]
    63a0:	call   2750 <__errno_location@plt>
    63a5:	mov    edx,DWORD PTR [rax]
    63a7:	jmp    61ba <send_directory_part+0x3a>
    63ac:	nop    DWORD PTR [rax+0x0]
    63b0:	mov    rax,QWORD PTR [rsp+0x30]
    63b5:	mov    QWORD PTR [r13+0x0],rax
    63b9:	mov    eax,DWORD PTR [rsp+0x14]
    63bd:	mov    rcx,QWORD PTR [rsp+0x20]
    63c2:	mov    rdx,QWORD PTR [rcx+rax*1-0x8]
    63c7:	mov    r11,rax
    63ca:	mov    QWORD PTR [r13+rax*1-0x8],rdx
    63cf:	lea    rdx,[r13+0x8]
    63d3:	mov    rax,r13
    63d6:	and    rdx,0xfffffffffffffff8
    63da:	sub    rax,rdx
    63dd:	sub    rcx,rax
    63e0:	add    eax,r11d
    63e3:	and    eax,0xfffffff8
    63e6:	mov    rsi,rcx
    63e9:	cmp    eax,0x8
    63ec:	jb     6330 <send_directory_part+0x1b0>
    63f2:	and    eax,0xfffffff8
    63f5:	xor    ecx,ecx
    63f7:	mov    r9d,ecx
    63fa:	add    ecx,0x8
    63fd:	mov    r10,QWORD PTR [rsi+r9*1]
    6401:	cmp    ecx,eax
    6403:	mov    QWORD PTR [rdx+r9*1],r10
    6407:	jb     63f7 <send_directory_part+0x277>
    6409:	jmp    6330 <send_directory_part+0x1b0>
    640e:	xchg   ax,ax
    6410:	mov    eax,DWORD PTR [rsp+0x14]
    6414:	mov    BYTE PTR [r13+rbp*1+0x0],0x0
    641a:	lea    ebp,[rax+r14*1+0x1]
    641f:	jmp    6357 <send_directory_part+0x1d7>
    6424:	mov    rsi,QWORD PTR [rsp+0x20]
    6429:	mov    eax,DWORD PTR [rsi]
    642b:	mov    DWORD PTR [r13+0x0],eax
    642f:	mov    eax,DWORD PTR [rsp+0x14]
    6433:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
    6437:	mov    DWORD PTR [r13+rax*1-0x4],edx
    643c:	jmp    6330 <send_directory_part+0x1b0>
    6441:	call   2820 <__stack_chk_fail@plt>
    6446:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006450 <do_set_perms>:
    6450:	push   r15
    6452:	push   r14
    6454:	push   r13
    6456:	push   r12
    6458:	mov    r13,rdi
    645b:	push   rbp
    645c:	push   rbx
    645d:	mov    rbx,rsi
    6460:	sub    rsp,0x28
    6464:	mov    esi,DWORD PTR [rsi+0x14]
    6467:	mov    rdi,QWORD PTR [rbx+0x28]
    646b:	mov    rax,QWORD PTR fs:0x28
    6474:	mov    QWORD PTR [rsp+0x18],rax
    6479:	xor    eax,eax
    647b:	call   a060 <xs_count_strings>
    6480:	mov    ebp,eax
    6482:	mov    eax,0x16
    6487:	cmp    ebp,0x1
    648a:	jbe    6504 <do_set_perms+0xb4>
    648c:	mov    rdx,QWORD PTR [rbx+0x28]
    6490:	lea    rcx,[rsp+0x10]
    6495:	mov    r8d,0xa
    649b:	mov    rsi,rbx
    649e:	mov    rdi,r13
    64a1:	call   60d0 <get_node_canonicalized>
    64a6:	test   rax,rax
    64a9:	mov    r12,rax
    64ac:	je     64fd <do_set_perms+0xad>
    64ae:	mov    r14,QWORD PTR [rbx+0x28]
    64b2:	sub    ebp,0x1
    64b5:	mov    rdi,r14
    64b8:	call   2800 <strlen@plt>
    64bd:	lea    rcx,[rip+0x9571]        # fa35 <_IO_stdin_used+0x1d5>
    64c4:	mov    edx,ebp
    64c6:	mov    esi,0x8
    64cb:	mov    rdi,r12
    64ce:	mov    QWORD PTR [rsp+0x8],rax
    64d3:	call   bad0 <_talloc_array>
    64d8:	mov    r15,rax
    64db:	mov    eax,0xc
    64e0:	test   r15,r15
    64e3:	je     6504 <do_set_perms+0xb4>
    64e5:	mov    rax,QWORD PTR [rsp+0x8]
    64ea:	mov    esi,ebp
    64ec:	mov    rdi,r15
    64ef:	lea    rdx,[r14+rax*1+0x1]
    64f4:	call   9ef0 <xs_strings_to_perms>
    64f9:	test   al,al
    64fb:	jne    6530 <do_set_perms+0xe0>
    64fd:	call   2750 <__errno_location@plt>
    6502:	mov    eax,DWORD PTR [rax]
    6504:	mov    rcx,QWORD PTR [rsp+0x18]
    6509:	xor    rcx,QWORD PTR fs:0x28
    6512:	jne    65b4 <do_set_perms+0x164>
    6518:	add    rsp,0x28
    651c:	pop    rbx
    651d:	pop    rbp
    651e:	pop    r12
    6520:	pop    r13
    6522:	pop    r14
    6524:	pop    r15
    6526:	ret    
    6527:	nop    WORD PTR [rax+rax*1+0x0]
    6530:	mov    rdi,r13
    6533:	call   7ae0 <domain_is_unprivileged>
    6538:	test   al,al
    653a:	je     654d <do_set_perms+0xfd>
    653c:	mov    rdx,QWORD PTR [r12+0x20]
    6541:	mov    eax,0x1
    6546:	mov    edx,DWORD PTR [rdx]
    6548:	cmp    DWORD PTR [r15],edx
    654b:	jne    6504 <do_set_perms+0xb4>
    654d:	mov    rsi,r12
    6550:	mov    rdi,r13
    6553:	call   7f50 <domain_entry_dec>
    6558:	mov    rsi,r12
    655b:	mov    rdi,r13
    655e:	mov    QWORD PTR [r12+0x20],r15
    6563:	mov    DWORD PTR [r12+0x18],ebp
    6568:	call   7ed0 <domain_entry_inc>
    656d:	mov    rsi,r12
    6570:	mov    rdi,r13
    6573:	call   54d0 <write_node>
    6578:	test   eax,eax
    657a:	jne    64fd <do_set_perms+0xad>
    657c:	mov    rdx,QWORD PTR [rsp+0x10]
    6581:	xor    ecx,ecx
    6583:	mov    rsi,rbx
    6586:	mov    rdi,r13
    6589:	mov    DWORD PTR [rsp+0x8],eax
    658d:	call   70b0 <fire_watches>
    6592:	lea    rdx,[rip+0x93f6]        # f98f <_IO_stdin_used+0x12f>
    6599:	mov    ecx,0x3
    659e:	mov    esi,0xe
    65a3:	mov    rdi,r13
    65a6:	call   4a40 <send_reply>
    65ab:	mov    eax,DWORD PTR [rsp+0x8]
    65af:	jmp    6504 <do_set_perms+0xb4>
    65b4:	call   2820 <__stack_chk_fail@plt>
    65b9:	nop    DWORD PTR [rax+0x0]

00000000000065c0 <do_mkdir>:
    65c0:	push   r13
    65c2:	push   r12
    65c4:	xor    r13d,r13d
    65c7:	push   rbp
    65c8:	push   rbx
    65c9:	mov    r12,rdi
    65cc:	mov    rbx,rsi
    65cf:	sub    rsp,0x18
    65d3:	mov    ebp,DWORD PTR [rsi+0x14]
    65d6:	mov    rax,QWORD PTR fs:0x28
    65df:	mov    QWORD PTR [rsp+0x8],rax
    65e4:	xor    eax,eax
    65e6:	test   ebp,ebp
    65e8:	je     65ff <do_mkdir+0x3f>
    65ea:	lea    rsi,[rsi+0x28]
    65ee:	xor    edx,edx
    65f0:	mov    edi,ebp
    65f2:	call   3a50 <get_string.isra.1>
    65f7:	cmp    ebp,eax
    65f9:	je     6698 <do_mkdir+0xd8>
    65ff:	mov    rcx,rsp
    6602:	mov    r8d,0x2
    6608:	mov    rdx,r13
    660b:	mov    rsi,rbx
    660e:	mov    rdi,r12
    6611:	call   60d0 <get_node_canonicalized>
    6616:	test   rax,rax
    6619:	je     6658 <do_mkdir+0x98>
    661b:	lea    rdx,[rip+0x936d]        # f98f <_IO_stdin_used+0x12f>
    6622:	mov    ecx,0x3
    6627:	mov    esi,0xc
    662c:	mov    rdi,r12
    662f:	call   4a40 <send_reply>
    6634:	xor    eax,eax
    6636:	mov    rdx,QWORD PTR [rsp+0x8]
    663b:	xor    rdx,QWORD PTR fs:0x28
    6644:	jne    66ad <do_mkdir+0xed>
    6646:	add    rsp,0x18
    664a:	pop    rbx
    664b:	pop    rbp
    664c:	pop    r12
    664e:	pop    r13
    6650:	ret    
    6651:	nop    DWORD PTR [rax+0x0]
    6658:	call   2750 <__errno_location@plt>
    665d:	mov    rbp,rax
    6660:	mov    eax,DWORD PTR [rax]
    6662:	cmp    eax,0x2
    6665:	jne    6636 <do_mkdir+0x76>
    6667:	mov    rdx,QWORD PTR [rsp]
    666b:	xor    r8d,r8d
    666e:	xor    ecx,ecx
    6670:	mov    rsi,rbx
    6673:	mov    rdi,r12
    6676:	call   5db0 <create_node>
    667b:	test   rax,rax
    667e:	je     66a8 <do_mkdir+0xe8>
    6680:	mov    rdx,QWORD PTR [rsp]
    6684:	xor    ecx,ecx
    6686:	mov    rsi,rbx
    6689:	mov    rdi,r12
    668c:	call   70b0 <fire_watches>
    6691:	jmp    661b <do_mkdir+0x5b>
    6693:	nop    DWORD PTR [rax+rax*1+0x0]
    6698:	mov    r13,QWORD PTR [rbx+0x28]
    669c:	jmp    65ff <do_mkdir+0x3f>
    66a1:	nop    DWORD PTR [rax+0x0]
    66a8:	mov    eax,DWORD PTR [rbp+0x0]
    66ab:	jmp    6636 <do_mkdir+0x76>
    66ad:	call   2820 <__stack_chk_fail@plt>
    66b2:	nop    DWORD PTR [rax+0x0]
    66b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000066c0 <do_write>:
    66c0:	push   r14
    66c2:	push   r13
    66c4:	mov    edx,0x1
    66c9:	push   r12
    66cb:	push   rbp
    66cc:	mov    rbp,rsi
    66cf:	push   rbx
    66d0:	mov    r12,rdi
    66d3:	mov    rdi,rbp
    66d6:	sub    rsp,0x20
    66da:	lea    rsi,[rsp+0x10]
    66df:	mov    QWORD PTR [rsp+0x10],0x0
    66e8:	mov    rax,QWORD PTR fs:0x28
    66f1:	mov    QWORD PTR [rsp+0x18],rax
    66f6:	xor    eax,eax
    66f8:	call   49c0 <get_strings>
    66fd:	test   eax,eax
    66ff:	mov    edx,0x16
    6704:	je     6790 <do_write+0xd0>
    670a:	mov    r14,QWORD PTR [rsp+0x10]
    670f:	mov    rdi,r14
    6712:	call   2800 <strlen@plt>
    6717:	mov    r13d,DWORD PTR [rbp+0x14]
    671b:	lea    ebx,[rax+0x1]
    671e:	lea    rcx,[rsp+0x8]
    6723:	mov    r8d,0x2
    6729:	mov    rdx,r14
    672c:	mov    rsi,rbp
    672f:	mov    rdi,r12
    6732:	sub    r13d,ebx
    6735:	call   60d0 <get_node_canonicalized>
    673a:	test   rax,rax
    673d:	je     67b0 <do_write+0xf0>
    673f:	add    rbx,QWORD PTR [rbp+0x28]
    6743:	mov    rsi,rax
    6746:	mov    DWORD PTR [rax+0x28],r13d
    674a:	mov    rdi,r12
    674d:	mov    QWORD PTR [rax+0x30],rbx
    6751:	call   54d0 <write_node>
    6756:	test   eax,eax
    6758:	jne    67f0 <do_write+0x130>
    675e:	mov    rdx,QWORD PTR [rsp+0x8]
    6763:	xor    ecx,ecx
    6765:	mov    rsi,rbp
    6768:	mov    rdi,r12
    676b:	call   70b0 <fire_watches>
    6770:	lea    rdx,[rip+0x9218]        # f98f <_IO_stdin_used+0x12f>
    6777:	mov    ecx,0x3
    677c:	mov    esi,0xb
    6781:	mov    rdi,r12
    6784:	call   4a40 <send_reply>
    6789:	xor    edx,edx
    678b:	nop    DWORD PTR [rax+rax*1+0x0]
    6790:	mov    rcx,QWORD PTR [rsp+0x18]
    6795:	xor    rcx,QWORD PTR fs:0x28
    679e:	mov    eax,edx
    67a0:	jne    67f9 <do_write+0x139>
    67a2:	add    rsp,0x20
    67a6:	pop    rbx
    67a7:	pop    rbp
    67a8:	pop    r12
    67aa:	pop    r13
    67ac:	pop    r14
    67ae:	ret    
    67af:	nop
    67b0:	call   2750 <__errno_location@plt>
    67b5:	mov    edx,DWORD PTR [rax]
    67b7:	mov    r14,rax
    67ba:	cmp    edx,0x2
    67bd:	jne    6790 <do_write+0xd0>
    67bf:	mov    ecx,ebx
    67c1:	add    rcx,QWORD PTR [rbp+0x28]
    67c5:	mov    rdx,QWORD PTR [rsp+0x8]
    67ca:	mov    r8d,r13d
    67cd:	mov    rsi,rbp
    67d0:	mov    rdi,r12
    67d3:	call   5db0 <create_node>
    67d8:	test   rax,rax
    67db:	jne    675e <do_write+0x9e>
    67e1:	mov    edx,DWORD PTR [r14]
    67e4:	jmp    6790 <do_write+0xd0>
    67e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    67f0:	call   2750 <__errno_location@plt>
    67f5:	mov    edx,DWORD PTR [rax]
    67f7:	jmp    6790 <do_write+0xd0>
    67f9:	call   2820 <__stack_chk_fail@plt>
    67fe:	xchg   ax,ax

0000000000006800 <do_get_perms>:
    6800:	push   r15
    6802:	push   r14
    6804:	mov    r15,rdi
    6807:	push   r13
    6809:	push   r12
    680b:	xor    r12d,r12d
    680e:	push   rbp
    680f:	push   rbx
    6810:	mov    rbx,rsi
    6813:	sub    rsp,0x38
    6817:	mov    ebp,DWORD PTR [rsi+0x14]
    681a:	mov    rax,QWORD PTR fs:0x28
    6823:	mov    QWORD PTR [rsp+0x28],rax
    6828:	xor    eax,eax
    682a:	test   ebp,ebp
    682c:	je     6843 <do_get_perms+0x43>
    682e:	lea    rsi,[rsi+0x28]
    6832:	xor    edx,edx
    6834:	mov    edi,ebp
    6836:	call   3a50 <get_string.isra.1>
    683b:	cmp    ebp,eax
    683d:	je     69b0 <do_get_perms+0x1b0>
    6843:	xor    ecx,ecx
    6845:	mov    r8d,0x1
    684b:	mov    rdx,r12
    684e:	mov    rsi,rbx
    6851:	mov    rdi,r15
    6854:	call   60d0 <get_node_canonicalized>
    6859:	test   rax,rax
    685c:	mov    r14,rax
    685f:	je     6980 <do_get_perms+0x180>
    6865:	mov    eax,DWORD PTR [rax+0x18]
    6868:	mov    rbp,QWORD PTR [r14+0x20]
    686c:	test   eax,eax
    686e:	je     6980 <do_get_perms+0x180>
    6874:	sub    eax,0x1
    6877:	lea    rbx,[rsp+0x1c]
    687c:	xor    r13d,r13d
    687f:	lea    rax,[rbp+rax*8+0x8]
    6884:	xor    r12d,r12d
    6887:	mov    QWORD PTR [rsp+0x8],rax
    688c:	mov    edx,0xc
    6891:	mov    rsi,rbx
    6894:	mov    rdi,rbp
    6897:	call   9fe0 <xs_perm_to_string>
    689c:	test   al,al
    689e:	je     6980 <do_get_perms+0x180>
    68a4:	mov    rdx,rbx
    68a7:	mov    ecx,DWORD PTR [rdx]
    68a9:	add    rdx,0x4
    68ad:	lea    eax,[rcx-0x1010101]
    68b3:	not    ecx
    68b5:	and    eax,ecx
    68b7:	and    eax,0x80808080
    68bc:	je     68a7 <do_get_perms+0xa7>
    68be:	mov    ecx,eax
    68c0:	lea    r8,[rip+0x8fc4]        # f88b <_IO_stdin_used+0x2b>
    68c7:	mov    rdi,r14
    68ca:	shr    ecx,0x10
    68cd:	test   eax,0x8080
    68d2:	cmove  eax,ecx
    68d5:	lea    rcx,[rdx+0x2]
    68d9:	mov    esi,eax
    68db:	cmove  rdx,rcx
    68df:	add    sil,al
    68e2:	mov    rsi,r12
    68e5:	sbb    rdx,0x3
    68e9:	sub    rdx,rbx
    68ec:	lea    ecx,[r13+rdx*1+0x1]
    68f1:	mov    edx,0x1
    68f6:	call   bb30 <_talloc_realloc_array>
    68fb:	test   rax,rax
    68fe:	mov    r12,rax
    6901:	je     6980 <do_get_perms+0x180>
    6903:	mov    edi,r13d
    6906:	mov    rsi,rbx
    6909:	add    rdi,rax
    690c:	call   2780 <strcpy@plt>
    6911:	mov    rdx,rbx
    6914:	mov    ecx,DWORD PTR [rdx]
    6916:	add    rdx,0x4
    691a:	lea    eax,[rcx-0x1010101]
    6920:	not    ecx
    6922:	and    eax,ecx
    6924:	and    eax,0x80808080
    6929:	je     6914 <do_get_perms+0x114>
    692b:	mov    ecx,eax
    692d:	shr    ecx,0x10
    6930:	test   eax,0x8080
    6935:	cmove  eax,ecx
    6938:	lea    rcx,[rdx+0x2]
    693c:	mov    esi,eax
    693e:	cmove  rdx,rcx
    6942:	add    sil,al
    6945:	sbb    rdx,0x3
    6949:	add    rbp,0x8
    694d:	sub    rdx,rbx
    6950:	cmp    rbp,QWORD PTR [rsp+0x8]
    6955:	lea    r13d,[r13+rdx*1+0x1]
    695a:	jne    688c <do_get_perms+0x8c>
    6960:	mov    ecx,r13d
    6963:	mov    rdx,r12
    6966:	mov    esi,0x3
    696b:	mov    rdi,r15
    696e:	call   4a40 <send_reply>
    6973:	xor    eax,eax
    6975:	jmp    6987 <do_get_perms+0x187>
    6977:	nop    WORD PTR [rax+rax*1+0x0]
    6980:	call   2750 <__errno_location@plt>
    6985:	mov    eax,DWORD PTR [rax]
    6987:	mov    rsi,QWORD PTR [rsp+0x28]
    698c:	xor    rsi,QWORD PTR fs:0x28
    6995:	jne    69b9 <do_get_perms+0x1b9>
    6997:	add    rsp,0x38
    699b:	pop    rbx
    699c:	pop    rbp
    699d:	pop    r12
    699f:	pop    r13
    69a1:	pop    r14
    69a3:	pop    r15
    69a5:	ret    
    69a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    69b0:	mov    r12,QWORD PTR [rbx+0x28]
    69b4:	jmp    6843 <do_get_perms+0x43>
    69b9:	call   2820 <__stack_chk_fail@plt>
    69be:	xchg   ax,ax

00000000000069c0 <do_read>:
    69c0:	push   r13
    69c2:	push   r12
    69c4:	xor    r13d,r13d
    69c7:	push   rbp
    69c8:	push   rbx
    69c9:	mov    r12,rdi
    69cc:	mov    rbx,rsi
    69cf:	sub    rsp,0x8
    69d3:	mov    ebp,DWORD PTR [rsi+0x14]
    69d6:	test   ebp,ebp
    69d8:	je     69eb <do_read+0x2b>
    69da:	lea    rsi,[rsi+0x28]
    69de:	xor    edx,edx
    69e0:	mov    edi,ebp
    69e2:	call   3a50 <get_string.isra.1>
    69e7:	cmp    ebp,eax
    69e9:	je     6a48 <do_read+0x88>
    69eb:	xor    ecx,ecx
    69ed:	mov    r8d,0x1
    69f3:	mov    rdx,r13
    69f6:	mov    rsi,rbx
    69f9:	mov    rdi,r12
    69fc:	call   60d0 <get_node_canonicalized>
    6a01:	test   rax,rax
    6a04:	je     6a30 <do_read+0x70>
    6a06:	mov    ecx,DWORD PTR [rax+0x28]
    6a09:	mov    rdx,QWORD PTR [rax+0x30]
    6a0d:	mov    rdi,r12
    6a10:	mov    esi,0x2
    6a15:	call   4a40 <send_reply>
    6a1a:	add    rsp,0x8
    6a1e:	xor    eax,eax
    6a20:	pop    rbx
    6a21:	pop    rbp
    6a22:	pop    r12
    6a24:	pop    r13
    6a26:	ret    
    6a27:	nop    WORD PTR [rax+rax*1+0x0]
    6a30:	call   2750 <__errno_location@plt>
    6a35:	mov    eax,DWORD PTR [rax]
    6a37:	add    rsp,0x8
    6a3b:	pop    rbx
    6a3c:	pop    rbp
    6a3d:	pop    r12
    6a3f:	pop    r13
    6a41:	ret    
    6a42:	nop    WORD PTR [rax+rax*1+0x0]
    6a48:	mov    r13,QWORD PTR [rbx+0x28]
    6a4c:	jmp    69eb <do_read+0x2b>
    6a4e:	xchg   ax,ax

0000000000006a50 <send_directory>:
    6a50:	push   r13
    6a52:	push   r12
    6a54:	xor    r13d,r13d
    6a57:	push   rbp
    6a58:	push   rbx
    6a59:	mov    r12,rdi
    6a5c:	mov    rbx,rsi
    6a5f:	sub    rsp,0x8
    6a63:	mov    ebp,DWORD PTR [rsi+0x14]
    6a66:	test   ebp,ebp
    6a68:	je     6a7b <send_directory+0x2b>
    6a6a:	lea    rsi,[rsi+0x28]
    6a6e:	xor    edx,edx
    6a70:	mov    edi,ebp
    6a72:	call   3a50 <get_string.isra.1>
    6a77:	cmp    ebp,eax
    6a79:	je     6ad8 <send_directory+0x88>
    6a7b:	xor    ecx,ecx
    6a7d:	mov    r8d,0x1
    6a83:	mov    rdx,r13
    6a86:	mov    rsi,rbx
    6a89:	mov    rdi,r12
    6a8c:	call   60d0 <get_node_canonicalized>
    6a91:	test   rax,rax
    6a94:	je     6ac0 <send_directory+0x70>
    6a96:	mov    ecx,DWORD PTR [rax+0x38]
    6a99:	mov    rdx,QWORD PTR [rax+0x40]
    6a9d:	mov    rdi,r12
    6aa0:	mov    esi,0x1
    6aa5:	call   4a40 <send_reply>
    6aaa:	add    rsp,0x8
    6aae:	xor    eax,eax
    6ab0:	pop    rbx
    6ab1:	pop    rbp
    6ab2:	pop    r12
    6ab4:	pop    r13
    6ab6:	ret    
    6ab7:	nop    WORD PTR [rax+rax*1+0x0]
    6ac0:	call   2750 <__errno_location@plt>
    6ac5:	mov    eax,DWORD PTR [rax]
    6ac7:	add    rsp,0x8
    6acb:	pop    rbx
    6acc:	pop    rbp
    6acd:	pop    r12
    6acf:	pop    r13
    6ad1:	ret    
    6ad2:	nop    WORD PTR [rax+rax*1+0x0]
    6ad8:	mov    r13,QWORD PTR [rbx+0x28]
    6adc:	jmp    6a7b <send_directory+0x2b>
    6ade:	xchg   ax,ax

0000000000006ae0 <delete_node>:
    6ae0:	push   r15
    6ae2:	push   r14
    6ae4:	mov    edx,0x2
    6ae9:	push   r13
    6aeb:	push   r12
    6aed:	mov    r13,rdi
    6af0:	push   rbp
    6af1:	push   rbx
    6af2:	mov    rbx,rsi
    6af5:	sub    rsp,0x28
    6af9:	mov    rcx,rsp
    6afc:	mov    rax,QWORD PTR fs:0x28
    6b05:	mov    QWORD PTR [rsp+0x18],rax
    6b0a:	xor    eax,eax
    6b0c:	call   8ce0 <access_node>
    6b11:	test   eax,eax
    6b13:	je     6bd0 <delete_node+0xf0>
    6b19:	mov    eax,DWORD PTR [rbx+0x38]
    6b1c:	test   eax,eax
    6b1e:	je     6b98 <delete_node+0xb8>
    6b20:	mov    r15,QWORD PTR [rbx+0x40]
    6b24:	lea    r14,[rip+0x8e6a]        # f995 <_IO_stdin_used+0x135>
    6b2b:	xor    r12d,r12d
    6b2e:	mov    ebp,r12d
    6b31:	mov    rdx,QWORD PTR [rbx]
    6b34:	xor    eax,eax
    6b36:	lea    rcx,[r15+rbp*1]
    6b3a:	mov    rsi,r14
    6b3d:	mov    rdi,rbx
    6b40:	call   b950 <talloc_asprintf>
    6b45:	test   rax,rax
    6b48:	mov    r15,rax
    6b4b:	je     6b60 <delete_node+0x80>
    6b4d:	mov    rdx,rax
    6b50:	mov    rsi,rbx
    6b53:	mov    rdi,r13
    6b56:	call   3ea0 <read_node>
    6b5b:	test   rax,rax
    6b5e:	jne    6bc0 <delete_node+0xe0>
    6b60:	mov    rdx,QWORD PTR [rbx+0x40]
    6b64:	mov    rsi,QWORD PTR [rbx]
    6b67:	lea    rdi,[rip+0x94b2]        # 10020 <_IO_stdin_used+0x7c0>
    6b6e:	xor    eax,eax
    6b70:	add    rdx,rbp
    6b73:	call   3d00 <trace>
    6b78:	mov    rdi,r15
    6b7b:	call   a6a0 <talloc_free>
    6b80:	mov    r15,QWORD PTR [rbx+0x40]
    6b84:	lea    rdi,[r15+rbp*1]
    6b88:	call   2800 <strlen@plt>
    6b8d:	lea    r12d,[r12+rax*1+0x1]
    6b92:	cmp    DWORD PTR [rbx+0x38],r12d
    6b96:	ja     6b2e <delete_node+0x4e>
    6b98:	mov    rax,QWORD PTR [rsp+0x18]
    6b9d:	xor    rax,QWORD PTR fs:0x28
    6ba6:	jne    6c18 <delete_node+0x138>
    6ba8:	add    rsp,0x28
    6bac:	pop    rbx
    6bad:	pop    rbp
    6bae:	pop    r12
    6bb0:	pop    r13
    6bb2:	pop    r14
    6bb4:	pop    r15
    6bb6:	ret    
    6bb7:	nop    WORD PTR [rax+rax*1+0x0]
    6bc0:	mov    rsi,rax
    6bc3:	mov    rdi,r13
    6bc6:	call   6ae0 <delete_node>
    6bcb:	jmp    6b78 <delete_node+0x98>
    6bcd:	nop    DWORD PTR [rax]
    6bd0:	mov    rsi,QWORD PTR [rsp]
    6bd4:	mov    rdx,QWORD PTR [rsp+0x8]
    6bd9:	mov    rdi,QWORD PTR [rip+0x20f700]        # 2162e0 <tdb_ctx>
    6be0:	call   e000 <tdb_delete>
    6be5:	test   eax,eax
    6be7:	je     6c08 <delete_node+0x128>
    6be9:	mov    rdx,QWORD PTR [rbx]
    6bec:	lea    rsi,[rip+0x8e58]        # fa4b <_IO_stdin_used+0x1eb>
    6bf3:	mov    rdi,r13
    6bf6:	xor    eax,eax
    6bf8:	call   5230 <corrupt>
    6bfd:	jmp    6b19 <delete_node+0x39>
    6c02:	nop    WORD PTR [rax+rax*1+0x0]
    6c08:	mov    rsi,rbx
    6c0b:	mov    rdi,r13
    6c0e:	call   7f50 <domain_entry_dec>
    6c13:	jmp    6b19 <delete_node+0x39>
    6c18:	call   2820 <__stack_chk_fail@plt>
    6c1d:	nop    DWORD PTR [rax]

0000000000006c20 <do_rm>:
    6c20:	push   r15
    6c22:	push   r14
    6c24:	push   r13
    6c26:	push   r12
    6c28:	xor    r13d,r13d
    6c2b:	push   rbp
    6c2c:	push   rbx
    6c2d:	mov    r12,rdi
    6c30:	mov    rbx,rsi
    6c33:	sub    rsp,0x38
    6c37:	mov    ebp,DWORD PTR [rsi+0x14]
    6c3a:	mov    rax,QWORD PTR fs:0x28
    6c43:	mov    QWORD PTR [rsp+0x28],rax
    6c48:	xor    eax,eax
    6c4a:	test   ebp,ebp
    6c4c:	je     6c63 <do_rm+0x43>
    6c4e:	lea    rsi,[rsi+0x28]
    6c52:	xor    edx,edx
    6c54:	mov    edi,ebp
    6c56:	call   3a50 <get_string.isra.1>
    6c5b:	cmp    ebp,eax
    6c5d:	je     6e40 <do_rm+0x220>
    6c63:	lea    rcx,[rsp+0x20]
    6c68:	mov    rdx,r13
    6c6b:	mov    r8d,0x2
    6c71:	mov    rsi,rbx
    6c74:	mov    rdi,r12
    6c77:	call   60d0 <get_node_canonicalized>
    6c7c:	test   rax,rax
    6c7f:	mov    r13,rax
    6c82:	je     6df0 <do_rm+0x1d0>
    6c88:	mov    rbp,QWORD PTR [rsp+0x20]
    6c8d:	lea    rdi,[rip+0x8cff]        # f993 <_IO_stdin_used+0x133>
    6c94:	mov    ecx,0x2
    6c99:	mov    rsi,rbp
    6c9c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6c9e:	seta   al
    6ca1:	sbb    al,0x0
    6ca3:	test   al,al
    6ca5:	je     6dc0 <do_rm+0x1a0>
    6cab:	mov    rsi,rbp
    6cae:	mov    rdi,rbx
    6cb1:	call   39e0 <get_parent>
    6cb6:	test   rax,rax
    6cb9:	je     6e68 <do_rm+0x248>
    6cbf:	mov    rdx,rax
    6cc2:	mov    rsi,rbx
    6cc5:	mov    rdi,r12
    6cc8:	call   3ea0 <read_node>
    6ccd:	test   rax,rax
    6cd0:	mov    QWORD PTR [rsp+0x18],rax
    6cd5:	je     6e50 <do_rm+0x230>
    6cdb:	mov    esi,0x2f
    6ce0:	mov    rdi,rbp
    6ce3:	call   2890 <strrchr@plt>
    6ce8:	mov    rdx,QWORD PTR [rsp+0x18]
    6ced:	add    rax,0x1
    6cf1:	mov    QWORD PTR [rsp],rax
    6cf5:	mov    eax,DWORD PTR [rdx+0x38]
    6cf8:	test   eax,eax
    6cfa:	mov    DWORD PTR [rsp+0x14],eax
    6cfe:	je     6da0 <do_rm+0x180>
    6d04:	mov    rax,QWORD PTR [rdx+0x40]
    6d08:	xor    ebp,ebp
    6d0a:	mov    QWORD PTR [rsp+0x8],rax
    6d0f:	jmp    6d2a <do_rm+0x10a>
    6d11:	nop    DWORD PTR [rax+0x0]
    6d18:	mov    rdi,r14
    6d1b:	call   2800 <strlen@plt>
    6d20:	lea    ebp,[rbp+rax*1+0x1]
    6d24:	cmp    ebp,DWORD PTR [rsp+0x14]
    6d28:	jae    6da0 <do_rm+0x180>
    6d2a:	mov    rax,QWORD PTR [rsp+0x8]
    6d2f:	mov    r15d,ebp
    6d32:	mov    rsi,QWORD PTR [rsp]
    6d36:	lea    r14,[rax+r15*1]
    6d3a:	mov    rdi,r14
    6d3d:	call   29c0 <strcmp@plt>
    6d42:	test   eax,eax
    6d44:	jne    6d18 <do_rm+0xf8>
    6d46:	mov    rsi,QWORD PTR [rsp+0x18]
    6d4b:	mov    rdx,r15
    6d4e:	mov    rdi,r12
    6d51:	call   5540 <remove_child_entry>
    6d56:	test   eax,eax
    6d58:	jne    6dc0 <do_rm+0x1a0>
    6d5a:	mov    rsi,r13
    6d5d:	mov    rdi,r12
    6d60:	call   6ae0 <delete_node>
    6d65:	mov    rdx,QWORD PTR [rsp+0x20]
    6d6a:	mov    ecx,0x1
    6d6f:	mov    rsi,rbx
    6d72:	mov    rdi,r12
    6d75:	call   70b0 <fire_watches>
    6d7a:	lea    rdx,[rip+0x8c0e]        # f98f <_IO_stdin_used+0x12f>
    6d81:	mov    ecx,0x3
    6d86:	mov    esi,0xd
    6d8b:	mov    rdi,r12
    6d8e:	xor    ebp,ebp
    6d90:	call   4a40 <send_reply>
    6d95:	jmp    6dc5 <do_rm+0x1a5>
    6d97:	nop    WORD PTR [rax+rax*1+0x0]
    6da0:	mov    rax,QWORD PTR [rsp+0x18]
    6da5:	mov    rdx,QWORD PTR [rsp]
    6da9:	lea    rsi,[rip+0x8cb1]        # fa61 <_IO_stdin_used+0x201>
    6db0:	mov    rdi,r12
    6db3:	mov    rcx,QWORD PTR [rax]
    6db6:	xor    eax,eax
    6db8:	call   5230 <corrupt>
    6dbd:	nop    DWORD PTR [rax]
    6dc0:	mov    ebp,0x16
    6dc5:	mov    rdx,QWORD PTR [rsp+0x28]
    6dca:	xor    rdx,QWORD PTR fs:0x28
    6dd3:	mov    eax,ebp
    6dd5:	jne    6e93 <do_rm+0x273>
    6ddb:	add    rsp,0x38
    6ddf:	pop    rbx
    6de0:	pop    rbp
    6de1:	pop    r12
    6de3:	pop    r13
    6de5:	pop    r14
    6de7:	pop    r15
    6de9:	ret    
    6dea:	nop    WORD PTR [rax+rax*1+0x0]
    6df0:	call   2750 <__errno_location@plt>
    6df5:	mov    ebp,DWORD PTR [rax]
    6df7:	mov    r13,rax
    6dfa:	cmp    ebp,0x2
    6dfd:	jne    6dc5 <do_rm+0x1a5>
    6dff:	mov    rsi,QWORD PTR [rsp+0x20]
    6e04:	mov    rdi,rbx
    6e07:	call   39e0 <get_parent>
    6e0c:	test   rax,rax
    6e0f:	je     6e80 <do_rm+0x260>
    6e11:	mov    rdx,rax
    6e14:	mov    rsi,rbx
    6e17:	mov    rdi,r12
    6e1a:	call   3ea0 <read_node>
    6e1f:	test   rax,rax
    6e22:	jne    6d7a <do_rm+0x15a>
    6e28:	cmp    DWORD PTR [r13+0x0],0xc
    6e2d:	je     6e89 <do_rm+0x269>
    6e2f:	mov    DWORD PTR [r13+0x0],0x2
    6e37:	jmp    6dc5 <do_rm+0x1a5>
    6e39:	nop    DWORD PTR [rax+0x0]
    6e40:	mov    r13,QWORD PTR [rbx+0x28]
    6e44:	jmp    6c63 <do_rm+0x43>
    6e49:	nop    DWORD PTR [rax+0x0]
    6e50:	call   2750 <__errno_location@plt>
    6e55:	mov    ebp,DWORD PTR [rax]
    6e57:	cmp    ebp,0xc
    6e5a:	jne    6dc0 <do_rm+0x1a0>
    6e60:	jmp    6dc5 <do_rm+0x1a5>
    6e65:	nop    DWORD PTR [rax]
    6e68:	call   2750 <__errno_location@plt>
    6e6d:	mov    ebp,DWORD PTR [rax]
    6e6f:	test   ebp,ebp
    6e71:	je     6d65 <do_rm+0x145>
    6e77:	jmp    6dc5 <do_rm+0x1a5>
    6e7c:	nop    DWORD PTR [rax+0x0]
    6e80:	mov    ebp,DWORD PTR [r13+0x0]
    6e84:	jmp    6dc5 <do_rm+0x1a5>
    6e89:	mov    ebp,0xc
    6e8e:	jmp    6dc5 <do_rm+0x1a5>
    6e93:	call   2820 <__stack_chk_fail@plt>
    6e98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006ea0 <destroy_node>:
    6ea0:	push   rbp
    6ea1:	push   rbx
    6ea2:	mov    rbp,rdi
    6ea5:	mov    ecx,0x2
    6eaa:	sub    rsp,0x8
    6eae:	mov    rbx,QWORD PTR [rdi]
    6eb1:	lea    rdi,[rip+0x8adb]        # f993 <_IO_stdin_used+0x133>
    6eb8:	mov    rsi,rbx
    6ebb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6ebd:	seta   al
    6ec0:	sbb    al,0x0
    6ec2:	test   al,al
    6ec4:	jne    6ed8 <destroy_node+0x38>
    6ec6:	lea    rsi,[rip+0x8bb0]        # fa7d <_IO_stdin_used+0x21d>
    6ecd:	xor    edi,edi
    6ecf:	call   5230 <corrupt>
    6ed4:	mov    rbx,QWORD PTR [rbp+0x0]
    6ed8:	mov    rdi,rbx
    6edb:	call   2800 <strlen@plt>
    6ee0:	mov    rdi,QWORD PTR [rip+0x20f3f9]        # 2162e0 <tdb_ctx>
    6ee7:	mov    rsi,rbx
    6eea:	mov    rdx,rax
    6eed:	call   e000 <tdb_delete>
    6ef2:	add    rsp,0x8
    6ef6:	xor    eax,eax
    6ef8:	pop    rbx
    6ef9:	pop    rbp
    6efa:	ret    
    6efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006f00 <is_child>:
    6f00:	push   r12
    6f02:	push   rbp
    6f03:	mov    rbp,rdi
    6f06:	push   rbx
    6f07:	mov    rdi,rsi
    6f0a:	mov    rbx,rsi
    6f0d:	call   2800 <strlen@plt>
    6f12:	lea    rdi,[rip+0x8a7a]        # f993 <_IO_stdin_used+0x133>
    6f19:	mov    ecx,0x2
    6f1e:	mov    rsi,rbx
    6f21:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6f23:	mov    esi,0x1
    6f28:	seta   cl
    6f2b:	sbb    cl,0x0
    6f2e:	test   cl,cl
    6f30:	je     6f5c <is_child+0x5c>
    6f32:	mov    r12d,eax
    6f35:	mov    rsi,rbx
    6f38:	mov    rdi,rbp
    6f3b:	mov    rdx,r12
    6f3e:	call   2770 <strncmp@plt>
    6f43:	xor    esi,esi
    6f45:	test   eax,eax
    6f47:	jne    6f5c <is_child+0x5c>
    6f49:	movzx  eax,BYTE PTR [rbp+r12*1+0x0]
    6f4f:	cmp    al,0x2f
    6f51:	sete   sil
    6f55:	test   al,al
    6f57:	sete   al
    6f5a:	or     esi,eax
    6f5c:	pop    rbx
    6f5d:	mov    eax,esi
    6f5f:	pop    rbp
    6f60:	pop    r12
    6f62:	ret    
    6f63:	nop    DWORD PTR [rax]
    6f66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006f70 <destroy_watch>:
    6f70:	lea    rsi,[rip+0x9603]        # 1057a <__FUNCTION__.12321+0x12>
    6f77:	sub    rsp,0x8
    6f7b:	call   48d0 <trace_destroy>
    6f80:	xor    eax,eax
    6f82:	add    rsp,0x8
    6f86:	ret    
    6f87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006f90 <add_event.isra.0>:
    6f90:	push   r15
    6f92:	push   r14
    6f94:	mov    r14,rdx
    6f97:	push   r13
    6f99:	push   r12
    6f9b:	mov    r13,rdi
    6f9e:	push   rbp
    6f9f:	push   rbx
    6fa0:	mov    rbp,rsi
    6fa3:	mov    r12,rcx
    6fa6:	mov    rbx,r8
    6fa9:	sub    rsp,0x8
    6fad:	test   r8,r8
    6fb0:	je     6fb8 <add_event.isra.0+0x28>
    6fb2:	cmp    BYTE PTR [r8],0x40
    6fb6:	je     6fe2 <add_event.isra.0+0x52>
    6fb8:	call   2750 <__errno_location@plt>
    6fbd:	mov    ecx,0x1
    6fc2:	mov    DWORD PTR [rax],0x16
    6fc8:	mov    rdx,rbx
    6fcb:	mov    rsi,rbp
    6fce:	mov    rdi,r13
    6fd1:	mov    r15,rax
    6fd4:	call   5f30 <get_node>
    6fd9:	test   rax,rax
    6fdc:	je     7080 <add_event.isra.0+0xf0>
    6fe2:	mov    rdi,QWORD PTR [r14]
    6fe5:	test   rdi,rdi
    6fe8:	je     6ffd <add_event.isra.0+0x6d>
    6fea:	call   2800 <strlen@plt>
    6fef:	add    rbx,rax
    6ff2:	xor    eax,eax
    6ff4:	cmp    BYTE PTR [rbx],0x2f
    6ff7:	sete   al
    6ffa:	add    rbx,rax
    6ffd:	mov    rdi,rbx
    7000:	call   2800 <strlen@plt>
    7005:	mov    rdi,QWORD PTR [r12]
    7009:	mov    r14,rax
    700c:	call   2800 <strlen@plt>
    7011:	lea    r14d,[r14+rax*1+0x2]
    7016:	lea    rcx,[rip+0x886e]        # f88b <_IO_stdin_used+0x2b>
    701d:	mov    rdi,rbp
    7020:	mov    esi,0x1
    7025:	mov    edx,r14d
    7028:	call   bad0 <_talloc_array>
    702d:	test   rax,rax
    7030:	mov    rbp,rax
    7033:	je     7095 <add_event.isra.0+0x105>
    7035:	mov    rsi,rbx
    7038:	mov    rdi,rax
    703b:	call   2780 <strcpy@plt>
    7040:	mov    rdi,rbx
    7043:	call   2800 <strlen@plt>
    7048:	mov    rsi,QWORD PTR [r12]
    704c:	lea    rdi,[rbp+rax*1+0x1]
    7051:	call   2780 <strcpy@plt>
    7056:	mov    rdi,r13
    7059:	mov    ecx,r14d
    705c:	mov    rdx,rbp
    705f:	mov    esi,0xf
    7064:	call   4a40 <send_reply>
    7069:	add    rsp,0x8
    706d:	mov    rdi,rbp
    7070:	pop    rbx
    7071:	pop    rbp
    7072:	pop    r12
    7074:	pop    r13
    7076:	pop    r14
    7078:	pop    r15
    707a:	jmp    a6a0 <talloc_free>
    707f:	nop
    7080:	mov    eax,DWORD PTR [r15]
    7083:	cmp    eax,0xd
    7086:	je     6fe2 <add_event.isra.0+0x52>
    708c:	cmp    eax,0x2
    708f:	je     6fe2 <add_event.isra.0+0x52>
    7095:	add    rsp,0x8
    7099:	pop    rbx
    709a:	pop    rbp
    709b:	pop    r12
    709d:	pop    r13
    709f:	pop    r14
    70a1:	pop    r15
    70a3:	ret    
    70a4:	xchg   ax,ax
    70a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000070b0 <fire_watches>:
    70b0:	push   r15
    70b2:	push   r14
    70b4:	mov    r14d,ecx
    70b7:	push   r13
    70b9:	push   r12
    70bb:	push   rbp
    70bc:	push   rbx
    70bd:	sub    rsp,0x18
    70c1:	test   rdi,rdi
    70c4:	je     70e0 <fire_watches+0x30>
    70c6:	cmp    QWORD PTR [rdi+0x38],0x0
    70cb:	je     70e0 <fire_watches+0x30>
    70cd:	add    rsp,0x18
    70d1:	pop    rbx
    70d2:	pop    rbp
    70d3:	pop    r12
    70d5:	pop    r13
    70d7:	pop    r14
    70d9:	pop    r15
    70db:	ret    
    70dc:	nop    DWORD PTR [rax+0x0]
    70e0:	mov    r12,QWORD PTR [rip+0x20f179]        # 216260 <connections>
    70e7:	lea    rax,[rip+0x20f172]        # 216260 <connections>
    70ee:	mov    rbp,rdx
    70f1:	mov    QWORD PTR [rsp+0x8],rsi
    70f6:	cmp    r12,rax
    70f9:	je     70cd <fire_watches+0x1d>
    70fb:	nop    DWORD PTR [rax+rax*1+0x0]
    7100:	mov    r15,QWORD PTR [r12+0x68]
    7105:	lea    r13,[r12+0x68]
    710a:	cmp    r15,r13
    710d:	jne    7134 <fire_watches+0x84>
    710f:	jmp    7167 <fire_watches+0xb7>
    7111:	nop    DWORD PTR [rax+0x0]
    7118:	test   r14b,r14b
    711b:	je     712c <fire_watches+0x7c>
    711d:	mov    rsi,rbp
    7120:	mov    rdi,rbx
    7123:	call   6f00 <is_child>
    7128:	test   al,al
    712a:	jne    7190 <fire_watches+0xe0>
    712c:	mov    r15,QWORD PTR [r15]
    712f:	cmp    r15,r13
    7132:	je     7167 <fire_watches+0xb7>
    7134:	mov    rbx,QWORD PTR [r15+0x30]
    7138:	mov    rdi,rbp
    713b:	mov    rsi,rbx
    713e:	call   6f00 <is_child>
    7143:	test   al,al
    7145:	je     7118 <fire_watches+0x68>
    7147:	mov    rsi,QWORD PTR [rsp+0x8]
    714c:	lea    rcx,[r15+0x28]
    7150:	lea    rdx,[r15+0x20]
    7154:	mov    r8,rbp
    7157:	mov    rdi,r12
    715a:	call   6f90 <add_event.isra.0>
    715f:	mov    r15,QWORD PTR [r15]
    7162:	cmp    r15,r13
    7165:	jne    7134 <fire_watches+0x84>
    7167:	mov    r12,QWORD PTR [r12]
    716b:	lea    rax,[rip+0x20f0ee]        # 216260 <connections>
    7172:	cmp    r12,rax
    7175:	jne    7100 <fire_watches+0x50>
    7177:	add    rsp,0x18
    717b:	pop    rbx
    717c:	pop    rbp
    717d:	pop    r12
    717f:	pop    r13
    7181:	pop    r14
    7183:	pop    r15
    7185:	ret    
    7186:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7190:	mov    rsi,QWORD PTR [rsp+0x8]
    7195:	lea    rcx,[r15+0x28]
    7199:	lea    rdx,[r15+0x20]
    719d:	mov    r8,rbx
    71a0:	mov    rdi,r12
    71a3:	call   6f90 <add_event.isra.0>
    71a8:	jmp    712c <fire_watches+0x7c>
    71aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000071b0 <do_watch>:
    71b0:	push   r15
    71b2:	push   r14
    71b4:	mov    edx,0x2
    71b9:	push   r13
    71bb:	push   r12
    71bd:	mov    r13,rsi
    71c0:	push   rbp
    71c1:	push   rbx
    71c2:	mov    r12,rdi
    71c5:	mov    rdi,r13
    71c8:	sub    rsp,0x38
    71cc:	lea    rsi,[rsp+0x10]
    71d1:	mov    rax,QWORD PTR fs:0x28
    71da:	mov    QWORD PTR [rsp+0x28],rax
    71df:	xor    eax,eax
    71e1:	call   49c0 <get_strings>
    71e6:	cmp    eax,0x2
    71e9:	jne    7350 <do_watch+0x1a0>
    71ef:	mov    rdi,QWORD PTR [rsp+0x10]
    71f4:	movzx  ebx,BYTE PTR [rdi]
    71f7:	cmp    bl,0x40
    71fa:	jne    7378 <do_watch+0x1c8>
    7200:	call   2800 <strlen@plt>
    7205:	cmp    rax,0x800
    720b:	ja     7350 <do_watch+0x1a0>
    7211:	mov    BYTE PTR [rsp+0xf],0x0
    7216:	mov    r15,QWORD PTR [r12+0x68]
    721b:	lea    rbx,[r12+0x68]
    7220:	cmp    r15,rbx
    7223:	je     725c <do_watch+0xac>
    7225:	mov    rbp,QWORD PTR [rsp+0x10]
    722a:	mov    r14,QWORD PTR [rsp+0x18]
    722f:	nop
    7230:	mov    rdi,QWORD PTR [r15+0x30]
    7234:	mov    rsi,rbp
    7237:	call   29c0 <strcmp@plt>
    723c:	test   eax,eax
    723e:	jne    7254 <do_watch+0xa4>
    7240:	mov    rdi,QWORD PTR [r15+0x28]
    7244:	mov    rsi,r14
    7247:	call   29c0 <strcmp@plt>
    724c:	test   eax,eax
    724e:	je     73c0 <do_watch+0x210>
    7254:	mov    r15,QWORD PTR [r15]
    7257:	cmp    r15,rbx
    725a:	jne    7230 <do_watch+0x80>
    725c:	mov    rdi,r12
    725f:	call   80a0 <domain_watch>
    7264:	mov    edx,eax
    7266:	cmp    edx,DWORD PTR [rip+0x20edac]        # 216018 <quota_nb_watch_per_domain>
    726c:	mov    eax,0x7
    7271:	jg     7355 <do_watch+0x1a5>
    7277:	lea    rdx,[rip+0x92f5]        # 10573 <__FUNCTION__.12321+0xb>
    727e:	mov    esi,0x38
    7283:	mov    rdi,r12
    7286:	call   a240 <talloc_named_const>
    728b:	test   rax,rax
    728e:	mov    rbp,rax
    7291:	je     73b8 <do_watch+0x208>
    7297:	mov    rsi,QWORD PTR [rsp+0x10]
    729c:	mov    rdi,rax
    729f:	call   b2f0 <talloc_strdup>
    72a4:	mov    rsi,QWORD PTR [rsp+0x18]
    72a9:	mov    QWORD PTR [rbp+0x30],rax
    72ad:	mov    rdi,rbp
    72b0:	call   b2f0 <talloc_strdup>
    72b5:	cmp    QWORD PTR [rbp+0x30],0x0
    72ba:	mov    QWORD PTR [rbp+0x28],rax
    72be:	je     73a9 <do_watch+0x1f9>
    72c4:	test   rax,rax
    72c7:	je     73a9 <do_watch+0x1f9>
    72cd:	cmp    BYTE PTR [rsp+0xf],0x0
    72d2:	jne    73c7 <do_watch+0x217>
    72d8:	mov    QWORD PTR [rbp+0x20],0x0
    72e0:	lea    rax,[rbp+0x10]
    72e4:	mov    rdi,r12
    72e7:	mov    QWORD PTR [rbp+0x10],rax
    72eb:	mov    QWORD PTR [rbp+0x18],rax
    72ef:	call   8060 <domain_watch_inc>
    72f4:	mov    rax,QWORD PTR [r12+0x70]
    72f9:	lea    rsi,[rip+0x927a]        # 1057a <__FUNCTION__.12321+0x12>
    7300:	mov    QWORD PTR [r12+0x70],rbp
    7305:	mov    rdi,rbp
    7308:	mov    QWORD PTR [rbp+0x0],rbx
    730c:	mov    QWORD PTR [rbp+0x8],rax
    7310:	mov    QWORD PTR [rax],rbp
    7313:	call   48b0 <trace_create>
    7318:	lea    rsi,[rip+0xfffffffffffffc51]        # 6f70 <destroy_watch>
    731f:	mov    rdi,rbp
    7322:	call   a1f0 <talloc_set_destructor>
    7327:	mov    esi,0x4
    732c:	mov    rdi,r12
    732f:	call   4f50 <send_ack>
    7334:	mov    r8,QWORD PTR [rbp+0x30]
    7338:	lea    rcx,[rbp+0x28]
    733c:	lea    rdx,[rbp+0x20]
    7340:	mov    rsi,r13
    7343:	mov    rdi,r12
    7346:	call   6f90 <add_event.isra.0>
    734b:	xor    eax,eax
    734d:	jmp    7355 <do_watch+0x1a5>
    734f:	nop
    7350:	mov    eax,0x16
    7355:	mov    rcx,QWORD PTR [rsp+0x28]
    735a:	xor    rcx,QWORD PTR fs:0x28
    7363:	jne    73d8 <do_watch+0x228>
    7365:	add    rsp,0x38
    7369:	pop    rbx
    736a:	pop    rbp
    736b:	pop    r12
    736d:	pop    r13
    736f:	pop    r14
    7371:	pop    r15
    7373:	ret    
    7374:	nop    DWORD PTR [rax+0x0]
    7378:	mov    rdx,rdi
    737b:	mov    rsi,r13
    737e:	mov    rdi,r12
    7381:	call   5060 <canonicalize>
    7386:	test   rax,rax
    7389:	mov    QWORD PTR [rsp+0x10],rax
    738e:	je     73b8 <do_watch+0x208>
    7390:	mov    rdi,rax
    7393:	call   4f70 <is_valid_nodename>
    7398:	test   al,al
    739a:	je     7350 <do_watch+0x1a0>
    739c:	cmp    bl,0x2f
    739f:	setne  BYTE PTR [rsp+0xf]
    73a4:	jmp    7216 <do_watch+0x66>
    73a9:	mov    rdi,rbp
    73ac:	call   a6a0 <talloc_free>
    73b1:	nop    DWORD PTR [rax+0x0]
    73b8:	mov    eax,0xc
    73bd:	jmp    7355 <do_watch+0x1a5>
    73bf:	nop
    73c0:	mov    eax,0x11
    73c5:	jmp    7355 <do_watch+0x1a5>
    73c7:	mov    rdi,r12
    73ca:	call   7ea0 <get_implicit_path>
    73cf:	mov    QWORD PTR [rbp+0x20],rax
    73d3:	jmp    72e0 <do_watch+0x130>
    73d8:	call   2820 <__stack_chk_fail@plt>
    73dd:	nop    DWORD PTR [rax]

00000000000073e0 <do_unwatch>:
    73e0:	push   r15
    73e2:	push   r14
    73e4:	mov    edx,0x2
    73e9:	push   r13
    73eb:	push   r12
    73ed:	mov    r13,rdi
    73f0:	push   rbp
    73f1:	push   rbx
    73f2:	mov    rbx,rsi
    73f5:	mov    rdi,rbx
    73f8:	mov    r15d,0x16
    73fe:	sub    rsp,0x28
    7402:	mov    rsi,rsp
    7405:	mov    rax,QWORD PTR fs:0x28
    740e:	mov    QWORD PTR [rsp+0x18],rax
    7413:	xor    eax,eax
    7415:	call   49c0 <get_strings>
    741a:	cmp    eax,0x2
    741d:	je     7448 <do_unwatch+0x68>
    741f:	mov    rcx,QWORD PTR [rsp+0x18]
    7424:	xor    rcx,QWORD PTR fs:0x28
    742d:	mov    eax,r15d
    7430:	jne    74fb <do_unwatch+0x11b>
    7436:	add    rsp,0x28
    743a:	pop    rbx
    743b:	pop    rbp
    743c:	pop    r12
    743e:	pop    r13
    7440:	pop    r14
    7442:	pop    r15
    7444:	ret    
    7445:	nop    DWORD PTR [rax]
    7448:	mov    rdx,QWORD PTR [rsp]
    744c:	mov    rsi,rbx
    744f:	mov    rdi,r13
    7452:	call   5060 <canonicalize>
    7457:	test   rax,rax
    745a:	mov    rbp,rax
    745d:	je     74f0 <do_unwatch+0x110>
    7463:	mov    rbx,QWORD PTR [r13+0x68]
    7467:	lea    r12,[r13+0x68]
    746b:	cmp    r12,rbx
    746e:	je     74a3 <do_unwatch+0xc3>
    7470:	mov    r14,QWORD PTR [rsp+0x8]
    7475:	nop    DWORD PTR [rax]
    7478:	mov    rdi,QWORD PTR [rbx+0x30]
    747c:	mov    rsi,rbp
    747f:	call   29c0 <strcmp@plt>
    7484:	test   eax,eax
    7486:	jne    749b <do_unwatch+0xbb>
    7488:	mov    rdi,QWORD PTR [rbx+0x28]
    748c:	mov    rsi,r14
    748f:	call   29c0 <strcmp@plt>
    7494:	test   eax,eax
    7496:	mov    r15d,eax
    7499:	je     74b0 <do_unwatch+0xd0>
    749b:	mov    rbx,QWORD PTR [rbx]
    749e:	cmp    rbx,r12
    74a1:	jne    7478 <do_unwatch+0x98>
    74a3:	mov    r15d,0x2
    74a9:	jmp    741f <do_unwatch+0x3f>
    74ae:	xchg   ax,ax
    74b0:	mov    rdx,QWORD PTR [rbx]
    74b3:	mov    rax,QWORD PTR [rbx+0x8]
    74b7:	mov    rdi,rbx
    74ba:	mov    QWORD PTR [rdx+0x8],rax
    74be:	mov    QWORD PTR [rax],rdx
    74c1:	mov    QWORD PTR [rbx],0x100100
    74c8:	mov    QWORD PTR [rbx+0x8],0x200200
    74d0:	call   a6a0 <talloc_free>
    74d5:	mov    rdi,r13
    74d8:	call   8080 <domain_watch_dec>
    74dd:	mov    esi,0x5
    74e2:	mov    rdi,r13
    74e5:	call   4f50 <send_ack>
    74ea:	jmp    741f <do_unwatch+0x3f>
    74ef:	nop
    74f0:	mov    r15d,0xc
    74f6:	jmp    741f <do_unwatch+0x3f>
    74fb:	call   2820 <__stack_chk_fail@plt>

0000000000007500 <conn_delete_all_watches>:
    7500:	push   rbp
    7501:	push   rbx
    7502:	lea    rbp,[rdi+0x68]
    7506:	mov    rbx,rdi
    7509:	sub    rsp,0x8
    750d:	mov    rdi,QWORD PTR [rdi+0x68]
    7511:	test   rdi,rdi
    7514:	je     7558 <conn_delete_all_watches+0x58>
    7516:	cmp    rbp,rdi
    7519:	jne    7525 <conn_delete_all_watches+0x25>
    751b:	jmp    7558 <conn_delete_all_watches+0x58>
    751d:	nop    DWORD PTR [rax]
    7520:	test   rdi,rdi
    7523:	je     7558 <conn_delete_all_watches+0x58>
    7525:	mov    rdx,QWORD PTR [rdi]
    7528:	mov    rax,QWORD PTR [rdi+0x8]
    752c:	mov    QWORD PTR [rdx+0x8],rax
    7530:	mov    QWORD PTR [rax],rdx
    7533:	mov    QWORD PTR [rdi],0x100100
    753a:	mov    QWORD PTR [rdi+0x8],0x200200
    7542:	call   a6a0 <talloc_free>
    7547:	mov    rdi,rbx
    754a:	call   8080 <domain_watch_dec>
    754f:	mov    rdi,QWORD PTR [rbx+0x68]
    7553:	cmp    rdi,rbp
    7556:	jne    7520 <conn_delete_all_watches+0x20>
    7558:	add    rsp,0x8
    755c:	pop    rbx
    755d:	pop    rbp
    755e:	ret    
    755f:	nop

0000000000007560 <unmap_interface>:
    7560:	mov    rax,QWORD PTR [rip+0x211e29]        # 219390 <xgt_handle>
    7567:	mov    rax,QWORD PTR [rax]
    756a:	test   rax,rax
    756d:	je     7580 <unmap_interface+0x20>
    756f:	mov    rsi,rdi
    7572:	mov    edx,0x1
    7577:	mov    rdi,rax
    757a:	jmp    2a40 <xengnttab_unmap@plt>
    757f:	nop
    7580:	mov    esi,0x1000
    7585:	jmp    2b00 <munmap@plt>
    758a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007590 <destroy_domain>:
    7590:	push   rbx
    7591:	mov    rdx,QWORD PTR [rdi]
    7594:	mov    rbx,rdi
    7597:	mov    rax,QWORD PTR [rdi+0x8]
    759b:	mov    QWORD PTR [rdx+0x8],rax
    759f:	mov    QWORD PTR [rax],rdx
    75a2:	mov    esi,DWORD PTR [rdi+0x14]
    75a5:	mov    QWORD PTR [rdi],0x100100
    75ac:	mov    QWORD PTR [rdi+0x8],0x200200
    75b4:	test   esi,esi
    75b6:	jne    7620 <destroy_domain+0x90>
    75b8:	mov    rdi,QWORD PTR [rbx+0x30]
    75bc:	test   rdi,rdi
    75bf:	je     75cd <destroy_domain+0x3d>
    75c1:	mov    eax,DWORD PTR [rbx+0x10]
    75c4:	test   eax,eax
    75c6:	jne    7618 <destroy_domain+0x88>
    75c8:	call   f660 <unmap_xenbus>
    75cd:	lea    rdx,[rip+0x923c]        # 10810 <__FUNCTION__.12321+0x2a8>
    75d4:	xor    ecx,ecx
    75d6:	xor    edi,edi
    75d8:	mov    rsi,rbx
    75db:	call   70b0 <fire_watches>
    75e0:	mov    ecx,DWORD PTR [rip+0x20ed42]        # 216328 <wrl_reserve>
    75e6:	mov    edx,DWORD PTR [rbx+0x4c]
    75e9:	mov    eax,0x2710
    75ee:	sub    QWORD PTR [rip+0x20ed3a],0x1        # 216330 <wrl_ndomains>
    75f6:	sub    eax,ecx
    75f8:	cmp    eax,edx
    75fa:	cmovg  eax,edx
    75fd:	test   eax,eax
    75ff:	jle    760e <destroy_domain+0x7e>
    7601:	sub    edx,eax
    7603:	add    eax,ecx
    7605:	mov    DWORD PTR [rbx+0x4c],edx
    7608:	mov    DWORD PTR [rip+0x20ed1a],eax        # 216328 <wrl_reserve>
    760e:	xor    eax,eax
    7610:	pop    rbx
    7611:	ret    
    7612:	nop    WORD PTR [rax+rax*1+0x0]
    7618:	call   7560 <unmap_interface>
    761d:	jmp    75cd <destroy_domain+0x3d>
    761f:	nop
    7620:	mov    rdi,QWORD PTR [rip+0x20ecf1]        # 216318 <xce_handle>
    7627:	call   29b0 <xenevtchn_unbind@plt>
    762c:	cmp    eax,0xffffffff
    762f:	jne    75b8 <destroy_domain+0x28>
    7631:	mov    edx,DWORD PTR [rbx+0x14]
    7634:	lea    rsi,[rip+0x929d]        # 108d8 <__FUNCTION__.11174>
    763b:	lea    rdi,[rip+0x8f3e]        # 10580 <__FUNCTION__.12321+0x18>
    7642:	xor    eax,eax
    7644:	call   QWORD PTR [rip+0x20ec36]        # 216280 <xprintf>
    764a:	jmp    75b8 <destroy_domain+0x28>
    764f:	nop

0000000000007650 <onearg_domain>:
    7650:	push   rbx
    7651:	mov    rbx,rdi
    7654:	mov    rdi,rsi
    7657:	call   5020 <onearg>
    765c:	test   rax,rax
    765f:	je     76a7 <onearg_domain+0x57>
    7661:	mov    edx,0xa
    7666:	xor    esi,esi
    7668:	mov    rdi,rax
    766b:	call   2a10 <strtol@plt>
    7670:	test   eax,eax
    7672:	mov    rdx,rax
    7675:	mov    ecx,eax
    7677:	je     76a7 <onearg_domain+0x57>
    7679:	test   rbx,rbx
    767c:	je     76b0 <onearg_domain+0x60>
    767e:	mov    rax,QWORD PTR [rbx+0x58]
    7682:	test   rax,rax
    7685:	je     76b0 <onearg_domain+0x60>
    7687:	mov    esi,DWORD PTR [rax+0x10]
    768a:	test   esi,esi
    768c:	je     76b0 <onearg_domain+0x60>
    768e:	cmp    esi,DWORD PTR [rip+0x20ec3c]        # 2162d0 <priv_domid>
    7694:	mov    rax,0xfffffffffffffff3
    769b:	je     76b0 <onearg_domain+0x60>
    769d:	pop    rbx
    769e:	ret    
    769f:	nop
    76a0:	cmp    QWORD PTR [rax+0x38],0x0
    76a5:	jne    769d <onearg_domain+0x4d>
    76a7:	mov    rax,0xffffffffffffffea
    76ae:	pop    rbx
    76af:	ret    
    76b0:	mov    rax,QWORD PTR [rip+0x20ebb9]        # 216270 <domains>
    76b7:	lea    rsi,[rip+0x20ebb2]        # 216270 <domains>
    76be:	cmp    rax,rsi
    76c1:	je     76dd <onearg_domain+0x8d>
    76c3:	cmp    edx,DWORD PTR [rax+0x10]
    76c6:	jne    76d5 <onearg_domain+0x85>
    76c8:	jmp    76a0 <onearg_domain+0x50>
    76ca:	nop    WORD PTR [rax+rax*1+0x0]
    76d0:	cmp    ecx,DWORD PTR [rax+0x10]
    76d3:	je     76a0 <onearg_domain+0x50>
    76d5:	mov    rax,QWORD PTR [rax]
    76d8:	cmp    rax,rsi
    76db:	jne    76d0 <onearg_domain+0x80>
    76dd:	mov    rax,0xfffffffffffffffe
    76e4:	pop    rbx
    76e5:	ret    
    76e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000076f0 <close_xgt_handle>:
    76f0:	sub    rsp,0x8
    76f4:	mov    rdi,QWORD PTR [rdi]
    76f7:	call   2ae0 <xengnttab_close@plt>
    76fc:	xor    eax,eax
    76fe:	add    rsp,0x8
    7702:	ret    
    7703:	nop    DWORD PTR [rax]
    7706:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007710 <close_xc_handle>:
    7710:	sub    rsp,0x8
    7714:	mov    rdi,QWORD PTR [rdi]
    7717:	call   28f0 <xc_interface_close@plt>
    771c:	xor    eax,eax
    771e:	add    rsp,0x8
    7722:	ret    
    7723:	nop    DWORD PTR [rax]
    7726:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007730 <writechn>:
    7730:	push   rbx
    7731:	mov    rax,QWORD PTR [rdi+0x58]
    7735:	mov    r9,QWORD PTR [rax+0x30]
    7739:	mov    ecx,DWORD PTR [r9+0x808]
    7740:	mov    r10d,DWORD PTR [r9+0x80c]
    7747:	mfence 
    774a:	mov    eax,r10d
    774d:	sub    eax,ecx
    774f:	cmp    eax,0x400
    7754:	ja     7810 <writechn+0xe0>
    775a:	lea    ebx,[rcx+0x400]
    7760:	mov    r8,rdi
    7763:	mov    edi,r10d
    7766:	and    edi,0x3ff
    776c:	mov    ecx,ebx
    776e:	mov    ebx,0x400
    7773:	sub    ecx,r10d
    7776:	sub    ebx,edi
    7778:	cmp    ecx,ebx
    777a:	cmovbe ebx,ecx
    777d:	lea    rcx,[r9+rdi*1+0x400]
    7785:	cmp    ebx,edx
    7787:	cmova  ebx,edx
    778a:	cmp    ebx,0x8
    778d:	jae    77b0 <writechn+0x80>
    778f:	test   bl,0x4
    7792:	jne    7800 <writechn+0xd0>
    7794:	test   ebx,ebx
    7796:	je     77d8 <writechn+0xa8>
    7798:	movzx  eax,BYTE PTR [rsi]
    779b:	test   bl,0x2
    779e:	mov    BYTE PTR [rcx],al
    77a0:	je     77d8 <writechn+0xa8>
    77a2:	mov    eax,ebx
    77a4:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
    77a9:	mov    WORD PTR [rcx+rax*1-0x2],dx
    77ae:	jmp    77d8 <writechn+0xa8>
    77b0:	mov    rax,QWORD PTR [rsi]
    77b3:	lea    rdi,[rcx+0x8]
    77b7:	and    rdi,0xfffffffffffffff8
    77bb:	mov    QWORD PTR [rcx],rax
    77be:	mov    eax,ebx
    77c0:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
    77c5:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
    77ca:	sub    rcx,rdi
    77cd:	sub    rsi,rcx
    77d0:	add    ecx,ebx
    77d2:	shr    ecx,0x3
    77d5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    77d8:	mfence 
    77db:	add    DWORD PTR [r9+0x80c],ebx
    77e2:	mov    rdi,QWORD PTR [rip+0x20eb2f]        # 216318 <xce_handle>
    77e9:	mov    rax,QWORD PTR [r8+0x58]
    77ed:	mov    esi,DWORD PTR [rax+0x14]
    77f0:	call   2730 <xenevtchn_notify@plt>
    77f5:	mov    eax,ebx
    77f7:	pop    rbx
    77f8:	ret    
    77f9:	nop    DWORD PTR [rax+0x0]
    7800:	mov    eax,DWORD PTR [rsi]
    7802:	mov    DWORD PTR [rcx],eax
    7804:	mov    eax,ebx
    7806:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
    780a:	mov    DWORD PTR [rcx+rax*1-0x4],edx
    780e:	jmp    77d8 <writechn+0xa8>
    7810:	call   2750 <__errno_location@plt>
    7815:	mov    DWORD PTR [rax],0x5
    781b:	mov    eax,0xffffffff
    7820:	pop    rbx
    7821:	ret    
    7822:	nop    DWORD PTR [rax+0x0]
    7826:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007830 <readchn>:
    7830:	push   rbx
    7831:	mov    rax,QWORD PTR [rdi+0x58]
    7835:	mov    r9,QWORD PTR [rax+0x30]
    7839:	mov    ecx,DWORD PTR [r9+0x800]
    7840:	mov    ebx,DWORD PTR [r9+0x804]
    7847:	mfence 
    784a:	sub    ebx,ecx
    784c:	cmp    ebx,0x400
    7852:	ja     7910 <readchn+0xe0>
    7858:	and    ecx,0x3ff
    785e:	cmp    edx,ebx
    7860:	mov    r8,rdi
    7863:	cmova  edx,ebx
    7866:	mov    ebx,0x400
    786b:	sub    ebx,ecx
    786d:	cmp    ebx,edx
    786f:	cmova  ebx,edx
    7872:	add    rcx,r9
    7875:	cmp    ebx,0x8
    7878:	jae    78a0 <readchn+0x70>
    787a:	test   bl,0x4
    787d:	jne    78f8 <readchn+0xc8>
    787f:	test   ebx,ebx
    7881:	je     78d3 <readchn+0xa3>
    7883:	movzx  eax,BYTE PTR [rcx]
    7886:	test   bl,0x2
    7889:	mov    BYTE PTR [rsi],al
    788b:	je     78d3 <readchn+0xa3>
    788d:	mov    eax,ebx
    788f:	movzx  edx,WORD PTR [rcx+rax*1-0x2]
    7894:	mov    WORD PTR [rsi+rax*1-0x2],dx
    7899:	jmp    78d3 <readchn+0xa3>
    789b:	nop    DWORD PTR [rax+rax*1+0x0]
    78a0:	mov    rax,QWORD PTR [rcx]
    78a3:	lea    rdi,[rsi+0x8]
    78a7:	and    rdi,0xfffffffffffffff8
    78ab:	mov    QWORD PTR [rsi],rax
    78ae:	mov    eax,ebx
    78b0:	mov    rdx,QWORD PTR [rcx+rax*1-0x8]
    78b5:	mov    QWORD PTR [rsi+rax*1-0x8],rdx
    78ba:	mov    rax,rsi
    78bd:	mov    rsi,rcx
    78c0:	sub    rax,rdi
    78c3:	lea    ecx,[rbx+rax*1]
    78c6:	sub    rsi,rax
    78c9:	mov    eax,ecx
    78cb:	shr    eax,0x3
    78ce:	mov    ecx,eax
    78d0:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    78d3:	mfence 
    78d6:	add    DWORD PTR [r9+0x800],ebx
    78dd:	mov    rdi,QWORD PTR [rip+0x20ea34]        # 216318 <xce_handle>
    78e4:	mov    rax,QWORD PTR [r8+0x58]
    78e8:	mov    esi,DWORD PTR [rax+0x14]
    78eb:	call   2730 <xenevtchn_notify@plt>
    78f0:	mov    eax,ebx
    78f2:	pop    rbx
    78f3:	ret    
    78f4:	nop    DWORD PTR [rax+0x0]
    78f8:	mov    eax,DWORD PTR [rcx]
    78fa:	mov    DWORD PTR [rsi],eax
    78fc:	mov    eax,ebx
    78fe:	mov    edx,DWORD PTR [rcx+rax*1-0x4]
    7902:	mov    DWORD PTR [rsi+rax*1-0x4],edx
    7906:	jmp    78d3 <readchn+0xa3>
    7908:	nop    DWORD PTR [rax+rax*1+0x0]
    7910:	call   2750 <__errno_location@plt>
    7915:	mov    DWORD PTR [rax],0x5
    791b:	mov    eax,0xffffffff
    7920:	pop    rbx
    7921:	ret    
    7922:	nop    DWORD PTR [rax+0x0]
    7926:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007930 <handle_event>:
    7930:	push   r15
    7932:	push   r14
    7934:	push   r13
    7936:	push   r12
    7938:	push   rbp
    7939:	push   rbx
    793a:	sub    rsp,0x78
    793e:	mov    rdi,QWORD PTR [rip+0x20e9d3]        # 216318 <xce_handle>
    7945:	mov    rax,QWORD PTR fs:0x28
    794e:	mov    QWORD PTR [rsp+0x68],rax
    7953:	xor    eax,eax
    7955:	call   28e0 <xenevtchn_pending@plt>
    795a:	cmp    eax,0xffffffff
    795d:	je     7a86 <handle_event+0x156>
    7963:	cmp    DWORD PTR [rip+0x20e9cf],eax        # 216338 <virq_port>
    7969:	mov    ebp,eax
    796b:	je     79b0 <handle_event+0x80>
    796d:	mov    rdi,QWORD PTR [rip+0x20e9a4]        # 216318 <xce_handle>
    7974:	mov    esi,ebp
    7976:	call   2880 <xenevtchn_unmask@plt>
    797b:	cmp    eax,0xffffffff
    797e:	je     7a78 <handle_event+0x148>
    7984:	mov    rax,QWORD PTR [rsp+0x68]
    7989:	xor    rax,QWORD PTR fs:0x28
    7992:	jne    7a94 <handle_event+0x164>
    7998:	add    rsp,0x78
    799c:	pop    rbx
    799d:	pop    rbp
    799e:	pop    r12
    79a0:	pop    r13
    79a2:	pop    r14
    79a4:	pop    r15
    79a6:	ret    
    79a7:	nop    WORD PTR [rax+rax*1+0x0]
    79b0:	lea    r12,[rip+0x20e8b9]        # 216270 <domains>
    79b7:	mov    r13,rsp
    79ba:	mov    rbx,QWORD PTR [r12]
    79be:	cmp    rbx,r12
    79c1:	je     796d <handle_event+0x3d>
    79c3:	xor    r14d,r14d
    79c6:	jmp    79e1 <handle_event+0xb1>
    79c8:	nop    DWORD PTR [rax+rax*1+0x0]
    79d0:	mov    r15,QWORD PTR [rbx+0x38]
    79d4:	test   r15,r15
    79d7:	jne    7a38 <handle_event+0x108>
    79d9:	mov    rbx,QWORD PTR [rbx]
    79dc:	cmp    rbx,r12
    79df:	je     7a58 <handle_event+0x128>
    79e1:	mov    rax,QWORD PTR [rip+0x20e958]        # 216340 <xc_handle>
    79e8:	mov    esi,DWORD PTR [rbx+0x10]
    79eb:	mov    rcx,r13
    79ee:	mov    edx,0x1
    79f3:	mov    rdi,QWORD PTR [rax]
    79f6:	call   27f0 <xc_domain_getinfo@plt>
    79fb:	cmp    eax,0x1
    79fe:	jne    79d0 <handle_event+0xa0>
    7a00:	mov    eax,DWORD PTR [rbx+0x10]
    7a03:	cmp    DWORD PTR [rsp],eax
    7a06:	jne    79d0 <handle_event+0xa0>
    7a08:	movzx  eax,BYTE PTR [rsp+0x8]
    7a0d:	test   al,0x6
    7a0f:	je     7a25 <handle_event+0xf5>
    7a11:	mov    edx,DWORD PTR [rbx+0x40]
    7a14:	test   edx,edx
    7a16:	jne    7a25 <handle_event+0xf5>
    7a18:	mov    DWORD PTR [rbx+0x40],0x1
    7a1f:	mov    r14d,0x1
    7a25:	test   al,0x1
    7a27:	je     79d9 <handle_event+0xa9>
    7a29:	mov    r15,QWORD PTR [rbx+0x38]
    7a2d:	test   r15,r15
    7a30:	je     79d9 <handle_event+0xa9>
    7a32:	nop    WORD PTR [rax+rax*1+0x0]
    7a38:	call   bb70 <talloc_autofree_context>
    7a3d:	mov    rsi,r15
    7a40:	mov    rdi,rax
    7a43:	call   abf0 <talloc_unlink>
    7a48:	mov    QWORD PTR [rbx+0x38],0x0
    7a50:	jmp    79ba <handle_event+0x8a>
    7a55:	nop    DWORD PTR [rax]
    7a58:	test   r14d,r14d
    7a5b:	je     796d <handle_event+0x3d>
    7a61:	lea    rdx,[rip+0x8da8]        # 10810 <__FUNCTION__.12321+0x2a8>
    7a68:	xor    ecx,ecx
    7a6a:	xor    esi,esi
    7a6c:	xor    edi,edi
    7a6e:	call   70b0 <fire_watches>
    7a73:	jmp    796d <handle_event+0x3d>
    7a78:	lea    rdi,[rip+0x8dbd]        # 1083c <__FUNCTION__.12321+0x2d4>
    7a7f:	xor    eax,eax
    7a81:	call   bf20 <barf_perror>
    7a86:	lea    rdi,[rip+0x8d92]        # 1081f <__FUNCTION__.12321+0x2b7>
    7a8d:	xor    eax,eax
    7a8f:	call   bf20 <barf_perror>
    7a94:	call   2820 <__stack_chk_fail@plt>
    7a99:	nop    DWORD PTR [rax+0x0]

0000000000007aa0 <domain_can_read>:
    7aa0:	mov    rdx,QWORD PTR [rdi+0x58]
    7aa4:	mov    eax,DWORD PTR [rdx+0x10]
    7aa7:	mov    rcx,QWORD PTR [rdx+0x30]
    7aab:	test   eax,eax
    7aad:	je     7ac0 <domain_can_read+0x20>
    7aaf:	cmp    eax,DWORD PTR [rip+0x20e81b]        # 2162d0 <priv_domid>
    7ab5:	je     7ac0 <domain_can_read+0x20>
    7ab7:	mov    edx,DWORD PTR [rdx+0x4c]
    7aba:	xor    eax,eax
    7abc:	test   edx,edx
    7abe:	js     7acf <domain_can_read+0x2f>
    7ac0:	mov    eax,DWORD PTR [rcx+0x804]
    7ac6:	cmp    DWORD PTR [rcx+0x800],eax
    7acc:	setne  al
    7acf:	repz ret 
    7ad1:	nop    DWORD PTR [rax+rax*1+0x0]
    7ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ae0 <domain_is_unprivileged>:
    7ae0:	xor    eax,eax
    7ae2:	test   rdi,rdi
    7ae5:	je     7b00 <domain_is_unprivileged+0x20>
    7ae7:	mov    rdx,QWORD PTR [rdi+0x58]
    7aeb:	test   rdx,rdx
    7aee:	je     7b00 <domain_is_unprivileged+0x20>
    7af0:	mov    edx,DWORD PTR [rdx+0x10]
    7af3:	test   edx,edx
    7af5:	je     7b00 <domain_is_unprivileged+0x20>
    7af7:	cmp    DWORD PTR [rip+0x20e7d3],edx        # 2162d0 <priv_domid>
    7afd:	setne  al
    7b00:	repz ret 
    7b02:	nop    DWORD PTR [rax+0x0]
    7b06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007b10 <domain_can_write>:
    7b10:	mov    rax,QWORD PTR [rdi+0x58]
    7b14:	mov    rdx,QWORD PTR [rax+0x30]
    7b18:	mov    eax,DWORD PTR [rdx+0x80c]
    7b1e:	sub    eax,DWORD PTR [rdx+0x808]
    7b24:	cmp    eax,0x400
    7b29:	setne  al
    7b2c:	ret    
    7b2d:	nop    DWORD PTR [rax]

0000000000007b30 <do_set_target>:
    7b30:	push   r13
    7b32:	push   r12
    7b34:	mov    edx,0x2
    7b39:	push   rbp
    7b3a:	push   rbx
    7b3b:	mov    r12,rdi
    7b3e:	mov    rdi,rsi
    7b41:	sub    rsp,0x28
    7b45:	mov    rsi,rsp
    7b48:	mov    rax,QWORD PTR fs:0x28
    7b51:	mov    QWORD PTR [rsp+0x18],rax
    7b56:	xor    eax,eax
    7b58:	call   49c0 <get_strings>
    7b5d:	cmp    eax,0x1
    7b60:	jbe    7c70 <do_set_target+0x140>
    7b66:	test   r12,r12
    7b69:	je     7bb0 <do_set_target+0x80>
    7b6b:	mov    rax,QWORD PTR [r12+0x58]
    7b70:	test   rax,rax
    7b73:	je     7bb0 <do_set_target+0x80>
    7b75:	mov    edx,DWORD PTR [rax+0x10]
    7b78:	test   edx,edx
    7b7a:	je     7bb0 <do_set_target+0x80>
    7b7c:	cmp    edx,DWORD PTR [rip+0x20e74e]        # 2162d0 <priv_domid>
    7b82:	mov    eax,0xd
    7b87:	je     7bb0 <do_set_target+0x80>
    7b89:	nop    DWORD PTR [rax+0x0]
    7b90:	mov    rcx,QWORD PTR [rsp+0x18]
    7b95:	xor    rcx,QWORD PTR fs:0x28
    7b9e:	jne    7cc8 <do_set_target+0x198>
    7ba4:	add    rsp,0x28
    7ba8:	pop    rbx
    7ba9:	pop    rbp
    7baa:	pop    r12
    7bac:	pop    r13
    7bae:	ret    
    7baf:	nop
    7bb0:	cmp    BYTE PTR [r12+0x1c],0x0
    7bb6:	mov    eax,0xd
    7bbb:	je     7b90 <do_set_target+0x60>
    7bbd:	mov    rdi,QWORD PTR [rsp]
    7bc1:	xor    esi,esi
    7bc3:	mov    edx,0xa
    7bc8:	call   2a10 <strtol@plt>
    7bcd:	mov    rdi,QWORD PTR [rsp+0x8]
    7bd2:	mov    edx,0xa
    7bd7:	xor    esi,esi
    7bd9:	mov    rbx,rax
    7bdc:	mov    r13d,eax
    7bdf:	call   2a10 <strtol@plt>
    7be4:	mov    rbp,QWORD PTR [rip+0x20e685]        # 216270 <domains>
    7beb:	lea    rdx,[rip+0x20e67e]        # 216270 <domains>
    7bf2:	mov    r8,rax
    7bf5:	cmp    rbp,rdx
    7bf8:	je     7c1e <do_set_target+0xee>
    7bfa:	mov    esi,DWORD PTR [rbp+0x10]
    7bfd:	cmp    ebx,esi
    7bff:	mov    rbx,rbp
    7c02:	jne    7c16 <do_set_target+0xe6>
    7c04:	jmp    7c30 <do_set_target+0x100>
    7c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7c10:	cmp    r13d,DWORD PTR [rbx+0x10]
    7c14:	je     7c30 <do_set_target+0x100>
    7c16:	mov    rbx,QWORD PTR [rbx]
    7c19:	cmp    rbx,rdx
    7c1c:	jne    7c10 <do_set_target+0xe0>
    7c1e:	mov    eax,0x2
    7c23:	jmp    7b90 <do_set_target+0x60>
    7c28:	nop    DWORD PTR [rax+rax*1+0x0]
    7c30:	mov    rdi,QWORD PTR [rbx+0x38]
    7c34:	mov    eax,0x16
    7c39:	test   rdi,rdi
    7c3c:	je     7b90 <do_set_target+0x60>
    7c42:	cmp    rbx,0xfffffffffffffc18
    7c49:	ja     7ccd <do_set_target+0x19d>
    7c4f:	cmp    r8d,esi
    7c52:	mov    ecx,r8d
    7c55:	jne    7c65 <do_set_target+0x135>
    7c57:	jmp    7c80 <do_set_target+0x150>
    7c59:	nop    DWORD PTR [rax+0x0]
    7c60:	cmp    ecx,DWORD PTR [rbp+0x10]
    7c63:	je     7c80 <do_set_target+0x150>
    7c65:	mov    rbp,QWORD PTR [rbp+0x0]
    7c69:	cmp    rbp,rdx
    7c6c:	jne    7c60 <do_set_target+0x130>
    7c6e:	jmp    7c1e <do_set_target+0xee>
    7c70:	mov    eax,0x16
    7c75:	jmp    7b90 <do_set_target+0x60>
    7c7a:	nop    WORD PTR [rax+rax*1+0x0]
    7c80:	mov    rsi,QWORD PTR [rbp+0x38]
    7c84:	mov    eax,0x16
    7c89:	test   rsi,rsi
    7c8c:	je     7b90 <do_set_target+0x60>
    7c92:	mov    eax,ebp
    7c94:	neg    eax
    7c96:	cmp    rbp,0xfffffffffffffc18
    7c9d:	ja     7b90 <do_set_target+0x60>
    7ca3:	call   a270 <talloc_reference>
    7ca8:	mov    rax,QWORD PTR [rbx+0x38]
    7cac:	mov    rdx,QWORD PTR [rbp+0x38]
    7cb0:	mov    esi,0x13
    7cb5:	mov    rdi,r12
    7cb8:	mov    QWORD PTR [rax+0x60],rdx
    7cbc:	call   4f50 <send_ack>
    7cc1:	xor    eax,eax
    7cc3:	jmp    7b90 <do_set_target+0x60>
    7cc8:	call   2820 <__stack_chk_fail@plt>
    7ccd:	mov    eax,ebx
    7ccf:	neg    eax
    7cd1:	jmp    7b90 <do_set_target+0x60>
    7cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ce0 <do_release>:
    7ce0:	push   rbx
    7ce1:	mov    rbx,rdi
    7ce4:	call   7650 <onearg_domain>
    7ce9:	cmp    rax,0xfffffffffffffc18
    7cef:	jbe    7cf8 <do_release+0x18>
    7cf1:	neg    eax
    7cf3:	pop    rbx
    7cf4:	ret    
    7cf5:	nop    DWORD PTR [rax]
    7cf8:	mov    rdi,QWORD PTR [rax+0x38]
    7cfc:	call   a6a0 <talloc_free>
    7d01:	mov    rdi,rbx
    7d04:	mov    esi,0x9
    7d09:	call   4f50 <send_ack>
    7d0e:	xor    eax,eax
    7d10:	pop    rbx
    7d11:	ret    
    7d12:	nop    DWORD PTR [rax+0x0]
    7d16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007d20 <do_resume>:
    7d20:	push   rbx
    7d21:	mov    rbx,rdi
    7d24:	call   7650 <onearg_domain>
    7d29:	cmp    rax,0xfffffffffffffc18
    7d2f:	jbe    7d38 <do_resume+0x18>
    7d31:	neg    eax
    7d33:	pop    rbx
    7d34:	ret    
    7d35:	nop    DWORD PTR [rax]
    7d38:	mov    DWORD PTR [rax+0x40],0x0
    7d3f:	mov    rdi,rbx
    7d42:	mov    esi,0x12
    7d47:	call   4f50 <send_ack>
    7d4c:	xor    eax,eax
    7d4e:	pop    rbx
    7d4f:	ret    

0000000000007d50 <do_get_domain_path>:
    7d50:	push   rbp
    7d51:	push   rbx
    7d52:	mov    rbp,rdi
    7d55:	mov    rdi,rsi
    7d58:	sub    rsp,0x8
    7d5c:	call   5020 <onearg>
    7d61:	mov    rdi,rax
    7d64:	mov    eax,0x16
    7d69:	test   rdi,rdi
    7d6c:	je     7dba <do_get_domain_path+0x6a>
    7d6e:	xor    esi,esi
    7d70:	mov    edx,0xa
    7d75:	call   2a10 <strtol@plt>
    7d7a:	lea    rsi,[rip+0x8ad7]        # 10858 <__FUNCTION__.12321+0x2f0>
    7d81:	mov    edx,eax
    7d83:	mov    rdi,rbp
    7d86:	xor    eax,eax
    7d88:	call   b950 <talloc_asprintf>
    7d8d:	test   rax,rax
    7d90:	mov    rbx,rax
    7d93:	je     7dc8 <do_get_domain_path+0x78>
    7d95:	mov    rdi,rax
    7d98:	call   2800 <strlen@plt>
    7d9d:	lea    ecx,[rax+0x1]
    7da0:	mov    rdx,rbx
    7da3:	mov    esi,0xa
    7da8:	mov    rdi,rbp
    7dab:	call   4a40 <send_reply>
    7db0:	mov    rdi,rbx
    7db3:	call   a6a0 <talloc_free>
    7db8:	xor    eax,eax
    7dba:	add    rsp,0x8
    7dbe:	pop    rbx
    7dbf:	pop    rbp
    7dc0:	ret    
    7dc1:	nop    DWORD PTR [rax+0x0]
    7dc8:	call   2750 <__errno_location@plt>
    7dcd:	mov    eax,DWORD PTR [rax]
    7dcf:	add    rsp,0x8
    7dd3:	pop    rbx
    7dd4:	pop    rbp
    7dd5:	ret    
    7dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007de0 <do_is_domain_introduced>:
    7de0:	push   rbx
    7de1:	mov    rbx,rdi
    7de4:	mov    rdi,rsi
    7de7:	call   5020 <onearg>
    7dec:	mov    rdi,rax
    7def:	mov    eax,0x16
    7df4:	test   rdi,rdi
    7df7:	je     7e58 <do_is_domain_introduced+0x78>
    7df9:	mov    edx,0xa
    7dfe:	xor    esi,esi
    7e00:	call   2a10 <strtol@plt>
    7e05:	cmp    eax,0x7ff0
    7e0a:	mov    edi,eax
    7e0c:	lea    rdx,[rip+0x7f17]        # fd2a <_IO_stdin_used+0x4ca>
    7e13:	je     7e44 <do_is_domain_introduced+0x64>
    7e15:	mov    rcx,QWORD PTR [rip+0x20e454]        # 216270 <domains>
    7e1c:	lea    rsi,[rip+0x20e44d]        # 216270 <domains>
    7e23:	cmp    rcx,rsi
    7e26:	je     7e3d <do_is_domain_introduced+0x5d>
    7e28:	cmp    eax,DWORD PTR [rcx+0x10]
    7e2b:	jne    7e35 <do_is_domain_introduced+0x55>
    7e2d:	jmp    7e44 <do_is_domain_introduced+0x64>
    7e2f:	nop
    7e30:	cmp    edi,DWORD PTR [rcx+0x10]
    7e33:	je     7e60 <do_is_domain_introduced+0x80>
    7e35:	mov    rcx,QWORD PTR [rcx]
    7e38:	cmp    rcx,rsi
    7e3b:	jne    7e30 <do_is_domain_introduced+0x50>
    7e3d:	lea    rdx,[rip+0x8a25]        # 10869 <__FUNCTION__.12321+0x301>
    7e44:	mov    ecx,0x2
    7e49:	mov    esi,0x11
    7e4e:	mov    rdi,rbx
    7e51:	call   4a40 <send_reply>
    7e56:	xor    eax,eax
    7e58:	pop    rbx
    7e59:	ret    
    7e5a:	nop    WORD PTR [rax+rax*1+0x0]
    7e60:	lea    rdx,[rip+0x7ec3]        # fd2a <_IO_stdin_used+0x4ca>
    7e67:	jmp    7e44 <do_is_domain_introduced+0x64>
    7e69:	nop    DWORD PTR [rax+0x0]

0000000000007e70 <do_reset_watches>:
    7e70:	push   rbx
    7e71:	mov    rbx,rdi
    7e74:	call   7500 <conn_delete_all_watches>
    7e79:	mov    rdi,rbx
    7e7c:	call   9630 <conn_delete_all_transactions>
    7e81:	mov    rdi,rbx
    7e84:	mov    esi,0x15
    7e89:	call   4f50 <send_ack>
    7e8e:	xor    eax,eax
    7e90:	pop    rbx
    7e91:	ret    
    7e92:	nop    DWORD PTR [rax+0x0]
    7e96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ea0 <get_implicit_path>:
    7ea0:	mov    rdx,QWORD PTR [rdi+0x58]
    7ea4:	lea    rax,[rip+0x89c0]        # 1086b <__FUNCTION__.12321+0x303>
    7eab:	test   rdx,rdx
    7eae:	je     7eb4 <get_implicit_path+0x14>
    7eb0:	mov    rax,QWORD PTR [rdx+0x28]
    7eb4:	repz ret 
    7eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ec0 <restore_existing_connections>:
    7ec0:	repz ret 
    7ec2:	nop    DWORD PTR [rax+0x0]
    7ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007ed0 <domain_entry_inc>:
    7ed0:	test   rdi,rdi
    7ed3:	je     7f19 <domain_entry_inc+0x49>
    7ed5:	mov    rax,QWORD PTR [rsi+0x20]
    7ed9:	test   rax,rax
    7edc:	je     7f20 <domain_entry_inc+0x50>
    7ede:	mov    esi,DWORD PTR [rax]
    7ee0:	cmp    esi,DWORD PTR [rdi+0x18]
    7ee3:	je     7f20 <domain_entry_inc+0x50>
    7ee5:	mov    rdi,QWORD PTR [rdi+0x38]
    7ee9:	test   rdi,rdi
    7eec:	jne    7f35 <domain_entry_inc+0x65>
    7eee:	mov    rax,QWORD PTR [rip+0x20e37b]        # 216270 <domains>
    7ef5:	lea    rdx,[rip+0x20e374]        # 216270 <domains>
    7efc:	cmp    rax,rdx
    7eff:	jne    7f10 <domain_entry_inc+0x40>
    7f01:	jmp    7f19 <domain_entry_inc+0x49>
    7f03:	nop    DWORD PTR [rax+rax*1+0x0]
    7f08:	mov    rax,QWORD PTR [rax]
    7f0b:	cmp    rax,rdx
    7f0e:	je     7f40 <domain_entry_inc+0x70>
    7f10:	cmp    esi,DWORD PTR [rax+0x10]
    7f13:	jne    7f08 <domain_entry_inc+0x38>
    7f15:	add    DWORD PTR [rax+0x44],0x1
    7f19:	repz ret 
    7f1b:	nop    DWORD PTR [rax+rax*1+0x0]
    7f20:	mov    rax,QWORD PTR [rdi+0x58]
    7f24:	test   rax,rax
    7f27:	je     7f19 <domain_entry_inc+0x49>
    7f29:	mov    rdi,QWORD PTR [rdi+0x38]
    7f2d:	test   rdi,rdi
    7f30:	je     7f15 <domain_entry_inc+0x45>
    7f32:	mov    esi,DWORD PTR [rax+0x10]
    7f35:	jmp    9510 <transaction_entry_inc>
    7f3a:	nop    WORD PTR [rax+rax*1+0x0]
    7f40:	repz ret 
    7f42:	nop    DWORD PTR [rax+0x0]
    7f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000007f50 <domain_entry_dec>:
    7f50:	test   rdi,rdi
    7f53:	je     7fb8 <domain_entry_dec+0x68>
    7f55:	mov    rax,QWORD PTR [rsi+0x20]
    7f59:	test   rax,rax
    7f5c:	je     7fa8 <domain_entry_dec+0x58>
    7f5e:	mov    esi,DWORD PTR [rax]
    7f60:	cmp    esi,DWORD PTR [rdi+0x18]
    7f63:	je     7fa8 <domain_entry_dec+0x58>
    7f65:	mov    rdi,QWORD PTR [rdi+0x38]
    7f69:	test   rdi,rdi
    7f6c:	jne    7fcc <domain_entry_dec+0x7c>
    7f6e:	mov    rax,QWORD PTR [rip+0x20e2fb]        # 216270 <domains>
    7f75:	lea    rdx,[rip+0x20e2f4]        # 216270 <domains>
    7f7c:	cmp    rax,rdx
    7f7f:	jne    7f90 <domain_entry_dec+0x40>
    7f81:	jmp    7fb8 <domain_entry_dec+0x68>
    7f83:	nop    DWORD PTR [rax+rax*1+0x0]
    7f88:	mov    rax,QWORD PTR [rax]
    7f8b:	cmp    rax,rdx
    7f8e:	je     7fd8 <domain_entry_dec+0x88>
    7f90:	cmp    esi,DWORD PTR [rax+0x10]
    7f93:	jne    7f88 <domain_entry_dec+0x38>
    7f95:	mov    edx,DWORD PTR [rax+0x44]
    7f98:	test   edx,edx
    7f9a:	je     7fb8 <domain_entry_dec+0x68>
    7f9c:	sub    edx,0x1
    7f9f:	mov    DWORD PTR [rax+0x44],edx
    7fa2:	ret    
    7fa3:	nop    DWORD PTR [rax+rax*1+0x0]
    7fa8:	mov    rax,QWORD PTR [rdi+0x58]
    7fac:	test   rax,rax
    7faf:	je     7fb8 <domain_entry_dec+0x68>
    7fb1:	mov    edx,DWORD PTR [rax+0x44]
    7fb4:	test   edx,edx
    7fb6:	jne    7fc0 <domain_entry_dec+0x70>
    7fb8:	repz ret 
    7fba:	nop    WORD PTR [rax+rax*1+0x0]
    7fc0:	mov    rdi,QWORD PTR [rdi+0x38]
    7fc4:	test   rdi,rdi
    7fc7:	je     7f9c <domain_entry_dec+0x4c>
    7fc9:	mov    esi,DWORD PTR [rax+0x10]
    7fcc:	jmp    95a0 <transaction_entry_dec>
    7fd1:	nop    DWORD PTR [rax+0x0]
    7fd8:	repz ret 
    7fda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007fe0 <domain_entry_fix>:
    7fe0:	mov    rcx,QWORD PTR [rip+0x20e289]        # 216270 <domains>
    7fe7:	lea    rax,[rip+0x20e282]        # 216270 <domains>
    7fee:	cmp    rcx,rax
    7ff1:	jne    8000 <domain_entry_fix+0x20>
    7ff3:	jmp    8028 <domain_entry_fix+0x48>
    7ff5:	nop    DWORD PTR [rax]
    7ff8:	mov    rcx,QWORD PTR [rcx]
    7ffb:	cmp    rcx,rax
    7ffe:	je     8028 <domain_entry_fix+0x48>
    8000:	cmp    edi,DWORD PTR [rcx+0x10]
    8003:	jne    7ff8 <domain_entry_fix+0x18>
    8005:	add    esi,DWORD PTR [rcx+0x44]
    8008:	mov    eax,0x0
    800d:	cmovns eax,esi
    8010:	test   dl,dl
    8012:	je     8017 <domain_entry_fix+0x37>
    8014:	mov    DWORD PTR [rcx+0x44],eax
    8017:	test   edi,edi
    8019:	je     8028 <domain_entry_fix+0x48>
    801b:	cmp    edi,DWORD PTR [rip+0x20e2af]        # 2162d0 <priv_domid>
    8021:	je     8028 <domain_entry_fix+0x48>
    8023:	ret    
    8024:	nop    DWORD PTR [rax+0x0]
    8028:	xor    eax,eax
    802a:	ret    
    802b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008030 <domain_entry>:
    8030:	xor    eax,eax
    8032:	test   rdi,rdi
    8035:	je     8052 <domain_entry+0x22>
    8037:	mov    rdx,QWORD PTR [rdi+0x58]
    803b:	test   rdx,rdx
    803e:	je     8052 <domain_entry+0x22>
    8040:	mov    ecx,DWORD PTR [rdx+0x10]
    8043:	test   ecx,ecx
    8045:	je     8052 <domain_entry+0x22>
    8047:	cmp    ecx,DWORD PTR [rip+0x20e283]        # 2162d0 <priv_domid>
    804d:	je     8052 <domain_entry+0x22>
    804f:	mov    eax,DWORD PTR [rdx+0x44]
    8052:	repz ret 
    8054:	xchg   ax,ax
    8056:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008060 <domain_watch_inc>:
    8060:	test   rdi,rdi
    8063:	je     8072 <domain_watch_inc+0x12>
    8065:	mov    rax,QWORD PTR [rdi+0x58]
    8069:	test   rax,rax
    806c:	je     8072 <domain_watch_inc+0x12>
    806e:	add    DWORD PTR [rax+0x48],0x1
    8072:	repz ret 
    8074:	xchg   ax,ax
    8076:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008080 <domain_watch_dec>:
    8080:	test   rdi,rdi
    8083:	je     809b <domain_watch_dec+0x1b>
    8085:	mov    rax,QWORD PTR [rdi+0x58]
    8089:	test   rax,rax
    808c:	je     809b <domain_watch_dec+0x1b>
    808e:	mov    edx,DWORD PTR [rax+0x48]
    8091:	test   edx,edx
    8093:	je     809b <domain_watch_dec+0x1b>
    8095:	sub    edx,0x1
    8098:	mov    DWORD PTR [rax+0x48],edx
    809b:	repz ret 
    809d:	nop    DWORD PTR [rax]

00000000000080a0 <domain_watch>:
    80a0:	xor    eax,eax
    80a2:	test   rdi,rdi
    80a5:	je     80c2 <domain_watch+0x22>
    80a7:	mov    rdx,QWORD PTR [rdi+0x58]
    80ab:	test   rdx,rdx
    80ae:	je     80c2 <domain_watch+0x22>
    80b0:	mov    ecx,DWORD PTR [rdx+0x10]
    80b3:	test   ecx,ecx
    80b5:	je     80c2 <domain_watch+0x22>
    80b7:	cmp    ecx,DWORD PTR [rip+0x20e213]        # 2162d0 <priv_domid>
    80bd:	je     80c2 <domain_watch+0x22>
    80bf:	mov    eax,DWORD PTR [rdx+0x48]
    80c2:	repz ret 
    80c4:	xchg   ax,ax
    80c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000080d0 <wrl_gettime_now>:
    80d0:	push   rbx
    80d1:	mov    rbx,rdi
    80d4:	mov    edi,0x1
    80d9:	sub    rsp,0x20
    80dd:	mov    rsi,rsp
    80e0:	mov    rax,QWORD PTR fs:0x28
    80e9:	mov    QWORD PTR [rsp+0x18],rax
    80ee:	xor    eax,eax
    80f0:	call   2aa0 <clock_gettime@plt>
    80f5:	test   eax,eax
    80f7:	jne    8139 <wrl_gettime_now+0x69>
    80f9:	mov    rax,QWORD PTR [rsp]
    80fd:	mov    rcx,QWORD PTR [rsp+0x8]
    8102:	movabs rdx,0x431bde82d7b634db
    810c:	mov    QWORD PTR [rbx],rax
    810f:	mov    rax,rcx
    8112:	sar    rcx,0x3f
    8116:	imul   rdx
    8119:	sar    rdx,0x12
    811d:	sub    rdx,rcx
    8120:	mov    rax,QWORD PTR [rsp+0x18]
    8125:	xor    rax,QWORD PTR fs:0x28
    812e:	mov    DWORD PTR [rbx+0x8],edx
    8131:	jne    8147 <wrl_gettime_now+0x77>
    8133:	add    rsp,0x20
    8137:	pop    rbx
    8138:	ret    
    8139:	lea    rdi,[rip+0x8468]        # 105a8 <__FUNCTION__.12321+0x40>
    8140:	xor    eax,eax
    8142:	call   bf20 <barf_perror>
    8147:	call   2820 <__stack_chk_fail@plt>
    814c:	nop    DWORD PTR [rax+0x0]

0000000000008150 <wrl_domain_new>:
    8150:	push   rbx
    8151:	mov    DWORD PTR [rdi+0x4c],0x0
    8158:	mov    rbx,rdi
    815b:	add    rdi,0x50
    815f:	call   80d0 <wrl_gettime_now>
    8164:	mov    ecx,DWORD PTR [rip+0x20e1be]        # 216328 <wrl_reserve>
    816a:	mov    edx,DWORD PTR [rbx+0x4c]
    816d:	mov    eax,0x2710
    8172:	add    QWORD PTR [rip+0x20e1b6],0x1        # 216330 <wrl_ndomains>
    817a:	lea    esi,[rcx+0xc350]
    8180:	sub    eax,edx
    8182:	cmp    eax,esi
    8184:	cmovg  eax,esi
    8187:	test   eax,eax
    8189:	jle    8198 <wrl_domain_new+0x48>
    818b:	sub    ecx,eax
    818d:	add    eax,edx
    818f:	mov    DWORD PTR [rip+0x20e193],ecx        # 216328 <wrl_reserve>
    8195:	mov    DWORD PTR [rbx+0x4c],eax
    8198:	pop    rbx
    8199:	ret    
    819a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000081a0 <new_domain>:
    81a0:	push   r12
    81a2:	mov    r12d,edx
    81a5:	push   rbp
    81a6:	lea    rdx,[rip+0x86ce]        # 1087b <__FUNCTION__.12321+0x313>
    81ad:	push   rbx
    81ae:	mov    ebp,esi
    81b0:	mov    esi,0x68
    81b5:	call   a240 <talloc_named_const>
    81ba:	test   rax,rax
    81bd:	je     8288 <new_domain+0xe8>
    81c3:	lea    rsi,[rip+0x868e]        # 10858 <__FUNCTION__.12321+0x2f0>
    81ca:	mov    rbx,rax
    81cd:	mov    DWORD PTR [rax+0x14],0x0
    81d4:	mov    DWORD PTR [rax+0x40],0x0
    81db:	mov    DWORD PTR [rax+0x10],ebp
    81de:	mov    rdi,rax
    81e1:	mov    edx,ebp
    81e3:	xor    eax,eax
    81e5:	call   b950 <talloc_asprintf>
    81ea:	test   rax,rax
    81ed:	mov    QWORD PTR [rbx+0x28],rax
    81f1:	je     8288 <new_domain+0xe8>
    81f7:	mov    rdi,rbx
    81fa:	call   8150 <wrl_domain_new>
    81ff:	mov    rax,QWORD PTR [rip+0x20e06a]        # 216270 <domains>
    8206:	lea    rsi,[rip+0xfffffffffffff383]        # 7590 <destroy_domain>
    820d:	mov    rdi,rbx
    8210:	mov    QWORD PTR [rax+0x8],rbx
    8214:	mov    QWORD PTR [rbx],rax
    8217:	lea    rax,[rip+0x20e052]        # 216270 <domains>
    821e:	mov    QWORD PTR [rip+0x20e04b],rbx        # 216270 <domains>
    8225:	mov    QWORD PTR [rbx+0x8],rax
    8229:	call   a1f0 <talloc_set_destructor>
    822e:	mov    rdi,QWORD PTR [rip+0x20e0e3]        # 216318 <xce_handle>
    8235:	mov    edx,r12d
    8238:	mov    esi,ebp
    823a:	call   2830 <xenevtchn_bind_interdomain@plt>
    823f:	cmp    eax,0xffffffff
    8242:	je     8288 <new_domain+0xe8>
    8244:	lea    rsi,[rip+0xfffffffffffff5e5]        # 7830 <readchn>
    824b:	lea    rdi,[rip+0xfffffffffffff4de]        # 7730 <writechn>
    8252:	mov    DWORD PTR [rbx+0x14],eax
    8255:	call   50d0 <new_connection>
    825a:	test   rax,rax
    825d:	mov    QWORD PTR [rbx+0x38],rax
    8261:	je     8288 <new_domain+0xe8>
    8263:	mov    QWORD PTR [rax+0x58],rbx
    8267:	mov    rax,QWORD PTR [rbx+0x38]
    826b:	mov    DWORD PTR [rax+0x18],ebp
    826e:	mov    DWORD PTR [rbx+0x18],r12d
    8272:	mov    rax,rbx
    8275:	mov    QWORD PTR [rbx+0x44],0x0
    827d:	pop    rbx
    827e:	pop    rbp
    827f:	pop    r12
    8281:	ret    
    8282:	nop    WORD PTR [rax+rax*1+0x0]
    8288:	xor    ebx,ebx
    828a:	mov    rax,rbx
    828d:	pop    rbx
    828e:	pop    rbp
    828f:	pop    r12
    8291:	ret    
    8292:	nop    DWORD PTR [rax+0x0]
    8296:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000082a0 <do_introduce>:
    82a0:	push   r15
    82a2:	push   r14
    82a4:	mov    edx,0x3
    82a9:	push   r13
    82ab:	push   r12
    82ad:	mov    r12,rsi
    82b0:	push   rbp
    82b1:	push   rbx
    82b2:	mov    rbp,rdi
    82b5:	mov    rdi,r12
    82b8:	sub    rsp,0x38
    82bc:	lea    rsi,[rsp+0x10]
    82c1:	mov    rax,QWORD PTR fs:0x28
    82ca:	mov    QWORD PTR [rsp+0x28],rax
    82cf:	xor    eax,eax
    82d1:	call   49c0 <get_strings>
    82d6:	cmp    eax,0x2
    82d9:	jbe    8408 <do_introduce+0x168>
    82df:	test   rbp,rbp
    82e2:	je     82f8 <do_introduce+0x58>
    82e4:	mov    rax,QWORD PTR [rbp+0x58]
    82e8:	test   rax,rax
    82eb:	je     82f8 <do_introduce+0x58>
    82ed:	mov    edx,DWORD PTR [rax+0x10]
    82f0:	test   edx,edx
    82f2:	jne    8430 <do_introduce+0x190>
    82f8:	cmp    BYTE PTR [rbp+0x1c],0x0
    82fc:	mov    eax,0xd
    8301:	je     840d <do_introduce+0x16d>
    8307:	mov    rdi,QWORD PTR [rsp+0x10]
    830c:	xor    esi,esi
    830e:	mov    edx,0xa
    8313:	call   2a10 <strtol@plt>
    8318:	mov    rdi,QWORD PTR [rsp+0x18]
    831d:	xor    esi,esi
    831f:	mov    edx,0xa
    8324:	mov    r14,rax
    8327:	call   2a10 <strtol@plt>
    832c:	mov    rdi,QWORD PTR [rsp+0x20]
    8331:	xor    esi,esi
    8333:	mov    edx,0xa
    8338:	mov    r13,rax
    833b:	call   2a10 <strtol@plt>
    8340:	test   eax,eax
    8342:	mov    r15,rax
    8345:	je     8408 <do_introduce+0x168>
    834b:	mov    rbx,QWORD PTR [rip+0x20df1e]        # 216270 <domains>
    8352:	lea    rax,[rip+0x20df17]        # 216270 <domains>
    8359:	mov    edx,r14d
    835c:	cmp    rbx,rax
    835f:	je     8381 <do_introduce+0xe1>
    8361:	cmp    r14d,DWORD PTR [rbx+0x10]
    8365:	jne    8379 <do_introduce+0xd9>
    8367:	jmp    8448 <do_introduce+0x1a8>
    836c:	nop    DWORD PTR [rax+0x0]
    8370:	cmp    edx,DWORD PTR [rbx+0x10]
    8373:	je     8448 <do_introduce+0x1a8>
    8379:	mov    rbx,QWORD PTR [rbx]
    837c:	cmp    rbx,rax
    837f:	jne    8370 <do_introduce+0xd0>
    8381:	mov    rax,QWORD PTR [rip+0x211008]        # 219390 <xgt_handle>
    8388:	movzx  esi,r14w
    838c:	mov    rdi,QWORD PTR [rax]
    838f:	test   rdi,rdi
    8392:	je     8568 <do_introduce+0x2c8>
    8398:	mov    ecx,0x3
    839d:	mov    edx,0x1
    83a2:	call   2c70 <xengnttab_map_grant_ref@plt>
    83a7:	mov    rcx,rax
    83aa:	test   rcx,rcx
    83ad:	je     8558 <do_introduce+0x2b8>
    83b3:	mov    edx,r15d
    83b6:	mov    esi,r14d
    83b9:	mov    rdi,r12
    83bc:	mov    QWORD PTR [rsp],rcx
    83c0:	call   81a0 <new_domain>
    83c5:	test   rax,rax
    83c8:	mov    rbx,rax
    83cb:	mov    rcx,QWORD PTR [rsp]
    83cf:	je     858c <do_introduce+0x2ec>
    83d5:	mov    rdi,QWORD PTR [rax+0x38]
    83d9:	mov    QWORD PTR [rax+0x30],rcx
    83dd:	mov    rsi,rax
    83e0:	mov    QWORD PTR [rax+0x20],r13
    83e4:	call   a3f0 <talloc_steal>
    83e9:	lea    rdx,[rip+0x8499]        # 10889 <__FUNCTION__.12321+0x321>
    83f0:	xor    ecx,ecx
    83f2:	mov    rsi,r12
    83f5:	xor    edi,edi
    83f7:	call   70b0 <fire_watches>
    83fc:	jmp    8483 <do_introduce+0x1e3>
    8401:	nop    DWORD PTR [rax+0x0]
    8408:	mov    eax,0x16
    840d:	mov    rcx,QWORD PTR [rsp+0x28]
    8412:	xor    rcx,QWORD PTR fs:0x28
    841b:	jne    85b0 <do_introduce+0x310>
    8421:	add    rsp,0x38
    8425:	pop    rbx
    8426:	pop    rbp
    8427:	pop    r12
    8429:	pop    r13
    842b:	pop    r14
    842d:	pop    r15
    842f:	ret    
    8430:	cmp    edx,DWORD PTR [rip+0x20de9a]        # 2162d0 <priv_domid>
    8436:	mov    eax,0xd
    843b:	jne    840d <do_introduce+0x16d>
    843d:	jmp    82f8 <do_introduce+0x58>
    8442:	nop    WORD PTR [rax+rax*1+0x0]
    8448:	cmp    QWORD PTR [rbx+0x20],r13
    844c:	jne    8408 <do_introduce+0x168>
    844e:	cmp    QWORD PTR [rbx+0x38],rbp
    8452:	je     8408 <do_introduce+0x168>
    8454:	mov    esi,DWORD PTR [rbx+0x14]
    8457:	mov    rdi,QWORD PTR [rip+0x20deba]        # 216318 <xce_handle>
    845e:	test   esi,esi
    8460:	jne    8540 <do_introduce+0x2a0>
    8466:	mov    edx,r15d
    8469:	mov    esi,r14d
    846c:	call   2830 <xenevtchn_bind_interdomain@plt>
    8471:	mov    edx,0x0
    8476:	cmp    eax,0xffffffff
    8479:	mov    DWORD PTR [rbx+0x18],r15d
    847d:	cmove  eax,edx
    8480:	mov    DWORD PTR [rbx+0x14],eax
    8483:	mov    r12,QWORD PTR [rbx+0x38]
    8487:	mov    rdi,r12
    848a:	lea    r13,[r12+0x28]
    848f:	call   7500 <conn_delete_all_watches>
    8494:	mov    rdi,r12
    8497:	call   9630 <conn_delete_all_transactions>
    849c:	mov    rdi,QWORD PTR [r12+0x28]
    84a1:	cmp    r13,rdi
    84a4:	jne    84dc <do_introduce+0x23c>
    84a6:	jmp    84e1 <do_introduce+0x241>
    84a8:	nop    DWORD PTR [rax+rax*1+0x0]
    84b0:	mov    rdx,QWORD PTR [rdi]
    84b3:	mov    rax,QWORD PTR [rdi+0x8]
    84b7:	mov    QWORD PTR [rdx+0x8],rax
    84bb:	mov    QWORD PTR [rax],rdx
    84be:	mov    QWORD PTR [rdi],0x100100
    84c5:	mov    QWORD PTR [rdi+0x8],0x200200
    84cd:	call   a6a0 <talloc_free>
    84d2:	mov    rdi,QWORD PTR [r12+0x28]
    84d7:	cmp    rdi,r13
    84da:	je     84e1 <do_introduce+0x241>
    84dc:	test   rdi,rdi
    84df:	jne    84b0 <do_introduce+0x210>
    84e1:	mov    rdi,QWORD PTR [r12+0x20]
    84e6:	call   a6a0 <talloc_free>
    84eb:	mov    rax,QWORD PTR [rbx+0x30]
    84ef:	mov    esi,0x8
    84f4:	mov    rdi,rbp
    84f7:	mov    DWORD PTR [rax+0x804],0x0
    8501:	mov    rax,QWORD PTR [rbx+0x30]
    8505:	mov    DWORD PTR [rax+0x800],0x0
    850f:	mov    rax,QWORD PTR [rbx+0x30]
    8513:	mov    DWORD PTR [rax+0x80c],0x0
    851d:	mov    rax,QWORD PTR [rbx+0x30]
    8521:	mov    DWORD PTR [rax+0x808],0x0
    852b:	call   4f50 <send_ack>
    8530:	xor    eax,eax
    8532:	jmp    840d <do_introduce+0x16d>
    8537:	nop    WORD PTR [rax+rax*1+0x0]
    8540:	call   29b0 <xenevtchn_unbind@plt>
    8545:	mov    rdi,QWORD PTR [rip+0x20ddcc]        # 216318 <xce_handle>
    854c:	jmp    8466 <do_introduce+0x1c6>
    8551:	nop    DWORD PTR [rax+0x0]
    8558:	call   2750 <__errno_location@plt>
    855d:	mov    eax,DWORD PTR [rax]
    855f:	jmp    840d <do_introduce+0x16d>
    8564:	nop    DWORD PTR [rax+0x0]
    8568:	mov    rax,QWORD PTR [rip+0x20ddd1]        # 216340 <xc_handle>
    856f:	mov    ecx,0x3
    8574:	mov    r8,r13
    8577:	mov    edx,0x1000
    857c:	mov    rdi,QWORD PTR [rax]
    857f:	call   2c40 <xc_map_foreign_range@plt>
    8584:	mov    rcx,rax
    8587:	jmp    83aa <do_introduce+0x10a>
    858c:	mov    QWORD PTR [rsp+0x8],rcx
    8591:	call   2750 <__errno_location@plt>
    8596:	mov    rcx,QWORD PTR [rsp+0x8]
    859b:	mov    eax,DWORD PTR [rax]
    859d:	mov    rdi,rcx
    85a0:	mov    DWORD PTR [rsp],eax
    85a3:	call   7560 <unmap_interface>
    85a8:	mov    eax,DWORD PTR [rsp]
    85ab:	jmp    840d <do_introduce+0x16d>
    85b0:	call   2820 <__stack_chk_fail@plt>
    85b5:	nop
    85b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000085c0 <domain_init>:
    85c0:	push   rbx
    85c1:	call   bb70 <talloc_autofree_context>
    85c6:	lea    rdx,[rip+0x82cd]        # 1089a <__FUNCTION__.12321+0x332>
    85cd:	mov    esi,0x8
    85d2:	mov    rdi,rax
    85d5:	call   a240 <talloc_named_const>
    85da:	test   rax,rax
    85dd:	mov    QWORD PTR [rip+0x20dd5c],rax        # 216340 <xc_handle>
    85e4:	je     8746 <domain_init+0x186>
    85ea:	xor    edi,edi
    85ec:	xor    edx,edx
    85ee:	xor    esi,esi
    85f0:	mov    rbx,rax
    85f3:	call   27d0 <xc_interface_open@plt>
    85f8:	mov    rdi,QWORD PTR [rip+0x20dd41]        # 216340 <xc_handle>
    85ff:	mov    QWORD PTR [rbx],rax
    8602:	cmp    QWORD PTR [rdi],0x0
    8606:	je     8738 <domain_init+0x178>
    860c:	lea    rsi,[rip+0xfffffffffffff0fd]        # 7710 <close_xc_handle>
    8613:	call   a1f0 <talloc_set_destructor>
    8618:	call   bb70 <talloc_autofree_context>
    861d:	lea    rdx,[rip+0x8284]        # 108a8 <__FUNCTION__.12321+0x340>
    8624:	mov    esi,0x8
    8629:	mov    rdi,rax
    862c:	call   a240 <talloc_named_const>
    8631:	test   rax,rax
    8634:	mov    rbx,rax
    8637:	mov    QWORD PTR [rip+0x210d52],rax        # 219390 <xgt_handle>
    863e:	je     872a <domain_init+0x16a>
    8644:	xor    edi,edi
    8646:	xor    esi,esi
    8648:	call   2900 <xengnttab_open@plt>
    864d:	mov    QWORD PTR [rbx],rax
    8650:	mov    rdi,QWORD PTR [rip+0x210d39]        # 219390 <xgt_handle>
    8657:	cmp    QWORD PTR [rdi],0x0
    865b:	jne    86f8 <domain_init+0x138>
    8661:	lea    rdi,[rip+0x7fe8]        # 10650 <__FUNCTION__.12321+0xe8>
    8668:	xor    eax,eax
    866a:	call   QWORD PTR [rip+0x20dc10]        # 216280 <xprintf>
    8670:	xor    esi,esi
    8672:	xor    edi,edi
    8674:	call   26e0 <xenevtchn_open@plt>
    8679:	test   rax,rax
    867c:	mov    QWORD PTR [rip+0x20dc95],rax        # 216318 <xce_handle>
    8683:	je     871e <domain_init+0x15e>
    8689:	call   f680 <xenbus_evtchn>
    868e:	cmp    eax,0xffffffff
    8691:	je     8710 <domain_init+0x150>
    8693:	mov    esi,DWORD PTR [rip+0x20dc3f]        # 2162d8 <dom0_domid>
    8699:	xor    edi,edi
    869b:	mov    edx,eax
    869d:	call   81a0 <new_domain>
    86a2:	test   rax,rax
    86a5:	mov    rbx,rax
    86a8:	je     8710 <domain_init+0x150>
    86aa:	call   f730 <xenbus_map>
    86af:	test   rax,rax
    86b2:	mov    QWORD PTR [rbx+0x30],rax
    86b6:	je     8710 <domain_init+0x150>
    86b8:	mov    rdi,QWORD PTR [rbx+0x38]
    86bc:	mov    rsi,rbx
    86bf:	call   a3f0 <talloc_steal>
    86c4:	mov    esi,DWORD PTR [rbx+0x14]
    86c7:	mov    rdi,QWORD PTR [rip+0x20dc4a]        # 216318 <xce_handle>
    86ce:	call   2730 <xenevtchn_notify@plt>
    86d3:	mov    rdi,QWORD PTR [rip+0x20dc3e]        # 216318 <xce_handle>
    86da:	mov    esi,0x3
    86df:	call   29d0 <xenevtchn_bind_virq@plt>
    86e4:	cmp    eax,0xffffffff
    86e7:	je     8754 <domain_init+0x194>
    86e9:	mov    DWORD PTR [rip+0x20dc49],eax        # 216338 <virq_port>
    86ef:	pop    rbx
    86f0:	ret    
    86f1:	nop    DWORD PTR [rax+0x0]
    86f8:	lea    rsi,[rip+0xffffffffffffeff1]        # 76f0 <close_xgt_handle>
    86ff:	call   a1f0 <talloc_set_destructor>
    8704:	jmp    8670 <domain_init+0xb0>
    8709:	nop    DWORD PTR [rax+0x0]
    8710:	lea    rdi,[rip+0x7f69]        # 10680 <__FUNCTION__.12321+0x118>
    8717:	xor    eax,eax
    8719:	call   bf20 <barf_perror>
    871e:	lea    rdi,[rip+0x8195]        # 108ba <__FUNCTION__.12321+0x352>
    8725:	call   bf20 <barf_perror>
    872a:	lea    rdi,[rip+0x7ef7]        # 10628 <__FUNCTION__.12321+0xc0>
    8731:	xor    eax,eax
    8733:	call   bf20 <barf_perror>
    8738:	lea    rdi,[rip+0x7ec1]        # 10600 <__FUNCTION__.12321+0x98>
    873f:	xor    eax,eax
    8741:	call   bf20 <barf_perror>
    8746:	lea    rdi,[rip+0x7e8b]        # 105d8 <__FUNCTION__.12321+0x70>
    874d:	xor    eax,eax
    874f:	call   bf20 <barf_perror>
    8754:	lea    rdi,[rip+0x7f45]        # 106a0 <__FUNCTION__.12321+0x138>
    875b:	xor    eax,eax
    875d:	call   bf20 <barf_perror>
    8762:	nop    DWORD PTR [rax+0x0]
    8766:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008770 <wrl_domain_destroy>:
    8770:	mov    ecx,DWORD PTR [rip+0x20dbb2]        # 216328 <wrl_reserve>
    8776:	mov    edx,DWORD PTR [rdi+0x4c]
    8779:	mov    eax,0x2710
    877e:	sub    QWORD PTR [rip+0x20dbaa],0x1        # 216330 <wrl_ndomains>
    8786:	sub    eax,ecx
    8788:	cmp    eax,edx
    878a:	cmovg  eax,edx
    878d:	test   eax,eax
    878f:	jle    879e <wrl_domain_destroy+0x2e>
    8791:	sub    edx,eax
    8793:	add    eax,ecx
    8795:	mov    DWORD PTR [rdi+0x4c],edx
    8798:	mov    DWORD PTR [rip+0x20db8a],eax        # 216328 <wrl_reserve>
    879e:	repz ret 

00000000000087a0 <wrl_credit_update>:
    87a0:	mov    r11,rdx
    87a3:	mov    rdx,rsi
    87a6:	sub    rdx,QWORD PTR [rdi+0x50]
    87aa:	mov    r10d,r11d
    87ad:	mov    eax,0xf4240
    87b2:	sub    r10d,DWORD PTR [rdi+0x58]
    87b6:	mov    r8d,DWORD PTR [rip+0x20db6b]        # 216328 <wrl_reserve>
    87bd:	cmp    rdx,0xf4240
    87c4:	cmovle rax,rdx
    87c8:	movsxd r10,r10d
    87cb:	imul   rax,rax,0x3e8
    87d2:	add    r10,rax
    87d5:	mov    eax,0x0
    87da:	cmovs  r10,rax
    87de:	imul   rcx,QWORD PTR [rip+0x20db47],0x3e8        # 216330 <wrl_ndomains>
    87e9:	imul   rax,r10,0x30d40
    87f0:	cqo    
    87f2:	idiv   rcx
    87f5:	movsxd rdx,DWORD PTR [rdi+0x4c]
    87f9:	add    rax,rdx
    87fc:	mov    edx,0x3b9aca00
    8801:	cmp    rax,0x3b9aca00
    8807:	cmovg  rax,rdx
    880b:	mov    edx,eax
    880d:	mov    ecx,eax
    880f:	mov    DWORD PTR [rdi+0x4c],eax
    8812:	neg    edx
    8814:	cmp    edx,r8d
    8817:	cmovg  edx,r8d
    881b:	test   edx,edx
    881d:	jle    882f <wrl_credit_update+0x8f>
    881f:	lea    ecx,[rdx+rax*1]
    8822:	sub    r8d,edx
    8825:	mov    DWORD PTR [rip+0x20dafc],r8d        # 216328 <wrl_reserve>
    882c:	mov    DWORD PTR [rdi+0x4c],ecx
    882f:	lea    eax,[rcx-0x2710]
    8835:	xor    r9d,r9d
    8838:	test   eax,eax
    883a:	jle    8851 <wrl_credit_update+0xb1>
    883c:	cmp    eax,0x3b9aca00
    8841:	mov    r9d,0x3b9aca00
    8847:	cmovle r9d,eax
    884b:	sub    ecx,r9d
    884e:	mov    DWORD PTR [rdi+0x4c],ecx
    8851:	mov    eax,0xf4240
    8856:	sub    eax,r8d
    8859:	cmp    eax,r9d
    885c:	cmovg  eax,r9d
    8860:	test   eax,eax
    8862:	jle    8871 <wrl_credit_update+0xd1>
    8864:	add    r8d,eax
    8867:	sub    r9d,eax
    886a:	mov    DWORD PTR [rip+0x20dab7],r8d        # 216328 <wrl_reserve>
    8871:	mov    QWORD PTR [rdi+0x50],rsi
    8875:	mov    esi,DWORD PTR [rdi+0x10]
    8878:	movsxd rcx,ecx
    887b:	mov    QWORD PTR [rdi+0x58],r11
    887f:	lea    rdi,[rip+0x7e4a]        # 106d0 <__FUNCTION__.12321+0x168>
    8886:	movsxd r9,r9d
    8889:	movsxd r8,r8d
    888c:	mov    rdx,r10
    888f:	xor    eax,eax
    8891:	jmp    3d00 <trace>
    8896:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000088a0 <wrl_apply_debit_actual.part.3>:
    88a0:	push   rbx
    88a1:	mov    rbx,rdi
    88a4:	sub    rsp,0x20
    88a8:	mov    rdi,rsp
    88ab:	mov    rax,QWORD PTR fs:0x28
    88b4:	mov    QWORD PTR [rsp+0x18],rax
    88b9:	xor    eax,eax
    88bb:	call   80d0 <wrl_gettime_now>
    88c0:	mov    rsi,QWORD PTR [rsp]
    88c4:	mov    rdx,QWORD PTR [rsp+0x8]
    88c9:	mov    rdi,rbx
    88cc:	call   87a0 <wrl_credit_update>
    88d1:	mov    eax,DWORD PTR [rbx+0x4c]
    88d4:	movsxd rcx,DWORD PTR [rip+0x20da4d]        # 216328 <wrl_reserve>
    88db:	lea    rdi,[rip+0x7e36]        # 10718 <__FUNCTION__.12321+0x1b0>
    88e2:	mov    esi,DWORD PTR [rbx+0x10]
    88e5:	lea    edx,[rax-0x3e8]
    88eb:	xor    eax,eax
    88ed:	mov    DWORD PTR [rbx+0x4c],edx
    88f0:	movsxd rdx,edx
    88f3:	call   3d00 <trace>
    88f8:	mov    eax,DWORD PTR [rbx+0x4c]
    88fb:	test   eax,eax
    88fd:	js     8918 <wrl_apply_debit_actual.part.3+0x78>
    88ff:	mov    rax,QWORD PTR [rsp+0x18]
    8904:	xor    rax,QWORD PTR fs:0x28
    890d:	jne    8987 <wrl_apply_debit_actual.part.3+0xe7>
    890f:	add    rsp,0x20
    8913:	pop    rbx
    8914:	ret    
    8915:	nop    DWORD PTR [rax]
    8918:	cmp    BYTE PTR [rbx+0x60],0x0
    891c:	je     8958 <wrl_apply_debit_actual.part.3+0xb8>
    891e:	cmp    QWORD PTR [rip+0x20d9fa],0x0        # 216320 <wrl_log_last_warning>
    8926:	je     8938 <wrl_apply_debit_actual.part.3+0x98>
    8928:	mov    rax,QWORD PTR [rsp]
    892c:	mov    QWORD PTR [rip+0x20d9ed],rax        # 216320 <wrl_log_last_warning>
    8933:	jmp    88ff <wrl_apply_debit_actual.part.3+0x5f>
    8935:	nop    DWORD PTR [rax]
    8938:	lea    rdx,[rip+0x7e39]        # 10778 <__FUNCTION__.12321+0x210>
    893f:	mov    esi,0x1
    8944:	mov    edi,0x4
    8949:	xor    eax,eax
    894b:	call   2b60 <__syslog_chk@plt>
    8950:	jmp    8928 <wrl_apply_debit_actual.part.3+0x88>
    8952:	nop    WORD PTR [rax+rax*1+0x0]
    8958:	mov    ecx,DWORD PTR [rbx+0x10]
    895b:	lea    rdx,[rip+0x7de6]        # 10748 <__FUNCTION__.12321+0x1e0>
    8962:	xor    eax,eax
    8964:	mov    BYTE PTR [rbx+0x60],0x1
    8968:	mov    esi,0x1
    896d:	mov    edi,0x4
    8972:	call   2b60 <__syslog_chk@plt>
    8977:	mov    rax,QWORD PTR [rsp]
    897b:	mov    QWORD PTR [rip+0x20d99e],rax        # 216320 <wrl_log_last_warning>
    8982:	jmp    88ff <wrl_apply_debit_actual.part.3+0x5f>
    8987:	call   2820 <__stack_chk_fail@plt>
    898c:	nop    DWORD PTR [rax+0x0]

0000000000008990 <wrl_check_timeout>:
    8990:	push   rbp
    8991:	push   rbx
    8992:	mov    rbp,rdi
    8995:	mov    rbx,rcx
    8998:	sub    rsp,0x8
    899c:	call   87a0 <wrl_credit_update>
    89a1:	mov    esi,DWORD PTR [rbp+0x4c]
    89a4:	test   esi,esi
    89a6:	js     89b0 <wrl_check_timeout+0x20>
    89a8:	add    rsp,0x8
    89ac:	pop    rbx
    89ad:	pop    rbp
    89ae:	ret    
    89af:	nop
    89b0:	mov    ecx,DWORD PTR [rbx]
    89b2:	test   ecx,ecx
    89b4:	je     89a8 <wrl_check_timeout+0x18>
    89b6:	imul   edx,esi,0xfffffc18
    89bc:	movabs rdi,0x29f16b11c6d1e11
    89c6:	movsxd rdx,edx
    89c9:	imul   rdx,QWORD PTR [rip+0x20d95f]        # 216330 <wrl_ndomains>
    89d1:	shr    rdx,0x6
    89d5:	mov    rax,rdx
    89d8:	mul    rdi
    89db:	mov    eax,0x7fffffff
    89e0:	shr    rdx,0x5
    89e4:	cmp    rdx,0x7fffffff
    89eb:	cmova  rdx,rax
    89ef:	cmp    ecx,edx
    89f1:	mov    r8d,edx
    89f4:	jg     89fb <wrl_check_timeout+0x6b>
    89f6:	cmp    ecx,0xffffffff
    89f9:	jne    8a01 <wrl_check_timeout+0x71>
    89fb:	mov    DWORD PTR [rbx],r8d
    89fe:	mov    esi,DWORD PTR [rbp+0x4c]
    8a01:	movsxd rcx,DWORD PTR [rip+0x20d920]        # 216328 <wrl_reserve>
    8a08:	movsxd rdx,esi
    8a0b:	mov    esi,DWORD PTR [rbp+0x10]
    8a0e:	add    rsp,0x8
    8a12:	lea    rdi,[rip+0x7d8f]        # 107a8 <__FUNCTION__.12321+0x240>
    8a19:	xor    eax,eax
    8a1b:	pop    rbx
    8a1c:	pop    rbp
    8a1d:	jmp    3d00 <trace>
    8a22:	nop    DWORD PTR [rax+0x0]
    8a26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008a30 <wrl_apply_debit_actual>:
    8a30:	test   rdi,rdi
    8a33:	je     8a40 <wrl_apply_debit_actual+0x10>
    8a35:	jmp    88a0 <wrl_apply_debit_actual.part.3>
    8a3a:	nop    WORD PTR [rax+rax*1+0x0]
    8a40:	repz ret 
    8a42:	nop    DWORD PTR [rax+0x0]
    8a46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008a50 <wrl_log_periodic>:
    8a50:	mov    rax,QWORD PTR [rip+0x20d8c9]        # 216320 <wrl_log_last_warning>
    8a57:	test   rax,rax
    8a5a:	je     8a65 <wrl_log_periodic+0x15>
    8a5c:	sub    rdi,rax
    8a5f:	cmp    rdi,0x78
    8a63:	jg     8a70 <wrl_log_periodic+0x20>
    8a65:	repz ret 
    8a67:	nop    WORD PTR [rax+rax*1+0x0]
    8a70:	lea    rdx,[rip+0x7d71]        # 107e8 <__FUNCTION__.12321+0x280>
    8a77:	sub    rsp,0x8
    8a7b:	mov    esi,0x1
    8a80:	mov    edi,0x4
    8a85:	xor    eax,eax
    8a87:	call   2b60 <__syslog_chk@plt>
    8a8c:	mov    QWORD PTR [rip+0x20d889],0x0        # 216320 <wrl_log_last_warning>
    8a97:	add    rsp,0x8
    8a9b:	ret    
    8a9c:	nop    DWORD PTR [rax+0x0]

0000000000008aa0 <wrl_apply_debit_direct>:
    8aa0:	test   rdi,rdi
    8aa3:	je     8aac <wrl_apply_debit_direct+0xc>
    8aa5:	cmp    QWORD PTR [rdi+0x38],0x0
    8aaa:	je     8ab0 <wrl_apply_debit_direct+0x10>
    8aac:	repz ret 
    8aae:	xchg   ax,ax
    8ab0:	cmp    QWORD PTR [rip+0x2108e0],0x0        # 219398 <wrl_ntransactions>
    8ab8:	je     8aac <wrl_apply_debit_direct+0xc>
    8aba:	mov    rdi,QWORD PTR [rdi+0x58]
    8abe:	test   rdi,rdi
    8ac1:	je     8aac <wrl_apply_debit_direct+0xc>
    8ac3:	jmp    88a0 <wrl_apply_debit_actual.part.3>
    8ac8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008ad0 <wrl_apply_debit_trans_commit>:
    8ad0:	cmp    QWORD PTR [rip+0x2108c0],0x1        # 219398 <wrl_ntransactions>
    8ad8:	jle    8af0 <wrl_apply_debit_trans_commit+0x20>
    8ada:	mov    rdi,QWORD PTR [rdi+0x58]
    8ade:	test   rdi,rdi
    8ae1:	je     8af0 <wrl_apply_debit_trans_commit+0x20>
    8ae3:	jmp    88a0 <wrl_apply_debit_actual.part.3>
    8ae8:	nop    DWORD PTR [rax+rax*1+0x0]
    8af0:	repz ret 
    8af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8afc:	nop    DWORD PTR [rax+0x0]

0000000000008b00 <destroy_transaction>:
    8b00:	push   r14
    8b02:	lea    rsi,[rip+0x7e15]        # 1091e <__FUNCTION__.11174+0x46>
    8b09:	push   r13
    8b0b:	push   r12
    8b0d:	push   rbp
    8b0e:	mov    rbp,rdi
    8b11:	push   rbx
    8b12:	sub    QWORD PTR [rip+0x21087e],0x1        # 219398 <wrl_ntransactions>
    8b1a:	call   48d0 <trace_destroy>
    8b1f:	mov    rbx,QWORD PTR [rbp+0x20]
    8b23:	test   rbx,rbx
    8b26:	je     8bc0 <destroy_transaction+0xc0>
    8b2c:	lea    r12,[rbp+0x20]
    8b30:	cmp    rbx,r12
    8b33:	je     8bc0 <destroy_transaction+0xc0>
    8b39:	lea    r13,[rip+0x7da7]        # 108e7 <__FUNCTION__.11174+0xf>
    8b40:	jmp    8b7b <destroy_transaction+0x7b>
    8b42:	nop    WORD PTR [rax+rax*1+0x0]
    8b48:	mov    rdx,QWORD PTR [rbx]
    8b4b:	mov    rax,QWORD PTR [rbx+0x8]
    8b4f:	mov    rdi,rbx
    8b52:	mov    QWORD PTR [rdx+0x8],rax
    8b56:	mov    QWORD PTR [rax],rdx
    8b59:	mov    QWORD PTR [rbx],0x100100
    8b60:	mov    QWORD PTR [rbx+0x8],0x200200
    8b68:	call   a6a0 <talloc_free>
    8b6d:	mov    rbx,QWORD PTR [rbp+0x20]
    8b71:	cmp    rbx,r12
    8b74:	je     8bc0 <destroy_transaction+0xc0>
    8b76:	test   rbx,rbx
    8b79:	je     8bc0 <destroy_transaction+0xc0>
    8b7b:	cmp    BYTE PTR [rbx+0x22],0x0
    8b7f:	je     8b48 <destroy_transaction+0x48>
    8b81:	mov    rcx,QWORD PTR [rbx+0x10]
    8b85:	mov    rdx,QWORD PTR [rbp+0x18]
    8b89:	xor    eax,eax
    8b8b:	mov    rsi,r13
    8b8e:	mov    rdi,rbx
    8b91:	call   b950 <talloc_asprintf>
    8b96:	test   rax,rax
    8b99:	mov    r14,rax
    8b9c:	je     8b48 <destroy_transaction+0x48>
    8b9e:	mov    rdi,rax
    8ba1:	call   2800 <strlen@plt>
    8ba6:	mov    rdi,QWORD PTR [rip+0x20d733]        # 2162e0 <tdb_ctx>
    8bad:	mov    rsi,r14
    8bb0:	mov    rdx,rax
    8bb3:	call   e000 <tdb_delete>
    8bb8:	jmp    8b48 <destroy_transaction+0x48>
    8bba:	nop    WORD PTR [rax+rax*1+0x0]
    8bc0:	pop    rbx
    8bc1:	xor    eax,eax
    8bc3:	pop    rbp
    8bc4:	pop    r12
    8bc6:	pop    r13
    8bc8:	pop    r14
    8bca:	ret    
    8bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008bd0 <transaction_fix_domains>:
    8bd0:	push   r13
    8bd2:	push   r12
    8bd4:	lea    r12,[rdi+0x30]
    8bd8:	push   rbp
    8bd9:	push   rbx
    8bda:	sub    rsp,0x8
    8bde:	mov    rbx,QWORD PTR [rdi+0x30]
    8be2:	cmp    rbx,r12
    8be5:	je     8c12 <transaction_fix_domains+0x42>
    8be7:	mov    r13d,esi
    8bea:	movzx  ebp,sil
    8bee:	xchg   ax,ax
    8bf0:	mov    esi,DWORD PTR [rbx+0x14]
    8bf3:	mov    edi,DWORD PTR [rbx+0x10]
    8bf6:	mov    edx,ebp
    8bf8:	call   7fe0 <domain_entry_fix>
    8bfd:	test   r13b,r13b
    8c00:	jne    8c0a <transaction_fix_domains+0x3a>
    8c02:	cmp    DWORD PTR [rip+0x20d414],eax        # 21601c <quota_nb_entry_per_domain>
    8c08:	jle    8c20 <transaction_fix_domains+0x50>
    8c0a:	mov    rbx,QWORD PTR [rbx]
    8c0d:	cmp    rbx,r12
    8c10:	jne    8bf0 <transaction_fix_domains+0x20>
    8c12:	add    rsp,0x8
    8c16:	xor    eax,eax
    8c18:	pop    rbx
    8c19:	pop    rbp
    8c1a:	pop    r12
    8c1c:	pop    r13
    8c1e:	ret    
    8c1f:	nop
    8c20:	add    rsp,0x8
    8c24:	mov    eax,0x1c
    8c29:	pop    rbx
    8c2a:	pop    rbp
    8c2b:	pop    r12
    8c2d:	pop    r13
    8c2f:	ret    

0000000000008c30 <transaction_prepend>:
    8c30:	push   r15
    8c32:	push   r14
    8c34:	mov    r15,rdx
    8c37:	push   r13
    8c39:	push   r12
    8c3b:	mov    r12,rsi
    8c3e:	push   rbp
    8c3f:	push   rbx
    8c40:	sub    rsp,0x8
    8c44:	test   rdi,rdi
    8c47:	je     8c60 <transaction_prepend+0x30>
    8c49:	mov    r14,QWORD PTR [rdi+0x38]
    8c4d:	test   r14,r14
    8c50:	je     8c60 <transaction_prepend+0x30>
    8c52:	mov    rbx,QWORD PTR [r14+0x20]
    8c56:	lea    r13,[r14+0x20]
    8c5a:	cmp    r13,rbx
    8c5d:	jne    8c90 <transaction_prepend+0x60>
    8c5f:	nop
    8c60:	mov    QWORD PTR [r15],r12
    8c63:	mov    rdi,r12
    8c66:	xor    ebp,ebp
    8c68:	call   2800 <strlen@plt>
    8c6d:	mov    QWORD PTR [r15+0x8],rax
    8c71:	add    rsp,0x8
    8c75:	mov    eax,ebp
    8c77:	pop    rbx
    8c78:	pop    rbp
    8c79:	pop    r12
    8c7b:	pop    r13
    8c7d:	pop    r14
    8c7f:	pop    r15
    8c81:	ret    
    8c82:	nop    WORD PTR [rax+rax*1+0x0]
    8c88:	mov    rbx,QWORD PTR [rbx]
    8c8b:	cmp    rbx,r13
    8c8e:	je     8c60 <transaction_prepend+0x30>
    8c90:	mov    rdi,QWORD PTR [rbx+0x10]
    8c94:	mov    rsi,r12
    8c97:	call   29c0 <strcmp@plt>
    8c9c:	test   eax,eax
    8c9e:	mov    ebp,eax
    8ca0:	jne    8c88 <transaction_prepend+0x58>
    8ca2:	mov    rdx,QWORD PTR [r14+0x18]
    8ca6:	lea    rsi,[rip+0x7c3a]        # 108e7 <__FUNCTION__.11174+0xf>
    8cad:	xor    eax,eax
    8caf:	mov    rcx,r12
    8cb2:	mov    rdi,r14
    8cb5:	call   b950 <talloc_asprintf>
    8cba:	test   rax,rax
    8cbd:	je     8cd0 <transaction_prepend+0xa0>
    8cbf:	mov    QWORD PTR [r15],rax
    8cc2:	mov    rdi,rax
    8cc5:	call   2800 <strlen@plt>
    8cca:	mov    QWORD PTR [r15+0x8],rax
    8cce:	jmp    8c71 <transaction_prepend+0x41>
    8cd0:	call   2750 <__errno_location@plt>
    8cd5:	mov    ebp,DWORD PTR [rax]
    8cd7:	jmp    8c71 <transaction_prepend+0x41>
    8cd9:	nop    DWORD PTR [rax+0x0]

0000000000008ce0 <access_node>:
    8ce0:	push   r15
    8ce2:	push   r14
    8ce4:	mov    r14d,edx
    8ce7:	push   r13
    8ce9:	push   r12
    8ceb:	mov    r13,rdi
    8cee:	push   rbp
    8cef:	push   rbx
    8cf0:	mov    rbp,rsi
    8cf3:	mov    rbx,rcx
    8cf6:	sub    rsp,0x48
    8cfa:	mov    rax,QWORD PTR fs:0x28
    8d03:	mov    QWORD PTR [rsp+0x38],rax
    8d08:	xor    eax,eax
    8d0a:	test   edx,edx
    8d0c:	je     8e48 <access_node+0x168>
    8d12:	mov    rax,QWORD PTR [rip+0x20d62f]        # 216348 <generation>
    8d19:	test   rdi,rdi
    8d1c:	lea    rdx,[rax+0x1]
    8d20:	mov    QWORD PTR [rsi+0x10],rax
    8d24:	mov    QWORD PTR [rip+0x20d61d],rdx        # 216348 <generation>
    8d2b:	je     8e08 <access_node+0x128>
    8d31:	mov    r12,QWORD PTR [rdi+0x38]
    8d35:	test   r12,r12
    8d38:	je     8df0 <access_node+0x110>
    8d3e:	mov    rdx,QWORD PTR [r12+0x18]
    8d43:	mov    rcx,QWORD PTR [rbp+0x0]
    8d47:	lea    rsi,[rip+0x7b99]        # 108e7 <__FUNCTION__.11174+0xf>
    8d4e:	xor    eax,eax
    8d50:	mov    rdi,rbp
    8d53:	call   b950 <talloc_asprintf>
    8d58:	test   rax,rax
    8d5b:	mov    QWORD PTR [rsp+0x18],rax
    8d60:	je     8f28 <access_node+0x248>
    8d66:	mov    rax,QWORD PTR [rbp+0x0]
    8d6a:	mov    r15,QWORD PTR [r12+0x20]
    8d6f:	mov    QWORD PTR [rsp+0x8],rax
    8d74:	lea    rax,[r12+0x20]
    8d79:	cmp    rax,r15
    8d7c:	mov    QWORD PTR [rsp+0x10],rax
    8d81:	jne    8d9e <access_node+0xbe>
    8d83:	jmp    8e60 <access_node+0x180>
    8d88:	nop    DWORD PTR [rax+rax*1+0x0]
    8d90:	mov    r15,QWORD PTR [r15]
    8d93:	cmp    r15,QWORD PTR [rsp+0x10]
    8d98:	je     8e60 <access_node+0x180>
    8d9e:	mov    rdi,QWORD PTR [r15+0x10]
    8da2:	mov    rsi,QWORD PTR [rsp+0x8]
    8da7:	call   29c0 <strcmp@plt>
    8dac:	test   eax,eax
    8dae:	jne    8d90 <access_node+0xb0>
    8db0:	test   r14d,r14d
    8db3:	je     8dba <access_node+0xda>
    8db5:	mov    BYTE PTR [r15+0x21],0x1
    8dba:	test   rbx,rbx
    8dbd:	je     8e1d <access_node+0x13d>
    8dbf:	mov    rax,QWORD PTR [rsp+0x18]
    8dc4:	mov    QWORD PTR [rbx],rax
    8dc7:	mov    rdi,rax
    8dca:	call   2800 <strlen@plt>
    8dcf:	cmp    r14d,0x1
    8dd3:	mov    QWORD PTR [rbx+0x8],rax
    8dd7:	je     8f58 <access_node+0x278>
    8ddd:	cmp    r14d,0x2
    8de1:	jne    8e1d <access_node+0x13d>
    8de3:	mov    BYTE PTR [r15+0x22],0x0
    8de8:	xor    ebp,ebp
    8dea:	jmp    8e1f <access_node+0x13f>
    8dec:	nop    DWORD PTR [rax+0x0]
    8df0:	call   8aa0 <wrl_apply_debit_direct>
    8df5:	mov    r12,QWORD PTR [r13+0x38]
    8df9:	test   r12,r12
    8dfc:	jne    8d3e <access_node+0x5e>
    8e02:	nop    WORD PTR [rax+rax*1+0x0]
    8e08:	test   rbx,rbx
    8e0b:	je     8e1d <access_node+0x13d>
    8e0d:	mov    rdi,QWORD PTR [rbp+0x0]
    8e11:	mov    QWORD PTR [rbx],rdi
    8e14:	call   2800 <strlen@plt>
    8e19:	mov    QWORD PTR [rbx+0x8],rax
    8e1d:	xor    ebp,ebp
    8e1f:	mov    rcx,QWORD PTR [rsp+0x38]
    8e24:	xor    rcx,QWORD PTR fs:0x28
    8e2d:	mov    eax,ebp
    8e2f:	jne    8f6b <access_node+0x28b>
    8e35:	add    rsp,0x48
    8e39:	pop    rbx
    8e3a:	pop    rbp
    8e3b:	pop    r12
    8e3d:	pop    r13
    8e3f:	pop    r14
    8e41:	pop    r15
    8e43:	ret    
    8e44:	nop    DWORD PTR [rax+0x0]
    8e48:	test   rdi,rdi
    8e4b:	je     8e08 <access_node+0x128>
    8e4d:	mov    r12,QWORD PTR [r13+0x38]
    8e51:	test   r12,r12
    8e54:	je     8e08 <access_node+0x128>
    8e56:	jmp    8d3e <access_node+0x5e>
    8e5b:	nop    DWORD PTR [rax+rax*1+0x0]
    8e60:	lea    rdx,[rip+0x7a87]        # 108ee <__FUNCTION__.11174+0x16>
    8e67:	mov    esi,0x28
    8e6c:	mov    rdi,r12
    8e6f:	call   b280 <_talloc_zero>
    8e74:	test   rax,rax
    8e77:	mov    r15,rax
    8e7a:	je     8f28 <access_node+0x248>
    8e80:	mov    rsi,QWORD PTR [rbp+0x0]
    8e84:	mov    rdi,r15
    8e87:	call   b2f0 <talloc_strdup>
    8e8c:	test   rax,rax
    8e8f:	mov    QWORD PTR [r15+0x10],rax
    8e93:	je     8f64 <access_node+0x284>
    8e99:	test   r14d,r14d
    8e9c:	mov    BYTE PTR [r15+0x22],0x0
    8ea1:	jne    8ee9 <access_node+0x209>
    8ea3:	mov    rax,QWORD PTR [rbp+0x10]
    8ea7:	mov    BYTE PTR [r15+0x20],0x1
    8eac:	mov    QWORD PTR [r15+0x18],rax
    8eb0:	cmp    QWORD PTR [rbp+0x10],0xffffffffffffffff
    8eb5:	je     8ee9 <access_node+0x209>
    8eb7:	mov    rax,QWORD PTR [rsp+0x18]
    8ebc:	mov    rdi,rax
    8ebf:	mov    QWORD PTR [rsp+0x20],rax
    8ec4:	call   2800 <strlen@plt>
    8ec9:	lea    rsi,[rsp+0x20]
    8ece:	mov    rdx,rbp
    8ed1:	mov    rdi,r13
    8ed4:	mov    QWORD PTR [rsp+0x28],rax
    8ed9:	call   53a0 <write_node_raw>
    8ede:	test   eax,eax
    8ee0:	mov    ebp,eax
    8ee2:	jne    8f30 <access_node+0x250>
    8ee4:	mov    BYTE PTR [r15+0x22],0x1
    8ee9:	mov    rax,QWORD PTR [r12+0x28]
    8eee:	mov    rcx,QWORD PTR [rsp+0x10]
    8ef3:	test   r14d,r14d
    8ef6:	mov    QWORD PTR [r12+0x28],r15
    8efb:	mov    QWORD PTR [r15],rcx
    8efe:	mov    QWORD PTR [r15+0x8],rax
    8f02:	mov    QWORD PTR [rax],r15
    8f05:	je     8dba <access_node+0xda>
    8f0b:	cmp    r14d,0x2
    8f0f:	mov    BYTE PTR [r15+0x21],0x1
    8f14:	mov    ebp,0xffffffff
    8f19:	jne    8dba <access_node+0xda>
    8f1f:	jmp    8e1f <access_node+0x13f>
    8f24:	nop    DWORD PTR [rax+0x0]
    8f28:	mov    ebp,0xc
    8f2d:	xor    r15d,r15d
    8f30:	mov    rdi,QWORD PTR [rsp+0x18]
    8f35:	call   a6a0 <talloc_free>
    8f3a:	mov    rdi,r15
    8f3d:	call   a6a0 <talloc_free>
    8f42:	mov    BYTE PTR [r12+0x40],0x1
    8f48:	call   2750 <__errno_location@plt>
    8f4d:	mov    DWORD PTR [rax],ebp
    8f4f:	jmp    8e1f <access_node+0x13f>
    8f54:	nop    DWORD PTR [rax+0x0]
    8f58:	mov    BYTE PTR [r15+0x22],0x1
    8f5d:	xor    ebp,ebp
    8f5f:	jmp    8e1f <access_node+0x13f>
    8f64:	mov    ebp,0xc
    8f69:	jmp    8f30 <access_node+0x250>
    8f6b:	call   2820 <__stack_chk_fail@plt>

0000000000008f70 <transaction_lookup>:
    8f70:	test   esi,esi
    8f72:	je     8fb0 <transaction_lookup+0x40>
    8f74:	mov    rax,QWORD PTR [rdi+0x40]
    8f78:	add    rdi,0x40
    8f7c:	cmp    rdi,rax
    8f7f:	je     8f9d <transaction_lookup+0x2d>
    8f81:	cmp    esi,DWORD PTR [rax+0x10]
    8f84:	jne    8f95 <transaction_lookup+0x25>
    8f86:	jmp    8fb8 <transaction_lookup+0x48>
    8f88:	nop    DWORD PTR [rax+rax*1+0x0]
    8f90:	cmp    DWORD PTR [rax+0x10],esi
    8f93:	je     8fa4 <transaction_lookup+0x34>
    8f95:	mov    rax,QWORD PTR [rax]
    8f98:	cmp    rax,rdi
    8f9b:	jne    8f90 <transaction_lookup+0x20>
    8f9d:	mov    rax,0xfffffffffffffffe
    8fa4:	repz ret 
    8fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8fb0:	xor    eax,eax
    8fb2:	ret    
    8fb3:	nop    DWORD PTR [rax+rax*1+0x0]
    8fb8:	repz ret 
    8fba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008fc0 <do_transaction_start>:
    8fc0:	push   r12
    8fc2:	push   rbp
    8fc3:	push   rbx
    8fc4:	mov    rbx,rdi
    8fc7:	sub    rsp,0x20
    8fcb:	mov    rax,QWORD PTR fs:0x28
    8fd4:	mov    QWORD PTR [rsp+0x18],rax
    8fd9:	xor    eax,eax
    8fdb:	cmp    QWORD PTR [rdi+0x38],0x0
    8fe0:	mov    eax,0x10
    8fe5:	je     9008 <do_transaction_start+0x48>
    8fe7:	mov    rdi,QWORD PTR [rsp+0x18]
    8fec:	xor    rdi,QWORD PTR fs:0x28
    8ff5:	jne    917a <do_transaction_start+0x1ba>
    8ffb:	add    rsp,0x20
    8fff:	pop    rbx
    9000:	pop    rbp
    9001:	pop    r12
    9003:	ret    
    9004:	nop    DWORD PTR [rax+0x0]
    9008:	mov    eax,DWORD PTR [rbx+0x18]
    900b:	mov    rdi,rsi
    900e:	test   eax,eax
    9010:	je     9022 <do_transaction_start+0x62>
    9012:	mov    esi,DWORD PTR [rip+0x20cff8]        # 216010 <quota_max_transaction>
    9018:	cmp    DWORD PTR [rbx+0x54],esi
    901b:	mov    eax,0x1c
    9020:	ja     8fe7 <do_transaction_start+0x27>
    9022:	lea    rdx,[rip+0x78da]        # 10903 <__FUNCTION__.11174+0x2b>
    9029:	mov    esi,0x48
    902e:	call   b280 <_talloc_zero>
    9033:	test   rax,rax
    9036:	mov    rbp,rax
    9039:	je     9170 <do_transaction_start+0x1b0>
    903f:	lea    rax,[rax+0x20]
    9043:	mov    BYTE PTR [rbp+0x40],0x0
    9047:	lea    rsi,[rbx+0x40]
    904b:	mov    QWORD PTR [rbp+0x20],rax
    904f:	mov    QWORD PTR [rbp+0x28],rax
    9053:	lea    rax,[rbp+0x30]
    9057:	mov    QWORD PTR [rbp+0x30],rax
    905b:	mov    QWORD PTR [rbp+0x38],rax
    905f:	mov    rax,QWORD PTR [rip+0x20d2e2]        # 216348 <generation>
    9066:	lea    rdx,[rax+0x1]
    906a:	mov    QWORD PTR [rbp+0x18],rax
    906e:	mov    ecx,DWORD PTR [rbx+0x50]
    9071:	mov    QWORD PTR [rip+0x20d2d0],rdx        # 216348 <generation>
    9078:	nop    DWORD PTR [rax+rax*1+0x0]
    9080:	mov    DWORD PTR [rbp+0x10],ecx
    9083:	mov    edx,DWORD PTR [rbx+0x50]
    9086:	lea    ecx,[rdx+0x1]
    9089:	test   edx,edx
    908b:	mov    DWORD PTR [rbx+0x50],ecx
    908e:	je     9080 <do_transaction_start+0xc0>
    9090:	mov    rax,QWORD PTR [rbx+0x40]
    9094:	cmp    rsi,rax
    9097:	jne    90a8 <do_transaction_start+0xe8>
    9099:	jmp    90b8 <do_transaction_start+0xf8>
    909b:	nop    DWORD PTR [rax+rax*1+0x0]
    90a0:	mov    rax,QWORD PTR [rax]
    90a3:	cmp    rax,rsi
    90a6:	je     90b8 <do_transaction_start+0xf8>
    90a8:	cmp    edx,DWORD PTR [rax+0x10]
    90ab:	jne    90a0 <do_transaction_start+0xe0>
    90ad:	cmp    rax,0xfffffffffffffc18
    90b3:	jbe    9080 <do_transaction_start+0xc0>
    90b5:	nop    DWORD PTR [rax]
    90b8:	mov    rax,QWORD PTR [rbx+0x48]
    90bc:	mov    rdi,rbx
    90bf:	mov    QWORD PTR [rbx+0x48],rbp
    90c3:	mov    QWORD PTR [rbp+0x0],rsi
    90c7:	mov    rsi,rbp
    90ca:	mov    r12,rsp
    90cd:	mov    QWORD PTR [rbp+0x8],rax
    90d1:	mov    QWORD PTR [rax],rbp
    90d4:	call   a3f0 <talloc_steal>
    90d9:	lea    rsi,[rip+0xfffffffffffffa20]        # 8b00 <destroy_transaction>
    90e0:	mov    rdi,rbp
    90e3:	call   a1f0 <talloc_set_destructor>
    90e8:	add    DWORD PTR [rbx+0x54],0x1
    90ec:	lea    r8,[rip+0x7773]        # 10866 <__FUNCTION__.12321+0x2fe>
    90f3:	mov    ecx,0x14
    90f8:	mov    r9d,DWORD PTR [rbp+0x10]
    90fc:	mov    edx,0x1
    9101:	mov    esi,0x14
    9106:	mov    rdi,r12
    9109:	xor    eax,eax
    910b:	add    QWORD PTR [rip+0x210285],0x1        # 219398 <wrl_ntransactions>
    9113:	call   26f0 <__snprintf_chk@plt>
    9118:	mov    rcx,r12
    911b:	mov    edx,DWORD PTR [rcx]
    911d:	add    rcx,0x4
    9121:	lea    eax,[rdx-0x1010101]
    9127:	not    edx
    9129:	and    eax,edx
    912b:	and    eax,0x80808080
    9130:	je     911b <do_transaction_start+0x15b>
    9132:	mov    edx,eax
    9134:	mov    esi,0x6
    9139:	shr    edx,0x10
    913c:	test   eax,0x8080
    9141:	cmove  eax,edx
    9144:	lea    rdx,[rcx+0x2]
    9148:	mov    edi,eax
    914a:	cmove  rcx,rdx
    914e:	add    dil,al
    9151:	mov    rdx,r12
    9154:	sbb    rcx,0x3
    9158:	mov    rdi,rbx
    915b:	sub    rcx,r12
    915e:	add    ecx,0x1
    9161:	call   4a40 <send_reply>
    9166:	xor    eax,eax
    9168:	jmp    8fe7 <do_transaction_start+0x27>
    916d:	nop    DWORD PTR [rax]
    9170:	mov    eax,0xc
    9175:	jmp    8fe7 <do_transaction_start+0x27>
    917a:	call   2820 <__stack_chk_fail@plt>
    917f:	nop

0000000000009180 <do_transaction_end>:
    9180:	push   r15
    9182:	push   r14
    9184:	mov    r14,rsi
    9187:	push   r13
    9189:	push   r12
    918b:	push   rbp
    918c:	push   rbx
    918d:	mov    rbp,rdi
    9190:	mov    rdi,rsi
    9193:	sub    rsp,0x28
    9197:	call   5020 <onearg>
    919c:	test   rax,rax
    919f:	je     94e8 <do_transaction_end+0x368>
    91a5:	lea    r13,[rip+0x6b7e]        # fd2a <_IO_stdin_used+0x4ca>
    91ac:	mov    rsi,rax
    91af:	mov    ecx,0x2
    91b4:	mov    r12,rax
    91b7:	mov    rdi,r13
    91ba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91bc:	seta   al
    91bf:	sbb    al,0x0
    91c1:	test   al,al
    91c3:	jne    9478 <do_transaction_end+0x2f8>
    91c9:	mov    rbx,QWORD PTR [rbp+0x38]
    91cd:	mov    eax,0x2
    91d2:	test   rbx,rbx
    91d5:	je     9466 <do_transaction_end+0x2e6>
    91db:	mov    QWORD PTR [rbp+0x38],0x0
    91e3:	mov    rdx,QWORD PTR [rbx]
    91e6:	mov    rsi,rbx
    91e9:	mov    rax,QWORD PTR [rbx+0x8]
    91ed:	mov    rdi,r14
    91f0:	mov    QWORD PTR [rdx+0x8],rax
    91f4:	mov    QWORD PTR [rax],rdx
    91f7:	mov    QWORD PTR [rbx],0x100100
    91fe:	mov    QWORD PTR [rbx+0x8],0x200200
    9206:	sub    DWORD PTR [rbp+0x54],0x1
    920a:	call   a3f0 <talloc_steal>
    920f:	mov    ecx,0x2
    9214:	mov    rsi,r12
    9217:	mov    rdi,r13
    921a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    921c:	seta   al
    921f:	sbb    al,0x0
    9221:	test   al,al
    9223:	jne    94c5 <do_transaction_end+0x345>
    9229:	cmp    BYTE PTR [rbx+0x40],0x0
    922d:	mov    eax,0xc
    9232:	jne    9466 <do_transaction_end+0x2e6>
    9238:	xor    esi,esi
    923a:	mov    rdi,rbx
    923d:	call   8bd0 <transaction_fix_domains>
    9242:	test   eax,eax
    9244:	jne    9466 <do_transaction_end+0x2e6>
    924a:	mov    r14,QWORD PTR [rbx+0x20]
    924e:	lea    r13,[rbx+0x20]
    9252:	cmp    r14,r13
    9255:	jne    927d <do_transaction_end+0xfd>
    9257:	jmp    92d4 <do_transaction_end+0x154>
    9259:	nop    DWORD PTR [rax+0x0]
    9260:	mov    r15,QWORD PTR [rax]
    9263:	mov    rdi,r12
    9266:	call   a6a0 <talloc_free>
    926b:	cmp    QWORD PTR [r14+0x18],r15
    926f:	jne    9500 <do_transaction_end+0x380>
    9275:	mov    r14,QWORD PTR [r14]
    9278:	cmp    r14,r13
    927b:	je     92d0 <do_transaction_end+0x150>
    927d:	cmp    BYTE PTR [r14+0x20],0x0
    9282:	je     9275 <do_transaction_end+0xf5>
    9284:	mov    r12,QWORD PTR [r14+0x10]
    9288:	mov    rdi,r12
    928b:	call   2800 <strlen@plt>
    9290:	mov    rdi,QWORD PTR [rip+0x20d049]        # 2162e0 <tdb_ctx>
    9297:	mov    rsi,r12
    929a:	mov    rdx,rax
    929d:	call   d9f0 <tdb_fetch>
    92a2:	test   rax,rax
    92a5:	mov    r12,rax
    92a8:	jne    9260 <do_transaction_end+0xe0>
    92aa:	mov    rdi,QWORD PTR [rip+0x20d02f]        # 2162e0 <tdb_ctx>
    92b1:	call   d9a0 <tdb_error>
    92b6:	cmp    eax,0x8
    92b9:	jne    9500 <do_transaction_end+0x380>
    92bf:	mov    r15,0xffffffffffffffff
    92c6:	jmp    9263 <do_transaction_end+0xe3>
    92c8:	nop    DWORD PTR [rax+rax*1+0x0]
    92d0:	mov    r14,QWORD PTR [rbx+0x20]
    92d4:	cmp    r14,r13
    92d7:	je     94b0 <do_transaction_end+0x330>
    92dd:	test   r14,r14
    92e0:	jne    93d5 <do_transaction_end+0x255>
    92e6:	jmp    94b0 <do_transaction_end+0x330>
    92eb:	nop    DWORD PTR [rax+rax*1+0x0]
    92f0:	mov    rdx,QWORD PTR [rsp+0x8]
    92f5:	mov    rsi,r12
    92f8:	mov    QWORD PTR [rsp+0x10],rax
    92fd:	call   d9f0 <tdb_fetch>
    9302:	test   rax,rax
    9305:	mov    r11,rax
    9308:	mov    r8,rdx
    930b:	je     9450 <do_transaction_end+0x2d0>
    9311:	mov    rax,QWORD PTR [rip+0x20d030]        # 216348 <generation>
    9318:	mov    r10,QWORD PTR [rsp+0x10]
    931d:	mov    rcx,r11
    9320:	mov    rsi,r15
    9323:	mov    r9d,0x1
    9329:	mov    QWORD PTR [rsp+0x18],r11
    932e:	lea    rdx,[rax+0x1]
    9332:	mov    QWORD PTR [r11],rax
    9335:	mov    rdi,QWORD PTR [rip+0x20cfa4]        # 2162e0 <tdb_ctx>
    933c:	mov    QWORD PTR [rip+0x20d005],rdx        # 216348 <generation>
    9343:	mov    rdx,r10
    9346:	call   e040 <tdb_store>
    934b:	mov    r11,QWORD PTR [rsp+0x18]
    9350:	mov    r15d,eax
    9353:	mov    rdi,r11
    9356:	call   a6a0 <talloc_free>
    935b:	test   r15d,r15d
    935e:	jne    9450 <do_transaction_end+0x2d0>
    9364:	mov    rdx,QWORD PTR [r14+0x10]
    9368:	xor    ecx,ecx
    936a:	mov    rsi,rbx
    936d:	mov    rdi,rbp
    9370:	call   70b0 <fire_watches>
    9375:	movzx  edx,BYTE PTR [r14+0x22]
    937a:	test   dl,dl
    937c:	je     939a <do_transaction_end+0x21a>
    937e:	mov    rdx,QWORD PTR [rsp+0x8]
    9383:	mov    rdi,QWORD PTR [rip+0x20cf56]        # 2162e0 <tdb_ctx>
    938a:	mov    rsi,r12
    938d:	call   e000 <tdb_delete>
    9392:	test   eax,eax
    9394:	jne    9450 <do_transaction_end+0x2d0>
    939a:	mov    rdx,QWORD PTR [r14]
    939d:	mov    rax,QWORD PTR [r14+0x8]
    93a1:	mov    rdi,r14
    93a4:	mov    QWORD PTR [rdx+0x8],rax
    93a8:	mov    QWORD PTR [rax],rdx
    93ab:	mov    QWORD PTR [r14],0x100100
    93b2:	mov    QWORD PTR [r14+0x8],0x200200
    93ba:	call   a6a0 <talloc_free>
    93bf:	mov    r14,QWORD PTR [rbx+0x20]
    93c3:	test   r14,r14
    93c6:	je     94b0 <do_transaction_end+0x330>
    93cc:	cmp    r14,r13
    93cf:	je     94b0 <do_transaction_end+0x330>
    93d5:	mov    rcx,QWORD PTR [r14+0x10]
    93d9:	mov    rdx,QWORD PTR [rbx+0x18]
    93dd:	lea    rsi,[rip+0x7503]        # 108e7 <__FUNCTION__.11174+0xf>
    93e4:	xor    eax,eax
    93e6:	mov    rdi,r14
    93e9:	call   b950 <talloc_asprintf>
    93ee:	test   rax,rax
    93f1:	mov    r12,rax
    93f4:	je     9450 <do_transaction_end+0x2d0>
    93f6:	mov    rdi,rax
    93f9:	call   2800 <strlen@plt>
    93fe:	cmp    BYTE PTR [r14+0x21],0x0
    9403:	mov    QWORD PTR [rsp+0x8],rax
    9408:	movzx  edx,BYTE PTR [r14+0x22]
    940d:	je     937a <do_transaction_end+0x1fa>
    9413:	mov    r15,QWORD PTR [r14+0x10]
    9417:	mov    BYTE PTR [rsp+0x10],dl
    941b:	mov    rdi,r15
    941e:	call   2800 <strlen@plt>
    9423:	movzx  edx,BYTE PTR [rsp+0x10]
    9428:	mov    rdi,QWORD PTR [rip+0x20ceb1]        # 2162e0 <tdb_ctx>
    942f:	test   dl,dl
    9431:	jne    92f0 <do_transaction_end+0x170>
    9437:	mov    rsi,r15
    943a:	mov    rdx,rax
    943d:	call   e000 <tdb_delete>
    9442:	test   eax,eax
    9444:	je     9364 <do_transaction_end+0x1e4>
    944a:	nop    WORD PTR [rax+rax*1+0x0]
    9450:	lea    rsi,[rip+0x74bf]        # 10916 <__FUNCTION__.11174+0x3e>
    9457:	xor    eax,eax
    9459:	mov    rdi,rbp
    945c:	call   5230 <corrupt>
    9461:	mov    eax,0xb
    9466:	add    rsp,0x28
    946a:	pop    rbx
    946b:	pop    rbp
    946c:	pop    r12
    946e:	pop    r13
    9470:	pop    r14
    9472:	pop    r15
    9474:	ret    
    9475:	nop    DWORD PTR [rax]
    9478:	lea    rdi,[rip+0x73ea]        # 10869 <__FUNCTION__.12321+0x301>
    947f:	mov    ecx,0x2
    9484:	mov    rsi,r12
    9487:	mov    eax,0x16
    948c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    948e:	seta   dl
    9491:	sbb    dl,0x0
    9494:	test   dl,dl
    9496:	je     91c9 <do_transaction_end+0x49>
    949c:	add    rsp,0x28
    94a0:	pop    rbx
    94a1:	pop    rbp
    94a2:	pop    r12
    94a4:	pop    r13
    94a6:	pop    r14
    94a8:	pop    r15
    94aa:	ret    
    94ab:	nop    DWORD PTR [rax+rax*1+0x0]
    94b0:	mov    rdi,rbp
    94b3:	call   8ad0 <wrl_apply_debit_trans_commit>
    94b8:	mov    esi,0x1
    94bd:	mov    rdi,rbx
    94c0:	call   8bd0 <transaction_fix_domains>
    94c5:	mov    rdi,rbp
    94c8:	mov    esi,0x7
    94cd:	call   4f50 <send_ack>
    94d2:	add    rsp,0x28
    94d6:	xor    eax,eax
    94d8:	pop    rbx
    94d9:	pop    rbp
    94da:	pop    r12
    94dc:	pop    r13
    94de:	pop    r14
    94e0:	pop    r15
    94e2:	ret    
    94e3:	nop    DWORD PTR [rax+rax*1+0x0]
    94e8:	add    rsp,0x28
    94ec:	mov    eax,0x16
    94f1:	pop    rbx
    94f2:	pop    rbp
    94f3:	pop    r12
    94f5:	pop    r13
    94f7:	pop    r14
    94f9:	pop    r15
    94fb:	ret    
    94fc:	nop    DWORD PTR [rax+0x0]
    9500:	mov    eax,0xb
    9505:	jmp    9466 <do_transaction_end+0x2e6>
    950a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009510 <transaction_entry_inc>:
    9510:	mov    rax,QWORD PTR [rdi+0x30]
    9514:	push   r12
    9516:	push   rbp
    9517:	lea    rbp,[rdi+0x30]
    951b:	push   rbx
    951c:	cmp    rax,rbp
    951f:	je     953d <transaction_entry_inc+0x2d>
    9521:	cmp    esi,DWORD PTR [rax+0x10]
    9524:	jne    9535 <transaction_entry_inc+0x25>
    9526:	jmp    9580 <transaction_entry_inc+0x70>
    9528:	nop    DWORD PTR [rax+rax*1+0x0]
    9530:	cmp    DWORD PTR [rax+0x10],esi
    9533:	je     9580 <transaction_entry_inc+0x70>
    9535:	mov    rax,QWORD PTR [rax]
    9538:	cmp    rax,rbp
    953b:	jne    9530 <transaction_entry_inc+0x20>
    953d:	lea    rdx,[rip+0x73e6]        # 1092a <__FUNCTION__.11174+0x52>
    9544:	mov    ebx,esi
    9546:	mov    esi,0x18
    954b:	mov    r12,rdi
    954e:	call   a240 <talloc_named_const>
    9553:	test   rax,rax
    9556:	je     9590 <transaction_entry_inc+0x80>
    9558:	mov    DWORD PTR [rax+0x10],ebx
    955b:	mov    DWORD PTR [rax+0x14],0x1
    9562:	mov    rdx,QWORD PTR [r12+0x38]
    9567:	mov    QWORD PTR [r12+0x38],rax
    956c:	mov    QWORD PTR [rax],rbp
    956f:	mov    QWORD PTR [rax+0x8],rdx
    9573:	mov    QWORD PTR [rdx],rax
    9576:	pop    rbx
    9577:	pop    rbp
    9578:	pop    r12
    957a:	ret    
    957b:	nop    DWORD PTR [rax+rax*1+0x0]
    9580:	add    DWORD PTR [rax+0x14],0x1
    9584:	pop    rbx
    9585:	pop    rbp
    9586:	pop    r12
    9588:	ret    
    9589:	nop    DWORD PTR [rax+0x0]
    9590:	mov    BYTE PTR [r12+0x40],0x1
    9596:	pop    rbx
    9597:	pop    rbp
    9598:	pop    r12
    959a:	ret    
    959b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000095a0 <transaction_entry_dec>:
    95a0:	mov    rax,QWORD PTR [rdi+0x30]
    95a4:	push   r12
    95a6:	push   rbp
    95a7:	lea    rbp,[rdi+0x30]
    95ab:	push   rbx
    95ac:	cmp    rax,rbp
    95af:	je     95cd <transaction_entry_dec+0x2d>
    95b1:	cmp    esi,DWORD PTR [rax+0x10]
    95b4:	jne    95c5 <transaction_entry_dec+0x25>
    95b6:	jmp    9610 <transaction_entry_dec+0x70>
    95b8:	nop    DWORD PTR [rax+rax*1+0x0]
    95c0:	cmp    DWORD PTR [rax+0x10],esi
    95c3:	je     9610 <transaction_entry_dec+0x70>
    95c5:	mov    rax,QWORD PTR [rax]
    95c8:	cmp    rax,rbp
    95cb:	jne    95c0 <transaction_entry_dec+0x20>
    95cd:	lea    rdx,[rip+0x7356]        # 1092a <__FUNCTION__.11174+0x52>
    95d4:	mov    ebx,esi
    95d6:	mov    esi,0x18
    95db:	mov    r12,rdi
    95de:	call   a240 <talloc_named_const>
    95e3:	test   rax,rax
    95e6:	je     9620 <transaction_entry_dec+0x80>
    95e8:	mov    DWORD PTR [rax+0x10],ebx
    95eb:	mov    DWORD PTR [rax+0x14],0xffffffff
    95f2:	mov    rdx,QWORD PTR [r12+0x38]
    95f7:	mov    QWORD PTR [r12+0x38],rax
    95fc:	mov    QWORD PTR [rax],rbp
    95ff:	mov    QWORD PTR [rax+0x8],rdx
    9603:	mov    QWORD PTR [rdx],rax
    9606:	pop    rbx
    9607:	pop    rbp
    9608:	pop    r12
    960a:	ret    
    960b:	nop    DWORD PTR [rax+rax*1+0x0]
    9610:	sub    DWORD PTR [rax+0x14],0x1
    9614:	pop    rbx
    9615:	pop    rbp
    9616:	pop    r12
    9618:	ret    
    9619:	nop    DWORD PTR [rax+0x0]
    9620:	mov    BYTE PTR [r12+0x40],0x1
    9626:	pop    rbx
    9627:	pop    rbp
    9628:	pop    r12
    962a:	ret    
    962b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009630 <conn_delete_all_transactions>:
    9630:	push   rbp
    9631:	push   rbx
    9632:	lea    rbp,[rdi+0x40]
    9636:	mov    rbx,rdi
    9639:	sub    rsp,0x8
    963d:	mov    rdi,QWORD PTR [rdi+0x40]
    9641:	test   rdi,rdi
    9644:	je     9680 <conn_delete_all_transactions+0x50>
    9646:	cmp    rbp,rdi
    9649:	jne    9655 <conn_delete_all_transactions+0x25>
    964b:	jmp    9680 <conn_delete_all_transactions+0x50>
    964d:	nop    DWORD PTR [rax]
    9650:	test   rdi,rdi
    9653:	je     9680 <conn_delete_all_transactions+0x50>
    9655:	mov    rdx,QWORD PTR [rdi]
    9658:	mov    rax,QWORD PTR [rdi+0x8]
    965c:	mov    QWORD PTR [rdx+0x8],rax
    9660:	mov    QWORD PTR [rax],rdx
    9663:	mov    QWORD PTR [rdi],0x100100
    966a:	mov    QWORD PTR [rdi+0x8],0x200200
    9672:	call   a6a0 <talloc_free>
    9677:	mov    rdi,QWORD PTR [rbx+0x40]
    967b:	cmp    rdi,rbp
    967e:	jne    9650 <conn_delete_all_transactions+0x20>
    9680:	cmp    QWORD PTR [rbx+0x38],0x0
    9685:	jne    9695 <conn_delete_all_transactions+0x65>
    9687:	mov    DWORD PTR [rbx+0x54],0x0
    968e:	add    rsp,0x8
    9692:	pop    rbx
    9693:	pop    rbp
    9694:	ret    
    9695:	lea    rcx,[rip+0x72c4]        # 10960 <__PRETTY_FUNCTION__.11970>
    969c:	lea    rsi,[rip+0x729d]        # 10940 <__FUNCTION__.11174+0x68>
    96a3:	lea    rdi,[rip+0x62ba]        # f964 <_IO_stdin_used+0x104>
    96aa:	mov    edx,0x23d
    96af:	call   28d0 <__assert_fail@plt>
    96b4:	xchg   ax,ax
    96b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000096c0 <check_transactions>:
    96c0:	push   r15
    96c2:	push   r14
    96c4:	push   r13
    96c6:	push   r12
    96c8:	mov    r13,rdi
    96cb:	push   rbp
    96cc:	push   rbx
    96cd:	lea    rbx,[rip+0x20cb8c]        # 216260 <connections>
    96d4:	sub    rsp,0x18
    96d8:	mov    rax,QWORD PTR [rip+0x20cb81]        # 216260 <connections>
    96df:	cmp    rax,rbx
    96e2:	mov    QWORD PTR [rsp],rax
    96e6:	je     97c8 <check_transactions+0x108>
    96ec:	mov    rax,QWORD PTR [rsp]
    96f0:	mov    rbx,QWORD PTR [rax+0x40]
    96f4:	add    rax,0x40
    96f8:	mov    QWORD PTR [rsp+0x8],rax
    96fd:	cmp    rbx,rax
    9700:	je     97ad <check_transactions+0xed>
    9706:	mov    rdx,QWORD PTR [rbx+0x18]
    970a:	lea    rsi,[rip+0x6320]        # fa31 <_IO_stdin_used+0x1d1>
    9711:	xor    eax,eax
    9713:	mov    rdi,rbx
    9716:	call   b950 <talloc_asprintf>
    971b:	test   rax,rax
    971e:	mov    r12,rax
    9721:	je     97d0 <check_transactions+0x110>
    9727:	mov    rsi,rax
    972a:	mov    rdi,r13
    972d:	call   51e0 <remember_string>
    9732:	test   eax,eax
    9734:	je     97d0 <check_transactions+0x110>
    973a:	mov    r15,QWORD PTR [rbx+0x20]
    973e:	lea    rbp,[rbx+0x20]
    9742:	cmp    r15,rbp
    9745:	je     9797 <check_transactions+0xd7>
    9747:	nop    WORD PTR [rax+rax*1+0x0]
    9750:	cmp    BYTE PTR [r15+0x22],0x0
    9755:	je     978f <check_transactions+0xcf>
    9757:	mov    rcx,QWORD PTR [r15+0x10]
    975b:	mov    rdx,QWORD PTR [rbx+0x18]
    975f:	lea    rsi,[rip+0x7181]        # 108e7 <__FUNCTION__.11174+0xf>
    9766:	xor    eax,eax
    9768:	mov    rdi,r12
    976b:	call   b950 <talloc_asprintf>
    9770:	test   rax,rax
    9773:	mov    r14,rax
    9776:	je     97d0 <check_transactions+0x110>
    9778:	mov    rsi,rax
    977b:	mov    rdi,r13
    977e:	call   51e0 <remember_string>
    9783:	test   eax,eax
    9785:	je     97d0 <check_transactions+0x110>
    9787:	mov    rdi,r14
    978a:	call   a6a0 <talloc_free>
    978f:	mov    r15,QWORD PTR [r15]
    9792:	cmp    r15,rbp
    9795:	jne    9750 <check_transactions+0x90>
    9797:	mov    rdi,r12
    979a:	call   a6a0 <talloc_free>
    979f:	mov    rbx,QWORD PTR [rbx]
    97a2:	cmp    rbx,QWORD PTR [rsp+0x8]
    97a7:	jne    9706 <check_transactions+0x46>
    97ad:	mov    rax,QWORD PTR [rsp]
    97b1:	lea    rsi,[rip+0x20caa8]        # 216260 <connections>
    97b8:	mov    rax,QWORD PTR [rax]
    97bb:	cmp    rax,rsi
    97be:	mov    QWORD PTR [rsp],rax
    97c2:	jne    96ec <check_transactions+0x2c>
    97c8:	xor    eax,eax
    97ca:	jmp    97dd <check_transactions+0x11d>
    97cc:	nop    DWORD PTR [rax+0x0]
    97d0:	mov    rdi,r12
    97d3:	call   a6a0 <talloc_free>
    97d8:	mov    eax,0xc
    97dd:	add    rsp,0x18
    97e1:	pop    rbx
    97e2:	pop    rbp
    97e3:	pop    r12
    97e5:	pop    r13
    97e7:	pop    r14
    97e9:	pop    r15
    97eb:	ret    
    97ec:	nop    DWORD PTR [rax+0x0]

00000000000097f0 <do_control_print>:
    97f0:	cmp    ecx,0x1
    97f3:	jne    9820 <do_control_print+0x30>
    97f5:	push   rbx
    97f6:	mov    rbx,rsi
    97f9:	xor    eax,eax
    97fb:	mov    rsi,QWORD PTR [rdx]
    97fe:	lea    rdi,[rip+0x7178]        # 1097d <__PRETTY_FUNCTION__.11970+0x1d>
    9805:	call   QWORD PTR [rip+0x20ca75]        # 216280 <xprintf>
    980b:	mov    rdi,rbx
    980e:	xor    esi,esi
    9810:	call   4f50 <send_ack>
    9815:	xor    eax,eax
    9817:	pop    rbx
    9818:	ret    
    9819:	nop    DWORD PTR [rax+0x0]
    9820:	mov    eax,0x16
    9825:	ret    
    9826:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009830 <do_control_help>:
    9830:	test   ecx,ecx
    9832:	mov    eax,0x16
    9837:	jne    9958 <do_control_help+0x128>
    983d:	push   r15
    983f:	push   r14
    9841:	mov    r15,rdi
    9844:	push   r13
    9846:	push   r12
    9848:	xor    eax,eax
    984a:	push   rbp
    984b:	push   rbx
    984c:	lea    rbp,[rip+0x20bfcd]        # 215820 <cmds>
    9853:	xor    ebx,ebx
    9855:	mov    r12d,0x5
    985b:	sub    rsp,0x18
    985f:	lea    r13,[rbp+0x90]
    9866:	mov    r14,rbp
    9869:	mov    QWORD PTR [rsp+0x8],rsi
    986e:	jmp    9884 <do_control_help+0x54>
    9870:	mov    rdi,QWORD PTR [r14]
    9873:	call   2800 <strlen@plt>
    9878:	mov    rdi,QWORD PTR [r14+0x10]
    987c:	mov    r12,rax
    987f:	call   2800 <strlen@plt>
    9884:	lea    ebx,[rbx+r12*1+0x2]
    9889:	add    r14,0x18
    988d:	add    ebx,eax
    988f:	cmp    r14,r13
    9892:	jne    9870 <do_control_help+0x40>
    9894:	lea    edx,[rbx+0x1]
    9897:	lea    rcx,[rip+0x5fed]        # f88b <_IO_stdin_used+0x2b>
    989e:	mov    rdi,r15
    98a1:	mov    esi,0x1
    98a6:	call   bad0 <_talloc_array>
    98ab:	test   rax,rax
    98ae:	mov    r15,rax
    98b1:	je     9960 <do_control_help+0x130>
    98b7:	xor    ebx,ebx
    98b9:	lea    r13,[rip+0x7236]        # 10af6 <__PRETTY_FUNCTION__.11970+0x196>
    98c0:	lea    r12,[rip+0x70c2]        # 10989 <__PRETTY_FUNCTION__.11970+0x29>
    98c7:	jmp    98d8 <do_control_help+0xa8>
    98c9:	nop    DWORD PTR [rax+0x0]
    98d0:	mov    r12,QWORD PTR [rbp+0x0]
    98d4:	mov    r13,QWORD PTR [rbp+0x10]
    98d8:	movsxd rdi,ebx
    98db:	mov    rsi,r12
    98de:	add    rbp,0x18
    98e2:	add    rdi,r15
    98e5:	call   2780 <strcpy@plt>
    98ea:	mov    rdi,r12
    98ed:	call   2800 <strlen@plt>
    98f2:	add    ebx,eax
    98f4:	mov    rsi,r13
    98f7:	movsxd rax,ebx
    98fa:	add    ebx,0x1
    98fd:	movsxd rdi,ebx
    9900:	mov    BYTE PTR [r15+rax*1],0x9
    9905:	add    rdi,r15
    9908:	call   2780 <strcpy@plt>
    990d:	mov    rdi,r13
    9910:	call   2800 <strlen@plt>
    9915:	add    ebx,eax
    9917:	movsxd rax,ebx
    991a:	add    ebx,0x1
    991d:	cmp    r14,rbp
    9920:	mov    BYTE PTR [r15+rax*1],0xa
    9925:	jne    98d0 <do_control_help+0xa0>
    9927:	mov    rdi,QWORD PTR [rsp+0x8]
    992c:	movsxd rax,ebx
    992f:	mov    ecx,ebx
    9931:	mov    BYTE PTR [r15+rax*1],0x0
    9936:	mov    rdx,r15
    9939:	xor    esi,esi
    993b:	call   4a40 <send_reply>
    9940:	add    rsp,0x18
    9944:	xor    eax,eax
    9946:	pop    rbx
    9947:	pop    rbp
    9948:	pop    r12
    994a:	pop    r13
    994c:	pop    r14
    994e:	pop    r15
    9950:	ret    
    9951:	nop    DWORD PTR [rax+0x0]
    9958:	repz ret 
    995a:	nop    WORD PTR [rax+rax*1+0x0]
    9960:	add    rsp,0x18
    9964:	mov    eax,0xc
    9969:	pop    rbx
    996a:	pop    rbp
    996b:	pop    r12
    996d:	pop    r13
    996f:	pop    r14
    9971:	pop    r15
    9973:	ret    
    9974:	xchg   ax,ax
    9976:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009980 <do_control_memreport>:
    9980:	cmp    ecx,0x1
    9983:	mov    eax,0x16
    9988:	jg     99e8 <do_control_memreport+0x68>
    998a:	test   ecx,ecx
    998c:	push   r12
    998e:	push   rbp
    998f:	push   rbx
    9990:	mov    rbx,rsi
    9993:	jne    99f0 <do_control_memreport+0x70>
    9995:	mov    edi,DWORD PTR [rip+0x20c68d]        # 216028 <tracefd>
    999b:	test   edi,edi
    999d:	jns    9a18 <do_control_memreport+0x98>
    999f:	mov    rdi,QWORD PTR [rip+0x20c942]        # 2162e8 <tracefile>
    99a6:	test   rdi,rdi
    99a9:	je     9a07 <do_control_memreport+0x87>
    99ab:	lea    rsi,[rip+0x5f7d]        # f92f <_IO_stdin_used+0xcf>
    99b2:	call   2b90 <fopen@plt>
    99b7:	mov    rbp,rax
    99ba:	test   rbp,rbp
    99bd:	je     9a07 <do_control_memreport+0x87>
    99bf:	mov    rsi,rbp
    99c2:	xor    edi,edi
    99c4:	call   af80 <talloc_report_full>
    99c9:	mov    rdi,rbp
    99cc:	call   27e0 <fclose@plt>
    99d1:	mov    rdi,rbx
    99d4:	xor    esi,esi
    99d6:	call   4f50 <send_ack>
    99db:	pop    rbx
    99dc:	xor    eax,eax
    99de:	pop    rbp
    99df:	pop    r12
    99e1:	ret    
    99e2:	nop    WORD PTR [rax+rax*1+0x0]
    99e8:	repz ret 
    99ea:	nop    WORD PTR [rax+rax*1+0x0]
    99f0:	mov    rdi,QWORD PTR [rdx]
    99f3:	lea    rsi,[rip+0x5f35]        # f92f <_IO_stdin_used+0xcf>
    99fa:	call   2b90 <fopen@plt>
    99ff:	mov    rbp,rax
    9a02:	test   rbp,rbp
    9a05:	jne    99bf <do_control_memreport+0x3f>
    9a07:	pop    rbx
    9a08:	mov    eax,0x9
    9a0d:	pop    rbp
    9a0e:	pop    r12
    9a10:	ret    
    9a11:	nop    DWORD PTR [rax+0x0]
    9a18:	call   28b0 <dup@plt>
    9a1d:	test   eax,eax
    9a1f:	mov    r12d,eax
    9a22:	js     9a07 <do_control_memreport+0x87>
    9a24:	lea    rsi,[rip+0x5f04]        # f92f <_IO_stdin_used+0xcf>
    9a2b:	mov    edi,eax
    9a2d:	call   2af0 <fdopen@plt>
    9a32:	test   rax,rax
    9a35:	mov    rbp,rax
    9a38:	jne    99bf <do_control_memreport+0x3f>
    9a3a:	mov    edi,r12d
    9a3d:	call   2930 <close@plt>
    9a42:	jmp    9a07 <do_control_memreport+0x87>
    9a44:	xchg   ax,ax
    9a46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009a50 <do_control_logfile>:
    9a50:	cmp    ecx,0x1
    9a53:	je     9a60 <do_control_logfile+0x10>
    9a55:	mov    eax,0x16
    9a5a:	ret    
    9a5b:	nop    DWORD PTR [rax+rax*1+0x0]
    9a60:	push   rbp
    9a61:	push   rbx
    9a62:	mov    rbp,rdx
    9a65:	mov    rbx,rsi
    9a68:	sub    rsp,0x8
    9a6c:	call   48f0 <close_log>
    9a71:	mov    rdi,QWORD PTR [rip+0x20c870]        # 2162e8 <tracefile>
    9a78:	call   a6a0 <talloc_free>
    9a7d:	mov    rsi,QWORD PTR [rbp+0x0]
    9a81:	xor    edi,edi
    9a83:	call   b2f0 <talloc_strdup>
    9a88:	mov    QWORD PTR [rip+0x20c859],rax        # 2162e8 <tracefile>
    9a8f:	call   4930 <reopen_log>
    9a94:	mov    rdi,rbx
    9a97:	xor    esi,esi
    9a99:	call   4f50 <send_ack>
    9a9e:	add    rsp,0x8
    9aa2:	xor    eax,eax
    9aa4:	pop    rbx
    9aa5:	pop    rbp
    9aa6:	ret    
    9aa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009ab0 <do_control_log>:
    9ab0:	cmp    ecx,0x1
    9ab3:	mov    eax,0x16
    9ab8:	jne    9b10 <do_control_log+0x60>
    9aba:	push   rbx
    9abb:	mov    r8,QWORD PTR [rdx]
    9abe:	lea    rdi,[rip+0x6e62]        # 10927 <__FUNCTION__.11174+0x4f>
    9ac5:	mov    rbx,rsi
    9ac8:	mov    ecx,0x3
    9acd:	mov    rsi,r8
    9ad0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9ad2:	seta   dl
    9ad5:	sbb    dl,0x0
    9ad8:	test   dl,dl
    9ada:	je     9b18 <do_control_log+0x68>
    9adc:	lea    rdi,[rip+0x6eba]        # 1099d <__PRETTY_FUNCTION__.11970+0x3d>
    9ae3:	mov    ecx,0x4
    9ae8:	mov    rsi,r8
    9aeb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9aed:	seta   dl
    9af0:	sbb    dl,0x0
    9af3:	test   dl,dl
    9af5:	jne    9b08 <do_control_log+0x58>
    9af7:	call   48f0 <close_log>
    9afc:	xor    esi,esi
    9afe:	mov    rdi,rbx
    9b01:	call   4f50 <send_ack>
    9b06:	xor    eax,eax
    9b08:	pop    rbx
    9b09:	ret    
    9b0a:	nop    WORD PTR [rax+rax*1+0x0]
    9b10:	repz ret 
    9b12:	nop    WORD PTR [rax+rax*1+0x0]
    9b18:	call   4930 <reopen_log>
    9b1d:	jmp    9afc <do_control_log+0x4c>
    9b1f:	nop

0000000000009b20 <do_control_check>:
    9b20:	test   ecx,ecx
    9b22:	jne    9b40 <do_control_check+0x20>
    9b24:	push   rbx
    9b25:	mov    rbx,rsi
    9b28:	call   5b90 <check_store>
    9b2d:	mov    rdi,rbx
    9b30:	xor    esi,esi
    9b32:	call   4f50 <send_ack>
    9b37:	xor    eax,eax
    9b39:	pop    rbx
    9b3a:	ret    
    9b3b:	nop    DWORD PTR [rax+rax*1+0x0]
    9b40:	mov    eax,0x16
    9b45:	ret    
    9b46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009b50 <do_control>:
    9b50:	mov    eax,DWORD PTR [rdi+0x18]
    9b53:	test   eax,eax
    9b55:	jne    9c58 <do_control+0x108>
    9b5b:	push   r15
    9b5d:	push   r14
    9b5f:	push   r13
    9b61:	push   r12
    9b63:	push   rbp
    9b64:	push   rbx
    9b65:	mov    rbx,rsi
    9b68:	mov    rbp,rdi
    9b6b:	sub    rsp,0x18
    9b6f:	mov    esi,DWORD PTR [rsi+0x14]
    9b72:	mov    rdi,QWORD PTR [rbx+0x28]
    9b76:	call   a060 <xs_count_strings>
    9b7b:	test   eax,eax
    9b7d:	mov    r12d,eax
    9b80:	jle    9c40 <do_control+0xf0>
    9b86:	lea    rcx,[rip+0x6e02]        # 1098f <__PRETTY_FUNCTION__.11970+0x2f>
    9b8d:	mov    edx,eax
    9b8f:	mov    esi,0x8
    9b94:	mov    rdi,rbx
    9b97:	call   bad0 <_talloc_array>
    9b9c:	test   rax,rax
    9b9f:	mov    r13,rax
    9ba2:	je     9c78 <do_control+0x128>
    9ba8:	mov    edx,r12d
    9bab:	mov    rsi,rax
    9bae:	mov    rdi,rbx
    9bb1:	call   49c0 <get_strings>
    9bb6:	cmp    r12d,eax
    9bb9:	jne    9c60 <do_control+0x110>
    9bbf:	mov    rax,QWORD PTR [r13+0x0]
    9bc3:	lea    rsi,[rip+0x6dbf]        # 10989 <__PRETTY_FUNCTION__.11970+0x29>
    9bca:	xor    r14d,r14d
    9bcd:	lea    r15,[rip+0x20bc4c]        # 215820 <cmds>
    9bd4:	mov    QWORD PTR [rsp+0x8],rax
    9bd9:	mov    rdi,QWORD PTR [rsp+0x8]
    9bde:	call   29c0 <strcmp@plt>
    9be3:	test   eax,eax
    9be5:	je     9c06 <do_control+0xb6>
    9be7:	add    r14d,0x1
    9beb:	add    r15,0x18
    9bef:	cmp    r14d,0x6
    9bf3:	je     9c40 <do_control+0xf0>
    9bf5:	mov    rsi,QWORD PTR [r15]
    9bf8:	mov    rdi,QWORD PTR [rsp+0x8]
    9bfd:	call   29c0 <strcmp@plt>
    9c02:	test   eax,eax
    9c04:	jne    9be7 <do_control+0x97>
    9c06:	movsxd r8,r14d
    9c09:	lea    rdi,[rip+0x20bc10]        # 215820 <cmds>
    9c10:	lea    ecx,[r12-0x1]
    9c15:	lea    rax,[r8+r8*2]
    9c19:	lea    rdx,[r13+0x8]
    9c1d:	mov    rsi,rbp
    9c20:	mov    rax,QWORD PTR [rdi+rax*8+0x8]
    9c25:	add    rsp,0x18
    9c29:	mov    rdi,rbx
    9c2c:	pop    rbx
    9c2d:	pop    rbp
    9c2e:	pop    r12
    9c30:	pop    r13
    9c32:	pop    r14
    9c34:	pop    r15
    9c36:	jmp    rax
    9c38:	nop    DWORD PTR [rax+rax*1+0x0]
    9c40:	mov    eax,0x16
    9c45:	add    rsp,0x18
    9c49:	pop    rbx
    9c4a:	pop    rbp
    9c4b:	pop    r12
    9c4d:	pop    r13
    9c4f:	pop    r14
    9c51:	pop    r15
    9c53:	ret    
    9c54:	nop    DWORD PTR [rax+0x0]
    9c58:	mov    eax,0xd
    9c5d:	ret    
    9c5e:	xchg   ax,ax
    9c60:	add    rsp,0x18
    9c64:	mov    eax,0x5
    9c69:	pop    rbx
    9c6a:	pop    rbp
    9c6b:	pop    r12
    9c6d:	pop    r13
    9c6f:	pop    r14
    9c71:	pop    r15
    9c73:	ret    
    9c74:	nop    DWORD PTR [rax+0x0]
    9c78:	mov    eax,0xc
    9c7d:	jmp    9c45 <do_control+0xf5>
    9c7f:	nop

0000000000009c80 <xs_daemon_path.part.0>:
    9c80:	lea    rdi,[rip+0x6d5e]        # 109e5 <__PRETTY_FUNCTION__.11970+0x85>
    9c87:	sub    rsp,0x8
    9c8b:	call   26d0 <getenv@plt>
    9c90:	lea    r9,[rip+0x6d3b]        # 109d2 <__PRETTY_FUNCTION__.11970+0x72>
    9c97:	test   rax,rax
    9c9a:	lea    r8,[rip+0x6d55]        # 109f6 <__PRETTY_FUNCTION__.11970+0x96>
    9ca1:	lea    rdi,[rip+0x20d6b8]        # 217360 <buf.4312>
    9ca8:	mov    edx,0x1
    9cad:	mov    ecx,0x1000
    9cb2:	cmovne r9,rax
    9cb6:	mov    esi,0x1000
    9cbb:	xor    eax,eax
    9cbd:	call   26f0 <__snprintf_chk@plt>
    9cc2:	cmp    eax,0xfff
    9cc7:	lea    rax,[rip+0x20d692]        # 217360 <buf.4312>
    9cce:	mov    edx,0x0
    9cd3:	cmovg  rax,rdx
    9cd7:	add    rsp,0x8
    9cdb:	ret    
    9cdc:	nop    DWORD PTR [rax+0x0]

0000000000009ce0 <xs_daemon_rootdir>:
    9ce0:	lea    rdi,[rip+0x6d2c]        # 10a13 <__PRETTY_FUNCTION__.11970+0xb3>
    9ce7:	sub    rsp,0x8
    9ceb:	call   26d0 <getenv@plt>
    9cf0:	lea    rdx,[rip+0x6d09]        # 10a00 <__PRETTY_FUNCTION__.11970+0xa0>
    9cf7:	test   rax,rax
    9cfa:	cmove  rax,rdx
    9cfe:	add    rsp,0x8
    9d02:	ret    
    9d03:	nop    DWORD PTR [rax]
    9d06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009d10 <xs_daemon_rundir>:
    9d10:	lea    rdi,[rip+0x6cce]        # 109e5 <__PRETTY_FUNCTION__.11970+0x85>
    9d17:	sub    rsp,0x8
    9d1b:	call   26d0 <getenv@plt>
    9d20:	lea    rdx,[rip+0x6cab]        # 109d2 <__PRETTY_FUNCTION__.11970+0x72>
    9d27:	test   rax,rax
    9d2a:	cmove  rax,rdx
    9d2e:	add    rsp,0x8
    9d32:	ret    
    9d33:	nop    DWORD PTR [rax]
    9d36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009d40 <xs_daemon_tdb>:
    9d40:	lea    rdi,[rip+0x6ccc]        # 10a13 <__PRETTY_FUNCTION__.11970+0xb3>
    9d47:	sub    rsp,0x8
    9d4b:	call   26d0 <getenv@plt>
    9d50:	lea    r9,[rip+0x6ca9]        # 10a00 <__PRETTY_FUNCTION__.11970+0xa0>
    9d57:	test   rax,rax
    9d5a:	lea    r8,[rip+0x6cc4]        # 10a25 <__PRETTY_FUNCTION__.11970+0xc5>
    9d61:	lea    rdi,[rip+0x20e5f8]        # 218360 <buf.4317>
    9d68:	mov    ecx,0x1000
    9d6d:	mov    edx,0x1
    9d72:	cmovne r9,rax
    9d76:	mov    esi,0x1000
    9d7b:	xor    eax,eax
    9d7d:	call   26f0 <__snprintf_chk@plt>
    9d82:	lea    rax,[rip+0x20e5d7]        # 218360 <buf.4317>
    9d89:	add    rsp,0x8
    9d8d:	ret    
    9d8e:	xchg   ax,ax

0000000000009d90 <xs_daemon_socket>:
    9d90:	lea    rdi,[rip+0x6c95]        # 10a2c <__PRETTY_FUNCTION__.11970+0xcc>
    9d97:	sub    rsp,0x8
    9d9b:	call   26d0 <getenv@plt>
    9da0:	test   rax,rax
    9da3:	je     9db0 <xs_daemon_socket+0x20>
    9da5:	add    rsp,0x8
    9da9:	ret    
    9daa:	nop    WORD PTR [rax+rax*1+0x0]
    9db0:	add    rsp,0x8
    9db4:	jmp    9c80 <xs_daemon_path.part.0>
    9db9:	nop    DWORD PTR [rax+0x0]

0000000000009dc0 <xs_daemon_socket_ro>:
    9dc0:	lea    rdi,[rip+0x6c65]        # 10a2c <__PRETTY_FUNCTION__.11970+0xcc>
    9dc7:	sub    rsp,0x8
    9dcb:	call   26d0 <getenv@plt>
    9dd0:	test   rax,rax
    9dd3:	mov    r9,rax
    9dd6:	je     9e10 <xs_daemon_socket_ro+0x50>
    9dd8:	lea    r8,[rip+0x6c5c]        # 10a3b <__PRETTY_FUNCTION__.11970+0xdb>
    9ddf:	lea    rdi,[rip+0x20c57a]        # 216360 <buf.4324>
    9de6:	xor    eax,eax
    9de8:	mov    ecx,0x1000
    9ded:	mov    edx,0x1
    9df2:	mov    esi,0x1000
    9df7:	call   26f0 <__snprintf_chk@plt>
    9dfc:	cmp    eax,0xfff
    9e01:	jg     9e1d <xs_daemon_socket_ro+0x5d>
    9e03:	lea    rax,[rip+0x20c556]        # 216360 <buf.4324>
    9e0a:	add    rsp,0x8
    9e0e:	ret    
    9e0f:	nop
    9e10:	call   9c80 <xs_daemon_path.part.0>
    9e15:	test   rax,rax
    9e18:	mov    r9,rax
    9e1b:	jne    9dd8 <xs_daemon_socket_ro+0x18>
    9e1d:	xor    eax,eax
    9e1f:	add    rsp,0x8
    9e23:	ret    
    9e24:	xchg   ax,ax
    9e26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009e30 <xs_domain_dev>:
    9e30:	lea    rdi,[rip+0x6bf5]        # 10a2c <__PRETTY_FUNCTION__.11970+0xcc>
    9e37:	sub    rsp,0x8
    9e3b:	call   26d0 <getenv@plt>
    9e40:	test   rax,rax
    9e43:	je     9e50 <xs_domain_dev+0x20>
    9e45:	add    rsp,0x8
    9e49:	ret    
    9e4a:	nop    WORD PTR [rax+rax*1+0x0]
    9e50:	lea    rdi,[rip+0x6bea]        # 10a41 <__PRETTY_FUNCTION__.11970+0xe1>
    9e57:	xor    esi,esi
    9e59:	call   2b80 <access@plt>
    9e5e:	lea    rdx,[rip+0x6bec]        # 10a51 <__PRETTY_FUNCTION__.11970+0xf1>
    9e65:	test   eax,eax
    9e67:	lea    rax,[rip+0x6bd3]        # 10a41 <__PRETTY_FUNCTION__.11970+0xe1>
    9e6e:	cmovne rax,rdx
    9e72:	add    rsp,0x8
    9e76:	ret    
    9e77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009e80 <xs_write_all>:
    9e80:	push   r13
    9e82:	push   r12
    9e84:	mov    r12d,edx
    9e87:	push   rbp
    9e88:	push   rbx
    9e89:	mov    r13d,edi
    9e8c:	mov    rbp,rsi
    9e8f:	mov    rbx,r12
    9e92:	sub    rsp,0x8
    9e96:	test   r12d,r12d
    9e99:	je     9ee0 <xs_write_all+0x60>
    9e9b:	nop    DWORD PTR [rax+rax*1+0x0]
    9ea0:	mov    rdx,r12
    9ea3:	mov    rsi,rbp
    9ea6:	mov    edi,r13d
    9ea9:	call   27b0 <write@plt>
    9eae:	test   eax,eax
    9eb0:	js     9ec8 <xs_write_all+0x48>
    9eb2:	je     9ed2 <xs_write_all+0x52>
    9eb4:	movsxd rdx,eax
    9eb7:	add    rbp,rdx
    9eba:	sub    ebx,eax
    9ebc:	je     9ee0 <xs_write_all+0x60>
    9ebe:	mov    r12d,ebx
    9ec1:	jmp    9ea0 <xs_write_all+0x20>
    9ec3:	nop    DWORD PTR [rax+rax*1+0x0]
    9ec8:	call   2750 <__errno_location@plt>
    9ecd:	cmp    DWORD PTR [rax],0x4
    9ed0:	je     9ea0 <xs_write_all+0x20>
    9ed2:	add    rsp,0x8
    9ed6:	xor    eax,eax
    9ed8:	pop    rbx
    9ed9:	pop    rbp
    9eda:	pop    r12
    9edc:	pop    r13
    9ede:	ret    
    9edf:	nop
    9ee0:	add    rsp,0x8
    9ee4:	mov    eax,0x1
    9ee9:	pop    rbx
    9eea:	pop    rbp
    9eeb:	pop    r12
    9eed:	pop    r13
    9eef:	ret    

0000000000009ef0 <xs_strings_to_perms>:
    9ef0:	push   r13
    9ef2:	push   r12
    9ef4:	push   rbp
    9ef5:	push   rbx
    9ef6:	sub    rsp,0x18
    9efa:	mov    rax,QWORD PTR fs:0x28
    9f03:	mov    QWORD PTR [rsp+0x8],rax
    9f08:	xor    eax,eax
    9f0a:	test   esi,esi
    9f0c:	je     9f6c <xs_strings_to_perms+0x7c>
    9f0e:	lea    eax,[rsi-0x1]
    9f11:	mov    rbp,rdx
    9f14:	mov    rbx,rdi
    9f17:	mov    r12,rsp
    9f1a:	lea    r13,[rdi+rax*8+0x8]
    9f1f:	movzx  eax,BYTE PTR [rbp+0x0]
    9f23:	cmp    al,0x6e
    9f25:	je     9fb0 <xs_strings_to_perms+0xc0>
    9f2b:	jle    9f78 <xs_strings_to_perms+0x88>
    9f2d:	cmp    al,0x72
    9f2f:	je     9fc0 <xs_strings_to_perms+0xd0>
    9f35:	cmp    al,0x77
    9f37:	jne    9f88 <xs_strings_to_perms+0x98>
    9f39:	mov    DWORD PTR [rbx+0x4],0x2
    9f40:	lea    rdi,[rbp+0x1]
    9f44:	xor    edx,edx
    9f46:	mov    rsi,r12
    9f49:	call   2a10 <strtol@plt>
    9f4e:	mov    DWORD PTR [rbx],eax
    9f50:	mov    rax,QWORD PTR [rsp]
    9f54:	cmp    BYTE PTR [rax],0x0
    9f57:	jne    9f88 <xs_strings_to_perms+0x98>
    9f59:	cmp    BYTE PTR [rbp+0x1],0x0
    9f5d:	je     9f88 <xs_strings_to_perms+0x98>
    9f5f:	add    rbx,0x8
    9f63:	lea    rbp,[rax+0x1]
    9f67:	cmp    rbx,r13
    9f6a:	jne    9f1f <xs_strings_to_perms+0x2f>
    9f6c:	mov    eax,0x1
    9f71:	jmp    9f95 <xs_strings_to_perms+0xa5>
    9f73:	nop    DWORD PTR [rax+rax*1+0x0]
    9f78:	cmp    al,0x62
    9f7a:	jne    9f88 <xs_strings_to_perms+0x98>
    9f7c:	mov    DWORD PTR [rbx+0x4],0x3
    9f83:	jmp    9f40 <xs_strings_to_perms+0x50>
    9f85:	nop    DWORD PTR [rax]
    9f88:	call   2750 <__errno_location@plt>
    9f8d:	mov    DWORD PTR [rax],0x16
    9f93:	xor    eax,eax
    9f95:	mov    rcx,QWORD PTR [rsp+0x8]
    9f9a:	xor    rcx,QWORD PTR fs:0x28
    9fa3:	jne    9fcc <xs_strings_to_perms+0xdc>
    9fa5:	add    rsp,0x18
    9fa9:	pop    rbx
    9faa:	pop    rbp
    9fab:	pop    r12
    9fad:	pop    r13
    9faf:	ret    
    9fb0:	mov    DWORD PTR [rbx+0x4],0x0
    9fb7:	jmp    9f40 <xs_strings_to_perms+0x50>
    9fb9:	nop    DWORD PTR [rax+0x0]
    9fc0:	mov    DWORD PTR [rbx+0x4],0x1
    9fc7:	jmp    9f40 <xs_strings_to_perms+0x50>
    9fcc:	call   2820 <__stack_chk_fail@plt>
    9fd1:	nop    DWORD PTR [rax+rax*1+0x0]
    9fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000009fe0 <xs_perm_to_string>:
    9fe0:	sub    rsp,0x8
    9fe4:	mov    ecx,DWORD PTR [rdi+0x4]
    9fe7:	mov    rax,rsi
    9fea:	cmp    ecx,0x1
    9fed:	je     a058 <xs_perm_to_string+0x78>
    9fef:	jb     a050 <xs_perm_to_string+0x70>
    9ff1:	cmp    ecx,0x2
    9ff4:	je     a030 <xs_perm_to_string+0x50>
    9ff6:	cmp    ecx,0x3
    9ff9:	jne    a038 <xs_perm_to_string+0x58>
    9ffb:	mov    BYTE PTR [rsi],0x62
    9ffe:	mov    r9d,DWORD PTR [rdi]
    a001:	lea    rsi,[rdx-0x1]
    a005:	add    rax,0x1
    a009:	lea    r8,[rip+0x5940]        # f950 <_IO_stdin_used+0xf0>
    a010:	mov    rdi,rax
    a013:	mov    rcx,0xffffffffffffffff
    a01a:	mov    edx,0x1
    a01f:	xor    eax,eax
    a021:	call   26f0 <__snprintf_chk@plt>
    a026:	mov    eax,0x1
    a02b:	add    rsp,0x8
    a02f:	ret    
    a030:	mov    BYTE PTR [rsi],0x77
    a033:	jmp    9ffe <xs_perm_to_string+0x1e>
    a035:	nop    DWORD PTR [rax]
    a038:	call   2750 <__errno_location@plt>
    a03d:	mov    DWORD PTR [rax],0x16
    a043:	xor    eax,eax
    a045:	add    rsp,0x8
    a049:	ret    
    a04a:	nop    WORD PTR [rax+rax*1+0x0]
    a050:	mov    BYTE PTR [rsi],0x6e
    a053:	jmp    9ffe <xs_perm_to_string+0x1e>
    a055:	nop    DWORD PTR [rax]
    a058:	mov    BYTE PTR [rsi],0x72
    a05b:	jmp    9ffe <xs_perm_to_string+0x1e>
    a05d:	nop    DWORD PTR [rax]

000000000000a060 <xs_count_strings>:
    a060:	mov    esi,esi
    a062:	xor    eax,eax
    a064:	add    rsi,rdi
    a067:	cmp    rdi,rsi
    a06a:	jae    a088 <xs_count_strings+0x28>
    a06c:	nop    DWORD PTR [rax+0x0]
    a070:	cmp    BYTE PTR [rdi],0x1
    a073:	adc    eax,0x0
    a076:	add    rdi,0x1
    a07a:	cmp    rdi,rsi
    a07d:	jne    a070 <xs_count_strings+0x10>
    a07f:	repz ret 
    a081:	nop    DWORD PTR [rax+0x0]
    a088:	repz ret 
    a08a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a090 <talloc_chunk_from_ptr>:
    a090:	mov    edx,DWORD PTR [rdi-0x8]
    a093:	mov    ecx,edx
    a095:	and    ecx,0xfffffff0
    a098:	cmp    ecx,0xe814ec70
    a09e:	jne    a0aa <talloc_chunk_from_ptr+0x1a>
    a0a0:	and    edx,0x1
    a0a3:	lea    rax,[rdi-0x50]
    a0a7:	jne    a0aa <talloc_chunk_from_ptr+0x1a>
    a0a9:	ret    
    a0aa:	sub    rsp,0x8
    a0ae:	call   2740 <abort@plt>
    a0b3:	nop    DWORD PTR [rax]
    a0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a0c0 <talloc_parent>:
    a0c0:	sub    rsp,0x8
    a0c4:	call   a090 <talloc_chunk_from_ptr>
    a0c9:	jmp    a0d3 <talloc_parent+0x13>
    a0cb:	nop    DWORD PTR [rax+rax*1+0x0]
    a0d0:	mov    rax,rdx
    a0d3:	mov    rdx,QWORD PTR [rax+0x8]
    a0d7:	test   rdx,rdx
    a0da:	jne    a0d0 <talloc_parent+0x10>
    a0dc:	mov    rcx,QWORD PTR [rax+0x10]
    a0e0:	lea    rax,[rcx+0x50]
    a0e4:	test   rcx,rcx
    a0e7:	cmove  rax,rdx
    a0eb:	add    rsp,0x8
    a0ef:	ret    

000000000000a0f0 <_talloc>:
    a0f0:	push   r12
    a0f2:	test   rdi,rdi
    a0f5:	push   rbp
    a0f6:	mov    rbp,rdi
    a0f9:	cmove  rbp,QWORD PTR [rip+0x20f267]        # 219368 <null_context>
    a101:	cmp    rsi,0xfffffff
    a108:	push   rbx
    a109:	ja     a1c8 <_talloc+0xd8>
    a10f:	lea    rdi,[rsi+0x50]
    a113:	mov    r12,rsi
    a116:	call   2a50 <malloc@plt>
    a11b:	test   rax,rax
    a11e:	mov    rbx,rax
    a121:	je     a1c8 <_talloc+0xd8>
    a127:	test   rbp,rbp
    a12a:	mov    QWORD PTR [rax+0x40],r12
    a12e:	mov    DWORD PTR [rax+0x48],0xe814ec70
    a135:	mov    QWORD PTR [rax+0x30],0x0
    a13d:	mov    QWORD PTR [rax+0x18],0x0
    a145:	mov    QWORD PTR [rax+0x38],0x0
    a14d:	mov    QWORD PTR [rax+0x20],0x0
    a155:	mov    DWORD PTR [rax+0x28],0x0
    a15c:	je     a1a8 <_talloc+0xb8>
    a15e:	mov    rdi,rbp
    a161:	call   a090 <talloc_chunk_from_ptr>
    a166:	mov    QWORD PTR [rbx+0x10],rax
    a16a:	mov    rdx,QWORD PTR [rax+0x18]
    a16e:	test   rdx,rdx
    a171:	je     a1d0 <_talloc+0xe0>
    a173:	mov    QWORD PTR [rdx+0x10],0x0
    a17b:	mov    rdx,QWORD PTR [rax+0x18]
    a17f:	test   rdx,rdx
    a182:	je     a1d0 <_talloc+0xe0>
    a184:	mov    QWORD PTR [rdx+0x8],rbx
    a188:	mov    rdx,QWORD PTR [rax+0x18]
    a18c:	mov    QWORD PTR [rbx+0x8],0x0
    a194:	mov    QWORD PTR [rbx],rdx
    a197:	mov    QWORD PTR [rax+0x18],rbx
    a19b:	lea    rax,[rbx+0x50]
    a19f:	pop    rbx
    a1a0:	pop    rbp
    a1a1:	pop    r12
    a1a3:	ret    
    a1a4:	nop    DWORD PTR [rax+0x0]
    a1a8:	mov    QWORD PTR [rax+0x10],0x0
    a1b0:	mov    QWORD PTR [rax+0x8],0x0
    a1b8:	mov    QWORD PTR [rax],0x0
    a1bf:	jmp    a19b <_talloc+0xab>
    a1c1:	nop    DWORD PTR [rax+0x0]
    a1c8:	pop    rbx
    a1c9:	xor    eax,eax
    a1cb:	pop    rbp
    a1cc:	pop    r12
    a1ce:	ret    
    a1cf:	nop
    a1d0:	mov    QWORD PTR [rax+0x18],rbx
    a1d4:	mov    QWORD PTR [rbx+0x8],0x0
    a1dc:	mov    QWORD PTR [rbx],0x0
    a1e3:	jmp    a19b <_talloc+0xab>
    a1e5:	nop
    a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a1f0 <talloc_set_destructor>:
    a1f0:	push   rbx
    a1f1:	mov    rbx,rsi
    a1f4:	call   a090 <talloc_chunk_from_ptr>
    a1f9:	mov    QWORD PTR [rax+0x30],rbx
    a1fd:	pop    rbx
    a1fe:	ret    
    a1ff:	nop

000000000000a200 <talloc_increase_ref_count>:
    a200:	test   rdi,rdi
    a203:	je     a220 <talloc_increase_ref_count+0x20>
    a205:	sub    rsp,0x8
    a209:	call   a090 <talloc_chunk_from_ptr>
    a20e:	add    DWORD PTR [rax+0x28],0x1
    a212:	add    rsp,0x8
    a216:	ret    
    a217:	nop    WORD PTR [rax+rax*1+0x0]
    a220:	repz ret 
    a222:	nop    DWORD PTR [rax+0x0]
    a226:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a230 <talloc_set_name_const>:
    a230:	push   rbx
    a231:	mov    rbx,rsi
    a234:	call   a090 <talloc_chunk_from_ptr>
    a239:	mov    QWORD PTR [rax+0x38],rbx
    a23d:	pop    rbx
    a23e:	ret    
    a23f:	nop

000000000000a240 <talloc_named_const>:
    a240:	push   rbp
    a241:	push   rbx
    a242:	mov    rbp,rdx
    a245:	sub    rsp,0x8
    a249:	call   a0f0 <_talloc>
    a24e:	test   rax,rax
    a251:	mov    rbx,rax
    a254:	je     a262 <talloc_named_const+0x22>
    a256:	mov    rdi,rax
    a259:	call   a090 <talloc_chunk_from_ptr>
    a25e:	mov    QWORD PTR [rax+0x38],rbp
    a262:	add    rsp,0x8
    a266:	mov    rax,rbx
    a269:	pop    rbx
    a26a:	pop    rbp
    a26b:	ret    
    a26c:	nop    DWORD PTR [rax+0x0]

000000000000a270 <talloc_reference>:
    a270:	test   rsi,rsi
    a273:	je     a320 <talloc_reference+0xb0>
    a279:	push   r12
    a27b:	push   rbp
    a27c:	mov    rbp,rsi
    a27f:	push   rbx
    a280:	mov    rbx,rdi
    a283:	mov    rdi,rsi
    a286:	call   a090 <talloc_chunk_from_ptr>
    a28b:	mov    rdi,rbx
    a28e:	mov    edx,0x1
    a293:	mov    esi,0x18
    a298:	mov    r12,rax
    a29b:	call   a240 <talloc_named_const>
    a2a0:	test   rax,rax
    a2a3:	mov    rbx,rax
    a2a6:	je     a310 <talloc_reference+0xa0>
    a2a8:	mov    rdi,rax
    a2ab:	call   a090 <talloc_chunk_from_ptr>
    a2b0:	lea    rcx,[rip+0x649]        # a900 <talloc_reference_destructor>
    a2b7:	mov    QWORD PTR [rax+0x30],rcx
    a2bb:	mov    QWORD PTR [rbx+0x10],rbp
    a2bf:	mov    rax,QWORD PTR [r12+0x20]
    a2c4:	test   rax,rax
    a2c7:	je     a2f0 <talloc_reference+0x80>
    a2c9:	mov    QWORD PTR [rax+0x8],rbx
    a2cd:	mov    rax,QWORD PTR [r12+0x20]
    a2d2:	mov    QWORD PTR [rbx+0x8],0x0
    a2da:	mov    QWORD PTR [rbx],rax
    a2dd:	mov    QWORD PTR [r12+0x20],rbx
    a2e2:	mov    rax,QWORD PTR [rbx+0x10]
    a2e6:	pop    rbx
    a2e7:	pop    rbp
    a2e8:	pop    r12
    a2ea:	ret    
    a2eb:	nop    DWORD PTR [rax+rax*1+0x0]
    a2f0:	mov    QWORD PTR [r12+0x20],rbx
    a2f5:	mov    QWORD PTR [rbx+0x8],0x0
    a2fd:	mov    QWORD PTR [rbx],0x0
    a304:	jmp    a2e2 <talloc_reference+0x72>
    a306:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a310:	pop    rbx
    a311:	xor    eax,eax
    a313:	pop    rbp
    a314:	pop    r12
    a316:	ret    
    a317:	nop    WORD PTR [rax+rax*1+0x0]
    a320:	xor    eax,eax
    a322:	ret    
    a323:	nop    DWORD PTR [rax]
    a326:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a330 <talloc_enable_null_tracking.part.3>:
    a330:	lea    rdx,[rip+0x672b]        # 10a62 <__PRETTY_FUNCTION__.11970+0x102>
    a337:	sub    rsp,0x8
    a33b:	xor    esi,esi
    a33d:	xor    edi,edi
    a33f:	call   a240 <talloc_named_const>
    a344:	mov    QWORD PTR [rip+0x20f01d],rax        # 219368 <null_context>
    a34b:	add    rsp,0x8
    a34f:	ret    

000000000000a350 <talloc_get_name>:
    a350:	sub    rsp,0x8
    a354:	call   a090 <talloc_chunk_from_ptr>
    a359:	mov    rax,QWORD PTR [rax+0x38]
    a35d:	cmp    rax,0x1
    a361:	je     a380 <talloc_get_name+0x30>
    a363:	lea    rdx,[rip+0x6710]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    a36a:	test   rax,rax
    a36d:	cmove  rax,rdx
    a371:	add    rsp,0x8
    a375:	ret    
    a376:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a380:	lea    rax,[rip+0x66e8]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    a387:	add    rsp,0x8
    a38b:	ret    
    a38c:	nop    DWORD PTR [rax+0x0]

000000000000a390 <talloc_check_name>:
    a390:	push   rbp
    a391:	push   rbx
    a392:	mov    rbx,rdi
    a395:	sub    rsp,0x8
    a399:	test   rdi,rdi
    a39c:	je     a3d6 <talloc_check_name+0x46>
    a39e:	mov    rbp,rsi
    a3a1:	call   a090 <talloc_chunk_from_ptr>
    a3a6:	mov    rdi,QWORD PTR [rax+0x38]
    a3aa:	cmp    rdi,0x1
    a3ae:	je     a3e0 <talloc_check_name+0x50>
    a3b0:	lea    rax,[rip+0x66c3]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    a3b7:	test   rdi,rdi
    a3ba:	cmove  rdi,rax
    a3be:	cmp    rbp,rdi
    a3c1:	je     a3d6 <talloc_check_name+0x46>
    a3c3:	mov    rsi,rbp
    a3c6:	call   29c0 <strcmp@plt>
    a3cb:	test   eax,eax
    a3cd:	mov    eax,0x0
    a3d2:	cmovne rbx,rax
    a3d6:	add    rsp,0x8
    a3da:	mov    rax,rbx
    a3dd:	pop    rbx
    a3de:	pop    rbp
    a3df:	ret    
    a3e0:	lea    rdi,[rip+0x6688]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    a3e7:	jmp    a3be <talloc_check_name+0x2e>
    a3e9:	nop    DWORD PTR [rax+0x0]

000000000000a3f0 <talloc_steal>:
    a3f0:	test   rsi,rsi
    a3f3:	push   r12
    a3f5:	push   rbp
    a3f6:	mov    rbp,rsi
    a3f9:	push   rbx
    a3fa:	je     a4c9 <talloc_steal+0xd9>
    a400:	test   rdi,rdi
    a403:	mov    r12,rdi
    a406:	je     a4d8 <talloc_steal+0xe8>
    a40c:	mov    rdi,rsi
    a40f:	call   a090 <talloc_chunk_from_ptr>
    a414:	mov    rbx,rax
    a417:	mov    rdi,r12
    a41a:	call   a090 <talloc_chunk_from_ptr>
    a41f:	cmp    rax,rbx
    a422:	je     a4c9 <talloc_steal+0xd9>
    a428:	mov    rdx,QWORD PTR [rbx+0x10]
    a42c:	test   rdx,rdx
    a42f:	je     a600 <talloc_steal+0x210>
    a435:	cmp    QWORD PTR [rdx+0x18],rbx
    a439:	je     a580 <talloc_steal+0x190>
    a43f:	mov    rsi,QWORD PTR [rbx+0x8]
    a443:	mov    rcx,QWORD PTR [rbx]
    a446:	test   rsi,rsi
    a449:	je     a670 <talloc_steal+0x280>
    a44f:	mov    QWORD PTR [rsi],rcx
    a452:	mov    rcx,QWORD PTR [rbx]
    a455:	test   rcx,rcx
    a458:	je     a462 <talloc_steal+0x72>
    a45a:	mov    rsi,QWORD PTR [rbx+0x8]
    a45e:	mov    QWORD PTR [rcx+0x8],rsi
    a462:	mov    rdx,QWORD PTR [rbx+0x10]
    a466:	cmp    QWORD PTR [rdx+0x18],rbx
    a46a:	je     a660 <talloc_steal+0x270>
    a470:	mov    QWORD PTR [rbx+0x8],0x0
    a478:	mov    QWORD PTR [rbx],0x0
    a47f:	mov    rcx,QWORD PTR [rdx+0x18]
    a483:	test   rcx,rcx
    a486:	je     a48c <talloc_steal+0x9c>
    a488:	mov    QWORD PTR [rcx+0x10],rdx
    a48c:	mov    QWORD PTR [rbx+0x10],rax
    a490:	mov    rdx,QWORD PTR [rax+0x18]
    a494:	test   rdx,rdx
    a497:	je     a5e0 <talloc_steal+0x1f0>
    a49d:	mov    QWORD PTR [rdx+0x10],0x0
    a4a5:	mov    rdx,QWORD PTR [rax+0x18]
    a4a9:	test   rdx,rdx
    a4ac:	je     a5e0 <talloc_steal+0x1f0>
    a4b2:	mov    QWORD PTR [rdx+0x8],rbx
    a4b6:	mov    rdx,QWORD PTR [rax+0x18]
    a4ba:	mov    QWORD PTR [rbx+0x8],0x0
    a4c2:	mov    QWORD PTR [rbx],rdx
    a4c5:	mov    QWORD PTR [rax+0x18],rbx
    a4c9:	mov    rax,rbp
    a4cc:	pop    rbx
    a4cd:	pop    rbp
    a4ce:	pop    r12
    a4d0:	ret    
    a4d1:	nop    DWORD PTR [rax+0x0]
    a4d8:	mov    r12,QWORD PTR [rip+0x20ee89]        # 219368 <null_context>
    a4df:	mov    rdi,rsi
    a4e2:	call   a090 <talloc_chunk_from_ptr>
    a4e7:	mov    rbx,rax
    a4ea:	test   r12,r12
    a4ed:	jne    a417 <talloc_steal+0x27>
    a4f3:	mov    rax,QWORD PTR [rax+0x10]
    a4f7:	test   rax,rax
    a4fa:	je     a5b8 <talloc_steal+0x1c8>
    a500:	cmp    QWORD PTR [rax+0x18],rbx
    a504:	je     a630 <talloc_steal+0x240>
    a50a:	mov    rcx,QWORD PTR [rbx+0x8]
    a50e:	mov    rdx,QWORD PTR [rbx]
    a511:	test   rcx,rcx
    a514:	je     a5a8 <talloc_steal+0x1b8>
    a51a:	mov    QWORD PTR [rcx],rdx
    a51d:	mov    rdx,QWORD PTR [rbx]
    a520:	test   rdx,rdx
    a523:	je     a52d <talloc_steal+0x13d>
    a525:	mov    rcx,QWORD PTR [rbx+0x8]
    a529:	mov    QWORD PTR [rdx+0x8],rcx
    a52d:	mov    rax,QWORD PTR [rbx+0x10]
    a531:	cmp    QWORD PTR [rax+0x18],rbx
    a535:	je     a658 <talloc_steal+0x268>
    a53b:	mov    QWORD PTR [rbx+0x8],0x0
    a543:	mov    QWORD PTR [rbx],0x0
    a54a:	mov    rdx,QWORD PTR [rax+0x18]
    a54e:	test   rdx,rdx
    a551:	je     a557 <talloc_steal+0x167>
    a553:	mov    QWORD PTR [rdx+0x10],rax
    a557:	mov    QWORD PTR [rbx+0x8],0x0
    a55f:	mov    QWORD PTR [rbx],0x0
    a566:	mov    rax,rbp
    a569:	mov    QWORD PTR [rbx+0x10],0x0
    a571:	pop    rbx
    a572:	pop    rbp
    a573:	pop    r12
    a575:	ret    
    a576:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a580:	mov    rcx,QWORD PTR [rbx]
    a583:	mov    QWORD PTR [rdx+0x18],rcx
    a587:	mov    rdx,QWORD PTR [rbx+0x10]
    a58b:	mov    rcx,QWORD PTR [rdx+0x18]
    a58f:	test   rcx,rcx
    a592:	je     a690 <talloc_steal+0x2a0>
    a598:	mov    QWORD PTR [rcx+0x8],0x0
    a5a0:	jmp    a462 <talloc_steal+0x72>
    a5a5:	nop    DWORD PTR [rax]
    a5a8:	test   rdx,rdx
    a5ab:	jne    a529 <talloc_steal+0x139>
    a5b1:	jmp    a53b <talloc_steal+0x14b>
    a5b3:	nop    DWORD PTR [rax+rax*1+0x0]
    a5b8:	mov    rdx,QWORD PTR [rbx+0x8]
    a5bc:	mov    rax,QWORD PTR [rbx]
    a5bf:	test   rdx,rdx
    a5c2:	je     a5ca <talloc_steal+0x1da>
    a5c4:	mov    QWORD PTR [rdx],rax
    a5c7:	mov    rax,QWORD PTR [rbx]
    a5ca:	test   rax,rax
    a5cd:	je     a557 <talloc_steal+0x167>
    a5cf:	mov    rdx,QWORD PTR [rbx+0x8]
    a5d3:	mov    QWORD PTR [rax+0x8],rdx
    a5d7:	jmp    a557 <talloc_steal+0x167>
    a5dc:	nop    DWORD PTR [rax+0x0]
    a5e0:	mov    QWORD PTR [rax+0x18],rbx
    a5e4:	mov    QWORD PTR [rbx+0x8],0x0
    a5ec:	mov    rax,rbp
    a5ef:	mov    QWORD PTR [rbx],0x0
    a5f6:	pop    rbx
    a5f7:	pop    rbp
    a5f8:	pop    r12
    a5fa:	ret    
    a5fb:	nop    DWORD PTR [rax+rax*1+0x0]
    a600:	mov    rdx,QWORD PTR [rbx+0x8]
    a604:	test   rdx,rdx
    a607:	je     a60f <talloc_steal+0x21f>
    a609:	mov    rcx,QWORD PTR [rbx]
    a60c:	mov    QWORD PTR [rdx],rcx
    a60f:	mov    rdx,QWORD PTR [rbx]
    a612:	test   rdx,rdx
    a615:	je     a48c <talloc_steal+0x9c>
    a61b:	mov    rcx,QWORD PTR [rbx+0x8]
    a61f:	mov    QWORD PTR [rdx+0x8],rcx
    a623:	jmp    a48c <talloc_steal+0x9c>
    a628:	nop    DWORD PTR [rax+rax*1+0x0]
    a630:	mov    rdx,QWORD PTR [rbx]
    a633:	mov    QWORD PTR [rax+0x18],rdx
    a637:	mov    rax,QWORD PTR [rbx+0x10]
    a63b:	mov    rdx,QWORD PTR [rax+0x18]
    a63f:	test   rdx,rdx
    a642:	je     a680 <talloc_steal+0x290>
    a644:	mov    QWORD PTR [rdx+0x8],0x0
    a64c:	jmp    a52d <talloc_steal+0x13d>
    a651:	nop    DWORD PTR [rax+0x0]
    a658:	mov    rdx,rbx
    a65b:	jmp    a553 <talloc_steal+0x163>
    a660:	mov    rcx,rbx
    a663:	jmp    a488 <talloc_steal+0x98>
    a668:	nop    DWORD PTR [rax+rax*1+0x0]
    a670:	test   rcx,rcx
    a673:	jne    a45e <talloc_steal+0x6e>
    a679:	jmp    a470 <talloc_steal+0x80>
    a67e:	xchg   ax,ax
    a680:	test   rbx,rbx
    a683:	jne    a53b <talloc_steal+0x14b>
    a689:	jmp    a557 <talloc_steal+0x167>
    a68e:	xchg   ax,ax
    a690:	test   rbx,rbx
    a693:	jne    a470 <talloc_steal+0x80>
    a699:	jmp    a48c <talloc_steal+0x9c>
    a69e:	xchg   ax,ax

000000000000a6a0 <talloc_free>:
    a6a0:	test   rdi,rdi
    a6a3:	je     a8e7 <talloc_free+0x247>
    a6a9:	push   r14
    a6ab:	push   r13
    a6ad:	mov    r13,rdi
    a6b0:	push   r12
    a6b2:	push   rbp
    a6b3:	push   rbx
    a6b4:	call   a090 <talloc_chunk_from_ptr>
    a6b9:	mov    rbx,rax
    a6bc:	mov    eax,DWORD PTR [rax+0x28]
    a6bf:	test   eax,eax
    a6c1:	jne    a8d7 <talloc_free+0x237>
    a6c7:	mov    rdi,QWORD PTR [rbx+0x20]
    a6cb:	test   rdi,rdi
    a6ce:	jne    a8c8 <talloc_free+0x228>
    a6d4:	mov    edx,DWORD PTR [rbx+0x48]
    a6d7:	xor    eax,eax
    a6d9:	test   dl,0x2
    a6dc:	jne    a81e <talloc_free+0x17e>
    a6e2:	mov    rbp,QWORD PTR [rbx+0x30]
    a6e6:	test   rbp,rbp
    a6e9:	je     a716 <talloc_free+0x76>
    a6eb:	cmp    rbp,0xffffffffffffffff
    a6ef:	je     a8dd <talloc_free+0x23d>
    a6f5:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
    a6fd:	mov    rdi,r13
    a700:	call   rbp
    a702:	cmp    eax,0xffffffff
    a705:	je     a8ed <talloc_free+0x24d>
    a70b:	mov    edx,DWORD PTR [rbx+0x48]
    a70e:	mov    QWORD PTR [rbx+0x30],0x0
    a716:	or     edx,0x2
    a719:	mov    rdi,r13
    a71c:	mov    DWORD PTR [rbx+0x48],edx
    a71f:	call   a090 <talloc_chunk_from_ptr>
    a724:	mov    r14,rax
    a727:	jmp    a73d <talloc_free+0x9d>
    a729:	nop    DWORD PTR [rax+0x0]
    a730:	mov    rdi,rbp
    a733:	call   a6a0 <talloc_free>
    a738:	cmp    eax,0xffffffff
    a73b:	je     a790 <talloc_free+0xf0>
    a73d:	mov    rax,QWORD PTR [r14+0x18]
    a741:	test   rax,rax
    a744:	je     a7b8 <talloc_free+0x118>
    a746:	mov    rdi,QWORD PTR [rax+0x20]
    a74a:	lea    rbp,[rax+0x50]
    a74e:	mov    r12,QWORD PTR [rip+0x20ec13]        # 219368 <null_context>
    a755:	test   rdi,rdi
    a758:	je     a730 <talloc_free+0x90>
    a75a:	call   a090 <talloc_chunk_from_ptr>
    a75f:	jmp    a76b <talloc_free+0xcb>
    a761:	nop    DWORD PTR [rax+0x0]
    a768:	mov    rax,rdx
    a76b:	mov    rdx,QWORD PTR [rax+0x8]
    a76f:	test   rdx,rdx
    a772:	jne    a768 <talloc_free+0xc8>
    a774:	mov    rax,QWORD PTR [rax+0x10]
    a778:	mov    rdi,rbp
    a77b:	lea    rdx,[rax+0x50]
    a77f:	test   rax,rax
    a782:	cmovne r12,rdx
    a786:	call   a6a0 <talloc_free>
    a78b:	cmp    eax,0xffffffff
    a78e:	jne    a73d <talloc_free+0x9d>
    a790:	cmp    QWORD PTR [rip+0x20ebd1],r12        # 219368 <null_context>
    a797:	je     a89b <talloc_free+0x1fb>
    a79d:	mov    rsi,rbp
    a7a0:	mov    rdi,r12
    a7a3:	call   a3f0 <talloc_steal>
    a7a8:	mov    rax,QWORD PTR [r14+0x18]
    a7ac:	test   rax,rax
    a7af:	jne    a746 <talloc_free+0xa6>
    a7b1:	nop    DWORD PTR [rax+0x0]
    a7b8:	mov    rax,QWORD PTR [rbx+0x10]
    a7bc:	test   rax,rax
    a7bf:	je     a830 <talloc_free+0x190>
    a7c1:	cmp    QWORD PTR [rax+0x18],rbx
    a7c5:	je     a860 <talloc_free+0x1c0>
    a7cb:	mov    rcx,QWORD PTR [rbx+0x8]
    a7cf:	mov    rdx,QWORD PTR [rbx]
    a7d2:	test   rcx,rcx
    a7d5:	je     a851 <talloc_free+0x1b1>
    a7d7:	mov    QWORD PTR [rcx],rdx
    a7da:	mov    rdx,QWORD PTR [rbx]
    a7dd:	test   rdx,rdx
    a7e0:	je     a7ea <talloc_free+0x14a>
    a7e2:	mov    rcx,QWORD PTR [rbx+0x8]
    a7e6:	mov    QWORD PTR [rdx+0x8],rcx
    a7ea:	mov    rax,QWORD PTR [rbx+0x10]
    a7ee:	cmp    QWORD PTR [rax+0x18],rbx
    a7f2:	je     a888 <talloc_free+0x1e8>
    a7f8:	mov    QWORD PTR [rbx+0x8],0x0
    a800:	mov    QWORD PTR [rbx],0x0
    a807:	mov    rdx,QWORD PTR [rax+0x18]
    a80b:	test   rdx,rdx
    a80e:	je     a814 <talloc_free+0x174>
    a810:	mov    QWORD PTR [rdx+0x10],rax
    a814:	mov    rdi,rbx
    a817:	call   2700 <free@plt>
    a81c:	xor    eax,eax
    a81e:	pop    rbx
    a81f:	pop    rbp
    a820:	pop    r12
    a822:	pop    r13
    a824:	pop    r14
    a826:	ret    
    a827:	nop    WORD PTR [rax+rax*1+0x0]
    a830:	mov    rdx,QWORD PTR [rbx+0x8]
    a834:	mov    rax,QWORD PTR [rbx]
    a837:	test   rdx,rdx
    a83a:	je     a842 <talloc_free+0x1a2>
    a83c:	mov    QWORD PTR [rdx],rax
    a83f:	mov    rax,QWORD PTR [rbx]
    a842:	test   rax,rax
    a845:	je     a814 <talloc_free+0x174>
    a847:	mov    rdx,QWORD PTR [rbx+0x8]
    a84b:	mov    QWORD PTR [rax+0x8],rdx
    a84f:	jmp    a814 <talloc_free+0x174>
    a851:	test   rdx,rdx
    a854:	jne    a7e6 <talloc_free+0x146>
    a856:	jmp    a7f8 <talloc_free+0x158>
    a858:	nop    DWORD PTR [rax+rax*1+0x0]
    a860:	mov    rdx,QWORD PTR [rbx]
    a863:	mov    QWORD PTR [rax+0x18],rdx
    a867:	mov    rax,QWORD PTR [rbx+0x10]
    a86b:	mov    rdx,QWORD PTR [rax+0x18]
    a86f:	test   rdx,rdx
    a872:	je     a88d <talloc_free+0x1ed>
    a874:	mov    QWORD PTR [rdx+0x8],0x0
    a87c:	jmp    a7ea <talloc_free+0x14a>
    a881:	nop    DWORD PTR [rax+0x0]
    a888:	mov    rdx,rbx
    a88b:	jmp    a810 <talloc_free+0x170>
    a88d:	test   rbx,rbx
    a890:	jne    a7f8 <talloc_free+0x158>
    a896:	jmp    a814 <talloc_free+0x174>
    a89b:	mov    rdi,r13
    a89e:	call   a090 <talloc_chunk_from_ptr>
    a8a3:	jmp    a8ab <talloc_free+0x20b>
    a8a5:	nop    DWORD PTR [rax]
    a8a8:	mov    rax,rdx
    a8ab:	mov    rdx,QWORD PTR [rax+0x8]
    a8af:	test   rdx,rdx
    a8b2:	jne    a8a8 <talloc_free+0x208>
    a8b4:	mov    rax,QWORD PTR [rax+0x10]
    a8b8:	lea    rdx,[rax+0x50]
    a8bc:	test   rax,rax
    a8bf:	cmovne r12,rdx
    a8c3:	jmp    a79d <talloc_free+0xfd>
    a8c8:	call   a900 <talloc_reference_destructor>
    a8cd:	mov    eax,0xffffffff
    a8d2:	jmp    a81e <talloc_free+0x17e>
    a8d7:	sub    eax,0x1
    a8da:	mov    DWORD PTR [rbx+0x28],eax
    a8dd:	mov    eax,0xffffffff
    a8e2:	jmp    a81e <talloc_free+0x17e>
    a8e7:	mov    eax,0xffffffff
    a8ec:	ret    
    a8ed:	mov    QWORD PTR [rbx+0x30],rbp
    a8f1:	jmp    a81e <talloc_free+0x17e>
    a8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000a900 <talloc_reference_destructor>:
    a900:	push   rbp
    a901:	push   rbx
    a902:	mov    rbx,rdi
    a905:	sub    rsp,0x8
    a909:	call   a090 <talloc_chunk_from_ptr>
    a90e:	mov    rdi,QWORD PTR [rbx+0x10]
    a912:	mov    rbp,rax
    a915:	call   a090 <talloc_chunk_from_ptr>
    a91a:	cmp    QWORD PTR [rbp+0x30],0xffffffffffffffff
    a91f:	je     a929 <talloc_reference_destructor+0x29>
    a921:	mov    QWORD PTR [rbp+0x30],0x0
    a929:	cmp    QWORD PTR [rax+0x20],rbx
    a92d:	je     a990 <talloc_reference_destructor+0x90>
    a92f:	mov    rcx,QWORD PTR [rbx+0x8]
    a933:	mov    rdx,QWORD PTR [rbx]
    a936:	test   rcx,rcx
    a939:	je     a980 <talloc_reference_destructor+0x80>
    a93b:	mov    QWORD PTR [rcx],rdx
    a93e:	mov    rdx,QWORD PTR [rbx]
    a941:	test   rdx,rdx
    a944:	je     a94e <talloc_reference_destructor+0x4e>
    a946:	mov    rcx,QWORD PTR [rbx+0x8]
    a94a:	mov    QWORD PTR [rdx+0x8],rcx
    a94e:	mov    rax,QWORD PTR [rax+0x20]
    a952:	cmp    rbx,rax
    a955:	je     a966 <talloc_reference_destructor+0x66>
    a957:	mov    QWORD PTR [rbx+0x8],0x0
    a95f:	mov    QWORD PTR [rbx],0x0
    a966:	mov    rdi,rbx
    a969:	call   a6a0 <talloc_free>
    a96e:	add    rsp,0x8
    a972:	xor    eax,eax
    a974:	pop    rbx
    a975:	pop    rbp
    a976:	ret    
    a977:	nop    WORD PTR [rax+rax*1+0x0]
    a980:	test   rdx,rdx
    a983:	jne    a94a <talloc_reference_destructor+0x4a>
    a985:	jmp    a957 <talloc_reference_destructor+0x57>
    a987:	nop    WORD PTR [rax+rax*1+0x0]
    a990:	mov    rdx,QWORD PTR [rbx]
    a993:	test   rdx,rdx
    a996:	mov    QWORD PTR [rax+0x20],rdx
    a99a:	je     a957 <talloc_reference_destructor+0x57>
    a99c:	mov    QWORD PTR [rdx+0x8],0x0
    a9a4:	mov    rax,QWORD PTR [rax+0x20]
    a9a8:	jmp    a952 <talloc_reference_destructor+0x52>
    a9aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a9b0 <talloc_unreference>:
    a9b0:	push   r12
    a9b2:	push   rbp
    a9b3:	mov    rbp,rdi
    a9b6:	push   rbx
    a9b7:	mov    rdi,rsi
    a9ba:	call   a090 <talloc_chunk_from_ptr>
    a9bf:	test   rbp,rbp
    a9c2:	mov    r12,rax
    a9c5:	mov    rax,QWORD PTR [rip+0x20e99c]        # 219368 <null_context>
    a9cc:	je     aa8b <talloc_unreference+0xdb>
    a9d2:	cmp    rax,rbp
    a9d5:	je     aa8b <talloc_unreference+0xdb>
    a9db:	mov    rbx,QWORD PTR [r12+0x20]
    a9e0:	mov    eax,0xffffffff
    a9e5:	test   rbx,rbx
    a9e8:	je     aa2b <talloc_unreference+0x7b>
    a9ea:	nop    WORD PTR [rax+rax*1+0x0]
    a9f0:	mov    rdi,rbx
    a9f3:	call   a090 <talloc_chunk_from_ptr>
    a9f8:	mov    rcx,rax
    a9fb:	jmp    aa03 <talloc_unreference+0x53>
    a9fd:	nop    DWORD PTR [rax]
    aa00:	mov    rcx,rdx
    aa03:	mov    rdx,QWORD PTR [rcx+0x8]
    aa07:	test   rdx,rdx
    aa0a:	jne    aa00 <talloc_unreference+0x50>
    aa0c:	mov    rdx,QWORD PTR [rcx+0x10]
    aa10:	test   rdx,rdx
    aa13:	je     aa30 <talloc_unreference+0x80>
    aa15:	add    rdx,0x50
    aa19:	cmp    rbp,rdx
    aa1c:	je     aa35 <talloc_unreference+0x85>
    aa1e:	mov    rbx,QWORD PTR [rbx]
    aa21:	test   rbx,rbx
    aa24:	jne    a9f0 <talloc_unreference+0x40>
    aa26:	mov    eax,0xffffffff
    aa2b:	pop    rbx
    aa2c:	pop    rbp
    aa2d:	pop    r12
    aa2f:	ret    
    aa30:	test   rbp,rbp
    aa33:	jne    aa1e <talloc_unreference+0x6e>
    aa35:	mov    QWORD PTR [rax+0x30],0x0
    aa3d:	cmp    QWORD PTR [r12+0x20],rbx
    aa42:	je     aaaa <talloc_unreference+0xfa>
    aa44:	mov    rdx,QWORD PTR [rbx+0x8]
    aa48:	mov    rax,QWORD PTR [rbx]
    aa4b:	test   rdx,rdx
    aa4e:	je     aac6 <talloc_unreference+0x116>
    aa50:	mov    QWORD PTR [rdx],rax
    aa53:	mov    rax,QWORD PTR [rbx]
    aa56:	test   rax,rax
    aa59:	je     aa63 <talloc_unreference+0xb3>
    aa5b:	mov    rdx,QWORD PTR [rbx+0x8]
    aa5f:	mov    QWORD PTR [rax+0x8],rdx
    aa63:	mov    rax,QWORD PTR [r12+0x20]
    aa68:	cmp    rax,rbx
    aa6b:	je     aa7c <talloc_unreference+0xcc>
    aa6d:	mov    QWORD PTR [rbx+0x8],0x0
    aa75:	mov    QWORD PTR [rbx],0x0
    aa7c:	mov    rdi,rbx
    aa7f:	call   a6a0 <talloc_free>
    aa84:	pop    rbx
    aa85:	xor    eax,eax
    aa87:	pop    rbp
    aa88:	pop    r12
    aa8a:	ret    
    aa8b:	mov    edx,DWORD PTR [r12+0x28]
    aa90:	mov    rbp,rax
    aa93:	test   edx,edx
    aa95:	je     a9db <talloc_unreference+0x2b>
    aa9b:	sub    edx,0x1
    aa9e:	xor    eax,eax
    aaa0:	mov    DWORD PTR [r12+0x28],edx
    aaa5:	pop    rbx
    aaa6:	pop    rbp
    aaa7:	pop    r12
    aaa9:	ret    
    aaaa:	mov    rax,QWORD PTR [rbx]
    aaad:	test   rax,rax
    aab0:	mov    QWORD PTR [r12+0x20],rax
    aab5:	je     aa6d <talloc_unreference+0xbd>
    aab7:	mov    QWORD PTR [rax+0x8],0x0
    aabf:	mov    rax,QWORD PTR [r12+0x20]
    aac4:	jmp    aa68 <talloc_unreference+0xb8>
    aac6:	test   rax,rax
    aac9:	jne    aa5f <talloc_unreference+0xaf>
    aacb:	jmp    aa6d <talloc_unreference+0xbd>
    aacd:	nop    DWORD PTR [rax]

000000000000aad0 <_talloc_realloc>:
    aad0:	push   r13
    aad2:	push   r12
    aad4:	push   rbp
    aad5:	push   rbx
    aad6:	sub    rsp,0x8
    aada:	test   rdx,rdx
    aadd:	je     abb0 <_talloc_realloc+0xe0>
    aae3:	cmp    rdx,0xfffffff
    aaea:	mov    rbp,rdx
    aaed:	ja     aba8 <_talloc_realloc+0xd8>
    aaf3:	test   rsi,rsi
    aaf6:	mov    r13,rcx
    aaf9:	je     ab90 <_talloc_realloc+0xc0>
    aaff:	mov    rdi,rsi
    ab02:	xor    ebx,ebx
    ab04:	call   a090 <talloc_chunk_from_ptr>
    ab09:	cmp    QWORD PTR [rax+0x20],0x0
    ab0e:	mov    r12,rax
    ab11:	jne    ab79 <_talloc_realloc+0xa9>
    ab13:	or     DWORD PTR [rax+0x48],0x1
    ab17:	lea    rsi,[rbp+0x50]
    ab1b:	mov    rdi,rax
    ab1e:	call   2ad0 <realloc@plt>
    ab23:	test   rax,rax
    ab26:	mov    rbx,rax
    ab29:	je     abc0 <_talloc_realloc+0xf0>
    ab2f:	and    DWORD PTR [rax+0x48],0xfffffffe
    ab33:	mov    rax,QWORD PTR [rax+0x10]
    ab37:	test   rax,rax
    ab3a:	je     ab40 <_talloc_realloc+0x70>
    ab3c:	mov    QWORD PTR [rax+0x18],rbx
    ab40:	mov    rax,QWORD PTR [rbx+0x18]
    ab44:	test   rax,rax
    ab47:	je     ab4d <_talloc_realloc+0x7d>
    ab49:	mov    QWORD PTR [rax+0x10],rbx
    ab4d:	mov    rax,QWORD PTR [rbx+0x8]
    ab51:	test   rax,rax
    ab54:	je     ab59 <_talloc_realloc+0x89>
    ab56:	mov    QWORD PTR [rax],rbx
    ab59:	mov    rax,QWORD PTR [rbx]
    ab5c:	test   rax,rax
    ab5f:	je     ab65 <_talloc_realloc+0x95>
    ab61:	mov    QWORD PTR [rax+0x8],rbx
    ab65:	mov    QWORD PTR [rbx+0x40],rbp
    ab69:	add    rbx,0x50
    ab6d:	mov    rdi,rbx
    ab70:	call   a090 <talloc_chunk_from_ptr>
    ab75:	mov    QWORD PTR [rax+0x38],r13
    ab79:	add    rsp,0x8
    ab7d:	mov    rax,rbx
    ab80:	pop    rbx
    ab81:	pop    rbp
    ab82:	pop    r12
    ab84:	pop    r13
    ab86:	ret    
    ab87:	nop    WORD PTR [rax+rax*1+0x0]
    ab90:	add    rsp,0x8
    ab94:	mov    rsi,rbp
    ab97:	mov    rdx,rcx
    ab9a:	pop    rbx
    ab9b:	pop    rbp
    ab9c:	pop    r12
    ab9e:	pop    r13
    aba0:	jmp    a240 <talloc_named_const>
    aba5:	nop    DWORD PTR [rax]
    aba8:	xor    ebx,ebx
    abaa:	jmp    ab79 <_talloc_realloc+0xa9>
    abac:	nop    DWORD PTR [rax+0x0]
    abb0:	mov    rdi,rsi
    abb3:	xor    ebx,ebx
    abb5:	call   a6a0 <talloc_free>
    abba:	jmp    ab79 <_talloc_realloc+0xa9>
    abbc:	nop    DWORD PTR [rax+0x0]
    abc0:	and    DWORD PTR [r12+0x48],0xfffffffe
    abc6:	jmp    ab79 <_talloc_realloc+0xa9>
    abc8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000abd0 <talloc_autofree>:
    abd0:	sub    rsp,0x8
    abd4:	mov    rdi,QWORD PTR [rip+0x20e785]        # 219360 <cleanup_context>
    abdb:	call   a6a0 <talloc_free>
    abe0:	mov    QWORD PTR [rip+0x20e775],0x0        # 219360 <cleanup_context>
    abeb:	add    rsp,0x8
    abef:	ret    

000000000000abf0 <talloc_unlink>:
    abf0:	test   rsi,rsi
    abf3:	push   r12
    abf5:	push   rbp
    abf6:	push   rbx
    abf7:	je     ad00 <talloc_unlink+0x110>
    abfd:	test   rdi,rdi
    ac00:	mov    rbp,rdi
    ac03:	mov    rbx,rsi
    ac06:	je     acb0 <talloc_unlink+0xc0>
    ac0c:	call   a9b0 <talloc_unreference>
    ac11:	test   eax,eax
    ac13:	je     acc3 <talloc_unlink+0xd3>
    ac19:	mov    rdi,rbp
    ac1c:	call   a090 <talloc_chunk_from_ptr>
    ac21:	mov    rdi,rbx
    ac24:	mov    rbp,rax
    ac27:	call   a090 <talloc_chunk_from_ptr>
    ac2c:	jmp    ac33 <talloc_unlink+0x43>
    ac2e:	xchg   ax,ax
    ac30:	mov    rax,rdx
    ac33:	mov    rdx,QWORD PTR [rax+0x8]
    ac37:	test   rdx,rdx
    ac3a:	jne    ac30 <talloc_unlink+0x40>
    ac3c:	cmp    rbp,QWORD PTR [rax+0x10]
    ac40:	jne    ad00 <talloc_unlink+0x110>
    ac46:	mov    rdi,rbx
    ac49:	call   a090 <talloc_chunk_from_ptr>
    ac4e:	mov    rdi,QWORD PTR [rax+0x20]
    ac52:	test   rdi,rdi
    ac55:	je     ad10 <talloc_unlink+0x120>
    ac5b:	call   a090 <talloc_chunk_from_ptr>
    ac60:	jmp    ac6b <talloc_unlink+0x7b>
    ac62:	nop    WORD PTR [rax+rax*1+0x0]
    ac68:	mov    rax,rdx
    ac6b:	mov    rdx,QWORD PTR [rax+0x8]
    ac6f:	test   rdx,rdx
    ac72:	jne    ac68 <talloc_unlink+0x78>
    ac74:	mov    rax,QWORD PTR [rax+0x10]
    ac78:	mov    rsi,rbx
    ac7b:	lea    r12,[rax+0x50]
    ac7f:	test   rax,rax
    ac82:	cmove  r12,rdx
    ac86:	mov    rdi,r12
    ac89:	call   a9b0 <talloc_unreference>
    ac8e:	test   eax,eax
    ac90:	mov    ebp,eax
    ac92:	jne    ad00 <talloc_unlink+0x110>
    ac94:	mov    rsi,rbx
    ac97:	mov    rdi,r12
    ac9a:	call   a3f0 <talloc_steal>
    ac9f:	mov    eax,ebp
    aca1:	pop    rbx
    aca2:	pop    rbp
    aca3:	pop    r12
    aca5:	ret    
    aca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    acb0:	mov    rbp,QWORD PTR [rip+0x20e6b1]        # 219368 <null_context>
    acb7:	mov    rdi,rbp
    acba:	call   a9b0 <talloc_unreference>
    acbf:	test   eax,eax
    acc1:	jne    acd0 <talloc_unlink+0xe0>
    acc3:	xor    ebp,ebp
    acc5:	mov    eax,ebp
    acc7:	pop    rbx
    acc8:	pop    rbp
    acc9:	pop    r12
    accb:	ret    
    accc:	nop    DWORD PTR [rax+0x0]
    acd0:	test   rbp,rbp
    acd3:	jne    ac19 <talloc_unlink+0x29>
    acd9:	mov    rdi,rbx
    acdc:	call   a090 <talloc_chunk_from_ptr>
    ace1:	jmp    aceb <talloc_unlink+0xfb>
    ace3:	nop    DWORD PTR [rax+rax*1+0x0]
    ace8:	mov    rax,rdx
    aceb:	mov    rdx,QWORD PTR [rax+0x8]
    acef:	test   rdx,rdx
    acf2:	jne    ace8 <talloc_unlink+0xf8>
    acf4:	cmp    QWORD PTR [rax+0x10],0x0
    acf9:	je     ac46 <talloc_unlink+0x56>
    acff:	nop
    ad00:	mov    ebp,0xffffffff
    ad05:	jmp    ac9f <talloc_unlink+0xaf>
    ad07:	nop    WORD PTR [rax+rax*1+0x0]
    ad10:	mov    rdi,rbx
    ad13:	pop    rbx
    ad14:	pop    rbp
    ad15:	pop    r12
    ad17:	jmp    a6a0 <talloc_free>
    ad1c:	nop    DWORD PTR [rax+0x0]

000000000000ad20 <talloc_total_size>:
    ad20:	test   rdi,rdi
    ad23:	push   r12
    ad25:	push   rbp
    ad26:	push   rbx
    ad27:	je     ad80 <talloc_total_size+0x60>
    ad29:	call   a090 <talloc_chunk_from_ptr>
    ad2e:	mov    r12,rax
    ad31:	mov    eax,DWORD PTR [rax+0x48]
    ad34:	xor    ebp,ebp
    ad36:	test   al,0x2
    ad38:	jne    ad72 <talloc_total_size+0x52>
    ad3a:	mov    rbx,QWORD PTR [r12+0x18]
    ad3f:	or     eax,0x2
    ad42:	mov    rbp,QWORD PTR [r12+0x40]
    ad47:	mov    DWORD PTR [r12+0x48],eax
    ad4c:	test   rbx,rbx
    ad4f:	je     ad6a <talloc_total_size+0x4a>
    ad51:	lea    rdi,[rbx+0x50]
    ad55:	call   ad20 <talloc_total_size>
    ad5a:	mov    rbx,QWORD PTR [rbx]
    ad5d:	add    rbp,rax
    ad60:	test   rbx,rbx
    ad63:	jne    ad51 <talloc_total_size+0x31>
    ad65:	mov    eax,DWORD PTR [r12+0x48]
    ad6a:	and    eax,0xfffffffd
    ad6d:	mov    DWORD PTR [r12+0x48],eax
    ad72:	mov    rax,rbp
    ad75:	pop    rbx
    ad76:	pop    rbp
    ad77:	pop    r12
    ad79:	ret    
    ad7a:	nop    WORD PTR [rax+rax*1+0x0]
    ad80:	mov    rdi,QWORD PTR [rip+0x20e5e1]        # 219368 <null_context>
    ad87:	test   rdi,rdi
    ad8a:	jne    ad29 <talloc_total_size+0x9>
    ad8c:	xor    ebp,ebp
    ad8e:	mov    rax,rbp
    ad91:	pop    rbx
    ad92:	pop    rbp
    ad93:	pop    r12
    ad95:	ret    
    ad96:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ada0 <talloc_total_blocks>:
    ada0:	push   r12
    ada2:	push   rbp
    ada3:	xor    ebp,ebp
    ada5:	push   rbx
    ada6:	call   a090 <talloc_chunk_from_ptr>
    adab:	mov    r12,rax
    adae:	mov    eax,DWORD PTR [rax+0x48]
    adb1:	test   al,0x2
    adb3:	jne    aded <talloc_total_blocks+0x4d>
    adb5:	mov    rbx,QWORD PTR [r12+0x18]
    adba:	or     eax,0x2
    adbd:	mov    ebp,0x1
    adc2:	mov    DWORD PTR [r12+0x48],eax
    adc7:	test   rbx,rbx
    adca:	je     ade5 <talloc_total_blocks+0x45>
    adcc:	lea    rdi,[rbx+0x50]
    add0:	call   ada0 <talloc_total_blocks>
    add5:	mov    rbx,QWORD PTR [rbx]
    add8:	add    rbp,rax
    addb:	test   rbx,rbx
    adde:	jne    adcc <talloc_total_blocks+0x2c>
    ade0:	mov    eax,DWORD PTR [r12+0x48]
    ade5:	and    eax,0xfffffffd
    ade8:	mov    DWORD PTR [r12+0x48],eax
    aded:	mov    rax,rbp
    adf0:	pop    rbx
    adf1:	pop    rbp
    adf2:	pop    r12
    adf4:	ret    
    adf5:	nop
    adf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ae00 <talloc_report_depth>:
    ae00:	push   r15
    ae02:	push   r14
    ae04:	push   r13
    ae06:	push   r12
    ae08:	mov    r13d,edx
    ae0b:	push   rbp
    ae0c:	push   rbx
    ae0d:	mov    rbp,rsi
    ae10:	sub    rsp,0x28
    ae14:	call   a090 <talloc_chunk_from_ptr>
    ae19:	mov    rbx,rax
    ae1c:	mov    eax,DWORD PTR [rax+0x48]
    ae1f:	test   al,0x2
    ae21:	jne    ae97 <talloc_report_depth+0x97>
    ae23:	mov    r15,QWORD PTR [rbx+0x18]
    ae27:	or     eax,0x2
    ae2a:	mov    DWORD PTR [rbx+0x48],eax
    ae2d:	test   r15,r15
    ae30:	je     ae91 <talloc_report_depth+0x91>
    ae32:	lea    r14d,[r13*4+0x0]
    ae3a:	cmp    QWORD PTR [r15+0x38],0x1
    ae3f:	jne    aeb0 <talloc_report_depth+0xb0>
    ae41:	mov    rdi,QWORD PTR [r15+0x60]
    ae45:	call   a090 <talloc_chunk_from_ptr>
    ae4a:	mov    r9,QWORD PTR [rax+0x38]
    ae4e:	cmp    r9,0x1
    ae52:	je     af60 <talloc_report_depth+0x160>
    ae58:	lea    rax,[rip+0x5c1b]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    ae5f:	test   r9,r9
    ae62:	cmove  r9,rax
    ae66:	lea    r8,[rip+0x5c89]        # 10af6 <__PRETTY_FUNCTION__.11970+0x196>
    ae6d:	lea    rdx,[rip+0x5c0e]        # 10a82 <__PRETTY_FUNCTION__.11970+0x122>
    ae74:	mov    ecx,r14d
    ae77:	mov    esi,0x1
    ae7c:	mov    rdi,rbp
    ae7f:	xor    eax,eax
    ae81:	call   2c20 <__fprintf_chk@plt>
    ae86:	mov    r15,QWORD PTR [r15]
    ae89:	test   r15,r15
    ae8c:	jne    ae3a <talloc_report_depth+0x3a>
    ae8e:	mov    eax,DWORD PTR [rbx+0x48]
    ae91:	and    eax,0xfffffffd
    ae94:	mov    DWORD PTR [rbx+0x48],eax
    ae97:	add    rsp,0x28
    ae9b:	pop    rbx
    ae9c:	pop    rbp
    ae9d:	pop    r12
    ae9f:	pop    r13
    aea1:	pop    r14
    aea3:	pop    r15
    aea5:	ret    
    aea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    aeb0:	lea    r12,[r15+0x50]
    aeb4:	mov    rdi,r12
    aeb7:	call   a090 <talloc_chunk_from_ptr>
    aebc:	mov    r9,QWORD PTR [rax+0x38]
    aec0:	cmp    r9,0x1
    aec4:	je     af70 <talloc_report_depth+0x170>
    aeca:	lea    rsi,[rip+0x5ba9]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    aed1:	test   r9,r9
    aed4:	cmove  r9,rsi
    aed8:	mov    rax,QWORD PTR [rax+0x20]
    aedc:	xor    edx,edx
    aede:	test   rax,rax
    aee1:	je     aef3 <talloc_report_depth+0xf3>
    aee3:	nop    DWORD PTR [rax+rax*1+0x0]
    aee8:	mov    rax,QWORD PTR [rax]
    aeeb:	add    edx,0x1
    aeee:	test   rax,rax
    aef1:	jne    aee8 <talloc_report_depth+0xe8>
    aef3:	mov    rdi,r12
    aef6:	mov    QWORD PTR [rsp+0x18],r9
    aefb:	mov    DWORD PTR [rsp+0x14],edx
    aeff:	call   ada0 <talloc_total_blocks>
    af04:	mov    rdi,r12
    af07:	mov    QWORD PTR [rsp+0x8],rax
    af0c:	call   ad20 <talloc_total_size>
    af11:	sub    rsp,0x8
    af15:	lea    r8,[rip+0x5bda]        # 10af6 <__PRETTY_FUNCTION__.11970+0x196>
    af1c:	mov    rdi,rbp
    af1f:	mov    edx,DWORD PTR [rsp+0x1c]
    af23:	mov    esi,0x1
    af28:	push   rdx
    af29:	mov    rcx,QWORD PTR [rsp+0x18]
    af2e:	lea    rdx,[rip+0x5bc3]        # 10af8 <__PRETTY_FUNCTION__.11970+0x198>
    af35:	push   rcx
    af36:	push   rax
    af37:	mov    ecx,r14d
    af3a:	mov    r9,QWORD PTR [rsp+0x38]
    af3f:	xor    eax,eax
    af41:	call   2c20 <__fprintf_chk@plt>
    af46:	lea    edx,[r13+0x1]
    af4a:	add    rsp,0x20
    af4e:	mov    rsi,rbp
    af51:	mov    rdi,r12
    af54:	call   ae00 <talloc_report_depth>
    af59:	jmp    ae86 <talloc_report_depth+0x86>
    af5e:	xchg   ax,ax
    af60:	lea    r9,[rip+0x5b08]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    af67:	jmp    ae66 <talloc_report_depth+0x66>
    af6c:	nop    DWORD PTR [rax+0x0]
    af70:	lea    r9,[rip+0x5af8]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    af77:	jmp    aed8 <talloc_report_depth+0xd8>
    af7c:	nop    DWORD PTR [rax+0x0]

000000000000af80 <talloc_report_full>:
    af80:	push   r13
    af82:	push   r12
    af84:	push   rbp
    af85:	push   rbx
    af86:	mov    rbp,rsi
    af89:	mov    rbx,rdi
    af8c:	sub    rsp,0x8
    af90:	test   rdi,rdi
    af93:	je     b010 <talloc_report_full+0x90>
    af95:	mov    rdi,rbx
    af98:	call   ada0 <talloc_total_blocks>
    af9d:	mov    rdi,rbx
    afa0:	mov    r13,rax
    afa3:	call   ad20 <talloc_total_size>
    afa8:	mov    rdi,rbx
    afab:	mov    r12,rax
    afae:	call   a090 <talloc_chunk_from_ptr>
    afb3:	mov    rcx,QWORD PTR [rax+0x38]
    afb7:	cmp    rcx,0x1
    afbb:	je     b030 <talloc_report_full+0xb0>
    afbd:	lea    rax,[rip+0x5ab6]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    afc4:	test   rcx,rcx
    afc7:	cmove  rcx,rax
    afcb:	lea    rdx,[rip+0x5b5e]        # 10b30 <__PRETTY_FUNCTION__.11970+0x1d0>
    afd2:	mov    r9,r13
    afd5:	mov    r8,r12
    afd8:	mov    rdi,rbp
    afdb:	mov    esi,0x1
    afe0:	xor    eax,eax
    afe2:	call   2c20 <__fprintf_chk@plt>
    afe7:	mov    rdi,rbx
    afea:	mov    rsi,rbp
    afed:	mov    edx,0x1
    aff2:	call   ae00 <talloc_report_depth>
    aff7:	add    rsp,0x8
    affb:	mov    rdi,rbp
    affe:	pop    rbx
    afff:	pop    rbp
    b000:	pop    r12
    b002:	pop    r13
    b004:	jmp    2a60 <fflush@plt>
    b009:	nop    DWORD PTR [rax+0x0]
    b010:	mov    rbx,QWORD PTR [rip+0x20e351]        # 219368 <null_context>
    b017:	test   rbx,rbx
    b01a:	jne    af95 <talloc_report_full+0x15>
    b020:	add    rsp,0x8
    b024:	pop    rbx
    b025:	pop    rbp
    b026:	pop    r12
    b028:	pop    r13
    b02a:	ret    
    b02b:	nop    DWORD PTR [rax+rax*1+0x0]
    b030:	lea    rcx,[rip+0x5a38]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    b037:	jmp    afcb <talloc_report_full+0x4b>
    b039:	nop    DWORD PTR [rax+0x0]

000000000000b040 <talloc_report_null_full>:
    b040:	push   rbx
    b041:	mov    rbx,QWORD PTR [rip+0x20e320]        # 219368 <null_context>
    b048:	mov    rdi,rbx
    b04b:	call   ad20 <talloc_total_size>
    b050:	test   rax,rax
    b053:	jne    b060 <talloc_report_null_full+0x20>
    b055:	pop    rbx
    b056:	ret    
    b057:	nop    WORD PTR [rax+rax*1+0x0]
    b060:	mov    rdi,rbx
    b063:	mov    rsi,QWORD PTR [rip+0x20b256]        # 2162c0 <stderr@@GLIBC_2.2.5>
    b06a:	pop    rbx
    b06b:	jmp    af80 <talloc_report_full>

000000000000b070 <talloc_report>:
    b070:	push   r15
    b072:	push   r14
    b074:	push   r13
    b076:	push   r12
    b078:	mov    r13,rsi
    b07b:	push   rbp
    b07c:	push   rbx
    b07d:	mov    rbx,rdi
    b080:	sub    rsp,0x8
    b084:	test   rdi,rdi
    b087:	je     b180 <talloc_report+0x110>
    b08d:	mov    rdi,rbx
    b090:	call   ada0 <talloc_total_blocks>
    b095:	mov    rdi,rbx
    b098:	mov    r12,rax
    b09b:	call   ad20 <talloc_total_size>
    b0a0:	mov    rdi,rbx
    b0a3:	mov    rbp,rax
    b0a6:	call   a090 <talloc_chunk_from_ptr>
    b0ab:	mov    rcx,QWORD PTR [rax+0x38]
    b0af:	cmp    rcx,0x1
    b0b3:	je     b1a0 <talloc_report+0x130>
    b0b9:	lea    rax,[rip+0x59ba]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    b0c0:	test   rcx,rcx
    b0c3:	cmove  rcx,rax
    b0c7:	lea    rdx,[rip+0x5aa2]        # 10b70 <__PRETTY_FUNCTION__.11970+0x210>
    b0ce:	mov    r9,r12
    b0d1:	mov    r8,rbp
    b0d4:	mov    esi,0x1
    b0d9:	mov    rdi,r13
    b0dc:	xor    eax,eax
    b0de:	call   2c20 <__fprintf_chk@plt>
    b0e3:	mov    rdi,rbx
    b0e6:	call   a090 <talloc_chunk_from_ptr>
    b0eb:	mov    rbx,QWORD PTR [rax+0x18]
    b0ef:	test   rbx,rbx
    b0f2:	je     b160 <talloc_report+0xf0>
    b0f4:	lea    r14,[rip+0x597f]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    b0fb:	jmp    b12b <talloc_report+0xbb>
    b0fd:	nop    DWORD PTR [rax]
    b100:	test   rcx,rcx
    b103:	cmove  rcx,r14
    b107:	lea    rdx,[rip+0x5a9a]        # 10ba8 <__PRETTY_FUNCTION__.11970+0x248>
    b10e:	xor    eax,eax
    b110:	mov    r9,r15
    b113:	mov    r8,r12
    b116:	mov    esi,0x1
    b11b:	mov    rdi,r13
    b11e:	call   2c20 <__fprintf_chk@plt>
    b123:	mov    rbx,QWORD PTR [rbx]
    b126:	test   rbx,rbx
    b129:	je     b160 <talloc_report+0xf0>
    b12b:	lea    rbp,[rbx+0x50]
    b12f:	mov    rdi,rbp
    b132:	call   ada0 <talloc_total_blocks>
    b137:	mov    rdi,rbp
    b13a:	mov    r15,rax
    b13d:	call   ad20 <talloc_total_size>
    b142:	mov    rdi,rbp
    b145:	mov    r12,rax
    b148:	call   a090 <talloc_chunk_from_ptr>
    b14d:	mov    rcx,QWORD PTR [rax+0x38]
    b151:	cmp    rcx,0x1
    b155:	jne    b100 <talloc_report+0x90>
    b157:	lea    rcx,[rip+0x5911]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    b15e:	jmp    b107 <talloc_report+0x97>
    b160:	add    rsp,0x8
    b164:	mov    rdi,r13
    b167:	pop    rbx
    b168:	pop    rbp
    b169:	pop    r12
    b16b:	pop    r13
    b16d:	pop    r14
    b16f:	pop    r15
    b171:	jmp    2a60 <fflush@plt>
    b176:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b180:	mov    rbx,QWORD PTR [rip+0x20e1e1]        # 219368 <null_context>
    b187:	test   rbx,rbx
    b18a:	jne    b08d <talloc_report+0x1d>
    b190:	add    rsp,0x8
    b194:	pop    rbx
    b195:	pop    rbp
    b196:	pop    r12
    b198:	pop    r13
    b19a:	pop    r14
    b19c:	pop    r15
    b19e:	ret    
    b19f:	nop
    b1a0:	lea    rcx,[rip+0x58c8]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    b1a7:	jmp    b0c7 <talloc_report+0x57>
    b1ac:	nop    DWORD PTR [rax+0x0]

000000000000b1b0 <talloc_report_null>:
    b1b0:	push   rbx
    b1b1:	mov    rbx,QWORD PTR [rip+0x20e1b0]        # 219368 <null_context>
    b1b8:	mov    rdi,rbx
    b1bb:	call   ad20 <talloc_total_size>
    b1c0:	test   rax,rax
    b1c3:	jne    b1d0 <talloc_report_null+0x20>
    b1c5:	pop    rbx
    b1c6:	ret    
    b1c7:	nop    WORD PTR [rax+rax*1+0x0]
    b1d0:	mov    rdi,rbx
    b1d3:	mov    rsi,QWORD PTR [rip+0x20b0e6]        # 2162c0 <stderr@@GLIBC_2.2.5>
    b1da:	pop    rbx
    b1db:	jmp    b070 <talloc_report>

000000000000b1e0 <talloc_enable_null_tracking>:
    b1e0:	cmp    QWORD PTR [rip+0x20e180],0x0        # 219368 <null_context>
    b1e8:	je     b1f0 <talloc_enable_null_tracking+0x10>
    b1ea:	repz ret 
    b1ec:	nop    DWORD PTR [rax+0x0]
    b1f0:	jmp    a330 <talloc_enable_null_tracking.part.3>
    b1f5:	nop
    b1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b200 <talloc_enable_leak_report>:
    b200:	cmp    QWORD PTR [rip+0x20e160],0x0        # 219368 <null_context>
    b208:	je     b220 <talloc_enable_leak_report+0x20>
    b20a:	lea    rdi,[rip+0xffffffffffffff9f]        # b1b0 <talloc_report_null>
    b211:	jmp    f830 <atexit>
    b216:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b220:	sub    rsp,0x8
    b224:	call   a330 <talloc_enable_null_tracking.part.3>
    b229:	lea    rdi,[rip+0xffffffffffffff80]        # b1b0 <talloc_report_null>
    b230:	add    rsp,0x8
    b234:	jmp    f830 <atexit>
    b239:	nop    DWORD PTR [rax+0x0]

000000000000b240 <talloc_enable_leak_report_full>:
    b240:	cmp    QWORD PTR [rip+0x20e120],0x0        # 219368 <null_context>
    b248:	je     b260 <talloc_enable_leak_report_full+0x20>
    b24a:	lea    rdi,[rip+0xfffffffffffffdef]        # b040 <talloc_report_null_full>
    b251:	jmp    f830 <atexit>
    b256:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b260:	sub    rsp,0x8
    b264:	call   a330 <talloc_enable_null_tracking.part.3>
    b269:	lea    rdi,[rip+0xfffffffffffffdd0]        # b040 <talloc_report_null_full>
    b270:	add    rsp,0x8
    b274:	jmp    f830 <atexit>
    b279:	nop    DWORD PTR [rax+0x0]

000000000000b280 <_talloc_zero>:
    b280:	push   rbx
    b281:	mov    rbx,rsi
    b284:	call   a240 <talloc_named_const>
    b289:	test   rax,rax
    b28c:	mov    rcx,rax
    b28f:	je     b2a1 <_talloc_zero+0x21>
    b291:	mov    rdx,rbx
    b294:	xor    esi,esi
    b296:	mov    rdi,rax
    b299:	call   2920 <memset@plt>
    b29e:	mov    rcx,rax
    b2a1:	mov    rax,rcx
    b2a4:	pop    rbx
    b2a5:	ret    
    b2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b2b0 <_talloc_memdup>:
    b2b0:	push   rbp
    b2b1:	push   rbx
    b2b2:	mov    rbx,rdx
    b2b5:	mov    rbp,rsi
    b2b8:	mov    rdx,rcx
    b2bb:	mov    rsi,rbx
    b2be:	sub    rsp,0x8
    b2c2:	call   a240 <talloc_named_const>
    b2c7:	test   rax,rax
    b2ca:	mov    rcx,rax
    b2cd:	je     b2e0 <_talloc_memdup+0x30>
    b2cf:	mov    rdx,rbx
    b2d2:	mov    rsi,rbp
    b2d5:	mov    rdi,rax
    b2d8:	call   2a20 <memcpy@plt>
    b2dd:	mov    rcx,rax
    b2e0:	add    rsp,0x8
    b2e4:	mov    rax,rcx
    b2e7:	pop    rbx
    b2e8:	pop    rbp
    b2e9:	ret    
    b2ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b2f0 <talloc_strdup>:
    b2f0:	push   rbp
    b2f1:	push   rbx
    b2f2:	sub    rsp,0x8
    b2f6:	test   rsi,rsi
    b2f9:	je     b340 <talloc_strdup+0x50>
    b2fb:	mov    rbp,rdi
    b2fe:	mov    rdi,rsi
    b301:	mov    rbx,rsi
    b304:	call   2800 <strlen@plt>
    b309:	lea    rcx,[rip+0x5787]        # 10a97 <__PRETTY_FUNCTION__.11970+0x137>
    b310:	lea    rdx,[rax+0x1]
    b314:	mov    rsi,rbx
    b317:	mov    rdi,rbp
    b31a:	call   b2b0 <_talloc_memdup>
    b31f:	test   rax,rax
    b322:	mov    rbx,rax
    b325:	je     b333 <talloc_strdup+0x43>
    b327:	mov    rdi,rax
    b32a:	call   a090 <talloc_chunk_from_ptr>
    b32f:	mov    QWORD PTR [rax+0x38],rbx
    b333:	add    rsp,0x8
    b337:	mov    rax,rbx
    b33a:	pop    rbx
    b33b:	pop    rbp
    b33c:	ret    
    b33d:	nop    DWORD PTR [rax]
    b340:	xor    ebx,ebx
    b342:	jmp    b333 <talloc_strdup+0x43>
    b344:	xchg   ax,ax
    b346:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b350 <talloc_append_string>:
    b350:	push   r14
    b352:	push   r13
    b354:	mov    r14,rdi
    b357:	push   r12
    b359:	push   rbp
    b35a:	mov    r13,rdx
    b35d:	push   rbx
    b35e:	mov    rdi,rsi
    b361:	mov    rbx,rsi
    b364:	call   2800 <strlen@plt>
    b369:	test   r13,r13
    b36c:	je     b3b2 <talloc_append_string+0x62>
    b36e:	mov    rdi,r13
    b371:	mov    r12,rax
    b374:	call   2800 <strlen@plt>
    b379:	lea    rbp,[rax+0x1]
    b37d:	lea    edx,[r12+rbp*1]
    b381:	cmp    edx,0xfffffff
    b387:	ja     b3c0 <talloc_append_string+0x70>
    b389:	lea    rcx,[rip+0x44fb]        # f88b <_IO_stdin_used+0x2b>
    b390:	mov    rsi,rbx
    b393:	mov    rdi,r14
    b396:	call   aad0 <_talloc_realloc>
    b39b:	test   rax,rax
    b39e:	mov    rbx,rax
    b3a1:	je     b3b2 <talloc_append_string+0x62>
    b3a3:	lea    rdi,[rax+r12*1]
    b3a7:	mov    rdx,rbp
    b3aa:	mov    rsi,r13
    b3ad:	call   2a20 <memcpy@plt>
    b3b2:	mov    rax,rbx
    b3b5:	pop    rbx
    b3b6:	pop    rbp
    b3b7:	pop    r12
    b3b9:	pop    r13
    b3bb:	pop    r14
    b3bd:	ret    
    b3be:	xchg   ax,ax
    b3c0:	xor    ebx,ebx
    b3c2:	mov    rax,rbx
    b3c5:	pop    rbx
    b3c6:	pop    rbp
    b3c7:	pop    r12
    b3c9:	pop    r13
    b3cb:	pop    r14
    b3cd:	ret    
    b3ce:	xchg   ax,ax

000000000000b3d0 <talloc_strndup>:
    b3d0:	test   rdx,rdx
    b3d3:	push   r12
    b3d5:	push   rbp
    b3d6:	mov    rbp,rsi
    b3d9:	push   rbx
    b3da:	je     b438 <talloc_strndup+0x68>
    b3dc:	cmp    BYTE PTR [rsi],0x0
    b3df:	je     b448 <talloc_strndup+0x78>
    b3e1:	xor    eax,eax
    b3e3:	jmp    b3f2 <talloc_strndup+0x22>
    b3e5:	nop    DWORD PTR [rax]
    b3e8:	cmp    BYTE PTR [rbp+rbx*1+0x0],0x0
    b3ed:	mov    rax,rbx
    b3f0:	je     b3ff <talloc_strndup+0x2f>
    b3f2:	lea    rbx,[rax+0x1]
    b3f6:	lea    rsi,[rax+0x2]
    b3fa:	cmp    rdx,rbx
    b3fd:	jne    b3e8 <talloc_strndup+0x18>
    b3ff:	call   a0f0 <_talloc>
    b404:	test   rax,rax
    b407:	mov    r12,rax
    b40a:	je     b42b <talloc_strndup+0x5b>
    b40c:	mov    rdx,rbx
    b40f:	mov    rsi,rbp
    b412:	mov    rdi,rax
    b415:	call   2a20 <memcpy@plt>
    b41a:	mov    BYTE PTR [r12+rbx*1],0x0
    b41f:	mov    rdi,r12
    b422:	call   a090 <talloc_chunk_from_ptr>
    b427:	mov    QWORD PTR [rax+0x38],r12
    b42b:	mov    rax,r12
    b42e:	pop    rbx
    b42f:	pop    rbp
    b430:	pop    r12
    b432:	ret    
    b433:	nop    DWORD PTR [rax+rax*1+0x0]
    b438:	xor    ebx,ebx
    b43a:	mov    esi,0x1
    b43f:	jmp    b3ff <talloc_strndup+0x2f>
    b441:	nop    DWORD PTR [rax+0x0]
    b448:	mov    esi,0x1
    b44d:	xor    ebx,ebx
    b44f:	jmp    b3ff <talloc_strndup+0x2f>
    b451:	nop    DWORD PTR [rax+rax*1+0x0]
    b456:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b460 <talloc_vasprintf>:
    b460:	push   r14
    b462:	push   r13
    b464:	mov    r8,rsi
    b467:	push   r12
    b469:	push   rbp
    b46a:	mov    rbp,rdi
    b46d:	push   rbx
    b46e:	mov    r13,rsi
    b471:	mov    r14,rdx
    b474:	mov    ecx,0x1
    b479:	mov    esi,0x1
    b47e:	sub    rsp,0x30
    b482:	mov    rax,QWORD PTR fs:0x28
    b48b:	mov    QWORD PTR [rsp+0x28],rax
    b490:	xor    eax,eax
    b492:	lea    r12,[rsp+0x10]
    b497:	lea    rdi,[rsp+0xf]
    b49c:	movdqu xmm0,XMMWORD PTR [rdx]
    b4a0:	mov    r9,r12
    b4a3:	movups XMMWORD PTR [rsp+0x10],xmm0
    b4a8:	mov    rax,QWORD PTR [rdx+0x10]
    b4ac:	mov    edx,0x1
    b4b1:	mov    QWORD PTR [rsp+0x20],rax
    b4b6:	call   2ac0 <__vsnprintf_chk@plt>
    b4bb:	test   eax,eax
    b4bd:	js     b538 <talloc_vasprintf+0xd8>
    b4bf:	add    eax,0x1
    b4c2:	mov    rdi,rbp
    b4c5:	movsxd rbx,eax
    b4c8:	mov    rsi,rbx
    b4cb:	call   a0f0 <_talloc>
    b4d0:	test   rax,rax
    b4d3:	mov    rbp,rax
    b4d6:	je     b514 <talloc_vasprintf+0xb4>
    b4d8:	mov    rax,QWORD PTR [r14+0x10]
    b4dc:	mov    r9,r12
    b4df:	mov    r8,r13
    b4e2:	movdqu xmm0,XMMWORD PTR [r14]
    b4e7:	mov    rcx,0xffffffffffffffff
    b4ee:	mov    edx,0x1
    b4f3:	mov    rsi,rbx
    b4f6:	mov    rdi,rbp
    b4f9:	movups XMMWORD PTR [r12],xmm0
    b4fe:	mov    QWORD PTR [r12+0x10],rax
    b503:	call   2ac0 <__vsnprintf_chk@plt>
    b508:	mov    rdi,rbp
    b50b:	call   a090 <talloc_chunk_from_ptr>
    b510:	mov    QWORD PTR [rax+0x38],rbp
    b514:	mov    rcx,QWORD PTR [rsp+0x28]
    b519:	xor    rcx,QWORD PTR fs:0x28
    b522:	mov    rax,rbp
    b525:	jne    b53c <talloc_vasprintf+0xdc>
    b527:	add    rsp,0x30
    b52b:	pop    rbx
    b52c:	pop    rbp
    b52d:	pop    r12
    b52f:	pop    r13
    b531:	pop    r14
    b533:	ret    
    b534:	nop    DWORD PTR [rax+0x0]
    b538:	xor    ebp,ebp
    b53a:	jmp    b514 <talloc_vasprintf+0xb4>
    b53c:	call   2820 <__stack_chk_fail@plt>
    b541:	nop    DWORD PTR [rax+rax*1+0x0]
    b546:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b550 <talloc_set_name_v>:
    b550:	push   r13
    b552:	push   r12
    b554:	mov    r13,rdx
    b557:	push   rbp
    b558:	push   rbx
    b559:	mov    r12,rsi
    b55c:	mov    rbx,rdi
    b55f:	sub    rsp,0x8
    b563:	call   a090 <talloc_chunk_from_ptr>
    b568:	mov    rdx,r13
    b56b:	mov    rsi,r12
    b56e:	mov    rdi,rbx
    b571:	mov    rbp,rax
    b574:	call   b460 <talloc_vasprintf>
    b579:	test   rax,rax
    b57c:	mov    QWORD PTR [rbp+0x38],rax
    b580:	je     b595 <talloc_set_name_v+0x45>
    b582:	mov    rdi,rax
    b585:	call   a090 <talloc_chunk_from_ptr>
    b58a:	lea    rcx,[rip+0x5514]        # 10aa5 <__PRETTY_FUNCTION__.11970+0x145>
    b591:	mov    QWORD PTR [rax+0x38],rcx
    b595:	add    rsp,0x8
    b599:	pop    rbx
    b59a:	pop    rbp
    b59b:	pop    r12
    b59d:	pop    r13
    b59f:	ret    

000000000000b5a0 <talloc_set_name>:
    b5a0:	sub    rsp,0xd8
    b5a7:	test   al,al
    b5a9:	mov    QWORD PTR [rsp+0x30],rdx
    b5ae:	mov    QWORD PTR [rsp+0x38],rcx
    b5b3:	mov    QWORD PTR [rsp+0x40],r8
    b5b8:	mov    QWORD PTR [rsp+0x48],r9
    b5bd:	je     b5f6 <talloc_set_name+0x56>
    b5bf:	movaps XMMWORD PTR [rsp+0x50],xmm0
    b5c4:	movaps XMMWORD PTR [rsp+0x60],xmm1
    b5c9:	movaps XMMWORD PTR [rsp+0x70],xmm2
    b5ce:	movaps XMMWORD PTR [rsp+0x80],xmm3
    b5d6:	movaps XMMWORD PTR [rsp+0x90],xmm4
    b5de:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    b5e6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    b5ee:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    b5f6:	mov    rax,QWORD PTR fs:0x28
    b5ff:	mov    QWORD PTR [rsp+0x18],rax
    b604:	xor    eax,eax
    b606:	lea    rax,[rsp+0xe0]
    b60e:	mov    rdx,rsp
    b611:	mov    QWORD PTR [rsp+0x8],rax
    b616:	lea    rax,[rsp+0x20]
    b61b:	mov    DWORD PTR [rsp],0x10
    b622:	mov    DWORD PTR [rsp+0x4],0x30
    b62a:	mov    QWORD PTR [rsp+0x10],rax
    b62f:	call   b550 <talloc_set_name_v>
    b634:	mov    rax,QWORD PTR [rsp+0x18]
    b639:	xor    rax,QWORD PTR fs:0x28
    b642:	jne    b64c <talloc_set_name+0xac>
    b644:	add    rsp,0xd8
    b64b:	ret    
    b64c:	call   2820 <__stack_chk_fail@plt>
    b651:	nop    DWORD PTR [rax+rax*1+0x0]
    b656:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b660 <talloc_named>:
    b660:	push   rbp
    b661:	push   rbx
    b662:	mov    rbp,rdx
    b665:	sub    rsp,0xd8
    b66c:	test   al,al
    b66e:	mov    QWORD PTR [rsp+0x38],rcx
    b673:	mov    QWORD PTR [rsp+0x40],r8
    b678:	mov    QWORD PTR [rsp+0x48],r9
    b67d:	je     b6b6 <talloc_named+0x56>
    b67f:	movaps XMMWORD PTR [rsp+0x50],xmm0
    b684:	movaps XMMWORD PTR [rsp+0x60],xmm1
    b689:	movaps XMMWORD PTR [rsp+0x70],xmm2
    b68e:	movaps XMMWORD PTR [rsp+0x80],xmm3
    b696:	movaps XMMWORD PTR [rsp+0x90],xmm4
    b69e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    b6a6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    b6ae:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    b6b6:	mov    rax,QWORD PTR fs:0x28
    b6bf:	mov    QWORD PTR [rsp+0x18],rax
    b6c4:	xor    eax,eax
    b6c6:	call   a0f0 <_talloc>
    b6cb:	test   rax,rax
    b6ce:	mov    rbx,rax
    b6d1:	je     b707 <talloc_named+0xa7>
    b6d3:	lea    rax,[rsp+0xf0]
    b6db:	mov    rdx,rsp
    b6de:	mov    rsi,rbp
    b6e1:	mov    rdi,rbx
    b6e4:	mov    DWORD PTR [rsp],0x18
    b6eb:	mov    DWORD PTR [rsp+0x4],0x30
    b6f3:	mov    QWORD PTR [rsp+0x8],rax
    b6f8:	lea    rax,[rsp+0x20]
    b6fd:	mov    QWORD PTR [rsp+0x10],rax
    b702:	call   b550 <talloc_set_name_v>
    b707:	mov    rcx,QWORD PTR [rsp+0x18]
    b70c:	xor    rcx,QWORD PTR fs:0x28
    b715:	mov    rax,rbx
    b718:	jne    b724 <talloc_named+0xc4>
    b71a:	add    rsp,0xd8
    b721:	pop    rbx
    b722:	pop    rbp
    b723:	ret    
    b724:	call   2820 <__stack_chk_fail@plt>
    b729:	nop    DWORD PTR [rax+0x0]

000000000000b730 <talloc_init>:
    b730:	push   rbp
    b731:	push   rbx
    b732:	mov    rbp,rdi
    b735:	sub    rsp,0xd8
    b73c:	test   al,al
    b73e:	mov    QWORD PTR [rsp+0x28],rsi
    b743:	mov    QWORD PTR [rsp+0x30],rdx
    b748:	mov    QWORD PTR [rsp+0x38],rcx
    b74d:	mov    QWORD PTR [rsp+0x40],r8
    b752:	mov    QWORD PTR [rsp+0x48],r9
    b757:	je     b790 <talloc_init+0x60>
    b759:	movaps XMMWORD PTR [rsp+0x50],xmm0
    b75e:	movaps XMMWORD PTR [rsp+0x60],xmm1
    b763:	movaps XMMWORD PTR [rsp+0x70],xmm2
    b768:	movaps XMMWORD PTR [rsp+0x80],xmm3
    b770:	movaps XMMWORD PTR [rsp+0x90],xmm4
    b778:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    b780:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    b788:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    b790:	mov    rax,QWORD PTR fs:0x28
    b799:	mov    QWORD PTR [rsp+0x18],rax
    b79e:	xor    eax,eax
    b7a0:	cmp    QWORD PTR [rip+0x20dbc0],0x0        # 219368 <null_context>
    b7a8:	je     b810 <talloc_init+0xe0>
    b7aa:	xor    esi,esi
    b7ac:	xor    edi,edi
    b7ae:	call   a0f0 <_talloc>
    b7b3:	test   rax,rax
    b7b6:	mov    rbx,rax
    b7b9:	je     b7ef <talloc_init+0xbf>
    b7bb:	lea    rax,[rsp+0xf0]
    b7c3:	mov    rdx,rsp
    b7c6:	mov    rsi,rbp
    b7c9:	mov    rdi,rbx
    b7cc:	mov    DWORD PTR [rsp],0x8
    b7d3:	mov    DWORD PTR [rsp+0x4],0x30
    b7db:	mov    QWORD PTR [rsp+0x8],rax
    b7e0:	lea    rax,[rsp+0x20]
    b7e5:	mov    QWORD PTR [rsp+0x10],rax
    b7ea:	call   b550 <talloc_set_name_v>
    b7ef:	mov    rcx,QWORD PTR [rsp+0x18]
    b7f4:	xor    rcx,QWORD PTR fs:0x28
    b7fd:	mov    rax,rbx
    b800:	jne    b817 <talloc_init+0xe7>
    b802:	add    rsp,0xd8
    b809:	pop    rbx
    b80a:	pop    rbp
    b80b:	ret    
    b80c:	nop    DWORD PTR [rax+0x0]
    b810:	call   a330 <talloc_enable_null_tracking.part.3>
    b815:	jmp    b7aa <talloc_init+0x7a>
    b817:	call   2820 <__stack_chk_fail@plt>
    b81c:	nop    DWORD PTR [rax+0x0]

000000000000b820 <talloc_vasprintf_append>:
    b820:	push   r15
    b822:	push   r14
    b824:	mov    r14,rdx
    b827:	push   r13
    b829:	push   r12
    b82b:	mov    r13,rsi
    b82e:	push   rbp
    b82f:	push   rbx
    b830:	sub    rsp,0x28
    b834:	mov    rax,QWORD PTR fs:0x28
    b83d:	mov    QWORD PTR [rsp+0x18],rax
    b842:	xor    eax,eax
    b844:	test   rdi,rdi
    b847:	je     b928 <talloc_vasprintf_append+0x108>
    b84d:	mov    rbx,rdi
    b850:	mov    r15,rsp
    b853:	call   a090 <talloc_chunk_from_ptr>
    b858:	mov    rdx,QWORD PTR [r14+0x10]
    b85c:	xor    esi,esi
    b85e:	xor    edi,edi
    b860:	movdqu xmm0,XMMWORD PTR [r14]
    b865:	mov    r9,r15
    b868:	mov    r8,r13
    b86b:	mov    rcx,0xffffffffffffffff
    b872:	mov    QWORD PTR [rsp+0x10],rdx
    b877:	mov    edx,0x1
    b87c:	movups XMMWORD PTR [rsp],xmm0
    b880:	mov    rbp,QWORD PTR [rax+0x40]
    b884:	call   2ac0 <__vsnprintf_chk@plt>
    b889:	test   eax,eax
    b88b:	mov    r12d,eax
    b88e:	jle    b8ff <talloc_vasprintf_append+0xdf>
    b890:	sub    ebp,0x1
    b893:	lea    edx,[rbp+rax*1+0x1]
    b897:	cmp    edx,0xfffffff
    b89d:	ja     b938 <talloc_vasprintf_append+0x118>
    b8a3:	lea    rcx,[rip+0x3fe1]        # f88b <_IO_stdin_used+0x2b>
    b8aa:	mov    rsi,rbx
    b8ad:	xor    edi,edi
    b8af:	call   aad0 <_talloc_realloc>
    b8b4:	test   rax,rax
    b8b7:	mov    rbx,rax
    b8ba:	je     b8ff <talloc_vasprintf_append+0xdf>
    b8bc:	mov    rax,QWORD PTR [r14+0x10]
    b8c0:	lea    esi,[r12+0x1]
    b8c5:	movsxd rbp,ebp
    b8c8:	movdqu xmm0,XMMWORD PTR [r14]
    b8cd:	lea    rdi,[rbx+rbp*1]
    b8d1:	movsxd rsi,esi
    b8d4:	mov    r9,r15
    b8d7:	mov    r8,r13
    b8da:	mov    rcx,0xffffffffffffffff
    b8e1:	mov    edx,0x1
    b8e6:	mov    QWORD PTR [r15+0x10],rax
    b8ea:	movups XMMWORD PTR [r15],xmm0
    b8ee:	call   2ac0 <__vsnprintf_chk@plt>
    b8f3:	mov    rdi,rbx
    b8f6:	call   a090 <talloc_chunk_from_ptr>
    b8fb:	mov    QWORD PTR [rax+0x38],rbx
    b8ff:	mov    rcx,QWORD PTR [rsp+0x18]
    b904:	xor    rcx,QWORD PTR fs:0x28
    b90d:	mov    rax,rbx
    b910:	jne    b93c <talloc_vasprintf_append+0x11c>
    b912:	add    rsp,0x28
    b916:	pop    rbx
    b917:	pop    rbp
    b918:	pop    r12
    b91a:	pop    r13
    b91c:	pop    r14
    b91e:	pop    r15
    b920:	ret    
    b921:	nop    DWORD PTR [rax+0x0]
    b928:	xor    edi,edi
    b92a:	call   b460 <talloc_vasprintf>
    b92f:	mov    rbx,rax
    b932:	jmp    b8ff <talloc_vasprintf_append+0xdf>
    b934:	nop    DWORD PTR [rax+0x0]
    b938:	xor    ebx,ebx
    b93a:	jmp    b8ff <talloc_vasprintf_append+0xdf>
    b93c:	call   2820 <__stack_chk_fail@plt>
    b941:	nop    DWORD PTR [rax+rax*1+0x0]
    b946:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000b950 <talloc_asprintf>:
    b950:	sub    rsp,0xd8
    b957:	test   al,al
    b959:	mov    QWORD PTR [rsp+0x30],rdx
    b95e:	mov    QWORD PTR [rsp+0x38],rcx
    b963:	mov    QWORD PTR [rsp+0x40],r8
    b968:	mov    QWORD PTR [rsp+0x48],r9
    b96d:	je     b9a6 <talloc_asprintf+0x56>
    b96f:	movaps XMMWORD PTR [rsp+0x50],xmm0
    b974:	movaps XMMWORD PTR [rsp+0x60],xmm1
    b979:	movaps XMMWORD PTR [rsp+0x70],xmm2
    b97e:	movaps XMMWORD PTR [rsp+0x80],xmm3
    b986:	movaps XMMWORD PTR [rsp+0x90],xmm4
    b98e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    b996:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    b99e:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    b9a6:	mov    rax,QWORD PTR fs:0x28
    b9af:	mov    QWORD PTR [rsp+0x18],rax
    b9b4:	xor    eax,eax
    b9b6:	lea    rax,[rsp+0xe0]
    b9be:	mov    rdx,rsp
    b9c1:	mov    QWORD PTR [rsp+0x8],rax
    b9c6:	lea    rax,[rsp+0x20]
    b9cb:	mov    DWORD PTR [rsp],0x10
    b9d2:	mov    DWORD PTR [rsp+0x4],0x30
    b9da:	mov    QWORD PTR [rsp+0x10],rax
    b9df:	call   b460 <talloc_vasprintf>
    b9e4:	mov    rcx,QWORD PTR [rsp+0x18]
    b9e9:	xor    rcx,QWORD PTR fs:0x28
    b9f2:	jne    b9fc <talloc_asprintf+0xac>
    b9f4:	add    rsp,0xd8
    b9fb:	ret    
    b9fc:	call   2820 <__stack_chk_fail@plt>
    ba01:	nop    DWORD PTR [rax+rax*1+0x0]
    ba06:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ba10 <talloc_asprintf_append>:
    ba10:	sub    rsp,0xd8
    ba17:	test   al,al
    ba19:	mov    QWORD PTR [rsp+0x30],rdx
    ba1e:	mov    QWORD PTR [rsp+0x38],rcx
    ba23:	mov    QWORD PTR [rsp+0x40],r8
    ba28:	mov    QWORD PTR [rsp+0x48],r9
    ba2d:	je     ba66 <talloc_asprintf_append+0x56>
    ba2f:	movaps XMMWORD PTR [rsp+0x50],xmm0
    ba34:	movaps XMMWORD PTR [rsp+0x60],xmm1
    ba39:	movaps XMMWORD PTR [rsp+0x70],xmm2
    ba3e:	movaps XMMWORD PTR [rsp+0x80],xmm3
    ba46:	movaps XMMWORD PTR [rsp+0x90],xmm4
    ba4e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    ba56:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    ba5e:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    ba66:	mov    rax,QWORD PTR fs:0x28
    ba6f:	mov    QWORD PTR [rsp+0x18],rax
    ba74:	xor    eax,eax
    ba76:	lea    rax,[rsp+0xe0]
    ba7e:	mov    rdx,rsp
    ba81:	mov    QWORD PTR [rsp+0x8],rax
    ba86:	lea    rax,[rsp+0x20]
    ba8b:	mov    DWORD PTR [rsp],0x10
    ba92:	mov    DWORD PTR [rsp+0x4],0x30
    ba9a:	mov    QWORD PTR [rsp+0x10],rax
    ba9f:	call   b820 <talloc_vasprintf_append>
    baa4:	mov    rcx,QWORD PTR [rsp+0x18]
    baa9:	xor    rcx,QWORD PTR fs:0x28
    bab2:	jne    babc <talloc_asprintf_append+0xac>
    bab4:	add    rsp,0xd8
    babb:	ret    
    babc:	call   2820 <__stack_chk_fail@plt>
    bac1:	nop    DWORD PTR [rax+rax*1+0x0]
    bac6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bad0 <_talloc_array>:
    bad0:	mov    r8d,edx
    bad3:	mov    eax,0x10000000
    bad8:	xor    edx,edx
    bada:	div    rsi
    badd:	cmp    r8,rax
    bae0:	jae    baf0 <_talloc_array+0x20>
    bae2:	imul   rsi,r8
    bae6:	mov    rdx,rcx
    bae9:	jmp    a240 <talloc_named_const>
    baee:	xchg   ax,ax
    baf0:	xor    eax,eax
    baf2:	ret    
    baf3:	nop    DWORD PTR [rax]
    baf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bb00 <_talloc_zero_array>:
    bb00:	mov    r8d,edx
    bb03:	mov    eax,0x10000000
    bb08:	xor    edx,edx
    bb0a:	div    rsi
    bb0d:	cmp    r8,rax
    bb10:	jae    bb20 <_talloc_zero_array+0x20>
    bb12:	imul   rsi,r8
    bb16:	mov    rdx,rcx
    bb19:	jmp    b280 <_talloc_zero>
    bb1e:	xchg   ax,ax
    bb20:	xor    eax,eax
    bb22:	ret    
    bb23:	nop    DWORD PTR [rax]
    bb26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bb30 <_talloc_realloc_array>:
    bb30:	mov    r10,rdx
    bb33:	mov    eax,0x10000000
    bb38:	xor    edx,edx
    bb3a:	div    r10
    bb3d:	mov    r9d,ecx
    bb40:	cmp    r9,rax
    bb43:	jae    bb58 <_talloc_realloc_array+0x28>
    bb45:	mov    rdx,r9
    bb48:	mov    rcx,r8
    bb4b:	imul   rdx,r10
    bb4f:	jmp    aad0 <_talloc_realloc>
    bb54:	nop    DWORD PTR [rax+0x0]
    bb58:	xor    eax,eax
    bb5a:	ret    
    bb5b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bb60 <talloc_realloc_fn>:
    bb60:	xor    ecx,ecx
    bb62:	jmp    aad0 <_talloc_realloc>
    bb67:	nop    WORD PTR [rax+rax*1+0x0]

000000000000bb70 <talloc_autofree_context>:
    bb70:	push   rbx
    bb71:	mov    rbx,QWORD PTR [rip+0x20d7e8]        # 219360 <cleanup_context>
    bb78:	test   rbx,rbx
    bb7b:	je     bb88 <talloc_autofree_context+0x18>
    bb7d:	mov    rax,rbx
    bb80:	pop    rbx
    bb81:	ret    
    bb82:	nop    WORD PTR [rax+rax*1+0x0]
    bb88:	lea    rdx,[rip+0x4f1c]        # 10aab <__PRETTY_FUNCTION__.11970+0x14b>
    bb8f:	xor    esi,esi
    bb91:	xor    edi,edi
    bb93:	call   a240 <talloc_named_const>
    bb98:	lea    rdi,[rip+0xfffffffffffff031]        # abd0 <talloc_autofree>
    bb9f:	mov    rbx,rax
    bba2:	mov    QWORD PTR [rip+0x20d7b7],rax        # 219360 <cleanup_context>
    bba9:	call   f830 <atexit>
    bbae:	mov    rax,rbx
    bbb1:	pop    rbx
    bbb2:	ret    
    bbb3:	nop    DWORD PTR [rax]
    bbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bbc0 <talloc_get_size>:
    bbc0:	test   rdi,rdi
    bbc3:	je     bbe0 <talloc_get_size+0x20>
    bbc5:	sub    rsp,0x8
    bbc9:	call   a090 <talloc_chunk_from_ptr>
    bbce:	mov    rax,QWORD PTR [rax+0x40]
    bbd2:	add    rsp,0x8
    bbd6:	ret    
    bbd7:	nop    WORD PTR [rax+rax*1+0x0]
    bbe0:	xor    eax,eax
    bbe2:	ret    
    bbe3:	nop    DWORD PTR [rax]
    bbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000bbf0 <talloc_find_parent_byname>:
    bbf0:	test   rdi,rdi
    bbf3:	je     bc57 <talloc_find_parent_byname+0x67>
    bbf5:	push   rbp
    bbf6:	push   rbx
    bbf7:	mov    rbp,rsi
    bbfa:	sub    rsp,0x8
    bbfe:	call   a090 <talloc_chunk_from_ptr>
    bc03:	test   rax,rax
    bc06:	mov    rbx,rax
    bc09:	je     bc5a <talloc_find_parent_byname+0x6a>
    bc0b:	nop    DWORD PTR [rax+rax*1+0x0]
    bc10:	mov    rdi,QWORD PTR [rbx+0x38]
    bc14:	test   rdi,rdi
    bc17:	je     bc33 <talloc_find_parent_byname+0x43>
    bc19:	mov    rsi,rbp
    bc1c:	call   29c0 <strcmp@plt>
    bc21:	test   eax,eax
    bc23:	jne    bc33 <talloc_find_parent_byname+0x43>
    bc25:	jmp    bc4c <talloc_find_parent_byname+0x5c>
    bc27:	nop    WORD PTR [rax+rax*1+0x0]
    bc30:	mov    rbx,rax
    bc33:	mov    rax,QWORD PTR [rbx+0x8]
    bc37:	test   rax,rax
    bc3a:	jne    bc30 <talloc_find_parent_byname+0x40>
    bc3c:	mov    rbx,QWORD PTR [rbx+0x10]
    bc40:	test   rbx,rbx
    bc43:	jne    bc10 <talloc_find_parent_byname+0x20>
    bc45:	add    rsp,0x8
    bc49:	pop    rbx
    bc4a:	pop    rbp
    bc4b:	ret    
    bc4c:	add    rsp,0x8
    bc50:	lea    rax,[rbx+0x50]
    bc54:	pop    rbx
    bc55:	pop    rbp
    bc56:	ret    
    bc57:	xor    eax,eax
    bc59:	ret    
    bc5a:	xor    eax,eax
    bc5c:	jmp    bc45 <talloc_find_parent_byname+0x55>
    bc5e:	xchg   ax,ax

000000000000bc60 <talloc_show_parents>:
    bc60:	test   rdi,rdi
    bc63:	je     bd20 <talloc_show_parents+0xc0>
    bc69:	push   r12
    bc6b:	push   rbp
    bc6c:	mov    rbp,rsi
    bc6f:	push   rbx
    bc70:	call   a090 <talloc_chunk_from_ptr>
    bc75:	mov    rcx,QWORD PTR [rax+0x38]
    bc79:	mov    rbx,rax
    bc7c:	cmp    rcx,0x1
    bc80:	je     bd39 <talloc_show_parents+0xd9>
    bc86:	lea    rax,[rip+0x4ded]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    bc8d:	test   rcx,rcx
    bc90:	cmove  rcx,rax
    bc94:	lea    rdx,[rip+0x4e3d]        # 10ad8 <__PRETTY_FUNCTION__.11970+0x178>
    bc9b:	lea    r12,[rip+0x4dd8]        # 10a7a <__PRETTY_FUNCTION__.11970+0x11a>
    bca2:	mov    esi,0x1
    bca7:	mov    rdi,rbp
    bcaa:	xor    eax,eax
    bcac:	call   2c20 <__fprintf_chk@plt>
    bcb1:	nop    DWORD PTR [rax+0x0]
    bcb8:	lea    rdi,[rbx+0x50]
    bcbc:	call   a090 <talloc_chunk_from_ptr>
    bcc1:	mov    rcx,QWORD PTR [rax+0x38]
    bcc5:	cmp    rcx,0x1
    bcc9:	je     bd10 <talloc_show_parents+0xb0>
    bccb:	test   rcx,rcx
    bcce:	cmove  rcx,r12
    bcd2:	lea    rdx,[rip+0x4e17]        # 10af0 <__PRETTY_FUNCTION__.11970+0x190>
    bcd9:	mov    esi,0x1
    bcde:	mov    rdi,rbp
    bce1:	xor    eax,eax
    bce3:	call   2c20 <__fprintf_chk@plt>
    bce8:	jmp    bcf3 <talloc_show_parents+0x93>
    bcea:	nop    WORD PTR [rax+rax*1+0x0]
    bcf0:	mov    rbx,rax
    bcf3:	mov    rax,QWORD PTR [rbx+0x8]
    bcf7:	test   rax,rax
    bcfa:	jne    bcf0 <talloc_show_parents+0x90>
    bcfc:	mov    rbx,QWORD PTR [rbx+0x10]
    bd00:	test   rbx,rbx
    bd03:	jne    bcb8 <talloc_show_parents+0x58>
    bd05:	pop    rbx
    bd06:	pop    rbp
    bd07:	pop    r12
    bd09:	ret    
    bd0a:	nop    WORD PTR [rax+rax*1+0x0]
    bd10:	lea    rcx,[rip+0x4d58]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    bd17:	jmp    bcd2 <talloc_show_parents+0x72>
    bd19:	nop    DWORD PTR [rax+0x0]
    bd20:	lea    rdi,[rip+0x4d95]        # 10abc <__PRETTY_FUNCTION__.11970+0x15c>
    bd27:	mov    rcx,rsi
    bd2a:	mov    edx,0x1b
    bd2f:	mov    esi,0x1
    bd34:	jmp    2c10 <fwrite@plt>
    bd39:	lea    rcx,[rip+0x4d2f]        # 10a6f <__PRETTY_FUNCTION__.11970+0x10f>
    bd40:	jmp    bc94 <talloc_show_parents+0x34>
    bd45:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bd4f:	nop

000000000000bd50 <default_xprintf>:
    bd50:	sub    rsp,0xd8
    bd57:	test   al,al
    bd59:	mov    QWORD PTR [rsp+0x28],rsi
    bd5e:	mov    QWORD PTR [rsp+0x30],rdx
    bd63:	mov    QWORD PTR [rsp+0x38],rcx
    bd68:	mov    QWORD PTR [rsp+0x40],r8
    bd6d:	mov    QWORD PTR [rsp+0x48],r9
    bd72:	je     bdab <default_xprintf+0x5b>
    bd74:	movaps XMMWORD PTR [rsp+0x50],xmm0
    bd79:	movaps XMMWORD PTR [rsp+0x60],xmm1
    bd7e:	movaps XMMWORD PTR [rsp+0x70],xmm2
    bd83:	movaps XMMWORD PTR [rsp+0x80],xmm3
    bd8b:	movaps XMMWORD PTR [rsp+0x90],xmm4
    bd93:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    bd9b:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    bda3:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    bdab:	mov    rax,QWORD PTR fs:0x28
    bdb4:	mov    QWORD PTR [rsp+0x18],rax
    bdb9:	xor    eax,eax
    bdbb:	lea    rax,[rsp+0xe0]
    bdc3:	mov    rdx,rdi
    bdc6:	mov    rcx,rsp
    bdc9:	mov    esi,0x1
    bdce:	mov    rdi,QWORD PTR [rip+0x20a4eb]        # 2162c0 <stderr@@GLIBC_2.2.5>
    bdd5:	mov    QWORD PTR [rsp+0x8],rax
    bdda:	lea    rax,[rsp+0x20]
    bddf:	mov    DWORD PTR [rsp],0x8
    bde6:	mov    DWORD PTR [rsp+0x4],0x30
    bdee:	mov    QWORD PTR [rsp+0x10],rax
    bdf3:	call   2720 <__vfprintf_chk@plt>
    bdf8:	mov    rdi,QWORD PTR [rip+0x20a4c1]        # 2162c0 <stderr@@GLIBC_2.2.5>
    bdff:	call   2a60 <fflush@plt>
    be04:	mov    rax,QWORD PTR [rsp+0x18]
    be09:	xor    rax,QWORD PTR fs:0x28
    be12:	jne    be1c <default_xprintf+0xcc>
    be14:	add    rsp,0xd8
    be1b:	ret    
    be1c:	call   2820 <__stack_chk_fail@plt>
    be21:	nop    DWORD PTR [rax+rax*1+0x0]
    be26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000be30 <barf>:
    be30:	push   rbx
    be31:	mov    rbx,rdi
    be34:	sub    rsp,0xe0
    be3b:	test   al,al
    be3d:	mov    QWORD PTR [rsp+0x38],rsi
    be42:	mov    QWORD PTR [rsp+0x40],rdx
    be47:	mov    QWORD PTR [rsp+0x48],rcx
    be4c:	mov    QWORD PTR [rsp+0x50],r8
    be51:	mov    QWORD PTR [rsp+0x58],r9
    be56:	je     be92 <barf+0x62>
    be58:	movaps XMMWORD PTR [rsp+0x60],xmm0
    be5d:	movaps XMMWORD PTR [rsp+0x70],xmm1
    be62:	movaps XMMWORD PTR [rsp+0x80],xmm2
    be6a:	movaps XMMWORD PTR [rsp+0x90],xmm3
    be72:	movaps XMMWORD PTR [rsp+0xa0],xmm4
    be7a:	movaps XMMWORD PTR [rsp+0xb0],xmm5
    be82:	movaps XMMWORD PTR [rsp+0xc0],xmm6
    be8a:	movaps XMMWORD PTR [rsp+0xd0],xmm7
    be92:	mov    rax,QWORD PTR fs:0x28
    be9b:	mov    QWORD PTR [rsp+0x28],rax
    bea0:	xor    eax,eax
    bea2:	lea    rdi,[rip+0x4d2a]        # 10bd3 <__PRETTY_FUNCTION__.11970+0x273>
    bea9:	call   QWORD PTR [rip+0x20a3d1]        # 216280 <xprintf>
    beaf:	lea    rax,[rsp+0xf0]
    beb7:	lea    rcx,[rsp+0x10]
    bebc:	lea    rdi,[rsp+0x8]
    bec1:	mov    rdx,rbx
    bec4:	mov    esi,0x1
    bec9:	mov    DWORD PTR [rsp+0x10],0x8
    bed1:	mov    QWORD PTR [rsp+0x18],rax
    bed6:	lea    rax,[rsp+0x30]
    bedb:	mov    DWORD PTR [rsp+0x14],0x30
    bee3:	mov    QWORD PTR [rsp+0x20],rax
    bee8:	call   2a70 <__vasprintf_chk@plt>
    beed:	test   eax,eax
    beef:	js     bf0f <barf+0xdf>
    bef1:	lea    rdi,[rip+0x39dc]        # f8d4 <_IO_stdin_used+0x74>
    bef8:	mov    rsi,QWORD PTR [rsp+0x8]
    befd:	xor    eax,eax
    beff:	call   QWORD PTR [rip+0x20a37b]        # 216280 <xprintf>
    bf05:	mov    rdi,QWORD PTR [rsp+0x8]
    bf0a:	call   2700 <free@plt>
    bf0f:	mov    edi,0x1
    bf14:	call   2c00 <exit@plt>
    bf19:	nop    DWORD PTR [rax+0x0]

000000000000bf20 <barf_perror>:
    bf20:	push   rbp
    bf21:	push   rbx
    bf22:	mov    rbx,rdi
    bf25:	sub    rsp,0xe8
    bf2c:	test   al,al
    bf2e:	mov    QWORD PTR [rsp+0x38],rsi
    bf33:	mov    QWORD PTR [rsp+0x40],rdx
    bf38:	mov    QWORD PTR [rsp+0x48],rcx
    bf3d:	mov    QWORD PTR [rsp+0x50],r8
    bf42:	mov    QWORD PTR [rsp+0x58],r9
    bf47:	je     bf83 <barf_perror+0x63>
    bf49:	movaps XMMWORD PTR [rsp+0x60],xmm0
    bf4e:	movaps XMMWORD PTR [rsp+0x70],xmm1
    bf53:	movaps XMMWORD PTR [rsp+0x80],xmm2
    bf5b:	movaps XMMWORD PTR [rsp+0x90],xmm3
    bf63:	movaps XMMWORD PTR [rsp+0xa0],xmm4
    bf6b:	movaps XMMWORD PTR [rsp+0xb0],xmm5
    bf73:	movaps XMMWORD PTR [rsp+0xc0],xmm6
    bf7b:	movaps XMMWORD PTR [rsp+0xd0],xmm7
    bf83:	mov    rax,QWORD PTR fs:0x28
    bf8c:	mov    QWORD PTR [rsp+0x28],rax
    bf91:	xor    eax,eax
    bf93:	call   2750 <__errno_location@plt>
    bf98:	lea    rdi,[rip+0x4c34]        # 10bd3 <__PRETTY_FUNCTION__.11970+0x273>
    bf9f:	mov    ebp,DWORD PTR [rax]
    bfa1:	xor    eax,eax
    bfa3:	call   QWORD PTR [rip+0x20a2d7]        # 216280 <xprintf>
    bfa9:	lea    rax,[rsp+0x100]
    bfb1:	lea    rcx,[rsp+0x10]
    bfb6:	lea    rdi,[rsp+0x8]
    bfbb:	mov    rdx,rbx
    bfbe:	mov    esi,0x1
    bfc3:	mov    DWORD PTR [rsp+0x10],0x8
    bfcb:	mov    QWORD PTR [rsp+0x18],rax
    bfd0:	lea    rax,[rsp+0x30]
    bfd5:	mov    DWORD PTR [rsp+0x14],0x30
    bfdd:	mov    QWORD PTR [rsp+0x20],rax
    bfe2:	call   2a70 <__vasprintf_chk@plt>
    bfe7:	test   eax,eax
    bfe9:	js     c016 <barf_perror+0xf6>
    bfeb:	mov    edi,ebp
    bfed:	mov    rbx,QWORD PTR [rip+0x20a28c]        # 216280 <xprintf>
    bff4:	call   2c30 <strerror@plt>
    bff9:	lea    rdi,[rip+0x4bdb]        # 10bdb <__PRETTY_FUNCTION__.11970+0x27b>
    c000:	mov    rdx,rax
    c003:	mov    rsi,QWORD PTR [rsp+0x8]
    c008:	xor    eax,eax
    c00a:	call   rbx
    c00c:	mov    rdi,QWORD PTR [rsp+0x8]
    c011:	call   2700 <free@plt>
    c016:	mov    edi,0x1
    c01b:	call   2c00 <exit@plt>

000000000000c020 <default_tdb_hash>:
    c020:	mov    r9,QWORD PTR [rdi+0x8]
    c024:	imul   r8d,r9d,0x238f13af
    c02b:	test   r9,r9
    c02e:	je     c068 <default_tdb_hash+0x48>
    c030:	mov    r11,QWORD PTR [rdi]
    c033:	xor    esi,esi
    c035:	xor    eax,eax
    c037:	mov    r10d,0xaaaaaaab
    c03d:	nop    DWORD PTR [rax]
    c040:	lea    ecx,[rsi+rsi*4]
    c043:	movsx  edi,BYTE PTR [r11+rax*1]
    c048:	mov    eax,ecx
    c04a:	mul    r10d
    c04d:	shr    edx,0x4
    c050:	lea    eax,[rdx+rdx*2]
    c053:	shl    eax,0x3
    c056:	sub    ecx,eax
    c058:	lea    eax,[rsi+0x1]
    c05b:	shl    edi,cl
    c05d:	add    r8d,edi
    c060:	cmp    r9,rax
    c063:	mov    rsi,rax
    c066:	ja     c040 <default_tdb_hash+0x20>
    c068:	imul   eax,r8d,0x41c64e6b
    c06f:	add    eax,0x3039
    c074:	ret    
    c075:	nop
    c076:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c080 <null_log_fn>:
    c080:	repz ret 
    c082:	nop    DWORD PTR [rax+0x0]
    c086:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c090 <tdb_new_database>:
    c090:	push   r14
    c092:	lea    r14d,[rsi*4+0xac]
    c09a:	push   r13
    c09c:	lea    rdx,[rip+0x4b40]        # 10be3 <__PRETTY_FUNCTION__.11970+0x283>
    c0a3:	push   r12
    c0a5:	push   rbp
    c0a6:	movsxd r12,r14d
    c0a9:	push   rbx
    c0aa:	mov    r13d,esi
    c0ad:	mov    rsi,r12
    c0b0:	mov    rbp,rdi
    c0b3:	call   b280 <_talloc_zero>
    c0b8:	test   rax,rax
    c0bb:	je     c2a8 <tdb_new_database+0x218>
    c0c1:	mov    DWORD PTR [rax+0x20],0x2601196e
    c0c8:	mov    DWORD PTR [rax+0x24],r13d
    c0cc:	mov    rbx,rax
    c0cf:	mov    edx,DWORD PTR [rbp+0xd4]
    c0d5:	test   dl,0x2
    c0d8:	je     c190 <tdb_new_database+0x100>
    c0de:	mov    DWORD PTR [rbp+0x14],r14d
    c0e2:	mov    QWORD PTR [rbp+0x8],rax
    c0e6:	and    edx,0x10
    c0e9:	movdqu xmm0,XMMWORD PTR [rax]
    c0ed:	movups XMMWORD PTR [rbp+0x2c],xmm0
    c0f1:	movdqu xmm0,XMMWORD PTR [rax+0x10]
    c0f6:	movups XMMWORD PTR [rbp+0x3c],xmm0
    c0fa:	movdqu xmm0,XMMWORD PTR [rax+0x20]
    c0ff:	movups XMMWORD PTR [rbp+0x4c],xmm0
    c103:	movdqu xmm0,XMMWORD PTR [rax+0x30]
    c108:	movups XMMWORD PTR [rbp+0x5c],xmm0
    c10c:	movdqu xmm0,XMMWORD PTR [rax+0x40]
    c111:	movups XMMWORD PTR [rbp+0x6c],xmm0
    c115:	movdqu xmm0,XMMWORD PTR [rax+0x50]
    c11a:	movups XMMWORD PTR [rbp+0x7c],xmm0
    c11e:	movdqu xmm0,XMMWORD PTR [rax+0x60]
    c123:	movups XMMWORD PTR [rbp+0x8c],xmm0
    c12a:	movdqu xmm0,XMMWORD PTR [rax+0x70]
    c12f:	movups XMMWORD PTR [rbp+0x9c],xmm0
    c136:	movdqu xmm0,XMMWORD PTR [rax+0x80]
    c13e:	movups XMMWORD PTR [rbp+0xac],xmm0
    c145:	movdqu xmm0,XMMWORD PTR [rax+0x90]
    c14d:	movups XMMWORD PTR [rbp+0xbc],xmm0
    c154:	mov    rcx,QWORD PTR [rax+0xa0]
    c15b:	mov    QWORD PTR [rbp+0xcc],rcx
    c162:	je     c180 <tdb_new_database+0xf0>
    c164:	lea    rcx,[rax+0xa8]
    c16b:	nop    DWORD PTR [rax+rax*1+0x0]
    c170:	mov    edx,DWORD PTR [rax]
    c172:	add    rax,0x4
    c176:	bswap  edx
    c178:	mov    DWORD PTR [rax-0x4],edx
    c17b:	cmp    rax,rcx
    c17e:	jne    c170 <tdb_new_database+0xe0>
    c180:	xor    ebp,ebp
    c182:	pop    rbx
    c183:	mov    eax,ebp
    c185:	pop    rbp
    c186:	pop    r12
    c188:	pop    r13
    c18a:	pop    r14
    c18c:	ret    
    c18d:	nop    DWORD PTR [rax]
    c190:	mov    edi,DWORD PTR [rbp+0x10]
    c193:	xor    edx,edx
    c195:	xor    esi,esi
    c197:	call   28c0 <lseek@plt>
    c19c:	cmp    rax,0xffffffffffffffff
    c1a0:	je     c290 <tdb_new_database+0x200>
    c1a6:	mov    edi,DWORD PTR [rbp+0x10]
    c1a9:	xor    esi,esi
    c1ab:	call   28a0 <ftruncate@plt>
    c1b0:	cmp    eax,0xffffffff
    c1b3:	je     c290 <tdb_new_database+0x200>
    c1b9:	test   BYTE PTR [rbp+0xd4],0x10
    c1c0:	je     c1e0 <tdb_new_database+0x150>
    c1c2:	lea    rcx,[rbx+0xa8]
    c1c9:	mov    rax,rbx
    c1cc:	nop    DWORD PTR [rax+0x0]
    c1d0:	mov    edx,DWORD PTR [rax]
    c1d2:	add    rax,0x4
    c1d6:	bswap  edx
    c1d8:	mov    DWORD PTR [rax-0x4],edx
    c1db:	cmp    rax,rcx
    c1de:	jne    c1d0 <tdb_new_database+0x140>
    c1e0:	movdqu xmm0,XMMWORD PTR [rbx]
    c1e4:	movabs rax,0x656c696620424454
    c1ee:	mov    rsi,rbx
    c1f1:	movups XMMWORD PTR [rbp+0x2c],xmm0
    c1f5:	movdqu xmm0,XMMWORD PTR [rbx+0x10]
    c1fa:	movups XMMWORD PTR [rbp+0x3c],xmm0
    c1fe:	movdqu xmm0,XMMWORD PTR [rbx+0x20]
    c203:	movups XMMWORD PTR [rbp+0x4c],xmm0
    c207:	movdqu xmm0,XMMWORD PTR [rbx+0x30]
    c20c:	movups XMMWORD PTR [rbp+0x5c],xmm0
    c210:	movdqu xmm0,XMMWORD PTR [rbx+0x40]
    c215:	movups XMMWORD PTR [rbp+0x6c],xmm0
    c219:	movdqu xmm0,XMMWORD PTR [rbx+0x50]
    c21e:	movups XMMWORD PTR [rbp+0x7c],xmm0
    c222:	movdqu xmm0,XMMWORD PTR [rbx+0x60]
    c227:	movups XMMWORD PTR [rbp+0x8c],xmm0
    c22e:	movdqu xmm0,XMMWORD PTR [rbx+0x70]
    c233:	movups XMMWORD PTR [rbp+0x9c],xmm0
    c23a:	movdqu xmm0,XMMWORD PTR [rbx+0x80]
    c242:	movups XMMWORD PTR [rbp+0xac],xmm0
    c249:	movdqu xmm0,XMMWORD PTR [rbx+0x90]
    c251:	movups XMMWORD PTR [rbp+0xbc],xmm0
    c258:	mov    rdx,QWORD PTR [rbx+0xa0]
    c25f:	mov    QWORD PTR [rbp+0xcc],rdx
    c266:	mov    QWORD PTR [rbx],rax
    c269:	mov    eax,0xa
    c26e:	mov    WORD PTR [rbx+0x8],ax
    c272:	mov    edi,DWORD PTR [rbp+0x10]
    c275:	mov    rdx,r12
    c278:	xor    ebp,ebp
    c27a:	call   27b0 <write@plt>
    c27f:	cmp    r12,rax
    c282:	setne  bpl
    c286:	neg    ebp
    c288:	jmp    c295 <tdb_new_database+0x205>
    c28a:	nop    WORD PTR [rax+rax*1+0x0]
    c290:	mov    ebp,0xffffffff
    c295:	mov    rdi,rbx
    c298:	call   a6a0 <talloc_free>
    c29d:	pop    rbx
    c29e:	mov    eax,ebp
    c2a0:	pop    rbp
    c2a1:	pop    r12
    c2a3:	pop    r13
    c2a5:	pop    r14
    c2a7:	ret    
    c2a8:	mov    DWORD PTR [rbp+0x28],0x4
    c2af:	mov    ebp,0xffffffff
    c2b4:	jmp    c182 <tdb_new_database+0xf2>
    c2b9:	nop    DWORD PTR [rax+0x0]

000000000000c2c0 <tdb_oob>:
    c2c0:	push   r13
    c2c2:	push   r12
    c2c4:	xor    r12d,r12d
    c2c7:	push   rbp
    c2c8:	push   rbx
    c2c9:	sub    rsp,0xa8
    c2d0:	mov    r8d,DWORD PTR [rdi+0x14]
    c2d4:	mov    rax,QWORD PTR fs:0x28
    c2dd:	mov    QWORD PTR [rsp+0x98],rax
    c2e5:	xor    eax,eax
    c2e7:	cmp    r8d,esi
    c2ea:	jae    c32f <tdb_oob+0x6f>
    c2ec:	test   BYTE PTR [rdi+0xd4],0x2
    c2f3:	mov    rbx,rdi
    c2f6:	mov    ebp,esi
    c2f8:	mov    r13d,edx
    c2fb:	jne    c3a0 <tdb_oob+0xe0>
    c301:	mov    esi,DWORD PTR [rdi+0x10]
    c304:	mov    rdx,rsp
    c307:	mov    edi,0x1
    c30c:	call   2a80 <__fxstat@plt>
    c311:	cmp    eax,0xffffffff
    c314:	je     c38a <tdb_oob+0xca>
    c316:	mov    r8,QWORD PTR [rsp+0x30]
    c31b:	mov    eax,ebp
    c31d:	cmp    r8,rax
    c320:	jl     c368 <tdb_oob+0xa8>
    c322:	test   BYTE PTR [rbx+0xd4],0x2
    c329:	mov    DWORD PTR [rbx+0x14],r8d
    c32d:	je     c358 <tdb_oob+0x98>
    c32f:	mov    rcx,QWORD PTR [rsp+0x98]
    c337:	xor    rcx,QWORD PTR fs:0x28
    c340:	mov    eax,r12d
    c343:	jne    c3be <tdb_oob+0xfe>
    c345:	add    rsp,0xa8
    c34c:	pop    rbx
    c34d:	pop    rbp
    c34e:	pop    r12
    c350:	pop    r13
    c352:	ret    
    c353:	nop    DWORD PTR [rax+rax*1+0x0]
    c358:	mov    QWORD PTR [rbx+0x8],0x0
    c360:	jmp    c32f <tdb_oob+0x6f>
    c362:	nop    WORD PTR [rax+rax*1+0x0]
    c368:	test   r13d,r13d
    c36b:	jne    c38a <tdb_oob+0xca>
    c36d:	mov    DWORD PTR [rbx+0x28],0x2
    c374:	mov    ecx,ebp
    c376:	lea    rdx,[rip+0x49b3]        # 10d30 <__PRETTY_FUNCTION__.11970+0x3d0>
    c37d:	xor    esi,esi
    c37f:	mov    rdi,rbx
    c382:	xor    eax,eax
    c384:	call   QWORD PTR [rbx+0x100]
    c38a:	mov    DWORD PTR [rbx+0x28],0x2
    c391:	mov    r12d,0xffffffff
    c397:	jmp    c32f <tdb_oob+0x6f>
    c399:	nop    DWORD PTR [rax+0x0]
    c3a0:	test   edx,edx
    c3a2:	jne    c38a <tdb_oob+0xca>
    c3a4:	mov    ecx,esi
    c3a6:	mov    DWORD PTR [rdi+0x28],0x2
    c3ad:	lea    rdx,[rip+0x494c]        # 10d00 <__PRETTY_FUNCTION__.11970+0x3a0>
    c3b4:	xor    esi,esi
    c3b6:	call   QWORD PTR [rdi+0x100]
    c3bc:	jmp    c38a <tdb_oob+0xca>
    c3be:	call   2820 <__stack_chk_fail@plt>
    c3c3:	nop    DWORD PTR [rax]
    c3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c3d0 <tdb_read>:
    c3d0:	push   r15
    c3d2:	push   r14
    c3d4:	mov    r15,rdi
    c3d7:	push   r13
    c3d9:	push   r12
    c3db:	mov    r12d,esi
    c3de:	push   rbp
    c3df:	push   rbx
    c3e0:	lea    esi,[r12+rcx*1]
    c3e4:	mov    rbx,rdx
    c3e7:	xor    edx,edx
    c3e9:	mov    ebp,ecx
    c3eb:	sub    rsp,0x18
    c3ef:	mov    r13d,r8d
    c3f2:	call   c2c0 <tdb_oob>
    c3f7:	test   eax,eax
    c3f9:	jne    c4df <tdb_read+0x10f>
    c3ff:	mov    rsi,QWORD PTR [r15+0x8]
    c403:	mov    r14d,eax
    c406:	test   rsi,rsi
    c409:	je     c458 <tdb_read+0x88>
    c40b:	mov    edx,ebp
    c40d:	add    rsi,r12
    c410:	mov    rdi,rbx
    c413:	call   2a20 <memcpy@plt>
    c418:	test   r13d,r13d
    c41b:	je     c440 <tdb_read+0x70>
    c41d:	shr    ebp,0x2
    c420:	test   ebp,ebp
    c422:	je     c440 <tdb_read+0x70>
    c424:	lea    eax,[rbp-0x1]
    c427:	mov    rdx,rbx
    c42a:	lea    rcx,[rbx+rax*4+0x4]
    c42f:	nop
    c430:	mov    eax,DWORD PTR [rdx]
    c432:	add    rdx,0x4
    c436:	bswap  eax
    c438:	mov    DWORD PTR [rdx-0x4],eax
    c43b:	cmp    rdx,rcx
    c43e:	jne    c430 <tdb_read+0x60>
    c440:	add    rsp,0x18
    c444:	mov    eax,r14d
    c447:	pop    rbx
    c448:	pop    rbp
    c449:	pop    r12
    c44b:	pop    r13
    c44d:	pop    r14
    c44f:	pop    r15
    c451:	ret    
    c452:	nop    WORD PTR [rax+rax*1+0x0]
    c458:	mov    edi,DWORD PTR [r15+0x10]
    c45c:	mov    ecx,r12d
    c45f:	xor    edx,edx
    c461:	mov    rsi,rcx
    c464:	mov    QWORD PTR [rsp+0x8],rcx
    c469:	call   28c0 <lseek@plt>
    c46e:	mov    rcx,QWORD PTR [rsp+0x8]
    c473:	cmp    rcx,rax
    c476:	jne    c498 <tdb_read+0xc8>
    c478:	mov    edi,DWORD PTR [r15+0x10]
    c47c:	mov    ecx,ebp
    c47e:	mov    rsi,rbx
    c481:	mov    rdx,rcx
    c484:	mov    QWORD PTR [rsp+0x8],rcx
    c489:	call   2980 <read@plt>
    c48e:	mov    rcx,QWORD PTR [rsp+0x8]
    c493:	cmp    rcx,rax
    c496:	je     c418 <tdb_read+0x48>
    c498:	mov    DWORD PTR [r15+0x28],0x2
    c4a0:	mov    rbx,QWORD PTR [r15+0x100]
    c4a7:	mov    r14d,0xffffffff
    c4ad:	call   2750 <__errno_location@plt>
    c4b2:	mov    edi,DWORD PTR [rax]
    c4b4:	call   2c30 <strerror@plt>
    c4b9:	mov    r8d,ebp
    c4bc:	mov    r9,rax
    c4bf:	mov    ecx,r12d
    c4c2:	lea    rdx,[rip+0x488f]        # 10d58 <__PRETTY_FUNCTION__.11970+0x3f8>
    c4c9:	xor    esi,esi
    c4cb:	mov    rdi,r15
    c4ce:	xor    eax,eax
    c4d0:	call   rbx
    c4d2:	mov    DWORD PTR [r15+0x28],0x2
    c4da:	jmp    c440 <tdb_read+0x70>
    c4df:	mov    r14d,0xffffffff
    c4e5:	jmp    c440 <tdb_read+0x70>
    c4ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000000c4f0 <tdb_brlock.part.3>:
    c4f0:	push   r15
    c4f2:	push   r14
    c4f4:	mov    r14d,edx
    c4f7:	push   r13
    c4f9:	push   r12
    c4fb:	mov    r13d,esi
    c4fe:	push   rbp
    c4ff:	push   rbx
    c500:	mov    rbp,rdi
    c503:	xor    edi,edi
    c505:	mov    ebx,ecx
    c507:	sub    rsp,0x48
    c50b:	mov    rax,QWORD PTR fs:0x28
    c514:	mov    QWORD PTR [rsp+0x38],rax
    c519:	xor    eax,eax
    c51b:	mov    eax,esi
    c51d:	mov    DWORD PTR [rsp+0x8],r8d
    c522:	mov    WORD PTR [rsp+0x10],dx
    c527:	mov    WORD PTR [rsp+0x12],di
    c52c:	mov    QWORD PTR [rsp+0x18],rax
    c531:	lea    r12,[rsp+0x10]
    c536:	mov    QWORD PTR [rsp+0x20],0x1
    c53f:	mov    DWORD PTR [rsp+0x28],0x0
    c547:	jmp    c55f <tdb_brlock.part.3+0x6f>
    c549:	nop    DWORD PTR [rax+0x0]
    c550:	call   2750 <__errno_location@plt>
    c555:	mov    edi,DWORD PTR [rax]
    c557:	mov    r11,rax
    c55a:	cmp    edi,0x4
    c55d:	jne    c5a0 <tdb_brlock.part.3+0xb0>
    c55f:	mov    edi,DWORD PTR [rbp+0x10]
    c562:	xor    eax,eax
    c564:	mov    rdx,r12
    c567:	mov    esi,ebx
    c569:	call   27a0 <fcntl@plt>
    c56e:	cmp    eax,0xffffffff
    c571:	mov    r15d,eax
    c574:	je     c550 <tdb_brlock.part.3+0x60>
    c576:	xor    r15d,r15d
    c579:	mov    rcx,QWORD PTR [rsp+0x38]
    c57e:	xor    rcx,QWORD PTR fs:0x28
    c587:	mov    eax,r15d
    c58a:	jne    c62e <tdb_brlock.part.3+0x13e>
    c590:	add    rsp,0x48
    c594:	pop    rbx
    c595:	pop    rbp
    c596:	pop    r12
    c598:	pop    r13
    c59a:	pop    r14
    c59c:	pop    r15
    c59e:	ret    
    c59f:	nop
    c5a0:	test   BYTE PTR [rsp+0x8],0x1
    c5a5:	jne    c5f0 <tdb_brlock.part.3+0x100>
    c5a7:	cmp    ebx,0x6
    c5aa:	je     c5f0 <tdb_brlock.part.3+0x100>
    c5ac:	mov    QWORD PTR [rsp+0x8],r11
    c5b1:	sub    rsp,0x8
    c5b5:	mov    ecx,DWORD PTR [rbp+0x10]
    c5b8:	mov    DWORD PTR [rbp+0x28],0x3
    c5bf:	mov    esi,0x5
    c5c4:	push   0x7
    c5c6:	mov    rdi,rbp
    c5c9:	mov    r9d,r14d
    c5cc:	mov    r8d,r13d
    c5cf:	lea    rdx,[rip+0x47aa]        # 10d80 <__PRETTY_FUNCTION__.11970+0x420>
    c5d6:	xor    eax,eax
    c5d8:	call   QWORD PTR [rbp+0x100]
    c5de:	mov    r11,QWORD PTR [rsp+0x18]
    c5e3:	pop    rcx
    c5e4:	pop    rsi
    c5e5:	mov    edi,DWORD PTR [r11]
    c5e8:	nop    DWORD PTR [rax+rax*1+0x0]
    c5f0:	cmp    edi,0xb
    c5f3:	je     c622 <tdb_brlock.part.3+0x132>
    c5f5:	mov    r12,QWORD PTR [rbp+0x100]
    c5fc:	call   2c30 <strerror@plt>
    c601:	mov    ecx,DWORD PTR [rbp+0x10]
    c604:	lea    rdx,[rip+0x47b5]        # 10dc0 <__PRETTY_FUNCTION__.11970+0x460>
    c60b:	push   rax
    c60c:	mov    r9d,r14d
    c60f:	push   rbx
    c610:	xor    eax,eax
    c612:	mov    r8d,r13d
    c615:	mov    esi,0x5
    c61a:	mov    rdi,rbp
    c61d:	call   r12
    c620:	pop    rax
    c621:	pop    rdx
    c622:	mov    DWORD PTR [rbp+0x28],0x3
    c629:	jmp    c579 <tdb_brlock.part.3+0x89>
    c62e:	call   2820 <__stack_chk_fail@plt>
    c633:	nop    DWORD PTR [rax]
    c636:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c640 <tdb_brlock>:
    c640:	test   BYTE PTR [rdi+0xd4],0x4
    c647:	jne    c658 <tdb_brlock+0x18>
    c649:	cmp    edx,0x1
    c64c:	je     c660 <tdb_brlock+0x20>
    c64e:	jmp    c4f0 <tdb_brlock.part.3>
    c653:	nop    DWORD PTR [rax+rax*1+0x0]
    c658:	xor    eax,eax
    c65a:	ret    
    c65b:	nop    DWORD PTR [rax+rax*1+0x0]
    c660:	mov    eax,DWORD PTR [rdi+0x18]
    c663:	test   eax,eax
    c665:	je     c64e <tdb_brlock+0xe>
    c667:	sub    rsp,0x8
    c66b:	call   2750 <__errno_location@plt>
    c670:	mov    DWORD PTR [rax],0xd
    c676:	mov    eax,0xffffffff
    c67b:	add    rsp,0x8
    c67f:	ret    

000000000000c680 <tdb_lock>:
    c680:	push   r13
    c682:	push   r12
    c684:	mov    r12d,edx
    c687:	push   rbp
    c688:	push   rbx
    c689:	mov    ebp,esi
    c68b:	mov    rbx,rdi
    c68e:	sub    rsp,0x8
    c692:	cmp    esi,0xffffffff
    c695:	jl     c710 <tdb_lock+0x90>
    c697:	cmp    DWORD PTR [rdi+0x50],esi
    c69a:	jle    c710 <tdb_lock+0x90>
    c69c:	xor    eax,eax
    c69e:	test   BYTE PTR [rdi+0xd4],0x4
    c6a5:	jne    c6c6 <tdb_lock+0x46>
    c6a7:	movsxd rax,esi
    c6aa:	mov    rdx,QWORD PTR [rdi+0x20]
    c6ae:	lea    r13,[rax*8+0x8]
    c6b6:	add    rdx,r13
    c6b9:	mov    eax,DWORD PTR [rdx]
    c6bb:	test   eax,eax
    c6bd:	je     c6d8 <tdb_lock+0x58>
    c6bf:	add    eax,0x1
    c6c2:	mov    DWORD PTR [rdx],eax
    c6c4:	xor    eax,eax
    c6c6:	add    rsp,0x8
    c6ca:	pop    rbx
    c6cb:	pop    rbp
    c6cc:	pop    r12
    c6ce:	pop    r13
    c6d0:	ret    
    c6d1:	nop    DWORD PTR [rax+0x0]
    c6d8:	lea    esi,[rsi*4+0xa8]
    c6df:	xor    r8d,r8d
    c6e2:	mov    ecx,0x7
    c6e7:	mov    edx,r12d
    c6ea:	call   c640 <tdb_brlock>
    c6ef:	test   eax,eax
    c6f1:	jne    c730 <tdb_lock+0xb0>
    c6f3:	mov    rax,QWORD PTR [rbx+0x20]
    c6f7:	mov    DWORD PTR [rax+r13*1+0x4],r12d
    c6fc:	mov    rdx,QWORD PTR [rbx+0x20]
    c700:	add    rdx,r13
    c703:	mov    eax,DWORD PTR [rdx]
    c705:	jmp    c6bf <tdb_lock+0x3f>
    c707:	nop    WORD PTR [rax+rax*1+0x0]
    c710:	xor    eax,eax
    c712:	mov    r8d,r12d
    c715:	mov    ecx,ebp
    c717:	lea    rdx,[rip+0x46ea]        # 10e08 <__PRETTY_FUNCTION__.11970+0x4a8>
    c71e:	xor    esi,esi
    c720:	mov    rdi,rbx
    c723:	call   QWORD PTR [rbx+0x100]
    c729:	mov    eax,0xffffffff
    c72e:	jmp    c6c6 <tdb_lock+0x46>
    c730:	call   2750 <__errno_location@plt>
    c735:	mov    edi,DWORD PTR [rax]
    c737:	mov    r13,QWORD PTR [rbx+0x100]
    c73e:	call   2c30 <strerror@plt>
    c743:	mov    r8d,r12d
    c746:	mov    r9,rax
    c749:	mov    ecx,ebp
    c74b:	xor    eax,eax
    c74d:	lea    rdx,[rip+0x46dc]        # 10e30 <__PRETTY_FUNCTION__.11970+0x4d0>
    c754:	xor    esi,esi
    c756:	mov    rdi,rbx
    c759:	call   r13
    c75c:	mov    eax,0xffffffff
    c761:	jmp    c6c6 <tdb_lock+0x46>
    c766:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c770 <tdb_unlock.isra.5>:
    c770:	push   r12
    c772:	push   rbp
    c773:	xor    ebp,ebp
    c775:	push   rbx
    c776:	test   BYTE PTR [rdi+0xd4],0x4
    c77d:	jne    c7ba <tdb_unlock.isra.5+0x4a>
    c77f:	cmp    esi,0xffffffff
    c782:	mov    rbx,rdi
    c785:	mov    r8d,DWORD PTR [rdi+0x50]
    c789:	jl     c830 <tdb_unlock.isra.5+0xc0>
    c78f:	cmp    esi,r8d
    c792:	jge    c830 <tdb_unlock.isra.5+0xc0>
    c798:	movsxd rax,esi
    c79b:	mov    rdx,QWORD PTR [rdi+0x20]
    c79f:	lea    r12,[rax*8+0x8]
    c7a7:	add    rdx,r12
    c7aa:	mov    eax,DWORD PTR [rdx]
    c7ac:	test   eax,eax
    c7ae:	je     c810 <tdb_unlock.isra.5+0xa0>
    c7b0:	cmp    eax,0x1
    c7b3:	je     c7c8 <tdb_unlock.isra.5+0x58>
    c7b5:	sub    eax,0x1
    c7b8:	mov    DWORD PTR [rdx],eax
    c7ba:	mov    eax,ebp
    c7bc:	pop    rbx
    c7bd:	pop    rbp
    c7be:	pop    r12
    c7c0:	ret    
    c7c1:	nop    DWORD PTR [rax+0x0]
    c7c8:	lea    esi,[rsi*4+0xa8]
    c7cf:	xor    r8d,r8d
    c7d2:	mov    ecx,0x7
    c7d7:	mov    edx,0x2
    c7dc:	call   c4f0 <tdb_brlock.part.3>
    c7e1:	add    r12,QWORD PTR [rbx+0x20]
    c7e5:	mov    ebp,eax
    c7e7:	sub    DWORD PTR [r12],0x1
    c7ec:	test   eax,eax
    c7ee:	je     c7ba <tdb_unlock.isra.5+0x4a>
    c7f0:	mov    rdi,rbx
    c7f3:	xor    eax,eax
    c7f5:	lea    rdx,[rip+0x468c]        # 10e88 <__PRETTY_FUNCTION__.11970+0x528>
    c7fc:	xor    esi,esi
    c7fe:	call   QWORD PTR [rbx+0x100]
    c804:	mov    eax,ebp
    c806:	pop    rbx
    c807:	pop    rbp
    c808:	pop    r12
    c80a:	ret    
    c80b:	nop    DWORD PTR [rax+rax*1+0x0]
    c810:	lea    rdx,[rip+0x43d6]        # 10bed <__PRETTY_FUNCTION__.11970+0x28d>
    c817:	xor    esi,esi
    c819:	mov    ebp,0xffffffff
    c81e:	call   QWORD PTR [rdi+0x100]
    c824:	jmp    c7ba <tdb_unlock.isra.5+0x4a>
    c826:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c830:	mov    ecx,esi
    c832:	lea    rdx,[rip+0x4627]        # 10e60 <__PRETTY_FUNCTION__.11970+0x500>
    c839:	xor    esi,esi
    c83b:	mov    rdi,rbx
    c83e:	xor    eax,eax
    c840:	mov    ebp,0xffffffff
    c845:	call   QWORD PTR [rbx+0x100]
    c84b:	jmp    c7ba <tdb_unlock.isra.5+0x4a>

000000000000c850 <unlock_record>:
    c850:	test   esi,esi
    c852:	je     c888 <unlock_record+0x38>
    c854:	mov    rax,rdi
    c857:	add    rax,0xd8
    c85d:	je     c888 <unlock_record+0x38>
    c85f:	xor    edx,edx
    c861:	nop    DWORD PTR [rax+0x0]
    c868:	xor    ecx,ecx
    c86a:	cmp    DWORD PTR [rax+0x8],esi
    c86d:	mov    rax,QWORD PTR [rax]
    c870:	sete   cl
    c873:	add    edx,ecx
    c875:	test   rax,rax
    c878:	jne    c868 <unlock_record+0x18>
    c87a:	cmp    edx,0x1
    c87d:	jne    c888 <unlock_record+0x38>
    c87f:	test   BYTE PTR [rdi+0xd4],0x4
    c886:	je     c890 <unlock_record+0x40>
    c888:	xor    eax,eax
    c88a:	ret    
    c88b:	nop    DWORD PTR [rax+rax*1+0x0]
    c890:	xor    r8d,r8d
    c893:	mov    ecx,0x7
    c898:	mov    edx,0x2
    c89d:	jmp    c4f0 <tdb_brlock.part.3>
    c8a2:	nop    DWORD PTR [rax+0x0]
    c8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c8b0 <rec_read>:
    c8b0:	push   r12
    c8b2:	push   rbp
    c8b3:	mov    ecx,0x18
    c8b8:	push   rbx
    c8b9:	mov    r8d,DWORD PTR [rdi+0xd4]
    c8c0:	mov    rbx,rdi
    c8c3:	mov    r12d,esi
    c8c6:	mov    rbp,rdx
    c8c9:	and    r8d,0x10
    c8cd:	call   c3d0 <tdb_read>
    c8d2:	cmp    eax,0xffffffff
    c8d5:	je     c92d <rec_read+0x7d>
    c8d7:	mov    eax,DWORD PTR [rbp+0x14]
    c8da:	cmp    eax,0x26011999
    c8df:	je     c8e8 <rec_read+0x38>
    c8e1:	cmp    eax,0xfee1dead
    c8e6:	jne    c900 <rec_read+0x50>
    c8e8:	mov    esi,DWORD PTR [rbp+0x0]
    c8eb:	mov    rdi,rbx
    c8ee:	xor    edx,edx
    c8f0:	pop    rbx
    c8f1:	pop    rbp
    c8f2:	pop    r12
    c8f4:	add    esi,0x18
    c8f7:	jmp    c2c0 <tdb_oob>
    c8fc:	nop    DWORD PTR [rax+0x0]
    c900:	mov    DWORD PTR [rbx+0x28],0x1
    c907:	xor    eax,eax
    c909:	mov    ecx,DWORD PTR [rbp+0x14]
    c90c:	mov    r8d,r12d
    c90f:	lea    rdx,[rip+0x45a2]        # 10eb8 <__PRETTY_FUNCTION__.11970+0x558>
    c916:	xor    esi,esi
    c918:	mov    rdi,rbx
    c91b:	call   QWORD PTR [rbx+0x100]
    c921:	mov    DWORD PTR [rbx+0x28],0x1
    c928:	mov    eax,0xffffffff
    c92d:	pop    rbx
    c92e:	pop    rbp
    c92f:	pop    r12
    c931:	ret    
    c932:	nop    DWORD PTR [rax+0x0]
    c936:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000c940 <tdb_find>:
    c940:	push   r15
    c942:	push   r14
    c944:	mov    r15,r8
    c947:	push   r13
    c949:	push   r12
    c94b:	mov    r13,rdx
    c94e:	push   rbp
    c94f:	push   rbx
    c950:	xor    edx,edx
    c952:	mov    rbx,rdi
    c955:	mov    ebp,ecx
    c957:	sub    rsp,0x98
    c95e:	mov    r8d,DWORD PTR [rbx+0xd4]
    c965:	mov    rax,QWORD PTR fs:0x28
    c96e:	mov    QWORD PTR [rsp+0x88],rax
    c976:	xor    eax,eax
    c978:	mov    eax,ecx
    c97a:	lea    rdi,[rsp+0x3c]
    c97f:	mov    QWORD PTR [rsp+0x8],rsi
    c984:	div    DWORD PTR [rbx+0x50]
    c987:	and    r8d,0x10
    c98b:	mov    ecx,0x4
    c990:	lea    esi,[rdx*4+0xac]
    c997:	mov    rdx,rdi
    c99a:	mov    rdi,rbx
    c99d:	call   c3d0 <tdb_read>
    c9a2:	cmp    eax,0xffffffff
    c9a5:	je     ca57 <tdb_find+0x117>
    c9ab:	mov    esi,DWORD PTR [rsp+0x3c]
    c9af:	test   esi,esi
    c9b1:	je     ca50 <tdb_find+0x110>
    c9b7:	lea    rax,[rsp+0x40]
    c9bc:	mov    QWORD PTR [rsp],r13
    c9c0:	mov    r13,r15
    c9c3:	mov    QWORD PTR [rsp+0x18],rax
    c9c8:	jmp    c9dc <tdb_find+0x9c>
    c9ca:	nop    WORD PTR [rax+rax*1+0x0]
    c9d0:	mov    esi,DWORD PTR [r13+0x0]
    c9d4:	test   esi,esi
    c9d6:	mov    DWORD PTR [rsp+0x3c],esi
    c9da:	je     ca50 <tdb_find+0x110>
    c9dc:	mov    rdx,r13
    c9df:	mov    rdi,rbx
    c9e2:	call   c8b0 <rec_read>
    c9e7:	cmp    eax,0xffffffff
    c9ea:	je     ca57 <tdb_find+0x117>
    c9ec:	cmp    DWORD PTR [r13+0x14],0xfee1dead
    c9f4:	je     c9d0 <tdb_find+0x90>
    c9f6:	cmp    DWORD PTR [r13+0x10],ebp
    c9fa:	jne    c9d0 <tdb_find+0x90>
    c9fc:	mov    r15d,DWORD PTR [r13+0x8]
    ca00:	cmp    r15,QWORD PTR [rsp]
    ca04:	mov    rsi,r15
    ca07:	jne    c9d0 <tdb_find+0x90>
    ca09:	mov    eax,DWORD PTR [rsp+0x3c]
    ca0d:	xor    edx,edx
    ca0f:	mov    rdi,rbx
    ca12:	lea    r12d,[rax+0x18]
    ca16:	mov    rax,QWORD PTR [rsp+0x8]
    ca1b:	add    esi,r12d
    ca1e:	mov    r14,rax
    ca21:	call   c2c0 <tdb_oob>
    ca26:	test   eax,eax
    ca28:	jne    ca57 <tdb_find+0x117>
    ca2a:	mov    rdi,QWORD PTR [rbx+0x8]
    ca2e:	test   rdi,rdi
    ca31:	je     ca88 <tdb_find+0x148>
    ca33:	mov    rdx,QWORD PTR [rsp]
    ca37:	mov    rsi,QWORD PTR [rsp+0x8]
    ca3c:	add    rdi,r12
    ca3f:	call   2990 <memcmp@plt>
    ca44:	test   eax,eax
    ca46:	jne    c9d0 <tdb_find+0x90>
    ca48:	mov    eax,DWORD PTR [rsp+0x3c]
    ca4c:	jmp    ca59 <tdb_find+0x119>
    ca4e:	xchg   ax,ax
    ca50:	mov    DWORD PTR [rbx+0x28],0x8
    ca57:	xor    eax,eax
    ca59:	mov    rcx,QWORD PTR [rsp+0x88]
    ca61:	xor    rcx,QWORD PTR fs:0x28
    ca6a:	jne    cb11 <tdb_find+0x1d1>
    ca70:	add    rsp,0x98
    ca77:	pop    rbx
    ca78:	pop    rbp
    ca79:	pop    r12
    ca7b:	pop    r13
    ca7d:	pop    r14
    ca7f:	pop    r15
    ca81:	ret    
    ca82:	nop    WORD PTR [rax+rax*1+0x0]
    ca88:	cmp    QWORD PTR [rsp],0x0
    ca8d:	je     ca48 <tdb_find+0x108>
    ca8f:	mov    QWORD PTR [rsp+0x28],r13
    ca94:	mov    QWORD PTR [rsp+0x10],rbx
    ca99:	mov    r13,r14
    ca9c:	mov    DWORD PTR [rsp+0x24],ebp
    caa0:	mov    r14,QWORD PTR [rsp+0x18]
    caa5:	jmp    cad3 <tdb_find+0x193>
    caa7:	nop    WORD PTR [rax+rax*1+0x0]
    cab0:	mov    ebx,ebp
    cab2:	mov    rsi,r13
    cab5:	mov    rdi,r14
    cab8:	mov    rdx,rbx
    cabb:	call   2990 <memcmp@plt>
    cac0:	test   eax,eax
    cac2:	jne    cafe <tdb_find+0x1be>
    cac4:	add    r13,rbx
    cac7:	add    r12d,ebp
    caca:	sub    r15,rbx
    cacd:	je     ca48 <tdb_find+0x108>
    cad3:	cmp    r15d,0x40
    cad7:	mov    ebp,0x40
    cadc:	mov    rdi,QWORD PTR [rsp+0x10]
    cae1:	cmovbe ebp,r15d
    cae5:	mov    rdx,r14
    cae8:	xor    r8d,r8d
    caeb:	mov    ecx,ebp
    caed:	mov    esi,r12d
    caf0:	call   c3d0 <tdb_read>
    caf5:	test   eax,eax
    caf7:	je     cab0 <tdb_find+0x170>
    caf9:	jmp    ca57 <tdb_find+0x117>
    cafe:	mov    rbx,QWORD PTR [rsp+0x10]
    cb03:	mov    ebp,DWORD PTR [rsp+0x24]
    cb07:	mov    r13,QWORD PTR [rsp+0x28]
    cb0c:	jmp    c9d0 <tdb_find+0x90>
    cb11:	call   2820 <__stack_chk_fail@plt>
    cb16:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cb20 <tdb_find_lock_hash>:
    cb20:	push   r15
    cb22:	push   r14
    cb24:	mov    eax,ecx
    cb26:	push   r13
    cb28:	push   r12
    cb2a:	mov    r13,rdx
    cb2d:	push   rbp
    cb2e:	push   rbx
    cb2f:	xor    edx,edx
    cb31:	mov    r14,rsi
    cb34:	mov    rbx,rdi
    cb37:	mov    ebp,ecx
    cb39:	sub    rsp,0x8
    cb3d:	mov    r15,r9
    cb40:	xor    r12d,r12d
    cb43:	div    DWORD PTR [rdi+0x50]
    cb46:	mov    esi,edx
    cb48:	mov    edx,r8d
    cb4b:	call   c680 <tdb_lock>
    cb50:	cmp    eax,0xffffffff
    cb53:	je     cb6f <tdb_find_lock_hash+0x4f>
    cb55:	mov    r8,r15
    cb58:	mov    ecx,ebp
    cb5a:	mov    rsi,r14
    cb5d:	mov    rdx,r13
    cb60:	mov    rdi,rbx
    cb63:	call   c940 <tdb_find>
    cb68:	test   eax,eax
    cb6a:	mov    r12d,eax
    cb6d:	je     cb88 <tdb_find_lock_hash+0x68>
    cb6f:	add    rsp,0x8
    cb73:	mov    eax,r12d
    cb76:	pop    rbx
    cb77:	pop    rbp
    cb78:	pop    r12
    cb7a:	pop    r13
    cb7c:	pop    r14
    cb7e:	pop    r15
    cb80:	ret    
    cb81:	nop    DWORD PTR [rax+0x0]
    cb88:	mov    eax,ebp
    cb8a:	xor    edx,edx
    cb8c:	mov    rdi,rbx
    cb8f:	div    DWORD PTR [rbx+0x50]
    cb92:	mov    esi,edx
    cb94:	call   c770 <tdb_unlock.isra.5>
    cb99:	jmp    cb6f <tdb_find_lock_hash+0x4f>
    cb9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000cba0 <tdb_alloc_read>:
    cba0:	push   r13
    cba2:	push   r12
    cba4:	mov    r13d,esi
    cba7:	push   rbp
    cba8:	push   rbx
    cba9:	mov    esi,edx
    cbab:	lea    rdx,[rip+0x4053]        # 10c05 <__PRETTY_FUNCTION__.11970+0x2a5>
    cbb2:	mov    rbp,rdi
    cbb5:	mov    r12,rsi
    cbb8:	sub    rsp,0x8
    cbbc:	call   a240 <talloc_named_const>
    cbc1:	test   rax,rax
    cbc4:	mov    rbx,rax
    cbc7:	je     cbf0 <tdb_alloc_read+0x50>
    cbc9:	xor    r8d,r8d
    cbcc:	mov    ecx,r12d
    cbcf:	mov    rdx,rax
    cbd2:	mov    esi,r13d
    cbd5:	mov    rdi,rbp
    cbd8:	call   c3d0 <tdb_read>
    cbdd:	cmp    eax,0xffffffff
    cbe0:	je     cc30 <tdb_alloc_read+0x90>
    cbe2:	add    rsp,0x8
    cbe6:	mov    rax,rbx
    cbe9:	pop    rbx
    cbea:	pop    rbp
    cbeb:	pop    r12
    cbed:	pop    r13
    cbef:	ret    
    cbf0:	mov    DWORD PTR [rbp+0x28],0x4
    cbf7:	mov    r13,QWORD PTR [rbp+0x100]
    cbfe:	call   2750 <__errno_location@plt>
    cc03:	mov    edi,DWORD PTR [rax]
    cc05:	call   2c30 <strerror@plt>
    cc0a:	mov    ecx,r12d
    cc0d:	mov    r8,rax
    cc10:	lea    rdx,[rip+0x42c9]        # 10ee0 <__PRETTY_FUNCTION__.11970+0x580>
    cc17:	xor    esi,esi
    cc19:	mov    rdi,rbp
    cc1c:	xor    eax,eax
    cc1e:	call   r13
    cc21:	mov    DWORD PTR [rbp+0x28],0x4
    cc28:	jmp    cbe2 <tdb_alloc_read+0x42>
    cc2a:	nop    WORD PTR [rax+rax*1+0x0]
    cc30:	mov    rdi,rbx
    cc33:	xor    ebx,ebx
    cc35:	call   a6a0 <talloc_free>
    cc3a:	jmp    cbe2 <tdb_alloc_read+0x42>
    cc3c:	nop    DWORD PTR [rax+0x0]

000000000000cc40 <tdb_write>:
    cc40:	push   r15
    cc42:	push   r14
    cc44:	push   r13
    cc46:	push   r12
    cc48:	mov    r13,rdx
    cc4b:	push   rbp
    cc4c:	push   rbx
    cc4d:	mov    ebx,esi
    cc4f:	lea    esi,[rbx+rcx*1]
    cc52:	xor    edx,edx
    cc54:	mov    r12,rdi
    cc57:	sub    rsp,0x8
    cc5b:	mov    ebp,ecx
    cc5d:	call   c2c0 <tdb_oob>
    cc62:	test   eax,eax
    cc64:	jne    cd20 <tdb_write+0xe0>
    cc6a:	mov    rdi,QWORD PTR [r12+0x8]
    cc6f:	mov    r14d,eax
    cc72:	test   rdi,rdi
    cc75:	je     cca0 <tdb_write+0x60>
    cc77:	add    rdi,rbx
    cc7a:	mov    edx,ebp
    cc7c:	mov    rsi,r13
    cc7f:	call   2a20 <memcpy@plt>
    cc84:	add    rsp,0x8
    cc88:	mov    eax,r14d
    cc8b:	pop    rbx
    cc8c:	pop    rbp
    cc8d:	pop    r12
    cc8f:	pop    r13
    cc91:	pop    r14
    cc93:	pop    r15
    cc95:	ret    
    cc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    cca0:	mov    edi,DWORD PTR [r12+0x10]
    cca5:	mov    r15d,ebx
    cca8:	xor    edx,edx
    ccaa:	mov    rsi,r15
    ccad:	call   28c0 <lseek@plt>
    ccb2:	cmp    r15,rax
    ccb5:	jne    cccf <tdb_write+0x8f>
    ccb7:	mov    edi,DWORD PTR [r12+0x10]
    ccbc:	mov    r15d,ebp
    ccbf:	mov    rsi,r13
    ccc2:	mov    rdx,r15
    ccc5:	call   27b0 <write@plt>
    ccca:	cmp    rax,r15
    cccd:	je     cc84 <tdb_write+0x44>
    cccf:	mov    DWORD PTR [r12+0x28],0x2
    ccd8:	mov    r13,QWORD PTR [r12+0x100]
    cce0:	mov    r14d,0xffffffff
    cce6:	call   2750 <__errno_location@plt>
    cceb:	mov    edi,DWORD PTR [rax]
    cced:	call   2c30 <strerror@plt>
    ccf2:	mov    r8d,ebp
    ccf5:	mov    r9,rax
    ccf8:	mov    ecx,ebx
    ccfa:	lea    rdx,[rip+0x420f]        # 10f10 <__PRETTY_FUNCTION__.11970+0x5b0>
    cd01:	xor    esi,esi
    cd03:	mov    rdi,r12
    cd06:	xor    eax,eax
    cd08:	call   r13
    cd0b:	mov    DWORD PTR [r12+0x28],0x2
    cd14:	jmp    cc84 <tdb_write+0x44>
    cd19:	nop    DWORD PTR [rax+0x0]
    cd20:	mov    r14d,0xffffffff
    cd26:	jmp    cc84 <tdb_write+0x44>
    cd2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000cd30 <rec_write>:
    cd30:	sub    rsp,0x28
    cd34:	mov    rax,QWORD PTR fs:0x28
    cd3d:	mov    QWORD PTR [rsp+0x18],rax
    cd42:	xor    eax,eax
    cd44:	test   BYTE PTR [rdi+0xd4],0x10
    cd4b:	mov    rax,QWORD PTR [rdx+0x10]
    cd4f:	movdqa xmm0,XMMWORD PTR [rdx]
    cd53:	mov    rdx,rsp
    cd56:	movaps XMMWORD PTR [rsp],xmm0
    cd5a:	mov    QWORD PTR [rsp+0x10],rax
    cd5f:	je     cd81 <rec_write+0x51>
    cd61:	lea    r8,[rdx+0x18]
    cd65:	mov    rax,rdx
    cd68:	nop    DWORD PTR [rax+rax*1+0x0]
    cd70:	add    rax,0x4
    cd74:	mov    ecx,DWORD PTR [rax-0x4]
    cd77:	bswap  ecx
    cd79:	mov    DWORD PTR [rax-0x4],ecx
    cd7c:	cmp    r8,rax
    cd7f:	jne    cd70 <rec_write+0x40>
    cd81:	mov    ecx,0x18
    cd86:	call   cc40 <tdb_write>
    cd8b:	mov    rsi,QWORD PTR [rsp+0x18]
    cd90:	xor    rsi,QWORD PTR fs:0x28
    cd99:	jne    cda0 <rec_write+0x70>
    cd9b:	add    rsp,0x28
    cd9f:	ret    
    cda0:	call   2820 <__stack_chk_fail@plt>
    cda5:	nop
    cda6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cdb0 <rec_free_read>:
    cdb0:	push   r12
    cdb2:	push   rbp
    cdb3:	mov    ecx,0x18
    cdb8:	push   rbx
    cdb9:	mov    r8d,DWORD PTR [rdi+0xd4]
    cdc0:	mov    rbx,rdi
    cdc3:	mov    r12d,esi
    cdc6:	mov    rbp,rdx
    cdc9:	and    r8d,0x10
    cdcd:	call   c3d0 <tdb_read>
    cdd2:	cmp    eax,0xffffffff
    cdd5:	je     ce78 <rec_free_read+0xc8>
    cddb:	mov    eax,DWORD PTR [rbp+0x14]
    cdde:	cmp    eax,0x26011999
    cde3:	jne    ce23 <rec_free_read+0x73>
    cde5:	xor    esi,esi
    cde7:	xor    eax,eax
    cde9:	mov    r8d,r12d
    cdec:	mov    ecx,0x26011999
    cdf1:	lea    rdx,[rip+0x4140]        # 10f38 <__PRETTY_FUNCTION__.11970+0x5d8>
    cdf8:	mov    rdi,rbx
    cdfb:	call   QWORD PTR [rbx+0x100]
    ce01:	mov    DWORD PTR [rbp+0x14],0xd9fee666
    ce08:	mov    ecx,0x18
    ce0d:	mov    rdx,rbp
    ce10:	mov    esi,r12d
    ce13:	mov    rdi,rbx
    ce16:	call   cc40 <tdb_write>
    ce1b:	cmp    eax,0xffffffff
    ce1e:	je     ce78 <rec_free_read+0xc8>
    ce20:	mov    eax,DWORD PTR [rbp+0x14]
    ce23:	cmp    eax,0xd9fee666
    ce28:	jne    ce50 <rec_free_read+0xa0>
    ce2a:	mov    esi,DWORD PTR [rbp+0x0]
    ce2d:	xor    edx,edx
    ce2f:	mov    rdi,rbx
    ce32:	add    esi,0x18
    ce35:	call   c2c0 <tdb_oob>
    ce3a:	test   eax,eax
    ce3c:	setne  al
    ce3f:	movzx  eax,al
    ce42:	pop    rbx
    ce43:	neg    eax
    ce45:	pop    rbp
    ce46:	pop    r12
    ce48:	ret    
    ce49:	nop    DWORD PTR [rax+0x0]
    ce50:	mov    DWORD PTR [rbx+0x28],0x1
    ce57:	mov    r8d,r12d
    ce5a:	mov    ecx,DWORD PTR [rbp+0x14]
    ce5d:	lea    rdx,[rip+0x4114]        # 10f78 <__PRETTY_FUNCTION__.11970+0x618>
    ce64:	xor    esi,esi
    ce66:	mov    rdi,rbx
    ce69:	xor    eax,eax
    ce6b:	call   QWORD PTR [rbx+0x100]
    ce71:	mov    DWORD PTR [rbx+0x28],0x1
    ce78:	pop    rbx
    ce79:	mov    eax,0xffffffff
    ce7e:	pop    rbp
    ce7f:	pop    r12
    ce81:	ret    
    ce82:	nop    DWORD PTR [rax+0x0]
    ce86:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000ce90 <ofs_write.isra.12>:
    ce90:	sub    rsp,0x18
    ce94:	mov    rax,QWORD PTR fs:0x28
    ce9d:	mov    QWORD PTR [rsp+0x8],rax
    cea2:	xor    eax,eax
    cea4:	test   BYTE PTR [rdi+0xd4],0x10
    ceab:	mov    DWORD PTR [rsp+0x4],edx
    ceaf:	jne    ced8 <ofs_write.isra.12+0x48>
    ceb1:	lea    rdx,[rsp+0x4]
    ceb6:	mov    ecx,0x4
    cebb:	call   cc40 <tdb_write>
    cec0:	mov    rcx,QWORD PTR [rsp+0x8]
    cec5:	xor    rcx,QWORD PTR fs:0x28
    cece:	jne    cee0 <ofs_write.isra.12+0x50>
    ced0:	add    rsp,0x18
    ced4:	ret    
    ced5:	nop    DWORD PTR [rax]
    ced8:	bswap  edx
    ceda:	mov    DWORD PTR [rsp+0x4],edx
    cede:	jmp    ceb1 <ofs_write.isra.12+0x21>
    cee0:	call   2820 <__stack_chk_fail@plt>
    cee5:	nop
    cee6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cef0 <remove_from_freelist>:
    cef0:	push   r14
    cef2:	push   r13
    cef4:	mov    r14d,edx
    cef7:	push   r12
    cef9:	push   rbp
    cefa:	mov    r13d,esi
    cefd:	push   rbx
    cefe:	mov    ebp,0xa8
    cf03:	mov    rbx,rdi
    cf06:	sub    rsp,0x10
    cf0a:	mov    rax,QWORD PTR fs:0x28
    cf13:	mov    QWORD PTR [rsp+0x8],rax
    cf18:	xor    eax,eax
    cf1a:	lea    r12,[rsp+0x4]
    cf1f:	jmp    cf37 <remove_from_freelist+0x47>
    cf21:	nop    DWORD PTR [rax+0x0]
    cf28:	mov    eax,DWORD PTR [rsp+0x4]
    cf2c:	test   eax,eax
    cf2e:	je     cf59 <remove_from_freelist+0x69>
    cf30:	cmp    eax,r13d
    cf33:	je     cfa0 <remove_from_freelist+0xb0>
    cf35:	mov    ebp,eax
    cf37:	mov    r8d,DWORD PTR [rbx+0xd4]
    cf3e:	mov    ecx,0x4
    cf43:	mov    rdx,r12
    cf46:	mov    esi,ebp
    cf48:	mov    rdi,rbx
    cf4b:	and    r8d,0x10
    cf4f:	call   c3d0 <tdb_read>
    cf54:	cmp    eax,0xffffffff
    cf57:	jne    cf28 <remove_from_freelist+0x38>
    cf59:	xor    eax,eax
    cf5b:	mov    ecx,r13d
    cf5e:	lea    rdx,[rip+0x4043]        # 10fa8 <__PRETTY_FUNCTION__.11970+0x648>
    cf65:	xor    esi,esi
    cf67:	mov    rdi,rbx
    cf6a:	call   QWORD PTR [rbx+0x100]
    cf70:	mov    DWORD PTR [rbx+0x28],0x1
    cf77:	mov    eax,0xffffffff
    cf7c:	mov    rcx,QWORD PTR [rsp+0x8]
    cf81:	xor    rcx,QWORD PTR fs:0x28
    cf8a:	jne    cfaf <remove_from_freelist+0xbf>
    cf8c:	add    rsp,0x10
    cf90:	pop    rbx
    cf91:	pop    rbp
    cf92:	pop    r12
    cf94:	pop    r13
    cf96:	pop    r14
    cf98:	ret    
    cf99:	nop    DWORD PTR [rax+0x0]
    cfa0:	mov    edx,r14d
    cfa3:	mov    esi,ebp
    cfa5:	mov    rdi,rbx
    cfa8:	call   ce90 <ofs_write.isra.12>
    cfad:	jmp    cf7c <remove_from_freelist+0x8c>
    cfaf:	call   2820 <__stack_chk_fail@plt>
    cfb4:	xchg   ax,ax
    cfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000cfc0 <tdb_free>:
    cfc0:	push   r15
    cfc2:	push   r14
    cfc4:	push   r13
    cfc6:	push   r12
    cfc8:	mov    r12d,esi
    cfcb:	push   rbp
    cfcc:	push   rbx
    cfcd:	mov    rbp,rdx
    cfd0:	mov    esi,0xffffffff
    cfd5:	mov    edx,0x1
    cfda:	mov    rbx,rdi
    cfdd:	sub    rsp,0x38
    cfe1:	mov    rax,QWORD PTR fs:0x28
    cfea:	mov    QWORD PTR [rsp+0x28],rax
    cfef:	xor    eax,eax
    cff1:	call   c680 <tdb_lock>
    cff6:	test   eax,eax
    cff8:	jne    d258 <tdb_free+0x298>
    cffe:	mov    eax,DWORD PTR [rbp+0x4]
    d001:	lea    r13d,[r12-0x4]
    d006:	mov    rdi,rbx
    d009:	lea    edx,[rax+0x18]
    d00c:	lea    esi,[rdx+r13*1]
    d010:	call   ce90 <ofs_write.isra.12>
    d015:	test   eax,eax
    d017:	mov    r14d,eax
    d01a:	jne    d1d0 <tdb_free+0x210>
    d020:	mov    eax,DWORD PTR [rbp+0x4]
    d023:	mov    edx,DWORD PTR [rbx+0x14]
    d026:	lea    eax,[r12+rax*1+0x18]
    d02b:	mov    r15,rax
    d02e:	add    rax,0x18
    d032:	cmp    rax,rdx
    d035:	jbe    d110 <tdb_free+0x150>
    d03b:	mov    esi,DWORD PTR [rbx+0x50]
    d03e:	xor    edx,edx
    d040:	mov    ecx,r13d
    d043:	lea    eax,[rsi-0x1]
    d046:	div    esi
    d048:	lea    eax,[rdx+0x1]
    d04b:	lea    rax,[rax*4+0xa8]
    d053:	cmp    rcx,rax
    d056:	ja     d158 <tdb_free+0x198>
    d05c:	mov    eax,DWORD PTR [rbp+0x4]
    d05f:	mov    rdi,rbx
    d062:	lea    edx,[rax+0x18]
    d065:	lea    esi,[rax+r12*1+0x14]
    d06a:	call   ce90 <ofs_write.isra.12>
    d06f:	cmp    eax,0xffffffff
    d072:	je     d1f0 <tdb_free+0x230>
    d078:	mov    DWORD PTR [rbp+0x14],0xd9fee666
    d07f:	mov    r8d,DWORD PTR [rbx+0xd4]
    d086:	mov    ecx,0x4
    d08b:	mov    rdx,rbp
    d08e:	mov    esi,0xa8
    d093:	mov    rdi,rbx
    d096:	and    r8d,0x10
    d09a:	call   c3d0 <tdb_read>
    d09f:	cmp    eax,0xffffffff
    d0a2:	je     d1a0 <tdb_free+0x1e0>
    d0a8:	mov    rdx,rbp
    d0ab:	mov    esi,r12d
    d0ae:	mov    rdi,rbx
    d0b1:	call   cd30 <rec_write>
    d0b6:	cmp    eax,0xffffffff
    d0b9:	je     d1a0 <tdb_free+0x1e0>
    d0bf:	mov    edx,r12d
    d0c2:	mov    esi,0xa8
    d0c7:	mov    rdi,rbx
    d0ca:	call   ce90 <ofs_write.isra.12>
    d0cf:	cmp    eax,0xffffffff
    d0d2:	je     d1a0 <tdb_free+0x1e0>
    d0d8:	mov    esi,0xffffffff
    d0dd:	mov    rdi,rbx
    d0e0:	call   c770 <tdb_unlock.isra.5>
    d0e5:	mov    rcx,QWORD PTR [rsp+0x28]
    d0ea:	xor    rcx,QWORD PTR fs:0x28
    d0f3:	mov    eax,r14d
    d0f6:	jne    d303 <tdb_free+0x343>
    d0fc:	add    rsp,0x38
    d100:	pop    rbx
    d101:	pop    rbp
    d102:	pop    r12
    d104:	pop    r13
    d106:	pop    r14
    d108:	pop    r15
    d10a:	ret    
    d10b:	nop    DWORD PTR [rax+rax*1+0x0]
    d110:	mov    r8d,DWORD PTR [rbx+0xd4]
    d117:	lea    rdx,[rsp+0x10]
    d11c:	mov    ecx,0x18
    d121:	mov    esi,r15d
    d124:	mov    rdi,rbx
    d127:	and    r8d,0x10
    d12b:	call   c3d0 <tdb_read>
    d130:	cmp    eax,0xffffffff
    d133:	jne    d210 <tdb_free+0x250>
    d139:	mov    ecx,r15d
    d13c:	lea    rdx,[rip+0x3ebd]        # 11000 <__PRETTY_FUNCTION__.11970+0x6a0>
    d143:	xor    esi,esi
    d145:	mov    rdi,rbx
    d148:	xor    eax,eax
    d14a:	call   QWORD PTR [rbx+0x100]
    d150:	jmp    d03b <tdb_free+0x7b>
    d155:	nop    DWORD PTR [rax]
    d158:	mov    r8d,DWORD PTR [rbx+0xd4]
    d15f:	lea    rdx,[rsp+0xc]
    d164:	mov    ecx,0x4
    d169:	mov    esi,r13d
    d16c:	mov    rdi,rbx
    d16f:	and    r8d,0x10
    d173:	call   c3d0 <tdb_read>
    d178:	cmp    eax,0xffffffff
    d17b:	jne    d268 <tdb_free+0x2a8>
    d181:	mov    ecx,r13d
    d184:	lea    rdx,[rip+0x3ec5]        # 11050 <__PRETTY_FUNCTION__.11970+0x6f0>
    d18b:	xor    esi,esi
    d18d:	mov    rdi,rbx
    d190:	xor    eax,eax
    d192:	call   QWORD PTR [rbx+0x100]
    d198:	jmp    d05c <tdb_free+0x9c>
    d19d:	nop    DWORD PTR [rax]
    d1a0:	mov    ecx,r12d
    d1a3:	lea    rdx,[rip+0x3f4e]        # 110f8 <__PRETTY_FUNCTION__.11970+0x798>
    d1aa:	xor    esi,esi
    d1ac:	mov    rdi,rbx
    d1af:	xor    eax,eax
    d1b1:	call   QWORD PTR [rbx+0x100]
    d1b7:	mov    esi,0xffffffff
    d1bc:	mov    rdi,rbx
    d1bf:	mov    r14d,0xffffffff
    d1c5:	call   c770 <tdb_unlock.isra.5>
    d1ca:	jmp    d0e5 <tdb_free+0x125>
    d1cf:	nop
    d1d0:	lea    rdx,[rip+0x3e01]        # 10fd8 <__PRETTY_FUNCTION__.11970+0x678>
    d1d7:	xor    esi,esi
    d1d9:	mov    rdi,rbx
    d1dc:	xor    eax,eax
    d1de:	call   QWORD PTR [rbx+0x100]
    d1e4:	jmp    d1b7 <tdb_free+0x1f7>
    d1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d1f0:	mov    ecx,r12d
    d1f3:	lea    rdx,[rip+0x3ed6]        # 110d0 <__PRETTY_FUNCTION__.11970+0x770>
    d1fa:	xor    esi,esi
    d1fc:	mov    rdi,rbx
    d1ff:	xor    eax,eax
    d201:	call   QWORD PTR [rbx+0x100]
    d207:	jmp    d1b7 <tdb_free+0x1f7>
    d209:	nop    DWORD PTR [rax+0x0]
    d210:	cmp    DWORD PTR [rsp+0x24],0xd9fee666
    d218:	jne    d03b <tdb_free+0x7b>
    d21e:	mov    edx,DWORD PTR [rsp+0x10]
    d222:	mov    esi,r15d
    d225:	mov    rdi,rbx
    d228:	call   cef0 <remove_from_freelist>
    d22d:	cmp    eax,0xffffffff
    d230:	jne    d2f4 <tdb_free+0x334>
    d236:	mov    ecx,r15d
    d239:	lea    rdx,[rip+0x3de8]        # 11028 <__PRETTY_FUNCTION__.11970+0x6c8>
    d240:	xor    esi,esi
    d242:	mov    rdi,rbx
    d245:	xor    eax,eax
    d247:	call   QWORD PTR [rbx+0x100]
    d24d:	jmp    d03b <tdb_free+0x7b>
    d252:	nop    WORD PTR [rax+rax*1+0x0]
    d258:	mov    r14d,0xffffffff
    d25e:	jmp    d0e5 <tdb_free+0x125>
    d263:	nop    DWORD PTR [rax+rax*1+0x0]
    d268:	mov    r13d,r12d
    d26b:	sub    r13d,DWORD PTR [rsp+0xc]
    d270:	mov    r8d,DWORD PTR [rbx+0xd4]
    d277:	lea    rdx,[rsp+0x10]
    d27c:	mov    ecx,0x18
    d281:	mov    rdi,rbx
    d284:	and    r8d,0x10
    d288:	mov    esi,r13d
    d28b:	call   c3d0 <tdb_read>
    d290:	cmp    eax,0xffffffff
    d293:	jne    d2b6 <tdb_free+0x2f6>
    d295:	mov    r8d,DWORD PTR [rsp+0xc]
    d29a:	mov    ecx,r13d
    d29d:	lea    rdx,[rip+0x3ddc]        # 11080 <__PRETTY_FUNCTION__.11970+0x720>
    d2a4:	xor    esi,esi
    d2a6:	mov    rdi,rbx
    d2a9:	xor    eax,eax
    d2ab:	call   QWORD PTR [rbx+0x100]
    d2b1:	jmp    d05c <tdb_free+0x9c>
    d2b6:	cmp    DWORD PTR [rsp+0x24],0xd9fee666
    d2be:	jne    d05c <tdb_free+0x9c>
    d2c4:	mov    edx,DWORD PTR [rsp+0x10]
    d2c8:	mov    esi,r13d
    d2cb:	mov    rdi,rbx
    d2ce:	call   cef0 <remove_from_freelist>
    d2d3:	cmp    eax,0xffffffff
    d2d6:	jne    d308 <tdb_free+0x348>
    d2d8:	mov    ecx,r13d
    d2db:	lea    rdx,[rip+0x3dc6]        # 110a8 <__PRETTY_FUNCTION__.11970+0x748>
    d2e2:	xor    esi,esi
    d2e4:	mov    rdi,rbx
    d2e7:	xor    eax,eax
    d2e9:	call   QWORD PTR [rbx+0x100]
    d2ef:	jmp    d05c <tdb_free+0x9c>
    d2f4:	mov    eax,DWORD PTR [rsp+0x14]
    d2f8:	add    eax,0x18
    d2fb:	add    DWORD PTR [rbp+0x4],eax
    d2fe:	jmp    d03b <tdb_free+0x7b>
    d303:	call   2820 <__stack_chk_fail@plt>
    d308:	mov    eax,DWORD PTR [rsp+0xc]
    d30c:	mov    r12d,r13d
    d30f:	add    DWORD PTR [rbp+0x4],eax
    d312:	jmp    d05c <tdb_free+0x9c>
    d317:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d320 <do_delete>:
    d320:	push   r13
    d322:	push   r12
    d324:	push   rbp
    d325:	push   rbx
    d326:	sub    rsp,0x38
    d32a:	mov    rax,QWORD PTR fs:0x28
    d333:	mov    QWORD PTR [rsp+0x28],rax
    d338:	xor    eax,eax
    d33a:	mov    eax,DWORD PTR [rdi+0x18]
    d33d:	test   eax,eax
    d33f:	jne    d420 <do_delete+0x100>
    d345:	lea    rax,[rdi+0xd8]
    d34c:	mov    rbp,rdi
    d34f:	mov    ebx,esi
    d351:	mov    r12,rdx
    d354:	nop    DWORD PTR [rax+0x0]
    d358:	cmp    ebx,DWORD PTR [rax+0x8]
    d35b:	je     d440 <do_delete+0x120>
    d361:	mov    rax,QWORD PTR [rax]
    d364:	test   rax,rax
    d367:	jne    d358 <do_delete+0x38>
    d369:	mov    r8d,0x1
    d36f:	mov    ecx,0x6
    d374:	mov    edx,0x1
    d379:	mov    esi,ebx
    d37b:	mov    rdi,rbp
    d37e:	call   c640 <tdb_brlock>
    d383:	cmp    eax,0xffffffff
    d386:	je     d440 <do_delete+0x120>
    d38c:	mov    r8d,DWORD PTR [rbp+0xd4]
    d393:	test   r8b,0x4
    d397:	jne    d3bb <do_delete+0x9b>
    d399:	xor    r8d,r8d
    d39c:	mov    ecx,0x6
    d3a1:	mov    edx,0x2
    d3a6:	mov    esi,ebx
    d3a8:	mov    rdi,rbp
    d3ab:	call   c4f0 <tdb_brlock.part.3>
    d3b0:	test   eax,eax
    d3b2:	jne    d420 <do_delete+0x100>
    d3b4:	mov    r8d,DWORD PTR [rbp+0xd4]
    d3bb:	mov    eax,DWORD PTR [r12+0x10]
    d3c0:	xor    edx,edx
    d3c2:	lea    rdi,[rsp+0xc]
    d3c7:	and    r8d,0x10
    d3cb:	mov    ecx,0x4
    d3d0:	div    DWORD PTR [rbp+0x50]
    d3d3:	lea    esi,[rdx*4+0xac]
    d3da:	mov    rdx,rdi
    d3dd:	mov    rdi,rbp
    d3e0:	call   c3d0 <tdb_read>
    d3e5:	cmp    eax,0xffffffff
    d3e8:	je     d420 <do_delete+0x100>
    d3ea:	mov    esi,DWORD PTR [rsp+0xc]
    d3ee:	lea    r13,[rsp+0x10]
    d3f3:	cmp    ebx,esi
    d3f5:	jne    d410 <do_delete+0xf0>
    d3f7:	jmp    d498 <do_delete+0x178>
    d3fc:	nop    DWORD PTR [rax+0x0]
    d400:	mov    esi,DWORD PTR [rsp+0x10]
    d404:	mov    eax,DWORD PTR [rsp+0xc]
    d408:	cmp    esi,ebx
    d40a:	mov    DWORD PTR [rsp+0xc],esi
    d40e:	je     d460 <do_delete+0x140>
    d410:	mov    rdx,r13
    d413:	mov    rdi,rbp
    d416:	call   c8b0 <rec_read>
    d41b:	cmp    eax,0xffffffff
    d41e:	jne    d400 <do_delete+0xe0>
    d420:	mov    eax,0xffffffff
    d425:	mov    rcx,QWORD PTR [rsp+0x28]
    d42a:	xor    rcx,QWORD PTR fs:0x28
    d433:	jne    d4ab <do_delete+0x18b>
    d435:	add    rsp,0x38
    d439:	pop    rbx
    d43a:	pop    rbp
    d43b:	pop    r12
    d43d:	pop    r13
    d43f:	ret    
    d440:	mov    DWORD PTR [r12+0x14],0xfee1dead
    d449:	mov    rdx,r12
    d44c:	mov    esi,ebx
    d44e:	mov    rdi,rbp
    d451:	call   cd30 <rec_write>
    d456:	jmp    d425 <do_delete+0x105>
    d458:	nop    DWORD PTR [rax+rax*1+0x0]
    d460:	test   eax,eax
    d462:	je     d498 <do_delete+0x178>
    d464:	mov    edx,DWORD PTR [r12]
    d468:	mov    esi,eax
    d46a:	mov    rdi,rbp
    d46d:	call   ce90 <ofs_write.isra.12>
    d472:	cmp    eax,0xffffffff
    d475:	je     d420 <do_delete+0x100>
    d477:	mov    rdx,r12
    d47a:	mov    esi,ebx
    d47c:	mov    rdi,rbp
    d47f:	call   cfc0 <tdb_free>
    d484:	cmp    eax,0xffffffff
    d487:	sete   al
    d48a:	movzx  eax,al
    d48d:	neg    eax
    d48f:	jmp    d425 <do_delete+0x105>
    d491:	nop    DWORD PTR [rax+0x0]
    d498:	mov    eax,DWORD PTR [r12+0x10]
    d49d:	xor    edx,edx
    d49f:	div    DWORD PTR [rbp+0x50]
    d4a2:	lea    eax,[rdx*4+0xac]
    d4a9:	jmp    d464 <do_delete+0x144>
    d4ab:	call   2820 <__stack_chk_fail@plt>

000000000000d4b0 <tdb_next_lock>:
    d4b0:	push   r14
    d4b2:	push   r13
    d4b4:	push   r12
    d4b6:	push   rbp
    d4b7:	mov    r12,rdx
    d4ba:	push   rbx
    d4bb:	mov    rbx,rdi
    d4be:	sub    rsp,0x10
    d4c2:	mov    edx,DWORD PTR [rsi+0x8]
    d4c5:	mov    edi,DWORD PTR [rdi+0x50]
    d4c8:	mov    rax,QWORD PTR fs:0x28
    d4d1:	mov    QWORD PTR [rsp+0x8],rax
    d4d6:	xor    eax,eax
    d4d8:	mov    eax,DWORD PTR [rsi+0xc]
    d4db:	test   edx,edx
    d4dd:	setne  r14b
    d4e1:	cmp    edi,eax
    d4e3:	jbe    d77a <tdb_next_lock+0x2ca>
    d4e9:	lea    r13,[rsp+0x4]
    d4ee:	mov    rbp,rsi
    d4f1:	movzx  r14d,r14b
    d4f5:	test   eax,eax
    d4f7:	je     d568 <tdb_next_lock+0xb8>
    d4f9:	test   edx,edx
    d4fb:	jne    d568 <tdb_next_lock+0xb8>
    d4fd:	mov    r8,QWORD PTR [rbx+0x8]
    d501:	test   r8,r8
    d504:	je     d738 <tdb_next_lock+0x288>
    d50a:	mov    esi,DWORD PTR [rbp+0xc]
    d50d:	mov    ecx,edi
    d50f:	cmp    edi,esi
    d511:	jbe    d559 <tdb_next_lock+0xa9>
    d513:	xor    edx,edx
    d515:	mov    eax,esi
    d517:	div    edi
    d519:	lea    eax,[rdx+0x1]
    d51c:	mov    r9d,DWORD PTR [r8+rax*4+0xa8]
    d524:	test   r9d,r9d
    d527:	jne    d56b <tdb_next_lock+0xbb>
    d529:	add    esi,0x1
    d52c:	jmp    d54f <tdb_next_lock+0x9f>
    d52e:	xchg   ax,ax
    d530:	xor    edx,edx
    d532:	mov    eax,esi
    d534:	lea    edi,[rsi+0x1]
    d537:	div    ecx
    d539:	mov    rax,QWORD PTR [rbx+0x8]
    d53d:	add    edx,0x1
    d540:	mov    r8d,DWORD PTR [rax+rdx*4+0xa8]
    d548:	test   r8d,r8d
    d54b:	jne    d56b <tdb_next_lock+0xbb>
    d54d:	mov    esi,edi
    d54f:	mov    DWORD PTR [rbp+0xc],esi
    d552:	mov    ecx,DWORD PTR [rbx+0x50]
    d555:	cmp    ecx,esi
    d557:	ja     d530 <tdb_next_lock+0x80>
    d559:	cmp    esi,ecx
    d55b:	jne    d56b <tdb_next_lock+0xbb>
    d55d:	jmp    d61d <tdb_next_lock+0x16d>
    d562:	nop    WORD PTR [rax+rax*1+0x0]
    d568:	mov    esi,DWORD PTR [rbp+0xc]
    d56b:	mov    edx,0x1
    d570:	mov    rdi,rbx
    d573:	call   c680 <tdb_lock>
    d578:	cmp    eax,0xffffffff
    d57b:	je     d67e <tdb_next_lock+0x1ce>
    d581:	mov    esi,DWORD PTR [rbp+0x8]
    d584:	test   esi,esi
    d586:	jne    d6a8 <tdb_next_lock+0x1f8>
    d58c:	mov    eax,DWORD PTR [rbp+0xc]
    d58f:	xor    edx,edx
    d591:	mov    r8d,DWORD PTR [rbx+0xd4]
    d598:	lea    rdi,[rbp+0x8]
    d59c:	mov    ecx,0x4
    d5a1:	div    DWORD PTR [rbx+0x50]
    d5a4:	and    r8d,0x10
    d5a8:	lea    esi,[rdx*4+0xac]
    d5af:	mov    rdx,rdi
    d5b2:	mov    rdi,rbx
    d5b5:	call   c3d0 <tdb_read>
    d5ba:	cmp    eax,0xffffffff
    d5bd:	je     d654 <tdb_next_lock+0x1a4>
    d5c3:	test   r14d,r14d
    d5c6:	mov    esi,DWORD PTR [rbp+0x8]
    d5c9:	je     d608 <tdb_next_lock+0x158>
    d5cb:	jmp    d6c0 <tdb_next_lock+0x210>
    d5d0:	mov    rdx,r12
    d5d3:	mov    rdi,rbx
    d5d6:	call   c8b0 <rec_read>
    d5db:	cmp    eax,0xffffffff
    d5de:	je     d654 <tdb_next_lock+0x1a4>
    d5e0:	mov    eax,DWORD PTR [rbp+0x8]
    d5e3:	mov    esi,DWORD PTR [r12]
    d5e7:	cmp    eax,esi
    d5e9:	je     d640 <tdb_next_lock+0x190>
    d5eb:	cmp    DWORD PTR [r12+0x14],0xfee1dead
    d5f4:	jne    d6e0 <tdb_next_lock+0x230>
    d5fa:	mov    DWORD PTR [rbp+0x8],esi
    d5fd:	mov    edx,DWORD PTR [rbx+0x18]
    d600:	test   edx,edx
    d602:	je     d718 <tdb_next_lock+0x268>
    d608:	test   esi,esi
    d60a:	jne    d5d0 <tdb_next_lock+0x120>
    d60c:	mov    esi,DWORD PTR [rbp+0xc]
    d60f:	mov    rdi,rbx
    d612:	xor    r14d,r14d
    d615:	call   c770 <tdb_unlock.isra.5>
    d61a:	mov    esi,DWORD PTR [rbp+0xc]
    d61d:	lea    eax,[rsi+0x1]
    d620:	mov    DWORD PTR [rbp+0xc],eax
    d623:	mov    edi,DWORD PTR [rbx+0x50]
    d626:	cmp    eax,edi
    d628:	jae    d77a <tdb_next_lock+0x2ca>
    d62e:	mov    edx,DWORD PTR [rbp+0x8]
    d631:	jmp    d4f5 <tdb_next_lock+0x45>
    d636:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d640:	lea    rdx,[rip+0x3ae1]        # 11128 <__PRETTY_FUNCTION__.11970+0x7c8>
    d647:	xor    esi,esi
    d649:	mov    rdi,rbx
    d64c:	xor    eax,eax
    d64e:	call   QWORD PTR [rbx+0x100]
    d654:	mov    esi,DWORD PTR [rbp+0xc]
    d657:	mov    DWORD PTR [rbp+0x8],0x0
    d65e:	mov    rdi,rbx
    d661:	call   c770 <tdb_unlock.isra.5>
    d666:	test   eax,eax
    d668:	je     d67e <tdb_next_lock+0x1ce>
    d66a:	lea    rdx,[rip+0x3ad7]        # 11148 <__PRETTY_FUNCTION__.11970+0x7e8>
    d671:	xor    esi,esi
    d673:	mov    rdi,rbx
    d676:	xor    eax,eax
    d678:	call   QWORD PTR [rbx+0x100]
    d67e:	mov    eax,0xffffffff
    d683:	mov    rcx,QWORD PTR [rsp+0x8]
    d688:	xor    rcx,QWORD PTR fs:0x28
    d691:	jne    d788 <tdb_next_lock+0x2d8>
    d697:	add    rsp,0x10
    d69b:	pop    rbx
    d69c:	pop    rbp
    d69d:	pop    r12
    d69f:	pop    r13
    d6a1:	pop    r14
    d6a3:	ret    
    d6a4:	nop    DWORD PTR [rax+0x0]
    d6a8:	mov    rdi,rbx
    d6ab:	call   c850 <unlock_record>
    d6b0:	test   eax,eax
    d6b2:	jne    d654 <tdb_next_lock+0x1a4>
    d6b4:	test   r14d,r14d
    d6b7:	mov    esi,DWORD PTR [rbp+0x8]
    d6ba:	je     d608 <tdb_next_lock+0x158>
    d6c0:	mov    rdx,r12
    d6c3:	mov    rdi,rbx
    d6c6:	call   c8b0 <rec_read>
    d6cb:	cmp    eax,0xffffffff
    d6ce:	je     d654 <tdb_next_lock+0x1a4>
    d6d0:	mov    esi,DWORD PTR [r12]
    d6d4:	mov    DWORD PTR [rbp+0x8],esi
    d6d7:	jmp    d608 <tdb_next_lock+0x158>
    d6dc:	nop    DWORD PTR [rax+0x0]
    d6e0:	test   eax,eax
    d6e2:	je     d683 <tdb_next_lock+0x1d3>
    d6e4:	test   BYTE PTR [rbx+0xd4],0x4
    d6eb:	jne    d683 <tdb_next_lock+0x1d3>
    d6ed:	xor    r8d,r8d
    d6f0:	xor    edx,edx
    d6f2:	mov    ecx,0x7
    d6f7:	mov    esi,eax
    d6f9:	mov    rdi,rbx
    d6fc:	call   c4f0 <tdb_brlock.part.3>
    d701:	test   eax,eax
    d703:	jne    d654 <tdb_next_lock+0x1a4>
    d709:	mov    eax,DWORD PTR [rbp+0x8]
    d70c:	jmp    d683 <tdb_next_lock+0x1d3>
    d711:	nop    DWORD PTR [rax+0x0]
    d718:	mov    rdx,r12
    d71b:	mov    esi,eax
    d71d:	mov    rdi,rbx
    d720:	call   d320 <do_delete>
    d725:	test   eax,eax
    d727:	jne    d654 <tdb_next_lock+0x1a4>
    d72d:	mov    esi,DWORD PTR [rbp+0x8]
    d730:	jmp    d608 <tdb_next_lock+0x158>
    d735:	nop    DWORD PTR [rax]
    d738:	xor    edx,edx
    d73a:	mov    r8d,DWORD PTR [rbx+0xd4]
    d741:	mov    ecx,0x4
    d746:	div    edi
    d748:	mov    rdi,rbx
    d74b:	and    r8d,0x10
    d74f:	lea    esi,[rdx*4+0xac]
    d756:	mov    rdx,r13
    d759:	call   c3d0 <tdb_read>
    d75e:	test   eax,eax
    d760:	mov    esi,DWORD PTR [rbp+0xc]
    d763:	jne    d56b <tdb_next_lock+0xbb>
    d769:	mov    ecx,DWORD PTR [rsp+0x4]
    d76d:	test   ecx,ecx
    d76f:	jne    d56b <tdb_next_lock+0xbb>
    d775:	jmp    d61d <tdb_next_lock+0x16d>
    d77a:	mov    DWORD PTR [rbx+0x28],0x0
    d781:	xor    eax,eax
    d783:	jmp    d683 <tdb_next_lock+0x1d3>
    d788:	call   2820 <__stack_chk_fail@plt>
    d78d:	nop    DWORD PTR [rax]

000000000000d790 <tdb_delete_hash>:
    d790:	push   rbp
    d791:	push   rbx
    d792:	mov    r8d,0x1
    d798:	mov    rbx,rdi
    d79b:	sub    rsp,0x28
    d79f:	mov    rbp,rsp
    d7a2:	mov    r9,rbp
    d7a5:	mov    rax,QWORD PTR fs:0x28
    d7ae:	mov    QWORD PTR [rsp+0x18],rax
    d7b3:	xor    eax,eax
    d7b5:	call   cb20 <tdb_find_lock_hash>
    d7ba:	test   eax,eax
    d7bc:	je     d818 <tdb_delete_hash+0x88>
    d7be:	mov    rdx,rbp
    d7c1:	mov    esi,eax
    d7c3:	mov    rdi,rbx
    d7c6:	call   d320 <do_delete>
    d7cb:	mov    ebp,eax
    d7cd:	mov    eax,DWORD PTR [rsp+0x10]
    d7d1:	xor    edx,edx
    d7d3:	mov    rdi,rbx
    d7d6:	div    DWORD PTR [rbx+0x50]
    d7d9:	mov    esi,edx
    d7db:	call   c770 <tdb_unlock.isra.5>
    d7e0:	test   eax,eax
    d7e2:	je     d7f8 <tdb_delete_hash+0x68>
    d7e4:	lea    rdx,[rip+0x3985]        # 11170 <__PRETTY_FUNCTION__.11970+0x810>
    d7eb:	xor    esi,esi
    d7ed:	mov    rdi,rbx
    d7f0:	xor    eax,eax
    d7f2:	call   QWORD PTR [rbx+0x100]
    d7f8:	mov    rcx,QWORD PTR [rsp+0x18]
    d7fd:	xor    rcx,QWORD PTR fs:0x28
    d806:	mov    eax,ebp
    d808:	jne    d81f <tdb_delete_hash+0x8f>
    d80a:	add    rsp,0x28
    d80e:	pop    rbx
    d80f:	pop    rbp
    d810:	ret    
    d811:	nop    DWORD PTR [rax+0x0]
    d818:	mov    ebp,0xffffffff
    d81d:	jmp    d7f8 <tdb_delete_hash+0x68>
    d81f:	call   2820 <__stack_chk_fail@plt>
    d824:	xchg   ax,ax
    d826:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d830 <expand_file>:
    d830:	push   r15
    d832:	push   r14
    d834:	mov    r15,rdi
    d837:	push   r13
    d839:	push   r12
    d83b:	mov    r13d,esi
    d83e:	push   rbp
    d83f:	push   rbx
    d840:	lea    ebx,[rsi+rdx*1]
    d843:	mov    ebp,edx
    d845:	xor    edx,edx
    d847:	sub    rsp,0x428
    d84e:	mov    edi,DWORD PTR [rdi+0x10]
    d851:	lea    esi,[rbx-0x1]
    d854:	mov    rax,QWORD PTR fs:0x28
    d85d:	mov    QWORD PTR [rsp+0x418],rax
    d865:	xor    eax,eax
    d867:	mov    BYTE PTR [rsp+0xf],0x0
    d86c:	call   28c0 <lseek@plt>
    d871:	mov    edx,ebx
    d873:	sub    rdx,0x1
    d877:	cmp    rax,rdx
    d87a:	jne    d970 <expand_file+0x140>
    d880:	mov    edi,DWORD PTR [r15+0x10]
    d884:	lea    rsi,[rsp+0xf]
    d889:	mov    edx,0x1
    d88e:	call   27b0 <write@plt>
    d893:	cmp    rax,0x1
    d897:	jne    d970 <expand_file+0x140>
    d89d:	lea    r14,[rsp+0x10]
    d8a2:	mov    ecx,0x80
    d8a7:	movabs rax,0x4242424242424242
    d8b1:	test   ebp,ebp
    d8b3:	mov    rdi,r14
    d8b6:	rep stos QWORD PTR es:[rdi],rax
    d8b9:	jne    d8d9 <expand_file+0xa9>
    d8bb:	jmp    d930 <expand_file+0x100>
    d8bd:	nop    DWORD PTR [rax]
    d8c0:	mov    edi,DWORD PTR [r15+0x10]
    d8c4:	mov    edx,ebx
    d8c6:	mov    rsi,r14
    d8c9:	call   27b0 <write@plt>
    d8ce:	cmp    ebx,eax
    d8d0:	jne    d938 <expand_file+0x108>
    d8d2:	add    r13d,ebx
    d8d5:	sub    ebp,ebx
    d8d7:	je     d930 <expand_file+0x100>
    d8d9:	mov    edi,DWORD PTR [r15+0x10]
    d8dd:	cmp    ebp,0x400
    d8e3:	mov    r12d,r13d
    d8e6:	mov    ebx,0x400
    d8eb:	mov    rsi,r12
    d8ee:	cmovbe ebx,ebp
    d8f1:	xor    edx,edx
    d8f3:	call   28c0 <lseek@plt>
    d8f8:	cmp    r12,rax
    d8fb:	je     d8c0 <expand_file+0x90>
    d8fd:	mov    eax,0xffffffff
    d902:	mov    rcx,QWORD PTR [rsp+0x418]
    d90a:	xor    rcx,QWORD PTR fs:0x28
    d913:	jne    d991 <expand_file+0x161>
    d915:	add    rsp,0x428
    d91c:	pop    rbx
    d91d:	pop    rbp
    d91e:	pop    r12
    d920:	pop    r13
    d922:	pop    r14
    d924:	pop    r15
    d926:	ret    
    d927:	nop    WORD PTR [rax+rax*1+0x0]
    d930:	xor    eax,eax
    d932:	jmp    d902 <expand_file+0xd2>
    d934:	nop    DWORD PTR [rax+0x0]
    d938:	call   2750 <__errno_location@plt>
    d93d:	mov    edi,DWORD PTR [rax]
    d93f:	mov    rbp,QWORD PTR [r15+0x100]
    d946:	call   2c30 <strerror@plt>
    d94b:	lea    rdx,[rip+0x3866]        # 111b8 <__PRETTY_FUNCTION__.11970+0x858>
    d952:	mov    r8,rax
    d955:	mov    ecx,ebx
    d957:	xor    eax,eax
    d959:	xor    esi,esi
    d95b:	mov    rdi,r15
    d95e:	call   rbp
    d960:	mov    eax,0xffffffff
    d965:	jmp    d902 <expand_file+0xd2>
    d967:	nop    WORD PTR [rax+rax*1+0x0]
    d970:	call   2750 <__errno_location@plt>
    d975:	mov    edi,DWORD PTR [rax]
    d977:	mov    rbp,QWORD PTR [r15+0x100]
    d97e:	call   2c30 <strerror@plt>
    d983:	mov    ecx,ebx
    d985:	mov    r8,rax
    d988:	lea    rdx,[rip+0x3809]        # 11198 <__PRETTY_FUNCTION__.11970+0x838>
    d98f:	jmp    d957 <expand_file+0x127>
    d991:	call   2820 <__stack_chk_fail@plt>
    d996:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d9a0 <tdb_error>:
    d9a0:	mov    eax,DWORD PTR [rdi+0x28]
    d9a3:	ret    
    d9a4:	xchg   ax,ax
    d9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d9b0 <tdb_errorstr>:
    d9b0:	mov    esi,DWORD PTR [rdi+0x28]
    d9b3:	xor    ecx,ecx
    d9b5:	lea    rdi,[rip+0x207f04]        # 2158c0 <emap>
    d9bc:	xor    eax,eax
    d9be:	mov    rdx,rdi
    d9c1:	cmp    esi,ecx
    d9c3:	je     d9d7 <tdb_errorstr+0x27>
    d9c5:	add    eax,0x1
    d9c8:	add    rdx,0x10
    d9cc:	cmp    eax,0x8
    d9cf:	je     d9e8 <tdb_errorstr+0x38>
    d9d1:	mov    ecx,DWORD PTR [rdx]
    d9d3:	cmp    esi,ecx
    d9d5:	jne    d9c5 <tdb_errorstr+0x15>
    d9d7:	shl    rax,0x4
    d9db:	mov    rax,QWORD PTR [rdi+rax*1+0x8]
    d9e0:	ret    
    d9e1:	nop    DWORD PTR [rax+0x0]
    d9e8:	lea    rax,[rip+0x3220]        # 10c0f <__PRETTY_FUNCTION__.11970+0x2af>
    d9ef:	ret    

000000000000d9f0 <tdb_fetch>:
    d9f0:	push   r12
    d9f2:	push   rbp
    d9f3:	push   rbx
    d9f4:	mov    rbx,rdi
    d9f7:	sub    rsp,0x30
    d9fb:	mov    QWORD PTR [rsp],rsi
    d9ff:	mov    QWORD PTR [rsp+0x8],rdx
    da04:	mov    rdi,rsp
    da07:	mov    rax,QWORD PTR fs:0x28
    da10:	mov    QWORD PTR [rsp+0x28],rax
    da15:	xor    eax,eax
    da17:	call   QWORD PTR [rbx+0x108]
    da1d:	mov    rsi,QWORD PTR [rsp]
    da21:	mov    rdx,QWORD PTR [rsp+0x8]
    da26:	lea    r9,[rsp+0x10]
    da2b:	xor    r8d,r8d
    da2e:	mov    ecx,eax
    da30:	mov    rdi,rbx
    da33:	call   cb20 <tdb_find_lock_hash>
    da38:	test   eax,eax
    da3a:	jne    da68 <tdb_fetch+0x78>
    da3c:	mov    rax,QWORD PTR [rip+0x20b93d]        # 219380 <tdb_null>
    da43:	mov    rdx,QWORD PTR [rip+0x20b93e]        # 219388 <tdb_null+0x8>
    da4a:	mov    rcx,QWORD PTR [rsp+0x28]
    da4f:	xor    rcx,QWORD PTR fs:0x28
    da58:	jne    da9e <tdb_fetch+0xae>
    da5a:	add    rsp,0x30
    da5e:	pop    rbx
    da5f:	pop    rbp
    da60:	pop    r12
    da62:	ret    
    da63:	nop    DWORD PTR [rax+rax*1+0x0]
    da68:	mov    edx,DWORD PTR [rsp+0x18]
    da6c:	mov    rdi,rbx
    da6f:	lea    esi,[rax+rdx*1+0x18]
    da73:	mov    edx,DWORD PTR [rsp+0x1c]
    da77:	call   cba0 <tdb_alloc_read>
    da7c:	mov    r12,rax
    da7f:	mov    eax,DWORD PTR [rsp+0x20]
    da83:	xor    edx,edx
    da85:	mov    ebp,DWORD PTR [rsp+0x1c]
    da89:	mov    rdi,rbx
    da8c:	div    DWORD PTR [rbx+0x50]
    da8f:	mov    esi,edx
    da91:	call   c770 <tdb_unlock.isra.5>
    da96:	mov    rax,r12
    da99:	mov    rdx,rbp
    da9c:	jmp    da4a <tdb_fetch+0x5a>
    da9e:	call   2820 <__stack_chk_fail@plt>
    daa3:	nop    DWORD PTR [rax]
    daa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000dab0 <tdb_traverse>:
    dab0:	push   r15
    dab2:	push   r14
    dab4:	push   r13
    dab6:	push   r12
    dab8:	mov    r12,rsi
    dabb:	push   rbp
    dabc:	push   rbx
    dabd:	xor    ebp,ebp
    dabf:	mov    rbx,rdi
    dac2:	sub    rsp,0x58
    dac6:	mov    rax,QWORD PTR fs:0x28
    dacf:	mov    QWORD PTR [rsp+0x48],rax
    dad4:	xor    eax,eax
    dad6:	mov    rax,QWORD PTR [rdi+0xd8]
    dadd:	mov    QWORD PTR [rsp+0x18],rdx
    dae2:	mov    QWORD PTR [rsp+0x28],0x0
    daeb:	mov    QWORD PTR [rsp+0x20],rax
    daf0:	lea    rax,[rsp+0x20]
    daf5:	mov    QWORD PTR [rsp+0x8],rax
    dafa:	mov    QWORD PTR [rdi+0xd8],rax
    db01:	lea    rax,[rsp+0x30]
    db06:	mov    QWORD PTR [rsp+0x10],rax
    db0b:	jmp    db89 <tdb_traverse+0xd9>
    db0d:	nop    DWORD PTR [rax]
    db10:	mov    eax,DWORD PTR [rsp+0x28]
    db14:	mov    edx,DWORD PTR [rsp+0x3c]
    db18:	mov    rdi,rbx
    db1b:	add    edx,DWORD PTR [rsp+0x38]
    db1f:	add    ebp,0x1
    db22:	lea    esi,[rax+0x18]
    db25:	call   cba0 <tdb_alloc_read>
    db2a:	test   rax,rax
    db2d:	mov    r15,rax
    db30:	je     dbe0 <tdb_traverse+0x130>
    db36:	mov    r14d,DWORD PTR [rsp+0x38]
    db3b:	mov    esi,DWORD PTR [rsp+0x2c]
    db3f:	mov    rdi,rbx
    db42:	mov    r13d,DWORD PTR [rsp+0x3c]
    db47:	lea    rcx,[rax+r14*1]
    db4b:	mov    QWORD PTR [rsp],rcx
    db4f:	call   c770 <tdb_unlock.isra.5>
    db54:	test   eax,eax
    db56:	jne    dbf0 <tdb_traverse+0x140>
    db5c:	test   r12,r12
    db5f:	je     db81 <tdb_traverse+0xd1>
    db61:	mov    r9,QWORD PTR [rsp+0x18]
    db66:	mov    rcx,QWORD PTR [rsp]
    db6a:	mov    r8,r13
    db6d:	mov    rsi,r15
    db70:	mov    rdx,r14
    db73:	mov    rdi,rbx
    db76:	call   r12
    db79:	test   eax,eax
    db7b:	jne    dc08 <tdb_traverse+0x158>
    db81:	mov    rdi,r15
    db84:	call   a6a0 <talloc_free>
    db89:	mov    rdx,QWORD PTR [rsp+0x10]
    db8e:	mov    rsi,QWORD PTR [rsp+0x8]
    db93:	mov    rdi,rbx
    db96:	call   d4b0 <tdb_next_lock>
    db9b:	cmp    eax,0x0
    db9e:	jg     db10 <tdb_traverse+0x60>
    dba4:	mov    rax,QWORD PTR [rsp+0x20]
    dba9:	mov    QWORD PTR [rbx+0xd8],rax
    dbb0:	mov    eax,0xffffffff
    dbb5:	cmovne ebp,eax
    dbb8:	mov    rcx,QWORD PTR [rsp+0x48]
    dbbd:	xor    rcx,QWORD PTR fs:0x28
    dbc6:	mov    eax,ebp
    dbc8:	jne    dc82 <tdb_traverse+0x1d2>
    dbce:	add    rsp,0x58
    dbd2:	pop    rbx
    dbd3:	pop    rbp
    dbd4:	pop    r12
    dbd6:	pop    r13
    dbd8:	pop    r14
    dbda:	pop    r15
    dbdc:	ret    
    dbdd:	nop    DWORD PTR [rax]
    dbe0:	mov    esi,DWORD PTR [rsp+0x2c]
    dbe4:	mov    rdi,rbx
    dbe7:	call   c770 <tdb_unlock.isra.5>
    dbec:	test   eax,eax
    dbee:	je     dc48 <tdb_traverse+0x198>
    dbf0:	mov    rax,QWORD PTR [rsp+0x20]
    dbf5:	mov    ebp,0xffffffff
    dbfa:	mov    QWORD PTR [rbx+0xd8],rax
    dc01:	jmp    dbb8 <tdb_traverse+0x108>
    dc03:	nop    DWORD PTR [rax+rax*1+0x0]
    dc08:	mov    esi,DWORD PTR [rsp+0x28]
    dc0c:	mov    rdi,rbx
    dc0f:	call   c850 <unlock_record>
    dc14:	test   eax,eax
    dc16:	je     dc2c <tdb_traverse+0x17c>
    dc18:	lea    rdx,[rip+0x3601]        # 11220 <__PRETTY_FUNCTION__.11970+0x8c0>
    dc1f:	xor    esi,esi
    dc21:	mov    rdi,rbx
    dc24:	xor    eax,eax
    dc26:	call   QWORD PTR [rbx+0x100]
    dc2c:	mov    rax,QWORD PTR [rsp+0x20]
    dc31:	mov    rdi,r15
    dc34:	mov    QWORD PTR [rbx+0xd8],rax
    dc3b:	call   a6a0 <talloc_free>
    dc40:	jmp    dbb8 <tdb_traverse+0x108>
    dc45:	nop    DWORD PTR [rax]
    dc48:	mov    esi,DWORD PTR [rsp+0x28]
    dc4c:	mov    rdi,rbx
    dc4f:	call   c850 <unlock_record>
    dc54:	test   eax,eax
    dc56:	je     dbf0 <tdb_traverse+0x140>
    dc58:	xor    eax,eax
    dc5a:	lea    rdx,[rip+0x357f]        # 111e0 <__PRETTY_FUNCTION__.11970+0x880>
    dc61:	xor    esi,esi
    dc63:	mov    rdi,rbx
    dc66:	mov    ebp,0xffffffff
    dc6b:	call   QWORD PTR [rbx+0x100]
    dc71:	mov    rax,QWORD PTR [rsp+0x20]
    dc76:	mov    QWORD PTR [rbx+0xd8],rax
    dc7d:	jmp    dbb8 <tdb_traverse+0x108>
    dc82:	call   2820 <__stack_chk_fail@plt>
    dc87:	nop    WORD PTR [rax+rax*1+0x0]

000000000000dc90 <tdb_firstkey>:
    dc90:	push   r12
    dc92:	push   rbp
    dc93:	push   rbx
    dc94:	mov    rbx,rdi
    dc97:	sub    rsp,0x20
    dc9b:	mov    esi,DWORD PTR [rdi+0xe0]
    dca1:	mov    rax,QWORD PTR fs:0x28
    dcaa:	mov    QWORD PTR [rsp+0x18],rax
    dcaf:	xor    eax,eax
    dcb1:	call   c850 <unlock_record>
    dcb6:	test   eax,eax
    dcb8:	je     dce8 <tdb_firstkey+0x58>
    dcba:	mov    rax,QWORD PTR [rip+0x20b6bf]        # 219380 <tdb_null>
    dcc1:	mov    rdx,QWORD PTR [rip+0x20b6c0]        # 219388 <tdb_null+0x8>
    dcc8:	mov    rcx,QWORD PTR [rsp+0x18]
    dccd:	xor    rcx,QWORD PTR fs:0x28
    dcd6:	jne    dd5c <tdb_firstkey+0xcc>
    dcdc:	add    rsp,0x20
    dce0:	pop    rbx
    dce1:	pop    rbp
    dce2:	pop    r12
    dce4:	ret    
    dce5:	nop    DWORD PTR [rax]
    dce8:	lea    rsi,[rbx+0xd8]
    dcef:	mov    QWORD PTR [rbx+0xe0],0x0
    dcfa:	mov    rdx,rsp
    dcfd:	mov    rdi,rbx
    dd00:	call   d4b0 <tdb_next_lock>
    dd05:	test   eax,eax
    dd07:	jle    dcba <tdb_firstkey+0x2a>
    dd09:	mov    ebp,DWORD PTR [rsp+0x8]
    dd0d:	mov    eax,DWORD PTR [rbx+0xe0]
    dd13:	mov    rdi,rbx
    dd16:	lea    esi,[rax+0x18]
    dd19:	mov    rdx,rbp
    dd1c:	call   cba0 <tdb_alloc_read>
    dd21:	mov    r12,rax
    dd24:	mov    eax,DWORD PTR [rbx+0xe4]
    dd2a:	xor    edx,edx
    dd2c:	mov    rdi,rbx
    dd2f:	div    DWORD PTR [rbx+0x50]
    dd32:	mov    esi,edx
    dd34:	call   c770 <tdb_unlock.isra.5>
    dd39:	test   eax,eax
    dd3b:	je     dd51 <tdb_firstkey+0xc1>
    dd3d:	lea    rdx,[rip+0x3504]        # 11248 <__PRETTY_FUNCTION__.11970+0x8e8>
    dd44:	xor    esi,esi
    dd46:	mov    rdi,rbx
    dd49:	xor    eax,eax
    dd4b:	call   QWORD PTR [rbx+0x100]
    dd51:	mov    rax,r12
    dd54:	mov    rdx,rbp
    dd57:	jmp    dcc8 <tdb_firstkey+0x38>
    dd5c:	call   2820 <__stack_chk_fail@plt>
    dd61:	nop    DWORD PTR [rax+rax*1+0x0]
    dd66:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000dd70 <tdb_nextkey>:
    dd70:	push   r13
    dd72:	push   r12
    dd74:	push   rbp
    dd75:	push   rbx
    dd76:	mov    rbx,rdi
    dd79:	sub    rsp,0x38
    dd7d:	mov    QWORD PTR [rsp+0x8],rdx
    dd82:	mov    edx,DWORD PTR [rdi+0xe0]
    dd88:	lea    rbp,[rsp+0x10]
    dd8d:	mov    rax,QWORD PTR fs:0x28
    dd96:	mov    QWORD PTR [rsp+0x28],rax
    dd9b:	xor    eax,eax
    dd9d:	mov    QWORD PTR [rsp],rsi
    dda1:	test   edx,edx
    dda3:	jne    deb0 <tdb_nextkey+0x140>
    dda9:	mov    rdi,rsp
    ddac:	call   QWORD PTR [rbx+0x108]
    ddb2:	mov    rsi,QWORD PTR [rsp]
    ddb6:	mov    rdx,QWORD PTR [rsp+0x8]
    ddbb:	mov    r9,rbp
    ddbe:	mov    r8d,0x1
    ddc4:	mov    ecx,eax
    ddc6:	mov    rdi,rbx
    ddc9:	call   cb20 <tdb_find_lock_hash>
    ddce:	test   eax,eax
    ddd0:	mov    esi,eax
    ddd2:	mov    DWORD PTR [rbx+0xe0],eax
    ddd8:	je     de80 <tdb_nextkey+0x110>
    ddde:	mov    eax,DWORD PTR [rsp+0x20]
    dde2:	xor    edx,edx
    dde4:	div    DWORD PTR [rbx+0x50]
    dde7:	test   BYTE PTR [rbx+0xd4],0x4
    ddee:	mov    r13d,edx
    ddf1:	mov    DWORD PTR [rbx+0xe4],edx
    ddf7:	je     dfc0 <tdb_nextkey+0x250>
    ddfd:	lea    rsi,[rbx+0xd8]
    de04:	mov    rdx,rbp
    de07:	mov    rdi,rbx
    de0a:	call   d4b0 <tdb_next_lock>
    de0f:	test   eax,eax
    de11:	jg     df70 <tdb_nextkey+0x200>
    de17:	xor    ebp,ebp
    de19:	xor    r12d,r12d
    de1c:	xor    edx,edx
    de1e:	mov    eax,r13d
    de21:	mov    rdi,rbx
    de24:	div    DWORD PTR [rbx+0x50]
    de27:	mov    esi,edx
    de29:	call   c770 <tdb_unlock.isra.5>
    de2e:	test   eax,eax
    de30:	je     de46 <tdb_nextkey+0xd6>
    de32:	lea    rdx,[rip+0x346f]        # 112a8 <__PRETTY_FUNCTION__.11970+0x948>
    de39:	xor    esi,esi
    de3b:	mov    rdi,rbx
    de3e:	xor    eax,eax
    de40:	call   QWORD PTR [rbx+0x100]
    de46:	mov    rax,r12
    de49:	mov    rdx,rbp
    de4c:	jmp    de8e <tdb_nextkey+0x11e>
    de4e:	xchg   ax,ax
    de50:	call   2750 <__errno_location@plt>
    de55:	mov    edi,DWORD PTR [rax]
    de57:	mov    rbp,QWORD PTR [rbx+0x100]
    de5e:	call   2c30 <strerror@plt>
    de63:	lea    rdx,[rip+0x3416]        # 11280 <__PRETTY_FUNCTION__.11970+0x920>
    de6a:	mov    rcx,rax
    de6d:	xor    esi,esi
    de6f:	mov    rdi,rbx
    de72:	xor    eax,eax
    de74:	call   rbp
    de76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    de80:	mov    rax,QWORD PTR [rip+0x20b4f9]        # 219380 <tdb_null>
    de87:	mov    rdx,QWORD PTR [rip+0x20b4fa]        # 219388 <tdb_null+0x8>
    de8e:	mov    rcx,QWORD PTR [rsp+0x28]
    de93:	xor    rcx,QWORD PTR fs:0x28
    de9c:	jne    dff8 <tdb_nextkey+0x288>
    dea2:	add    rsp,0x38
    dea6:	pop    rbx
    dea7:	pop    rbp
    dea8:	pop    r12
    deaa:	pop    r13
    deac:	ret    
    dead:	nop    DWORD PTR [rax]
    deb0:	mov    esi,DWORD PTR [rdi+0xe4]
    deb6:	mov    edx,0x1
    debb:	call   c680 <tdb_lock>
    dec0:	test   eax,eax
    dec2:	jne    de80 <tdb_nextkey+0x110>
    dec4:	mov    esi,DWORD PTR [rbx+0xe0]
    deca:	mov    rdx,rbp
    decd:	mov    rdi,rbx
    ded0:	call   c8b0 <rec_read>
    ded5:	cmp    eax,0xffffffff
    ded8:	je     dff0 <tdb_nextkey+0x280>
    dede:	mov    eax,DWORD PTR [rbx+0xe0]
    dee4:	mov    edx,DWORD PTR [rsp+0x18]
    dee8:	mov    rdi,rbx
    deeb:	lea    esi,[rax+0x18]
    deee:	call   cba0 <tdb_alloc_read>
    def3:	test   rax,rax
    def6:	mov    r12,rax
    def9:	je     dff0 <tdb_nextkey+0x280>
    deff:	mov    rdx,QWORD PTR [rsp+0x8]
    df04:	mov    rsi,QWORD PTR [rsp]
    df08:	mov    rdi,rax
    df0b:	call   2990 <memcmp@plt>
    df10:	test   eax,eax
    df12:	je     df58 <tdb_nextkey+0x1e8>
    df14:	mov    esi,DWORD PTR [rbx+0xe0]
    df1a:	mov    rdi,rbx
    df1d:	call   c850 <unlock_record>
    df22:	test   eax,eax
    df24:	jne    de80 <tdb_nextkey+0x110>
    df2a:	mov    esi,DWORD PTR [rbx+0xe4]
    df30:	mov    rdi,rbx
    df33:	call   c770 <tdb_unlock.isra.5>
    df38:	test   eax,eax
    df3a:	jne    de80 <tdb_nextkey+0x110>
    df40:	test   r12,r12
    df43:	mov    DWORD PTR [rbx+0xe0],0x0
    df4d:	je     dda9 <tdb_nextkey+0x39>
    df53:	nop    DWORD PTR [rax+rax*1+0x0]
    df58:	mov    rdi,r12
    df5b:	call   a6a0 <talloc_free>
    df60:	mov    eax,DWORD PTR [rbx+0xe0]
    df66:	test   eax,eax
    df68:	jne    dfda <tdb_nextkey+0x26a>
    df6a:	jmp    dda9 <tdb_nextkey+0x39>
    df6f:	nop
    df70:	mov    ebp,DWORD PTR [rsp+0x18]
    df74:	mov    eax,DWORD PTR [rbx+0xe0]
    df7a:	mov    rdi,rbx
    df7d:	lea    esi,[rax+0x18]
    df80:	mov    rdx,rbp
    df83:	call   cba0 <tdb_alloc_read>
    df88:	mov    esi,DWORD PTR [rbx+0xe4]
    df8e:	mov    rdi,rbx
    df91:	mov    r12,rax
    df94:	call   c770 <tdb_unlock.isra.5>
    df99:	test   eax,eax
    df9b:	je     de1c <tdb_nextkey+0xac>
    dfa1:	lea    rdx,[rip+0x3300]        # 112a8 <__PRETTY_FUNCTION__.11970+0x948>
    dfa8:	xor    esi,esi
    dfaa:	mov    rdi,rbx
    dfad:	xor    eax,eax
    dfaf:	call   QWORD PTR [rbx+0x100]
    dfb5:	jmp    de1c <tdb_nextkey+0xac>
    dfba:	nop    WORD PTR [rax+rax*1+0x0]
    dfc0:	xor    r8d,r8d
    dfc3:	xor    edx,edx
    dfc5:	mov    ecx,0x7
    dfca:	mov    rdi,rbx
    dfcd:	call   c4f0 <tdb_brlock.part.3>
    dfd2:	test   eax,eax
    dfd4:	jne    de50 <tdb_nextkey+0xe0>
    dfda:	mov    r13d,DWORD PTR [rbx+0xe4]
    dfe1:	jmp    ddfd <tdb_nextkey+0x8d>
    dfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dff0:	xor    r12d,r12d
    dff3:	jmp    df14 <tdb_nextkey+0x1a4>
    dff8:	call   2820 <__stack_chk_fail@plt>
    dffd:	nop    DWORD PTR [rax]

000000000000e000 <tdb_delete>:
    e000:	push   rbx
    e001:	mov    rbx,rdi
    e004:	sub    rsp,0x10
    e008:	mov    QWORD PTR [rsp],rsi
    e00c:	mov    QWORD PTR [rsp+0x8],rdx
    e011:	mov    rdi,rsp
    e014:	call   QWORD PTR [rbx+0x108]
    e01a:	mov    rsi,QWORD PTR [rsp]
    e01e:	mov    rdx,QWORD PTR [rsp+0x8]
    e023:	mov    rdi,rbx
    e026:	mov    ecx,eax
    e028:	call   d790 <tdb_delete_hash>
    e02d:	add    rsp,0x10
    e031:	pop    rbx
    e032:	ret    
    e033:	nop    DWORD PTR [rax]
    e036:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e040 <tdb_store>:
    e040:	push   r15
    e042:	push   r14
    e044:	mov    r14,rcx
    e047:	push   r13
    e049:	push   r12
    e04b:	mov    r13d,r9d
    e04e:	push   rbp
    e04f:	push   rbx
    e050:	mov    rbx,rdi
    e053:	mov    r12,r8
    e056:	sub    rsp,0xa8
    e05d:	mov    QWORD PTR [rsp+0x40],rsi
    e062:	mov    QWORD PTR [rsp+0x48],rdx
    e067:	lea    rdi,[rsp+0x40]
    e06c:	mov    rax,QWORD PTR fs:0x28
    e075:	mov    QWORD PTR [rsp+0x98],rax
    e07d:	xor    eax,eax
    e07f:	call   QWORD PTR [rbx+0x108]
    e085:	xor    edx,edx
    e087:	mov    ebp,eax
    e089:	mov    rdi,rbx
    e08c:	div    DWORD PTR [rbx+0x50]
    e08f:	mov    esi,edx
    e091:	mov    edx,0x1
    e096:	call   c680 <tdb_lock>
    e09b:	cmp    eax,0xffffffff
    e09e:	je     e658 <tdb_store+0x618>
    e0a4:	cmp    r13d,0x2
    e0a8:	je     e320 <tdb_store+0x2e0>
    e0ae:	mov    r15,QWORD PTR [rsp+0x48]
    e0b3:	lea    rax,[rsp+0x80]
    e0bb:	mov    rsi,QWORD PTR [rsp+0x40]
    e0c0:	mov    ecx,ebp
    e0c2:	mov    rdi,rbx
    e0c5:	mov    r8,rax
    e0c8:	mov    QWORD PTR [rsp+0x8],rax
    e0cd:	mov    rdx,r15
    e0d0:	call   c940 <tdb_find>
    e0d5:	test   eax,eax
    e0d7:	mov    r8d,eax
    e0da:	je     e14c <tdb_store+0x10c>
    e0dc:	mov    edx,DWORD PTR [rsp+0x84]
    e0e3:	lea    rax,[r15+r12*1+0x4]
    e0e8:	cmp    rdx,rax
    e0eb:	jb     e162 <tdb_store+0x122>
    e0ed:	mov    eax,DWORD PTR [rsp+0x88]
    e0f4:	mov    ecx,r12d
    e0f7:	mov    rdx,r14
    e0fa:	mov    rdi,rbx
    e0fd:	mov    DWORD PTR [rsp+0x10],r8d
    e102:	lea    esi,[r8+rax*1+0x18]
    e107:	call   cc40 <tdb_write>
    e10c:	cmp    eax,0xffffffff
    e10f:	je     e14c <tdb_store+0x10c>
    e111:	mov    eax,DWORD PTR [rsp+0x8c]
    e118:	xor    r15d,r15d
    e11b:	mov    r8d,DWORD PTR [rsp+0x10]
    e120:	cmp    rax,r12
    e123:	je     e2de <tdb_store+0x29e>
    e129:	mov    rdx,QWORD PTR [rsp+0x8]
    e12e:	mov    esi,r8d
    e131:	mov    rdi,rbx
    e134:	mov    DWORD PTR [rsp+0x8c],r12d
    e13c:	call   cd30 <rec_write>
    e141:	test   eax,eax
    e143:	mov    r15d,eax
    e146:	je     e2de <tdb_store+0x29e>
    e14c:	cmp    DWORD PTR [rbx+0x28],0x8
    e150:	jne    e162 <tdb_store+0x122>
    e152:	cmp    r13d,0x3
    e156:	mov    r15d,0xffffffff
    e15c:	je     e2de <tdb_store+0x29e>
    e162:	mov    rsi,QWORD PTR [rsp+0x40]
    e167:	mov    rdx,QWORD PTR [rsp+0x48]
    e16c:	mov    ecx,ebp
    e16e:	mov    DWORD PTR [rbx+0x28],0x0
    e175:	mov    rdi,rbx
    e178:	call   d790 <tdb_delete_hash>
    e17d:	mov    rsi,QWORD PTR [rsp+0x48]
    e182:	lea    rdx,[rip+0x2a99]        # 10c22 <__PRETTY_FUNCTION__.11970+0x2c2>
    e189:	mov    rdi,rbx
    e18c:	add    rsi,r12
    e18f:	call   a240 <talloc_named_const>
    e194:	test   rax,rax
    e197:	mov    QWORD PTR [rsp+0x18],rax
    e19c:	je     e360 <tdb_store+0x320>
    e1a2:	mov    rdx,QWORD PTR [rsp+0x48]
    e1a7:	mov    rsi,QWORD PTR [rsp+0x40]
    e1ac:	mov    rdi,QWORD PTR [rsp+0x18]
    e1b1:	call   2a20 <memcpy@plt>
    e1b6:	test   r12,r12
    e1b9:	jne    e378 <tdb_store+0x338>
    e1bf:	mov    edx,0x1
    e1c4:	mov    esi,0xffffffff
    e1c9:	mov    rdi,rbx
    e1cc:	mov    r13,QWORD PTR [rsp+0x48]
    e1d1:	call   c680 <tdb_lock>
    e1d6:	cmp    eax,0xffffffff
    e1d9:	mov    r15d,eax
    e1dc:	je     e2d4 <tdb_store+0x294>
    e1e2:	lea    eax,[r12+r13*1]
    e1e6:	lea    r14,[rsp+0x60]
    e1eb:	mov    QWORD PTR [rsp+0x30],r12
    e1f0:	xor    r13d,r13d
    e1f3:	mov    DWORD PTR [rsp+0x14],0x0
    e1fb:	mov    DWORD PTR [rsp+0x28],ebp
    e1ff:	lea    ecx,[rax+0x4]
    e202:	mov    DWORD PTR [rsp+0x38],eax
    e206:	lea    eax,[rax+rax*4+0x8c]
    e20d:	add    eax,eax
    e20f:	lea    edi,[rcx+rcx*1]
    e212:	mov    DWORD PTR [rsp+0x3c],ecx
    e216:	mov    DWORD PTR [rsp+0x2c],eax
    e21a:	lea    rax,[rsp+0x5c]
    e21f:	mov    r12d,ecx
    e222:	mov    DWORD PTR [rsp+0x10],edi
    e226:	mov    QWORD PTR [rsp+0x20],rax
    e22b:	mov    r8d,DWORD PTR [rbx+0xd4]
    e232:	mov    rdx,QWORD PTR [rsp+0x20]
    e237:	mov    ecx,0x4
    e23c:	mov    esi,0xa8
    e241:	mov    rdi,rbx
    e244:	and    r8d,0x10
    e248:	call   c3d0 <tdb_read>
    e24d:	cmp    eax,0xffffffff
    e250:	je     e2bd <tdb_store+0x27d>
    e252:	mov    esi,DWORD PTR [rsp+0x5c]
    e256:	test   esi,esi
    e258:	je     e3a1 <tdb_store+0x361>
    e25e:	mov    ebp,0xa8
    e263:	xor    r15d,r15d
    e266:	jmp    e2ad <tdb_store+0x26d>
    e268:	nop    DWORD PTR [rax+rax*1+0x0]
    e270:	mov    eax,DWORD PTR [rsp+0x64]
    e274:	mov    edx,DWORD PTR [rsp+0x5c]
    e278:	cmp    r12d,eax
    e27b:	ja     e29b <tdb_store+0x25b>
    e27d:	cmp    eax,r13d
    e280:	jb     e287 <tdb_store+0x247>
    e282:	test   r15d,r15d
    e285:	jne    e29b <tdb_store+0x25b>
    e287:	cmp    eax,DWORD PTR [rsp+0x10]
    e28b:	mov    r13d,eax
    e28e:	mov    DWORD PTR [rsp+0x14],ebp
    e292:	mov    r15d,edx
    e295:	jb     e398 <tdb_store+0x358>
    e29b:	mov    esi,DWORD PTR [rsp+0x60]
    e29f:	mov    ebp,edx
    e2a1:	test   esi,esi
    e2a3:	mov    DWORD PTR [rsp+0x5c],esi
    e2a7:	je     e398 <tdb_store+0x358>
    e2ad:	mov    rdx,r14
    e2b0:	mov    rdi,rbx
    e2b3:	call   cdb0 <rec_free_read>
    e2b8:	cmp    eax,0xffffffff
    e2bb:	jne    e270 <tdb_store+0x230>
    e2bd:	mov    ebp,DWORD PTR [rsp+0x28]
    e2c1:	mov    esi,0xffffffff
    e2c6:	mov    rdi,rbx
    e2c9:	mov    r15d,0xffffffff
    e2cf:	call   c770 <tdb_unlock.isra.5>
    e2d4:	mov    rdi,QWORD PTR [rsp+0x18]
    e2d9:	call   a6a0 <talloc_free>
    e2de:	mov    eax,ebp
    e2e0:	xor    edx,edx
    e2e2:	mov    rdi,rbx
    e2e5:	div    DWORD PTR [rbx+0x50]
    e2e8:	mov    esi,edx
    e2ea:	call   c770 <tdb_unlock.isra.5>
    e2ef:	mov    rcx,QWORD PTR [rsp+0x98]
    e2f7:	xor    rcx,QWORD PTR fs:0x28
    e300:	mov    eax,r15d
    e303:	jne    e6be <tdb_store+0x67e>
    e309:	add    rsp,0xa8
    e310:	pop    rbx
    e311:	pop    rbp
    e312:	pop    r12
    e314:	pop    r13
    e316:	pop    r14
    e318:	pop    r15
    e31a:	ret    
    e31b:	nop    DWORD PTR [rax+rax*1+0x0]
    e320:	lea    rax,[rsp+0x80]
    e328:	mov    rdx,QWORD PTR [rsp+0x48]
    e32d:	mov    rsi,QWORD PTR [rsp+0x40]
    e332:	xor    r8d,r8d
    e335:	mov    ecx,ebp
    e337:	mov    rdi,rbx
    e33a:	mov    r9,rax
    e33d:	mov    QWORD PTR [rsp+0x8],rax
    e342:	call   cb20 <tdb_find_lock_hash>
    e347:	test   eax,eax
    e349:	jne    e478 <tdb_store+0x438>
    e34f:	mov    DWORD PTR [rbx+0x28],0x0
    e356:	jmp    e17d <tdb_store+0x13d>
    e35b:	nop    DWORD PTR [rax+rax*1+0x0]
    e360:	mov    DWORD PTR [rbx+0x28],0x4
    e367:	mov    r15d,0xffffffff
    e36d:	jmp    e2de <tdb_store+0x29e>
    e372:	nop    WORD PTR [rax+rax*1+0x0]
    e378:	mov    rdi,QWORD PTR [rsp+0x18]
    e37d:	add    rdi,QWORD PTR [rsp+0x48]
    e382:	mov    rdx,r12
    e385:	mov    rsi,r14
    e388:	call   2a20 <memcpy@plt>
    e38d:	jmp    e1bf <tdb_store+0x17f>
    e392:	nop    WORD PTR [rax+rax*1+0x0]
    e398:	test   r15d,r15d
    e39b:	jne    e4cb <tdb_store+0x48b>
    e3a1:	mov    edx,0x1
    e3a6:	mov    esi,0xffffffff
    e3ab:	mov    rdi,rbx
    e3ae:	call   c680 <tdb_lock>
    e3b3:	cmp    eax,0xffffffff
    e3b6:	je     e63b <tdb_store+0x5fb>
    e3bc:	mov    eax,DWORD PTR [rbx+0x14]
    e3bf:	mov    edx,0x1
    e3c4:	mov    rdi,rbx
    e3c7:	lea    esi,[rax+0x1]
    e3ca:	call   c2c0 <tdb_oob>
    e3cf:	mov    esi,DWORD PTR [rbx+0x14]
    e3d2:	mov    eax,DWORD PTR [rsp+0x2c]
    e3d6:	lea    edx,[rsi+rax*1+0x1fff]
    e3dd:	and    edx,0xffffe000
    e3e3:	mov    ebp,edx
    e3e5:	sub    ebp,esi
    e3e7:	test   BYTE PTR [rbx+0xd4],0x2
    e3ee:	jne    e4a0 <tdb_store+0x460>
    e3f4:	mov    QWORD PTR [rbx+0x8],0x0
    e3fc:	mov    edx,ebp
    e3fe:	mov    rdi,rbx
    e401:	call   d830 <expand_file>
    e406:	test   eax,eax
    e408:	jne    e660 <tdb_store+0x620>
    e40e:	mov    edx,ebp
    e410:	add    edx,DWORD PTR [rbx+0x14]
    e413:	test   BYTE PTR [rbx+0xd4],0x2
    e41a:	mov    DWORD PTR [rbx+0x14],edx
    e41d:	jne    e4a3 <tdb_store+0x463>
    e423:	mov    QWORD PTR [rbx+0x8],0x0
    e42b:	mov    rcx,QWORD PTR [rsp+0x8]
    e430:	pxor   xmm0,xmm0
    e434:	sub    edx,ebp
    e436:	lea    eax,[rbp-0x18]
    e439:	mov    rdi,rbx
    e43c:	mov    esi,edx
    e43e:	movaps XMMWORD PTR [rcx],xmm0
    e441:	mov    QWORD PTR [rcx+0x10],0x0
    e449:	mov    rdx,rcx
    e44c:	mov    DWORD PTR [rsp+0x84],eax
    e453:	call   cfc0 <tdb_free>
    e458:	cmp    eax,0xffffffff
    e45b:	je     e660 <tdb_store+0x620>
    e461:	mov    esi,0xffffffff
    e466:	mov    rdi,rbx
    e469:	call   c770 <tdb_unlock.isra.5>
    e46e:	jmp    e22b <tdb_store+0x1eb>
    e473:	nop    DWORD PTR [rax+rax*1+0x0]
    e478:	mov    eax,DWORD PTR [rsp+0x90]
    e47f:	xor    edx,edx
    e481:	mov    rdi,rbx
    e484:	mov    r15d,0xffffffff
    e48a:	div    DWORD PTR [rbx+0x50]
    e48d:	mov    esi,edx
    e48f:	call   c770 <tdb_unlock.isra.5>
    e494:	mov    DWORD PTR [rbx+0x28],0x5
    e49b:	jmp    e2de <tdb_store+0x29e>
    e4a0:	mov    DWORD PTR [rbx+0x14],edx
    e4a3:	mov    rsi,QWORD PTR [rbx+0x8]
    e4a7:	lea    rcx,[rip+0x279a]        # 10c48 <__PRETTY_FUNCTION__.11970+0x2e8>
    e4ae:	mov    rdi,rbx
    e4b1:	call   aad0 <_talloc_realloc>
    e4b6:	test   rax,rax
    e4b9:	je     e6b1 <tdb_store+0x671>
    e4bf:	mov    QWORD PTR [rbx+0x8],rax
    e4c3:	mov    edx,DWORD PTR [rbx+0x14]
    e4c6:	jmp    e42b <tdb_store+0x3eb>
    e4cb:	mov    rdx,r14
    e4ce:	mov    esi,r15d
    e4d1:	mov    rdi,rbx
    e4d4:	mov    ebp,DWORD PTR [rsp+0x28]
    e4d8:	mov    r12,QWORD PTR [rsp+0x30]
    e4dd:	call   cdb0 <rec_free_read>
    e4e2:	cmp    eax,0xffffffff
    e4e5:	je     e2c1 <tdb_store+0x281>
    e4eb:	mov    eax,DWORD PTR [rsp+0x3c]
    e4ef:	mov    ecx,DWORD PTR [rsp+0x64]
    e4f3:	xor    r13d,r13d
    e4f6:	pxor   xmm0,xmm0
    e4fa:	mov    QWORD PTR [rsp+0x90],0x0
    e506:	add    rax,0x34
    e50a:	mov    rdx,rcx
    e50d:	cmp    rcx,rax
    e510:	movaps XMMWORD PTR [rsp+0x80],xmm0
    e518:	jbe    e539 <tdb_store+0x4f9>
    e51a:	sub    edx,0x18
    e51d:	mov    eax,DWORD PTR [rsp+0x38]
    e521:	add    eax,0x7
    e524:	and    eax,0xfffffffc
    e527:	sub    edx,eax
    e529:	lea    r13d,[r15+rax*1+0x18]
    e52e:	mov    DWORD PTR [rsp+0x64],eax
    e532:	mov    DWORD PTR [rsp+0x84],edx
    e539:	mov    edx,DWORD PTR [rsp+0x60]
    e53d:	mov    esi,DWORD PTR [rsp+0x14]
    e541:	mov    rdi,rbx
    e544:	call   ce90 <ofs_write.isra.12>
    e549:	cmp    eax,0xffffffff
    e54c:	je     e2c1 <tdb_store+0x281>
    e552:	mov    rdx,r14
    e555:	mov    esi,r15d
    e558:	mov    rdi,rbx
    e55b:	mov    DWORD PTR [rsp+0x74],0x26011999
    e563:	call   cd30 <rec_write>
    e568:	cmp    eax,0xffffffff
    e56b:	je     e2c1 <tdb_store+0x281>
    e571:	test   r13d,r13d
    e574:	jne    e676 <tdb_store+0x636>
    e57a:	mov    esi,0xffffffff
    e57f:	mov    rdi,rbx
    e582:	call   c770 <tdb_unlock.isra.5>
    e587:	xor    edx,edx
    e589:	mov    eax,ebp
    e58b:	mov    r8d,DWORD PTR [rbx+0xd4]
    e592:	div    DWORD PTR [rbx+0x50]
    e595:	mov    ecx,0x4
    e59a:	mov    rdi,rbx
    e59d:	and    r8d,0x10
    e5a1:	lea    esi,[rdx*4+0xac]
    e5a8:	mov    rdx,r14
    e5ab:	call   c3d0 <tdb_read>
    e5b0:	cmp    eax,0xffffffff
    e5b3:	je     e630 <tdb_store+0x5f0>
    e5b5:	mov    rax,QWORD PTR [rsp+0x48]
    e5ba:	mov    rdx,r14
    e5bd:	mov    esi,r15d
    e5c0:	mov    rdi,rbx
    e5c3:	mov    DWORD PTR [rsp+0x6c],r12d
    e5c8:	mov    DWORD PTR [rsp+0x70],ebp
    e5cc:	mov    DWORD PTR [rsp+0x74],0x26011999
    e5d4:	mov    DWORD PTR [rsp+0x68],eax
    e5d8:	call   cd30 <rec_write>
    e5dd:	cmp    eax,0xffffffff
    e5e0:	je     e630 <tdb_store+0x5f0>
    e5e2:	mov    ecx,DWORD PTR [rsp+0x48]
    e5e6:	mov    rdx,QWORD PTR [rsp+0x18]
    e5eb:	lea    esi,[r15+0x18]
    e5ef:	mov    rdi,rbx
    e5f2:	add    ecx,r12d
    e5f5:	call   cc40 <tdb_write>
    e5fa:	cmp    eax,0xffffffff
    e5fd:	je     e630 <tdb_store+0x5f0>
    e5ff:	xor    edx,edx
    e601:	mov    eax,ebp
    e603:	mov    rdi,rbx
    e606:	div    DWORD PTR [rbx+0x50]
    e609:	lea    esi,[rdx*4+0xac]
    e610:	mov    edx,r15d
    e613:	xor    r15d,r15d
    e616:	call   ce90 <ofs_write.isra.12>
    e61b:	cmp    eax,0xffffffff
    e61e:	sete   r15b
    e622:	neg    r15d
    e625:	jmp    e2d4 <tdb_store+0x294>
    e62a:	nop    WORD PTR [rax+rax*1+0x0]
    e630:	mov    r15d,0xffffffff
    e636:	jmp    e2d4 <tdb_store+0x294>
    e63b:	mov    ebp,DWORD PTR [rsp+0x28]
    e63f:	lea    rdx,[rip+0x25e7]        # 10c2d <__PRETTY_FUNCTION__.11970+0x2cd>
    e646:	xor    esi,esi
    e648:	mov    rdi,rbx
    e64b:	xor    eax,eax
    e64d:	call   QWORD PTR [rbx+0x100]
    e653:	jmp    e2c1 <tdb_store+0x281>
    e658:	mov    r15d,eax
    e65b:	jmp    e2ef <tdb_store+0x2af>
    e660:	mov    ebp,DWORD PTR [rsp+0x28]
    e664:	mov    esi,0xffffffff
    e669:	mov    rdi,rbx
    e66c:	call   c770 <tdb_unlock.isra.5>
    e671:	jmp    e2c1 <tdb_store+0x281>
    e676:	mov    eax,DWORD PTR [rsp+0x64]
    e67a:	mov    rdi,rbx
    e67d:	lea    edx,[rax+0x18]
    e680:	lea    esi,[r15+rax*1+0x14]
    e685:	call   ce90 <ofs_write.isra.12>
    e68a:	add    eax,0x1
    e68d:	je     e2c1 <tdb_store+0x281>
    e693:	mov    rdx,QWORD PTR [rsp+0x8]
    e698:	mov    esi,r13d
    e69b:	mov    rdi,rbx
    e69e:	call   cfc0 <tdb_free>
    e6a3:	add    eax,0x1
    e6a6:	jne    e57a <tdb_store+0x53a>
    e6ac:	jmp    e2c1 <tdb_store+0x281>
    e6b1:	mov    r13d,ebp
    e6b4:	mov    ebp,DWORD PTR [rsp+0x28]
    e6b8:	sub    DWORD PTR [rbx+0x14],r13d
    e6bc:	jmp    e664 <tdb_store+0x624>
    e6be:	call   2820 <__stack_chk_fail@plt>
    e6c3:	nop    DWORD PTR [rax]
    e6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e6d0 <tdb_open_ex>:
    e6d0:	push   r15
    e6d2:	push   r14
    e6d4:	mov    r14,r9
    e6d7:	push   r13
    e6d9:	push   r12
    e6db:	mov    r12d,ecx
    e6de:	push   rbp
    e6df:	push   rbx
    e6e0:	mov    ebp,edx
    e6e2:	lea    rdx,[rip+0x2569]        # 10c52 <__PRETTY_FUNCTION__.11970+0x2f2>
    e6e9:	mov    rbx,rdi
    e6ec:	sub    rsp,0xb8
    e6f3:	mov    DWORD PTR [rsp+0xc],esi
    e6f7:	mov    esi,0x118
    e6fc:	mov    DWORD PTR [rsp+0x8],r8d
    e701:	mov    rax,QWORD PTR fs:0x28
    e70a:	mov    QWORD PTR [rsp+0xa8],rax
    e712:	xor    eax,eax
    e714:	mov    r13,QWORD PTR [rsp+0xf0]
    e71c:	call   b280 <_talloc_zero>
    e721:	test   rax,rax
    e724:	mov    r15,rax
    e727:	mov    r8d,DWORD PTR [rsp+0x8]
    e72c:	je     e878 <tdb_open_ex+0x1a8>
    e732:	lea    rdx,[rip+0xffffffffffffd947]        # c080 <null_log_fn>
    e739:	test   r14,r14
    e73c:	mov    DWORD PTR [rax+0x10],0xffffffff
    e743:	mov    QWORD PTR [rax],0x0
    e74a:	mov    QWORD PTR [rax+0x8],0x0
    e752:	mov    eax,ebp
    e754:	cmove  r14,rdx
    e758:	lea    rdx,[rip+0xffffffffffffd8c1]        # c020 <default_tdb_hash>
    e75f:	test   r13,r13
    e762:	mov    DWORD PTR [r15+0xd4],ebp
    e769:	mov    DWORD PTR [r15+0x110],r12d
    e770:	cmove  r13,rdx
    e774:	mov    edx,r12d
    e777:	mov    QWORD PTR [r15+0x100],r14
    e77e:	and    edx,0x3
    e781:	mov    QWORD PTR [r15+0x108],r13
    e788:	cmp    edx,0x1
    e78b:	jne    e888 <tdb_open_ex+0x1b8>
    e791:	mov    rcx,rbx
    e794:	lea    rdx,[rip+0x2b3d]        # 112d8 <__PRETTY_FUNCTION__.11970+0x978>
    e79b:	xor    esi,esi
    e79d:	mov    rdi,r15
    e7a0:	xor    eax,eax
    e7a2:	mov    ebx,0x16
    e7a7:	call   r14
    e7aa:	call   2750 <__errno_location@plt>
    e7af:	mov    rbp,rax
    e7b2:	mov    DWORD PTR [rax],0x16
    e7b8:	mov    rdi,QWORD PTR [r15+0x8]
    e7bc:	test   rdi,rdi
    e7bf:	je     e7d7 <tdb_open_ex+0x107>
    e7c1:	test   BYTE PTR [r15+0xd4],0x2
    e7c9:	jne    e908 <tdb_open_ex+0x238>
    e7cf:	mov    QWORD PTR [r15+0x8],0x0
    e7d7:	mov    rdi,QWORD PTR [r15]
    e7da:	test   rdi,rdi
    e7dd:	je     e7eb <tdb_open_ex+0x11b>
    e7df:	call   a6a0 <talloc_free>
    e7e4:	mov    QWORD PTR [r15],0x0
    e7eb:	mov    edi,DWORD PTR [r15+0x10]
    e7ef:	cmp    edi,0xffffffff
    e7f2:	jne    e848 <tdb_open_ex+0x178>
    e7f4:	mov    rdi,QWORD PTR [r15+0x20]
    e7f8:	test   rdi,rdi
    e7fb:	je     e80a <tdb_open_ex+0x13a>
    e7fd:	call   a6a0 <talloc_free>
    e802:	mov    QWORD PTR [r15+0x20],0x0
    e80a:	mov    rdi,r15
    e80d:	xor    r15d,r15d
    e810:	call   a6a0 <talloc_free>
    e815:	mov    DWORD PTR [rbp+0x0],ebx
    e818:	mov    rcx,QWORD PTR [rsp+0xa8]
    e820:	xor    rcx,QWORD PTR fs:0x28
    e829:	mov    rax,r15
    e82c:	jne    ed40 <tdb_open_ex+0x670>
    e832:	add    rsp,0xb8
    e839:	pop    rbx
    e83a:	pop    rbp
    e83b:	pop    r12
    e83d:	pop    r13
    e83f:	pop    r14
    e841:	pop    r15
    e843:	ret    
    e844:	nop    DWORD PTR [rax+0x0]
    e848:	call   2930 <close@plt>
    e84d:	test   eax,eax
    e84f:	je     e7f4 <tdb_open_ex+0x124>
    e851:	mov    rdi,r15
    e854:	xor    eax,eax
    e856:	lea    rdx,[rip+0x2bd3]        # 11430 <__PRETTY_FUNCTION__.11970+0xad0>
    e85d:	mov    esi,0x5
    e862:	call   QWORD PTR [r15+0x100]
    e869:	mov    rdi,QWORD PTR [r15+0x20]
    e86d:	test   rdi,rdi
    e870:	jne    e7fd <tdb_open_ex+0x12d>
    e872:	jmp    e80a <tdb_open_ex+0x13a>
    e874:	nop    DWORD PTR [rax+0x0]
    e878:	call   2750 <__errno_location@plt>
    e87d:	mov    DWORD PTR [rax],0xc
    e883:	jmp    e818 <tdb_open_ex+0x148>
    e885:	nop    DWORD PTR [rax]
    e888:	mov    esi,DWORD PTR [rsp+0xc]
    e88c:	mov    ecx,0x83
    e891:	test   esi,esi
    e893:	cmovne ecx,esi
    e896:	test   edx,edx
    e898:	mov    DWORD PTR [rsp+0xc],ecx
    e89c:	jne    e8b3 <tdb_open_ex+0x1e3>
    e89e:	and    eax,0xfffffffe
    e8a1:	mov    DWORD PTR [r15+0x18],0x1
    e8a9:	or     eax,0x4
    e8ac:	mov    DWORD PTR [r15+0xd4],eax
    e8b3:	mov    r14d,eax
    e8b6:	and    r14d,0x2
    e8ba:	je     e930 <tdb_open_ex+0x260>
    e8bc:	and    eax,0xfffffffe
    e8bf:	mov    esi,DWORD PTR [rsp+0xc]
    e8c3:	mov    rdi,r15
    e8c6:	or     eax,0xc
    e8c9:	mov    DWORD PTR [r15+0xd4],eax
    e8d0:	call   c090 <tdb_new_database>
    e8d5:	test   eax,eax
    e8d7:	je     ebde <tdb_open_ex+0x50e>
    e8dd:	lea    rdx,[rip+0x2a24]        # 11308 <__PRETTY_FUNCTION__.11970+0x9a8>
    e8e4:	xor    esi,esi
    e8e6:	mov    rdi,r15
    e8e9:	xor    eax,eax
    e8eb:	call   QWORD PTR [r15+0x100]
    e8f2:	call   2750 <__errno_location@plt>
    e8f7:	mov    rbp,rax
    e8fa:	mov    ebx,DWORD PTR [rax]
    e8fc:	jmp    e7b8 <tdb_open_ex+0xe8>
    e901:	nop    DWORD PTR [rax+0x0]
    e908:	call   a6a0 <talloc_free>
    e90d:	mov    rdi,QWORD PTR [r15]
    e910:	mov    QWORD PTR [r15+0x8],0x0
    e918:	test   rdi,rdi
    e91b:	jne    e7df <tdb_open_ex+0x10f>
    e921:	jmp    e7eb <tdb_open_ex+0x11b>
    e926:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e930:	xor    eax,eax
    e932:	mov    edx,r8d
    e935:	mov    esi,r12d
    e938:	mov    rdi,rbx
    e93b:	call   2b70 <open@plt>
    e940:	cmp    eax,0xffffffff
    e943:	mov    DWORD PTR [r15+0x10],eax
    e947:	je     ec10 <tdb_open_ex+0x540>
    e94d:	xor    r8d,r8d
    e950:	xor    esi,esi
    e952:	mov    ecx,0x7
    e957:	mov    edx,0x1
    e95c:	mov    rdi,r15
    e95f:	call   c640 <tdb_brlock>
    e964:	cmp    eax,0xffffffff
    e967:	je     ec50 <tdb_open_ex+0x580>
    e96d:	xor    r13d,r13d
    e970:	and    ebp,0x1
    e973:	jne    ea30 <tdb_open_ex+0x360>
    e979:	lea    r14,[r15+0x2c]
    e97d:	mov    edi,DWORD PTR [r15+0x10]
    e981:	mov    edx,0xa8
    e986:	mov    rsi,r14
    e989:	call   2980 <read@plt>
    e98e:	cmp    rax,0xa8
    e994:	je     e9c0 <tdb_open_ex+0x2f0>
    e996:	and    r12d,0x40
    e99a:	jne    eab0 <tdb_open_ex+0x3e0>
    e9a0:	call   2750 <__errno_location@plt>
    e9a5:	mov    ebx,0x5
    e9aa:	mov    rbp,rax
    e9ad:	mov    DWORD PTR [rax],0x5
    e9b3:	jmp    e7b8 <tdb_open_ex+0xe8>
    e9b8:	nop    DWORD PTR [rax+rax*1+0x0]
    e9c0:	lea    rdi,[rip+0x2297]        # 10c5e <__PRETTY_FUNCTION__.11970+0x2fe>
    e9c7:	mov    ecx,0xa
    e9cc:	mov    rsi,r14
    e9cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e9d1:	seta   al
    e9d4:	sbb    al,0x0
    e9d6:	test   al,al
    e9d8:	jne    e996 <tdb_open_ex+0x2c6>
    e9da:	mov    eax,DWORD PTR [r15+0x4c]
    e9de:	cmp    eax,0x2601196e
    e9e3:	je     ed34 <tdb_open_ex+0x664>
    e9e9:	cmp    eax,0x6e190126
    e9ee:	jne    e996 <tdb_open_ex+0x2c6>
    e9f0:	mov    eax,DWORD PTR [r15+0xd4]
    e9f7:	or     eax,0x20
    e9fa:	or     eax,0x10
    e9fd:	lea    rdx,[r14+0xa8]
    ea04:	mov    DWORD PTR [r15+0xd4],eax
    ea0b:	nop    DWORD PTR [rax+rax*1+0x0]
    ea10:	mov    eax,DWORD PTR [r14]
    ea13:	add    r14,0x4
    ea17:	bswap  eax
    ea19:	mov    DWORD PTR [r14-0x4],eax
    ea1d:	cmp    r14,rdx
    ea20:	jne    ea10 <tdb_open_ex+0x340>
    ea22:	jmp    eafa <tdb_open_ex+0x42a>
    ea27:	nop    WORD PTR [rax+rax*1+0x0]
    ea30:	xor    r8d,r8d
    ea33:	mov    ecx,0x6
    ea38:	mov    edx,0x1
    ea3d:	mov    esi,0x4
    ea42:	mov    rdi,r15
    ea45:	mov    r13d,r14d
    ea48:	call   c640 <tdb_brlock>
    ea4d:	test   eax,eax
    ea4f:	jne    e979 <tdb_open_ex+0x2a9>
    ea55:	mov    edi,DWORD PTR [r15+0x10]
    ea59:	xor    esi,esi
    ea5b:	or     r12d,0x40
    ea5f:	mov    r13d,ebp
    ea62:	call   28a0 <ftruncate@plt>
    ea67:	cmp    eax,0xffffffff
    ea6a:	jne    e979 <tdb_open_ex+0x2a9>
    ea70:	call   2750 <__errno_location@plt>
    ea75:	mov    edi,DWORD PTR [rax]
    ea77:	mov    r12,QWORD PTR [r15+0x100]
    ea7e:	mov    rbp,rax
    ea81:	call   2c30 <strerror@plt>
    ea86:	lea    rdx,[rip+0x290b]        # 11398 <__PRETTY_FUNCTION__.11970+0xa38>
    ea8d:	mov    r8,rax
    ea90:	mov    rcx,rbx
    ea93:	nop    DWORD PTR [rax+rax*1+0x0]
    ea98:	xor    esi,esi
    ea9a:	mov    rdi,r15
    ea9d:	xor    eax,eax
    ea9f:	call   r12
    eaa2:	mov    ebx,DWORD PTR [rbp+0x0]
    eaa5:	jmp    e7b8 <tdb_open_ex+0xe8>
    eaaa:	nop    WORD PTR [rax+rax*1+0x0]
    eab0:	mov    esi,DWORD PTR [rsp+0xc]
    eab4:	mov    rdi,r15
    eab7:	call   c090 <tdb_new_database>
    eabc:	cmp    eax,0xffffffff
    eabf:	je     e9a0 <tdb_open_ex+0x2d0>
    eac5:	mov    eax,DWORD PTR [r15+0xd4]
    eacc:	mov    edx,eax
    eace:	mov    ecx,eax
    ead0:	and    edx,0x10
    ead3:	or     ecx,0x20
    ead6:	cmp    DWORD PTR [r15+0x4c],0x6e190126
    eade:	cmove  eax,ecx
    eae1:	test   edx,edx
    eae3:	mov    DWORD PTR [r15+0xd4],eax
    eaea:	jne    e9fa <tdb_open_ex+0x32a>
    eaf0:	and    eax,0xffffffef
    eaf3:	mov    DWORD PTR [r15+0xd4],eax
    eafa:	mov    esi,DWORD PTR [r15+0x10]
    eafe:	lea    rdx,[rsp+0x10]
    eb03:	mov    edi,0x1
    eb08:	call   2a80 <__fxstat@plt>
    eb0d:	cmp    eax,0xffffffff
    eb10:	je     ed25 <tdb_open_ex+0x655>
    eb16:	mov    rax,QWORD PTR [rip+0x20a853]        # 219370 <tdbs>
    eb1d:	mov    r9,QWORD PTR [rsp+0x18]
    eb22:	mov    r8,QWORD PTR [rsp+0x10]
    eb27:	test   rax,rax
    eb2a:	jne    eb48 <tdb_open_ex+0x478>
    eb2c:	jmp    ec78 <tdb_open_ex+0x5a8>
    eb31:	nop    DWORD PTR [rax+0x0]
    eb38:	mov    rax,QWORD PTR [rax+0xe8]
    eb3f:	test   rax,rax
    eb42:	je     ec78 <tdb_open_ex+0x5a8>
    eb48:	cmp    r8,QWORD PTR [rax+0xf0]
    eb4f:	jne    eb38 <tdb_open_ex+0x468>
    eb51:	cmp    r9,QWORD PTR [rax+0xf8]
    eb58:	jne    eb38 <tdb_open_ex+0x468>
    eb5a:	mov    rcx,rbx
    eb5d:	lea    rdx,[rip+0x28fc]        # 11460 <__PRETTY_FUNCTION__.11970+0xb00>
    eb64:	mov    esi,0x2
    eb69:	mov    rdi,r15
    eb6c:	xor    eax,eax
    eb6e:	mov    ebx,0x10
    eb73:	call   QWORD PTR [r15+0x100]
    eb7a:	call   2750 <__errno_location@plt>
    eb7f:	mov    rbp,rax
    eb82:	mov    DWORD PTR [rax],0x10
    eb88:	jmp    e7b8 <tdb_open_ex+0xe8>
    eb8d:	mov    eax,DWORD PTR [r15+0xd4]
    eb94:	test   al,0x2
    eb96:	jne    eba0 <tdb_open_ex+0x4d0>
    eb98:	mov    QWORD PTR [r15+0x8],0x0
    eba0:	and    eax,0x4
    eba3:	test   r13d,r13d
    eba6:	je     ebb0 <tdb_open_ex+0x4e0>
    eba8:	test   eax,eax
    ebaa:	je     ed45 <tdb_open_ex+0x675>
    ebb0:	test   ebp,ebp
    ebb2:	je     ebde <tdb_open_ex+0x50e>
    ebb4:	test   BYTE PTR [r15+0xd4],0x4
    ebbc:	jne    ebec <tdb_open_ex+0x51c>
    ebbe:	xor    r8d,r8d
    ebc1:	xor    edx,edx
    ebc3:	mov    ecx,0x7
    ebc8:	mov    esi,0x4
    ebcd:	mov    rdi,r15
    ebd0:	call   c4f0 <tdb_brlock.part.3>
    ebd5:	add    eax,0x1
    ebd8:	je     ed25 <tdb_open_ex+0x655>
    ebde:	test   BYTE PTR [r15+0xd4],0x4
    ebe6:	je     ed05 <tdb_open_ex+0x635>
    ebec:	mov    rax,QWORD PTR [rip+0x20a77d]        # 219370 <tdbs>
    ebf3:	mov    QWORD PTR [rip+0x20a776],r15        # 219370 <tdbs>
    ebfa:	mov    QWORD PTR [r15+0xe8],rax
    ec01:	jmp    e818 <tdb_open_ex+0x148>
    ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
    ec10:	call   2750 <__errno_location@plt>
    ec15:	mov    edi,DWORD PTR [rax]
    ec17:	mov    rbp,rax
    ec1a:	mov    r12,QWORD PTR [r15+0x100]
    ec21:	call   2c30 <strerror@plt>
    ec26:	mov    rcx,rbx
    ec29:	mov    r8,rax
    ec2c:	lea    rdx,[rip+0x26fd]        # 11330 <__PRETTY_FUNCTION__.11970+0x9d0>
    ec33:	mov    esi,0x5
    ec38:	mov    rdi,r15
    ec3b:	xor    eax,eax
    ec3d:	call   r12
    ec40:	mov    ebx,DWORD PTR [rbp+0x0]
    ec43:	jmp    e7b8 <tdb_open_ex+0xe8>
    ec48:	nop    DWORD PTR [rax+rax*1+0x0]
    ec50:	call   2750 <__errno_location@plt>
    ec55:	mov    edi,DWORD PTR [rax]
    ec57:	mov    r12,QWORD PTR [r15+0x100]
    ec5e:	mov    rbp,rax
    ec61:	call   2c30 <strerror@plt>
    ec66:	mov    rcx,rbx
    ec69:	mov    r8,rax
    ec6c:	lea    rdx,[rip+0x26ed]        # 11360 <__PRETTY_FUNCTION__.11970+0xa00>
    ec73:	jmp    ea98 <tdb_open_ex+0x3c8>
    ec78:	mov    rsi,rbx
    ec7b:	mov    rdi,r15
    ec7e:	call   b2f0 <talloc_strdup>
    ec83:	test   rax,rax
    ec86:	mov    QWORD PTR [r15],rax
    ec89:	je     eced <tdb_open_ex+0x61d>
    ec8b:	mov    rax,QWORD PTR [rsp+0x40]
    ec90:	lea    rcx,[rip+0x1fd1]        # 10c68 <__PRETTY_FUNCTION__.11970+0x308>
    ec97:	mov    esi,0x8
    ec9c:	mov    rdi,r15
    ec9f:	mov    DWORD PTR [r15+0x14],eax
    eca3:	mov    rax,QWORD PTR [rsp+0x10]
    eca8:	mov    QWORD PTR [r15+0xf0],rax
    ecaf:	mov    rax,QWORD PTR [rsp+0x18]
    ecb4:	mov    QWORD PTR [r15+0xf8],rax
    ecbb:	mov    eax,DWORD PTR [r15+0x50]
    ecbf:	lea    edx,[rax+0x1]
    ecc2:	call   bb00 <_talloc_zero_array>
    ecc7:	test   rax,rax
    ecca:	mov    QWORD PTR [r15+0x20],rax
    ecce:	jne    eb8d <tdb_open_ex+0x4bd>
    ecd4:	mov    rcx,rbx
    ecd7:	lea    rdx,[rip+0x26e2]        # 113c0 <__PRETTY_FUNCTION__.11970+0xa60>
    ecde:	mov    esi,0x2
    ece3:	mov    rdi,r15
    ece6:	call   QWORD PTR [r15+0x100]
    eced:	call   2750 <__errno_location@plt>
    ecf2:	mov    ebx,0xc
    ecf7:	mov    rbp,rax
    ecfa:	mov    DWORD PTR [rax],0xc
    ed00:	jmp    e7b8 <tdb_open_ex+0xe8>
    ed05:	xor    r8d,r8d
    ed08:	xor    esi,esi
    ed0a:	mov    ecx,0x7
    ed0f:	mov    edx,0x2
    ed14:	mov    rdi,r15
    ed17:	call   c4f0 <tdb_brlock.part.3>
    ed1c:	cmp    eax,0xffffffff
    ed1f:	jne    ebec <tdb_open_ex+0x51c>
    ed25:	call   2750 <__errno_location@plt>
    ed2a:	mov    rbp,rax
    ed2d:	mov    ebx,DWORD PTR [rax]
    ed2f:	jmp    e7b8 <tdb_open_ex+0xe8>
    ed34:	mov    eax,DWORD PTR [r15+0xd4]
    ed3b:	jmp    eaf0 <tdb_open_ex+0x420>
    ed40:	call   2820 <__stack_chk_fail@plt>
    ed45:	xor    r8d,r8d
    ed48:	mov    ecx,0x6
    ed4d:	mov    edx,0x2
    ed52:	mov    esi,0x4
    ed57:	mov    rdi,r15
    ed5a:	call   c4f0 <tdb_brlock.part.3>
    ed5f:	add    eax,0x1
    ed62:	jne    ebb0 <tdb_open_ex+0x4e0>
    ed68:	call   2750 <__errno_location@plt>
    ed6d:	mov    edi,DWORD PTR [rax]
    ed6f:	mov    r12,QWORD PTR [r15+0x100]
    ed76:	mov    rbp,rax
    ed79:	call   2c30 <strerror@plt>
    ed7e:	mov    rcx,rbx
    ed81:	mov    r8,rax
    ed84:	lea    rdx,[rip+0x266d]        # 113f8 <__PRETTY_FUNCTION__.11970+0xa98>
    ed8b:	jmp    ea98 <tdb_open_ex+0x3c8>

000000000000ed90 <tdb_close>:
    ed90:	push   rbp
    ed91:	push   rbx
    ed92:	mov    rbx,rdi
    ed95:	sub    rsp,0x8
    ed99:	mov    rdi,QWORD PTR [rdi+0x8]
    ed9d:	test   rdi,rdi
    eda0:	je     edb7 <tdb_close+0x27>
    eda2:	test   BYTE PTR [rbx+0xd4],0x2
    eda9:	jne    ee68 <tdb_close+0xd8>
    edaf:	mov    QWORD PTR [rbx+0x8],0x0
    edb7:	mov    rdi,QWORD PTR [rbx]
    edba:	test   rdi,rdi
    edbd:	je     edcb <tdb_close+0x3b>
    edbf:	call   a6a0 <talloc_free>
    edc4:	mov    QWORD PTR [rbx],0x0
    edcb:	mov    edi,DWORD PTR [rbx+0x10]
    edce:	xor    ebp,ebp
    edd0:	cmp    edi,0xffffffff
    edd3:	je     eddc <tdb_close+0x4c>
    edd5:	call   2930 <close@plt>
    edda:	mov    ebp,eax
    eddc:	mov    rdi,QWORD PTR [rbx+0x20]
    ede0:	test   rdi,rdi
    ede3:	je     edf2 <tdb_close+0x62>
    ede5:	call   a6a0 <talloc_free>
    edea:	mov    QWORD PTR [rbx+0x20],0x0
    edf2:	mov    rdx,QWORD PTR [rip+0x20a577]        # 219370 <tdbs>
    edf9:	test   rdx,rdx
    edfc:	je     ee24 <tdb_close+0x94>
    edfe:	cmp    rbx,rdx
    ee01:	jne    ee18 <tdb_close+0x88>
    ee03:	jmp    ee98 <tdb_close+0x108>
    ee08:	nop    DWORD PTR [rax+rax*1+0x0]
    ee10:	cmp    rbx,rax
    ee13:	je     ee80 <tdb_close+0xf0>
    ee15:	mov    rdx,rax
    ee18:	mov    rax,QWORD PTR [rdx+0xe8]
    ee1f:	test   rax,rax
    ee22:	jne    ee10 <tdb_close+0x80>
    ee24:	lea    rdi,[rbx+0x8]
    ee28:	mov    rcx,rbx
    ee2b:	xor    eax,eax
    ee2d:	mov    QWORD PTR [rbx],0x0
    ee34:	mov    QWORD PTR [rbx+0x110],0x0
    ee3f:	and    rdi,0xfffffffffffffff8
    ee43:	sub    rcx,rdi
    ee46:	add    ecx,0x118
    ee4c:	shr    ecx,0x3
    ee4f:	rep stos QWORD PTR es:[rdi],rax
    ee52:	mov    rdi,rbx
    ee55:	call   a6a0 <talloc_free>
    ee5a:	add    rsp,0x8
    ee5e:	mov    eax,ebp
    ee60:	pop    rbx
    ee61:	pop    rbp
    ee62:	ret    
    ee63:	nop    DWORD PTR [rax+rax*1+0x0]
    ee68:	call   a6a0 <talloc_free>
    ee6d:	mov    QWORD PTR [rbx+0x8],0x0
    ee75:	jmp    edb7 <tdb_close+0x27>
    ee7a:	nop    WORD PTR [rax+rax*1+0x0]
    ee80:	add    rdx,0xe8
    ee87:	mov    rax,QWORD PTR [rbx+0xe8]
    ee8e:	mov    QWORD PTR [rdx],rax
    ee91:	jmp    ee24 <tdb_close+0x94>
    ee93:	nop    DWORD PTR [rax+rax*1+0x0]
    ee98:	lea    rdx,[rip+0x20a4d1]        # 219370 <tdbs>
    ee9f:	jmp    ee87 <tdb_close+0xf7>
    eea1:	nop    WORD PTR cs:[rax+rax*1+0x0]
    eeab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000eeb0 <create_hashtable>:
    eeb0:	push   r15
    eeb2:	push   r14
    eeb4:	xor    eax,eax
    eeb6:	push   r13
    eeb8:	push   r12
    eeba:	lea    rcx,[rip+0x25ff]        # 114c0 <primes>
    eec1:	push   rbp
    eec2:	push   rbx
    eec3:	mov    ebx,0x35
    eec8:	sub    rsp,0x8
    eecc:	cmp    edi,0x40000000
    eed2:	jbe    eef1 <create_hashtable+0x41>
    eed4:	jmp    efb0 <create_hashtable+0x100>
    eed9:	nop    DWORD PTR [rax+0x0]
    eee0:	add    rax,0x1
    eee4:	cmp    rax,0x1a
    eee8:	je     ef90 <create_hashtable+0xe0>
    eeee:	mov    ebx,DWORD PTR [rcx+rax*4]
    eef1:	cmp    ebx,edi
    eef3:	mov    ebp,eax
    eef5:	jbe    eee0 <create_hashtable+0x30>
    eef7:	mov    r14,rsi
    eefa:	mov    edi,0x1
    eeff:	mov    esi,0x30
    ef04:	mov    r13,rdx
    ef07:	call   29a0 <calloc@plt>
    ef0c:	test   rax,rax
    ef0f:	mov    r12,rax
    ef12:	je     efb0 <create_hashtable+0x100>
    ef18:	mov    r15d,ebx
    ef1b:	mov    esi,0x8
    ef20:	mov    rdi,r15
    ef23:	call   29a0 <calloc@plt>
    ef28:	test   rax,rax
    ef2b:	mov    QWORD PTR [r12+0x8],rax
    ef30:	je     ef9f <create_hashtable+0xef>
    ef32:	mov    rdx,r15
    ef35:	movabs rcx,0x28f5c28f5c28f5c3
    ef3f:	mov    DWORD PTR [r12],ebx
    ef43:	shl    rdx,0x6
    ef47:	mov    DWORD PTR [r12+0x18],ebp
    ef4c:	mov    DWORD PTR [r12+0x10],0x0
    ef55:	add    rdx,r15
    ef58:	mov    QWORD PTR [r12+0x20],r14
    ef5d:	mov    QWORD PTR [r12+0x28],r13
    ef62:	shr    rdx,0x2
    ef66:	mov    rax,rdx
    ef69:	mul    rcx
    ef6c:	shr    rdx,0x2
    ef70:	mov    DWORD PTR [r12+0x14],edx
    ef75:	add    rsp,0x8
    ef79:	mov    rax,r12
    ef7c:	pop    rbx
    ef7d:	pop    rbp
    ef7e:	pop    r12
    ef80:	pop    r13
    ef82:	pop    r14
    ef84:	pop    r15
    ef86:	ret    
    ef87:	nop    WORD PTR [rax+rax*1+0x0]
    ef90:	mov    ebp,0x1a
    ef95:	mov    ebx,0x35
    ef9a:	jmp    eef7 <create_hashtable+0x47>
    ef9f:	mov    rdi,r12
    efa2:	call   2700 <free@plt>
    efa7:	nop    WORD PTR [rax+rax*1+0x0]
    efb0:	xor    r12d,r12d
    efb3:	jmp    ef75 <create_hashtable+0xc5>
    efb5:	nop
    efb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000efc0 <hash>:
    efc0:	mov    rax,rdi
    efc3:	sub    rsp,0x8
    efc7:	mov    rdi,rsi
    efca:	call   QWORD PTR [rax+0x20]
    efcd:	mov    edx,eax
    efcf:	sub    eax,0x1
    efd2:	add    rsp,0x8
    efd6:	shl    edx,0x9
    efd9:	sub    eax,edx
    efdb:	mov    edx,eax
    efdd:	ror    edx,0xe
    efe0:	xor    eax,edx
    efe2:	mov    edx,eax
    efe4:	shl    edx,0x4
    efe7:	add    eax,edx
    efe9:	mov    edx,eax
    efeb:	ror    edx,0xa
    efee:	xor    eax,edx
    eff0:	ret    
    eff1:	nop    DWORD PTR [rax+rax*1+0x0]
    eff6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f000 <hashtable_count>:
    f000:	mov    eax,DWORD PTR [rdi+0x10]
    f003:	ret    
    f004:	xchg   ax,ax
    f006:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f010 <hashtable_insert>:
    f010:	push   r15
    f012:	push   r14
    f014:	push   r13
    f016:	push   r12
    f018:	mov    r12,rdx
    f01b:	push   rbp
    f01c:	push   rbx
    f01d:	mov    rbp,rsi
    f020:	mov    rbx,rdi
    f023:	sub    rsp,0x8
    f027:	mov    eax,DWORD PTR [rdi+0x10]
    f02a:	add    eax,0x1
    f02d:	cmp    eax,DWORD PTR [rdi+0x14]
    f030:	mov    DWORD PTR [rdi+0x10],eax
    f033:	ja     f068 <hashtable_insert+0x58>
    f035:	mov    esi,0x20
    f03a:	mov    edi,0x1
    f03f:	call   29a0 <calloc@plt>
    f044:	test   rax,rax
    f047:	mov    r13,rax
    f04a:	jne    f0c8 <hashtable_insert+0xb8>
    f04c:	sub    DWORD PTR [rbx+0x10],0x1
    f050:	add    rsp,0x8
    f054:	xor    eax,eax
    f056:	pop    rbx
    f057:	pop    rbp
    f058:	pop    r12
    f05a:	pop    r13
    f05c:	pop    r14
    f05e:	pop    r15
    f060:	ret    
    f061:	nop    DWORD PTR [rax+0x0]
    f068:	mov    eax,DWORD PTR [rdi+0x18]
    f06b:	cmp    eax,0x19
    f06e:	je     f035 <hashtable_insert+0x25>
    f070:	lea    rdx,[rip+0x2449]        # 114c0 <primes>
    f077:	add    eax,0x1
    f07a:	mov    esi,0x8
    f07f:	mov    DWORD PTR [rdi+0x18],eax
    f082:	mov    r13d,DWORD PTR [rdx+rax*4]
    f086:	mov    rdi,r13
    f089:	mov    r14,r13
    f08c:	call   29a0 <calloc@plt>
    f091:	test   rax,rax
    f094:	mov    r15,rax
    f097:	mov    rdi,QWORD PTR [rbx+0x8]
    f09b:	jne    f128 <hashtable_insert+0x118>
    f0a1:	lea    rsi,[r13*8+0x0]
    f0a9:	call   2ad0 <realloc@plt>
    f0ae:	test   rax,rax
    f0b1:	mov    r15,rax
    f0b4:	jne    f1c1 <hashtable_insert+0x1b1>
    f0ba:	sub    DWORD PTR [rbx+0x18],0x1
    f0be:	jmp    f035 <hashtable_insert+0x25>
    f0c3:	nop    DWORD PTR [rax+rax*1+0x0]
    f0c8:	mov    rdi,rbp
    f0cb:	call   QWORD PTR [rbx+0x20]
    f0ce:	mov    edx,eax
    f0d0:	sub    eax,0x1
    f0d3:	mov    QWORD PTR [r13+0x0],rbp
    f0d7:	shl    edx,0x9
    f0da:	mov    QWORD PTR [r13+0x8],r12
    f0de:	sub    eax,edx
    f0e0:	mov    edx,eax
    f0e2:	ror    edx,0xe
    f0e5:	xor    eax,edx
    f0e7:	mov    edx,eax
    f0e9:	shl    edx,0x4
    f0ec:	add    eax,edx
    f0ee:	mov    edx,eax
    f0f0:	ror    edx,0xa
    f0f3:	xor    eax,edx
    f0f5:	xor    edx,edx
    f0f7:	mov    DWORD PTR [r13+0x10],eax
    f0fb:	div    DWORD PTR [rbx]
    f0fd:	mov    eax,edx
    f0ff:	mov    rdx,QWORD PTR [rbx+0x8]
    f103:	lea    rax,[rdx+rax*8]
    f107:	mov    rdx,QWORD PTR [rax]
    f10a:	mov    QWORD PTR [r13+0x18],rdx
    f10e:	mov    QWORD PTR [rax],r13
    f111:	add    rsp,0x8
    f115:	pop    rbx
    f116:	mov    eax,0xffffffff
    f11b:	pop    rbp
    f11c:	pop    r12
    f11e:	pop    r13
    f120:	pop    r14
    f122:	pop    r15
    f124:	ret    
    f125:	nop    DWORD PTR [rax]
    f128:	mov    edx,DWORD PTR [rbx]
    f12a:	xor    r8d,r8d
    f12d:	test   edx,edx
    f12f:	je     f188 <hashtable_insert+0x178>
    f131:	nop    DWORD PTR [rax+0x0]
    f138:	mov    esi,r8d
    f13b:	shl    rsi,0x3
    f13f:	lea    rax,[rdi+rsi*1]
    f143:	mov    rcx,QWORD PTR [rax]
    f146:	test   rcx,rcx
    f149:	je     f17f <hashtable_insert+0x16f>
    f14b:	nop    DWORD PTR [rax+rax*1+0x0]
    f150:	mov    rdx,QWORD PTR [rcx+0x18]
    f154:	mov    QWORD PTR [rax],rdx
    f157:	mov    eax,DWORD PTR [rcx+0x10]
    f15a:	xor    edx,edx
    f15c:	div    r14d
    f15f:	mov    edx,edx
    f161:	lea    rax,[r15+rdx*8]
    f165:	mov    rdx,QWORD PTR [rax]
    f168:	mov    QWORD PTR [rcx+0x18],rdx
    f16c:	mov    rdi,QWORD PTR [rbx+0x8]
    f170:	mov    QWORD PTR [rax],rcx
    f173:	lea    rax,[rdi+rsi*1]
    f177:	mov    rcx,QWORD PTR [rax]
    f17a:	test   rcx,rcx
    f17d:	jne    f150 <hashtable_insert+0x140>
    f17f:	add    r8d,0x1
    f183:	cmp    r8d,DWORD PTR [rbx]
    f186:	jb     f138 <hashtable_insert+0x128>
    f188:	call   2700 <free@plt>
    f18d:	mov    QWORD PTR [rbx+0x8],r15
    f191:	mov    rdx,r13
    f194:	mov    DWORD PTR [rbx],r14d
    f197:	shl    rdx,0x6
    f19b:	add    rdx,r13
    f19e:	shr    rdx,0x2
    f1a2:	mov    r13,rdx
    f1a5:	movabs rdx,0x28f5c28f5c28f5c3
    f1af:	mov    rax,r13
    f1b2:	mul    rdx
    f1b5:	shr    rdx,0x2
    f1b9:	mov    DWORD PTR [rbx+0x14],edx
    f1bc:	jmp    f035 <hashtable_insert+0x25>
    f1c1:	mov    QWORD PTR [rbx+0x8],rax
    f1c5:	mov    eax,DWORD PTR [rbx]
    f1c7:	mov    edx,r13d
    f1ca:	xor    esi,esi
    f1cc:	mov    rdi,QWORD PTR [r15+rax*8]
    f1d0:	sub    edx,eax
    f1d2:	call   2920 <memset@plt>
    f1d7:	mov    eax,DWORD PTR [rbx]
    f1d9:	test   eax,eax
    f1db:	je     f191 <hashtable_insert+0x181>
    f1dd:	xor    edi,edi
    f1df:	nop
    f1e0:	mov    eax,edi
    f1e2:	lea    rsi,[r15+rax*8]
    f1e6:	mov    rcx,QWORD PTR [rsi]
    f1e9:	test   rcx,rcx
    f1ec:	je     f219 <hashtable_insert+0x209>
    f1ee:	mov    eax,DWORD PTR [rcx+0x10]
    f1f1:	xor    edx,edx
    f1f3:	div    r14d
    f1f6:	mov    rax,QWORD PTR [rcx+0x18]
    f1fa:	cmp    edx,edi
    f1fc:	je     f228 <hashtable_insert+0x218>
    f1fe:	mov    QWORD PTR [rsi],rax
    f201:	mov    eax,edx
    f203:	lea    rax,[r15+rax*8]
    f207:	mov    rdx,QWORD PTR [rax]
    f20a:	mov    QWORD PTR [rcx+0x18],rdx
    f20e:	mov    QWORD PTR [rax],rcx
    f211:	mov    rcx,QWORD PTR [rsi]
    f214:	test   rcx,rcx
    f217:	jne    f1ee <hashtable_insert+0x1de>
    f219:	add    edi,0x1
    f21c:	cmp    edi,DWORD PTR [rbx]
    f21e:	jb     f1e0 <hashtable_insert+0x1d0>
    f220:	jmp    f191 <hashtable_insert+0x181>
    f225:	nop    DWORD PTR [rax]
    f228:	lea    rsi,[rcx+0x18]
    f22c:	mov    rcx,rax
    f22f:	jmp    f1e9 <hashtable_insert+0x1d9>
    f231:	nop    DWORD PTR [rax+rax*1+0x0]
    f236:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f240 <hashtable_search>:
    f240:	push   r13
    f242:	push   r12
    f244:	mov    r12,rdi
    f247:	push   rbp
    f248:	push   rbx
    f249:	mov    r13,rsi
    f24c:	mov    rdi,rsi
    f24f:	sub    rsp,0x8
    f253:	call   QWORD PTR [r12+0x20]
    f258:	mov    edx,eax
    f25a:	lea    ebp,[rax-0x1]
    f25d:	shl    edx,0x9
    f260:	sub    ebp,edx
    f262:	xor    edx,edx
    f264:	mov    eax,ebp
    f266:	ror    eax,0xe
    f269:	xor    ebp,eax
    f26b:	mov    eax,ebp
    f26d:	shl    eax,0x4
    f270:	add    ebp,eax
    f272:	mov    eax,ebp
    f274:	ror    eax,0xa
    f277:	xor    ebp,eax
    f279:	mov    eax,ebp
    f27b:	div    DWORD PTR [r12]
    f27f:	mov    rax,QWORD PTR [r12+0x8]
    f284:	mov    edx,edx
    f286:	mov    rbx,QWORD PTR [rax+rdx*8]
    f28a:	test   rbx,rbx
    f28d:	je     f2ad <hashtable_search+0x6d>
    f28f:	nop
    f290:	cmp    DWORD PTR [rbx+0x10],ebp
    f293:	jne    f2a4 <hashtable_search+0x64>
    f295:	mov    rsi,QWORD PTR [rbx]
    f298:	mov    rdi,r13
    f29b:	call   QWORD PTR [r12+0x28]
    f2a0:	test   eax,eax
    f2a2:	jne    f2c0 <hashtable_search+0x80>
    f2a4:	mov    rbx,QWORD PTR [rbx+0x18]
    f2a8:	test   rbx,rbx
    f2ab:	jne    f290 <hashtable_search+0x50>
    f2ad:	add    rsp,0x8
    f2b1:	xor    eax,eax
    f2b3:	pop    rbx
    f2b4:	pop    rbp
    f2b5:	pop    r12
    f2b7:	pop    r13
    f2b9:	ret    
    f2ba:	nop    WORD PTR [rax+rax*1+0x0]
    f2c0:	mov    rax,QWORD PTR [rbx+0x8]
    f2c4:	add    rsp,0x8
    f2c8:	pop    rbx
    f2c9:	pop    rbp
    f2ca:	pop    r12
    f2cc:	pop    r13
    f2ce:	ret    
    f2cf:	nop

000000000000f2d0 <hashtable_remove>:
    f2d0:	push   r14
    f2d2:	push   r13
    f2d4:	mov    r13,rsi
    f2d7:	push   r12
    f2d9:	mov    r12,rdi
    f2dc:	push   rbp
    f2dd:	mov    rdi,rsi
    f2e0:	push   rbx
    f2e1:	call   QWORD PTR [r12+0x20]
    f2e6:	mov    edx,eax
    f2e8:	lea    ebp,[rax-0x1]
    f2eb:	mov    rdi,r13
    f2ee:	shl    edx,0x9
    f2f1:	sub    ebp,edx
    f2f3:	mov    eax,ebp
    f2f5:	ror    eax,0xe
    f2f8:	xor    ebp,eax
    f2fa:	mov    eax,ebp
    f2fc:	shl    eax,0x4
    f2ff:	add    ebp,eax
    f301:	mov    eax,ebp
    f303:	ror    eax,0xa
    f306:	xor    ebp,eax
    f308:	call   QWORD PTR [r12+0x20]
    f30d:	mov    edx,eax
    f30f:	sub    eax,0x1
    f312:	shl    edx,0x9
    f315:	sub    eax,edx
    f317:	mov    edx,eax
    f319:	ror    edx,0xe
    f31c:	xor    eax,edx
    f31e:	mov    edx,eax
    f320:	shl    edx,0x4
    f323:	add    eax,edx
    f325:	mov    edx,eax
    f327:	ror    edx,0xa
    f32a:	xor    eax,edx
    f32c:	xor    edx,edx
    f32e:	div    DWORD PTR [r12]
    f332:	mov    eax,edx
    f334:	mov    rdx,QWORD PTR [r12+0x8]
    f339:	lea    r14,[rdx+rax*8]
    f33d:	mov    rbx,QWORD PTR [r14]
    f340:	test   rbx,rbx
    f343:	je     f369 <hashtable_remove+0x99>
    f345:	nop    DWORD PTR [rax]
    f348:	cmp    DWORD PTR [rbx+0x10],ebp
    f34b:	jne    f35c <hashtable_remove+0x8c>
    f34d:	mov    rsi,QWORD PTR [rbx]
    f350:	mov    rdi,r13
    f353:	call   QWORD PTR [r12+0x28]
    f358:	test   eax,eax
    f35a:	jne    f380 <hashtable_remove+0xb0>
    f35c:	lea    r14,[rbx+0x18]
    f360:	mov    rbx,QWORD PTR [rbx+0x18]
    f364:	test   rbx,rbx
    f367:	jne    f348 <hashtable_remove+0x78>
    f369:	xor    ebp,ebp
    f36b:	pop    rbx
    f36c:	mov    rax,rbp
    f36f:	pop    rbp
    f370:	pop    r12
    f372:	pop    r13
    f374:	pop    r14
    f376:	ret    
    f377:	nop    WORD PTR [rax+rax*1+0x0]
    f380:	mov    rax,QWORD PTR [rbx+0x18]
    f384:	mov    QWORD PTR [r14],rax
    f387:	sub    DWORD PTR [r12+0x10],0x1
    f38d:	mov    rdi,QWORD PTR [rbx]
    f390:	mov    rbp,QWORD PTR [rbx+0x8]
    f394:	call   2700 <free@plt>
    f399:	mov    rdi,rbx
    f39c:	call   2700 <free@plt>
    f3a1:	pop    rbx
    f3a2:	mov    rax,rbp
    f3a5:	pop    rbp
    f3a6:	pop    r12
    f3a8:	pop    r13
    f3aa:	pop    r14
    f3ac:	ret    
    f3ad:	nop    DWORD PTR [rax]

000000000000f3b0 <hashtable_destroy>:
    f3b0:	test   esi,esi
    f3b2:	push   r14
    f3b4:	push   r13
    f3b6:	push   r12
    f3b8:	mov    r12,rdi
    f3bb:	push   rbp
    f3bc:	push   rbx
    f3bd:	mov    r13,QWORD PTR [rdi+0x8]
    f3c1:	mov    eax,DWORD PTR [rdi]
    f3c3:	jne    f428 <hashtable_destroy+0x78>
    f3c5:	xor    r14d,r14d
    f3c8:	test   eax,eax
    f3ca:	je     f40b <hashtable_destroy+0x5b>
    f3cc:	nop    DWORD PTR [rax+0x0]
    f3d0:	mov    eax,r14d
    f3d3:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
    f3d8:	test   rbx,rbx
    f3db:	je     f3fc <hashtable_destroy+0x4c>
    f3dd:	nop    DWORD PTR [rax]
    f3e0:	mov    rdi,QWORD PTR [rbx]
    f3e3:	mov    rbp,QWORD PTR [rbx+0x18]
    f3e7:	call   2700 <free@plt>
    f3ec:	mov    rdi,rbx
    f3ef:	mov    rbx,rbp
    f3f2:	call   2700 <free@plt>
    f3f7:	test   rbp,rbp
    f3fa:	jne    f3e0 <hashtable_destroy+0x30>
    f3fc:	add    r14d,0x1
    f400:	cmp    DWORD PTR [r12],r14d
    f404:	ja     f3d0 <hashtable_destroy+0x20>
    f406:	mov    r13,QWORD PTR [r12+0x8]
    f40b:	mov    rdi,r13
    f40e:	call   2700 <free@plt>
    f413:	pop    rbx
    f414:	mov    rdi,r12
    f417:	pop    rbp
    f418:	pop    r12
    f41a:	pop    r13
    f41c:	pop    r14
    f41e:	jmp    2700 <free@plt>
    f423:	nop    DWORD PTR [rax+rax*1+0x0]
    f428:	test   eax,eax
    f42a:	je     f40b <hashtable_destroy+0x5b>
    f42c:	xor    r14d,r14d
    f42f:	nop
    f430:	mov    eax,r14d
    f433:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
    f438:	test   rbx,rbx
    f43b:	je     f465 <hashtable_destroy+0xb5>
    f43d:	nop    DWORD PTR [rax]
    f440:	mov    rdi,QWORD PTR [rbx]
    f443:	mov    rbp,QWORD PTR [rbx+0x18]
    f447:	call   2700 <free@plt>
    f44c:	mov    rdi,QWORD PTR [rbx+0x8]
    f450:	call   2700 <free@plt>
    f455:	mov    rdi,rbx
    f458:	mov    rbx,rbp
    f45b:	call   2700 <free@plt>
    f460:	test   rbp,rbp
    f463:	jne    f440 <hashtable_destroy+0x90>
    f465:	add    r14d,0x1
    f469:	cmp    DWORD PTR [r12],r14d
    f46d:	ja     f430 <hashtable_destroy+0x80>
    f46f:	jmp    f406 <hashtable_destroy+0x56>
    f471:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f47b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f480 <write_pidfile>:
    f480:	push   r13
    f482:	push   r12
    f484:	mov    edx,0x180
    f489:	push   rbp
    f48a:	push   rbx
    f48b:	mov    esi,0x42
    f490:	mov    r12,rdi
    f493:	sub    rsp,0x78
    f497:	mov    rax,QWORD PTR fs:0x28
    f4a0:	mov    QWORD PTR [rsp+0x68],rax
    f4a5:	xor    eax,eax
    f4a7:	call   2b70 <open@plt>
    f4ac:	cmp    eax,0xffffffff
    f4af:	je     f537 <write_pidfile+0xb7>
    f4b5:	xor    edx,edx
    f4b7:	mov    esi,0x2
    f4bc:	mov    edi,eax
    f4be:	mov    ebx,eax
    f4c0:	call   2910 <lockf@plt>
    f4c5:	cmp    eax,0xffffffff
    f4c8:	je     f530 <write_pidfile+0xb0>
    f4ca:	call   27c0 <getpid@plt>
    f4cf:	mov    r13,rsp
    f4d2:	lea    r8,[rip+0x6b6]        # fb8f <_IO_stdin_used+0x32f>
    f4d9:	movsxd r9,eax
    f4dc:	mov    ecx,0x64
    f4e1:	mov    edx,0x1
    f4e6:	mov    esi,0x64
    f4eb:	mov    rdi,r13
    f4ee:	xor    eax,eax
    f4f0:	call   26f0 <__snprintf_chk@plt>
    f4f5:	movsxd rbp,eax
    f4f8:	mov    rsi,r13
    f4fb:	mov    edi,ebx
    f4fd:	mov    rdx,rbp
    f500:	call   27b0 <write@plt>
    f505:	cmp    rax,rbp
    f508:	jne    f54d <write_pidfile+0xcd>
    f50a:	mov    edi,ebx
    f50c:	call   2930 <close@plt>
    f511:	mov    rax,QWORD PTR [rsp+0x68]
    f516:	xor    rax,QWORD PTR fs:0x28
    f51f:	jne    f548 <write_pidfile+0xc8>
    f521:	add    rsp,0x78
    f525:	pop    rbx
    f526:	pop    rbp
    f527:	pop    r12
    f529:	pop    r13
    f52b:	ret    
    f52c:	nop    DWORD PTR [rax+0x0]
    f530:	xor    edi,edi
    f532:	call   2c00 <exit@plt>
    f537:	lea    rdi,[rip+0x1fea]        # 11528 <primes+0x68>
    f53e:	mov    rsi,r12
    f541:	xor    eax,eax
    f543:	call   bf20 <barf_perror>
    f548:	call   2820 <__stack_chk_fail@plt>
    f54d:	lea    rdi,[rip+0x1fe8]        # 1153c <primes+0x7c>
    f554:	mov    rsi,r12
    f557:	xor    eax,eax
    f559:	call   bf20 <barf_perror>
    f55e:	xchg   ax,ax

000000000000f560 <daemonize>:
    f560:	sub    rsp,0x8
    f564:	call   2c50 <fork@plt>
    f569:	test   eax,eax
    f56b:	js     f5a7 <daemonize+0x47>
    f56d:	jne    f5a0 <daemonize+0x40>
    f56f:	call   2950 <setsid@plt>
    f574:	call   2c50 <fork@plt>
    f579:	test   eax,eax
    f57b:	js     f5a7 <daemonize+0x47>
    f57d:	jne    f5a0 <daemonize+0x40>
    f57f:	lea    rdi,[rip+0x40d]        # f993 <_IO_stdin_used+0x133>
    f586:	call   2810 <chdir@plt>
    f58b:	cmp    eax,0xffffffff
    f58e:	je     f5b5 <daemonize+0x55>
    f590:	xor    edi,edi
    f592:	add    rsp,0x8
    f596:	jmp    2a00 <umask@plt>
    f59b:	nop    DWORD PTR [rax+rax*1+0x0]
    f5a0:	xor    edi,edi
    f5a2:	call   2c00 <exit@plt>
    f5a7:	lea    rdi,[rip+0x1fa2]        # 11550 <primes+0x90>
    f5ae:	xor    eax,eax
    f5b0:	call   bf20 <barf_perror>
    f5b5:	lea    rdi,[rip+0x1faa]        # 11566 <primes+0xa6>
    f5bc:	xor    eax,eax
    f5be:	call   bf20 <barf_perror>
    f5c3:	nop    DWORD PTR [rax]
    f5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f5d0 <finish_daemonize>:
    f5d0:	push   rbx
    f5d1:	lea    rdi,[rip+0x1f9e]        # 11576 <primes+0xb6>
    f5d8:	xor    eax,eax
    f5da:	mov    esi,0x2
    f5df:	call   2b70 <open@plt>
    f5e4:	cmp    eax,0xffffffff
    f5e7:	je     f623 <finish_daemonize+0x53>
    f5e9:	mov    ebx,eax
    f5eb:	xor    esi,esi
    f5ed:	mov    edi,eax
    f5ef:	call   2860 <dup2@plt>
    f5f4:	mov    edi,ebx
    f5f6:	mov    esi,0x1
    f5fb:	call   2860 <dup2@plt>
    f600:	mov    edi,ebx
    f602:	mov    esi,0x2
    f607:	call   2860 <dup2@plt>
    f60c:	mov    edi,ebx
    f60e:	call   2930 <close@plt>
    f613:	lea    rax,[rip+0xffffffffffff46e6]        # 3d00 <trace>
    f61a:	pop    rbx
    f61b:	mov    QWORD PTR [rip+0x206c5e],rax        # 216280 <xprintf>
    f622:	ret    
    f623:	lea    rdi,[rip+0x1f56]        # 11580 <primes+0xc0>
    f62a:	xor    eax,eax
    f62c:	call   bf20 <barf_perror>
    f631:	nop    DWORD PTR [rax+rax*1+0x0]
    f636:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f640 <init_pipe>:
    f640:	sub    rsp,0x8
    f644:	call   2940 <pipe@plt>
    f649:	test   eax,eax
    f64b:	jne    f652 <init_pipe+0x12>
    f64d:	add    rsp,0x8
    f651:	ret    
    f652:	lea    rdi,[rip+0x1f41]        # 1159a <primes+0xda>
    f659:	xor    eax,eax
    f65b:	call   bf20 <barf_perror>

000000000000f660 <unmap_xenbus>:
    f660:	push   rbx
    f661:	mov    rbx,rdi
    f664:	call   2bf0 <getpagesize@plt>
    f669:	mov    rdi,rbx
    f66c:	movsxd rsi,eax
    f66f:	pop    rbx
    f670:	jmp    2b00 <munmap@plt>
    f675:	nop
    f676:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f680 <xenbus_evtchn>:
    f680:	push   r13
    f682:	push   r12
    f684:	lea    rdi,[rip+0x1f14]        # 1159f <primes+0xdf>
    f68b:	push   rbp
    f68c:	push   rbx
    f68d:	xor    esi,esi
    f68f:	mov    ebx,0xffffffff
    f694:	sub    rsp,0x28
    f698:	mov    rax,QWORD PTR fs:0x28
    f6a1:	mov    QWORD PTR [rsp+0x18],rax
    f6a6:	xor    eax,eax
    f6a8:	call   2b70 <open@plt>
    f6ad:	cmp    eax,ebx
    f6af:	je     f6e4 <xenbus_evtchn+0x64>
    f6b1:	mov    r12,rsp
    f6b4:	mov    edx,0x13
    f6b9:	mov    edi,eax
    f6bb:	mov    rsi,r12
    f6be:	mov    ebp,eax
    f6c0:	call   2980 <read@plt>
    f6c5:	cmp    eax,ebx
    f6c7:	je     f708 <xenbus_evtchn+0x88>
    f6c9:	cdqe   
    f6cb:	mov    rdi,r12
    f6ce:	xor    edx,edx
    f6d0:	xor    esi,esi
    f6d2:	mov    BYTE PTR [rsp+rax*1],0x0
    f6d6:	call   2bc0 <strtoul@plt>
    f6db:	mov    edi,ebp
    f6dd:	mov    ebx,eax
    f6df:	call   2930 <close@plt>
    f6e4:	mov    rcx,QWORD PTR [rsp+0x18]
    f6e9:	xor    rcx,QWORD PTR fs:0x28
    f6f2:	mov    eax,ebx
    f6f4:	jne    f720 <xenbus_evtchn+0xa0>
    f6f6:	add    rsp,0x28
    f6fa:	pop    rbx
    f6fb:	pop    rbp
    f6fc:	pop    r12
    f6fe:	pop    r13
    f700:	ret    
    f701:	nop    DWORD PTR [rax+0x0]
    f708:	call   2750 <__errno_location@plt>
    f70d:	mov    r13d,DWORD PTR [rax]
    f710:	mov    r12,rax
    f713:	mov    edi,ebp
    f715:	call   2930 <close@plt>
    f71a:	mov    DWORD PTR [r12],r13d
    f71e:	jmp    f6e4 <xenbus_evtchn+0x64>
    f720:	call   2820 <__stack_chk_fail@plt>
    f725:	nop
    f726:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f730 <xenbus_map>:
    f730:	push   rbp
    f731:	push   rbx
    f732:	lea    rdi,[rip+0x1e79]        # 115b2 <primes+0xf2>
    f739:	xor    eax,eax
    f73b:	mov    esi,0x2
    f740:	sub    rsp,0x8
    f744:	call   2b70 <open@plt>
    f749:	cmp    eax,0xffffffff
    f74c:	je     f790 <xenbus_map+0x60>
    f74e:	mov    ebp,eax
    f750:	call   2bf0 <getpagesize@plt>
    f755:	xor    edi,edi
    f757:	xor    r9d,r9d
    f75a:	movsxd rsi,eax
    f75d:	mov    r8d,ebp
    f760:	mov    ecx,0x1
    f765:	mov    edx,0x3
    f76a:	call   2840 <mmap@plt>
    f76f:	mov    edi,ebp
    f771:	mov    rbx,rax
    f774:	cmp    rax,0xffffffffffffffff
    f778:	mov    eax,0x0
    f77d:	cmove  rbx,rax
    f781:	call   2930 <close@plt>
    f786:	add    rsp,0x8
    f78a:	mov    rax,rbx
    f78d:	pop    rbx
    f78e:	pop    rbp
    f78f:	ret    
    f790:	xor    ebx,ebx
    f792:	jmp    f786 <xenbus_map+0x56>
    f794:	xchg   ax,ax
    f796:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f7a0 <xenbus_notify_running>:
    f7a0:	repz ret 
    f7a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f7ac:	nop    DWORD PTR [rax+0x0]

000000000000f7b0 <__libc_csu_init>:
    f7b0:	push   r15
    f7b2:	push   r14
    f7b4:	mov    r15,rdx
    f7b7:	push   r13
    f7b9:	push   r12
    f7bb:	lea    r12,[rip+0x205f4e]        # 215710 <__frame_dummy_init_array_entry>
    f7c2:	push   rbp
    f7c3:	lea    rbp,[rip+0x205f4e]        # 215718 <__init_array_end>
    f7ca:	push   rbx
    f7cb:	mov    r13d,edi
    f7ce:	mov    r14,rsi
    f7d1:	sub    rbp,r12
    f7d4:	sub    rsp,0x8
    f7d8:	sar    rbp,0x3
    f7dc:	call   26a8 <_init>
    f7e1:	test   rbp,rbp
    f7e4:	je     f806 <__libc_csu_init+0x56>
    f7e6:	xor    ebx,ebx
    f7e8:	nop    DWORD PTR [rax+rax*1+0x0]
    f7f0:	mov    rdx,r15
    f7f3:	mov    rsi,r14
    f7f6:	mov    edi,r13d
    f7f9:	call   QWORD PTR [r12+rbx*8]
    f7fd:	add    rbx,0x1
    f801:	cmp    rbp,rbx
    f804:	jne    f7f0 <__libc_csu_init+0x40>
    f806:	add    rsp,0x8
    f80a:	pop    rbx
    f80b:	pop    rbp
    f80c:	pop    r12
    f80e:	pop    r13
    f810:	pop    r14
    f812:	pop    r15
    f814:	ret    
    f815:	nop
    f816:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000f820 <__libc_csu_fini>:
    f820:	repz ret 
    f822:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f82c:	nop    DWORD PTR [rax+0x0]

000000000000f830 <atexit>:
    f830:	mov    rdx,QWORD PTR [rip+0x2067d1]        # 216008 <__dso_handle>
    f837:	xor    esi,esi
    f839:	jmp    2bd0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000f840 <_fini>:
    f840:	sub    rsp,0x8
    f844:	add    rsp,0x8
    f848:	ret    
