
xenperf:     file format elf64-x86-64


Disassembly of section .init:

0000000000000e78 <_init>:
 e78:	sub    rsp,0x8
 e7c:	mov    rax,QWORD PTR [rip+0x201165]        # 201fe8 <__gmon_start__>
 e83:	test   rax,rax
 e86:	je     e8a <_init+0x12>
 e88:	call   rax
 e8a:	add    rsp,0x8
 e8e:	ret    

Disassembly of section .plt:

0000000000000e90 <.plt>:
 e90:	push   QWORD PTR [rip+0x2010aa]        # 201f40 <_GLOBAL_OFFSET_TABLE_+0x8>
 e96:	jmp    QWORD PTR [rip+0x2010ac]        # 201f48 <_GLOBAL_OFFSET_TABLE_+0x10>
 e9c:	nop    DWORD PTR [rax+0x0]

0000000000000ea0 <__snprintf_chk@plt>:
 ea0:	jmp    QWORD PTR [rip+0x2010aa]        # 201f50 <__snprintf_chk@GLIBC_2.3.4>
 ea6:	push   0x0
 eab:	jmp    e90 <.plt>

0000000000000eb0 <putchar@plt>:
 eb0:	jmp    QWORD PTR [rip+0x2010a2]        # 201f58 <putchar@GLIBC_2.2.5>
 eb6:	push   0x1
 ebb:	jmp    e90 <.plt>

0000000000000ec0 <__errno_location@plt>:
 ec0:	jmp    QWORD PTR [rip+0x20109a]        # 201f60 <__errno_location@GLIBC_2.2.5>
 ec6:	push   0x2
 ecb:	jmp    e90 <.plt>

0000000000000ed0 <strncpy@plt>:
 ed0:	jmp    QWORD PTR [rip+0x201092]        # 201f68 <strncpy@GLIBC_2.2.5>
 ed6:	push   0x3
 edb:	jmp    e90 <.plt>

0000000000000ee0 <puts@plt>:
 ee0:	jmp    QWORD PTR [rip+0x20108a]        # 201f70 <puts@GLIBC_2.2.5>
 ee6:	push   0x4
 eeb:	jmp    e90 <.plt>

0000000000000ef0 <xc_perfc_query_number@plt>:
 ef0:	jmp    QWORD PTR [rip+0x201082]        # 201f78 <xc_perfc_query_number>
 ef6:	push   0x5
 efb:	jmp    e90 <.plt>

0000000000000f00 <xc_interface_open@plt>:
 f00:	jmp    QWORD PTR [rip+0x20107a]        # 201f80 <xc_interface_open>
 f06:	push   0x6
 f0b:	jmp    e90 <.plt>

0000000000000f10 <__stack_chk_fail@plt>:
 f10:	jmp    QWORD PTR [rip+0x201072]        # 201f88 <__stack_chk_fail@GLIBC_2.4>
 f16:	push   0x7
 f1b:	jmp    e90 <.plt>

0000000000000f20 <strcmp@plt>:
 f20:	jmp    QWORD PTR [rip+0x20106a]        # 201f90 <strcmp@GLIBC_2.2.5>
 f26:	push   0x8
 f2b:	jmp    e90 <.plt>

0000000000000f30 <xc_perfc_query@plt>:
 f30:	jmp    QWORD PTR [rip+0x201062]        # 201f98 <xc_perfc_query>
 f36:	push   0x9
 f3b:	jmp    e90 <.plt>

0000000000000f40 <xc_perfc_reset@plt>:
 f40:	jmp    QWORD PTR [rip+0x20105a]        # 201fa0 <xc_perfc_reset>
 f46:	push   0xa
 f4b:	jmp    e90 <.plt>

0000000000000f50 <xc__hypercall_buffer_free@plt>:
 f50:	jmp    QWORD PTR [rip+0x201052]        # 201fa8 <xc__hypercall_buffer_free>
 f56:	push   0xb
 f5b:	jmp    e90 <.plt>

0000000000000f60 <__printf_chk@plt>:
 f60:	jmp    QWORD PTR [rip+0x20104a]        # 201fb0 <__printf_chk@GLIBC_2.3.4>
 f66:	push   0xc
 f6b:	jmp    e90 <.plt>

0000000000000f70 <xc__hypercall_buffer_alloc@plt>:
 f70:	jmp    QWORD PTR [rip+0x201042]        # 201fb8 <xc__hypercall_buffer_alloc>
 f76:	push   0xd
 f7b:	jmp    e90 <.plt>

0000000000000f80 <exit@plt>:
 f80:	jmp    QWORD PTR [rip+0x20103a]        # 201fc0 <exit@GLIBC_2.2.5>
 f86:	push   0xe
 f8b:	jmp    e90 <.plt>

0000000000000f90 <__fprintf_chk@plt>:
 f90:	jmp    QWORD PTR [rip+0x201032]        # 201fc8 <__fprintf_chk@GLIBC_2.3.4>
 f96:	push   0xf
 f9b:	jmp    e90 <.plt>

0000000000000fa0 <strerror@plt>:
 fa0:	jmp    QWORD PTR [rip+0x20102a]        # 201fd0 <strerror@GLIBC_2.2.5>
 fa6:	push   0x10
 fab:	jmp    e90 <.plt>

Disassembly of section .plt.got:

0000000000000fb0 <__cxa_finalize@plt>:
 fb0:	jmp    QWORD PTR [rip+0x201042]        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 fb6:	xchg   ax,ax

Disassembly of section .text:

0000000000000fc0 <main>:
     fc0:	push   r15
     fc2:	push   r14
     fc4:	push   r13
     fc6:	push   r12
     fc8:	push   rbp
     fc9:	push   rbx
     fca:	sub    rsp,0xc8
     fd1:	mov    rax,QWORD PTR fs:0x28
     fda:	mov    QWORD PTR [rsp+0xb8],rax
     fe2:	xor    eax,eax
     fe4:	mov    rax,0xffffffffffffffff
     feb:	cmp    edi,0x1
     fee:	mov    QWORD PTR [rsp+0x30],0x0
     ff7:	mov    QWORD PTR [rsp+0x38],0x0
    1000:	mov    DWORD PTR [rsp+0x40],0x0
    1008:	mov    QWORD PTR [rsp+0x48],rax
    100d:	mov    QWORD PTR [rsp+0x50],0x0
    1016:	mov    QWORD PTR [rsp+0x60],0x0
    101f:	mov    QWORD PTR [rsp+0x68],0x0
    1028:	mov    DWORD PTR [rsp+0x70],0x0
    1030:	mov    QWORD PTR [rsp+0x78],rax
    1035:	mov    QWORD PTR [rsp+0x80],0x0
    1041:	jle    10e1 <main+0x121>
    1047:	mov    rax,QWORD PTR [rsi+0x8]
    104b:	cmp    BYTE PTR [rax],0x2d
    104e:	jne    106c <main+0xac>
    1050:	movzx  eax,BYTE PTR [rax+0x1]
    1054:	cmp    al,0x70
    1056:	je     144d <main+0x48d>
    105c:	cmp    al,0x72
    105e:	je     1406 <main+0x446>
    1064:	cmp    al,0x66
    1066:	je     12cf <main+0x30f>
    106c:	mov    rdx,QWORD PTR [rsi]
    106f:	lea    rsi,[rip+0x61e]        # 1694 <_IO_stdin_used+0x4>
    1076:	mov    edi,0x1
    107b:	xor    eax,eax
    107d:	xor    r12d,r12d
    1080:	call   f60 <__printf_chk@plt>
    1085:	lea    rdi,[rip+0x864]        # 18f0 <_IO_stdin_used+0x260>
    108c:	call   ee0 <puts@plt>
    1091:	lea    rdi,[rip+0x880]        # 1918 <_IO_stdin_used+0x288>
    1098:	call   ee0 <puts@plt>
    109d:	lea    rdi,[rip+0x89c]        # 1940 <_IO_stdin_used+0x2b0>
    10a4:	call   ee0 <puts@plt>
    10a9:	lea    rdi,[rip+0x5ee]        # 169e <_IO_stdin_used+0xe>
    10b0:	call   ee0 <puts@plt>
    10b5:	mov    rcx,QWORD PTR [rsp+0xb8]
    10bd:	xor    rcx,QWORD PTR fs:0x28
    10c6:	mov    eax,r12d
    10c9:	jne    14b6 <main+0x4f6>
    10cf:	add    rsp,0xc8
    10d6:	pop    rbx
    10d7:	pop    rbp
    10d8:	pop    r12
    10da:	pop    r13
    10dc:	pop    r14
    10de:	pop    r15
    10e0:	ret    
    10e1:	mov    DWORD PTR [rsp+0x14],0x0
    10e9:	xor    edx,edx
    10eb:	xor    esi,esi
    10ed:	xor    edi,edi
    10ef:	call   f00 <xc_interface_open@plt>
    10f4:	test   rax,rax
    10f7:	mov    QWORD PTR [rsp+0x8],rax
    10fc:	je     12f8 <main+0x338>
    1102:	mov    eax,DWORD PTR [rsp+0x14]
    1106:	mov    DWORD PTR [rsp+0x18],eax
    110a:	mov    rdi,QWORD PTR [rsp+0x8]
    110f:	lea    rdx,[rsp+0x2c]
    1114:	lea    rsi,[rsp+0x28]
    1119:	call   ef0 <xc_perfc_query_number@plt>
    111e:	test   eax,eax
    1120:	jne    1315 <main+0x355>
    1126:	movsxd rdx,DWORD PTR [rsp+0x28]
    112b:	mov    rsi,QWORD PTR [rsp+0x38]
    1130:	imul   rdx,rdx,0x54
    1134:	test   rsi,rsi
    1137:	je     145a <main+0x49a>
    113d:	mov    rdi,QWORD PTR [rsp+0x8]
    1142:	call   f70 <xc__hypercall_buffer_alloc@plt>
    1147:	movsxd rdx,DWORD PTR [rsp+0x2c]
    114c:	mov    rsi,QWORD PTR [rsp+0x68]
    1151:	mov    rbx,rax
    1154:	shl    rdx,0x2
    1158:	test   rsi,rsi
    115b:	je     1478 <main+0x4b8>
    1161:	mov    rdi,QWORD PTR [rsp+0x8]
    1166:	call   f70 <xc__hypercall_buffer_alloc@plt>
    116b:	test   rbx,rbx
    116e:	mov    rbp,rax
    1171:	je     14bb <main+0x4fb>
    1177:	test   rax,rax
    117a:	je     14bb <main+0x4fb>
    1180:	mov    rdx,QWORD PTR [rsp+0x68]
    1185:	test   rdx,rdx
    1188:	je     146e <main+0x4ae>
    118e:	mov    rsi,QWORD PTR [rsp+0x38]
    1193:	test   rsi,rsi
    1196:	je     1464 <main+0x4a4>
    119c:	mov    rdi,QWORD PTR [rsp+0x8]
    11a1:	call   f30 <xc_perfc_query@plt>
    11a6:	test   eax,eax
    11a8:	mov    r12d,eax
    11ab:	jne    1482 <main+0x4c2>
    11b1:	cmp    DWORD PTR [rsp+0x28],0x0
    11b6:	jle    129a <main+0x2da>
    11bc:	lea    r13,[rip+0x518]        # 16db <_IO_stdin_used+0x4b>
    11c3:	xor    r15d,r15d
    11c6:	mov    DWORD PTR [rsp+0x1c],eax
    11ca:	lea    rsi,[rip+0x4e5]        # 16b6 <_IO_stdin_used+0x26>
    11d1:	mov    rdx,rbx
    11d4:	xor    eax,eax
    11d6:	mov    edi,0x1
    11db:	call   f60 <__printf_chk@plt>
    11e0:	mov    edx,DWORD PTR [rbx+0x50]
    11e3:	test   edx,edx
    11e5:	je     1203 <main+0x243>
    11e7:	sub    edx,0x1
    11ea:	mov    rax,rbp
    11ed:	lea    rcx,[rbp+rdx*4+0x4]
    11f2:	xor    edx,edx
    11f4:	nop    DWORD PTR [rax+0x0]
    11f8:	add    edx,DWORD PTR [rax]
    11fa:	add    rax,0x4
    11fe:	cmp    rcx,rax
    1201:	jne    11f8 <main+0x238>
    1203:	lea    rsi,[rip+0x4b3]        # 16bd <_IO_stdin_used+0x2d>
    120a:	xor    eax,eax
    120c:	mov    edi,0x1
    1211:	call   f60 <__printf_chk@plt>
    1216:	cmp    DWORD PTR [rsp+0x14],0x0
    121b:	jne    1223 <main+0x263>
    121d:	cmp    DWORD PTR [rbx+0x50],0x4
    1221:	ja     1270 <main+0x2b0>
    1223:	cmp    DWORD PTR [rsp+0x18],0x0
    1228:	je     1241 <main+0x281>
    122a:	lea    rsi,[rip+0x494]        # 16c5 <_IO_stdin_used+0x35>
    1231:	mov    rdi,rbx
    1234:	call   f20 <strcmp@plt>
    1239:	test   eax,eax
    123b:	je     134e <main+0x38e>
    1241:	cmp    DWORD PTR [rbx+0x50],0x0
    1245:	mov    r12d,0x1
    124b:	je     1270 <main+0x2b0>
    124d:	nop    DWORD PTR [rax]
    1250:	mov    edx,DWORD PTR [rbp+r12*4-0x4]
    1255:	xor    eax,eax
    1257:	mov    rsi,r13
    125a:	mov    edi,0x1
    125f:	call   f60 <__printf_chk@plt>
    1264:	mov    eax,r12d
    1267:	add    r12,0x1
    126b:	cmp    DWORD PTR [rbx+0x50],eax
    126e:	ja     1250 <main+0x290>
    1270:	mov    edi,0xa
    1275:	call   eb0 <putchar@plt>
    127a:	mov    eax,DWORD PTR [rbx+0x50]
    127d:	add    r15d,0x1
    1281:	add    rbx,0x54
    1285:	cmp    DWORD PTR [rsp+0x28],r15d
    128a:	lea    rbp,[rbp+rax*4+0x0]
    128f:	jg     11ca <main+0x20a>
    1295:	mov    r12d,DWORD PTR [rsp+0x1c]
    129a:	mov    rsi,QWORD PTR [rsp+0x38]
    129f:	test   rsi,rsi
    12a2:	je     14a2 <main+0x4e2>
    12a8:	mov    rdi,QWORD PTR [rsp+0x8]
    12ad:	call   f50 <xc__hypercall_buffer_free@plt>
    12b2:	mov    rsi,QWORD PTR [rsp+0x68]
    12b7:	test   rsi,rsi
    12ba:	je     14ac <main+0x4ec>
    12c0:	mov    rdi,QWORD PTR [rsp+0x8]
    12c5:	call   f50 <xc__hypercall_buffer_free@plt>
    12ca:	jmp    10b5 <main+0xf5>
    12cf:	xor    edx,edx
    12d1:	xor    esi,esi
    12d3:	xor    edi,edi
    12d5:	call   f00 <xc_interface_open@plt>
    12da:	test   rax,rax
    12dd:	mov    QWORD PTR [rsp+0x8],rax
    12e2:	mov    DWORD PTR [rsp+0x18],0x0
    12ea:	mov    DWORD PTR [rsp+0x14],0x1
    12f2:	jne    110a <main+0x14a>
    12f8:	call   ec0 <__errno_location@plt>
    12fd:	mov    edi,DWORD PTR [rax]
    12ff:	mov    rbx,rax
    1302:	call   fa0 <strerror@plt>
    1307:	mov    ecx,DWORD PTR [rbx]
    1309:	mov    r8,rax
    130c:	lea    rdx,[rip+0x665]        # 1978 <_IO_stdin_used+0x2e8>
    1313:	jmp    1330 <main+0x370>
    1315:	call   ec0 <__errno_location@plt>
    131a:	mov    edi,DWORD PTR [rax]
    131c:	mov    rbx,rax
    131f:	call   fa0 <strerror@plt>
    1324:	mov    ecx,DWORD PTR [rbx]
    1326:	lea    rdx,[rip+0x6a3]        # 19d0 <_IO_stdin_used+0x340>
    132d:	mov    r8,rax
    1330:	mov    rdi,QWORD PTR [rip+0x200ee9]        # 202220 <stderr@@GLIBC_2.2.5>
    1337:	mov    esi,0x1
    133c:	xor    eax,eax
    133e:	mov    r12d,0x1
    1344:	call   f90 <__fprintf_chk@plt>
    1349:	jmp    10b5 <main+0xf5>
    134e:	mov    edi,0xa
    1353:	xor    r14d,r14d
    1356:	call   eb0 <putchar@plt>
    135b:	cmp    DWORD PTR [rbx+0x50],0x0
    135f:	je     127a <main+0x2ba>
    1365:	lea    r12,[rsp+0x90]
    136d:	jmp    13d3 <main+0x413>
    136f:	lea    rax,[rip+0x200caa]        # 202020 <hypercall_name_table>
    1376:	mov    rsi,QWORD PTR [rax+r14*8]
    137a:	test   rsi,rsi
    137d:	je     13e4 <main+0x424>
    137f:	mov    edx,0x24
    1384:	mov    rdi,r12
    1387:	call   ed0 <strncpy@plt>
    138c:	lea    rsi,[rip+0x323]        # 16b6 <_IO_stdin_used+0x26>
    1393:	mov    rdx,r12
    1396:	mov    edi,0x1
    139b:	xor    eax,eax
    139d:	mov    BYTE PTR [rsp+0xb3],0x0
    13a5:	call   f60 <__printf_chk@plt>
    13aa:	mov    edx,DWORD PTR [rbp+r14*4+0x0]
    13af:	lea    rsi,[rip+0x31f]        # 16d5 <_IO_stdin_used+0x45>
    13b6:	mov    edi,0x1
    13bb:	xor    eax,eax
    13bd:	call   f60 <__printf_chk@plt>
    13c2:	lea    eax,[r14+0x1]
    13c6:	add    r14,0x1
    13ca:	cmp    DWORD PTR [rbx+0x50],eax
    13cd:	jbe    127a <main+0x2ba>
    13d3:	cmp    DWORD PTR [rbp+r14*4+0x0],0x0
    13d9:	mov    r9d,r14d
    13dc:	je     13c2 <main+0x402>
    13de:	cmp    r14,0x3f
    13e2:	jbe    136f <main+0x3af>
    13e4:	lea    r8,[rip+0x2e5]        # 16d0 <_IO_stdin_used+0x40>
    13eb:	mov    ecx,0x24
    13f0:	mov    edx,0x1
    13f5:	mov    esi,0x24
    13fa:	mov    rdi,r12
    13fd:	xor    eax,eax
    13ff:	call   ea0 <__snprintf_chk@plt>
    1404:	jmp    138c <main+0x3cc>
    1406:	xor    edi,edi
    1408:	xor    edx,edx
    140a:	xor    esi,esi
    140c:	call   f00 <xc_interface_open@plt>
    1411:	test   rax,rax
    1414:	mov    rdi,rax
    1417:	je     12f8 <main+0x338>
    141d:	call   f40 <xc_perfc_reset@plt>
    1422:	test   eax,eax
    1424:	mov    r12d,eax
    1427:	je     10b5 <main+0xf5>
    142d:	call   ec0 <__errno_location@plt>
    1432:	mov    edi,DWORD PTR [rax]
    1434:	mov    rbx,rax
    1437:	call   fa0 <strerror@plt>
    143c:	mov    ecx,DWORD PTR [rbx]
    143e:	mov    r8,rax
    1441:	lea    rdx,[rip+0x558]        # 19a0 <_IO_stdin_used+0x310>
    1448:	jmp    1330 <main+0x370>
    144d:	mov    DWORD PTR [rsp+0x14],0x1
    1455:	jmp    10e9 <main+0x129>
    145a:	lea    rsi,[rsp+0x30]
    145f:	jmp    113d <main+0x17d>
    1464:	lea    rsi,[rsp+0x30]
    1469:	jmp    119c <main+0x1dc>
    146e:	lea    rdx,[rsp+0x60]
    1473:	jmp    118e <main+0x1ce>
    1478:	lea    rsi,[rsp+0x60]
    147d:	jmp    1161 <main+0x1a1>
    1482:	call   ec0 <__errno_location@plt>
    1487:	mov    edi,DWORD PTR [rax]
    1489:	mov    rbx,rax
    148c:	call   fa0 <strerror@plt>
    1491:	mov    ecx,DWORD PTR [rbx]
    1493:	mov    r8,rax
    1496:	lea    rdx,[rip+0x58b]        # 1a28 <_IO_stdin_used+0x398>
    149d:	jmp    1330 <main+0x370>
    14a2:	lea    rsi,[rsp+0x30]
    14a7:	jmp    12a8 <main+0x2e8>
    14ac:	lea    rsi,[rsp+0x60]
    14b1:	jmp    12c0 <main+0x300>
    14b6:	call   f10 <__stack_chk_fail@plt>
    14bb:	call   ec0 <__errno_location@plt>
    14c0:	mov    edi,DWORD PTR [rax]
    14c2:	mov    rbx,rax
    14c5:	call   fa0 <strerror@plt>
    14ca:	mov    rdi,QWORD PTR [rip+0x200d4f]        # 202220 <stderr@@GLIBC_2.2.5>
    14d1:	mov    ecx,DWORD PTR [rbx]
    14d3:	lea    rdx,[rip+0x526]        # 1a00 <_IO_stdin_used+0x370>
    14da:	mov    r8,rax
    14dd:	mov    esi,0x1
    14e2:	xor    eax,eax
    14e4:	call   f90 <__fprintf_chk@plt>
    14e9:	or     edi,0xffffffff
    14ec:	call   f80 <exit@plt>
    14f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
    14fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001500 <_start>:
    1500:	xor    ebp,ebp
    1502:	mov    r9,rdx
    1505:	pop    rsi
    1506:	mov    rdx,rsp
    1509:	and    rsp,0xfffffffffffffff0
    150d:	push   rax
    150e:	push   rsp
    150f:	lea    r8,[rip+0x16a]        # 1680 <__libc_csu_fini>
    1516:	lea    rcx,[rip+0xf3]        # 1610 <__libc_csu_init>
    151d:	lea    rdi,[rip+0xfffffffffffffa9c]        # fc0 <main>
    1524:	call   QWORD PTR [rip+0x200ab6]        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
    152a:	hlt    
    152b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001530 <deregister_tm_clones>:
    1530:	lea    rdi,[rip+0x200ce9]        # 202220 <stderr@@GLIBC_2.2.5>
    1537:	push   rbp
    1538:	lea    rax,[rip+0x200ce1]        # 202220 <stderr@@GLIBC_2.2.5>
    153f:	cmp    rax,rdi
    1542:	mov    rbp,rsp
    1545:	je     1560 <deregister_tm_clones+0x30>
    1547:	mov    rax,QWORD PTR [rip+0x200a8a]        # 201fd8 <_ITM_deregisterTMCloneTable>
    154e:	test   rax,rax
    1551:	je     1560 <deregister_tm_clones+0x30>
    1553:	pop    rbp
    1554:	jmp    rax
    1556:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1560:	pop    rbp
    1561:	ret    
    1562:	nop    DWORD PTR [rax+0x0]
    1566:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001570 <register_tm_clones>:
    1570:	lea    rdi,[rip+0x200ca9]        # 202220 <stderr@@GLIBC_2.2.5>
    1577:	lea    rsi,[rip+0x200ca2]        # 202220 <stderr@@GLIBC_2.2.5>
    157e:	push   rbp
    157f:	sub    rsi,rdi
    1582:	mov    rbp,rsp
    1585:	sar    rsi,0x3
    1589:	mov    rax,rsi
    158c:	shr    rax,0x3f
    1590:	add    rsi,rax
    1593:	sar    rsi,1
    1596:	je     15b0 <register_tm_clones+0x40>
    1598:	mov    rax,QWORD PTR [rip+0x200a51]        # 201ff0 <_ITM_registerTMCloneTable>
    159f:	test   rax,rax
    15a2:	je     15b0 <register_tm_clones+0x40>
    15a4:	pop    rbp
    15a5:	jmp    rax
    15a7:	nop    WORD PTR [rax+rax*1+0x0]
    15b0:	pop    rbp
    15b1:	ret    
    15b2:	nop    DWORD PTR [rax+0x0]
    15b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000015c0 <__do_global_dtors_aux>:
    15c0:	cmp    BYTE PTR [rip+0x200c61],0x0        # 202228 <completed.7697>
    15c7:	jne    15f8 <__do_global_dtors_aux+0x38>
    15c9:	cmp    QWORD PTR [rip+0x200a27],0x0        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
    15d1:	push   rbp
    15d2:	mov    rbp,rsp
    15d5:	je     15e3 <__do_global_dtors_aux+0x23>
    15d7:	mov    rdi,QWORD PTR [rip+0x200a2a]        # 202008 <__dso_handle>
    15de:	call   fb0 <__cxa_finalize@plt>
    15e3:	call   1530 <deregister_tm_clones>
    15e8:	mov    BYTE PTR [rip+0x200c39],0x1        # 202228 <completed.7697>
    15ef:	pop    rbp
    15f0:	ret    
    15f1:	nop    DWORD PTR [rax+0x0]
    15f8:	repz ret 
    15fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001600 <frame_dummy>:
    1600:	push   rbp
    1601:	mov    rbp,rsp
    1604:	pop    rbp
    1605:	jmp    1570 <register_tm_clones>
    160a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001610 <__libc_csu_init>:
    1610:	push   r15
    1612:	push   r14
    1614:	mov    r15,rdx
    1617:	push   r13
    1619:	push   r12
    161b:	lea    r12,[rip+0x200706]        # 201d28 <__frame_dummy_init_array_entry>
    1622:	push   rbp
    1623:	lea    rbp,[rip+0x200706]        # 201d30 <__init_array_end>
    162a:	push   rbx
    162b:	mov    r13d,edi
    162e:	mov    r14,rsi
    1631:	sub    rbp,r12
    1634:	sub    rsp,0x8
    1638:	sar    rbp,0x3
    163c:	call   e78 <_init>
    1641:	test   rbp,rbp
    1644:	je     1666 <__libc_csu_init+0x56>
    1646:	xor    ebx,ebx
    1648:	nop    DWORD PTR [rax+rax*1+0x0]
    1650:	mov    rdx,r15
    1653:	mov    rsi,r14
    1656:	mov    edi,r13d
    1659:	call   QWORD PTR [r12+rbx*8]
    165d:	add    rbx,0x1
    1661:	cmp    rbp,rbx
    1664:	jne    1650 <__libc_csu_init+0x40>
    1666:	add    rsp,0x8
    166a:	pop    rbx
    166b:	pop    rbp
    166c:	pop    r12
    166e:	pop    r13
    1670:	pop    r14
    1672:	pop    r15
    1674:	ret    
    1675:	nop
    1676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001680 <__libc_csu_fini>:
    1680:	repz ret 

Disassembly of section .fini:

0000000000001684 <_fini>:
    1684:	sub    rsp,0x8
    1688:	add    rsp,0x8
    168c:	ret    
