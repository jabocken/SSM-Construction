
xl:     file format elf64-x86-64


Disassembly of section .init:

000000000000ab98 <_init>:
    ab98:	sub    rsp,0x8
    ab9c:	mov    rax,QWORD PTR [rip+0x230425]        # 23afc8 <__gmon_start__>
    aba3:	test   rax,rax
    aba6:	je     abaa <_init+0x12>
    aba8:	call   rax
    abaa:	add    rsp,0x8
    abae:	ret    

Disassembly of section .plt:

000000000000abb0 <.plt>:
    abb0:	push   QWORD PTR [rip+0x22f6f2]        # 23a2a8 <_GLOBAL_OFFSET_TABLE_+0x8>
    abb6:	jmp    QWORD PTR [rip+0x22f6f4]        # 23a2b0 <_GLOBAL_OFFSET_TABLE_+0x10>
    abbc:	nop    DWORD PTR [rax+0x0]

000000000000abc0 <xlu_cfg_destroy@plt>:
    abc0:	jmp    QWORD PTR [rip+0x22f6f2]        # 23a2b8 <xlu_cfg_destroy>
    abc6:	push   0x0
    abcb:	jmp    abb0 <.plt>

000000000000abd0 <libxl_defbool_to_string@plt>:
    abd0:	jmp    QWORD PTR [rip+0x22f6ea]        # 23a2c0 <libxl_defbool_to_string>
    abd6:	push   0x1
    abdb:	jmp    abb0 <.plt>

000000000000abe0 <libxl_uuid_from_string@plt>:
    abe0:	jmp    QWORD PTR [rip+0x22f6e2]        # 23a2c8 <libxl_uuid_from_string>
    abe6:	push   0x2
    abeb:	jmp    abb0 <.plt>

000000000000abf0 <yajl_gen_array_close@plt>:
    abf0:	jmp    QWORD PTR [rip+0x22f6da]        # 23a2d0 <yajl_gen_array_close>
    abf6:	push   0x3
    abfb:	jmp    abb0 <.plt>

000000000000ac00 <libxl_vsnd_pcm_format_to_string@plt>:
    ac00:	jmp    QWORD PTR [rip+0x22f6d2]        # 23a2d8 <libxl_vsnd_pcm_format_to_string>
    ac06:	push   0x4
    ac0b:	jmp    abb0 <.plt>

000000000000ac10 <libxl_device_channel_list@plt>:
    ac10:	jmp    QWORD PTR [rip+0x22f6ca]        # 23a2e0 <libxl_device_channel_list>
    ac16:	push   0x5
    ac1b:	jmp    abb0 <.plt>

000000000000ac20 <libxl_device_vsnd_getinfo@plt>:
    ac20:	jmp    QWORD PTR [rip+0x22f6c2]        # 23a2e8 <libxl_device_vsnd_getinfo>
    ac26:	push   0x6
    ac2b:	jmp    abb0 <.plt>

000000000000ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>:
    ac30:	jmp    QWORD PTR [rip+0x22f6ba]        # 23a2f0 <libxl_cpupool_qualifier_to_cpupoolid>
    ac36:	push   0x7
    ac3b:	jmp    abb0 <.plt>

000000000000ac40 <free@plt>:
    ac40:	jmp    QWORD PTR [rip+0x22f6b2]        # 23a2f8 <free@GLIBC_2.2.5>
    ac46:	push   0x8
    ac4b:	jmp    abb0 <.plt>

000000000000ac50 <xlu_vif_parse_rate@plt>:
    ac50:	jmp    QWORD PTR [rip+0x22f6aa]        # 23a300 <xlu_vif_parse_rate>
    ac56:	push   0x9
    ac5b:	jmp    abb0 <.plt>

000000000000ac60 <libxl_device_vkb_getinfo@plt>:
    ac60:	jmp    QWORD PTR [rip+0x22f6a2]        # 23a308 <libxl_device_vkb_getinfo>
    ac66:	push   0xa
    ac6b:	jmp    abb0 <.plt>

000000000000ac70 <libxl_cpupoolid_is_valid@plt>:
    ac70:	jmp    QWORD PTR [rip+0x22f69a]        # 23a310 <libxl_cpupoolid_is_valid>
    ac76:	push   0xb
    ac7b:	jmp    abb0 <.plt>

000000000000ac80 <yajl_gen_integer@plt>:
    ac80:	jmp    QWORD PTR [rip+0x22f692]        # 23a318 <yajl_gen_integer>
    ac86:	push   0xc
    ac8b:	jmp    abb0 <.plt>

000000000000ac90 <libxl_get_free_memory@plt>:
    ac90:	jmp    QWORD PTR [rip+0x22f68a]        # 23a320 <libxl_get_free_memory>
    ac96:	push   0xd
    ac9b:	jmp    abb0 <.plt>

000000000000aca0 <putchar@plt>:
    aca0:	jmp    QWORD PTR [rip+0x22f682]        # 23a328 <putchar@GLIBC_2.2.5>
    aca6:	push   0xe
    acab:	jmp    abb0 <.plt>

000000000000acb0 <libxl_domain_config_gen_json@plt>:
    acb0:	jmp    QWORD PTR [rip+0x22f67a]        # 23a330 <libxl_domain_config_gen_json>
    acb6:	push   0xf
    acbb:	jmp    abb0 <.plt>

000000000000acc0 <libxl_psr_get_hw_info@plt>:
    acc0:	jmp    QWORD PTR [rip+0x22f672]        # 23a338 <libxl_psr_get_hw_info>
    acc6:	push   0x10
    accb:	jmp    abb0 <.plt>

000000000000acd0 <strcasecmp@plt>:
    acd0:	jmp    QWORD PTR [rip+0x22f66a]        # 23a340 <strcasecmp@GLIBC_2.2.5>
    acd6:	push   0x11
    acdb:	jmp    abb0 <.plt>

000000000000ace0 <libxl_bitmap_reset@plt>:
    ace0:	jmp    QWORD PTR [rip+0x22f662]        # 23a348 <libxl_bitmap_reset>
    ace6:	push   0x12
    aceb:	jmp    abb0 <.plt>

000000000000acf0 <libxl_report_child_exitstatus@plt>:
    acf0:	jmp    QWORD PTR [rip+0x22f65a]        # 23a350 <libxl_report_child_exitstatus>
    acf6:	push   0x13
    acfb:	jmp    abb0 <.plt>

000000000000ad00 <libxl_psr_cmt_get_total_rmid@plt>:
    ad00:	jmp    QWORD PTR [rip+0x22f652]        # 23a358 <libxl_psr_cmt_get_total_rmid>
    ad06:	push   0x14
    ad0b:	jmp    abb0 <.plt>

000000000000ad10 <localtime@plt>:
    ad10:	jmp    QWORD PTR [rip+0x22f64a]        # 23a360 <localtime@GLIBC_2.2.5>
    ad16:	push   0x15
    ad1b:	jmp    abb0 <.plt>

000000000000ad20 <libxl_userdata_retrieve@plt>:
    ad20:	jmp    QWORD PTR [rip+0x22f642]        # 23a368 <libxl_userdata_retrieve>
    ad26:	push   0x16
    ad2b:	jmp    abb0 <.plt>

000000000000ad30 <libxl_vcpu_sched_params_set_all@plt>:
    ad30:	jmp    QWORD PTR [rip+0x22f63a]        # 23a370 <libxl_vcpu_sched_params_set_all>
    ad36:	push   0x17
    ad3b:	jmp    abb0 <.plt>

000000000000ad40 <libxl_vcpu_sched_params_dispose@plt>:
    ad40:	jmp    QWORD PTR [rip+0x22f632]        # 23a378 <libxl_vcpu_sched_params_dispose>
    ad46:	push   0x18
    ad4b:	jmp    abb0 <.plt>

000000000000ad50 <abort@plt>:
    ad50:	jmp    QWORD PTR [rip+0x22f62a]        # 23a380 <abort@GLIBC_2.2.5>
    ad56:	push   0x19
    ad5b:	jmp    abb0 <.plt>

000000000000ad60 <xlu_cfg_get_listitem@plt>:
    ad60:	jmp    QWORD PTR [rip+0x22f622]        # 23a388 <xlu_cfg_get_listitem>
    ad66:	push   0x1a
    ad6b:	jmp    abb0 <.plt>

000000000000ad70 <libxl_socket_bitmap_alloc@plt>:
    ad70:	jmp    QWORD PTR [rip+0x22f61a]        # 23a390 <libxl_socket_bitmap_alloc>
    ad76:	push   0x1b
    ad7b:	jmp    abb0 <.plt>

000000000000ad80 <__errno_location@plt>:
    ad80:	jmp    QWORD PTR [rip+0x22f612]        # 23a398 <__errno_location@GLIBC_2.2.5>
    ad86:	push   0x1c
    ad8b:	jmp    abb0 <.plt>

000000000000ad90 <libxl_node_to_cpumap@plt>:
    ad90:	jmp    QWORD PTR [rip+0x22f60a]        # 23a3a0 <libxl_node_to_cpumap>
    ad96:	push   0x1d
    ad9b:	jmp    abb0 <.plt>

000000000000ada0 <strncmp@plt>:
    ada0:	jmp    QWORD PTR [rip+0x22f602]        # 23a3a8 <strncmp@GLIBC_2.2.5>
    ada6:	push   0x1e
    adab:	jmp    abb0 <.plt>

000000000000adb0 <libxl_cdrom_insert@plt>:
    adb0:	jmp    QWORD PTR [rip+0x22f5fa]        # 23a3b0 <libxl_cdrom_insert>
    adb6:	push   0x1f
    adbb:	jmp    abb0 <.plt>

000000000000adc0 <libxl_device_vkb_remove@plt>:
    adc0:	jmp    QWORD PTR [rip+0x22f5f2]        # 23a3b8 <libxl_device_vkb_remove>
    adc6:	push   0x20
    adcb:	jmp    abb0 <.plt>

000000000000add0 <libxl_cpuid_parse_config@plt>:
    add0:	jmp    QWORD PTR [rip+0x22f5ea]        # 23a3c0 <libxl_cpuid_parse_config>
    add6:	push   0x21
    addb:	jmp    abb0 <.plt>

000000000000ade0 <libxl_device_nic_init@plt>:
    ade0:	jmp    QWORD PTR [rip+0x22f5e2]        # 23a3c8 <libxl_device_nic_init>
    ade6:	push   0x22
    adeb:	jmp    abb0 <.plt>

000000000000adf0 <_exit@plt>:
    adf0:	jmp    QWORD PTR [rip+0x22f5da]        # 23a3d0 <_exit@GLIBC_2.2.5>
    adf6:	push   0x23
    adfb:	jmp    abb0 <.plt>

000000000000ae00 <libxl_cpupool_create@plt>:
    ae00:	jmp    QWORD PTR [rip+0x22f5d2]        # 23a3d8 <libxl_cpupool_create>
    ae06:	push   0x24
    ae0b:	jmp    abb0 <.plt>

000000000000ae10 <libxl_device_dtdev_init@plt>:
    ae10:	jmp    QWORD PTR [rip+0x22f5ca]        # 23a3e0 <libxl_device_dtdev_init>
    ae16:	push   0x25
    ae1b:	jmp    abb0 <.plt>

000000000000ae20 <libxl_domid_to_name@plt>:
    ae20:	jmp    QWORD PTR [rip+0x22f5c2]        # 23a3e8 <libxl_domid_to_name>
    ae26:	push   0x26
    ae2b:	jmp    abb0 <.plt>

000000000000ae30 <libxl_domain_reboot@plt>:
    ae30:	jmp    QWORD PTR [rip+0x22f5ba]        # 23a3f0 <libxl_domain_reboot>
    ae36:	push   0x27
    ae3b:	jmp    abb0 <.plt>

000000000000ae40 <libxl_psr_cmt_domain_attached@plt>:
    ae40:	jmp    QWORD PTR [rip+0x22f5b2]        # 23a3f8 <libxl_psr_cmt_domain_attached>
    ae46:	push   0x28
    ae4b:	jmp    abb0 <.plt>

000000000000ae50 <libxl_cpupoolinfo_list_free@plt>:
    ae50:	jmp    QWORD PTR [rip+0x22f5aa]        # 23a400 <libxl_cpupoolinfo_list_free>
    ae56:	push   0x29
    ae5b:	jmp    abb0 <.plt>

000000000000ae60 <libxl_cpuid_parse_config_xend@plt>:
    ae60:	jmp    QWORD PTR [rip+0x22f5a2]        # 23a408 <libxl_cpuid_parse_config_xend>
    ae66:	push   0x2a
    ae6b:	jmp    abb0 <.plt>

000000000000ae70 <libxl_domain_create_restore@plt>:
    ae70:	jmp    QWORD PTR [rip+0x22f59a]        # 23a410 <libxl_domain_create_restore>
    ae76:	push   0x2b
    ae7b:	jmp    abb0 <.plt>

000000000000ae80 <xtl_stdiostream_adjust_flags@plt>:
    ae80:	jmp    QWORD PTR [rip+0x22f592]        # 23a418 <xtl_stdiostream_adjust_flags@VERS_1.0>
    ae86:	push   0x2c
    ae8b:	jmp    abb0 <.plt>

000000000000ae90 <libxl_hdtype_from_string@plt>:
    ae90:	jmp    QWORD PTR [rip+0x22f58a]        # 23a420 <libxl_hdtype_from_string>
    ae96:	push   0x2d
    ae9b:	jmp    abb0 <.plt>

000000000000aea0 <libxl_device_vdispl_to_json@plt>:
    aea0:	jmp    QWORD PTR [rip+0x22f582]        # 23a428 <libxl_device_vdispl_to_json>
    aea6:	push   0x2e
    aeab:	jmp    abb0 <.plt>

000000000000aeb0 <puts@plt>:
    aeb0:	jmp    QWORD PTR [rip+0x22f57a]        # 23a430 <puts@GLIBC_2.2.5>
    aeb6:	push   0x2f
    aebb:	jmp    abb0 <.plt>

000000000000aec0 <ferror@plt>:
    aec0:	jmp    QWORD PTR [rip+0x22f572]        # 23a438 <ferror@GLIBC_2.2.5>
    aec6:	push   0x30
    aecb:	jmp    abb0 <.plt>

000000000000aed0 <libxl_domain_destroy@plt>:
    aed0:	jmp    QWORD PTR [rip+0x22f56a]        # 23a440 <libxl_domain_destroy>
    aed6:	push   0x31
    aedb:	jmp    abb0 <.plt>

000000000000aee0 <libxl_device_disk_add@plt>:
    aee0:	jmp    QWORD PTR [rip+0x22f562]        # 23a448 <libxl_device_disk_add>
    aee6:	push   0x32
    aeeb:	jmp    abb0 <.plt>

000000000000aef0 <libxl_qemu_monitor_command@plt>:
    aef0:	jmp    QWORD PTR [rip+0x22f55a]        # 23a450 <libxl_qemu_monitor_command>
    aef6:	push   0x33
    aefb:	jmp    abb0 <.plt>

000000000000af00 <isatty@plt>:
    af00:	jmp    QWORD PTR [rip+0x22f552]        # 23a458 <isatty@GLIBC_2.2.5>
    af06:	push   0x34
    af0b:	jmp    abb0 <.plt>

000000000000af10 <libxl_device_p9_init@plt>:
    af10:	jmp    QWORD PTR [rip+0x22f54a]        # 23a460 <libxl_device_p9_init>
    af16:	push   0x35
    af1b:	jmp    abb0 <.plt>

000000000000af20 <libxl_psr_cmt_enabled@plt>:
    af20:	jmp    QWORD PTR [rip+0x22f542]        # 23a468 <libxl_psr_cmt_enabled>
    af26:	push   0x36
    af2b:	jmp    abb0 <.plt>

000000000000af30 <libxl_psr_set_val@plt>:
    af30:	jmp    QWORD PTR [rip+0x22f53a]        # 23a470 <libxl_psr_set_val>
    af36:	push   0x37
    af3b:	jmp    abb0 <.plt>

000000000000af40 <xlu_cfg_get_listitem2@plt>:
    af40:	jmp    QWORD PTR [rip+0x22f532]        # 23a478 <xlu_cfg_get_listitem2>
    af46:	push   0x38
    af4b:	jmp    abb0 <.plt>

000000000000af50 <libxl_physinfo_init@plt>:
    af50:	jmp    QWORD PTR [rip+0x22f52a]        # 23a480 <libxl_physinfo_init>
    af56:	push   0x39
    af5b:	jmp    abb0 <.plt>

000000000000af60 <fcntl@plt>:
    af60:	jmp    QWORD PTR [rip+0x22f522]        # 23a488 <fcntl@GLIBC_2.2.5>
    af66:	push   0x3a
    af6b:	jmp    abb0 <.plt>

000000000000af70 <write@plt>:
    af70:	jmp    QWORD PTR [rip+0x22f51a]        # 23a490 <write@GLIBC_2.2.5>
    af76:	push   0x3b
    af7b:	jmp    abb0 <.plt>

000000000000af80 <libxl_get_pci_topology@plt>:
    af80:	jmp    QWORD PTR [rip+0x22f512]        # 23a498 <libxl_get_pci_topology>
    af86:	push   0x3c
    af8b:	jmp    abb0 <.plt>

000000000000af90 <libxl_device_pci_list@plt>:
    af90:	jmp    QWORD PTR [rip+0x22f50a]        # 23a4a0 <libxl_device_pci_list>
    af96:	push   0x3d
    af9b:	jmp    abb0 <.plt>

000000000000afa0 <getpid@plt>:
    afa0:	jmp    QWORD PTR [rip+0x22f502]        # 23a4a8 <getpid@GLIBC_2.2.5>
    afa6:	push   0x3e
    afab:	jmp    abb0 <.plt>

000000000000afb0 <xlu_cfg_readdata@plt>:
    afb0:	jmp    QWORD PTR [rip+0x22f4fa]        # 23a4b0 <xlu_cfg_readdata>
    afb6:	push   0x3f
    afbb:	jmp    abb0 <.plt>

000000000000afc0 <libxl_device_vdispl_remove@plt>:
    afc0:	jmp    QWORD PTR [rip+0x22f4f2]        # 23a4b8 <libxl_device_vdispl_remove>
    afc6:	push   0x40
    afcb:	jmp    abb0 <.plt>

000000000000afd0 <libxl_altp2m_mode_from_string@plt>:
    afd0:	jmp    QWORD PTR [rip+0x22f4ea]        # 23a4c0 <libxl_altp2m_mode_from_string>
    afd6:	push   0x41
    afdb:	jmp    abb0 <.plt>

000000000000afe0 <libxl_node_bitmap_alloc@plt>:
    afe0:	jmp    QWORD PTR [rip+0x22f4e2]        # 23a4c8 <libxl_node_bitmap_alloc>
    afe6:	push   0x42
    afeb:	jmp    abb0 <.plt>

000000000000aff0 <libxl_get_online_cpus@plt>:
    aff0:	jmp    QWORD PTR [rip+0x22f4da]        # 23a4d0 <libxl_get_online_cpus>
    aff6:	push   0x43
    affb:	jmp    abb0 <.plt>

000000000000b000 <libxl_flask_loadpolicy@plt>:
    b000:	jmp    QWORD PTR [rip+0x22f4d2]        # 23a4d8 <libxl_flask_loadpolicy>
    b006:	push   0x44
    b00b:	jmp    abb0 <.plt>

000000000000b010 <libxl_device_vtpm_remove@plt>:
    b010:	jmp    QWORD PTR [rip+0x22f4ca]        # 23a4e0 <libxl_device_vtpm_remove>
    b016:	push   0x45
    b01b:	jmp    abb0 <.plt>

000000000000b020 <libxl_scheduler_from_string@plt>:
    b020:	jmp    QWORD PTR [rip+0x22f4c2]        # 23a4e8 <libxl_scheduler_from_string>
    b026:	push   0x46
    b02b:	jmp    abb0 <.plt>

000000000000b030 <libxl_device_nic_dispose@plt>:
    b030:	jmp    QWORD PTR [rip+0x22f4ba]        # 23a4f0 <libxl_device_nic_dispose>
    b036:	push   0x47
    b03b:	jmp    abb0 <.plt>

000000000000b040 <libxl_psr_get_val@plt>:
    b040:	jmp    QWORD PTR [rip+0x22f4b2]        # 23a4f8 <libxl_psr_get_val>
    b046:	push   0x48
    b04b:	jmp    abb0 <.plt>

000000000000b050 <libxl_domain_build_info_init_type@plt>:
    b050:	jmp    QWORD PTR [rip+0x22f4aa]        # 23a500 <libxl_domain_build_info_init_type>
    b056:	push   0x49
    b05b:	jmp    abb0 <.plt>

000000000000b060 <libxl_vncviewer_exec@plt>:
    b060:	jmp    QWORD PTR [rip+0x22f4a2]        # 23a508 <libxl_vncviewer_exec>
    b066:	push   0x4a
    b06b:	jmp    abb0 <.plt>

000000000000b070 <libxl_psr_cat_get_info@plt>:
    b070:	jmp    QWORD PTR [rip+0x22f49a]        # 23a510 <libxl_psr_cat_get_info>
    b076:	push   0x4b
    b07b:	jmp    abb0 <.plt>

000000000000b080 <libxl_vminfo_list_free@plt>:
    b080:	jmp    QWORD PTR [rip+0x22f492]        # 23a518 <libxl_vminfo_list_free>
    b086:	push   0x4c
    b08b:	jmp    abb0 <.plt>

000000000000b090 <libxl_device_vkb_to_json@plt>:
    b090:	jmp    QWORD PTR [rip+0x22f48a]        # 23a520 <libxl_device_vkb_to_json>
    b096:	push   0x4d
    b09b:	jmp    abb0 <.plt>

000000000000b0a0 <libxl_evenable_disk_eject@plt>:
    b0a0:	jmp    QWORD PTR [rip+0x22f482]        # 23a528 <libxl_evenable_disk_eject>
    b0a6:	push   0x4e
    b0ab:	jmp    abb0 <.plt>

000000000000b0b0 <regfree@plt>:
    b0b0:	jmp    QWORD PTR [rip+0x22f47a]        # 23a530 <regfree@GLIBC_2.2.5>
    b0b6:	push   0x4f
    b0bb:	jmp    abb0 <.plt>

000000000000b0c0 <strlen@plt>:
    b0c0:	jmp    QWORD PTR [rip+0x22f472]        # 23a538 <strlen@GLIBC_2.2.5>
    b0c6:	push   0x50
    b0cb:	jmp    abb0 <.plt>

000000000000b0d0 <libxl_usbctrlinfo_dispose@plt>:
    b0d0:	jmp    QWORD PTR [rip+0x22f46a]        # 23a540 <libxl_usbctrlinfo_dispose>
    b0d6:	push   0x51
    b0db:	jmp    abb0 <.plt>

000000000000b0e0 <libxl_dominfo_list_free@plt>:
    b0e0:	jmp    QWORD PTR [rip+0x22f462]        # 23a548 <libxl_dominfo_list_free>
    b0e6:	push   0x52
    b0eb:	jmp    abb0 <.plt>

000000000000b0f0 <libxl_psr_cmt_get_sample@plt>:
    b0f0:	jmp    QWORD PTR [rip+0x22f45a]        # 23a550 <libxl_psr_cmt_get_sample>
    b0f6:	push   0x53
    b0fb:	jmp    abb0 <.plt>

000000000000b100 <libxl_vcpuinfo_list_free@plt>:
    b100:	jmp    QWORD PTR [rip+0x22f452]        # 23a558 <libxl_vcpuinfo_list_free>
    b106:	push   0x54
    b10b:	jmp    abb0 <.plt>

000000000000b110 <libxl_devid_to_device_nic@plt>:
    b110:	jmp    QWORD PTR [rip+0x22f44a]        # 23a560 <libxl_devid_to_device_nic>
    b116:	push   0x55
    b11b:	jmp    abb0 <.plt>

000000000000b120 <yajl_gen_null@plt>:
    b120:	jmp    QWORD PTR [rip+0x22f442]        # 23a568 <yajl_gen_null>
    b126:	push   0x56
    b12b:	jmp    abb0 <.plt>

000000000000b130 <__stack_chk_fail@plt>:
    b130:	jmp    QWORD PTR [rip+0x22f43a]        # 23a570 <__stack_chk_fail@GLIBC_2.4>
    b136:	push   0x57
    b13b:	jmp    abb0 <.plt>

000000000000b140 <libxl_defbool_set@plt>:
    b140:	jmp    QWORD PTR [rip+0x22f432]        # 23a578 <libxl_defbool_set>
    b146:	push   0x58
    b14b:	jmp    abb0 <.plt>

000000000000b150 <libxl_device_vtpm_add@plt>:
    b150:	jmp    QWORD PTR [rip+0x22f42a]        # 23a580 <libxl_device_vtpm_add>
    b156:	push   0x59
    b15b:	jmp    abb0 <.plt>

000000000000b160 <getopt_long@plt>:
    b160:	jmp    QWORD PTR [rip+0x22f422]        # 23a588 <getopt_long@GLIBC_2.2.5>
    b166:	push   0x5a
    b16b:	jmp    abb0 <.plt>

000000000000b170 <libxl_usbctrl_type_to_string@plt>:
    b170:	jmp    QWORD PTR [rip+0x22f41a]        # 23a590 <libxl_usbctrl_type_to_string>
    b176:	push   0x5b
    b17b:	jmp    abb0 <.plt>

000000000000b180 <libxl_childproc_setmode@plt>:
    b180:	jmp    QWORD PTR [rip+0x22f412]        # 23a598 <libxl_childproc_setmode>
    b186:	push   0x5c
    b18b:	jmp    abb0 <.plt>

000000000000b190 <system@plt>:
    b190:	jmp    QWORD PTR [rip+0x22f40a]        # 23a5a0 <system@GLIBC_2.2.5>
    b196:	push   0x5d
    b19b:	jmp    abb0 <.plt>

000000000000b1a0 <libxl_event_wait@plt>:
    b1a0:	jmp    QWORD PTR [rip+0x22f402]        # 23a5a8 <libxl_event_wait>
    b1a6:	push   0x5e
    b1ab:	jmp    abb0 <.plt>

000000000000b1b0 <dup2@plt>:
    b1b0:	jmp    QWORD PTR [rip+0x22f3fa]        # 23a5b0 <dup2@GLIBC_2.2.5>
    b1b6:	push   0x5f
    b1bb:	jmp    abb0 <.plt>

000000000000b1c0 <strchr@plt>:
    b1c0:	jmp    QWORD PTR [rip+0x22f3f2]        # 23a5b8 <strchr@GLIBC_2.2.5>
    b1c6:	push   0x60
    b1cb:	jmp    abb0 <.plt>

000000000000b1d0 <libxl_device_disk_list@plt>:
    b1d0:	jmp    QWORD PTR [rip+0x22f3ea]        # 23a5c0 <libxl_device_disk_list>
    b1d6:	push   0x61
    b1db:	jmp    abb0 <.plt>

000000000000b1e0 <libxl_scheduler_to_string@plt>:
    b1e0:	jmp    QWORD PTR [rip+0x22f3e2]        # 23a5c8 <libxl_scheduler_to_string>
    b1e6:	push   0x62
    b1eb:	jmp    abb0 <.plt>

000000000000b1f0 <libxl_ctrlport_to_device_usbdev@plt>:
    b1f0:	jmp    QWORD PTR [rip+0x22f3da]        # 23a5d0 <libxl_ctrlport_to_device_usbdev>
    b1f6:	push   0x63
    b1fb:	jmp    abb0 <.plt>

000000000000b200 <_IO_putc@plt>:
    b200:	jmp    QWORD PTR [rip+0x22f3d2]        # 23a5d8 <_IO_putc@GLIBC_2.2.5>
    b206:	push   0x64
    b20b:	jmp    abb0 <.plt>

000000000000b210 <libxl_defbool_is_default@plt>:
    b210:	jmp    QWORD PTR [rip+0x22f3ca]        # 23a5e0 <libxl_defbool_is_default>
    b216:	push   0x65
    b21b:	jmp    abb0 <.plt>

000000000000b220 <libxl_tmem_thaw@plt>:
    b220:	jmp    QWORD PTR [rip+0x22f3c2]        # 23a5e8 <libxl_tmem_thaw>
    b226:	push   0x66
    b22b:	jmp    abb0 <.plt>

000000000000b230 <libxl_device_disk_list_free@plt>:
    b230:	jmp    QWORD PTR [rip+0x22f3ba]        # 23a5f0 <libxl_device_disk_list_free>
    b236:	push   0x67
    b23b:	jmp    abb0 <.plt>

000000000000b240 <__fdelt_chk@plt>:
    b240:	jmp    QWORD PTR [rip+0x22f3b2]        # 23a5f8 <__fdelt_chk@GLIBC_2.15>
    b246:	push   0x68
    b24b:	jmp    abb0 <.plt>

000000000000b250 <libxl_device_channel_dispose@plt>:
    b250:	jmp    QWORD PTR [rip+0x22f3aa]        # 23a600 <libxl_device_channel_dispose>
    b256:	push   0x69
    b25b:	jmp    abb0 <.plt>

000000000000b260 <libxl_device_pci_init@plt>:
    b260:	jmp    QWORD PTR [rip+0x22f3a2]        # 23a608 <libxl_device_pci_init>
    b266:	push   0x6a
    b26b:	jmp    abb0 <.plt>

000000000000b270 <xlu_cfg_init@plt>:
    b270:	jmp    QWORD PTR [rip+0x22f39a]        # 23a610 <xlu_cfg_init>
    b276:	push   0x6b
    b27b:	jmp    abb0 <.plt>

000000000000b280 <libxl_event_free@plt>:
    b280:	jmp    QWORD PTR [rip+0x22f392]        # 23a618 <libxl_event_free>
    b286:	push   0x6c
    b28b:	jmp    abb0 <.plt>

000000000000b290 <uname@plt>:
    b290:	jmp    QWORD PTR [rip+0x22f38a]        # 23a620 <uname@GLIBC_2.2.5>
    b296:	push   0x6d
    b29b:	jmp    abb0 <.plt>

000000000000b2a0 <gmtime_r@plt>:
    b2a0:	jmp    QWORD PTR [rip+0x22f382]        # 23a628 <gmtime_r@GLIBC_2.2.5>
    b2a6:	push   0x6e
    b2ab:	jmp    abb0 <.plt>

000000000000b2b0 <libxl_event_check@plt>:
    b2b0:	jmp    QWORD PTR [rip+0x22f37a]        # 23a630 <libxl_event_check>
    b2b6:	push   0x6f
    b2bb:	jmp    abb0 <.plt>

000000000000b2c0 <xlu_cfg_get_long@plt>:
    b2c0:	jmp    QWORD PTR [rip+0x22f372]        # 23a638 <xlu_cfg_get_long>
    b2c6:	push   0x70
    b2cb:	jmp    abb0 <.plt>

000000000000b2d0 <libxl_uuid_generate@plt>:
    b2d0:	jmp    QWORD PTR [rip+0x22f36a]        # 23a640 <libxl_uuid_generate>
    b2d6:	push   0x71
    b2db:	jmp    abb0 <.plt>

000000000000b2e0 <gettimeofday@plt>:
    b2e0:	jmp    QWORD PTR [rip+0x22f362]        # 23a648 <gettimeofday@GLIBC_2.2.5>
    b2e6:	push   0x72
    b2eb:	jmp    abb0 <.plt>

000000000000b2f0 <__assert_fail@plt>:
    b2f0:	jmp    QWORD PTR [rip+0x22f35a]        # 23a650 <__assert_fail@GLIBC_2.2.5>
    b2f6:	push   0x73
    b2fb:	jmp    abb0 <.plt>

000000000000b300 <fputs@plt>:
    b300:	jmp    QWORD PTR [rip+0x22f352]        # 23a658 <fputs@GLIBC_2.2.5>
    b306:	push   0x74
    b30b:	jmp    abb0 <.plt>

000000000000b310 <libxl_device_pci_destroy@plt>:
    b310:	jmp    QWORD PTR [rip+0x22f34a]        # 23a660 <libxl_device_pci_destroy>
    b316:	push   0x75
    b31b:	jmp    abb0 <.plt>

000000000000b320 <libxl_read_file_contents@plt>:
    b320:	jmp    QWORD PTR [rip+0x22f342]        # 23a668 <libxl_read_file_contents>
    b326:	push   0x76
    b32b:	jmp    abb0 <.plt>

000000000000b330 <yajl_gen_get_buf@plt>:
    b330:	jmp    QWORD PTR [rip+0x22f33a]        # 23a670 <yajl_gen_get_buf>
    b336:	push   0x77
    b33b:	jmp    abb0 <.plt>

000000000000b340 <libxl_domain_qualifier_to_domid@plt>:
    b340:	jmp    QWORD PTR [rip+0x22f332]        # 23a678 <libxl_domain_qualifier_to_domid>
    b346:	push   0x78
    b34b:	jmp    abb0 <.plt>

000000000000b350 <libxl_vsnd_pcm_format_from_string@plt>:
    b350:	jmp    QWORD PTR [rip+0x22f32a]        # 23a680 <libxl_vsnd_pcm_format_from_string>
    b356:	push   0x79
    b35b:	jmp    abb0 <.plt>

000000000000b360 <libxl_get_version_info@plt>:
    b360:	jmp    QWORD PTR [rip+0x22f322]        # 23a688 <libxl_get_version_info>
    b366:	push   0x7a
    b36b:	jmp    abb0 <.plt>

000000000000b370 <libxl_string_list_length@plt>:
    b370:	jmp    QWORD PTR [rip+0x22f31a]        # 23a690 <libxl_string_list_length>
    b376:	push   0x7b
    b37b:	jmp    abb0 <.plt>

000000000000b380 <yajl_gen_string@plt>:
    b380:	jmp    QWORD PTR [rip+0x22f312]        # 23a698 <yajl_gen_string>
    b386:	push   0x7c
    b38b:	jmp    abb0 <.plt>

000000000000b390 <libxl_wait_for_memory_target@plt>:
    b390:	jmp    QWORD PTR [rip+0x22f30a]        # 23a6a0 <libxl_wait_for_memory_target>
    b396:	push   0x7d
    b39b:	jmp    abb0 <.plt>

000000000000b3a0 <libxl_bitmap_copy_alloc@plt>:
    b3a0:	jmp    QWORD PTR [rip+0x22f302]        # 23a6a8 <libxl_bitmap_copy_alloc>
    b3a6:	push   0x7e
    b3ab:	jmp    abb0 <.plt>

000000000000b3b0 <libxl_device_vdispl_add@plt>:
    b3b0:	jmp    QWORD PTR [rip+0x22f2fa]        # 23a6b0 <libxl_device_vdispl_add>
    b3b6:	push   0x7f
    b3bb:	jmp    abb0 <.plt>

000000000000b3c0 <libxl_device_usbctrl_list@plt>:
    b3c0:	jmp    QWORD PTR [rip+0x22f2f2]        # 23a6b8 <libxl_device_usbctrl_list>
    b3c6:	push   0x80
    b3cb:	jmp    abb0 <.plt>

000000000000b3d0 <yajl_gen_map_close@plt>:
    b3d0:	jmp    QWORD PTR [rip+0x22f2ea]        # 23a6c0 <yajl_gen_map_close>
    b3d6:	push   0x81
    b3db:	jmp    abb0 <.plt>

000000000000b3e0 <libxl_domain_restore_params_init@plt>:
    b3e0:	jmp    QWORD PTR [rip+0x22f2e2]        # 23a6c8 <libxl_domain_restore_params_init>
    b3e6:	push   0x82
    b3eb:	jmp    abb0 <.plt>

000000000000b3f0 <libxl_cpupool_cpuadd_cpumap@plt>:
    b3f0:	jmp    QWORD PTR [rip+0x22f2da]        # 23a6d0 <libxl_cpupool_cpuadd_cpumap>
    b3f6:	push   0x83
    b3fb:	jmp    abb0 <.plt>

000000000000b400 <memset@plt>:
    b400:	jmp    QWORD PTR [rip+0x22f2d2]        # 23a6d8 <memset@GLIBC_2.2.5>
    b406:	push   0x84
    b40b:	jmp    abb0 <.plt>

000000000000b410 <libxl_channelinfo_dispose@plt>:
    b410:	jmp    QWORD PTR [rip+0x22f2ca]        # 23a6e0 <libxl_channelinfo_dispose>
    b416:	push   0x85
    b41b:	jmp    abb0 <.plt>

000000000000b420 <yajl_gen_array_open@plt>:
    b420:	jmp    QWORD PTR [rip+0x22f2c2]        # 23a6e8 <yajl_gen_array_open>
    b426:	push   0x86
    b42b:	jmp    abb0 <.plt>

000000000000b430 <libxl_device_pci_add@plt>:
    b430:	jmp    QWORD PTR [rip+0x22f2ba]        # 23a6f0 <libxl_device_pci_add>
    b436:	push   0x87
    b43b:	jmp    abb0 <.plt>

000000000000b440 <libxl_domain_sched_params_dispose@plt>:
    b440:	jmp    QWORD PTR [rip+0x22f2b2]        # 23a6f8 <libxl_domain_sched_params_dispose>
    b446:	push   0x88
    b44b:	jmp    abb0 <.plt>

000000000000b450 <xlu_pci_parse_bdf@plt>:
    b450:	jmp    QWORD PTR [rip+0x22f2aa]        # 23a700 <xlu_pci_parse_bdf>
    b456:	push   0x89
    b45b:	jmp    abb0 <.plt>

000000000000b460 <libxl_domain_unpause@plt>:
    b460:	jmp    QWORD PTR [rip+0x22f2a2]        # 23a708 <libxl_domain_unpause>
    b466:	push   0x8a
    b46b:	jmp    abb0 <.plt>

000000000000b470 <libxl_get_physinfo@plt>:
    b470:	jmp    QWORD PTR [rip+0x22f29a]        # 23a710 <libxl_get_physinfo>
    b476:	push   0x8b
    b47b:	jmp    abb0 <.plt>

000000000000b480 <libxl_cpu_bitmap_alloc@plt>:
    b480:	jmp    QWORD PTR [rip+0x22f292]        # 23a718 <libxl_cpu_bitmap_alloc>
    b486:	push   0x8c
    b48b:	jmp    abb0 <.plt>

000000000000b490 <libxl_set_vcpuonline@plt>:
    b490:	jmp    QWORD PTR [rip+0x22f28a]        # 23a720 <libxl_set_vcpuonline>
    b496:	push   0x8d
    b49b:	jmp    abb0 <.plt>

000000000000b4a0 <close@plt>:
    b4a0:	jmp    QWORD PTR [rip+0x22f282]        # 23a728 <close@GLIBC_2.2.5>
    b4a6:	push   0x8e
    b4ab:	jmp    abb0 <.plt>

000000000000b4b0 <libxl_ctx_alloc@plt>:
    b4b0:	jmp    QWORD PTR [rip+0x22f27a]        # 23a730 <libxl_ctx_alloc>
    b4b6:	push   0x8f
    b4bb:	jmp    abb0 <.plt>

000000000000b4c0 <libxl_domain_shutdown@plt>:
    b4c0:	jmp    QWORD PTR [rip+0x22f272]        # 23a738 <libxl_domain_shutdown>
    b4c6:	push   0x90
    b4cb:	jmp    abb0 <.plt>

000000000000b4d0 <libxl_device_usbdev_add@plt>:
    b4d0:	jmp    QWORD PTR [rip+0x22f26a]        # 23a740 <libxl_device_usbdev_add>
    b4d6:	push   0x91
    b4db:	jmp    abb0 <.plt>

000000000000b4e0 <libxl_device_vsnd_list_free@plt>:
    b4e0:	jmp    QWORD PTR [rip+0x22f262]        # 23a748 <libxl_device_vsnd_list_free>
    b4e6:	push   0x92
    b4eb:	jmp    abb0 <.plt>

000000000000b4f0 <libxl_vdev_to_device_disk@plt>:
    b4f0:	jmp    QWORD PTR [rip+0x22f25a]        # 23a750 <libxl_vdev_to_device_disk>
    b4f6:	push   0x93
    b4fb:	jmp    abb0 <.plt>

000000000000b500 <libxl_ms_vm_genid_generate@plt>:
    b500:	jmp    QWORD PTR [rip+0x22f252]        # 23a758 <libxl_ms_vm_genid_generate>
    b506:	push   0x94
    b50b:	jmp    abb0 <.plt>

000000000000b510 <libxl_psr_cat_info_list_free@plt>:
    b510:	jmp    QWORD PTR [rip+0x22f24a]        # 23a760 <libxl_psr_cat_info_list_free>
    b516:	push   0x95
    b51b:	jmp    abb0 <.plt>

000000000000b520 <libxl_device_pci_assignable_list@plt>:
    b520:	jmp    QWORD PTR [rip+0x22f242]        # 23a768 <libxl_device_pci_assignable_list>
    b526:	push   0x96
    b52b:	jmp    abb0 <.plt>

000000000000b530 <regcomp@plt>:
    b530:	jmp    QWORD PTR [rip+0x22f23a]        # 23a770 <regcomp@GLIBC_2.2.5>
    b536:	push   0x97
    b53b:	jmp    abb0 <.plt>

000000000000b540 <fputc@plt>:
    b540:	jmp    QWORD PTR [rip+0x22f232]        # 23a778 <fputc@GLIBC_2.2.5>
    b546:	push   0x98
    b54b:	jmp    abb0 <.plt>

000000000000b550 <libxl_device_vkb_list_free@plt>:
    b550:	jmp    QWORD PTR [rip+0x22f22a]        # 23a780 <libxl_device_vkb_list_free>
    b556:	push   0x99
    b55b:	jmp    abb0 <.plt>

000000000000b560 <libxl_bitmap_is_empty@plt>:
    b560:	jmp    QWORD PTR [rip+0x22f222]        # 23a788 <libxl_bitmap_is_empty>
    b566:	push   0x9a
    b56b:	jmp    abb0 <.plt>

000000000000b570 <libxl_device_vdispl_list@plt>:
    b570:	jmp    QWORD PTR [rip+0x22f21a]        # 23a790 <libxl_device_vdispl_list>
    b576:	push   0x9b
    b57b:	jmp    abb0 <.plt>

000000000000b580 <strtok_r@plt>:
    b580:	jmp    QWORD PTR [rip+0x22f212]        # 23a798 <strtok_r@GLIBC_2.2.5>
    b586:	push   0x9c
    b58b:	jmp    abb0 <.plt>

000000000000b590 <read@plt>:
    b590:	jmp    QWORD PTR [rip+0x22f20a]        # 23a7a0 <read@GLIBC_2.2.5>
    b596:	push   0x9d
    b59b:	jmp    abb0 <.plt>

000000000000b5a0 <memcmp@plt>:
    b5a0:	jmp    QWORD PTR [rip+0x22f202]        # 23a7a8 <memcmp@GLIBC_2.2.5>
    b5a6:	push   0x9e
    b5ab:	jmp    abb0 <.plt>

000000000000b5b0 <libxl_domain_info@plt>:
    b5b0:	jmp    QWORD PTR [rip+0x22f1fa]        # 23a7b0 <libxl_domain_info>
    b5b6:	push   0x9f
    b5bb:	jmp    abb0 <.plt>

000000000000b5c0 <libxl_domain_sched_params_set@plt>:
    b5c0:	jmp    QWORD PTR [rip+0x22f1f2]        # 23a7b8 <libxl_domain_sched_params_set>
    b5c6:	push   0xa0
    b5cb:	jmp    abb0 <.plt>

000000000000b5d0 <libxl_vsndinfo_dispose@plt>:
    b5d0:	jmp    QWORD PTR [rip+0x22f1ea]        # 23a7c0 <libxl_vsndinfo_dispose>
    b5d6:	push   0xa1
    b5db:	jmp    abb0 <.plt>

000000000000b5e0 <__asprintf_chk@plt>:
    b5e0:	jmp    QWORD PTR [rip+0x22f1e2]        # 23a7c8 <__asprintf_chk@GLIBC_2.8>
    b5e6:	push   0xa2
    b5eb:	jmp    abb0 <.plt>

000000000000b5f0 <calloc@plt>:
    b5f0:	jmp    QWORD PTR [rip+0x22f1da]        # 23a7d0 <calloc@GLIBC_2.2.5>
    b5f6:	push   0xa3
    b5fb:	jmp    abb0 <.plt>

000000000000b600 <libxl_device_vsnd_remove@plt>:
    b600:	jmp    QWORD PTR [rip+0x22f1d2]        # 23a7d8 <libxl_device_vsnd_remove>
    b606:	push   0xa4
    b60b:	jmp    abb0 <.plt>

000000000000b610 <libxl_device_vtpm_getinfo@plt>:
    b610:	jmp    QWORD PTR [rip+0x22f1ca]        # 23a7e0 <libxl_device_vtpm_getinfo>
    b616:	push   0xa5
    b61b:	jmp    abb0 <.plt>

000000000000b620 <libxl_bitmap_and@plt>:
    b620:	jmp    QWORD PTR [rip+0x22f1c2]        # 23a7e8 <libxl_bitmap_and>
    b626:	push   0xa6
    b62b:	jmp    abb0 <.plt>

000000000000b630 <libxl_domain_resume@plt>:
    b630:	jmp    QWORD PTR [rip+0x22f1ba]        # 23a7f0 <libxl_domain_resume>
    b636:	push   0xa7
    b63b:	jmp    abb0 <.plt>

000000000000b640 <libxl_vkbinfo_dispose@plt>:
    b640:	jmp    QWORD PTR [rip+0x22f1b2]        # 23a7f8 <libxl_vkbinfo_dispose>
    b646:	push   0xa8
    b64b:	jmp    abb0 <.plt>

000000000000b650 <strcmp@plt>:
    b650:	jmp    QWORD PTR [rip+0x22f1aa]        # 23a800 <strcmp@GLIBC_2.2.5>
    b656:	push   0xa9
    b65b:	jmp    abb0 <.plt>

000000000000b660 <libxl_vcpu_sched_params_get_all@plt>:
    b660:	jmp    QWORD PTR [rip+0x22f1a2]        # 23a808 <libxl_vcpu_sched_params_get_all>
    b666:	push   0xaa
    b66b:	jmp    abb0 <.plt>

000000000000b670 <libxl_bitmap_copy@plt>:
    b670:	jmp    QWORD PTR [rip+0x22f19a]        # 23a810 <libxl_bitmap_copy>
    b676:	push   0xab
    b67b:	jmp    abb0 <.plt>

000000000000b680 <libxl_device_vsnd_add@plt>:
    b680:	jmp    QWORD PTR [rip+0x22f192]        # 23a818 <libxl_device_vsnd_add>
    b686:	push   0xac
    b68b:	jmp    abb0 <.plt>

000000000000b690 <signal@plt>:
    b690:	jmp    QWORD PTR [rip+0x22f18a]        # 23a820 <signal@GLIBC_2.2.5>
    b696:	push   0xad
    b69b:	jmp    abb0 <.plt>

000000000000b6a0 <libxl_usbctrlinfo_init@plt>:
    b6a0:	jmp    QWORD PTR [rip+0x22f182]        # 23a828 <libxl_usbctrlinfo_init>
    b6a6:	push   0xae
    b6ab:	jmp    abb0 <.plt>

000000000000b6b0 <strtoll@plt>:
    b6b0:	jmp    QWORD PTR [rip+0x22f17a]        # 23a830 <strtoll@GLIBC_2.2.5>
    b6b6:	push   0xaf
    b6bb:	jmp    abb0 <.plt>

000000000000b6c0 <libxl_event_to_json@plt>:
    b6c0:	jmp    QWORD PTR [rip+0x22f172]        # 23a838 <libxl_event_to_json>
    b6c6:	push   0xb0
    b6cb:	jmp    abb0 <.plt>

000000000000b6d0 <libxl_cpupool_movedomain@plt>:
    b6d0:	jmp    QWORD PTR [rip+0x22f16a]        # 23a840 <libxl_cpupool_movedomain>
    b6d6:	push   0xb1
    b6db:	jmp    abb0 <.plt>

000000000000b6e0 <libxl_domain_config_init@plt>:
    b6e0:	jmp    QWORD PTR [rip+0x22f162]        # 23a848 <libxl_domain_config_init>
    b6e6:	push   0xb2
    b6eb:	jmp    abb0 <.plt>

000000000000b6f0 <libxl_tsc_mode_to_string@plt>:
    b6f0:	jmp    QWORD PTR [rip+0x22f15a]        # 23a850 <libxl_tsc_mode_to_string>
    b6f6:	push   0xb3
    b6fb:	jmp    abb0 <.plt>

000000000000b700 <libxl_get_numainfo@plt>:
    b700:	jmp    QWORD PTR [rip+0x22f152]        # 23a858 <libxl_get_numainfo>
    b706:	push   0xb4
    b70b:	jmp    abb0 <.plt>

000000000000b710 <libxl_tmem_freeable@plt>:
    b710:	jmp    QWORD PTR [rip+0x22f14a]        # 23a860 <libxl_tmem_freeable>
    b716:	push   0xb5
    b71b:	jmp    abb0 <.plt>

000000000000b720 <libxl_iomem_range_init@plt>:
    b720:	jmp    QWORD PTR [rip+0x22f142]        # 23a868 <libxl_iomem_range_init>
    b726:	push   0xb6
    b72b:	jmp    abb0 <.plt>

000000000000b730 <libxl_device_disk_getinfo@plt>:
    b730:	jmp    QWORD PTR [rip+0x22f13a]        # 23a870 <libxl_device_disk_getinfo>
    b736:	push   0xb7
    b73b:	jmp    abb0 <.plt>

000000000000b740 <libxl_dominfo_init@plt>:
    b740:	jmp    QWORD PTR [rip+0x22f132]        # 23a878 <libxl_dominfo_init>
    b746:	push   0xb8
    b74b:	jmp    abb0 <.plt>

000000000000b750 <libxl_get_scheduler@plt>:
    b750:	jmp    QWORD PTR [rip+0x22f12a]        # 23a880 <libxl_get_scheduler>
    b756:	push   0xb9
    b75b:	jmp    abb0 <.plt>

000000000000b760 <libxl_sched_credit2_params_set@plt>:
    b760:	jmp    QWORD PTR [rip+0x22f122]        # 23a888 <libxl_sched_credit2_params_set>
    b766:	push   0xba
    b76b:	jmp    abb0 <.plt>

000000000000b770 <libxl_device_usbdev_init@plt>:
    b770:	jmp    QWORD PTR [rip+0x22f11a]        # 23a890 <libxl_device_usbdev_init>
    b776:	push   0xbb
    b77b:	jmp    abb0 <.plt>

000000000000b780 <libxl_device_vsnd_init@plt>:
    b780:	jmp    QWORD PTR [rip+0x22f112]        # 23a898 <libxl_device_vsnd_init>
    b786:	push   0xbc
    b78b:	jmp    abb0 <.plt>

000000000000b790 <libxl_domain_preserve@plt>:
    b790:	jmp    QWORD PTR [rip+0x22f10a]        # 23a8a0 <libxl_domain_preserve>
    b796:	push   0xbd
    b79b:	jmp    abb0 <.plt>

000000000000b7a0 <libxl_mac_to_device_nic@plt>:
    b7a0:	jmp    QWORD PTR [rip+0x22f102]        # 23a8a8 <libxl_mac_to_device_nic>
    b7a6:	push   0xbe
    b7ab:	jmp    abb0 <.plt>

000000000000b7b0 <strtol@plt>:
    b7b0:	jmp    QWORD PTR [rip+0x22f0fa]        # 23a8b0 <strtol@GLIBC_2.2.5>
    b7b6:	push   0xbf
    b7bb:	jmp    abb0 <.plt>

000000000000b7c0 <libxl_device_vtpm_to_json@plt>:
    b7c0:	jmp    QWORD PTR [rip+0x22f0f2]        # 23a8b8 <libxl_device_vtpm_to_json>
    b7c6:	push   0xc0
    b7cb:	jmp    abb0 <.plt>

000000000000b7d0 <libxl_bitmap_set@plt>:
    b7d0:	jmp    QWORD PTR [rip+0x22f0ea]        # 23a8c0 <libxl_bitmap_set>
    b7d6:	push   0xc1
    b7db:	jmp    abb0 <.plt>

000000000000b7e0 <memcpy@plt>:
    b7e0:	jmp    QWORD PTR [rip+0x22f0e2]        # 23a8c8 <memcpy@GLIBC_2.14>
    b7e6:	push   0xc2
    b7eb:	jmp    abb0 <.plt>

000000000000b7f0 <libxl_gfx_passthru_kind_from_string@plt>:
    b7f0:	jmp    QWORD PTR [rip+0x22f0da]        # 23a8d0 <libxl_gfx_passthru_kind_from_string>
    b7f6:	push   0xc3
    b7fb:	jmp    abb0 <.plt>

000000000000b800 <libxl_userdata_unlink@plt>:
    b800:	jmp    QWORD PTR [rip+0x22f0d2]        # 23a8d8 <libxl_userdata_unlink>
    b806:	push   0xc4
    b80b:	jmp    abb0 <.plt>

000000000000b810 <libxl_name_to_domid@plt>:
    b810:	jmp    QWORD PTR [rip+0x22f0ca]        # 23a8e0 <libxl_name_to_domid>
    b816:	push   0xc5
    b81b:	jmp    abb0 <.plt>

000000000000b820 <libxl_domain_soft_reset@plt>:
    b820:	jmp    QWORD PTR [rip+0x22f0c2]        # 23a8e8 <libxl_domain_soft_reset>
    b826:	push   0xc6
    b82b:	jmp    abb0 <.plt>

000000000000b830 <libxl_list_domain@plt>:
    b830:	jmp    QWORD PTR [rip+0x22f0ba]        # 23a8f0 <libxl_list_domain>
    b836:	push   0xc7
    b83b:	jmp    abb0 <.plt>

000000000000b840 <xtl_createlogger_stdiostream@plt>:
    b840:	jmp    QWORD PTR [rip+0x22f0b2]        # 23a8f8 <xtl_createlogger_stdiostream@VERS_1.0>
    b846:	push   0xc8
    b84b:	jmp    abb0 <.plt>

000000000000b850 <tzset@plt>:
    b850:	jmp    QWORD PTR [rip+0x22f0aa]        # 23a900 <tzset@GLIBC_2.2.5>
    b856:	push   0xc9
    b85b:	jmp    abb0 <.plt>

000000000000b860 <libxl_flask_setenforce@plt>:
    b860:	jmp    QWORD PTR [rip+0x22f0a2]        # 23a908 <libxl_flask_setenforce>
    b866:	push   0xca
    b86b:	jmp    abb0 <.plt>

000000000000b870 <libxl_userdata_store@plt>:
    b870:	jmp    QWORD PTR [rip+0x22f09a]        # 23a910 <libxl_userdata_store>
    b876:	push   0xcb
    b87b:	jmp    abb0 <.plt>

000000000000b880 <libxl_device_disk_remove@plt>:
    b880:	jmp    QWORD PTR [rip+0x22f092]        # 23a918 <libxl_device_disk_remove>
    b886:	push   0xcc
    b88b:	jmp    abb0 <.plt>

000000000000b890 <libxl_device_nic_to_json@plt>:
    b890:	jmp    QWORD PTR [rip+0x22f08a]        # 23a920 <libxl_device_nic_to_json>
    b896:	push   0xcd
    b89b:	jmp    abb0 <.plt>

000000000000b8a0 <time@plt>:
    b8a0:	jmp    QWORD PTR [rip+0x22f082]        # 23a928 <time@GLIBC_2.2.5>
    b8a6:	push   0xce
    b8ab:	jmp    abb0 <.plt>

000000000000b8b0 <libxl_defbool_setdefault@plt>:
    b8b0:	jmp    QWORD PTR [rip+0x22f07a]        # 23a930 <libxl_defbool_setdefault>
    b8b6:	push   0xcf
    b8bb:	jmp    abb0 <.plt>

000000000000b8c0 <libxl_device_pci_remove@plt>:
    b8c0:	jmp    QWORD PTR [rip+0x22f072]        # 23a938 <libxl_device_pci_remove>
    b8c6:	push   0xd0
    b8cb:	jmp    abb0 <.plt>

000000000000b8d0 <libxl_dominfo_dispose@plt>:
    b8d0:	jmp    QWORD PTR [rip+0x22f06a]        # 23a940 <libxl_dominfo_dispose>
    b8d6:	push   0xd1
    b8db:	jmp    abb0 <.plt>

000000000000b8e0 <libxl_viridian_enlightenment_from_string@plt>:
    b8e0:	jmp    QWORD PTR [rip+0x22f062]        # 23a948 <libxl_viridian_enlightenment_from_string>
    b8e6:	push   0xd2
    b8eb:	jmp    abb0 <.plt>

000000000000b8f0 <libxl_device_nic_add@plt>:
    b8f0:	jmp    QWORD PTR [rip+0x22f05a]        # 23a950 <libxl_device_nic_add>
    b8f6:	push   0xd3
    b8fb:	jmp    abb0 <.plt>

000000000000b900 <select@plt>:
    b900:	jmp    QWORD PTR [rip+0x22f052]        # 23a958 <select@GLIBC_2.2.5>
    b906:	push   0xd4
    b90b:	jmp    abb0 <.plt>

000000000000b910 <__xstat@plt>:
    b910:	jmp    QWORD PTR [rip+0x22f04a]        # 23a960 <__xstat@GLIBC_2.2.5>
    b916:	push   0xd5
    b91b:	jmp    abb0 <.plt>

000000000000b920 <libxl_psr_cmt_detach@plt>:
    b920:	jmp    QWORD PTR [rip+0x22f042]        # 23a968 <libxl_psr_cmt_detach>
    b926:	push   0xd6
    b92b:	jmp    abb0 <.plt>

000000000000b930 <libxl_devid_to_device_usbctrl@plt>:
    b930:	jmp    QWORD PTR [rip+0x22f03a]        # 23a970 <libxl_devid_to_device_usbctrl>
    b936:	push   0xd7
    b93b:	jmp    abb0 <.plt>

000000000000b940 <libxl_evdisable_disk_eject@plt>:
    b940:	jmp    QWORD PTR [rip+0x22f032]        # 23a978 <libxl_evdisable_disk_eject>
    b946:	push   0xd8
    b94b:	jmp    abb0 <.plt>

000000000000b950 <xlu_cfg_value_get_list@plt>:
    b950:	jmp    QWORD PTR [rip+0x22f02a]        # 23a980 <xlu_cfg_value_get_list>
    b956:	push   0xd9
    b95b:	jmp    abb0 <.plt>

000000000000b960 <libxl_device_usbctrl_getinfo@plt>:
    b960:	jmp    QWORD PTR [rip+0x22f022]        # 23a988 <libxl_device_usbctrl_getinfo>
    b966:	push   0xda
    b96b:	jmp    abb0 <.plt>

000000000000b970 <libxl_devid_to_device_vsnd@plt>:
    b970:	jmp    QWORD PTR [rip+0x22f01a]        # 23a990 <libxl_devid_to_device_vsnd>
    b976:	push   0xdb
    b97b:	jmp    abb0 <.plt>

000000000000b980 <libxl_channel_connection_to_string@plt>:
    b980:	jmp    QWORD PTR [rip+0x22f012]        # 23a998 <libxl_channel_connection_to_string>
    b986:	push   0xdc
    b98b:	jmp    abb0 <.plt>

000000000000b990 <libxl_device_events_handler@plt>:
    b990:	jmp    QWORD PTR [rip+0x22f00a]        # 23a9a0 <libxl_device_events_handler>
    b996:	push   0xdd
    b99b:	jmp    abb0 <.plt>

000000000000b9a0 <libxl_string_list_dispose@plt>:
    b9a0:	jmp    QWORD PTR [rip+0x22f002]        # 23a9a8 <libxl_string_list_dispose>
    b9a6:	push   0xde
    b9ab:	jmp    abb0 <.plt>

000000000000b9b0 <libxl_vsnd_stream_init@plt>:
    b9b0:	jmp    QWORD PTR [rip+0x22effa]        # 23a9b0 <libxl_vsnd_stream_init>
    b9b6:	push   0xdf
    b9bb:	jmp    abb0 <.plt>

000000000000b9c0 <libxl_device_vsnd_to_json@plt>:
    b9c0:	jmp    QWORD PTR [rip+0x22eff2]        # 23a9b8 <libxl_device_vsnd_to_json>
    b9c6:	push   0xe0
    b9cb:	jmp    abb0 <.plt>

000000000000b9d0 <libxl_xen_console_read_start@plt>:
    b9d0:	jmp    QWORD PTR [rip+0x22efea]        # 23a9c0 <libxl_xen_console_read_start>
    b9d6:	push   0xe1
    b9db:	jmp    abb0 <.plt>

000000000000b9e0 <libxl_device_nic_getinfo@plt>:
    b9e0:	jmp    QWORD PTR [rip+0x22efe2]        # 23a9c8 <libxl_device_nic_getinfo>
    b9e6:	push   0xe2
    b9eb:	jmp    abb0 <.plt>

000000000000b9f0 <libxl_device_nic_list_free@plt>:
    b9f0:	jmp    QWORD PTR [rip+0x22efda]        # 23a9d0 <libxl_device_nic_list_free>
    b9f6:	push   0xe3
    b9fb:	jmp    abb0 <.plt>

000000000000ba00 <malloc@plt>:
    ba00:	jmp    QWORD PTR [rip+0x22efd2]        # 23a9d8 <malloc@GLIBC_2.2.5>
    ba06:	push   0xe4
    ba0b:	jmp    abb0 <.plt>

000000000000ba10 <libxl_vkb_backend_from_string@plt>:
    ba10:	jmp    QWORD PTR [rip+0x22efca]        # 23a9e0 <libxl_vkb_backend_from_string>
    ba16:	push   0xe5
    ba1b:	jmp    abb0 <.plt>

000000000000ba20 <libxl_device_pci_assignable_add@plt>:
    ba20:	jmp    QWORD PTR [rip+0x22efc2]        # 23a9e8 <libxl_device_pci_assignable_add>
    ba26:	push   0xe6
    ba2b:	jmp    abb0 <.plt>

000000000000ba30 <fflush@plt>:
    ba30:	jmp    QWORD PTR [rip+0x22efba]        # 23a9f0 <fflush@GLIBC_2.2.5>
    ba36:	push   0xe7
    ba3b:	jmp    abb0 <.plt>

000000000000ba40 <libxl_device_usbctrl_remove@plt>:
    ba40:	jmp    QWORD PTR [rip+0x22efb2]        # 23a9f8 <libxl_device_usbctrl_remove>
    ba46:	push   0xe8
    ba4b:	jmp    abb0 <.plt>

000000000000ba50 <libxl_tmem_freeze@plt>:
    ba50:	jmp    QWORD PTR [rip+0x22efaa]        # 23aa00 <libxl_tmem_freeze>
    ba56:	push   0xe9
    ba5b:	jmp    abb0 <.plt>

000000000000ba60 <libxl_device_nic_remove@plt>:
    ba60:	jmp    QWORD PTR [rip+0x22efa2]        # 23aa08 <libxl_device_nic_remove>
    ba66:	push   0xea
    ba6b:	jmp    abb0 <.plt>

000000000000ba70 <libxl_defbool_val@plt>:
    ba70:	jmp    QWORD PTR [rip+0x22ef9a]        # 23aa10 <libxl_defbool_val>
    ba76:	push   0xeb
    ba7b:	jmp    abb0 <.plt>

000000000000ba80 <libxl_evenable_domain_death@plt>:
    ba80:	jmp    QWORD PTR [rip+0x22ef92]        # 23aa18 <libxl_evenable_domain_death>
    ba86:	push   0xec
    ba8b:	jmp    abb0 <.plt>

000000000000ba90 <yajl_gen_config@plt>:
    ba90:	jmp    QWORD PTR [rip+0x22ef8a]        # 23aa20 <yajl_gen_config>
    ba96:	push   0xed
    ba9b:	jmp    abb0 <.plt>

000000000000baa0 <libxl_get_max_cpus@plt>:
    baa0:	jmp    QWORD PTR [rip+0x22ef82]        # 23aa28 <libxl_get_max_cpus>
    baa6:	push   0xee
    baab:	jmp    abb0 <.plt>

000000000000bab0 <__isoc99_sscanf@plt>:
    bab0:	jmp    QWORD PTR [rip+0x22ef7a]        # 23aa30 <__isoc99_sscanf@GLIBC_2.7>
    bab6:	push   0xef
    babb:	jmp    abb0 <.plt>

000000000000bac0 <__vasprintf_chk@plt>:
    bac0:	jmp    QWORD PTR [rip+0x22ef72]        # 23aa38 <__vasprintf_chk@GLIBC_2.8>
    bac6:	push   0xf0
    bacb:	jmp    abb0 <.plt>

000000000000bad0 <libxl_device_usbctrl_add@plt>:
    bad0:	jmp    QWORD PTR [rip+0x22ef6a]        # 23aa40 <libxl_device_usbctrl_add>
    bad6:	push   0xf1
    badb:	jmp    abb0 <.plt>

000000000000bae0 <libxl_bitmap_is_full@plt>:
    bae0:	jmp    QWORD PTR [rip+0x22ef62]        # 23aa48 <libxl_bitmap_is_full>
    bae6:	push   0xf2
    baeb:	jmp    abb0 <.plt>

000000000000baf0 <libxl_usbdev_type_from_string@plt>:
    baf0:	jmp    QWORD PTR [rip+0x22ef5a]        # 23aa50 <libxl_usbdev_type_from_string>
    baf6:	push   0xf3
    bafb:	jmp    abb0 <.plt>

000000000000bb00 <libxl_device_vfb_init@plt>:
    bb00:	jmp    QWORD PTR [rip+0x22ef52]        # 23aa58 <libxl_device_vfb_init>
    bb06:	push   0xf4
    bb0b:	jmp    abb0 <.plt>

000000000000bb10 <libxl_send_sysrq@plt>:
    bb10:	jmp    QWORD PTR [rip+0x22ef4a]        # 23aa60 <libxl_send_sysrq>
    bb16:	push   0xf5
    bb1b:	jmp    abb0 <.plt>

000000000000bb20 <xlu_cfg_get_list@plt>:
    bb20:	jmp    QWORD PTR [rip+0x22ef42]        # 23aa68 <xlu_cfg_get_list>
    bb26:	push   0xf6
    bb2b:	jmp    abb0 <.plt>

000000000000bb30 <libxl_flask_getenforce@plt>:
    bb30:	jmp    QWORD PTR [rip+0x22ef3a]        # 23aa70 <libxl_flask_getenforce>
    bb36:	push   0xf7
    bb3b:	jmp    abb0 <.plt>

000000000000bb40 <libxl_domain_config_dispose@plt>:
    bb40:	jmp    QWORD PTR [rip+0x22ef32]        # 23aa78 <libxl_domain_config_dispose>
    bb46:	push   0xf8
    bb4b:	jmp    abb0 <.plt>

000000000000bb50 <regexec@plt>:
    bb50:	jmp    QWORD PTR [rip+0x22ef2a]        # 23aa80 <regexec@GLIBC_2.3.4>
    bb56:	push   0xf9
    bb5b:	jmp    abb0 <.plt>

000000000000bb60 <libxl_set_memory_target@plt>:
    bb60:	jmp    QWORD PTR [rip+0x22ef22]        # 23aa88 <libxl_set_memory_target>
    bb66:	push   0xfa
    bb6b:	jmp    abb0 <.plt>

000000000000bb70 <libxl_device_vdispl_dispose@plt>:
    bb70:	jmp    QWORD PTR [rip+0x22ef1a]        # 23aa90 <libxl_device_vdispl_dispose>
    bb76:	push   0xfb
    bb7b:	jmp    abb0 <.plt>

000000000000bb80 <daemon@plt>:
    bb80:	jmp    QWORD PTR [rip+0x22ef12]        # 23aa98 <daemon@GLIBC_2.2.5>
    bb86:	push   0xfc
    bb8b:	jmp    abb0 <.plt>

000000000000bb90 <libxl_xen_console_read_line@plt>:
    bb90:	jmp    QWORD PTR [rip+0x22ef0a]        # 23aaa0 <libxl_xen_console_read_line>
    bb96:	push   0xfd
    bb9b:	jmp    abb0 <.plt>

000000000000bba0 <libxl_read_exactly@plt>:
    bba0:	jmp    QWORD PTR [rip+0x22ef02]        # 23aaa8 <libxl_read_exactly>
    bba6:	push   0xfe
    bbab:	jmp    abb0 <.plt>

000000000000bbb0 <libxl_set_vcpuaffinity_force@plt>:
    bbb0:	jmp    QWORD PTR [rip+0x22eefa]        # 23aab0 <libxl_set_vcpuaffinity_force>
    bbb6:	push   0xff
    bbbb:	jmp    abb0 <.plt>

000000000000bbc0 <libxl_domain_rename@plt>:
    bbc0:	jmp    QWORD PTR [rip+0x22eef2]        # 23aab8 <libxl_domain_rename>
    bbc6:	push   0x100
    bbcb:	jmp    abb0 <.plt>

000000000000bbd0 <libxl_devid_to_device_vkb@plt>:
    bbd0:	jmp    QWORD PTR [rip+0x22eeea]        # 23aac0 <libxl_devid_to_device_vkb>
    bbd6:	push   0x101
    bbdb:	jmp    abb0 <.plt>

000000000000bbe0 <xlu_cfg_get_list_as_string_list@plt>:
    bbe0:	jmp    QWORD PTR [rip+0x22eee2]        # 23aac8 <xlu_cfg_get_list_as_string_list>
    bbe6:	push   0x102
    bbeb:	jmp    abb0 <.plt>

000000000000bbf0 <libxl_vkb_backend_to_string@plt>:
    bbf0:	jmp    QWORD PTR [rip+0x22eeda]        # 23aad0 <libxl_vkb_backend_to_string>
    bbf6:	push   0x103
    bbfb:	jmp    abb0 <.plt>

000000000000bc00 <libxl_bitmap_init@plt>:
    bc00:	jmp    QWORD PTR [rip+0x22eed2]        # 23aad8 <libxl_bitmap_init>
    bc06:	push   0x104
    bc0b:	jmp    abb0 <.plt>

000000000000bc10 <libxl_trigger_from_string@plt>:
    bc10:	jmp    QWORD PTR [rip+0x22eeca]        # 23aae0 <libxl_trigger_from_string>
    bc16:	push   0x105
    bc1b:	jmp    abb0 <.plt>

000000000000bc20 <libxl_cputopology_list_free@plt>:
    bc20:	jmp    QWORD PTR [rip+0x22eec2]        # 23aae8 <libxl_cputopology_list_free>
    bc26:	push   0x106
    bc2b:	jmp    abb0 <.plt>

000000000000bc30 <libxl_basename@plt>:
    bc30:	jmp    QWORD PTR [rip+0x22eeba]        # 23aaf0 <libxl_basename>
    bc36:	push   0x107
    bc3b:	jmp    abb0 <.plt>

000000000000bc40 <libxl_device_channel_init@plt>:
    bc40:	jmp    QWORD PTR [rip+0x22eeb2]        # 23aaf8 <libxl_device_channel_init>
    bc46:	push   0x108
    bc4b:	jmp    abb0 <.plt>

000000000000bc50 <libxl_device_pci_assignable_remove@plt>:
    bc50:	jmp    QWORD PTR [rip+0x22eeaa]        # 23ab00 <libxl_device_pci_assignable_remove>
    bc56:	push   0x109
    bc5b:	jmp    abb0 <.plt>

000000000000bc60 <libxl_get_cpu_topology@plt>:
    bc60:	jmp    QWORD PTR [rip+0x22eea2]        # 23ab08 <libxl_get_cpu_topology>
    bc66:	push   0x10a
    bc6b:	jmp    abb0 <.plt>

000000000000bc70 <libxl_device_usbctrl_init@plt>:
    bc70:	jmp    QWORD PTR [rip+0x22ee9a]        # 23ab10 <libxl_device_usbctrl_init>
    bc76:	push   0x10b
    bc7b:	jmp    abb0 <.plt>

000000000000bc80 <libxl_device_disk_to_json@plt>:
    bc80:	jmp    QWORD PTR [rip+0x22ee92]        # 23ab18 <libxl_device_disk_to_json>
    bc86:	push   0x10c
    bc8b:	jmp    abb0 <.plt>

000000000000bc90 <libxl_device_pci_dispose@plt>:
    bc90:	jmp    QWORD PTR [rip+0x22ee8a]        # 23ab20 <libxl_device_pci_dispose>
    bc96:	push   0x10d
    bc9b:	jmp    abb0 <.plt>

000000000000bca0 <libxl_domain_get_nodeaffinity@plt>:
    bca0:	jmp    QWORD PTR [rip+0x22ee82]        # 23ab28 <libxl_domain_get_nodeaffinity>
    bca6:	push   0x10e
    bcab:	jmp    abb0 <.plt>

000000000000bcb0 <libxl_device_usbdev_remove@plt>:
    bcb0:	jmp    QWORD PTR [rip+0x22ee7a]        # 23ab30 <libxl_device_usbdev_remove>
    bcb6:	push   0x10f
    bcbb:	jmp    abb0 <.plt>

000000000000bcc0 <libxl_vsnd_stream_type_from_string@plt>:
    bcc0:	jmp    QWORD PTR [rip+0x22ee72]        # 23ab38 <libxl_vsnd_stream_type_from_string>
    bcc6:	push   0x110
    bccb:	jmp    abb0 <.plt>

000000000000bcd0 <libxl_domain_need_memory@plt>:
    bcd0:	jmp    QWORD PTR [rip+0x22ee6a]        # 23ab40 <libxl_domain_need_memory>
    bcd6:	push   0x111
    bcdb:	jmp    abb0 <.plt>

000000000000bce0 <realloc@plt>:
    bce0:	jmp    QWORD PTR [rip+0x22ee62]        # 23ab48 <realloc@GLIBC_2.2.5>
    bce6:	push   0x112
    bceb:	jmp    abb0 <.plt>

000000000000bcf0 <libxl_bios_type_from_string@plt>:
    bcf0:	jmp    QWORD PTR [rip+0x22ee5a]        # 23ab50 <libxl_bios_type_from_string>
    bcf6:	push   0x113
    bcfb:	jmp    abb0 <.plt>

000000000000bd00 <libxl_set_vcpuaffinity@plt>:
    bd00:	jmp    QWORD PTR [rip+0x22ee52]        # 23ab58 <libxl_set_vcpuaffinity>
    bd06:	push   0x114
    bd0b:	jmp    abb0 <.plt>

000000000000bd10 <libxl_device_vdispl_getinfo@plt>:
    bd10:	jmp    QWORD PTR [rip+0x22ee4a]        # 23ab60 <libxl_device_vdispl_getinfo>
    bd16:	push   0x115
    bd1b:	jmp    abb0 <.plt>

000000000000bd20 <libxl_domain_create_new@plt>:
    bd20:	jmp    QWORD PTR [rip+0x22ee42]        # 23ab68 <libxl_domain_create_new>
    bd26:	push   0x116
    bd2b:	jmp    abb0 <.plt>

000000000000bd30 <libxl_device_vsnd_list@plt>:
    bd30:	jmp    QWORD PTR [rip+0x22ee3a]        # 23ab70 <libxl_device_vsnd_list>
    bd36:	push   0x117
    bd3b:	jmp    abb0 <.plt>

000000000000bd40 <libxl_cpupool_cpuremove_cpumap@plt>:
    bd40:	jmp    QWORD PTR [rip+0x22ee32]        # 23ab78 <libxl_cpupool_cpuremove_cpumap>
    bd46:	push   0x118
    bd4b:	jmp    abb0 <.plt>

000000000000bd50 <__printf_chk@plt>:
    bd50:	jmp    QWORD PTR [rip+0x22ee2a]        # 23ab80 <__printf_chk@GLIBC_2.3.4>
    bd56:	push   0x119
    bd5b:	jmp    abb0 <.plt>

000000000000bd60 <libxl_vm_get_start_time@plt>:
    bd60:	jmp    QWORD PTR [rip+0x22ee22]        # 23ab88 <libxl_vm_get_start_time>
    bd66:	push   0x11a
    bd6b:	jmp    abb0 <.plt>

000000000000bd70 <libxl_vdisplinfo_init@plt>:
    bd70:	jmp    QWORD PTR [rip+0x22ee1a]        # 23ab90 <libxl_vdisplinfo_init>
    bd76:	push   0x11b
    bd7b:	jmp    abb0 <.plt>

000000000000bd80 <libxl_devid_to_device_vdispl@plt>:
    bd80:	jmp    QWORD PTR [rip+0x22ee12]        # 23ab98 <libxl_devid_to_device_vdispl>
    bd86:	push   0x11c
    bd8b:	jmp    abb0 <.plt>

000000000000bd90 <libxl_xen_console_read_finish@plt>:
    bd90:	jmp    QWORD PTR [rip+0x22ee0a]        # 23aba0 <libxl_xen_console_read_finish>
    bd96:	push   0x11d
    bd9b:	jmp    abb0 <.plt>

000000000000bda0 <yajl_gen_free@plt>:
    bda0:	jmp    QWORD PTR [rip+0x22ee02]        # 23aba8 <yajl_gen_free>
    bda6:	push   0x11e
    bdab:	jmp    abb0 <.plt>

000000000000bdb0 <libxl_bitmap_dispose@plt>:
    bdb0:	jmp    QWORD PTR [rip+0x22edfa]        # 23abb0 <libxl_bitmap_dispose>
    bdb6:	push   0x11f
    bdbb:	jmp    abb0 <.plt>

000000000000bdc0 <libxl_domain_config_to_json@plt>:
    bdc0:	jmp    QWORD PTR [rip+0x22edf2]        # 23abb8 <libxl_domain_config_to_json>
    bdc6:	push   0x120
    bdcb:	jmp    abb0 <.plt>

000000000000bdd0 <libxl_write_exactly@plt>:
    bdd0:	jmp    QWORD PTR [rip+0x22edea]        # 23abc0 <libxl_write_exactly>
    bdd6:	push   0x121
    bddb:	jmp    abb0 <.plt>

000000000000bde0 <strftime@plt>:
    bde0:	jmp    QWORD PTR [rip+0x22ede2]        # 23abc8 <strftime@GLIBC_2.2.5>
    bde6:	push   0x122
    bdeb:	jmp    abb0 <.plt>

000000000000bdf0 <libxl_vtpminfo_dispose@plt>:
    bdf0:	jmp    QWORD PTR [rip+0x22edda]        # 23abd0 <libxl_vtpminfo_dispose>
    bdf6:	push   0x123
    bdfb:	jmp    abb0 <.plt>

000000000000be00 <libxl_usbctrl_type_from_string@plt>:
    be00:	jmp    QWORD PTR [rip+0x22edd2]        # 23abd8 <libxl_usbctrl_type_from_string>
    be06:	push   0x124
    be0b:	jmp    abb0 <.plt>

000000000000be10 <libxl_vcpu_sched_params_get@plt>:
    be10:	jmp    QWORD PTR [rip+0x22edca]        # 23abe0 <libxl_vcpu_sched_params_get>
    be16:	push   0x125
    be1b:	jmp    abb0 <.plt>

000000000000be20 <xlu_cfg_get_defbool@plt>:
    be20:	jmp    QWORD PTR [rip+0x22edc2]        # 23abe8 <xlu_cfg_get_defbool>
    be26:	push   0x126
    be2b:	jmp    abb0 <.plt>

000000000000be30 <libxl_bitmap_test@plt>:
    be30:	jmp    QWORD PTR [rip+0x22edba]        # 23abf0 <libxl_bitmap_test>
    be36:	push   0x127
    be3b:	jmp    abb0 <.plt>

000000000000be40 <libxl_gic_version_from_string@plt>:
    be40:	jmp    QWORD PTR [rip+0x22edb2]        # 23abf8 <libxl_gic_version_from_string>
    be46:	push   0x128
    be4b:	jmp    abb0 <.plt>

000000000000be50 <libxl_device_disk_init@plt>:
    be50:	jmp    QWORD PTR [rip+0x22edaa]        # 23ac00 <libxl_device_disk_init>
    be56:	push   0x129
    be5b:	jmp    abb0 <.plt>

000000000000be60 <libxl_domid_valid_guest@plt>:
    be60:	jmp    QWORD PTR [rip+0x22eda2]        # 23ac08 <libxl_domid_valid_guest>
    be66:	push   0x12a
    be6b:	jmp    abb0 <.plt>

000000000000be70 <libxl_evdisable_domain_death@plt>:
    be70:	jmp    QWORD PTR [rip+0x22ed9a]        # 23ac10 <libxl_evdisable_domain_death>
    be76:	push   0x12b
    be7b:	jmp    abb0 <.plt>

000000000000be80 <libxl_vcpu_sched_params_init@plt>:
    be80:	jmp    QWORD PTR [rip+0x22ed92]        # 23ac18 <libxl_vcpu_sched_params_init>
    be86:	push   0x12c
    be8b:	jmp    abb0 <.plt>

000000000000be90 <libxl_device_vsnd_dispose@plt>:
    be90:	jmp    QWORD PTR [rip+0x22ed8a]        # 23ac20 <libxl_device_vsnd_dispose>
    be96:	push   0x12d
    be9b:	jmp    abb0 <.plt>

000000000000bea0 <waitpid@plt>:
    bea0:	jmp    QWORD PTR [rip+0x22ed82]        # 23ac28 <waitpid@GLIBC_2.2.5>
    bea6:	push   0x12e
    beab:	jmp    abb0 <.plt>

000000000000beb0 <libxl_tsc_mode_from_string@plt>:
    beb0:	jmp    QWORD PTR [rip+0x22ed7a]        # 23ac30 <libxl_tsc_mode_from_string>
    beb6:	push   0x12f
    bebb:	jmp    abb0 <.plt>

000000000000bec0 <libxl_send_debug_keys@plt>:
    bec0:	jmp    QWORD PTR [rip+0x22ed72]        # 23ac38 <libxl_send_debug_keys>
    bec6:	push   0x130
    becb:	jmp    abb0 <.plt>

000000000000bed0 <libxl_cpupool_rename@plt>:
    bed0:	jmp    QWORD PTR [rip+0x22ed6a]        # 23ac40 <libxl_cpupool_rename>
    bed6:	push   0x131
    bedb:	jmp    abb0 <.plt>

000000000000bee0 <libxl_timer_mode_to_string@plt>:
    bee0:	jmp    QWORD PTR [rip+0x22ed62]        # 23ac48 <libxl_timer_mode_to_string>
    bee6:	push   0x132
    beeb:	jmp    abb0 <.plt>

000000000000bef0 <libxl_numainfo_list_free@plt>:
    bef0:	jmp    QWORD PTR [rip+0x22ed5a]        # 23ac50 <libxl_numainfo_list_free>
    bef6:	push   0x133
    befb:	jmp    abb0 <.plt>

000000000000bf00 <libxl_device_disk_dispose@plt>:
    bf00:	jmp    QWORD PTR [rip+0x22ed52]        # 23ac58 <libxl_device_disk_dispose>
    bf06:	push   0x134
    bf0b:	jmp    abb0 <.plt>

000000000000bf10 <libxl_psr_cmt_attach@plt>:
    bf10:	jmp    QWORD PTR [rip+0x22ed4a]        # 23ac60 <libxl_psr_cmt_attach>
    bf16:	push   0x135
    bf1b:	jmp    abb0 <.plt>

000000000000bf20 <open@plt>:
    bf20:	jmp    QWORD PTR [rip+0x22ed42]        # 23ac68 <open@GLIBC_2.2.5>
    bf26:	push   0x136
    bf2b:	jmp    abb0 <.plt>

000000000000bf30 <libxl_domain_restore_params_dispose@plt>:
    bf30:	jmp    QWORD PTR [rip+0x22ed3a]        # 23ac70 <libxl_domain_restore_params_dispose>
    bf36:	push   0x137
    bf3b:	jmp    abb0 <.plt>

000000000000bf40 <libxl_vsnd_stream_type_to_string@plt>:
    bf40:	jmp    QWORD PTR [rip+0x22ed32]        # 23ac78 <libxl_vsnd_stream_type_to_string>
    bf46:	push   0x138
    bf4b:	jmp    abb0 <.plt>

000000000000bf50 <libxl_get_freecpus@plt>:
    bf50:	jmp    QWORD PTR [rip+0x22ed2a]        # 23ac80 <libxl_get_freecpus>
    bf56:	push   0x139
    bf5b:	jmp    abb0 <.plt>

000000000000bf60 <libxl_domain_pause@plt>:
    bf60:	jmp    QWORD PTR [rip+0x22ed22]        # 23ac88 <libxl_domain_pause>
    bf66:	push   0x13a
    bf6b:	jmp    abb0 <.plt>

000000000000bf70 <libxl_device_vkb_dispose@plt>:
    bf70:	jmp    QWORD PTR [rip+0x22ed1a]        # 23ac90 <libxl_device_vkb_dispose>
    bf76:	push   0x13b
    bf7b:	jmp    abb0 <.plt>

000000000000bf80 <libxl_domain_suspend@plt>:
    bf80:	jmp    QWORD PTR [rip+0x22ed12]        # 23ac98 <libxl_domain_suspend>
    bf86:	push   0x13c
    bf8b:	jmp    abb0 <.plt>

000000000000bf90 <libxl_vsndinfo_init@plt>:
    bf90:	jmp    QWORD PTR [rip+0x22ed0a]        # 23aca0 <libxl_vsndinfo_init>
    bf96:	push   0x13d
    bf9b:	jmp    abb0 <.plt>

000000000000bfa0 <libxl_nicinfo_dispose@plt>:
    bfa0:	jmp    QWORD PTR [rip+0x22ed02]        # 23aca8 <libxl_nicinfo_dispose>
    bfa6:	push   0x13e
    bfab:	jmp    abb0 <.plt>

000000000000bfb0 <xlu_cfg_value_type@plt>:
    bfb0:	jmp    QWORD PTR [rip+0x22ecfa]        # 23acb0 <xlu_cfg_value_type>
    bfb6:	push   0x13f
    bfbb:	jmp    abb0 <.plt>

000000000000bfc0 <libxl_postfork_child_noexec@plt>:
    bfc0:	jmp    QWORD PTR [rip+0x22ecf2]        # 23acb8 <libxl_postfork_child_noexec>
    bfc6:	push   0x140
    bfcb:	jmp    abb0 <.plt>

000000000000bfd0 <perror@plt>:
    bfd0:	jmp    QWORD PTR [rip+0x22ecea]        # 23acc0 <perror@GLIBC_2.2.5>
    bfd6:	push   0x141
    bfdb:	jmp    abb0 <.plt>

000000000000bfe0 <strtok@plt>:
    bfe0:	jmp    QWORD PTR [rip+0x22ece2]        # 23acc8 <strtok@GLIBC_2.2.5>
    bfe6:	push   0x142
    bfeb:	jmp    abb0 <.plt>

000000000000bff0 <libxl_device_vkb_init@plt>:
    bff0:	jmp    QWORD PTR [rip+0x22ecda]        # 23acd0 <libxl_device_vkb_init>
    bff6:	push   0x143
    bffb:	jmp    abb0 <.plt>

000000000000c000 <libxl_device_usbctrl_list_free@plt>:
    c000:	jmp    QWORD PTR [rip+0x22ecd2]        # 23acd8 <libxl_device_usbctrl_list_free>
    c006:	push   0x144
    c00b:	jmp    abb0 <.plt>

000000000000c010 <libxl_device_channel_getinfo@plt>:
    c010:	jmp    QWORD PTR [rip+0x22ecca]        # 23ace0 <libxl_device_channel_getinfo>
    c016:	push   0x145
    c01b:	jmp    abb0 <.plt>

000000000000c020 <getopt@plt>:
    c020:	jmp    QWORD PTR [rip+0x22ecc2]        # 23ace8 <getopt@GLIBC_2.2.5>
    c026:	push   0x146
    c02b:	jmp    abb0 <.plt>

000000000000c030 <libxl_domain_sched_params_get@plt>:
    c030:	jmp    QWORD PTR [rip+0x22ecba]        # 23acf0 <libxl_domain_sched_params_get>
    c036:	push   0x147
    c03b:	jmp    abb0 <.plt>

000000000000c040 <libxl_tmem_set@plt>:
    c040:	jmp    QWORD PTR [rip+0x22ecb2]        # 23acf8 <libxl_tmem_set>
    c046:	push   0x148
    c04b:	jmp    abb0 <.plt>

000000000000c050 <libxl_tmem_list@plt>:
    c050:	jmp    QWORD PTR [rip+0x22ecaa]        # 23ad00 <libxl_tmem_list>
    c056:	push   0x149
    c05b:	jmp    abb0 <.plt>

000000000000c060 <libxl_domain_sched_params_init@plt>:
    c060:	jmp    QWORD PTR [rip+0x22eca2]        # 23ad08 <libxl_domain_sched_params_init>
    c066:	push   0x14a
    c06b:	jmp    abb0 <.plt>

000000000000c070 <libxl_physinfo_dispose@plt>:
    c070:	jmp    QWORD PTR [rip+0x22ec9a]        # 23ad10 <libxl_physinfo_dispose>
    c076:	push   0x14b
    c07b:	jmp    abb0 <.plt>

000000000000c080 <libxl_get_online_socketmap@plt>:
    c080:	jmp    QWORD PTR [rip+0x22ec92]        # 23ad18 <libxl_get_online_socketmap>
    c086:	push   0x14c
    c08b:	jmp    abb0 <.plt>

000000000000c090 <strtoul@plt>:
    c090:	jmp    QWORD PTR [rip+0x22ec8a]        # 23ad20 <strtoul@GLIBC_2.2.5>
    c096:	push   0x14d
    c09b:	jmp    abb0 <.plt>

000000000000c0a0 <libxl_domain_core_dump@plt>:
    c0a0:	jmp    QWORD PTR [rip+0x22ec82]        # 23ad28 <libxl_domain_core_dump>
    c0a6:	push   0x14e
    c0ab:	jmp    abb0 <.plt>

000000000000c0b0 <libxl_device_vtpm_list_free@plt>:
    c0b0:	jmp    QWORD PTR [rip+0x22ec7a]        # 23ad30 <libxl_device_vtpm_list_free>
    c0b6:	push   0x14f
    c0bb:	jmp    abb0 <.plt>

000000000000c0c0 <libxl_uuid_to_device_vtpm@plt>:
    c0c0:	jmp    QWORD PTR [rip+0x22ec72]        # 23ad38 <libxl_uuid_to_device_vtpm>
    c0c6:	push   0x150
    c0cb:	jmp    abb0 <.plt>

000000000000c0d0 <__cxa_atexit@plt>:
    c0d0:	jmp    QWORD PTR [rip+0x22ec6a]        # 23ad40 <__cxa_atexit@GLIBC_2.2.5>
    c0d6:	push   0x151
    c0db:	jmp    abb0 <.plt>

000000000000c0e0 <libxl_psr_cmt_type_to_string@plt>:
    c0e0:	jmp    QWORD PTR [rip+0x22ec62]        # 23ad48 <libxl_psr_cmt_type_to_string>
    c0e6:	push   0x152
    c0eb:	jmp    abb0 <.plt>

000000000000c0f0 <libxl_send_trigger@plt>:
    c0f0:	jmp    QWORD PTR [rip+0x22ec5a]        # 23ad50 <libxl_send_trigger>
    c0f6:	push   0x153
    c0fb:	jmp    abb0 <.plt>

000000000000c100 <libxl_console_exec@plt>:
    c100:	jmp    QWORD PTR [rip+0x22ec52]        # 23ad58 <libxl_console_exec>
    c106:	push   0x154
    c10b:	jmp    abb0 <.plt>

000000000000c110 <strcat@plt>:
    c110:	jmp    QWORD PTR [rip+0x22ec4a]        # 23ad60 <strcat@GLIBC_2.2.5>
    c116:	push   0x155
    c11b:	jmp    abb0 <.plt>

000000000000c120 <libxl_sched_credit_params_get@plt>:
    c120:	jmp    QWORD PTR [rip+0x22ec42]        # 23ad68 <libxl_sched_credit_params_get>
    c126:	push   0x156
    c12b:	jmp    abb0 <.plt>

000000000000c130 <libxl_domain_setmaxmem@plt>:
    c130:	jmp    QWORD PTR [rip+0x22ec3a]        # 23ad70 <libxl_domain_setmaxmem>
    c136:	push   0x157
    c13b:	jmp    abb0 <.plt>

000000000000c140 <libxl_sched_credit_params_set@plt>:
    c140:	jmp    QWORD PTR [rip+0x22ec32]        # 23ad78 <libxl_sched_credit_params_set>
    c146:	push   0x158
    c14b:	jmp    abb0 <.plt>

000000000000c150 <libxl_psr_hw_info_list_free@plt>:
    c150:	jmp    QWORD PTR [rip+0x22ec2a]        # 23ad80 <libxl_psr_hw_info_list_free>
    c156:	push   0x159
    c15b:	jmp    abb0 <.plt>

000000000000c160 <libxl_psr_cmt_type_supported@plt>:
    c160:	jmp    QWORD PTR [rip+0x22ec22]        # 23ad88 <libxl_psr_cmt_type_supported>
    c166:	push   0x15a
    c16b:	jmp    abb0 <.plt>

000000000000c170 <libxl_tmem_shared_auth@plt>:
    c170:	jmp    QWORD PTR [rip+0x22ec1a]        # 23ad90 <libxl_tmem_shared_auth>
    c176:	push   0x15b
    c17b:	jmp    abb0 <.plt>

000000000000c180 <libxl_cpupoolid_to_name@plt>:
    c180:	jmp    QWORD PTR [rip+0x22ec12]        # 23ad98 <libxl_cpupoolid_to_name>
    c186:	push   0x15c
    c18b:	jmp    abb0 <.plt>

000000000000c190 <libxl_pcitopology_list_free@plt>:
    c190:	jmp    QWORD PTR [rip+0x22ec0a]        # 23ada0 <libxl_pcitopology_list_free>
    c196:	push   0x15d
    c19b:	jmp    abb0 <.plt>

000000000000c1a0 <exit@plt>:
    c1a0:	jmp    QWORD PTR [rip+0x22ec02]        # 23ada8 <exit@GLIBC_2.2.5>
    c1a6:	push   0x15e
    c1ab:	jmp    abb0 <.plt>

000000000000c1b0 <fwrite@plt>:
    c1b0:	jmp    QWORD PTR [rip+0x22ebfa]        # 23adb0 <fwrite@GLIBC_2.2.5>
    c1b6:	push   0x15f
    c1bb:	jmp    abb0 <.plt>

000000000000c1c0 <libxl_vcpu_sched_params_set@plt>:
    c1c0:	jmp    QWORD PTR [rip+0x22ebf2]        # 23adb8 <libxl_vcpu_sched_params_set>
    c1c6:	push   0x160
    c1cb:	jmp    abb0 <.plt>

000000000000c1d0 <libxl_sched_credit2_params_get@plt>:
    c1d0:	jmp    QWORD PTR [rip+0x22ebea]        # 23adc0 <libxl_sched_credit2_params_get>
    c1d6:	push   0x161
    c1db:	jmp    abb0 <.plt>

000000000000c1e0 <__fprintf_chk@plt>:
    c1e0:	jmp    QWORD PTR [rip+0x22ebe2]        # 23adc8 <__fprintf_chk@GLIBC_2.3.4>
    c1e6:	push   0x162
    c1eb:	jmp    abb0 <.plt>

000000000000c1f0 <libxl_device_vdispl_list_free@plt>:
    c1f0:	jmp    QWORD PTR [rip+0x22ebda]        # 23add0 <libxl_device_vdispl_list_free>
    c1f6:	push   0x163
    c1fb:	jmp    abb0 <.plt>

000000000000c200 <libxl_list_cpupool@plt>:
    c200:	jmp    QWORD PTR [rip+0x22ebd2]        # 23add8 <libxl_list_cpupool>
    c206:	push   0x164
    c20b:	jmp    abb0 <.plt>

000000000000c210 <libxl_cpupool_cpuadd_node@plt>:
    c210:	jmp    QWORD PTR [rip+0x22ebca]        # 23ade0 <libxl_cpupool_cpuadd_node>
    c216:	push   0x165
    c21b:	jmp    abb0 <.plt>

000000000000c220 <libxl_vnode_info_init@plt>:
    c220:	jmp    QWORD PTR [rip+0x22ebc2]        # 23ade8 <libxl_vnode_info_init>
    c226:	push   0x166
    c22b:	jmp    abb0 <.plt>

000000000000c230 <xlu_cfg_replace_string@plt>:
    c230:	jmp    QWORD PTR [rip+0x22ebba]        # 23adf0 <xlu_cfg_replace_string>
    c236:	push   0x167
    c23b:	jmp    abb0 <.plt>

000000000000c240 <libxl_cpupool_destroy@plt>:
    c240:	jmp    QWORD PTR [rip+0x22ebb2]        # 23adf8 <libxl_cpupool_destroy>
    c246:	push   0x168
    c24b:	jmp    abb0 <.plt>

000000000000c250 <libxl_device_nic_list@plt>:
    c250:	jmp    QWORD PTR [rip+0x22ebaa]        # 23ae00 <libxl_device_nic_list>
    c256:	push   0x169
    c25b:	jmp    abb0 <.plt>

000000000000c260 <xlu_cfg_value_get_string@plt>:
    c260:	jmp    QWORD PTR [rip+0x22eba2]        # 23ae08 <xlu_cfg_value_get_string>
    c266:	push   0x16a
    c26b:	jmp    abb0 <.plt>

000000000000c270 <libxl_device_usbdev_dispose@plt>:
    c270:	jmp    QWORD PTR [rip+0x22eb9a]        # 23ae10 <libxl_device_usbdev_dispose>
    c276:	push   0x16b
    c27b:	jmp    abb0 <.plt>

000000000000c280 <libxl_psr_cat_set_cbm@plt>:
    c280:	jmp    QWORD PTR [rip+0x22eb92]        # 23ae18 <libxl_psr_cat_set_cbm>
    c286:	push   0x16c
    c28b:	jmp    abb0 <.plt>

000000000000c290 <yajl_gen_map_open@plt>:
    c290:	jmp    QWORD PTR [rip+0x22eb8a]        # 23ae20 <yajl_gen_map_open>
    c296:	push   0x16d
    c29b:	jmp    abb0 <.plt>

000000000000c2a0 <libxl_device_vkb_list@plt>:
    c2a0:	jmp    QWORD PTR [rip+0x22eb82]        # 23ae28 <libxl_device_vkb_list>
    c2a6:	push   0x16e
    c2ab:	jmp    abb0 <.plt>

000000000000c2b0 <libxl_device_pvcallsif_init@plt>:
    c2b0:	jmp    QWORD PTR [rip+0x22eb7a]        # 23ae30 <libxl_device_pvcallsif_init>
    c2b6:	push   0x16f
    c2bb:	jmp    abb0 <.plt>

000000000000c2c0 <libxl_device_vtpm_init@plt>:
    c2c0:	jmp    QWORD PTR [rip+0x22eb72]        # 23ae38 <libxl_device_vtpm_init>
    c2c6:	push   0x170
    c2cb:	jmp    abb0 <.plt>

000000000000c2d0 <libxl_get_required_shadow_memory@plt>:
    c2d0:	jmp    QWORD PTR [rip+0x22eb6a]        # 23ae40 <libxl_get_required_shadow_memory>
    c2d6:	push   0x171
    c2db:	jmp    abb0 <.plt>

000000000000c2e0 <libxl_list_vcpu@plt>:
    c2e0:	jmp    QWORD PTR [rip+0x22eb62]        # 23ae48 <libxl_list_vcpu>
    c2e6:	push   0x172
    c2eb:	jmp    abb0 <.plt>

000000000000c2f0 <yajl_gen_alloc@plt>:
    c2f0:	jmp    QWORD PTR [rip+0x22eb5a]        # 23ae50 <yajl_gen_alloc>
    c2f6:	push   0x173
    c2fb:	jmp    abb0 <.plt>

000000000000c300 <libxl_bitmap_alloc@plt>:
    c300:	jmp    QWORD PTR [rip+0x22eb52]        # 23ae58 <libxl_bitmap_alloc>
    c306:	push   0x174
    c30b:	jmp    abb0 <.plt>

000000000000c310 <libxl_domain_config_from_json@plt>:
    c310:	jmp    QWORD PTR [rip+0x22eb4a]        # 23ae60 <libxl_domain_config_from_json>
    c316:	push   0x175
    c31b:	jmp    abb0 <.plt>

000000000000c320 <libxl_set_vcpuaffinity_all@plt>:
    c320:	jmp    QWORD PTR [rip+0x22eb42]        # 23ae68 <libxl_set_vcpuaffinity_all>
    c326:	push   0x176
    c32b:	jmp    abb0 <.plt>

000000000000c330 <xlu_rdm_parse@plt>:
    c330:	jmp    QWORD PTR [rip+0x22eb3a]        # 23ae70 <xlu_rdm_parse>
    c336:	push   0x177
    c33b:	jmp    abb0 <.plt>

000000000000c340 <libxl_create_logfile@plt>:
    c340:	jmp    QWORD PTR [rip+0x22eb32]        # 23ae78 <libxl_create_logfile>
    c346:	push   0x178
    c34b:	jmp    abb0 <.plt>

000000000000c350 <libxl_device_usbctrl_dispose@plt>:
    c350:	jmp    QWORD PTR [rip+0x22eb2a]        # 23ae80 <libxl_device_usbctrl_dispose>
    c356:	push   0x179
    c35b:	jmp    abb0 <.plt>

000000000000c360 <strdup@plt>:
    c360:	jmp    QWORD PTR [rip+0x22eb22]        # 23ae88 <strdup@GLIBC_2.2.5>
    c366:	push   0x17a
    c36b:	jmp    abb0 <.plt>

000000000000c370 <libxl_name_to_cpupoolid@plt>:
    c370:	jmp    QWORD PTR [rip+0x22eb1a]        # 23ae90 <libxl_name_to_cpupoolid>
    c376:	push   0x17b
    c37b:	jmp    abb0 <.plt>

000000000000c380 <xlu_cfg_get_string@plt>:
    c380:	jmp    QWORD PTR [rip+0x22eb12]        # 23ae98 <xlu_cfg_get_string>
    c386:	push   0x17c
    c38b:	jmp    abb0 <.plt>

000000000000c390 <libxl_fd_set_cloexec@plt>:
    c390:	jmp    QWORD PTR [rip+0x22eb0a]        # 23aea0 <libxl_fd_set_cloexec>
    c396:	push   0x17d
    c39b:	jmp    abb0 <.plt>

000000000000c3a0 <execlp@plt>:
    c3a0:	jmp    QWORD PTR [rip+0x22eb02]        # 23aea8 <execlp@GLIBC_2.2.5>
    c3a6:	push   0x17e
    c3ab:	jmp    abb0 <.plt>

000000000000c3b0 <strerror@plt>:
    c3b0:	jmp    QWORD PTR [rip+0x22eafa]        # 23aeb0 <strerror@GLIBC_2.2.5>
    c3b6:	push   0x17f
    c3bb:	jmp    abb0 <.plt>

000000000000c3c0 <libxl_vdisplinfo_dispose@plt>:
    c3c0:	jmp    QWORD PTR [rip+0x22eaf2]        # 23aeb8 <libxl_vdisplinfo_dispose>
    c3c6:	push   0x180
    c3cb:	jmp    abb0 <.plt>

000000000000c3d0 <libxl_vuart_type_from_string@plt>:
    c3d0:	jmp    QWORD PTR [rip+0x22eaea]        # 23aec0 <libxl_vuart_type_from_string>
    c3d6:	push   0x181
    c3db:	jmp    abb0 <.plt>

000000000000c3e0 <libxl_cpupool_cpuremove_node@plt>:
    c3e0:	jmp    QWORD PTR [rip+0x22eae2]        # 23aec8 <libxl_cpupool_cpuremove_node>
    c3e6:	push   0x182
    c3eb:	jmp    abb0 <.plt>

000000000000c3f0 <libxl_device_vtpm_dispose@plt>:
    c3f0:	jmp    QWORD PTR [rip+0x22eada]        # 23aed0 <libxl_device_vtpm_dispose>
    c3f6:	push   0x183
    c3fb:	jmp    abb0 <.plt>

000000000000c400 <libxl_primary_console_exec@plt>:
    c400:	jmp    QWORD PTR [rip+0x22ead2]        # 23aed8 <libxl_primary_console_exec>
    c406:	push   0x184
    c40b:	jmp    abb0 <.plt>

000000000000c410 <libxl_domain_remus_start@plt>:
    c410:	jmp    QWORD PTR [rip+0x22eaca]        # 23aee0 <libxl_domain_remus_start>
    c416:	push   0x185
    c41b:	jmp    abb0 <.plt>

000000000000c420 <sleep@plt>:
    c420:	jmp    QWORD PTR [rip+0x22eac2]        # 23aee8 <sleep@GLIBC_2.2.5>
    c426:	push   0x186
    c42b:	jmp    abb0 <.plt>

000000000000c430 <libxl_retrieve_domain_configuration@plt>:
    c430:	jmp    QWORD PTR [rip+0x22eaba]        # 23aef0 <libxl_retrieve_domain_configuration>
    c436:	push   0x187
    c43b:	jmp    abb0 <.plt>

000000000000c440 <libxl_vendor_device_from_string@plt>:
    c440:	jmp    QWORD PTR [rip+0x22eab2]        # 23aef8 <libxl_vendor_device_from_string>
    c446:	push   0x188
    c44b:	jmp    abb0 <.plt>

000000000000c450 <libxl_psr_cmt_get_l3_cache_size@plt>:
    c450:	jmp    QWORD PTR [rip+0x22eaaa]        # 23af00 <libxl_psr_cmt_get_l3_cache_size>
    c456:	push   0x189
    c45b:	jmp    abb0 <.plt>

000000000000c460 <libxl_diskinfo_dispose@plt>:
    c460:	jmp    QWORD PTR [rip+0x22eaa2]        # 23af08 <libxl_diskinfo_dispose>
    c466:	push   0x18a
    c46b:	jmp    abb0 <.plt>

000000000000c470 <fork@plt>:
    c470:	jmp    QWORD PTR [rip+0x22ea9a]        # 23af10 <fork@GLIBC_2.2.5>
    c476:	push   0x18b
    c47b:	jmp    abb0 <.plt>

000000000000c480 <libxl_list_vm@plt>:
    c480:	jmp    QWORD PTR [rip+0x22ea92]        # 23af18 <libxl_list_vm>
    c486:	push   0x18c
    c48b:	jmp    abb0 <.plt>

000000000000c490 <libxl_set_parameters@plt>:
    c490:	jmp    QWORD PTR [rip+0x22ea8a]        # 23af20 <libxl_set_parameters>
    c496:	push   0x18d
    c49b:	jmp    abb0 <.plt>

000000000000c4a0 <xlu_disk_parse@plt>:
    c4a0:	jmp    QWORD PTR [rip+0x22ea82]        # 23af28 <xlu_disk_parse>
    c4a6:	push   0x18e
    c4ab:	jmp    abb0 <.plt>

000000000000c4b0 <strstr@plt>:
    c4b0:	jmp    QWORD PTR [rip+0x22ea7a]        # 23af30 <strstr@GLIBC_2.2.5>
    c4b6:	push   0x18f
    c4bb:	jmp    abb0 <.plt>

000000000000c4c0 <libxl_device_vtpm_list@plt>:
    c4c0:	jmp    QWORD PTR [rip+0x22ea72]        # 23af38 <libxl_device_vtpm_list>
    c4c6:	push   0x190
    c4cb:	jmp    abb0 <.plt>

000000000000c4d0 <__ctype_tolower_loc@plt>:
    c4d0:	jmp    QWORD PTR [rip+0x22ea6a]        # 23af40 <__ctype_tolower_loc@GLIBC_2.3>
    c4d6:	push   0x191
    c4db:	jmp    abb0 <.plt>

000000000000c4e0 <libxl_devid_to_device_vtpm@plt>:
    c4e0:	jmp    QWORD PTR [rip+0x22ea62]        # 23af48 <libxl_devid_to_device_vtpm>
    c4e6:	push   0x192
    c4eb:	jmp    abb0 <.plt>

000000000000c4f0 <usleep@plt>:
    c4f0:	jmp    QWORD PTR [rip+0x22ea5a]        # 23af50 <usleep@GLIBC_2.2.5>
    c4f6:	push   0x193
    c4fb:	jmp    abb0 <.plt>

000000000000c500 <libxl_device_vdispl_init@plt>:
    c500:	jmp    QWORD PTR [rip+0x22ea52]        # 23af58 <libxl_device_vdispl_init>
    c506:	push   0x194
    c50b:	jmp    abb0 <.plt>

000000000000c510 <libxl_timer_mode_from_string@plt>:
    c510:	jmp    QWORD PTR [rip+0x22ea4a]        # 23af60 <libxl_timer_mode_from_string>
    c516:	push   0x195
    c51b:	jmp    abb0 <.plt>

000000000000c520 <xtl_logger_destroy@plt>:
    c520:	jmp    QWORD PTR [rip+0x22ea42]        # 23af68 <xtl_logger_destroy@VERS_1.0>
    c526:	push   0x196
    c52b:	jmp    abb0 <.plt>

000000000000c530 <__sprintf_chk@plt>:
    c530:	jmp    QWORD PTR [rip+0x22ea3a]        # 23af70 <__sprintf_chk@GLIBC_2.3.4>
    c536:	push   0x197
    c53b:	jmp    abb0 <.plt>

000000000000c540 <libxl_pipe@plt>:
    c540:	jmp    QWORD PTR [rip+0x22ea32]        # 23af78 <libxl_pipe>
    c546:	push   0x198
    c54b:	jmp    abb0 <.plt>

000000000000c550 <libxl_ctx_free@plt>:
    c550:	jmp    QWORD PTR [rip+0x22ea2a]        # 23af80 <libxl_ctx_free>
    c556:	push   0x199
    c55b:	jmp    abb0 <.plt>

000000000000c560 <libxl_vsnd_pcm_init@plt>:
    c560:	jmp    QWORD PTR [rip+0x22ea22]        # 23af88 <libxl_vsnd_pcm_init>
    c566:	push   0x19a
    c56b:	jmp    abb0 <.plt>

000000000000c570 <libxl_device_vkb_add@plt>:
    c570:	jmp    QWORD PTR [rip+0x22ea1a]        # 23af90 <libxl_device_vkb_add>
    c576:	push   0x19b
    c57b:	jmp    abb0 <.plt>

Disassembly of section .plt.got:

000000000000c580 <__cxa_finalize@plt>:
    c580:	jmp    QWORD PTR [rip+0x22ea5a]        # 23afe0 <__cxa_finalize@GLIBC_2.2.5>
    c586:	xchg   ax,ax

Disassembly of section .text:

000000000000c590 <main>:
    c590:	push   r15
    c592:	push   r14
    c594:	push   r13
    c596:	push   r12
    c598:	mov    r12d,edi
    c59b:	push   rbp
    c59c:	push   rbx
    c59d:	lea    rbx,[rip+0x1d254]        # 297f8 <_IO_stdin_used+0xb8>
    c5a4:	mov    rbp,rsi
    c5a7:	sub    rsp,0xf8
    c5ae:	mov    rax,QWORD PTR fs:0x28
    c5b7:	mov    QWORD PTR [rsp+0xe8],rax
    c5bf:	xor    eax,eax
    c5c1:	mov    QWORD PTR [rsp+0x20],0x0
    c5ca:	mov    DWORD PTR [rsp+0x1c],0x0
    c5d2:	nop    WORD PTR [rax+rax*1+0x0]
    c5d8:	mov    rdx,rbx
    c5db:	mov    rsi,rbp
    c5de:	mov    edi,r12d
    c5e1:	call   c020 <getopt@plt>
    c5e6:	test   eax,eax
    c5e8:	js     c650 <main+0xc0>
    c5ea:	cmp    eax,0x66
    c5ed:	je     c630 <main+0xa0>
    c5ef:	jle    c618 <main+0x88>
    c5f1:	cmp    eax,0x74
    c5f4:	je     c640 <main+0xb0>
    c5f6:	cmp    eax,0x76
    c5f9:	jne    cefa <main+0x96a>
    c5ff:	lea    rdx,[rip+0x22ea0e]        # 23b014 <minmsglevel>
    c606:	mov    eax,DWORD PTR [rdx]
    c608:	test   eax,eax
    c60a:	je     c5d8 <main+0x48>
    c60c:	sub    eax,0x1
    c60f:	mov    DWORD PTR [rdx],eax
    c611:	jmp    c5d8 <main+0x48>
    c613:	nop    DWORD PTR [rax+rax*1+0x0]
    c618:	cmp    eax,0x4e
    c61b:	jne    cefa <main+0x96a>
    c621:	lea    rax,[rip+0x230868]        # 23ce90 <dryrun_only>
    c628:	mov    DWORD PTR [rax],0x1
    c62e:	jmp    c5d8 <main+0x48>
    c630:	lea    rax,[rip+0x230869]        # 23cea0 <force_execution>
    c637:	mov    DWORD PTR [rax],0x1
    c63d:	jmp    c5d8 <main+0x48>
    c63f:	nop
    c640:	lea    rax,[rip+0x2307c1]        # 23ce08 <progress_use_cr>
    c647:	mov    BYTE PTR [rax],0x1
    c64a:	jmp    c5d8 <main+0x48>
    c64c:	nop    DWORD PTR [rax+0x0]
    c650:	mov    rax,QWORD PTR [rip+0x22e951]        # 23afa8 <optind@GLIBC_2.2.5>
    c657:	movsxd rax,DWORD PTR [rax]
    c65a:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
    c65f:	test   rax,rax
    c662:	mov    QWORD PTR [rsp],rax
    c666:	je     cfae <main+0xa1e>
    c66c:	mov    rax,QWORD PTR [rip+0x22e975]        # 23afe8 <opterr@GLIBC_2.2.5>
    c673:	xor    edx,edx
    c675:	mov    DWORD PTR [rax],0x0
    c67b:	lea    rax,[rip+0x230786]        # 23ce08 <progress_use_cr>
    c682:	cmp    BYTE PTR [rax],0x0
    c685:	lea    rax,[rip+0x22e988]        # 23b014 <minmsglevel>
    c68c:	mov    esi,DWORD PTR [rax]
    c68e:	mov    rax,QWORD PTR [rip+0x22e95b]        # 23aff0 <stderr@GLIBC_2.2.5>
    c695:	setne  dl
    c698:	shl    edx,0x3
    c69b:	mov    rdi,QWORD PTR [rax]
    c69e:	call   b840 <xtl_createlogger_stdiostream@plt>
    c6a3:	lea    rdx,[rip+0x2307de]        # 23ce88 <logger>
    c6aa:	test   rax,rax
    c6ad:	mov    QWORD PTR [rdx],rax
    c6b0:	je     cf44 <main+0x9b4>
    c6b6:	call   d390 <xl_ctx_alloc>
    c6bb:	lea    rdi,[rip+0xa0e]        # d0d0 <xl_ctx_free>
    c6c2:	call   29720 <atexit>
    c6c7:	lea    rax,[rip+0x230792]        # 23ce60 <ctx>
    c6ce:	lea    rcx,[rsp+0x1c]
    c6d3:	lea    rdx,[rsp+0x20]
    c6d8:	lea    rsi,[rip+0x1d11f]        # 297fe <_IO_stdin_used+0xbe>
    c6df:	mov    rdi,QWORD PTR [rax]
    c6e2:	call   b320 <libxl_read_file_contents@plt>
    c6e7:	test   eax,eax
    c6e9:	jne    cdad <main+0x81d>
    c6ef:	mov    rax,QWORD PTR [rip+0x22e8fa]        # 23aff0 <stderr@GLIBC_2.2.5>
    c6f6:	lea    rsi,[rip+0x1d101]        # 297fe <_IO_stdin_used+0xbe>
    c6fd:	mov    r14d,DWORD PTR [rsp+0x1c]
    c702:	mov    r13,QWORD PTR [rsp+0x20]
    c707:	mov    rdi,QWORD PTR [rax]
    c70a:	call   b270 <xlu_cfg_init@plt>
    c70f:	test   rax,rax
    c712:	mov    rbx,rax
    c715:	je     cf24 <main+0x994>
    c71b:	mov    edx,r14d
    c71e:	mov    rsi,r13
    c721:	mov    rdi,rax
    c724:	call   afb0 <xlu_cfg_readdata@plt>
    c729:	test   eax,eax
    c72b:	jne    cf7d <main+0x9ed>
    c731:	lea    r13,[rsp+0x28]
    c736:	lea    rsi,[rip+0x1d0d2]        # 2980f <_IO_stdin_used+0xcf>
    c73d:	xor    ecx,ecx
    c73f:	mov    rdi,rbx
    c742:	mov    rdx,r13
    c745:	call   c380 <xlu_cfg_get_string@plt>
    c74a:	test   eax,eax
    c74c:	jne    cb03 <main+0x573>
    c752:	mov    r14,QWORD PTR [rsp+0x28]
    c757:	lea    rsi,[rip+0x23071]        # 2f7cf <__func__.10421+0x1447>
    c75e:	mov    rdi,r14
    c761:	call   b650 <strcmp@plt>
    c766:	test   eax,eax
    c768:	jne    cb92 <main+0x602>
    c76e:	lea    rax,[rip+0x22e8b3]        # 23b028 <autoballoon>
    c775:	lea    r14,[rsp+0x30]
    c77a:	mov    DWORD PTR [rax],0x1
    c780:	lea    rsi,[rip+0x1d0b6]        # 2983d <_IO_stdin_used+0xfd>
    c787:	xor    ecx,ecx
    c789:	mov    rdx,r14
    c78c:	mov    rdi,rbx
    c78f:	call   b2c0 <xlu_cfg_get_long@plt>
    c794:	test   eax,eax
    c796:	jne    c7a6 <main+0x216>
    c798:	lea    rax,[rip+0x22e885]        # 23b024 <run_hotplug_scripts>
    c79f:	mov    rdx,QWORD PTR [rsp+0x30]
    c7a4:	mov    DWORD PTR [rax],edx
    c7a6:	lea    rsi,[rip+0x1d0a4]        # 29851 <_IO_stdin_used+0x111>
    c7ad:	xor    ecx,ecx
    c7af:	mov    rdx,r13
    c7b2:	mov    rdi,rbx
    c7b5:	call   c380 <xlu_cfg_get_string@plt>
    c7ba:	test   eax,eax
    c7bc:	jne    cc2f <main+0x69f>
    c7c2:	mov    rdi,QWORD PTR [rsp+0x28]
    c7c7:	call   c360 <strdup@plt>
    c7cc:	lea    rdx,[rip+0x2306c5]        # 23ce98 <lockfile>
    c7d3:	mov    QWORD PTR [rdx],rax
    c7d6:	cmp    QWORD PTR [rdx],0x0
    c7da:	je     cf4e <main+0x9be>
    c7e0:	lea    rsi,[rip+0x1d09d]        # 29884 <_IO_stdin_used+0x144>
    c7e7:	xor    ecx,ecx
    c7e9:	mov    rdx,r13
    c7ec:	mov    rdi,rbx
    c7ef:	call   c380 <xlu_cfg_get_string@plt>
    c7f4:	test   eax,eax
    c7f6:	je     cc5c <main+0x6cc>
    c7fc:	lea    rsi,[rip+0x1d08b]        # 2988e <_IO_stdin_used+0x14e>
    c803:	xor    ecx,ecx
    c805:	mov    rdx,r13
    c808:	mov    rdi,rbx
    c80b:	call   c380 <xlu_cfg_get_string@plt>
    c810:	test   eax,eax
    c812:	je     cd8c <main+0x7fc>
    c818:	lea    rsi,[rip+0x1d082]        # 298a1 <_IO_stdin_used+0x161>
    c81f:	xor    ecx,ecx
    c821:	mov    rdx,r13
    c824:	mov    rdi,rbx
    c827:	call   c380 <xlu_cfg_get_string@plt>
    c82c:	test   eax,eax
    c82e:	je     cd4b <main+0x7bb>
    c834:	lea    rsi,[rip+0x1d074]        # 298af <_IO_stdin_used+0x16f>
    c83b:	xor    ecx,ecx
    c83d:	mov    rdx,r13
    c840:	mov    rdi,rbx
    c843:	call   c380 <xlu_cfg_get_string@plt>
    c848:	test   eax,eax
    c84a:	je     cd2a <main+0x79a>
    c850:	lea    rsi,[rip+0x1d06b]        # 298c2 <_IO_stdin_used+0x182>
    c857:	xor    ecx,ecx
    c859:	mov    rdx,r13
    c85c:	mov    rdi,rbx
    c85f:	call   c380 <xlu_cfg_get_string@plt>
    c864:	test   eax,eax
    c866:	je     cd11 <main+0x781>
    c86c:	lea    rsi,[rip+0x1d066]        # 298d9 <_IO_stdin_used+0x199>
    c873:	xor    ecx,ecx
    c875:	mov    rdx,r13
    c878:	mov    rdi,rbx
    c87b:	call   c380 <xlu_cfg_get_string@plt>
    c880:	test   eax,eax
    c882:	je     ccf8 <main+0x768>
    c888:	lea    rsi,[rip+0x1d05e]        # 298ed <_IO_stdin_used+0x1ad>
    c88f:	xor    ecx,ecx
    c891:	mov    rdx,r13
    c894:	mov    rdi,rbx
    c897:	call   c380 <xlu_cfg_get_string@plt>
    c89c:	test   eax,eax
    c89e:	jne    c8c9 <main+0x339>
    c8a0:	mov    r15,QWORD PTR [rsp+0x28]
    c8a5:	lea    rsi,[rip+0x1d04f]        # 298fb <_IO_stdin_used+0x1bb>
    c8ac:	mov    rdi,r15
    c8af:	call   b650 <strcmp@plt>
    c8b4:	test   eax,eax
    c8b6:	jne    cb69 <main+0x5d9>
    c8bc:	lea    rax,[rip+0x230549]        # 23ce0c <default_output_format>
    c8c3:	mov    DWORD PTR [rax],0x0
    c8c9:	lea    rsi,[rip+0x1d034]        # 29904 <_IO_stdin_used+0x1c4>
    c8d0:	xor    ecx,ecx
    c8d2:	mov    rdx,r13
    c8d5:	mov    rdi,rbx
    c8d8:	call   c380 <xlu_cfg_get_string@plt>
    c8dd:	test   eax,eax
    c8df:	je     ccdf <main+0x74f>
    c8e5:	lea    rsi,[rip+0x1d025]        # 29911 <_IO_stdin_used+0x1d1>
    c8ec:	xor    ecx,ecx
    c8ee:	mov    rdx,r14
    c8f1:	mov    rdi,rbx
    c8f4:	call   b2c0 <xlu_cfg_get_long@plt>
    c8f9:	test   eax,eax
    c8fb:	jne    c90b <main+0x37b>
    c8fd:	lea    rax,[rip+0x22e71c]        # 23b020 <claim_mode>
    c904:	mov    rdx,QWORD PTR [rsp+0x30]
    c909:	mov    DWORD PTR [rax],edx
    c90b:	lea    rdx,[rip+0x230506]        # 23ce18 <default_remus_netbufscript>
    c912:	lea    rsi,[rip+0x1d003]        # 2991c <_IO_stdin_used+0x1dc>
    c919:	xor    ecx,ecx
    c91b:	mov    rdi,rbx
    c91e:	call   c230 <xlu_cfg_replace_string@plt>
    c923:	lea    rdx,[rip+0x2304e6]        # 23ce10 <default_colo_proxy_script>
    c92a:	lea    rsi,[rip+0x1d006]        # 29937 <_IO_stdin_used+0x1f7>
    c931:	xor    ecx,ecx
    c933:	mov    rdi,rbx
    c936:	call   c230 <xlu_cfg_replace_string@plt>
    c93b:	lea    rsi,[rip+0x1d00e]        # 29950 <_IO_stdin_used+0x210>
    c942:	xor    ecx,ecx
    c944:	mov    rdx,r14
    c947:	mov    rdi,rbx
    c94a:	call   b2c0 <xlu_cfg_get_long@plt>
    c94f:	test   eax,eax
    c951:	jne    cc9d <main+0x70d>
    c957:	lea    rax,[rip+0x22e6be]        # 23b01c <max_grant_frames>
    c95e:	mov    rdx,QWORD PTR [rsp+0x30]
    c963:	mov    DWORD PTR [rax],edx
    c965:	lea    rsi,[rip+0x1cff5]        # 29961 <_IO_stdin_used+0x221>
    c96c:	xor    ecx,ecx
    c96e:	mov    rdx,r14
    c971:	mov    rdi,rbx
    c974:	call   b2c0 <xlu_cfg_get_long@plt>
    c979:	test   eax,eax
    c97b:	jne    c98b <main+0x3fb>
    c97d:	lea    rax,[rip+0x22e694]        # 23b018 <max_maptrack_frames>
    c984:	mov    rdx,QWORD PTR [rsp+0x30]
    c989:	mov    DWORD PTR [rax],edx
    c98b:	lea    rax,[rip+0x2304ce]        # 23ce60 <ctx>
    c992:	lea    r15,[rip+0x230517]        # 23ceb0 <global_vm_affinity_mask>
    c999:	xor    edx,edx
    c99b:	mov    rdi,QWORD PTR [rax]
    c99e:	mov    rsi,r15
    c9a1:	call   b480 <libxl_cpu_bitmap_alloc@plt>
    c9a6:	lea    rax,[rip+0x2304b3]        # 23ce60 <ctx>
    c9ad:	lea    rsi,[rip+0x2304bc]        # 23ce70 <global_hvm_affinity_mask>
    c9b4:	xor    edx,edx
    c9b6:	mov    rdi,QWORD PTR [rax]
    c9b9:	call   b480 <libxl_cpu_bitmap_alloc@plt>
    c9be:	lea    rax,[rip+0x23049b]        # 23ce60 <ctx>
    c9c5:	lea    r14,[rip+0x2304f4]        # 23cec0 <global_pv_affinity_mask>
    c9cc:	xor    edx,edx
    c9ce:	mov    rdi,QWORD PTR [rax]
    c9d1:	mov    rsi,r14
    c9d4:	call   b480 <libxl_cpu_bitmap_alloc@plt>
    c9d9:	lea    rsi,[rip+0x1cf99]        # 29979 <_IO_stdin_used+0x239>
    c9e0:	xor    ecx,ecx
    c9e2:	mov    rdx,r13
    c9e5:	mov    rdi,rbx
    c9e8:	call   c380 <xlu_cfg_get_string@plt>
    c9ed:	test   eax,eax
    c9ef:	jne    cc01 <main+0x671>
    c9f5:	mov    rdi,QWORD PTR [rsp+0x28]
    c9fa:	mov    rsi,r15
    c9fd:	call   11910 <parse_cpurange>
    ca02:	lea    rsi,[rip+0x1cf6c]        # 29975 <_IO_stdin_used+0x235>
    ca09:	xor    ecx,ecx
    ca0b:	mov    rdx,r13
    ca0e:	mov    rdi,rbx
    ca11:	call   c380 <xlu_cfg_get_string@plt>
    ca16:	test   eax,eax
    ca18:	jne    cc15 <main+0x685>
    ca1e:	lea    rsi,[rip+0x23044b]        # 23ce70 <global_hvm_affinity_mask>
    ca25:	mov    rdi,QWORD PTR [rsp+0x28]
    ca2a:	call   11910 <parse_cpurange>
    ca2f:	lea    rsi,[rip+0x1cf4e]        # 29984 <_IO_stdin_used+0x244>
    ca36:	xor    ecx,ecx
    ca38:	mov    rdx,r13
    ca3b:	mov    rdi,rbx
    ca3e:	call   c380 <xlu_cfg_get_string@plt>
    ca43:	test   eax,eax
    ca45:	je     cc4a <main+0x6ba>
    ca4b:	mov    edx,DWORD PTR [r14]
    ca4e:	mov    rdi,QWORD PTR [r14+0x8]
    ca52:	or     esi,0xffffffff
    ca55:	call   b400 <memset@plt>
    ca5a:	mov    rdi,rbx
    ca5d:	call   abc0 <xlu_cfg_destroy@plt>
    ca62:	mov    rdi,QWORD PTR [rsp+0x20]
    ca67:	call   ac40 <free@plt>
    ca6c:	mov    rax,QWORD PTR [rip+0x22e535]        # 23afa8 <optind@GLIBC_2.2.5>
    ca73:	mov    rdi,QWORD PTR [rsp]
    ca77:	movsxd rax,DWORD PTR [rax]
    ca7a:	mov    r13,rax
    ca7d:	lea    rbx,[rbp+rax*8+0x0]
    ca82:	mov    rax,QWORD PTR [rip+0x22e51f]        # 23afa8 <optind@GLIBC_2.2.5>
    ca89:	mov    DWORD PTR [rax],0x1
    ca8f:	call   d660 <cmdtable_lookup>
    ca94:	test   rax,rax
    ca97:	je     cde5 <main+0x855>
    ca9d:	lea    rdx,[rip+0x2303ec]        # 23ce90 <dryrun_only>
    caa4:	mov    edx,DWORD PTR [rdx]
    caa6:	test   edx,edx
    caa8:	jne    ce95 <main+0x905>
    caae:	mov    edi,r12d
    cab1:	mov    rsi,rbx
    cab4:	sub    edi,r13d
    cab7:	call   QWORD PTR [rax+0x8]
    caba:	mov    rcx,QWORD PTR [rsp+0xe8]
    cac2:	xor    rcx,QWORD PTR fs:0x28
    cacb:	jne    cf78 <main+0x9e8>
    cad1:	add    rsp,0xf8
    cad8:	pop    rbx
    cad9:	pop    rbp
    cada:	pop    r12
    cadc:	pop    r13
    cade:	pop    r14
    cae0:	pop    r15
    cae2:	ret    
    cae3:	mov    rax,QWORD PTR [rip+0x22e506]        # 23aff0 <stderr@GLIBC_2.2.5>
    caea:	lea    rdi,[rip+0x1cd31]        # 29822 <_IO_stdin_used+0xe2>
    caf1:	mov    edx,0x1a
    caf6:	mov    esi,0x1
    cafb:	mov    rcx,QWORD PTR [rax]
    cafe:	call   c1b0 <fwrite@plt>
    cb03:	lea    r15,[rip+0x22e51e]        # 23b028 <autoballoon>
    cb0a:	lea    r14,[rsp+0x30]
    cb0f:	cmp    DWORD PTR [r15],0xffffffff
    cb13:	jne    c780 <main+0x1f0>
    cb19:	lea    rax,[rip+0x230340]        # 23ce60 <ctx>
    cb20:	mov    rdi,QWORD PTR [rax]
    cb23:	call   b360 <libxl_get_version_info@plt>
    cb28:	test   rax,rax
    cb2b:	je     ce4f <main+0x8bf>
    cb31:	lea    r14,[rsp+0x30]
    cb36:	lea    rsi,[rip+0x1cf63]        # 29aa0 <_IO_stdin_used+0x360>
    cb3d:	mov    edx,0x9
    cb42:	mov    QWORD PTR [rsp+0x8],rax
    cb47:	mov    rdi,r14
    cb4a:	call   b530 <regcomp@plt>
    cb4f:	test   eax,eax
    cb51:	mov    rcx,QWORD PTR [rsp+0x8]
    cb56:	je     cec9 <main+0x939>
    cb5c:	mov    eax,0x1
    cb61:	mov    DWORD PTR [r15],eax
    cb64:	jmp    c780 <main+0x1f0>
    cb69:	lea    rsi,[rip+0x1cd90]        # 29900 <_IO_stdin_used+0x1c0>
    cb70:	mov    rdi,r15
    cb73:	call   b650 <strcmp@plt>
    cb78:	test   eax,eax
    cb7a:	jne    ce59 <main+0x8c9>
    cb80:	lea    rax,[rip+0x230285]        # 23ce0c <default_output_format>
    cb87:	mov    DWORD PTR [rax],0x1
    cb8d:	jmp    c8c9 <main+0x339>
    cb92:	lea    rsi,[rip+0x1cc82]        # 2981b <_IO_stdin_used+0xdb>
    cb99:	mov    rdi,r14
    cb9c:	call   b650 <strcmp@plt>
    cba1:	test   eax,eax
    cba3:	je     c76e <main+0x1de>
    cba9:	lea    rsi,[rip+0x226bf]        # 2f26f <__func__.10421+0xee7>
    cbb0:	mov    rdi,r14
    cbb3:	call   b650 <strcmp@plt>
    cbb8:	test   eax,eax
    cbba:	je     ce7e <main+0x8ee>
    cbc0:	lea    rsi,[rip+0x27caf]        # 34876 <savefileheader_magic+0x3d6>
    cbc7:	mov    rdi,r14
    cbca:	call   b650 <strcmp@plt>
    cbcf:	test   eax,eax
    cbd1:	je     ce7e <main+0x8ee>
    cbd7:	lea    rsi,[rip+0x1cc3f]        # 2981d <_IO_stdin_used+0xdd>
    cbde:	mov    rdi,r14
    cbe1:	call   b650 <strcmp@plt>
    cbe6:	test   eax,eax
    cbe8:	jne    cae3 <main+0x553>
    cbee:	lea    r15,[rip+0x22e433]        # 23b028 <autoballoon>
    cbf5:	mov    DWORD PTR [r15],0xffffffff
    cbfc:	jmp    cb19 <main+0x589>
    cc01:	mov    edx,DWORD PTR [r15]
    cc04:	mov    rdi,QWORD PTR [r15+0x8]
    cc08:	or     esi,0xffffffff
    cc0b:	call   b400 <memset@plt>
    cc10:	jmp    ca02 <main+0x472>
    cc15:	lea    rax,[rip+0x230254]        # 23ce70 <global_hvm_affinity_mask>
    cc1c:	or     esi,0xffffffff
    cc1f:	mov    edx,DWORD PTR [rax]
    cc21:	mov    rdi,QWORD PTR [rax+0x8]
    cc25:	call   b400 <memset@plt>
    cc2a:	jmp    ca2f <main+0x49f>
    cc2f:	lea    rdi,[rip+0x1cc24]        # 2985a <_IO_stdin_used+0x11a>
    cc36:	call   c360 <strdup@plt>
    cc3b:	lea    rdx,[rip+0x230256]        # 23ce98 <lockfile>
    cc42:	mov    QWORD PTR [rdx],rax
    cc45:	jmp    c7d6 <main+0x246>
    cc4a:	mov    rdi,QWORD PTR [rsp+0x28]
    cc4f:	mov    rsi,r14
    cc52:	call   11910 <parse_cpurange>
    cc57:	jmp    ca5a <main+0x4ca>
    cc5c:	mov    rax,QWORD PTR [rip+0x22e38d]        # 23aff0 <stderr@GLIBC_2.2.5>
    cc63:	lea    rdi,[rip+0x1ce6e]        # 29ad8 <_IO_stdin_used+0x398>
    cc6a:	mov    edx,0x56
    cc6f:	mov    esi,0x1
    cc74:	mov    rcx,QWORD PTR [rax]
    cc77:	call   c1b0 <fwrite@plt>
    cc7c:	lea    r15,[rip+0x2301b5]        # 23ce38 <default_vifscript>
    cc83:	mov    rdi,QWORD PTR [r15]
    cc86:	call   ac40 <free@plt>
    cc8b:	mov    rdi,QWORD PTR [rsp+0x28]
    cc90:	call   c360 <strdup@plt>
    cc95:	mov    QWORD PTR [r15],rax
    cc98:	jmp    c7fc <main+0x26c>
    cc9d:	lea    r15,[rsp+0x70]
    cca2:	mov    rdi,r15
    cca5:	call   af50 <libxl_physinfo_init@plt>
    ccaa:	lea    rax,[rip+0x2301af]        # 23ce60 <ctx>
    ccb1:	mov    rsi,r15
    ccb4:	mov    rdi,QWORD PTR [rax]
    ccb7:	call   b470 <libxl_get_physinfo@plt>
    ccbc:	test   eax,eax
    ccbe:	mov    edx,0x20
    ccc3:	je     ce26 <main+0x896>
    ccc9:	lea    rax,[rip+0x22e34c]        # 23b01c <max_grant_frames>
    ccd0:	mov    rdi,r15
    ccd3:	mov    DWORD PTR [rax],edx
    ccd5:	call   c070 <libxl_physinfo_dispose@plt>
    ccda:	jmp    c965 <main+0x3d5>
    ccdf:	mov    rdi,QWORD PTR [rsp+0x28]
    cce4:	call   c360 <strdup@plt>
    cce9:	lea    rdx,[rip+0x230190]        # 23ce80 <blkdev_start>
    ccf0:	mov    QWORD PTR [rdx],rax
    ccf3:	jmp    c8e5 <main+0x355>
    ccf8:	mov    rdi,QWORD PTR [rsp+0x28]
    ccfd:	call   c360 <strdup@plt>
    cd02:	lea    rdx,[rip+0x230117]        # 23ce20 <default_vifbackend>
    cd09:	mov    QWORD PTR [rdx],rax
    cd0c:	jmp    c888 <main+0x2f8>
    cd11:	mov    rdi,QWORD PTR [rsp+0x28]
    cd16:	call   c360 <strdup@plt>
    cd1b:	lea    rdx,[rip+0x230106]        # 23ce28 <default_gatewaydev>
    cd22:	mov    QWORD PTR [rdx],rax
    cd25:	jmp    c86c <main+0x2dc>
    cd2a:	lea    r15,[rip+0x2300ff]        # 23ce30 <default_bridge>
    cd31:	mov    rdi,QWORD PTR [r15]
    cd34:	call   ac40 <free@plt>
    cd39:	mov    rdi,QWORD PTR [rsp+0x28]
    cd3e:	call   c360 <strdup@plt>
    cd43:	mov    QWORD PTR [r15],rax
    cd46:	jmp    c850 <main+0x2c0>
    cd4b:	mov    rax,QWORD PTR [rip+0x22e29e]        # 23aff0 <stderr@GLIBC_2.2.5>
    cd52:	lea    rdi,[rip+0x1cdd7]        # 29b30 <_IO_stdin_used+0x3f0>
    cd59:	mov    edx,0x5a
    cd5e:	mov    esi,0x1
    cd63:	mov    rcx,QWORD PTR [rax]
    cd66:	call   c1b0 <fwrite@plt>
    cd6b:	lea    r15,[rip+0x2300be]        # 23ce30 <default_bridge>
    cd72:	mov    rdi,QWORD PTR [r15]
    cd75:	call   ac40 <free@plt>
    cd7a:	mov    rdi,QWORD PTR [rsp+0x28]
    cd7f:	call   c360 <strdup@plt>
    cd84:	mov    QWORD PTR [r15],rax
    cd87:	jmp    c834 <main+0x2a4>
    cd8c:	lea    r15,[rip+0x2300a5]        # 23ce38 <default_vifscript>
    cd93:	mov    rdi,QWORD PTR [r15]
    cd96:	call   ac40 <free@plt>
    cd9b:	mov    rdi,QWORD PTR [rsp+0x28]
    cda0:	call   c360 <strdup@plt>
    cda5:	mov    QWORD PTR [r15],rax
    cda8:	jmp    c818 <main+0x288>
    cdad:	call   ad80 <__errno_location@plt>
    cdb2:	mov    edi,DWORD PTR [rax]
    cdb4:	call   c3b0 <strerror@plt>
    cdb9:	mov    r8,rax
    cdbc:	mov    rax,QWORD PTR [rip+0x22e22d]        # 23aff0 <stderr@GLIBC_2.2.5>
    cdc3:	lea    rcx,[rip+0x1ca34]        # 297fe <_IO_stdin_used+0xbe>
    cdca:	lea    rdx,[rip+0x1cc57]        # 29a28 <_IO_stdin_used+0x2e8>
    cdd1:	mov    esi,0x1
    cdd6:	mov    rdi,QWORD PTR [rax]
    cdd9:	xor    eax,eax
    cddb:	call   c1e0 <__fprintf_chk@plt>
    cde0:	jmp    c6ef <main+0x15f>
    cde5:	mov    rdi,QWORD PTR [rsp]
    cde9:	lea    rsi,[rip+0x1c999]        # 29789 <_IO_stdin_used+0x49>
    cdf0:	call   b650 <strcmp@plt>
    cdf5:	test   eax,eax
    cdf7:	mov    DWORD PTR [rsp],eax
    cdfa:	je     ce3e <main+0x8ae>
    cdfc:	mov    rax,QWORD PTR [rip+0x22e1ed]        # 23aff0 <stderr@GLIBC_2.2.5>
    ce03:	lea    rdi,[rip+0x1cb88]        # 29992 <_IO_stdin_used+0x252>
    ce0a:	mov    edx,0x18
    ce0f:	mov    esi,0x1
    ce14:	mov    rcx,QWORD PTR [rax]
    ce17:	call   c1b0 <fwrite@plt>
    ce1c:	mov    eax,0x1
    ce21:	jmp    caba <main+0x52a>
    ce26:	mov    eax,DWORD PTR [rsp+0xbc]
    ce2d:	cmp    rax,0x1
    ce31:	sbb    edx,edx
    ce33:	and    edx,0xffffffe0
    ce36:	add    edx,0x40
    ce39:	jmp    ccc9 <main+0x739>
    ce3e:	mov    rdi,QWORD PTR [rbx+0x8]
    ce42:	call   d4f0 <help>
    ce47:	mov    eax,DWORD PTR [rsp]
    ce4a:	jmp    caba <main+0x52a>
    ce4f:	lea    r14,[rsp+0x30]
    ce54:	jmp    cb5c <main+0x5cc>
    ce59:	mov    rax,QWORD PTR [rip+0x22e190]        # 23aff0 <stderr@GLIBC_2.2.5>
    ce60:	lea    rdx,[rip+0x1cd29]        # 29b90 <_IO_stdin_used+0x450>
    ce67:	mov    rcx,r15
    ce6a:	mov    esi,0x1
    ce6f:	mov    rdi,QWORD PTR [rax]
    ce72:	xor    eax,eax
    ce74:	call   c1e0 <__fprintf_chk@plt>
    ce79:	jmp    c8c9 <main+0x339>
    ce7e:	lea    rax,[rip+0x22e1a3]        # 23b028 <autoballoon>
    ce85:	lea    r14,[rsp+0x30]
    ce8a:	mov    DWORD PTR [rax],0x0
    ce90:	jmp    c780 <main+0x1f0>
    ce95:	cmp    DWORD PTR [rax+0x10],0x0
    ce99:	jne    caae <main+0x51e>
    ce9f:	mov    rax,QWORD PTR [rip+0x22e14a]        # 23aff0 <stderr@GLIBC_2.2.5>
    cea6:	lea    rdi,[rip+0x1cd0b]        # 29bb8 <_IO_stdin_used+0x478>
    cead:	mov    edx,0x2e
    ceb2:	mov    esi,0x1
    ceb7:	mov    rcx,QWORD PTR [rax]
    ceba:	call   c1b0 <fwrite@plt>
    cebf:	mov    eax,0x1
    cec4:	jmp    caba <main+0x52a>
    cec9:	mov    rsi,QWORD PTR [rcx+0x50]
    cecd:	xor    r8d,r8d
    ced0:	xor    ecx,ecx
    ced2:	xor    edx,edx
    ced4:	mov    rdi,r14
    ced7:	call   bb50 <regexec@plt>
    cedc:	mov    rdi,r14
    cedf:	mov    DWORD PTR [rsp+0x8],eax
    cee3:	call   b0b0 <regfree@plt>
    cee8:	mov    eax,DWORD PTR [rsp+0x8]
    ceec:	sub    eax,0x1
    ceef:	sete   al
    cef2:	movzx  eax,al
    cef5:	jmp    cb61 <main+0x5d1>
    cefa:	mov    rax,QWORD PTR [rip+0x22e0ef]        # 23aff0 <stderr@GLIBC_2.2.5>
    cf01:	lea    rdi,[rip+0x1c8d9]        # 297e1 <_IO_stdin_used+0xa1>
    cf08:	mov    edx,0x16
    cf0d:	mov    esi,0x1
    cf12:	mov    rcx,QWORD PTR [rax]
    cf15:	call   c1b0 <fwrite@plt>
    cf1a:	mov    edi,0x1
    cf1f:	call   c1a0 <exit@plt>
    cf24:	mov    rax,QWORD PTR [rip+0x22e0c5]        # 23aff0 <stderr@GLIBC_2.2.5>
    cf2b:	lea    rdi,[rip+0x1cb1e]        # 29a50 <_IO_stdin_used+0x310>
    cf32:	mov    edx,0x25
    cf37:	mov    esi,0x1
    cf3c:	mov    rcx,QWORD PTR [rax]
    cf3f:	call   c1b0 <fwrite@plt>
    cf44:	mov    edi,0x1
    cf49:	call   c1a0 <exit@plt>
    cf4e:	mov    rax,QWORD PTR [rip+0x22e09b]        # 23aff0 <stderr@GLIBC_2.2.5>
    cf55:	lea    rdi,[rip+0x1c90b]        # 29867 <_IO_stdin_used+0x127>
    cf5c:	mov    edx,0x1c
    cf61:	mov    esi,0x1
    cf66:	mov    rcx,QWORD PTR [rax]
    cf69:	call   c1b0 <fwrite@plt>
    cf6e:	mov    edi,0x1
    cf73:	call   c1a0 <exit@plt>
    cf78:	call   b130 <__stack_chk_fail@plt>
    cf7d:	mov    edi,eax
    cf7f:	call   c3b0 <strerror@plt>
    cf84:	mov    rcx,rax
    cf87:	mov    rax,QWORD PTR [rip+0x22e062]        # 23aff0 <stderr@GLIBC_2.2.5>
    cf8e:	lea    rdx,[rip+0x1cae3]        # 29a78 <_IO_stdin_used+0x338>
    cf95:	mov    esi,0x1
    cf9a:	mov    rdi,QWORD PTR [rax]
    cf9d:	xor    eax,eax
    cf9f:	call   c1e0 <__fprintf_chk@plt>
    cfa4:	mov    edi,0x1
    cfa9:	call   c1a0 <exit@plt>
    cfae:	xor    edi,edi
    cfb0:	call   d4f0 <help>
    cfb5:	mov    edi,0x1
    cfba:	call   c1a0 <exit@plt>
    cfbf:	nop

000000000000cfc0 <_start>:
    cfc0:	xor    ebp,ebp
    cfc2:	mov    r9,rdx
    cfc5:	pop    rsi
    cfc6:	mov    rdx,rsp
    cfc9:	and    rsp,0xfffffffffffffff0
    cfcd:	push   rax
    cfce:	push   rsp
    cfcf:	lea    r8,[rip+0x1c73a]        # 29710 <__libc_csu_fini>
    cfd6:	lea    rcx,[rip+0x1c6c3]        # 296a0 <__libc_csu_init>
    cfdd:	lea    rdi,[rip+0xfffffffffffff5ac]        # c590 <main>
    cfe4:	call   QWORD PTR [rip+0x22dfce]        # 23afb8 <__libc_start_main@GLIBC_2.2.5>
    cfea:	hlt    
    cfeb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000cff0 <deregister_tm_clones>:
    cff0:	lea    rdi,[rip+0x22fe09]        # 23ce00 <__TMC_END__>
    cff7:	push   rbp
    cff8:	lea    rax,[rip+0x22fe01]        # 23ce00 <__TMC_END__>
    cfff:	cmp    rax,rdi
    d002:	mov    rbp,rsp
    d005:	je     d020 <deregister_tm_clones+0x30>
    d007:	mov    rax,QWORD PTR [rip+0x22df8a]        # 23af98 <_ITM_deregisterTMCloneTable>
    d00e:	test   rax,rax
    d011:	je     d020 <deregister_tm_clones+0x30>
    d013:	pop    rbp
    d014:	jmp    rax
    d016:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d020:	pop    rbp
    d021:	ret    
    d022:	nop    DWORD PTR [rax+0x0]
    d026:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d030 <register_tm_clones>:
    d030:	lea    rdi,[rip+0x22fdc9]        # 23ce00 <__TMC_END__>
    d037:	lea    rsi,[rip+0x22fdc2]        # 23ce00 <__TMC_END__>
    d03e:	push   rbp
    d03f:	sub    rsi,rdi
    d042:	mov    rbp,rsp
    d045:	sar    rsi,0x3
    d049:	mov    rax,rsi
    d04c:	shr    rax,0x3f
    d050:	add    rsi,rax
    d053:	sar    rsi,1
    d056:	je     d070 <register_tm_clones+0x40>
    d058:	mov    rax,QWORD PTR [rip+0x22df79]        # 23afd8 <_ITM_registerTMCloneTable>
    d05f:	test   rax,rax
    d062:	je     d070 <register_tm_clones+0x40>
    d064:	pop    rbp
    d065:	jmp    rax
    d067:	nop    WORD PTR [rax+rax*1+0x0]
    d070:	pop    rbp
    d071:	ret    
    d072:	nop    DWORD PTR [rax+0x0]
    d076:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d080 <__do_global_dtors_aux>:
    d080:	cmp    BYTE PTR [rip+0x22fd79],0x0        # 23ce00 <__TMC_END__>
    d087:	jne    d0b8 <__do_global_dtors_aux+0x38>
    d089:	cmp    QWORD PTR [rip+0x22df4f],0x0        # 23afe0 <__cxa_finalize@GLIBC_2.2.5>
    d091:	push   rbp
    d092:	mov    rbp,rsp
    d095:	je     d0a3 <__do_global_dtors_aux+0x23>
    d097:	mov    rdi,QWORD PTR [rip+0x22df6a]        # 23b008 <__dso_handle>
    d09e:	call   c580 <__cxa_finalize@plt>
    d0a3:	call   cff0 <deregister_tm_clones>
    d0a8:	mov    BYTE PTR [rip+0x22fd51],0x1        # 23ce00 <__TMC_END__>
    d0af:	pop    rbp
    d0b0:	ret    
    d0b1:	nop    DWORD PTR [rax+0x0]
    d0b8:	repz ret 
    d0ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d0c0 <frame_dummy>:
    d0c0:	push   rbp
    d0c1:	mov    rbp,rsp
    d0c4:	pop    rbp
    d0c5:	jmp    d030 <register_tm_clones>
    d0ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d0d0 <xl_ctx_free>:
    d0d0:	lea    rdi,[rip+0x22fde9]        # 23cec0 <global_pv_affinity_mask>
    d0d7:	push   rbx
    d0d8:	call   bdb0 <libxl_bitmap_dispose@plt>
    d0dd:	lea    rdi,[rip+0x22fd8c]        # 23ce70 <global_hvm_affinity_mask>
    d0e4:	call   bdb0 <libxl_bitmap_dispose@plt>
    d0e9:	lea    rdi,[rip+0x22fdc0]        # 23ceb0 <global_vm_affinity_mask>
    d0f0:	call   bdb0 <libxl_bitmap_dispose@plt>
    d0f5:	lea    rbx,[rip+0x22fd64]        # 23ce60 <ctx>
    d0fc:	mov    rdi,QWORD PTR [rbx]
    d0ff:	test   rdi,rdi
    d102:	je     d110 <xl_ctx_free+0x40>
    d104:	call   c550 <libxl_ctx_free@plt>
    d109:	mov    QWORD PTR [rbx],0x0
    d110:	lea    rbx,[rip+0x22fd71]        # 23ce88 <logger>
    d117:	mov    rdi,QWORD PTR [rbx]
    d11a:	test   rdi,rdi
    d11d:	je     d12b <xl_ctx_free+0x5b>
    d11f:	call   c520 <xtl_logger_destroy@plt>
    d124:	mov    QWORD PTR [rbx],0x0
    d12b:	lea    rbx,[rip+0x22fd66]        # 23ce98 <lockfile>
    d132:	mov    rdi,QWORD PTR [rbx]
    d135:	test   rdi,rdi
    d138:	je     d146 <xl_ctx_free+0x76>
    d13a:	call   ac40 <free@plt>
    d13f:	mov    QWORD PTR [rbx],0x0
    d146:	pop    rbx
    d147:	ret    
    d148:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d150 <xl_reaped_callback>:
    d150:	test   edi,edi
    d152:	je     d196 <xl_reaped_callback+0x46>
    d154:	lea    rdx,[rip+0x22fd85]        # 23cee0 <children>
    d15b:	xor    eax,eax
    d15d:	cmp    DWORD PTR [rdx],edi
    d15f:	je     d178 <xl_reaped_callback+0x28>
    d161:	add    eax,0x1
    d164:	add    rdx,0x18
    d168:	cmp    eax,0x4
    d16b:	jne    d15d <xl_reaped_callback+0xd>
    d16d:	mov    eax,0xfffffff2
    d172:	ret    
    d173:	nop    DWORD PTR [rax+rax*1+0x0]
    d178:	lea    rcx,[rip+0x22fd61]        # 23cee0 <children>
    d17f:	cdqe   
    d181:	lea    rax,[rax+rax*2]
    d185:	lea    rax,[rcx+rax*8]
    d189:	mov    DWORD PTR [rax+0x4],0x1
    d190:	mov    DWORD PTR [rax+0x8],esi
    d193:	xor    eax,eax
    d195:	ret    
    d196:	lea    rcx,[rip+0x1ca53]        # 29bf0 <__PRETTY_FUNCTION__.10143>
    d19d:	lea    rsi,[rip+0x1c5a0]        # 29744 <_IO_stdin_used+0x4>
    d1a4:	lea    rdi,[rip+0x1c59e]        # 29749 <_IO_stdin_used+0x9>
    d1ab:	sub    rsp,0x8
    d1af:	mov    edx,0x12c
    d1b4:	call   b2f0 <__assert_fail@plt>
    d1b9:	nop    DWORD PTR [rax+0x0]

000000000000d1c0 <xl_fork>:
    d1c0:	push   rbp
    d1c1:	push   rbx
    d1c2:	mov    edi,edi
    d1c4:	lea    rax,[rdi+rdi*2]
    d1c8:	sub    rsp,0x18
    d1cc:	lea    rbp,[rip+0x22fd0d]        # 23cee0 <children>
    d1d3:	lea    rbx,[rbp+rax*8+0x0]
    d1d8:	mov    eax,DWORD PTR [rbx]
    d1da:	test   eax,eax
    d1dc:	jne    d21e <xl_fork+0x5e>
    d1de:	mov    DWORD PTR [rbx+0x4],0x0
    d1e5:	mov    QWORD PTR [rbx+0x10],rsi
    d1e9:	call   c470 <fork@plt>
    d1ee:	cmp    eax,0xffffffff
    d1f1:	mov    DWORD PTR [rbx],eax
    d1f3:	je     d23d <xl_fork+0x7d>
    d1f5:	test   eax,eax
    d1f7:	jne    d217 <xl_fork+0x57>
    d1f9:	mov    DWORD PTR [rbp+0x0],0x0
    d200:	mov    DWORD PTR [rbp+0x18],0x0
    d207:	mov    DWORD PTR [rbp+0x30],0x0
    d20e:	mov    DWORD PTR [rbp+0x48],0x0
    d215:	mov    eax,DWORD PTR [rbx]
    d217:	add    rsp,0x18
    d21b:	pop    rbx
    d21c:	pop    rbp
    d21d:	ret    
    d21e:	lea    rcx,[rip+0x1c9f3]        # 29c18 <__PRETTY_FUNCTION__.10113>
    d225:	lea    rsi,[rip+0x1c518]        # 29744 <_IO_stdin_used+0x4>
    d22c:	lea    rdi,[rip+0x1c51a]        # 2974d <_IO_stdin_used+0xd>
    d233:	mov    edx,0xf4
    d238:	call   b2f0 <__assert_fail@plt>
    d23d:	lea    rdi,[rip+0x1c512]        # 29756 <_IO_stdin_used+0x16>
    d244:	mov    DWORD PTR [rsp+0xc],eax
    d248:	call   bfd0 <perror@plt>
    d24d:	mov    eax,DWORD PTR [rsp+0xc]
    d251:	mov    edi,eax
    d253:	call   c1a0 <exit@plt>
    d258:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d260 <xl_waitpid>:
    d260:	push   r15
    d262:	push   r14
    d264:	push   r13
    d266:	push   r12
    d268:	push   rbp
    d269:	push   rbx
    d26a:	mov    ebx,edi
    d26c:	lea    rax,[rbx+rbx*2]
    d270:	sub    rsp,0x8
    d274:	lea    r12,[rip+0x22fc65]        # 23cee0 <children>
    d27b:	lea    rax,[r12+rax*8]
    d27f:	mov    ebp,DWORD PTR [rax]
    d281:	test   ebp,ebp
    d283:	je     d2f6 <xl_waitpid+0x96>
    d285:	mov    r14d,edx
    d288:	mov    edx,DWORD PTR [rax+0x4]
    d28b:	mov    r13,rsi
    d28e:	mov    r15,rax
    d291:	test   edx,edx
    d293:	jne    d2c8 <xl_waitpid+0x68>
    d295:	mov    edi,ebp
    d297:	mov    edx,r14d
    d29a:	mov    rsi,r13
    d29d:	call   bea0 <waitpid@plt>
    d2a2:	test   eax,eax
    d2a4:	mov    ebp,eax
    d2a6:	jns    d2e0 <xl_waitpid+0x80>
    d2a8:	call   ad80 <__errno_location@plt>
    d2ad:	cmp    DWORD PTR [rax],0x4
    d2b0:	je     d2d8 <xl_waitpid+0x78>
    d2b2:	add    rsp,0x8
    d2b6:	mov    eax,ebp
    d2b8:	pop    rbx
    d2b9:	pop    rbp
    d2ba:	pop    r12
    d2bc:	pop    r13
    d2be:	pop    r14
    d2c0:	pop    r15
    d2c2:	ret    
    d2c3:	nop    DWORD PTR [rax+rax*1+0x0]
    d2c8:	mov    edx,DWORD PTR [rax+0x8]
    d2cb:	mov    DWORD PTR [rsi],edx
    d2cd:	mov    DWORD PTR [rax],0x0
    d2d3:	jmp    d2b2 <xl_waitpid+0x52>
    d2d5:	nop    DWORD PTR [rax]
    d2d8:	mov    ebp,DWORD PTR [r15]
    d2db:	jmp    d295 <xl_waitpid+0x35>
    d2dd:	nop    DWORD PTR [rax]
    d2e0:	je     d2b2 <xl_waitpid+0x52>
    d2e2:	lea    rax,[rbx+rbx*2]
    d2e6:	lea    rax,[r12+rax*8]
    d2ea:	cmp    DWORD PTR [rax],ebp
    d2ec:	jne    d315 <xl_waitpid+0xb5>
    d2ee:	mov    DWORD PTR [rax],0x0
    d2f4:	jmp    d2b2 <xl_waitpid+0x52>
    d2f6:	lea    rcx,[rip+0x1c90b]        # 29c08 <__PRETTY_FUNCTION__.10124>
    d2fd:	lea    rsi,[rip+0x1c440]        # 29744 <_IO_stdin_used+0x4>
    d304:	lea    rdi,[rip+0x1c43e]        # 29749 <_IO_stdin_used+0x9>
    d30b:	mov    edx,0x10b
    d310:	call   b2f0 <__assert_fail@plt>
    d315:	lea    rcx,[rip+0x1c8ec]        # 29c08 <__PRETTY_FUNCTION__.10124>
    d31c:	lea    rsi,[rip+0x1c421]        # 29744 <_IO_stdin_used+0x4>
    d323:	lea    rdi,[rip+0x1c438]        # 29762 <_IO_stdin_used+0x22>
    d32a:	mov    edx,0x115
    d32f:	call   b2f0 <__assert_fail@plt>
    d334:	xchg   ax,ax
    d336:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d340 <xl_child_pid>:
    d340:	mov    edi,edi
    d342:	lea    rdx,[rip+0x22fb97]        # 23cee0 <children>
    d349:	lea    rax,[rdi+rdi*2]
    d34d:	lea    rax,[rdx+rax*8]
    d351:	mov    eax,DWORD PTR [rax]
    d353:	ret    
    d354:	xchg   ax,ax
    d356:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d360 <xl_report_child_exitstatus>:
    d360:	mov    esi,esi
    d362:	mov    r8d,ecx
    d365:	lea    rcx,[rip+0x22fb74]        # 23cee0 <children>
    d36c:	lea    rax,[rsi+rsi*2]
    d370:	mov    esi,edi
    d372:	lea    rax,[rcx+rax*8]
    d376:	mov    ecx,edx
    d378:	mov    rdx,QWORD PTR [rax+0x10]
    d37c:	lea    rax,[rip+0x22fadd]        # 23ce60 <ctx>
    d383:	mov    rdi,QWORD PTR [rax]
    d386:	jmp    acf0 <libxl_report_child_exitstatus@plt>
    d38b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d390 <xl_ctx_alloc>:
    d390:	lea    rax,[rip+0x22faf1]        # 23ce88 <logger>
    d397:	push   rbx
    d398:	xor    edx,edx
    d39a:	lea    rbx,[rip+0x22fabf]        # 23ce60 <ctx>
    d3a1:	xor    esi,esi
    d3a3:	mov    rcx,QWORD PTR [rax]
    d3a6:	mov    rdi,rbx
    d3a9:	call   b4b0 <libxl_ctx_alloc@plt>
    d3ae:	test   eax,eax
    d3b0:	jne    d3e8 <xl_ctx_alloc+0x58>
    d3b2:	lea    rdi,[rip+0x22faf7]        # 23ceb0 <global_vm_affinity_mask>
    d3b9:	call   bc00 <libxl_bitmap_init@plt>
    d3be:	lea    rdi,[rip+0x22faab]        # 23ce70 <global_hvm_affinity_mask>
    d3c5:	call   bc00 <libxl_bitmap_init@plt>
    d3ca:	lea    rdi,[rip+0x22faef]        # 23cec0 <global_pv_affinity_mask>
    d3d1:	call   bc00 <libxl_bitmap_init@plt>
    d3d6:	mov    rdi,QWORD PTR [rbx]
    d3d9:	lea    rsi,[rip+0x22ca20]        # 239e00 <childproc_hooks>
    d3e0:	xor    edx,edx
    d3e2:	pop    rbx
    d3e3:	jmp    b180 <libxl_childproc_setmode@plt>
    d3e8:	mov    rax,QWORD PTR [rip+0x22dc01]        # 23aff0 <stderr@GLIBC_2.2.5>
    d3ef:	lea    rdi,[rip+0x1c37b]        # 29771 <_IO_stdin_used+0x31>
    d3f6:	mov    edx,0x17
    d3fb:	mov    esi,0x1
    d400:	mov    rcx,QWORD PTR [rax]
    d403:	call   c1b0 <fwrite@plt>
    d408:	mov    edi,0x1
    d40d:	call   c1a0 <exit@plt>
    d412:	nop    DWORD PTR [rax+0x0]
    d416:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000d420 <postfork>:
    d420:	push   rbx
    d421:	lea    rbx,[rip+0x22fa38]        # 23ce60 <ctx>
    d428:	mov    rdi,QWORD PTR [rbx]
    d42b:	call   bfc0 <libxl_postfork_child_noexec@plt>
    d430:	mov    QWORD PTR [rbx],0x0
    d437:	pop    rbx
    d438:	jmp    d390 <xl_ctx_alloc>
    d43d:	nop    DWORD PTR [rax]

000000000000d440 <child_report>:
    d440:	push   rbx
    d441:	mov    ebx,edi
    d443:	xor    edx,edx
    d445:	mov    edi,ebx
    d447:	sub    rsp,0x10
    d44b:	lea    rsi,[rsp+0x4]
    d450:	mov    rax,QWORD PTR fs:0x28
    d459:	mov    QWORD PTR [rsp+0x8],rax
    d45e:	xor    eax,eax
    d460:	call   d260 <xl_waitpid>
    d465:	test   eax,eax
    d467:	js     d49e <child_report+0x5e>
    d469:	mov    ecx,DWORD PTR [rsp+0x4]
    d46d:	test   ecx,ecx
    d46f:	jne    d489 <child_report+0x49>
    d471:	mov    rdx,QWORD PTR [rsp+0x8]
    d476:	xor    rdx,QWORD PTR fs:0x28
    d47f:	mov    eax,ecx
    d481:	jne    d4e4 <child_report+0xa4>
    d483:	add    rsp,0x10
    d487:	pop    rbx
    d488:	ret    
    d489:	mov    edx,eax
    d48b:	mov    esi,ebx
    d48d:	mov    edi,0x8
    d492:	call   d360 <xl_report_child_exitstatus>
    d497:	mov    ecx,0xfffffffd
    d49c:	jmp    d471 <child_report+0x31>
    d49e:	call   ad80 <__errno_location@plt>
    d4a3:	mov    edi,DWORD PTR [rax]
    d4a5:	call   c3b0 <strerror@plt>
    d4aa:	mov    r8,rax
    d4ad:	lea    rax,[rip+0x22fa2c]        # 23cee0 <children>
    d4b4:	lea    rdx,[rbx+rbx*2]
    d4b8:	mov    esi,0x1
    d4bd:	lea    rdx,[rax+rdx*8]
    d4c1:	mov    rax,QWORD PTR [rip+0x22db28]        # 23aff0 <stderr@GLIBC_2.2.5>
    d4c8:	mov    rcx,QWORD PTR [rdx+0x10]
    d4cc:	lea    rdx,[rip+0x1c4dd]        # 299b0 <_IO_stdin_used+0x270>
    d4d3:	mov    rdi,QWORD PTR [rax]
    d4d6:	xor    eax,eax
    d4d8:	call   c1e0 <__fprintf_chk@plt>
    d4dd:	mov    ecx,0xfffffffd
    d4e2:	jmp    d471 <child_report+0x31>
    d4e4:	call   b130 <__stack_chk_fail@plt>
    d4e9:	nop    DWORD PTR [rax+0x0]

000000000000d4f0 <help>:
    d4f0:	push   r13
    d4f2:	push   r12
    d4f4:	push   rbp
    d4f5:	push   rbx
    d4f6:	sub    rsp,0x8
    d4fa:	test   rdi,rdi
    d4fd:	je     d520 <help+0x30>
    d4ff:	mov    rbx,rdi
    d502:	lea    rdi,[rip+0x1c280]        # 29789 <_IO_stdin_used+0x49>
    d509:	mov    ecx,0x5
    d50e:	mov    rsi,rbx
    d511:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    d513:	seta   al
    d516:	sbb    al,0x0
    d518:	test   al,al
    d51a:	jne    d5c0 <help+0xd0>
    d520:	lea    rdi,[rip+0x1c4b9]        # 299e0 <_IO_stdin_used+0x2a0>
    d527:	call   aeb0 <puts@plt>
    d52c:	lea    rdi,[rip+0x1c25b]        # 2978e <_IO_stdin_used+0x4e>
    d533:	call   aeb0 <puts@plt>
    d538:	lea    r12,[rip+0x22daed]        # 23b02c <cmdtable_len>
    d53f:	mov    r9d,DWORD PTR [r12]
    d543:	test   r9d,r9d
    d546:	jle    d62c <help+0x13c>
    d54c:	lea    rbx,[rip+0x22daed]        # 23b040 <cmd_table>
    d553:	xor    ebp,ebp
    d555:	lea    r13,[rip+0x1c251]        # 297ad <_IO_stdin_used+0x6d>
    d55c:	jmp    d57a <help+0x8a>
    d55e:	xchg   ax,ax
    d560:	mov    rdi,QWORD PTR [rbx+0x18]
    d564:	add    ebp,0x1
    d567:	add    rbx,0x30
    d56b:	call   aeb0 <puts@plt>
    d570:	cmp    DWORD PTR [r12],ebp
    d574:	jle    d62c <help+0x13c>
    d57a:	mov    rdx,QWORD PTR [rbx]
    d57d:	mov    rsi,r13
    d580:	mov    edi,0x1
    d585:	xor    eax,eax
    d587:	call   bd50 <__printf_chk@plt>
    d58c:	mov    rdi,QWORD PTR [rbx]
    d58f:	call   b0c0 <strlen@plt>
    d594:	cmp    rax,0x13
    d598:	jbe    d560 <help+0x70>
    d59a:	lea    rdx,[rip+0x21dc6]        # 2f367 <__func__.10421+0xfdf>
    d5a1:	lea    rsi,[rip+0x1c204]        # 297ac <_IO_stdin_used+0x6c>
    d5a8:	mov    edi,0x1
    d5ad:	xor    eax,eax
    d5af:	call   bd50 <__printf_chk@plt>
    d5b4:	jmp    d560 <help+0x70>
    d5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d5c0:	mov    rdi,rbx
    d5c3:	call   d660 <cmdtable_lookup>
    d5c8:	test   rax,rax
    d5cb:	mov    rbp,rax
    d5ce:	je     d640 <help+0x150>
    d5d0:	mov    edx,DWORD PTR [rbp+0x10]
    d5d3:	mov    esi,DWORD PTR [rbp+0x14]
    d5d6:	lea    rax,[rip+0x21d8a]        # 2f367 <__func__.10421+0xfdf>
    d5dd:	lea    rcx,[rip+0x1c218]        # 297fc <_IO_stdin_used+0xbc>
    d5e4:	mov    edi,0x1
    d5e9:	test   edx,edx
    d5eb:	lea    rdx,[rip+0x2439b]        # 3198d <__PRETTY_FUNCTION__.10016+0x8fd>
    d5f2:	cmove  rcx,rax
    d5f6:	test   esi,esi
    d5f8:	lea    rsi,[rip+0x1c409]        # 29a08 <_IO_stdin_used+0x2c8>
    d5ff:	cmove  rdx,rax
    d603:	sub    rsp,0x8
    d607:	push   QWORD PTR [rbp+0x18]
    d60a:	mov    r8,QWORD PTR [rbp+0x0]
    d60e:	mov    r9,QWORD PTR [rbp+0x20]
    d612:	xor    eax,eax
    d614:	call   bd50 <__printf_chk@plt>
    d619:	mov    rdx,QWORD PTR [rbp+0x28]
    d61d:	lea    rsi,[rip+0x1c191]        # 297b5 <_IO_stdin_used+0x75>
    d624:	pop    rdi
    d625:	pop    r8
    d627:	test   rdx,rdx
    d62a:	jne    d64a <help+0x15a>
    d62c:	add    rsp,0x8
    d630:	pop    rbx
    d631:	pop    rbp
    d632:	pop    r12
    d634:	pop    r13
    d636:	ret    
    d637:	nop    WORD PTR [rax+rax*1+0x0]
    d640:	lea    rsi,[rip+0x1c17c]        # 297c3 <_IO_stdin_used+0x83>
    d647:	mov    rdx,rbx
    d64a:	add    rsp,0x8
    d64e:	mov    edi,0x1
    d653:	xor    eax,eax
    d655:	pop    rbx
    d656:	pop    rbp
    d657:	pop    r12
    d659:	pop    r13
    d65b:	jmp    bd50 <__printf_chk@plt>

000000000000d660 <cmdtable_lookup>:
    d660:	push   r15
    d662:	push   r14
    d664:	push   r13
    d666:	push   r12
    d668:	push   rbp
    d669:	push   rbx
    d66a:	sub    rsp,0x18
    d66e:	test   rdi,rdi
    d671:	je     d720 <cmdtable_lookup+0xc0>
    d677:	mov    rbp,rdi
    d67a:	call   b0c0 <strlen@plt>
    d67f:	mov    rbx,rax
    d682:	lea    rax,[rip+0x22d9a3]        # 23b02c <cmdtable_len>
    d689:	mov    eax,DWORD PTR [rax]
    d68b:	test   eax,eax
    d68d:	jle    d720 <cmdtable_lookup+0xc0>
    d693:	sub    eax,0x1
    d696:	lea    r15,[rip+0x22d9a3]        # 23b040 <cmd_table>
    d69d:	xor    r13d,r13d
    d6a0:	lea    rax,[rax+rax*2]
    d6a4:	mov    QWORD PTR [rsp+0x8],0x0
    d6ad:	shl    rax,0x4
    d6b1:	lea    rax,[r15+rax*1+0x30]
    d6b6:	mov    QWORD PTR [rsp],rax
    d6ba:	nop    WORD PTR [rax+rax*1+0x0]
    d6c0:	mov    r14,QWORD PTR [r15]
    d6c3:	mov    rdx,rbx
    d6c6:	mov    rdi,rbp
    d6c9:	mov    r12,r15
    d6cc:	mov    rsi,r14
    d6cf:	call   ada0 <strncmp@plt>
    d6d4:	test   eax,eax
    d6d6:	jne    d6ee <cmdtable_lookup+0x8e>
    d6d8:	mov    rdi,r14
    d6db:	call   b0c0 <strlen@plt>
    d6e0:	cmp    rax,rbx
    d6e3:	je     d708 <cmdtable_lookup+0xa8>
    d6e5:	add    r13d,0x1
    d6e9:	mov    QWORD PTR [rsp+0x8],r15
    d6ee:	add    r15,0x30
    d6f2:	cmp    r15,QWORD PTR [rsp]
    d6f6:	jne    d6c0 <cmdtable_lookup+0x60>
    d6f8:	cmp    r13d,0x1
    d6fc:	mov    r12d,0x0
    d702:	cmove  r12,QWORD PTR [rsp+0x8]
    d708:	add    rsp,0x18
    d70c:	mov    rax,r12
    d70f:	pop    rbx
    d710:	pop    rbp
    d711:	pop    r12
    d713:	pop    r13
    d715:	pop    r14
    d717:	pop    r15
    d719:	ret    
    d71a:	nop    WORD PTR [rax+rax*1+0x0]
    d720:	xor    r12d,r12d
    d723:	jmp    d708 <cmdtable_lookup+0xa8>
    d725:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d72f:	nop

000000000000d730 <printf_info_sexp>:
    d730:	push   r15
    d732:	push   r14
    d734:	mov    ecx,edi
    d736:	push   r13
    d738:	push   r12
    d73a:	mov    r13d,edi
    d73d:	push   rbp
    d73e:	push   rbx
    d73f:	mov    rbx,rdx
    d742:	lea    rdx,[rip+0x202d7]        # 2da20 <__PRETTY_FUNCTION__.10113+0x3e08>
    d749:	mov    rbp,rsi
    d74c:	mov    rdi,rbx
    d74f:	sub    rsp,0x88
    d756:	lea    r12,[rsi+0x58]
    d75a:	mov    esi,0x1
    d75f:	mov    rax,QWORD PTR fs:0x28
    d768:	mov    QWORD PTR [rsp+0x78],rax
    d76d:	xor    eax,eax
    d76f:	call   c1e0 <__fprintf_chk@plt>
    d774:	lea    rdi,[rip+0x202ba]        # 2da35 <__PRETTY_FUNCTION__.10113+0x3e1d>
    d77b:	mov    rcx,rbx
    d77e:	mov    edx,0xf
    d783:	mov    esi,0x1
    d788:	call   c1b0 <fwrite@plt>
    d78d:	xor    ecx,ecx
    d78f:	cmp    DWORD PTR [rbp+0x0],0x1
    d793:	lea    rdx,[rip+0x202ab]        # 2da45 <__PRETTY_FUNCTION__.10113+0x3e2d>
    d79a:	mov    esi,0x1
    d79f:	mov    rdi,rbx
    d7a2:	sete   cl
    d7a5:	xor    eax,eax
    d7a7:	call   c1e0 <__fprintf_chk@plt>
    d7ac:	mov    edi,DWORD PTR [rbp+0x4]
    d7af:	call   abd0 <libxl_defbool_to_string@plt>
    d7b4:	lea    rdx,[rip+0x20295]        # 2da50 <__PRETTY_FUNCTION__.10113+0x3e38>
    d7bb:	mov    rcx,rax
    d7be:	mov    esi,0x1
    d7c3:	mov    rdi,rbx
    d7c6:	xor    eax,eax
    d7c8:	call   c1e0 <__fprintf_chk@plt>
    d7cd:	mov    edi,DWORD PTR [rbp+0x8]
    d7d0:	call   abd0 <libxl_defbool_to_string@plt>
    d7d5:	lea    rdx,[rip+0x2027f]        # 2da5b <__PRETTY_FUNCTION__.10113+0x3e43>
    d7dc:	mov    rcx,rax
    d7df:	mov    esi,0x1
    d7e4:	mov    rdi,rbx
    d7e7:	xor    eax,eax
    d7e9:	call   c1e0 <__fprintf_chk@plt>
    d7ee:	mov    ecx,DWORD PTR [rbp+0xc]
    d7f1:	lea    rdx,[rip+0x2026e]        # 2da66 <__PRETTY_FUNCTION__.10113+0x3e4e>
    d7f8:	mov    esi,0x1
    d7fd:	mov    rdi,rbx
    d800:	xor    eax,eax
    d802:	call   c1e0 <__fprintf_chk@plt>
    d807:	mov    rcx,QWORD PTR [rbp+0x18]
    d80b:	lea    rdx,[rip+0x20263]        # 2da75 <__PRETTY_FUNCTION__.10113+0x3e5d>
    d812:	mov    esi,0x1
    d817:	mov    rdi,rbx
    d81a:	xor    eax,eax
    d81c:	call   c1e0 <__fprintf_chk@plt>
    d821:	lea    rax,[rip+0x22f638]        # 23ce60 <ctx>
    d828:	mov    rsi,rsp
    d82b:	mov    edx,r13d
    d82e:	mov    rdi,QWORD PTR [rax]
    d831:	call   b5b0 <libxl_domain_info@plt>
    d836:	test   eax,eax
    d838:	jne    e670 <printf_info_sexp+0xf40>
    d83e:	movzx  ecx,BYTE PTR [rsp]
    d842:	sub    rsp,0x8
    d846:	lea    rdx,[rip+0x2073b]        # 2df88 <__PRETTY_FUNCTION__.10113+0x4370>
    d84d:	movzx  eax,BYTE PTR [rsp+0x17]
    d852:	mov    esi,0x1
    d857:	mov    rdi,rbx
    d85a:	push   rax
    d85b:	movzx  eax,BYTE PTR [rsp+0x1e]
    d860:	push   rax
    d861:	movzx  eax,BYTE PTR [rsp+0x25]
    d866:	push   rax
    d867:	movzx  eax,BYTE PTR [rsp+0x2c]
    d86c:	push   rax
    d86d:	movzx  eax,BYTE PTR [rsp+0x33]
    d872:	push   rax
    d873:	movzx  eax,BYTE PTR [rsp+0x3a]
    d878:	push   rax
    d879:	movzx  eax,BYTE PTR [rsp+0x41]
    d87e:	push   rax
    d87f:	movzx  eax,BYTE PTR [rsp+0x48]
    d884:	push   rax
    d885:	movzx  eax,BYTE PTR [rsp+0x4f]
    d88a:	push   rax
    d88b:	movzx  eax,BYTE PTR [rsp+0x56]
    d890:	push   rax
    d891:	movzx  eax,BYTE PTR [rsp+0x5d]
    d896:	push   rax
    d897:	movzx  eax,BYTE PTR [rsp+0x64]
    d89c:	push   rax
    d89d:	movzx  eax,BYTE PTR [rsp+0x6b]
    d8a2:	push   rax
    d8a3:	movzx  r9d,BYTE PTR [rsp+0x72]
    d8a9:	xor    eax,eax
    d8ab:	movzx  r8d,BYTE PTR [rsp+0x71]
    d8b1:	call   c1e0 <__fprintf_chk@plt>
    d8b6:	add    rsp,0x70
    d8ba:	mov    rcx,QWORD PTR [rbp+0x48]
    d8be:	test   rcx,rcx
    d8c1:	je     d8d9 <printf_info_sexp+0x1a9>
    d8c3:	lea    rdx,[rip+0x201ca]        # 2da94 <__PRETTY_FUNCTION__.10113+0x3e7c>
    d8ca:	mov    esi,0x1
    d8cf:	mov    rdi,rbx
    d8d2:	xor    eax,eax
    d8d4:	call   c1e0 <__fprintf_chk@plt>
    d8d9:	cmp    QWORD PTR [rbp+0x30],0x0
    d8de:	mov    rcx,rbx
    d8e1:	je     e768 <printf_info_sexp+0x1038>
    d8e7:	lea    rdi,[rip+0x201b5]        # 2daa3 <__PRETTY_FUNCTION__.10113+0x3e8b>
    d8ee:	mov    edx,0x18
    d8f3:	mov    esi,0x1
    d8f8:	call   c1b0 <fwrite@plt>
    d8fd:	cmp    QWORD PTR [rbp+0x38],0x0
    d902:	mov    rcx,rbx
    d905:	je     e748 <printf_info_sexp+0x1018>
    d90b:	lea    rdi,[rip+0x206e6]        # 2dff8 <__PRETTY_FUNCTION__.10113+0x43e0>
    d912:	mov    edx,0x1e
    d917:	mov    esi,0x1
    d91c:	call   c1b0 <fwrite@plt>
    d921:	lea    rdi,[rip+0x201be]        # 2dae6 <__PRETTY_FUNCTION__.10113+0x3ece>
    d928:	mov    rcx,rbx
    d92b:	mov    edx,0xe
    d930:	mov    esi,0x1
    d935:	call   c1b0 <fwrite@plt>
    d93a:	mov    ecx,DWORD PTR [rbp+0x58]
    d93d:	lea    rdx,[rip+0x201b1]        # 2daf5 <__PRETTY_FUNCTION__.10113+0x3edd>
    d944:	mov    esi,0x1
    d949:	mov    rdi,rbx
    d94c:	xor    eax,eax
    d94e:	call   c1e0 <__fprintf_chk@plt>
    d953:	mov    ecx,DWORD PTR [rbp+0x110]
    d959:	lea    rdx,[rip+0x201a6]        # 2db06 <__PRETTY_FUNCTION__.10113+0x3eee>
    d960:	mov    esi,0x1
    d965:	mov    rdi,rbx
    d968:	xor    eax,eax
    d96a:	call   c1e0 <__fprintf_chk@plt>
    d96f:	mov    ecx,DWORD PTR [rbp+0x114]
    d975:	lea    rdx,[rip+0x201a2]        # 2db1e <__PRETTY_FUNCTION__.10113+0x3f06>
    d97c:	mov    esi,0x1
    d981:	mov    rdi,rbx
    d984:	xor    eax,eax
    d986:	call   c1e0 <__fprintf_chk@plt>
    d98b:	mov    edi,DWORD PTR [rbp+0xb4]
    d991:	call   b6f0 <libxl_tsc_mode_to_string@plt>
    d996:	lea    rdx,[rip+0x2019c]        # 2db39 <__PRETTY_FUNCTION__.10113+0x3f21>
    d99d:	mov    rcx,rax
    d9a0:	mov    esi,0x1
    d9a5:	mov    rdi,rbx
    d9a8:	xor    eax,eax
    d9aa:	call   c1e0 <__fprintf_chk@plt>
    d9af:	mov    rcx,QWORD PTR [rbp+0xb8]
    d9b6:	lea    rdx,[rip+0x2018c]        # 2db49 <__PRETTY_FUNCTION__.10113+0x3f31>
    d9bd:	mov    esi,0x1
    d9c2:	mov    rdi,rbx
    d9c5:	xor    eax,eax
    d9c7:	call   c1e0 <__fprintf_chk@plt>
    d9cc:	mov    rcx,QWORD PTR [rbp+0xc0]
    d9d3:	lea    rdx,[rip+0x20181]        # 2db5b <__PRETTY_FUNCTION__.10113+0x3f43>
    d9da:	mov    esi,0x1
    d9df:	mov    rdi,rbx
    d9e2:	xor    eax,eax
    d9e4:	call   c1e0 <__fprintf_chk@plt>
    d9e9:	mov    edi,DWORD PTR [r12+0x94]
    d9f1:	call   abd0 <libxl_defbool_to_string@plt>
    d9f6:	lea    rdx,[rip+0x20173]        # 2db70 <__PRETTY_FUNCTION__.10113+0x3f58>
    d9fd:	mov    rcx,rax
    da00:	mov    esi,0x1
    da05:	xor    eax,eax
    da07:	mov    rdi,rbx
    da0a:	call   c1e0 <__fprintf_chk@plt>
    da0f:	cmp    DWORD PTR [rbp+0x0],0x2
    da13:	je     e690 <printf_info_sexp+0xf60>
    da19:	lea    rdi,[rip+0x20185]        # 2dba5 <__PRETTY_FUNCTION__.10113+0x3f8d>
    da20:	mov    rcx,rbx
    da23:	mov    edx,0x8
    da28:	mov    esi,0x1
    da2d:	call   c1b0 <fwrite@plt>
    da32:	mov    ecx,DWORD PTR [rbp+0x0]
    da35:	cmp    ecx,0x1
    da38:	je     e1d8 <printf_info_sexp+0xaa8>
    da3e:	cmp    ecx,0x2
    da41:	jne    e783 <printf_info_sexp+0x1053>
    da47:	lea    rdx,[rip+0x203a2]        # 2ddf0 <__PRETTY_FUNCTION__.10113+0x41d8>
    da4e:	xor    ecx,ecx
    da50:	mov    esi,0x1
    da55:	mov    rdi,rbx
    da58:	xor    eax,eax
    da5a:	call   c1e0 <__fprintf_chk@plt>
    da5f:	mov    rcx,QWORD PTR [rbp+0x1b0]
    da66:	lea    rdx,[rip+0x20391]        # 2ddfe <__PRETTY_FUNCTION__.10113+0x41e6>
    da6d:	mov    esi,0x1
    da72:	mov    rdi,rbx
    da75:	xor    eax,eax
    da77:	call   c1e0 <__fprintf_chk@plt>
    da7c:	mov    rcx,QWORD PTR [rbp+0x1b8]
    da83:	lea    rdx,[rip+0x20384]        # 2de0e <__PRETTY_FUNCTION__.10113+0x41f6>
    da8a:	mov    esi,0x1
    da8f:	mov    rdi,rbx
    da92:	xor    eax,eax
    da94:	call   c1e0 <__fprintf_chk@plt>
    da99:	mov    rcx,QWORD PTR [rbp+0x1c0]
    daa0:	lea    rdx,[rip+0x20378]        # 2de1f <__PRETTY_FUNCTION__.10113+0x4207>
    daa7:	mov    esi,0x1
    daac:	mov    rdi,rbx
    daaf:	xor    eax,eax
    dab1:	call   c1e0 <__fprintf_chk@plt>
    dab6:	mov    edi,DWORD PTR [r12+0x1e0]
    dabe:	call   abd0 <libxl_defbool_to_string@plt>
    dac3:	lea    rdx,[rip+0x20366]        # 2de30 <__PRETTY_FUNCTION__.10113+0x4218>
    daca:	mov    rcx,rax
    dacd:	mov    esi,0x1
    dad2:	mov    rdi,rbx
    dad5:	xor    eax,eax
    dad7:	call   c1e0 <__fprintf_chk@plt>
    dadc:	lea    rdi,[rip+0x20308]        # 2ddeb <__PRETTY_FUNCTION__.10113+0x41d3>
    dae3:	mov    rcx,rbx
    dae6:	mov    edx,0x4
    daeb:	mov    esi,0x1
    daf0:	call   c1b0 <fwrite@plt>
    daf5:	lea    rdi,[rip+0x202f0]        # 2ddec <__PRETTY_FUNCTION__.10113+0x41d4>
    dafc:	mov    rcx,rbx
    daff:	mov    edx,0x3
    db04:	mov    esi,0x1
    db09:	call   c1b0 <fwrite@plt>
    db0e:	mov    r8d,DWORD PTR [rbp+0x3b0]
    db15:	test   r8d,r8d
    db18:	jle    dcab <printf_info_sexp+0x57b>
    db1e:	lea    r15,[rip+0x20336]        # 2de5b <__PRETTY_FUNCTION__.10113+0x4243>
    db25:	xor    r12d,r12d
    db28:	xor    r14d,r14d
    db2b:	nop    DWORD PTR [rax+rax*1+0x0]
    db30:	mov    rcx,rbx
    db33:	mov    edx,0x9
    db38:	mov    esi,0x1
    db3d:	mov    rdi,r15
    db40:	add    r14d,0x1
    db44:	call   c1b0 <fwrite@plt>
    db49:	lea    rdi,[rip+0x20315]        # 2de65 <__PRETTY_FUNCTION__.10113+0x424d>
    db50:	mov    rcx,rbx
    db53:	mov    edx,0x7
    db58:	mov    esi,0x1
    db5d:	call   c1b0 <fwrite@plt>
    db62:	mov    rax,QWORD PTR [rbp+0x3b8]
    db69:	lea    rdx,[rip+0x202fd]        # 2de6d <__PRETTY_FUNCTION__.10113+0x4255>
    db70:	mov    esi,0x1
    db75:	mov    rdi,rbx
    db78:	mov    ecx,DWORD PTR [rax+r12*1]
    db7c:	xor    eax,eax
    db7e:	call   c1e0 <__fprintf_chk@plt>
    db83:	lea    rdx,[rip+0x202fa]        # 2de84 <__PRETTY_FUNCTION__.10113+0x426c>
    db8a:	mov    ecx,r13d
    db8d:	mov    esi,0x1
    db92:	mov    rdi,rbx
    db95:	xor    eax,eax
    db97:	call   c1e0 <__fprintf_chk@plt>
    db9c:	mov    rax,QWORD PTR [rbp+0x3b8]
    dba3:	lea    rdx,[rip+0x202f2]        # 2de9c <__PRETTY_FUNCTION__.10113+0x4284>
    dbaa:	mov    esi,0x1
    dbaf:	mov    rdi,rbx
    dbb2:	mov    rcx,QWORD PTR [rax+r12*1+0x10]
    dbb7:	xor    eax,eax
    dbb9:	call   c1e0 <__fprintf_chk@plt>
    dbbe:	mov    rax,QWORD PTR [rbp+0x3b8]
    dbc5:	lea    rdx,[rip+0x202e2]        # 2deae <__PRETTY_FUNCTION__.10113+0x4296>
    dbcc:	mov    esi,0x1
    dbd1:	mov    rdi,rbx
    dbd4:	mov    ecx,DWORD PTR [rax+r12*1+0x20]
    dbd9:	xor    eax,eax
    dbdb:	call   c1e0 <__fprintf_chk@plt>
    dbe0:	mov    rax,QWORD PTR [rbp+0x3b8]
    dbe7:	lea    rdx,[rip+0x202d2]        # 2dec0 <__PRETTY_FUNCTION__.10113+0x42a8>
    dbee:	mov    esi,0x1
    dbf3:	mov    rdi,rbx
    dbf6:	mov    rcx,QWORD PTR [rax+r12*1+0x18]
    dbfb:	xor    eax,eax
    dbfd:	call   c1e0 <__fprintf_chk@plt>
    dc02:	mov    rax,QWORD PTR [rbp+0x3b8]
    dc09:	lea    rdx,[rip+0x202c2]        # 2ded2 <__PRETTY_FUNCTION__.10113+0x42ba>
    dc10:	mov    esi,0x1
    dc15:	mov    rdi,rbx
    dc18:	mov    ecx,DWORD PTR [rax+r12*1+0x30]
    dc1d:	xor    eax,eax
    dc1f:	call   c1e0 <__fprintf_chk@plt>
    dc24:	mov    rax,QWORD PTR [rbp+0x3b8]
    dc2b:	lea    rdx,[rip+0x202b5]        # 2dee7 <__PRETTY_FUNCTION__.10113+0x42cf>
    dc32:	mov    esi,0x1
    dc37:	mov    rdi,rbx
    dc3a:	mov    ecx,DWORD PTR [rax+r12*1+0x34]
    dc3f:	xor    eax,eax
    dc41:	call   c1e0 <__fprintf_chk@plt>
    dc46:	mov    rax,QWORD PTR [rbp+0x3b8]
    dc4d:	lea    rdx,[rip+0x202a6]        # 2defa <__PRETTY_FUNCTION__.10113+0x42e2>
    dc54:	mov    esi,0x1
    dc59:	mov    rdi,rbx
    dc5c:	mov    ecx,DWORD PTR [rax+r12*1+0x38]
    dc61:	xor    eax,eax
    dc63:	add    r12,0x78
    dc67:	call   c1e0 <__fprintf_chk@plt>
    dc6c:	lea    rdi,[rip+0x20178]        # 2ddeb <__PRETTY_FUNCTION__.10113+0x41d3>
    dc73:	mov    rcx,rbx
    dc76:	mov    edx,0x4
    dc7b:	mov    esi,0x1
    dc80:	call   c1b0 <fwrite@plt>
    dc85:	lea    rdi,[rip+0x20160]        # 2ddec <__PRETTY_FUNCTION__.10113+0x41d4>
    dc8c:	mov    rcx,rbx
    dc8f:	mov    edx,0x3
    dc94:	mov    esi,0x1
    dc99:	call   c1b0 <fwrite@plt>
    dc9e:	cmp    DWORD PTR [rbp+0x3b0],r14d
    dca5:	jg     db30 <printf_info_sexp+0x400>
    dcab:	mov    edi,DWORD PTR [rbp+0x3c0]
    dcb1:	test   edi,edi
    dcb3:	jle    de57 <printf_info_sexp+0x727>
    dcb9:	lea    r15,[rip+0x2019b]        # 2de5b <__PRETTY_FUNCTION__.10113+0x4243>
    dcc0:	xor    r12d,r12d
    dcc3:	xor    r14d,r14d
    dcc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    dcd0:	mov    rcx,rbx
    dcd3:	mov    edx,0x9
    dcd8:	mov    esi,0x1
    dcdd:	mov    rdi,r15
    dce0:	call   c1b0 <fwrite@plt>
    dce5:	lea    rdi,[rip+0x20220]        # 2df0c <__PRETTY_FUNCTION__.10113+0x42f4>
    dcec:	mov    rcx,rbx
    dcef:	mov    edx,0x7
    dcf4:	mov    esi,0x1
    dcf9:	call   c1b0 <fwrite@plt>
    dcfe:	mov    rax,QWORD PTR [rbp+0x3c8]
    dd05:	add    rax,r12
    dd08:	mov    rcx,QWORD PTR [rax+0x38]
    dd0c:	test   rcx,rcx
    dd0f:	je     dd31 <printf_info_sexp+0x601>
    dd11:	lea    rdx,[rip+0x201fc]        # 2df14 <__PRETTY_FUNCTION__.10113+0x42fc>
    dd18:	mov    esi,0x1
    dd1d:	mov    rdi,rbx
    dd20:	xor    eax,eax
    dd22:	call   c1e0 <__fprintf_chk@plt>
    dd27:	mov    rax,QWORD PTR [rbp+0x3c8]
    dd2e:	add    rax,r12
    dd31:	mov    ecx,DWORD PTR [rax]
    dd33:	lea    rdx,[rip+0x20133]        # 2de6d <__PRETTY_FUNCTION__.10113+0x4255>
    dd3a:	mov    esi,0x1
    dd3f:	mov    rdi,rbx
    dd42:	xor    eax,eax
    dd44:	add    r14d,0x1
    dd48:	call   c1e0 <__fprintf_chk@plt>
    dd4d:	lea    rdx,[rip+0x20130]        # 2de84 <__PRETTY_FUNCTION__.10113+0x426c>
    dd54:	mov    ecx,r13d
    dd57:	mov    esi,0x1
    dd5c:	mov    rdi,rbx
    dd5f:	xor    eax,eax
    dd61:	call   c1e0 <__fprintf_chk@plt>
    dd66:	mov    rax,QWORD PTR [rbp+0x3c8]
    dd6d:	lea    rdx,[rip+0x201b1]        # 2df25 <__PRETTY_FUNCTION__.10113+0x430d>
    dd74:	mov    esi,0x1
    dd79:	mov    rdi,rbx
    dd7c:	mov    ecx,DWORD PTR [rax+r12*1+0x10]
    dd81:	xor    eax,eax
    dd83:	call   c1e0 <__fprintf_chk@plt>
    dd88:	mov    rax,QWORD PTR [rbp+0x3c8]
    dd8f:	lea    rdx,[rip+0x2019e]        # 2df34 <__PRETTY_FUNCTION__.10113+0x431c>
    dd96:	mov    esi,0x1
    dd9b:	mov    rdi,rbx
    dd9e:	mov    ecx,DWORD PTR [rax+r12*1+0x14]
    dda3:	xor    eax,eax
    dda5:	call   c1e0 <__fprintf_chk@plt>
    ddaa:	mov    rax,QWORD PTR [rbp+0x3c8]
    ddb1:	lea    rdx,[rip+0x20189]        # 2df41 <__PRETTY_FUNCTION__.10113+0x4329>
    ddb8:	mov    esi,0x1
    ddbd:	mov    rdi,rbx
    ddc0:	mov    rcx,QWORD PTR [rax+r12*1+0x18]
    ddc5:	xor    eax,eax
    ddc7:	call   c1e0 <__fprintf_chk@plt>
    ddcc:	mov    rax,QWORD PTR [rbp+0x3c8]
    ddd3:	sub    rsp,0x8
    ddd7:	mov    esi,0x1
    dddc:	mov    rdi,rbx
    dddf:	add    rax,r12
    dde2:	add    r12,0x1f0
    dde9:	movzx  edx,BYTE PTR [rax+0x25]
    dded:	movzx  ecx,BYTE PTR [rax+0x20]
    ddf1:	push   rdx
    ddf2:	movzx  edx,BYTE PTR [rax+0x24]
    ddf6:	push   rdx
    ddf7:	movzx  edx,BYTE PTR [rax+0x23]
    ddfb:	push   rdx
    ddfc:	movzx  r9d,BYTE PTR [rax+0x22]
    de01:	lea    rdx,[rip+0x20230]        # 2e038 <__PRETTY_FUNCTION__.10113+0x4420>
    de08:	movzx  r8d,BYTE PTR [rax+0x21]
    de0d:	xor    eax,eax
    de0f:	call   c1e0 <__fprintf_chk@plt>
    de14:	lea    rdi,[rip+0x1ffd0]        # 2ddeb <__PRETTY_FUNCTION__.10113+0x41d3>
    de1b:	add    rsp,0x20
    de1f:	mov    rcx,rbx
    de22:	mov    edx,0x4
    de27:	mov    esi,0x1
    de2c:	call   c1b0 <fwrite@plt>
    de31:	lea    rdi,[rip+0x1ffb4]        # 2ddec <__PRETTY_FUNCTION__.10113+0x41d4>
    de38:	mov    rcx,rbx
    de3b:	mov    edx,0x3
    de40:	mov    esi,0x1
    de45:	call   c1b0 <fwrite@plt>
    de4a:	cmp    DWORD PTR [rbp+0x3c0],r14d
    de51:	jg     dcd0 <printf_info_sexp+0x5a0>
    de57:	mov    esi,DWORD PTR [rbp+0x3d0]
    de5d:	test   esi,esi
    de5f:	jle    df4d <printf_info_sexp+0x81d>
    de65:	lea    r14,[rip+0x1ffef]        # 2de5b <__PRETTY_FUNCTION__.10113+0x4243>
    de6c:	xor    r12d,r12d
    de6f:	xor    r15d,r15d
    de72:	nop    WORD PTR [rax+rax*1+0x0]
    de78:	mov    rcx,rbx
    de7b:	mov    edx,0x9
    de80:	mov    esi,0x1
    de85:	mov    rdi,r14
    de88:	add    r15d,0x1
    de8c:	call   c1b0 <fwrite@plt>
    de91:	lea    rdi,[rip+0x200b8]        # 2df50 <__PRETTY_FUNCTION__.10113+0x4338>
    de98:	mov    rcx,rbx
    de9b:	mov    edx,0x7
    dea0:	mov    esi,0x1
    dea5:	call   c1b0 <fwrite@plt>
    deaa:	mov    rax,QWORD PTR [rbp+0x3d8]
    deb1:	mov    esi,0x1
    deb6:	mov    rdi,rbx
    deb9:	add    rax,r12
    debc:	mov    edx,DWORD PTR [rax+0x8]
    debf:	mov    ecx,DWORD PTR [rax+0x4]
    dec2:	push   rdx
    dec3:	movzx  edx,BYTE PTR [rax]
    dec6:	push   rdx
    dec7:	movzx  r9d,BYTE PTR [rax+0x1]
    decc:	lea    rdx,[rip+0x2018d]        # 2e060 <__PRETTY_FUNCTION__.10113+0x4448>
    ded3:	movzx  r8d,BYTE PTR [rax+0x2]
    ded8:	xor    eax,eax
    deda:	call   c1e0 <__fprintf_chk@plt>
    dedf:	mov    rax,QWORD PTR [rbp+0x3d8]
    dee6:	lea    rdx,[rip+0x2019b]        # 2e088 <__PRETTY_FUNCTION__.10113+0x4470>
    deed:	mov    esi,0x1
    def2:	mov    rdi,rbx
    def5:	add    rax,r12
    def8:	add    r12,0x18
    defc:	movzx  r8d,BYTE PTR [rax+0x11]
    df01:	movzx  ecx,BYTE PTR [rax+0x10]
    df05:	xor    eax,eax
    df07:	call   c1e0 <__fprintf_chk@plt>
    df0c:	lea    rdi,[rip+0x1fed8]        # 2ddeb <__PRETTY_FUNCTION__.10113+0x41d3>
    df13:	mov    rcx,rbx
    df16:	mov    edx,0x4
    df1b:	mov    esi,0x1
    df20:	call   c1b0 <fwrite@plt>
    df25:	lea    rdi,[rip+0x1fec0]        # 2ddec <__PRETTY_FUNCTION__.10113+0x41d4>
    df2c:	mov    rcx,rbx
    df2f:	mov    edx,0x3
    df34:	mov    esi,0x1
    df39:	call   c1b0 <fwrite@plt>
    df3e:	cmp    DWORD PTR [rbp+0x3d0],r15d
    df45:	pop    rdx
    df46:	pop    rcx
    df47:	jg     de78 <printf_info_sexp+0x748>
    df4d:	mov    eax,DWORD PTR [rbp+0x400]
    df53:	test   eax,eax
    df55:	jle    e193 <printf_info_sexp+0xa63>
    df5b:	lea    r15,[rip+0x1fef9]        # 2de5b <__PRETTY_FUNCTION__.10113+0x4243>
    df62:	xor    r12d,r12d
    df65:	xor    r14d,r14d
    df68:	nop    DWORD PTR [rax+rax*1+0x0]
    df70:	mov    rcx,rbx
    df73:	mov    edx,0x9
    df78:	mov    esi,0x1
    df7d:	mov    rdi,r15
    df80:	call   c1b0 <fwrite@plt>
    df85:	lea    rdi,[rip+0x1ffcc]        # 2df58 <__PRETTY_FUNCTION__.10113+0x4340>
    df8c:	mov    rcx,rbx
    df8f:	mov    edx,0x7
    df94:	mov    esi,0x1
    df99:	call   c1b0 <fwrite@plt>
    df9e:	mov    rax,QWORD PTR [rbp+0x408]
    dfa5:	lea    rdx,[rip+0x1fec1]        # 2de6d <__PRETTY_FUNCTION__.10113+0x4255>
    dfac:	mov    esi,0x1
    dfb1:	mov    rdi,rbx
    dfb4:	mov    ecx,DWORD PTR [rax+r12*1]
    dfb8:	xor    eax,eax
    dfba:	call   c1e0 <__fprintf_chk@plt>
    dfbf:	lea    rdx,[rip+0x1febe]        # 2de84 <__PRETTY_FUNCTION__.10113+0x426c>
    dfc6:	mov    ecx,r13d
    dfc9:	mov    esi,0x1
    dfce:	mov    rdi,rbx
    dfd1:	xor    eax,eax
    dfd3:	call   c1e0 <__fprintf_chk@plt>
    dfd8:	mov    rax,QWORD PTR [rbp+0x408]
    dfdf:	lea    rdx,[rip+0x1ff3f]        # 2df25 <__PRETTY_FUNCTION__.10113+0x430d>
    dfe6:	mov    esi,0x1
    dfeb:	mov    rdi,rbx
    dfee:	mov    ecx,DWORD PTR [rax+r12*1+0x10]
    dff3:	xor    eax,eax
    dff5:	call   c1e0 <__fprintf_chk@plt>
    dffa:	mov    rax,QWORD PTR [rbp+0x408]
    e001:	mov    edi,DWORD PTR [rax+r12*1+0x18]
    e006:	call   abd0 <libxl_defbool_to_string@plt>
    e00b:	lea    rdx,[rip+0x1fc82]        # 2dc94 <__PRETTY_FUNCTION__.10113+0x407c>
    e012:	mov    rcx,rax
    e015:	mov    esi,0x1
    e01a:	mov    rdi,rbx
    e01d:	xor    eax,eax
    e01f:	call   c1e0 <__fprintf_chk@plt>
    e024:	mov    rax,QWORD PTR [rbp+0x408]
    e02b:	lea    rdx,[rip+0x1fc6f]        # 2dca1 <__PRETTY_FUNCTION__.10113+0x4089>
    e032:	mov    esi,0x1
    e037:	mov    rdi,rbx
    e03a:	mov    rcx,QWORD PTR [rax+r12*1+0x20]
    e03f:	xor    eax,eax
    e041:	call   c1e0 <__fprintf_chk@plt>
    e046:	mov    rax,QWORD PTR [rbp+0x408]
    e04d:	lea    rdx,[rip+0x1fc60]        # 2dcb4 <__PRETTY_FUNCTION__.10113+0x409c>
    e054:	mov    esi,0x1
    e059:	mov    rdi,rbx
    e05c:	mov    ecx,DWORD PTR [rax+r12*1+0x30]
    e061:	xor    eax,eax
    e063:	call   c1e0 <__fprintf_chk@plt>
    e068:	mov    rax,QWORD PTR [rbp+0x408]
    e06f:	mov    edi,DWORD PTR [rax+r12*1+0x34]
    e074:	call   abd0 <libxl_defbool_to_string@plt>
    e079:	lea    rdx,[rip+0x1fc48]        # 2dcc8 <__PRETTY_FUNCTION__.10113+0x40b0>
    e080:	mov    rcx,rax
    e083:	mov    esi,0x1
    e088:	mov    rdi,rbx
    e08b:	xor    eax,eax
    e08d:	call   c1e0 <__fprintf_chk@plt>
    e092:	mov    rax,QWORD PTR [rbp+0x408]
    e099:	lea    rdx,[rip+0x1fc3b]        # 2dcdb <__PRETTY_FUNCTION__.10113+0x40c3>
    e0a0:	mov    esi,0x1
    e0a5:	mov    rdi,rbx
    e0a8:	mov    rcx,QWORD PTR [rax+r12*1+0x50]
    e0ad:	xor    eax,eax
    e0af:	call   c1e0 <__fprintf_chk@plt>
    e0b4:	mov    rax,QWORD PTR [rbp+0x408]
    e0bb:	mov    edi,DWORD PTR [rax+r12*1+0x38]
    e0c0:	call   abd0 <libxl_defbool_to_string@plt>
    e0c5:	lea    rdx,[rip+0x1fc1f]        # 2dceb <__PRETTY_FUNCTION__.10113+0x40d3>
    e0cc:	mov    rcx,rax
    e0cf:	mov    esi,0x1
    e0d4:	mov    rdi,rbx
    e0d7:	xor    eax,eax
    e0d9:	call   c1e0 <__fprintf_chk@plt>
    e0de:	mov    rax,QWORD PTR [rbp+0x408]
    e0e5:	mov    edi,DWORD PTR [rax+r12*1+0x3c]
    e0ea:	call   abd0 <libxl_defbool_to_string@plt>
    e0ef:	lea    rdx,[rip+0x1fc02]        # 2dcf8 <__PRETTY_FUNCTION__.10113+0x40e0>
    e0f6:	mov    rcx,rax
    e0f9:	mov    esi,0x1
    e0fe:	mov    rdi,rbx
    e101:	xor    eax,eax
    e103:	call   c1e0 <__fprintf_chk@plt>
    e108:	mov    rax,QWORD PTR [rbp+0x408]
    e10f:	lea    rdx,[rip+0x1fe4a]        # 2df60 <__PRETTY_FUNCTION__.10113+0x4348>
    e116:	mov    esi,0x1
    e11b:	mov    rdi,rbx
    e11e:	mov    rcx,QWORD PTR [rax+r12*1+0x40]
    e123:	xor    eax,eax
    e125:	call   c1e0 <__fprintf_chk@plt>
    e12a:	mov    rax,QWORD PTR [rbp+0x408]
    e131:	lea    rdx,[rip+0x1fe39]        # 2df71 <__PRETTY_FUNCTION__.10113+0x4359>
    e138:	mov    esi,0x1
    e13d:	mov    rdi,rbx
    e140:	mov    rcx,QWORD PTR [rax+r12*1+0x48]
    e145:	xor    eax,eax
    e147:	call   c1e0 <__fprintf_chk@plt>
    e14c:	lea    rdi,[rip+0x1fc98]        # 2ddeb <__PRETTY_FUNCTION__.10113+0x41d3>
    e153:	mov    rcx,rbx
    e156:	mov    edx,0x4
    e15b:	mov    esi,0x1
    e160:	call   c1b0 <fwrite@plt>
    e165:	lea    rdi,[rip+0x1fc80]        # 2ddec <__PRETTY_FUNCTION__.10113+0x41d4>
    e16c:	mov    rcx,rbx
    e16f:	mov    edx,0x3
    e174:	mov    esi,0x1
    e179:	call   c1b0 <fwrite@plt>
    e17e:	add    r14d,0x1
    e182:	add    r12,0x58
    e186:	cmp    DWORD PTR [rbp+0x400],r14d
    e18d:	jg     df70 <printf_info_sexp+0x840>
    e193:	lea    rdi,[rip+0x1fc53]        # 2dded <__PRETTY_FUNCTION__.10113+0x41d5>
    e19a:	mov    rcx,rbx
    e19d:	mov    edx,0x2
    e1a2:	mov    esi,0x1
    e1a7:	call   c1b0 <fwrite@plt>
    e1ac:	mov    rax,QWORD PTR [rsp+0x78]
    e1b1:	xor    rax,QWORD PTR fs:0x28
    e1ba:	jne    e7aa <printf_info_sexp+0x107a>
    e1c0:	add    rsp,0x88
    e1c7:	pop    rbx
    e1c8:	pop    rbp
    e1c9:	pop    r12
    e1cb:	pop    r13
    e1cd:	pop    r14
    e1cf:	pop    r15
    e1d1:	ret    
    e1d2:	nop    WORD PTR [rax+rax*1+0x0]
    e1d8:	lea    rdi,[rip+0x1f9cf]        # 2dbae <__PRETTY_FUNCTION__.10113+0x3f96>
    e1df:	mov    rcx,rbx
    e1e2:	mov    edx,0x7
    e1e7:	mov    esi,0x1
    e1ec:	call   c1b0 <fwrite@plt>
    e1f1:	mov    rcx,QWORD PTR [rbp+0x200]
    e1f8:	lea    rdx,[rip+0x1f9b7]        # 2dbb6 <__PRETTY_FUNCTION__.10113+0x3f9e>
    e1ff:	mov    esi,0x1
    e204:	mov    rdi,rbx
    e207:	xor    eax,eax
    e209:	call   c1e0 <__fprintf_chk@plt>
    e20e:	mov    rcx,QWORD PTR [rbp+0xc8]
    e215:	lea    rdx,[rip+0x1f9ac]        # 2dbc8 <__PRETTY_FUNCTION__.10113+0x3fb0>
    e21c:	mov    esi,0x1
    e221:	mov    rdi,rbx
    e224:	xor    eax,eax
    e226:	call   c1e0 <__fprintf_chk@plt>
    e22b:	mov    rcx,QWORD PTR [rbp+0xd0]
    e232:	lea    rdx,[rip+0x1f9a5]        # 2dbde <__PRETTY_FUNCTION__.10113+0x3fc6>
    e239:	mov    esi,0x1
    e23e:	mov    rdi,rbx
    e241:	xor    eax,eax
    e243:	call   c1e0 <__fprintf_chk@plt>
    e248:	mov    edi,DWORD PTR [r12+0x1b4]
    e250:	call   abd0 <libxl_defbool_to_string@plt>
    e255:	lea    rdx,[rip+0x1f999]        # 2dbf5 <__PRETTY_FUNCTION__.10113+0x3fdd>
    e25c:	mov    rcx,rax
    e25f:	mov    esi,0x1
    e264:	mov    rdi,rbx
    e267:	xor    eax,eax
    e269:	call   c1e0 <__fprintf_chk@plt>
    e26e:	mov    edi,DWORD PTR [r12+0x198]
    e276:	call   abd0 <libxl_defbool_to_string@plt>
    e27b:	lea    rdx,[rip+0x1f980]        # 2dc02 <__PRETTY_FUNCTION__.10113+0x3fea>
    e282:	mov    rcx,rax
    e285:	mov    esi,0x1
    e28a:	mov    rdi,rbx
    e28d:	xor    eax,eax
    e28f:	call   c1e0 <__fprintf_chk@plt>
    e294:	mov    edi,DWORD PTR [r12+0x1bc]
    e29c:	call   abd0 <libxl_defbool_to_string@plt>
    e2a1:	lea    rdx,[rip+0x1f968]        # 2dc10 <__PRETTY_FUNCTION__.10113+0x3ff8>
    e2a8:	mov    rcx,rax
    e2ab:	mov    esi,0x1
    e2b0:	mov    rdi,rbx
    e2b3:	xor    eax,eax
    e2b5:	call   c1e0 <__fprintf_chk@plt>
    e2ba:	mov    edi,DWORD PTR [r12+0x1cc]
    e2c2:	call   abd0 <libxl_defbool_to_string@plt>
    e2c7:	lea    rdx,[rip+0x1f950]        # 2dc1e <__PRETTY_FUNCTION__.10113+0x4006>
    e2ce:	mov    rcx,rax
    e2d1:	mov    esi,0x1
    e2d6:	mov    rdi,rbx
    e2d9:	xor    eax,eax
    e2db:	call   c1e0 <__fprintf_chk@plt>
    e2e0:	mov    edi,DWORD PTR [r12+0x1d0]
    e2e8:	call   abd0 <libxl_defbool_to_string@plt>
    e2ed:	lea    rdx,[rip+0x1f936]        # 2dc2a <__PRETTY_FUNCTION__.10113+0x4012>
    e2f4:	mov    rcx,rax
    e2f7:	mov    esi,0x1
    e2fc:	mov    rdi,rbx
    e2ff:	xor    eax,eax
    e301:	call   c1e0 <__fprintf_chk@plt>
    e306:	mov    edi,DWORD PTR [r12+0x200]
    e30e:	call   abd0 <libxl_defbool_to_string@plt>
    e313:	lea    rdx,[rip+0x1f922]        # 2dc3c <__PRETTY_FUNCTION__.10113+0x4024>
    e31a:	mov    rcx,rax
    e31d:	mov    esi,0x1
    e322:	mov    rdi,rbx
    e325:	xor    eax,eax
    e327:	call   c1e0 <__fprintf_chk@plt>
    e32c:	mov    edi,DWORD PTR [r12+0x204]
    e334:	call   abd0 <libxl_defbool_to_string@plt>
    e339:	lea    rdx,[rip+0x1f90a]        # 2dc4a <__PRETTY_FUNCTION__.10113+0x4032>
    e340:	mov    rcx,rax
    e343:	mov    esi,0x1
    e348:	mov    rdi,rbx
    e34b:	xor    eax,eax
    e34d:	call   c1e0 <__fprintf_chk@plt>
    e352:	mov    edi,DWORD PTR [rbp+0x1e8]
    e358:	call   bee0 <libxl_timer_mode_to_string@plt>
    e35d:	lea    rdx,[rip+0x1f8f9]        # 2dc5d <__PRETTY_FUNCTION__.10113+0x4045>
    e364:	mov    rcx,rax
    e367:	mov    esi,0x1
    e36c:	mov    rdi,rbx
    e36f:	xor    eax,eax
    e371:	call   c1e0 <__fprintf_chk@plt>
    e376:	mov    edi,DWORD PTR [r12+0x194]
    e37e:	call   abd0 <libxl_defbool_to_string@plt>
    e383:	lea    rdx,[rip+0x1f8e7]        # 2dc71 <__PRETTY_FUNCTION__.10113+0x4059>
    e38a:	mov    rcx,rax
    e38d:	mov    esi,0x1
    e392:	mov    rdi,rbx
    e395:	xor    eax,eax
    e397:	call   c1e0 <__fprintf_chk@plt>
    e39c:	cmp    DWORD PTR [rbp+0x298],0x2
    e3a3:	lea    rax,[rip+0x1f663]        # 2da0d <__PRETTY_FUNCTION__.10113+0x3df5>
    e3aa:	lea    rcx,[rip+0x1f661]        # 2da12 <__PRETTY_FUNCTION__.10113+0x3dfa>
    e3b1:	lea    rdx,[rip+0x1f8cc]        # 2dc84 <__PRETTY_FUNCTION__.10113+0x406c>
    e3b8:	mov    esi,0x1
    e3bd:	mov    rdi,rbx
    e3c0:	cmove  rcx,rax
    e3c4:	xor    eax,eax
    e3c6:	call   c1e0 <__fprintf_chk@plt>
    e3cb:	mov    edi,DWORD PTR [r12+0x248]
    e3d3:	call   abd0 <libxl_defbool_to_string@plt>
    e3d8:	lea    rdx,[rip+0x1f8b5]        # 2dc94 <__PRETTY_FUNCTION__.10113+0x407c>
    e3df:	mov    rcx,rax
    e3e2:	mov    esi,0x1
    e3e7:	mov    rdi,rbx
    e3ea:	xor    eax,eax
    e3ec:	call   c1e0 <__fprintf_chk@plt>
    e3f1:	mov    rcx,QWORD PTR [rbp+0x2a8]
    e3f8:	lea    rdx,[rip+0x1f8a2]        # 2dca1 <__PRETTY_FUNCTION__.10113+0x4089>
    e3ff:	mov    esi,0x1
    e404:	mov    rdi,rbx
    e407:	xor    eax,eax
    e409:	call   c1e0 <__fprintf_chk@plt>
    e40e:	mov    ecx,DWORD PTR [rbp+0x2b8]
    e414:	lea    rdx,[rip+0x1f899]        # 2dcb4 <__PRETTY_FUNCTION__.10113+0x409c>
    e41b:	mov    esi,0x1
    e420:	mov    rdi,rbx
    e423:	xor    eax,eax
    e425:	call   c1e0 <__fprintf_chk@plt>
    e42a:	mov    edi,DWORD PTR [r12+0x264]
    e432:	call   abd0 <libxl_defbool_to_string@plt>
    e437:	lea    rdx,[rip+0x1f88a]        # 2dcc8 <__PRETTY_FUNCTION__.10113+0x40b0>
    e43e:	mov    rcx,rax
    e441:	mov    esi,0x1
    e446:	mov    rdi,rbx
    e449:	xor    eax,eax
    e44b:	call   c1e0 <__fprintf_chk@plt>
    e450:	mov    rcx,QWORD PTR [rbp+0x2c0]
    e457:	lea    rdx,[rip+0x1f87d]        # 2dcdb <__PRETTY_FUNCTION__.10113+0x40c3>
    e45e:	mov    esi,0x1
    e463:	mov    rdi,rbx
    e466:	xor    eax,eax
    e468:	call   c1e0 <__fprintf_chk@plt>
    e46d:	mov    edi,DWORD PTR [r12+0x270]
    e475:	call   abd0 <libxl_defbool_to_string@plt>
    e47a:	lea    rdx,[rip+0x1f86a]        # 2dceb <__PRETTY_FUNCTION__.10113+0x40d3>
    e481:	mov    rcx,rax
    e484:	mov    esi,0x1
    e489:	mov    rdi,rbx
    e48c:	xor    eax,eax
    e48e:	call   c1e0 <__fprintf_chk@plt>
    e493:	mov    edi,DWORD PTR [r12+0x274]
    e49b:	call   abd0 <libxl_defbool_to_string@plt>
    e4a0:	lea    rdx,[rip+0x1f851]        # 2dcf8 <__PRETTY_FUNCTION__.10113+0x40e0>
    e4a7:	mov    rcx,rax
    e4aa:	mov    esi,0x1
    e4af:	mov    rdi,rbx
    e4b2:	xor    eax,eax
    e4b4:	call   c1e0 <__fprintf_chk@plt>
    e4b9:	mov    edi,DWORD PTR [r12+0x23c]
    e4c1:	call   abd0 <libxl_defbool_to_string@plt>
    e4c6:	lea    rdx,[rip+0x1f83b]        # 2dd08 <__PRETTY_FUNCTION__.10113+0x40f0>
    e4cd:	mov    rcx,rax
    e4d0:	mov    esi,0x1
    e4d5:	mov    rdi,rbx
    e4d8:	xor    eax,eax
    e4da:	call   c1e0 <__fprintf_chk@plt>
    e4df:	mov    edi,DWORD PTR [r12+0x288]
    e4e7:	call   abd0 <libxl_defbool_to_string@plt>
    e4ec:	lea    rdx,[rip+0x1f828]        # 2dd1b <__PRETTY_FUNCTION__.10113+0x4103>
    e4f3:	mov    rcx,rax
    e4f6:	mov    esi,0x1
    e4fb:	mov    rdi,rbx
    e4fe:	xor    eax,eax
    e500:	call   c1e0 <__fprintf_chk@plt>
    e505:	mov    ecx,DWORD PTR [rbp+0x2e4]
    e50b:	lea    rdx,[rip+0x1f818]        # 2dd2a <__PRETTY_FUNCTION__.10113+0x4112>
    e512:	mov    esi,0x1
    e517:	mov    rdi,rbx
    e51a:	xor    eax,eax
    e51c:	call   c1e0 <__fprintf_chk@plt>
    e521:	mov    ecx,DWORD PTR [rbp+0x2e8]
    e527:	lea    rdx,[rip+0x1f80f]        # 2dd3d <__PRETTY_FUNCTION__.10113+0x4125>
    e52e:	mov    esi,0x1
    e533:	mov    rdi,rbx
    e536:	xor    eax,eax
    e538:	call   c1e0 <__fprintf_chk@plt>
    e53d:	mov    rcx,QWORD PTR [rbp+0x2f0]
    e544:	lea    rdx,[rip+0x1f809]        # 2dd54 <__PRETTY_FUNCTION__.10113+0x413c>
    e54b:	mov    esi,0x1
    e550:	mov    rdi,rbx
    e553:	xor    eax,eax
    e555:	call   c1e0 <__fprintf_chk@plt>
    e55a:	mov    edi,DWORD PTR [r12+0x2a0]
    e562:	call   abd0 <libxl_defbool_to_string@plt>
    e567:	lea    rdx,[rip+0x1faaa]        # 2e018 <__PRETTY_FUNCTION__.10113+0x4400>
    e56e:	mov    rcx,rax
    e571:	mov    esi,0x1
    e576:	mov    rdi,rbx
    e579:	xor    eax,eax
    e57b:	call   c1e0 <__fprintf_chk@plt>
    e580:	mov    edi,DWORD PTR [r12+0x2b0]
    e588:	call   abd0 <libxl_defbool_to_string@plt>
    e58d:	lea    rdx,[rip+0x1f7d3]        # 2dd67 <__PRETTY_FUNCTION__.10113+0x414f>
    e594:	mov    rcx,rax
    e597:	mov    esi,0x1
    e59c:	mov    rdi,rbx
    e59f:	xor    eax,eax
    e5a1:	call   c1e0 <__fprintf_chk@plt>
    e5a6:	mov    rcx,QWORD PTR [rbp+0x120]
    e5ad:	lea    rax,[rip+0x1f464]        # 2da18 <__PRETTY_FUNCTION__.10113+0x3e00>
    e5b4:	lea    rdx,[rip+0x1f7c6]        # 2dd81 <__PRETTY_FUNCTION__.10113+0x4169>
    e5bb:	mov    esi,0x1
    e5c0:	mov    rdi,rbx
    e5c3:	test   rcx,rcx
    e5c6:	cmove  rcx,rax
    e5ca:	xor    eax,eax
    e5cc:	call   c1e0 <__fprintf_chk@plt>
    e5d1:	mov    edi,DWORD PTR [r12+0x2d0]
    e5d9:	call   abd0 <libxl_defbool_to_string@plt>
    e5de:	lea    rdx,[rip+0x1f7b2]        # 2dd97 <__PRETTY_FUNCTION__.10113+0x417f>
    e5e5:	mov    rcx,rax
    e5e8:	mov    esi,0x1
    e5ed:	mov    rdi,rbx
    e5f0:	xor    eax,eax
    e5f2:	call   c1e0 <__fprintf_chk@plt>
    e5f7:	mov    rcx,QWORD PTR [rbp+0x330]
    e5fe:	lea    rdx,[rip+0x1f7a8]        # 2ddad <__PRETTY_FUNCTION__.10113+0x4195>
    e605:	mov    esi,0x1
    e60a:	mov    rdi,rbx
    e60d:	xor    eax,eax
    e60f:	call   c1e0 <__fprintf_chk@plt>
    e614:	mov    rcx,QWORD PTR [rbp+0x338]
    e61b:	lea    rdx,[rip+0x1f79b]        # 2ddbd <__PRETTY_FUNCTION__.10113+0x41a5>
    e622:	mov    esi,0x1
    e627:	mov    rdi,rbx
    e62a:	xor    eax,eax
    e62c:	call   c1e0 <__fprintf_chk@plt>
    e631:	mov    edi,DWORD PTR [r12+0x2e8]
    e639:	call   abd0 <libxl_defbool_to_string@plt>
    e63e:	lea    rdx,[rip+0x1f786]        # 2ddcb <__PRETTY_FUNCTION__.10113+0x41b3>
    e645:	mov    rcx,rax
    e648:	mov    esi,0x1
    e64d:	mov    rdi,rbx
    e650:	xor    eax,eax
    e652:	call   c1e0 <__fprintf_chk@plt>
    e657:	mov    rcx,QWORD PTR [rbp+0x348]
    e65e:	lea    rdx,[rip+0x1f773]        # 2ddd8 <__PRETTY_FUNCTION__.10113+0x41c0>
    e665:	jmp    dacd <printf_info_sexp+0x39d>
    e66a:	nop    WORD PTR [rax+rax*1+0x0]
    e670:	lea    rdi,[rip+0x1f40a]        # 2da81 <__PRETTY_FUNCTION__.10113+0x3e69>
    e677:	mov    rcx,rbx
    e67a:	mov    edx,0x12
    e67f:	mov    esi,0x1
    e684:	call   c1b0 <fwrite@plt>
    e689:	jmp    d8ba <printf_info_sexp+0x18a>
    e68e:	xchg   ax,ax
    e690:	mov    rcx,QWORD PTR [rbp+0x1d8]
    e697:	test   rcx,rcx
    e69a:	je     da19 <printf_info_sexp+0x2e9>
    e6a0:	lea    rdx,[rip+0x1f4da]        # 2db81 <__PRETTY_FUNCTION__.10113+0x3f69>
    e6a7:	xor    eax,eax
    e6a9:	mov    esi,0x1
    e6ae:	mov    rdi,rbx
    e6b1:	call   c1e0 <__fprintf_chk@plt>
    e6b6:	cmp    QWORD PTR [rbp+0x1e0],0x0
    e6be:	je     da19 <printf_info_sexp+0x2e9>
    e6c4:	lea    rdi,[rip+0x1f4c8]        # 2db93 <__PRETTY_FUNCTION__.10113+0x3f7b>
    e6cb:	mov    rcx,rbx
    e6ce:	mov    edx,0x11
    e6d3:	mov    esi,0x1
    e6d8:	call   c1b0 <fwrite@plt>
    e6dd:	mov    rax,QWORD PTR [rbp+0x1e0]
    e6e4:	mov    rcx,QWORD PTR [rax]
    e6e7:	test   rcx,rcx
    e6ea:	je     e726 <printf_info_sexp+0xff6>
    e6ec:	lea    r14,[rip+0x20c47]        # 2f33a <__func__.10421+0xfb2>
    e6f3:	mov    r15d,0x8
    e6f9:	nop    DWORD PTR [rax+0x0]
    e700:	xor    eax,eax
    e702:	mov    rdx,r14
    e705:	mov    esi,0x1
    e70a:	mov    rdi,rbx
    e70d:	call   c1e0 <__fprintf_chk@plt>
    e712:	mov    rax,QWORD PTR [rbp+0x1e0]
    e719:	mov    rcx,QWORD PTR [rax+r15*1]
    e71d:	add    r15,0x8
    e721:	test   rcx,rcx
    e724:	jne    e700 <printf_info_sexp+0xfd0>
    e726:	lea    rdi,[rip+0x1f6c0]        # 2dded <__PRETTY_FUNCTION__.10113+0x41d5>
    e72d:	mov    rcx,rbx
    e730:	mov    edx,0x2
    e735:	mov    esi,0x1
    e73a:	call   c1b0 <fwrite@plt>
    e73f:	jmp    da19 <printf_info_sexp+0x2e9>
    e744:	nop    DWORD PTR [rax+0x0]
    e748:	lea    rdi,[rip+0x1f37f]        # 2dace <__PRETTY_FUNCTION__.10113+0x3eb6>
    e74f:	mov    edx,0x17
    e754:	mov    esi,0x1
    e759:	call   c1b0 <fwrite@plt>
    e75e:	jmp    d921 <printf_info_sexp+0x1f1>
    e763:	nop    DWORD PTR [rax+rax*1+0x0]
    e768:	lea    rdi,[rip+0x1f34d]        # 2dabc <__PRETTY_FUNCTION__.10113+0x3ea4>
    e76f:	mov    edx,0x11
    e774:	mov    esi,0x1
    e779:	call   c1b0 <fwrite@plt>
    e77e:	jmp    d8fd <printf_info_sexp+0x1cd>
    e783:	mov    rax,QWORD PTR [rip+0x22c866]        # 23aff0 <stderr@GLIBC_2.2.5>
    e78a:	lea    rdx,[rip+0x1f6b2]        # 2de43 <__PRETTY_FUNCTION__.10113+0x422b>
    e791:	mov    esi,0x1
    e796:	mov    rdi,QWORD PTR [rax]
    e799:	xor    eax,eax
    e79b:	call   c1e0 <__fprintf_chk@plt>
    e7a0:	mov    edi,0x1
    e7a5:	call   c1a0 <exit@plt>
    e7aa:	call   b130 <__stack_chk_fail@plt>
    e7af:	nop

000000000000e7b0 <dolog>:
    e7b0:	sub    rsp,0xe8
    e7b7:	test   al,al
    e7b9:	mov    rdx,rcx
    e7bc:	mov    QWORD PTR [rsp+0x50],r8
    e7c1:	mov    QWORD PTR [rsp+0x58],r9
    e7c6:	je     e802 <dolog+0x52>
    e7c8:	movaps XMMWORD PTR [rsp+0x60],xmm0
    e7cd:	movaps XMMWORD PTR [rsp+0x70],xmm1
    e7d2:	movaps XMMWORD PTR [rsp+0x80],xmm2
    e7da:	movaps XMMWORD PTR [rsp+0x90],xmm3
    e7e2:	movaps XMMWORD PTR [rsp+0xa0],xmm4
    e7ea:	movaps XMMWORD PTR [rsp+0xb0],xmm5
    e7f2:	movaps XMMWORD PTR [rsp+0xc0],xmm6
    e7fa:	movaps XMMWORD PTR [rsp+0xd0],xmm7
    e802:	mov    rax,QWORD PTR fs:0x28
    e80b:	mov    QWORD PTR [rsp+0x28],rax
    e810:	xor    eax,eax
    e812:	lea    rax,[rsp+0xf0]
    e81a:	lea    rcx,[rsp+0x10]
    e81f:	lea    rdi,[rsp+0x8]
    e824:	mov    esi,0x1
    e829:	mov    QWORD PTR [rsp+0x18],rax
    e82e:	lea    rax,[rsp+0x30]
    e833:	mov    QWORD PTR [rsp+0x8],0x0
    e83c:	mov    DWORD PTR [rsp+0x10],0x20
    e844:	mov    DWORD PTR [rsp+0x14],0x30
    e84c:	mov    QWORD PTR [rsp+0x20],rax
    e851:	call   bac0 <__vasprintf_chk@plt>
    e856:	test   eax,eax
    e858:	js     e878 <dolog+0xc8>
    e85a:	movsxd rcx,eax
    e85d:	lea    rax,[rip+0x22c7ac]        # 23b010 <logfile>
    e864:	mov    rdx,QWORD PTR [rsp+0x8]
    e869:	xor    r9d,r9d
    e86c:	xor    r8d,r8d
    e86f:	xor    edi,edi
    e871:	mov    esi,DWORD PTR [rax]
    e873:	call   bdd0 <libxl_write_exactly@plt>
    e878:	mov    rdi,QWORD PTR [rsp+0x8]
    e87d:	call   ac40 <free@plt>
    e882:	mov    rax,QWORD PTR [rsp+0x28]
    e887:	xor    rax,QWORD PTR fs:0x28
    e890:	jne    e89a <dolog+0xea>
    e892:	add    rsp,0xe8
    e899:	ret    
    e89a:	call   b130 <__stack_chk_fail@plt>
    e89f:	nop

000000000000e8a0 <xvasprintf>:
    e8a0:	sub    rsp,0x8
    e8a4:	mov    rcx,rdx
    e8a7:	mov    rdx,rsi
    e8aa:	mov    esi,0x1
    e8af:	call   bac0 <__vasprintf_chk@plt>
    e8b4:	cmp    eax,0xffffffff
    e8b7:	je     e8be <xvasprintf+0x1e>
    e8b9:	add    rsp,0x8
    e8bd:	ret    
    e8be:	lea    rdi,[rip+0x1f7ec]        # 2e0b1 <__PRETTY_FUNCTION__.10113+0x4499>
    e8c5:	call   bfd0 <perror@plt>
    e8ca:	mov    edi,0x1
    e8cf:	call   c1a0 <exit@plt>
    e8d4:	xchg   ax,ax
    e8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e8e0 <xasprintf>:
    e8e0:	sub    rsp,0xd8
    e8e7:	test   al,al
    e8e9:	mov    QWORD PTR [rsp+0x30],rdx
    e8ee:	mov    QWORD PTR [rsp+0x38],rcx
    e8f3:	mov    QWORD PTR [rsp+0x40],r8
    e8f8:	mov    QWORD PTR [rsp+0x48],r9
    e8fd:	je     e936 <xasprintf+0x56>
    e8ff:	movaps XMMWORD PTR [rsp+0x50],xmm0
    e904:	movaps XMMWORD PTR [rsp+0x60],xmm1
    e909:	movaps XMMWORD PTR [rsp+0x70],xmm2
    e90e:	movaps XMMWORD PTR [rsp+0x80],xmm3
    e916:	movaps XMMWORD PTR [rsp+0x90],xmm4
    e91e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    e926:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    e92e:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    e936:	mov    rax,QWORD PTR fs:0x28
    e93f:	mov    QWORD PTR [rsp+0x18],rax
    e944:	xor    eax,eax
    e946:	lea    rax,[rsp+0xe0]
    e94e:	mov    rdx,rsp
    e951:	mov    QWORD PTR [rsp+0x8],rax
    e956:	lea    rax,[rsp+0x20]
    e95b:	mov    DWORD PTR [rsp],0x10
    e962:	mov    DWORD PTR [rsp+0x4],0x30
    e96a:	mov    QWORD PTR [rsp+0x10],rax
    e96f:	call   e8a0 <xvasprintf>
    e974:	mov    rax,QWORD PTR [rsp+0x18]
    e979:	xor    rax,QWORD PTR fs:0x28
    e982:	jne    e98c <xasprintf+0xac>
    e984:	add    rsp,0xd8
    e98b:	ret    
    e98c:	call   b130 <__stack_chk_fail@plt>
    e991:	nop    DWORD PTR [rax+rax*1+0x0]
    e996:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000e9a0 <xmalloc>:
    e9a0:	push   rbx
    e9a1:	mov    rbx,rdi
    e9a4:	call   ba00 <malloc@plt>
    e9a9:	test   rax,rax
    e9ac:	je     e9b0 <xmalloc+0x10>
    e9ae:	pop    rbx
    e9af:	ret    
    e9b0:	mov    rax,QWORD PTR [rip+0x22c639]        # 23aff0 <stderr@GLIBC_2.2.5>
    e9b7:	lea    rdx,[rip+0x1f7ba]        # 2e178 <__PRETTY_FUNCTION__.10113+0x4560>
    e9be:	mov    rcx,rbx
    e9c1:	mov    esi,0x1
    e9c6:	mov    rdi,QWORD PTR [rax]
    e9c9:	xor    eax,eax
    e9cb:	call   c1e0 <__fprintf_chk@plt>
    e9d0:	mov    edi,0x3
    e9d5:	call   c1a0 <exit@plt>
    e9da:	nop    WORD PTR [rax+rax*1+0x0]

000000000000e9e0 <xcalloc>:
    e9e0:	push   rbp
    e9e1:	push   rbx
    e9e2:	mov    rbp,rsi
    e9e5:	mov    rbx,rdi
    e9e8:	sub    rsp,0x8
    e9ec:	call   b5f0 <calloc@plt>
    e9f1:	test   rax,rax
    e9f4:	je     e9fd <xcalloc+0x1d>
    e9f6:	add    rsp,0x8
    e9fa:	pop    rbx
    e9fb:	pop    rbp
    e9fc:	ret    
    e9fd:	mov    rax,QWORD PTR [rip+0x22c5ec]        # 23aff0 <stderr@GLIBC_2.2.5>
    ea04:	mov    rcx,rbx
    ea07:	lea    rdx,[rip+0x1f792]        # 2e1a0 <__PRETTY_FUNCTION__.10113+0x4588>
    ea0e:	imul   rcx,rbp
    ea12:	mov    esi,0x1
    ea17:	mov    rdi,QWORD PTR [rax]
    ea1a:	xor    eax,eax
    ea1c:	call   c1e0 <__fprintf_chk@plt>
    ea21:	mov    edi,0x3
    ea26:	call   c1a0 <exit@plt>
    ea2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ea30 <xrealloc>:
    ea30:	test   rsi,rsi
    ea33:	push   rbx
    ea34:	je     ea48 <xrealloc+0x18>
    ea36:	mov    rbx,rsi
    ea39:	call   bce0 <realloc@plt>
    ea3e:	test   rax,rax
    ea41:	je     ea51 <xrealloc+0x21>
    ea43:	pop    rbx
    ea44:	ret    
    ea45:	nop    DWORD PTR [rax]
    ea48:	call   ac40 <free@plt>
    ea4d:	xor    eax,eax
    ea4f:	pop    rbx
    ea50:	ret    
    ea51:	mov    rax,QWORD PTR [rip+0x22c598]        # 23aff0 <stderr@GLIBC_2.2.5>
    ea58:	lea    rdx,[rip+0x1f769]        # 2e1c8 <__PRETTY_FUNCTION__.10113+0x45b0>
    ea5f:	mov    rcx,rbx
    ea62:	mov    esi,0x1
    ea67:	mov    rdi,QWORD PTR [rax]
    ea6a:	xor    eax,eax
    ea6c:	call   c1e0 <__fprintf_chk@plt>
    ea71:	mov    edi,0x3
    ea76:	call   c1a0 <exit@plt>
    ea7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000ea80 <xstrdup>:
    ea80:	push   rbx
    ea81:	mov    rbx,rdi
    ea84:	call   c360 <strdup@plt>
    ea89:	test   rax,rax
    ea8c:	je     ea90 <xstrdup+0x10>
    ea8e:	pop    rbx
    ea8f:	ret    
    ea90:	mov    rdi,rbx
    ea93:	or     rcx,0xffffffffffffffff
    ea97:	lea    rdx,[rip+0x1f752]        # 2e1f0 <__PRETTY_FUNCTION__.10113+0x45d8>
    ea9e:	repnz scas al,BYTE PTR es:[rdi]
    eaa0:	mov    esi,0x1
    eaa5:	mov    rax,rcx
    eaa8:	not    rax
    eaab:	lea    rcx,[rax-0x1]
    eaaf:	mov    rax,QWORD PTR [rip+0x22c53a]        # 23aff0 <stderr@GLIBC_2.2.5>
    eab6:	mov    rdi,QWORD PTR [rax]
    eab9:	xor    eax,eax
    eabb:	call   c1e0 <__fprintf_chk@plt>
    eac0:	mov    edi,0x3
    eac5:	call   c1a0 <exit@plt>
    eaca:	nop    WORD PTR [rax+rax*1+0x0]

000000000000ead0 <flush_stream>:
    ead0:	push   rbp
    ead1:	push   rbx
    ead2:	mov    rbx,rdi
    ead5:	sub    rsp,0x8
    ead9:	mov    rax,QWORD PTR [rip+0x22c4c0]        # 23afa0 <stdout@GLIBC_2.2.5>
    eae0:	cmp    QWORD PTR [rax],rdi
    eae3:	je     eb20 <flush_stream+0x50>
    eae5:	mov    rax,QWORD PTR [rip+0x22c504]        # 23aff0 <stderr@GLIBC_2.2.5>
    eaec:	cmp    QWORD PTR [rax],rdi
    eaef:	jne    eb3b <flush_stream+0x6b>
    eaf1:	lea    rbp,[rip+0x1f5c9]        # 2e0c1 <__PRETTY_FUNCTION__.10113+0x44a9>
    eaf8:	mov    rdi,rbx
    eafb:	call   aec0 <ferror@plt>
    eb00:	test   eax,eax
    eb02:	jne    eb29 <flush_stream+0x59>
    eb04:	mov    rdi,rbx
    eb07:	call   ba30 <fflush@plt>
    eb0c:	test   eax,eax
    eb0e:	jne    eb29 <flush_stream+0x59>
    eb10:	add    rsp,0x8
    eb14:	pop    rbx
    eb15:	pop    rbp
    eb16:	ret    
    eb17:	nop    WORD PTR [rax+rax*1+0x0]
    eb20:	lea    rbp,[rip+0x1f5a1]        # 2e0c8 <__PRETTY_FUNCTION__.10113+0x44b0>
    eb27:	jmp    eaf8 <flush_stream+0x28>
    eb29:	mov    rdi,rbp
    eb2c:	call   bfd0 <perror@plt>
    eb31:	mov    edi,0x1
    eb36:	call   c1a0 <exit@plt>
    eb3b:	call   ad50 <abort@plt>

000000000000eb40 <find_domain>:
    eb40:	push   rbp
    eb41:	push   rbx
    eb42:	mov    rsi,rdi
    eb45:	mov    rbp,rdi
    eb48:	sub    rsp,0x18
    eb4c:	lea    rbx,[rip+0x22e30d]        # 23ce60 <ctx>
    eb53:	lea    rdx,[rsp+0x4]
    eb58:	mov    rax,QWORD PTR fs:0x28
    eb61:	mov    QWORD PTR [rsp+0x8],rax
    eb66:	xor    eax,eax
    eb68:	mov    rdi,QWORD PTR [rbx]
    eb6b:	call   b340 <libxl_domain_qualifier_to_domid@plt>
    eb70:	test   eax,eax
    eb72:	jne    eba5 <find_domain+0x65>
    eb74:	mov    esi,DWORD PTR [rsp+0x4]
    eb78:	mov    rdi,QWORD PTR [rbx]
    eb7b:	call   ae20 <libxl_domid_to_name@plt>
    eb80:	lea    rdx,[rip+0x22e2e1]        # 23ce68 <common_domname>
    eb87:	mov    rcx,QWORD PTR [rsp+0x8]
    eb8c:	xor    rcx,QWORD PTR fs:0x28
    eb95:	mov    QWORD PTR [rdx],rax
    eb98:	mov    eax,DWORD PTR [rsp+0x4]
    eb9c:	jne    ebd2 <find_domain+0x92>
    eb9e:	add    rsp,0x18
    eba2:	pop    rbx
    eba3:	pop    rbp
    eba4:	ret    
    eba5:	mov    r8d,eax
    eba8:	mov    rax,QWORD PTR [rip+0x22c441]        # 23aff0 <stderr@GLIBC_2.2.5>
    ebaf:	lea    rdx,[rip+0x1f66a]        # 2e220 <__PRETTY_FUNCTION__.10113+0x4608>
    ebb6:	mov    rcx,rbp
    ebb9:	mov    esi,0x1
    ebbe:	mov    rdi,QWORD PTR [rax]
    ebc1:	xor    eax,eax
    ebc3:	call   c1e0 <__fprintf_chk@plt>
    ebc8:	mov    edi,0x1
    ebcd:	call   c1a0 <exit@plt>
    ebd2:	call   b130 <__stack_chk_fail@plt>
    ebd7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000ebe0 <def_getopt>:
    ebe0:	push   r12
    ebe2:	push   rbp
    ebe3:	mov    rbp,r8
    ebe6:	push   rbx
    ebe7:	mov    r12d,r9d
    ebea:	mov    ebx,edi
    ebec:	sub    rsp,0x50
    ebf0:	mov    rax,QWORD PTR fs:0x28
    ebf9:	mov    QWORD PTR [rsp+0x48],rax
    ebfe:	xor    eax,eax
    ec00:	lea    rax,[rip+0x1ab82]        # 29789 <_IO_stdin_used+0x49>
    ec07:	test   rcx,rcx
    ec0a:	mov    DWORD PTR [rsp+0x8],0x0
    ec12:	mov    QWORD PTR [rsp+0x10],0x0
    ec1b:	mov    DWORD PTR [rsp+0x18],0x68
    ec23:	mov    QWORD PTR [rsp],rax
    ec27:	mov    rax,rsp
    ec2a:	mov    QWORD PTR [rsp+0x20],0x0
    ec33:	cmove  rcx,rax
    ec37:	mov    rax,QWORD PTR [rip+0x22c3aa]        # 23afe8 <opterr@GLIBC_2.2.5>
    ec3e:	xor    r8d,r8d
    ec41:	mov    DWORD PTR [rsp+0x28],0x0
    ec49:	mov    QWORD PTR [rsp+0x30],0x0
    ec52:	mov    DWORD PTR [rsp+0x38],0x0
    ec5a:	mov    DWORD PTR [rax],0x0
    ec60:	call   b160 <getopt_long@plt>
    ec65:	cmp    eax,0x3f
    ec68:	je     ec98 <def_getopt+0xb8>
    ec6a:	cmp    eax,0x68
    ec6d:	je     eca6 <def_getopt+0xc6>
    ec6f:	cmp    eax,0xffffffff
    ec72:	je     ecb8 <def_getopt+0xd8>
    ec74:	mov    rbx,QWORD PTR [rsp+0x48]
    ec79:	xor    rbx,QWORD PTR fs:0x28
    ec82:	jne    ed38 <def_getopt+0x158>
    ec88:	add    rsp,0x50
    ec8c:	pop    rbx
    ec8d:	pop    rbp
    ec8e:	pop    r12
    ec90:	ret    
    ec91:	nop    DWORD PTR [rax+0x0]
    ec98:	mov    rax,QWORD PTR [rip+0x22c331]        # 23afd0 <optopt@GLIBC_2.2.5>
    ec9f:	mov    ecx,DWORD PTR [rax]
    eca1:	cmp    ecx,0x68
    eca4:	jne    ed11 <def_getopt+0x131>
    eca6:	mov    rdi,rbp
    eca9:	call   d4f0 <help>
    ecae:	xor    edi,edi
    ecb0:	call   c1a0 <exit@plt>
    ecb5:	nop    DWORD PTR [rax]
    ecb8:	mov    rdx,QWORD PTR [rip+0x22c2e9]        # 23afa8 <optind@GLIBC_2.2.5>
    ecbf:	sub    ebx,DWORD PTR [rdx]
    ecc1:	cmp    ebx,r12d
    ecc4:	jge    ec74 <def_getopt+0x94>
    ecc6:	lea    rax,[rip+0x2069a]        # 2f367 <__func__.10421+0xfdf>
    eccd:	lea    r9,[rip+0x20668]        # 2f33c <__func__.10421+0xfb4>
    ecd4:	cmp    r12d,0x1
    ecd8:	lea    rdx,[rip+0x1f571]        # 2e250 <__PRETTY_FUNCTION__.10113+0x4638>
    ecdf:	mov    r8d,r12d
    ece2:	mov    rcx,rbp
    ece5:	cmovle r9,rax
    ece9:	mov    rax,QWORD PTR [rip+0x22c300]        # 23aff0 <stderr@GLIBC_2.2.5>
    ecf0:	mov    esi,0x1
    ecf5:	mov    rdi,QWORD PTR [rax]
    ecf8:	xor    eax,eax
    ecfa:	call   c1e0 <__fprintf_chk@plt>
    ecff:	mov    rdi,rbp
    ed02:	call   d4f0 <help>
    ed07:	mov    edi,0x2
    ed0c:	call   c1a0 <exit@plt>
    ed11:	mov    rax,QWORD PTR [rip+0x22c2d8]        # 23aff0 <stderr@GLIBC_2.2.5>
    ed18:	lea    rdx,[rip+0x1f3b0]        # 2e0cf <__PRETTY_FUNCTION__.10113+0x44b7>
    ed1f:	mov    esi,0x1
    ed24:	mov    rdi,QWORD PTR [rax]
    ed27:	xor    eax,eax
    ed29:	call   c1e0 <__fprintf_chk@plt>
    ed2e:	mov    edi,0x2
    ed33:	call   c1a0 <exit@plt>
    ed38:	call   b130 <__stack_chk_fail@plt>
    ed3d:	nop    DWORD PTR [rax]

000000000000ed40 <string_realloc_append>:
    ed40:	push   r14
    ed42:	push   r13
    ed44:	mov    r14,rdi
    ed47:	push   r12
    ed49:	push   rbp
    ed4a:	mov    r13,rsi
    ed4d:	push   rbx
    ed4e:	mov    rbp,QWORD PTR [rdi]
    ed51:	mov    rdi,rsi
    ed54:	call   b0c0 <strlen@plt>
    ed59:	test   rbp,rbp
    ed5c:	lea    rbx,[rax+0x1]
    ed60:	je     eda8 <string_realloc_append+0x68>
    ed62:	mov    rdi,rbp
    ed65:	call   b0c0 <strlen@plt>
    ed6a:	mov    r12,rax
    ed6d:	movabs rax,0x7fffffffffffffff
    ed77:	sub    rax,r12
    ed7a:	cmp    rax,rbx
    ed7d:	jb     edb0 <string_realloc_append+0x70>
    ed7f:	lea    rsi,[rbx+r12*1]
    ed83:	mov    rdi,rbp
    ed86:	call   ea30 <xrealloc>
    ed8b:	mov    rdx,rbx
    ed8e:	mov    QWORD PTR [r14],rax
    ed91:	lea    rdi,[rax+r12*1]
    ed95:	pop    rbx
    ed96:	mov    rsi,r13
    ed99:	pop    rbp
    ed9a:	pop    r12
    ed9c:	pop    r13
    ed9e:	pop    r14
    eda0:	jmp    b7e0 <memcpy@plt>
    eda5:	nop    DWORD PTR [rax]
    eda8:	mov    rsi,rbx
    edab:	xor    r12d,r12d
    edae:	jmp    ed83 <string_realloc_append+0x43>
    edb0:	mov    rax,QWORD PTR [rip+0x22c239]        # 23aff0 <stderr@GLIBC_2.2.5>
    edb7:	lea    rdi,[rip+0x1f4c2]        # 2e280 <__PRETTY_FUNCTION__.10113+0x4668>
    edbe:	mov    edx,0x25
    edc3:	mov    esi,0x1
    edc8:	mov    rcx,QWORD PTR [rax]
    edcb:	call   c1b0 <fwrite@plt>
    edd0:	mov    edi,0x3
    edd5:	call   c1a0 <exit@plt>
    edda:	nop    WORD PTR [rax+rax*1+0x0]

000000000000ede0 <print_bitmap>:
    ede0:	push   r15
    ede2:	push   r14
    ede4:	push   r13
    ede6:	push   r12
    ede8:	mov    r13,rdx
    edeb:	push   rbp
    edec:	push   rbx
    eded:	sub    rsp,0x18
    edf1:	test   esi,esi
    edf3:	jle    ef88 <print_bitmap+0x1a8>
    edf9:	xor    r15d,r15d
    edfc:	xor    r8d,r8d
    edff:	xor    r14d,r14d
    ee02:	mov    r12d,r15d
    ee05:	xor    ebp,ebp
    ee07:	xor    ebx,ebx
    ee09:	mov    QWORD PTR [rsp],rdx
    ee0d:	mov    r13d,esi
    ee10:	mov    r15,rdi
    ee13:	jmp    ee78 <print_bitmap+0x98>
    ee15:	nop    DWORD PTR [rax]
    ee18:	cmp    r8d,0x2
    ee1c:	je     ee99 <print_bitmap+0xb9>
    ee1e:	cmp    r8d,0x3
    ee22:	jne    ee70 <print_bitmap+0x90>
    ee24:	test   r12b,bpl
    ee27:	jne    ee70 <print_bitmap+0x90>
    ee29:	lea    rax,[rip+0x20537]        # 2f367 <__func__.10421+0xfdf>
    ee30:	lea    rcx,[rip+0x1f2b4]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
    ee37:	mov    rdi,QWORD PTR [rsp]
    ee3b:	cmp    r8d,0x1
    ee3f:	lea    rdx,[rip+0x1f2a7]        # 2e0ed <__PRETTY_FUNCTION__.10113+0x44d5>
    ee46:	mov    r8d,r14d
    ee49:	cmove  rcx,rax
    ee4d:	mov    esi,0x1
    ee52:	xor    eax,eax
    ee54:	call   c1e0 <__fprintf_chk@plt>
    ee59:	lea    ecx,[rbx-0x1]
    ee5c:	mov    r8d,0x2
    ee62:	cmp    ecx,r14d
    ee65:	jg     ef38 <print_bitmap+0x158>
    ee6b:	nop    DWORD PTR [rax+rax*1+0x0]
    ee70:	add    ebx,0x1
    ee73:	cmp    r13d,ebx
    ee76:	je     eeb0 <print_bitmap+0xd0>
    ee78:	add    ebp,ebp
    ee7a:	test   bl,0x7
    ee7d:	jne    ee8c <print_bitmap+0xac>
    ee7f:	movzx  r12d,BYTE PTR [r15]
    ee83:	mov    ebp,0x1
    ee88:	add    r15,0x1
    ee8c:	cmp    r8d,0x1
    ee90:	je     ee24 <print_bitmap+0x44>
    ee92:	jg     ee18 <print_bitmap+0x38>
    ee94:	test   r8d,r8d
    ee97:	jne    ee70 <print_bitmap+0x90>
    ee99:	test   r12b,bpl
    ee9c:	je     ee70 <print_bitmap+0x90>
    ee9e:	mov    r14d,ebx
    eea1:	add    ebx,0x1
    eea4:	add    r8d,0x1
    eea8:	cmp    r13d,ebx
    eeab:	jne    ee78 <print_bitmap+0x98>
    eead:	nop    DWORD PTR [rax]
    eeb0:	mov    r12d,r13d
    eeb3:	mov    r13,QWORD PTR [rsp]
    eeb7:	sub    r12d,0x1
    eebb:	cmp    r8d,0x1
    eebf:	je     ef60 <print_bitmap+0x180>
    eec5:	cmp    r8d,0x3
    eec9:	je     eee8 <print_bitmap+0x108>
    eecb:	test   r8d,r8d
    eece:	je     ef88 <print_bitmap+0x1a8>
    eed4:	add    rsp,0x18
    eed8:	pop    rbx
    eed9:	pop    rbp
    eeda:	pop    r12
    eedc:	pop    r13
    eede:	pop    r14
    eee0:	pop    r15
    eee2:	ret    
    eee3:	nop    DWORD PTR [rax+rax*1+0x0]
    eee8:	lea    rcx,[rip+0x1f1fc]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
    eeef:	lea    rdx,[rip+0x1f1f7]        # 2e0ed <__PRETTY_FUNCTION__.10113+0x44d5>
    eef6:	xor    eax,eax
    eef8:	mov    r8d,r14d
    eefb:	mov    esi,0x1
    ef00:	mov    rdi,r13
    ef03:	call   c1e0 <__fprintf_chk@plt>
    ef08:	cmp    r14d,r12d
    ef0b:	jge    eed4 <print_bitmap+0xf4>
    ef0d:	add    rsp,0x18
    ef11:	mov    ecx,r12d
    ef14:	mov    rdi,r13
    ef17:	pop    rbx
    ef18:	pop    rbp
    ef19:	pop    r12
    ef1b:	pop    r13
    ef1d:	pop    r14
    ef1f:	pop    r15
    ef21:	lea    rdx,[rip+0x1f1ca]        # 2e0f2 <__PRETTY_FUNCTION__.10113+0x44da>
    ef28:	mov    esi,0x1
    ef2d:	xor    eax,eax
    ef2f:	jmp    c1e0 <__fprintf_chk@plt>
    ef34:	nop    DWORD PTR [rax+0x0]
    ef38:	mov    rdi,QWORD PTR [rsp]
    ef3c:	lea    rdx,[rip+0x1f1af]        # 2e0f2 <__PRETTY_FUNCTION__.10113+0x44da>
    ef43:	mov    esi,0x1
    ef48:	xor    eax,eax
    ef4a:	mov    DWORD PTR [rsp+0xc],r8d
    ef4f:	call   c1e0 <__fprintf_chk@plt>
    ef54:	mov    r8d,DWORD PTR [rsp+0xc]
    ef59:	jmp    ee70 <print_bitmap+0x90>
    ef5e:	xchg   ax,ax
    ef60:	test   r14d,r14d
    ef63:	lea    rcx,[rip+0x203fd]        # 2f367 <__func__.10421+0xfdf>
    ef6a:	jne    eeef <print_bitmap+0x10f>
    ef6c:	mov    rcx,r13
    ef6f:	mov    edx,0x3
    ef74:	mov    esi,0x1
    ef79:	lea    rdi,[rip+0x1f17b]        # 2e0fb <__PRETTY_FUNCTION__.10113+0x44e3>
    ef80:	jmp    ef9c <print_bitmap+0x1bc>
    ef82:	nop    WORD PTR [rax+rax*1+0x0]
    ef88:	lea    rdi,[rip+0x1f167]        # 2e0f6 <__PRETTY_FUNCTION__.10113+0x44de>
    ef8f:	mov    rcx,r13
    ef92:	mov    edx,0x4
    ef97:	mov    esi,0x1
    ef9c:	add    rsp,0x18
    efa0:	pop    rbx
    efa1:	pop    rbp
    efa2:	pop    r12
    efa4:	pop    r13
    efa6:	pop    r14
    efa8:	pop    r15
    efaa:	jmp    c1b0 <fwrite@plt>
    efaf:	nop

000000000000efb0 <do_daemonize>:
    efb0:	push   r13
    efb2:	push   r12
    efb4:	mov    r13,rsi
    efb7:	push   rbp
    efb8:	push   rbx
    efb9:	lea    rsi,[rip+0x1f2e8]        # 2e2a8 <__PRETTY_FUNCTION__.10113+0x4690>
    efc0:	mov    rbx,rdi
    efc3:	mov    edi,0x1
    efc8:	sub    rsp,0x28
    efcc:	mov    rax,QWORD PTR fs:0x28
    efd5:	mov    QWORD PTR [rsp+0x18],rax
    efda:	xor    eax,eax
    efdc:	call   d1c0 <xl_fork>
    efe1:	test   eax,eax
    efe3:	je     f020 <do_daemonize+0x70>
    efe5:	mov    edi,0x1
    efea:	call   d440 <child_report>
    efef:	mov    ebx,eax
    eff1:	test   eax,eax
    eff3:	mov    eax,0x1
    eff8:	cmove  ebx,eax
    effb:	mov    rcx,QWORD PTR [rsp+0x18]
    f000:	xor    rcx,QWORD PTR fs:0x28
    f009:	mov    eax,ebx
    f00b:	jne    f1c2 <do_daemonize+0x212>
    f011:	add    rsp,0x28
    f015:	pop    rbx
    f016:	pop    rbp
    f017:	pop    r12
    f019:	pop    r13
    f01b:	ret    
    f01c:	nop    DWORD PTR [rax+0x0]
    f020:	call   d420 <postfork>
    f025:	lea    rax,[rip+0x22de34]        # 23ce60 <ctx>
    f02c:	lea    rdx,[rsp+0x8]
    f031:	mov    rsi,rbx
    f034:	mov    rdi,QWORD PTR [rax]
    f037:	call   c340 <libxl_create_logfile@plt>
    f03c:	test   eax,eax
    f03e:	mov    ebx,eax
    f040:	jne    f185 <do_daemonize+0x1d5>
    f046:	mov    rdi,QWORD PTR [rsp+0x8]
    f04b:	xor    eax,eax
    f04d:	mov    edx,0x1a4
    f052:	mov    esi,0x441
    f057:	call   bf20 <open@plt>
    f05c:	lea    r12,[rip+0x22bfad]        # 23b010 <logfile>
    f063:	cmp    eax,0xffffffff
    f066:	mov    DWORD PTR [r12],eax
    f06a:	je     f1c7 <do_daemonize+0x217>
    f070:	mov    rdi,QWORD PTR [rsp+0x8]
    f075:	call   ac40 <free@plt>
    f07a:	cmp    DWORD PTR [r12],0x2
    f07f:	jle    f216 <do_daemonize+0x266>
    f085:	lea    rdi,[rip+0x25928]        # 349b4 <savefileheader_magic+0x514>
    f08c:	xor    esi,esi
    f08e:	xor    eax,eax
    f090:	call   bf20 <open@plt>
    f095:	cmp    eax,0xffffffff
    f098:	mov    ebp,eax
    f09a:	je     f235 <do_daemonize+0x285>
    f0a0:	cmp    eax,0x2
    f0a3:	jle    f258 <do_daemonize+0x2a8>
    f0a9:	xor    esi,esi
    f0ab:	mov    edi,eax
    f0ad:	call   b1b0 <dup2@plt>
    f0b2:	mov    edi,DWORD PTR [r12]
    f0b6:	mov    esi,0x1
    f0bb:	call   b1b0 <dup2@plt>
    f0c0:	mov    edi,DWORD PTR [r12]
    f0c4:	mov    esi,0x2
    f0c9:	call   b1b0 <dup2@plt>
    f0ce:	mov    edi,ebp
    f0d0:	call   b4a0 <close@plt>
    f0d5:	xor    edi,edi
    f0d7:	mov    esi,0x1
    f0dc:	call   bb80 <daemon@plt>
    f0e1:	cmp    eax,0xffffffff
    f0e4:	je     f277 <do_daemonize+0x2c7>
    f0ea:	test   r13,r13
    f0ed:	je     effb <do_daemonize+0x4b>
    f0f3:	xor    eax,eax
    f0f5:	mov    edx,0x180
    f0fa:	mov    esi,0x42
    f0ff:	mov    rdi,r13
    f102:	call   bf20 <open@plt>
    f107:	cmp    eax,0xffffffff
    f10a:	mov    ebp,eax
    f10c:	mov    QWORD PTR [rsp+0x10],0x0
    f115:	je     f29d <do_daemonize+0x2ed>
    f11b:	call   afa0 <getpid@plt>
    f120:	lea    rdi,[rsp+0x10]
    f125:	lea    rdx,[rip+0x1f01b]        # 2e147 <__PRETTY_FUNCTION__.10113+0x452f>
    f12c:	movsxd rcx,eax
    f12f:	mov    esi,0x1
    f134:	xor    eax,eax
    f136:	call   b5e0 <__asprintf_chk@plt>
    f13b:	cmp    eax,0xffffffff
    f13e:	je     f2b3 <do_daemonize+0x303>
    f144:	mov    r12,QWORD PTR [rsp+0x10]
    f149:	mov    rdi,r12
    f14c:	call   b0c0 <strlen@plt>
    f151:	mov    rsi,r12
    f154:	mov    rdx,rax
    f157:	mov    edi,ebp
    f159:	call   af70 <write@plt>
    f15e:	test   rax,rax
    f161:	js     f2c9 <do_daemonize+0x319>
    f167:	mov    edi,ebp
    f169:	call   b4a0 <close@plt>
    f16e:	test   eax,eax
    f170:	js     f2df <do_daemonize+0x32f>
    f176:	mov    rdi,QWORD PTR [rsp+0x10]
    f17b:	call   ac40 <free@plt>
    f180:	jmp    effb <do_daemonize+0x4b>
    f185:	call   ad80 <__errno_location@plt>
    f18a:	mov    edi,DWORD PTR [rax]
    f18c:	call   c3b0 <strerror@plt>
    f191:	mov    r8,QWORD PTR [rsp+0x8]
    f196:	lea    rdi,[rip+0x1ef62]        # 2e0ff <__PRETTY_FUNCTION__.10113+0x44e7>
    f19d:	lea    rcx,[rip+0x1f12c]        # 2e2d0 <__PRETTY_FUNCTION__.10113+0x46b8>
    f1a4:	lea    rdx,[rip+0x1f1dd]        # 2e388 <__func__.10421>
    f1ab:	mov    r9,rax
    f1ae:	mov    esi,0x10d
    f1b3:	xor    eax,eax
    f1b5:	call   e7b0 <dolog>
    f1ba:	or     edi,0xffffffff
    f1bd:	call   c1a0 <exit@plt>
    f1c2:	call   b130 <__stack_chk_fail@plt>
    f1c7:	call   ad80 <__errno_location@plt>
    f1cc:	mov    edi,DWORD PTR [rax]
    f1ce:	call   c3b0 <strerror@plt>
    f1d3:	mov    r9,rax
    f1d6:	lea    rax,[rip+0x1f133]        # 2e310 <__PRETTY_FUNCTION__.10113+0x46f8>
    f1dd:	sub    rsp,0x8
    f1e1:	mov    r8d,0x111
    f1e7:	push   rax
    f1e8:	mov    rax,QWORD PTR [rip+0x22be01]        # 23aff0 <stderr@GLIBC_2.2.5>
    f1ef:	lea    rcx,[rip+0x1ef09]        # 2e0ff <__PRETTY_FUNCTION__.10113+0x44e7>
    f1f6:	lea    rdx,[rip+0x1f0f3]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
    f1fd:	mov    esi,0x1
    f202:	mov    rdi,QWORD PTR [rax]
    f205:	xor    eax,eax
    f207:	call   c1e0 <__fprintf_chk@plt>
    f20c:	mov    edi,0x1
    f211:	call   c1a0 <exit@plt>
    f216:	lea    rcx,[rip+0x1f15b]        # 2e378 <__PRETTY_FUNCTION__.10422>
    f21d:	lea    rsi,[rip+0x1eedb]        # 2e0ff <__PRETTY_FUNCTION__.10113+0x44e7>
    f224:	lea    rdi,[rip+0x1eedf]        # 2e10a <__PRETTY_FUNCTION__.10113+0x44f2>
    f22b:	mov    edx,0x113
    f230:	call   b2f0 <__assert_fail@plt>
    f235:	call   ad80 <__errno_location@plt>
    f23a:	mov    edi,DWORD PTR [rax]
    f23c:	call   c3b0 <strerror@plt>
    f241:	mov    r9,rax
    f244:	lea    rax,[rip+0x1f105]        # 2e350 <__PRETTY_FUNCTION__.10113+0x4738>
    f24b:	sub    rsp,0x8
    f24f:	mov    r8d,0x115
    f255:	push   rax
    f256:	jmp    f1e8 <do_daemonize+0x238>
    f258:	lea    rcx,[rip+0x1f119]        # 2e378 <__PRETTY_FUNCTION__.10422>
    f25f:	lea    rsi,[rip+0x1ee99]        # 2e0ff <__PRETTY_FUNCTION__.10113+0x44e7>
    f266:	lea    rdi,[rip+0x1eeaa]        # 2e117 <__PRETTY_FUNCTION__.10113+0x44ff>
    f26d:	mov    edx,0x116
    f272:	call   b2f0 <__assert_fail@plt>
    f277:	call   ad80 <__errno_location@plt>
    f27c:	mov    edi,DWORD PTR [rax]
    f27e:	call   c3b0 <strerror@plt>
    f283:	mov    r9,rax
    f286:	lea    rax,[rip+0x1ee96]        # 2e123 <__PRETTY_FUNCTION__.10113+0x450b>
    f28d:	sub    rsp,0x8
    f291:	mov    r8d,0x11e
    f297:	push   rax
    f298:	jmp    f1e8 <do_daemonize+0x238>
    f29d:	lea    rdi,[rip+0x1ee8c]        # 2e130 <__PRETTY_FUNCTION__.10113+0x4518>
    f2a4:	call   bfd0 <perror@plt>
    f2a9:	mov    edi,0x1
    f2ae:	call   c1a0 <exit@plt>
    f2b3:	lea    rdi,[rip+0x1ee92]        # 2e14c <__PRETTY_FUNCTION__.10113+0x4534>
    f2ba:	call   bfd0 <perror@plt>
    f2bf:	mov    edi,0x1
    f2c4:	call   c1a0 <exit@plt>
    f2c9:	lea    rdi,[rip+0x1ee8b]        # 2e15b <__PRETTY_FUNCTION__.10113+0x4543>
    f2d0:	call   bfd0 <perror@plt>
    f2d5:	mov    edi,0x1
    f2da:	call   c1a0 <exit@plt>
    f2df:	lea    rdi,[rip+0x1ee81]        # 2e167 <__PRETTY_FUNCTION__.10113+0x454f>
    f2e6:	call   bfd0 <perror@plt>
    f2eb:	mov    edi,0x1
    f2f0:	call   c1a0 <exit@plt>
    f2f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f2ff:	nop

000000000000f300 <psr_cmt_print_domain_info.isra.2>:
    f300:	push   r15
    f302:	push   r14
    f304:	mov    r15d,esi
    f307:	push   r13
    f309:	push   r12
    f30b:	mov    r13,rdi
    f30e:	push   rbp
    f30f:	push   rbx
    f310:	mov    rbx,rdx
    f313:	sub    rsp,0x78
    f317:	lea    r12,[rip+0x22db42]        # 23ce60 <ctx>
    f31e:	mov    esi,DWORD PTR [rdi]
    f320:	mov    rax,QWORD PTR fs:0x28
    f329:	mov    QWORD PTR [rsp+0x68],rax
    f32e:	xor    eax,eax
    f330:	mov    rdi,QWORD PTR [r12]
    f334:	call   ae40 <libxl_psr_cmt_domain_attached@plt>
    f339:	test   eax,eax
    f33b:	jne    f360 <psr_cmt_print_domain_info.isra.2+0x60>
    f33d:	mov    rax,QWORD PTR [rsp+0x68]
    f342:	xor    rax,QWORD PTR fs:0x28
    f34b:	jne    f572 <psr_cmt_print_domain_info.isra.2+0x272>
    f351:	add    rsp,0x78
    f355:	pop    rbx
    f356:	pop    rbp
    f357:	pop    r12
    f359:	pop    r13
    f35b:	pop    r14
    f35d:	pop    r15
    f35f:	ret    
    f360:	mov    esi,DWORD PTR [r13+0x0]
    f364:	mov    rdi,QWORD PTR [r12]
    f368:	call   ae20 <libxl_domid_to_name@plt>
    f36d:	mov    ecx,DWORD PTR [r13+0x0]
    f371:	lea    rsi,[rip+0x1f01d]        # 2e395 <__func__.10421+0xd>
    f378:	mov    rdx,rax
    f37b:	mov    rbp,rax
    f37e:	mov    edi,0x1
    f383:	xor    eax,eax
    f385:	call   bd50 <__printf_chk@plt>
    f38a:	mov    rdi,rbp
    f38d:	call   ac40 <free@plt>
    f392:	mov    eax,DWORD PTR [rbx]
    f394:	shl    eax,0x3
    f397:	test   eax,eax
    f399:	je     f416 <psr_cmt_print_domain_info.isra.2+0x116>
    f39b:	lea    eax,[r15-0x2]
    f39f:	xor    r14d,r14d
    f3a2:	mov    QWORD PTR [rsp+0x30],r13
    f3a7:	mov    DWORD PTR [rsp+0x2c],eax
    f3ab:	lea    rax,[rsp+0x58]
    f3b0:	mov    QWORD PTR [rsp+0x8],rax
    f3b5:	lea    rax,[rsp+0x60]
    f3ba:	mov    QWORD PTR [rsp+0x10],rax
    f3bf:	mov    esi,r14d
    f3c2:	mov    rdi,rbx
    f3c5:	call   be30 <libxl_bitmap_test@plt>
    f3ca:	test   eax,eax
    f3cc:	je     f408 <psr_cmt_print_domain_info.isra.2+0x108>
    f3ce:	cmp    DWORD PTR [rsp+0x2c],0x1
    f3d3:	mov    rax,QWORD PTR [rsp+0x30]
    f3d8:	mov    r13d,r14d
    f3db:	mov    rdi,QWORD PTR [r12]
    f3df:	mov    ebp,DWORD PTR [rax]
    f3e1:	jbe    f428 <psr_cmt_print_domain_info.isra.2+0x128>
    f3e3:	lea    r8,[rsp+0x40]
    f3e8:	xor    r9d,r9d
    f3eb:	mov    rcx,r13
    f3ee:	mov    edx,0x1
    f3f3:	mov    esi,ebp
    f3f5:	call   b0f0 <libxl_psr_cmt_get_sample@plt>
    f3fa:	test   eax,eax
    f3fc:	je     f4d0 <psr_cmt_print_domain_info.isra.2+0x1d0>
    f402:	nop    WORD PTR [rax+rax*1+0x0]
    f408:	mov    eax,DWORD PTR [rbx]
    f40a:	add    r14d,0x1
    f40e:	shl    eax,0x3
    f411:	cmp    r14d,eax
    f414:	jb     f3bf <psr_cmt_print_domain_info.isra.2+0xbf>
    f416:	mov    edi,0xa
    f41b:	call   aca0 <putchar@plt>
    f420:	jmp    f33d <psr_cmt_print_domain_info.isra.2+0x3d>
    f425:	nop    DWORD PTR [rax]
    f428:	lea    rax,[rsp+0x48]
    f42d:	mov    edx,0x5
    f432:	mov    QWORD PTR [rsp+0x38],rbx
    f437:	mov    ebx,edx
    f439:	mov    QWORD PTR [rsp+0x18],rax
    f43e:	lea    rax,[rsp+0x50]
    f443:	mov    QWORD PTR [rsp+0x20],rax
    f448:	mov    r9,QWORD PTR [rsp+0x8]
    f44d:	mov    r8,QWORD PTR [rsp+0x18]
    f452:	mov    rcx,r13
    f455:	mov    edx,r15d
    f458:	mov    esi,ebp
    f45a:	call   b0f0 <libxl_psr_cmt_get_sample@plt>
    f45f:	test   eax,eax
    f461:	js     f568 <psr_cmt_print_domain_info.isra.2+0x268>
    f467:	mov    edi,0x2710
    f46c:	call   c4f0 <usleep@plt>
    f471:	mov    r9,QWORD PTR [rsp+0x10]
    f476:	mov    r8,QWORD PTR [rsp+0x20]
    f47b:	mov    rcx,r13
    f47e:	mov    rdi,QWORD PTR [r12]
    f482:	mov    edx,r15d
    f485:	mov    esi,ebp
    f487:	call   b0f0 <libxl_psr_cmt_get_sample@plt>
    f48c:	test   eax,eax
    f48e:	js     f568 <psr_cmt_print_domain_info.isra.2+0x268>
    f494:	mov    rcx,QWORD PTR [rsp+0x60]
    f499:	mov    rax,QWORD PTR [rsp+0x58]
    f49e:	cmp    rcx,rax
    f4a1:	jbe    f568 <psr_cmt_print_domain_info.isra.2+0x268>
    f4a7:	sub    rcx,rax
    f4aa:	cmp    rcx,0x3b9ac9ff
    f4b1:	ja     f4c2 <psr_cmt_print_domain_info.isra.2+0x1c2>
    f4b3:	mov    rax,QWORD PTR [rsp+0x50]
    f4b8:	mov    rdx,QWORD PTR [rsp+0x48]
    f4bd:	cmp    rax,rdx
    f4c0:	jae    f52c <psr_cmt_print_domain_info.isra.2+0x22c>
    f4c2:	sub    ebx,0x1
    f4c5:	je     f4f0 <psr_cmt_print_domain_info.isra.2+0x1f0>
    f4c7:	mov    rdi,QWORD PTR [r12]
    f4cb:	jmp    f448 <psr_cmt_print_domain_info.isra.2+0x148>
    f4d0:	mov    rdx,QWORD PTR [rsp+0x40]
    f4d5:	lea    rsi,[rip+0x1eec3]        # 2e39f <__func__.10421+0x17>
    f4dc:	mov    edi,0x1
    f4e1:	shr    rdx,0xa
    f4e5:	call   bd50 <__printf_chk@plt>
    f4ea:	jmp    f408 <psr_cmt_print_domain_info.isra.2+0x108>
    f4ef:	nop
    f4f0:	mov    rax,QWORD PTR [rip+0x22baf9]        # 23aff0 <stderr@GLIBC_2.2.5>
    f4f7:	mov    rbx,QWORD PTR [rsp+0x38]
    f4fc:	lea    rdi,[rip+0x1eea5]        # 2e3a8 <__func__.10421+0x20>
    f503:	mov    edx,0x19
    f508:	mov    esi,0x1
    f50d:	add    r14d,0x1
    f511:	mov    rcx,QWORD PTR [rax]
    f514:	call   c1b0 <fwrite@plt>
    f519:	mov    eax,DWORD PTR [rbx]
    f51b:	shl    eax,0x3
    f51e:	cmp    r14d,eax
    f521:	jb     f3bf <psr_cmt_print_domain_info.isra.2+0xbf>
    f527:	jmp    f416 <psr_cmt_print_domain_info.isra.2+0x116>
    f52c:	sub    rax,rdx
    f52f:	xor    edx,edx
    f531:	lea    rsi,[rip+0x1ee8a]        # 2e3c2 <__func__.10421+0x3a>
    f538:	imul   rax,rax,0x3b9aca00
    f53f:	mov    edi,0x1
    f544:	mov    rbx,QWORD PTR [rsp+0x38]
    f549:	div    rcx
    f54c:	shr    rax,0xa
    f550:	mov    rdx,rax
    f553:	mov    QWORD PTR [rsp+0x40],rax
    f558:	xor    eax,eax
    f55a:	call   bd50 <__printf_chk@plt>
    f55f:	jmp    f408 <psr_cmt_print_domain_info.isra.2+0x108>
    f564:	nop    DWORD PTR [rax+0x0]
    f568:	mov    rbx,QWORD PTR [rsp+0x38]
    f56d:	jmp    f408 <psr_cmt_print_domain_info.isra.2+0x108>
    f572:	call   b130 <__stack_chk_fail@plt>
    f577:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f580 <psr_print_one_domain_val_type.isra.3>:
    f580:	push   rbp
    f581:	push   rbx
    f582:	mov    ebx,ecx
    f584:	mov    ecx,esi
    f586:	mov    esi,edi
    f588:	mov    rbp,rdx
    f58b:	sub    rsp,0x18
    f58f:	mov    edx,ebx
    f591:	mov    rax,QWORD PTR fs:0x28
    f59a:	mov    QWORD PTR [rsp+0x8],rax
    f59f:	xor    eax,eax
    f5a1:	lea    rax,[rip+0x22d8b8]        # 23ce60 <ctx>
    f5a8:	mov    r8,rsp
    f5ab:	mov    rdi,QWORD PTR [rax]
    f5ae:	call   b040 <libxl_psr_get_val@plt>
    f5b3:	test   eax,eax
    f5b5:	jne    f5f0 <psr_print_one_domain_val_type.isra.3+0x70>
    f5b7:	cmp    ebx,0x5
    f5ba:	mov    rdx,QWORD PTR [rsp]
    f5be:	jne    f5c6 <psr_print_one_domain_val_type.isra.3+0x46>
    f5c0:	cmp    BYTE PTR [rbp+0x0],0x0
    f5c4:	jne    f610 <psr_print_one_domain_val_type.isra.3+0x90>
    f5c6:	lea    rsi,[rip+0x1ee06]        # 2e3d3 <__func__.10421+0x4b>
    f5cd:	mov    edi,0x1
    f5d2:	xor    eax,eax
    f5d4:	call   bd50 <__printf_chk@plt>
    f5d9:	mov    rax,QWORD PTR [rsp+0x8]
    f5de:	xor    rax,QWORD PTR fs:0x28
    f5e7:	jne    f623 <psr_print_one_domain_val_type.isra.3+0xa3>
    f5e9:	add    rsp,0x18
    f5ed:	pop    rbx
    f5ee:	pop    rbp
    f5ef:	ret    
    f5f0:	lea    rdx,[rip+0x23311]        # 32908 <__PRETTY_FUNCTION__.10016+0x1878>
    f5f7:	lea    rsi,[rip+0x23233]        # 32831 <__PRETTY_FUNCTION__.10016+0x17a1>
    f5fe:	mov    edi,0x1
    f603:	xor    eax,eax
    f605:	call   bd50 <__printf_chk@plt>
    f60a:	jmp    f5d9 <psr_print_one_domain_val_type.isra.3+0x59>
    f60c:	nop    DWORD PTR [rax+0x0]
    f610:	lea    rsi,[rip+0x1edb6]        # 2e3cd <__func__.10421+0x45>
    f617:	mov    edi,0x1
    f61c:	call   bd50 <__printf_chk@plt>
    f621:	jmp    f5d9 <psr_print_one_domain_val_type.isra.3+0x59>
    f623:	call   b130 <__stack_chk_fail@plt>
    f628:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000f630 <psr_print_one_domain_val>:
    f630:	lea    rax,[rip+0x22d829]        # 23ce60 <ctx>
    f637:	push   r14
    f639:	mov    r14d,ecx
    f63c:	push   r13
    f63e:	push   r12
    f640:	mov    r12,rsi
    f643:	push   rbp
    f644:	mov    esi,edi
    f646:	push   rbx
    f647:	mov    ebx,edi
    f649:	mov    rdi,QWORD PTR [rax]
    f64c:	mov    r13d,edx
    f64f:	call   ae20 <libxl_domid_to_name@plt>
    f654:	lea    rsi,[rip+0x1ed7f]        # 2e3da <__func__.10421+0x52>
    f65b:	mov    rcx,rax
    f65e:	mov    rbp,rax
    f661:	mov    edx,ebx
    f663:	mov    edi,0x1
    f668:	xor    eax,eax
    f66a:	call   bd50 <__printf_chk@plt>
    f66f:	mov    rdi,rbp
    f672:	call   ac40 <free@plt>
    f677:	cmp    r13d,0x2
    f67b:	jne    f6a8 <psr_print_one_domain_val+0x78>
    f67d:	mov    esi,DWORD PTR [r12]
    f681:	lea    rdx,[r12+0x10]
    f686:	mov    ecx,0x5
    f68b:	mov    edi,ebx
    f68d:	call   f580 <psr_print_one_domain_val_type.isra.3>
    f692:	pop    rbx
    f693:	pop    rbp
    f694:	pop    r12
    f696:	pop    r13
    f698:	pop    r14
    f69a:	mov    edi,0xa
    f69f:	jmp    aca0 <putchar@plt>
    f6a4:	nop    DWORD PTR [rax+0x0]
    f6a8:	cmp    r14d,0x2
    f6ac:	je     f6e0 <psr_print_one_domain_val+0xb0>
    f6ae:	cmp    r14d,0x3
    f6b2:	jne    f700 <psr_print_one_domain_val+0xd0>
    f6b4:	cmp    BYTE PTR [r12+0x10],0x0
    f6ba:	mov    esi,DWORD PTR [r12]
    f6be:	lea    rbp,[r12+0x10]
    f6c3:	jne    f720 <psr_print_one_domain_val+0xf0>
    f6c5:	mov    ecx,0x1
    f6ca:	mov    rdx,rbp
    f6cd:	mov    edi,ebx
    f6cf:	call   f580 <psr_print_one_domain_val_type.isra.3>
    f6d4:	jmp    f692 <psr_print_one_domain_val+0x62>
    f6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f6e0:	mov    esi,DWORD PTR [r12]
    f6e4:	lea    rdx,[r12+0x10]
    f6e9:	mov    ecx,0x4
    f6ee:	mov    edi,ebx
    f6f0:	call   f580 <psr_print_one_domain_val_type.isra.3>
    f6f5:	jmp    f692 <psr_print_one_domain_val+0x62>
    f6f7:	nop    WORD PTR [rax+rax*1+0x0]
    f700:	lea    rsi,[rip+0x1ecdb]        # 2e3e2 <__func__.10421+0x5a>
    f707:	mov    edx,r14d
    f70a:	mov    edi,0x1
    f70f:	xor    eax,eax
    f711:	call   bd50 <__printf_chk@plt>
    f716:	jmp    f692 <psr_print_one_domain_val+0x62>
    f71b:	nop    DWORD PTR [rax+rax*1+0x0]
    f720:	mov    rdx,rbp
    f723:	mov    edi,ebx
    f725:	mov    ecx,0x2
    f72a:	call   f580 <psr_print_one_domain_val_type.isra.3>
    f72f:	mov    esi,DWORD PTR [r12]
    f733:	mov    ecx,0x3
    f738:	mov    rdx,rbp
    f73b:	mov    edi,ebx
    f73d:	call   f580 <psr_print_one_domain_val_type.isra.3>
    f742:	jmp    f692 <psr_print_one_domain_val+0x62>
    f747:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f750 <psr_val_show.part.5>:
    f750:	push   r15
    f752:	push   r14
    f754:	push   r13
    f756:	push   r12
    f758:	mov    r13d,edx
    f75b:	push   rbp
    f75c:	push   rbx
    f75d:	mov    r12d,esi
    f760:	sub    rsp,0x48
    f764:	mov    rax,QWORD PTR fs:0x28
    f76d:	mov    QWORD PTR [rsp+0x38],rax
    f772:	xor    eax,eax
    f774:	lea    rax,[rip+0x22d6e5]        # 23ce60 <ctx>
    f77b:	mov    DWORD PTR [rsp+0x10],edi
    f77f:	lea    rcx,[rsp+0x28]
    f784:	lea    r8,[rsp+0x30]
    f789:	mov    rdi,QWORD PTR [rax]
    f78c:	call   acc0 <libxl_psr_get_hw_info@plt>
    f791:	test   eax,eax
    f793:	mov    DWORD PTR [rsp+0x14],eax
    f797:	jne    f9d8 <psr_val_show.part.5+0x288>
    f79d:	mov    esi,DWORD PTR [rsp+0x28]
    f7a1:	lea    rax,[rsp+0x2c]
    f7a6:	xor    ebp,ebp
    f7a8:	mov    QWORD PTR [rsp+0x8],rax
    f7ad:	test   esi,esi
    f7af:	jne    f82e <psr_val_show.part.5+0xde>
    f7b1:	jmp    f950 <psr_val_show.part.5+0x200>
    f7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f7c0:	lea    rdx,[rip+0x1ecc4]        # 2e48b <__func__.10421+0x103>
    f7c7:	lea    rsi,[rip+0x1ec49]        # 2e417 <__func__.10421+0x8f>
    f7ce:	xor    ecx,ecx
    f7d0:	mov    edi,0x1
    f7d5:	xor    eax,eax
    f7d7:	call   bd50 <__printf_chk@plt>
    f7dc:	lea    r8,[rip+0x1ecb0]        # 2e493 <__func__.10421+0x10b>
    f7e3:	lea    rcx,[rip+0x1ec7e]        # 2e468 <__func__.10421+0xe0>
    f7ea:	lea    rdx,[rip+0x1ec23]        # 2e414 <__func__.10421+0x8c>
    f7f1:	lea    rsi,[rip+0x1ec86]        # 2e47e <__func__.10421+0xf6>
    f7f8:	mov    edi,0x1
    f7fd:	xor    eax,eax
    f7ff:	call   bd50 <__printf_chk@plt>
    f804:	mov    edi,DWORD PTR [rsp+0x10]
    f808:	cmp    edi,0xffffffff
    f80b:	je     f8dc <psr_val_show.part.5+0x18c>
    f811:	mov    rsi,rbx
    f814:	mov    ecx,r13d
    f817:	mov    edx,r12d
    f81a:	call   f630 <psr_print_one_domain_val>
    f81f:	mov    esi,DWORD PTR [rsp+0x28]
    f823:	add    ebp,0x1
    f826:	cmp    ebp,esi
    f828:	jae    f950 <psr_val_show.part.5+0x200>
    f82e:	mov    eax,ebp
    f830:	lea    rsi,[rip+0x1ebe0]        # 2e417 <__func__.10421+0x8f>
    f837:	mov    edi,0x1
    f83c:	lea    rdx,[rax+rax*4]
    f840:	mov    rax,QWORD PTR [rsp+0x30]
    f845:	lea    rbx,[rax+rdx*4]
    f849:	lea    rdx,[rip+0x1ebbd]        # 2e40d <__func__.10421+0x85>
    f850:	xor    eax,eax
    f852:	mov    ecx,DWORD PTR [rbx]
    f854:	call   bd50 <__printf_chk@plt>
    f859:	cmp    r12d,0x2
    f85d:	je     f7c0 <psr_val_show.part.5+0x70>
    f863:	cmp    r13d,0x3
    f867:	je     f998 <psr_val_show.part.5+0x248>
    f86d:	mov    ecx,DWORD PTR [rbx+0xc]
    f870:	mov    eax,0x1
    f875:	lea    rdx,[rip+0x1ebbc]        # 2e438 <__func__.10421+0xb0>
    f87c:	lea    rsi,[rip+0x1ebc1]        # 2e444 <__func__.10421+0xbc>
    f883:	mov    edi,0x1
    f888:	shl    rax,cl
    f88b:	lea    rcx,[rax-0x1]
    f88f:	xor    eax,eax
    f891:	call   bd50 <__printf_chk@plt>
    f896:	cmp    BYTE PTR [rbx+0x10],0x0
    f89a:	je     f988 <psr_val_show.part.5+0x238>
    f8a0:	lea    r9,[rip+0x1ebab]        # 2e452 <__func__.10421+0xca>
    f8a7:	lea    r8,[rip+0x1ebaf]        # 2e45d <__func__.10421+0xd5>
    f8ae:	lea    rcx,[rip+0x1ebb3]        # 2e468 <__func__.10421+0xe0>
    f8b5:	lea    rdx,[rip+0x1eb58]        # 2e414 <__func__.10421+0x8c>
    f8bc:	lea    rsi,[rip+0x1ebaa]        # 2e46d <__func__.10421+0xe5>
    f8c3:	mov    edi,0x1
    f8c8:	xor    eax,eax
    f8ca:	call   bd50 <__printf_chk@plt>
    f8cf:	mov    edi,DWORD PTR [rsp+0x10]
    f8d3:	cmp    edi,0xffffffff
    f8d6:	jne    f811 <psr_val_show.part.5+0xc1>
    f8dc:	lea    rax,[rip+0x22d57d]        # 23ce60 <ctx>
    f8e3:	mov    rsi,QWORD PTR [rsp+0x8]
    f8e8:	mov    rdi,QWORD PTR [rax]
    f8eb:	call   b830 <libxl_list_domain@plt>
    f8f0:	test   rax,rax
    f8f3:	mov    QWORD PTR [rsp+0x18],rax
    f8f8:	je     fa00 <psr_val_show.part.5+0x2b0>
    f8fe:	mov    esi,DWORD PTR [rsp+0x2c]
    f902:	xor    r15d,r15d
    f905:	lea    r14,[rax+0x10]
    f909:	test   esi,esi
    f90b:	jle    f932 <psr_val_show.part.5+0x1e2>
    f90d:	nop    DWORD PTR [rax]
    f910:	mov    edi,DWORD PTR [r14]
    f913:	mov    rsi,rbx
    f916:	mov    ecx,r13d
    f919:	mov    edx,r12d
    f91c:	add    r15d,0x1
    f920:	add    r14,0x70
    f924:	call   f630 <psr_print_one_domain_val>
    f929:	mov    esi,DWORD PTR [rsp+0x2c]
    f92d:	cmp    r15d,esi
    f930:	jl     f910 <psr_val_show.part.5+0x1c0>
    f932:	mov    rdi,QWORD PTR [rsp+0x18]
    f937:	add    ebp,0x1
    f93a:	call   b0e0 <libxl_dominfo_list_free@plt>
    f93f:	mov    esi,DWORD PTR [rsp+0x28]
    f943:	cmp    ebp,esi
    f945:	jb     f82e <psr_val_show.part.5+0xde>
    f94b:	nop    DWORD PTR [rax+rax*1+0x0]
    f950:	mov    rdi,QWORD PTR [rsp+0x30]
    f955:	call   c150 <libxl_psr_hw_info_list_free@plt>
    f95a:	mov    rbx,QWORD PTR [rsp+0x38]
    f95f:	xor    rbx,QWORD PTR fs:0x28
    f968:	mov    eax,DWORD PTR [rsp+0x14]
    f96c:	jne    fa61 <psr_val_show.part.5+0x311>
    f972:	add    rsp,0x48
    f976:	pop    rbx
    f977:	pop    rbp
    f978:	pop    r12
    f97a:	pop    r13
    f97c:	pop    r14
    f97e:	pop    r15
    f980:	ret    
    f981:	nop    DWORD PTR [rax+0x0]
    f988:	lea    r8,[rip+0x1eab1]        # 2e440 <__func__.10421+0xb8>
    f98f:	jmp    f7e3 <psr_val_show.part.5+0x93>
    f994:	nop    DWORD PTR [rax+0x0]
    f998:	lea    rax,[rip+0x22d4c1]        # 23ce60 <ctx>
    f99f:	mov    rdx,QWORD PTR [rsp+0x8]
    f9a4:	mov    esi,DWORD PTR [rbx]
    f9a6:	mov    rdi,QWORD PTR [rax]
    f9a9:	call   c450 <libxl_psr_cmt_get_l3_cache_size@plt>
    f9ae:	test   eax,eax
    f9b0:	jne    fa31 <psr_val_show.part.5+0x2e1>
    f9b2:	mov    ecx,DWORD PTR [rsp+0x2c]
    f9b6:	lea    rdx,[rip+0x1ea65]        # 2e422 <__func__.10421+0x9a>
    f9bd:	lea    rsi,[rip+0x1ea67]        # 2e42b <__func__.10421+0xa3>
    f9c4:	mov    edi,0x1
    f9c9:	xor    eax,eax
    f9cb:	call   bd50 <__printf_chk@plt>
    f9d0:	jmp    f86d <psr_val_show.part.5+0x11d>
    f9d5:	nop    DWORD PTR [rax]
    f9d8:	mov    rax,QWORD PTR [rip+0x22b611]        # 23aff0 <stderr@GLIBC_2.2.5>
    f9df:	lea    rdi,[rip+0x1ea13]        # 2e3f9 <__func__.10421+0x71>
    f9e6:	mov    edx,0x13
    f9eb:	mov    esi,0x1
    f9f0:	mov    rcx,QWORD PTR [rax]
    f9f3:	call   c1b0 <fwrite@plt>
    f9f8:	jmp    f95a <psr_val_show.part.5+0x20a>
    f9fd:	nop    DWORD PTR [rax]
    fa00:	mov    rax,QWORD PTR [rip+0x22b5e9]        # 23aff0 <stderr@GLIBC_2.2.5>
    fa07:	lea    rdi,[rip+0x1ec9a]        # 2e6a8 <__func__.10421+0x320>
    fa0e:	mov    esi,0x1
    fa13:	mov    edx,0x2c
    fa18:	mov    rcx,QWORD PTR [rax]
    fa1b:	call   c1b0 <fwrite@plt>
    fa20:	mov    esi,DWORD PTR [rsp+0x28]
    fa24:	mov    DWORD PTR [rsp+0x14],0x1
    fa2c:	jmp    f950 <psr_val_show.part.5+0x200>
    fa31:	mov    rax,QWORD PTR [rip+0x22b5b8]        # 23aff0 <stderr@GLIBC_2.2.5>
    fa38:	mov    ecx,DWORD PTR [rbx]
    fa3a:	lea    rdx,[rip+0x1ec37]        # 2e678 <__func__.10421+0x2f0>
    fa41:	mov    esi,0x1
    fa46:	mov    rdi,QWORD PTR [rax]
    fa49:	xor    eax,eax
    fa4b:	call   c1e0 <__fprintf_chk@plt>
    fa50:	mov    esi,DWORD PTR [rsp+0x28]
    fa54:	mov    DWORD PTR [rsp+0x14],0xffffffff
    fa5c:	jmp    f950 <psr_val_show.part.5+0x200>
    fa61:	call   b130 <__stack_chk_fail@plt>
    fa66:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000fa70 <main_psr_cmt_attach>:
    fa70:	push   r12
    fa72:	push   rbp
    fa73:	lea    rbp,[rip+0x1a94c]        # 2a3c6 <__PRETTY_FUNCTION__.10113+0x7ae>
    fa7a:	push   rbx
    fa7b:	mov    r12d,edi
    fa7e:	mov    rbx,rsi
    fa81:	nop    DWORD PTR [rax+0x0]
    fa88:	lea    rdx,[rip+0x21cb3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
    fa8f:	xor    ecx,ecx
    fa91:	mov    r9d,0x1
    fa97:	mov    r8,rbp
    fa9a:	mov    rsi,rbx
    fa9d:	mov    edi,r12d
    faa0:	call   ebe0 <def_getopt>
    faa5:	cmp    eax,0xffffffff
    faa8:	jne    fa88 <main_psr_cmt_attach+0x18>
    faaa:	mov    rax,QWORD PTR [rip+0x22b4f7]        # 23afa8 <optind@GLIBC_2.2.5>
    fab1:	movsxd rax,DWORD PTR [rax]
    fab4:	mov    rdi,QWORD PTR [rbx+rax*8]
    fab8:	call   eb40 <find_domain>
    fabd:	mov    esi,eax
    fabf:	lea    rax,[rip+0x22d39a]        # 23ce60 <ctx>
    fac6:	pop    rbx
    fac7:	pop    rbp
    fac8:	pop    r12
    faca:	mov    rdi,QWORD PTR [rax]
    facd:	jmp    bf10 <libxl_psr_cmt_attach@plt>
    fad2:	nop    DWORD PTR [rax+0x0]
    fad6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000fae0 <main_psr_cmt_detach>:
    fae0:	push   r12
    fae2:	push   rbp
    fae3:	lea    rbp,[rip+0x1a8eb]        # 2a3d5 <__PRETTY_FUNCTION__.10113+0x7bd>
    faea:	push   rbx
    faeb:	mov    r12d,edi
    faee:	mov    rbx,rsi
    faf1:	nop    DWORD PTR [rax+0x0]
    faf8:	lea    rdx,[rip+0x21c43]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
    faff:	xor    ecx,ecx
    fb01:	mov    r9d,0x1
    fb07:	mov    r8,rbp
    fb0a:	mov    rsi,rbx
    fb0d:	mov    edi,r12d
    fb10:	call   ebe0 <def_getopt>
    fb15:	cmp    eax,0xffffffff
    fb18:	jne    faf8 <main_psr_cmt_detach+0x18>
    fb1a:	mov    rax,QWORD PTR [rip+0x22b487]        # 23afa8 <optind@GLIBC_2.2.5>
    fb21:	movsxd rax,DWORD PTR [rax]
    fb24:	mov    rdi,QWORD PTR [rbx+rax*8]
    fb28:	call   eb40 <find_domain>
    fb2d:	mov    esi,eax
    fb2f:	lea    rax,[rip+0x22d32a]        # 23ce60 <ctx>
    fb36:	pop    rbx
    fb37:	pop    rbp
    fb38:	pop    r12
    fb3a:	mov    rdi,QWORD PTR [rax]
    fb3d:	jmp    b920 <libxl_psr_cmt_detach@plt>
    fb42:	nop    DWORD PTR [rax+0x0]
    fb46:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000000fb50 <main_psr_cmt_show>:
    fb50:	push   r15
    fb52:	push   r14
    fb54:	push   r13
    fb56:	push   r12
    fb58:	lea    r13,[rip+0x1a885]        # 2a3e4 <__PRETTY_FUNCTION__.10113+0x7cc>
    fb5f:	push   rbp
    fb60:	push   rbx
    fb61:	mov    ebp,edi
    fb63:	mov    r12,rsi
    fb66:	sub    rsp,0xb8
    fb6d:	mov    rax,QWORD PTR fs:0x28
    fb76:	mov    QWORD PTR [rsp+0xa8],rax
    fb7e:	xor    eax,eax
    fb80:	lea    rdx,[rip+0x21bbb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
    fb87:	xor    ecx,ecx
    fb89:	mov    r9d,0x1
    fb8f:	mov    r8,r13
    fb92:	mov    rsi,r12
    fb95:	mov    edi,ebp
    fb97:	call   ebe0 <def_getopt>
    fb9c:	cmp    eax,0xffffffff
    fb9f:	mov    ebx,eax
    fba1:	jne    fb80 <main_psr_cmt_show+0x30>
    fba3:	mov    rax,QWORD PTR [rip+0x22b3fe]        # 23afa8 <optind@GLIBC_2.2.5>
    fbaa:	lea    rdi,[rip+0x1e8e8]        # 2e499 <__func__.10421+0x111>
    fbb1:	mov    ecx,0x10
    fbb6:	movsxd rdx,DWORD PTR [rax]
    fbb9:	mov    r9,QWORD PTR [r12+rdx*8]
    fbbd:	mov    rax,rdx
    fbc0:	lea    r8,[rdx*8+0x0]
    fbc8:	mov    rsi,r9
    fbcb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    fbcd:	seta   dl
    fbd0:	sbb    dl,0x0
    fbd3:	test   dl,dl
    fbd5:	je     fc10 <main_psr_cmt_show+0xc0>
    fbd7:	lea    rdi,[rip+0x1e8cb]        # 2e4a9 <__func__.10421+0x121>
    fbde:	mov    ecx,0x14
    fbe3:	mov    rsi,r9
    fbe6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    fbe8:	seta   dl
    fbeb:	sbb    dl,0x0
    fbee:	test   dl,dl
    fbf0:	jne    fdc0 <main_psr_cmt_show+0x270>
    fbf6:	add    eax,0x1
    fbf9:	mov    r14d,0x2
    fbff:	cmp    eax,ebp
    fc01:	jl     fc1d <main_psr_cmt_show+0xcd>
    fc03:	mov    DWORD PTR [rsp],0xffffffff
    fc0a:	jmp    fc35 <main_psr_cmt_show+0xe5>
    fc0c:	nop    DWORD PTR [rax+0x0]
    fc10:	mov    r14d,0x1
    fc16:	add    eax,0x1
    fc19:	cmp    eax,ebp
    fc1b:	jge    fc03 <main_psr_cmt_show+0xb3>
    fc1d:	sub    ebp,0x1
    fc20:	cmp    eax,ebp
    fc22:	jne    fde8 <main_psr_cmt_show+0x298>
    fc28:	mov    rdi,QWORD PTR [r12+r8*1+0x8]
    fc2d:	call   eb40 <find_domain>
    fc32:	mov    DWORD PTR [rsp],eax
    fc35:	lea    r13,[rip+0x22d224]        # 23ce60 <ctx>
    fc3c:	mov    rdi,QWORD PTR [r13+0x0]
    fc40:	call   af20 <libxl_psr_cmt_enabled@plt>
    fc45:	test   eax,eax
    fc47:	je     ffbb <main_psr_cmt_show+0x46b>
    fc4d:	mov    rdi,QWORD PTR [r13+0x0]
    fc51:	mov    esi,r14d
    fc54:	call   c160 <libxl_psr_cmt_type_supported@plt>
    fc59:	test   eax,eax
    fc5b:	je     ffe3 <main_psr_cmt_show+0x493>
    fc61:	lea    rbp,[rsp+0x20]
    fc66:	mov    rdi,rbp
    fc69:	call   bc00 <libxl_bitmap_init@plt>
    fc6e:	mov    rdi,QWORD PTR [r13+0x0]
    fc72:	xor    edx,edx
    fc74:	mov    rsi,rbp
    fc77:	call   ad70 <libxl_socket_bitmap_alloc@plt>
    fc7c:	mov    rdi,QWORD PTR [r13+0x0]
    fc80:	mov    rsi,rbp
    fc83:	call   c080 <libxl_get_online_socketmap@plt>
    fc88:	test   eax,eax
    fc8a:	mov    r12d,eax
    fc8d:	mov    ecx,eax
    fc8f:	lea    rdx,[rip+0x1ea9a]        # 2e730 <__func__.10421+0x3a8>
    fc96:	js     fe30 <main_psr_cmt_show+0x2e0>
    fc9c:	mov    rdi,QWORD PTR [r13+0x0]
    fca0:	lea    rsi,[rsp+0x14]
    fca5:	call   ad00 <libxl_psr_cmt_get_total_rmid@plt>
    fcaa:	test   eax,eax
    fcac:	mov    r12d,eax
    fcaf:	js     feb0 <main_psr_cmt_show+0x360>
    fcb5:	mov    edx,DWORD PTR [rsp+0x14]
    fcb9:	lea    rsi,[rip+0x1e82f]        # 2e4ef <__func__.10421+0x167>
    fcc0:	mov    edi,0x1
    fcc5:	xor    eax,eax
    fcc7:	call   bd50 <__printf_chk@plt>
    fccc:	lea    rcx,[rip+0x1e741]        # 2e414 <__func__.10421+0x8c>
    fcd3:	lea    rdx,[rip+0x1e825]        # 2e4ff <__func__.10421+0x177>
    fcda:	lea    rsi,[rip+0x1e823]        # 2e504 <__func__.10421+0x17c>
    fce1:	xor    eax,eax
    fce3:	mov    edi,0x1
    fce8:	call   bd50 <__printf_chk@plt>
    fced:	mov    eax,DWORD PTR [rsp+0x20]
    fcf1:	shl    eax,0x3
    fcf4:	test   eax,eax
    fcf6:	je     fd4c <main_psr_cmt_show+0x1fc>
    fcf8:	xor    r15d,r15d
    fcfb:	jmp    fd10 <main_psr_cmt_show+0x1c0>
    fcfd:	nop    DWORD PTR [rax]
    fd00:	mov    eax,DWORD PTR [rsp+0x20]
    fd04:	add    r15d,0x1
    fd08:	shl    eax,0x3
    fd0b:	cmp    r15d,eax
    fd0e:	jae    fd4c <main_psr_cmt_show+0x1fc>
    fd10:	mov    esi,r15d
    fd13:	mov    rdi,rbp
    fd16:	call   be30 <libxl_bitmap_test@plt>
    fd1b:	test   eax,eax
    fd1d:	je     fd00 <main_psr_cmt_show+0x1b0>
    fd1f:	lea    rdx,[rip+0x1e7e8]        # 2e50e <__func__.10421+0x186>
    fd26:	lea    rsi,[rip+0x1e7e8]        # 2e515 <__func__.10421+0x18d>
    fd2d:	mov    ecx,r15d
    fd30:	xor    eax,eax
    fd32:	mov    edi,0x1
    fd37:	add    r15d,0x1
    fd3b:	call   bd50 <__printf_chk@plt>
    fd40:	mov    eax,DWORD PTR [rsp+0x20]
    fd44:	shl    eax,0x3
    fd47:	cmp    r15d,eax
    fd4a:	jb     fd10 <main_psr_cmt_show+0x1c0>
    fd4c:	mov    edi,0xa
    fd51:	call   aca0 <putchar@plt>
    fd56:	cmp    r14d,0x1
    fd5a:	je     fef8 <main_psr_cmt_show+0x3a8>
    fd60:	mov    r15d,DWORD PTR [rsp]
    fd64:	cmp    r15d,0xffffffff
    fd68:	je     fe50 <main_psr_cmt_show+0x300>
    fd6e:	lea    rax,[rsp+0x30]
    fd73:	mov    rdi,rax
    fd76:	mov    QWORD PTR [rsp],rax
    fd7a:	call   b740 <libxl_dominfo_init@plt>
    fd7f:	mov    rsi,QWORD PTR [rsp]
    fd83:	mov    rdi,QWORD PTR [r13+0x0]
    fd87:	mov    edx,r15d
    fd8a:	call   b5b0 <libxl_domain_info@plt>
    fd8f:	test   eax,eax
    fd91:	je     fed8 <main_psr_cmt_show+0x388>
    fd97:	mov    rax,QWORD PTR [rip+0x22b252]        # 23aff0 <stderr@GLIBC_2.2.5>
    fd9e:	lea    rdx,[rip+0x1e9f3]        # 2e798 <__func__.10421+0x410>
    fda5:	mov    ecx,r15d
    fda8:	mov    esi,0x1
    fdad:	mov    r12d,ebx
    fdb0:	mov    rdi,QWORD PTR [rax]
    fdb3:	xor    eax,eax
    fdb5:	call   c1e0 <__fprintf_chk@plt>
    fdba:	jmp    fe46 <main_psr_cmt_show+0x2f6>
    fdbf:	nop
    fdc0:	lea    rdi,[rip+0x1e6f6]        # 2e4bd <__func__.10421+0x135>
    fdc7:	mov    ecx,0x14
    fdcc:	mov    rsi,r9
    fdcf:	mov    r14d,0x3
    fdd5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    fdd7:	seta   dl
    fdda:	sbb    dl,0x0
    fddd:	test   dl,dl
    fddf:	je     fc16 <main_psr_cmt_show+0xc6>
    fde5:	nop    DWORD PTR [rax]
    fde8:	lea    rdi,[rip+0x1a5f5]        # 2a3e4 <__PRETTY_FUNCTION__.10113+0x7cc>
    fdef:	mov    r12d,0x2
    fdf5:	call   d4f0 <help>
    fdfa:	mov    rcx,QWORD PTR [rsp+0xa8]
    fe02:	xor    rcx,QWORD PTR fs:0x28
    fe0b:	mov    eax,r12d
    fe0e:	jne    10013 <main_psr_cmt_show+0x4c3>
    fe14:	add    rsp,0xb8
    fe1b:	pop    rbx
    fe1c:	pop    rbp
    fe1d:	pop    r12
    fe1f:	pop    r13
    fe21:	pop    r14
    fe23:	pop    r15
    fe25:	ret    
    fe26:	lea    rdx,[rip+0x1e933]        # 2e760 <__func__.10421+0x3d8>
    fe2d:	mov    ecx,r15d
    fe30:	mov    rax,QWORD PTR [rip+0x22b1b9]        # 23aff0 <stderr@GLIBC_2.2.5>
    fe37:	mov    esi,0x1
    fe3c:	mov    rdi,QWORD PTR [rax]
    fe3f:	xor    eax,eax
    fe41:	call   c1e0 <__fprintf_chk@plt>
    fe46:	mov    rdi,rbp
    fe49:	call   bdb0 <libxl_bitmap_dispose@plt>
    fe4e:	jmp    fdfa <main_psr_cmt_show+0x2aa>
    fe50:	mov    rdi,QWORD PTR [r13+0x0]
    fe54:	lea    rsi,[rsp+0x1c]
    fe59:	call   b830 <libxl_list_domain@plt>
    fe5e:	test   rax,rax
    fe61:	mov    r13,rax
    fe64:	je     ff93 <main_psr_cmt_show+0x443>
    fe6a:	mov    esi,DWORD PTR [rsp+0x1c]
    fe6e:	xor    ebx,ebx
    fe70:	test   esi,esi
    fe72:	je     fea4 <main_psr_cmt_show+0x354>
    fe74:	nop    DWORD PTR [rax+0x0]
    fe78:	mov    edx,ebx
    fe7a:	mov    esi,r14d
    fe7d:	add    ebx,0x1
    fe80:	lea    rax,[rdx*8+0x0]
    fe88:	sub    rax,rdx
    fe8b:	mov    rdx,rbp
    fe8e:	shl    rax,0x4
    fe92:	lea    rdi,[r13+rax*1+0x10]
    fe97:	call   f300 <psr_cmt_print_domain_info.isra.2>
    fe9c:	mov    esi,DWORD PTR [rsp+0x1c]
    fea0:	cmp    ebx,esi
    fea2:	jb     fe78 <main_psr_cmt_show+0x328>
    fea4:	mov    rdi,r13
    fea7:	call   b0e0 <libxl_dominfo_list_free@plt>
    feac:	jmp    fe46 <main_psr_cmt_show+0x2f6>
    feae:	xchg   ax,ax
    feb0:	mov    rax,QWORD PTR [rip+0x22b139]        # 23aff0 <stderr@GLIBC_2.2.5>
    feb7:	lea    rdi,[rip+0x1e613]        # 2e4d1 <__func__.10421+0x149>
    febe:	mov    edx,0x1d
    fec3:	mov    esi,0x1
    fec8:	mov    rcx,QWORD PTR [rax]
    fecb:	call   c1b0 <fwrite@plt>
    fed0:	jmp    fe46 <main_psr_cmt_show+0x2f6>
    fed5:	nop    DWORD PTR [rax]
    fed8:	mov    rbx,QWORD PTR [rsp]
    fedc:	mov    rdx,rbp
    fedf:	mov    esi,r14d
    fee2:	lea    rdi,[rbx+0x10]
    fee6:	call   f300 <psr_cmt_print_domain_info.isra.2>
    feeb:	mov    rdi,rbx
    feee:	call   b8d0 <libxl_dominfo_dispose@plt>
    fef3:	jmp    fe46 <main_psr_cmt_show+0x2f6>
    fef8:	lea    rdx,[rip+0x1e61e]        # 2e51d <__func__.10421+0x195>
    feff:	lea    rsi,[rip+0x1e62b]        # 2e531 <__func__.10421+0x1a9>
    ff06:	xor    eax,eax
    ff08:	mov    edi,0x1
    ff0d:	call   bd50 <__printf_chk@plt>
    ff12:	mov    eax,DWORD PTR [rsp+0x20]
    ff16:	shl    eax,0x3
    ff19:	test   eax,eax
    ff1b:	je     ff84 <main_psr_cmt_show+0x434>
    ff1d:	lea    rax,[rsp+0x18]
    ff22:	xor    r15d,r15d
    ff25:	mov    QWORD PTR [rsp+0x8],rax
    ff2a:	jmp    ff40 <main_psr_cmt_show+0x3f0>
    ff2c:	nop    DWORD PTR [rax+0x0]
    ff30:	mov    eax,DWORD PTR [rsp+0x20]
    ff34:	add    r15d,0x1
    ff38:	shl    eax,0x3
    ff3b:	cmp    r15d,eax
    ff3e:	jae    ff84 <main_psr_cmt_show+0x434>
    ff40:	mov    esi,r15d
    ff43:	mov    rdi,rbp
    ff46:	call   be30 <libxl_bitmap_test@plt>
    ff4b:	test   eax,eax
    ff4d:	je     ff30 <main_psr_cmt_show+0x3e0>
    ff4f:	mov    rdx,QWORD PTR [rsp+0x8]
    ff54:	mov    rdi,QWORD PTR [r13+0x0]
    ff58:	mov    esi,r15d
    ff5b:	call   c450 <libxl_psr_cmt_get_l3_cache_size@plt>
    ff60:	test   eax,eax
    ff62:	mov    r12d,eax
    ff65:	js     fe26 <main_psr_cmt_show+0x2d6>
    ff6b:	mov    edx,DWORD PTR [rsp+0x18]
    ff6f:	lea    rsi,[rip+0x1e5c1]        # 2e537 <__func__.10421+0x1af>
    ff76:	mov    edi,0x1
    ff7b:	xor    eax,eax
    ff7d:	call   bd50 <__printf_chk@plt>
    ff82:	jmp    ff30 <main_psr_cmt_show+0x3e0>
    ff84:	mov    edi,0xa
    ff89:	call   aca0 <putchar@plt>
    ff8e:	jmp    fd60 <main_psr_cmt_show+0x210>
    ff93:	mov    rax,QWORD PTR [rip+0x22b056]        # 23aff0 <stderr@GLIBC_2.2.5>
    ff9a:	lea    rdi,[rip+0x1e81f]        # 2e7c0 <__func__.10421+0x438>
    ffa1:	mov    edx,0x2b
    ffa6:	mov    esi,0x1
    ffab:	mov    r12d,ebx
    ffae:	mov    rcx,QWORD PTR [rax]
    ffb1:	call   c1b0 <fwrite@plt>
    ffb6:	jmp    fe46 <main_psr_cmt_show+0x2f6>
    ffbb:	mov    rax,QWORD PTR [rip+0x22b02e]        # 23aff0 <stderr@GLIBC_2.2.5>
    ffc2:	lea    rdi,[rip+0x1e70f]        # 2e6d8 <__func__.10421+0x350>
    ffc9:	mov    edx,0x1e
    ffce:	mov    esi,0x1
    ffd3:	mov    r12d,ebx
    ffd6:	mov    rcx,QWORD PTR [rax]
    ffd9:	call   c1b0 <fwrite@plt>
    ffde:	jmp    fdfa <main_psr_cmt_show+0x2aa>
    ffe3:	mov    edi,r14d
    ffe6:	mov    r12d,ebx
    ffe9:	call   c0e0 <libxl_psr_cmt_type_to_string@plt>
    ffee:	mov    rcx,rax
    fff1:	mov    rax,QWORD PTR [rip+0x22aff8]        # 23aff0 <stderr@GLIBC_2.2.5>
    fff8:	lea    rdx,[rip+0x1e6f9]        # 2e6f8 <__func__.10421+0x370>
    ffff:	mov    esi,0x1
   10004:	mov    rdi,QWORD PTR [rax]
   10007:	xor    eax,eax
   10009:	call   c1e0 <__fprintf_chk@plt>
   1000e:	jmp    fdfa <main_psr_cmt_show+0x2aa>
   10013:	call   b130 <__stack_chk_fail@plt>
   10018:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010020 <main_psr_mba_show>:
   10020:	push   r12
   10022:	lea    r12,[rip+0x1a44c]        # 2a475 <__PRETTY_FUNCTION__.10113+0x85d>
   10029:	push   rbp
   1002a:	mov    rbp,rsi
   1002d:	push   rbx
   1002e:	mov    ebx,edi
   10030:	lea    rdx,[rip+0x2170b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   10037:	xor    r9d,r9d
   1003a:	xor    ecx,ecx
   1003c:	mov    r8,r12
   1003f:	mov    rsi,rbp
   10042:	mov    edi,ebx
   10044:	call   ebe0 <def_getopt>
   10049:	cmp    eax,0xffffffff
   1004c:	jne    10030 <main_psr_mba_show+0x10>
   1004e:	mov    rdx,QWORD PTR [rip+0x22af53]        # 23afa8 <optind@GLIBC_2.2.5>
   10055:	movsxd rdx,DWORD PTR [rdx]
   10058:	cmp    edx,ebx
   1005a:	jge    100a0 <main_psr_mba_show+0x80>
   1005c:	sub    ebx,0x1
   1005f:	cmp    edx,ebx
   10061:	jne    10080 <main_psr_mba_show+0x60>
   10063:	mov    rdi,QWORD PTR [rbp+rdx*8+0x0]
   10068:	call   eb40 <find_domain>
   1006d:	pop    rbx
   1006e:	pop    rbp
   1006f:	pop    r12
   10071:	mov    edi,eax
   10073:	xor    edx,edx
   10075:	mov    esi,0x2
   1007a:	jmp    f750 <psr_val_show.part.5>
   1007f:	nop
   10080:	lea    rdi,[rip+0x1a3ee]        # 2a475 <__PRETTY_FUNCTION__.10113+0x85d>
   10087:	call   d4f0 <help>
   1008c:	pop    rbx
   1008d:	mov    eax,0x2
   10092:	pop    rbp
   10093:	pop    r12
   10095:	ret    
   10096:	nop    WORD PTR cs:[rax+rax*1+0x0]
   100a0:	pop    rbx
   100a1:	pop    rbp
   100a2:	pop    r12
   100a4:	mov    edi,eax
   100a6:	xor    edx,edx
   100a8:	mov    esi,0x2
   100ad:	jmp    f750 <psr_val_show.part.5>
   100b2:	nop    DWORD PTR [rax+0x0]
   100b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000100c0 <main_psr_mba_set>:
   100c0:	push   r15
   100c2:	push   r14
   100c4:	xor    edx,edx
   100c6:	push   r13
   100c8:	push   r12
   100ca:	mov    r12d,edi
   100cd:	push   rbp
   100ce:	push   rbx
   100cf:	mov    r13,rsi
   100d2:	lea    r14,[rip+0x1a375]        # 2a44e <__PRETTY_FUNCTION__.10113+0x836>
   100d9:	sub    rsp,0x78
   100dd:	mov    rax,QWORD PTR fs:0x28
   100e6:	mov    QWORD PTR [rsp+0x68],rax
   100eb:	xor    eax,eax
   100ed:	lea    rax,[rip+0x22cd6c]        # 23ce60 <ctx>
   100f4:	lea    rbx,[rsp+0x50]
   100f9:	mov    rsi,rbx
   100fc:	mov    rdi,QWORD PTR [rax]
   100ff:	call   ad70 <libxl_socket_bitmap_alloc@plt>
   10104:	mov    edx,DWORD PTR [rsp+0x50]
   10108:	mov    rdi,QWORD PTR [rsp+0x58]
   1010d:	xor    esi,esi
   1010f:	call   b400 <memset@plt>
   10114:	lea    rax,[rsp+0x30]
   10119:	mov    QWORD PTR [rsp+0x28],rax
   1011e:	lea    rax,[rsp+0x38]
   10123:	mov    QWORD PTR [rsp+0x20],rax
   10128:	lea    rax,[rsp+0x48]
   1012d:	mov    QWORD PTR [rsp+0x8],rax
   10132:	jmp    10141 <main_psr_mba_set+0x81>
   10134:	nop    DWORD PTR [rax+0x0]
   10138:	cmp    ebp,0x73
   1013b:	je     101c8 <main_psr_mba_set+0x108>
   10141:	lea    rcx,[rip+0x229d78]        # 239ec0 <opts.9775>
   10148:	lea    rdx,[rip+0x1e3f0]        # 2e53f <__func__.10421+0x1b7>
   1014f:	xor    r9d,r9d
   10152:	mov    r8,r14
   10155:	mov    rsi,r13
   10158:	mov    edi,r12d
   1015b:	call   ebe0 <def_getopt>
   10160:	cmp    eax,0xffffffff
   10163:	mov    ebp,eax
   10165:	jne    10138 <main_psr_mba_set+0x78>
   10167:	mov    rdi,rbx
   1016a:	call   b560 <libxl_bitmap_is_empty@plt>
   1016f:	test   eax,eax
   10171:	jne    102f0 <main_psr_mba_set+0x230>
   10177:	mov    rbp,QWORD PTR [rip+0x22ae2a]        # 23afa8 <optind@GLIBC_2.2.5>
   1017e:	movsxd rax,DWORD PTR [rbp+0x0]
   10182:	lea    edx,[rax+0x2]
   10185:	cmp    edx,r12d
   10188:	je     10298 <main_psr_mba_set+0x1d8>
   1018e:	lea    rdi,[rip+0x1a2b9]        # 2a44e <__PRETTY_FUNCTION__.10113+0x836>
   10195:	call   d4f0 <help>
   1019a:	mov    eax,0x1
   1019f:	mov    rcx,QWORD PTR [rsp+0x68]
   101a4:	xor    rcx,QWORD PTR fs:0x28
   101ad:	jne    10305 <main_psr_mba_set+0x245>
   101b3:	add    rsp,0x78
   101b7:	pop    rbx
   101b8:	pop    rbp
   101b9:	pop    r12
   101bb:	pop    r13
   101bd:	pop    r14
   101bf:	pop    r15
   101c1:	ret    
   101c2:	nop    WORD PTR [rax+rax*1+0x0]
   101c8:	mov    rax,QWORD PTR [rip+0x22adf1]        # 23afc0 <optarg@GLIBC_2.2.5>
   101cf:	mov    rdx,QWORD PTR [rsp+0x28]
   101d4:	mov    rdi,QWORD PTR [rip+0x22add5]        # 23afb0 <isspace@GLIBC_2.2.5>
   101db:	mov    rsi,QWORD PTR [rax]
   101de:	call   13d80 <trim>
   101e3:	mov    r15,QWORD PTR [rsp+0x20]
   101e8:	mov    rdi,QWORD PTR [rsp+0x30]
   101ed:	lea    rsi,[rip+0x1def7]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   101f4:	mov    rdx,r15
   101f7:	call   134e0 <split_string_into_string_list>
   101fc:	mov    rdi,r15
   101ff:	call   b370 <libxl_string_list_length@plt>
   10204:	test   eax,eax
   10206:	je     1027c <main_psr_mba_set+0x1bc>
   10208:	sub    eax,0x1
   1020b:	xor    ebp,ebp
   1020d:	lea    rax,[rax*8+0x8]
   10215:	mov    QWORD PTR [rsp+0x10],rax
   1021a:	lea    rax,[rsp+0x40]
   1021f:	mov    QWORD PTR [rsp+0x18],rax
   10224:	nop    DWORD PTR [rax+0x0]
   10228:	mov    rax,QWORD PTR [rsp+0x38]
   1022d:	mov    rdx,QWORD PTR [rsp+0x8]
   10232:	mov    rsi,QWORD PTR [rsp+0x18]
   10237:	mov    rdi,QWORD PTR [rax+rbp*1]
   1023b:	call   11850 <parse_range>
   10240:	mov    rdx,QWORD PTR [rsp+0x40]
   10245:	mov    r15d,edx
   10248:	mov    edx,edx
   1024a:	cmp    rdx,QWORD PTR [rsp+0x48]
   1024f:	ja     10271 <main_psr_mba_set+0x1b1>
   10251:	nop    DWORD PTR [rax+0x0]
   10258:	mov    esi,r15d
   1025b:	mov    rdi,rbx
   1025e:	call   b7d0 <libxl_bitmap_set@plt>
   10263:	lea    edx,[r15+0x1]
   10267:	cmp    rdx,QWORD PTR [rsp+0x48]
   1026c:	mov    r15,rdx
   1026f:	jbe    10258 <main_psr_mba_set+0x198>
   10271:	add    rbp,0x8
   10275:	cmp    QWORD PTR [rsp+0x10],rbp
   1027a:	jne    10228 <main_psr_mba_set+0x168>
   1027c:	mov    rdi,QWORD PTR [rsp+0x20]
   10281:	call   b9a0 <libxl_string_list_dispose@plt>
   10286:	mov    rdi,QWORD PTR [rsp+0x30]
   1028b:	call   ac40 <free@plt>
   10290:	jmp    10141 <main_psr_mba_set+0x81>
   10295:	nop    DWORD PTR [rax]
   10298:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
   1029d:	call   eb40 <find_domain>
   102a2:	mov    r12d,eax
   102a5:	movsxd rax,DWORD PTR [rbp+0x0]
   102a9:	xor    edx,edx
   102ab:	xor    esi,esi
   102ad:	mov    rdi,QWORD PTR [r13+rax*8+0x8]
   102b2:	call   b6b0 <strtoll@plt>
   102b7:	mov    r8,rax
   102ba:	lea    rax,[rip+0x22cb9f]        # 23ce60 <ctx>
   102c1:	mov    rcx,rbx
   102c4:	mov    edx,0x5
   102c9:	mov    esi,r12d
   102cc:	mov    rdi,QWORD PTR [rax]
   102cf:	call   af30 <libxl_psr_set_val@plt>
   102d4:	mov    rdi,rbx
   102d7:	mov    DWORD PTR [rsp+0x8],eax
   102db:	call   bdb0 <libxl_bitmap_dispose@plt>
   102e0:	mov    eax,DWORD PTR [rsp+0x8]
   102e4:	jmp    1019f <main_psr_mba_set+0xdf>
   102e9:	nop    DWORD PTR [rax+0x0]
   102f0:	mov    edx,DWORD PTR [rsp+0x50]
   102f4:	mov    rdi,QWORD PTR [rsp+0x58]
   102f9:	mov    esi,ebp
   102fb:	call   b400 <memset@plt>
   10300:	jmp    10177 <main_psr_mba_set+0xb7>
   10305:	call   b130 <__stack_chk_fail@plt>
   1030a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000010310 <main_psr_cat_cbm_set>:
   10310:	push   r15
   10312:	push   r14
   10314:	xor    edx,edx
   10316:	push   r13
   10318:	push   r12
   1031a:	mov    r13d,edi
   1031d:	push   rbp
   1031e:	push   rbx
   1031f:	mov    r12,rsi
   10322:	sub    rsp,0x78
   10326:	mov    rax,QWORD PTR fs:0x28
   1032f:	mov    QWORD PTR [rsp+0x68],rax
   10334:	xor    eax,eax
   10336:	lea    rax,[rip+0x22cb23]        # 23ce60 <ctx>
   1033d:	lea    rbx,[rsp+0x50]
   10342:	lea    r15,[rsp+0x40]
   10347:	mov    rsi,rbx
   1034a:	mov    rdi,QWORD PTR [rax]
   1034d:	call   ad70 <libxl_socket_bitmap_alloc@plt>
   10352:	mov    edx,DWORD PTR [rsp+0x50]
   10356:	mov    rdi,QWORD PTR [rsp+0x58]
   1035b:	xor    esi,esi
   1035d:	call   b400 <memset@plt>
   10362:	lea    rax,[rsp+0x30]
   10367:	mov    DWORD PTR [rsp+0x4],0x3
   1036f:	mov    DWORD PTR [rsp],0x0
   10376:	mov    DWORD PTR [rsp+0x20],0x0
   1037e:	mov    QWORD PTR [rsp+0x10],rax
   10383:	lea    rax,[rsp+0x38]
   10388:	mov    QWORD PTR [rsp+0x8],rax
   1038d:	lea    rax,[rsp+0x48]
   10392:	mov    QWORD PTR [rsp+0x18],rax
   10397:	nop    WORD PTR [rax+rax*1+0x0]
   103a0:	lea    r8,[rip+0x1a062]        # 2a409 <__PRETTY_FUNCTION__.10113+0x7f1>
   103a7:	lea    rcx,[rip+0x22bf52]        # 23c300 <opts.9817>
   103ae:	lea    rdx,[rip+0x1e18e]        # 2e543 <__func__.10421+0x1bb>
   103b5:	mov    r9d,0x2
   103bb:	mov    rsi,r12
   103be:	mov    edi,r13d
   103c1:	call   ebe0 <def_getopt>
   103c6:	cmp    eax,0xffffffff
   103c9:	je     10510 <main_psr_cat_cbm_set+0x200>
   103cf:	cmp    eax,0x64
   103d2:	je     10500 <main_psr_cat_cbm_set+0x1f0>
   103d8:	jle    104c0 <main_psr_cat_cbm_set+0x1b0>
   103de:	cmp    eax,0x6c
   103e1:	je     104d8 <main_psr_cat_cbm_set+0x1c8>
   103e7:	cmp    eax,0x73
   103ea:	jne    103a0 <main_psr_cat_cbm_set+0x90>
   103ec:	mov    rax,QWORD PTR [rip+0x22abcd]        # 23afc0 <optarg@GLIBC_2.2.5>
   103f3:	mov    rdx,QWORD PTR [rsp+0x10]
   103f8:	mov    rdi,QWORD PTR [rip+0x22abb1]        # 23afb0 <isspace@GLIBC_2.2.5>
   103ff:	mov    rsi,QWORD PTR [rax]
   10402:	call   13d80 <trim>
   10407:	mov    r14,QWORD PTR [rsp+0x8]
   1040c:	mov    rdi,QWORD PTR [rsp+0x30]
   10411:	lea    rsi,[rip+0x1dcd3]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   10418:	mov    rdx,r14
   1041b:	call   134e0 <split_string_into_string_list>
   10420:	mov    rdi,r14
   10423:	call   b370 <libxl_string_list_length@plt>
   10428:	test   eax,eax
   1042a:	je     104a4 <main_psr_cat_cbm_set+0x194>
   1042c:	sub    eax,0x1
   1042f:	mov    QWORD PTR [rsp+0x28],r12
   10434:	mov    r12,QWORD PTR [rsp+0x18]
   10439:	lea    rax,[rax*8+0x8]
   10441:	xor    ebp,ebp
   10443:	mov    DWORD PTR [rsp+0x24],r13d
   10448:	mov    r14,rax
   1044b:	nop    DWORD PTR [rax+rax*1+0x0]
   10450:	mov    rax,QWORD PTR [rsp+0x38]
   10455:	mov    rdx,r12
   10458:	mov    rsi,r15
   1045b:	mov    rdi,QWORD PTR [rax+rbp*1]
   1045f:	call   11850 <parse_range>
   10464:	mov    rdx,QWORD PTR [rsp+0x40]
   10469:	mov    r13d,edx
   1046c:	mov    edx,edx
   1046e:	cmp    rdx,QWORD PTR [rsp+0x48]
   10473:	ja     10491 <main_psr_cat_cbm_set+0x181>
   10475:	nop    DWORD PTR [rax]
   10478:	mov    esi,r13d
   1047b:	mov    rdi,rbx
   1047e:	call   b7d0 <libxl_bitmap_set@plt>
   10483:	lea    eax,[r13+0x1]
   10487:	cmp    rax,QWORD PTR [rsp+0x48]
   1048c:	mov    r13,rax
   1048f:	jbe    10478 <main_psr_cat_cbm_set+0x168>
   10491:	add    rbp,0x8
   10495:	cmp    r14,rbp
   10498:	jne    10450 <main_psr_cat_cbm_set+0x140>
   1049a:	mov    r13d,DWORD PTR [rsp+0x24]
   1049f:	mov    r12,QWORD PTR [rsp+0x28]
   104a4:	mov    rdi,QWORD PTR [rsp+0x8]
   104a9:	call   b9a0 <libxl_string_list_dispose@plt>
   104ae:	mov    rdi,QWORD PTR [rsp+0x30]
   104b3:	call   ac40 <free@plt>
   104b8:	jmp    103a0 <main_psr_cat_cbm_set+0x90>
   104bd:	nop    DWORD PTR [rax]
   104c0:	cmp    eax,0x63
   104c3:	mov    eax,0x1
   104c8:	cmovne eax,DWORD PTR [rsp]
   104cc:	mov    DWORD PTR [rsp],eax
   104cf:	jmp    103a0 <main_psr_cat_cbm_set+0x90>
   104d4:	nop    DWORD PTR [rax+0x0]
   104d8:	mov    rax,QWORD PTR [rip+0x22aae1]        # 23afc0 <optarg@GLIBC_2.2.5>
   104df:	mov    edx,0xa
   104e4:	xor    esi,esi
   104e6:	mov    rdi,QWORD PTR [rax]
   104e9:	call   b7b0 <strtol@plt>
   104ee:	mov    DWORD PTR [rsp+0x4],eax
   104f2:	jmp    103a0 <main_psr_cat_cbm_set+0x90>
   104f7:	nop    WORD PTR [rax+rax*1+0x0]
   10500:	mov    DWORD PTR [rsp+0x20],0x1
   10508:	jmp    103a0 <main_psr_cat_cbm_set+0x90>
   1050d:	nop    DWORD PTR [rax]
   10510:	mov    eax,DWORD PTR [rsp+0x4]
   10514:	cmp    eax,0x2
   10517:	je     1060b <main_psr_cat_cbm_set+0x2fb>
   1051d:	cmp    eax,0x3
   10520:	jne    105ad <main_psr_cat_cbm_set+0x29d>
   10526:	mov    ebp,DWORD PTR [rsp+0x20]
   1052a:	and    ebp,DWORD PTR [rsp]
   1052d:	jne    1064b <main_psr_cat_cbm_set+0x33b>
   10533:	mov    edx,DWORD PTR [rsp+0x20]
   10537:	mov    ebp,0x3
   1053c:	test   edx,edx
   1053e:	je     10638 <main_psr_cat_cbm_set+0x328>
   10544:	mov    rdi,rbx
   10547:	call   b560 <libxl_bitmap_is_empty@plt>
   1054c:	test   eax,eax
   1054e:	jne    10620 <main_psr_cat_cbm_set+0x310>
   10554:	mov    r14,QWORD PTR [rip+0x22aa4d]        # 23afa8 <optind@GLIBC_2.2.5>
   1055b:	movsxd rax,DWORD PTR [r14]
   1055e:	lea    edx,[rax+0x2]
   10561:	cmp    edx,r13d
   10564:	jne    105f8 <main_psr_cat_cbm_set+0x2e8>
   1056a:	mov    rdi,QWORD PTR [r12+rax*8]
   1056e:	call   eb40 <find_domain>
   10573:	mov    r13d,eax
   10576:	movsxd rax,DWORD PTR [r14]
   10579:	xor    edx,edx
   1057b:	xor    esi,esi
   1057d:	mov    rdi,QWORD PTR [r12+rax*8+0x8]
   10582:	call   b6b0 <strtoll@plt>
   10587:	mov    r8,rax
   1058a:	lea    rax,[rip+0x22c8cf]        # 23ce60 <ctx>
   10591:	mov    edx,ebp
   10593:	mov    rcx,rbx
   10596:	mov    esi,r13d
   10599:	mov    rdi,QWORD PTR [rax]
   1059c:	call   c280 <libxl_psr_cat_set_cbm@plt>
   105a1:	mov    rdi,rbx
   105a4:	mov    ebp,eax
   105a6:	call   bdb0 <libxl_bitmap_dispose@plt>
   105ab:	jmp    105d3 <main_psr_cat_cbm_set+0x2c3>
   105ad:	mov    rax,QWORD PTR [rip+0x22aa3c]        # 23aff0 <stderr@GLIBC_2.2.5>
   105b4:	mov    ecx,DWORD PTR [rsp+0x4]
   105b8:	lea    rdx,[rip+0x1df8c]        # 2e54b <__func__.10421+0x1c3>
   105bf:	mov    esi,0x1
   105c4:	mov    ebp,0x1
   105c9:	mov    rdi,QWORD PTR [rax]
   105cc:	xor    eax,eax
   105ce:	call   c1e0 <__fprintf_chk@plt>
   105d3:	mov    rcx,QWORD PTR [rsp+0x68]
   105d8:	xor    rcx,QWORD PTR fs:0x28
   105e1:	mov    eax,ebp
   105e3:	jne    10670 <main_psr_cat_cbm_set+0x360>
   105e9:	add    rsp,0x78
   105ed:	pop    rbx
   105ee:	pop    rbp
   105ef:	pop    r12
   105f1:	pop    r13
   105f3:	pop    r14
   105f5:	pop    r15
   105f7:	ret    
   105f8:	lea    rdi,[rip+0x19e0a]        # 2a409 <__PRETTY_FUNCTION__.10113+0x7f1>
   105ff:	mov    ebp,0x2
   10604:	call   d4f0 <help>
   10609:	jmp    105d3 <main_psr_cat_cbm_set+0x2c3>
   1060b:	mov    rdi,rbx
   1060e:	mov    ebp,0x4
   10613:	call   b560 <libxl_bitmap_is_empty@plt>
   10618:	test   eax,eax
   1061a:	je     10554 <main_psr_cat_cbm_set+0x244>
   10620:	mov    edx,DWORD PTR [rsp+0x50]
   10624:	mov    rdi,QWORD PTR [rsp+0x58]
   10629:	mov    esi,0xffffffff
   1062e:	call   b400 <memset@plt>
   10633:	jmp    10554 <main_psr_cat_cbm_set+0x244>
   10638:	mov    eax,DWORD PTR [rsp]
   1063b:	xor    ebp,ebp
   1063d:	test   eax,eax
   1063f:	setne  bpl
   10643:	add    ebp,0x1
   10646:	jmp    10544 <main_psr_cat_cbm_set+0x234>
   1064b:	mov    rax,QWORD PTR [rip+0x22a99e]        # 23aff0 <stderr@GLIBC_2.2.5>
   10652:	lea    rdi,[rip+0x1e197]        # 2e7f0 <__func__.10421+0x468>
   10659:	mov    edx,0x29
   1065e:	mov    esi,0x1
   10663:	mov    rcx,QWORD PTR [rax]
   10666:	call   c1b0 <fwrite@plt>
   1066b:	jmp    105d3 <main_psr_cat_cbm_set+0x2c3>
   10670:	call   b130 <__stack_chk_fail@plt>
   10675:	nop
   10676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010680 <main_psr_cat_show>:
   10680:	push   r13
   10682:	push   r12
   10684:	lea    r13,[rip+0x19da3]        # 2a42e <__PRETTY_FUNCTION__.10113+0x816>
   1068b:	push   rbp
   1068c:	push   rbx
   1068d:	mov    rbp,rsi
   10690:	mov    ebx,edi
   10692:	mov    r12d,0x3
   10698:	sub    rsp,0x8
   1069c:	jmp    106a5 <main_psr_cat_show+0x25>
   1069e:	xchg   ax,ax
   106a0:	cmp    eax,0x6c
   106a3:	je     10710 <main_psr_cat_show+0x90>
   106a5:	lea    rcx,[rip+0x22bbf4]        # 23c2a0 <opts.9839>
   106ac:	lea    rdx,[rip+0x1deaf]        # 2e562 <__func__.10421+0x1da>
   106b3:	xor    r9d,r9d
   106b6:	mov    r8,r13
   106b9:	mov    rsi,rbp
   106bc:	mov    edi,ebx
   106be:	call   ebe0 <def_getopt>
   106c3:	cmp    eax,0xffffffff
   106c6:	jne    106a0 <main_psr_cat_show+0x20>
   106c8:	mov    rdx,QWORD PTR [rip+0x22a8d9]        # 23afa8 <optind@GLIBC_2.2.5>
   106cf:	movsxd rdx,DWORD PTR [rdx]
   106d2:	cmp    edx,ebx
   106d4:	jge    106e7 <main_psr_cat_show+0x67>
   106d6:	sub    ebx,0x1
   106d9:	cmp    edx,ebx
   106db:	jne    10730 <main_psr_cat_show+0xb0>
   106dd:	mov    rdi,QWORD PTR [rbp+rdx*8+0x0]
   106e2:	call   eb40 <find_domain>
   106e7:	lea    edx,[r12-0x2]
   106ec:	cmp    edx,0x1
   106ef:	ja     10750 <main_psr_cat_show+0xd0>
   106f1:	add    rsp,0x8
   106f5:	mov    edx,r12d
   106f8:	mov    esi,0x1
   106fd:	pop    rbx
   106fe:	pop    rbp
   106ff:	pop    r12
   10701:	pop    r13
   10703:	mov    edi,eax
   10705:	jmp    f750 <psr_val_show.part.5>
   1070a:	nop    WORD PTR [rax+rax*1+0x0]
   10710:	mov    rax,QWORD PTR [rip+0x22a8a9]        # 23afc0 <optarg@GLIBC_2.2.5>
   10717:	mov    edx,0xa
   1071c:	xor    esi,esi
   1071e:	mov    rdi,QWORD PTR [rax]
   10721:	call   b7b0 <strtol@plt>
   10726:	mov    r12d,eax
   10729:	jmp    106a5 <main_psr_cat_show+0x25>
   1072e:	xchg   ax,ax
   10730:	lea    rdi,[rip+0x19cf7]        # 2a42e <__PRETTY_FUNCTION__.10113+0x816>
   10737:	call   d4f0 <help>
   1073c:	add    rsp,0x8
   10740:	mov    eax,0x2
   10745:	pop    rbx
   10746:	pop    rbp
   10747:	pop    r12
   10749:	pop    r13
   1074b:	ret    
   1074c:	nop    DWORD PTR [rax+0x0]
   10750:	mov    rax,QWORD PTR [rip+0x22a899]        # 23aff0 <stderr@GLIBC_2.2.5>
   10757:	lea    rdx,[rip+0x1dded]        # 2e54b <__func__.10421+0x1c3>
   1075e:	mov    ecx,r12d
   10761:	mov    esi,0x1
   10766:	mov    rdi,QWORD PTR [rax]
   10769:	xor    eax,eax
   1076b:	call   c1e0 <__fprintf_chk@plt>
   10770:	add    rsp,0x8
   10774:	mov    eax,0x1
   10779:	pop    rbx
   1077a:	pop    rbp
   1077b:	pop    r12
   1077d:	pop    r13
   1077f:	ret    

0000000000010780 <main_psr_hwinfo>:
   10780:	push   r15
   10782:	push   r14
   10784:	xor    r15d,r15d
   10787:	push   r13
   10789:	push   r12
   1078b:	mov    r13d,edi
   1078e:	push   rbp
   1078f:	push   rbx
   10790:	mov    r12,rsi
   10793:	xor    ebp,ebp
   10795:	mov    ebx,0x1
   1079a:	mov    r14d,0x1
   107a0:	sub    rsp,0x38
   107a4:	mov    rax,QWORD PTR fs:0x28
   107ad:	mov    QWORD PTR [rsp+0x28],rax
   107b2:	xor    eax,eax
   107b4:	mov    BYTE PTR [rsp+0xf],0x0
   107b9:	nop    DWORD PTR [rax+0x0]
   107c0:	lea    r8,[rip+0x19bf4]        # 2a3bb <__PRETTY_FUNCTION__.10113+0x7a3>
   107c7:	lea    rcx,[rip+0x229652]        # 239e20 <opts.9855>
   107ce:	lea    rdx,[rip+0x1dd99]        # 2e56e <__func__.10421+0x1e6>
   107d5:	xor    r9d,r9d
   107d8:	mov    rsi,r12
   107db:	mov    edi,r13d
   107de:	call   ebe0 <def_getopt>
   107e3:	cmp    eax,0xffffffff
   107e6:	je     10828 <main_psr_hwinfo+0xa8>
   107e8:	cmp    eax,0x62
   107eb:	je     10808 <main_psr_hwinfo+0x88>
   107ed:	cmp    eax,0x6d
   107f0:	je     10818 <main_psr_hwinfo+0x98>
   107f2:	cmp    eax,0x61
   107f5:	mov    eax,0x0
   107fa:	cmove  ebp,r14d
   107fe:	cmove  ebx,eax
   10801:	jmp    107c0 <main_psr_hwinfo+0x40>
   10803:	nop    DWORD PTR [rax+rax*1+0x0]
   10808:	mov    BYTE PTR [rsp+0xf],0x1
   1080d:	xor    ebx,ebx
   1080f:	jmp    107c0 <main_psr_hwinfo+0x40>
   10811:	nop    DWORD PTR [rax+0x0]
   10818:	mov    r15d,0x1
   1081e:	xor    ebx,ebx
   10820:	jmp    107c0 <main_psr_hwinfo+0x40>
   10822:	nop    WORD PTR [rax+rax*1+0x0]
   10828:	or     ebp,ebx
   1082a:	test   bl,bl
   1082c:	jne    10998 <main_psr_hwinfo+0x218>
   10832:	test   r15b,r15b
   10835:	jne    10998 <main_psr_hwinfo+0x218>
   1083b:	xor    r12d,r12d
   1083e:	test   bpl,bpl
   10841:	jne    10aad <main_psr_hwinfo+0x32d>
   10847:	test   bl,bl
   10849:	jne    10880 <main_psr_hwinfo+0x100>
   1084b:	cmp    BYTE PTR [rsp+0xf],0x0
   10850:	jne    10880 <main_psr_hwinfo+0x100>
   10852:	mov    rbx,QWORD PTR [rsp+0x28]
   10857:	xor    rbx,QWORD PTR fs:0x28
   10860:	mov    eax,r12d
   10863:	jne    10dac <main_psr_hwinfo+0x62c>
   10869:	add    rsp,0x38
   1086d:	pop    rbx
   1086e:	pop    rbp
   1086f:	pop    r12
   10871:	pop    r13
   10873:	pop    r14
   10875:	pop    r15
   10877:	ret    
   10878:	nop    DWORD PTR [rax+rax*1+0x0]
   10880:	lea    rax,[rip+0x22c5d9]        # 23ce60 <ctx>
   10887:	lea    rcx,[rsp+0x1c]
   1088c:	lea    r8,[rsp+0x20]
   10891:	xor    edx,edx
   10893:	mov    esi,0x2
   10898:	mov    rdi,QWORD PTR [rax]
   1089b:	call   acc0 <libxl_psr_get_hw_info@plt>
   108a0:	test   eax,eax
   108a2:	mov    r12d,eax
   108a5:	jne    10852 <main_psr_hwinfo+0xd2>
   108a7:	lea    rdi,[rip+0x1dfea]        # 2e898 <__func__.10421+0x510>
   108ae:	call   aeb0 <puts@plt>
   108b3:	mov    esi,DWORD PTR [rsp+0x1c]
   108b7:	test   esi,esi
   108b9:	je     10985 <main_psr_hwinfo+0x205>
   108bf:	lea    r15,[rip+0x1dcfe]        # 2e5c4 <__func__.10421+0x23c>
   108c6:	lea    r14,[rip+0x20ca6]        # 31573 <__PRETTY_FUNCTION__.10016+0x4e3>
   108cd:	lea    r13,[rip+0x1dc92]        # 2e566 <__func__.10421+0x1de>
   108d4:	xor    ebp,ebp
   108d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   108e0:	mov    eax,ebp
   108e2:	mov    rdx,QWORD PTR [rsp+0x20]
   108e7:	mov    rsi,r15
   108ea:	lea    rax,[rax+rax*4]
   108ee:	mov    edi,0x1
   108f3:	mov    edx,DWORD PTR [rdx+rax*4]
   108f6:	lea    rbx,[rax*4+0x0]
   108fe:	xor    eax,eax
   10900:	call   bd50 <__printf_chk@plt>
   10905:	mov    rax,QWORD PTR [rsp+0x20]
   1090a:	lea    rsi,[rip+0x1dcd1]        # 2e5e2 <__func__.10421+0x25a>
   10911:	mov    rdx,r13
   10914:	mov    edi,0x1
   10919:	cmp    BYTE PTR [rax+rbx*1+0x10],0x0
   1091e:	cmove  rdx,r14
   10922:	xor    eax,eax
   10924:	add    ebp,0x1
   10927:	call   bd50 <__printf_chk@plt>
   1092c:	mov    rax,QWORD PTR [rsp+0x20]
   10931:	lea    rsi,[rip+0x1dcc8]        # 2e600 <__func__.10421+0x278>
   10938:	mov    edi,0x1
   1093d:	mov    edx,DWORD PTR [rax+rbx*1+0x8]
   10941:	xor    eax,eax
   10943:	call   bd50 <__printf_chk@plt>
   10948:	mov    rax,QWORD PTR [rsp+0x20]
   1094d:	lea    rsi,[rip+0x1dcca]        # 2e61e <__func__.10421+0x296>
   10954:	mov    edi,0x1
   10959:	mov    edx,DWORD PTR [rax+rbx*1+0xc]
   1095d:	xor    eax,eax
   1095f:	call   bd50 <__printf_chk@plt>
   10964:	lea    rsi,[rip+0x1dcd1]        # 2e63c <__func__.10421+0x2b4>
   1096b:	xor    edx,edx
   1096d:	xor    eax,eax
   1096f:	mov    edi,0x1
   10974:	call   bd50 <__printf_chk@plt>
   10979:	mov    esi,DWORD PTR [rsp+0x1c]
   1097d:	cmp    ebp,esi
   1097f:	jb     108e0 <main_psr_hwinfo+0x160>
   10985:	mov    rdi,QWORD PTR [rsp+0x20]
   1098a:	call   c150 <libxl_psr_hw_info_list_free@plt>
   1098f:	jmp    10852 <main_psr_hwinfo+0xd2>
   10994:	nop    DWORD PTR [rax+0x0]
   10998:	lea    rdi,[rip+0x1de81]        # 2e820 <__func__.10421+0x498>
   1099f:	call   aeb0 <puts@plt>
   109a4:	lea    r13,[rip+0x22c4b5]        # 23ce60 <ctx>
   109ab:	mov    rdi,QWORD PTR [r13+0x0]
   109af:	call   af20 <libxl_psr_cmt_enabled@plt>
   109b4:	test   eax,eax
   109b6:	je     10a80 <main_psr_hwinfo+0x300>
   109bc:	lea    rcx,[rip+0x18e58]        # 2981b <_IO_stdin_used+0xdb>
   109c3:	lea    rdx,[rip+0x1db9c]        # 2e566 <__func__.10421+0x1de>
   109ca:	lea    rsi,[rip+0x1dbd1]        # 2e5a2 <__func__.10421+0x21a>
   109d1:	mov    edi,0x1
   109d6:	xor    eax,eax
   109d8:	lea    r15,[rsp+0x20]
   109dd:	call   bd50 <__printf_chk@plt>
   109e2:	mov    rdi,QWORD PTR [r13+0x0]
   109e6:	mov    rsi,r15
   109e9:	call   ad00 <libxl_psr_cmt_get_total_rmid@plt>
   109ee:	test   eax,eax
   109f0:	mov    r12d,eax
   109f3:	jne    10d50 <main_psr_hwinfo+0x5d0>
   109f9:	mov    ecx,DWORD PTR [rsp+0x20]
   109fd:	lea    rdx,[rip+0x1db6f]        # 2e573 <__func__.10421+0x1eb>
   10a04:	lea    rsi,[rip+0x1da0c]        # 2e417 <__func__.10421+0x8f>
   10a0b:	mov    edi,0x1
   10a10:	xor    eax,eax
   10a12:	call   bd50 <__printf_chk@plt>
   10a17:	lea    rdi,[rip+0x1db60]        # 2e57e <__func__.10421+0x1f6>
   10a1e:	call   aeb0 <puts@plt>
   10a23:	mov    rdi,QWORD PTR [r13+0x0]
   10a27:	mov    esi,0x1
   10a2c:	call   c160 <libxl_psr_cmt_type_supported@plt>
   10a31:	test   eax,eax
   10a33:	jne    10d94 <main_psr_hwinfo+0x614>
   10a39:	mov    rdi,QWORD PTR [r13+0x0]
   10a3d:	mov    esi,0x2
   10a42:	call   c160 <libxl_psr_cmt_type_supported@plt>
   10a47:	test   eax,eax
   10a49:	jne    10d83 <main_psr_hwinfo+0x603>
   10a4f:	mov    rdi,QWORD PTR [r13+0x0]
   10a53:	mov    esi,0x3
   10a58:	call   c160 <libxl_psr_cmt_type_supported@plt>
   10a5d:	test   eax,eax
   10a5f:	je     1083b <main_psr_hwinfo+0xbb>
   10a65:	lea    rdi,[rip+0x1da51]        # 2e4bd <__func__.10421+0x135>
   10a6c:	call   aeb0 <puts@plt>
   10a71:	jmp    1083b <main_psr_hwinfo+0xbb>
   10a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10a80:	lea    rcx,[rip+0x23def]        # 34876 <savefileheader_magic+0x3d6>
   10a87:	lea    rdx,[rip+0x1dad8]        # 2e566 <__func__.10421+0x1de>
   10a8e:	lea    rsi,[rip+0x1db0d]        # 2e5a2 <__func__.10421+0x21a>
   10a95:	xor    eax,eax
   10a97:	mov    edi,0x1
   10a9c:	xor    r12d,r12d
   10a9f:	call   bd50 <__printf_chk@plt>
   10aa4:	test   bpl,bpl
   10aa7:	je     10847 <main_psr_hwinfo+0xc7>
   10aad:	lea    r13,[rip+0x22c3ac]        # 23ce60 <ctx>
   10ab4:	lea    r15,[rsp+0x20]
   10ab9:	lea    rdx,[rsp+0x18]
   10abe:	mov    ecx,0x3
   10ac3:	lea    r14,[rsp+0x1c]
   10ac8:	mov    rsi,r15
   10acb:	mov    rdi,QWORD PTR [r13+0x0]
   10acf:	call   b070 <libxl_psr_cat_get_info@plt>
   10ad4:	test   eax,eax
   10ad6:	je     10bd8 <main_psr_hwinfo+0x458>
   10adc:	mov    rdi,QWORD PTR [r13+0x0]
   10ae0:	mov    ecx,0x2
   10ae5:	mov    rdx,r14
   10ae8:	mov    rsi,r15
   10aeb:	call   b070 <libxl_psr_cat_get_info@plt>
   10af0:	test   eax,eax
   10af2:	mov    r12d,eax
   10af5:	jne    10847 <main_psr_hwinfo+0xc7>
   10afb:	lea    rdi,[rip+0x1dd6e]        # 2e870 <__func__.10421+0x4e8>
   10b02:	call   aeb0 <puts@plt>
   10b07:	mov    eax,DWORD PTR [rsp+0x1c]
   10b0b:	test   eax,eax
   10b0d:	je     10da5 <main_psr_hwinfo+0x625>
   10b13:	lea    r13,[rip+0x1d8fd]        # 2e417 <__func__.10421+0x8f>
   10b1a:	xor    r14d,r14d
   10b1d:	nop    DWORD PTR [rax]
   10b20:	mov    rax,QWORD PTR [rsp+0x20]
   10b25:	mov    ebp,r14d
   10b28:	lea    rdx,[rip+0x1d8de]        # 2e40d <__func__.10421+0x85>
   10b2f:	shl    rbp,0x4
   10b33:	mov    rsi,r13
   10b36:	mov    edi,0x1
   10b3b:	add    r14d,0x1
   10b3f:	mov    ecx,DWORD PTR [rax+rbp*1]
   10b42:	xor    eax,eax
   10b44:	call   bd50 <__printf_chk@plt>
   10b49:	mov    rax,QWORD PTR [rsp+0x20]
   10b4e:	lea    rdx,[rip+0x1da58]        # 2e5ad <__func__.10421+0x225>
   10b55:	mov    rsi,r13
   10b58:	mov    edi,0x1
   10b5d:	mov    ecx,DWORD PTR [rax+rbp*1+0x4]
   10b61:	xor    eax,eax
   10b63:	call   bd50 <__printf_chk@plt>
   10b68:	mov    rax,QWORD PTR [rsp+0x20]
   10b6d:	lea    rdx,[rip+0x1da45]        # 2e5b9 <__func__.10421+0x231>
   10b74:	mov    rsi,r13
   10b77:	mov    edi,0x1
   10b7c:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
   10b80:	xor    eax,eax
   10b82:	call   bd50 <__printf_chk@plt>
   10b87:	mov    rax,QWORD PTR [rsp+0x20]
   10b8c:	lea    rsi,[rip+0x1d8b1]        # 2e444 <__func__.10421+0xbc>
   10b93:	lea    rdx,[rip+0x1d89e]        # 2e438 <__func__.10421+0xb0>
   10b9a:	mov    edi,0x1
   10b9f:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
   10ba3:	mov    eax,0x1
   10ba8:	shl    rax,cl
   10bab:	lea    rcx,[rax-0x1]
   10baf:	xor    eax,eax
   10bb1:	call   bd50 <__printf_chk@plt>
   10bb6:	mov    esi,DWORD PTR [rsp+0x1c]
   10bba:	cmp    r14d,esi
   10bbd:	jb     10b20 <main_psr_hwinfo+0x3a0>
   10bc3:	mov    rdi,QWORD PTR [rsp+0x20]
   10bc8:	call   b510 <libxl_psr_cat_info_list_free@plt>
   10bcd:	jmp    10847 <main_psr_hwinfo+0xc7>
   10bd2:	nop    WORD PTR [rax+rax*1+0x0]
   10bd8:	lea    rdi,[rip+0x1dc69]        # 2e848 <__func__.10421+0x4c0>
   10bdf:	call   aeb0 <puts@plt>
   10be4:	mov    esi,DWORD PTR [rsp+0x18]
   10be8:	test   esi,esi
   10bea:	jne    10ceb <main_psr_hwinfo+0x56b>
   10bf0:	jmp    10d37 <main_psr_hwinfo+0x5b7>
   10bf5:	nop    DWORD PTR [rax]
   10bf8:	lea    rdx,[rip+0x1d80e]        # 2e40d <__func__.10421+0x85>
   10bff:	lea    rsi,[rip+0x1d811]        # 2e417 <__func__.10421+0x8f>
   10c06:	mov    edi,0x1
   10c0b:	xor    eax,eax
   10c0d:	call   bd50 <__printf_chk@plt>
   10c12:	mov    ecx,DWORD PTR [rsp+0x1c]
   10c16:	lea    rdx,[rip+0x1d805]        # 2e422 <__func__.10421+0x9a>
   10c1d:	lea    rsi,[rip+0x1d807]        # 2e42b <__func__.10421+0xa3>
   10c24:	mov    edi,0x1
   10c29:	xor    eax,eax
   10c2b:	call   bd50 <__printf_chk@plt>
   10c30:	mov    rax,QWORD PTR [rsp+0x20]
   10c35:	lea    rcx,[rip+0x1d92a]        # 2e566 <__func__.10421+0x1de>
   10c3c:	lea    rdx,[rip+0x1d954]        # 2e597 <__func__.10421+0x20f>
   10c43:	lea    rsi,[rip+0x1d958]        # 2e5a2 <__func__.10421+0x21a>
   10c4a:	mov    edi,0x1
   10c4f:	cmp    BYTE PTR [rax+rbp*1+0xc],0x0
   10c54:	lea    rax,[rip+0x20918]        # 31573 <__PRETTY_FUNCTION__.10016+0x4e3>
   10c5b:	cmove  rcx,rax
   10c5f:	xor    eax,eax
   10c61:	add    r12d,0x1
   10c65:	call   bd50 <__printf_chk@plt>
   10c6a:	mov    rax,QWORD PTR [rsp+0x20]
   10c6f:	lea    rdx,[rip+0x1d937]        # 2e5ad <__func__.10421+0x225>
   10c76:	lea    rsi,[rip+0x1d79a]        # 2e417 <__func__.10421+0x8f>
   10c7d:	mov    edi,0x1
   10c82:	mov    ecx,DWORD PTR [rax+rbp*1+0x4]
   10c86:	xor    eax,eax
   10c88:	call   bd50 <__printf_chk@plt>
   10c8d:	mov    rax,QWORD PTR [rsp+0x20]
   10c92:	lea    rdx,[rip+0x1d920]        # 2e5b9 <__func__.10421+0x231>
   10c99:	lea    rsi,[rip+0x1d777]        # 2e417 <__func__.10421+0x8f>
   10ca0:	mov    edi,0x1
   10ca5:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
   10ca9:	xor    eax,eax
   10cab:	call   bd50 <__printf_chk@plt>
   10cb0:	mov    rax,QWORD PTR [rsp+0x20]
   10cb5:	lea    rsi,[rip+0x1d788]        # 2e444 <__func__.10421+0xbc>
   10cbc:	lea    rdx,[rip+0x1d775]        # 2e438 <__func__.10421+0xb0>
   10cc3:	mov    edi,0x1
   10cc8:	mov    ecx,DWORD PTR [rax+rbp*1+0x8]
   10ccc:	mov    eax,0x1
   10cd1:	shl    rax,cl
   10cd4:	mov    rcx,rax
   10cd7:	xor    eax,eax
   10cd9:	sub    rcx,0x1
   10cdd:	call   bd50 <__printf_chk@plt>
   10ce2:	mov    esi,DWORD PTR [rsp+0x18]
   10ce6:	cmp    r12d,esi
   10ce9:	jae    10d37 <main_psr_hwinfo+0x5b7>
   10ceb:	mov    rax,QWORD PTR [rsp+0x20]
   10cf0:	mov    ebp,r12d
   10cf3:	mov    rdi,QWORD PTR [r13+0x0]
   10cf7:	shl    rbp,0x4
   10cfb:	mov    rdx,r14
   10cfe:	mov    esi,DWORD PTR [rax+rbp*1]
   10d01:	call   c450 <libxl_psr_cmt_get_l3_cache_size@plt>
   10d06:	test   eax,eax
   10d08:	mov    rax,QWORD PTR [rsp+0x20]
   10d0d:	mov    ecx,DWORD PTR [rax+rbp*1]
   10d10:	je     10bf8 <main_psr_hwinfo+0x478>
   10d16:	mov    rax,QWORD PTR [rip+0x22a2d3]        # 23aff0 <stderr@GLIBC_2.2.5>
   10d1d:	lea    rdx,[rip+0x1d954]        # 2e678 <__func__.10421+0x2f0>
   10d24:	mov    esi,0x1
   10d29:	mov    rdi,QWORD PTR [rax]
   10d2c:	xor    eax,eax
   10d2e:	call   c1e0 <__fprintf_chk@plt>
   10d33:	mov    esi,DWORD PTR [rsp+0x18]
   10d37:	mov    rdi,QWORD PTR [rsp+0x20]
   10d3c:	call   b510 <libxl_psr_cat_info_list_free@plt>
   10d41:	jmp    10adc <main_psr_hwinfo+0x35c>
   10d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10d50:	mov    rax,QWORD PTR [rip+0x22a299]        # 23aff0 <stderr@GLIBC_2.2.5>
   10d57:	lea    rdi,[rip+0x1d773]        # 2e4d1 <__func__.10421+0x149>
   10d5e:	mov    edx,0x1d
   10d63:	mov    esi,0x1
   10d68:	lea    r14,[rsp+0x1c]
   10d6d:	mov    rcx,QWORD PTR [rax]
   10d70:	call   c1b0 <fwrite@plt>
   10d75:	test   bpl,bpl
   10d78:	je     10847 <main_psr_hwinfo+0xc7>
   10d7e:	jmp    10adc <main_psr_hwinfo+0x35c>
   10d83:	lea    rdi,[rip+0x1d71f]        # 2e4a9 <__func__.10421+0x121>
   10d8a:	call   aeb0 <puts@plt>
   10d8f:	jmp    10a4f <main_psr_hwinfo+0x2cf>
   10d94:	lea    rdi,[rip+0x1d6fe]        # 2e499 <__func__.10421+0x111>
   10d9b:	call   aeb0 <puts@plt>
   10da0:	jmp    10a39 <main_psr_hwinfo+0x2b9>
   10da5:	xor    esi,esi
   10da7:	jmp    10bc3 <main_psr_hwinfo+0x443>
   10dac:	call   b130 <__stack_chk_fail@plt>
   10db1:	nop    WORD PTR cs:[rax+rax*1+0x0]
   10dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010dc0 <main_tmem_list>:
   10dc0:	push   r14
   10dc2:	xor    r14d,r14d
   10dc5:	push   r13
   10dc7:	mov    r13d,0x1
   10dcd:	push   r12
   10dcf:	mov    r12d,edi
   10dd2:	push   rbp
   10dd3:	mov    rbp,rsi
   10dd6:	push   rbx
   10dd7:	xor    ebx,ebx
   10dd9:	nop    DWORD PTR [rax+0x0]
   10de0:	lea    r8,[rip+0x1934f]        # 2a136 <__PRETTY_FUNCTION__.10113+0x51e>
   10de7:	lea    rdx,[rip+0x1dacd]        # 2e8bb <__func__.10421+0x533>
   10dee:	xor    r9d,r9d
   10df1:	xor    ecx,ecx
   10df3:	mov    rsi,rbp
   10df6:	mov    edi,r12d
   10df9:	call   ebe0 <def_getopt>
   10dfe:	cmp    eax,0xffffffff
   10e01:	je     10e20 <main_tmem_list+0x60>
   10e03:	cmp    eax,0x61
   10e06:	je     10e18 <main_tmem_list+0x58>
   10e08:	cmp    eax,0x6c
   10e0b:	cmove  ebx,r13d
   10e0f:	jmp    10de0 <main_tmem_list+0x20>
   10e11:	nop    DWORD PTR [rax+0x0]
   10e18:	mov    r14d,0x1
   10e1e:	jmp    10de0 <main_tmem_list+0x20>
   10e20:	mov    rax,QWORD PTR [rip+0x22a181]        # 23afa8 <optind@GLIBC_2.2.5>
   10e27:	movsxd rax,DWORD PTR [rax]
   10e2a:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   10e2f:	test   rdi,rdi
   10e32:	jne    10e39 <main_tmem_list+0x79>
   10e34:	test   r14d,r14d
   10e37:	je     10e80 <main_tmem_list+0xc0>
   10e39:	test   r14d,r14d
   10e3c:	mov    esi,0xffffffff
   10e41:	je     10ec0 <main_tmem_list+0x100>
   10e43:	lea    rax,[rip+0x22c016]        # 23ce60 <ctx>
   10e4a:	mov    edx,ebx
   10e4c:	mov    rdi,QWORD PTR [rax]
   10e4f:	call   c050 <libxl_tmem_list@plt>
   10e54:	mov    rbx,rax
   10e57:	mov    eax,0x1
   10e5c:	test   rbx,rbx
   10e5f:	je     10e73 <main_tmem_list+0xb3>
   10e61:	mov    rdi,rbx
   10e64:	call   aeb0 <puts@plt>
   10e69:	mov    rdi,rbx
   10e6c:	call   ac40 <free@plt>
   10e71:	xor    eax,eax
   10e73:	pop    rbx
   10e74:	pop    rbp
   10e75:	pop    r12
   10e77:	pop    r13
   10e79:	pop    r14
   10e7b:	ret    
   10e7c:	nop    DWORD PTR [rax+0x0]
   10e80:	mov    rax,QWORD PTR [rip+0x22a169]        # 23aff0 <stderr@GLIBC_2.2.5>
   10e87:	lea    rdi,[rip+0x1da8a]        # 2e918 <__func__.10421+0x590>
   10e8e:	mov    edx,0x25
   10e93:	mov    esi,0x1
   10e98:	mov    rcx,QWORD PTR [rax]
   10e9b:	call   c1b0 <fwrite@plt>
   10ea0:	lea    rdi,[rip+0x1928f]        # 2a136 <__PRETTY_FUNCTION__.10113+0x51e>
   10ea7:	call   d4f0 <help>
   10eac:	pop    rbx
   10ead:	mov    eax,0x1
   10eb2:	pop    rbp
   10eb3:	pop    r12
   10eb5:	pop    r13
   10eb7:	pop    r14
   10eb9:	ret    
   10eba:	nop    WORD PTR [rax+rax*1+0x0]
   10ec0:	call   eb40 <find_domain>
   10ec5:	mov    esi,eax
   10ec7:	jmp    10e43 <main_tmem_list+0x83>
   10ecc:	nop    DWORD PTR [rax+0x0]

0000000000010ed0 <main_tmem_freeze>:
   10ed0:	push   r13
   10ed2:	push   r12
   10ed4:	mov    r13d,0x1
   10eda:	push   rbp
   10edb:	push   rbx
   10edc:	mov    r12d,edi
   10edf:	mov    rbp,rsi
   10ee2:	xor    ebx,ebx
   10ee4:	sub    rsp,0x8
   10ee8:	jmp    10ef7 <main_tmem_freeze+0x27>
   10eea:	nop    WORD PTR [rax+rax*1+0x0]
   10ef0:	cmp    eax,0x61
   10ef3:	cmove  ebx,r13d
   10ef7:	lea    r8,[rip+0x19265]        # 2a163 <__PRETTY_FUNCTION__.10113+0x54b>
   10efe:	lea    rdx,[rip+0x1d9ba]        # 2e8bf <__func__.10421+0x537>
   10f05:	xor    r9d,r9d
   10f08:	xor    ecx,ecx
   10f0a:	mov    rsi,rbp
   10f0d:	mov    edi,r12d
   10f10:	call   ebe0 <def_getopt>
   10f15:	cmp    eax,0xffffffff
   10f18:	jne    10ef0 <main_tmem_freeze+0x20>
   10f1a:	mov    rax,QWORD PTR [rip+0x22a087]        # 23afa8 <optind@GLIBC_2.2.5>
   10f21:	movsxd rax,DWORD PTR [rax]
   10f24:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   10f29:	test   rdi,rdi
   10f2c:	jne    10f33 <main_tmem_freeze+0x63>
   10f2e:	test   bl,0x1
   10f31:	je     10f60 <main_tmem_freeze+0x90>
   10f33:	test   ebx,ebx
   10f35:	mov    esi,0xffffffff
   10f3a:	je     10fa0 <main_tmem_freeze+0xd0>
   10f3c:	lea    rax,[rip+0x22bf1d]        # 23ce60 <ctx>
   10f43:	mov    rdi,QWORD PTR [rax]
   10f46:	call   ba50 <libxl_tmem_freeze@plt>
   10f4b:	add    rsp,0x8
   10f4f:	shr    eax,0x1f
   10f52:	pop    rbx
   10f53:	pop    rbp
   10f54:	pop    r12
   10f56:	pop    r13
   10f58:	ret    
   10f59:	nop    DWORD PTR [rax+0x0]
   10f60:	mov    rax,QWORD PTR [rip+0x22a089]        # 23aff0 <stderr@GLIBC_2.2.5>
   10f67:	lea    rdi,[rip+0x1d9aa]        # 2e918 <__func__.10421+0x590>
   10f6e:	mov    edx,0x25
   10f73:	mov    esi,0x1
   10f78:	mov    rcx,QWORD PTR [rax]
   10f7b:	call   c1b0 <fwrite@plt>
   10f80:	lea    rdi,[rip+0x191dc]        # 2a163 <__PRETTY_FUNCTION__.10113+0x54b>
   10f87:	call   d4f0 <help>
   10f8c:	add    rsp,0x8
   10f90:	mov    eax,0x1
   10f95:	pop    rbx
   10f96:	pop    rbp
   10f97:	pop    r12
   10f99:	pop    r13
   10f9b:	ret    
   10f9c:	nop    DWORD PTR [rax+0x0]
   10fa0:	call   eb40 <find_domain>
   10fa5:	mov    esi,eax
   10fa7:	jmp    10f3c <main_tmem_freeze+0x6c>
   10fa9:	nop    DWORD PTR [rax+0x0]

0000000000010fb0 <main_tmem_thaw>:
   10fb0:	push   r13
   10fb2:	push   r12
   10fb4:	mov    r13d,0x1
   10fba:	push   rbp
   10fbb:	push   rbx
   10fbc:	mov    r12d,edi
   10fbf:	mov    rbp,rsi
   10fc2:	xor    ebx,ebx
   10fc4:	sub    rsp,0x8
   10fc8:	jmp    10fd7 <main_tmem_thaw+0x27>
   10fca:	nop    WORD PTR [rax+rax*1+0x0]
   10fd0:	cmp    eax,0x61
   10fd3:	cmove  ebx,r13d
   10fd7:	lea    r8,[rip+0x191a3]        # 2a181 <__PRETTY_FUNCTION__.10113+0x569>
   10fde:	lea    rdx,[rip+0x1d8da]        # 2e8bf <__func__.10421+0x537>
   10fe5:	xor    r9d,r9d
   10fe8:	xor    ecx,ecx
   10fea:	mov    rsi,rbp
   10fed:	mov    edi,r12d
   10ff0:	call   ebe0 <def_getopt>
   10ff5:	cmp    eax,0xffffffff
   10ff8:	jne    10fd0 <main_tmem_thaw+0x20>
   10ffa:	mov    rax,QWORD PTR [rip+0x229fa7]        # 23afa8 <optind@GLIBC_2.2.5>
   11001:	movsxd rax,DWORD PTR [rax]
   11004:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   11009:	test   rdi,rdi
   1100c:	jne    11013 <main_tmem_thaw+0x63>
   1100e:	test   bl,0x1
   11011:	je     11040 <main_tmem_thaw+0x90>
   11013:	test   ebx,ebx
   11015:	mov    esi,0xffffffff
   1101a:	je     11080 <main_tmem_thaw+0xd0>
   1101c:	lea    rax,[rip+0x22be3d]        # 23ce60 <ctx>
   11023:	mov    rdi,QWORD PTR [rax]
   11026:	call   b220 <libxl_tmem_thaw@plt>
   1102b:	add    rsp,0x8
   1102f:	shr    eax,0x1f
   11032:	pop    rbx
   11033:	pop    rbp
   11034:	pop    r12
   11036:	pop    r13
   11038:	ret    
   11039:	nop    DWORD PTR [rax+0x0]
   11040:	mov    rax,QWORD PTR [rip+0x229fa9]        # 23aff0 <stderr@GLIBC_2.2.5>
   11047:	lea    rdi,[rip+0x1d8ca]        # 2e918 <__func__.10421+0x590>
   1104e:	mov    edx,0x25
   11053:	mov    esi,0x1
   11058:	mov    rcx,QWORD PTR [rax]
   1105b:	call   c1b0 <fwrite@plt>
   11060:	lea    rdi,[rip+0x1911a]        # 2a181 <__PRETTY_FUNCTION__.10113+0x569>
   11067:	call   d4f0 <help>
   1106c:	add    rsp,0x8
   11070:	mov    eax,0x1
   11075:	pop    rbx
   11076:	pop    rbp
   11077:	pop    r12
   11079:	pop    r13
   1107b:	ret    
   1107c:	nop    DWORD PTR [rax+0x0]
   11080:	call   eb40 <find_domain>
   11085:	mov    esi,eax
   11087:	jmp    1101c <main_tmem_thaw+0x6c>
   11089:	nop    DWORD PTR [rax+0x0]

0000000000011090 <main_tmem_set>:
   11090:	push   r15
   11092:	push   r14
   11094:	xor    r15d,r15d
   11097:	push   r13
   11099:	push   r12
   1109b:	xor    r13d,r13d
   1109e:	push   rbp
   1109f:	push   rbx
   110a0:	mov    ebp,edi
   110a2:	mov    rbx,rsi
   110a5:	xor    r12d,r12d
   110a8:	xor    r14d,r14d
   110ab:	sub    rsp,0x18
   110af:	mov    DWORD PTR [rsp+0xc],0x0
   110b7:	mov    DWORD PTR [rsp+0x8],0x0
   110bf:	mov    DWORD PTR [rsp+0x4],0x0
   110c7:	nop    WORD PTR [rax+rax*1+0x0]
   110d0:	lea    r8,[rip+0x190c4]        # 2a19b <__PRETTY_FUNCTION__.10113+0x583>
   110d7:	lea    rdx,[rip+0x1d7e4]        # 2e8c2 <__func__.10421+0x53a>
   110de:	xor    r9d,r9d
   110e1:	xor    ecx,ecx
   110e3:	mov    rsi,rbx
   110e6:	mov    edi,ebp
   110e8:	call   ebe0 <def_getopt>
   110ed:	cmp    eax,0xffffffff
   110f0:	je     11190 <main_tmem_set+0x100>
   110f6:	cmp    eax,0x63
   110f9:	je     11140 <main_tmem_set+0xb0>
   110fb:	jle    11130 <main_tmem_set+0xa0>
   110fd:	cmp    eax,0x70
   11100:	je     11168 <main_tmem_set+0xd8>
   11102:	cmp    eax,0x77
   11105:	jne    110d0 <main_tmem_set+0x40>
   11107:	mov    rax,QWORD PTR [rip+0x229eb2]        # 23afc0 <optarg@GLIBC_2.2.5>
   1110e:	mov    edx,0xa
   11113:	xor    esi,esi
   11115:	mov    r14d,0x1
   1111b:	mov    rdi,QWORD PTR [rax]
   1111e:	call   b7b0 <strtol@plt>
   11123:	mov    DWORD PTR [rsp+0x4],eax
   11127:	jmp    110d0 <main_tmem_set+0x40>
   11129:	nop    DWORD PTR [rax+0x0]
   11130:	cmp    eax,0x61
   11133:	mov    eax,0x1
   11138:	cmove  r12d,eax
   1113c:	jmp    110d0 <main_tmem_set+0x40>
   1113e:	xchg   ax,ax
   11140:	mov    rax,QWORD PTR [rip+0x229e79]        # 23afc0 <optarg@GLIBC_2.2.5>
   11147:	mov    edx,0xa
   1114c:	xor    esi,esi
   1114e:	mov    r15d,0x1
   11154:	mov    rdi,QWORD PTR [rax]
   11157:	call   b7b0 <strtol@plt>
   1115c:	mov    DWORD PTR [rsp+0x8],eax
   11160:	jmp    110d0 <main_tmem_set+0x40>
   11165:	nop    DWORD PTR [rax]
   11168:	mov    rax,QWORD PTR [rip+0x229e51]        # 23afc0 <optarg@GLIBC_2.2.5>
   1116f:	mov    edx,0xa
   11174:	xor    esi,esi
   11176:	mov    r13d,0x1
   1117c:	mov    rdi,QWORD PTR [rax]
   1117f:	call   b7b0 <strtol@plt>
   11184:	mov    DWORD PTR [rsp+0xc],eax
   11188:	jmp    110d0 <main_tmem_set+0x40>
   1118d:	nop    DWORD PTR [rax]
   11190:	mov    rax,QWORD PTR [rip+0x229e11]        # 23afa8 <optind@GLIBC_2.2.5>
   11197:	movsxd rax,DWORD PTR [rax]
   1119a:	mov    rdi,QWORD PTR [rbx+rax*8]
   1119e:	test   rdi,rdi
   111a1:	jne    111a9 <main_tmem_set+0x119>
   111a3:	test   r12b,0x1
   111a7:	je     11208 <main_tmem_set+0x178>
   111a9:	test   r12d,r12d
   111ac:	mov    ebx,0xffffffff
   111b1:	je     11250 <main_tmem_set+0x1c0>
   111b7:	mov    eax,r14d
   111ba:	or     eax,r15d
   111bd:	or     eax,r13d
   111c0:	je     11266 <main_tmem_set+0x1d6>
   111c6:	test   r14d,r14d
   111c9:	jne    112a0 <main_tmem_set+0x210>
   111cf:	test   r15d,r15d
   111d2:	jne    112d0 <main_tmem_set+0x240>
   111d8:	test   r13d,r13d
   111db:	je     1123a <main_tmem_set+0x1aa>
   111dd:	lea    rbp,[rip+0x22bc7c]        # 23ce60 <ctx>
   111e4:	mov    ecx,DWORD PTR [rsp+0xc]
   111e8:	mov    rdi,QWORD PTR [rbp+0x0]
   111ec:	lea    rdx,[rip+0x1d6f6]        # 2e8e9 <__func__.10421+0x561>
   111f3:	mov    esi,ebx
   111f5:	call   c040 <libxl_tmem_set@plt>
   111fa:	shr    eax,0x1f
   111fd:	mov    r13d,eax
   11200:	jmp    1123a <main_tmem_set+0x1aa>
   11202:	nop    WORD PTR [rax+rax*1+0x0]
   11208:	mov    rax,QWORD PTR [rip+0x229de1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1120f:	lea    rdi,[rip+0x1d702]        # 2e918 <__func__.10421+0x590>
   11216:	mov    edx,0x25
   1121b:	mov    esi,0x1
   11220:	mov    r13d,0x1
   11226:	mov    rcx,QWORD PTR [rax]
   11229:	call   c1b0 <fwrite@plt>
   1122e:	lea    rdi,[rip+0x18f66]        # 2a19b <__PRETTY_FUNCTION__.10113+0x583>
   11235:	call   d4f0 <help>
   1123a:	add    rsp,0x18
   1123e:	mov    eax,r13d
   11241:	pop    rbx
   11242:	pop    rbp
   11243:	pop    r12
   11245:	pop    r13
   11247:	pop    r14
   11249:	pop    r15
   1124b:	ret    
   1124c:	nop    DWORD PTR [rax+0x0]
   11250:	call   eb40 <find_domain>
   11255:	mov    ebx,eax
   11257:	mov    eax,r14d
   1125a:	or     eax,r15d
   1125d:	or     eax,r13d
   11260:	jne    111c6 <main_tmem_set+0x136>
   11266:	mov    rax,QWORD PTR [rip+0x229d83]        # 23aff0 <stderr@GLIBC_2.2.5>
   1126d:	lea    rdi,[rip+0x1d657]        # 2e8cb <__func__.10421+0x543>
   11274:	mov    edx,0x19
   11279:	mov    esi,0x1
   1127e:	mov    r13d,0x1
   11284:	mov    rcx,QWORD PTR [rax]
   11287:	call   c1b0 <fwrite@plt>
   1128c:	lea    rdi,[rip+0x18f08]        # 2a19b <__PRETTY_FUNCTION__.10113+0x583>
   11293:	call   d4f0 <help>
   11298:	jmp    1123a <main_tmem_set+0x1aa>
   1129a:	nop    WORD PTR [rax+rax*1+0x0]
   112a0:	lea    rbp,[rip+0x22bbb9]        # 23ce60 <ctx>
   112a7:	mov    ecx,DWORD PTR [rsp+0x4]
   112ab:	lea    rdx,[rip+0x1dee7]        # 2f199 <__func__.10421+0xe11>
   112b2:	mov    esi,ebx
   112b4:	mov    rdi,QWORD PTR [rbp+0x0]
   112b8:	call   c040 <libxl_tmem_set@plt>
   112bd:	test   r15d,r15d
   112c0:	jne    112d7 <main_tmem_set+0x247>
   112c2:	test   r13d,r13d
   112c5:	je     111fa <main_tmem_set+0x16a>
   112cb:	jmp    111e4 <main_tmem_set+0x154>
   112d0:	lea    rbp,[rip+0x22bb89]        # 23ce60 <ctx>
   112d7:	mov    ecx,DWORD PTR [rsp+0x8]
   112db:	mov    rdi,QWORD PTR [rbp+0x0]
   112df:	lea    rdx,[rip+0x1d5ff]        # 2e8e5 <__func__.10421+0x55d>
   112e6:	mov    esi,ebx
   112e8:	call   c040 <libxl_tmem_set@plt>
   112ed:	jmp    112c2 <main_tmem_set+0x232>
   112ef:	nop

00000000000112f0 <main_tmem_shared_auth>:
   112f0:	push   r14
   112f2:	push   r13
   112f4:	xor    r14d,r14d
   112f7:	push   r12
   112f9:	push   rbp
   112fa:	xor    r12d,r12d
   112fd:	push   rbx
   112fe:	mov    ebp,edi
   11300:	mov    rbx,rsi
   11303:	xor    r13d,r13d
   11306:	sub    rsp,0x10
   1130a:	mov    rax,QWORD PTR fs:0x28
   11313:	mov    QWORD PTR [rsp+0x8],rax
   11318:	xor    eax,eax
   1131a:	mov    QWORD PTR [rsp],0x0
   11322:	nop    WORD PTR [rax+rax*1+0x0]
   11328:	lea    r8,[rip+0x18e8a]        # 2a1b9 <__PRETTY_FUNCTION__.10113+0x5a1>
   1132f:	lea    rdx,[rip+0x1d5bc]        # 2e8f2 <__func__.10421+0x56a>
   11336:	xor    r9d,r9d
   11339:	xor    ecx,ecx
   1133b:	mov    rsi,rbx
   1133e:	mov    edi,ebp
   11340:	call   ebe0 <def_getopt>
   11345:	cmp    eax,0xffffffff
   11348:	je     11380 <main_tmem_shared_auth+0x90>
   1134a:	cmp    eax,0x61
   1134d:	je     11378 <main_tmem_shared_auth+0x88>
   1134f:	cmp    eax,0x75
   11352:	je     11368 <main_tmem_shared_auth+0x78>
   11354:	cmp    eax,0x41
   11357:	jne    11328 <main_tmem_shared_auth+0x38>
   11359:	mov    rax,QWORD PTR [rip+0x229c60]        # 23afc0 <optarg@GLIBC_2.2.5>
   11360:	mov    r13,QWORD PTR [rax]
   11363:	jmp    11328 <main_tmem_shared_auth+0x38>
   11365:	nop    DWORD PTR [rax]
   11368:	mov    rax,QWORD PTR [rip+0x229c51]        # 23afc0 <optarg@GLIBC_2.2.5>
   1136f:	mov    r14,QWORD PTR [rax]
   11372:	jmp    11328 <main_tmem_shared_auth+0x38>
   11374:	nop    DWORD PTR [rax+0x0]
   11378:	mov    r12d,0x1
   1137e:	jmp    11328 <main_tmem_shared_auth+0x38>
   11380:	mov    rax,QWORD PTR [rip+0x229c21]        # 23afa8 <optind@GLIBC_2.2.5>
   11387:	movsxd rax,DWORD PTR [rax]
   1138a:	mov    rdi,QWORD PTR [rbx+rax*8]
   1138e:	test   rdi,rdi
   11391:	jne    11398 <main_tmem_shared_auth+0xa8>
   11393:	test   r12d,r12d
   11396:	je     11410 <main_tmem_shared_auth+0x120>
   11398:	test   r12d,r12d
   1139b:	mov    ebx,0xffffffff
   113a0:	je     11448 <main_tmem_shared_auth+0x158>
   113a6:	test   r14,r14
   113a9:	je     11460 <main_tmem_shared_auth+0x170>
   113af:	test   r13,r13
   113b2:	je     11460 <main_tmem_shared_auth+0x170>
   113b8:	mov    edx,0xa
   113bd:	mov    rsi,rsp
   113c0:	mov    rdi,r13
   113c3:	call   b7b0 <strtol@plt>
   113c8:	mov    rdx,QWORD PTR [rsp]
   113cc:	cmp    BYTE PTR [rdx],0x0
   113cf:	jne    114a0 <main_tmem_shared_auth+0x1b0>
   113d5:	mov    ecx,eax
   113d7:	lea    rax,[rip+0x22ba82]        # 23ce60 <ctx>
   113de:	mov    rdx,r14
   113e1:	mov    esi,ebx
   113e3:	mov    rdi,QWORD PTR [rax]
   113e6:	call   c170 <libxl_tmem_shared_auth@plt>
   113eb:	shr    eax,0x1f
   113ee:	mov    rcx,QWORD PTR [rsp+0x8]
   113f3:	xor    rcx,QWORD PTR fs:0x28
   113fc:	jne    114ca <main_tmem_shared_auth+0x1da>
   11402:	add    rsp,0x10
   11406:	pop    rbx
   11407:	pop    rbp
   11408:	pop    r12
   1140a:	pop    r13
   1140c:	pop    r14
   1140e:	ret    
   1140f:	nop
   11410:	mov    rax,QWORD PTR [rip+0x229bd9]        # 23aff0 <stderr@GLIBC_2.2.5>
   11417:	lea    rdi,[rip+0x1d4fa]        # 2e918 <__func__.10421+0x590>
   1141e:	mov    edx,0x25
   11423:	mov    esi,0x1
   11428:	mov    rcx,QWORD PTR [rax]
   1142b:	call   c1b0 <fwrite@plt>
   11430:	lea    rdi,[rip+0x18d82]        # 2a1b9 <__PRETTY_FUNCTION__.10113+0x5a1>
   11437:	call   d4f0 <help>
   1143c:	mov    eax,0x1
   11441:	jmp    113ee <main_tmem_shared_auth+0xfe>
   11443:	nop    DWORD PTR [rax+rax*1+0x0]
   11448:	call   eb40 <find_domain>
   1144d:	test   r14,r14
   11450:	mov    ebx,eax
   11452:	jne    113af <main_tmem_shared_auth+0xbf>
   11458:	nop    DWORD PTR [rax+rax*1+0x0]
   11460:	mov    rax,QWORD PTR [rip+0x229b89]        # 23aff0 <stderr@GLIBC_2.2.5>
   11467:	lea    rdi,[rip+0x1d48b]        # 2e8f9 <__func__.10421+0x571>
   1146e:	mov    edx,0x1c
   11473:	mov    esi,0x1
   11478:	mov    rcx,QWORD PTR [rax]
   1147b:	call   c1b0 <fwrite@plt>
   11480:	lea    rdi,[rip+0x18d32]        # 2a1b9 <__PRETTY_FUNCTION__.10113+0x5a1>
   11487:	call   d4f0 <help>
   1148c:	mov    eax,0x1
   11491:	jmp    113ee <main_tmem_shared_auth+0xfe>
   11496:	nop    WORD PTR cs:[rax+rax*1+0x0]
   114a0:	mov    rax,QWORD PTR [rip+0x229b49]        # 23aff0 <stderr@GLIBC_2.2.5>
   114a7:	lea    rdi,[rip+0x1d492]        # 2e940 <__func__.10421+0x5b8>
   114ae:	mov    edx,0x25
   114b3:	mov    esi,0x1
   114b8:	mov    rcx,QWORD PTR [rax]
   114bb:	call   c1b0 <fwrite@plt>
   114c0:	mov    eax,0x1
   114c5:	jmp    113ee <main_tmem_shared_auth+0xfe>
   114ca:	call   b130 <__stack_chk_fail@plt>
   114cf:	nop

00000000000114d0 <main_tmem_freeable>:
   114d0:	push   r12
   114d2:	push   rbp
   114d3:	mov    r12d,edi
   114d6:	push   rbx
   114d7:	lea    rbx,[rip+0x18cec]        # 2a1ca <__PRETTY_FUNCTION__.10113+0x5b2>
   114de:	mov    rbp,rsi
   114e1:	nop    DWORD PTR [rax+0x0]
   114e8:	lea    rdx,[rip+0x20253]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   114ef:	xor    r9d,r9d
   114f2:	xor    ecx,ecx
   114f4:	mov    r8,rbx
   114f7:	mov    rsi,rbp
   114fa:	mov    edi,r12d
   114fd:	call   ebe0 <def_getopt>
   11502:	cmp    eax,0xffffffff
   11505:	jne    114e8 <main_tmem_freeable+0x18>
   11507:	lea    rax,[rip+0x22b952]        # 23ce60 <ctx>
   1150e:	mov    rdi,QWORD PTR [rax]
   11511:	call   b710 <libxl_tmem_freeable@plt>
   11516:	cmp    eax,0xffffffff
   11519:	mov    ecx,0x1
   1151e:	je     11537 <main_tmem_freeable+0x67>
   11520:	lea    rsi,[rip+0x21655]        # 32b7c <__PRETTY_FUNCTION__.10016+0x1aec>
   11527:	mov    edx,eax
   11529:	mov    edi,0x1
   1152e:	xor    eax,eax
   11530:	call   bd50 <__printf_chk@plt>
   11535:	xor    ecx,ecx
   11537:	pop    rbx
   11538:	mov    eax,ecx
   1153a:	pop    rbp
   1153b:	pop    r12
   1153d:	ret    
   1153e:	xchg   ax,ax

0000000000011540 <parse_action_on_shutdown>:
   11540:	push   r13
   11542:	push   r12
   11544:	mov    r13,rsi
   11547:	push   rbp
   11548:	push   rbx
   11549:	mov    r12,rdi
   1154c:	mov    ebx,0x1
   11551:	lea    rbp,[rip+0x2289c8]        # 239f20 <action_on_shutdown_names>
   11558:	sub    rsp,0x8
   1155c:	jmp    1157a <parse_action_on_shutdown+0x3a>
   1155e:	xchg   ax,ax
   11560:	mov    rsi,QWORD PTR [rbp+rbx*8+0x0]
   11565:	test   rsi,rsi
   11568:	je     11576 <parse_action_on_shutdown+0x36>
   1156a:	mov    rdi,r12
   1156d:	call   b650 <strcmp@plt>
   11572:	test   eax,eax
   11574:	je     11590 <parse_action_on_shutdown+0x50>
   11576:	add    rbx,0x1
   1157a:	cmp    rbx,0x8
   1157e:	jne    11560 <parse_action_on_shutdown+0x20>
   11580:	add    rsp,0x8
   11584:	xor    eax,eax
   11586:	pop    rbx
   11587:	pop    rbp
   11588:	pop    r12
   1158a:	pop    r13
   1158c:	ret    
   1158d:	nop    DWORD PTR [rax]
   11590:	mov    DWORD PTR [r13+0x0],ebx
   11594:	add    rsp,0x8
   11598:	mov    eax,0x1
   1159d:	pop    rbx
   1159e:	pop    rbp
   1159f:	pop    r12
   115a1:	pop    r13
   115a3:	ret    
   115a4:	xchg   ax,ax
   115a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000115b0 <parse_top_level_sdl_options>:
   115b0:	push   rbp
   115b1:	push   rbx
   115b2:	mov    rdx,rsi
   115b5:	mov    rbx,rsi
   115b8:	lea    rsi,[rip+0x1d3a7]        # 2e966 <__func__.10421+0x5de>
   115bf:	xor    ecx,ecx
   115c1:	sub    rsp,0x8
   115c5:	mov    rbp,rdi
   115c8:	call   be20 <xlu_cfg_get_defbool@plt>
   115cd:	lea    rdx,[rbx+0x4]
   115d1:	lea    rsi,[rip+0x1d392]        # 2e96a <__func__.10421+0x5e2>
   115d8:	mov    rdi,rbp
   115db:	xor    ecx,ecx
   115dd:	call   be20 <xlu_cfg_get_defbool@plt>
   115e2:	lea    rdx,[rbx+0x8]
   115e6:	lea    rsi,[rip+0x1d3aa]        # 2e997 <__func__.10421+0x60f>
   115ed:	mov    rdi,rbp
   115f0:	xor    ecx,ecx
   115f2:	call   c230 <xlu_cfg_replace_string@plt>
   115f7:	add    rsp,0x8
   115fb:	lea    rdx,[rbx+0x10]
   115ff:	mov    rdi,rbp
   11602:	pop    rbx
   11603:	pop    rbp
   11604:	lea    rsi,[rip+0x1d366]        # 2e971 <__func__.10421+0x5e9>
   1160b:	xor    ecx,ecx
   1160d:	jmp    c230 <xlu_cfg_replace_string@plt>
   11612:	nop    DWORD PTR [rax+0x0]
   11616:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011620 <parse_top_level_vnc_options>:
   11620:	push   rbp
   11621:	push   rbx
   11622:	mov    rdx,rsi
   11625:	mov    rbx,rsi
   11628:	lea    rsi,[rip+0x1d34d]        # 2e97c <__func__.10421+0x5f4>
   1162f:	xor    ecx,ecx
   11631:	sub    rsp,0x18
   11635:	mov    rbp,rdi
   11638:	mov    rax,QWORD PTR fs:0x28
   11641:	mov    QWORD PTR [rsp+0x8],rax
   11646:	xor    eax,eax
   11648:	call   be20 <xlu_cfg_get_defbool@plt>
   1164d:	lea    rdx,[rbx+0x8]
   11651:	lea    rsi,[rip+0x1d328]        # 2e980 <__func__.10421+0x5f8>
   11658:	xor    ecx,ecx
   1165a:	mov    rdi,rbp
   1165d:	call   c230 <xlu_cfg_replace_string@plt>
   11662:	lea    rdx,[rbx+0x10]
   11666:	lea    rsi,[rip+0x1d31d]        # 2e98a <__func__.10421+0x602>
   1166d:	xor    ecx,ecx
   1166f:	mov    rdi,rbp
   11672:	call   c230 <xlu_cfg_replace_string@plt>
   11677:	lea    rsi,[rip+0x1d316]        # 2e994 <__func__.10421+0x60c>
   1167e:	xor    ecx,ecx
   11680:	mov    rdx,rsp
   11683:	mov    rdi,rbp
   11686:	call   b2c0 <xlu_cfg_get_long@plt>
   1168b:	test   eax,eax
   1168d:	jne    11696 <parse_top_level_vnc_options+0x76>
   1168f:	mov    rax,QWORD PTR [rsp]
   11693:	mov    DWORD PTR [rbx+0x18],eax
   11696:	lea    rdx,[rbx+0x1c]
   1169a:	lea    rsi,[rip+0x1d2fe]        # 2e99f <__func__.10421+0x617>
   116a1:	xor    ecx,ecx
   116a3:	mov    rdi,rbp
   116a6:	call   be20 <xlu_cfg_get_defbool@plt>
   116ab:	mov    rax,QWORD PTR [rsp+0x8]
   116b0:	xor    rax,QWORD PTR fs:0x28
   116b9:	jne    116c2 <parse_top_level_vnc_options+0xa2>
   116bb:	add    rsp,0x18
   116bf:	pop    rbx
   116c0:	pop    rbp
   116c1:	ret    
   116c2:	call   b130 <__stack_chk_fail@plt>
   116c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000116d0 <parse_ulong>:
   116d0:	push   rbx
   116d1:	mov    edx,0xa
   116d6:	mov    rbx,rdi
   116d9:	sub    rsp,0x10
   116dd:	mov    rsi,rsp
   116e0:	mov    rax,QWORD PTR fs:0x28
   116e9:	mov    QWORD PTR [rsp+0x8],rax
   116ee:	xor    eax,eax
   116f0:	call   c090 <strtoul@plt>
   116f5:	cmp    QWORD PTR [rsp],rbx
   116f9:	je     11717 <parse_ulong+0x47>
   116fb:	cmp    rax,0xffffffffffffffff
   116ff:	je     11717 <parse_ulong+0x47>
   11701:	mov    rcx,QWORD PTR [rsp+0x8]
   11706:	xor    rcx,QWORD PTR fs:0x28
   1170f:	jne    11741 <parse_ulong+0x71>
   11711:	add    rsp,0x10
   11715:	pop    rbx
   11716:	ret    
   11717:	mov    rax,QWORD PTR [rip+0x2298d2]        # 23aff0 <stderr@GLIBC_2.2.5>
   1171e:	lea    rdx,[rip+0x1e0eb]        # 2f810 <__func__.10421+0x1488>
   11725:	mov    rcx,rbx
   11728:	mov    esi,0x1
   1172d:	mov    rdi,QWORD PTR [rax]
   11730:	xor    eax,eax
   11732:	call   c1e0 <__fprintf_chk@plt>
   11737:	mov    edi,0x1
   1173c:	call   c1a0 <exit@plt>
   11741:	call   b130 <__stack_chk_fail@plt>
   11746:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011750 <get_action_on_shutdown_name>:
   11750:	lea    rax,[rip+0x2287c9]        # 239f20 <action_on_shutdown_names>
   11757:	mov    edi,edi
   11759:	mov    rax,QWORD PTR [rax+rdi*8]
   1175d:	ret    
   1175e:	xchg   ax,ax

0000000000011760 <parse_disk_config_multistring>:
   11760:	push   r13
   11762:	push   r12
   11764:	mov    r13,rdx
   11767:	push   rbp
   11768:	push   rbx
   11769:	mov    rbp,rdi
   1176c:	mov    rdi,rcx
   1176f:	mov    r12d,esi
   11772:	mov    rbx,rcx
   11775:	sub    rsp,0x8
   11779:	call   be50 <libxl_device_disk_init@plt>
   1177e:	mov    rdi,QWORD PTR [rbp+0x0]
   11782:	test   rdi,rdi
   11785:	je     117b0 <parse_disk_config_multistring+0x50>
   11787:	mov    rcx,rbx
   1178a:	mov    rdx,r13
   1178d:	mov    esi,r12d
   11790:	call   c4a0 <xlu_disk_parse@plt>
   11795:	cmp    eax,0x16
   11798:	je     11812 <parse_disk_config_multistring+0xb2>
   1179a:	test   eax,eax
   1179c:	jne    117e6 <parse_disk_config_multistring+0x86>
   1179e:	add    rsp,0x8
   117a2:	pop    rbx
   117a3:	pop    rbp
   117a4:	pop    r12
   117a6:	pop    r13
   117a8:	ret    
   117a9:	nop    DWORD PTR [rax+0x0]
   117b0:	mov    rax,QWORD PTR [rip+0x229839]        # 23aff0 <stderr@GLIBC_2.2.5>
   117b7:	lea    rsi,[rip+0x1d1eb]        # 2e9a9 <__func__.10421+0x621>
   117be:	mov    rdi,QWORD PTR [rax]
   117c1:	call   b270 <xlu_cfg_init@plt>
   117c6:	test   rax,rax
   117c9:	mov    rdi,rax
   117cc:	mov    QWORD PTR [rbp+0x0],rax
   117d0:	jne    11787 <parse_disk_config_multistring+0x27>
   117d2:	lea    rdi,[rip+0x1d1dd]        # 2e9b6 <__func__.10421+0x62e>
   117d9:	call   bfd0 <perror@plt>
   117de:	or     edi,0xffffffff
   117e1:	call   c1a0 <exit@plt>
   117e6:	call   ad80 <__errno_location@plt>
   117eb:	mov    edi,DWORD PTR [rax]
   117ed:	call   c3b0 <strerror@plt>
   117f2:	mov    rcx,rax
   117f5:	mov    rax,QWORD PTR [rip+0x2297f4]        # 23aff0 <stderr@GLIBC_2.2.5>
   117fc:	lea    rdx,[rip+0x1d1c0]        # 2e9c3 <__func__.10421+0x63b>
   11803:	mov    esi,0x1
   11808:	mov    rdi,QWORD PTR [rax]
   1180b:	xor    eax,eax
   1180d:	call   c1e0 <__fprintf_chk@plt>
   11812:	mov    edi,0x1
   11817:	call   c1a0 <exit@plt>
   1181c:	nop    DWORD PTR [rax+0x0]

0000000000011820 <parse_disk_config>:
   11820:	sub    rsp,0x18
   11824:	mov    rcx,rdx
   11827:	lea    rax,[rsp+0x8]
   1182c:	mov    QWORD PTR [rsp+0x8],rsi
   11831:	mov    esi,0x1
   11836:	mov    rdx,rax
   11839:	call   11760 <parse_disk_config_multistring>
   1183e:	add    rsp,0x18
   11842:	ret    
   11843:	nop    DWORD PTR [rax]
   11846:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011850 <parse_range>:
   11850:	push   r13
   11852:	push   r12
   11854:	mov    r13,rsi
   11857:	push   rbp
   11858:	push   rbx
   11859:	mov    rbp,rdx
   1185c:	mov    edx,0xa
   11861:	mov    rbx,rdi
   11864:	sub    rsp,0x18
   11868:	mov    r12,rsp
   1186b:	mov    rsi,r12
   1186e:	mov    rax,QWORD PTR fs:0x28
   11877:	mov    QWORD PTR [rsp+0x8],rax
   1187c:	xor    eax,eax
   1187e:	call   c090 <strtoul@plt>
   11883:	cmp    rax,0xffffffffffffffff
   11887:	mov    QWORD PTR [rbp+0x0],rax
   1188b:	mov    rdi,QWORD PTR [rsp]
   1188f:	mov    QWORD PTR [r13+0x0],rax
   11893:	je     118e0 <parse_range+0x90>
   11895:	cmp    rdi,rbx
   11898:	je     118e0 <parse_range+0x90>
   1189a:	movzx  eax,BYTE PTR [rdi]
   1189d:	cmp    al,0x2d
   1189f:	je     118b0 <parse_range+0x60>
   118a1:	test   al,al
   118a3:	setne  al
   118a6:	movzx  eax,al
   118a9:	jmp    118e5 <parse_range+0x95>
   118ab:	nop    DWORD PTR [rax+rax*1+0x0]
   118b0:	lea    rbx,[rdi+0x1]
   118b4:	mov    edx,0xa
   118b9:	mov    rsi,r12
   118bc:	mov    rdi,rbx
   118bf:	call   c090 <strtoul@plt>
   118c4:	cmp    rax,0xffffffffffffffff
   118c8:	mov    QWORD PTR [rbp+0x0],rax
   118cc:	mov    rdx,QWORD PTR [rsp]
   118d0:	je     118e0 <parse_range+0x90>
   118d2:	cmp    rdx,rbx
   118d5:	je     118e0 <parse_range+0x90>
   118d7:	cmp    rax,QWORD PTR [r13+0x0]
   118db:	jae    11900 <parse_range+0xb0>
   118dd:	nop    DWORD PTR [rax]
   118e0:	mov    eax,0x1
   118e5:	mov    rcx,QWORD PTR [rsp+0x8]
   118ea:	xor    rcx,QWORD PTR fs:0x28
   118f3:	jne    11905 <parse_range+0xb5>
   118f5:	add    rsp,0x18
   118f9:	pop    rbx
   118fa:	pop    rbp
   118fb:	pop    r12
   118fd:	pop    r13
   118ff:	ret    
   11900:	movzx  eax,BYTE PTR [rdx]
   11903:	jmp    118a1 <parse_range+0x51>
   11905:	call   b130 <__stack_chk_fail@plt>
   1190a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000011910 <parse_cpurange>:
   11910:	push   r15
   11912:	push   r14
   11914:	push   r13
   11916:	push   r12
   11918:	mov    r12,rsi
   1191b:	push   rbp
   1191c:	push   rbx
   1191d:	sub    rsp,0x68
   11921:	mov    rax,QWORD PTR fs:0x28
   1192a:	mov    QWORD PTR [rsp+0x58],rax
   1192f:	xor    eax,eax
   11931:	mov    QWORD PTR [rsp+0x28],0x0
   1193a:	call   ea80 <xstrdup>
   1193f:	lea    rcx,[rsp+0x28]
   11944:	lea    rsi,[rip+0x1c7a0]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   1194b:	mov    rdi,rax
   1194e:	mov    QWORD PTR [rsp+0x18],rax
   11953:	mov    rdx,rcx
   11956:	mov    QWORD PTR [rsp+0x8],rcx
   1195b:	call   b580 <strtok_r@plt>
   11960:	test   rax,rax
   11963:	je     11bb0 <parse_cpurange+0x2a0>
   11969:	mov    r14,rax
   1196c:	lea    rax,[rsp+0x38]
   11971:	lea    rbx,[rsp+0x40]
   11976:	mov    QWORD PTR [rsp+0x10],rax
   1197b:	jmp    119eb <parse_cpurange+0xdb>
   1197d:	nop    DWORD PTR [rax]
   11980:	add    r14,0x5
   11984:	mov    r13d,0x1
   1198a:	lea    rdi,[rip+0x1c76a]        # 2e0fb <__PRETTY_FUNCTION__.10113+0x44e3>
   11991:	mov    ecx,0x4
   11996:	mov    rsi,r14
   11999:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1199b:	seta   al
   1199e:	sbb    al,0x0
   119a0:	test   al,al
   119a2:	jne    11ad0 <parse_cpurange+0x1c0>
   119a8:	test   bpl,bpl
   119ab:	jne    11c0d <parse_cpurange+0x2fd>
   119b1:	mov    edx,DWORD PTR [r12]
   119b5:	mov    rdi,QWORD PTR [r12+0x8]
   119ba:	mov    esi,0xffffffff
   119bf:	call   b400 <memset@plt>
   119c4:	mov    rdi,rbx
   119c7:	call   bdb0 <libxl_bitmap_dispose@plt>
   119cc:	mov    rdx,QWORD PTR [rsp+0x8]
   119d1:	lea    rsi,[rip+0x1c713]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   119d8:	xor    edi,edi
   119da:	call   b580 <strtok_r@plt>
   119df:	test   rax,rax
   119e2:	mov    r14,rax
   119e5:	je     11bb0 <parse_cpurange+0x2a0>
   119eb:	mov    rdi,rbx
   119ee:	call   bc00 <libxl_bitmap_init@plt>
   119f3:	lea    rax,[rip+0x22b466]        # 23ce60 <ctx>
   119fa:	xor    edx,edx
   119fc:	mov    rsi,rbx
   119ff:	mov    rdi,QWORD PTR [rax]
   11a02:	call   afe0 <libxl_node_bitmap_alloc@plt>
   11a07:	test   eax,eax
   11a09:	mov    r15d,eax
   11a0c:	jne    11a70 <parse_cpurange+0x160>
   11a0e:	xor    ebp,ebp
   11a10:	cmp    BYTE PTR [r14],0x5e
   11a14:	jne    11a1f <parse_cpurange+0x10f>
   11a16:	add    r14,0x1
   11a1a:	mov    ebp,0x1
   11a1f:	lea    rdi,[rip+0x1cfb8]        # 2e9de <__func__.10421+0x656>
   11a26:	mov    ecx,0x5
   11a2b:	mov    rsi,r14
   11a2e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   11a30:	seta   al
   11a33:	sbb    al,0x0
   11a35:	test   al,al
   11a37:	je     11980 <parse_cpurange+0x70>
   11a3d:	lea    rdi,[rip+0x1cfa0]        # 2e9e4 <__func__.10421+0x65c>
   11a44:	mov    ecx,0x6
   11a49:	mov    rsi,r14
   11a4c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   11a4e:	seta   al
   11a51:	sbb    al,0x0
   11a53:	xor    r13d,r13d
   11a56:	test   al,al
   11a58:	jne    1198a <parse_cpurange+0x7a>
   11a5e:	add    r14,0x6
   11a62:	mov    r13d,0x1
   11a68:	jmp    1198a <parse_cpurange+0x7a>
   11a6d:	nop    DWORD PTR [rax]
   11a70:	mov    rax,QWORD PTR [rip+0x229579]        # 23aff0 <stderr@GLIBC_2.2.5>
   11a77:	lea    rdi,[rip+0x1ddba]        # 2f838 <__func__.10421+0x14b0>
   11a7e:	mov    edx,0x20
   11a83:	mov    esi,0x1
   11a88:	mov    rcx,QWORD PTR [rax]
   11a8b:	call   c1b0 <fwrite@plt>
   11a90:	mov    rdi,rbx
   11a93:	call   bdb0 <libxl_bitmap_dispose@plt>
   11a98:	mov    rdi,QWORD PTR [rsp+0x18]
   11a9d:	call   ac40 <free@plt>
   11aa2:	mov    rdx,QWORD PTR [rsp+0x58]
   11aa7:	xor    rdx,QWORD PTR fs:0x28
   11ab0:	mov    eax,r15d
   11ab3:	jne    11c40 <parse_cpurange+0x330>
   11ab9:	add    rsp,0x68
   11abd:	pop    rbx
   11abe:	pop    rbp
   11abf:	pop    r12
   11ac1:	pop    r13
   11ac3:	pop    r14
   11ac5:	pop    r15
   11ac7:	ret    
   11ac8:	nop    DWORD PTR [rax+rax*1+0x0]
   11ad0:	mov    rdx,QWORD PTR [rsp+0x10]
   11ad5:	lea    rsi,[rsp+0x30]
   11ada:	mov    rdi,r14
   11add:	call   11850 <parse_range>
   11ae2:	test   eax,eax
   11ae4:	mov    r15d,eax
   11ae7:	jne    11bc0 <parse_cpurange+0x2b0>
   11aed:	mov    rsi,QWORD PTR [rsp+0x30]
   11af2:	cmp    rsi,QWORD PTR [rsp+0x38]
   11af7:	jbe    11b1e <parse_cpurange+0x20e>
   11af9:	jmp    11ba0 <parse_cpurange+0x290>
   11afe:	xchg   ax,ax
   11b00:	call   ace0 <libxl_bitmap_reset@plt>
   11b05:	mov    rax,QWORD PTR [rsp+0x30]
   11b0a:	lea    rsi,[rax+0x1]
   11b0e:	cmp    rsi,QWORD PTR [rsp+0x38]
   11b13:	mov    QWORD PTR [rsp+0x30],rsi
   11b18:	ja     11ba0 <parse_cpurange+0x290>
   11b1e:	test   r13b,r13b
   11b21:	jne    11b38 <parse_cpurange+0x228>
   11b23:	test   bpl,bpl
   11b26:	mov    rdi,r12
   11b29:	jne    11b00 <parse_cpurange+0x1f0>
   11b2b:	call   b7d0 <libxl_bitmap_set@plt>
   11b30:	jmp    11b05 <parse_cpurange+0x1f5>
   11b32:	nop    WORD PTR [rax+rax*1+0x0]
   11b38:	lea    rax,[rip+0x22b321]        # 23ce60 <ctx>
   11b3f:	mov    rdx,rbx
   11b42:	mov    rdi,QWORD PTR [rax]
   11b45:	call   ad90 <libxl_node_to_cpumap@plt>
   11b4a:	test   eax,eax
   11b4c:	mov    r15d,eax
   11b4f:	jne    11be8 <parse_cpurange+0x2d8>
   11b55:	mov    eax,DWORD PTR [rsp+0x40]
   11b59:	shl    eax,0x3
   11b5c:	test   eax,eax
   11b5e:	jne    11b7d <parse_cpurange+0x26d>
   11b60:	jmp    11b05 <parse_cpurange+0x1f5>
   11b62:	nop    WORD PTR [rax+rax*1+0x0]
   11b68:	call   ace0 <libxl_bitmap_reset@plt>
   11b6d:	mov    eax,DWORD PTR [rsp+0x40]
   11b71:	add    r15d,0x1
   11b75:	shl    eax,0x3
   11b78:	cmp    eax,r15d
   11b7b:	jbe    11b05 <parse_cpurange+0x1f5>
   11b7d:	mov    esi,r15d
   11b80:	mov    rdi,rbx
   11b83:	call   be30 <libxl_bitmap_test@plt>
   11b88:	test   eax,eax
   11b8a:	je     11b6d <parse_cpurange+0x25d>
   11b8c:	test   bpl,bpl
   11b8f:	mov    esi,r15d
   11b92:	mov    rdi,r12
   11b95:	jne    11b68 <parse_cpurange+0x258>
   11b97:	call   b7d0 <libxl_bitmap_set@plt>
   11b9c:	jmp    11b6d <parse_cpurange+0x25d>
   11b9e:	xchg   ax,ax
   11ba0:	mov    rdi,rbx
   11ba3:	call   bdb0 <libxl_bitmap_dispose@plt>
   11ba8:	jmp    119cc <parse_cpurange+0xbc>
   11bad:	nop    DWORD PTR [rax]
   11bb0:	xor    r15d,r15d
   11bb3:	jmp    11a98 <parse_cpurange+0x188>
   11bb8:	nop    DWORD PTR [rax+rax*1+0x0]
   11bc0:	mov    rax,QWORD PTR [rip+0x229429]        # 23aff0 <stderr@GLIBC_2.2.5>
   11bc7:	lea    rdx,[rip+0x1ce3b]        # 2ea09 <__func__.10421+0x681>
   11bce:	mov    rcx,r14
   11bd1:	mov    esi,0x1
   11bd6:	mov    rdi,QWORD PTR [rax]
   11bd9:	xor    eax,eax
   11bdb:	call   c1e0 <__fprintf_chk@plt>
   11be0:	jmp    11a90 <parse_cpurange+0x180>
   11be5:	nop    DWORD PTR [rax]
   11be8:	mov    rax,QWORD PTR [rip+0x229401]        # 23aff0 <stderr@GLIBC_2.2.5>
   11bef:	lea    rdi,[rip+0x1ce2c]        # 2ea22 <__func__.10421+0x69a>
   11bf6:	mov    edx,0x1d
   11bfb:	mov    esi,0x1
   11c00:	mov    rcx,QWORD PTR [rax]
   11c03:	call   c1b0 <fwrite@plt>
   11c08:	jmp    11a90 <parse_cpurange+0x180>
   11c0d:	mov    rax,QWORD PTR [rip+0x2293dc]        # 23aff0 <stderr@GLIBC_2.2.5>
   11c14:	lea    rdi,[rip+0x1cdd0]        # 2e9eb <__func__.10421+0x663>
   11c1b:	mov    edx,0x1d
   11c20:	mov    esi,0x1
   11c25:	mov    r15d,0xfffffffa
   11c2b:	mov    rcx,QWORD PTR [rax]
   11c2e:	call   c1b0 <fwrite@plt>
   11c33:	mov    rdi,rbx
   11c36:	call   bdb0 <libxl_bitmap_dispose@plt>
   11c3b:	jmp    11a98 <parse_cpurange+0x188>
   11c40:	call   b130 <__stack_chk_fail@plt>
   11c45:	nop
   11c46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011c50 <parse_vcpu_affinity>:
   11c50:	push   r15
   11c52:	push   r14
   11c54:	mov    r15d,r8d
   11c57:	push   r13
   11c59:	push   r12
   11c5b:	mov    r14,rsi
   11c5e:	push   rbp
   11c5f:	push   rbx
   11c60:	mov    r12,rdi
   11c63:	mov    rbx,rdx
   11c66:	sub    rsp,0x8
   11c6a:	test   rdx,rdx
   11c6d:	mov    r13d,DWORD PTR [rdi]
   11c70:	je     11de0 <parse_vcpu_affinity+0x190>
   11c76:	movsxd rdi,r13d
   11c79:	shl    rdi,0x4
   11c7d:	test   r15b,r15b
   11c80:	je     11dc0 <parse_vcpu_affinity+0x170>
   11c86:	mov    DWORD PTR [r12+0x38],r13d
   11c8b:	call   e9a0 <xmalloc>
   11c90:	mov    rbp,rax
   11c93:	mov    QWORD PTR [r12+0x40],rax
   11c98:	test   rbx,rbx
   11c9b:	je     11d40 <parse_vcpu_affinity+0xf0>
   11ca1:	mov    rdi,rbp
   11ca4:	call   bc00 <libxl_bitmap_init@plt>
   11ca9:	lea    r14,[rip+0x22b1b0]        # 23ce60 <ctx>
   11cb0:	xor    edx,edx
   11cb2:	mov    rsi,rbp
   11cb5:	mov    rdi,QWORD PTR [r14]
   11cb8:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   11cbd:	test   eax,eax
   11cbf:	jne    11e1a <parse_vcpu_affinity+0x1ca>
   11cc5:	mov    rsi,rbp
   11cc8:	mov    rdi,rbx
   11ccb:	call   11910 <parse_cpurange>
   11cd0:	test   eax,eax
   11cd2:	jne    11e0c <parse_vcpu_affinity+0x1bc>
   11cd8:	cmp    DWORD PTR [r12],0x1
   11cdd:	jle    11d29 <parse_vcpu_affinity+0xd9>
   11cdf:	lea    rbx,[rbp+0x10]
   11ce3:	mov    r13d,0x1
   11ce9:	nop    DWORD PTR [rax+0x0]
   11cf0:	mov    rdi,rbx
   11cf3:	call   bc00 <libxl_bitmap_init@plt>
   11cf8:	mov    rdi,QWORD PTR [r14]
   11cfb:	xor    edx,edx
   11cfd:	mov    rsi,rbx
   11d00:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   11d05:	test   eax,eax
   11d07:	jne    11dec <parse_vcpu_affinity+0x19c>
   11d0d:	mov    rdi,QWORD PTR [r14]
   11d10:	mov    rsi,rbx
   11d13:	mov    rdx,rbp
   11d16:	add    r13d,0x1
   11d1a:	add    rbx,0x10
   11d1e:	call   b670 <libxl_bitmap_copy@plt>
   11d23:	cmp    DWORD PTR [r12],r13d
   11d27:	jg     11cf0 <parse_vcpu_affinity+0xa0>
   11d29:	test   r15b,r15b
   11d2c:	je     11da5 <parse_vcpu_affinity+0x155>
   11d2e:	add    rsp,0x8
   11d32:	pop    rbx
   11d33:	pop    rbp
   11d34:	pop    r12
   11d36:	pop    r13
   11d38:	pop    r14
   11d3a:	pop    r15
   11d3c:	ret    
   11d3d:	nop    DWORD PTR [rax]
   11d40:	mov    rbx,rbp
   11d43:	xor    ebp,ebp
   11d45:	jmp    11d93 <parse_vcpu_affinity+0x143>
   11d47:	nop    WORD PTR [rax+rax*1+0x0]
   11d50:	test   rax,rax
   11d53:	je     11da5 <parse_vcpu_affinity+0x155>
   11d55:	mov    rdi,rbx
   11d58:	call   bc00 <libxl_bitmap_init@plt>
   11d5d:	lea    rax,[rip+0x22b0fc]        # 23ce60 <ctx>
   11d64:	xor    edx,edx
   11d66:	mov    rsi,rbx
   11d69:	mov    rdi,QWORD PTR [rax]
   11d6c:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   11d71:	test   eax,eax
   11d73:	jne    11e16 <parse_vcpu_affinity+0x1c6>
   11d79:	mov    rsi,rbx
   11d7c:	mov    rdi,r15
   11d7f:	add    rbx,0x10
   11d83:	call   11910 <parse_cpurange>
   11d88:	test   eax,eax
   11d8a:	jne    11e0c <parse_vcpu_affinity+0x1bc>
   11d90:	add    ebp,0x1
   11d93:	mov    esi,ebp
   11d95:	mov    rdi,r14
   11d98:	call   ad60 <xlu_cfg_get_listitem@plt>
   11d9d:	cmp    r13d,ebp
   11da0:	mov    r15,rax
   11da3:	jg     11d50 <parse_vcpu_affinity+0x100>
   11da5:	add    rsp,0x8
   11da9:	lea    rdi,[r12+0x58]
   11dae:	xor    esi,esi
   11db0:	pop    rbx
   11db1:	pop    rbp
   11db2:	pop    r12
   11db4:	pop    r13
   11db6:	pop    r14
   11db8:	pop    r15
   11dba:	jmp    b140 <libxl_defbool_set@plt>
   11dbf:	nop
   11dc0:	mov    DWORD PTR [r12+0x48],r13d
   11dc5:	call   e9a0 <xmalloc>
   11dca:	mov    rbp,rax
   11dcd:	mov    QWORD PTR [r12+0x50],rax
   11dd2:	jmp    11c98 <parse_vcpu_affinity+0x48>
   11dd7:	nop    WORD PTR [rax+rax*1+0x0]
   11de0:	cmp    r13d,ecx
   11de3:	cmovg  r13d,ecx
   11de7:	jmp    11c76 <parse_vcpu_affinity+0x26>
   11dec:	mov    ecx,r13d
   11def:	mov    rax,QWORD PTR [rip+0x2291fa]        # 23aff0 <stderr@GLIBC_2.2.5>
   11df6:	lea    rdx,[rip+0x1da63]        # 2f860 <__func__.10421+0x14d8>
   11dfd:	mov    esi,0x1
   11e02:	mov    rdi,QWORD PTR [rax]
   11e05:	xor    eax,eax
   11e07:	call   c1e0 <__fprintf_chk@plt>
   11e0c:	mov    edi,0x1
   11e11:	call   c1a0 <exit@plt>
   11e16:	mov    ecx,ebp
   11e18:	jmp    11def <parse_vcpu_affinity+0x19f>
   11e1a:	mov    rax,QWORD PTR [rip+0x2291cf]        # 23aff0 <stderr@GLIBC_2.2.5>
   11e21:	lea    rdi,[rip+0x1da60]        # 2f888 <__func__.10421+0x1500>
   11e28:	mov    edx,0x25
   11e2d:	mov    esi,0x1
   11e32:	mov    rcx,QWORD PTR [rax]
   11e35:	call   c1b0 <fwrite@plt>
   11e3a:	mov    edi,0x1
   11e3f:	call   c1a0 <exit@plt>
   11e44:	xchg   ax,ax
   11e46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011e50 <replace_string>:
   11e50:	push   rbp
   11e51:	push   rbx
   11e52:	mov    rbx,rdi
   11e55:	mov    rbp,rsi
   11e58:	sub    rsp,0x8
   11e5c:	mov    rdi,QWORD PTR [rdi]
   11e5f:	call   ac40 <free@plt>
   11e64:	mov    rdi,rbp
   11e67:	call   ea80 <xstrdup>
   11e6c:	mov    QWORD PTR [rbx],rax
   11e6f:	add    rsp,0x8
   11e73:	pop    rbx
   11e74:	pop    rbp
   11e75:	ret    
   11e76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000011e80 <match_option_size>:
   11e80:	push   r12
   11e82:	push   rbp
   11e83:	mov    rbp,rsi
   11e86:	push   rbx
   11e87:	mov    rbx,rdx
   11e8a:	mov    rdx,rsi
   11e8d:	mov    rsi,rbx
   11e90:	mov    r12,rcx
   11e93:	call   ada0 <strncmp@plt>
   11e98:	test   eax,eax
   11e9a:	jne    11ea3 <match_option_size+0x23>
   11e9c:	add    rbx,rbp
   11e9f:	mov    QWORD PTR [r12],rbx
   11ea3:	test   eax,eax
   11ea5:	sete   al
   11ea8:	pop    rbx
   11ea9:	movzx  eax,al
   11eac:	pop    rbp
   11ead:	pop    r12
   11eaf:	ret    

0000000000011eb0 <parse_nic_config>:
   11eb0:	push   r14
   11eb2:	push   r13
   11eb4:	mov    r13,rdi
   11eb7:	push   r12
   11eb9:	push   rbp
   11eba:	lea    rdi,[rip+0x1cf9d]        # 2ee5e <__func__.10421+0xad6>
   11ec1:	push   rbx
   11ec2:	mov    r14,rsi
   11ec5:	mov    esi,0x5
   11eca:	mov    rbp,rdx
   11ecd:	sub    rsp,0x20
   11ed1:	lea    r12,[rsp+0x10]
   11ed6:	mov    rax,QWORD PTR fs:0x28
   11edf:	mov    QWORD PTR [rsp+0x18],rax
   11ee4:	xor    eax,eax
   11ee6:	mov    rcx,r12
   11ee9:	call   11e80 <match_option_size>
   11eee:	test   eax,eax
   11ef0:	je     11f80 <parse_nic_config+0xd0>
   11ef6:	mov    rax,QWORD PTR [rsp+0x10]
   11efb:	lea    rsi,[rip+0x1cb3e]        # 2ea40 <__func__.10421+0x6b8>
   11f02:	mov    ecx,0x4
   11f07:	mov    rdi,rax
   11f0a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   11f0c:	seta   bl
   11f0f:	sbb    bl,0x0
   11f12:	movsx  ebx,bl
   11f15:	test   ebx,ebx
   11f17:	je     11f70 <parse_nic_config+0xc0>
   11f19:	lea    rsi,[rip+0x1cb24]        # 2ea44 <__func__.10421+0x6bc>
   11f20:	mov    ecx,0x6
   11f25:	mov    rdi,rax
   11f28:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   11f2a:	seta   bl
   11f2d:	sbb    bl,0x0
   11f30:	movsx  ebx,bl
   11f33:	test   ebx,ebx
   11f35:	jne    11ff8 <parse_nic_config+0x148>
   11f3b:	mov    DWORD PTR [r13+0x48],0x1
   11f43:	mov    rdx,QWORD PTR [rsp+0x18]
   11f48:	xor    rdx,QWORD PTR fs:0x28
   11f51:	mov    eax,ebx
   11f53:	jne    128c4 <parse_nic_config+0xa14>
   11f59:	add    rsp,0x20
   11f5d:	pop    rbx
   11f5e:	pop    rbp
   11f5f:	pop    r12
   11f61:	pop    r13
   11f63:	pop    r14
   11f65:	ret    
   11f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11f70:	mov    DWORD PTR [r13+0x48],0x2
   11f78:	jmp    11f43 <parse_nic_config+0x93>
   11f7a:	nop    WORD PTR [rax+rax*1+0x0]
   11f80:	lea    rdi,[rip+0x1cade]        # 2ea65 <__func__.10421+0x6dd>
   11f87:	mov    rcx,r12
   11f8a:	mov    rdx,rbp
   11f8d:	mov    esi,0x4
   11f92:	mov    ebx,eax
   11f94:	call   11e80 <match_option_size>
   11f99:	test   eax,eax
   11f9b:	je     12028 <parse_nic_config+0x178>
   11fa1:	mov    rdi,QWORD PTR [rsp+0x10]
   11fa6:	lea    r12,[rsp+0x8]
   11fab:	lea    rbp,[r13+0x20]
   11faf:	add    r13,0x26
   11fb3:	mov    edx,0x10
   11fb8:	mov    rsi,r12
   11fbb:	call   c090 <strtoul@plt>
   11fc0:	mov    rdi,QWORD PTR [rsp+0x8]
   11fc5:	cmp    QWORD PTR [rsp+0x10],rdi
   11fca:	je     127d0 <parse_nic_config+0x920>
   11fd0:	cmp    eax,0xff
   11fd5:	ja     127d0 <parse_nic_config+0x920>
   11fdb:	mov    BYTE PTR [rbp+0x0],al
   11fde:	add    rbp,0x1
   11fe2:	add    rdi,0x1
   11fe6:	cmp    rbp,r13
   11fe9:	mov    QWORD PTR [rsp+0x10],rdi
   11fee:	jne    11fb3 <parse_nic_config+0x103>
   11ff0:	jmp    11f43 <parse_nic_config+0x93>
   11ff5:	nop    DWORD PTR [rax]
   11ff8:	mov    rax,QWORD PTR [rip+0x228ff1]        # 23aff0 <stderr@GLIBC_2.2.5>
   11fff:	lea    rdi,[rip+0x1ca44]        # 2ea4a <__func__.10421+0x6c2>
   12006:	mov    edx,0x1a
   1200b:	mov    esi,0x1
   12010:	mov    ebx,0x1
   12015:	mov    rcx,QWORD PTR [rax]
   12018:	call   c1b0 <fwrite@plt>
   1201d:	jmp    11f43 <parse_nic_config+0x93>
   12022:	nop    WORD PTR [rax+rax*1+0x0]
   12028:	lea    rdi,[rip+0x1ca55]        # 2ea84 <__func__.10421+0x6fc>
   1202f:	mov    rcx,r12
   12032:	mov    rdx,rbp
   12035:	mov    esi,0x7
   1203a:	call   11e80 <match_option_size>
   1203f:	test   eax,eax
   12041:	jne    12800 <parse_nic_config+0x950>
   12047:	lea    rdi,[rip+0x1ca3e]        # 2ea8c <__func__.10421+0x704>
   1204e:	mov    rcx,r12
   12051:	mov    rdx,rbp
   12054:	mov    esi,0x7
   12059:	call   11e80 <match_option_size>
   1205e:	test   eax,eax
   12060:	jne    12818 <parse_nic_config+0x968>
   12066:	lea    rdi,[rip+0x1ca27]        # 2ea94 <__func__.10421+0x70c>
   1206d:	mov    rcx,r12
   12070:	mov    rdx,rbp
   12073:	mov    esi,0xb
   12078:	call   11e80 <match_option_size>
   1207d:	test   eax,eax
   1207f:	jne    12850 <parse_nic_config+0x9a0>
   12085:	lea    rdi,[rip+0x1cce8]        # 2ed74 <__func__.10421+0x9ec>
   1208c:	mov    rcx,r12
   1208f:	mov    rdx,rbp
   12092:	mov    esi,0x3
   12097:	call   11e80 <match_option_size>
   1209c:	test   eax,eax
   1209e:	jne    12863 <parse_nic_config+0x9b3>
   120a4:	lea    rdi,[rip+0x1c9f5]        # 2eaa0 <__func__.10421+0x718>
   120ab:	mov    rcx,r12
   120ae:	mov    rdx,rbp
   120b1:	mov    esi,0x7
   120b6:	call   11e80 <match_option_size>
   120bb:	test   eax,eax
   120bd:	jne    12876 <parse_nic_config+0x9c6>
   120c3:	lea    rdi,[rip+0x1c9de]        # 2eaa8 <__func__.10421+0x720>
   120ca:	mov    rcx,r12
   120cd:	mov    rdx,rbp
   120d0:	mov    esi,0x8
   120d5:	call   11e80 <match_option_size>
   120da:	test   eax,eax
   120dc:	jne    12889 <parse_nic_config+0x9d9>
   120e2:	lea    rdi,[rip+0x1c9c8]        # 2eab1 <__func__.10421+0x729>
   120e9:	mov    rcx,r12
   120ec:	mov    rdx,rbp
   120ef:	mov    esi,0x8
   120f4:	call   11e80 <match_option_size>
   120f9:	test   eax,eax
   120fb:	jne    1289c <parse_nic_config+0x9ec>
   12101:	lea    rdi,[rip+0x1c9b2]        # 2eaba <__func__.10421+0x732>
   12108:	mov    rcx,r12
   1210b:	mov    rdx,rbp
   1210e:	mov    esi,0x6
   12113:	call   11e80 <match_option_size>
   12118:	test   eax,eax
   1211a:	jne    128af <parse_nic_config+0x9ff>
   12120:	lea    rdi,[rip+0x1c99a]        # 2eac1 <__func__.10421+0x739>
   12127:	mov    rcx,r12
   1212a:	mov    rdx,rbp
   1212d:	mov    esi,0x5
   12132:	call   11e80 <match_option_size>
   12137:	test   eax,eax
   12139:	jne    128c9 <parse_nic_config+0xa19>
   1213f:	lea    rdi,[rip+0x1c981]        # 2eac7 <__func__.10421+0x73f>
   12146:	mov    rcx,r12
   12149:	mov    rdx,rbp
   1214c:	mov    esi,0xb
   12151:	call   11e80 <match_option_size>
   12156:	test   eax,eax
   12158:	jne    12921 <parse_nic_config+0xa71>
   1215e:	lea    rdi,[rip+0x1c96e]        # 2ead3 <__func__.10421+0x74b>
   12165:	mov    rcx,r12
   12168:	mov    rdx,rbp
   1216b:	mov    esi,0x14
   12170:	call   11e80 <match_option_size>
   12175:	test   eax,eax
   12177:	mov    ebx,eax
   12179:	jne    12949 <parse_nic_config+0xa99>
   1217f:	lea    rdi,[rip+0x1c962]        # 2eae8 <__func__.10421+0x760>
   12186:	mov    rcx,r12
   12189:	mov    rdx,rbp
   1218c:	mov    esi,0x14
   12191:	call   11e80 <match_option_size>
   12196:	test   eax,eax
   12198:	jne    12936 <parse_nic_config+0xa86>
   1219e:	lea    rdi,[rip+0x1c958]        # 2eafd <__func__.10421+0x775>
   121a5:	mov    rcx,r12
   121a8:	mov    rdx,rbp
   121ab:	mov    esi,0x16
   121b0:	call   11e80 <match_option_size>
   121b5:	test   eax,eax
   121b7:	mov    ebx,eax
   121b9:	jne    12b1e <parse_nic_config+0xc6e>
   121bf:	lea    rdi,[rip+0x1c94e]        # 2eb14 <__func__.10421+0x78c>
   121c6:	mov    rcx,r12
   121c9:	mov    rdx,rbp
   121cc:	mov    esi,0x1c
   121d1:	call   11e80 <match_option_size>
   121d6:	test   eax,eax
   121d8:	jne    12b08 <parse_nic_config+0xc58>
   121de:	lea    rdi,[rip+0x1c94c]        # 2eb31 <__func__.10421+0x7a9>
   121e5:	mov    rcx,r12
   121e8:	mov    rdx,rbp
   121eb:	mov    esi,0x1c
   121f0:	call   11e80 <match_option_size>
   121f5:	test   eax,eax
   121f7:	mov    ebx,eax
   121f9:	jne    12b7a <parse_nic_config+0xcca>
   121ff:	lea    rdi,[rip+0x1d712]        # 2f918 <__func__.10421+0x1590>
   12206:	mov    rcx,r12
   12209:	mov    rdx,rbp
   1220c:	mov    esi,0x1e
   12211:	call   11e80 <match_option_size>
   12216:	test   eax,eax
   12218:	jne    12b64 <parse_nic_config+0xcb4>
   1221e:	lea    rdi,[rip+0x1c929]        # 2eb4e <__func__.10421+0x7c6>
   12225:	mov    rcx,r12
   12228:	mov    rdx,rbp
   1222b:	mov    esi,0x19
   12230:	call   11e80 <match_option_size>
   12235:	test   eax,eax
   12237:	mov    ebx,eax
   12239:	jne    12b4c <parse_nic_config+0xc9c>
   1223f:	lea    rdi,[rip+0x1c922]        # 2eb68 <__func__.10421+0x7e0>
   12246:	mov    rcx,r12
   12249:	mov    rdx,rbp
   1224c:	mov    esi,0x19
   12251:	call   11e80 <match_option_size>
   12256:	test   eax,eax
   12258:	jne    12b36 <parse_nic_config+0xc86>
   1225e:	lea    rdi,[rip+0x1c91d]        # 2eb82 <__func__.10421+0x7fa>
   12265:	mov    rcx,r12
   12268:	mov    rdx,rbp
   1226b:	mov    esi,0x1b
   12270:	call   11e80 <match_option_size>
   12275:	test   eax,eax
   12277:	mov    ebx,eax
   12279:	jne    12da2 <parse_nic_config+0xef2>
   1227f:	lea    rdi,[rip+0x1c918]        # 2eb9e <__func__.10421+0x816>
   12286:	mov    rcx,r12
   12289:	mov    rdx,rbp
   1228c:	mov    esi,0x19
   12291:	call   11e80 <match_option_size>
   12296:	test   eax,eax
   12298:	jne    12d8c <parse_nic_config+0xedc>
   1229e:	lea    rdi,[rip+0x1c913]        # 2ebb8 <__func__.10421+0x830>
   122a5:	mov    rcx,r12
   122a8:	mov    rdx,rbp
   122ab:	mov    esi,0x19
   122b0:	call   11e80 <match_option_size>
   122b5:	test   eax,eax
   122b7:	mov    ebx,eax
   122b9:	jne    12d74 <parse_nic_config+0xec4>
   122bf:	lea    rdi,[rip+0x1c90c]        # 2ebd2 <__func__.10421+0x84a>
   122c6:	mov    rcx,r12
   122c9:	mov    rdx,rbp
   122cc:	mov    esi,0x1b
   122d1:	call   11e80 <match_option_size>
   122d6:	test   eax,eax
   122d8:	jne    12d5e <parse_nic_config+0xeae>
   122de:	lea    rdi,[rip+0x1c909]        # 2ebee <__func__.10421+0x866>
   122e5:	mov    rcx,r12
   122e8:	mov    rdx,rbp
   122eb:	mov    esi,0x19
   122f0:	call   11e80 <match_option_size>
   122f5:	test   eax,eax
   122f7:	mov    ebx,eax
   122f9:	jne    12d46 <parse_nic_config+0xe96>
   122ff:	lea    rdi,[rip+0x1c902]        # 2ec08 <__func__.10421+0x880>
   12306:	mov    rcx,r12
   12309:	mov    rdx,rbp
   1230c:	mov    esi,0x19
   12311:	call   11e80 <match_option_size>
   12316:	test   eax,eax
   12318:	jne    12d30 <parse_nic_config+0xe80>
   1231e:	lea    rdi,[rip+0x1c8fd]        # 2ec22 <__func__.10421+0x89a>
   12325:	mov    rcx,r12
   12328:	mov    rdx,rbp
   1232b:	mov    esi,0x1b
   12330:	call   11e80 <match_option_size>
   12335:	test   eax,eax
   12337:	mov    ebx,eax
   12339:	jne    12d18 <parse_nic_config+0xe68>
   1233f:	lea    rdi,[rip+0x1c8f8]        # 2ec3e <__func__.10421+0x8b6>
   12346:	mov    rcx,r12
   12349:	mov    rdx,rbp
   1234c:	mov    esi,0x1c
   12351:	call   11e80 <match_option_size>
   12356:	test   eax,eax
   12358:	jne    12d02 <parse_nic_config+0xe52>
   1235e:	lea    rdi,[rip+0x1c8f6]        # 2ec5b <__func__.10421+0x8d3>
   12365:	mov    rcx,r12
   12368:	mov    rdx,rbp
   1236b:	mov    esi,0x1c
   12370:	call   11e80 <match_option_size>
   12375:	test   eax,eax
   12377:	mov    ebx,eax
   12379:	jne    12cea <parse_nic_config+0xe3a>
   1237f:	lea    rdi,[rip+0x1d5b2]        # 2f938 <__func__.10421+0x15b0>
   12386:	mov    rcx,r12
   12389:	mov    rdx,rbp
   1238c:	mov    esi,0x1e
   12391:	call   11e80 <match_option_size>
   12396:	test   eax,eax
   12398:	jne    12cd4 <parse_nic_config+0xe24>
   1239e:	lea    rdi,[rip+0x1c8d3]        # 2ec78 <__func__.10421+0x8f0>
   123a5:	mov    rcx,r12
   123a8:	mov    rdx,rbp
   123ab:	mov    esi,0x1c
   123b0:	call   11e80 <match_option_size>
   123b5:	test   eax,eax
   123b7:	mov    ebx,eax
   123b9:	jne    12cbc <parse_nic_config+0xe0c>
   123bf:	lea    rdi,[rip+0x1c8cf]        # 2ec95 <__func__.10421+0x90d>
   123c6:	mov    rcx,r12
   123c9:	mov    rdx,rbp
   123cc:	mov    esi,0x1c
   123d1:	call   11e80 <match_option_size>
   123d6:	test   eax,eax
   123d8:	jne    12ca6 <parse_nic_config+0xdf6>
   123de:	lea    rdi,[rip+0x1d573]        # 2f958 <__func__.10421+0x15d0>
   123e5:	mov    rcx,r12
   123e8:	mov    rdx,rbp
   123eb:	mov    esi,0x1e
   123f0:	call   11e80 <match_option_size>
   123f5:	test   eax,eax
   123f7:	mov    ebx,eax
   123f9:	jne    12c8e <parse_nic_config+0xdde>
   123ff:	lea    rdi,[rip+0x1c8ac]        # 2ecb2 <__func__.10421+0x92a>
   12406:	mov    rcx,r12
   12409:	mov    rdx,rbp
   1240c:	mov    esi,0x19
   12411:	call   11e80 <match_option_size>
   12416:	test   eax,eax
   12418:	jne    12c78 <parse_nic_config+0xdc8>
   1241e:	lea    rdi,[rip+0x1c8a7]        # 2eccc <__func__.10421+0x944>
   12425:	mov    rcx,r12
   12428:	mov    rdx,rbp
   1242b:	mov    esi,0x1a
   12430:	call   11e80 <match_option_size>
   12435:	test   eax,eax
   12437:	mov    ebx,eax
   12439:	jne    12c60 <parse_nic_config+0xdb0>
   1243f:	lea    rdi,[rip+0x1d532]        # 2f978 <__func__.10421+0x15f0>
   12446:	mov    rcx,r12
   12449:	mov    rdx,rbp
   1244c:	mov    esi,0x1e
   12451:	call   11e80 <match_option_size>
   12456:	test   eax,eax
   12458:	jne    12c4a <parse_nic_config+0xd9a>
   1245e:	lea    rdi,[rip+0x1d533]        # 2f998 <__func__.10421+0x1610>
   12465:	mov    rcx,r12
   12468:	mov    rdx,rbp
   1246b:	mov    esi,0x1e
   12470:	call   11e80 <match_option_size>
   12475:	test   eax,eax
   12477:	mov    ebx,eax
   12479:	jne    12ab6 <parse_nic_config+0xc06>
   1247f:	lea    rdi,[rip+0x1d532]        # 2f9b8 <__func__.10421+0x1630>
   12486:	mov    rcx,r12
   12489:	mov    rdx,rbp
   1248c:	mov    esi,0x1f
   12491:	call   11e80 <match_option_size>
   12496:	test   eax,eax
   12498:	jne    12aa0 <parse_nic_config+0xbf0>
   1249e:	lea    rdi,[rip+0x1d533]        # 2f9d8 <__func__.10421+0x1650>
   124a5:	mov    rcx,r12
   124a8:	mov    rdx,rbp
   124ab:	mov    esi,0x1e
   124b0:	call   11e80 <match_option_size>
   124b5:	test   eax,eax
   124b7:	mov    ebx,eax
   124b9:	jne    12a88 <parse_nic_config+0xbd8>
   124bf:	lea    rdi,[rip+0x1d532]        # 2f9f8 <__func__.10421+0x1670>
   124c6:	mov    rcx,r12
   124c9:	mov    rdx,rbp
   124cc:	mov    esi,0x1e
   124d1:	call   11e80 <match_option_size>
   124d6:	test   eax,eax
   124d8:	jne    12a72 <parse_nic_config+0xbc2>
   124de:	lea    rdi,[rip+0x1d533]        # 2fa18 <__func__.10421+0x1690>
   124e5:	mov    rcx,r12
   124e8:	mov    rdx,rbp
   124eb:	mov    esi,0x1f
   124f0:	call   11e80 <match_option_size>
   124f5:	test   eax,eax
   124f7:	mov    ebx,eax
   124f9:	jne    12a5a <parse_nic_config+0xbaa>
   124ff:	lea    rdi,[rip+0x1c7e1]        # 2ece7 <__func__.10421+0x95f>
   12506:	mov    rcx,r12
   12509:	mov    rdx,rbp
   1250c:	mov    esi,0x14
   12511:	call   11e80 <match_option_size>
   12516:	test   eax,eax
   12518:	jne    12a44 <parse_nic_config+0xb94>
   1251e:	lea    rdi,[rip+0x1c7d7]        # 2ecfc <__func__.10421+0x974>
   12525:	mov    rcx,r12
   12528:	mov    rdx,rbp
   1252b:	mov    esi,0x14
   12530:	call   11e80 <match_option_size>
   12535:	test   eax,eax
   12537:	mov    ebx,eax
   12539:	jne    12a2c <parse_nic_config+0xb7c>
   1253f:	lea    rdi,[rip+0x1c7cb]        # 2ed11 <__func__.10421+0x989>
   12546:	mov    rcx,r12
   12549:	mov    rdx,rbp
   1254c:	mov    esi,0x11
   12551:	call   11e80 <match_option_size>
   12556:	test   eax,eax
   12558:	jne    12a16 <parse_nic_config+0xb66>
   1255e:	lea    rdi,[rip+0x1c7be]        # 2ed23 <__func__.10421+0x99b>
   12565:	mov    rcx,r12
   12568:	mov    rdx,rbp
   1256b:	mov    esi,0x18
   12570:	call   11e80 <match_option_size>
   12575:	test   eax,eax
   12577:	mov    ebx,eax
   12579:	jne    129fe <parse_nic_config+0xb4e>
   1257f:	lea    rdi,[rip+0x1c7b6]        # 2ed3c <__func__.10421+0x9b4>
   12586:	mov    rcx,r12
   12589:	mov    rdx,rbp
   1258c:	mov    esi,0x1d
   12591:	call   11e80 <match_option_size>
   12596:	test   eax,eax
   12598:	jne    129e8 <parse_nic_config+0xb38>
   1259e:	lea    rdi,[rip+0x1c7b5]        # 2ed5a <__func__.10421+0x9d2>
   125a5:	mov    rcx,r12
   125a8:	mov    rdx,rbp
   125ab:	mov    esi,0x1d
   125b0:	call   11e80 <match_option_size>
   125b5:	test   eax,eax
   125b7:	mov    ebx,eax
   125b9:	jne    129d0 <parse_nic_config+0xb20>
   125bf:	lea    rdi,[rip+0x1d472]        # 2fa38 <__func__.10421+0x16b0>
   125c6:	mov    rcx,r12
   125c9:	mov    rdx,rbp
   125cc:	mov    esi,0x1f
   125d1:	call   11e80 <match_option_size>
   125d6:	test   eax,eax
   125d8:	jne    129ba <parse_nic_config+0xb0a>
   125de:	lea    rdi,[rip+0x1c793]        # 2ed78 <__func__.10421+0x9f0>
   125e5:	mov    rcx,r12
   125e8:	mov    rdx,rbp
   125eb:	mov    esi,0x1d
   125f0:	call   11e80 <match_option_size>
   125f5:	test   eax,eax
   125f7:	mov    ebx,eax
   125f9:	jne    129a2 <parse_nic_config+0xaf2>
   125ff:	lea    rdi,[rip+0x1c790]        # 2ed96 <__func__.10421+0xa0e>
   12606:	mov    rcx,r12
   12609:	mov    rdx,rbp
   1260c:	mov    esi,0x1d
   12611:	call   11e80 <match_option_size>
   12616:	test   eax,eax
   12618:	jne    1298c <parse_nic_config+0xadc>
   1261e:	lea    rdi,[rip+0x1d433]        # 2fa58 <__func__.10421+0x16d0>
   12625:	mov    rcx,r12
   12628:	mov    rdx,rbp
   1262b:	mov    esi,0x1f
   12630:	call   11e80 <match_option_size>
   12635:	test   eax,eax
   12637:	mov    ebx,eax
   12639:	jne    12974 <parse_nic_config+0xac4>
   1263f:	lea    rdi,[rip+0x1d432]        # 2fa78 <__func__.10421+0x16f0>
   12646:	mov    rcx,r12
   12649:	mov    rdx,rbp
   1264c:	mov    esi,0x22
   12651:	call   11e80 <match_option_size>
   12656:	test   eax,eax
   12658:	jne    1295e <parse_nic_config+0xaae>
   1265e:	lea    rdi,[rip+0x1d43b]        # 2faa0 <__func__.10421+0x1718>
   12665:	mov    rcx,r12
   12668:	mov    rdx,rbp
   1266b:	mov    esi,0x22
   12670:	call   11e80 <match_option_size>
   12675:	test   eax,eax
   12677:	mov    ebx,eax
   12679:	jne    12c32 <parse_nic_config+0xd82>
   1267f:	lea    rdi,[rip+0x1d442]        # 2fac8 <__func__.10421+0x1740>
   12686:	mov    rcx,r12
   12689:	mov    rdx,rbp
   1268c:	mov    esi,0x23
   12691:	call   11e80 <match_option_size>
   12696:	test   eax,eax
   12698:	jne    12c1c <parse_nic_config+0xd6c>
   1269e:	lea    rdi,[rip+0x1d44b]        # 2faf0 <__func__.10421+0x1768>
   126a5:	mov    rcx,r12
   126a8:	mov    rdx,rbp
   126ab:	mov    esi,0x22
   126b0:	call   11e80 <match_option_size>
   126b5:	test   eax,eax
   126b7:	mov    ebx,eax
   126b9:	jne    12c04 <parse_nic_config+0xd54>
   126bf:	lea    rdi,[rip+0x1d452]        # 2fb18 <__func__.10421+0x1790>
   126c6:	mov    rcx,r12
   126c9:	mov    rdx,rbp
   126cc:	mov    esi,0x22
   126d1:	call   11e80 <match_option_size>
   126d6:	test   eax,eax
   126d8:	jne    12bee <parse_nic_config+0xd3e>
   126de:	lea    rdi,[rip+0x1d45b]        # 2fb40 <__func__.10421+0x17b8>
   126e5:	mov    rcx,r12
   126e8:	mov    rdx,rbp
   126eb:	mov    esi,0x23
   126f0:	call   11e80 <match_option_size>
   126f5:	test   eax,eax
   126f7:	mov    ebx,eax
   126f9:	jne    12bd6 <parse_nic_config+0xd26>
   126ff:	lea    rdi,[rip+0x1d462]        # 2fb68 <__func__.10421+0x17e0>
   12706:	mov    rcx,r12
   12709:	mov    rdx,rbp
   1270c:	mov    esi,0x20
   12711:	call   11e80 <match_option_size>
   12716:	test   eax,eax
   12718:	jne    12bc0 <parse_nic_config+0xd10>
   1271e:	lea    rdi,[rip+0x1c68f]        # 2edb4 <__func__.10421+0xa2c>
   12725:	mov    rcx,r12
   12728:	mov    rdx,rbp
   1272b:	mov    esi,0x15
   12730:	call   11e80 <match_option_size>
   12735:	test   eax,eax
   12737:	mov    ebx,eax
   12739:	jne    12ba8 <parse_nic_config+0xcf8>
   1273f:	lea    rdi,[rip+0x1c684]        # 2edca <__func__.10421+0xa42>
   12746:	mov    rcx,r12
   12749:	mov    rdx,rbp
   1274c:	mov    esi,0x15
   12751:	call   11e80 <match_option_size>
   12756:	test   eax,eax
   12758:	jne    12b92 <parse_nic_config+0xce2>
   1275e:	lea    rdi,[rip+0x1c67b]        # 2ede0 <__func__.10421+0xa58>
   12765:	mov    rcx,r12
   12768:	mov    rdx,rbp
   1276b:	mov    esi,0x6
   12770:	call   11e80 <match_option_size>
   12775:	test   eax,eax
   12777:	mov    ebx,eax
   12779:	jne    12ae1 <parse_nic_config+0xc31>
   1277f:	lea    rdi,[rip+0x1c661]        # 2ede7 <__func__.10421+0xa5f>
   12786:	mov    rcx,r12
   12789:	mov    rdx,rbp
   1278c:	mov    esi,0x6
   12791:	call   11e80 <match_option_size>
   12796:	test   eax,eax
   12798:	jne    12ace <parse_nic_config+0xc1e>
   1279e:	mov    rax,QWORD PTR [rip+0x22884b]        # 23aff0 <stderr@GLIBC_2.2.5>
   127a5:	lea    rdx,[rip+0x1c642]        # 2edee <__func__.10421+0xa66>
   127ac:	mov    rcx,rbp
   127af:	mov    esi,0x1
   127b4:	mov    ebx,0x1
   127b9:	mov    rdi,QWORD PTR [rax]
   127bc:	xor    eax,eax
   127be:	call   c1e0 <__fprintf_chk@plt>
   127c3:	jmp    11f43 <parse_nic_config+0x93>
   127c8:	nop    DWORD PTR [rax+rax*1+0x0]
   127d0:	mov    rax,QWORD PTR [rip+0x228819]        # 23aff0 <stderr@GLIBC_2.2.5>
   127d7:	lea    rdi,[rip+0x1c28c]        # 2ea6a <__func__.10421+0x6e2>
   127de:	mov    edx,0x19
   127e3:	mov    esi,0x1
   127e8:	mov    ebx,0x1
   127ed:	mov    rcx,QWORD PTR [rax]
   127f0:	call   c1b0 <fwrite@plt>
   127f5:	jmp    11f43 <parse_nic_config+0x93>
   127fa:	nop    WORD PTR [rax+rax*1+0x0]
   12800:	mov    rsi,QWORD PTR [rsp+0x10]
   12805:	lea    rdi,[r13+0x30]
   12809:	call   11e50 <replace_string>
   1280e:	jmp    11f43 <parse_nic_config+0x93>
   12813:	nop    DWORD PTR [rax+rax*1+0x0]
   12818:	mov    rax,QWORD PTR [rip+0x2287d1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1281f:	lea    rdi,[rip+0x1d08a]        # 2f8b0 <__func__.10421+0x1528>
   12826:	mov    edx,0x42
   1282b:	mov    esi,0x1
   12830:	mov    rcx,QWORD PTR [rax]
   12833:	call   c1b0 <fwrite@plt>
   12838:	mov    rsi,QWORD PTR [rsp+0x10]
   1283d:	lea    rdi,[r13+0x60]
   12841:	call   11e50 <replace_string>
   12846:	jmp    11f43 <parse_nic_config+0x93>
   1284b:	nop    DWORD PTR [rax+rax*1+0x0]
   12850:	mov    rsi,QWORD PTR [rsp+0x10]
   12855:	lea    rdi,[r13+0x60]
   12859:	call   11e50 <replace_string>
   1285e:	jmp    11f43 <parse_nic_config+0x93>
   12863:	mov    rsi,QWORD PTR [rsp+0x10]
   12868:	lea    rdi,[r13+0x28]
   1286c:	call   11e50 <replace_string>
   12871:	jmp    11f43 <parse_nic_config+0x93>
   12876:	mov    rsi,QWORD PTR [rsp+0x10]
   1287b:	lea    rdi,[r13+0x40]
   1287f:	call   11e50 <replace_string>
   12884:	jmp    11f43 <parse_nic_config+0x93>
   12889:	mov    rsi,QWORD PTR [rsp+0x10]
   1288e:	lea    rdi,[r13+0x8]
   12892:	call   11e50 <replace_string>
   12897:	jmp    11f43 <parse_nic_config+0x93>
   1289c:	mov    rsi,QWORD PTR [rsp+0x10]
   128a1:	lea    rdi,[r13+0x38]
   128a5:	call   11e50 <replace_string>
   128aa:	jmp    11f43 <parse_nic_config+0x93>
   128af:	mov    rsi,QWORD PTR [rsp+0x10]
   128b4:	lea    rdi,[r13+0x18]
   128b8:	xor    ebx,ebx
   128ba:	call   11e50 <replace_string>
   128bf:	jmp    11f43 <parse_nic_config+0x93>
   128c4:	call   b130 <__stack_chk_fail@plt>
   128c9:	mov    rsi,QWORD PTR [rsp+0x10]
   128ce:	mov    rdi,QWORD PTR [r14]
   128d1:	mov    rdx,r13
   128d4:	call   ac50 <xlu_vif_parse_rate@plt>
   128d9:	cmp    eax,0x16
   128dc:	je     12917 <parse_nic_config+0xa67>
   128de:	cmp    eax,0x4b
   128e1:	je     12917 <parse_nic_config+0xa67>
   128e3:	test   eax,eax
   128e5:	je     11f43 <parse_nic_config+0x93>
   128eb:	call   ad80 <__errno_location@plt>
   128f0:	mov    edi,DWORD PTR [rax]
   128f2:	call   c3b0 <strerror@plt>
   128f7:	mov    rcx,rax
   128fa:	mov    rax,QWORD PTR [rip+0x2286ef]        # 23aff0 <stderr@GLIBC_2.2.5>
   12901:	lea    rdx,[rip+0x1cff0]        # 2f8f8 <__func__.10421+0x1570>
   12908:	mov    esi,0x1
   1290d:	mov    rdi,QWORD PTR [rax]
   12910:	xor    eax,eax
   12912:	call   c1e0 <__fprintf_chk@plt>
   12917:	mov    edi,0x1
   1291c:	call   c1a0 <exit@plt>
   12921:	mov    rsi,QWORD PTR [rsp+0x10]
   12926:	lea    rdi,[r13+0x68]
   1292a:	xor    ebx,ebx
   1292c:	call   11e50 <replace_string>
   12931:	jmp    11f43 <parse_nic_config+0x93>
   12936:	mov    rsi,QWORD PTR [rsp+0x10]
   1293b:	lea    rdi,[r13+0x78]
   1293f:	call   11e50 <replace_string>
   12944:	jmp    11f43 <parse_nic_config+0x93>
   12949:	mov    rsi,QWORD PTR [rsp+0x10]
   1294e:	lea    rdi,[r13+0x70]
   12952:	xor    ebx,ebx
   12954:	call   11e50 <replace_string>
   12959:	jmp    11f43 <parse_nic_config+0x93>
   1295e:	mov    rsi,QWORD PTR [rsp+0x10]
   12963:	lea    rdi,[r13+0x1a8]
   1296a:	call   11e50 <replace_string>
   1296f:	jmp    11f43 <parse_nic_config+0x93>
   12974:	mov    rsi,QWORD PTR [rsp+0x10]
   12979:	lea    rdi,[r13+0x1a0]
   12980:	xor    ebx,ebx
   12982:	call   11e50 <replace_string>
   12987:	jmp    11f43 <parse_nic_config+0x93>
   1298c:	mov    rsi,QWORD PTR [rsp+0x10]
   12991:	lea    rdi,[r13+0x198]
   12998:	call   11e50 <replace_string>
   1299d:	jmp    11f43 <parse_nic_config+0x93>
   129a2:	mov    rsi,QWORD PTR [rsp+0x10]
   129a7:	lea    rdi,[r13+0x190]
   129ae:	xor    ebx,ebx
   129b0:	call   11e50 <replace_string>
   129b5:	jmp    11f43 <parse_nic_config+0x93>
   129ba:	mov    rsi,QWORD PTR [rsp+0x10]
   129bf:	lea    rdi,[r13+0x188]
   129c6:	call   11e50 <replace_string>
   129cb:	jmp    11f43 <parse_nic_config+0x93>
   129d0:	mov    rsi,QWORD PTR [rsp+0x10]
   129d5:	lea    rdi,[r13+0x180]
   129dc:	xor    ebx,ebx
   129de:	call   11e50 <replace_string>
   129e3:	jmp    11f43 <parse_nic_config+0x93>
   129e8:	mov    rsi,QWORD PTR [rsp+0x10]
   129ed:	lea    rdi,[r13+0x178]
   129f4:	call   11e50 <replace_string>
   129f9:	jmp    11f43 <parse_nic_config+0x93>
   129fe:	mov    rsi,QWORD PTR [rsp+0x10]
   12a03:	lea    rdi,[r13+0x170]
   12a0a:	xor    ebx,ebx
   12a0c:	call   11e50 <replace_string>
   12a11:	jmp    11f43 <parse_nic_config+0x93>
   12a16:	mov    rsi,QWORD PTR [rsp+0x10]
   12a1b:	lea    rdi,[r13+0x168]
   12a22:	call   11e50 <replace_string>
   12a27:	jmp    11f43 <parse_nic_config+0x93>
   12a2c:	mov    rsi,QWORD PTR [rsp+0x10]
   12a31:	lea    rdi,[r13+0x160]
   12a38:	xor    ebx,ebx
   12a3a:	call   11e50 <replace_string>
   12a3f:	jmp    11f43 <parse_nic_config+0x93>
   12a44:	mov    rsi,QWORD PTR [rsp+0x10]
   12a49:	lea    rdi,[r13+0x158]
   12a50:	call   11e50 <replace_string>
   12a55:	jmp    11f43 <parse_nic_config+0x93>
   12a5a:	mov    rsi,QWORD PTR [rsp+0x10]
   12a5f:	lea    rdi,[r13+0x150]
   12a66:	xor    ebx,ebx
   12a68:	call   11e50 <replace_string>
   12a6d:	jmp    11f43 <parse_nic_config+0x93>
   12a72:	mov    rsi,QWORD PTR [rsp+0x10]
   12a77:	lea    rdi,[r13+0x148]
   12a7e:	call   11e50 <replace_string>
   12a83:	jmp    11f43 <parse_nic_config+0x93>
   12a88:	mov    rsi,QWORD PTR [rsp+0x10]
   12a8d:	lea    rdi,[r13+0x140]
   12a94:	xor    ebx,ebx
   12a96:	call   11e50 <replace_string>
   12a9b:	jmp    11f43 <parse_nic_config+0x93>
   12aa0:	mov    rsi,QWORD PTR [rsp+0x10]
   12aa5:	lea    rdi,[r13+0x138]
   12aac:	call   11e50 <replace_string>
   12ab1:	jmp    11f43 <parse_nic_config+0x93>
   12ab6:	mov    rsi,QWORD PTR [rsp+0x10]
   12abb:	lea    rdi,[r13+0x130]
   12ac2:	xor    ebx,ebx
   12ac4:	call   11e50 <replace_string>
   12ac9:	jmp    11f43 <parse_nic_config+0x93>
   12ace:	mov    rdi,QWORD PTR [rsp+0x10]
   12ad3:	call   116d0 <parse_ulong>
   12ad8:	mov    DWORD PTR [r13+0x10],eax
   12adc:	jmp    11f43 <parse_nic_config+0x93>
   12ae1:	mov    rax,QWORD PTR [rip+0x228508]        # 23aff0 <stderr@GLIBC_2.2.5>
   12ae8:	lea    rdi,[rip+0x1d0a1]        # 2fb90 <__func__.10421+0x1808>
   12aef:	mov    edx,0x38
   12af4:	mov    esi,0x1
   12af9:	xor    ebx,ebx
   12afb:	mov    rcx,QWORD PTR [rax]
   12afe:	call   c1b0 <fwrite@plt>
   12b03:	jmp    11f43 <parse_nic_config+0x93>
   12b08:	mov    rsi,QWORD PTR [rsp+0x10]
   12b0d:	lea    rdi,[r13+0xa0]
   12b14:	call   11e50 <replace_string>
   12b19:	jmp    11f43 <parse_nic_config+0x93>
   12b1e:	mov    rsi,QWORD PTR [rsp+0x10]
   12b23:	lea    rdi,[r13+0x80]
   12b2a:	xor    ebx,ebx
   12b2c:	call   11e50 <replace_string>
   12b31:	jmp    11f43 <parse_nic_config+0x93>
   12b36:	mov    rsi,QWORD PTR [rsp+0x10]
   12b3b:	lea    rdi,[r13+0xd8]
   12b42:	call   11e50 <replace_string>
   12b47:	jmp    11f43 <parse_nic_config+0x93>
   12b4c:	mov    rsi,QWORD PTR [rsp+0x10]
   12b51:	lea    rdi,[r13+0xd0]
   12b58:	xor    ebx,ebx
   12b5a:	call   11e50 <replace_string>
   12b5f:	jmp    11f43 <parse_nic_config+0x93>
   12b64:	mov    rsi,QWORD PTR [rsp+0x10]
   12b69:	lea    rdi,[r13+0xb0]
   12b70:	call   11e50 <replace_string>
   12b75:	jmp    11f43 <parse_nic_config+0x93>
   12b7a:	mov    rsi,QWORD PTR [rsp+0x10]
   12b7f:	lea    rdi,[r13+0xa8]
   12b86:	xor    ebx,ebx
   12b88:	call   11e50 <replace_string>
   12b8d:	jmp    11f43 <parse_nic_config+0x93>
   12b92:	mov    rsi,QWORD PTR [rsp+0x10]
   12b97:	lea    rdi,[r13+0x1e8]
   12b9e:	call   11e50 <replace_string>
   12ba3:	jmp    11f43 <parse_nic_config+0x93>
   12ba8:	mov    rsi,QWORD PTR [rsp+0x10]
   12bad:	lea    rdi,[r13+0x1e0]
   12bb4:	xor    ebx,ebx
   12bb6:	call   11e50 <replace_string>
   12bbb:	jmp    11f43 <parse_nic_config+0x93>
   12bc0:	mov    rsi,QWORD PTR [rsp+0x10]
   12bc5:	lea    rdi,[r13+0x1d8]
   12bcc:	call   11e50 <replace_string>
   12bd1:	jmp    11f43 <parse_nic_config+0x93>
   12bd6:	mov    rsi,QWORD PTR [rsp+0x10]
   12bdb:	lea    rdi,[r13+0x1d0]
   12be2:	xor    ebx,ebx
   12be4:	call   11e50 <replace_string>
   12be9:	jmp    11f43 <parse_nic_config+0x93>
   12bee:	mov    rsi,QWORD PTR [rsp+0x10]
   12bf3:	lea    rdi,[r13+0x1c8]
   12bfa:	call   11e50 <replace_string>
   12bff:	jmp    11f43 <parse_nic_config+0x93>
   12c04:	mov    rsi,QWORD PTR [rsp+0x10]
   12c09:	lea    rdi,[r13+0x1c0]
   12c10:	xor    ebx,ebx
   12c12:	call   11e50 <replace_string>
   12c17:	jmp    11f43 <parse_nic_config+0x93>
   12c1c:	mov    rsi,QWORD PTR [rsp+0x10]
   12c21:	lea    rdi,[r13+0x1b8]
   12c28:	call   11e50 <replace_string>
   12c2d:	jmp    11f43 <parse_nic_config+0x93>
   12c32:	mov    rsi,QWORD PTR [rsp+0x10]
   12c37:	lea    rdi,[r13+0x1b0]
   12c3e:	xor    ebx,ebx
   12c40:	call   11e50 <replace_string>
   12c45:	jmp    11f43 <parse_nic_config+0x93>
   12c4a:	mov    rsi,QWORD PTR [rsp+0x10]
   12c4f:	lea    rdi,[r13+0x128]
   12c56:	call   11e50 <replace_string>
   12c5b:	jmp    11f43 <parse_nic_config+0x93>
   12c60:	mov    rsi,QWORD PTR [rsp+0x10]
   12c65:	lea    rdi,[r13+0x120]
   12c6c:	xor    ebx,ebx
   12c6e:	call   11e50 <replace_string>
   12c73:	jmp    11f43 <parse_nic_config+0x93>
   12c78:	mov    rsi,QWORD PTR [rsp+0x10]
   12c7d:	lea    rdi,[r13+0x118]
   12c84:	call   11e50 <replace_string>
   12c89:	jmp    11f43 <parse_nic_config+0x93>
   12c8e:	mov    rsi,QWORD PTR [rsp+0x10]
   12c93:	lea    rdi,[r13+0xc8]
   12c9a:	xor    ebx,ebx
   12c9c:	call   11e50 <replace_string>
   12ca1:	jmp    11f43 <parse_nic_config+0x93>
   12ca6:	mov    rsi,QWORD PTR [rsp+0x10]
   12cab:	lea    rdi,[r13+0xc0]
   12cb2:	call   11e50 <replace_string>
   12cb7:	jmp    11f43 <parse_nic_config+0x93>
   12cbc:	mov    rsi,QWORD PTR [rsp+0x10]
   12cc1:	lea    rdi,[r13+0xb8]
   12cc8:	xor    ebx,ebx
   12cca:	call   11e50 <replace_string>
   12ccf:	jmp    11f43 <parse_nic_config+0x93>
   12cd4:	mov    rsi,QWORD PTR [rsp+0x10]
   12cd9:	lea    rdi,[r13+0x98]
   12ce0:	call   11e50 <replace_string>
   12ce5:	jmp    11f43 <parse_nic_config+0x93>
   12cea:	mov    rsi,QWORD PTR [rsp+0x10]
   12cef:	lea    rdi,[r13+0x90]
   12cf6:	xor    ebx,ebx
   12cf8:	call   11e50 <replace_string>
   12cfd:	jmp    11f43 <parse_nic_config+0x93>
   12d02:	mov    rsi,QWORD PTR [rsp+0x10]
   12d07:	lea    rdi,[r13+0x88]
   12d0e:	call   11e50 <replace_string>
   12d13:	jmp    11f43 <parse_nic_config+0x93>
   12d18:	mov    rsi,QWORD PTR [rsp+0x10]
   12d1d:	lea    rdi,[r13+0x110]
   12d24:	xor    ebx,ebx
   12d26:	call   11e50 <replace_string>
   12d2b:	jmp    11f43 <parse_nic_config+0x93>
   12d30:	mov    rsi,QWORD PTR [rsp+0x10]
   12d35:	lea    rdi,[r13+0x108]
   12d3c:	call   11e50 <replace_string>
   12d41:	jmp    11f43 <parse_nic_config+0x93>
   12d46:	mov    rsi,QWORD PTR [rsp+0x10]
   12d4b:	lea    rdi,[r13+0x100]
   12d52:	xor    ebx,ebx
   12d54:	call   11e50 <replace_string>
   12d59:	jmp    11f43 <parse_nic_config+0x93>
   12d5e:	mov    rsi,QWORD PTR [rsp+0x10]
   12d63:	lea    rdi,[r13+0xf8]
   12d6a:	call   11e50 <replace_string>
   12d6f:	jmp    11f43 <parse_nic_config+0x93>
   12d74:	mov    rsi,QWORD PTR [rsp+0x10]
   12d79:	lea    rdi,[r13+0xf0]
   12d80:	xor    ebx,ebx
   12d82:	call   11e50 <replace_string>
   12d87:	jmp    11f43 <parse_nic_config+0x93>
   12d8c:	mov    rsi,QWORD PTR [rsp+0x10]
   12d91:	lea    rdi,[r13+0xe8]
   12d98:	call   11e50 <replace_string>
   12d9d:	jmp    11f43 <parse_nic_config+0x93>
   12da2:	mov    rsi,QWORD PTR [rsp+0x10]
   12da7:	lea    rdi,[r13+0xe0]
   12dae:	xor    ebx,ebx
   12db0:	call   11e50 <replace_string>
   12db5:	jmp    11f43 <parse_nic_config+0x93>
   12dba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012dc0 <parse_usbctrl_config>:
   12dc0:	push   r13
   12dc2:	push   r12
   12dc4:	mov    r13,rdi
   12dc7:	push   rbp
   12dc8:	push   rbx
   12dc9:	lea    rdi,[rip+0x1c08e]        # 2ee5e <__func__.10421+0xad6>
   12dd0:	mov    rdx,rsi
   12dd3:	mov    rbp,rsi
   12dd6:	mov    esi,0x5
   12ddb:	sub    rsp,0x18
   12ddf:	mov    r12,rsp
   12de2:	mov    rcx,r12
   12de5:	mov    rax,QWORD PTR fs:0x28
   12dee:	mov    QWORD PTR [rsp+0x8],rax
   12df3:	xor    eax,eax
   12df5:	call   11e80 <match_option_size>
   12dfa:	test   eax,eax
   12dfc:	je     12e40 <parse_usbctrl_config+0x80>
   12dfe:	mov    rdi,QWORD PTR [rsp]
   12e02:	mov    rsi,r13
   12e05:	call   be00 <libxl_usbctrl_type_from_string@plt>
   12e0a:	test   eax,eax
   12e0c:	mov    ebx,eax
   12e0e:	mov    rcx,QWORD PTR [rsp]
   12e12:	lea    rdx,[rip+0x1cdb7]        # 2fbd0 <__func__.10421+0x1848>
   12e19:	jne    12e82 <parse_usbctrl_config+0xc2>
   12e1b:	mov    rcx,QWORD PTR [rsp+0x8]
   12e20:	xor    rcx,QWORD PTR fs:0x28
   12e29:	mov    eax,ebx
   12e2b:	jne    12ee1 <parse_usbctrl_config+0x121>
   12e31:	add    rsp,0x18
   12e35:	pop    rbx
   12e36:	pop    rbp
   12e37:	pop    r12
   12e39:	pop    r13
   12e3b:	ret    
   12e3c:	nop    DWORD PTR [rax+0x0]
   12e40:	lea    rdi,[rip+0x1bfc3]        # 2ee0a <__func__.10421+0xa82>
   12e47:	mov    rcx,r12
   12e4a:	mov    rdx,rbp
   12e4d:	mov    esi,0x8
   12e52:	mov    ebx,eax
   12e54:	call   11e80 <match_option_size>
   12e59:	test   eax,eax
   12e5b:	jne    12ea8 <parse_usbctrl_config+0xe8>
   12e5d:	lea    rdi,[rip+0x1bfaf]        # 2ee13 <__func__.10421+0xa8b>
   12e64:	mov    rcx,r12
   12e67:	mov    rdx,rbp
   12e6a:	mov    esi,0x6
   12e6f:	call   11e80 <match_option_size>
   12e74:	test   eax,eax
   12e76:	mov    rcx,rbp
   12e79:	lea    rdx,[rip+0x1cd78]        # 2fbf8 <__func__.10421+0x1870>
   12e80:	jne    12ec8 <parse_usbctrl_config+0x108>
   12e82:	mov    rax,QWORD PTR [rip+0x228167]        # 23aff0 <stderr@GLIBC_2.2.5>
   12e89:	mov    esi,0x1
   12e8e:	mov    ebx,0x1
   12e93:	mov    rdi,QWORD PTR [rax]
   12e96:	xor    eax,eax
   12e98:	call   c1e0 <__fprintf_chk@plt>
   12e9d:	jmp    12e1b <parse_usbctrl_config+0x5b>
   12ea2:	nop    WORD PTR [rax+rax*1+0x0]
   12ea8:	mov    rdi,QWORD PTR [rsp]
   12eac:	mov    edx,0xa
   12eb1:	xor    esi,esi
   12eb3:	call   b7b0 <strtol@plt>
   12eb8:	mov    DWORD PTR [r13+0x8],eax
   12ebc:	jmp    12e1b <parse_usbctrl_config+0x5b>
   12ec1:	nop    DWORD PTR [rax+0x0]
   12ec8:	mov    rdi,QWORD PTR [rsp]
   12ecc:	mov    edx,0xa
   12ed1:	xor    esi,esi
   12ed3:	call   b7b0 <strtol@plt>
   12ed8:	mov    DWORD PTR [r13+0xc],eax
   12edc:	jmp    12e1b <parse_usbctrl_config+0x5b>
   12ee1:	call   b130 <__stack_chk_fail@plt>
   12ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000012ef0 <parse_usbdev_config>:
   12ef0:	push   r13
   12ef2:	push   r12
   12ef4:	mov    r13,rdi
   12ef7:	push   rbp
   12ef8:	push   rbx
   12ef9:	lea    rdi,[rip+0x1bf5e]        # 2ee5e <__func__.10421+0xad6>
   12f00:	mov    rdx,rsi
   12f03:	mov    rbp,rsi
   12f06:	mov    esi,0x5
   12f0b:	sub    rsp,0x18
   12f0f:	mov    r12,rsp
   12f12:	mov    rcx,r12
   12f15:	mov    rax,QWORD PTR fs:0x28
   12f1e:	mov    QWORD PTR [rsp+0x8],rax
   12f23:	xor    eax,eax
   12f25:	call   11e80 <match_option_size>
   12f2a:	test   eax,eax
   12f2c:	je     12f70 <parse_usbdev_config+0x80>
   12f2e:	mov    rdi,QWORD PTR [rsp]
   12f32:	lea    rsi,[r13+0x8]
   12f36:	call   baf0 <libxl_usbdev_type_from_string@plt>
   12f3b:	test   eax,eax
   12f3d:	mov    ebx,eax
   12f3f:	jne    13030 <parse_usbdev_config+0x140>
   12f45:	mov    rcx,QWORD PTR [rsp+0x8]
   12f4a:	xor    rcx,QWORD PTR fs:0x28
   12f53:	mov    eax,ebx
   12f55:	jne    13099 <parse_usbdev_config+0x1a9>
   12f5b:	add    rsp,0x18
   12f5f:	pop    rbx
   12f60:	pop    rbp
   12f61:	pop    r12
   12f63:	pop    r13
   12f65:	ret    
   12f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12f70:	lea    rdi,[rip+0x1bec0]        # 2ee37 <__func__.10421+0xaaf>
   12f77:	mov    rcx,r12
   12f7a:	mov    rdx,rbp
   12f7d:	mov    esi,0x8
   12f82:	mov    ebx,eax
   12f84:	call   11e80 <match_option_size>
   12f89:	test   eax,eax
   12f8b:	jne    13010 <parse_usbdev_config+0x120>
   12f91:	lea    rdi,[rip+0x1bea8]        # 2ee40 <__func__.10421+0xab8>
   12f98:	mov    rcx,r12
   12f9b:	mov    rdx,rbp
   12f9e:	mov    esi,0x9
   12fa3:	call   11e80 <match_option_size>
   12fa8:	test   eax,eax
   12faa:	mov    ebx,eax
   12fac:	jne    13068 <parse_usbdev_config+0x178>
   12fb2:	lea    rdi,[rip+0x1be91]        # 2ee4a <__func__.10421+0xac2>
   12fb9:	mov    rcx,r12
   12fbc:	mov    rdx,rbp
   12fbf:	mov    esi,0xb
   12fc4:	call   11e80 <match_option_size>
   12fc9:	test   eax,eax
   12fcb:	jne    13080 <parse_usbdev_config+0x190>
   12fd1:	lea    rdi,[rip+0x1bbc0]        # 2eb98 <__func__.10421+0x810>
   12fd8:	mov    rcx,r12
   12fdb:	mov    rdx,rbp
   12fde:	mov    esi,0x5
   12fe3:	call   11e80 <match_option_size>
   12fe8:	test   eax,eax
   12fea:	mov    rcx,rbp
   12fed:	lea    rdx,[rip+0x1cc2c]        # 2fc20 <__func__.10421+0x1898>
   12ff4:	je     13041 <parse_usbdev_config+0x151>
   12ff6:	mov    rdi,QWORD PTR [rsp]
   12ffa:	mov    edx,0xa
   12fff:	xor    esi,esi
   13001:	call   b7b0 <strtol@plt>
   13006:	mov    DWORD PTR [r13+0x4],eax
   1300a:	jmp    12f45 <parse_usbdev_config+0x55>
   1300f:	nop
   13010:	mov    rdi,QWORD PTR [rsp]
   13014:	xor    edx,edx
   13016:	xor    esi,esi
   13018:	call   c090 <strtoul@plt>
   1301d:	mov    BYTE PTR [r13+0xc],al
   13021:	jmp    12f45 <parse_usbdev_config+0x55>
   13026:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13030:	mov    rax,QWORD PTR [rip+0x227f89]        # 23afc0 <optarg@GLIBC_2.2.5>
   13037:	lea    rdx,[rip+0x1bddc]        # 2ee1a <__func__.10421+0xa92>
   1303e:	mov    rcx,QWORD PTR [rax]
   13041:	mov    rax,QWORD PTR [rip+0x227fa8]        # 23aff0 <stderr@GLIBC_2.2.5>
   13048:	mov    esi,0x1
   1304d:	mov    ebx,0x1
   13052:	mov    rdi,QWORD PTR [rax]
   13055:	xor    eax,eax
   13057:	call   c1e0 <__fprintf_chk@plt>
   1305c:	jmp    12f45 <parse_usbdev_config+0x55>
   13061:	nop    DWORD PTR [rax+0x0]
   13068:	mov    rdi,QWORD PTR [rsp]
   1306c:	xor    edx,edx
   1306e:	xor    esi,esi
   13070:	xor    ebx,ebx
   13072:	call   c090 <strtoul@plt>
   13077:	mov    BYTE PTR [r13+0xd],al
   1307b:	jmp    12f45 <parse_usbdev_config+0x55>
   13080:	mov    rdi,QWORD PTR [rsp]
   13084:	mov    edx,0xa
   13089:	xor    esi,esi
   1308b:	call   b7b0 <strtol@plt>
   13090:	mov    DWORD PTR [r13+0x0],eax
   13094:	jmp    12f45 <parse_usbdev_config+0x55>
   13099:	call   b130 <__stack_chk_fail@plt>
   1309e:	xchg   ax,ax

00000000000130a0 <parse_vkb_config>:
   130a0:	push   r13
   130a2:	push   r12
   130a4:	mov    r13,rdi
   130a7:	push   rbp
   130a8:	push   rbx
   130a9:	lea    rdi,[rip+0x1b9f8]        # 2eaa8 <__func__.10421+0x720>
   130b0:	mov    rdx,rsi
   130b3:	mov    rbp,rsi
   130b6:	mov    esi,0x8
   130bb:	sub    rsp,0x28
   130bf:	lea    r12,[rsp+0x10]
   130c4:	mov    rax,QWORD PTR fs:0x28
   130cd:	mov    QWORD PTR [rsp+0x18],rax
   130d2:	xor    eax,eax
   130d4:	mov    rcx,r12
   130d7:	call   11e80 <match_option_size>
   130dc:	test   eax,eax
   130de:	jne    132c0 <parse_vkb_config+0x220>
   130e4:	lea    rdi,[rip+0x1bd6b]        # 2ee56 <__func__.10421+0xace>
   130eb:	mov    rcx,r12
   130ee:	mov    rdx,rbp
   130f1:	mov    esi,0xd
   130f6:	call   11e80 <match_option_size>
   130fb:	test   eax,eax
   130fd:	mov    ebx,eax
   130ff:	je     13148 <parse_vkb_config+0xa8>
   13101:	mov    rdi,QWORD PTR [rsp+0x10]
   13106:	lea    rsi,[rsp+0xc]
   1310b:	call   ba10 <libxl_vkb_backend_from_string@plt>
   13110:	test   eax,eax
   13112:	mov    ebx,eax
   13114:	jne    1339f <parse_vkb_config+0x2ff>
   1311a:	mov    eax,DWORD PTR [rsp+0xc]
   1311e:	mov    DWORD PTR [r13+0x14],eax
   13122:	mov    rcx,QWORD PTR [rsp+0x18]
   13127:	xor    rcx,QWORD PTR fs:0x28
   13130:	mov    eax,ebx
   13132:	jne    13414 <parse_vkb_config+0x374>
   13138:	add    rsp,0x28
   1313c:	pop    rbx
   1313d:	pop    rbp
   1313e:	pop    r12
   13140:	pop    r13
   13142:	ret    
   13143:	nop    DWORD PTR [rax+rax*1+0x0]
   13148:	lea    rdi,[rip+0x1bd15]        # 2ee64 <__func__.10421+0xadc>
   1314f:	mov    rcx,r12
   13152:	mov    rdx,rbp
   13155:	mov    esi,0xa
   1315a:	call   11e80 <match_option_size>
   1315f:	test   eax,eax
   13161:	jne    132d8 <parse_vkb_config+0x238>
   13167:	lea    rdi,[rip+0x1bd01]        # 2ee6f <__func__.10421+0xae7>
   1316e:	mov    rcx,r12
   13171:	mov    rdx,rbp
   13174:	mov    esi,0x19
   13179:	call   11e80 <match_option_size>
   1317e:	test   eax,eax
   13180:	mov    ebx,eax
   13182:	jne    132f0 <parse_vkb_config+0x250>
   13188:	lea    rdi,[rip+0x1bcfa]        # 2ee89 <__func__.10421+0xb01>
   1318f:	mov    rcx,r12
   13192:	mov    rdx,rbp
   13195:	mov    esi,0x18
   1319a:	call   11e80 <match_option_size>
   1319f:	test   eax,eax
   131a1:	jne    13310 <parse_vkb_config+0x270>
   131a7:	lea    rdi,[rip+0x1bcf4]        # 2eea2 <__func__.10421+0xb1a>
   131ae:	mov    rcx,r12
   131b1:	mov    rdx,rbp
   131b4:	mov    esi,0x14
   131b9:	call   11e80 <match_option_size>
   131be:	test   eax,eax
   131c0:	mov    ebx,eax
   131c2:	jne    13330 <parse_vkb_config+0x290>
   131c8:	lea    rdi,[rip+0x1bce8]        # 2eeb7 <__func__.10421+0xb2f>
   131cf:	mov    rcx,r12
   131d2:	mov    rdx,rbp
   131d5:	mov    esi,0x14
   131da:	call   11e80 <match_option_size>
   131df:	test   eax,eax
   131e1:	jne    13350 <parse_vkb_config+0x2b0>
   131e7:	lea    rdi,[rip+0x1bcde]        # 2eecc <__func__.10421+0xb44>
   131ee:	mov    rcx,r12
   131f1:	mov    rdx,rbp
   131f4:	mov    esi,0x14
   131f9:	call   11e80 <match_option_size>
   131fe:	test   eax,eax
   13200:	mov    ebx,eax
   13202:	jne    1336b <parse_vkb_config+0x2cb>
   13208:	lea    rdi,[rip+0x1bcd2]        # 2eee1 <__func__.10421+0xb59>
   1320f:	mov    rcx,r12
   13212:	mov    rdx,rbp
   13215:	mov    esi,0x12
   1321a:	call   11e80 <match_option_size>
   1321f:	test   eax,eax
   13221:	jne    13388 <parse_vkb_config+0x2e8>
   13227:	lea    rdi,[rip+0x1bcc6]        # 2eef4 <__func__.10421+0xb6c>
   1322e:	mov    rcx,r12
   13231:	mov    rdx,rbp
   13234:	mov    esi,0x13
   13239:	call   11e80 <match_option_size>
   1323e:	test   eax,eax
   13240:	mov    ebx,eax
   13242:	jne    133cb <parse_vkb_config+0x32b>
   13248:	lea    rdi,[rip+0x1bcb9]        # 2ef08 <__func__.10421+0xb80>
   1324f:	mov    rcx,r12
   13252:	mov    rdx,rbp
   13255:	mov    esi,0x19
   1325a:	call   11e80 <match_option_size>
   1325f:	test   eax,eax
   13261:	jne    133e4 <parse_vkb_config+0x344>
   13267:	lea    rdi,[rip+0x1bc7f]        # 2eeed <__func__.10421+0xb65>
   1326e:	mov    rcx,r12
   13271:	mov    rdx,rbp
   13274:	mov    esi,0x6
   13279:	call   11e80 <match_option_size>
   1327e:	test   eax,eax
   13280:	mov    ebx,eax
   13282:	jne    133fb <parse_vkb_config+0x35b>
   13288:	lea    rdi,[rip+0x1bc71]        # 2ef00 <__func__.10421+0xb78>
   1328f:	mov    rcx,r12
   13292:	mov    rdx,rbp
   13295:	mov    esi,0x7
   1329a:	call   11e80 <match_option_size>
   1329f:	test   eax,eax
   132a1:	je     13419 <parse_vkb_config+0x379>
   132a7:	mov    rdi,QWORD PTR [rsp+0x10]
   132ac:	xor    edx,edx
   132ae:	xor    esi,esi
   132b0:	call   c090 <strtoul@plt>
   132b5:	mov    DWORD PTR [r13+0x2c],eax
   132b9:	jmp    13122 <parse_vkb_config+0x82>
   132be:	xchg   ax,ax
   132c0:	mov    rdi,QWORD PTR [rsp+0x10]
   132c5:	xor    ebx,ebx
   132c7:	call   c360 <strdup@plt>
   132cc:	mov    QWORD PTR [r13+0x8],rax
   132d0:	jmp    13122 <parse_vkb_config+0x82>
   132d5:	nop    DWORD PTR [rax]
   132d8:	mov    rdi,QWORD PTR [rsp+0x10]
   132dd:	call   c360 <strdup@plt>
   132e2:	mov    QWORD PTR [r13+0x18],rax
   132e6:	jmp    13122 <parse_vkb_config+0x82>
   132eb:	nop    DWORD PTR [rax+rax*1+0x0]
   132f0:	mov    rdi,QWORD PTR [rsp+0x10]
   132f5:	xor    edx,edx
   132f7:	xor    esi,esi
   132f9:	call   c090 <strtoul@plt>
   132fe:	test   rax,rax
   13301:	setne  BYTE PTR [r13+0x20]
   13306:	xor    ebx,ebx
   13308:	jmp    13122 <parse_vkb_config+0x82>
   1330d:	nop    DWORD PTR [rax]
   13310:	mov    rdi,QWORD PTR [rsp+0x10]
   13315:	xor    edx,edx
   13317:	xor    esi,esi
   13319:	call   c090 <strtoul@plt>
   1331e:	test   rax,rax
   13321:	setne  BYTE PTR [r13+0x21]
   13326:	jmp    13122 <parse_vkb_config+0x82>
   1332b:	nop    DWORD PTR [rax+rax*1+0x0]
   13330:	mov    rdi,QWORD PTR [rsp+0x10]
   13335:	xor    edx,edx
   13337:	xor    esi,esi
   13339:	call   c090 <strtoul@plt>
   1333e:	test   rax,rax
   13341:	setne  BYTE PTR [r13+0x22]
   13346:	xor    ebx,ebx
   13348:	jmp    13122 <parse_vkb_config+0x82>
   1334d:	nop    DWORD PTR [rax]
   13350:	mov    rdi,QWORD PTR [rsp+0x10]
   13355:	xor    edx,edx
   13357:	xor    esi,esi
   13359:	call   c090 <strtoul@plt>
   1335e:	test   rax,rax
   13361:	setne  BYTE PTR [r13+0x23]
   13366:	jmp    13122 <parse_vkb_config+0x82>
   1336b:	mov    rdi,QWORD PTR [rsp+0x10]
   13370:	xor    edx,edx
   13372:	xor    esi,esi
   13374:	call   c090 <strtoul@plt>
   13379:	test   rax,rax
   1337c:	setne  BYTE PTR [r13+0x24]
   13381:	xor    ebx,ebx
   13383:	jmp    13122 <parse_vkb_config+0x82>
   13388:	mov    rdi,QWORD PTR [rsp+0x10]
   1338d:	xor    edx,edx
   1338f:	xor    esi,esi
   13391:	call   c090 <strtoul@plt>
   13396:	mov    DWORD PTR [r13+0x30],eax
   1339a:	jmp    13122 <parse_vkb_config+0x82>
   1339f:	mov    rcx,QWORD PTR [rsp+0x10]
   133a4:	lea    rdx,[rip+0x1c89d]        # 2fc48 <__func__.10421+0x18c0>
   133ab:	mov    rax,QWORD PTR [rip+0x227c3e]        # 23aff0 <stderr@GLIBC_2.2.5>
   133b2:	mov    esi,0x1
   133b7:	mov    ebx,0xffffffff
   133bc:	mov    rdi,QWORD PTR [rax]
   133bf:	xor    eax,eax
   133c1:	call   c1e0 <__fprintf_chk@plt>
   133c6:	jmp    13122 <parse_vkb_config+0x82>
   133cb:	mov    rdi,QWORD PTR [rsp+0x10]
   133d0:	xor    edx,edx
   133d2:	xor    esi,esi
   133d4:	xor    ebx,ebx
   133d6:	call   c090 <strtoul@plt>
   133db:	mov    DWORD PTR [r13+0x34],eax
   133df:	jmp    13122 <parse_vkb_config+0x82>
   133e4:	mov    rdi,QWORD PTR [rsp+0x10]
   133e9:	xor    edx,edx
   133eb:	xor    esi,esi
   133ed:	call   c090 <strtoul@plt>
   133f2:	mov    DWORD PTR [r13+0x38],eax
   133f6:	jmp    13122 <parse_vkb_config+0x82>
   133fb:	mov    rdi,QWORD PTR [rsp+0x10]
   13400:	xor    edx,edx
   13402:	xor    esi,esi
   13404:	xor    ebx,ebx
   13406:	call   c090 <strtoul@plt>
   1340b:	mov    DWORD PTR [r13+0x28],eax
   1340f:	jmp    13122 <parse_vkb_config+0x82>
   13414:	call   b130 <__stack_chk_fail@plt>
   13419:	mov    rcx,rbp
   1341c:	lea    rdx,[rip+0x1c84d]        # 2fc70 <__func__.10421+0x18e8>
   13423:	jmp    133ab <parse_vkb_config+0x30b>
   13425:	nop
   13426:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013430 <parse_mem_size_kb>:
   13430:	push   rbp
   13431:	push   rbx
   13432:	mov    edx,0xa
   13437:	sub    rsp,0x18
   1343b:	mov    rsi,rsp
   1343e:	mov    rax,QWORD PTR fs:0x28
   13447:	mov    QWORD PTR [rsp+0x8],rax
   1344c:	xor    eax,eax
   1344e:	call   b6b0 <strtoll@plt>
   13453:	mov    rbp,QWORD PTR [rsp]
   13457:	mov    rbx,rax
   1345a:	mov    rdi,rbp
   1345d:	call   b0c0 <strlen@plt>
   13462:	cmp    rax,0x1
   13466:	ja     1348d <parse_mem_size_kb+0x5d>
   13468:	call   c4d0 <__ctype_tolower_loc@plt>
   1346d:	movzx  edx,BYTE PTR [rbp+0x0]
   13471:	mov    rax,QWORD PTR [rax]
   13474:	mov    eax,DWORD PTR [rax+rdx*4]
   13477:	cmp    eax,0x67
   1347a:	je     134c4 <parse_mem_size_kb+0x94>
   1347c:	jle    134b0 <parse_mem_size_kb+0x80>
   1347e:	cmp    eax,0x6d
   13481:	je     134c8 <parse_mem_size_kb+0x98>
   13483:	cmp    eax,0x74
   13486:	je     134c0 <parse_mem_size_kb+0x90>
   13488:	cmp    eax,0x6b
   1348b:	je     13494 <parse_mem_size_kb+0x64>
   1348d:	mov    rbx,0xffffffffffffffff
   13494:	mov    rcx,QWORD PTR [rsp+0x8]
   13499:	xor    rcx,QWORD PTR fs:0x28
   134a2:	mov    rax,rbx
   134a5:	jne    134ce <parse_mem_size_kb+0x9e>
   134a7:	add    rsp,0x18
   134ab:	pop    rbx
   134ac:	pop    rbp
   134ad:	ret    
   134ae:	xchg   ax,ax
   134b0:	test   eax,eax
   134b2:	je     134c8 <parse_mem_size_kb+0x98>
   134b4:	sar    rbx,0xa
   134b8:	cmp    eax,0x62
   134bb:	je     13494 <parse_mem_size_kb+0x64>
   134bd:	jmp    1348d <parse_mem_size_kb+0x5d>
   134bf:	nop
   134c0:	shl    rbx,0xa
   134c4:	shl    rbx,0xa
   134c8:	shl    rbx,0xa
   134cc:	jmp    13494 <parse_mem_size_kb+0x64>
   134ce:	call   b130 <__stack_chk_fail@plt>
   134d3:	nop    DWORD PTR [rax]
   134d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000134e0 <split_string_into_string_list>:
   134e0:	push   r15
   134e2:	push   r14
   134e4:	mov    r15,rdi
   134e7:	push   r13
   134e9:	push   r12
   134eb:	mov    r12,rsi
   134ee:	push   rbp
   134ef:	push   rbx
   134f0:	sub    rsp,0x28
   134f4:	mov    rax,QWORD PTR fs:0x28
   134fd:	mov    QWORD PTR [rsp+0x18],rax
   13502:	xor    eax,eax
   13504:	mov    QWORD PTR [rsp+0x8],rdx
   13509:	call   c360 <strdup@plt>
   1350e:	test   rax,rax
   13511:	je     13621 <split_string_into_string_list+0x141>
   13517:	lea    r13,[rsp+0x10]
   1351c:	mov    rsi,r12
   1351f:	mov    rdi,rax
   13522:	mov    r14,rax
   13525:	xor    ebp,ebp
   13527:	mov    rdx,r13
   1352a:	call   b580 <strtok_r@plt>
   1352f:	jmp    1353a <split_string_into_string_list+0x5a>
   13531:	nop    DWORD PTR [rax+0x0]
   13538:	mov    ebp,ebx
   1353a:	xor    edi,edi
   1353c:	mov    rdx,r13
   1353f:	mov    rsi,r12
   13542:	call   b580 <strtok_r@plt>
   13547:	test   rax,rax
   1354a:	lea    ebx,[rbp+0x1]
   1354d:	jne    13538 <split_string_into_string_list+0x58>
   1354f:	mov    rdi,r14
   13552:	call   ac40 <free@plt>
   13557:	mov    rdi,r15
   1355a:	call   c360 <strdup@plt>
   1355f:	lea    edi,[rbp+0x2]
   13562:	mov    QWORD PTR [rsp],rax
   13566:	movsxd rdi,edi
   13569:	shl    rdi,0x3
   1356d:	call   ba00 <malloc@plt>
   13572:	test   rax,rax
   13575:	mov    r14,rax
   13578:	je     13621 <split_string_into_string_list+0x141>
   1357e:	mov    rdi,QWORD PTR [rsp]
   13582:	mov    rdx,r13
   13585:	mov    rsi,r12
   13588:	add    rbp,0x2
   1358c:	mov    ebx,0x1
   13591:	call   b580 <strtok_r@plt>
   13596:	jmp    135a9 <split_string_into_string_list+0xc9>
   13598:	nop    DWORD PTR [rax+rax*1+0x0]
   135a0:	add    rbx,0x1
   135a4:	cmp    rbx,rbp
   135a7:	je     13602 <split_string_into_string_list+0x122>
   135a9:	mov    rdi,rax
   135ac:	movsxd r15,ebx
   135af:	call   c360 <strdup@plt>
   135b4:	xor    edi,edi
   135b6:	mov    QWORD PTR [r14+rbx*8-0x8],rax
   135bb:	mov    rdx,r13
   135be:	mov    rsi,r12
   135c1:	call   b580 <strtok_r@plt>
   135c6:	test   rax,rax
   135c9:	jne    135a0 <split_string_into_string_list+0xc0>
   135cb:	mov    rax,QWORD PTR [rsp+0x8]
   135d0:	mov    QWORD PTR [r14+r15*8],0x0
   135d8:	mov    QWORD PTR [rax],r14
   135db:	mov    rax,QWORD PTR [rsp+0x18]
   135e0:	xor    rax,QWORD PTR fs:0x28
   135e9:	jne    13649 <split_string_into_string_list+0x169>
   135eb:	mov    rdi,QWORD PTR [rsp]
   135ef:	add    rsp,0x28
   135f3:	pop    rbx
   135f4:	pop    rbp
   135f5:	pop    r12
   135f7:	pop    r13
   135f9:	pop    r14
   135fb:	pop    r15
   135fd:	jmp    ac40 <free@plt>
   13602:	lea    rcx,[rip+0x1da67]        # 31070 <__PRETTY_FUNCTION__.10523>
   13609:	lea    rsi,[rip+0x1b912]        # 2ef22 <__func__.10421+0xb9a>
   13610:	lea    rdi,[rip+0x1b916]        # 2ef2d <__func__.10421+0xba5>
   13617:	mov    edx,0xacf
   1361c:	call   b2f0 <__assert_fail@plt>
   13621:	mov    rax,QWORD PTR [rip+0x2279c8]        # 23aff0 <stderr@GLIBC_2.2.5>
   13628:	lea    rdi,[rip+0x1c669]        # 2fc98 <__func__.10421+0x1910>
   1362f:	mov    edx,0x2a
   13634:	mov    esi,0x1
   13639:	mov    rcx,QWORD PTR [rax]
   1363c:	call   c1b0 <fwrite@plt>
   13641:	or     edi,0xffffffff
   13644:	call   c1a0 <exit@plt>
   13649:	call   b130 <__stack_chk_fail@plt>
   1364e:	xchg   ax,ax

0000000000013650 <parse_vsnd_params>:
   13650:	push   r15
   13652:	push   r14
   13654:	mov    rdx,rsi
   13657:	push   r13
   13659:	push   r12
   1365b:	push   rbp
   1365c:	push   rbx
   1365d:	mov    rbp,rdi
   13660:	lea    rdi,[rip+0x1b8cd]        # 2ef34 <__func__.10421+0xbac>
   13667:	mov    rbx,rsi
   1366a:	mov    esi,0xd
   1366f:	sub    rsp,0x38
   13673:	lea    r13,[rsp+0x18]
   13678:	mov    rax,QWORD PTR fs:0x28
   13681:	mov    QWORD PTR [rsp+0x28],rax
   13686:	xor    eax,eax
   13688:	mov    rcx,r13
   1368b:	call   11e80 <match_option_size>
   13690:	test   eax,eax
   13692:	je     13750 <parse_vsnd_params+0x100>
   13698:	lea    rax,[rsp+0x20]
   1369d:	mov    rdi,QWORD PTR [rsp+0x18]
   136a2:	lea    rsi,[rip+0x2216a]        # 35813 <migrate_receiver_banner+0x1d3>
   136a9:	mov    QWORD PTR [rsp+0x20],0x0
   136b2:	mov    rdx,rax
   136b5:	mov    rbx,rax
   136b8:	mov    QWORD PTR [rsp+0x8],rax
   136bd:	call   134e0 <split_string_into_string_list>
   136c2:	mov    rdi,rbx
   136c5:	call   b370 <libxl_string_list_length@plt>
   136ca:	mov    esi,0x4
   136cf:	mov    DWORD PTR [rbp+0x0],eax
   136d2:	movsxd rdi,eax
   136d5:	call   e9e0 <xcalloc>
   136da:	mov    edx,DWORD PTR [rbp+0x0]
   136dd:	mov    QWORD PTR [rbp+0x8],rax
   136e1:	test   edx,edx
   136e3:	jle    13717 <parse_vsnd_params+0xc7>
   136e5:	xor    ebx,ebx
   136e7:	xor    r12d,r12d
   136ea:	nop    WORD PTR [rax+rax*1+0x0]
   136f0:	mov    rax,QWORD PTR [rsp+0x20]
   136f5:	xor    edx,edx
   136f7:	xor    esi,esi
   136f9:	add    r12d,0x1
   136fd:	mov    rdi,QWORD PTR [rax+rbx*2]
   13701:	call   c090 <strtoul@plt>
   13706:	mov    rdx,QWORD PTR [rbp+0x8]
   1370a:	mov    DWORD PTR [rdx+rbx*1],eax
   1370d:	add    rbx,0x4
   13711:	cmp    DWORD PTR [rbp+0x0],r12d
   13715:	jg     136f0 <parse_vsnd_params+0xa0>
   13717:	mov    rdi,QWORD PTR [rsp+0x8]
   1371c:	xor    r12d,r12d
   1371f:	call   b9a0 <libxl_string_list_dispose@plt>
   13724:	mov    rcx,QWORD PTR [rsp+0x28]
   13729:	xor    rcx,QWORD PTR fs:0x28
   13732:	mov    eax,r12d
   13735:	jne    138fc <parse_vsnd_params+0x2ac>
   1373b:	add    rsp,0x38
   1373f:	pop    rbx
   13740:	pop    rbp
   13741:	pop    r12
   13743:	pop    r13
   13745:	pop    r14
   13747:	pop    r15
   13749:	ret    
   1374a:	nop    WORD PTR [rax+rax*1+0x0]
   13750:	lea    rdi,[rip+0x1b7eb]        # 2ef42 <__func__.10421+0xbba>
   13757:	mov    rcx,r13
   1375a:	mov    rdx,rbx
   1375d:	mov    esi,0xf
   13762:	mov    r12d,eax
   13765:	call   11e80 <match_option_size>
   1376a:	test   eax,eax
   1376c:	je     13818 <parse_vsnd_params+0x1c8>
   13772:	lea    rax,[rsp+0x20]
   13777:	mov    rdi,QWORD PTR [rsp+0x18]
   1377c:	lea    rsi,[rip+0x22090]        # 35813 <migrate_receiver_banner+0x1d3>
   13783:	mov    QWORD PTR [rsp+0x20],0x0
   1378c:	mov    rbx,rax
   1378f:	mov    rdx,rax
   13792:	mov    QWORD PTR [rsp+0x8],rax
   13797:	call   134e0 <split_string_into_string_list>
   1379c:	mov    rdi,rbx
   1379f:	call   b370 <libxl_string_list_length@plt>
   137a4:	mov    esi,0x4
   137a9:	mov    DWORD PTR [rbp+0x10],eax
   137ac:	movsxd rdi,eax
   137af:	call   e9e0 <xcalloc>
   137b4:	mov    QWORD PTR [rbp+0x18],rax
   137b8:	mov    eax,DWORD PTR [rbp+0x10]
   137bb:	test   eax,eax
   137bd:	jle    13806 <parse_vsnd_params+0x1b6>
   137bf:	lea    r13,[rsp+0x14]
   137c4:	xor    r14d,r14d
   137c7:	xor    ebx,ebx
   137c9:	nop    DWORD PTR [rax+0x0]
   137d0:	mov    rax,QWORD PTR [rsp+0x20]
   137d5:	mov    rsi,r13
   137d8:	lea    r15,[rbx+rbx*1]
   137dc:	mov    rdi,QWORD PTR [rax+rbx*2]
   137e0:	call   b350 <libxl_vsnd_pcm_format_from_string@plt>
   137e5:	test   eax,eax
   137e7:	jne    138cc <parse_vsnd_params+0x27c>
   137ed:	mov    rax,QWORD PTR [rbp+0x18]
   137f1:	mov    ecx,DWORD PTR [rsp+0x14]
   137f5:	add    r14d,0x1
   137f9:	mov    DWORD PTR [rax+rbx*1],ecx
   137fc:	add    rbx,0x4
   13800:	cmp    DWORD PTR [rbp+0x10],r14d
   13804:	jg     137d0 <parse_vsnd_params+0x180>
   13806:	mov    rdi,QWORD PTR [rsp+0x8]
   1380b:	call   b9a0 <libxl_string_list_dispose@plt>
   13810:	jmp    13724 <parse_vsnd_params+0xd4>
   13815:	nop    DWORD PTR [rax]
   13818:	lea    rdi,[rip+0x1b74b]        # 2ef6a <__func__.10421+0xbe2>
   1381f:	mov    rcx,r13
   13822:	mov    rdx,rbx
   13825:	mov    esi,0xd
   1382a:	call   11e80 <match_option_size>
   1382f:	test   eax,eax
   13831:	mov    r12d,eax
   13834:	jne    13880 <parse_vsnd_params+0x230>
   13836:	lea    rdi,[rip+0x1b73b]        # 2ef78 <__func__.10421+0xbf0>
   1383d:	mov    rcx,r13
   13840:	mov    rdx,rbx
   13843:	mov    esi,0xd
   13848:	call   11e80 <match_option_size>
   1384d:	test   eax,eax
   1384f:	jne    138a0 <parse_vsnd_params+0x250>
   13851:	lea    rdi,[rip+0x1b72e]        # 2ef86 <__func__.10421+0xbfe>
   13858:	mov    rcx,r13
   1385b:	mov    rdx,rbx
   1385e:	mov    esi,0xc
   13863:	call   11e80 <match_option_size>
   13868:	test   eax,eax
   1386a:	jne    138b6 <parse_vsnd_params+0x266>
   1386c:	mov    r12d,0x1
   13872:	jmp    13724 <parse_vsnd_params+0xd4>
   13877:	nop    WORD PTR [rax+rax*1+0x0]
   13880:	mov    rdi,QWORD PTR [rsp+0x18]
   13885:	xor    edx,edx
   13887:	xor    esi,esi
   13889:	xor    r12d,r12d
   1388c:	call   c090 <strtoul@plt>
   13891:	mov    DWORD PTR [rbp+0x20],eax
   13894:	jmp    13724 <parse_vsnd_params+0xd4>
   13899:	nop    DWORD PTR [rax+0x0]
   138a0:	mov    rdi,QWORD PTR [rsp+0x18]
   138a5:	xor    edx,edx
   138a7:	xor    esi,esi
   138a9:	call   c090 <strtoul@plt>
   138ae:	mov    DWORD PTR [rbp+0x24],eax
   138b1:	jmp    13724 <parse_vsnd_params+0xd4>
   138b6:	mov    rdi,QWORD PTR [rsp+0x18]
   138bb:	xor    edx,edx
   138bd:	xor    esi,esi
   138bf:	call   c090 <strtoul@plt>
   138c4:	mov    DWORD PTR [rbp+0x28],eax
   138c7:	jmp    13724 <parse_vsnd_params+0xd4>
   138cc:	mov    rax,QWORD PTR [rsp+0x20]
   138d1:	lea    rdx,[rip+0x1b67a]        # 2ef52 <__func__.10421+0xbca>
   138d8:	mov    esi,0x1
   138dd:	mov    rcx,QWORD PTR [rax+r15*1]
   138e1:	mov    rax,QWORD PTR [rip+0x227708]        # 23aff0 <stderr@GLIBC_2.2.5>
   138e8:	mov    rdi,QWORD PTR [rax]
   138eb:	xor    eax,eax
   138ed:	call   c1e0 <__fprintf_chk@plt>
   138f2:	mov    edi,0x1
   138f7:	call   c1a0 <exit@plt>
   138fc:	call   b130 <__stack_chk_fail@plt>
   13901:	nop    DWORD PTR [rax+rax*1+0x0]
   13906:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013910 <parse_vsnd_item>:
   13910:	push   r15
   13912:	push   r14
   13914:	push   r13
   13916:	push   r12
   13918:	mov    r12,rdi
   1391b:	push   rbp
   1391c:	push   rbx
   1391d:	mov    rdi,rsi
   13920:	xor    ebp,ebp
   13922:	sub    rsp,0x18
   13926:	mov    rax,QWORD PTR fs:0x28
   1392f:	mov    QWORD PTR [rsp+0x8],rax
   13934:	xor    eax,eax
   13936:	call   c360 <strdup@plt>
   1393b:	lea    rsi,[rip+0x1a7a9]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   13942:	mov    rdi,rax
   13945:	mov    r14,rax
   13948:	mov    r13,rsp
   1394b:	call   bfe0 <strtok@plt>
   13950:	test   rax,rax
   13953:	mov    rbx,rax
   13956:	jne    13964 <parse_vsnd_item+0x54>
   13958:	jmp    139c9 <parse_vsnd_item+0xb9>
   1395a:	nop    WORD PTR [rax+rax*1+0x0]
   13960:	add    rbx,0x1
   13964:	cmp    BYTE PTR [rbx],0x20
   13967:	je     13960 <parse_vsnd_item+0x50>
   13969:	test   rbp,rbp
   1396c:	lea    rsi,[rip+0x1b620]        # 2ef93 <__func__.10421+0xc0b>
   13973:	je     13ab0 <parse_vsnd_item+0x1a0>
   13979:	mov    rdi,rbp
   1397c:	call   acd0 <strcasecmp@plt>
   13981:	test   eax,eax
   13983:	je     13a00 <parse_vsnd_item+0xf0>
   13985:	lea    rsi,[rip+0x1b60c]        # 2ef98 <__func__.10421+0xc10>
   1398c:	mov    rdi,rbp
   1398f:	call   acd0 <strcasecmp@plt>
   13994:	test   eax,eax
   13996:	je     13a48 <parse_vsnd_item+0x138>
   1399c:	lea    rsi,[rip+0x20f07]        # 348aa <savefileheader_magic+0x40a>
   139a3:	mov    rdi,rbp
   139a6:	call   acd0 <strcasecmp@plt>
   139ab:	test   eax,eax
   139ad:	je     13b68 <parse_vsnd_item+0x258>
   139b3:	lea    rsi,[rip+0x1a731]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   139ba:	xor    edi,edi
   139bc:	call   bfe0 <strtok@plt>
   139c1:	test   rax,rax
   139c4:	mov    rbx,rax
   139c7:	jne    13964 <parse_vsnd_item+0x54>
   139c9:	xor    ebx,ebx
   139cb:	mov    rdi,r14
   139ce:	call   ac40 <free@plt>
   139d3:	mov    rcx,QWORD PTR [rsp+0x8]
   139d8:	xor    rcx,QWORD PTR fs:0x28
   139e1:	mov    eax,ebx
   139e3:	jne    13d6f <parse_vsnd_item+0x45f>
   139e9:	add    rsp,0x18
   139ed:	pop    rbx
   139ee:	pop    rbp
   139ef:	pop    r12
   139f1:	pop    r13
   139f3:	pop    r14
   139f5:	pop    r15
   139f7:	ret    
   139f8:	nop    DWORD PTR [rax+rax*1+0x0]
   13a00:	lea    rdi,[r12+0x28]
   13a05:	mov    rsi,rbx
   13a08:	call   13650 <parse_vsnd_params>
   13a0d:	test   eax,eax
   13a0f:	je     139b3 <parse_vsnd_item+0xa3>
   13a11:	lea    rdi,[rip+0x1b090]        # 2eaa8 <__func__.10421+0x720>
   13a18:	mov    rcx,r13
   13a1b:	mov    rdx,rbx
   13a1e:	mov    esi,0x8
   13a23:	call   11e80 <match_option_size>
   13a28:	test   eax,eax
   13a2a:	je     13c20 <parse_vsnd_item+0x310>
   13a30:	mov    rdi,QWORD PTR [rsp]
   13a34:	call   c360 <strdup@plt>
   13a39:	mov    QWORD PTR [r12+0x8],rax
   13a3e:	jmp    139b3 <parse_vsnd_item+0xa3>
   13a43:	nop    DWORD PTR [rax+rax*1+0x0]
   13a48:	movsxd rax,DWORD PTR [r12+0x58]
   13a4d:	test   eax,eax
   13a4f:	je     13cbb <parse_vsnd_item+0x3ab>
   13a55:	lea    rdx,[rax+rax*8]
   13a59:	mov    rax,QWORD PTR [r12+0x60]
   13a5e:	mov    rsi,rbx
   13a61:	lea    r15,[rax+rdx*8-0x48]
   13a66:	lea    rdi,[r15+0x8]
   13a6a:	call   13650 <parse_vsnd_params>
   13a6f:	test   eax,eax
   13a71:	je     139b3 <parse_vsnd_item+0xa3>
   13a77:	lea    rdi,[rip+0x1b540]        # 2efbe <__func__.10421+0xc36>
   13a7e:	mov    rcx,r13
   13a81:	mov    rdx,rbx
   13a84:	mov    esi,0x5
   13a89:	call   11e80 <match_option_size>
   13a8e:	test   eax,eax
   13a90:	je     13ce5 <parse_vsnd_item+0x3d5>
   13a96:	mov    rdi,QWORD PTR [rsp]
   13a9a:	call   c360 <strdup@plt>
   13a9f:	mov    QWORD PTR [r15],rax
   13aa2:	jmp    139b3 <parse_vsnd_item+0xa3>
   13aa7:	nop    WORD PTR [rax+rax*1+0x0]
   13ab0:	mov    rdi,rbx
   13ab3:	call   acd0 <strcasecmp@plt>
   13ab8:	test   eax,eax
   13aba:	je     13c18 <parse_vsnd_item+0x308>
   13ac0:	lea    rsi,[rip+0x1b4d1]        # 2ef98 <__func__.10421+0xc10>
   13ac7:	mov    rdi,rbx
   13aca:	call   acd0 <strcasecmp@plt>
   13acf:	test   eax,eax
   13ad1:	je     13c6d <parse_vsnd_item+0x35d>
   13ad7:	lea    rsi,[rip+0x20dcc]        # 348aa <savefileheader_magic+0x40a>
   13ade:	mov    rdi,rbx
   13ae1:	call   acd0 <strcasecmp@plt>
   13ae6:	test   eax,eax
   13ae8:	jne    13d63 <parse_vsnd_item+0x453>
   13aee:	movsxd rax,DWORD PTR [r12+0x58]
   13af3:	mov    rdi,QWORD PTR [r12+0x60]
   13af8:	test   eax,eax
   13afa:	jne    13b26 <parse_vsnd_item+0x216>
   13afc:	mov    esi,0x48
   13b01:	mov    DWORD PTR [r12+0x58],0x1
   13b0a:	call   ea30 <xrealloc>
   13b0f:	mov    rdi,rax
   13b12:	mov    QWORD PTR [r12+0x60],rax
   13b17:	call   c560 <libxl_vsnd_pcm_init@plt>
   13b1c:	movsxd rax,DWORD PTR [r12+0x58]
   13b21:	mov    rdi,QWORD PTR [r12+0x60]
   13b26:	lea    rax,[rax+rax*8]
   13b2a:	lea    r15,[rdi+rax*8-0x48]
   13b2f:	mov    eax,DWORD PTR [r15+0x38]
   13b33:	mov    rdi,QWORD PTR [r15+0x40]
   13b37:	add    eax,0x1
   13b3a:	movsxd rbp,eax
   13b3d:	mov    DWORD PTR [r15+0x38],eax
   13b41:	shl    rbp,0x6
   13b45:	mov    rsi,rbp
   13b48:	call   ea30 <xrealloc>
   13b4d:	lea    rdi,[rax+rbp*1-0x40]
   13b52:	mov    QWORD PTR [r15+0x40],rax
   13b56:	mov    rbp,rbx
   13b59:	call   b9b0 <libxl_vsnd_stream_init@plt>
   13b5e:	jmp    139b3 <parse_vsnd_item+0xa3>
   13b63:	nop    DWORD PTR [rax+rax*1+0x0]
   13b68:	movsxd rax,DWORD PTR [r12+0x58]
   13b6d:	test   eax,eax
   13b6f:	je     13d39 <parse_vsnd_item+0x429>
   13b75:	lea    rdx,[rax+rax*8]
   13b79:	mov    rax,QWORD PTR [r12+0x60]
   13b7e:	lea    rdx,[rax+rdx*8-0x48]
   13b83:	movsxd rax,DWORD PTR [rdx+0x38]
   13b87:	test   eax,eax
   13b89:	je     13d0f <parse_vsnd_item+0x3ff>
   13b8f:	mov    rdx,QWORD PTR [rdx+0x40]
   13b93:	shl    rax,0x6
   13b97:	mov    rsi,rbx
   13b9a:	lea    r15,[rdx+rax*1-0x40]
   13b9f:	lea    rdi,[r15+0x10]
   13ba3:	call   13650 <parse_vsnd_params>
   13ba8:	test   eax,eax
   13baa:	je     139b3 <parse_vsnd_item+0xa3>
   13bb0:	lea    rdi,[rip+0x1b2ad]        # 2ee64 <__func__.10421+0xadc>
   13bb7:	mov    rcx,r13
   13bba:	mov    rdx,rbx
   13bbd:	mov    esi,0xa
   13bc2:	call   11e80 <match_option_size>
   13bc7:	test   eax,eax
   13bc9:	jne    13a96 <parse_vsnd_item+0x186>
   13bcf:	lea    rdi,[rip+0x1b288]        # 2ee5e <__func__.10421+0xad6>
   13bd6:	mov    rcx,r13
   13bd9:	mov    rdx,rbx
   13bdc:	mov    esi,0x5
   13be1:	call   11e80 <match_option_size>
   13be6:	test   eax,eax
   13be8:	je     13ce5 <parse_vsnd_item+0x3d5>
   13bee:	mov    rdi,QWORD PTR [rsp]
   13bf2:	lea    rsi,[r15+0x8]
   13bf6:	call   bcc0 <libxl_vsnd_stream_type_from_string@plt>
   13bfb:	test   eax,eax
   13bfd:	je     139b3 <parse_vsnd_item+0xa3>
   13c03:	mov    rcx,QWORD PTR [rsp]
   13c07:	lea    rdx,[rip+0x1b400]        # 2f00e <__func__.10421+0xc86>
   13c0e:	jmp    13cef <parse_vsnd_item+0x3df>
   13c13:	nop    DWORD PTR [rax+rax*1+0x0]
   13c18:	mov    rbp,rbx
   13c1b:	jmp    139b3 <parse_vsnd_item+0xa3>
   13c20:	lea    rdi,[rip+0x1b386]        # 2efad <__func__.10421+0xc25>
   13c27:	mov    rcx,r13
   13c2a:	mov    rdx,rbx
   13c2d:	mov    esi,0xb
   13c32:	call   11e80 <match_option_size>
   13c37:	test   eax,eax
   13c39:	jne    13ca8 <parse_vsnd_item+0x398>
   13c3b:	lea    rdi,[rip+0x1b377]        # 2efb9 <__func__.10421+0xc31>
   13c42:	mov    rcx,r13
   13c45:	mov    rdx,rbx
   13c48:	mov    esi,0xa
   13c4d:	call   11e80 <match_option_size>
   13c52:	test   eax,eax
   13c54:	je     13ce5 <parse_vsnd_item+0x3d5>
   13c5a:	mov    rdi,QWORD PTR [rsp]
   13c5e:	call   c360 <strdup@plt>
   13c63:	mov    QWORD PTR [r12+0x20],rax
   13c68:	jmp    139b3 <parse_vsnd_item+0xa3>
   13c6d:	mov    eax,DWORD PTR [r12+0x58]
   13c72:	mov    rdi,QWORD PTR [r12+0x60]
   13c77:	add    eax,0x1
   13c7a:	mov    DWORD PTR [r12+0x58],eax
   13c7f:	cdqe   
   13c81:	lea    rbp,[rax+rax*8]
   13c85:	shl    rbp,0x3
   13c89:	mov    rsi,rbp
   13c8c:	call   ea30 <xrealloc>
   13c91:	lea    rdi,[rax+rbp*1-0x48]
   13c96:	mov    QWORD PTR [r12+0x60],rax
   13c9b:	mov    rbp,rbx
   13c9e:	call   c560 <libxl_vsnd_pcm_init@plt>
   13ca3:	jmp    139b3 <parse_vsnd_item+0xa3>
   13ca8:	mov    rdi,QWORD PTR [rsp]
   13cac:	call   c360 <strdup@plt>
   13cb1:	mov    QWORD PTR [r12+0x18],rax
   13cb6:	jmp    139b3 <parse_vsnd_item+0xa3>
   13cbb:	mov    rax,QWORD PTR [rip+0x22732e]        # 23aff0 <stderr@GLIBC_2.2.5>
   13cc2:	lea    rdi,[rip+0x1b312]        # 2efdb <__func__.10421+0xc53>
   13cc9:	mov    edx,0xe
   13cce:	mov    esi,0x1
   13cd3:	mov    ebx,0xffffffff
   13cd8:	mov    rcx,QWORD PTR [rax]
   13cdb:	call   c1b0 <fwrite@plt>
   13ce0:	jmp    139cb <parse_vsnd_item+0xbb>
   13ce5:	lea    rdx,[rip+0x1b2d8]        # 2efc4 <__func__.10421+0xc3c>
   13cec:	mov    rcx,rbx
   13cef:	mov    rax,QWORD PTR [rip+0x2272fa]        # 23aff0 <stderr@GLIBC_2.2.5>
   13cf6:	mov    esi,0x1
   13cfb:	mov    ebx,0xffffffff
   13d00:	mov    rdi,QWORD PTR [rax]
   13d03:	xor    eax,eax
   13d05:	call   c1e0 <__fprintf_chk@plt>
   13d0a:	jmp    139cb <parse_vsnd_item+0xbb>
   13d0f:	mov    rax,QWORD PTR [rip+0x2272da]        # 23aff0 <stderr@GLIBC_2.2.5>
   13d16:	lea    rdi,[rip+0x1b2e1]        # 2effe <__func__.10421+0xc76>
   13d1d:	mov    edx,0xf
   13d22:	mov    esi,0x1
   13d27:	mov    ebx,0xffffffff
   13d2c:	mov    rcx,QWORD PTR [rax]
   13d2f:	call   c1b0 <fwrite@plt>
   13d34:	jmp    139cb <parse_vsnd_item+0xbb>
   13d39:	mov    rax,QWORD PTR [rip+0x2272b0]        # 23aff0 <stderr@GLIBC_2.2.5>
   13d40:	lea    rdi,[rip+0x1b2a3]        # 2efea <__func__.10421+0xc62>
   13d47:	mov    edx,0x13
   13d4c:	mov    esi,0x1
   13d51:	mov    ebx,0xffffffff
   13d56:	mov    rcx,QWORD PTR [rax]
   13d59:	call   c1b0 <fwrite@plt>
   13d5e:	jmp    139cb <parse_vsnd_item+0xbb>
   13d63:	mov    rcx,rbx
   13d66:	lea    rdx,[rip+0x1b22f]        # 2ef9c <__func__.10421+0xc14>
   13d6d:	jmp    13cef <parse_vsnd_item+0x3df>
   13d6f:	call   b130 <__stack_chk_fail@plt>
   13d74:	xchg   ax,ax
   13d76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013d80 <trim>:
   13d80:	push   r13
   13d82:	push   r12
   13d84:	mov    r13,rdi
   13d87:	push   rbp
   13d88:	push   rbx
   13d89:	mov    rbp,rsi
   13d8c:	mov    r12,rdx
   13d8f:	sub    rsp,0x8
   13d93:	movzx  edi,BYTE PTR [rsi]
   13d96:	test   dil,dil
   13d99:	jne    13dad <trim+0x2d>
   13d9b:	jmp    13db4 <trim+0x34>
   13d9d:	nop    DWORD PTR [rax]
   13da0:	add    rbp,0x1
   13da4:	movzx  edi,BYTE PTR [rbp+0x0]
   13da8:	test   dil,dil
   13dab:	je     13db4 <trim+0x34>
   13dad:	call   r13
   13db0:	test   eax,eax
   13db2:	jne    13da0 <trim+0x20>
   13db4:	mov    rdi,rbp
   13db7:	call   b0c0 <strlen@plt>
   13dbc:	lea    rbx,[rbp+rax*1+0x0]
   13dc1:	cmp    rbx,rbp
   13dc4:	ja     13dd9 <trim+0x59>
   13dc6:	jmp    13de4 <trim+0x64>
   13dc8:	nop    DWORD PTR [rax+rax*1+0x0]
   13dd0:	sub    rbx,0x1
   13dd4:	cmp    rbx,rbp
   13dd7:	je     13de4 <trim+0x64>
   13dd9:	movzx  edi,BYTE PTR [rbx-0x1]
   13ddd:	call   r13
   13de0:	test   eax,eax
   13de2:	jne    13dd0 <trim+0x50>
   13de4:	sub    rbx,rbp
   13de7:	lea    rdi,[rbx+0x1]
   13deb:	call   e9a0 <xmalloc>
   13df0:	mov    rdx,rbx
   13df3:	mov    rsi,rbp
   13df6:	mov    rdi,rax
   13df9:	call   b7e0 <memcpy@plt>
   13dfe:	mov    BYTE PTR [rax+rbx*1],0x0
   13e02:	mov    QWORD PTR [r12],rax
   13e06:	add    rsp,0x8
   13e0a:	pop    rbx
   13e0b:	pop    rbp
   13e0c:	pop    r12
   13e0e:	pop    r13
   13e10:	ret    
   13e11:	nop    DWORD PTR [rax+rax*1+0x0]
   13e16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000013e20 <split_string_into_pair>:
   13e20:	push   r15
   13e22:	push   r14
   13e24:	mov    r15,rdx
   13e27:	push   r13
   13e29:	push   r12
   13e2b:	mov    r12,rsi
   13e2e:	push   rbp
   13e2f:	push   rbx
   13e30:	mov    r14,rcx
   13e33:	sub    rsp,0x18
   13e37:	mov    r13,rsp
   13e3a:	mov    rax,QWORD PTR fs:0x28
   13e43:	mov    QWORD PTR [rsp+0x8],rax
   13e48:	xor    eax,eax
   13e4a:	call   ea80 <xstrdup>
   13e4f:	mov    rdx,r13
   13e52:	mov    rsi,r12
   13e55:	mov    rdi,rax
   13e58:	mov    rbp,rax
   13e5b:	call   b580 <strtok_r@plt>
   13e60:	test   rax,rax
   13e63:	mov    rbx,rax
   13e66:	je     13ed0 <split_string_into_pair+0xb0>
   13e68:	mov    rdi,rax
   13e6b:	call   ea80 <xstrdup>
   13e70:	xor    edi,edi
   13e72:	mov    rdx,r13
   13e75:	mov    rsi,r12
   13e78:	mov    rbx,rax
   13e7b:	call   b580 <strtok_r@plt>
   13e80:	test   rax,rax
   13e83:	je     13ed0 <split_string_into_pair+0xb0>
   13e85:	mov    rdi,rax
   13e88:	xor    r12d,r12d
   13e8b:	call   ea80 <xstrdup>
   13e90:	mov    QWORD PTR [r15],rbx
   13e93:	mov    QWORD PTR [r14],rax
   13e96:	xor    ebx,ebx
   13e98:	mov    rdi,rbp
   13e9b:	call   ac40 <free@plt>
   13ea0:	mov    rdi,rbx
   13ea3:	call   ac40 <free@plt>
   13ea8:	mov    rcx,QWORD PTR [rsp+0x8]
   13ead:	xor    rcx,QWORD PTR fs:0x28
   13eb6:	mov    eax,r12d
   13eb9:	jne    13ed8 <split_string_into_pair+0xb8>
   13ebb:	add    rsp,0x18
   13ebf:	pop    rbx
   13ec0:	pop    rbp
   13ec1:	pop    r12
   13ec3:	pop    r13
   13ec5:	pop    r14
   13ec7:	pop    r15
   13ec9:	ret    
   13eca:	nop    WORD PTR [rax+rax*1+0x0]
   13ed0:	mov    r12d,0xfffffffa
   13ed6:	jmp    13e98 <split_string_into_pair+0x78>
   13ed8:	call   b130 <__stack_chk_fail@plt>
   13edd:	nop    DWORD PTR [rax]

0000000000013ee0 <parse_vdispl_config>:
   13ee0:	push   r15
   13ee2:	push   r14
   13ee4:	mov    rdx,rsi
   13ee7:	push   r13
   13ee9:	push   r12
   13eeb:	mov    r12,rsi
   13eee:	push   rbp
   13eef:	push   rbx
   13ef0:	mov    rbp,rdi
   13ef3:	lea    rdi,[rip+0x1abae]        # 2eaa8 <__func__.10421+0x720>
   13efa:	mov    esi,0x8
   13eff:	sub    rsp,0x28
   13f03:	mov    r13,rsp
   13f06:	mov    QWORD PTR [rsp+0x8],0x0
   13f0f:	mov    rcx,r13
   13f12:	mov    rax,QWORD PTR fs:0x28
   13f1b:	mov    QWORD PTR [rsp+0x18],rax
   13f20:	xor    eax,eax
   13f22:	call   11e80 <match_option_size>
   13f27:	test   eax,eax
   13f29:	jne    14098 <parse_vdispl_config+0x1b8>
   13f2f:	lea    rdi,[rip+0x1b0f1]        # 2f027 <__func__.10421+0xc9f>
   13f36:	mov    rcx,r13
   13f39:	mov    rdx,r12
   13f3c:	mov    esi,0x9
   13f41:	mov    ebx,eax
   13f43:	call   11e80 <match_option_size>
   13f48:	test   eax,eax
   13f4a:	jne    14050 <parse_vdispl_config+0x170>
   13f50:	lea    rdi,[rip+0x1b0da]        # 2f031 <__func__.10421+0xca9>
   13f57:	mov    rcx,r13
   13f5a:	mov    rdx,r12
   13f5d:	mov    esi,0xb
   13f62:	call   11e80 <match_option_size>
   13f67:	test   eax,eax
   13f69:	je     140b0 <parse_vdispl_config+0x1d0>
   13f6f:	lea    r12,[rsp+0x8]
   13f74:	mov    rdi,QWORD PTR [rsp]
   13f78:	lea    rsi,[rip+0x21894]        # 35813 <migrate_receiver_banner+0x1d3>
   13f7f:	xor    r15d,r15d
   13f82:	lea    r14,[rsp+0x10]
   13f87:	lea    r13,[rip+0x1ec25]        # 32bb3 <__PRETTY_FUNCTION__.10016+0x1b23>
   13f8e:	mov    rdx,r12
   13f91:	call   134e0 <split_string_into_string_list>
   13f96:	mov    rdi,r12
   13f99:	call   b370 <libxl_string_list_length@plt>
   13f9e:	mov    esi,0x10
   13fa3:	mov    DWORD PTR [rbp+0x18],eax
   13fa6:	movsxd rdi,eax
   13fa9:	call   e9e0 <xcalloc>
   13fae:	mov    edx,DWORD PTR [rbp+0x18]
   13fb1:	mov    QWORD PTR [rbp+0x20],rax
   13fb5:	test   edx,edx
   13fb7:	jg     13fd5 <parse_vdispl_config+0xf5>
   13fb9:	jmp    140e0 <parse_vdispl_config+0x200>
   13fbe:	xchg   ax,ax
   13fc0:	lea    eax,[r15+0x1]
   13fc4:	add    r15,0x1
   13fc8:	cmp    DWORD PTR [rbp+0x18],eax
   13fcb:	jle    140e0 <parse_vdispl_config+0x200>
   13fd1:	mov    rax,QWORD PTR [rbp+0x20]
   13fd5:	mov    rbx,r15
   13fd8:	mov    rcx,r14
   13fdb:	mov    rsi,r13
   13fde:	shl    rbx,0x4
   13fe2:	lea    rdx,[rax+rbx*1]
   13fe6:	mov    rax,QWORD PTR [rsp+0x8]
   13feb:	mov    rdi,QWORD PTR [rax+r15*8]
   13fef:	call   13e20 <split_string_into_pair>
   13ff4:	add    rbx,QWORD PTR [rbp+0x20]
   13ff8:	mov    rdi,QWORD PTR [rsp+0x10]
   13ffd:	lea    rsi,[rip+0x1b039]        # 2f03d <__func__.10421+0xcb5>
   14004:	xor    eax,eax
   14006:	lea    rcx,[rbx+0xc]
   1400a:	lea    rdx,[rbx+0x8]
   1400e:	call   bab0 <__isoc99_sscanf@plt>
   14013:	mov    rdi,QWORD PTR [rsp+0x10]
   14018:	mov    ebx,eax
   1401a:	call   ac40 <free@plt>
   1401f:	cmp    ebx,0x2
   14022:	je     13fc0 <parse_vdispl_config+0xe0>
   14024:	mov    rax,QWORD PTR [rip+0x226fc5]        # 23aff0 <stderr@GLIBC_2.2.5>
   1402b:	lea    rdi,[rip+0x1bc96]        # 2fcc8 <__func__.10421+0x1940>
   14032:	mov    edx,0x21
   14037:	mov    esi,0x1
   1403c:	mov    rcx,QWORD PTR [rax]
   1403f:	call   c1b0 <fwrite@plt>
   14044:	jmp    14069 <parse_vdispl_config+0x189>
   14046:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14050:	mov    rdi,QWORD PTR [rsp]
   14054:	xor    edx,edx
   14056:	xor    esi,esi
   14058:	lea    r12,[rsp+0x8]
   1405d:	call   c090 <strtoul@plt>
   14062:	test   rax,rax
   14065:	setne  BYTE PTR [rbp+0x14]
   14069:	mov    rdi,r12
   1406c:	call   b9a0 <libxl_string_list_dispose@plt>
   14071:	mov    rsi,QWORD PTR [rsp+0x18]
   14076:	xor    rsi,QWORD PTR fs:0x28
   1407f:	mov    eax,ebx
   14081:	jne    140e7 <parse_vdispl_config+0x207>
   14083:	add    rsp,0x28
   14087:	pop    rbx
   14088:	pop    rbp
   14089:	pop    r12
   1408b:	pop    r13
   1408d:	pop    r14
   1408f:	pop    r15
   14091:	ret    
   14092:	nop    WORD PTR [rax+rax*1+0x0]
   14098:	mov    rdi,QWORD PTR [rsp]
   1409c:	xor    ebx,ebx
   1409e:	lea    r12,[rsp+0x8]
   140a3:	call   c360 <strdup@plt>
   140a8:	mov    QWORD PTR [rbp+0x8],rax
   140ac:	jmp    14069 <parse_vdispl_config+0x189>
   140ae:	xchg   ax,ax
   140b0:	mov    rax,QWORD PTR [rip+0x226f39]        # 23aff0 <stderr@GLIBC_2.2.5>
   140b7:	lea    rdx,[rip+0x1bc32]        # 2fcf0 <__func__.10421+0x1968>
   140be:	mov    rcx,r12
   140c1:	mov    esi,0x1
   140c6:	mov    ebx,0x1
   140cb:	lea    r12,[rsp+0x8]
   140d0:	mov    rdi,QWORD PTR [rax]
   140d3:	xor    eax,eax
   140d5:	call   c1e0 <__fprintf_chk@plt>
   140da:	jmp    14069 <parse_vdispl_config+0x189>
   140dc:	nop    DWORD PTR [rax+0x0]
   140e0:	xor    ebx,ebx
   140e2:	jmp    14069 <parse_vdispl_config+0x189>
   140e7:	call   b130 <__stack_chk_fail@plt>
   140ec:	nop    DWORD PTR [rax+0x0]

00000000000140f0 <parse_config_data>:
   140f0:	push   r15
   140f2:	push   r14
   140f4:	mov    r14,rcx
   140f7:	push   r13
   140f9:	push   r12
   140fb:	push   rbp
   140fc:	push   rbx
   140fd:	mov    rbx,rsi
   14100:	mov    rsi,rdi
   14103:	mov    ebp,edx
   14105:	sub    rsp,0x1f8
   1410c:	mov    rax,QWORD PTR fs:0x28
   14115:	mov    QWORD PTR [rsp+0x1e8],rax
   1411d:	xor    eax,eax
   1411f:	lea    rax,[rcx+0x58]
   14123:	mov    QWORD PTR [rsp+0x70],rax
   14128:	mov    rax,QWORD PTR [rip+0x226ec1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1412f:	mov    rdi,QWORD PTR [rax]
   14132:	call   b270 <xlu_cfg_init@plt>
   14137:	test   rax,rax
   1413a:	mov    QWORD PTR [rsp+0xb8],rax
   14142:	je     18c43 <parse_config_data+0x4b53>
   14148:	mov    edx,ebp
   1414a:	mov    rsi,rbx
   1414d:	mov    rdi,rax
   14150:	call   afb0 <xlu_cfg_readdata@plt>
   14155:	test   eax,eax
   14157:	jne    18c6d <parse_config_data+0x4b7d>
   1415d:	lea    rax,[rsp+0xa8]
   14165:	mov    rdi,QWORD PTR [rsp+0xb8]
   1416d:	lea    rsi,[rip+0x1af90]        # 2f104 <__func__.10421+0xd7c>
   14174:	xor    ecx,ecx
   14176:	mov    rdx,rax
   14179:	mov    QWORD PTR [rsp+0x28],rax
   1417e:	call   c380 <xlu_cfg_get_string@plt>
   14183:	test   eax,eax
   14185:	jne    141a1 <parse_config_data+0xb1>
   14187:	mov    rdi,QWORD PTR [rsp+0xb8]
   1418f:	lea    rdx,[r14+0x10]
   14193:	lea    rsi,[rip+0x1af6a]        # 2f104 <__func__.10421+0xd7c>
   1419a:	xor    ecx,ecx
   1419c:	call   c230 <xlu_cfg_replace_string@plt>
   141a1:	mov    rdx,QWORD PTR [rsp+0x28]
   141a6:	mov    rdi,QWORD PTR [rsp+0xb8]
   141ae:	lea    rsi,[rip+0x1af54]        # 2f109 <__func__.10421+0xd81>
   141b5:	xor    ecx,ecx
   141b7:	call   c380 <xlu_cfg_get_string@plt>
   141bc:	test   eax,eax
   141be:	jne    141e8 <parse_config_data+0xf8>
   141c0:	cmp    QWORD PTR [r14+0x10],0x0
   141c5:	mov    rdi,QWORD PTR [rsp+0xb8]
   141cd:	je     15264 <parse_config_data+0x1174>
   141d3:	lea    rdx,[r14+0xe0]
   141da:	lea    rsi,[rip+0x1af28]        # 2f109 <__func__.10421+0xd81>
   141e1:	xor    ecx,ecx
   141e3:	call   c230 <xlu_cfg_replace_string@plt>
   141e8:	lea    rax,[rip+0x226e35]        # 23b024 <run_hotplug_scripts>
   141ef:	xor    esi,esi
   141f1:	mov    edi,DWORD PTR [rax]
   141f3:	test   edi,edi
   141f5:	lea    rdi,[r14+0x50]
   141f9:	setne  sil
   141fd:	call   b140 <libxl_defbool_set@plt>
   14202:	mov    rdx,QWORD PTR [rsp+0x28]
   14207:	mov    rdi,QWORD PTR [rsp+0xb8]
   1420f:	lea    rsi,[rip+0x21772]        # 35988 <migrate_receiver_banner+0x348>
   14216:	xor    ecx,ecx
   14218:	call   c380 <xlu_cfg_get_string@plt>
   1421d:	test   eax,eax
   1421f:	jne    14290 <parse_config_data+0x1a0>
   14221:	mov    rbx,QWORD PTR [rsp+0xa8]
   14229:	mov    rdi,rbx
   1422c:	call   b0c0 <strlen@plt>
   14231:	mov    r8d,0x4
   14237:	cmp    rax,0x4
   1423b:	lea    rdi,[rip+0x1e760]        # 329a2 <__PRETTY_FUNCTION__.10016+0x1912>
   14242:	mov    rcx,r8
   14245:	mov    rsi,rbx
   14248:	cmovle rcx,rax
   1424c:	cmp    rcx,rcx
   1424f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14251:	seta   dl
   14254:	sbb    dl,0x0
   14257:	test   dl,dl
   14259:	je     151ff <parse_config_data+0x110f>
   1425f:	cmp    rax,0x3
   14263:	mov    ecx,0x3
   14268:	lea    rdi,[rip+0x1e738]        # 329a7 <__PRETTY_FUNCTION__.10016+0x1917>
   1426f:	cmovle rcx,rax
   14273:	mov    rsi,rbx
   14276:	cmp    rcx,rcx
   14279:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1427b:	seta   dl
   1427e:	sbb    dl,0x0
   14281:	test   dl,dl
   14283:	jne    180fd <parse_config_data+0x400d>
   14289:	mov    DWORD PTR [r14],0x2
   14290:	mov    rdx,QWORD PTR [rsp+0x28]
   14295:	mov    rdi,QWORD PTR [rsp+0xb8]
   1429d:	lea    rsi,[rip+0x1ae8b]        # 2f12f <__func__.10421+0xda7>
   142a4:	xor    ecx,ecx
   142a6:	call   c380 <xlu_cfg_get_string@plt>
   142ab:	test   eax,eax
   142ad:	je     15093 <parse_config_data+0xfa3>
   142b3:	cmp    DWORD PTR [r14],0xffffffff
   142b7:	jne    142c0 <parse_config_data+0x1d0>
   142b9:	mov    DWORD PTR [r14],0x2
   142c0:	mov    rdi,QWORD PTR [rsp+0xb8]
   142c8:	lea    rdx,[r14+0x4]
   142cc:	lea    rsi,[rip+0x1ae6c]        # 2f13f <__func__.10421+0xdb7>
   142d3:	xor    ecx,ecx
   142d5:	call   be20 <xlu_cfg_get_defbool@plt>
   142da:	mov    rdi,QWORD PTR [rsp+0xb8]
   142e2:	lea    rdx,[r14+0x18]
   142e6:	lea    rsi,[rip+0x1adf6]        # 2f0e3 <__func__.10421+0xd5b>
   142ed:	xor    ecx,ecx
   142ef:	call   c230 <xlu_cfg_replace_string@plt>
   142f4:	test   eax,eax
   142f6:	jne    18e10 <parse_config_data+0x4d20>
   142fc:	mov    rdi,QWORD PTR [rsp+0xb8]
   14304:	mov    rdx,QWORD PTR [rsp+0x28]
   14309:	lea    rsi,[rip+0x1ae33]        # 2f143 <__func__.10421+0xdbb>
   14310:	xor    ecx,ecx
   14312:	call   c380 <xlu_cfg_get_string@plt>
   14317:	test   eax,eax
   14319:	lea    rdi,[r14+0x20]
   1431d:	jne    15089 <parse_config_data+0xf99>
   14323:	mov    rsi,QWORD PTR [rsp+0xa8]
   1432b:	call   abe0 <libxl_uuid_from_string@plt>
   14330:	test   eax,eax
   14332:	jne    18c2f <parse_config_data+0x4b3f>
   14338:	mov    rdi,QWORD PTR [rsp+0xb8]
   14340:	lea    rdx,[r14+0x8]
   14344:	lea    rsi,[rip+0x1ae17]        # 2f162 <__func__.10421+0xdda>
   1434b:	xor    ecx,ecx
   1434d:	call   be20 <xlu_cfg_get_defbool@plt>
   14352:	mov    rdx,QWORD PTR [rsp+0x28]
   14357:	mov    rdi,QWORD PTR [rsp+0xb8]
   1435f:	lea    rsi,[rip+0x15f88]        # 2a2ee <__PRETTY_FUNCTION__.10113+0x6d6>
   14366:	xor    ecx,ecx
   14368:	call   c380 <xlu_cfg_get_string@plt>
   1436d:	test   eax,eax
   1436f:	jne    1438b <parse_config_data+0x29b>
   14371:	mov    rdi,QWORD PTR [rsp+0xb8]
   14379:	lea    rdx,[r14+0x48]
   1437d:	lea    rsi,[rip+0x15f6a]        # 2a2ee <__PRETTY_FUNCTION__.10113+0x6d6>
   14384:	xor    ecx,ecx
   14386:	call   c230 <xlu_cfg_replace_string@plt>
   1438b:	mov    esi,DWORD PTR [r14]
   1438e:	lea    rdi,[r14+0x58]
   14392:	call   b050 <libxl_domain_build_info_init_type@plt>
   14397:	cmp    DWORD PTR [r14+0x1f8],0x3
   1439f:	je     18023 <parse_config_data+0x3f33>
   143a5:	lea    rax,[rip+0x228ad4]        # 23ce80 <blkdev_start>
   143ac:	mov    rdi,QWORD PTR [rax]
   143af:	test   rdi,rdi
   143b2:	je     143c0 <parse_config_data+0x2d0>
   143b4:	call   c360 <strdup@plt>
   143b9:	mov    QWORD PTR [r14+0xf8],rax
   143c0:	lea    rax,[rsp+0xb0]
   143c8:	mov    rdi,QWORD PTR [rsp+0xb8]
   143d0:	lea    rsi,[rip+0x1adbe]        # 2f195 <__func__.10421+0xe0d>
   143d7:	xor    ecx,ecx
   143d9:	mov    rdx,rax
   143dc:	mov    QWORD PTR [rsp+0x30],rax
   143e1:	call   b2c0 <xlu_cfg_get_long@plt>
   143e6:	test   eax,eax
   143e8:	jne    143f9 <parse_config_data+0x309>
   143ea:	mov    rax,QWORD PTR [rsp+0xb0]
   143f2:	mov    DWORD PTR [r14+0x15c],eax
   143f9:	mov    rdx,QWORD PTR [rsp+0x30]
   143fe:	mov    rdi,QWORD PTR [rsp+0xb8]
   14406:	lea    rsi,[rip+0x1a4d8]        # 2e8e5 <__func__.10421+0x55d>
   1440d:	xor    ecx,ecx
   1440f:	call   b2c0 <xlu_cfg_get_long@plt>
   14414:	test   eax,eax
   14416:	jne    14427 <parse_config_data+0x337>
   14418:	mov    rax,QWORD PTR [rsp+0xb0]
   14420:	mov    DWORD PTR [r14+0x160],eax
   14427:	mov    rdx,QWORD PTR [rsp+0x30]
   1442c:	mov    rdi,QWORD PTR [rsp+0xb8]
   14434:	lea    rsi,[rip+0x1ad65]        # 2f1a0 <__func__.10421+0xe18>
   1443b:	xor    ecx,ecx
   1443d:	call   b2c0 <xlu_cfg_get_long@plt>
   14442:	test   eax,eax
   14444:	jne    14455 <parse_config_data+0x365>
   14446:	mov    rax,QWORD PTR [rsp+0xb0]
   1444e:	mov    DWORD PTR [r14+0x164],eax
   14455:	mov    rdx,QWORD PTR [rsp+0x30]
   1445a:	mov    rdi,QWORD PTR [rsp+0xb8]
   14462:	lea    rsi,[rip+0x1ad3e]        # 2f1a7 <__func__.10421+0xe1f>
   14469:	xor    ecx,ecx
   1446b:	call   b2c0 <xlu_cfg_get_long@plt>
   14470:	test   eax,eax
   14472:	jne    14483 <parse_config_data+0x393>
   14474:	mov    rax,QWORD PTR [rsp+0xb0]
   1447c:	mov    DWORD PTR [r14+0x170],eax
   14483:	mov    rdx,QWORD PTR [rsp+0x30]
   14488:	mov    rdi,QWORD PTR [rsp+0xb8]
   14490:	lea    rsi,[rip+0x1ad16]        # 2f1ad <__func__.10421+0xe25>
   14497:	xor    ecx,ecx
   14499:	call   b2c0 <xlu_cfg_get_long@plt>
   1449e:	test   eax,eax
   144a0:	jne    144b1 <parse_config_data+0x3c1>
   144a2:	mov    rax,QWORD PTR [rsp+0xb0]
   144aa:	mov    DWORD PTR [r14+0x174],eax
   144b1:	mov    rdx,QWORD PTR [rsp+0x30]
   144b6:	mov    rdi,QWORD PTR [rsp+0xb8]
   144be:	lea    rsi,[rip+0x1acf0]        # 2f1b5 <__func__.10421+0xe2d>
   144c5:	xor    ecx,ecx
   144c7:	call   b2c0 <xlu_cfg_get_long@plt>
   144cc:	test   eax,eax
   144ce:	jne    144df <parse_config_data+0x3ef>
   144d0:	mov    rax,QWORD PTR [rsp+0xb0]
   144d8:	mov    DWORD PTR [r14+0x16c],eax
   144df:	mov    rdx,QWORD PTR [rsp+0x30]
   144e4:	mov    rdi,QWORD PTR [rsp+0xb8]
   144ec:	lea    rsi,[rip+0x1adb4]        # 2f2a7 <__func__.10421+0xf1f>
   144f3:	xor    ecx,ecx
   144f5:	call   b2c0 <xlu_cfg_get_long@plt>
   144fa:	test   eax,eax
   144fc:	jne    14511 <parse_config_data+0x421>
   144fe:	mov    rax,QWORD PTR [rsp+0xb0]
   14506:	shl    rax,0xa
   1450a:	mov    QWORD PTR [r14+0xc0],rax
   14511:	mov    rdx,QWORD PTR [rsp+0x30]
   14516:	mov    rdi,QWORD PTR [rsp+0xb8]
   1451e:	lea    rsi,[rip+0x1ac9a]        # 2f1bf <__func__.10421+0xe37>
   14525:	xor    ecx,ecx
   14527:	call   b2c0 <xlu_cfg_get_long@plt>
   1452c:	test   eax,eax
   1452e:	jne    14543 <parse_config_data+0x453>
   14530:	mov    rax,QWORD PTR [rsp+0xb0]
   14538:	shl    rax,0xa
   1453c:	mov    QWORD PTR [r14+0xb8],rax
   14543:	mov    rdx,QWORD PTR [rsp+0x30]
   14548:	mov    rdi,QWORD PTR [rsp+0xb8]
   14550:	lea    rsi,[rip+0x1ac8d]        # 2f1e4 <__func__.10421+0xe5c>
   14557:	xor    ecx,ecx
   14559:	call   b2c0 <xlu_cfg_get_long@plt>
   1455e:	test   eax,eax
   14560:	jne    1507b <parse_config_data+0xf8b>
   14566:	mov    rax,QWORD PTR [rsp+0xb0]
   1456e:	lea    rbx,[r14+0x60]
   14572:	mov    rsi,rbx
   14575:	mov    QWORD PTR [rsp+0x50],rax
   1457a:	mov    edx,eax
   1457c:	lea    rax,[rip+0x2288dd]        # 23ce60 <ctx>
   14583:	mov    rdi,QWORD PTR [rax]
   14586:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1458b:	test   eax,eax
   1458d:	jne    18c05 <parse_config_data+0x4b15>
   14593:	mov    edx,DWORD PTR [r14+0x60]
   14597:	mov    rdi,QWORD PTR [r14+0x68]
   1459b:	xor    esi,esi
   1459d:	call   b400 <memset@plt>
   145a2:	jmp    145ac <parse_config_data+0x4bc>
   145a4:	mov    rdi,rbx
   145a7:	call   b7d0 <libxl_bitmap_set@plt>
   145ac:	mov    rax,QWORD PTR [rsp+0xb0]
   145b4:	lea    rsi,[rax-0x1]
   145b8:	test   rax,rax
   145bb:	mov    QWORD PTR [rsp+0xb0],rsi
   145c3:	jg     145a4 <parse_config_data+0x4b4>
   145c5:	mov    rdx,QWORD PTR [rsp+0x30]
   145ca:	mov    rdi,QWORD PTR [rsp+0xb8]
   145d2:	lea    rsi,[rip+0x1ac08]        # 2f1e1 <__func__.10421+0xe59>
   145d9:	xor    ecx,ecx
   145db:	call   b2c0 <xlu_cfg_get_long@plt>
   145e0:	test   eax,eax
   145e2:	jne    145f0 <parse_config_data+0x500>
   145e4:	mov    rax,QWORD PTR [rsp+0xb0]
   145ec:	mov    DWORD PTR [r14+0x58],eax
   145f0:	mov    rdx,QWORD PTR [rsp+0x28]
   145f5:	mov    rdi,QWORD PTR [rsp+0xb8]
   145fd:	lea    rsi,[rip+0x1ed3f]        # 33343 <shutdown_reason_letters.11238+0x13>
   14604:	xor    ecx,ecx
   14606:	call   c380 <xlu_cfg_get_string@plt>
   1460b:	test   eax,eax
   1460d:	jne    1462b <parse_config_data+0x53b>
   1460f:	mov    rdi,QWORD PTR [rsp+0xa8]
   14617:	lea    rsi,[r14+0x3a4]
   1461e:	call   c3d0 <libxl_vuart_type_from_string@plt>
   14623:	test   eax,eax
   14625:	jne    18bdd <parse_config_data+0x4aed>
   1462b:	mov    rax,QWORD PTR [rsp+0xb8]
   14633:	lea    rbx,[rsp+0x170]
   1463b:	mov    rdi,rbx
   1463e:	mov    QWORD PTR [rsp+0x8],rax
   14643:	call   af50 <libxl_physinfo_init@plt>
   14648:	lea    rax,[rip+0x228811]        # 23ce60 <ctx>
   1464f:	mov    rsi,rbx
   14652:	mov    rdi,QWORD PTR [rax]
   14655:	call   b470 <libxl_get_physinfo@plt>
   1465a:	test   eax,eax
   1465c:	mov    DWORD PTR [rsp+0x4c],eax
   14660:	jne    18dd2 <parse_config_data+0x4ce2>
   14666:	mov    eax,DWORD PTR [rsp+0x1c0]
   1466d:	mov    rdi,rbx
   14670:	mov    DWORD PTR [rsp+0x38],eax
   14674:	call   c070 <libxl_physinfo_dispose@plt>
   14679:	lea    rax,[rsp+0x120]
   14681:	mov    rdi,QWORD PTR [rsp+0x8]
   14686:	lea    rcx,[rsp+0x118]
   1468e:	lea    rsi,[rip+0x1ab70]        # 2f205 <__func__.10421+0xe7d>
   14695:	mov    r8d,0x1
   1469b:	mov    rdx,rax
   1469e:	mov    QWORD PTR [rsp+0x80],rcx
   146a6:	mov    QWORD PTR [rsp+0x88],rax
   146ae:	call   bb20 <xlu_cfg_get_list@plt>
   146b3:	test   eax,eax
   146b5:	mov    DWORD PTR [rsp+0x7c],eax
   146b9:	jne    146ca <parse_config_data+0x5da>
   146bb:	mov    eax,DWORD PTR [rsp+0x118]
   146c2:	test   eax,eax
   146c4:	jne    1527b <parse_config_data+0x118b>
   146ca:	cmp    QWORD PTR [r14+0xb8],0xffffffffffffffff
   146d2:	jne    146e2 <parse_config_data+0x5f2>
   146d4:	mov    rax,QWORD PTR [r14+0xc0]
   146db:	mov    QWORD PTR [r14+0xb8],rax
   146e2:	movsxd rax,DWORD PTR [r14+0x58]
   146e6:	test   eax,eax
   146e8:	jne    146f6 <parse_config_data+0x606>
   146ea:	mov    rcx,QWORD PTR [rsp+0x50]
   146ef:	movsxd rax,ecx
   146f2:	mov    DWORD PTR [r14+0x58],ecx
   146f6:	cmp    rax,QWORD PTR [rsp+0x50]
   146fb:	jl     18c97 <parse_config_data+0x4ba7>
   14701:	lea    rbp,[rsp+0x9c]
   14709:	lea    rbx,[rsp+0xc0]
   14711:	mov    rdi,QWORD PTR [rsp+0xb8]
   14719:	lea    rsi,[rip+0x1aac5]        # 2f1e5 <__func__.10421+0xe5d>
   14720:	mov    r8d,0x1
   14726:	mov    QWORD PTR [rsp+0xa8],0x0
   14732:	mov    rcx,rbp
   14735:	mov    rdx,rbx
   14738:	call   bb20 <xlu_cfg_get_list@plt>
   1473d:	test   eax,eax
   1473f:	je     1504f <parse_config_data+0xf5f>
   14745:	mov    rdx,QWORD PTR [rsp+0x28]
   1474a:	mov    rdi,QWORD PTR [rsp+0xb8]
   14752:	lea    rsi,[rip+0x1aa8c]        # 2f1e5 <__func__.10421+0xe5d>
   14759:	xor    ecx,ecx
   1475b:	call   c380 <xlu_cfg_get_string@plt>
   14760:	test   eax,eax
   14762:	je     1504f <parse_config_data+0xf5f>
   14768:	mov    rdi,QWORD PTR [rsp+0xb8]
   14770:	lea    rsi,[rip+0x1aae6]        # 2f25d <__func__.10421+0xed5>
   14777:	mov    r8d,0x1
   1477d:	mov    rcx,rbp
   14780:	mov    rdx,rbx
   14783:	mov    QWORD PTR [rsp+0xa8],0x0
   1478f:	call   bb20 <xlu_cfg_get_list@plt>
   14794:	test   eax,eax
   14796:	je     15026 <parse_config_data+0xf36>
   1479c:	mov    rdx,QWORD PTR [rsp+0x28]
   147a1:	mov    rdi,QWORD PTR [rsp+0xb8]
   147a9:	lea    rsi,[rip+0x1aaad]        # 2f25d <__func__.10421+0xed5>
   147b0:	xor    ecx,ecx
   147b2:	call   c380 <xlu_cfg_get_string@plt>
   147b7:	test   eax,eax
   147b9:	je     15026 <parse_config_data+0xf36>
   147bf:	mov    rdx,QWORD PTR [rsp+0x30]
   147c4:	mov    rdi,QWORD PTR [rsp+0xb8]
   147cc:	lea    rsi,[rip+0x1517d]        # 29950 <_IO_stdin_used+0x210>
   147d3:	xor    ecx,ecx
   147d5:	call   b2c0 <xlu_cfg_get_long@plt>
   147da:	test   eax,eax
   147dc:	jne    151b8 <parse_config_data+0x10c8>
   147e2:	mov    rax,QWORD PTR [rsp+0xb0]
   147ea:	mov    DWORD PTR [r14+0x110],eax
   147f1:	mov    rdx,QWORD PTR [rsp+0x30]
   147f6:	mov    rdi,QWORD PTR [rsp+0xb8]
   147fe:	lea    rsi,[rip+0x1515c]        # 29961 <_IO_stdin_used+0x221>
   14805:	xor    ecx,ecx
   14807:	call   b2c0 <xlu_cfg_get_long@plt>
   1480c:	test   eax,eax
   1480e:	jne    151e1 <parse_config_data+0x10f1>
   14814:	mov    rax,QWORD PTR [rsp+0xb0]
   1481c:	mov    DWORD PTR [r14+0x114],eax
   14823:	lea    rax,[rip+0x2267f6]        # 23b020 <claim_mode>
   1482a:	xor    esi,esi
   1482c:	lea    rdi,[r14+0x1a8]
   14833:	mov    eax,DWORD PTR [rax]
   14835:	test   eax,eax
   14837:	setne  sil
   1483b:	call   b140 <libxl_defbool_set@plt>
   14840:	mov    rdx,QWORD PTR [rsp+0x28]
   14845:	mov    rdi,QWORD PTR [rsp+0xb8]
   1484d:	lea    rsi,[rip+0x1aa13]        # 2f267 <__func__.10421+0xedf>
   14854:	xor    ecx,ecx
   14856:	call   c380 <xlu_cfg_get_string@plt>
   1485b:	test   eax,eax
   1485d:	jne    151cd <parse_config_data+0x10dd>
   14863:	mov    rdi,QWORD PTR [rsp+0xa8]
   1486b:	lea    rsi,[r14+0x4a0]
   14872:	call   11540 <parse_action_on_shutdown>
   14877:	test   eax,eax
   14879:	je     18cc1 <parse_config_data+0x4bd1>
   1487f:	mov    rdx,QWORD PTR [rsp+0x28]
   14884:	mov    rdi,QWORD PTR [rsp+0xb8]
   1488c:	lea    rsi,[rip+0x1a9e0]        # 2f273 <__func__.10421+0xeeb>
   14893:	xor    ecx,ecx
   14895:	call   c380 <xlu_cfg_get_string@plt>
   1489a:	test   eax,eax
   1489c:	jne    15126 <parse_config_data+0x1036>
   148a2:	mov    rdi,QWORD PTR [rsp+0xa8]
   148aa:	lea    rsi,[r14+0x4a4]
   148b1:	call   11540 <parse_action_on_shutdown>
   148b6:	test   eax,eax
   148b8:	je     18cd5 <parse_config_data+0x4be5>
   148be:	mov    rdx,QWORD PTR [rsp+0x28]
   148c3:	mov    rdi,QWORD PTR [rsp+0xb8]
   148cb:	lea    rsi,[rip+0x1a9ab]        # 2f27d <__func__.10421+0xef5>
   148d2:	xor    ecx,ecx
   148d4:	call   c380 <xlu_cfg_get_string@plt>
   148d9:	test   eax,eax
   148db:	jne    15112 <parse_config_data+0x1022>
   148e1:	mov    rdi,QWORD PTR [rsp+0xa8]
   148e9:	lea    rsi,[r14+0x4a8]
   148f0:	call   11540 <parse_action_on_shutdown>
   148f5:	test   eax,eax
   148f7:	je     18dbe <parse_config_data+0x4cce>
   148fd:	mov    rdx,QWORD PTR [rsp+0x28]
   14902:	mov    rdi,QWORD PTR [rsp+0xb8]
   1490a:	lea    rsi,[rip+0x1a978]        # 2f289 <__func__.10421+0xf01>
   14911:	xor    ecx,ecx
   14913:	call   c380 <xlu_cfg_get_string@plt>
   14918:	test   eax,eax
   1491a:	jne    150fe <parse_config_data+0x100e>
   14920:	mov    rdi,QWORD PTR [rsp+0xa8]
   14928:	lea    rsi,[r14+0x4ac]
   1492f:	call   11540 <parse_action_on_shutdown>
   14934:	test   eax,eax
   14936:	je     18c83 <parse_config_data+0x4b93>
   1493c:	mov    rdx,QWORD PTR [rsp+0x28]
   14941:	mov    rdi,QWORD PTR [rsp+0xb8]
   14949:	lea    rsi,[rip+0x1a942]        # 2f292 <__func__.10421+0xf0a>
   14950:	xor    ecx,ecx
   14952:	call   c380 <xlu_cfg_get_string@plt>
   14957:	test   eax,eax
   14959:	jne    150ea <parse_config_data+0xffa>
   1495f:	mov    rdi,QWORD PTR [rsp+0xa8]
   14967:	lea    rsi,[r14+0x4b0]
   1496e:	call   11540 <parse_action_on_shutdown>
   14973:	test   eax,eax
   14975:	je     18bf1 <parse_config_data+0x4b01>
   1497b:	mov    rdx,QWORD PTR [rsp+0x30]
   14980:	mov    rdi,QWORD PTR [rsp+0xb8]
   14988:	lea    rsi,[rip+0x1a911]        # 2f2a0 <__func__.10421+0xf18>
   1498f:	xor    ecx,ecx
   14991:	call   b2c0 <xlu_cfg_get_long@plt>
   14996:	test   eax,eax
   14998:	jne    17a65 <parse_config_data+0x3975>
   1499e:	mov    rax,QWORD PTR [rsp+0xb0]
   149a6:	shl    rax,0xa
   149aa:	mov    rdi,QWORD PTR [rsp+0xb8]
   149b2:	lea    rdx,[r14+0xec]
   149b9:	lea    rsi,[rip+0x1a8ee]        # 2f2ae <__func__.10421+0xf26>
   149c0:	xor    ecx,ecx
   149c2:	mov    QWORD PTR [r14+0xd0],rax
   149c9:	call   be20 <xlu_cfg_get_defbool@plt>
   149ce:	mov    rdx,QWORD PTR [rsp+0x30]
   149d3:	mov    rdi,QWORD PTR [rsp+0xb8]
   149db:	lea    rsi,[rip+0x1a8d6]        # 2f2b8 <__func__.10421+0xf30>
   149e2:	mov    ecx,0x1
   149e7:	call   b2c0 <xlu_cfg_get_long@plt>
   149ec:	test   eax,eax
   149ee:	jne    1513a <parse_config_data+0x104a>
   149f4:	mov    edi,DWORD PTR [rsp+0xb0]
   149fb:	call   b6f0 <libxl_tsc_mode_to_string@plt>
   14a00:	test   rax,rax
   14a03:	mov    r8,rax
   14a06:	lea    r9,[rip+0x1a64f]        # 2f05c <__func__.10421+0xcd4>
   14a0d:	lea    rcx,[rip+0x1a63a]        # 2f04e <__func__.10421+0xcc6>
   14a14:	je     15252 <parse_config_data+0x1162>
   14a1a:	mov    rax,QWORD PTR [rip+0x2265cf]        # 23aff0 <stderr@GLIBC_2.2.5>
   14a21:	lea    rdx,[rip+0x1b618]        # 30040 <__func__.10421+0x1cb8>
   14a28:	mov    esi,0x1
   14a2d:	mov    rdi,QWORD PTR [rax]
   14a30:	xor    eax,eax
   14a32:	call   c1e0 <__fprintf_chk@plt>
   14a37:	mov    rcx,QWORD PTR [rsp+0xb0]
   14a3f:	cmp    rcx,0x3
   14a43:	ja     18e04 <parse_config_data+0x4d14>
   14a49:	mov    DWORD PTR [r14+0xb4],ecx
   14a50:	mov    rdx,QWORD PTR [rsp+0x30]
   14a55:	mov    rdi,QWORD PTR [rsp+0xb8]
   14a5d:	lea    rsi,[rip+0x1a87a]        # 2f2de <__func__.10421+0xf56>
   14a64:	xor    ecx,ecx
   14a66:	call   b2c0 <xlu_cfg_get_long@plt>
   14a6b:	test   eax,eax
   14a6d:	jne    14a7e <parse_config_data+0x98e>
   14a6f:	mov    rax,QWORD PTR [rsp+0xb0]
   14a77:	mov    DWORD PTR [r14+0xd8],eax
   14a7e:	mov    rdx,QWORD PTR [rsp+0x30]
   14a83:	mov    rdi,QWORD PTR [rsp+0xb8]
   14a8b:	lea    rsi,[rip+0x152f1]        # 29d83 <__PRETTY_FUNCTION__.10113+0x16b>
   14a92:	xor    ecx,ecx
   14a94:	call   b2c0 <xlu_cfg_get_long@plt>
   14a99:	test   eax,eax
   14a9b:	je     17a40 <parse_config_data+0x3950>
   14aa1:	mov    rdi,QWORD PTR [rsp+0xb8]
   14aa9:	lea    rdx,[r14+0xe8]
   14ab0:	lea    rsi,[rip+0x1a836]        # 2f2ed <__func__.10421+0xf65>
   14ab7:	xor    ecx,ecx
   14ab9:	call   be20 <xlu_cfg_get_defbool@plt>
   14abe:	mov    rdx,QWORD PTR [rsp+0x30]
   14ac3:	mov    rdi,QWORD PTR [rsp+0xb8]
   14acb:	lea    rsi,[rip+0x1a825]        # 2f2f7 <__func__.10421+0xf6f>
   14ad2:	xor    ecx,ecx
   14ad4:	call   b2c0 <xlu_cfg_get_long@plt>
   14ad9:	test   eax,eax
   14adb:	jne    14af0 <parse_config_data+0xa00>
   14add:	mov    rax,QWORD PTR [rsp+0xb0]
   14ae5:	shl    rax,0xa
   14ae9:	mov    QWORD PTR [r14+0xc8],rax
   14af0:	mov    rdx,QWORD PTR [rsp+0x30]
   14af5:	mov    rdi,QWORD PTR [rsp+0xb8]
   14afd:	lea    rsi,[rip+0x1a7fc]        # 2f300 <__func__.10421+0xf78>
   14b04:	xor    ecx,ecx
   14b06:	call   b2c0 <xlu_cfg_get_long@plt>
   14b0b:	test   eax,eax
   14b0d:	jne    14b1e <parse_config_data+0xa2e>
   14b0f:	mov    rax,QWORD PTR [rsp+0xb0]
   14b17:	mov    DWORD PTR [r14+0x1ac],eax
   14b1e:	mov    rdi,QWORD PTR [rsp+0xb8]
   14b26:	lea    rbp,[r14+0x1b0]
   14b2d:	lea    rsi,[rip+0x1a7df]        # 2f313 <__func__.10421+0xf8b>
   14b34:	xor    ecx,ecx
   14b36:	mov    rdx,rbp
   14b39:	call   c230 <xlu_cfg_replace_string@plt>
   14b3e:	mov    rdi,QWORD PTR [rsp+0xb8]
   14b46:	lea    rdx,[r14+0x1c0]
   14b4d:	lea    rsi,[rip+0x1a7c6]        # 2f31a <__func__.10421+0xf92>
   14b54:	xor    ecx,ecx
   14b56:	call   c230 <xlu_cfg_replace_string@plt>
   14b5b:	mov    rdi,QWORD PTR [rsp+0xb8]
   14b63:	lea    rdx,[r14+0x1c8]
   14b6a:	lea    rsi,[rip+0x1a7b1]        # 2f322 <__func__.10421+0xf9a>
   14b71:	xor    ecx,ecx
   14b73:	call   c230 <xlu_cfg_replace_string@plt>
   14b78:	mov    rbx,QWORD PTR [rsp+0xb8]
   14b80:	lea    rax,[rsp+0x168]
   14b88:	lea    rsi,[rip+0x1a5f1]        # 2f180 <__func__.10421+0xdf8>
   14b8f:	xor    ecx,ecx
   14b91:	mov    QWORD PTR [rsp+0x150],0x0
   14b9d:	mov    QWORD PTR [rsp+0x158],0x0
   14ba9:	mov    rdx,rax
   14bac:	mov    QWORD PTR [rsp+0x160],0x0
   14bb8:	mov    QWORD PTR [rsp+0x168],0x0
   14bc4:	mov    rdi,rbx
   14bc7:	mov    QWORD PTR [rsp+0x20],rax
   14bcc:	call   c380 <xlu_cfg_get_string@plt>
   14bd1:	lea    rax,[rsp+0x158]
   14bd9:	lea    rsi,[rip+0x1a74e]        # 2f32e <__func__.10421+0xfa6>
   14be0:	xor    ecx,ecx
   14be2:	mov    rdi,rbx
   14be5:	mov    rdx,rax
   14be8:	mov    QWORD PTR [rsp+0x38],rax
   14bed:	call   c380 <xlu_cfg_get_string@plt>
   14bf2:	lea    rax,[rsp+0x160]
   14bfa:	lea    rsi,[rip+0x1a58e]        # 2f18f <__func__.10421+0xe07>
   14c01:	xor    ecx,ecx
   14c03:	mov    rdi,rbx
   14c06:	mov    rdx,rax
   14c09:	mov    QWORD PTR [rsp+0x8],rax
   14c0e:	call   c380 <xlu_cfg_get_string@plt>
   14c13:	mov    rdi,QWORD PTR [rsp+0x168]
   14c1b:	test   rdi,rdi
   14c1e:	je     17936 <parse_config_data+0x3846>
   14c24:	call   c360 <strdup@plt>
   14c29:	cmp    QWORD PTR [rsp+0x158],0x0
   14c32:	mov    QWORD PTR [rsp+0x150],rax
   14c3a:	je     1523e <parse_config_data+0x114e>
   14c40:	mov    rax,QWORD PTR [rip+0x2263a9]        # 23aff0 <stderr@GLIBC_2.2.5>
   14c47:	lea    rdi,[rip+0x1b52a]        # 30178 <__func__.10421+0x1df0>
   14c4e:	mov    edx,0x39
   14c53:	mov    esi,0x1
   14c58:	mov    rcx,QWORD PTR [rax]
   14c5b:	call   c1b0 <fwrite@plt>
   14c60:	cmp    QWORD PTR [rsp+0x168],0x0
   14c69:	mov    rax,QWORD PTR [rsp+0x150]
   14c71:	je     18130 <parse_config_data+0x4040>
   14c77:	test   rax,rax
   14c7a:	je     18bb3 <parse_config_data+0x4ac3>
   14c80:	mov    rdi,QWORD PTR [rsp+0xb8]
   14c88:	lea    rdx,[r14+0x54]
   14c8c:	lea    rsi,[rip+0x1a6b3]        # 2f346 <__func__.10421+0xfbe>
   14c93:	xor    ecx,ecx
   14c95:	mov    QWORD PTR [r14+0x1b8],rax
   14c9c:	lea    rbx,[r14+0x1e0]
   14ca3:	call   be20 <xlu_cfg_get_defbool@plt>
   14ca8:	mov    rdi,QWORD PTR [rsp+0xb8]
   14cb0:	lea    rdx,[r14+0x1d0]
   14cb7:	lea    rsi,[rip+0x1a696]        # 2f354 <__func__.10421+0xfcc>
   14cbe:	xor    ecx,ecx
   14cc0:	call   be20 <xlu_cfg_get_defbool@plt>
   14cc5:	mov    rdi,QWORD PTR [rsp+0xb8]
   14ccd:	lea    rdx,[r14+0x1d8]
   14cd4:	lea    rsi,[rip+0x1a67e]        # 2f359 <__func__.10421+0xfd1>
   14cdb:	xor    ecx,ecx
   14cdd:	call   c230 <xlu_cfg_replace_string@plt>
   14ce2:	mov    rdi,QWORD PTR [rsp+0xb8]
   14cea:	lea    rsi,[rip+0x18ea4]        # 2db95 <__PRETTY_FUNCTION__.10113+0x3f7d>
   14cf1:	mov    ecx,0x1
   14cf6:	mov    rdx,rbx
   14cf9:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   14cfe:	cmp    eax,0x3
   14d01:	je     14d2f <parse_config_data+0xc3f>
   14d03:	cmp    eax,0x16
   14d06:	jne    17af0 <parse_config_data+0x3a00>
   14d0c:	mov    rdx,QWORD PTR [rsp+0x28]
   14d11:	mov    rdi,QWORD PTR [rsp+0xb8]
   14d19:	lea    rsi,[rip+0x18e75]        # 2db95 <__PRETTY_FUNCTION__.10113+0x3f7d>
   14d20:	xor    ecx,ecx
   14d22:	call   c380 <xlu_cfg_get_string@plt>
   14d27:	test   eax,eax
   14d29:	je     18148 <parse_config_data+0x4058>
   14d2f:	mov    rdx,QWORD PTR [rsp+0x30]
   14d34:	mov    rdi,QWORD PTR [rsp+0xb8]
   14d3c:	lea    rsi,[rip+0x1a625]        # 2f368 <__func__.10421+0xfe0>
   14d43:	mov    ecx,0x1
   14d48:	call   b2c0 <xlu_cfg_get_long@plt>
   14d4d:	test   eax,eax
   14d4f:	jne    178b4 <parse_config_data+0x37c4>
   14d55:	mov    edi,DWORD PTR [rsp+0xb0]
   14d5c:	call   bee0 <libxl_timer_mode_to_string@plt>
   14d61:	cmp    DWORD PTR [r14+0x1f8],0x2
   14d69:	mov    r8,rax
   14d6c:	je     18b89 <parse_config_data+0x4a99>
   14d72:	test   rax,rax
   14d75:	lea    r9,[rip+0x1a2e0]        # 2f05c <__func__.10421+0xcd4>
   14d7c:	lea    rcx,[rip+0x1a2db]        # 2f05e <__func__.10421+0xcd6>
   14d83:	je     181e8 <parse_config_data+0x40f8>
   14d89:	mov    rax,QWORD PTR [rip+0x226260]        # 23aff0 <stderr@GLIBC_2.2.5>
   14d90:	lea    rdx,[rip+0x1b519]        # 302b0 <__func__.10421+0x1f28>
   14d97:	mov    esi,0x1
   14d9c:	mov    rdi,QWORD PTR [rax]
   14d9f:	xor    eax,eax
   14da1:	call   c1e0 <__fprintf_chk@plt>
   14da6:	mov    rcx,QWORD PTR [rsp+0xb0]
   14dae:	cmp    rcx,0x3
   14db2:	ja     18b7d <parse_config_data+0x4a8d>
   14db8:	mov    DWORD PTR [r14+0x1e8],ecx
   14dbf:	mov    rdi,QWORD PTR [rsp+0xb8]
   14dc7:	lea    rdx,[r14+0x1ec]
   14dce:	lea    rsi,[rip+0x1a59e]        # 2f373 <__func__.10421+0xfeb>
   14dd5:	xor    ecx,ecx
   14dd7:	call   be20 <xlu_cfg_get_defbool@plt>
   14ddc:	mov    eax,DWORD PTR [r14+0x1f8]
   14de3:	cmp    eax,0x1
   14de6:	je     1749c <parse_config_data+0x33ac>
   14dec:	jl     18b78 <parse_config_data+0x4a88>
   14df2:	cmp    eax,0x3
   14df5:	jg     18b78 <parse_config_data+0x4a88>
   14dfb:	mov    rdx,QWORD PTR [rsp+0x28]
   14e00:	mov    rdi,QWORD PTR [rsp+0xb8]
   14e08:	lea    rsi,[rip+0x1a61a]        # 2f429 <__func__.10421+0x10a1>
   14e0f:	xor    ecx,ecx
   14e11:	call   c380 <xlu_cfg_get_string@plt>
   14e16:	test   eax,eax
   14e18:	jne    14ea1 <parse_config_data+0xdb1>
   14e1e:	cmp    QWORD PTR [r14+0x1b0],0x0
   14e26:	jne    18b4e <parse_config_data+0x4a5e>
   14e2c:	mov    rbx,QWORD PTR [rsp+0xa8]
   14e34:	mov    rdi,rbx
   14e37:	call   b0c0 <strlen@plt>
   14e3c:	mov    r8d,0x9
   14e42:	cmp    rax,0x9
   14e46:	lea    rdi,[rip+0x1a61e]        # 2f46b <__func__.10421+0x10e3>
   14e4d:	mov    rcx,r8
   14e50:	mov    rsi,rbx
   14e53:	cmovle rcx,rax
   14e57:	cmp    rcx,rcx
   14e5a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e5c:	seta   dl
   14e5f:	sbb    dl,0x0
   14e62:	test   dl,dl
   14e64:	je     14e8d <parse_config_data+0xd9d>
   14e66:	cmp    rax,0x9
   14e6a:	mov    rcx,r8
   14e6d:	lea    rdi,[rip+0x1a600]        # 2f474 <__func__.10421+0x10ec>
   14e74:	cmovle rcx,rax
   14e78:	mov    rsi,rbx
   14e7b:	cmp    rcx,rcx
   14e7e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14e80:	seta   al
   14e83:	sbb    al,0x0
   14e85:	test   al,al
   14e87:	jne    18b24 <parse_config_data+0x4a34>
   14e8d:	lea    rsi,[rip+0x1b81c]        # 306b0 <__func__.10421+0x2328>
   14e94:	mov    rdx,rbx
   14e97:	mov    rdi,rbp
   14e9a:	xor    eax,eax
   14e9c:	call   e8e0 <xasprintf>
   14ea1:	cmp    QWORD PTR [r14+0x1d8],0x0
   14ea9:	je     18389 <parse_config_data+0x4299>
   14eaf:	mov    r8,QWORD PTR [rsp+0xb8]
   14eb7:	mov    rdx,QWORD PTR [rsp+0x30]
   14ebc:	lea    rsi,[rip+0x1a5ba]        # 2f47d <__func__.10421+0x10f5>
   14ec3:	mov    ecx,0x1
   14ec8:	mov    rdi,r8
   14ecb:	call   b2c0 <xlu_cfg_get_long@plt>
   14ed0:	test   eax,eax
   14ed2:	jne    179e7 <parse_config_data+0x38f7>
   14ed8:	mov    rcx,QWORD PTR [rsp+0xb0]
   14ee0:	cmp    rcx,0x3
   14ee4:	ja     18b18 <parse_config_data+0x4a28>
   14eea:	mov    DWORD PTR [r14+0x3a8],ecx
   14ef1:	mov    rdx,QWORD PTR [rsp+0x80]
   14ef9:	mov    rdi,QWORD PTR [rsp+0xb8]
   14f01:	lea    rcx,[rsp+0x90]
   14f09:	lea    rsi,[rip+0x1a574]        # 2f484 <__func__.10421+0x10fc>
   14f10:	xor    r8d,r8d
   14f13:	call   bb20 <xlu_cfg_get_list@plt>
   14f18:	test   eax,eax
   14f1a:	mov    ebx,eax
   14f1c:	jne    157ac <parse_config_data+0x16bc>
   14f22:	movsxd rdi,DWORD PTR [rsp+0x90]
   14f2a:	mov    esi,0x8
   14f2f:	mov    DWORD PTR [r14+0x178],edi
   14f36:	call   b5f0 <calloc@plt>
   14f3b:	test   rax,rax
   14f3e:	mov    QWORD PTR [r14+0x180],rax
   14f45:	je     18af0 <parse_config_data+0x4a00>
   14f4b:	mov    eax,DWORD PTR [rsp+0x90]
   14f52:	xor    ebp,ebp
   14f54:	mov    r12d,0xfffffffe
   14f5a:	test   eax,eax
   14f5c:	jg     14f93 <parse_config_data+0xea3>
   14f5e:	jmp    157ac <parse_config_data+0x16bc>
   14f63:	nop    DWORD PTR [rax+rax*1+0x0]
   14f68:	mov    rax,QWORD PTR [r14+0x180]
   14f6f:	add    ebx,0x1
   14f72:	mov    DWORD PTR [rax+rbp*1],r13d
   14f76:	mov    rax,QWORD PTR [r14+0x180]
   14f7d:	mov    DWORD PTR [rax+rbp*1+0x4],r15d
   14f82:	add    rbp,0x8
   14f86:	cmp    DWORD PTR [rsp+0x90],ebx
   14f8d:	jle    157ac <parse_config_data+0x16bc>
   14f93:	mov    rdi,QWORD PTR [rsp+0x118]
   14f9b:	mov    esi,ebx
   14f9d:	call   ad60 <xlu_cfg_get_listitem@plt>
   14fa2:	test   rax,rax
   14fa5:	mov    QWORD PTR [rsp+0xa8],rax
   14fad:	je     18acc <parse_config_data+0x49dc>
   14fb3:	mov    rsi,QWORD PTR [rsp+0x20]
   14fb8:	mov    edx,0x10
   14fbd:	mov    rdi,rax
   14fc0:	call   c090 <strtoul@plt>
   14fc5:	mov    rcx,QWORD PTR [rsp+0xa8]
   14fcd:	mov    r13,rax
   14fd0:	mov    rax,QWORD PTR [rsp+0x168]
   14fd8:	cmp    rax,rcx
   14fdb:	je     18abd <parse_config_data+0x49cd>
   14fe1:	cmp    r13,r12
   14fe4:	ja     18aae <parse_config_data+0x49be>
   14fea:	movzx  edx,BYTE PTR [rax]
   14fed:	cmp    dl,0x2d
   14ff0:	je     1560e <parse_config_data+0x151e>
   14ff6:	test   dl,dl
   14ff8:	mov    r15d,0x1
   14ffe:	je     14f68 <parse_config_data+0xe78>
   15004:	mov    rax,QWORD PTR [rip+0x225fe5]        # 23aff0 <stderr@GLIBC_2.2.5>
   1500b:	lea    rdx,[rip+0x1b796]        # 307a8 <__func__.10421+0x2420>
   15012:	mov    esi,0x1
   15017:	mov    rdi,QWORD PTR [rax]
   1501a:	xor    eax,eax
   1501c:	call   c1e0 <__fprintf_chk@plt>
   15021:	jmp    14f68 <parse_config_data+0xe78>
   15026:	mov    ecx,DWORD PTR [rsp+0x9c]
   1502d:	mov    rdx,QWORD PTR [rsp+0xa8]
   15035:	xor    r8d,r8d
   15038:	mov    rsi,QWORD PTR [rsp+0xc0]
   15040:	mov    rdi,QWORD PTR [rsp+0x70]
   15045:	call   11c50 <parse_vcpu_affinity>
   1504a:	jmp    147bf <parse_config_data+0x6cf>
   1504f:	mov    ecx,DWORD PTR [rsp+0x9c]
   15056:	mov    rdx,QWORD PTR [rsp+0xa8]
   1505e:	mov    r8d,0x1
   15064:	mov    rsi,QWORD PTR [rsp+0xc0]
   1506c:	mov    rdi,QWORD PTR [rsp+0x70]
   15071:	call   11c50 <parse_vcpu_affinity>
   15076:	jmp    14768 <parse_config_data+0x678>
   1507b:	mov    QWORD PTR [rsp+0x50],0x0
   15084:	jmp    145c5 <parse_config_data+0x4d5>
   15089:	call   b2d0 <libxl_uuid_generate@plt>
   1508e:	jmp    14338 <parse_config_data+0x248>
   15093:	mov    rbx,QWORD PTR [rsp+0xa8]
   1509b:	mov    rdi,rbx
   1509e:	call   b0c0 <strlen@plt>
   150a3:	mov    ecx,0x4
   150a8:	cmp    rax,0x4
   150ac:	lea    rdi,[rip+0x1d8ef]        # 329a2 <__PRETTY_FUNCTION__.10016+0x1912>
   150b3:	cmovle rcx,rax
   150b7:	mov    rsi,rbx
   150ba:	cmp    rcx,rcx
   150bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   150bf:	seta   dl
   150c2:	sbb    dl,0x0
   150c5:	test   dl,dl
   150c7:	jne    1520b <parse_config_data+0x111b>
   150cd:	mov    eax,0x1
   150d2:	mov    edx,DWORD PTR [r14]
   150d5:	cmp    edx,eax
   150d7:	je     150e2 <parse_config_data+0xff2>
   150d9:	cmp    edx,0xffffffff
   150dc:	jne    18a84 <parse_config_data+0x4994>
   150e2:	mov    DWORD PTR [r14],eax
   150e5:	jmp    142c0 <parse_config_data+0x1d0>
   150ea:	lea    rdi,[rip+0x19f52]        # 2f043 <__func__.10421+0xcbb>
   150f1:	mov    QWORD PTR [rsp+0xa8],rdi
   150f9:	jmp    14967 <parse_config_data+0x877>
   150fe:	lea    rdi,[rip+0x1513d]        # 2a242 <__PRETTY_FUNCTION__.10113+0x62a>
   15105:	mov    QWORD PTR [rsp+0xa8],rdi
   1510d:	jmp    14928 <parse_config_data+0x838>
   15112:	lea    rdi,[rip+0x15129]        # 2a242 <__PRETTY_FUNCTION__.10113+0x62a>
   15119:	mov    QWORD PTR [rsp+0xa8],rdi
   15121:	jmp    148e9 <parse_config_data+0x7f9>
   15126:	lea    rdi,[rip+0x1a6b0]        # 2f7dd <__func__.10421+0x1455>
   1512d:	mov    QWORD PTR [rsp+0xa8],rdi
   15135:	jmp    148aa <parse_config_data+0x7ba>
   1513a:	mov    rdx,QWORD PTR [rsp+0x28]
   1513f:	mov    rdi,QWORD PTR [rsp+0xb8]
   15147:	lea    rsi,[rip+0x1a16a]        # 2f2b8 <__func__.10421+0xf30>
   1514e:	xor    ecx,ecx
   15150:	call   c380 <xlu_cfg_get_string@plt>
   15155:	test   eax,eax
   15157:	jne    14a50 <parse_config_data+0x960>
   1515d:	mov    rax,QWORD PTR [rip+0x225e8c]        # 23aff0 <stderr@GLIBC_2.2.5>
   15164:	mov    rcx,QWORD PTR [rsp+0xa8]
   1516c:	lea    rdx,[rip+0x1a14e]        # 2f2c1 <__func__.10421+0xf39>
   15173:	mov    esi,0x1
   15178:	mov    rdi,QWORD PTR [rax]
   1517b:	xor    eax,eax
   1517d:	call   c1e0 <__fprintf_chk@plt>
   15182:	mov    rdi,QWORD PTR [rsp+0xa8]
   1518a:	lea    rsi,[r14+0xb4]
   15191:	call   beb0 <libxl_tsc_mode_from_string@plt>
   15196:	test   eax,eax
   15198:	je     14a50 <parse_config_data+0x960>
   1519e:	mov    rcx,QWORD PTR [rsp+0xa8]
   151a6:	lea    rdx,[rip+0x1af33]        # 300e0 <__func__.10421+0x1d58>
   151ad:	jmp    161f9 <parse_config_data+0x2109>
   151b2:	nop    WORD PTR [rax+rax*1+0x0]
   151b8:	lea    rax,[rip+0x225e5d]        # 23b01c <max_grant_frames>
   151bf:	mov    eax,DWORD PTR [rax]
   151c1:	mov    DWORD PTR [r14+0x110],eax
   151c8:	jmp    147f1 <parse_config_data+0x701>
   151cd:	lea    rdi,[rip+0x1506e]        # 2a242 <__PRETTY_FUNCTION__.10113+0x62a>
   151d4:	mov    QWORD PTR [rsp+0xa8],rdi
   151dc:	jmp    1486b <parse_config_data+0x77b>
   151e1:	lea    rax,[rip+0x225e30]        # 23b018 <max_maptrack_frames>
   151e8:	mov    eax,DWORD PTR [rax]
   151ea:	cmp    eax,0xffffffff
   151ed:	je     14823 <parse_config_data+0x733>
   151f3:	mov    DWORD PTR [r14+0x114],eax
   151fa:	jmp    14823 <parse_config_data+0x733>
   151ff:	mov    DWORD PTR [r14],0x1
   15206:	jmp    14290 <parse_config_data+0x1a0>
   1520b:	cmp    rax,0x8
   1520f:	mov    ecx,0x8
   15214:	lea    rdi,[rip+0x19f1c]        # 2f137 <__func__.10421+0xdaf>
   1521b:	cmovle rcx,rax
   1521f:	mov    rsi,rbx
   15222:	cmp    rcx,rcx
   15225:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15227:	seta   al
   1522a:	sbb    al,0x0
   1522c:	test   al,al
   1522e:	jne    18a75 <parse_config_data+0x4985>
   15234:	mov    eax,0x2
   15239:	jmp    150d2 <parse_config_data+0xfe2>
   1523e:	cmp    QWORD PTR [rsp+0x160],0x0
   15247:	jne    14c40 <parse_config_data+0xb50>
   1524d:	jmp    14c77 <parse_config_data+0xb87>
   15252:	lea    r8,[rip+0x1a10e]        # 2f367 <__func__.10421+0xfdf>
   15259:	mov    r9,r8
   1525c:	mov    rcx,r8
   1525f:	jmp    14a1a <parse_config_data+0x92a>
   15264:	lea    rdx,[r14+0x10]
   15268:	lea    rsi,[rip+0x19e9a]        # 2f109 <__func__.10421+0xd81>
   1526f:	xor    ecx,ecx
   15271:	call   c230 <xlu_cfg_replace_string@plt>
   15276:	jmp    141e8 <parse_config_data+0xf8>
   1527b:	movsxd rdi,eax
   1527e:	mov    esi,0x30
   15283:	mov    DWORD PTR [r14+0x100],eax
   1528a:	call   e9e0 <xcalloc>
   1528f:	movsxd rdi,DWORD PTR [rsp+0x118]
   15297:	mov    esi,0x10
   1529c:	mov    QWORD PTR [r14+0x108],rax
   152a3:	call   e9e0 <xcalloc>
   152a8:	mov    esi,DWORD PTR [rsp+0x118]
   152af:	mov    QWORD PTR [rsp+0x58],rax
   152b4:	test   esi,esi
   152b6:	jle    152f3 <parse_config_data+0x1203>
   152b8:	mov    rbx,rax
   152bb:	xor    ebp,ebp
   152bd:	mov    rdi,rbx
   152c0:	call   bc00 <libxl_bitmap_init@plt>
   152c5:	lea    rax,[rip+0x227b94]        # 23ce60 <ctx>
   152cc:	mov    edx,DWORD PTR [r14+0x58]
   152d0:	mov    rsi,rbx
   152d3:	mov    rdi,QWORD PTR [rax]
   152d6:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   152db:	test   eax,eax
   152dd:	jne    18a4b <parse_config_data+0x495b>
   152e3:	add    ebp,0x1
   152e6:	add    rbx,0x10
   152ea:	cmp    ebp,DWORD PTR [rsp+0x118]
   152f1:	jl     152bd <parse_config_data+0x11cd>
   152f3:	mov    ecx,DWORD PTR [r14+0x100]
   152fa:	test   ecx,ecx
   152fc:	jle    15346 <parse_config_data+0x1256>
   152fe:	xor    ebp,ebp
   15300:	xor    ebx,ebx
   15302:	mov    r12,QWORD PTR [r14+0x108]
   15309:	add    ebp,0x1
   1530c:	add    r12,rbx
   1530f:	add    rbx,0x30
   15313:	mov    rdi,r12
   15316:	call   c220 <libxl_vnode_info_init@plt>
   1531b:	movsxd rdi,DWORD PTR [r14+0x100]
   15322:	mov    esi,0x4
   15327:	call   e9e0 <xcalloc>
   1532c:	mov    QWORD PTR [r12+0x10],rax
   15331:	mov    eax,DWORD PTR [r14+0x100]
   15338:	mov    DWORD PTR [r12+0x8],eax
   1533d:	cmp    ebp,DWORD PTR [r14+0x100]
   15344:	jl     15302 <parse_config_data+0x1212>
   15346:	mov    edx,DWORD PTR [rsp+0x118]
   1534d:	test   edx,edx
   1534f:	jle    18548 <parse_config_data+0x4458>
   15355:	mov    r13,QWORD PTR [rsp+0x58]
   1535a:	xor    r15d,r15d
   1535d:	mov    QWORD PTR [rsp+0x18],r14
   15362:	mov    DWORD PTR [rsp+0x10],0x0
   1536a:	mov    QWORD PTR [rsp+0x20],0x0
   15373:	mov    r14,r15
   15376:	mov    QWORD PTR [rsp+0x40],0x0
   1537f:	mov    r12,r13
   15382:	mov    rax,QWORD PTR [rsp+0x18]
   15387:	mov    esi,DWORD PTR [rsp+0x10]
   1538b:	mov    rdi,QWORD PTR [rsp+0x120]
   15393:	mov    r15,QWORD PTR [rsp+0x20]
   15398:	add    r15,QWORD PTR [rax+0x108]
   1539f:	call   af40 <xlu_cfg_get_listitem2@plt>
   153a4:	test   rax,rax
   153a7:	je     18fa5 <parse_config_data+0x4eb5>
   153ad:	mov    rdi,QWORD PTR [rsp+0x8]
   153b2:	lea    rdx,[rsp+0x128]
   153ba:	xor    ecx,ecx
   153bc:	mov    rsi,rax
   153bf:	call   b950 <xlu_cfg_value_get_list@plt>
   153c4:	mov    rdi,QWORD PTR [rsp+0x128]
   153cc:	test   rdi,rdi
   153cf:	je     18f7b <parse_config_data+0x4e8b>
   153d5:	xor    ebx,ebx
   153d7:	jmp    153eb <parse_config_data+0x12fb>
   153d9:	nop    DWORD PTR [rax+0x0]
   153e0:	mov    rdi,QWORD PTR [rsp+0x128]
   153e8:	add    ebx,0x1
   153eb:	mov    esi,ebx
   153ed:	call   af40 <xlu_cfg_get_listitem2@plt>
   153f2:	test   rax,rax
   153f5:	mov    rbp,rax
   153f8:	je     1557c <parse_config_data+0x148c>
   153fe:	mov    rdi,rbp
   15401:	call   bfb0 <xlu_cfg_value_type@plt>
   15406:	test   eax,eax
   15408:	jne    153e0 <parse_config_data+0x12f0>
   1540a:	mov    rdi,QWORD PTR [rsp+0x8]
   1540f:	lea    rdx,[rsp+0x130]
   15417:	xor    ecx,ecx
   15419:	mov    rsi,rbp
   1541c:	call   c260 <xlu_cfg_value_get_string@plt>
   15421:	mov    rdi,QWORD PTR [rsp+0x130]
   15429:	test   rdi,rdi
   1542c:	je     153e0 <parse_config_data+0x12f0>
   1542e:	lea    rcx,[rsp+0x140]
   15436:	lea    rdx,[rsp+0x138]
   1543e:	lea    rsi,[rip+0x19623]        # 2ea68 <__func__.10421+0x6e0>
   15445:	call   13e20 <split_string_into_pair>
   1544a:	test   eax,eax
   1544c:	jne    18f67 <parse_config_data+0x4e77>
   15452:	mov    rbp,QWORD PTR [rip+0x225b57]        # 23afb0 <isspace@GLIBC_2.2.5>
   15459:	mov    rsi,QWORD PTR [rsp+0x138]
   15461:	lea    rdx,[rsp+0x148]
   15469:	mov    rdi,rbp
   1546c:	call   13d80 <trim>
   15471:	mov    rsi,QWORD PTR [rsp+0x140]
   15479:	lea    rdx,[rsp+0x150]
   15481:	mov    rdi,rbp
   15484:	call   13d80 <trim>
   15489:	mov    rax,QWORD PTR [rsp+0x148]
   15491:	lea    rsi,[rip+0x19d7e]        # 2f216 <__func__.10421+0xe8e>
   15498:	mov    ecx,0x6
   1549d:	mov    rdi,rax
   154a0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   154a2:	seta   dl
   154a5:	sbb    dl,0x0
   154a8:	test   dl,dl
   154aa:	je     15541 <parse_config_data+0x1451>
   154b0:	lea    rsi,[rip+0x19d65]        # 2f21c <__func__.10421+0xe94>
   154b7:	mov    ecx,0x5
   154bc:	mov    rdi,rax
   154bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   154c1:	seta   dl
   154c4:	sbb    dl,0x0
   154c7:	test   dl,dl
   154c9:	je     155e8 <parse_config_data+0x14f8>
   154cf:	lea    rsi,[rip+0x19d0e]        # 2f1e4 <__func__.10421+0xe5c>
   154d6:	mov    ecx,0x6
   154db:	mov    rdi,rax
   154de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   154e0:	seta   dl
   154e3:	sbb    dl,0x0
   154e6:	test   dl,dl
   154e8:	je     15653 <parse_config_data+0x1563>
   154ee:	lea    rsi,[rip+0x19d2c]        # 2f221 <__func__.10421+0xe99>
   154f5:	mov    ecx,0xb
   154fa:	mov    rdi,rax
   154fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   154ff:	seta   dl
   15502:	sbb    dl,0x0
   15505:	test   dl,dl
   15507:	je     15743 <parse_config_data+0x1653>
   1550d:	mov    rdi,rax
   15510:	call   ac40 <free@plt>
   15515:	mov    rdi,QWORD PTR [rsp+0x150]
   1551d:	call   ac40 <free@plt>
   15522:	mov    rdi,QWORD PTR [rsp+0x138]
   1552a:	call   ac40 <free@plt>
   1552f:	mov    rdi,QWORD PTR [rsp+0x140]
   15537:	call   ac40 <free@plt>
   1553c:	jmp    153e0 <parse_config_data+0x12f0>
   15541:	mov    rdi,QWORD PTR [rsp+0x150]
   15549:	call   116d0 <parse_ulong>
   1554e:	mov    edx,DWORD PTR [rsp+0x38]
   15552:	cmp    rax,rdx
   15555:	jae    18f58 <parse_config_data+0x4e68>
   1555b:	mov    DWORD PTR [r15+0x18],eax
   1555f:	mov    rax,QWORD PTR [rsp+0x18]
   15564:	xor    esi,esi
   15566:	lea    rdi,[rax+0xb0]
   1556d:	call   b140 <libxl_defbool_set@plt>
   15572:	mov    rax,QWORD PTR [rsp+0x148]
   1557a:	jmp    1550d <parse_config_data+0x141d>
   1557c:	add    DWORD PTR [rsp+0x10],0x1
   15581:	add    QWORD PTR [rsp+0x20],0x30
   15587:	add    r12,0x10
   1558b:	mov    eax,DWORD PTR [rsp+0x10]
   1558f:	cmp    eax,DWORD PTR [rsp+0x118]
   15596:	jl     15382 <parse_config_data+0x1292>
   1559c:	mov    r15,r14
   1559f:	mov    r14,QWORD PTR [rsp+0x18]
   155a4:	movsxd rax,DWORD PTR [r14+0x58]
   155a8:	test   eax,eax
   155aa:	je     1855f <parse_config_data+0x446f>
   155b0:	cmp    rax,r15
   155b3:	je     18585 <parse_config_data+0x4495>
   155b9:	mov    rax,QWORD PTR [rip+0x225a30]        # 23aff0 <stderr@GLIBC_2.2.5>
   155c0:	lea    rdi,[rip+0x1a8e1]        # 2fea8 <__func__.10421+0x1b20>
   155c7:	mov    edx,0x27
   155cc:	mov    esi,0x1
   155d1:	mov    rcx,QWORD PTR [rax]
   155d4:	call   c1b0 <fwrite@plt>
   155d9:	mov    edi,0x1
   155de:	call   c1a0 <exit@plt>
   155e3:	nop    DWORD PTR [rax+rax*1+0x0]
   155e8:	mov    rdi,QWORD PTR [rsp+0x150]
   155f0:	call   116d0 <parse_ulong>
   155f5:	shl    rax,0xa
   155f9:	add    QWORD PTR [rsp+0x40],rax
   155fe:	mov    QWORD PTR [r15],rax
   15601:	mov    rax,QWORD PTR [rsp+0x148]
   15609:	jmp    1550d <parse_config_data+0x141d>
   1560e:	lea    r15,[rax+0x1]
   15612:	mov    rsi,QWORD PTR [rsp+0x20]
   15617:	mov    edx,0x10
   1561c:	mov    rdi,r15
   1561f:	call   c090 <strtoul@plt>
   15624:	mov    rdx,QWORD PTR [rsp+0x168]
   1562c:	cmp    rdx,r15
   1562f:	je     190da <parse_config_data+0x4fea>
   15635:	cmp    BYTE PTR [rdx],0x0
   15638:	jne    190da <parse_config_data+0x4fea>
   1563e:	cmp    rax,r12
   15641:	ja     190cb <parse_config_data+0x4fdb>
   15647:	sub    eax,r13d
   1564a:	lea    r15d,[rax+0x1]
   1564e:	jmp    14f68 <parse_config_data+0xe78>
   15653:	lea    rax,[rsp+0x158]
   1565b:	mov    rdi,QWORD PTR [rsp+0x150]
   15663:	lea    rsi,[rip+0x18a81]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   1566a:	mov    rbp,rax
   1566d:	mov    rdx,rax
   15670:	mov    QWORD PTR [rsp+0x60],rax
   15675:	call   134e0 <split_string_into_string_list>
   1567a:	mov    rdi,rbp
   1567d:	call   b370 <libxl_string_list_length@plt>
   15682:	test   eax,eax
   15684:	jle    1572c <parse_config_data+0x163c>
   1568a:	sub    eax,0x1
   1568d:	lea    rcx,[rsp+0x160]
   15695:	mov    QWORD PTR [rsp+0x68],r15
   1569a:	lea    r13,[rax*8+0x8]
   156a2:	lea    rax,[rsp+0x168]
   156aa:	mov    DWORD PTR [rsp+0x78],ebx
   156ae:	xor    ebp,ebp
   156b0:	mov    rbx,rcx
   156b3:	mov    r15,rax
   156b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   156c0:	mov    rax,QWORD PTR [rsp+0x158]
   156c8:	mov    rsi,rbx
   156cb:	mov    rdx,r15
   156ce:	mov    rdi,QWORD PTR [rax+rbp*1]
   156d2:	call   11850 <parse_range>
   156d7:	mov    rsi,QWORD PTR [rsp+0x160]
   156df:	cmp    rsi,QWORD PTR [rsp+0x168]
   156e7:	ja     1571a <parse_config_data+0x162a>
   156e9:	nop    DWORD PTR [rax+0x0]
   156f0:	mov    rdi,r12
   156f3:	add    r14,0x1
   156f7:	call   b7d0 <libxl_bitmap_set@plt>
   156fc:	mov    rax,QWORD PTR [rsp+0x160]
   15704:	lea    rsi,[rax+0x1]
   15708:	cmp    rsi,QWORD PTR [rsp+0x168]
   15710:	mov    QWORD PTR [rsp+0x160],rsi
   15718:	jbe    156f0 <parse_config_data+0x1600>
   1571a:	add    rbp,0x8
   1571e:	cmp    r13,rbp
   15721:	jne    156c0 <parse_config_data+0x15d0>
   15723:	mov    r15,QWORD PTR [rsp+0x68]
   15728:	mov    ebx,DWORD PTR [rsp+0x78]
   1572c:	mov    rdi,QWORD PTR [rsp+0x60]
   15731:	call   b9a0 <libxl_string_list_dispose@plt>
   15736:	mov    rax,QWORD PTR [rsp+0x148]
   1573e:	jmp    1550d <parse_config_data+0x141d>
   15743:	lea    rax,[rsp+0x168]
   1574b:	mov    rdi,QWORD PTR [rsp+0x150]
   15753:	lea    rsi,[rip+0x18991]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   1575a:	mov    rbp,rax
   1575d:	mov    rdx,rax
   15760:	mov    QWORD PTR [rsp+0x60],rax
   15765:	call   134e0 <split_string_into_string_list>
   1576a:	mov    rdi,rbp
   1576d:	call   b370 <libxl_string_list_length@plt>
   15772:	test   eax,eax
   15774:	jle    1572c <parse_config_data+0x163c>
   15776:	sub    eax,0x1
   15779:	xor    r13d,r13d
   1577c:	lea    rbp,[rax*4+0x4]
   15784:	nop    DWORD PTR [rax+0x0]
   15788:	mov    rax,QWORD PTR [rsp+0x168]
   15790:	mov    rdi,QWORD PTR [rax+r13*2]
   15794:	call   116d0 <parse_ulong>
   15799:	mov    rdx,QWORD PTR [r15+0x10]
   1579d:	mov    DWORD PTR [rdx+r13*1],eax
   157a1:	add    r13,0x4
   157a5:	cmp    rbp,r13
   157a8:	jne    15788 <parse_config_data+0x1698>
   157aa:	jmp    1572c <parse_config_data+0x163c>
   157ac:	mov    rdx,QWORD PTR [rsp+0x88]
   157b4:	mov    rdi,QWORD PTR [rsp+0xb8]
   157bc:	lea    rcx,[rsp+0x94]
   157c4:	lea    rsi,[rip+0x19cd9]        # 2f4a4 <__func__.10421+0x111c>
   157cb:	xor    r8d,r8d
   157ce:	call   bb20 <xlu_cfg_get_list@plt>
   157d3:	test   eax,eax
   157d5:	mov    ebx,eax
   157d7:	jne    15895 <parse_config_data+0x17a5>
   157dd:	movsxd rdi,DWORD PTR [rsp+0x94]
   157e5:	mov    esi,0x4
   157ea:	mov    DWORD PTR [r14+0x188],edi
   157f1:	call   b5f0 <calloc@plt>
   157f6:	test   rax,rax
   157f9:	mov    QWORD PTR [r14+0x190],rax
   15800:	je     18af0 <parse_config_data+0x4a00>
   15806:	mov    r15d,DWORD PTR [rsp+0x94]
   1580e:	xor    ebp,ebp
   15810:	mov    r12d,0xfffffffe
   15816:	mov    r13,QWORD PTR [rsp+0x20]
   1581b:	test   r15d,r15d
   1581e:	jle    15895 <parse_config_data+0x17a5>
   15820:	mov    rdi,QWORD PTR [rsp+0x120]
   15828:	mov    esi,ebx
   1582a:	call   ad60 <xlu_cfg_get_listitem@plt>
   1582f:	test   rax,rax
   15832:	mov    QWORD PTR [rsp+0xa8],rax
   1583a:	je     18ebd <parse_config_data+0x4dcd>
   15840:	mov    edx,0xa
   15845:	mov    rsi,r13
   15848:	mov    rdi,rax
   1584b:	call   c090 <strtoul@plt>
   15850:	mov    rdx,QWORD PTR [rsp+0x168]
   15858:	mov    rcx,QWORD PTR [rsp+0xa8]
   15860:	cmp    rdx,rcx
   15863:	je     18eb1 <parse_config_data+0x4dc1>
   15869:	cmp    BYTE PTR [rdx],0x0
   1586c:	jne    18eb1 <parse_config_data+0x4dc1>
   15872:	cmp    rax,r12
   15875:	ja     18ea2 <parse_config_data+0x4db2>
   1587b:	mov    rdx,QWORD PTR [r14+0x190]
   15882:	add    ebx,0x1
   15885:	mov    DWORD PTR [rdx+rbp*1],eax
   15888:	add    rbp,0x4
   1588c:	cmp    DWORD PTR [rsp+0x94],ebx
   15893:	jg     15820 <parse_config_data+0x1730>
   15895:	mov    rdi,QWORD PTR [rsp+0xb8]
   1589d:	lea    rcx,[rsp+0x98]
   158a5:	lea    rdx,[rsp+0x128]
   158ad:	lea    rsi,[rip+0x19c0a]        # 2f4be <__func__.10421+0x1136>
   158b4:	xor    r8d,r8d
   158b7:	call   bb20 <xlu_cfg_get_list@plt>
   158bc:	test   eax,eax
   158be:	mov    ebx,eax
   158c0:	jne    159a7 <parse_config_data+0x18b7>
   158c6:	movsxd rdi,DWORD PTR [rsp+0x98]
   158ce:	mov    esi,0x18
   158d3:	mov    DWORD PTR [r14+0x198],edi
   158da:	call   b5f0 <calloc@plt>
   158df:	test   rax,rax
   158e2:	mov    QWORD PTR [r14+0x1a0],rax
   158e9:	je     18e7a <parse_config_data+0x4d8a>
   158ef:	mov    r13d,DWORD PTR [rsp+0x98]
   158f7:	xor    ebp,ebp
   158f9:	lea    r12,[rip+0x19bc4]        # 2f4c4 <__func__.10421+0x113c>
   15900:	test   r13d,r13d
   15903:	jle    159a7 <parse_config_data+0x18b7>
   15909:	mov    r13,QWORD PTR [rsp+0x20]
   1590e:	xchg   ax,ax
   15910:	mov    rdi,QWORD PTR [rsp+0x128]
   15918:	mov    esi,ebx
   1591a:	call   ad60 <xlu_cfg_get_listitem@plt>
   1591f:	test   rax,rax
   15922:	mov    QWORD PTR [rsp+0xa8],rax
   1592a:	je     18e6c <parse_config_data+0x4d7c>
   15930:	mov    rdi,QWORD PTR [r14+0x1a0]
   15937:	add    rdi,rbp
   1593a:	call   b720 <libxl_iomem_range_init@plt>
   1593f:	mov    rdx,QWORD PTR [r14+0x1a0]
   15946:	sub    rsp,0x8
   1594a:	xor    eax,eax
   1594c:	push   r13
   1594e:	mov    rdi,QWORD PTR [rsp+0xb8]
   15956:	mov    r8,r13
   15959:	mov    rsi,r12
   1595c:	add    rdx,rbp
   1595f:	lea    rcx,[rdx+0x8]
   15963:	lea    r9,[rdx+0x10]
   15967:	call   bab0 <__isoc99_sscanf@plt>
   1596c:	cmp    eax,0x1
   1596f:	pop    r10
   15971:	pop    r11
   15973:	jle    18e58 <parse_config_data+0x4d68>
   15979:	movsxd rax,DWORD PTR [rsp+0x168]
   15981:	mov    rcx,QWORD PTR [rsp+0xa8]
   15989:	cmp    BYTE PTR [rcx+rax*1],0x0
   1598d:	jne    18e60 <parse_config_data+0x4d70>
   15993:	add    ebx,0x1
   15996:	add    rbp,0x18
   1599a:	cmp    DWORD PTR [rsp+0x98],ebx
   159a1:	jg     15910 <parse_config_data+0x1820>
   159a7:	mov    rdi,QWORD PTR [rsp+0xb8]
   159af:	lea    rsi,[rip+0x19967]        # 2f31d <__func__.10421+0xf95>
   159b6:	lea    rdx,[rsp+0xc8]
   159be:	xor    r8d,r8d
   159c1:	xor    ecx,ecx
   159c3:	call   bb20 <xlu_cfg_get_list@plt>
   159c8:	test   eax,eax
   159ca:	mov    esi,eax
   159cc:	jne    15a83 <parse_config_data+0x1993>
   159d2:	mov    DWORD PTR [r14+0x3b0],0x0
   159dd:	mov    QWORD PTR [r14+0x3b8],0x0
   159e8:	lea    rbp,[rsp+0xb8]
   159f0:	jmp    15a65 <parse_config_data+0x1975>
   159f2:	mov    rdi,rax
   159f5:	call   c360 <strdup@plt>
   159fa:	mov    r12,rax
   159fd:	mov    eax,DWORD PTR [r14+0x3b0]
   15a04:	mov    rdi,QWORD PTR [r14+0x3b8]
   15a0b:	add    eax,0x1
   15a0e:	mov    DWORD PTR [r14+0x3b0],eax
   15a15:	cdqe   
   15a17:	mov    rbx,rax
   15a1a:	shl    rbx,0x4
   15a1e:	sub    rbx,rax
   15a21:	shl    rbx,0x3
   15a25:	mov    rsi,rbx
   15a28:	sub    rbx,0x78
   15a2c:	call   ea30 <xrealloc>
   15a31:	lea    rdi,[rax+rbx*1]
   15a35:	mov    QWORD PTR [r14+0x3b8],rax
   15a3c:	call   be50 <libxl_device_disk_init@plt>
   15a41:	add    rbx,QWORD PTR [r14+0x3b8]
   15a48:	mov    rsi,r12
   15a4b:	mov    rdi,rbp
   15a4e:	mov    rdx,rbx
   15a51:	call   11820 <parse_disk_config>
   15a56:	mov    rdi,r12
   15a59:	call   ac40 <free@plt>
   15a5e:	mov    esi,DWORD PTR [r14+0x3b0]
   15a65:	mov    rdi,QWORD PTR [rsp+0xc8]
   15a6d:	call   ad60 <xlu_cfg_get_listitem@plt>
   15a72:	test   rax,rax
   15a75:	mov    QWORD PTR [rsp+0xa8],rax
   15a7d:	jne    159f2 <parse_config_data+0x1902>
   15a83:	mov    rdi,QWORD PTR [rsp+0xb8]
   15a8b:	lea    rsi,[rip+0x19a42]        # 2f4d4 <__func__.10421+0x114c>
   15a92:	lea    rdx,[rsp+0xf8]
   15a9a:	xor    r8d,r8d
   15a9d:	xor    ecx,ecx
   15a9f:	call   bb20 <xlu_cfg_get_list@plt>
   15aa4:	test   eax,eax
   15aa6:	mov    esi,eax
   15aa8:	jne    15d13 <parse_config_data+0x1c23>
   15aae:	mov    DWORD PTR [r14+0x430],0x0
   15ab9:	mov    QWORD PTR [r14+0x438],0x0
   15ac4:	xor    r15d,r15d
   15ac7:	mov    QWORD PTR [rsp+0x18],0x0
   15ad0:	mov    QWORD PTR [rsp+0x10],0x0
   15ad9:	xor    r13d,r13d
   15adc:	nop    DWORD PTR [rax+0x0]
   15ae0:	mov    rdi,QWORD PTR [rsp+0xf8]
   15ae8:	call   ad60 <xlu_cfg_get_listitem@plt>
   15aed:	test   rax,rax
   15af0:	mov    QWORD PTR [rsp+0xa8],rax
   15af8:	je     15d13 <parse_config_data+0x1c23>
   15afe:	mov    r12d,DWORD PTR [r14+0x430]
   15b05:	mov    rdi,QWORD PTR [r14+0x438]
   15b0c:	lea    eax,[r12+0x1]
   15b11:	mov    DWORD PTR [r14+0x430],eax
   15b18:	cdqe   
   15b1a:	lea    rbp,[rax+rax*2]
   15b1e:	shl    rbp,0x4
   15b22:	lea    rbx,[rbp-0x30]
   15b26:	mov    rsi,rbp
   15b29:	call   ea30 <xrealloc>
   15b2e:	lea    rdi,[rax+rbx*1]
   15b32:	mov    QWORD PTR [r14+0x438],rax
   15b39:	call   af10 <libxl_device_p9_init@plt>
   15b3e:	mov    rax,QWORD PTR [r14+0x438]
   15b45:	mov    DWORD PTR [rax+rbp*1-0x8],r12d
   15b4a:	add    rbx,QWORD PTR [r14+0x438]
   15b51:	mov    rdi,rbx
   15b54:	call   af10 <libxl_device_p9_init@plt>
   15b59:	mov    rdi,QWORD PTR [rsp+0xa8]
   15b61:	call   c360 <strdup@plt>
   15b66:	lea    rsi,[rip+0x1857e]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   15b6d:	mov    rdi,rax
   15b70:	mov    rbp,rax
   15b73:	call   bfe0 <strtok@plt>
   15b78:	test   rax,rax
   15b7b:	mov    r12,rax
   15b7e:	je     15c4e <parse_config_data+0x1b5e>
   15b84:	nop    DWORD PTR [rax+0x0]
   15b88:	cmp    BYTE PTR [r12],0x20
   15b8d:	je     15cc0 <parse_config_data+0x1bd0>
   15b93:	mov    esi,0x3d
   15b98:	mov    rdi,r12
   15b9b:	call   b1c0 <strchr@plt>
   15ba0:	test   rax,rax
   15ba3:	je     15c4e <parse_config_data+0x1b5e>
   15ba9:	lea    rdi,[rip+0x1992c]        # 2f4dc <__func__.10421+0x1154>
   15bb0:	mov    BYTE PTR [rax],0x0
   15bb3:	mov    ecx,0xf
   15bb8:	mov    rsi,r12
   15bbb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15bbd:	seta   dl
   15bc0:	sbb    dl,0x0
   15bc3:	test   dl,dl
   15bc5:	je     15cd0 <parse_config_data+0x1be0>
   15bcb:	lea    rdi,[rip+0x1bb66]        # 31738 <__PRETTY_FUNCTION__.10016+0x6a8>
   15bd2:	mov    ecx,0x5
   15bd7:	mov    rsi,r12
   15bda:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15bdc:	seta   dl
   15bdf:	sbb    dl,0x0
   15be2:	test   dl,dl
   15be4:	je     15ce8 <parse_config_data+0x1bf8>
   15bea:	lea    rdi,[rip+0x198fa]        # 2f4eb <__func__.10421+0x1163>
   15bf1:	mov    ecx,0x4
   15bf6:	mov    rsi,r12
   15bf9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15bfb:	seta   dl
   15bfe:	sbb    dl,0x0
   15c01:	test   dl,dl
   15c03:	je     15d00 <parse_config_data+0x1c10>
   15c09:	lea    rdi,[rip+0x13cd5]        # 298e5 <_IO_stdin_used+0x1a5>
   15c10:	mov    ecx,0x8
   15c15:	mov    rsi,r12
   15c18:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15c1a:	seta   dl
   15c1d:	sbb    dl,0x0
   15c20:	test   dl,dl
   15c22:	jne    18e49 <parse_config_data+0x4d59>
   15c28:	lea    rdi,[rax+0x1]
   15c2c:	call   c360 <strdup@plt>
   15c31:	mov    r15,rax
   15c34:	lea    rsi,[rip+0x184b0]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   15c3b:	xor    edi,edi
   15c3d:	call   bfe0 <strtok@plt>
   15c42:	test   rax,rax
   15c45:	mov    r12,rax
   15c48:	jne    15b88 <parse_config_data+0x1a98>
   15c4e:	cmp    QWORD PTR [rsp+0x10],0x0
   15c54:	sete   dl
   15c57:	test   r13,r13
   15c5a:	sete   al
   15c5d:	or     dl,al
   15c5f:	jne    18f2e <parse_config_data+0x4e3e>
   15c65:	cmp    QWORD PTR [rsp+0x18],0x0
   15c6b:	je     18f2e <parse_config_data+0x4e3e>
   15c71:	mov    rdi,rbp
   15c74:	call   ac40 <free@plt>
   15c79:	mov    rsi,QWORD PTR [rsp+0x18]
   15c7e:	lea    rdi,[rbx+0x10]
   15c82:	call   11e50 <replace_string>
   15c87:	lea    rdi,[rbx+0x20]
   15c8b:	mov    rsi,r13
   15c8e:	call   11e50 <replace_string>
   15c93:	mov    rsi,QWORD PTR [rsp+0x10]
   15c98:	lea    rdi,[rbx+0x18]
   15c9c:	call   11e50 <replace_string>
   15ca1:	test   r15,r15
   15ca4:	je     15cb2 <parse_config_data+0x1bc2>
   15ca6:	lea    rdi,[rbx+0x8]
   15caa:	mov    rsi,r15
   15cad:	call   11e50 <replace_string>
   15cb2:	mov    esi,DWORD PTR [r14+0x430]
   15cb9:	jmp    15ae0 <parse_config_data+0x19f0>
   15cbe:	xchg   ax,ax
   15cc0:	add    r12,0x1
   15cc4:	jmp    15b88 <parse_config_data+0x1a98>
   15cc9:	nop    DWORD PTR [rax+0x0]
   15cd0:	lea    rdi,[rax+0x1]
   15cd4:	call   c360 <strdup@plt>
   15cd9:	mov    r13,rax
   15cdc:	jmp    15c34 <parse_config_data+0x1b44>
   15ce1:	nop    DWORD PTR [rax+0x0]
   15ce8:	lea    rdi,[rax+0x1]
   15cec:	call   c360 <strdup@plt>
   15cf1:	mov    QWORD PTR [rsp+0x10],rax
   15cf6:	jmp    15c34 <parse_config_data+0x1b44>
   15cfb:	nop    DWORD PTR [rax+rax*1+0x0]
   15d00:	lea    rdi,[rax+0x1]
   15d04:	call   c360 <strdup@plt>
   15d09:	mov    QWORD PTR [rsp+0x18],rax
   15d0e:	jmp    15c34 <parse_config_data+0x1b44>
   15d13:	mov    rdi,QWORD PTR [rsp+0xb8]
   15d1b:	lea    rsi,[rip+0x197b5]        # 2f4d7 <__func__.10421+0x114f>
   15d22:	lea    rdx,[rsp+0xf0]
   15d2a:	xor    r8d,r8d
   15d2d:	xor    ecx,ecx
   15d2f:	call   bb20 <xlu_cfg_get_list@plt>
   15d34:	test   eax,eax
   15d36:	mov    esi,eax
   15d38:	jne    15ed5 <parse_config_data+0x1de5>
   15d3e:	lea    rbp,[rip+0x13ba0]        # 298e5 <_IO_stdin_used+0x1a5>
   15d45:	mov    DWORD PTR [r14+0x420],0x0
   15d50:	mov    QWORD PTR [r14+0x428],0x0
   15d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   15d60:	mov    rdi,QWORD PTR [rsp+0xf0]
   15d68:	call   ad60 <xlu_cfg_get_listitem@plt>
   15d6d:	test   rax,rax
   15d70:	mov    QWORD PTR [rsp+0xa8],rax
   15d78:	je     15ed5 <parse_config_data+0x1de5>
   15d7e:	mov    rdi,rax
   15d81:	call   c360 <strdup@plt>
   15d86:	mov    r12d,DWORD PTR [r14+0x420]
   15d8d:	mov    r15,rax
   15d90:	mov    QWORD PTR [rsp+0x10],rax
   15d95:	mov    rdi,QWORD PTR [r14+0x428]
   15d9c:	lea    eax,[r12+0x1]
   15da1:	mov    DWORD PTR [r14+0x420],eax
   15da8:	cdqe   
   15daa:	lea    rbx,[rax+rax*4]
   15dae:	shl    rbx,0x3
   15db2:	lea    r13,[rbx-0x28]
   15db6:	mov    rsi,rbx
   15db9:	call   ea30 <xrealloc>
   15dbe:	lea    rdi,[rax+r13*1]
   15dc2:	mov    QWORD PTR [r14+0x428],rax
   15dc9:	call   c2c0 <libxl_device_vtpm_init@plt>
   15dce:	mov    rax,QWORD PTR [r14+0x428]
   15dd5:	lea    rsi,[rip+0x1830f]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   15ddc:	mov    rdi,r15
   15ddf:	mov    DWORD PTR [rax+rbx*1-0x18],r12d
   15de4:	add    r13,QWORD PTR [r14+0x428]
   15deb:	call   bfe0 <strtok@plt>
   15df0:	test   rax,rax
   15df3:	mov    rbx,rax
   15df6:	je     18f04 <parse_config_data+0x4e14>
   15dfc:	lea    r12,[r13+0x14]
   15e00:	xor    r15d,r15d
   15e03:	nop    DWORD PTR [rax+rax*1+0x0]
   15e08:	cmp    BYTE PTR [rbx],0x20
   15e0b:	je     15eb0 <parse_config_data+0x1dc0>
   15e11:	mov    esi,0x3d
   15e16:	mov    rdi,rbx
   15e19:	call   b1c0 <strchr@plt>
   15e1e:	test   rax,rax
   15e21:	je     15e91 <parse_config_data+0x1da1>
   15e23:	mov    BYTE PTR [rax],0x0
   15e26:	mov    ecx,0x8
   15e2b:	mov    rsi,rbx
   15e2e:	mov    rdi,rbp
   15e31:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15e33:	seta   dl
   15e36:	sbb    dl,0x0
   15e39:	test   dl,dl
   15e3b:	je     15ec0 <parse_config_data+0x1dd0>
   15e41:	lea    rdi,[rip+0x192fb]        # 2f143 <__func__.10421+0xdbb>
   15e48:	mov    ecx,0x5
   15e4d:	mov    rsi,rbx
   15e50:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   15e52:	seta   dl
   15e55:	sbb    dl,0x0
   15e58:	test   dl,dl
   15e5a:	jne    188ac <parse_config_data+0x47bc>
   15e60:	lea    rbx,[rax+0x1]
   15e64:	mov    rdi,r12
   15e67:	mov    rsi,rbx
   15e6a:	call   abe0 <libxl_uuid_from_string@plt>
   15e6f:	test   eax,eax
   15e71:	jne    1889d <parse_config_data+0x47ad>
   15e77:	lea    rsi,[rip+0x1826d]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   15e7e:	xor    edi,edi
   15e80:	call   bfe0 <strtok@plt>
   15e85:	test   rax,rax
   15e88:	mov    rbx,rax
   15e8b:	jne    15e08 <parse_config_data+0x1d18>
   15e91:	test   r15b,r15b
   15e94:	je     18f04 <parse_config_data+0x4e14>
   15e9a:	mov    rdi,QWORD PTR [rsp+0x10]
   15e9f:	call   ac40 <free@plt>
   15ea4:	mov    esi,DWORD PTR [r14+0x420]
   15eab:	jmp    15d60 <parse_config_data+0x1c70>
   15eb0:	add    rbx,0x1
   15eb4:	jmp    15e08 <parse_config_data+0x1d18>
   15eb9:	nop    DWORD PTR [rax+0x0]
   15ec0:	lea    rdi,[rax+0x1]
   15ec4:	mov    r15d,0x1
   15eca:	call   c360 <strdup@plt>
   15ecf:	mov    QWORD PTR [r13+0x8],rax
   15ed3:	jmp    15e77 <parse_config_data+0x1d87>
   15ed5:	mov    rdi,QWORD PTR [rsp+0xb8]
   15edd:	lea    rsi,[rip+0x1960b]        # 2f4ef <__func__.10421+0x1167>
   15ee4:	lea    rdx,[rsp+0x100]
   15eec:	xor    r8d,r8d
   15eef:	xor    ecx,ecx
   15ef1:	call   bb20 <xlu_cfg_get_list@plt>
   15ef6:	test   eax,eax
   15ef8:	mov    esi,eax
   15efa:	jne    15ffc <parse_config_data+0x1f0c>
   15f00:	lea    rbp,[rip+0x181e4]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   15f07:	mov    DWORD PTR [r14+0x450],0x0
   15f12:	mov    QWORD PTR [r14+0x458],0x0
   15f1d:	nop    DWORD PTR [rax]
   15f20:	mov    rdi,QWORD PTR [rsp+0x100]
   15f28:	call   ad60 <xlu_cfg_get_listitem@plt>
   15f2d:	test   rax,rax
   15f30:	mov    QWORD PTR [rsp+0xa8],rax
   15f38:	je     15ffc <parse_config_data+0x1f0c>
   15f3e:	mov    rdi,rax
   15f41:	call   c360 <strdup@plt>
   15f46:	mov    r15d,DWORD PTR [r14+0x450]
   15f4d:	mov    r12,rax
   15f50:	mov    rdi,QWORD PTR [r14+0x458]
   15f57:	lea    eax,[r15+0x1]
   15f5b:	mov    DWORD PTR [r14+0x450],eax
   15f62:	cdqe   
   15f64:	lea    r13,[rax+rax*4]
   15f68:	shl    r13,0x3
   15f6c:	lea    rbx,[r13-0x28]
   15f70:	mov    rsi,r13
   15f73:	call   ea30 <xrealloc>
   15f78:	lea    rdi,[rax+rbx*1]
   15f7c:	mov    QWORD PTR [r14+0x458],rax
   15f83:	call   c500 <libxl_device_vdispl_init@plt>
   15f88:	mov    rax,QWORD PTR [r14+0x458]
   15f8f:	mov    rsi,rbp
   15f92:	mov    rdi,r12
   15f95:	mov    DWORD PTR [rax+r13*1-0x18],r15d
   15f9a:	add    rbx,QWORD PTR [r14+0x458]
   15fa1:	call   bfe0 <strtok@plt>
   15fa6:	test   rax,rax
   15fa9:	jne    15fb4 <parse_config_data+0x1ec4>
   15fab:	jmp    15fdb <parse_config_data+0x1eeb>
   15fad:	nop    DWORD PTR [rax]
   15fb0:	add    rax,0x1
   15fb4:	cmp    BYTE PTR [rax],0x20
   15fb7:	je     15fb0 <parse_config_data+0x1ec0>
   15fb9:	mov    rsi,rax
   15fbc:	mov    rdi,rbx
   15fbf:	call   13ee0 <parse_vdispl_config>
   15fc4:	test   eax,eax
   15fc6:	jne    1888b <parse_config_data+0x479b>
   15fcc:	xor    edi,edi
   15fce:	mov    rsi,rbp
   15fd1:	call   bfe0 <strtok@plt>
   15fd6:	test   rax,rax
   15fd9:	jne    15fb4 <parse_config_data+0x1ec4>
   15fdb:	mov    rdi,r12
   15fde:	call   ac40 <free@plt>
   15fe3:	mov    r9d,DWORD PTR [rbx+0x18]
   15fe7:	test   r9d,r9d
   15fea:	je     18eda <parse_config_data+0x4dea>
   15ff0:	mov    esi,DWORD PTR [r14+0x450]
   15ff7:	jmp    15f20 <parse_config_data+0x1e30>
   15ffc:	mov    rdi,QWORD PTR [rsp+0xb8]
   16004:	lea    rsi,[rip+0x194eb]        # 2f4f6 <__func__.10421+0x116e>
   1600b:	lea    rdx,[rsp+0x108]
   16013:	xor    r8d,r8d
   16016:	xor    ecx,ecx
   16018:	call   bb20 <xlu_cfg_get_list@plt>
   1601d:	test   eax,eax
   1601f:	mov    esi,eax
   16021:	jne    16178 <parse_config_data+0x2088>
   16027:	lea    rbp,[rip+0x138b7]        # 298e5 <_IO_stdin_used+0x1a5>
   1602e:	mov    DWORD PTR [r14+0x440],0x0
   16039:	mov    QWORD PTR [r14+0x448],0x0
   16044:	nop    DWORD PTR [rax+0x0]
   16048:	mov    rdi,QWORD PTR [rsp+0x108]
   16050:	call   ad60 <xlu_cfg_get_listitem@plt>
   16055:	test   rax,rax
   16058:	mov    QWORD PTR [rsp+0xa8],rax
   16060:	je     16178 <parse_config_data+0x2088>
   16066:	mov    r12d,DWORD PTR [r14+0x440]
   1606d:	mov    rdi,QWORD PTR [r14+0x448]
   16074:	lea    eax,[r12+0x1]
   16079:	mov    DWORD PTR [r14+0x440],eax
   16080:	cdqe   
   16082:	lea    rbx,[rax+rax*2]
   16086:	shl    rbx,0x3
   1608a:	lea    r13,[rbx-0x18]
   1608e:	mov    rsi,rbx
   16091:	call   ea30 <xrealloc>
   16096:	lea    rdi,[rax+r13*1]
   1609a:	mov    QWORD PTR [r14+0x448],rax
   160a1:	call   c2b0 <libxl_device_pvcallsif_init@plt>
   160a6:	mov    rax,QWORD PTR [r14+0x448]
   160ad:	mov    rdi,QWORD PTR [rsp+0xa8]
   160b5:	mov    DWORD PTR [rax+rbx*1-0x8],r12d
   160ba:	mov    rax,QWORD PTR [r14+0x448]
   160c1:	xor    ebx,ebx
   160c3:	mov    QWORD PTR [rsp+0x10],rax
   160c8:	call   c360 <strdup@plt>
   160cd:	lea    rsi,[rip+0x18017]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   160d4:	mov    rdi,rax
   160d7:	mov    r12,rax
   160da:	call   bfe0 <strtok@plt>
   160df:	test   rax,rax
   160e2:	mov    r15,rax
   160e5:	je     1616e <parse_config_data+0x207e>
   160eb:	nop    DWORD PTR [rax+rax*1+0x0]
   160f0:	cmp    BYTE PTR [r15],0x20
   160f4:	je     16168 <parse_config_data+0x2078>
   160f6:	mov    esi,0x3d
   160fb:	mov    rdi,r15
   160fe:	call   b1c0 <strchr@plt>
   16103:	test   rax,rax
   16106:	je     16148 <parse_config_data+0x2058>
   16108:	mov    BYTE PTR [rax],0x0
   1610b:	mov    ecx,0x8
   16110:	mov    rsi,r15
   16113:	mov    rdi,rbp
   16116:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16118:	seta   dl
   1611b:	sbb    dl,0x0
   1611e:	test   dl,dl
   16120:	jne    18ecb <parse_config_data+0x4ddb>
   16126:	lea    rdi,[rax+0x1]
   1612a:	call   c360 <strdup@plt>
   1612f:	lea    rsi,[rip+0x17fb5]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16136:	xor    edi,edi
   16138:	mov    rbx,rax
   1613b:	call   bfe0 <strtok@plt>
   16140:	test   rax,rax
   16143:	mov    r15,rax
   16146:	jne    160f0 <parse_config_data+0x2000>
   16148:	mov    rdi,r12
   1614b:	call   ac40 <free@plt>
   16150:	test   rbx,rbx
   16153:	jne    17918 <parse_config_data+0x3828>
   16159:	mov    esi,DWORD PTR [r14+0x440]
   16160:	jmp    16048 <parse_config_data+0x1f58>
   16165:	nop    DWORD PTR [rax]
   16168:	add    r15,0x1
   1616c:	jmp    160f0 <parse_config_data+0x2000>
   1616e:	mov    rdi,r12
   16171:	call   ac40 <free@plt>
   16176:	jmp    16159 <parse_config_data+0x2069>
   16178:	mov    r12,QWORD PTR [rsp+0xb8]
   16180:	mov    rdx,QWORD PTR [rsp+0x38]
   16185:	lea    rsi,[rip+0x19372]        # 2f4fe <__func__.10421+0x1176>
   1618c:	xor    r8d,r8d
   1618f:	xor    ecx,ecx
   16191:	mov    rdi,r12
   16194:	call   bb20 <xlu_cfg_get_list@plt>
   16199:	test   eax,eax
   1619b:	mov    esi,eax
   1619d:	jne    162a8 <parse_config_data+0x21b8>
   161a3:	mov    DWORD PTR [r14+0x460],0x0
   161ae:	mov    QWORD PTR [r14+0x468],0x0
   161b9:	mov    rdi,QWORD PTR [rsp+0x158]
   161c1:	call   af40 <xlu_cfg_get_listitem2@plt>
   161c6:	test   rax,rax
   161c9:	je     162a8 <parse_config_data+0x21b8>
   161cf:	mov    rdx,QWORD PTR [rsp+0x8]
   161d4:	xor    ecx,ecx
   161d6:	mov    rsi,rax
   161d9:	mov    rdi,r12
   161dc:	call   b950 <xlu_cfg_value_get_list@plt>
   161e1:	test   eax,eax
   161e3:	mov    r13d,eax
   161e6:	je     16219 <parse_config_data+0x2129>
   161e8:	mov    edi,eax
   161ea:	call   c3b0 <strerror@plt>
   161ef:	lea    rdx,[rip+0x1a7da]        # 309d0 <__func__.10421+0x2648>
   161f6:	mov    rcx,rax
   161f9:	mov    rax,QWORD PTR [rip+0x224df0]        # 23aff0 <stderr@GLIBC_2.2.5>
   16200:	mov    esi,0x1
   16205:	mov    rdi,QWORD PTR [rax]
   16208:	xor    eax,eax
   1620a:	call   c1e0 <__fprintf_chk@plt>
   1620f:	mov    edi,0x1
   16214:	call   c1a0 <exit@plt>
   16219:	mov    r15d,DWORD PTR [r14+0x460]
   16220:	mov    rdi,QWORD PTR [r14+0x468]
   16227:	lea    eax,[r15+0x1]
   1622b:	mov    DWORD PTR [r14+0x460],eax
   16232:	cdqe   
   16234:	lea    rdx,[rax+rax*2]
   16238:	lea    rbx,[rax+rdx*4]
   1623c:	shl    rbx,0x3
   16240:	lea    rbp,[rbx-0x68]
   16244:	mov    rsi,rbx
   16247:	call   ea30 <xrealloc>
   1624c:	lea    rdi,[rax+rbp*1]
   16250:	mov    QWORD PTR [r14+0x468],rax
   16257:	call   b780 <libxl_device_vsnd_init@plt>
   1625c:	mov    rax,QWORD PTR [r14+0x468]
   16263:	mov    DWORD PTR [rax+rbx*1-0x58],r15d
   16268:	add    rbp,QWORD PTR [r14+0x468]
   1626f:	jmp    16283 <parse_config_data+0x2193>
   16271:	mov    rsi,rax
   16274:	mov    rdi,rbp
   16277:	mov    r13d,ebx
   1627a:	call   13910 <parse_vsnd_item>
   1627f:	test   eax,eax
   16281:	jne    1620f <parse_config_data+0x211f>
   16283:	mov    rdi,QWORD PTR [rsp+0x160]
   1628b:	mov    esi,r13d
   1628e:	lea    ebx,[r13+0x1]
   16292:	call   ad60 <xlu_cfg_get_listitem@plt>
   16297:	test   rax,rax
   1629a:	jne    16271 <parse_config_data+0x2181>
   1629c:	mov    esi,DWORD PTR [r14+0x460]
   162a3:	jmp    161b9 <parse_config_data+0x20c9>
   162a8:	mov    rdi,QWORD PTR [rsp+0xb8]
   162b0:	lea    rsi,[rip+0x1924c]        # 2f503 <__func__.10421+0x117b>
   162b7:	lea    rdx,[rsp+0x110]
   162bf:	xor    r8d,r8d
   162c2:	xor    ecx,ecx
   162c4:	call   bb20 <xlu_cfg_get_list@plt>
   162c9:	test   eax,eax
   162cb:	mov    esi,eax
   162cd:	jne    16646 <parse_config_data+0x2556>
   162d3:	mov    DWORD PTR [r14+0x470],0x0
   162de:	mov    QWORD PTR [r14+0x478],0x0
   162e9:	lea    r15,[rip+0x135f5]        # 298e5 <_IO_stdin_used+0x1a5>
   162f0:	mov    QWORD PTR [rsp+0x10],r14
   162f5:	mov    rbp,QWORD PTR [rsp+0x38]
   162fa:	mov    r14,QWORD PTR [rsp+0x20]
   162ff:	nop
   16300:	mov    rdi,QWORD PTR [rsp+0x110]
   16308:	call   ad60 <xlu_cfg_get_listitem@plt>
   1630d:	test   rax,rax
   16310:	mov    QWORD PTR [rsp+0xa8],rax
   16318:	je     16641 <parse_config_data+0x2551>
   1631e:	mov    r13,QWORD PTR [rsp+0x10]
   16323:	mov    QWORD PTR [rsp+0x148],0x0
   1632f:	mov    r12d,DWORD PTR [r13+0x470]
   16336:	mov    rdi,QWORD PTR [r13+0x478]
   1633d:	lea    eax,[r12+0x1]
   16342:	mov    DWORD PTR [r13+0x470],eax
   16349:	cdqe   
   1634b:	lea    rbx,[rax+rax*2]
   1634f:	shl    rbx,0x4
   16353:	mov    rsi,rbx
   16356:	call   ea30 <xrealloc>
   1635b:	mov    QWORD PTR [rsp+0x10],r13
   16360:	mov    QWORD PTR [r13+0x478],rax
   16367:	lea    r13,[rbx-0x30]
   1636b:	lea    rdi,[rax+r13*1]
   1636f:	call   bc40 <libxl_device_channel_init@plt>
   16374:	mov    rcx,QWORD PTR [rsp+0x10]
   16379:	mov    rdi,QWORD PTR [rsp+0xa8]
   16381:	lea    rsi,[rip+0x17d63]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16388:	mov    rax,QWORD PTR [rcx+0x478]
   1638f:	mov    DWORD PTR [rax+rbx*1-0x20],r12d
   16394:	lea    rax,[rsp+0x140]
   1639c:	add    r13,QWORD PTR [rcx+0x478]
   163a3:	mov    rbx,rax
   163a6:	mov    rdx,rax
   163a9:	mov    QWORD PTR [rsp+0x18],rax
   163ae:	call   134e0 <split_string_into_string_list>
   163b3:	mov    rdi,rbx
   163b6:	call   b370 <libxl_string_list_length@plt>
   163bb:	test   eax,eax
   163bd:	jle    165e8 <parse_config_data+0x24f8>
   163c3:	sub    eax,0x1
   163c6:	xor    ebx,ebx
   163c8:	lea    r12,[rax*8+0x8]
   163d0:	jmp    164a4 <parse_config_data+0x23b4>
   163d5:	nop    DWORD PTR [rax]
   163d8:	lea    rdi,[rip+0x18d04]        # 2f0e3 <__func__.10421+0xd5b>
   163df:	mov    ecx,0x5
   163e4:	mov    rsi,rax
   163e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   163e9:	seta   dl
   163ec:	sbb    dl,0x0
   163ef:	test   dl,dl
   163f1:	je     16540 <parse_config_data+0x2450>
   163f7:	lea    rdi,[rip+0x1b33a]        # 31738 <__PRETTY_FUNCTION__.10016+0x6a8>
   163fe:	mov    ecx,0x5
   16403:	mov    rsi,rax
   16406:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16408:	seta   dl
   1640b:	sbb    dl,0x0
   1640e:	test   dl,dl
   16410:	je     16560 <parse_config_data+0x2470>
   16416:	lea    rdi,[rip+0x190ee]        # 2f50b <__func__.10421+0x1183>
   1641d:	mov    ecx,0xb
   16422:	mov    rsi,rax
   16425:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16427:	seta   dl
   1642a:	sbb    dl,0x0
   1642d:	test   dl,dl
   1642f:	jne    165b8 <parse_config_data+0x24c8>
   16435:	mov    r8,QWORD PTR [rsp+0x160]
   1643d:	lea    rdi,[rip+0x190d2]        # 2f516 <__func__.10421+0x118e>
   16444:	mov    ecx,0x4
   16449:	mov    rsi,r8
   1644c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1644e:	seta   dl
   16451:	sbb    dl,0x0
   16454:	test   dl,dl
   16456:	jne    16588 <parse_config_data+0x2498>
   1645c:	mov    DWORD PTR [r13+0x20],0x1
   16464:	nop    DWORD PTR [rax+0x0]
   16468:	mov    rdi,rax
   1646b:	add    rbx,0x8
   1646f:	call   ac40 <free@plt>
   16474:	mov    rdi,QWORD PTR [rsp+0x158]
   1647c:	call   ac40 <free@plt>
   16481:	mov    rdi,QWORD PTR [rsp+0x160]
   16489:	call   ac40 <free@plt>
   1648e:	mov    rdi,QWORD PTR [rsp+0x168]
   16496:	call   ac40 <free@plt>
   1649b:	cmp    rbx,r12
   1649e:	je     165e8 <parse_config_data+0x24f8>
   164a4:	mov    rax,QWORD PTR [rsp+0x140]
   164ac:	lea    rsi,[rip+0x185b5]        # 2ea68 <__func__.10421+0x6e0>
   164b3:	mov    rcx,r14
   164b6:	mov    rdx,rbp
   164b9:	mov    rdi,QWORD PTR [rax+rbx*1]
   164bd:	call   13e20 <split_string_into_pair>
   164c2:	test   eax,eax
   164c4:	jne    18873 <parse_config_data+0x4783>
   164ca:	mov    rsi,QWORD PTR [rsp+0x158]
   164d2:	mov    rdi,QWORD PTR [rip+0x224ad7]        # 23afb0 <isspace@GLIBC_2.2.5>
   164d9:	lea    rdx,[rsp+0x150]
   164e1:	call   13d80 <trim>
   164e6:	mov    rdx,QWORD PTR [rsp+0x8]
   164eb:	mov    rsi,QWORD PTR [rsp+0x168]
   164f3:	mov    rdi,QWORD PTR [rip+0x224ab6]        # 23afb0 <isspace@GLIBC_2.2.5>
   164fa:	call   13d80 <trim>
   164ff:	mov    rax,QWORD PTR [rsp+0x150]
   16507:	mov    ecx,0x8
   1650c:	mov    rdi,r15
   1650f:	mov    rsi,rax
   16512:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16514:	seta   dl
   16517:	sbb    dl,0x0
   1651a:	test   dl,dl
   1651c:	jne    163d8 <parse_config_data+0x22e8>
   16522:	mov    rsi,QWORD PTR [rsp+0x160]
   1652a:	lea    rdi,[r13+0x8]
   1652e:	call   11e50 <replace_string>
   16533:	mov    rax,QWORD PTR [rsp+0x150]
   1653b:	jmp    16468 <parse_config_data+0x2378>
   16540:	mov    rsi,QWORD PTR [rsp+0x160]
   16548:	lea    rdi,[r13+0x18]
   1654c:	call   11e50 <replace_string>
   16551:	mov    rax,QWORD PTR [rsp+0x150]
   16559:	jmp    16468 <parse_config_data+0x2378>
   1655e:	xchg   ax,ax
   16560:	mov    rsi,QWORD PTR [rsp+0x160]
   16568:	lea    rdi,[rsp+0x148]
   16570:	call   11e50 <replace_string>
   16575:	mov    rax,QWORD PTR [rsp+0x150]
   1657d:	jmp    16468 <parse_config_data+0x2378>
   16582:	nop    WORD PTR [rax+rax*1+0x0]
   16588:	lea    rdi,[rip+0x180dd]        # 2e66c <__func__.10421+0x2e4>
   1658f:	mov    ecx,0x7
   16594:	mov    rsi,r8
   16597:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16599:	seta   dl
   1659c:	sbb    dl,0x0
   1659f:	test   dl,dl
   165a1:	jne    190bc <parse_config_data+0x4fcc>
   165a7:	mov    DWORD PTR [r13+0x20],0x2
   165af:	jmp    16468 <parse_config_data+0x2378>
   165b4:	nop    DWORD PTR [rax+0x0]
   165b8:	mov    rcx,rax
   165bb:	mov    rax,QWORD PTR [rip+0x224a2e]        # 23aff0 <stderr@GLIBC_2.2.5>
   165c2:	lea    rdx,[rip+0x1a487]        # 30a50 <__func__.10421+0x26c8>
   165c9:	mov    esi,0x1
   165ce:	mov    rdi,QWORD PTR [rax]
   165d1:	xor    eax,eax
   165d3:	call   c1e0 <__fprintf_chk@plt>
   165d8:	mov    rax,QWORD PTR [rsp+0x150]
   165e0:	jmp    16468 <parse_config_data+0x2378>
   165e5:	nop    DWORD PTR [rax]
   165e8:	mov    ecx,DWORD PTR [r13+0x20]
   165ec:	cmp    ecx,0x1
   165ef:	je     1661a <parse_config_data+0x252a>
   165f1:	jb     19092 <parse_config_data+0x4fa2>
   165f7:	cmp    ecx,0x2
   165fa:	jne    19086 <parse_config_data+0x4f96>
   16600:	mov    rdi,QWORD PTR [rsp+0x148]
   16608:	test   rdi,rdi
   1660b:	je     1905c <parse_config_data+0x4f6c>
   16611:	call   ea80 <xstrdup>
   16616:	mov    QWORD PTR [r13+0x28],rax
   1661a:	mov    rdi,QWORD PTR [rsp+0x18]
   1661f:	call   b9a0 <libxl_string_list_dispose@plt>
   16624:	mov    rdi,QWORD PTR [rsp+0x148]
   1662c:	call   ac40 <free@plt>
   16631:	mov    rax,QWORD PTR [rsp+0x10]
   16636:	mov    esi,DWORD PTR [rax+0x470]
   1663c:	jmp    16300 <parse_config_data+0x2210>
   16641:	mov    r14,QWORD PTR [rsp+0x10]
   16646:	mov    rdi,QWORD PTR [rsp+0xb8]
   1664e:	lea    rsi,[rip+0x183eb]        # 2ea40 <__func__.10421+0x6b8>
   16655:	lea    rdx,[rsp+0xd0]
   1665d:	xor    r8d,r8d
   16660:	xor    ecx,ecx
   16662:	call   bb20 <xlu_cfg_get_list@plt>
   16667:	test   eax,eax
   16669:	mov    esi,eax
   1666b:	jne    1677c <parse_config_data+0x268c>
   16671:	lea    r12,[rsp+0xb8]
   16679:	mov    DWORD PTR [r14+0x3c0],0x0
   16684:	mov    QWORD PTR [r14+0x3c8],0x0
   1668f:	mov    rdi,QWORD PTR [rsp+0xd0]
   16697:	call   ad60 <xlu_cfg_get_listitem@plt>
   1669c:	test   rax,rax
   1669f:	mov    QWORD PTR [rsp+0xa8],rax
   166a7:	je     1677c <parse_config_data+0x268c>
   166ad:	mov    rdi,rax
   166b0:	call   c360 <strdup@plt>
   166b5:	mov    r15d,DWORD PTR [r14+0x3c0]
   166bc:	mov    rbp,rax
   166bf:	mov    rdi,QWORD PTR [r14+0x3c8]
   166c6:	lea    eax,[r15+0x1]
   166ca:	mov    DWORD PTR [r14+0x3c0],eax
   166d1:	cdqe   
   166d3:	mov    r13,rax
   166d6:	shl    r13,0x5
   166da:	sub    r13,rax
   166dd:	shl    r13,0x4
   166e1:	lea    rbx,[r13-0x1f0]
   166e8:	mov    rsi,r13
   166eb:	call   ea30 <xrealloc>
   166f0:	lea    rdi,[rax+rbx*1]
   166f4:	mov    QWORD PTR [r14+0x3c8],rax
   166fb:	call   ade0 <libxl_device_nic_init@plt>
   16700:	mov    rax,QWORD PTR [r14+0x3c8]
   16707:	mov    DWORD PTR [rax+r13*1-0x1e0],r15d
   1670f:	add    rbx,QWORD PTR [r14+0x3c8]
   16716:	lea    r13,[rip+0x179ce]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   1671d:	mov    rdi,rbx
   16720:	call   1bc70 <set_default_nic_values>
   16725:	lea    rsi,[rip+0x179bf]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   1672c:	mov    rdi,rbp
   1672f:	call   bfe0 <strtok@plt>
   16734:	test   rax,rax
   16737:	je     16762 <parse_config_data+0x2672>
   16739:	nop    DWORD PTR [rax+0x0]
   16740:	cmp    BYTE PTR [rax],0x20
   16743:	je     16776 <parse_config_data+0x2686>
   16745:	mov    rdx,rax
   16748:	mov    rsi,r12
   1674b:	mov    rdi,rbx
   1674e:	call   11eb0 <parse_nic_config>
   16753:	xor    edi,edi
   16755:	mov    rsi,r13
   16758:	call   bfe0 <strtok@plt>
   1675d:	test   rax,rax
   16760:	jne    16740 <parse_config_data+0x2650>
   16762:	mov    rdi,rbp
   16765:	call   ac40 <free@plt>
   1676a:	mov    esi,DWORD PTR [r14+0x3c0]
   16771:	jmp    1668f <parse_config_data+0x259f>
   16776:	add    rax,0x1
   1677a:	jmp    16740 <parse_config_data+0x2650>
   1677c:	mov    rdi,QWORD PTR [rsp+0xb8]
   16784:	lea    rsi,[rip+0x18d8f]        # 2f51a <__func__.10421+0x1192>
   1678b:	xor    r8d,r8d
   1678e:	xor    ecx,ecx
   16790:	xor    edx,edx
   16792:	call   bb20 <xlu_cfg_get_list@plt>
   16797:	test   eax,eax
   16799:	jne    167bb <parse_config_data+0x26cb>
   1679b:	mov    rax,QWORD PTR [rip+0x22484e]        # 23aff0 <stderr@GLIBC_2.2.5>
   167a2:	lea    rdi,[rip+0x1a34f]        # 30af8 <__func__.10421+0x2770>
   167a9:	mov    edx,0x41
   167ae:	mov    esi,0x1
   167b3:	mov    rcx,QWORD PTR [rax]
   167b6:	call   c1b0 <fwrite@plt>
   167bb:	mov    rdi,QWORD PTR [rsp+0xb8]
   167c3:	lea    rdx,[rsp+0xe0]
   167cb:	lea    rsi,[rip+0x18d4d]        # 2f51f <__func__.10421+0x1197>
   167d2:	xor    r8d,r8d
   167d5:	xor    ecx,ecx
   167d7:	mov    DWORD PTR [r14+0x400],0x0
   167e2:	mov    DWORD PTR [r14+0x410],0x0
   167ed:	mov    QWORD PTR [r14+0x408],0x0
   167f8:	lea    r13,[rip+0x1817d]        # 2e97c <__func__.10421+0x5f4>
   167ff:	mov    QWORD PTR [r14+0x418],0x0
   1680a:	call   bb20 <xlu_cfg_get_list@plt>
   1680f:	test   eax,eax
   16811:	je     16c1f <parse_config_data+0x2b2f>
   16817:	mov    rdx,QWORD PTR [rsp+0x30]
   1681c:	mov    rdi,QWORD PTR [rsp+0xb8]
   16824:	lea    rsi,[rip+0x18cf8]        # 2f523 <__func__.10421+0x119b>
   1682b:	xor    ecx,ecx
   1682d:	xor    r12d,r12d
   16830:	call   b2c0 <xlu_cfg_get_long@plt>
   16835:	test   eax,eax
   16837:	jne    16841 <parse_config_data+0x2751>
   16839:	mov    r12d,DWORD PTR [rsp+0xb0]
   16841:	mov    rdx,QWORD PTR [rsp+0x30]
   16846:	mov    rdi,QWORD PTR [rsp+0xb8]
   1684e:	lea    rsi,[rip+0x18ce6]        # 2f53b <__func__.10421+0x11b3>
   16855:	xor    ecx,ecx
   16857:	xor    ebp,ebp
   16859:	call   b2c0 <xlu_cfg_get_long@plt>
   1685e:	test   eax,eax
   16860:	jne    16869 <parse_config_data+0x2779>
   16862:	mov    ebp,DWORD PTR [rsp+0xb0]
   16869:	mov    rdx,QWORD PTR [rsp+0x30]
   1686e:	mov    rdi,QWORD PTR [rsp+0xb8]
   16876:	lea    rsi,[rip+0x18ccd]        # 2f54a <__func__.10421+0x11c2>
   1687d:	xor    ecx,ecx
   1687f:	xor    r13d,r13d
   16882:	call   b2c0 <xlu_cfg_get_long@plt>
   16887:	test   eax,eax
   16889:	jne    16893 <parse_config_data+0x27a3>
   1688b:	mov    r13d,DWORD PTR [rsp+0xb0]
   16893:	mov    rdx,QWORD PTR [rsp+0x30]
   16898:	mov    rdi,QWORD PTR [rsp+0xb8]
   168a0:	lea    rsi,[rip+0x18cb2]        # 2f559 <__func__.10421+0x11d1>
   168a7:	xor    ecx,ecx
   168a9:	call   b2c0 <xlu_cfg_get_long@plt>
   168ae:	test   eax,eax
   168b0:	jne    168bd <parse_config_data+0x27cd>
   168b2:	mov    eax,DWORD PTR [rsp+0xb0]
   168b9:	mov    DWORD PTR [rsp+0x4c],eax
   168bd:	cmp    DWORD PTR [r14],0x2
   168c1:	mov    rdi,QWORD PTR [rsp+0xb8]
   168c9:	je     1822b <parse_config_data+0x413b>
   168cf:	mov    rdx,QWORD PTR [rsp+0x28]
   168d4:	lea    rsi,[rip+0x18c92]        # 2f56d <__func__.10421+0x11e5>
   168db:	xor    ecx,ecx
   168dd:	call   c380 <xlu_cfg_get_string@plt>
   168e2:	test   eax,eax
   168e4:	je     17fe0 <parse_config_data+0x3ef0>
   168ea:	mov    rdi,QWORD PTR [rsp+0xb8]
   168f2:	lea    rdx,[rsp+0xd8]
   168fa:	lea    rsi,[rip+0x18eb3]        # 2f7b4 <__func__.10421+0x142c>
   16901:	xor    r8d,r8d
   16904:	xor    ecx,ecx
   16906:	call   bb20 <xlu_cfg_get_list@plt>
   1690b:	test   eax,eax
   1690d:	mov    ebx,eax
   1690f:	jne    16a04 <parse_config_data+0x2914>
   16915:	mov    DWORD PTR [r14+0x3d0],0x0
   16920:	mov    QWORD PTR [r14+0x3d8],0x0
   1692b:	jmp    169c2 <parse_config_data+0x28d2>
   16930:	mov    eax,DWORD PTR [r14+0x3d0]
   16937:	mov    rdi,QWORD PTR [r14+0x3d8]
   1693e:	add    eax,0x1
   16941:	mov    DWORD PTR [r14+0x3d0],eax
   16948:	cdqe   
   1694a:	lea    r15,[rax+rax*2]
   1694e:	shl    r15,0x3
   16952:	mov    rsi,r15
   16955:	sub    r15,0x18
   16959:	call   ea30 <xrealloc>
   1695e:	lea    rdi,[rax+r15*1]
   16962:	mov    QWORD PTR [r14+0x3d8],rax
   16969:	call   b260 <libxl_device_pci_init@plt>
   1696e:	mov    rsi,QWORD PTR [r14+0x3d8]
   16975:	mov    r8d,DWORD PTR [rsp+0x4c]
   1697a:	mov    rdx,QWORD PTR [rsp+0xa8]
   16982:	mov    rdi,QWORD PTR [rsp+0xb8]
   1698a:	add    rsi,r15
   1698d:	test   r12d,r12d
   16990:	setne  BYTE PTR [rsi+0x10]
   16994:	test   ebp,ebp
   16996:	setne  BYTE PTR [rsi+0x11]
   1699a:	test   r13d,r13d
   1699d:	setne  BYTE PTR [rsi+0x12]
   169a1:	test   r8d,r8d
   169a4:	setne  BYTE PTR [rsi+0x13]
   169a8:	mov    eax,DWORD PTR [r14+0x38c]
   169af:	mov    DWORD PTR [rsi+0x14],eax
   169b2:	call   b450 <xlu_pci_parse_bdf@plt>
   169b7:	test   eax,eax
   169b9:	jne    18fd8 <parse_config_data+0x4ee8>
   169bf:	add    ebx,0x1
   169c2:	mov    rdi,QWORD PTR [rsp+0xd8]
   169ca:	mov    esi,ebx
   169cc:	call   ad60 <xlu_cfg_get_listitem@plt>
   169d1:	test   rax,rax
   169d4:	mov    QWORD PTR [rsp+0xa8],rax
   169dc:	jne    16930 <parse_config_data+0x2840>
   169e2:	mov    edi,DWORD PTR [r14+0x3d0]
   169e9:	test   edi,edi
   169eb:	je     16a04 <parse_config_data+0x2914>
   169ed:	cmp    DWORD PTR [r14],0x2
   169f1:	jne    16a04 <parse_config_data+0x2914>
   169f3:	lea    rdi,[r14+0x238]
   169fa:	mov    esi,0x1
   169ff:	call   b140 <libxl_defbool_set@plt>
   16a04:	mov    rdi,QWORD PTR [rsp+0xb8]
   16a0c:	lea    rdx,[rsp+0x150]
   16a14:	lea    rsi,[rip+0x18b56]        # 2f571 <__func__.10421+0x11e9>
   16a1b:	xor    r8d,r8d
   16a1e:	xor    ecx,ecx
   16a20:	call   bb20 <xlu_cfg_get_list@plt>
   16a25:	test   eax,eax
   16a27:	mov    ebx,eax
   16a29:	jne    16ace <parse_config_data+0x29de>
   16a2f:	mov    DWORD PTR [r14+0x3f0],0x0
   16a3a:	mov    QWORD PTR [r14+0x3f8],0x0
   16a45:	jmp    16ab2 <parse_config_data+0x29c2>
   16a47:	nop    WORD PTR [rax+rax*1+0x0]
   16a50:	mov    eax,DWORD PTR [r14+0x3f0]
   16a57:	mov    rdi,QWORD PTR [r14+0x3f8]
   16a5e:	add    eax,0x1
   16a61:	mov    DWORD PTR [r14+0x3f0],eax
   16a68:	cdqe   
   16a6a:	lea    rbp,[rax*8+0x0]
   16a72:	mov    rsi,rbp
   16a75:	sub    rbp,0x8
   16a79:	call   ea30 <xrealloc>
   16a7e:	lea    rdi,[rax+rbp*1]
   16a82:	mov    QWORD PTR [r14+0x3f8],rax
   16a89:	call   ae10 <libxl_device_dtdev_init@plt>
   16a8e:	add    rbp,QWORD PTR [r14+0x3f8]
   16a95:	mov    rdi,QWORD PTR [rsp+0xa8]
   16a9d:	call   c360 <strdup@plt>
   16aa2:	test   rax,rax
   16aa5:	mov    QWORD PTR [rbp+0x0],rax
   16aa9:	je     19034 <parse_config_data+0x4f44>
   16aaf:	add    ebx,0x1
   16ab2:	mov    rdi,QWORD PTR [rsp+0x150]
   16aba:	mov    esi,ebx
   16abc:	call   ad60 <xlu_cfg_get_listitem@plt>
   16ac1:	test   rax,rax
   16ac4:	mov    QWORD PTR [rsp+0xa8],rax
   16acc:	jne    16a50 <parse_config_data+0x2960>
   16ace:	mov    rdi,QWORD PTR [rsp+0xb8]
   16ad6:	lea    rsi,[rip+0x18a9a]        # 2f577 <__func__.10421+0x11ef>
   16add:	lea    rdx,[rsp+0x140]
   16ae5:	xor    r8d,r8d
   16ae8:	xor    ecx,ecx
   16aea:	call   bb20 <xlu_cfg_get_list@plt>
   16aef:	test   eax,eax
   16af1:	mov    esi,eax
   16af3:	jne    16ef6 <parse_config_data+0x2e06>
   16af9:	lea    rbx,[rip+0x175eb]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16b00:	mov    DWORD PTR [r14+0x480],0x0
   16b0b:	mov    QWORD PTR [r14+0x488],0x0
   16b16:	mov    rdi,QWORD PTR [rsp+0x140]
   16b1e:	call   ad60 <xlu_cfg_get_listitem@plt>
   16b23:	test   rax,rax
   16b26:	mov    QWORD PTR [rsp+0xa8],rax
   16b2e:	je     16ef6 <parse_config_data+0x2e06>
   16b34:	mov    rdi,rax
   16b37:	call   c360 <strdup@plt>
   16b3c:	mov    r15d,DWORD PTR [r14+0x480]
   16b43:	mov    r12,rax
   16b46:	mov    rdi,QWORD PTR [r14+0x488]
   16b4d:	lea    eax,[r15+0x1]
   16b51:	movsxd rbp,eax
   16b54:	mov    DWORD PTR [r14+0x480],eax
   16b5b:	shl    rbp,0x5
   16b5f:	lea    r13,[rbp-0x20]
   16b63:	mov    rsi,rbp
   16b66:	call   ea30 <xrealloc>
   16b6b:	lea    rdi,[rax+r13*1]
   16b6f:	mov    QWORD PTR [r14+0x488],rax
   16b76:	call   bc70 <libxl_device_usbctrl_init@plt>
   16b7b:	mov    rax,QWORD PTR [r14+0x488]
   16b82:	mov    rsi,rbx
   16b85:	mov    rdi,r12
   16b88:	mov    DWORD PTR [rax+rbp*1-0x1c],r15d
   16b8d:	mov    rbp,QWORD PTR [r14+0x488]
   16b94:	call   bfe0 <strtok@plt>
   16b99:	add    rbp,r13
   16b9c:	test   rax,rax
   16b9f:	je     16bd3 <parse_config_data+0x2ae3>
   16ba1:	nop    DWORD PTR [rax+0x0]
   16ba8:	cmp    BYTE PTR [rax],0x20
   16bab:	je     16e70 <parse_config_data+0x2d80>
   16bb1:	mov    rsi,rax
   16bb4:	mov    rdi,rbp
   16bb7:	call   12dc0 <parse_usbctrl_config>
   16bbc:	test   eax,eax
   16bbe:	jne    1620f <parse_config_data+0x211f>
   16bc4:	xor    edi,edi
   16bc6:	mov    rsi,rbx
   16bc9:	call   bfe0 <strtok@plt>
   16bce:	test   rax,rax
   16bd1:	jne    16ba8 <parse_config_data+0x2ab8>
   16bd3:	mov    rdi,r12
   16bd6:	call   ac40 <free@plt>
   16bdb:	mov    esi,DWORD PTR [r14+0x480]
   16be2:	jmp    16b16 <parse_config_data+0x2a26>
   16be7:	mov    rdi,QWORD PTR [rbp+0x48]
   16beb:	call   ac40 <free@plt>
   16bf0:	lea    rdi,[r15+0x1]
   16bf4:	call   c360 <strdup@plt>
   16bf9:	mov    QWORD PTR [rbp+0x48],rax
   16bfd:	lea    rsi,[rip+0x174e7]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16c04:	xor    edi,edi
   16c06:	call   bfe0 <strtok@plt>
   16c0b:	test   rax,rax
   16c0e:	mov    rbx,rax
   16c11:	jne    16d18 <parse_config_data+0x2c28>
   16c17:	mov    rdi,r12
   16c1a:	call   ac40 <free@plt>
   16c1f:	mov    esi,DWORD PTR [r14+0x400]
   16c26:	mov    rdi,QWORD PTR [rsp+0xe0]
   16c2e:	call   ad60 <xlu_cfg_get_listitem@plt>
   16c33:	test   rax,rax
   16c36:	mov    QWORD PTR [rsp+0xa8],rax
   16c3e:	je     16817 <parse_config_data+0x2727>
   16c44:	mov    rdi,rax
   16c47:	call   c360 <strdup@plt>
   16c4c:	mov    ebp,DWORD PTR [r14+0x400]
   16c53:	mov    r12,rax
   16c56:	mov    rdi,QWORD PTR [r14+0x408]
   16c5d:	lea    eax,[rbp+0x1]
   16c60:	mov    DWORD PTR [r14+0x400],eax
   16c67:	cdqe   
   16c69:	lea    rdx,[rax+rax*4]
   16c6d:	lea    rbx,[rax+rdx*2]
   16c71:	shl    rbx,0x3
   16c75:	lea    r15,[rbx-0x58]
   16c79:	mov    rsi,rbx
   16c7c:	call   ea30 <xrealloc>
   16c81:	lea    rdi,[rax+r15*1]
   16c85:	mov    QWORD PTR [r14+0x408],rax
   16c8c:	call   bb00 <libxl_device_vfb_init@plt>
   16c91:	mov    rax,QWORD PTR [r14+0x408]
   16c98:	mov    DWORD PTR [rax+rbx*1-0x48],ebp
   16c9c:	mov    ebp,DWORD PTR [r14+0x410]
   16ca3:	mov    rax,QWORD PTR [r14+0x408]
   16caa:	mov    rdi,QWORD PTR [r14+0x418]
   16cb1:	mov    QWORD PTR [rsp+0x8],rax
   16cb6:	lea    eax,[rbp+0x1]
   16cb9:	movsxd rbx,eax
   16cbc:	mov    DWORD PTR [r14+0x410],eax
   16cc3:	shl    rbx,0x6
   16cc7:	mov    rsi,rbx
   16cca:	call   ea30 <xrealloc>
   16ccf:	lea    rdi,[rax+rbx*1-0x40]
   16cd4:	mov    QWORD PTR [r14+0x418],rax
   16cdb:	call   bff0 <libxl_device_vkb_init@plt>
   16ce0:	mov    rax,QWORD PTR [r14+0x418]
   16ce7:	lea    rsi,[rip+0x173fd]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16cee:	mov    rdi,r12
   16cf1:	mov    DWORD PTR [rax+rbx*1-0x30],ebp
   16cf5:	call   bfe0 <strtok@plt>
   16cfa:	test   rax,rax
   16cfd:	mov    rbx,rax
   16d00:	je     16c17 <parse_config_data+0x2b27>
   16d06:	mov    rax,QWORD PTR [rsp+0x8]
   16d0b:	add    rax,r15
   16d0e:	mov    rbp,rax
   16d11:	nop    DWORD PTR [rax+0x0]
   16d18:	cmp    BYTE PTR [rbx],0x20
   16d1b:	je     16e79 <parse_config_data+0x2d89>
   16d21:	mov    esi,0x3d
   16d26:	mov    rdi,rbx
   16d29:	call   b1c0 <strchr@plt>
   16d2e:	test   rax,rax
   16d31:	mov    r15,rax
   16d34:	je     16c17 <parse_config_data+0x2b27>
   16d3a:	mov    BYTE PTR [rax],0x0
   16d3d:	mov    ecx,0x4
   16d42:	mov    rsi,rbx
   16d45:	mov    rdi,r13
   16d48:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16d4a:	seta   al
   16d4d:	sbb    al,0x0
   16d4f:	test   al,al
   16d51:	je     16e82 <parse_config_data+0x2d92>
   16d57:	lea    rdi,[rip+0x17c22]        # 2e980 <__func__.10421+0x5f8>
   16d5e:	mov    ecx,0xa
   16d63:	mov    rsi,rbx
   16d66:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16d68:	seta   al
   16d6b:	sbb    al,0x0
   16d6d:	test   al,al
   16d6f:	je     16ea8 <parse_config_data+0x2db8>
   16d75:	lea    rdi,[rip+0x17c0e]        # 2e98a <__func__.10421+0x602>
   16d7c:	mov    ecx,0xa
   16d81:	mov    rsi,rbx
   16d84:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16d86:	seta   al
   16d89:	sbb    al,0x0
   16d8b:	test   al,al
   16d8d:	je     16ec3 <parse_config_data+0x2dd3>
   16d93:	lea    rdi,[rip+0x17bfa]        # 2e994 <__func__.10421+0x60c>
   16d9a:	mov    ecx,0xb
   16d9f:	mov    rsi,rbx
   16da2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16da4:	seta   al
   16da7:	sbb    al,0x0
   16da9:	test   al,al
   16dab:	je     16ede <parse_config_data+0x2dee>
   16db1:	lea    rdi,[rip+0x17be7]        # 2e99f <__func__.10421+0x617>
   16db8:	mov    ecx,0xa
   16dbd:	mov    rsi,rbx
   16dc0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16dc2:	seta   al
   16dc5:	sbb    al,0x0
   16dc7:	test   al,al
   16dc9:	je     17973 <parse_config_data+0x3883>
   16dcf:	lea    rdi,[rip+0x1875e]        # 2f534 <__func__.10421+0x11ac>
   16dd6:	mov    ecx,0x7
   16ddb:	mov    rsi,rbx
   16dde:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16de0:	seta   al
   16de3:	sbb    al,0x0
   16de5:	test   al,al
   16de7:	je     179cc <parse_config_data+0x38dc>
   16ded:	lea    rdi,[rip+0x17b72]        # 2e966 <__func__.10421+0x5de>
   16df4:	mov    ecx,0x4
   16df9:	mov    rsi,rbx
   16dfc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16dfe:	seta   al
   16e01:	sbb    al,0x0
   16e03:	test   al,al
   16e05:	je     184d4 <parse_config_data+0x43e4>
   16e0b:	lea    rdi,[rip+0x17b58]        # 2e96a <__func__.10421+0x5e2>
   16e12:	mov    ecx,0x7
   16e17:	mov    rsi,rbx
   16e1a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16e1c:	seta   al
   16e1f:	sbb    al,0x0
   16e21:	test   al,al
   16e23:	je     184ae <parse_config_data+0x43be>
   16e29:	lea    rdi,[rip+0x17b67]        # 2e997 <__func__.10421+0x60f>
   16e30:	mov    ecx,0x8
   16e35:	mov    rsi,rbx
   16e38:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16e3a:	seta   al
   16e3d:	sbb    al,0x0
   16e3f:	test   al,al
   16e41:	je     18858 <parse_config_data+0x4768>
   16e47:	lea    rdi,[rip+0x17b23]        # 2e971 <__func__.10421+0x5e9>
   16e4e:	mov    ecx,0xb
   16e53:	mov    rsi,rbx
   16e56:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   16e58:	seta   al
   16e5b:	sbb    al,0x0
   16e5d:	test   al,al
   16e5f:	jne    16bfd <parse_config_data+0x2b0d>
   16e65:	jmp    16be7 <parse_config_data+0x2af7>
   16e6a:	nop    WORD PTR [rax+rax*1+0x0]
   16e70:	add    rax,0x1
   16e74:	jmp    16ba8 <parse_config_data+0x2ab8>
   16e79:	add    rbx,0x1
   16e7d:	jmp    16d18 <parse_config_data+0x2c28>
   16e82:	lea    rdi,[r15+0x1]
   16e86:	xor    esi,esi
   16e88:	mov    edx,0xa
   16e8d:	call   b7b0 <strtol@plt>
   16e92:	xor    esi,esi
   16e94:	lea    rdi,[rbp+0x18]
   16e98:	test   eax,eax
   16e9a:	setne  sil
   16e9e:	call   b140 <libxl_defbool_set@plt>
   16ea3:	jmp    16bfd <parse_config_data+0x2b0d>
   16ea8:	mov    rdi,QWORD PTR [rbp+0x20]
   16eac:	call   ac40 <free@plt>
   16eb1:	lea    rdi,[r15+0x1]
   16eb5:	call   c360 <strdup@plt>
   16eba:	mov    QWORD PTR [rbp+0x20],rax
   16ebe:	jmp    16bfd <parse_config_data+0x2b0d>
   16ec3:	mov    rdi,QWORD PTR [rbp+0x28]
   16ec7:	call   ac40 <free@plt>
   16ecc:	lea    rdi,[r15+0x1]
   16ed0:	call   c360 <strdup@plt>
   16ed5:	mov    QWORD PTR [rbp+0x28],rax
   16ed9:	jmp    16bfd <parse_config_data+0x2b0d>
   16ede:	lea    rdi,[r15+0x1]
   16ee2:	mov    edx,0xa
   16ee7:	xor    esi,esi
   16ee9:	call   b7b0 <strtol@plt>
   16eee:	mov    DWORD PTR [rbp+0x30],eax
   16ef1:	jmp    16bfd <parse_config_data+0x2b0d>
   16ef6:	mov    rdi,QWORD PTR [rsp+0xb8]
   16efe:	lea    rsi,[rip+0x1867a]        # 2f57f <__func__.10421+0x11f7>
   16f05:	lea    rdx,[rsp+0x148]
   16f0d:	xor    r8d,r8d
   16f10:	xor    ecx,ecx
   16f12:	call   bb20 <xlu_cfg_get_list@plt>
   16f17:	test   eax,eax
   16f19:	mov    esi,eax
   16f1b:	jne    17006 <parse_config_data+0x2f16>
   16f21:	lea    rbx,[rip+0x171c3]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   16f28:	mov    DWORD PTR [r14+0x490],0x0
   16f33:	mov    QWORD PTR [r14+0x498],0x0
   16f3e:	mov    rdi,QWORD PTR [rsp+0x148]
   16f46:	call   ad60 <xlu_cfg_get_listitem@plt>
   16f4b:	test   rax,rax
   16f4e:	mov    QWORD PTR [rsp+0xa8],rax
   16f56:	je     17006 <parse_config_data+0x2f16>
   16f5c:	mov    rdi,rax
   16f5f:	call   c360 <strdup@plt>
   16f64:	mov    r12,rax
   16f67:	mov    eax,DWORD PTR [r14+0x490]
   16f6e:	mov    rdi,QWORD PTR [r14+0x498]
   16f75:	add    eax,0x1
   16f78:	movsxd rbp,eax
   16f7b:	mov    DWORD PTR [r14+0x490],eax
   16f82:	shl    rbp,0x4
   16f86:	mov    rsi,rbp
   16f89:	sub    rbp,0x10
   16f8d:	call   ea30 <xrealloc>
   16f92:	lea    rdi,[rax+rbp*1]
   16f96:	mov    QWORD PTR [r14+0x498],rax
   16f9d:	call   b770 <libxl_device_usbdev_init@plt>
   16fa2:	mov    r13,QWORD PTR [r14+0x498]
   16fa9:	mov    rsi,rbx
   16fac:	mov    rdi,r12
   16faf:	call   bfe0 <strtok@plt>
   16fb4:	add    rbp,r13
   16fb7:	test   rax,rax
   16fba:	je     16fe7 <parse_config_data+0x2ef7>
   16fbc:	nop    DWORD PTR [rax+0x0]
   16fc0:	cmp    BYTE PTR [rax],0x20
   16fc3:	je     17000 <parse_config_data+0x2f10>
   16fc5:	mov    rsi,rax
   16fc8:	mov    rdi,rbp
   16fcb:	call   12ef0 <parse_usbdev_config>
   16fd0:	test   eax,eax
   16fd2:	jne    1620f <parse_config_data+0x211f>
   16fd8:	xor    edi,edi
   16fda:	mov    rsi,rbx
   16fdd:	call   bfe0 <strtok@plt>
   16fe2:	test   rax,rax
   16fe5:	jne    16fc0 <parse_config_data+0x2ed0>
   16fe7:	mov    rdi,r12
   16fea:	call   ac40 <free@plt>
   16fef:	mov    esi,DWORD PTR [r14+0x490]
   16ff6:	jmp    16f3e <parse_config_data+0x2e4e>
   16ffb:	nop    DWORD PTR [rax+rax*1+0x0]
   17000:	add    rax,0x1
   17004:	jmp    16fc0 <parse_config_data+0x2ed0>
   17006:	mov    rdi,QWORD PTR [rsp+0xb8]
   1700e:	lea    rdx,[rsp+0xe8]
   17016:	lea    rsi,[rip+0x1ad24]        # 31d41 <__PRETTY_FUNCTION__.10016+0xcb1>
   1701d:	xor    ecx,ecx
   1701f:	mov    r8d,0x1
   17025:	lea    r13,[rip+0x1807d]        # 2f0a9 <__func__.10421+0xd21>
   1702c:	lea    rbp,[rip+0x1a01d]        # 31050 <__func__.10421+0x2cc8>
   17033:	call   bb20 <xlu_cfg_get_list@plt>
   17038:	test   eax,eax
   1703a:	mov    ebx,eax
   1703c:	je     173e7 <parse_config_data+0x32f7>
   17042:	cmp    eax,0x16
   17045:	jne    1706a <parse_config_data+0x2f7a>
   17047:	mov    rdx,QWORD PTR [rsp+0x28]
   1704c:	mov    rdi,QWORD PTR [rsp+0xb8]
   17054:	lea    rsi,[rip+0x1ace6]        # 31d41 <__PRETTY_FUNCTION__.10016+0xcb1>
   1705b:	xor    ecx,ecx
   1705d:	call   c380 <xlu_cfg_get_string@plt>
   17062:	test   eax,eax
   17064:	je     1860c <parse_config_data+0x451c>
   1706a:	mov    rdx,QWORD PTR [rsp+0x28]
   1706f:	mov    rdi,QWORD PTR [rsp+0xb8]
   17077:	lea    rsi,[rip+0x18519]        # 2f597 <__func__.10421+0x120f>
   1707e:	xor    ecx,ecx
   17080:	call   c380 <xlu_cfg_get_string@plt>
   17085:	test   eax,eax
   17087:	je     1843e <parse_config_data+0x434e>
   1708d:	mov    rdi,QWORD PTR [rsp+0xb8]
   17095:	lea    rdx,[r14+0x120]
   1709c:	lea    rsi,[rip+0x1850c]        # 2f5af <__func__.10421+0x1227>
   170a3:	xor    ecx,ecx
   170a5:	call   c230 <xlu_cfg_replace_string@plt>
   170aa:	mov    rdx,QWORD PTR [rsp+0x28]
   170af:	mov    rdi,QWORD PTR [rsp+0xb8]
   170b7:	lea    rsi,[rip+0x18507]        # 2f5c5 <__func__.10421+0x123d>
   170be:	xor    ecx,ecx
   170c0:	call   c380 <xlu_cfg_get_string@plt>
   170c5:	test   eax,eax
   170c7:	jne    17999 <parse_config_data+0x38a9>
   170cd:	mov    rax,QWORD PTR [rsp+0xa8]
   170d5:	lea    rdi,[rip+0x184fe]        # 2f5da <__func__.10421+0x1252>
   170dc:	mov    ecx,0x15
   170e1:	mov    rsi,rax
   170e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   170e6:	seta   dl
   170e9:	sbb    dl,0x0
   170ec:	test   dl,dl
   170ee:	jne    183ea <parse_config_data+0x42fa>
   170f4:	mov    DWORD PTR [r14+0x118],0x1
   170ff:	mov    rdi,QWORD PTR [rsp+0xb8]
   17107:	lea    rdx,[r14+0x11c]
   1710e:	lea    rsi,[rip+0x19ccb]        # 30de0 <__func__.10421+0x2a58>
   17115:	xor    ecx,ecx
   17117:	call   be20 <xlu_cfg_get_defbool@plt>
   1711c:	mov    rdx,QWORD PTR [rsp+0x28]
   17121:	mov    rdi,QWORD PTR [rsp+0xb8]
   17129:	lea    rsi,[rip+0x19cd8]        # 30e08 <__func__.10421+0x2a80>
   17130:	xor    ecx,ecx
   17132:	call   c380 <xlu_cfg_get_string@plt>
   17137:	test   eax,eax
   17139:	je     183c8 <parse_config_data+0x42d8>
   1713f:	mov    rdi,QWORD PTR [rsp+0xb8]
   17147:	lea    rdx,[r14+0x138]
   1714e:	lea    rsi,[rip+0x184a3]        # 2f5f8 <__func__.10421+0x1270>
   17155:	xor    ecx,ecx
   17157:	call   c230 <xlu_cfg_replace_string@plt>
   1715c:	mov    rdi,QWORD PTR [rsp+0xb8]
   17164:	lea    rdx,[r14+0x140]
   1716b:	lea    rsi,[rip+0x18498]        # 2f60a <__func__.10421+0x1282>
   17172:	xor    ecx,ecx
   17174:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   17179:	test   eax,eax
   1717b:	je     17186 <parse_config_data+0x3096>
   1717d:	cmp    eax,0x3
   17180:	jne    1916f <parse_config_data+0x507f>
   17186:	mov    rdi,QWORD PTR [rsp+0xb8]
   1718e:	lea    rdx,[r14+0x148]
   17195:	lea    rsi,[rip+0x18480]        # 2f61c <__func__.10421+0x1294>
   1719c:	xor    ecx,ecx
   1719e:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   171a3:	test   eax,eax
   171a5:	je     171b0 <parse_config_data+0x30c0>
   171a7:	cmp    eax,0x3
   171aa:	jne    19145 <parse_config_data+0x5055>
   171b0:	mov    rdi,QWORD PTR [rsp+0xb8]
   171b8:	lea    rdx,[r14+0x150]
   171bf:	lea    rsi,[rip+0x1846b]        # 2f631 <__func__.10421+0x12a9>
   171c6:	xor    ecx,ecx
   171c8:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   171cd:	test   eax,eax
   171cf:	je     171da <parse_config_data+0x30ea>
   171d1:	cmp    eax,0x3
   171d4:	jne    1911b <parse_config_data+0x502b>
   171da:	cmp    DWORD PTR [r14],0x2
   171de:	mov    rdi,QWORD PTR [rsp+0xb8]
   171e6:	jne    171f7 <parse_config_data+0x3107>
   171e8:	mov    esi,DWORD PTR [r14+0x400]
   171ef:	test   esi,esi
   171f1:	je     18750 <parse_config_data+0x4660>
   171f7:	lea    rsi,[r14+0x2a0]
   171fe:	call   11620 <parse_top_level_vnc_options>
   17203:	mov    rdi,QWORD PTR [rsp+0xb8]
   1720b:	lea    rsi,[r14+0x2c8]
   17212:	call   115b0 <parse_top_level_sdl_options>
   17217:	mov    rdi,QWORD PTR [rsp+0xb8]
   1721f:	lea    rdx,[r14+0x1f4]
   17226:	lea    rsi,[rip+0x1841a]        # 2f647 <__func__.10421+0x12bf>
   1722d:	xor    ecx,ecx
   1722f:	call   be20 <xlu_cfg_get_defbool@plt>
   17234:	cmp    DWORD PTR [r14],0x1
   17238:	je     17b35 <parse_config_data+0x3a45>
   1723e:	mov    rdx,QWORD PTR [rsp+0x28]
   17243:	mov    rdi,QWORD PTR [rsp+0xb8]
   1724b:	lea    rsi,[rip+0x18574]        # 2f7c6 <__func__.10421+0x143e>
   17252:	mov    ecx,0x1
   17257:	call   c380 <xlu_cfg_get_string@plt>
   1725c:	test   eax,eax
   1725e:	jne    1727c <parse_config_data+0x318c>
   17260:	mov    rdi,QWORD PTR [rsp+0xa8]
   17268:	lea    rsi,[r14+0x3a0]
   1726f:	call   be40 <libxl_gic_version_from_string@plt>
   17274:	test   eax,eax
   17276:	jne    18fc4 <parse_config_data+0x4ed4>
   1727c:	mov    rdx,QWORD PTR [rsp+0x20]
   17281:	mov    rdi,QWORD PTR [rsp+0xb8]
   17289:	lea    rsi,[rip+0x18542]        # 2f7d2 <__func__.10421+0x144a>
   17290:	xor    r8d,r8d
   17293:	xor    ecx,ecx
   17295:	call   bb20 <xlu_cfg_get_list@plt>
   1729a:	test   eax,eax
   1729c:	mov    r13d,eax
   1729f:	jne    17466 <parse_config_data+0x3376>
   172a5:	lea    r12,[rip+0x16e3f]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   172ac:	xor    ebp,ebp
   172ae:	mov    rdi,QWORD PTR [rsp+0x168]
   172b6:	mov    esi,r13d
   172b9:	call   ad60 <xlu_cfg_get_listitem@plt>
   172be:	test   rax,rax
   172c1:	mov    r15,rax
   172c4:	je     1745e <parse_config_data+0x336e>
   172ca:	mov    edx,DWORD PTR [r14+0x410]
   172d1:	mov    rdi,QWORD PTR [r14+0x418]
   172d8:	lea    eax,[rdx+0x1]
   172db:	mov    DWORD PTR [rsp+0x8],edx
   172df:	mov    DWORD PTR [r14+0x410],eax
   172e6:	cdqe   
   172e8:	shl    rax,0x6
   172ec:	mov    rbp,rax
   172ef:	mov    rsi,rax
   172f2:	lea    rbx,[rbp-0x40]
   172f6:	call   ea30 <xrealloc>
   172fb:	lea    rdi,[rax+rbx*1]
   172ff:	mov    QWORD PTR [r14+0x418],rax
   17306:	call   bff0 <libxl_device_vkb_init@plt>
   1730b:	mov    edx,DWORD PTR [rsp+0x8]
   1730f:	mov    rax,QWORD PTR [r14+0x418]
   17316:	mov    rdi,r15
   17319:	mov    DWORD PTR [rax+rbp*1-0x30],edx
   1731d:	add    rbx,QWORD PTR [r14+0x418]
   17324:	call   c360 <strdup@plt>
   17329:	mov    rsi,r12
   1732c:	mov    rdi,rax
   1732f:	mov    rbp,rax
   17332:	call   bfe0 <strtok@plt>
   17337:	test   rax,rax
   1733a:	jne    17344 <parse_config_data+0x3254>
   1733c:	jmp    1736b <parse_config_data+0x327b>
   1733e:	xchg   ax,ax
   17340:	add    rax,0x1
   17344:	cmp    BYTE PTR [rax],0x20
   17347:	je     17340 <parse_config_data+0x3250>
   17349:	mov    rsi,rax
   1734c:	mov    rdi,rbx
   1734f:	call   130a0 <parse_vkb_config>
   17354:	test   eax,eax
   17356:	jne    17b28 <parse_config_data+0x3a38>
   1735c:	xor    edi,edi
   1735e:	mov    rsi,r12
   17361:	call   bfe0 <strtok@plt>
   17366:	test   rax,rax
   17369:	jne    17344 <parse_config_data+0x3254>
   1736b:	mov    edx,DWORD PTR [rbx+0x14]
   1736e:	test   edx,edx
   17370:	je     190ee <parse_config_data+0x4ffe>
   17376:	cmp    QWORD PTR [rbx+0x30],0x0
   1737b:	jne    17388 <parse_config_data+0x3298>
   1737d:	mov    eax,DWORD PTR [rbx+0x38]
   17380:	test   eax,eax
   17382:	je     186b8 <parse_config_data+0x45c8>
   17388:	mov    BYTE PTR [rbx+0x24],0x1
   1738c:	add    r13d,0x1
   17390:	jmp    172ae <parse_config_data+0x31be>
   17395:	lea    r12,[rip+0x189ac]        # 2fd48 <__func__.10421+0x19c0>
   1739c:	mov    rax,QWORD PTR [rip+0x223c4d]        # 23aff0 <stderr@GLIBC_2.2.5>
   173a3:	mov    rcx,QWORD PTR [rsp+0xa8]
   173ab:	lea    rdx,[rip+0x197e6]        # 30b98 <__func__.10421+0x2810>
   173b2:	mov    esi,0x1
   173b7:	mov    rdi,QWORD PTR [rax]
   173ba:	xor    eax,eax
   173bc:	call   c1e0 <__fprintf_chk@plt>
   173c1:	mov    rax,QWORD PTR [rip+0x223c28]        # 23aff0 <stderr@GLIBC_2.2.5>
   173c8:	lea    rdx,[rip+0x181b7]        # 2f586 <__func__.10421+0x11fe>
   173cf:	mov    r8,r12
   173d2:	mov    ecx,r15d
   173d5:	mov    esi,0x1
   173da:	mov    rdi,QWORD PTR [rax]
   173dd:	xor    eax,eax
   173df:	call   c1e0 <__fprintf_chk@plt>
   173e4:	add    ebx,0x1
   173e7:	mov    rdi,QWORD PTR [rsp+0xe8]
   173ef:	mov    esi,ebx
   173f1:	call   ad60 <xlu_cfg_get_listitem@plt>
   173f6:	test   rax,rax
   173f9:	mov    QWORD PTR [rsp+0xa8],rax
   17401:	je     1706a <parse_config_data+0x2f7a>
   17407:	lea    rdi,[r14+0xf0]
   1740e:	mov    rsi,rax
   17411:	call   ae60 <libxl_cpuid_parse_config_xend@plt>
   17416:	cmp    eax,0x5
   17419:	mov    r15d,eax
   1741c:	ja     184a6 <parse_config_data+0x43b6>
   17422:	mov    eax,eax
   17424:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
   17429:	add    rax,rbp
   1742c:	jmp    rax
   1742e:	lea    r12,[rip+0x188e3]        # 2fd18 <__func__.10421+0x1990>
   17435:	jmp    1739c <parse_config_data+0x32ac>
   1743a:	lea    r12,[rip+0x17c5a]        # 2f09b <__func__.10421+0xd13>
   17441:	jmp    1739c <parse_config_data+0x32ac>
   17446:	lea    r12,[rip+0x17c37]        # 2f084 <__func__.10421+0xcfc>
   1744d:	jmp    1739c <parse_config_data+0x32ac>
   17452:	lea    r12,[rip+0x17c17]        # 2f070 <__func__.10421+0xce8>
   17459:	jmp    1739c <parse_config_data+0x32ac>
   1745e:	mov    rdi,rbp
   17461:	call   ac40 <free@plt>
   17466:	mov    rdi,QWORD PTR [rsp+0xb8]
   1746e:	call   abc0 <xlu_cfg_destroy@plt>
   17473:	mov    rax,QWORD PTR [rsp+0x1e8]
   1747b:	xor    rax,QWORD PTR fs:0x28
   17484:	jne    19199 <parse_config_data+0x50a9>
   1748a:	add    rsp,0x1f8
   17491:	pop    rbx
   17492:	pop    rbp
   17493:	pop    r12
   17495:	pop    r13
   17497:	pop    r14
   17499:	pop    r15
   1749b:	ret    
   1749c:	mov    rdi,QWORD PTR [r14+0x1b0]
   174a3:	call   bc30 <libxl_basename@plt>
   174a8:	lea    rdi,[rip+0x17ece]        # 2f37d <__func__.10421+0xff5>
   174af:	mov    rsi,rax
   174b2:	mov    ecx,0xa
   174b7:	mov    rbx,rax
   174ba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   174bc:	seta   al
   174bf:	sbb    al,0x0
   174c1:	test   al,al
   174c3:	je     181b8 <parse_config_data+0x40c8>
   174c9:	mov    rdi,rbx
   174cc:	lea    r15,[r14+0x200]
   174d3:	call   ac40 <free@plt>
   174d8:	mov    rdi,QWORD PTR [rsp+0xb8]
   174e0:	lea    rsi,[rip+0x17ea0]        # 2f387 <__func__.10421+0xfff>
   174e7:	xor    ecx,ecx
   174e9:	mov    rdx,r15
   174ec:	call   c230 <xlu_cfg_replace_string@plt>
   174f1:	mov    rdi,QWORD PTR [rsp+0xb8]
   174f9:	lea    rdx,[r14+0x278]
   17500:	lea    rsi,[rip+0x17e92]        # 2f399 <__func__.10421+0x1011>
   17507:	xor    ecx,ecx
   17509:	call   c230 <xlu_cfg_replace_string@plt>
   1750e:	mov    rdx,QWORD PTR [rsp+0x28]
   17513:	mov    rdi,QWORD PTR [rsp+0xb8]
   1751b:	lea    rsi,[rip+0x17e8a]        # 2f3ac <__func__.10421+0x1024>
   17522:	xor    ecx,ecx
   17524:	call   c380 <xlu_cfg_get_string@plt>
   17529:	test   eax,eax
   1752b:	je     18184 <parse_config_data+0x4094>
   17531:	cmp    QWORD PTR [r14+0x278],0x0
   17539:	je     1755b <parse_config_data+0x346b>
   1753b:	mov    rax,QWORD PTR [rip+0x223aae]        # 23aff0 <stderr@GLIBC_2.2.5>
   17542:	lea    rdi,[rip+0x18f0f]        # 30458 <__func__.10421+0x20d0>
   17549:	mov    edx,0x3d
   1754e:	mov    esi,0x1
   17553:	mov    rcx,QWORD PTR [rax]
   17556:	call   c1b0 <fwrite@plt>
   1755b:	mov    rdi,QWORD PTR [rsp+0xb8]
   17563:	lea    rdx,[r14+0x20c]
   1756a:	lea    rsi,[rip+0x17e40]        # 2f3b1 <__func__.10421+0x1029>
   17571:	xor    ecx,ecx
   17573:	call   be20 <xlu_cfg_get_defbool@plt>
   17578:	mov    rdi,QWORD PTR [rsp+0xb8]
   17580:	lea    rdx,[r14+0x218]
   17587:	lea    rsi,[rip+0x17e27]        # 2f3b5 <__func__.10421+0x102d>
   1758e:	xor    ecx,ecx
   17590:	call   be20 <xlu_cfg_get_defbool@plt>
   17595:	mov    rdi,QWORD PTR [rsp+0xb8]
   1759d:	lea    rdx,[r14+0x21c]
   175a4:	lea    rsi,[rip+0x17e12]        # 2f3bd <__func__.10421+0x1035>
   175ab:	xor    ecx,ecx
   175ad:	call   be20 <xlu_cfg_get_defbool@plt>
   175b2:	mov    rdi,QWORD PTR [rsp+0xb8]
   175ba:	lea    rdx,[r14+0x220]
   175c1:	lea    rsi,[rip+0x17dfd]        # 2f3c5 <__func__.10421+0x103d>
   175c8:	xor    ecx,ecx
   175ca:	call   be20 <xlu_cfg_get_defbool@plt>
   175cf:	mov    rdi,QWORD PTR [rsp+0xb8]
   175d7:	lea    rdx,[r14+0x224]
   175de:	lea    rsi,[rip+0x17df2]        # 2f3d7 <__func__.10421+0x104f>
   175e5:	xor    ecx,ecx
   175e7:	call   be20 <xlu_cfg_get_defbool@plt>
   175ec:	mov    rdi,QWORD PTR [rsp+0xb8]
   175f4:	lea    rdx,[r14+0x258]
   175fb:	lea    rsi,[rip+0x17dd8]        # 2f3da <__func__.10421+0x1052>
   17602:	xor    ecx,ecx
   17604:	call   be20 <xlu_cfg_get_defbool@plt>
   17609:	mov    rdi,QWORD PTR [rsp+0xb8]
   17611:	lea    rdx,[r14+0x25c]
   17618:	lea    rsi,[rip+0x17dc0]        # 2f3df <__func__.10421+0x1057>
   1761f:	xor    ecx,ecx
   17621:	call   be20 <xlu_cfg_get_defbool@plt>
   17626:	mov    rdi,QWORD PTR [rsp+0xb8]
   1762e:	lea    rdx,[r14+0x1f0]
   17635:	lea    rsi,[rip+0x17dad]        # 2f3e9 <__func__.10421+0x1061>
   1763c:	xor    ecx,ecx
   1763e:	call   be20 <xlu_cfg_get_defbool@plt>
   17643:	mov    rdi,QWORD PTR [rsp+0xb8]
   1764b:	lea    rcx,[rsp+0xa0]
   17653:	lea    rdx,[rsp+0x130]
   1765b:	lea    rsi,[rip+0x17d8c]        # 2f3ee <__func__.10421+0x1066>
   17662:	mov    r8d,0x1
   17668:	call   bb20 <xlu_cfg_get_list@plt>
   1766d:	cmp    eax,0x3
   17670:	mov    ebp,eax
   17672:	je     1769d <parse_config_data+0x35ad>
   17674:	cmp    eax,0x16
   17677:	jne    17fae <parse_config_data+0x3ebe>
   1767d:	mov    rdi,QWORD PTR [rsp+0xb8]
   17685:	lea    rdx,[r14+0x228]
   1768c:	lea    rsi,[rip+0x17d5b]        # 2f3ee <__func__.10421+0x1066>
   17693:	mov    ecx,0x1
   17698:	call   be20 <xlu_cfg_get_defbool@plt>
   1769d:	mov    rdx,QWORD PTR [rsp+0x30]
   176a2:	mov    rdi,QWORD PTR [rsp+0xb8]
   176aa:	lea    rsi,[rip+0x17d4f]        # 2f400 <__func__.10421+0x1078>
   176b1:	xor    ecx,ecx
   176b3:	call   b2c0 <xlu_cfg_get_long@plt>
   176b8:	test   eax,eax
   176ba:	jne    176ed <parse_config_data+0x35fd>
   176bc:	mov    rcx,QWORD PTR [rsp+0xb0]
   176c4:	mov    edx,0xe0000000
   176c9:	mov    rax,rcx
   176cc:	shl    rax,0xa
   176d0:	mov    QWORD PTR [r14+0x260],rax
   176d7:	mov    rax,rcx
   176da:	shl    rax,0x14
   176de:	sub    rax,0x10000000
   176e4:	cmp    rax,rdx
   176e7:	ja     1921c <parse_config_data+0x512c>
   176ed:	mov    rdi,QWORD PTR [rsp+0xb8]
   176f5:	lea    rdx,[r14+0x270]
   176fc:	lea    rsi,[rip+0x17d07]        # 2f40a <__func__.10421+0x1082>
   17703:	xor    ecx,ecx
   17705:	call   be20 <xlu_cfg_get_defbool@plt>
   1770a:	test   eax,eax
   1770c:	je     18419 <parse_config_data+0x4329>
   17712:	mov    rdi,QWORD PTR [rsp+0xb8]
   1771a:	lea    rdx,[r14+0x280]
   17721:	lea    rsi,[rip+0x17cec]        # 2f414 <__func__.10421+0x108c>
   17728:	xor    ecx,ecx
   1772a:	call   c230 <xlu_cfg_replace_string@plt>
   1772f:	mov    rdi,QWORD PTR [rsp+0xb8]
   17737:	lea    rdx,[r14+0x288]
   1773e:	lea    rsi,[rip+0x17cdf]        # 2f424 <__func__.10421+0x109c>
   17745:	xor    ecx,ecx
   17747:	call   c230 <xlu_cfg_replace_string@plt>
   1774c:	mov    rdx,QWORD PTR [rsp+0x28]
   17751:	mov    rdi,QWORD PTR [rsp+0xb8]
   17759:	lea    rsi,[rip+0x17cd2]        # 2f432 <__func__.10421+0x10aa>
   17760:	xor    ecx,ecx
   17762:	call   c380 <xlu_cfg_get_string@plt>
   17767:	test   eax,eax
   17769:	jne    177b0 <parse_config_data+0x36c0>
   1776b:	mov    rax,QWORD PTR [rsp+0xa8]
   17773:	lea    rdi,[rip+0x17cc4]        # 2f43e <__func__.10421+0x10b6>
   1777a:	mov    ecx,0x9
   1777f:	mov    rsi,rax
   17782:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   17784:	seta   dl
   17787:	sbb    dl,0x0
   1778a:	test   dl,dl
   1778c:	je     189c0 <parse_config_data+0x48d0>
   17792:	lea    rdi,[rip+0x1695d]        # 2e0f6 <__PRETTY_FUNCTION__.10113+0x44de>
   17799:	mov    rsi,rax
   1779c:	mov    ecx,0x5
   177a1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   177a3:	seta   al
   177a6:	sbb    al,0x0
   177a8:	test   al,al
   177aa:	jne    191f2 <parse_config_data+0x5102>
   177b0:	mov    rdx,QWORD PTR [rsp+0x30]
   177b5:	mov    rdi,QWORD PTR [rsp+0xb8]
   177bd:	lea    rsi,[rip+0x17c83]        # 2f447 <__func__.10421+0x10bf>
   177c4:	xor    ecx,ecx
   177c6:	call   b2c0 <xlu_cfg_get_long@plt>
   177cb:	test   eax,eax
   177cd:	jne    177e2 <parse_config_data+0x36f2>
   177cf:	mov    rax,QWORD PTR [rsp+0xb0]
   177d7:	shl    rax,0xa
   177db:	mov    QWORD PTR [r14+0x390],rax
   177e2:	mov    rdi,QWORD PTR [rsp+0xb8]
   177ea:	lea    rcx,[rsp+0xa4]
   177f2:	lea    rdx,[rsp+0x138]
   177fa:	lea    rsi,[rip+0x17c57]        # 2f458 <__func__.10421+0x10d0>
   17801:	mov    r8d,0x1
   17807:	call   bb20 <xlu_cfg_get_list@plt>
   1780c:	test   eax,eax
   1780e:	mov    ebp,eax
   17810:	je     17a7a <parse_config_data+0x398a>
   17816:	cmp    eax,0x3
   17819:	jne    191c8 <parse_config_data+0x50d8>
   1781f:	mov    rdx,QWORD PTR [rsp+0x28]
   17824:	mov    rdi,QWORD PTR [rsp+0xb8]
   1782c:	lea    rsi,[rip+0x17bf6]        # 2f429 <__func__.10421+0x10a1>
   17833:	xor    ecx,ecx
   17835:	call   c380 <xlu_cfg_get_string@plt>
   1783a:	test   eax,eax
   1783c:	jne    14eaf <parse_config_data+0xdbf>
   17842:	mov    rdi,QWORD PTR [rsp+0xa8]
   1784a:	lea    rsi,[r14+0x208]
   17851:	call   bcf0 <libxl_bios_type_from_string@plt>
   17856:	test   eax,eax
   17858:	je     14eaf <parse_config_data+0xdbf>
   1785e:	mov    rbx,QWORD PTR [rsp+0xa8]
   17866:	mov    rdi,rbx
   17869:	call   b0c0 <strlen@plt>
   1786e:	mov    r9d,0x5
   17874:	cmp    rax,0x5
   17878:	lea    rdi,[rip+0x17be7]        # 2f466 <__func__.10421+0x10de>
   1787f:	mov    rcx,r9
   17882:	mov    rsi,rbx
   17885:	mov    r8,QWORD PTR [rsp+0xb8]
   1788d:	cmovle rcx,rax
   17891:	cmp    rcx,rcx
   17894:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   17896:	seta   dl
   17899:	sbb    dl,0x0
   1789c:	test   dl,dl
   1789e:	jne    18706 <parse_config_data+0x4616>
   178a4:	mov    DWORD PTR [r14+0x208],0x3
   178af:	jmp    14eb7 <parse_config_data+0xdc7>
   178b4:	mov    rdx,QWORD PTR [rsp+0x28]
   178b9:	mov    rdi,QWORD PTR [rsp+0xb8]
   178c1:	lea    rsi,[rip+0x17aa0]        # 2f368 <__func__.10421+0xfe0>
   178c8:	xor    ecx,ecx
   178ca:	call   c380 <xlu_cfg_get_string@plt>
   178cf:	test   eax,eax
   178d1:	jne    14dbf <parse_config_data+0xccf>
   178d7:	cmp    DWORD PTR [r14+0x1f8],0x2
   178df:	je     18b89 <parse_config_data+0x4a99>
   178e5:	mov    rdi,QWORD PTR [rsp+0xa8]
   178ed:	lea    rsi,[r14+0x1e8]
   178f4:	call   c510 <libxl_timer_mode_from_string@plt>
   178f9:	test   eax,eax
   178fb:	je     14dbf <parse_config_data+0xccf>
   17901:	mov    rcx,QWORD PTR [rsp+0xa8]
   17909:	lea    rdx,[rip+0x18a40]        # 30350 <__func__.10421+0x1fc8>
   17910:	jmp    161f9 <parse_config_data+0x2109>
   17915:	nop    DWORD PTR [rax]
   17918:	mov    rax,QWORD PTR [rsp+0x10]
   1791d:	mov    rsi,rbx
   17920:	lea    rdi,[rax+r13*1+0x8]
   17925:	call   11e50 <replace_string>
   1792a:	mov    esi,DWORD PTR [r14+0x440]
   17931:	jmp    16048 <parse_config_data+0x1f58>
   17936:	mov    rdx,QWORD PTR [rsp+0x158]
   1793e:	mov    rcx,QWORD PTR [rsp+0x160]
   17946:	test   rdx,rdx
   17949:	je     1820d <parse_config_data+0x411d>
   1794f:	test   rcx,rcx
   17952:	lea    rdi,[rsp+0x150]
   1795a:	je     181fa <parse_config_data+0x410a>
   17960:	lea    rsi,[rip+0x179cc]        # 2f333 <__func__.10421+0xfab>
   17967:	xor    eax,eax
   17969:	call   e8e0 <xasprintf>
   1796e:	jmp    14c60 <parse_config_data+0xb70>
   17973:	lea    rdi,[r15+0x1]
   17977:	xor    esi,esi
   17979:	mov    edx,0xa
   1797e:	call   b7b0 <strtol@plt>
   17983:	xor    esi,esi
   17985:	lea    rdi,[rbp+0x34]
   17989:	test   eax,eax
   1798b:	setne  sil
   1798f:	call   b140 <libxl_defbool_set@plt>
   17994:	jmp    16bfd <parse_config_data+0x2b0d>
   17999:	cmp    QWORD PTR [r14+0x120],0x0
   179a1:	je     170ff <parse_config_data+0x300f>
   179a7:	mov    rax,QWORD PTR [rip+0x223642]        # 23aff0 <stderr@GLIBC_2.2.5>
   179ae:	lea    rdi,[rip+0x193e3]        # 30d98 <__func__.10421+0x2a10>
   179b5:	mov    edx,0x41
   179ba:	mov    esi,0x1
   179bf:	mov    rcx,QWORD PTR [rax]
   179c2:	call   c1b0 <fwrite@plt>
   179c7:	jmp    170ff <parse_config_data+0x300f>
   179cc:	mov    rdi,QWORD PTR [rbp+0x50]
   179d0:	call   ac40 <free@plt>
   179d5:	lea    rdi,[r15+0x1]
   179d9:	call   c360 <strdup@plt>
   179de:	mov    QWORD PTR [rbp+0x50],rax
   179e2:	jmp    16bfd <parse_config_data+0x2b0d>
   179e7:	mov    rdx,QWORD PTR [rsp+0x28]
   179ec:	mov    rdi,QWORD PTR [rsp+0xb8]
   179f4:	lea    rsi,[rip+0x17a82]        # 2f47d <__func__.10421+0x10f5>
   179fb:	xor    ecx,ecx
   179fd:	call   c380 <xlu_cfg_get_string@plt>
   17a02:	test   eax,eax
   17a04:	jne    14ef1 <parse_config_data+0xe01>
   17a0a:	mov    rdi,QWORD PTR [rsp+0xa8]
   17a12:	lea    rsi,[r14+0x3a8]
   17a19:	call   afd0 <libxl_altp2m_mode_from_string@plt>
   17a1e:	test   eax,eax
   17a20:	je     14ef1 <parse_config_data+0xe01>
   17a26:	mov    rcx,QWORD PTR [rsp+0xa8]
   17a2e:	lea    rdx,[rip+0x18cf3]        # 30728 <__func__.10421+0x23a0>
   17a35:	jmp    161f9 <parse_config_data+0x2109>
   17a3a:	nop    WORD PTR [rax+rax*1+0x0]
   17a40:	mov    rax,QWORD PTR [rip+0x2235a9]        # 23aff0 <stderr@GLIBC_2.2.5>
   17a47:	lea    rdi,[rip+0x186c2]        # 30110 <__func__.10421+0x1d88>
   17a4e:	mov    edx,0x67
   17a53:	mov    esi,0x1
   17a58:	mov    rcx,QWORD PTR [rax]
   17a5b:	call   c1b0 <fwrite@plt>
   17a60:	jmp    14aa1 <parse_config_data+0x9b1>
   17a65:	mov    esi,DWORD PTR [r14+0x58]
   17a69:	mov    rdi,QWORD PTR [r14+0xb8]
   17a70:	call   c2d0 <libxl_get_required_shadow_memory@plt>
   17a75:	jmp    149aa <parse_config_data+0x8ba>
   17a7a:	mov    eax,DWORD PTR [rsp+0xa4]
   17a81:	lea    rbx,[rip+0x179d9]        # 2f461 <__func__.10421+0x10d9>
   17a88:	test   eax,eax
   17a8a:	jg     17ab0 <parse_config_data+0x39c0>
   17a8c:	jmp    1781f <parse_config_data+0x372f>
   17a91:	nop    DWORD PTR [rax+0x0]
   17a98:	or     QWORD PTR [r14+0x398],0x1
   17aa0:	add    ebp,0x1
   17aa3:	cmp    DWORD PTR [rsp+0xa4],ebp
   17aaa:	jle    1781f <parse_config_data+0x372f>
   17ab0:	mov    rdi,QWORD PTR [rsp+0x138]
   17ab8:	mov    esi,ebp
   17aba:	call   ad60 <xlu_cfg_get_listitem@plt>
   17abf:	mov    ecx,0x5
   17ac4:	mov    QWORD PTR [rsp+0xa8],rax
   17acc:	mov    rsi,rax
   17acf:	mov    rdi,rbx
   17ad2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   17ad4:	seta   dl
   17ad7:	sbb    dl,0x0
   17ada:	test   dl,dl
   17adc:	je     17a98 <parse_config_data+0x39a8>
   17ade:	mov    rcx,rax
   17ae1:	lea    rdx,[rip+0x18b00]        # 305e8 <__func__.10421+0x2260>
   17ae8:	jmp    18a2b <parse_config_data+0x493b>
   17aed:	nop    DWORD PTR [rax]
   17af0:	test   eax,eax
   17af2:	je     14d2f <parse_config_data+0xc3f>
   17af8:	mov    rax,QWORD PTR [rip+0x2234f1]        # 23aff0 <stderr@GLIBC_2.2.5>
   17aff:	lea    rdi,[rip+0x18742]        # 30248 <__func__.10421+0x1ec0>
   17b06:	mov    edx,0x25
   17b0b:	mov    esi,0x1
   17b10:	mov    rcx,QWORD PTR [rax]
   17b13:	call   c1b0 <fwrite@plt>
   17b18:	mov    edi,0x3
   17b1d:	call   c1a0 <exit@plt>
   17b22:	nop    WORD PTR [rax+rax*1+0x0]
   17b28:	mov    rdi,rbp
   17b2b:	call   ac40 <free@plt>
   17b30:	jmp    1620f <parse_config_data+0x211f>
   17b35:	mov    rdx,QWORD PTR [rsp+0x28]
   17b3a:	mov    rdi,QWORD PTR [rsp+0xb8]
   17b42:	lea    rsi,[rip+0x17b0d]        # 2f656 <__func__.10421+0x12ce>
   17b49:	xor    ecx,ecx
   17b4b:	call   c380 <xlu_cfg_get_string@plt>
   17b50:	test   eax,eax
   17b52:	jne    18980 <parse_config_data+0x4890>
   17b58:	mov    rbx,QWORD PTR [rsp+0xa8]
   17b60:	lea    rdi,[rip+0x17aec]        # 2f653 <__func__.10421+0x12cb>
   17b67:	mov    ecx,0x7
   17b6c:	mov    rsi,rbx
   17b6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   17b71:	seta   al
   17b74:	sbb    al,0x0
   17b76:	test   al,al
   17b78:	je     18538 <parse_config_data+0x4448>
   17b7e:	lea    rdi,[rip+0x17ad5]        # 2f65a <__func__.10421+0x12d2>
   17b85:	mov    ecx,0x7
   17b8a:	mov    rsi,rbx
   17b8d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   17b8f:	seta   al
   17b92:	sbb    al,0x0
   17b94:	test   al,al
   17b96:	jne    18d60 <parse_config_data+0x4c70>
   17b9c:	mov    DWORD PTR [r14+0x298],0x1
   17ba7:	mov    rdx,QWORD PTR [rsp+0x28]
   17bac:	mov    rdi,QWORD PTR [rsp+0xb8]
   17bb4:	lea    rsi,[rip+0x17ac6]        # 2f681 <__func__.10421+0x12f9>
   17bbb:	xor    ecx,ecx
   17bbd:	call   c380 <xlu_cfg_get_string@plt>
   17bc2:	test   eax,eax
   17bc4:	jne    17be2 <parse_config_data+0x3af2>
   17bc6:	mov    rdi,QWORD PTR [rsp+0xa8]
   17bce:	lea    rsi,[r14+0x290]
   17bd5:	call   ae90 <libxl_hdtype_from_string@plt>
   17bda:	test   eax,eax
   17bdc:	jne    18a08 <parse_config_data+0x4918>
   17be2:	mov    rdi,QWORD PTR [rsp+0xb8]
   17bea:	lea    rdx,[r14+0x2c0]
   17bf1:	lea    rsi,[rip+0x1793c]        # 2f534 <__func__.10421+0x11ac>
   17bf8:	xor    ecx,ecx
   17bfa:	call   c230 <xlu_cfg_replace_string@plt>
   17bff:	mov    rdi,QWORD PTR [rsp+0xb8]
   17c07:	lea    rdx,[r14+0x2e0]
   17c0e:	lea    rsi,[rip+0x17a73]        # 2f688 <__func__.10421+0x1300>
   17c15:	xor    ecx,ecx
   17c17:	call   be20 <xlu_cfg_get_defbool@plt>
   17c1c:	mov    rdx,QWORD PTR [rsp+0x30]
   17c21:	mov    rdi,QWORD PTR [rsp+0xb8]
   17c29:	lea    rsi,[rip+0x17a5e]        # 2f68e <__func__.10421+0x1306>
   17c30:	xor    ecx,ecx
   17c32:	call   b2c0 <xlu_cfg_get_long@plt>
   17c37:	test   eax,eax
   17c39:	jne    17c4a <parse_config_data+0x3b5a>
   17c3b:	mov    rax,QWORD PTR [rsp+0xb0]
   17c43:	mov    DWORD PTR [r14+0x2e4],eax
   17c4a:	mov    rdx,QWORD PTR [rsp+0x30]
   17c4f:	mov    rdi,QWORD PTR [rsp+0xb8]
   17c57:	lea    rsi,[rip+0x17a3a]        # 2f698 <__func__.10421+0x1310>
   17c5e:	xor    ecx,ecx
   17c60:	call   b2c0 <xlu_cfg_get_long@plt>
   17c65:	test   eax,eax
   17c67:	jne    17c78 <parse_config_data+0x3b88>
   17c69:	mov    rax,QWORD PTR [rsp+0xb0]
   17c71:	mov    DWORD PTR [r14+0x2e8],eax
   17c78:	mov    rdi,QWORD PTR [rsp+0xb8]
   17c80:	lea    rdx,[r14+0x2f0]
   17c87:	lea    rsi,[rip+0x17a18]        # 2f6a6 <__func__.10421+0x131e>
   17c8e:	xor    ecx,ecx
   17c90:	call   c230 <xlu_cfg_replace_string@plt>
   17c95:	mov    rdi,QWORD PTR [rsp+0xb8]
   17c9d:	lea    rdx,[r14+0x2f8]
   17ca4:	lea    rsi,[rip+0x17a05]        # 2f6b0 <__func__.10421+0x1328>
   17cab:	xor    ecx,ecx
   17cad:	call   be20 <xlu_cfg_get_defbool@plt>
   17cb2:	mov    rdi,QWORD PTR [rsp+0xb8]
   17cba:	lea    rdx,[r14+0x300]
   17cc1:	lea    rsi,[rip+0x179ff]        # 2f6c7 <__func__.10421+0x133f>
   17cc8:	xor    ecx,ecx
   17cca:	call   c230 <xlu_cfg_replace_string@plt>
   17ccf:	mov    rdi,QWORD PTR [rsp+0xb8]
   17cd7:	lea    rdx,[r14+0x308]
   17cde:	lea    rsi,[rip+0x179ee]        # 2f6d3 <__func__.10421+0x134b>
   17ce5:	xor    ecx,ecx
   17ce7:	call   be20 <xlu_cfg_get_defbool@plt>
   17cec:	mov    rdi,QWORD PTR [rsp+0xb8]
   17cf4:	lea    rdx,[r14+0x30c]
   17cfb:	lea    rsi,[rip+0x179e2]        # 2f6e4 <__func__.10421+0x135c>
   17d02:	xor    ecx,ecx
   17d04:	call   be20 <xlu_cfg_get_defbool@plt>
   17d09:	mov    rdi,QWORD PTR [rsp+0xb8]
   17d11:	lea    rdx,[r14+0x310]
   17d18:	lea    rsi,[rip+0x179d2]        # 2f6f1 <__func__.10421+0x1369>
   17d1f:	xor    ecx,ecx
   17d21:	call   be20 <xlu_cfg_get_defbool@plt>
   17d26:	mov    rdx,QWORD PTR [rsp+0x30]
   17d2b:	mov    rdi,QWORD PTR [rsp+0xb8]
   17d33:	lea    rsi,[rip+0x179cf]        # 2f709 <__func__.10421+0x1381>
   17d3a:	xor    ecx,ecx
   17d3c:	call   b2c0 <xlu_cfg_get_long@plt>
   17d41:	test   eax,eax
   17d43:	jne    17d54 <parse_config_data+0x3c64>
   17d45:	mov    rax,QWORD PTR [rsp+0xb0]
   17d4d:	mov    DWORD PTR [r14+0x314],eax
   17d54:	mov    rdi,QWORD PTR [rsp+0xb8]
   17d5c:	lea    rdx,[r14+0x318]
   17d63:	lea    rsi,[rip+0x179b3]        # 2f71d <__func__.10421+0x1395>
   17d6a:	xor    ecx,ecx
   17d6c:	call   c230 <xlu_cfg_replace_string@plt>
   17d71:	mov    rdi,QWORD PTR [rsp+0xb8]
   17d79:	lea    rdx,[r14+0x320]
   17d80:	lea    rsi,[rip+0x179ae]        # 2f735 <__func__.10421+0x13ad>
   17d87:	xor    ecx,ecx
   17d89:	call   c230 <xlu_cfg_replace_string@plt>
   17d8e:	mov    rdi,QWORD PTR [rsp+0xb8]
   17d96:	lea    rdx,[r14+0x294]
   17d9d:	lea    rsi,[rip+0x179a7]        # 2f74b <__func__.10421+0x13c3>
   17da4:	xor    ecx,ecx
   17da6:	call   be20 <xlu_cfg_get_defbool@plt>
   17dab:	mov    rdx,QWORD PTR [rsp+0x30]
   17db0:	mov    rdi,QWORD PTR [rsp+0xb8]
   17db8:	lea    rsi,[rip+0x17996]        # 2f755 <__func__.10421+0x13cd>
   17dbf:	mov    ecx,0x1
   17dc4:	call   b2c0 <xlu_cfg_get_long@plt>
   17dc9:	test   eax,eax
   17dcb:	jne    188f0 <parse_config_data+0x4800>
   17dd1:	xor    esi,esi
   17dd3:	cmp    QWORD PTR [rsp+0xb0],0x0
   17ddc:	lea    rdi,[r14+0x328]
   17de3:	setne  sil
   17de7:	call   b140 <libxl_defbool_set@plt>
   17dec:	mov    rdi,QWORD PTR [rsp+0xb8]
   17df4:	lea    rdx,[r14+0x380]
   17dfb:	lea    rsi,[rip+0x17960]        # 2f762 <__func__.10421+0x13da>
   17e02:	mov    ecx,0x1
   17e07:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   17e0c:	cmp    eax,0x3
   17e0f:	je     17e3f <parse_config_data+0x3d4f>
   17e11:	cmp    eax,0x16
   17e14:	jne    18948 <parse_config_data+0x4858>
   17e1a:	mov    rdi,QWORD PTR [rsp+0xb8]
   17e22:	lea    rdx,[r14+0x330]
   17e29:	lea    rsi,[rip+0x17932]        # 2f762 <__func__.10421+0x13da>
   17e30:	xor    ecx,ecx
   17e32:	call   c230 <xlu_cfg_replace_string@plt>
   17e37:	test   eax,eax
   17e39:	jne    18950 <parse_config_data+0x4860>
   17e3f:	mov    rdi,QWORD PTR [rsp+0xb8]
   17e47:	lea    rdx,[r14+0x338]
   17e4e:	lea    rsi,[rip+0x17423]        # 2f278 <__func__.10421+0xef0>
   17e55:	xor    ecx,ecx
   17e57:	call   c230 <xlu_cfg_replace_string@plt>
   17e5c:	mov    rdi,QWORD PTR [rsp+0xb8]
   17e64:	lea    rdx,[r14+0x340]
   17e6b:	lea    rsi,[rip+0x17914]        # 2f786 <__func__.10421+0x13fe>
   17e72:	xor    ecx,ecx
   17e74:	call   be20 <xlu_cfg_get_defbool@plt>
   17e79:	mov    rdx,QWORD PTR [rsp+0x30]
   17e7e:	mov    rdi,QWORD PTR [rsp+0xb8]
   17e86:	lea    rsi,[rip+0x178fd]        # 2f78a <__func__.10421+0x1402>
   17e8d:	xor    ecx,ecx
   17e8f:	call   b2c0 <xlu_cfg_get_long@plt>
   17e94:	test   eax,eax
   17e96:	jne    17ea7 <parse_config_data+0x3db7>
   17e98:	mov    rax,QWORD PTR [rsp+0xb0]
   17ea0:	mov    DWORD PTR [r14+0x344],eax
   17ea7:	mov    rdi,QWORD PTR [rsp+0xb8]
   17eaf:	lea    rdx,[r14+0x360]
   17eb6:	lea    rsi,[rip+0x178d8]        # 2f795 <__func__.10421+0x140d>
   17ebd:	mov    ecx,0x1
   17ec2:	call   bbe0 <xlu_cfg_get_list_as_string_list@plt>
   17ec7:	cmp    eax,0x3
   17eca:	je     17efa <parse_config_data+0x3e0a>
   17ecc:	cmp    eax,0x16
   17ecf:	jne    188bb <parse_config_data+0x47cb>
   17ed5:	mov    rdi,QWORD PTR [rsp+0xb8]
   17edd:	lea    rdx,[r14+0x348]
   17ee4:	lea    rsi,[rip+0x178aa]        # 2f795 <__func__.10421+0x140d>
   17eeb:	xor    ecx,ecx
   17eed:	call   c230 <xlu_cfg_replace_string@plt>
   17ef2:	test   eax,eax
   17ef4:	jne    188c3 <parse_config_data+0x47d3>
   17efa:	mov    rdi,QWORD PTR [rsp+0xb8]
   17f02:	lea    rdx,[r14+0x350]
   17f09:	lea    rsi,[rip+0x1788f]        # 2f79f <__func__.10421+0x1417>
   17f10:	xor    ecx,ecx
   17f12:	call   c230 <xlu_cfg_replace_string@plt>
   17f17:	mov    rdi,QWORD PTR [rsp+0xb8]
   17f1f:	lea    rdx,[r14+0x358]
   17f26:	lea    rsi,[rip+0x1787a]        # 2f7a7 <__func__.10421+0x141f>
   17f2d:	xor    ecx,ecx
   17f2f:	call   be20 <xlu_cfg_get_defbool@plt>
   17f34:	mov    rdi,QWORD PTR [r14+0x2a8]
   17f3b:	test   rdi,rdi
   17f3e:	je     17f5e <parse_config_data+0x3e6e>
   17f40:	mov    ecx,DWORD PTR [r14+0x2b8]
   17f47:	test   ecx,ecx
   17f49:	je     17f5e <parse_config_data+0x3e6e>
   17f4b:	mov    esi,0x3a
   17f50:	call   b1c0 <strchr@plt>
   17f55:	test   rax,rax
   17f58:	jne    1919e <parse_config_data+0x50ae>
   17f5e:	mov    rdx,QWORD PTR [rsp+0x28]
   17f63:	mov    rdi,QWORD PTR [rsp+0xb8]
   17f6b:	lea    rsi,[rip+0x17846]        # 2f7b8 <__func__.10421+0x1430>
   17f72:	xor    ecx,ecx
   17f74:	call   c380 <xlu_cfg_get_string@plt>
   17f79:	test   eax,eax
   17f7b:	jne    1723e <parse_config_data+0x314e>
   17f81:	mov    rsi,QWORD PTR [rsp+0x20]
   17f86:	mov    rdi,QWORD PTR [rsp+0xa8]
   17f8e:	call   c440 <libxl_vendor_device_from_string@plt>
   17f93:	test   eax,eax
   17f95:	jne    18a1c <parse_config_data+0x492c>
   17f9b:	mov    eax,DWORD PTR [rsp+0x168]
   17fa2:	mov    DWORD PTR [r14+0x368],eax
   17fa9:	jmp    1723e <parse_config_data+0x314e>
   17fae:	test   eax,eax
   17fb0:	je     1824d <parse_config_data+0x415d>
   17fb6:	mov    rax,QWORD PTR [rip+0x223033]        # 23aff0 <stderr@GLIBC_2.2.5>
   17fbd:	lea    rdi,[rip+0x18504]        # 304c8 <__func__.10421+0x2140>
   17fc4:	mov    edx,0x2d
   17fc9:	mov    esi,0x1
   17fce:	mov    rcx,QWORD PTR [rax]
   17fd1:	call   c1b0 <fwrite@plt>
   17fd6:	mov    edi,0x3
   17fdb:	call   c1a0 <exit@plt>
   17fe0:	mov    rdx,QWORD PTR [rsp+0xa8]
   17fe8:	mov    rsi,QWORD PTR [rsp+0x20]
   17fed:	mov    rdi,QWORD PTR [rsp+0xb8]
   17ff5:	call   c330 <xlu_rdm_parse@plt>
   17ffa:	test   eax,eax
   17ffc:	jne    168ea <parse_config_data+0x27fa>
   18002:	mov    eax,DWORD PTR [rsp+0x168]
   18009:	mov    DWORD PTR [r14+0x388],eax
   18010:	mov    eax,DWORD PTR [rsp+0x16c]
   18017:	mov    DWORD PTR [r14+0x38c],eax
   1801e:	jmp    168ea <parse_config_data+0x27fa>
   18023:	mov    rdi,QWORD PTR [rsp+0xb8]
   1802b:	lea    rdx,[r14+0x200]
   18032:	lea    rsi,[rip+0x1712d]        # 2f166 <__func__.10421+0xdde>
   18039:	xor    ecx,ecx
   1803b:	call   be20 <xlu_cfg_get_defbool@plt>
   18040:	mov    rdx,QWORD PTR [rsp+0x28]
   18045:	mov    rdi,QWORD PTR [rsp+0xb8]
   1804d:	lea    rsi,[rip+0x17119]        # 2f16d <__func__.10421+0xde5>
   18054:	xor    ecx,ecx
   18056:	call   c380 <xlu_cfg_get_string@plt>
   1805b:	test   eax,eax
   1805d:	jne    1807c <parse_config_data+0x3f8c>
   1805f:	mov    rdi,QWORD PTR [rsp+0xb8]
   18067:	lea    rdx,[r14+0x208]
   1806e:	lea    rsi,[rip+0x170f8]        # 2f16d <__func__.10421+0xde5>
   18075:	xor    ecx,ecx
   18077:	call   c230 <xlu_cfg_replace_string@plt>
   1807c:	mov    rdx,QWORD PTR [rsp+0x28]
   18081:	mov    rdi,QWORD PTR [rsp+0xb8]
   18089:	lea    rsi,[rip+0x170e9]        # 2f179 <__func__.10421+0xdf1>
   18090:	xor    ecx,ecx
   18092:	call   c380 <xlu_cfg_get_string@plt>
   18097:	test   eax,eax
   18099:	jne    180b8 <parse_config_data+0x3fc8>
   1809b:	mov    rdi,QWORD PTR [rsp+0xb8]
   180a3:	lea    rdx,[r14+0x210]
   180aa:	lea    rsi,[rip+0x170c8]        # 2f179 <__func__.10421+0xdf1>
   180b1:	xor    ecx,ecx
   180b3:	call   c230 <xlu_cfg_replace_string@plt>
   180b8:	mov    rdx,QWORD PTR [rsp+0x28]
   180bd:	mov    rdi,QWORD PTR [rsp+0xb8]
   180c5:	lea    rsi,[rip+0x170bc]        # 2f188 <__func__.10421+0xe00>
   180cc:	xor    ecx,ecx
   180ce:	call   c380 <xlu_cfg_get_string@plt>
   180d3:	test   eax,eax
   180d5:	jne    143a5 <parse_config_data+0x2b5>
   180db:	mov    rdi,QWORD PTR [rsp+0xb8]
   180e3:	lea    rdx,[r14+0x218]
   180ea:	lea    rsi,[rip+0x17097]        # 2f188 <__func__.10421+0xe00>
   180f1:	xor    ecx,ecx
   180f3:	call   c230 <xlu_cfg_replace_string@plt>
   180f8:	jmp    143a5 <parse_config_data+0x2b5>
   180fd:	cmp    rax,0x4
   18101:	mov    rcx,r8
   18104:	lea    rdi,[rip+0x17007]        # 2f112 <__func__.10421+0xd8a>
   1810b:	cmovle rcx,rax
   1810f:	mov    rsi,rbx
   18112:	cmp    rcx,rcx
   18115:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   18117:	seta   al
   1811a:	sbb    al,0x0
   1811c:	test   al,al
   1811e:	jne    18a75 <parse_config_data+0x4985>
   18124:	mov    DWORD PTR [r14],0x3
   1812b:	jmp    14290 <parse_config_data+0x1a0>
   18130:	cmp    QWORD PTR [rsp+0x158],0x0
   18139:	jne    14c77 <parse_config_data+0xb87>
   1813f:	jmp    1851d <parse_config_data+0x442d>
   18144:	nop    DWORD PTR [rax+0x0]
   18148:	mov    rax,QWORD PTR [rip+0x222ea1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1814f:	lea    rdi,[rip+0x1808a]        # 301e0 <__func__.10421+0x1e58>
   18156:	mov    edx,0x61
   1815b:	mov    esi,0x1
   18160:	mov    rcx,QWORD PTR [rax]
   18163:	call   c1b0 <fwrite@plt>
   18168:	mov    rdi,QWORD PTR [rsp+0xa8]
   18170:	lea    rsi,[rip+0x171ed]        # 2f364 <__func__.10421+0xfdc>
   18177:	mov    rdx,rbx
   1817a:	call   134e0 <split_string_into_string_list>
   1817f:	jmp    14d2f <parse_config_data+0xc3f>
   18184:	mov    rdi,QWORD PTR [rsp+0xa8]
   1818c:	lea    rsi,[r14+0x208]
   18193:	call   bcf0 <libxl_bios_type_from_string@plt>
   18198:	test   eax,eax
   1819a:	je     1755b <parse_config_data+0x346b>
   181a0:	mov    rcx,QWORD PTR [rsp+0xa8]
   181a8:	lea    rdx,[rip+0x18281]        # 30430 <__func__.10421+0x20a8>
   181af:	jmp    161f9 <parse_config_data+0x2109>
   181b4:	nop    DWORD PTR [rax+0x0]
   181b8:	mov    rax,QWORD PTR [rip+0x222e31]        # 23aff0 <stderr@GLIBC_2.2.5>
   181bf:	lea    rdi,[rip+0x181ba]        # 30380 <__func__.10421+0x1ff8>
   181c6:	mov    edx,0xa8
   181cb:	mov    esi,0x1
   181d0:	mov    rcx,QWORD PTR [rax]
   181d3:	call   c1b0 <fwrite@plt>
   181d8:	mov    QWORD PTR [r14+0x1b0],0x0
   181e3:	jmp    174c9 <parse_config_data+0x33d9>
   181e8:	lea    r8,[rip+0x17178]        # 2f367 <__func__.10421+0xfdf>
   181ef:	mov    r9,r8
   181f2:	mov    rcx,r8
   181f5:	jmp    14d89 <parse_config_data+0xc99>
   181fa:	lea    rsi,[rip+0x1713d]        # 2f33e <__func__.10421+0xfb6>
   18201:	xor    eax,eax
   18203:	call   e8e0 <xasprintf>
   18208:	jmp    14c60 <parse_config_data+0xb70>
   1820d:	test   rcx,rcx
   18210:	je     18515 <parse_config_data+0x4425>
   18216:	mov    rdi,rcx
   18219:	call   c360 <strdup@plt>
   1821e:	mov    QWORD PTR [rsp+0x150],rax
   18226:	jmp    1851d <parse_config_data+0x442d>
   1822b:	lea    rdx,[r14+0x238]
   18232:	lea    rsi,[rip+0x1732a]        # 2f563 <__func__.10421+0x11db>
   18239:	xor    ecx,ecx
   1823b:	call   be20 <xlu_cfg_get_defbool@plt>
   18240:	mov    rdi,QWORD PTR [rsp+0xb8]
   18248:	jmp    168cf <parse_config_data+0x27df>
   1824d:	mov    eax,DWORD PTR [rsp+0xa0]
   18254:	test   eax,eax
   18256:	je     1769d <parse_config_data+0x35ad>
   1825c:	lea    rax,[rip+0x224bfd]        # 23ce60 <ctx>
   18263:	lea    r13,[r14+0x230]
   1826a:	mov    edx,0x40
   1826f:	lea    r12,[r14+0x240]
   18276:	mov    rsi,r13
   18279:	mov    rdi,QWORD PTR [rax]
   1827c:	call   c300 <libxl_bitmap_alloc@plt>
   18281:	lea    rax,[rip+0x224bd8]        # 23ce60 <ctx>
   18288:	mov    edx,0x40
   1828d:	mov    rsi,r12
   18290:	mov    rdi,QWORD PTR [rax]
   18293:	call   c300 <libxl_bitmap_alloc@plt>
   18298:	mov    eax,DWORD PTR [rsp+0xa0]
   1829f:	test   eax,eax
   182a1:	jg     18339 <parse_config_data+0x4249>
   182a7:	jmp    1769d <parse_config_data+0x35ad>
   182ac:	nop    DWORD PTR [rax+0x0]
   182b0:	lea    rdi,[rip+0x17140]        # 2f3f7 <__func__.10421+0x106f>
   182b7:	mov    ecx,0x9
   182bc:	mov    rsi,rax
   182bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   182c1:	seta   dl
   182c4:	sbb    dl,0x0
   182c7:	test   dl,dl
   182c9:	je     186f0 <parse_config_data+0x4600>
   182cf:	cmp    BYTE PTR [rax],0x21
   182d2:	mov    rbx,r12
   182d5:	mov    rdx,r13
   182d8:	jne    182ec <parse_config_data+0x41fc>
   182da:	add    rax,0x1
   182de:	mov    rbx,r13
   182e1:	mov    rdx,r12
   182e4:	mov    QWORD PTR [rsp+0xa8],rax
   182ec:	mov    rsi,QWORD PTR [rsp+0x20]
   182f1:	mov    rdi,rax
   182f4:	mov    QWORD PTR [rsp+0x10],rdx
   182f9:	call   b8e0 <libxl_viridian_enlightenment_from_string@plt>
   182fe:	test   eax,eax
   18300:	mov    rdx,QWORD PTR [rsp+0x10]
   18305:	jne    18cf8 <parse_config_data+0x4c08>
   1830b:	mov    esi,DWORD PTR [rsp+0x168]
   18312:	mov    rdi,rdx
   18315:	call   b7d0 <libxl_bitmap_set@plt>
   1831a:	mov    esi,DWORD PTR [rsp+0x168]
   18321:	mov    rdi,rbx
   18324:	call   ace0 <libxl_bitmap_reset@plt>
   18329:	add    ebp,0x1
   1832c:	cmp    DWORD PTR [rsp+0xa0],ebp
   18333:	jle    1769d <parse_config_data+0x35ad>
   18339:	mov    rdi,QWORD PTR [rsp+0x130]
   18341:	mov    esi,ebp
   18343:	call   ad60 <xlu_cfg_get_listitem@plt>
   18348:	lea    rdi,[rip+0x15dac]        # 2e0fb <__PRETTY_FUNCTION__.10113+0x44e3>
   1834f:	mov    QWORD PTR [rsp+0xa8],rax
   18357:	mov    ecx,0x4
   1835c:	mov    rsi,rax
   1835f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   18361:	seta   dl
   18364:	sbb    dl,0x0
   18367:	test   dl,dl
   18369:	jne    182b0 <parse_config_data+0x41c0>
   1836f:	mov    edx,DWORD PTR [r14+0x230]
   18376:	mov    rdi,QWORD PTR [r14+0x238]
   1837d:	mov    esi,0xffffffff
   18382:	call   b400 <memset@plt>
   18387:	jmp    18329 <parse_config_data+0x4239>
   18389:	cmp    QWORD PTR [r14+0x1b0],0x0
   18391:	jne    14eaf <parse_config_data+0xdbf>
   18397:	mov    rax,QWORD PTR [rip+0x222c52]        # 23aff0 <stderr@GLIBC_2.2.5>
   1839e:	lea    rdi,[rip+0x1832b]        # 306d0 <__func__.10421+0x2348>
   183a5:	mov    edx,0x28
   183aa:	mov    esi,0x1
   183af:	mov    rcx,QWORD PTR [rax]
   183b2:	call   c1b0 <fwrite@plt>
   183b7:	mov    edi,0x1
   183bc:	call   c1a0 <exit@plt>
   183c1:	nop    DWORD PTR [rax+0x0]
   183c8:	mov    rdi,QWORD PTR [rsp+0xb8]
   183d0:	lea    rdx,[r14+0x130]
   183d7:	lea    rsi,[rip+0x18a2a]        # 30e08 <__func__.10421+0x2a80>
   183de:	xor    ecx,ecx
   183e0:	call   c230 <xlu_cfg_replace_string@plt>
   183e5:	jmp    1713f <parse_config_data+0x304f>
   183ea:	lea    rdi,[rip+0x171fe]        # 2f5ef <__func__.10421+0x1267>
   183f1:	mov    ecx,0x9
   183f6:	mov    rsi,rax
   183f9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   183fb:	seta   dl
   183fe:	sbb    dl,0x0
   18401:	test   dl,dl
   18403:	jne    18ce9 <parse_config_data+0x4bf9>
   18409:	mov    DWORD PTR [r14+0x118],0x2
   18414:	jmp    170ff <parse_config_data+0x300f>
   18419:	mov    rax,QWORD PTR [rip+0x222bd0]        # 23aff0 <stderr@GLIBC_2.2.5>
   18420:	lea    rdi,[rip+0x18101]        # 30528 <__func__.10421+0x21a0>
   18427:	mov    edx,0x4c
   1842c:	mov    esi,0x1
   18431:	mov    rcx,QWORD PTR [rax]
   18434:	call   c1b0 <fwrite@plt>
   18439:	jmp    17712 <parse_config_data+0x3622>
   1843e:	mov    rax,QWORD PTR [rip+0x222bab]        # 23aff0 <stderr@GLIBC_2.2.5>
   18445:	lea    rdi,[rip+0x187ec]        # 30c38 <__func__.10421+0x28b0>
   1844c:	mov    edx,0x85
   18451:	mov    esi,0x1
   18456:	mov    rcx,QWORD PTR [rax]
   18459:	call   c1b0 <fwrite@plt>
   1845e:	mov    rdi,QWORD PTR [rsp+0xa8]
   18466:	lea    rsi,[rip+0x17137]        # 2f5a4 <__func__.10421+0x121c>
   1846d:	call   c4b0 <strstr@plt>
   18472:	test   rax,rax
   18475:	je     1708d <parse_config_data+0x2f9d>
   1847b:	cmp    DWORD PTR [r14],0x1
   1847f:	mov    rax,QWORD PTR [rip+0x222b6a]        # 23aff0 <stderr@GLIBC_2.2.5>
   18486:	mov    rcx,QWORD PTR [rax]
   18489:	je     184fa <parse_config_data+0x440a>
   1848b:	lea    rdi,[rip+0x18886]        # 30d18 <__func__.10421+0x2990>
   18492:	mov    edx,0x4c
   18497:	mov    esi,0x1
   1849c:	call   c1b0 <fwrite@plt>
   184a1:	jmp    1708d <parse_config_data+0x2f9d>
   184a6:	mov    r12,r13
   184a9:	jmp    1739c <parse_config_data+0x32ac>
   184ae:	lea    rdi,[r15+0x1]
   184b2:	xor    esi,esi
   184b4:	mov    edx,0xa
   184b9:	call   b7b0 <strtol@plt>
   184be:	xor    esi,esi
   184c0:	lea    rdi,[rbp+0x3c]
   184c4:	test   eax,eax
   184c6:	setne  sil
   184ca:	call   b140 <libxl_defbool_set@plt>
   184cf:	jmp    16bfd <parse_config_data+0x2b0d>
   184d4:	lea    rdi,[r15+0x1]
   184d8:	xor    esi,esi
   184da:	mov    edx,0xa
   184df:	call   b7b0 <strtol@plt>
   184e4:	xor    esi,esi
   184e6:	lea    rdi,[rbp+0x38]
   184ea:	test   eax,eax
   184ec:	setne  sil
   184f0:	call   b140 <libxl_defbool_set@plt>
   184f5:	jmp    16bfd <parse_config_data+0x2b0d>
   184fa:	lea    rdi,[rip+0x187bf]        # 30cc0 <__func__.10421+0x2938>
   18501:	mov    edx,0x56
   18506:	mov    esi,0x1
   1850b:	call   c1b0 <fwrite@plt>
   18510:	jmp    1708d <parse_config_data+0x2f9d>
   18515:	mov    rax,QWORD PTR [rsp+0x150]
   1851d:	cmp    QWORD PTR [rsp+0x160],0x0
   18526:	jne    14c77 <parse_config_data+0xb87>
   1852c:	jmp    14c80 <parse_config_data+0xb90>
   18531:	nop    DWORD PTR [rax+0x0]
   18538:	mov    DWORD PTR [r14+0x298],0x2
   18543:	jmp    17ba7 <parse_config_data+0x3ab7>
   18548:	cmp    DWORD PTR [r14+0x58],0x0
   1854d:	jne    155b9 <parse_config_data+0x14c9>
   18553:	mov    QWORD PTR [rsp+0x40],0x0
   1855c:	xor    r15d,r15d
   1855f:	lea    rax,[rip+0x2248fa]        # 23ce60 <ctx>
   18566:	mov    rdi,QWORD PTR [rax]
   18569:	call   aff0 <libxl_get_online_cpus@plt>
   1856e:	test   eax,eax
   18570:	js     18d0c <parse_config_data+0x4c1c>
   18576:	cdqe   
   18578:	cmp    rax,r15
   1857b:	jb     1900a <parse_config_data+0x4f1a>
   18581:	mov    DWORD PTR [r14+0x58],r15d
   18585:	mov    rax,QWORD PTR [r14+0xb8]
   1858c:	cmp    rax,0xffffffffffffffff
   18590:	je     1859d <parse_config_data+0x44ad>
   18592:	cmp    rax,QWORD PTR [rsp+0x40]
   18597:	jne    18d36 <parse_config_data+0x4c46>
   1859d:	mov    rax,QWORD PTR [rsp+0x40]
   185a2:	mov    QWORD PTR [r14+0xb8],rax
   185a9:	mov    eax,DWORD PTR [r14+0x100]
   185b0:	test   eax,eax
   185b2:	jle    185fd <parse_config_data+0x450d>
   185b4:	mov    rbx,QWORD PTR [rsp+0x58]
   185b9:	mov    r12d,DWORD PTR [rsp+0x7c]
   185be:	xor    ebp,ebp
   185c0:	lea    rax,[rip+0x224899]        # 23ce60 <ctx>
   185c7:	mov    rsi,QWORD PTR [r14+0x108]
   185ce:	mov    rdx,rbx
   185d1:	add    r12d,0x1
   185d5:	mov    rdi,QWORD PTR [rax]
   185d8:	add    rsi,rbp
   185db:	add    rbp,0x30
   185df:	add    rsi,0x20
   185e3:	call   b3a0 <libxl_bitmap_copy_alloc@plt>
   185e8:	mov    rdi,rbx
   185eb:	add    rbx,0x10
   185ef:	call   bdb0 <libxl_bitmap_dispose@plt>
   185f4:	cmp    r12d,DWORD PTR [r14+0x100]
   185fb:	jl     185c0 <parse_config_data+0x44d0>
   185fd:	mov    rdi,QWORD PTR [rsp+0x58]
   18602:	call   ac40 <free@plt>
   18607:	jmp    146ca <parse_config_data+0x5da>
   1860c:	mov    rdi,QWORD PTR [rsp+0xa8]
   18614:	mov    QWORD PTR [rsp+0x168],0x0
   18620:	call   c360 <strdup@plt>
   18625:	mov    rdx,QWORD PTR [rsp+0x20]
   1862a:	lea    rsi,[rip+0x15aba]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   18631:	mov    rdi,rax
   18634:	mov    rbx,rax
   18637:	call   b580 <strtok_r@plt>
   1863c:	test   rax,rax
   1863f:	je     19319 <parse_config_data+0x5229>
   18645:	lea    rdi,[rip+0x11bd0]        # 2a21c <__PRETTY_FUNCTION__.10113+0x604>
   1864c:	mov    rsi,rax
   1864f:	mov    ecx,0x5
   18654:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   18656:	seta   al
   18659:	sbb    al,0x0
   1865b:	test   al,al
   1865d:	je     19228 <parse_config_data+0x5138>
   18663:	mov    rax,QWORD PTR [rip+0x222986]        # 23aff0 <stderr@GLIBC_2.2.5>
   1866a:	mov    rcx,QWORD PTR [rsp+0xa8]
   18672:	lea    rdx,[rip+0x18547]        # 30bc0 <__func__.10421+0x2838>
   18679:	mov    esi,0x1
   1867e:	mov    rdi,QWORD PTR [rax]
   18681:	xor    eax,eax
   18683:	call   c1e0 <__fprintf_chk@plt>
   18688:	mov    rax,QWORD PTR [rip+0x222961]        # 23aff0 <stderr@GLIBC_2.2.5>
   1868f:	lea    rdi,[rip+0x18552]        # 30be8 <__func__.10421+0x2860>
   18696:	mov    edx,0x23
   1869b:	mov    esi,0x1
   186a0:	mov    rcx,QWORD PTR [rax]
   186a3:	call   c1b0 <fwrite@plt>
   186a8:	mov    rdi,rbx
   186ab:	call   ac40 <free@plt>
   186b0:	jmp    1706a <parse_config_data+0x2f7a>
   186b5:	nop    DWORD PTR [rax]
   186b8:	cmp    BYTE PTR [rbx+0x24],0x0
   186bc:	je     1738c <parse_config_data+0x329c>
   186c2:	mov    rax,QWORD PTR [rip+0x222927]        # 23aff0 <stderr@GLIBC_2.2.5>
   186c9:	lea    rdi,[rip+0x18910]        # 30fe0 <__func__.10421+0x2c58>
   186d0:	mov    edx,0x6a
   186d5:	mov    esi,0x1
   186da:	mov    rcx,QWORD PTR [rax]
   186dd:	call   c1b0 <fwrite@plt>
   186e2:	mov    rdi,rbp
   186e5:	call   ac40 <free@plt>
   186ea:	jmp    1620f <parse_config_data+0x211f>
   186ef:	nop
   186f0:	lea    rdi,[r14+0x228]
   186f7:	mov    esi,0x1
   186fc:	call   b140 <libxl_defbool_set@plt>
   18701:	jmp    18329 <parse_config_data+0x4239>
   18706:	cmp    rax,0x5
   1870a:	mov    rcx,r9
   1870d:	lea    rdi,[rip+0x16c98]        # 2f3ac <__func__.10421+0x1024>
   18714:	cmovle rcx,rax
   18718:	mov    rsi,rbx
   1871b:	cmp    rcx,rcx
   1871e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   18720:	seta   al
   18723:	sbb    al,0x0
   18725:	test   al,al
   18727:	je     14eb7 <parse_config_data+0xdc7>
   1872d:	lea    rsi,[rip+0x16cf5]        # 2f429 <__func__.10421+0x10a1>
   18734:	mov    rdi,r8
   18737:	xor    ecx,ecx
   18739:	mov    rdx,r15
   1873c:	call   c230 <xlu_cfg_replace_string@plt>
   18741:	mov    r8,QWORD PTR [rsp+0xb8]
   18749:	jmp    14eb7 <parse_config_data+0xdc7>
   1874e:	xchg   ax,ax
   18750:	mov    rdx,QWORD PTR [rsp+0x30]
   18755:	lea    rsi,[rip+0x16220]        # 2e97c <__func__.10421+0x5f4>
   1875c:	xor    ecx,ecx
   1875e:	call   b2c0 <xlu_cfg_get_long@plt>
   18763:	test   eax,eax
   18765:	jne    17217 <parse_config_data+0x3127>
   1876b:	cmp    QWORD PTR [rsp+0xb0],0x0
   18774:	je     17217 <parse_config_data+0x3127>
   1877a:	mov    r12d,DWORD PTR [r14+0x400]
   18781:	mov    rdi,QWORD PTR [r14+0x408]
   18788:	lea    eax,[r12+0x1]
   1878d:	mov    DWORD PTR [r14+0x400],eax
   18794:	cdqe   
   18796:	imul   rbp,rax,0x58
   1879a:	lea    rbx,[rbp-0x58]
   1879e:	mov    rsi,rbp
   187a1:	call   ea30 <xrealloc>
   187a6:	lea    rdi,[rax+rbx*1]
   187aa:	mov    QWORD PTR [r14+0x408],rax
   187b1:	call   bb00 <libxl_device_vfb_init@plt>
   187b6:	mov    rax,QWORD PTR [r14+0x408]
   187bd:	mov    DWORD PTR [rax+rbp*1-0x48],r12d
   187c2:	mov    r12d,DWORD PTR [r14+0x410]
   187c9:	mov    rdi,QWORD PTR [r14+0x418]
   187d0:	add    rbx,QWORD PTR [r14+0x408]
   187d7:	lea    eax,[r12+0x1]
   187dc:	mov    DWORD PTR [r14+0x410],eax
   187e3:	cdqe   
   187e5:	shl    rax,0x6
   187e9:	mov    rbp,rax
   187ec:	mov    rsi,rax
   187ef:	call   ea30 <xrealloc>
   187f4:	lea    rdi,[rax+rbp*1-0x40]
   187f9:	mov    QWORD PTR [r14+0x418],rax
   18800:	call   bff0 <libxl_device_vkb_init@plt>
   18805:	mov    rax,QWORD PTR [r14+0x418]
   1880c:	mov    rdi,QWORD PTR [rsp+0xb8]
   18814:	lea    rsi,[rbx+0x18]
   18818:	mov    DWORD PTR [rax+rbp*1-0x30],r12d
   1881d:	call   11620 <parse_top_level_vnc_options>
   18822:	mov    rdi,QWORD PTR [rsp+0xb8]
   1882a:	lea    rsi,[rbx+0x38]
   1882e:	call   115b0 <parse_top_level_sdl_options>
   18833:	mov    rdi,QWORD PTR [rsp+0xb8]
   1883b:	lea    rdx,[rbx+0x50]
   1883f:	lea    rsi,[rip+0x16cee]        # 2f534 <__func__.10421+0x11ac>
   18846:	xor    ecx,ecx
   18848:	call   c230 <xlu_cfg_replace_string@plt>
   1884d:	jmp    17217 <parse_config_data+0x3127>
   18852:	nop    WORD PTR [rax+rax*1+0x0]
   18858:	mov    rdi,QWORD PTR [rbp+0x40]
   1885c:	call   ac40 <free@plt>
   18861:	lea    rdi,[r15+0x1]
   18865:	call   c360 <strdup@plt>
   1886a:	mov    QWORD PTR [rbp+0x40],rax
   1886e:	jmp    16bfd <parse_config_data+0x2b0d>
   18873:	mov    rax,QWORD PTR [rsp+0x140]
   1887b:	lea    rdx,[rip+0x18176]        # 309f8 <__func__.10421+0x2670>
   18882:	mov    rcx,QWORD PTR [rax+rbx*1]
   18886:	jmp    161f9 <parse_config_data+0x2109>
   1888b:	mov    rdi,r12
   1888e:	call   ac40 <free@plt>
   18893:	mov    edi,0x1
   18898:	call   c1a0 <exit@plt>
   1889d:	mov    rcx,rbx
   188a0:	lea    rdx,[rip+0x18089]        # 30930 <__func__.10421+0x25a8>
   188a7:	jmp    161f9 <parse_config_data+0x2109>
   188ac:	mov    rcx,rbx
   188af:	lea    rdx,[rip+0x1809a]        # 30950 <__func__.10421+0x25c8>
   188b6:	jmp    161f9 <parse_config_data+0x2109>
   188bb:	test   eax,eax
   188bd:	je     17efa <parse_config_data+0x3e0a>
   188c3:	mov    rax,QWORD PTR [rip+0x222726]        # 23aff0 <stderr@GLIBC_2.2.5>
   188ca:	lea    rdi,[rip+0x1863f]        # 30f10 <__func__.10421+0x2b88>
   188d1:	mov    edx,0x1f
   188d6:	mov    esi,0x1
   188db:	mov    rcx,QWORD PTR [rax]
   188de:	call   c1b0 <fwrite@plt>
   188e3:	mov    edi,0x3
   188e8:	call   c1a0 <exit@plt>
   188ed:	nop    DWORD PTR [rax]
   188f0:	mov    rdx,QWORD PTR [rsp+0x28]
   188f5:	mov    rdi,QWORD PTR [rsp+0xb8]
   188fd:	lea    rsi,[rip+0x16e51]        # 2f755 <__func__.10421+0x13cd>
   18904:	xor    ecx,ecx
   18906:	call   c380 <xlu_cfg_get_string@plt>
   1890b:	test   eax,eax
   1890d:	jne    17dec <parse_config_data+0x3cfc>
   18913:	mov    rdi,QWORD PTR [rsp+0xa8]
   1891b:	lea    rsi,[r14+0x32c]
   18922:	call   b7f0 <libxl_gfx_passthru_kind_from_string@plt>
   18927:	test   eax,eax
   18929:	jne    18d83 <parse_config_data+0x4c93>
   1892f:	lea    rdi,[r14+0x328]
   18936:	mov    esi,0x1
   1893b:	call   b140 <libxl_defbool_set@plt>
   18940:	jmp    17dec <parse_config_data+0x3cfc>
   18945:	nop    DWORD PTR [rax]
   18948:	test   eax,eax
   1894a:	je     17e3f <parse_config_data+0x3d4f>
   18950:	mov    rax,QWORD PTR [rip+0x222699]        # 23aff0 <stderr@GLIBC_2.2.5>
   18957:	lea    rdi,[rip+0x16e0b]        # 2f769 <__func__.10421+0x13e1>
   1895e:	mov    edx,0x1c
   18963:	mov    esi,0x1
   18968:	mov    rcx,QWORD PTR [rax]
   1896b:	call   c1b0 <fwrite@plt>
   18970:	mov    edi,0x3
   18975:	call   c1a0 <exit@plt>
   1897a:	nop    WORD PTR [rax+rax*1+0x0]
   18980:	mov    rdx,QWORD PTR [rsp+0x30]
   18985:	mov    rdi,QWORD PTR [rsp+0xb8]
   1898d:	lea    rsi,[rip+0x16cbf]        # 2f653 <__func__.10421+0x12cb>
   18994:	xor    ecx,ecx
   18996:	call   b2c0 <xlu_cfg_get_long@plt>
   1899b:	test   eax,eax
   1899d:	jne    17ba7 <parse_config_data+0x3ab7>
   189a3:	cmp    QWORD PTR [rsp+0xb0],0x1
   189ac:	sbb    eax,eax
   189ae:	add    eax,0x2
   189b1:	mov    DWORD PTR [r14+0x298],eax
   189b8:	jmp    17ba7 <parse_config_data+0x3ab7>
   189bd:	nop    DWORD PTR [rax]
   189c0:	lea    rax,[rip+0x224499]        # 23ce60 <ctx>
   189c7:	lea    rsi,[r14+0x36c]
   189ce:	mov    rdi,QWORD PTR [rax]
   189d1:	call   b500 <libxl_ms_vm_genid_generate@plt>
   189d6:	test   eax,eax
   189d8:	je     177b0 <parse_config_data+0x36c0>
   189de:	mov    rax,QWORD PTR [rip+0x22260b]        # 23aff0 <stderr@GLIBC_2.2.5>
   189e5:	lea    rdi,[rip+0x17b8c]        # 30578 <__func__.10421+0x21f0>
   189ec:	mov    edx,0x2d
   189f1:	mov    esi,0x1
   189f6:	mov    rcx,QWORD PTR [rax]
   189f9:	call   c1b0 <fwrite@plt>
   189fe:	mov    edi,0x1
   18a03:	call   c1a0 <exit@plt>
   18a08:	mov    rcx,QWORD PTR [rsp+0xa8]
   18a10:	lea    rdx,[rip+0x184a1]        # 30eb8 <__func__.10421+0x2b30>
   18a17:	jmp    161f9 <parse_config_data+0x2109>
   18a1c:	mov    rcx,QWORD PTR [rsp+0xa8]
   18a24:	lea    rdx,[rip+0x18545]        # 30f70 <__func__.10421+0x2be8>
   18a2b:	mov    rax,QWORD PTR [rip+0x2225be]        # 23aff0 <stderr@GLIBC_2.2.5>
   18a32:	mov    esi,0x1
   18a37:	mov    rdi,QWORD PTR [rax]
   18a3a:	xor    eax,eax
   18a3c:	call   c1e0 <__fprintf_chk@plt>
   18a41:	mov    edi,0x3
   18a46:	call   c1a0 <exit@plt>
   18a4b:	mov    rax,QWORD PTR [rip+0x22259e]        # 23aff0 <stderr@GLIBC_2.2.5>
   18a52:	lea    rdi,[rip+0x16ddf]        # 2f838 <__func__.10421+0x14b0>
   18a59:	mov    edx,0x20
   18a5e:	mov    esi,0x1
   18a63:	mov    rcx,QWORD PTR [rax]
   18a66:	call   c1b0 <fwrite@plt>
   18a6b:	mov    edi,0x1
   18a70:	call   c1a0 <exit@plt>
   18a75:	mov    rcx,rbx
   18a78:	lea    rdx,[rip+0x16697]        # 2f116 <__func__.10421+0xd8e>
   18a7f:	jmp    161f9 <parse_config_data+0x2109>
   18a84:	mov    rax,QWORD PTR [rip+0x222565]        # 23aff0 <stderr@GLIBC_2.2.5>
   18a8b:	lea    rdi,[rip+0x1731e]        # 2fdb0 <__func__.10421+0x1a28>
   18a92:	mov    edx,0x36
   18a97:	mov    esi,0x1
   18a9c:	mov    rcx,QWORD PTR [rax]
   18a9f:	call   c1b0 <fwrite@plt>
   18aa4:	mov    edi,0x1
   18aa9:	call   c1a0 <exit@plt>
   18aae:	mov    rcx,r13
   18ab1:	lea    rdx,[rip+0x169d4]        # 2f48c <__func__.10421+0x1104>
   18ab8:	jmp    161f9 <parse_config_data+0x2109>
   18abd:	mov    rcx,rax
   18ac0:	lea    rdx,[rip+0x17ce1]        # 307a8 <__func__.10421+0x2420>
   18ac7:	jmp    161f9 <parse_config_data+0x2109>
   18acc:	lea    rdx,[rip+0x17ca5]        # 30778 <__func__.10421+0x23f0>
   18ad3:	mov    ecx,ebx
   18ad5:	mov    rax,QWORD PTR [rip+0x222514]        # 23aff0 <stderr@GLIBC_2.2.5>
   18adc:	mov    esi,0x1
   18ae1:	mov    rdi,QWORD PTR [rax]
   18ae4:	xor    eax,eax
   18ae6:	call   c1e0 <__fprintf_chk@plt>
   18aeb:	jmp    1620f <parse_config_data+0x211f>
   18af0:	mov    rax,QWORD PTR [rip+0x2224f9]        # 23aff0 <stderr@GLIBC_2.2.5>
   18af7:	lea    rdi,[rip+0x17c52]        # 30750 <__func__.10421+0x23c8>
   18afe:	mov    edx,0x26
   18b03:	mov    esi,0x1
   18b08:	mov    rcx,QWORD PTR [rax]
   18b0b:	call   c1b0 <fwrite@plt>
   18b10:	or     edi,0xffffffff
   18b13:	call   c1a0 <exit@plt>
   18b18:	lea    rdx,[rip+0x17be1]        # 30700 <__func__.10421+0x2378>
   18b1f:	jmp    161f9 <parse_config_data+0x2109>
   18b24:	mov    rax,QWORD PTR [rip+0x2224c5]        # 23aff0 <stderr@GLIBC_2.2.5>
   18b2b:	lea    rdi,[rip+0x17b3e]        # 30670 <__func__.10421+0x22e8>
   18b32:	mov    edx,0x38
   18b37:	mov    esi,0x1
   18b3c:	mov    rcx,QWORD PTR [rax]
   18b3f:	call   c1b0 <fwrite@plt>
   18b44:	mov    edi,0x1
   18b49:	call   c1a0 <exit@plt>
   18b4e:	mov    rax,QWORD PTR [rip+0x22249b]        # 23aff0 <stderr@GLIBC_2.2.5>
   18b55:	lea    rdi,[rip+0x17ae4]        # 30640 <__func__.10421+0x22b8>
   18b5c:	mov    edx,0x2a
   18b61:	mov    esi,0x1
   18b66:	mov    rcx,QWORD PTR [rax]
   18b69:	call   c1b0 <fwrite@plt>
   18b6e:	mov    edi,0x1
   18b73:	call   c1a0 <exit@plt>
   18b78:	call   ad50 <abort@plt>
   18b7d:	lea    rdx,[rip+0x1779c]        # 30320 <__func__.10421+0x1f98>
   18b84:	jmp    161f9 <parse_config_data+0x2109>
   18b89:	mov    rax,QWORD PTR [rip+0x222460]        # 23aff0 <stderr@GLIBC_2.2.5>
   18b90:	lea    rdi,[rip+0x176d9]        # 30270 <__func__.10421+0x1ee8>
   18b97:	mov    edx,0x3b
   18b9c:	mov    esi,0x1
   18ba1:	mov    rcx,QWORD PTR [rax]
   18ba4:	call   c1b0 <fwrite@plt>
   18ba9:	mov    edi,0x3
   18bae:	call   c1a0 <exit@plt>
   18bb3:	mov    rax,QWORD PTR [rip+0x222436]        # 23aff0 <stderr@GLIBC_2.2.5>
   18bba:	lea    rdi,[rip+0x175f7]        # 301b8 <__func__.10421+0x1e30>
   18bc1:	mov    edx,0x26
   18bc6:	mov    esi,0x1
   18bcb:	mov    rcx,QWORD PTR [rax]
   18bce:	call   c1b0 <fwrite@plt>
   18bd3:	mov    edi,0x1
   18bd8:	call   c1a0 <exit@plt>
   18bdd:	mov    rcx,QWORD PTR [rsp+0xa8]
   18be5:	lea    rdx,[rip+0x1721c]        # 2fe08 <__func__.10421+0x1a80>
   18bec:	jmp    161f9 <parse_config_data+0x2109>
   18bf1:	mov    rcx,QWORD PTR [rsp+0xa8]
   18bf9:	lea    rdx,[rip+0x17410]        # 30010 <__func__.10421+0x1c88>
   18c00:	jmp    161f9 <parse_config_data+0x2109>
   18c05:	mov    rax,QWORD PTR [rip+0x2223e4]        # 23aff0 <stderr@GLIBC_2.2.5>
   18c0c:	lea    rdi,[rip+0x165b3]        # 2f1c6 <__func__.10421+0xe3e>
   18c13:	mov    edx,0x1a
   18c18:	mov    esi,0x1
   18c1d:	mov    rcx,QWORD PTR [rax]
   18c20:	call   c1b0 <fwrite@plt>
   18c25:	mov    edi,0x1
   18c2a:	call   c1a0 <exit@plt>
   18c2f:	mov    rcx,QWORD PTR [rsp+0xa8]
   18c37:	lea    rdx,[rip+0x1650a]        # 2f148 <__func__.10421+0xdc0>
   18c3e:	jmp    161f9 <parse_config_data+0x2109>
   18c43:	mov    rax,QWORD PTR [rip+0x2223a6]        # 23aff0 <stderr@GLIBC_2.2.5>
   18c4a:	lea    rdi,[rip+0x10dff]        # 29a50 <_IO_stdin_used+0x310>
   18c51:	mov    edx,0x25
   18c56:	mov    esi,0x1
   18c5b:	mov    rcx,QWORD PTR [rax]
   18c5e:	call   c1b0 <fwrite@plt>
   18c63:	mov    edi,0x1
   18c68:	call   c1a0 <exit@plt>
   18c6d:	mov    edi,eax
   18c6f:	call   c3b0 <strerror@plt>
   18c74:	lea    rdx,[rip+0x1646d]        # 2f0e8 <__func__.10421+0xd60>
   18c7b:	mov    rcx,rax
   18c7e:	jmp    161f9 <parse_config_data+0x2109>
   18c83:	mov    rcx,QWORD PTR [rsp+0xa8]
   18c8b:	lea    rdx,[rip+0x17356]        # 2ffe8 <__func__.10421+0x1c60>
   18c92:	jmp    161f9 <parse_config_data+0x2109>
   18c97:	mov    rax,QWORD PTR [rip+0x222352]        # 23aff0 <stderr@GLIBC_2.2.5>
   18c9e:	lea    rdi,[rip+0x165a2]        # 2f247 <__func__.10421+0xebf>
   18ca5:	mov    edx,0x15
   18caa:	mov    esi,0x1
   18caf:	mov    rcx,QWORD PTR [rax]
   18cb2:	call   c1b0 <fwrite@plt>
   18cb7:	mov    edi,0x1
   18cbc:	call   c1a0 <exit@plt>
   18cc1:	mov    rcx,QWORD PTR [rsp+0xa8]
   18cc9:	lea    rdx,[rip+0x17288]        # 2ff58 <__func__.10421+0x1bd0>
   18cd0:	jmp    161f9 <parse_config_data+0x2109>
   18cd5:	mov    rcx,QWORD PTR [rsp+0xa8]
   18cdd:	lea    rdx,[rip+0x172a4]        # 2ff88 <__func__.10421+0x1c00>
   18ce4:	jmp    161f9 <parse_config_data+0x2109>
   18ce9:	mov    rcx,rax
   18cec:	lea    rdx,[rip+0x18075]        # 30d68 <__func__.10421+0x29e0>
   18cf3:	jmp    161f9 <parse_config_data+0x2109>
   18cf8:	mov    rcx,QWORD PTR [rsp+0xa8]
   18d00:	lea    rdx,[rip+0x17791]        # 30498 <__func__.10421+0x2110>
   18d07:	jmp    18a2b <parse_config_data+0x493b>
   18d0c:	mov    rax,QWORD PTR [rip+0x2222dd]        # 23aff0 <stderr@GLIBC_2.2.5>
   18d13:	lea    rdi,[rip+0x16512]        # 2f22c <__func__.10421+0xea4>
   18d1a:	mov    edx,0x1a
   18d1f:	mov    esi,0x1
   18d24:	mov    rcx,QWORD PTR [rax]
   18d27:	call   c1b0 <fwrite@plt>
   18d2c:	mov    edi,0x1
   18d31:	call   c1a0 <exit@plt>
   18d36:	mov    rax,QWORD PTR [rip+0x2222b3]        # 23aff0 <stderr@GLIBC_2.2.5>
   18d3d:	lea    rdi,[rip+0x171e4]        # 2ff28 <__func__.10421+0x1ba0>
   18d44:	mov    edx,0x2a
   18d49:	mov    esi,0x1
   18d4e:	mov    rcx,QWORD PTR [rax]
   18d51:	call   c1b0 <fwrite@plt>
   18d56:	mov    edi,0x1
   18d5b:	call   c1a0 <exit@plt>
   18d60:	lea    rsi,[rip+0x1538f]        # 2e0f6 <__PRETTY_FUNCTION__.10113+0x44de>
   18d67:	mov    rdi,rbx
   18d6a:	call   b650 <strcmp@plt>
   18d6f:	test   eax,eax
   18d71:	jne    18d97 <parse_config_data+0x4ca7>
   18d73:	mov    DWORD PTR [r14+0x298],0x3
   18d7e:	jmp    17ba7 <parse_config_data+0x3ab7>
   18d83:	mov    rcx,QWORD PTR [rsp+0xa8]
   18d8b:	lea    rdx,[rip+0x1814e]        # 30ee0 <__func__.10421+0x2b58>
   18d92:	jmp    161f9 <parse_config_data+0x2109>
   18d97:	lea    rsi,[rip+0x168c3]        # 2f661 <__func__.10421+0x12d9>
   18d9e:	mov    rdi,rbx
   18da1:	call   b650 <strcmp@plt>
   18da6:	test   eax,eax
   18da8:	jne    18e3a <parse_config_data+0x4d4a>
   18dae:	mov    DWORD PTR [r14+0x298],0x4
   18db9:	jmp    17ba7 <parse_config_data+0x3ab7>
   18dbe:	mov    rcx,QWORD PTR [rsp+0xa8]
   18dc6:	lea    rdx,[rip+0x171eb]        # 2ffb8 <__func__.10421+0x1c30>
   18dcd:	jmp    161f9 <parse_config_data+0x2109>
   18dd2:	mov    rdi,rbx
   18dd5:	call   c070 <libxl_physinfo_dispose@plt>
   18dda:	mov    rax,QWORD PTR [rip+0x22220f]        # 23aff0 <stderr@GLIBC_2.2.5>
   18de1:	lea    rdi,[rip+0x16402]        # 2f1ea <__func__.10421+0xe62>
   18de8:	mov    edx,0x1a
   18ded:	mov    esi,0x1
   18df2:	mov    rcx,QWORD PTR [rax]
   18df5:	call   c1b0 <fwrite@plt>
   18dfa:	mov    edi,0x1
   18dff:	call   c1a0 <exit@plt>
   18e04:	lea    rdx,[rip+0x172a5]        # 300b0 <__func__.10421+0x1d28>
   18e0b:	jmp    161f9 <parse_config_data+0x2109>
   18e10:	mov    rax,QWORD PTR [rip+0x2221d9]        # 23aff0 <stderr@GLIBC_2.2.5>
   18e17:	lea    rdi,[rip+0x16fca]        # 2fde8 <__func__.10421+0x1a60>
   18e1e:	mov    edx,0x1f
   18e23:	mov    esi,0x1
   18e28:	mov    rcx,QWORD PTR [rax]
   18e2b:	call   c1b0 <fwrite@plt>
   18e30:	mov    edi,0x1
   18e35:	call   c1a0 <exit@plt>
   18e3a:	mov    rcx,rbx
   18e3d:	lea    rdx,[rip+0x16821]        # 2f665 <__func__.10421+0x12dd>
   18e44:	jmp    161f9 <parse_config_data+0x2109>
   18e49:	mov    rcx,r12
   18e4c:	lea    rdx,[rip+0x17a5d]        # 308b0 <__func__.10421+0x2528>
   18e53:	jmp    161f9 <parse_config_data+0x2109>
   18e58:	mov    rcx,QWORD PTR [rsp+0xa8]
   18e60:	lea    rdx,[rip+0x17a21]        # 30888 <__func__.10421+0x2500>
   18e67:	jmp    161f9 <parse_config_data+0x2109>
   18e6c:	mov    ecx,ebx
   18e6e:	lea    rdx,[rip+0x179e3]        # 30858 <__func__.10421+0x24d0>
   18e75:	jmp    18ad5 <parse_config_data+0x49e5>
   18e7a:	mov    rax,QWORD PTR [rip+0x22216f]        # 23aff0 <stderr@GLIBC_2.2.5>
   18e81:	lea    rdi,[rip+0x179a8]        # 30830 <__func__.10421+0x24a8>
   18e88:	mov    edx,0x24
   18e8d:	mov    esi,0x1
   18e92:	mov    rcx,QWORD PTR [rax]
   18e95:	call   c1b0 <fwrite@plt>
   18e9a:	or     edi,0xffffffff
   18e9d:	call   c1a0 <exit@plt>
   18ea2:	mov    rcx,rax
   18ea5:	lea    rdx,[rip+0x165fd]        # 2f4a9 <__func__.10421+0x1121>
   18eac:	jmp    161f9 <parse_config_data+0x2109>
   18eb1:	lea    rdx,[rip+0x17950]        # 30808 <__func__.10421+0x2480>
   18eb8:	jmp    161f9 <parse_config_data+0x2109>
   18ebd:	mov    ecx,ebx
   18ebf:	lea    rdx,[rip+0x17912]        # 307d8 <__func__.10421+0x2450>
   18ec6:	jmp    18ad5 <parse_config_data+0x49e5>
   18ecb:	mov    rcx,r15
   18ece:	lea    rdx,[rip+0x17ad3]        # 309a8 <__func__.10421+0x2620>
   18ed5:	jmp    161f9 <parse_config_data+0x2109>
   18eda:	mov    rax,QWORD PTR [rip+0x22210f]        # 23aff0 <stderr@GLIBC_2.2.5>
   18ee1:	lea    rdi,[rip+0x17a90]        # 30978 <__func__.10421+0x25f0>
   18ee8:	mov    edx,0x2c
   18eed:	mov    esi,0x1
   18ef2:	mov    rcx,QWORD PTR [rax]
   18ef5:	call   c1b0 <fwrite@plt>
   18efa:	mov    edi,0x1
   18eff:	call   c1a0 <exit@plt>
   18f04:	mov    rax,QWORD PTR [rip+0x2220e5]        # 23aff0 <stderr@GLIBC_2.2.5>
   18f0b:	lea    rdi,[rip+0x179ee]        # 30900 <__func__.10421+0x2578>
   18f12:	mov    edx,0x2a
   18f17:	mov    esi,0x1
   18f1c:	mov    rcx,QWORD PTR [rax]
   18f1f:	call   c1b0 <fwrite@plt>
   18f24:	mov    edi,0x1
   18f29:	call   c1a0 <exit@plt>
   18f2e:	mov    rax,QWORD PTR [rip+0x2220bb]        # 23aff0 <stderr@GLIBC_2.2.5>
   18f35:	lea    rdi,[rip+0x1799c]        # 308d8 <__func__.10421+0x2550>
   18f3c:	mov    edx,0x22
   18f41:	mov    esi,0x1
   18f46:	mov    rcx,QWORD PTR [rax]
   18f49:	call   c1b0 <fwrite@plt>
   18f4e:	mov    edi,0x1
   18f53:	call   c1a0 <exit@plt>
   18f58:	mov    rcx,rax
   18f5b:	lea    rdx,[rip+0x16f26]        # 2fe88 <__func__.10421+0x1b00>
   18f62:	jmp    161f9 <parse_config_data+0x2109>
   18f67:	mov    rcx,QWORD PTR [rsp+0x130]
   18f6f:	lea    rdx,[rip+0x16eea]        # 2fe60 <__func__.10421+0x1ad8>
   18f76:	jmp    161f9 <parse_config_data+0x2109>
   18f7b:	mov    rax,QWORD PTR [rip+0x22206e]        # 23aff0 <stderr@GLIBC_2.2.5>
   18f82:	lea    rdi,[rip+0x16ea7]        # 2fe30 <__func__.10421+0x1aa8>
   18f89:	mov    edx,0x28
   18f8e:	mov    esi,0x1
   18f93:	mov    rcx,QWORD PTR [rax]
   18f96:	call   c1b0 <fwrite@plt>
   18f9b:	mov    edi,0x1
   18fa0:	call   c1a0 <exit@plt>
   18fa5:	lea    rcx,[rip+0x180e4]        # 31090 <__PRETTY_FUNCTION__.10016>
   18fac:	lea    rsi,[rip+0x15f6f]        # 2ef22 <__func__.10421+0xb9a>
   18fb3:	lea    rdi,[rip+0x16251]        # 2f20b <__func__.10421+0xe83>
   18fba:	mov    edx,0x275
   18fbf:	call   b2f0 <__assert_fail@plt>
   18fc4:	mov    rcx,QWORD PTR [rsp+0xa8]
   18fcc:	lea    rdx,[rip+0x17fbd]        # 30f90 <__func__.10421+0x2c08>
   18fd3:	jmp    18a2b <parse_config_data+0x493b>
   18fd8:	mov    r15d,eax
   18fdb:	mov    rax,QWORD PTR [rip+0x22200e]        # 23aff0 <stderr@GLIBC_2.2.5>
   18fe2:	mov    rcx,QWORD PTR [rsp+0xa8]
   18fea:	lea    rdx,[rip+0x17b4f]        # 30b40 <__func__.10421+0x27b8>
   18ff1:	mov    esi,0x1
   18ff6:	mov    rdi,QWORD PTR [rax]
   18ff9:	xor    eax,eax
   18ffb:	call   c1e0 <__fprintf_chk@plt>
   19000:	mov    edi,r15d
   19003:	neg    edi
   19005:	call   c1a0 <exit@plt>
   1900a:	mov    rax,QWORD PTR [rip+0x221fdf]        # 23aff0 <stderr@GLIBC_2.2.5>
   19011:	lea    rdi,[rip+0x16eb8]        # 2fed0 <__func__.10421+0x1b48>
   19018:	mov    edx,0x51
   1901d:	mov    esi,0x1
   19022:	mov    rcx,QWORD PTR [rax]
   19025:	call   c1b0 <fwrite@plt>
   1902a:	mov    edi,0x1
   1902f:	call   c1a0 <exit@plt>
   19034:	mov    rax,QWORD PTR [rip+0x221fb5]        # 23aff0 <stderr@GLIBC_2.2.5>
   1903b:	lea    rdi,[rip+0x17b2e]        # 30b70 <__func__.10421+0x27e8>
   19042:	mov    edx,0x26
   19047:	mov    esi,0x1
   1904c:	mov    rcx,QWORD PTR [rax]
   1904f:	call   c1b0 <fwrite@plt>
   19054:	or     edi,0xffffffff
   19057:	call   c1a0 <exit@plt>
   1905c:	mov    rax,QWORD PTR [rip+0x221f8d]        # 23aff0 <stderr@GLIBC_2.2.5>
   19063:	lea    rdi,[rip+0x17a3e]        # 30aa8 <__func__.10421+0x2720>
   1906a:	mov    edx,0x2d
   1906f:	mov    esi,0x1
   19074:	mov    rcx,QWORD PTR [rax]
   19077:	call   c1b0 <fwrite@plt>
   1907c:	mov    edi,0x1
   19081:	call   c1a0 <exit@plt>
   19086:	lea    rdx,[rip+0x17a4b]        # 30ad8 <__func__.10421+0x2750>
   1908d:	jmp    18ad5 <parse_config_data+0x49e5>
   19092:	mov    rax,QWORD PTR [rip+0x221f57]        # 23aff0 <stderr@GLIBC_2.2.5>
   19099:	lea    rdi,[rip+0x179e0]        # 30a80 <__func__.10421+0x26f8>
   190a0:	mov    edx,0x21
   190a5:	mov    esi,0x1
   190aa:	mov    rcx,QWORD PTR [rax]
   190ad:	call   c1b0 <fwrite@plt>
   190b2:	mov    edi,0x1
   190b7:	call   c1a0 <exit@plt>
   190bc:	mov    rcx,r8
   190bf:	lea    rdx,[rip+0x17962]        # 30a28 <__func__.10421+0x26a0>
   190c6:	jmp    161f9 <parse_config_data+0x2109>
   190cb:	mov    rcx,rax
   190ce:	lea    rdx,[rip+0x163b7]        # 2f48c <__func__.10421+0x1104>
   190d5:	jmp    161f9 <parse_config_data+0x2109>
   190da:	mov    rcx,QWORD PTR [rsp+0xa8]
   190e2:	lea    rdx,[rip+0x176bf]        # 307a8 <__func__.10421+0x2420>
   190e9:	jmp    161f9 <parse_config_data+0x2109>
   190ee:	mov    rax,QWORD PTR [rip+0x221efb]        # 23aff0 <stderr@GLIBC_2.2.5>
   190f5:	lea    rdi,[rip+0x17ebc]        # 30fb8 <__func__.10421+0x2c30>
   190fc:	mov    edx,0x27
   19101:	mov    esi,0x1
   19106:	mov    rcx,QWORD PTR [rax]
   19109:	call   c1b0 <fwrite@plt>
   1910e:	mov    rdi,rbp
   19111:	call   ac40 <free@plt>
   19116:	jmp    1620f <parse_config_data+0x211f>
   1911b:	mov    rax,QWORD PTR [rip+0x221ece]        # 23aff0 <stderr@GLIBC_2.2.5>
   19122:	lea    rdi,[rip+0x17d5f]        # 30e88 <__func__.10421+0x2b00>
   19129:	mov    edx,0x2b
   1912e:	mov    esi,0x1
   19133:	mov    rcx,QWORD PTR [rax]
   19136:	call   c1b0 <fwrite@plt>
   1913b:	mov    edi,0x3
   19140:	call   c1a0 <exit@plt>
   19145:	mov    rax,QWORD PTR [rip+0x221ea4]        # 23aff0 <stderr@GLIBC_2.2.5>
   1914c:	lea    rdi,[rip+0x17d05]        # 30e58 <__func__.10421+0x2ad0>
   19153:	mov    edx,0x2a
   19158:	mov    esi,0x1
   1915d:	mov    rcx,QWORD PTR [rax]
   19160:	call   c1b0 <fwrite@plt>
   19165:	mov    edi,0x3
   1916a:	call   c1a0 <exit@plt>
   1916f:	mov    rax,QWORD PTR [rip+0x221e7a]        # 23aff0 <stderr@GLIBC_2.2.5>
   19176:	lea    rdi,[rip+0x17cb3]        # 30e30 <__func__.10421+0x2aa8>
   1917d:	mov    edx,0x27
   19182:	mov    esi,0x1
   19187:	mov    rcx,QWORD PTR [rax]
   1918a:	call   c1b0 <fwrite@plt>
   1918f:	mov    edi,0x3
   19194:	call   c1a0 <exit@plt>
   19199:	call   b130 <__stack_chk_fail@plt>
   1919e:	mov    rax,QWORD PTR [rip+0x221e4b]        # 23aff0 <stderr@GLIBC_2.2.5>
   191a5:	lea    rdi,[rip+0x17d84]        # 30f30 <__func__.10421+0x2ba8>
   191ac:	mov    edx,0x3b
   191b1:	mov    esi,0x1
   191b6:	mov    rcx,QWORD PTR [rax]
   191b9:	call   c1b0 <fwrite@plt>
   191be:	mov    edi,0x1
   191c3:	call   c1a0 <exit@plt>
   191c8:	mov    rax,QWORD PTR [rip+0x221e21]        # 23aff0 <stderr@GLIBC_2.2.5>
   191cf:	lea    rdi,[rip+0x17442]        # 30618 <__func__.10421+0x2290>
   191d6:	mov    edx,0x21
   191db:	mov    esi,0x1
   191e0:	mov    rcx,QWORD PTR [rax]
   191e3:	call   c1b0 <fwrite@plt>
   191e8:	mov    edi,0x3
   191ed:	call   c1a0 <exit@plt>
   191f2:	mov    rax,QWORD PTR [rip+0x221df7]        # 23aff0 <stderr@GLIBC_2.2.5>
   191f9:	lea    rdi,[rip+0x173a8]        # 305a8 <__func__.10421+0x2220>
   19200:	mov    edx,0x39
   19205:	mov    esi,0x1
   1920a:	mov    rcx,QWORD PTR [rax]
   1920d:	call   c1b0 <fwrite@plt>
   19212:	mov    edi,0x1
   19217:	call   c1a0 <exit@plt>
   1921c:	lea    rdx,[rip+0x172d5]        # 304f8 <__func__.10421+0x2170>
   19223:	jmp    161f9 <parse_config_data+0x2109>
   19228:	mov    rdx,QWORD PTR [rsp+0x20]
   1922d:	lea    rsi,[rip+0x14eb7]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   19234:	xor    edi,edi
   19236:	call   b580 <strtok_r@plt>
   1923b:	test   rax,rax
   1923e:	mov    rcx,rax
   19241:	je     19319 <parse_config_data+0x5229>
   19247:	lea    rax,[r14+0xf0]
   1924e:	lea    r12,[rip+0x15e62]        # 2f0b7 <__func__.10421+0xd2f>
   19255:	lea    r13,[rip+0x15e4d]        # 2f0a9 <__func__.10421+0xd21>
   1925c:	lea    r15,[rip+0x16b1d]        # 2fd80 <__func__.10421+0x19f8>
   19263:	mov    QWORD PTR [rsp+0x8],rax
   19268:	jmp    192e9 <parse_config_data+0x51f9>
   1926a:	nop    WORD PTR [rax+rax*1+0x0]
   19270:	cmp    eax,0x2
   19273:	lea    r8,[rip+0x15e56]        # 2f0d0 <__func__.10421+0xd48>
   1927a:	je     19288 <parse_config_data+0x5198>
   1927c:	cmp    eax,0x3
   1927f:	mov    r8,r15
   19282:	jne    19311 <parse_config_data+0x5221>
   19288:	mov    rax,QWORD PTR [rip+0x221d61]        # 23aff0 <stderr@GLIBC_2.2.5>
   1928f:	lea    rdx,[rip+0x1797a]        # 30c10 <__func__.10421+0x2888>
   19296:	mov    esi,0x1
   1929b:	mov    QWORD PTR [rsp+0x10],r8
   192a0:	mov    rdi,QWORD PTR [rax]
   192a3:	xor    eax,eax
   192a5:	call   c1e0 <__fprintf_chk@plt>
   192aa:	mov    rax,QWORD PTR [rip+0x221d3f]        # 23aff0 <stderr@GLIBC_2.2.5>
   192b1:	mov    r8,QWORD PTR [rsp+0x10]
   192b6:	lea    rdx,[rip+0x162c9]        # 2f586 <__func__.10421+0x11fe>
   192bd:	mov    ecx,ebp
   192bf:	mov    esi,0x1
   192c4:	mov    rdi,QWORD PTR [rax]
   192c7:	xor    eax,eax
   192c9:	call   c1e0 <__fprintf_chk@plt>
   192ce:	mov    rdx,QWORD PTR [rsp+0x20]
   192d3:	lea    rsi,[rip+0x14e11]        # 2e0eb <__PRETTY_FUNCTION__.10113+0x44d3>
   192da:	xor    edi,edi
   192dc:	call   b580 <strtok_r@plt>
   192e1:	test   rax,rax
   192e4:	mov    rcx,rax
   192e7:	je     19319 <parse_config_data+0x5229>
   192e9:	mov    rdi,QWORD PTR [rsp+0x8]
   192ee:	mov    rsi,rcx
   192f1:	mov    QWORD PTR [rsp+0x10],rcx
   192f6:	call   add0 <libxl_cpuid_parse_config@plt>
   192fb:	cmp    eax,0x1
   192fe:	mov    ebp,eax
   19300:	mov    rcx,QWORD PTR [rsp+0x10]
   19305:	je     19326 <parse_config_data+0x5236>
   19307:	jg     19270 <parse_config_data+0x5180>
   1930d:	test   eax,eax
   1930f:	je     192ce <parse_config_data+0x51de>
   19311:	mov    r8,r13
   19314:	jmp    19288 <parse_config_data+0x5198>
   19319:	mov    rdi,rbx
   1931c:	call   ac40 <free@plt>
   19321:	jmp    1706a <parse_config_data+0x2f7a>
   19326:	mov    r8,r12
   19329:	jmp    19288 <parse_config_data+0x5198>
   1932e:	xchg   ax,ax

0000000000019330 <main_cpupoolcreate>:
   19330:	push   r15
   19332:	push   r14
   19334:	push   r13
   19336:	push   r12
   19338:	xor    r13d,r13d
   1933b:	push   rbp
   1933c:	push   rbx
   1933d:	lea    rbx,[rip+0x10e94]        # 2a1d8 <__PRETTY_FUNCTION__.10113+0x5c0>
   19344:	mov    r12d,edi
   19347:	mov    rbp,rsi
   1934a:	sub    rsp,0xc8
   19351:	mov    rax,QWORD PTR fs:0x28
   1935a:	mov    QWORD PTR [rsp+0xb8],rax
   19362:	xor    eax,eax
   19364:	mov    QWORD PTR [rsp+0x58],0x0
   1936d:	mov    QWORD PTR [rsp+0x60],0x0
   19376:	mov    DWORD PTR [rsp+0x4c],0x0
   1937e:	mov    DWORD PTR [rsp+0x54],0x0
   19386:	nop    WORD PTR cs:[rax+rax*1+0x0]
   19390:	lea    rcx,[rip+0x223089]        # 23c420 <opts.9410>
   19397:	lea    rdx,[rip+0x17d05]        # 310a3 <__PRETTY_FUNCTION__.10016+0x13>
   1939e:	xor    r9d,r9d
   193a1:	mov    r8,rbx
   193a4:	mov    rsi,rbp
   193a7:	mov    edi,r12d
   193aa:	call   ebe0 <def_getopt>
   193af:	cmp    eax,0xffffffff
   193b2:	je     193e0 <main_cpupoolcreate+0xb0>
   193b4:	cmp    eax,0x66
   193b7:	je     193d0 <main_cpupoolcreate+0xa0>
   193b9:	cmp    eax,0x6e
   193bc:	jne    19390 <main_cpupoolcreate+0x60>
   193be:	lea    rax,[rip+0x223acb]        # 23ce90 <dryrun_only>
   193c5:	mov    DWORD PTR [rax],0x1
   193cb:	jmp    19390 <main_cpupoolcreate+0x60>
   193cd:	nop    DWORD PTR [rax]
   193d0:	mov    rax,QWORD PTR [rip+0x221be9]        # 23afc0 <optarg@GLIBC_2.2.5>
   193d7:	mov    r13,QWORD PTR [rax]
   193da:	jmp    19390 <main_cpupoolcreate+0x60>
   193dc:	nop    DWORD PTR [rax+0x0]
   193e0:	lea    rax,[rsp+0x80]
   193e8:	mov    rdi,rax
   193eb:	mov    QWORD PTR [rsp+0x8],rax
   193f0:	call   bc00 <libxl_bitmap_init@plt>
   193f5:	lea    rax,[rsp+0x90]
   193fd:	mov    rdi,rax
   19400:	mov    QWORD PTR [rsp+0x10],rax
   19405:	call   bc00 <libxl_bitmap_init@plt>
   1940a:	mov    rbx,QWORD PTR [rip+0x221b97]        # 23afa8 <optind@GLIBC_2.2.5>
   19411:	mov    eax,DWORD PTR [rbx]
   19413:	cmp    r12d,eax
   19416:	jle    1947c <main_cpupoolcreate+0x14c>
   19418:	lea    r14,[rsp+0x58]
   1941d:	jmp    1944b <main_cpupoolcreate+0x11b>
   1941f:	nop
   19420:	lea    rsi,[rip+0x15f3f]        # 2f366 <__func__.10421+0xfde>
   19427:	mov    rdi,r14
   1942a:	call   ed40 <string_realloc_append>
   1942f:	movsxd rax,DWORD PTR [rbx]
   19432:	mov    rdi,r14
   19435:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
   1943a:	call   ed40 <string_realloc_append>
   1943f:	mov    eax,DWORD PTR [rbx]
   19441:	add    eax,0x1
   19444:	cmp    eax,r12d
   19447:	mov    DWORD PTR [rbx],eax
   19449:	jge    1947c <main_cpupoolcreate+0x14c>
   1944b:	cdqe   
   1944d:	mov    esi,0x3d
   19452:	mov    r15,QWORD PTR [rbp+rax*8+0x0]
   19457:	mov    rdi,r15
   1945a:	call   b1c0 <strchr@plt>
   1945f:	test   rax,rax
   19462:	jne    19420 <main_cpupoolcreate+0xf0>
   19464:	test   r13,r13
   19467:	jne    19620 <main_cpupoolcreate+0x2f0>
   1946d:	mov    eax,DWORD PTR [rbx]
   1946f:	mov    r13,r15
   19472:	add    eax,0x1
   19475:	cmp    eax,r12d
   19478:	mov    DWORD PTR [rbx],eax
   1947a:	jl     1944b <main_cpupoolcreate+0x11b>
   1947c:	test   r13,r13
   1947f:	je     19610 <main_cpupoolcreate+0x2e0>
   19485:	lea    rax,[rip+0x2239d4]        # 23ce60 <ctx>
   1948c:	lea    rcx,[rsp+0x4c]
   19491:	lea    rdx,[rsp+0x60]
   19496:	mov    rsi,r13
   19499:	mov    r14,r13
   1949c:	mov    rdi,QWORD PTR [rax]
   1949f:	call   b320 <libxl_read_file_contents@plt>
   194a4:	test   eax,eax
   194a6:	jne    19728 <main_cpupoolcreate+0x3f8>
   194ac:	mov    rdi,QWORD PTR [rsp+0x58]
   194b1:	test   rdi,rdi
   194b4:	je     19544 <main_cpupoolcreate+0x214>
   194ba:	cmp    BYTE PTR [rdi],0x0
   194bd:	je     19544 <main_cpupoolcreate+0x214>
   194c3:	movsxd rbx,DWORD PTR [rsp+0x4c]
   194c8:	call   b0c0 <strlen@plt>
   194cd:	mov    edx,0x7ffffffd
   194d2:	sub    rdx,rax
   194d5:	cmp    rbx,rdx
   194d8:	ja     196c8 <main_cpupoolcreate+0x398>
   194de:	mov    rdi,QWORD PTR [rsp+0x60]
   194e3:	lea    rsi,[rbx+rax*1+0x2]
   194e8:	call   ea30 <xrealloc>
   194ed:	test   rax,rax
   194f0:	mov    rbx,rax
   194f3:	mov    QWORD PTR [rsp+0x60],rax
   194f8:	je     1982b <main_cpupoolcreate+0x4fb>
   194fe:	movsxd rax,DWORD PTR [rsp+0x4c]
   19503:	mov    BYTE PTR [rbx+rax*1],0x0
   19507:	mov    rsi,QWORD PTR [rsp+0x58]
   1950c:	mov    rdi,QWORD PTR [rsp+0x60]
   19511:	call   c110 <strcat@plt>
   19516:	mov    rbx,QWORD PTR [rsp+0x60]
   1951b:	mov    rdi,rbx
   1951e:	call   b0c0 <strlen@plt>
   19523:	mov    r9d,0xa
   19529:	mov    WORD PTR [rbx+rax*1],r9w
   1952e:	mov    rdi,QWORD PTR [rsp+0x58]
   19533:	call   b0c0 <strlen@plt>
   19538:	mov    edx,DWORD PTR [rsp+0x4c]
   1953c:	lea    eax,[rdx+rax*1+0x1]
   19540:	mov    DWORD PTR [rsp+0x4c],eax
   19544:	mov    rax,QWORD PTR [rip+0x221aa5]        # 23aff0 <stderr@GLIBC_2.2.5>
   1954b:	mov    rsi,r14
   1954e:	mov    rdi,QWORD PTR [rax]
   19551:	call   b270 <xlu_cfg_init@plt>
   19556:	test   rax,rax
   19559:	mov    rbp,rax
   1955c:	je     196f8 <main_cpupoolcreate+0x3c8>
   19562:	mov    edx,DWORD PTR [rsp+0x4c]
   19566:	mov    rsi,QWORD PTR [rsp+0x60]
   1956b:	mov    rdi,rax
   1956e:	call   afb0 <xlu_cfg_readdata@plt>
   19573:	test   eax,eax
   19575:	jne    19690 <main_cpupoolcreate+0x360>
   1957b:	lea    r12,[rsp+0x68]
   19580:	lea    rsi,[rip+0x15b5c]        # 2f0e3 <__func__.10421+0xd5b>
   19587:	xor    ecx,ecx
   19589:	mov    rdi,rbp
   1958c:	mov    rdx,r12
   1958f:	call   c380 <xlu_cfg_get_string@plt>
   19594:	test   eax,eax
   19596:	je     197db <main_cpupoolcreate+0x4ab>
   1959c:	test   r13,r13
   1959f:	je     19856 <main_cpupoolcreate+0x526>
   195a5:	mov    rdi,r13
   195a8:	call   bc30 <libxl_basename@plt>
   195ad:	mov    rbx,rax
   195b0:	lea    rax,[rsp+0x50]
   195b5:	mov    rsi,rbx
   195b8:	mov    QWORD PTR [rsp+0x18],rax
   195bd:	mov    rdx,rax
   195c0:	lea    rax,[rip+0x223899]        # 23ce60 <ctx>
   195c7:	mov    rdi,QWORD PTR [rax]
   195ca:	call   c370 <libxl_name_to_cpupoolid@plt>
   195cf:	test   eax,eax
   195d1:	jne    19764 <main_cpupoolcreate+0x434>
   195d7:	mov    rax,QWORD PTR [rip+0x221a12]        # 23aff0 <stderr@GLIBC_2.2.5>
   195de:	lea    rdx,[rip+0x17d63]        # 31348 <__PRETTY_FUNCTION__.10016+0x2b8>
   195e5:	mov    rcx,rbx
   195e8:	mov    esi,0x1
   195ed:	mov    r13d,0x1
   195f3:	mov    rdi,QWORD PTR [rax]
   195f6:	xor    eax,eax
   195f8:	call   c1e0 <__fprintf_chk@plt>
   195fd:	nop    DWORD PTR [rax]
   19600:	mov    rdi,rbp
   19603:	call   abc0 <xlu_cfg_destroy@plt>
   19608:	jmp    19634 <main_cpupoolcreate+0x304>
   1960a:	nop    WORD PTR [rax+rax*1+0x0]
   19610:	lea    r14,[rip+0x15392]        # 2e9a9 <__func__.10421+0x621>
   19617:	jmp    194ac <main_cpupoolcreate+0x17c>
   1961c:	nop    DWORD PTR [rax+0x0]
   19620:	lea    rdi,[rip+0x10bb1]        # 2a1d8 <__PRETTY_FUNCTION__.10113+0x5c0>
   19627:	mov    r13d,0x1
   1962d:	xor    ebx,ebx
   1962f:	call   d4f0 <help>
   19634:	mov    rdi,QWORD PTR [rsp+0x8]
   19639:	call   bdb0 <libxl_bitmap_dispose@plt>
   1963e:	mov    rdi,QWORD PTR [rsp+0x10]
   19643:	call   bdb0 <libxl_bitmap_dispose@plt>
   19648:	mov    rdi,rbx
   1964b:	call   ac40 <free@plt>
   19650:	mov    rdi,QWORD PTR [rsp+0x60]
   19655:	call   ac40 <free@plt>
   1965a:	mov    rdi,QWORD PTR [rsp+0x58]
   1965f:	call   ac40 <free@plt>
   19664:	mov    rcx,QWORD PTR [rsp+0xb8]
   1966c:	xor    rcx,QWORD PTR fs:0x28
   19675:	mov    eax,r13d
   19678:	jne    19c95 <main_cpupoolcreate+0x965>
   1967e:	add    rsp,0xc8
   19685:	pop    rbx
   19686:	pop    rbp
   19687:	pop    r12
   19689:	pop    r13
   1968b:	pop    r14
   1968d:	pop    r15
   1968f:	ret    
   19690:	mov    edi,eax
   19692:	mov    r13d,0x1
   19698:	xor    ebx,ebx
   1969a:	call   c3b0 <strerror@plt>
   1969f:	mov    rcx,rax
   196a2:	mov    rax,QWORD PTR [rip+0x221947]        # 23aff0 <stderr@GLIBC_2.2.5>
   196a9:	lea    rdx,[rip+0x103c8]        # 29a78 <_IO_stdin_used+0x338>
   196b0:	mov    esi,0x1
   196b5:	mov    rdi,QWORD PTR [rax]
   196b8:	xor    eax,eax
   196ba:	call   c1e0 <__fprintf_chk@plt>
   196bf:	jmp    19600 <main_cpupoolcreate+0x2d0>
   196c4:	nop    DWORD PTR [rax+0x0]
   196c8:	mov    rax,QWORD PTR [rip+0x221921]        # 23aff0 <stderr@GLIBC_2.2.5>
   196cf:	lea    rdi,[rip+0x17c2a]        # 31300 <__PRETTY_FUNCTION__.10016+0x270>
   196d6:	mov    edx,0x25
   196db:	mov    esi,0x1
   196e0:	mov    r13d,0x1
   196e6:	xor    ebx,ebx
   196e8:	mov    rcx,QWORD PTR [rax]
   196eb:	call   c1b0 <fwrite@plt>
   196f0:	jmp    19634 <main_cpupoolcreate+0x304>
   196f5:	nop    DWORD PTR [rax]
   196f8:	mov    rax,QWORD PTR [rip+0x2218f1]        # 23aff0 <stderr@GLIBC_2.2.5>
   196ff:	lea    rdi,[rip+0x1034a]        # 29a50 <_IO_stdin_used+0x310>
   19706:	mov    edx,0x25
   1970b:	mov    esi,0x1
   19710:	mov    r13d,0x1
   19716:	xor    ebx,ebx
   19718:	mov    rcx,QWORD PTR [rax]
   1971b:	call   c1b0 <fwrite@plt>
   19720:	jmp    19634 <main_cpupoolcreate+0x304>
   19725:	nop    DWORD PTR [rax]
   19728:	call   ad80 <__errno_location@plt>
   1972d:	mov    edi,DWORD PTR [rax]
   1972f:	xor    ebx,ebx
   19731:	call   c3b0 <strerror@plt>
   19736:	mov    r8,rax
   19739:	mov    rax,QWORD PTR [rip+0x2218b0]        # 23aff0 <stderr@GLIBC_2.2.5>
   19740:	lea    rdx,[rip+0x102e1]        # 29a28 <_IO_stdin_used+0x2e8>
   19747:	mov    rcx,r13
   1974a:	mov    esi,0x1
   1974f:	mov    r13d,0x1
   19755:	mov    rdi,QWORD PTR [rax]
   19758:	xor    eax,eax
   1975a:	call   c1e0 <__fprintf_chk@plt>
   1975f:	jmp    19634 <main_cpupoolcreate+0x304>
   19764:	lea    rsi,[rip+0x17954]        # 310bf <__PRETTY_FUNCTION__.10016+0x2f>
   1976b:	xor    ecx,ecx
   1976d:	mov    rdx,r12
   19770:	mov    rdi,rbp
   19773:	call   c380 <xlu_cfg_get_string@plt>
   19778:	test   eax,eax
   1977a:	je     197ed <main_cpupoolcreate+0x4bd>
   1977c:	lea    rax,[rip+0x2236dd]        # 23ce60 <ctx>
   19783:	mov    rdi,QWORD PTR [rax]
   19786:	call   b750 <libxl_get_scheduler@plt>
   1978b:	test   eax,eax
   1978d:	mov    r13d,eax
   19790:	js     199a1 <main_cpupoolcreate+0x671>
   19796:	mov    DWORD PTR [rsp+0x54],eax
   1979a:	lea    rax,[rip+0x2236bf]        # 23ce60 <ctx>
   197a1:	mov    rsi,QWORD PTR [rsp+0x8]
   197a6:	mov    rdi,QWORD PTR [rax]
   197a9:	call   bf50 <libxl_get_freecpus@plt>
   197ae:	test   eax,eax
   197b0:	je     19883 <main_cpupoolcreate+0x553>
   197b6:	mov    rax,QWORD PTR [rip+0x221833]        # 23aff0 <stderr@GLIBC_2.2.5>
   197bd:	lea    rdi,[rip+0x17932]        # 310f6 <__PRETTY_FUNCTION__.10016+0x66>
   197c4:	mov    edx,0x1a
   197c9:	mov    esi,0x1
   197ce:	mov    rcx,QWORD PTR [rax]
   197d1:	call   c1b0 <fwrite@plt>
   197d6:	jmp    19600 <main_cpupoolcreate+0x2d0>
   197db:	mov    rdi,QWORD PTR [rsp+0x68]
   197e0:	call   c360 <strdup@plt>
   197e5:	mov    rbx,rax
   197e8:	jmp    195b0 <main_cpupoolcreate+0x280>
   197ed:	mov    rdi,QWORD PTR [rsp+0x68]
   197f2:	lea    rsi,[rsp+0x54]
   197f7:	mov    r13d,0x1
   197fd:	call   b020 <libxl_scheduler_from_string@plt>
   19802:	test   eax,eax
   19804:	jns    1979a <main_cpupoolcreate+0x46a>
   19806:	mov    rax,QWORD PTR [rip+0x2217e3]        # 23aff0 <stderr@GLIBC_2.2.5>
   1980d:	lea    rdi,[rip+0x178b1]        # 310c5 <__PRETTY_FUNCTION__.10016+0x35>
   19814:	mov    edx,0x12
   19819:	mov    esi,0x1
   1981e:	mov    rcx,QWORD PTR [rax]
   19821:	call   c1b0 <fwrite@plt>
   19826:	jmp    19600 <main_cpupoolcreate+0x2d0>
   1982b:	mov    rax,QWORD PTR [rip+0x2217be]        # 23aff0 <stderr@GLIBC_2.2.5>
   19832:	lea    rdi,[rip+0x17aef]        # 31328 <__PRETTY_FUNCTION__.10016+0x298>
   19839:	mov    edx,0x1e
   1983e:	mov    esi,0x1
   19843:	mov    r13d,0x1
   19849:	mov    rcx,QWORD PTR [rax]
   1984c:	call   c1b0 <fwrite@plt>
   19851:	jmp    19634 <main_cpupoolcreate+0x304>
   19856:	mov    rax,QWORD PTR [rip+0x221793]        # 23aff0 <stderr@GLIBC_2.2.5>
   1985d:	lea    rdi,[rip+0x17844]        # 310a8 <__PRETTY_FUNCTION__.10016+0x18>
   19864:	mov    edx,0x16
   19869:	mov    esi,0x1
   1986e:	mov    r13d,0x1
   19874:	xor    ebx,ebx
   19876:	mov    rcx,QWORD PTR [rax]
   19879:	call   c1b0 <fwrite@plt>
   1987e:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19883:	lea    rax,[rip+0x2235d6]        # 23ce60 <ctx>
   1988a:	mov    rsi,QWORD PTR [rsp+0x10]
   1988f:	xor    edx,edx
   19891:	mov    rdi,QWORD PTR [rax]
   19894:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   19899:	test   eax,eax
   1989b:	je     198c2 <main_cpupoolcreate+0x592>
   1989d:	mov    rax,QWORD PTR [rip+0x22174c]        # 23aff0 <stderr@GLIBC_2.2.5>
   198a4:	lea    rdi,[rip+0x17866]        # 31111 <__PRETTY_FUNCTION__.10016+0x81>
   198ab:	mov    edx,0x1a
   198b0:	mov    esi,0x1
   198b5:	mov    rcx,QWORD PTR [rax]
   198b8:	call   c1b0 <fwrite@plt>
   198bd:	jmp    19600 <main_cpupoolcreate+0x2d0>
   198c2:	lea    rdx,[rsp+0x78]
   198c7:	lea    rsi,[rip+0x1785e]        # 3112c <__PRETTY_FUNCTION__.10016+0x9c>
   198ce:	xor    r8d,r8d
   198d1:	xor    ecx,ecx
   198d3:	mov    rdi,rbp
   198d6:	call   bb20 <xlu_cfg_get_list@plt>
   198db:	test   eax,eax
   198dd:	jne    199c6 <main_cpupoolcreate+0x696>
   198e3:	lea    rax,[rip+0x223576]        # 23ce60 <ctx>
   198ea:	lea    rsi,[rsp+0x70]
   198ef:	xor    r15d,r15d
   198f2:	mov    rdi,QWORD PTR [rax]
   198f5:	call   bc60 <libxl_get_cpu_topology@plt>
   198fa:	test   rax,rax
   198fd:	mov    QWORD PTR [rsp+0x28],rax
   19902:	mov    DWORD PTR [rsp+0x24],0x0
   1990a:	je     19bfe <main_cpupoolcreate+0x8ce>
   19910:	mov    QWORD PTR [rsp+0x30],rbx
   19915:	mov    QWORD PTR [rsp+0x38],rbp
   1991a:	mov    rdi,QWORD PTR [rsp+0x78]
   1991f:	mov    esi,r15d
   19922:	call   ad60 <xlu_cfg_get_listitem@plt>
   19927:	test   rax,rax
   1992a:	mov    QWORD PTR [rsp+0x68],rax
   1992f:	je     19aef <main_cpupoolcreate+0x7bf>
   19935:	xor    esi,esi
   19937:	mov    edx,0xa
   1993c:	mov    rdi,rax
   1993f:	call   b7b0 <strtol@plt>
   19944:	mov    r8d,DWORD PTR [rsp+0x70]
   19949:	test   r8d,r8d
   1994c:	jle    19998 <main_cpupoolcreate+0x668>
   1994e:	mov    ebp,eax
   19950:	mov    rax,QWORD PTR [rsp+0x28]
   19955:	xor    r12d,r12d
   19958:	lea    rbx,[rax+0x8]
   1995c:	jmp    1996f <main_cpupoolcreate+0x63f>
   1995e:	xchg   ax,ax
   19960:	add    r12d,0x1
   19964:	add    rbx,0xc
   19968:	cmp    DWORD PTR [rsp+0x70],r12d
   1996d:	jle    19998 <main_cpupoolcreate+0x668>
   1996f:	cmp    DWORD PTR [rbx],ebp
   19971:	jne    19960 <main_cpupoolcreate+0x630>
   19973:	mov    rdi,QWORD PTR [rsp+0x8]
   19978:	mov    esi,r12d
   1997b:	call   be30 <libxl_bitmap_test@plt>
   19980:	test   eax,eax
   19982:	je     19960 <main_cpupoolcreate+0x630>
   19984:	mov    rdi,QWORD PTR [rsp+0x10]
   19989:	mov    esi,r12d
   1998c:	call   b7d0 <libxl_bitmap_set@plt>
   19991:	add    DWORD PTR [rsp+0x24],0x1
   19996:	jmp    19960 <main_cpupoolcreate+0x630>
   19998:	add    r15d,0x1
   1999c:	jmp    1991a <main_cpupoolcreate+0x5ea>
   199a1:	mov    rax,QWORD PTR [rip+0x221648]        # 23aff0 <stderr@GLIBC_2.2.5>
   199a8:	lea    rdi,[rip+0x17729]        # 310d8 <__PRETTY_FUNCTION__.10016+0x48>
   199af:	mov    edx,0x1d
   199b4:	mov    esi,0x1
   199b9:	mov    rcx,QWORD PTR [rax]
   199bc:	call   c1b0 <fwrite@plt>
   199c1:	jmp    19600 <main_cpupoolcreate+0x2d0>
   199c6:	lea    rdx,[rsp+0x70]
   199cb:	lea    rsi,[rip+0x15813]        # 2f1e5 <__func__.10421+0xe5d>
   199d2:	xor    ecx,ecx
   199d4:	mov    r8d,0x1
   199da:	mov    rdi,rbp
   199dd:	call   bb20 <xlu_cfg_get_list@plt>
   199e2:	test   eax,eax
   199e4:	mov    DWORD PTR [rsp+0x24],eax
   199e8:	jne    19b6e <main_cpupoolcreate+0x83e>
   199ee:	mov    QWORD PTR [rsp+0x28],rbx
   199f3:	mov    r15d,r13d
   199f6:	mov    ebx,DWORD PTR [rsp+0x24]
   199fa:	mov    r13,rbp
   199fd:	jmp    19a3f <main_cpupoolcreate+0x70f>
   199ff:	xor    esi,esi
   19a01:	mov    edx,0xa
   19a06:	mov    rdi,rax
   19a09:	call   b7b0 <strtol@plt>
   19a0e:	test   eax,eax
   19a10:	mov    r12,rax
   19a13:	mov    ebp,eax
   19a15:	js     19b38 <main_cpupoolcreate+0x808>
   19a1b:	mov    rdi,QWORD PTR [rsp+0x8]
   19a20:	mov    esi,eax
   19a22:	call   be30 <libxl_bitmap_test@plt>
   19a27:	test   eax,eax
   19a29:	je     19b38 <main_cpupoolcreate+0x808>
   19a2f:	mov    rdi,QWORD PTR [rsp+0x10]
   19a34:	mov    esi,r12d
   19a37:	add    ebx,0x1
   19a3a:	call   b7d0 <libxl_bitmap_set@plt>
   19a3f:	mov    rdi,QWORD PTR [rsp+0x70]
   19a44:	mov    esi,ebx
   19a46:	call   ad60 <xlu_cfg_get_listitem@plt>
   19a4b:	test   rax,rax
   19a4e:	mov    QWORD PTR [rsp+0x68],rax
   19a53:	jne    199ff <main_cpupoolcreate+0x6cf>
   19a55:	mov    DWORD PTR [rsp+0x24],ebx
   19a59:	mov    rbx,QWORD PTR [rsp+0x28]
   19a5e:	mov    rbp,r13
   19a61:	mov    r13d,r15d
   19a64:	lea    r12,[rsp+0xa0]
   19a6c:	mov    rdi,r12
   19a6f:	call   b2d0 <libxl_uuid_generate@plt>
   19a74:	lea    rsi,[rip+0x176e6]        # 31161 <__PRETTY_FUNCTION__.10016+0xd1>
   19a7b:	mov    rdx,r14
   19a7e:	mov    edi,0x1
   19a83:	xor    eax,eax
   19a85:	call   bd50 <__printf_chk@plt>
   19a8a:	lea    rsi,[rip+0x176e8]        # 31179 <__PRETTY_FUNCTION__.10016+0xe9>
   19a91:	mov    rdx,rbx
   19a94:	mov    edi,0x1
   19a99:	xor    eax,eax
   19a9b:	call   bd50 <__printf_chk@plt>
   19aa0:	mov    edi,DWORD PTR [rsp+0x54]
   19aa4:	call   b1e0 <libxl_scheduler_to_string@plt>
   19aa9:	lea    rsi,[rip+0x176dd]        # 3118d <__PRETTY_FUNCTION__.10016+0xfd>
   19ab0:	mov    rdx,rax
   19ab3:	mov    edi,0x1
   19ab8:	xor    eax,eax
   19aba:	call   bd50 <__printf_chk@plt>
   19abf:	mov    edx,DWORD PTR [rsp+0x24]
   19ac3:	lea    rsi,[rip+0x176d7]        # 311a1 <__PRETTY_FUNCTION__.10016+0x111>
   19aca:	xor    eax,eax
   19acc:	mov    edi,0x1
   19ad1:	call   bd50 <__printf_chk@plt>
   19ad6:	lea    rax,[rip+0x2233b3]        # 23ce90 <dryrun_only>
   19add:	mov    esi,DWORD PTR [rax]
   19adf:	test   esi,esi
   19ae1:	je     19b97 <main_cpupoolcreate+0x867>
   19ae7:	xor    r13d,r13d
   19aea:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19aef:	mov    rdi,QWORD PTR [rsp+0x28]
   19af4:	mov    esi,DWORD PTR [rsp+0x70]
   19af8:	mov    rbx,QWORD PTR [rsp+0x30]
   19afd:	mov    rbp,QWORD PTR [rsp+0x38]
   19b02:	call   bc20 <libxl_cputopology_list_free@plt>
   19b07:	mov    edi,DWORD PTR [rsp+0x24]
   19b0b:	test   edi,edi
   19b0d:	jne    19a64 <main_cpupoolcreate+0x734>
   19b13:	mov    rax,QWORD PTR [rip+0x2214d6]        # 23aff0 <stderr@GLIBC_2.2.5>
   19b1a:	lea    rdi,[rip+0x17611]        # 31132 <__PRETTY_FUNCTION__.10016+0xa2>
   19b21:	mov    edx,0x12
   19b26:	mov    esi,0x1
   19b2b:	mov    rcx,QWORD PTR [rax]
   19b2e:	call   c1b0 <fwrite@plt>
   19b33:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19b38:	mov    rbx,QWORD PTR [rsp+0x28]
   19b3d:	mov    eax,r15d
   19b40:	mov    r15d,ebp
   19b43:	mov    ecx,r15d
   19b46:	mov    rbp,r13
   19b49:	mov    r13d,eax
   19b4c:	mov    rax,QWORD PTR [rip+0x22149d]        # 23aff0 <stderr@GLIBC_2.2.5>
   19b53:	lea    rdx,[rip+0x175eb]        # 31145 <__PRETTY_FUNCTION__.10016+0xb5>
   19b5a:	mov    esi,0x1
   19b5f:	mov    rdi,QWORD PTR [rax]
   19b62:	xor    eax,eax
   19b64:	call   c1e0 <__fprintf_chk@plt>
   19b69:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19b6e:	lea    rsi,[rip+0x15670]        # 2f1e5 <__func__.10421+0xe5d>
   19b75:	xor    ecx,ecx
   19b77:	mov    rdx,r12
   19b7a:	mov    rdi,rbp
   19b7d:	call   c380 <xlu_cfg_get_string@plt>
   19b82:	test   eax,eax
   19b84:	je     19c23 <main_cpupoolcreate+0x8f3>
   19b8a:	mov    DWORD PTR [rsp+0x24],0x0
   19b92:	jmp    19a64 <main_cpupoolcreate+0x734>
   19b97:	lea    rax,[rip+0x2232c2]        # 23ce60 <ctx>
   19b9e:	mov    DWORD PTR [rsp+0x50],0xffffffff
   19ba6:	sub    rsp,0x8
   19baa:	push   QWORD PTR [rsp+0x20]
   19bae:	mov    ecx,DWORD PTR [rsp+0xa0]
   19bb5:	mov    r9,r12
   19bb8:	mov    r8,QWORD PTR [rsp+0xa8]
   19bc0:	mov    edx,DWORD PTR [rsp+0x64]
   19bc4:	mov    rsi,rbx
   19bc7:	mov    rdi,QWORD PTR [rax]
   19bca:	call   ae00 <libxl_cpupool_create@plt>
   19bcf:	test   eax,eax
   19bd1:	pop    rdx
   19bd2:	pop    rcx
   19bd3:	je     19ae7 <main_cpupoolcreate+0x7b7>
   19bd9:	mov    rax,QWORD PTR [rip+0x221410]        # 23aff0 <stderr@GLIBC_2.2.5>
   19be0:	lea    rdi,[rip+0x175ce]        # 311b5 <__PRETTY_FUNCTION__.10016+0x125>
   19be7:	mov    edx,0x1a
   19bec:	mov    esi,0x1
   19bf1:	mov    rcx,QWORD PTR [rax]
   19bf4:	call   c1b0 <fwrite@plt>
   19bf9:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19bfe:	mov    rax,QWORD PTR [rip+0x2213eb]        # 23aff0 <stderr@GLIBC_2.2.5>
   19c05:	lea    rdi,[rip+0x1775c]        # 31368 <__PRETTY_FUNCTION__.10016+0x2d8>
   19c0c:	mov    edx,0x1e
   19c11:	mov    esi,0x1
   19c16:	mov    rcx,QWORD PTR [rax]
   19c19:	call   c1b0 <fwrite@plt>
   19c1e:	jmp    19600 <main_cpupoolcreate+0x2d0>
   19c23:	mov    rsi,QWORD PTR [rsp+0x10]
   19c28:	mov    rdi,QWORD PTR [rsp+0x68]
   19c2d:	call   11910 <parse_cpurange>
   19c32:	test   eax,eax
   19c34:	mov    DWORD PTR [rsp+0x24],eax
   19c38:	jne    19600 <main_cpupoolcreate+0x2d0>
   19c3e:	mov    eax,DWORD PTR [rsp+0x90]
   19c45:	shl    eax,0x3
   19c48:	test   eax,eax
   19c4a:	je     19b8a <main_cpupoolcreate+0x85a>
   19c50:	xor    r12d,r12d
   19c53:	jmp    19c6c <main_cpupoolcreate+0x93c>
   19c55:	mov    eax,DWORD PTR [rsp+0x90]
   19c5c:	add    r12d,0x1
   19c60:	shl    eax,0x3
   19c63:	cmp    eax,r12d
   19c66:	jbe    19a64 <main_cpupoolcreate+0x734>
   19c6c:	mov    rdi,QWORD PTR [rsp+0x10]
   19c71:	mov    esi,r12d
   19c74:	call   be30 <libxl_bitmap_test@plt>
   19c79:	test   eax,eax
   19c7b:	je     19c55 <main_cpupoolcreate+0x925>
   19c7d:	mov    rdi,QWORD PTR [rsp+0x8]
   19c82:	mov    esi,r12d
   19c85:	call   be30 <libxl_bitmap_test@plt>
   19c8a:	test   eax,eax
   19c8c:	je     19c9a <main_cpupoolcreate+0x96a>
   19c8e:	add    DWORD PTR [rsp+0x24],0x1
   19c93:	jmp    19c55 <main_cpupoolcreate+0x925>
   19c95:	call   b130 <__stack_chk_fail@plt>
   19c9a:	mov    ecx,r12d
   19c9d:	jmp    19b4c <main_cpupoolcreate+0x81c>
   19ca2:	nop    DWORD PTR [rax+0x0]
   19ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000019cb0 <main_cpupoollist>:
   19cb0:	push   r15
   19cb2:	push   r14
   19cb4:	push   r13
   19cb6:	push   r12
   19cb8:	mov    r13d,0x1
   19cbe:	push   rbp
   19cbf:	push   rbx
   19cc0:	mov    ebp,edi
   19cc2:	mov    r12,rsi
   19cc5:	xor    ebx,ebx
   19cc7:	sub    rsp,0x28
   19ccb:	mov    rax,QWORD PTR fs:0x28
   19cd4:	mov    QWORD PTR [rsp+0x18],rax
   19cd9:	xor    eax,eax
   19cdb:	jmp    19ce7 <main_cpupoollist+0x37>
   19cdd:	nop    DWORD PTR [rax]
   19ce0:	cmp    eax,0x63
   19ce3:	cmove  ebx,r13d
   19ce7:	lea    r8,[rip+0x1050f]        # 2a1fd <__PRETTY_FUNCTION__.10113+0x5e5>
   19cee:	lea    rcx,[rip+0x2226cb]        # 23c3c0 <opts.9459>
   19cf5:	lea    rdx,[rip+0x174d4]        # 311d0 <__PRETTY_FUNCTION__.10016+0x140>
   19cfc:	xor    r9d,r9d
   19cff:	mov    rsi,r12
   19d02:	mov    edi,ebp
   19d04:	call   ebe0 <def_getopt>
   19d09:	cmp    eax,0xffffffff
   19d0c:	jne    19ce0 <main_cpupoollist+0x30>
   19d0e:	mov    rax,QWORD PTR [rip+0x221293]        # 23afa8 <optind@GLIBC_2.2.5>
   19d15:	lea    r14,[rip+0x223144]        # 23ce60 <ctx>
   19d1c:	movsxd rax,DWORD PTR [rax]
   19d1f:	mov    rdi,QWORD PTR [r14]
   19d22:	cmp    eax,ebp
   19d24:	jge    19d48 <main_cpupoollist+0x98>
   19d26:	mov    r13,QWORD PTR [r12+rax*8]
   19d2a:	lea    rdx,[rsp+0x14]
   19d2f:	mov    rsi,r13
   19d32:	call   c370 <libxl_name_to_cpupoolid@plt>
   19d37:	test   eax,eax
   19d39:	jne    19f28 <main_cpupoollist+0x278>
   19d3f:	mov    rdi,QWORD PTR [r14]
   19d42:	jmp    19d4b <main_cpupoollist+0x9b>
   19d44:	nop    DWORD PTR [rax+0x0]
   19d48:	xor    r13d,r13d
   19d4b:	lea    rsi,[rsp+0x10]
   19d50:	call   c200 <libxl_list_cpupool@plt>
   19d55:	test   rax,rax
   19d58:	mov    QWORD PTR [rsp],rax
   19d5c:	je     19ef8 <main_cpupoollist+0x248>
   19d62:	lea    rdx,[rip+0x14796]        # 2e4ff <__func__.10421+0x177>
   19d69:	lea    rsi,[rip+0x17499]        # 31209 <__PRETTY_FUNCTION__.10016+0x179>
   19d70:	xor    eax,eax
   19d72:	mov    edi,0x1
   19d77:	call   bd50 <__printf_chk@plt>
   19d7c:	test   ebx,ebx
   19d7e:	jne    19e58 <main_cpupoollist+0x1a8>
   19d84:	lea    rdi,[rip+0x175fd]        # 31388 <__PRETTY_FUNCTION__.10016+0x2f8>
   19d8b:	call   aeb0 <puts@plt>
   19d90:	mov    rax,QWORD PTR [rsp]
   19d94:	mov    esi,DWORD PTR [rsp+0x10]
   19d98:	xor    ebp,ebp
   19d9a:	lea    r15,[rax+0x18]
   19d9e:	mov    eax,ebx
   19da0:	and    eax,0x1
   19da3:	test   esi,esi
   19da5:	mov    BYTE PTR [rsp+0xb],al
   19da9:	jg     19dbf <main_cpupoollist+0x10f>
   19dab:	jmp    19e91 <main_cpupoollist+0x1e1>
   19db0:	add    ebp,0x1
   19db3:	add    r15,0x28
   19db7:	cmp    esi,ebp
   19db9:	jle    19e91 <main_cpupoollist+0x1e1>
   19dbf:	test   r13,r13
   19dc2:	je     19dce <main_cpupoollist+0x11e>
   19dc4:	mov    eax,DWORD PTR [rsp+0x14]
   19dc8:	cmp    DWORD PTR [r15-0x18],eax
   19dcc:	jne    19db0 <main_cpupoollist+0x100>
   19dce:	mov    rdx,QWORD PTR [r15-0x10]
   19dd2:	lea    rsi,[rip+0x17430]        # 31209 <__PRETTY_FUNCTION__.10016+0x179>
   19dd9:	xor    eax,eax
   19ddb:	mov    edi,0x1
   19de0:	xor    r12d,r12d
   19de3:	call   bd50 <__printf_chk@plt>
   19de8:	mov    eax,DWORD PTR [r15]
   19deb:	shl    eax,0x3
   19dee:	test   eax,eax
   19df0:	je     19e70 <main_cpupoollist+0x1c0>
   19df2:	xor    r14d,r14d
   19df5:	jmp    19e3a <main_cpupoollist+0x18a>
   19df7:	nop    WORD PTR [rax+rax*1+0x0]
   19e00:	cmp    BYTE PTR [rsp+0xb],0x0
   19e05:	je     19e4e <main_cpupoollist+0x19e>
   19e07:	mov    edi,0x2c
   19e0c:	call   aca0 <putchar@plt>
   19e11:	lea    rsi,[rip+0x18db8]        # 32bd0 <__PRETTY_FUNCTION__.10016+0x1b40>
   19e18:	mov    edx,r14d
   19e1b:	mov    edi,0x1
   19e20:	xor    eax,eax
   19e22:	call   bd50 <__printf_chk@plt>
   19e27:	add    r12d,0x1
   19e2b:	mov    eax,DWORD PTR [r15]
   19e2e:	add    r14d,0x1
   19e32:	shl    eax,0x3
   19e35:	cmp    eax,r14d
   19e38:	jbe    19e70 <main_cpupoollist+0x1c0>
   19e3a:	mov    esi,r14d
   19e3d:	mov    rdi,r15
   19e40:	call   be30 <libxl_bitmap_test@plt>
   19e45:	test   eax,eax
   19e47:	je     19e2b <main_cpupoollist+0x17b>
   19e49:	test   r12d,r12d
   19e4c:	jne    19e00 <main_cpupoollist+0x150>
   19e4e:	test   ebx,ebx
   19e50:	je     19e27 <main_cpupoollist+0x177>
   19e52:	jmp    19e11 <main_cpupoollist+0x161>
   19e54:	nop    DWORD PTR [rax+0x0]
   19e58:	lea    rdi,[rip+0x173b0]        # 3120f <__PRETTY_FUNCTION__.10016+0x17f>
   19e5f:	call   aeb0 <puts@plt>
   19e64:	jmp    19d90 <main_cpupoollist+0xe0>
   19e69:	nop    DWORD PTR [rax+0x0]
   19e70:	test   ebx,ebx
   19e72:	je     19ec0 <main_cpupoollist+0x210>
   19e74:	mov    edi,0xa
   19e79:	add    ebp,0x1
   19e7c:	add    r15,0x28
   19e80:	call   aca0 <putchar@plt>
   19e85:	mov    esi,DWORD PTR [rsp+0x10]
   19e89:	cmp    esi,ebp
   19e8b:	jg     19dbf <main_cpupoollist+0x10f>
   19e91:	mov    rdi,QWORD PTR [rsp]
   19e95:	call   ae50 <libxl_cpupoolinfo_list_free@plt>
   19e9a:	xor    eax,eax
   19e9c:	mov    rcx,QWORD PTR [rsp+0x18]
   19ea1:	xor    rcx,QWORD PTR fs:0x28
   19eaa:	jne    19f52 <main_cpupoollist+0x2a2>
   19eb0:	add    rsp,0x28
   19eb4:	pop    rbx
   19eb5:	pop    rbp
   19eb6:	pop    r12
   19eb8:	pop    r13
   19eba:	pop    r14
   19ebc:	pop    r15
   19ebe:	ret    
   19ebf:	nop
   19ec0:	mov    r8d,DWORD PTR [r15-0x4]
   19ec4:	mov    edi,DWORD PTR [r15-0x8]
   19ec8:	mov    DWORD PTR [rsp+0xc],r8d
   19ecd:	call   b1e0 <libxl_scheduler_to_string@plt>
   19ed2:	mov    r8d,DWORD PTR [rsp+0xc]
   19ed7:	lea    rsi,[rip+0x1733a]        # 31218 <__PRETTY_FUNCTION__.10016+0x188>
   19ede:	mov    rcx,rax
   19ee1:	mov    edx,r12d
   19ee4:	mov    edi,0x1
   19ee9:	xor    eax,eax
   19eeb:	call   bd50 <__printf_chk@plt>
   19ef0:	jmp    19e74 <main_cpupoollist+0x1c4>
   19ef2:	nop    WORD PTR [rax+rax*1+0x0]
   19ef8:	mov    rax,QWORD PTR [rip+0x2210f1]        # 23aff0 <stderr@GLIBC_2.2.5>
   19eff:	lea    rdi,[rip+0x172e7]        # 311ed <__PRETTY_FUNCTION__.10016+0x15d>
   19f06:	mov    edx,0x1b
   19f0b:	mov    esi,0x1
   19f10:	mov    rcx,QWORD PTR [rax]
   19f13:	call   c1b0 <fwrite@plt>
   19f18:	mov    eax,0x1
   19f1d:	jmp    19e9c <main_cpupoollist+0x1ec>
   19f22:	nop    WORD PTR [rax+rax*1+0x0]
   19f28:	mov    rax,QWORD PTR [rip+0x2210c1]        # 23aff0 <stderr@GLIBC_2.2.5>
   19f2f:	lea    rdx,[rip+0x1729d]        # 311d3 <__PRETTY_FUNCTION__.10016+0x143>
   19f36:	mov    rcx,r13
   19f39:	mov    esi,0x1
   19f3e:	mov    rdi,QWORD PTR [rax]
   19f41:	xor    eax,eax
   19f43:	call   c1e0 <__fprintf_chk@plt>
   19f48:	mov    eax,0x1
   19f4d:	jmp    19e9c <main_cpupoollist+0x1ec>
   19f52:	call   b130 <__stack_chk_fail@plt>
   19f57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019f60 <main_cpupooldestroy>:
   19f60:	push   r12
   19f62:	push   rbp
   19f63:	lea    rbp,[rip+0x102d0]        # 2a23a <__PRETTY_FUNCTION__.10113+0x622>
   19f6a:	push   rbx
   19f6b:	mov    r12d,edi
   19f6e:	mov    rbx,rsi
   19f71:	sub    rsp,0x10
   19f75:	mov    rax,QWORD PTR fs:0x28
   19f7e:	mov    QWORD PTR [rsp+0x8],rax
   19f83:	xor    eax,eax
   19f85:	nop    DWORD PTR [rax]
   19f88:	lea    rdx,[rip+0x177b3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   19f8f:	xor    ecx,ecx
   19f91:	mov    r9d,0x1
   19f97:	mov    r8,rbp
   19f9a:	mov    rsi,rbx
   19f9d:	mov    edi,r12d
   19fa0:	call   ebe0 <def_getopt>
   19fa5:	cmp    eax,0xffffffff
   19fa8:	jne    19f88 <main_cpupooldestroy+0x28>
   19faa:	mov    rax,QWORD PTR [rip+0x220ff7]        # 23afa8 <optind@GLIBC_2.2.5>
   19fb1:	lea    rbp,[rip+0x222ea8]        # 23ce60 <ctx>
   19fb8:	lea    rdx,[rsp+0x4]
   19fbd:	xor    ecx,ecx
   19fbf:	movsxd rax,DWORD PTR [rax]
   19fc2:	mov    rdi,QWORD PTR [rbp+0x0]
   19fc6:	mov    rbx,QWORD PTR [rbx+rax*8]
   19fca:	mov    rsi,rbx
   19fcd:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   19fd2:	test   eax,eax
   19fd4:	jne    19fe7 <main_cpupooldestroy+0x87>
   19fd6:	mov    esi,DWORD PTR [rsp+0x4]
   19fda:	mov    rdi,QWORD PTR [rbp+0x0]
   19fde:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   19fe3:	test   eax,eax
   19fe5:	jne    1a028 <main_cpupooldestroy+0xc8>
   19fe7:	lea    rdx,[rip+0x17244]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   19fee:	mov    rcx,rbx
   19ff1:	mov    rax,QWORD PTR [rip+0x220ff8]        # 23aff0 <stderr@GLIBC_2.2.5>
   19ff8:	mov    esi,0x1
   19ffd:	mov    rdi,QWORD PTR [rax]
   1a000:	xor    eax,eax
   1a002:	call   c1e0 <__fprintf_chk@plt>
   1a007:	mov    eax,0x1
   1a00c:	mov    rcx,QWORD PTR [rsp+0x8]
   1a011:	xor    rcx,QWORD PTR fs:0x28
   1a01a:	jne    1a045 <main_cpupooldestroy+0xe5>
   1a01c:	add    rsp,0x10
   1a020:	pop    rbx
   1a021:	pop    rbp
   1a022:	pop    r12
   1a024:	ret    
   1a025:	nop    DWORD PTR [rax]
   1a028:	mov    esi,DWORD PTR [rsp+0x4]
   1a02c:	mov    rdi,QWORD PTR [rbp+0x0]
   1a030:	call   c240 <libxl_cpupool_destroy@plt>
   1a035:	test   eax,eax
   1a037:	je     1a00c <main_cpupooldestroy+0xac>
   1a039:	mov    rcx,rbx
   1a03c:	lea    rdx,[rip+0x17205]        # 31248 <__PRETTY_FUNCTION__.10016+0x1b8>
   1a043:	jmp    19ff1 <main_cpupooldestroy+0x91>
   1a045:	call   b130 <__stack_chk_fail@plt>
   1a04a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a050 <main_cpupoolrename>:
   1a050:	push   r13
   1a052:	push   r12
   1a054:	mov    r12d,edi
   1a057:	push   rbp
   1a058:	push   rbx
   1a059:	lea    rbp,[rip+0x10201]        # 2a261 <__PRETTY_FUNCTION__.10113+0x649>
   1a060:	mov    rbx,rsi
   1a063:	sub    rsp,0x18
   1a067:	mov    rax,QWORD PTR fs:0x28
   1a070:	mov    QWORD PTR [rsp+0x8],rax
   1a075:	xor    eax,eax
   1a077:	nop    WORD PTR [rax+rax*1+0x0]
   1a080:	lea    rdx,[rip+0x176bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1a087:	xor    ecx,ecx
   1a089:	mov    r9d,0x2
   1a08f:	mov    r8,rbp
   1a092:	mov    rsi,rbx
   1a095:	mov    edi,r12d
   1a098:	call   ebe0 <def_getopt>
   1a09d:	cmp    eax,0xffffffff
   1a0a0:	jne    1a080 <main_cpupoolrename+0x30>
   1a0a2:	mov    rbp,QWORD PTR [rip+0x220eff]        # 23afa8 <optind@GLIBC_2.2.5>
   1a0a9:	lea    r13,[rip+0x222db0]        # 23ce60 <ctx>
   1a0b0:	xor    ecx,ecx
   1a0b2:	movsxd rax,DWORD PTR [rbp+0x0]
   1a0b6:	mov    rdi,QWORD PTR [r13+0x0]
   1a0ba:	lea    edx,[rax+0x1]
   1a0bd:	mov    DWORD PTR [rbp+0x0],edx
   1a0c0:	mov    r12,QWORD PTR [rbx+rax*8]
   1a0c4:	lea    rdx,[rsp+0x4]
   1a0c9:	mov    rsi,r12
   1a0cc:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1a0d1:	test   eax,eax
   1a0d3:	jne    1a0e6 <main_cpupoolrename+0x96>
   1a0d5:	mov    esi,DWORD PTR [rsp+0x4]
   1a0d9:	mov    rdi,QWORD PTR [r13+0x0]
   1a0dd:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1a0e2:	test   eax,eax
   1a0e4:	jne    1a130 <main_cpupoolrename+0xe0>
   1a0e6:	lea    rdx,[rip+0x17145]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1a0ed:	mov    rcx,r12
   1a0f0:	mov    rax,QWORD PTR [rip+0x220ef9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a0f7:	mov    esi,0x1
   1a0fc:	mov    rdi,QWORD PTR [rax]
   1a0ff:	xor    eax,eax
   1a101:	call   c1e0 <__fprintf_chk@plt>
   1a106:	mov    eax,0x1
   1a10b:	mov    rcx,QWORD PTR [rsp+0x8]
   1a110:	xor    rcx,QWORD PTR fs:0x28
   1a119:	jne    1a155 <main_cpupoolrename+0x105>
   1a11b:	add    rsp,0x18
   1a11f:	pop    rbx
   1a120:	pop    rbp
   1a121:	pop    r12
   1a123:	pop    r13
   1a125:	ret    
   1a126:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a130:	movsxd rax,DWORD PTR [rbp+0x0]
   1a134:	mov    edx,DWORD PTR [rsp+0x4]
   1a138:	mov    rdi,QWORD PTR [r13+0x0]
   1a13c:	mov    rsi,QWORD PTR [rbx+rax*8]
   1a140:	call   bed0 <libxl_cpupool_rename@plt>
   1a145:	test   eax,eax
   1a147:	je     1a10b <main_cpupoolrename+0xbb>
   1a149:	mov    rcx,r12
   1a14c:	lea    rdx,[rip+0x17111]        # 31264 <__PRETTY_FUNCTION__.10016+0x1d4>
   1a153:	jmp    1a0f0 <main_cpupoolrename+0xa0>
   1a155:	call   b130 <__stack_chk_fail@plt>
   1a15a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a160 <main_cpupoolcpuadd>:
   1a160:	push   r13
   1a162:	push   r12
   1a164:	mov    r12d,edi
   1a167:	push   rbp
   1a168:	push   rbx
   1a169:	lea    rbp,[rip+0x10129]        # 2a299 <__PRETTY_FUNCTION__.10113+0x681>
   1a170:	mov    rbx,rsi
   1a173:	sub    rsp,0x38
   1a177:	mov    rax,QWORD PTR fs:0x28
   1a180:	mov    QWORD PTR [rsp+0x28],rax
   1a185:	xor    eax,eax
   1a187:	nop    WORD PTR [rax+rax*1+0x0]
   1a190:	lea    rdx,[rip+0x175ab]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1a197:	xor    ecx,ecx
   1a199:	mov    r9d,0x2
   1a19f:	mov    r8,rbp
   1a1a2:	mov    rsi,rbx
   1a1a5:	mov    edi,r12d
   1a1a8:	call   ebe0 <def_getopt>
   1a1ad:	cmp    eax,0xffffffff
   1a1b0:	jne    1a190 <main_cpupoolcpuadd+0x30>
   1a1b2:	lea    rbp,[rsp+0x10]
   1a1b7:	mov    rdi,rbp
   1a1ba:	call   bc00 <libxl_bitmap_init@plt>
   1a1bf:	lea    r12,[rip+0x222c9a]        # 23ce60 <ctx>
   1a1c6:	xor    edx,edx
   1a1c8:	mov    rsi,rbp
   1a1cb:	mov    rdi,QWORD PTR [r12]
   1a1cf:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1a1d4:	test   eax,eax
   1a1d6:	jne    1a230 <main_cpupoolcpuadd+0xd0>
   1a1d8:	mov    rdx,QWORD PTR [rip+0x220dc9]        # 23afa8 <optind@GLIBC_2.2.5>
   1a1df:	mov    rsi,rbp
   1a1e2:	movsxd rax,DWORD PTR [rdx]
   1a1e5:	lea    ecx,[rax+0x1]
   1a1e8:	mov    DWORD PTR [rdx],ecx
   1a1ea:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
   1a1ef:	mov    r13,QWORD PTR [rbx+rax*8]
   1a1f3:	mov    ebx,0x1
   1a1f8:	call   11910 <parse_cpurange>
   1a1fd:	test   eax,eax
   1a1ff:	je     1a260 <main_cpupoolcpuadd+0x100>
   1a201:	mov    rdi,rbp
   1a204:	call   bdb0 <libxl_bitmap_dispose@plt>
   1a209:	mov    rcx,QWORD PTR [rsp+0x28]
   1a20e:	xor    rcx,QWORD PTR fs:0x28
   1a217:	mov    eax,ebx
   1a219:	jne    1a2f3 <main_cpupoolcpuadd+0x193>
   1a21f:	add    rsp,0x38
   1a223:	pop    rbx
   1a224:	pop    rbp
   1a225:	pop    r12
   1a227:	pop    r13
   1a229:	ret    
   1a22a:	nop    WORD PTR [rax+rax*1+0x0]
   1a230:	mov    rax,QWORD PTR [rip+0x220db9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a237:	lea    rdi,[rip+0x17041]        # 3127f <__PRETTY_FUNCTION__.10016+0x1ef>
   1a23e:	mov    edx,0x19
   1a243:	mov    esi,0x1
   1a248:	mov    ebx,0x1
   1a24d:	mov    rcx,QWORD PTR [rax]
   1a250:	call   c1b0 <fwrite@plt>
   1a255:	jmp    1a209 <main_cpupoolcpuadd+0xa9>
   1a257:	nop    WORD PTR [rax+rax*1+0x0]
   1a260:	mov    rdi,QWORD PTR [r12]
   1a264:	lea    rdx,[rsp+0xc]
   1a269:	xor    ecx,ecx
   1a26b:	mov    rsi,r13
   1a26e:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1a273:	test   eax,eax
   1a275:	jne    1a288 <main_cpupoolcpuadd+0x128>
   1a277:	mov    esi,DWORD PTR [rsp+0xc]
   1a27b:	mov    rdi,QWORD PTR [r12]
   1a27f:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1a284:	test   eax,eax
   1a286:	jne    1a2b2 <main_cpupoolcpuadd+0x152>
   1a288:	mov    rax,QWORD PTR [rip+0x220d61]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a28f:	lea    rdx,[rip+0x16f9c]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1a296:	mov    rcx,r13
   1a299:	mov    esi,0x1
   1a29e:	mov    ebx,0x1
   1a2a3:	mov    rdi,QWORD PTR [rax]
   1a2a6:	xor    eax,eax
   1a2a8:	call   c1e0 <__fprintf_chk@plt>
   1a2ad:	jmp    1a201 <main_cpupoolcpuadd+0xa1>
   1a2b2:	mov    esi,DWORD PTR [rsp+0xc]
   1a2b6:	mov    rdi,QWORD PTR [r12]
   1a2ba:	mov    rdx,rbp
   1a2bd:	call   b3f0 <libxl_cpupool_cpuadd_cpumap@plt>
   1a2c2:	test   eax,eax
   1a2c4:	mov    ebx,eax
   1a2c6:	je     1a201 <main_cpupoolcpuadd+0xa1>
   1a2cc:	mov    rax,QWORD PTR [rip+0x220d1d]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a2d3:	lea    rdx,[rip+0x170d6]        # 313b0 <__PRETTY_FUNCTION__.10016+0x320>
   1a2da:	mov    rcx,r13
   1a2dd:	mov    esi,0x1
   1a2e2:	xor    ebx,ebx
   1a2e4:	mov    rdi,QWORD PTR [rax]
   1a2e7:	xor    eax,eax
   1a2e9:	call   c1e0 <__fprintf_chk@plt>
   1a2ee:	jmp    1a201 <main_cpupoolcpuadd+0xa1>
   1a2f3:	call   b130 <__stack_chk_fail@plt>
   1a2f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001a300 <main_cpupoolcpuremove>:
   1a300:	push   r14
   1a302:	push   r13
   1a304:	push   r12
   1a306:	push   rbp
   1a307:	mov    r12d,edi
   1a30a:	push   rbx
   1a30b:	mov    rbx,rsi
   1a30e:	lea    rbp,[rip+0xffad]        # 2a2c2 <__PRETTY_FUNCTION__.10113+0x6aa>
   1a315:	sub    rsp,0x30
   1a319:	lea    r13,[rsp+0x10]
   1a31e:	mov    rax,QWORD PTR fs:0x28
   1a327:	mov    QWORD PTR [rsp+0x28],rax
   1a32c:	xor    eax,eax
   1a32e:	mov    rdi,r13
   1a331:	call   bc00 <libxl_bitmap_init@plt>
   1a336:	lea    r14,[rip+0x222b23]        # 23ce60 <ctx>
   1a33d:	xor    edx,edx
   1a33f:	mov    rsi,r13
   1a342:	mov    rdi,QWORD PTR [r14]
   1a345:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1a34a:	test   eax,eax
   1a34c:	jne    1a410 <main_cpupoolcpuremove+0x110>
   1a352:	nop    WORD PTR [rax+rax*1+0x0]
   1a358:	lea    rdx,[rip+0x173e3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1a35f:	xor    ecx,ecx
   1a361:	mov    r9d,0x2
   1a367:	mov    r8,rbp
   1a36a:	mov    rsi,rbx
   1a36d:	mov    edi,r12d
   1a370:	call   ebe0 <def_getopt>
   1a375:	cmp    eax,0xffffffff
   1a378:	jne    1a358 <main_cpupoolcpuremove+0x58>
   1a37a:	mov    rdx,QWORD PTR [rip+0x220c27]        # 23afa8 <optind@GLIBC_2.2.5>
   1a381:	mov    rsi,r13
   1a384:	movsxd rax,DWORD PTR [rdx]
   1a387:	lea    ecx,[rax+0x1]
   1a38a:	mov    DWORD PTR [rdx],ecx
   1a38c:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
   1a391:	mov    rbp,QWORD PTR [rbx+rax*8]
   1a395:	mov    ebx,0x1
   1a39a:	call   11910 <parse_cpurange>
   1a39f:	test   eax,eax
   1a3a1:	je     1a3d0 <main_cpupoolcpuremove+0xd0>
   1a3a3:	mov    rdi,r13
   1a3a6:	call   bdb0 <libxl_bitmap_dispose@plt>
   1a3ab:	mov    rcx,QWORD PTR [rsp+0x28]
   1a3b0:	xor    rcx,QWORD PTR fs:0x28
   1a3b9:	mov    eax,ebx
   1a3bb:	jne    1a4a9 <main_cpupoolcpuremove+0x1a9>
   1a3c1:	add    rsp,0x30
   1a3c5:	pop    rbx
   1a3c6:	pop    rbp
   1a3c7:	pop    r12
   1a3c9:	pop    r13
   1a3cb:	pop    r14
   1a3cd:	ret    
   1a3ce:	xchg   ax,ax
   1a3d0:	mov    rdi,QWORD PTR [r14]
   1a3d3:	lea    rdx,[rsp+0xc]
   1a3d8:	xor    ecx,ecx
   1a3da:	mov    rsi,rbp
   1a3dd:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1a3e2:	test   eax,eax
   1a3e4:	je     1a440 <main_cpupoolcpuremove+0x140>
   1a3e6:	mov    rax,QWORD PTR [rip+0x220c03]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a3ed:	lea    rdx,[rip+0x16e3e]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1a3f4:	mov    rcx,rbp
   1a3f7:	mov    esi,0x1
   1a3fc:	mov    ebx,0x1
   1a401:	mov    rdi,QWORD PTR [rax]
   1a404:	xor    eax,eax
   1a406:	call   c1e0 <__fprintf_chk@plt>
   1a40b:	jmp    1a3a3 <main_cpupoolcpuremove+0xa3>
   1a40d:	nop    DWORD PTR [rax]
   1a410:	mov    rax,QWORD PTR [rip+0x220bd9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a417:	lea    rdi,[rip+0x16e61]        # 3127f <__PRETTY_FUNCTION__.10016+0x1ef>
   1a41e:	mov    edx,0x19
   1a423:	mov    esi,0x1
   1a428:	mov    ebx,0x1
   1a42d:	mov    rcx,QWORD PTR [rax]
   1a430:	call   c1b0 <fwrite@plt>
   1a435:	jmp    1a3ab <main_cpupoolcpuremove+0xab>
   1a43a:	nop    WORD PTR [rax+rax*1+0x0]
   1a440:	mov    esi,DWORD PTR [rsp+0xc]
   1a444:	mov    rdi,QWORD PTR [r14]
   1a447:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1a44c:	test   eax,eax
   1a44e:	je     1a3e6 <main_cpupoolcpuremove+0xe6>
   1a450:	mov    esi,DWORD PTR [rsp+0xc]
   1a454:	mov    rdi,QWORD PTR [r14]
   1a457:	mov    rdx,r13
   1a45a:	call   bd40 <libxl_cpupool_cpuremove_cpumap@plt>
   1a45f:	test   eax,eax
   1a461:	mov    ebx,eax
   1a463:	je     1a3a3 <main_cpupoolcpuremove+0xa3>
   1a469:	mov    rbx,QWORD PTR [rip+0x220b80]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a470:	lea    rdx,[rip+0x16f69]        # 313e0 <__PRETTY_FUNCTION__.10016+0x350>
   1a477:	mov    rcx,rbp
   1a47a:	mov    esi,0x1
   1a47f:	xor    eax,eax
   1a481:	mov    rdi,QWORD PTR [rbx]
   1a484:	call   c1e0 <__fprintf_chk@plt>
   1a489:	mov    rdi,QWORD PTR [rbx]
   1a48c:	lea    rdx,[rip+0x16f95]        # 31428 <__PRETTY_FUNCTION__.10016+0x398>
   1a493:	mov    rcx,rbp
   1a496:	mov    esi,0x1
   1a49b:	xor    eax,eax
   1a49d:	xor    ebx,ebx
   1a49f:	call   c1e0 <__fprintf_chk@plt>
   1a4a4:	jmp    1a3a3 <main_cpupoolcpuremove+0xa3>
   1a4a9:	call   b130 <__stack_chk_fail@plt>
   1a4ae:	xchg   ax,ax

000000000001a4b0 <main_cpupoolmigrate>:
   1a4b0:	push   r12
   1a4b2:	push   rbp
   1a4b3:	lea    rbp,[rip+0xfe39]        # 2a2f3 <__PRETTY_FUNCTION__.10113+0x6db>
   1a4ba:	push   rbx
   1a4bb:	mov    r12d,edi
   1a4be:	mov    rbx,rsi
   1a4c1:	sub    rsp,0x10
   1a4c5:	mov    rax,QWORD PTR fs:0x28
   1a4ce:	mov    QWORD PTR [rsp+0x8],rax
   1a4d3:	xor    eax,eax
   1a4d5:	nop    DWORD PTR [rax]
   1a4d8:	lea    rdx,[rip+0x17263]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1a4df:	xor    ecx,ecx
   1a4e1:	mov    r9d,0x2
   1a4e7:	mov    r8,rbp
   1a4ea:	mov    rsi,rbx
   1a4ed:	mov    edi,r12d
   1a4f0:	call   ebe0 <def_getopt>
   1a4f5:	cmp    eax,0xffffffff
   1a4f8:	jne    1a4d8 <main_cpupoolmigrate+0x28>
   1a4fa:	mov    rdx,QWORD PTR [rip+0x220aa7]        # 23afa8 <optind@GLIBC_2.2.5>
   1a501:	movsxd rax,DWORD PTR [rdx]
   1a504:	lea    ecx,[rax+0x1]
   1a507:	mov    DWORD PTR [rdx],ecx
   1a509:	mov    rbp,QWORD PTR [rbx+rax*8]
   1a50d:	lea    rdx,[rsp+0x4]
   1a512:	mov    r12,QWORD PTR [rbx+rax*8+0x8]
   1a517:	lea    rbx,[rip+0x222942]        # 23ce60 <ctx>
   1a51e:	mov    rsi,rbp
   1a521:	mov    rdi,QWORD PTR [rbx]
   1a524:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   1a529:	test   eax,eax
   1a52b:	jne    1a580 <main_cpupoolmigrate+0xd0>
   1a52d:	mov    esi,DWORD PTR [rsp+0x4]
   1a531:	mov    rdi,QWORD PTR [rbx]
   1a534:	call   ae20 <libxl_domid_to_name@plt>
   1a539:	test   rax,rax
   1a53c:	je     1a580 <main_cpupoolmigrate+0xd0>
   1a53e:	mov    rdi,QWORD PTR [rbx]
   1a541:	xor    ecx,ecx
   1a543:	mov    rdx,rsp
   1a546:	mov    rsi,r12
   1a549:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1a54e:	test   eax,eax
   1a550:	jne    1a5c0 <main_cpupoolmigrate+0x110>
   1a552:	mov    esi,DWORD PTR [rsp]
   1a555:	mov    rdi,QWORD PTR [rbx]
   1a558:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1a55d:	test   eax,eax
   1a55f:	je     1a5c0 <main_cpupoolmigrate+0x110>
   1a561:	mov    edx,DWORD PTR [rsp+0x4]
   1a565:	mov    esi,DWORD PTR [rsp]
   1a568:	mov    rdi,QWORD PTR [rbx]
   1a56b:	call   b6d0 <libxl_cpupool_movedomain@plt>
   1a570:	test   eax,eax
   1a572:	setne  al
   1a575:	movzx  eax,al
   1a578:	jmp    1a5a5 <main_cpupoolmigrate+0xf5>
   1a57a:	nop    WORD PTR [rax+rax*1+0x0]
   1a580:	lea    rdx,[rip+0x16d12]        # 31299 <__PRETTY_FUNCTION__.10016+0x209>
   1a587:	mov    rcx,rbp
   1a58a:	mov    rax,QWORD PTR [rip+0x220a5f]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a591:	mov    esi,0x1
   1a596:	mov    rdi,QWORD PTR [rax]
   1a599:	xor    eax,eax
   1a59b:	call   c1e0 <__fprintf_chk@plt>
   1a5a0:	mov    eax,0x1
   1a5a5:	mov    rcx,QWORD PTR [rsp+0x8]
   1a5aa:	xor    rcx,QWORD PTR fs:0x28
   1a5b3:	jne    1a5cc <main_cpupoolmigrate+0x11c>
   1a5b5:	add    rsp,0x10
   1a5b9:	pop    rbx
   1a5ba:	pop    rbp
   1a5bb:	pop    r12
   1a5bd:	ret    
   1a5be:	xchg   ax,ax
   1a5c0:	mov    rcx,r12
   1a5c3:	lea    rdx,[rip+0x16c68]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1a5ca:	jmp    1a58a <main_cpupoolmigrate+0xda>
   1a5cc:	call   b130 <__stack_chk_fail@plt>
   1a5d1:	nop    DWORD PTR [rax+rax*1+0x0]
   1a5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001a5e0 <main_cpupoolnumasplit>:
   1a5e0:	push   r15
   1a5e2:	push   r14
   1a5e4:	push   r13
   1a5e6:	push   r12
   1a5e8:	mov    r12d,edi
   1a5eb:	push   rbp
   1a5ec:	push   rbx
   1a5ed:	lea    rbx,[rip+0xfd23]        # 2a317 <__PRETTY_FUNCTION__.10113+0x6ff>
   1a5f4:	mov    rbp,rsi
   1a5f7:	sub    rsp,0x118
   1a5fe:	mov    rax,QWORD PTR fs:0x28
   1a607:	mov    QWORD PTR [rsp+0x108],rax
   1a60f:	xor    eax,eax
   1a611:	mov    QWORD PTR [rsp+0x68],0x0
   1a61a:	nop    WORD PTR [rax+rax*1+0x0]
   1a620:	lea    rdx,[rip+0x1711b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1a627:	xor    r9d,r9d
   1a62a:	xor    ecx,ecx
   1a62c:	mov    r8,rbx
   1a62f:	mov    rsi,rbp
   1a632:	mov    edi,r12d
   1a635:	call   ebe0 <def_getopt>
   1a63a:	cmp    eax,0xffffffff
   1a63d:	jne    1a620 <main_cpupoolnumasplit+0x40>
   1a63f:	lea    rbp,[rsp+0x90]
   1a647:	lea    r12,[rsp+0x70]
   1a64c:	mov    rdi,rbp
   1a64f:	call   b740 <libxl_dominfo_init@plt>
   1a654:	mov    rdi,r12
   1a657:	call   bc00 <libxl_bitmap_init@plt>
   1a65c:	lea    rbx,[rip+0x2227fd]        # 23ce60 <ctx>
   1a663:	lea    rsi,[rsp+0x60]
   1a668:	mov    rdi,QWORD PTR [rbx]
   1a66b:	call   c200 <libxl_list_cpupool@plt>
   1a670:	test   rax,rax
   1a673:	je     1a7a0 <main_cpupoolnumasplit+0x1c0>
   1a679:	mov    edx,DWORD PTR [rax]
   1a67b:	mov    esi,DWORD PTR [rsp+0x60]
   1a67f:	mov    rdi,rax
   1a682:	mov    r14d,DWORD PTR [rax+0x10]
   1a686:	mov    DWORD PTR [rsp+0x5c],edx
   1a68a:	call   ae50 <libxl_cpupoolinfo_list_free@plt>
   1a68f:	cmp    DWORD PTR [rsp+0x60],0x1
   1a694:	jle    1a6f0 <main_cpupoolnumasplit+0x110>
   1a696:	mov    rax,QWORD PTR [rip+0x220953]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a69d:	lea    rdi,[rip+0x16dd4]        # 31478 <__PRETTY_FUNCTION__.10016+0x3e8>
   1a6a4:	mov    edx,0x30
   1a6a9:	mov    esi,0x1
   1a6ae:	mov    r15d,0x1
   1a6b4:	mov    rcx,QWORD PTR [rax]
   1a6b7:	call   c1b0 <fwrite@plt>
   1a6bc:	mov    rcx,QWORD PTR [rsp+0x108]
   1a6c4:	xor    rcx,QWORD PTR fs:0x28
   1a6cd:	mov    eax,r15d
   1a6d0:	jne    1ac88 <main_cpupoolnumasplit+0x6a8>
   1a6d6:	add    rsp,0x118
   1a6dd:	pop    rbx
   1a6de:	pop    rbp
   1a6df:	pop    r12
   1a6e1:	pop    r13
   1a6e3:	pop    r14
   1a6e5:	pop    r15
   1a6e7:	ret    
   1a6e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1a6f0:	mov    rdi,QWORD PTR [rbx]
   1a6f3:	lea    rsi,[rsp+0x64]
   1a6f8:	call   bc60 <libxl_get_cpu_topology@plt>
   1a6fd:	test   rax,rax
   1a700:	mov    r13,rax
   1a703:	je     1a800 <main_cpupoolnumasplit+0x220>
   1a709:	mov    rdi,QWORD PTR [rbx]
   1a70c:	xor    edx,edx
   1a70e:	mov    rsi,r12
   1a711:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1a716:	test   eax,eax
   1a718:	jne    1a7d0 <main_cpupoolnumasplit+0x1f0>
   1a71e:	mov    r8d,DWORD PTR [r13+0x8]
   1a722:	lea    rax,[rsp+0x58]
   1a727:	mov    rdi,QWORD PTR [rbx]
   1a72a:	xor    esi,esi
   1a72c:	mov    rcx,rax
   1a72f:	mov    QWORD PTR [rsp+0x10],rax
   1a734:	mov    edx,r8d
   1a737:	mov    DWORD PTR [rsp+0x8],r8d
   1a73c:	call   c210 <libxl_cpupool_cpuadd_node@plt>
   1a741:	test   eax,eax
   1a743:	mov    r8d,DWORD PTR [rsp+0x8]
   1a748:	je     1a82b <main_cpupoolnumasplit+0x24b>
   1a74e:	mov    rax,QWORD PTR [rip+0x22089b]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a755:	lea    rdi,[rip+0x16d54]        # 314b0 <__PRETTY_FUNCTION__.10016+0x420>
   1a75c:	mov    esi,0x1
   1a761:	mov    edx,0x1e
   1a766:	mov    r15d,0x1
   1a76c:	mov    rcx,QWORD PTR [rax]
   1a76f:	call   c1b0 <fwrite@plt>
   1a774:	mov    esi,DWORD PTR [rsp+0x64]
   1a778:	mov    rdi,r13
   1a77b:	call   bc20 <libxl_cputopology_list_free@plt>
   1a780:	mov    rdi,r12
   1a783:	call   bdb0 <libxl_bitmap_dispose@plt>
   1a788:	mov    rdi,rbp
   1a78b:	call   b8d0 <libxl_dominfo_dispose@plt>
   1a790:	mov    rdi,QWORD PTR [rsp+0x68]
   1a795:	call   ac40 <free@plt>
   1a79a:	jmp    1a6bc <main_cpupoolnumasplit+0xdc>
   1a79f:	nop
   1a7a0:	mov    rax,QWORD PTR [rip+0x220849]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a7a7:	lea    rdi,[rip+0x16a3f]        # 311ed <__PRETTY_FUNCTION__.10016+0x15d>
   1a7ae:	mov    edx,0x1b
   1a7b3:	mov    esi,0x1
   1a7b8:	mov    r15d,0x1
   1a7be:	mov    rcx,QWORD PTR [rax]
   1a7c1:	call   c1b0 <fwrite@plt>
   1a7c6:	jmp    1a6bc <main_cpupoolnumasplit+0xdc>
   1a7cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1a7d0:	mov    rax,QWORD PTR [rip+0x220819]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a7d7:	lea    rdi,[rip+0x16933]        # 31111 <__PRETTY_FUNCTION__.10016+0x81>
   1a7de:	mov    esi,0x1
   1a7e3:	mov    edx,0x1a
   1a7e8:	mov    r15d,0x1
   1a7ee:	mov    rcx,QWORD PTR [rax]
   1a7f1:	call   c1b0 <fwrite@plt>
   1a7f6:	mov    esi,DWORD PTR [rsp+0x64]
   1a7fa:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1a7ff:	nop
   1a800:	mov    rax,QWORD PTR [rip+0x2207e9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a807:	lea    rdi,[rip+0x16b5a]        # 31368 <__PRETTY_FUNCTION__.10016+0x2d8>
   1a80e:	mov    edx,0x1e
   1a813:	mov    esi,0x1
   1a818:	mov    r15d,0x1
   1a81e:	mov    rcx,QWORD PTR [rax]
   1a821:	call   c1b0 <fwrite@plt>
   1a826:	jmp    1a6bc <main_cpupoolnumasplit+0xdc>
   1a82b:	lea    rdi,[rsp+0x68]
   1a830:	lea    rsi,[rip+0x16a77]        # 312ae <__PRETTY_FUNCTION__.10016+0x21e>
   1a837:	mov    edx,r8d
   1a83a:	xor    eax,eax
   1a83c:	mov    DWORD PTR [rsp+0x8],r8d
   1a841:	mov    QWORD PTR [rsp+0x18],rdi
   1a846:	call   e8e0 <xasprintf>
   1a84b:	mov    rsi,QWORD PTR [rsp+0x68]
   1a850:	mov    rdi,QWORD PTR [rbx]
   1a853:	xor    edx,edx
   1a855:	call   bed0 <libxl_cpupool_rename@plt>
   1a85a:	test   eax,eax
   1a85c:	mov    r15d,eax
   1a85f:	mov    r8d,DWORD PTR [rsp+0x8]
   1a864:	jne    1a8cc <main_cpupoolnumasplit+0x2ec>
   1a866:	mov    esi,DWORD PTR [rsp+0x64]
   1a86a:	mov    DWORD PTR [rsp+0x58],0x0
   1a872:	test   esi,esi
   1a874:	jle    1a908 <main_cpupoolnumasplit+0x328>
   1a87a:	lea    rax,[r13+0x8]
   1a87e:	mov    QWORD PTR [rsp+0x8],r13
   1a883:	mov    QWORD PTR [rsp+0x20],rbp
   1a888:	mov    r13,r12
   1a88b:	mov    ebp,r15d
   1a88e:	mov    r12d,r8d
   1a891:	mov    r15,rax
   1a894:	jmp    1a8ad <main_cpupoolnumasplit+0x2cd>
   1a896:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a8a0:	add    ebp,0x1
   1a8a3:	add    r15,0xc
   1a8a7:	cmp    DWORD PTR [rsp+0x64],ebp
   1a8ab:	jle    1a8fb <main_cpupoolnumasplit+0x31b>
   1a8ad:	cmp    r12d,DWORD PTR [r15]
   1a8b0:	jne    1a8a0 <main_cpupoolnumasplit+0x2c0>
   1a8b2:	mov    DWORD PTR [r15],0xffffffff
   1a8b9:	mov    esi,DWORD PTR [rsp+0x58]
   1a8bd:	mov    rdi,r13
   1a8c0:	call   b7d0 <libxl_bitmap_set@plt>
   1a8c5:	add    DWORD PTR [rsp+0x58],0x1
   1a8ca:	jmp    1a8a0 <main_cpupoolnumasplit+0x2c0>
   1a8cc:	mov    rax,QWORD PTR [rip+0x22071d]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a8d3:	lea    rdi,[rip+0x169e0]        # 312ba <__PRETTY_FUNCTION__.10016+0x22a>
   1a8da:	mov    esi,0x1
   1a8df:	mov    edx,0x19
   1a8e4:	mov    r15d,0x1
   1a8ea:	mov    rcx,QWORD PTR [rax]
   1a8ed:	call   c1b0 <fwrite@plt>
   1a8f2:	mov    esi,DWORD PTR [rsp+0x64]
   1a8f6:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1a8fb:	mov    r12,r13
   1a8fe:	mov    rbp,QWORD PTR [rsp+0x20]
   1a903:	mov    r13,QWORD PTR [rsp+0x8]
   1a908:	mov    rdi,QWORD PTR [rbx]
   1a90b:	xor    edx,edx
   1a90d:	mov    rsi,rbp
   1a910:	call   b5b0 <libxl_domain_info@plt>
   1a915:	test   eax,eax
   1a917:	jne    1a9cd <main_cpupoolnumasplit+0x3ed>
   1a91d:	mov    eax,DWORD PTR [rsp+0x58]
   1a921:	cmp    DWORD PTR [rsp+0xf4],eax
   1a928:	ja     1a9fc <main_cpupoolnumasplit+0x41c>
   1a92e:	mov    r15d,0xa
   1a934:	mov    DWORD PTR [rsp+0x8],r14d
   1a939:	nop    DWORD PTR [rax+0x0]
   1a940:	mov    rdi,rbp
   1a943:	call   b8d0 <libxl_dominfo_dispose@plt>
   1a948:	mov    rdi,rbp
   1a94b:	call   b740 <libxl_dominfo_init@plt>
   1a950:	mov    rdi,QWORD PTR [rbx]
   1a953:	xor    edx,edx
   1a955:	mov    rsi,rbp
   1a958:	call   b5b0 <libxl_domain_info@plt>
   1a95d:	test   eax,eax
   1a95f:	mov    r14d,eax
   1a962:	jne    1a9cd <main_cpupoolnumasplit+0x3ed>
   1a964:	mov    eax,DWORD PTR [rsp+0x58]
   1a968:	cmp    DWORD PTR [rsp+0xf4],eax
   1a96f:	jbe    1aa40 <main_cpupoolnumasplit+0x460>
   1a975:	mov    edi,0x1
   1a97a:	call   c420 <sleep@plt>
   1a97f:	sub    r15d,0x1
   1a983:	jne    1a940 <main_cpupoolnumasplit+0x360>
   1a985:	mov    eax,DWORD PTR [rsp+0x58]
   1a989:	cmp    DWORD PTR [rsp+0xf4],eax
   1a990:	mov    r15d,r14d
   1a993:	mov    r14d,DWORD PTR [rsp+0x8]
   1a998:	jbe    1aa48 <main_cpupoolnumasplit+0x468>
   1a99e:	mov    rax,QWORD PTR [rip+0x22064b]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a9a5:	lea    rdi,[rip+0x16928]        # 312d4 <__PRETTY_FUNCTION__.10016+0x244>
   1a9ac:	mov    esi,0x1
   1a9b1:	mov    edx,0x18
   1a9b6:	mov    r15d,0x1
   1a9bc:	mov    rcx,QWORD PTR [rax]
   1a9bf:	call   c1b0 <fwrite@plt>
   1a9c4:	mov    esi,DWORD PTR [rsp+0x64]
   1a9c8:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1a9cd:	mov    rax,QWORD PTR [rip+0x22061c]        # 23aff0 <stderr@GLIBC_2.2.5>
   1a9d4:	lea    rdi,[rip+0x16af5]        # 314d0 <__PRETTY_FUNCTION__.10016+0x440>
   1a9db:	mov    esi,0x1
   1a9e0:	mov    edx,0x23
   1a9e5:	mov    r15d,0x1
   1a9eb:	mov    rcx,QWORD PTR [rax]
   1a9ee:	call   c1b0 <fwrite@plt>
   1a9f3:	mov    esi,DWORD PTR [rsp+0x64]
   1a9f7:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1a9fc:	mov    rdi,QWORD PTR [rbx]
   1a9ff:	xor    esi,esi
   1aa01:	mov    rdx,r12
   1aa04:	call   b490 <libxl_set_vcpuonline@plt>
   1aa09:	test   eax,eax
   1aa0b:	je     1a92e <main_cpupoolnumasplit+0x34e>
   1aa11:	mov    rax,QWORD PTR [rip+0x2205d8]        # 23aff0 <stderr@GLIBC_2.2.5>
   1aa18:	lea    rdi,[rip+0x16ad9]        # 314f8 <__PRETTY_FUNCTION__.10016+0x468>
   1aa1f:	mov    esi,0x1
   1aa24:	mov    edx,0x25
   1aa29:	mov    r15d,0x1
   1aa2f:	mov    rcx,QWORD PTR [rax]
   1aa32:	call   c1b0 <fwrite@plt>
   1aa37:	mov    esi,DWORD PTR [rsp+0x64]
   1aa3b:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1aa40:	mov    r15d,r14d
   1aa43:	mov    r14d,DWORD PTR [rsp+0x8]
   1aa48:	mov    edx,DWORD PTR [rsp+0x70]
   1aa4c:	mov    rdi,QWORD PTR [rsp+0x78]
   1aa51:	xor    esi,esi
   1aa53:	call   b400 <memset@plt>
   1aa58:	mov    esi,DWORD PTR [rsp+0x64]
   1aa5c:	test   esi,esi
   1aa5e:	jle    1a778 <main_cpupoolnumasplit+0x198>
   1aa64:	lea    rdx,[rsp+0x5c]
   1aa69:	lea    rax,[r13+0x8]
   1aa6d:	lea    rcx,[rsp+0x80]
   1aa75:	xor    r10d,r10d
   1aa78:	mov    QWORD PTR [rsp+0x30],r13
   1aa7d:	mov    DWORD PTR [rsp+0x4c],r15d
   1aa82:	mov    QWORD PTR [rsp+0x8],rdx
   1aa87:	lea    rdx,[r13+0x14]
   1aa8b:	mov    QWORD PTR [rsp+0x40],rbp
   1aa90:	mov    DWORD PTR [rsp+0x20],r14d
   1aa95:	mov    r15,r10
   1aa98:	mov    QWORD PTR [rsp+0x38],r12
   1aa9d:	mov    QWORD PTR [rsp+0x28],rdx
   1aaa2:	mov    rbp,rax
   1aaa5:	mov    r13,rcx
   1aaa8:	nop    DWORD PTR [rax+rax*1+0x0]
   1aab0:	mov    r14d,DWORD PTR [rbp+0x0]
   1aab4:	cmp    r14d,0xffffffff
   1aab8:	je     1abc8 <main_cpupoolnumasplit+0x5e8>
   1aabe:	mov    rcx,QWORD PTR [rsp+0x10]
   1aac3:	mov    rdi,QWORD PTR [rbx]
   1aac6:	xor    esi,esi
   1aac8:	mov    edx,r14d
   1aacb:	call   c3e0 <libxl_cpupool_cpuremove_node@plt>
   1aad0:	test   eax,eax
   1aad2:	jne    1abce <main_cpupoolnumasplit+0x5ee>
   1aad8:	mov    rdi,QWORD PTR [rsp+0x68]
   1aadd:	call   ac40 <free@plt>
   1aae2:	mov    rdi,QWORD PTR [rsp+0x18]
   1aae7:	lea    rsi,[rip+0x167c0]        # 312ae <__PRETTY_FUNCTION__.10016+0x21e>
   1aaee:	xor    eax,eax
   1aaf0:	mov    edx,r14d
   1aaf3:	call   e8e0 <xasprintf>
   1aaf8:	mov    rdi,r13
   1aafb:	call   b2d0 <libxl_uuid_generate@plt>
   1ab00:	mov    DWORD PTR [rsp+0x5c],0x0
   1ab08:	sub    rsp,0x8
   1ab0c:	mov    r9,r13
   1ab0f:	push   QWORD PTR [rsp+0x10]
   1ab13:	mov    ecx,DWORD PTR [rsp+0x80]
   1ab1a:	mov    r8,QWORD PTR [rsp+0x88]
   1ab22:	mov    edx,DWORD PTR [rsp+0x30]
   1ab26:	mov    rsi,QWORD PTR [rsp+0x78]
   1ab2b:	mov    rdi,QWORD PTR [rbx]
   1ab2e:	call   ae00 <libxl_cpupool_create@plt>
   1ab33:	test   eax,eax
   1ab35:	pop    rdx
   1ab36:	pop    rcx
   1ab37:	jne    1ac4a <main_cpupoolnumasplit+0x66a>
   1ab3d:	mov    rcx,QWORD PTR [rsp+0x10]
   1ab42:	mov    esi,DWORD PTR [rsp+0x5c]
   1ab46:	mov    edx,r14d
   1ab49:	mov    rdi,QWORD PTR [rbx]
   1ab4c:	call   c210 <libxl_cpupool_cpuadd_node@plt>
   1ab51:	test   eax,eax
   1ab53:	jne    1ac0c <main_cpupoolnumasplit+0x62c>
   1ab59:	mov    esi,DWORD PTR [rsp+0x64]
   1ab5d:	cmp    esi,r15d
   1ab60:	jle    1ab94 <main_cpupoolnumasplit+0x5b4>
   1ab62:	lea    eax,[rsi-0x1]
   1ab65:	mov    rcx,QWORD PTR [rsp+0x28]
   1ab6a:	sub    eax,r15d
   1ab6d:	add    rax,r15
   1ab70:	lea    rax,[rax+rax*2]
   1ab74:	lea    rdx,[rcx+rax*4]
   1ab78:	mov    rax,rbp
   1ab7b:	nop    DWORD PTR [rax+rax*1+0x0]
   1ab80:	cmp    r14d,DWORD PTR [rax]
   1ab83:	jne    1ab8b <main_cpupoolnumasplit+0x5ab>
   1ab85:	mov    DWORD PTR [rax],0xffffffff
   1ab8b:	add    rax,0xc
   1ab8f:	cmp    rax,rdx
   1ab92:	jne    1ab80 <main_cpupoolnumasplit+0x5a0>
   1ab94:	lea    eax,[r15+0x1]
   1ab98:	add    rbp,0xc
   1ab9c:	add    r15,0x1
   1aba0:	cmp    esi,eax
   1aba2:	jg     1aab0 <main_cpupoolnumasplit+0x4d0>
   1aba8:	mov    r13,QWORD PTR [rsp+0x30]
   1abad:	mov    r15d,DWORD PTR [rsp+0x4c]
   1abb2:	mov    r12,QWORD PTR [rsp+0x38]
   1abb7:	mov    rbp,QWORD PTR [rsp+0x40]
   1abbc:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1abc1:	nop    DWORD PTR [rax+0x0]
   1abc8:	mov    esi,DWORD PTR [rsp+0x64]
   1abcc:	jmp    1ab94 <main_cpupoolnumasplit+0x5b4>
   1abce:	mov    rax,QWORD PTR [rip+0x22041b]        # 23aff0 <stderr@GLIBC_2.2.5>
   1abd5:	lea    rdi,[rip+0x16944]        # 31520 <__PRETTY_FUNCTION__.10016+0x490>
   1abdc:	mov    esi,0x1
   1abe1:	mov    edx,0x22
   1abe6:	mov    r13,QWORD PTR [rsp+0x30]
   1abeb:	mov    r12,QWORD PTR [rsp+0x38]
   1abf0:	mov    rbp,QWORD PTR [rsp+0x40]
   1abf5:	mov    r15d,0x1
   1abfb:	mov    rcx,QWORD PTR [rax]
   1abfe:	call   c1b0 <fwrite@plt>
   1ac03:	mov    esi,DWORD PTR [rsp+0x64]
   1ac07:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1ac0c:	mov    rax,QWORD PTR [rip+0x2203dd]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ac13:	lea    rdi,[rip+0x1692e]        # 31548 <__PRETTY_FUNCTION__.10016+0x4b8>
   1ac1a:	mov    esi,0x1
   1ac1f:	mov    edx,0x20
   1ac24:	mov    r13,QWORD PTR [rsp+0x30]
   1ac29:	mov    r12,QWORD PTR [rsp+0x38]
   1ac2e:	mov    rbp,QWORD PTR [rsp+0x40]
   1ac33:	mov    r15d,0x1
   1ac39:	mov    rcx,QWORD PTR [rax]
   1ac3c:	call   c1b0 <fwrite@plt>
   1ac41:	mov    esi,DWORD PTR [rsp+0x64]
   1ac45:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1ac4a:	mov    rax,QWORD PTR [rip+0x22039f]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ac51:	lea    rdi,[rip+0x1655d]        # 311b5 <__PRETTY_FUNCTION__.10016+0x125>
   1ac58:	mov    esi,0x1
   1ac5d:	mov    edx,0x1a
   1ac62:	mov    r13,QWORD PTR [rsp+0x30]
   1ac67:	mov    r12,QWORD PTR [rsp+0x38]
   1ac6c:	mov    rbp,QWORD PTR [rsp+0x40]
   1ac71:	mov    r15d,0x1
   1ac77:	mov    rcx,QWORD PTR [rax]
   1ac7a:	call   c1b0 <fwrite@plt>
   1ac7f:	mov    esi,DWORD PTR [rsp+0x64]
   1ac83:	jmp    1a778 <main_cpupoolnumasplit+0x198>
   1ac88:	call   b130 <__stack_chk_fail@plt>
   1ac8d:	nop    DWORD PTR [rax]

000000000001ac90 <main_getenforce>:
   1ac90:	lea    rax,[rip+0x2221c9]        # 23ce60 <ctx>
   1ac97:	push   rbx
   1ac98:	mov    rdi,QWORD PTR [rax]
   1ac9b:	call   bb30 <libxl_flask_getenforce@plt>
   1aca0:	test   eax,eax
   1aca2:	mov    ebx,eax
   1aca4:	js     1acb8 <main_getenforce+0x28>
   1aca6:	cmp    eax,0x1
   1aca9:	je     1ad10 <main_getenforce+0x80>
   1acab:	test   eax,eax
   1acad:	je     1acf0 <main_getenforce+0x60>
   1acaf:	mov    eax,ebx
   1acb1:	pop    rbx
   1acb2:	ret    
   1acb3:	nop    DWORD PTR [rax+rax*1+0x0]
   1acb8:	call   ad80 <__errno_location@plt>
   1acbd:	cmp    DWORD PTR [rax],0x26
   1acc0:	je     1ad00 <main_getenforce+0x70>
   1acc2:	mov    rax,QWORD PTR [rip+0x220327]        # 23aff0 <stderr@GLIBC_2.2.5>
   1acc9:	lea    rdi,[rip+0x168ac]        # 3157c <__PRETTY_FUNCTION__.10016+0x4ec>
   1acd0:	mov    edx,0x1d
   1acd5:	mov    esi,0x1
   1acda:	mov    rcx,QWORD PTR [rax]
   1acdd:	call   c1b0 <fwrite@plt>
   1ace2:	mov    eax,ebx
   1ace4:	pop    rbx
   1ace5:	ret    
   1ace6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1acf0:	lea    rdi,[rip+0x168ad]        # 315a4 <__PRETTY_FUNCTION__.10016+0x514>
   1acf7:	call   aeb0 <puts@plt>
   1acfc:	mov    eax,ebx
   1acfe:	pop    rbx
   1acff:	ret    
   1ad00:	lea    rdi,[rip+0x16862]        # 31569 <__PRETTY_FUNCTION__.10016+0x4d9>
   1ad07:	call   aeb0 <puts@plt>
   1ad0c:	mov    eax,ebx
   1ad0e:	pop    rbx
   1ad0f:	ret    
   1ad10:	lea    rdi,[rip+0x16883]        # 3159a <__PRETTY_FUNCTION__.10016+0x50a>
   1ad17:	call   aeb0 <puts@plt>
   1ad1c:	mov    eax,ebx
   1ad1e:	pop    rbx
   1ad1f:	ret    

000000000001ad20 <main_setenforce>:
   1ad20:	mov    rax,QWORD PTR [rip+0x220281]        # 23afa8 <optind@GLIBC_2.2.5>
   1ad27:	push   rbx
   1ad28:	movsxd rax,DWORD PTR [rax]
   1ad2b:	cmp    eax,edi
   1ad2d:	jge    1ade8 <main_setenforce+0xc8>
   1ad33:	mov    rbx,QWORD PTR [rsi+rax*8]
   1ad37:	lea    rdi,[rip+0x19b38]        # 34876 <savefileheader_magic+0x3d6>
   1ad3e:	mov    ecx,0x2
   1ad43:	mov    rsi,rbx
   1ad46:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1ad48:	seta   sil
   1ad4c:	sbb    sil,0x0
   1ad50:	movsx  esi,sil
   1ad54:	test   esi,esi
   1ad56:	je     1ad77 <main_setenforce+0x57>
   1ad58:	lea    rdi,[rip+0xeabc]        # 2981b <_IO_stdin_used+0xdb>
   1ad5f:	mov    ecx,0x2
   1ad64:	mov    rsi,rbx
   1ad67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1ad69:	seta   al
   1ad6c:	sbb    al,0x0
   1ad6e:	test   al,al
   1ad70:	jne    1adc0 <main_setenforce+0xa0>
   1ad72:	mov    esi,0x1
   1ad77:	lea    rax,[rip+0x2220e2]        # 23ce60 <ctx>
   1ad7e:	mov    rdi,QWORD PTR [rax]
   1ad81:	call   b860 <libxl_flask_setenforce@plt>
   1ad86:	test   eax,eax
   1ad88:	mov    ebx,eax
   1ad8a:	je     1adb5 <main_setenforce+0x95>
   1ad8c:	call   ad80 <__errno_location@plt>
   1ad91:	cmp    DWORD PTR [rax],0x26
   1ad94:	mov    rdx,QWORD PTR [rip+0x220255]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ad9b:	mov    rdi,QWORD PTR [rdx]
   1ad9e:	je     1ae00 <main_setenforce+0xe0>
   1ada0:	lea    rdx,[rip+0x16849]        # 315f0 <__PRETTY_FUNCTION__.10016+0x560>
   1ada7:	mov    ecx,ebx
   1ada9:	mov    esi,0x1
   1adae:	xor    eax,eax
   1adb0:	call   c1e0 <__fprintf_chk@plt>
   1adb5:	mov    eax,ebx
   1adb7:	pop    rbx
   1adb8:	ret    
   1adb9:	nop    DWORD PTR [rax+0x0]
   1adc0:	lea    rsi,[rip+0x14787]        # 2f54e <__func__.10421+0x11c6>
   1adc7:	mov    rdi,rbx
   1adca:	call   acd0 <strcasecmp@plt>
   1adcf:	test   eax,eax
   1add1:	mov    esi,eax
   1add3:	je     1ad77 <main_setenforce+0x57>
   1add5:	lea    rsi,[rip+0x167d3]        # 315af <__PRETTY_FUNCTION__.10016+0x51f>
   1addc:	mov    rdi,rbx
   1addf:	call   acd0 <strcasecmp@plt>
   1ade4:	test   eax,eax
   1ade6:	je     1ad72 <main_setenforce+0x52>
   1ade8:	lea    rdi,[rip+0xf546]        # 2a335 <__PRETTY_FUNCTION__.10113+0x71d>
   1adef:	mov    ebx,0x2
   1adf4:	call   d4f0 <help>
   1adf9:	mov    eax,ebx
   1adfb:	pop    rbx
   1adfc:	ret    
   1adfd:	nop    DWORD PTR [rax]
   1ae00:	mov    rcx,rdi
   1ae03:	lea    rdi,[rip+0x167af]        # 315b9 <__PRETTY_FUNCTION__.10016+0x529>
   1ae0a:	mov    edx,0x13
   1ae0f:	mov    esi,0x1
   1ae14:	call   c1b0 <fwrite@plt>
   1ae19:	mov    eax,ebx
   1ae1b:	pop    rbx
   1ae1c:	ret    
   1ae1d:	nop    DWORD PTR [rax]

000000000001ae20 <main_loadpolicy>:
   1ae20:	push   r12
   1ae22:	push   rbp
   1ae23:	push   rbx
   1ae24:	sub    rsp,0xa0
   1ae2b:	mov    rax,QWORD PTR fs:0x28
   1ae34:	mov    QWORD PTR [rsp+0x98],rax
   1ae3c:	xor    eax,eax
   1ae3e:	mov    rax,QWORD PTR [rip+0x220163]        # 23afa8 <optind@GLIBC_2.2.5>
   1ae45:	movsxd rax,DWORD PTR [rax]
   1ae48:	cmp    eax,edi
   1ae4a:	jge    1af88 <main_loadpolicy+0x168>
   1ae50:	mov    rbp,QWORD PTR [rsi+rax*8]
   1ae54:	xor    esi,esi
   1ae56:	xor    eax,eax
   1ae58:	mov    rdi,rbp
   1ae5b:	call   bf20 <open@plt>
   1ae60:	test   eax,eax
   1ae62:	mov    r12d,eax
   1ae65:	js     1af28 <main_loadpolicy+0x108>
   1ae6b:	mov    rdx,rsp
   1ae6e:	mov    rsi,rbp
   1ae71:	mov    edi,0x1
   1ae76:	call   b910 <__xstat@plt>
   1ae7b:	test   eax,eax
   1ae7d:	mov    ebx,eax
   1ae7f:	js     1afd8 <main_loadpolicy+0x1b8>
   1ae85:	mov    rbx,QWORD PTR [rsp+0x30]
   1ae8a:	mov    rdi,rbx
   1ae8d:	call   ba00 <malloc@plt>
   1ae92:	mov    rdx,rbx
   1ae95:	mov    rsi,rax
   1ae98:	mov    edi,r12d
   1ae9b:	mov    rbp,rax
   1ae9e:	call   b590 <read@plt>
   1aea3:	test   eax,eax
   1aea5:	mov    ebx,eax
   1aea7:	js     1afa0 <main_loadpolicy+0x180>
   1aead:	lea    rax,[rip+0x221fac]        # 23ce60 <ctx>
   1aeb4:	mov    edx,DWORD PTR [rsp+0x30]
   1aeb8:	mov    rsi,rbp
   1aebb:	mov    rdi,QWORD PTR [rax]
   1aebe:	call   b000 <libxl_flask_loadpolicy@plt>
   1aec3:	test   eax,eax
   1aec5:	mov    ebx,eax
   1aec7:	jns    1b010 <main_loadpolicy+0x1f0>
   1aecd:	call   ad80 <__errno_location@plt>
   1aed2:	cmp    DWORD PTR [rax],0x26
   1aed5:	je     1b028 <main_loadpolicy+0x208>
   1aedb:	neg    ebx
   1aedd:	mov    edi,ebx
   1aedf:	mov    DWORD PTR [rax],ebx
   1aee1:	mov    ebx,0xffffffff
   1aee6:	call   c3b0 <strerror@plt>
   1aeeb:	mov    rcx,rax
   1aeee:	mov    rax,QWORD PTR [rip+0x2200fb]        # 23aff0 <stderr@GLIBC_2.2.5>
   1aef5:	lea    rdx,[rip+0x167d4]        # 316d0 <__PRETTY_FUNCTION__.10016+0x640>
   1aefc:	mov    esi,0x1
   1af01:	mov    rdi,QWORD PTR [rax]
   1af04:	xor    eax,eax
   1af06:	call   c1e0 <__fprintf_chk@plt>
   1af0b:	nop    DWORD PTR [rax+rax*1+0x0]
   1af10:	mov    rdi,rbp
   1af13:	call   ac40 <free@plt>
   1af18:	mov    edi,r12d
   1af1b:	call   b4a0 <close@plt>
   1af20:	jmp    1af5c <main_loadpolicy+0x13c>
   1af22:	nop    WORD PTR [rax+rax*1+0x0]
   1af28:	call   ad80 <__errno_location@plt>
   1af2d:	mov    edi,DWORD PTR [rax]
   1af2f:	mov    ebx,0xffffffff
   1af34:	call   c3b0 <strerror@plt>
   1af39:	mov    r8,rax
   1af3c:	mov    rax,QWORD PTR [rip+0x2200ad]        # 23aff0 <stderr@GLIBC_2.2.5>
   1af43:	lea    rdx,[rip+0x166de]        # 31628 <__PRETTY_FUNCTION__.10016+0x598>
   1af4a:	mov    rcx,rbp
   1af4d:	mov    esi,0x1
   1af52:	mov    rdi,QWORD PTR [rax]
   1af55:	xor    eax,eax
   1af57:	call   c1e0 <__fprintf_chk@plt>
   1af5c:	mov    rcx,QWORD PTR [rsp+0x98]
   1af64:	xor    rcx,QWORD PTR fs:0x28
   1af6d:	mov    eax,ebx
   1af6f:	jne    1b04d <main_loadpolicy+0x22d>
   1af75:	add    rsp,0xa0
   1af7c:	pop    rbx
   1af7d:	pop    rbp
   1af7e:	pop    r12
   1af80:	ret    
   1af81:	nop    DWORD PTR [rax+0x0]
   1af88:	lea    rdi,[rip+0xf3cc]        # 2a35b <__PRETTY_FUNCTION__.10113+0x743>
   1af8f:	mov    ebx,0x2
   1af94:	call   d4f0 <help>
   1af99:	jmp    1af5c <main_loadpolicy+0x13c>
   1af9b:	nop    DWORD PTR [rax+rax*1+0x0]
   1afa0:	call   ad80 <__errno_location@plt>
   1afa5:	mov    edi,DWORD PTR [rax]
   1afa7:	call   c3b0 <strerror@plt>
   1afac:	mov    rcx,rax
   1afaf:	mov    rax,QWORD PTR [rip+0x22003a]        # 23aff0 <stderr@GLIBC_2.2.5>
   1afb6:	lea    rdx,[rip+0x166e3]        # 316a0 <__PRETTY_FUNCTION__.10016+0x610>
   1afbd:	mov    esi,0x1
   1afc2:	mov    rdi,QWORD PTR [rax]
   1afc5:	xor    eax,eax
   1afc7:	call   c1e0 <__fprintf_chk@plt>
   1afcc:	jmp    1af10 <main_loadpolicy+0xf0>
   1afd1:	nop    DWORD PTR [rax+0x0]
   1afd8:	call   ad80 <__errno_location@plt>
   1afdd:	mov    edi,DWORD PTR [rax]
   1afdf:	call   c3b0 <strerror@plt>
   1afe4:	mov    r8,rax
   1afe7:	mov    rax,QWORD PTR [rip+0x220002]        # 23aff0 <stderr@GLIBC_2.2.5>
   1afee:	lea    rdx,[rip+0x16663]        # 31658 <__PRETTY_FUNCTION__.10016+0x5c8>
   1aff5:	mov    rcx,rbp
   1aff8:	mov    esi,0x1
   1affd:	xor    ebp,ebp
   1afff:	mov    rdi,QWORD PTR [rax]
   1b002:	xor    eax,eax
   1b004:	call   c1e0 <__fprintf_chk@plt>
   1b009:	jmp    1af10 <main_loadpolicy+0xf0>
   1b00e:	xchg   ax,ax
   1b010:	lea    rdi,[rip+0x165b6]        # 315cd <__PRETTY_FUNCTION__.10016+0x53d>
   1b017:	call   aeb0 <puts@plt>
   1b01c:	jmp    1af10 <main_loadpolicy+0xf0>
   1b021:	nop    DWORD PTR [rax+0x0]
   1b028:	mov    rax,QWORD PTR [rip+0x21ffc1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b02f:	lea    rdi,[rip+0x16583]        # 315b9 <__PRETTY_FUNCTION__.10016+0x529>
   1b036:	mov    edx,0x13
   1b03b:	mov    esi,0x1
   1b040:	mov    rcx,QWORD PTR [rax]
   1b043:	call   c1b0 <fwrite@plt>
   1b048:	jmp    1af10 <main_loadpolicy+0xf0>
   1b04d:	call   b130 <__stack_chk_fail@plt>
   1b052:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1b05c:	nop    DWORD PTR [rax+0x0]

000000000001b060 <main_vtpmattach>:
   1b060:	push   r15
   1b062:	push   r14
   1b064:	push   r13
   1b066:	push   r12
   1b068:	lea    r12,[rip+0xf011]        # 2a080 <__PRETTY_FUNCTION__.10113+0x468>
   1b06f:	push   rbp
   1b070:	push   rbx
   1b071:	mov    ebp,edi
   1b073:	mov    rbx,rsi
   1b076:	sub    rsp,0x58
   1b07a:	mov    rax,QWORD PTR fs:0x28
   1b083:	mov    QWORD PTR [rsp+0x48],rax
   1b088:	xor    eax,eax
   1b08a:	nop    WORD PTR [rax+rax*1+0x0]
   1b090:	lea    rdx,[rip+0x166ab]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1b097:	xor    ecx,ecx
   1b099:	mov    r9d,0x1
   1b09f:	mov    r8,r12
   1b0a2:	mov    rsi,rbx
   1b0a5:	mov    edi,ebp
   1b0a7:	call   ebe0 <def_getopt>
   1b0ac:	cmp    eax,0xffffffff
   1b0af:	jne    1b090 <main_vtpmattach+0x30>
   1b0b1:	mov    r12,QWORD PTR [rip+0x21fef0]        # 23afa8 <optind@GLIBC_2.2.5>
   1b0b8:	lea    r15,[rip+0x221da1]        # 23ce60 <ctx>
   1b0bf:	lea    rdx,[rsp+0x14]
   1b0c4:	movsxd rax,DWORD PTR [r12]
   1b0c8:	mov    rdi,QWORD PTR [r15]
   1b0cb:	mov    rsi,QWORD PTR [rbx+rax*8]
   1b0cf:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   1b0d4:	test   eax,eax
   1b0d6:	js     1b200 <main_vtpmattach+0x1a0>
   1b0dc:	lea    r13,[rsp+0x20]
   1b0e1:	add    DWORD PTR [r12],0x1
   1b0e6:	mov    rdi,r13
   1b0e9:	call   c2c0 <libxl_device_vtpm_init@plt>
   1b0ee:	movsxd rdx,DWORD PTR [r12]
   1b0f2:	sub    ebp,edx
   1b0f4:	lea    rbx,[rbx+rdx*8]
   1b0f8:	test   ebp,ebp
   1b0fa:	jle    1b187 <main_vtpmattach+0x127>
   1b100:	lea    eax,[rbp-0x1]
   1b103:	lea    r14,[r13+0x8]
   1b107:	lea    rbp,[rsp+0x18]
   1b10c:	lea    r12,[rbx+rax*8+0x8]
   1b111:	jmp    1b137 <main_vtpmattach+0xd7>
   1b113:	nop    DWORD PTR [rax+rax*1+0x0]
   1b118:	mov    rsi,QWORD PTR [rsp+0x18]
   1b11d:	lea    rdi,[r13+0x14]
   1b121:	call   abe0 <libxl_uuid_from_string@plt>
   1b126:	test   eax,eax
   1b128:	jne    1b288 <main_vtpmattach+0x228>
   1b12e:	add    rbx,0x8
   1b132:	cmp    r12,rbx
   1b135:	je     1b187 <main_vtpmattach+0x127>
   1b137:	mov    rdx,QWORD PTR [rbx]
   1b13a:	lea    rdi,[rip+0x165b4]        # 316f5 <__PRETTY_FUNCTION__.10016+0x665>
   1b141:	mov    rcx,rbp
   1b144:	mov    esi,0x5
   1b149:	call   11e80 <match_option_size>
   1b14e:	test   eax,eax
   1b150:	jne    1b118 <main_vtpmattach+0xb8>
   1b152:	mov    rdx,QWORD PTR [rbx]
   1b155:	lea    rdi,[rip+0x1394c]        # 2eaa8 <__func__.10421+0x720>
   1b15c:	mov    rcx,rbp
   1b15f:	mov    esi,0x8
   1b164:	call   11e80 <match_option_size>
   1b169:	test   eax,eax
   1b16b:	je     1b278 <main_vtpmattach+0x218>
   1b171:	mov    rsi,QWORD PTR [rsp+0x18]
   1b176:	mov    rdi,r14
   1b179:	add    rbx,0x8
   1b17d:	call   11e50 <replace_string>
   1b182:	cmp    r12,rbx
   1b185:	jne    1b137 <main_vtpmattach+0xd7>
   1b187:	lea    rax,[rip+0x221d02]        # 23ce90 <dryrun_only>
   1b18e:	mov    rdi,QWORD PTR [r15]
   1b191:	mov    eax,DWORD PTR [rax]
   1b193:	test   eax,eax
   1b195:	je     1b250 <main_vtpmattach+0x1f0>
   1b19b:	mov    rsi,r13
   1b19e:	call   b7c0 <libxl_device_vtpm_to_json@plt>
   1b1a3:	lea    rsi,[rip+0x1656e]        # 31718 <__PRETTY_FUNCTION__.10016+0x688>
   1b1aa:	mov    rdx,rax
   1b1ad:	mov    rbx,rax
   1b1b0:	mov    edi,0x1
   1b1b5:	xor    eax,eax
   1b1b7:	call   bd50 <__printf_chk@plt>
   1b1bc:	mov    rdi,rbx
   1b1bf:	call   ac40 <free@plt>
   1b1c4:	mov    rdi,r13
   1b1c7:	call   c3f0 <libxl_device_vtpm_dispose@plt>
   1b1cc:	mov    rbx,QWORD PTR [rip+0x21fdcd]        # 23afa0 <stdout@GLIBC_2.2.5>
   1b1d3:	mov    rdi,QWORD PTR [rbx]
   1b1d6:	call   aec0 <ferror@plt>
   1b1db:	test   eax,eax
   1b1dd:	jne    1b1eb <main_vtpmattach+0x18b>
   1b1df:	mov    rdi,QWORD PTR [rbx]
   1b1e2:	call   ba30 <fflush@plt>
   1b1e7:	test   eax,eax
   1b1e9:	je     1b22a <main_vtpmattach+0x1ca>
   1b1eb:	lea    rdi,[rip+0x12ed6]        # 2e0c8 <__PRETTY_FUNCTION__.10113+0x44b0>
   1b1f2:	call   bfd0 <perror@plt>
   1b1f7:	or     edi,0xffffffff
   1b1fa:	call   c1a0 <exit@plt>
   1b1ff:	nop
   1b200:	movsxd rax,DWORD PTR [r12]
   1b204:	lea    rdx,[rip+0x16555]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   1b20b:	mov    rcx,QWORD PTR [rbx+rax*8]
   1b20f:	mov    rax,QWORD PTR [rip+0x21fdda]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b216:	mov    esi,0x1
   1b21b:	mov    rdi,QWORD PTR [rax]
   1b21e:	xor    eax,eax
   1b220:	call   c1e0 <__fprintf_chk@plt>
   1b225:	mov    eax,0x1
   1b22a:	mov    rcx,QWORD PTR [rsp+0x48]
   1b22f:	xor    rcx,QWORD PTR fs:0x28
   1b238:	jne    1b2ca <main_vtpmattach+0x26a>
   1b23e:	add    rsp,0x58
   1b242:	pop    rbx
   1b243:	pop    rbp
   1b244:	pop    r12
   1b246:	pop    r13
   1b248:	pop    r14
   1b24a:	pop    r15
   1b24c:	ret    
   1b24d:	nop    DWORD PTR [rax]
   1b250:	mov    esi,DWORD PTR [rsp+0x14]
   1b254:	xor    ecx,ecx
   1b256:	mov    rdx,r13
   1b259:	call   b150 <libxl_device_vtpm_add@plt>
   1b25e:	test   eax,eax
   1b260:	jne    1b2a0 <main_vtpmattach+0x240>
   1b262:	mov    rdi,r13
   1b265:	mov    DWORD PTR [rsp+0xc],eax
   1b269:	call   c3f0 <libxl_device_vtpm_dispose@plt>
   1b26e:	mov    eax,DWORD PTR [rsp+0xc]
   1b272:	jmp    1b22a <main_vtpmattach+0x1ca>
   1b274:	nop    DWORD PTR [rax+0x0]
   1b278:	mov    rcx,QWORD PTR [rbx]
   1b27b:	lea    rdx,[rip+0x13b6c]        # 2edee <__func__.10421+0xa66>
   1b282:	jmp    1b20f <main_vtpmattach+0x1af>
   1b284:	nop    DWORD PTR [rax+0x0]
   1b288:	mov    rcx,QWORD PTR [rsp+0x18]
   1b28d:	lea    rdx,[rip+0x16467]        # 316fb <__PRETTY_FUNCTION__.10016+0x66b>
   1b294:	jmp    1b20f <main_vtpmattach+0x1af>
   1b299:	nop    DWORD PTR [rax+0x0]
   1b2a0:	mov    rax,QWORD PTR [rip+0x21fd49]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b2a7:	lea    rdi,[rip+0x164da]        # 31788 <__PRETTY_FUNCTION__.10016+0x6f8>
   1b2ae:	mov    edx,0x1e
   1b2b3:	mov    esi,0x1
   1b2b8:	mov    rcx,QWORD PTR [rax]
   1b2bb:	call   c1b0 <fwrite@plt>
   1b2c0:	mov    eax,0x1
   1b2c5:	jmp    1b22a <main_vtpmattach+0x1ca>
   1b2ca:	call   b130 <__stack_chk_fail@plt>
   1b2cf:	nop

000000000001b2d0 <main_vtpmlist>:
   1b2d0:	push   r15
   1b2d2:	push   r14
   1b2d4:	push   r13
   1b2d6:	push   r12
   1b2d8:	lea    r12,[rip+0xedad]        # 2a08c <__PRETTY_FUNCTION__.10113+0x474>
   1b2df:	push   rbp
   1b2e0:	push   rbx
   1b2e1:	mov    rbp,rsi
   1b2e4:	mov    ebx,edi
   1b2e6:	sub    rsp,0x88
   1b2ed:	mov    rax,QWORD PTR fs:0x28
   1b2f6:	mov    QWORD PTR [rsp+0x78],rax
   1b2fb:	xor    eax,eax
   1b2fd:	nop    DWORD PTR [rax]
   1b300:	lea    rdx,[rip+0x1643b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1b307:	xor    ecx,ecx
   1b309:	mov    r9d,0x1
   1b30f:	mov    r8,r12
   1b312:	mov    rsi,rbp
   1b315:	mov    edi,ebx
   1b317:	call   ebe0 <def_getopt>
   1b31c:	cmp    eax,0xffffffff
   1b31f:	jne    1b300 <main_vtpmlist+0x30>
   1b321:	lea    rax,[rip+0x1640d]        # 31735 <__PRETTY_FUNCTION__.10016+0x6a5>
   1b328:	lea    rdx,[rip+0x16402]        # 31731 <__PRETTY_FUNCTION__.10016+0x6a1>
   1b32f:	lea    r9,[rip+0x163ec]        # 31722 <__PRETTY_FUNCTION__.10016+0x692>
   1b336:	lea    r8,[rip+0x163ec]        # 31729 <__PRETTY_FUNCTION__.10016+0x699>
   1b33d:	lea    rcx,[rip+0x163ea]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   1b344:	lea    rsi,[rip+0x1645d]        # 317a8 <__PRETTY_FUNCTION__.10016+0x718>
   1b34b:	push   rax
   1b34c:	lea    rax,[rip+0x16633]        # 31986 <__PRETTY_FUNCTION__.10016+0x8f6>
   1b353:	mov    edi,0x1
   1b358:	push   rax
   1b359:	lea    rax,[rip+0x163dd]        # 3173d <__PRETTY_FUNCTION__.10016+0x6ad>
   1b360:	push   rax
   1b361:	lea    rax,[rip+0x163dc]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   1b368:	push   rax
   1b369:	xor    eax,eax
   1b36b:	call   bd50 <__printf_chk@plt>
   1b370:	mov    rax,QWORD PTR [rip+0x21fc31]        # 23afa8 <optind@GLIBC_2.2.5>
   1b377:	add    rsp,0x20
   1b37b:	movsxd rdx,DWORD PTR [rax]
   1b37e:	sub    ebx,edx
   1b380:	lea    r13,[rbp+rdx*8+0x0]
   1b385:	test   ebx,ebx
   1b387:	jle    1b539 <main_vtpmlist+0x269>
   1b38d:	lea    eax,[rbx-0x1]
   1b390:	lea    r12,[rip+0x221ac9]        # 23ce60 <ctx>
   1b397:	lea    r14,[rsp+0x30]
   1b39c:	lea    rax,[r13+rax*8+0x8]
   1b3a1:	mov    QWORD PTR [rsp+0x8],rax
   1b3a6:	lea    rax,[rsp+0x2c]
   1b3ab:	mov    QWORD PTR [rsp+0x10],rax
   1b3b0:	lea    rax,[rsp+0x28]
   1b3b5:	mov    QWORD PTR [rsp+0x18],rax
   1b3ba:	nop    WORD PTR [rax+rax*1+0x0]
   1b3c0:	mov    rdx,QWORD PTR [rsp+0x10]
   1b3c5:	mov    rsi,QWORD PTR [r13+0x0]
   1b3c9:	mov    rdi,QWORD PTR [r12]
   1b3cd:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   1b3d2:	test   eax,eax
   1b3d4:	js     1b560 <main_vtpmlist+0x290>
   1b3da:	mov    rdx,QWORD PTR [rsp+0x18]
   1b3df:	mov    esi,DWORD PTR [rsp+0x2c]
   1b3e3:	mov    rdi,QWORD PTR [r12]
   1b3e7:	call   c4c0 <libxl_device_vtpm_list@plt>
   1b3ec:	test   rax,rax
   1b3ef:	mov    r15,rax
   1b3f2:	je     1b52a <main_vtpmlist+0x25a>
   1b3f8:	mov    esi,DWORD PTR [rsp+0x28]
   1b3fc:	test   esi,esi
   1b3fe:	jle    1b522 <main_vtpmlist+0x252>
   1b404:	mov    rbp,rax
   1b407:	xor    ebx,ebx
   1b409:	jmp    1b423 <main_vtpmlist+0x153>
   1b40b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b410:	mov    esi,DWORD PTR [rsp+0x28]
   1b414:	add    ebx,0x1
   1b417:	add    rbp,0x28
   1b41b:	cmp    esi,ebx
   1b41d:	jle    1b522 <main_vtpmlist+0x252>
   1b423:	mov    esi,DWORD PTR [rsp+0x2c]
   1b427:	mov    rdi,QWORD PTR [r12]
   1b42b:	mov    rcx,r14
   1b42e:	mov    rdx,rbp
   1b431:	call   b610 <libxl_device_vtpm_getinfo@plt>
   1b436:	test   eax,eax
   1b438:	jne    1b410 <main_vtpmlist+0x140>
   1b43a:	mov    edx,DWORD PTR [rsp+0x4c]
   1b43e:	sub    rsp,0x8
   1b442:	lea    rsi,[rip+0x1638f]        # 317d8 <__PRETTY_FUNCTION__.10016+0x748>
   1b449:	push   QWORD PTR [rsp+0x38]
   1b44d:	mov    eax,DWORD PTR [rsp+0x68]
   1b451:	mov    edi,0x1
   1b456:	add    ebx,0x1
   1b459:	add    rbp,0x28
   1b45d:	push   rax
   1b45e:	mov    eax,DWORD PTR [rsp+0x6c]
   1b462:	push   rax
   1b463:	mov    eax,DWORD PTR [rsp+0x70]
   1b467:	push   rax
   1b468:	push   rdx
   1b469:	movzx  eax,BYTE PTR [rsp+0x9b]
   1b471:	push   rax
   1b472:	movzx  eax,BYTE PTR [rsp+0xa2]
   1b47a:	push   rax
   1b47b:	movzx  eax,BYTE PTR [rsp+0xa9]
   1b483:	push   rax
   1b484:	movzx  eax,BYTE PTR [rsp+0xb0]
   1b48c:	push   rax
   1b48d:	movzx  eax,BYTE PTR [rsp+0xb7]
   1b495:	push   rax
   1b496:	movzx  eax,BYTE PTR [rsp+0xbe]
   1b49e:	push   rax
   1b49f:	movzx  eax,BYTE PTR [rsp+0xc5]
   1b4a7:	push   rax
   1b4a8:	movzx  eax,BYTE PTR [rsp+0xcc]
   1b4b0:	push   rax
   1b4b1:	movzx  eax,BYTE PTR [rsp+0xd3]
   1b4b9:	push   rax
   1b4ba:	movzx  eax,BYTE PTR [rsp+0xda]
   1b4c2:	push   rax
   1b4c3:	movzx  eax,BYTE PTR [rsp+0xe1]
   1b4cb:	push   rax
   1b4cc:	movzx  eax,BYTE PTR [rsp+0xe8]
   1b4d4:	push   rax
   1b4d5:	movzx  eax,BYTE PTR [rsp+0xef]
   1b4dd:	push   rax
   1b4de:	movzx  eax,BYTE PTR [rsp+0xf6]
   1b4e6:	push   rax
   1b4e7:	movzx  r9d,BYTE PTR [rsp+0xfd]
   1b4f0:	xor    eax,eax
   1b4f2:	movzx  r8d,BYTE PTR [rsp+0xfc]
   1b4fb:	mov    ecx,DWORD PTR [rsp+0xd8]
   1b502:	call   bd50 <__printf_chk@plt>
   1b507:	add    rsp,0xa0
   1b50e:	mov    rdi,r14
   1b511:	call   bdf0 <libxl_vtpminfo_dispose@plt>
   1b516:	mov    esi,DWORD PTR [rsp+0x28]
   1b51a:	cmp    esi,ebx
   1b51c:	jg     1b423 <main_vtpmlist+0x153>
   1b522:	mov    rdi,r15
   1b525:	call   c0b0 <libxl_device_vtpm_list_free@plt>
   1b52a:	add    r13,0x8
   1b52e:	cmp    r13,QWORD PTR [rsp+0x8]
   1b533:	jne    1b3c0 <main_vtpmlist+0xf0>
   1b539:	xor    eax,eax
   1b53b:	mov    rcx,QWORD PTR [rsp+0x78]
   1b540:	xor    rcx,QWORD PTR fs:0x28
   1b549:	jne    1b592 <main_vtpmlist+0x2c2>
   1b54b:	add    rsp,0x88
   1b552:	pop    rbx
   1b553:	pop    rbp
   1b554:	pop    r12
   1b556:	pop    r13
   1b558:	pop    r14
   1b55a:	pop    r15
   1b55c:	ret    
   1b55d:	nop    DWORD PTR [rax]
   1b560:	mov    rax,QWORD PTR [rip+0x21fa89]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b567:	mov    rcx,QWORD PTR [r13+0x0]
   1b56b:	lea    rdx,[rip+0x161ee]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   1b572:	mov    esi,0x1
   1b577:	add    r13,0x8
   1b57b:	mov    rdi,QWORD PTR [rax]
   1b57e:	xor    eax,eax
   1b580:	call   c1e0 <__fprintf_chk@plt>
   1b585:	cmp    r13,QWORD PTR [rsp+0x8]
   1b58a:	jne    1b3c0 <main_vtpmlist+0xf0>
   1b590:	jmp    1b539 <main_vtpmlist+0x269>
   1b592:	call   b130 <__stack_chk_fail@plt>
   1b597:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b5a0 <main_vtpmdetach>:
   1b5a0:	push   r15
   1b5a2:	push   r14
   1b5a4:	push   r13
   1b5a6:	push   r12
   1b5a8:	mov    r12d,edi
   1b5ab:	push   rbp
   1b5ac:	push   rbx
   1b5ad:	lea    rbp,[rip+0xeae2]        # 2a096 <__PRETTY_FUNCTION__.10113+0x47e>
   1b5b4:	mov    rbx,rsi
   1b5b7:	sub    rsp,0x48
   1b5bb:	mov    rax,QWORD PTR fs:0x28
   1b5c4:	mov    QWORD PTR [rsp+0x38],rax
   1b5c9:	xor    eax,eax
   1b5cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1b5d0:	lea    rdx,[rip+0x1616b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1b5d7:	xor    ecx,ecx
   1b5d9:	mov    r9d,0x2
   1b5df:	mov    r8,rbp
   1b5e2:	mov    rsi,rbx
   1b5e5:	mov    edi,r12d
   1b5e8:	call   ebe0 <def_getopt>
   1b5ed:	cmp    eax,0xffffffff
   1b5f0:	jne    1b5d0 <main_vtpmdetach+0x30>
   1b5f2:	mov    rbp,QWORD PTR [rip+0x21f9af]        # 23afa8 <optind@GLIBC_2.2.5>
   1b5f9:	mov    r15,rsp
   1b5fc:	movsxd rax,DWORD PTR [rbp+0x0]
   1b600:	mov    rdi,QWORD PTR [rbx+rax*8]
   1b604:	call   eb40 <find_domain>
   1b609:	mov    r14d,eax
   1b60c:	movsxd rax,DWORD PTR [rbp+0x0]
   1b610:	mov    rdi,r15
   1b613:	mov    rsi,QWORD PTR [rbx+rax*8+0x8]
   1b618:	call   abe0 <libxl_uuid_from_string@plt>
   1b61d:	test   eax,eax
   1b61f:	je     1b6a0 <main_vtpmdetach+0x100>
   1b621:	movsxd rax,DWORD PTR [rbp+0x0]
   1b625:	xor    esi,esi
   1b627:	mov    edx,0xa
   1b62c:	lea    r12,[rsp+0x10]
   1b631:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
   1b636:	call   b7b0 <strtol@plt>
   1b63b:	lea    r13,[rip+0x22181e]        # 23ce60 <ctx>
   1b642:	mov    rcx,r12
   1b645:	mov    edx,eax
   1b647:	mov    esi,r14d
   1b64a:	mov    rdi,QWORD PTR [r13+0x0]
   1b64e:	call   c4e0 <libxl_devid_to_device_vtpm@plt>
   1b653:	test   eax,eax
   1b655:	jne    1b6c2 <main_vtpmdetach+0x122>
   1b657:	mov    rdi,QWORD PTR [r13+0x0]
   1b65b:	xor    ecx,ecx
   1b65d:	mov    rdx,r12
   1b660:	mov    esi,r14d
   1b663:	call   b010 <libxl_device_vtpm_remove@plt>
   1b668:	test   eax,eax
   1b66a:	mov    ebx,eax
   1b66c:	jne    1b6f0 <main_vtpmdetach+0x150>
   1b672:	mov    rdi,r12
   1b675:	call   c3f0 <libxl_device_vtpm_dispose@plt>
   1b67a:	mov    rdx,QWORD PTR [rsp+0x38]
   1b67f:	xor    rdx,QWORD PTR fs:0x28
   1b688:	mov    eax,ebx
   1b68a:	jne    1b715 <main_vtpmdetach+0x175>
   1b690:	add    rsp,0x48
   1b694:	pop    rbx
   1b695:	pop    rbp
   1b696:	pop    r12
   1b698:	pop    r13
   1b69a:	pop    r14
   1b69c:	pop    r15
   1b69e:	ret    
   1b69f:	nop
   1b6a0:	lea    r13,[rip+0x2217b9]        # 23ce60 <ctx>
   1b6a7:	lea    r12,[rsp+0x10]
   1b6ac:	mov    rdx,r15
   1b6af:	mov    esi,r14d
   1b6b2:	mov    rcx,r12
   1b6b5:	mov    rdi,QWORD PTR [r13+0x0]
   1b6b9:	call   c0c0 <libxl_uuid_to_device_vtpm@plt>
   1b6be:	test   eax,eax
   1b6c0:	je     1b657 <main_vtpmdetach+0xb7>
   1b6c2:	movsxd rax,DWORD PTR [rbp+0x0]
   1b6c6:	lea    rdx,[rip+0x1607d]        # 3174a <__PRETTY_FUNCTION__.10016+0x6ba>
   1b6cd:	mov    esi,0x1
   1b6d2:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   1b6d7:	mov    rax,QWORD PTR [rip+0x21f912]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b6de:	mov    ebx,0x1
   1b6e3:	mov    rdi,QWORD PTR [rax]
   1b6e6:	xor    eax,eax
   1b6e8:	call   c1e0 <__fprintf_chk@plt>
   1b6ed:	jmp    1b67a <main_vtpmdetach+0xda>
   1b6ef:	nop
   1b6f0:	mov    rax,QWORD PTR [rip+0x21f8f9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b6f7:	lea    rdi,[rip+0x16162]        # 31860 <__PRETTY_FUNCTION__.10016+0x7d0>
   1b6fe:	mov    edx,0x21
   1b703:	mov    esi,0x1
   1b708:	mov    rcx,QWORD PTR [rax]
   1b70b:	call   c1b0 <fwrite@plt>
   1b710:	jmp    1b672 <main_vtpmdetach+0xd2>
   1b715:	call   b130 <__stack_chk_fail@plt>
   1b71a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b720 <main_blockattach>:
   1b720:	push   r13
   1b722:	push   r12
   1b724:	lea    r12,[rip+0xe91f]        # 2a04a <__PRETTY_FUNCTION__.10113+0x432>
   1b72b:	push   rbp
   1b72c:	push   rbx
   1b72d:	mov    rbp,rsi
   1b730:	mov    ebx,edi
   1b732:	sub    rsp,0x98
   1b739:	mov    rax,QWORD PTR fs:0x28
   1b742:	mov    QWORD PTR [rsp+0x88],rax
   1b74a:	xor    eax,eax
   1b74c:	mov    QWORD PTR [rsp+0x8],0x0
   1b755:	nop    DWORD PTR [rax]
   1b758:	lea    rdx,[rip+0x15fe3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1b75f:	xor    ecx,ecx
   1b761:	mov    r9d,0x2
   1b767:	mov    r8,r12
   1b76a:	mov    rsi,rbp
   1b76d:	mov    edi,ebx
   1b76f:	call   ebe0 <def_getopt>
   1b774:	cmp    eax,0xffffffff
   1b777:	jne    1b758 <main_blockattach+0x38>
   1b779:	mov    r12,QWORD PTR [rip+0x21f828]        # 23afa8 <optind@GLIBC_2.2.5>
   1b780:	lea    r13,[rip+0x2216d9]        # 23ce60 <ctx>
   1b787:	lea    rdx,[rsp+0x4]
   1b78c:	movsxd rax,DWORD PTR [r12]
   1b790:	mov    rdi,QWORD PTR [r13+0x0]
   1b794:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
   1b799:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   1b79e:	test   eax,eax
   1b7a0:	js     1b8a0 <main_blockattach+0x180>
   1b7a6:	mov    eax,DWORD PTR [r12]
   1b7aa:	lea    rdi,[rsp+0x8]
   1b7af:	add    eax,0x1
   1b7b2:	mov    DWORD PTR [r12],eax
   1b7b6:	movsxd rdx,eax
   1b7b9:	lea    r12,[rsp+0x10]
   1b7be:	sub    ebx,eax
   1b7c0:	lea    rdx,[rbp+rdx*8+0x0]
   1b7c5:	mov    esi,ebx
   1b7c7:	mov    rcx,r12
   1b7ca:	call   11760 <parse_disk_config_multistring>
   1b7cf:	lea    rax,[rip+0x2216ba]        # 23ce90 <dryrun_only>
   1b7d6:	mov    eax,DWORD PTR [rax]
   1b7d8:	test   eax,eax
   1b7da:	je     1b860 <main_blockattach+0x140>
   1b7e0:	mov    rdi,QWORD PTR [r13+0x0]
   1b7e4:	mov    rsi,r12
   1b7e7:	call   bc80 <libxl_device_disk_to_json@plt>
   1b7ec:	lea    rsi,[rip+0x1608f]        # 31882 <__PRETTY_FUNCTION__.10016+0x7f2>
   1b7f3:	mov    rdx,rax
   1b7f6:	mov    rbx,rax
   1b7f9:	mov    edi,0x1
   1b7fe:	xor    eax,eax
   1b800:	call   bd50 <__printf_chk@plt>
   1b805:	mov    rdi,rbx
   1b808:	call   ac40 <free@plt>
   1b80d:	mov    rbx,QWORD PTR [rip+0x21f78c]        # 23afa0 <stdout@GLIBC_2.2.5>
   1b814:	mov    rdi,QWORD PTR [rbx]
   1b817:	call   aec0 <ferror@plt>
   1b81c:	test   eax,eax
   1b81e:	jne    1b8d5 <main_blockattach+0x1b5>
   1b824:	mov    rdi,QWORD PTR [rbx]
   1b827:	call   ba30 <fflush@plt>
   1b82c:	test   eax,eax
   1b82e:	jne    1b8d5 <main_blockattach+0x1b5>
   1b834:	xor    eax,eax
   1b836:	mov    rcx,QWORD PTR [rsp+0x88]
   1b83e:	xor    rcx,QWORD PTR fs:0x28
   1b847:	jne    1b8d0 <main_blockattach+0x1b0>
   1b84d:	add    rsp,0x98
   1b854:	pop    rbx
   1b855:	pop    rbp
   1b856:	pop    r12
   1b858:	pop    r13
   1b85a:	ret    
   1b85b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b860:	mov    esi,DWORD PTR [rsp+0x4]
   1b864:	mov    rdi,QWORD PTR [r13+0x0]
   1b868:	xor    ecx,ecx
   1b86a:	mov    rdx,r12
   1b86d:	call   aee0 <libxl_device_disk_add@plt>
   1b872:	test   eax,eax
   1b874:	je     1b834 <main_blockattach+0x114>
   1b876:	mov    rax,QWORD PTR [rip+0x21f773]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b87d:	lea    rdi,[rip+0x16014]        # 31898 <__PRETTY_FUNCTION__.10016+0x808>
   1b884:	mov    edx,0x1e
   1b889:	mov    esi,0x1
   1b88e:	mov    rcx,QWORD PTR [rax]
   1b891:	call   c1b0 <fwrite@plt>
   1b896:	mov    eax,0x1
   1b89b:	jmp    1b836 <main_blockattach+0x116>
   1b89d:	nop    DWORD PTR [rax]
   1b8a0:	movsxd rax,DWORD PTR [r12]
   1b8a4:	lea    rdx,[rip+0x15eb5]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   1b8ab:	mov    esi,0x1
   1b8b0:	mov    rcx,QWORD PTR [rbp+rax*8+0x0]
   1b8b5:	mov    rax,QWORD PTR [rip+0x21f734]        # 23aff0 <stderr@GLIBC_2.2.5>
   1b8bc:	mov    rdi,QWORD PTR [rax]
   1b8bf:	xor    eax,eax
   1b8c1:	call   c1e0 <__fprintf_chk@plt>
   1b8c6:	mov    eax,0x1
   1b8cb:	jmp    1b836 <main_blockattach+0x116>
   1b8d0:	call   b130 <__stack_chk_fail@plt>
   1b8d5:	lea    rdi,[rip+0x127ec]        # 2e0c8 <__PRETTY_FUNCTION__.10113+0x44b0>
   1b8dc:	call   bfd0 <perror@plt>
   1b8e1:	or     edi,0xffffffff
   1b8e4:	call   c1a0 <exit@plt>
   1b8e9:	nop    DWORD PTR [rax+0x0]

000000000001b8f0 <main_blocklist>:
   1b8f0:	push   r15
   1b8f2:	push   r14
   1b8f4:	push   r13
   1b8f6:	push   r12
   1b8f8:	lea    r12,[rip+0xe758]        # 2a057 <__PRETTY_FUNCTION__.10113+0x43f>
   1b8ff:	push   rbp
   1b900:	push   rbx
   1b901:	mov    rbp,rsi
   1b904:	mov    ebx,edi
   1b906:	sub    rsp,0x78
   1b90a:	mov    rax,QWORD PTR fs:0x28
   1b913:	mov    QWORD PTR [rsp+0x68],rax
   1b918:	xor    eax,eax
   1b91a:	nop    WORD PTR [rax+rax*1+0x0]
   1b920:	lea    rdx,[rip+0x15e1b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1b927:	xor    ecx,ecx
   1b929:	mov    r9d,0x1
   1b92f:	mov    r8,r12
   1b932:	mov    rsi,rbp
   1b935:	mov    edi,ebx
   1b937:	call   ebe0 <def_getopt>
   1b93c:	cmp    eax,0xffffffff
   1b93f:	jne    1b920 <main_blocklist+0x30>
   1b941:	lea    rax,[rip+0x15ded]        # 31735 <__PRETTY_FUNCTION__.10016+0x6a5>
   1b948:	sub    rsp,0x8
   1b94c:	lea    rdx,[rip+0x15f39]        # 3188c <__PRETTY_FUNCTION__.10016+0x7fc>
   1b953:	lea    r9,[rip+0x15dea]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   1b95a:	lea    r8,[rip+0x15dc1]        # 31722 <__PRETTY_FUNCTION__.10016+0x692>
   1b961:	lea    rcx,[rip+0x15dc6]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   1b968:	push   rax
   1b969:	lea    rax,[rip+0x16016]        # 31986 <__PRETTY_FUNCTION__.10016+0x8f6>
   1b970:	lea    rsi,[rip+0x15f41]        # 318b8 <__PRETTY_FUNCTION__.10016+0x828>
   1b977:	mov    edi,0x1
   1b97c:	push   rax
   1b97d:	lea    rax,[rip+0x15db9]        # 3173d <__PRETTY_FUNCTION__.10016+0x6ad>
   1b984:	push   rax
   1b985:	xor    eax,eax
   1b987:	call   bd50 <__printf_chk@plt>
   1b98c:	mov    rax,QWORD PTR [rip+0x21f615]        # 23afa8 <optind@GLIBC_2.2.5>
   1b993:	add    rsp,0x20
   1b997:	movsxd rdx,DWORD PTR [rax]
   1b99a:	sub    ebx,edx
   1b99c:	lea    r13,[rbp+rdx*8+0x0]
   1b9a1:	test   ebx,ebx
   1b9a3:	jle    1babf <main_blocklist+0x1cf>
   1b9a9:	lea    eax,[rbx-0x1]
   1b9ac:	lea    r12,[rip+0x2214ad]        # 23ce60 <ctx>
   1b9b3:	lea    r14,[rsp+0x30]
   1b9b8:	lea    rax,[r13+rax*8+0x8]
   1b9bd:	mov    QWORD PTR [rsp+0x8],rax
   1b9c2:	lea    rax,[rsp+0x2c]
   1b9c7:	mov    QWORD PTR [rsp+0x10],rax
   1b9cc:	lea    rax,[rsp+0x28]
   1b9d1:	mov    QWORD PTR [rsp+0x18],rax
   1b9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1b9e0:	mov    rdx,QWORD PTR [rsp+0x10]
   1b9e5:	mov    rsi,QWORD PTR [r13+0x0]
   1b9e9:	mov    rdi,QWORD PTR [r12]
   1b9ed:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   1b9f2:	test   eax,eax
   1b9f4:	js     1bae0 <main_blocklist+0x1f0>
   1b9fa:	mov    rdx,QWORD PTR [rsp+0x18]
   1b9ff:	mov    esi,DWORD PTR [rsp+0x2c]
   1ba03:	mov    rdi,QWORD PTR [r12]
   1ba07:	call   b1d0 <libxl_device_disk_list@plt>
   1ba0c:	test   rax,rax
   1ba0f:	mov    r15,rax
   1ba12:	je     1bab0 <main_blocklist+0x1c0>
   1ba18:	mov    esi,DWORD PTR [rsp+0x28]
   1ba1c:	test   esi,esi
   1ba1e:	jle    1baa8 <main_blocklist+0x1b8>
   1ba24:	mov    rbp,rax
   1ba27:	xor    ebx,ebx
   1ba29:	jmp    1ba3f <main_blocklist+0x14f>
   1ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
   1ba30:	mov    esi,DWORD PTR [rsp+0x28]
   1ba34:	add    ebx,0x1
   1ba37:	add    rbp,0x78
   1ba3b:	cmp    esi,ebx
   1ba3d:	jle    1baa8 <main_blocklist+0x1b8>
   1ba3f:	mov    esi,DWORD PTR [rsp+0x2c]
   1ba43:	mov    rdi,QWORD PTR [r12]
   1ba47:	mov    rcx,r14
   1ba4a:	mov    rdx,rbp
   1ba4d:	call   b730 <libxl_device_disk_getinfo@plt>
   1ba52:	test   eax,eax
   1ba54:	jne    1ba30 <main_blocklist+0x140>
   1ba56:	sub    rsp,0x8
   1ba5a:	lea    rsi,[rip+0x15e7f]        # 318e0 <__PRETTY_FUNCTION__.10016+0x850>
   1ba61:	mov    edi,0x1
   1ba66:	push   QWORD PTR [rsp+0x38]
   1ba6a:	mov    eax,DWORD PTR [rsp+0x68]
   1ba6e:	add    ebx,0x1
   1ba71:	add    rbp,0x78
   1ba75:	push   rax
   1ba76:	mov    eax,DWORD PTR [rsp+0x6c]
   1ba7a:	push   rax
   1ba7b:	mov    r9d,DWORD PTR [rsp+0x70]
   1ba80:	xor    eax,eax
   1ba82:	mov    r8d,DWORD PTR [rsp+0x68]
   1ba87:	mov    ecx,DWORD PTR [rsp+0x58]
   1ba8b:	mov    edx,DWORD PTR [rsp+0x6c]
   1ba8f:	call   bd50 <__printf_chk@plt>
   1ba94:	add    rsp,0x20
   1ba98:	mov    rdi,r14
   1ba9b:	call   c460 <libxl_diskinfo_dispose@plt>
   1baa0:	mov    esi,DWORD PTR [rsp+0x28]
   1baa4:	cmp    esi,ebx
   1baa6:	jg     1ba3f <main_blocklist+0x14f>
   1baa8:	mov    rdi,r15
   1baab:	call   b230 <libxl_device_disk_list_free@plt>
   1bab0:	add    r13,0x8
   1bab4:	cmp    r13,QWORD PTR [rsp+0x8]
   1bab9:	jne    1b9e0 <main_blocklist+0xf0>
   1babf:	xor    eax,eax
   1bac1:	mov    rcx,QWORD PTR [rsp+0x68]
   1bac6:	xor    rcx,QWORD PTR fs:0x28
   1bacf:	jne    1bb12 <main_blocklist+0x222>
   1bad1:	add    rsp,0x78
   1bad5:	pop    rbx
   1bad6:	pop    rbp
   1bad7:	pop    r12
   1bad9:	pop    r13
   1badb:	pop    r14
   1badd:	pop    r15
   1badf:	ret    
   1bae0:	mov    rax,QWORD PTR [rip+0x21f509]        # 23aff0 <stderr@GLIBC_2.2.5>
   1bae7:	mov    rcx,QWORD PTR [r13+0x0]
   1baeb:	lea    rdx,[rip+0x15c6e]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   1baf2:	mov    esi,0x1
   1baf7:	add    r13,0x8
   1bafb:	mov    rdi,QWORD PTR [rax]
   1bafe:	xor    eax,eax
   1bb00:	call   c1e0 <__fprintf_chk@plt>
   1bb05:	cmp    r13,QWORD PTR [rsp+0x8]
   1bb0a:	jne    1b9e0 <main_blocklist+0xf0>
   1bb10:	jmp    1babf <main_blocklist+0x1cf>
   1bb12:	call   b130 <__stack_chk_fail@plt>
   1bb17:	nop    WORD PTR [rax+rax*1+0x0]

000000000001bb20 <main_blockdetach>:
   1bb20:	push   r14
   1bb22:	push   r13
   1bb24:	push   r12
   1bb26:	push   rbp
   1bb27:	lea    rbp,[rip+0xe534]        # 2a062 <__PRETTY_FUNCTION__.10113+0x44a>
   1bb2e:	push   rbx
   1bb2f:	mov    r12d,edi
   1bb32:	mov    rbx,rsi
   1bb35:	sub    rsp,0x90
   1bb3c:	mov    rax,QWORD PTR fs:0x28
   1bb45:	mov    QWORD PTR [rsp+0x88],rax
   1bb4d:	xor    eax,eax
   1bb4f:	nop
   1bb50:	lea    rdx,[rip+0x15beb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1bb57:	xor    ecx,ecx
   1bb59:	mov    r9d,0x2
   1bb5f:	mov    r8,rbp
   1bb62:	mov    rsi,rbx
   1bb65:	mov    edi,r12d
   1bb68:	call   ebe0 <def_getopt>
   1bb6d:	cmp    eax,0xffffffff
   1bb70:	jne    1bb50 <main_blockdetach+0x30>
   1bb72:	mov    rbp,QWORD PTR [rip+0x21f42f]        # 23afa8 <optind@GLIBC_2.2.5>
   1bb79:	lea    r12,[rsp+0x10]
   1bb7e:	movsxd rax,DWORD PTR [rbp+0x0]
   1bb82:	mov    rdi,QWORD PTR [rbx+rax*8]
   1bb86:	call   eb40 <find_domain>
   1bb8b:	mov    r14d,eax
   1bb8e:	movsxd rax,DWORD PTR [rbp+0x0]
   1bb92:	lea    r13,[rip+0x2212c7]        # 23ce60 <ctx>
   1bb99:	mov    rcx,r12
   1bb9c:	mov    esi,r14d
   1bb9f:	mov    rdi,QWORD PTR [r13+0x0]
   1bba3:	mov    rdx,QWORD PTR [rbx+rax*8+0x8]
   1bba8:	call   b4f0 <libxl_vdev_to_device_disk@plt>
   1bbad:	test   eax,eax
   1bbaf:	jne    1bc30 <main_blockdetach+0x110>
   1bbb1:	mov    rdi,QWORD PTR [r13+0x0]
   1bbb5:	xor    ecx,ecx
   1bbb7:	mov    rdx,r12
   1bbba:	mov    esi,r14d
   1bbbd:	call   b880 <libxl_device_disk_remove@plt>
   1bbc2:	test   eax,eax
   1bbc4:	jne    1bc00 <main_blockdetach+0xe0>
   1bbc6:	mov    rdi,r12
   1bbc9:	mov    DWORD PTR [rsp+0xc],eax
   1bbcd:	call   bf00 <libxl_device_disk_dispose@plt>
   1bbd2:	mov    eax,DWORD PTR [rsp+0xc]
   1bbd6:	mov    rcx,QWORD PTR [rsp+0x88]
   1bbde:	xor    rcx,QWORD PTR fs:0x28
   1bbe7:	jne    1bc60 <main_blockdetach+0x140>
   1bbe9:	add    rsp,0x90
   1bbf0:	pop    rbx
   1bbf1:	pop    rbp
   1bbf2:	pop    r12
   1bbf4:	pop    r13
   1bbf6:	pop    r14
   1bbf8:	ret    
   1bbf9:	nop    DWORD PTR [rax+0x0]
   1bc00:	mov    rax,QWORD PTR [rip+0x21f3e9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1bc07:	lea    rdi,[rip+0x15d22]        # 31930 <__PRETTY_FUNCTION__.10016+0x8a0>
   1bc0e:	mov    edx,0x21
   1bc13:	mov    esi,0x1
   1bc18:	mov    rcx,QWORD PTR [rax]
   1bc1b:	call   c1b0 <fwrite@plt>
   1bc20:	mov    eax,0x1
   1bc25:	jmp    1bbd6 <main_blockdetach+0xb6>
   1bc27:	nop    WORD PTR [rax+rax*1+0x0]
   1bc30:	movsxd rax,DWORD PTR [rbp+0x0]
   1bc34:	lea    rdx,[rip+0x15ccd]        # 31908 <__PRETTY_FUNCTION__.10016+0x878>
   1bc3b:	mov    esi,0x1
   1bc40:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   1bc45:	mov    rax,QWORD PTR [rip+0x21f3a4]        # 23aff0 <stderr@GLIBC_2.2.5>
   1bc4c:	mov    rdi,QWORD PTR [rax]
   1bc4f:	xor    eax,eax
   1bc51:	call   c1e0 <__fprintf_chk@plt>
   1bc56:	mov    eax,0x1
   1bc5b:	jmp    1bbd6 <main_blockdetach+0xb6>
   1bc60:	call   b130 <__stack_chk_fail@plt>
   1bc65:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1bc6f:	nop

000000000001bc70 <set_default_nic_values>:
   1bc70:	push   rbp
   1bc71:	push   rbx
   1bc72:	mov    rbx,rdi
   1bc75:	sub    rsp,0x8
   1bc79:	lea    rbp,[rip+0x2211b8]        # 23ce38 <default_vifscript>
   1bc80:	cmp    QWORD PTR [rbp+0x0],0x0
   1bc85:	je     1bc9d <set_default_nic_values+0x2d>
   1bc87:	mov    rdi,QWORD PTR [rdi+0x40]
   1bc8b:	call   ac40 <free@plt>
   1bc90:	mov    rdi,QWORD PTR [rbp+0x0]
   1bc94:	call   c360 <strdup@plt>
   1bc99:	mov    QWORD PTR [rbx+0x40],rax
   1bc9d:	lea    rbp,[rip+0x22118c]        # 23ce30 <default_bridge>
   1bca4:	cmp    QWORD PTR [rbp+0x0],0x0
   1bca9:	je     1bcc1 <set_default_nic_values+0x51>
   1bcab:	mov    rdi,QWORD PTR [rbx+0x30]
   1bcaf:	call   ac40 <free@plt>
   1bcb4:	mov    rdi,QWORD PTR [rbp+0x0]
   1bcb8:	call   c360 <strdup@plt>
   1bcbd:	mov    QWORD PTR [rbx+0x30],rax
   1bcc1:	lea    rbp,[rip+0x221160]        # 23ce28 <default_gatewaydev>
   1bcc8:	cmp    QWORD PTR [rbp+0x0],0x0
   1bccd:	je     1bce5 <set_default_nic_values+0x75>
   1bccf:	mov    rdi,QWORD PTR [rbx+0x60]
   1bcd3:	call   ac40 <free@plt>
   1bcd8:	mov    rdi,QWORD PTR [rbp+0x0]
   1bcdc:	call   c360 <strdup@plt>
   1bce1:	mov    QWORD PTR [rbx+0x60],rax
   1bce5:	lea    rbp,[rip+0x221134]        # 23ce20 <default_vifbackend>
   1bcec:	cmp    QWORD PTR [rbp+0x0],0x0
   1bcf1:	je     1bd09 <set_default_nic_values+0x99>
   1bcf3:	mov    rdi,QWORD PTR [rbx+0x8]
   1bcf7:	call   ac40 <free@plt>
   1bcfc:	mov    rdi,QWORD PTR [rbp+0x0]
   1bd00:	call   c360 <strdup@plt>
   1bd05:	mov    QWORD PTR [rbx+0x8],rax
   1bd09:	add    rsp,0x8
   1bd0d:	pop    rbx
   1bd0e:	pop    rbp
   1bd0f:	ret    

000000000001bd10 <main_networkattach>:
   1bd10:	push   r15
   1bd12:	push   r14
   1bd14:	push   r13
   1bd16:	push   r12
   1bd18:	lea    r12,[rip+0xe2d2]        # 29ff1 <__PRETTY_FUNCTION__.10113+0x3d9>
   1bd1f:	push   rbp
   1bd20:	push   rbx
   1bd21:	mov    ebp,edi
   1bd23:	mov    rbx,rsi
   1bd26:	sub    rsp,0x228
   1bd2d:	mov    rax,QWORD PTR fs:0x28
   1bd36:	mov    QWORD PTR [rsp+0x218],rax
   1bd3e:	xor    eax,eax
   1bd40:	mov    QWORD PTR [rsp+0x18],0x0
   1bd49:	nop    DWORD PTR [rax+0x0]
   1bd50:	lea    rdx,[rip+0x159eb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1bd57:	xor    ecx,ecx
   1bd59:	mov    r9d,0x1
   1bd5f:	mov    r8,r12
   1bd62:	mov    rsi,rbx
   1bd65:	mov    edi,ebp
   1bd67:	call   ebe0 <def_getopt>
   1bd6c:	cmp    eax,0xffffffff
   1bd6f:	jne    1bd50 <main_networkattach+0x40>
   1bd71:	mov    r15,QWORD PTR [rip+0x21f230]        # 23afa8 <optind@GLIBC_2.2.5>
   1bd78:	movsxd rax,DWORD PTR [r15]
   1bd7b:	mov    rdi,QWORD PTR [rbx+rax*8]
   1bd7f:	call   eb40 <find_domain>
   1bd84:	mov    r13,QWORD PTR [rip+0x21f265]        # 23aff0 <stderr@GLIBC_2.2.5>
   1bd8b:	lea    rsi,[rip+0x12c17]        # 2e9a9 <__func__.10421+0x621>
   1bd92:	mov    r14d,eax
   1bd95:	mov    rdi,QWORD PTR [r13+0x0]
   1bd99:	call   b270 <xlu_cfg_init@plt>
   1bd9e:	test   rax,rax
   1bda1:	mov    QWORD PTR [rsp+0x18],rax
   1bda6:	je     1bec0 <main_networkattach+0x1b0>
   1bdac:	lea    r12,[rsp+0x20]
   1bdb1:	mov    rdi,r12
   1bdb4:	call   ade0 <libxl_device_nic_init@plt>
   1bdb9:	mov    rdi,r12
   1bdbc:	call   1bc70 <set_default_nic_values>
   1bdc1:	movsxd rdx,DWORD PTR [r15]
   1bdc4:	mov    rax,rdx
   1bdc7:	lea    rbx,[rbx+rdx*8+0x8]
   1bdcc:	add    eax,0x1
   1bdcf:	sub    ebp,eax
   1bdd1:	test   ebp,ebp
   1bdd3:	jle    1be38 <main_networkattach+0x128>
   1bdd5:	lea    eax,[rbp-0x1]
   1bdd8:	lea    rbp,[rsp+0x18]
   1bddd:	lea    r15,[rbx+rax*8+0x8]
   1bde2:	jmp    1bdf1 <main_networkattach+0xe1>
   1bde4:	nop    DWORD PTR [rax+0x0]
   1bde8:	add    rbx,0x8
   1bdec:	cmp    rbx,r15
   1bdef:	je     1be38 <main_networkattach+0x128>
   1bdf1:	mov    rdx,QWORD PTR [rbx]
   1bdf4:	mov    rsi,rbp
   1bdf7:	mov    rdi,r12
   1bdfa:	call   11eb0 <parse_nic_config>
   1bdff:	test   eax,eax
   1be01:	je     1bde8 <main_networkattach+0xd8>
   1be03:	mov    eax,0x1
   1be08:	mov    rcx,QWORD PTR [rsp+0x218]
   1be10:	xor    rcx,QWORD PTR fs:0x28
   1be19:	jne    1bf44 <main_networkattach+0x234>
   1be1f:	add    rsp,0x228
   1be26:	pop    rbx
   1be27:	pop    rbp
   1be28:	pop    r12
   1be2a:	pop    r13
   1be2c:	pop    r14
   1be2e:	pop    r15
   1be30:	ret    
   1be31:	nop    DWORD PTR [rax+0x0]
   1be38:	lea    rax,[rip+0x221021]        # 23ce60 <ctx>
   1be3f:	mov    rdi,QWORD PTR [rax]
   1be42:	lea    rax,[rip+0x221047]        # 23ce90 <dryrun_only>
   1be49:	mov    eax,DWORD PTR [rax]
   1be4b:	test   eax,eax
   1be4d:	je     1bee8 <main_networkattach+0x1d8>
   1be53:	mov    rsi,r12
   1be56:	call   b890 <libxl_device_nic_to_json@plt>
   1be5b:	lea    rsi,[rip+0x15af0]        # 31952 <__PRETTY_FUNCTION__.10016+0x8c2>
   1be62:	mov    rdx,rax
   1be65:	mov    rbx,rax
   1be68:	mov    edi,0x1
   1be6d:	xor    eax,eax
   1be6f:	call   bd50 <__printf_chk@plt>
   1be74:	mov    rdi,rbx
   1be77:	call   ac40 <free@plt>
   1be7c:	mov    rdi,r12
   1be7f:	call   b030 <libxl_device_nic_dispose@plt>
   1be84:	mov    rbx,QWORD PTR [rip+0x21f115]        # 23afa0 <stdout@GLIBC_2.2.5>
   1be8b:	mov    rdi,QWORD PTR [rbx]
   1be8e:	call   aec0 <ferror@plt>
   1be93:	test   eax,eax
   1be95:	jne    1bea7 <main_networkattach+0x197>
   1be97:	mov    rdi,QWORD PTR [rbx]
   1be9a:	call   ba30 <fflush@plt>
   1be9f:	test   eax,eax
   1bea1:	je     1be08 <main_networkattach+0xf8>
   1bea7:	lea    rdi,[rip+0x1221a]        # 2e0c8 <__PRETTY_FUNCTION__.10113+0x44b0>
   1beae:	call   bfd0 <perror@plt>
   1beb3:	or     edi,0xffffffff
   1beb6:	call   c1a0 <exit@plt>
   1bebb:	nop    DWORD PTR [rax+rax*1+0x0]
   1bec0:	mov    rcx,QWORD PTR [r13+0x0]
   1bec4:	lea    rdi,[rip+0xdb85]        # 29a50 <_IO_stdin_used+0x310>
   1becb:	mov    edx,0x25
   1bed0:	mov    esi,0x1
   1bed5:	call   c1b0 <fwrite@plt>
   1beda:	mov    eax,0x1
   1bedf:	jmp    1be08 <main_networkattach+0xf8>
   1bee4:	nop    DWORD PTR [rax+0x0]
   1bee8:	xor    ecx,ecx
   1beea:	mov    rdx,r12
   1beed:	mov    esi,r14d
   1bef0:	call   b8f0 <libxl_device_nic_add@plt>
   1bef5:	test   eax,eax
   1bef7:	jne    1bf20 <main_networkattach+0x210>
   1bef9:	mov    rdi,r12
   1befc:	mov    DWORD PTR [rsp+0xc],eax
   1bf00:	call   b030 <libxl_device_nic_dispose@plt>
   1bf05:	mov    rdi,QWORD PTR [rsp+0x18]
   1bf0a:	call   abc0 <xlu_cfg_destroy@plt>
   1bf0f:	mov    eax,DWORD PTR [rsp+0xc]
   1bf13:	jmp    1be08 <main_networkattach+0xf8>
   1bf18:	nop    DWORD PTR [rax+rax*1+0x0]
   1bf20:	mov    rcx,QWORD PTR [r13+0x0]
   1bf24:	lea    rdi,[rip+0x15a30]        # 3195b <__PRETTY_FUNCTION__.10016+0x8cb>
   1bf2b:	mov    edx,0x1d
   1bf30:	mov    esi,0x1
   1bf35:	call   c1b0 <fwrite@plt>
   1bf3a:	mov    eax,0x1
   1bf3f:	jmp    1be08 <main_networkattach+0xf8>
   1bf44:	call   b130 <__stack_chk_fail@plt>
   1bf49:	nop    DWORD PTR [rax+0x0]

000000000001bf50 <main_networklist>:
   1bf50:	push   r15
   1bf52:	push   r14
   1bf54:	push   r13
   1bf56:	push   r12
   1bf58:	lea    r12,[rip+0xe0a1]        # 2a000 <__PRETTY_FUNCTION__.10113+0x3e8>
   1bf5f:	push   rbp
   1bf60:	push   rbx
   1bf61:	mov    rbp,rsi
   1bf64:	mov    ebx,edi
   1bf66:	sub    rsp,0x78
   1bf6a:	mov    rax,QWORD PTR fs:0x28
   1bf73:	mov    QWORD PTR [rsp+0x68],rax
   1bf78:	xor    eax,eax
   1bf7a:	nop    WORD PTR [rax+rax*1+0x0]
   1bf80:	lea    rdx,[rip+0x157bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1bf87:	xor    ecx,ecx
   1bf89:	mov    r9d,0x1
   1bf8f:	mov    r8,r12
   1bf92:	mov    rsi,rbp
   1bf95:	mov    edi,ebx
   1bf97:	call   ebe0 <def_getopt>
   1bf9c:	cmp    eax,0xffffffff
   1bf9f:	jne    1bf80 <main_networklist+0x30>
   1bfa1:	lea    rax,[rip+0x1578d]        # 31735 <__PRETTY_FUNCTION__.10016+0x6a5>
   1bfa8:	sub    rsp,0x8
   1bfac:	lea    rdx,[rip+0x1577e]        # 31731 <__PRETTY_FUNCTION__.10016+0x6a1>
   1bfb3:	lea    r9,[rip+0x15768]        # 31722 <__PRETTY_FUNCTION__.10016+0x692>
   1bfba:	lea    r8,[rip+0x159b8]        # 31979 <__PRETTY_FUNCTION__.10016+0x8e9>
   1bfc1:	lea    rcx,[rip+0x15766]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   1bfc8:	push   rax
   1bfc9:	lea    rax,[rip+0x159b3]        # 31983 <__PRETTY_FUNCTION__.10016+0x8f3>
   1bfd0:	lea    rsi,[rip+0x15a09]        # 319e0 <__PRETTY_FUNCTION__.10016+0x950>
   1bfd7:	mov    edi,0x1
   1bfdc:	push   rax
   1bfdd:	lea    rax,[rip+0x159ab]        # 3198f <__PRETTY_FUNCTION__.10016+0x8ff>
   1bfe4:	push   rax
   1bfe5:	lea    rax,[rip+0x15751]        # 3173d <__PRETTY_FUNCTION__.10016+0x6ad>
   1bfec:	push   rax
   1bfed:	lea    rax,[rip+0x15750]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   1bff4:	push   rax
   1bff5:	xor    eax,eax
   1bff7:	call   bd50 <__printf_chk@plt>
   1bffc:	mov    rax,QWORD PTR [rip+0x21efa5]        # 23afa8 <optind@GLIBC_2.2.5>
   1c003:	add    rsp,0x30
   1c007:	movsxd rdx,DWORD PTR [rax]
   1c00a:	sub    ebx,edx
   1c00c:	lea    r14,[rbp+rdx*8+0x0]
   1c011:	test   ebx,ebx
   1c013:	jle    1c159 <main_networklist+0x209>
   1c019:	lea    eax,[rbx-0x1]
   1c01c:	lea    r13,[rip+0x220e3d]        # 23ce60 <ctx>
   1c023:	lea    r12,[rsp+0x30]
   1c028:	lea    rax,[r14+rax*8+0x8]
   1c02d:	mov    QWORD PTR [rsp+0x10],rax
   1c032:	lea    rax,[rsp+0x2c]
   1c037:	mov    QWORD PTR [rsp+0x18],rax
   1c03c:	nop    DWORD PTR [rax+0x0]
   1c040:	mov    rdi,QWORD PTR [r14]
   1c043:	call   eb40 <find_domain>
   1c048:	mov    rdx,QWORD PTR [rsp+0x18]
   1c04d:	mov    rdi,QWORD PTR [r13+0x0]
   1c051:	mov    esi,eax
   1c053:	mov    ebp,eax
   1c055:	call   c250 <libxl_device_nic_list@plt>
   1c05a:	test   rax,rax
   1c05d:	mov    QWORD PTR [rsp+0x8],rax
   1c062:	mov    r15,rax
   1c065:	je     1c14a <main_networklist+0x1fa>
   1c06b:	mov    esi,DWORD PTR [rsp+0x2c]
   1c06f:	test   esi,esi
   1c071:	jle    1c140 <main_networklist+0x1f0>
   1c077:	xor    ebx,ebx
   1c079:	jmp    1c096 <main_networklist+0x146>
   1c07b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c080:	mov    esi,DWORD PTR [rsp+0x2c]
   1c084:	add    ebx,0x1
   1c087:	add    r15,0x1f0
   1c08e:	cmp    esi,ebx
   1c090:	jle    1c140 <main_networklist+0x1f0>
   1c096:	mov    rdi,QWORD PTR [r13+0x0]
   1c09a:	mov    rcx,r12
   1c09d:	mov    rdx,r15
   1c0a0:	mov    esi,ebp
   1c0a2:	call   b9e0 <libxl_device_nic_getinfo@plt>
   1c0a7:	test   eax,eax
   1c0a9:	jne    1c080 <main_networklist+0x130>
   1c0ab:	mov    ecx,DWORD PTR [rsp+0x38]
   1c0af:	mov    edx,DWORD PTR [rsp+0x4c]
   1c0b3:	lea    rsi,[rip+0x158d9]        # 31993 <__PRETTY_FUNCTION__.10016+0x903>
   1c0ba:	mov    edi,0x1
   1c0bf:	call   bd50 <__printf_chk@plt>
   1c0c4:	movzx  eax,BYTE PTR [r15+0x25]
   1c0c9:	movzx  ecx,BYTE PTR [r15+0x21]
   1c0ce:	lea    rsi,[rip+0x1593b]        # 31a10 <__PRETTY_FUNCTION__.10016+0x980>
   1c0d5:	movzx  edx,BYTE PTR [r15+0x20]
   1c0da:	mov    edi,0x1
   1c0df:	push   rax
   1c0e0:	movzx  eax,BYTE PTR [r15+0x24]
   1c0e5:	push   rax
   1c0e6:	movzx  r9d,BYTE PTR [r15+0x23]
   1c0eb:	xor    eax,eax
   1c0ed:	movzx  r8d,BYTE PTR [r15+0x22]
   1c0f2:	call   bd50 <__printf_chk@plt>
   1c0f7:	push   QWORD PTR [rsp+0x40]
   1c0fb:	mov    eax,DWORD PTR [rsp+0x74]
   1c0ff:	lea    rsi,[rip+0x15898]        # 3199e <__PRETTY_FUNCTION__.10016+0x90e>
   1c106:	mov    edi,0x1
   1c10b:	push   rax
   1c10c:	mov    r9d,DWORD PTR [rsp+0x78]
   1c111:	xor    eax,eax
   1c113:	mov    r8d,DWORD PTR [rsp+0x74]
   1c118:	mov    ecx,DWORD PTR [rsp+0x70]
   1c11c:	mov    edx,DWORD PTR [rsp+0x6c]
   1c120:	call   bd50 <__printf_chk@plt>
   1c125:	add    rsp,0x20
   1c129:	mov    rdi,r12
   1c12c:	call   bfa0 <libxl_nicinfo_dispose@plt>
   1c131:	jmp    1c080 <main_networklist+0x130>
   1c136:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1c140:	mov    rdi,QWORD PTR [rsp+0x8]
   1c145:	call   b9f0 <libxl_device_nic_list_free@plt>
   1c14a:	add    r14,0x8
   1c14e:	cmp    r14,QWORD PTR [rsp+0x10]
   1c153:	jne    1c040 <main_networklist+0xf0>
   1c159:	xor    eax,eax
   1c15b:	mov    rcx,QWORD PTR [rsp+0x68]
   1c160:	xor    rcx,QWORD PTR fs:0x28
   1c169:	jne    1c17a <main_networklist+0x22a>
   1c16b:	add    rsp,0x78
   1c16f:	pop    rbx
   1c170:	pop    rbp
   1c171:	pop    r12
   1c173:	pop    r13
   1c175:	pop    r14
   1c177:	pop    r15
   1c179:	ret    
   1c17a:	call   b130 <__stack_chk_fail@plt>
   1c17f:	nop

000000000001c180 <main_networkdetach>:
   1c180:	push   r15
   1c182:	push   r14
   1c184:	push   r13
   1c186:	push   r12
   1c188:	mov    r12d,edi
   1c18b:	push   rbp
   1c18c:	push   rbx
   1c18d:	lea    rbp,[rip+0xde85]        # 2a019 <__PRETTY_FUNCTION__.10113+0x401>
   1c194:	mov    rbx,rsi
   1c197:	sub    rsp,0x218
   1c19e:	mov    rax,QWORD PTR fs:0x28
   1c1a7:	mov    QWORD PTR [rsp+0x208],rax
   1c1af:	xor    eax,eax
   1c1b1:	nop    DWORD PTR [rax+0x0]
   1c1b8:	lea    rdx,[rip+0x15583]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c1bf:	xor    ecx,ecx
   1c1c1:	mov    r9d,0x2
   1c1c7:	mov    r8,rbp
   1c1ca:	mov    rsi,rbx
   1c1cd:	mov    edi,r12d
   1c1d0:	call   ebe0 <def_getopt>
   1c1d5:	cmp    eax,0xffffffff
   1c1d8:	jne    1c1b8 <main_networkdetach+0x38>
   1c1da:	mov    rbp,QWORD PTR [rip+0x21edc7]        # 23afa8 <optind@GLIBC_2.2.5>
   1c1e1:	movsxd rax,DWORD PTR [rbp+0x0]
   1c1e5:	mov    rdi,QWORD PTR [rbx+rax*8]
   1c1e9:	call   eb40 <find_domain>
   1c1ee:	mov    r15d,eax
   1c1f1:	movsxd rax,DWORD PTR [rbp+0x0]
   1c1f5:	mov    esi,0x3a
   1c1fa:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
   1c1ff:	mov    rdi,r13
   1c202:	call   b1c0 <strchr@plt>
   1c207:	test   rax,rax
   1c20a:	je     1c2b0 <main_networkdetach+0x130>
   1c210:	lea    r14,[rip+0x220c49]        # 23ce60 <ctx>
   1c217:	lea    r12,[rsp+0x10]
   1c21c:	mov    rdx,r13
   1c21f:	mov    esi,r15d
   1c222:	mov    rcx,r12
   1c225:	mov    rdi,QWORD PTR [r14]
   1c228:	call   b7a0 <libxl_mac_to_device_nic@plt>
   1c22d:	test   eax,eax
   1c22f:	jne    1c2e3 <main_networkdetach+0x163>
   1c235:	mov    rdi,QWORD PTR [r14]
   1c238:	xor    ecx,ecx
   1c23a:	mov    rdx,r12
   1c23d:	mov    esi,r15d
   1c240:	call   ba60 <libxl_device_nic_remove@plt>
   1c245:	test   eax,eax
   1c247:	jne    1c288 <main_networkdetach+0x108>
   1c249:	mov    rdi,r12
   1c24c:	mov    DWORD PTR [rsp+0xc],eax
   1c250:	call   b030 <libxl_device_nic_dispose@plt>
   1c255:	mov    eax,DWORD PTR [rsp+0xc]
   1c259:	mov    rdx,QWORD PTR [rsp+0x208]
   1c261:	xor    rdx,QWORD PTR fs:0x28
   1c26a:	jne    1c313 <main_networkdetach+0x193>
   1c270:	add    rsp,0x218
   1c277:	pop    rbx
   1c278:	pop    rbp
   1c279:	pop    r12
   1c27b:	pop    r13
   1c27d:	pop    r14
   1c27f:	pop    r15
   1c281:	ret    
   1c282:	nop    WORD PTR [rax+rax*1+0x0]
   1c288:	mov    rax,QWORD PTR [rip+0x21ed61]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c28f:	lea    rdi,[rip+0x15725]        # 319bb <__PRETTY_FUNCTION__.10016+0x92b>
   1c296:	mov    edx,0x1d
   1c29b:	mov    esi,0x1
   1c2a0:	mov    rcx,QWORD PTR [rax]
   1c2a3:	call   c1b0 <fwrite@plt>
   1c2a8:	mov    eax,0x1
   1c2ad:	jmp    1c259 <main_networkdetach+0xd9>
   1c2af:	nop
   1c2b0:	xor    esi,esi
   1c2b2:	mov    edx,0xa
   1c2b7:	mov    rdi,r13
   1c2ba:	call   b7b0 <strtol@plt>
   1c2bf:	lea    r14,[rip+0x220b9a]        # 23ce60 <ctx>
   1c2c6:	lea    r12,[rsp+0x10]
   1c2cb:	mov    edx,eax
   1c2cd:	mov    esi,r15d
   1c2d0:	mov    rcx,r12
   1c2d3:	mov    rdi,QWORD PTR [r14]
   1c2d6:	call   b110 <libxl_devid_to_device_nic@plt>
   1c2db:	test   eax,eax
   1c2dd:	je     1c235 <main_networkdetach+0xb5>
   1c2e3:	movsxd rax,DWORD PTR [rbp+0x0]
   1c2e7:	lea    rdx,[rip+0x1545c]        # 3174a <__PRETTY_FUNCTION__.10016+0x6ba>
   1c2ee:	mov    esi,0x1
   1c2f3:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   1c2f8:	mov    rax,QWORD PTR [rip+0x21ecf1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c2ff:	mov    rdi,QWORD PTR [rax]
   1c302:	xor    eax,eax
   1c304:	call   c1e0 <__fprintf_chk@plt>
   1c309:	mov    eax,0x1
   1c30e:	jmp    1c259 <main_networkdetach+0xd9>
   1c313:	call   b130 <__stack_chk_fail@plt>
   1c318:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001c320 <main_usbctrl_attach>:
   1c320:	push   r14
   1c322:	push   r13
   1c324:	push   r12
   1c326:	push   rbp
   1c327:	lea    r12,[rip+0xe154]        # 2a482 <__PRETTY_FUNCTION__.10113+0x86a>
   1c32e:	push   rbx
   1c32f:	mov    ebp,edi
   1c331:	mov    rbx,rsi
   1c334:	sub    rsp,0x40
   1c338:	mov    rax,QWORD PTR fs:0x28
   1c341:	mov    QWORD PTR [rsp+0x38],rax
   1c346:	xor    eax,eax
   1c348:	nop    DWORD PTR [rax+rax*1+0x0]
   1c350:	lea    rdx,[rip+0x153eb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c357:	xor    ecx,ecx
   1c359:	mov    r9d,0x1
   1c35f:	mov    r8,r12
   1c362:	mov    rsi,rbx
   1c365:	mov    edi,ebp
   1c367:	call   ebe0 <def_getopt>
   1c36c:	cmp    eax,0xffffffff
   1c36f:	jne    1c350 <main_usbctrl_attach+0x30>
   1c371:	mov    r14,QWORD PTR [rip+0x21ec30]        # 23afa8 <optind@GLIBC_2.2.5>
   1c378:	lea    r12,[rsp+0x10]
   1c37d:	movsxd rax,DWORD PTR [r14]
   1c380:	lea    edx,[rax+0x1]
   1c383:	mov    DWORD PTR [r14],edx
   1c386:	mov    rdi,QWORD PTR [rbx+rax*8]
   1c38a:	call   eb40 <find_domain>
   1c38f:	mov    rdi,r12
   1c392:	mov    r13d,eax
   1c395:	call   bc70 <libxl_device_usbctrl_init@plt>
   1c39a:	movsxd rdx,DWORD PTR [r14]
   1c39d:	sub    ebp,edx
   1c39f:	lea    rbx,[rbx+rdx*8]
   1c3a3:	test   ebp,ebp
   1c3a5:	jle    1c3e0 <main_usbctrl_attach+0xc0>
   1c3a7:	lea    eax,[rbp-0x1]
   1c3aa:	lea    rbp,[rbx+rax*8+0x8]
   1c3af:	jmp    1c3c1 <main_usbctrl_attach+0xa1>
   1c3b1:	nop    DWORD PTR [rax+0x0]
   1c3b8:	add    rbx,0x8
   1c3bc:	cmp    rbx,rbp
   1c3bf:	je     1c3e0 <main_usbctrl_attach+0xc0>
   1c3c1:	mov    rsi,QWORD PTR [rbx]
   1c3c4:	mov    rdi,r12
   1c3c7:	call   12dc0 <parse_usbctrl_config>
   1c3cc:	test   eax,eax
   1c3ce:	je     1c3b8 <main_usbctrl_attach+0x98>
   1c3d0:	mov    eax,0x1
   1c3d5:	jmp    1c40b <main_usbctrl_attach+0xeb>
   1c3d7:	nop    WORD PTR [rax+rax*1+0x0]
   1c3e0:	lea    rax,[rip+0x220a79]        # 23ce60 <ctx>
   1c3e7:	xor    ecx,ecx
   1c3e9:	mov    rdx,r12
   1c3ec:	mov    esi,r13d
   1c3ef:	mov    rdi,QWORD PTR [rax]
   1c3f2:	call   bad0 <libxl_device_usbctrl_add@plt>
   1c3f7:	test   eax,eax
   1c3f9:	jne    1c430 <main_usbctrl_attach+0x110>
   1c3fb:	mov    rdi,r12
   1c3fe:	mov    DWORD PTR [rsp+0xc],eax
   1c402:	call   c350 <libxl_device_usbctrl_dispose@plt>
   1c407:	mov    eax,DWORD PTR [rsp+0xc]
   1c40b:	mov    rcx,QWORD PTR [rsp+0x38]
   1c410:	xor    rcx,QWORD PTR fs:0x28
   1c419:	jne    1c457 <main_usbctrl_attach+0x137>
   1c41b:	add    rsp,0x40
   1c41f:	pop    rbx
   1c420:	pop    rbp
   1c421:	pop    r12
   1c423:	pop    r13
   1c425:	pop    r14
   1c427:	ret    
   1c428:	nop    DWORD PTR [rax+rax*1+0x0]
   1c430:	mov    rax,QWORD PTR [rip+0x21ebb9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c437:	lea    rdi,[rip+0x1564a]        # 31a88 <__PRETTY_FUNCTION__.10016+0x9f8>
   1c43e:	mov    edx,0x21
   1c443:	mov    esi,0x1
   1c448:	mov    rcx,QWORD PTR [rax]
   1c44b:	call   c1b0 <fwrite@plt>
   1c450:	mov    eax,0x1
   1c455:	jmp    1c3fb <main_usbctrl_attach+0xdb>
   1c457:	call   b130 <__stack_chk_fail@plt>
   1c45c:	nop    DWORD PTR [rax+0x0]

000000000001c460 <main_usbctrl_detach>:
   1c460:	push   r15
   1c462:	push   r14
   1c464:	push   r13
   1c466:	push   r12
   1c468:	mov    r12d,edi
   1c46b:	push   rbp
   1c46c:	push   rbx
   1c46d:	lea    rbp,[rip+0xe01d]        # 2a491 <__PRETTY_FUNCTION__.10113+0x879>
   1c474:	mov    rbx,rsi
   1c477:	sub    rsp,0x48
   1c47b:	mov    rax,QWORD PTR fs:0x28
   1c484:	mov    QWORD PTR [rsp+0x38],rax
   1c489:	xor    eax,eax
   1c48b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c490:	lea    rdx,[rip+0x152ab]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c497:	xor    ecx,ecx
   1c499:	mov    r9d,0x2
   1c49f:	mov    r8,rbp
   1c4a2:	mov    rsi,rbx
   1c4a5:	mov    edi,r12d
   1c4a8:	call   ebe0 <def_getopt>
   1c4ad:	cmp    eax,0xffffffff
   1c4b0:	jne    1c490 <main_usbctrl_detach+0x30>
   1c4b2:	mov    r12,QWORD PTR [rip+0x21eaef]        # 23afa8 <optind@GLIBC_2.2.5>
   1c4b9:	lea    rbp,[rsp+0x10]
   1c4be:	movsxd rax,DWORD PTR [r12]
   1c4c2:	mov    rdi,QWORD PTR [rbx+rax*8]
   1c4c6:	call   eb40 <find_domain>
   1c4cb:	mov    r14d,eax
   1c4ce:	movsxd rax,DWORD PTR [r12]
   1c4d2:	xor    esi,esi
   1c4d4:	mov    edx,0xa
   1c4d9:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
   1c4de:	call   b7b0 <strtol@plt>
   1c4e3:	mov    rdi,rbp
   1c4e6:	mov    r15,rax
   1c4e9:	call   bc70 <libxl_device_usbctrl_init@plt>
   1c4ee:	lea    r13,[rip+0x22096b]        # 23ce60 <ctx>
   1c4f5:	mov    rcx,rbp
   1c4f8:	mov    edx,r15d
   1c4fb:	mov    esi,r14d
   1c4fe:	mov    rdi,QWORD PTR [r13+0x0]
   1c502:	call   b930 <libxl_devid_to_device_usbctrl@plt>
   1c507:	test   eax,eax
   1c509:	jne    1c550 <main_usbctrl_detach+0xf0>
   1c50b:	mov    rdi,QWORD PTR [r13+0x0]
   1c50f:	xor    ecx,ecx
   1c511:	mov    rdx,rbp
   1c514:	mov    esi,r14d
   1c517:	call   ba40 <libxl_device_usbctrl_remove@plt>
   1c51c:	test   eax,eax
   1c51e:	jne    1c580 <main_usbctrl_detach+0x120>
   1c520:	mov    rdi,rbp
   1c523:	mov    DWORD PTR [rsp+0xc],eax
   1c527:	call   c350 <libxl_device_usbctrl_dispose@plt>
   1c52c:	mov    eax,DWORD PTR [rsp+0xc]
   1c530:	mov    rcx,QWORD PTR [rsp+0x38]
   1c535:	xor    rcx,QWORD PTR fs:0x28
   1c53e:	jne    1c5aa <main_usbctrl_detach+0x14a>
   1c540:	add    rsp,0x48
   1c544:	pop    rbx
   1c545:	pop    rbp
   1c546:	pop    r12
   1c548:	pop    r13
   1c54a:	pop    r14
   1c54c:	pop    r15
   1c54e:	ret    
   1c54f:	nop
   1c550:	movsxd rax,DWORD PTR [r12]
   1c554:	lea    rdx,[rip+0x151ef]        # 3174a <__PRETTY_FUNCTION__.10016+0x6ba>
   1c55b:	mov    esi,0x1
   1c560:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   1c565:	mov    rax,QWORD PTR [rip+0x21ea84]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c56c:	mov    rdi,QWORD PTR [rax]
   1c56f:	xor    eax,eax
   1c571:	call   c1e0 <__fprintf_chk@plt>
   1c576:	mov    eax,0x1
   1c57b:	jmp    1c530 <main_usbctrl_detach+0xd0>
   1c57d:	nop    DWORD PTR [rax]
   1c580:	mov    rax,QWORD PTR [rip+0x21ea69]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c587:	lea    rdi,[rip+0x15522]        # 31ab0 <__PRETTY_FUNCTION__.10016+0xa20>
   1c58e:	mov    edx,0x24
   1c593:	mov    esi,0x1
   1c598:	mov    rcx,QWORD PTR [rax]
   1c59b:	call   c1b0 <fwrite@plt>
   1c5a0:	mov    eax,0x1
   1c5a5:	jmp    1c520 <main_usbctrl_detach+0xc0>
   1c5aa:	call   b130 <__stack_chk_fail@plt>
   1c5af:	nop

000000000001c5b0 <main_usbdev_attach>:
   1c5b0:	push   r14
   1c5b2:	push   r13
   1c5b4:	push   r12
   1c5b6:	push   rbp
   1c5b7:	lea    r12,[rip+0xdee2]        # 2a4a0 <__PRETTY_FUNCTION__.10113+0x888>
   1c5be:	push   rbx
   1c5bf:	mov    ebp,edi
   1c5c1:	mov    rbx,rsi
   1c5c4:	sub    rsp,0x30
   1c5c8:	mov    rax,QWORD PTR fs:0x28
   1c5d1:	mov    QWORD PTR [rsp+0x28],rax
   1c5d6:	xor    eax,eax
   1c5d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c5e0:	lea    rdx,[rip+0x1515b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c5e7:	xor    ecx,ecx
   1c5e9:	mov    r9d,0x2
   1c5ef:	mov    r8,r12
   1c5f2:	mov    rsi,rbx
   1c5f5:	mov    edi,ebp
   1c5f7:	call   ebe0 <def_getopt>
   1c5fc:	cmp    eax,0xffffffff
   1c5ff:	jne    1c5e0 <main_usbdev_attach+0x30>
   1c601:	lea    r12,[rsp+0x10]
   1c606:	mov    rdi,r12
   1c609:	call   b770 <libxl_device_usbdev_init@plt>
   1c60e:	mov    r14,QWORD PTR [rip+0x21e993]        # 23afa8 <optind@GLIBC_2.2.5>
   1c615:	movsxd rax,DWORD PTR [r14]
   1c618:	lea    edx,[rax+0x1]
   1c61b:	mov    DWORD PTR [r14],edx
   1c61e:	mov    rdi,QWORD PTR [rbx+rax*8]
   1c622:	call   eb40 <find_domain>
   1c627:	movsxd rdx,DWORD PTR [r14]
   1c62a:	mov    r13d,eax
   1c62d:	sub    ebp,edx
   1c62f:	lea    rbx,[rbx+rdx*8]
   1c633:	test   ebp,ebp
   1c635:	jle    1c670 <main_usbdev_attach+0xc0>
   1c637:	lea    eax,[rbp-0x1]
   1c63a:	lea    rbp,[rbx+rax*8+0x8]
   1c63f:	jmp    1c651 <main_usbdev_attach+0xa1>
   1c641:	nop    DWORD PTR [rax+0x0]
   1c648:	add    rbx,0x8
   1c64c:	cmp    rbx,rbp
   1c64f:	je     1c670 <main_usbdev_attach+0xc0>
   1c651:	mov    rsi,QWORD PTR [rbx]
   1c654:	mov    rdi,r12
   1c657:	call   12ef0 <parse_usbdev_config>
   1c65c:	test   eax,eax
   1c65e:	je     1c648 <main_usbdev_attach+0x98>
   1c660:	mov    eax,0x1
   1c665:	jmp    1c69b <main_usbdev_attach+0xeb>
   1c667:	nop    WORD PTR [rax+rax*1+0x0]
   1c670:	lea    rax,[rip+0x2207e9]        # 23ce60 <ctx>
   1c677:	xor    ecx,ecx
   1c679:	mov    rdx,r12
   1c67c:	mov    esi,r13d
   1c67f:	mov    rdi,QWORD PTR [rax]
   1c682:	call   b4d0 <libxl_device_usbdev_add@plt>
   1c687:	test   eax,eax
   1c689:	jne    1c6c0 <main_usbdev_attach+0x110>
   1c68b:	mov    rdi,r12
   1c68e:	mov    DWORD PTR [rsp+0xc],eax
   1c692:	call   c270 <libxl_device_usbdev_dispose@plt>
   1c697:	mov    eax,DWORD PTR [rsp+0xc]
   1c69b:	mov    rcx,QWORD PTR [rsp+0x28]
   1c6a0:	xor    rcx,QWORD PTR fs:0x28
   1c6a9:	jne    1c6e7 <main_usbdev_attach+0x137>
   1c6ab:	add    rsp,0x30
   1c6af:	pop    rbx
   1c6b0:	pop    rbp
   1c6b1:	pop    r12
   1c6b3:	pop    r13
   1c6b5:	pop    r14
   1c6b7:	ret    
   1c6b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1c6c0:	mov    rax,QWORD PTR [rip+0x21e929]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c6c7:	lea    rdi,[rip+0x1540a]        # 31ad8 <__PRETTY_FUNCTION__.10016+0xa48>
   1c6ce:	mov    edx,0x20
   1c6d3:	mov    esi,0x1
   1c6d8:	mov    rcx,QWORD PTR [rax]
   1c6db:	call   c1b0 <fwrite@plt>
   1c6e0:	mov    eax,0x1
   1c6e5:	jmp    1c68b <main_usbdev_attach+0xdb>
   1c6e7:	call   b130 <__stack_chk_fail@plt>
   1c6ec:	nop    DWORD PTR [rax+0x0]

000000000001c6f0 <main_usbdev_detach>:
   1c6f0:	push   r14
   1c6f2:	push   r13
   1c6f4:	push   r12
   1c6f6:	push   rbp
   1c6f7:	lea    r12,[rip+0xddb0]        # 2a4ae <__PRETTY_FUNCTION__.10113+0x896>
   1c6fe:	push   rbx
   1c6ff:	mov    rbp,rsi
   1c702:	mov    ebx,edi
   1c704:	sub    rsp,0x30
   1c708:	mov    rax,QWORD PTR fs:0x28
   1c711:	mov    QWORD PTR [rsp+0x28],rax
   1c716:	xor    eax,eax
   1c718:	nop    DWORD PTR [rax+rax*1+0x0]
   1c720:	lea    rdx,[rip+0x1501b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c727:	xor    ecx,ecx
   1c729:	mov    r9d,0x3
   1c72f:	mov    r8,r12
   1c732:	mov    rsi,rbp
   1c735:	mov    edi,ebx
   1c737:	call   ebe0 <def_getopt>
   1c73c:	cmp    eax,0xffffffff
   1c73f:	jne    1c720 <main_usbdev_detach+0x30>
   1c741:	mov    r12,QWORD PTR [rip+0x21e860]        # 23afa8 <optind@GLIBC_2.2.5>
   1c748:	movsxd rax,DWORD PTR [r12]
   1c74c:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   1c751:	call   eb40 <find_domain>
   1c756:	mov    r13d,eax
   1c759:	movsxd rax,DWORD PTR [r12]
   1c75d:	xor    esi,esi
   1c75f:	mov    edx,0xa
   1c764:	mov    rdi,QWORD PTR [rbp+rax*8+0x8]
   1c769:	call   b7b0 <strtol@plt>
   1c76e:	mov    r14,rax
   1c771:	movsxd rax,DWORD PTR [r12]
   1c775:	xor    esi,esi
   1c777:	mov    edx,0xa
   1c77c:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
   1c781:	call   b7b0 <strtol@plt>
   1c786:	sub    ebx,DWORD PTR [r12]
   1c78a:	mov    rbp,rax
   1c78d:	cmp    ebx,0x3
   1c790:	jg     1c838 <main_usbdev_detach+0x148>
   1c796:	lea    rbx,[rsp+0x10]
   1c79b:	mov    rdi,rbx
   1c79e:	call   b770 <libxl_device_usbdev_init@plt>
   1c7a3:	lea    r12,[rip+0x2206b6]        # 23ce60 <ctx>
   1c7aa:	mov    r8,rbx
   1c7ad:	mov    ecx,ebp
   1c7af:	mov    edx,r14d
   1c7b2:	mov    esi,r13d
   1c7b5:	mov    rdi,QWORD PTR [r12]
   1c7b9:	call   b1f0 <libxl_ctrlport_to_device_usbdev@plt>
   1c7be:	test   eax,eax
   1c7c0:	jne    1c7f0 <main_usbdev_detach+0x100>
   1c7c2:	mov    rdi,QWORD PTR [r12]
   1c7c6:	xor    ecx,ecx
   1c7c8:	mov    rdx,rbx
   1c7cb:	mov    esi,r13d
   1c7ce:	call   bcb0 <libxl_device_usbdev_remove@plt>
   1c7d3:	test   eax,eax
   1c7d5:	jne    1c860 <main_usbdev_detach+0x170>
   1c7db:	mov    rdi,rbx
   1c7de:	mov    DWORD PTR [rsp+0xc],eax
   1c7e2:	call   c270 <libxl_device_usbdev_dispose@plt>
   1c7e7:	mov    eax,DWORD PTR [rsp+0xc]
   1c7eb:	jmp    1c818 <main_usbdev_detach+0x128>
   1c7ed:	nop    DWORD PTR [rax]
   1c7f0:	mov    rax,QWORD PTR [rip+0x21e7f9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c7f7:	lea    rdx,[rip+0x15302]        # 31b00 <__PRETTY_FUNCTION__.10016+0xa70>
   1c7fe:	mov    r8d,ebp
   1c801:	mov    ecx,r14d
   1c804:	mov    esi,0x1
   1c809:	mov    rdi,QWORD PTR [rax]
   1c80c:	xor    eax,eax
   1c80e:	call   c1e0 <__fprintf_chk@plt>
   1c813:	mov    eax,0x1
   1c818:	mov    rcx,QWORD PTR [rsp+0x28]
   1c81d:	xor    rcx,QWORD PTR fs:0x28
   1c826:	jne    1c88a <main_usbdev_detach+0x19a>
   1c828:	add    rsp,0x30
   1c82c:	pop    rbx
   1c82d:	pop    rbp
   1c82e:	pop    r12
   1c830:	pop    r13
   1c832:	pop    r14
   1c834:	ret    
   1c835:	nop    DWORD PTR [rax]
   1c838:	mov    rax,QWORD PTR [rip+0x21e7b1]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c83f:	lea    rdi,[rip+0x151f4]        # 31a3a <__PRETTY_FUNCTION__.10016+0x9aa>
   1c846:	mov    edx,0x13
   1c84b:	mov    esi,0x1
   1c850:	mov    rcx,QWORD PTR [rax]
   1c853:	call   c1b0 <fwrite@plt>
   1c858:	mov    eax,0x1
   1c85d:	jmp    1c818 <main_usbdev_detach+0x128>
   1c85f:	nop
   1c860:	mov    rax,QWORD PTR [rip+0x21e789]        # 23aff0 <stderr@GLIBC_2.2.5>
   1c867:	lea    rdi,[rip+0x152c2]        # 31b30 <__PRETTY_FUNCTION__.10016+0xaa0>
   1c86e:	mov    edx,0x23
   1c873:	mov    esi,0x1
   1c878:	mov    rcx,QWORD PTR [rax]
   1c87b:	call   c1b0 <fwrite@plt>
   1c880:	mov    eax,0x1
   1c885:	jmp    1c7db <main_usbdev_detach+0xeb>
   1c88a:	call   b130 <__stack_chk_fail@plt>
   1c88f:	nop

000000000001c890 <main_usblist>:
   1c890:	push   r15
   1c892:	push   r14
   1c894:	push   r13
   1c896:	push   r12
   1c898:	lea    r13,[rip+0xdc3a]        # 2a4d9 <__PRETTY_FUNCTION__.10113+0x8c1>
   1c89f:	push   rbp
   1c8a0:	push   rbx
   1c8a1:	mov    ebp,edi
   1c8a3:	mov    r12,rsi
   1c8a6:	sub    rsp,0x98
   1c8ad:	mov    rax,QWORD PTR fs:0x28
   1c8b6:	mov    QWORD PTR [rsp+0x88],rax
   1c8be:	xor    eax,eax
   1c8c0:	lea    rdx,[rip+0x14e7b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1c8c7:	xor    ecx,ecx
   1c8c9:	mov    r9d,0x1
   1c8cf:	mov    r8,r13
   1c8d2:	mov    rsi,r12
   1c8d5:	mov    edi,ebp
   1c8d7:	call   ebe0 <def_getopt>
   1c8dc:	cmp    eax,0xffffffff
   1c8df:	jne    1c8c0 <main_usblist+0x30>
   1c8e1:	mov    r13,QWORD PTR [rip+0x21e6c0]        # 23afa8 <optind@GLIBC_2.2.5>
   1c8e8:	mov    ebx,eax
   1c8ea:	movsxd rax,DWORD PTR [r13+0x0]
   1c8ee:	lea    edx,[rax+0x1]
   1c8f1:	mov    DWORD PTR [r13+0x0],edx
   1c8f5:	mov    rdi,QWORD PTR [r12+rax*8]
   1c8f9:	call   eb40 <find_domain>
   1c8fe:	cmp    DWORD PTR [r13+0x0],ebp
   1c902:	mov    DWORD PTR [rsp+0x4],eax
   1c906:	jl     1caf2 <main_usblist+0x262>
   1c90c:	lea    r15,[rip+0x22054d]        # 23ce60 <ctx>
   1c913:	mov    esi,DWORD PTR [rsp+0x4]
   1c917:	lea    rdx,[rsp+0x2c]
   1c91c:	mov    rdi,QWORD PTR [r15]
   1c91f:	call   b3c0 <libxl_device_usbctrl_list@plt>
   1c924:	test   rax,rax
   1c927:	mov    QWORD PTR [rsp+0x8],rax
   1c92c:	mov    r14,rax
   1c92f:	je     1caba <main_usblist+0x22a>
   1c935:	mov    esi,DWORD PTR [rsp+0x2c]
   1c939:	test   esi,esi
   1c93b:	jle    1cab0 <main_usblist+0x220>
   1c941:	xor    r13d,r13d
   1c944:	lea    r12,[rsp+0x40]
   1c949:	lea    rbp,[rsp+0x30]
   1c94e:	jmp    1c96d <main_usblist+0xdd>
   1c950:	mov    rdi,r12
   1c953:	add    r13d,0x1
   1c957:	add    r14,0x20
   1c95b:	call   b0d0 <libxl_usbctrlinfo_dispose@plt>
   1c960:	mov    esi,DWORD PTR [rsp+0x2c]
   1c964:	cmp    esi,r13d
   1c967:	jle    1cab0 <main_usblist+0x220>
   1c96d:	lea    rax,[rip+0x12b12]        # 2f486 <__func__.10421+0x10fe>
   1c974:	lea    r9,[rip+0x14dc9]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   1c97b:	lea    r8,[rip+0x14dac]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   1c982:	lea    rcx,[rip+0x150c5]        # 31a4e <__PRETTY_FUNCTION__.10016+0x9be>
   1c989:	lea    rdx,[rip+0x150c3]        # 31a53 <__PRETTY_FUNCTION__.10016+0x9c3>
   1c990:	lea    rsi,[rip+0x151c1]        # 31b58 <__PRETTY_FUNCTION__.10016+0xac8>
   1c997:	push   rax
   1c998:	lea    rax,[rip+0x150ba]        # 31a59 <__PRETTY_FUNCTION__.10016+0x9c9>
   1c99f:	mov    edi,0x1
   1c9a4:	push   rax
   1c9a5:	xor    eax,eax
   1c9a7:	call   bd50 <__printf_chk@plt>
   1c9ac:	mov    rdi,r12
   1c9af:	call   b6a0 <libxl_usbctrlinfo_init@plt>
   1c9b4:	mov    esi,DWORD PTR [rsp+0x14]
   1c9b8:	mov    rdi,QWORD PTR [r15]
   1c9bb:	mov    rcx,r12
   1c9be:	mov    rdx,r14
   1c9c1:	call   b960 <libxl_device_usbctrl_getinfo@plt>
   1c9c6:	test   eax,eax
   1c9c8:	pop    rsi
   1c9c9:	pop    rdi
   1c9ca:	jne    1c950 <main_usblist+0xc0>
   1c9cc:	mov    ecx,DWORD PTR [rsp+0x4c]
   1c9d0:	mov    r9d,DWORD PTR [rsp+0x6c]
   1c9d5:	mov    r8d,DWORD PTR [rsp+0x58]
   1c9da:	mov    edi,DWORD PTR [rsp+0x40]
   1c9de:	mov    ebx,DWORD PTR [rsp+0x48]
   1c9e2:	mov    DWORD PTR [rsp+0x1c],ecx
   1c9e6:	mov    DWORD PTR [rsp+0x18],r9d
   1c9eb:	mov    DWORD PTR [rsp+0x10],r8d
   1c9f0:	call   b170 <libxl_usbctrl_type_to_string@plt>
   1c9f5:	mov    ecx,DWORD PTR [rsp+0x1c]
   1c9f9:	lea    rsi,[rip+0x15178]        # 31b78 <__PRETTY_FUNCTION__.10016+0xae8>
   1ca00:	mov    edi,0x1
   1ca05:	push   rcx
   1ca06:	push   rbx
   1ca07:	mov    rcx,rax
   1ca0a:	mov    r9d,DWORD PTR [rsp+0x28]
   1ca0f:	mov    r8d,DWORD PTR [rsp+0x20]
   1ca14:	xor    eax,eax
   1ca16:	mov    edx,DWORD PTR [rsp+0x54]
   1ca1a:	call   bd50 <__printf_chk@plt>
   1ca1f:	pop    rax
   1ca20:	pop    rdx
   1ca21:	mov    ecx,DWORD PTR [rsp+0x4c]
   1ca25:	test   ecx,ecx
   1ca27:	jle    1c950 <main_usblist+0xc0>
   1ca2d:	mov    QWORD PTR [rsp+0x10],r12
   1ca32:	mov    ebx,0x1
   1ca37:	mov    r12d,DWORD PTR [rsp+0x4]
   1ca3c:	jmp    1ca6c <main_usblist+0x1dc>
   1ca3e:	xchg   ax,ax
   1ca40:	movzx  ecx,BYTE PTR [rsp+0x3d]
   1ca45:	movzx  edx,BYTE PTR [rsp+0x3c]
   1ca4a:	lea    rsi,[rip+0x1501b]        # 31a6c <__PRETTY_FUNCTION__.10016+0x9dc>
   1ca51:	mov    edi,0x1
   1ca56:	call   bd50 <__printf_chk@plt>
   1ca5b:	mov    rdi,rbp
   1ca5e:	add    ebx,0x1
   1ca61:	call   c270 <libxl_device_usbdev_dispose@plt>
   1ca66:	cmp    DWORD PTR [rsp+0x4c],ebx
   1ca6a:	jl     1cae8 <main_usblist+0x258>
   1ca6c:	mov    rdi,rbp
   1ca6f:	call   b770 <libxl_device_usbdev_init@plt>
   1ca74:	lea    rsi,[rip+0x14fe6]        # 31a61 <__PRETTY_FUNCTION__.10016+0x9d1>
   1ca7b:	mov    edx,ebx
   1ca7d:	mov    edi,0x1
   1ca82:	xor    eax,eax
   1ca84:	call   bd50 <__printf_chk@plt>
   1ca89:	mov    edx,DWORD PTR [rsp+0x44]
   1ca8d:	mov    rdi,QWORD PTR [r15]
   1ca90:	mov    r8,rbp
   1ca93:	mov    ecx,ebx
   1ca95:	mov    esi,r12d
   1ca98:	call   b1f0 <libxl_ctrlport_to_device_usbdev@plt>
   1ca9d:	test   eax,eax
   1ca9f:	je     1ca40 <main_usblist+0x1b0>
   1caa1:	mov    edi,0xa
   1caa6:	call   aca0 <putchar@plt>
   1caab:	jmp    1ca5b <main_usblist+0x1cb>
   1caad:	nop    DWORD PTR [rax]
   1cab0:	mov    rdi,QWORD PTR [rsp+0x8]
   1cab5:	call   c000 <libxl_device_usbctrl_list_free@plt>
   1caba:	xor    eax,eax
   1cabc:	mov    rbx,QWORD PTR [rsp+0x88]
   1cac4:	xor    rbx,QWORD PTR fs:0x28
   1cacd:	jne    1cb19 <main_usblist+0x289>
   1cacf:	add    rsp,0x98
   1cad6:	pop    rbx
   1cad7:	pop    rbp
   1cad8:	pop    r12
   1cada:	pop    r13
   1cadc:	pop    r14
   1cade:	pop    r15
   1cae0:	ret    
   1cae1:	nop    DWORD PTR [rax+0x0]
   1cae8:	mov    r12,QWORD PTR [rsp+0x10]
   1caed:	jmp    1c950 <main_usblist+0xc0>
   1caf2:	mov    rax,QWORD PTR [rip+0x21e4f7]        # 23aff0 <stderr@GLIBC_2.2.5>
   1caf9:	lea    rdi,[rip+0x14f3a]        # 31a3a <__PRETTY_FUNCTION__.10016+0x9aa>
   1cb00:	mov    edx,0x13
   1cb05:	mov    esi,0x1
   1cb0a:	mov    rcx,QWORD PTR [rax]
   1cb0d:	call   c1b0 <fwrite@plt>
   1cb12:	mov    edi,ebx
   1cb14:	call   c1a0 <exit@plt>
   1cb19:	call   b130 <__stack_chk_fail@plt>
   1cb1e:	xchg   ax,ax

000000000001cb20 <sched_rtds_pool_output>:
   1cb20:	lea    rax,[rip+0x220339]        # 23ce60 <ctx>
   1cb27:	push   rbx
   1cb28:	mov    esi,edi
   1cb2a:	mov    rdi,QWORD PTR [rax]
   1cb2d:	call   c180 <libxl_cpupoolid_to_name@plt>
   1cb32:	lea    rsi,[rip+0x1505f]        # 31b98 <__PRETTY_FUNCTION__.10016+0xb08>
   1cb39:	mov    rbx,rax
   1cb3c:	mov    rdx,rax
   1cb3f:	mov    edi,0x1
   1cb44:	xor    eax,eax
   1cb46:	call   bd50 <__printf_chk@plt>
   1cb4b:	mov    rdi,rbx
   1cb4e:	call   ac40 <free@plt>
   1cb53:	xor    eax,eax
   1cb55:	pop    rbx
   1cb56:	ret    
   1cb57:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cb60 <sched_domain_output>:
   1cb60:	push   r15
   1cb62:	push   r14
   1cb64:	push   r13
   1cb66:	push   r12
   1cb68:	mov    r12,rcx
   1cb6b:	push   rbp
   1cb6c:	push   rbx
   1cb6d:	mov    rbx,rsi
   1cb70:	sub    rsp,0x48
   1cb74:	lea    rbp,[rip+0x2202e5]        # 23ce60 <ctx>
   1cb7b:	mov    rax,QWORD PTR fs:0x28
   1cb84:	mov    QWORD PTR [rsp+0x38],rax
   1cb89:	xor    eax,eax
   1cb8b:	test   rcx,rcx
   1cb8e:	mov    DWORD PTR [rsp+0x4],edi
   1cb92:	mov    QWORD PTR [rsp+0x8],rdx
   1cb97:	mov    DWORD PTR [rsp+0x34],0x0
   1cb9f:	mov    rdi,QWORD PTR [rbp+0x0]
   1cba3:	je     1cbd5 <sched_domain_output+0x75>
   1cba5:	lea    rdx,[rsp+0x2c]
   1cbaa:	xor    ecx,ecx
   1cbac:	mov    rsi,r12
   1cbaf:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1cbb4:	test   eax,eax
   1cbb6:	jne    1cca8 <sched_domain_output+0x148>
   1cbbc:	mov    esi,DWORD PTR [rsp+0x2c]
   1cbc0:	mov    rdi,QWORD PTR [rbp+0x0]
   1cbc4:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1cbc9:	test   eax,eax
   1cbcb:	je     1cca8 <sched_domain_output+0x148>
   1cbd1:	mov    rdi,QWORD PTR [rbp+0x0]
   1cbd5:	lea    rsi,[rsp+0x30]
   1cbda:	call   b830 <libxl_list_domain@plt>
   1cbdf:	test   rax,rax
   1cbe2:	mov    QWORD PTR [rsp+0x10],rax
   1cbe7:	je     1cd10 <sched_domain_output+0x1b0>
   1cbed:	mov    rdi,QWORD PTR [rbp+0x0]
   1cbf1:	lea    rsi,[rsp+0x34]
   1cbf6:	call   c200 <libxl_list_cpupool@plt>
   1cbfb:	test   rax,rax
   1cbfe:	mov    QWORD PTR [rsp+0x18],rax
   1cc03:	mov    r15,rax
   1cc06:	je     1cd40 <sched_domain_output+0x1e0>
   1cc0c:	mov    esi,DWORD PTR [rsp+0x34]
   1cc10:	xor    ebp,ebp
   1cc12:	cmp    esi,ebp
   1cc14:	jle    1cc86 <sched_domain_output+0x126>
   1cc16:	mov    eax,DWORD PTR [rsp+0x4]
   1cc1a:	cmp    DWORD PTR [r15+0x10],eax
   1cc1e:	jne    1cc7a <sched_domain_output+0x11a>
   1cc20:	test   r12,r12
   1cc23:	mov    edi,DWORD PTR [r15]
   1cc26:	jne    1ccf0 <sched_domain_output+0x190>
   1cc2c:	mov    rax,QWORD PTR [rsp+0x8]
   1cc31:	call   rax
   1cc33:	mov    edi,0xffffffff
   1cc38:	call   rbx
   1cc3a:	mov    eax,DWORD PTR [rsp+0x30]
   1cc3e:	test   eax,eax
   1cc40:	jle    1cc76 <sched_domain_output+0x116>
   1cc42:	mov    rax,QWORD PTR [rsp+0x10]
   1cc47:	xor    r14d,r14d
   1cc4a:	lea    r13,[rax+0x10]
   1cc4e:	xchg   ax,ax
   1cc50:	mov    eax,DWORD PTR [r15]
   1cc53:	cmp    DWORD PTR [r13+0x58],eax
   1cc57:	jne    1cc67 <sched_domain_output+0x107>
   1cc59:	mov    edi,DWORD PTR [r13+0x0]
   1cc5d:	call   rbx
   1cc5f:	test   eax,eax
   1cc61:	jne    1cd00 <sched_domain_output+0x1a0>
   1cc67:	add    r14d,0x1
   1cc6b:	add    r13,0x70
   1cc6f:	cmp    DWORD PTR [rsp+0x30],r14d
   1cc74:	jg     1cc50 <sched_domain_output+0xf0>
   1cc76:	mov    esi,DWORD PTR [rsp+0x34]
   1cc7a:	add    rbp,0x1
   1cc7e:	add    r15,0x28
   1cc82:	cmp    esi,ebp
   1cc84:	jg     1cc16 <sched_domain_output+0xb6>
   1cc86:	mov    rdi,QWORD PTR [rsp+0x18]
   1cc8b:	call   ae50 <libxl_cpupoolinfo_list_free@plt>
   1cc90:	mov    esi,DWORD PTR [rsp+0x30]
   1cc94:	mov    rdi,QWORD PTR [rsp+0x10]
   1cc99:	call   b0e0 <libxl_dominfo_list_free@plt>
   1cc9e:	xor    eax,eax
   1cca0:	jmp    1cccd <sched_domain_output+0x16d>
   1cca2:	nop    WORD PTR [rax+rax*1+0x0]
   1cca8:	mov    rax,QWORD PTR [rip+0x21e341]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ccaf:	lea    rdx,[rip+0x1457c]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1ccb6:	mov    rcx,r12
   1ccb9:	mov    esi,0x1
   1ccbe:	mov    rdi,QWORD PTR [rax]
   1ccc1:	xor    eax,eax
   1ccc3:	call   c1e0 <__fprintf_chk@plt>
   1ccc8:	mov    eax,0x1
   1cccd:	mov    rcx,QWORD PTR [rsp+0x38]
   1ccd2:	xor    rcx,QWORD PTR fs:0x28
   1ccdb:	jne    1cd78 <sched_domain_output+0x218>
   1cce1:	add    rsp,0x48
   1cce5:	pop    rbx
   1cce6:	pop    rbp
   1cce7:	pop    r12
   1cce9:	pop    r13
   1cceb:	pop    r14
   1cced:	pop    r15
   1ccef:	ret    
   1ccf0:	cmp    DWORD PTR [rsp+0x2c],edi
   1ccf4:	jne    1cc7a <sched_domain_output+0x11a>
   1ccf6:	jmp    1cc2c <sched_domain_output+0xcc>
   1ccfb:	nop    DWORD PTR [rax+rax*1+0x0]
   1cd00:	mov    esi,DWORD PTR [rsp+0x34]
   1cd04:	jmp    1cc86 <sched_domain_output+0x126>
   1cd09:	nop    DWORD PTR [rax+0x0]
   1cd10:	mov    rax,QWORD PTR [rip+0x21e2d9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1cd17:	lea    rdi,[rip+0x14e92]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   1cd1e:	mov    edx,0x1a
   1cd23:	mov    esi,0x1
   1cd28:	mov    rcx,QWORD PTR [rax]
   1cd2b:	call   c1b0 <fwrite@plt>
   1cd30:	mov    eax,0x1
   1cd35:	jmp    1cccd <sched_domain_output+0x16d>
   1cd37:	nop    WORD PTR [rax+rax*1+0x0]
   1cd40:	mov    rax,QWORD PTR [rip+0x21e2a9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1cd47:	lea    rdi,[rip+0x1449f]        # 311ed <__PRETTY_FUNCTION__.10016+0x15d>
   1cd4e:	mov    edx,0x1b
   1cd53:	mov    esi,0x1
   1cd58:	mov    rcx,QWORD PTR [rax]
   1cd5b:	call   c1b0 <fwrite@plt>
   1cd60:	mov    esi,DWORD PTR [rsp+0x30]
   1cd64:	mov    rdi,QWORD PTR [rsp+0x10]
   1cd69:	call   b0e0 <libxl_dominfo_list_free@plt>
   1cd6e:	mov    eax,0x1
   1cd73:	jmp    1cccd <sched_domain_output+0x16d>
   1cd78:	call   b130 <__stack_chk_fail@plt>
   1cd7d:	nop    DWORD PTR [rax]

000000000001cd80 <sched_credit2_pool_output>:
   1cd80:	push   r12
   1cd82:	push   rbp
   1cd83:	mov    esi,edi
   1cd85:	push   rbx
   1cd86:	mov    r12d,edi
   1cd89:	sub    rsp,0x10
   1cd8d:	lea    rbp,[rip+0x2200cc]        # 23ce60 <ctx>
   1cd94:	mov    rax,QWORD PTR fs:0x28
   1cd9d:	mov    QWORD PTR [rsp+0x8],rax
   1cda2:	xor    eax,eax
   1cda4:	mov    rdi,QWORD PTR [rbp+0x0]
   1cda8:	call   c180 <libxl_cpupoolid_to_name@plt>
   1cdad:	mov    rdi,QWORD PTR [rbp+0x0]
   1cdb1:	lea    rdx,[rsp+0x4]
   1cdb6:	mov    esi,r12d
   1cdb9:	mov    rbx,rax
   1cdbc:	call   c1d0 <libxl_sched_credit2_params_get@plt>
   1cdc1:	test   eax,eax
   1cdc3:	jne    1ce00 <sched_credit2_pool_output+0x80>
   1cdc5:	mov    ecx,DWORD PTR [rsp+0x4]
   1cdc9:	lea    rsi,[rip+0x14dfb]        # 31bcb <__PRETTY_FUNCTION__.10016+0xb3b>
   1cdd0:	mov    rdx,rbx
   1cdd3:	mov    edi,0x1
   1cdd8:	call   bd50 <__printf_chk@plt>
   1cddd:	mov    rdi,rbx
   1cde0:	call   ac40 <free@plt>
   1cde5:	xor    eax,eax
   1cde7:	mov    rcx,QWORD PTR [rsp+0x8]
   1cdec:	xor    rcx,QWORD PTR fs:0x28
   1cdf5:	jne    1ce38 <sched_credit2_pool_output+0xb8>
   1cdf7:	add    rsp,0x10
   1cdfb:	pop    rbx
   1cdfc:	pop    rbp
   1cdfd:	pop    r12
   1cdff:	ret    
   1ce00:	mov    rax,QWORD PTR [rip+0x21e1e9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ce07:	lea    rdi,[rip+0x14f7a]        # 31d88 <__PRETTY_FUNCTION__.10016+0xcf8>
   1ce0e:	mov    edx,0x27
   1ce13:	mov    esi,0x1
   1ce18:	mov    rcx,QWORD PTR [rax]
   1ce1b:	call   c1b0 <fwrite@plt>
   1ce20:	lea    rsi,[rip+0x14f89]        # 31db0 <__PRETTY_FUNCTION__.10016+0xd20>
   1ce27:	mov    rdx,rbx
   1ce2a:	mov    edi,0x1
   1ce2f:	xor    eax,eax
   1ce31:	call   bd50 <__printf_chk@plt>
   1ce36:	jmp    1cddd <sched_credit2_pool_output+0x5d>
   1ce38:	call   b130 <__stack_chk_fail@plt>
   1ce3d:	nop    DWORD PTR [rax]

000000000001ce40 <sched_credit_params_get>:
   1ce40:	sub    rsp,0x8
   1ce44:	lea    rax,[rip+0x220015]        # 23ce60 <ctx>
   1ce4b:	mov    rdx,rsi
   1ce4e:	mov    esi,edi
   1ce50:	mov    rdi,QWORD PTR [rax]
   1ce53:	call   c120 <libxl_sched_credit_params_get@plt>
   1ce58:	test   eax,eax
   1ce5a:	je     1ce81 <sched_credit_params_get+0x41>
   1ce5c:	mov    rax,QWORD PTR [rip+0x21e18d]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ce63:	lea    rdi,[rip+0x14f6e]        # 31dd8 <__PRETTY_FUNCTION__.10016+0xd48>
   1ce6a:	mov    edx,0x26
   1ce6f:	mov    esi,0x1
   1ce74:	mov    rcx,QWORD PTR [rax]
   1ce77:	call   c1b0 <fwrite@plt>
   1ce7c:	mov    eax,0x1
   1ce81:	add    rsp,0x8
   1ce85:	ret    
   1ce86:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001ce90 <sched_credit_pool_output>:
   1ce90:	push   rbp
   1ce91:	push   rbx
   1ce92:	mov    esi,edi
   1ce94:	mov    ebp,edi
   1ce96:	sub    rsp,0x28
   1ce9a:	mov    rax,QWORD PTR fs:0x28
   1cea3:	mov    QWORD PTR [rsp+0x18],rax
   1cea8:	xor    eax,eax
   1ceaa:	lea    rax,[rip+0x21ffaf]        # 23ce60 <ctx>
   1ceb1:	mov    rdi,QWORD PTR [rax]
   1ceb4:	call   c180 <libxl_cpupoolid_to_name@plt>
   1ceb9:	lea    rsi,[rsp+0xc]
   1cebe:	mov    edi,ebp
   1cec0:	mov    rbx,rax
   1cec3:	call   1ce40 <sched_credit_params_get>
   1cec8:	test   eax,eax
   1ceca:	jne    1cf18 <sched_credit_pool_output+0x88>
   1cecc:	mov    r9d,DWORD PTR [rsp+0x14]
   1ced1:	mov    r8d,DWORD PTR [rsp+0x10]
   1ced6:	lea    rsi,[rip+0x14f23]        # 31e00 <__PRETTY_FUNCTION__.10016+0xd70>
   1cedd:	mov    ecx,DWORD PTR [rsp+0xc]
   1cee1:	mov    rdx,rbx
   1cee4:	mov    edi,0x1
   1cee9:	xor    eax,eax
   1ceeb:	call   bd50 <__printf_chk@plt>
   1cef0:	mov    rdi,rbx
   1cef3:	call   ac40 <free@plt>
   1cef8:	xor    eax,eax
   1cefa:	mov    rcx,QWORD PTR [rsp+0x18]
   1ceff:	xor    rcx,QWORD PTR fs:0x28
   1cf08:	jne    1cf30 <sched_credit_pool_output+0xa0>
   1cf0a:	add    rsp,0x28
   1cf0e:	pop    rbx
   1cf0f:	pop    rbp
   1cf10:	ret    
   1cf11:	nop    DWORD PTR [rax+0x0]
   1cf18:	lea    rsi,[rip+0x14e91]        # 31db0 <__PRETTY_FUNCTION__.10016+0xd20>
   1cf1f:	mov    rdx,rbx
   1cf22:	mov    edi,0x1
   1cf27:	xor    eax,eax
   1cf29:	call   bd50 <__printf_chk@plt>
   1cf2e:	jmp    1cef0 <sched_credit_pool_output+0x60>
   1cf30:	call   b130 <__stack_chk_fail@plt>
   1cf35:	nop
   1cf36:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001cf40 <sched_domain_get>:
   1cf40:	push   rbp
   1cf41:	push   rbx
   1cf42:	mov    ebp,edi
   1cf44:	mov    rbx,rdx
   1cf47:	sub    rsp,0x8
   1cf4b:	lea    rax,[rip+0x21ff0e]        # 23ce60 <ctx>
   1cf52:	mov    rdi,QWORD PTR [rax]
   1cf55:	call   c030 <libxl_domain_sched_params_get@plt>
   1cf5a:	test   eax,eax
   1cf5c:	jne    1cfa8 <sched_domain_get+0x68>
   1cf5e:	cmp    DWORD PTR [rbx],ebp
   1cf60:	je     1cf9b <sched_domain_get+0x5b>
   1cf62:	mov    edi,ebp
   1cf64:	call   b1e0 <libxl_scheduler_to_string@plt>
   1cf69:	mov    edi,DWORD PTR [rbx]
   1cf6b:	mov    rbp,rax
   1cf6e:	call   b1e0 <libxl_scheduler_to_string@plt>
   1cf73:	mov    rcx,rax
   1cf76:	mov    rax,QWORD PTR [rip+0x21e073]        # 23aff0 <stderr@GLIBC_2.2.5>
   1cf7d:	lea    rdx,[rip+0x14ee4]        # 31e68 <__PRETTY_FUNCTION__.10016+0xdd8>
   1cf84:	mov    r8,rbp
   1cf87:	mov    esi,0x1
   1cf8c:	mov    rdi,QWORD PTR [rax]
   1cf8f:	xor    eax,eax
   1cf91:	call   c1e0 <__fprintf_chk@plt>
   1cf96:	mov    eax,0x1
   1cf9b:	add    rsp,0x8
   1cf9f:	pop    rbx
   1cfa0:	pop    rbp
   1cfa1:	ret    
   1cfa2:	nop    WORD PTR [rax+rax*1+0x0]
   1cfa8:	mov    rax,QWORD PTR [rip+0x21e041]        # 23aff0 <stderr@GLIBC_2.2.5>
   1cfaf:	lea    rdi,[rip+0x14e8a]        # 31e40 <__PRETTY_FUNCTION__.10016+0xdb0>
   1cfb6:	mov    edx,0x26
   1cfbb:	mov    esi,0x1
   1cfc0:	mov    rcx,QWORD PTR [rax]
   1cfc3:	call   c1b0 <fwrite@plt>
   1cfc8:	add    rsp,0x8
   1cfcc:	mov    eax,0x1
   1cfd1:	pop    rbx
   1cfd2:	pop    rbp
   1cfd3:	ret    
   1cfd4:	xchg   ax,ax
   1cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001cfe0 <sched_credit2_domain_output.part.3>:
   1cfe0:	lea    r9,[rip+0x14c00]        # 31be7 <__PRETTY_FUNCTION__.10016+0xb57>
   1cfe7:	lea    r8,[rip+0x14bfd]        # 31beb <__PRETTY_FUNCTION__.10016+0xb5b>
   1cfee:	lea    rcx,[rip+0x1141f]        # 2e414 <__func__.10421+0x8c>
   1cff5:	lea    rdx,[rip+0x11503]        # 2e4ff <__func__.10421+0x177>
   1cffc:	lea    rsi,[rip+0x14bef]        # 31bf2 <__PRETTY_FUNCTION__.10016+0xb62>
   1d003:	sub    rsp,0x8
   1d007:	mov    edi,0x1
   1d00c:	xor    eax,eax
   1d00e:	call   bd50 <__printf_chk@plt>
   1d013:	xor    eax,eax
   1d015:	add    rsp,0x8
   1d019:	ret    
   1d01a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001d020 <sched_credit_domain_output>:
   1d020:	push   r13
   1d022:	push   r12
   1d024:	push   rbp
   1d025:	push   rbx
   1d026:	sub    rsp,0x38
   1d02a:	mov    rax,QWORD PTR fs:0x28
   1d033:	mov    QWORD PTR [rsp+0x28],rax
   1d038:	xor    eax,eax
   1d03a:	test   edi,edi
   1d03c:	js     1d0e0 <sched_credit_domain_output+0xc0>
   1d042:	mov    r12,rsp
   1d045:	mov    ebx,edi
   1d047:	mov    rdi,r12
   1d04a:	call   c060 <libxl_domain_sched_params_init@plt>
   1d04f:	mov    rdx,r12
   1d052:	mov    esi,ebx
   1d054:	mov    edi,0x5
   1d059:	call   1cf40 <sched_domain_get>
   1d05e:	test   eax,eax
   1d060:	mov    ebp,eax
   1d062:	jne    1d0d0 <sched_credit_domain_output+0xb0>
   1d064:	lea    rax,[rip+0x21fdf5]        # 23ce60 <ctx>
   1d06b:	mov    esi,ebx
   1d06d:	mov    rdi,QWORD PTR [rax]
   1d070:	call   ae20 <libxl_domid_to_name@plt>
   1d075:	mov    r9d,DWORD PTR [rsp+0x8]
   1d07a:	mov    r8d,DWORD PTR [rsp+0x4]
   1d07f:	lea    rsi,[rip+0x14b7f]        # 31c05 <__PRETTY_FUNCTION__.10016+0xb75>
   1d086:	mov    rdx,rax
   1d089:	mov    r13,rax
   1d08c:	mov    ecx,ebx
   1d08e:	mov    edi,0x1
   1d093:	xor    eax,eax
   1d095:	call   bd50 <__printf_chk@plt>
   1d09a:	mov    rdi,r13
   1d09d:	call   ac40 <free@plt>
   1d0a2:	mov    rdi,r12
   1d0a5:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d0aa:	mov    rcx,QWORD PTR [rsp+0x28]
   1d0af:	xor    rcx,QWORD PTR fs:0x28
   1d0b8:	mov    eax,ebp
   1d0ba:	jne    1d0e9 <sched_credit_domain_output+0xc9>
   1d0bc:	add    rsp,0x38
   1d0c0:	pop    rbx
   1d0c1:	pop    rbp
   1d0c2:	pop    r12
   1d0c4:	pop    r13
   1d0c6:	ret    
   1d0c7:	nop    WORD PTR [rax+rax*1+0x0]
   1d0d0:	mov    rdi,r12
   1d0d3:	mov    ebp,0x1
   1d0d8:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d0dd:	jmp    1d0aa <sched_credit_domain_output+0x8a>
   1d0df:	nop
   1d0e0:	call   1cfe0 <sched_credit2_domain_output.part.3>
   1d0e5:	mov    ebp,eax
   1d0e7:	jmp    1d0aa <sched_credit_domain_output+0x8a>
   1d0e9:	call   b130 <__stack_chk_fail@plt>
   1d0ee:	xchg   ax,ax

000000000001d0f0 <sched_credit2_domain_output>:
   1d0f0:	push   r13
   1d0f2:	push   r12
   1d0f4:	push   rbp
   1d0f5:	push   rbx
   1d0f6:	sub    rsp,0x38
   1d0fa:	mov    rax,QWORD PTR fs:0x28
   1d103:	mov    QWORD PTR [rsp+0x28],rax
   1d108:	xor    eax,eax
   1d10a:	test   edi,edi
   1d10c:	js     1d1b0 <sched_credit2_domain_output+0xc0>
   1d112:	mov    r12,rsp
   1d115:	mov    ebx,edi
   1d117:	mov    rdi,r12
   1d11a:	call   c060 <libxl_domain_sched_params_init@plt>
   1d11f:	mov    rdx,r12
   1d122:	mov    esi,ebx
   1d124:	mov    edi,0x6
   1d129:	call   1cf40 <sched_domain_get>
   1d12e:	test   eax,eax
   1d130:	mov    ebp,eax
   1d132:	jne    1d1a0 <sched_credit2_domain_output+0xb0>
   1d134:	lea    rax,[rip+0x21fd25]        # 23ce60 <ctx>
   1d13b:	mov    esi,ebx
   1d13d:	mov    rdi,QWORD PTR [rax]
   1d140:	call   ae20 <libxl_domid_to_name@plt>
   1d145:	mov    r9d,DWORD PTR [rsp+0x8]
   1d14a:	mov    r8d,DWORD PTR [rsp+0x4]
   1d14f:	lea    rsi,[rip+0x14aaf]        # 31c05 <__PRETTY_FUNCTION__.10016+0xb75>
   1d156:	mov    rdx,rax
   1d159:	mov    r13,rax
   1d15c:	mov    ecx,ebx
   1d15e:	mov    edi,0x1
   1d163:	xor    eax,eax
   1d165:	call   bd50 <__printf_chk@plt>
   1d16a:	mov    rdi,r13
   1d16d:	call   ac40 <free@plt>
   1d172:	mov    rdi,r12
   1d175:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d17a:	mov    rcx,QWORD PTR [rsp+0x28]
   1d17f:	xor    rcx,QWORD PTR fs:0x28
   1d188:	mov    eax,ebp
   1d18a:	jne    1d1b9 <sched_credit2_domain_output+0xc9>
   1d18c:	add    rsp,0x38
   1d190:	pop    rbx
   1d191:	pop    rbp
   1d192:	pop    r12
   1d194:	pop    r13
   1d196:	ret    
   1d197:	nop    WORD PTR [rax+rax*1+0x0]
   1d1a0:	mov    rdi,r12
   1d1a3:	mov    ebp,0x1
   1d1a8:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d1ad:	jmp    1d17a <sched_credit2_domain_output+0x8a>
   1d1af:	nop
   1d1b0:	call   1cfe0 <sched_credit2_domain_output.part.3>
   1d1b5:	mov    ebp,eax
   1d1b7:	jmp    1d17a <sched_credit2_domain_output+0x8a>
   1d1b9:	call   b130 <__stack_chk_fail@plt>
   1d1be:	xchg   ax,ax

000000000001d1c0 <sched_rtds_domain_output.part.4>:
   1d1c0:	lea    rax,[rip+0x14a77]        # 31c3e <__PRETTY_FUNCTION__.10016+0xbae>
   1d1c7:	sub    rsp,0x10
   1d1cb:	lea    r9,[rip+0x14a46]        # 31c18 <__PRETTY_FUNCTION__.10016+0xb88>
   1d1d2:	lea    r8,[rip+0x14a46]        # 31c1f <__PRETTY_FUNCTION__.10016+0xb8f>
   1d1d9:	lea    rcx,[rip+0x11234]        # 2e414 <__func__.10421+0x8c>
   1d1e0:	lea    rdx,[rip+0x11318]        # 2e4ff <__func__.10421+0x177>
   1d1e7:	push   rax
   1d1e8:	lea    rsi,[rip+0x14a37]        # 31c26 <__PRETTY_FUNCTION__.10016+0xb96>
   1d1ef:	mov    edi,0x1
   1d1f4:	xor    eax,eax
   1d1f6:	call   bd50 <__printf_chk@plt>
   1d1fb:	xor    eax,eax
   1d1fd:	add    rsp,0x18
   1d201:	ret    
   1d202:	nop    DWORD PTR [rax+0x0]
   1d206:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001d210 <sched_rtds_domain_output>:
   1d210:	push   r13
   1d212:	push   r12
   1d214:	push   rbp
   1d215:	push   rbx
   1d216:	sub    rsp,0x38
   1d21a:	mov    rax,QWORD PTR fs:0x28
   1d223:	mov    QWORD PTR [rsp+0x28],rax
   1d228:	xor    eax,eax
   1d22a:	test   edi,edi
   1d22c:	js     1d2f0 <sched_rtds_domain_output+0xe0>
   1d232:	mov    r12,rsp
   1d235:	mov    ebx,edi
   1d237:	mov    rdi,r12
   1d23a:	call   c060 <libxl_domain_sched_params_init@plt>
   1d23f:	mov    rdx,r12
   1d242:	mov    esi,ebx
   1d244:	mov    edi,0x8
   1d249:	call   1cf40 <sched_domain_get>
   1d24e:	test   eax,eax
   1d250:	mov    ebp,eax
   1d252:	jne    1d2e0 <sched_rtds_domain_output+0xd0>
   1d258:	lea    rax,[rip+0x21fc01]        # 23ce60 <ctx>
   1d25f:	mov    esi,ebx
   1d261:	mov    rdi,QWORD PTR [rax]
   1d264:	call   ae20 <libxl_domid_to_name@plt>
   1d269:	mov    r13,rax
   1d26c:	mov    eax,DWORD PTR [rsp+0x14]
   1d270:	lea    rdx,[rip+0x149d5]        # 31c4c <__PRETTY_FUNCTION__.10016+0xbbc>
   1d277:	lea    rsi,[rip+0x149d1]        # 31c4f <__PRETTY_FUNCTION__.10016+0xbbf>
   1d27e:	mov    ecx,ebx
   1d280:	mov    edi,0x1
   1d285:	test   eax,eax
   1d287:	lea    rax,[rip+0x149ba]        # 31c48 <__PRETTY_FUNCTION__.10016+0xbb8>
   1d28e:	cmove  rax,rdx
   1d292:	sub    rsp,0x8
   1d296:	mov    rdx,r13
   1d299:	push   rax
   1d29a:	mov    r9d,DWORD PTR [rsp+0x20]
   1d29f:	xor    eax,eax
   1d2a1:	mov    r8d,DWORD PTR [rsp+0x1c]
   1d2a6:	call   bd50 <__printf_chk@plt>
   1d2ab:	mov    rdi,r13
   1d2ae:	call   ac40 <free@plt>
   1d2b3:	mov    rdi,r12
   1d2b6:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d2bb:	pop    rdx
   1d2bc:	pop    rcx
   1d2bd:	mov    rcx,QWORD PTR [rsp+0x28]
   1d2c2:	xor    rcx,QWORD PTR fs:0x28
   1d2cb:	mov    eax,ebp
   1d2cd:	jne    1d2f9 <sched_rtds_domain_output+0xe9>
   1d2cf:	add    rsp,0x38
   1d2d3:	pop    rbx
   1d2d4:	pop    rbp
   1d2d5:	pop    r12
   1d2d7:	pop    r13
   1d2d9:	ret    
   1d2da:	nop    WORD PTR [rax+rax*1+0x0]
   1d2e0:	mov    rdi,r12
   1d2e3:	mov    ebp,0x1
   1d2e8:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d2ed:	jmp    1d2bd <sched_rtds_domain_output+0xad>
   1d2ef:	nop
   1d2f0:	call   1d1c0 <sched_rtds_domain_output.part.4>
   1d2f5:	mov    ebp,eax
   1d2f7:	jmp    1d2bd <sched_rtds_domain_output+0xad>
   1d2f9:	call   b130 <__stack_chk_fail@plt>
   1d2fe:	xchg   ax,ax

000000000001d300 <sched_domain_set>:
   1d300:	sub    rsp,0x8
   1d304:	lea    rax,[rip+0x21fb55]        # 23ce60 <ctx>
   1d30b:	mov    rdx,rsi
   1d30e:	mov    esi,edi
   1d310:	mov    rdi,QWORD PTR [rax]
   1d313:	call   b5c0 <libxl_domain_sched_params_set@plt>
   1d318:	test   eax,eax
   1d31a:	je     1d341 <sched_domain_set+0x41>
   1d31c:	mov    rax,QWORD PTR [rip+0x21dccd]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d323:	lea    rdi,[rip+0x14b76]        # 31ea0 <__PRETTY_FUNCTION__.10016+0xe10>
   1d32a:	mov    edx,0x26
   1d32f:	mov    esi,0x1
   1d334:	mov    rcx,QWORD PTR [rax]
   1d337:	call   c1b0 <fwrite@plt>
   1d33c:	mov    eax,0x1
   1d341:	add    rsp,0x8
   1d345:	ret    
   1d346:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001d350 <sched_rtds_vcpu_output.part.6>:
   1d350:	push   r15
   1d352:	push   r14
   1d354:	mov    r14,rsi
   1d357:	push   r13
   1d359:	push   r12
   1d35b:	mov    esi,edi
   1d35d:	push   rbp
   1d35e:	push   rbx
   1d35f:	mov    r12d,edi
   1d362:	sub    rsp,0x8
   1d366:	lea    rax,[rip+0x21faf3]        # 23ce60 <ctx>
   1d36d:	mov    rdi,QWORD PTR [rax]
   1d370:	call   ae20 <libxl_domid_to_name@plt>
   1d375:	mov    edi,DWORD PTR [r14+0x4]
   1d379:	mov    rbp,rax
   1d37c:	test   edi,edi
   1d37e:	jle    1d3db <sched_rtds_vcpu_output.part.6+0x8b>
   1d380:	lea    r15,[rip+0x148c1]        # 31c48 <__PRETTY_FUNCTION__.10016+0xbb8>
   1d387:	xor    r13d,r13d
   1d38a:	xor    ebx,ebx
   1d38c:	nop    DWORD PTR [rax+0x0]
   1d390:	mov    rax,QWORD PTR [r14+0x8]
   1d394:	lea    rsi,[rip+0x148cc]        # 31c67 <__PRETTY_FUNCTION__.10016+0xbd7>
   1d39b:	mov    ecx,r12d
   1d39e:	mov    edi,0x1
   1d3a3:	add    rax,r13
   1d3a6:	mov    edx,DWORD PTR [rax+0x10]
   1d3a9:	test   edx,edx
   1d3ab:	lea    rdx,[rip+0x1489a]        # 31c4c <__PRETTY_FUNCTION__.10016+0xbbc>
   1d3b2:	cmovne rdx,r15
   1d3b6:	add    ebx,0x1
   1d3b9:	add    r13,0x18
   1d3bd:	push   rdx
   1d3be:	mov    edx,DWORD PTR [rax+0x14]
   1d3c1:	push   rdx
   1d3c2:	mov    r9d,DWORD PTR [rax+0xc]
   1d3c6:	mov    rdx,rbp
   1d3c9:	mov    r8d,DWORD PTR [rax]
   1d3cc:	xor    eax,eax
   1d3ce:	call   bd50 <__printf_chk@plt>
   1d3d3:	cmp    ebx,DWORD PTR [r14+0x4]
   1d3d7:	pop    rcx
   1d3d8:	pop    rsi
   1d3d9:	jl     1d390 <sched_rtds_vcpu_output.part.6+0x40>
   1d3db:	mov    rdi,rbp
   1d3de:	call   ac40 <free@plt>
   1d3e3:	add    rsp,0x8
   1d3e7:	xor    eax,eax
   1d3e9:	pop    rbx
   1d3ea:	pop    rbp
   1d3eb:	pop    r12
   1d3ed:	pop    r13
   1d3ef:	pop    r14
   1d3f1:	pop    r15
   1d3f3:	ret    
   1d3f4:	xchg   ax,ax
   1d3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001d400 <sched_rtds_vcpu_output_all>:
   1d400:	push   rbp
   1d401:	push   rbx
   1d402:	sub    rsp,0x8
   1d406:	test   edi,edi
   1d408:	js     1d490 <sched_rtds_vcpu_output_all+0x90>
   1d40e:	lea    rax,[rip+0x21fa4b]        # 23ce60 <ctx>
   1d415:	mov    DWORD PTR [rsi+0x4],0x0
   1d41c:	mov    rdx,rsi
   1d41f:	mov    ebp,edi
   1d421:	mov    rbx,rsi
   1d424:	mov    esi,edi
   1d426:	mov    rdi,QWORD PTR [rax]
   1d429:	call   b660 <libxl_vcpu_sched_params_get_all@plt>
   1d42e:	test   eax,eax
   1d430:	jne    1d4da <sched_rtds_vcpu_output_all+0xda>
   1d436:	cmp    DWORD PTR [rbx],0x8
   1d439:	je     1d480 <sched_rtds_vcpu_output_all+0x80>
   1d43b:	mov    edi,0x8
   1d440:	call   b1e0 <libxl_scheduler_to_string@plt>
   1d445:	mov    edi,DWORD PTR [rbx]
   1d447:	mov    rbp,rax
   1d44a:	call   b1e0 <libxl_scheduler_to_string@plt>
   1d44f:	mov    rcx,rax
   1d452:	mov    rax,QWORD PTR [rip+0x21db97]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d459:	lea    rdx,[rip+0x14a98]        # 31ef8 <__PRETTY_FUNCTION__.10016+0xe68>
   1d460:	mov    r8,rbp
   1d463:	mov    esi,0x1
   1d468:	mov    rdi,QWORD PTR [rax]
   1d46b:	xor    eax,eax
   1d46d:	call   c1e0 <__fprintf_chk@plt>
   1d472:	add    rsp,0x8
   1d476:	mov    eax,0x1
   1d47b:	pop    rbx
   1d47c:	pop    rbp
   1d47d:	ret    
   1d47e:	xchg   ax,ax
   1d480:	add    rsp,0x8
   1d484:	mov    rsi,rbx
   1d487:	mov    edi,ebp
   1d489:	pop    rbx
   1d48a:	pop    rbp
   1d48b:	jmp    1d350 <sched_rtds_vcpu_output.part.6>
   1d490:	lea    rax,[rip+0x147a7]        # 31c3e <__PRETTY_FUNCTION__.10016+0xbae>
   1d497:	lea    rdx,[rip+0x11061]        # 2e4ff <__func__.10421+0x177>
   1d49e:	lea    r9,[rip+0x1477a]        # 31c1f <__PRETTY_FUNCTION__.10016+0xb8f>
   1d4a5:	lea    r8,[rip+0x147d7]        # 31c83 <__PRETTY_FUNCTION__.10016+0xbf3>
   1d4ac:	lea    rcx,[rip+0x10f61]        # 2e414 <__func__.10421+0x8c>
   1d4b3:	lea    rsi,[rip+0x147ce]        # 31c88 <__PRETTY_FUNCTION__.10016+0xbf8>
   1d4ba:	push   rax
   1d4bb:	lea    rax,[rip+0x14756]        # 31c18 <__PRETTY_FUNCTION__.10016+0xb88>
   1d4c2:	mov    edi,0x1
   1d4c7:	push   rax
   1d4c8:	xor    eax,eax
   1d4ca:	call   bd50 <__printf_chk@plt>
   1d4cf:	pop    rax
   1d4d0:	pop    rdx
   1d4d1:	xor    eax,eax
   1d4d3:	add    rsp,0x8
   1d4d7:	pop    rbx
   1d4d8:	pop    rbp
   1d4d9:	ret    
   1d4da:	mov    rax,QWORD PTR [rip+0x21db0f]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d4e1:	lea    rdi,[rip+0x149e0]        # 31ec8 <__PRETTY_FUNCTION__.10016+0xe38>
   1d4e8:	mov    edx,0x28
   1d4ed:	mov    esi,0x1
   1d4f2:	mov    rcx,QWORD PTR [rax]
   1d4f5:	call   c1b0 <fwrite@plt>
   1d4fa:	mov    edi,0x1
   1d4ff:	call   c1a0 <exit@plt>
   1d504:	xchg   ax,ax
   1d506:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001d510 <main_sched_credit>:
   1d510:	push   r15
   1d512:	push   r14
   1d514:	xor    r15d,r15d
   1d517:	push   r13
   1d519:	push   r12
   1d51b:	xor    r13d,r13d
   1d51e:	push   rbp
   1d51f:	push   rbx
   1d520:	lea    rbx,[rip+0x14c0d]        # 32134 <__PRETTY_FUNCTION__.10016+0x10a4>
   1d527:	mov    r12d,edi
   1d52a:	mov    rbp,rsi
   1d52d:	xor    r14d,r14d
   1d530:	sub    rsp,0x68
   1d534:	mov    rax,QWORD PTR fs:0x28
   1d53d:	mov    QWORD PTR [rsp+0x58],rax
   1d542:	xor    eax,eax
   1d544:	mov    BYTE PTR [rsp+0xa],0x0
   1d549:	mov    BYTE PTR [rsp+0x9],0x0
   1d54e:	mov    BYTE PTR [rsp+0xb],0x0
   1d553:	mov    BYTE PTR [rsp+0x8],0x0
   1d558:	mov    BYTE PTR [rsp+0x4],0x0
   1d55d:	mov    DWORD PTR [rsp+0x1c],0x0
   1d565:	mov    DWORD PTR [rsp+0x18],0x0
   1d56d:	mov    DWORD PTR [rsp+0x14],0x0
   1d575:	mov    DWORD PTR [rsp+0x10],0x0
   1d57d:	mov    DWORD PTR [rsp+0xc],0x100
   1d585:	nop    DWORD PTR [rax]
   1d588:	lea    r8,[rip+0xc93b]        # 29eca <__PRETTY_FUNCTION__.10113+0x2b2>
   1d58f:	lea    rcx,[rip+0x21f10a]        # 23c6a0 <opts.8833>
   1d596:	lea    rdx,[rip+0x14707]        # 31ca4 <__PRETTY_FUNCTION__.10016+0xc14>
   1d59d:	xor    r9d,r9d
   1d5a0:	mov    rsi,rbp
   1d5a3:	mov    edi,r12d
   1d5a6:	call   ebe0 <def_getopt>
   1d5ab:	cmp    eax,0xffffffff
   1d5ae:	je     1d6b8 <main_sched_credit+0x1a8>
   1d5b4:	sub    eax,0x63
   1d5b7:	cmp    eax,0x14
   1d5ba:	ja     1d588 <main_sched_credit+0x78>
   1d5bc:	movsxd rax,DWORD PTR [rbx+rax*4]
   1d5c0:	add    rax,rbx
   1d5c3:	jmp    rax
   1d5c5:	nop    DWORD PTR [rax]
   1d5c8:	mov    r15d,0x1
   1d5ce:	jmp    1d588 <main_sched_credit+0x78>
   1d5d0:	mov    rax,QWORD PTR [rip+0x21d9e9]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d5d7:	mov    edx,0xa
   1d5dc:	xor    esi,esi
   1d5de:	mov    rdi,QWORD PTR [rax]
   1d5e1:	call   b7b0 <strtol@plt>
   1d5e6:	mov    BYTE PTR [rsp+0x9],0x1
   1d5eb:	mov    DWORD PTR [rsp+0x18],eax
   1d5ef:	jmp    1d588 <main_sched_credit+0x78>
   1d5f1:	nop    DWORD PTR [rax+0x0]
   1d5f8:	mov    rax,QWORD PTR [rip+0x21d9c1]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d5ff:	mov    r13,QWORD PTR [rax]
   1d602:	jmp    1d588 <main_sched_credit+0x78>
   1d604:	nop    DWORD PTR [rax+0x0]
   1d608:	mov    rax,QWORD PTR [rip+0x21d9b1]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d60f:	mov    edx,0xa
   1d614:	xor    esi,esi
   1d616:	mov    rdi,QWORD PTR [rax]
   1d619:	call   b7b0 <strtol@plt>
   1d61e:	mov    BYTE PTR [rsp+0xa],0x1
   1d623:	mov    DWORD PTR [rsp+0x1c],eax
   1d627:	jmp    1d588 <main_sched_credit+0x78>
   1d62c:	nop    DWORD PTR [rax+0x0]
   1d630:	mov    rax,QWORD PTR [rip+0x21d989]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d637:	mov    r14,QWORD PTR [rax]
   1d63a:	jmp    1d588 <main_sched_credit+0x78>
   1d63f:	nop
   1d640:	mov    rax,QWORD PTR [rip+0x21d979]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d647:	mov    edx,0xa
   1d64c:	xor    esi,esi
   1d64e:	mov    rdi,QWORD PTR [rax]
   1d651:	call   b7b0 <strtol@plt>
   1d656:	mov    BYTE PTR [rsp+0x8],0x1
   1d65b:	mov    DWORD PTR [rsp+0x10],eax
   1d65f:	jmp    1d588 <main_sched_credit+0x78>
   1d664:	nop    DWORD PTR [rax+0x0]
   1d668:	mov    rax,QWORD PTR [rip+0x21d951]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d66f:	mov    edx,0xa
   1d674:	xor    esi,esi
   1d676:	mov    rdi,QWORD PTR [rax]
   1d679:	call   b7b0 <strtol@plt>
   1d67e:	mov    BYTE PTR [rsp+0x4],0x1
   1d683:	mov    DWORD PTR [rsp+0xc],eax
   1d687:	jmp    1d588 <main_sched_credit+0x78>
   1d68c:	nop    DWORD PTR [rax+0x0]
   1d690:	mov    rax,QWORD PTR [rip+0x21d929]        # 23afc0 <optarg@GLIBC_2.2.5>
   1d697:	mov    edx,0xa
   1d69c:	xor    esi,esi
   1d69e:	mov    rdi,QWORD PTR [rax]
   1d6a1:	call   b7b0 <strtol@plt>
   1d6a6:	mov    BYTE PTR [rsp+0xb],0x1
   1d6ab:	mov    DWORD PTR [rsp+0x14],eax
   1d6af:	jmp    1d588 <main_sched_credit+0x78>
   1d6b4:	nop    DWORD PTR [rax+0x0]
   1d6b8:	test   r13,r13
   1d6bb:	jne    1d730 <main_sched_credit+0x220>
   1d6bd:	test   r15b,r15b
   1d6c0:	jne    1d730 <main_sched_credit+0x220>
   1d6c2:	test   r14,r14
   1d6c5:	je     1d99e <main_sched_credit+0x48e>
   1d6cb:	movzx  eax,BYTE PTR [rsp+0x9]
   1d6d0:	or     al,BYTE PTR [rsp+0xa]
   1d6d4:	jne    1d8e8 <main_sched_credit+0x3d8>
   1d6da:	cmp    BYTE PTR [rsp+0xb],0x0
   1d6df:	jne    1d8e8 <main_sched_credit+0x3d8>
   1d6e5:	test   r14,r14
   1d6e8:	je     1d800 <main_sched_credit+0x2f0>
   1d6ee:	mov    rdi,r14
   1d6f1:	call   eb40 <find_domain>
   1d6f6:	cmp    BYTE PTR [rsp+0x4],0x0
   1d6fb:	mov    ebp,eax
   1d6fd:	jne    1d890 <main_sched_credit+0x380>
   1d703:	cmp    BYTE PTR [rsp+0x8],0x0
   1d708:	jne    1d890 <main_sched_credit+0x380>
   1d70e:	call   1cfe0 <sched_credit2_domain_output.part.3>
   1d713:	mov    edi,ebp
   1d715:	call   1d020 <sched_credit_domain_output>
   1d71a:	test   eax,eax
   1d71c:	setne  al
   1d71f:	movzx  eax,al
   1d722:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d727:	nop    WORD PTR [rax+rax*1+0x0]
   1d730:	test   r14,r14
   1d733:	jne    1d7b0 <main_sched_credit+0x2a0>
   1d735:	movzx  eax,BYTE PTR [rsp+0x4]
   1d73a:	or     al,BYTE PTR [rsp+0x8]
   1d73e:	jne    1d7b0 <main_sched_credit+0x2a0>
   1d740:	test   r15b,r15b
   1d743:	je     1d6cb <main_sched_credit+0x1bb>
   1d745:	test   r13,r13
   1d748:	mov    DWORD PTR [rsp+0x2c],0x0
   1d750:	je     1d828 <main_sched_credit+0x318>
   1d756:	lea    rbx,[rip+0x21f703]        # 23ce60 <ctx>
   1d75d:	lea    rdx,[rsp+0x2c]
   1d762:	xor    ecx,ecx
   1d764:	mov    rsi,r13
   1d767:	mov    rdi,QWORD PTR [rbx]
   1d76a:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1d76f:	test   eax,eax
   1d771:	jne    1d787 <main_sched_credit+0x277>
   1d773:	mov    esi,DWORD PTR [rsp+0x2c]
   1d777:	mov    rdi,QWORD PTR [rbx]
   1d77a:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1d77f:	test   eax,eax
   1d781:	jne    1d970 <main_sched_credit+0x460>
   1d787:	mov    rax,QWORD PTR [rip+0x21d862]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d78e:	lea    rdx,[rip+0x13a9d]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1d795:	mov    rcx,r13
   1d798:	mov    esi,0x1
   1d79d:	mov    rdi,QWORD PTR [rax]
   1d7a0:	xor    eax,eax
   1d7a2:	call   c1e0 <__fprintf_chk@plt>
   1d7a7:	mov    eax,0x1
   1d7ac:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d7ae:	xchg   ax,ax
   1d7b0:	mov    rax,QWORD PTR [rip+0x21d839]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d7b7:	lea    rdi,[rip+0x14772]        # 31f30 <__PRETTY_FUNCTION__.10016+0xea0>
   1d7be:	mov    edx,0x47
   1d7c3:	mov    esi,0x1
   1d7c8:	mov    rcx,QWORD PTR [rax]
   1d7cb:	call   c1b0 <fwrite@plt>
   1d7d0:	mov    eax,0x1
   1d7d5:	mov    rcx,QWORD PTR [rsp+0x58]
   1d7da:	xor    rcx,QWORD PTR fs:0x28
   1d7e3:	jne    1d9ee <main_sched_credit+0x4de>
   1d7e9:	add    rsp,0x68
   1d7ed:	pop    rbx
   1d7ee:	pop    rbp
   1d7ef:	pop    r12
   1d7f1:	pop    r13
   1d7f3:	pop    r14
   1d7f5:	pop    r15
   1d7f7:	ret    
   1d7f8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d800:	lea    rdx,[rip+0xfffffffffffff689]        # 1ce90 <sched_credit_pool_output>
   1d807:	lea    rsi,[rip+0xfffffffffffff812]        # 1d020 <sched_credit_domain_output>
   1d80e:	mov    rcx,r13
   1d811:	mov    edi,0x5
   1d816:	call   1cb60 <sched_domain_output>
   1d81b:	test   eax,eax
   1d81d:	setne  al
   1d820:	movzx  eax,al
   1d823:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d825:	nop    DWORD PTR [rax]
   1d828:	xor    edi,edi
   1d82a:	cmp    BYTE PTR [rsp+0xb],0x0
   1d82f:	jne    1d912 <main_sched_credit+0x402>
   1d835:	cmp    BYTE PTR [rsp+0x9],0x0
   1d83a:	jne    1d912 <main_sched_credit+0x402>
   1d840:	cmp    BYTE PTR [rsp+0xa],0x0
   1d845:	je     1d9da <main_sched_credit+0x4ca>
   1d84b:	lea    rbx,[rsp+0x30]
   1d850:	mov    rsi,rbx
   1d853:	call   1ce40 <sched_credit_params_get>
   1d858:	test   eax,eax
   1d85a:	jne    1d7a7 <main_sched_credit+0x297>
   1d860:	mov    eax,DWORD PTR [rsp+0x1c]
   1d864:	mov    DWORD PTR [rsp+0x38],eax
   1d868:	lea    rax,[rip+0x21f5f1]        # 23ce60 <ctx>
   1d86f:	mov    esi,DWORD PTR [rsp+0x2c]
   1d873:	mov    rdx,rbx
   1d876:	mov    rdi,QWORD PTR [rax]
   1d879:	call   c140 <libxl_sched_credit_params_set@plt>
   1d87e:	test   eax,eax
   1d880:	jne    1d979 <main_sched_credit+0x469>
   1d886:	xor    eax,eax
   1d888:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d88d:	nop    DWORD PTR [rax]
   1d890:	lea    rbx,[rsp+0x30]
   1d895:	mov    rdi,rbx
   1d898:	call   c060 <libxl_domain_sched_params_init@plt>
   1d89d:	cmp    BYTE PTR [rsp+0x4],0x0
   1d8a2:	mov    DWORD PTR [rsp+0x30],0x5
   1d8aa:	jne    1d955 <main_sched_credit+0x445>
   1d8b0:	mov    eax,DWORD PTR [rsp+0x10]
   1d8b4:	mov    DWORD PTR [rsp+0x38],eax
   1d8b8:	mov    rsi,rbx
   1d8bb:	mov    edi,ebp
   1d8bd:	call   1d300 <sched_domain_set>
   1d8c2:	mov    rdi,rbx
   1d8c5:	mov    DWORD PTR [rsp+0x4],eax
   1d8c9:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1d8ce:	mov    eax,DWORD PTR [rsp+0x4]
   1d8d2:	mov    edx,0x1
   1d8d7:	test   eax,eax
   1d8d9:	cmovne eax,edx
   1d8dc:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d8e1:	nop    DWORD PTR [rax+0x0]
   1d8e8:	mov    rax,QWORD PTR [rip+0x21d701]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d8ef:	lea    rdi,[rip+0x14682]        # 31f78 <__PRETTY_FUNCTION__.10016+0xee8>
   1d8f6:	mov    edx,0x3a
   1d8fb:	mov    esi,0x1
   1d900:	mov    rcx,QWORD PTR [rax]
   1d903:	call   c1b0 <fwrite@plt>
   1d908:	mov    eax,0x1
   1d90d:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d912:	lea    rbx,[rsp+0x30]
   1d917:	mov    rsi,rbx
   1d91a:	call   1ce40 <sched_credit_params_get>
   1d91f:	test   eax,eax
   1d921:	jne    1d7a7 <main_sched_credit+0x297>
   1d927:	cmp    BYTE PTR [rsp+0xb],0x0
   1d92c:	je     1d93d <main_sched_credit+0x42d>
   1d92e:	cmp    BYTE PTR [rsp+0x9],0x0
   1d933:	mov    eax,DWORD PTR [rsp+0x14]
   1d937:	mov    DWORD PTR [rsp+0x30],eax
   1d93b:	je     1d945 <main_sched_credit+0x435>
   1d93d:	mov    eax,DWORD PTR [rsp+0x18]
   1d941:	mov    DWORD PTR [rsp+0x34],eax
   1d945:	cmp    BYTE PTR [rsp+0xa],0x0
   1d94a:	je     1d868 <main_sched_credit+0x358>
   1d950:	jmp    1d860 <main_sched_credit+0x350>
   1d955:	cmp    BYTE PTR [rsp+0x8],0x0
   1d95a:	mov    eax,DWORD PTR [rsp+0xc]
   1d95e:	mov    DWORD PTR [rsp+0x34],eax
   1d962:	je     1d8b8 <main_sched_credit+0x3a8>
   1d968:	jmp    1d8b0 <main_sched_credit+0x3a0>
   1d96d:	nop    DWORD PTR [rax]
   1d970:	mov    edi,DWORD PTR [rsp+0x2c]
   1d974:	jmp    1d82a <main_sched_credit+0x31a>
   1d979:	mov    rax,QWORD PTR [rip+0x21d670]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d980:	lea    rdi,[rip+0x14631]        # 31fb8 <__PRETTY_FUNCTION__.10016+0xf28>
   1d987:	mov    edx,0x26
   1d98c:	mov    esi,0x1
   1d991:	mov    rcx,QWORD PTR [rax]
   1d994:	call   c1b0 <fwrite@plt>
   1d999:	jmp    1d7a7 <main_sched_credit+0x297>
   1d99e:	cmp    BYTE PTR [rsp+0x4],0x0
   1d9a3:	jne    1d9b0 <main_sched_credit+0x4a0>
   1d9a5:	cmp    BYTE PTR [rsp+0x8],0x0
   1d9aa:	je     1d6cb <main_sched_credit+0x1bb>
   1d9b0:	mov    rax,QWORD PTR [rip+0x21d639]        # 23aff0 <stderr@GLIBC_2.2.5>
   1d9b7:	lea    rdi,[rip+0x142f7]        # 31cb5 <__PRETTY_FUNCTION__.10016+0xc25>
   1d9be:	mov    edx,0x17
   1d9c3:	mov    esi,0x1
   1d9c8:	mov    rcx,QWORD PTR [rax]
   1d9cb:	call   c1b0 <fwrite@plt>
   1d9d0:	mov    eax,0x1
   1d9d5:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d9da:	call   1ce90 <sched_credit_pool_output>
   1d9df:	test   eax,eax
   1d9e1:	jne    1d7a7 <main_sched_credit+0x297>
   1d9e7:	xor    eax,eax
   1d9e9:	jmp    1d7d5 <main_sched_credit+0x2c5>
   1d9ee:	call   b130 <__stack_chk_fail@plt>
   1d9f3:	nop    DWORD PTR [rax]
   1d9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001da00 <main_sched_credit2>:
   1da00:	push   r15
   1da02:	push   r14
   1da04:	xor    r15d,r15d
   1da07:	push   r13
   1da09:	push   r12
   1da0b:	xor    r13d,r13d
   1da0e:	push   rbp
   1da0f:	push   rbx
   1da10:	lea    rbx,[rip+0x14771]        # 32188 <__PRETTY_FUNCTION__.10016+0x10f8>
   1da17:	mov    r12d,edi
   1da1a:	mov    rbp,rsi
   1da1d:	xor    r14d,r14d
   1da20:	sub    rsp,0x68
   1da24:	mov    rax,QWORD PTR fs:0x28
   1da2d:	mov    QWORD PTR [rsp+0x58],rax
   1da32:	xor    eax,eax
   1da34:	mov    BYTE PTR [rsp+0xc],0x0
   1da39:	mov    BYTE PTR [rsp+0x13],0x0
   1da3e:	mov    BYTE PTR [rsp+0x12],0x0
   1da43:	mov    DWORD PTR [rsp+0x1c],0x0
   1da4b:	mov    DWORD PTR [rsp+0x18],0x100
   1da53:	mov    DWORD PTR [rsp+0x14],0x0
   1da5b:	nop    DWORD PTR [rax+rax*1+0x0]
   1da60:	lea    r8,[rip+0xc470]        # 29ed7 <__PRETTY_FUNCTION__.10113+0x2bf>
   1da67:	lea    rcx,[rip+0x21eb32]        # 23c5a0 <opts.8865>
   1da6e:	lea    rdx,[rip+0x14258]        # 31ccd <__PRETTY_FUNCTION__.10016+0xc3d>
   1da75:	xor    r9d,r9d
   1da78:	mov    rsi,rbp
   1da7b:	mov    edi,r12d
   1da7e:	call   ebe0 <def_getopt>
   1da83:	cmp    eax,0xffffffff
   1da86:	je     1db50 <main_sched_credit2+0x150>
   1da8c:	sub    eax,0x63
   1da8f:	cmp    eax,0x14
   1da92:	ja     1da60 <main_sched_credit2+0x60>
   1da94:	movsxd rax,DWORD PTR [rbx+rax*4]
   1da98:	add    rax,rbx
   1da9b:	jmp    rax
   1da9d:	nop    DWORD PTR [rax]
   1daa0:	mov    BYTE PTR [rsp+0x12],0x1
   1daa5:	jmp    1da60 <main_sched_credit2+0x60>
   1daa7:	nop    WORD PTR [rax+rax*1+0x0]
   1dab0:	mov    rax,QWORD PTR [rip+0x21d509]        # 23afc0 <optarg@GLIBC_2.2.5>
   1dab7:	mov    edx,0xa
   1dabc:	xor    esi,esi
   1dabe:	mov    rdi,QWORD PTR [rax]
   1dac1:	call   b7b0 <strtol@plt>
   1dac6:	mov    BYTE PTR [rsp+0x13],0x1
   1dacb:	mov    DWORD PTR [rsp+0x14],eax
   1dacf:	jmp    1da60 <main_sched_credit2+0x60>
   1dad1:	nop    DWORD PTR [rax+0x0]
   1dad8:	mov    rax,QWORD PTR [rip+0x21d4e1]        # 23afc0 <optarg@GLIBC_2.2.5>
   1dadf:	mov    r13,QWORD PTR [rax]
   1dae2:	jmp    1da60 <main_sched_credit2+0x60>
   1dae7:	nop    WORD PTR [rax+rax*1+0x0]
   1daf0:	mov    rax,QWORD PTR [rip+0x21d4c9]        # 23afc0 <optarg@GLIBC_2.2.5>
   1daf7:	mov    r14,QWORD PTR [rax]
   1dafa:	jmp    1da60 <main_sched_credit2+0x60>
   1daff:	nop
   1db00:	mov    rax,QWORD PTR [rip+0x21d4b9]        # 23afc0 <optarg@GLIBC_2.2.5>
   1db07:	mov    edx,0xa
   1db0c:	xor    esi,esi
   1db0e:	mov    rdi,QWORD PTR [rax]
   1db11:	call   b7b0 <strtol@plt>
   1db16:	mov    BYTE PTR [rsp+0xc],0x1
   1db1b:	mov    DWORD PTR [rsp+0x1c],eax
   1db1f:	jmp    1da60 <main_sched_credit2+0x60>
   1db24:	nop    DWORD PTR [rax+0x0]
   1db28:	mov    rax,QWORD PTR [rip+0x21d491]        # 23afc0 <optarg@GLIBC_2.2.5>
   1db2f:	mov    edx,0xa
   1db34:	xor    esi,esi
   1db36:	mov    r15d,0x1
   1db3c:	mov    rdi,QWORD PTR [rax]
   1db3f:	call   b7b0 <strtol@plt>
   1db44:	mov    DWORD PTR [rsp+0x18],eax
   1db48:	jmp    1da60 <main_sched_credit2+0x60>
   1db4d:	nop    DWORD PTR [rax]
   1db50:	test   r13,r13
   1db53:	je     1dbf0 <main_sched_credit2+0x1f0>
   1db59:	test   r14,r14
   1db5c:	jne    1dba0 <main_sched_credit2+0x1a0>
   1db5e:	movzx  eax,BYTE PTR [rsp+0xc]
   1db63:	or     al,r15b
   1db66:	jne    1dba0 <main_sched_credit2+0x1a0>
   1db68:	cmp    BYTE PTR [rsp+0x12],0x0
   1db6d:	jne    1dcf0 <main_sched_credit2+0x2f0>
   1db73:	lea    rdx,[rip+0xfffffffffffff206]        # 1cd80 <sched_credit2_pool_output>
   1db7a:	lea    rsi,[rip+0xfffffffffffff56f]        # 1d0f0 <sched_credit2_domain_output>
   1db81:	mov    rcx,r13
   1db84:	mov    edi,0x6
   1db89:	call   1cb60 <sched_domain_output>
   1db8e:	test   eax,eax
   1db90:	setne  al
   1db93:	movzx  eax,al
   1db96:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1db98:	nop    DWORD PTR [rax+rax*1+0x0]
   1dba0:	mov    rax,QWORD PTR [rip+0x21d449]        # 23aff0 <stderr@GLIBC_2.2.5>
   1dba7:	lea    rdi,[rip+0x14432]        # 31fe0 <__PRETTY_FUNCTION__.10016+0xf50>
   1dbae:	mov    edx,0x38
   1dbb3:	mov    esi,0x1
   1dbb8:	mov    rcx,QWORD PTR [rax]
   1dbbb:	call   c1b0 <fwrite@plt>
   1dbc0:	mov    eax,0x1
   1dbc5:	mov    rcx,QWORD PTR [rsp+0x58]
   1dbca:	xor    rcx,QWORD PTR fs:0x28
   1dbd3:	jne    1dd8a <main_sched_credit2+0x38a>
   1dbd9:	add    rsp,0x68
   1dbdd:	pop    rbx
   1dbde:	pop    rbp
   1dbdf:	pop    r12
   1dbe1:	pop    r13
   1dbe3:	pop    r14
   1dbe5:	pop    r15
   1dbe7:	ret    
   1dbe8:	nop    DWORD PTR [rax+rax*1+0x0]
   1dbf0:	test   r14,r14
   1dbf3:	je     1dd96 <main_sched_credit2+0x396>
   1dbf9:	cmp    BYTE PTR [rsp+0x12],0x0
   1dbfe:	je     1dc58 <main_sched_credit2+0x258>
   1dc00:	mov    DWORD PTR [rsp+0x30],0x0
   1dc08:	xor    esi,esi
   1dc0a:	cmp    BYTE PTR [rsp+0x13],0x0
   1dc0f:	jne    1dc28 <main_sched_credit2+0x228>
   1dc11:	mov    edi,esi
   1dc13:	call   1cd80 <sched_credit2_pool_output>
   1dc18:	test   eax,eax
   1dc1a:	je     1dc4c <main_sched_credit2+0x24c>
   1dc1c:	mov    eax,0x1
   1dc21:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1dc23:	nop    DWORD PTR [rax+rax*1+0x0]
   1dc28:	mov    eax,DWORD PTR [rsp+0x14]
   1dc2c:	lea    rdx,[rsp+0x2c]
   1dc31:	mov    DWORD PTR [rsp+0x2c],eax
   1dc35:	lea    rax,[rip+0x21f224]        # 23ce60 <ctx>
   1dc3c:	mov    rdi,QWORD PTR [rax]
   1dc3f:	call   b760 <libxl_sched_credit2_params_set@plt>
   1dc44:	test   eax,eax
   1dc46:	jne    1dd37 <main_sched_credit2+0x337>
   1dc4c:	xor    eax,eax
   1dc4e:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1dc53:	nop    DWORD PTR [rax+rax*1+0x0]
   1dc58:	mov    rdi,r14
   1dc5b:	call   eb40 <find_domain>
   1dc60:	test   r15b,r15b
   1dc63:	mov    ebp,eax
   1dc65:	jne    1dc90 <main_sched_credit2+0x290>
   1dc67:	cmp    BYTE PTR [rsp+0xc],0x0
   1dc6c:	jne    1dc90 <main_sched_credit2+0x290>
   1dc6e:	call   1cfe0 <sched_credit2_domain_output.part.3>
   1dc73:	mov    edi,ebp
   1dc75:	call   1d0f0 <sched_credit2_domain_output>
   1dc7a:	test   eax,eax
   1dc7c:	setne  al
   1dc7f:	movzx  eax,al
   1dc82:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1dc87:	nop    WORD PTR [rax+rax*1+0x0]
   1dc90:	lea    rbx,[rsp+0x30]
   1dc95:	mov    rdi,rbx
   1dc98:	call   c060 <libxl_domain_sched_params_init@plt>
   1dc9d:	test   r15b,r15b
   1dca0:	mov    DWORD PTR [rsp+0x30],0x6
   1dca8:	jne    1dcdb <main_sched_credit2+0x2db>
   1dcaa:	mov    eax,DWORD PTR [rsp+0x1c]
   1dcae:	mov    DWORD PTR [rsp+0x38],eax
   1dcb2:	mov    rsi,rbx
   1dcb5:	mov    edi,ebp
   1dcb7:	call   1d300 <sched_domain_set>
   1dcbc:	mov    rdi,rbx
   1dcbf:	mov    DWORD PTR [rsp+0xc],eax
   1dcc3:	call   b440 <libxl_domain_sched_params_dispose@plt>
   1dcc8:	mov    eax,DWORD PTR [rsp+0xc]
   1dccc:	mov    edx,0x1
   1dcd1:	test   eax,eax
   1dcd3:	cmovne eax,edx
   1dcd6:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1dcdb:	cmp    BYTE PTR [rsp+0xc],0x0
   1dce0:	mov    eax,DWORD PTR [rsp+0x18]
   1dce4:	mov    DWORD PTR [rsp+0x34],eax
   1dce8:	je     1dcb2 <main_sched_credit2+0x2b2>
   1dcea:	jmp    1dcaa <main_sched_credit2+0x2aa>
   1dcec:	nop    DWORD PTR [rax+0x0]
   1dcf0:	test   r13,r13
   1dcf3:	mov    DWORD PTR [rsp+0x30],0x0
   1dcfb:	je     1dd8f <main_sched_credit2+0x38f>
   1dd01:	lea    rbx,[rip+0x21f158]        # 23ce60 <ctx>
   1dd08:	lea    rdx,[rsp+0x30]
   1dd0d:	xor    ecx,ecx
   1dd0f:	mov    rsi,r13
   1dd12:	mov    rdi,QWORD PTR [rbx]
   1dd15:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1dd1a:	test   eax,eax
   1dd1c:	jne    1dd60 <main_sched_credit2+0x360>
   1dd1e:	mov    esi,DWORD PTR [rsp+0x30]
   1dd22:	mov    rdi,QWORD PTR [rbx]
   1dd25:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1dd2a:	test   eax,eax
   1dd2c:	je     1dd60 <main_sched_credit2+0x360>
   1dd2e:	mov    esi,DWORD PTR [rsp+0x30]
   1dd32:	jmp    1dc0a <main_sched_credit2+0x20a>
   1dd37:	mov    rax,QWORD PTR [rip+0x21d2b2]        # 23aff0 <stderr@GLIBC_2.2.5>
   1dd3e:	lea    rdi,[rip+0x142db]        # 32020 <__PRETTY_FUNCTION__.10016+0xf90>
   1dd45:	mov    edx,0x27
   1dd4a:	mov    esi,0x1
   1dd4f:	mov    rcx,QWORD PTR [rax]
   1dd52:	call   c1b0 <fwrite@plt>
   1dd57:	jmp    1dc1c <main_sched_credit2+0x21c>
   1dd5c:	nop    DWORD PTR [rax+0x0]
   1dd60:	mov    rax,QWORD PTR [rip+0x21d289]        # 23aff0 <stderr@GLIBC_2.2.5>
   1dd67:	lea    rdx,[rip+0x134c4]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1dd6e:	mov    rcx,r13
   1dd71:	mov    esi,0x1
   1dd76:	mov    rdi,QWORD PTR [rax]
   1dd79:	xor    eax,eax
   1dd7b:	call   c1e0 <__fprintf_chk@plt>
   1dd80:	mov    eax,0x1
   1dd85:	jmp    1dbc5 <main_sched_credit2+0x1c5>
   1dd8a:	call   b130 <__stack_chk_fail@plt>
   1dd8f:	xor    esi,esi
   1dd91:	jmp    1dc0a <main_sched_credit2+0x20a>
   1dd96:	test   r15b,r15b
   1dd99:	jne    1dda6 <main_sched_credit2+0x3a6>
   1dd9b:	cmp    BYTE PTR [rsp+0xc],0x0
   1dda0:	je     1db68 <main_sched_credit2+0x168>
   1dda6:	mov    rax,QWORD PTR [rip+0x21d243]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ddad:	lea    rdi,[rip+0x13f01]        # 31cb5 <__PRETTY_FUNCTION__.10016+0xc25>
   1ddb4:	mov    edx,0x17
   1ddb9:	mov    esi,0x1
   1ddbe:	mov    rcx,QWORD PTR [rax]
   1ddc1:	call   c1b0 <fwrite@plt>
   1ddc6:	mov    eax,0x1
   1ddcb:	jmp    1dbc5 <main_sched_credit2+0x1c5>

000000000001ddd0 <main_sched_rtds>:
   1ddd0:	push   r15
   1ddd2:	push   r14
   1ddd4:	xor    r15d,r15d
   1ddd7:	push   r13
   1ddd9:	push   r12
   1dddb:	mov    r12d,edi
   1ddde:	push   rbp
   1dddf:	push   rbx
   1dde0:	mov    edi,0x4
   1dde5:	mov    rbp,rsi
   1dde8:	lea    rbx,[rip+0x143ed]        # 321dc <__PRETTY_FUNCTION__.10016+0x114c>
   1ddef:	xor    r13d,r13d
   1ddf2:	sub    rsp,0x98
   1ddf9:	xor    r14d,r14d
   1ddfc:	mov    rax,QWORD PTR fs:0x28
   1de05:	mov    QWORD PTR [rsp+0x88],rax
   1de0d:	xor    eax,eax
   1de0f:	call   e9a0 <xmalloc>
   1de14:	mov    edi,0x4
   1de19:	mov    QWORD PTR [rsp+0x50],rax
   1de1e:	call   e9a0 <xmalloc>
   1de23:	mov    edi,0x4
   1de28:	mov    QWORD PTR [rsp+0x10],rax
   1de2d:	call   e9a0 <xmalloc>
   1de32:	mov    edi,0x1
   1de37:	mov    QWORD PTR [rsp+0x8],rax
   1de3c:	call   e9a0 <xmalloc>
   1de41:	mov    BYTE PTR [rsp+0x5f],0x0
   1de46:	mov    QWORD PTR [rsp+0x18],rax
   1de4b:	mov    BYTE PTR [rsp+0x5e],0x0
   1de50:	mov    BYTE PTR [rsp+0x5d],0x0
   1de55:	mov    BYTE PTR [rsp+0x5c],0x0
   1de5a:	mov    BYTE PTR [rsp+0x4f],0x0
   1de5f:	mov    DWORD PTR [rsp+0x48],0x0
   1de67:	mov    DWORD PTR [rsp+0x20],0x1
   1de6f:	mov    DWORD PTR [rsp+0x28],0x1
   1de77:	mov    DWORD PTR [rsp+0x34],0x1
   1de7f:	mov    DWORD PTR [rsp+0x58],0x1
   1de87:	mov    QWORD PTR [rsp+0x38],0x0
   1de90:	mov    QWORD PTR [rsp+0x40],0x0
   1de99:	nop    DWORD PTR [rax+0x0]
   1dea0:	lea    r8,[rip+0xc03e]        # 29ee5 <__PRETTY_FUNCTION__.10113+0x2cd>
   1dea7:	lea    rcx,[rip+0x21e5f2]        # 23c4a0 <opts.8907>
   1deae:	lea    rdx,[rip+0x13e39]        # 31cee <__PRETTY_FUNCTION__.10016+0xc5e>
   1deb5:	xor    r9d,r9d
   1deb8:	mov    rsi,rbp
   1debb:	mov    edi,r12d
   1debe:	call   ebe0 <def_getopt>
   1dec3:	cmp    eax,0xffffffff
   1dec6:	je     1e078 <main_sched_rtds+0x2a8>
   1decc:	sub    eax,0x62
   1decf:	cmp    eax,0x14
   1ded2:	ja     1dea0 <main_sched_rtds+0xd0>
   1ded4:	movsxd rax,DWORD PTR [rbx+rax*4]
   1ded8:	add    rax,rbx
   1dedb:	jmp    rax
   1dedd:	nop    DWORD PTR [rax]
   1dee0:	mov    rax,QWORD PTR [rip+0x21d0d9]        # 23afc0 <optarg@GLIBC_2.2.5>
   1dee7:	lea    rdi,[rip+0x1020d]        # 2e0fb <__PRETTY_FUNCTION__.10113+0x44e3>
   1deee:	mov    ecx,0x4
   1def3:	mov    r8,QWORD PTR [rax]
   1def6:	mov    rsi,r8
   1def9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1defb:	seta   al
   1defe:	sbb    al,0x0
   1df00:	test   al,al
   1df02:	je     1e128 <main_sched_rtds+0x358>
   1df08:	mov    edx,DWORD PTR [rsp+0x48]
   1df0c:	cmp    DWORD PTR [rsp+0x58],edx
   1df10:	jle    1e3e0 <main_sched_rtds+0x610>
   1df16:	mov    edx,0xa
   1df1b:	xor    esi,esi
   1df1d:	mov    rdi,r8
   1df20:	call   b7b0 <strtol@plt>
   1df25:	movsxd rdx,DWORD PTR [rsp+0x48]
   1df2a:	mov    rsi,QWORD PTR [rsp+0x50]
   1df2f:	mov    BYTE PTR [rsp+0x5e],0x1
   1df34:	mov    DWORD PTR [rsi+rdx*4],eax
   1df37:	lea    eax,[rdx+0x1]
   1df3a:	mov    DWORD PTR [rsp+0x48],eax
   1df3e:	jmp    1dea0 <main_sched_rtds+0xd0>
   1df43:	nop    DWORD PTR [rax+rax*1+0x0]
   1df48:	cmp    DWORD PTR [rsp+0x34],r14d
   1df4d:	jle    1e138 <main_sched_rtds+0x368>
   1df53:	mov    rax,QWORD PTR [rip+0x21d066]        # 23afc0 <optarg@GLIBC_2.2.5>
   1df5a:	mov    edx,0xa
   1df5f:	xor    esi,esi
   1df61:	mov    rdi,QWORD PTR [rax]
   1df64:	call   b7b0 <strtol@plt>
   1df69:	mov    rcx,QWORD PTR [rsp+0x10]
   1df6e:	movsxd rdx,r14d
   1df71:	mov    BYTE PTR [rsp+0x4f],0x1
   1df76:	add    r14d,0x1
   1df7a:	mov    DWORD PTR [rcx+rdx*4],eax
   1df7d:	jmp    1dea0 <main_sched_rtds+0xd0>
   1df82:	nop    WORD PTR [rax+rax*1+0x0]
   1df88:	cmp    DWORD PTR [rsp+0x20],r15d
   1df8d:	jle    1e158 <main_sched_rtds+0x388>
   1df93:	mov    rax,QWORD PTR [rip+0x21d026]        # 23afc0 <optarg@GLIBC_2.2.5>
   1df9a:	lea    rdi,[rip+0x168d5]        # 34876 <savefileheader_magic+0x3d6>
   1dfa1:	mov    ecx,0x2
   1dfa6:	mov    r8,QWORD PTR [rax]
   1dfa9:	mov    rsi,r8
   1dfac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1dfae:	seta   al
   1dfb1:	sbb    al,0x0
   1dfb3:	test   al,al
   1dfb5:	je     1dfd5 <main_sched_rtds+0x205>
   1dfb7:	lea    rdi,[rip+0xb85d]        # 2981b <_IO_stdin_used+0xdb>
   1dfbe:	mov    ecx,0x2
   1dfc3:	mov    rsi,r8
   1dfc6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1dfc8:	seta   al
   1dfcb:	sbb    al,0x0
   1dfcd:	test   al,al
   1dfcf:	jne    1e445 <main_sched_rtds+0x675>
   1dfd5:	mov    edx,0xa
   1dfda:	xor    esi,esi
   1dfdc:	mov    rdi,r8
   1dfdf:	call   b7b0 <strtol@plt>
   1dfe4:	test   rax,rax
   1dfe7:	mov    rax,QWORD PTR [rsp+0x18]
   1dfec:	movsxd rdx,r15d
   1dfef:	mov    BYTE PTR [rsp+0x5d],0x1
   1dff4:	setne  BYTE PTR [rax+rdx*1]
   1dff8:	add    r15d,0x1
   1dffc:	jmp    1dea0 <main_sched_rtds+0xd0>
   1e001:	nop    DWORD PTR [rax+0x0]
   1e008:	mov    rax,QWORD PTR [rip+0x21cfb1]        # 23afc0 <optarg@GLIBC_2.2.5>
   1e00f:	mov    rax,QWORD PTR [rax]
   1e012:	mov    QWORD PTR [rsp+0x40],rax
   1e017:	jmp    1dea0 <main_sched_rtds+0xd0>
   1e01c:	nop    DWORD PTR [rax+0x0]
   1e020:	mov    rax,QWORD PTR [rip+0x21cf99]        # 23afc0 <optarg@GLIBC_2.2.5>
   1e027:	mov    rax,QWORD PTR [rax]
   1e02a:	mov    QWORD PTR [rsp+0x38],rax
   1e02f:	jmp    1dea0 <main_sched_rtds+0xd0>
   1e034:	nop    DWORD PTR [rax+0x0]
   1e038:	cmp    DWORD PTR [rsp+0x28],r13d
   1e03d:	jle    1e178 <main_sched_rtds+0x3a8>
   1e043:	mov    rax,QWORD PTR [rip+0x21cf76]        # 23afc0 <optarg@GLIBC_2.2.5>
   1e04a:	mov    edx,0xa
   1e04f:	xor    esi,esi
   1e051:	mov    rdi,QWORD PTR [rax]
   1e054:	call   b7b0 <strtol@plt>
   1e059:	mov    rcx,QWORD PTR [rsp+0x8]
   1e05e:	movsxd rdx,r13d
   1e061:	mov    BYTE PTR [rsp+0x5c],0x1
   1e066:	add    r13d,0x1
   1e06a:	mov    DWORD PTR [rcx+rdx*4],eax
   1e06d:	jmp    1dea0 <main_sched_rtds+0xd0>
   1e072:	nop    WORD PTR [rax+rax*1+0x0]
   1e078:	cmp    QWORD PTR [rsp+0x38],0x0
   1e07e:	je     1e210 <main_sched_rtds+0x440>
   1e084:	cmp    QWORD PTR [rsp+0x40],0x0
   1e08a:	jne    1e198 <main_sched_rtds+0x3c8>
   1e090:	cmp    BYTE PTR [rsp+0x4f],0x0
   1e095:	jne    1e198 <main_sched_rtds+0x3c8>
   1e09b:	movzx  eax,BYTE PTR [rsp+0x5c]
   1e0a0:	or     al,BYTE PTR [rsp+0x5d]
   1e0a4:	or     al,BYTE PTR [rsp+0x5e]
   1e0a8:	jne    1e198 <main_sched_rtds+0x3c8>
   1e0ae:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e0b3:	jne    1e198 <main_sched_rtds+0x3c8>
   1e0b9:	movzx  eax,BYTE PTR [rsp+0x5c]
   1e0be:	or     al,BYTE PTR [rsp+0x5d]
   1e0c2:	or     al,BYTE PTR [rsp+0x4f]
   1e0c6:	jne    1e46f <main_sched_rtds+0x69f>
   1e0cc:	cmp    BYTE PTR [rsp+0x5e],0x0
   1e0d1:	jne    1e46f <main_sched_rtds+0x69f>
   1e0d7:	cmp    DWORD PTR [rsp+0x48],r13d
   1e0dc:	jle    1e0e5 <main_sched_rtds+0x315>
   1e0de:	cmp    BYTE PTR [rsp+0x5c],0x0
   1e0e3:	jne    1e0fb <main_sched_rtds+0x32b>
   1e0e5:	cmp    DWORD PTR [rsp+0x48],r14d
   1e0ea:	jle    1e25e <main_sched_rtds+0x48e>
   1e0f0:	cmp    BYTE PTR [rsp+0x4f],0x0
   1e0f5:	je     1e25e <main_sched_rtds+0x48e>
   1e0fb:	mov    rax,QWORD PTR [rip+0x21ceee]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e102:	lea    rdi,[rip+0x13f3f]        # 32048 <__PRETTY_FUNCTION__.10016+0xfb8>
   1e109:	mov    edx,0x31
   1e10e:	mov    esi,0x1
   1e113:	mov    ebx,0x1
   1e118:	mov    rcx,QWORD PTR [rax]
   1e11b:	call   c1b0 <fwrite@plt>
   1e120:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e125:	nop    DWORD PTR [rax]
   1e128:	mov    BYTE PTR [rsp+0x5f],0x1
   1e12d:	jmp    1dea0 <main_sched_rtds+0xd0>
   1e132:	nop    WORD PTR [rax+rax*1+0x0]
   1e138:	shl    DWORD PTR [rsp+0x34],1
   1e13c:	mov    rdi,QWORD PTR [rsp+0x10]
   1e141:	movsxd rsi,DWORD PTR [rsp+0x34]
   1e146:	call   ea30 <xrealloc>
   1e14b:	mov    QWORD PTR [rsp+0x10],rax
   1e150:	jmp    1df53 <main_sched_rtds+0x183>
   1e155:	nop    DWORD PTR [rax]
   1e158:	shl    DWORD PTR [rsp+0x20],1
   1e15c:	mov    rdi,QWORD PTR [rsp+0x18]
   1e161:	movsxd rsi,DWORD PTR [rsp+0x20]
   1e166:	call   ea30 <xrealloc>
   1e16b:	mov    QWORD PTR [rsp+0x18],rax
   1e170:	jmp    1df93 <main_sched_rtds+0x1c3>
   1e175:	nop    DWORD PTR [rax]
   1e178:	shl    DWORD PTR [rsp+0x28],1
   1e17c:	mov    rdi,QWORD PTR [rsp+0x8]
   1e181:	movsxd rsi,DWORD PTR [rsp+0x28]
   1e186:	call   ea30 <xrealloc>
   1e18b:	mov    QWORD PTR [rsp+0x8],rax
   1e190:	jmp    1e043 <main_sched_rtds+0x273>
   1e195:	nop    DWORD PTR [rax]
   1e198:	mov    rax,QWORD PTR [rip+0x21ce51]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e19f:	lea    rdi,[rip+0x13e3a]        # 31fe0 <__PRETTY_FUNCTION__.10016+0xf50>
   1e1a6:	mov    edx,0x38
   1e1ab:	mov    esi,0x1
   1e1b0:	mov    ebx,0x1
   1e1b5:	mov    rcx,QWORD PTR [rax]
   1e1b8:	call   c1b0 <fwrite@plt>
   1e1bd:	mov    rdi,QWORD PTR [rsp+0x50]
   1e1c2:	call   ac40 <free@plt>
   1e1c7:	mov    rdi,QWORD PTR [rsp+0x10]
   1e1cc:	call   ac40 <free@plt>
   1e1d1:	mov    rdi,QWORD PTR [rsp+0x8]
   1e1d6:	call   ac40 <free@plt>
   1e1db:	mov    rdi,QWORD PTR [rsp+0x18]
   1e1e0:	call   ac40 <free@plt>
   1e1e5:	mov    eax,ebx
   1e1e7:	mov    rbx,QWORD PTR [rsp+0x88]
   1e1ef:	xor    rbx,QWORD PTR fs:0x28
   1e1f8:	jne    1e8e0 <main_sched_rtds+0xb10>
   1e1fe:	add    rsp,0x98
   1e205:	pop    rbx
   1e206:	pop    rbp
   1e207:	pop    r12
   1e209:	pop    r13
   1e20b:	pop    r14
   1e20d:	pop    r15
   1e20f:	ret    
   1e210:	cmp    QWORD PTR [rsp+0x40],0x0
   1e216:	je     1e0b9 <main_sched_rtds+0x2e9>
   1e21c:	cmp    BYTE PTR [rsp+0x5e],0x0
   1e221:	jne    1e410 <main_sched_rtds+0x640>
   1e227:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e22c:	jne    1e0d7 <main_sched_rtds+0x307>
   1e232:	movzx  eax,BYTE PTR [rsp+0x5c]
   1e237:	or     al,BYTE PTR [rsp+0x5d]
   1e23b:	jne    1e499 <main_sched_rtds+0x6c9>
   1e241:	cmp    BYTE PTR [rsp+0x4f],0x0
   1e246:	jne    1e499 <main_sched_rtds+0x6c9>
   1e24c:	cmp    DWORD PTR [rsp+0x48],r13d
   1e251:	jle    1e25e <main_sched_rtds+0x48e>
   1e253:	cmp    BYTE PTR [rsp+0x5c],0x0
   1e258:	jne    1e0fb <main_sched_rtds+0x32b>
   1e25e:	cmp    DWORD PTR [rsp+0x48],r15d
   1e263:	jle    1e270 <main_sched_rtds+0x4a0>
   1e265:	cmp    BYTE PTR [rsp+0x5d],0x0
   1e26a:	jne    1e0fb <main_sched_rtds+0x32b>
   1e270:	cmp    r14d,r13d
   1e273:	jne    1e0fb <main_sched_rtds+0x32b>
   1e279:	cmp    r14d,r15d
   1e27c:	jne    1e0fb <main_sched_rtds+0x32b>
   1e282:	cmp    QWORD PTR [rsp+0x40],0x0
   1e288:	sete   al
   1e28b:	jne    1e4c3 <main_sched_rtds+0x6f3>
   1e291:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e296:	je     1e4c3 <main_sched_rtds+0x6f3>
   1e29c:	mov    rsi,QWORD PTR [rsp+0x38]
   1e2a1:	lea    rbx,[rip+0x21ebb8]        # 23ce60 <ctx>
   1e2a8:	mov    DWORD PTR [rsp+0x6c],0x0
   1e2b0:	test   rsi,rsi
   1e2b3:	mov    rdi,QWORD PTR [rbx]
   1e2b6:	je     1e2e3 <main_sched_rtds+0x513>
   1e2b8:	lea    rdx,[rsp+0x64]
   1e2bd:	xor    ecx,ecx
   1e2bf:	call   ac30 <libxl_cpupool_qualifier_to_cpupoolid@plt>
   1e2c4:	test   eax,eax
   1e2c6:	jne    1e615 <main_sched_rtds+0x845>
   1e2cc:	mov    esi,DWORD PTR [rsp+0x64]
   1e2d0:	mov    rdi,QWORD PTR [rbx]
   1e2d3:	call   ac70 <libxl_cpupoolid_is_valid@plt>
   1e2d8:	test   eax,eax
   1e2da:	je     1e615 <main_sched_rtds+0x845>
   1e2e0:	mov    rdi,QWORD PTR [rbx]
   1e2e3:	lea    rsi,[rsp+0x68]
   1e2e8:	call   b830 <libxl_list_domain@plt>
   1e2ed:	test   rax,rax
   1e2f0:	mov    rbp,rax
   1e2f3:	je     1e7b8 <main_sched_rtds+0x9e8>
   1e2f9:	mov    rdi,QWORD PTR [rbx]
   1e2fc:	lea    rsi,[rsp+0x6c]
   1e301:	call   c200 <libxl_list_cpupool@plt>
   1e306:	test   rax,rax
   1e309:	je     1e782 <main_sched_rtds+0x9b2>
   1e30f:	mov    esi,DWORD PTR [rsp+0x6c]
   1e313:	lea    rbx,[rsp+0x70]
   1e318:	mov    r15,rax
   1e31b:	mov    QWORD PTR [rsp+0x20],0x0
   1e324:	mov    QWORD PTR [rsp+0x28],rax
   1e329:	cmp    esi,DWORD PTR [rsp+0x20]
   1e32d:	jle    1e778 <main_sched_rtds+0x9a8>
   1e333:	cmp    DWORD PTR [r15+0x10],0x8
   1e338:	jne    1e4fb <main_sched_rtds+0x72b>
   1e33e:	cmp    QWORD PTR [rsp+0x38],0x0
   1e344:	mov    edi,DWORD PTR [r15]
   1e347:	jne    1e641 <main_sched_rtds+0x871>
   1e34d:	call   1cb20 <sched_rtds_pool_output>
   1e352:	xor    esi,esi
   1e354:	mov    edi,0xffffffff
   1e359:	call   1d400 <sched_rtds_vcpu_output_all>
   1e35e:	mov    edi,DWORD PTR [rsp+0x68]
   1e362:	test   edi,edi
   1e364:	jle    1e4f7 <main_sched_rtds+0x727>
   1e36a:	lea    r13,[rbp+0x10]
   1e36e:	xor    r14d,r14d
   1e371:	jmp    1e386 <main_sched_rtds+0x5b6>
   1e373:	add    r14d,0x1
   1e377:	add    r13,0x70
   1e37b:	cmp    r14d,DWORD PTR [rsp+0x68]
   1e380:	jge    1e4f7 <main_sched_rtds+0x727>
   1e386:	mov    eax,DWORD PTR [r15]
   1e389:	cmp    DWORD PTR [r13+0x58],eax
   1e38d:	jne    1e373 <main_sched_rtds+0x5a3>
   1e38f:	mov    rdi,rbx
   1e392:	call   be80 <libxl_vcpu_sched_params_init@plt>
   1e397:	mov    edi,DWORD PTR [r13+0x0]
   1e39b:	mov    rsi,rbx
   1e39e:	call   1d400 <sched_rtds_vcpu_output_all>
   1e3a3:	mov    rdi,rbx
   1e3a6:	mov    r12d,eax
   1e3a9:	call   ad40 <libxl_vcpu_sched_params_dispose@plt>
   1e3ae:	test   r12d,r12d
   1e3b1:	je     1e373 <main_sched_rtds+0x5a3>
   1e3b3:	mov    r12,QWORD PTR [rsp+0x28]
   1e3b8:	mov    esi,DWORD PTR [rsp+0x6c]
   1e3bc:	mov    rdi,r12
   1e3bf:	xor    ebx,ebx
   1e3c1:	call   ae50 <libxl_cpupoolinfo_list_free@plt>
   1e3c6:	mov    esi,DWORD PTR [rsp+0x68]
   1e3ca:	mov    rdi,rbp
   1e3cd:	call   b0e0 <libxl_dominfo_list_free@plt>
   1e3d2:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e3d7:	nop    WORD PTR [rax+rax*1+0x0]
   1e3e0:	shl    DWORD PTR [rsp+0x58],1
   1e3e4:	mov    rdi,QWORD PTR [rsp+0x50]
   1e3e9:	movsxd rsi,DWORD PTR [rsp+0x58]
   1e3ee:	call   ea30 <xrealloc>
   1e3f3:	mov    QWORD PTR [rsp+0x50],rax
   1e3f8:	mov    rax,QWORD PTR [rip+0x21cbc1]        # 23afc0 <optarg@GLIBC_2.2.5>
   1e3ff:	mov    r8,QWORD PTR [rax]
   1e402:	jmp    1df16 <main_sched_rtds+0x146>
   1e407:	nop    WORD PTR [rax+rax*1+0x0]
   1e410:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e415:	je     1e0d7 <main_sched_rtds+0x307>
   1e41b:	mov    rax,QWORD PTR [rip+0x21cbce]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e422:	lea    rdi,[rip+0x138fb]        # 31d24 <__PRETTY_FUNCTION__.10016+0xc94>
   1e429:	mov    edx,0x14
   1e42e:	mov    esi,0x1
   1e433:	mov    ebx,0x1
   1e438:	mov    rcx,QWORD PTR [rax]
   1e43b:	call   c1b0 <fwrite@plt>
   1e440:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e445:	mov    rax,QWORD PTR [rip+0x21cba4]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e44c:	lea    rdi,[rip+0x13887]        # 31cda <__PRETTY_FUNCTION__.10016+0xc4a>
   1e453:	mov    edx,0x13
   1e458:	mov    esi,0x1
   1e45d:	mov    ebx,0x1
   1e462:	mov    rcx,QWORD PTR [rax]
   1e465:	call   c1b0 <fwrite@plt>
   1e46a:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e46f:	mov    rax,QWORD PTR [rip+0x21cb7a]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e476:	lea    rdi,[rip+0x1387e]        # 31cfb <__PRETTY_FUNCTION__.10016+0xc6b>
   1e47d:	mov    edx,0x14
   1e482:	mov    esi,0x1
   1e487:	mov    ebx,0x1
   1e48c:	mov    rcx,QWORD PTR [rax]
   1e48f:	call   c1b0 <fwrite@plt>
   1e494:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e499:	mov    rax,QWORD PTR [rip+0x21cb50]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e4a0:	lea    rdi,[rip+0x13869]        # 31d10 <__PRETTY_FUNCTION__.10016+0xc80>
   1e4a7:	mov    edx,0x13
   1e4ac:	mov    esi,0x1
   1e4b1:	mov    ebx,0x1
   1e4b6:	mov    rcx,QWORD PTR [rax]
   1e4b9:	call   c1b0 <fwrite@plt>
   1e4be:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e4c3:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e4c8:	jne    1e50a <main_sched_rtds+0x73a>
   1e4ca:	test   al,al
   1e4cc:	je     1e50a <main_sched_rtds+0x73a>
   1e4ce:	mov    rcx,QWORD PTR [rsp+0x38]
   1e4d3:	lea    rdx,[rip+0xffffffffffffe646]        # 1cb20 <sched_rtds_pool_output>
   1e4da:	lea    rsi,[rip+0xffffffffffffed2f]        # 1d210 <sched_rtds_domain_output>
   1e4e1:	mov    edi,0x8
   1e4e6:	xor    ebx,ebx
   1e4e8:	call   1cb60 <sched_domain_output>
   1e4ed:	test   eax,eax
   1e4ef:	setne  bl
   1e4f2:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e4f7:	mov    esi,DWORD PTR [rsp+0x6c]
   1e4fb:	add    QWORD PTR [rsp+0x20],0x1
   1e501:	add    r15,0x28
   1e505:	jmp    1e329 <main_sched_rtds+0x559>
   1e50a:	mov    rdi,QWORD PTR [rsp+0x40]
   1e50f:	call   eb40 <find_domain>
   1e514:	cmp    BYTE PTR [rsp+0x5e],0x0
   1e519:	mov    ebx,eax
   1e51b:	jne    1e53c <main_sched_rtds+0x76c>
   1e51d:	cmp    BYTE PTR [rsp+0x5f],0x0
   1e522:	jne    1e53c <main_sched_rtds+0x76c>
   1e524:	call   1d1c0 <sched_rtds_domain_output.part.4>
   1e529:	mov    edi,ebx
   1e52b:	xor    ebx,ebx
   1e52d:	call   1d210 <sched_rtds_domain_output>
   1e532:	test   eax,eax
   1e534:	setne  bl
   1e537:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e53c:	movzx  eax,BYTE PTR [rsp+0x5c]
   1e541:	lea    rbp,[rsp+0x70]
   1e546:	or     al,BYTE PTR [rsp+0x5d]
   1e54a:	mov    rdi,rbp
   1e54d:	jne    1e55a <main_sched_rtds+0x78a>
   1e54f:	cmp    BYTE PTR [rsp+0x4f],0x0
   1e554:	je     1e6d8 <main_sched_rtds+0x908>
   1e55a:	call   be80 <libxl_vcpu_sched_params_init@plt>
   1e55f:	mov    r15d,DWORD PTR [rsp+0x48]
   1e564:	mov    DWORD PTR [rsp+0x70],0x8
   1e56c:	test   r15d,r15d
   1e56f:	je     1e650 <main_sched_rtds+0x880>
   1e575:	movsxd rax,r15d
   1e578:	mov    DWORD PTR [rsp+0x74],r15d
   1e57d:	lea    rdi,[rax+rax*2]
   1e581:	shl    rdi,0x3
   1e585:	call   e9a0 <xmalloc>
   1e58a:	lea    esi,[r15-0x1]
   1e58e:	mov    r9,QWORD PTR [rsp+0x8]
   1e593:	mov    r10,QWORD PTR [rsp+0x10]
   1e598:	mov    r11,QWORD PTR [rsp+0x50]
   1e59d:	mov    QWORD PTR [rsp+0x78],rax
   1e5a2:	xor    ecx,ecx
   1e5a4:	add    rsi,0x1
   1e5a8:	xor    edx,edx
   1e5aa:	mov    edi,DWORD PTR [r11+rdx*4]
   1e5ae:	mov    r14,QWORD PTR [rsp+0x18]
   1e5b3:	mov    DWORD PTR [rax+rcx*1],edi
   1e5b6:	mov    edi,DWORD PTR [r10+rdx*4]
   1e5ba:	mov    rax,QWORD PTR [rsp+0x78]
   1e5bf:	mov    DWORD PTR [rax+rcx*1+0xc],edi
   1e5c3:	mov    rax,QWORD PTR [rsp+0x78]
   1e5c8:	mov    r8d,DWORD PTR [r9+rdx*4]
   1e5cc:	lea    rdi,[rax+rcx*1]
   1e5d0:	add    rcx,0x18
   1e5d4:	mov    DWORD PTR [rdi+0x14],r8d
   1e5d8:	movzx  r8d,BYTE PTR [r14+rdx*1]
   1e5dd:	add    rdx,0x1
   1e5e1:	cmp    rsi,rdx
   1e5e4:	mov    DWORD PTR [rdi+0x10],r8d
   1e5e8:	jne    1e5aa <main_sched_rtds+0x7da>
   1e5ea:	lea    rax,[rip+0x21e86f]        # 23ce60 <ctx>
   1e5f1:	mov    rdx,rbp
   1e5f4:	mov    esi,ebx
   1e5f6:	mov    rdi,QWORD PTR [rax]
   1e5f9:	call   c1c0 <libxl_vcpu_sched_params_set@plt>
   1e5fe:	test   eax,eax
   1e600:	jne    1e8e5 <main_sched_rtds+0xb15>
   1e606:	mov    rdi,rbp
   1e609:	xor    ebx,ebx
   1e60b:	call   ad40 <libxl_vcpu_sched_params_dispose@plt>
   1e610:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e615:	mov    rax,QWORD PTR [rip+0x21c9d4]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e61c:	mov    rcx,QWORD PTR [rsp+0x38]
   1e621:	lea    rdx,[rip+0x12c0a]        # 31232 <__PRETTY_FUNCTION__.10016+0x1a2>
   1e628:	mov    esi,0x1
   1e62d:	mov    ebx,0x1
   1e632:	mov    rdi,QWORD PTR [rax]
   1e635:	xor    eax,eax
   1e637:	call   c1e0 <__fprintf_chk@plt>
   1e63c:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e641:	cmp    DWORD PTR [rsp+0x64],edi
   1e645:	jne    1e4fb <main_sched_rtds+0x72b>
   1e64b:	jmp    1e34d <main_sched_rtds+0x57d>
   1e650:	mov    edi,0x18
   1e655:	mov    DWORD PTR [rsp+0x74],0x1
   1e65d:	call   e9a0 <xmalloc>
   1e662:	mov    rdx,QWORD PTR [rsp+0x10]
   1e667:	mov    QWORD PTR [rsp+0x78],rax
   1e66c:	mov    esi,ebx
   1e66e:	mov    edx,DWORD PTR [rdx]
   1e670:	mov    DWORD PTR [rax+0xc],edx
   1e673:	mov    rdx,QWORD PTR [rsp+0x8]
   1e678:	mov    rax,QWORD PTR [rsp+0x78]
   1e67d:	mov    edx,DWORD PTR [rdx]
   1e67f:	mov    DWORD PTR [rax+0x14],edx
   1e682:	mov    rdx,QWORD PTR [rsp+0x18]
   1e687:	movzx  edx,BYTE PTR [rdx]
   1e68a:	mov    DWORD PTR [rax+0x10],edx
   1e68d:	lea    rax,[rip+0x21e7cc]        # 23ce60 <ctx>
   1e694:	mov    rdx,rbp
   1e697:	mov    rdi,QWORD PTR [rax]
   1e69a:	call   ad30 <libxl_vcpu_sched_params_set_all@plt>
   1e69f:	test   eax,eax
   1e6a1:	je     1e606 <main_sched_rtds+0x836>
   1e6a7:	mov    rax,QWORD PTR [rip+0x21c942]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e6ae:	lea    rdi,[rip+0x13a53]        # 32108 <__PRETTY_FUNCTION__.10016+0x1078>
   1e6b5:	mov    edx,0x28
   1e6ba:	mov    esi,0x1
   1e6bf:	mov    rcx,QWORD PTR [rax]
   1e6c2:	call   c1b0 <fwrite@plt>
   1e6c7:	mov    edi,0x1
   1e6cc:	call   c1a0 <exit@plt>
   1e6d1:	nop    DWORD PTR [rax+0x0]
   1e6d8:	lea    r12,[rip+0x1355f]        # 31c3e <__PRETTY_FUNCTION__.10016+0xbae>
   1e6df:	lea    r13,[rip+0x13532]        # 31c18 <__PRETTY_FUNCTION__.10016+0xb88>
   1e6e6:	call   be80 <libxl_vcpu_sched_params_init@plt>
   1e6eb:	push   r12
   1e6ed:	lea    rcx,[rip+0xfd20]        # 2e414 <__func__.10421+0x8c>
   1e6f4:	push   r13
   1e6f6:	lea    rsi,[rip+0x1358b]        # 31c88 <__PRETTY_FUNCTION__.10016+0xbf8>
   1e6fd:	lea    r9,[rip+0x1351b]        # 31c1f <__PRETTY_FUNCTION__.10016+0xb8f>
   1e704:	lea    r8,[rip+0x13578]        # 31c83 <__PRETTY_FUNCTION__.10016+0xbf3>
   1e70b:	lea    rdx,[rip+0xfded]        # 2e4ff <__func__.10421+0x177>
   1e712:	xor    eax,eax
   1e714:	mov    edi,0x1
   1e719:	call   bd50 <__printf_chk@plt>
   1e71e:	mov    r15d,DWORD PTR [rsp+0x58]
   1e723:	test   r15d,r15d
   1e726:	mov    DWORD PTR [rsp+0x84],r15d
   1e72e:	pop    rcx
   1e72f:	pop    rsi
   1e730:	je     1e862 <main_sched_rtds+0xa92>
   1e736:	movsxd rax,r15d
   1e739:	lea    rdi,[rax+rax*2]
   1e73d:	shl    rdi,0x3
   1e741:	call   e9a0 <xmalloc>
   1e746:	lea    edx,[r15-0x1]
   1e74a:	mov    rsi,QWORD PTR [rsp+0x50]
   1e74f:	mov    QWORD PTR [rsp+0x78],rax
   1e754:	lea    rcx,[rdx+rdx*2+0x3]
   1e759:	xor    edx,edx
   1e75b:	shl    rcx,0x3
   1e75f:	mov    edi,DWORD PTR [rsi]
   1e761:	add    rsi,0x4
   1e765:	mov    DWORD PTR [rax+rdx*1],edi
   1e768:	add    rdx,0x18
   1e76c:	cmp    rcx,rdx
   1e76f:	je     1e7e2 <main_sched_rtds+0xa12>
   1e771:	mov    rax,QWORD PTR [rsp+0x78]
   1e776:	jmp    1e75f <main_sched_rtds+0x98f>
   1e778:	mov    r12,QWORD PTR [rsp+0x28]
   1e77d:	jmp    1e3bc <main_sched_rtds+0x5ec>
   1e782:	mov    rax,QWORD PTR [rip+0x21c867]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e789:	lea    rdi,[rip+0x12a5d]        # 311ed <__PRETTY_FUNCTION__.10016+0x15d>
   1e790:	mov    edx,0x1b
   1e795:	mov    esi,0x1
   1e79a:	mov    ebx,0x1
   1e79f:	mov    rcx,QWORD PTR [rax]
   1e7a2:	call   c1b0 <fwrite@plt>
   1e7a7:	mov    esi,DWORD PTR [rsp+0x68]
   1e7ab:	mov    rdi,rbp
   1e7ae:	call   b0e0 <libxl_dominfo_list_free@plt>
   1e7b3:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e7b8:	mov    rax,QWORD PTR [rip+0x21c831]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e7bf:	lea    rdi,[rip+0x133ea]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   1e7c6:	mov    edx,0x1a
   1e7cb:	mov    esi,0x1
   1e7d0:	mov    ebx,0x1
   1e7d5:	mov    rcx,QWORD PTR [rax]
   1e7d8:	call   c1b0 <fwrite@plt>
   1e7dd:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e7e2:	test   ebx,ebx
   1e7e4:	js     1e8a4 <main_sched_rtds+0xad4>
   1e7ea:	lea    rax,[rip+0x21e66f]        # 23ce60 <ctx>
   1e7f1:	mov    rdx,rbp
   1e7f4:	mov    esi,ebx
   1e7f6:	mov    rdi,QWORD PTR [rax]
   1e7f9:	call   be10 <libxl_vcpu_sched_params_get@plt>
   1e7fe:	test   eax,eax
   1e800:	jne    1e87a <main_sched_rtds+0xaaa>
   1e802:	cmp    DWORD PTR [rsp+0x70],0x8
   1e807:	je     1e86e <main_sched_rtds+0xa9e>
   1e809:	mov    edi,0x8
   1e80e:	call   b1e0 <libxl_scheduler_to_string@plt>
   1e813:	mov    edi,DWORD PTR [rsp+0x70]
   1e817:	mov    rbx,rax
   1e81a:	call   b1e0 <libxl_scheduler_to_string@plt>
   1e81f:	mov    rcx,rax
   1e822:	mov    rax,QWORD PTR [rip+0x21c7c7]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e829:	lea    rdx,[rip+0x13878]        # 320a8 <__PRETTY_FUNCTION__.10016+0x1018>
   1e830:	mov    r8,rbx
   1e833:	mov    esi,0x1
   1e838:	mov    rdi,QWORD PTR [rax]
   1e83b:	xor    eax,eax
   1e83d:	call   c1e0 <__fprintf_chk@plt>
   1e842:	mov    eax,0x1
   1e847:	neg    eax
   1e849:	mov    rdi,rbp
   1e84c:	mov    ebx,eax
   1e84e:	call   ad40 <libxl_vcpu_sched_params_dispose@plt>
   1e853:	test   ebx,ebx
   1e855:	mov    eax,0x1
   1e85a:	cmovne ebx,eax
   1e85d:	jmp    1e1bd <main_sched_rtds+0x3ed>
   1e862:	mov    rsi,rbp
   1e865:	mov    edi,ebx
   1e867:	call   1d400 <sched_rtds_vcpu_output_all>
   1e86c:	jmp    1e847 <main_sched_rtds+0xa77>
   1e86e:	mov    rsi,rbp
   1e871:	mov    edi,ebx
   1e873:	call   1d350 <sched_rtds_vcpu_output.part.6>
   1e878:	jmp    1e847 <main_sched_rtds+0xa77>
   1e87a:	mov    rax,QWORD PTR [rip+0x21c76f]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e881:	lea    rdi,[rip+0x137f8]        # 32080 <__PRETTY_FUNCTION__.10016+0xff0>
   1e888:	mov    edx,0x24
   1e88d:	mov    esi,0x1
   1e892:	mov    rcx,QWORD PTR [rax]
   1e895:	call   c1b0 <fwrite@plt>
   1e89a:	mov    edi,0x1
   1e89f:	call   c1a0 <exit@plt>
   1e8a4:	push   r12
   1e8a6:	lea    rdx,[rip+0xfc52]        # 2e4ff <__func__.10421+0x177>
   1e8ad:	push   r13
   1e8af:	lea    r9,[rip+0x13369]        # 31c1f <__PRETTY_FUNCTION__.10016+0xb8f>
   1e8b6:	lea    r8,[rip+0x133c6]        # 31c83 <__PRETTY_FUNCTION__.10016+0xbf3>
   1e8bd:	lea    rcx,[rip+0xfb50]        # 2e414 <__func__.10421+0x8c>
   1e8c4:	lea    rsi,[rip+0x133bd]        # 31c88 <__PRETTY_FUNCTION__.10016+0xbf8>
   1e8cb:	mov    edi,0x1
   1e8d0:	xor    eax,eax
   1e8d2:	call   bd50 <__printf_chk@plt>
   1e8d7:	pop    rax
   1e8d8:	xor    eax,eax
   1e8da:	pop    rdx
   1e8db:	jmp    1e847 <main_sched_rtds+0xa77>
   1e8e0:	call   b130 <__stack_chk_fail@plt>
   1e8e5:	mov    rax,QWORD PTR [rip+0x21c704]        # 23aff0 <stderr@GLIBC_2.2.5>
   1e8ec:	lea    rdi,[rip+0x137ed]        # 320e0 <__PRETTY_FUNCTION__.10016+0x1050>
   1e8f3:	mov    edx,0x24
   1e8f8:	mov    esi,0x1
   1e8fd:	mov    rcx,QWORD PTR [rax]
   1e900:	call   c1b0 <fwrite@plt>
   1e905:	mov    edi,0x1
   1e90a:	call   c1a0 <exit@plt>
   1e90f:	nop

000000000001e910 <main_pcilist>:
   1e910:	push   r13
   1e912:	push   r12
   1e914:	mov    r12d,edi
   1e917:	push   rbp
   1e918:	push   rbx
   1e919:	lea    rbp,[rip+0xb3b6]        # 29cd6 <__PRETTY_FUNCTION__.10113+0xbe>
   1e920:	mov    rbx,rsi
   1e923:	sub    rsp,0x18
   1e927:	mov    rax,QWORD PTR fs:0x28
   1e930:	mov    QWORD PTR [rsp+0x8],rax
   1e935:	xor    eax,eax
   1e937:	nop    WORD PTR [rax+rax*1+0x0]
   1e940:	lea    rdx,[rip+0x12dfb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1e947:	xor    ecx,ecx
   1e949:	mov    r9d,0x1
   1e94f:	mov    r8,rbp
   1e952:	mov    rsi,rbx
   1e955:	mov    edi,r12d
   1e958:	call   ebe0 <def_getopt>
   1e95d:	cmp    eax,0xffffffff
   1e960:	jne    1e940 <main_pcilist+0x30>
   1e962:	mov    rax,QWORD PTR [rip+0x21c63f]        # 23afa8 <optind@GLIBC_2.2.5>
   1e969:	movsxd rax,DWORD PTR [rax]
   1e96c:	mov    rdi,QWORD PTR [rbx+rax*8]
   1e970:	call   eb40 <find_domain>
   1e975:	mov    esi,eax
   1e977:	lea    rax,[rip+0x21e4e2]        # 23ce60 <ctx>
   1e97e:	lea    rdx,[rsp+0x4]
   1e983:	mov    rdi,QWORD PTR [rax]
   1e986:	call   af90 <libxl_device_pci_list@plt>
   1e98b:	test   rax,rax
   1e98e:	mov    r12,rax
   1e991:	je     1ea08 <main_pcilist+0xf8>
   1e993:	lea    rdi,[rip+0x13896]        # 32230 <__PRETTY_FUNCTION__.10016+0x11a0>
   1e99a:	call   aeb0 <puts@plt>
   1e99f:	mov    ecx,DWORD PTR [rsp+0x4]
   1e9a3:	test   ecx,ecx
   1e9a5:	jle    1ea00 <main_pcilist+0xf0>
   1e9a7:	lea    rbp,[rip+0x138ba]        # 32268 <__PRETTY_FUNCTION__.10016+0x11d8>
   1e9ae:	mov    rbx,r12
   1e9b1:	xor    r13d,r13d
   1e9b4:	nop    DWORD PTR [rax+0x0]
   1e9b8:	movzx  eax,BYTE PTR [rbx]
   1e9bb:	mov    edx,DWORD PTR [rbx+0x8]
   1e9be:	mov    rsi,rbp
   1e9c1:	mov    edi,0x1
   1e9c6:	add    r13d,0x1
   1e9ca:	mov    ecx,edx
   1e9cc:	shr    edx,0x3
   1e9cf:	push   rax
   1e9d0:	movzx  eax,BYTE PTR [rbx+0x1]
   1e9d4:	and    edx,0x1f
   1e9d7:	and    ecx,0x7
   1e9da:	push   rax
   1e9db:	movzx  r9d,BYTE PTR [rbx+0x2]
   1e9e0:	xor    eax,eax
   1e9e2:	mov    r8d,DWORD PTR [rbx+0x4]
   1e9e6:	call   bd50 <__printf_chk@plt>
   1e9eb:	mov    rdi,rbx
   1e9ee:	add    rbx,0x18
   1e9f2:	call   bc90 <libxl_device_pci_dispose@plt>
   1e9f7:	pop    rax
   1e9f8:	pop    rdx
   1e9f9:	cmp    r13d,DWORD PTR [rsp+0x4]
   1e9fe:	jl     1e9b8 <main_pcilist+0xa8>
   1ea00:	mov    rdi,r12
   1ea03:	call   ac40 <free@plt>
   1ea08:	xor    eax,eax
   1ea0a:	mov    rsi,QWORD PTR [rsp+0x8]
   1ea0f:	xor    rsi,QWORD PTR fs:0x28
   1ea18:	jne    1ea25 <main_pcilist+0x115>
   1ea1a:	add    rsp,0x18
   1ea1e:	pop    rbx
   1ea1f:	pop    rbp
   1ea20:	pop    r12
   1ea22:	pop    r13
   1ea24:	ret    
   1ea25:	call   b130 <__stack_chk_fail@plt>
   1ea2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001ea30 <main_pcidetach>:
   1ea30:	push   r15
   1ea32:	push   r14
   1ea34:	push   r13
   1ea36:	push   r12
   1ea38:	mov    r13d,0x1
   1ea3e:	push   rbp
   1ea3f:	push   rbx
   1ea40:	mov    r12d,edi
   1ea43:	mov    rbp,rsi
   1ea46:	xor    ebx,ebx
   1ea48:	sub    rsp,0x38
   1ea4c:	mov    rax,QWORD PTR fs:0x28
   1ea55:	mov    QWORD PTR [rsp+0x28],rax
   1ea5a:	xor    eax,eax
   1ea5c:	jmp    1ea68 <main_pcidetach+0x38>
   1ea5e:	xchg   ax,ax
   1ea60:	cmp    r15d,0x66
   1ea64:	cmove  ebx,r13d
   1ea68:	lea    r8,[rip+0xb24d]        # 29cbc <__PRETTY_FUNCTION__.10113+0xa4>
   1ea6f:	lea    rdx,[rip+0x137c6]        # 3223c <__PRETTY_FUNCTION__.10016+0x11ac>
   1ea76:	xor    ecx,ecx
   1ea78:	mov    r9d,0x2
   1ea7e:	mov    rsi,rbp
   1ea81:	mov    edi,r12d
   1ea84:	call   ebe0 <def_getopt>
   1ea89:	cmp    eax,0xffffffff
   1ea8c:	mov    r15d,eax
   1ea8f:	jne    1ea60 <main_pcidetach+0x30>
   1ea91:	mov    r12,QWORD PTR [rip+0x21c510]        # 23afa8 <optind@GLIBC_2.2.5>
   1ea98:	movsxd rax,DWORD PTR [r12]
   1ea9c:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   1eaa1:	call   eb40 <find_domain>
   1eaa6:	mov    r14d,eax
   1eaa9:	movsxd rax,DWORD PTR [r12]
   1eaad:	mov    r13,QWORD PTR [rbp+rax*8+0x8]
   1eab2:	lea    rbp,[rsp+0x10]
   1eab7:	mov    rdi,rbp
   1eaba:	call   b260 <libxl_device_pci_init@plt>
   1eabf:	mov    rax,QWORD PTR [rip+0x21c52a]        # 23aff0 <stderr@GLIBC_2.2.5>
   1eac6:	lea    rsi,[rip+0xfedc]        # 2e9a9 <__func__.10421+0x621>
   1eacd:	mov    rdi,QWORD PTR [rax]
   1ead0:	call   b270 <xlu_cfg_init@plt>
   1ead5:	test   rax,rax
   1ead8:	mov    r12,rax
   1eadb:	je     1ebc8 <main_pcidetach+0x198>
   1eae1:	mov    rdx,r13
   1eae4:	mov    rsi,rbp
   1eae7:	mov    rdi,rax
   1eaea:	call   b450 <xlu_pci_parse_bdf@plt>
   1eaef:	test   eax,eax
   1eaf1:	jne    1eb9e <main_pcidetach+0x16e>
   1eaf7:	lea    rax,[rip+0x21e362]        # 23ce60 <ctx>
   1eafe:	xor    ecx,ecx
   1eb00:	test   ebx,ebx
   1eb02:	mov    rdx,rbp
   1eb05:	mov    esi,r14d
   1eb08:	mov    rdi,QWORD PTR [rax]
   1eb0b:	je     1eb68 <main_pcidetach+0x138>
   1eb0d:	call   b310 <libxl_device_pci_destroy@plt>
   1eb12:	test   eax,eax
   1eb14:	mov    rdi,rbp
   1eb17:	mov    DWORD PTR [rsp+0xc],eax
   1eb1b:	jne    1eb50 <main_pcidetach+0x120>
   1eb1d:	call   bc90 <libxl_device_pci_dispose@plt>
   1eb22:	mov    rdi,r12
   1eb25:	call   abc0 <xlu_cfg_destroy@plt>
   1eb2a:	mov    eax,DWORD PTR [rsp+0xc]
   1eb2e:	mov    rcx,QWORD PTR [rsp+0x28]
   1eb33:	xor    rcx,QWORD PTR fs:0x28
   1eb3c:	jne    1eb99 <main_pcidetach+0x169>
   1eb3e:	add    rsp,0x38
   1eb42:	pop    rbx
   1eb43:	pop    rbp
   1eb44:	pop    r12
   1eb46:	pop    r13
   1eb48:	pop    r14
   1eb4a:	pop    r15
   1eb4c:	ret    
   1eb4d:	nop    DWORD PTR [rax]
   1eb50:	call   bc90 <libxl_device_pci_dispose@plt>
   1eb55:	mov    rdi,r12
   1eb58:	call   abc0 <xlu_cfg_destroy@plt>
   1eb5d:	mov    eax,ebx
   1eb5f:	jmp    1eb2e <main_pcidetach+0xfe>
   1eb61:	nop    DWORD PTR [rax+0x0]
   1eb68:	call   b8c0 <libxl_device_pci_remove@plt>
   1eb6d:	test   eax,eax
   1eb6f:	je     1eb90 <main_pcidetach+0x160>
   1eb71:	mov    rdi,rbp
   1eb74:	call   bc90 <libxl_device_pci_dispose@plt>
   1eb79:	mov    rdi,r12
   1eb7c:	call   abc0 <xlu_cfg_destroy@plt>
   1eb81:	mov    eax,0x1
   1eb86:	jmp    1eb2e <main_pcidetach+0xfe>
   1eb88:	nop    DWORD PTR [rax+rax*1+0x0]
   1eb90:	mov    DWORD PTR [rsp+0xc],eax
   1eb94:	mov    rdi,rbp
   1eb97:	jmp    1eb1d <main_pcidetach+0xed>
   1eb99:	call   b130 <__stack_chk_fail@plt>
   1eb9e:	mov    rax,QWORD PTR [rip+0x21c44b]        # 23aff0 <stderr@GLIBC_2.2.5>
   1eba5:	lea    rdx,[rip+0x136dc]        # 32288 <__PRETTY_FUNCTION__.10016+0x11f8>
   1ebac:	mov    rcx,r13
   1ebaf:	mov    esi,0x1
   1ebb4:	mov    rdi,QWORD PTR [rax]
   1ebb7:	xor    eax,eax
   1ebb9:	call   c1e0 <__fprintf_chk@plt>
   1ebbe:	mov    edi,0x2
   1ebc3:	call   c1a0 <exit@plt>
   1ebc8:	lea    rdi,[rip+0x13670]        # 3223f <__PRETTY_FUNCTION__.10016+0x11af>
   1ebcf:	call   bfd0 <perror@plt>
   1ebd4:	mov    edi,r15d
   1ebd7:	call   c1a0 <exit@plt>
   1ebdc:	nop    DWORD PTR [rax+0x0]

000000000001ebe0 <main_pciattach>:
   1ebe0:	push   r15
   1ebe2:	push   r14
   1ebe4:	push   r13
   1ebe6:	push   r12
   1ebe8:	lea    r12,[rip+0xb0a4]        # 29c93 <__PRETTY_FUNCTION__.10113+0x7b>
   1ebef:	push   rbp
   1ebf0:	push   rbx
   1ebf1:	mov    r13d,edi
   1ebf4:	mov    rbp,rsi
   1ebf7:	sub    rsp,0x38
   1ebfb:	mov    rax,QWORD PTR fs:0x28
   1ec04:	mov    QWORD PTR [rsp+0x28],rax
   1ec09:	xor    eax,eax
   1ec0b:	nop    DWORD PTR [rax+rax*1+0x0]
   1ec10:	lea    rdx,[rip+0x12b2b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1ec17:	xor    ecx,ecx
   1ec19:	mov    r9d,0x2
   1ec1f:	mov    r8,r12
   1ec22:	mov    rsi,rbp
   1ec25:	mov    edi,r13d
   1ec28:	call   ebe0 <def_getopt>
   1ec2d:	cmp    eax,0xffffffff
   1ec30:	mov    ebx,eax
   1ec32:	jne    1ec10 <main_pciattach+0x30>
   1ec34:	mov    r12,QWORD PTR [rip+0x21c36d]        # 23afa8 <optind@GLIBC_2.2.5>
   1ec3b:	movsxd rax,DWORD PTR [r12]
   1ec3f:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   1ec44:	call   eb40 <find_domain>
   1ec49:	mov    r13d,eax
   1ec4c:	movsxd rax,DWORD PTR [r12]
   1ec50:	mov    r14,QWORD PTR [rbp+rax*8+0x8]
   1ec55:	lea    rbp,[rsp+0x10]
   1ec5a:	mov    rdi,rbp
   1ec5d:	call   b260 <libxl_device_pci_init@plt>
   1ec62:	mov    r15,QWORD PTR [rip+0x21c387]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ec69:	lea    rsi,[rip+0xfd39]        # 2e9a9 <__func__.10421+0x621>
   1ec70:	mov    rdi,QWORD PTR [r15]
   1ec73:	call   b270 <xlu_cfg_init@plt>
   1ec78:	test   rax,rax
   1ec7b:	mov    r12,rax
   1ec7e:	je     1ed26 <main_pciattach+0x146>
   1ec84:	mov    rdx,r14
   1ec87:	mov    rsi,rbp
   1ec8a:	mov    rdi,rax
   1ec8d:	call   b450 <xlu_pci_parse_bdf@plt>
   1ec92:	test   eax,eax
   1ec94:	jne    1ed03 <main_pciattach+0x123>
   1ec96:	lea    rax,[rip+0x21e1c3]        # 23ce60 <ctx>
   1ec9d:	xor    ecx,ecx
   1ec9f:	mov    rdx,rbp
   1eca2:	mov    esi,r13d
   1eca5:	mov    rdi,QWORD PTR [rax]
   1eca8:	call   b430 <libxl_device_pci_add@plt>
   1ecad:	test   eax,eax
   1ecaf:	mov    rdi,rbp
   1ecb2:	mov    DWORD PTR [rsp+0xc],eax
   1ecb6:	je     1ecf0 <main_pciattach+0x110>
   1ecb8:	call   bc90 <libxl_device_pci_dispose@plt>
   1ecbd:	mov    rdi,r12
   1ecc0:	call   abc0 <xlu_cfg_destroy@plt>
   1ecc5:	mov    eax,0x1
   1ecca:	mov    rcx,QWORD PTR [rsp+0x28]
   1eccf:	xor    rcx,QWORD PTR fs:0x28
   1ecd8:	jne    1ed39 <main_pciattach+0x159>
   1ecda:	add    rsp,0x38
   1ecde:	pop    rbx
   1ecdf:	pop    rbp
   1ece0:	pop    r12
   1ece2:	pop    r13
   1ece4:	pop    r14
   1ece6:	pop    r15
   1ece8:	ret    
   1ece9:	nop    DWORD PTR [rax+0x0]
   1ecf0:	call   bc90 <libxl_device_pci_dispose@plt>
   1ecf5:	mov    rdi,r12
   1ecf8:	call   abc0 <xlu_cfg_destroy@plt>
   1ecfd:	mov    eax,DWORD PTR [rsp+0xc]
   1ed01:	jmp    1ecca <main_pciattach+0xea>
   1ed03:	mov    rdi,QWORD PTR [r15]
   1ed06:	lea    rdx,[rip+0x135ab]        # 322b8 <__PRETTY_FUNCTION__.10016+0x1228>
   1ed0d:	mov    rcx,r14
   1ed10:	mov    esi,0x1
   1ed15:	xor    eax,eax
   1ed17:	call   c1e0 <__fprintf_chk@plt>
   1ed1c:	mov    edi,0x2
   1ed21:	call   c1a0 <exit@plt>
   1ed26:	lea    rdi,[rip+0x13512]        # 3223f <__PRETTY_FUNCTION__.10016+0x11af>
   1ed2d:	call   bfd0 <perror@plt>
   1ed32:	mov    edi,ebx
   1ed34:	call   c1a0 <exit@plt>
   1ed39:	call   b130 <__stack_chk_fail@plt>
   1ed3e:	xchg   ax,ax

000000000001ed40 <main_pciassignable_list>:
   1ed40:	push   r13
   1ed42:	push   r12
   1ed44:	mov    r12d,edi
   1ed47:	push   rbp
   1ed48:	push   rbx
   1ed49:	lea    rbx,[rip+0xafc8]        # 29d18 <__PRETTY_FUNCTION__.10113+0x100>
   1ed50:	mov    rbp,rsi
   1ed53:	sub    rsp,0x18
   1ed57:	mov    rax,QWORD PTR fs:0x28
   1ed60:	mov    QWORD PTR [rsp+0x8],rax
   1ed65:	xor    eax,eax
   1ed67:	nop    WORD PTR [rax+rax*1+0x0]
   1ed70:	lea    rdx,[rip+0x129cb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1ed77:	xor    r9d,r9d
   1ed7a:	xor    ecx,ecx
   1ed7c:	mov    r8,rbx
   1ed7f:	mov    rsi,rbp
   1ed82:	mov    edi,r12d
   1ed85:	call   ebe0 <def_getopt>
   1ed8a:	cmp    eax,0xffffffff
   1ed8d:	jne    1ed70 <main_pciassignable_list+0x30>
   1ed8f:	lea    rax,[rip+0x21e0ca]        # 23ce60 <ctx>
   1ed96:	lea    rsi,[rsp+0x4]
   1ed9b:	mov    rdi,QWORD PTR [rax]
   1ed9e:	call   b520 <libxl_device_pci_assignable_list@plt>
   1eda3:	test   rax,rax
   1eda6:	mov    r13,rax
   1eda9:	je     1edfc <main_pciassignable_list+0xbc>
   1edab:	mov    eax,DWORD PTR [rsp+0x4]
   1edaf:	test   eax,eax
   1edb1:	jle    1edf4 <main_pciassignable_list+0xb4>
   1edb3:	lea    r12,[rip+0x13492]        # 3224c <__PRETTY_FUNCTION__.10016+0x11bc>
   1edba:	mov    rbx,r13
   1edbd:	xor    ebp,ebp
   1edbf:	nop
   1edc0:	movzx  ecx,BYTE PTR [rbx+0x2]
   1edc4:	movzx  r9d,BYTE PTR [rbx]
   1edc8:	mov    rsi,r12
   1edcb:	movzx  r8d,BYTE PTR [rbx+0x1]
   1edd0:	mov    edx,DWORD PTR [rbx+0x4]
   1edd3:	mov    edi,0x1
   1edd8:	xor    eax,eax
   1edda:	add    ebp,0x1
   1eddd:	call   bd50 <__printf_chk@plt>
   1ede2:	mov    rdi,rbx
   1ede5:	add    rbx,0x18
   1ede9:	call   bc90 <libxl_device_pci_dispose@plt>
   1edee:	cmp    ebp,DWORD PTR [rsp+0x4]
   1edf2:	jl     1edc0 <main_pciassignable_list+0x80>
   1edf4:	mov    rdi,r13
   1edf7:	call   ac40 <free@plt>
   1edfc:	xor    eax,eax
   1edfe:	mov    rsi,QWORD PTR [rsp+0x8]
   1ee03:	xor    rsi,QWORD PTR fs:0x28
   1ee0c:	jne    1ee19 <main_pciassignable_list+0xd9>
   1ee0e:	add    rsp,0x18
   1ee12:	pop    rbx
   1ee13:	pop    rbp
   1ee14:	pop    r12
   1ee16:	pop    r13
   1ee18:	ret    
   1ee19:	call   b130 <__stack_chk_fail@plt>
   1ee1e:	xchg   ax,ax

000000000001ee20 <main_pciassignable_add>:
   1ee20:	push   r14
   1ee22:	push   r13
   1ee24:	mov    r13d,edi
   1ee27:	push   r12
   1ee29:	push   rbp
   1ee2a:	lea    r12,[rip+0xaeae]        # 29cdf <__PRETTY_FUNCTION__.10113+0xc7>
   1ee31:	push   rbx
   1ee32:	mov    rbp,rsi
   1ee35:	sub    rsp,0x30
   1ee39:	mov    rax,QWORD PTR fs:0x28
   1ee42:	mov    QWORD PTR [rsp+0x28],rax
   1ee47:	xor    eax,eax
   1ee49:	nop    DWORD PTR [rax+0x0]
   1ee50:	lea    rdx,[rip+0x128eb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1ee57:	xor    ecx,ecx
   1ee59:	mov    r9d,0x1
   1ee5f:	mov    r8,r12
   1ee62:	mov    rsi,rbp
   1ee65:	mov    edi,r13d
   1ee68:	call   ebe0 <def_getopt>
   1ee6d:	cmp    eax,0xffffffff
   1ee70:	mov    ebx,eax
   1ee72:	jne    1ee50 <main_pciassignable_add+0x30>
   1ee74:	mov    rax,QWORD PTR [rip+0x21c12d]        # 23afa8 <optind@GLIBC_2.2.5>
   1ee7b:	movsxd rax,DWORD PTR [rax]
   1ee7e:	mov    r14,QWORD PTR [rbp+rax*8+0x0]
   1ee83:	lea    rbp,[rsp+0x10]
   1ee88:	mov    rdi,rbp
   1ee8b:	call   b260 <libxl_device_pci_init@plt>
   1ee90:	mov    r13,QWORD PTR [rip+0x21c159]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ee97:	lea    rsi,[rip+0xfb0b]        # 2e9a9 <__func__.10421+0x621>
   1ee9e:	mov    rdi,QWORD PTR [r13+0x0]
   1eea2:	call   b270 <xlu_cfg_init@plt>
   1eea7:	test   rax,rax
   1eeaa:	mov    r12,rax
   1eead:	je     1ef57 <main_pciassignable_add+0x137>
   1eeb3:	mov    rdx,r14
   1eeb6:	mov    rsi,rbp
   1eeb9:	mov    rdi,rax
   1eebc:	call   b450 <xlu_pci_parse_bdf@plt>
   1eec1:	test   eax,eax
   1eec3:	jne    1ef33 <main_pciassignable_add+0x113>
   1eec5:	lea    rax,[rip+0x21df94]        # 23ce60 <ctx>
   1eecc:	mov    edx,0x1
   1eed1:	mov    rsi,rbp
   1eed4:	mov    rdi,QWORD PTR [rax]
   1eed7:	call   ba20 <libxl_device_pci_assignable_add@plt>
   1eedc:	test   eax,eax
   1eede:	mov    rdi,rbp
   1eee1:	mov    DWORD PTR [rsp+0xc],eax
   1eee5:	je     1ef20 <main_pciassignable_add+0x100>
   1eee7:	call   bc90 <libxl_device_pci_dispose@plt>
   1eeec:	mov    rdi,r12
   1eeef:	call   abc0 <xlu_cfg_destroy@plt>
   1eef4:	mov    eax,0x1
   1eef9:	mov    rcx,QWORD PTR [rsp+0x28]
   1eefe:	xor    rcx,QWORD PTR fs:0x28
   1ef07:	jne    1ef6a <main_pciassignable_add+0x14a>
   1ef09:	add    rsp,0x30
   1ef0d:	pop    rbx
   1ef0e:	pop    rbp
   1ef0f:	pop    r12
   1ef11:	pop    r13
   1ef13:	pop    r14
   1ef15:	ret    
   1ef16:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ef20:	call   bc90 <libxl_device_pci_dispose@plt>
   1ef25:	mov    rdi,r12
   1ef28:	call   abc0 <xlu_cfg_destroy@plt>
   1ef2d:	mov    eax,DWORD PTR [rsp+0xc]
   1ef31:	jmp    1eef9 <main_pciassignable_add+0xd9>
   1ef33:	mov    rdi,QWORD PTR [r13+0x0]
   1ef37:	lea    rdx,[rip+0x133aa]        # 322e8 <__PRETTY_FUNCTION__.10016+0x1258>
   1ef3e:	mov    rcx,r14
   1ef41:	mov    esi,0x1
   1ef46:	xor    eax,eax
   1ef48:	call   c1e0 <__fprintf_chk@plt>
   1ef4d:	mov    edi,0x2
   1ef52:	call   c1a0 <exit@plt>
   1ef57:	lea    rdi,[rip+0xfa58]        # 2e9b6 <__func__.10421+0x62e>
   1ef5e:	call   bfd0 <perror@plt>
   1ef63:	mov    edi,ebx
   1ef65:	call   c1a0 <exit@plt>
   1ef6a:	call   b130 <__stack_chk_fail@plt>
   1ef6f:	nop

000000000001ef70 <main_pciassignable_remove>:
   1ef70:	push   r15
   1ef72:	push   r14
   1ef74:	mov    r14d,edi
   1ef77:	push   r13
   1ef79:	push   r12
   1ef7b:	lea    r13,[rip+0xad70]        # 29cf2 <__PRETTY_FUNCTION__.10113+0xda>
   1ef82:	push   rbp
   1ef83:	push   rbx
   1ef84:	mov    r12,rsi
   1ef87:	xor    ebp,ebp
   1ef89:	sub    rsp,0x38
   1ef8d:	mov    rax,QWORD PTR fs:0x28
   1ef96:	mov    QWORD PTR [rsp+0x28],rax
   1ef9b:	xor    eax,eax
   1ef9d:	jmp    1efab <main_pciassignable_remove+0x3b>
   1ef9f:	nop
   1efa0:	cmp    ebx,0x72
   1efa3:	mov    eax,0x1
   1efa8:	cmove  ebp,eax
   1efab:	lea    rdx,[rip+0x132af]        # 32261 <__PRETTY_FUNCTION__.10016+0x11d1>
   1efb2:	xor    ecx,ecx
   1efb4:	mov    r9d,0x1
   1efba:	mov    r8,r13
   1efbd:	mov    rsi,r12
   1efc0:	mov    edi,r14d
   1efc3:	call   ebe0 <def_getopt>
   1efc8:	cmp    eax,0xffffffff
   1efcb:	mov    ebx,eax
   1efcd:	jne    1efa0 <main_pciassignable_remove+0x30>
   1efcf:	mov    rax,QWORD PTR [rip+0x21bfd2]        # 23afa8 <optind@GLIBC_2.2.5>
   1efd6:	movsxd rax,DWORD PTR [rax]
   1efd9:	mov    r15,QWORD PTR [r12+rax*8]
   1efdd:	lea    r12,[rsp+0x10]
   1efe2:	mov    rdi,r12
   1efe5:	call   b260 <libxl_device_pci_init@plt>
   1efea:	mov    r14,QWORD PTR [rip+0x21bfff]        # 23aff0 <stderr@GLIBC_2.2.5>
   1eff1:	lea    rsi,[rip+0xf9b1]        # 2e9a9 <__func__.10421+0x621>
   1eff8:	mov    rdi,QWORD PTR [r14]
   1effb:	call   b270 <xlu_cfg_init@plt>
   1f000:	test   rax,rax
   1f003:	mov    r13,rax
   1f006:	je     1f0a6 <main_pciassignable_remove+0x136>
   1f00c:	mov    rdx,r15
   1f00f:	mov    rsi,r12
   1f012:	mov    rdi,rax
   1f015:	call   b450 <xlu_pci_parse_bdf@plt>
   1f01a:	test   eax,eax
   1f01c:	jne    1f083 <main_pciassignable_remove+0x113>
   1f01e:	lea    rax,[rip+0x21de3b]        # 23ce60 <ctx>
   1f025:	mov    edx,ebp
   1f027:	mov    rsi,r12
   1f02a:	mov    rdi,QWORD PTR [rax]
   1f02d:	call   bc50 <libxl_device_pci_assignable_remove@plt>
   1f032:	test   eax,eax
   1f034:	mov    rdi,r12
   1f037:	mov    DWORD PTR [rsp+0xc],eax
   1f03b:	je     1f070 <main_pciassignable_remove+0x100>
   1f03d:	call   bc90 <libxl_device_pci_dispose@plt>
   1f042:	mov    rdi,r13
   1f045:	call   abc0 <xlu_cfg_destroy@plt>
   1f04a:	mov    eax,0x1
   1f04f:	mov    rcx,QWORD PTR [rsp+0x28]
   1f054:	xor    rcx,QWORD PTR fs:0x28
   1f05d:	jne    1f0b9 <main_pciassignable_remove+0x149>
   1f05f:	add    rsp,0x38
   1f063:	pop    rbx
   1f064:	pop    rbp
   1f065:	pop    r12
   1f067:	pop    r13
   1f069:	pop    r14
   1f06b:	pop    r15
   1f06d:	ret    
   1f06e:	xchg   ax,ax
   1f070:	call   bc90 <libxl_device_pci_dispose@plt>
   1f075:	mov    rdi,r13
   1f078:	call   abc0 <xlu_cfg_destroy@plt>
   1f07d:	mov    eax,DWORD PTR [rsp+0xc]
   1f081:	jmp    1f04f <main_pciassignable_remove+0xdf>
   1f083:	mov    rdi,QWORD PTR [r14]
   1f086:	lea    rdx,[rip+0x13293]        # 32320 <__PRETTY_FUNCTION__.10016+0x1290>
   1f08d:	mov    rcx,r15
   1f090:	mov    esi,0x1
   1f095:	xor    eax,eax
   1f097:	call   c1e0 <__fprintf_chk@plt>
   1f09c:	mov    edi,0x2
   1f0a1:	call   c1a0 <exit@plt>
   1f0a6:	lea    rdi,[rip+0xf909]        # 2e9b6 <__func__.10421+0x62e>
   1f0ad:	call   bfd0 <perror@plt>
   1f0b2:	mov    edi,ebx
   1f0b4:	call   c1a0 <exit@plt>
   1f0b9:	call   b130 <__stack_chk_fail@plt>
   1f0be:	xchg   ax,ax

000000000001f0c0 <print_domain_vcpuinfo>:
   1f0c0:	push   r15
   1f0c2:	push   r14
   1f0c4:	push   r13
   1f0c6:	push   r12
   1f0c8:	mov    r13d,esi
   1f0cb:	push   rbp
   1f0cc:	push   rbx
   1f0cd:	mov    esi,edi
   1f0cf:	mov    r12d,edi
   1f0d2:	sub    rsp,0x28
   1f0d6:	mov    rax,QWORD PTR fs:0x28
   1f0df:	mov    QWORD PTR [rsp+0x18],rax
   1f0e4:	xor    eax,eax
   1f0e6:	lea    rax,[rip+0x21dd73]        # 23ce60 <ctx>
   1f0ed:	lea    rcx,[rsp+0x14]
   1f0f2:	lea    rdx,[rsp+0x10]
   1f0f7:	mov    rdi,QWORD PTR [rax]
   1f0fa:	call   c2e0 <libxl_list_vcpu@plt>
   1f0ff:	test   rax,rax
   1f102:	mov    QWORD PTR [rsp+0x8],rax
   1f107:	je     1f27a <print_domain_vcpuinfo+0x1ba>
   1f10d:	mov    esi,DWORD PTR [rsp+0x10]
   1f111:	test   esi,esi
   1f113:	jle    1f270 <print_domain_vcpuinfo+0x1b0>
   1f119:	mov    rbx,rax
   1f11c:	xor    ebp,ebp
   1f11e:	mov    r14,QWORD PTR [rip+0x21be7b]        # 23afa0 <stdout@GLIBC_2.2.5>
   1f125:	jmp    1f1a9 <print_domain_vcpuinfo+0xe9>
   1f12a:	nop    WORD PTR [rax+rax*1+0x0]
   1f130:	pxor   xmm0,xmm0
   1f134:	cvtsi2ss xmm0,rax
   1f139:	lea    rsi,[rip+0x1323f]        # 3237f <__PRETTY_FUNCTION__.10016+0x12ef>
   1f140:	mov    edi,0x1
   1f145:	mov    eax,0x1
   1f14a:	cvtss2sd xmm0,xmm0
   1f14e:	add    ebp,0x1
   1f151:	add    rbx,0x38
   1f155:	divsd  xmm0,QWORD PTR [rip+0x13523]        # 32680 <__PRETTY_FUNCTION__.10016+0x15f0>
   1f15d:	call   bd50 <__printf_chk@plt>
   1f162:	mov    rdi,QWORD PTR [rbx-0x18]
   1f166:	mov    rdx,QWORD PTR [r14]
   1f169:	mov    esi,r13d
   1f16c:	call   ede0 <print_bitmap>
   1f171:	lea    rsi,[rip+0x1320f]        # 32387 <__PRETTY_FUNCTION__.10016+0x12f7>
   1f178:	mov    edi,0x1
   1f17d:	xor    eax,eax
   1f17f:	call   bd50 <__printf_chk@plt>
   1f184:	mov    rdi,QWORD PTR [rbx-0x8]
   1f188:	mov    rdx,QWORD PTR [r14]
   1f18b:	mov    esi,r13d
   1f18e:	call   ede0 <print_bitmap>
   1f193:	mov    edi,0xa
   1f198:	call   aca0 <putchar@plt>
   1f19d:	mov    esi,DWORD PTR [rsp+0x10]
   1f1a1:	cmp    esi,ebp
   1f1a3:	jle    1f270 <print_domain_vcpuinfo+0x1b0>
   1f1a9:	lea    rax,[rip+0x21dcb0]        # 23ce60 <ctx>
   1f1b0:	mov    esi,r12d
   1f1b3:	mov    rdi,QWORD PTR [rax]
   1f1b6:	call   ae20 <libxl_domid_to_name@plt>
   1f1bb:	mov    r8d,DWORD PTR [rbx]
   1f1be:	lea    rsi,[rip+0x13194]        # 32359 <__PRETTY_FUNCTION__.10016+0x12c9>
   1f1c5:	mov    rdx,rax
   1f1c8:	mov    r15,rax
   1f1cb:	mov    ecx,r12d
   1f1ce:	mov    edi,0x1
   1f1d3:	xor    eax,eax
   1f1d5:	call   bd50 <__printf_chk@plt>
   1f1da:	mov    rdi,r15
   1f1dd:	call   ac40 <free@plt>
   1f1e2:	cmp    BYTE PTR [rbx+0x8],0x0
   1f1e6:	je     1f248 <print_domain_vcpuinfo+0x188>
   1f1e8:	cmp    BYTE PTR [rbx+0x9],0x1
   1f1ec:	mov    edx,DWORD PTR [rbx+0x4]
   1f1ef:	lea    rsi,[rip+0x1317d]        # 32373 <__PRETTY_FUNCTION__.10016+0x12e3>
   1f1f6:	mov    edi,0x1
   1f1fb:	sbb    eax,eax
   1f1fd:	and    eax,0xffffffcb
   1f200:	cmp    BYTE PTR [rbx+0xa],0x1
   1f204:	lea    r8d,[rax+0x62]
   1f208:	sbb    ecx,ecx
   1f20a:	xor    eax,eax
   1f20c:	and    ecx,0xffffffbb
   1f20f:	add    ecx,0x72
   1f212:	call   bd50 <__printf_chk@plt>
   1f217:	mov    rax,QWORD PTR [rbx+0x10]
   1f21b:	test   rax,rax
   1f21e:	jns    1f130 <print_domain_vcpuinfo+0x70>
   1f224:	mov    rdx,rax
   1f227:	pxor   xmm0,xmm0
   1f22b:	shr    rdx,1
   1f22e:	and    eax,0x1
   1f231:	or     rdx,rax
   1f234:	cvtsi2ss xmm0,rdx
   1f239:	addss  xmm0,xmm0
   1f23d:	jmp    1f139 <print_domain_vcpuinfo+0x79>
   1f242:	nop    WORD PTR [rax+rax*1+0x0]
   1f248:	lea    rsi,[rip+0x13118]        # 32367 <__PRETTY_FUNCTION__.10016+0x12d7>
   1f24f:	mov    r8d,0x2d
   1f255:	mov    ecx,0x2d
   1f25a:	mov    edx,0x2d
   1f25f:	mov    edi,0x1
   1f264:	xor    eax,eax
   1f266:	call   bd50 <__printf_chk@plt>
   1f26b:	jmp    1f217 <print_domain_vcpuinfo+0x157>
   1f26d:	nop    DWORD PTR [rax]
   1f270:	mov    rdi,QWORD PTR [rsp+0x8]
   1f275:	call   b100 <libxl_vcpuinfo_list_free@plt>
   1f27a:	mov    rax,QWORD PTR [rsp+0x18]
   1f27f:	xor    rax,QWORD PTR fs:0x28
   1f288:	jne    1f299 <print_domain_vcpuinfo+0x1d9>
   1f28a:	add    rsp,0x28
   1f28e:	pop    rbx
   1f28f:	pop    rbp
   1f290:	pop    r12
   1f292:	pop    r13
   1f294:	pop    r14
   1f296:	pop    r15
   1f298:	ret    
   1f299:	call   b130 <__stack_chk_fail@plt>
   1f29e:	xchg   ax,ax

000000000001f2a0 <apply_global_affinity_masks>:
   1f2a0:	push   r15
   1f2a2:	push   r14
   1f2a4:	push   r13
   1f2a6:	push   r12
   1f2a8:	push   rbp
   1f2a9:	push   rbx
   1f2aa:	sub    rsp,0x38
   1f2ae:	mov    rax,QWORD PTR fs:0x28
   1f2b7:	mov    QWORD PTR [rsp+0x28],rax
   1f2bc:	xor    eax,eax
   1f2be:	cmp    edi,0x2
   1f2c1:	je     1f3e0 <apply_global_affinity_masks+0x140>
   1f2c7:	cmp    edi,0x3
   1f2ca:	je     1f300 <apply_global_affinity_masks+0x60>
   1f2cc:	cmp    edi,0x1
   1f2cf:	je     1f300 <apply_global_affinity_masks+0x60>
   1f2d1:	mov    rax,QWORD PTR [rip+0x21bd18]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f2d8:	lea    rdi,[rip+0x130ac]        # 3238b <__PRETTY_FUNCTION__.10016+0x12fb>
   1f2df:	mov    edx,0x13
   1f2e4:	mov    esi,0x1
   1f2e9:	mov    rcx,QWORD PTR [rax]
   1f2ec:	call   c1b0 <fwrite@plt>
   1f2f1:	mov    edi,0x1
   1f2f6:	call   c1a0 <exit@plt>
   1f2fb:	nop    DWORD PTR [rax+rax*1+0x0]
   1f300:	lea    r14,[rip+0x21db69]        # 23ce70 <global_hvm_affinity_mask>
   1f307:	test   edx,edx
   1f309:	je     1f3c0 <apply_global_affinity_masks+0x120>
   1f30f:	lea    eax,[rdx-0x1]
   1f312:	lea    r13,[rip+0x21db47]        # 23ce60 <ctx>
   1f319:	lea    rbp,[rsp+0x10]
   1f31e:	mov    rbx,rsi
   1f321:	mov    r12,rsp
   1f324:	shl    rax,0x4
   1f328:	lea    r15,[rsi+rax*1+0x10]
   1f32d:	nop    DWORD PTR [rax]
   1f330:	mov    rdi,r12
   1f333:	call   bc00 <libxl_bitmap_init@plt>
   1f338:	mov    rdi,rbp
   1f33b:	call   bc00 <libxl_bitmap_init@plt>
   1f340:	lea    rcx,[rip+0x21db69]        # 23ceb0 <global_vm_affinity_mask>
   1f347:	mov    rdi,QWORD PTR [r13+0x0]
   1f34b:	mov    rdx,rbx
   1f34e:	mov    rsi,r12
   1f351:	call   b620 <libxl_bitmap_and@plt>
   1f356:	test   eax,eax
   1f358:	jne    1f3ec <apply_global_affinity_masks+0x14c>
   1f35e:	mov    rdi,QWORD PTR [r13+0x0]
   1f362:	mov    rcx,r14
   1f365:	mov    rdx,r12
   1f368:	mov    rsi,rbp
   1f36b:	call   b620 <libxl_bitmap_and@plt>
   1f370:	test   eax,eax
   1f372:	jne    1f3ec <apply_global_affinity_masks+0x14c>
   1f374:	mov    rdi,rbp
   1f377:	call   b560 <libxl_bitmap_is_empty@plt>
   1f37c:	test   eax,eax
   1f37e:	jne    1f416 <apply_global_affinity_masks+0x176>
   1f384:	mov    rdi,rbx
   1f387:	call   bdb0 <libxl_bitmap_dispose@plt>
   1f38c:	mov    rdi,rbx
   1f38f:	call   bc00 <libxl_bitmap_init@plt>
   1f394:	mov    rdi,QWORD PTR [r13+0x0]
   1f398:	mov    rsi,rbx
   1f39b:	mov    rdx,rbp
   1f39e:	add    rbx,0x10
   1f3a2:	call   b3a0 <libxl_bitmap_copy_alloc@plt>
   1f3a7:	mov    rdi,r12
   1f3aa:	call   bdb0 <libxl_bitmap_dispose@plt>
   1f3af:	mov    rdi,rbp
   1f3b2:	call   bdb0 <libxl_bitmap_dispose@plt>
   1f3b7:	cmp    rbx,r15
   1f3ba:	jne    1f330 <apply_global_affinity_masks+0x90>
   1f3c0:	mov    rax,QWORD PTR [rsp+0x28]
   1f3c5:	xor    rax,QWORD PTR fs:0x28
   1f3ce:	jne    1f440 <apply_global_affinity_masks+0x1a0>
   1f3d0:	add    rsp,0x38
   1f3d4:	pop    rbx
   1f3d5:	pop    rbp
   1f3d6:	pop    r12
   1f3d8:	pop    r13
   1f3da:	pop    r14
   1f3dc:	pop    r15
   1f3de:	ret    
   1f3df:	nop
   1f3e0:	lea    r14,[rip+0x21dad9]        # 23cec0 <global_pv_affinity_mask>
   1f3e7:	jmp    1f307 <apply_global_affinity_masks+0x67>
   1f3ec:	mov    rax,QWORD PTR [rip+0x21bbfd]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f3f3:	lea    rdi,[rip+0x12fa5]        # 3239f <__PRETTY_FUNCTION__.10016+0x130f>
   1f3fa:	mov    edx,0x19
   1f3ff:	mov    esi,0x1
   1f404:	mov    rcx,QWORD PTR [rax]
   1f407:	call   c1b0 <fwrite@plt>
   1f40c:	mov    edi,0x1
   1f411:	call   c1a0 <exit@plt>
   1f416:	mov    rax,QWORD PTR [rip+0x21bbd3]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f41d:	lea    rdi,[rip+0x130ac]        # 324d0 <__PRETTY_FUNCTION__.10016+0x1440>
   1f424:	mov    edx,0x20
   1f429:	mov    esi,0x1
   1f42e:	mov    rcx,QWORD PTR [rax]
   1f431:	call   c1b0 <fwrite@plt>
   1f436:	mov    edi,0x1
   1f43b:	call   c1a0 <exit@plt>
   1f440:	call   b130 <__stack_chk_fail@plt>
   1f445:	nop
   1f446:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001f450 <main_vcpulist>:
   1f450:	push   r15
   1f452:	push   r14
   1f454:	push   r13
   1f456:	push   r12
   1f458:	mov    r12,rsi
   1f45b:	push   rbp
   1f45c:	push   rbx
   1f45d:	lea    rbp,[rip+0xa9fc]        # 29e60 <__PRETTY_FUNCTION__.10113+0x248>
   1f464:	mov    ebx,edi
   1f466:	sub    rsp,0x98
   1f46d:	mov    rax,QWORD PTR fs:0x28
   1f476:	mov    QWORD PTR [rsp+0x88],rax
   1f47e:	xor    eax,eax
   1f480:	lea    rdx,[rip+0x122bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1f487:	xor    r9d,r9d
   1f48a:	xor    ecx,ecx
   1f48c:	mov    r8,rbp
   1f48f:	mov    rsi,r12
   1f492:	mov    edi,ebx
   1f494:	call   ebe0 <def_getopt>
   1f499:	cmp    eax,0xffffffff
   1f49c:	jne    1f480 <main_vcpulist+0x30>
   1f49e:	lea    r15,[rip+0x21d9bb]        # 23ce60 <ctx>
   1f4a5:	mov    rax,QWORD PTR [rip+0x21bafc]        # 23afa8 <optind@GLIBC_2.2.5>
   1f4ac:	lea    r13,[rsp+0x10]
   1f4b1:	mov    rsi,r13
   1f4b4:	mov    rdi,QWORD PTR [r15]
   1f4b7:	movsxd r14,DWORD PTR [rax]
   1f4ba:	call   b470 <libxl_get_physinfo@plt>
   1f4bf:	test   eax,eax
   1f4c1:	jne    1f590 <main_vcpulist+0x140>
   1f4c7:	lea    rax,[rip+0x12f21]        # 323ef <__PRETTY_FUNCTION__.10016+0x135f>
   1f4ce:	sub    rsp,0x8
   1f4d2:	lea    r9,[rip+0x127ab]        # 31c84 <__PRETTY_FUNCTION__.10016+0xbf4>
   1f4d9:	lea    r8,[rip+0x127a3]        # 31c83 <__PRETTY_FUNCTION__.10016+0xbf3>
   1f4e0:	lea    rcx,[rip+0xef2d]        # 2e414 <__func__.10421+0x8c>
   1f4e7:	lea    rdx,[rip+0xf011]        # 2e4ff <__func__.10421+0x177>
   1f4ee:	push   rax
   1f4ef:	lea    rax,[rip+0x12f10]        # 32406 <__PRETTY_FUNCTION__.10016+0x1376>
   1f4f6:	lea    rsi,[rip+0x12ed4]        # 323d1 <__PRETTY_FUNCTION__.10016+0x1341>
   1f4fd:	sub    ebx,r14d
   1f500:	mov    edi,0x1
   1f505:	push   rax
   1f506:	lea    rax,[rip+0x12f01]        # 3240e <__PRETTY_FUNCTION__.10016+0x137e>
   1f50d:	mov    ebp,ebx
   1f50f:	push   rax
   1f510:	xor    eax,eax
   1f512:	call   bd50 <__printf_chk@plt>
   1f517:	add    rsp,0x20
   1f51b:	cmp    ebx,0x0
   1f51e:	je     1f5b8 <main_vcpulist+0x168>
   1f524:	jle    1f557 <main_vcpulist+0x107>
   1f526:	lea    rbx,[r12+r14*8]
   1f52a:	lea    eax,[rbp-0x1]
   1f52d:	lea    rbp,[rbx+rax*8+0x8]
   1f532:	nop    WORD PTR [rax+rax*1+0x0]
   1f538:	mov    rdi,QWORD PTR [rbx]
   1f53b:	add    rbx,0x8
   1f53f:	call   eb40 <find_domain>
   1f544:	mov    edx,DWORD PTR [rsp+0x18]
   1f548:	mov    edi,eax
   1f54a:	lea    esi,[rdx+0x1]
   1f54d:	call   1f0c0 <print_domain_vcpuinfo>
   1f552:	cmp    rbx,rbp
   1f555:	jne    1f538 <main_vcpulist+0xe8>
   1f557:	mov    rdi,r13
   1f55a:	call   c070 <libxl_physinfo_dispose@plt>
   1f55f:	xor    eax,eax
   1f561:	mov    rcx,QWORD PTR [rsp+0x88]
   1f569:	xor    rcx,QWORD PTR fs:0x28
   1f572:	jne    1f62f <main_vcpulist+0x1df>
   1f578:	add    rsp,0x98
   1f57f:	pop    rbx
   1f580:	pop    rbp
   1f581:	pop    r12
   1f583:	pop    r13
   1f585:	pop    r14
   1f587:	pop    r15
   1f589:	ret    
   1f58a:	nop    WORD PTR [rax+rax*1+0x0]
   1f590:	mov    rax,QWORD PTR [rip+0x21ba59]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f597:	lea    rdi,[rip+0x12e1b]        # 323b9 <__PRETTY_FUNCTION__.10016+0x1329>
   1f59e:	mov    edx,0x17
   1f5a3:	mov    esi,0x1
   1f5a8:	mov    rcx,QWORD PTR [rax]
   1f5ab:	call   c1b0 <fwrite@plt>
   1f5b0:	jmp    1f557 <main_vcpulist+0x107>
   1f5b2:	nop    WORD PTR [rax+rax*1+0x0]
   1f5b8:	mov    rdi,QWORD PTR [r15]
   1f5bb:	lea    rsi,[rsp+0xc]
   1f5c0:	call   b830 <libxl_list_domain@plt>
   1f5c5:	test   rax,rax
   1f5c8:	mov    r12,rax
   1f5cb:	je     1f60a <main_vcpulist+0x1ba>
   1f5cd:	mov    esi,DWORD PTR [rsp+0xc]
   1f5d1:	lea    rbx,[rax+0x10]
   1f5d5:	test   esi,esi
   1f5d7:	jle    1f5fd <main_vcpulist+0x1ad>
   1f5d9:	nop    DWORD PTR [rax+0x0]
   1f5e0:	mov    eax,DWORD PTR [rsp+0x18]
   1f5e4:	mov    edi,DWORD PTR [rbx]
   1f5e6:	add    ebp,0x1
   1f5e9:	add    rbx,0x70
   1f5ed:	lea    esi,[rax+0x1]
   1f5f0:	call   1f0c0 <print_domain_vcpuinfo>
   1f5f5:	mov    esi,DWORD PTR [rsp+0xc]
   1f5f9:	cmp    ebp,esi
   1f5fb:	jl     1f5e0 <main_vcpulist+0x190>
   1f5fd:	mov    rdi,r12
   1f600:	call   b0e0 <libxl_dominfo_list_free@plt>
   1f605:	jmp    1f557 <main_vcpulist+0x107>
   1f60a:	mov    rax,QWORD PTR [rip+0x21b9df]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f611:	lea    rdi,[rip+0x12598]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   1f618:	mov    edx,0x1a
   1f61d:	mov    esi,0x1
   1f622:	mov    rcx,QWORD PTR [rax]
   1f625:	call   c1b0 <fwrite@plt>
   1f62a:	jmp    1f557 <main_vcpulist+0x107>
   1f62f:	call   b130 <__stack_chk_fail@plt>
   1f634:	xchg   ax,ax
   1f636:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001f640 <main_vcpupin>:
   1f640:	push   r15
   1f642:	push   r14
   1f644:	xor    r15d,r15d
   1f647:	push   r13
   1f649:	push   r12
   1f64b:	mov    r13d,0x1
   1f651:	push   rbp
   1f652:	push   rbx
   1f653:	mov    ebp,edi
   1f655:	mov    rbx,rsi
   1f658:	xor    r12d,r12d
   1f65b:	sub    rsp,0x528
   1f662:	lea    r14,[rsp+0x40]
   1f667:	mov    rax,QWORD PTR fs:0x28
   1f670:	mov    QWORD PTR [rsp+0x518],rax
   1f678:	xor    eax,eax
   1f67a:	mov    rdi,r14
   1f67d:	call   bc00 <libxl_bitmap_init@plt>
   1f682:	lea    rax,[rsp+0x50]
   1f687:	mov    rdi,rax
   1f68a:	mov    QWORD PTR [rsp+0x8],rax
   1f68f:	call   bc00 <libxl_bitmap_init@plt>
   1f694:	nop    DWORD PTR [rax+0x0]
   1f698:	lea    r8,[rip+0xa7d9]        # 29e78 <__PRETTY_FUNCTION__.10113+0x260>
   1f69f:	lea    rcx,[rip+0x21d19a]        # 23c840 <opts.8667>
   1f6a6:	lea    rdx,[rip+0x12d67]        # 32414 <__PRETTY_FUNCTION__.10016+0x1384>
   1f6ad:	mov    r9d,0x3
   1f6b3:	mov    rsi,rbx
   1f6b6:	mov    edi,ebp
   1f6b8:	call   ebe0 <def_getopt>
   1f6bd:	cmp    eax,0xffffffff
   1f6c0:	je     1f6e0 <main_vcpupin+0xa0>
   1f6c2:	cmp    eax,0x66
   1f6c5:	je     1f6d0 <main_vcpupin+0x90>
   1f6c7:	cmp    eax,0x69
   1f6ca:	cmove  r12d,r13d
   1f6ce:	jmp    1f698 <main_vcpupin+0x58>
   1f6d0:	mov    r15d,0x1
   1f6d6:	jmp    1f698 <main_vcpupin+0x58>
   1f6d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1f6e0:	mov    rax,QWORD PTR [rip+0x21b8c1]        # 23afa8 <optind@GLIBC_2.2.5>
   1f6e7:	movsxd rax,DWORD PTR [rax]
   1f6ea:	mov    rdi,QWORD PTR [rbx+rax*8]
   1f6ee:	call   eb40 <find_domain>
   1f6f3:	mov    DWORD PTR [rsp+0x2c],eax
   1f6f7:	mov    rax,QWORD PTR [rip+0x21b8aa]        # 23afa8 <optind@GLIBC_2.2.5>
   1f6fe:	mov    QWORD PTR [rsp+0x18],0x0
   1f707:	movsxd rdx,DWORD PTR [rax]
   1f70a:	mov    rax,rdx
   1f70d:	add    rdx,0x1
   1f711:	lea    rcx,[rdx*8+0x0]
   1f719:	add    eax,0x3
   1f71c:	mov    r8,QWORD PTR [rbx+rdx*8]
   1f720:	cmp    eax,ebp
   1f722:	mov    rsi,QWORD PTR [rbx+rcx*1+0x8]
   1f727:	mov    QWORD PTR [rsp+0x20],rsi
   1f72c:	jge    1f738 <main_vcpupin+0xf8>
   1f72e:	mov    rax,QWORD PTR [rbx+rcx*1+0x10]
   1f733:	mov    QWORD PTR [rsp+0x18],rax
   1f738:	lea    rsi,[rsp+0x38]
   1f73d:	mov    rdi,r8
   1f740:	mov    edx,0xa
   1f745:	mov    QWORD PTR [rsp+0x10],r8
   1f74a:	call   b7b0 <strtol@plt>
   1f74f:	mov    r8,QWORD PTR [rsp+0x10]
   1f754:	cmp    QWORD PTR [rsp+0x38],r8
   1f759:	mov    r13,rax
   1f75c:	je     1f7c8 <main_vcpupin+0x188>
   1f75e:	test   rax,rax
   1f761:	js     1f7c8 <main_vcpupin+0x188>
   1f763:	lea    rax,[rip+0x21d6f6]        # 23ce60 <ctx>
   1f76a:	xor    edx,edx
   1f76c:	mov    rsi,r14
   1f76f:	mov    rdi,QWORD PTR [rax]
   1f772:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1f777:	test   eax,eax
   1f779:	je     1f820 <main_vcpupin+0x1e0>
   1f77f:	mov    ebx,0x1
   1f784:	mov    rdi,QWORD PTR [rsp+0x8]
   1f789:	call   bdb0 <libxl_bitmap_dispose@plt>
   1f78e:	mov    rdi,r14
   1f791:	call   bdb0 <libxl_bitmap_dispose@plt>
   1f796:	mov    rcx,QWORD PTR [rsp+0x518]
   1f79e:	xor    rcx,QWORD PTR fs:0x28
   1f7a7:	mov    eax,ebx
   1f7a9:	jne    1fc0c <main_vcpupin+0x5cc>
   1f7af:	add    rsp,0x528
   1f7b6:	pop    rbx
   1f7b7:	pop    rbp
   1f7b8:	pop    r12
   1f7ba:	pop    r13
   1f7bc:	pop    r14
   1f7be:	pop    r15
   1f7c0:	ret    
   1f7c1:	nop    DWORD PTR [rax+0x0]
   1f7c8:	lea    rdi,[rip+0xe92c]        # 2e0fb <__PRETTY_FUNCTION__.10113+0x44e3>
   1f7cf:	mov    ecx,0x4
   1f7d4:	mov    rsi,r8
   1f7d7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1f7d9:	seta   al
   1f7dc:	sbb    al,0x0
   1f7de:	test   al,al
   1f7e0:	jne    1f920 <main_vcpupin+0x2e0>
   1f7e6:	test   r15b,r15b
   1f7e9:	mov    r13,0xffffffffffffffff
   1f7f0:	je     1f763 <main_vcpupin+0x123>
   1f7f6:	mov    rax,QWORD PTR [rip+0x21b7f3]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f7fd:	lea    rdi,[rip+0x12d1c]        # 32520 <__PRETTY_FUNCTION__.10016+0x1490>
   1f804:	mov    edx,0x2e
   1f809:	mov    esi,0x1
   1f80e:	mov    ebx,0x1
   1f813:	mov    rcx,QWORD PTR [rax]
   1f816:	call   c1b0 <fwrite@plt>
   1f81b:	jmp    1f784 <main_vcpupin+0x144>
   1f820:	lea    rax,[rip+0x21d639]        # 23ce60 <ctx>
   1f827:	mov    rsi,QWORD PTR [rsp+0x8]
   1f82c:	xor    edx,edx
   1f82e:	mov    rdi,QWORD PTR [rax]
   1f831:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1f836:	test   eax,eax
   1f838:	mov    ebx,eax
   1f83a:	jne    1f77f <main_vcpupin+0x13f>
   1f840:	lea    rdx,[rip+0x1214a]        # 31991 <__PRETTY_FUNCTION__.10016+0x901>
   1f847:	mov    rsi,QWORD PTR [rsp+0x20]
   1f84c:	mov    ecx,0x2
   1f851:	mov    rdi,rdx
   1f854:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1f856:	seta   al
   1f859:	sbb    al,0x0
   1f85b:	xor    r9d,r9d
   1f85e:	test   al,al
   1f860:	jne    1f996 <main_vcpupin+0x356>
   1f866:	mov    rax,QWORD PTR [rip+0x21b73b]        # 23afa8 <optind@GLIBC_2.2.5>
   1f86d:	mov    eax,DWORD PTR [rax]
   1f86f:	add    eax,0x3
   1f872:	cmp    eax,ebp
   1f874:	jge    1f94a <main_vcpupin+0x30a>
   1f87a:	mov    rsi,QWORD PTR [rsp+0x18]
   1f87f:	mov    ecx,0x2
   1f884:	mov    rdi,rdx
   1f887:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1f889:	seta   al
   1f88c:	sbb    al,0x0
   1f88e:	xor    ebp,ebp
   1f890:	test   al,al
   1f892:	jne    1f96d <main_vcpupin+0x32d>
   1f898:	lea    rax,[rip+0x21d5f1]        # 23ce90 <dryrun_only>
   1f89f:	mov    eax,DWORD PTR [rax]
   1f8a1:	test   eax,eax
   1f8a3:	jne    1f9bd <main_vcpupin+0x37d>
   1f8a9:	test   r12b,r12b
   1f8ac:	mov    DWORD PTR [rsp+0x10],0x1
   1f8b4:	je     1fa90 <main_vcpupin+0x450>
   1f8ba:	lea    rax,[rip+0x21d59f]        # 23ce60 <ctx>
   1f8c1:	test   r15b,r15b
   1f8c4:	mov    rdi,QWORD PTR [rax]
   1f8c7:	jne    1f951 <main_vcpupin+0x311>
   1f8cd:	cmp    r13,0xffffffffffffffff
   1f8d1:	je     1faf4 <main_vcpupin+0x4b4>
   1f8d7:	mov    esi,DWORD PTR [rsp+0x2c]
   1f8db:	mov    r8,rbp
   1f8de:	mov    rcx,r9
   1f8e1:	mov    edx,r13d
   1f8e4:	call   bd00 <libxl_set_vcpuaffinity@plt>
   1f8e9:	test   eax,eax
   1f8eb:	je     1f784 <main_vcpupin+0x144>
   1f8f1:	mov    rax,QWORD PTR [rip+0x21b6f8]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f8f8:	lea    rdx,[rip+0x12c81]        # 32580 <__PRETTY_FUNCTION__.10016+0x14f0>
   1f8ff:	mov    rcx,r13
   1f902:	mov    esi,0x1
   1f907:	mov    rdi,QWORD PTR [rax]
   1f90a:	xor    eax,eax
   1f90c:	call   c1e0 <__fprintf_chk@plt>
   1f911:	mov    ebx,DWORD PTR [rsp+0x10]
   1f915:	jmp    1f784 <main_vcpupin+0x144>
   1f91a:	nop    WORD PTR [rax+rax*1+0x0]
   1f920:	mov    rax,QWORD PTR [rip+0x21b6c9]        # 23aff0 <stderr@GLIBC_2.2.5>
   1f927:	lea    rdx,[rip+0x12bca]        # 324f8 <__PRETTY_FUNCTION__.10016+0x1468>
   1f92e:	mov    rcx,r8
   1f931:	mov    esi,0x1
   1f936:	mov    ebx,0x1
   1f93b:	mov    rdi,QWORD PTR [rax]
   1f93e:	xor    eax,eax
   1f940:	call   c1e0 <__fprintf_chk@plt>
   1f945:	jmp    1f784 <main_vcpupin+0x144>
   1f94a:	xor    ebp,ebp
   1f94c:	jmp    1f898 <main_vcpupin+0x258>
   1f951:	mov    esi,DWORD PTR [rsp+0x2c]
   1f955:	mov    r8,rbp
   1f958:	mov    rcx,r9
   1f95b:	mov    edx,r13d
   1f95e:	call   bbb0 <libxl_set_vcpuaffinity_force@plt>
   1f963:	test   eax,eax
   1f965:	je     1f784 <main_vcpupin+0x144>
   1f96b:	jmp    1f8f1 <main_vcpupin+0x2b1>
   1f96d:	mov    rbp,QWORD PTR [rsp+0x8]
   1f972:	mov    rdi,QWORD PTR [rsp+0x18]
   1f977:	mov    QWORD PTR [rsp+0x10],r9
   1f97c:	mov    rsi,rbp
   1f97f:	call   11910 <parse_cpurange>
   1f984:	test   eax,eax
   1f986:	jne    1f77f <main_vcpupin+0x13f>
   1f98c:	mov    r9,QWORD PTR [rsp+0x10]
   1f991:	jmp    1f898 <main_vcpupin+0x258>
   1f996:	mov    rdi,QWORD PTR [rsp+0x20]
   1f99b:	mov    rsi,r14
   1f99e:	mov    QWORD PTR [rsp+0x10],rdx
   1f9a3:	call   11910 <parse_cpurange>
   1f9a8:	test   eax,eax
   1f9aa:	jne    1f77f <main_vcpupin+0x13f>
   1f9b0:	mov    r9,r14
   1f9b3:	mov    rdx,QWORD PTR [rsp+0x10]
   1f9b8:	jmp    1f866 <main_vcpupin+0x226>
   1f9bd:	lea    rax,[rip+0x21d49c]        # 23ce60 <ctx>
   1f9c4:	mov    QWORD PTR [rsp+0x10],r9
   1f9c9:	mov    rdi,QWORD PTR [rax]
   1f9cc:	call   baa0 <libxl_get_max_cpus@plt>
   1f9d1:	test   eax,eax
   1f9d3:	mov    DWORD PTR [rsp+0x30],eax
   1f9d7:	mov    r9,QWORD PTR [rsp+0x10]
   1f9dc:	js     1fb55 <main_vcpupin+0x515>
   1f9e2:	mov    r12,QWORD PTR [rip+0x21b5b7]        # 23afa0 <stdout@GLIBC_2.2.5>
   1f9e9:	lea    rdi,[rip+0x12a44]        # 32434 <__PRETTY_FUNCTION__.10016+0x13a4>
   1f9f0:	mov    edx,0x8
   1f9f5:	mov    esi,0x1
   1f9fa:	mov    QWORD PTR [rsp+0x10],r9
   1f9ff:	mov    rcx,QWORD PTR [r12]
   1fa03:	call   c1b0 <fwrite@plt>
   1fa08:	mov    r9,QWORD PTR [rsp+0x10]
   1fa0d:	test   r9,r9
   1fa10:	je     1fbab <main_vcpupin+0x56b>
   1fa16:	mov    rdi,QWORD PTR [r9+0x8]
   1fa1a:	mov    rdx,QWORD PTR [r12]
   1fa1e:	mov    esi,DWORD PTR [rsp+0x30]
   1fa22:	call   ede0 <print_bitmap>
   1fa27:	test   rbp,rbp
   1fa2a:	mov    rsi,QWORD PTR [r12]
   1fa2e:	je     1fa4f <main_vcpupin+0x40f>
   1fa30:	mov    edi,0x20
   1fa35:	call   b540 <fputc@plt>
   1fa3a:	mov    esi,DWORD PTR [rsp+0x30]
   1fa3e:	mov    rdi,QWORD PTR [rbp+0x8]
   1fa42:	mov    rdx,QWORD PTR [r12]
   1fa46:	call   ede0 <print_bitmap>
   1fa4b:	mov    rsi,QWORD PTR [r12]
   1fa4f:	mov    edi,0xa
   1fa54:	call   b540 <fputc@plt>
   1fa59:	mov    rdi,QWORD PTR [r12]
   1fa5d:	call   aec0 <ferror@plt>
   1fa62:	test   eax,eax
   1fa64:	jne    1fa77 <main_vcpupin+0x437>
   1fa66:	mov    rdi,QWORD PTR [r12]
   1fa6a:	call   ba30 <fflush@plt>
   1fa6f:	test   eax,eax
   1fa71:	je     1f784 <main_vcpupin+0x144>
   1fa77:	lea    rdi,[rip+0xe64a]        # 2e0c8 <__PRETTY_FUNCTION__.10113+0x44b0>
   1fa7e:	call   bfd0 <perror@plt>
   1fa83:	mov    edi,0x1
   1fa88:	call   c1a0 <exit@plt>
   1fa8d:	nop    DWORD PTR [rax]
   1fa90:	lea    r12,[rsp+0x60]
   1fa95:	mov    QWORD PTR [rsp+0x18],r9
   1fa9a:	mov    rdi,r12
   1fa9d:	call   b6e0 <libxl_domain_config_init@plt>
   1faa2:	lea    rax,[rip+0x21d3b7]        # 23ce60 <ctx>
   1faa9:	mov    esi,DWORD PTR [rsp+0x2c]
   1faad:	mov    rdx,r12
   1fab0:	mov    rdi,QWORD PTR [rax]
   1fab3:	call   c430 <libxl_retrieve_domain_configuration@plt>
   1fab8:	test   eax,eax
   1faba:	mov    DWORD PTR [rsp+0x10],eax
   1fabe:	mov    r9,QWORD PTR [rsp+0x18]
   1fac3:	jne    1fb7a <main_vcpupin+0x53a>
   1fac9:	mov    edi,DWORD PTR [rsp+0x258]
   1fad0:	mov    rsi,r9
   1fad3:	mov    edx,0x1
   1fad8:	mov    QWORD PTR [rsp+0x18],r9
   1fadd:	call   1f2a0 <apply_global_affinity_masks>
   1fae2:	mov    rdi,r12
   1fae5:	call   bb40 <libxl_domain_config_dispose@plt>
   1faea:	mov    r9,QWORD PTR [rsp+0x18]
   1faef:	jmp    1f8ba <main_vcpupin+0x27a>
   1faf4:	mov    esi,DWORD PTR [rsp+0x2c]
   1faf8:	lea    rcx,[rsp+0x30]
   1fafd:	lea    rdx,[rsp+0x34]
   1fb02:	mov    QWORD PTR [rsp+0x18],r9
   1fb07:	call   c2e0 <libxl_list_vcpu@plt>
   1fb0c:	test   rax,rax
   1fb0f:	mov    rbx,rax
   1fb12:	mov    r9,QWORD PTR [rsp+0x18]
   1fb17:	je     1fbbe <main_vcpupin+0x57e>
   1fb1d:	lea    rax,[rip+0x21d33c]        # 23ce60 <ctx>
   1fb24:	mov    edx,DWORD PTR [rsp+0x34]
   1fb28:	mov    r8,rbp
   1fb2b:	mov    esi,DWORD PTR [rsp+0x2c]
   1fb2f:	mov    rcx,r9
   1fb32:	mov    rdi,QWORD PTR [rax]
   1fb35:	call   c320 <libxl_set_vcpuaffinity_all@plt>
   1fb3a:	test   eax,eax
   1fb3c:	jne    1fbe7 <main_vcpupin+0x5a7>
   1fb42:	mov    esi,DWORD PTR [rsp+0x34]
   1fb46:	mov    rdi,rbx
   1fb49:	xor    ebx,ebx
   1fb4b:	call   b100 <libxl_vcpuinfo_list_free@plt>
   1fb50:	jmp    1f784 <main_vcpupin+0x144>
   1fb55:	mov    rax,QWORD PTR [rip+0x21b494]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fb5c:	lea    rdi,[rip+0x128b5]        # 32418 <__PRETTY_FUNCTION__.10016+0x1388>
   1fb63:	mov    edx,0x1b
   1fb68:	mov    esi,0x1
   1fb6d:	mov    rcx,QWORD PTR [rax]
   1fb70:	call   c1b0 <fwrite@plt>
   1fb75:	jmp    1f77f <main_vcpupin+0x13f>
   1fb7a:	mov    rax,QWORD PTR [rip+0x21b46f]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fb81:	lea    rdi,[rip+0x129c8]        # 32550 <__PRETTY_FUNCTION__.10016+0x14c0>
   1fb88:	mov    edx,0x28
   1fb8d:	mov    esi,0x1
   1fb92:	mov    rcx,QWORD PTR [rax]
   1fb95:	call   c1b0 <fwrite@plt>
   1fb9a:	mov    rdi,r12
   1fb9d:	call   bb40 <libxl_domain_config_dispose@plt>
   1fba2:	mov    ebx,DWORD PTR [rsp+0x10]
   1fba6:	jmp    1f784 <main_vcpupin+0x144>
   1fbab:	mov    rsi,QWORD PTR [r12]
   1fbaf:	mov    edi,0x2d
   1fbb4:	call   b540 <fputc@plt>
   1fbb9:	jmp    1fa27 <main_vcpupin+0x3e7>
   1fbbe:	mov    rax,QWORD PTR [rip+0x21b42b]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fbc5:	lea    rdi,[rip+0x12871]        # 3243d <__PRETTY_FUNCTION__.10016+0x13ad>
   1fbcc:	mov    edx,0x18
   1fbd1:	mov    esi,0x1
   1fbd6:	mov    rcx,QWORD PTR [rax]
   1fbd9:	call   c1b0 <fwrite@plt>
   1fbde:	mov    ebx,DWORD PTR [rsp+0x10]
   1fbe2:	jmp    1f784 <main_vcpupin+0x144>
   1fbe7:	mov    rax,QWORD PTR [rip+0x21b402]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fbee:	lea    rdi,[rip+0x12861]        # 32456 <__PRETTY_FUNCTION__.10016+0x13c6>
   1fbf5:	mov    edx,0x18
   1fbfa:	mov    esi,0x1
   1fbff:	mov    rcx,QWORD PTR [rax]
   1fc02:	call   c1b0 <fwrite@plt>
   1fc07:	jmp    1fb42 <main_vcpupin+0x502>
   1fc0c:	call   b130 <__stack_chk_fail@plt>
   1fc11:	nop    DWORD PTR [rax+rax*1+0x0]
   1fc16:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001fc20 <main_vcpuset>:
   1fc20:	push   r15
   1fc22:	push   r14
   1fc24:	push   r13
   1fc26:	push   r12
   1fc28:	xor    r13d,r13d
   1fc2b:	push   rbp
   1fc2c:	push   rbx
   1fc2d:	mov    r12d,edi
   1fc30:	mov    rbp,rsi
   1fc33:	mov    ebx,0x1
   1fc38:	sub    rsp,0xb8
   1fc3f:	mov    rax,QWORD PTR fs:0x28
   1fc48:	mov    QWORD PTR [rsp+0xa8],rax
   1fc50:	xor    eax,eax
   1fc52:	jmp    1fc5f <main_vcpuset+0x3f>
   1fc54:	nop    DWORD PTR [rax+0x0]
   1fc58:	cmp    eax,0x69
   1fc5b:	cmove  ebx,r13d
   1fc5f:	lea    r8,[rip+0xa239]        # 29e9f <__PRETTY_FUNCTION__.10113+0x287>
   1fc66:	lea    rcx,[rip+0x21cb73]        # 23c7e0 <opts.8714>
   1fc6d:	lea    rdx,[rip+0x127fb]        # 3246f <__PRETTY_FUNCTION__.10016+0x13df>
   1fc74:	mov    r9d,0x2
   1fc7a:	mov    rsi,rbp
   1fc7d:	mov    edi,r12d
   1fc80:	call   ebe0 <def_getopt>
   1fc85:	cmp    eax,0xffffffff
   1fc88:	jne    1fc58 <main_vcpuset+0x38>
   1fc8a:	mov    rax,QWORD PTR [rip+0x21b317]        # 23afa8 <optind@GLIBC_2.2.5>
   1fc91:	movsxd rax,DWORD PTR [rax]
   1fc94:	add    rax,0x1
   1fc98:	mov    rdi,QWORD PTR [rbp+rax*8-0x8]
   1fc9d:	mov    r14,QWORD PTR [rbp+rax*8+0x0]
   1fca2:	lea    rbp,[rsp+0x20]
   1fca7:	call   eb40 <find_domain>
   1fcac:	mov    rdi,rbp
   1fcaf:	mov    r13d,eax
   1fcb2:	call   bc00 <libxl_bitmap_init@plt>
   1fcb7:	lea    rsi,[rsp+0x18]
   1fcbc:	mov    edx,0xa
   1fcc1:	mov    rdi,r14
   1fcc4:	call   c090 <strtoul@plt>
   1fcc9:	cmp    QWORD PTR [rsp+0x18],r14
   1fcce:	mov    r12,rax
   1fcd1:	je     1fd60 <main_vcpuset+0x140>
   1fcd7:	cmp    rax,0x7fffffff
   1fcdd:	ja     1fd60 <main_vcpuset+0x140>
   1fce3:	lea    r14,[rip+0x21d176]        # 23ce60 <ctx>
   1fcea:	test   ebx,ebx
   1fcec:	mov    rdi,QWORD PTR [r14]
   1fcef:	je     1fdb3 <main_vcpuset+0x193>
   1fcf5:	call   baa0 <libxl_get_max_cpus@plt>
   1fcfa:	lea    r15,[rsp+0x30]
   1fcff:	mov    rdi,QWORD PTR [r14]
   1fd02:	mov    edx,r13d
   1fd05:	mov    DWORD PTR [rsp+0x8],eax
   1fd09:	mov    rsi,r15
   1fd0c:	call   b5b0 <libxl_domain_info@plt>
   1fd11:	test   eax,eax
   1fd13:	jne    1fd85 <main_vcpuset+0x165>
   1fd15:	mov    eax,DWORD PTR [rsp+0x94]
   1fd1c:	mov    rdi,r15
   1fd1f:	mov    DWORD PTR [rsp+0xc],eax
   1fd23:	call   b8d0 <libxl_dominfo_dispose@plt>
   1fd28:	mov    eax,DWORD PTR [rsp+0xc]
   1fd2c:	cmp    r12,rax
   1fd2f:	jbe    1fdb0 <main_vcpuset+0x190>
   1fd31:	mov    eax,DWORD PTR [rsp+0x8]
   1fd35:	cmp    r12,rax
   1fd38:	jbe    1fdb0 <main_vcpuset+0x190>
   1fd3a:	mov    rax,QWORD PTR [rip+0x21b2af]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fd41:	mov    ecx,DWORD PTR [rsp+0x8]
   1fd45:	lea    rdx,[rip+0x1285c]        # 325a8 <__PRETTY_FUNCTION__.10016+0x1518>
   1fd4c:	mov    r8,r12
   1fd4f:	mov    esi,0x1
   1fd54:	mov    rdi,QWORD PTR [rax]
   1fd57:	xor    eax,eax
   1fd59:	call   c1e0 <__fprintf_chk@plt>
   1fd5e:	jmp    1fd85 <main_vcpuset+0x165>
   1fd60:	mov    rax,QWORD PTR [rip+0x21b289]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fd67:	lea    rdi,[rip+0x12704]        # 32472 <__PRETTY_FUNCTION__.10016+0x13e2>
   1fd6e:	mov    edx,0x19
   1fd73:	mov    esi,0x1
   1fd78:	mov    ebx,0x1
   1fd7d:	mov    rcx,QWORD PTR [rax]
   1fd80:	call   c1b0 <fwrite@plt>
   1fd85:	mov    rcx,QWORD PTR [rsp+0xa8]
   1fd8d:	xor    rcx,QWORD PTR fs:0x28
   1fd96:	mov    eax,ebx
   1fd98:	jne    1fe86 <main_vcpuset+0x266>
   1fd9e:	add    rsp,0xb8
   1fda5:	pop    rbx
   1fda6:	pop    rbp
   1fda7:	pop    r12
   1fda9:	pop    r13
   1fdab:	pop    r14
   1fdad:	pop    r15
   1fdaf:	ret    
   1fdb0:	mov    rdi,QWORD PTR [r14]
   1fdb3:	mov    edx,r12d
   1fdb6:	mov    rsi,rbp
   1fdb9:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   1fdbe:	test   eax,eax
   1fdc0:	jne    1fe10 <main_vcpuset+0x1f0>
   1fdc2:	xor    ebx,ebx
   1fdc4:	test   r12,r12
   1fdc7:	mov    r15d,r12d
   1fdca:	je     1fde2 <main_vcpuset+0x1c2>
   1fdcc:	nop    DWORD PTR [rax+0x0]
   1fdd0:	mov    esi,ebx
   1fdd2:	mov    rdi,rbp
   1fdd5:	add    ebx,0x1
   1fdd8:	call   b7d0 <libxl_bitmap_set@plt>
   1fddd:	cmp    ebx,r15d
   1fde0:	jne    1fdd0 <main_vcpuset+0x1b0>
   1fde2:	mov    rdi,QWORD PTR [r14]
   1fde5:	mov    rdx,rbp
   1fde8:	mov    esi,r13d
   1fdeb:	call   b490 <libxl_set_vcpuonline@plt>
   1fdf0:	cmp    eax,0xffffffeb
   1fdf3:	mov    ebx,eax
   1fdf5:	je     1fe61 <main_vcpuset+0x241>
   1fdf7:	test   eax,eax
   1fdf9:	jne    1fe39 <main_vcpuset+0x219>
   1fdfb:	mov    rdi,rbp
   1fdfe:	call   bdb0 <libxl_bitmap_dispose@plt>
   1fe03:	test   ebx,ebx
   1fe05:	setne  bl
   1fe08:	movzx  ebx,bl
   1fe0b:	jmp    1fd85 <main_vcpuset+0x165>
   1fe10:	mov    ecx,eax
   1fe12:	mov    rax,QWORD PTR [rip+0x21b1d7]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fe19:	lea    rdx,[rip+0x127f8]        # 32618 <__PRETTY_FUNCTION__.10016+0x1588>
   1fe20:	mov    esi,0x1
   1fe25:	mov    ebx,0x1
   1fe2a:	mov    rdi,QWORD PTR [rax]
   1fe2d:	xor    eax,eax
   1fe2f:	call   c1e0 <__fprintf_chk@plt>
   1fe34:	jmp    1fd85 <main_vcpuset+0x165>
   1fe39:	mov    r9d,eax
   1fe3c:	mov    rax,QWORD PTR [rip+0x21b1ad]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fe43:	lea    rdx,[rip+0x127f6]        # 32640 <__PRETTY_FUNCTION__.10016+0x15b0>
   1fe4a:	mov    r8,r12
   1fe4d:	mov    ecx,r13d
   1fe50:	mov    esi,0x1
   1fe55:	mov    rdi,QWORD PTR [rax]
   1fe58:	xor    eax,eax
   1fe5a:	call   c1e0 <__fprintf_chk@plt>
   1fe5f:	jmp    1fdfb <main_vcpuset+0x1db>
   1fe61:	mov    rax,QWORD PTR [rip+0x21b188]        # 23aff0 <stderr@GLIBC_2.2.5>
   1fe68:	lea    rdx,[rip+0x1261d]        # 3248c <__PRETTY_FUNCTION__.10016+0x13fc>
   1fe6f:	mov    ecx,r13d
   1fe72:	mov    esi,0x1
   1fe77:	mov    rdi,QWORD PTR [rax]
   1fe7a:	xor    eax,eax
   1fe7c:	call   c1e0 <__fprintf_chk@plt>
   1fe81:	jmp    1fdfb <main_vcpuset+0x1db>
   1fe86:	call   b130 <__stack_chk_fail@plt>
   1fe8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001fe90 <cd_insert>:
   1fe90:	push   rbp
   1fe91:	push   rbx
   1fe92:	mov    ebp,edi
   1fe94:	sub    rsp,0x138
   1fe9b:	mov    rax,QWORD PTR fs:0x28
   1fea4:	mov    QWORD PTR [rsp+0x128],rax
   1feac:	xor    eax,eax
   1feae:	lea    rax,[rip+0xf4b2]        # 2f367 <__func__.10421+0xfdf>
   1feb5:	test   rdx,rdx
   1feb8:	mov    rdi,rsp
   1febb:	mov    QWORD PTR [rsp],0x0
   1fec3:	mov    QWORD PTR [rsp+0x8],0x0
   1fecc:	lea    rbx,[rsp+0x10]
   1fed1:	cmove  rdx,rax
   1fed5:	xor    eax,eax
   1fed7:	mov    rcx,rdx
   1feda:	mov    rdx,rsi
   1fedd:	lea    rsi,[rip+0x127bc]        # 326a0 <__PRETTY_FUNCTION__.10016+0x1610>
   1fee4:	call   e8e0 <xasprintf>
   1fee9:	mov    rsi,QWORD PTR [rsp]
   1feed:	lea    rdi,[rsp+0x8]
   1fef2:	mov    rdx,rbx
   1fef5:	call   11820 <parse_disk_config>
   1fefa:	cmp    DWORD PTR [rsp+0x34],0x5
   1feff:	je     1ff1c <cd_insert+0x8c>
   1ff01:	mov    rsi,QWORD PTR [rsp+0x20]
   1ff06:	lea    rdx,[rsp+0x90]
   1ff0e:	mov    edi,0x1
   1ff13:	call   b910 <__xstat@plt>
   1ff18:	test   eax,eax
   1ff1a:	jne    1ff70 <cd_insert+0xe0>
   1ff1c:	lea    rax,[rip+0x21cf3d]        # 23ce60 <ctx>
   1ff23:	xor    ecx,ecx
   1ff25:	mov    esi,ebp
   1ff27:	mov    rdx,rbx
   1ff2a:	xor    ebp,ebp
   1ff2c:	mov    rdi,QWORD PTR [rax]
   1ff2f:	call   adb0 <libxl_cdrom_insert@plt>
   1ff34:	test   eax,eax
   1ff36:	setne  bpl
   1ff3a:	mov    rdi,rbx
   1ff3d:	call   bf00 <libxl_device_disk_dispose@plt>
   1ff42:	mov    rdi,QWORD PTR [rsp]
   1ff46:	call   ac40 <free@plt>
   1ff4b:	mov    rcx,QWORD PTR [rsp+0x128]
   1ff53:	xor    rcx,QWORD PTR fs:0x28
   1ff5c:	mov    eax,ebp
   1ff5e:	jne    1ff99 <cd_insert+0x109>
   1ff60:	add    rsp,0x138
   1ff67:	pop    rbx
   1ff68:	pop    rbp
   1ff69:	ret    
   1ff6a:	nop    WORD PTR [rax+rax*1+0x0]
   1ff70:	mov    rax,QWORD PTR [rip+0x21b079]        # 23aff0 <stderr@GLIBC_2.2.5>
   1ff77:	mov    rcx,QWORD PTR [rsp+0x20]
   1ff7c:	lea    rdx,[rip+0x12705]        # 32688 <__PRETTY_FUNCTION__.10016+0x15f8>
   1ff83:	mov    esi,0x1
   1ff88:	mov    ebp,0x1
   1ff8d:	mov    rdi,QWORD PTR [rax]
   1ff90:	xor    eax,eax
   1ff92:	call   c1e0 <__fprintf_chk@plt>
   1ff97:	jmp    1ff3a <cd_insert+0xaa>
   1ff99:	call   b130 <__stack_chk_fail@plt>
   1ff9e:	xchg   ax,ax

000000000001ffa0 <main_cd_eject>:
   1ffa0:	push   r12
   1ffa2:	push   rbp
   1ffa3:	lea    rbp,[rip+0x9e6d]        # 29e17 <__PRETTY_FUNCTION__.10113+0x1ff>
   1ffaa:	push   rbx
   1ffab:	mov    r12d,edi
   1ffae:	mov    rbx,rsi
   1ffb1:	nop    DWORD PTR [rax+0x0]
   1ffb8:	lea    rdx,[rip+0x11783]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   1ffbf:	xor    ecx,ecx
   1ffc1:	mov    r9d,0x2
   1ffc7:	mov    r8,rbp
   1ffca:	mov    rsi,rbx
   1ffcd:	mov    edi,r12d
   1ffd0:	call   ebe0 <def_getopt>
   1ffd5:	cmp    eax,0xffffffff
   1ffd8:	jne    1ffb8 <main_cd_eject+0x18>
   1ffda:	mov    rbp,QWORD PTR [rip+0x21afc7]        # 23afa8 <optind@GLIBC_2.2.5>
   1ffe1:	movsxd rax,DWORD PTR [rbp+0x0]
   1ffe5:	mov    rdi,QWORD PTR [rbx+rax*8]
   1ffe9:	call   eb40 <find_domain>
   1ffee:	movsxd rdx,DWORD PTR [rbp+0x0]
   1fff2:	mov    edi,eax
   1fff4:	mov    rsi,QWORD PTR [rbx+rdx*8+0x8]
   1fff9:	xor    edx,edx
   1fffb:	call   1fe90 <cd_insert>
   20000:	test   eax,eax
   20002:	setne  al
   20005:	pop    rbx
   20006:	movzx  eax,al
   20009:	pop    rbp
   2000a:	pop    r12
   2000c:	ret    
   2000d:	nop    DWORD PTR [rax]

0000000000020010 <main_cd_insert>:
   20010:	push   r12
   20012:	push   rbp
   20013:	lea    rbp,[rip+0x9df3]        # 29e0d <__PRETTY_FUNCTION__.10113+0x1f5>
   2001a:	push   rbx
   2001b:	mov    r12d,edi
   2001e:	mov    rbx,rsi
   20021:	nop    DWORD PTR [rax+0x0]
   20028:	lea    rdx,[rip+0x11713]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2002f:	xor    ecx,ecx
   20031:	mov    r9d,0x3
   20037:	mov    r8,rbp
   2003a:	mov    rsi,rbx
   2003d:	mov    edi,r12d
   20040:	call   ebe0 <def_getopt>
   20045:	cmp    eax,0xffffffff
   20048:	jne    20028 <main_cd_insert+0x18>
   2004a:	mov    rbp,QWORD PTR [rip+0x21af57]        # 23afa8 <optind@GLIBC_2.2.5>
   20051:	movsxd rax,DWORD PTR [rbp+0x0]
   20055:	mov    rdi,QWORD PTR [rbx+rax*8]
   20059:	call   eb40 <find_domain>
   2005e:	movsxd rcx,DWORD PTR [rbp+0x0]
   20062:	mov    edi,eax
   20064:	add    rcx,0x1
   20068:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   2006d:	mov    rsi,QWORD PTR [rbx+rcx*8]
   20071:	call   1fe90 <cd_insert>
   20076:	test   eax,eax
   20078:	setne  al
   2007b:	pop    rbx
   2007c:	movzx  eax,al
   2007f:	pop    rbp
   20080:	pop    r12
   20082:	ret    
   20083:	nop    WORD PTR cs:[rax+rax*1+0x0]
   2008d:	nop    DWORD PTR [rax]

0000000000020090 <main_memmax>:
   20090:	push   r12
   20092:	push   rbp
   20093:	lea    rbp,[rip+0x9d9f]        # 29e39 <__PRETTY_FUNCTION__.10113+0x221>
   2009a:	push   rbx
   2009b:	mov    r12d,edi
   2009e:	mov    rbx,rsi
   200a1:	nop    DWORD PTR [rax+0x0]
   200a8:	lea    rdx,[rip+0x11693]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   200af:	xor    ecx,ecx
   200b1:	mov    r9d,0x2
   200b7:	mov    r8,rbp
   200ba:	mov    rsi,rbx
   200bd:	mov    edi,r12d
   200c0:	call   ebe0 <def_getopt>
   200c5:	cmp    eax,0xffffffff
   200c8:	jne    200a8 <main_memmax+0x18>
   200ca:	mov    rbp,QWORD PTR [rip+0x21aed7]        # 23afa8 <optind@GLIBC_2.2.5>
   200d1:	movsxd rax,DWORD PTR [rbp+0x0]
   200d5:	mov    rdi,QWORD PTR [rbx+rax*8]
   200d9:	call   eb40 <find_domain>
   200de:	mov    r12d,eax
   200e1:	movsxd rax,DWORD PTR [rbp+0x0]
   200e5:	mov    rbx,QWORD PTR [rbx+rax*8+0x8]
   200ea:	mov    rdi,rbx
   200ed:	call   13430 <parse_mem_size_kb>
   200f2:	cmp    rax,0xffffffffffffffff
   200f6:	je     20150 <main_memmax+0xc0>
   200f8:	mov    rdx,rax
   200fb:	lea    rax,[rip+0x21cd5e]        # 23ce60 <ctx>
   20102:	mov    esi,r12d
   20105:	mov    rdi,QWORD PTR [rax]
   20108:	call   c130 <libxl_domain_setmaxmem@plt>
   2010d:	test   eax,eax
   2010f:	jne    20120 <main_memmax+0x90>
   20111:	pop    rbx
   20112:	pop    rbp
   20113:	pop    r12
   20115:	ret    
   20116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   20120:	mov    rax,QWORD PTR [rip+0x21aec9]        # 23aff0 <stderr@GLIBC_2.2.5>
   20127:	lea    rdx,[rip+0x125ca]        # 326f8 <__PRETTY_FUNCTION__.10016+0x1668>
   2012e:	mov    r8,rbx
   20131:	mov    ecx,r12d
   20134:	mov    esi,0x1
   20139:	mov    rdi,QWORD PTR [rax]
   2013c:	xor    eax,eax
   2013e:	call   c1e0 <__fprintf_chk@plt>
   20143:	pop    rbx
   20144:	mov    eax,0x1
   20149:	pop    rbp
   2014a:	pop    r12
   2014c:	ret    
   2014d:	nop    DWORD PTR [rax]
   20150:	mov    rax,QWORD PTR [rip+0x21ae99]        # 23aff0 <stderr@GLIBC_2.2.5>
   20157:	lea    rdx,[rip+0x1256b]        # 326c9 <__PRETTY_FUNCTION__.10016+0x1639>
   2015e:	mov    rcx,rbx
   20161:	mov    esi,0x1
   20166:	mov    rdi,QWORD PTR [rax]
   20169:	xor    eax,eax
   2016b:	call   c1e0 <__fprintf_chk@plt>
   20170:	pop    rbx
   20171:	mov    eax,0x1
   20176:	pop    rbp
   20177:	pop    r12
   20179:	ret    
   2017a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000020180 <main_memset>:
   20180:	push   r12
   20182:	push   rbp
   20183:	lea    rbp,[rip+0xa012]        # 2a19c <__PRETTY_FUNCTION__.10113+0x584>
   2018a:	push   rbx
   2018b:	mov    r12d,edi
   2018e:	mov    rbx,rsi
   20191:	nop    DWORD PTR [rax+0x0]
   20198:	lea    rdx,[rip+0x115a3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2019f:	xor    ecx,ecx
   201a1:	mov    r9d,0x2
   201a7:	mov    r8,rbp
   201aa:	mov    rsi,rbx
   201ad:	mov    edi,r12d
   201b0:	call   ebe0 <def_getopt>
   201b5:	cmp    eax,0xffffffff
   201b8:	jne    20198 <main_memset+0x18>
   201ba:	mov    rbp,QWORD PTR [rip+0x21ade7]        # 23afa8 <optind@GLIBC_2.2.5>
   201c1:	movsxd rax,DWORD PTR [rbp+0x0]
   201c5:	mov    rdi,QWORD PTR [rbx+rax*8]
   201c9:	call   eb40 <find_domain>
   201ce:	mov    r12d,eax
   201d1:	movsxd rax,DWORD PTR [rbp+0x0]
   201d5:	mov    rbx,QWORD PTR [rbx+rax*8+0x8]
   201da:	mov    rdi,rbx
   201dd:	call   13430 <parse_mem_size_kb>
   201e2:	cmp    rax,0xffffffffffffffff
   201e6:	je     20240 <main_memset+0xc0>
   201e8:	mov    rdx,rax
   201eb:	lea    rax,[rip+0x21cc6e]        # 23ce60 <ctx>
   201f2:	xor    ecx,ecx
   201f4:	mov    r8d,0x1
   201fa:	mov    esi,r12d
   201fd:	mov    rdi,QWORD PTR [rax]
   20200:	call   bb60 <libxl_set_memory_target@plt>
   20205:	test   eax,eax
   20207:	jne    20210 <main_memset+0x90>
   20209:	pop    rbx
   2020a:	pop    rbp
   2020b:	pop    r12
   2020d:	ret    
   2020e:	xchg   ax,ax
   20210:	mov    rax,QWORD PTR [rip+0x21add9]        # 23aff0 <stderr@GLIBC_2.2.5>
   20217:	lea    rdx,[rip+0x1250a]        # 32728 <__PRETTY_FUNCTION__.10016+0x1698>
   2021e:	mov    r8,rbx
   20221:	mov    ecx,r12d
   20224:	mov    esi,0x1
   20229:	mov    rdi,QWORD PTR [rax]
   2022c:	xor    eax,eax
   2022e:	call   c1e0 <__fprintf_chk@plt>
   20233:	pop    rbx
   20234:	mov    eax,0x1
   20239:	pop    rbp
   2023a:	pop    r12
   2023c:	ret    
   2023d:	nop    DWORD PTR [rax]
   20240:	mov    rax,QWORD PTR [rip+0x21ada9]        # 23aff0 <stderr@GLIBC_2.2.5>
   20247:	lea    rdx,[rip+0x1247b]        # 326c9 <__PRETTY_FUNCTION__.10016+0x1639>
   2024e:	mov    rcx,rbx
   20251:	mov    esi,0x1
   20256:	mov    rdi,QWORD PTR [rax]
   20259:	xor    eax,eax
   2025b:	call   c1e0 <__fprintf_chk@plt>
   20260:	pop    rbx
   20261:	mov    eax,0x1
   20266:	pop    rbp
   20267:	pop    r12
   20269:	ret    
   2026a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000020270 <main_sharing>:
   20270:	push   r15
   20272:	push   r14
   20274:	push   r13
   20276:	push   r12
   20278:	mov    r12,rsi
   2027b:	push   rbp
   2027c:	push   rbx
   2027d:	lea    rbp,[rip+0xf47d]        # 2f701 <__func__.10421+0x1379>
   20284:	mov    ebx,edi
   20286:	sub    rsp,0xa8
   2028d:	mov    rax,QWORD PTR fs:0x28
   20296:	mov    QWORD PTR [rsp+0x98],rax
   2029e:	xor    eax,eax
   202a0:	lea    rdx,[rip+0x1149b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   202a7:	xor    r9d,r9d
   202aa:	xor    ecx,ecx
   202ac:	mov    r8,rbp
   202af:	mov    rsi,r12
   202b2:	mov    edi,ebx
   202b4:	call   ebe0 <def_getopt>
   202b9:	cmp    eax,0xffffffff
   202bc:	jne    202a0 <main_sharing+0x30>
   202be:	mov    r13,QWORD PTR [rip+0x21ace3]        # 23afa8 <optind@GLIBC_2.2.5>
   202c5:	movsxd rax,DWORD PTR [r13+0x0]
   202c9:	cmp    eax,ebx
   202cb:	jge    20378 <main_sharing+0x108>
   202d1:	sub    ebx,0x1
   202d4:	cmp    eax,ebx
   202d6:	je     20318 <main_sharing+0xa8>
   202d8:	lea    rdi,[rip+0xf422]        # 2f701 <__func__.10421+0x1379>
   202df:	call   d4f0 <help>
   202e4:	mov    eax,0x1
   202e9:	mov    rcx,QWORD PTR [rsp+0x98]
   202f1:	xor    rcx,QWORD PTR fs:0x28
   202fa:	jne    204d1 <main_sharing+0x261>
   20300:	add    rsp,0xa8
   20307:	pop    rbx
   20308:	pop    rbp
   20309:	pop    r12
   2030b:	pop    r13
   2030d:	pop    r14
   2030f:	pop    r15
   20311:	ret    
   20312:	nop    WORD PTR [rax+rax*1+0x0]
   20318:	mov    rdi,QWORD PTR [r12+rax*8]
   2031c:	lea    r14,[rsp+0x20]
   20321:	call   eb40 <find_domain>
   20326:	lea    rbp,[rip+0x21cb33]        # 23ce60 <ctx>
   2032d:	mov    edx,eax
   2032f:	mov    rsi,r14
   20332:	mov    rdi,QWORD PTR [rbp+0x0]
   20336:	call   b5b0 <libxl_domain_info@plt>
   2033b:	cmp    eax,0xffffffeb
   2033e:	je     204a2 <main_sharing+0x232>
   20344:	test   eax,eax
   20346:	jne    20439 <main_sharing+0x1c9>
   2034c:	lea    rdi,[rip+0x12455]        # 327a8 <__PRETTY_FUNCTION__.10016+0x1718>
   20353:	mov    DWORD PTR [rsp+0x1c],0x1
   2035b:	mov    r12d,0x1
   20361:	call   aeb0 <puts@plt>
   20366:	mov    QWORD PTR [rsp+0x8],0x0
   2036f:	mov    QWORD PTR [rsp],r14
   20373:	jmp    203b9 <main_sharing+0x149>
   20375:	nop    DWORD PTR [rax]
   20378:	lea    rbp,[rip+0x21cae1]        # 23ce60 <ctx>
   2037f:	lea    rsi,[rsp+0x1c]
   20384:	mov    rdi,QWORD PTR [rbp+0x0]
   20388:	call   b830 <libxl_list_domain@plt>
   2038d:	test   rax,rax
   20390:	mov    QWORD PTR [rsp],rax
   20394:	je     20478 <main_sharing+0x208>
   2039a:	lea    rdi,[rip+0x12407]        # 327a8 <__PRETTY_FUNCTION__.10016+0x1718>
   203a1:	mov    r12d,DWORD PTR [rsp+0x1c]
   203a6:	call   aeb0 <puts@plt>
   203ab:	mov    rax,QWORD PTR [rsp]
   203af:	test   r12d,r12d
   203b2:	mov    QWORD PTR [rsp+0x8],rax
   203b7:	jle    20424 <main_sharing+0x1b4>
   203b9:	mov    rax,QWORD PTR [rsp]
   203bd:	lea    r13,[rip+0x1231e]        # 326e2 <__PRETTY_FUNCTION__.10016+0x1652>
   203c4:	xor    r15d,r15d
   203c7:	lea    rbx,[rax+0x10]
   203cb:	nop    DWORD PTR [rax+rax*1+0x0]
   203d0:	mov    esi,DWORD PTR [rbx]
   203d2:	mov    rdi,QWORD PTR [rbp+0x0]
   203d6:	add    r15d,0x1
   203da:	add    rbx,0x70
   203de:	call   ae20 <libxl_domid_to_name@plt>
   203e3:	mov    r8,QWORD PTR [rbx-0x50]
   203e7:	add    r8,QWORD PTR [rbx-0x48]
   203eb:	mov    rdx,rax
   203ee:	mov    r9,QWORD PTR [rbx-0x40]
   203f2:	mov    ecx,DWORD PTR [rbx-0x70]
   203f5:	mov    r14,rax
   203f8:	mov    rsi,r13
   203fb:	mov    edi,0x1
   20400:	xor    eax,eax
   20402:	shr    r9,0xa
   20406:	shr    r8,0xa
   2040a:	call   bd50 <__printf_chk@plt>
   2040f:	mov    rdi,r14
   20412:	call   ac40 <free@plt>
   20417:	cmp    r15d,r12d
   2041a:	jl     203d0 <main_sharing+0x160>
   2041c:	cmp    QWORD PTR [rsp+0x8],0x0
   20422:	je     20468 <main_sharing+0x1f8>
   20424:	mov    esi,DWORD PTR [rsp+0x1c]
   20428:	mov    rdi,QWORD PTR [rsp+0x8]
   2042d:	call   b0e0 <libxl_dominfo_list_free@plt>
   20432:	xor    eax,eax
   20434:	jmp    202e9 <main_sharing+0x79>
   20439:	mov    ecx,eax
   2043b:	mov    rax,QWORD PTR [rip+0x21abae]        # 23aff0 <stderr@GLIBC_2.2.5>
   20442:	lea    rdx,[rip+0x12337]        # 32780 <__PRETTY_FUNCTION__.10016+0x16f0>
   20449:	mov    esi,0x1
   2044e:	mov    rdi,QWORD PTR [rax]
   20451:	xor    eax,eax
   20453:	call   c1e0 <__fprintf_chk@plt>
   20458:	mov    eax,0x1
   2045d:	jmp    202e9 <main_sharing+0x79>
   20462:	nop    WORD PTR [rax+rax*1+0x0]
   20468:	mov    rdi,QWORD PTR [rsp]
   2046c:	call   b8d0 <libxl_dominfo_dispose@plt>
   20471:	xor    eax,eax
   20473:	jmp    202e9 <main_sharing+0x79>
   20478:	mov    rax,QWORD PTR [rip+0x21ab71]        # 23aff0 <stderr@GLIBC_2.2.5>
   2047f:	lea    rdi,[rip+0x1172a]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   20486:	mov    edx,0x1a
   2048b:	mov    esi,0x1
   20490:	mov    rcx,QWORD PTR [rax]
   20493:	call   c1b0 <fwrite@plt>
   20498:	mov    eax,0x1
   2049d:	jmp    202e9 <main_sharing+0x79>
   204a2:	movsxd rax,DWORD PTR [r13+0x0]
   204a6:	lea    rdx,[rip+0x122ab]        # 32758 <__PRETTY_FUNCTION__.10016+0x16c8>
   204ad:	mov    esi,0x1
   204b2:	mov    rcx,QWORD PTR [r12+rax*8]
   204b6:	mov    rax,QWORD PTR [rip+0x21ab33]        # 23aff0 <stderr@GLIBC_2.2.5>
   204bd:	mov    rdi,QWORD PTR [rax]
   204c0:	xor    eax,eax
   204c2:	call   c1e0 <__fprintf_chk@plt>
   204c7:	mov    eax,0x1
   204cc:	jmp    202e9 <main_sharing+0x79>
   204d1:	call   b130 <__stack_chk_fail@plt>
   204d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000204e0 <list_domains>:
   204e0:	push   r15
   204e2:	push   r14
   204e4:	mov    r14d,edi
   204e7:	push   r13
   204e9:	push   r12
   204eb:	mov    r13d,r8d
   204ee:	push   rbp
   204ef:	push   rbx
   204f0:	mov    r12d,edx
   204f3:	mov    ebp,ecx
   204f5:	mov    rbx,r9
   204f8:	sub    rsp,0xb8
   204ff:	mov    DWORD PTR [rsp+0x1c],edi
   20503:	lea    rdi,[rsp+0x20]
   20508:	mov    BYTE PTR [rsp+0x1b],sil
   2050d:	mov    DWORD PTR [rsp],esi
   20510:	mov    BYTE PTR [rsp+0x1a],dl
   20514:	mov    BYTE PTR [rsp+0x18],cl
   20518:	mov    BYTE PTR [rsp+0x19],r8b
   2051d:	mov    rax,QWORD PTR fs:0x28
   20526:	mov    QWORD PTR [rsp+0xa8],rax
   2052e:	xor    eax,eax
   20530:	mov    QWORD PTR [rsp+0x8],rdi
   20535:	mov    r15d,DWORD PTR [rsp+0xf0]
   2053d:	call   bc00 <libxl_bitmap_init@plt>
   20542:	lea    rax,[rsp+0x30]
   20547:	mov    rdi,rax
   2054a:	mov    QWORD PTR [rsp+0x10],rax
   2054f:	call   af50 <libxl_physinfo_init@plt>
   20554:	lea    rsi,[rip+0x12875]        # 32dd0 <__PRETTY_FUNCTION__.10016+0x1d40>
   2055b:	xor    eax,eax
   2055d:	mov    edi,0x1
   20562:	call   bd50 <__printf_chk@plt>
   20567:	mov    r10d,DWORD PTR [rsp+0x1c]
   2056c:	mov    r11d,DWORD PTR [rsp]
   20570:	test   r10b,r10b
   20573:	jne    209e0 <list_domains+0x500>
   20579:	test   r11b,r11b
   2057c:	jne    20990 <list_domains+0x4b0>
   20582:	test   r12b,r12b
   20585:	jne    209ac <list_domains+0x4cc>
   2058b:	test   r13b,r13b
   2058e:	jne    209c8 <list_domains+0x4e8>
   20594:	test   bpl,bpl
   20597:	je     205e1 <list_domains+0x101>
   20599:	lea    rbp,[rip+0x21c8c0]        # 23ce60 <ctx>
   205a0:	mov    rsi,QWORD PTR [rsp+0x8]
   205a5:	xor    edx,edx
   205a7:	mov    rdi,QWORD PTR [rbp+0x0]
   205ab:	call   afe0 <libxl_node_bitmap_alloc@plt>
   205b0:	test   eax,eax
   205b2:	jne    20a4b <list_domains+0x56b>
   205b8:	mov    rsi,QWORD PTR [rsp+0x10]
   205bd:	mov    rdi,QWORD PTR [rbp+0x0]
   205c1:	call   b470 <libxl_get_physinfo@plt>
   205c6:	test   eax,eax
   205c8:	jne    20a17 <list_domains+0x537>
   205ce:	lea    rsi,[rip+0x1223c]        # 32811 <__PRETTY_FUNCTION__.10016+0x1781>
   205d5:	mov    edi,0x1
   205da:	xor    eax,eax
   205dc:	call   bd50 <__printf_chk@plt>
   205e1:	mov    edi,0xa
   205e6:	call   aca0 <putchar@plt>
   205eb:	test   r15d,r15d
   205ee:	jle    20950 <list_domains+0x470>
   205f4:	lea    edx,[r15-0x1]
   205f8:	lea    rbp,[rip+0x21c861]        # 23ce60 <ctx>
   205ff:	mov    r12,QWORD PTR [rip+0x21a99a]        # 23afa0 <stdout@GLIBC_2.2.5>
   20606:	lea    rax,[rdx*8+0x0]
   2060e:	sub    rax,rdx
   20611:	shl    rax,0x4
   20615:	lea    rax,[rbx+rax*1+0x70]
   2061a:	mov    QWORD PTR [rsp],rax
   2061e:	jmp    20725 <list_domains+0x245>
   20623:	nop    DWORD PTR [rax+rax*1+0x0]
   20628:	mov    rax,QWORD PTR [rbx+0x58]
   2062c:	mov    r13d,DWORD PTR [rbx+0x28]
   20630:	test   rax,rax
   20633:	js     20908 <list_domains+0x428>
   20639:	pxor   xmm0,xmm0
   2063d:	cvtsi2ss xmm0,rax
   20642:	cmp    BYTE PTR [rbx+0x24],0x1
   20646:	cvtss2sd xmm0,xmm0
   2064a:	divsd  xmm0,QWORD PTR [rip+0x1202e]        # 32680 <__PRETTY_FUNCTION__.10016+0x15f0>
   20652:	sbb    eax,eax
   20654:	and    eax,0xffffffc9
   20657:	add    eax,0x64
   2065a:	cmp    r13d,0x5
   2065e:	jbe    209fd <list_domains+0x51d>
   20664:	mov    r11d,0x3f
   2066a:	mov    r9d,0x73
   20670:	cmp    BYTE PTR [rbx+0x22],0x1
   20674:	mov    r8,QWORD PTR [rbx+0x30]
   20678:	mov    ecx,DWORD PTR [rbx+0x10]
   2067b:	sbb    edi,edi
   2067d:	and    edi,0xffffffbd
   20680:	add    edi,0x70
   20683:	cmp    BYTE PTR [rbx+0x21],0x1
   20687:	sbb    esi,esi
   20689:	and    esi,0xffffffcb
   2068c:	add    esi,0x62
   2068f:	cmp    BYTE PTR [rbx+0x20],0x1
   20693:	sbb    edx,edx
   20695:	add    r8,QWORD PTR [rbx+0x38]
   20699:	push   rax
   2069a:	and    edx,0xffffffbb
   2069d:	push   r11
   2069f:	push   r9
   206a1:	add    edx,0x72
   206a4:	push   rdi
   206a5:	push   rsi
   206a6:	push   rdx
   206a7:	mov    r9d,DWORD PTR [rbx+0x64]
   206ab:	lea    rsi,[rip+0x127d6]        # 32e88 <__PRETTY_FUNCTION__.10016+0x1df8>
   206b2:	shr    r8,0xa
   206b6:	mov    rdx,r15
   206b9:	mov    edi,0x1
   206be:	mov    eax,0x1
   206c3:	call   bd50 <__printf_chk@plt>
   206c8:	add    rsp,0x30
   206cc:	mov    rdi,r15
   206cf:	call   ac40 <free@plt>
   206d4:	test   r14b,r14b
   206d7:	jne    20780 <list_domains+0x2a0>
   206dd:	cmp    BYTE PTR [rsp+0x1a],0x0
   206e2:	jne    208d8 <list_domains+0x3f8>
   206e8:	cmp    BYTE PTR [rsp+0x1b],0x0
   206ed:	jne    2080f <list_domains+0x32f>
   206f3:	cmp    BYTE PTR [rsp+0x19],0x0
   206f8:	jne    2083f <list_domains+0x35f>
   206fe:	cmp    BYTE PTR [rsp+0x18],0x0
   20703:	jne    20877 <list_domains+0x397>
   20709:	mov    rsi,QWORD PTR [r12]
   2070d:	mov    edi,0xa
   20712:	add    rbx,0x70
   20716:	call   b200 <_IO_putc@plt>
   2071b:	cmp    rbx,QWORD PTR [rsp]
   2071f:	je     20950 <list_domains+0x470>
   20725:	mov    esi,DWORD PTR [rbx+0x10]
   20728:	mov    rdi,QWORD PTR [rbp+0x0]
   2072c:	call   ae20 <libxl_domid_to_name@plt>
   20731:	cmp    BYTE PTR [rbx+0x23],0x0
   20735:	mov    r15,rax
   20738:	jne    20628 <list_domains+0x148>
   2073e:	mov    rax,QWORD PTR [rbx+0x58]
   20742:	test   rax,rax
   20745:	js     20930 <list_domains+0x450>
   2074b:	pxor   xmm0,xmm0
   2074f:	cvtsi2ss xmm0,rax
   20754:	cmp    BYTE PTR [rbx+0x24],0x1
   20758:	mov    r11d,0x2d
   2075e:	mov    r9d,0x2d
   20764:	cvtss2sd xmm0,xmm0
   20768:	divsd  xmm0,QWORD PTR [rip+0x11f10]        # 32680 <__PRETTY_FUNCTION__.10016+0x15f0>
   20770:	sbb    eax,eax
   20772:	xor    r13d,r13d
   20775:	and    eax,0xffffffc9
   20778:	add    eax,0x64
   2077b:	jmp    20670 <list_domains+0x190>
   20780:	movzx  eax,BYTE PTR [rbx+0xf]
   20784:	movzx  ecx,BYTE PTR [rbx+0x1]
   20788:	lea    rsi,[rip+0x12729]        # 32eb8 <__PRETTY_FUNCTION__.10016+0x1e28>
   2078f:	movzx  edx,BYTE PTR [rbx]
   20792:	mov    edi,0x1
   20797:	push   rax
   20798:	movzx  eax,BYTE PTR [rbx+0xe]
   2079c:	push   rax
   2079d:	movzx  eax,BYTE PTR [rbx+0xd]
   207a1:	push   rax
   207a2:	movzx  eax,BYTE PTR [rbx+0xc]
   207a6:	push   rax
   207a7:	movzx  eax,BYTE PTR [rbx+0xb]
   207ab:	push   rax
   207ac:	movzx  eax,BYTE PTR [rbx+0xa]
   207b0:	push   rax
   207b1:	movzx  eax,BYTE PTR [rbx+0x9]
   207b5:	push   rax
   207b6:	movzx  eax,BYTE PTR [rbx+0x8]
   207ba:	push   rax
   207bb:	movzx  eax,BYTE PTR [rbx+0x7]
   207bf:	push   rax
   207c0:	movzx  eax,BYTE PTR [rbx+0x6]
   207c4:	push   rax
   207c5:	movzx  eax,BYTE PTR [rbx+0x5]
   207c9:	push   rax
   207ca:	movzx  eax,BYTE PTR [rbx+0x4]
   207ce:	push   rax
   207cf:	movzx  r9d,BYTE PTR [rbx+0x3]
   207d4:	xor    eax,eax
   207d6:	movzx  r8d,BYTE PTR [rbx+0x2]
   207db:	call   bd50 <__printf_chk@plt>
   207e0:	add    rsp,0x60
   207e4:	cmp    BYTE PTR [rbx+0x23],0x0
   207e8:	je     208b0 <list_domains+0x3d0>
   207ee:	lea    rsi,[rip+0x1202b]        # 32820 <__PRETTY_FUNCTION__.10016+0x1790>
   207f5:	xor    eax,eax
   207f7:	mov    edx,r13d
   207fa:	mov    edi,0x1
   207ff:	call   bd50 <__printf_chk@plt>
   20804:	cmp    BYTE PTR [rsp+0x1a],0x0
   20809:	jne    208d8 <list_domains+0x3f8>
   2080f:	mov    rdx,QWORD PTR [rbx+0x18]
   20813:	lea    rax,[rip+0x11177]        # 31991 <__PRETTY_FUNCTION__.10016+0x901>
   2081a:	lea    rsi,[rip+0x1200f]        # 32830 <__PRETTY_FUNCTION__.10016+0x17a0>
   20821:	mov    edi,0x1
   20826:	test   rdx,rdx
   20829:	cmove  rdx,rax
   2082d:	xor    eax,eax
   2082f:	call   bd50 <__printf_chk@plt>
   20834:	cmp    BYTE PTR [rsp+0x19],0x0
   20839:	je     206fe <list_domains+0x21e>
   2083f:	mov    esi,DWORD PTR [rbx+0x68]
   20842:	mov    rdi,QWORD PTR [rbp+0x0]
   20846:	call   c180 <libxl_cpupoolid_to_name@plt>
   2084b:	lea    rsi,[rip+0x11fdf]        # 32831 <__PRETTY_FUNCTION__.10016+0x17a1>
   20852:	mov    rdx,rax
   20855:	mov    r13,rax
   20858:	mov    edi,0x1
   2085d:	xor    eax,eax
   2085f:	call   bd50 <__printf_chk@plt>
   20864:	mov    rdi,r13
   20867:	call   ac40 <free@plt>
   2086c:	cmp    BYTE PTR [rsp+0x18],0x0
   20871:	je     20709 <list_domains+0x229>
   20877:	mov    rdx,QWORD PTR [rsp+0x8]
   2087c:	mov    esi,DWORD PTR [rbx+0x10]
   2087f:	mov    rdi,QWORD PTR [rbp+0x0]
   20883:	call   bca0 <libxl_domain_get_nodeaffinity@plt>
   20888:	mov    rsi,QWORD PTR [r12]
   2088c:	mov    edi,0x20
   20891:	call   b200 <_IO_putc@plt>
   20896:	mov    rdx,QWORD PTR [r12]
   2089a:	mov    esi,DWORD PTR [rsp+0x80]
   208a1:	mov    rdi,QWORD PTR [rsp+0x28]
   208a6:	call   ede0 <print_bitmap>
   208ab:	jmp    20709 <list_domains+0x229>
   208b0:	lea    rdx,[rip+0x110da]        # 31991 <__PRETTY_FUNCTION__.10016+0x901>
   208b7:	lea    rsi,[rip+0x11f6d]        # 3282b <__PRETTY_FUNCTION__.10016+0x179b>
   208be:	xor    eax,eax
   208c0:	mov    edi,0x1
   208c5:	call   bd50 <__printf_chk@plt>
   208ca:	cmp    BYTE PTR [rsp+0x1a],0x0
   208cf:	je     2080f <list_domains+0x32f>
   208d5:	nop    DWORD PTR [rax]
   208d8:	mov    rdx,QWORD PTR [rbx+0x30]
   208dc:	lea    rsi,[rip+0x11f42]        # 32825 <__PRETTY_FUNCTION__.10016+0x1795>
   208e3:	xor    eax,eax
   208e5:	mov    edi,0x1
   208ea:	shr    rdx,0xa
   208ee:	call   bd50 <__printf_chk@plt>
   208f3:	test   r14b,r14b
   208f6:	je     206e8 <list_domains+0x208>
   208fc:	jmp    2080f <list_domains+0x32f>
   20901:	nop    DWORD PTR [rax+0x0]
   20908:	mov    rdx,rax
   2090b:	pxor   xmm0,xmm0
   2090f:	shr    rdx,1
   20912:	and    eax,0x1
   20915:	or     rdx,rax
   20918:	cvtsi2ss xmm0,rdx
   2091d:	addss  xmm0,xmm0
   20921:	jmp    20642 <list_domains+0x162>
   20926:	nop    WORD PTR cs:[rax+rax*1+0x0]
   20930:	mov    rdx,rax
   20933:	pxor   xmm0,xmm0
   20937:	shr    rdx,1
   2093a:	and    eax,0x1
   2093d:	or     rdx,rax
   20940:	cvtsi2ss xmm0,rdx
   20945:	addss  xmm0,xmm0
   20949:	jmp    20754 <list_domains+0x274>
   2094e:	xchg   ax,ax
   20950:	mov    rdi,QWORD PTR [rsp+0x8]
   20955:	call   bdb0 <libxl_bitmap_dispose@plt>
   2095a:	mov    rdi,QWORD PTR [rsp+0x10]
   2095f:	call   c070 <libxl_physinfo_dispose@plt>
   20964:	mov    rax,QWORD PTR [rsp+0xa8]
   2096c:	xor    rax,QWORD PTR fs:0x28
   20975:	jne    209f8 <list_domains+0x518>
   2097b:	add    rsp,0xb8
   20982:	pop    rbx
   20983:	pop    rbp
   20984:	pop    r12
   20986:	pop    r13
   20988:	pop    r14
   2098a:	pop    r15
   2098c:	ret    
   2098d:	nop    DWORD PTR [rax]
   20990:	lea    rsi,[rip+0x11e4d]        # 327e4 <__PRETTY_FUNCTION__.10016+0x1754>
   20997:	xor    eax,eax
   20999:	mov    edi,0x1
   2099e:	call   bd50 <__printf_chk@plt>
   209a3:	test   r12b,r12b
   209a6:	je     2058b <list_domains+0xab>
   209ac:	lea    rsi,[rip+0x11e43]        # 327f6 <__PRETTY_FUNCTION__.10016+0x1766>
   209b3:	xor    eax,eax
   209b5:	mov    edi,0x1
   209ba:	call   bd50 <__printf_chk@plt>
   209bf:	test   r13b,r13b
   209c2:	je     20594 <list_domains+0xb4>
   209c8:	lea    rsi,[rip+0x11e31]        # 32800 <__PRETTY_FUNCTION__.10016+0x1770>
   209cf:	mov    edi,0x1
   209d4:	xor    eax,eax
   209d6:	call   bd50 <__printf_chk@plt>
   209db:	jmp    20594 <list_domains+0xb4>
   209e0:	lea    rsi,[rip+0x12439]        # 32e20 <__PRETTY_FUNCTION__.10016+0x1d90>
   209e7:	mov    edi,0x1
   209ec:	xor    eax,eax
   209ee:	call   bd50 <__printf_chk@plt>
   209f3:	jmp    20582 <list_domains+0xa2>
   209f8:	call   b130 <__stack_chk_fail@plt>
   209fd:	lea    rcx,[rip+0x1292c]        # 33330 <shutdown_reason_letters.11238>
   20a04:	movsxd rdx,r13d
   20a07:	mov    r9d,0x73
   20a0d:	movsx  r11d,BYTE PTR [rcx+rdx*1]
   20a12:	jmp    20670 <list_domains+0x190>
   20a17:	mov    rax,QWORD PTR [rip+0x21a5d2]        # 23aff0 <stderr@GLIBC_2.2.5>
   20a1e:	lea    rdi,[rip+0x11994]        # 323b9 <__PRETTY_FUNCTION__.10016+0x1329>
   20a25:	mov    edx,0x17
   20a2a:	mov    esi,0x1
   20a2f:	mov    rcx,QWORD PTR [rax]
   20a32:	call   c1b0 <fwrite@plt>
   20a37:	mov    rdi,QWORD PTR [rsp+0x8]
   20a3c:	call   bdb0 <libxl_bitmap_dispose@plt>
   20a41:	mov    edi,0x1
   20a46:	call   c1a0 <exit@plt>
   20a4b:	mov    rax,QWORD PTR [rip+0x21a59e]        # 23aff0 <stderr@GLIBC_2.2.5>
   20a52:	lea    rdi,[rip+0x12407]        # 32e60 <__PRETTY_FUNCTION__.10016+0x1dd0>
   20a59:	mov    edx,0x20
   20a5e:	mov    esi,0x1
   20a63:	mov    rcx,QWORD PTR [rax]
   20a66:	call   c1b0 <fwrite@plt>
   20a6b:	mov    edi,0x1
   20a70:	call   c1a0 <exit@plt>
   20a75:	nop
   20a76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000020a80 <maybe_printf>:
   20a80:	push   rbp
   20a81:	push   rbx
   20a82:	mov    r10,rdi
   20a85:	sub    rsp,0xe8
   20a8c:	test   al,al
   20a8e:	mov    QWORD PTR [rsp+0x38],rsi
   20a93:	mov    QWORD PTR [rsp+0x40],rdx
   20a98:	mov    QWORD PTR [rsp+0x48],rcx
   20a9d:	mov    QWORD PTR [rsp+0x50],r8
   20aa2:	mov    QWORD PTR [rsp+0x58],r9
   20aa7:	je     20ae3 <maybe_printf+0x63>
   20aa9:	movaps XMMWORD PTR [rsp+0x60],xmm0
   20aae:	movaps XMMWORD PTR [rsp+0x70],xmm1
   20ab3:	movaps XMMWORD PTR [rsp+0x80],xmm2
   20abb:	movaps XMMWORD PTR [rsp+0x90],xmm3
   20ac3:	movaps XMMWORD PTR [rsp+0xa0],xmm4
   20acb:	movaps XMMWORD PTR [rsp+0xb0],xmm5
   20ad3:	movaps XMMWORD PTR [rsp+0xc0],xmm6
   20adb:	movaps XMMWORD PTR [rsp+0xd0],xmm7
   20ae3:	mov    rax,QWORD PTR fs:0x28
   20aec:	mov    QWORD PTR [rsp+0x28],rax
   20af1:	xor    eax,eax
   20af3:	lea    rax,[rsp+0x100]
   20afb:	lea    rcx,[rsp+0x10]
   20b00:	lea    rdi,[rsp+0x8]
   20b05:	mov    rdx,r10
   20b08:	mov    esi,0x1
   20b0d:	xor    ebx,ebx
   20b0f:	mov    QWORD PTR [rsp+0x18],rax
   20b14:	lea    rax,[rsp+0x30]
   20b19:	mov    DWORD PTR [rsp+0x10],0x8
   20b21:	mov    DWORD PTR [rsp+0x14],0x30
   20b29:	mov    QWORD PTR [rsp+0x20],rax
   20b2e:	call   bac0 <__vasprintf_chk@plt>
   20b33:	cmp    eax,0xffffffff
   20b36:	je     20baa <maybe_printf+0x12a>
   20b38:	mov    rbx,QWORD PTR [rip+0x21c301]        # 23ce40 <info_name>
   20b3f:	mov    rbp,QWORD PTR [rsp+0x8]
   20b44:	test   rbx,rbx
   20b47:	je     20bd0 <maybe_printf+0x150>
   20b4d:	mov    rdi,rbx
   20b50:	call   b0c0 <strlen@plt>
   20b55:	mov    rsi,rbx
   20b58:	mov    rdx,rax
   20b5b:	mov    rdi,rbp
   20b5e:	call   ada0 <strncmp@plt>
   20b63:	test   eax,eax
   20b65:	mov    ebx,eax
   20b67:	jne    20ba0 <maybe_printf+0x120>
   20b69:	mov    esi,0x3a
   20b6e:	mov    rdi,rbp
   20b71:	call   b1c0 <strchr@plt>
   20b76:	test   rax,rax
   20b79:	je     20ba2 <maybe_printf+0x122>
   20b7b:	cmp    BYTE PTR [rax+0x1],0x20
   20b7f:	jne    20ba2 <maybe_printf+0x122>
   20b81:	lea    rdi,[rax+0x2]
   20b85:	mov    rax,QWORD PTR [rip+0x21a414]        # 23afa0 <stdout@GLIBC_2.2.5>
   20b8c:	mov    rsi,QWORD PTR [rax]
   20b8f:	call   b300 <fputs@plt>
   20b94:	mov    rbp,QWORD PTR [rsp+0x8]
   20b99:	mov    ebx,eax
   20b9b:	jmp    20ba2 <maybe_printf+0x122>
   20b9d:	nop    DWORD PTR [rax]
   20ba0:	xor    ebx,ebx
   20ba2:	mov    rdi,rbp
   20ba5:	call   ac40 <free@plt>
   20baa:	mov    rdx,QWORD PTR [rsp+0x28]
   20baf:	xor    rdx,QWORD PTR fs:0x28
   20bb8:	mov    eax,ebx
   20bba:	jne    20beb <maybe_printf+0x16b>
   20bbc:	add    rsp,0xe8
   20bc3:	pop    rbx
   20bc4:	pop    rbp
   20bc5:	ret    
   20bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   20bd0:	mov    rax,QWORD PTR [rip+0x21a3c9]        # 23afa0 <stdout@GLIBC_2.2.5>
   20bd7:	mov    rdi,rbp
   20bda:	mov    rsi,QWORD PTR [rax]
   20bdd:	call   b300 <fputs@plt>
   20be2:	mov    rbp,QWORD PTR [rsp+0x8]
   20be7:	mov    ebx,eax
   20be9:	jmp    20ba2 <maybe_printf+0x122>
   20beb:	call   b130 <__stack_chk_fail@plt>

0000000000020bf0 <output_nodeinfo>:
   20bf0:	push   rbx
   20bf1:	sub    rsp,0x190
   20bf8:	mov    rbx,rsp
   20bfb:	mov    rdi,rbx
   20bfe:	mov    rax,QWORD PTR fs:0x28
   20c07:	mov    QWORD PTR [rsp+0x188],rax
   20c0f:	xor    eax,eax
   20c11:	call   b290 <uname@plt>
   20c16:	test   eax,eax
   20c18:	js     20c6b <output_nodeinfo+0x7b>
   20c1a:	lea    rsi,[rbx+0x41]
   20c1e:	lea    rdi,[rip+0x11c11]        # 32836 <__PRETTY_FUNCTION__.10016+0x17a6>
   20c25:	xor    eax,eax
   20c27:	call   20a80 <maybe_printf>
   20c2c:	lea    rsi,[rbx+0x82]
   20c33:	lea    rdi,[rip+0x11c19]        # 32853 <__PRETTY_FUNCTION__.10016+0x17c3>
   20c3a:	xor    eax,eax
   20c3c:	call   20a80 <maybe_printf>
   20c41:	lea    rsi,[rbx+0xc3]
   20c48:	lea    rdi,[rip+0x11c21]        # 32870 <__PRETTY_FUNCTION__.10016+0x17e0>
   20c4f:	xor    eax,eax
   20c51:	call   20a80 <maybe_printf>
   20c56:	lea    rsi,[rbx+0x104]
   20c5d:	lea    rdi,[rip+0x11c29]        # 3288d <__PRETTY_FUNCTION__.10016+0x17fd>
   20c64:	xor    eax,eax
   20c66:	call   20a80 <maybe_printf>
   20c6b:	mov    rax,QWORD PTR [rsp+0x188]
   20c73:	xor    rax,QWORD PTR fs:0x28
   20c7c:	jne    20c87 <output_nodeinfo+0x97>
   20c7e:	add    rsp,0x190
   20c85:	pop    rbx
   20c86:	ret    
   20c87:	call   b130 <__stack_chk_fail@plt>
   20c8c:	nop    DWORD PTR [rax+0x0]

0000000000020c90 <uptime_to_string>:
   20c90:	sub    rsp,0x18
   20c94:	movabs rdx,0xc22e450672894ab7
   20c9e:	movabs r11,0x91a2b3c4d5e6f81
   20ca8:	mov    rax,QWORD PTR fs:0x28
   20cb1:	mov    QWORD PTR [rsp+0x8],rax
   20cb6:	xor    eax,eax
   20cb8:	mov    rax,rdi
   20cbb:	mul    rdx
   20cbe:	shr    rdx,0x10
   20cc2:	imul   eax,edx,0x15180
   20cc8:	mov    r10,rdx
   20ccb:	cdqe   
   20ccd:	sub    rdi,rax
   20cd0:	mov    rdx,rdi
   20cd3:	shr    rdx,0x4
   20cd7:	mov    rax,rdx
   20cda:	mul    r11
   20cdd:	shr    rdx,0x3
   20ce1:	imul   eax,edx,0xe10
   20ce7:	mov    r11,rdx
   20cea:	movabs rdx,0x8888888888888889
   20cf4:	cdqe   
   20cf6:	sub    rdi,rax
   20cf9:	mov    rax,rdi
   20cfc:	mul    rdx
   20cff:	shr    rdx,0x5
   20d03:	test   esi,esi
   20d05:	je     20d30 <uptime_to_string+0xa0>
   20d07:	cmp    r10,0x1
   20d0b:	mov    rdi,rsp
   20d0e:	ja     20da0 <uptime_to_string+0x110>
   20d14:	je     20dc0 <uptime_to_string+0x130>
   20d1a:	lea    rsi,[rip+0x11b92]        # 328b3 <__PRETTY_FUNCTION__.10016+0x1823>
   20d21:	mov    ecx,edx
   20d23:	xor    eax,eax
   20d25:	mov    edx,r11d
   20d28:	call   e8e0 <xasprintf>
   20d2d:	jmp    20d7f <uptime_to_string+0xef>
   20d2f:	nop
   20d30:	imul   eax,edx,0x3c
   20d33:	cdqe   
   20d35:	sub    rdi,rax
   20d38:	cmp    r10,0x1
   20d3c:	mov    r9,rdi
   20d3f:	mov    rdi,rsp
   20d42:	ja     20d68 <uptime_to_string+0xd8>
   20d44:	je     20de0 <uptime_to_string+0x150>
   20d4a:	lea    rsi,[rip+0x11b85]        # 328d6 <__PRETTY_FUNCTION__.10016+0x1846>
   20d51:	mov    ecx,edx
   20d53:	mov    r8d,r9d
   20d56:	mov    edx,r11d
   20d59:	xor    eax,eax
   20d5b:	call   e8e0 <xasprintf>
   20d60:	jmp    20d7f <uptime_to_string+0xef>
   20d62:	nop    WORD PTR [rax+rax*1+0x0]
   20d68:	lea    rsi,[rip+0x11b5e]        # 328cd <__PRETTY_FUNCTION__.10016+0x183d>
   20d6f:	mov    r8d,edx
   20d72:	mov    ecx,r11d
   20d75:	mov    edx,r10d
   20d78:	xor    eax,eax
   20d7a:	call   e8e0 <xasprintf>
   20d7f:	mov    rcx,QWORD PTR [rsp+0x8]
   20d84:	xor    rcx,QWORD PTR fs:0x28
   20d8d:	mov    rax,QWORD PTR [rsp]
   20d91:	jne    20dfb <uptime_to_string+0x16b>
   20d93:	add    rsp,0x18
   20d97:	ret    
   20d98:	nop    DWORD PTR [rax+rax*1+0x0]
   20da0:	lea    rsi,[rip+0x11b03]        # 328aa <__PRETTY_FUNCTION__.10016+0x181a>
   20da7:	mov    r8d,edx
   20daa:	mov    ecx,r11d
   20dad:	mov    edx,r10d
   20db0:	xor    eax,eax
   20db2:	call   e8e0 <xasprintf>
   20db7:	jmp    20d7f <uptime_to_string+0xef>
   20db9:	nop    DWORD PTR [rax+0x0]
   20dc0:	lea    rsi,[rip+0x11af5]        # 328bc <__PRETTY_FUNCTION__.10016+0x182c>
   20dc7:	mov    r8d,edx
   20dca:	mov    ecx,r11d
   20dcd:	mov    edx,0x1
   20dd2:	xor    eax,eax
   20dd4:	call   e8e0 <xasprintf>
   20dd9:	jmp    20d7f <uptime_to_string+0xef>
   20ddb:	nop    DWORD PTR [rax+rax*1+0x0]
   20de0:	lea    rsi,[rip+0x11afd]        # 328e4 <__PRETTY_FUNCTION__.10016+0x1854>
   20de7:	mov    r8d,edx
   20dea:	mov    ecx,r11d
   20ded:	mov    edx,0x1
   20df2:	xor    eax,eax
   20df4:	call   e8e0 <xasprintf>
   20df9:	jmp    20d7f <uptime_to_string+0xef>
   20dfb:	call   b130 <__stack_chk_fail@plt>

0000000000020e00 <printf_info_one_json>:
   20e00:	push   r12
   20e02:	push   rbp
   20e03:	mov    r12,rdx
   20e06:	push   rbx
   20e07:	mov    ebp,esi
   20e09:	mov    rbx,rdi
   20e0c:	call   c290 <yajl_gen_map_open@plt>
   20e11:	test   eax,eax
   20e13:	je     20e20 <printf_info_one_json+0x20>
   20e15:	pop    rbx
   20e16:	pop    rbp
   20e17:	pop    r12
   20e19:	ret    
   20e1a:	nop    WORD PTR [rax+rax*1+0x0]
   20e20:	lea    rsi,[rip+0x90c9]        # 29ef0 <__PRETTY_FUNCTION__.10113+0x2d8>
   20e27:	mov    edx,0x5
   20e2c:	mov    rdi,rbx
   20e2f:	call   b380 <yajl_gen_string@plt>
   20e34:	test   eax,eax
   20e36:	jne    20e15 <printf_info_one_json+0x15>
   20e38:	cmp    ebp,0xffffffff
   20e3b:	je     20e80 <printf_info_one_json+0x80>
   20e3d:	movsxd rsi,ebp
   20e40:	mov    rdi,rbx
   20e43:	call   ac80 <yajl_gen_integer@plt>
   20e48:	test   eax,eax
   20e4a:	jne    20e15 <printf_info_one_json+0x15>
   20e4c:	lea    rsi,[rip+0x1049d]        # 312f0 <__PRETTY_FUNCTION__.10016+0x260>
   20e53:	mov    edx,0x6
   20e58:	mov    rdi,rbx
   20e5b:	call   b380 <yajl_gen_string@plt>
   20e60:	test   eax,eax
   20e62:	jne    20e15 <printf_info_one_json+0x15>
   20e64:	mov    rsi,r12
   20e67:	mov    rdi,rbx
   20e6a:	call   acb0 <libxl_domain_config_gen_json@plt>
   20e6f:	test   eax,eax
   20e71:	jne    20e15 <printf_info_one_json+0x15>
   20e73:	mov    rdi,rbx
   20e76:	pop    rbx
   20e77:	pop    rbp
   20e78:	pop    r12
   20e7a:	jmp    b3d0 <yajl_gen_map_close@plt>
   20e7f:	nop
   20e80:	mov    rdi,rbx
   20e83:	call   b120 <yajl_gen_null@plt>
   20e88:	jmp    20e48 <printf_info_one_json+0x48>
   20e8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000020e90 <current_time_to_string>:
   20e90:	push   rbx
   20e91:	add    rsp,0xffffffffffffff80
   20e95:	mov    QWORD PTR [rsp+0x8],rdi
   20e9a:	lea    rdi,[rsp+0x8]
   20e9f:	mov    rax,QWORD PTR fs:0x28
   20ea8:	mov    QWORD PTR [rsp+0x78],rax
   20ead:	xor    eax,eax
   20eaf:	call   ad10 <localtime@plt>
   20eb4:	test   rax,rax
   20eb7:	je     20ef8 <current_time_to_string+0x68>
   20eb9:	lea    rbx,[rsp+0x10]
   20ebe:	lea    rdx,[rip+0x11a49]        # 3290e <__PRETTY_FUNCTION__.10016+0x187e>
   20ec5:	mov    rcx,rax
   20ec8:	mov    esi,0x64
   20ecd:	mov    rdi,rbx
   20ed0:	call   bde0 <strftime@plt>
   20ed5:	test   rax,rax
   20ed8:	je     20f25 <current_time_to_string+0x95>
   20eda:	mov    rdi,rbx
   20edd:	call   c360 <strdup@plt>
   20ee2:	mov    rdx,QWORD PTR [rsp+0x78]
   20ee7:	xor    rdx,QWORD PTR fs:0x28
   20ef0:	jne    20f20 <current_time_to_string+0x90>
   20ef2:	sub    rsp,0xffffffffffffff80
   20ef6:	pop    rbx
   20ef7:	ret    
   20ef8:	mov    rax,QWORD PTR [rip+0x21a0f1]        # 23aff0 <stderr@GLIBC_2.2.5>
   20eff:	lea    rdi,[rip+0x119f4]        # 328fa <__PRETTY_FUNCTION__.10016+0x186a>
   20f06:	mov    edx,0x13
   20f0b:	mov    esi,0x1
   20f10:	mov    rcx,QWORD PTR [rax]
   20f13:	call   c1b0 <fwrite@plt>
   20f18:	or     edi,0xffffffff
   20f1b:	call   c1a0 <exit@plt>
   20f20:	call   b130 <__stack_chk_fail@plt>
   20f25:	mov    rax,QWORD PTR [rip+0x21a0c4]        # 23aff0 <stderr@GLIBC_2.2.5>
   20f2c:	lea    rdi,[rip+0x119e4]        # 32917 <__PRETTY_FUNCTION__.10016+0x1887>
   20f33:	mov    edx,0x13
   20f38:	mov    esi,0x1
   20f3d:	mov    rcx,QWORD PTR [rax]
   20f40:	call   c1b0 <fwrite@plt>
   20f45:	or     edi,0xffffffff
   20f48:	call   c1a0 <exit@plt>
   20f4d:	nop    DWORD PTR [rax]

0000000000020f50 <print_dom0_uptime>:
   20f50:	push   r14
   20f52:	push   r13
   20f54:	mov    r13d,edi
   20f57:	push   r12
   20f59:	push   rbp
   20f5a:	lea    rdi,[rip+0x119ca]        # 3292b <__PRETTY_FUNCTION__.10016+0x189b>
   20f61:	push   rbx
   20f62:	mov    r14,rsi
   20f65:	xor    esi,esi
   20f67:	sub    rsp,0x210
   20f6e:	mov    rax,QWORD PTR fs:0x28
   20f77:	mov    QWORD PTR [rsp+0x208],rax
   20f7f:	xor    eax,eax
   20f81:	call   bf20 <open@plt>
   20f86:	cmp    eax,0xffffffff
   20f89:	je     210a0 <print_dom0_uptime+0x150>
   20f8f:	mov    rbp,rsp
   20f92:	mov    edi,eax
   20f94:	mov    edx,0x1ff
   20f99:	mov    rsi,rbp
   20f9c:	mov    ebx,eax
   20f9e:	call   b590 <read@plt>
   20fa3:	cmp    rax,0xffffffffffffffff
   20fa7:	mov    r12,rax
   20faa:	mov    edi,ebx
   20fac:	je     2109b <print_dom0_uptime+0x14b>
   20fb2:	call   b4a0 <close@plt>
   20fb7:	lea    rsi,[rip+0x113c7]        # 32385 <__PRETTY_FUNCTION__.10016+0x12f5>
   20fbe:	mov    rdi,rbp
   20fc1:	mov    BYTE PTR [rsp+r12*1],0x0
   20fc6:	call   bfe0 <strtok@plt>
   20fcb:	xor    esi,esi
   20fcd:	mov    rdi,rbp
   20fd0:	mov    edx,0xa
   20fd5:	call   c090 <strtoul@plt>
   20fda:	mov    rbx,rax
   20fdd:	lea    rax,[rip+0x21be7c]        # 23ce60 <ctx>
   20fe4:	xor    esi,esi
   20fe6:	mov    rdi,QWORD PTR [rax]
   20fe9:	call   ae20 <libxl_domid_to_name@plt>
   20fee:	test   r13d,r13d
   20ff1:	mov    rbp,rax
   20ff4:	jne    21060 <print_dom0_uptime+0x110>
   20ff6:	mov    edi,ebx
   20ff8:	xor    esi,esi
   20ffa:	xor    r12d,r12d
   20ffd:	call   20c90 <uptime_to_string>
   21002:	lea    rsi,[rip+0x11943]        # 3294c <__PRETTY_FUNCTION__.10016+0x18bc>
   21009:	mov    r8,rax
   2100c:	mov    rbx,rax
   2100f:	xor    ecx,ecx
   21011:	mov    rdx,rbp
   21014:	mov    edi,0x1
   21019:	xor    eax,eax
   2101b:	call   bd50 <__printf_chk@plt>
   21020:	mov    rdi,r12
   21023:	call   ac40 <free@plt>
   21028:	mov    rdi,rbx
   2102b:	call   ac40 <free@plt>
   21030:	mov    rdi,rbp
   21033:	call   ac40 <free@plt>
   21038:	mov    rax,QWORD PTR [rsp+0x208]
   21040:	xor    rax,QWORD PTR fs:0x28
   21049:	jne    210c8 <print_dom0_uptime+0x178>
   2104b:	add    rsp,0x210
   21052:	pop    rbx
   21053:	pop    rbp
   21054:	pop    r12
   21056:	pop    r13
   21058:	pop    r14
   2105a:	ret    
   2105b:	nop    DWORD PTR [rax+rax*1+0x0]
   21060:	mov    rdi,r14
   21063:	call   20e90 <current_time_to_string>
   21068:	mov    edi,ebx
   2106a:	mov    esi,0x1
   2106f:	mov    r12,rax
   21072:	call   20c90 <uptime_to_string>
   21077:	lea    rsi,[rip+0x118ba]        # 32938 <__PRETTY_FUNCTION__.10016+0x18a8>
   2107e:	mov    rbx,rax
   21081:	mov    rcx,rax
   21084:	xor    r9d,r9d
   21087:	mov    r8,rbp
   2108a:	mov    rdx,r12
   2108d:	mov    edi,0x1
   21092:	xor    eax,eax
   21094:	call   bd50 <__printf_chk@plt>
   21099:	jmp    21020 <print_dom0_uptime+0xd0>
   2109b:	call   b4a0 <close@plt>
   210a0:	mov    rax,QWORD PTR [rip+0x219f49]        # 23aff0 <stderr@GLIBC_2.2.5>
   210a7:	lea    rdi,[rip+0x118ac]        # 3295a <__PRETTY_FUNCTION__.10016+0x18ca>
   210ae:	mov    edx,0x19
   210b3:	mov    esi,0x1
   210b8:	mov    rcx,QWORD PTR [rax]
   210bb:	call   c1b0 <fwrite@plt>
   210c0:	or     edi,0xffffffff
   210c3:	call   c1a0 <exit@plt>
   210c8:	call   b130 <__stack_chk_fail@plt>
   210cd:	nop    DWORD PTR [rax]

00000000000210d0 <print_domU_uptime>:
   210d0:	push   r14
   210d2:	push   r13
   210d4:	mov    r14d,esi
   210d7:	push   r12
   210d9:	push   rbp
   210da:	mov    esi,edi
   210dc:	lea    rbp,[rip+0x21bd7d]        # 23ce60 <ctx>
   210e3:	push   rbx
   210e4:	mov    ebx,edi
   210e6:	mov    r13,rdx
   210e9:	mov    rdi,QWORD PTR [rbp+0x0]
   210ed:	call   bd60 <libxl_vm_get_start_time@plt>
   210f2:	cmp    eax,0xffffffff
   210f5:	je     211a0 <print_domU_uptime+0xd0>
   210fb:	mov    rdi,QWORD PTR [rbp+0x0]
   210ff:	mov    r12d,r13d
   21102:	mov    esi,ebx
   21104:	sub    r12d,eax
   21107:	call   ae20 <libxl_domid_to_name@plt>
   2110c:	test   r14d,r14d
   2110f:	mov    rbp,rax
   21112:	jne    21160 <print_domU_uptime+0x90>
   21114:	mov    rdi,r12
   21117:	xor    esi,esi
   21119:	xor    r13d,r13d
   2111c:	call   20c90 <uptime_to_string>
   21121:	lea    rsi,[rip+0x11824]        # 3294c <__PRETTY_FUNCTION__.10016+0x18bc>
   21128:	mov    r8,rax
   2112b:	mov    r12,rax
   2112e:	mov    ecx,ebx
   21130:	mov    rdx,rbp
   21133:	mov    edi,0x1
   21138:	xor    eax,eax
   2113a:	call   bd50 <__printf_chk@plt>
   2113f:	mov    rdi,rbp
   21142:	call   ac40 <free@plt>
   21147:	mov    rdi,r13
   2114a:	call   ac40 <free@plt>
   2114f:	pop    rbx
   21150:	mov    rdi,r12
   21153:	pop    rbp
   21154:	pop    r12
   21156:	pop    r13
   21158:	pop    r14
   2115a:	jmp    ac40 <free@plt>
   2115f:	nop
   21160:	mov    rdi,r13
   21163:	call   20e90 <current_time_to_string>
   21168:	mov    rdi,r12
   2116b:	mov    esi,0x1
   21170:	mov    r13,rax
   21173:	call   20c90 <uptime_to_string>
   21178:	lea    rsi,[rip+0x117b9]        # 32938 <__PRETTY_FUNCTION__.10016+0x18a8>
   2117f:	mov    r12,rax
   21182:	mov    rcx,rax
   21185:	mov    r9d,ebx
   21188:	mov    r8,rbp
   2118b:	mov    rdx,r13
   2118e:	mov    edi,0x1
   21193:	xor    eax,eax
   21195:	call   bd50 <__printf_chk@plt>
   2119a:	jmp    2113f <print_domU_uptime+0x6f>
   2119c:	nop    DWORD PTR [rax+0x0]
   211a0:	pop    rbx
   211a1:	pop    rbp
   211a2:	pop    r12
   211a4:	pop    r13
   211a6:	pop    r14
   211a8:	ret    
   211a9:	nop    DWORD PTR [rax+0x0]

00000000000211b0 <list_domains_details>:
   211b0:	push   r15
   211b2:	push   r14
   211b4:	push   r13
   211b6:	push   r12
   211b8:	mov    r13d,esi
   211bb:	push   rbp
   211bc:	push   rbx
   211bd:	mov    rbx,rdi
   211c0:	sub    rsp,0x4e8
   211c7:	lea    r14,[rip+0x21bc3e]        # 23ce0c <default_output_format>
   211ce:	mov    rax,QWORD PTR fs:0x28
   211d7:	mov    QWORD PTR [rsp+0x4d8],rax
   211df:	xor    eax,eax
   211e1:	mov    QWORD PTR [rsp+0x18],0x0
   211ea:	mov    r9d,DWORD PTR [r14]
   211ed:	test   r9d,r9d
   211f0:	je     21340 <list_domains_details+0x190>
   211f6:	test   esi,esi
   211f8:	mov    QWORD PTR [rsp+0x8],0x0
   21201:	jle    212a5 <list_domains_details+0xf5>
   21207:	add    rbx,0x10
   2120b:	xor    r12d,r12d
   2120e:	lea    rbp,[rsp+0x20]
   21213:	lea    r15,[rip+0x21bc46]        # 23ce60 <ctx>
   2121a:	jmp    21254 <list_domains_details+0xa4>
   2121c:	nop    DWORD PTR [rax+0x0]
   21220:	mov    esi,edi
   21222:	mov    rdi,QWORD PTR [rsp+0x8]
   21227:	mov    rdx,rbp
   2122a:	call   20e00 <printf_info_one_json>
   2122f:	mov    rdi,rbp
   21232:	mov    DWORD PTR [rsp+0x4],eax
   21236:	call   bb40 <libxl_domain_config_dispose@plt>
   2123b:	mov    eax,DWORD PTR [rsp+0x4]
   2123f:	test   eax,eax
   21241:	jne    21300 <list_domains_details+0x150>
   21247:	add    r12d,0x1
   2124b:	add    rbx,0x70
   2124f:	cmp    r13d,r12d
   21252:	jle    2129e <list_domains_details+0xee>
   21254:	mov    rdi,rbp
   21257:	call   b6e0 <libxl_domain_config_init@plt>
   2125c:	mov    esi,DWORD PTR [rbx]
   2125e:	mov    rdi,QWORD PTR [r15]
   21261:	mov    rdx,rbp
   21264:	call   c430 <libxl_retrieve_domain_configuration@plt>
   21269:	test   eax,eax
   2126b:	jne    21247 <list_domains_details+0x97>
   2126d:	mov    r8d,DWORD PTR [r14]
   21270:	mov    edi,DWORD PTR [rbx]
   21272:	test   r8d,r8d
   21275:	je     21220 <list_domains_details+0x70>
   21277:	mov    rax,QWORD PTR [rip+0x219d22]        # 23afa0 <stdout@GLIBC_2.2.5>
   2127e:	mov    rsi,rbp
   21281:	add    r12d,0x1
   21285:	add    rbx,0x70
   21289:	mov    rdx,QWORD PTR [rax]
   2128c:	call   d730 <printf_info_sexp>
   21291:	mov    rdi,rbp
   21294:	call   bb40 <libxl_domain_config_dispose@plt>
   21299:	cmp    r13d,r12d
   2129c:	jg     21254 <list_domains_details+0xa4>
   2129e:	mov    esi,DWORD PTR [r14]
   212a1:	test   esi,esi
   212a3:	je     212d0 <list_domains_details+0x120>
   212a5:	mov    rax,QWORD PTR [rsp+0x4d8]
   212ad:	xor    rax,QWORD PTR fs:0x28
   212b6:	jne    213d1 <list_domains_details+0x221>
   212bc:	add    rsp,0x4e8
   212c3:	pop    rbx
   212c4:	pop    rbp
   212c5:	pop    r12
   212c7:	pop    r13
   212c9:	pop    r14
   212cb:	pop    r15
   212cd:	ret    
   212ce:	xchg   ax,ax
   212d0:	mov    rdi,QWORD PTR [rsp+0x8]
   212d5:	call   abf0 <yajl_gen_array_close@plt>
   212da:	test   eax,eax
   212dc:	jne    21300 <list_domains_details+0x150>
   212de:	mov    rdi,QWORD PTR [rsp+0x8]
   212e3:	lea    rdx,[rsp+0x18]
   212e8:	lea    rsi,[rsp+0x10]
   212ed:	call   b330 <yajl_gen_get_buf@plt>
   212f2:	test   eax,eax
   212f4:	je     213ad <list_domains_details+0x1fd>
   212fa:	nop    WORD PTR [rax+rax*1+0x0]
   21300:	mov    edx,DWORD PTR [r14]
   21303:	test   edx,edx
   21305:	jne    212a5 <list_domains_details+0xf5>
   21307:	mov    rdi,QWORD PTR [rsp+0x8]
   2130c:	mov    DWORD PTR [rsp+0x4],eax
   21310:	call   bda0 <yajl_gen_free@plt>
   21315:	mov    eax,DWORD PTR [rsp+0x4]
   21319:	lea    rdx,[rip+0x11c28]        # 32f48 <__PRETTY_FUNCTION__.10016+0x1eb8>
   21320:	mov    esi,0x1
   21325:	mov    ecx,eax
   21327:	mov    rax,QWORD PTR [rip+0x219cc2]        # 23aff0 <stderr@GLIBC_2.2.5>
   2132e:	mov    rdi,QWORD PTR [rax]
   21331:	xor    eax,eax
   21333:	call   c1e0 <__fprintf_chk@plt>
   21338:	jmp    212a5 <list_domains_details+0xf5>
   2133d:	nop    DWORD PTR [rax]
   21340:	xor    edi,edi
   21342:	call   c2f0 <yajl_gen_alloc@plt>
   21347:	test   rax,rax
   2134a:	mov    QWORD PTR [rsp+0x8],rax
   2134f:	mov    r15,rax
   21352:	je     21388 <list_domains_details+0x1d8>
   21354:	mov    rdi,rax
   21357:	mov    edx,0x1
   2135c:	mov    esi,0x1
   21361:	xor    eax,eax
   21363:	call   ba90 <yajl_gen_config@plt>
   21368:	mov    rdi,r15
   2136b:	call   b420 <yajl_gen_array_open@plt>
   21370:	test   eax,eax
   21372:	jne    21300 <list_domains_details+0x150>
   21374:	test   r13d,r13d
   21377:	jg     21207 <list_domains_details+0x57>
   2137d:	jmp    2129e <list_domains_details+0xee>
   21382:	nop    WORD PTR [rax+rax*1+0x0]
   21388:	mov    rax,QWORD PTR [rip+0x219c61]        # 23aff0 <stderr@GLIBC_2.2.5>
   2138f:	lea    rdi,[rip+0x11b8a]        # 32f20 <__PRETTY_FUNCTION__.10016+0x1e90>
   21396:	mov    edx,0x22
   2139b:	mov    esi,0x1
   213a0:	mov    rcx,QWORD PTR [rax]
   213a3:	call   c1b0 <fwrite@plt>
   213a8:	jmp    212a5 <list_domains_details+0xf5>
   213ad:	mov    rdi,QWORD PTR [rsp+0x10]
   213b2:	call   aeb0 <puts@plt>
   213b7:	mov    ecx,DWORD PTR [r14]
   213ba:	test   ecx,ecx
   213bc:	jne    212a5 <list_domains_details+0xf5>
   213c2:	mov    rdi,QWORD PTR [rsp+0x8]
   213c7:	call   bda0 <yajl_gen_free@plt>
   213cc:	jmp    212a5 <list_domains_details+0xf5>
   213d1:	call   b130 <__stack_chk_fail@plt>
   213d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000213e0 <printf_info>:
   213e0:	push   r13
   213e2:	push   r12
   213e4:	mov    r13,rdx
   213e7:	push   rbp
   213e8:	push   rbx
   213e9:	mov    r12d,esi
   213ec:	mov    rbp,rcx
   213ef:	sub    rsp,0x28
   213f3:	mov    rax,QWORD PTR fs:0x28
   213fc:	mov    QWORD PTR [rsp+0x18],rax
   21401:	xor    eax,eax
   21403:	cmp    edi,0x1
   21406:	je     214c8 <printf_info+0xe8>
   2140c:	xor    edi,edi
   2140e:	mov    QWORD PTR [rsp+0x10],0x0
   21417:	call   c2f0 <yajl_gen_alloc@plt>
   2141c:	test   rax,rax
   2141f:	mov    rbx,rax
   21422:	je     214a0 <printf_info+0xc0>
   21424:	mov    rdi,rax
   21427:	mov    edx,0x1
   2142c:	mov    esi,0x1
   21431:	xor    eax,eax
   21433:	call   ba90 <yajl_gen_config@plt>
   21438:	mov    esi,r12d
   2143b:	mov    rdx,r13
   2143e:	mov    rdi,rbx
   21441:	call   20e00 <printf_info_one_json>
   21446:	test   eax,eax
   21448:	mov    r12d,eax
   2144b:	je     214e0 <printf_info+0x100>
   21451:	mov    rdi,rbx
   21454:	call   bda0 <yajl_gen_free@plt>
   21459:	mov    rax,QWORD PTR [rip+0x219b90]        # 23aff0 <stderr@GLIBC_2.2.5>
   21460:	lea    rdx,[rip+0x11ae1]        # 32f48 <__PRETTY_FUNCTION__.10016+0x1eb8>
   21467:	mov    ecx,r12d
   2146a:	mov    esi,0x1
   2146f:	mov    rdi,QWORD PTR [rax]
   21472:	xor    eax,eax
   21474:	call   c1e0 <__fprintf_chk@plt>
   21479:	mov    rdi,rbp
   2147c:	call   ead0 <flush_stream>
   21481:	mov    rax,QWORD PTR [rsp+0x18]
   21486:	xor    rax,QWORD PTR fs:0x28
   2148f:	jne    21517 <printf_info+0x137>
   21495:	add    rsp,0x28
   21499:	pop    rbx
   2149a:	pop    rbp
   2149b:	pop    r12
   2149d:	pop    r13
   2149f:	ret    
   214a0:	mov    rax,QWORD PTR [rip+0x219b49]        # 23aff0 <stderr@GLIBC_2.2.5>
   214a7:	lea    rdi,[rip+0x11a72]        # 32f20 <__PRETTY_FUNCTION__.10016+0x1e90>
   214ae:	mov    edx,0x22
   214b3:	mov    esi,0x1
   214b8:	mov    rcx,QWORD PTR [rax]
   214bb:	call   c1b0 <fwrite@plt>
   214c0:	jmp    21481 <printf_info+0xa1>
   214c2:	nop    WORD PTR [rax+rax*1+0x0]
   214c8:	mov    rdx,rcx
   214cb:	mov    rsi,r13
   214ce:	mov    edi,r12d
   214d1:	call   d730 <printf_info_sexp>
   214d6:	jmp    21481 <printf_info+0xa1>
   214d8:	nop    DWORD PTR [rax+rax*1+0x0]
   214e0:	lea    rdx,[rsp+0x10]
   214e5:	lea    rsi,[rsp+0x8]
   214ea:	mov    rdi,rbx
   214ed:	call   b330 <yajl_gen_get_buf@plt>
   214f2:	test   eax,eax
   214f4:	mov    r12d,eax
   214f7:	jne    21451 <printf_info+0x71>
   214fd:	mov    rdi,QWORD PTR [rsp+0x8]
   21502:	mov    rsi,rbp
   21505:	call   b300 <fputs@plt>
   2150a:	mov    rdi,rbx
   2150d:	call   bda0 <yajl_gen_free@plt>
   21512:	jmp    21479 <printf_info+0x99>
   21517:	call   b130 <__stack_chk_fail@plt>
   2151c:	nop    DWORD PTR [rax+0x0]

0000000000021520 <main_list>:
   21520:	push   r15
   21522:	push   r14
   21524:	xor    r15d,r15d
   21527:	push   r13
   21529:	push   r12
   2152b:	xor    r13d,r13d
   2152e:	push   rbp
   2152f:	push   rbx
   21530:	lea    rbx,[rip+0x11d85]        # 332bc <__PRETTY_FUNCTION__.10016+0x222c>
   21537:	mov    ebp,edi
   21539:	mov    r12,rsi
   2153c:	xor    r14d,r14d
   2153f:	sub    rsp,0xa8
   21546:	mov    rax,QWORD PTR fs:0x28
   2154f:	mov    QWORD PTR [rsp+0x98],rax
   21557:	xor    eax,eax
   21559:	mov    BYTE PTR [rsp+0xf],0x0
   2155e:	mov    BYTE PTR [rsp+0xe],0x0
   21563:	nop    DWORD PTR [rax+rax*1+0x0]
   21568:	lea    r8,[rip+0xfca4]        # 31213 <__PRETTY_FUNCTION__.10016+0x183>
   2156f:	lea    rcx,[rip+0x21b40a]        # 23c980 <opts.11273>
   21576:	lea    rdx,[rip+0x113f7]        # 32974 <__PRETTY_FUNCTION__.10016+0x18e4>
   2157d:	xor    r9d,r9d
   21580:	mov    rsi,r12
   21583:	mov    edi,ebp
   21585:	call   ebe0 <def_getopt>
   2158a:	cmp    eax,0xffffffff
   2158d:	je     215f0 <main_list+0xd0>
   2158f:	sub    eax,0x5a
   21592:	cmp    eax,0x1c
   21595:	ja     21568 <main_list+0x48>
   21597:	movsxd rax,DWORD PTR [rbx+rax*4]
   2159b:	add    rax,rbx
   2159e:	jmp    rax
   215a0:	mov    r14d,0x1
   215a6:	jmp    21568 <main_list+0x48>
   215a8:	nop    DWORD PTR [rax+rax*1+0x0]
   215b0:	mov    r15d,0x1
   215b6:	jmp    21568 <main_list+0x48>
   215b8:	nop    DWORD PTR [rax+rax*1+0x0]
   215c0:	mov    BYTE PTR [rsp+0xf],0x1
   215c5:	jmp    21568 <main_list+0x48>
   215c7:	nop    WORD PTR [rax+rax*1+0x0]
   215d0:	mov    BYTE PTR [rsp+0xe],0x1
   215d5:	jmp    21568 <main_list+0x48>
   215d7:	nop    WORD PTR [rax+rax*1+0x0]
   215e0:	mov    r13d,0x1
   215e6:	jmp    21568 <main_list+0x48>
   215e8:	nop    DWORD PTR [rax+rax*1+0x0]
   215f0:	lea    rbx,[rsp+0x20]
   215f5:	mov    rdi,rbx
   215f8:	call   b740 <libxl_dominfo_init@plt>
   215fd:	mov    rax,QWORD PTR [rip+0x2199a4]        # 23afa8 <optind@GLIBC_2.2.5>
   21604:	movsxd rax,DWORD PTR [rax]
   21607:	cmp    eax,ebp
   21609:	jge    216c0 <main_list+0x1a0>
   2160f:	sub    ebp,0x1
   21612:	cmp    eax,ebp
   21614:	je     21650 <main_list+0x130>
   21616:	lea    rdi,[rip+0xfbf6]        # 31213 <__PRETTY_FUNCTION__.10016+0x183>
   2161d:	call   d4f0 <help>
   21622:	mov    eax,0x1
   21627:	mov    rdx,QWORD PTR [rsp+0x98]
   2162f:	xor    rdx,QWORD PTR fs:0x28
   21638:	jne    21798 <main_list+0x278>
   2163e:	add    rsp,0xa8
   21645:	pop    rbx
   21646:	pop    rbp
   21647:	pop    r12
   21649:	pop    r13
   2164b:	pop    r14
   2164d:	pop    r15
   2164f:	ret    
   21650:	mov    rdi,QWORD PTR [r12+rax*8]
   21654:	call   eb40 <find_domain>
   21659:	mov    edx,eax
   2165b:	lea    rax,[rip+0x21b7fe]        # 23ce60 <ctx>
   21662:	mov    rsi,rbx
   21665:	mov    rdi,QWORD PTR [rax]
   21668:	call   b5b0 <libxl_domain_info@plt>
   2166d:	cmp    eax,0xffffffeb
   21670:	je     21763 <main_list+0x243>
   21676:	test   eax,eax
   21678:	jne    21710 <main_list+0x1f0>
   2167e:	xor    r12d,r12d
   21681:	test   r14b,r14b
   21684:	mov    DWORD PTR [rsp+0x1c],0x1
   2168c:	mov    esi,0x1
   21691:	mov    rbp,rbx
   21694:	jne    216e8 <main_list+0x1c8>
   21696:	movzx  eax,BYTE PTR [rsp+0xf]
   2169b:	movzx  edi,BYTE PTR [rsp+0xe]
   216a0:	sub    rsp,0x8
   216a4:	push   rsi
   216a5:	mov    r8d,r15d
   216a8:	xor    edx,edx
   216aa:	movzx  ecx,r13b
   216ae:	mov    r9,rbp
   216b1:	and    r8d,0x1
   216b5:	mov    esi,eax
   216b7:	call   204e0 <list_domains>
   216bc:	pop    rax
   216bd:	pop    rdx
   216be:	jmp    216f0 <main_list+0x1d0>
   216c0:	lea    rax,[rip+0x21b799]        # 23ce60 <ctx>
   216c7:	lea    rsi,[rsp+0x1c]
   216cc:	mov    rdi,QWORD PTR [rax]
   216cf:	call   b830 <libxl_list_domain@plt>
   216d4:	test   rax,rax
   216d7:	mov    rbp,rax
   216da:	je     21739 <main_list+0x219>
   216dc:	test   r14b,r14b
   216df:	mov    esi,DWORD PTR [rsp+0x1c]
   216e3:	mov    r12,rax
   216e6:	je     21696 <main_list+0x176>
   216e8:	mov    rdi,rbp
   216eb:	call   211b0 <list_domains_details>
   216f0:	test   r12,r12
   216f3:	je     21701 <main_list+0x1e1>
   216f5:	mov    esi,DWORD PTR [rsp+0x1c]
   216f9:	mov    rdi,rbp
   216fc:	call   b0e0 <libxl_dominfo_list_free@plt>
   21701:	mov    rdi,rbx
   21704:	call   b8d0 <libxl_dominfo_dispose@plt>
   21709:	xor    eax,eax
   2170b:	jmp    21627 <main_list+0x107>
   21710:	mov    ecx,eax
   21712:	mov    rax,QWORD PTR [rip+0x2198d7]        # 23aff0 <stderr@GLIBC_2.2.5>
   21719:	lea    rdx,[rip+0x11060]        # 32780 <__PRETTY_FUNCTION__.10016+0x16f0>
   21720:	mov    esi,0x1
   21725:	mov    rdi,QWORD PTR [rax]
   21728:	xor    eax,eax
   2172a:	call   c1e0 <__fprintf_chk@plt>
   2172f:	mov    eax,0x1
   21734:	jmp    21627 <main_list+0x107>
   21739:	mov    rax,QWORD PTR [rip+0x2198b0]        # 23aff0 <stderr@GLIBC_2.2.5>
   21740:	lea    rdi,[rip+0x10469]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   21747:	mov    edx,0x1a
   2174c:	mov    esi,0x1
   21751:	mov    rcx,QWORD PTR [rax]
   21754:	call   c1b0 <fwrite@plt>
   21759:	mov    eax,0x1
   2175e:	jmp    21627 <main_list+0x107>
   21763:	mov    rax,QWORD PTR [rip+0x21983e]        # 23afa8 <optind@GLIBC_2.2.5>
   2176a:	lea    rdx,[rip+0x10fe7]        # 32758 <__PRETTY_FUNCTION__.10016+0x16c8>
   21771:	mov    esi,0x1
   21776:	movsxd rax,DWORD PTR [rax]
   21779:	mov    rcx,QWORD PTR [r12+rax*8]
   2177d:	mov    rax,QWORD PTR [rip+0x21986c]        # 23aff0 <stderr@GLIBC_2.2.5>
   21784:	mov    rdi,QWORD PTR [rax]
   21787:	xor    eax,eax
   21789:	call   c1e0 <__fprintf_chk@plt>
   2178e:	mov    eax,0x1
   21793:	jmp    21627 <main_list+0x107>
   21798:	call   b130 <__stack_chk_fail@plt>
   2179d:	nop    DWORD PTR [rax]

00000000000217a0 <main_vm_list>:
   217a0:	push   r15
   217a2:	push   r14
   217a4:	push   r13
   217a6:	push   r12
   217a8:	mov    r12d,edi
   217ab:	push   rbp
   217ac:	push   rbx
   217ad:	lea    rbx,[rip+0x870e]        # 29ec2 <__PRETTY_FUNCTION__.10113+0x2aa>
   217b4:	mov    rbp,rsi
   217b7:	sub    rsp,0x18
   217bb:	mov    rax,QWORD PTR fs:0x28
   217c4:	mov    QWORD PTR [rsp+0x8],rax
   217c9:	xor    eax,eax
   217cb:	nop    DWORD PTR [rax+rax*1+0x0]
   217d0:	lea    rdx,[rip+0xff6b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   217d7:	xor    r9d,r9d
   217da:	xor    ecx,ecx
   217dc:	mov    r8,rbx
   217df:	mov    rsi,rbp
   217e2:	mov    edi,r12d
   217e5:	call   ebe0 <def_getopt>
   217ea:	cmp    eax,0xffffffff
   217ed:	jne    217d0 <main_vm_list+0x30>
   217ef:	lea    r13,[rip+0x21b66a]        # 23ce60 <ctx>
   217f6:	lea    rsi,[rsp+0x4]
   217fb:	mov    rdi,QWORD PTR [r13+0x0]
   217ff:	call   c480 <libxl_list_vm@plt>
   21804:	test   rax,rax
   21807:	mov    r15,rax
   2180a:	je     218f1 <main_vm_list+0x151>
   21810:	lea    rdi,[rip+0x11769]        # 32f80 <__PRETTY_FUNCTION__.10016+0x1ef0>
   21817:	call   aeb0 <puts@plt>
   2181c:	mov    esi,DWORD PTR [rsp+0x4]
   21820:	test   esi,esi
   21822:	jle    218c8 <main_vm_list+0x128>
   21828:	lea    r14,[rip+0x11789]        # 32fb8 <__PRETTY_FUNCTION__.10016+0x1f28>
   2182f:	mov    rbx,r15
   21832:	xor    ebp,ebp
   21834:	nop    DWORD PTR [rax+0x0]
   21838:	mov    esi,DWORD PTR [rbx+0x10]
   2183b:	mov    rdi,QWORD PTR [r13+0x0]
   2183f:	add    ebp,0x1
   21842:	add    rbx,0x14
   21846:	call   ae20 <libxl_domid_to_name@plt>
   2184b:	movzx  ecx,BYTE PTR [rbx-0x13]
   2184f:	movzx  edx,BYTE PTR [rbx-0x14]
   21853:	mov    r12,rax
   21856:	push   rax
   21857:	mov    eax,DWORD PTR [rbx-0x4]
   2185a:	mov    rsi,r14
   2185d:	mov    edi,0x1
   21862:	push   rax
   21863:	movzx  eax,BYTE PTR [rbx-0x5]
   21867:	push   rax
   21868:	movzx  eax,BYTE PTR [rbx-0x6]
   2186c:	push   rax
   2186d:	movzx  eax,BYTE PTR [rbx-0x7]
   21871:	push   rax
   21872:	movzx  eax,BYTE PTR [rbx-0x8]
   21876:	push   rax
   21877:	movzx  eax,BYTE PTR [rbx-0x9]
   2187b:	push   rax
   2187c:	movzx  eax,BYTE PTR [rbx-0xa]
   21880:	push   rax
   21881:	movzx  eax,BYTE PTR [rbx-0xb]
   21885:	push   rax
   21886:	movzx  eax,BYTE PTR [rbx-0xc]
   2188a:	push   rax
   2188b:	movzx  eax,BYTE PTR [rbx-0xd]
   2188f:	push   rax
   21890:	movzx  eax,BYTE PTR [rbx-0xe]
   21894:	push   rax
   21895:	movzx  eax,BYTE PTR [rbx-0xf]
   21899:	push   rax
   2189a:	movzx  eax,BYTE PTR [rbx-0x10]
   2189e:	push   rax
   2189f:	movzx  r9d,BYTE PTR [rbx-0x11]
   218a4:	xor    eax,eax
   218a6:	movzx  r8d,BYTE PTR [rbx-0x12]
   218ab:	call   bd50 <__printf_chk@plt>
   218b0:	add    rsp,0x70
   218b4:	mov    rdi,r12
   218b7:	call   ac40 <free@plt>
   218bc:	mov    esi,DWORD PTR [rsp+0x4]
   218c0:	cmp    ebp,esi
   218c2:	jl     21838 <main_vm_list+0x98>
   218c8:	mov    rdi,r15
   218cb:	call   b080 <libxl_vminfo_list_free@plt>
   218d0:	xor    eax,eax
   218d2:	mov    rdx,QWORD PTR [rsp+0x8]
   218d7:	xor    rdx,QWORD PTR fs:0x28
   218e0:	jne    2191b <main_vm_list+0x17b>
   218e2:	add    rsp,0x18
   218e6:	pop    rbx
   218e7:	pop    rbp
   218e8:	pop    r12
   218ea:	pop    r13
   218ec:	pop    r14
   218ee:	pop    r15
   218f0:	ret    
   218f1:	mov    rax,QWORD PTR [rip+0x2196f8]        # 23aff0 <stderr@GLIBC_2.2.5>
   218f8:	lea    rdi,[rip+0x1107d]        # 3297c <__PRETTY_FUNCTION__.10016+0x18ec>
   218ff:	mov    edx,0x16
   21904:	mov    esi,0x1
   21909:	mov    rcx,QWORD PTR [rax]
   2190c:	call   c1b0 <fwrite@plt>
   21911:	mov    edi,0x1
   21916:	call   c1a0 <exit@plt>
   2191b:	call   b130 <__stack_chk_fail@plt>

0000000000021920 <main_info>:
   21920:	push   r15
   21922:	push   r14
   21924:	push   r13
   21926:	push   r12
   21928:	mov    r13d,0x1
   2192e:	push   rbp
   2192f:	push   rbx
   21930:	mov    ebp,edi
   21932:	mov    r12,rsi
   21935:	xor    ebx,ebx
   21937:	sub    rsp,0xa8
   2193e:	mov    rax,QWORD PTR fs:0x28
   21947:	mov    QWORD PTR [rsp+0x98],rax
   2194f:	xor    eax,eax
   21951:	jmp    2195f <main_info+0x3f>
   21953:	nop    DWORD PTR [rax+rax*1+0x0]
   21958:	cmp    eax,0x6e
   2195b:	cmove  ebx,r13d
   2195f:	lea    r8,[rip+0x8a5b]        # 2a3c1 <__PRETTY_FUNCTION__.10113+0x7a9>
   21966:	lea    rcx,[rip+0x21afb3]        # 23c920 <opts.11302>
   2196d:	lea    rdx,[rip+0x11043]        # 329b7 <__PRETTY_FUNCTION__.10016+0x1927>
   21974:	xor    r9d,r9d
   21977:	mov    rsi,r12
   2197a:	mov    edi,ebp
   2197c:	call   ebe0 <def_getopt>
   21981:	cmp    eax,0xffffffff
   21984:	jne    21958 <main_info+0x38>
   21986:	test   ebx,ebx
   21988:	jne    219a3 <main_info+0x83>
   2198a:	mov    rax,QWORD PTR [rip+0x219617]        # 23afa8 <optind@GLIBC_2.2.5>
   21991:	movsxd rax,DWORD PTR [rax]
   21994:	cmp    eax,ebp
   21996:	jge    219a3 <main_info+0x83>
   21998:	mov    rax,QWORD PTR [r12+rax*8]
   2199c:	mov    QWORD PTR [rip+0x21b49d],rax        # 23ce40 <info_name>
   219a3:	call   20bf0 <output_nodeinfo>
   219a8:	lea    rbp,[rip+0x21b4b1]        # 23ce60 <ctx>
   219af:	lea    r14,[rsp+0x20]
   219b4:	mov    rsi,r14
   219b7:	mov    rdi,QWORD PTR [rbp+0x0]
   219bb:	call   b470 <libxl_get_physinfo@plt>
   219c0:	test   eax,eax
   219c2:	jne    21ee0 <main_info+0x5c0>
   219c8:	mov    esi,DWORD PTR [rsp+0x2c]
   219cc:	lea    rdi,[rip+0x10fe7]        # 329ba <__PRETTY_FUNCTION__.10016+0x192a>
   219d3:	xor    eax,eax
   219d5:	call   20a80 <maybe_printf>
   219da:	mov    esi,DWORD PTR [rsp+0x28]
   219de:	lea    rdi,[rip+0x10ff2]        # 329d7 <__PRETTY_FUNCTION__.10016+0x1947>
   219e5:	xor    eax,eax
   219e7:	call   20a80 <maybe_printf>
   219ec:	mov    esi,DWORD PTR [rsp+0x70]
   219f0:	lea    rdi,[rip+0x10ffd]        # 329f4 <__PRETTY_FUNCTION__.10016+0x1964>
   219f7:	xor    eax,eax
   219f9:	call   20a80 <maybe_printf>
   219fe:	mov    esi,DWORD PTR [rsp+0x24]
   21a02:	lea    rdi,[rip+0x11008]        # 32a11 <__PRETTY_FUNCTION__.10016+0x1981>
   21a09:	xor    eax,eax
   21a0b:	call   20a80 <maybe_printf>
   21a10:	mov    esi,DWORD PTR [rsp+0x20]
   21a14:	lea    rdi,[rip+0x11013]        # 32a2e <__PRETTY_FUNCTION__.10016+0x199e>
   21a1b:	xor    eax,eax
   21a1d:	call   20a80 <maybe_printf>
   21a22:	mov    ecx,DWORD PTR [rsp+0x30]
   21a26:	mov    esi,0x10624dd3
   21a2b:	lea    rdi,[rip+0x115fe]        # 33030 <__PRETTY_FUNCTION__.10016+0x1fa0>
   21a32:	mov    eax,ecx
   21a34:	mul    esi
   21a36:	mov    esi,edx
   21a38:	shr    esi,0x6
   21a3b:	imul   eax,esi,0x3e8
   21a41:	sub    ecx,eax
   21a43:	xor    eax,eax
   21a45:	mov    edx,ecx
   21a47:	call   20a80 <maybe_printf>
   21a4c:	sub    rsp,0x8
   21a50:	lea    rdi,[rip+0x11601]        # 33058 <__PRETTY_FUNCTION__.10016+0x1fc8>
   21a57:	mov    eax,DWORD PTR [rsp+0x98]
   21a5e:	push   rax
   21a5f:	mov    eax,DWORD PTR [rsp+0x9c]
   21a66:	push   rax
   21a67:	mov    eax,DWORD PTR [rsp+0xa0]
   21a6e:	push   rax
   21a6f:	mov    r9d,DWORD PTR [rsp+0xa4]
   21a77:	xor    eax,eax
   21a79:	mov    r8d,DWORD PTR [rsp+0xa0]
   21a81:	mov    ecx,DWORD PTR [rsp+0x9c]
   21a88:	mov    edx,DWORD PTR [rsp+0x98]
   21a8f:	mov    esi,DWORD PTR [rsp+0x94]
   21a96:	call   20a80 <maybe_printf>
   21a9b:	add    rsp,0x20
   21a9f:	cmp    BYTE PTR [rsp+0x95],0x0
   21aa7:	je     21ea0 <main_info+0x580>
   21aad:	cmp    BYTE PTR [rsp+0x96],0x0
   21ab5:	movzx  eax,BYTE PTR [rsp+0x94]
   21abd:	lea    rcx,[rip+0xd8a3]        # 2f367 <__func__.10421+0xfdf>
   21ac4:	je     220c0 <main_info+0x7a0>
   21aca:	lea    rsi,[rip+0x10ec2]        # 32993 <__PRETTY_FUNCTION__.10016+0x1903>
   21ad1:	test   al,al
   21ad3:	lea    rax,[rip+0x10ec7]        # 329a1 <__PRETTY_FUNCTION__.10016+0x1911>
   21ada:	mov    rdx,rcx
   21add:	lea    r8,[rip+0x10ec6]        # 329aa <__PRETTY_FUNCTION__.10016+0x191a>
   21ae4:	cmovne rcx,rsi
   21ae8:	lea    rsi,[rip+0x10eb7]        # 329a6 <__PRETTY_FUNCTION__.10016+0x1916>
   21aef:	cmovne rdx,rax
   21af3:	lea    rdi,[rip+0x115a6]        # 330a0 <__PRETTY_FUNCTION__.10016+0x2010>
   21afa:	xor    eax,eax
   21afc:	call   20a80 <maybe_printf>
   21b01:	mov    rdi,QWORD PTR [rbp+0x0]
   21b05:	call   b360 <libxl_get_version_info@plt>
   21b0a:	test   rax,rax
   21b0d:	mov    rcx,rax
   21b10:	je     21bae <main_info+0x28e>
   21b16:	mov    eax,0x100000
   21b1b:	lea    rdi,[rip+0x10f29]        # 32a4b <__PRETTY_FUNCTION__.10016+0x19bb>
   21b22:	cdq    
   21b23:	idiv   DWORD PTR [rcx+0x48]
   21b26:	xor    edx,edx
   21b28:	mov    r12d,eax
   21b2b:	mov    rax,QWORD PTR [rsp+0x38]
   21b30:	div    r12
   21b33:	mov    rsi,rax
   21b36:	xor    eax,eax
   21b38:	call   20a80 <maybe_printf>
   21b3d:	mov    rax,QWORD PTR [rsp+0x40]
   21b42:	sub    rax,QWORD PTR [rsp+0x50]
   21b47:	xor    edx,edx
   21b49:	lea    rdi,[rip+0x10f19]        # 32a69 <__PRETTY_FUNCTION__.10016+0x19d9>
   21b50:	div    r12
   21b53:	mov    rsi,rax
   21b56:	xor    eax,eax
   21b58:	call   20a80 <maybe_printf>
   21b5d:	mov    rax,QWORD PTR [rsp+0x58]
   21b62:	xor    edx,edx
   21b64:	lea    rdi,[rip+0x10f1c]        # 32a87 <__PRETTY_FUNCTION__.10016+0x19f7>
   21b6b:	div    r12
   21b6e:	mov    rsi,rax
   21b71:	xor    eax,eax
   21b73:	call   20a80 <maybe_printf>
   21b78:	mov    rax,QWORD PTR [rsp+0x60]
   21b7d:	xor    edx,edx
   21b7f:	lea    rdi,[rip+0x10f1f]        # 32aa5 <__PRETTY_FUNCTION__.10016+0x1a15>
   21b86:	div    r12
   21b89:	mov    rsi,rax
   21b8c:	xor    eax,eax
   21b8e:	call   20a80 <maybe_printf>
   21b93:	mov    rax,QWORD PTR [rsp+0x50]
   21b98:	xor    edx,edx
   21b9a:	lea    rdi,[rip+0x10f22]        # 32ac3 <__PRETTY_FUNCTION__.10016+0x1a33>
   21ba1:	div    r12
   21ba4:	mov    rsi,rax
   21ba7:	xor    eax,eax
   21ba9:	call   20a80 <maybe_printf>
   21bae:	lea    r13,[rsp+0x10]
   21bb3:	mov    rdi,QWORD PTR [rbp+0x0]
   21bb7:	mov    rsi,r13
   21bba:	call   bf50 <libxl_get_freecpus@plt>
   21bbf:	test   eax,eax
   21bc1:	mov    r15d,eax
   21bc4:	jne    21c15 <main_info+0x2f5>
   21bc6:	mov    eax,DWORD PTR [rsp+0x10]
   21bca:	shl    eax,0x3
   21bcd:	test   eax,eax
   21bcf:	je     21bfa <main_info+0x2da>
   21bd1:	xor    r12d,r12d
   21bd4:	nop    DWORD PTR [rax+0x0]
   21bd8:	mov    esi,r12d
   21bdb:	mov    rdi,r13
   21bde:	call   be30 <libxl_bitmap_test@plt>
   21be3:	cmp    eax,0x1
   21be6:	mov    eax,DWORD PTR [rsp+0x10]
   21bea:	sbb    r15d,0xffffffff
   21bee:	add    r12d,0x1
   21bf2:	shl    eax,0x3
   21bf5:	cmp    r12d,eax
   21bf8:	jb     21bd8 <main_info+0x2b8>
   21bfa:	lea    rdi,[rip+0x10ee0]        # 32ae1 <__PRETTY_FUNCTION__.10016+0x1a51>
   21c01:	mov    esi,r15d
   21c04:	xor    eax,eax
   21c06:	call   20a80 <maybe_printf>
   21c0b:	mov    rdi,QWORD PTR [rsp+0x18]
   21c10:	call   ac40 <free@plt>
   21c15:	mov    rdi,r14
   21c18:	call   c070 <libxl_physinfo_dispose@plt>
   21c1d:	test   ebx,ebx
   21c1f:	mov    rdi,QWORD PTR [rbp+0x0]
   21c23:	je     21f0c <main_info+0x5ec>
   21c29:	lea    r13,[rsp+0x10]
   21c2e:	mov    rsi,r13
   21c31:	call   bc60 <libxl_get_cpu_topology@plt>
   21c36:	test   rax,rax
   21c39:	mov    r14,rax
   21c3c:	je     22140 <main_info+0x820>
   21c42:	lea    rdi,[rip+0x10eb5]        # 32afe <__PRETTY_FUNCTION__.10016+0x1a6e>
   21c49:	call   aeb0 <puts@plt>
   21c4e:	lea    rdi,[rip+0x11493]        # 330e8 <__PRETTY_FUNCTION__.10016+0x2058>
   21c55:	call   aeb0 <puts@plt>
   21c5a:	mov    esi,DWORD PTR [rsp+0x10]
   21c5e:	test   esi,esi
   21c60:	jle    21caa <main_info+0x38a>
   21c62:	mov    r12,r14
   21c65:	xor    r15d,r15d
   21c68:	nop    DWORD PTR [rax+rax*1+0x0]
   21c70:	mov    ecx,DWORD PTR [r12]
   21c74:	cmp    ecx,0xffffffff
   21c77:	je     21c9d <main_info+0x37d>
   21c79:	mov    r9d,DWORD PTR [r12+0x8]
   21c7e:	mov    r8d,DWORD PTR [r12+0x4]
   21c83:	lea    rsi,[rip+0x10e8d]        # 32b17 <__PRETTY_FUNCTION__.10016+0x1a87>
   21c8a:	mov    edx,r15d
   21c8d:	mov    edi,0x1
   21c92:	xor    eax,eax
   21c94:	call   bd50 <__printf_chk@plt>
   21c99:	mov    esi,DWORD PTR [rsp+0x10]
   21c9d:	add    r15d,0x1
   21ca1:	add    r12,0xc
   21ca5:	cmp    r15d,esi
   21ca8:	jl     21c70 <main_info+0x350>
   21caa:	mov    rdi,r14
   21cad:	call   bc20 <libxl_cputopology_list_free@plt>
   21cb2:	mov    rdi,QWORD PTR [rbp+0x0]
   21cb6:	mov    rsi,r13
   21cb9:	call   af80 <libxl_get_pci_topology@plt>
   21cbe:	test   rax,rax
   21cc1:	mov    QWORD PTR [rsp+0x8],rax
   21cc6:	je     220f0 <main_info+0x7d0>
   21ccc:	lea    rdi,[rip+0x10e61]        # 32b34 <__PRETTY_FUNCTION__.10016+0x1aa4>
   21cd3:	call   aeb0 <puts@plt>
   21cd8:	lea    rdi,[rip+0x10e6e]        # 32b4d <__PRETTY_FUNCTION__.10016+0x1abd>
   21cdf:	call   aeb0 <puts@plt>
   21ce4:	mov    ecx,DWORD PTR [rsp+0x10]
   21ce8:	test   ecx,ecx
   21cea:	jle    22165 <main_info+0x845>
   21cf0:	mov    r12,QWORD PTR [rsp+0x8]
   21cf5:	xor    r15d,r15d
   21cf8:	xor    r14d,r14d
   21cfb:	nop    DWORD PTR [rax+rax*1+0x0]
   21d00:	mov    eax,DWORD PTR [r12+0x4]
   21d05:	cmp    eax,0xffffffff
   21d08:	je     21d48 <main_info+0x428>
   21d0a:	movzx  r9d,BYTE PTR [r12+0x3]
   21d10:	movzx  edx,WORD PTR [r12]
   21d15:	sub    rsp,0x8
   21d19:	movzx  ecx,BYTE PTR [r12+0x2]
   21d1f:	lea    rsi,[rip+0x10e3d]        # 32b63 <__PRETTY_FUNCTION__.10016+0x1ad3>
   21d26:	push   rax
   21d27:	mov    edi,0x1
   21d2c:	xor    eax,eax
   21d2e:	add    r15d,0x1
   21d32:	mov    r8d,r9d
   21d35:	and    r9d,0x7
   21d39:	shr    r8b,0x3
   21d3d:	and    r8d,0x1f
   21d41:	call   bd50 <__printf_chk@plt>
   21d46:	pop    rax
   21d47:	pop    rdx
   21d48:	mov    esi,DWORD PTR [rsp+0x10]
   21d4c:	add    r14d,0x1
   21d50:	add    r12,0x8
   21d54:	cmp    r14d,esi
   21d57:	jl     21d00 <main_info+0x3e0>
   21d59:	test   r15d,r15d
   21d5c:	je     22165 <main_info+0x845>
   21d62:	mov    rdi,QWORD PTR [rsp+0x8]
   21d67:	call   c190 <libxl_pcitopology_list_free@plt>
   21d6c:	mov    rdi,QWORD PTR [rbp+0x0]
   21d70:	mov    rsi,r13
   21d73:	call   b700 <libxl_get_numainfo@plt>
   21d78:	test   rax,rax
   21d7b:	mov    QWORD PTR [rsp+0x8],rax
   21d80:	je     22118 <main_info+0x7f8>
   21d86:	lea    rdi,[rip+0x10e0f]        # 32b9c <__PRETTY_FUNCTION__.10016+0x1b0c>
   21d8d:	call   aeb0 <puts@plt>
   21d92:	lea    rdi,[rip+0x113b7]        # 33150 <__PRETTY_FUNCTION__.10016+0x20c0>
   21d99:	call   aeb0 <puts@plt>
   21d9e:	mov    esi,DWORD PTR [rsp+0x10]
   21da2:	test   esi,esi
   21da4:	jle    21e58 <main_info+0x538>
   21daa:	mov    r15,QWORD PTR [rsp+0x8]
   21daf:	xor    r12d,r12d
   21db2:	jmp    21dc9 <main_info+0x4a9>
   21db4:	nop    DWORD PTR [rax+0x0]
   21db8:	add    r12d,0x1
   21dbc:	add    r15,0x20
   21dc0:	cmp    r12d,esi
   21dc3:	jge    21e58 <main_info+0x538>
   21dc9:	mov    rcx,QWORD PTR [r15]
   21dcc:	mov    eax,0xffffffff
   21dd1:	cmp    rcx,rax
   21dd4:	je     21db8 <main_info+0x498>
   21dd6:	mov    rax,QWORD PTR [r15+0x18]
   21dda:	mov    r8,QWORD PTR [r15+0x8]
   21dde:	lea    rsi,[rip+0x10dd0]        # 32bb5 <__PRETTY_FUNCTION__.10016+0x1b25>
   21de5:	shr    rcx,0x14
   21de9:	mov    edx,r12d
   21dec:	mov    edi,0x1
   21df1:	mov    r9d,DWORD PTR [rax]
   21df4:	shr    r8,0x14
   21df8:	xor    eax,eax
   21dfa:	call   bd50 <__printf_chk@plt>
   21dff:	cmp    DWORD PTR [r15+0x10],0x1
   21e04:	jle    21e39 <main_info+0x519>
   21e06:	mov    r13d,ebx
   21e09:	mov    r14d,0x4
   21e0f:	nop
   21e10:	mov    rax,QWORD PTR [r15+0x18]
   21e14:	lea    rsi,[rip+0x10db8]        # 32bd3 <__PRETTY_FUNCTION__.10016+0x1b43>
   21e1b:	mov    edi,0x1
   21e20:	add    r13d,0x1
   21e24:	mov    edx,DWORD PTR [rax+r14*1]
   21e28:	xor    eax,eax
   21e2a:	add    r14,0x4
   21e2e:	call   bd50 <__printf_chk@plt>
   21e33:	cmp    r13d,DWORD PTR [r15+0x10]
   21e37:	jl     21e10 <main_info+0x4f0>
   21e39:	mov    edi,0xa
   21e3e:	add    r12d,0x1
   21e42:	add    r15,0x20
   21e46:	call   aca0 <putchar@plt>
   21e4b:	mov    esi,DWORD PTR [rsp+0x10]
   21e4f:	cmp    r12d,esi
   21e52:	jl     21dc9 <main_info+0x4a9>
   21e58:	mov    rdi,QWORD PTR [rsp+0x8]
   21e5d:	call   bef0 <libxl_numainfo_list_free@plt>
   21e62:	mov    rdi,QWORD PTR [rbp+0x0]
   21e66:	call   b360 <libxl_get_version_info@plt>
   21e6b:	test   rax,rax
   21e6e:	mov    rbx,rax
   21e71:	jne    21f1d <main_info+0x5fd>
   21e77:	mov    rax,QWORD PTR [rip+0x219172]        # 23aff0 <stderr@GLIBC_2.2.5>
   21e7e:	lea    rdi,[rip+0x112fb]        # 33180 <__PRETTY_FUNCTION__.10016+0x20f0>
   21e85:	mov    edx,0x1f
   21e8a:	mov    esi,0x1
   21e8f:	mov    rcx,QWORD PTR [rax]
   21e92:	call   c1b0 <fwrite@plt>
   21e97:	jmp    22045 <main_info+0x725>
   21e9c:	nop    DWORD PTR [rax+0x0]
   21ea0:	cmp    BYTE PTR [rsp+0x94],0x0
   21ea8:	je     220a8 <main_info+0x788>
   21eae:	cmp    BYTE PTR [rsp+0x96],0x0
   21eb6:	lea    r8,[rip+0xd4aa]        # 2f367 <__func__.10421+0xfdf>
   21ebd:	lea    rcx,[rip+0x10acf]        # 32993 <__PRETTY_FUNCTION__.10016+0x1903>
   21ec4:	lea    rdx,[rip+0x10ad6]        # 329a1 <__PRETTY_FUNCTION__.10016+0x1911>
   21ecb:	mov    rsi,r8
   21ece:	cmove  rcx,r8
   21ed2:	jmp    21af3 <main_info+0x1d3>
   21ed7:	nop    WORD PTR [rax+rax*1+0x0]
   21ee0:	mov    rax,QWORD PTR [rip+0x219109]        # 23aff0 <stderr@GLIBC_2.2.5>
   21ee7:	lea    rdi,[rip+0x104cb]        # 323b9 <__PRETTY_FUNCTION__.10016+0x1329>
   21eee:	mov    edx,0x17
   21ef3:	mov    esi,0x1
   21ef8:	mov    rcx,QWORD PTR [rax]
   21efb:	call   c1b0 <fwrite@plt>
   21f00:	test   ebx,ebx
   21f02:	mov    rdi,QWORD PTR [rbp+0x0]
   21f06:	jne    21c29 <main_info+0x309>
   21f0c:	call   b360 <libxl_get_version_info@plt>
   21f11:	test   rax,rax
   21f14:	mov    rbx,rax
   21f17:	je     21e77 <main_info+0x557>
   21f1d:	mov    rdi,QWORD PTR [rbp+0x0]
   21f21:	call   b750 <libxl_get_scheduler@plt>
   21f26:	test   eax,eax
   21f28:	mov    ebp,eax
   21f2a:	js     22080 <main_info+0x760>
   21f30:	mov    esi,DWORD PTR [rbx]
   21f32:	lea    rdi,[rip+0x10c9e]        # 32bd7 <__PRETTY_FUNCTION__.10016+0x1b47>
   21f39:	xor    eax,eax
   21f3b:	call   20a80 <maybe_printf>
   21f40:	mov    esi,DWORD PTR [rbx+0x4]
   21f43:	lea    rdi,[rip+0x10caa]        # 32bf4 <__PRETTY_FUNCTION__.10016+0x1b64>
   21f4a:	xor    eax,eax
   21f4c:	call   20a80 <maybe_printf>
   21f51:	mov    rsi,QWORD PTR [rbx+0x8]
   21f55:	lea    rdi,[rip+0x10cb5]        # 32c11 <__PRETTY_FUNCTION__.10016+0x1b81>
   21f5c:	xor    eax,eax
   21f5e:	call   20a80 <maybe_printf>
   21f63:	mov    rcx,QWORD PTR [rbx+0x8]
   21f67:	mov    edx,DWORD PTR [rbx+0x4]
   21f6a:	lea    rdi,[rip+0x1122f]        # 331a0 <__PRETTY_FUNCTION__.10016+0x2110>
   21f71:	mov    esi,DWORD PTR [rbx]
   21f73:	xor    eax,eax
   21f75:	call   20a80 <maybe_printf>
   21f7a:	mov    rsi,QWORD PTR [rbx+0x30]
   21f7e:	lea    rdi,[rip+0x10ca9]        # 32c2e <__PRETTY_FUNCTION__.10016+0x1b9e>
   21f85:	xor    eax,eax
   21f87:	call   20a80 <maybe_printf>
   21f8c:	mov    edi,ebp
   21f8e:	call   b1e0 <libxl_scheduler_to_string@plt>
   21f93:	lea    rdi,[rip+0x10cb1]        # 32c4b <__PRETTY_FUNCTION__.10016+0x1bbb>
   21f9a:	mov    rsi,rax
   21f9d:	xor    eax,eax
   21f9f:	call   20a80 <maybe_printf>
   21fa4:	mov    esi,DWORD PTR [rbx+0x48]
   21fa7:	lea    rdi,[rip+0x10cba]        # 32c68 <__PRETTY_FUNCTION__.10016+0x1bd8>
   21fae:	xor    eax,eax
   21fb0:	call   20a80 <maybe_printf>
   21fb5:	mov    rsi,QWORD PTR [rbx+0x40]
   21fb9:	lea    rdi,[rip+0x11208]        # 331c8 <__PRETTY_FUNCTION__.10016+0x2138>
   21fc0:	xor    eax,eax
   21fc2:	call   20a80 <maybe_printf>
   21fc7:	mov    rsi,QWORD PTR [rbx+0x38]
   21fcb:	lea    rdi,[rip+0x10cb3]        # 32c85 <__PRETTY_FUNCTION__.10016+0x1bf5>
   21fd2:	xor    eax,eax
   21fd4:	call   20a80 <maybe_printf>
   21fd9:	mov    rsi,QWORD PTR [rbx+0x50]
   21fdd:	lea    rdi,[rip+0x10cbe]        # 32ca2 <__PRETTY_FUNCTION__.10016+0x1c12>
   21fe4:	xor    eax,eax
   21fe6:	call   20a80 <maybe_printf>
   21feb:	mov    rsi,QWORD PTR [rbx+0x10]
   21fef:	lea    rdi,[rip+0x10cc9]        # 32cbf <__PRETTY_FUNCTION__.10016+0x1c2f>
   21ff6:	xor    eax,eax
   21ff8:	call   20a80 <maybe_printf>
   21ffd:	mov    rsi,QWORD PTR [rbx+0x18]
   22001:	lea    rdi,[rip+0x10cd4]        # 32cdc <__PRETTY_FUNCTION__.10016+0x1c4c>
   22008:	xor    eax,eax
   2200a:	call   20a80 <maybe_printf>
   2200f:	mov    rsi,QWORD PTR [rbx+0x20]
   22013:	lea    rdi,[rip+0x10cdf]        # 32cf9 <__PRETTY_FUNCTION__.10016+0x1c69>
   2201a:	xor    eax,eax
   2201c:	call   20a80 <maybe_printf>
   22021:	mov    rsi,QWORD PTR [rbx+0x28]
   22025:	lea    rdi,[rip+0x10cea]        # 32d16 <__PRETTY_FUNCTION__.10016+0x1c86>
   2202c:	xor    eax,eax
   2202e:	call   20a80 <maybe_printf>
   22033:	mov    rsi,QWORD PTR [rbx+0x58]
   22037:	lea    rdi,[rip+0x10cf5]        # 32d33 <__PRETTY_FUNCTION__.10016+0x1ca3>
   2203e:	xor    eax,eax
   22040:	call   20a80 <maybe_printf>
   22045:	lea    rdi,[rip+0x10d04]        # 32d50 <__PRETTY_FUNCTION__.10016+0x1cc0>
   2204c:	xor    eax,eax
   2204e:	call   20a80 <maybe_printf>
   22053:	xor    eax,eax
   22055:	mov    rbx,QWORD PTR [rsp+0x98]
   2205d:	xor    rbx,QWORD PTR fs:0x28
   22066:	jne    2217a <main_info+0x85a>
   2206c:	add    rsp,0xa8
   22073:	pop    rbx
   22074:	pop    rbp
   22075:	pop    r12
   22077:	pop    r13
   22079:	pop    r14
   2207b:	pop    r15
   2207d:	ret    
   2207e:	xchg   ax,ax
   22080:	mov    rax,QWORD PTR [rip+0x218f69]        # 23aff0 <stderr@GLIBC_2.2.5>
   22087:	lea    rdi,[rip+0xf04a]        # 310d8 <__PRETTY_FUNCTION__.10016+0x48>
   2208e:	mov    edx,0x1d
   22093:	mov    esi,0x1
   22098:	mov    rcx,QWORD PTR [rax]
   2209b:	call   c1b0 <fwrite@plt>
   220a0:	jmp    22045 <main_info+0x725>
   220a2:	nop    WORD PTR [rax+rax*1+0x0]
   220a8:	lea    rcx,[rip+0xd2b8]        # 2f367 <__func__.10421+0xfdf>
   220af:	mov    r8,rcx
   220b2:	mov    rdx,rcx
   220b5:	mov    rsi,rcx
   220b8:	jmp    21af3 <main_info+0x1d3>
   220bd:	nop    DWORD PTR [rax]
   220c0:	test   al,al
   220c2:	mov    r8,rcx
   220c5:	mov    rdx,rcx
   220c8:	lea    rsi,[rip+0x108d7]        # 329a6 <__PRETTY_FUNCTION__.10016+0x1916>
   220cf:	je     21af3 <main_info+0x1d3>
   220d5:	lea    rdx,[rip+0x108c5]        # 329a1 <__PRETTY_FUNCTION__.10016+0x1911>
   220dc:	lea    rsi,[rip+0x108c3]        # 329a6 <__PRETTY_FUNCTION__.10016+0x1916>
   220e3:	jmp    21af3 <main_info+0x1d3>
   220e8:	nop    DWORD PTR [rax+rax*1+0x0]
   220f0:	mov    rax,QWORD PTR [rip+0x218ef9]        # 23aff0 <stderr@GLIBC_2.2.5>
   220f7:	lea    rdi,[rip+0x1100a]        # 33108 <__PRETTY_FUNCTION__.10016+0x2078>
   220fe:	mov    edx,0x1f
   22103:	mov    esi,0x1
   22108:	mov    rcx,QWORD PTR [rax]
   2210b:	call   c1b0 <fwrite@plt>
   22110:	jmp    21d6c <main_info+0x44c>
   22115:	nop    DWORD PTR [rax]
   22118:	mov    rax,QWORD PTR [rip+0x218ed1]        # 23aff0 <stderr@GLIBC_2.2.5>
   2211f:	lea    rdi,[rip+0x10a5a]        # 32b80 <__PRETTY_FUNCTION__.10016+0x1af0>
   22126:	mov    edx,0x1b
   2212b:	mov    esi,0x1
   22130:	mov    rcx,QWORD PTR [rax]
   22133:	call   c1b0 <fwrite@plt>
   22138:	jmp    21e62 <main_info+0x542>
   2213d:	nop    DWORD PTR [rax]
   22140:	mov    rax,QWORD PTR [rip+0x218ea9]        # 23aff0 <stderr@GLIBC_2.2.5>
   22147:	lea    rdi,[rip+0x10f7a]        # 330c8 <__PRETTY_FUNCTION__.10016+0x2038>
   2214e:	mov    edx,0x1f
   22153:	mov    esi,0x1
   22158:	mov    rcx,QWORD PTR [rax]
   2215b:	call   c1b0 <fwrite@plt>
   22160:	jmp    21d6c <main_info+0x44c>
   22165:	lea    rdi,[rip+0x10fbc]        # 33128 <__PRETTY_FUNCTION__.10016+0x2098>
   2216c:	call   aeb0 <puts@plt>
   22171:	mov    esi,DWORD PTR [rsp+0x10]
   22175:	jmp    21d62 <main_info+0x442>
   2217a:	call   b130 <__stack_chk_fail@plt>
   2217f:	nop

0000000000022180 <main_domid>:
   22180:	push   r12
   22182:	push   rbp
   22183:	lea    rbp,[rip+0x7d66]        # 29ef0 <__PRETTY_FUNCTION__.10113+0x2d8>
   2218a:	push   rbx
   2218b:	mov    r12d,edi
   2218e:	mov    rbx,rsi
   22191:	sub    rsp,0x10
   22195:	mov    rax,QWORD PTR fs:0x28
   2219e:	mov    QWORD PTR [rsp+0x8],rax
   221a3:	xor    eax,eax
   221a5:	nop    DWORD PTR [rax]
   221a8:	lea    rdx,[rip+0xf593]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   221af:	xor    ecx,ecx
   221b1:	mov    r9d,0x1
   221b7:	mov    r8,rbp
   221ba:	mov    rsi,rbx
   221bd:	mov    edi,r12d
   221c0:	call   ebe0 <def_getopt>
   221c5:	cmp    eax,0xffffffff
   221c8:	jne    221a8 <main_domid+0x28>
   221ca:	mov    rax,QWORD PTR [rip+0x218dd7]        # 23afa8 <optind@GLIBC_2.2.5>
   221d1:	lea    rdx,[rsp+0x4]
   221d6:	movsxd rax,DWORD PTR [rax]
   221d9:	mov    rbp,QWORD PTR [rbx+rax*8]
   221dd:	lea    rax,[rip+0x21ac7c]        # 23ce60 <ctx>
   221e4:	mov    rdi,QWORD PTR [rax]
   221e7:	mov    rsi,rbp
   221ea:	call   b810 <libxl_name_to_domid@plt>
   221ef:	test   eax,eax
   221f1:	mov    ebx,eax
   221f3:	jne    22230 <main_domid+0xb0>
   221f5:	mov    edx,DWORD PTR [rsp+0x4]
   221f9:	lea    rsi,[rip+0xc3de]        # 2e5de <__func__.10421+0x256>
   22200:	mov    edi,0x1
   22205:	xor    eax,eax
   22207:	call   bd50 <__printf_chk@plt>
   2220c:	mov    rcx,QWORD PTR [rsp+0x8]
   22211:	xor    rcx,QWORD PTR fs:0x28
   2221a:	mov    eax,ebx
   2221c:	jne    22257 <main_domid+0xd7>
   2221e:	add    rsp,0x10
   22222:	pop    rbx
   22223:	pop    rbp
   22224:	pop    r12
   22226:	ret    
   22227:	nop    WORD PTR [rax+rax*1+0x0]
   22230:	mov    rax,QWORD PTR [rip+0x218db9]        # 23aff0 <stderr@GLIBC_2.2.5>
   22237:	lea    rdx,[rip+0x10fba]        # 331f8 <__PRETTY_FUNCTION__.10016+0x2168>
   2223e:	mov    rcx,rbp
   22241:	mov    esi,0x1
   22246:	mov    ebx,0x1
   2224b:	mov    rdi,QWORD PTR [rax]
   2224e:	xor    eax,eax
   22250:	call   c1e0 <__fprintf_chk@plt>
   22255:	jmp    2220c <main_domid+0x8c>
   22257:	call   b130 <__stack_chk_fail@plt>
   2225c:	nop    DWORD PTR [rax+0x0]

0000000000022260 <main_domname>:
   22260:	push   r12
   22262:	push   rbp
   22263:	lea    rbp,[rip+0x1159f]        # 33809 <shutdown_reason_letters.11238+0x4d9>
   2226a:	push   rbx
   2226b:	mov    r12d,edi
   2226e:	mov    rbx,rsi
   22271:	sub    rsp,0x10
   22275:	mov    rax,QWORD PTR fs:0x28
   2227e:	mov    QWORD PTR [rsp+0x8],rax
   22283:	xor    eax,eax
   22285:	mov    QWORD PTR [rsp],0x0
   2228d:	nop    DWORD PTR [rax]
   22290:	lea    rdx,[rip+0xf4ab]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   22297:	xor    ecx,ecx
   22299:	mov    r9d,0x1
   2229f:	mov    r8,rbp
   222a2:	mov    rsi,rbx
   222a5:	mov    edi,r12d
   222a8:	call   ebe0 <def_getopt>
   222ad:	cmp    eax,0xffffffff
   222b0:	jne    22290 <main_domname+0x30>
   222b2:	mov    r12,QWORD PTR [rip+0x218cef]        # 23afa8 <optind@GLIBC_2.2.5>
   222b9:	mov    rsi,rsp
   222bc:	mov    edx,0xa
   222c1:	movsxd rax,DWORD PTR [r12]
   222c5:	mov    rdi,QWORD PTR [rbx+rax*8]
   222c9:	call   b7b0 <strtol@plt>
   222ce:	test   eax,eax
   222d0:	mov    rbp,rax
   222d3:	jne    222ea <main_domname+0x8a>
   222d5:	movsxd rax,DWORD PTR [r12]
   222d9:	mov    rdi,QWORD PTR [rsp]
   222dd:	mov    rsi,QWORD PTR [rbx+rax*8]
   222e1:	call   b650 <strcmp@plt>
   222e6:	test   eax,eax
   222e8:	je     22360 <main_domname+0x100>
   222ea:	lea    rax,[rip+0x21ab6f]        # 23ce60 <ctx>
   222f1:	mov    esi,ebp
   222f3:	mov    rdi,QWORD PTR [rax]
   222f6:	call   ae20 <libxl_domid_to_name@plt>
   222fb:	test   rax,rax
   222fe:	mov    rbx,rax
   22301:	je     22330 <main_domname+0xd0>
   22303:	mov    rdi,rax
   22306:	call   aeb0 <puts@plt>
   2230b:	mov    rdi,rbx
   2230e:	call   ac40 <free@plt>
   22313:	xor    eax,eax
   22315:	mov    rcx,QWORD PTR [rsp+0x8]
   2231a:	xor    rcx,QWORD PTR fs:0x28
   22323:	jne    22387 <main_domname+0x127>
   22325:	add    rsp,0x10
   22329:	pop    rbx
   2232a:	pop    rbp
   2232b:	pop    r12
   2232d:	ret    
   2232e:	xchg   ax,ax
   22330:	mov    rax,QWORD PTR [rip+0x218cb9]        # 23aff0 <stderr@GLIBC_2.2.5>
   22337:	lea    rdx,[rip+0x10f02]        # 33240 <__PRETTY_FUNCTION__.10016+0x21b0>
   2233e:	mov    ecx,ebp
   22340:	mov    esi,0x1
   22345:	mov    rdi,QWORD PTR [rax]
   22348:	xor    eax,eax
   2234a:	call   c1e0 <__fprintf_chk@plt>
   2234f:	mov    eax,0x1
   22354:	jmp    22315 <main_domname+0xb5>
   22356:	nop    WORD PTR cs:[rax+rax*1+0x0]
   22360:	mov    rax,QWORD PTR [rip+0x218c89]        # 23aff0 <stderr@GLIBC_2.2.5>
   22367:	lea    rdi,[rip+0x109fe]        # 32d6c <__PRETTY_FUNCTION__.10016+0x1cdc>
   2236e:	mov    edx,0x14
   22373:	mov    esi,0x1
   22378:	mov    rcx,QWORD PTR [rax]
   2237b:	call   c1b0 <fwrite@plt>
   22380:	mov    eax,0x1
   22385:	jmp    22315 <main_domname+0xb5>
   22387:	call   b130 <__stack_chk_fail@plt>
   2238c:	nop    DWORD PTR [rax+0x0]

0000000000022390 <main_claims>:
   22390:	push   r12
   22392:	push   rbp
   22393:	mov    r12d,edi
   22396:	push   rbx
   22397:	lea    rbx,[rip+0x7d91]        # 2a12f <__PRETTY_FUNCTION__.10113+0x517>
   2239e:	mov    rbp,rsi
   223a1:	sub    rsp,0x10
   223a5:	mov    rax,QWORD PTR fs:0x28
   223ae:	mov    QWORD PTR [rsp+0x8],rax
   223b3:	xor    eax,eax
   223b5:	nop    DWORD PTR [rax]
   223b8:	lea    rdx,[rip+0xf383]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   223bf:	xor    r9d,r9d
   223c2:	xor    ecx,ecx
   223c4:	mov    r8,rbx
   223c7:	mov    rsi,rbp
   223ca:	mov    edi,r12d
   223cd:	call   ebe0 <def_getopt>
   223d2:	cmp    eax,0xffffffff
   223d5:	jne    223b8 <main_claims+0x28>
   223d7:	lea    rax,[rip+0x218c42]        # 23b020 <claim_mode>
   223de:	mov    ecx,DWORD PTR [rax]
   223e0:	test   ecx,ecx
   223e2:	je     22450 <main_claims+0xc0>
   223e4:	lea    rax,[rip+0x21aa75]        # 23ce60 <ctx>
   223eb:	lea    rsi,[rsp+0x4]
   223f0:	mov    rdi,QWORD PTR [rax]
   223f3:	call   b830 <libxl_list_domain@plt>
   223f8:	test   rax,rax
   223fb:	mov    rbx,rax
   223fe:	je     22478 <main_claims+0xe8>
   22400:	sub    rsp,0x8
   22404:	mov    edx,0x1
   22409:	mov    r9,rbx
   2240c:	mov    eax,DWORD PTR [rsp+0xc]
   22410:	xor    r8d,r8d
   22413:	xor    ecx,ecx
   22415:	xor    esi,esi
   22417:	xor    edi,edi
   22419:	push   rax
   2241a:	call   204e0 <list_domains>
   2241f:	mov    esi,DWORD PTR [rsp+0x14]
   22423:	mov    rdi,rbx
   22426:	call   b0e0 <libxl_dominfo_list_free@plt>
   2242b:	pop    rax
   2242c:	pop    rdx
   2242d:	xor    eax,eax
   2242f:	mov    rdx,QWORD PTR [rsp+0x8]
   22434:	xor    rdx,QWORD PTR fs:0x28
   2243d:	jne    2249f <main_claims+0x10f>
   2243f:	add    rsp,0x10
   22443:	pop    rbx
   22444:	pop    rbp
   22445:	pop    r12
   22447:	ret    
   22448:	nop    DWORD PTR [rax+rax*1+0x0]
   22450:	mov    rax,QWORD PTR [rip+0x218b99]        # 23aff0 <stderr@GLIBC_2.2.5>
   22457:	lea    rdi,[rip+0x10e32]        # 33290 <__PRETTY_FUNCTION__.10016+0x2200>
   2245e:	mov    edx,0x2a
   22463:	mov    esi,0x1
   22468:	mov    rcx,QWORD PTR [rax]
   2246b:	call   c1b0 <fwrite@plt>
   22470:	jmp    223e4 <main_claims+0x54>
   22475:	nop    DWORD PTR [rax]
   22478:	mov    rax,QWORD PTR [rip+0x218b71]        # 23aff0 <stderr@GLIBC_2.2.5>
   2247f:	lea    rdi,[rip+0xf72a]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   22486:	mov    edx,0x1a
   2248b:	mov    esi,0x1
   22490:	mov    rcx,QWORD PTR [rax]
   22493:	call   c1b0 <fwrite@plt>
   22498:	mov    eax,0x1
   2249d:	jmp    2242f <main_claims+0x9f>
   2249f:	call   b130 <__stack_chk_fail@plt>
   224a4:	xchg   ax,ax
   224a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000224b0 <main_uptime>:
   224b0:	push   r14
   224b2:	push   r13
   224b4:	mov    r13d,0x1
   224ba:	push   r12
   224bc:	push   rbp
   224bd:	mov    r12d,edi
   224c0:	push   rbx
   224c1:	mov    rbp,rsi
   224c4:	xor    ebx,ebx
   224c6:	sub    rsp,0x1b0
   224cd:	mov    rax,QWORD PTR fs:0x28
   224d6:	mov    QWORD PTR [rsp+0x1a8],rax
   224de:	xor    eax,eax
   224e0:	jmp    224ef <main_uptime+0x3f>
   224e2:	nop    WORD PTR [rax+rax*1+0x0]
   224e8:	cmp    eax,0x73
   224eb:	cmove  ebx,r13d
   224ef:	lea    r8,[rip+0x1043b]        # 32931 <__PRETTY_FUNCTION__.10016+0x18a1>
   224f6:	lea    rdx,[rip+0x10884]        # 32d81 <__PRETTY_FUNCTION__.10016+0x1cf1>
   224fd:	xor    r9d,r9d
   22500:	xor    ecx,ecx
   22502:	mov    rsi,rbp
   22505:	mov    edi,r12d
   22508:	call   ebe0 <def_getopt>
   2250d:	cmp    eax,0xffffffff
   22510:	jne    224e8 <main_uptime+0x38>
   22512:	mov    r14,QWORD PTR [rip+0x218a8f]        # 23afa8 <optind@GLIBC_2.2.5>
   22519:	movsxd rax,DWORD PTR [r14]
   2251c:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   22521:	test   rdi,rdi
   22524:	je     22618 <main_uptime+0x168>
   2252a:	mov    r13d,0x1
   22530:	lea    r12,[rsp+0x10]
   22535:	jmp    22543 <main_uptime+0x93>
   22537:	nop    WORD PTR [rax+rax*1+0x0]
   22540:	mov    r13,rax
   22543:	call   eb40 <find_domain>
   22548:	mov    DWORD PTR [r12+r13*4-0x4],eax
   2254d:	mov    eax,DWORD PTR [r14]
   22550:	add    eax,0x1
   22553:	mov    DWORD PTR [r14],eax
   22556:	cdqe   
   22558:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   2255d:	lea    rax,[r13+0x1]
   22561:	test   rdi,rdi
   22564:	jne    22540 <main_uptime+0x90>
   22566:	call   b8a0 <time@plt>
   2256b:	test   ebx,ebx
   2256d:	mov    r14,rax
   22570:	je     225e8 <main_uptime+0x138>
   22572:	lea    eax,[r13-0x1]
   22576:	lea    rbp,[r12+0x4]
   2257b:	lea    r13,[rbp+rax*4+0x0]
   22580:	jmp    2259e <main_uptime+0xee>
   22582:	nop    WORD PTR [rax+rax*1+0x0]
   22588:	mov    rsi,r14
   2258b:	mov    edi,ebx
   2258d:	mov    r12,rbp
   22590:	call   20f50 <print_dom0_uptime>
   22595:	cmp    rbp,r13
   22598:	je     225b8 <main_uptime+0x108>
   2259a:	add    rbp,0x4
   2259e:	mov    edi,DWORD PTR [r12]
   225a2:	test   edi,edi
   225a4:	je     22588 <main_uptime+0xd8>
   225a6:	mov    rdx,r14
   225a9:	mov    esi,ebx
   225ab:	mov    r12,rbp
   225ae:	call   210d0 <print_domU_uptime>
   225b3:	cmp    rbp,r13
   225b6:	jne    2259a <main_uptime+0xea>
   225b8:	xor    eax,eax
   225ba:	mov    rcx,QWORD PTR [rsp+0x1a8]
   225c2:	xor    rcx,QWORD PTR fs:0x28
   225cb:	jne    226e0 <main_uptime+0x230>
   225d1:	add    rsp,0x1b0
   225d8:	pop    rbx
   225d9:	pop    rbp
   225da:	pop    r12
   225dc:	pop    r13
   225de:	pop    r14
   225e0:	ret    
   225e1:	nop    DWORD PTR [rax+0x0]
   225e8:	lea    r8,[rip+0x10795]        # 32d84 <__PRETTY_FUNCTION__.10016+0x1cf4>
   225ef:	lea    rcx,[rip+0xbe1e]        # 2e414 <__func__.10421+0x8c>
   225f6:	lea    rdx,[rip+0xbf02]        # 2e4ff <__func__.10421+0x177>
   225fd:	lea    rsi,[rip+0x10787]        # 32d8b <__PRETTY_FUNCTION__.10016+0x1cfb>
   22604:	mov    edi,0x1
   22609:	xor    eax,eax
   2260b:	call   bd50 <__printf_chk@plt>
   22610:	jmp    22572 <main_uptime+0xc2>
   22615:	nop    DWORD PTR [rax]
   22618:	xor    edi,edi
   2261a:	call   b8a0 <time@plt>
   2261f:	test   ebx,ebx
   22621:	mov    r13,rax
   22624:	je     226b3 <main_uptime+0x203>
   2262a:	mov    rsi,r13
   2262d:	mov    edi,ebx
   2262f:	call   20f50 <print_dom0_uptime>
   22634:	lea    rax,[rip+0x21a825]        # 23ce60 <ctx>
   2263b:	lea    rsi,[rsp+0xc]
   22640:	mov    rdi,QWORD PTR [rax]
   22643:	call   c480 <libxl_list_vm@plt>
   22648:	test   rax,rax
   2264b:	mov    r14,rax
   2264e:	je     2268e <main_uptime+0x1de>
   22650:	mov    esi,DWORD PTR [rsp+0xc]
   22654:	xor    ebp,ebp
   22656:	lea    r12,[rax+0x10]
   2265a:	test   esi,esi
   2265c:	jle    22681 <main_uptime+0x1d1>
   2265e:	xchg   ax,ax
   22660:	mov    edi,DWORD PTR [r12]
   22664:	test   edi,edi
   22666:	je     22676 <main_uptime+0x1c6>
   22668:	mov    esi,ebx
   2266a:	mov    rdx,r13
   2266d:	call   210d0 <print_domU_uptime>
   22672:	mov    esi,DWORD PTR [rsp+0xc]
   22676:	add    ebp,0x1
   22679:	add    r12,0x14
   2267d:	cmp    ebp,esi
   2267f:	jl     22660 <main_uptime+0x1b0>
   22681:	mov    rdi,r14
   22684:	call   b080 <libxl_vminfo_list_free@plt>
   22689:	jmp    225b8 <main_uptime+0x108>
   2268e:	mov    rax,QWORD PTR [rip+0x21895b]        # 23aff0 <stderr@GLIBC_2.2.5>
   22695:	lea    rdi,[rip+0x106fd]        # 32d99 <__PRETTY_FUNCTION__.10016+0x1d09>
   2269c:	mov    edx,0x14
   226a1:	mov    esi,0x1
   226a6:	mov    rcx,QWORD PTR [rax]
   226a9:	call   c1b0 <fwrite@plt>
   226ae:	jmp    225b8 <main_uptime+0x108>
   226b3:	lea    r8,[rip+0x106ca]        # 32d84 <__PRETTY_FUNCTION__.10016+0x1cf4>
   226ba:	lea    rcx,[rip+0xbd53]        # 2e414 <__func__.10421+0x8c>
   226c1:	lea    rdx,[rip+0xbe37]        # 2e4ff <__func__.10421+0x177>
   226c8:	lea    rsi,[rip+0x106bc]        # 32d8b <__PRETTY_FUNCTION__.10016+0x1cfb>
   226cf:	mov    edi,0x1
   226d4:	xor    eax,eax
   226d6:	call   bd50 <__printf_chk@plt>
   226db:	jmp    2262a <main_uptime+0x17a>
   226e0:	call   b130 <__stack_chk_fail@plt>
   226e5:	nop
   226e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000226f0 <main_dmesg>:
   226f0:	push   r13
   226f2:	push   r12
   226f4:	mov    r13d,0x1
   226fa:	push   rbp
   226fb:	push   rbx
   226fc:	mov    r12d,edi
   226ff:	mov    rbp,rsi
   22702:	xor    ebx,ebx
   22704:	sub    rsp,0x28
   22708:	mov    rax,QWORD PTR fs:0x28
   22711:	mov    QWORD PTR [rsp+0x18],rax
   22716:	xor    eax,eax
   22718:	jmp    22727 <main_dmesg+0x37>
   2271a:	nop    WORD PTR [rax+rax*1+0x0]
   22720:	cmp    eax,0x63
   22723:	cmove  ebx,r13d
   22727:	lea    r8,[rip+0x78b8]        # 29fe6 <__PRETTY_FUNCTION__.10113+0x3ce>
   2272e:	lea    rcx,[rip+0x21a18b]        # 23c8c0 <opts.11418>
   22735:	lea    rdx,[rip+0xea94]        # 311d0 <__PRETTY_FUNCTION__.10016+0x140>
   2273c:	xor    r9d,r9d
   2273f:	mov    rsi,rbp
   22742:	mov    edi,r12d
   22745:	call   ebe0 <def_getopt>
   2274a:	cmp    eax,0xffffffff
   2274d:	jne    22720 <main_dmesg+0x30>
   2274f:	lea    rbp,[rip+0x21a70a]        # 23ce60 <ctx>
   22756:	mov    esi,ebx
   22758:	mov    rdi,QWORD PTR [rbp+0x0]
   2275c:	call   b9d0 <libxl_xen_console_read_start@plt>
   22761:	mov    rbx,rax
   22764:	mov    eax,0x1
   22769:	test   rbx,rbx
   2276c:	je     227c3 <main_dmesg+0xd3>
   2276e:	lea    r12,[rsp+0x10]
   22773:	lea    r13,[rip+0xcbc1]        # 2f33b <__func__.10421+0xfb3>
   2277a:	jmp    22794 <main_dmesg+0xa4>
   2277c:	nop    DWORD PTR [rax+0x0]
   22780:	mov    rdx,QWORD PTR [rsp+0x10]
   22785:	mov    rsi,r13
   22788:	mov    edi,0x1
   2278d:	xor    eax,eax
   2278f:	call   bd50 <__printf_chk@plt>
   22794:	mov    rdi,QWORD PTR [rbp+0x0]
   22798:	mov    rdx,r12
   2279b:	mov    rsi,rbx
   2279e:	call   bb90 <libxl_xen_console_read_line@plt>
   227a3:	test   eax,eax
   227a5:	jg     22780 <main_dmesg+0x90>
   227a7:	mov    rdi,QWORD PTR [rbp+0x0]
   227ab:	mov    rsi,rbx
   227ae:	mov    DWORD PTR [rsp+0xc],eax
   227b2:	call   bd90 <libxl_xen_console_read_finish@plt>
   227b7:	mov    eax,DWORD PTR [rsp+0xc]
   227bb:	test   eax,eax
   227bd:	setne  al
   227c0:	movzx  eax,al
   227c3:	mov    rcx,QWORD PTR [rsp+0x18]
   227c8:	xor    rcx,QWORD PTR fs:0x28
   227d1:	jne    227de <main_dmesg+0xee>
   227d3:	add    rsp,0x28
   227d7:	pop    rbx
   227d8:	pop    rbp
   227d9:	pop    r12
   227db:	pop    r13
   227dd:	ret    
   227de:	call   b130 <__stack_chk_fail@plt>
   227e3:	nop    DWORD PTR [rax]
   227e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000227f0 <main_top>:
   227f0:	push   r12
   227f2:	push   rbp
   227f3:	mov    r12d,edi
   227f6:	push   rbx
   227f7:	lea    rbx,[rip+0x105b3]        # 32db1 <__PRETTY_FUNCTION__.10016+0x1d21>
   227fe:	mov    rbp,rsi
   22801:	nop    DWORD PTR [rax+0x0]
   22808:	lea    rdx,[rip+0xef33]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2280f:	xor    r9d,r9d
   22812:	xor    ecx,ecx
   22814:	mov    r8,rbx
   22817:	mov    rsi,rbp
   2281a:	mov    edi,r12d
   2281d:	call   ebe0 <def_getopt>
   22822:	cmp    eax,0xffffffff
   22825:	jne    22808 <main_top+0x18>
   22827:	pop    rbx
   22828:	pop    rbp
   22829:	pop    r12
   2282b:	lea    rdi,[rip+0x1057c]        # 32dae <__PRETTY_FUNCTION__.10016+0x1d1e>
   22832:	jmp    b190 <system@plt>
   22837:	nop    WORD PTR [rax+rax*1+0x0]

0000000000022840 <main_console>:
   22840:	push   r15
   22842:	push   r14
   22844:	lea    r15,[rip+0xcf17]        # 2f762 <__func__.10421+0x13da>
   2284b:	push   r13
   2284d:	push   r12
   2284f:	lea    r14,[rip+0x10151]        # 329a7 <__PRETTY_FUNCTION__.10016+0x1917>
   22856:	push   rbp
   22857:	push   rbx
   22858:	mov    ebp,edi
   2285a:	mov    rbx,rsi
   2285d:	xor    r13d,r13d
   22860:	xor    r12d,r12d
   22863:	sub    rsp,0x18
   22867:	nop    WORD PTR [rax+rax*1+0x0]
   22870:	lea    r8,[rip+0x7504]        # 29d7b <__PRETTY_FUNCTION__.10113+0x163>
   22877:	lea    rdx,[rip+0x10acb]        # 33349 <shutdown_reason_letters.11238+0x19>
   2287e:	xor    ecx,ecx
   22880:	mov    r9d,0x1
   22886:	mov    rsi,rbx
   22889:	mov    edi,ebp
   2288b:	call   ebe0 <def_getopt>
   22890:	cmp    eax,0xffffffff
   22893:	mov    r8d,eax
   22896:	je     22950 <main_console+0x110>
   2289c:	cmp    r8d,0x6e
   228a0:	je     22910 <main_console+0xd0>
   228a2:	cmp    r8d,0x74
   228a6:	jne    22870 <main_console+0x30>
   228a8:	mov    rax,QWORD PTR [rip+0x218711]        # 23afc0 <optarg@GLIBC_2.2.5>
   228af:	mov    ecx,0x3
   228b4:	mov    rdi,r14
   228b7:	mov    rdx,QWORD PTR [rax]
   228ba:	mov    rsi,rdx
   228bd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   228bf:	seta   al
   228c2:	sbb    al,0x0
   228c4:	test   al,al
   228c6:	je     22930 <main_console+0xf0>
   228c8:	mov    ecx,0x7
   228cd:	mov    rsi,rdx
   228d0:	mov    rdi,r15
   228d3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   228d5:	seta   al
   228d8:	sbb    al,0x0
   228da:	test   al,al
   228dc:	je     22940 <main_console+0x100>
   228de:	lea    rdi,[rip+0x10a5e]        # 33343 <shutdown_reason_letters.11238+0x13>
   228e5:	mov    ecx,0x6
   228ea:	mov    rsi,rdx
   228ed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   228ef:	seta   al
   228f2:	sbb    al,0x0
   228f4:	test   al,al
   228f6:	jne    229d6 <main_console+0x196>
   228fc:	mov    r13d,0x3
   22902:	jmp    22870 <main_console+0x30>
   22907:	nop    WORD PTR [rax+rax*1+0x0]
   22910:	mov    rax,QWORD PTR [rip+0x2186a9]        # 23afc0 <optarg@GLIBC_2.2.5>
   22917:	mov    edx,0xa
   2291c:	xor    esi,esi
   2291e:	mov    rdi,QWORD PTR [rax]
   22921:	call   b7b0 <strtol@plt>
   22926:	mov    r12d,eax
   22929:	jmp    22870 <main_console+0x30>
   2292e:	xchg   ax,ax
   22930:	mov    r13d,0x2
   22936:	jmp    22870 <main_console+0x30>
   2293b:	nop    DWORD PTR [rax+rax*1+0x0]
   22940:	mov    r13d,0x1
   22946:	jmp    22870 <main_console+0x30>
   2294b:	nop    DWORD PTR [rax+rax*1+0x0]
   22950:	mov    DWORD PTR [rsp+0xc],eax
   22954:	mov    rax,QWORD PTR [rip+0x21864d]        # 23afa8 <optind@GLIBC_2.2.5>
   2295b:	movsxd rax,DWORD PTR [rax]
   2295e:	mov    rdi,QWORD PTR [rbx+rax*8]
   22962:	call   eb40 <find_domain>
   22967:	test   r13d,r13d
   2296a:	mov    r8d,DWORD PTR [rsp+0xc]
   2296f:	je     229c0 <main_console+0x180>
   22971:	mov    esi,eax
   22973:	lea    rax,[rip+0x21a4e6]        # 23ce60 <ctx>
   2297a:	mov    ecx,r13d
   2297d:	mov    edx,r12d
   22980:	mov    rdi,QWORD PTR [rax]
   22983:	call   c100 <libxl_console_exec@plt>
   22988:	mov    rax,QWORD PTR [rip+0x218661]        # 23aff0 <stderr@GLIBC_2.2.5>
   2298f:	lea    rdi,[rip+0x109b9]        # 3334f <shutdown_reason_letters.11238+0x1f>
   22996:	mov    edx,0x19
   2299b:	mov    esi,0x1
   229a0:	mov    rcx,QWORD PTR [rax]
   229a3:	call   c1b0 <fwrite@plt>
   229a8:	add    rsp,0x18
   229ac:	mov    eax,0x1
   229b1:	pop    rbx
   229b2:	pop    rbp
   229b3:	pop    r12
   229b5:	pop    r13
   229b7:	pop    r14
   229b9:	pop    r15
   229bb:	ret    
   229bc:	nop    DWORD PTR [rax+0x0]
   229c0:	mov    esi,eax
   229c2:	lea    rax,[rip+0x21a497]        # 23ce60 <ctx>
   229c9:	mov    edx,r8d
   229cc:	mov    rdi,QWORD PTR [rax]
   229cf:	call   c400 <libxl_primary_console_exec@plt>
   229d4:	jmp    22988 <main_console+0x148>
   229d6:	mov    rax,QWORD PTR [rip+0x218613]        # 23aff0 <stderr@GLIBC_2.2.5>
   229dd:	lea    rcx,[rip+0x10953]        # 33337 <shutdown_reason_letters.11238+0x7>
   229e4:	lea    rdx,[rip+0x109b5]        # 333a0 <shutdown_reason_letters.11238+0x70>
   229eb:	mov    esi,0x1
   229f0:	mov    rdi,QWORD PTR [rax]
   229f3:	xor    eax,eax
   229f5:	call   c1e0 <__fprintf_chk@plt>
   229fa:	jmp    229a8 <main_console+0x168>
   229fc:	nop    DWORD PTR [rax+0x0]

0000000000022a00 <main_vncviewer>:
   22a00:	push   r13
   22a02:	push   r12
   22a04:	mov    r13d,edi
   22a07:	push   rbp
   22a08:	push   rbx
   22a09:	mov    rbp,rsi
   22a0c:	xor    ebx,ebx
   22a0e:	lea    r12,[rip+0x736e]        # 29d83 <__PRETTY_FUNCTION__.10113+0x16b>
   22a15:	sub    rsp,0x8
   22a19:	jmp    22a2b <main_vncviewer+0x2b>
   22a1b:	nop    DWORD PTR [rax+rax*1+0x0]
   22a20:	cmp    eax,0x61
   22a23:	mov    eax,0x1
   22a28:	cmove  ebx,eax
   22a2b:	lea    rcx,[rip+0x21752e]        # 239f60 <opts.8621>
   22a32:	lea    rdx,[rip+0xbe86]        # 2e8bf <__func__.10421+0x537>
   22a39:	mov    r9d,0x1
   22a3f:	mov    r8,r12
   22a42:	mov    rsi,rbp
   22a45:	mov    edi,r13d
   22a48:	call   ebe0 <def_getopt>
   22a4d:	cmp    eax,0xffffffff
   22a50:	jne    22a20 <main_vncviewer+0x20>
   22a52:	mov    rax,QWORD PTR [rip+0x21854f]        # 23afa8 <optind@GLIBC_2.2.5>
   22a59:	movsxd rax,DWORD PTR [rax]
   22a5c:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   22a61:	call   eb40 <find_domain>
   22a66:	mov    esi,eax
   22a68:	lea    rax,[rip+0x21a3f1]        # 23ce60 <ctx>
   22a6f:	mov    edx,ebx
   22a71:	mov    rdi,QWORD PTR [rax]
   22a74:	call   b060 <libxl_vncviewer_exec@plt>
   22a79:	add    rsp,0x8
   22a7d:	mov    eax,0x1
   22a82:	pop    rbx
   22a83:	pop    rbp
   22a84:	pop    r12
   22a86:	pop    r13
   22a88:	ret    
   22a89:	nop    DWORD PTR [rax+0x0]

0000000000022a90 <main_channellist>:
   22a90:	push   r15
   22a92:	push   r14
   22a94:	push   r13
   22a96:	push   r12
   22a98:	lea    r12,[rip+0x759e]        # 2a03d <__PRETTY_FUNCTION__.10113+0x425>
   22a9f:	push   rbp
   22aa0:	push   rbx
   22aa1:	mov    rbp,rsi
   22aa4:	mov    ebx,edi
   22aa6:	sub    rsp,0x78
   22aaa:	mov    rax,QWORD PTR fs:0x28
   22ab3:	mov    QWORD PTR [rsp+0x68],rax
   22ab8:	xor    eax,eax
   22aba:	nop    WORD PTR [rax+rax*1+0x0]
   22ac0:	lea    rdx,[rip+0xec7b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   22ac7:	xor    ecx,ecx
   22ac9:	mov    r9d,0x1
   22acf:	mov    r8,r12
   22ad2:	mov    rsi,rbp
   22ad5:	mov    edi,ebx
   22ad7:	call   ebe0 <def_getopt>
   22adc:	cmp    eax,0xffffffff
   22adf:	jne    22ac0 <main_channellist+0x30>
   22ae1:	lea    rax,[rip+0xc87f]        # 2f367 <__func__.10421+0xfdf>
   22ae8:	sub    rsp,0x8
   22aec:	lea    rdx,[rip+0xec3e]        # 31731 <__PRETTY_FUNCTION__.10016+0x6a1>
   22af3:	lea    r9,[rip+0xec43]        # 3173d <__PRETTY_FUNCTION__.10016+0x6ad>
   22afa:	lea    r8,[rip+0xec43]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   22b01:	lea    rcx,[rip+0xec26]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   22b08:	push   rax
   22b09:	lea    rax,[rip+0xc9fb]        # 2f50b <__func__.10421+0x1183>
   22b10:	lea    rsi,[rip+0x108a9]        # 333c0 <shutdown_reason_letters.11238+0x90>
   22b17:	mov    edi,0x1
   22b1c:	push   rax
   22b1d:	lea    rax,[rip+0xee62]        # 31986 <__PRETTY_FUNCTION__.10016+0x8f6>
   22b24:	push   rax
   22b25:	xor    eax,eax
   22b27:	call   bd50 <__printf_chk@plt>
   22b2c:	mov    rax,QWORD PTR [rip+0x218475]        # 23afa8 <optind@GLIBC_2.2.5>
   22b33:	add    rsp,0x20
   22b37:	movsxd rdx,DWORD PTR [rax]
   22b3a:	sub    ebx,edx
   22b3c:	lea    r15,[rbp+rdx*8+0x0]
   22b41:	test   ebx,ebx
   22b43:	jle    22c81 <main_channellist+0x1f1>
   22b49:	lea    eax,[rbx-0x1]
   22b4c:	lea    r14,[rip+0x21a30d]        # 23ce60 <ctx>
   22b53:	lea    r13,[rsp+0x30]
   22b58:	lea    rax,[r15+rax*8+0x8]
   22b5d:	mov    QWORD PTR [rsp+0x10],rax
   22b62:	lea    rax,[rsp+0x2c]
   22b67:	mov    QWORD PTR [rsp+0x18],rax
   22b6c:	nop    DWORD PTR [rax+0x0]
   22b70:	mov    rdi,QWORD PTR [r15]
   22b73:	call   eb40 <find_domain>
   22b78:	mov    rdx,QWORD PTR [rsp+0x18]
   22b7d:	mov    rdi,QWORD PTR [r14]
   22b80:	mov    esi,eax
   22b82:	mov    r12d,eax
   22b85:	call   ac10 <libxl_device_channel_list@plt>
   22b8a:	test   rax,rax
   22b8d:	mov    QWORD PTR [rsp+0x8],rax
   22b92:	je     22c72 <main_channellist+0x1e2>
   22b98:	mov    edx,DWORD PTR [rsp+0x2c]
   22b9c:	test   edx,edx
   22b9e:	jle    22c68 <main_channellist+0x1d8>
   22ba4:	mov    rbx,rax
   22ba7:	xor    ebp,ebp
   22ba9:	jmp    22bc9 <main_channellist+0x139>
   22bab:	nop    DWORD PTR [rax+rax*1+0x0]
   22bb0:	mov    rdi,rbx
   22bb3:	add    ebp,0x1
   22bb6:	add    rbx,0x30
   22bba:	call   b250 <libxl_device_channel_dispose@plt>
   22bbf:	cmp    DWORD PTR [rsp+0x2c],ebp
   22bc3:	jle    22c68 <main_channellist+0x1d8>
   22bc9:	mov    rdi,QWORD PTR [r14]
   22bcc:	mov    rcx,r13
   22bcf:	mov    rdx,rbx
   22bd2:	mov    esi,r12d
   22bd5:	call   c010 <libxl_device_channel_getinfo@plt>
   22bda:	test   eax,eax
   22bdc:	jne    22bb0 <main_channellist+0x120>
   22bde:	mov    ecx,DWORD PTR [rsp+0x38]
   22be2:	mov    edx,DWORD PTR [rbx+0x10]
   22be5:	lea    rsi,[rip+0xeda7]        # 31993 <__PRETTY_FUNCTION__.10016+0x903>
   22bec:	mov    edi,0x1
   22bf1:	call   bd50 <__printf_chk@plt>
   22bf6:	mov    edx,DWORD PTR [rsp+0x50]
   22bfa:	lea    rsi,[rip+0x10768]        # 33369 <shutdown_reason_letters.11238+0x39>
   22c01:	mov    edi,0x1
   22c06:	xor    eax,eax
   22c08:	call   bd50 <__printf_chk@plt>
   22c0d:	mov    ecx,DWORD PTR [rsp+0x58]
   22c11:	mov    edx,DWORD PTR [rsp+0x54]
   22c15:	lea    rsi,[rip+0x10753]        # 3336f <shutdown_reason_letters.11238+0x3f>
   22c1c:	mov    edi,0x1
   22c21:	xor    eax,eax
   22c23:	call   bd50 <__printf_chk@plt>
   22c28:	mov    edi,DWORD PTR [rbx+0x20]
   22c2b:	call   b980 <libxl_channel_connection_to_string@plt>
   22c30:	lea    rsi,[rip+0x10743]        # 3337a <shutdown_reason_letters.11238+0x4a>
   22c37:	mov    rdx,rax
   22c3a:	mov    edi,0x1
   22c3f:	xor    eax,eax
   22c41:	call   bd50 <__printf_chk@plt>
   22c46:	cmp    DWORD PTR [rbx+0x20],0x1
   22c4a:	je     22ca8 <main_channellist+0x218>
   22c4c:	mov    edi,0xa
   22c51:	call   aca0 <putchar@plt>
   22c56:	mov    rdi,r13
   22c59:	call   b410 <libxl_channelinfo_dispose@plt>
   22c5e:	jmp    22bb0 <main_channellist+0x120>
   22c63:	nop    DWORD PTR [rax+rax*1+0x0]
   22c68:	mov    rdi,QWORD PTR [rsp+0x8]
   22c6d:	call   ac40 <free@plt>
   22c72:	add    r15,0x8
   22c76:	cmp    r15,QWORD PTR [rsp+0x10]
   22c7b:	jne    22b70 <main_channellist+0xe0>
   22c81:	xor    eax,eax
   22c83:	mov    rcx,QWORD PTR [rsp+0x68]
   22c88:	xor    rcx,QWORD PTR fs:0x28
   22c91:	jne    22cc2 <main_channellist+0x232>
   22c93:	add    rsp,0x78
   22c97:	pop    rbx
   22c98:	pop    rbp
   22c99:	pop    r12
   22c9b:	pop    r13
   22c9d:	pop    r14
   22c9f:	pop    r15
   22ca1:	ret    
   22ca2:	nop    WORD PTR [rax+rax*1+0x0]
   22ca8:	mov    rdx,QWORD PTR [rsp+0x60]
   22cad:	lea    rsi,[rip+0x106cd]        # 33381 <shutdown_reason_letters.11238+0x51>
   22cb4:	mov    edi,0x1
   22cb9:	xor    eax,eax
   22cbb:	call   bd50 <__printf_chk@plt>
   22cc0:	jmp    22c4c <main_channellist+0x1bc>
   22cc2:	call   b130 <__stack_chk_fail@plt>
   22cc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000022cd0 <main_button_press>:
   22cd0:	push   r13
   22cd2:	push   r12
   22cd4:	mov    r12d,edi
   22cd7:	push   rbp
   22cd8:	push   rbx
   22cd9:	lea    rdi,[rip+0x10708]        # 333e8 <shutdown_reason_letters.11238+0xb8>
   22ce0:	lea    rbp,[rip+0x715a]        # 29e41 <__PRETTY_FUNCTION__.10113+0x229>
   22ce7:	mov    rbx,rsi
   22cea:	mov    edx,0x3c
   22cef:	sub    rsp,0x8
   22cf3:	mov    r13,QWORD PTR [rip+0x2182f6]        # 23aff0 <stderr@GLIBC_2.2.5>
   22cfa:	mov    esi,0x1
   22cff:	mov    rcx,QWORD PTR [r13+0x0]
   22d03:	call   c1b0 <fwrite@plt>
   22d08:	nop    DWORD PTR [rax+rax*1+0x0]
   22d10:	lea    rdx,[rip+0xea2b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   22d17:	xor    ecx,ecx
   22d19:	mov    r9d,0x2
   22d1f:	mov    r8,rbp
   22d22:	mov    rsi,rbx
   22d25:	mov    edi,r12d
   22d28:	call   ebe0 <def_getopt>
   22d2d:	cmp    eax,0xffffffff
   22d30:	jne    22d10 <main_button_press+0x40>
   22d32:	mov    rax,QWORD PTR [rip+0x21826f]        # 23afa8 <optind@GLIBC_2.2.5>
   22d39:	movsxd rax,DWORD PTR [rax]
   22d3c:	add    rax,0x1
   22d40:	mov    rdi,QWORD PTR [rbx+rax*8-0x8]
   22d45:	mov    rbp,QWORD PTR [rbx+rax*8]
   22d49:	call   eb40 <find_domain>
   22d4e:	lea    rdi,[rip+0x1081b]        # 33570 <shutdown_reason_letters.11238+0x240>
   22d55:	mov    ecx,0x6
   22d5a:	mov    rsi,rbp
   22d5d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   22d5f:	seta   dl
   22d62:	sbb    dl,0x0
   22d65:	test   dl,dl
   22d67:	je     22db0 <main_button_press+0xe0>
   22d69:	lea    rdi,[rip+0x10806]        # 33576 <shutdown_reason_letters.11238+0x246>
   22d70:	mov    ecx,0x6
   22d75:	mov    rsi,rbp
   22d78:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   22d7a:	seta   dl
   22d7d:	sbb    dl,0x0
   22d80:	test   dl,dl
   22d82:	jne    22db7 <main_button_press+0xe7>
   22d84:	mov    edx,0x2
   22d89:	mov    esi,eax
   22d8b:	lea    rax,[rip+0x21a0ce]        # 23ce60 <ctx>
   22d92:	xor    ecx,ecx
   22d94:	mov    rdi,QWORD PTR [rax]
   22d97:	call   c0f0 <libxl_send_trigger@plt>
   22d9c:	add    rsp,0x8
   22da0:	xor    eax,eax
   22da2:	pop    rbx
   22da3:	pop    rbp
   22da4:	pop    r12
   22da6:	pop    r13
   22da8:	ret    
   22da9:	nop    DWORD PTR [rax+0x0]
   22db0:	mov    edx,0x1
   22db5:	jmp    22d89 <main_button_press+0xb9>
   22db7:	mov    rdi,QWORD PTR [r13+0x0]
   22dbb:	lea    rdx,[rip+0x10666]        # 33428 <shutdown_reason_letters.11238+0xf8>
   22dc2:	mov    rcx,rbp
   22dc5:	mov    esi,0x1
   22dca:	xor    eax,eax
   22dcc:	call   c1e0 <__fprintf_chk@plt>
   22dd1:	mov    edi,0x1
   22dd6:	call   c1a0 <exit@plt>
   22ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000022de0 <main_rename>:
   22de0:	push   r12
   22de2:	push   rbp
   22de3:	lea    rbp,[rip+0x747f]        # 2a269 <__PRETTY_FUNCTION__.10113+0x651>
   22dea:	push   rbx
   22deb:	mov    r12d,edi
   22dee:	mov    rbx,rsi
   22df1:	nop    DWORD PTR [rax+0x0]
   22df8:	lea    rdx,[rip+0xe943]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   22dff:	xor    ecx,ecx
   22e01:	mov    r9d,0x2
   22e07:	mov    r8,rbp
   22e0a:	mov    rsi,rbx
   22e0d:	mov    edi,r12d
   22e10:	call   ebe0 <def_getopt>
   22e15:	cmp    eax,0xffffffff
   22e18:	jne    22df8 <main_rename+0x18>
   22e1a:	mov    rdx,QWORD PTR [rip+0x218187]        # 23afa8 <optind@GLIBC_2.2.5>
   22e21:	movsxd rax,DWORD PTR [rdx]
   22e24:	lea    ecx,[rax+0x1]
   22e27:	mov    DWORD PTR [rdx],ecx
   22e29:	mov    rbp,QWORD PTR [rbx+rax*8]
   22e2d:	mov    rbx,QWORD PTR [rbx+rax*8+0x8]
   22e32:	mov    rdi,rbp
   22e35:	call   eb40 <find_domain>
   22e3a:	lea    rdx,[rip+0x21a027]        # 23ce68 <common_domname>
   22e41:	mov    esi,eax
   22e43:	lea    rax,[rip+0x21a016]        # 23ce60 <ctx>
   22e4a:	mov    rcx,rbx
   22e4d:	mov    rdx,QWORD PTR [rdx]
   22e50:	mov    rdi,QWORD PTR [rax]
   22e53:	call   bbc0 <libxl_domain_rename@plt>
   22e58:	test   eax,eax
   22e5a:	je     22e81 <main_rename+0xa1>
   22e5c:	mov    rax,QWORD PTR [rip+0x21818d]        # 23aff0 <stderr@GLIBC_2.2.5>
   22e63:	lea    rdx,[rip+0x10712]        # 3357c <shutdown_reason_letters.11238+0x24c>
   22e6a:	mov    rcx,rbp
   22e6d:	mov    esi,0x1
   22e72:	mov    rdi,QWORD PTR [rax]
   22e75:	xor    eax,eax
   22e77:	call   c1e0 <__fprintf_chk@plt>
   22e7c:	mov    eax,0x1
   22e81:	pop    rbx
   22e82:	pop    rbp
   22e83:	pop    r12
   22e85:	ret    
   22e86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000022e90 <main_trigger>:
   22e90:	push   r14
   22e92:	push   r13
   22e94:	push   r12
   22e96:	push   rbp
   22e97:	lea    rbp,[rip+0x7099]        # 29f37 <__PRETTY_FUNCTION__.10113+0x31f>
   22e9e:	push   rbx
   22e9f:	mov    r12d,edi
   22ea2:	mov    rbx,rsi
   22ea5:	sub    rsp,0x20
   22ea9:	mov    rax,QWORD PTR fs:0x28
   22eb2:	mov    QWORD PTR [rsp+0x18],rax
   22eb7:	xor    eax,eax
   22eb9:	mov    QWORD PTR [rsp+0x10],0x0
   22ec2:	nop    WORD PTR [rax+rax*1+0x0]
   22ec8:	lea    rdx,[rip+0xe873]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   22ecf:	xor    ecx,ecx
   22ed1:	mov    r9d,0x2
   22ed7:	mov    r8,rbp
   22eda:	mov    rsi,rbx
   22edd:	mov    edi,r12d
   22ee0:	call   ebe0 <def_getopt>
   22ee5:	cmp    eax,0xffffffff
   22ee8:	jne    22ec8 <main_trigger+0x38>
   22eea:	mov    rbp,QWORD PTR [rip+0x2180b7]        # 23afa8 <optind@GLIBC_2.2.5>
   22ef1:	movsxd rax,DWORD PTR [rbp+0x0]
   22ef5:	lea    edx,[rax+0x1]
   22ef8:	mov    DWORD PTR [rbp+0x0],edx
   22efb:	mov    rdi,QWORD PTR [rbx+rax*8]
   22eff:	call   eb40 <find_domain>
   22f04:	mov    r13d,eax
   22f07:	movsxd rax,DWORD PTR [rbp+0x0]
   22f0b:	lea    rsi,[rsp+0xc]
   22f10:	lea    edx,[rax+0x1]
   22f13:	mov    DWORD PTR [rbp+0x0],edx
   22f16:	mov    r14,QWORD PTR [rbx+rax*8]
   22f1a:	mov    rdi,r14
   22f1d:	call   bc10 <libxl_trigger_from_string@plt>
   22f22:	test   eax,eax
   22f24:	mov    r12d,eax
   22f27:	jne    22fc0 <main_trigger+0x130>
   22f2d:	movsxd rax,DWORD PTR [rbp+0x0]
   22f31:	mov    rdi,QWORD PTR [rbx+rax*8]
   22f35:	test   rdi,rdi
   22f38:	je     22f88 <main_trigger+0xf8>
   22f3a:	lea    rsi,[rsp+0x10]
   22f3f:	mov    edx,0xa
   22f44:	call   b7b0 <strtol@plt>
   22f49:	test   eax,eax
   22f4b:	mov    ecx,eax
   22f4d:	jne    22f8a <main_trigger+0xfa>
   22f4f:	movsxd rax,DWORD PTR [rbp+0x0]
   22f53:	mov    rdi,QWORD PTR [rsp+0x10]
   22f58:	mov    rsi,QWORD PTR [rbx+rax*8]
   22f5c:	call   b650 <strcmp@plt>
   22f61:	test   eax,eax
   22f63:	jne    22f88 <main_trigger+0xf8>
   22f65:	mov    rax,QWORD PTR [rip+0x218084]        # 23aff0 <stderr@GLIBC_2.2.5>
   22f6c:	lea    rdi,[rip+0x104dd]        # 33450 <shutdown_reason_letters.11238+0x120>
   22f73:	mov    edx,0x29
   22f78:	mov    esi,0x1
   22f7d:	mov    rcx,QWORD PTR [rax]
   22f80:	call   c1b0 <fwrite@plt>
   22f85:	nop    DWORD PTR [rax]
   22f88:	xor    ecx,ecx
   22f8a:	lea    rax,[rip+0x219ecf]        # 23ce60 <ctx>
   22f91:	mov    edx,DWORD PTR [rsp+0xc]
   22f95:	mov    esi,r13d
   22f98:	mov    rdi,QWORD PTR [rax]
   22f9b:	call   c0f0 <libxl_send_trigger@plt>
   22fa0:	mov    rcx,QWORD PTR [rsp+0x18]
   22fa5:	xor    rcx,QWORD PTR fs:0x28
   22fae:	mov    eax,r12d
   22fb1:	jne    22fe8 <main_trigger+0x158>
   22fb3:	add    rsp,0x20
   22fb7:	pop    rbx
   22fb8:	pop    rbp
   22fb9:	pop    r12
   22fbb:	pop    r13
   22fbd:	pop    r14
   22fbf:	ret    
   22fc0:	mov    rax,QWORD PTR [rip+0x218029]        # 23aff0 <stderr@GLIBC_2.2.5>
   22fc7:	lea    rdx,[rip+0x105c9]        # 33597 <shutdown_reason_letters.11238+0x267>
   22fce:	mov    rcx,r14
   22fd1:	mov    esi,0x1
   22fd6:	mov    r12d,0x1
   22fdc:	mov    rdi,QWORD PTR [rax]
   22fdf:	xor    eax,eax
   22fe1:	call   c1e0 <__fprintf_chk@plt>
   22fe6:	jmp    22fa0 <main_trigger+0x110>
   22fe8:	call   b130 <__stack_chk_fail@plt>
   22fed:	nop    DWORD PTR [rax]

0000000000022ff0 <main_sysrq>:
   22ff0:	push   r12
   22ff2:	push   rbp
   22ff3:	lea    rbp,[rip+0x6f60]        # 29f5a <__PRETTY_FUNCTION__.10113+0x342>
   22ffa:	push   rbx
   22ffb:	mov    r12d,edi
   22ffe:	mov    rbx,rsi
   23001:	nop    DWORD PTR [rax+0x0]
   23008:	lea    rdx,[rip+0xe733]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2300f:	xor    ecx,ecx
   23011:	mov    r9d,0x2
   23017:	mov    r8,rbp
   2301a:	mov    rsi,rbx
   2301d:	mov    edi,r12d
   23020:	call   ebe0 <def_getopt>
   23025:	cmp    eax,0xffffffff
   23028:	jne    23008 <main_sysrq+0x18>
   2302a:	mov    rbp,QWORD PTR [rip+0x217f77]        # 23afa8 <optind@GLIBC_2.2.5>
   23031:	movsxd rax,DWORD PTR [rbp+0x0]
   23035:	lea    edx,[rax+0x1]
   23038:	mov    DWORD PTR [rbp+0x0],edx
   2303b:	mov    rdi,QWORD PTR [rbx+rax*8]
   2303f:	call   eb40 <find_domain>
   23044:	movsxd rdx,DWORD PTR [rbp+0x0]
   23048:	mov    rdx,QWORD PTR [rbx+rdx*8]
   2304c:	cmp    BYTE PTR [rdx+0x1],0x0
   23050:	jne    23070 <main_sysrq+0x80>
   23052:	mov    esi,eax
   23054:	lea    rax,[rip+0x219e05]        # 23ce60 <ctx>
   2305b:	movsx  edx,BYTE PTR [rdx]
   2305e:	mov    rdi,QWORD PTR [rax]
   23061:	call   bb10 <libxl_send_sysrq@plt>
   23066:	pop    rbx
   23067:	xor    eax,eax
   23069:	pop    rbp
   2306a:	pop    r12
   2306c:	ret    
   2306d:	nop    DWORD PTR [rax]
   23070:	mov    rax,QWORD PTR [rip+0x217f79]        # 23aff0 <stderr@GLIBC_2.2.5>
   23077:	lea    rdi,[rip+0x1052f]        # 335ad <shutdown_reason_letters.11238+0x27d>
   2307e:	mov    edx,0x10
   23083:	mov    esi,0x1
   23088:	mov    rcx,QWORD PTR [rax]
   2308b:	call   c1b0 <fwrite@plt>
   23090:	lea    rdi,[rip+0x6ec3]        # 29f5a <__PRETTY_FUNCTION__.10113+0x342>
   23097:	call   d4f0 <help>
   2309c:	pop    rbx
   2309d:	mov    eax,0x1
   230a2:	pop    rbp
   230a3:	pop    r12
   230a5:	ret    
   230a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000230b0 <main_debug_keys>:
   230b0:	push   r12
   230b2:	push   rbp
   230b3:	lea    rbp,[rip+0x6ed1]        # 29f8b <__PRETTY_FUNCTION__.10113+0x373>
   230ba:	push   rbx
   230bb:	mov    r12d,edi
   230be:	mov    rbx,rsi
   230c1:	nop    DWORD PTR [rax+0x0]
   230c8:	lea    rdx,[rip+0xe673]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   230cf:	xor    ecx,ecx
   230d1:	mov    r9d,0x1
   230d7:	mov    r8,rbp
   230da:	mov    rsi,rbx
   230dd:	mov    edi,r12d
   230e0:	call   ebe0 <def_getopt>
   230e5:	cmp    eax,0xffffffff
   230e8:	jne    230c8 <main_debug_keys+0x18>
   230ea:	mov    rax,QWORD PTR [rip+0x217eb7]        # 23afa8 <optind@GLIBC_2.2.5>
   230f1:	movsxd rax,DWORD PTR [rax]
   230f4:	mov    rbx,QWORD PTR [rbx+rax*8]
   230f8:	lea    rax,[rip+0x219d61]        # 23ce60 <ctx>
   230ff:	mov    rdi,QWORD PTR [rax]
   23102:	mov    rsi,rbx
   23105:	call   bec0 <libxl_send_debug_keys@plt>
   2310a:	test   eax,eax
   2310c:	je     23133 <main_debug_keys+0x83>
   2310e:	mov    rax,QWORD PTR [rip+0x217edb]        # 23aff0 <stderr@GLIBC_2.2.5>
   23115:	lea    rdx,[rip+0x104a2]        # 335be <shutdown_reason_letters.11238+0x28e>
   2311c:	mov    rcx,rbx
   2311f:	mov    esi,0x1
   23124:	mov    rdi,QWORD PTR [rax]
   23127:	xor    eax,eax
   23129:	call   c1e0 <__fprintf_chk@plt>
   2312e:	mov    eax,0x1
   23133:	pop    rbx
   23134:	pop    rbp
   23135:	pop    r12
   23137:	ret    
   23138:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000023140 <main_set_parameters>:
   23140:	push   r12
   23142:	push   rbp
   23143:	lea    rbp,[rip+0x6e6a]        # 29fb4 <__PRETTY_FUNCTION__.10113+0x39c>
   2314a:	push   rbx
   2314b:	mov    r12d,edi
   2314e:	mov    rbx,rsi
   23151:	nop    DWORD PTR [rax+0x0]
   23158:	lea    rdx,[rip+0xe5e3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2315f:	xor    ecx,ecx
   23161:	mov    r9d,0x1
   23167:	mov    r8,rbp
   2316a:	mov    rsi,rbx
   2316d:	mov    edi,r12d
   23170:	call   ebe0 <def_getopt>
   23175:	cmp    eax,0xffffffff
   23178:	jne    23158 <main_set_parameters+0x18>
   2317a:	mov    rax,QWORD PTR [rip+0x217e27]        # 23afa8 <optind@GLIBC_2.2.5>
   23181:	movsxd rax,DWORD PTR [rax]
   23184:	mov    rbx,QWORD PTR [rbx+rax*8]
   23188:	lea    rax,[rip+0x219cd1]        # 23ce60 <ctx>
   2318f:	mov    rdi,QWORD PTR [rax]
   23192:	mov    rsi,rbx
   23195:	call   c490 <libxl_set_parameters@plt>
   2319a:	test   eax,eax
   2319c:	je     231de <main_set_parameters+0x9e>
   2319e:	mov    rbp,QWORD PTR [rip+0x217e4b]        # 23aff0 <stderr@GLIBC_2.2.5>
   231a5:	lea    rdx,[rip+0x1042e]        # 335da <shutdown_reason_letters.11238+0x2aa>
   231ac:	mov    rcx,rbx
   231af:	mov    esi,0x1
   231b4:	xor    eax,eax
   231b6:	mov    rdi,QWORD PTR [rbp+0x0]
   231ba:	call   c1e0 <__fprintf_chk@plt>
   231bf:	mov    rcx,QWORD PTR [rbp+0x0]
   231c3:	lea    rdi,[rip+0x102b6]        # 33480 <shutdown_reason_letters.11238+0x150>
   231ca:	mov    edx,0x2c
   231cf:	mov    esi,0x1
   231d4:	call   c1b0 <fwrite@plt>
   231d9:	mov    eax,0x1
   231de:	pop    rbx
   231df:	pop    rbp
   231e0:	pop    r12
   231e2:	ret    
   231e3:	nop    DWORD PTR [rax]
   231e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000231f0 <main_devd>:
   231f0:	push   r14
   231f2:	push   r13
   231f4:	xor    r14d,r14d
   231f7:	push   r12
   231f9:	push   rbp
   231fa:	mov    r12d,edi
   231fd:	push   rbx
   231fe:	lea    rbx,[rip+0x103f7]        # 335fc <shutdown_reason_letters.11238+0x2cc>
   23205:	mov    rbp,rsi
   23208:	mov    r13d,0x1
   2320e:	xchg   ax,ax
   23210:	lea    rcx,[rip+0x216dc9]        # 239fe0 <opts.8675>
   23217:	lea    rdx,[rip+0x103d7]        # 335f5 <shutdown_reason_letters.11238+0x2c5>
   2321e:	xor    r9d,r9d
   23221:	mov    r8,rbx
   23224:	mov    rsi,rbp
   23227:	mov    edi,r12d
   2322a:	call   ebe0 <def_getopt>
   2322f:	cmp    eax,0xffffffff
   23232:	je     23258 <main_devd+0x68>
   23234:	cmp    eax,0x46
   23237:	je     23250 <main_devd+0x60>
   23239:	cmp    eax,0x70
   2323c:	jne    23210 <main_devd+0x20>
   2323e:	mov    rax,QWORD PTR [rip+0x217d7b]        # 23afc0 <optarg@GLIBC_2.2.5>
   23245:	mov    r14,QWORD PTR [rax]
   23248:	jmp    23210 <main_devd+0x20>
   2324a:	nop    WORD PTR [rax+rax*1+0x0]
   23250:	xor    r13d,r13d
   23253:	jmp    23210 <main_devd+0x20>
   23255:	nop    DWORD PTR [rax]
   23258:	test   r13d,r13d
   2325b:	je     23270 <main_devd+0x80>
   2325d:	lea    rdi,[rip+0x10396]        # 335fa <shutdown_reason_letters.11238+0x2ca>
   23264:	mov    rsi,r14
   23267:	call   efb0 <do_daemonize>
   2326c:	test   eax,eax
   2326e:	jne    23298 <main_devd+0xa8>
   23270:	lea    rax,[rip+0x219be9]        # 23ce60 <ctx>
   23277:	xor    esi,esi
   23279:	mov    rdi,QWORD PTR [rax]
   2327c:	call   b990 <libxl_device_events_handler@plt>
   23281:	test   eax,eax
   23283:	setne  al
   23286:	pop    rbx
   23287:	movzx  eax,al
   2328a:	pop    rbp
   2328b:	pop    r12
   2328d:	pop    r13
   2328f:	pop    r14
   23291:	ret    
   23292:	nop    WORD PTR [rax+rax*1+0x0]
   23298:	cmp    eax,0x1
   2329b:	mov    edx,0x0
   232a0:	pop    rbx
   232a1:	cmove  eax,edx
   232a4:	pop    rbp
   232a5:	pop    r12
   232a7:	pop    r13
   232a9:	pop    r14
   232ab:	ret    
   232ac:	nop    DWORD PTR [rax+0x0]

00000000000232b0 <main_qemu_monitor_command>:
   232b0:	push   r12
   232b2:	push   rbp
   232b3:	lea    r12,[rip+0x7228]        # 2a4e2 <__PRETTY_FUNCTION__.10113+0x8ca>
   232ba:	push   rbx
   232bb:	mov    rbp,rsi
   232be:	mov    ebx,edi
   232c0:	sub    rsp,0x10
   232c4:	mov    rax,QWORD PTR fs:0x28
   232cd:	mov    QWORD PTR [rsp+0x8],rax
   232d2:	xor    eax,eax
   232d4:	nop    DWORD PTR [rax+0x0]
   232d8:	lea    rdx,[rip+0xe463]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   232df:	xor    ecx,ecx
   232e1:	mov    r9d,0x2
   232e7:	mov    r8,r12
   232ea:	mov    rsi,rbp
   232ed:	mov    edi,ebx
   232ef:	call   ebe0 <def_getopt>
   232f4:	cmp    eax,0xffffffff
   232f7:	jne    232d8 <main_qemu_monitor_command+0x28>
   232f9:	mov    r12,QWORD PTR [rip+0x217ca8]        # 23afa8 <optind@GLIBC_2.2.5>
   23300:	movsxd rax,DWORD PTR [r12]
   23304:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   23309:	call   eb40 <find_domain>
   2330e:	movsxd rdx,DWORD PTR [r12]
   23312:	sub    ebx,edx
   23314:	cmp    ebx,0x2
   23317:	jg     23380 <main_qemu_monitor_command+0xd0>
   23319:	mov    esi,eax
   2331b:	lea    rax,[rip+0x219b3e]        # 23ce60 <ctx>
   23322:	mov    rdx,QWORD PTR [rbp+rdx*8+0x8]
   23327:	mov    rcx,rsp
   2332a:	mov    rdi,QWORD PTR [rax]
   2332d:	call   aef0 <libxl_qemu_monitor_command@plt>
   23332:	test   eax,eax
   23334:	mov    ebx,eax
   23336:	je     23360 <main_qemu_monitor_command+0xb0>
   23338:	xor    eax,eax
   2333a:	test   ebx,ebx
   2333c:	setne  al
   2333f:	mov    rsi,QWORD PTR [rsp+0x8]
   23344:	xor    rsi,QWORD PTR fs:0x28
   2334d:	jne    233a7 <main_qemu_monitor_command+0xf7>
   2334f:	add    rsp,0x10
   23353:	pop    rbx
   23354:	pop    rbp
   23355:	pop    r12
   23357:	ret    
   23358:	nop    DWORD PTR [rax+rax*1+0x0]
   23360:	mov    rdi,QWORD PTR [rsp]
   23364:	test   rdi,rdi
   23367:	je     23338 <main_qemu_monitor_command+0x88>
   23369:	call   aeb0 <puts@plt>
   2336e:	mov    rdi,QWORD PTR [rsp]
   23372:	call   ac40 <free@plt>
   23377:	jmp    23338 <main_qemu_monitor_command+0x88>
   23379:	nop    DWORD PTR [rax+0x0]
   23380:	mov    rax,QWORD PTR [rip+0x217c69]        # 23aff0 <stderr@GLIBC_2.2.5>
   23387:	lea    rdi,[rip+0xe6ac]        # 31a3a <__PRETTY_FUNCTION__.10016+0x9aa>
   2338e:	mov    edx,0x13
   23393:	mov    esi,0x1
   23398:	mov    rcx,QWORD PTR [rax]
   2339b:	call   c1b0 <fwrite@plt>
   233a0:	mov    eax,0x1
   233a5:	jmp    2333f <main_qemu_monitor_command+0x8f>
   233a7:	call   b130 <__stack_chk_fail@plt>
   233ac:	nop    DWORD PTR [rax+0x0]

00000000000233b0 <main_dump_core>:
   233b0:	push   r12
   233b2:	push   rbp
   233b3:	lea    rbp,[rip+0x6a22]        # 29ddc <__PRETTY_FUNCTION__.10113+0x1c4>
   233ba:	push   rbx
   233bb:	mov    r12d,edi
   233be:	mov    rbx,rsi
   233c1:	nop    DWORD PTR [rax+0x0]
   233c8:	lea    rdx,[rip+0xe373]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   233cf:	xor    ecx,ecx
   233d1:	mov    r9d,0x2
   233d7:	mov    r8,rbp
   233da:	mov    rsi,rbx
   233dd:	mov    edi,r12d
   233e0:	call   ebe0 <def_getopt>
   233e5:	cmp    eax,0xffffffff
   233e8:	jne    233c8 <main_dump_core+0x18>
   233ea:	mov    rax,QWORD PTR [rip+0x217bb7]        # 23afa8 <optind@GLIBC_2.2.5>
   233f1:	movsxd rax,DWORD PTR [rax]
   233f4:	add    rax,0x1
   233f8:	mov    rdi,QWORD PTR [rbx+rax*8-0x8]
   233fd:	mov    rbp,QWORD PTR [rbx+rax*8]
   23401:	call   eb40 <find_domain>
   23406:	mov    esi,eax
   23408:	lea    rax,[rip+0x219a51]        # 23ce60 <ctx>
   2340f:	xor    ecx,ecx
   23411:	mov    rdx,rbp
   23414:	mov    rdi,QWORD PTR [rax]
   23417:	call   c0a0 <libxl_domain_core_dump@plt>
   2341c:	test   eax,eax
   2341e:	jne    23427 <main_dump_core+0x77>
   23420:	pop    rbx
   23421:	xor    eax,eax
   23423:	pop    rbp
   23424:	pop    r12
   23426:	ret    
   23427:	mov    ecx,eax
   23429:	mov    rax,QWORD PTR [rip+0x217bc0]        # 23aff0 <stderr@GLIBC_2.2.5>
   23430:	lea    rdx,[rip+0x101ca]        # 33601 <shutdown_reason_letters.11238+0x2d1>
   23437:	mov    esi,0x1
   2343c:	mov    rdi,QWORD PTR [rax]
   2343f:	xor    eax,eax
   23441:	call   c1e0 <__fprintf_chk@plt>
   23446:	mov    edi,0x1
   2344b:	call   c1a0 <exit@plt>

0000000000023450 <main_config_update>:
   23450:	push   r15
   23452:	push   r14
   23454:	push   r13
   23456:	push   r12
   23458:	push   rbp
   23459:	push   rbx
   2345a:	sub    rsp,0x4f8
   23461:	mov    rax,QWORD PTR fs:0x28
   2346a:	mov    QWORD PTR [rsp+0x4e8],rax
   23472:	xor    eax,eax
   23474:	mov    rax,QWORD PTR [rip+0x217b75]        # 23aff0 <stderr@GLIBC_2.2.5>
   2347b:	cmp    edi,0x1
   2347e:	mov    QWORD PTR [rsp+0x20],0x0
   23487:	mov    QWORD PTR [rsp+0x28],0x0
   23490:	mov    DWORD PTR [rsp+0x1c],0x0
   23498:	mov    rcx,QWORD PTR [rax]
   2349b:	jle    23872 <main_config_update+0x422>
   234a1:	mov    ebx,edi
   234a3:	lea    rdi,[rip+0x10036]        # 334e0 <shutdown_reason_letters.11238+0x1b0>
   234aa:	mov    r14,rsi
   234ad:	mov    edx,0x6d
   234b2:	mov    esi,0x1
   234b7:	lea    ebp,[rbx-0x1]
   234ba:	call   c1b0 <fwrite@plt>
   234bf:	mov    rdi,QWORD PTR [r14+0x8]
   234c3:	lea    r12,[r14+0x8]
   234c7:	call   eb40 <find_domain>
   234cc:	mov    r13,QWORD PTR [r14+0x10]
   234d0:	mov    DWORD PTR [rsp+0xc],eax
   234d4:	test   r13,r13
   234d7:	je     234f9 <main_config_update+0xa9>
   234d9:	cmp    BYTE PTR [r13+0x0],0x2d
   234de:	je     234f6 <main_config_update+0xa6>
   234e0:	mov    esi,0x3d
   234e5:	mov    rdi,r13
   234e8:	call   b1c0 <strchr@plt>
   234ed:	test   rax,rax
   234f0:	je     237a0 <main_config_update+0x350>
   234f6:	xor    r13d,r13d
   234f9:	mov    DWORD PTR [rsp+0x8],0x0
   23501:	nop    DWORD PTR [rax+0x0]
   23508:	lea    r8,[rip+0x1010c]        # 3361b <shutdown_reason_letters.11238+0x2eb>
   2350f:	lea    rcx,[rip+0x21954a]        # 23ca60 <opts.8726>
   23516:	lea    rdx,[rip+0x1010c]        # 33629 <shutdown_reason_letters.11238+0x2f9>
   2351d:	xor    r9d,r9d
   23520:	mov    rsi,r12
   23523:	mov    edi,ebp
   23525:	call   ebe0 <def_getopt>
   2352a:	cmp    eax,0xffffffff
   2352d:	je     23558 <main_config_update+0x108>
   2352f:	cmp    eax,0x64
   23532:	je     23548 <main_config_update+0xf8>
   23534:	cmp    eax,0x66
   23537:	jne    23508 <main_config_update+0xb8>
   23539:	mov    rax,QWORD PTR [rip+0x217a80]        # 23afc0 <optarg@GLIBC_2.2.5>
   23540:	mov    r13,QWORD PTR [rax]
   23543:	jmp    23508 <main_config_update+0xb8>
   23545:	nop    DWORD PTR [rax]
   23548:	mov    DWORD PTR [rsp+0x8],0x1
   23550:	jmp    23508 <main_config_update+0xb8>
   23552:	nop    WORD PTR [rax+rax*1+0x0]
   23558:	mov    rbx,QWORD PTR [rip+0x217a49]        # 23afa8 <optind@GLIBC_2.2.5>
   2355f:	mov    eax,DWORD PTR [rbx]
   23561:	cmp    eax,ebp
   23563:	jge    235c4 <main_config_update+0x174>
   23565:	lea    r14,[rsp+0x20]
   2356a:	jmp    23595 <main_config_update+0x145>
   2356c:	nop    DWORD PTR [rax+0x0]
   23570:	mov    rsi,r15
   23573:	mov    rdi,r14
   23576:	call   ed40 <string_realloc_append>
   2357b:	lea    rsi,[rip+0xbde4]        # 2f366 <__func__.10421+0xfde>
   23582:	mov    rdi,r14
   23585:	call   ed40 <string_realloc_append>
   2358a:	mov    eax,DWORD PTR [rbx]
   2358c:	add    eax,0x1
   2358f:	cmp    eax,ebp
   23591:	mov    DWORD PTR [rbx],eax
   23593:	jge    235c4 <main_config_update+0x174>
   23595:	cdqe   
   23597:	mov    esi,0x3d
   2359c:	mov    r15,QWORD PTR [r12+rax*8]
   235a0:	mov    rdi,r15
   235a3:	call   b1c0 <strchr@plt>
   235a8:	test   rax,rax
   235ab:	jne    23570 <main_config_update+0x120>
   235ad:	test   r13,r13
   235b0:	jne    23780 <main_config_update+0x330>
   235b6:	mov    eax,DWORD PTR [rbx]
   235b8:	mov    r13,r15
   235bb:	add    eax,0x1
   235be:	cmp    eax,ebp
   235c0:	mov    DWORD PTR [rbx],eax
   235c2:	jl     23595 <main_config_update+0x145>
   235c4:	test   r13,r13
   235c7:	je     23843 <main_config_update+0x3f3>
   235cd:	mov    rdi,QWORD PTR [rsp+0x28]
   235d2:	call   ac40 <free@plt>
   235d7:	lea    r12,[rip+0x219882]        # 23ce60 <ctx>
   235de:	lea    rcx,[rsp+0x1c]
   235e3:	lea    rdx,[rsp+0x28]
   235e8:	mov    rsi,r13
   235eb:	mov    QWORD PTR [rsp+0x28],0x0
   235f4:	mov    rdi,QWORD PTR [r12]
   235f8:	call   b320 <libxl_read_file_contents@plt>
   235fd:	test   eax,eax
   235ff:	mov    ebp,eax
   23601:	jne    237ac <main_config_update+0x35c>
   23607:	mov    rdi,QWORD PTR [rsp+0x20]
   2360c:	test   rdi,rdi
   2360f:	je     23679 <main_config_update+0x229>
   23611:	cmp    BYTE PTR [rdi],0x0
   23614:	je     23679 <main_config_update+0x229>
   23616:	movsxd rbx,DWORD PTR [rsp+0x1c]
   2361b:	call   b0c0 <strlen@plt>
   23620:	mov    edx,0x7ffffffc
   23625:	sub    rdx,rax
   23628:	cmp    rbx,rdx
   2362b:	ja     237ef <main_config_update+0x39f>
   23631:	mov    rdi,QWORD PTR [rsp+0x28]
   23636:	lea    rsi,[rbx+rax*1+0x3]
   2363b:	call   bce0 <realloc@plt>
   23640:	test   rax,rax
   23643:	mov    QWORD PTR [rsp+0x28],rax
   23648:	je     23819 <main_config_update+0x3c9>
   2364e:	movsxd rdi,DWORD PTR [rsp+0x1c]
   23653:	mov    r8,QWORD PTR [rsp+0x20]
   23658:	lea    rcx,[rip+0x615f]        # 297be <_IO_stdin_used+0x7e>
   2365f:	mov    rdx,0xffffffffffffffff
   23666:	mov    esi,0x1
   2366b:	add    rdi,rax
   2366e:	xor    eax,eax
   23670:	call   c530 <__sprintf_chk@plt>
   23675:	add    DWORD PTR [rsp+0x1c],eax
   23679:	lea    rbx,[rsp+0x30]
   2367e:	mov    rdi,rbx
   23681:	call   b6e0 <libxl_domain_config_init@plt>
   23686:	mov    edx,DWORD PTR [rsp+0x1c]
   2368a:	mov    rsi,QWORD PTR [rsp+0x28]
   2368f:	mov    rcx,rbx
   23692:	mov    rdi,r13
   23695:	call   140f0 <parse_config_data>
   2369a:	mov    ecx,DWORD PTR [rsp+0x8]
   2369e:	lea    r13,[rip+0x2197eb]        # 23ce90 <dryrun_only>
   236a5:	test   ecx,ecx
   236a7:	jne    23750 <main_config_update+0x300>
   236ad:	mov    edx,DWORD PTR [r13+0x0]
   236b1:	test   edx,edx
   236b3:	jne    23750 <main_config_update+0x300>
   236b9:	mov    rax,QWORD PTR [rip+0x217930]        # 23aff0 <stderr@GLIBC_2.2.5>
   236c0:	mov    r14d,DWORD PTR [rsp+0xc]
   236c5:	lea    rdx,[rip+0xff7e]        # 3364a <shutdown_reason_letters.11238+0x31a>
   236cc:	mov    esi,0x1
   236d1:	mov    rdi,QWORD PTR [rax]
   236d4:	mov    ecx,r14d
   236d7:	xor    eax,eax
   236d9:	call   c1e0 <__fprintf_chk@plt>
   236de:	mov    r8d,DWORD PTR [rsp+0x1c]
   236e3:	mov    rcx,QWORD PTR [rsp+0x28]
   236e8:	lea    rdx,[rip+0x6175]        # 29864 <_IO_stdin_used+0x124>
   236ef:	mov    rdi,QWORD PTR [r12]
   236f3:	mov    esi,r14d
   236f6:	call   b870 <libxl_userdata_store@plt>
   236fb:	test   eax,eax
   236fd:	jne    2389e <main_config_update+0x44e>
   23703:	mov    rdi,rbx
   23706:	call   bb40 <libxl_domain_config_dispose@plt>
   2370b:	mov    rdi,QWORD PTR [rsp+0x28]
   23710:	call   ac40 <free@plt>
   23715:	mov    rdi,QWORD PTR [rsp+0x20]
   2371a:	call   ac40 <free@plt>
   2371f:	mov    rdx,QWORD PTR [rsp+0x4e8]
   23727:	xor    rdx,QWORD PTR fs:0x28
   23730:	mov    eax,ebp
   23732:	jne    2386d <main_config_update+0x41d>
   23738:	add    rsp,0x4f8
   2373f:	pop    rbx
   23740:	pop    rbp
   23741:	pop    r12
   23743:	pop    r13
   23745:	pop    r14
   23747:	pop    r15
   23749:	ret    
   2374a:	nop    WORD PTR [rax+rax*1+0x0]
   23750:	mov    rax,QWORD PTR [rip+0x217849]        # 23afa0 <stdout@GLIBC_2.2.5>
   23757:	mov    rdx,rbx
   2375a:	mov    esi,0xffffffff
   2375f:	mov    rcx,QWORD PTR [rax]
   23762:	lea    rax,[rip+0x2196a3]        # 23ce0c <default_output_format>
   23769:	mov    edi,DWORD PTR [rax]
   2376b:	call   213e0 <printf_info>
   23770:	mov    eax,DWORD PTR [r13+0x0]
   23774:	test   eax,eax
   23776:	jne    23703 <main_config_update+0x2b3>
   23778:	jmp    236b9 <main_config_update+0x269>
   2377d:	nop    DWORD PTR [rax]
   23780:	lea    rdi,[rip+0x6a59]        # 2a1e0 <__PRETTY_FUNCTION__.10113+0x5c8>
   23787:	mov    ebp,0x2
   2378c:	call   d4f0 <help>
   23791:	mov    rdi,QWORD PTR [rsp+0x20]
   23796:	call   ac40 <free@plt>
   2379b:	jmp    2371f <main_config_update+0x2cf>
   2379d:	nop    DWORD PTR [rax]
   237a0:	lea    ebp,[rbx-0x2]
   237a3:	lea    r12,[r14+0x10]
   237a7:	jmp    234f9 <main_config_update+0xa9>
   237ac:	call   ad80 <__errno_location@plt>
   237b1:	mov    edi,DWORD PTR [rax]
   237b3:	mov    ebp,0xfffffffd
   237b8:	call   c3b0 <strerror@plt>
   237bd:	mov    r8,rax
   237c0:	mov    rax,QWORD PTR [rip+0x217829]        # 23aff0 <stderr@GLIBC_2.2.5>
   237c7:	lea    rdx,[rip+0x625a]        # 29a28 <_IO_stdin_used+0x2e8>
   237ce:	mov    rcx,r13
   237d1:	mov    esi,0x1
   237d6:	mov    rdi,QWORD PTR [rax]
   237d9:	xor    eax,eax
   237db:	call   c1e0 <__fprintf_chk@plt>
   237e0:	mov    rdi,QWORD PTR [rsp+0x20]
   237e5:	call   ac40 <free@plt>
   237ea:	jmp    2371f <main_config_update+0x2cf>
   237ef:	mov    rax,QWORD PTR [rip+0x2177fa]        # 23aff0 <stderr@GLIBC_2.2.5>
   237f6:	lea    rdi,[rip+0xdb03]        # 31300 <__PRETTY_FUNCTION__.10016+0x270>
   237fd:	mov    edx,0x25
   23802:	mov    esi,0x1
   23807:	mov    rcx,QWORD PTR [rax]
   2380a:	call   c1b0 <fwrite@plt>
   2380f:	mov    edi,0x1
   23814:	call   c1a0 <exit@plt>
   23819:	mov    rax,QWORD PTR [rip+0x2177d0]        # 23aff0 <stderr@GLIBC_2.2.5>
   23820:	lea    rdi,[rip+0xdb01]        # 31328 <__PRETTY_FUNCTION__.10016+0x298>
   23827:	mov    edx,0x1e
   2382c:	mov    esi,0x1
   23831:	mov    rcx,QWORD PTR [rax]
   23834:	call   c1b0 <fwrite@plt>
   23839:	mov    edi,0x1
   2383e:	call   c1a0 <exit@plt>
   23843:	mov    rax,QWORD PTR [rip+0x2177a6]        # 23aff0 <stderr@GLIBC_2.2.5>
   2384a:	lea    rdi,[rip+0xfdde]        # 3362f <shutdown_reason_letters.11238+0x2ff>
   23851:	mov    edx,0x1a
   23856:	mov    esi,0x1
   2385b:	mov    rcx,QWORD PTR [rax]
   2385e:	call   c1b0 <fwrite@plt>
   23863:	mov    edi,0x1
   23868:	call   c1a0 <exit@plt>
   2386d:	call   b130 <__stack_chk_fail@plt>
   23872:	lea    rdi,[rip+0xfc37]        # 334b0 <shutdown_reason_letters.11238+0x180>
   23879:	mov    edx,0x2c
   2387e:	mov    esi,0x1
   23883:	call   c1b0 <fwrite@plt>
   23888:	lea    rdi,[rip+0x63af]        # 29c3e <__PRETTY_FUNCTION__.10113+0x26>
   2388f:	call   d4f0 <help>
   23894:	mov    edi,0x1
   23899:	call   c1a0 <exit@plt>
   2389e:	mov    rax,QWORD PTR [rip+0x21774b]        # 23aff0 <stderr@GLIBC_2.2.5>
   238a5:	lea    rdi,[rip+0xfca4]        # 33550 <shutdown_reason_letters.11238+0x220>
   238ac:	mov    edx,0x1f
   238b1:	mov    esi,0x1
   238b6:	mov    rcx,QWORD PTR [rax]
   238b9:	call   c1b0 <fwrite@plt>
   238be:	mov    edi,0x1
   238c3:	call   c1a0 <exit@plt>
   238c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000238d0 <shutdown_domain>:
   238d0:	push   r15
   238d2:	push   r14
   238d4:	mov    r15d,ecx
   238d7:	push   r13
   238d9:	push   r12
   238db:	mov    ecx,edi
   238dd:	push   rbp
   238de:	push   rbx
   238df:	mov    ebx,edi
   238e1:	mov    r14,rdx
   238e4:	lea    rdx,[rip+0xfd7c]        # 33667 <shutdown_reason_letters.11238+0x337>
   238eb:	mov    r13,rsi
   238ee:	sub    rsp,0x8
   238f2:	mov    rax,QWORD PTR [rip+0x2176f7]        # 23aff0 <stderr@GLIBC_2.2.5>
   238f9:	mov    esi,0x1
   238fe:	mov    rdi,QWORD PTR [rax]
   23901:	xor    eax,eax
   23903:	call   c1e0 <__fprintf_chk@plt>
   23908:	lea    r12,[rip+0x219551]        # 23ce60 <ctx>
   2390f:	mov    esi,ebx
   23911:	mov    rdi,QWORD PTR [r12]
   23915:	call   b4c0 <libxl_domain_shutdown@plt>
   2391a:	cmp    eax,0xfffffff6
   2391d:	mov    ebp,eax
   2391f:	je     23958 <shutdown_domain+0x88>
   23921:	test   ebp,ebp
   23923:	jne    2399d <shutdown_domain+0xcd>
   23925:	test   r13,r13
   23928:	je     23943 <shutdown_domain+0x73>
   2392a:	mov    rdi,QWORD PTR [r12]
   2392e:	mov    rcx,r13
   23931:	mov    rdx,r14
   23934:	mov    esi,ebx
   23936:	call   ba80 <libxl_evenable_domain_death@plt>
   2393b:	test   eax,eax
   2393d:	jne    239ff <shutdown_domain+0x12f>
   23943:	add    rsp,0x8
   23947:	pop    rbx
   23948:	pop    rbp
   23949:	pop    r12
   2394b:	pop    r13
   2394d:	pop    r14
   2394f:	pop    r15
   23951:	ret    
   23952:	nop    WORD PTR [rax+rax*1+0x0]
   23958:	mov    rax,QWORD PTR [rip+0x217691]        # 23aff0 <stderr@GLIBC_2.2.5>
   2395f:	test   r15d,r15d
   23962:	mov    rcx,QWORD PTR [rax]
   23965:	jne    239d0 <shutdown_domain+0x100>
   23967:	lea    rdi,[rip+0xfff2]        # 33960 <shutdown_reason_letters.11238+0x630>
   2396e:	mov    edx,0x4d
   23973:	mov    esi,0x1
   23978:	call   c1b0 <fwrite@plt>
   2397d:	mov    rax,QWORD PTR [rip+0x21766c]        # 23aff0 <stderr@GLIBC_2.2.5>
   23984:	lea    rdi,[rip+0x10025]        # 339b0 <shutdown_reason_letters.11238+0x680>
   2398b:	mov    edx,0x2a
   23990:	mov    esi,0x1
   23995:	mov    rcx,QWORD PTR [rax]
   23998:	call   c1b0 <fwrite@plt>
   2399d:	lea    rdx,[rip+0xfcdc]        # 33680 <shutdown_reason_letters.11238+0x350>
   239a4:	mov    ecx,ebp
   239a6:	mov    rax,QWORD PTR [rip+0x217643]        # 23aff0 <stderr@GLIBC_2.2.5>
   239ad:	mov    esi,0x1
   239b2:	mov    rdi,QWORD PTR [rax]
   239b5:	xor    eax,eax
   239b7:	call   c1e0 <__fprintf_chk@plt>
   239bc:	mov    edi,0x1
   239c1:	call   c1a0 <exit@plt>
   239c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   239d0:	lea    rdi,[rip+0xff41]        # 33918 <shutdown_reason_letters.11238+0x5e8>
   239d7:	mov    edx,0x45
   239dc:	mov    esi,0x1
   239e1:	call   c1b0 <fwrite@plt>
   239e6:	mov    rdi,QWORD PTR [r12]
   239ea:	xor    ecx,ecx
   239ec:	mov    edx,0x1
   239f1:	mov    esi,ebx
   239f3:	call   c0f0 <libxl_send_trigger@plt>
   239f8:	mov    ebp,eax
   239fa:	jmp    23921 <shutdown_domain+0x51>
   239ff:	mov    ecx,eax
   23a01:	lea    rdx,[rip+0xffd8]        # 339e0 <shutdown_reason_letters.11238+0x6b0>
   23a08:	jmp    239a6 <shutdown_domain+0xd6>
   23a0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000023a10 <reboot_domain>:
   23a10:	push   r15
   23a12:	push   r14
   23a14:	mov    r15d,ecx
   23a17:	push   r13
   23a19:	push   r12
   23a1b:	mov    ecx,edi
   23a1d:	push   rbp
   23a1e:	push   rbx
   23a1f:	mov    ebx,edi
   23a21:	mov    r14,rdx
   23a24:	lea    rdx,[rip+0xfc6e]        # 33699 <shutdown_reason_letters.11238+0x369>
   23a2b:	mov    r13,rsi
   23a2e:	sub    rsp,0x8
   23a32:	mov    rax,QWORD PTR [rip+0x2175b7]        # 23aff0 <stderr@GLIBC_2.2.5>
   23a39:	mov    esi,0x1
   23a3e:	mov    rdi,QWORD PTR [rax]
   23a41:	xor    eax,eax
   23a43:	call   c1e0 <__fprintf_chk@plt>
   23a48:	lea    r12,[rip+0x219411]        # 23ce60 <ctx>
   23a4f:	mov    esi,ebx
   23a51:	mov    rdi,QWORD PTR [r12]
   23a55:	call   ae30 <libxl_domain_reboot@plt>
   23a5a:	cmp    eax,0xfffffff6
   23a5d:	mov    ebp,eax
   23a5f:	je     23a98 <reboot_domain+0x88>
   23a61:	test   ebp,ebp
   23a63:	jne    23add <reboot_domain+0xcd>
   23a65:	test   r13,r13
   23a68:	je     23a83 <reboot_domain+0x73>
   23a6a:	mov    rdi,QWORD PTR [r12]
   23a6e:	mov    rcx,r13
   23a71:	mov    rdx,r14
   23a74:	mov    esi,ebx
   23a76:	call   ba80 <libxl_evenable_domain_death@plt>
   23a7b:	test   eax,eax
   23a7d:	jne    23b3f <reboot_domain+0x12f>
   23a83:	add    rsp,0x8
   23a87:	pop    rbx
   23a88:	pop    rbp
   23a89:	pop    r12
   23a8b:	pop    r13
   23a8d:	pop    r14
   23a8f:	pop    r15
   23a91:	ret    
   23a92:	nop    WORD PTR [rax+rax*1+0x0]
   23a98:	mov    rax,QWORD PTR [rip+0x217551]        # 23aff0 <stderr@GLIBC_2.2.5>
   23a9f:	test   r15d,r15d
   23aa2:	mov    rcx,QWORD PTR [rax]
   23aa5:	jne    23b10 <reboot_domain+0x100>
   23aa7:	lea    rdi,[rip+0xffa2]        # 33a50 <shutdown_reason_letters.11238+0x720>
   23aae:	mov    edx,0x4b
   23ab3:	mov    esi,0x1
   23ab8:	call   c1b0 <fwrite@plt>
   23abd:	mov    rax,QWORD PTR [rip+0x21752c]        # 23aff0 <stderr@GLIBC_2.2.5>
   23ac4:	lea    rdi,[rip+0xffd5]        # 33aa0 <shutdown_reason_letters.11238+0x770>
   23acb:	mov    edx,0x2a
   23ad0:	mov    esi,0x1
   23ad5:	mov    rcx,QWORD PTR [rax]
   23ad8:	call   c1b0 <fwrite@plt>
   23add:	lea    rdx,[rip+0xfbca]        # 336ae <shutdown_reason_letters.11238+0x37e>
   23ae4:	mov    ecx,ebp
   23ae6:	mov    rax,QWORD PTR [rip+0x217503]        # 23aff0 <stderr@GLIBC_2.2.5>
   23aed:	mov    esi,0x1
   23af2:	mov    rdi,QWORD PTR [rax]
   23af5:	xor    eax,eax
   23af7:	call   c1e0 <__fprintf_chk@plt>
   23afc:	mov    edi,0x1
   23b01:	call   c1a0 <exit@plt>
   23b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   23b10:	lea    rdi,[rip+0xfef1]        # 33a08 <shutdown_reason_letters.11238+0x6d8>
   23b17:	mov    edx,0x45
   23b1c:	mov    esi,0x1
   23b21:	call   c1b0 <fwrite@plt>
   23b26:	mov    rdi,QWORD PTR [r12]
   23b2a:	xor    ecx,ecx
   23b2c:	mov    edx,0x5
   23b31:	mov    esi,ebx
   23b33:	call   c0f0 <libxl_send_trigger@plt>
   23b38:	mov    ebp,eax
   23b3a:	jmp    23a61 <reboot_domain+0x51>
   23b3f:	mov    ecx,eax
   23b41:	lea    rdx,[rip+0xfe98]        # 339e0 <shutdown_reason_letters.11238+0x6b0>
   23b48:	jmp    23ae6 <reboot_domain+0xd6>
   23b4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000023b50 <wait_for_domain_deaths>:
   23b50:	push   r15
   23b52:	push   r14
   23b54:	lea    rcx,[rip+0xfb6a]        # 336c5 <shutdown_reason_letters.11238+0x395>
   23b5b:	push   r13
   23b5d:	push   r12
   23b5f:	mov    r14,rdi
   23b62:	push   rbp
   23b63:	push   rbx
   23b64:	lea    rdx,[rip+0x10905]        # 34470 <__func__.9958>
   23b6b:	lea    rdi,[rip+0xfb6b]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   23b72:	mov    r12d,esi
   23b75:	mov    r8d,esi
   23b78:	sub    rsp,0x18
   23b7c:	mov    esi,0xa8
   23b81:	mov    rax,QWORD PTR fs:0x28
   23b8a:	mov    QWORD PTR [rsp+0x8],rax
   23b8f:	xor    eax,eax
   23b91:	call   e7b0 <dolog>
   23b96:	test   r12d,r12d
   23b99:	jle    23ca0 <wait_for_domain_deaths+0x150>
   23b9f:	xor    ebp,ebp
   23ba1:	mov    r13,rsp
   23ba4:	lea    rbx,[rip+0x2192b5]        # 23ce60 <ctx>
   23bab:	lea    r15,[rip+0xff46]        # 33af8 <shutdown_reason_letters.11238+0x7c8>
   23bb2:	jmp    23c13 <wait_for_domain_deaths+0xc3>
   23bb4:	nop    DWORD PTR [rax+0x0]
   23bb8:	cmp    r8d,0x2
   23bbc:	jne    23c70 <wait_for_domain_deaths+0x120>
   23bc2:	mov    r8d,DWORD PTR [rax+0x10]
   23bc6:	lea    rcx,[rip+0xfb1f]        # 336ec <shutdown_reason_letters.11238+0x3bc>
   23bcd:	lea    rdx,[rip+0x1089c]        # 34470 <__func__.9958>
   23bd4:	lea    rdi,[rip+0xfb02]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   23bdb:	mov    esi,0xb3
   23be0:	xor    eax,eax
   23be2:	call   e7b0 <dolog>
   23be7:	mov    rax,QWORD PTR [rsp]
   23beb:	mov    rdi,QWORD PTR [rbx]
   23bee:	add    ebp,0x1
   23bf1:	mov    rax,QWORD PTR [rax+0x28]
   23bf5:	mov    rsi,QWORD PTR [r14+rax*8]
   23bf9:	call   be70 <libxl_evdisable_domain_death@plt>
   23bfe:	mov    rsi,QWORD PTR [rsp]
   23c02:	mov    rdi,QWORD PTR [rbx]
   23c05:	call   b280 <libxl_event_free@plt>
   23c0a:	cmp    ebp,r12d
   23c0d:	jge    23ca0 <wait_for_domain_deaths+0x150>
   23c13:	mov    rdi,QWORD PTR [rbx]
   23c16:	xor    r8d,r8d
   23c19:	xor    ecx,ecx
   23c1b:	mov    rdx,0xffffffffffffffff
   23c22:	mov    rsi,r13
   23c25:	call   b1a0 <libxl_event_wait@plt>
   23c2a:	test   eax,eax
   23c2c:	jne    23cbf <wait_for_domain_deaths+0x16f>
   23c32:	mov    rax,QWORD PTR [rsp]
   23c36:	mov    r8d,DWORD PTR [rax+0x30]
   23c3a:	cmp    r8d,0x1
   23c3e:	jne    23bb8 <wait_for_domain_deaths+0x68>
   23c44:	movzx  r9d,BYTE PTR [rax+0x38]
   23c49:	mov    r8d,DWORD PTR [rax+0x10]
   23c4d:	lea    rdx,[rip+0x1081c]        # 34470 <__func__.9958>
   23c54:	lea    rdi,[rip+0xfa82]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   23c5b:	mov    rcx,r15
   23c5e:	mov    esi,0xb9
   23c63:	xor    eax,eax
   23c65:	call   e7b0 <dolog>
   23c6a:	jmp    23be7 <wait_for_domain_deaths+0x97>
   23c6f:	nop
   23c70:	lea    rcx,[rip+0xfa93]        # 3370a <shutdown_reason_letters.11238+0x3da>
   23c77:	lea    rdx,[rip+0x107f2]        # 34470 <__func__.9958>
   23c7e:	lea    rdi,[rip+0xfa58]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   23c85:	mov    esi,0xbe
   23c8a:	xor    eax,eax
   23c8c:	call   e7b0 <dolog>
   23c91:	jmp    23bfe <wait_for_domain_deaths+0xae>
   23c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
   23ca0:	mov    rax,QWORD PTR [rsp+0x8]
   23ca5:	xor    rax,QWORD PTR fs:0x28
   23cae:	jne    23ced <wait_for_domain_deaths+0x19d>
   23cb0:	add    rsp,0x18
   23cb4:	pop    rbx
   23cb5:	pop    rbp
   23cb6:	pop    r12
   23cb8:	pop    r13
   23cba:	pop    r14
   23cbc:	pop    r15
   23cbe:	ret    
   23cbf:	lea    rdi,[rip+0xfa17]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   23cc6:	lea    rcx,[rip+0xfe03]        # 33ad0 <shutdown_reason_letters.11238+0x7a0>
   23ccd:	lea    rdx,[rip+0x1079c]        # 34470 <__func__.9958>
   23cd4:	mov    r8d,eax
   23cd7:	mov    esi,0xad
   23cdc:	xor    eax,eax
   23cde:	call   e7b0 <dolog>
   23ce3:	mov    edi,0x1
   23ce8:	call   c1a0 <exit@plt>
   23ced:	call   b130 <__stack_chk_fail@plt>
   23cf2:	nop    DWORD PTR [rax+0x0]
   23cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000023d00 <main_shutdown_or_reboot>:
   23d00:	push   r15
   23d02:	push   r14
   23d04:	push   r13
   23d06:	push   r12
   23d08:	mov    r13d,esi
   23d0b:	push   rbp
   23d0c:	push   rbx
   23d0d:	lea    rbx,[rip+0xb562]        # 2f276 <__func__.10421+0xeee>
   23d14:	mov    rbp,rdx
   23d17:	lea    rdx,[rip+0xfffffffffffffcf2]        # 23a10 <reboot_domain>
   23d1e:	sub    rsp,0x28
   23d22:	mov    rax,QWORD PTR fs:0x28
   23d2b:	mov    QWORD PTR [rsp+0x18],rax
   23d30:	xor    eax,eax
   23d32:	lea    rax,[rip+0x5f3b]        # 29c74 <__PRETTY_FUNCTION__.10113+0x5c>
   23d39:	test   edi,edi
   23d3b:	cmove  rbx,rax
   23d3f:	lea    rax,[rip+0xfffffffffffffb8a]        # 238d0 <shutdown_domain>
   23d46:	cmovne rax,rdx
   23d4a:	xor    r12d,r12d
   23d4d:	xor    r14d,r14d
   23d50:	mov    QWORD PTR [rsp+0x8],rax
   23d55:	xor    r15d,r15d
   23d58:	nop    DWORD PTR [rax+rax*1+0x0]
   23d60:	lea    rcx,[rip+0x218e79]        # 23cbe0 <opts.9985>
   23d67:	lea    rdx,[rip+0xf9b6]        # 33724 <shutdown_reason_letters.11238+0x3f4>
   23d6e:	xor    r9d,r9d
   23d71:	mov    r8,rbx
   23d74:	mov    rsi,rbp
   23d77:	mov    edi,r13d
   23d7a:	call   ebe0 <def_getopt>
   23d7f:	cmp    eax,0xffffffff
   23d82:	je     23dc0 <main_shutdown_or_reboot+0xc0>
   23d84:	cmp    eax,0x61
   23d87:	je     23da0 <main_shutdown_or_reboot+0xa0>
   23d89:	cmp    eax,0x77
   23d8c:	je     23db0 <main_shutdown_or_reboot+0xb0>
   23d8e:	cmp    eax,0x46
   23d91:	mov    eax,0x1
   23d96:	cmove  r12d,eax
   23d9a:	jmp    23d60 <main_shutdown_or_reboot+0x60>
   23d9c:	nop    DWORD PTR [rax+0x0]
   23da0:	mov    r14d,0x1
   23da6:	jmp    23d60 <main_shutdown_or_reboot+0x60>
   23da8:	nop    DWORD PTR [rax+rax*1+0x0]
   23db0:	mov    r15d,0x1
   23db6:	jmp    23d60 <main_shutdown_or_reboot+0x60>
   23db8:	nop    DWORD PTR [rax+rax*1+0x0]
   23dc0:	mov    rax,QWORD PTR [rip+0x2171e1]        # 23afa8 <optind@GLIBC_2.2.5>
   23dc7:	movsxd rax,DWORD PTR [rax]
   23dca:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   23dcf:	test   rdi,rdi
   23dd2:	je     23e40 <main_shutdown_or_reboot+0x140>
   23dd4:	test   r14d,r14d
   23dd7:	jne    23e49 <main_shutdown_or_reboot+0x149>
   23dd9:	mov    QWORD PTR [rsp+0x10],0x0
   23de2:	call   eb40 <find_domain>
   23de7:	test   r15d,r15d
   23dea:	je     23f00 <main_shutdown_or_reboot+0x200>
   23df0:	lea    rbx,[rsp+0x10]
   23df5:	mov    edi,eax
   23df7:	mov    ecx,r12d
   23dfa:	xor    edx,edx
   23dfc:	mov    rax,QWORD PTR [rsp+0x8]
   23e01:	mov    rsi,rbx
   23e04:	call   rax
   23e06:	mov    esi,0x1
   23e0b:	mov    rdi,rbx
   23e0e:	call   23b50 <wait_for_domain_deaths>
   23e13:	mov    rcx,QWORD PTR [rsp+0x18]
   23e18:	xor    rcx,QWORD PTR fs:0x28
   23e21:	mov    eax,r14d
   23e24:	jne    23f9b <main_shutdown_or_reboot+0x29b>
   23e2a:	add    rsp,0x28
   23e2e:	pop    rbx
   23e2f:	pop    rbp
   23e30:	pop    r12
   23e32:	pop    r13
   23e34:	pop    r14
   23e36:	pop    r15
   23e38:	ret    
   23e39:	nop    DWORD PTR [rax+0x0]
   23e40:	test   r14d,r14d
   23e43:	je     23f18 <main_shutdown_or_reboot+0x218>
   23e49:	lea    rax,[rip+0x219010]        # 23ce60 <ctx>
   23e50:	lea    rsi,[rsp+0x10]
   23e55:	mov    rdi,QWORD PTR [rax]
   23e58:	call   b830 <libxl_list_domain@plt>
   23e5d:	test   rax,rax
   23e60:	mov    r13,rax
   23e63:	je     23f70 <main_shutdown_or_reboot+0x270>
   23e69:	test   r15d,r15d
   23e6c:	mov    esi,DWORD PTR [rsp+0x10]
   23e70:	jne    23f48 <main_shutdown_or_reboot+0x248>
   23e76:	xor    r15d,r15d
   23e79:	test   esi,esi
   23e7b:	jle    23eeb <main_shutdown_or_reboot+0x1eb>
   23e7d:	lea    rbp,[r13+0x10]
   23e81:	xor    ebx,ebx
   23e83:	xor    r14d,r14d
   23e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
   23e90:	mov    edi,DWORD PTR [rbp+0x0]
   23e93:	test   edi,edi
   23e95:	je     23ebe <main_shutdown_or_reboot+0x1be>
   23e97:	cmp    BYTE PTR [rbp+0x15],0x0
   23e9b:	jne    23ebe <main_shutdown_or_reboot+0x1be>
   23e9d:	lea    rsi,[r15+rbx*8]
   23ea1:	test   r15,r15
   23ea4:	mov    eax,0x0
   23ea9:	mov    ecx,r12d
   23eac:	mov    rdx,rbx
   23eaf:	cmove  rsi,rax
   23eb3:	add    r14d,0x1
   23eb7:	mov    rax,QWORD PTR [rsp+0x8]
   23ebc:	call   rax
   23ebe:	lea    edx,[rbx+0x1]
   23ec1:	add    rbp,0x70
   23ec5:	add    rbx,0x1
   23ec9:	cmp    DWORD PTR [rsp+0x10],edx
   23ecd:	jg     23e90 <main_shutdown_or_reboot+0x190>
   23ecf:	test   r15,r15
   23ed2:	je     23ee7 <main_shutdown_or_reboot+0x1e7>
   23ed4:	mov    rdi,r15
   23ed7:	mov    esi,r14d
   23eda:	call   23b50 <wait_for_domain_deaths>
   23edf:	mov    rdi,r15
   23ee2:	call   ac40 <free@plt>
   23ee7:	mov    esi,DWORD PTR [rsp+0x10]
   23eeb:	mov    rdi,r13
   23eee:	xor    r14d,r14d
   23ef1:	call   b0e0 <libxl_dominfo_list_free@plt>
   23ef6:	jmp    23e13 <main_shutdown_or_reboot+0x113>
   23efb:	nop    DWORD PTR [rax+rax*1+0x0]
   23f00:	mov    edi,eax
   23f02:	mov    ecx,r12d
   23f05:	xor    edx,edx
   23f07:	xor    esi,esi
   23f09:	mov    rax,QWORD PTR [rsp+0x8]
   23f0e:	call   rax
   23f10:	jmp    23e13 <main_shutdown_or_reboot+0x113>
   23f15:	nop    DWORD PTR [rax]
   23f18:	mov    rax,QWORD PTR [rip+0x2170d1]        # 23aff0 <stderr@GLIBC_2.2.5>
   23f1f:	lea    rdi,[rip+0xa9f2]        # 2e918 <__func__.10421+0x590>
   23f26:	mov    edx,0x25
   23f2b:	mov    esi,0x1
   23f30:	mov    r14d,0x1
   23f36:	mov    rcx,QWORD PTR [rax]
   23f39:	call   c1b0 <fwrite@plt>
   23f3e:	jmp    23e13 <main_shutdown_or_reboot+0x113>
   23f43:	nop    DWORD PTR [rax+rax*1+0x0]
   23f48:	movsxd rdi,esi
   23f4b:	mov    esi,0x8
   23f50:	call   b5f0 <calloc@plt>
   23f55:	mov    r15,rax
   23f58:	mov    eax,DWORD PTR [rsp+0x10]
   23f5c:	test   eax,eax
   23f5e:	jg     23e7d <main_shutdown_or_reboot+0x17d>
   23f64:	xor    r14d,r14d
   23f67:	jmp    23ecf <main_shutdown_or_reboot+0x1cf>
   23f6c:	nop    DWORD PTR [rax+0x0]
   23f70:	mov    rax,QWORD PTR [rip+0x217079]        # 23aff0 <stderr@GLIBC_2.2.5>
   23f77:	lea    rdi,[rip+0xdc32]        # 31bb0 <__PRETTY_FUNCTION__.10016+0xb20>
   23f7e:	mov    edx,0x1a
   23f83:	mov    esi,0x1
   23f88:	mov    r14d,0x1
   23f8e:	mov    rcx,QWORD PTR [rax]
   23f91:	call   c1b0 <fwrite@plt>
   23f96:	jmp    23e13 <main_shutdown_or_reboot+0x113>
   23f9b:	call   b130 <__stack_chk_fail@plt>

0000000000023fa0 <reload_domain_config>:
   23fa0:	push   r13
   23fa2:	push   r12
   23fa4:	mov    r12d,edi
   23fa7:	push   rbp
   23fa8:	push   rbx
   23fa9:	mov    rbx,rsi
   23fac:	mov    esi,edi
   23fae:	lea    rdx,[rip+0x58af]        # 29864 <_IO_stdin_used+0x124>
   23fb5:	sub    rsp,0x4d8
   23fbc:	lea    rbp,[rip+0x218e9d]        # 23ce60 <ctx>
   23fc3:	lea    rcx,[rsp+0x8]
   23fc8:	lea    r8,[rsp+0x4]
   23fcd:	mov    rax,QWORD PTR fs:0x28
   23fd6:	mov    QWORD PTR [rsp+0x4c8],rax
   23fde:	xor    eax,eax
   23fe0:	mov    rdi,QWORD PTR [rbp+0x0]
   23fe4:	call   ad20 <libxl_userdata_retrieve@plt>
   23fe9:	test   eax,eax
   23feb:	je     23ffb <reload_domain_config+0x5b>
   23fed:	call   ad80 <__errno_location@plt>
   23ff2:	cmp    DWORD PTR [rax],0x2
   23ff5:	jne    24098 <reload_domain_config+0xf8>
   23ffb:	mov    eax,DWORD PTR [rsp+0x4]
   23fff:	test   eax,eax
   24001:	jle    240c5 <reload_domain_config+0x125>
   24007:	lea    rcx,[rip+0xfb4a]        # 33b58 <shutdown_reason_letters.11238+0x828>
   2400e:	lea    rdx,[rip+0x103db]        # 343f0 <__func__.10045>
   24015:	lea    rdi,[rip+0xf6c1]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   2401c:	xor    eax,eax
   2401e:	mov    esi,0x171
   24023:	call   e7b0 <dolog>
   24028:	mov    rdi,rbx
   2402b:	call   bb40 <libxl_domain_config_dispose@plt>
   24030:	mov    rdi,rbx
   24033:	call   b6e0 <libxl_domain_config_init@plt>
   24038:	mov    edx,DWORD PTR [rsp+0x4]
   2403c:	mov    rsi,QWORD PTR [rsp+0x8]
   24041:	lea    rdi,[rip+0xf6e1]        # 33729 <shutdown_reason_letters.11238+0x3f9>
   24048:	mov    rcx,rbx
   2404b:	call   140f0 <parse_config_data>
   24050:	mov    rdi,QWORD PTR [rsp+0x8]
   24055:	call   ac40 <free@plt>
   2405a:	mov    rdi,QWORD PTR [rbp+0x0]
   2405e:	lea    rdx,[rip+0x57ff]        # 29864 <_IO_stdin_used+0x124>
   24065:	mov    esi,r12d
   24068:	call   b800 <libxl_userdata_unlink@plt>
   2406d:	mov    rax,QWORD PTR [rsp+0x4c8]
   24075:	xor    rax,QWORD PTR fs:0x28
   2407e:	jne    2413b <reload_domain_config+0x19b>
   24084:	add    rsp,0x4d8
   2408b:	pop    rbx
   2408c:	pop    rbp
   2408d:	pop    r12
   2408f:	pop    r13
   24091:	ret    
   24092:	nop    WORD PTR [rax+rax*1+0x0]
   24098:	lea    rcx,[rip+0xfa89]        # 33b28 <shutdown_reason_letters.11238+0x7f8>
   2409f:	lea    rdx,[rip+0x1034a]        # 343f0 <__func__.10045>
   240a6:	lea    rdi,[rip+0xf630]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   240ad:	xor    eax,eax
   240af:	mov    esi,0x16e
   240b4:	call   e7b0 <dolog>
   240b9:	mov    eax,DWORD PTR [rsp+0x4]
   240bd:	test   eax,eax
   240bf:	jg     24007 <reload_domain_config+0x67>
   240c5:	lea    r13,[rsp+0x10]
   240ca:	mov    rdi,r13
   240cd:	call   b6e0 <libxl_domain_config_init@plt>
   240d2:	mov    rdi,QWORD PTR [rbp+0x0]
   240d6:	mov    rdx,r13
   240d9:	mov    esi,r12d
   240dc:	call   c430 <libxl_retrieve_domain_configuration@plt>
   240e1:	test   eax,eax
   240e3:	je     24120 <reload_domain_config+0x180>
   240e5:	lea    rcx,[rip+0xfa94]        # 33b80 <shutdown_reason_letters.11238+0x850>
   240ec:	lea    rdx,[rip+0x102fd]        # 343f0 <__func__.10045>
   240f3:	lea    rdi,[rip+0xf5e3]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   240fa:	mov    r8d,eax
   240fd:	mov    esi,0x17f
   24102:	xor    eax,eax
   24104:	call   e7b0 <dolog>
   24109:	mov    rdi,r13
   2410c:	call   bb40 <libxl_domain_config_dispose@plt>
   24111:	jmp    2406d <reload_domain_config+0xcd>
   24116:	nop    WORD PTR cs:[rax+rax*1+0x0]
   24120:	mov    rdi,rbx
   24123:	call   bb40 <libxl_domain_config_dispose@plt>
   24128:	mov    ecx,0x97
   2412d:	mov    rdi,rbx
   24130:	mov    rsi,r13
   24133:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   24136:	jmp    2406d <reload_domain_config+0xcd>
   2413b:	call   b130 <__stack_chk_fail@plt>

0000000000024140 <console_child_report>:
   24140:	push   rbx
   24141:	mov    ebx,edi
   24143:	call   d340 <xl_child_pid>
   24148:	test   eax,eax
   2414a:	jne    24150 <console_child_report+0x10>
   2414c:	pop    rbx
   2414d:	ret    
   2414e:	xchg   ax,ax
   24150:	mov    edi,ebx
   24152:	pop    rbx
   24153:	jmp    d440 <child_report>
   24158:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000024160 <autoconnect_console>:
   24160:	push   r12
   24162:	lea    r12,[rip+0x218cf7]        # 23ce60 <ctx>
   24169:	push   rbp
   2416a:	push   rbx
   2416b:	mov    ebx,DWORD PTR [rsi+0x10]
   2416e:	mov    ebp,DWORD PTR [rdx]
   24170:	mov    rdi,QWORD PTR [r12]
   24174:	call   b280 <libxl_event_free@plt>
   24179:	xor    edi,edi
   2417b:	call   24140 <console_child_report>
   24180:	lea    rsi,[rip+0xf5ac]        # 33733 <shutdown_reason_letters.11238+0x403>
   24187:	xor    edi,edi
   24189:	call   d1c0 <xl_fork>
   2418e:	test   eax,eax
   24190:	je     24197 <autoconnect_console+0x37>
   24192:	pop    rbx
   24193:	pop    rbp
   24194:	pop    r12
   24196:	ret    
   24197:	call   d420 <postfork>
   2419c:	mov    edi,0x1
   241a1:	call   c420 <sleep@plt>
   241a6:	mov    rdi,QWORD PTR [r12]
   241aa:	mov    edx,ebp
   241ac:	mov    esi,ebx
   241ae:	call   c400 <libxl_primary_console_exec@plt>
   241b3:	lea    rdi,[rip+0xfa16]        # 33bd0 <shutdown_reason_letters.11238+0x8a0>
   241ba:	call   bfd0 <perror@plt>
   241bf:	mov    edi,0x1
   241c4:	call   adf0 <_exit@plt>
   241c9:	nop    DWORD PTR [rax+0x0]

00000000000241d0 <evdisable_disk_ejects>:
   241d0:	test   esi,esi
   241d2:	jle    24220 <evdisable_disk_ejects+0x50>
   241d4:	lea    eax,[rsi-0x1]
   241d7:	push   rbp
   241d8:	push   rbx
   241d9:	mov    rbx,rdi
   241dc:	lea    rbp,[rdi+rax*8+0x8]
   241e1:	sub    rsp,0x8
   241e5:	nop    DWORD PTR [rax]
   241e8:	mov    rsi,QWORD PTR [rbx]
   241eb:	test   rsi,rsi
   241ee:	je     241ff <evdisable_disk_ejects+0x2f>
   241f0:	lea    rax,[rip+0x218c69]        # 23ce60 <ctx>
   241f7:	mov    rdi,QWORD PTR [rax]
   241fa:	call   b940 <libxl_evdisable_disk_eject@plt>
   241ff:	mov    QWORD PTR [rbx],0x0
   24206:	add    rbx,0x8
   2420a:	cmp    rbx,rbp
   2420d:	jne    241e8 <evdisable_disk_ejects+0x18>
   2420f:	add    rsp,0x8
   24213:	pop    rbx
   24214:	pop    rbp
   24215:	ret    
   24216:	nop    WORD PTR cs:[rax+rax*1+0x0]
   24220:	repz ret 
   24222:	nop    DWORD PTR [rax+0x0]
   24226:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000024230 <release_lock.part.1>:
   24230:	push   rbx
   24231:	sub    rsp,0x30
   24235:	mov    rax,QWORD PTR fs:0x28
   2423e:	mov    QWORD PTR [rsp+0x28],rax
   24243:	xor    eax,eax
   24245:	mov    rbx,rsp
   24248:	jmp    2425e <release_lock.part.1+0x2e>
   2424a:	nop    WORD PTR [rax+rax*1+0x0]
   24250:	call   ad80 <__errno_location@plt>
   24255:	mov    r8d,DWORD PTR [rax]
   24258:	cmp    r8d,0x4
   2425c:	jne    242c0 <release_lock.part.1+0x90>
   2425e:	mov    edi,DWORD PTR [rip+0x21885c]        # 23cac0 <fd_lock>
   24264:	xor    eax,eax
   24266:	mov    rdx,rbx
   24269:	mov    esi,0x7
   2426e:	mov    DWORD PTR [rsp],0x2
   24275:	mov    QWORD PTR [rsp+0x8],0x0
   2427e:	mov    QWORD PTR [rsp+0x10],0x0
   24287:	call   af60 <fcntl@plt>
   2428c:	test   eax,eax
   2428e:	js     24250 <release_lock.part.1+0x20>
   24290:	xor    ebx,ebx
   24292:	mov    edi,DWORD PTR [rip+0x218828]        # 23cac0 <fd_lock>
   24298:	call   b4a0 <close@plt>
   2429d:	mov    rcx,QWORD PTR [rsp+0x28]
   242a2:	xor    rcx,QWORD PTR fs:0x28
   242ab:	mov    DWORD PTR [rip+0x21880b],0xffffffff        # 23cac0 <fd_lock>
   242b5:	mov    eax,ebx
   242b7:	jne    242ee <release_lock.part.1+0xbe>
   242b9:	add    rsp,0x30
   242bd:	pop    rbx
   242be:	ret    
   242bf:	nop
   242c0:	lea    rax,[rip+0x218bd1]        # 23ce98 <lockfile>
   242c7:	lea    rdx,[rip+0xf92a]        # 33bf8 <shutdown_reason_letters.11238+0x8c8>
   242ce:	mov    esi,0x1
   242d3:	mov    ebx,0xfffffffd
   242d8:	mov    rcx,QWORD PTR [rax]
   242db:	mov    rax,QWORD PTR [rip+0x216d0e]        # 23aff0 <stderr@GLIBC_2.2.5>
   242e2:	mov    rdi,QWORD PTR [rax]
   242e5:	xor    eax,eax
   242e7:	call   c1e0 <__fprintf_chk@plt>
   242ec:	jmp    24292 <release_lock.part.1+0x62>
   242ee:	call   b130 <__stack_chk_fail@plt>
   242f3:	nop    DWORD PTR [rax]
   242f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000024300 <main_pause>:
   24300:	push   r12
   24302:	push   rbp
   24303:	lea    rbp,[rip+0x5a40]        # 29d4a <__PRETTY_FUNCTION__.10113+0x132>
   2430a:	push   rbx
   2430b:	mov    r12d,edi
   2430e:	mov    rbx,rsi
   24311:	nop    DWORD PTR [rax+0x0]
   24318:	lea    rdx,[rip+0xd423]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2431f:	xor    ecx,ecx
   24321:	mov    r9d,0x1
   24327:	mov    r8,rbp
   2432a:	mov    rsi,rbx
   2432d:	mov    edi,r12d
   24330:	call   ebe0 <def_getopt>
   24335:	cmp    eax,0xffffffff
   24338:	jne    24318 <main_pause+0x18>
   2433a:	mov    rax,QWORD PTR [rip+0x216c67]        # 23afa8 <optind@GLIBC_2.2.5>
   24341:	movsxd rax,DWORD PTR [rax]
   24344:	mov    rdi,QWORD PTR [rbx+rax*8]
   24348:	call   eb40 <find_domain>
   2434d:	mov    esi,eax
   2434f:	lea    rax,[rip+0x218b0a]        # 23ce60 <ctx>
   24356:	mov    rdi,QWORD PTR [rax]
   24359:	call   bf60 <libxl_domain_pause@plt>
   2435e:	pop    rbx
   2435f:	xor    eax,eax
   24361:	pop    rbp
   24362:	pop    r12
   24364:	ret    
   24365:	nop
   24366:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000024370 <main_unpause>:
   24370:	push   r12
   24372:	push   rbp
   24373:	lea    rbp,[rip+0x59ce]        # 29d48 <__PRETTY_FUNCTION__.10113+0x130>
   2437a:	push   rbx
   2437b:	mov    r12d,edi
   2437e:	mov    rbx,rsi
   24381:	nop    DWORD PTR [rax+0x0]
   24388:	lea    rdx,[rip+0xd3b3]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   2438f:	xor    ecx,ecx
   24391:	mov    r9d,0x1
   24397:	mov    r8,rbp
   2439a:	mov    rsi,rbx
   2439d:	mov    edi,r12d
   243a0:	call   ebe0 <def_getopt>
   243a5:	cmp    eax,0xffffffff
   243a8:	jne    24388 <main_unpause+0x18>
   243aa:	mov    rax,QWORD PTR [rip+0x216bf7]        # 23afa8 <optind@GLIBC_2.2.5>
   243b1:	movsxd rax,DWORD PTR [rax]
   243b4:	mov    rdi,QWORD PTR [rbx+rax*8]
   243b8:	call   eb40 <find_domain>
   243bd:	mov    esi,eax
   243bf:	lea    rax,[rip+0x218a9a]        # 23ce60 <ctx>
   243c6:	mov    rdi,QWORD PTR [rax]
   243c9:	call   b460 <libxl_domain_unpause@plt>
   243ce:	pop    rbx
   243cf:	xor    eax,eax
   243d1:	pop    rbp
   243d2:	pop    r12
   243d4:	ret    
   243d5:	nop
   243d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000243e0 <main_destroy>:
   243e0:	push   r13
   243e2:	push   r12
   243e4:	mov    r13d,edi
   243e7:	push   rbp
   243e8:	push   rbx
   243e9:	mov    rbp,rsi
   243ec:	xor    ebx,ebx
   243ee:	lea    r12,[rip+0x5e4d]        # 2a242 <__PRETTY_FUNCTION__.10113+0x62a>
   243f5:	sub    rsp,0x8
   243f9:	jmp    2440b <main_destroy+0x2b>
   243fb:	nop    DWORD PTR [rax+rax*1+0x0]
   24400:	cmp    eax,0x66
   24403:	mov    eax,0x1
   24408:	cmove  ebx,eax
   2440b:	lea    rdx,[rip+0xde2a]        # 3223c <__PRETTY_FUNCTION__.10016+0x11ac>
   24412:	xor    ecx,ecx
   24414:	mov    r9d,0x1
   2441a:	mov    r8,r12
   2441d:	mov    rsi,rbp
   24420:	mov    edi,r13d
   24423:	call   ebe0 <def_getopt>
   24428:	cmp    eax,0xffffffff
   2442b:	jne    24400 <main_destroy+0x20>
   2442d:	mov    rax,QWORD PTR [rip+0x216b74]        # 23afa8 <optind@GLIBC_2.2.5>
   24434:	movsxd rax,DWORD PTR [rax]
   24437:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   2443c:	call   eb40 <find_domain>
   24441:	or     ebx,eax
   24443:	je     24469 <main_destroy+0x89>
   24445:	mov    esi,eax
   24447:	lea    rax,[rip+0x218a12]        # 23ce60 <ctx>
   2444e:	xor    edx,edx
   24450:	mov    rdi,QWORD PTR [rax]
   24453:	call   aed0 <libxl_domain_destroy@plt>
   24458:	test   eax,eax
   2445a:	jne    24493 <main_destroy+0xb3>
   2445c:	add    rsp,0x8
   24460:	xor    eax,eax
   24462:	pop    rbx
   24463:	pop    rbp
   24464:	pop    r12
   24466:	pop    r13
   24468:	ret    
   24469:	mov    rax,QWORD PTR [rip+0x216b80]        # 23aff0 <stderr@GLIBC_2.2.5>
   24470:	lea    rdi,[rip+0xf7a9]        # 33c20 <shutdown_reason_letters.11238+0x8f0>
   24477:	mov    edx,0x7b
   2447c:	mov    esi,0x1
   24481:	mov    rcx,QWORD PTR [rax]
   24484:	call   c1b0 <fwrite@plt>
   24489:	mov    edi,0x1
   2448e:	call   c1a0 <exit@plt>
   24493:	mov    ecx,eax
   24495:	mov    rax,QWORD PTR [rip+0x216b54]        # 23aff0 <stderr@GLIBC_2.2.5>
   2449c:	lea    rdx,[rip+0xf29e]        # 33741 <shutdown_reason_letters.11238+0x411>
   244a3:	mov    esi,0x1
   244a8:	mov    rdi,QWORD PTR [rax]
   244ab:	xor    eax,eax
   244ad:	call   c1e0 <__fprintf_chk@plt>
   244b2:	mov    edi,0x1
   244b7:	call   c1a0 <exit@plt>
   244bc:	nop    DWORD PTR [rax+0x0]

00000000000244c0 <main_shutdown>:
   244c0:	mov    rdx,rsi
   244c3:	mov    esi,edi
   244c5:	xor    edi,edi
   244c7:	jmp    23d00 <main_shutdown_or_reboot>
   244cc:	nop    DWORD PTR [rax+0x0]

00000000000244d0 <main_reboot>:
   244d0:	mov    rdx,rsi
   244d3:	mov    esi,edi
   244d5:	mov    edi,0x1
   244da:	jmp    23d00 <main_shutdown_or_reboot>
   244df:	nop

00000000000244e0 <create_domain>:
   244e0:	push   r15
   244e2:	push   r14
   244e4:	mov    r14,0xffffffffffffffff
   244eb:	push   r13
   244ed:	push   r12
   244ef:	push   rbp
   244f0:	push   rbx
   244f1:	mov    rbx,rdi
   244f4:	sub    rsp,0x618
   244fb:	mov    r12d,DWORD PTR [rdi+0x54]
   244ff:	mov    r15d,DWORD PTR [rdi+0xc]
   24503:	mov    rax,QWORD PTR fs:0x28
   2450c:	mov    QWORD PTR [rsp+0x608],rax
   24514:	xor    eax,eax
   24516:	mov    eax,DWORD PTR [rdi]
   24518:	mov    DWORD PTR [rsp+0x68],0xffffffff
   24520:	mov    ebp,r12d
   24523:	mov    QWORD PTR [rsp+0x70],0x0
   2452c:	mov    QWORD PTR [rsp+0x78],0x0
   24535:	not    ebp
   24537:	mov    DWORD PTR [rsp+0x6c],0x0
   2453f:	mov    QWORD PTR [rsp+0xe8],r14
   24547:	mov    DWORD PTR [rsp+0x28],eax
   2454b:	mov    eax,DWORD PTR [rdi+0x4]
   2454e:	mov    DWORD PTR [rsp+0x20],eax
   24552:	mov    eax,DWORD PTR [rdi+0x8]
   24555:	mov    DWORD PTR [rsp+0x34],eax
   24559:	mov    eax,DWORD PTR [rdi+0x1c]
   2455c:	mov    DWORD PTR [rsp+0x44],eax
   24560:	mov    rax,QWORD PTR [rdi+0x30]
   24564:	mov    QWORD PTR [rsp+0x18],rax
   24569:	mov    rax,QWORD PTR [rdi+0x38]
   2456d:	mov    QWORD PTR [rsp+0x38],rax
   24572:	mov    rax,QWORD PTR [rdi+0x40]
   24576:	test   rax,rax
   24579:	mov    QWORD PTR [rsp+0x10],rax
   2457e:	setne  al
   24581:	shr    ebp,0x1f
   24584:	or     ebp,eax
   24586:	lea    rax,[rsp+0x130]
   2458e:	mov    rdi,rax
   24591:	mov    QWORD PTR [rsp+0x8],rax
   24596:	call   b6e0 <libxl_domain_config_init@plt>
   2459b:	test   bpl,bpl
   2459e:	je     24690 <create_domain+0x1b0>
   245a4:	test   r12d,r12d
   245a7:	js     24e18 <create_domain+0x938>
   245ad:	mov    eax,DWORD PTR [rbx+0x58]
   245b0:	lea    r13,[rip+0x2188a9]        # 23ce60 <ctx>
   245b7:	mov    DWORD PTR [rsp+0x30],r12d
   245bc:	mov    DWORD PTR [rsp+0x24],r14d
   245c1:	mov    DWORD PTR [rsp+0x40],eax
   245c5:	lea    rax,[rip+0xf18d]        # 33759 <shutdown_reason_letters.11238+0x429>
   245cc:	mov    QWORD PTR [rsp+0x10],rax
   245d1:	lea    r14,[rsp+0x100]
   245d9:	mov    r8,QWORD PTR [rsp+0x10]
   245de:	mov    esi,DWORD PTR [rsp+0x30]
   245e2:	mov    rdi,QWORD PTR [r13+0x0]
   245e6:	lea    r9,[rip+0xf1bd]        # 337aa <shutdown_reason_letters.11238+0x47a>
   245ed:	mov    ecx,0x30
   245f2:	mov    rdx,r14
   245f5:	call   bba0 <libxl_read_exactly@plt>
   245fa:	test   eax,eax
   245fc:	js     25eb8 <create_domain+0x19d8>
   24602:	jne    25ebd <create_domain+0x19dd>
   24608:	mov    rax,QWORD PTR [r14]
   2460b:	mov    rdx,QWORD PTR [r14+0x8]
   2460f:	xor    rax,QWORD PTR [rip+0xfe8a]        # 344a0 <savefileheader_magic>
   24616:	xor    rdx,QWORD PTR [rip+0xfe8b]        # 344a8 <savefileheader_magic+0x8>
   2461d:	or     rdx,rax
   24620:	jne    24641 <create_domain+0x161>
   24622:	mov    rax,QWORD PTR [r14+0x10]
   24626:	mov    rdx,QWORD PTR [r14+0x18]
   2462a:	xor    rax,QWORD PTR [rip+0xfe7f]        # 344b0 <savefileheader_magic+0x10>
   24631:	xor    rdx,QWORD PTR [rip+0xfe80]        # 344b8 <savefileheader_magic+0x18>
   24638:	or     rdx,rax
   2463b:	je     24e70 <create_domain+0x990>
   24641:	mov    r14,QWORD PTR [rip+0x2169a8]        # 23aff0 <stderr@GLIBC_2.2.5>
   24648:	mov    eax,0x1
   2464d:	test   eax,eax
   2464f:	mov    rdi,QWORD PTR [r14]
   24652:	jne    24e84 <create_domain+0x9a4>
   24658:	cmp    DWORD PTR [rsp+0x120],0x1020304
   24663:	je     24ee8 <create_domain+0xa08>
   24669:	mov    rcx,rdi
   2466c:	lea    rdi,[rip+0xf13e]        # 337b1 <shutdown_reason_letters.11238+0x481>
   24673:	mov    edx,0x1a
   24678:	mov    esi,0x1
   2467d:	mov    r15d,0xfffffffa
   24683:	call   c1b0 <fwrite@plt>
   24688:	jmp    248fa <create_domain+0x41a>
   2468d:	nop    DWORD PTR [rax]
   24690:	mov    DWORD PTR [rsp+0x40],r14d
   24695:	mov    DWORD PTR [rsp+0x24],r14d
   2469a:	mov    DWORD PTR [rsp+0x30],r14d
   2469f:	mov    r14,QWORD PTR [rsp+0x18]
   246a4:	mov    rdi,QWORD PTR [rsp+0x78]
   246a9:	test   r14,r14
   246ac:	je     24930 <create_domain+0x450>
   246b2:	call   ac40 <free@plt>
   246b7:	lea    rdi,[rip+0x102f6]        # 349b4 <savefileheader_magic+0x514>
   246be:	mov    QWORD PTR [rsp+0x78],0x0
   246c7:	mov    ecx,0xa
   246cc:	mov    rsi,r14
   246cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   246d1:	seta   al
   246d4:	sbb    al,0x0
   246d6:	test   al,al
   246d8:	jne    25010 <create_domain+0xb30>
   246de:	mov    DWORD PTR [rsp+0x6c],0x0
   246e6:	test   bpl,bpl
   246e9:	jne    24754 <create_domain+0x274>
   246eb:	mov    rdi,QWORD PTR [rsp+0x38]
   246f0:	test   rdi,rdi
   246f3:	je     24754 <create_domain+0x274>
   246f5:	cmp    BYTE PTR [rdi],0x0
   246f8:	je     24754 <create_domain+0x274>
   246fa:	movsxd r13,DWORD PTR [rsp+0x6c]
   246ff:	call   b0c0 <strlen@plt>
   24704:	mov    edx,0x7ffffffc
   24709:	sub    rdx,rax
   2470c:	cmp    r13,rdx
   2470f:	ja     25e4b <create_domain+0x196b>
   24715:	mov    rdi,QWORD PTR [rsp+0x78]
   2471a:	lea    rsi,[r13+rax*1+0x3]
   2471f:	call   ea30 <xrealloc>
   24724:	movsxd rdi,DWORD PTR [rsp+0x6c]
   24729:	mov    r8,QWORD PTR [rsp+0x38]
   2472e:	lea    rcx,[rip+0x5089]        # 297be <_IO_stdin_used+0x7e>
   24735:	mov    QWORD PTR [rsp+0x78],rax
   2473a:	mov    rdx,0xffffffffffffffff
   24741:	mov    esi,0x1
   24746:	add    rdi,rax
   24749:	xor    eax,eax
   2474b:	call   c530 <__sprintf_chk@plt>
   24750:	add    DWORD PTR [rsp+0x6c],eax
   24754:	mov    eax,DWORD PTR [rbx+0x14]
   24757:	test   eax,eax
   24759:	je     253e8 <create_domain+0xf08>
   2475f:	mov    rdi,QWORD PTR [rsp+0x78]
   24764:	mov    rcx,QWORD PTR [rsp+0x8]
   24769:	mov    rsi,rdi
   2476c:	mov    edx,DWORD PTR [rsp+0x6c]
   24770:	mov    rdi,QWORD PTR [rsp+0x18]
   24775:	call   140f0 <parse_config_data>
   2477a:	mov    ecx,DWORD PTR [rbx+0x28]
   2477d:	test   ecx,ecx
   2477f:	je     2497d <create_domain+0x49d>
   24785:	test   r12d,r12d
   24788:	js     247e3 <create_domain+0x303>
   2478a:	mov    rdx,QWORD PTR [rsp+0x148]
   24792:	test   rdx,rdx
   24795:	je     247e3 <create_domain+0x303>
   24797:	lea    rax,[rip+0x2186ca]        # 23ce68 <common_domname>
   2479e:	cmp    QWORD PTR [rax],0x0
   247a2:	jne    25f07 <create_domain+0x1a27>
   247a8:	mov    QWORD PTR [rax],rdx
   247ab:	mov    rax,QWORD PTR [rsp+0x8]
   247b0:	lea    rsi,[rip+0xf05a]        # 33811 <shutdown_reason_letters.11238+0x4e1>
   247b7:	mov    QWORD PTR [rsp+0x148],0x0
   247c3:	lea    rdi,[rax+0x18]
   247c7:	xor    eax,eax
   247c9:	call   e8e0 <xasprintf>
   247ce:	mov    r12,QWORD PTR [rbx+0x60]
   247d2:	mov    rdi,QWORD PTR [rsp+0x148]
   247da:	call   c360 <strdup@plt>
   247df:	mov    QWORD PTR [r12],rax
   247e3:	mov    edx,DWORD PTR [rsp+0x28]
   247e7:	mov    eax,DWORD PTR [rbx+0x10]
   247ea:	test   edx,edx
   247ec:	je     249a8 <create_domain+0x4c8>
   247f2:	test   eax,eax
   247f4:	je     24eb0 <create_domain+0x9d0>
   247fa:	mov    rax,QWORD PTR [rip+0x21679f]        # 23afa0 <stdout@GLIBC_2.2.5>
   24801:	mov    r12,QWORD PTR [rax]
   24804:	lea    rax,[rip+0x218601]        # 23ce0c <default_output_format>
   2480b:	cmp    DWORD PTR [rax],0x1
   2480e:	je     24eca <create_domain+0x9ea>
   24814:	lea    r13,[rip+0x218645]        # 23ce60 <ctx>
   2481b:	mov    rsi,QWORD PTR [rsp+0x8]
   24820:	mov    rdi,QWORD PTR [r13+0x0]
   24824:	call   bdc0 <libxl_domain_config_to_json@plt>
   24829:	test   rax,rax
   2482c:	mov    r13,rax
   2482f:	je     25f88 <create_domain+0x1aa8>
   24835:	mov    rsi,r12
   24838:	mov    rdi,rax
   2483b:	call   b300 <fputs@plt>
   24840:	mov    rdi,r13
   24843:	call   ac40 <free@plt>
   24848:	mov    rdi,r12
   2484b:	call   ead0 <flush_stream>
   24850:	mov    eax,DWORD PTR [rbx+0x10]
   24853:	test   eax,eax
   24855:	je     249b0 <create_domain+0x4d0>
   2485b:	mov    r15d,DWORD PTR [rsp+0x20]
   24860:	test   r15d,r15d
   24863:	sete   bl
   24866:	xor    r15d,r15d
   24869:	mov    eax,DWORD PTR [rsp+0x24]
   2486d:	test   eax,eax
   2486f:	js     259d0 <create_domain+0x14f0>
   24875:	mov    edi,eax
   24877:	xor    r12d,r12d
   2487a:	call   b4a0 <close@plt>
   2487f:	test   eax,eax
   24881:	jne    250d0 <create_domain+0xbf0>
   24887:	lea    rax,[rip+0x216782]        # 23b010 <logfile>
   2488e:	mov    edi,DWORD PTR [rax]
   24890:	cmp    edi,0x2
   24893:	je     2489a <create_domain+0x3ba>
   24895:	call   b4a0 <close@plt>
   2489a:	mov    rdi,QWORD PTR [rsp+0x8]
   2489f:	call   bb40 <libxl_domain_config_dispose@plt>
   248a4:	mov    rdi,QWORD PTR [rsp+0x78]
   248a9:	call   ac40 <free@plt>
   248ae:	xor    edi,edi
   248b0:	call   24140 <console_child_report>
   248b5:	mov    rsi,QWORD PTR [rsp+0x70]
   248ba:	test   rsi,rsi
   248bd:	je     248ce <create_domain+0x3ee>
   248bf:	lea    rax,[rip+0x21859a]        # 23ce60 <ctx>
   248c6:	mov    rdi,QWORD PTR [rax]
   248c9:	call   be70 <libxl_evdisable_domain_death@plt>
   248ce:	test   r12,r12
   248d1:	je     248ea <create_domain+0x40a>
   248d3:	mov    esi,DWORD PTR [rsp+0x4e0]
   248da:	mov    rdi,r12
   248dd:	call   241d0 <evdisable_disk_ejects>
   248e2:	mov    rdi,r12
   248e5:	call   ac40 <free@plt>
   248ea:	mov    edx,DWORD PTR [rsp+0x20]
   248ee:	test   edx,edx
   248f0:	je     248fa <create_domain+0x41a>
   248f2:	test   bl,bl
   248f4:	jne    25eab <create_domain+0x19cb>
   248fa:	mov    rcx,QWORD PTR [rsp+0x608]
   24902:	xor    rcx,QWORD PTR fs:0x28
   2490b:	mov    eax,r15d
   2490e:	jne    25eb3 <create_domain+0x19d3>
   24914:	add    rsp,0x618
   2491b:	pop    rbx
   2491c:	pop    rbp
   2491d:	pop    r12
   2491f:	pop    r13
   24921:	pop    r14
   24923:	pop    r15
   24925:	ret    
   24926:	nop    WORD PTR cs:[rax+rax*1+0x0]
   24930:	test   rdi,rdi
   24933:	je     25e80 <create_domain+0x19a0>
   24939:	movzx  r13d,BYTE PTR [rsp+0x124]
   24942:	mov    esi,DWORD PTR [rbx+0x14]
   24945:	and    r13d,0x1
   24949:	test   esi,esi
   2494b:	je     25100 <create_domain+0xc20>
   24951:	test   r13b,r13b
   24954:	je     25bac <create_domain+0x16cc>
   2495a:	lea    r13,[rip+0x2184ff]        # 23ce60 <ctx>
   24961:	mov    rdx,rdi
   24964:	mov    rsi,QWORD PTR [rsp+0x8]
   24969:	mov    rdi,QWORD PTR [r13+0x0]
   2496d:	call   c310 <libxl_domain_config_from_json@plt>
   24972:	mov    ecx,DWORD PTR [rbx+0x28]
   24975:	test   ecx,ecx
   24977:	jne    24785 <create_domain+0x2a5>
   2497d:	mov    edx,DWORD PTR [rsp+0x1c0]
   24984:	mov    rsi,QWORD PTR [rsp+0x1c8]
   2498c:	test   edx,edx
   2498e:	je     25078 <create_domain+0xb98>
   24994:	mov    edi,DWORD PTR [rsp+0x328]
   2499b:	call   1f2a0 <apply_global_affinity_masks>
   249a0:	jmp    24785 <create_domain+0x2a5>
   249a5:	nop    DWORD PTR [rax]
   249a8:	test   eax,eax
   249aa:	jne    247fa <create_domain+0x31a>
   249b0:	mov    eax,DWORD PTR [rsp+0x68]
   249b4:	cmp    eax,0xffffffff
   249b7:	mov    DWORD PTR [rsp+0x38],eax
   249bb:	jne    25f69 <create_domain+0x1a89>
   249c1:	mov    r14d,DWORD PTR [rip+0x2180f8]        # 23cac0 <fd_lock>
   249c8:	test   r14d,r14d
   249cb:	jns    25b9c <create_domain+0x16bc>
   249d1:	movzx  eax,bpl
   249d5:	mov    r14d,DWORD PTR [rsp+0x20]
   249da:	xor    ebp,ebp
   249dc:	mov    DWORD PTR [rsp+0x28],eax
   249e0:	mov    eax,DWORD PTR [rsp+0x38]
   249e4:	mov    QWORD PTR [rsp+0x18],rbx
   249e9:	mov    ebx,ebp
   249eb:	mov    r12d,r14d
   249ee:	mov    DWORD PTR [rsp+0x10],eax
   249f2:	lea    rax,[rsp+0xe8]
   249fa:	mov    QWORD PTR [rsp+0x48],rax
   249ff:	lea    rax,[rsp+0xec]
   24a07:	mov    QWORD PTR [rsp+0x50],rax
   24a0c:	lea    rax,[rip+0x218485]        # 23ce98 <lockfile>
   24a13:	mov    edx,0x80
   24a18:	mov    esi,0x41
   24a1d:	mov    DWORD PTR [rsp+0xb0],0x1
   24a28:	mov    QWORD PTR [rsp+0xb8],0x0
   24a34:	mov    QWORD PTR [rsp+0xc0],0x0
   24a40:	mov    rdi,QWORD PTR [rax]
   24a43:	xor    eax,eax
   24a45:	call   bf20 <open@plt>
   24a4a:	test   eax,eax
   24a4c:	mov    DWORD PTR [rip+0x21806e],eax        # 23cac0 <fd_lock>
   24a52:	js     25d62 <create_domain+0x1882>
   24a58:	mov    edi,eax
   24a5a:	mov    edx,0x1
   24a5f:	xor    eax,eax
   24a61:	mov    esi,0x2
   24a66:	call   af60 <fcntl@plt>
   24a6b:	test   eax,eax
   24a6d:	js     25e1d <create_domain+0x193d>
   24a73:	lea    rbp,[rsp+0xb0]
   24a7b:	jmp    24a92 <create_domain+0x5b2>
   24a7d:	nop    DWORD PTR [rax]
   24a80:	call   ad80 <__errno_location@plt>
   24a85:	mov    r8d,DWORD PTR [rax]
   24a88:	cmp    r8d,0x4
   24a8c:	jne    251e0 <create_domain+0xd00>
   24a92:	mov    edi,DWORD PTR [rip+0x218028]        # 23cac0 <fd_lock>
   24a98:	xor    eax,eax
   24a9a:	mov    rdx,rbp
   24a9d:	mov    esi,0x7
   24aa2:	call   af60 <fcntl@plt>
   24aa7:	test   eax,eax
   24aa9:	js     24a80 <create_domain+0x5a0>
   24aab:	cmp    DWORD PTR [rsp+0x10],0xffffffff
   24ab0:	je     254b0 <create_domain+0xfd0>
   24ab6:	lea    r13,[rip+0x2183a3]        # 23ce60 <ctx>
   24abd:	mov    rax,QWORD PTR [rsp+0x18]
   24ac2:	xor    r14d,r14d
   24ac5:	mov    r11d,DWORD PTR [rax+0x20]
   24ac9:	test   r11d,r11d
   24acc:	jne    25230 <create_domain+0xd50>
   24ad2:	mov    r10d,DWORD PTR [rsp+0x28]
   24ad7:	test   r10d,r10d
   24ada:	jne    25278 <create_domain+0xd98>
   24ae0:	mov    eax,DWORD PTR [rsp+0x10]
   24ae4:	mov    rdi,QWORD PTR [r13+0x0]
   24ae8:	cmp    eax,0xffffffff
   24aeb:	je     25130 <create_domain+0xc50>
   24af1:	mov    rsi,QWORD PTR [rsp+0x8]
   24af6:	mov    r8,r14
   24af9:	xor    ecx,ecx
   24afb:	mov    edx,eax
   24afd:	call   b820 <libxl_domain_soft_reset@plt>
   24b02:	mov    ebx,eax
   24b04:	mov    eax,DWORD PTR [rsp+0x10]
   24b08:	mov    DWORD PTR [rsp+0x68],eax
   24b0c:	mov    eax,DWORD PTR [rsp+0x38]
   24b10:	mov    DWORD PTR [rsp+0x10],eax
   24b14:	test   ebx,ebx
   24b16:	mov    eax,DWORD PTR [rip+0x217fa4]        # 23cac0 <fd_lock>
   24b1c:	jne    25d48 <create_domain+0x1868>
   24b22:	test   eax,eax
   24b24:	js     24b2b <create_domain+0x64b>
   24b26:	call   24230 <release_lock.part.1>
   24b2b:	mov    eax,DWORD PTR [rsp+0x24]
   24b2f:	test   eax,eax
   24b31:	jns    251c0 <create_domain+0xce0>
   24b37:	test   r14,r14
   24b3a:	je     24bb0 <create_domain+0x6d0>
   24b3c:	lea    r14,[rsp+0x5f0]
   24b44:	jmp    24b60 <create_domain+0x680>
   24b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   24b50:	call   ad80 <__errno_location@plt>
   24b55:	mov    edi,DWORD PTR [rax]
   24b57:	cmp    edi,0x4
   24b5a:	jne    25410 <create_domain+0xf30>
   24b60:	mov    edi,DWORD PTR [rsp+0xe8]
   24b67:	mov    edx,0x1
   24b6c:	mov    rsi,r14
   24b6f:	call   b590 <read@plt>
   24b74:	cmp    eax,0xffffffff
   24b77:	mov    edx,eax
   24b79:	je     24b50 <create_domain+0x670>
   24b7b:	test   eax,eax
   24b7d:	je     25970 <create_domain+0x1490>
   24b83:	cmp    edx,0x1
   24b86:	je     259e0 <create_domain+0x1500>
   24b8c:	mov    edi,DWORD PTR [rsp+0xe8]
   24b93:	call   b4a0 <close@plt>
   24b98:	mov    edi,DWORD PTR [rsp+0xec]
   24b9f:	call   b4a0 <close@plt>
   24ba4:	mov    QWORD PTR [rsp+0xe8],0xffffffffffffffff
   24bb0:	test   r15d,r15d
   24bb3:	mov    ebx,DWORD PTR [rsp+0x68]
   24bb7:	je     252f8 <create_domain+0xe18>
   24bbd:	mov    eax,DWORD PTR [rsp+0x20]
   24bc1:	or     eax,DWORD PTR [rsp+0x34]
   24bc5:	je     25d37 <create_domain+0x1857>
   24bcb:	mov    rax,QWORD PTR [rsp+0x18]
   24bd0:	mov    edi,DWORD PTR [rax+0x18]
   24bd3:	test   edi,edi
   24bd5:	jne    25378 <create_domain+0xe98>
   24bdb:	test   r12d,r12d
   24bde:	je     24c21 <create_domain+0x741>
   24be0:	mov    rdx,QWORD PTR [rsp+0x148]
   24be8:	lea    rsi,[rip+0xec73]        # 33862 <shutdown_reason_letters.11238+0x532>
   24bef:	xor    eax,eax
   24bf1:	mov    rdi,rbp
   24bf4:	call   e8e0 <xasprintf>
   24bf9:	mov    rdi,QWORD PTR [rsp+0xb0]
   24c01:	xor    esi,esi
   24c03:	call   efb0 <do_daemonize>
   24c08:	mov    rdi,QWORD PTR [rsp+0xb0]
   24c10:	mov    r15d,eax
   24c13:	call   ac40 <free@plt>
   24c18:	test   r15d,r15d
   24c1b:	jne    25d85 <create_domain+0x18a5>
   24c21:	call   afa0 <getpid@plt>
   24c26:	sub    rsp,0x8
   24c2a:	cdqe   
   24c2c:	lea    rcx,[rip+0xf3a5]        # 33fd8 <shutdown_reason_letters.11238+0xca8>
   24c33:	push   rax
   24c34:	mov    r9d,DWORD PTR [rsp+0x78]
   24c39:	lea    rdx,[rip+0xf808]        # 34448 <__func__.10176>
   24c40:	mov    r8,QWORD PTR [rsp+0x158]
   24c48:	lea    rdi,[rip+0xea8e]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   24c4f:	xor    eax,eax
   24c51:	mov    esi,0x3e5
   24c56:	call   e7b0 <dolog>
   24c5b:	mov    esi,DWORD PTR [rsp+0x78]
   24c5f:	mov    rdi,QWORD PTR [r13+0x0]
   24c63:	lea    rcx,[rsp+0x80]
   24c6b:	xor    edx,edx
   24c6d:	call   ba80 <libxl_evenable_domain_death@plt>
   24c72:	test   eax,eax
   24c74:	mov    r15d,eax
   24c77:	pop    rcx
   24c78:	pop    rsi
   24c79:	jne    25d55 <create_domain+0x1875>
   24c7f:	movsxd rdi,DWORD PTR [rsp+0x4e0]
   24c87:	shl    rdi,0x3
   24c8b:	call   e9a0 <xmalloc>
   24c90:	mov    ebx,DWORD PTR [rsp+0x4e0]
   24c97:	mov    r12,rax
   24c9a:	test   ebx,ebx
   24c9c:	jle    24cc2 <create_domain+0x7e2>
   24c9e:	mov    eax,0x1
   24ca3:	nop    DWORD PTR [rax+rax*1+0x0]
   24ca8:	mov    QWORD PTR [r12+rax*8-0x8],0x0
   24cb1:	mov    ebx,DWORD PTR [rsp+0x4e0]
   24cb8:	mov    edx,eax
   24cba:	add    rax,0x1
   24cbe:	cmp    ebx,edx
   24cc0:	jg     24ca8 <create_domain+0x7c8>
   24cc2:	test   ebx,ebx
   24cc4:	mov    r11d,DWORD PTR [rsp+0x68]
   24cc9:	mov    rdi,QWORD PTR [r13+0x0]
   24ccd:	je     24d53 <create_domain+0x873>
   24cd3:	lea    eax,[rbx-0x1]
   24cd6:	mov    r9,r12
   24cd9:	mov    DWORD PTR [rsp+0x28],ebx
   24cdd:	mov    r14,r12
   24ce0:	mov    esi,r11d
   24ce3:	lea    r10,[r12+rax*8+0x8]
   24ce8:	mov    rax,r12
   24ceb:	shl    rax,0x4
   24cef:	sub    r9,rax
   24cf2:	mov    rbx,r10
   24cf5:	mov    r15,r9
   24cf8:	jmp    24d09 <create_domain+0x829>
   24cfa:	nop    WORD PTR [rax+rax*1+0x0]
   24d00:	add    r14,0x8
   24d04:	cmp    rbx,r14
   24d07:	je     24d4c <create_domain+0x86c>
   24d09:	mov    rax,r14
   24d0c:	shl    rax,0x4
   24d10:	sub    rax,r14
   24d13:	add    rax,r15
   24d16:	add    rax,QWORD PTR [rsp+0x4e8]
   24d1e:	mov    edx,DWORD PTR [rax+0x30]
   24d21:	test   edx,edx
   24d23:	je     24d00 <create_domain+0x820>
   24d25:	mov    rdx,QWORD PTR [rax+0x18]
   24d29:	xor    ecx,ecx
   24d2b:	mov    r8,r14
   24d2e:	call   b0a0 <libxl_evenable_disk_eject@plt>
   24d33:	test   eax,eax
   24d35:	jne    25440 <create_domain+0xf60>
   24d3b:	add    r14,0x8
   24d3f:	mov    esi,DWORD PTR [rsp+0x68]
   24d43:	mov    rdi,QWORD PTR [r13+0x0]
   24d47:	cmp    rbx,r14
   24d4a:	jne    24d09 <create_domain+0x829>
   24d4c:	mov    ebx,DWORD PTR [rsp+0x28]
   24d50:	mov    r11d,esi
   24d53:	lea    rax,[rsp+0x80]
   24d5b:	mov    r14d,r11d
   24d5e:	mov    QWORD PTR [rsp+0x28],rax
   24d63:	mov    rsi,QWORD PTR [rsp+0x28]
   24d68:	xor    r8d,r8d
   24d6b:	xor    ecx,ecx
   24d6d:	mov    rdx,0xffffffffffffffff
   24d74:	call   b1a0 <libxl_event_wait@plt>
   24d79:	test   eax,eax
   24d7b:	jne    25580 <create_domain+0x10a0>
   24d81:	mov    rsi,QWORD PTR [rsp+0x80]
   24d89:	cmp    r14d,DWORD PTR [rsi+0x10]
   24d8d:	jne    25150 <create_domain+0xc70>
   24d93:	mov    edx,DWORD PTR [rsi+0x30]
   24d96:	cmp    edx,0x2
   24d99:	je     25330 <create_domain+0xe50>
   24d9f:	cmp    edx,0x3
   24da2:	je     25310 <create_domain+0xe30>
   24da8:	cmp    edx,0x1
   24dab:	je     25450 <create_domain+0xf70>
   24db1:	mov    rdi,QWORD PTR [r13+0x0]
   24db5:	call   b6c0 <libxl_event_to_json@plt>
   24dba:	mov    r14,rax
   24dbd:	mov    r9,rax
   24dc0:	mov    rax,QWORD PTR [rsp+0x80]
   24dc8:	lea    rdi,[rip+0xe90e]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   24dcf:	lea    rcx,[rip+0xf49a]        # 34270 <shutdown_reason_letters.11238+0xf40>
   24dd6:	lea    rdx,[rip+0xf66b]        # 34448 <__func__.10176>
   24ddd:	mov    esi,0x450
   24de2:	mov    r8d,DWORD PTR [rax+0x30]
   24de6:	xor    eax,eax
   24de8:	call   e7b0 <dolog>
   24ded:	mov    rdi,r14
   24df0:	call   ac40 <free@plt>
   24df5:	mov    rdi,QWORD PTR [r13+0x0]
   24df9:	mov    rsi,QWORD PTR [rsp+0x80]
   24e01:	call   b280 <libxl_event_free@plt>
   24e06:	mov    r14d,DWORD PTR [rsp+0x68]
   24e0b:	mov    rdi,QWORD PTR [r13+0x0]
   24e0f:	jmp    24d63 <create_domain+0x883>
   24e14:	nop    DWORD PTR [rax+0x0]
   24e18:	mov    rdi,QWORD PTR [rsp+0x10]
   24e1d:	xor    esi,esi
   24e1f:	xor    eax,eax
   24e21:	call   bf20 <open@plt>
   24e26:	cmp    eax,0xffffffff
   24e29:	mov    DWORD PTR [rsp+0x30],eax
   24e2d:	je     25998 <create_domain+0x14b8>
   24e33:	lea    r13,[rip+0x218026]        # 23ce60 <ctx>
   24e3a:	mov    esi,DWORD PTR [rsp+0x30]
   24e3e:	mov    edx,0x1
   24e43:	mov    rdi,QWORD PTR [r13+0x0]
   24e47:	call   c390 <libxl_fd_set_cloexec@plt>
   24e4c:	test   eax,eax
   24e4e:	jne    255f0 <create_domain+0x1110>
   24e54:	mov    eax,DWORD PTR [rsp+0x30]
   24e58:	mov    DWORD PTR [rsp+0x40],r14d
   24e5d:	mov    DWORD PTR [rsp+0x24],eax
   24e61:	jmp    245d1 <create_domain+0xf1>
   24e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
   24e70:	mov    r14,QWORD PTR [rip+0x216179]        # 23aff0 <stderr@GLIBC_2.2.5>
   24e77:	xor    eax,eax
   24e79:	test   eax,eax
   24e7b:	mov    rdi,QWORD PTR [r14]
   24e7e:	je     24658 <create_domain+0x178>
   24e84:	mov    rcx,rdi
   24e87:	lea    rdi,[rip+0xee6a]        # 33cf8 <shutdown_reason_letters.11238+0x9c8>
   24e8e:	mov    edx,0x3f
   24e93:	mov    esi,0x1
   24e98:	mov    r15d,0xfffffffa
   24e9e:	call   c1b0 <fwrite@plt>
   24ea3:	jmp    248fa <create_domain+0x41a>
   24ea8:	nop    DWORD PTR [rax+rax*1+0x0]
   24eb0:	mov    rax,QWORD PTR [rip+0x216139]        # 23aff0 <stderr@GLIBC_2.2.5>
   24eb7:	mov    r12,QWORD PTR [rax]
   24eba:	lea    rax,[rip+0x217f4b]        # 23ce0c <default_output_format>
   24ec1:	cmp    DWORD PTR [rax],0x1
   24ec4:	jne    24814 <create_domain+0x334>
   24eca:	mov    rsi,QWORD PTR [rsp+0x8]
   24ecf:	mov    rdx,r12
   24ed2:	mov    edi,0xffffffff
   24ed7:	call   d730 <printf_info_sexp>
   24edc:	jmp    24850 <create_domain+0x370>
   24ee1:	nop    DWORD PTR [rax+0x0]
   24ee8:	sub    rsp,0x8
   24eec:	lea    rdx,[rip+0xee45]        # 33d38 <shutdown_reason_letters.11238+0xa08>
   24ef3:	mov    esi,0x1
   24ef8:	mov    eax,DWORD PTR [rsp+0x134]
   24eff:	push   rax
   24f00:	mov    rcx,QWORD PTR [rsp+0x20]
   24f05:	xor    eax,eax
   24f07:	mov    r9d,DWORD PTR [rsp+0x138]
   24f0f:	mov    r8d,DWORD PTR [rsp+0x134]
   24f17:	call   c1e0 <__fprintf_chk@plt>
   24f1c:	pop    r8
   24f1e:	pop    r9
   24f20:	mov    ecx,DWORD PTR [rsp+0x124]
   24f27:	and    ecx,0xfffffffc
   24f2a:	jne    25a18 <create_domain+0x1538>
   24f30:	mov    eax,DWORD PTR [rsp+0x12c]
   24f37:	test   eax,eax
   24f39:	je     2469f <create_domain+0x1bf>
   24f3f:	mov    edi,eax
   24f41:	call   e9a0 <xmalloc>
   24f46:	mov    ecx,DWORD PTR [rsp+0x12c]
   24f4d:	mov    r8,QWORD PTR [rsp+0x10]
   24f52:	lea    r9,[rip+0xe873]        # 337cc <shutdown_reason_letters.11238+0x49c>
   24f59:	mov    esi,DWORD PTR [rsp+0x30]
   24f5d:	mov    rdi,QWORD PTR [r13+0x0]
   24f61:	mov    rdx,rax
   24f64:	mov    QWORD PTR [rsp+0x48],rax
   24f69:	call   bba0 <libxl_read_exactly@plt>
   24f6e:	test   eax,eax
   24f70:	js     25eb8 <create_domain+0x19d8>
   24f76:	jne    25f26 <create_domain+0x1a46>
   24f7c:	mov    edi,DWORD PTR [rsp+0x12c]
   24f83:	test   edi,edi
   24f85:	je     2469f <create_domain+0x1bf>
   24f8b:	test   BYTE PTR [rsp+0x124],0x1
   24f93:	lea    rax,[rip+0xe7db]        # 33775 <shutdown_reason_letters.11238+0x445>
   24f9a:	lea    rcx,[rip+0xa3c6]        # 2f367 <__func__.10421+0xfdf>
   24fa1:	mov    rdi,QWORD PTR [r14]
   24fa4:	lea    rdx,[rip+0xee85]        # 33e30 <shutdown_reason_letters.11238+0xb00>
   24fab:	mov    esi,0x1
   24fb0:	cmovne rcx,rax
   24fb4:	xor    eax,eax
   24fb6:	call   c1e0 <__fprintf_chk@plt>
   24fbb:	mov    eax,DWORD PTR [rsp+0x12c]
   24fc2:	cmp    rax,0x3
   24fc6:	jle    25a89 <create_domain+0x15a9>
   24fcc:	mov    rcx,QWORD PTR [rsp+0x48]
   24fd1:	sub    rax,0x4
   24fd5:	movsxd rdi,DWORD PTR [rcx]
   24fd8:	cmp    rax,rdi
   24fdb:	mov    DWORD PTR [rsp+0x6c],edi
   24fdf:	jl     25a89 <create_domain+0x15a9>
   24fe5:	call   e9a0 <xmalloc>
   24fea:	mov    rsi,QWORD PTR [rsp+0x48]
   24fef:	movsxd rdx,DWORD PTR [rsp+0x6c]
   24ff4:	mov    rdi,rax
   24ff7:	mov    QWORD PTR [rsp+0x78],rax
   24ffc:	add    rsi,0x4
   25000:	call   b7e0 <memcpy@plt>
   25005:	jmp    2469f <create_domain+0x1bf>
   2500a:	nop    WORD PTR [rax+rax*1+0x0]
   25010:	lea    r13,[rip+0x217e49]        # 23ce60 <ctx>
   25017:	mov    rsi,QWORD PTR [rsp+0x18]
   2501c:	lea    rcx,[rsp+0x6c]
   25021:	lea    rdx,[rsp+0x78]
   25026:	mov    rdi,QWORD PTR [r13+0x0]
   2502a:	call   b320 <libxl_read_file_contents@plt>
   2502f:	test   eax,eax
   25031:	je     246e6 <create_domain+0x206>
   25037:	call   ad80 <__errno_location@plt>
   2503c:	mov    edi,DWORD PTR [rax]
   2503e:	mov    r15d,0xfffffffd
   25044:	call   c3b0 <strerror@plt>
   25049:	mov    r8,rax
   2504c:	mov    rax,QWORD PTR [rip+0x215f9d]        # 23aff0 <stderr@GLIBC_2.2.5>
   25053:	mov    rcx,QWORD PTR [rsp+0x18]
   25058:	lea    rdx,[rip+0x49c9]        # 29a28 <_IO_stdin_used+0x2e8>
   2505f:	mov    esi,0x1
   25064:	mov    rdi,QWORD PTR [rax]
   25067:	xor    eax,eax
   25069:	call   c1e0 <__fprintf_chk@plt>
   2506e:	jmp    248fa <create_domain+0x41a>
   25073:	nop    DWORD PTR [rax+rax*1+0x0]
   25078:	lea    rdi,[rip+0x217e31]        # 23ceb0 <global_vm_affinity_mask>
   2507f:	call   bae0 <libxl_bitmap_is_full@plt>
   25084:	test   eax,eax
   25086:	je     258c0 <create_domain+0x13e0>
   2508c:	cmp    DWORD PTR [rsp+0x328],0x2
   25094:	je     25886 <create_domain+0x13a6>
   2509a:	lea    rdi,[rip+0x217dcf]        # 23ce70 <global_hvm_affinity_mask>
   250a1:	call   bae0 <libxl_bitmap_is_full@plt>
   250a6:	test   eax,eax
   250a8:	je     258c0 <create_domain+0x13e0>
   250ae:	mov    edx,DWORD PTR [rsp+0x1c0]
   250b5:	mov    rsi,QWORD PTR [rsp+0x1c8]
   250bd:	mov    edi,DWORD PTR [rsp+0x328]
   250c4:	jmp    2499b <create_domain+0x4bb>
   250c9:	nop    DWORD PTR [rax+0x0]
   250d0:	call   ad80 <__errno_location@plt>
   250d5:	mov    r8d,DWORD PTR [rax]
   250d8:	mov    rax,QWORD PTR [rip+0x215f11]        # 23aff0 <stderr@GLIBC_2.2.5>
   250df:	lea    rdx,[rip+0xee5a]        # 33f40 <shutdown_reason_letters.11238+0xc10>
   250e6:	mov    ecx,DWORD PTR [rsp+0x24]
   250ea:	mov    esi,0x1
   250ef:	mov    rdi,QWORD PTR [rax]
   250f2:	xor    eax,eax
   250f4:	call   c1e0 <__fprintf_chk@plt>
   250f9:	jmp    24887 <create_domain+0x3a7>
   250fe:	xchg   ax,ax
   25100:	mov    rax,QWORD PTR [rip+0x215ee9]        # 23aff0 <stderr@GLIBC_2.2.5>
   25107:	lea    rcx,[rip+0xe677]        # 33785 <shutdown_reason_letters.11238+0x455>
   2510e:	lea    rdx,[rip+0xe6d4]        # 337e9 <shutdown_reason_letters.11238+0x4b9>
   25115:	mov    esi,0x1
   2511a:	mov    rdi,QWORD PTR [rax]
   2511d:	xor    eax,eax
   2511f:	call   c1e0 <__fprintf_chk@plt>
   25124:	mov    rdi,QWORD PTR [rsp+0x78]
   25129:	jmp    24951 <create_domain+0x471>
   2512e:	xchg   ax,ax
   25130:	mov    rsi,QWORD PTR [rsp+0x8]
   25135:	lea    rdx,[rsp+0x68]
   2513a:	mov    r8,r14
   2513d:	xor    ecx,ecx
   2513f:	call   bd20 <libxl_domain_create_new@plt>
   25144:	mov    ebx,eax
   25146:	jmp    24b14 <create_domain+0x634>
   2514b:	nop    DWORD PTR [rax+rax*1+0x0]
   25150:	mov    rdi,QWORD PTR [r13+0x0]
   25154:	call   b6c0 <libxl_event_to_json@plt>
   25159:	sub    rsp,0x8
   2515d:	mov    r15,rax
   25160:	lea    rcx,[rip+0xeee1]        # 34048 <shutdown_reason_letters.11238+0xd18>
   25167:	push   rax
   25168:	mov    rax,QWORD PTR [rsp+0x90]
   25170:	lea    rdx,[rip+0xf2b9]        # 34430 <__func__.10022>
   25177:	lea    rdi,[rip+0xe55f]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   2517e:	mov    r9d,r14d
   25181:	mov    esi,0x12f
   25186:	mov    r8d,DWORD PTR [rax+0x10]
   2518a:	xor    eax,eax
   2518c:	call   e7b0 <dolog>
   25191:	mov    rdi,r15
   25194:	call   ac40 <free@plt>
   25199:	mov    rsi,QWORD PTR [rsp+0x90]
   251a1:	mov    rdi,QWORD PTR [r13+0x0]
   251a5:	call   b280 <libxl_event_free@plt>
   251aa:	pop    r10
   251ac:	mov    rdi,QWORD PTR [r13+0x0]
   251b0:	pop    r11
   251b2:	jmp    24d63 <create_domain+0x883>
   251b7:	nop    WORD PTR [rax+rax*1+0x0]
   251c0:	mov    edi,eax
   251c2:	call   b4a0 <close@plt>
   251c7:	test   eax,eax
   251c9:	jne    255b0 <create_domain+0x10d0>
   251cf:	mov    DWORD PTR [rsp+0x24],0xffffffff
   251d7:	jmp    24b37 <create_domain+0x657>
   251dc:	nop    DWORD PTR [rax+0x0]
   251e0:	lea    rax,[rip+0x217cb1]        # 23ce98 <lockfile>
   251e7:	lea    rdx,[rip+0xf0ba]        # 342a8 <shutdown_reason_letters.11238+0xf78>
   251ee:	mov    ebp,ebx
   251f0:	mov    r14d,r12d
   251f3:	mov    rcx,QWORD PTR [rax]
   251f6:	mov    rax,QWORD PTR [rip+0x215df3]        # 23aff0 <stderr@GLIBC_2.2.5>
   251fd:	mov    esi,0x1
   25202:	mov    rdi,QWORD PTR [rax]
   25205:	xor    eax,eax
   25207:	call   c1e0 <__fprintf_chk@plt>
   2520c:	mov    eax,DWORD PTR [rip+0x2178ae]        # 23cac0 <fd_lock>
   25212:	test   r14d,r14d
   25215:	sete   bl
   25218:	test   eax,eax
   2521a:	mov    r15d,ebp
   2521d:	js     257c7 <create_domain+0x12e7>
   25223:	jmp    257bf <create_domain+0x12df>
   25228:	nop    DWORD PTR [rax+rax*1+0x0]
   25230:	mov    rsi,QWORD PTR [rsp+0x48]
   25235:	mov    rdi,QWORD PTR [r13+0x0]
   25239:	call   c540 <libxl_pipe@plt>
   2523e:	test   eax,eax
   25240:	jne    25de3 <create_domain+0x1903>
   25246:	lea    rax,[rip+0xffffffffffffef13]        # 24160 <autoconnect_console>
   2524d:	mov    r10d,DWORD PTR [rsp+0x28]
   25252:	lea    r14,[rsp+0x90]
   2525a:	mov    QWORD PTR [rsp+0x90],rax
   25262:	mov    rax,QWORD PTR [rsp+0x50]
   25267:	test   r10d,r10d
   2526a:	mov    QWORD PTR [rsp+0xa0],rax
   25272:	je     24ae0 <create_domain+0x600>
   25278:	mov    rdi,rbp
   2527b:	call   b3e0 <libxl_domain_restore_params_init@plt>
   25280:	mov    rcx,QWORD PTR [rsp+0x18]
   25285:	lea    rdi,[rbp+0x10]
   25289:	mov    eax,DWORD PTR [rcx+0x24]
   2528c:	movzx  esi,BYTE PTR [rcx+0x50]
   25290:	mov    DWORD PTR [rsp+0xb0],eax
   25297:	xor    eax,eax
   25299:	test   BYTE PTR [rsp+0x124],0x2
   252a1:	setne  al
   252a4:	add    eax,0x1
   252a7:	mov    DWORD PTR [rsp+0xb4],eax
   252ae:	mov    rax,QWORD PTR [rcx+0x48]
   252b2:	mov    QWORD PTR [rsp+0xb8],rax
   252ba:	call   b140 <libxl_defbool_set@plt>
   252bf:	lea    rdx,[rsp+0x68]
   252c4:	push   r14
   252c6:	push   0x0
   252c8:	mov    r8d,DWORD PTR [rsp+0x50]
   252cd:	mov    ecx,DWORD PTR [rsp+0x40]
   252d1:	mov    r9,rbp
   252d4:	mov    rsi,QWORD PTR [rsp+0x18]
   252d9:	mov    rdi,QWORD PTR [r13+0x0]
   252dd:	call   ae70 <libxl_domain_create_restore@plt>
   252e2:	mov    rdi,rbp
   252e5:	mov    ebx,eax
   252e7:	call   bf30 <libxl_domain_restore_params_dispose@plt>
   252ec:	pop    r8
   252ee:	pop    r9
   252f0:	jmp    24b14 <create_domain+0x634>
   252f5:	nop    DWORD PTR [rax]
   252f8:	mov    rdi,QWORD PTR [r13+0x0]
   252fc:	mov    esi,ebx
   252fe:	call   b460 <libxl_domain_unpause@plt>
   25303:	mov    ebx,DWORD PTR [rsp+0x68]
   25307:	jmp    24bbd <create_domain+0x6dd>
   2530c:	nop    DWORD PTR [rax+0x0]
   25310:	lea    rdx,[rsi+0x40]
   25314:	mov    rdi,QWORD PTR [r13+0x0]
   25318:	mov    esi,DWORD PTR [rsp+0x68]
   2531c:	xor    ecx,ecx
   2531e:	call   adb0 <libxl_cdrom_insert@plt>
   25323:	jmp    24df5 <create_domain+0x915>
   25328:	nop    DWORD PTR [rax+rax*1+0x0]
   25330:	mov    r8d,DWORD PTR [rsp+0x68]
   25335:	lea    rdi,[rip+0xe3a1]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   2533c:	lea    rcx,[rip+0xef0d]        # 34250 <shutdown_reason_letters.11238+0xf20>
   25343:	lea    rdx,[rip+0xf0fe]        # 34448 <__func__.10176>
   2534a:	mov    esi,0x443
   2534f:	mov    r15d,eax
   25352:	xor    eax,eax
   25354:	call   e7b0 <dolog>
   25359:	mov    rsi,QWORD PTR [rsp+0x80]
   25361:	mov    rdi,QWORD PTR [r13+0x0]
   25365:	call   b280 <libxl_event_free@plt>
   2536a:	mov    ebx,0x1
   2536f:	jmp    24887 <create_domain+0x3a7>
   25374:	nop    DWORD PTR [rax+0x0]
   25378:	mov    edi,0x3
   2537d:	call   24140 <console_child_report>
   25382:	lea    rsi,[rip+0xe4ac]        # 33835 <shutdown_reason_letters.11238+0x505>
   25389:	mov    edi,0x3
   2538e:	call   d1c0 <xl_fork>
   25393:	test   eax,eax
   25395:	jne    24bdb <create_domain+0x6fb>
   2539b:	call   d420 <postfork>
   253a0:	mov    edi,0x1
   253a5:	call   c420 <sleep@plt>
   253aa:	mov    edx,DWORD PTR [rsp+0x44]
   253ae:	mov    rdi,QWORD PTR [r13+0x0]
   253b2:	mov    esi,ebx
   253b4:	call   b060 <libxl_vncviewer_exec@plt>
   253b9:	mov    rax,QWORD PTR [rip+0x215c30]        # 23aff0 <stderr@GLIBC_2.2.5>
   253c0:	lea    rdi,[rip+0xe47e]        # 33845 <shutdown_reason_letters.11238+0x515>
   253c7:	mov    edx,0x1c
   253cc:	mov    esi,0x1
   253d1:	mov    rcx,QWORD PTR [rax]
   253d4:	call   c1b0 <fwrite@plt>
   253d9:	mov    edi,0x1
   253de:	call   adf0 <_exit@plt>
   253e3:	nop    DWORD PTR [rax+rax*1+0x0]
   253e8:	mov    rax,QWORD PTR [rip+0x215c01]        # 23aff0 <stderr@GLIBC_2.2.5>
   253ef:	mov    rcx,QWORD PTR [rsp+0x18]
   253f4:	lea    rdx,[rip+0xe3ee]        # 337e9 <shutdown_reason_letters.11238+0x4b9>
   253fb:	mov    esi,0x1
   25400:	mov    rdi,QWORD PTR [rax]
   25403:	xor    eax,eax
   25405:	call   c1e0 <__fprintf_chk@plt>
   2540a:	jmp    2475f <create_domain+0x27f>
   2540f:	nop
   25410:	call   c3b0 <strerror@plt>
   25415:	mov    rcx,rax
   25418:	mov    rax,QWORD PTR [rip+0x215bd1]        # 23aff0 <stderr@GLIBC_2.2.5>
   2541f:	lea    rdx,[rip+0xeeaa]        # 342d0 <shutdown_reason_letters.11238+0xfa0>
   25426:	mov    esi,0x1
   2542b:	mov    rdi,QWORD PTR [rax]
   2542e:	xor    eax,eax
   25430:	call   c1e0 <__fprintf_chk@plt>
   25435:	jmp    24b8c <create_domain+0x6ac>
   2543a:	nop    WORD PTR [rax+rax*1+0x0]
   25440:	mov    r15d,eax
   25443:	jmp    2536a <create_domain+0xe8a>
   25448:	nop    DWORD PTR [rax+rax*1+0x0]
   25450:	movzx  r9d,BYTE PTR [rsi+0x38]
   25455:	sub    rsp,0x8
   25459:	lea    rdi,[rip+0xe27d]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25460:	lea    rcx,[rip+0xec39]        # 340a0 <shutdown_reason_letters.11238+0xd70>
   25467:	lea    rdx,[rip+0xefda]        # 34448 <__func__.10176>
   2546e:	mov    r15d,eax
   25471:	mov    esi,0x401
   25476:	xor    eax,eax
   25478:	push   r9
   2547a:	mov    r8d,DWORD PTR [rsp+0x78]
   2547f:	call   e7b0 <dolog>
   25484:	mov    r11,QWORD PTR [rsp+0x90]
   2548c:	pop    rdi
   2548d:	pop    r9
   2548f:	movzx  r8d,BYTE PTR [r11+0x38]
   25494:	cmp    r8b,0x5
   25498:	ja     25bbd <create_domain+0x16dd>
   2549e:	lea    rdx,[rip+0xee5b]        # 34300 <shutdown_reason_letters.11238+0xfd0>
   254a5:	movsxd rax,DWORD PTR [rdx+r8*4]
   254a9:	add    rax,rdx
   254ac:	jmp    rax
   254ae:	xchg   ax,ax
   254b0:	lea    rax,[rip+0x215b71]        # 23b028 <autoballoon>
   254b7:	mov    ebx,DWORD PTR [rax]
   254b9:	test   ebx,ebx
   254bb:	je     24ab6 <create_domain+0x5d6>
   254c1:	lea    r13,[rip+0x217998]        # 23ce60 <ctx>
   254c8:	mov    rax,QWORD PTR [rsp+0x8]
   254cd:	lea    rdx,[rsp+0x88]
   254d5:	mov    rdi,QWORD PTR [r13+0x0]
   254d9:	lea    rsi,[rax+0x58]
   254dd:	call   bcd0 <libxl_domain_need_memory@plt>
   254e2:	test   eax,eax
   254e4:	js     25547 <create_domain+0x1067>
   254e6:	mov    ebx,0x3
   254eb:	mov    rdi,QWORD PTR [r13+0x0]
   254ef:	mov    rsi,rbp
   254f2:	call   ac90 <libxl_get_free_memory@plt>
   254f7:	test   eax,eax
   254f9:	js     25547 <create_domain+0x1067>
   254fb:	mov    rdx,QWORD PTR [rsp+0xb0]
   25503:	mov    rax,QWORD PTR [rsp+0x88]
   2550b:	cmp    rdx,rax
   2550e:	jae    24abd <create_domain+0x5dd>
   25514:	mov    rdi,QWORD PTR [r13+0x0]
   25518:	sub    rdx,rax
   2551b:	xor    r8d,r8d
   2551e:	xor    esi,esi
   25520:	mov    ecx,0x1
   25525:	call   bb60 <libxl_set_memory_target@plt>
   2552a:	test   eax,eax
   2552c:	js     25547 <create_domain+0x1067>
   2552e:	mov    rdi,QWORD PTR [r13+0x0]
   25532:	xor    esi,esi
   25534:	mov    edx,0xa
   25539:	call   b390 <libxl_wait_for_memory_target@plt>
   2553e:	test   eax,eax
   25540:	js     25547 <create_domain+0x1067>
   25542:	sub    ebx,0x1
   25545:	jne    254eb <create_domain+0x100b>
   25547:	mov    rax,QWORD PTR [rip+0x215aa2]        # 23aff0 <stderr@GLIBC_2.2.5>
   2554e:	lea    rdi,[rip+0xe9c3]        # 33f18 <shutdown_reason_letters.11238+0xbe8>
   25555:	mov    edx,0x25
   2555a:	mov    esi,0x1
   2555f:	mov    ebp,0xfffffffd
   25564:	mov    rcx,QWORD PTR [rax]
   25567:	call   c1b0 <fwrite@plt>
   2556c:	test   r12d,r12d
   2556f:	mov    eax,DWORD PTR [rip+0x21754b]        # 23cac0 <fd_lock>
   25575:	sete   bl
   25578:	jmp    25218 <create_domain+0xd38>
   2557d:	nop    DWORD PTR [rax]
   25580:	lea    rcx,[rip+0xea89]        # 34010 <shutdown_reason_letters.11238+0xce0>
   25587:	lea    rdx,[rip+0xeea2]        # 34430 <__func__.10022>
   2558e:	lea    rdi,[rip+0xe148]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25595:	mov    r15d,eax
   25598:	mov    r9d,eax
   2559b:	mov    r8d,r14d
   2559e:	mov    esi,0x128
   255a3:	xor    eax,eax
   255a5:	call   e7b0 <dolog>
   255aa:	jmp    2536a <create_domain+0xe8a>
   255af:	nop
   255b0:	call   ad80 <__errno_location@plt>
   255b5:	mov    r8d,DWORD PTR [rax]
   255b8:	mov    rax,QWORD PTR [rip+0x215a31]        # 23aff0 <stderr@GLIBC_2.2.5>
   255bf:	lea    rdx,[rip+0xe97a]        # 33f40 <shutdown_reason_letters.11238+0xc10>
   255c6:	mov    ecx,DWORD PTR [rsp+0x24]
   255ca:	mov    esi,0x1
   255cf:	mov    rdi,QWORD PTR [rax]
   255d2:	xor    eax,eax
   255d4:	call   c1e0 <__fprintf_chk@plt>
   255d9:	mov    DWORD PTR [rsp+0x24],0xffffffff
   255e1:	jmp    24b37 <create_domain+0x657>
   255e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   255f0:	mov    r15d,eax
   255f3:	jmp    248fa <create_domain+0x41a>
   255f8:	mov    r14d,DWORD PTR [rsp+0x5d8]
   25600:	mov    edi,r14d
   25603:	mov    QWORD PTR [rsp+0x58],r11
   25608:	call   11750 <get_action_on_shutdown_name>
   2560d:	mov    r11,QWORD PTR [rsp+0x58]
   25612:	lea    rcx,[rip+0xeaef]        # 34108 <shutdown_reason_letters.11238+0xdd8>
   25619:	lea    rdx,[rip+0xedf0]        # 34410 <__func__.10057>
   25620:	lea    rdi,[rip+0xe0b6]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25627:	mov    r9,rax
   2562a:	mov    esi,0x1ab
   2562f:	xor    eax,eax
   25631:	movzx  r8d,BYTE PTR [r11+0x38]
   25636:	call   e7b0 <dolog>
   2563b:	lea    eax,[r14-0x5]
   2563f:	cmp    eax,0x1
   25642:	jbe    25aad <create_domain+0x15cd>
   25648:	cmp    r14d,0x2
   2564c:	je     25a39 <create_domain+0x1559>
   25652:	jbe    25d28 <create_domain+0x1848>
   25658:	cmp    r14d,0x3
   2565c:	je     25c20 <create_domain+0x1740>
   25662:	cmp    r14d,0x7
   25666:	jne    2584f <create_domain+0x136f>
   2566c:	mov    rsi,QWORD PTR [rsp+0x8]
   25671:	mov    edi,DWORD PTR [rsp+0x68]
   25675:	call   23fa0 <reload_domain_config>
   2567a:	mov    eax,DWORD PTR [rsp+0x68]
   2567e:	mov    DWORD PTR [rsp+0x68],0xffffffff
   25686:	mov    DWORD PTR [rsp+0x10],eax
   2568a:	cmp    DWORD PTR [rsp+0x10],0xffffffff
   2568f:	je     25c33 <create_domain+0x1753>
   25695:	mov    rsi,QWORD PTR [rsp+0x80]
   2569d:	mov    rdi,QWORD PTR [r13+0x0]
   256a1:	mov    rbp,0xffffffffffffffff
   256a8:	call   b280 <libxl_event_free@plt>
   256ad:	mov    rsi,QWORD PTR [rsp+0x70]
   256b2:	mov    rdi,QWORD PTR [r13+0x0]
   256b6:	call   be70 <libxl_evdisable_domain_death@plt>
   256bb:	mov    esi,ebx
   256bd:	mov    rdi,r12
   256c0:	mov    QWORD PTR [rsp+0x70],0x0
   256c9:	call   241d0 <evdisable_disk_ejects>
   256ce:	mov    rdi,r12
   256d1:	call   ac40 <free@plt>
   256d6:	mov    rbx,QWORD PTR [rsp+0x28]
   256db:	jmp    256f1 <create_domain+0x1211>
   256dd:	nop    DWORD PTR [rax]
   256e0:	mov    rsi,QWORD PTR [rsp+0x80]
   256e8:	mov    rdi,QWORD PTR [r13+0x0]
   256ec:	call   b280 <libxl_event_free@plt>
   256f1:	mov    rdi,QWORD PTR [r13+0x0]
   256f5:	xor    r8d,r8d
   256f8:	xor    ecx,ecx
   256fa:	mov    rdx,rbp
   256fd:	mov    rsi,rbx
   25700:	call   b2b0 <libxl_event_check@plt>
   25705:	test   eax,eax
   25707:	je     256e0 <create_domain+0x1200>
   25709:	cmp    eax,0xfffffff5
   2570c:	mov    ebx,eax
   2570e:	je     25734 <create_domain+0x1254>
   25710:	lea    rcx,[rip+0xeb01]        # 34218 <shutdown_reason_letters.11238+0xee8>
   25717:	lea    rdx,[rip+0xed2a]        # 34448 <__func__.10176>
   2571e:	lea    rdi,[rip+0xdfb8]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25725:	mov    r8d,eax
   25728:	mov    esi,0x420
   2572d:	xor    eax,eax
   2572f:	call   e7b0 <dolog>
   25734:	mov    rax,QWORD PTR [rsp+0x18]
   25739:	mov    DWORD PTR [rax+0x20],0x0
   25740:	lea    rax,[rip+0x217721]        # 23ce68 <common_domname>
   25747:	mov    rbp,QWORD PTR [rax]
   2574a:	test   rbp,rbp
   2574d:	je     25767 <create_domain+0x1287>
   2574f:	mov    rdi,QWORD PTR [rsp+0x148]
   25757:	mov    rsi,rbp
   2575a:	call   b650 <strcmp@plt>
   2575f:	test   eax,eax
   25761:	jne    25b87 <create_domain+0x16a7>
   25767:	lea    rcx,[rip+0xe163]        # 338d1 <shutdown_reason_letters.11238+0x5a1>
   2576e:	lea    rdx,[rip+0xecd3]        # 34448 <__func__.10176>
   25775:	lea    rdi,[rip+0xdf61]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   2577c:	xor    eax,eax
   2577e:	mov    esi,0x434
   25783:	call   e7b0 <dolog>
   25788:	mov    edi,0x2
   2578d:	call   c420 <sleep@plt>
   25792:	cmp    DWORD PTR [rsp+0x68],0xffffffff
   25797:	jne    25f69 <create_domain+0x1a89>
   2579d:	mov    r13d,DWORD PTR [rip+0x21731c]        # 23cac0 <fd_lock>
   257a4:	xor    r12d,r12d
   257a7:	mov    DWORD PTR [rsp+0x28],0x0
   257af:	test   r13d,r13d
   257b2:	js     24a0c <create_domain+0x52c>
   257b8:	mov    ebp,ebx
   257ba:	mov    ebx,0x1
   257bf:	mov    r15d,ebp
   257c2:	call   24230 <release_lock.part.1>
   257c7:	mov    edi,DWORD PTR [rsp+0x68]
   257cb:	call   be60 <libxl_domid_valid_guest@plt>
   257d0:	test   eax,eax
   257d2:	je     24869 <create_domain+0x389>
   257d8:	lea    rax,[rip+0x217681]        # 23ce60 <ctx>
   257df:	mov    esi,DWORD PTR [rsp+0x68]
   257e3:	xor    edx,edx
   257e5:	mov    rdi,QWORD PTR [rax]
   257e8:	call   aed0 <libxl_domain_destroy@plt>
   257ed:	mov    DWORD PTR [rsp+0x68],0xffffffff
   257f5:	jmp    24869 <create_domain+0x389>
   257fa:	mov    r14d,DWORD PTR [rsp+0x5d4]
   25802:	jmp    25600 <create_domain+0x1120>
   25807:	mov    r14d,DWORD PTR [rsp+0x5d0]
   2580f:	jmp    25600 <create_domain+0x1120>
   25814:	mov    r14d,DWORD PTR [rsp+0x5e0]
   2581c:	jmp    25600 <create_domain+0x1120>
   25821:	mov    r14d,DWORD PTR [rsp+0x5dc]
   25829:	jmp    25600 <create_domain+0x1120>
   2582e:	lea    rcx,[rip+0xe033]        # 33868 <shutdown_reason_letters.11238+0x538>
   25835:	lea    rdx,[rip+0xebd4]        # 34410 <__func__.10057>
   2583c:	lea    rdi,[rip+0xde9a]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25843:	mov    esi,0x198
   25848:	xor    eax,eax
   2584a:	call   e7b0 <dolog>
   2584f:	lea    rcx,[rip+0xe090]        # 338e6 <shutdown_reason_letters.11238+0x5b6>
   25856:	lea    rdx,[rip+0xebeb]        # 34448 <__func__.10176>
   2585d:	lea    rdi,[rip+0xde79]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25864:	mov    esi,0x439
   25869:	xor    eax,eax
   2586b:	call   e7b0 <dolog>
   25870:	mov    rsi,QWORD PTR [rsp+0x80]
   25878:	mov    rdi,QWORD PTR [r13+0x0]
   2587c:	call   b280 <libxl_event_free@plt>
   25881:	jmp    2536a <create_domain+0xe8a>
   25886:	lea    rdi,[rip+0x217633]        # 23cec0 <global_pv_affinity_mask>
   2588d:	call   bae0 <libxl_bitmap_is_full@plt>
   25892:	test   eax,eax
   25894:	je     258c0 <create_domain+0x13e0>
   25896:	mov    edi,DWORD PTR [rsp+0x328]
   2589d:	cmp    edi,0x2
   258a0:	jne    2509a <create_domain+0xbba>
   258a6:	mov    edx,DWORD PTR [rsp+0x1c0]
   258ad:	mov    rsi,QWORD PTR [rsp+0x1c8]
   258b5:	jmp    2499b <create_domain+0x4bb>
   258ba:	nop    WORD PTR [rax+rax*1+0x0]
   258c0:	movsxd rdi,DWORD PTR [rsp+0x188]
   258c8:	mov    DWORD PTR [rsp+0x1c0],edi
   258cf:	shl    rdi,0x4
   258d3:	call   e9a0 <xmalloc>
   258d8:	mov    edx,DWORD PTR [rsp+0x1c0]
   258df:	mov    rsi,rax
   258e2:	mov    QWORD PTR [rsp+0x1c8],rax
   258ea:	test   edx,edx
   258ec:	jle    24994 <create_domain+0x4b4>
   258f2:	xor    ecx,ecx
   258f4:	mov    QWORD PTR [rsp+0x10],rbx
   258f9:	lea    r13,[rip+0x217560]        # 23ce60 <ctx>
   25900:	mov    rbx,rcx
   25903:	jmp    25910 <create_domain+0x1430>
   25905:	nop    DWORD PTR [rax]
   25908:	mov    rsi,QWORD PTR [rsp+0x1c8]
   25910:	mov    r14,rbx
   25913:	shl    r14,0x4
   25917:	add    r14,rsi
   2591a:	mov    rdi,r14
   2591d:	call   bc00 <libxl_bitmap_init@plt>
   25922:	mov    rdi,QWORD PTR [r13+0x0]
   25926:	xor    edx,edx
   25928:	mov    rsi,r14
   2592b:	call   b480 <libxl_cpu_bitmap_alloc@plt>
   25930:	mov    edx,DWORD PTR [r14]
   25933:	mov    rdi,QWORD PTR [r14+0x8]
   25937:	mov    esi,0xffffffff
   2593c:	call   b400 <memset@plt>
   25941:	mov    edx,DWORD PTR [rsp+0x1c0]
   25948:	lea    eax,[rbx+0x1]
   2594b:	add    rbx,0x1
   2594f:	cmp    edx,eax
   25951:	jg     25908 <create_domain+0x1428>
   25953:	mov    rbx,QWORD PTR [rsp+0x10]
   25958:	mov    rsi,QWORD PTR [rsp+0x1c8]
   25960:	mov    edi,DWORD PTR [rsp+0x328]
   25967:	jmp    2499b <create_domain+0x4bb>
   2596c:	nop    DWORD PTR [rax+0x0]
   25970:	mov    rax,QWORD PTR [rip+0x215679]        # 23aff0 <stderr@GLIBC_2.2.5>
   25977:	lea    rdi,[rip+0xe5fa]        # 33f78 <shutdown_reason_letters.11238+0xc48>
   2597e:	mov    edx,0x28
   25983:	mov    esi,0x1
   25988:	mov    rcx,QWORD PTR [rax]
   2598b:	call   c1b0 <fwrite@plt>
   25990:	jmp    24b8c <create_domain+0x6ac>
   25995:	nop    DWORD PTR [rax]
   25998:	call   ad80 <__errno_location@plt>
   2599d:	mov    edi,DWORD PTR [rax]
   2599f:	mov    r15d,0xfffffffa
   259a5:	call   c3b0 <strerror@plt>
   259aa:	mov    rcx,rax
   259ad:	mov    rax,QWORD PTR [rip+0x21563c]        # 23aff0 <stderr@GLIBC_2.2.5>
   259b4:	lea    rdx,[rip+0xddd2]        # 3378d <shutdown_reason_letters.11238+0x45d>
   259bb:	mov    esi,0x1
   259c0:	mov    rdi,QWORD PTR [rax]
   259c3:	xor    eax,eax
   259c5:	call   c1e0 <__fprintf_chk@plt>
   259ca:	jmp    248fa <create_domain+0x41a>
   259cf:	nop
   259d0:	xor    r12d,r12d
   259d3:	jmp    24887 <create_domain+0x3a7>
   259d8:	nop    DWORD PTR [rax+rax*1+0x0]
   259e0:	movzx  eax,BYTE PTR [rsp+0x5f0]
   259e8:	test   al,al
   259ea:	je     24b8c <create_domain+0x6ac>
   259f0:	movsx  ecx,al
   259f3:	mov    rax,QWORD PTR [rip+0x2155f6]        # 23aff0 <stderr@GLIBC_2.2.5>
   259fa:	lea    rdx,[rip+0xe5a7]        # 33fa8 <shutdown_reason_letters.11238+0xc78>
   25a01:	mov    esi,0x1
   25a06:	mov    rdi,QWORD PTR [rax]
   25a09:	xor    eax,eax
   25a0b:	call   c1e0 <__fprintf_chk@plt>
   25a10:	jmp    24b8c <create_domain+0x6ac>
   25a15:	nop    DWORD PTR [rax]
   25a18:	mov    rdi,QWORD PTR [r14]
   25a1b:	lea    rdx,[rip+0xe356]        # 33d78 <shutdown_reason_letters.11238+0xa48>
   25a22:	mov    esi,0x1
   25a27:	xor    eax,eax
   25a29:	mov    r15d,0xfffffffa
   25a2f:	call   c1e0 <__fprintf_chk@plt>
   25a34:	jmp    248fa <create_domain+0x41a>
   25a39:	mov    rsi,QWORD PTR [rsp+0x8]
   25a3e:	mov    edi,DWORD PTR [rsp+0x68]
   25a42:	call   23fa0 <reload_domain_config>
   25a47:	mov    r8d,DWORD PTR [rsp+0x68]
   25a4c:	lea    rcx,[rip+0xe6e5]        # 34138 <shutdown_reason_letters.11238+0xe08>
   25a53:	lea    rdx,[rip+0xe9b6]        # 34410 <__func__.10057>
   25a5a:	lea    rdi,[rip+0xdc7c]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25a61:	mov    esi,0x1cd
   25a66:	xor    eax,eax
   25a68:	call   e7b0 <dolog>
   25a6d:	mov    esi,DWORD PTR [rsp+0x68]
   25a71:	mov    rdi,QWORD PTR [r13+0x0]
   25a75:	xor    edx,edx
   25a77:	call   aed0 <libxl_domain_destroy@plt>
   25a7c:	mov    DWORD PTR [rsp+0x68],0xffffffff
   25a84:	jmp    25695 <create_domain+0x11b5>
   25a89:	mov    rcx,QWORD PTR [r14]
   25a8c:	lea    rdi,[rip+0xdd41]        # 337d4 <shutdown_reason_letters.11238+0x4a4>
   25a93:	mov    edx,0x14
   25a98:	mov    esi,0x1
   25a9d:	mov    r15d,0xfffffffa
   25aa3:	call   c1b0 <fwrite@plt>
   25aa8:	jmp    248fa <create_domain+0x41a>
   25aad:	mov    rdx,QWORD PTR [rsp+0x148]
   25ab5:	lea    rsi,[rip+0xddc3]        # 3387f <shutdown_reason_letters.11238+0x54f>
   25abc:	xor    eax,eax
   25abe:	mov    rdi,rbp
   25ac1:	call   e8e0 <xasprintf>
   25ac6:	mov    r8,QWORD PTR [rsp+0xb0]
   25ace:	lea    rcx,[rip+0xddbf]        # 33894 <shutdown_reason_letters.11238+0x564>
   25ad5:	lea    rdx,[rip+0xe934]        # 34410 <__func__.10057>
   25adc:	lea    rdi,[rip+0xdbfa]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25ae3:	xor    eax,eax
   25ae5:	mov    esi,0x1b2
   25aea:	call   e7b0 <dolog>
   25aef:	mov    rdx,QWORD PTR [rsp+0xb0]
   25af7:	mov    esi,DWORD PTR [rsp+0x68]
   25afb:	xor    ecx,ecx
   25afd:	mov    rdi,QWORD PTR [r13+0x0]
   25b01:	call   c0a0 <libxl_domain_core_dump@plt>
   25b06:	test   eax,eax
   25b08:	je     25b2e <create_domain+0x164e>
   25b0a:	lea    rcx,[rip+0xdd97]        # 338a8 <shutdown_reason_letters.11238+0x578>
   25b11:	lea    rdx,[rip+0xe8f8]        # 34410 <__func__.10057>
   25b18:	lea    rdi,[rip+0xdbbe]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25b1f:	mov    r8d,eax
   25b22:	mov    esi,0x1b4
   25b27:	xor    eax,eax
   25b29:	call   e7b0 <dolog>
   25b2e:	mov    rdi,QWORD PTR [rsp+0xb0]
   25b36:	call   ac40 <free@plt>
   25b3b:	cmp    r14d,0x5
   25b3f:	jne    25a39 <create_domain+0x1559>
   25b45:	mov    r8d,DWORD PTR [rsp+0x68]
   25b4a:	lea    rcx,[rip+0xe5e7]        # 34138 <shutdown_reason_letters.11238+0xe08>
   25b51:	lea    rdx,[rip+0xe8b8]        # 34410 <__func__.10057>
   25b58:	lea    rdi,[rip+0xdb7e]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25b5f:	mov    esi,0x1cd
   25b64:	xor    eax,eax
   25b66:	call   e7b0 <dolog>
   25b6b:	mov    esi,DWORD PTR [rsp+0x68]
   25b6f:	mov    rdi,QWORD PTR [r13+0x0]
   25b73:	xor    edx,edx
   25b75:	call   aed0 <libxl_domain_destroy@plt>
   25b7a:	mov    DWORD PTR [rsp+0x68],0xffffffff
   25b82:	jmp    2584f <create_domain+0x136f>
   25b87:	mov    rdi,rbp
   25b8a:	call   c360 <strdup@plt>
   25b8f:	mov    QWORD PTR [rsp+0x148],rax
   25b97:	jmp    25767 <create_domain+0x1287>
   25b9c:	mov    ebp,DWORD PTR [rsp+0x20]
   25ba0:	test   ebp,ebp
   25ba2:	sete   bl
   25ba5:	xor    ebp,ebp
   25ba7:	jmp    257bf <create_domain+0x12df>
   25bac:	lea    rax,[rip+0xdbd2]        # 33785 <shutdown_reason_letters.11238+0x455>
   25bb3:	mov    QWORD PTR [rsp+0x18],rax
   25bb8:	jmp    24764 <create_domain+0x284>
   25bbd:	lea    rcx,[rip+0xe50c]        # 340d0 <shutdown_reason_letters.11238+0xda0>
   25bc4:	lea    rdx,[rip+0xe845]        # 34410 <__func__.10057>
   25bcb:	lea    rdi,[rip+0xdb0b]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25bd2:	mov    esi,0x1a5
   25bd7:	xor    eax,eax
   25bd9:	mov    QWORD PTR [rsp+0x10],r11
   25bde:	call   e7b0 <dolog>
   25be3:	mov    edi,0x1
   25be8:	call   11750 <get_action_on_shutdown_name>
   25bed:	mov    r11,QWORD PTR [rsp+0x10]
   25bf2:	lea    rcx,[rip+0xe50f]        # 34108 <shutdown_reason_letters.11238+0xdd8>
   25bf9:	lea    rdx,[rip+0xe810]        # 34410 <__func__.10057>
   25c00:	lea    rdi,[rip+0xdad6]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25c07:	mov    r9,rax
   25c0a:	mov    esi,0x1ab
   25c0f:	xor    eax,eax
   25c11:	movzx  r8d,BYTE PTR [r11+0x38]
   25c16:	call   e7b0 <dolog>
   25c1b:	jmp    25b45 <create_domain+0x1665>
   25c20:	mov    rsi,QWORD PTR [rsp+0x8]
   25c25:	mov    edi,DWORD PTR [rsp+0x68]
   25c29:	call   23fa0 <reload_domain_config>
   25c2e:	jmp    2568a <create_domain+0x11aa>
   25c33:	xor    edi,edi
   25c35:	call   b8a0 <time@plt>
   25c3a:	cmp    rax,0xffffffffffffffff
   25c3e:	mov    QWORD PTR [rsp+0x88],rax
   25c46:	je     25d99 <create_domain+0x18b9>
   25c4c:	call   b850 <tzset@plt>
   25c51:	lea    rdi,[rsp+0x88]
   25c59:	mov    rsi,rbp
   25c5c:	call   b2a0 <gmtime_r@plt>
   25c61:	test   rax,rax
   25c64:	je     25df9 <create_domain+0x1919>
   25c6a:	lea    r14,[rsp+0x5f0]
   25c72:	lea    rdx,[rip+0xdc4a]        # 338c3 <shutdown_reason_letters.11238+0x593>
   25c79:	mov    rcx,rbp
   25c7c:	mov    esi,0x18
   25c81:	mov    rdi,r14
   25c84:	call   bde0 <strftime@plt>
   25c89:	test   rax,rax
   25c8c:	je     25dbf <create_domain+0x18df>
   25c92:	lea    rdi,[rsp+0xf0]
   25c9a:	call   b2d0 <libxl_uuid_generate@plt>
   25c9f:	sub    rsp,0x8
   25ca3:	lea    rcx,[rip+0xe546]        # 341f0 <shutdown_reason_letters.11238+0xec0>
   25caa:	lea    rdx,[rip+0xe72f]        # 343e0 <__func__.10082>
   25cb1:	push   r14
   25cb3:	mov    r9,QWORD PTR [rsp+0x158]
   25cbb:	lea    rdi,[rip+0xda1b]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25cc2:	mov    r8d,DWORD PTR [rsp+0x78]
   25cc7:	xor    eax,eax
   25cc9:	mov    esi,0x200
   25cce:	call   e7b0 <dolog>
   25cd3:	mov    r8,QWORD PTR [rsp+0x100]
   25cdb:	mov    r9,QWORD PTR [rsp+0x108]
   25ce3:	mov    rcx,r14
   25ce6:	mov    rdx,QWORD PTR [rsp+0x18]
   25ceb:	mov    esi,DWORD PTR [rsp+0x78]
   25cef:	mov    rdi,QWORD PTR [r13+0x0]
   25cf3:	call   b790 <libxl_domain_preserve@plt>
   25cf8:	mov    ecx,DWORD PTR [rsp+0x20]
   25cfc:	test   eax,eax
   25cfe:	mov    DWORD PTR [rsp+0x78],ecx
   25d02:	pop    rcx
   25d03:	pop    rsi
   25d04:	je     25695 <create_domain+0x11b5>
   25d0a:	mov    rsi,QWORD PTR [rsp+0x80]
   25d12:	mov    rdi,QWORD PTR [r13+0x0]
   25d16:	or     r15d,0xffffffff
   25d1a:	call   b280 <libxl_event_free@plt>
   25d1f:	jmp    2536a <create_domain+0xe8a>
   25d24:	nop    DWORD PTR [rax+0x0]
   25d28:	cmp    r14d,0x1
   25d2c:	jne    2584f <create_domain+0x136f>
   25d32:	jmp    25b45 <create_domain+0x1665>
   25d37:	test   r12d,r12d
   25d3a:	mov    r15d,ebx
   25d3d:	sete   bl
   25d40:	xor    r12d,r12d
   25d43:	jmp    24887 <create_domain+0x3a7>
   25d48:	test   r12d,r12d
   25d4b:	mov    ebp,ebx
   25d4d:	sete   bl
   25d50:	jmp    25218 <create_domain+0xd38>
   25d55:	mov    ebx,0x1
   25d5a:	xor    r12d,r12d
   25d5d:	jmp    24887 <create_domain+0x3a7>
   25d62:	call   ad80 <__errno_location@plt>
   25d67:	mov    r8d,DWORD PTR [rax]
   25d6a:	lea    rax,[rip+0x217127]        # 23ce98 <lockfile>
   25d71:	mov    ebp,ebx
   25d73:	mov    r14d,r12d
   25d76:	lea    rdx,[rip+0xe143]        # 33ec0 <shutdown_reason_letters.11238+0xb90>
   25d7d:	mov    rcx,QWORD PTR [rax]
   25d80:	jmp    251f6 <create_domain+0xd16>
   25d85:	cmp    r15d,0x1
   25d89:	je     25e76 <create_domain+0x1996>
   25d8f:	xor    ebx,ebx
   25d91:	xor    r12d,r12d
   25d94:	jmp    24887 <create_domain+0x3a7>
   25d99:	lea    rcx,[rip+0xe3d8]        # 34178 <shutdown_reason_letters.11238+0xe48>
   25da0:	lea    rdx,[rip+0xe639]        # 343e0 <__func__.10082>
   25da7:	lea    rdi,[rip+0xd92f]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25dae:	mov    esi,0x1ee
   25db3:	xor    eax,eax
   25db5:	call   e7b0 <dolog>
   25dba:	jmp    25d0a <create_domain+0x182a>
   25dbf:	lea    rcx,[rip+0xe402]        # 341c8 <shutdown_reason_letters.11238+0xe98>
   25dc6:	lea    rdx,[rip+0xe613]        # 343e0 <__func__.10082>
   25dcd:	lea    rdi,[rip+0xd909]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25dd4:	mov    esi,0x1f9
   25dd9:	call   e7b0 <dolog>
   25dde:	jmp    25d0a <create_domain+0x182a>
   25de3:	test   r12d,r12d
   25de6:	mov    eax,DWORD PTR [rip+0x216cd4]        # 23cac0 <fd_lock>
   25dec:	mov    ebp,0xfffffffd
   25df1:	sete   bl
   25df4:	jmp    25218 <create_domain+0xd38>
   25df9:	lea    rcx,[rip+0xe3a8]        # 341a8 <shutdown_reason_letters.11238+0xe78>
   25e00:	lea    rdx,[rip+0xe5d9]        # 343e0 <__func__.10082>
   25e07:	lea    rdi,[rip+0xd8cf]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25e0e:	mov    esi,0x1f4
   25e13:	call   e7b0 <dolog>
   25e18:	jmp    25d0a <create_domain+0x182a>
   25e1d:	mov    edi,DWORD PTR [rip+0x216c9d]        # 23cac0 <fd_lock>
   25e23:	mov    ebp,ebx
   25e25:	mov    r14d,r12d
   25e28:	call   b4a0 <close@plt>
   25e2d:	call   ad80 <__errno_location@plt>
   25e32:	mov    r8d,DWORD PTR [rax]
   25e35:	lea    rax,[rip+0x21705c]        # 23ce98 <lockfile>
   25e3c:	lea    rdx,[rip+0xe0a5]        # 33ee8 <shutdown_reason_letters.11238+0xbb8>
   25e43:	mov    rcx,QWORD PTR [rax]
   25e46:	jmp    251f6 <create_domain+0xd16>
   25e4b:	mov    rax,QWORD PTR [rip+0x21519e]        # 23aff0 <stderr@GLIBC_2.2.5>
   25e52:	lea    rdi,[rip+0xb4a7]        # 31300 <__PRETTY_FUNCTION__.10016+0x270>
   25e59:	mov    edx,0x25
   25e5e:	mov    esi,0x1
   25e63:	mov    r15d,0xfffffffd
   25e69:	mov    rcx,QWORD PTR [rax]
   25e6c:	call   c1b0 <fwrite@plt>
   25e71:	jmp    248fa <create_domain+0x41a>
   25e76:	mov    r15d,DWORD PTR [rsp+0x68]
   25e7b:	jmp    25d8f <create_domain+0x18af>
   25e80:	mov    rax,QWORD PTR [rip+0x215169]        # 23aff0 <stderr@GLIBC_2.2.5>
   25e87:	lea    rdi,[rip+0xdfca]        # 33e58 <shutdown_reason_letters.11238+0xb28>
   25e8e:	mov    edx,0x30
   25e93:	mov    esi,0x1
   25e98:	mov    r15d,0xfffffffa
   25e9e:	mov    rcx,QWORD PTR [rax]
   25ea1:	call   c1b0 <fwrite@plt>
   25ea6:	jmp    248fa <create_domain+0x41a>
   25eab:	mov    edi,r15d
   25eae:	call   c1a0 <exit@plt>
   25eb3:	call   b130 <__stack_chk_fail@plt>
   25eb8:	call   ad50 <abort@plt>
   25ebd:	mov    edi,eax
   25ebf:	call   c3b0 <strerror@plt>
   25ec4:	mov    r9,rax
   25ec7:	lea    rax,[rip+0xddd2]        # 33ca0 <shutdown_reason_letters.11238+0x970>
   25ece:	sub    rsp,0x8
   25ed2:	lea    rcx,[rip+0xd804]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25ed9:	lea    rdx,[rip+0x8410]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
   25ee0:	mov    r8d,0x2c0
   25ee6:	push   rax
   25ee7:	mov    rax,QWORD PTR [rip+0x215102]        # 23aff0 <stderr@GLIBC_2.2.5>
   25eee:	mov    esi,0x1
   25ef3:	mov    rdi,QWORD PTR [rax]
   25ef6:	xor    eax,eax
   25ef8:	call   c1e0 <__fprintf_chk@plt>
   25efd:	mov    edi,0x1
   25f02:	call   c1a0 <exit@plt>
   25f07:	lea    rcx,[rip+0xe54a]        # 34458 <__PRETTY_FUNCTION__.10163>
   25f0e:	lea    rsi,[rip+0xd7c8]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25f15:	lea    rdi,[rip+0xd8e5]        # 33801 <shutdown_reason_letters.11238+0x4d1>
   25f1c:	mov    edx,0x349
   25f21:	call   b2f0 <__assert_fail@plt>
   25f26:	mov    edi,eax
   25f28:	call   c3b0 <strerror@plt>
   25f2d:	mov    r9,rax
   25f30:	lea    rax,[rip+0xde91]        # 33dc8 <shutdown_reason_letters.11238+0xa98>
   25f37:	sub    rsp,0x8
   25f3b:	lea    rcx,[rip+0xd79b]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25f42:	lea    rdx,[rip+0x83a7]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
   25f49:	mov    r8d,0x2dc
   25f4f:	push   rax
   25f50:	mov    rdi,QWORD PTR [r14]
   25f53:	mov    esi,0x1
   25f58:	xor    eax,eax
   25f5a:	call   c1e0 <__fprintf_chk@plt>
   25f5f:	mov    edi,0x1
   25f64:	call   c1a0 <exit@plt>
   25f69:	lea    rcx,[rip+0xe4e8]        # 34458 <__PRETTY_FUNCTION__.10163>
   25f70:	lea    rsi,[rip+0xd766]        # 336dd <shutdown_reason_letters.11238+0x3ad>
   25f77:	lea    rdi,[rip+0xd8a0]        # 3381e <shutdown_reason_letters.11238+0x4ee>
   25f7e:	mov    edx,0x36a
   25f83:	call   b2f0 <__assert_fail@plt>
   25f88:	mov    rax,QWORD PTR [rip+0x215061]        # 23aff0 <stderr@GLIBC_2.2.5>
   25f8f:	lea    rdi,[rip+0xdefa]        # 33e90 <shutdown_reason_letters.11238+0xb60>
   25f96:	mov    edx,0x2f
   25f9b:	mov    esi,0x1
   25fa0:	mov    rcx,QWORD PTR [rax]
   25fa3:	call   c1b0 <fwrite@plt>
   25fa8:	mov    edi,0x1
   25fad:	call   c1a0 <exit@plt>
   25fb2:	nop    DWORD PTR [rax+0x0]
   25fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000025fc0 <main_create>:
   25fc0:	push   r15
   25fc2:	push   r14
   25fc4:	push   r13
   25fc6:	push   r12
   25fc8:	mov    r12d,edi
   25fcb:	push   rbp
   25fcc:	push   rbx
   25fcd:	mov    rbp,rsi
   25fd0:	sub    rsp,0xa8
   25fd7:	mov    r13,QWORD PTR [rsi+0x8]
   25fdb:	mov    rax,QWORD PTR fs:0x28
   25fe4:	mov    QWORD PTR [rsp+0x98],rax
   25fec:	xor    eax,eax
   25fee:	mov    QWORD PTR [rsp+0x68],0x0
   25ff7:	test   r13,r13
   25ffa:	je     2601c <main_create+0x5c>
   25ffc:	cmp    BYTE PTR [r13+0x0],0x2d
   26001:	je     26019 <main_create+0x59>
   26003:	mov    esi,0x3d
   26008:	mov    rdi,r13
   2600b:	call   b1c0 <strchr@plt>
   26010:	test   rax,rax
   26013:	je     262d0 <main_create+0x310>
   26019:	xor    r13d,r13d
   2601c:	lea    rbx,[rip+0xe2f5]        # 34318 <shutdown_reason_letters.11238+0xfe8>
   26023:	mov    DWORD PTR [rsp+0x18],0x0
   2602b:	mov    DWORD PTR [rsp+0x2c],0x0
   26033:	mov    DWORD PTR [rsp+0x10],0x0
   2603b:	mov    DWORD PTR [rsp+0x1c],0x1
   26043:	mov    DWORD PTR [rsp+0x20],0x0
   2604b:	mov    DWORD PTR [rsp+0x14],0x0
   26053:	mov    DWORD PTR [rsp+0x4],0x1
   2605b:	mov    DWORD PTR [rsp+0x24],0x0
   26063:	mov    DWORD PTR [rsp+0x28],0x0
   2606b:	nop    DWORD PTR [rax+rax*1+0x0]
   26070:	lea    r8,[rip+0x4169]        # 2a1e0 <__PRETTY_FUNCTION__.10113+0x5c8>
   26077:	lea    rcx,[rip+0x216a62]        # 23cae0 <opts.10216>
   2607e:	lea    rdx,[rip+0xd874]        # 338f9 <shutdown_reason_letters.11238+0x5c9>
   26085:	xor    r9d,r9d
   26088:	mov    rsi,rbp
   2608b:	mov    edi,r12d
   2608e:	call   ebe0 <def_getopt>
   26093:	cmp    eax,0xffffffff
   26096:	je     260e0 <main_create+0x120>
   26098:	sub    eax,0x41
   2609b:	cmp    eax,0x30
   2609e:	ja     26070 <main_create+0xb0>
   260a0:	movsxd rax,DWORD PTR [rbx+rax*4]
   260a4:	add    rax,rbx
   260a7:	jmp    rax
   260a9:	nop    DWORD PTR [rax+0x0]
   260b0:	mov    DWORD PTR [rsp+0x2c],0x1
   260b8:	mov    DWORD PTR [rsp+0x10],0x1
   260c0:	jmp    26070 <main_create+0xb0>
   260c2:	nop    WORD PTR [rax+rax*1+0x0]
   260c8:	mov    DWORD PTR [rsp+0x1c],0x0
   260d0:	mov    DWORD PTR [rsp+0x4],0x0
   260d8:	jmp    26070 <main_create+0xb0>
   260da:	nop    WORD PTR [rax+rax*1+0x0]
   260e0:	mov    rbx,QWORD PTR [rip+0x214ec1]        # 23afa8 <optind@GLIBC_2.2.5>
   260e7:	lea    rdi,[rsp+0x30]
   260ec:	xor    eax,eax
   260ee:	mov    ecx,0xd
   260f3:	mov    QWORD PTR [rsp+0x8],rdi
   260f8:	rep stos QWORD PTR es:[rdi],rax
   260fb:	mov    eax,DWORD PTR [rbx]
   260fd:	cmp    eax,r12d
   26100:	jge    26167 <main_create+0x1a7>
   26102:	mov    rdi,QWORD PTR [rsp+0x8]
   26107:	lea    r14,[rdi+0x38]
   2610b:	jmp    26136 <main_create+0x176>
   2610d:	nop    DWORD PTR [rax]
   26110:	mov    rsi,r15
   26113:	mov    rdi,r14
   26116:	call   ed40 <string_realloc_append>
   2611b:	lea    rsi,[rip+0x9244]        # 2f366 <__func__.10421+0xfde>
   26122:	mov    rdi,r14
   26125:	call   ed40 <string_realloc_append>
   2612a:	mov    eax,DWORD PTR [rbx]
   2612c:	add    eax,0x1
   2612f:	cmp    eax,r12d
   26132:	mov    DWORD PTR [rbx],eax
   26134:	jge    26167 <main_create+0x1a7>
   26136:	cdqe   
   26138:	mov    esi,0x3d
   2613d:	mov    r15,QWORD PTR [rbp+rax*8+0x0]
   26142:	mov    rdi,r15
   26145:	call   b1c0 <strchr@plt>
   2614a:	test   rax,rax
   2614d:	jne    26110 <main_create+0x150>
   2614f:	test   r13,r13
   26152:	jne    262b0 <main_create+0x2f0>
   26158:	mov    eax,DWORD PTR [rbx]
   2615a:	mov    r13,r15
   2615d:	add    eax,0x1
   26160:	cmp    eax,r12d
   26163:	mov    DWORD PTR [rbx],eax
   26165:	jl     26136 <main_create+0x176>
   26167:	mov    eax,DWORD PTR [rsp+0x24]
   2616b:	mov    rdi,QWORD PTR [rsp+0x8]
   26170:	mov    QWORD PTR [rsp+0x60],r13
   26175:	mov    QWORD PTR [rsp+0x84],0xffffffffffffffff
   26181:	mov    DWORD PTR [rsp+0x30],eax
   26185:	mov    eax,DWORD PTR [rsp+0x4]
   26189:	mov    DWORD PTR [rsp+0x34],eax
   2618d:	mov    eax,DWORD PTR [rsp+0x1c]
   26191:	mov    DWORD PTR [rsp+0x38],eax
   26195:	mov    eax,DWORD PTR [rsp+0x28]
   26199:	mov    DWORD PTR [rsp+0x3c],eax
   2619d:	lea    rax,[rip+0x216cec]        # 23ce90 <dryrun_only>
   261a4:	mov    eax,DWORD PTR [rax]
   261a6:	mov    DWORD PTR [rsp+0x40],eax
   261aa:	mov    eax,DWORD PTR [rsp+0x20]
   261ae:	mov    DWORD PTR [rsp+0x44],eax
   261b2:	mov    eax,DWORD PTR [rsp+0x10]
   261b6:	mov    DWORD PTR [rsp+0x48],eax
   261ba:	mov    eax,DWORD PTR [rsp+0x2c]
   261be:	mov    DWORD PTR [rsp+0x4c],eax
   261c2:	mov    eax,DWORD PTR [rsp+0x14]
   261c6:	mov    DWORD PTR [rsp+0x50],eax
   261ca:	mov    eax,DWORD PTR [rsp+0x18]
   261ce:	mov    DWORD PTR [rsp+0x58],eax
   261d2:	call   244e0 <create_domain>
   261d7:	test   eax,eax
   261d9:	js     26290 <main_create+0x2d0>
   261df:	mov    rdi,QWORD PTR [rsp+0x68]
   261e4:	call   ac40 <free@plt>
   261e9:	xor    eax,eax
   261eb:	mov    rdx,QWORD PTR [rsp+0x98]
   261f3:	xor    rdx,QWORD PTR fs:0x28
   261fc:	jne    262dd <main_create+0x31d>
   26202:	add    rsp,0xa8
   26209:	pop    rbx
   2620a:	pop    rbp
   2620b:	pop    r12
   2620d:	pop    r13
   2620f:	pop    r14
   26211:	pop    r15
   26213:	ret    
   26214:	nop    DWORD PTR [rax+0x0]
   26218:	mov    DWORD PTR [rsp+0x14],0x1
   26220:	jmp    26070 <main_create+0xb0>
   26225:	nop    DWORD PTR [rax]
   26228:	mov    DWORD PTR [rsp+0x20],0x1
   26230:	jmp    26070 <main_create+0xb0>
   26235:	nop    DWORD PTR [rax]
   26238:	mov    DWORD PTR [rsp+0x28],0x1
   26240:	jmp    26070 <main_create+0xb0>
   26245:	nop    DWORD PTR [rax]
   26248:	lea    rax,[rip+0x216c41]        # 23ce90 <dryrun_only>
   2624f:	mov    DWORD PTR [rax],0x1
   26255:	jmp    26070 <main_create+0xb0>
   2625a:	nop    WORD PTR [rax+rax*1+0x0]
   26260:	mov    DWORD PTR [rsp+0x18],0x1
   26268:	jmp    26070 <main_create+0xb0>
   2626d:	nop    DWORD PTR [rax]
   26270:	mov    rax,QWORD PTR [rip+0x214d49]        # 23afc0 <optarg@GLIBC_2.2.5>
   26277:	mov    r13,QWORD PTR [rax]
   2627a:	jmp    26070 <main_create+0xb0>
   2627f:	nop
   26280:	mov    DWORD PTR [rsp+0x24],0x1
   26288:	jmp    26070 <main_create+0xb0>
   2628d:	nop    DWORD PTR [rax]
   26290:	mov    rdi,QWORD PTR [rsp+0x68]
   26295:	mov    DWORD PTR [rsp+0x4],eax
   26299:	call   ac40 <free@plt>
   2629e:	mov    eax,DWORD PTR [rsp+0x4]
   262a2:	neg    eax
   262a4:	jmp    261eb <main_create+0x22b>
   262a9:	nop    DWORD PTR [rax+0x0]
   262b0:	lea    rdi,[rip+0x3f29]        # 2a1e0 <__PRETTY_FUNCTION__.10113+0x5c8>
   262b7:	call   d4f0 <help>
   262bc:	mov    rdi,QWORD PTR [rsp+0x68]
   262c1:	call   ac40 <free@plt>
   262c6:	mov    eax,0x2
   262cb:	jmp    261eb <main_create+0x22b>
   262d0:	sub    r12d,0x1
   262d4:	add    rbp,0x8
   262d8:	jmp    2601c <main_create+0x5c>
   262dd:	call   b130 <__stack_chk_fail@plt>
   262e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
   262ec:	nop    DWORD PTR [rax+0x0]

00000000000262f0 <save_domain_core_begin>:
   262f0:	push   r15
   262f2:	push   r14
   262f4:	mov    r15d,edi
   262f7:	push   r13
   262f9:	push   r12
   262fb:	mov    r14,rdx
   262fe:	push   rbp
   262ff:	push   rbx
   26300:	mov    rbp,rsi
   26303:	mov    r12,rcx
   26306:	sub    rsp,0x4d8
   2630d:	lea    rbx,[rsp+0x10]
   26312:	mov    rax,QWORD PTR fs:0x28
   2631b:	mov    QWORD PTR [rsp+0x4c8],rax
   26323:	xor    eax,eax
   26325:	mov    rdi,rbx
   26328:	call   b6e0 <libxl_domain_config_init@plt>
   2632d:	test   rbp,rbp
   26330:	je     263d8 <save_domain_core_begin+0xe8>
   26336:	lea    r13,[rip+0x216b23]        # 23ce60 <ctx>
   2633d:	lea    rdx,[rsp+0x8]
   26342:	mov    rcx,r12
   26345:	mov    rsi,rbp
   26348:	mov    QWORD PTR [rsp+0x8],0x0
   26351:	mov    rdi,QWORD PTR [r13+0x0]
   26355:	call   b320 <libxl_read_file_contents@plt>
   2635a:	test   eax,eax
   2635c:	jne    2644b <save_domain_core_begin+0x15b>
   26362:	mov    edx,DWORD PTR [r12]
   26366:	mov    rsi,QWORD PTR [rsp+0x8]
   2636b:	mov    rdi,rbp
   2636e:	mov    rcx,rbx
   26371:	call   140f0 <parse_config_data>
   26376:	mov    rdi,QWORD PTR [rsp+0x8]
   2637b:	call   ac40 <free@plt>
   26380:	mov    rdi,QWORD PTR [r13+0x0]
   26384:	mov    rsi,rbx
   26387:	call   bdc0 <libxl_domain_config_to_json@plt>
   2638c:	test   rax,rax
   2638f:	je     26421 <save_domain_core_begin+0x131>
   26395:	mov    rdi,rax
   26398:	mov    QWORD PTR [r14],rax
   2639b:	call   b0c0 <strlen@plt>
   263a0:	add    eax,0x1
   263a3:	mov    rdi,rbx
   263a6:	mov    DWORD PTR [r12],eax
   263aa:	call   bb40 <libxl_domain_config_dispose@plt>
   263af:	mov    rax,QWORD PTR [rsp+0x4c8]
   263b7:	xor    rax,QWORD PTR fs:0x28
   263c0:	jne    2641c <save_domain_core_begin+0x12c>
   263c2:	add    rsp,0x4d8
   263c9:	pop    rbx
   263ca:	pop    rbp
   263cb:	pop    r12
   263cd:	pop    r13
   263cf:	pop    r14
   263d1:	pop    r15
   263d3:	ret    
   263d4:	nop    DWORD PTR [rax+0x0]
   263d8:	lea    r13,[rip+0x216a81]        # 23ce60 <ctx>
   263df:	mov    rdx,rbx
   263e2:	mov    esi,r15d
   263e5:	mov    rdi,QWORD PTR [r13+0x0]
   263e9:	call   c430 <libxl_retrieve_domain_configuration@plt>
   263ee:	test   eax,eax
   263f0:	je     26380 <save_domain_core_begin+0x90>
   263f2:	mov    rax,QWORD PTR [rip+0x214bf7]        # 23aff0 <stderr@GLIBC_2.2.5>
   263f9:	lea    rdi,[rip+0xe0e8]        # 344e8 <savefileheader_magic+0x48>
   26400:	mov    edx,0x28
   26405:	mov    esi,0x1
   2640a:	mov    rcx,QWORD PTR [rax]
   2640d:	call   c1b0 <fwrite@plt>
   26412:	mov    edi,0x1
   26417:	call   c1a0 <exit@plt>
   2641c:	call   b130 <__stack_chk_fail@plt>
   26421:	mov    rax,QWORD PTR [rip+0x214bc8]        # 23aff0 <stderr@GLIBC_2.2.5>
   26428:	lea    rdi,[rip+0xe0e9]        # 34518 <savefileheader_magic+0x78>
   2642f:	mov    edx,0x26
   26434:	mov    esi,0x1
   26439:	mov    rcx,QWORD PTR [rax]
   2643c:	call   c1b0 <fwrite@plt>
   26441:	mov    edi,0x1
   26446:	call   c1a0 <exit@plt>
   2644b:	mov    rax,QWORD PTR [rip+0x214b9e]        # 23aff0 <stderr@GLIBC_2.2.5>
   26452:	lea    rdi,[rip+0xe067]        # 344c0 <savefileheader_magic+0x20>
   26459:	mov    edx,0x26
   2645e:	mov    esi,0x1
   26463:	mov    rcx,QWORD PTR [rax]
   26466:	call   c1b0 <fwrite@plt>
   2646b:	mov    edi,0x1
   26470:	call   c1a0 <exit@plt>
   26475:	nop
   26476:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000026480 <save_domain_core_writeconfig>:
   26480:	push   r14
   26482:	push   r13
   26484:	mov    r13d,edi
   26487:	push   r12
   26489:	push   rbp
   2648a:	xor    edi,edi
   2648c:	push   rbx
   2648d:	mov    r12,rsi
   26490:	mov    esi,0x4
   26495:	mov    ebx,ecx
   26497:	mov    r14,rdx
   2649a:	sub    rsp,0x40
   2649e:	movdqu xmm0,XMMWORD PTR [rip+0xe212]        # 346b8 <savefileheader_magic+0x218>
   264a6:	mov    rax,QWORD PTR fs:0x28
   264af:	mov    QWORD PTR [rsp+0x38],rax
   264b4:	xor    eax,eax
   264b6:	movaps XMMWORD PTR [rsp],xmm0
   264ba:	movabs rax,0x201020304
   264c4:	mov    DWORD PTR [rsp+0x28],0x0
   264cc:	mov    DWORD PTR [rsp+0x2c],0x4
   264d4:	movdqu xmm0,XMMWORD PTR [rip+0xe1ec]        # 346c8 <savefileheader_magic+0x228>
   264dc:	mov    QWORD PTR [rsp+0x20],rax
   264e1:	movaps XMMWORD PTR [rsp+0x10],xmm0
   264e6:	call   ea30 <xrealloc>
   264eb:	mov    rbp,rax
   264ee:	test   ebx,ebx
   264f0:	mov    eax,DWORD PTR [rsp+0x2c]
   264f4:	mov    DWORD PTR [rbp+rax*1-0x4],ebx
   264f8:	je     26529 <save_domain_core_writeconfig+0xa9>
   264fa:	mov    esi,ebx
   264fc:	add    esi,DWORD PTR [rsp+0x2c]
   26500:	mov    rdi,rbp
   26503:	mov    DWORD PTR [rsp+0x2c],esi
   26507:	call   ea30 <xrealloc>
   2650c:	mov    edi,DWORD PTR [rsp+0x2c]
   26510:	movsxd rdx,ebx
   26513:	mov    rsi,r14
   26516:	mov    rbp,rax
   26519:	sub    rdi,rdx
   2651c:	add    rdi,rax
   2651f:	call   b7e0 <memcpy@plt>
   26524:	or     DWORD PTR [rsp+0x24],0x1
   26529:	lea    rbx,[rip+0x216930]        # 23ce60 <ctx>
   26530:	lea    r9,[rip+0xd273]        # 337aa <shutdown_reason_letters.11238+0x47a>
   26537:	mov    rdx,rsp
   2653a:	mov    r8,r12
   2653d:	mov    ecx,0x30
   26542:	mov    esi,r13d
   26545:	mov    rdi,QWORD PTR [rbx]
   26548:	call   bdd0 <libxl_write_exactly@plt>
   2654d:	test   eax,eax
   2654f:	js     265d7 <save_domain_core_writeconfig+0x157>
   26555:	jne    2662b <save_domain_core_writeconfig+0x1ab>
   2655b:	mov    ecx,DWORD PTR [rsp+0x2c]
   2655f:	mov    rdi,QWORD PTR [rbx]
   26562:	lea    r9,[rip+0xd241]        # 337aa <shutdown_reason_letters.11238+0x47a>
   26569:	mov    r8,r12
   2656c:	mov    rdx,rbp
   2656f:	mov    esi,r13d
   26572:	call   bdd0 <libxl_write_exactly@plt>
   26577:	test   eax,eax
   26579:	js     265d7 <save_domain_core_writeconfig+0x157>
   2657b:	jne    265e1 <save_domain_core_writeconfig+0x161>
   2657d:	mov    rdi,rbp
   26580:	call   ac40 <free@plt>
   26585:	sub    rsp,0x8
   26589:	lea    rdx,[rip+0xe050]        # 345e0 <savefileheader_magic+0x140>
   26590:	mov    rcx,r12
   26593:	mov    eax,DWORD PTR [rsp+0x34]
   26597:	mov    esi,0x1
   2659c:	push   rax
   2659d:	mov    rax,QWORD PTR [rip+0x214a4c]        # 23aff0 <stderr@GLIBC_2.2.5>
   265a4:	mov    r9d,DWORD PTR [rsp+0x38]
   265a9:	mov    r8d,DWORD PTR [rsp+0x34]
   265ae:	mov    rdi,QWORD PTR [rax]
   265b1:	xor    eax,eax
   265b3:	call   c1e0 <__fprintf_chk@plt>
   265b8:	pop    rax
   265b9:	pop    rdx
   265ba:	mov    rax,QWORD PTR [rsp+0x38]
   265bf:	xor    rax,QWORD PTR fs:0x28
   265c8:	jne    265dc <save_domain_core_writeconfig+0x15c>
   265ca:	add    rsp,0x40
   265ce:	pop    rbx
   265cf:	pop    rbp
   265d0:	pop    r12
   265d2:	pop    r13
   265d4:	pop    r14
   265d6:	ret    
   265d7:	call   ad50 <abort@plt>
   265dc:	call   b130 <__stack_chk_fail@plt>
   265e1:	mov    edi,eax
   265e3:	call   c3b0 <strerror@plt>
   265e8:	mov    r9,rax
   265eb:	lea    rax,[rip+0xdf96]        # 34588 <savefileheader_magic+0xe8>
   265f2:	sub    rsp,0x8
   265f6:	mov    r8d,0x70
   265fc:	push   rax
   265fd:	mov    rax,QWORD PTR [rip+0x2149ec]        # 23aff0 <stderr@GLIBC_2.2.5>
   26604:	lea    rcx,[rip+0xe08d]        # 34698 <savefileheader_magic+0x1f8>
   2660b:	lea    rdx,[rip+0x7cde]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
   26612:	mov    esi,0x1
   26617:	mov    rdi,QWORD PTR [rax]
   2661a:	xor    eax,eax
   2661c:	call   c1e0 <__fprintf_chk@plt>
   26621:	mov    edi,0x1
   26626:	call   c1a0 <exit@plt>
   2662b:	mov    edi,eax
   2662d:	call   c3b0 <strerror@plt>
   26632:	mov    r9,rax
   26635:	lea    rax,[rip+0xdf04]        # 34540 <savefileheader_magic+0xa0>
   2663c:	sub    rsp,0x8
   26640:	mov    r8d,0x6d
   26646:	push   rax
   26647:	jmp    265fd <save_domain_core_writeconfig+0x17d>
   26649:	nop    DWORD PTR [rax+0x0]

0000000000026650 <main_restore>:
   26650:	push   r15
   26652:	push   r14
   26654:	xor    r15d,r15d
   26657:	push   r13
   26659:	push   r12
   2665b:	xor    r13d,r13d
   2665e:	push   rbp
   2665f:	push   rbx
   26660:	lea    rbx,[rip+0xe075]        # 346dc <savefileheader_magic+0x23c>
   26667:	mov    ebp,edi
   26669:	mov    r12,rsi
   2666c:	mov    r14d,0x1
   26672:	sub    rsp,0x88
   26679:	mov    rax,QWORD PTR fs:0x28
   26682:	mov    QWORD PTR [rsp+0x78],rax
   26687:	xor    eax,eax
   26689:	mov    DWORD PTR [rsp+0xc],0x0
   26691:	mov    DWORD PTR [rsp+0x4],0x0
   26699:	mov    DWORD PTR [rsp+0x8],0x1
   266a1:	mov    DWORD PTR [rsp],0x0
   266a8:	nop    DWORD PTR [rax+rax*1+0x0]
   266b0:	lea    r8,[rip+0x36f5]        # 29dac <__PRETTY_FUNCTION__.10113+0x194>
   266b7:	lea    rcx,[rip+0x2165a2]        # 23cc60 <opts.9950>
   266be:	lea    rdx,[rip+0xdfe4]        # 346a9 <savefileheader_magic+0x209>
   266c5:	mov    r9d,0x1
   266cb:	mov    rsi,r12
   266ce:	mov    edi,ebp
   266d0:	call   ebe0 <def_getopt>
   266d5:	cmp    eax,0xffffffff
   266d8:	je     26740 <main_restore+0xf0>
   266da:	sub    eax,0x41
   266dd:	cmp    eax,0x2f
   266e0:	ja     266b0 <main_restore+0x60>
   266e2:	movsxd rax,DWORD PTR [rbx+rax*4]
   266e6:	add    rax,rbx
   266e9:	jmp    rax
   266eb:	nop    DWORD PTR [rax+rax*1+0x0]
   266f0:	mov    DWORD PTR [rsp+0xc],0x1
   266f8:	mov    r13d,0x1
   266fe:	jmp    266b0 <main_restore+0x60>
   26700:	mov    DWORD PTR [rsp+0x8],0x0
   26708:	xor    r14d,r14d
   2670b:	jmp    266b0 <main_restore+0x60>
   2670d:	nop    DWORD PTR [rax]
   26710:	mov    DWORD PTR [rsp],0x1
   26717:	jmp    266b0 <main_restore+0x60>
   26719:	nop    DWORD PTR [rax+0x0]
   26720:	mov    r15d,0x1
   26726:	jmp    266b0 <main_restore+0x60>
   26728:	nop    DWORD PTR [rax+rax*1+0x0]
   26730:	mov    DWORD PTR [rsp+0x4],0x1
   26738:	jmp    266b0 <main_restore+0x60>
   2673d:	nop    DWORD PTR [rax]
   26740:	mov    rax,QWORD PTR [rip+0x214861]        # 23afa8 <optind@GLIBC_2.2.5>
   26747:	movsxd rax,DWORD PTR [rax]
   2674a:	sub    ebp,eax
   2674c:	cmp    ebp,0x1
   2674f:	je     26808 <main_restore+0x1b8>
   26755:	cmp    ebp,0x2
   26758:	jne    267f0 <main_restore+0x1a0>
   2675e:	mov    r9,QWORD PTR [r12+rax*8]
   26762:	mov    r8,QWORD PTR [r12+rax*8+0x8]
   26767:	lea    rsi,[rsp+0x20]
   2676c:	xor    eax,eax
   2676e:	mov    ecx,0xb
   26773:	lea    rdx,[rsp+0x10]
   26778:	mov    DWORD PTR [rsp+0x10],r15d
   2677d:	mov    DWORD PTR [rsp+0x14],r14d
   26782:	mov    rdi,rsi
   26785:	rep stos QWORD PTR es:[rdi],rax
   26788:	mov    eax,DWORD PTR [rsp+0x8]
   2678c:	mov    rdi,rdx
   2678f:	mov    QWORD PTR [rsp+0x40],r9
   26794:	mov    QWORD PTR [rsp+0x50],r8
   26799:	mov    QWORD PTR [rsp+0x64],0xffffffffffffffff
   267a2:	mov    DWORD PTR [rsp+0x28],r13d
   267a7:	mov    DWORD PTR [rsp+0x18],eax
   267ab:	mov    eax,DWORD PTR [rsp]
   267ae:	mov    DWORD PTR [rsp+0x1c],eax
   267b2:	mov    eax,DWORD PTR [rsp+0xc]
   267b6:	mov    DWORD PTR [rsp+0x2c],eax
   267ba:	mov    eax,DWORD PTR [rsp+0x4]
   267be:	mov    DWORD PTR [rsp+0x30],eax
   267c2:	call   244e0 <create_domain>
   267c7:	shr    eax,0x1f
   267ca:	mov    rcx,QWORD PTR [rsp+0x78]
   267cf:	xor    rcx,QWORD PTR fs:0x28
   267d8:	jne    26814 <main_restore+0x1c4>
   267da:	add    rsp,0x88
   267e1:	pop    rbx
   267e2:	pop    rbp
   267e3:	pop    r12
   267e5:	pop    r13
   267e7:	pop    r14
   267e9:	pop    r15
   267eb:	ret    
   267ec:	nop    DWORD PTR [rax+0x0]
   267f0:	lea    rdi,[rip+0x35b5]        # 29dac <__PRETTY_FUNCTION__.10113+0x194>
   267f7:	call   d4f0 <help>
   267fc:	mov    eax,0x1
   26801:	jmp    267ca <main_restore+0x17a>
   26803:	nop    DWORD PTR [rax+rax*1+0x0]
   26808:	mov    r8,QWORD PTR [r12+rax*8]
   2680c:	xor    r9d,r9d
   2680f:	jmp    26767 <main_restore+0x117>
   26814:	call   b130 <__stack_chk_fail@plt>
   26819:	nop    DWORD PTR [rax+0x0]

0000000000026820 <main_save>:
   26820:	push   r15
   26822:	push   r14
   26824:	mov    r14d,0x1
   2682a:	push   r13
   2682c:	push   r12
   2682e:	xor    r13d,r13d
   26831:	push   rbp
   26832:	push   rbx
   26833:	mov    r12,rsi
   26836:	mov    ebx,edi
   26838:	xor    ebp,ebp
   2683a:	sub    rsp,0x28
   2683e:	mov    rax,QWORD PTR fs:0x28
   26847:	mov    QWORD PTR [rsp+0x18],rax
   2684c:	xor    eax,eax
   2684e:	xchg   ax,ax
   26850:	lea    r8,[rip+0x3536]        # 29d8d <__PRETTY_FUNCTION__.10113+0x175>
   26857:	lea    rdx,[rip+0xde54]        # 346b2 <savefileheader_magic+0x212>
   2685e:	xor    ecx,ecx
   26860:	mov    r9d,0x2
   26866:	mov    rsi,r12
   26869:	mov    edi,ebx
   2686b:	call   ebe0 <def_getopt>
   26870:	cmp    eax,0xffffffff
   26873:	je     26890 <main_save+0x70>
   26875:	cmp    eax,0x63
   26878:	je     26888 <main_save+0x68>
   2687a:	cmp    eax,0x70
   2687d:	cmove  ebp,r14d
   26881:	jmp    26850 <main_save+0x30>
   26883:	nop    DWORD PTR [rax+rax*1+0x0]
   26888:	mov    r13d,0x1
   2688e:	jmp    26850 <main_save+0x30>
   26890:	mov    r15,QWORD PTR [rip+0x214711]        # 23afa8 <optind@GLIBC_2.2.5>
   26897:	mov    edx,ebx
   26899:	movsxd rax,DWORD PTR [r15]
   2689c:	sub    edx,eax
   2689e:	cmp    edx,0x3
   268a1:	jle    268d7 <main_save+0xb7>
   268a3:	lea    rdi,[rip+0x34e3]        # 29d8d <__PRETTY_FUNCTION__.10113+0x175>
   268aa:	call   d4f0 <help>
   268af:	mov    rcx,QWORD PTR [rsp+0x18]
   268b4:	xor    rcx,QWORD PTR fs:0x28
   268bd:	mov    eax,0x1
   268c2:	jne    269b1 <main_save+0x191>
   268c8:	add    rsp,0x28
   268cc:	pop    rbx
   268cd:	pop    rbp
   268ce:	pop    r12
   268d0:	pop    r13
   268d2:	pop    r14
   268d4:	pop    r15
   268d6:	ret    
   268d7:	mov    rdi,QWORD PTR [r12+rax*8]
   268db:	call   eb40 <find_domain>
   268e0:	mov    r14d,eax
   268e3:	movsxd rax,DWORD PTR [r15]
   268e6:	xor    esi,esi
   268e8:	mov    rdx,rax
   268eb:	add    rax,0x1
   268ef:	sub    ebx,edx
   268f1:	lea    rcx,[rax*8+0x0]
   268f9:	mov    r15,QWORD PTR [r12+rax*8]
   268fd:	cmp    ebx,0x2
   26900:	jle    26907 <main_save+0xe7>
   26902:	mov    rsi,QWORD PTR [r12+rcx*1+0x8]
   26907:	lea    rcx,[rsp+0xc]
   2690c:	lea    rdx,[rsp+0x10]
   26911:	mov    edi,r14d
   26914:	call   262f0 <save_domain_core_begin>
   26919:	cmp    DWORD PTR [rsp+0xc],0x0
   2691e:	je     269c2 <main_save+0x1a2>
   26924:	xor    eax,eax
   26926:	mov    edx,0x1a4
   2692b:	mov    esi,0x241
   26930:	mov    rdi,r15
   26933:	call   bf20 <open@plt>
   26938:	test   eax,eax
   2693a:	mov    ebx,eax
   2693c:	js     26a09 <main_save+0x1e9>
   26942:	mov    ecx,DWORD PTR [rsp+0xc]
   26946:	mov    rdx,QWORD PTR [rsp+0x10]
   2694b:	mov    rsi,r15
   2694e:	mov    edi,eax
   26950:	call   26480 <save_domain_core_writeconfig>
   26955:	lea    r12,[rip+0x216504]        # 23ce60 <ctx>
   2695c:	xor    r8d,r8d
   2695f:	xor    ecx,ecx
   26961:	mov    edx,ebx
   26963:	mov    esi,r14d
   26966:	mov    rdi,QWORD PTR [r12]
   2696a:	call   bf80 <libxl_domain_suspend@plt>
   2696f:	mov    edi,ebx
   26971:	mov    r15d,eax
   26974:	call   b4a0 <close@plt>
   26979:	test   r15d,r15d
   2697c:	js     269e7 <main_save+0x1c7>
   2697e:	or     r13d,ebp
   26981:	mov    rdi,QWORD PTR [r12]
   26985:	je     269b6 <main_save+0x196>
   26987:	test   ebp,ebp
   26989:	je     26993 <main_save+0x173>
   2698b:	mov    esi,r14d
   2698e:	call   bf60 <libxl_domain_pause@plt>
   26993:	mov    rdi,QWORD PTR [r12]
   26997:	xor    ecx,ecx
   26999:	mov    edx,0x1
   2699e:	mov    esi,r14d
   269a1:	call   b630 <libxl_domain_resume@plt>
   269a6:	mov    edi,r15d
   269a9:	shr    edi,0x1f
   269ac:	call   c1a0 <exit@plt>
   269b1:	call   b130 <__stack_chk_fail@plt>
   269b6:	xor    edx,edx
   269b8:	mov    esi,r14d
   269bb:	call   aed0 <libxl_domain_destroy@plt>
   269c0:	jmp    269a6 <main_save+0x186>
   269c2:	mov    rax,QWORD PTR [rip+0x214627]        # 23aff0 <stderr@GLIBC_2.2.5>
   269c9:	lea    rdi,[rip+0xdc40]        # 34610 <savefileheader_magic+0x170>
   269d0:	mov    edx,0x2c
   269d5:	mov    esi,0x1
   269da:	mov    rcx,QWORD PTR [rax]
   269dd:	call   c1b0 <fwrite@plt>
   269e2:	jmp    26924 <main_save+0x104>
   269e7:	mov    rax,QWORD PTR [rip+0x214602]        # 23aff0 <stderr@GLIBC_2.2.5>
   269ee:	lea    rdi,[rip+0xdc7b]        # 34670 <savefileheader_magic+0x1d0>
   269f5:	mov    edx,0x27
   269fa:	mov    esi,0x1
   269ff:	mov    rcx,QWORD PTR [rax]
   26a02:	call   c1b0 <fwrite@plt>
   26a07:	jmp    26993 <main_save+0x173>
   26a09:	mov    rax,QWORD PTR [rip+0x2145e0]        # 23aff0 <stderr@GLIBC_2.2.5>
   26a10:	lea    rdx,[rip+0xdc29]        # 34640 <savefileheader_magic+0x1a0>
   26a17:	mov    rcx,r15
   26a1a:	mov    esi,0x1
   26a1f:	mov    rdi,QWORD PTR [rax]
   26a22:	xor    eax,eax
   26a24:	call   c1e0 <__fprintf_chk@plt>
   26a29:	mov    edi,0x1
   26a2e:	call   c1a0 <exit@plt>
   26a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
   26a3d:	nop    DWORD PTR [rax]

0000000000026a40 <migrate_read_fixedmessage>:
   26a40:	push   rbp
   26a41:	mov    r9,rcx
   26a44:	mov    rbp,rsp
   26a47:	push   r15
   26a49:	push   r14
   26a4b:	push   r13
   26a4d:	push   r12
   26a4f:	lea    r12,[rip+0xdd46]        # 3479c <savefileheader_magic+0x2fc>
   26a56:	push   rbx
   26a57:	movsxd rbx,edx
   26a5a:	mov    r15,rsi
   26a5d:	mov    esi,edi
   26a5f:	mov    r14,rcx
   26a62:	mov    r13,r8
   26a65:	sub    rsp,0x18
   26a69:	mov    rcx,rbx
   26a6c:	mov    rax,QWORD PTR fs:0x28
   26a75:	mov    QWORD PTR [rbp-0x38],rax
   26a79:	xor    eax,eax
   26a7b:	lea    rax,[rbx+0xf]
   26a7f:	and    rax,0xfffffffffffffff0
   26a83:	sub    rsp,rax
   26a86:	lea    rax,[rip+0xdd29]        # 347b6 <savefileheader_magic+0x316>
   26a8d:	test   r8,r8
   26a90:	mov    rdx,rsp
   26a93:	cmove  r12,rax
   26a97:	lea    rax,[rip+0x2163c2]        # 23ce60 <ctx>
   26a9e:	mov    r8,r12
   26aa1:	mov    rdi,QWORD PTR [rax]
   26aa4:	call   bba0 <libxl_read_exactly@plt>
   26aa9:	test   eax,eax
   26aab:	jne    26b28 <migrate_read_fixedmessage+0xe8>
   26aad:	mov    rdx,rbx
   26ab0:	mov    rsi,r15
   26ab3:	mov    rdi,rsp
   26ab6:	call   b5a0 <memcmp@plt>
   26abb:	test   eax,eax
   26abd:	jne    26ae0 <migrate_read_fixedmessage+0xa0>
   26abf:	mov    rcx,QWORD PTR [rbp-0x38]
   26ac3:	xor    rcx,QWORD PTR fs:0x28
   26acc:	jne    26b2f <migrate_read_fixedmessage+0xef>
   26ace:	lea    rsp,[rbp-0x28]
   26ad2:	pop    rbx
   26ad3:	pop    r12
   26ad5:	pop    r13
   26ad7:	pop    r14
   26ad9:	pop    r15
   26adb:	pop    rbp
   26adc:	ret    
   26add:	nop    DWORD PTR [rax]
   26ae0:	mov    rbx,QWORD PTR [rip+0x214509]        # 23aff0 <stderr@GLIBC_2.2.5>
   26ae7:	lea    rdx,[rip+0xdeea]        # 349d8 <savefileheader_magic+0x538>
   26aee:	xor    eax,eax
   26af0:	mov    r8,r14
   26af3:	mov    rcx,r12
   26af6:	mov    esi,0x1
   26afb:	mov    rdi,QWORD PTR [rbx]
   26afe:	call   c1e0 <__fprintf_chk@plt>
   26b03:	test   r13,r13
   26b06:	je     26b28 <migrate_read_fixedmessage+0xe8>
   26b08:	mov    rdi,QWORD PTR [rbx]
   26b0b:	lea    rdx,[rip+0xdcb5]        # 347c7 <savefileheader_magic+0x327>
   26b12:	mov    rcx,r13
   26b15:	mov    esi,0x1
   26b1a:	xor    eax,eax
   26b1c:	call   c1e0 <__fprintf_chk@plt>
   26b21:	nop    DWORD PTR [rax+0x0]
   26b28:	mov    eax,0x1
   26b2d:	jmp    26abf <migrate_read_fixedmessage+0x7f>
   26b2f:	call   b130 <__stack_chk_fail@plt>
   26b34:	xchg   ax,ax
   26b36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000026b40 <create_migration_child>:
   26b40:	push   r13
   26b42:	push   r12
   26b44:	push   rbp
   26b45:	push   rbx
   26b46:	sub    rsp,0x28
   26b4a:	mov    rax,QWORD PTR fs:0x28
   26b53:	mov    QWORD PTR [rsp+0x18],rax
   26b58:	xor    eax,eax
   26b5a:	test   rdi,rdi
   26b5d:	je     26c08 <create_migration_child+0xc8>
   26b63:	lea    rbx,[rip+0x2162f6]        # 23ce60 <ctx>
   26b6a:	mov    rbp,rdi
   26b6d:	mov    r13,rsi
   26b70:	lea    rsi,[rsp+0x8]
   26b75:	mov    r12,rdx
   26b78:	mov    rdi,QWORD PTR [rbx]
   26b7b:	call   c540 <libxl_pipe@plt>
   26b80:	test   eax,eax
   26b82:	js     26cc8 <create_migration_child+0x188>
   26b88:	mov    rdi,QWORD PTR [rbx]
   26b8b:	lea    rsi,[rsp+0x10]
   26b90:	call   c540 <libxl_pipe@plt>
   26b95:	test   eax,eax
   26b97:	js     26c85 <create_migration_child+0x145>
   26b9d:	lea    rsi,[rip+0xdc7c]        # 34820 <savefileheader_magic+0x380>
   26ba4:	mov    edi,0x2
   26ba9:	call   d1c0 <xl_fork>
   26bae:	test   eax,eax
   26bb0:	mov    ebx,eax
   26bb2:	je     26c14 <create_migration_child+0xd4>
   26bb4:	mov    edi,DWORD PTR [rsp+0x8]
   26bb8:	call   b4a0 <close@plt>
   26bbd:	mov    edi,DWORD PTR [rsp+0x14]
   26bc1:	call   b4a0 <close@plt>
   26bc6:	mov    eax,DWORD PTR [rsp+0xc]
   26bca:	mov    esi,0x1
   26bcf:	mov    edi,0xd
   26bd4:	mov    DWORD PTR [r13+0x0],eax
   26bd8:	mov    eax,DWORD PTR [rsp+0x10]
   26bdc:	mov    DWORD PTR [r12],eax
   26be0:	call   b690 <signal@plt>
   26be5:	mov    rcx,QWORD PTR [rsp+0x18]
   26bea:	xor    rcx,QWORD PTR fs:0x28
   26bf3:	mov    eax,ebx
   26bf5:	jne    26c0f <create_migration_child+0xcf>
   26bf7:	add    rsp,0x28
   26bfb:	pop    rbx
   26bfc:	pop    rbp
   26bfd:	pop    r12
   26bff:	pop    r13
   26c01:	ret    
   26c02:	nop    WORD PTR [rax+rax*1+0x0]
   26c08:	mov    ebx,0xffffffff
   26c0d:	jmp    26be5 <create_migration_child+0xa5>
   26c0f:	call   b130 <__stack_chk_fail@plt>
   26c14:	mov    edi,DWORD PTR [rsp+0x8]
   26c18:	xor    esi,esi
   26c1a:	call   b1b0 <dup2@plt>
   26c1f:	mov    edi,DWORD PTR [rsp+0x14]
   26c23:	mov    esi,0x1
   26c28:	call   b1b0 <dup2@plt>
   26c2d:	mov    edi,DWORD PTR [rsp+0x8]
   26c31:	call   b4a0 <close@plt>
   26c36:	mov    edi,DWORD PTR [rsp+0xc]
   26c3a:	call   b4a0 <close@plt>
   26c3f:	mov    edi,DWORD PTR [rsp+0x10]
   26c43:	call   b4a0 <close@plt>
   26c48:	mov    edi,DWORD PTR [rsp+0x14]
   26c4c:	call   b4a0 <close@plt>
   26c51:	lea    rsi,[rip+0xdbf6]        # 3484e <savefileheader_magic+0x3ae>
   26c58:	lea    rdx,[rip+0xdbdd]        # 3483c <savefileheader_magic+0x39c>
   26c5f:	xor    r8d,r8d
   26c62:	mov    rcx,rbp
   26c65:	xor    eax,eax
   26c67:	mov    rdi,rsi
   26c6a:	call   c3a0 <execlp@plt>
   26c6f:	lea    rdi,[rip+0xdbc9]        # 3483f <savefileheader_magic+0x39f>
   26c76:	call   bfd0 <perror@plt>
   26c7b:	mov    edi,0x1
   26c80:	call   c1a0 <exit@plt>
   26c85:	lea    rdx,[rip+0xdb7a]        # 34806 <savefileheader_magic+0x366>
   26c8c:	sub    rsp,0x8
   26c90:	mov    r9d,eax
   26c93:	mov    r8d,0x2d
   26c99:	push   rdx
   26c9a:	mov    rax,QWORD PTR [rip+0x21434f]        # 23aff0 <stderr@GLIBC_2.2.5>
   26ca1:	lea    rcx,[rip+0xdb37]        # 347df <savefileheader_magic+0x33f>
   26ca8:	lea    rdx,[rip+0xdd59]        # 34a08 <savefileheader_magic+0x568>
   26caf:	mov    esi,0x1
   26cb4:	mov    rdi,QWORD PTR [rax]
   26cb7:	xor    eax,eax
   26cb9:	call   c1e0 <__fprintf_chk@plt>
   26cbe:	mov    edi,0x1
   26cc3:	call   c1a0 <exit@plt>
   26cc8:	lea    rcx,[rip+0xdb1d]        # 347ec <savefileheader_magic+0x34c>
   26ccf:	sub    rsp,0x8
   26cd3:	mov    r9d,eax
   26cd6:	mov    r8d,0x2c
   26cdc:	push   rcx
   26cdd:	jmp    26c9a <create_migration_child+0x15a>
   26cdf:	nop

0000000000026ce0 <migration_child_report.part.0>:
   26ce0:	push   r15
   26ce2:	push   r14
   26ce4:	xor    esi,esi
   26ce6:	push   r13
   26ce8:	push   r12
   26cea:	push   rbp
   26ceb:	push   rbx
   26cec:	mov    ebx,edi
   26cee:	sub    rsp,0x178
   26cf5:	lea    rdi,[rsp+0x40]
   26cfa:	mov    rax,QWORD PTR fs:0x28
   26d03:	mov    QWORD PTR [rsp+0x168],rax
   26d0b:	xor    eax,eax
   26d0d:	call   b2e0 <gettimeofday@plt>
   26d12:	cmp    eax,0xffffffff
   26d15:	je     26fef <migration_child_report.part.0+0x30f>
   26d1b:	lea    rax,[rsp+0x30]
   26d20:	add    QWORD PTR [rsp+0x40],0x2
   26d26:	lea    r14,[rsp+0x2c]
   26d2b:	lea    r13,[rsp+0x60]
   26d30:	mov    QWORD PTR [rsp+0x10],rax
   26d35:	lea    rax,[rsp+0x50]
   26d3a:	mov    QWORD PTR [rsp+0x18],rax
   26d3f:	lea    rax,[rsp+0xe0]
   26d47:	mov    QWORD PTR [rsp+0x8],rax
   26d4c:	nop    DWORD PTR [rax+0x0]
   26d50:	mov    edi,0x2
   26d55:	call   d340 <xl_child_pid>
   26d5a:	mov    edx,0x1
   26d5f:	mov    ebp,eax
   26d61:	mov    rsi,r14
   26d64:	mov    edi,0x2
   26d69:	call   d260 <xl_waitpid>
   26d6e:	cmp    ebp,eax
   26d70:	je     26ee5 <migration_child_report.part.0+0x205>
   26d76:	cmp    eax,0xffffffff
   26d79:	je     26f29 <migration_child_report.part.0+0x249>
   26d7f:	test   eax,eax
   26d81:	jne    26fcb <migration_child_report.part.0+0x2eb>
   26d87:	mov    rdi,QWORD PTR [rsp+0x10]
   26d8c:	xor    esi,esi
   26d8e:	call   b2e0 <gettimeofday@plt>
   26d93:	cmp    eax,0xffffffff
   26d96:	je     26f7c <migration_child_report.part.0+0x29c>
   26d9c:	mov    rdx,QWORD PTR [rsp+0x30]
   26da1:	mov    rax,QWORD PTR [rsp+0x40]
   26da6:	cmp    rdx,rax
   26da9:	setg   cl
   26dac:	cmp    rdx,rax
   26daf:	jne    26dbe <migration_child_report.part.0+0xde>
   26db1:	mov    rsi,QWORD PTR [rsp+0x48]
   26db6:	cmp    QWORD PTR [rsp+0x38],rsi
   26dbb:	setg   cl
   26dbe:	test   cl,cl
   26dc0:	jne    26f5a <migration_child_report.part.0+0x27a>
   26dc6:	sub    rax,rdx
   26dc9:	mov    rdx,QWORD PTR [rsp+0x48]
   26dce:	sub    rdx,QWORD PTR [rsp+0x38]
   26dd3:	mov    QWORD PTR [rsp+0x50],rax
   26dd8:	test   rdx,rdx
   26ddb:	mov    QWORD PTR [rsp+0x58],rdx
   26de0:	jns    26df7 <migration_child_report.part.0+0x117>
   26de2:	sub    rax,0x1
   26de6:	add    rdx,0xf4240
   26ded:	mov    QWORD PTR [rsp+0x50],rax
   26df2:	mov    QWORD PTR [rsp+0x58],rdx
   26df7:	test   ebx,ebx
   26df9:	js     26e70 <migration_child_report.part.0+0x190>
   26dfb:	mov    edx,0x10
   26e00:	xor    eax,eax
   26e02:	mov    rdi,r13
   26e05:	mov    rcx,rdx
   26e08:	cld    
   26e09:	rep stos QWORD PTR es:[rdi],rax
   26e0c:	mov    rcx,rdx
   26e0f:	mov    rdi,QWORD PTR [rsp+0x8]
   26e14:	cld    
   26e15:	rep stos QWORD PTR es:[rdi],rax
   26e18:	movsxd r12,ebx
   26e1b:	mov    rdi,r12
   26e1e:	call   b240 <__fdelt_chk@plt>
   26e23:	mov    ecx,ebx
   26e25:	mov    edx,0x1
   26e2a:	mov    rdi,r12
   26e2d:	shl    rdx,cl
   26e30:	or     QWORD PTR [rsp+rax*8+0x60],rdx
   26e35:	mov    r15,rdx
   26e38:	call   b240 <__fdelt_chk@plt>
   26e3d:	mov    r8,QWORD PTR [rsp+0x18]
   26e42:	lea    edi,[rbx+0x1]
   26e45:	xor    edx,edx
   26e47:	mov    rcx,QWORD PTR [rsp+0x8]
   26e4c:	mov    rsi,r13
   26e4f:	or     QWORD PTR [rsp+rax*8+0xe0],r15
   26e57:	call   b900 <select@plt>
   26e5c:	test   eax,eax
   26e5e:	jle    26eb0 <migration_child_report.part.0+0x1d0>
   26e60:	mov    ebx,0xffffffff
   26e65:	jmp    26d50 <migration_child_report.part.0+0x70>
   26e6a:	nop    WORD PTR [rax+rax*1+0x0]
   26e70:	cmp    QWORD PTR [rsp+0x50],0x0
   26e76:	jne    26ee0 <migration_child_report.part.0+0x200>
   26e78:	cmp    QWORD PTR [rsp+0x58],0x3e8
   26e81:	setg   al
   26e84:	test   al,al
   26e86:	je     26e9a <migration_child_report.part.0+0x1ba>
   26e88:	mov    QWORD PTR [rsp+0x50],0x0
   26e91:	mov    QWORD PTR [rsp+0x58],0x3e8
   26e9a:	mov    r8,QWORD PTR [rsp+0x18]
   26e9f:	xor    ecx,ecx
   26ea1:	xor    edx,edx
   26ea3:	xor    esi,esi
   26ea5:	xor    edi,edi
   26ea7:	call   b900 <select@plt>
   26eac:	test   eax,eax
   26eae:	jg     26e60 <migration_child_report.part.0+0x180>
   26eb0:	cmp    eax,0xffffffff
   26eb3:	jne    26d50 <migration_child_report.part.0+0x70>
   26eb9:	call   ad80 <__errno_location@plt>
   26ebe:	mov    edi,DWORD PTR [rax]
   26ec0:	cmp    edi,0x4
   26ec3:	je     26d50 <migration_child_report.part.0+0x70>
   26ec9:	call   c3b0 <strerror@plt>
   26ece:	movsxd rcx,ebp
   26ed1:	mov    r8,rax
   26ed4:	lea    rdx,[rip+0xdbdd]        # 34ab8 <savefileheader_magic+0x618>
   26edb:	jmp    26f42 <migration_child_report.part.0+0x262>
   26edd:	nop    DWORD PTR [rax]
   26ee0:	setg   al
   26ee3:	jmp    26e84 <migration_child_report.part.0+0x1a4>
   26ee5:	mov    ecx,DWORD PTR [rsp+0x2c]
   26ee9:	test   ecx,ecx
   26eeb:	je     26f00 <migration_child_report.part.0+0x220>
   26eed:	mov    edx,ebp
   26eef:	mov    esi,0x2
   26ef4:	mov    edi,0x5
   26ef9:	call   d360 <xl_report_child_exitstatus>
   26efe:	xchg   ax,ax
   26f00:	mov    rax,QWORD PTR [rsp+0x168]
   26f08:	xor    rax,QWORD PTR fs:0x28
   26f11:	jne    26fea <migration_child_report.part.0+0x30a>
   26f17:	add    rsp,0x178
   26f1e:	pop    rbx
   26f1f:	pop    rbp
   26f20:	pop    r12
   26f22:	pop    r13
   26f24:	pop    r14
   26f26:	pop    r15
   26f28:	ret    
   26f29:	call   ad80 <__errno_location@plt>
   26f2e:	mov    edi,DWORD PTR [rax]
   26f30:	call   c3b0 <strerror@plt>
   26f35:	lea    rdx,[rip+0xdaf4]        # 34a30 <savefileheader_magic+0x590>
   26f3c:	mov    r8,rax
   26f3f:	movsxd rcx,ebp
   26f42:	mov    rax,QWORD PTR [rip+0x2140a7]        # 23aff0 <stderr@GLIBC_2.2.5>
   26f49:	mov    esi,0x1
   26f4e:	mov    rdi,QWORD PTR [rax]
   26f51:	xor    eax,eax
   26f53:	call   c1e0 <__fprintf_chk@plt>
   26f58:	jmp    26f00 <migration_child_report.part.0+0x220>
   26f5a:	mov    rax,QWORD PTR [rip+0x21408f]        # 23aff0 <stderr@GLIBC_2.2.5>
   26f61:	lea    rdx,[rip+0xdaf8]        # 34a60 <savefileheader_magic+0x5c0>
   26f68:	movsxd rcx,ebp
   26f6b:	mov    esi,0x1
   26f70:	mov    rdi,QWORD PTR [rax]
   26f73:	xor    eax,eax
   26f75:	call   c1e0 <__fprintf_chk@plt>
   26f7a:	jmp    26f00 <migration_child_report.part.0+0x220>
   26f7c:	call   ad80 <__errno_location@plt>
   26f81:	mov    edi,DWORD PTR [rax]
   26f83:	call   c3b0 <strerror@plt>
   26f88:	mov    r9,rax
   26f8b:	lea    rax,[rip+0xd8e6]        # 34878 <savefileheader_magic+0x3d8>
   26f92:	sub    rsp,0x8
   26f96:	mov    r8d,0x77
   26f9c:	push   rax
   26f9d:	mov    rax,QWORD PTR [rip+0x21404c]        # 23aff0 <stderr@GLIBC_2.2.5>
   26fa4:	lea    rcx,[rip+0xd834]        # 347df <savefileheader_magic+0x33f>
   26fab:	lea    rdx,[rip+0x733e]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
   26fb2:	mov    esi,0x1
   26fb7:	mov    rdi,QWORD PTR [rax]
   26fba:	xor    eax,eax
   26fbc:	call   c1e0 <__fprintf_chk@plt>
   26fc1:	mov    edi,0x1
   26fc6:	call   c1a0 <exit@plt>
   26fcb:	lea    rcx,[rip+0xe56e]        # 35540 <__PRETTY_FUNCTION__.9931>
   26fd2:	lea    rsi,[rip+0xd806]        # 347df <savefileheader_magic+0x33f>
   26fd9:	lea    rdi,[rip+0xd88d]        # 3486d <savefileheader_magic+0x3cd>
   26fe0:	mov    edx,0x75
   26fe5:	call   b2f0 <__assert_fail@plt>
   26fea:	call   b130 <__stack_chk_fail@plt>
   26fef:	call   ad80 <__errno_location@plt>
   26ff4:	mov    edi,DWORD PTR [rax]
   26ff6:	call   c3b0 <strerror@plt>
   26ffb:	mov    r9,rax
   26ffe:	lea    rax,[rip+0xd84c]        # 34851 <savefileheader_magic+0x3b1>
   27005:	sub    rsp,0x8
   27009:	mov    r8d,0x63
   2700f:	push   rax
   27010:	jmp    26f9d <migration_child_report.part.0+0x2bd>
   27012:	nop    DWORD PTR [rax+0x0]
   27016:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000027020 <migration_child_report>:
   27020:	push   rbx
   27021:	mov    ebx,edi
   27023:	mov    edi,0x2
   27028:	call   d340 <xl_child_pid>
   2702d:	test   eax,eax
   2702f:	jne    27033 <migration_child_report+0x13>
   27031:	pop    rbx
   27032:	ret    
   27033:	mov    edi,ebx
   27035:	pop    rbx
   27036:	jmp    26ce0 <migration_child_report.part.0>
   2703b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000027040 <migrate_do_preamble.isra.1>:
   27040:	push   r13
   27042:	push   r12
   27044:	push   rbp
   27045:	push   rbx
   27046:	sub    rsp,0x8
   2704a:	test   edi,edi
   2704c:	js     27098 <migrate_do_preamble.isra.1+0x58>
   2704e:	test   esi,esi
   27050:	mov    ebp,esi
   27052:	js     27098 <migrate_do_preamble.isra.1+0x58>
   27054:	mov    r13d,ecx
   27057:	lea    rsi,[rip+0xe5e2]        # 35640 <migrate_receiver_banner>
   2705e:	lea    rcx,[rip+0xd829]        # 3488e <savefileheader_magic+0x3ee>
   27065:	mov    ebx,edi
   27067:	mov    r12,rdx
   2706a:	mov    edi,ebp
   2706c:	mov    edx,0x36
   27071:	call   26a40 <migrate_read_fixedmessage>
   27076:	test   eax,eax
   27078:	jne    270c2 <migrate_do_preamble.isra.1+0x82>
   2707a:	add    rsp,0x8
   2707e:	mov    ecx,r13d
   27081:	mov    rdx,r12
   27084:	mov    edi,ebx
   27086:	lea    rsi,[rip+0xd729]        # 347b6 <savefileheader_magic+0x316>
   2708d:	pop    rbx
   2708e:	pop    rbp
   2708f:	pop    r12
   27091:	pop    r13
   27093:	jmp    26480 <save_domain_core_writeconfig>
   27098:	mov    rax,QWORD PTR [rip+0x213f51]        # 23aff0 <stderr@GLIBC_2.2.5>
   2709f:	lea    rdi,[rip+0xda52]        # 34af8 <savefileheader_magic+0x658>
   270a6:	mov    edx,0x2e
   270ab:	mov    esi,0x1
   270b0:	mov    rcx,QWORD PTR [rax]
   270b3:	call   c1b0 <fwrite@plt>
   270b8:	mov    edi,0x1
   270bd:	call   c1a0 <exit@plt>
   270c2:	mov    edi,ebx
   270c4:	call   b4a0 <close@plt>
   270c9:	mov    edi,ebp
   270cb:	call   27020 <migration_child_report>
   270d0:	mov    edi,0x1
   270d5:	call   c1a0 <exit@plt>
   270da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000270e0 <main_migrate_receive>:
   270e0:	push   r15
   270e2:	push   r14
   270e4:	xor    r15d,r15d
   270e7:	push   r13
   270e9:	push   r12
   270eb:	xor    r14d,r14d
   270ee:	push   rbp
   270ef:	push   rbx
   270f0:	mov    rbp,rsi
   270f3:	mov    ebx,edi
   270f5:	xor    r13d,r13d
   270f8:	mov    r12d,0x1
   270fe:	sub    rsp,0xa8
   27105:	mov    rax,QWORD PTR fs:0x28
   2710e:	mov    QWORD PTR [rsp+0x98],rax
   27116:	xor    eax,eax
   27118:	mov    QWORD PTR [rsp+0x10],0x0
   27121:	mov    DWORD PTR [rsp+0x18],0x0
   27129:	mov    DWORD PTR [rsp+0xc],0x1
   27131:	nop    DWORD PTR [rax+0x0]
   27138:	lea    r8,[rip+0x2c75]        # 29db4 <__PRETTY_FUNCTION__.10113+0x19c>
   2713f:	lea    rcx,[rip+0x215c1a]        # 23cd60 <opts.10007>
   27146:	lea    rdx,[rip+0xd748]        # 34895 <savefileheader_magic+0x3f5>
   2714d:	xor    r9d,r9d
   27150:	mov    rsi,rbp
   27153:	mov    edi,ebx
   27155:	call   ebe0 <def_getopt>
   2715a:	cmp    eax,0xffffffff
   2715d:	je     271c8 <main_migrate_receive+0xe8>
   2715f:	cmp    eax,0x70
   27162:	je     27240 <main_migrate_receive+0x160>
   27168:	jle    271a0 <main_migrate_receive+0xc0>
   2716a:	cmp    eax,0x100
   2716f:	je     27230 <main_migrate_receive+0x150>
   27175:	jle    27218 <main_migrate_receive+0x138>
   2717b:	cmp    eax,0x200
   27180:	je     27250 <main_migrate_receive+0x170>
   27186:	cmp    eax,0x300
   2718b:	mov    eax,0x1
   27190:	cmove  r14d,eax
   27194:	jmp    27138 <main_migrate_receive+0x58>
   27196:	nop    WORD PTR cs:[rax+rax*1+0x0]
   271a0:	cmp    eax,0x64
   271a3:	je     27280 <main_migrate_receive+0x1a0>
   271a9:	cmp    eax,0x65
   271ac:	je     27268 <main_migrate_receive+0x188>
   271b2:	cmp    eax,0x46
   271b5:	mov    eax,0x0
   271ba:	cmove  r12d,eax
   271be:	jmp    27138 <main_migrate_receive+0x58>
   271c3:	nop    DWORD PTR [rax+rax*1+0x0]
   271c8:	mov    rax,QWORD PTR [rip+0x213dd9]        # 23afa8 <optind@GLIBC_2.2.5>
   271cf:	cmp    DWORD PTR [rax],ebx
   271d1:	je     2728b <main_migrate_receive+0x1ab>
   271d7:	lea    rdi,[rip+0x2bd6]        # 29db4 <__PRETTY_FUNCTION__.10113+0x19c>
   271de:	call   d4f0 <help>
   271e3:	mov    rcx,QWORD PTR [rsp+0x98]
   271eb:	xor    rcx,QWORD PTR fs:0x28
   271f4:	mov    eax,0x1
   271f9:	jne    27337 <main_migrate_receive+0x257>
   271ff:	add    rsp,0xa8
   27206:	pop    rbx
   27207:	pop    rbp
   27208:	pop    r12
   2720a:	pop    r13
   2720c:	pop    r14
   2720e:	pop    r15
   27210:	ret    
   27211:	nop    DWORD PTR [rax+0x0]
   27218:	cmp    eax,0x72
   2721b:	mov    eax,0x1
   27220:	cmove  r13d,eax
   27224:	jmp    27138 <main_migrate_receive+0x58>
   27229:	nop    DWORD PTR [rax+0x0]
   27230:	mov    r13d,0x2
   27236:	jmp    27138 <main_migrate_receive+0x58>
   2723b:	nop    DWORD PTR [rax+rax*1+0x0]
   27240:	mov    DWORD PTR [rsp+0x18],0x1
   27248:	jmp    27138 <main_migrate_receive+0x58>
   2724d:	nop    DWORD PTR [rax]
   27250:	mov    rax,QWORD PTR [rip+0x213d69]        # 23afc0 <optarg@GLIBC_2.2.5>
   27257:	mov    rax,QWORD PTR [rax]
   2725a:	mov    QWORD PTR [rsp+0x10],rax
   2725f:	jmp    27138 <main_migrate_receive+0x58>
   27264:	nop    DWORD PTR [rax+0x0]
   27268:	mov    DWORD PTR [rsp+0xc],0x0
   27270:	xor    r12d,r12d
   27273:	jmp    27138 <main_migrate_receive+0x58>
   27278:	nop    DWORD PTR [rax+rax*1+0x0]
   27280:	mov    r15d,0x1
   27286:	jmp    27138 <main_migrate_receive+0x58>
   2728b:	mov    esi,0x1
   27290:	mov    edi,0xd
   27295:	call   b690 <signal@plt>
   2729a:	mov    rbp,QWORD PTR [rip+0x213d4f]        # 23aff0 <stderr@GLIBC_2.2.5>
   272a1:	lea    rdi,[rip+0xd880]        # 34b28 <savefileheader_magic+0x688>
   272a8:	mov    edx,0x2b
   272ad:	mov    esi,0x1
   272b2:	mov    rcx,QWORD PTR [rbp+0x0]
   272b6:	call   c1b0 <fwrite@plt>
   272bb:	lea    rbx,[rip+0x215b9e]        # 23ce60 <ctx>
   272c2:	lea    r9,[rip+0xd5c5]        # 3488e <savefileheader_magic+0x3ee>
   272c9:	lea    r8,[rip+0xd5cc]        # 3489c <savefileheader_magic+0x3fc>
   272d0:	lea    rdx,[rip+0xe369]        # 35640 <migrate_receiver_banner>
   272d7:	mov    ecx,0x36
   272dc:	mov    esi,0x1
   272e1:	mov    rdi,QWORD PTR [rbx]
   272e4:	call   bdd0 <libxl_write_exactly@plt>
   272e9:	test   eax,eax
   272eb:	js     2765b <main_migrate_receive+0x57b>
   272f1:	je     2733c <main_migrate_receive+0x25c>
   272f3:	mov    edi,eax
   272f5:	call   c3b0 <strerror@plt>
   272fa:	mov    r9,rax
   272fd:	lea    rax,[rip+0xd854]        # 34b58 <savefileheader_magic+0x6b8>
   27304:	sub    rsp,0x8
   27308:	lea    rcx,[rip+0xd4d0]        # 347df <savefileheader_magic+0x33f>
   2730f:	lea    rdx,[rip+0x6fda]        # 2e2f0 <__PRETTY_FUNCTION__.10113+0x46d8>
   27316:	mov    r8d,0x153
   2731c:	push   rax
   2731d:	mov    rdi,QWORD PTR [rbp+0x0]
   27321:	mov    esi,0x1
   27326:	xor    eax,eax
   27328:	call   c1e0 <__fprintf_chk@plt>
   2732d:	mov    edi,0x1
   27332:	call   c1a0 <exit@plt>
   27337:	call   b130 <__stack_chk_fail@plt>
   2733c:	lea    rsi,[rsp+0x40]
   27341:	mov    ecx,0x14
   27346:	mov    DWORD PTR [rsp+0x1c],eax
   2734a:	lea    rdx,[rsp+0x30]
   2734f:	mov    DWORD PTR [rsp+0x34],r12d
   27354:	mov    DWORD PTR [rsp+0x30],r15d
   27359:	mov    rdi,rsi
   2735c:	mov    DWORD PTR [rsp+0x3c],0x1
   27364:	rep stos DWORD PTR es:[rdi],eax
   27366:	mov    eax,DWORD PTR [rsp+0xc]
   2736a:	mov    rdi,rdx
   2736d:	mov    DWORD PTR [rsp+0x88],0x1
   27378:	mov    DWORD PTR [rsp+0x54],r13d
   2737d:	mov    BYTE PTR [rsp+0x80],r14b
   27385:	mov    DWORD PTR [rsp+0x38],eax
   27389:	lea    rax,[rsp+0x28]
   2738e:	mov    QWORD PTR [rsp+0x90],rax
   27396:	mov    rax,QWORD PTR [rsp+0x10]
   2739b:	mov    QWORD PTR [rsp+0x78],rax
   273a0:	call   244e0 <create_domain>
   273a5:	test   eax,eax
   273a7:	mov    r12d,eax
   273aa:	mov    ecx,eax
   273ac:	lea    rdx,[rip+0xd82d]        # 34be0 <savefileheader_magic+0x740>
   273b3:	mov    r9d,DWORD PTR [rsp+0x1c]
   273b8:	js     27641 <main_migrate_receive+0x561>
   273be:	lea    eax,[r13-0x1]
   273c2:	mov    rdi,QWORD PTR [rbp+0x0]
   273c6:	cmp    eax,0x1
   273c9:	ja     27538 <main_migrate_receive+0x458>
   273cf:	cmp    r13d,0x2
   273d3:	je     27499 <main_migrate_receive+0x3b9>
   273d9:	lea    rdx,[rip+0xda28]        # 34e08 <savefileheader_magic+0x968>
   273e0:	lea    rcx,[rip+0xd4ca]        # 348b1 <savefileheader_magic+0x411>
   273e7:	xor    eax,eax
   273e9:	mov    r8d,r12d
   273ec:	mov    esi,0x1
   273f1:	call   c1e0 <__fprintf_chk@plt>
   273f6:	mov    rdx,QWORD PTR [rsp+0x28]
   273fb:	test   rdx,rdx
   273fe:	je     27448 <main_migrate_receive+0x368>
   27400:	lea    r13,[rip+0x215a61]        # 23ce68 <common_domname>
   27407:	mov    rdi,QWORD PTR [rbx]
   2740a:	mov    esi,r12d
   2740d:	mov    rcx,QWORD PTR [r13+0x0]
   27411:	call   bbc0 <libxl_domain_rename@plt>
   27416:	test   eax,eax
   27418:	je     27448 <main_migrate_receive+0x368>
   2741a:	sub    rsp,0x8
   2741e:	lea    rcx,[rip+0xd48c]        # 348b1 <savefileheader_magic+0x411>
   27425:	lea    rdx,[rip+0xda0c]        # 34e38 <savefileheader_magic+0x998>
   2742c:	push   rax
   2742d:	mov    r8,QWORD PTR [rsp+0x38]
   27432:	mov    esi,0x1
   27437:	mov    r9,QWORD PTR [r13+0x0]
   2743b:	mov    rdi,QWORD PTR [rbp+0x0]
   2743f:	xor    eax,eax
   27441:	call   c1e0 <__fprintf_chk@plt>
   27446:	pop    rcx
   27447:	pop    rsi
   27448:	mov    rdi,QWORD PTR [rbx]
   2744b:	mov    esi,r12d
   2744e:	call   b460 <libxl_domain_unpause@plt>
   27453:	test   eax,eax
   27455:	mov    ebx,eax
   27457:	je     2748c <main_migrate_receive+0x3ac>
   27459:	sub    rsp,0x8
   2745d:	lea    rcx,[rip+0xd44d]        # 348b1 <savefileheader_magic+0x411>
   27464:	lea    rdx,[rip+0xd7ad]        # 34c18 <savefileheader_magic+0x778>
   2746b:	push   rax
   2746c:	lea    rax,[rip+0x2159f5]        # 23ce68 <common_domname>
   27473:	mov    r9d,r12d
   27476:	mov    rdi,QWORD PTR [rbp+0x0]
   2747a:	mov    esi,0x1
   2747f:	mov    r8,QWORD PTR [rax]
   27482:	xor    eax,eax
   27484:	call   c1e0 <__fprintf_chk@plt>
   27489:	pop    rdi
   2748a:	pop    r8
   2748c:	xor    edi,edi
   2748e:	test   ebx,ebx
   27490:	setne  dil
   27494:	call   c1a0 <exit@plt>
   27499:	lea    rdx,[rip+0xd968]        # 34e08 <savefileheader_magic+0x968>
   274a0:	lea    rcx,[rip+0xd466]        # 3490d <savefileheader_magic+0x46d>
   274a7:	xor    eax,eax
   274a9:	mov    r8d,r12d
   274ac:	mov    esi,0x1
   274b1:	mov    DWORD PTR [rsp+0xc],r9d
   274b6:	call   c1e0 <__fprintf_chk@plt>
   274bb:	mov    rdx,QWORD PTR [rsp+0x28]
   274c0:	mov    r9d,DWORD PTR [rsp+0xc]
   274c5:	test   rdx,rdx
   274c8:	je     2752a <main_migrate_receive+0x44a>
   274ca:	lea    r13,[rip+0x215997]        # 23ce68 <common_domname>
   274d1:	mov    rdi,QWORD PTR [rbx]
   274d4:	mov    esi,r12d
   274d7:	mov    DWORD PTR [rsp+0xc],r9d
   274dc:	mov    rcx,QWORD PTR [r13+0x0]
   274e0:	call   bbc0 <libxl_domain_rename@plt>
   274e5:	test   eax,eax
   274e7:	mov    r9d,DWORD PTR [rsp+0xc]
   274ec:	je     27522 <main_migrate_receive+0x442>
   274ee:	sub    rsp,0x8
   274f2:	lea    rdx,[rip+0xd93f]        # 34e38 <savefileheader_magic+0x998>
   274f9:	lea    rcx,[rip+0xd40d]        # 3490d <savefileheader_magic+0x46d>
   27500:	push   rax
   27501:	mov    r8,QWORD PTR [rsp+0x38]
   27506:	mov    esi,0x1
   2750b:	mov    r9,QWORD PTR [r13+0x0]
   2750f:	mov    rdi,QWORD PTR [rbp+0x0]
   27513:	xor    eax,eax
   27515:	call   c1e0 <__fprintf_chk@plt>
   2751a:	pop    rax
   2751b:	pop    rdx
   2751c:	mov    r9d,0x3
   27522:	mov    edi,r9d
   27525:	call   c1a0 <exit@plt>
   2752a:	test   r12d,r12d
   2752d:	mov    eax,0x3
   27532:	cmovne r9d,eax
   27536:	jmp    27522 <main_migrate_receive+0x442>
   27538:	mov    rcx,rdi
   2753b:	lea    rdi,[rip+0xd716]        # 34c58 <savefileheader_magic+0x7b8>
   27542:	mov    edx,0x4c
   27547:	mov    esi,0x1
   2754c:	call   c1b0 <fwrite@plt>
   27551:	mov    rdi,QWORD PTR [rbx]
   27554:	lea    r9,[rip+0xd35c]        # 348b7 <savefileheader_magic+0x417>
   2755b:	lea    r8,[rip+0xd33a]        # 3489c <savefileheader_magic+0x3fc>
   27562:	lea    rdx,[rip+0xe097]        # 35600 <migrate_receiver_ready>
   27569:	mov    ecx,0x22
   2756e:	mov    esi,0x1
   27573:	call   bdd0 <libxl_write_exactly@plt>
   27578:	test   eax,eax
   2757a:	jne    27651 <main_migrate_receive+0x571>
   27580:	lea    rcx,[rip+0xd33e]        # 348c5 <savefileheader_magic+0x425>
   27587:	lea    rsi,[rip+0xe032]        # 355c0 <migrate_permission_to_go>
   2758e:	xor    r8d,r8d
   27591:	xor    edi,edi
   27593:	mov    edx,0x2c
   27598:	call   26a40 <migrate_read_fixedmessage>
   2759d:	test   eax,eax
   2759f:	mov    r13d,eax
   275a2:	je     276ac <main_migrate_receive+0x5cc>
   275a8:	mov    rdi,QWORD PTR [rbx]
   275ab:	lea    r9,[rip+0xd31e]        # 348d0 <savefileheader_magic+0x430>
   275b2:	lea    r8,[rip+0xd2e3]        # 3489c <savefileheader_magic+0x3fc>
   275b9:	lea    rdx,[rip+0xdfc0]        # 35580 <migrate_report>
   275c0:	mov    ecx,0x27
   275c5:	mov    esi,0x1
   275ca:	call   bdd0 <libxl_write_exactly@plt>
   275cf:	test   eax,eax
   275d1:	jne    27651 <main_migrate_receive+0x571>
   275d3:	neg    r13d
   275d6:	test   r13b,r13b
   275d9:	mov    BYTE PTR [rsp+0x27],r13b
   275de:	je     27778 <main_migrate_receive+0x698>
   275e4:	mov    rdi,QWORD PTR [rbx]
   275e7:	lea    rdx,[rsp+0x27]
   275ec:	lea    r9,[rip+0xd305]        # 348f8 <savefileheader_magic+0x458>
   275f3:	lea    r8,[rip+0xd2a2]        # 3489c <savefileheader_magic+0x3fc>
   275fa:	mov    ecx,0x1
   275ff:	mov    esi,0x1
   27604:	call   bdd0 <libxl_write_exactly@plt>
   27609:	test   eax,eax
   2760b:	jne    27651 <main_migrate_receive+0x571>
   2760d:	mov    rcx,QWORD PTR [rbp+0x0]
   27611:	lea    rdi,[rip+0xd700]        # 34d18 <savefileheader_magic+0x878>
   27618:	mov    edx,0x30
   2761d:	mov    esi,0x1
   27622:	call   c1b0 <fwrite@plt>
   27627:	mov    rdi,QWORD PTR [rbx]
   2762a:	xor    edx,edx
   2762c:	mov    esi,r12d
   2762f:	call   aed0 <libxl_domain_destroy@plt>
   27634:	test   eax,eax
   27636:	je     27660 <main_migrate_receive+0x580>
   27638:	lea    rdx,[rip+0xd711]        # 34d50 <savefileheader_magic+0x8b0>
   2763f:	mov    ecx,eax
   27641:	mov    rdi,QWORD PTR [rbp+0x0]
   27645:	mov    esi,0x1
   2764a:	xor    eax,eax
   2764c:	call   c1e0 <__fprintf_chk@plt>
   27651:	mov    edi,0x1
   27656:	call   c1a0 <exit@plt>
   2765b:	call   ad50 <abort@plt>
   27660:	mov    rcx,QWORD PTR [rbp+0x0]
   27664:	lea    rdi,[rip+0xd725]        # 34d90 <savefileheader_magic+0x8f0>
   2766b:	mov    edx,0x44
   27670:	mov    esi,0x1
   27675:	call   c1b0 <fwrite@plt>
   2767a:	lea    r9,[rip+0xd757]        # 34dd8 <savefileheader_magic+0x938>
   27681:	lea    r8,[rip+0xd214]        # 3489c <savefileheader_magic+0x3fc>
   27688:	lea    rdx,[rip+0xdf31]        # 355c0 <migrate_permission_to_go>
   2768f:	mov    ecx,0x2c
   27694:	mov    rdi,QWORD PTR [rbx]
   27697:	mov    esi,0x1
   2769c:	call   bdd0 <libxl_write_exactly@plt>
   276a1:	test   eax,eax
   276a3:	jne    27651 <main_migrate_receive+0x571>
   276a5:	xor    edi,edi
   276a7:	call   c1a0 <exit@plt>
   276ac:	mov    rcx,QWORD PTR [rbp+0x0]
   276b0:	lea    rdi,[rip+0xd5f1]        # 34ca8 <savefileheader_magic+0x808>
   276b7:	mov    edx,0x33
   276bc:	mov    esi,0x1
   276c1:	call   c1b0 <fwrite@plt>
   276c6:	mov    rdx,QWORD PTR [rsp+0x28]
   276cb:	test   rdx,rdx
   276ce:	je     276f0 <main_migrate_receive+0x610>
   276d0:	lea    rax,[rip+0x215791]        # 23ce68 <common_domname>
   276d7:	mov    rdi,QWORD PTR [rbx]
   276da:	mov    esi,r12d
   276dd:	mov    rcx,QWORD PTR [rax]
   276e0:	call   bbc0 <libxl_domain_rename@plt>
   276e5:	test   eax,eax
   276e7:	mov    r13d,eax
   276ea:	jne    275a8 <main_migrate_receive+0x4c8>
   276f0:	cmp    DWORD PTR [rsp+0x18],0x0
   276f5:	jne    2770d <main_migrate_receive+0x62d>
   276f7:	mov    rdi,QWORD PTR [rbx]
   276fa:	mov    esi,r12d
   276fd:	call   b460 <libxl_domain_unpause@plt>
   27702:	test   eax,eax
   27704:	mov    r13d,eax
   27707:	jne    275a8 <main_migrate_receive+0x4c8>
   2770d:	mov    rcx,QWORD PTR [rbp+0x0]
   27711:	lea    rdi,[rip+0xd5c8]        # 34ce0 <savefileheader_magic+0x840>
   27718:	mov    edx,0x30
   2771d:	mov    esi,0x1
   27722:	call   c1b0 <fwrite@plt>
   27727:	mov    rdi,QWORD PTR [rbx]
   2772a:	lea    r9,[rip+0xd19f]        # 348d0 <savefileheader_magic+0x430>
   27731:	lea    r8,[rip+0xd164]        # 3489c <savefileheader_magic+0x3fc>
   27738:	lea    rdx,[rip+0xde41]        # 35580 <migrate_report>
   2773f:	mov    ecx,0x27
   27744:	mov    esi,0x1
   27749:	call   bdd0 <libxl_write_exactly@plt>
   2774e:	test   eax,eax
   27750:	jne    27651 <main_migrate_receive+0x571>
   27756:	mov    BYTE PTR [rsp+0x27],0x0
   2775b:	lea    rdx,[rsp+0x27]
   27760:	lea    r9,[rip+0xd191]        # 348f8 <savefileheader_magic+0x458>
   27767:	lea    r8,[rip+0xd12e]        # 3489c <savefileheader_magic+0x3fc>
   2776e:	mov    ecx,0x1
   27773:	jmp    27694 <main_migrate_receive+0x5b4>
   27778:	lea    rcx,[rip+0xdde1]        # 35560 <__PRETTY_FUNCTION__.9994>
   2777f:	lea    rsi,[rip+0xd059]        # 347df <savefileheader_magic+0x33f>
   27786:	lea    rdi,[rip+0xd15a]        # 348e7 <savefileheader_magic+0x447>
   2778d:	mov    edx,0x1bf
   27792:	call   b2f0 <__assert_fail@plt>
   27797:	nop    WORD PTR [rax+rax*1+0x0]

00000000000277a0 <main_migrate>:
   277a0:	push   r15
   277a2:	push   r14
   277a4:	xor    r15d,r15d
   277a7:	push   r13
   277a9:	push   r12
   277ab:	lea    r13,[rip+0xd160]        # 34912 <savefileheader_magic+0x472>
   277b2:	push   rbp
   277b3:	push   rbx
   277b4:	mov    ebp,edi
   277b6:	mov    rbx,rsi
   277b9:	xor    r12d,r12d
   277bc:	mov    r14d,0x1
   277c2:	sub    rsp,0x58
   277c6:	mov    rax,QWORD PTR fs:0x28
   277cf:	mov    QWORD PTR [rsp+0x48],rax
   277d4:	xor    eax,eax
   277d6:	mov    QWORD PTR [rsp+0x28],0x0
   277df:	mov    DWORD PTR [rsp+0xc],0x0
   277e7:	nop    WORD PTR [rax+rax*1+0x0]
   277f0:	lea    r8,[rip+0x2b04]        # 2a2fb <__PRETTY_FUNCTION__.10113+0x6e3>
   277f7:	lea    rcx,[rip+0x2154e2]        # 23cce0 <opts.10034>
   277fe:	lea    rdx,[rip+0xd121]        # 34926 <savefileheader_magic+0x486>
   27805:	mov    r9d,0x2
   2780b:	mov    rsi,rbx
   2780e:	mov    edi,ebp
   27810:	call   ebe0 <def_getopt>
   27815:	cmp    eax,0xffffffff
   27818:	je     27860 <main_migrate+0xc0>
   2781a:	cmp    eax,0x65
   2781d:	je     27856 <main_migrate+0xb6>
   2781f:	jle    27848 <main_migrate+0xa8>
   27821:	cmp    eax,0x73
   27824:	je     27920 <main_migrate+0x180>
   2782a:	cmp    eax,0x100
   2782f:	je     27910 <main_migrate+0x170>
   27835:	cmp    eax,0x70
   27838:	mov    eax,0x1
   2783d:	cmove  r12d,eax
   27841:	jmp    277f0 <main_migrate+0x50>
   27843:	nop    DWORD PTR [rax+rax*1+0x0]
   27848:	cmp    eax,0x43
   2784b:	je     27900 <main_migrate+0x160>
   27851:	cmp    eax,0x46
   27854:	jne    277f0 <main_migrate+0x50>
   27856:	xor    r14d,r14d
   27859:	jmp    277f0 <main_migrate+0x50>
   2785b:	nop    DWORD PTR [rax+rax*1+0x0]
   27860:	mov    rax,QWORD PTR [rip+0x213741]        # 23afa8 <optind@GLIBC_2.2.5>
   27867:	movsxd rax,DWORD PTR [rax]
   2786a:	mov    rdi,QWORD PTR [rbx+rax*8]
   2786e:	call   eb40 <find_domain>
   27873:	mov    ebp,eax
   27875:	mov    rax,QWORD PTR [rip+0x21372c]        # 23afa8 <optind@GLIBC_2.2.5>
   2787c:	mov    esi,0x1
   27881:	movsxd rax,DWORD PTR [rax]
   27884:	mov    rbx,QWORD PTR [rbx+rax*8+0x8]
   27889:	lea    rax,[rip+0x215578]        # 23ce08 <progress_use_cr>
   27890:	cmp    BYTE PTR [rax],0x0
   27893:	je     27af0 <main_migrate+0x350>
   27899:	cmp    BYTE PTR [r13+0x0],0x0
   2789e:	jne    27a40 <main_migrate+0x2a0>
   278a4:	mov    QWORD PTR [rsp+0x28],rbx
   278a9:	lea    rcx,[rsp+0x24]
   278ae:	lea    rdx,[rsp+0x38]
   278b3:	mov    rsi,r15
   278b6:	mov    edi,ebp
   278b8:	mov    DWORD PTR [rsp+0x1c],0xffffffff
   278c0:	mov    DWORD PTR [rsp+0x20],0xffffffff
   278c8:	call   262f0 <save_domain_core_begin>
   278cd:	mov    eax,DWORD PTR [rsp+0x24]
   278d1:	test   eax,eax
   278d3:	jne    27930 <main_migrate+0x190>
   278d5:	mov    rax,QWORD PTR [rip+0x213714]        # 23aff0 <stderr@GLIBC_2.2.5>
   278dc:	lea    rdi,[rip+0xd5cd]        # 34eb0 <savefileheader_magic+0xa10>
   278e3:	mov    edx,0x4d
   278e8:	mov    esi,0x1
   278ed:	mov    rcx,QWORD PTR [rax]
   278f0:	call   c1b0 <fwrite@plt>
   278f5:	mov    edi,0x1
   278fa:	call   c1a0 <exit@plt>
   278ff:	nop
   27900:	mov    rax,QWORD PTR [rip+0x2136b9]        # 23afc0 <optarg@GLIBC_2.2.5>
   27907:	mov    r15,QWORD PTR [rax]
   2790a:	jmp    277f0 <main_migrate+0x50>
   2790f:	nop
   27910:	mov    DWORD PTR [rsp+0xc],0x1
   27918:	jmp    277f0 <main_migrate+0x50>
   2791d:	nop    DWORD PTR [rax]
   27920:	mov    rax,QWORD PTR [rip+0x213699]        # 23afc0 <optarg@GLIBC_2.2.5>
   27927:	mov    r13,QWORD PTR [rax]
   2792a:	jmp    277f0 <main_migrate+0x50>
   2792f:	nop
   27930:	lea    rdx,[rsp+0x20]
   27935:	lea    rsi,[rsp+0x1c]
   2793a:	mov    rdi,rbx
   2793d:	call   26b40 <create_migration_child>
   27942:	mov    ecx,DWORD PTR [rsp+0x24]
   27946:	mov    rdx,QWORD PTR [rsp+0x38]
   2794b:	mov    r8,rbx
   2794e:	mov    esi,DWORD PTR [rsp+0x20]
   27952:	mov    edi,DWORD PTR [rsp+0x1c]
   27956:	call   27040 <migrate_do_preamble.isra.1>
   2795b:	lea    r13,[rip+0x215526]        # 23ce88 <logger>
   27962:	xor    edx,edx
   27964:	mov    esi,0x4
   27969:	mov    rdi,QWORD PTR [r13+0x0]
   2796d:	call   ae80 <xtl_stdiostream_adjust_flags@plt>
   27972:	lea    r12,[rip+0x2154e7]        # 23ce60 <ctx>
   27979:	mov    ecx,DWORD PTR [rsp+0xc]
   2797d:	xor    r8d,r8d
   27980:	mov    edx,DWORD PTR [rsp+0x1c]
   27984:	mov    esi,ebp
   27986:	mov    rdi,QWORD PTR [r12]
   2798a:	add    ecx,0x2
   2798d:	call   bf80 <libxl_domain_suspend@plt>
   27992:	test   eax,eax
   27994:	mov    r14d,eax
   27997:	je     27a10 <main_migrate+0x270>
   27999:	mov    r13,QWORD PTR [rip+0x213650]        # 23aff0 <stderr@GLIBC_2.2.5>
   279a0:	lea    rdx,[rip+0xd559]        # 34f00 <savefileheader_magic+0xa60>
   279a7:	mov    ecx,eax
   279a9:	mov    esi,0x1
   279ae:	xor    eax,eax
   279b0:	mov    rdi,QWORD PTR [r13+0x0]
   279b4:	call   c1e0 <__fprintf_chk@plt>
   279b9:	cmp    r14d,0xfffffff8
   279bd:	je     27d0e <main_migrate+0x56e>
   279c3:	mov    edi,DWORD PTR [rsp+0x1c]
   279c7:	call   b4a0 <close@plt>
   279cc:	mov    edi,DWORD PTR [rsp+0x20]
   279d0:	call   27020 <migration_child_report>
   279d5:	mov    rcx,QWORD PTR [r13+0x0]
   279d9:	lea    rdi,[rip+0xd738]        # 35118 <savefileheader_magic+0xc78>
   279e0:	mov    edx,0x26
   279e5:	mov    esi,0x1
   279ea:	call   c1b0 <fwrite@plt>
   279ef:	mov    rdi,QWORD PTR [r12]
   279f3:	xor    ecx,ecx
   279f5:	mov    edx,0x1
   279fa:	mov    esi,ebp
   279fc:	call   b630 <libxl_domain_resume@plt>
   27a01:	mov    edi,0x1
   27a06:	call   c1a0 <exit@plt>
   27a0b:	nop    DWORD PTR [rax+rax*1+0x0]
   27a10:	mov    edi,DWORD PTR [rsp+0x20]
   27a14:	lea    rcx,[rip+0xce9c]        # 348b7 <savefileheader_magic+0x417>
   27a1b:	lea    rsi,[rip+0xdbde]        # 35600 <migrate_receiver_ready>
   27a22:	mov    r8,rbx
   27a25:	mov    edx,0x22
   27a2a:	call   26a40 <migrate_read_fixedmessage>
   27a2f:	test   eax,eax
   27a31:	je     27b10 <main_migrate+0x370>
   27a37:	mov    r13,QWORD PTR [rip+0x2135b2]        # 23aff0 <stderr@GLIBC_2.2.5>
   27a3e:	jmp    279c3 <main_migrate+0x223>
   27a40:	lea    rax,[rip+0x2135cd]        # 23b014 <minmsglevel>
   27a47:	mov    edi,DWORD PTR [rsp+0xc]
   27a4b:	mov    r9d,0x6
   27a51:	lea    r8,[rip+0x790f]        # 2f367 <__func__.10421+0xfdf>
   27a58:	mov    edx,0x2d20
   27a5d:	lea    rcx,[rip+0xceb2]        # 34916 <savefileheader_magic+0x476>
   27a64:	mov    WORD PTR [rsp+0x41],dx
   27a69:	lea    rdx,[rip+0xceaa]        # 3491a <savefileheader_magic+0x47a>
   27a70:	mov    DWORD PTR [rsp+0x43],0x76767676
   27a78:	mov    eax,DWORD PTR [rax]
   27a7a:	mov    BYTE PTR [rsp+0x47],0x0
   27a7f:	sub    r9d,eax
   27a82:	cmp    eax,0x4
   27a85:	mov    eax,0x0
   27a8a:	cmove  r9d,eax
   27a8e:	test   r12d,r12d
   27a91:	lea    rax,[rip+0xce86]        # 3491e <savefileheader_magic+0x47e>
   27a98:	cmove  rcx,r8
   27a9c:	test   edi,edi
   27a9e:	lea    rdi,[rsp+0x28]
   27aa3:	cmove  rdx,r8
   27aa7:	test   r14d,r14d
   27aaa:	push   rcx
   27aab:	cmovne rax,r8
   27aaf:	push   rdx
   27ab0:	test   esi,esi
   27ab2:	push   rax
   27ab3:	lea    rsi,[rip+0xce68]        # 34922 <savefileheader_magic+0x482>
   27aba:	mov    rcx,rbx
   27abd:	mov    rdx,r13
   27ac0:	lea    rax,[rsp+0x59]
   27ac5:	cmovne r8,rsi
   27ac9:	lea    rsi,[rip+0xd3b0]        # 34e80 <savefileheader_magic+0x9e0>
   27ad0:	push   rax
   27ad1:	xor    eax,eax
   27ad3:	call   e8e0 <xasprintf>
   27ad8:	mov    rbx,QWORD PTR [rsp+0x48]
   27add:	add    rsp,0x20
   27ae1:	jmp    278a9 <main_migrate+0x109>
   27ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   27af0:	mov    edi,0x2
   27af5:	call   af00 <isatty@plt>
   27afa:	xor    esi,esi
   27afc:	test   eax,eax
   27afe:	setg   sil
   27b02:	jmp    27899 <main_migrate+0xf9>
   27b07:	nop    WORD PTR [rax+rax*1+0x0]
   27b10:	mov    rdi,QWORD PTR [r13+0x0]
   27b14:	xor    esi,esi
   27b16:	mov    edx,0x4
   27b1b:	call   ae80 <xtl_stdiostream_adjust_flags@plt>
   27b20:	mov    r13,QWORD PTR [rip+0x2134c9]        # 23aff0 <stderr@GLIBC_2.2.5>
   27b27:	lea    rdi,[rip+0xd40a]        # 34f38 <savefileheader_magic+0xa98>
   27b2e:	mov    edx,0x34
   27b33:	mov    esi,0x1
   27b38:	mov    rcx,QWORD PTR [r13+0x0]
   27b3c:	call   c1b0 <fwrite@plt>
   27b41:	lea    r14,[rip+0x215320]        # 23ce68 <common_domname>
   27b48:	mov    rdx,QWORD PTR [r14]
   27b4b:	test   rdx,rdx
   27b4e:	je     27b7e <main_migrate+0x3de>
   27b50:	lea    rdi,[rsp+0x30]
   27b55:	lea    rsi,[rip+0xcdd3]        # 3492f <savefileheader_magic+0x48f>
   27b5c:	xor    eax,eax
   27b5e:	call   e8e0 <xasprintf>
   27b63:	mov    rcx,QWORD PTR [rsp+0x30]
   27b68:	mov    rdx,QWORD PTR [r14]
   27b6b:	mov    esi,ebp
   27b6d:	mov    rdi,QWORD PTR [r12]
   27b71:	call   bbc0 <libxl_domain_rename@plt>
   27b76:	test   eax,eax
   27b78:	jne    279c3 <main_migrate+0x223>
   27b7e:	mov    rcx,QWORD PTR [r13+0x0]
   27b82:	lea    rdi,[rip+0xd3e7]        # 34f70 <savefileheader_magic+0xad0>
   27b89:	mov    edx,0x35
   27b8e:	mov    esi,0x1
   27b93:	call   c1b0 <fwrite@plt>
   27b98:	mov    esi,DWORD PTR [rsp+0x1c]
   27b9c:	mov    rdi,QWORD PTR [r12]
   27ba0:	lea    r9,[rip+0xcd1e]        # 348c5 <savefileheader_magic+0x425>
   27ba7:	lea    r8,[rip+0xcc08]        # 347b6 <savefileheader_magic+0x316>
   27bae:	lea    rdx,[rip+0xda0b]        # 355c0 <migrate_permission_to_go>
   27bb5:	mov    ecx,0x2c
   27bba:	call   bdd0 <libxl_write_exactly@plt>
   27bbf:	test   eax,eax
   27bc1:	jne    27cd8 <main_migrate+0x538>
   27bc7:	mov    edi,DWORD PTR [rsp+0x20]
   27bcb:	lea    rcx,[rip+0xd3d6]        # 34fa8 <savefileheader_magic+0xb08>
   27bd2:	lea    rsi,[rip+0xd9a7]        # 35580 <migrate_report>
   27bd9:	mov    r8,rbx
   27bdc:	mov    edx,0x27
   27be1:	call   26a40 <migrate_read_fixedmessage>
   27be6:	test   eax,eax
   27be8:	jne    27cd8 <main_migrate+0x538>
   27bee:	mov    esi,DWORD PTR [rsp+0x20]
   27bf2:	mov    rdi,QWORD PTR [r12]
   27bf6:	lea    rdx,[rsp+0x1b]
   27bfb:	lea    r9,[rip+0xcd3e]        # 34940 <savefileheader_magic+0x4a0>
   27c02:	lea    r8,[rip+0xcc93]        # 3489c <savefileheader_magic+0x3fc>
   27c09:	mov    ecx,0x1
   27c0e:	call   bba0 <libxl_read_exactly@plt>
   27c13:	test   eax,eax
   27c15:	jne    27cd8 <main_migrate+0x538>
   27c1b:	movzx  eax,BYTE PTR [rsp+0x1b]
   27c20:	mov    rdi,QWORD PTR [r13+0x0]
   27c24:	test   al,al
   27c26:	je     27d44 <main_migrate+0x5a4>
   27c2c:	lea    rdx,[rip+0xd395]        # 34fc8 <savefileheader_magic+0xb28>
   27c33:	movsx  ecx,al
   27c36:	mov    esi,0x1
   27c3b:	xor    eax,eax
   27c3d:	call   c1e0 <__fprintf_chk@plt>
   27c42:	mov    edi,DWORD PTR [rsp+0x20]
   27c46:	lea    rcx,[rip+0xd3c3]        # 35010 <savefileheader_magic+0xb70>
   27c4d:	lea    rsi,[rip+0xd96c]        # 355c0 <migrate_permission_to_go>
   27c54:	mov    r8,rbx
   27c57:	mov    edx,0x2c
   27c5c:	call   26a40 <migrate_read_fixedmessage>
   27c61:	test   eax,eax
   27c63:	jne    27cd8 <main_migrate+0x538>
   27c65:	mov    rcx,QWORD PTR [r13+0x0]
   27c69:	lea    rdi,[rip+0xd3c0]        # 35030 <savefileheader_magic+0xb90>
   27c70:	mov    edx,0x2f
   27c75:	mov    esi,0x1
   27c7a:	call   c1b0 <fwrite@plt>
   27c7f:	mov    rcx,QWORD PTR [r14]
   27c82:	test   rcx,rcx
   27c85:	je     27c97 <main_migrate+0x4f7>
   27c87:	mov    rdx,QWORD PTR [rsp+0x30]
   27c8c:	mov    rdi,QWORD PTR [r12]
   27c90:	mov    esi,ebp
   27c92:	call   bbc0 <libxl_domain_rename@plt>
   27c97:	mov    rdi,QWORD PTR [r12]
   27c9b:	xor    ecx,ecx
   27c9d:	mov    edx,0x1
   27ca2:	mov    esi,ebp
   27ca4:	call   b630 <libxl_domain_resume@plt>
   27ca9:	test   eax,eax
   27cab:	je     27d8b <main_migrate+0x5eb>
   27cb1:	mov    rcx,QWORD PTR [r13+0x0]
   27cb5:	lea    rdi,[rip+0xd3c4]        # 35080 <savefileheader_magic+0xbe0>
   27cbc:	mov    edx,0x2c
   27cc1:	mov    esi,0x1
   27cc6:	call   c1b0 <fwrite@plt>
   27ccb:	mov    edi,0x1
   27cd0:	call   c1a0 <exit@plt>
   27cd5:	nop    DWORD PTR [rax]
   27cd8:	mov    rcx,QWORD PTR [r13+0x0]
   27cdc:	lea    rdi,[rip+0xd45d]        # 35140 <savefileheader_magic+0xca0>
   27ce3:	mov    edx,0x142
   27ce8:	mov    esi,0x1
   27ced:	call   c1b0 <fwrite@plt>
   27cf2:	mov    edi,DWORD PTR [rsp+0x1c]
   27cf6:	call   b4a0 <close@plt>
   27cfb:	mov    edi,DWORD PTR [rsp+0x20]
   27cff:	call   27020 <migration_child_report>
   27d04:	mov    edi,0x1
   27d09:	call   c1a0 <exit@plt>
   27d0e:	mov    edi,DWORD PTR [rsp+0x1c]
   27d12:	call   b4a0 <close@plt>
   27d17:	mov    edi,DWORD PTR [rsp+0x20]
   27d1b:	call   27020 <migration_child_report>
   27d20:	mov    rcx,QWORD PTR [r13+0x0]
   27d24:	lea    rdi,[rip+0xd3bd]        # 350e8 <savefileheader_magic+0xc48>
   27d2b:	mov    edx,0x2f
   27d30:	mov    esi,0x1
   27d35:	call   c1b0 <fwrite@plt>
   27d3a:	mov    edi,0x1
   27d3f:	call   c1a0 <exit@plt>
   27d44:	mov    rcx,rdi
   27d47:	lea    rdi,[rip+0xd362]        # 350b0 <savefileheader_magic+0xc10>
   27d4e:	mov    edx,0x35
   27d53:	mov    esi,0x1
   27d58:	call   c1b0 <fwrite@plt>
   27d5d:	mov    rdi,QWORD PTR [r12]
   27d61:	xor    edx,edx
   27d63:	mov    esi,ebp
   27d65:	call   aed0 <libxl_domain_destroy@plt>
   27d6a:	mov    rcx,QWORD PTR [r13+0x0]
   27d6e:	lea    rdi,[rip+0xcbe2]        # 34957 <savefileheader_magic+0x4b7>
   27d75:	mov    edx,0x16
   27d7a:	mov    esi,0x1
   27d7f:	call   c1b0 <fwrite@plt>
   27d84:	xor    edi,edi
   27d86:	call   c1a0 <exit@plt>
   27d8b:	mov    rcx,QWORD PTR [r13+0x0]
   27d8f:	lea    rdi,[rip+0xd2ca]        # 35060 <savefileheader_magic+0xbc0>
   27d96:	mov    edx,0x1e
   27d9b:	mov    esi,0x1
   27da0:	call   c1b0 <fwrite@plt>
   27da5:	jmp    27cb1 <main_migrate+0x511>
   27daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000027db0 <main_remus>:
   27db0:	push   r15
   27db2:	pxor   xmm0,xmm0
   27db6:	push   r14
   27db8:	push   r13
   27dba:	lea    r14,[rip+0xcb51]        # 34912 <savefileheader_magic+0x472>
   27dc1:	push   r12
   27dc3:	push   rbp
   27dc4:	mov    r13d,edi
   27dc7:	push   rbx
   27dc8:	lea    rbx,[rip+0xd6b1]        # 35480 <savefileheader_magic+0xfe0>
   27dcf:	mov    rbp,rsi
   27dd2:	mov    r15d,0x1
   27dd8:	sub    rsp,0x78
   27ddc:	movaps XMMWORD PTR [rsp+0x30],xmm0
   27de1:	mov    rax,QWORD PTR fs:0x28
   27dea:	mov    QWORD PTR [rsp+0x68],rax
   27def:	xor    eax,eax
   27df1:	movaps XMMWORD PTR [rsp+0x40],xmm0
   27df6:	lea    r12,[rsp+0x30]
   27dfb:	movaps XMMWORD PTR [rsp+0x50],xmm0
   27e00:	mov    QWORD PTR [rsp+0x20],0x0
   27e09:	mov    DWORD PTR [rsp+0x14],0xffffffff
   27e11:	mov    DWORD PTR [rsp+0x18],0xffffffff
   27e19:	nop    DWORD PTR [rax+0x0]
   27e20:	lea    r8,[rip+0x254d]        # 2a374 <__PRETTY_FUNCTION__.10113+0x75c>
   27e27:	lea    rdx,[rip+0xcb67]        # 34995 <savefileheader_magic+0x4f5>
   27e2e:	xor    ecx,ecx
   27e30:	mov    r9d,0x2
   27e36:	mov    rsi,rbp
   27e39:	mov    edi,r13d
   27e3c:	call   ebe0 <def_getopt>
   27e41:	cmp    eax,0xffffffff
   27e44:	je     27e60 <main_remus+0xb0>
   27e46:	sub    eax,0x46
   27e49:	cmp    eax,0x2f
   27e4c:	ja     27e20 <main_remus+0x70>
   27e4e:	movsxd rax,DWORD PTR [rbx+rax*4]
   27e52:	add    rax,rbx
   27e55:	jmp    rax
   27e57:	nop    WORD PTR [rax+rax*1+0x0]
   27e60:	mov    r13,QWORD PTR [rip+0x213141]        # 23afa8 <optind@GLIBC_2.2.5>
   27e67:	movsxd rax,DWORD PTR [r13+0x0]
   27e6b:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
   27e70:	call   eb40 <find_domain>
   27e75:	mov    ebx,eax
   27e77:	movsxd rax,DWORD PTR [r13+0x0]
   27e7b:	lea    rdi,[r12+0x8]
   27e80:	xor    esi,esi
   27e82:	mov    rbp,QWORD PTR [rbp+rax*8+0x8]
   27e87:	call   b8b0 <libxl_defbool_setdefault@plt>
   27e8c:	lea    rdi,[r12+0x24]
   27e91:	xor    esi,esi
   27e93:	call   b8b0 <libxl_defbool_setdefault@plt>
   27e98:	lea    rdi,[r12+0x28]
   27e9d:	xor    esi,esi
   27e9f:	call   b8b0 <libxl_defbool_setdefault@plt>
   27ea4:	mov    edi,DWORD PTR [rsp+0x54]
   27ea8:	call   ba70 <libxl_defbool_val@plt>
   27ead:	test   al,al
   27eaf:	jne    27ec1 <main_remus+0x111>
   27eb1:	mov    ecx,DWORD PTR [rsp+0x30]
   27eb5:	test   ecx,ecx
   27eb7:	jne    27ec1 <main_remus+0x111>
   27eb9:	mov    DWORD PTR [rsp+0x30],0xc8
   27ec1:	mov    edi,DWORD PTR [rsp+0x58]
   27ec5:	call   ba70 <libxl_defbool_val@plt>
   27eca:	test   al,al
   27ecc:	je     27edf <main_remus+0x12f>
   27ece:	mov    edi,DWORD PTR [rsp+0x54]
   27ed2:	call   ba70 <libxl_defbool_val@plt>
   27ed7:	test   al,al
   27ed9:	je     283a8 <main_remus+0x5f8>
   27edf:	mov    edi,DWORD PTR [rsp+0x54]
   27ee3:	call   ba70 <libxl_defbool_val@plt>
   27ee8:	test   al,al
   27eea:	je     27f3c <main_remus+0x18c>
   27eec:	mov    edx,DWORD PTR [rsp+0x30]
   27ef0:	test   edx,edx
   27ef2:	jne    28394 <main_remus+0x5e4>
   27ef8:	mov    edi,DWORD PTR [rsp+0x38]
   27efc:	call   ba70 <libxl_defbool_val@plt>
   27f01:	test   al,al
   27f03:	jne    28394 <main_remus+0x5e4>
   27f09:	mov    edi,DWORD PTR [rsp+0x40]
   27f0d:	call   b210 <libxl_defbool_is_default@plt>
   27f12:	test   al,al
   27f14:	je     28394 <main_remus+0x5e4>
   27f1a:	mov    edi,DWORD PTR [rsp+0x50]
   27f1e:	call   b210 <libxl_defbool_is_default@plt>
   27f23:	test   al,al
   27f25:	je     28394 <main_remus+0x5e4>
   27f2b:	mov    edi,DWORD PTR [rsp+0x3c]
   27f2f:	call   b210 <libxl_defbool_is_default@plt>
   27f34:	test   al,al
   27f36:	jne    282e0 <main_remus+0x530>
   27f3c:	cmp    QWORD PTR [rsp+0x48],0x0
   27f42:	je     28308 <main_remus+0x558>
   27f48:	mov    edi,DWORD PTR [rsp+0x38]
   27f4c:	call   ba70 <libxl_defbool_val@plt>
   27f51:	test   al,al
   27f53:	jne    28210 <main_remus+0x460>
   27f59:	cmp    BYTE PTR [r14],0x0
   27f5d:	jne    28180 <main_remus+0x3d0>
   27f63:	mov    QWORD PTR [rsp+0x20],rbp
   27f68:	lea    rcx,[rsp+0x1c]
   27f6d:	lea    rdx,[rsp+0x28]
   27f72:	xor    esi,esi
   27f74:	mov    edi,ebx
   27f76:	call   262f0 <save_domain_core_begin>
   27f7b:	mov    eax,DWORD PTR [rsp+0x1c]
   27f7f:	test   eax,eax
   27f81:	je     283d0 <main_remus+0x620>
   27f87:	mov    rdi,QWORD PTR [rsp+0x20]
   27f8c:	lea    rdx,[rsp+0x18]
   27f91:	lea    rsi,[rsp+0x14]
   27f96:	call   26b40 <create_migration_child>
   27f9b:	mov    r8,QWORD PTR [rsp+0x20]
   27fa0:	mov    ecx,DWORD PTR [rsp+0x1c]
   27fa4:	mov    rdx,QWORD PTR [rsp+0x28]
   27fa9:	mov    esi,DWORD PTR [rsp+0x18]
   27fad:	mov    edi,DWORD PTR [rsp+0x14]
   27fb1:	call   27040 <migrate_do_preamble.isra.1>
   27fb6:	cmp    BYTE PTR [r14],0x0
   27fba:	jne    282c8 <main_remus+0x518>
   27fc0:	mov    ecx,DWORD PTR [rsp+0x14]
   27fc4:	lea    rbp,[rip+0x214e95]        # 23ce60 <ctx>
   27fcb:	mov    r8d,DWORD PTR [rsp+0x18]
   27fd0:	xor    r9d,r9d
   27fd3:	mov    rsi,r12
   27fd6:	mov    edx,ebx
   27fd8:	mov    rdi,QWORD PTR [rbp+0x0]
   27fdc:	call   c410 <libxl_domain_remus_start@plt>
   27fe1:	mov    rdi,QWORD PTR [rbp+0x0]
   27fe5:	xor    esi,esi
   27fe7:	mov    edx,ebx
   27fe9:	mov    r12d,eax
   27fec:	call   b5b0 <libxl_domain_info@plt>
   27ff1:	test   eax,eax
   27ff3:	jne    28250 <main_remus+0x4a0>
   27ff9:	cmp    r12d,0xfffffff8
   27ffd:	je     282a0 <main_remus+0x4f0>
   28003:	mov    edi,DWORD PTR [rsp+0x54]
   28007:	call   ba70 <libxl_defbool_val@plt>
   2800c:	lea    rcx,[rip+0xc89e]        # 348b1 <savefileheader_magic+0x411>
   28013:	test   al,al
   28015:	lea    rax,[rip+0xc8f1]        # 3490d <savefileheader_magic+0x46d>
   2801c:	lea    rdx,[rip+0xd425]        # 35448 <savefileheader_magic+0xfa8>
   28023:	mov    esi,0x1
   28028:	cmovne rcx,rax
   2802c:	mov    rax,QWORD PTR [rip+0x212fbd]        # 23aff0 <stderr@GLIBC_2.2.5>
   28033:	mov    rdi,QWORD PTR [rax]
   28036:	xor    eax,eax
   28038:	call   c1e0 <__fprintf_chk@plt>
   2803d:	mov    rdi,QWORD PTR [rbp+0x0]
   28041:	xor    ecx,ecx
   28043:	mov    edx,0x1
   28048:	mov    esi,ebx
   2804a:	call   b630 <libxl_domain_resume@plt>
   2804f:	mov    edi,DWORD PTR [rsp+0x14]
   28053:	call   b4a0 <close@plt>
   28058:	mov    eax,0x1
   2805d:	mov    rbx,QWORD PTR [rsp+0x68]
   28062:	xor    rbx,QWORD PTR fs:0x28
   2806b:	jne    2838f <main_remus+0x5df>
   28071:	add    rsp,0x78
   28075:	pop    rbx
   28076:	pop    rbp
   28077:	pop    r12
   28079:	pop    r13
   2807b:	pop    r14
   2807d:	pop    r15
   2807f:	ret    
   28080:	xor    r15d,r15d
   28083:	jmp    27e20 <main_remus+0x70>
   28088:	nop    DWORD PTR [rax+rax*1+0x0]
   28090:	mov    rax,QWORD PTR [rip+0x212f29]        # 23afc0 <optarg@GLIBC_2.2.5>
   28097:	mov    r14,QWORD PTR [rax]
   2809a:	jmp    27e20 <main_remus+0x70>
   2809f:	nop
   280a0:	lea    rdi,[r12+0x28]
   280a5:	mov    esi,0x1
   280aa:	call   b140 <libxl_defbool_set@plt>
   280af:	jmp    27e20 <main_remus+0x70>
   280b4:	nop    DWORD PTR [rax+0x0]
   280b8:	lea    rdi,[r12+0xc]
   280bd:	xor    esi,esi
   280bf:	call   b140 <libxl_defbool_set@plt>
   280c4:	jmp    27e20 <main_remus+0x70>
   280c9:	nop    DWORD PTR [rax+0x0]
   280d0:	lea    rdi,[r12+0x20]
   280d5:	xor    esi,esi
   280d7:	call   b140 <libxl_defbool_set@plt>
   280dc:	jmp    27e20 <main_remus+0x70>
   280e1:	nop    DWORD PTR [rax+0x0]
   280e8:	lea    rdi,[r12+0x10]
   280ed:	xor    esi,esi
   280ef:	call   b140 <libxl_defbool_set@plt>
   280f4:	jmp    27e20 <main_remus+0x70>
   280f9:	nop    DWORD PTR [rax+0x0]
   28100:	mov    rax,QWORD PTR [rip+0x212eb9]        # 23afc0 <optarg@GLIBC_2.2.5>
   28107:	mov    edx,0xa
   2810c:	xor    esi,esi
   2810e:	mov    rdi,QWORD PTR [rax]
   28111:	call   b7b0 <strtol@plt>
   28116:	mov    DWORD PTR [rsp+0x30],eax
   2811a:	jmp    27e20 <main_remus+0x70>
   2811f:	nop
   28120:	lea    rdi,[r12+0x24]
   28125:	mov    esi,0x1
   2812a:	call   b140 <libxl_defbool_set@plt>
   2812f:	jmp    27e20 <main_remus+0x70>
   28134:	nop    DWORD PTR [rax+0x0]
   28138:	lea    rdi,[r12+0x8]
   2813d:	mov    esi,0x1
   28142:	call   b140 <libxl_defbool_set@plt>
   28147:	jmp    27e20 <main_remus+0x70>
   2814c:	nop    DWORD PTR [rax+0x0]
   28150:	mov    rax,QWORD PTR [rip+0x212e69]        # 23afc0 <optarg@GLIBC_2.2.5>
   28157:	mov    rax,QWORD PTR [rax]
   2815a:	mov    QWORD PTR [rsp+0x48],rax
   2815f:	jmp    27e20 <main_remus+0x70>
   28164:	nop    DWORD PTR [rax+0x0]
   28168:	lea    rdi,[r12+0x4]
   2816d:	mov    esi,0x1
   28172:	call   b140 <libxl_defbool_set@plt>
   28177:	jmp    27e20 <main_remus+0x70>
   2817c:	nop    DWORD PTR [rax+0x0]
   28180:	mov    edi,DWORD PTR [rsp+0x54]
   28184:	call   ba70 <libxl_defbool_val@plt>
   28189:	test   al,al
   2818b:	je     28330 <main_remus+0x580>
   28191:	mov    edi,DWORD PTR [rsp+0x58]
   28195:	lea    rcx,[rip+0x71cb]        # 2f367 <__func__.10421+0xfdf>
   2819c:	lea    r13,[rip+0xc77b]        # 3491e <savefileheader_magic+0x47e>
   281a3:	test   r15d,r15d
   281a6:	cmovne r13,rcx
   281aa:	mov    QWORD PTR [rsp+0x8],rcx
   281af:	call   ba70 <libxl_defbool_val@plt>
   281b4:	mov    rcx,QWORD PTR [rsp+0x8]
   281b9:	mov    rdx,QWORD PTR [rsp+0x48]
   281be:	test   al,al
   281c0:	lea    rax,[rip+0xc7a7]        # 3496e <savefileheader_magic+0x4ce>
   281c7:	lea    r9,[rip+0xc7b7]        # 34985 <savefileheader_magic+0x4e5>
   281ce:	cmove  rax,rcx
   281d2:	test   rdx,rdx
   281d5:	je     28384 <main_remus+0x5d4>
   281db:	lea    rdi,[rsp+0x20]
   281e0:	sub    rsp,0x8
   281e4:	lea    r8,[rip+0xc7d6]        # 349c1 <savefileheader_magic+0x521>
   281eb:	push   r13
   281ed:	lea    rsi,[rip+0xd17c]        # 35370 <savefileheader_magic+0xed0>
   281f4:	push   rax
   281f5:	push   rdx
   281f6:	mov    rcx,rbp
   281f9:	mov    rdx,r14
   281fc:	xor    eax,eax
   281fe:	call   e8e0 <xasprintf>
   28203:	add    rsp,0x20
   28207:	jmp    27f68 <main_remus+0x1b8>
   2820c:	nop    DWORD PTR [rax+0x0]
   28210:	lea    rdi,[rip+0xc79d]        # 349b4 <savefileheader_magic+0x514>
   28217:	xor    eax,eax
   28219:	mov    edx,0x1a4
   2821e:	mov    esi,0x2
   28223:	call   bf20 <open@plt>
   28228:	test   eax,eax
   2822a:	mov    ecx,eax
   2822c:	mov    DWORD PTR [rsp+0x14],eax
   28230:	jns    27fc4 <main_remus+0x214>
   28236:	lea    rdi,[rip+0xc768]        # 349a5 <savefileheader_magic+0x505>
   2823d:	call   bfd0 <perror@plt>
   28242:	mov    edi,0x1
   28247:	call   c1a0 <exit@plt>
   2824c:	nop    DWORD PTR [rax+0x0]
   28250:	mov    edi,DWORD PTR [rsp+0x54]
   28254:	call   ba70 <libxl_defbool_val@plt>
   28259:	lea    rcx,[rip+0xc651]        # 348b1 <savefileheader_magic+0x411>
   28260:	test   al,al
   28262:	lea    rax,[rip+0xc6a4]        # 3490d <savefileheader_magic+0x46d>
   28269:	lea    rdx,[rip+0xd188]        # 353f8 <savefileheader_magic+0xf58>
   28270:	mov    esi,0x1
   28275:	cmovne rcx,rax
   28279:	mov    rax,QWORD PTR [rip+0x212d70]        # 23aff0 <stderr@GLIBC_2.2.5>
   28280:	mov    rdi,QWORD PTR [rax]
   28283:	xor    eax,eax
   28285:	call   c1e0 <__fprintf_chk@plt>
   2828a:	mov    edi,DWORD PTR [rsp+0x14]
   2828e:	call   b4a0 <close@plt>
   28293:	xor    eax,eax
   28295:	jmp    2805d <main_remus+0x2ad>
   2829a:	nop    WORD PTR [rax+rax*1+0x0]
   282a0:	mov    rax,QWORD PTR [rip+0x212d49]        # 23aff0 <stderr@GLIBC_2.2.5>
   282a7:	lea    rdi,[rip+0xd172]        # 35420 <savefileheader_magic+0xf80>
   282ae:	mov    edx,0x25
   282b3:	mov    esi,0x1
   282b8:	mov    rcx,QWORD PTR [rax]
   282bb:	call   c1b0 <fwrite@plt>
   282c0:	jmp    2804f <main_remus+0x29f>
   282c5:	nop    DWORD PTR [rax]
   282c8:	mov    rdi,QWORD PTR [rsp+0x20]
   282cd:	call   ac40 <free@plt>
   282d2:	jmp    27fc0 <main_remus+0x210>
   282d7:	nop    WORD PTR [rax+rax*1+0x0]
   282e0:	lea    rdi,[rip+0xd001]        # 352e8 <savefileheader_magic+0xe48>
   282e7:	call   bfd0 <perror@plt>
   282ec:	lea    rdi,[r12+0xc]
   282f1:	xor    esi,esi
   282f3:	call   b140 <libxl_defbool_set@plt>
   282f8:	cmp    QWORD PTR [rsp+0x48],0x0
   282fe:	jne    27f48 <main_remus+0x198>
   28304:	nop    DWORD PTR [rax+0x0]
   28308:	mov    edi,DWORD PTR [rsp+0x54]
   2830c:	call   ba70 <libxl_defbool_val@plt>
   28311:	test   al,al
   28313:	je     28370 <main_remus+0x5c0>
   28315:	lea    rax,[rip+0x214af4]        # 23ce10 <default_colo_proxy_script>
   2831c:	mov    rax,QWORD PTR [rax]
   2831f:	mov    QWORD PTR [rsp+0x48],rax
   28324:	jmp    27f48 <main_remus+0x198>
   28329:	nop    DWORD PTR [rax+0x0]
   28330:	lea    rax,[rip+0x7030]        # 2f367 <__func__.10421+0xfdf>
   28337:	lea    r9,[rip+0xc5e0]        # 3491e <savefileheader_magic+0x47e>
   2833e:	test   r15d,r15d
   28341:	lea    rdi,[rsp+0x20]
   28346:	lea    r8,[rip+0xc671]        # 349be <savefileheader_magic+0x51e>
   2834d:	lea    rsi,[rip+0xcff4]        # 35348 <savefileheader_magic+0xea8>
   28354:	cmovne r9,rax
   28358:	mov    rcx,rbp
   2835b:	mov    rdx,r14
   2835e:	xor    eax,eax
   28360:	call   e8e0 <xasprintf>
   28365:	jmp    27f68 <main_remus+0x1b8>
   2836a:	nop    WORD PTR [rax+rax*1+0x0]
   28370:	lea    rax,[rip+0x214aa1]        # 23ce18 <default_remus_netbufscript>
   28377:	mov    rax,QWORD PTR [rax]
   2837a:	mov    QWORD PTR [rsp+0x48],rax
   2837f:	jmp    27f48 <main_remus+0x198>
   28384:	mov    rdx,rcx
   28387:	mov    r9,rcx
   2838a:	jmp    281db <main_remus+0x42b>
   2838f:	call   b130 <__stack_chk_fail@plt>
   28394:	lea    rdi,[rip+0xcf1d]        # 352b8 <savefileheader_magic+0xe18>
   2839b:	call   bfd0 <perror@plt>
   283a0:	or     edi,0xffffffff
   283a3:	call   c1a0 <exit@plt>
   283a8:	mov    rax,QWORD PTR [rip+0x212c41]        # 23aff0 <stderr@GLIBC_2.2.5>
   283af:	lea    rdi,[rip+0xced2]        # 35288 <savefileheader_magic+0xde8>
   283b6:	mov    edx,0x2d
   283bb:	mov    esi,0x1
   283c0:	mov    rcx,QWORD PTR [rax]
   283c3:	call   c1b0 <fwrite@plt>
   283c8:	or     edi,0xffffffff
   283cb:	call   c1a0 <exit@plt>
   283d0:	mov    rax,QWORD PTR [rip+0x212c19]        # 23aff0 <stderr@GLIBC_2.2.5>
   283d7:	lea    rdi,[rip+0xcfc2]        # 353a0 <savefileheader_magic+0xf00>
   283de:	mov    edx,0x51
   283e3:	mov    esi,0x1
   283e8:	mov    rcx,QWORD PTR [rax]
   283eb:	call   c1b0 <fwrite@plt>
   283f0:	mov    edi,0x1
   283f5:	call   c1a0 <exit@plt>
   283fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000028400 <main_vdisplattach>:
   28400:	push   r14
   28402:	push   r13
   28404:	push   r12
   28406:	push   rbp
   28407:	lea    r12,[rip+0x1cc9]        # 2a0d7 <__PRETTY_FUNCTION__.10113+0x4bf>
   2840e:	push   rbx
   2840f:	mov    ebp,edi
   28411:	mov    rbx,rsi
   28414:	sub    rsp,0x40
   28418:	mov    rax,QWORD PTR fs:0x28
   28421:	mov    QWORD PTR [rsp+0x38],rax
   28426:	xor    eax,eax
   28428:	nop    DWORD PTR [rax+rax*1+0x0]
   28430:	lea    rdx,[rip+0x930b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   28437:	xor    ecx,ecx
   28439:	mov    r9d,0x1
   2843f:	mov    r8,r12
   28442:	mov    rsi,rbx
   28445:	mov    edi,ebp
   28447:	call   ebe0 <def_getopt>
   2844c:	cmp    eax,0xffffffff
   2844f:	jne    28430 <main_vdisplattach+0x30>
   28451:	lea    r12,[rsp+0x10]
   28456:	mov    rdi,r12
   28459:	call   c500 <libxl_device_vdispl_init@plt>
   2845e:	mov    r14,QWORD PTR [rip+0x212b43]        # 23afa8 <optind@GLIBC_2.2.5>
   28465:	movsxd rax,DWORD PTR [r14]
   28468:	lea    edx,[rax+0x1]
   2846b:	mov    DWORD PTR [r14],edx
   2846e:	mov    rdi,QWORD PTR [rbx+rax*8]
   28472:	call   eb40 <find_domain>
   28477:	movsxd rdx,DWORD PTR [r14]
   2847a:	mov    r13d,eax
   2847d:	sub    ebp,edx
   2847f:	lea    rbx,[rbx+rdx*8]
   28483:	test   ebp,ebp
   28485:	jle    284e8 <main_vdisplattach+0xe8>
   28487:	lea    eax,[rbp-0x1]
   2848a:	lea    rbp,[rbx+rax*8+0x8]
   2848f:	jmp    284a1 <main_vdisplattach+0xa1>
   28491:	nop    DWORD PTR [rax+0x0]
   28498:	add    rbx,0x8
   2849c:	cmp    rbx,rbp
   2849f:	je     284e8 <main_vdisplattach+0xe8>
   284a1:	mov    rsi,QWORD PTR [rbx]
   284a4:	mov    rdi,r12
   284a7:	call   13ee0 <parse_vdispl_config>
   284ac:	test   eax,eax
   284ae:	je     28498 <main_vdisplattach+0x98>
   284b0:	mov    rdi,r12
   284b3:	mov    DWORD PTR [rsp+0xc],eax
   284b7:	call   bb70 <libxl_device_vdispl_dispose@plt>
   284bc:	mov    rcx,QWORD PTR [rsp+0x38]
   284c1:	xor    rcx,QWORD PTR fs:0x28
   284ca:	mov    eax,DWORD PTR [rsp+0xc]
   284ce:	jne    285aa <main_vdisplattach+0x1aa>
   284d4:	add    rsp,0x40
   284d8:	pop    rbx
   284d9:	pop    rbp
   284da:	pop    r12
   284dc:	pop    r13
   284de:	pop    r14
   284e0:	ret    
   284e1:	nop    DWORD PTR [rax+0x0]
   284e8:	mov    edx,DWORD PTR [rsp+0x28]
   284ec:	test   edx,edx
   284ee:	je     28580 <main_vdisplattach+0x180>
   284f4:	lea    rax,[rip+0x214965]        # 23ce60 <ctx>
   284fb:	mov    rdi,QWORD PTR [rax]
   284fe:	lea    rax,[rip+0x21498b]        # 23ce90 <dryrun_only>
   28505:	mov    eax,DWORD PTR [rax]
   28507:	test   eax,eax
   28509:	jne    28550 <main_vdisplattach+0x150>
   2850b:	xor    ecx,ecx
   2850d:	mov    rdx,r12
   28510:	mov    esi,r13d
   28513:	call   b3b0 <libxl_device_vdispl_add@plt>
   28518:	test   eax,eax
   2851a:	je     284b0 <main_vdisplattach+0xb0>
   2851c:	mov    rax,QWORD PTR [rip+0x212acd]        # 23aff0 <stderr@GLIBC_2.2.5>
   28523:	lea    rdi,[rip+0xd15e]        # 35688 <migrate_receiver_banner+0x48>
   2852a:	mov    edx,0x20
   2852f:	mov    esi,0x1
   28534:	mov    rcx,QWORD PTR [rax]
   28537:	call   c1b0 <fwrite@plt>
   2853c:	mov    eax,0xfffffffd
   28541:	jmp    284b0 <main_vdisplattach+0xb0>
   28546:	nop    WORD PTR cs:[rax+rax*1+0x0]
   28550:	mov    rsi,r12
   28553:	call   aea0 <libxl_device_vdispl_to_json@plt>
   28558:	lea    rsi,[rip+0xd118]        # 35677 <migrate_receiver_banner+0x37>
   2855f:	mov    rdx,rax
   28562:	mov    rbx,rax
   28565:	mov    edi,0x1
   2856a:	xor    eax,eax
   2856c:	call   bd50 <__printf_chk@plt>
   28571:	mov    rdi,rbx
   28574:	call   ac40 <free@plt>
   28579:	xor    eax,eax
   2857b:	jmp    284b0 <main_vdisplattach+0xb0>
   28580:	mov    rax,QWORD PTR [rip+0x212a69]        # 23aff0 <stderr@GLIBC_2.2.5>
   28587:	lea    rdi,[rip+0x83ea]        # 30978 <__func__.10421+0x25f0>
   2858e:	mov    edx,0x2c
   28593:	mov    esi,0x1
   28598:	mov    rcx,QWORD PTR [rax]
   2859b:	call   c1b0 <fwrite@plt>
   285a0:	mov    eax,0xfffffffd
   285a5:	jmp    284b0 <main_vdisplattach+0xb0>
   285aa:	call   b130 <__stack_chk_fail@plt>
   285af:	nop

00000000000285b0 <main_vdispllist>:
   285b0:	push   r15
   285b2:	push   r14
   285b4:	push   r13
   285b6:	push   r12
   285b8:	lea    r12,[rip+0x1b26]        # 2a0e5 <__PRETTY_FUNCTION__.10113+0x4cd>
   285bf:	push   rbp
   285c0:	push   rbx
   285c1:	mov    rbp,rsi
   285c4:	mov    ebx,edi
   285c6:	sub    rsp,0x88
   285cd:	mov    rax,QWORD PTR fs:0x28
   285d6:	mov    QWORD PTR [rsp+0x78],rax
   285db:	xor    eax,eax
   285dd:	nop    DWORD PTR [rax]
   285e0:	lea    rdx,[rip+0x915b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   285e7:	xor    ecx,ecx
   285e9:	mov    r9d,0x1
   285ef:	mov    r8,r12
   285f2:	mov    rsi,rbp
   285f5:	mov    edi,ebx
   285f7:	call   ebe0 <def_getopt>
   285fc:	cmp    eax,0xffffffff
   285ff:	jne    285e0 <main_vdispllist+0x30>
   28601:	mov    rax,QWORD PTR [rip+0x2129a0]        # 23afa8 <optind@GLIBC_2.2.5>
   28608:	movsxd rdx,DWORD PTR [rax]
   2860b:	lea    rcx,[rbp+rdx*8+0x0]
   28610:	sub    ebx,edx
   28612:	test   ebx,ebx
   28614:	mov    QWORD PTR [rsp+0x8],rcx
   28619:	jle    287b0 <main_vdispllist+0x200>
   2861f:	lea    eax,[rbx-0x1]
   28622:	lea    r13,[rip+0x214837]        # 23ce60 <ctx>
   28629:	lea    r12,[rsp+0x40]
   2862e:	lea    rax,[rcx+rax*8+0x8]
   28633:	mov    QWORD PTR [rsp+0x18],rax
   28638:	lea    rax,[rsp+0x3c]
   2863d:	mov    QWORD PTR [rsp+0x20],rax
   28642:	lea    rax,[rsp+0x38]
   28647:	mov    QWORD PTR [rsp+0x28],rax
   2864c:	nop    DWORD PTR [rax+0x0]
   28650:	mov    rax,QWORD PTR [rsp+0x8]
   28655:	mov    rdx,QWORD PTR [rsp+0x20]
   2865a:	mov    rdi,QWORD PTR [r13+0x0]
   2865e:	mov    rsi,QWORD PTR [rax]
   28661:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   28666:	test   eax,eax
   28668:	js     287d8 <main_vdispllist+0x228>
   2866e:	mov    rdx,QWORD PTR [rsp+0x28]
   28673:	mov    esi,DWORD PTR [rsp+0x3c]
   28677:	mov    rdi,QWORD PTR [r13+0x0]
   2867b:	call   b570 <libxl_device_vdispl_list@plt>
   28680:	test   rax,rax
   28683:	mov    QWORD PTR [rsp+0x10],rax
   28688:	mov    rbp,rax
   2868b:	je     2879a <main_vdispllist+0x1ea>
   28691:	mov    esi,DWORD PTR [rsp+0x38]
   28695:	test   esi,esi
   28697:	jle    28790 <main_vdispllist+0x1e0>
   2869d:	xor    ebx,ebx
   2869f:	jmp    286c3 <main_vdispllist+0x113>
   286a1:	nop    DWORD PTR [rax+0x0]
   286a8:	mov    rdi,r12
   286ab:	add    ebx,0x1
   286ae:	add    rbp,0x28
   286b2:	call   c3c0 <libxl_vdisplinfo_dispose@plt>
   286b7:	mov    esi,DWORD PTR [rsp+0x38]
   286bb:	cmp    esi,ebx
   286bd:	jle    28790 <main_vdispllist+0x1e0>
   286c3:	mov    rdi,r12
   286c6:	call   bd70 <libxl_vdisplinfo_init@plt>
   286cb:	mov    esi,DWORD PTR [rsp+0x3c]
   286cf:	mov    rdi,QWORD PTR [r13+0x0]
   286d3:	mov    rcx,r12
   286d6:	mov    rdx,rbp
   286d9:	call   bd10 <libxl_device_vdispl_getinfo@plt>
   286de:	test   eax,eax
   286e0:	mov    r14d,eax
   286e3:	jne    286a8 <main_vdispllist+0xf8>
   286e5:	sub    rsp,0x8
   286e9:	lea    rsi,[rip+0xcfc0]        # 356b0 <migrate_receiver_banner+0x70>
   286f0:	mov    edi,0x1
   286f5:	push   QWORD PTR [rsp+0x58]
   286f9:	push   QWORD PTR [rsp+0x50]
   286fd:	movzx  eax,BYTE PTR [rsp+0x7c]
   28702:	push   rax
   28703:	mov    r9d,DWORD PTR [rsp+0x80]
   2870b:	xor    eax,eax
   2870d:	mov    r8d,DWORD PTR [rsp+0x78]
   28712:	mov    ecx,DWORD PTR [rsp+0x68]
   28716:	mov    edx,DWORD PTR [rsp+0x7c]
   2871a:	call   bd50 <__printf_chk@plt>
   2871f:	add    rsp,0x20
   28723:	mov    eax,DWORD PTR [rsp+0x68]
   28727:	test   eax,eax
   28729:	jle    286a8 <main_vdispllist+0xf8>
   2872f:	xor    r15d,r15d
   28732:	nop    WORD PTR [rax+rax*1+0x0]
   28738:	mov    rax,QWORD PTR [rsp+0x70]
   2873d:	lea    rsi,[rip+0xcfc4]        # 35708 <migrate_receiver_banner+0xc8>
   28744:	mov    edi,0x1
   28749:	add    rax,r15
   2874c:	add    r15,0x20
   28750:	mov    edx,DWORD PTR [rax+0x18]
   28753:	push   rdx
   28754:	mov    edx,DWORD PTR [rax+0x1c]
   28757:	push   rdx
   28758:	mov    edx,DWORD PTR [rax+0x10]
   2875b:	push   rdx
   2875c:	mov    edx,DWORD PTR [rax+0x14]
   2875f:	push   rdx
   28760:	mov    r9d,DWORD PTR [rax+0xc]
   28764:	mov    edx,r14d
   28767:	mov    r8d,DWORD PTR [rax+0x8]
   2876b:	mov    rcx,QWORD PTR [rax]
   2876e:	xor    eax,eax
   28770:	add    r14d,0x1
   28774:	call   bd50 <__printf_chk@plt>
   28779:	add    rsp,0x20
   2877d:	cmp    DWORD PTR [rsp+0x68],r14d
   28782:	jg     28738 <main_vdispllist+0x188>
   28784:	jmp    286a8 <main_vdispllist+0xf8>
   28789:	nop    DWORD PTR [rax+0x0]
   28790:	mov    rdi,QWORD PTR [rsp+0x10]
   28795:	call   c1f0 <libxl_device_vdispl_list_free@plt>
   2879a:	add    QWORD PTR [rsp+0x8],0x8
   287a0:	mov    rax,QWORD PTR [rsp+0x8]
   287a5:	cmp    rax,QWORD PTR [rsp+0x18]
   287aa:	jne    28650 <main_vdispllist+0xa0>
   287b0:	xor    eax,eax
   287b2:	mov    rcx,QWORD PTR [rsp+0x78]
   287b7:	xor    rcx,QWORD PTR fs:0x28
   287c0:	jne    287ff <main_vdispllist+0x24f>
   287c2:	add    rsp,0x88
   287c9:	pop    rbx
   287ca:	pop    rbp
   287cb:	pop    r12
   287cd:	pop    r13
   287cf:	pop    r14
   287d1:	pop    r15
   287d3:	ret    
   287d4:	nop    DWORD PTR [rax+0x0]
   287d8:	mov    rax,QWORD PTR [rsp+0x8]
   287dd:	lea    rdx,[rip+0x8f7c]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   287e4:	mov    esi,0x1
   287e9:	mov    rcx,QWORD PTR [rax]
   287ec:	mov    rax,QWORD PTR [rip+0x2127fd]        # 23aff0 <stderr@GLIBC_2.2.5>
   287f3:	mov    rdi,QWORD PTR [rax]
   287f6:	xor    eax,eax
   287f8:	call   c1e0 <__fprintf_chk@plt>
   287fd:	jmp    2879a <main_vdispllist+0x1ea>
   287ff:	call   b130 <__stack_chk_fail@plt>
   28804:	xchg   ax,ax
   28806:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000028810 <main_vdispldetach>:
   28810:	push   r13
   28812:	push   r12
   28814:	mov    r12d,edi
   28817:	push   rbp
   28818:	push   rbx
   28819:	lea    rbp,[rip+0x18d1]        # 2a0f1 <__PRETTY_FUNCTION__.10113+0x4d9>
   28820:	mov    rbx,rsi
   28823:	sub    rsp,0x38
   28827:	mov    rax,QWORD PTR fs:0x28
   28830:	mov    QWORD PTR [rsp+0x28],rax
   28835:	xor    eax,eax
   28837:	nop    WORD PTR [rax+rax*1+0x0]
   28840:	lea    rdx,[rip+0x8efb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   28847:	xor    ecx,ecx
   28849:	mov    r9d,0x2
   2884f:	mov    r8,rbp
   28852:	mov    rsi,rbx
   28855:	mov    edi,r12d
   28858:	call   ebe0 <def_getopt>
   2885d:	cmp    eax,0xffffffff
   28860:	jne    28840 <main_vdispldetach+0x30>
   28862:	mov    rbp,QWORD PTR [rip+0x21273f]        # 23afa8 <optind@GLIBC_2.2.5>
   28869:	movsxd rax,DWORD PTR [rbp+0x0]
   2886d:	lea    edx,[rax+0x1]
   28870:	mov    DWORD PTR [rbp+0x0],edx
   28873:	mov    rdi,QWORD PTR [rbx+rax*8]
   28877:	call   eb40 <find_domain>
   2887c:	mov    r12d,eax
   2887f:	movsxd rax,DWORD PTR [rbp+0x0]
   28883:	xor    esi,esi
   28885:	lea    edx,[rax+0x1]
   28888:	mov    DWORD PTR [rbp+0x0],edx
   2888b:	mov    rdi,QWORD PTR [rbx+rax*8]
   2888f:	mov    edx,0xa
   28894:	mov    rbx,rsp
   28897:	call   b7b0 <strtol@plt>
   2889c:	mov    rdi,rbx
   2889f:	mov    r13,rax
   288a2:	call   c500 <libxl_device_vdispl_init@plt>
   288a7:	lea    rbp,[rip+0x2145b2]        # 23ce60 <ctx>
   288ae:	mov    rcx,rbx
   288b1:	mov    edx,r13d
   288b4:	mov    esi,r12d
   288b7:	mov    rdi,QWORD PTR [rbp+0x0]
   288bb:	call   bd80 <libxl_devid_to_device_vdispl@plt>
   288c0:	test   eax,eax
   288c2:	jne    28900 <main_vdispldetach+0xf0>
   288c4:	mov    rdi,QWORD PTR [rbp+0x0]
   288c8:	xor    ecx,ecx
   288ca:	mov    rdx,rbx
   288cd:	mov    esi,r12d
   288d0:	call   afc0 <libxl_device_vdispl_remove@plt>
   288d5:	test   eax,eax
   288d7:	mov    ebp,eax
   288d9:	jne    28927 <main_vdispldetach+0x117>
   288db:	mov    rdi,rbx
   288de:	call   bb70 <libxl_device_vdispl_dispose@plt>
   288e3:	mov    rcx,QWORD PTR [rsp+0x28]
   288e8:	xor    rcx,QWORD PTR fs:0x28
   288f1:	mov    eax,ebp
   288f3:	jne    2894e <main_vdispldetach+0x13e>
   288f5:	add    rsp,0x38
   288f9:	pop    rbx
   288fa:	pop    rbp
   288fb:	pop    r12
   288fd:	pop    r13
   288ff:	ret    
   28900:	mov    rax,QWORD PTR [rip+0x2126e9]        # 23aff0 <stderr@GLIBC_2.2.5>
   28907:	lea    rdx,[rip+0xce6a]        # 35778 <migrate_receiver_banner+0x138>
   2890e:	mov    ecx,r13d
   28911:	mov    esi,0x1
   28916:	mov    ebp,0xfffffffd
   2891b:	mov    rdi,QWORD PTR [rax]
   2891e:	xor    eax,eax
   28920:	call   c1e0 <__fprintf_chk@plt>
   28925:	jmp    288db <main_vdispldetach+0xcb>
   28927:	mov    rax,QWORD PTR [rip+0x2126c2]        # 23aff0 <stderr@GLIBC_2.2.5>
   2892e:	lea    rdi,[rip+0xce6b]        # 357a0 <migrate_receiver_banner+0x160>
   28935:	mov    edx,0x23
   2893a:	mov    esi,0x1
   2893f:	mov    ebp,0xfffffffd
   28944:	mov    rcx,QWORD PTR [rax]
   28947:	call   c1b0 <fwrite@plt>
   2894c:	jmp    288db <main_vdispldetach+0xcb>
   2894e:	call   b130 <__stack_chk_fail@plt>
   28953:	nop    WORD PTR cs:[rax+rax*1+0x0]
   2895d:	nop    DWORD PTR [rax]

0000000000028960 <print_params>:
   28960:	push   r13
   28962:	push   r12
   28964:	push   rbp
   28965:	push   rbx
   28966:	mov    rbx,rdi
   28969:	sub    rsp,0x8
   2896d:	mov    edx,DWORD PTR [rdi+0x20]
   28970:	test   edx,edx
   28972:	jne    28b10 <print_params+0x1b0>
   28978:	mov    edx,DWORD PTR [rbx+0x24]
   2897b:	test   edx,edx
   2897d:	jne    28af0 <print_params+0x190>
   28983:	mov    edx,DWORD PTR [rbx+0x28]
   28986:	test   edx,edx
   28988:	jne    28ad0 <print_params+0x170>
   2898e:	mov    edx,DWORD PTR [rbx]
   28990:	test   edx,edx
   28992:	jne    28a50 <print_params+0xf0>
   28998:	mov    eax,DWORD PTR [rbx+0x10]
   2899b:	test   eax,eax
   2899d:	jne    289b8 <print_params+0x58>
   2899f:	add    rsp,0x8
   289a3:	mov    edi,0xa
   289a8:	pop    rbx
   289a9:	pop    rbp
   289aa:	pop    r12
   289ac:	pop    r13
   289ae:	jmp    aca0 <putchar@plt>
   289b3:	nop    DWORD PTR [rax+rax*1+0x0]
   289b8:	lea    rsi,[rip+0xce3d]        # 357fc <migrate_receiver_banner+0x1bc>
   289bf:	xor    eax,eax
   289c1:	mov    edi,0x1
   289c6:	call   bd50 <__printf_chk@plt>
   289cb:	cmp    DWORD PTR [rbx+0x10],0x1
   289cf:	jle    28b30 <print_params+0x1d0>
   289d5:	lea    r13,[rip+0xce35]        # 35811 <migrate_receiver_banner+0x1d1>
   289dc:	xor    r12d,r12d
   289df:	xor    ebp,ebp
   289e1:	nop    DWORD PTR [rax+0x0]
   289e8:	mov    rax,QWORD PTR [rbx+0x18]
   289ec:	add    ebp,0x1
   289ef:	mov    edi,DWORD PTR [rax+r12*1]
   289f3:	add    r12,0x4
   289f7:	call   ac00 <libxl_vsnd_pcm_format_to_string@plt>
   289fc:	mov    rsi,r13
   289ff:	mov    rdx,rax
   28a02:	mov    edi,0x1
   28a07:	xor    eax,eax
   28a09:	call   bd50 <__printf_chk@plt>
   28a0e:	mov    eax,DWORD PTR [rbx+0x10]
   28a11:	sub    eax,0x1
   28a14:	cmp    eax,ebp
   28a16:	jg     289e8 <print_params+0x88>
   28a18:	movsxd rbp,ebp
   28a1b:	shl    rbp,0x2
   28a1f:	mov    rax,QWORD PTR [rbx+0x18]
   28a23:	mov    edi,DWORD PTR [rax+rbp*1]
   28a26:	call   ac00 <libxl_vsnd_pcm_format_to_string@plt>
   28a2b:	lea    rsi,[rip+0x6909]        # 2f33b <__func__.10421+0xfb3>
   28a32:	mov    rdx,rax
   28a35:	mov    edi,0x1
   28a3a:	xor    eax,eax
   28a3c:	call   bd50 <__printf_chk@plt>
   28a41:	jmp    2899f <print_params+0x3f>
   28a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   28a50:	lea    rsi,[rip+0xcda5]        # 357fc <migrate_receiver_banner+0x1bc>
   28a57:	xor    eax,eax
   28a59:	mov    edi,0x1
   28a5e:	call   bd50 <__printf_chk@plt>
   28a63:	cmp    DWORD PTR [rbx],0x1
   28a66:	jle    28b40 <print_params+0x1e0>
   28a6c:	lea    r13,[rip+0xcd9a]        # 3580d <migrate_receiver_banner+0x1cd>
   28a73:	xor    r12d,r12d
   28a76:	xor    ebp,ebp
   28a78:	nop    DWORD PTR [rax+rax*1+0x0]
   28a80:	mov    rax,QWORD PTR [rbx+0x8]
   28a84:	mov    rsi,r13
   28a87:	mov    edi,0x1
   28a8c:	add    ebp,0x1
   28a8f:	mov    edx,DWORD PTR [rax+r12*1]
   28a93:	xor    eax,eax
   28a95:	add    r12,0x4
   28a99:	call   bd50 <__printf_chk@plt>
   28a9e:	mov    eax,DWORD PTR [rbx]
   28aa0:	sub    eax,0x1
   28aa3:	cmp    eax,ebp
   28aa5:	jg     28a80 <print_params+0x120>
   28aa7:	movsxd rbp,ebp
   28aaa:	shl    rbp,0x2
   28aae:	mov    rax,QWORD PTR [rbx+0x8]
   28ab2:	lea    rsi,[rip+0xcd40]        # 357f9 <migrate_receiver_banner+0x1b9>
   28ab9:	mov    edi,0x1
   28abe:	mov    edx,DWORD PTR [rax+rbp*1]
   28ac1:	xor    eax,eax
   28ac3:	call   bd50 <__printf_chk@plt>
   28ac8:	jmp    28998 <print_params+0x38>
   28acd:	nop    DWORD PTR [rax]
   28ad0:	lea    rsi,[rip+0xcd13]        # 357ea <migrate_receiver_banner+0x1aa>
   28ad7:	mov    edi,0x1
   28adc:	xor    eax,eax
   28ade:	call   bd50 <__printf_chk@plt>
   28ae3:	jmp    2898e <print_params+0x2e>
   28ae8:	nop    DWORD PTR [rax+rax*1+0x0]
   28af0:	lea    rsi,[rip+0xcce0]        # 357d7 <migrate_receiver_banner+0x197>
   28af7:	mov    edi,0x1
   28afc:	xor    eax,eax
   28afe:	call   bd50 <__printf_chk@plt>
   28b03:	jmp    28983 <print_params+0x23>
   28b08:	nop    DWORD PTR [rax+rax*1+0x0]
   28b10:	lea    rsi,[rip+0xccad]        # 357c4 <migrate_receiver_banner+0x184>
   28b17:	mov    edi,0x1
   28b1c:	xor    eax,eax
   28b1e:	call   bd50 <__printf_chk@plt>
   28b23:	jmp    28978 <print_params+0x18>
   28b28:	nop    DWORD PTR [rax+rax*1+0x0]
   28b30:	xor    ebp,ebp
   28b32:	jmp    28a1f <print_params+0xbf>
   28b37:	nop    WORD PTR [rax+rax*1+0x0]
   28b40:	xor    ebp,ebp
   28b42:	jmp    28aae <print_params+0x14e>
   28b47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000028b50 <main_vsndattach>:
   28b50:	push   r14
   28b52:	push   r13
   28b54:	push   r12
   28b56:	push   rbp
   28b57:	lea    r12,[rip+0x15a1]        # 2a0ff <__PRETTY_FUNCTION__.10113+0x4e7>
   28b5e:	push   rbx
   28b5f:	mov    ebp,edi
   28b61:	mov    rbx,rsi
   28b64:	add    rsp,0xffffffffffffff80
   28b68:	mov    rax,QWORD PTR fs:0x28
   28b71:	mov    QWORD PTR [rsp+0x78],rax
   28b76:	xor    eax,eax
   28b78:	nop    DWORD PTR [rax+rax*1+0x0]
   28b80:	lea    rdx,[rip+0x8bbb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   28b87:	xor    ecx,ecx
   28b89:	mov    r9d,0x2
   28b8f:	mov    r8,r12
   28b92:	mov    rsi,rbx
   28b95:	mov    edi,ebp
   28b97:	call   ebe0 <def_getopt>
   28b9c:	cmp    eax,0xffffffff
   28b9f:	jne    28b80 <main_vsndattach+0x30>
   28ba1:	lea    r12,[rsp+0x10]
   28ba6:	mov    rdi,r12
   28ba9:	call   b780 <libxl_device_vsnd_init@plt>
   28bae:	mov    r14,QWORD PTR [rip+0x2123f3]        # 23afa8 <optind@GLIBC_2.2.5>
   28bb5:	movsxd rax,DWORD PTR [r14]
   28bb8:	lea    edx,[rax+0x1]
   28bbb:	mov    DWORD PTR [r14],edx
   28bbe:	mov    rdi,QWORD PTR [rbx+rax*8]
   28bc2:	call   eb40 <find_domain>
   28bc7:	movsxd rdx,DWORD PTR [r14]
   28bca:	mov    r13d,eax
   28bcd:	sub    ebp,edx
   28bcf:	lea    rbx,[rbx+rdx*8]
   28bd3:	test   ebp,ebp
   28bd5:	jle    28c38 <main_vsndattach+0xe8>
   28bd7:	lea    eax,[rbp-0x1]
   28bda:	lea    rbp,[rbx+rax*8+0x8]
   28bdf:	jmp    28bf1 <main_vsndattach+0xa1>
   28be1:	nop    DWORD PTR [rax+0x0]
   28be8:	add    rbx,0x8
   28bec:	cmp    rbx,rbp
   28bef:	je     28c38 <main_vsndattach+0xe8>
   28bf1:	mov    rsi,QWORD PTR [rbx]
   28bf4:	mov    rdi,r12
   28bf7:	call   13910 <parse_vsnd_item>
   28bfc:	test   eax,eax
   28bfe:	je     28be8 <main_vsndattach+0x98>
   28c00:	mov    rdi,r12
   28c03:	mov    DWORD PTR [rsp+0xc],eax
   28c07:	call   be90 <libxl_device_vsnd_dispose@plt>
   28c0c:	mov    rcx,QWORD PTR [rsp+0x78]
   28c11:	xor    rcx,QWORD PTR fs:0x28
   28c1a:	mov    eax,DWORD PTR [rsp+0xc]
   28c1e:	jne    28cc0 <main_vsndattach+0x170>
   28c24:	sub    rsp,0xffffffffffffff80
   28c28:	pop    rbx
   28c29:	pop    rbp
   28c2a:	pop    r12
   28c2c:	pop    r13
   28c2e:	pop    r14
   28c30:	ret    
   28c31:	nop    DWORD PTR [rax+0x0]
   28c38:	lea    rax,[rip+0x214221]        # 23ce60 <ctx>
   28c3f:	mov    rdi,QWORD PTR [rax]
   28c42:	lea    rax,[rip+0x214247]        # 23ce90 <dryrun_only>
   28c49:	mov    eax,DWORD PTR [rax]
   28c4b:	test   eax,eax
   28c4d:	jne    28c90 <main_vsndattach+0x140>
   28c4f:	xor    ecx,ecx
   28c51:	mov    rdx,r12
   28c54:	mov    esi,r13d
   28c57:	call   b680 <libxl_device_vsnd_add@plt>
   28c5c:	test   eax,eax
   28c5e:	je     28c00 <main_vsndattach+0xb0>
   28c60:	mov    rax,QWORD PTR [rip+0x212389]        # 23aff0 <stderr@GLIBC_2.2.5>
   28c67:	lea    rdi,[rip+0xcbca]        # 35838 <migrate_receiver_banner+0x1f8>
   28c6e:	mov    edx,0x1e
   28c73:	mov    esi,0x1
   28c78:	mov    rcx,QWORD PTR [rax]
   28c7b:	call   c1b0 <fwrite@plt>
   28c80:	mov    eax,0xfffffffd
   28c85:	jmp    28c00 <main_vsndattach+0xb0>
   28c8a:	nop    WORD PTR [rax+rax*1+0x0]
   28c90:	mov    rsi,r12
   28c93:	call   b9c0 <libxl_device_vsnd_to_json@plt>
   28c98:	lea    rsi,[rip+0xcb76]        # 35815 <migrate_receiver_banner+0x1d5>
   28c9f:	mov    rdx,rax
   28ca2:	mov    rbx,rax
   28ca5:	mov    edi,0x1
   28caa:	xor    eax,eax
   28cac:	call   bd50 <__printf_chk@plt>
   28cb1:	mov    rdi,rbx
   28cb4:	call   ac40 <free@plt>
   28cb9:	xor    eax,eax
   28cbb:	jmp    28c00 <main_vsndattach+0xb0>
   28cc0:	call   b130 <__stack_chk_fail@plt>
   28cc5:	nop
   28cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000028cd0 <main_vsndlist>:
   28cd0:	push   r15
   28cd2:	push   r14
   28cd4:	push   r13
   28cd6:	push   r12
   28cd8:	lea    r12,[rip+0x142c]        # 2a10b <__PRETTY_FUNCTION__.10113+0x4f3>
   28cdf:	push   rbp
   28ce0:	push   rbx
   28ce1:	mov    rbp,rsi
   28ce4:	mov    ebx,edi
   28ce6:	sub    rsp,0x98
   28ced:	mov    rax,QWORD PTR fs:0x28
   28cf6:	mov    QWORD PTR [rsp+0x88],rax
   28cfe:	xor    eax,eax
   28d00:	lea    rdx,[rip+0x8a3b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   28d07:	xor    ecx,ecx
   28d09:	mov    r9d,0x1
   28d0f:	mov    r8,r12
   28d12:	mov    rsi,rbp
   28d15:	mov    edi,ebx
   28d17:	call   ebe0 <def_getopt>
   28d1c:	cmp    eax,0xffffffff
   28d1f:	jne    28d00 <main_vsndlist+0x30>
   28d21:	mov    rax,QWORD PTR [rip+0x212280]        # 23afa8 <optind@GLIBC_2.2.5>
   28d28:	movsxd rdx,DWORD PTR [rax]
   28d2b:	lea    rsi,[rbp+rdx*8+0x0]
   28d30:	sub    ebx,edx
   28d32:	test   ebx,ebx
   28d34:	mov    QWORD PTR [rsp+0x18],rsi
   28d39:	jle    28fa8 <main_vsndlist+0x2d8>
   28d3f:	lea    eax,[rbx-0x1]
   28d42:	lea    rax,[rsi+rax*8+0x8]
   28d47:	mov    QWORD PTR [rsp+0x28],rax
   28d4c:	lea    rax,[rsp+0x4c]
   28d51:	mov    QWORD PTR [rsp+0x30],rax
   28d56:	lea    rax,[rsp+0x48]
   28d5b:	mov    QWORD PTR [rsp+0x38],rax
   28d60:	lea    rax,[rsp+0x50]
   28d65:	mov    QWORD PTR [rsp+0x10],rax
   28d6a:	nop    WORD PTR [rax+rax*1+0x0]
   28d70:	mov    rax,QWORD PTR [rsp+0x18]
   28d75:	mov    rdx,QWORD PTR [rsp+0x30]
   28d7a:	mov    rsi,QWORD PTR [rax]
   28d7d:	lea    rax,[rip+0x2140dc]        # 23ce60 <ctx>
   28d84:	mov    rdi,QWORD PTR [rax]
   28d87:	call   b340 <libxl_domain_qualifier_to_domid@plt>
   28d8c:	test   eax,eax
   28d8e:	js     28fd0 <main_vsndlist+0x300>
   28d94:	lea    rax,[rip+0x2140c5]        # 23ce60 <ctx>
   28d9b:	mov    rdx,QWORD PTR [rsp+0x38]
   28da0:	mov    esi,DWORD PTR [rsp+0x4c]
   28da4:	mov    rdi,QWORD PTR [rax]
   28da7:	call   bd30 <libxl_device_vsnd_list@plt>
   28dac:	test   rax,rax
   28daf:	mov    QWORD PTR [rsp+0x20],rax
   28db4:	mov    rbx,rax
   28db7:	je     28f92 <main_vsndlist+0x2c2>
   28dbd:	mov    esi,DWORD PTR [rsp+0x48]
   28dc1:	test   esi,esi
   28dc3:	jle    28f88 <main_vsndlist+0x2b8>
   28dc9:	mov    DWORD PTR [rsp+0xc],0x0
   28dd1:	jmp    28dfb <main_vsndlist+0x12b>
   28dd3:	nop    DWORD PTR [rax+rax*1+0x0]
   28dd8:	mov    rdi,QWORD PTR [rsp+0x10]
   28ddd:	add    rbx,0x68
   28de1:	call   b5d0 <libxl_vsndinfo_dispose@plt>
   28de6:	add    DWORD PTR [rsp+0xc],0x1
   28deb:	mov    esi,DWORD PTR [rsp+0x48]
   28def:	mov    eax,DWORD PTR [rsp+0xc]
   28df3:	cmp    esi,eax
   28df5:	jle    28f88 <main_vsndlist+0x2b8>
   28dfb:	mov    r14,QWORD PTR [rsp+0x10]
   28e00:	mov    rdi,r14
   28e03:	call   bf90 <libxl_vsndinfo_init@plt>
   28e08:	lea    rax,[rip+0x214051]        # 23ce60 <ctx>
   28e0f:	mov    esi,DWORD PTR [rsp+0x4c]
   28e13:	mov    rcx,r14
   28e16:	mov    rdx,rbx
   28e19:	mov    rdi,QWORD PTR [rax]
   28e1c:	call   ac20 <libxl_device_vsnd_getinfo@plt>
   28e21:	test   eax,eax
   28e23:	jne    28dd8 <main_vsndlist+0x108>
   28e25:	push   QWORD PTR [rsp+0x60]
   28e29:	push   QWORD PTR [rsp+0x58]
   28e2d:	lea    rsi,[rip+0xca24]        # 35858 <migrate_receiver_banner+0x218>
   28e34:	mov    r9d,DWORD PTR [rsp+0x80]
   28e3c:	mov    r8d,DWORD PTR [rsp+0x78]
   28e41:	mov    edi,0x1
   28e46:	mov    ecx,DWORD PTR [rsp+0x68]
   28e4a:	mov    edx,DWORD PTR [rsp+0x7c]
   28e4e:	call   bd50 <__printf_chk@plt>
   28e53:	mov    rcx,QWORD PTR [rbx+0x20]
   28e57:	mov    rdx,QWORD PTR [rbx+0x18]
   28e5b:	lea    rsi,[rip+0xca46]        # 358a8 <migrate_receiver_banner+0x268>
   28e62:	mov    edi,0x1
   28e67:	xor    eax,eax
   28e69:	call   bd50 <__printf_chk@plt>
   28e6e:	lea    rdi,[rbx+0x28]
   28e72:	call   28960 <print_params>
   28e77:	pop    rcx
   28e78:	pop    rsi
   28e79:	mov    edi,DWORD PTR [rsp+0x74]
   28e7d:	test   edi,edi
   28e7f:	jle    28dd8 <main_vsndlist+0x108>
   28e85:	mov    rdi,QWORD PTR [rbx+0x60]
   28e89:	xor    ebp,ebp
   28e8b:	mov    QWORD PTR [rsp],0x0
   28e93:	nop    DWORD PTR [rax+rax*1+0x0]
   28e98:	lea    r12,[rdi+rbp*1]
   28e9c:	mov    r14,QWORD PTR [rsp]
   28ea0:	lea    rsi,[rip+0xc978]        # 3581f <migrate_receiver_banner+0x1df>
   28ea7:	mov    edi,0x1
   28eac:	xor    eax,eax
   28eae:	mov    rcx,QWORD PTR [r12]
   28eb2:	mov    edx,r14d
   28eb5:	call   bd50 <__printf_chk@plt>
   28eba:	lea    rdi,[r12+0x8]
   28ebf:	call   28960 <print_params>
   28ec4:	mov    rdi,QWORD PTR [rbx+0x60]
   28ec8:	lea    rax,[rdi+rbp*1]
   28ecc:	mov    edx,DWORD PTR [rax+0x38]
   28ecf:	test   edx,edx
   28ed1:	jle    28f61 <main_vsndlist+0x291>
   28ed7:	shl    r14,0x4
   28edb:	xor    r15d,r15d
   28ede:	mov    r13,r14
   28ee1:	nop    DWORD PTR [rax+0x0]
   28ee8:	mov    r12,r15
   28eeb:	shl    r12,0x6
   28eef:	add    r12,QWORD PTR [rax+0x40]
   28ef3:	mov    rax,QWORD PTR [rsp+0x78]
   28ef8:	mov    rax,QWORD PTR [rax+r13*1+0x8]
   28efd:	mov    edi,DWORD PTR [r12+0x8]
   28f02:	lea    r14,[rax+r15*8]
   28f06:	call   bf40 <libxl_vsnd_stream_type_to_string@plt>
   28f0b:	mov    rcx,QWORD PTR [r12]
   28f0f:	lea    rsi,[rip+0xc9ba]        # 358d0 <migrate_receiver_banner+0x290>
   28f16:	mov    r8,rax
   28f19:	mov    edx,r15d
   28f1c:	mov    edi,0x1
   28f21:	xor    eax,eax
   28f23:	call   bd50 <__printf_chk@plt>
   28f28:	lea    rdi,[r12+0x10]
   28f2d:	call   28960 <print_params>
   28f32:	mov    edx,DWORD PTR [r14]
   28f35:	mov    ecx,DWORD PTR [r14+0x4]
   28f39:	lea    rsi,[rip+0xc9b8]        # 358f8 <migrate_receiver_banner+0x2b8>
   28f40:	mov    edi,0x1
   28f45:	xor    eax,eax
   28f47:	call   bd50 <__printf_chk@plt>
   28f4c:	mov    rdi,QWORD PTR [rbx+0x60]
   28f50:	lea    edx,[r15+0x1]
   28f54:	add    r15,0x1
   28f58:	lea    rax,[rdi+rbp*1]
   28f5c:	cmp    DWORD PTR [rax+0x38],edx
   28f5f:	jg     28ee8 <main_vsndlist+0x218>
   28f61:	mov    rsi,QWORD PTR [rsp]
   28f65:	add    rbp,0x48
   28f69:	mov    eax,esi
   28f6b:	add    rsi,0x1
   28f6f:	add    eax,0x1
   28f72:	cmp    DWORD PTR [rsp+0x74],eax
   28f76:	mov    QWORD PTR [rsp],rsi
   28f7a:	jg     28e98 <main_vsndlist+0x1c8>
   28f80:	jmp    28dd8 <main_vsndlist+0x108>
   28f85:	nop    DWORD PTR [rax]
   28f88:	mov    rdi,QWORD PTR [rsp+0x20]
   28f8d:	call   b4e0 <libxl_device_vsnd_list_free@plt>
   28f92:	add    QWORD PTR [rsp+0x18],0x8
   28f98:	mov    rax,QWORD PTR [rsp+0x18]
   28f9d:	cmp    rax,QWORD PTR [rsp+0x28]
   28fa2:	jne    28d70 <main_vsndlist+0xa0>
   28fa8:	xor    eax,eax
   28faa:	mov    rbx,QWORD PTR [rsp+0x88]
   28fb2:	xor    rbx,QWORD PTR fs:0x28
   28fbb:	jne    28ff7 <main_vsndlist+0x327>
   28fbd:	add    rsp,0x98
   28fc4:	pop    rbx
   28fc5:	pop    rbp
   28fc6:	pop    r12
   28fc8:	pop    r13
   28fca:	pop    r14
   28fcc:	pop    r15
   28fce:	ret    
   28fcf:	nop
   28fd0:	mov    rax,QWORD PTR [rsp+0x18]
   28fd5:	lea    rdx,[rip+0x8784]        # 31760 <__PRETTY_FUNCTION__.10016+0x6d0>
   28fdc:	mov    esi,0x1
   28fe1:	mov    rcx,QWORD PTR [rax]
   28fe4:	mov    rax,QWORD PTR [rip+0x212005]        # 23aff0 <stderr@GLIBC_2.2.5>
   28feb:	mov    rdi,QWORD PTR [rax]
   28fee:	xor    eax,eax
   28ff0:	call   c1e0 <__fprintf_chk@plt>
   28ff5:	jmp    28f92 <main_vsndlist+0x2c2>
   28ff7:	call   b130 <__stack_chk_fail@plt>
   28ffc:	nop    DWORD PTR [rax+0x0]

0000000000029000 <main_vsnddetach>:
   29000:	push   r13
   29002:	push   r12
   29004:	mov    r12d,edi
   29007:	push   rbp
   29008:	push   rbx
   29009:	lea    rbp,[rip+0x1105]        # 2a115 <__PRETTY_FUNCTION__.10113+0x4fd>
   29010:	mov    rbx,rsi
   29013:	sub    rsp,0x78
   29017:	mov    rax,QWORD PTR fs:0x28
   29020:	mov    QWORD PTR [rsp+0x68],rax
   29025:	xor    eax,eax
   29027:	nop    WORD PTR [rax+rax*1+0x0]
   29030:	lea    rdx,[rip+0x870b]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   29037:	xor    ecx,ecx
   29039:	mov    r9d,0x2
   2903f:	mov    r8,rbp
   29042:	mov    rsi,rbx
   29045:	mov    edi,r12d
   29048:	call   ebe0 <def_getopt>
   2904d:	cmp    eax,0xffffffff
   29050:	jne    29030 <main_vsnddetach+0x30>
   29052:	mov    rbp,QWORD PTR [rip+0x211f4f]        # 23afa8 <optind@GLIBC_2.2.5>
   29059:	movsxd rax,DWORD PTR [rbp+0x0]
   2905d:	lea    edx,[rax+0x1]
   29060:	mov    DWORD PTR [rbp+0x0],edx
   29063:	mov    rdi,QWORD PTR [rbx+rax*8]
   29067:	call   eb40 <find_domain>
   2906c:	mov    r12d,eax
   2906f:	movsxd rax,DWORD PTR [rbp+0x0]
   29073:	xor    esi,esi
   29075:	lea    edx,[rax+0x1]
   29078:	mov    DWORD PTR [rbp+0x0],edx
   2907b:	mov    rdi,QWORD PTR [rbx+rax*8]
   2907f:	mov    edx,0xa
   29084:	mov    rbx,rsp
   29087:	call   b7b0 <strtol@plt>
   2908c:	mov    rdi,rbx
   2908f:	mov    r13,rax
   29092:	call   b780 <libxl_device_vsnd_init@plt>
   29097:	lea    rbp,[rip+0x213dc2]        # 23ce60 <ctx>
   2909e:	mov    rcx,rbx
   290a1:	mov    edx,r13d
   290a4:	mov    esi,r12d
   290a7:	mov    rdi,QWORD PTR [rbp+0x0]
   290ab:	call   b970 <libxl_devid_to_device_vsnd@plt>
   290b0:	test   eax,eax
   290b2:	jne    290f0 <main_vsnddetach+0xf0>
   290b4:	mov    rdi,QWORD PTR [rbp+0x0]
   290b8:	xor    ecx,ecx
   290ba:	mov    rdx,rbx
   290bd:	mov    esi,r12d
   290c0:	call   b600 <libxl_device_vsnd_remove@plt>
   290c5:	test   eax,eax
   290c7:	mov    ebp,eax
   290c9:	jne    29117 <main_vsnddetach+0x117>
   290cb:	mov    rdi,rbx
   290ce:	call   be90 <libxl_device_vsnd_dispose@plt>
   290d3:	mov    rcx,QWORD PTR [rsp+0x68]
   290d8:	xor    rcx,QWORD PTR fs:0x28
   290e1:	mov    eax,ebp
   290e3:	jne    2913e <main_vsnddetach+0x13e>
   290e5:	add    rsp,0x78
   290e9:	pop    rbx
   290ea:	pop    rbp
   290eb:	pop    r12
   290ed:	pop    r13
   290ef:	ret    
   290f0:	mov    rax,QWORD PTR [rip+0x211ef9]        # 23aff0 <stderr@GLIBC_2.2.5>
   290f7:	lea    rdx,[rip+0xc67a]        # 35778 <migrate_receiver_banner+0x138>
   290fe:	mov    ecx,r13d
   29101:	mov    esi,0x1
   29106:	mov    ebp,0xfffffffd
   2910b:	mov    rdi,QWORD PTR [rax]
   2910e:	xor    eax,eax
   29110:	call   c1e0 <__fprintf_chk@plt>
   29115:	jmp    290cb <main_vsnddetach+0xcb>
   29117:	mov    rax,QWORD PTR [rip+0x211ed2]        # 23aff0 <stderr@GLIBC_2.2.5>
   2911e:	lea    rdi,[rip+0xc7fb]        # 35920 <migrate_receiver_banner+0x2e0>
   29125:	mov    edx,0x21
   2912a:	mov    esi,0x1
   2912f:	mov    ebp,0xfffffffd
   29134:	mov    rcx,QWORD PTR [rax]
   29137:	call   c1b0 <fwrite@plt>
   2913c:	jmp    290cb <main_vsnddetach+0xcb>
   2913e:	call   b130 <__stack_chk_fail@plt>
   29143:	nop    WORD PTR cs:[rax+rax*1+0x0]
   2914d:	nop    DWORD PTR [rax]

0000000000029150 <main_vkbattach>:
   29150:	push   r14
   29152:	push   r13
   29154:	push   r12
   29156:	push   rbp
   29157:	lea    r12,[rip+0xf5a]        # 2a0b8 <__PRETTY_FUNCTION__.10113+0x4a0>
   2915e:	push   rbx
   2915f:	mov    ebp,edi
   29161:	mov    rbx,rsi
   29164:	sub    rsp,0x60
   29168:	mov    rax,QWORD PTR fs:0x28
   29171:	mov    QWORD PTR [rsp+0x58],rax
   29176:	xor    eax,eax
   29178:	nop    DWORD PTR [rax+rax*1+0x0]
   29180:	lea    rdx,[rip+0x85bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   29187:	xor    ecx,ecx
   29189:	mov    r9d,0x2
   2918f:	mov    r8,r12
   29192:	mov    rsi,rbx
   29195:	mov    edi,ebp
   29197:	call   ebe0 <def_getopt>
   2919c:	cmp    eax,0xffffffff
   2919f:	jne    29180 <main_vkbattach+0x30>
   291a1:	lea    r12,[rsp+0x10]
   291a6:	mov    rdi,r12
   291a9:	call   bff0 <libxl_device_vkb_init@plt>
   291ae:	mov    r14,QWORD PTR [rip+0x211df3]        # 23afa8 <optind@GLIBC_2.2.5>
   291b5:	movsxd rax,DWORD PTR [r14]
   291b8:	lea    edx,[rax+0x1]
   291bb:	mov    DWORD PTR [r14],edx
   291be:	mov    rdi,QWORD PTR [rbx+rax*8]
   291c2:	call   eb40 <find_domain>
   291c7:	movsxd rdx,DWORD PTR [r14]
   291ca:	mov    r13d,eax
   291cd:	sub    ebp,edx
   291cf:	lea    rbx,[rbx+rdx*8]
   291d3:	test   ebp,ebp
   291d5:	jle    29238 <main_vkbattach+0xe8>
   291d7:	lea    eax,[rbp-0x1]
   291da:	lea    rbp,[rbx+rax*8+0x8]
   291df:	jmp    291f1 <main_vkbattach+0xa1>
   291e1:	nop    DWORD PTR [rax+0x0]
   291e8:	add    rbx,0x8
   291ec:	cmp    rbx,rbp
   291ef:	je     29238 <main_vkbattach+0xe8>
   291f1:	mov    rsi,QWORD PTR [rbx]
   291f4:	mov    rdi,r12
   291f7:	call   130a0 <parse_vkb_config>
   291fc:	test   eax,eax
   291fe:	je     291e8 <main_vkbattach+0x98>
   29200:	mov    rdi,r12
   29203:	mov    DWORD PTR [rsp+0xc],eax
   29207:	call   bf70 <libxl_device_vkb_dispose@plt>
   2920c:	mov    rcx,QWORD PTR [rsp+0x58]
   29211:	xor    rcx,QWORD PTR fs:0x28
   2921a:	mov    eax,DWORD PTR [rsp+0xc]
   2921e:	jne    2934a <main_vkbattach+0x1fa>
   29224:	add    rsp,0x60
   29228:	pop    rbx
   29229:	pop    rbp
   2922a:	pop    r12
   2922c:	pop    r13
   2922e:	pop    r14
   29230:	ret    
   29231:	nop    DWORD PTR [rax+0x0]
   29238:	mov    ecx,DWORD PTR [rsp+0x24]
   2923c:	test   ecx,ecx
   2923e:	je     29320 <main_vkbattach+0x1d0>
   29244:	cmp    QWORD PTR [rsp+0x40],0x0
   2924a:	je     292b0 <main_vkbattach+0x160>
   2924c:	mov    BYTE PTR [rsp+0x34],0x1
   29251:	lea    rax,[rip+0x213c08]        # 23ce60 <ctx>
   29258:	mov    rdi,QWORD PTR [rax]
   2925b:	lea    rax,[rip+0x213c2e]        # 23ce90 <dryrun_only>
   29262:	mov    eax,DWORD PTR [rax]
   29264:	test   eax,eax
   29266:	jne    292f0 <main_vkbattach+0x1a0>
   2926c:	xor    ecx,ecx
   2926e:	mov    rdx,r12
   29271:	mov    esi,r13d
   29274:	call   c570 <libxl_device_vkb_add@plt>
   29279:	test   eax,eax
   2927b:	je     29200 <main_vkbattach+0xb0>
   2927d:	mov    rax,QWORD PTR [rip+0x211d6c]        # 23aff0 <stderr@GLIBC_2.2.5>
   29284:	lea    rdi,[rip+0xc6dc]        # 35967 <migrate_receiver_banner+0x327>
   2928b:	mov    edx,0x1d
   29290:	mov    esi,0x1
   29295:	mov    rcx,QWORD PTR [rax]
   29298:	call   c1b0 <fwrite@plt>
   2929d:	mov    eax,0xfffffffd
   292a2:	jmp    29200 <main_vkbattach+0xb0>
   292a7:	nop    WORD PTR [rax+rax*1+0x0]
   292b0:	mov    edx,DWORD PTR [rsp+0x48]
   292b4:	test   edx,edx
   292b6:	jne    2924c <main_vkbattach+0xfc>
   292b8:	cmp    BYTE PTR [rsp+0x34],0x0
   292bd:	je     29251 <main_vkbattach+0x101>
   292bf:	mov    rax,QWORD PTR [rip+0x211d2a]        # 23aff0 <stderr@GLIBC_2.2.5>
   292c6:	lea    rdi,[rip+0xc6c3]        # 35990 <migrate_receiver_banner+0x350>
   292cd:	mov    edx,0x4e
   292d2:	mov    esi,0x1
   292d7:	mov    rcx,QWORD PTR [rax]
   292da:	call   c1b0 <fwrite@plt>
   292df:	mov    eax,0xfffffffd
   292e4:	jmp    29200 <main_vkbattach+0xb0>
   292e9:	nop    DWORD PTR [rax+0x0]
   292f0:	mov    rsi,r12
   292f3:	call   b090 <libxl_device_vkb_to_json@plt>
   292f8:	lea    rsi,[rip+0xc65f]        # 3595e <migrate_receiver_banner+0x31e>
   292ff:	mov    rdx,rax
   29302:	mov    rbx,rax
   29305:	mov    edi,0x1
   2930a:	xor    eax,eax
   2930c:	call   bd50 <__printf_chk@plt>
   29311:	mov    rdi,rbx
   29314:	call   ac40 <free@plt>
   29319:	xor    eax,eax
   2931b:	jmp    29200 <main_vkbattach+0xb0>
   29320:	mov    rax,QWORD PTR [rip+0x211cc9]        # 23aff0 <stderr@GLIBC_2.2.5>
   29327:	lea    rdi,[rip+0xc614]        # 35942 <migrate_receiver_banner+0x302>
   2932e:	mov    edx,0x1b
   29333:	mov    esi,0x1
   29338:	mov    rcx,QWORD PTR [rax]
   2933b:	call   c1b0 <fwrite@plt>
   29340:	mov    eax,0xfffffffd
   29345:	jmp    29200 <main_vkbattach+0xb0>
   2934a:	call   b130 <__stack_chk_fail@plt>
   2934f:	nop

0000000000029350 <main_vkblist>:
   29350:	push   r15
   29352:	push   r14
   29354:	push   r13
   29356:	push   r12
   29358:	lea    r12,[rip+0xd64]        # 2a0c3 <__PRETTY_FUNCTION__.10113+0x4ab>
   2935f:	push   rbp
   29360:	push   rbx
   29361:	mov    rbp,rsi
   29364:	mov    ebx,edi
   29366:	sub    rsp,0x78
   2936a:	mov    rax,QWORD PTR fs:0x28
   29373:	mov    QWORD PTR [rsp+0x68],rax
   29378:	xor    eax,eax
   2937a:	nop    WORD PTR [rax+rax*1+0x0]
   29380:	lea    rdx,[rip+0x83bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   29387:	xor    ecx,ecx
   29389:	mov    r9d,0x1
   2938f:	mov    r8,r12
   29392:	mov    rsi,rbp
   29395:	mov    edi,ebx
   29397:	call   ebe0 <def_getopt>
   2939c:	cmp    eax,0xffffffff
   2939f:	jne    29380 <main_vkblist+0x30>
   293a1:	lea    rax,[rip+0x838d]        # 31735 <__PRETTY_FUNCTION__.10016+0x6a5>
   293a8:	sub    rsp,0x8
   293ac:	lea    rdx,[rip+0x837e]        # 31731 <__PRETTY_FUNCTION__.10016+0x6a1>
   293b3:	lea    r9,[rip+0x838a]        # 31744 <__PRETTY_FUNCTION__.10016+0x6b4>
   293ba:	lea    r8,[rip+0x8361]        # 31722 <__PRETTY_FUNCTION__.10016+0x692>
   293c1:	lea    rcx,[rip+0x8366]        # 3172e <__PRETTY_FUNCTION__.10016+0x69e>
   293c8:	push   rax
   293c9:	lea    rax,[rip+0xc5b5]        # 35985 <migrate_receiver_banner+0x345>
   293d0:	lea    rsi,[rip+0xc609]        # 359e0 <migrate_receiver_banner+0x3a0>
   293d7:	mov    edi,0x1
   293dc:	push   rax
   293dd:	lea    rax,[rip+0x5030]        # 2e414 <__func__.10421+0x8c>
   293e4:	push   rax
   293e5:	lea    rax,[rip+0x859f]        # 3198b <__PRETTY_FUNCTION__.10016+0x8fb>
   293ec:	push   rax
   293ed:	lea    rax,[rip+0x8349]        # 3173d <__PRETTY_FUNCTION__.10016+0x6ad>
   293f4:	push   rax
   293f5:	xor    eax,eax
   293f7:	call   bd50 <__printf_chk@plt>
   293fc:	mov    rax,QWORD PTR [rip+0x211ba5]        # 23afa8 <optind@GLIBC_2.2.5>
   29403:	add    rsp,0x30
   29407:	movsxd rdx,DWORD PTR [rax]
   2940a:	sub    ebx,edx
   2940c:	lea    r14,[rbp+rdx*8+0x0]
   29411:	test   ebx,ebx
   29413:	jle    29525 <main_vkblist+0x1d5>
   29419:	lea    eax,[rbx-0x1]
   2941c:	lea    r13,[rip+0x213a3d]        # 23ce60 <ctx>
   29423:	lea    r12,[rsp+0x30]
   29428:	lea    rax,[r14+rax*8+0x8]
   2942d:	mov    QWORD PTR [rsp+0x10],rax
   29432:	lea    rax,[rsp+0x2c]
   29437:	mov    QWORD PTR [rsp+0x18],rax
   2943c:	nop    DWORD PTR [rax+0x0]
   29440:	mov    rdi,QWORD PTR [r14]
   29443:	call   eb40 <find_domain>
   29448:	mov    rdx,QWORD PTR [rsp+0x18]
   2944d:	mov    rdi,QWORD PTR [r13+0x0]
   29451:	mov    esi,eax
   29453:	mov    ebp,eax
   29455:	call   c2a0 <libxl_device_vkb_list@plt>
   2945a:	test   rax,rax
   2945d:	mov    QWORD PTR [rsp],rax
   29461:	mov    r15,rax
   29464:	je     29516 <main_vkblist+0x1c6>
   2946a:	mov    esi,DWORD PTR [rsp+0x2c]
   2946e:	test   esi,esi
   29470:	jle    2950d <main_vkblist+0x1bd>
   29476:	xor    ebx,ebx
   29478:	mov    QWORD PTR [rsp+0x8],r14
   2947d:	jmp    2948f <main_vkblist+0x13f>
   2947f:	nop
   29480:	mov    esi,DWORD PTR [rsp+0x2c]
   29484:	add    ebx,0x1
   29487:	add    r15,0x40
   2948b:	cmp    esi,ebx
   2948d:	jle    29508 <main_vkblist+0x1b8>
   2948f:	mov    rdi,QWORD PTR [r13+0x0]
   29493:	mov    rcx,r12
   29496:	mov    rdx,r15
   29499:	mov    esi,ebp
   2949b:	call   ac60 <libxl_device_vkb_getinfo@plt>
   294a0:	test   eax,eax
   294a2:	jne    29480 <main_vkblist+0x130>
   294a4:	mov    edi,DWORD PTR [r15+0x14]
   294a8:	mov    r14,QWORD PTR [rsp+0x30]
   294ad:	add    ebx,0x1
   294b0:	add    r15,0x40
   294b4:	call   bbf0 <libxl_vkb_backend_to_string@plt>
   294b9:	mov    edx,DWORD PTR [rsp+0x4c]
   294bd:	sub    rsp,0x8
   294c1:	lea    rsi,[rip+0xc548]        # 35a10 <migrate_receiver_banner+0x3d0>
   294c8:	push   r14
   294ca:	push   rax
   294cb:	mov    edi,0x1
   294d0:	push   QWORD PTR [r15-0x28]
   294d4:	mov    eax,DWORD PTR [rsp+0x78]
   294d8:	mov    r8d,edx
   294db:	push   rax
   294dc:	mov    eax,DWORD PTR [rsp+0x7c]
   294e0:	push   rax
   294e1:	mov    r9d,DWORD PTR [rsp+0x80]
   294e9:	xor    eax,eax
   294eb:	mov    ecx,DWORD PTR [rsp+0x68]
   294ef:	call   bd50 <__printf_chk@plt>
   294f4:	add    rsp,0x30
   294f8:	mov    rdi,r12
   294fb:	call   b640 <libxl_vkbinfo_dispose@plt>
   29500:	mov    esi,DWORD PTR [rsp+0x2c]
   29504:	cmp    esi,ebx
   29506:	jg     2948f <main_vkblist+0x13f>
   29508:	mov    r14,QWORD PTR [rsp+0x8]
   2950d:	mov    rdi,QWORD PTR [rsp]
   29511:	call   b550 <libxl_device_vkb_list_free@plt>
   29516:	add    r14,0x8
   2951a:	cmp    r14,QWORD PTR [rsp+0x10]
   2951f:	jne    29440 <main_vkblist+0xf0>
   29525:	xor    eax,eax
   29527:	mov    rcx,QWORD PTR [rsp+0x68]
   2952c:	xor    rcx,QWORD PTR fs:0x28
   29535:	jne    29546 <main_vkblist+0x1f6>
   29537:	add    rsp,0x78
   2953b:	pop    rbx
   2953c:	pop    rbp
   2953d:	pop    r12
   2953f:	pop    r13
   29541:	pop    r14
   29543:	pop    r15
   29545:	ret    
   29546:	call   b130 <__stack_chk_fail@plt>
   2954b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000029550 <main_vkbdetach>:
   29550:	push   r13
   29552:	push   r12
   29554:	mov    r12d,edi
   29557:	push   rbp
   29558:	push   rbx
   29559:	lea    rbp,[rip+0xb6c]        # 2a0cc <__PRETTY_FUNCTION__.10113+0x4b4>
   29560:	mov    rbx,rsi
   29563:	sub    rsp,0x58
   29567:	mov    rax,QWORD PTR fs:0x28
   29570:	mov    QWORD PTR [rsp+0x48],rax
   29575:	xor    eax,eax
   29577:	nop    WORD PTR [rax+rax*1+0x0]
   29580:	lea    rdx,[rip+0x81bb]        # 31742 <__PRETTY_FUNCTION__.10016+0x6b2>
   29587:	xor    ecx,ecx
   29589:	mov    r9d,0x2
   2958f:	mov    r8,rbp
   29592:	mov    rsi,rbx
   29595:	mov    edi,r12d
   29598:	call   ebe0 <def_getopt>
   2959d:	cmp    eax,0xffffffff
   295a0:	jne    29580 <main_vkbdetach+0x30>
   295a2:	mov    rbp,QWORD PTR [rip+0x2119ff]        # 23afa8 <optind@GLIBC_2.2.5>
   295a9:	movsxd rax,DWORD PTR [rbp+0x0]
   295ad:	lea    edx,[rax+0x1]
   295b0:	mov    DWORD PTR [rbp+0x0],edx
   295b3:	mov    rdi,QWORD PTR [rbx+rax*8]
   295b7:	call   eb40 <find_domain>
   295bc:	mov    r12d,eax
   295bf:	movsxd rax,DWORD PTR [rbp+0x0]
   295c3:	xor    esi,esi
   295c5:	lea    edx,[rax+0x1]
   295c8:	mov    DWORD PTR [rbp+0x0],edx
   295cb:	mov    rdi,QWORD PTR [rbx+rax*8]
   295cf:	mov    edx,0xa
   295d4:	mov    rbx,rsp
   295d7:	call   b7b0 <strtol@plt>
   295dc:	mov    rdi,rbx
   295df:	mov    r13,rax
   295e2:	call   bff0 <libxl_device_vkb_init@plt>
   295e7:	lea    rbp,[rip+0x213872]        # 23ce60 <ctx>
   295ee:	mov    rcx,rbx
   295f1:	mov    edx,r13d
   295f4:	mov    esi,r12d
   295f7:	mov    rdi,QWORD PTR [rbp+0x0]
   295fb:	call   bbd0 <libxl_devid_to_device_vkb@plt>
   29600:	test   eax,eax
   29602:	jne    29640 <main_vkbdetach+0xf0>
   29604:	mov    rdi,QWORD PTR [rbp+0x0]
   29608:	xor    ecx,ecx
   2960a:	mov    rdx,rbx
   2960d:	mov    esi,r12d
   29610:	call   adc0 <libxl_device_vkb_remove@plt>
   29615:	test   eax,eax
   29617:	mov    ebp,eax
   29619:	jne    29667 <main_vkbdetach+0x117>
   2961b:	mov    rdi,rbx
   2961e:	call   bf70 <libxl_device_vkb_dispose@plt>
   29623:	mov    rcx,QWORD PTR [rsp+0x48]
   29628:	xor    rcx,QWORD PTR fs:0x28
   29631:	mov    eax,ebp
   29633:	jne    2968e <main_vkbdetach+0x13e>
   29635:	add    rsp,0x58
   29639:	pop    rbx
   2963a:	pop    rbp
   2963b:	pop    r12
   2963d:	pop    r13
   2963f:	ret    
   29640:	mov    rax,QWORD PTR [rip+0x2119a9]        # 23aff0 <stderr@GLIBC_2.2.5>
   29647:	lea    rdx,[rip+0xc12a]        # 35778 <migrate_receiver_banner+0x138>
   2964e:	mov    ecx,r13d
   29651:	mov    esi,0x1
   29656:	mov    ebp,0xfffffffd
   2965b:	mov    rdi,QWORD PTR [rax]
   2965e:	xor    eax,eax
   29660:	call   c1e0 <__fprintf_chk@plt>
   29665:	jmp    2961b <main_vkbdetach+0xcb>
   29667:	mov    rax,QWORD PTR [rip+0x211982]        # 23aff0 <stderr@GLIBC_2.2.5>
   2966e:	lea    rdi,[rip+0xc3cb]        # 35a40 <migrate_receiver_banner+0x400>
   29675:	mov    edx,0x20
   2967a:	mov    esi,0x1
   2967f:	mov    ebp,0xfffffffd
   29684:	mov    rcx,QWORD PTR [rax]
   29687:	call   c1b0 <fwrite@plt>
   2968c:	jmp    2961b <main_vkbdetach+0xcb>
   2968e:	call   b130 <__stack_chk_fail@plt>
   29693:	nop    WORD PTR cs:[rax+rax*1+0x0]
   2969d:	nop    DWORD PTR [rax]

00000000000296a0 <__libc_csu_init>:
   296a0:	push   r15
   296a2:	push   r14
   296a4:	mov    r15,rdx
   296a7:	push   r13
   296a9:	push   r12
   296ab:	lea    r12,[rip+0x21073e]        # 239df0 <__frame_dummy_init_array_entry>
   296b2:	push   rbp
   296b3:	lea    rbp,[rip+0x21073e]        # 239df8 <__init_array_end>
   296ba:	push   rbx
   296bb:	mov    r13d,edi
   296be:	mov    r14,rsi
   296c1:	sub    rbp,r12
   296c4:	sub    rsp,0x8
   296c8:	sar    rbp,0x3
   296cc:	call   ab98 <_init>
   296d1:	test   rbp,rbp
   296d4:	je     296f6 <__libc_csu_init+0x56>
   296d6:	xor    ebx,ebx
   296d8:	nop    DWORD PTR [rax+rax*1+0x0]
   296e0:	mov    rdx,r15
   296e3:	mov    rsi,r14
   296e6:	mov    edi,r13d
   296e9:	call   QWORD PTR [r12+rbx*8]
   296ed:	add    rbx,0x1
   296f1:	cmp    rbp,rbx
   296f4:	jne    296e0 <__libc_csu_init+0x40>
   296f6:	add    rsp,0x8
   296fa:	pop    rbx
   296fb:	pop    rbp
   296fc:	pop    r12
   296fe:	pop    r13
   29700:	pop    r14
   29702:	pop    r15
   29704:	ret    
   29705:	nop
   29706:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000029710 <__libc_csu_fini>:
   29710:	repz ret 
   29712:	nop    WORD PTR cs:[rax+rax*1+0x0]
   2971c:	nop    DWORD PTR [rax+0x0]

0000000000029720 <atexit>:
   29720:	mov    rdx,QWORD PTR [rip+0x2118e1]        # 23b008 <__dso_handle>
   29727:	xor    esi,esi
   29729:	jmp    c0d0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000029730 <_fini>:
   29730:	sub    rsp,0x8
   29734:	add    rsp,0x8
   29738:	ret    
