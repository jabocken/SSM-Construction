Number of assembly instructions     = 88
Number of indirect branches         = 2
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 1: a9f
Number of symbolic states (representative of non-determinism): 93
Number of edges: 108

b00 (False): 0

9e0: PUSH Reg R14 2
9e2: PUSH Reg R13 2
9e4: XOR Reg ECX, Reg ECX 2
9e6: PUSH Reg R12 2
9e8: PUSH Reg RBP 1
9e9: MOV Reg EBP, Reg EDI 2
9eb: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102862))) 7
9f2: PUSH Reg RBX 1
9f3: MOV Reg R12, Reg RSI 3
9f6: MOV Reg EDX, Immediate 2 5
9fb: XOR Reg ESI, Reg ESI 2
9fd: CALL setvbuf (external)
a02: CMP Reg EBP, Immediate 1 3
a05: JLE a46 (resolved immediate)
  |
  `- a07,a46
a07: MOV Reg R13, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 8))) 5
a0c: MOV Reg RDI, Reg R13 3
a0f: CALL strlen (external)
a14: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102789))) 7
a1b: MOV Reg RDX, Reg RAX 3
a1e: MOV Reg RSI, Reg R13 3
a21: MOV Reg R14, Reg RAX 3
a24: CALL strncmp (external)
a29: MOVSXD Reg RBX, Reg EAX 3
a2c: TEST Reg EBX, Reg EBX 2
a2e: JE a75 (resolved immediate)
  |
  `- a30,a75
a30: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102777))) 7
a37: MOV Reg RDX, Reg R14 3
a3a: MOV Reg RSI, Reg R13 3
a3d: CALL strncmp (external)
a42: TEST Reg EAX, Reg EAX 2
a44: JE a70 (resolved immediate)
  |
  `- a46,a70
a46: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102803))) 7
a4d: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 868))) 7
a54: MOV Reg EDX, Immediate 200 5
a59: MOV Reg ESI, Immediate 1 5
a5e: XOR Reg EBX, Reg EBX 2
a60: CALL fwrite (external)
a65: MOV Reg EAX, Reg EBX 2
a67: POP Reg RBX 1
a68: POP Reg RBP 1
a69: POP Reg R12 2
a6b: POP Reg R13 2
a6d: POP Reg R14 2
a6f: RET  1
  |
  `- 
a70: MOV Reg EBX, Immediate 1 5
a75: XOR Reg EDX, Reg EDX 2
a77: XOR Reg ESI, Reg ESI 2
a79: XOR Reg EDI, Reg EDI 2
a7b: CALL xc_interface_open (external)
a80: TEST Reg RAX, Reg RAX 3
a83: MOV Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102758))), Reg RAX 7
a8a: JE acd (resolved immediate)
  |
  `- a8c,acd
a8c: LEA Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102669))) 7
a93: SHL Reg RBX, Immediate 4 4
a97: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 16))) 5
a9c: LEA Reg EDI, Address (SizeDir 32 (AddrMinus (FromReg RBP) (AddrImm 2))) 3
a9f: CALL Address (SizeDir 64 (AddrPlus (AddrPlus (FromReg RAX) (AddrTimes (AddrImm 1) (FromReg RBX))) (AddrImm 8))) 4
aa3: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102726))) 7
aaa: MOV Reg EBX, Reg EAX 2
aac: CALL xc_interface_close (external)
ab1: CMP Reg EBX, Immediate 11 3
ab4: JE ac6 (resolved immediate)
  |
  `- ab6,ac6
ab6: CMP Reg EBX, Immediate 16 3
ab9: JE ac6 (resolved immediate)
  |
  `- abb,ac6
abb: TEST Reg EBX, Reg EBX 2
abd: JE a65 (resolved immediate)
  |
  `- a65,abf
abf: MOV Reg EBX, Immediate 1 5
ac4: JMP a65 (resolved immediate)
  |
  `- a65
ac6: MOV Reg EBX, Immediate 2 5
acb: JMP a65 (resolved immediate)
  |
  `- a65
acd: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102668))) 7
ad4: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 989))) 7
adb: MOV Reg EDX, Immediate 26 5
ae0: MOV Reg ESI, Immediate 1 5
ae5: XOR Reg EBX, Reg EBX 2
ae7: CALL fwrite (external)
aec: JMP a65 (resolved immediate)
  |
  `- a65
b00: XOR Reg EBP, Reg EBP 2
b02: MOV Reg R9, Reg RDX 3
b05: POP Reg RSI 1
b06: MOV Reg RDX, Reg RSP 3
b09: AND Reg RSP, Immediate 18446744073709551600 4
b0d: PUSH Reg RAX 1
b0e: PUSH Reg RSP 1
b0f: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 650))) 7
b16: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 531))) 7
b1d: LEA Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RIP) (AddrImm 324))) 7
b24: CALL __libc_start_main (external)
  |
  `- 9e0
