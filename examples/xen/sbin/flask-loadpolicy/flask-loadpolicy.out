Number of assembly instructions     = 193
Number of indirect branches         = 1
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 198
Number of edges: 215

e40 (False): 0

b50: PUSH Reg R14 2
b52: PUSH Reg R13 2
b54: PUSH Reg R12 2
b56: PUSH Reg RBP 1
b57: PUSH Reg RBX 1
b58: SUB Reg RSP, Immediate 160 7
b5f: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
b68: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 152))), Reg RAX 8
b70: XOR Reg EAX, Reg EAX 2
b72: CMP Reg EDI, Immediate 2 3
b75: JNE e12 (resolved immediate)
  |
  `- b7b,e12
b7b: MOV Reg RBP, Address (SizeDir 64 (AddrPlus (FromReg RSI) (AddrImm 8))) 4
b7f: XOR Reg EAX, Reg EAX 2
b81: XOR Reg ESI, Reg ESI 2
b83: MOV Reg RDI, Reg RBP 3
b86: CALL open (external)
b8b: TEST Reg EAX, Reg EAX 2
b8d: MOV Reg R12D, Reg EAX 3
b90: JS cc9 (resolved immediate)
  |
  `- b96,cc9
b96: MOV Reg RDX, Reg RSP 3
b99: MOV Reg RSI, Reg RBP 3
b9c: MOV Reg EDI, Immediate 1 5
ba1: CALL __xstat (external)
ba6: TEST Reg EAX, Reg EAX 2
ba8: MOV Reg EBX, Reg EAX 2
baa: JS c67 (resolved immediate)
  |
  `- bb0,c67
bb0: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
bb5: MOV Reg RDI, Reg RBX 3
bb8: CALL malloc (external)
bbd: XOR Reg R9D, Reg R9D 3
bc0: MOV Reg RSI, Reg RBX 3
bc3: XOR Reg EDI, Reg EDI 2
bc5: MOV Reg R8D, Reg R12D 3
bc8: MOV Reg ECX, Immediate 1 5
bcd: MOV Reg EDX, Immediate 1 5
bd2: MOV Reg R13, Reg RAX 3
bd5: CALL mmap (external)
bda: CMP Reg RAX, Immediate 18446744073709551615 4
bde: MOV Reg RBX, Reg RAX 3
be1: JE d2d (resolved immediate)
  |
  `- be7,d2d
be7: XOR Reg EDX, Reg EDX 2
be9: XOR Reg ESI, Reg ESI 2
beb: XOR Reg EDI, Reg EDI 2
bed: CALL xc_interface_open (external)
bf2: TEST Reg RAX, Reg RAX 3
bf5: MOV Reg RBP, Reg RAX 3
bf8: JE db6 (resolved immediate)
  |
  `- bfe,db6
bfe: MOV Reg R14, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
c03: MOV Reg RSI, Reg RBX 3
c06: MOV Reg RDI, Reg R13 3
c09: MOV Reg RDX, Reg R14 3
c0c: CALL memcpy (external)
c11: MOV Reg EDX, Reg R14D 3
c14: MOV Reg RSI, Reg R13 3
c17: MOV Reg RDI, Reg RBP 3
c1a: CALL xc_flask_load (external)
c1f: TEST Reg EAX, Reg EAX 2
c21: MOV Reg R14D, Reg EAX 3
c24: JS cfa (resolved immediate)
  |
  `- c2a,cfa
c2a: LEA Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 956))) 7
c31: CALL puts (external)
c36: MOV Reg RDI, Reg R13 3
c39: CALL free (external)
c3e: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
c43: MOV Reg RDI, Reg RBX 3
c46: CALL munmap (external)
c4b: TEST Reg EAX, Reg EAX 2
c4d: MOV Reg EBX, Reg EAX 2
c4f: JS d77 (resolved immediate)
  |
  `- c55,d77
c55: MOV Reg EDI, Reg R12D 3
c58: CALL close (external)
c5d: MOV Reg RDI, Reg RBP 3
c60: CALL xc_interface_close (external)
c65: JMP ca0 (resolved immediate)
  |
  `- ca0
c67: CALL __errno_location (external)
c6c: MOV Reg EDI, Address (SizeDir 32 (FromReg RAX)) 2
c6e: CALL strerror (external)
c73: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102182))) 7
c7a: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 959))) 7
c81: MOV Reg R8, Reg RAX 3
c84: MOV Reg RCX, Reg RBP 3
c87: MOV Reg ESI, Immediate 1 5
c8c: XOR Reg EAX, Reg EAX 2
c8e: CALL __fprintf_chk (external)
c93: MOV Reg EDI, Reg R12D 3
c96: CALL close (external)
c9b: NOP  5
ca0: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 152))) 8
ca8: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
cb1: MOV Reg EAX, Reg EBX 2
cb3: JNE e0d (resolved immediate)
  |
  `- cb9,e0d
cb9: ADD Reg RSP, Immediate 160 7
cc0: POP Reg RBX 1
cc1: POP Reg RBP 1
cc2: POP Reg R12 2
cc4: POP Reg R13 2
cc6: POP Reg R14 2
cc8: RET  1
  |
  `- 
cc9: CALL __errno_location (external)
cce: MOV Reg EDI, Address (SizeDir 32 (FromReg RAX)) 2
cd0: OR Reg EBX, Immediate 4294967295 3
cd3: CALL strerror (external)
cd8: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102081))) 7
cdf: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 810))) 7
ce6: MOV Reg R8, Reg RAX 3
ce9: MOV Reg RCX, Reg RBP 3
cec: MOV Reg ESI, Immediate 1 5
cf1: XOR Reg EAX, Reg EAX 2
cf3: CALL __fprintf_chk (external)
cf8: JMP ca0 (resolved immediate)
  |
  `- ca0
cfa: CALL __errno_location (external)
cff: MOV Reg EDI, Reg R14D 3
d02: NEG Reg EDI 2
d04: MOV Address (SizeDir 32 (FromReg RAX)), Reg EDI 2
d06: CALL strerror (external)
d0b: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2102030))) 7
d12: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 983))) 7
d19: MOV Reg RCX, Reg RAX 3
d1c: MOV Reg ESI, Immediate 1 5
d21: XOR Reg EAX, Reg EAX 2
d23: CALL __fprintf_chk (external)
d28: JMP c36 (resolved immediate)
  |
  `- c36
d2d: CALL __errno_location (external)
d32: MOV Reg EDI, Address (SizeDir 32 (FromReg RAX)) 2
d34: CALL strerror (external)
d39: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2101984))) 7
d40: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 833))) 7
d47: MOV Reg RCX, Reg RAX 3
d4a: MOV Reg ESI, Immediate 1 5
d4f: XOR Reg EAX, Reg EAX 2
d51: CALL __fprintf_chk (external)
d56: MOV Reg RDI, Reg R13 3
d59: CALL free (external)
d5e: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 48))) 5
d63: MOV Reg RDI, Reg RBX 3
d66: XOR Reg EBP, Reg EBP 2
d68: CALL munmap (external)
d6d: TEST Reg EAX, Reg EAX 2
d6f: MOV Reg EBX, Reg EAX 2
d71: JNS e00 (resolved immediate)
  |
  `- d77,e00
d77: CALL __errno_location (external)
d7c: MOV Reg EDI, Address (SizeDir 32 (FromReg RAX)) 2
d7e: CALL strerror (external)
d83: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2101910))) 7
d8a: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 903))) 7
d91: MOV Reg RCX, Reg RAX 3
d94: MOV Reg ESI, Immediate 1 5
d99: XOR Reg EAX, Reg EAX 2
d9b: CALL __fprintf_chk (external)
da0: MOV Reg EDI, Reg R12D 3
da3: CALL close (external)
da8: TEST Reg RBP, Reg RBP 3
dab: JNE c5d (resolved immediate)
  |
  `- c5d,db1
db1: JMP ca0 (resolved immediate)
  |
  `- ca0
db6: CALL __errno_location (external)
dbb: MOV Reg EDI, Address (SizeDir 32 (FromReg RAX)) 2
dbd: CALL strerror (external)
dc2: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2101847))) 7
dc9: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 752))) 7
dd0: MOV Reg RCX, Reg RAX 3
dd3: MOV Reg ESI, Immediate 1 5
dd8: XOR Reg EAX, Reg EAX 2
dda: CALL __fprintf_chk (external)
ddf: MOV Reg RDI, Reg R13 3
de2: CALL free (external)
de7: TEST Reg RBX, Reg RBX 3
dea: JNE d5e (resolved immediate)
  |
  `- d5e,df0
df0: MOV Reg EDI, Reg R12D 3
df3: OR Reg EBX, Immediate 4294967295 3
df6: CALL close (external)
dfb: JMP ca0 (resolved immediate)
  |
  `- ca0
e00: MOV Reg EDI, Reg R12D 3
e03: CALL close (external)
e08: JMP ca0 (resolved immediate)
  |
  `- ca0
e0d: CALL __stack_chk_fail (external)
  |
  `- 
e12: MOV Reg RCX, Address (SizeDir 64 (FromReg RSI)) 3
e15: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2101764))) 7
e1c: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 433))) 7
e23: MOV Reg ESI, Immediate 1 5
e28: CALL __fprintf_chk (external)
e2d: MOV Reg EDI, Immediate 1 5
e32: CALL exit (external)
  |
  `- 
e40: XOR Reg EBP, Reg EBP 2
e42: MOV Reg R9, Reg RDX 3
e45: POP Reg RSI 1
e46: MOV Reg RDX, Reg RSP 3
e49: AND Reg RSP, Immediate 18446744073709551600 4
e4d: PUSH Reg RAX 1
e4e: PUSH Reg RSP 1
e4f: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 362))) 7
e56: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 243))) 7
e5d: LEA Reg RDI, Address (SizeDir 64 (AddrMinus (FromReg RIP) (AddrImm 788))) 7
e64: CALL __libc_start_main (external)
  |
  `- b50
