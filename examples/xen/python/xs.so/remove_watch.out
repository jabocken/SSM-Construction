Number of assembly instructions     = 30
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 30
Number of edges: 31

25bb (False): 0

25bb: PUSH Reg R13 2
25bd: PUSH Reg R12 2
25bf: PUSH Reg RBP 1
25c0: PUSH Reg RBX 1
25c1: SUB Reg RSP, Immediate 8 4
25c5: MOV Reg R12, Reg RDI 3
25c8: MOV Reg R13, Reg RSI 3
25cb: MOV Reg EBP, Immediate 0 5
25d0: MOVSXD Reg RBX, Reg EBP 3
25d3: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 24))) 5
25d8: CALL PyList_Size (external)
25dd: CMP Reg RBX, Reg RAX 3
25e0: JGE 260d (resolved immediate)
  |
  `- 25e2,260d
25e2: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 24))) 5
25e7: MOV Reg RSI, Reg RBX 3
25ea: CALL PyList_GetItem (external)
25ef: CMP Reg RAX, Reg R13 3
25f2: JZ 25f9 (resolved immediate)
  |
  `- 25f4,25f9
25f4: ADD Reg EBP, Immediate 1 3
25f7: JMP 25d0 (resolved immediate)
  |
  `- 25d0
25f9: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrImm 24))) 5
25fe: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2107867))) 7
2605: MOV Reg RSI, Reg RBX 3
2608: CALL PySequence_SetItem (external)
260d: ADD Reg RSP, Immediate 8 4
2611: POP Reg RBX 1
2612: POP Reg RBP 1
2613: POP Reg R12 2
2615: POP Reg R13 2
2617: RET  1
  |
  `- 
