Number of assembly instructions     = 73
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 73
Number of edges: 73

1ee6 (True): 200f
1f11 (True): 1ff3
1f59 (False): 0

1ee6: TEST Reg DIL, Reg DIL 3
1ee9: JE 1ef7 (resolved immediate)
  |
  `- 1eeb,1ef7
1eeb: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2109678))) 7
1ef2: ADD Address (SizeDir 64 (FromReg RAX)), Immediate 1 4
1ef6: RET  1
  |
  `- 
1ef7: SUB Reg RSP, Immediate 8 4
1efb: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111422))) 7
1f02: CALL PyErr_SetFromErrno (external)
1f07: MOV Reg EAX, Immediate 0 5
1f0c: ADD Reg RSP, Immediate 8 4
1f10: RET  1
  |
  `- 
1f11: PUSH Reg RBX 1
1f12: MOV Reg EBX, Reg EDI 2
1f14: CALL __errno_location (external)
1f19: MOV Address (SizeDir 32 (FromReg RAX)), Reg EBX 2
1f1b: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111390))) 7
1f22: CALL PyErr_SetFromErrno (external)
1f27: POP Reg RBX 1
1f28: RET  1
  |
  `- 
1f59: PUSH Reg RBP 1
1f5a: PUSH Reg RBX 1
1f5b: SUB Reg RSP, Immediate 24 4
1f5f: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
1f68: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RCX 5
1f6d: XOR Reg ECX, Reg ECX 2
1f6f: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
1f73: TEST Reg RBX, Reg RBX 3
1f76: JE 1fe9 (resolved immediate)
  |
  `- 1f78,1fe9
1f78: MOV Reg RAX, Reg RSI 3
1f7b: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4))) 5
1f80: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 4988))) 7
1f87: MOV Reg RDI, Reg RAX 3
1f8a: MOV Reg EAX, Immediate 0 5
1f8f: CALL PyArg_ParseTuple (external)
1f94: TEST Reg EAX, Reg EAX 2
1f96: JE 2014 (resolved immediate)
  |
  `- 1f98,2014
1f98: CALL PyEval_SaveThread (external)
1f9d: MOV Reg RBP, Reg RAX 3
1fa0: MOV Reg ESI, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 4))) 4
1fa4: MOV Reg RDI, Reg RBX 3
1fa7: CALL xs_get_domain_path (external)
1fac: MOV Reg RBX, Reg RAX 3
1faf: MOV Reg RDI, Reg RBP 3
1fb2: CALL PyEval_RestoreThread (external)
1fb7: TEST Reg RBX, Reg RBX 3
1fba: JE 1ffa (resolved immediate)
  |
  `- 1fbc,1ffa
1fbc: MOV Reg RDI, Reg RBX 3
1fbf: CALL PyString_FromString (external)
1fc4: MOV Reg RBP, Reg RAX 3
1fc7: MOV Reg RDI, Reg RBX 3
1fca: CALL free (external)
1fcf: MOV Reg RAX, Reg RBP 3
1fd2: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
1fd7: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
1fe0: JNE 201b (resolved immediate)
  |
  `- 1fe2,201b
1fe2: ADD Reg RSP, Immediate 24 4
1fe6: POP Reg RBX 1
1fe7: POP Reg RBP 1
1fe8: RET  1
  |
  `- 
1fe9: MOV Reg EDI, Immediate 22 5
1fee: CALL xs_set_error (internal)
  |
  `- 1f11
1ff3: MOV Reg EBP, Immediate 0 5
1ff8: JMP 1fcf (resolved immediate)
  |
  `- 1fcf
1ffa: CALL __errno_location (external)
1fff: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 2 3
2002: SETE Reg DIL 4
2006: MOVZX Reg EDI, Reg DIL 4
200a: CALL none (internal)
  |
  `- 1ee6
200f: MOV Reg RBP, Reg RAX 3
2012: JMP 1fcf (resolved immediate)
  |
  `- 1fcf
2014: MOV Reg EBP, Immediate 0 5
2019: JMP 1fcf (resolved immediate)
  |
  `- 1fcf
201b: CALL __stack_chk_fail (external)
  |
  `- 
