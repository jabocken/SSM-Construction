Number of assembly instructions     = 73
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 73
Number of edges: 72

1ee6 (True): 3136
1f11 (True): 3159
3097 (False): 0

1ee6: TEST Reg DIL, Reg DIL 3
1ee9: JZ 1ef7 (resolved immediate)
  |
  `- 1eeb,1ef7
1eeb: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2109678))) 7
1ef2: ADD Address (SizeDir 64 (FromReg RAX)), Immediate 1 4
1ef6: RET  1
  |
  `- 
1ef7: SUB Reg RSP, Immediate 8 4
1efb: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111422))) 7
1f02: CALL PyErr_SetFromErrno (external)
1f07: MOV Reg EAX, Immediate 0 5
1f0c: ADD Reg RSP, Immediate 8 4
1f10: RET  1
  |
  `- 
1f11: PUSH Reg RBX 1
1f12: MOV Reg EBX, Reg EDI 2
1f14: CALL __errno_location (external)
1f19: MOV Address (SizeDir 32 (FromReg RAX)), Reg EBX 2
1f1b: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111390))) 7
1f22: CALL PyErr_SetFromErrno (external)
1f27: POP Reg RBX 1
1f28: RET  1
  |
  `- 
3097: PUSH Reg R12 2
3099: PUSH Reg RBP 1
309a: PUSH Reg RBX 1
309b: SUB Reg RSP, Immediate 48 4
309f: MOV Reg RAX, Reg RSI 3
30a2: MOV Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
30ab: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))), Reg RSI 5
30b0: XOR Reg ESI, Reg ESI 2
30b2: MOV Reg RBX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
30b6: TEST Reg RBX, Reg RBX 3
30b9: JZ 314f (resolved immediate)
  |
  `- 30bf,314f
30bf: LEA Reg RCX, Address (AddrPlus (FromReg RSP) (AddrImm 24)) 5
30c4: LEA Reg RDX, Address (AddrPlus (FromReg RSP) (AddrImm 16)) 5
30c9: LEA Reg R9, Address (AddrPlus (FromReg RSP) (AddrImm 12)) 5
30ce: LEA Reg R8, Address (AddrPlus (FromReg RSP) (AddrImm 32)) 5
30d3: LEA Reg RSI, Address (AddrPlus (FromReg RIP) (AddrImm 588)) 7
30da: MOV Reg RDI, Reg RAX 3
30dd: MOV Reg EAX, Immediate 0 5
30e2: CALL PyArg_ParseTuple (external)
30e7: TEST Reg EAX, Reg EAX 2
30e9: JZ 3160 (resolved immediate)
  |
  `- 30eb,3160
30eb: MOV Reg EDX, Immediate 16 5
30f0: MOV Reg ESI, Immediate 0 5
30f5: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
30fa: CALL strtoul (external)
30ff: MOV Reg R12, Reg RAX 3
3102: CALL PyEval_SaveThread (external)
3107: MOV Reg RBP, Reg RAX 3
310a: MOV Reg R8D, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 12))) 5
310f: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 32))) 5
3114: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
3119: MOV Reg ESI, Reg R12D 3
311c: MOV Reg RDI, Reg RBX 3
311f: CALL xs_write (external)
3124: MOV Reg EBX, Reg EAX 2
3126: MOV Reg RDI, Reg RBP 3
3129: CALL PyEval_RestoreThread (external)
312e: MOVZX Reg EDI, Reg BL 3
3131: CALL none (internal)
  |
  `- 1ee6
3136: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 40))) 5
313b: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
3144: JNZ 3167 (resolved immediate)
  |
  `- 3146,3167
3146: ADD Reg RSP, Immediate 48 4
314a: POP Reg RBX 1
314b: POP Reg RBP 1
314c: POP Reg R12 2
314e: RET  1
  |
  `- 
314f: MOV Reg EDI, Immediate 22 5
3154: CALL xs_set_error (internal)
  |
  `- 1f11
3159: MOV Reg EAX, Immediate 0 5
315e: JMP 3136 (resolved immediate)
  |
  `- 3136
3160: MOV Reg EAX, Immediate 0 5
3165: JMP 3136 (resolved immediate)
  |
  `- 3136
3167: CALL __stack_chk_fail (external)
  |
  `- 
