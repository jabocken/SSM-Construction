Number of assembly instructions     = 124
Number of indirect branches         = 0
Number of unresolved indirect jumps = 0: 
Number of unresolved indirect calls = 0: 
Number of symbolic states (representative of non-determinism): 124
Number of edges: 126

1ee6 (True): 3085
1f11 (True): 23cf
2365 (True): 2fd8
2fac (False): 0

1ee6: TEST Reg DIL, Reg DIL 3
1ee9: JE 1ef7 (resolved immediate)
  |
  `- 1eeb,1ef7
1eeb: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2109678))) 7
1ef2: ADD Address (SizeDir 64 (FromReg RAX)), Immediate 1 4
1ef6: RET  1
  |
  `- 
1ef7: SUB Reg RSP, Immediate 8 4
1efb: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111422))) 7
1f02: CALL PyErr_SetFromErrno (external)
1f07: MOV Reg EAX, Immediate 0 5
1f0c: ADD Reg RSP, Immediate 8 4
1f10: RET  1
  |
  `- 
1f11: PUSH Reg RBX 1
1f12: MOV Reg EBX, Reg EDI 2
1f14: CALL __errno_location (external)
1f19: MOV Address (SizeDir 32 (FromReg RAX)), Reg EBX 2
1f1b: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 2111390))) 7
1f22: CALL PyErr_SetFromErrno (external)
1f27: POP Reg RBX 1
1f28: RET  1
  |
  `- 
2365: PUSH Reg RBP 1
2366: PUSH Reg RBX 1
2367: SUB Reg RSP, Immediate 24 4
236b: MOV Reg RBX, Reg RDX 3
236e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
2377: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))), Reg RAX 5
237c: XOR Reg EAX, Reg EAX 2
237e: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg RDI) (AddrImm 16))) 4
2382: TEST Reg RAX, Reg RAX 3
2385: JE 23c5 (resolved immediate)
  |
  `- 2387,23c5
2387: MOV Reg R9, Reg RSI 3
238a: MOV Reg RBP, Reg RCX 3
238d: MOV Address (SizeDir 64 (FromReg RDX)), Reg RAX 3
2390: MOV Reg RDX, Reg RSP 3
2393: MOV Reg RCX, Reg R8 3
2396: LEA Reg RSI, Address (SizeDir 64 (AddrPlus (FromReg RIP) (AddrImm 3919))) 7
239d: MOV Reg RDI, Reg R9 3
23a0: MOV Reg EAX, Immediate 0 5
23a5: CALL PyArg_ParseTuple (external)
23aa: TEST Reg EAX, Reg EAX 2
23ac: JNE 23dd (resolved immediate)
  |
  `- 23ae,23dd
23ae: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
23b3: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
23bc: JNE 23fa (resolved immediate)
  |
  `- 23be,23fa
23be: ADD Reg RSP, Immediate 24 4
23c2: POP Reg RBX 1
23c3: POP Reg RBP 1
23c4: RET  1
  |
  `- 
23c5: MOV Reg EDI, Immediate 22 5
23ca: CALL xs_set_error (internal)
  |
  `- 1f11
23cf: MOV Address (SizeDir 64 (FromReg RBX)), Immediate 0 7
23d6: MOV Reg EAX, Immediate 0 5
23db: JMP 23ae (resolved immediate)
  |
  `- 23ae
23dd: MOV Reg EDX, Immediate 16 5
23e2: MOV Reg ESI, Immediate 0 5
23e7: MOV Reg RDI, Address (SizeDir 64 (FromReg RSP)) 4
23eb: CALL strtoul (external)
23f0: MOV Address (SizeDir 32 (FromReg RBP)), Reg EAX 3
23f3: MOV Reg EAX, Immediate 1 5
23f8: JMP 23ae (resolved immediate)
  |
  `- 23ae
23fa: CALL __stack_chk_fail (external)
  |
  `- 
2fac: PUSH Reg R13 2
2fae: PUSH Reg R12 2
2fb0: PUSH Reg RBP 1
2fb1: PUSH Reg RBX 1
2fb2: SUB Reg RSP, Immediate 40 4
2fb6: MOV Reg RAX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
2fbf: MOV Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))), Reg RAX 5
2fc4: XOR Reg EAX, Reg EAX 2
2fc6: MOV Reg RCX, Reg RSP 3
2fc9: LEA Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
2fce: LEA Reg R8, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
2fd3: CALL parse_transaction_path (internal)
  |
  `- 2365
2fd8: TEST Reg EAX, Reg EAX 2
2fda: JE 308a (resolved immediate)
  |
  `- 2fe0,308a
2fe0: CALL PyEval_SaveThread (external)
2fe5: MOV Reg RBX, Reg RAX 3
2fe8: LEA Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 4))) 5
2fed: MOV Reg RDX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 16))) 5
2ff2: MOV Reg ESI, Address (SizeDir 32 (FromReg RSP)) 3
2ff5: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 8))) 5
2ffa: CALL xs_directory (external)
2fff: MOV Reg R12, Reg RAX 3
3002: MOV Reg RDI, Reg RBX 3
3005: CALL PyEval_RestoreThread (external)
300a: TEST Reg R12, Reg R12 3
300d: JE 3070 (resolved immediate)
  |
  `- 300f,3070
300f: MOV Reg EDI, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 4))) 4
3013: CALL PyList_New (external)
3018: MOV Reg R13, Reg RAX 3
301b: CMP Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 4))), Immediate 0 5
3020: JE 304a (resolved immediate)
  |
  `- 3022,304a
3022: MOV Reg EBX, Immediate 0 5
3027: MOVSXD Reg RBP, Reg EBX 3
302a: MOV Reg RDI, Address (SizeDir 64 (AddrPlus (FromReg R12) (AddrTimes (AddrImm 8) (FromReg RBP)))) 4
302e: CALL PyString_FromString (external)
3033: MOV Reg RDX, Reg RAX 3
3036: MOV Reg RSI, Reg RBP 3
3039: MOV Reg RDI, Reg R13 3
303c: CALL PyList_SetItem (external)
3041: ADD Reg EBX, Immediate 1 3
3044: CMP Reg EBX, Address (SizeDir 32 (AddrPlus (FromReg RSP) (AddrImm 4))) 4
3048: JB 3027 (resolved immediate)
  |
  `- 3027,304a
304a: MOV Reg RDI, Reg R12 3
304d: CALL free (external)
3052: MOV Reg RAX, Reg R13 3
3055: MOV Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg RSP) (AddrImm 24))) 5
305a: XOR Reg RCX, Address (SizeDir 64 (AddrPlus (FromReg FS) (AddrImm 40))) 9
3063: JNE 3092 (resolved immediate)
  |
  `- 3065,3092
3065: ADD Reg RSP, Immediate 40 4
3069: POP Reg RBX 1
306a: POP Reg RBP 1
306b: POP Reg R12 2
306d: POP Reg R13 2
306f: RET  1
  |
  `- 
3070: CALL __errno_location (external)
3075: CMP Address (SizeDir 32 (FromReg RAX)), Immediate 2 3
3078: SETE Reg DIL 4
307c: MOVZX Reg EDI, Reg DIL 4
3080: CALL none (internal)
  |
  `- 1ee6
3085: MOV Reg R13, Reg RAX 3
3088: JMP 3052 (resolved immediate)
  |
  `- 3052
308a: MOV Reg R13D, Immediate 0 6
3090: JMP 3052 (resolved immediate)
  |
  `- 3052
3092: CALL __stack_chk_fail (external)
  |
  `- 
