
qemu-bridge-helper:     file format elf64-x86-64


Disassembly of section .init:

0000000000000b60 <_init@@Base>:
 b60:	sub    rsp,0x8
 b64:	mov    rax,QWORD PTR [rip+0x20247d]        # 202fe8 <__gmon_start__>
 b6b:	test   rax,rax
 b6e:	je     b72 <_init@@Base+0x12>
 b70:	call   rax
 b72:	add    rsp,0x8
 b76:	ret    

Disassembly of section .plt:

0000000000000b80 <__errno_location@plt-0x10>:
 b80:	push   QWORD PTR [rip+0x202392]        # 202f18 <_fini@@Base+0x201604>
 b86:	jmp    QWORD PTR [rip+0x202394]        # 202f20 <_fini@@Base+0x20160c>
 b8c:	nop    DWORD PTR [rax+0x0]

0000000000000b90 <__errno_location@plt>:
 b90:	jmp    QWORD PTR [rip+0x202392]        # 202f28 <__errno_location@GLIBC_2.2.5>
 b96:	push   0x0
 b9b:	jmp    b80 <_init@@Base+0x20>

0000000000000ba0 <g_malloc@plt>:
 ba0:	jmp    QWORD PTR [rip+0x20238a]        # 202f30 <g_malloc>
 ba6:	push   0x1
 bab:	jmp    b80 <_init@@Base+0x20>

0000000000000bb0 <g_free@plt>:
 bb0:	jmp    QWORD PTR [rip+0x202382]        # 202f38 <g_free>
 bb6:	push   0x2
 bbb:	jmp    b80 <_init@@Base+0x20>

0000000000000bc0 <sendmsg@plt>:
 bc0:	jmp    QWORD PTR [rip+0x20237a]        # 202f40 <sendmsg@GLIBC_2.2.5>
 bc6:	push   0x3
 bcb:	jmp    b80 <_init@@Base+0x20>

0000000000000bd0 <fclose@plt>:
 bd0:	jmp    QWORD PTR [rip+0x202372]        # 202f48 <fclose@GLIBC_2.2.5>
 bd6:	push   0x4
 bdb:	jmp    b80 <_init@@Base+0x20>

0000000000000be0 <strlen@plt>:
 be0:	jmp    QWORD PTR [rip+0x20236a]        # 202f50 <strlen@GLIBC_2.2.5>
 be6:	push   0x5
 beb:	jmp    b80 <_init@@Base+0x20>

0000000000000bf0 <__stack_chk_fail@plt>:
 bf0:	jmp    QWORD PTR [rip+0x202362]        # 202f58 <__stack_chk_fail@GLIBC_2.4>
 bf6:	push   0x6
 bfb:	jmp    b80 <_init@@Base+0x20>

0000000000000c00 <strchr@plt>:
 c00:	jmp    QWORD PTR [rip+0x20235a]        # 202f60 <strchr@GLIBC_2.2.5>
 c06:	push   0x7
 c0b:	jmp    b80 <_init@@Base+0x20>

0000000000000c10 <snprintf@plt>:
 c10:	jmp    QWORD PTR [rip+0x202352]        # 202f68 <snprintf@GLIBC_2.2.5>
 c16:	push   0x8
 c1b:	jmp    b80 <_init@@Base+0x20>

0000000000000c20 <ioctl@plt>:
 c20:	jmp    QWORD PTR [rip+0x20234a]        # 202f70 <ioctl@GLIBC_2.2.5>
 c26:	push   0x9
 c2b:	jmp    b80 <_init@@Base+0x20>

0000000000000c30 <close@plt>:
 c30:	jmp    QWORD PTR [rip+0x202342]        # 202f78 <close@GLIBC_2.2.5>
 c36:	push   0xa
 c3b:	jmp    b80 <_init@@Base+0x20>

0000000000000c40 <fgets@plt>:
 c40:	jmp    QWORD PTR [rip+0x20233a]        # 202f80 <fgets@GLIBC_2.2.5>
 c46:	push   0xb
 c4b:	jmp    b80 <_init@@Base+0x20>

0000000000000c50 <strcmp@plt>:
 c50:	jmp    QWORD PTR [rip+0x202332]        # 202f88 <strcmp@GLIBC_2.2.5>
 c56:	push   0xc
 c5b:	jmp    b80 <_init@@Base+0x20>

0000000000000c60 <if_nametoindex@plt>:
 c60:	jmp    QWORD PTR [rip+0x20232a]        # 202f90 <if_nametoindex@GLIBC_2.2.5>
 c66:	push   0xd
 c6b:	jmp    b80 <_init@@Base+0x20>

0000000000000c70 <fopen64@plt>:
 c70:	jmp    QWORD PTR [rip+0x202322]        # 202f98 <fopen64@GLIBC_2.2.5>
 c76:	push   0xe
 c7b:	jmp    b80 <_init@@Base+0x20>

0000000000000c80 <strtol@plt>:
 c80:	jmp    QWORD PTR [rip+0x20231a]        # 202fa0 <strtol@GLIBC_2.2.5>
 c86:	push   0xf
 c8b:	jmp    b80 <_init@@Base+0x20>

0000000000000c90 <open64@plt>:
 c90:	jmp    QWORD PTR [rip+0x202312]        # 202fa8 <open64@GLIBC_2.2.5>
 c96:	push   0x10
 c9b:	jmp    b80 <_init@@Base+0x20>

0000000000000ca0 <fwrite@plt>:
 ca0:	jmp    QWORD PTR [rip+0x20230a]        # 202fb0 <fwrite@GLIBC_2.2.5>
 ca6:	push   0x11
 cab:	jmp    b80 <_init@@Base+0x20>

0000000000000cb0 <__fprintf_chk@plt>:
 cb0:	jmp    QWORD PTR [rip+0x202302]        # 202fb8 <__fprintf_chk@GLIBC_2.3.4>
 cb6:	push   0x12
 cbb:	jmp    b80 <_init@@Base+0x20>

0000000000000cc0 <strerror@plt>:
 cc0:	jmp    QWORD PTR [rip+0x2022fa]        # 202fc0 <strerror@GLIBC_2.2.5>
 cc6:	push   0x13
 ccb:	jmp    b80 <_init@@Base+0x20>

0000000000000cd0 <__ctype_b_loc@plt>:
 cd0:	jmp    QWORD PTR [rip+0x2022f2]        # 202fc8 <__ctype_b_loc@GLIBC_2.3>
 cd6:	push   0x14
 cdb:	jmp    b80 <_init@@Base+0x20>

0000000000000ce0 <socket@plt>:
 ce0:	jmp    QWORD PTR [rip+0x2022ea]        # 202fd0 <socket@GLIBC_2.2.5>
 ce6:	push   0x15
 ceb:	jmp    b80 <_init@@Base+0x20>

Disassembly of section .plt.got:

0000000000000cf0 <__cxa_finalize@plt>:
 cf0:	jmp    QWORD PTR [rip+0x202302]        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
 cf6:	xchg   ax,ax

Disassembly of section .text:

0000000000000d00 <.text>:
     d00:	push   r15
     d02:	push   r14
     d04:	push   r13
     d06:	push   r12
     d08:	push   rbp
     d09:	push   rbx
     d0a:	sub    rsp,0xd8
     d11:	mov    rax,QWORD PTR fs:0x28
     d1a:	mov    QWORD PTR [rsp+0xc8],rax
     d22:	xor    eax,eax
     d24:	cmp    edi,0x1
     d27:	jle    ea3 <__cxa_finalize@plt+0x1b3>
     d2d:	lea    eax,[rdi-0x2]
     d30:	lea    rbp,[rsi+0x8]
     d34:	xor    ebx,ebx
     d36:	xor    r12d,r12d
     d39:	mov    r8d,0xffffffff
     d3f:	lea    r15,[rip+0xc2b]        # 1971 <_fini@@Base+0x5d>
     d46:	lea    r14,[rsi+rax*8+0x10]
     d4b:	lea    r13,[rip+0xc2a]        # 197c <_fini@@Base+0x68>
     d52:	jmp    d80 <__cxa_finalize@plt+0x90>
     d54:	nop    DWORD PTR [rax+0x0]
     d58:	mov    ecx,0x5
     d5d:	mov    rsi,rax
     d60:	mov    rdi,r13
     d63:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     d65:	seta   dl
     d68:	sbb    dl,0x0
     d6b:	test   dl,dl
     d6d:	jne    e70 <__cxa_finalize@plt+0x180>
     d73:	lea    rbx,[rax+0x5]
     d77:	add    rbp,0x8
     d7b:	cmp    rbp,r14
     d7e:	je     daa <__cxa_finalize@plt+0xba>
     d80:	mov    rax,QWORD PTR [rbp+0x0]
     d84:	mov    ecx,0xb
     d89:	mov    rdi,r15
     d8c:	mov    rsi,rax
     d8f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     d91:	seta   dl
     d94:	sbb    dl,0x0
     d97:	test   dl,dl
     d99:	jne    d58 <__cxa_finalize@plt+0x68>
     d9b:	add    rbp,0x8
     d9f:	mov    r12d,0x1
     da5:	cmp    rbp,r14
     da8:	jne    d80 <__cxa_finalize@plt+0x90>
     daa:	test   rbx,rbx
     dad:	je     ea3 <__cxa_finalize@plt+0x1b3>
     db3:	cmp    r8d,0xffffffff
     db7:	mov    DWORD PTR [rsp],r8d
     dbb:	je     ea3 <__cxa_finalize@plt+0x1b3>
     dc1:	lea    rbp,[rsp+0x10]
     dc6:	lea    rdi,[rip+0xc2b]        # 19f8 <_fini@@Base+0xe4>
     dcd:	mov    QWORD PTR [rsp+0x10],0x0
     dd6:	mov    rsi,rbp
     dd9:	mov    QWORD PTR [rsp+0x18],rbp
     dde:	call   15c0 <__cxa_finalize@plt+0x8d0>
     de3:	add    eax,0x1
     de6:	mov    r8d,DWORD PTR [rsp]
     dea:	lea    rcx,[rip+0xc07]        # 19f8 <_fini@@Base+0xe4>
     df1:	lea    rdx,[rip+0xc28]        # 1a20 <_fini@@Base+0x10c>
     df8:	je     126e <__cxa_finalize@plt+0x57e>
     dfe:	mov    r13,QWORD PTR [rsp+0x10]
     e03:	test   r13,r13
     e06:	je     1205 <__cxa_finalize@plt+0x515>
     e0c:	xor    r15d,r15d
     e0f:	xor    r14d,r14d
     e12:	jmp    e3a <__cxa_finalize@plt+0x14a>
     e14:	nop    DWORD PTR [rax+0x0]
     e18:	cmp    eax,0x2
     e1b:	je     efd <__cxa_finalize@plt+0x20d>
     e21:	cmp    eax,0x3
     e24:	mov    eax,0x1
     e29:	cmove  r15d,eax
     e2d:	mov    r13,QWORD PTR [r13+0x18]
     e31:	test   r13,r13
     e34:	je     f21 <__cxa_finalize@plt+0x231>
     e3a:	mov    eax,DWORD PTR [r13+0x0]
     e3e:	cmp    eax,0x1
     e41:	je     ef2 <__cxa_finalize@plt+0x202>
     e47:	jg     e18 <__cxa_finalize@plt+0x128>
     e49:	test   eax,eax
     e4b:	jne    e2d <__cxa_finalize@plt+0x13d>
     e4d:	lea    rsi,[r13+0x4]
     e51:	mov    rdi,rbx
     e54:	mov    DWORD PTR [rsp],r8d
     e58:	call   c50 <strcmp@plt>
     e5d:	test   eax,eax
     e5f:	mov    eax,0x1
     e64:	mov    r8d,DWORD PTR [rsp]
     e68:	cmove  r14d,eax
     e6c:	jmp    e2d <__cxa_finalize@plt+0x13d>
     e6e:	xchg   ax,ax
     e70:	lea    rdi,[rip+0xb0b]        # 1982 <_fini@@Base+0x6e>
     e77:	mov    ecx,0x5
     e7c:	mov    rsi,rax
     e7f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     e81:	seta   dl
     e84:	sbb    dl,0x0
     e87:	test   dl,dl
     e89:	jne    ea3 <__cxa_finalize@plt+0x1b3>
     e8b:	lea    rdi,[rax+0x5]
     e8f:	mov    edx,0xa
     e94:	xor    esi,esi
     e96:	call   c80 <strtol@plt>
     e9b:	mov    r8d,eax
     e9e:	jmp    d77 <__cxa_finalize@plt+0x87>
     ea3:	mov    rcx,QWORD PTR [rip+0x202176]        # 203020 <stderr@@GLIBC_2.2.5>
     eaa:	lea    rdi,[rip+0xb07]        # 19b8 <_fini@@Base+0xa4>
     eb1:	mov    edx,0x3f
     eb6:	mov    esi,0x1
     ebb:	mov    r12d,0x1
     ec1:	call   ca0 <fwrite@plt>
     ec6:	mov    rbx,QWORD PTR [rsp+0xc8]
     ece:	xor    rbx,QWORD PTR fs:0x28
     ed7:	mov    eax,r12d
     eda:	jne    145d <__cxa_finalize@plt+0x76d>
     ee0:	add    rsp,0xd8
     ee7:	pop    rbx
     ee8:	pop    rbp
     ee9:	pop    r12
     eeb:	pop    r13
     eed:	pop    r14
     eef:	pop    r15
     ef1:	ret    
     ef2:	mov    r14d,0x1
     ef8:	jmp    e2d <__cxa_finalize@plt+0x13d>
     efd:	lea    rsi,[r13+0x4]
     f01:	mov    rdi,rbx
     f04:	mov    DWORD PTR [rsp],r8d
     f08:	call   c50 <strcmp@plt>
     f0d:	test   eax,eax
     f0f:	mov    eax,0x1
     f14:	mov    r8d,DWORD PTR [rsp]
     f18:	cmove  r15d,eax
     f1c:	jmp    e2d <__cxa_finalize@plt+0x13d>
     f21:	mov    edx,r14d
     f24:	xor    edx,0x1
     f27:	or     edx,r15d
     f2a:	jne    1205 <__cxa_finalize@plt+0x515>
     f30:	xor    edx,edx
     f32:	mov    esi,0x1
     f37:	mov    edi,0x2
     f3c:	mov    DWORD PTR [rsp],r8d
     f40:	call   ce0 <socket@plt>
     f45:	cmp    eax,0xffffffff
     f48:	mov    r13d,eax
     f4b:	mov    r8d,DWORD PTR [rsp]
     f4f:	je     1258 <__cxa_finalize@plt+0x568>
     f55:	lea    rdi,[rip+0xa47]        # 19a3 <_fini@@Base+0x8f>
     f5c:	xor    eax,eax
     f5e:	mov    esi,0x2
     f63:	mov    DWORD PTR [rsp],r8d
     f67:	call   c90 <open64@plt>
     f6c:	cmp    eax,0xffffffff
     f6f:	mov    r14d,eax
     f72:	mov    r8d,DWORD PTR [rsp]
     f76:	je     12c0 <__cxa_finalize@plt+0x5d0>
     f7c:	lea    r15,[rsp+0x70]
     f81:	lea    rsi,[rip+0xa28]        # 19b0 <_fini@@Base+0x9c>
     f88:	mov    DWORD PTR [rsp],r8d
     f8c:	mov    rdi,r15
     f8f:	call   1590 <__cxa_finalize@plt+0x8a0>
     f94:	test   r12d,r12d
     f97:	mov    WORD PTR [rsp+0x80],0x1002
     fa1:	mov    r8d,DWORD PTR [rsp]
     fa5:	jne    1328 <__cxa_finalize@plt+0x638>
     fab:	xor    eax,eax
     fad:	mov    rdx,r15
     fb0:	mov    esi,0x400454ca
     fb5:	mov    edi,r14d
     fb8:	mov    DWORD PTR [rsp],r8d
     fbc:	call   c20 <ioctl@plt>
     fc1:	add    eax,0x1
     fc4:	mov    r8d,DWORD PTR [rsp]
     fc8:	je     12f4 <__cxa_finalize@plt+0x604>
     fce:	lea    rax,[rsp+0xa0]
     fd6:	lea    rdx,[rip+0x947]        # 1924 <_fini@@Base+0x10>
     fdd:	mov    rcx,r15
     fe0:	mov    esi,0x10
     fe5:	mov    DWORD PTR [rsp+0xc],r8d
     fea:	mov    rdi,rax
     fed:	mov    QWORD PTR [rsp],rax
     ff1:	xor    eax,eax
     ff3:	call   c10 <snprintf@plt>
     ff8:	mov    rsi,rbx
     ffb:	mov    rdi,r15
     ffe:	call   1590 <__cxa_finalize@plt+0x8a0>
    1003:	xor    eax,eax
    1005:	mov    rdx,r15
    1008:	mov    esi,0x8921
    100d:	mov    edi,r13d
    1010:	call   c20 <ioctl@plt>
    1015:	add    eax,0x1
    1018:	mov    r8d,DWORD PTR [rsp+0xc]
    101d:	je     1289 <__cxa_finalize@plt+0x599>
    1023:	mov    rsi,QWORD PTR [rsp]
    1027:	mov    r12d,DWORD PTR [rsp+0x80]
    102f:	mov    rdi,r15
    1032:	mov    DWORD PTR [rsp+0xc],r8d
    1037:	call   1590 <__cxa_finalize@plt+0x8a0>
    103c:	xor    eax,eax
    103e:	mov    rdx,r15
    1041:	mov    esi,0x8922
    1046:	mov    edi,r13d
    1049:	mov    DWORD PTR [rsp+0x80],r12d
    1051:	call   c20 <ioctl@plt>
    1056:	add    eax,0x1
    1059:	mov    r8d,DWORD PTR [rsp+0xc]
    105e:	je     136b <__cxa_finalize@plt+0x67b>
    1064:	xor    eax,eax
    1066:	mov    rdx,r15
    1069:	mov    esi,0x8927
    106e:	mov    edi,r13d
    1071:	mov    DWORD PTR [rsp+0xc],r8d
    1076:	call   c20 <ioctl@plt>
    107b:	test   eax,eax
    107d:	mov    r8d,DWORD PTR [rsp+0xc]
    1082:	js     13a6 <__cxa_finalize@plt+0x6b6>
    1088:	xor    eax,eax
    108a:	mov    rdx,r15
    108d:	mov    esi,0x8924
    1092:	mov    edi,r13d
    1095:	mov    DWORD PTR [rsp+0xc],r8d
    109a:	mov    BYTE PTR [rsp+0x82],0xfe
    10a2:	call   c20 <ioctl@plt>
    10a7:	test   eax,eax
    10a9:	mov    r8d,DWORD PTR [rsp+0xc]
    10ae:	js     13c5 <__cxa_finalize@plt+0x6d5>
    10b4:	mov    rsi,rbx
    10b7:	mov    rdi,r15
    10ba:	mov    DWORD PTR [rsp+0xc],r8d
    10bf:	call   1590 <__cxa_finalize@plt+0x8a0>
    10c4:	mov    rdi,QWORD PTR [rsp]
    10c8:	call   c60 <if_nametoindex@plt>
    10cd:	mov    rdx,r15
    10d0:	mov    DWORD PTR [rsp+0x80],eax
    10d7:	mov    esi,0x89a2
    10dc:	xor    eax,eax
    10de:	mov    edi,r13d
    10e1:	call   c20 <ioctl@plt>
    10e6:	cmp    eax,0xffffffff
    10e9:	mov    r12d,eax
    10ec:	mov    r8d,DWORD PTR [rsp+0xc]
    10f1:	je     13e4 <__cxa_finalize@plt+0x6f4>
    10f7:	mov    rsi,QWORD PTR [rsp]
    10fb:	mov    rdi,r15
    10fe:	mov    DWORD PTR [rsp+0xc],r8d
    1103:	call   1590 <__cxa_finalize@plt+0x8a0>
    1108:	xor    eax,eax
    110a:	mov    rdx,r15
    110d:	mov    esi,0x8913
    1112:	mov    edi,r13d
    1115:	call   c20 <ioctl@plt>
    111a:	add    eax,0x1
    111d:	mov    r8d,DWORD PTR [rsp+0xc]
    1122:	je     141f <__cxa_finalize@plt+0x72f>
    1128:	xor    eax,eax
    112a:	mov    rdx,r15
    112d:	mov    esi,0x8914
    1132:	mov    edi,r13d
    1135:	mov    DWORD PTR [rsp+0xc],r8d
    113a:	or     WORD PTR [rsp+0x80],0x1
    1143:	call   c20 <ioctl@plt>
    1148:	add    eax,0x1
    114b:	mov    r8d,DWORD PTR [rsp+0xc]
    1150:	je     143e <__cxa_finalize@plt+0x74e>
    1156:	lea    rdi,[rsp+0x30]
    115b:	xor    eax,eax
    115d:	mov    ecx,0xe
    1162:	lea    rsi,[rsp+0x30]
    1167:	xor    edx,edx
    1169:	mov    BYTE PTR [rsp+0x9f],0x0
    1171:	rep stos DWORD PTR es:[rdi],eax
    1173:	lea    rax,[rsp+0xb0]
    117b:	mov    edi,r8d
    117e:	mov    QWORD PTR [rsp+0xb0],0x14
    118a:	mov    QWORD PTR [rsp+0x58],0x14
    1193:	mov    QWORD PTR [rsp+0x28],0x1
    119c:	mov    QWORD PTR [rsp+0x50],rax
    11a1:	movabs rax,0x100000001
    11ab:	mov    QWORD PTR [rsp+0x48],0x1
    11b4:	mov    QWORD PTR [rsp+0xb8],rax
    11bc:	lea    rax,[rsp+0x9f]
    11c4:	mov    DWORD PTR [rsp+0xc0],r14d
    11cc:	mov    QWORD PTR [rsp+0x20],rax
    11d1:	lea    rax,[rsp+0x20]
    11d6:	mov    QWORD PTR [rsp+0x40],rax
    11db:	call   bc0 <sendmsg@plt>
    11e0:	add    eax,0x1
    11e3:	je     1462 <__cxa_finalize@plt+0x772>
    11e9:	test   r14d,r14d
    11ec:	js     11f6 <__cxa_finalize@plt+0x506>
    11ee:	mov    edi,r14d
    11f1:	call   c30 <close@plt>
    11f6:	test   r13d,r13d
    11f9:	js     1235 <__cxa_finalize@plt+0x545>
    11fb:	mov    edi,r13d
    11fe:	call   c30 <close@plt>
    1203:	jmp    1235 <__cxa_finalize@plt+0x545>
    1205:	mov    rcx,QWORD PTR [rip+0x201e14]        # 203020 <stderr@@GLIBC_2.2.5>
    120c:	lea    rdi,[rip+0x775]        # 1988 <_fini@@Base+0x74>
    1213:	mov    edx,0x1a
    1218:	mov    esi,0x1
    121d:	mov    r12d,0x1
    1223:	call   ca0 <fwrite@plt>
    1228:	jmp    1235 <__cxa_finalize@plt+0x545>
    122a:	nop    WORD PTR [rax+rax*1+0x0]
    1230:	call   bb0 <g_free@plt>
    1235:	mov    rdi,QWORD PTR [rsp+0x10]
    123a:	test   rdi,rdi
    123d:	je     ec6 <__cxa_finalize@plt+0x1d6>
    1243:	mov    rax,QWORD PTR [rdi+0x18]
    1247:	test   rax,rax
    124a:	mov    QWORD PTR [rsp+0x10],rax
    124f:	jne    1230 <__cxa_finalize@plt+0x540>
    1251:	mov    QWORD PTR [rsp+0x18],rbp
    1256:	jmp    1230 <__cxa_finalize@plt+0x540>
    1258:	call   b90 <__errno_location@plt>
    125d:	mov    edi,DWORD PTR [rax]
    125f:	call   cc0 <strerror@plt>
    1264:	lea    rdx,[rip+0x7dd]        # 1a48 <_fini@@Base+0x134>
    126b:	mov    rcx,rax
    126e:	mov    rdi,QWORD PTR [rip+0x201dab]        # 203020 <stderr@@GLIBC_2.2.5>
    1275:	mov    esi,0x1
    127a:	xor    eax,eax
    127c:	mov    r12d,0x1
    1282:	call   cb0 <__fprintf_chk@plt>
    1287:	jmp    1235 <__cxa_finalize@plt+0x545>
    1289:	call   b90 <__errno_location@plt>
    128e:	mov    edi,DWORD PTR [rax]
    1290:	call   cc0 <strerror@plt>
    1295:	lea    rdx,[rip+0x824]        # 1ac0 <_fini@@Base+0x1ac>
    129c:	mov    r8,rax
    129f:	mov    rcx,rbx
    12a2:	mov    rdi,QWORD PTR [rip+0x201d77]        # 203020 <stderr@@GLIBC_2.2.5>
    12a9:	mov    esi,0x1
    12ae:	xor    eax,eax
    12b0:	mov    r12d,0x1
    12b6:	call   cb0 <__fprintf_chk@plt>
    12bb:	jmp    11e9 <__cxa_finalize@plt+0x4f9>
    12c0:	call   b90 <__errno_location@plt>
    12c5:	mov    edi,DWORD PTR [rax]
    12c7:	mov    r12d,0x1
    12cd:	call   cc0 <strerror@plt>
    12d2:	mov    rdi,QWORD PTR [rip+0x201d47]        # 203020 <stderr@@GLIBC_2.2.5>
    12d9:	lea    rdx,[rip+0x790]        # 1a70 <_fini@@Base+0x15c>
    12e0:	mov    rcx,rax
    12e3:	mov    esi,0x1
    12e8:	xor    eax,eax
    12ea:	call   cb0 <__fprintf_chk@plt>
    12ef:	jmp    11f6 <__cxa_finalize@plt+0x506>
    12f4:	call   b90 <__errno_location@plt>
    12f9:	mov    edi,DWORD PTR [rax]
    12fb:	call   cc0 <strerror@plt>
    1300:	lea    rdx,[rip+0x791]        # 1a98 <_fini@@Base+0x184>
    1307:	mov    rcx,rax
    130a:	mov    rdi,QWORD PTR [rip+0x201d0f]        # 203020 <stderr@@GLIBC_2.2.5>
    1311:	mov    esi,0x1
    1316:	xor    eax,eax
    1318:	mov    r12d,0x1
    131e:	call   cb0 <__fprintf_chk@plt>
    1323:	jmp    11e9 <__cxa_finalize@plt+0x4f9>
    1328:	lea    rdx,[rsp+0x30]
    132d:	xor    eax,eax
    132f:	mov    esi,0x800454cf
    1334:	mov    edi,r14d
    1337:	mov    DWORD PTR [rsp+0x30],0x0
    133f:	call   c20 <ioctl@plt>
    1344:	add    eax,0x1
    1347:	mov    r8d,DWORD PTR [rsp]
    134b:	je     fab <__cxa_finalize@plt+0x2bb>
    1351:	test   BYTE PTR [rsp+0x31],0x40
    1356:	je     fab <__cxa_finalize@plt+0x2bb>
    135c:	or     WORD PTR [rsp+0x80],0x4000
    1366:	jmp    fab <__cxa_finalize@plt+0x2bb>
    136b:	call   b90 <__errno_location@plt>
    1370:	mov    edi,DWORD PTR [rax]
    1372:	call   cc0 <strerror@plt>
    1377:	mov    rcx,QWORD PTR [rsp]
    137b:	mov    rdi,QWORD PTR [rip+0x201c9e]        # 203020 <stderr@@GLIBC_2.2.5>
    1382:	lea    rdx,[rip+0x75f]        # 1ae8 <_fini@@Base+0x1d4>
    1389:	mov    r9,rax
    138c:	mov    r8d,r12d
    138f:	mov    esi,0x1
    1394:	xor    eax,eax
    1396:	mov    r12d,0x1
    139c:	call   cb0 <__fprintf_chk@plt>
    13a1:	jmp    11e9 <__cxa_finalize@plt+0x4f9>
    13a6:	call   b90 <__errno_location@plt>
    13ab:	mov    edi,DWORD PTR [rax]
    13ad:	call   cc0 <strerror@plt>
    13b2:	mov    rcx,QWORD PTR [rsp]
    13b6:	mov    r8,rax
    13b9:	lea    rdx,[rip+0x758]        # 1b18 <_fini@@Base+0x204>
    13c0:	jmp    12a2 <__cxa_finalize@plt+0x5b2>
    13c5:	call   b90 <__errno_location@plt>
    13ca:	mov    edi,DWORD PTR [rax]
    13cc:	call   cc0 <strerror@plt>
    13d1:	mov    rcx,QWORD PTR [rsp]
    13d5:	mov    r8,rax
    13d8:	lea    rdx,[rip+0x769]        # 1b48 <_fini@@Base+0x234>
    13df:	jmp    12a2 <__cxa_finalize@plt+0x5b2>
    13e4:	call   b90 <__errno_location@plt>
    13e9:	mov    edi,DWORD PTR [rax]
    13eb:	mov    r12d,0x1
    13f1:	call   cc0 <strerror@plt>
    13f6:	mov    rcx,QWORD PTR [rsp]
    13fa:	mov    rdi,QWORD PTR [rip+0x201c1f]        # 203020 <stderr@@GLIBC_2.2.5>
    1401:	lea    rdx,[rip+0x770]        # 1b78 <_fini@@Base+0x264>
    1408:	mov    r9,rax
    140b:	mov    r8,rbx
    140e:	mov    esi,0x1
    1413:	xor    eax,eax
    1415:	call   cb0 <__fprintf_chk@plt>
    141a:	jmp    11e9 <__cxa_finalize@plt+0x4f9>
    141f:	call   b90 <__errno_location@plt>
    1424:	mov    edi,DWORD PTR [rax]
    1426:	call   cc0 <strerror@plt>
    142b:	mov    rcx,QWORD PTR [rsp]
    142f:	mov    r8,rax
    1432:	lea    rdx,[rip+0x777]        # 1bb0 <_fini@@Base+0x29c>
    1439:	jmp    12a2 <__cxa_finalize@plt+0x5b2>
    143e:	call   b90 <__errno_location@plt>
    1443:	mov    edi,DWORD PTR [rax]
    1445:	call   cc0 <strerror@plt>
    144a:	mov    rcx,QWORD PTR [rsp]
    144e:	mov    r8,rax
    1451:	lea    rdx,[rip+0x788]        # 1be0 <_fini@@Base+0x2cc>
    1458:	jmp    12a2 <__cxa_finalize@plt+0x5b2>
    145d:	call   bf0 <__stack_chk_fail@plt>
    1462:	call   b90 <__errno_location@plt>
    1467:	mov    edi,DWORD PTR [rax]
    1469:	call   cc0 <strerror@plt>
    146e:	lea    rdx,[rip+0x793]        # 1c08 <_fini@@Base+0x2f4>
    1475:	mov    rcx,rax
    1478:	jmp    130a <__cxa_finalize@plt+0x61a>
    147d:	nop    DWORD PTR [rax]
    1480:	xor    ebp,ebp
    1482:	mov    r9,rdx
    1485:	pop    rsi
    1486:	mov    rdx,rsp
    1489:	and    rsp,0xfffffffffffffff0
    148d:	push   rax
    148e:	push   rsp
    148f:	lea    r8,[rip+0x47a]        # 1910 <__cxa_finalize@plt+0xc20>
    1496:	lea    rcx,[rip+0x403]        # 18a0 <__cxa_finalize@plt+0xbb0>
    149d:	lea    rdi,[rip+0xfffffffffffff85c]        # d00 <__cxa_finalize@plt+0x10>
    14a4:	call   QWORD PTR [rip+0x201b36]        # 202fe0 <__libc_start_main@GLIBC_2.2.5>
    14aa:	hlt    
    14ab:	nop    DWORD PTR [rax+rax*1+0x0]
    14b0:	lea    rdi,[rip+0x201b59]        # 203010 <_edata@@Base>
    14b7:	push   rbp
    14b8:	lea    rax,[rip+0x201b51]        # 203010 <_edata@@Base>
    14bf:	cmp    rax,rdi
    14c2:	mov    rbp,rsp
    14c5:	je     14e0 <__cxa_finalize@plt+0x7f0>
    14c7:	mov    rax,QWORD PTR [rip+0x201b0a]        # 202fd8 <_ITM_deregisterTMCloneTable>
    14ce:	test   rax,rax
    14d1:	je     14e0 <__cxa_finalize@plt+0x7f0>
    14d3:	pop    rbp
    14d4:	jmp    rax
    14d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    14e0:	pop    rbp
    14e1:	ret    
    14e2:	nop    DWORD PTR [rax+0x0]
    14e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    14f0:	lea    rdi,[rip+0x201b19]        # 203010 <_edata@@Base>
    14f7:	lea    rsi,[rip+0x201b12]        # 203010 <_edata@@Base>
    14fe:	push   rbp
    14ff:	sub    rsi,rdi
    1502:	mov    rbp,rsp
    1505:	sar    rsi,0x3
    1509:	mov    rax,rsi
    150c:	shr    rax,0x3f
    1510:	add    rsi,rax
    1513:	sar    rsi,1
    1516:	je     1530 <__cxa_finalize@plt+0x840>
    1518:	mov    rax,QWORD PTR [rip+0x201ad1]        # 202ff0 <_ITM_registerTMCloneTable>
    151f:	test   rax,rax
    1522:	je     1530 <__cxa_finalize@plt+0x840>
    1524:	pop    rbp
    1525:	jmp    rax
    1527:	nop    WORD PTR [rax+rax*1+0x0]
    1530:	pop    rbp
    1531:	ret    
    1532:	nop    DWORD PTR [rax+0x0]
    1536:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1540:	cmp    BYTE PTR [rip+0x201ae1],0x0        # 203028 <stderr@@GLIBC_2.2.5+0x8>
    1547:	jne    1578 <__cxa_finalize@plt+0x888>
    1549:	cmp    QWORD PTR [rip+0x201aa7],0x0        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
    1551:	push   rbp
    1552:	mov    rbp,rsp
    1555:	je     1563 <__cxa_finalize@plt+0x873>
    1557:	mov    rdi,QWORD PTR [rip+0x201aaa]        # 203008 <_fini@@Base+0x2016f4>
    155e:	call   cf0 <__cxa_finalize@plt>
    1563:	call   14b0 <__cxa_finalize@plt+0x7c0>
    1568:	mov    BYTE PTR [rip+0x201ab9],0x1        # 203028 <stderr@@GLIBC_2.2.5+0x8>
    156f:	pop    rbp
    1570:	ret    
    1571:	nop    DWORD PTR [rax+0x0]
    1578:	repz ret 
    157a:	nop    WORD PTR [rax+rax*1+0x0]
    1580:	push   rbp
    1581:	mov    rbp,rsp
    1584:	pop    rbp
    1585:	jmp    14f0 <__cxa_finalize@plt+0x800>
    158a:	nop    WORD PTR [rax+rax*1+0x0]
    1590:	pxor   xmm0,xmm0
    1594:	lea    rdx,[rip+0x389]        # 1924 <_fini@@Base+0x10>
    159b:	mov    rcx,rsi
    159e:	mov    QWORD PTR [rdi+0x20],0x0
    15a6:	mov    esi,0x10
    15ab:	xor    eax,eax
    15ad:	movaps XMMWORD PTR [rdi],xmm0
    15b0:	movaps XMMWORD PTR [rdi+0x10],xmm0
    15b4:	jmp    c10 <snprintf@plt>
    15b9:	nop    DWORD PTR [rax+0x0]
    15c0:	push   r15
    15c2:	push   r14
    15c4:	push   r13
    15c6:	push   r12
    15c8:	mov    r12,rsi
    15cb:	push   rbp
    15cc:	push   rbx
    15cd:	lea    rsi,[rip+0x353]        # 1927 <_fini@@Base+0x13>
    15d4:	sub    rsp,0x1018
    15db:	mov    rax,QWORD PTR fs:0x28
    15e4:	mov    QWORD PTR [rsp+0x1008],rax
    15ec:	xor    eax,eax
    15ee:	call   c70 <fopen64@plt>
    15f3:	test   rax,rax
    15f6:	je     188f <__cxa_finalize@plt+0xb9f>
    15fc:	mov    rbp,rax
    15ff:	mov    rbx,rsp
    1602:	nop    WORD PTR [rax+rax*1+0x0]
    1608:	mov    rdx,rbp
    160b:	mov    esi,0x1000
    1610:	mov    rdi,rbx
    1613:	call   c40 <fgets@plt>
    1618:	test   rax,rax
    161b:	je     17d0 <__cxa_finalize@plt+0xae0>
    1621:	call   cd0 <__ctype_b_loc@plt>
    1626:	mov    r15,rbx
    1629:	mov    r14,QWORD PTR [rax]
    162c:	jmp    1634 <__cxa_finalize@plt+0x944>
    162e:	xchg   ax,ax
    1630:	add    r15,0x1
    1634:	movsx  rsi,BYTE PTR [r15]
    1638:	test   BYTE PTR [r14+rsi*2+0x1],0x20
    163e:	jne    1630 <__cxa_finalize@plt+0x940>
    1640:	cmp    sil,0x23
    1644:	je     1608 <__cxa_finalize@plt+0x918>
    1646:	test   sil,sil
    1649:	je     1608 <__cxa_finalize@plt+0x918>
    164b:	mov    esi,0x20
    1650:	mov    rdi,r15
    1653:	call   c00 <strchr@plt>
    1658:	test   rax,rax
    165b:	je     1728 <__cxa_finalize@plt+0xa38>
    1661:	mov    BYTE PTR [rax],0x0
    1664:	lea    r13,[rax+0x1]
    1668:	movsx  rax,BYTE PTR [rax+0x1]
    166d:	test   BYTE PTR [r14+rax*2+0x1],0x20
    1673:	je     1689 <__cxa_finalize@plt+0x999>
    1675:	nop    DWORD PTR [rax]
    1678:	add    r13,0x1
    167c:	movsx  rax,BYTE PTR [r13+0x0]
    1681:	test   BYTE PTR [r14+rax*2+0x1],0x20
    1687:	jne    1678 <__cxa_finalize@plt+0x988>
    1689:	mov    rdi,r13
    168c:	call   be0 <strlen@plt>
    1691:	add    rax,r13
    1694:	cmp    rax,r13
    1697:	jne    16a9 <__cxa_finalize@plt+0x9b9>
    1699:	jmp    186a <__cxa_finalize@plt+0xb7a>
    169e:	xchg   ax,ax
    16a0:	sub    rax,0x1
    16a4:	cmp    rax,r13
    16a7:	je     16b6 <__cxa_finalize@plt+0x9c6>
    16a9:	movsx  rsi,BYTE PTR [rax-0x1]
    16ae:	test   BYTE PTR [r14+rsi*2+0x1],0x20
    16b4:	jne    16a0 <__cxa_finalize@plt+0x9b0>
    16b6:	lea    rdi,[rip+0x287]        # 1944 <_fini@@Base+0x30>
    16bd:	mov    BYTE PTR [rax],0x0
    16c0:	mov    ecx,0x5
    16c5:	mov    rsi,r15
    16c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    16ca:	seta   al
    16cd:	sbb    al,0x0
    16cf:	test   al,al
    16d1:	je     1778 <__cxa_finalize@plt+0xa88>
    16d7:	lea    rdi,[rip+0x26f]        # 194d <_fini@@Base+0x39>
    16de:	mov    ecx,0x6
    16e3:	mov    rsi,r15
    16e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    16e8:	seta   al
    16eb:	sbb    al,0x0
    16ed:	test   al,al
    16ef:	je     1808 <__cxa_finalize@plt+0xb18>
    16f5:	lea    rdi,[rip+0x257]        # 1953 <_fini@@Base+0x3f>
    16fc:	mov    ecx,0x8
    1701:	mov    rsi,r15
    1704:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1706:	seta   al
    1709:	sbb    al,0x0
    170b:	test   al,al
    170d:	jne    1872 <__cxa_finalize@plt+0xb82>
    1713:	mov    rsi,r12
    1716:	mov    rdi,r13
    1719:	call   15c0 <__cxa_finalize@plt+0x8d0>
    171e:	jmp    1608 <__cxa_finalize@plt+0x918>
    1723:	nop    DWORD PTR [rax+rax*1+0x0]
    1728:	mov    esi,0x9
    172d:	mov    rdi,r15
    1730:	call   c00 <strchr@plt>
    1735:	test   rax,rax
    1738:	jne    1661 <__cxa_finalize@plt+0x971>
    173e:	mov    rdi,QWORD PTR [rip+0x2018db]        # 203020 <stderr@@GLIBC_2.2.5>
    1745:	lea    rdx,[rip+0x1dd]        # 1929 <_fini@@Base+0x15>
    174c:	mov    rcx,rbx
    174f:	mov    esi,0x1
    1754:	call   cb0 <__fprintf_chk@plt>
    1759:	mov    rdi,rbp
    175c:	call   bd0 <fclose@plt>
    1761:	call   b90 <__errno_location@plt>
    1766:	mov    DWORD PTR [rax],0x16
    176c:	mov    eax,0xffffffff
    1771:	jmp    17da <__cxa_finalize@plt+0xaea>
    1773:	nop    DWORD PTR [rax+rax*1+0x0]
    1778:	mov    edi,0x20
    177d:	call   ba0 <g_malloc@plt>
    1782:	lea    rdi,[rip+0x1c0]        # 1949 <_fini@@Base+0x35>
    1789:	mov    ecx,0x4
    178e:	mov    rsi,r13
    1791:	mov    r14,rax
    1794:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1796:	seta   al
    1799:	sbb    al,0x0
    179b:	test   al,al
    179d:	jne    1861 <__cxa_finalize@plt+0xb71>
    17a3:	mov    DWORD PTR [r14],0x3
    17aa:	mov    QWORD PTR [r14+0x18],0x0
    17b2:	mov    rax,QWORD PTR [r12+0x8]
    17b7:	lea    r9,[r14+0x18]
    17bb:	mov    QWORD PTR [rax],r14
    17be:	mov    QWORD PTR [r12+0x8],r9
    17c3:	jmp    1608 <__cxa_finalize@plt+0x918>
    17c8:	nop    DWORD PTR [rax+rax*1+0x0]
    17d0:	mov    rdi,rbp
    17d3:	call   bd0 <fclose@plt>
    17d8:	xor    eax,eax
    17da:	mov    rdx,QWORD PTR [rsp+0x1008]
    17e2:	xor    rdx,QWORD PTR fs:0x28
    17eb:	jne    1899 <__cxa_finalize@plt+0xba9>
    17f1:	add    rsp,0x1018
    17f8:	pop    rbx
    17f9:	pop    rbp
    17fa:	pop    r12
    17fc:	pop    r13
    17fe:	pop    r14
    1800:	pop    r15
    1802:	ret    
    1803:	nop    DWORD PTR [rax+rax*1+0x0]
    1808:	mov    edi,0x20
    180d:	call   ba0 <g_malloc@plt>
    1812:	lea    rdi,[rip+0x130]        # 1949 <_fini@@Base+0x35>
    1819:	mov    ecx,0x4
    181e:	mov    rsi,r13
    1821:	mov    r14,rax
    1824:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1826:	seta   al
    1829:	sbb    al,0x0
    182b:	test   al,al
    182d:	jne    183b <__cxa_finalize@plt+0xb4b>
    182f:	mov    DWORD PTR [r14],0x1
    1836:	jmp    17aa <__cxa_finalize@plt+0xaba>
    183b:	mov    DWORD PTR [r14],0x0
    1842:	lea    rdi,[r14+0x4]
    1846:	lea    rdx,[rip+0xd7]        # 1924 <_fini@@Base+0x10>
    184d:	mov    rcx,r13
    1850:	mov    esi,0x10
    1855:	xor    eax,eax
    1857:	call   c10 <snprintf@plt>
    185c:	jmp    17aa <__cxa_finalize@plt+0xaba>
    1861:	mov    DWORD PTR [r14],0x2
    1868:	jmp    1842 <__cxa_finalize@plt+0xb52>
    186a:	mov    rax,r13
    186d:	jmp    16b6 <__cxa_finalize@plt+0x9c6>
    1872:	mov    rcx,r15
    1875:	lea    rdx,[rip+0xdf]        # 195b <_fini@@Base+0x47>
    187c:	mov    esi,0x1
    1881:	mov    rdi,QWORD PTR [rip+0x201798]        # 203020 <stderr@@GLIBC_2.2.5>
    1888:	xor    eax,eax
    188a:	jmp    1754 <__cxa_finalize@plt+0xa64>
    188f:	mov    eax,0xffffffff
    1894:	jmp    17da <__cxa_finalize@plt+0xaea>
    1899:	call   bf0 <__stack_chk_fail@plt>
    189e:	xchg   ax,ax
    18a0:	push   r15
    18a2:	push   r14
    18a4:	mov    r15,rdx
    18a7:	push   r13
    18a9:	push   r12
    18ab:	lea    r12,[rip+0x20142e]        # 202ce0 <_fini@@Base+0x2013cc>
    18b2:	push   rbp
    18b3:	lea    rbp,[rip+0x20142e]        # 202ce8 <_fini@@Base+0x2013d4>
    18ba:	push   rbx
    18bb:	mov    r13d,edi
    18be:	mov    r14,rsi
    18c1:	sub    rbp,r12
    18c4:	sub    rsp,0x8
    18c8:	sar    rbp,0x3
    18cc:	call   b60 <_init@@Base>
    18d1:	test   rbp,rbp
    18d4:	je     18f6 <__cxa_finalize@plt+0xc06>
    18d6:	xor    ebx,ebx
    18d8:	nop    DWORD PTR [rax+rax*1+0x0]
    18e0:	mov    rdx,r15
    18e3:	mov    rsi,r14
    18e6:	mov    edi,r13d
    18e9:	call   QWORD PTR [r12+rbx*8]
    18ed:	add    rbx,0x1
    18f1:	cmp    rbp,rbx
    18f4:	jne    18e0 <__cxa_finalize@plt+0xbf0>
    18f6:	add    rsp,0x8
    18fa:	pop    rbx
    18fb:	pop    rbp
    18fc:	pop    r12
    18fe:	pop    r13
    1900:	pop    r14
    1902:	pop    r15
    1904:	ret    
    1905:	nop
    1906:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1910:	repz ret 

Disassembly of section .fini:

0000000000001914 <_fini@@Base>:
    1914:	sub    rsp,0x8
    1918:	add    rsp,0x8
    191c:	ret    
