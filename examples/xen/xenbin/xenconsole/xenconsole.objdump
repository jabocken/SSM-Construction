
xenconsole:     file format elf64-x86-64


Disassembly of section .init:

0000000000001020 <_init>:
    1020:	sub    rsp,0x8
    1024:	mov    rax,QWORD PTR [rip+0x201fbd]        # 202fe8 <__gmon_start__>
    102b:	test   rax,rax
    102e:	je     1032 <_init+0x12>
    1030:	call   rax
    1032:	add    rsp,0x8
    1036:	ret    

Disassembly of section .plt:

0000000000001040 <.plt>:
    1040:	push   QWORD PTR [rip+0x201e3a]        # 202e80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1046:	jmp    QWORD PTR [rip+0x201e3c]        # 202e88 <_GLOBAL_OFFSET_TABLE_+0x10>
    104c:	nop    DWORD PTR [rax+0x0]

0000000000001050 <__snprintf_chk@plt>:
    1050:	jmp    QWORD PTR [rip+0x201e3a]        # 202e90 <__snprintf_chk@GLIBC_2.3.4>
    1056:	push   0x0
    105b:	jmp    1040 <.plt>

0000000000001060 <free@plt>:
    1060:	jmp    QWORD PTR [rip+0x201e32]        # 202e98 <free@GLIBC_2.2.5>
    1066:	push   0x1
    106b:	jmp    1040 <.plt>

0000000000001070 <xs_read_watch@plt>:
    1070:	jmp    QWORD PTR [rip+0x201e2a]        # 202ea0 <xs_read_watch>
    1076:	push   0x2
    107b:	jmp    1040 <.plt>

0000000000001080 <__errno_location@plt>:
    1080:	jmp    QWORD PTR [rip+0x201e22]        # 202ea8 <__errno_location@GLIBC_2.2.5>
    1086:	push   0x3
    108b:	jmp    1040 <.plt>

0000000000001090 <unlink@plt>:
    1090:	jmp    QWORD PTR [rip+0x201e1a]        # 202eb0 <unlink@GLIBC_2.2.5>
    1096:	push   0x4
    109b:	jmp    1040 <.plt>

00000000000010a0 <xs_watch@plt>:
    10a0:	jmp    QWORD PTR [rip+0x201e12]        # 202eb8 <xs_watch>
    10a6:	push   0x5
    10ab:	jmp    1040 <.plt>

00000000000010b0 <warn@plt>:
    10b0:	jmp    QWORD PTR [rip+0x201e0a]        # 202ec0 <warn@GLIBC_2.2.5>
    10b6:	push   0x6
    10bb:	jmp    1040 <.plt>

00000000000010c0 <isatty@plt>:
    10c0:	jmp    QWORD PTR [rip+0x201e02]        # 202ec8 <isatty@GLIBC_2.2.5>
    10c6:	push   0x7
    10cb:	jmp    1040 <.plt>

00000000000010d0 <write@plt>:
    10d0:	jmp    QWORD PTR [rip+0x201dfa]        # 202ed0 <write@GLIBC_2.2.5>
    10d6:	push   0x8
    10db:	jmp    1040 <.plt>

00000000000010e0 <xc_interface_open@plt>:
    10e0:	jmp    QWORD PTR [rip+0x201df2]        # 202ed8 <xc_interface_open>
    10e6:	push   0x9
    10eb:	jmp    1040 <.plt>

00000000000010f0 <xc_domain_getinfo@plt>:
    10f0:	jmp    QWORD PTR [rip+0x201dea]        # 202ee0 <xc_domain_getinfo>
    10f6:	push   0xa
    10fb:	jmp    1040 <.plt>

0000000000001100 <xs_fileno@plt>:
    1100:	jmp    QWORD PTR [rip+0x201de2]        # 202ee8 <xs_fileno>
    1106:	push   0xb
    110b:	jmp    1040 <.plt>

0000000000001110 <__stack_chk_fail@plt>:
    1110:	jmp    QWORD PTR [rip+0x201dda]        # 202ef0 <__stack_chk_fail@GLIBC_2.4>
    1116:	push   0xc
    111b:	jmp    1040 <.plt>

0000000000001120 <getopt_long@plt>:
    1120:	jmp    QWORD PTR [rip+0x201dd2]        # 202ef8 <getopt_long@GLIBC_2.2.5>
    1126:	push   0xd
    112b:	jmp    1040 <.plt>

0000000000001130 <__fdelt_chk@plt>:
    1130:	jmp    QWORD PTR [rip+0x201dca]        # 202f00 <__fdelt_chk@GLIBC_2.15>
    1136:	push   0xe
    113b:	jmp    1040 <.plt>

0000000000001140 <xc_interface_close@plt>:
    1140:	jmp    QWORD PTR [rip+0x201dc2]        # 202f08 <xc_interface_close>
    1146:	push   0xf
    114b:	jmp    1040 <.plt>

0000000000001150 <close@plt>:
    1150:	jmp    QWORD PTR [rip+0x201dba]        # 202f10 <close@GLIBC_2.2.5>
    1156:	push   0x10
    115b:	jmp    1040 <.plt>

0000000000001160 <read@plt>:
    1160:	jmp    QWORD PTR [rip+0x201db2]        # 202f18 <read@GLIBC_2.2.5>
    1166:	push   0x11
    116b:	jmp    1040 <.plt>

0000000000001170 <strcmp@plt>:
    1170:	jmp    QWORD PTR [rip+0x201daa]        # 202f20 <strcmp@GLIBC_2.2.5>
    1176:	push   0x12
    117b:	jmp    1040 <.plt>

0000000000001180 <signal@plt>:
    1180:	jmp    QWORD PTR [rip+0x201da2]        # 202f28 <signal@GLIBC_2.2.5>
    1186:	push   0x13
    118b:	jmp    1040 <.plt>

0000000000001190 <xs_get_domain_path@plt>:
    1190:	jmp    QWORD PTR [rip+0x201d9a]        # 202f30 <xs_get_domain_path>
    1196:	push   0x14
    119b:	jmp    1040 <.plt>

00000000000011a0 <xs_daemon_open@plt>:
    11a0:	jmp    QWORD PTR [rip+0x201d92]        # 202f38 <xs_daemon_open>
    11a6:	push   0x15
    11ab:	jmp    1040 <.plt>

00000000000011b0 <strtol@plt>:
    11b0:	jmp    QWORD PTR [rip+0x201d8a]        # 202f40 <strtol@GLIBC_2.2.5>
    11b6:	push   0x16
    11bb:	jmp    1040 <.plt>

00000000000011c0 <time@plt>:
    11c0:	jmp    QWORD PTR [rip+0x201d82]        # 202f48 <time@GLIBC_2.2.5>
    11c6:	push   0x17
    11cb:	jmp    1040 <.plt>

00000000000011d0 <select@plt>:
    11d0:	jmp    QWORD PTR [rip+0x201d7a]        # 202f50 <select@GLIBC_2.2.5>
    11d6:	push   0x18
    11db:	jmp    1040 <.plt>

00000000000011e0 <__xstat@plt>:
    11e0:	jmp    QWORD PTR [rip+0x201d72]        # 202f58 <__xstat@GLIBC_2.2.5>
    11e6:	push   0x19
    11eb:	jmp    1040 <.plt>

00000000000011f0 <err@plt>:
    11f0:	jmp    QWORD PTR [rip+0x201d6a]        # 202f60 <err@GLIBC_2.2.5>
    11f6:	push   0x1a
    11fb:	jmp    1040 <.plt>

0000000000001200 <malloc@plt>:
    1200:	jmp    QWORD PTR [rip+0x201d62]        # 202f68 <malloc@GLIBC_2.2.5>
    1206:	push   0x1b
    120b:	jmp    1040 <.plt>

0000000000001210 <__fxstat@plt>:
    1210:	jmp    QWORD PTR [rip+0x201d5a]        # 202f70 <__fxstat@GLIBC_2.2.5>
    1216:	push   0x1c
    121b:	jmp    1040 <.plt>

0000000000001220 <cfmakeraw@plt>:
    1220:	jmp    QWORD PTR [rip+0x201d52]        # 202f78 <cfmakeraw@GLIBC_2.2.5>
    1226:	push   0x1d
    122b:	jmp    1040 <.plt>

0000000000001230 <__printf_chk@plt>:
    1230:	jmp    QWORD PTR [rip+0x201d4a]        # 202f80 <__printf_chk@GLIBC_2.3.4>
    1236:	push   0x1e
    123b:	jmp    1040 <.plt>

0000000000001240 <tcgetattr@plt>:
    1240:	jmp    QWORD PTR [rip+0x201d42]        # 202f88 <tcgetattr@GLIBC_2.2.5>
    1246:	push   0x1f
    124b:	jmp    1040 <.plt>

0000000000001250 <tcsetattr@plt>:
    1250:	jmp    QWORD PTR [rip+0x201d3a]        # 202f90 <tcsetattr@GLIBC_2.2.5>
    1256:	push   0x20
    125b:	jmp    1040 <.plt>

0000000000001260 <open@plt>:
    1260:	jmp    QWORD PTR [rip+0x201d32]        # 202f98 <open@GLIBC_2.2.5>
    1266:	push   0x21
    126b:	jmp    1040 <.plt>

0000000000001270 <perror@plt>:
    1270:	jmp    QWORD PTR [rip+0x201d2a]        # 202fa0 <perror@GLIBC_2.2.5>
    1276:	push   0x22
    127b:	jmp    1040 <.plt>

0000000000001280 <xs_read@plt>:
    1280:	jmp    QWORD PTR [rip+0x201d22]        # 202fa8 <xs_read>
    1286:	push   0x23
    128b:	jmp    1040 <.plt>

0000000000001290 <flock@plt>:
    1290:	jmp    QWORD PTR [rip+0x201d1a]        # 202fb0 <flock@GLIBC_2.2.5>
    1296:	push   0x24
    129b:	jmp    1040 <.plt>

00000000000012a0 <__cxa_atexit@plt>:
    12a0:	jmp    QWORD PTR [rip+0x201d12]        # 202fb8 <__cxa_atexit@GLIBC_2.2.5>
    12a6:	push   0x25
    12ab:	jmp    1040 <.plt>

00000000000012b0 <exit@plt>:
    12b0:	jmp    QWORD PTR [rip+0x201d0a]        # 202fc0 <exit@GLIBC_2.2.5>
    12b6:	push   0x26
    12bb:	jmp    1040 <.plt>

00000000000012c0 <fwrite@plt>:
    12c0:	jmp    QWORD PTR [rip+0x201d02]        # 202fc8 <fwrite@GLIBC_2.2.5>
    12c6:	push   0x27
    12cb:	jmp    1040 <.plt>

00000000000012d0 <__fprintf_chk@plt>:
    12d0:	jmp    QWORD PTR [rip+0x201cfa]        # 202fd0 <__fprintf_chk@GLIBC_2.3.4>
    12d6:	push   0x28
    12db:	jmp    1040 <.plt>

Disassembly of section .plt.got:

00000000000012e0 <__cxa_finalize@plt>:
    12e0:	jmp    QWORD PTR [rip+0x201d12]        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
    12e6:	xchg   ax,ax

Disassembly of section .text:

00000000000012f0 <main>:
    12f0:	push   r15
    12f2:	push   r14
    12f4:	push   r13
    12f6:	push   r12
    12f8:	mov    r12d,edi
    12fb:	push   rbp
    12fc:	push   rbx
    12fd:	lea    r13,[rip+0x1007]        # 230b <_IO_stdin_used+0x8b>
    1304:	lea    rbx,[rip+0x1355]        # 2660 <_IO_stdin_used+0x3e0>
    130b:	mov    rbp,rsi
    130e:	sub    rsp,0x448
    1315:	lea    rdi,[rsp+0x184]
    131d:	mov    DWORD PTR [rsp+0x44],0x0
    1325:	mov    QWORD PTR [rsp+0x17c],0x0
    1331:	mov    rax,QWORD PTR fs:0x28
    133a:	mov    QWORD PTR [rsp+0x438],rax
    1342:	xor    eax,eax
    1344:	lea    rax,[rsp+0x17c]
    134c:	and    rdi,0xfffffffffffffff8
    1350:	mov    QWORD PTR [rsp+0x228],0x0
    135c:	lea    r15,[rsp+0x44]
    1361:	sub    rax,rdi
    1364:	add    eax,0xb4
    1369:	shr    eax,0x3
    136c:	mov    ecx,eax
    136e:	xor    eax,eax
    1370:	rep stos QWORD PTR es:[rdi],rax
    1373:	lea    rax,[rip+0xf22]        # 229c <_IO_stdin_used+0x1c>
    137a:	mov    DWORD PTR [rsp+0x178],0x1
    1385:	mov    DWORD PTR [rsp+0x188],0x74
    1390:	mov    DWORD PTR [rsp+0x198],0x1
    139b:	mov    DWORD PTR [rsp+0x1a8],0x6e
    13a6:	mov    QWORD PTR [rsp+0x170],rax
    13ae:	lea    rax,[rip+0xeec]        # 22a1 <_IO_stdin_used+0x21>
    13b5:	mov    DWORD PTR [rsp+0x1c8],0x68
    13c0:	mov    DWORD PTR [rsp+0x1d8],0x1
    13cb:	mov    DWORD PTR [rsp+0x1e8],0x73
    13d6:	mov    QWORD PTR [rsp+0x190],rax
    13de:	lea    rax,[rip+0xec0]        # 22a5 <_IO_stdin_used+0x25>
    13e5:	mov    DWORD PTR [rsp+0x208],0x69
    13f0:	mov    BYTE PTR [rsp+0x27],0x0
    13f5:	mov    DWORD PTR [rsp+0x20],0x0
    13fd:	mov    QWORD PTR [rsp+0x1b0],rax
    1405:	lea    rax,[rip+0xe9e]        # 22aa <_IO_stdin_used+0x2a>
    140c:	mov    DWORD PTR [rsp+0x10],0xffffffff
    1414:	mov    DWORD PTR [rsp+0x18],0x0
    141c:	mov    QWORD PTR [rsp+0x1d0],rax
    1424:	lea    rax,[rip+0xe8f]        # 22ba <_IO_stdin_used+0x3a>
    142b:	mov    QWORD PTR [rsp+0x1f0],rax
    1433:	lea    rax,[rsp+0x170]
    143b:	mov    QWORD PTR [rsp+0x8],rax
    1440:	mov    rcx,QWORD PTR [rsp+0x8]
    1445:	mov    r8,r15
    1448:	mov    rdx,r13
    144b:	mov    rsi,rbp
    144e:	mov    edi,r12d
    1451:	call   1120 <getopt_long@plt>
    1456:	cmp    eax,0xffffffff
    1459:	je     154e <main+0x25e>
    145f:	sub    eax,0x68
    1462:	cmp    eax,0xc
    1465:	ja     1bd5 <main+0x8e5>
    146b:	movsxd rax,DWORD PTR [rbx+rax*4]
    146f:	add    rax,rbx
    1472:	jmp    rax
    1474:	mov    r14,QWORD PTR [rip+0x201bad]        # 203028 <optarg@@GLIBC_2.2.5>
    147b:	lea    rdi,[rip+0xe44]        # 22c6 <_IO_stdin_used+0x46>
    1482:	mov    ecx,0x7
    1487:	mov    rsi,r14
    148a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    148c:	seta   al
    148f:	sbb    al,0x0
    1491:	test   al,al
    1493:	je     1534 <main+0x244>
    1499:	lea    rsi,[rip+0xe2d]        # 22cd <_IO_stdin_used+0x4d>
    14a0:	mov    rdi,r14
    14a3:	call   1170 <strcmp@plt>
    14a8:	test   eax,eax
    14aa:	je     1541 <main+0x251>
    14b0:	lea    rsi,[rip+0xe3c]        # 22f3 <_IO_stdin_used+0x73>
    14b7:	mov    rdi,r14
    14ba:	call   1170 <strcmp@plt>
    14bf:	test   eax,eax
    14c1:	jne    1c1a <main+0x92a>
    14c7:	mov    DWORD PTR [rsp+0x20],0x3
    14cf:	jmp    1440 <main+0x150>
    14d4:	mov    rdi,QWORD PTR [rip+0x201b4d]        # 203028 <optarg@@GLIBC_2.2.5>
    14db:	mov    edx,0xa
    14e0:	xor    esi,esi
    14e2:	call   11b0 <strtol@plt>
    14e7:	mov    DWORD PTR [rsp+0x10],eax
    14eb:	jmp    1440 <main+0x150>
    14f0:	mov    rdi,QWORD PTR [rip+0x201b31]        # 203028 <optarg@@GLIBC_2.2.5>
    14f7:	mov    edx,0xa
    14fc:	xor    esi,esi
    14fe:	call   11b0 <strtol@plt>
    1503:	mov    DWORD PTR [rsp+0x18],eax
    1507:	jmp    1440 <main+0x150>
    150c:	mov    BYTE PTR [rsp+0x27],0x1
    1511:	jmp    1440 <main+0x150>
    1516:	mov    rdx,QWORD PTR [rbp+0x0]
    151a:	lea    rsi,[rip+0xf67]        # 2488 <_IO_stdin_used+0x208>
    1521:	mov    edi,0x1
    1526:	xor    eax,eax
    1528:	call   1230 <__printf_chk@plt>
    152d:	xor    edi,edi
    152f:	call   12b0 <exit@plt>
    1534:	mov    DWORD PTR [rsp+0x20],0x2
    153c:	jmp    1440 <main+0x150>
    1541:	mov    DWORD PTR [rsp+0x20],0x1
    1549:	jmp    1440 <main+0x150>
    154e:	mov    r14d,eax
    1551:	movsxd rax,DWORD PTR [rip+0x201ac8]        # 203020 <optind@@GLIBC_2.2.5>
    1558:	cmp    eax,r12d
    155b:	jge    1d54 <main+0xa64>
    1561:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
    1566:	lea    rsi,[rsp+0x48]
    156b:	mov    edx,0xa
    1570:	call   11b0 <strtol@plt>
    1575:	mov    rbx,rax
    1578:	mov    rax,QWORD PTR [rsp+0x48]
    157d:	test   rax,rax
    1580:	je     158b <main+0x29b>
    1582:	cmp    BYTE PTR [rax],0x0
    1585:	jne    1d29 <main+0xa39>
    158b:	call   11a0 <xs_daemon_open@plt>
    1590:	test   rax,rax
    1593:	mov    QWORD PTR [rsp+0x8],rax
    1598:	je     1d14 <main+0xa24>
    159e:	lea    rsi,[rip+0x9ab]        # 1f50 <sighandler>
    15a5:	mov    edi,0xf
    15aa:	call   1180 <signal@plt>
    15af:	mov    rdi,QWORD PTR [rsp+0x8]
    15b4:	mov    esi,ebx
    15b6:	call   1190 <xs_get_domain_path@plt>
    15bb:	test   rax,rax
    15be:	mov    QWORD PTR [rsp+0x28],rax
    15c3:	je     1cff <main+0xa0f>
    15c9:	cmp    DWORD PTR [rsp+0x20],0x0
    15ce:	jne    1632 <main+0x342>
    15d0:	xor    edx,edx
    15d2:	xor    esi,esi
    15d4:	xor    edi,edi
    15d6:	call   10e0 <xc_interface_open@plt>
    15db:	test   rax,rax
    15de:	mov    rbp,rax
    15e1:	je     1e2a <main+0xb3a>
    15e7:	lea    rcx,[rsp+0xe0]
    15ef:	mov    edx,0x1
    15f4:	mov    esi,ebx
    15f6:	mov    rdi,rax
    15f9:	call   10f0 <xc_domain_getinfo@plt>
    15fe:	sub    eax,0x1
    1601:	jne    1e0d <main+0xb1d>
    1607:	cmp    ebx,DWORD PTR [rsp+0xe0]
    160e:	jne    1e0d <main+0xb1d>
    1614:	movzx  eax,BYTE PTR [rsp+0xe8]
    161c:	mov    rdi,rbp
    161f:	and    eax,0x40
    1622:	cmp    al,0x1
    1624:	sbb    eax,eax
    1626:	add    eax,0x2
    1629:	mov    DWORD PTR [rsp+0x20],eax
    162d:	call   1140 <xc_interface_close@plt>
    1632:	mov    rdi,QWORD PTR [rsp+0x28]
    1637:	or     r12,0xffffffffffffffff
    163b:	xor    eax,eax
    163d:	mov    rcx,r12
    1640:	repnz scas al,BYTE PTR es:[rdi]
    1642:	mov    rax,rcx
    1645:	not    rax
    1648:	lea    rdi,[rax+0x19]
    164c:	mov    rbp,rax
    164f:	call   1200 <malloc@plt>
    1654:	test   rax,rax
    1657:	mov    r15,rax
    165a:	je     1dfa <main+0xb0a>
    1660:	cmp    DWORD PTR [rsp+0x20],0x2
    1665:	je     1a9c <main+0x7ac>
    166b:	cmp    DWORD PTR [rsp+0x20],0x1
    1670:	je     1aef <main+0x7ff>
    1676:	cmp    DWORD PTR [rsp+0x20],0x3
    167b:	jne    169f <main+0x3af>
    167d:	mov    r9,QWORD PTR [rsp+0x28]
    1682:	lea    rsi,[rbp+0xc]
    1686:	lea    r8,[rip+0xd3d]        # 23ca <_IO_stdin_used+0x14a>
    168d:	mov    rdi,rax
    1690:	mov    rcx,r12
    1693:	mov    edx,0x1
    1698:	xor    eax,eax
    169a:	call   1050 <__snprintf_chk@plt>
    169f:	test   ebx,ebx
    16a1:	je     1dd3 <main+0xae3>
    16a7:	sub    rsp,0x8
    16ab:	lea    r9,[rip+0xd3f]        # 23f1 <_IO_stdin_used+0x171>
    16b2:	lea    r8,[rip+0xd4e]        # 2407 <_IO_stdin_used+0x187>
    16b9:	push   rbx
    16ba:	lea    rdi,[rip+0x2019df]        # 2030a0 <lockfile>
    16c1:	mov    edx,0x1
    16c6:	mov    ecx,0x1e
    16cb:	mov    esi,0x1e
    16d0:	xor    eax,eax
    16d2:	call   1050 <__snprintf_chk@plt>
    16d7:	pop    rax
    16d8:	pop    rdx
    16d9:	lea    rbp,[rip+0x2019c0]        # 2030a0 <lockfile>
    16e0:	lea    r12,[rsp+0xe0]
    16e8:	lea    r13,[rsp+0x50]
    16ed:	nop    DWORD PTR [rax]
    16f0:	xor    eax,eax
    16f2:	mov    edx,0x180
    16f7:	mov    esi,0x42
    16fc:	mov    rdi,rbp
    16ff:	call   1260 <open@plt>
    1704:	test   eax,eax
    1706:	mov    ebx,eax
    1708:	jns    1720 <main+0x430>
    170a:	jmp    1db7 <main+0xac7>
    170f:	nop
    1710:	call   1080 <__errno_location@plt>
    1715:	mov    edi,DWORD PTR [rax]
    1717:	cmp    edi,0x4
    171a:	jne    1a87 <main+0x797>
    1720:	mov    esi,0x6
    1725:	mov    edi,ebx
    1727:	call   1290 <flock@plt>
    172c:	test   eax,eax
    172e:	jne    1710 <main+0x420>
    1730:	mov    rdx,r12
    1733:	mov    esi,ebx
    1735:	mov    edi,0x1
    173a:	call   1210 <__fxstat@plt>
    173f:	test   eax,eax
    1741:	jne    1d9b <main+0xaab>
    1747:	mov    rdx,r13
    174a:	mov    rsi,rbp
    174d:	mov    edi,0x1
    1752:	call   11e0 <__xstat@plt>
    1757:	test   eax,eax
    1759:	je     1780 <main+0x490>
    175b:	call   1080 <__errno_location@plt>
    1760:	mov    edi,DWORD PTR [rax]
    1762:	cmp    edi,0x2
    1765:	jne    1d86 <main+0xa96>
    176b:	mov    edi,ebx
    176d:	call   1150 <close@plt>
    1772:	jmp    16f0 <main+0x400>
    1777:	nop    WORD PTR [rax+rax*1+0x0]
    1780:	mov    rax,QWORD PTR [rsp+0xe0]
    1788:	cmp    QWORD PTR [rsp+0x50],rax
    178d:	jne    176b <main+0x47b>
    178f:	mov    rax,QWORD PTR [rsp+0xe8]
    1797:	cmp    QWORD PTR [rsp+0x58],rax
    179c:	jne    176b <main+0x47b>
    179e:	lea    rdi,[rip+0x98b]        # 2130 <console_unlock>
    17a5:	mov    DWORD PTR [rip+0x201865],ebx        # 203010 <lockfd>
    17ab:	call   2260 <atexit>
    17b0:	mov    rdi,QWORD PTR [rsp+0x8]
    17b5:	lea    rdx,[rip+0xb81]        # 233d <_IO_stdin_used+0xbd>
    17bc:	mov    rsi,r15
    17bf:	call   10a0 <xs_watch@plt>
    17c4:	test   al,al
    17c6:	mov    ebp,eax
    17c8:	je     1d71 <main+0xa81>
    17ce:	mov    rbx,QWORD PTR [rsp+0x8]
    17d3:	mov    rdi,rbx
    17d6:	call   1100 <xs_fileno@plt>
    17db:	mov    rdi,rbx
    17de:	mov    edx,0x5
    17e3:	mov    rsi,r15
    17e6:	call   1f70 <get_pty_fd>
    17eb:	cmp    eax,0xffffffff
    17ee:	mov    ebx,eax
    17f0:	je     1c96 <main+0x9a6>
    17f6:	mov    edi,eax
    17f8:	mov    rsi,r13
    17fb:	call   2170 <init_term>
    1800:	xor    edi,edi
    1802:	call   10c0 <isatty@plt>
    1807:	test   eax,eax
    1809:	jne    1b9a <main+0x8aa>
    180f:	cmp    DWORD PTR [rsp+0x10],0xffffffff
    1814:	je     1844 <main+0x554>
    1816:	lea    rbp,[rip+0xe77]        # 2694 <msg.11403>
    181d:	mov    edi,DWORD PTR [rsp+0x10]
    1821:	mov    edx,0x1
    1826:	mov    rsi,rbp
    1829:	call   10d0 <write@plt>
    182e:	cmp    eax,0xffffffff
    1831:	je     19e7 <main+0x6f7>
    1837:	test   eax,eax
    1839:	je     181d <main+0x52d>
    183b:	mov    edi,DWORD PTR [rsp+0x10]
    183f:	call   1150 <close@plt>
    1844:	mov    rdi,QWORD PTR [rsp+0x8]
    1849:	lea    r13,[rsp+0x230]
    1851:	mov    ebp,r14d
    1854:	call   1100 <xs_fileno@plt>
    1859:	mov    esi,0x40
    185e:	cdq    
    185f:	mov    edi,eax
    1861:	mov    DWORD PTR [rsp+0x20],eax
    1865:	idiv   esi
    1867:	mov    eax,0x1
    186c:	mov    ecx,edx
    186e:	shl    rax,cl
    1871:	mov    QWORD PTR [rsp+0x10],rax
    1876:	movsxd rax,edi
    1879:	mov    QWORD PTR [rsp+0x18],rax
    187e:	xor    eax,eax
    1880:	mov    ecx,0x10
    1885:	mov    rdi,r12
    1888:	cld    
    1889:	rep stos QWORD PTR es:[rdi],rax
    188c:	cmp    BYTE PTR [rsp+0x27],0x0
    1891:	je     189e <main+0x5ae>
    1893:	or     QWORD PTR [rsp+0xe0],0x1
    189c:	xor    ebp,ebp
    189e:	mov    rdi,QWORD PTR [rsp+0x18]
    18a3:	call   1130 <__fdelt_chk@plt>
    18a8:	mov    rcx,QWORD PTR [rsp+0x10]
    18ad:	or     QWORD PTR [rsp+rax*8+0xe0],rcx
    18b5:	mov    eax,DWORD PTR [rsp+0x20]
    18b9:	cmp    eax,ebx
    18bb:	cmovl  eax,ebx
    18be:	cmp    ebx,0xffffffff
    18c1:	mov    esi,eax
    18c3:	je     18f6 <main+0x606>
    18c5:	movsxd rdi,ebx
    18c8:	mov    DWORD PTR [rsp+0x30],eax
    18cc:	call   1130 <__fdelt_chk@plt>
    18d1:	mov    rdi,rax
    18d4:	mov    eax,ebx
    18d6:	mov    r8d,0x40
    18dc:	cdq    
    18dd:	mov    esi,DWORD PTR [rsp+0x30]
    18e1:	idiv   r8d
    18e4:	mov    eax,0x1
    18e9:	mov    ecx,edx
    18eb:	shl    rax,cl
    18ee:	or     QWORD PTR [rsp+rdi*8+0xe0],rax
    18f6:	cmp    ebp,esi
    18f8:	cmovl  ebp,esi
    18fb:	xor    r8d,r8d
    18fe:	xor    ecx,ecx
    1900:	lea    edi,[rbp+0x1]
    1903:	xor    edx,edx
    1905:	mov    rsi,r12
    1908:	call   11d0 <select@plt>
    190d:	add    eax,0x1
    1910:	je     1a39 <main+0x749>
    1916:	mov    rdi,QWORD PTR [rsp+0x8]
    191b:	call   1100 <xs_fileno@plt>
    1920:	movsxd rdi,eax
    1923:	call   1130 <__fdelt_chk@plt>
    1928:	mov    rdi,QWORD PTR [rsp+0x8]
    192d:	mov    rsi,QWORD PTR [rsp+rax*8+0xe0]
    1935:	mov    QWORD PTR [rsp+0x30],rsi
    193a:	call   1100 <xs_fileno@plt>
    193f:	mov    ecx,0x40
    1944:	cdq    
    1945:	mov    rsi,QWORD PTR [rsp+0x30]
    194a:	idiv   ecx
    194c:	bt     rsi,rdx
    1950:	jb     1b65 <main+0x875>
    1956:	test   BYTE PTR [rsp+0xe0],0x1
    195e:	jne    1a09 <main+0x719>
    1964:	cmp    ebx,0xffffffff
    1967:	je     19d7 <main+0x6e7>
    1969:	movsxd rdi,ebx
    196c:	call   1130 <__fdelt_chk@plt>
    1971:	mov    rdi,rax
    1974:	mov    eax,ebx
    1976:	mov    esi,0x40
    197b:	cdq    
    197c:	idiv   esi
    197e:	mov    eax,0x1
    1983:	mov    ecx,edx
    1985:	shl    rax,cl
    1988:	test   QWORD PTR [rsp+rdi*8+0xe0],rax
    1990:	je     19d7 <main+0x6e7>
    1992:	mov    edx,0x200
    1997:	mov    rsi,r13
    199a:	mov    edi,ebx
    199c:	call   1160 <read@plt>
    19a1:	mov    r8,rax
    19a4:	lea    rax,[rax+0x1]
    19a8:	cmp    rax,0x1
    19ac:	ja     1c47 <main+0x957>
    19b2:	add    r8,0x1
    19b6:	jne    19c9 <main+0x6d9>
    19b8:	call   1080 <__errno_location@plt>
    19bd:	mov    eax,DWORD PTR [rax]
    19bf:	cmp    eax,0x4
    19c2:	je     19d3 <main+0x6e3>
    19c4:	cmp    eax,0xb
    19c7:	je     19d3 <main+0x6e3>
    19c9:	mov    edi,ebx
    19cb:	mov    ebx,r14d
    19ce:	call   1150 <close@plt>
    19d3:	mov    edx,ebx
    19d5:	mov    ebx,edx
    19d7:	mov    eax,DWORD PTR [rip+0x2016e3]        # 2030c0 <received_signal>
    19dd:	test   eax,eax
    19df:	je     187e <main+0x58e>
    19e5:	jmp    1a4a <main+0x75a>
    19e7:	call   1080 <__errno_location@plt>
    19ec:	mov    edi,DWORD PTR [rax]
    19ee:	cmp    edi,0x4
    19f1:	je     181d <main+0x52d>
    19f7:	mov    edx,DWORD PTR [rsp+0x10]
    19fb:	lea    rsi,[rip+0xc36]        # 2638 <_IO_stdin_used+0x3b8>
    1a02:	xor    eax,eax
    1a04:	call   11f0 <err@plt>
    1a09:	xor    edi,edi
    1a0b:	mov    edx,0x3c
    1a10:	mov    rsi,r13
    1a13:	call   1160 <read@plt>
    1a18:	cmp    rax,0x1
    1a1c:	je     1cab <main+0x9bb>
    1a22:	lea    rdx,[rax+0x1]
    1a26:	mov    r8,rax
    1a29:	cmp    rdx,0x1
    1a2d:	ja     1cbf <main+0x9cf>
    1a33:	add    rax,0x1
    1a37:	jne    1a4a <main+0x75a>
    1a39:	call   1080 <__errno_location@plt>
    1a3e:	mov    eax,DWORD PTR [rax]
    1a40:	cmp    eax,0x4
    1a43:	je     19d3 <main+0x6e3>
    1a45:	cmp    eax,0xb
    1a48:	je     19d3 <main+0x6e3>
    1a4a:	mov    rdi,r15
    1a4d:	call   1060 <free@plt>
    1a52:	mov    rdi,QWORD PTR [rsp+0x28]
    1a57:	call   1060 <free@plt>
    1a5c:	xor    eax,eax
    1a5e:	mov    rcx,QWORD PTR [rsp+0x438]
    1a66:	xor    rcx,QWORD PTR fs:0x28
    1a6f:	jne    1bd0 <main+0x8e0>
    1a75:	add    rsp,0x448
    1a7c:	pop    rbx
    1a7d:	pop    rbp
    1a7e:	pop    r12
    1a80:	pop    r13
    1a82:	pop    r14
    1a84:	pop    r15
    1a86:	ret    
    1a87:	lea    rdx,[rip+0x201612]        # 2030a0 <lockfile>
    1a8e:	lea    rsi,[rip+0x989]        # 241e <_IO_stdin_used+0x19e>
    1a95:	xor    eax,eax
    1a97:	call   11f0 <err@plt>
    1a9c:	sub    rsp,0x8
    1aa0:	lea    r8,[rip+0x8ea]        # 2391 <_IO_stdin_used+0x111>
    1aa7:	lea    rsi,[rbp+0x11]
    1aab:	mov    eax,DWORD PTR [rsp+0x20]
    1aaf:	mov    rcx,r12
    1ab2:	mov    edx,0x1
    1ab7:	mov    rdi,r15
    1aba:	push   rax
    1abb:	mov    r9,QWORD PTR [rsp+0x38]
    1ac0:	xor    eax,eax
    1ac2:	call   1050 <__snprintf_chk@plt>
    1ac7:	mov    rdi,QWORD PTR [rsp+0x18]
    1acc:	xor    ecx,ecx
    1ace:	xor    esi,esi
    1ad0:	mov    rdx,r15
    1ad3:	call   1280 <xs_read@plt>
    1ad8:	mov    rbp,rax
    1adb:	mov    rdi,rax
    1ade:	call   1060 <free@plt>
    1ae3:	test   rbp,rbp
    1ae6:	pop    rdi
    1ae7:	pop    r8
    1ae9:	jne    169f <main+0x3af>
    1aef:	mov    rdi,QWORD PTR [rsp+0x28]
    1af4:	or     rdx,0xffffffffffffffff
    1af8:	xor    eax,eax
    1afa:	mov    rcx,rdx
    1afd:	repnz scas al,BYTE PTR es:[rdi]
    1aff:	cmp    DWORD PTR [rsp+0x18],0x0
    1b04:	mov    rax,rcx
    1b07:	not    rax
    1b0a:	jne    1b33 <main+0x843>
    1b0c:	mov    r9,QWORD PTR [rsp+0x28]
    1b11:	lea    rsi,[rax+0xc]
    1b15:	lea    r8,[rip+0x886]        # 23a2 <_IO_stdin_used+0x122>
    1b1c:	mov    rcx,rdx
    1b1f:	mov    rdi,r15
    1b22:	mov    edx,0x1
    1b27:	xor    eax,eax
    1b29:	call   1050 <__snprintf_chk@plt>
    1b2e:	jmp    169f <main+0x3af>
    1b33:	sub    rsp,0x8
    1b37:	lea    rsi,[rax+0x1a]
    1b3b:	lea    r8,[rip+0x86f]        # 23b1 <_IO_stdin_used+0x131>
    1b42:	mov    eax,DWORD PTR [rsp+0x20]
    1b46:	mov    rcx,rdx
    1b49:	mov    rdi,r15
    1b4c:	mov    edx,0x1
    1b51:	push   rax
    1b52:	mov    r9,QWORD PTR [rsp+0x38]
    1b57:	xor    eax,eax
    1b59:	call   1050 <__snprintf_chk@plt>
    1b5e:	pop    rcx
    1b5f:	pop    rsi
    1b60:	jmp    169f <main+0x3af>
    1b65:	mov    rdi,QWORD PTR [rsp+0x8]
    1b6a:	xor    edx,edx
    1b6c:	mov    rsi,r15
    1b6f:	call   1f70 <get_pty_fd>
    1b74:	cmp    ebx,0xffffffff
    1b77:	mov    edx,eax
    1b79:	je     1b8a <main+0x89a>
    1b7b:	mov    edi,ebx
    1b7d:	mov    DWORD PTR [rsp+0x30],eax
    1b81:	call   1150 <close@plt>
    1b86:	mov    edx,DWORD PTR [rsp+0x30]
    1b8a:	cmp    edx,0xffffffff
    1b8d:	je     1a4a <main+0x75a>
    1b93:	mov    ebx,edx
    1b95:	jmp    19d7 <main+0x6e7>
    1b9a:	mov    edi,0x1
    1b9f:	call   10c0 <isatty@plt>
    1ba4:	test   eax,eax
    1ba6:	je     180f <main+0x51f>
    1bac:	lea    rsi,[rip+0x2014ad]        # 203060 <stdin_old_attr>
    1bb3:	xor    edi,edi
    1bb5:	call   2170 <init_term>
    1bba:	lea    rdi,[rip+0x39f]        # 1f60 <restore_term_stdin>
    1bc1:	call   2260 <atexit>
    1bc6:	mov    BYTE PTR [rsp+0x27],bpl
    1bcb:	jmp    180f <main+0x51f>
    1bd0:	call   1110 <__stack_chk_fail@plt>
    1bd5:	mov    rcx,QWORD PTR [rip+0x201464]        # 203040 <stderr@@GLIBC_2.2.5>
    1bdc:	lea    rdi,[rip+0x716]        # 22f9 <_IO_stdin_used+0x79>
    1be3:	mov    edx,0x11
    1be8:	mov    esi,0x1
    1bed:	call   12c0 <fwrite@plt>
    1bf2:	mov    rcx,QWORD PTR [rbp+0x0]
    1bf6:	lea    rdx,[rip+0x9cb]        # 25c8 <_IO_stdin_used+0x348>
    1bfd:	mov    rdi,QWORD PTR [rip+0x20143c]        # 203040 <stderr@@GLIBC_2.2.5>
    1c04:	mov    esi,0x1
    1c09:	xor    eax,eax
    1c0b:	call   12d0 <__fprintf_chk@plt>
    1c10:	mov    edi,0x16
    1c15:	call   12b0 <exit@plt>
    1c1a:	mov    rcx,QWORD PTR [rip+0x20141f]        # 203040 <stderr@@GLIBC_2.2.5>
    1c21:	lea    rdi,[rip+0x6a8]        # 22d0 <_IO_stdin_used+0x50>
    1c28:	mov    edx,0x16
    1c2d:	mov    esi,0x1
    1c32:	call   12c0 <fwrite@plt>
    1c37:	lea    rcx,[rip+0x6a9]        # 22e7 <_IO_stdin_used+0x67>
    1c3e:	lea    rdx,[rip+0x95b]        # 25a0 <_IO_stdin_used+0x320>
    1c45:	jmp    1bfd <main+0x90d>
    1c47:	xor    ecx,ecx
    1c49:	jmp    1c61 <main+0x971>
    1c4b:	mov    rcx,QWORD PTR [rsp+0x30]
    1c50:	mov    r8,QWORD PTR [rsp+0x38]
    1c55:	add    rcx,rax
    1c58:	cmp    r8,rcx
    1c5b:	jbe    19d7 <main+0x6e7>
    1c61:	mov    rdx,r8
    1c64:	lea    rsi,[r13+rcx*1+0x0]
    1c69:	mov    edi,0x1
    1c6e:	sub    rdx,rcx
    1c71:	mov    QWORD PTR [rsp+0x38],r8
    1c76:	mov    QWORD PTR [rsp+0x30],rcx
    1c7b:	call   10d0 <write@plt>
    1c80:	test   rax,rax
    1c83:	jg     1c4b <main+0x95b>
    1c85:	lea    rdi,[rip+0x7e7]        # 2473 <_IO_stdin_used+0x1f3>
    1c8c:	call   1270 <perror@plt>
    1c91:	jmp    1a4a <main+0x75a>
    1c96:	call   1080 <__errno_location@plt>
    1c9b:	mov    edi,DWORD PTR [rax]
    1c9d:	lea    rsi,[rip+0x7b1]        # 2455 <_IO_stdin_used+0x1d5>
    1ca4:	xor    eax,eax
    1ca6:	call   11f0 <err@plt>
    1cab:	cmp    BYTE PTR [rsp+0x230],0x1d
    1cb3:	je     1a4a <main+0x75a>
    1cb9:	mov    r8d,0x1
    1cbf:	xor    ecx,ecx
    1cc1:	jmp    1cd9 <main+0x9e9>
    1cc3:	mov    rcx,QWORD PTR [rsp+0x30]
    1cc8:	mov    r8,QWORD PTR [rsp+0x38]
    1ccd:	add    rcx,rax
    1cd0:	cmp    r8,rcx
    1cd3:	jbe    1964 <main+0x674>
    1cd9:	mov    rdx,r8
    1cdc:	lea    rsi,[r13+rcx*1+0x0]
    1ce1:	mov    edi,ebx
    1ce3:	sub    rdx,rcx
    1ce6:	mov    QWORD PTR [rsp+0x38],r8
    1ceb:	mov    QWORD PTR [rsp+0x30],rcx
    1cf0:	call   10d0 <write@plt>
    1cf5:	test   rax,rax
    1cf8:	jg     1cc3 <main+0x9d3>
    1cfa:	jmp    19c9 <main+0x6d9>
    1cff:	call   1080 <__errno_location@plt>
    1d04:	mov    edi,DWORD PTR [rax]
    1d06:	lea    rsi,[rip+0x64c]        # 2359 <_IO_stdin_used+0xd9>
    1d0d:	xor    eax,eax
    1d0f:	call   11f0 <err@plt>
    1d14:	call   1080 <__errno_location@plt>
    1d19:	mov    edi,DWORD PTR [rax]
    1d1b:	lea    rsi,[rip+0x61c]        # 233e <_IO_stdin_used+0xbe>
    1d22:	xor    eax,eax
    1d24:	call   11f0 <err@plt>
    1d29:	movsxd rax,DWORD PTR [rip+0x2012f0]        # 203020 <optind@@GLIBC_2.2.5>
    1d30:	mov    rdi,QWORD PTR [rip+0x201309]        # 203040 <stderr@@GLIBC_2.2.5>
    1d37:	lea    rdx,[rip+0x5ec]        # 232a <_IO_stdin_used+0xaa>
    1d3e:	mov    esi,0x1
    1d43:	mov    rcx,QWORD PTR [rbp+rax*8+0x0]
    1d48:	xor    eax,eax
    1d4a:	call   12d0 <__fprintf_chk@plt>
    1d4f:	jmp    1bf2 <main+0x902>
    1d54:	mov    rcx,QWORD PTR [rip+0x2012e5]        # 203040 <stderr@@GLIBC_2.2.5>
    1d5b:	mov    edx,0x1a
    1d60:	mov    esi,0x1
    1d65:	lea    rdi,[rip+0x5a3]        # 230f <_IO_stdin_used+0x8f>
    1d6c:	jmp    1bed <main+0x8fd>
    1d71:	call   1080 <__errno_location@plt>
    1d76:	mov    edi,DWORD PTR [rax]
    1d78:	lea    rsi,[rip+0x899]        # 2618 <_IO_stdin_used+0x398>
    1d7f:	xor    eax,eax
    1d81:	call   11f0 <err@plt>
    1d86:	lea    rdx,[rip+0x201313]        # 2030a0 <lockfile>
    1d8d:	lea    rsi,[rip+0x6af]        # 2443 <_IO_stdin_used+0x1c3>
    1d94:	xor    eax,eax
    1d96:	call   11f0 <err@plt>
    1d9b:	call   1080 <__errno_location@plt>
    1da0:	mov    edi,DWORD PTR [rax]
    1da2:	lea    rdx,[rip+0x2012f7]        # 2030a0 <lockfile>
    1da9:	lea    rsi,[rip+0x680]        # 2430 <_IO_stdin_used+0x1b0>
    1db0:	xor    eax,eax
    1db2:	call   11f0 <err@plt>
    1db7:	call   1080 <__errno_location@plt>
    1dbc:	mov    edi,DWORD PTR [rax]
    1dbe:	lea    rdx,[rip+0x2012db]        # 2030a0 <lockfile>
    1dc5:	lea    rsi,[rip+0x640]        # 240c <_IO_stdin_used+0x18c>
    1dcc:	xor    eax,eax
    1dce:	call   11f0 <err@plt>
    1dd3:	mov    rcx,QWORD PTR [rip+0x201266]        # 203040 <stderr@@GLIBC_2.2.5>
    1dda:	lea    rdi,[rip+0x5f8]        # 23d9 <_IO_stdin_used+0x159>
    1de1:	mov    edx,0x17
    1de6:	mov    esi,0x1
    1deb:	call   12c0 <fwrite@plt>
    1df0:	mov    edi,0x16
    1df5:	call   12b0 <exit@plt>
    1dfa:	lea    rsi,[rip+0x589]        # 238a <_IO_stdin_used+0x10a>
    1e01:	mov    edi,0xc
    1e06:	xor    eax,eax
    1e08:	call   11f0 <err@plt>
    1e0d:	mov    rdi,rbp
    1e10:	call   1140 <xc_interface_close@plt>
    1e15:	call   1080 <__errno_location@plt>
    1e1a:	mov    edi,DWORD PTR [rax]
    1e1c:	lea    rsi,[rip+0x7cd]        # 25f0 <_IO_stdin_used+0x370>
    1e23:	xor    eax,eax
    1e25:	call   11f0 <err@plt>
    1e2a:	call   1080 <__errno_location@plt>
    1e2f:	mov    edi,DWORD PTR [rax]
    1e31:	lea    rsi,[rip+0x536]        # 236e <_IO_stdin_used+0xee>
    1e38:	xor    eax,eax
    1e3a:	call   11f0 <err@plt>
    1e3f:	nop

0000000000001e40 <_start>:
    1e40:	xor    ebp,ebp
    1e42:	mov    r9,rdx
    1e45:	pop    rsi
    1e46:	mov    rdx,rsp
    1e49:	and    rsp,0xfffffffffffffff0
    1e4d:	push   rax
    1e4e:	push   rsp
    1e4f:	lea    r8,[rip+0x3fa]        # 2250 <__libc_csu_fini>
    1e56:	lea    rcx,[rip+0x383]        # 21e0 <__libc_csu_init>
    1e5d:	lea    rdi,[rip+0xfffffffffffff48c]        # 12f0 <main>
    1e64:	call   QWORD PTR [rip+0x201176]        # 202fe0 <__libc_start_main@GLIBC_2.2.5>
    1e6a:	hlt    
    1e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001e70 <deregister_tm_clones>:
    1e70:	lea    rdi,[rip+0x2011a1]        # 203018 <__TMC_END__>
    1e77:	push   rbp
    1e78:	lea    rax,[rip+0x201199]        # 203018 <__TMC_END__>
    1e7f:	cmp    rax,rdi
    1e82:	mov    rbp,rsp
    1e85:	je     1ea0 <deregister_tm_clones+0x30>
    1e87:	mov    rax,QWORD PTR [rip+0x20114a]        # 202fd8 <_ITM_deregisterTMCloneTable>
    1e8e:	test   rax,rax
    1e91:	je     1ea0 <deregister_tm_clones+0x30>
    1e93:	pop    rbp
    1e94:	jmp    rax
    1e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    1ea0:	pop    rbp
    1ea1:	ret    
    1ea2:	nop    DWORD PTR [rax+0x0]
    1ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001eb0 <register_tm_clones>:
    1eb0:	lea    rdi,[rip+0x201161]        # 203018 <__TMC_END__>
    1eb7:	lea    rsi,[rip+0x20115a]        # 203018 <__TMC_END__>
    1ebe:	push   rbp
    1ebf:	sub    rsi,rdi
    1ec2:	mov    rbp,rsp
    1ec5:	sar    rsi,0x3
    1ec9:	mov    rax,rsi
    1ecc:	shr    rax,0x3f
    1ed0:	add    rsi,rax
    1ed3:	sar    rsi,1
    1ed6:	je     1ef0 <register_tm_clones+0x40>
    1ed8:	mov    rax,QWORD PTR [rip+0x201111]        # 202ff0 <_ITM_registerTMCloneTable>
    1edf:	test   rax,rax
    1ee2:	je     1ef0 <register_tm_clones+0x40>
    1ee4:	pop    rbp
    1ee5:	jmp    rax
    1ee7:	nop    WORD PTR [rax+rax*1+0x0]
    1ef0:	pop    rbp
    1ef1:	ret    
    1ef2:	nop    DWORD PTR [rax+0x0]
    1ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000001f00 <__do_global_dtors_aux>:
    1f00:	cmp    BYTE PTR [rip+0x201141],0x0        # 203048 <completed.7697>
    1f07:	jne    1f38 <__do_global_dtors_aux+0x38>
    1f09:	cmp    QWORD PTR [rip+0x2010e7],0x0        # 202ff8 <__cxa_finalize@GLIBC_2.2.5>
    1f11:	push   rbp
    1f12:	mov    rbp,rsp
    1f15:	je     1f23 <__do_global_dtors_aux+0x23>
    1f17:	mov    rdi,QWORD PTR [rip+0x2010ea]        # 203008 <__dso_handle>
    1f1e:	call   12e0 <__cxa_finalize@plt>
    1f23:	call   1e70 <deregister_tm_clones>
    1f28:	mov    BYTE PTR [rip+0x201119],0x1        # 203048 <completed.7697>
    1f2f:	pop    rbp
    1f30:	ret    
    1f31:	nop    DWORD PTR [rax+0x0]
    1f38:	repz ret 
    1f3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001f40 <frame_dummy>:
    1f40:	push   rbp
    1f41:	mov    rbp,rsp
    1f44:	pop    rbp
    1f45:	jmp    1eb0 <register_tm_clones>
    1f4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001f50 <sighandler>:
    1f50:	mov    DWORD PTR [rip+0x201166],0x1        # 2030c0 <received_signal>
    1f5a:	ret    
    1f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001f60 <restore_term_stdin>:
    1f60:	lea    rdx,[rip+0x2010f9]        # 203060 <stdin_old_attr>
    1f67:	xor    esi,esi
    1f69:	xor    edi,edi
    1f6b:	jmp    1250 <tcsetattr@plt>

0000000000001f70 <get_pty_fd>:
    1f70:	push   r15
    1f72:	push   r14
    1f74:	push   r13
    1f76:	push   r12
    1f78:	mov    r13d,0x1
    1f7e:	push   rbp
    1f7f:	push   rbx
    1f80:	mov    ebp,edx
    1f82:	sub    rsp,0xd8
    1f89:	mov    QWORD PTR [rsp+0x10],rsi
    1f8e:	mov    QWORD PTR [rsp],rdi
    1f92:	lea    rbx,[rsp+0x40]
    1f97:	mov    rax,QWORD PTR fs:0x28
    1fa0:	mov    QWORD PTR [rsp+0xc8],rax
    1fa8:	xor    eax,eax
    1faa:	call   1100 <xs_fileno@plt>
    1faf:	xor    edi,edi
    1fb1:	movsxd r12,eax
    1fb4:	mov    DWORD PTR [rsp+0x2c],0x0
    1fbc:	call   11c0 <time@plt>
    1fc1:	mov    edi,r12d
    1fc4:	mov    esi,eax
    1fc6:	add    ebp,eax
    1fc8:	sar    edi,0x1f
    1fcb:	lea    rax,[rsp+0x2c]
    1fd0:	lea    r15d,[r12+0x1]
    1fd5:	shr    edi,0x1a
    1fd8:	lea    r14,[rsp+0x30]
    1fdd:	lea    ecx,[r12+rdi*1]
    1fe1:	mov    QWORD PTR [rsp+0x8],rax
    1fe6:	and    ecx,0x3f
    1fe9:	sub    ecx,edi
    1feb:	shl    r13,cl
    1fee:	jmp    2001 <get_pty_fd+0x91>
    1ff0:	xor    edi,edi
    1ff2:	call   11c0 <time@plt>
    1ff7:	cmp    ebp,eax
    1ff9:	mov    esi,eax
    1ffb:	jle    20a0 <get_pty_fd+0x130>
    2001:	mov    eax,ebp
    2003:	mov    QWORD PTR [rsp+0x38],0x0
    200c:	mov    ecx,0x10
    2011:	sub    eax,esi
    2013:	mov    rdi,rbx
    2016:	cdqe   
    2018:	mov    QWORD PTR [rsp+0x30],rax
    201d:	xor    eax,eax
    201f:	cld    
    2020:	rep stos QWORD PTR es:[rdi],rax
    2023:	mov    rdi,r12
    2026:	call   1130 <__fdelt_chk@plt>
    202b:	xor    ecx,ecx
    202d:	xor    edx,edx
    202f:	mov    r8,r14
    2032:	mov    rsi,rbx
    2035:	mov    edi,r15d
    2038:	or     QWORD PTR [rsp+rax*8+0x40],r13
    203d:	call   11d0 <select@plt>
    2042:	test   eax,eax
    2044:	je     1ff0 <get_pty_fd+0x80>
    2046:	mov    rsi,QWORD PTR [rsp+0x8]
    204b:	mov    rdi,QWORD PTR [rsp]
    204f:	call   1070 <xs_read_watch@plt>
    2054:	mov    rdi,rax
    2057:	call   1060 <free@plt>
    205c:	mov    rcx,QWORD PTR [rsp+0x8]
    2061:	mov    rdx,QWORD PTR [rsp+0x10]
    2066:	xor    esi,esi
    2068:	mov    rdi,QWORD PTR [rsp]
    206c:	call   1280 <xs_read@plt>
    2071:	test   rax,rax
    2074:	je     1ff0 <get_pty_fd+0x80>
    207a:	cmp    BYTE PTR [rax],0x0
    207d:	jne    20b0 <get_pty_fd+0x140>
    207f:	mov    rdi,rax
    2082:	call   1060 <free@plt>
    2087:	xor    edi,edi
    2089:	call   11c0 <time@plt>
    208e:	cmp    ebp,eax
    2090:	mov    esi,eax
    2092:	jg     2001 <get_pty_fd+0x91>
    2098:	nop    DWORD PTR [rax+rax*1+0x0]
    20a0:	mov    eax,0xffffffff
    20a5:	jmp    20dc <get_pty_fd+0x16c>
    20a7:	nop    WORD PTR [rax+rax*1+0x0]
    20b0:	mov    rdi,rax
    20b3:	mov    QWORD PTR [rsp+0x18],rax
    20b8:	mov    esi,0x102
    20bd:	xor    eax,eax
    20bf:	call   1260 <open@plt>
    20c4:	cmp    eax,0xffffffff
    20c7:	mov    rdx,QWORD PTR [rsp+0x18]
    20cc:	je     2108 <get_pty_fd+0x198>
    20ce:	mov    rdi,rdx
    20d1:	mov    DWORD PTR [rsp],eax
    20d4:	call   1060 <free@plt>
    20d9:	mov    eax,DWORD PTR [rsp]
    20dc:	mov    rbx,QWORD PTR [rsp+0xc8]
    20e4:	xor    rbx,QWORD PTR fs:0x28
    20ed:	jne    212b <get_pty_fd+0x1bb>
    20ef:	add    rsp,0xd8
    20f6:	pop    rbx
    20f7:	pop    rbp
    20f8:	pop    r12
    20fa:	pop    r13
    20fc:	pop    r14
    20fe:	pop    r15
    2100:	ret    
    2101:	nop    DWORD PTR [rax+0x0]
    2108:	lea    rdi,[rip+0x175]        # 2284 <_IO_stdin_used+0x4>
    210f:	mov    rsi,rdx
    2112:	xor    eax,eax
    2114:	call   10b0 <warn@plt>
    2119:	mov    rdx,QWORD PTR [rsp+0x18]
    211e:	mov    rdi,rdx
    2121:	call   1060 <free@plt>
    2126:	jmp    1ff0 <get_pty_fd+0x80>
    212b:	call   1110 <__stack_chk_fail@plt>

0000000000002130 <console_unlock>:
    2130:	cmp    BYTE PTR [rip+0x200f69],0x0        # 2030a0 <lockfile>
    2137:	je     2168 <console_unlock+0x38>
    2139:	push   rbx
    213a:	mov    ebx,DWORD PTR [rip+0x200ed0]        # 203010 <lockfd>
    2140:	cmp    ebx,0xffffffff
    2143:	je     2160 <console_unlock+0x30>
    2145:	lea    rdi,[rip+0x200f54]        # 2030a0 <lockfile>
    214c:	call   1090 <unlink@plt>
    2151:	mov    edi,ebx
    2153:	pop    rbx
    2154:	jmp    1150 <close@plt>
    2159:	nop    DWORD PTR [rax+0x0]
    2160:	pop    rbx
    2161:	ret    
    2162:	nop    WORD PTR [rax+rax*1+0x0]
    2168:	repz ret 
    216a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000002170 <init_term>:
    2170:	push   rbp
    2171:	push   rbx
    2172:	mov    ebp,edi
    2174:	mov    rbx,rsi
    2177:	sub    rsp,0x58
    217b:	mov    rax,QWORD PTR fs:0x28
    2184:	mov    QWORD PTR [rsp+0x48],rax
    2189:	xor    eax,eax
    218b:	call   1240 <tcgetattr@plt>
    2190:	cmp    eax,0xffffffff
    2193:	je     21b9 <init_term+0x49>
    2195:	mov    rsi,rbx
    2198:	mov    rbx,rsp
    219b:	mov    rdi,rsp
    219e:	mov    ecx,0xf
    21a3:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    21a5:	mov    rdi,rbx
    21a8:	call   1220 <cfmakeraw@plt>
    21ad:	mov    rdx,rbx
    21b0:	xor    esi,esi
    21b2:	mov    edi,ebp
    21b4:	call   1250 <tcsetattr@plt>
    21b9:	mov    rax,QWORD PTR [rsp+0x48]
    21be:	xor    rax,QWORD PTR fs:0x28
    21c7:	jne    21d0 <init_term+0x60>
    21c9:	add    rsp,0x58
    21cd:	pop    rbx
    21ce:	pop    rbp
    21cf:	ret    
    21d0:	call   1110 <__stack_chk_fail@plt>
    21d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    21df:	nop

00000000000021e0 <__libc_csu_init>:
    21e0:	push   r15
    21e2:	push   r14
    21e4:	mov    r15,rdx
    21e7:	push   r13
    21e9:	push   r12
    21eb:	lea    r12,[rip+0x200a66]        # 202c58 <__frame_dummy_init_array_entry>
    21f2:	push   rbp
    21f3:	lea    rbp,[rip+0x200a66]        # 202c60 <__init_array_end>
    21fa:	push   rbx
    21fb:	mov    r13d,edi
    21fe:	mov    r14,rsi
    2201:	sub    rbp,r12
    2204:	sub    rsp,0x8
    2208:	sar    rbp,0x3
    220c:	call   1020 <_init>
    2211:	test   rbp,rbp
    2214:	je     2236 <__libc_csu_init+0x56>
    2216:	xor    ebx,ebx
    2218:	nop    DWORD PTR [rax+rax*1+0x0]
    2220:	mov    rdx,r15
    2223:	mov    rsi,r14
    2226:	mov    edi,r13d
    2229:	call   QWORD PTR [r12+rbx*8]
    222d:	add    rbx,0x1
    2231:	cmp    rbp,rbx
    2234:	jne    2220 <__libc_csu_init+0x40>
    2236:	add    rsp,0x8
    223a:	pop    rbx
    223b:	pop    rbp
    223c:	pop    r12
    223e:	pop    r13
    2240:	pop    r14
    2242:	pop    r15
    2244:	ret    
    2245:	nop
    2246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000002250 <__libc_csu_fini>:
    2250:	repz ret 
    2252:	nop    WORD PTR cs:[rax+rax*1+0x0]
    225c:	nop    DWORD PTR [rax+0x0]

0000000000002260 <atexit>:
    2260:	mov    rdx,QWORD PTR [rip+0x200da1]        # 203008 <__dso_handle>
    2267:	xor    esi,esi
    2269:	jmp    12a0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000002270 <_fini>:
    2270:	sub    rsp,0x8
    2274:	add    rsp,0x8
    2278:	ret    
