htriple "ht_10000544f"
 Separations ""
 Assertions  ""
 Pre   "RCX = 0x1800100010001 ; RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
 Instruction "10000544f: BT RCX, RAX 4"
 Post  "RCX = 0x1800100010001 ; RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
  by (htriple_solver seps: conjI[OF seps asserts,simplified] assms: assms)

htriple "ht_1000053ac"
 Separations ""
 Assertions  ""
 Pre   "RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
 Instruction "1000053ac: BT EAX, 14 4"
 Post  "RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
  by (htriple_solver seps: conjI[OF seps asserts,simplified] assms: assms)


htriple "ht_100005386"
 Separations ""
 Assertions  ""
 Pre   "RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
 Instruction "100005386: BT EAX, 13 4"
 Post  "RSP = (RSP_0 -64 392) ; RBP = (RSP_0 -64 8) ; [RSP_0,8] = [RSP_0,8]_0 ; [0x10000c008,8] = [0x10000c008,8]_0 ; [(RSP_0 -64 8),8] = RBP_0 ; [(RSP_0 -64 16),8] = R15_0 ; [(RSP_0 -64 24),8] = R14_0 ; [(RSP_0 -64 32),8] = R13_0 ; [(RSP_0 -64 40),8] = R12_0 ; [(RSP_0 -64 48),8] = RBX_0 ; [(RSP_0 -64 56),8] = [[0x10000c008,8]_0,8]_0 ; [(RSP_0 -64 64),8] = 0 ; [(RSP_0 -64 72),8] = 1 ; [(RSP_0 -64 120),8] = bot(fun__archive_match_new) ; [(RSP_0 -64 192),4] = b32(bot(fun__geteuid)) ; [(RSP_0 -64 224),8] = RSI_0 ; [(RSP_0 -64 228),4] = b32(RDI_0) ; [(RSP_0 -64 232),4] = 0xffffffff ; [(RSP_0 -64 256),8] = bot(fun_0x100004559)"
  by (htriple_solver seps: conjI[OF seps asserts,simplified] assms: assms)